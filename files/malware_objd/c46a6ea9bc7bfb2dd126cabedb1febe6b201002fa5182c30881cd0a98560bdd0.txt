
c46a6ea9bc7bfb2dd126cabedb1febe6b201002fa5182c30881cd0a98560bdd0.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sbb    eax,DWORD PTR [esi+0x23]
  411003:	and    ah,BYTE PTR [eax+edi*8-0x74da8e5d]
  41100a:	or     al,0x54
  41100c:	popf   
  41100d:	fwait
  41100e:	ds jge 0x41102e
  411011:	sbb    DWORD PTR [edi-0x26e8d4f6],edi
  411017:	pop    ebp
  411018:	in     eax,dx
  411019:	scas   al,BYTE PTR es:[edi]
  41101a:	in     al,dx
  41101b:	jle    0x411050
  41101d:	aam    0xcc
  41101f:	or     eax,0x75c667ec
  411024:	out    dx,eax
  411025:	frstor ds:0x5963bca5
  41102b:	jge    0x411098
  41102d:	mov    edx,DWORD PTR [esi+0x1]
  411030:	sub    al,0xe2
  411032:	stos   BYTE PTR es:[edi],al
  411033:	imul   edx,DWORD PTR [esi],0x94870b47
  411039:	sbb    DWORD PTR [edx],edi
  41103b:	ficomp DWORD PTR [ebp+ebx*8+0x4d]
  41103f:	xchg   DWORD PTR [eax+0x25],edx
  411042:	sub    edx,DWORD PTR [edi]
  411044:	inc    eax
  411045:	test   DWORD PTR gs:[edx],edx
  411048:	mov    ah,ah
  41104a:	push   ebp
  41104b:	xchg   edi,eax
  41104c:	jae    0x411056
  41104e:	ret    0xfeb7
  411051:	mov    gs,WORD PTR [eax+eiz*2+0x71]
  411055:	xchg   ebx,eax
  411056:	jno    0x410ff7
  411058:	(bad)  
  411059:	push   0xf444e867
  41105e:	adc    al,0x5c
  411060:	push   edx
  411061:	sbb    dl,bh
  411063:	adc    edi,DWORD PTR [ebx+0x618ae948]
  411069:	dec    ebp
  41106a:	jns    0x411089
  41106c:	or     cl,BYTE PTR [edi]
  41106e:	out    0x43,eax
  411070:	test   BYTE PTR [ecx],bl
  411072:	lods   eax,DWORD PTR ds:[esi]
  411073:	jmp    0xd759:0xaa18f86d
  41107a:	and    BYTE PTR [edi+0x38],dh
  41107d:	int3   
  41107e:	push   ebp
  41107f:	xchg   edi,eax
  411080:	dec    eax
  411081:	cdq    
  411082:	aaa    
  411083:	jmp    0x26a5484e
  411088:	push   eax
  411089:	and    eax,0xa79ff56c
  41108e:	int3   
  41108f:	xor    BYTE PTR cs:[edi],al
  411092:	inc    esi
  411093:	or     edi,DWORD PTR [edi-0x4d]
  411096:	cmp    esp,esp
  411098:	or     ebx,edx
  41109a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41109b:	xor    ecx,DWORD PTR [ebp-0x34]
  41109e:	stos   BYTE PTR es:[edi],al
  41109f:	test   edi,eax
  4110a1:	clc    
  4110a2:	mov    edi,0xa615f2ea
  4110a7:	mov    dh,0xfe
  4110a9:	sbb    DWORD PTR [di],0xd3bb7d04
  4110b0:	mov    bh,0x89
  4110b2:	dec    edi
  4110b3:	sub    bh,ch
  4110b5:	scas   al,BYTE PTR es:[edi]
  4110b6:	(bad)  
  4110b7:	xchg   WORD PTR [ecx+0x7e],bx
  4110bb:	aaa    
  4110bc:	fcmovu st,st(7)
  4110be:	xchg   ebp,eax
  4110bf:	jmp    0x89941383
  4110c4:	(bad)  
  4110c5:	int    0xfa
  4110c7:	and    BYTE PTR [edx+0x2fd184b0],dl
  4110cd:	xor    DWORD PTR [eax+0xf7c2238],esp
  4110d3:	and    bl,ah
  4110d5:	dec    eax
  4110d6:	xor    eax,0x1e6b530
  4110db:	push   esp
  4110dc:	or     eax,0x2eb3fc74
  4110e1:	and    eax,DWORD PTR [ecx]
  4110e3:	call   0x6ada:0xa507d8a6
  4110ea:	retf   
  4110eb:	fnsave ds:0xdfe9814e
  4110f1:	js     0x41111c
  4110f3:	xor    BYTE PTR [eax-0x6e149470],dh
  4110f9:	mov    WORD PTR [eax],?
  4110fb:	xlat   BYTE PTR ds:[ebx]
  4110fc:	push   ebx
  4110fd:	les    eax,FWORD PTR [esi]
  4110ff:	in     al,dx
  411100:	mov    dl,0x56
  411102:	xor    al,0x73
  411104:	and    eax,0xcdc99533
  411109:	mov    esi,0x1ff9bfa7
  41110e:	ficom  WORD PTR [ecx-0x3c]
  411111:	pop    ds
  411112:	fiadd  WORD PTR [ebp+0x6a]
  411115:	cs sahf 
  411117:	sub    al,0x64
  411119:	mov    esp,0xb2eab70
  41111e:	dec    edx
  41111f:	inc    ecx
  411120:	mov    ch,0x9c
  411122:	int3   
  411123:	sbb    eax,0xcb79a626
  411128:	sub    eax,0x352b15a4
  41112d:	test   al,0x97
  41112f:	pop    edi
  411130:	pop    ebp
  411131:	inc    ebx
  411132:	sahf   
  411133:	out    0xac,al
  411135:	in     al,dx
  411136:	mov    fs,WORD PTR [ebx+0x4cc7c79a]
  41113c:	jne    0x411102
  41113e:	test   DWORD PTR [edi+0x3ccf1afc],esp
  411144:	mov    al,0x20
  411146:	pop    edx
  411147:	sbb    edx,DWORD PTR [eiz*2-0x37fa1506]
  41114e:	jae    0x4111c8
  411150:	adc    ch,BYTE PTR [edi-0x3b]
  411153:	cld    
  411154:	mov    WORD PTR [edi-0x16c023c3],?
  41115a:	adc    BYTE PTR [ebp+0x7e51a2c5],cl
  411160:	xor    ebx,edi
  411162:	cli    
  411163:	stc    
  411164:	enter  0xede8,0xd2
  411168:	or     bh,ah
  41116a:	jmp    FWORD PTR [edx-0x4349c712]
  411170:	cmp    bl,BYTE PTR [edi]
  411172:	lods   eax,DWORD PTR ds:[esi]
  411173:	push   edx
  411174:	inc    esi
  411175:	test   BYTE PTR [edx+0x5c],dh
  411178:	xchg   edi,eax
  411179:	inc    edi
  41117a:	xchg   ecx,eax
  41117b:	and    eax,0x22d5b30b
  411180:	jecxz  0x411153
  411182:	int    0x46
  411184:	sahf   
  411185:	sbb    BYTE PTR [ecx],bl
  411187:	xor    eax,0x1e760457
  41118c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41118d:	(bad)  
  41118e:	call   0x2139:0x1c12e165
  411195:	(bad)  
  411196:	mov    ebp,0x1eac986c
  41119b:	cmp    DWORD PTR fs:[edx],esp
  41119e:	loopne 0x41120c
  4111a0:	jne    0x411128
  4111a2:	push   ss
  4111a3:	jno    0x411191
  4111a5:	xor    eax,0x4b9a94ae
  4111aa:	rcr    BYTE PTR [ebx+0x4b],0x3c
  4111ae:	(bad)  
  4111af:	or     DWORD PTR [ecx-0x23363323],esi
  4111b5:	cmp    esp,edx
  4111b7:	mov    eax,0xaaf9fab7
  4111bc:	and    esi,ecx
  4111be:	pushf  
  4111bf:	lods   eax,DWORD PTR es:[esi]
  4111c1:	mov    ebx,0xf55b7706
  4111c6:	fiadd  WORD PTR [edi-0x42]
  4111c9:	outs   dx,BYTE PTR ds:[esi]
  4111ca:	test   eax,0x2b2a1be1
  4111cf:	adc    dh,bh
  4111d1:	int3   
  4111d2:	fs xchg ecx,eax
  4111d4:	sbb    al,0x7a
  4111d6:	and    BYTE PTR [edx-0x73b1ed44],cl
  4111dc:	test   eax,0x5a4df019
  4111e1:	jmp    0x411253
  4111e3:	stos   DWORD PTR es:[edi],eax
  4111e4:	(bad)  
  4111e5:	push   eax
  4111e6:	push   esp
  4111e7:	pop    es
  4111e8:	les    ecx,FWORD PTR [ebp+0x7a2f3ef8]
  4111ee:	shr    DWORD PTR [esp+ebp*8+0x7d9c6725],cl
  4111f5:	mov    ebp,0xc0f751d6
  4111fa:	jecxz  0x4111a8
  4111fc:	dec    edx
  4111fd:	cld    
  4111fe:	aas    
  4111ff:	ins    BYTE PTR es:[edi],dx
  411200:	js     0x4111c8
  411202:	mov    dh,0x2
  411204:	mov    al,0x40
  411206:	ins    DWORD PTR es:[edi],dx
  411207:	pop    ebx
  411208:	ret    
  411209:	sub    DWORD PTR [ecx],ebp
  41120b:	jp     0x411191
  41120d:	out    dx,al
  41120e:	lahf   
  41120f:	sub    al,0x89
  411211:	push   0x2b
  411213:	add    ebp,DWORD PTR [esi-0x24716af1]
  411219:	sub    edi,edi
  41121b:	(bad)  
  41121c:	fndisi(8087 only) 
  41121e:	mov    ah,0xa0
  411220:	dec    esp
  411221:	lea    ecx,[eax]
  411223:	jmp    0xba3534fe
  411228:	aas    
  411229:	xlat   BYTE PTR ds:[ebx]
  41122a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41122b:	pop    ss
  41122c:	mov    dh,0x8f
  41122e:	xchg   BYTE PTR [ebx-0x40bbb558],dh
  411234:	lods   al,BYTE PTR ds:[esi]
  411235:	daa    
  411236:	nop
  411237:	cwde   
  411238:	mov    ds:0x701d38cc,eax
  41123d:	repz dec esi
  41123f:	pop    esi
  411240:	int    0x97
  411242:	gs dec ecx
  411244:	loope  0x41120c
  411246:	mov    ecx,0xeec4415a
  41124b:	in     eax,dx
  41124c:	jmp    0x411205
  41124e:	xor    BYTE PTR [edi-0x26],dl
  411251:	push   0xffffff91
  411253:	or     BYTE PTR [eax+0x7decca5],bh
  411259:	dec    edx
  41125a:	aad    0x87
  41125c:	shl    BYTE PTR [ebx+0x60],0x35
  411260:	mov    edx,0x61543fca
  411265:	sub    ebx,ebx
  411267:	cld    
  411268:	ins    DWORD PTR es:[edi],dx
  411269:	dec    ecx
  41126a:	test   DWORD PTR ds:0xddc177f4,esp
  411270:	data16 in al,dx
  411272:	in     eax,0x77
  411274:	stc    
  411275:	cdq    
  411276:	or     bl,ch
  411278:	inc    ecx
  411279:	hlt    
  41127a:	test   BYTE PTR [edx+0x3c],ch
  41127d:	mov    al,ds:0x81fd184b
  411282:	aam    0xa9
  411284:	fs mov bl,ah
  411287:	push   edi
  411289:	xchg   esi,eax
  41128a:	jo     0x4112f2
  41128c:	loopne 0x4112f4
  41128e:	mov    ebp,0xf9d10b77
  411293:	or     BYTE PTR [ebx-0x3defeab],ah
  411299:	jne    0x4112ca
  41129b:	shl    BYTE PTR [ecx-0x42],cl
  41129e:	das    
  41129f:	pop    esi
  4112a0:	jnp    0x411262
  4112a2:	test   DWORD PTR [ecx+ebx*8+0x43049d10],ebx
  4112a9:	push   cs
  4112aa:	or     dh,BYTE PTR [eax]
  4112ac:	sti    
  4112ad:	inc    ebx
  4112ae:	mov    ah,0x1a
  4112b0:	fdivr  QWORD PTR [ecx]
  4112b2:	sub    al,0x46
  4112b4:	cld    
  4112b5:	add    al,0xd7
  4112b7:	test   DWORD PTR [esi-0xc],0x37a33bab
  4112be:	sbb    ch,bl
  4112c0:	or     DWORD PTR [ecx+0x25],esp
  4112c3:	or     esi,DWORD PTR [ebp+0x40]
  4112c6:	cmp    bl,ah
  4112c8:	popf   
  4112c9:	cmp    eax,0xba342d74
  4112ce:	lods   eax,DWORD PTR ds:[esi]
  4112cf:	(bad)  
  4112d0:	or     DWORD PTR [eax-0x3021267d],0xffffffc1
  4112d7:	fs enter 0x3704,0xf1
  4112dc:	in     eax,dx
  4112dd:	xchg   DWORD PTR [edi+eax*8-0x74a3d3ef],eax
  4112e4:	repnz pop ds
  4112e6:	push   esp
  4112e7:	and    cl,bh
  4112e9:	xchg   esp,eax
  4112ea:	add    DWORD PTR [esi+0x23],edi
  4112ed:	push   ebx
  4112ee:	es mov ebp,0xef0d0e62
  4112f4:	data16 mov dl,0xca
  4112f7:	pop    ss
  4112f8:	rol    BYTE PTR [eax],cl
  4112fa:	out    dx,al
  4112fb:	es push es
  4112fd:	and    BYTE PTR [esi*2-0x63200673],al
  411304:	mov    dl,0xa7
  411306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411307:	pusha  
  411308:	mov    edx,0x9d8aca
  41130d:	pop    edi
  41130e:	sub    eax,0x6352c850
  411313:	mov    cl,0x6f
  411315:	int    0x9d
  411317:	shl    BYTE PTR [ecx+0x64803554],0xb1
  41131e:	ror    dl,1
  411320:	adc    dl,bh
  411322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411323:	and    BYTE PTR [esi+ebp*4+0x19],cl
  411327:	test   BYTE PTR [edi-0x9],0xbc
  41132b:	imul   edi,DWORD PTR [ebp+0x58930deb],0x68
  411332:	push   eax
  411333:	mov    eax,0x4798e8c1
  411338:	push   edi
  411339:	sbb    BYTE PTR [edi-0x7f1db2cb],0x76
  411340:	sbb    DWORD PTR [ebp-0x1b],0x54
  411344:	sub    al,0xc2
  411346:	pop    es
  411347:	out    0xbb,al
  411349:	mov    al,0x3a
  41134b:	mov    esi,0xbc9ef59d
  411350:	cmp    BYTE PTR [ebx],0x72
  411353:	arpl   sp,sp
  411355:	dec    edi
  411356:	cmp    BYTE PTR [esp+ecx*4-0x71],al
  41135a:	int    0x4
  41135c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41135d:	jecxz  0x41132c
  41135f:	push   ds
  411360:	xlat   BYTE PTR ds:[ebx]
  411361:	jno    0x41134d
  411363:	sbb    eax,0xf0ca73e8
  411368:	or     al,0xed
  41136a:	sbb    DWORD PTR [ecx-0x33],edx
  41136d:	imul   ebx,DWORD PTR [esi+eiz*4],0xefcbd426
  411374:	sub    BYTE PTR [eax+0x27],al
  411377:	inc    esi
  411378:	mov    ebx,0x4c3ce33e
  41137d:	(bad)  
  41137f:	dec    ebp
  411380:	aaa    
  411381:	sub    BYTE PTR [ecx-0x2c485443],al
  411387:	hlt    
  411388:	mov    esp,fs
  41138a:	push   0xffffffc3
  41138c:	stc    
  41138d:	or     BYTE PTR [ecx+0x45780b14],dl
  411393:	fnsave [ebx-0x5c]
  411396:	push   ds
  411397:	lods   al,BYTE PTR ds:[esi]
  411398:	or     ch,ah
  41139a:	xor    ecx,DWORD PTR [esi-0x6d]
  41139d:	pop    es
  41139e:	and    bl,BYTE PTR [edx-0x414437ca]
  4113a4:	bound  edi,QWORD PTR [ecx+edi*8-0x366a23b]
  4113ab:	mov    eax,ds:0x732a0882
  4113b0:	popa   
  4113b1:	xchg   esp,eax
  4113b2:	xlat   BYTE PTR ds:[ebx]
  4113b3:	int    0x15
  4113b5:	xchg   ecx,eax
  4113b6:	mov    WORD PTR [eax+eax*1+0x28526312],?
  4113bd:	enter  0xd074,0x74
  4113c1:	mov    edx,DWORD PTR [eax+0x35a61678]
  4113c7:	(bad)  
  4113c8:	in     al,0xa1
  4113ca:	adc    eax,0x6b3ed3ca
  4113cf:	mov    edi,0xa0242868
  4113d4:	push   es
  4113d5:	jecxz  0x411389
  4113d7:	mov    edi,0x94b33318
  4113dc:	jnp    0x4113de
  4113de:	adc    DWORD PTR [edx-0x5f],esi
  4113e1:	fsub   DWORD PTR ds:0xc8be1300
  4113e7:	xor    BYTE PTR [ebx+edx*2+0x6c],0xe2
  4113ec:	ins    BYTE PTR es:[edi],dx
  4113ed:	push   es
  4113ee:	loope  0x411462
  4113f0:	sbb    ecx,DWORD PTR [ecx]
  4113f2:	cwde   
  4113f3:	push   ss
  4113f4:	lods   eax,DWORD PTR ds:[esi]
  4113f5:	test   eax,0xe790a982
  4113fa:	add    al,0xfb
  4113fc:	pushf  
  4113fd:	jl     0x411432
  4113ff:	mov    cl,0x8a
  411401:	jmp    0x41146e
  411403:	mov    esi,DWORD PTR [esi-0x4cf9d871]
  411409:	add    DWORD PTR [ebx+0x12d665ca],ebx
  41140f:	out    0x36,al
  411411:	inc    ebx
  411412:	into   
  411413:	jecxz  0x4113b0
  411415:	xor    ecx,edi
  411417:	out    0x16,eax
  411419:	fs out 0x23,eax
  41141c:	fdiv   QWORD PTR [ebx+0x6e]
  41141f:	mov    ah,0x48
  411421:	rcl    DWORD PTR [ebx+0x5a382243],1
  411427:	xchg   BYTE PTR [esi],bh
  411429:	xor    cl,BYTE PTR [ebx]
  41142b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41142c:	pushf  
  41142d:	xlat   BYTE PTR ds:[ebx]
  41142e:	adc    bh,bl
  411430:	pop    ecx
  411431:	test   BYTE PTR [esi],ah
  411433:	enter  0xeafa,0x67
  411437:	xor    dl,BYTE PTR [edi-0x61b7dd69]
  41143d:	bound  esi,QWORD PTR [edx+0x2b42fcc3]
  411443:	daa    
  411444:	push   ecx
  411445:	ins    BYTE PTR es:[edi],dx
  411446:	leave  
  411447:	out    dx,al
  411448:	pop    eax
  411449:	xchg   BYTE PTR [ebx],bh
  41144b:	mov    dl,0xca
  41144d:	mov    esi,DWORD PTR [ebp+0x2e]
  411450:	sub    edx,DWORD PTR [esi-0x55c4184e]
  411456:	daa    
  411457:	jecxz  0x4114a8
  411459:	fisttp WORD PTR [ecx-0x451a35d3]
  41145f:	outs   dx,BYTE PTR ds:[esi]
  411460:	add    edx,DWORD PTR [esi+0x575d9715]
  411466:	add    ah,BYTE PTR [ecx+0x65]
  411469:	push   0xe
  41146b:	xchg   ecx,eax
  41146c:	rcl    BYTE PTR [edx-0x63e35e04],0x13
  411473:	inc    eax
  411474:	xor    esp,ebx
  411476:	dec    esp
  411477:	pop    ecx
  411478:	fidivr WORD PTR [esi]
  41147a:	mov    edi,0x7ebef1bf
  41147f:	fwait
  411480:	ret    
  411481:	jns    0x411434
  411483:	inc    esp
  411484:	cdq    
  411485:	cdq    
  411486:	pushf  
  411487:	test   al,0xe6
  411489:	arpl   bx,di
  41148b:	sub    DWORD PTR [ebx+0x2253b0eb],0x38f54b53
  411495:	mov    eax,0xb9c7c005
  41149a:	sbb    esp,DWORD PTR [edx+esi*2-0x5d9e2dbb]
  4114a1:	call   0x339b5d41
  4114a6:	dec    ebx
  4114a7:	fcom   QWORD PTR [eax]
  4114a9:	push   ebx
  4114aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114ab:	retf   
  4114ac:	leave  
  4114ad:	scas   eax,DWORD PTR es:[edi]
  4114ae:	pop    es
  4114af:	and    dh,BYTE PTR ds:[ebx+edi*4+0x1189c170]
  4114b7:	mov    al,ds:0x29be90a5
  4114bc:	dec    ebx
  4114bd:	or     ch,cl
  4114bf:	adc    DWORD PTR [eax],ebp
  4114c1:	aaa    
  4114c2:	(bad)  
  4114c3:	popf   
  4114c4:	push   esi
  4114c5:	loope  0x4114dd
  4114c7:	mov    ebx,0x1e0abe0a
  4114cc:	iret   
  4114cd:	mov    ebx,0x41e21ca4
  4114d2:	pop    edi
  4114d3:	dec    edi
  4114d4:	mov    ebx,0x4d330526
  4114d9:	mov    WORD PTR [edx],?
  4114db:	outs   dx,BYTE PTR ds:[esi]
  4114dc:	push   ecx
  4114dd:	sar    DWORD PTR [edx],0x4a
  4114e0:	adc    bh,BYTE PTR [esi-0x39]
  4114e3:	and    DWORD PTR [edi],ebx
  4114e5:	rcl    DWORD PTR [ebx+0x27d07bd4],1
  4114eb:	add    BYTE PTR [ebx+ebp*8-0x206016ca],0xd6
  4114f3:	push   ebx
  4114f4:	jbe    0x41149d
  4114f6:	nop
  4114f7:	jns    0x4114fa
  4114f9:	adc    DWORD PTR [ebp-0x51],edi
  4114fc:	cwde   
  4114fd:	out    0x30,al
  4114ff:	loop   0x411493
  411501:	pop    ecx
  411502:	(bad)  
  411503:	push   edi
  411504:	sbb    cl,bh
  411506:	mov    ds:0x6a179410,eax
  41150b:	push   0xbe98686
  411510:	xor    edi,DWORD PTR [esi]
  411512:	and    edi,edx
  411514:	cmp    dl,BYTE PTR [ebx-0x7c]
  411517:	xchg   ebx,eax
  411518:	lea    ecx,[edi-0x654e9ccb]
  41151e:	dec    edi
  41151f:	mov    ecx,0x5296bff3
  411524:	pop    ss
  411525:	cmc    
  411526:	adc    DWORD PTR [ebx],0xb05272d4
  41152c:	sbb    al,0x5e
  41152e:	mov    eax,ds:0xc3def881
  411533:	sub    eax,0x392f5c3a
  411538:	das    
  411539:	lsl    ebp,WORD PTR [ebp-0x2cacc978]
  411540:	jbe    0x4114f7
  411542:	xchg   DWORD PTR [edi-0x9],ebx
  411545:	mov    dh,0x23
  411547:	xor    eax,0xedf4ec5b
  41154c:	xchg   dl,ah
  41154e:	stos   BYTE PTR es:[edi],al
  41154f:	stc    
  411550:	xor    BYTE PTR [ecx],cl
  411552:	mov    esi,eax
  411554:	dec    ebp
  411555:	jle    0x411501
  411557:	jecxz  0x4115b0
  411559:	cld    
  41155a:	jl     0x411536
  41155c:	mov    esp,DWORD PTR [esi+edx*2-0x4e02f79e]
  411563:	sbb    DWORD PTR [eax-0x6d50ab9d],ebx
  411569:	sbb    al,0x55
  41156b:	imul   ebp,edi,0x54
  41156e:	sti    
  41156f:	test   eax,0xff7b35ba
  411574:	imul   ebx,DWORD PTR [edx+0x1],0xffffff84
  411578:	push   edi
  411579:	pop    ds
  41157a:	inc    edx
  41157b:	jnp    0x411567
  41157d:	sbb    DWORD PTR [ebp+edi*8-0x7c9ce475],esp
  411584:	push   esi
  411585:	adc    BYTE PTR [edi],cl
  411587:	push   ds
  411588:	pop    eax
  411589:	cwde   
  41158a:	in     eax,0x76
  41158c:	(bad)
  411591:	jp     0x411525
  411593:	fadd   DWORD PTR [edi+0x58030864]
  411599:	(bad)  
  41159a:	jecxz  0x4115c2
  41159c:	or     ecx,eax
  41159e:	push   esp
  41159f:	mov    ?,WORD PTR [ebp+esi*2+0x25]
  4115a3:	popa   
  4115a4:	mov    ecx,0xe5fd85e2
  4115a9:	sub    ah,BYTE PTR [eax]
  4115ab:	and    ah,bh
  4115ad:	fist   DWORD PTR [esi+0x15]
  4115b0:	mov    dh,0xa9
  4115b2:	cmp    al,0x6
  4115b4:	xchg   ecx,eax
  4115b5:	push   0xffffffc8
  4115b7:	push   ecx
  4115b8:	outs   dx,DWORD PTR ds:[esi]
  4115b9:	rol    BYTE PTR [ecx+0x4fa01ca],1
  4115bf:	sbb    BYTE PTR [eax+0x261ec5d3],ah
  4115c5:	push   0xffffffe7
  4115c7:	cmp    bh,BYTE PTR [edx+0x8]
  4115ca:	push   cs
  4115cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115cc:	xor    al,0x48
  4115ce:	add    DWORD PTR [esi-0x1b],ecx
  4115d1:	pop    esi
  4115d2:	xchg   edx,eax
  4115d3:	call   0x8426d1dd
  4115d8:	cwde   
  4115d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115da:	and    bh,BYTE PTR [esi-0x1ba49daf]
  4115e0:	loopne 0x4115d6
  4115e2:	jo     0x411610
  4115e4:	fwait
  4115e5:	mov    bl,0x26
  4115e7:	(bad)  
  4115e8:	jo     0x41162d
  4115ea:	inc    ebp
  4115eb:	nop
  4115ec:	push   ds
  4115ed:	loope  0x4115ef
  4115ef:	push   cs
  4115f0:	mul    BYTE PTR [ecx+eiz*4]
  4115f3:	fisttp QWORD PTR [ecx-0x9]
  4115f6:	pop    ds
  4115f7:	mov    al,ds:0xa226783a
  4115fc:	sbb    DWORD PTR [eax],0x48
  4115ff:	in     al,0x31
  411601:	add    eax,0x9dc13ee1
  411606:	cmp    eax,0xd70aa40e
  41160b:	push   es
  41160c:	pushf  
  41160d:	xor    esp,eax
  41160f:	dec    edx
  411610:	sti    
  411611:	add    bl,bl
  411613:	div    DWORD PTR [ecx+0x14b76257]
  411619:	notrack jmp ebp
  41161c:	jbe    0x41165e
  41161e:	cmp    esp,DWORD PTR [eax+0xe51f71f]
  411624:	dec    ebp
  411625:	addr16 in eax,dx
  411627:	imul   esi,ecx,0xfc64a1d
  41162d:	push   ebx
  41162e:	and    eax,0x2f26b0fd
  411633:	stos   BYTE PTR es:[edi],al
  411634:	xchg   esp,eax
  411635:	xor    ch,0x8f
  411638:	fld    TBYTE PTR [ebx]
  41163a:	(bad)  
  41163b:	mov    dh,0xf3
  41163d:	inc    DWORD PTR [edi+0x5e]
  411640:	mov    fs,WORD PTR [edx]
  411642:	dec    ebp
  411643:	cmc    
  411644:	iret   
  411645:	dec    edi
  411646:	pop    eax
  411647:	(bad)  
  411648:	pop    ss
  411649:	ins    DWORD PTR es:[edi],dx
  41164a:	cmp    BYTE PTR [ebx-0x1aa26fee],bh
  411650:	lahf   
  411651:	iret   
  411652:	shl    DWORD PTR [ebp-0x3b],cl
  411655:	hlt    
  411656:	or     eax,0xae1149ed
  41165b:	cmc    
  41165c:	arpl   WORD PTR [ecx-0x61],dx
  41165f:	ins    DWORD PTR es:[edi],dx
  411660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411661:	push   edi
  411662:	dec    esp
  411663:	mov    al,ah
  411665:	cld    
  411666:	pop    es
  411667:	inc    edx
  411668:	xlat   BYTE PTR ds:[ebx]
  411669:	retf   
  41166a:	lea    ebx,[edx-0x70a86918]
  411670:	jns    0x411699
  411672:	push   ebx
  411673:	int    0x99
  411675:	jb     0x411635
  411677:	std    
  411678:	cmp    DWORD PTR [edi+0x48a4f40e],0xdbbc8a8a
  411682:	cmp    bh,BYTE PTR [ebx+0x56]
  411685:	clc    
  411686:	jmp    0xac856900
  41168b:	rol    BYTE PTR [ebx-0x1e],1
  41168e:	inc    edx
  41168f:	test   al,0x2d
  411691:	loop   0x4116c2
  411693:	pop    ebp
  411694:	push   ds
  411695:	out    0x3a,al
  411697:	(bad)
  41169b:	mov    esp,0x7eb49d13
  4116a0:	lea    ecx,[edi]
  4116a2:	icebp  
  4116a3:	loopne 0x411713
  4116a5:	jmp    0xbd07d638
  4116aa:	jmp    0xda73:0xca6893e0
  4116b1:	jbe    0x41164e
  4116b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116b4:	and    dh,bl
  4116b6:	jp     0x411653
  4116b8:	into   
  4116b9:	mov    edi,0xcc1f3910
  4116be:	loop   0x41165b
  4116c0:	daa    
  4116c1:	imul   BYTE PTR [eax+0x4f0fde98]
  4116c7:	(bad)  
  4116c9:	mov    ds:0x35d02ec2,al
  4116ce:	inc    eax
  4116cf:	fild   DWORD PTR [ebx]
  4116d1:	pop    ds
  4116d2:	rol    BYTE PTR [eax],0xff
  4116d5:	imul   ecx,DWORD PTR [ebx-0x1d],0x3d
  4116d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116da:	xchg   esp,eax
  4116db:	xor    ch,dl
  4116dd:	dec    si
  4116df:	pop    esp
  4116e0:	jns    0x4116f1
  4116e2:	pop    ebp
  4116e3:	mov    al,BYTE PTR [edx]
  4116e5:	mov    DWORD PTR [edx+0x76ace284],edi
  4116eb:	stos   DWORD PTR es:[edi],eax
  4116ec:	mov    edi,0x4e8fce21
  4116f1:	adc    ebp,DWORD PTR [ecx-0x71510934]
  4116f7:	jle    0x4116d3
  4116f9:	and    ch,BYTE PTR [edx+ecx*1-0x2b]
  4116fd:	fisttp QWORD PTR [ebx+ecx*1]
  411700:	fld    DWORD PTR [eax+0x5bc21a2a]
  411706:	lds    edi,FWORD PTR [esi]
  411708:	cmp    eax,0xa76b7b58
  41170d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41170e:	loope  0x4116a1
  411710:	and    DWORD PTR [esi-0x41582c22],esi
  411716:	xchg   ecx,eax
  411717:	mov    al,ds:0x746d9215
  41171c:	arpl   bx,cx
  41171e:	xchg   BYTE PTR [ecx],dh
  411720:	neg    esp
  411722:	lods   ax,WORD PTR ds:[esi]
  411724:	sar    DWORD PTR [ebx+ebx*8-0x77a1e6ea],1
  41172b:	cmp    edi,eax
  41172d:	call   0x55e7:0x19807039
  411734:	and    DWORD PTR [eax],0x956d9f69
  41173a:	cmp    eax,0x84188451
  41173f:	test   al,0x9e
  411741:	pushf  
  411742:	cmp    al,0x3a
  411744:	sub    eax,0xbb6bedac
  411749:	gs inc ecx
  41174b:	call   0xcc76539b
  411750:	in     eax,dx
  411751:	xchg   edx,eax
  411752:	adc    bh,cl
  411754:	add    al,BYTE PTR [edi]
  411756:	mov    edx,0x7cc5cdc2
  41175b:	dec    ecx
  41175c:	mov    eax,DWORD PTR [ebx]
  41175e:	aam    0x24
  411760:	hlt    
  411761:	or     eax,0x38273739
  411766:	adc    eax,0x811eb8ab
  41176b:	inc    eax
  41176c:	or     eax,0x686eb470
  411771:	pop    es
  411772:	sahf   
  411773:	daa    
  411774:	test   edx,ecx
  411776:	jp     0x411773
  411778:	loop   0x411760
  41177a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41177b:	aaa    
  41177c:	(bad)  
  41177d:	sti    
  41177e:	cld    
  41177f:	rcl    ah,1
  411781:	nop    edx
  411784:	push   edx
  411785:	les    ebx,FWORD PTR [edx+0x562551c7]
  41178b:	push   ebp
  41178c:	push   0xed0d6c6a
  411791:	cmp    ch,cl
  411793:	cmp    BYTE PTR [eax+0x65],dl
  411796:	jnp    0x411730
  411798:	daa    
  411799:	push   ecx
  41179a:	sar    BYTE PTR [ecx],1
  41179c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41179d:	and    esi,edx
  41179f:	sbb    esp,DWORD PTR [ecx+ecx*4+0x7d]
  4117a3:	aaa    
  4117a4:	inc    ebp
  4117a5:	add    BYTE PTR [ecx-0x77],bl
  4117a8:	sbb    eax,ecx
  4117aa:	add    ch,al
  4117ac:	call   0x3d80:0x36866501
  4117b3:	mov    esp,0x84964684
  4117b8:	mov    ds:0xaadb63f0,al
  4117bd:	adc    eax,0x8588b94f
  4117c2:	fimul  WORD PTR [edx]
  4117c4:	in     al,dx
  4117c5:	xchg   esi,eax
  4117c6:	pop    es
  4117c7:	aas    
  4117c8:	loope  0x411822
  4117ca:	xchg   ebp,eax
  4117cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117cc:	std    
  4117cd:	daa    
  4117ce:	mov    cl,BYTE PTR [ecx+0x51a4e99c]
  4117d4:	add    al,0x1e
  4117d6:	add    BYTE PTR [ebp+0x8858da8],dl
  4117dc:	leave  
  4117dd:	mov    al,ds:0xa1e3e539
  4117e2:	mov    edi,0xb1bf6c02
  4117e7:	ror    BYTE PTR [ebx-0x312c8b9],1
  4117ed:	jmp    0x3f70a6b5
  4117f2:	mov    WORD PTR [edx+0x33],ds
  4117f5:	push   es
  4117f6:	rcr    BYTE PTR [edi+0x1e728d38],1
  4117fc:	push   ss
  4117fd:	push   edx
  4117fe:	mov    DWORD PTR [ebx+0x70],edi
  411801:	push   ecx
  411802:	dec    edx
  411803:	mov    al,0xdf
  411805:	stos   DWORD PTR es:[edi],eax
  411806:	add    BYTE PTR [ebx-0x51],dh
  411809:	out    0xf7,al
  41180b:	cmp    ah,cl
  41180d:	mov    edx,0x66b66b3a
  411812:	jne    0x411809
  411814:	mov    al,0x71
  411816:	push   es
  411817:	add    esi,ebp
  411819:	push   cs
  41181a:	xor    eax,0xfcd8ee1b
  41181f:	std    
  411820:	mov    dl,BYTE PTR [eax]
  411822:	xchg   ecx,eax
  411823:	mov    dh,BYTE PTR [edi-0x17]
  411826:	mov    al,ds:0x2b91328f
  41182b:	frstor [ecx+0x1bd71d48]
  411831:	arpl   WORD PTR [esi],di
  411833:	ja     0x411820
  411835:	inc    eax
  411836:	pop    edx
  411837:	lods   al,BYTE PTR ds:[esi]
  411838:	mov    eax,0x66447e10
  41183d:	retf   0x8de8
  411840:	adc    eax,0x74d0c08e
  411845:	call   0xd31413ae
  41184a:	or     eax,0xf4657d7a
  41184f:	in     al,dx
  411850:	sub    BYTE PTR cs:0x34c97fda,ah
  411857:	xchg   edx,eax
  411858:	lods   eax,DWORD PTR ds:[esi]
  411859:	sbb    DWORD PTR ds:[ecx+0x3b],ecx
  41185d:	sbb    BYTE PTR [ebp-0x38],ch
  411860:	sahf   
  411861:	inc    ecx
  411862:	add    al,0x9b
  411864:	lock sub BYTE PTR [esp+ecx*1],al
  411868:	push   esp
  411869:	ins    BYTE PTR es:[edi],dx
  41186a:	(bad)  
  41186c:	pop    ss
  41186d:	mov    ah,0x77
  41186f:	cmp    dh,BYTE PTR [ebx-0x6744f17f]
  411875:	std    
  411876:	stos   DWORD PTR es:[edi],eax
  411877:	popf   
  411878:	mov    bh,BYTE PTR [ebp+0x70]
  41187b:	mov    dl,0x7e
  41187d:	jns    0x411859
  41187f:	mov    ah,0x17
  411881:	call   0xb47d:0x1cce7dd
  411888:	dec    edi
  411889:	push   edx
  41188a:	or     eax,0x20fe8c01
  41188f:	and    dh,al
  411891:	mov    al,0x5d
  411893:	cdq    
  411894:	cmc    
  411895:	xor    DWORD PTR [edi],ebx
  411897:	pop    ebp
  411898:	xchg   BYTE PTR [bx-0x26],al
  41189c:	jmp    0x411828
  41189e:	adc    dh,0x8b
  4118a1:	rcr    BYTE PTR [ebp+0x4494016b],cl
  4118a7:	and    cl,BYTE PTR [eax+0x473547da]
  4118ad:	aam    0xc4
  4118af:	adc    edx,DWORD PTR ds:0x4988ccd7
  4118b5:	jge    0x4118d2
  4118b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118b8:	mov    ax,0x4821
  4118bc:	and    BYTE PTR [edi-0x1f4e727a],bh
  4118c2:	add    dl,ah
  4118c4:	cmp    al,0x2e
  4118c6:	mov    DWORD PTR [esi-0x1a1ce8c],edx
  4118cc:	push   ebp
  4118cd:	(bad)  
  4118ce:	lock icebp 
  4118d0:	adc    al,BYTE PTR [ecx+0x11]
  4118d3:	jmp    0x411863
  4118d5:	push   es
  4118d6:	outs   dx,DWORD PTR ds:[esi]
  4118d7:	sub    al,0xb1
  4118d9:	popa   
  4118da:	mov    dl,0x9
  4118dc:	and    al,0x45
  4118de:	into   
  4118df:	ror    DWORD PTR [esi+0x15f23db],0x44
  4118e6:	inc    esp
  4118e7:	xchg   ebp,eax
  4118e8:	or     ah,cl
  4118ea:	arpl   dx,cx
  4118ec:	in     al,dx
  4118ed:	dec    ebp
  4118ee:	mov    esp,0x8a8d36f2
  4118f3:	sub    bh,BYTE PTR ds:[esi]
  4118f6:	xor    BYTE PTR [ebx+0x4228a9aa],ch
  4118fc:	shl    DWORD PTR [ecx+0x551fa255],0xa9
  411903:	das    
  411904:	sbb    BYTE PTR [ecx],dh
  411906:	(bad)  
  411907:	mov    dh,0xca
  411909:	add    eax,DWORD PTR [ecx+0x78]
  41190c:	lods   eax,DWORD PTR ds:[esi]
  41190d:	or     al,0xa
  41190f:	fild   WORD PTR [edi+0x65]
  411912:	sub    esp,0xffffffa3
  411915:	shr    DWORD PTR [edi],0x87
  411918:	fs cmp edi,esi
  41191b:	aaa    
  41191c:	xchg   ecx,eax
  41191d:	test   al,0x91
  41191f:	retf   0x1339
  411922:	and    DWORD PTR [ebp+0x21f3f7a7],esi
  411928:	or     eax,0x88887e6b
  41192d:	xlat   BYTE PTR ds:[ebx]
  41192e:	push   es
  41192f:	dec    edx
  411930:	bound  edx,QWORD PTR [esi+0xce8f9a]
  411936:	aad    0x12
  411938:	mov    ebx,0x2d586697
  41193d:	mov    esi,0xa2c07b2b
  411942:	dec    edi
  411943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411944:	mov    esp,0xde05097
  411949:	icebp  
  41194a:	and    eax,0xc27e4816
  41194f:	or     eax,0xbd014bbf
  411954:	mov    ch,0x5c
  411956:	call   0x98e7f923
  41195b:	push   DWORD PTR [edi-0x514d35ee]
  411961:	xlat   BYTE PTR ds:[ebx]
  411962:	dec    ebp
  411963:	mov    ss:0xdff9702c,al
  411969:	fsubr  DWORD PTR [edi]
  41196b:	sub    DWORD PTR [ecx+0x31c659cd],ebp
  411971:	mov    gs,WORD PTR [ebp-0x75e28075]
  411977:	cmp    al,0x45
  411979:	jp     0x411922
  41197b:	jne    0x4119ec
  41197d:	mov    eax,ds:0xd93d3443
  411982:	outs   dx,BYTE PTR ds:[esi]
  411983:	push   edi
  411984:	jbe    0x41198c
  411986:	mov    ah,0x26
  411988:	test   BYTE PTR [ebp-0x7afda84b],0x85
  41198f:	pop    esi
  411990:	and    edx,DWORD PTR [edi+0x3a]
  411993:	inc    esp
  411994:	ds and bl,al
  411997:	mov    edi,ebx
  411999:	mov    ah,0xc
  41199b:	lds    edx,FWORD PTR [edi]
  41199d:	and    ah,BYTE PTR [esi+0x26]
  4119a0:	popf   
  4119a1:	cld    
  4119a2:	pop    ecx
  4119a3:	scas   al,BYTE PTR es:[edi]
  4119a4:	(bad)  
  4119a5:	pop    edx
  4119a6:	daa    
  4119a7:	cmp    edx,DWORD PTR [ebp+0x1423c7df]
  4119ad:	ds neg edi
  4119b0:	imul   DWORD PTR [ecx]
  4119b2:	pop    ss
  4119b3:	xor    BYTE PTR [eax+0x159be91],ch
  4119b9:	shr    DWORD PTR [ebx],cl
  4119bb:	aas    
  4119bc:	lea    eax,[ebp+0x1d]
  4119bf:	pusha  
  4119c0:	outs   dx,BYTE PTR ds:[esi]
  4119c1:	imul   esi,DWORD PTR [ebx],0xf2c30eda
  4119c7:	jbe    0x4119e0
  4119c9:	cmp    DWORD PTR [eax+ebx*2],edi
  4119cc:	sub    eax,0xc175e485
  4119d1:	xchg   edi,eax
  4119d2:	ret    0x8356
  4119d5:	ja     0x411a40
  4119d7:	adc    edi,DWORD PTR [eax-0x1d6507a3]
  4119dd:	test   al,0xe0
  4119df:	loope  0x41199e
  4119e1:	mov    ds:0x6dc5468f,al
  4119e6:	retf   0xd532
  4119e9:	sbb    DWORD PTR [edi+0x67],0x69
  4119ed:	dec    esi
  4119ee:	mov    edi,0xed472f3f
  4119f3:	push   eax
  4119f4:	mov    eax,0x915e461d
  4119f9:	(bad)  
  4119fb:	and    al,0x4
  4119fd:	adc    al,0x68
  4119ff:	shr    DWORD PTR [eax+0x5b],1
  411a02:	iret   
  411a03:	add    BYTE PTR ds:0x990db16f,0x1e
  411a0a:	lock call 0xcd61b7ff
  411a10:	je     0x4119e8
  411a12:	cwde   
  411a13:	or     ah,ch
  411a15:	fadd   QWORD PTR [eax-0x35dbb949]
  411a1b:	daa    
  411a1c:	sbb    esi,edx
  411a1e:	fist   DWORD PTR [ebx-0x68ed14db]
  411a24:	and    al,cl
  411a26:	lea    edi,[esi]
  411a28:	out    dx,eax
  411a29:	cwde   
  411a2a:	imul   esp,DWORD PTR [ecx+eiz*1],0xffffffa0
  411a2e:	call   0x94325273
  411a33:	sbb    al,0xf6
  411a35:	xor    ah,BYTE PTR [ebx-0xa2045de]
  411a3b:	or     al,0xbe
  411a3d:	ret    0x1809
  411a40:	fstp   QWORD PTR [ebx-0x34]
  411a43:	cmc    
  411a44:	xchg   ebp,eax
  411a45:	in     al,dx
  411a46:	mov    bh,0x37
  411a48:	lods   al,BYTE PTR ds:[esi]
  411a49:	jecxz  0x4119fa
  411a4b:	jmp    0x4119fa
  411a4d:	or     al,0x70
  411a4f:	pop    ebx
  411a50:	or     eax,0x69aa674f
  411a55:	inc    DWORD PTR [edx-0x4e]
  411a58:	mov    dh,0x15
  411a5a:	js     0x411a8f
  411a5c:	xchg   ebp,eax
  411a5d:	leave  
  411a5e:	xchg   esp,eax
  411a5f:	or     bl,bl
  411a61:	stc    
  411a62:	sub    DWORD PTR [eax-0x5e3ac4a7],0x6f
  411a69:	enter  0x8a79,0x2f
  411a6d:	push   esp
  411a6e:	ins    DWORD PTR es:[edi],dx
  411a6f:	loop   0x411ae5
  411a71:	into   
  411a72:	cwde   
  411a73:	pop    eax
  411a74:	ret    
  411a75:	ror    DWORD PTR ds:0x6bc30eb,1
  411a7b:	fwait
  411a7c:	or     edi,DWORD PTR [ebx]
  411a7e:	loop   0x411ace
  411a80:	loopne 0x411ade
  411a82:	test   BYTE PTR [ebx-0xd],bh
  411a85:	stc    
  411a86:	icebp  
  411a87:	in     al,dx
  411a88:	mov    ds,WORD PTR [edx]
  411a8a:	sti    
  411a8b:	pop    ecx
  411a8c:	punpcklbw mm0,mm3
  411a8f:	cld    
  411a90:	inc    esp
  411a91:	jecxz  0x411ace
  411a93:	jmp    0x411a5d
  411a95:	in     eax,0xc
  411a97:	push   0xf39a164c
  411a9c:	pop    es
  411a9d:	mov    dh,0xf1
  411a9f:	call   0xb8cc:0xd9e2daf6
  411aa6:	stc    
  411aa7:	and    BYTE PTR [esi+0x4333bba4],cl
  411aad:	js     0x411a88
  411aaf:	dec    edx
  411ab0:	loope  0x411ab6
  411ab2:	cmc    
  411ab3:	sub    eax,0x47454621
  411ab8:	push   ecx
  411ab9:	scas   al,BYTE PTR es:[edi]
  411aba:	call   0xded2:0x1e4d47a6
  411ac1:	int    0x47
  411ac3:	jo     0x411a7c
  411ac5:	jge    0x411b04
  411ac7:	add    eax,0xb4f12451
  411acc:	inc    esi
  411acd:	aaa    
  411ace:	mov    ecx,DWORD PTR [ecx-0x74]
  411ad1:	mov    cl,0x86
  411ad3:	test   al,0xf3
  411ad5:	adc    al,0x7c
  411ad7:	aas    
  411ad8:	inc    ebx
  411ad9:	popf   
  411ada:	push   esp
  411adb:	cmp    al,0x45
  411add:	(bad)  
  411ade:	pushf  
  411adf:	cmp    DWORD PTR [eax+eax*2-0x12],edi
  411ae3:	in     al,0xf3
  411ae5:	test   al,0xbb
  411ae7:	or     al,0x30
  411ae9:	in     eax,0xfb
  411aeb:	mov    eax,ds:0x60b6f130
  411af0:	sub    eax,0x44c44358
  411af5:	inc    ebp
  411af6:	jbe    0x411b39
  411af8:	add    DWORD PTR [ebp-0x69],0x8
  411afc:	std    
  411afd:	ins    DWORD PTR es:[edi],dx
  411afe:	or     eax,edi
  411b00:	jae    0x411b62
  411b02:	(bad)  
  411b03:	mov    ds:0xd4e165c5,al
  411b08:	je     0x411ab5
  411b0a:	xchg   ebx,eax
  411b0b:	sbb    eax,0xb9703f26
  411b10:	(bad)  
  411b11:	jmp    0x81550d79
  411b16:	sub    al,dl
  411b18:	sbb    eax,0xa3e53a60
  411b1d:	stos   DWORD PTR es:[edi],eax
  411b1e:	test   esi,edx
  411b20:	mov    ah,0x81
  411b22:	aam    0xef
  411b24:	xor    al,0xaf
  411b26:	dec    edx
  411b27:	fisub  WORD PTR [ecx+edi*8-0x1f]
  411b2b:	mov    ecx,0x4ca71994
  411b30:	mov    fs,WORD PTR [eax+0xf]
  411b33:	cmc    
  411b34:	sbb    BYTE PTR [edx+0x2f],al
  411b37:	dec    ecx
  411b38:	jle    0x411ba6
  411b3a:	neg    BYTE PTR [ebx]
  411b3c:	or     BYTE PTR [ecx+0x50],bl
  411b3f:	push   eax
  411b40:	por    mm6,QWORD PTR [eax-0x70411bb3]
  411b47:	ret    
  411b48:	mov    bh,0xa3
  411b4a:	jp     0x411b3d
  411b4c:	adc    BYTE PTR [ebx+0xb],cl
  411b4f:	xchg   ebx,eax
  411b50:	jle    0x411bb3
  411b52:	push   esi
  411b53:	addr16 jp 0x411adb
  411b56:	sbb    cl,dh
  411b58:	call   FWORD PTR [edx-0x5d]
  411b5b:	mov    dh,0x9f
  411b5d:	(bad)  
  411b5e:	(bad)  
  411b5f:	push   esi
  411b60:	mov    ah,0x81
  411b62:	test   BYTE PTR ds:[eax],0xac
  411b66:	xchg   ebp,eax
  411b67:	pusha  
  411b68:	int    0x11
  411b6a:	jne    0x411bbf
  411b6c:	mov    esp,esi
  411b6e:	jae    0x411bbe
  411b70:	push   ebx
  411b71:	xchg   edi,eax
  411b72:	jle    0x411b61
  411b74:	adc    eax,esp
  411b76:	(bad)  
  411b78:	int    0x44
  411b7a:	add    al,0xcc
  411b7c:	fstp   QWORD PTR [edi]
  411b7e:	sub    ecx,DWORD PTR [ebx-0x19560204]
  411b84:	mov    eax,ds:0x359355bf
  411b89:	jno    0x411b1e
  411b8b:	out    dx,eax
  411b8c:	jo     0x411b8e
  411b8e:	add    dl,bh
  411b90:	xor    ch,BYTE PTR [eax+0xe879c23]
  411b96:	call   0x882c4ab0
  411b9b:	xchg   DWORD PTR [edx+ebx*4+0x234ba5fa],edi
  411ba2:	or     esp,DWORD PTR [esi+0x3ebfd0]
  411ba8:	jne    0x411c0d
  411baa:	jno    0x411b95
  411bac:	inc    esp
  411bad:	xlat   BYTE PTR ds:[ebx]
  411bae:	mov    ds:0x3700e8d3,al
  411bb3:	ret    0xb6d4
  411bb6:	(bad)  
  411bb7:	scas   eax,DWORD PTR es:[edi]
  411bb8:	icebp  
  411bb9:	scas   eax,DWORD PTR es:[edi]
  411bba:	mov    ax,0x64ab
  411bbe:	jl     0x411c37
  411bc0:	fcom   QWORD PTR [edi]
  411bc2:	sbb    DWORD PTR [edx+0x18177847],esp
  411bc8:	xchg   esp,eax
  411bc9:	push   0x26
  411bcb:	sub    dl,bl
  411bcd:	sahf   
  411bce:	test   al,0x3b
  411bd0:	(bad)  
  411bd1:	jmp    0x411bc6
  411bd3:	mov    bh,0xfa
  411bd5:	add    eax,0x5e5537c9
  411bda:	dec    esi
  411bdb:	stos   BYTE PTR es:[edi],al
  411bdc:	ins    BYTE PTR es:[edi],dx
  411bdd:	into   
  411bde:	lea    ebp,[ecx+0x18236d23]
  411be4:	sbb    bl,al
  411be6:	mov    al,0xd5
  411be8:	xor    al,0x2b
  411bea:	imul   edi,DWORD PTR [edx-0x12f160b3],0x3167db2d
  411bf4:	sbb    ecx,ecx
  411bf6:	sub    DWORD PTR [ebx],esi
  411bf8:	push   cs
  411bf9:	xchg   edx,eax
  411bfa:	fs in  eax,0x1e
  411bfd:	sbb    ebx,DWORD PTR [ebx+0x44cc780c]
  411c03:	jle    0x411c6a
  411c05:	pop    eax
  411c06:	push   DWORD PTR [ecx-0x5b]
  411c09:	cld    
  411c0a:	push   0xffffffa9
  411c0c:	or     DWORD PTR [eax],ebx
  411c0e:	loope  0x411c40
  411c10:	inc    edx
  411c11:	daa    
  411c12:	jb     0x411b9e
  411c14:	or     edx,ebx
  411c16:	and    bl,dl
  411c18:	mov    dh,0x8b
  411c1a:	xor    al,0xc9
  411c1c:	(bad)  
  411c1d:	mov    ah,0x56
  411c1f:	idiv   BYTE PTR [ecx]
  411c21:	push   ebx
  411c22:	cmp    eax,edx
  411c24:	jecxz  0x411c44
  411c26:	out    0x3e,al
  411c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c29:	and    eax,0xbd43bc46
  411c2e:	pop    ss
  411c2f:	push   ecx
  411c30:	pop    esi
  411c31:	pop    ebp
  411c32:	icebp  
  411c33:	stos   DWORD PTR es:[edi],eax
  411c34:	test   BYTE PTR [ebx-0x38],0xe0
  411c38:	imul   DWORD PTR ds:0x59711bac
  411c3e:	pop    es
  411c3f:	fstp   QWORD PTR [edx+0x60be5764]
  411c45:	scas   al,BYTE PTR es:[edi]
  411c46:	sbb    BYTE PTR [edi+ebp*1-0x2e],cl
  411c4a:	call   0xba66e54c
  411c4f:	or     dl,BYTE PTR [eax-0x5b]
  411c52:	adc    DWORD PTR gs:[ebp+0x5c3cab0d],eax
  411c59:	xchg   edx,eax
  411c5a:	cmc    
  411c5b:	pop    ss
  411c5c:	adc    ebp,DWORD PTR [eax+0x30781c51]
  411c62:	push   es
  411c63:	push   ebx
  411c64:	jl     0x411ce4
  411c66:	pop    ecx
  411c67:	jo     0x411cd5
  411c69:	aam    0xd0
  411c6b:	mov    ch,dh
  411c6d:	clc    
  411c6e:	loopne 0x411c0d
  411c70:	int    0x56
  411c72:	add    ecx,DWORD PTR [eax+0x6d]
  411c75:	pushf  
  411c76:	and    BYTE PTR [ebx],bh
  411c78:	mov    cs,WORD PTR [ecx-0x4b813ce5]
  411c7e:	add    DWORD PTR [eax+0x7],0xffffff9c
  411c82:	mov    dh,0xa2
  411c84:	pop    esi
  411c85:	xlat   BYTE PTR ds:[ebx]
  411c86:	imul   esp,DWORD PTR [ecx+0x24],0xffffff87
  411c8a:	sbb    ah,BYTE PTR [ecx-0x7530f7ce]
  411c90:	stos   DWORD PTR es:[edi],eax
  411c91:	mov    al,0x8
  411c93:	adc    cl,ah
  411c95:	out    0xea,al
  411c97:	popf   
  411c98:	rcr    DWORD PTR [esi],0x1e
  411c9b:	sbb    BYTE PTR [ebx+0x11],al
  411c9e:	inc    ebx
  411c9f:	js     0x411cdc
  411ca1:	iret   
  411ca2:	retf   
  411ca3:	lahf   
  411ca4:	aaa    
  411ca5:	pop    eax
  411ca6:	sbb    eax,0x86b9f19d
  411cab:	mov    ds:0x460b7a83,eax
  411cb0:	or     esp,DWORD PTR cs:[ecx-0x7c886693]
  411cb7:	mov    bl,0xc1
  411cb9:	imul   edi
  411cbb:	jno    0x411d27
  411cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cbe:	push   eax
  411cbf:	and    BYTE PTR [eax+0x7d],bl
  411cc2:	add    ebp,0xbcacd573
  411cc8:	inc    eax
  411cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cca:	cmc    
  411ccb:	pop    eax
  411ccc:	xor    ah,BYTE PTR [esi+0x6b]
  411ccf:	push   ebp
  411cd0:	mov    BYTE PTR [edi],cl
  411cd2:	int3   
  411cd3:	cmc    
  411cd4:	fcomi  st,st(3)
  411cd6:	dec    esi
  411cd7:	inc    esp
  411cd8:	jo     0x411c5c
  411cda:	xchg   BYTE PTR [edx-0x6cb759e4],dl
  411ce0:	fwait
  411ce1:	fwait
  411ce2:	adc    cl,BYTE PTR [edx+0x18bc02cd]
  411ce8:	mov    cl,BYTE PTR [ebx-0x15]
  411ceb:	pop    edi
  411cec:	jae    0x411d57
  411cee:	cmp    BYTE PTR [edx+edi*8],dl
  411cf1:	cmp    eax,0x6688dc3b
  411cf6:	fldcw  WORD PTR [edx+0x67]
  411cf9:	(bad)  
  411cfa:	fdivrp st(5),st
  411cfc:	fwait
  411cfd:	addr16 adc al,0x1d
  411d00:	inc    ebx
  411d01:	popf   
  411d02:	lods   eax,DWORD PTR ds:[esi]
  411d03:	dec    edx
  411d04:	sub    DWORD PTR [ebx+ebp*4],ecx
  411d07:	jne    0x411d0d
  411d09:	push   ds
  411d0a:	in     eax,0x99
  411d0c:	cmp    DWORD PTR [ebx],0xffffffb6
  411d0f:	jl     0x411d2f
  411d11:	mov    esp,0x1c2d93d
  411d16:	shr    DWORD PTR [eax],cl
  411d18:	rcr    BYTE PTR [ecx-0x14],1
  411d1b:	je     0x411cc0
  411d1d:	sub    al,0xf5
  411d1f:	mov    DWORD PTR [ebp-0x427162b6],esi
  411d25:	ins    DWORD PTR es:[edi],dx
  411d26:	and    ebx,eax
  411d28:	pusha  
  411d29:	mov    ebp,0xb472196c
  411d2e:	and    al,0xbd
  411d30:	retf   
  411d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d32:	fldenv [eax+0x4]
  411d35:	xchg   esi,eax
  411d36:	mov    ah,0x88
  411d38:	fisubr WORD PTR [ebp-0x259de0fc]
  411d3e:	mov    esp,?
  411d40:	je     0x411d28
  411d42:	fdiv   st,st(6)
  411d44:	push   ebx
  411d45:	adc    dl,BYTE PTR [edx+0x1b21f16e]
  411d4b:	xchg   ebx,eax
  411d4c:	or     ecx,DWORD PTR [eax]
  411d4e:	(bad)  
  411d4f:	neg    DWORD PTR [ecx+0x52]
  411d52:	xor    BYTE PTR [esi],al
  411d54:	push   esi
  411d55:	fisttp DWORD PTR [ebp-0x4236031]
  411d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d5c:	ret    
  411d5d:	arpl   WORD PTR [eax],cx
  411d5f:	push   ebx
  411d60:	dec    esp
  411d61:	mov    bh,BYTE PTR [edi-0x4]
  411d64:	xlat   BYTE PTR ds:[ebx]
  411d65:	pop    edi
  411d66:	int3   
  411d67:	push   0xffffffd9
  411d69:	dec    edx
  411d6a:	or     ebx,DWORD PTR [eax-0x69c7a702]
  411d70:	mov    edx,0x9209db0e
  411d75:	or     bh,BYTE PTR ds:0xc5cf20fe
  411d7b:	xchg   esp,eax
  411d7c:	es nop
  411d7e:	mov    ch,0x4c
  411d80:	jecxz  0x411d52
  411d82:	cmp    eax,0x3dbec30b
  411d87:	(bad)  
  411d89:	leave  
  411d8a:	jo     0x411d0e
  411d8c:	mov    ah,0xfd
  411d8e:	dec    esp
  411d8f:	repz cwde 
  411d91:	loopne 0x411e11
  411d93:	sub    bl,BYTE PTR [edi-0x46]
  411d96:	add    al,0xce
  411d98:	push   es
  411d99:	dec    esi
  411d9a:	dec    BYTE PTR [edi+0x6b26d246]
  411da0:	mov    BYTE PTR [esi-0xf],bl
  411da3:	mov    fs,WORD PTR [ebx+0x3c58ed7b]
  411da9:	cdq    
  411daa:	and    ah,dl
  411dac:	(bad)  
  411dad:	mov    cl,0x59
  411daf:	push   0x8c26203d
  411db4:	arpl   si,sp
  411db6:	jbe    0x411dec
  411db8:	inc    ecx
  411db9:	jp     0x411e13
  411dbb:	sub    eax,0x5dde1797
  411dc0:	sar    BYTE PTR [bp+si],0xec
  411dc4:	add    ecx,ebx
  411dc6:	and    edi,DWORD PTR [ecx+0xd]
  411dc9:	div    BYTE PTR [esi+0x3406caa6]
  411dcf:	sahf   
  411dd0:	je     0x411df2
  411dd2:	stc    
  411dd3:	mov    cs:0xf0101e83,al
  411dd9:	rcl    BYTE PTR [eax-0x43],cl
  411ddc:	and    BYTE PTR [ecx],bh
  411dde:	and    al,0x40
  411de0:	js     0x411e4e
  411de2:	lods   al,BYTE PTR ds:[esi]
  411de3:	mov    edi,0x366621e
  411de8:	xchg   ebp,eax
  411de9:	cmp    esp,DWORD PTR ds:0x45f3aa89
  411def:	mov    esp,0x6cf1358a
  411df4:	pop    ss
  411df5:	mov    edi,0xfb31242c
  411dfa:	pop    ebp
  411dfb:	adc    DWORD PTR [edx+eiz*4+0x46],edi
  411dff:	ja     0x411dbd
  411e01:	mov    eax,ds:0xe4ec3158
  411e06:	in     al,0xdc
  411e08:	cdq    
  411e09:	inc    edx
  411e0a:	jne    0x411e6e
  411e0c:	inc    BYTE PTR [edx]
  411e0e:	jae    0x411e35
  411e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e11:	ret    
  411e12:	into   
  411e13:	mov    ch,0xc8
  411e15:	xor    BYTE PTR [esi+0x7],bl
  411e18:	stos   DWORD PTR es:[edi],eax
  411e19:	dec    edx
  411e1a:	fcomp  DWORD PTR [edi+0x6]
  411e1d:	stc    
  411e1e:	mul    BYTE PTR [edi]
  411e20:	ja     0x411dfc
  411e22:	mov    cl,0xba
  411e24:	jl     0x411e8f
  411e26:	stc    
  411e27:	cmp    al,0x24
  411e29:	jb     0x411dbd
  411e2b:	xchg   edi,eax
  411e2c:	stos   BYTE PTR es:[edi],al
  411e2d:	sub    cl,BYTE PTR [esi+0x53653fdc]
  411e33:	popa   
  411e34:	out    0xd8,al
  411e36:	push   esi
  411e37:	lds    ebp,FWORD PTR [esi+ebx*2-0x774ae90b]
  411e3e:	imul   esp,DWORD PTR [esi+0x10],0x9cef1194
  411e45:	xchg   esi,eax
  411e46:	push   esi
  411e47:	fcomp  QWORD PTR [ebx+0x7f]
  411e4a:	in     eax,0x2c
  411e4c:	sar    DWORD PTR [eax],0x1d
  411e4f:	into   
  411e50:	xchg   DWORD PTR [edi],edi
  411e52:	add    BYTE PTR [eax],ah
  411e54:	fsubr  QWORD PTR [esi+0x5d9ec934]
  411e5a:	rol    DWORD PTR [edx],1
  411e5c:	mov    cl,0x39
  411e5e:	inc    eax
  411e5f:	(bad)  
  411e60:	les    eax,FWORD PTR [edx+0x1b679107]
  411e66:	lock retf 0xbf9b
  411e6a:	icebp  
  411e6b:	fwait
  411e6c:	pop    ds
  411e6d:	mov    edi,0x8612e4ca
  411e72:	jmp    0x886d:0x1aa0a3ae
  411e79:	inc    ecx
  411e7a:	push   ds
  411e7b:	scas   al,BYTE PTR es:[edi]
  411e7c:	rcr    DWORD PTR [eax-0x6b7eff3d],0xb8
  411e83:	push   ecx
  411e84:	push   ebp
  411e85:	bound  ecx,QWORD PTR [esi+0x47]
  411e88:	xchg   BYTE PTR [esi+ebp*1+0x28],al
  411e8c:	xchg   esp,eax
  411e8d:	mov    dh,0x57
  411e8f:	test   eax,0xc3b26d51
  411e94:	imul   ecx,esp,0xffffffc2
  411e97:	inc    ebp
  411e98:	push   0x7d
  411e9a:	sub    BYTE PTR [ecx+0x30b2a256],ah
  411ea0:	mov    cs,edx
  411ea2:	(bad)  
  411ea4:	fstp   TBYTE PTR [edi+0x7b]
  411ea7:	cmp    al,0x1a
  411ea9:	imul   edi,DWORD PTR [edx],0x2483528b
  411eaf:	ror    DWORD PTR [edi+edi*1-0x505bdce5],1
  411eb6:	or     DWORD PTR [eax-0x5954ac99],esp
  411ebc:	fdiv   DWORD PTR [eax-0x66]
  411ebf:	lahf   
  411ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ec1:	adc    ebx,ebx
  411ec3:	sbb    esi,esp
  411ec5:	xchg   esp,eax
  411ec6:	push   0x53
  411ec8:	mov    eax,0xea24bc61
  411ecd:	jmp    0x411e88
  411ecf:	push   es
  411ed0:	out    dx,eax
  411ed1:	cdq    
  411ed2:	fld    DWORD PTR [esp+edx*1+0x15]
  411ed6:	mov    ebx,0xc16a833
  411edb:	leave  
  411edc:	into   
  411edd:	xor    edi,DWORD PTR [eax]
  411edf:	inc    edx
  411ee0:	ins    DWORD PTR es:[edi],dx
  411ee1:	and    al,0xf9
  411ee3:	mov    edi,0xdce00f38
  411ee8:	and    DWORD PTR [esi+0x18],ecx
  411eeb:	and    eax,0x66821c2e
  411ef0:	fidivr WORD PTR [ecx+0xb]
  411ef3:	lea    ebx,[ecx-0x6e]
  411ef6:	or     eax,0x6f627c03
  411efb:	ror    DWORD PTR [esi],cl
  411efd:	mov    bl,0x9c
  411eff:	cmp    al,BYTE PTR [edx]
  411f01:	xchg   BYTE PTR [esi+0x31],al
  411f04:	sbb    ch,ah
  411f06:	jp     0x411f24
  411f08:	out    0x74,al
  411f0a:	jl     0x411f48
  411f0c:	and    DWORD PTR [ebx-0x715bc028],edi
  411f12:	cmp    bl,BYTE PTR [ebx+0x45]
  411f15:	pop    edx
  411f16:	(bad)  
  411f17:	mov    cl,bh
  411f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f1a:	jae    0x411f13
  411f1c:	int    0x66
  411f1e:	dec    esi
  411f1f:	jge    0x411f09
  411f21:	dec    edi
  411f22:	stos   DWORD PTR es:[edi],eax
  411f23:	in     al,0xcd
  411f25:	or     ch,bh
  411f27:	aas    
  411f28:	dec    edx
  411f29:	mov    esi,0xf473dde2
  411f2e:	pushf  
  411f2f:	inc    ebx
  411f30:	fcomp  QWORD PTR [esi+ebp*8-0x68e4ff7]
  411f37:	lods   al,BYTE PTR ds:[esi]
  411f38:	clc    
  411f39:	std    
  411f3a:	add    al,0xfd
  411f3c:	add    DWORD PTR [edi-0x4bdc136d],edi
  411f42:	clc    
  411f43:	iret   
  411f44:	mov    esp,0x3851cf44
  411f49:	jae    0x411f67
  411f4b:	and    eax,0xd11603f7
  411f50:	outs   dx,DWORD PTR ds:[esi]
  411f51:	cwde   
  411f52:	jne    0x411ef2
  411f54:	pop    edi
  411f55:	sbb    al,0xa
  411f57:	dec    ecx
  411f58:	and    al,0x7
  411f5a:	fsub   QWORD PTR [esi-0x6fcfd89c]
  411f60:	hlt    
  411f61:	out    0x26,eax
  411f63:	imul   edx,DWORD PTR [esi+0x3306b7e6],0xffffffcd
  411f6a:	xchg   DWORD PTR [ebp+0x4b9c23e6],esi
  411f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f71:	iret   
  411f72:	dec    ecx
  411f73:	add    eax,0x8643505d
  411f78:	xchg   DWORD PTR [ebp+0x19],ecx
  411f7b:	shl    BYTE PTR [ebp+0x6ccae6c0],0xd7
  411f82:	cli    
  411f83:	dec    esi
  411f84:	enter  0x221b,0x5
  411f88:	(bad)  
  411f89:	(bad)  
  411f8b:	adc    ah,ch
  411f8d:	(bad)  
  411f8e:	mov    fs,edx
  411f90:	mov    WORD PTR [edx-0x57],ss
  411f93:	cld    
  411f94:	jmp    0x3c81084b
  411f99:	cmc    
  411f9a:	or     DWORD PTR [eax+ebx*1-0x2a9fe6cb],0x35c72fff
  411fa5:	push   esp
  411fa6:	aad    0x9d
  411fa8:	jmp    0x893e:0xb6bc6aa4
  411faf:	ja     0x411f86
  411fb1:	jmp    0x4849b117
  411fb6:	push   ss
  411fb7:	mov    edx,0xb0316e8e
  411fbc:	xchg   esi,eax
  411fbd:	lock mov bl,0x34
  411fc0:	cli    
  411fc1:	and    DWORD PTR [ebx],ebp
  411fc3:	adc    cl,BYTE PTR [ebp-0x49f7feee]
  411fc9:	mov    cs,WORD PTR [ebx-0x4d]
  411fcc:	jmp    DWORD PTR [edi-0x27]
  411fcf:	pop    esi
  411fd0:	push   esp
  411fd1:	(bad)  
  411fd2:	fdivr  st,st(4)
  411fd4:	ins    DWORD PTR es:[edi],dx
  411fd5:	frstor [ebx+0x5e66eba4]
  411fdb:	push   ds
  411fdc:	mov    esi,0x6eac3f4f
  411fe1:	push   edi
  411fe2:	aad    0xef
  411fe4:	pop    esi
  411fe5:	jnp    0x412029
  411fe7:	sbb    BYTE PTR [ecx+0x25],dh
  411fea:	std    
  411feb:	ss mov al,0x7e
  411fee:	push   esi
  411fef:	pop    ss
  411ff0:	adc    eax,0x2565f474
  411ff5:	(bad)  
  411ff6:	retf   
  411ff7:	scas   al,BYTE PTR es:[edi]
  411ff8:	and    ch,BYTE PTR [edx+ebx*4]
  411ffb:	lock jnp 0x411f9b
  411ffe:	test   eax,0x37374fa0
  412003:	xchg   esi,eax
  412004:	fsub   QWORD PTR [eax+0x7741785]
  41200a:	pop    esi
  41200b:	push   0x7c
  41200d:	mov    ecx,0x5e099819
  412012:	mov    cl,BYTE PTR [esi]
  412014:	les    ebp,FWORD PTR [edx+eiz*4+0x7118752b]
  41201b:	pop    eax
  41201c:	popa   
  41201d:	mov    dl,0x8a
  41201f:	in     al,dx
  412020:	add    DWORD PTR [edx],esp
  412022:	test   al,0x27
  412024:	xchg   esi,eax
  412025:	(bad)  
  412026:	fdiv   DWORD PTR [eax]
  412028:	shl    esp,0x0
  41202b:	outs   dx,DWORD PTR ds:[esi]
  41202c:	test   DWORD PTR [eax-0x33],eax
  41202f:	rcr    DWORD PTR [edx-0x28957eb9],cl
  412035:	lahf   
  412036:	rcr    BYTE PTR ds:0x750c43cd,1
  41203c:	fdiv   DWORD PTR [ecx]
  41203e:	mov    ds:0x204b0e57,al
  412043:	test   dl,cl
  412045:	and    DWORD PTR [edi+0x7d15e911],esp
  41204b:	js     0x412086
  41204d:	in     eax,dx
  41204e:	je     0x411fdd
  412050:	out    0x90,al
  412052:	rcr    BYTE PTR [ecx-0x49],1
  412055:	popf   
  412056:	fimul  DWORD PTR [ebx+ebx*1+0x783fbce3]
  41205d:	mov    WORD PTR [edi],es
  41205f:	lds    eax,FWORD PTR [edi-0x26dd6d96]
  412065:	stc    
  412066:	and    cl,BYTE PTR [edi]
  412068:	sub    edi,DWORD PTR [ebx]
  41206a:	sbb    ebp,DWORD PTR [ebp+0x45]
  41206d:	inc    ebx
  41206e:	jns    0x4120ee
  412070:	(bad)  
  412072:	cmp    dh,BYTE PTR [eax+eiz*2+0x41]
  412076:	cmp    al,bl
  412078:	sbb    BYTE PTR [esi+0x7],ah
  41207b:	data16 mov dl,0xe7
  41207e:	dec    esp
  41207f:	into   
  412080:	out    dx,al
  412081:	mov    edx,0x7bd88cd4
  412086:	xlat   BYTE PTR ds:[ebx]
  412087:	sbb    al,0xf1
  412089:	and    eax,0x572666d3
  41208e:	psllw  mm6,mm1
  412091:	iret   
  412092:	cmp    eax,0xba35216f
  412097:	je     0x41210d
  412099:	xor    eax,eax
  41209b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41209c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41209d:	repnz fistp DWORD PTR [edi]
  4120a0:	adc    ecx,edi
  4120a2:	lds    edx,FWORD PTR [edx-0x3595a78]
  4120a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120a9:	sub    eax,DWORD PTR [esi]
  4120ab:	cs hlt 
  4120ad:	loop   0x412073
  4120af:	js     0x41204d
  4120b1:	aas    
  4120b2:	nop
  4120b3:	or     eax,DWORD PTR [ebp-0x31f4d60b]
  4120b9:	mov    esi,0xd270e589
  4120be:	(bad)  
  4120bf:	cmp    ch,BYTE PTR [edx]
  4120c1:	push   0xfffffff9
  4120c3:	or     cl,cl
  4120c5:	shl    DWORD PTR [esi+0x11],1
  4120c8:	and    DWORD PTR [ecx+0x5c347034],edi
  4120ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120cf:	jno    0x412109
  4120d1:	mov    al,0x62
  4120d3:	add    BYTE PTR [eax],0x95
  4120d6:	mov    ecx,0x2e31021d
  4120db:	stc    
  4120dc:	jp     0x4120a7
  4120de:	pop    ebp
  4120df:	push   0xbf132b22
  4120e4:	and    eax,0xe0bc2740
  4120e9:	and    ecx,DWORD PTR [edi+ebp*8]
  4120ec:	ror    ch,cl
  4120ee:	stos   DWORD PTR es:[edi],eax
  4120ef:	pop    edi
  4120f0:	dec    ebp
  4120f1:	mov    al,0xde
  4120f3:	fs mov edi,0x3cfd38e4
  4120f9:	lods   al,BYTE PTR ds:[esi]
  4120fa:	lds    eax,FWORD PTR [ecx-0x101a0f02]
  412100:	mov    dh,0x4b
  412102:	shl    esp,1
  412104:	xchg   BYTE PTR [esi-0x9],ch
  412107:	mov    ds:0x1825488c,eax
  41210c:	out    dx,al
  41210d:	add    eax,0xe92609ff
  412112:	pop    ds
  412113:	call   0xe11d:0x77f4c2f3
  41211a:	imul   esp,DWORD PTR ds:0xfeeca62a,0x4a68bd31
  412124:	xchg   edx,eax
  412125:	dec    ebp
  412126:	in     eax,dx
  412127:	xor    ch,0xfc
  41212a:	daa    
  41212b:	cmp    dl,dl
  41212d:	aad    0x91
  41212f:	pushf  
  412130:	push   edx
  412131:	sub    ecx,edx
  412133:	cmp    ebp,DWORD PTR [edi]
  412135:	sub    ebx,DWORD PTR [ebx+edi*2]
  412138:	ror    DWORD PTR [ebp-0x523e4dfd],0x1d
  41213f:	mov    esp,0x809e8490
  412144:	adc    eax,0xeb6e8688
  412149:	cmp    BYTE PTR [ebx-0x54057069],al
  41214f:	pop    ebx
  412150:	push   esp
  412151:	loopne 0x412195
  412153:	dec    esi
  412154:	pusha  
  412155:	add    edx,esp
  412157:	je     0x412111
  412159:	jecxz  0x4121ab
  41215b:	lock rol esi,1
  41215e:	pop    ds
  41215f:	pop    ss
  412160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412161:	add    ecx,DWORD PTR [esi+0x58]
  412164:	shr    BYTE PTR [ecx-0x5bb85344],cl
  41216a:	add    dl,bl
  41216c:	xor    DWORD PTR [edi+0x3],ebx
  41216f:	dec    edi
  412170:	dec    edi
  412171:	jno    0x412177
  412173:	stos   DWORD PTR es:[edi],eax
  412174:	add    bh,cl
  412176:	or     edx,DWORD PTR [eax]
  412178:	popf   
  412179:	sbb    ah,ch
  41217b:	lea    esi,[eax+0x6e]
  41217e:	jecxz  0x41215b
  412180:	les    esi,FWORD PTR [edi+0x77]
  412183:	arpl   WORD PTR [eax-0x56],bx
  412186:	scas   al,BYTE PTR es:[edi]
  412187:	rol    BYTE PTR [edi-0x10],0x37
  41218b:	mov    edx,0x4df912ea
  412190:	mov    eax,0xc678f6c9
  412195:	jns    0x412171
  412197:	inc    ecx
  412198:	xchg   BYTE PTR [edi-0x6510360],dh
  41219e:	xor    ecx,DWORD PTR [ebp+0x5b]
  4121a1:	jno    0x412126
  4121a3:	bnd jb 0x412157
  4121a6:	or     BYTE PTR [eax-0x56],dh
  4121a9:	test   DWORD PTR [esi-0x3],eax
  4121ac:	jmp    0x79b4:0xae40a4d1
  4121b3:	add    ah,bh
  4121b5:	xchg   ebp,eax
  4121b6:	jnp    0x4121d6
  4121b8:	inc    edi
  4121b9:	xor    dh,BYTE PTR [esi+0x61]
  4121bc:	push   0x58
  4121be:	(bad)  
  4121bf:	je     0x41216e
  4121c1:	xor    BYTE PTR [esi-0x3f946854],al
  4121c7:	test   eax,0xc59a13ae
  4121cc:	xor    ah,BYTE PTR [esi-0x67]
  4121cf:	push   0xffffffbb
  4121d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121d2:	stc    
  4121d3:	mov    bh,0x8b
  4121d5:	(bad)  
  4121d7:	mov    al,ds:0x174cdef5
  4121dc:	sbb    edi,DWORD PTR [edx+0x4e375e4e]
  4121e2:	cwde   
  4121e3:	jl     0x41216e
  4121e5:	xor    DWORD PTR [esi],ebp
  4121e7:	aam    0xaa
  4121e9:	arpl   WORD PTR [ebx+0xf],bp
  4121ec:	test   DWORD PTR [esi],ebp
  4121ee:	fidiv  WORD PTR [edx-0x1ca1fb43]
  4121f4:	xchg   edx,eax
  4121f5:	push   ecx
  4121f6:	adc    bl,BYTE PTR [ebp-0x453845c9]
  4121fc:	ins    DWORD PTR es:[edi],dx
  4121fd:	cld    
  4121fe:	dec    DWORD PTR [eax-0xef07e85]
  412204:	jl     0x412230
  412206:	mov    ecx,DWORD PTR [edx-0x7f]
  412209:	dec    eax
  41220a:	fdivrp st(4),st
  41220c:	sti    
  41220d:	push   es
  41220e:	stos   DWORD PTR es:[edi],eax
  41220f:	and    DWORD PTR [edx+0x78866643],ebp
  412215:	stos   DWORD PTR es:[edi],eax
  412216:	dec    ebx
  412217:	je     0x412222
  412219:	add    al,0x2c
  41221b:	mov    edx,0x8b0979f5
  412220:	cmp    eax,0xc40dd5b1
  412225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412226:	lods   al,BYTE PTR ds:[esi]
  412227:	hlt    
  412228:	sbb    cl,al
  41222a:	or     BYTE PTR [ebx],dl
  41222c:	mov    edi,0x9294b72
  412231:	popa   
  412232:	(bad)
  412236:	jl     0x412292
  412238:	mov    dl,0x36
  41223a:	push   ecx
  41223b:	int    0xd1
  41223d:	mov    edx,0xa3753813
  412242:	icebp  
  412243:	xlat   BYTE PTR ds:[ebx]
  412244:	mov    dl,0xaf
  412246:	sbb    eax,0x2348ea61
  41224b:	fisttp DWORD PTR [esi]
  41224d:	add    al,BYTE PTR [eax+edx*2+0x46ada761]
  412254:	cmp    al,0x55
  412256:	pop    esi
  412257:	adc    eax,DWORD PTR [edx]
  412259:	pop    ss
  41225a:	xor    eax,0x22ba8bc0
  41225f:	adc    DWORD PTR [edx+0x50],ebx
  412262:	mov    esi,0xf75f646e
  412267:	js     0x41223a
  412269:	sbb    eax,0xceeffc76
  41226e:	mov    esi,0x31243c68
  412273:	mov    ch,0x1d
  412275:	aad    0x85
  412277:	daa    
  412278:	pop    es
  412279:	or     DWORD PTR [eax+0x24bed892],eax
  41227f:	xor    ebp,esi
  412281:	xchg   esi,eax
  412282:	xchg   BYTE PTR [eax-0x459cc6c0],ah
  412288:	inc    edi
  412289:	push   edi
  41228a:	mov    ds:0xaddc9038,al
  41228f:	dec    edx
  412290:	jnp    0x41229b
  412292:	cli    
  412293:	pop    esp
  412294:	push   ds
  412295:	mov    es,WORD PTR [eax-0x6c820183]
  41229b:	aad    0xb
  41229d:	pop    esp
  41229e:	sub    DWORD PTR [eax],esi
  4122a0:	cmp    al,0x8f
  4122a2:	adc    DWORD PTR [esi-0x6be0170e],ebp
  4122a8:	stos   DWORD PTR es:[edi],eax
  4122a9:	mov    esp,0xa949788c
  4122ae:	xor    BYTE PTR [esi-0x3b],dl
  4122b1:	inc    edx
  4122b2:	and    DWORD PTR [esi-0x4b6e2b9e],0x40
  4122b9:	mov    ch,BYTE PTR [eax]
  4122bb:	out    dx,eax
  4122bc:	dec    esp
  4122bd:	aaa    
  4122be:	les    ecx,FWORD PTR [esp+edx*2]
  4122c1:	pop    esp
  4122c2:	mov    ebx,0x46b6b4a4
  4122c7:	sub    al,0xc7
  4122c9:	imul   esp,DWORD PTR [eax+0x4c32a60b],0x55a55bc0
  4122d3:	mov    ch,0x34
  4122d5:	rcl    BYTE PTR [esi-0x155718a8],0x28
  4122dc:	cvtdq2ps xmm2,XMMWORD PTR [ecx]
  4122df:	adc    eax,DWORD PTR [esi+0xaf4c98]
  4122e5:	fstp   DWORD PTR ds:0x2cae0908
  4122eb:	jbe    0x4122da
  4122ed:	out    0xd3,al
  4122ef:	jp     0x4122d9
  4122f1:	test   al,0x80
  4122f3:	je     0x412357
  4122f5:	fs cmp eax,0x54202d8e
  4122fb:	push   eax
  4122fc:	loopne 0x412288
  4122fe:	lods   eax,DWORD PTR ds:[esi]
  4122ff:	lock pop ebp
  412301:	mov    BYTE PTR [edi-0x57],al
  412304:	xchg   esi,eax
  412305:	sub    ch,BYTE PTR [ecx+0x25]
  412308:	(bad)  
  412309:	and    al,0x53
  41230b:	inc    eax
  41230c:	test   eax,0xb752b602
  412311:	fwait
  412312:	pop    ebp
  412313:	in     al,dx
  412314:	jae    0x412387
  412316:	jg     0x4122ba
  412318:	mov    ebp,ss
  41231a:	pop    ebp
  41231b:	outs   dx,BYTE PTR ds:[si]
  41231d:	scas   al,BYTE PTR es:[edi]
  41231e:	ret    
  41231f:	xor    edi,eax
  412321:	lods   al,BYTE PTR ds:[esi]
  412322:	sbb    DWORD PTR [eax+0x415ee4c3],eax
  412328:	push   edx
  412329:	dec    edx
  41232a:	dec    esp
  41232b:	mov    ebx,DWORD PTR [ecx-0x38fa743f]
  412331:	shl    bl,0x27
  412334:	jmp    0x93822881
  412339:	inc    eax
  41233a:	(bad)  
  41233b:	ins    DWORD PTR es:[edi],dx
  41233c:	rcr    BYTE PTR [edi-0xf],0x9
  412340:	shl    DWORD PTR [edx-0x36],cl
  412343:	xor    al,0x27
  412345:	jle    0x4123a8
  412347:	sub    eax,ecx
  412349:	xor    esi,DWORD PTR [edx-0x7b]
  41234c:	dec    esi
  41234d:	push   ss
  41234e:	push   esp
  41234f:	sbb    bl,dh
  412351:	imul   edi
  412353:	repz sbb ah,BYTE PTR cs:[edi]
  412357:	nop
  412358:	and    BYTE PTR [ecx+0x2741a970],ch
  41235e:	xchg   ecx,eax
  41235f:	icebp  
  412360:	stos   DWORD PTR es:[edi],eax
  412361:	and    ecx,DWORD PTR [eax]
  412363:	jp     0x4123dd
  412365:	jmp    0x3c0b:0x97045753
  41236c:	sbb    bh,BYTE PTR [ebx]
  41236e:	into   
  41236f:	cmp    eax,DWORD PTR [esi+0x21a20612]
  412375:	bound  ebx,QWORD PTR [eax+0x37618cec]
  41237b:	sbb    ch,BYTE PTR [ebp+ecx*2-0x4c]
  41237f:	ss retf 0x1567
  412383:	adc    al,0x14
  412385:	push   ebp
  412386:	xor    ah,ah
  412388:	inc    esi
  412389:	mov    edx,0xf361affa
  41238e:	sub    al,0xfa
  412390:	out    0x61,eax
  412392:	clc    
  412393:	pop    ds
  412394:	ins    BYTE PTR es:[edi],dx
  412395:	mov    dh,0x6a
  412397:	sub    al,0xc6
  412399:	mov    al,ds:0xa2e8562b
  41239e:	mov    edx,0xc4387920
  4123a3:	js     0x412344
  4123a5:	jo     0x41234d
  4123a7:	or     BYTE PTR [ecx-0x51725c5],bh
  4123ad:	aad    0xe0
  4123af:	out    dx,al
  4123b0:	mov    WORD PTR [ebx+0x2e],gs
  4123b3:	std    
  4123b4:	or     ah,BYTE PTR [edi]
  4123b6:	dec    eax
  4123b7:	pop    ecx
  4123b8:	mov    cl,0xbb
  4123ba:	dec    eax
  4123bb:	cmp    BYTE PTR [ebp+0x12662379],bh
  4123c1:	out    0x6c,eax
  4123c3:	sub    ebp,DWORD PTR [edx+0x56]
  4123c6:	pop    edi
  4123c7:	push   edx
  4123c8:	lock outs dx,BYTE PTR ds:[esi]
  4123ca:	sbb    esp,ebx
  4123cc:	sbb    BYTE PTR [esi+0x14ee7155],cl
  4123d2:	cmp    al,0x67
  4123d4:	pop    ebx
  4123d5:	mov    cl,BYTE PTR [eax]
  4123d7:	loopne 0x412364
  4123d9:	xor    BYTE PTR [esi],0x89
  4123dc:	mov    ebp,0x4087ea1e
  4123e1:	(bad)  
  4123e2:	fsubr  QWORD PTR [esi-0x7c8f1be3]
  4123e8:	sbb    eax,0xeed6c26b
  4123ed:	mov    eax,ds:0x9606407c
  4123f2:	dec    ebp
  4123f3:	pop    esp
  4123f4:	or     eax,0x1f30cb60
  4123f9:	pop    ss
  4123fa:	xchg   DWORD PTR [eax+ecx*4+0x750625f1],ebp
  412401:	js     0x4123de
  412403:	popa   
  412404:	mov    dl,0xd3
  412406:	pop    esi
  412407:	or     eax,0x3a113a78
  41240c:	stos   DWORD PTR es:[edi],eax
  41240d:	pop    esp
  41240e:	inc    ebp
  41240f:	sub    bh,dh
  412411:	fstp   st(1)
  412413:	pushf  
  412414:	or     al,0x5d
  412416:	(bad)  
  412417:	pop    eax
  412418:	in     eax,dx
  412419:	out    dx,eax
  41241a:	(bad)  
  41241c:	ds mov dh,0xf9
  41241f:	inc    ebp
  412420:	adc    ah,cl
  412422:	fdiv   st(2),st
  412424:	xchg   DWORD PTR [ecx+0x6629a201],ecx
  41242a:	push   esi
  41242b:	add    DWORD PTR ds:0xba613a9e,0x8eccdb40
  412435:	arpl   WORD PTR ds:0x1d37cc88,bx
  41243b:	popa   
  41243c:	nop
  41243d:	test   DWORD PTR [eax-0x629a0ed2],0xb67a0dd5
  412447:	fsub   DWORD PTR ds:0x6724134d
  41244d:	ins    DWORD PTR es:[edi],dx
  41244e:	(bad)  
  41244f:	sub    edi,DWORD PTR [edi]
  412451:	or     ebp,edi
  412453:	inc    esp
  412454:	cmp    eax,0xaa6d600
  412459:	pop    edi
  41245a:	mov    ebx,0x256e5fe2
  41245f:	repz in eax,dx
  412461:	pop    eax
  412462:	jmp    0x412467
  412464:	jmp    0x79d024b3
  412469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41246a:	mov    ah,cl
  41246c:	hlt    
  41246d:	xor    edi,DWORD PTR [edx]
  41246f:	stos   BYTE PTR es:[edi],al
  412470:	pop    edx
  412471:	inc    ecx
  412472:	xlat   BYTE PTR ds:[ebx]
  412473:	jecxz  0x412483
  412475:	adc    ecx,DWORD PTR ds:0xac9a7b59
  41247b:	rol    DWORD PTR [edi-0x50],1
  41247e:	dec    ecx
  41247f:	repnz xchg edx,eax
  412481:	fucomip st,st(6)
  412483:	adc    DWORD PTR [edx],ebx
  412485:	adc    eax,0xbca7750a
  41248a:	fcmovnbe st,st(7)
  41248c:	js     0x4124db
  41248e:	jb     0x412491
  412490:	inc    esp
  412491:	es pop es
  412493:	adc    esi,DWORD PTR [edi+0x34779cd7]
  412499:	fist   WORD PTR [eax]
  41249b:	push   ds
  41249c:	mov    ebp,0xc23db865
  4124a1:	push   0x92b05e37
  4124a6:	lods   al,BYTE PTR ds:[esi]
  4124a7:	test   DWORD PTR [esi-0x5c1e231f],ecx
  4124ad:	push   ds
  4124ae:	jecxz  0x4124b5
  4124b0:	inc    esp
  4124b1:	cmc    
  4124b2:	cmp    al,bl
  4124b4:	add    ebx,eax
  4124b6:	pop    esi
  4124b7:	loope  0x4124d7
  4124b9:	test   BYTE PTR [ebp+0x12],dh
  4124bc:	repz push eax
  4124be:	pop    esp
  4124bf:	inc    eax
  4124c0:	sbb    BYTE PTR [ebx+0x6d395d3c],bh
  4124c6:	push   ecx
  4124c7:	sub    edi,esi
  4124c9:	cmp    ecx,DWORD PTR [eax]
  4124cb:	pop    ss
  4124cc:	jmp    0x2ec0:0x66654f15
  4124d3:	out    0xaa,al
  4124d5:	nop
  4124d6:	dec    ecx
  4124d7:	xchg   DWORD PTR [ebx-0x1bce88ff],edi
  4124dd:	xchg   edi,eax
  4124de:	das    
  4124df:	fwait
  4124e0:	pop    esp
  4124e1:	xchg   esp,eax
  4124e2:	push   ss
  4124e3:	inc    ecx
  4124e4:	lock mov ebx,0x4ff4d760
  4124ea:	rol    BYTE PTR ds:0xff404dbd,0xab
  4124f1:	and    DWORD PTR [esi+0x49],edx
  4124f4:	test   al,0x5e
  4124f6:	adc    eax,0x6d3e736c
  4124fb:	jbe    0x4124ab
  4124fd:	xor    al,0x9
  4124ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412500:	jmp    0x412534
  412502:	inc    ebp
  412503:	xchg   esi,eax
  412504:	lea    ebx,[ebx-0x5e]
  412507:	pop    edi
  412508:	mov    es,WORD PTR [edi+0x27]
  41250b:	lahf   
  41250c:	into   
  41250d:	cmp    dl,dh
  41250f:	in     eax,dx
  412510:	in     al,0xaf
  412512:	or     BYTE PTR [edx-0x41b7855],cl
  412518:	xlat   BYTE PTR ds:[ebx]
  412519:	aas    
  41251a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41251b:	jle    0x4124a8
  41251d:	bound  ebp,QWORD PTR [ebx-0x34b942b0]
  412523:	xlat   BYTE PTR ds:[ebx]
  412524:	mov    bl,0x18
  412526:	dec    eax
  412527:	fs cs mov dl,0x55
  41252b:	jge    0x4124af
  41252d:	xchg   ebx,eax
  41252e:	pop    edx
  41252f:	fwait
  412530:	arpl   WORD PTR [edi+0x621ad1eb],dx
  412536:	sahf   
  412537:	sbb    eax,0x48d85c1
  41253c:	sbb    al,0xd
  41253e:	and    eax,0x35f3263a
  412543:	push   eax
  412544:	jp     0x412592
  412546:	sti    
  412547:	sub    ebx,DWORD PTR [ebx]
  412549:	push   ebx
  41254a:	xchg   edx,eax
  41254b:	and    eax,0x5df381b3
  412550:	jp     0x41258c
  412552:	sbb    al,0x6e
  412554:	cli    
  412555:	xor    eax,0xc69c892d
  41255a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41255b:	mov    ds:0x66d68829,al
  412560:	sbb    cl,BYTE PTR [esi+edx*1+0x76a38e3d]
  412567:	fdiv   QWORD PTR [edi+0x4cbe2e17]
  41256d:	mov    ds:0x2ed4668b,al
  412572:	and    al,0x43
  412574:	cmp    eax,0x46147a11
  412579:	ja     0x412575
  41257b:	jns    0x4125bc
  41257d:	push   esp
  41257e:	enter  0xcfb9,0x3d
  412582:	ret    0xa4db
  412585:	add    eax,DWORD PTR [ecx]
  412587:	sub    al,0x9
  412589:	loope  0x412554
  41258b:	leave  
  41258c:	pop    esp
  41258d:	es cs sahf 
  412590:	call   0x35c2:0x1e5b7ebc
  412597:	(bad)  
  412598:	mov    eax,ds:0x1d480f4
  41259d:	stos   DWORD PTR es:[edi],eax
  41259e:	iret   
  41259f:	mov    esi,0xa6221ea1
  4125a4:	sub    BYTE PTR [edx],bh
  4125a6:	test   al,0x3e
  4125a8:	dec    ebp
  4125a9:	pop    esp
  4125aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125ab:	mov    al,ds:0xb33c37b2
  4125b0:	popa   
  4125b1:	mov    edi,0xae0c617d
  4125b6:	retf   0x77ac
  4125b9:	fidivr DWORD PTR [esi]
  4125bb:	xchg   ebp,eax
  4125bc:	fs jp  0x412620
  4125bf:	dec    esp
  4125c0:	sub    BYTE PTR [ecx],dl
  4125c2:	inc    esi
  4125c3:	pop    ebx
  4125c4:	int    0xfa
  4125c6:	mov    al,ds:0x961aff47
  4125cb:	inc    edi
  4125cc:	mov    ebx,0xe56c6fdf
  4125d1:	(bad)  
  4125d2:	inc    DWORD PTR [ebp-0x731b8251]
  4125d8:	(bad)  
  4125d9:	fldcw  WORD PTR [eax]
  4125db:	pop    edi
  4125dc:	fisttp WORD PTR [esi+0x2b]
  4125df:	xchg   esp,eax
  4125e0:	xchg   edx,eax
  4125e1:	jecxz  0x41263a
  4125e3:	rcr    BYTE PTR [ebp-0x344688d2],0x32
  4125ea:	clc    
  4125eb:	jg     0x412648
  4125ed:	mov    ds:0x2843d893,al
  4125f2:	and    BYTE PTR ds:0xc62794e2,0xd7
  4125f9:	sub    edx,esi
  4125fb:	jo     0x41261a
  4125fd:	xlat   BYTE PTR ds:[ebx]
  4125fe:	shl    DWORD PTR [edx+0x4d],cl
  412601:	in     al,dx
  412602:	mov    es,WORD PTR [ebp-0x80]
  412605:	jmp    0x7bf1b0a4
  41260a:	call   0x1170:0xfafaea5d
  412611:	dec    esi
  412612:	mov    WORD PTR [ecx],cs
  412614:	or     al,0xd2
  412616:	sub    DWORD PTR [eax+eax*2-0x55],0x56
  41261b:	or     DWORD PTR [ebx-0x30],edx
  41261e:	push   ds
  41261f:	aad    0x21
  412621:	iret   
  412622:	inc    esp
  412623:	add    ecx,edx
  412625:	sub    BYTE PTR [edx],0x8b
  412628:	cmp    al,BYTE PTR gs:[edx+0x5d]
  41262c:	inc    ebx
  41262d:	add    edx,esp
  41262f:	mov    ecx,0xe155ca43
  412634:	das    
  412635:	add    al,BYTE PTR [edi-0x1287df93]
  41263b:	pmovmskb ebx,mm3
  41263e:	dec    esi
  41263f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412640:	fdiv   QWORD PTR [ebp-0x26]
  412643:	pop    ebx
  412644:	push   cs
  412645:	lahf   
  412646:	leave  
  412647:	fisttp WORD PTR ds:0xc80d9ce7
  41264d:	xchg   ebp,eax
  41264e:	repnz popa 
  412650:	push   0xffffffe9
  412652:	out    0xaa,al
  412654:	sbb    bh,dh
  412656:	inc    ecx
  412657:	fisttp QWORD PTR [eax]
  412659:	mov    eax,ds:0x2560e62d
  41265e:	bound  esp,QWORD PTR [ebp+0x38db71d2]
  412664:	fnsave [edi+eiz*4]
  412667:	ja     0x412675
  412669:	and    ebp,DWORD PTR [ecx+edi*2]
  41266c:	call   0x39e82733
  412671:	mov    eax,ds:0xced85f5c
  412676:	mov    al,ah
  412678:	retf   
  412679:	xor    eax,DWORD PTR [edx-0x55]
  41267c:	adc    BYTE PTR [edx+0x680631f0],dh
  412682:	loop   0x4126d1
  412684:	adc    eax,0xa2c71351
  412689:	fcmovbe st,st(6)
  41268b:	push   ebx
  41268c:	arpl   WORD PTR [edx+0x21],cx
  41268f:	popf   
  412690:	lock lods eax,DWORD PTR ds:[esi]
  412692:	mov    ch,0x6f
  412694:	or     al,0xae
  412696:	inc    eax
  412697:	test   eax,0x830609fa
  41269c:	xchg   esp,eax
  41269d:	aam    0x31
  41269f:	mov    edx,0x426b9e99
  4126a4:	sbb    dh,BYTE PTR [ecx+0x32]
  4126a7:	sbb    BYTE PTR [edx+0x1dfd0a8e],cl
  4126ad:	leave  
  4126ae:	out    dx,eax
  4126af:	(bad)  
  4126b0:	dec    ebx
  4126b1:	push   ss
  4126b2:	data16 mov dh,0x3d
  4126b5:	cmp    edi,DWORD PTR [esi-0x19db3ef9]
  4126bb:	cmp    ah,BYTE PTR [eax]
  4126bd:	iret   
  4126be:	imul   eax,DWORD PTR [edx],0xe13d21b2
  4126c4:	or     BYTE PTR [esi+0x74],dl
  4126c7:	adc    al,0x4e
  4126c9:	mov    bl,0xa6
  4126cb:	nop
  4126cc:	call   DWORD PTR [eax-0x4e]
  4126cf:	(bad)  
  4126d1:	mov    dh,bl
  4126d3:	fisub  DWORD PTR [edi+0x50679b06]
  4126d9:	vshufps xmm5,xmm4,XMMWORD PTR [eax+0x47a1cfa3],0x8b
  4126e2:	fidiv  WORD PTR [edx]
  4126e4:	frstor [ebp-0x12]
  4126e7:	popa   
  4126e8:	cld    
  4126e9:	punpcklbw mm7,DWORD PTR [ecx+0x0]
  4126ed:	imul   ebp,DWORD PTR fs:[ebx-0x38],0x4e
  4126f2:	cld    
  4126f3:	mov    ds:0x7a9837a0,al
  4126f8:	sahf   
  4126f9:	sbb    BYTE PTR [ebx+0x543df30e],0xa3
  412700:	xor    edi,DWORD PTR [edi-0x8f9d279]
  412706:	push   ecx
  412707:	jmp    0x91946447
  41270c:	adc    al,0x9e
  41270e:	mov    eax,ds:0x719cb406
  412713:	sub    eax,0x368bb0d9
  412718:	ss and ch,dh
  41271b:	fldenv [eax]
  41271d:	and    esi,DWORD PTR [ecx]
  41271f:	cwde   
  412720:	mov    edi,0x6ebd7cb3
  412725:	or     esp,DWORD PTR [ebx+0x54eb3c04]
  41272b:	std    
  41272c:	pop    edi
  41272d:	int3   
  41272e:	push   edx
  41272f:	inc    ebx
  412730:	repz cmp edi,DWORD PTR [ebx+0x162aa59a]
  412737:	iret   
  412738:	add    eax,0x57442798
  41273d:	jno    0x4126d6
  41273f:	mov    al,ds:0x671aa0b8
  412744:	iret   
  412745:	rol    BYTE PTR [ecx],0xb4
  412748:	mov    ah,0xd
  41274a:	into   
  41274b:	cmp    DWORD PTR [eax],esp
  41274d:	enter  0x9aca,0x31
  412751:	cmp    ah,BYTE PTR [ecx]
  412753:	or     al,0xd5
  412755:	pop    eax
  412756:	enter  0x5813,0x5
  41275a:	out    dx,eax
  41275b:	not    ebx
  41275d:	dec    esp
  41275e:	popf   
  41275f:	cmp    DWORD PTR [ecx-0x18],0x42
  412763:	push   esp
  412764:	outs   dx,DWORD PTR ds:[esi]
  412765:	in     eax,0x41
  412767:	mov    dh,BYTE PTR [ecx+eax*8-0x31]
  41276b:	cmp    esi,0xffffff9c
  41276e:	inc    edi
  41276f:	cmp    al,0x94
  412771:	and    BYTE PTR [edx+0x423d9010],dl
  412777:	cmp    BYTE PTR [edi],bl
  412779:	inc    edi
  41277a:	cdq    
  41277b:	dec    ecx
  41277c:	sbb    BYTE PTR [ebx+ebx*8-0xad8939],ch
  412783:	psubw  mm7,QWORD PTR [ecx]
  412786:	add    eax,0x2a3c47d
  41278b:	in     eax,0x10
  41278d:	outs   dx,BYTE PTR ds:[esi]
  41278e:	lods   eax,DWORD PTR ds:[esi]
  41278f:	shl    DWORD PTR [edi],cl
  412791:	daa    
  412792:	cs pop esp
  412794:	or     dl,BYTE PTR [ebx]
  412796:	mov    WORD PTR [esi+0x3df43ed2],fs
  41279c:	xor    BYTE PTR [ecx-0x3433becb],0xa9
  4127a3:	jnp    0x41280e
  4127a5:	add    ch,BYTE PTR [eax+0x9]
  4127a8:	lock arpl WORD PTR [esi],bp
  4127ab:	shl    bh,cl
  4127ad:	or     dh,BYTE PTR [esi+0x7e]
  4127b0:	fiadd  WORD PTR [edx-0x58]
  4127b3:	lods   al,BYTE PTR ds:[esi]
  4127b4:	es jae 0x4127e7
  4127b7:	push   esi
  4127b8:	add    edx,esi
  4127ba:	test   al,0xcc
  4127bc:	enter  0x1054,0xea
  4127c0:	pushf  
  4127c1:	rcl    bh,1
  4127c3:	sub    bh,dl
  4127c5:	nop
  4127c6:	cli    
  4127c7:	in     eax,0x5e
  4127c9:	cmp    BYTE PTR [ecx-0x1918cd5],dh
  4127cf:	jge    0x412815
  4127d1:	es jge 0x412853
  4127d4:	lock sbb esi,DWORD PTR ds:0x9d915fff
  4127db:	jo     0x4127c7
  4127dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127de:	adc    BYTE PTR [esi-0x693f02d7],ch
  4127e4:	and    edx,esi
  4127e6:	dec    ebp
  4127e7:	push   edx
  4127e8:	ss dec edi
  4127ea:	jae    0x412790
  4127ec:	mov    es,WORD PTR [ebp-0x76]
  4127ef:	int    0xea
  4127f1:	add    al,0x8d
  4127f3:	fdiv   QWORD PTR [ecx-0x72]
  4127f6:	repnz mov al,BYTE PTR [ebx+edx*8]
  4127fa:	or     bh,dl
  4127fc:	pop    edx
  4127fd:	push   0x1fb1e7e3
  412802:	fxch   st(4)
  412804:	pop    esi
  412805:	test   DWORD PTR ss:[edi-0x60],esp
  412809:	je     0x412810
  41280b:	lds    ecx,FWORD PTR [ebx*1-0x3a49bf4a]
  412812:	fist   DWORD PTR [ebx+0x30e9ff3e]
  412818:	fdivr  QWORD PTR [esi+ecx*4]
  41281b:	out    0x17,al
  41281d:	repz dec esi
  41281f:	fwait
  412820:	jbe    0x412814
  412822:	mov    edx,0x8f5c71ab
  412827:	rol    BYTE PTR [eax],0xfd
  41282a:	loop   0x4127ef
  41282c:	adc    DWORD PTR [ebp+0x36],0xc601ce1d
  412833:	or     al,BYTE PTR [eax]
  412835:	loop   0x4127d8
  412837:	clts   
  412839:	iret   
  41283a:	mov    al,0xac
  41283c:	andps  xmm7,xmm5
  41283f:	out    dx,eax
  412840:	pop    ss
  412841:	xchg   dh,al
  412843:	repz fidivr WORD PTR [esi+0x1ae5a5e0]
  41284a:	xor    ebp,DWORD PTR [ecx-0x114112ba]
  412850:	mov    bl,0xed
  412852:	sub    eax,0xd1acc9c3
  412857:	lods   al,BYTE PTR ds:[esi]
  412858:	xlat   BYTE PTR ds:[ebx]
  412859:	xchg   ebp,eax
  41285a:	mov    ebp,0x6f18b5ee
  41285f:	(bad)  
  412860:	fdivr  QWORD PTR [ebp+0x17f89afc]
  412866:	push   ebx
  412867:	xchg   esi,eax
  412868:	ret    
  412869:	je     0x412890
  41286b:	mov    dl,0x31
  41286d:	mov    dl,BYTE PTR [ebx]
  41286f:	fdiv   st(4),st
  412871:	lds    ebp,FWORD PTR [edx+0x47b95866]
  412877:	sbb    al,0xbc
  412879:	jbe    0x412837
  41287b:	pop    ecx
  41287c:	xor    dh,bl
  41287e:	add    DWORD PTR [ebp+0x1b],edx
  412881:	sub    al,0x33
  412883:	outs   dx,DWORD PTR ds:[esi]
  412884:	or     al,0x59
  412886:	fstp   st(0)
  412888:	stos   DWORD PTR es:[edi],eax
  412889:	mov    al,ds:0xbfa997b
  41288e:	jmp    0xbe96:0x6033c305
  412895:	paddw  mm1,QWORD PTR [esi]
  412898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412899:	retf   0xb896
  41289c:	sahf   
  41289d:	js     0x4128dc
  41289f:	add    ch,BYTE PTR [edx+0x12e6b453]
  4128a5:	add    al,0xe0
  4128a7:	mov    ebx,0xd960329d
  4128ac:	dec    esi
  4128ad:	cmp    bl,BYTE PTR [ecx+0x714fa7b8]
  4128b3:	out    dx,eax
  4128b4:	cmp    eax,0x468e94dc
  4128b9:	adc    al,0x8
  4128bb:	lds    edi,FWORD PTR [edx-0x1fca157c]
  4128c1:	jecxz  0x412875
  4128c3:	add    BYTE PTR ds:0x58c337ce,0x66
  4128ca:	sbb    cl,BYTE PTR [ebp-0x4f4184ec]
  4128d0:	(bad)  
  4128d1:	mov    eax,ds:0xb75401dc
  4128d6:	sub    eax,eax
  4128d8:	leave  
  4128d9:	addr16 add al,0x4d
  4128dc:	outs   dx,BYTE PTR ds:[esi]
  4128dd:	xor    edi,edx
  4128df:	in     eax,0x7e
  4128e1:	and    eax,0x652fd64f
  4128e6:	inc    ebx
  4128e7:	cmp    BYTE PTR [ebx-0x3c],bl
  4128ea:	or     al,0x13
  4128ec:	mov    bl,bh
  4128ee:	pop    ds
  4128ef:	lahf   
  4128f0:	jl     0x412920
  4128f2:	jmp    0x412883
  4128f4:	(bad)
  4128f7:	int3   
  4128f8:	fisub  DWORD PTR [edx+0x2eb269d2]
  4128fe:	loop   0x41296a
  412900:	jbe    0x4128f2
  412902:	repz call 0x33b647d
  412908:	pop    ebp
  412909:	addr16 (bad) 
  41290b:	std    
  41290c:	and    dl,0x27
  41290f:	pop    edx
  412910:	pushf  
  412911:	hlt    
  412912:	mov    fs,esp
  412914:	into   
  412915:	mov    edi,0xd8210dad
  41291b:	shl    DWORD PTR [esi-0x15],0x64
  41291f:	or     al,0x3
  412921:	ds dec edi
  412923:	adc    al,0x97
  412925:	enter  0xf8fc,0x8
  412929:	xor    dh,dl
  41292b:	or     BYTE PTR [ecx-0x62fbb2aa],ah
  412931:	test   DWORD PTR [ebx],esi
  412933:	jecxz  0x41291b
  412935:	dec    edi
  412936:	inc    ebx
  412937:	push   eax
  412938:	add    esi,DWORD PTR [ebp+edi*8-0x26]
  41293c:	xor    BYTE PTR [ecx-0x604537ac],dh
  412942:	dec    esp
  412943:	jb     0x412934
  412945:	mov    edx,0xe8c8ae18
  41294a:	inc    esp
  41294b:	jp     0x412937
  41294d:	pop    eax
  41294e:	pop    ebx
  41294f:	es mov dh,0x4a
  412952:	add    al,0xe6
  412954:	inc    esp
  412955:	push   ecx
  412956:	jo     0x412985
  412958:	xchg   esi,eax
  412959:	inc    edi
  41295a:	xchg   ebx,eax
  41295b:	in     al,dx
  41295c:	jnp    0x4129b7
  41295e:	mov    eax,ds:0xa7400d76
  412963:	ins    BYTE PTR es:[edi],dx
  412964:	loope  0x412997
  412966:	sti    
  412967:	push   es
  412968:	aad    0x67
  41296a:	dec    ecx
  41296b:	pop    esp
  41296c:	(bad)  
  41296e:	and    eax,0x3fb07678
  412973:	cmp    BYTE PTR [esi],0xb1
  412976:	popf   
  412977:	sbb    dh,BYTE PTR [eax-0x29a0c1e7]
  41297d:	cli    
  41297e:	(bad)  
  41297f:	cmc    
  412980:	dec    edx
  412981:	test   bh,0xd3
  412984:	xchg   ebx,eax
  412985:	popf   
  412986:	inc    ebx
  412987:	stos   BYTE PTR es:[edi],al
  412988:	inc    esi
  412989:	hlt    
  41298a:	pop    esp
  41298b:	mov    bh,0x74
  41298d:	mov    ah,0xa7
  41298f:	sub    DWORD PTR [ecx+esi*1],edx
  412992:	cmp    DWORD PTR [eax-0x5c],esi
  412995:	jns    0x412922
  412997:	mov    WORD PTR [edi-0x5b],cs
  41299a:	sbb    esi,DWORD PTR [esi]
  41299c:	es jnp 0x4129c7
  41299f:	inc    eax
  4129a0:	and    eax,0x4c95683a
  4129a5:	sti    
  4129a6:	es (bad) 
  4129a8:	and    dh,BYTE PTR [ecx]
  4129aa:	push   edi
  4129ab:	popa   
  4129ac:	popf   
  4129ad:	aas    
  4129ae:	repz in al,0x42
  4129b1:	mov    ds:0xcb8529de,al
  4129b6:	aam    0xb9
  4129b8:	fidiv  WORD PTR [edi-0x6a]
  4129bb:	jp     0x412956
  4129bd:	mov    ds:0x30648e3,al
  4129c2:	or     DWORD PTR [ecx],esi
  4129c4:	(bad)  
  4129c5:	jbe    0x41294c
  4129c7:	mov    eax,ds:0xcf12d8d9
  4129cc:	sub    eax,0x225a2542
  4129d1:	data16 sub BYTE PTR gs:[ebp+0x4d501748],dh
  4129d9:	mov    al,ds:0x6eaa2482
  4129de:	cmp    ecx,esi
  4129e0:	(bad)  
  4129e1:	out    0xd6,al
  4129e3:	jnp    0x41298a
  4129e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129e6:	in     al,0x2d
  4129e8:	bound  ebx,QWORD PTR [eax-0x47]
  4129eb:	jbe    0x4129d0
  4129ed:	dec    eax
  4129ee:	jl     0x4129bf
  4129f0:	add    eax,0x5c1e2860
  4129f5:	sub    BYTE PTR [esi-0x43f60c1c],dh
  4129fb:	inc    ecx
  4129fc:	je     0x412a5a
  4129fe:	cwde   
  4129ff:	push   cs
  412a00:	jmp    0x4129aa
  412a02:	fiadd  WORD PTR [ecx]
  412a04:	jp     0x412a17
  412a06:	jecxz  0x4129c5
  412a08:	mov    cs,WORD PTR [edx+0x2ce877f2]
  412a0e:	inc    ebx
  412a0f:	and    eax,0xba39954f
  412a14:	fwait
  412a15:	cmp    DWORD PTR [edx+0x2f],ebp
  412a18:	scas   eax,DWORD PTR es:[edi]
  412a19:	add    eax,0xf9f2a3a8
  412a1e:	iret   
  412a1f:	adc    ah,BYTE PTR [esi+0x39845fa0]
  412a25:	daa    
  412a26:	xchg   esp,esi
  412a28:	test   DWORD PTR [edi+0x58e2528b],eax
  412a2e:	mov    cs,WORD PTR [eax+ecx*8]
  412a31:	mov    DWORD PTR [ebx-0x25],edi
  412a34:	mov    eax,ds:0x611b9d8b
  412a39:	(bad)  
  412a3a:	outs   dx,DWORD PTR ds:[esi]
  412a3b:	pop    edx
  412a3c:	jbe    0x412a80
  412a3e:	pop    ebx
  412a3f:	and    BYTE PTR [eax+0x6c],ch
  412a42:	repz (bad) 
  412a44:	mov    edx,0x5bfe00ff
  412a49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a4a:	xlat   BYTE PTR ds:[ebx]
  412a4b:	add    al,0x15
  412a4d:	pop    esp
  412a4e:	icebp  
  412a4f:	pop    esp
  412a50:	jmp    0x412aa6
  412a52:	in     eax,0x9
  412a54:	mov    eax,ds:0x4ddebbc9
  412a59:	dec    ebx
  412a5a:	push   esi
  412a5b:	inc    edx
  412a5c:	adc    ebx,DWORD PTR [edx-0x6]
  412a5f:	pop    edi
  412a60:	mov    eax,ds:0x1e9c9b9a
  412a65:	leave  
  412a66:	pop    edx
  412a67:	loopne 0x412ae6
  412a69:	inc    edx
  412a6a:	aaa    
  412a6b:	dec    BYTE PTR [ebx-0x1]
  412a6e:	sbb    eax,0x3843339b
  412a73:	hlt    
  412a74:	retf   
  412a75:	retf   
  412a76:	test   BYTE PTR [edx+eiz*8-0x6cd2b49c],al
  412a7d:	jecxz  0x412af2
  412a7f:	inc    esi
  412a80:	cmp    eax,0x907b5d23
  412a85:	loop   0x412a4c
  412a87:	push   esi
  412a88:	cld    
  412a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a8a:	inc    esp
  412a8b:	enter  0xcd55,0xd6
  412a8f:	xlat   BYTE PTR ds:[ebx]
  412a90:	add    edx,DWORD PTR [ebp+0x15d37dc8]
  412a96:	(bad)  
  412a97:	bound  ebx,QWORD PTR [edx-0x2a692cf4]
  412a9d:	mov    ecx,0x52615ec9
  412aa2:	hlt    
  412aa3:	adc    BYTE PTR [ebx+0x512ef48a],0x90
  412aaa:	or     DWORD PTR [eax+0x650bdbdb],edi
  412ab0:	and    al,0x17
  412ab2:	ds mov edx,0xf33b89d8
  412ab8:	cmp    bh,BYTE PTR [edi-0x7046b21b]
  412abe:	mov    ebx,0x6526c05c
  412ac3:	jns    0x412ab3
  412ac5:	das    
  412ac6:	fld    TBYTE PTR [edi]
  412ac8:	push   ss
  412ac9:	loopne 0x412b3c
  412acb:	fsub   DWORD PTR [ebp-0x32]
  412ace:	pop    esi
  412acf:	into   
  412ad0:	ins    DWORD PTR es:[edi],dx
  412ad1:	sbb    bh,BYTE PTR [edi+0x49385662]
  412ad7:	xor    edx,DWORD PTR [ecx+0x6b7c75de]
  412add:	xchg   ecx,eax
  412ade:	scas   al,BYTE PTR es:[edi]
  412adf:	cmp    al,0x11
  412ae1:	inc    edi
  412ae2:	retf   0xafc2
  412ae5:	(bad)  
  412ae6:	xchg   BYTE PTR [edx+0x60],al
  412ae9:	push   ss
  412aea:	test   DWORD PTR [eax],edx
  412aec:	int3   
  412aed:	cs push esi
  412aef:	jno    0x412b1d
  412af1:	or     al,0xf
  412af3:	cli    
  412af4:	js     0x412af7
  412af6:	push   0xffacb661
  412afb:	int    0x83
  412afd:	xchg   BYTE PTR ss:[edx],dh
  412b00:	pop    eax
  412b01:	mov    ebp,0x51a3799a
  412b06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b07:	jb     0x412aa1
  412b09:	cli    
  412b0a:	mov    eax,0xb0448b99
  412b0f:	pop    ds
  412b10:	jmp    0x108f:0x1e6f2b67
  412b17:	mov    ecx,0x38e63679
  412b1c:	inc    ecx
  412b1d:	aad    0x89
  412b1f:	scas   eax,DWORD PTR es:[edi]
  412b20:	or     BYTE PTR [ecx+0x4efe8666],0xbb
  412b27:	mov    esp,0x9f8eac9d
  412b2c:	es cli 
  412b2e:	hlt    
  412b2f:	arpl   si,si
  412b31:	mov    dl,0x38
  412b33:	pop    edx
  412b34:	adc    DWORD PTR [eax+ebp*4+0x5],esi
  412b38:	jle    0x412bae
  412b3a:	xor    ecx,DWORD PTR [esi-0x6312fef4]
  412b40:	or     al,0xfe
  412b42:	or     dh,cl
  412b44:	mov    al,0x1d
  412b46:	sub    al,0x42
  412b48:	push   ss
  412b49:	pop    ebp
  412b4a:	inc    eax
  412b4b:	pop    es
  412b4c:	jmp    0x412b23
  412b4e:	adc    BYTE PTR [edi+0x54],dh
  412b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b52:	sbb    BYTE PTR [eax+0x5a],bh
  412b55:	jmp    0x932aa5cc
  412b5a:	sbb    BYTE PTR [ecx],dl
  412b5c:	mov    dl,0x81
  412b5e:	jne    0x412b5a
  412b60:	cs (bad) 
  412b62:	and    dh,BYTE PTR [ebx]
  412b64:	sbb    DWORD PTR [eax+0x3a],ebp
  412b67:	adc    esp,edx
  412b69:	pop    edi
  412b6a:	arpl   WORD PTR [esi+0x3eeb49a9],ax
  412b70:	jge    0x412bd8
  412b72:	dec    ecx
  412b73:	lea    ebx,[esi-0x6916d85c]
  412b79:	in     eax,0xa3
  412b7b:	fistp  DWORD PTR ds:0x49132844
  412b81:	or     dl,BYTE PTR [ecx]
  412b83:	xchg   ebp,eax
  412b84:	inc    esi
  412b85:	leave  
  412b86:	hlt    
  412b87:	mov    esi,0xefdacfc9
  412b8c:	jmp    0xe7ebd3f3
  412b91:	retf   
  412b92:	mov    ch,0x94
  412b94:	gs popa 
  412b96:	xor    dh,BYTE PTR [edx+0x7b4bbafe]
  412b9c:	dec    esi
  412b9d:	or     BYTE PTR [ebp+0xe],bh
  412ba0:	sub    eax,0xbfc95708
  412ba5:	cld    
  412ba6:	mov    ?,WORD PTR [ecx-0x5a]
  412ba9:	lahf   
  412baa:	je     0x412b52
  412bac:	dec    edi
  412bad:	aam    0x63
  412baf:	je     0x412b85
  412bb1:	daa    
  412bb2:	iret   
  412bb3:	cmp    ch,BYTE PTR [ebp-0x58b755d0]
  412bb9:	mov    ds:0xbce00a58,eax
  412bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bbf:	sbb    eax,0x6b5fe94b
  412bc4:	jno    0x412b83
  412bc6:	sbb    BYTE PTR [esi-0x49a7f9a1],al
  412bcc:	ret    0x7675
  412bcf:	push   cs
  412bd0:	je     0x412b55
  412bd2:	pop    esi
  412bd3:	sbb    ebx,DWORD PTR [ebx]
  412bd5:	rcr    ah,1
  412bd7:	scas   al,BYTE PTR es:[edi]
  412bd8:	adc    eax,0x58c32331
  412bdd:	dec    ebp
  412bde:	neg    bl
  412be0:	mov    al,ds:0x94e41710
  412be5:	jnp    0x412bf2
  412be7:	mov    al,0xf7
  412be9:	ror    BYTE PTR [edx-0x61],1
  412bec:	xor    eax,0x2925df30
  412bf1:	dec    ecx
  412bf2:	inc    edx
  412bf3:	test   eax,0xaf75f039
  412bf8:	loopne 0x412c03
  412bfa:	and    esi,ebp
  412bfc:	(bad)  
  412bfd:	aas    
  412bfe:	imul   esi,DWORD PTR [edi-0x24],0xb652cd21
  412c05:	add    al,0x50
  412c07:	cmp    al,0x49
  412c09:	in     eax,0x67
  412c0b:	add    edi,esi
  412c0d:	xor    DWORD PTR [edi-0x5a],eax
  412c10:	pop    ss
  412c11:	pop    ebp
  412c12:	ja     0x412c05
  412c14:	iret   
  412c15:	shl    ch,1
  412c17:	popf   
  412c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c19:	and    al,0xee
  412c1b:	mov    edi,0x3b18d4f1
  412c20:	sbb    al,0xb0
  412c22:	xlat   BYTE PTR ds:[ebx]
  412c23:	sbb    BYTE PTR [eax-0x741e5e2d],cl
  412c29:	xchg   esp,eax
  412c2a:	fsubr  DWORD PTR [edx]
  412c2c:	out    dx,eax
  412c2d:	(bad)  
  412c2e:	jge    0x412c33
  412c30:	ficomp WORD PTR [eax+0x7c279d86]
  412c36:	das    
  412c37:	xchg   BYTE PTR [ebp+0x2d],bl
  412c3a:	sbb    esi,DWORD PTR [ebx+0x2cd69b67]
  412c40:	xor    BYTE PTR [edi-0x78],dh
  412c43:	in     eax,dx
  412c44:	mov    al,ds:0xc5c00f85
  412c49:	push   esp
  412c4a:	inc    ebp
  412c4b:	test   BYTE PTR [edi-0x4e844aed],ah
  412c51:	and    eax,0xc1c2b997
  412c56:	dec    ebx
  412c57:	pop    eax
  412c58:	mov    WORD PTR [eax-0x326a0bf6],cs
  412c5e:	sbb    BYTE PTR [eax],ah
  412c60:	popa   
  412c61:	jo     0x412c6f
  412c63:	int3   
  412c64:	out    0x38,al
  412c66:	add    eax,0x4bf59415
  412c6b:	(bad)  
  412c6d:	inc    edx
  412c6e:	cmp    esi,DWORD PTR ds:0x85f90b14
  412c74:	sub    al,0x65
  412c76:	movzx  esp,BYTE PTR fs:[ebx-0x521271c9]
  412c7e:	jmp    0x39fe:0xf8959e0
  412c85:	mov    al,BYTE PTR [edx+0x0]
  412c88:	inc    ebx
  412c89:	inc    ecx
  412c8a:	jns    0x412c34
  412c8c:	popf   
  412c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c8e:	fimul  WORD PTR [ebp+0x2a]
  412c91:	jmp    0x5cc2867c
  412c96:	mov    eax,ds:0xb5a47d23
  412c9b:	sbb    al,0xa5
  412c9d:	cmp    eax,0x8aed21ca
  412ca2:	fsubr  DWORD PTR [ecx]
  412ca4:	mul    BYTE PTR [edx-0x3f73026c]
  412caa:	lods   eax,DWORD PTR ds:[esi]
  412cab:	cli    
  412cac:	dec    esi
  412cad:	(bad)  
  412cae:	xor    cl,ch
  412cb0:	mov    edi,0x2f637b0d
  412cb5:	add    BYTE PTR ds:0x74706d9,0xe7
  412cbc:	xor    ecx,DWORD PTR [edi-0x15]
  412cbf:	pop    ebx
  412cc0:	and    al,BYTE PTR [ebx]
  412cc2:	sahf   
  412cc3:	in     eax,dx
  412cc4:	(bad)  
  412cc5:	sahf   
  412cc6:	ins    BYTE PTR es:[edi],dx
  412cc7:	xlat   BYTE PTR ds:[ebx]
  412cc8:	clc    
  412cc9:	lods   eax,DWORD PTR ds:[esi]
  412cca:	sar    DWORD PTR ds:0xccb170df,0xa6
  412cd1:	clc    
  412cd2:	add    DWORD PTR [edi+ecx*2-0xd],ebp
  412cd6:	xor    DWORD PTR [esi-0x18192e79],ecx
  412cdc:	mov    ss,WORD PTR [edi]
  412cde:	add    al,0x40
  412ce0:	push   ebp
  412ce1:	push   edi
  412ce2:	sub    al,BYTE PTR [edi-0x69dbd1a8]
  412ce8:	push   eax
  412ce9:	cmp    BYTE PTR [edi+edi*8-0x11388bab],dh
  412cf0:	repz pop eax
  412cf2:	repnz sub ebx,esi
  412cf5:	xor    BYTE PTR [ecx-0x44d30af9],bl
  412cfb:	(bad)  
  412cfc:	sub    dl,BYTE PTR [edx+ebx*1+0x625de51b]
  412d03:	lahf   
  412d04:	aas    
  412d05:	ds xchg edi,eax
  412d07:	and    eax,0xb839bcbc
  412d0c:	jae    0x412cf5
  412d0e:	imul   ebp,DWORD PTR [eax+0x47],0x5be096e4
  412d15:	or     dh,BYTE PTR [ebx+0x34b2a3c4]
  412d1b:	xor    BYTE PTR [eax+0x56],ah
  412d1e:	dec    edi
  412d1f:	mov    BYTE PTR [esi],dh
  412d21:	pop    ss
  412d22:	test   DWORD PTR [edi+0x48a38dd9],0x560b223a
  412d2c:	(bad)  
  412d2d:	pop    ecx
  412d2e:	out    dx,al
  412d2f:	or     DWORD PTR [ebp+0x779c04cc],esi
  412d35:	aas    
  412d36:	sbb    al,0x83
  412d38:	mov    al,ds:0xd25a8cff
  412d3d:	xchg   ebp,eax
  412d3e:	cmp    edx,DWORD PTR [eax+0x7a]
  412d41:	sub    al,0xc1
  412d43:	and    BYTE PTR [esi+0x5b],al
  412d46:	stos   DWORD PTR es:[edi],eax
  412d47:	jae    0x412ce5
  412d49:	inc    ebp
  412d4a:	pop    ds
  412d4b:	jecxz  0x412d5f
  412d4d:	mov    ds:0xa722fd7e,eax
  412d52:	std    
  412d53:	outs   dx,BYTE PTR ds:[esi]
  412d54:	mov    bh,0x2c
  412d56:	ret    
  412d57:	add    edx,DWORD PTR [esi-0xb]
  412d5a:	xor    al,0x86
  412d5c:	push   ebx
  412d5d:	xor    al,0xcb
  412d5f:	loope  0x412d27
  412d61:	push   ds
  412d62:	xchg   ecx,eax
  412d63:	xchg   edx,eax
  412d64:	xor    al,0x2
  412d66:	js     0x412d17
  412d68:	test   bh,ah
  412d6a:	in     eax,0x53
  412d6c:	repnz sbb edx,ebx
  412d6f:	ror    ecx,0x9
  412d72:	cmp    eax,0x94ab7458
  412d77:	ret    0x814e
  412d7a:	xchg   esi,eax
  412d7b:	outs   dx,BYTE PTR ds:[esi]
  412d7c:	(bad)  
  412d7d:	sahf   
  412d7e:	jmp    0x809f:0xaa23e38d
  412d85:	add    ebx,0xffffff98
  412d88:	ins    BYTE PTR es:[edi],dx
  412d89:	xchg   ebx,eax
  412d8a:	cld    
  412d8b:	fwait
  412d8c:	sti    
  412d8d:	fucomip st,st(2)
  412d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d90:	adc    eax,0xd0143438
  412d95:	(bad)  
  412d97:	in     eax,0x21
  412d99:	and    eax,0x403fb7c3
  412d9e:	xchg   edi,eax
  412d9f:	jp     0x412e0b
  412da1:	push   esp
  412da2:	test   BYTE PTR [eax-0x6658144c],0x2
  412da9:	dec    esi
  412daa:	in     eax,0x64
  412dac:	fstp   TBYTE PTR [edi]
  412dae:	ja     0x412d63
  412db0:	mov    dh,0x53
  412db2:	xor    bh,ch
  412db4:	xchg   ecx,eax
  412db5:	sar    BYTE PTR [ebp+0x3963cfa2],1
  412dbb:	addr16 sahf 
  412dbd:	sub    BYTE PTR [ebp-0x33a79d],bl
  412dc3:	adc    eax,0x31518302
  412dc8:	mov    cl,0xcb
  412dca:	shl    BYTE PTR [ebp-0x39],1
  412dcd:	sbb    ch,BYTE PTR [eax]
  412dcf:	out    dx,eax
  412dd0:	gs jbe 0x412df1
  412dd3:	add    eax,0x5fb2e4e1
  412dd8:	push   edx
  412dd9:	mov    BYTE PTR [esi-0x3a],bl
  412ddc:	ins    BYTE PTR es:[edi],dx
  412ddd:	mov    ah,0x2c
  412ddf:	cwde   
  412de0:	pop    ebp
  412de1:	shr    bl,cl
  412de3:	and    ebx,DWORD PTR [eax+0x73]
  412de6:	mov    ch,0xec
  412de8:	sub    BYTE PTR [edi+0x5a3de62],cl
  412dee:	loope  0x412e34
  412df0:	add    ebx,DWORD PTR [ebp-0x56cf8469]
  412df6:	dec    esi
  412df7:	adc    eax,0xa88ebaae
  412dfc:	bound  esp,QWORD PTR [eax-0x62e9dc88]
  412e02:	add    esi,DWORD PTR [ecx]
  412e04:	inc    esi
  412e05:	adc    bl,cl
  412e07:	mov    esi,0x82e381f7
  412e0c:	cmp    al,0xc7
  412e0e:	test   edi,ebx
  412e10:	jmp    0xf89be48d
  412e15:	in     eax,dx
  412e16:	jno    0x412e50
  412e18:	mov    cl,0x7d
  412e1a:	mov    ebx,0x1ef9c1ba
  412e1f:	and    ebp,DWORD PTR [ebx+0x66]
  412e22:	jae    0x412e76
  412e24:	ins    DWORD PTR es:[edi],dx
  412e25:	out    dx,al
  412e26:	sbb    DWORD PTR [edi+0x1044c10],esi
  412e2c:	add    BYTE PTR [ebx+0x47],al
  412e2f:	mov    dl,0x9d
  412e31:	push   0xf64c5d89
  412e36:	cmp    al,0x43
  412e38:	or     bl,BYTE PTR gs:[ebp-0x32]
  412e3c:	into   
  412e3d:	test   BYTE PTR es:[ecx+eiz*1],cl
  412e41:	inc    edx
  412e42:	xchg   edx,eax
  412e43:	jmp    0x412de0
  412e45:	pusha  
  412e46:	cs add al,0xc3
  412e49:	mov    ecx,0xc55c46c1
  412e4e:	cs scas al,BYTE PTR es:[edi]
  412e50:	data16 out 0xe9,al
  412e53:	int3   
  412e54:	in     eax,0xf9
  412e56:	test   eax,0xe0cb2a0f
  412e5b:	or     esp,DWORD PTR [edx]
  412e5d:	pop    ecx
  412e5e:	push   esi
  412e5f:	xchg   ecx,eax
  412e60:	fst    QWORD PTR [eax+0x7f]
  412e63:	mov    dh,0x9a
  412e65:	cmp    BYTE PTR [ecx-0x1f],cl
  412e68:	lods   al,BYTE PTR ds:[esi]
  412e69:	add    bh,BYTE PTR [edi+0xe]
  412e6c:	jne    0x412e54
  412e6e:	rol    DWORD PTR ds:0x3f2bbc70,1
  412e74:	sahf   
  412e75:	(bad)  
  412e77:	imul   eax,DWORD PTR [ebp-0x6d],0xf6b66363
  412e7e:	xchg   edi,eax
  412e7f:	arpl   WORD PTR [ebp-0x1520b12b],bp
  412e85:	push   edi
  412e86:	xchg   ebx,eax
  412e87:	imul   eax,DWORD PTR [ebp+0x5389418b],0x2caededf
  412e91:	or     DWORD PTR [eax],ebx
  412e93:	xchg   ecx,eax
  412e94:	es push ss
  412e96:	xchg   esp,eax
  412e97:	nop
  412e98:	repz push edi
  412e9a:	not    DWORD PTR [ecx-0x27]
  412e9d:	push   0x62ab08d4
  412ea2:	push   0x19
  412ea4:	mov    esp,0xa50cc016
  412ea9:	jb     0x412e5b
  412eab:	xchg   ebp,eax
  412eac:	and    DWORD PTR [ebp+0x4d],edx
  412eaf:	fiadd  WORD PTR [ecx+eax*4-0x16e57fb3]
  412eb6:	mov    gs,esi
  412eb8:	xor    edx,DWORD PTR [edx-0x49]
  412ebb:	mov    dl,0xa9
  412ebd:	jns    0x412efe
  412ebf:	sbb    edx,DWORD PTR [esp+ecx*8-0x36]
  412ec3:	push   eax
  412ec4:	pop    ebp
  412ec5:	lock jb 0x412e8b
  412ec8:	pop    ss
  412ec9:	retf   0x6cd9
  412ecc:	push   0x677e903a
  412ed1:	mov    cl,0x50
  412ed3:	adc    BYTE PTR [edx],0x2b
  412ed6:	xchg   ecx,eax
  412ed7:	loop   0x412f0f
  412ed9:	arpl   WORD PTR ds:0xa71eae5a,bp
  412edf:	push   es
  412ee0:	adc    ebx,esi
  412ee2:	jmp    DWORD PTR [ecx+0x50]
  412ee5:	enter  0x6d4b,0x4f
  412ee9:	ds sahf 
  412eeb:	mov    ebx,0x5362bc32
  412ef0:	jo     0x412eaa
  412ef2:	fcom   DWORD PTR [eax+eax*8]
  412ef5:	push   esp
  412ef6:	lahf   
  412ef7:	mov    WORD PTR [eax-0x4f],cs
  412efa:	xchg   edx,eax
  412efb:	popf   
  412efc:	xor    al,BYTE PTR [edi]
  412efe:	fcomi  st,st(2)
  412f00:	adc    bh,BYTE PTR [ecx-0x653c3d59]
  412f06:	ja     0x412ec1
  412f08:	icebp  
  412f09:	cmp    al,0x7a
  412f0b:	es dec ebp
  412f0d:	sbb    edi,DWORD PTR [eax+0x394cc26c]
  412f13:	pop    ds
  412f14:	add    BYTE PTR [esi],bl
  412f16:	out    dx,eax
  412f17:	into   
  412f18:	(bad)  
  412f19:	out    dx,eax
  412f1a:	or     DWORD PTR [edi+0x55],eax
  412f1d:	cmp    dl,BYTE PTR [edx]
  412f1f:	jno    0x412ef2
  412f21:	ror    DWORD PTR [esi+0x21d713eb],cl
  412f27:	jg     0x412ed7
  412f29:	pop    es
  412f2a:	jbe    0x412eba
  412f2c:	pop    ss
  412f2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f2e:	stos   DWORD PTR es:[edi],eax
  412f2f:	jnp    0x412f5b
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	repnz scas eax,DWORD PTR es:[edi]
  412f34:	into   
  412f35:	xchg   esi,eax
  412f36:	add    eax,DWORD PTR [esi]
  412f38:	push   ds
  412f39:	dec    esp
  412f3a:	dec    ecx
  412f3b:	add    al,0x3b
  412f3d:	mov    ch,0x63
  412f3f:	in     al,dx
  412f40:	push   ecx
  412f41:	shr    DWORD PTR [ecx+0x2ce3e184],0x72
  412f48:	rcr    DWORD PTR [ebp+eax*8+0x22d0fb43],cl
  412f4f:	lea    eax,[edx]
  412f51:	das    
  412f52:	fiadd  DWORD PTR [edi+0x4a]
  412f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f56:	and    dl,BYTE PTR [edx-0x48]
  412f59:	stos   DWORD PTR es:[edi],eax
  412f5a:	inc    ecx
  412f5b:	shl    ch,1
  412f5d:	pop    ecx
  412f5e:	test   eax,0x39d07e3e
  412f63:	stos   DWORD PTR es:[edi],eax
  412f64:	add    BYTE PTR [eax-0x621660be],0x5d
  412f6b:	(bad)  
  412f6c:	mov    ah,0x1d
  412f6e:	xchg   DWORD PTR [edi-0x53fae4f7],eax
  412f74:	jg     0x412f57
  412f76:	out    dx,eax
  412f77:	and    edx,DWORD PTR [eax-0x44]
  412f7a:	push   esi
  412f7b:	stos   DWORD PTR es:[edi],eax
  412f7c:	(bad)  
  412f7d:	loopne 0x412f97
  412f7f:	repz loop 0x412f79
  412f82:	popa   
  412f83:	jne    0x412f78
  412f85:	es mov ah,0x3b
  412f88:	nop
  412f89:	gs hlt 
  412f8b:	jae    0x412f5b
  412f8d:	aas    
  412f8e:	out    dx,al
  412f8f:	jp     0x412ffc
  412f91:	ret    
  412f92:	push   ecx
  412f93:	push   ebp
  412f94:	jmp    0xad8cf809
  412f99:	add    BYTE PTR [edx-0x20],dh
  412f9c:	sbb    DWORD PTR [esi-0x1c8ac221],edi
  412fa2:	cmp    al,ah
  412fa4:	mov    ebp,0x97562ea6
  412fa9:	(bad)  
  412faa:	ficomp WORD PTR [esi+0x4]
  412fad:	aad    0xc
  412faf:	push   ss
  412fb0:	push   0xffffffab
  412fb2:	xchg   ecx,eax
  412fb3:	mov    eax,DWORD PTR [esi+0x74]
  412fb6:	xlat   BYTE PTR ds:[ebx]
  412fb7:	call   0x4174:0xd19a32d0
  412fbe:	xchg   esp,eax
  412fbf:	push   ss
  412fc0:	push   ebx
  412fc1:	call   0xea84:0x5287ae7d
  412fc8:	outs   dx,DWORD PTR ds:[esi]
  412fc9:	jecxz  0x412fa7
  412fcb:	or     eax,DWORD PTR [ecx]
  412fcd:	lea    edi,[esi+0x21]
  412fd0:	cmp    al,0x7a
  412fd2:	fstp   DWORD PTR [eax+0x362265f9]
  412fd8:	mov    dl,0xb0
  412fda:	and    BYTE PTR [ecx+ecx*2+0x1760e2da],ah
  412fe1:	add    BYTE PTR [eax+0x4a],0x90
  412fe5:	repz push esp
  412fe7:	enter  0xd05b,0x9f
  412feb:	jg     0x412fd9
  412fed:	and    edi,DWORD PTR [eax]
  412fef:	pop    ebx
  412ff0:	ror    al,1
  412ff2:	dec    esi
  412ff3:	add    eax,0x46aac8a1
  412ff8:	xchg   edi,eax
  412ff9:	cli    
  412ffa:	push   edx
  412ffb:	xor    bl,dl
  412ffd:	dec    edi
  412ffe:	in     eax,dx
  412fff:	scas   eax,DWORD PTR es:[edi]
  413000:	lock in eax,dx
  413002:	(bad)  
  413003:	xor    al,0xc2
  413005:	fisub  DWORD PTR [ecx+0xdf8e4e5]
  41300b:	add    ecx,DWORD PTR [ecx-0x76]
  41300e:	lods   al,BYTE PTR ds:[esi]
  41300f:	jl     0x412fc9
  413011:	pop    ss
  413012:	or     eax,0x6a45298d
  413017:	nop
  413018:	dec    ecx
  413019:	mov    ebp,0x4c4b964b
  41301e:	pop    edi
  41301f:	xchg   esi,eax
  413020:	into   
  413021:	adc    bh,BYTE PTR [edi+ebx*1+0x7d]
  413025:	gs std 
  413027:	adc    eax,DWORD PTR [ecx]
  413029:	cli    
  41302a:	fstp   TBYTE PTR [edx]
  41302c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41302d:	or     BYTE PTR [edi+0x78cb87f3],bh
  413033:	in     al,0xbc
  413035:	shr    DWORD PTR [ebx-0x122c6f3a],0xa7
  41303c:	jg     0x412fd9
  41303e:	mov    ecx,edx
  413040:	xor    dh,0x74
  413043:	add    DWORD PTR [edi-0x26],0x7641957c
  41304a:	(bad)
  41304f:	mov    ebp,0x46f0b51c
  413054:	lahf   
  413055:	push   edx
  413056:	adc    dl,BYTE PTR [ebx]
  413058:	mov    edx,0x6186dfbb
  41305d:	je     0x412fed
  41305f:	push   ds
  413060:	out    dx,al
  413061:	test   eax,0xe849c153
  413066:	loope  0x413015
  413068:	daa    
  413069:	fidiv  DWORD PTR [esi]
  41306b:	aaa    
  41306c:	ror    BYTE PTR [ebx-0x4a],cl
  41306f:	pop    eax
  413070:	(bad)  
  413071:	jmp    0xff42b62f
  413076:	out    0x52,al
  413078:	adc    ebp,DWORD PTR [esi]
  41307a:	and    dh,BYTE PTR ds:0xaf301be1
  413080:	adc    eax,0x923c519f
  413085:	dec    esp
  413086:	mov    ch,0xd8
  413088:	gs ss sahf 
  41308b:	mov    eax,0x7fb7db62
  413090:	xchg   ebx,eax
  413091:	dec    eax
  413092:	xchg   esp,eax
  413093:	dec    esp
  413094:	pop    esp
  413095:	xchg   ebp,eax
  413096:	mov    ebx,0xe2967712
  41309b:	jae    0x413078
  41309d:	imul   esp,DWORD PTR [edi+0x7c],0x114fbff6
  4130a4:	pop    edi
  4130a5:	dec    edx
  4130a6:	jp     0x413093
  4130a8:	ins    BYTE PTR es:[edi],dx
  4130a9:	daa    
  4130aa:	in     eax,0x1
  4130ac:	int3   
  4130ad:	retf   0x3185
  4130b0:	push   es
  4130b1:	jns    0x413107
  4130b3:	push   ebx
  4130b4:	ret    0x892f
  4130b7:	xor    eax,0xa2e1c8c
  4130bc:	fwait
  4130bd:	or     DWORD PTR [ebx-0x4592d8df],ecx
  4130c3:	jecxz  0x413066
  4130c5:	mov    edi,0xd9812242
  4130ca:	mov    ah,BYTE PTR [ebx+0x52]
  4130cd:	pop    esi
  4130ce:	fwait
  4130cf:	jb     0x4130d2
  4130d1:	push   cs
  4130d2:	repnz addr16 pop ecx
  4130d5:	out    dx,al
  4130d6:	fcom   QWORD PTR [edx-0xc8604f9]
  4130dc:	ins    DWORD PTR es:[edi],dx
  4130dd:	gs mov edi,0x11c4c889
  4130e3:	arpl   WORD PTR [esi-0x275f821e],cx
  4130e9:	out    0xf2,eax
  4130eb:	xchg   ecx,edx
  4130ed:	jmp    0x4130ba
  4130ef:	dec    edx
  4130f0:	aaa    
  4130f1:	mov    eax,ds:0x59179d5b
  4130f7:	popf   
  4130f8:	inc    eax
  4130f9:	clc    
  4130fa:	les    edi,FWORD PTR [eax+0x14]
  4130fd:	sahf   
  4130fe:	dec    eax
  4130ff:	or     edi,DWORD PTR [ecx+0x36]
  413102:	ja     0x4130f2
  413104:	mov    WORD PTR [ebp+edi*4-0x20493849],es
  41310b:	dec    esi
  41310c:	ins    BYTE PTR es:[edi],dx
  41310d:	pushf  
  41310e:	xchg   edi,eax
  41310f:	imul   ecx,DWORD PTR [eax+0x777c4139],0xffffff86
  413116:	pop    ebp
  413117:	in     al,dx
  413118:	push   eax
  413119:	test   eax,0x27f85326
  41311e:	xchg   esp,eax
  41311f:	les    ecx,FWORD PTR [ebx+0x41]
  413122:	jle    0x413112
  413124:	mov    ah,0x15
  413126:	mov    bl,0xda
  413128:	les    esi,FWORD PTR [esi+0x58]
  41312b:	mov    ebx,0x9e667449
  413130:	inc    esi
  413131:	in     al,dx
  413132:	mov    BYTE PTR [ebx],ah
  413134:	add    ebx,DWORD PTR [edi]
  413136:	retf   0xe3ad
  413139:	add    eax,0xdd092f19
  41313e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41313f:	out    0xde,al
  413141:	xor    edi,ebp
  413143:	jns    0x413117
  413145:	and    edi,DWORD PTR [ebp-0x440bf80b]
  41314b:	imul   BYTE PTR ds:[edi+0x59]
  41314f:	add    eax,0xd6fa0826
  413154:	lds    ebp,FWORD PTR [eax+0x26]
  413157:	lahf   
  413158:	out    0x84,al
  41315a:	outs   dx,DWORD PTR ds:[esi]
  41315b:	scas   eax,DWORD PTR es:[edi]
  41315c:	pop    esp
  41315d:	fsub   DWORD PTR [edi+eiz*2+0x58]
  413161:	daa    
  413162:	jnp    0x413191
  413164:	mov    ebx,0xb93a9da2
  413169:	lock test eax,0x402d0b03
  41316f:	addr16 mov bh,0x26
  413172:	pop    eax
  413173:	mov    eax,ds:0x906547ac
  413178:	jnp    0x4131de
  41317a:	loop   0x4131a8
  41317c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41317d:	cs xchg ebp,eax
  41317f:	mov    ah,0x67
  413181:	mov    edi,0x14c12df8
  413186:	repz out 0xd8,eax
  413189:	adc    BYTE PTR [ebx-0x1f],al
  41318c:	popf   
  41318d:	pop    esp
  41318e:	xor    BYTE PTR [ebx-0x1],ah
  413191:	sbb    edx,ebp
  413193:	jg     0x41315d
  413195:	leave  
  413196:	xor    al,BYTE PTR [eax-0x20]
  413199:	mov    eax,0x13e50517
  41319e:	cmovs  edx,DWORD PTR [ecx+ebp*4-0x4a3575e6]
  4131a6:	push   0xecfd3c7e
  4131ab:	pusha  
  4131ac:	pop    ss
  4131ad:	or     eax,0xd4fa5a4c
  4131b2:	pop    es
  4131b3:	popf   
  4131b4:	xchg   ebp,eax
  4131b5:	mov    eax,ds:0x3f02c235
  4131ba:	idiv   DWORD PTR [esi+0x1f]
  4131bd:	xor    eax,0xd7d88a7b
  4131c2:	mov    ds:0x9b1bd8f0,al
  4131c7:	ret    
  4131c8:	ins    DWORD PTR es:[edi],dx
  4131c9:	aam    0xef
  4131cb:	cmc    
  4131cc:	xor    ebp,DWORD PTR [ebp+esi*8+0x3f681c04]
  4131d3:	repz or BYTE PTR [ebx],bh
  4131d6:	outs   dx,DWORD PTR ds:[esi]
  4131d7:	cmp    al,0xc8
  4131d9:	or     DWORD PTR [edx-0x7089fa57],ebp
  4131df:	jmp    0xc1bb1517
  4131e4:	mov    al,0x4b
  4131e6:	int3   
  4131e7:	lds    esp,FWORD PTR [ecx]
  4131e9:	test   BYTE PTR [eax+0x2b1f5b5b],ah
  4131ef:	jg     0x4131bd
  4131f1:	test   BYTE PTR [ebp+0x2f],ch
  4131f4:	pop    ds
  4131f5:	xor    al,0x9b
  4131f7:	popa   
  4131f8:	xchg   DWORD PTR [ebp+eax*8+0x2f],eax
  4131fc:	imul   ebp,DWORD PTR [edx],0xe
  4131ff:	js     0x4131ff
  413201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413202:	jnp    0x4131f5
  413204:	push   ebp
  413205:	retf   
  413206:	dec    edx
  413207:	adc    dl,cl
  413209:	jne    0x4131df
  41320b:	test   BYTE PTR [ebp-0x1f],0xa1
  41320f:	sbb    ebx,DWORD PTR [edx]
  413211:	frstor [ecx-0x7d]
  413214:	sbb    al,0x25
  413216:	ror    dh,1
  413218:	data16 jb 0x4131ee
  41321b:	popf   
  41321c:	aaa    
  41321d:	iret   
  41321e:	retf   0x94fb
  413221:	adc    DWORD PTR ds:0x3426d7da,esp
  413227:	adc    dl,al
  413229:	jno    0x413214
  41322b:	shr    ebx,cl
  41322d:	mov    WORD PTR [esi+0x4db7ed92],es
  413233:	pop    ecx
  413234:	pusha  
  413235:	scas   al,BYTE PTR es:[edi]
  413236:	mov    WORD PTR [esi+edx*4-0x7f888e82],fs
  41323d:	aas    
  41323e:	data16 jne 0x413230
  413241:	jmp    0x4131ff
  413243:	and    BYTE PTR [edi-0x2c],dh
  413246:	sub    DWORD PTR [ebx+0x3ebc133],esp
  41324c:	jp     0x413284
  41324e:	jns    0x413235
  413250:	in     eax,0x6f
  413252:	sbb    al,0x61
  413254:	jle    0x413223
  413256:	fiadd  WORD PTR [esi]
  413258:	push   edi
  413259:	out    0xf3,eax
  41325b:	xchg   DWORD PTR [ebx-0x6f7cbf42],ebx
  413261:	clc    
  413262:	ss enter 0x5a52,0xe5
  413267:	add    BYTE PTR [ecx+0x5f],bh
  41326a:	ins    DWORD PTR es:[edi],dx
  41326b:	add    bh,BYTE PTR [ecx+eax*4]
  41326e:	pop    es
  41326f:	mov    fs,WORD PTR [eax-0x6a]
  413272:	loopne 0x4132bb
  413274:	cld    
  413275:	and    edx,edi
  413277:	jl     0x4132a1
  413279:	push   edx
  41327a:	jae    0x4132a5
  41327c:	repz gs loop 0x41325a
  413280:	aaa    
  413281:	stos   BYTE PTR es:[edi],al
  413282:	out    dx,eax
  413283:	mov    ah,0x60
  413285:	test   eax,0x776b982c
  41328a:	adc    dh,BYTE PTR [esi]
  41328c:	data16 fsub QWORD PTR [ebx]
  41328f:	mov    esi,0xcbc7fecc
  413294:	inc    esi
  413295:	mov    ch,BYTE PTR [edx*1+0x2d848311]
  41329c:	dec    ebp
  41329d:	fisttp QWORD PTR [esi]
  41329f:	test   BYTE PTR [ecx+0x3e],ch
  4132a2:	leave  
  4132a3:	and    ebp,edx
  4132a5:	jl     0x4132b4
  4132a7:	pop    eax
  4132a8:	adc    al,0x13
  4132aa:	sub    DWORD PTR [eax+0x33b396d6],ebp
  4132b0:	int3   
  4132b1:	cmc    
  4132b2:	sub    BYTE PTR [esi+0x532ef4fd],ch
  4132b8:	push   cs
  4132b9:	addr16 jp 0x4132db
  4132bc:	or     ecx,esi
  4132be:	aas    
  4132bf:	lods   al,BYTE PTR ds:[esi]
  4132c0:	lahf   
  4132c1:	mov    al,ds:0xec42f480
  4132c6:	fstp   DWORD PTR [ecx-0x63]
  4132c9:	bswap  ebx
  4132cb:	xchg   ebx,eax
  4132cc:	gs mov cl,0xa7
  4132cf:	stc    
  4132d0:	pop    ecx
  4132d1:	in     eax,dx
  4132d2:	mov    ds:0x5617c522,eax
  4132d7:	xchg   DWORD PTR [esi+0xb8b397d],edx
  4132dd:	sbb    al,0xac
  4132df:	and    dl,0x1d
  4132e2:	mov    ds:0xd1bdfdf3,al
  4132e7:	call   0x3682:0x6983c2c3
  4132ee:	test   DWORD PTR [ecx+0x48],0xd3c5d65a
  4132f5:	(bad)  
  4132f6:	jle    0x413302
  4132f8:	jl     0x413343
  4132fa:	rcr    eax,cl
  4132fc:	cmp    eax,0x6253bd3a
  413301:	jbe    0x41331a
  413303:	pop    edi
  413304:	inc    edi
  413305:	hlt    
  413306:	push   edi
  413307:	cmp    dh,dh
  413309:	clc    
  41330a:	mov    ds:0x8fe618e7,eax
  41330f:	cmp    bh,BYTE PTR [ebp-0x31c1c377]
  413315:	inc    ebx
  413316:	mov    esi,0x64cdb372
  41331b:	add    ebp,ebp
  41331d:	leave  
  41331e:	push   edi
  41331f:	inc    eax
  413320:	xchg   edi,eax
  413321:	outs   dx,DWORD PTR ds:[esi]
  413322:	loope  0x413326
  413324:	jg     0x4132b4
  413326:	pop    edi
  413327:	mov    dh,0x71
  413329:	xor    al,bl
  41332b:	adc    edi,DWORD PTR [ebx]
  41332d:	xor    DWORD PTR [edx-0x4b1c9ef9],eax
  413333:	dec    edx
  413334:	push   0x28ee2fa9
  413339:	jb     0x4132c6
  41333b:	sbb    edx,eax
  41333d:	je     0x413376
  41333f:	ss mov al,0x92
  413342:	sbb    eax,0xd2606575
  413347:	sub    al,ah
  413349:	sbb    al,0xee
  41334b:	jecxz  0x4132ed
  41334d:	dec    edi
  41334e:	sub    ebx,DWORD PTR [edi-0x1b35f70b]
  413354:	jne    0x4132fb
  413356:	fmul   QWORD PTR [ebp-0x40]
  413359:	jl     0x4132fb
  41335b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41335c:	mov    edi,0x3b09029d
  413361:	push   ebp
  413362:	inc    BYTE PTR [ebp-0x6f]
  413365:	dec    esi
  413366:	data16 mov BYTE PTR [edi-0x73],0x10
  41336b:	xor    ebp,DWORD PTR [ebx]
  41336d:	call   0xbd25:0xeb575ee3
  413374:	mov    ebx,0x7a1fda52
  413379:	pop    edx
  41337a:	ja     0x4133ad
  41337c:	gs pop esp
  41337e:	inc    ecx
  41337f:	int    0xc4
  413381:	loop   0x41336a
  413383:	add    al,0x86
  413385:	(bad)  
  413386:	fs mov ebp,0x9e3b197a
  41338c:	out    dx,al
  41338d:	add    al,0x8c
  41338f:	das    
  413390:	daa    
  413391:	icebp  
  413392:	mov    bl,0x8b
  413394:	and    ebp,DWORD PTR [esi]
  413396:	inc    ebx
  413397:	out    0x8,al
  413399:	outs   dx,DWORD PTR ds:[esi]
  41339a:	lds    edi,FWORD PTR [ebx+0x5cd11304]
  4133a0:	xchg   esi,eax
  4133a1:	pop    edx
  4133a2:	push   esi
  4133a3:	jmp    0x7df2:0x5ddff72e
  4133aa:	push   edi
  4133ab:	sbb    ah,bh
  4133ad:	xchg   ecx,eax
  4133ae:	scas   eax,DWORD PTR es:[edi]
  4133af:	mov    ecx,0xed5e5f6a
  4133b4:	scas   eax,DWORD PTR es:[edi]
  4133b5:	xchg   ebp,eax
  4133b6:	test   ah,dl
  4133b8:	dec    edi
  4133b9:	(bad)  
  4133ba:	sti    
  4133bb:	or     al,0x21
  4133bd:	(bad)  
  4133be:	hlt    
  4133bf:	xor    eax,0x949ebbd4
  4133c4:	leave  
  4133c5:	dec    edi
  4133c6:	pushf  
  4133c7:	mov    ebx,0xc9bec775
  4133cc:	in     eax,dx
  4133cd:	xchg   esp,eax
  4133ce:	nop
  4133cf:	and    esi,ebx
  4133d1:	mov    edi,0x1c717c25
  4133d6:	out    dx,eax
  4133d7:	and    al,0x1e
  4133d9:	shr    DWORD PTR [edi],0xdc
  4133dc:	xor    BYTE PTR [edi],0xc8
  4133df:	cmp    al,0x60
  4133e1:	jg     0x413454
  4133e3:	jle    0x413399
  4133e5:	sti    
  4133e6:	xor    DWORD PTR [ecx],ebx
  4133e8:	add    eax,0xad3c5665
  4133ed:	jp     0x4133e9
  4133ef:	pop    edi
  4133f0:	fidiv  WORD PTR [edx+0x3a]
  4133f3:	mov    dh,0x68
  4133f5:	inc    esp
  4133f6:	mov    ?,WORD PTR [esi+0x6f0addd2]
  4133fc:	pop    edi
  4133fd:	stos   BYTE PTR es:[edi],al
  4133fe:	outs   dx,DWORD PTR ds:[esi]
  4133ff:	sub    dl,dl
  413401:	jns    0x41339f
  413403:	pop    ebp
  413404:	dec    ecx
  413405:	adc    BYTE PTR [eax+0x3ba5e8a3],0x40
  41340c:	mov    DWORD PTR [edx],ecx
  41340e:	in     eax,dx
  41340f:	or     esp,DWORD PTR [edi-0x14adb39a]
  413415:	icebp  
  413416:	scas   eax,DWORD PTR es:[edi]
  413417:	mov    eax,ds:0xbe1304c7
  41341c:	or     eax,0xce057a7e
  413421:	out    0x3,al
  413423:	add    BYTE PTR [esi-0x7d1d9b1d],cl
  413429:	(bad)  
  41342a:	cdq    
  41342b:	jb     0x413421
  41342d:	push   edx
  41342e:	scas   al,BYTE PTR es:[edi]
  41342f:	inc    ebp
  413430:	push   es
  413431:	pop    esp
  413432:	out    dx,eax
  413433:	pop    edx
  413434:	adc    eax,0x3ef2f31f
  413439:	lods   al,BYTE PTR ds:[esi]
  41343a:	lea    ecx,[edi]
  41343c:	push   esi
  41343d:	sbb    DWORD PTR ds:0x156b7d8f,edi
  413443:	outs   dx,DWORD PTR ds:[esi]
  413444:	pushf  
  413445:	ins    DWORD PTR es:[edi],dx
  413446:	call   0x4afea9ff
  41344b:	paddusb mm0,QWORD PTR [edx-0x38]
  41344f:	(bad)  
  413450:	sti    
  413451:	data16 (bad) 
  413453:	cmc    
  413454:	loopne 0x4133e8
  413456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413457:	mov    ebp,DWORD PTR [eax]
  413459:	jmp    0x41347b
  41345b:	inc    eax
  41345c:	out    dx,al
  41345d:	ins    BYTE PTR es:[edi],dx
  41345e:	mov    dh,BYTE PTR [edx+0x20]
  413461:	and    al,0xd9
  413463:	loop   0x4134dd
  413465:	fidivr WORD PTR [eax]
  413467:	pushf  
  413468:	lahf   
  413469:	out    dx,al
  41346a:	mov    ds:0x435c6d0,al
  41346f:	retf   0x9742
  413472:	nop
  413473:	push   0x76
  413475:	shl    DWORD PTR [esi],cl
  413477:	or     al,BYTE PTR [esi]
  413479:	loop   0x413444
  41347b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41347c:	xlat   BYTE PTR ds:[ebx]
  41347d:	pushf  
  41347e:	or     BYTE PTR [eax],dh
  413480:	cdq    
  413481:	es (bad) 
  413483:	adc    al,0x9d
  413485:	fadd   QWORD PTR [ebp+0x2242dfae]
  41348b:	sar    BYTE PTR [ecx-0x80],cl
  41348e:	or     eax,0xda733692
  413493:	stos   DWORD PTR es:[edi],eax
  413494:	add    eax,edi
  413496:	mul    al
  413498:	sub    dl,BYTE PTR [edi]
  41349a:	xor    bh,bl
  41349c:	js     0x413454
  41349e:	mov    al,0x5
  4134a0:	add    ebp,0xd34dc4d2
  4134a6:	int    0xb2
  4134a8:	fwait
  4134a9:	iret   
  4134aa:	add    al,0x75
  4134ac:	or     al,0xc
  4134ae:	rcr    DWORD PTR [edi],cl
  4134b0:	cli    
  4134b1:	dec    esi
  4134b2:	retf   0x1645
  4134b5:	cs sahf 
  4134b7:	jp     0x41347a
  4134b9:	retf   0x527f
  4134bc:	sub    eax,0x37f540cb
  4134c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134c3:	stos   BYTE PTR es:[edi],al
  4134c4:	clc    
  4134c5:	pusha  
  4134c6:	sbb    DWORD PTR [esi],0xffffffa7
  4134c9:	and    BYTE PTR [ebx],cl
  4134cb:	in     eax,dx
  4134cc:	retf   
  4134cd:	mov    ebp,0x9649a6e6
  4134d2:	cmp    DWORD PTR [edi+0x1c7b455],esi
  4134d8:	push   0xffffffbd
  4134da:	fwait
  4134db:	scas   al,BYTE PTR es:[edi]
  4134dc:	in     al,0x13
  4134de:	out    dx,al
  4134df:	pop    edx
  4134e0:	out    dx,al
  4134e1:	pop    ds
  4134e2:	xchg   ebp,eax
  4134e3:	cmp    ebp,DWORD PTR [edi]
  4134e5:	mov    fs,edx
  4134e7:	push   ebp
  4134e8:	jbe    0x4134a4
  4134ea:	out    0xa6,al
  4134ec:	xlat   BYTE PTR ds:[ebx]
  4134ed:	std    
  4134ee:	mov    eax,ds:0xf293a0fe
  4134f3:	jge    0x41354e
  4134f5:	mov    eax,ds:0x4ccb0532
  4134fa:	mov    dl,0x6d
  4134fc:	or     DWORD PTR [eax+edx*4],ecx
  4134ff:	ins    BYTE PTR es:[edi],dx
  413500:	outs   dx,BYTE PTR ds:[esi]
  413501:	xor    WORD PTR ds:0x9e865618,ax
  413508:	sub    DWORD PTR [ecx],0xffffffab
  41350b:	hlt    
  41350c:	into   
  41350d:	mov    dl,0xdc
  41350f:	cld    
  413510:	call   0xabdd:0xb8b12334
  413517:	nop
  413518:	pop    edi
  413519:	outs   dx,BYTE PTR ds:[esi]
  41351a:	mov    edx,0x15fdbf81
  41351f:	js     0x41353c
  413521:	fisub  DWORD PTR [esp+esi*2]
  413524:	imul   esp,DWORD PTR [eax-0x58],0x5c
  413528:	and    BYTE PTR [ebx-0x5d],ch
  41352b:	faddp  st(3),st
  41352d:	sahf   
  41352e:	aas    
  41352f:	jns    0x41350f
  413531:	fwait
  413532:	jo     0x413566
  413534:	dec    esi
  413535:	mov    BYTE PTR [esp+edx*4-0x6f231251],cl
  41353c:	inc    ebx
  41353e:	jecxz  0x4135bc
  413540:	add    esi,DWORD PTR [ebx]
  413542:	push   ebx
  413543:	nop
  413544:	pop    eax
  413545:	call   0x2a47:0x91d49eb0
  41354c:	ds addr16 cmc 
  41354f:	sbb    DWORD PTR [esi+ecx*1+0x14],0xf7036240
  413557:	ss jg  0x413519
  41355a:	jo     0x413529
  41355c:	jo     0x4135d0
  41355e:	jp     0x41357e
  413560:	dec    edx
  413561:	not    ch
  413563:	stos   DWORD PTR es:[edi],eax
  413564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413565:	push   ebp
  413566:	pop    ebp
  413567:	adc    BYTE PTR [edi],dl
  413569:	sub    BYTE PTR [esi-0x1e24239c],ch
  41356f:	adc    eax,0x12360b48
  413574:	pop    ss
  413575:	or     BYTE PTR [edx],ah
  413577:	cmp    al,0xde
  413579:	jno    0x41350d
  41357b:	pop    ecx
  41357c:	sub    al,0xb6
  41357e:	repnz daa 
  413580:	cmp    al,0x36
  413582:	mov    esp,0xeec42c0e
  413587:	ja     0x413512
  413589:	sub    al,0x47
  41358b:	push   ds
  41358c:	inc    ecx
  41358e:	mov    al,ds:0xb0aa6a10
  413593:	add    eax,DWORD PTR [ebx+edi*2]
  413596:	ins    DWORD PTR es:[edi],dx
  413597:	inc    ecx
  413598:	jae    0x4135d3
  41359a:	or     eax,0x4b9936ed
  41359f:	dec    edx
  4135a0:	pop    edx
  4135a1:	jg     0x4135e5
  4135a3:	jp     0x413620
  4135a5:	sti    
  4135a6:	scas   al,BYTE PTR es:[edi]
  4135a7:	mov    bl,0x1f
  4135a9:	adc    DWORD PTR [esi],edi
  4135ab:	retf   0x8054
  4135ae:	push   edi
  4135af:	jg     0x413620
  4135b1:	add    ecx,DWORD PTR [esi-0x52]
  4135b4:	stos   DWORD PTR es:[edi],eax
  4135b5:	lods   al,BYTE PTR ds:[esi]
  4135b6:	(bad)  
  4135b8:	stos   BYTE PTR es:[edi],al
  4135b9:	xchg   ecx,eax
  4135ba:	xchg   ecx,eax
  4135bb:	mov    al,ds:0x127b33d6
  4135c0:	sahf   
  4135c1:	add    eax,0x555c529e
  4135c6:	push   edx
  4135c7:	add    BYTE PTR [eax+esi*4+0x68],dl
  4135cb:	pop    ebp
  4135cc:	rol    DWORD PTR [esi-0xe],1
  4135cf:	dec    edx
  4135d0:	and    eax,0x58f5321f
  4135d5:	xchg   ebp,eax
  4135d6:	jo     0x413603
  4135d8:	mov    al,0x44
  4135da:	xchg   esi,eax
  4135db:	test   BYTE PTR [esi+0xd],al
  4135de:	and    cl,BYTE PTR [eax+0x712747c2]
  4135e4:	lods   al,BYTE PTR ds:[esi]
  4135e5:	out    dx,eax
  4135e6:	cmp    DWORD PTR [eax+0x3f2011c2],edx
  4135ec:	mov    edx,0xe5673e70
  4135f1:	sbb    ch,0x97
  4135f4:	mov    edi,0xc0d990a3
  4135f9:	mov    bl,0xa1
  4135fb:	push   ecx
  4135fc:	dec    ebp
  4135fd:	lea    esi,[ecx+0x725a8447]
  413603:	mov    esi,0xa89a307
  413608:	outs   dx,BYTE PTR ds:[esi]
  413609:	pop    ss
  41360a:	adc    BYTE PTR [eax],dl
  41360c:	bound  ebp,QWORD PTR [ebx]
  41360e:	xchg   esi,eax
  41360f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413610:	sti    
  413611:	xchg   BYTE PTR [ebx-0x3ec2b170],dh
  413617:	cmp    DWORD PTR [ebx-0x2f],0x4fa83d18
  41361e:	push   es
  41361f:	add    esi,esp
  413621:	xor    BYTE PTR [ebx-0x6f],ah
  413624:	and    dl,dl
  413626:	addr16 nop
  413628:	out    0xa1,al
  41362a:	sbb    esp,edx
  41362c:	mov    edx,0xb8e2124c
  413631:	cdq    
  413632:	dec    ebp
  413633:	popa   
  413634:	out    0xb,eax
  413636:	mov    ebp,DWORD PTR [eax+0x5c]
  413639:	stos   BYTE PTR es:[edi],al
  41363a:	mov    eax,0x9250a09f
  41363f:	out    0xb9,eax
  413641:	adc    edi,DWORD PTR [eax+ecx*2-0x14e8caf2]
  413648:	mov    ?,WORD PTR [eax+0x9]
  41364b:	out    0x7,eax
  41364d:	mov    dl,0x43
  41364f:	or     eax,0x12adde84
  413654:	icebp  
  413655:	fsub   DWORD PTR [eax-0x455ea320]
  41365b:	fnstsw WORD PTR [edi+ebx*8+0x4d]
  41365f:	and    eax,0xc43af58f
  413664:	lods   al,BYTE PTR ds:[esi]
  413665:	jb     0x4135f4
  413667:	inc    esi
  413668:	data16 mov bl,bh
  41366b:	cmp    BYTE PTR [edx-0x565df876],ah
  413671:	jno    0x4135f5
  413673:	and    ecx,eax
  413675:	add    DWORD PTR [eax-0x4b],ebx
  413678:	pop    edi
  413679:	daa    
  41367a:	jecxz  0x41368f
  41367c:	test   al,0x1b
  41367e:	daa    
  41367f:	push   ecx
  413680:	out    dx,eax
  413681:	jmp    0x93ee:0x2dae171e
  413688:	adc    al,0xd8
  41368a:	retf   0xfd3
  41368d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41368e:	test   eax,0xe6aa5465
  413693:	ss adc eax,0xde6c1f82
  413699:	and    dl,bh
  41369b:	push   ebp
  41369c:	cmc    
  41369d:	into   
  41369e:	sbb    BYTE PTR ds:0xa235c1ec,bh
  4136a4:	iret   
  4136a5:	dec    ebp
  4136a6:	push   ds
  4136a7:	das    
  4136a8:	iret   
  4136a9:	scas   al,BYTE PTR es:[edi]
  4136aa:	or     eax,ecx
  4136ac:	loope  0x41365d
  4136ae:	loop   0x4136d5
  4136b0:	mov    gs,WORD PTR [edi]
  4136b2:	push   ebx
  4136b3:	cmp    BYTE PTR ds:0xf3a78de4,dh
  4136b9:	or     al,ah
  4136bb:	push   ebp
  4136bc:	jbe    0x4136f5
  4136be:	popf   
  4136bf:	push   esi
  4136c0:	leavew 
  4136c2:	and    BYTE PTR [edx],dl
  4136c4:	outs   dx,DWORD PTR ds:[esi]
  4136c5:	daa    
  4136c6:	popf   
  4136c7:	push   ebx
  4136c8:	mov    ecx,0x7f1ac015
  4136cd:	add    esp,DWORD PTR [edi-0xbb4b761]
  4136d3:	gs or  al,0xfe
  4136d6:	fs mov esi,0x4b613a3c
  4136dc:	js     0x413677
  4136de:	push   esp
  4136df:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4136e1:	aad    0x29
  4136e3:	ja     0x41370c
  4136e5:	push   eax
  4136e6:	jg     0x4136ed
  4136e8:	jle    0x4136a1
  4136ea:	sti    
  4136eb:	imul   esi,esp,0x8d1bf6d9
  4136f1:	sti    
  4136f2:	or     BYTE PTR [edx],0xbd
  4136f5:	lock fs ins DWORD PTR es:[edi],dx
  4136f8:	push   esp
  4136f9:	mov    ah,cl
  4136fb:	xor    BYTE PTR [ebx+0x31],bh
  4136fe:	aas    
  4136ff:	dec    eax
  413700:	fmulp  st(3),st
  413702:	and    dl,BYTE PTR [edi+0x9]
  413705:	xchg   ecx,eax
  413706:	popf   
  413707:	inc    esi
  413708:	mov    ebx,0x4afeae27
  41370d:	clc    
  41370e:	jmp    0x3dd38b54
  413713:	aad    0x49
  413715:	(bad)  
  413716:	mov    ebp,0x39f232f5
  41371b:	add    ebx,DWORD PTR [edx+ecx*4+0x5]
  41371f:	add    ebx,esp
  413721:	(bad)  
  413722:	stos   DWORD PTR es:[edi],eax
  413723:	xor    eax,0x9f1a257a
  413728:	into   
  413729:	sbb    DWORD PTR [esp+ebx*4+0x1dc852f0],edx
  413730:	clc    
  413731:	dec    ecx
  413732:	stos   DWORD PTR es:[edi],eax
  413733:	icebp  
  413734:	or     esi,edi
  413736:	rol    BYTE PTR [eax-0x393c3644],cl
  41373c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41373d:	in     eax,dx
  41373e:	inc    edi
  41373f:	in     eax,0xc2
  413741:	fnstsw ax
  413743:	and    eax,0xac73c624
  413748:	dec    esi
  413749:	bound  eax,QWORD PTR [esi-0x7eff9183]
  41374f:	mov    edi,0xd2537dcb
  413754:	sbb    DWORD PTR [eax],edi
  413756:	xchg   edx,eax
  413757:	(bad)  
  413758:	pop    eax
  413759:	jne    0x41371e
  41375b:	div    BYTE PTR [esi-0x1]
  41375e:	bound  ebp,QWORD PTR [eax+0x58]
  413761:	outs   dx,DWORD PTR ds:[esi]
  413762:	ss (bad) 
  413764:	imul   esi,DWORD PTR [eax],0x744fd037
  41376a:	loope  0x4136fe
  41376c:	cli    
  41376d:	outs   dx,BYTE PTR ds:[esi]
  41376e:	(bad)  
  41376f:	in     al,0x40
  413771:	jg     0x41376e
  413773:	sbb    al,BYTE PTR [edi-0x73]
  413776:	ret    
  413777:	fs push cs
  413779:	xor    eax,0xafdaf027
  41377e:	sub    ah,BYTE PTR [edx-0x1b8abca3]
  413784:	addr16 clc 
  413786:	mov    ah,0xc6
  413788:	add    bl,al
  41378a:	add    BYTE PTR [ebx],dh
  41378c:	iret   
  41378d:	stos   DWORD PTR es:[edi],eax
  41378e:	pop    edi
  41378f:	mov    cl,0xd
  413791:	and    ebp,DWORD PTR [esi+0x31bf2601]
  413797:	lock pop esi
  413799:	int    0xe3
  41379b:	call   0xdcd547ea
  4137a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137a1:	sahf   
  4137a2:	cs and dh,bh
  4137a5:	mov    ds:0x3851d263,eax
  4137aa:	arpl   ax,si
  4137ac:	or     al,0x19
  4137ae:	or     al,BYTE PTR [esi-0x26e51ca4]
  4137b4:	push   ebx
  4137b5:	adc    al,0x8a
  4137b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137b8:	add    dl,BYTE PTR [esi-0x64]
  4137bb:	out    0xe9,al
  4137bd:	icebp  
  4137be:	and    ebx,DWORD PTR [edi]
  4137c0:	lods   al,BYTE PTR ds:[esi]
  4137c1:	push   ds
  4137c2:	fistp  QWORD PTR [eax-0x574960c9]
  4137c8:	lea    ecx,[ecx+0x7f]
  4137cb:	fs jne 0x41379f
  4137ce:	repz xor al,0xeb
  4137d1:	bound  esi,QWORD PTR [eax-0x7e]
  4137d4:	pop    edx
  4137d5:	or     bh,dl
  4137d7:	mov    al,ds:0x12779d06
  4137dc:	mov    ebx,0x67fc83b2
  4137e1:	mov    ch,0x87
  4137e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137e4:	and    eax,0xa17c6a0f
  4137e9:	dec    ebp
  4137ea:	nop
  4137eb:	or     al,0x92
  4137ed:	inc    eax
  4137ee:	push   edx
  4137ef:	cmp    al,0x21
  4137f1:	and    al,0x1f
  4137f3:	call   0x5875e0c6
  4137f8:	xor    BYTE PTR [esi-0x2a73dcd4],al
  4137fe:	xchg   ecx,eax
  4137ff:	(bad)  
  413800:	jne    0x4137e6
  413802:	and    al,0x45
  413804:	cld    
  413805:	fabs   
  413807:	mov    bh,0x33
  413809:	jl     0x413866
  41380b:	cdq    
  41380c:	mov    al,0x92
  41380e:	or     al,0xad
  413810:	jns    0x41379b
  413812:	mov    dl,0x6e
  413814:	cmp    al,0x2f
  413816:	xchg   ebp,eax
  413817:	and    al,0x80
  413819:	dec    esi
  41381a:	out    0x28,al
  41381c:	clc    
  41381d:	jle    0x413872
  41381f:	je     0x4137de
  413821:	xor    eax,0x9dbe3cdc
  413826:	retf   0x6c3c
  413829:	and    al,0x57
  41382b:	adc    BYTE PTR [ecx+0x17bd6887],dh
  413831:	jns    0x413869
  413833:	and    BYTE PTR [esi],cl
  413835:	mov    cl,0xca
  413837:	pop    ebp
  413838:	(bad)  
  413839:	mov    ds:0xb6259376,al
  41383e:	popa   
  41383f:	sub    BYTE PTR [eax],0xb4
  413842:	aas    
  413843:	jle    0x413854
  413845:	push   esp
  413846:	arpl   WORD PTR [eax+0x1e68b499],si
  41384c:	or     eax,0x62ad026d
  413851:	outs   dx,BYTE PTR ds:[esi]
  413852:	lea    edi,[ebx+0x55]
  413855:	clc    
  413856:	lahf   
  413857:	or     bh,BYTE PTR [ecx-0x69]
  41385a:	(bad)  
  41385b:	in     eax,0x4d
  41385d:	jp     0x413835
  41385f:	add    dl,cl
  413861:	or     DWORD PTR [edi],0xffffff95
  413864:	lea    ebx,[eax+0x57]
  413867:	xchg   ebp,eax
  413868:	dec    ebx
  413869:	mov    ecx,0xea692ffe
  41386e:	adc    dh,BYTE PTR [ebx+0x7f]
  413871:	ins    BYTE PTR es:[edi],dx
  413872:	pop    ebx
  413873:	jno    0x4138d3
  413875:	mov    BYTE PTR [eax-0xf],ah
  413878:	dec    edi
  413879:	jecxz  0x41389a
  41387b:	fldenv [eax+eiz*4+0x659c6c86]
  413882:	and    al,0xfe
  413884:	xlat   BYTE PTR ds:[ebx]
  413885:	jb     0x413855
  413887:	jo     0x41389a
  413889:	xor    BYTE PTR [ecx],dh
  41388b:	inc    esi
  41388c:	xlat   BYTE PTR ds:[ebx]
  41388d:	daa    
  41388e:	adc    DWORD PTR [edx+0x54],eax
  413891:	mov    esi,DWORD PTR [edi]
  413893:	cmp    BYTE PTR [ebx-0x18e23d89],0xd
  41389a:	test   DWORD PTR [ecx-0x182a70f9],ecx
  4138a0:	or     eax,0x58248d6e
  4138a5:	dec    esp
  4138a6:	xor    ah,BYTE PTR [esi]
  4138a8:	inc    ebx
  4138a9:	not    DWORD PTR [esp+eax*8-0x20c76ba9]
  4138b0:	push   edx
  4138b1:	pop    ebx
  4138b2:	int    0xcc
  4138b4:	lods   al,BYTE PTR ds:[esi]
  4138b5:	arpl   WORD PTR [ebp+edi*2+0xb9f76b9],bp
  4138bc:	cmc    
  4138bd:	xchg   esi,eax
  4138be:	pop    ds
  4138bf:	mov    ds:0x138bcef,eax
  4138c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138c6:	jae    0x4138a3
  4138c8:	gs xchg ecx,eax
  4138ca:	add    bh,bh
  4138cc:	pop    es
  4138cd:	xor    esp,DWORD PTR [eax-0x43]
  4138d0:	rcr    ch,cl
  4138d2:	adc    al,0xe1
  4138d4:	pop    edx
  4138d5:	cld    
  4138d6:	jecxz  0x41385e
  4138d8:	shl    BYTE PTR [edi+0x34],cl
  4138db:	stc    
  4138dc:	loope  0x41386a
  4138de:	cmp    esp,edx
  4138e0:	test   BYTE PTR [edi],cl
  4138e2:	popf   
  4138e3:	(bad)  
  4138e4:	retf   
  4138e5:	jne    0x41386a
  4138e7:	add    BYTE PTR [eax+0x58],ch
  4138ea:	daa    
  4138eb:	push   ecx
  4138ec:	mov    dh,0x9f
  4138ee:	dec    ebp
  4138ef:	sub    eax,0xc852376d
  4138f4:	adc    ch,bh
  4138f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138f7:	aaa    
  4138f8:	addr16 jp 0x4138d2
  4138fb:	push   ds
  4138fc:	jnp    0x4138bd
  4138fe:	and    eax,0xf1f90227
  413903:	test   eax,0x95014549
  413908:	aas    
  413909:	js     0x4138a8
  41390b:	cmp    di,si
  41390e:	sub    BYTE PTR [ebx-0x5e],bh
  413911:	add    DWORD PTR [esi+ebp*8+0xc90116c],edi
  413918:	into   
  413919:	mov    al,0x87
  41391b:	mov    edx,0xf4c70e5a
  413920:	jb     0x4138a6
  413922:	into   
  413923:	sub    DWORD PTR [ecx-0x6b],ebx
  413926:	sub    BYTE PTR [ebx-0x641b1d37],ah
  41392c:	push   0xa461b403
  413931:	out    dx,eax
  413932:	add    BYTE PTR [eax+0x65],bl
  413935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413936:	push   ds
  413937:	pop    edx
  413938:	rcl    BYTE PTR [esi-0x33],1
  41393b:	fs int3 
  41393d:	xchg   esi,eax
  41393e:	ds mov edi,0xfdab36d2
  413944:	inc    esi
  413945:	fisub  WORD PTR [ebp+0x2cfc8c16]
  41394b:	js     0x413947
  41394d:	call   0xabbdfb6
  413952:	aas    
  413953:	cmp    DWORD PTR [edi-0x66],0x60c5bdd5
  41395a:	mov    BYTE PTR [edi-0x26],dl
  41395d:	rol    DWORD PTR [esp+eax*8-0x6de542ac],0xcf
  413965:	rcl    DWORD PTR [edx-0x18ce4e7],0x8b
  41396c:	mov    ecx,0x46d71d80
  413971:	pop    esi
  413972:	ret    
  413973:	pop    ebx
  413974:	jne    0x413900
  413976:	mov    ebx,eax
  413978:	retf   0x3afa
  41397b:	retf   0x617b
  41397e:	pop    ds
  41397f:	sub    al,0xb9
  413981:	sti    
  413982:	loopne 0x4139ec
  413984:	popa   
  413985:	fdivp  st(2),st
  413987:	xchg   esi,eax
  413988:	(bad)  
  413989:	fiadd  DWORD PTR [edi-0x3dbc2178]
  41398f:	add    bh,BYTE PTR [edx+0x675c68b4]
  413995:	aam    0x90
  413997:	sub    cl,dh
  413999:	js     0x41398a
  41399b:	pop    ss
  41399c:	mov    DWORD PTR [ebx-0x424b754f],esi
  4139a2:	popf   
  4139a3:	or     edx,DWORD PTR [ecx]
  4139a5:	mov    edi,0x8ca4cc5f
  4139aa:	xchg   ebx,eax
  4139ab:	cmp    eax,0x5a6af1ff
  4139b0:	je     0x4139d1
  4139b2:	test   al,0x0
  4139b4:	jbe    0x413a2a
  4139b6:	xchg   ecx,eax
  4139b7:	dec    eax
  4139b8:	ja     0x4139ee
  4139ba:	in     al,0x9e
  4139bc:	inc    DWORD PTR [edi]
  4139be:	push   esi
  4139bf:	shl    BYTE PTR [ebx+0x720693cc],1
  4139c5:	lods   al,BYTE PTR ds:[esi]
  4139c6:	rol    DWORD PTR [ecx-0x458f38bf],cl
  4139cc:	mov    eax,ds:0x6a2db551
  4139d1:	mov    al,ds:0x66512b20
  4139d6:	dec    edx
  4139d7:	dec    ebx
  4139d8:	mov    ebx,0x791e453f
  4139dd:	(bad)  
  4139de:	ja     0x4139bb
  4139e0:	mov    ch,0x1
  4139e2:	adc    ah,0xce
  4139e5:	mov    ch,0x70
  4139e7:	scas   al,BYTE PTR es:[edi]
  4139e8:	retf   0xeeaa
  4139eb:	in     eax,0xd
  4139ed:	mul    BYTE PTR [eax]
  4139ef:	push   ebp
  4139f0:	retf   
  4139f1:	mov    BYTE PTR [ebx-0x14],0x36
  4139f5:	push   0xed4e25cb
  4139fa:	sub    esi,ebp
  4139fc:	lea    esp,[esp+edx*2]
  4139ff:	inc    ecx
  413a00:	mov    ebx,0x902297f8
  413a05:	aad    0xa9
  413a07:	or     al,0x44
  413a09:	xchg   esp,eax
  413a0a:	jno    0x4139b9
  413a0c:	jg     0x413a16
  413a0e:	and    al,0x1a
  413a10:	lods   al,BYTE PTR ds:[esi]
  413a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a12:	std    
  413a13:	stos   BYTE PTR es:[edi],al
  413a14:	mov    al,ds:0x61e8151f
  413a19:	add    eax,0xd3418560
  413a1e:	or     DWORD PTR [eax-0x6b],eax
  413a21:	adc    al,0xd9
  413a23:	test   BYTE PTR [esi],0x1
  413a26:	push   0x43
  413a28:	mov    eax,0x64a1cd33
  413a2d:	jo     0x413a0d
  413a2f:	call   0xf58089b6
  413a34:	imul   edx,ebx,0x1734345c
  413a3a:	fst    DWORD PTR ds:0xa8b5e773
  413a40:	sub    al,BYTE PTR [esi]
  413a42:	sbb    BYTE PTR [ecx-0x24d6819b],0xa3
  413a49:	retf   0x7474
  413a4c:	pop    esi
  413a4d:	addr16 pop eax
  413a4f:	cmc    
  413a50:	outs   dx,DWORD PTR ds:[esi]
  413a51:	imul   ebx,DWORD PTR [edi-0x3c],0xd9e843f4
  413a58:	daa    
  413a59:	xor    DWORD PTR [ebx+0x480d58cc],edx
  413a5f:	cwde   
  413a60:	out    0xa9,al
  413a62:	mov    ebx,0xb6d6b2a2
  413a67:	add    ebx,esp
  413a69:	sub    ebp,DWORD PTR [edx]
  413a6b:	(bad)  
  413a6c:	mov    ebp,0x35b76925
  413a71:	sbb    BYTE PTR [esp+esi*1-0x44],0x19
  413a76:	cmp    eax,0xdce483fe
  413a7b:	xor    al,cl
  413a7d:	scas   al,BYTE PTR es:[edi]
  413a7e:	dec    edx
  413a7f:	cld    
  413a80:	xor    BYTE PTR [edx-0xe],0xd9
  413a84:	pop    es
  413a85:	and    DWORD PTR [ebx-0x3b],edx
  413a88:	push   ebx
  413a89:	push   cs
  413a8a:	xor    al,0x67
  413a8c:	in     eax,dx
  413a8d:	xchg   ecx,eax
  413a8e:	mov    ah,0x14
  413a90:	inc    eax
  413a91:	adc    DWORD PTR [ebx-0x77],edx
  413a94:	fcom   QWORD PTR [ebx+0x70e8a541]
  413a9a:	ror    BYTE PTR [ebp-0x6c3c0e1],1
  413aa0:	lods   eax,DWORD PTR ds:[esi]
  413aa1:	sbb    bl,BYTE PTR [edi+0x3c]
  413aa4:	idiv   ebx
  413aa6:	hlt    
  413aa7:	hlt    
  413aa8:	pop    ss
  413aa9:	fcmove st,st(3)
  413aab:	or     eax,0x74d65570
  413ab0:	test   al,0xae
  413ab2:	jl     0x413a97
  413ab4:	mov    DWORD PTR [eax-0x4f],eax
  413ab7:	aaa    
  413ab8:	xchg   ecx,eax
  413ab9:	push   es
  413aba:	int3   
  413abb:	ror    DWORD PTR [ebp+0x4e4db06d],1
  413ac1:	cmp    edx,DWORD PTR [ecx]
  413ac3:	cmp    eax,0xbbd9e5f2
  413ac8:	lock (bad) [esi-0x6]
  413acc:	outs   dx,DWORD PTR ds:[esi]
  413acd:	ret    
  413ace:	ss jge 0x413ac8
  413ad1:	mov    dl,0x54
  413ad3:	dec    ecx
  413ad4:	leave  
  413ad5:	xchg   esp,eax
  413ad6:	mov    dl,0x3c
  413ad8:	sbb    BYTE PTR [ecx],0xf6
  413adb:	pop    esi
  413adc:	lahf   
  413add:	mov    ah,0xbf
  413adf:	not    BYTE PTR [eax]
  413ae1:	sub    ebx,DWORD PTR [ebp-0x767e4e83]
  413ae7:	xchg   BYTE PTR [eax],bl
  413ae9:	loop   0x413a85
  413aeb:	aad    0xba
  413aed:	pushf  
  413aee:	sbb    eax,0x2a0796d6
  413af3:	jg     0x413b09
  413af5:	jb     0x413b43
  413af7:	cmc    
  413af8:	xor    DWORD PTR [ecx+0x44],0xffffffae
  413afc:	mov    dl,0x23
  413afe:	dec    ebx
  413aff:	aas    
  413b00:	fdivp  st(7),st
  413b02:	scas   eax,DWORD PTR es:[edi]
  413b03:	mov    esi,DWORD PTR [eax-0x589057a0]
  413b09:	out    dx,al
  413b0a:	mov    edi,0x231319e3
  413b0f:	cld    
  413b10:	shl    DWORD PTR [edi+edx*8],0xb3
  413b14:	push   ss
  413b15:	add    al,0xfc
  413b17:	xor    ch,BYTE PTR [ecx-0x7c]
  413b1a:	fadd   DWORD PTR [ecx-0x34]
  413b1d:	xor    al,0xb4
  413b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b20:	xchg   esp,eax
  413b21:	pop    ebp
  413b22:	sbb    eax,0x1b76fafa
  413b27:	stos   DWORD PTR es:[edi],eax
  413b28:	xor    al,cl
  413b2a:	ret    
  413b2b:	pushf  
  413b2c:	mov    edx,0xb1150e57
  413b31:	or     ecx,DWORD PTR [esi]
  413b33:	sub    eax,0x9ef959ec
  413b38:	popa   
  413b39:	paddusw mm0,QWORD PTR [esi]
  413b3c:	fsubr  st,st(7)
  413b3e:	add    edi,esi
  413b40:	out    0xb5,eax
  413b42:	adc    BYTE PTR [edi],ch
  413b44:	aas    
  413b45:	push   ecx
  413b46:	in     al,dx
  413b47:	lea    edx,[ebx-0x798045b2]
  413b4d:	and    BYTE PTR [ebx],cl
  413b4f:	int3   
  413b50:	jg     0x413b30
  413b52:	pop    esp
  413b53:	adc    eax,0x2d9b8a88
  413b58:	aam    0xf7
  413b5a:	add    esp,DWORD PTR [ecx+0xf774f66]
  413b60:	loopne 0x413baa
  413b62:	jmp    FWORD PTR [esi]
  413b64:	jecxz  0x413ba8
  413b66:	ficomp DWORD PTR [edx+0x75547261]
  413b6c:	aaa    
  413b6d:	mov    ds:0x46c987ab,al
  413b72:	jae    0x413bb2
  413b74:	mov    esi,0xc691dc98
  413b79:	mov    al,ds:0x23c3b55
  413b7e:	loopne 0x413b44
  413b80:	push   esi
  413b81:	cmp    BYTE PTR [esi+edx*1+0x31],dh
  413b85:	or     dl,bl
  413b87:	fst    st(3)
  413b89:	jmp    0xffd0:0x18604f72
  413b90:	push   esi
  413b91:	and    al,0x83
  413b93:	mov    edx,0x9d6d2666
  413b98:	sar    BYTE PTR [edi+edx*4-0x3065c805],1
  413b9f:	lahf   
  413ba0:	fadd   QWORD PTR ds:0x532dccaf
  413ba6:	xchg   ebx,edx
  413ba8:	jnp    0x413c1d
  413baa:	inc    edx
  413bab:	imul   esp,DWORD PTR [ecx],0xffffffcf
  413bae:	push   edi
  413baf:	add    eax,0x1e672aaa
  413bb4:	(bad)  
  413bb5:	repnz sub al,BYTE PTR [ecx]
  413bb8:	mov    al,dh
  413bba:	(bad)  
  413bbb:	mov    bh,0x9a
  413bbd:	jmp    0x1231ebee
  413bc2:	popf   
  413bc3:	mov    edi,0xe1ef383f
  413bc8:	js     0x413b75
  413bca:	push   edi
  413bcb:	out    dx,eax
  413bcc:	push   DWORD PTR [ebp-0x6f]
  413bcf:	outs   dx,DWORD PTR ds:[esi]
  413bd0:	and    DWORD PTR [ebp-0x45],esi
  413bd3:	mov    eax,ebp
  413bd5:	jmp    0x1b4e:0xee8f82fb
  413bdc:	jmp    0x956e:0x60b563d4
  413be3:	cwde   
  413be4:	(bad)  
  413be5:	mov    edi,0x8051aa5
  413bea:	jg     0x413c6a
  413bec:	pop    es
  413bed:	idiv   ebx
  413bef:	push   0x28
  413bf1:	pop    ecx
  413bf2:	pop    esi
  413bf3:	or     bl,BYTE PTR [edx]
  413bf5:	imul   eax,esp,0x4bf33150
  413bfb:	mov    ebx,0x74ad7477
  413c00:	mov    esp,0x9ac26518
  413c05:	ss cmp bh,bl
  413c08:	shl    BYTE PTR [esp+ebx*2+0x68cab318],1
  413c0f:	repnz dec ebx
  413c11:	pop    edi
  413c12:	daa    
  413c13:	sbb    DWORD PTR [edi],esp
  413c15:	mov    bh,ch
  413c17:	inc    esi
  413c18:	mov    esp,0xe8727a06
  413c1d:	add    DWORD PTR [eax],esp
  413c1f:	jmp    DWORD PTR [ebx+edi*2-0x1f]
  413c23:	js     0x413c94
  413c25:	sub    bl,bh
  413c27:	push   ss
  413c28:	mov    ds:0xe5352649,al
  413c2d:	inc    eax
  413c2e:	loop   0x413c11
  413c30:	dec    ebx
  413c31:	dec    esp
  413c32:	pop    es
  413c33:	and    DWORD PTR ds:0xae972b45,esp
  413c39:	mov    dh,0xb5
  413c3b:	mov    edx,0xb1c82f93
  413c40:	dec    ebx
  413c41:	scas   al,BYTE PTR es:[edi]
  413c42:	jne    0x413c7a
  413c44:	retf   
  413c45:	fwait
  413c46:	adc    al,0xde
  413c48:	popa   
  413c49:	and    ch,ah
  413c4b:	gs ja  0x413c06
  413c4e:	inc    eax
  413c4f:	add    eax,0x4e11ec96
  413c54:	fwait
  413c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c56:	jb     0x413cc8
  413c58:	sub    BYTE PTR [edx-0x1fb4e767],bl
  413c5e:	cmp    cl,BYTE PTR [ebx]
  413c60:	xchg   esp,eax
  413c61:	(bad)  
  413c62:	adc    al,0x54
  413c64:	pop    esi
  413c65:	mov    al,0x6
  413c67:	xor    edx,DWORD PTR [esi+0x1ec5ac]
  413c6d:	mov    eax,ds:0xc8a03c7b
  413c72:	xor    DWORD PTR [eax+0x7f],esi
  413c75:	popa   
  413c76:	jne    0x413cd9
  413c78:	cld    
  413c79:	push   edx
  413c7a:	fnstcw WORD PTR [ebp+ecx*8-0x80]
  413c7e:	es pop esi
  413c80:	xor    ecx,DWORD PTR [ecx+0x7d163f88]
  413c86:	lea    ecx,[ecx]
  413c88:	xchg   edi,eax
  413c89:	sbb    al,BYTE PTR [ecx-0x115cd4cf]
  413c8f:	xchg   DWORD PTR [edi+0x66],edi
  413c92:	clc    
  413c93:	mov    ds:0xa5f1d6d3,al
  413c98:	inc    esi
  413c99:	mov    ds:0xf140fcf8,eax
  413c9e:	mov    eax,DWORD PTR [ebx]
  413ca0:	lds    esi,FWORD PTR [ebp+0x7a49ffd]
  413ca6:	mov    esp,0x71935d13
  413cab:	shl    BYTE PTR [esi+0x7658c8d2],1
  413cb1:	cmc    
  413cb2:	fidiv  DWORD PTR [esi]
  413cb4:	and    BYTE PTR [ecx+esi*1+0x1c4ec388],bl
  413cbb:	xor    bh,ah
  413cbd:	mov    esp,0xd6bed09
  413cc2:	(bad)  
  413cc3:	in     al,0x87
  413cc5:	mov    ds:0xef27038a,al
  413cca:	pop    ecx
  413ccb:	push   eax
  413ccc:	sub    al,0xc5
  413cce:	fistp  DWORD PTR [eax+eax*2]
  413cd1:	fcmove st,st(4)
  413cd3:	fisttp DWORD PTR [ebp-0x25]
  413cd6:	mov    ds:0x9975c665,al
  413cdb:	aaa    
  413cdc:	push   ss
  413cdd:	jl     0x413d31
  413cdf:	push   ebp
  413ce0:	repnz add ebp,edx
  413ce3:	sbb    al,0x4
  413ce5:	inc    ebx
  413ce6:	jmp    0x413cb0
  413ce8:	dec    ebx
  413ce9:	ficom  DWORD PTR [edi-0x29d7e2ea]
  413cef:	fadd   DWORD PTR [ecx-0x6a]
  413cf2:	pop    edx
  413cf3:	jp     0x413d24
  413cf5:	cs ins BYTE PTR es:[edi],dx
  413cf7:	into   
  413cf8:	jmp    0x413c9b
  413cfa:	cmp    ebp,eax
  413cfc:	retf   0x5d80
  413cff:	mov    ch,dl
  413d01:	push   eax
  413d02:	sub    al,0x67
  413d04:	inc    esp
  413d05:	cld    
  413d06:	mov    fs,WORD PTR [esi+edx*2-0x7d64a046]
  413d0d:	xor    cl,BYTE PTR [eax-0x20e0b4cb]
  413d13:	and    BYTE PTR [ebx-0x4f],dh
  413d16:	int3   
  413d17:	lods   eax,DWORD PTR ds:[esi]
  413d18:	dec    esi
  413d19:	mov    ebp,0x403fc9d5
  413d1e:	xchg   DWORD PTR [eax-0x64],edi
  413d21:	dec    edx
  413d22:	jecxz  0x413ce7
  413d24:	adc    eax,0x80a6bfe2
  413d29:	push   edx
  413d2a:	mov    cl,0x38
  413d2c:	inc    ebp
  413d2d:	xchg   edi,edx
  413d2f:	ror    DWORD PTR [edx-0x202812b],1
  413d35:	xor    BYTE PTR [edx],0xc0
  413d38:	push   ebx
  413d39:	mov    DWORD PTR [esi],edx
  413d3b:	and    edx,DWORD PTR [eax+eax*8-0x7b2923e9]
  413d42:	jl     0x413cfb
  413d44:	mov    bh,0x3f
  413d46:	push   eax
  413d47:	or     edi,esi
  413d49:	and    DWORD PTR [edx+edx*1+0x230d8818],esp
  413d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d51:	push   esi
  413d52:	mov    esp,0xfc806228
  413d57:	dec    esp
  413d58:	(bad)  
  413d59:	jmp    0x481381ce
  413d5e:	mov    edi,0x1694bb84
  413d63:	mov    ebp,DWORD PTR [edx]
  413d65:	xor    DWORD PTR [ecx-0x14767a32],ecx
  413d6b:	lods   al,BYTE PTR ds:[esi]
  413d6c:	pop    edi
  413d6d:	xor    ch,ch
  413d6f:	and    BYTE PTR [ebx+0x45],dh
  413d72:	ret    
  413d73:	sbb    bl,dl
  413d75:	aad    0x77
  413d77:	sub    DWORD PTR [eax-0x2e0bce46],0x1c112504
  413d81:	bnd jg 0x413ddf
  413d84:	ja     0x413d24
  413d86:	mov    WORD PTR [edx+0x3cc3aa5],es
  413d8c:	mov    bh,0xbf
  413d8e:	or     esi,ebp
  413d90:	(bad)  
  413d91:	daa    
  413d92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d93:	js     0x413dda
  413d95:	push   cs
  413d96:	scas   eax,DWORD PTR es:[edi]
  413d97:	jo     0x413dbc
  413d99:	dec    ecx
  413d9a:	lods   al,BYTE PTR ds:[esi]
  413d9b:	lock adc dh,ch
  413d9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d9f:	jl     0x413d2f
  413da1:	or     al,0x4c
  413da3:	dec    edx
  413da4:	pop    ds
  413da5:	sub    edi,eax
  413da7:	pop    esp
  413da8:	adc    eax,0x1df143b
  413dad:	adc    al,0xe5
  413daf:	rol    BYTE PTR [ebx+edi*4],cl
  413db2:	sbb    DWORD PTR [edx-0xa],0x59
  413db6:	jbe    0x413d96
  413db8:	push   ds
  413db9:	ret    
  413dba:	(bad)  
  413dbb:	mov    esi,0x760af484
  413dc0:	inc    ecx
  413dc1:	lods   al,BYTE PTR ds:[esi]
  413dc2:	repz test al,0xb0
  413dc5:	mov    WORD PTR [edx-0x3b],?
  413dc8:	jp     0x413d96
  413dca:	test   BYTE PTR [ebx],0x4e
  413dcd:	mov    cl,0xb0
  413dcf:	sbb    eax,0x86071ff
  413dd4:	inc    eax
  413dd5:	jecxz  0x413e51
  413dd7:	cmp    BYTE PTR [edi-0x507bf4ba],dl
  413ddd:	push   ds
  413dde:	push   edx
  413ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413de0:	mov    eax,0x17cf2817
  413de5:	sub    BYTE PTR ds:0xacf2d5e7,bh
  413deb:	mov    eax,ds:0x89ea6e5d
  413df0:	mov    dl,0x54
  413df2:	popa   
  413df3:	aad    0x48
  413df5:	(bad)  
  413df6:	mov    edx,DWORD PTR [esi+0x38daeb61]
  413dfc:	xor    edx,DWORD PTR [edx]
  413dfe:	mov    bl,0x32
  413e00:	stc    
  413e01:	sbb    DWORD PTR [eax-0x681a084f],ebx
  413e07:	pop    ebp
  413e08:	les    esi,FWORD PTR [ebp+0x47]
  413e0b:	and    DWORD PTR [edx-0x79c37636],ecx
  413e11:	pop    esp
  413e12:	icebp  
  413e13:	xor    eax,0x318beac1
  413e18:	xchg   DWORD PTR [ebx+0x6e],eax
  413e1b:	add    BYTE PTR [ecx+0x73],bh
  413e1e:	outs   dx,BYTE PTR ds:[esi]
  413e1f:	loop   0x413e56
  413e21:	mov    WORD PTR [edx+edi*4],fs
  413e24:	sub    cl,BYTE PTR [eax-0x5199550d]
  413e2a:	outs   dx,DWORD PTR ds:[esi]
  413e2b:	nop
  413e2c:	mov    ch,cl
  413e2e:	jns    0x413db6
  413e30:	pusha  
  413e31:	stos   DWORD PTR es:[edi],eax
  413e32:	aam    0x23
  413e34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e35:	jo     0x413e8a
  413e37:	test   bh,bh
  413e39:	mov    dl,0xf9
  413e3b:	mov    WORD PTR [esi],?
  413e3d:	xor    ebx,DWORD PTR [edx+0x7d]
  413e40:	xor    edi,DWORD PTR [ebx+edx*1+0x1a]
  413e44:	(bad)  
  413e45:	les    ebx,FWORD PTR [ecx-0x1e]
  413e48:	push   esi
  413e49:	jl     0x413e40
  413e4b:	stos   BYTE PTR es:[edi],al
  413e4c:	rcr    BYTE PTR [edx-0x699bfce9],cl
  413e52:	xchg   BYTE PTR [eax+ebp*8],dh
  413e55:	add    DWORD PTR [ebx-0x56978765],eax
  413e5b:	cmp    DWORD PTR [edx],esi
  413e5d:	pop    edx
  413e5e:	mov    ds:0x21950208,al
  413e63:	dec    ebx
  413e64:	inc    esp
  413e65:	loop   0x413e34
  413e67:	add    eax,0x400d187b
  413e6c:	ret    
  413e6d:	ins    DWORD PTR es:[edi],dx
  413e6e:	add    ecx,DWORD PTR [ebx+0x51a76762]
  413e74:	fwait
  413e75:	rcr    ch,1
  413e77:	ss add ecx,eax
  413e7a:	push   edi
  413e7b:	es jmp 0xec28:0x5a2dd313
  413e83:	add    al,0x68
  413e85:	xchg   esi,eax
  413e86:	dec    ecx
  413e87:	mov    edi,0x9f775184
  413e8c:	pusha  
  413e8d:	fisub  DWORD PTR [ebx+ecx*2-0x329fa88]
  413e94:	das    
  413e95:	dec    ecx
  413e96:	cdq    
  413e97:	add    al,0x6f
  413e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e9a:	clc    
  413e9b:	in     al,0xff
  413e9d:	push   cs
  413e9e:	fimul  WORD PTR [ebx-0xd1420b6]
  413ea4:	mov    ds:0xe805ecf7,al
  413ea9:	aas    
  413eaa:	and    dh,dh
  413eac:	in     al,0xc
  413eae:	les    ecx,FWORD PTR [ecx]
  413eb0:	mov    ecx,DWORD PTR [ecx+0x32f44fe4]
  413eb6:	xchg   DWORD PTR [esi+0x18],edi
  413eb9:	jecxz  0x413ea1
  413ebb:	and    edx,DWORD PTR [ebx-0x239d7ffe]
  413ec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ec2:	sub    ah,BYTE PTR ds:0x20923b0b
  413ec8:	call   0x86f038aa
  413ecd:	les    esi,FWORD PTR [edx-0x1f]
  413ed0:	in     al,0xf4
  413ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ed3:	in     eax,0x7c
  413ed5:	shl    DWORD PTR [esi-0x2a4ac18e],cl
  413edb:	daa    
  413edc:	jl     0x413ec5
  413ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413edf:	hlt    
  413ee0:	and    BYTE PTR [ecx+0x14],dh
  413ee3:	jmp    FWORD PTR [edx+0x21]
  413ee6:	les    eax,FWORD PTR [edi-0x4a]
  413ee9:	cmp    DWORD PTR [ebp+0x31],ebx
  413eec:	and    eax,0x896f8c28
  413ef1:	lods   al,BYTE PTR ds:[esi]
  413ef2:	cmp    BYTE PTR [edx-0x3470c2bf],dl
  413ef8:	jmp    0x3cc3589f
  413efd:	(bad)  
  413efe:	scas   eax,DWORD PTR es:[edi]
  413eff:	loope  0x413ee1
  413f01:	lahf   
  413f02:	dec    ecx
  413f03:	lahf   
  413f04:	pushf  
  413f05:	sub    ecx,DWORD PTR [edx]
  413f07:	xor    DWORD PTR [esi-0x7a847f2e],eax
  413f0d:	dec    edi
  413f0e:	mov    esp,0xd2a11af4
  413f13:	fld    DWORD PTR [eax+0x2b]
  413f16:	or     al,0x19
  413f18:	loop   0x413f29
  413f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f1b:	aad    0xd5
  413f1d:	sbb    al,0x65
  413f1f:	push   0x45
  413f21:	inc    ebx
  413f22:	cmp    edx,ebx
  413f24:	fiadd  WORD PTR [edx+0x15c9c0c2]
  413f2a:	(bad)  
  413f2b:	fstp   DWORD PTR [esi]
  413f2d:	ss ret 
  413f2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f30:	in     al,0xb
  413f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f33:	inc    edx
  413f34:	mov    edx,0xc2d44b05
  413f39:	mov    ah,0x52
  413f3b:	jo     0x413f3a
  413f3d:	lea    edx,[eax-0x75]
  413f40:	push   ebx
  413f41:	dec    ecx
  413f42:	or     al,0x6e
  413f44:	nop
  413f45:	pop    esi
  413f46:	jo     0x413f42
  413f48:	dec    esi
  413f49:	int    0x64
  413f4b:	in     eax,dx
  413f4c:	mov    edx,0xe55ef09c
  413f51:	push   edi
  413f52:	sub    DWORD PTR [edx+0x4756374e],ebx
  413f58:	fistp  QWORD PTR [ebx]
  413f5a:	das    
  413f5b:	jecxz  0x413f00
  413f5d:	push   ebp
  413f5e:	shl    dh,1
  413f60:	out    dx,eax
  413f61:	push   cs
  413f62:	repnz fwait
  413f64:	push   edx
  413f65:	fwait
  413f66:	push   0xffffffca
  413f68:	adc    BYTE PTR [esi+0x3a743ed8],0xf0
  413f6f:	ret    0x2ae
  413f72:	xor    al,0x6
  413f74:	fist   WORD PTR [esi]
  413f76:	mov    bl,0x29
  413f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f79:	xchg   dl,bl
  413f7b:	mov    bl,0x43
  413f7d:	in     al,0x6a
  413f7f:	imul   eax,DWORD PTR [ebx],0x10b51ded
  413f85:	xor    DWORD PTR [eax+ecx*1-0x39],eax
  413f89:	(bad)  
  413f8a:	clc    
  413f8b:	sti    
  413f8c:	jl     0x413f89
  413f8e:	push   edi
  413f8f:	cmp    edi,esi
  413f91:	sbb    BYTE PTR [esi],0x12
  413f94:	adc    eax,0x8613ba34
  413f99:	xchg   edx,eax
  413f9a:	cmovp  ebx,DWORD PTR [esi+0x7c1ce6ea]
  413fa1:	out    0x34,eax
  413fa3:	dec    ebx
  413fa4:	dec    eax
  413fa5:	fmul   st,st(4)
  413fa7:	and    bl,dl
  413fa9:	cdq    
  413faa:	pop    ebx
  413fab:	sub    eax,0x5737cff6
  413fb0:	or     eax,0x3cfbb6bd
  413fb5:	add    eax,edx
  413fb7:	js     0x413fcb
  413fb9:	aam    0x94
  413fbb:	icebp  
  413fbc:	push   esp
  413fbd:	mov    ds:0xb6190527,eax
  413fc2:	bswap  ebp
  413fc4:	inc    ecx
  413fc5:	call   0x616c:0x5ae5cda8
  413fcc:	mov    ch,0x63
  413fce:	das    
  413fcf:	xchg   ebp,eax
  413fd0:	fild   WORD PTR [ecx+0x4e002e32]
  413fd6:	int3   
  413fd7:	xor    edx,DWORD PTR [ecx+0xd]
  413fda:	fwait
  413fdb:	out    0x73,eax
  413fdd:	adc    cl,al
  413fdf:	aad    0xd9
  413fe1:	xor    ch,BYTE PTR [eax]
  413fe3:	sbb    dh,BYTE PTR [ebp+0x358f4223]
  413fe9:	xor    ebx,ecx
  413feb:	shl    DWORD PTR [edi+0x57148ab],cl
  413ff1:	xchg   esi,esp
  413ff3:	je     0x414073
  413ff5:	loopne 0x413fa7
  413ff7:	aad    0x2e
  413ff9:	mov    ch,0xea
  413ffb:	in     eax,dx
  413ffc:	out    dx,eax
  413ffd:	stc    
  413ffe:	test   DWORD PTR [edx+0x4c],edi
  414001:	xlat   BYTE PTR ds:[ebx]
  414002:	sbb    al,0x19
  414004:	ret    
  414005:	push   0xa16257d9
  41400a:	gs xor eax,0xb9e92b2
  414010:	mov    edx,0xa7d3655d
  414015:	aaa    
  414016:	xchg   edi,eax
  414017:	cld    
  414018:	sbb    al,0xba
  41401a:	sub    bh,BYTE PTR [esi]
  41401c:	in     eax,0x2b
  41401e:	push   eax
  41401f:	cdq    
  414020:	or     DWORD PTR [edi+0x66e27656],eax
  414026:	adc    eax,0xa2fca893
  41402b:	rol    DWORD PTR [edi],0x46
  41402e:	add    DWORD PTR [edi],edx
  414030:	jnp    0x4140a7
  414032:	jnp    0x414011
  414034:	not    DWORD PTR [eax-0x5a]
  414037:	sub    BYTE PTR [edx-0x18],ah
  41403a:	ror    bl,cl
  41403c:	xchg   esp,eax
  41403d:	jl     0x413fcf
  41403f:	lahf   
  414040:	inc    esi
  414041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414042:	leave  
  414043:	adc    eax,0xe0a07b9d
  414048:	jns    0x414000
  41404a:	or     eax,0x31cb4744
  414050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414051:	xor    al,al
  414053:	or     esi,DWORD PTR [ebx-0x5ab49670]
  414059:	scas   al,BYTE PTR es:[edi]
  41405a:	jge    0x4140da
  41405c:	jae    0x41402f
  41405e:	(bad)  
  41405f:	in     eax,0x39
  414061:	mov    ebp,0xa52b54
  414066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414067:	mov    ?,WORD PTR [ecx+0x30428a22]
  41406d:	leave  
  41406e:	cwde   
  41406f:	pushf  
  414070:	icebp  
  414071:	push   ecx
  414072:	fcomp  DWORD PTR [edx+esi*4-0x7c4c5e92]
  414079:	mov    cl,0xcb
  41407b:	outs   dx,DWORD PTR ds:[esi]
  41407c:	outs   dx,DWORD PTR ds:[esi]
  41407d:	or     esp,DWORD PTR [edi-0x6f]
  414080:	sub    al,0x36
  414082:	push   0x61
  414084:	pop    edx
  414085:	inc    ecx
  414086:	stos   BYTE PTR es:[edi],al
  414087:	in     eax,0xc
  414089:	mov    edi,0xf1f3f530
  41408e:	add    edi,edx
  414090:	not    BYTE PTR [ecx+0x7b]
  414093:	adc    cl,bl
  414095:	scas   eax,DWORD PTR es:[edi]
  414096:	repz retf 0x60d7
  41409a:	loopne 0x41408b
  41409c:	or     al,0xaf
  41409e:	(bad)  
  41409f:	sub    al,0x32
  4140a1:	xchg   edi,eax
  4140a2:	cmp    eax,ebx
  4140a4:	xchg   edx,eax
  4140a5:	xchg   esi,eax
  4140a6:	test   al,0x45
  4140a8:	push   cs
  4140a9:	mov    dh,0xf3
  4140ab:	loopne 0x4140f8
  4140ad:	je     0x4140d2
  4140af:	fadd   QWORD PTR [ebx+eiz*4]
  4140b2:	ret    
  4140b3:	(bad)  
  4140b4:	sbb    ecx,DWORD PTR [esi+0x392f2313]
  4140ba:	xor    esi,DWORD PTR [ecx-0x7e]
  4140bd:	xor    al,0x9e
  4140bf:	cmp    ah,BYTE PTR [eax+0x14]
  4140c2:	jno    0x4140ae
  4140c4:	dec    edx
  4140c5:	lods   eax,DWORD PTR ds:[esi]
  4140c6:	cmp    BYTE PTR [eax],ah
  4140c8:	dec    eax
  4140c9:	jne    0x414133
  4140cb:	push   eax
  4140cc:	fistp  QWORD PTR [edx+0x2b2f1a5]
  4140d2:	sub    al,0xd8
  4140d4:	add    al,0xa0
  4140d6:	push   es
  4140d7:	call   0xdc60:0xb59d05b5
  4140de:	(bad)  
  4140df:	pop    ss
  4140e0:	arpl   WORD PTR [ebx],di
  4140e2:	cdq    
  4140e3:	outs   dx,DWORD PTR ds:[esi]
  4140e4:	xchg   ah,bh
  4140e6:	mov    esi,0x165e1605
  4140eb:	sub    DWORD PTR [edi],eax
  4140ed:	mov    ebp,0x2714cb27
  4140f2:	out    dx,al
  4140f3:	mov    ebx,0x9f3572a8
  4140f8:	and    dh,0xcd
  4140fb:	cmc    
  4140fc:	mov    DWORD PTR ds:0xf20900f,esp
  414102:	xchg   ecx,eax
  414103:	retf   
  414104:	(bad)  
  414105:	push   eax
  414106:	cld    
  414107:	aas    
  414108:	push   esp
  414109:	pop    eax
  41410a:	lock retf 0xbbbc
  41410e:	test   eax,0x6694af9b
  414113:	pop    edi
  414114:	mov    al,ds:0x4196e55b
  414119:	and    ebx,edx
  41411b:	or     BYTE PTR [edx-0x4b],bh
  41411e:	call   0x7d96:0x9f32fc8e
  414125:	mov    ds:0xaa05e898,eax
  41412a:	push   edi
  41412b:	cwde   
  41412c:	inc    ebx
  41412d:	retf   0x5073
  414130:	rol    DWORD PTR [esi-0x46],0x0
  414134:	jnp    0x4140bb
  414136:	dec    BYTE PTR ds:0x9cd5259c
  41413c:	cmp    DWORD PTR [ecx+0x4a],esp
  41413f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414140:	sbb    al,0x86
  414142:	scas   al,BYTE PTR es:[edi]
  414143:	ss ret 0xc390
  414147:	pop    edi
  414148:	into   
  414149:	cmp    eax,DWORD PTR [ebp+0x7ca0a97e]
  41414f:	pop    ss
  414150:	add    ch,ah
  414152:	push   es
  414153:	add    eax,0x188735a7
  414158:	pop    esi
  414159:	cdq    
  41415a:	xor    dh,BYTE PTR [ebx+0x5a]
  41415d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41415e:	pop    ebp
  41415f:	and    DWORD PTR [edx+ebp*4-0x26eeb450],ebp
  414166:	jb     0x414123
  414168:	ds cdq 
  41416a:	mov    ss,WORD PTR [ebx+edi*4]
  41416d:	inc    ebp
  41416e:	test   DWORD PTR [eax-0xe],ebp
  414171:	fdiv   QWORD PTR [eax-0x5d]
  414174:	mov    esi,0x43545811
  414179:	xor    esp,DWORD PTR ds:0x3b49eae5
  41417f:	je     0x41416c
  414181:	or     ch,BYTE PTR [edx-0x7a]
  414184:	dec    ebp
  414185:	repnz stos BYTE PTR es:[edi],al
  414187:	push   ecx
  414188:	push   0xfd0b2f7
  41418d:	dec    esi
  41418e:	test   BYTE PTR [edi],ah
  414190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414191:	call   0xb6f6f85
  414196:	dec    ebp
  414197:	and    al,0x66
  414199:	inc    eax
  41419a:	or     BYTE PTR [eax-0x64ad002f],ah
  4141a0:	out    dx,eax
  4141a1:	dec    ecx
  4141a2:	xor    DWORD PTR gs:[eax+0x23],esp
  4141a6:	repz out 0x74,eax
  4141a9:	mov    eax,0x947daa55
  4141ae:	out    dx,eax
  4141af:	sti    
  4141b0:	addr16 aad 0x18
  4141b3:	mov    ds:0x1ae957cc,eax
  4141b8:	xor    eax,0x679a07c5
  4141bd:	sub    ebp,0xa27a0bf1
  4141c3:	push   esi
  4141c4:	bound  eax,QWORD PTR [ebp+0x39]
  4141c7:	call   DWORD PTR [ebx+0x7e]
  4141ca:	mov    edx,0xedecf36
  4141cf:	and    ebp,DWORD PTR [ebx]
  4141d1:	loopne 0x414192
  4141d3:	or     DWORD PTR [ebx+eax*8],eax
  4141d6:	aas    
  4141d7:	push   0xcf9bd2fa
  4141dc:	sbb    BYTE PTR [ebx+0x68],dl
  4141df:	xchg   edx,eax
  4141e0:	popa   
  4141e1:	into   
  4141e2:	lods   al,BYTE PTR ds:[esi]
  4141e3:	js     0x414220
  4141e5:	pop    ecx
  4141e6:	pop    edi
  4141e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141e8:	(bad)  
  4141e9:	jmp    0x4141a3
  4141eb:	pop    edx
  4141ec:	fist   DWORD PTR [ebp+0x37]
  4141ef:	inc    ebx
  4141f0:	pop    esp
  4141f1:	cmp    DWORD PTR [esp+edx*4],ebx
  4141f4:	loop   0x4141fd
  4141f6:	inc    edx
  4141f7:	clc    
  4141f8:	xor    BYTE PTR [esi+0x30],dh
  4141fb:	add    eax,0x11665368
  414200:	call   0xd17cb632
  414205:	cmp    BYTE PTR [ebx+0x10],ah
  414208:	imul   ebp,esp,0x5
  41420b:	push   cs
  41420c:	pop    ebx
  41420d:	mov    dh,0x9d
  41420f:	cwde   
  414210:	add    al,0x12
  414212:	mov    DWORD PTR [ebx],ebp
  414214:	mov    al,ds:0x6b0c1281
  414219:	popa   
  41421a:	sti    
  41421b:	test   eax,0x74cf40f7
  414220:	pop    es
  414221:	imul   esp,DWORD PTR [edi+esi*1],0x78
  414225:	and    bl,BYTE PTR [edx]
  414227:	icebp  
  414228:	nop
  414229:	mov    ds:0x8f293c04,al
  41422e:	stos   BYTE PTR es:[edi],al
  41422f:	mov    DWORD PTR [edi],esp
  414231:	inc    ebp
  414232:	pop    eax
  414233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414234:	jne    0x414237
  414236:	(bad)  
  414237:	les    esp,FWORD PTR [esp+esi*2-0x363d8a4a]
  41423e:	adc    al,0x1
  414240:	xchg   esp,eax
  414241:	adc    esi,ebp
  414243:	fucomip st,st(6)
  414245:	xor    ah,BYTE PTR [ecx+0x366aa9ec]
  41424b:	stos   BYTE PTR es:[edi],al
  41424c:	js     0x414213
  41424e:	push   si
  414250:	jne    0x4142ae
  414252:	push   cs
  414253:	fild   WORD PTR [edx-0x79d6090b]
  414259:	mov    ecx,0x88a95377
  41425e:	inc    esi
  41425f:	lea    esp,[edx]
  414261:	xchg   edx,eax
  414262:	in     al,dx
  414263:	xchg   ebp,eax
  414264:	and    eax,0x24a872e
  414269:	fwait
  41426a:	mov    eax,ds:0x29f15c22
  41426f:	(bad)  
  414271:	(bad)  
  414272:	mov    cl,0x4b
  414274:	cmp    al,dl
  414276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414277:	xchg   WORD PTR [esi+0x7e],bp
  41427b:	pop    ds
  41427c:	into   
  41427d:	outs   dx,BYTE PTR ds:[esi]
  41427e:	pop    ds
  41427f:	loop   0x414204
  414281:	sbb    DWORD PTR [ecx+0x16b674cb],ecx
  414287:	inc    eax
  414288:	inc    ebx
  414289:	pop    ds
  41428a:	push   ebp
  41428b:	or     BYTE PTR [edi+0x6745ecca],cl
  414291:	fmul   DWORD PTR [ebx]
  414293:	sti    
  414294:	xchg   ebp,eax
  414295:	mov    ah,0x21
  414297:	inc    esi
  414298:	pusha  
  414299:	jl     0x41421e
  41429b:	sbb    bl,ah
  41429d:	aaa    
  41429e:	fmul   st,st(7)
  4142a0:	xchg   edx,eax
  4142a1:	fs sbb eax,0xf9779b9e
  4142a7:	rcl    DWORD PTR ds:0x687d640b,cl
  4142ad:	xchg   ebx,esp
  4142af:	scas   al,BYTE PTR es:[edi]
  4142b0:	(bad)  
  4142b1:	stc    
  4142b2:	call   0x28534634
  4142b7:	daa    
  4142b8:	enter  0xe45d,0xbc
  4142bc:	and    BYTE PTR [ecx],0x2d
  4142bf:	je     0x41433d
  4142c1:	xchg   ebp,eax
  4142c2:	jno    0x41432d
  4142c4:	retf   
  4142c5:	les    esi,FWORD PTR [ecx-0x36]
  4142c8:	jg     0x414273
  4142ca:	sbb    ch,cl
  4142cc:	xchg   esi,eax
  4142cd:	sbb    ecx,DWORD PTR [edx]
  4142cf:	into   
  4142d0:	add    BYTE PTR [eax+0x37545330],0x77
  4142d7:	push   ecx
  4142d8:	inc    eax
  4142d9:	scas   al,BYTE PTR es:[edi]
  4142da:	popa   
  4142db:	mov    cl,0x25
  4142dd:	lea    eax,[eax+0x5d]
  4142e0:	mov    al,cl
  4142e2:	mov    esp,0xb63ac867
  4142e7:	mov    eax,0x81686d83
  4142ec:	inc    eax
  4142ed:	ss push 0x5f931328
  4142f3:	shl    BYTE PTR es:[edx],1
  4142f6:	pop    esp
  4142f7:	rcl    DWORD PTR [ecx],cl
  4142f9:	and    DWORD PTR [eax-0x69c09661],esp
  4142ff:	int3   
  414300:	sbb    eax,0x95dd8792
  414305:	cmp    BYTE PTR ds:0x1a95f346,dh
  41430b:	push   ecx
  41430c:	fimul  DWORD PTR [edi-0x6f]
  41430f:	rcl    DWORD PTR [ecx+0x14],1
  414312:	jge    0x4142df
  414314:	mov    cl,0x6a
  414316:	in     al,0x2e
  414318:	call   FWORD PTR ds:0x1a6e9053
  41431e:	popa   
  41431f:	repz push ds
  414321:	adc    eax,0x36f44b67
  414326:	sub    esp,DWORD PTR [ebx]
  414328:	mov    ds:0xde5e6341,eax
  41432d:	sbb    DWORD PTR [edx+0x11581937],edi
  414333:	xchg   edi,eax
  414334:	jnp    0x414352
  414336:	mov    edi,0x62466d53
  41433b:	fist   WORD PTR [edi]
  41433d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41433e:	xlat   BYTE PTR ds:[ebx]
  41433f:	mov    dl,0x87
  414341:	add    DWORD PTR [edi+0x462b5],eax
  414347:	sbb    bh,BYTE PTR [eax-0x9e511f5]
  41434d:	retf   0xc6e8
  414350:	pushf  
  414351:	xchg   edx,eax
  414352:	inc    esi
  414353:	stos   BYTE PTR es:[edi],al
  414354:	clc    
  414355:	mov    edi,0x8df3725b
  41435a:	xor    eax,0xd1e277a0
  41435f:	sub    al,0x2e
  414361:	mov    dh,0xdb
  414363:	test   BYTE PTR [ebx-0x13893c5c],bh
  414369:	sub    BYTE PTR [esi],ah
  41436b:	and    BYTE PTR [eax],bh
  41436d:	mov    cl,0xf8
  41436f:	test   al,0xa
  414371:	fs stos BYTE PTR es:[edi],al
  414373:	add    al,0xe0
  414375:	lods   eax,DWORD PTR ds:[esi]
  414376:	mov    dl,0xa5
  414378:	not    DWORD PTR [eax+0x2975757a]
  41437e:	ins    BYTE PTR es:[edi],dx
  41437f:	int3   
  414380:	push   ecx
  414381:	xchg   ebp,eax
  414382:	push   ecx
  414383:	pop    edx
  414384:	sub    al,0xc6
  414386:	enter  0x7f39,0xa
  41438a:	int    0xc6
  41438c:	adc    cl,bh
  41438e:	mov    al,ds:0xc808df97
  414393:	adc    al,0xd
  414395:	jo     0x414331
  414397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414398:	in     al,dx
  414399:	mov    esi,0x852d8ef7
  41439e:	data16 mov cl,0x75
  4143a1:	pop    es
  4143a2:	push   ds
  4143a3:	enter  0x8512,0xe5
  4143a7:	cmp    edx,DWORD PTR [esi-0x16287985]
  4143ad:	push   ecx
  4143ae:	cmp    al,0x1a
  4143b0:	cmp    BYTE PTR [ebx-0x5c],bl
  4143b3:	data16 std 
  4143b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143b6:	sub    BYTE PTR [ecx],ch
  4143b8:	fcom   QWORD PTR [ecx]
  4143ba:	imul   eax,DWORD PTR [ecx-0x3e5fd8b1],0x28
  4143c1:	and    BYTE PTR [ebx+0x4670e0e8],cl
  4143c7:	lock xchg DWORD PTR [ecx+0x46],esi
  4143cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143cc:	mov    dh,0xc7
  4143ce:	mov    esi,0x3ec629fc
  4143d3:	ficom  WORD PTR [edi-0x36cabb35]
  4143d9:	dec    esi
  4143da:	and    bh,BYTE PTR [esi]
  4143dc:	adc    eax,0x46987191
  4143e1:	dec    eax
  4143e2:	je     0x414460
  4143e4:	add    ah,BYTE PTR [eax+0x497f6029]
  4143ea:	xchg   ecx,eax
  4143eb:	sbb    BYTE PTR [ecx+0x13],dl
  4143ee:	out    0x55,eax
  4143f0:	fiadd  WORD PTR [esi+0x6b]
  4143f3:	sub    ecx,ecx
  4143f5:	xor    ebx,DWORD PTR [ebx+0x650dd133]
  4143fb:	int3   
  4143fc:	sti    
  4143fd:	dec    ebp
  4143fe:	jge    0x4143d2
  414400:	dec    edi
  414401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414402:	repnz mov cl,0xee
  414405:	mov    edx,0x170c573c
  41440a:	cmp    al,0x6e
  41440c:	adc    al,0xab
  41440e:	lahf   
  41440f:	adc    BYTE PTR [edx],ch
  414411:	mov    ah,0xe6
  414413:	xor    DWORD PTR [eax],edi
  414415:	inc    ebx
  414416:	imul   ecx,DWORD PTR [ebx+ebp*2+0x304f0f69],0x5
  41441e:	adc    eax,0x5af556a6
  414423:	ja     0x4143cd
  414425:	sti    
  414426:	sub    cl,BYTE PTR [edx]
  414428:	adc    DWORD PTR [ebx],ebx
  41442a:	out    dx,al
  41442b:	mov    esi,DWORD PTR [esi]
  41442d:	dec    edx
  41442e:	in     eax,0xf
  414430:	ins    BYTE PTR es:[edi],dx
  414431:	arpl   WORD PTR [ecx-0x40312feb],ax
  414437:	add    ecx,esp
  414439:	imul   esp,DWORD PTR [edi+edx*2],0x32
  41443d:	push   esp
  41443e:	xor    BYTE PTR [esi],dh
  414440:	ret    0x3031
  414443:	lea    eax,[ecx-0x58f7a7f]
  414449:	cmp    DWORD PTR [ebx+ebx*4+0x4fbfab91],edi
  414450:	pop    ebx
  414451:	dec    edi
  414452:	in     al,dx
  414453:	in     al,0xe1
  414455:	ret    0xacc1
  414458:	xchg   ebx,eax
  414459:	sub    dl,dh
  41445b:	lds    ebp,FWORD PTR [edi]
  41445d:	push   ds
  41445e:	(bad)  
  414460:	mov    ebx,DWORD PTR [ebx+0x7a]
  414463:	test   eax,0x19a7e35
  414468:	rcl    si,cl
  41446b:	and    bh,bh
  41446d:	ss js  0x414495
  414470:	out    0x2b,eax
  414472:	pop    edx
  414473:	mov    dl,BYTE PTR [ebx-0x28e00698]
  414479:	stos   DWORD PTR es:[edi],eax
  41447a:	outs   dx,DWORD PTR ds:[esi]
  41447b:	loopne 0x4144e6
  41447d:	mov    eax,0x67c939ac
  414482:	mov    ch,0xb9
  414484:	mov    al,0x2d
  414486:	fst    st(1)
  414488:	mov    edi,0xf9c33546
  41448d:	retf   0x3c23
  414490:	cld    
  414491:	in     al,dx
  414492:	jg     0x4144c6
  414494:	dec    esi
  414495:	mov    cl,0x92
  414497:	mov    al,ds:0x3805d6ec
  41449c:	lock sub DWORD PTR [eax-0x41],esp
  4144a0:	dec    edi
  4144a1:	or     DWORD PTR [esi+0xde38479],0x8a936165
  4144ab:	push   edi
  4144ac:	xchg   edx,eax
  4144ad:	add    dh,BYTE PTR [edi-0x30f5ed6e]
  4144b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144b4:	push   esp
  4144b5:	mov    edi,0xb0d8ea12
  4144ba:	pushf  
  4144bb:	jmp    0xbf86:0xcb74e4db
  4144c2:	mov    bl,0xaf
  4144c4:	adc    al,ah
  4144c6:	pushf  
  4144c7:	mov    ds:0xcf5c70cd,al
  4144cc:	sub    eax,0x957be081
  4144d1:	add    al,0xdb
  4144d3:	mov    al,0xeb
  4144d5:	(bad)  
  4144d6:	ds push edx
  4144d8:	int3   
  4144d9:	mov    dh,0x31
  4144db:	mov    eax,0x57a918a2
  4144e0:	jns    0x4144d6
  4144e2:	jge    0x4144eb
  4144e4:	mov    DWORD PTR [ebp+0x196fe2ea],edi
  4144ea:	enter  0x2ece,0xd0
  4144ee:	cmp    dh,al
  4144f0:	int    0x32
  4144f2:	or     ah,BYTE PTR [edi-0x4a1f802d]
  4144f8:	jmp    0x41450a
  4144fa:	cmp    al,0x7
  4144fc:	jbe    0x414497
  4144fe:	daa    
  4144ff:	imul   esp,eax,0xf55eade1
  414505:	mov    dl,0x2e
  414507:	sar    BYTE PTR [esp+edi*1-0x27],cl
  41450b:	xlat   BYTE PTR ds:[ebx]
  41450c:	fld    DWORD PTR [eax]
  41450e:	cli    
  41450f:	fcmovb st,st(2)
  414511:	cli    
  414512:	loop   0x4144c9
  414514:	mov    ecx,0x8ba4f579
  414519:	jecxz  0x4144ea
  41451b:	dec    ecx
  41451c:	dec    edi
  41451d:	inc    ecx
  41451e:	sub    al,0x16
  414520:	add    eax,DWORD PTR [eax+0xb]
  414523:	and    al,0x90
  414525:	out    0x7d,eax
  414527:	sbb    DWORD PTR [esi+ebp*8-0x4b292634],eax
  41452e:	in     al,dx
  41452f:	dec    ebp
  414530:	inc    ebx
  414531:	pushf  
  414532:	and    dl,BYTE PTR [edi]
  414534:	jmp    0x4144e4
  414536:	push   edi
  414537:	xchg   ecx,eax
  414538:	mov    edi,0xc138e51b
  41453d:	add    ecx,DWORD PTR [eax]
  41453f:	rcr    DWORD PTR [edi+0x47e6ab6e],1
  414545:	aaa    
  414546:	lods   eax,DWORD PTR ds:[esi]
  414547:	xor    bh,BYTE PTR [esi+0x2f]
  41454a:	(bad)  
  41454b:	cmp    BYTE PTR [ecx],cl
  41454d:	imul   ebx,DWORD PTR [edi+0x1b],0x41d9a2e4
  414554:	cmp    eax,0x1981e785
  414559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41455a:	dec    ebp
  41455b:	inc    ecx
  41455c:	call   0x8f85b69d
  414561:	imul   ebx,DWORD PTR [eax],0x66
  414564:	dec    ebx
  414565:	and    al,0x9a
  414567:	cli    
  414568:	mov    DWORD PTR [eax+0x14923ee1],esi
  41456e:	ja     0x41454b
  414570:	out    dx,al
  414571:	push   ss
  414572:	inc    esi
  414573:	rol    DWORD PTR [ebp+0x3],1
  414576:	mov    edx,0x3896f8dc
  41457b:	mov    ds:0xa9491896,al
  414580:	push   ebx
  414581:	xchg   edi,eax
  414582:	jbe    0x41453b
  414584:	outs   dx,BYTE PTR ds:[esi]
  414585:	js     0x414514
  414587:	dec    sp
  414589:	loop   0x414572
  41458b:	pop    ebx
  41458c:	dec    edx
  41458d:	inc    ebx
  41458e:	mov    bl,0x7c
  414590:	aaa    
  414591:	add    eax,0x8f288853
  414596:	jle    0x41458f
  414598:	outs   dx,DWORD PTR ds:[esi]
  41459a:	int3   
  41459b:	dec    ecx
  41459c:	mov    ss,esi
  41459e:	jno    0x414521
  4145a0:	mov    es,ebx
  4145a2:	or     eax,DWORD PTR [ecx-0xb4d57e1]
  4145a8:	sub    eax,0x4eb1be22
  4145ad:	shl    BYTE PTR [ebx],cl
  4145af:	lods   eax,DWORD PTR ds:[esi]
  4145b0:	sbb    BYTE PTR [eax-0x54],0x68
  4145b4:	mov    ebx,0x63e7ba94
  4145b9:	les    ebp,FWORD PTR [edi]
  4145bb:	xor    al,0x35
  4145bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145be:	mov    bl,0xb3
  4145c0:	add    bh,BYTE PTR [ebx+eiz*4+0x7041a599]
  4145c7:	and    ebp,DWORD PTR ds:0x15c74ce0
  4145cd:	out    dx,eax
  4145ce:	aas    
  4145cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145d0:	sar    DWORD PTR [ebx],0xfd
  4145d3:	aad    0x9e
  4145d5:	mov    DWORD PTR [eax+0x53],esp
  4145d8:	mov    ds:0x857e6a0,al
  4145dd:	mov    edx,0xddfd41c6
  4145e2:	xor    dl,BYTE PTR [esi-0x1177804d]
  4145e8:	dec    ecx
  4145e9:	scas   eax,DWORD PTR es:[edi]
  4145ea:	ds adc BYTE PTR gs:[ebx],dl
  4145ee:	outs   dx,DWORD PTR ds:[esi]
  4145ef:	out    0x18,eax
  4145f1:	rol    BYTE PTR [edx],1
  4145f3:	and    ah,BYTE PTR [ebx+ecx*1+0x13]
  4145f7:	pop    esi
  4145f8:	inc    eax
  4145f9:	add    al,0x80
  4145fb:	pusha  
  4145fc:	std    
  4145fd:	cmp    DWORD PTR [ebp+0x3],edi
  414600:	in     eax,0x53
  414602:	adc    BYTE PTR [edi-0x325337e6],ah
  414608:	mov    esi,0x5f6486fe
  41460d:	dec    ecx
  41460e:	inc    esi
  41460f:	fld    DWORD PTR [edi]
  414611:	sub    BYTE PTR [esi-0x5f],dl
  414614:	add    ebp,DWORD PTR [ebx-0xaba6aa9]
  41461a:	or     DWORD PTR [eax],edx
  41461c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41461d:	out    dx,eax
  41461e:	or     BYTE PTR [eax],0xaa
  414621:	and    DWORD PTR [esi+0x40f8b84],0xd991afcb
  41462b:	mov    ebp,0xe249f407
  414630:	inc    edi
  414631:	sbb    DWORD PTR [esi+0x3e94127c],edi
  414637:	pop    ss
  414638:	lock inc eax
  41463a:	inc    ebp
  41463b:	orps   xmm5,XMMWORD PTR [esi]
  41463e:	cld    
  41463f:	fwait
  414640:	xchg   edi,eax
  414641:	push   0x3e1f7283
  414646:	jg     0x4146a6
  414648:	jo     0x41468e
  41464a:	mov    ebx,0xa3c5b026
  41464f:	outs   dx,DWORD PTR ds:[esi]
  414650:	les    edx,FWORD PTR [eax+0x73]
  414653:	xchg   esp,eax
  414654:	fldcw  WORD PTR [ebp-0x64]
  414657:	ja     0x414641
  414659:	stos   DWORD PTR es:[edi],eax
  41465a:	push   ebp
  41465b:	aaa    
  41465c:	jmp    0x10afeb4b
  414661:	ss pop es
  414663:	pusha  
  414664:	pop    ecx
  414665:	pushf  
  414666:	shr    BYTE PTR [ecx+0x9],0x12
  41466a:	dec    ebx
  41466b:	dec    ebx
  41466c:	call   DWORD PTR [edi+ebp*2]
  41466f:	inc    eax
  414670:	cld    
  414671:	call   0x648d7008
  414676:	stc    
  414677:	fst    QWORD PTR [esi+esi*8-0x53a63627]
  41467e:	pop    esi
  41467f:	xchg   BYTE PTR ds:0xaff2cb14,dl
  414685:	pop    es
  414686:	sbb    bl,BYTE PTR [ecx-0x49]
  414689:	leave  
  41468a:	pushf  
  41468b:	imul   esi,DWORD PTR ss:[ebx],0xa2f17dcf
  414692:	lds    edi,FWORD PTR [bx-0x66]
  414696:	inc    esp
  414697:	sbb    ah,BYTE PTR [esi-0x36b693c0]
  41469d:	pushf  
  41469e:	xor    eax,0x981dc93b
  4146a3:	dec    edx
  4146a4:	pop    ss
  4146a5:	cmp    eax,0x3c1ed3ff
  4146aa:	jno    0x41469f
  4146ac:	repz aaa 
  4146ae:	cmp    al,0x1e
  4146b0:	add    bh,0xb
  4146b3:	aaa    
  4146b4:	fsubp  st(3),st
  4146b6:	cmp    DWORD PTR [eax],ebp
  4146b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146b9:	outs   dx,DWORD PTR ds:[esi]
  4146ba:	bound  edi,QWORD PTR [esi]
  4146bc:	pusha  
  4146bd:	sbb    al,0x42
  4146bf:	adc    al,0x1d
  4146c1:	cwde   
  4146c2:	mov    cl,0xd
  4146c4:	ror    edi,1
  4146c6:	mov    ch,0x25
  4146c8:	aad    0x5
  4146ca:	dec    ebx
  4146cb:	es pop ds
  4146cd:	and    al,0xe1
  4146cf:	push   ss
  4146d0:	or     eax,0x3ac84517
  4146d5:	test   DWORD PTR [esi+0x15],eax
  4146d8:	and    eax,edx
  4146da:	inc    ebp
  4146db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146dc:	add    DWORD PTR [ebp+0xe],ecx
  4146df:	enter  0xe534,0x76
  4146e3:	dec    ebx
  4146e4:	retf   0x9ae4
  4146e7:	pop    ecx
  4146e8:	inc    esi
  4146e9:	loop   0x41469a
  4146eb:	imul   ebp,DWORD PTR [esi],0x97ed1d67
  4146f1:	aas    
  4146f2:	test   DWORD PTR [esi],edi
  4146f4:	cmp    edi,ebx
  4146f6:	dec    esp
  4146f7:	inc    ebp
  4146f8:	out    dx,eax
  4146f9:	shl    DWORD PTR [edi+ecx*1-0x2f3e07f1],1
  414700:	leave  
  414701:	jg     0x414771
  414703:	stos   DWORD PTR es:[edi],eax
  414704:	inc    eax
  414705:	nop
  414706:	enter  0x7415,0xcf
  41470a:	mov    bh,0x83
  41470c:	jmp    0x414693
  41470e:	scas   al,BYTE PTR es:[edi]
  41470f:	xor    BYTE PTR [edx+0x3aeff602],cl
  414715:	shr    esp,cl
  414717:	cdq    
  414718:	or     edx,esp
  41471a:	sbb    ebx,DWORD PTR [ecx]
  41471c:	loop   0x4146af
  41471e:	ins    BYTE PTR es:[edi],dx
  41471f:	adc    eax,0x9df70639
  414724:	fbld   TBYTE PTR [edi+ebx*1-0x5b3bba38]
  41472b:	xlat   BYTE PTR ds:[ebx]
  41472c:	(bad)  
  41472d:	call   0xf4ca2574
  414732:	fistp  QWORD PTR [eax-0x6450d40d]
  414738:	inc    edi
  414739:	popa   
  41473a:	pop    edi
  41473b:	pop    edx
  41473c:	fisubr WORD PTR [esi]
  41473e:	fld    TBYTE PTR [edx]
  414740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414741:	pop    es
  414742:	in     eax,0x43
  414744:	dec    ecx
  414745:	stos   DWORD PTR es:[edi],eax
  414746:	jae    0x41474b
  414748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414749:	mov    WORD PTR [ebp+0x41a6e14],es
  41474f:	mov    esi,0xa43716c4
  414754:	sar    DWORD PTR [ecx+0x44],cl
  414757:	ret    
  414758:	cmp    dl,BYTE PTR [edx-0x5694ca48]
  41475e:	dec    edi
  41475f:	jne    0x414734
  414761:	aas    
  414762:	adc    eax,DWORD PTR fs:[ebp+0x1e374941]
  414769:	jecxz  0x4147e9
  41476b:	je     0x41473d
  41476d:	or     al,0x5e
  41476f:	shr    BYTE PTR [ebp-0x15],cl
  414772:	lods   eax,DWORD PTR ds:[esi]
  414773:	into   
  414774:	xor    al,0x5b
  414776:	sbb    al,0xc9
  414778:	add    DWORD PTR ds:0xbd33281f,esp
  41477e:	push   ebp
  41477f:	sub    eax,0x4224ee0a
  414784:	mov    dh,BYTE PTR [ecx-0x93a4719]
  41478a:	jno    0x4147a6
  41478c:	inc    edx
  41478d:	add    BYTE PTR [esi-0x4af4974a],cl
  414793:	sub    edx,DWORD PTR [edi]
  414795:	xor    al,0x60
  414797:	shl    bh,1
  414799:	popa   
  41479a:	sub    esi,DWORD PTR [ecx+0x1a]
  41479d:	icebp  
  41479e:	sbb    cl,BYTE PTR [edi-0x12]
  4147a1:	ror    eax,1
  4147a3:	add    edx,DWORD PTR [eax+0x2a]
  4147a6:	call   0x50d1276
  4147ab:	push   edx
  4147ac:	fmul   QWORD PTR [eax-0x7f]
  4147af:	add    eax,0x65641f96
  4147b4:	retf   
  4147b5:	popa   
  4147b6:	mov    edi,0xc9777daa
  4147bb:	ss retf 0x1d2b
  4147bf:	icebp  
  4147c0:	dec    ebp
  4147c1:	pop    esi
  4147c2:	jns    0x4147e6
  4147c4:	arpl   WORD PTR [edi],sp
  4147c6:	ins    BYTE PTR es:[edi],dx
  4147c7:	hlt    
  4147c8:	xor    edi,DWORD PTR [edi]
  4147ca:	mov    ch,0x2c
  4147cc:	in     eax,0xd8
  4147ce:	push   edi
  4147cf:	ret    0xa660
  4147d2:	mov    al,0x41
  4147d4:	push   ebx
  4147d5:	aaa    
  4147d6:	jnp    0x414856
  4147d8:	sar    DWORD PTR [eax+0x2],1
  4147db:	adc    BYTE PTR cs:[edx+0x6df7a1c],0xc9
  4147e3:	loop   0x4147b1
  4147e5:	jno    0x414800
  4147e7:	out    0x31,eax
  4147e9:	inc    esi
  4147ea:	jne    0x4147f3
  4147ec:	call   0x6f32a556
  4147f1:	sub    DWORD PTR [eax-0x7e],esp
  4147f4:	mov    esp,0xf3ba88d2
  4147f9:	cld    
  4147fa:	sahf   
  4147fb:	add    BYTE PTR [edx-0x3411fa61],ah
  414801:	mov    ch,0xe1
  414803:	xor    al,0x8f
  414805:	sub    al,0x18
  414807:	jmp    0x48c0bcc1
  41480c:	repz jns 0x41481e
  41480f:	xchg   BYTE PTR [eax-0x4eca3766],dh
  414815:	xchg   BYTE PTR [esp+esi*8],dh
  414818:	pop    edi
  414819:	lds    esp,FWORD PTR [eax-0x78973511]
  41481f:	xchg   esi,eax
  414820:	adc    dl,dh
  414822:	mov    ds:0xc323af1,al
  414827:	scas   al,BYTE PTR es:[edi]
  414828:	pop    esi
  414829:	cmp    al,0x51
  41482b:	or     DWORD PTR [eax+0x62],ebx
  41482e:	mov    bl,0x61
  414830:	push   ds
  414831:	mov    cl,0x1
  414833:	xor    DWORD PTR [edi],ecx
  414835:	cwde   
  414836:	cmp    ecx,DWORD PTR [eax+0x6d6374dc]
  41483c:	add    BYTE PTR [ecx],ah
  41483e:	or     ah,BYTE PTR [ebx+0x762f5c21]
  414844:	jnp    0x4148b3
  414846:	clc    
  414847:	repnz dec edi
  414849:	(bad)  
  41484a:	push   ecx
  41484b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41484c:	popf   
  41484d:	adc    BYTE PTR [esi-0x7b],dl
  414850:	dec    edx
  414851:	dec    edi
  414852:	(bad)  
  414853:	loopne 0x4148ad
  414855:	add    ecx,DWORD PTR [esi]
  414857:	aam    0xb4
  414859:	xor    ah,bl
  41485b:	jnp    0x414883
  41485d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41485e:	(bad)  [eax+0x64d0a234]
  414864:	sub    DWORD PTR [ebp+eax*8-0x1b],edx
  414868:	push   ecx
  414869:	ss dec edi
  41486b:	jae    0x4148e4
  41486d:	push   bp
  414870:	nop
  414871:	xchg   esp,eax
  414872:	cmp    DWORD PTR [edx-0x18c09423],esp
  414878:	mov    edx,0xf4c9d00a
  41487d:	rcr    BYTE PTR [esi+0x29],0x16
  414881:	or     dh,dh
  414883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414884:	jo     0x414846
  414886:	mov    eax,0xa1bdb7ab
  41488b:	sub    edx,DWORD PTR [ebp-0x46af2830]
  414891:	ror    ebx,cl
  414893:	loope  0x414819
  414895:	or     BYTE PTR [ebp+0x4d],cl
  414898:	dec    esp
  414899:	stc    
  41489a:	outs   dx,DWORD PTR ds:[esi]
  41489b:	lds    edx,FWORD PTR [ecx+0x41cc9f01]
  4148a1:	repz pop ebx
  4148a3:	cmp    al,0x8f
  4148a5:	sub    eax,0xc79a185e
  4148aa:	arpl   WORD PTR [ebp-0x12],dx
  4148ad:	jbe    0x414889
  4148af:	add    BYTE PTR fs:[eax],dl
  4148b2:	popa   
  4148b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b4:	lods   eax,DWORD PTR ds:[esi]
  4148b5:	adc    DWORD PTR [edx-0x71],edi
  4148b8:	test   edi,eax
  4148ba:	jge    0x414913
  4148bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148bd:	cmp    eax,0x109262ca
  4148c2:	inc    DWORD PTR [edx]
  4148c4:	sahf   
  4148c5:	ins    DWORD PTR es:[edi],dx
  4148c6:	mov    dh,0x50
  4148c8:	or     DWORD PTR [eax],esp
  4148ca:	aas    
  4148cb:	mov    ebp,ebp
  4148cd:	cmp    esp,0xffffffa1
  4148d0:	fstp   DWORD PTR [edx+0x22]
  4148d3:	xchg   ebp,eax
  4148d4:	mov    eax,ds:0x62076459
  4148d9:	dec    esi
  4148da:	lahf   
  4148db:	dec    esi
  4148dc:	dec    ebp
  4148dd:	jne    0x41493c
  4148df:	inc    ebx
  4148e0:	cmp    BYTE PTR [edi+0x76],ch
  4148e3:	push   ds
  4148e4:	and    al,0xab
  4148e6:	jmp    DWORD PTR [edi]
  4148e8:	clc    
  4148e9:	inc    edx
  4148ea:	rcl    DWORD PTR [esi+0x30],1
  4148ed:	scas   al,BYTE PTR es:[edi]
  4148ee:	cmp    dl,BYTE PTR [esi-0x40]
  4148f1:	rcl    BYTE PTR [ebx-0x225642ce],1
  4148f7:	call   0x8820541a
  4148fc:	dec    esp
  4148fd:	xchg   esi,eax
  4148fe:	mov    BYTE PTR [eax+0x1d35e44a],ch
  414904:	or     al,0xbc
  414906:	push   0xffffffb8
  414908:	fdivr  DWORD PTR [ebp-0x4e73c948]
  41490e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41490f:	iret   
  414910:	fldenv [eax-0x11]
  414913:	ss sbb al,0x43
  414916:	sbb    eax,0x8caf3b28
  41491b:	mov    DWORD PTR [eax-0x3843627],ebx
  414921:	sbb    bh,BYTE PTR [ebx+eiz*2]
  414924:	sub    eax,0x915ab902
  414929:	js     0x414995
  41492b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41492c:	cwde   
  41492d:	dec    edx
  41492e:	add    al,0x88
  414930:	int3   
  414931:	xor    DWORD PTR [esi+eax*1-0x6d67c28f],esi
  414938:	aad    0x59
  41493a:	lock mov dh,0xdd
  41493d:	or     DWORD PTR [edi-0x4f680805],esi
  414943:	and    BYTE PTR [ecx],bh
  414945:	mov    esi,0xd30edd50
  41494a:	gs or  al,0xb6
  41494d:	out    0xf0,eax
  41494f:	pop    esp
  414950:	jne    0x414963
  414952:	pop    edx
  414953:	ret    
  414954:	mov    cl,0xd2
  414956:	mov    cl,0x52
  414958:	ficom  WORD PTR [ecx+0x41]
  41495b:	dec    ebx
  41495c:	inc    esi
  41495d:	push   es
  41495e:	inc    esp
  41495f:	leave  
  414960:	scas   eax,DWORD PTR es:[edi]
  414961:	jmp    0x628b:0x15707237
  414968:	pop    ss
  414969:	aad    0xf8
  41496b:	xchg   ebp,eax
  41496c:	sti    
  41496d:	push   esp
  41496e:	xor    al,0x50
  414970:	pusha  
  414971:	and    DWORD PTR [esi-0x1c39a3a2],esi
  414977:	retf   0xfe60
  41497a:	pop    esi
  41497b:	and    bh,0xeb
  41497e:	aad    0x2c
  414980:	call   0x1fc7:0x2c593af1
  414987:	arpl   WORD PTR [ebx-0x5a],bx
  41498a:	jo     0x414979
  41498c:	(bad)
  41498f:	xchg   edi,eax
  414990:	sbb    eax,0x12d04cd2
  414995:	cmp    DWORD PTR es:[ebp-0x48],edi
  414999:	sbb    DWORD PTR [esp+ecx*2],edx
  41499c:	sbb    al,0x3b
  41499e:	aam    0x20
  4149a0:	sbb    eax,0x6d3fbab1
  4149a5:	dec    ebx
  4149a6:	in     eax,0xf6
  4149a8:	lea    ecx,[edi-0x29]
  4149ab:	test   eax,0x76026bc7
  4149b0:	inc    ebx
  4149b1:	add    sp,0xfc11
  4149b6:	sub    DWORD PTR [ecx+0x74b92f45],eax
  4149bc:	addr16 pop eax
  4149be:	pop    esp
  4149bf:	dec    esi
  4149c0:	push   0x3e12dbcf
  4149c5:	stos   DWORD PTR es:[edi],eax
  4149c6:	lods   al,BYTE PTR ds:[esi]
  4149c7:	addr16 jge 0x4149ce
  4149ca:	test   dh,al
  4149cc:	cmp    DWORD PTR [esi],ecx
  4149ce:	mov    ch,0x16
  4149d0:	test   BYTE PTR [ebp-0x5f],bl
  4149d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149d4:	pop    esp
  4149d5:	cmp    al,0xab
  4149d7:	div    BYTE PTR fs:[ebp+0x75]
  4149db:	add    eax,0x62c4ec54
  4149e0:	inc    ecx
  4149e1:	aam    0x1f
  4149e3:	aam    0x4c
  4149e5:	and    dl,BYTE PTR [ebx+ebx*4-0x29]
  4149e9:	mov    ch,BYTE PTR [esi-0x14]
  4149ec:	out    0x3d,eax
  4149ee:	mov    eax,0x1e90612e
  4149f3:	dec    edi
  4149f4:	les    esp,FWORD PTR [edx+0x42]
  4149f7:	push   ecx
  4149f8:	sti    
  4149f9:	mov    dh,0x90
  4149fb:	pop    ebx
  4149fc:	pop    ds
  4149fd:	icebp  
  4149fe:	add    ah,BYTE PTR [ebx+0x52d17b9]
  414a04:	addr16 push ds
  414a06:	mov    eax,ds:0x3b2b08bd
  414a0b:	mov    esp,0xd985347
  414a10:	aam    0xd3
  414a12:	mov    ?,WORD PTR ds:0xb51d51b2
  414a18:	jp     0x414a78
  414a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a1b:	mov    dh,0xfc
  414a1d:	js     0x414a83
  414a1f:	loopne 0x4149e6
  414a21:	jnp    0x414a61
  414a23:	aam    0xf7
  414a25:	mov    edx,0x72aea891
  414a2a:	adc    al,0xfd
  414a2c:	ins    DWORD PTR es:[edi],dx
  414a2d:	push   ss
  414a2e:	ret    
  414a2f:	nop
  414a30:	cmp    bl,BYTE PTR [esi+eax*8]
  414a33:	pusha  
  414a34:	cmp    eax,0xe35d8d67
  414a39:	popf   
  414a3a:	jle    0x414a35
  414a3c:	pop    edx
  414a3d:	fisub  WORD PTR [edx+0x37]
  414a40:	add    dl,BYTE PTR [ecx-0x64]
  414a43:	cmp    DWORD PTR [eax+0x13a58d1f],edi
  414a49:	or     eax,0x7ba05486
  414a4e:	add    dl,bl
  414a50:	ror    DWORD PTR [ecx+0x389c84d7],0x9f
  414a57:	pop    esi
  414a58:	popf   
  414a59:	cli    
  414a5a:	pop    edi
  414a5b:	loop   0x414ab0
  414a5d:	pop    edx
  414a5e:	xor    DWORD PTR cs:[ebx+0xa],esi
  414a62:	mov    esi,0xc166d07c
  414a67:	mov    ah,0x58
  414a69:	loopne 0x414acf
  414a6b:	jnp    0x414acf
  414a6d:	xchg   edx,eax
  414a6e:	xor    DWORD PTR [ebx+0x7313382a],0x14
  414a75:	and    dh,BYTE PTR [ebp+0x68]
  414a78:	enter  0x839d,0xb4
  414a7c:	je     0x414abf
  414a7e:	int    0x8d
  414a80:	add    al,0xb7
  414a82:	sar    DWORD PTR [edi-0x1256515f],1
  414a88:	mov    ah,0xab
  414a8a:	adc    edi,DWORD PTR [edi-0x5495a54d]
  414a90:	nop
  414a91:	mov    DWORD PTR ds:0xd26042bb,ebx
  414a97:	(bad)  
  414a98:	mov    edi,0x5f80cfa8
  414a9d:	pop    eax
  414a9e:	jnp    0x414acc
  414aa0:	scas   al,BYTE PTR es:[edi]
  414aa1:	retf   
  414aa2:	nop
  414aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aa4:	retf   
  414aa5:	in     al,0x9b
  414aa7:	lods   eax,DWORD PTR ds:[esi]
  414aa8:	bound  edi,QWORD PTR [eax-0x64456158]
  414aae:	out    0xab,al
  414ab0:	jmp    0x64da:0x205feb73
  414ab7:	leave  
  414ab8:	les    edx,FWORD PTR [eax-0x77]
  414abb:	maskmovq mm5,(bad)
  414abc:	imul   DWORD PTR [ebp+eax*4+0x6fcc30d9]
  414ac3:	and    al,0xff
  414ac5:	xchg   edi,eax
  414ac6:	dec    edi
  414ac7:	mov    al,0x54
  414ac9:	jno    0x414b0e
  414acb:	shl    ah,cl
  414acd:	out    0xec,al
  414acf:	leave  
  414ad0:	lods   al,BYTE PTR ds:[esi]
  414ad1:	sahf   
  414ad2:	or     esi,ebx
  414ad4:	dec    esp
  414ad5:	jmp    0x63cb:0x5566df8
  414adc:	shl    BYTE PTR ds:[edx],0xa7
  414ae0:	inc    esi
  414ae1:	adc    BYTE PTR [ecx+ebx*8+0x40],dl
  414ae5:	repz jne 0x414a6a
  414ae8:	lahf   
  414ae9:	(bad)  
  414aea:	jmp    0x538:0xfa00de39
  414af1:	je     0x414aba
  414af3:	fcmovnu st,st(0)
  414af5:	push   edi
  414af6:	shl    BYTE PTR [ebx+0xc],1
  414af9:	ss pop ecx
  414afb:	inc    eax
  414afc:	dec    ebx
  414afd:	pop    edi
  414afe:	lahf   
  414aff:	dec    esi
  414b00:	adc    dh,BYTE PTR [ebx]
  414b02:	in     eax,dx
  414b03:	not    ebp
  414b05:	inc    eax
  414b06:	xchg   esi,eax
  414b07:	xchg   edi,eax
  414b08:	cmc    
  414b09:	int3   
  414b0a:	lods   eax,DWORD PTR ds:[esi]
  414b0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b0c:	mov    bh,0xfb
  414b0e:	jne    0x414aa8
  414b10:	rcl    DWORD PTR ds:0xae9a75d8,0x9d
  414b17:	and    edi,ebx
  414b19:	dec    esi
  414b1a:	(bad)  
  414b1b:	jecxz  0x414b05
  414b1d:	fild   QWORD PTR [eax+0x490332dd]
  414b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b24:	sti    
  414b25:	xlat   BYTE PTR ds:[ebx]
  414b26:	dec    ebp
  414b27:	mov    ds:0xa405ad1c,al
  414b2c:	adc    eax,0x56bdc3c3
  414b31:	pop    edx
  414b32:	cmp    eax,0x21efaa21
  414b37:	das    
  414b38:	mov    bl,0xcb
  414b3a:	cmc    
  414b3b:	in     eax,dx
  414b3c:	je     0x414af2
  414b3e:	push   ss
  414b3f:	mov    ebp,0xa4828bda
  414b44:	mov    ds:0xfe88c62e,al
  414b49:	loope  0x414b80
  414b4b:	mov    ch,0xfc
  414b4d:	js     0x414b43
  414b4f:	fadd   st(6),st
  414b51:	call   0x1e50:0xd6ede8bf
  414b58:	adc    eax,0x1ffa42e4
  414b5d:	add    BYTE PTR [ecx+0x2aaf1aa3],ch
  414b63:	daa    
  414b64:	and    BYTE PTR [edi],bh
  414b66:	leave  
  414b67:	arpl   WORD PTR [edi],bp
  414b69:	imul   esi,esi
  414b6c:	loopne 0x414b91
  414b6e:	or     BYTE PTR ds:[edx-0x57],bl
  414b72:	clc    
  414b73:	(bad)  
  414b74:	pusha  
  414b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b76:	jp     0x414ba7
  414b78:	nop
  414b79:	xor    al,0xb3
  414b7b:	sub    BYTE PTR [ebp+edi*1+0x36],cl
  414b7f:	jo     0x414b17
  414b81:	or     DWORD PTR [edi-0x23],edx
  414b84:	leave  
  414b85:	xor    al,0xf8
  414b87:	or     BYTE PTR [edi-0x4c],bh
  414b8a:	fdiv   st(4),st
  414b8c:	xlat   BYTE PTR ds:[ebx]
  414b8d:	lahf   
  414b8e:	test   al,0xa4
  414b90:	mov    ds:0x399df33f,eax
  414b95:	das    
  414b96:	inc    ebx
  414b97:	cmp    ebx,DWORD PTR [edx+0x764b5fb]
  414b9d:	mov    DWORD PTR [bx-0x7f],edi
  414ba1:	or     DWORD PTR fs:[ebx+0xebd31a6],ecx
  414ba8:	jecxz  0x414c21
  414baa:	fmul   QWORD PTR [eax+0x7a]
  414bad:	aas    
  414bae:	je     0x414b9a
  414bb0:	xchg   ecx,eax
  414bb1:	sti    
  414bb2:	fnstsw WORD PTR [ebx+eax*4-0x231e5e49]
  414bb9:	out    0x90,al
  414bbb:	es and al,0x92
  414bbe:	jns    0x414be4
  414bc0:	and    eax,0xa2ad5410
  414bc5:	xchg   esp,eax
  414bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bc7:	call   0xf3b1:0x6a711119
  414bce:	xor    dh,BYTE PTR [ebx]
  414bd0:	ins    BYTE PTR es:[edi],dx
  414bd1:	ret    0x1b35
  414bd4:	int    0x61
  414bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bd7:	movzx  esp,WORD PTR [edi]
  414bda:	cwde   
  414bdb:	es fcmovbe st,st(7)
  414bde:	int    0x4e
  414be0:	sbb    DWORD PTR [edx-0x43],esp
  414be3:	iret   
  414be4:	mov    dh,0x24
  414be6:	rcl    BYTE PTR cs:[edx],1
  414be9:	and    bl,bl
  414beb:	add    ebx,ebp
  414bed:	(bad)  
  414bee:	hlt    
  414bef:	in     al,dx
  414bf0:	mov    bh,bh
  414bf2:	push   ebp
  414bf3:	mov    edx,0x5510291
  414bf8:	xchg   esi,eax
  414bf9:	push   0x8551a3a4
  414bfe:	test   al,0x6e
  414c00:	test   al,0x94
  414c02:	pop    eax
  414c03:	cmp    eax,0x9ca7c6c6
  414c08:	push   edi
  414c09:	aas    
  414c0a:	int    0x4b
  414c0c:	rcr    DWORD PTR [ebx+0x47],1
  414c0f:	retf   
  414c10:	xchg   edx,eax
  414c11:	jmp    0x439af8d8
  414c16:	xchg   esp,eax
  414c17:	(bad)  
  414c18:	jp     0x414c7f
  414c1a:	psubusw mm2,mm0
  414c1d:	dec    esi
  414c1e:	ficom  DWORD PTR [esi]
  414c20:	dec    esi
  414c21:	mov    al,0x45
  414c23:	int    0x71
  414c25:	mov    bl,0x9b
  414c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c28:	pop    ebp
  414c29:	sar    eax,1
  414c2b:	and    eax,0x47e845af
  414c30:	push   cs
  414c31:	adc    al,0x8
  414c33:	cld    
  414c34:	push   ds
  414c35:	ret    
  414c36:	mov    ah,0x87
  414c38:	mov    cl,0x34
  414c3a:	(bad)  
  414c3b:	popa   
  414c3c:	std    
  414c3d:	aas    
  414c3e:	into   
  414c3f:	call   0x2b57:0xa8d36198
  414c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c47:	in     al,0x86
  414c49:	or     esi,DWORD PTR [esi]
  414c4b:	ss cdq 
  414c4d:	push   ebx
  414c4e:	lea    ecx,[eax-0x3e489417]
  414c54:	xlat   BYTE PTR ds:[ebx]
  414c55:	cmp    DWORD PTR [ebp-0x11],eax
  414c58:	test   DWORD PTR [edx+0x58c65d0b],ecx
  414c5e:	mov    bh,0x8c
  414c60:	sbb    edi,DWORD PTR es:[bp-0x51]
  414c65:	scas   eax,DWORD PTR es:[edi]
  414c66:	(bad)  
  414c67:	push   edi
  414c68:	pop    ebx
  414c69:	aaa    
  414c6a:	imul   ebp,DWORD PTR [esi-0x6c],0xfb768348
  414c71:	mov    esi,DWORD PTR [ecx+0x74]
  414c74:	outs   dx,BYTE PTR ds:[esi]
  414c75:	out    0xf6,eax
  414c77:	das    
  414c78:	jp     0x414c74
  414c7a:	enter  0x8aba,0xf1
  414c7e:	adc    ecx,DWORD PTR [edi-0x79]
  414c81:	sub    ch,0xaf
  414c84:	in     al,0x8
  414c86:	jg     0x414d01
  414c88:	xor    dl,al
  414c8a:	out    dx,eax
  414c8b:	dec    ebx
  414c8c:	push   ebp
  414c8d:	mov    al,ds:0x19b6afde
  414c92:	push   edx
  414c93:	mov    ds:0xede2b09,eax
  414c98:	add    DWORD PTR [esi+0x1a70230a],esi
  414c9e:	sbb    BYTE PTR [ebx-0x18],0x41
  414ca2:	ins    BYTE PTR es:[edi],dx
  414ca3:	cmp    al,0x43
  414ca5:	cmp    cl,bl
  414ca7:	pop    esi
  414ca8:	push   esp
  414ca9:	pop    esp
  414caa:	jmp    FWORD PTR [edi+0x1efc7eb9]
  414cb0:	adc    ah,0xc0
  414cb3:	inc    edi
  414cb4:	pop    ss
  414cb5:	mov    ecx,0xedd98f76
  414cba:	rcr    esp,1
  414cbc:	pop    eax
  414cbd:	(bad)  
  414cbe:	ror    esi,cl
  414cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cc2:	push   cs
  414cc3:	inc    edi
  414cc4:	loope  0x414c5a
  414cc6:	mov    ah,0xd7
  414cc8:	nop
  414cc9:	sti    
  414cca:	mov    ebx,gs
  414ccc:	cld    
  414ccd:	imul   edi,DWORD PTR [esi-0x15662aef],0xffffffde
  414cd4:	and    eax,0xcdd25f76
  414cd9:	sbb    eax,0xb5fc63c5
  414cde:	dec    ebp
  414cdf:	pop    edi
  414ce0:	sub    edi,DWORD PTR [esi+ebx*2]
  414ce3:	mov    al,0x4d
  414ce5:	mov    cl,0xf0
  414ce7:	mul    ch
  414ce9:	aaa    
  414cea:	pop    esp
  414ceb:	scas   al,BYTE PTR es:[edi]
  414cec:	push   0x17080df5
  414cf1:	int3   
  414cf2:	or     eax,0x20dbaa3d
  414cf7:	je     0x414cf2
  414cf9:	mov    WORD PTR [ebx+ebx*8-0x156f3bec],cs
  414d00:	ins    DWORD PTR es:[edi],dx
  414d01:	sub    al,0xfc
  414d03:	fcom   DWORD PTR [edx-0x37ef9842]
  414d09:	pop    ss
  414d0a:	lods   eax,DWORD PTR ds:[esi]
  414d0b:	lds    ebp,FWORD PTR [ebx+esi*1-0x32260014]
  414d12:	adc    al,0x7
  414d14:	or     BYTE PTR [esi+edx*8+0x75],dh
  414d18:	jg     0x414cf2
  414d1a:	mov    al,BYTE PTR [esi+ebx*4+0x60b76dc7]
  414d21:	pop    ebp
  414d22:	es pusha 
  414d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d25:	loopne 0x414cde
  414d27:	stc    
  414d28:	and    ch,dh
  414d2a:	cmp    esp,DWORD PTR [edi+0x52]
  414d2d:	(bad)  
  414d2e:	stos   BYTE PTR es:[edi],al
  414d2f:	pop    ebp
  414d30:	adc    BYTE PTR [eax+0x1f],bl
  414d33:	push   ss
  414d34:	pushf  
  414d35:	adc    eax,0xdb6ae588
  414d3a:	fs test al,0xa6
  414d3d:	out    dx,eax
  414d3e:	aad    0x1c
  414d40:	cmp    al,0xb
  414d42:	mov    ebx,0x5d8b1018
  414d47:	or     edi,DWORD PTR [esi]
  414d49:	dec    ecx
  414d4a:	mov    bp,0x3e98
  414d4e:	or     BYTE PTR [ebx],ch
  414d50:	dec    edx
  414d51:	icebp  
  414d52:	ficomp DWORD PTR [esi+0x615426d3]
  414d58:	lea    edi,[edi-0x7a38ab85]
  414d5e:	sbb    cl,BYTE PTR [edx-0x3603e76a]
  414d64:	cwde   
  414d65:	sbb    eax,0x73c76423
  414d6a:	mov    eax,0x29fb5580
  414d6f:	loope  0x414d5e
  414d71:	mov    ds,WORD PTR [edx+edi*2]
  414d74:	and    DWORD PTR [edx],edx
  414d76:	jnp    0x414d01
  414d78:	sub    ecx,DWORD PTR [ecx-0x25dd6c65]
  414d7e:	fs fwait
  414d80:	pop    ss
  414d81:	pushf  
  414d82:	sar    DWORD PTR [ebp+0x173dbbab],cl
  414d88:	mov    esi,0x4e4dcc49
  414d8d:	inc    ebx
  414d8e:	es mov dh,ch
  414d91:	pop    edi
  414d92:	dec    edi
  414d93:	mov    dh,0xef
  414d95:	lods   eax,DWORD PTR ds:[esi]
  414d96:	or     bh,BYTE PTR gs:[ebx+0x53]
  414d9a:	sub    eax,0xd6bcedc6
  414d9f:	rcr    DWORD PTR [ecx-0x2ec14d61],cl
  414da5:	jmp    0x7b305707
  414daa:	popa   
  414dab:	add    edx,eax
  414dad:	or     edx,eax
  414daf:	add    DWORD PTR [edx+edx*4-0x3e],edx
  414db3:	push   ecx
  414db4:	pusha  
  414db5:	dec    ecx
  414db6:	bound  esp,QWORD PTR [edx+0x56cfbefe]
  414dbc:	fild   DWORD PTR [edx-0x72]
  414dbf:	push   edi
  414dc0:	ficomp WORD PTR [edi+0x5252fe5a]
  414dc6:	call   0x7a42da7b
  414dcb:	jmp    0x2d1a8c5e
  414dd0:	pop    ss
  414dd1:	out    dx,eax
  414dd2:	and    DWORD PTR [edi-0x68b20e26],ebx
  414dd8:	push   ss
  414dd9:	pop    esi
  414dda:	fadd   DWORD PTR [edi+edi*1+0x3b52f6e0]
  414de1:	xchg   esp,eax
  414de2:	inc    ecx
  414de3:	nop
  414de4:	mov    fs,WORD PTR [esi-0x70]
  414de7:	fcomp  DWORD PTR [esi+0xf6d5e1f]
  414ded:	clc    
  414dee:	stc    
  414def:	fdiv   st(7),st
  414df1:	cmc    
  414df2:	gs scas eax,DWORD PTR es:[edi]
  414df4:	(bad)  
  414df5:	retf   0x2703
  414df8:	lea    edx,[edx]
  414dfa:	jnp    0x414e05
  414dfc:	sub    edi,ebp
  414dfe:	ret    
  414dff:	sub    BYTE PTR [eax+0x5b2e3a9c],dl
  414e05:	jo     0x414dde
  414e07:	jp     0x414e5e
  414e09:	out    dx,eax
  414e0a:	add    DWORD PTR [ecx-0x9],edx
  414e0d:	fsub   QWORD PTR [edx]
  414e0f:	popa   
  414e10:	iret   
  414e11:	shr    BYTE PTR [eax-0x2ccc15f7],1
  414e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e18:	mov    eax,ds:0x510feb5f
  414e1d:	fs (bad) 
  414e1f:	cmp    eax,0x570cf0eb
  414e24:	pop    ds
  414e25:	fwait
  414e26:	add    BYTE PTR ds:0x9e92081f,0x50
  414e2d:	dec    ebx
  414e2e:	mov    cl,BYTE PTR [edi+0x63]
  414e31:	test   BYTE PTR [ecx+0x36d13064],dl
  414e37:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  414e39:	popf   
  414e3a:	div    BYTE PTR [ebp-0x4b88fc43]
  414e40:	in     eax,0x7e
  414e42:	out    0xaf,al
  414e44:	popf   
  414e45:	test   eax,0xa98ba750
  414e4a:	inc    esi
  414e4b:	inc    ebp
  414e4c:	(bad)  [ebp+0x252608e]
  414e52:	add    ah,BYTE PTR [ebx+eax*2-0x35]
  414e56:	dec    ecx
  414e57:	mov    ebp,0xd603b34d
  414e5c:	inc    eax
  414e5d:	xchg   esp,eax
  414e5e:	mov    bh,0x17
  414e60:	mov    ?,WORD PTR [ebp+edx*2+0xe926412]
  414e67:	popa   
  414e68:	mov    ecx,0x9348095e
  414e6d:	jmp    0x2f4d:0xdc375d80
  414e74:	shl    BYTE PTR [edx+0x55caad5c],1
  414e7a:	ds jge 0x414e6b
  414e7d:	jo     0x414e1d
  414e7f:	or     ch,bh
  414e81:	in     al,dx
  414e82:	push   eax
  414e83:	pusha  
  414e84:	popf   
  414e85:	xchg   esp,eax
  414e86:	push   edx
  414e87:	sub    esp,DWORD PTR [ecx+eax*8-0x17531298]
  414e8e:	lea    ebp,[edx]
  414e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e91:	inc    ebp
  414e92:	fist   WORD PTR [ecx+0x7e80e4e1]
  414e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e99:	fld    TBYTE PTR [eax]
  414e9b:	push   0x57
  414e9d:	lea    edx,[ebp-0x5a4f53d]
  414ea3:	cmp    BYTE PTR [eax+ebp*4+0x1a],ah
  414ea7:	adc    DWORD PTR [esi+0x4b48b8a1],esi
  414ead:	int    0x4e
  414eaf:	cmp    DWORD PTR [esi-0x14],0x8736fd9d
  414eb6:	push   ebx
  414eb7:	cli    
  414eb8:	sub    DWORD PTR [ecx],0xc60a4619
  414ebe:	cdq    
  414ebf:	js     0x414e70
  414ec1:	repnz mov ecx,ebx
  414ec4:	jne    0x414f1d
  414ec6:	data16 jg 0x414eb9
  414ec9:	imul   ecx,eax,0x3d37bd0e
  414ecf:	mov    ecx,0x941d0582
  414ed4:	int    0x2f
  414ed6:	adc    esi,DWORD PTR [edx]
  414ed8:	add    al,0x75
  414eda:	das    
  414edb:	cli    
  414edc:	jnp    0x414e5e
  414ede:	int3   
  414edf:	push   ecx
  414ee0:	mov    al,ds:0x604316fe
  414ee5:	add    ecx,DWORD PTR [edi]
  414ee7:	jns    0x414ecc
  414ee9:	pop    es
  414eea:	adc    cl,dl
  414eec:	add    al,0x8f
  414eee:	jmp    0xbd0c:0x4d85c916
  414ef5:	imul   ebx,edi,0x37613e97
  414efb:	fcomp  DWORD PTR [eax+0x57]
  414efe:	xor    ebp,edi
  414f00:	loope  0x414f48
  414f02:	mov    bh,0xf8
  414f04:	shld   ecx,edi,cl
  414f07:	sbb    al,0x6
  414f09:	ss ja  0x414f51
  414f0c:	pop    es
  414f0d:	dec    esi
  414f0e:	leave  
  414f0f:	es pop ds
  414f11:	rcr    DWORD PTR [ecx+0x357f3fa9],1
  414f17:	aam    0x8b
  414f19:	dec    esi
  414f1a:	and    DWORD PTR [edi+0x4b78ecb0],esi
  414f20:	icebp  
  414f21:	lods   eax,DWORD PTR ds:[esi]
  414f22:	fcom   QWORD PTR [edx+0x4fb14ea8]
  414f28:	push   ss
  414f29:	add    eax,0xa31be270
  414f2e:	adc    dl,cl
  414f30:	adc    al,0x6a
  414f32:	and    al,0x4e
  414f34:	pop    es
  414f35:	mov    edi,0x710f51e9
  414f3a:	sbb    ebp,DWORD PTR [eax-0x78]
  414f3d:	stos   DWORD PTR es:[edi],eax
  414f3e:	sub    al,0xe6
  414f40:	mov    ecx,0xeb9e84cd
  414f45:	pop    esi
  414f46:	sub    ah,BYTE PTR [si+0x55a6]
  414f4b:	retf   0x9e35
  414f4e:	adc    BYTE PTR [edx-0x45],cl
  414f51:	leave  
  414f52:	loop   0x414f34
  414f54:	mov    dh,0xc9
  414f56:	shl    BYTE PTR [edx+0x4e5d9c53],cl
  414f5c:	mov    bh,0xcc
  414f5e:	push   esp
  414f5f:	test   ebp,eax
  414f61:	dec    ebx
  414f62:	stc    
  414f63:	jbe    0x414f52
  414f65:	repnz mov WORD PTR [esi+0x69],gs
  414f69:	or     eax,DWORD PTR [edx]
  414f6b:	push   ss
  414f6c:	(bad)  
  414f6d:	and    al,0x8f
  414f6f:	gs inc edx
  414f71:	sub    BYTE PTR [edi-0x20830a90],bl
  414f77:	call   0x76d4c715
  414f7c:	pop    eax
  414f7d:	sahf   
  414f7e:	rcl    ah,1
  414f80:	rol    BYTE PTR [ebp-0x31],1
  414f83:	test   DWORD PTR [ebx+edx*8+0x7d0fda8e],ebx
  414f8a:	in     eax,0x28
  414f8c:	scas   al,BYTE PTR es:[edi]
  414f8d:	jmp    FWORD PTR [edx+0xdbca613]
  414f93:	fistp  QWORD PTR [edx+0x5052fb40]
  414f99:	pop    ecx
  414f9a:	outs   dx,BYTE PTR ds:[esi]
  414f9b:	push   esi
  414f9c:	rol    DWORD PTR [ecx+0x59ec59ad],cl
  414fa2:	mov    esi,0x941f71c8
  414fa7:	and    eax,0xcd7cd9e5
  414fac:	or     eax,0x7fc5148f
  414fb1:	std    
  414fb2:	mov    dh,0xd1
  414fb4:	enter  0x5104,0xca
  414fb8:	jge    0x414f88
  414fba:	cmp    BYTE PTR [edi],bh
  414fbc:	xlat   BYTE PTR ds:[ebx]
  414fbd:	sub    BYTE PTR [edi-0xf14b10a],bl
  414fc3:	jle    0x415040
  414fc5:	pop    es
  414fc6:	or     bl,BYTE PTR [esi]
  414fc8:	jb     0x415009
  414fca:	mov    ebx,0x3bac3a8d
  414fcf:	xchg   DWORD PTR [ecx+edx*2+0x6319d619],ecx
  414fd6:	(bad)  
  414fd7:	xchg   esi,eax
  414fd8:	mov    bl,0x21
  414fda:	sub    esp,ecx
  414fdc:	sub    ch,BYTE PTR [eax-0x28f639d]
  414fe2:	jge    0x41501f
  414fe4:	pop    es
  414fe5:	adc    DWORD PTR [esi+ebx*2],esp
  414fe8:	xchg   BYTE PTR [ebp-0x8],bl
  414feb:	popf   
  414fec:	add    ecx,DWORD PTR [esi+ebx*8-0x7c]
  414ff0:	retf   
  414ff1:	arpl   WORD PTR [edx],bx
  414ff3:	cmp    al,0x96
  414ff5:	lea    edi,[ebx-0x5e2424d3]
  414ffb:	bound  ebp,QWORD PTR [esi+edi*8]
  414ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fff:	xor    al,0x6f
  415001:	adc    edi,DWORD PTR [eax]
  415003:	shl    BYTE PTR [ebx],0x6d
  415006:	or     DWORD PTR [ebx],ebp
  415008:	and    DWORD PTR [ebp+0x4cede3d],ebx
  41500e:	popa   
  41500f:	mov    cl,0xb3
  415011:	inc    esi
  415012:	sbb    al,0x91
  415014:	fs adc al,0xf4
  415017:	ret    0xb350
  41501a:	lahf   
  41501b:	push   ss
  41501c:	mov    dh,0xd2
  41501e:	scas   eax,DWORD PTR es:[edi]
  41501f:	add    al,0xf3
  415021:	(bad)  
  415022:	dec    ecx
  415023:	test   ebp,esi
  415025:	sub    ah,BYTE PTR [ebx]
  415027:	fdiv   st(5),st
  415029:	hlt    
  41502a:	stos   BYTE PTR es:[edi],al
  41502b:	mov    cl,0x63
  41502d:	mov    dl,0x84
  41502f:	jne    0x414fc7
  415031:	sub    esi,DWORD PTR [eax+ecx*2+0x1b6249e6]
  415038:	mov    cl,0xfe
  41503a:	in     al,dx
  41503b:	repnz test edx,0x6f82984c
  415042:	retf   0xd559
  415045:	sub    BYTE PTR [edx],bl
  415047:	dec    edx
  415048:	or     bh,BYTE PTR [eax-0x3f9dfc10]
  41504e:	mov    ah,BYTE PTR [ecx+esi*4-0x5caca4ca]
  415055:	and    edx,DWORD PTR [edx+0x12]
  415058:	cmp    DWORD PTR [ebp+ebp*1+0x3c],eax
  41505c:	shr    BYTE PTR [eax+0x5b],1
  41505f:	add    ebx,DWORD PTR [ecx]
  415061:	les    edx,FWORD PTR [esi-0x33]
  415064:	add    BYTE PTR [ecx+edx*8-0x7b75b358],bl
  41506b:	shl    DWORD PTR [esi+0x1c52b1ba],1
  415071:	dec    edi
  415072:	mov    ds:0xc68fd813,al
  415077:	pusha  
  415078:	xchg   esp,eax
  415079:	ficom  WORD PTR [ebp-0x24]
  41507c:	fwait
  41507d:	jns    0x41502b
  41507f:	je     0x415001
  415081:	mov    bh,0x72
  415083:	and    eax,DWORD PTR [esp+edx*2+0x64]
  415087:	fldcw  WORD PTR [edi+0x5e40b55]
  41508d:	push   ss
  41508e:	mov    ebp,0xf5d4f339
  415093:	fld    QWORD PTR [ebx+0x56]
  415096:	jl     0x41503d
  415098:	adc    cl,BYTE PTR [ecx-0xce7e4cf]
  41509e:	lds    ebx,FWORD PTR [ecx]
  4150a0:	retf   
  4150a1:	test   BYTE PTR [ebx],0xfd
  4150a4:	(bad)  
  4150a5:	jae    0x415109
  4150a7:	xchg   DWORD PTR [esi-0x1],ecx
  4150aa:	mov    ah,0xeb
  4150ac:	rcr    DWORD PTR [ebp-0x75],cl
  4150af:	push   cs
  4150b0:	mov    cl,0x31
  4150b2:	sbb    DWORD PTR [esi],0xfffffffc
  4150b5:	pop    ebx
  4150b6:	push   edx
  4150b7:	lods   eax,DWORD PTR ds:[esi]
  4150b8:	cmp    dh,bh
  4150ba:	pop    edx
  4150bb:	fst    st(3)
  4150bd:	jae    0x81132c46
  4150c3:	jle    0x4150dd
  4150c5:	inc    ebp
  4150c6:	adc    al,0x77
  4150c8:	sbb    DWORD PTR [edx-0x2ef56e2f],ecx
  4150ce:	mov    edi,ecx
  4150d0:	aaa    
  4150d1:	inc    esi
  4150d2:	repnz test al,0x81
  4150d5:	dec    esp
  4150d6:	inc    ebx
  4150d7:	inc    eax
  4150d8:	ss jbe 0x415130
  4150db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150dc:	loope  0x415142
  4150de:	sub    al,0xea
  4150e0:	ret    
  4150e1:	xor    al,0x83
  4150e3:	mov    ah,BYTE PTR [ecx]
  4150e5:	cmp    edx,DWORD PTR [eax-0x70]
  4150e8:	cli    
  4150e9:	inc    esp
  4150ea:	and    DWORD PTR [ecx-0x1f],ebx
  4150ed:	test   DWORD PTR [eax],edi
  4150ef:	jae    0x41507e
  4150f1:	aad    0xbc
  4150f3:	jne    0x415138
  4150f5:	mov    edi,0x4b206cf8
  4150fa:	adc    BYTE PTR [ebx-0x20ddf5ba],dh
  415100:	cdq    
  415101:	call   0x29a9:0xc46deb8a
  415108:	paddsw mm6,QWORD PTR [esi]
  41510b:	pop    ds
  41510c:	(bad)  
  41510d:	clc    
  41510e:	mov    ch,0xd5
  415110:	sub    ch,dl
  415112:	mov    dh,0x86
  415114:	into   
  415115:	sub    ebx,DWORD PTR [ebx+0xdc469f]
  41511b:	das    
  41511c:	(bad)  
  41511d:	addr16 mov ds:0xceb4,eax
  415121:	(bad)  
  415122:	in     al,0xd0
  415124:	push   esp
  415125:	fwait
  415126:	fs das 
  415128:	and    BYTE PTR [eax-0x69],bl
  41512b:	stos   DWORD PTR es:[edi],eax
  41512c:	push   cs
  41512d:	jne    0x415111
  41512f:	sbb    esi,0xd845839b
  415135:	push   ss
  415136:	bound  edx,QWORD PTR [edx]
  415138:	lahf   
  415139:	sbb    eax,0xf26a026f
  41513e:	sbb    edi,DWORD PTR [eax-0x2]
  415141:	inc    ebx
  415142:	fwait
  415143:	leave  
  415144:	rcl    DWORD PTR [esi-0x5f373c71],0xe1
  41514b:	pop    ebx
  41514c:	inc    ecx
  41514d:	inc    esp
  41514e:	(bad)  
  41514f:	or     al,0x39
  415151:	or     eax,DWORD PTR [ebx]
  415153:	jecxz  0x4151a2
  415155:	fs loopne 0x415170
  415158:	sub    DWORD PTR [ebx+eiz*4-0x3dfc61ab],ebp
  41515f:	sbb    DWORD PTR [edi+0x67be6fd8],0x4b
  415166:	push   edi
  415167:	into   
  415168:	push   ebp
  415169:	test   DWORD PTR [ecx-0x37],edx
  41516c:	mov    ebx,eax
  41516e:	hlt    
  41516f:	cmp    dh,BYTE PTR [edx]
  415171:	or     BYTE PTR [edi],dh
  415173:	mov    DWORD PTR [eax-0x5ab3dc1f],edx
  415179:	mov    BYTE PTR [esp+ebp*4+0x6c3bbc48],bh
  415180:	sub    al,BYTE PTR [ebx]
  415182:	loope  0x41515f
  415184:	rcr    BYTE PTR [eax+0x3a],1
  415187:	add    eax,0x523d472d
  41518c:	(bad)  
  41518e:	mov    edx,0x40ea2cb9
  415193:	cwde   
  415194:	xchg   edx,eax
  415195:	jge    0x4151fd
  415197:	nop
  415198:	aaa    
  415199:	mov    ebx,0xb52dc7d2
  41519e:	mov    eax,ds:0xea6d7f84
  4151a3:	les    ebx,FWORD PTR [ebp+0x8]
  4151a6:	je     0x4151df
  4151a8:	mov    eax,ds:0x8fc69194
  4151ad:	or     eax,0xe924b739
  4151b2:	add    ebx,DWORD PTR [ebx-0x3]
  4151b5:	dec    ebp
  4151b6:	rcr    BYTE PTR [eax-0x67e9cb33],0xee
  4151bd:	(bad)  
  4151be:	out    dx,eax
  4151bf:	js     0x415180
  4151c1:	out    dx,al
  4151c2:	add    cl,ah
  4151c4:	pop    ds
  4151c5:	aaa    
  4151c6:	into   
  4151c7:	sub    DWORD PTR [ecx],eax
  4151c9:	and    ch,BYTE PTR [esi+0x699decc9]
  4151cf:	pushf  
  4151d0:	retf   
  4151d1:	inc    edi
  4151d2:	ret    0xa531
  4151d5:	jno    0x4151e6
  4151d7:	push   eax
  4151d8:	push   edi
  4151d9:	ror    BYTE PTR [ebx+ebp*1+0xe],0xd2
  4151de:	daa    
  4151df:	mov    al,0x3
  4151e1:	xchg   DWORD PTR [edx],eax
  4151e3:	mov    WORD PTR [ebp+esi*1+0x36528c6c],ds
  4151ea:	jae    0x4151ca
  4151ec:	out    0x69,al
  4151ee:	sub    al,0x38
  4151f0:	jg     0x4151eb
  4151f2:	xor    al,0x31
  4151f4:	inc    ebp
  4151f5:	fld    TBYTE PTR [esi+0x1c]
  4151f8:	ror    BYTE PTR [ecx-0x3b],1
  4151fb:	arpl   si,ax
  4151fd:	mov    esp,0x1665221e
  415202:	inc    ebp
  415203:	sbb    al,BYTE PTR [eax+esi*2+0x243c9951]
  41520a:	xor    al,0xd7
  41520c:	(bad)  
  41520d:	push   ecx
  41520e:	call   0x4053:0x85c0fae2
  415215:	arpl   WORD PTR [ebx-0x3db94ad7],ax
  41521b:	cli    
  41521c:	dec    esi
  41521d:	inc    ebp
  41521e:	shl    BYTE PTR [ecx+0x58],cl
  415221:	rcl    DWORD PTR [esp+edi*2+0x135c4bbd],cl
  415228:	jns    0x415285
  41522a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41522b:	ss mov ah,0x68
  41522e:	shl    BYTE PTR [esi+0x1a00833],1
  415234:	mov    DWORD PTR [ebp+edx*1-0x79],0x5543ecb4
  41523c:	stos   DWORD PTR es:[edi],eax
  41523d:	inc    BYTE PTR [ebp-0x46918e2f]
  415243:	sbb    eax,0xa68417b6
  415248:	scas   eax,DWORD PTR es:[edi]
  415249:	sar    DWORD PTR [esi],1
  41524b:	icebp  
  41524c:	fisub  DWORD PTR [ebp+0x13]
  41524f:	mov    ah,0x3b
  415251:	into   
  415252:	retf   0x96a8
  415255:	pcmpeqb mm1,mm3
  415258:	shl    ebx,1
  41525a:	or     cl,BYTE PTR [ecx]
  41525c:	ret    
  41525d:	add    ebp,ecx
  41525f:	dec    eax
  415260:	push   ss
  415261:	push   ss
  415262:	popf   
  415263:	xchg   esi,eax
  415264:	xchg   BYTE PTR [ebx-0x3e],ah
  415267:	jp     0x41523e
  415269:	mov    edx,0xd56e996f
  41526e:	gs loop 0x415261
  415271:	add    dh,BYTE PTR [edi-0x6a861b1c]
  415277:	cdq    
  415278:	jecxz  0x4152a6
  41527a:	and    eax,DWORD PTR ds:0x6615b5ae
  415280:	fcmovb st,st(3)
  415282:	daa    
  415283:	daa    
  415284:	jae    0x415275
  415286:	jmp    0x41525a
  415288:	lock scas al,BYTE PTR es:[edi]
  41528a:	inc    eax
  41528b:	rcr    DWORD PTR [eax+eiz*2+0x32f4f1aa],cl
  415292:	cmp    DWORD PTR [edx+0x5b],0xffffffd0
  415296:	cmp    al,0x40
  415298:	push   ss
  415299:	xor    DWORD PTR [edi+0x3444bf9d],0xffffffc2
  4152a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152a1:	ja     0x415247
  4152a3:	retf   0x18f5
  4152a6:	aaa    
  4152a7:	inc    edi
  4152a8:	lods   al,BYTE PTR ds:[esi]
  4152a9:	lods   eax,DWORD PTR ds:[esi]
  4152aa:	out    dx,eax
  4152ab:	iret   
  4152ac:	push   edx
  4152ad:	add    cl,bh
  4152af:	into   
  4152b0:	add    eax,0x520a8ba5
  4152b5:	clc    
  4152b6:	sbb    al,0x3f
  4152b8:	pop    eax
  4152b9:	cmp    DWORD PTR [ebp+0x6c],ebp
  4152bc:	fisttp QWORD PTR [edx+0x59d439f0]
  4152c2:	ja     0x41533c
  4152c4:	push   ebx
  4152c5:	je     0x41527b
  4152c7:	repnz out dx,al
  4152c9:	leave  
  4152ca:	lock stc 
  4152cc:	fadd   DWORD PTR [edi+0x5105615a]
  4152d2:	in     eax,dx
  4152d3:	add    DWORD PTR [ebp+0x1d],esp
  4152d6:	rol    DWORD PTR [edi-0x4756311e],1
  4152dc:	adc    DWORD PTR [ecx+0x387a7e80],edx
  4152e2:	mov    WORD PTR [ebp+0x1c],ss
  4152e5:	mov    al,ds:0x153413a4
  4152ea:	xchg   ecx,eax
  4152eb:	lods   al,BYTE PTR ds:[esi]
  4152ec:	xlat   BYTE PTR ds:[ebx]
  4152ed:	stos   BYTE PTR es:[edi],al
  4152ee:	shl    BYTE PTR [ebp+0x25],1
  4152f1:	adc    DWORD PTR [eax+0x72],ebx
  4152f4:	scas   eax,DWORD PTR es:[edi]
  4152f5:	addr16 xchg ecx,eax
  4152f7:	imul   eax,DWORD PTR ds:[ecx],0x26
  4152fb:	mov    cl,0x94
  4152fd:	inc    ecx
  4152fe:	mov    edi,edi
  415300:	imul   esp,DWORD PTR [ebx],0xffffffdc
  415303:	xchg   BYTE PTR ds:0xbfbd6398,bh
  415309:	adc    esi,edi
  41530b:	xchg   edi,eax
  41530c:	cmc    
  41530d:	mov    edx,esi
  41530f:	fidivr DWORD PTR [edx-0x53]
  415312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415313:	push   ebx
  415314:	ret    
  415315:	or     al,0x8a
  415317:	inc    edi
  415318:	xor    DWORD PTR [ebx+0x36],esi
  41531b:	cmp    eax,0x9e3187d7
  415320:	xor    ch,ah
  415322:	push   ebp
  415323:	and    edx,DWORD PTR [edi-0x80]
  415326:	xor    bh,al
  415328:	cld    
  415329:	push   ebp
  41532a:	mov    eax,ds:0x314a7ae6
  41532f:	imul   ebx,DWORD PTR [edx],0xffffffff
  415332:	daa    
  415333:	inc    ebx
  415334:	xchg   ebx,eax
  415335:	dec    esi
  415336:	pop    ebp
  415337:	sub    esp,esi
  415339:	jnp    0x41531f
  41533b:	ins    BYTE PTR es:[edi],dx
  41533c:	addr16 mov cl,0x76
  41533f:	mov    ch,BYTE PTR [ebx]
  415341:	das    
  415342:	mov    dh,0x31
  415344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415345:	enter  0xe310,0xcf
  415349:	mov    ah,BYTE PTR ds:0xe8123ea7
  41534f:	and    DWORD PTR [edi-0x1e],eax
  415352:	adc    DWORD PTR [ecx-0x67],edi
  415355:	hlt    
  415356:	cmp    ecx,eax
  415358:	cmp    al,0xd9
  41535a:	js     0x4153b4
  41535c:	push   ecx
  41535e:	outs   dx,BYTE PTR ds:[esi]
  41535f:	add    al,0x71
  415361:	shr    BYTE PTR [ebp+0x4d],0x67
  415365:	cmp    esi,edx
  415367:	enter  0xeee6,0x70
  41536b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41536c:	xor    al,0xf
  41536e:	jbe    0x415379
  415370:	jp     0x4153a9
  415372:	push   ebx
  415373:	adc    edx,DWORD PTR [ecx-0x30]
  415376:	pop    ebx
  415377:	push   ebp
  415378:	xor    eax,0x129dab29
  41537d:	add    DWORD PTR [edi],esi
  41537f:	popa   
  415380:	jno    0x415320
  415382:	aam    0x26
  415384:	mov    ebp,DWORD PTR [eax-0x7d5f1f0]
  41538a:	adc    eax,0xa7061df5
  41538f:	cmp    ebx,ebx
  415391:	iret   
  415392:	das    
  415393:	mov    cl,0xb4
  415395:	xchg   ebx,eax
  415396:	adc    al,0x14
  415398:	mov    bl,0x3c
  41539a:	enter  0x5617,0xc1
  41539e:	scas   al,BYTE PTR es:[edi]
  41539f:	out    dx,al
  4153a0:	xchg   DWORD PTR [edx],ebp
  4153a2:	stos   BYTE PTR es:[edi],al
  4153a3:	jbe    0x4153d8
  4153a5:	ret    
  4153a6:	das    
  4153a7:	mov    eax,ds:0x2298820e
  4153ac:	jnp    0x41541e
  4153ae:	or     DWORD PTR [ebx-0x45641c04],ecx
  4153b4:	push   esp
  4153b5:	adc    eax,0xdc595317
  4153ba:	aas    
  4153bb:	popa   
  4153bc:	add    DWORD PTR [ebx+0x17],esp
  4153bf:	mov    edx,0x8ee92124
  4153c4:	sbb    al,0xf6
  4153c6:	loope  0x4153a1
  4153c8:	(bad)  
  4153c9:	in     eax,dx
  4153ca:	jge    0x4153c5
  4153cc:	clc    
  4153cd:	fiadd  DWORD PTR [ebp+esi*8+0x2f]
  4153d1:	mov    dh,0x95
  4153d3:	mov    esi,edx
  4153d5:	mov    edx,eax
  4153d7:	pop    es
  4153d8:	adc    bh,BYTE PTR [edx+0x4b52b628]
  4153de:	(bad)  
  4153df:	jmp    0x2fb4:0xd6f5a7d7
  4153e6:	adc    eax,0xb370fada
  4153eb:	iret   
  4153ec:	pop    ds
  4153ed:	aaa    
  4153ee:	adc    DWORD PTR gs:[ebx+0x7c025a78],edi
  4153f5:	fnstsw WORD PTR [edx+esi*8-0x39]
  4153f9:	lds    eax,FWORD PTR [ecx]
  4153fb:	imul   ebp,DWORD PTR [edi+0x86690d6],0x6224cb86
  415405:	mul    DWORD PTR [esi-0x4e]
  415408:	dec    edi
  415409:	aam    0xf8
  41540b:	out    0x78,eax
  41540d:	cwde   
  41540e:	jne    0x415428
  415410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415411:	lds    ecx,FWORD PTR [edx+ebp*2-0x54af6e96]
  415418:	xor    ah,BYTE PTR [esi-0x50]
  41541b:	jbe    0x415409
  41541d:	int3   
  41541e:	repz pushf 
  415420:	adc    BYTE PTR [esi],0x9
  415423:	pop    es
  415424:	pop    edi
  415425:	pop    es
  415426:	pop    es
  415427:	add    eax,0xf23eb627
  41542c:	cwde   
  41542d:	popf   
  41542e:	push   ds
  41542f:	sub    dl,BYTE PTR [eax-0x7d]
  415432:	cwde   
  415433:	loopne 0x415466
  415435:	int3   
  415436:	cdq    
  415437:	mov    ch,0x4
  415439:	(bad)  
  41543a:	xor    al,0xfe
  41543c:	pop    edx
  41543d:	sbb    eax,0xc616b66a
  415442:	inc    edi
  415443:	pop    ebx
  415444:	call   0x2c048a93
  415449:	icebp  
  41544a:	pop    es
  41544b:	shl    al,cl
  41544d:	ja     0x415451
  41544f:	pop    esi
  415450:	and    BYTE PTR [ecx-0x698cf208],al
  415456:	dec    edi
  415457:	mov    dl,0xc3
  415459:	dec    ebp
  41545a:	stc    
  41545b:	mov    bl,bl
  41545d:	aaa    
  41545e:	scas   al,BYTE PTR es:[edi]
  41545f:	inc    edi
  415460:	and    eax,0x6dcb367b
  415465:	add    ch,BYTE PTR [ecx]
  415467:	and    bh,BYTE PTR [edx]
  415469:	sub    al,0x5e
  41546b:	push   edi
  41546c:	adc    ch,BYTE PTR ds:0x91c41022
  415472:	lfs    ebx,FWORD PTR es:[edx-0x7f48b4b0]
  41547a:	sti    
  41547b:	mov    ax,ds:0x9620d69d
  415481:	push   ebx
  415482:	mov    ah,0x42
  415484:	and    ecx,edi
  415486:	add    BYTE PTR [esi],cl
  415488:	sub    al,0x65
  41548a:	mov    al,0xbf
  41548c:	xchg   DWORD PTR [ebp+0x63],esi
  41548f:	or     BYTE PTR [eax-0x5ec9c28],cl
  415495:	cmp    al,dh
  415497:	lahf   
  415498:	push   edx
  415499:	adc    esp,ebp
  41549b:	mov    al,ds:0xa7a1a4e5
  4154a0:	sbb    DWORD PTR [esi+0x16],edx
  4154a3:	push   edi
  4154a4:	rcl    WORD PTR [ebp-0x4b],cl
  4154a8:	cmp    eax,0x150680d4
  4154ad:	jmp    0x78e84b22
  4154b2:	jmp    0x451c:0xeec53e07
  4154b9:	aaa    
  4154ba:	sbb    eax,0x32c06e4b
  4154bf:	push   ecx
  4154c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154c1:	xchg   BYTE PTR [edi],dh
  4154c3:	nop
  4154c4:	(bad)  
  4154c5:	hlt    
  4154c6:	mov    gs,esp
  4154c8:	cmp    al,0xe9
  4154ca:	mov    dl,0xc
  4154cc:	sbb    eax,0x7a5a54fa
  4154d1:	adc    eax,0xe0a5666
  4154d6:	cld    
  4154d7:	sub    BYTE PTR [ebx],dl
  4154d9:	dec    eax
  4154da:	ins    BYTE PTR es:[edi],dx
  4154db:	mov    al,ds:0x54687b1d
  4154e0:	add    eax,0x7289d47a
  4154e5:	cmp    edx,DWORD PTR [ebp-0x7d8e7c5f]
  4154eb:	out    0x47,eax
  4154ed:	xlat   BYTE PTR ds:[ebx]
  4154ee:	icebp  
  4154ef:	mov    ds:0x609b6636,al
  4154f4:	lock mov eax,0xe3c59bb1
  4154fa:	popf   
  4154fb:	scas   al,BYTE PTR es:[edi]
  4154fc:	jne    0x4154a8
  4154fe:	xchg   edx,eax
  4154ff:	test   BYTE PTR [esi-0x77],ch
  415502:	mov    ecx,0x64508802
  415507:	dec    esp
  415508:	xchg   ecx,eax
  415509:	mov    esi,0xd5a8af6
  41550e:	jno    0x41557e
  415510:	xor    al,0x38
  415512:	jo     0x415499
  415514:	jecxz  0x415507
  415516:	outs   dx,BYTE PTR ds:[esi]
  415517:	fwait
  415518:	data16 loope 0x4154e8
  41551b:	push   0x1
  41551d:	cmp    cl,ah
  41551f:	and    BYTE PTR [edi],bl
  415521:	stc    
  415522:	xchg   esp,eax
  415523:	jbe    0x4154d3
  415525:	adc    BYTE PTR [esi-0x74fe1acf],bl
  41552b:	dec    ebx
  41552c:	or     DWORD PTR [esp+edx*1-0x7d75daef],esp
  415533:	xchg   ebx,eax
  415534:	ffree  st(6)
  415536:	xchg   esi,eax
  415537:	mov    ch,0x2d
  415539:	inc    edi
  41553a:	mov    DWORD PTR [ebp-0x22fc457],ebx
  415540:	and    eax,0xb5abb830
  415545:	inc    eax
  415546:	add    eax,DWORD PTR [ecx-0x622c04c7]
  41554c:	jecxz  0x415513
  41554e:	hlt    
  41554f:	test   al,0xa8
  415551:	mov    al,ds:0xb65f450d
  415556:	sbb    eax,ebp
  415558:	repnz push ecx
  41555a:	pop    ebp
  41555b:	or     eax,0xc916e01a
  415560:	add    DWORD PTR [ecx],0xffffffad
  415563:	mov    ds:0x90ef459d,al
  415568:	sub    DWORD PTR [edi-0x3aa3e16c],ebp
  41556e:	js     0x41558a
  415570:	retf   
  415571:	mov    ecx,0x3ed7aa9f
  415576:	cmp    BYTE PTR [ebp-0xe6cbb99],bh
  41557c:	enter  0xbd64,0x51
  415580:	xor    BYTE PTR [esi-0x5c],bl
  415583:	push   0xffffff93
  415585:	mov    esp,0x5192c486
  41558a:	jae    0x4155a5
  41558c:	test   eax,0x86053f23
  415591:	lahf   
  415592:	fmulp  st(3),st
  415594:	loope  0x415593
  415596:	cmp    al,0x40
  415598:	retf   0xb859
  41559b:	pushf  
  41559c:	pop    eax
  41559d:	lods   al,BYTE PTR ds:[esi]
  41559e:	cs mov eax,ds:0x73c380de
  4155a5:	push   edi
  4155a6:	fcomp  QWORD PTR [esi+ebp*4+0x31d00927]
  4155ad:	shl    ebp,cl
  4155af:	mov    DWORD PTR [edx-0x16],esp
  4155b2:	sub    al,0x7a
  4155b4:	enter  0x47dc,0x34
  4155b8:	mov    ds:0x9bebdedc,eax
  4155bd:	icebp  
  4155be:	mov    esp,gs
  4155c0:	mov    bl,0x18
  4155c2:	(bad)
  4155c7:	mov    esi,0x88974993
  4155cc:	adc    BYTE PTR [esi],cl
  4155ce:	push   esi
  4155cf:	cli    
  4155d0:	sub    eax,0xc454edaf
  4155d5:	xor    al,0x15
  4155d7:	mov    esp,0x7f9a70e8
  4155dc:	push   ebx
  4155dd:	cdq    
  4155de:	out    dx,al
  4155df:	mov    edx,0x9d977a3d
  4155e4:	push   edx
  4155e5:	jne    0x4155d5
  4155e7:	iret   
  4155e8:	mov    al,ds:0x4d2d6e3c
  4155ed:	mov    dl,0xf3
  4155ef:	fwait
  4155f0:	ret    
  4155f1:	icebp  
  4155f2:	push   esi
  4155f3:	inc    ebx
  4155f4:	fadd   DWORD PTR [ebx]
  4155f6:	jmp    0x415598
  4155f8:	mov    al,0x75
  4155fa:	mov    eax,ds:0xd12d2a6a
  4155ff:	mov    eax,0xf78b8e19
  415604:	(bad)  
  415605:	fisttp WORD PTR [eax+ebx*8]
  415608:	push   esp
  415609:	dec    DWORD PTR [eax-0x7813b19b]
  41560f:	push   esi
  415610:	sub    BYTE PTR [ebx-0x18bfcf38],dh
  415616:	and    DWORD PTR [edx+0x58],esp
  415619:	mov    DWORD PTR [esi-0xd1d24e5],ecx
  41561f:	mov    edi,0x956c4c62
  415624:	lahf   
  415625:	mov    BYTE PTR [edi-0x37538773],bh
  41562b:	mov    al,0xa2
  41562d:	inc    ebx
  41562e:	cmp    dh,0x5b
  415631:	xchg   bh,bh
  415633:	jae    0x41568d
  415635:	aas    
  415636:	mov    ?,edi
  415638:	fcomp  QWORD PTR [edi+0x1353b4d5]
  41563e:	ret    0xb525
  415641:	push   ds
  415642:	push   edx
  415643:	dec    edx
  415644:	mov    dl,0xe6
  415646:	rol    BYTE PTR [ebx+0x4e],cl
  415649:	sub    al,0xff
  41564b:	loopne 0x415617
  41564d:	inc    ecx
  41564e:	dec    esi
  41564f:	int    0x46
  415651:	scas   al,BYTE PTR es:[edi]
  415652:	ja     0x415655
  415654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415655:	push   cs
  415656:	rol    cl,cl
  415658:	pop    ecx
  415659:	add    edx,edi
  41565b:	mov    WORD PTR [eax],ss
  41565d:	cmp    eax,0x642d9c04
  415662:	adc    al,0xdc
  415664:	add    ah,BYTE PTR [eax-0x5283449f]
  41566a:	jecxz  0x415649
  41566c:	ret    0x9ea
  41566f:	out    dx,al
  415670:	test   DWORD PTR [eax],ecx
  415672:	loopne 0x415648
  415674:	jp     0x41563d
  415676:	repz fsubr st,st(1)
  415679:	add    DWORD PTR [edi+0x489d845e],ebx
  41567f:	sahf   
  415680:	cwde   
  415681:	icebp  
  415682:	test   eax,0x31083c11
  415687:	jae    0x4156ec
  415689:	mov    bh,0x4e
  41568b:	js     0x4156e4
  41568d:	inc    edi
  41568e:	(bad)  
  41568f:	or     ebx,ebx
  415691:	rcr    BYTE PTR [ebp-0xd6cf412],0x71
  415698:	mov    ebx,0x6c6091db
  41569d:	push   esp
  41569e:	mov    dl,0x1e
  4156a0:	call   0x86a7:0xf6eb6c29
  4156a7:	bound  edx,QWORD PTR [edi]
  4156a9:	(bad)  
  4156aa:	jno    0x415729
  4156ac:	test   ah,dl
  4156ae:	cmp    BYTE PTR [ebx+0x1e],ah
  4156b1:	mov    bl,0x6f
  4156b3:	push   ds
  4156b4:	fwait
  4156b5:	int    0x6e
  4156b7:	loop   0x4156c8
  4156b9:	inc    ebx
  4156ba:	icebp  
  4156bb:	dec    esp
  4156bc:	in     eax,0x13
  4156be:	inc    ebp
  4156bf:	inc    ecx
  4156c0:	jno    0x415711
  4156c2:	xchg   BYTE PTR [esi],cl
  4156c4:	out    dx,eax
  4156c5:	adc    BYTE PTR [edi-0x589fac2f],cl
  4156cb:	enter  0x7d2a,0x67
  4156cf:	sub    WORD PTR [ebx+0xe0d8065],sp
  4156d6:	xchg   esp,eax
  4156d7:	and    edx,DWORD PTR [ebp+0x556df0b4]
  4156dd:	ins    DWORD PTR es:[edi],dx
  4156de:	sbb    bh,BYTE PTR [esi]
  4156e0:	int3   
  4156e1:	mov    dh,0x77
  4156e3:	ins    BYTE PTR es:[edi],dx
  4156e4:	daa    
  4156e5:	mov    DWORD PTR [ebx-0x5a943687],ebx
  4156eb:	aas    
  4156ec:	push   edi
  4156ed:	es mov ecx,0xe212b219
  4156f3:	scas   al,BYTE PTR es:[edi]
  4156f4:	pop    esi
  4156f5:	xchg   ecx,eax
  4156f6:	or     ch,dh
  4156f8:	or     DWORD PTR [ebx],0x7090af91
  4156fe:	int3   
  4156ff:	push   0x66ff49
  415704:	fcomp  DWORD PTR [ebx+0x3db84e50]
  41570a:	pop    ss
  41570b:	(bad)  
  41570d:	test   eax,0x42ad2bba
  415712:	jecxz  0x4156a9
  415714:	cs pop edi
  415716:	cld    
  415717:	ja     0x415723
  415719:	adc    bh,bh
  41571b:	mov    edx,0x5e9d3475
  415720:	mov    dl,0x9f
  415722:	xor    ecx,eax
  415724:	in     eax,0xf5
  415726:	dec    esp
  415727:	jae    0x415766
  415729:	add    al,0x7a
  41572b:	lock add eax,0xa18d79c9
  415731:	lods   al,BYTE PTR ds:[esi]
  415732:	test   dl,dl
  415734:	shr    DWORD PTR [eax],cl
  415736:	rcl    DWORD PTR [esi-0x70],0xa7
  41573a:	pop    edx
  41573b:	jl     0x4156cf
  41573d:	cmp    al,BYTE PTR [edi-0x52d6af57]
  415743:	iret   
  415744:	xchg   ebx,eax
  415745:	push   ss
  415746:	xor    bl,bh
  415748:	mov    ebp,0x520df2b2
  41574d:	mov    ebp,0xe4f01c31
  415752:	data16 cmp BYTE PTR [ebp+0x4bd59b3b],al
  415759:	iret   
  41575a:	addr16 inc ebx
  41575d:	jo     0x415770
  41575f:	in     eax,dx
  415760:	jl     0x4156e6
  415762:	lods   eax,DWORD PTR ds:[esi]
  415763:	add    edi,DWORD PTR [edi]
  415765:	add    DWORD PTR [esi],edx
  415767:	cdq    
  415768:	xchg   cl,al
  41576a:	xchg   edx,eax
  41576b:	out    0x2b,al
  41576d:	leave  
  41576e:	dec    ebp
  41576f:	or     BYTE PTR [ecx+0x73],0x7b
  415773:	cwde   
  415774:	inc    esi
  415775:	xchg   edi,eax
  415776:	leave  
  415777:	addr16 enter 0xa88d,0xf2
  41577c:	iret   
  41577d:	daa    
  41577e:	cwde   
  41577f:	sub    eax,0x9c9529d0
  415784:	mov    edi,0x47c8d28d
  415789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41578a:	or     cl,BYTE PTR [eax+0x20]
  41578d:	out    dx,al
  41578e:	mov    al,ds:0x35b4cf7d
  415793:	mov    edx,0xb4d052fd
  415798:	out    0xe6,al
  41579a:	sub    BYTE PTR [ecx-0x6519f879],ch
  4157a0:	cwde   
  4157a1:	jmp    DWORD PTR [eax]
  4157a3:	out    0x3b,eax
  4157a5:	jo     0x415825
  4157a7:	sub    DWORD PTR [esi+esi*1],eax
  4157aa:	jp     0x415739
  4157ac:	scas   al,BYTE PTR es:[edi]
  4157ad:	sbb    al,0x82
  4157af:	adc    eax,0x41959a34
  4157b4:	lods   eax,DWORD PTR ds:[esi]
  4157b5:	mov    ah,0x22
  4157b7:	and    al,0x25
  4157b9:	(bad)  
  4157ba:	sub    ebx,ebp
  4157bc:	mov    ?,WORD PTR [ebx-0x7ba88027]
  4157c2:	shl    dh,cl
  4157c4:	jmp    0x4fca20c9
  4157c9:	stc    
  4157ca:	jo     0x415772
  4157cc:	dec    dh
  4157ce:	jge    0x415817
  4157d0:	sub    al,0xac
  4157d2:	(bad)  
  4157d3:	pop    ds
  4157d4:	(bad)  
  4157d5:	dec    ebx
  4157d6:	ret    
  4157d7:	xor    eax,0xcd93599b
  4157dc:	fwait
  4157dd:	stos   DWORD PTR es:[edi],eax
  4157de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157df:	ret    0x1764
  4157e2:	out    dx,eax
  4157e3:	pushf  
  4157e4:	jno    0x4157b2
  4157e6:	repnz aaa 
  4157e8:	repz fldenv [ecx-0x63777657]
  4157ef:	sti    
  4157f0:	push   ds
  4157f1:	mov    cl,0x7a
  4157f3:	mov    dl,BYTE PTR ds:0x435857db
  4157f9:	imul   ecx,DWORD PTR [edi-0x11],0xf3b8b120
  415800:	sub    al,0xa2
  415802:	jmp    0x875b:0x84184f53
  415809:	add    eax,0xa5bef8e5
  41580e:	addps  xmm4,xmm4
  415811:	mov    bh,0xea
  415813:	cwde   
  415814:	pop    edi
  415815:	jecxz  0x4157e0
  415817:	push   edi
  415818:	jge    0x415850
  41581a:	xor    ebp,DWORD PTR [edx-0x54]
  41581d:	rcl    ah,0xe9
  415820:	pop    ebx
  415821:	cwde   
  415822:	mov    ds:0xcdd13ccf,eax
  415827:	cmp    dl,0xb4
  41582a:	inc    esi
  41582b:	adc    ebp,DWORD PTR [esi+ebp*8-0x7a]
  41582f:	xchg   DWORD PTR ds:0x4b56571e,ebp
  415835:	test   BYTE PTR [ecx],cl
  415837:	ret    
  415838:	mov    ah,0x9
  41583a:	xor    eax,0x61657d93
  41583f:	aam    0xb0
  415841:	es pop es
  415843:	mov    esi,0xa51ecc45
  415848:	mov    bh,0xe5
  41584a:	cmp    al,BYTE PTR [ecx-0x8]
  41584d:	(bad)  
  41584e:	vpmacsww xmm11,xmm7,xmm0,XMMWORD PTR [edx-0x2d]
  415855:	mov    al,0x32
  415857:	sti    
  415858:	mov    edx,0xdbd787fb
  41585d:	mov    eax,ds:0x36204935
  415862:	(bad)  
  415863:	das    
  415864:	outs   dx,BYTE PTR ds:[esi]
  415865:	jmp    0xe547:0x55ae011b
  41586c:	stos   BYTE PTR es:[edi],al
  41586d:	push   ss
  41586e:	adc    al,0x26
  415870:	sub    edx,DWORD PTR [eax+0x5f]
  415873:	pop    ebx
  415874:	repz dec eax
  415876:	xchg   edi,eax
  415877:	aaa    
  415878:	mov    esi,0x8d7469e7
  41587d:	iret   
  41587e:	in     eax,0x30
  415880:	out    dx,eax
  415881:	xor    eax,0x9d9d9b8e
  415886:	cmp    DWORD PTR cs:[ebp-0x4094f0bc],0x4b
  41588e:	clc    
  41588f:	mov    eax,0xbcc8d5bc
  415894:	test   BYTE PTR [edi-0x48],cl
  415897:	sbb    ebp,DWORD PTR [edi+0x66]
  41589a:	fstp   st(2)
  41589c:	icebp  
  41589d:	mov    dh,0x6d
  41589f:	cmp    DWORD PTR [edi-0x3c],esi
  4158a2:	jp     0x4158e7
  4158a4:	xchg   edi,eax
  4158a5:	sti    
  4158a6:	fstp   DWORD PTR [eax+ecx*4+0x18a40a49]
  4158ad:	lahf   
  4158ae:	inc    eax
  4158af:	fs push edx
  4158b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158b2:	neg    DWORD PTR [edx]
  4158b4:	push   ecx
  4158b5:	aam    0xb5
  4158b7:	mov    eax,0x419aeb7b
  4158bc:	mov    ch,0x1f
  4158be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158bf:	data16 outs dx,BYTE PTR ds:[esi]
  4158c1:	mov    ecx,0x2a6d002e
  4158c6:	push   es
  4158c7:	pop    edi
  4158c8:	pop    ds
  4158c9:	into   
  4158ca:	mov    eax,ds:0x1f35cad7
  4158cf:	in     al,0x1e
  4158d1:	pop    edi
  4158d2:	adc    ecx,esp
  4158d4:	scas   al,BYTE PTR es:[edi]
  4158d5:	retf   0x1952
  4158d8:	sbb    DWORD PTR [eax+0x20],0x2f
  4158dc:	retf   
  4158dd:	cmp    esi,DWORD PTR [ecx+0x729f3619]
  4158e3:	fcom   DWORD PTR [eax-0x5d]
  4158e6:	clc    
  4158e7:	xor    dh,BYTE PTR [eax]
  4158e9:	push   ds
  4158ea:	dec    esi
  4158eb:	lock xor BYTE PTR [edi-0x248030df],bh
  4158f2:	mov    edi,0x84898da2
  4158f7:	mov    ds:0x9d52c516,eax
  4158fc:	pop    esi
  4158fd:	sub    al,0x3f
  4158ff:	ds sbb eax,0x73be86ac
  415905:	sub    DWORD PTR [eax-0x51],esp
  415908:	mov    bh,0xc1
  41590a:	inc    ebx
  41590b:	fst    st(0)
  41590d:	mov    cl,ah
  41590f:	test   DWORD PTR [ecx],ebp
  415911:	ret    0xdaa8
  415914:	loop   0x415973
  415916:	jle    0x41593e
  415918:	mov    BYTE PTR [eax-0x26],dl
  41591b:	push   ss
  41591c:	(bad)  
  41591d:	and    ebx,DWORD PTR [edi+0x2b516c0d]
  415923:	mov    esi,0xa9834c4b
  415928:	jno    0x41595e
  41592a:	sbb    BYTE PTR [ebx+0x76477393],dl
  415930:	push   esp
  415931:	stc    
  415932:	inc    edx
  415933:	(bad)  
  415935:	je     0x4158e8
  415937:	pushf  
  415938:	inc    ecx
  415939:	pop    ds
  41593a:	stc    
  41593b:	mov    cs,WORD PTR [eax+edi*8]
  41593e:	pop    es
  41593f:	jge    0x41596b
  415941:	into   
  415942:	adc    al,0xd4
  415944:	sub    cl,BYTE PTR [ecx-0x8]
  415947:	cdq    
  415948:	pushf  
  415949:	pop    ecx
  41594a:	cdq    
  41594b:	dec    BYTE PTR [edx-0x5a]
  41594e:	xchg   ebx,eax
  41594f:	or     esp,DWORD PTR [edi+0x460db4c8]
  415955:	cmp    DWORD PTR [ebx],eax
  415957:	out    0xc5,al
  415959:	(bad)  [eax]
  41595b:	cmp    eax,0xf933d1ce
  415960:	inc    ebx
  415961:	mov    eax,gs:0x6b8b6f2d
  415967:	nop
  415968:	and    eax,0x644570aa
  41596d:	pop    es
  41596e:	jmp    0x9848:0x9f687b54
  415975:	inc    ebp
  415976:	mov    al,ds:0x5c25d9d3
  41597b:	jns    0x4159de
  41597d:	xor    al,0x7f
  41597f:	or     esi,0x67c98c00
  415985:	arpl   WORD PTR [ebx],bp
  415987:	in     al,0x4
  415989:	outs   dx,BYTE PTR ds:[esi]
  41598a:	fistp  WORD PTR [edi-0x38]
  41598d:	jmp    0x4159d4
  41598f:	add    al,BYTE PTR [edx-0x26]
  415992:	rol    DWORD PTR [edx],1
  415994:	stc    
  415995:	loopne 0x415a00
  415997:	mov    WORD PTR [eax+ecx*4-0x4db320f1],?
  41599e:	aam    0x8e
  4159a0:	mov    eax,0xc90798c1
  4159a5:	imul   esi,DWORD PTR [edx+0x25],0x6213fd4a
  4159ac:	outs   dx,DWORD PTR ds:[esi]
  4159ad:	(bad)  
  4159ae:	add    BYTE PTR [ebx-0xa],dh
  4159b1:	sub    al,0x7e
  4159b3:	mov    dl,0xcc
  4159b5:	out    dx,al
  4159b6:	mov    cl,0xb3
  4159b8:	in     al,dx
  4159b9:	pop    esi
  4159ba:	fcom   st(5)
  4159bc:	xor    ch,BYTE PTR [esi]
  4159be:	inc    ebp
  4159bf:	ss sub al,0x0
  4159c2:	lds    esp,FWORD PTR [edx-0x5d]
  4159c5:	xlat   BYTE PTR ds:[ebx]
  4159c6:	dec    edi
  4159c7:	out    dx,eax
  4159c8:	je     0x4159e6
  4159ca:	out    0x9c,eax
  4159cc:	test   BYTE PTR [ebp+0x5c58bc9b],ah
  4159d2:	daa    
  4159d3:	jmp    DWORD PTR [esi+0x71528a5f]
  4159d9:	retf   
  4159da:	fadd   DWORD PTR [ecx+ebp*2-0x4ef2a370]
  4159e1:	je     0x415998
  4159e3:	imul   ebp,DWORD PTR [ebp+0x7b63b9cf],0xc642ea9b
  4159ed:	cdq    
  4159ee:	dec    edi
  4159ef:	xchg   edi,eax
  4159f0:	ret    
  4159f1:	das    
  4159f2:	add    DWORD PTR ds:0xb62ac888,eax
  4159f8:	imul   ecx,DWORD PTR [eax-0x7e],0x5c
  4159fc:	popa   
  4159fd:	jne    0x415a78
  4159ff:	xlat   BYTE PTR ds:[ebx]
  415a00:	cmp    bh,ch
  415a02:	cld    
  415a03:	adc    al,0xf2
  415a05:	in     al,0x6a
  415a07:	mov    ebx,0xeaa0dd19
  415a0c:	lods   al,BYTE PTR ds:[esi]
  415a0d:	xchg   esp,eax
  415a0e:	dec    esi
  415a0f:	add    dl,ah
  415a11:	fs out dx,eax
  415a13:	int3   
  415a14:	in     al,0x4f
  415a16:	call   0xdaa6e130
  415a1b:	fadd   st(3),st
  415a1d:	pop    ds
  415a1e:	mov    BYTE PTR [edx+0x27d0cf5c],0x96
  415a25:	lods   eax,DWORD PTR ds:[esi]
  415a26:	jne    0x415a14
  415a28:	ret    0x1f6c
  415a2b:	pop    edi
  415a2c:	pop    esp
  415a2d:	nop
  415a2e:	std    
  415a2f:	in     al,dx
  415a30:	xor    eax,0x9b97d576
  415a35:	(bad)  
  415a36:	(bad)  
  415a37:	pushf  
  415a38:	cwde   
  415a39:	dec    esp
  415a3a:	push   edx
  415a3b:	push   es
  415a3c:	sbb    ebp,DWORD PTR [edx+edi*8]
  415a3f:	mov    edx,0x2fd22d92
  415a44:	push   ecx
  415a45:	cdq    
  415a46:	add    DWORD PTR [edx+0x5e],ebx
  415a49:	out    dx,eax
  415a4a:	xor    eax,0x63c10a93
  415a4f:	pop    edx
  415a50:	leave  
  415a51:	std    
  415a52:	aam    0x43
  415a54:	pop    esi
  415a55:	and    BYTE PTR [ebx],cl
  415a57:	sbb    eax,0x78a66e75
  415a5c:	lahf   
  415a5d:	sbb    eax,0xa852f7ec
  415a62:	mov    ebp,0x22299e75
  415a67:	mov    ebp,0x87c381a6
  415a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a6e:	push   es
  415a6f:	or     eax,0xfe64b01d
  415a74:	dec    edi
  415a75:	adc    eax,0xee8114b
  415a7a:	mov    fs:0x141c19ba,al
  415a80:	adc    ebp,DWORD PTR [edx]
  415a82:	bound  esp,QWORD PTR [ecx+0x8]
  415a85:	mov    al,0xc1
  415a87:	xlat   BYTE PTR ds:[ebx]
  415a88:	mov    ds:0xe2b3685a,al
  415a8d:	dec    esi
  415a8e:	xchg   ebp,eax
  415a8f:	xchg   ebp,eax
  415a90:	not    DWORD PTR [ecx-0x32f72d09]
  415a96:	inc    edi
  415a97:	retf   0x698a
  415a9a:	xchg   edx,eax
  415a9b:	mov    dh,BYTE PTR [edi]
  415a9d:	jmp    0x6dc08ec4
  415aa2:	lds    esp,FWORD PTR [eax-0x28ac11d5]
  415aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aa9:	xchg   ebp,eax
  415aaa:	stc    
  415aab:	dec    eax
  415aac:	aam    0x3f
  415aae:	mov    bh,0x42
  415ab0:	add    BYTE PTR [ecx],dl
  415ab2:	sbb    ch,BYTE PTR [ecx-0x6c]
  415ab5:	xchg   edi,eax
  415ab6:	inc    esi
  415ab7:	(bad)  
  415ab9:	and    eax,0x4fc39c55
  415abe:	ins    BYTE PTR es:[edi],dx
  415abf:	ja     0x415b21
  415ac1:	sbb    al,0x54
  415ac3:	rol    bl,cl
  415ac5:	jp     0x415a64
  415ac7:	(bad)  
  415ac8:	loop   0x415a7a
  415aca:	mov    ds:0x214df973,eax
  415acf:	std    
  415ad0:	jae    0x415ae3
  415ad2:	fist   DWORD PTR [ecx]
  415ad4:	inc    ecx
  415ad5:	mov    BYTE PTR [edi+esi*8-0x21],ah
  415ad9:	sbb    bh,BYTE PTR [edx+0x5dcb6c63]
  415adf:	dec    edx
  415ae0:	ins    DWORD PTR es:[edi],dx
  415ae1:	hlt    
  415ae2:	dec    edx
  415ae3:	xchg   ebx,eax
  415ae4:	icebp  
  415ae5:	pop    edx
  415ae6:	call   0xe995:0xf98a38d1
  415aed:	das    
  415aee:	jl     0x415b2d
  415af0:	or     BYTE PTR [ebx+0x56],dl
  415af3:	jne    0x415a92
  415af5:	inc    ebp
  415af6:	pop    ecx
  415af7:	hlt    
  415af8:	dec    ebx
  415af9:	add    DWORD PTR [esi],ecx
  415afb:	xchg   esp,eax
  415afc:	test   BYTE PTR [edi],ah
  415afe:	mov    bl,0x46
  415b00:	jae    0x415b1d
  415b02:	mov    ebp,0x993107eb
  415b07:	sahf   
  415b08:	dec    ecx
  415b09:	mov    ecx,0x3d5a26dc
  415b0e:	aaa    
  415b0f:	and    al,0xf
  415b11:	test   DWORD PTR [ecx],edi
  415b13:	lods   eax,DWORD PTR ds:[esi]
  415b14:	sub    BYTE PTR [ebx-0x4d],dh
  415b17:	fiadd  DWORD PTR fs:[edx]
  415b1a:	xchg   esp,eax
  415b1b:	xchg   BYTE PTR [ebx-0x17dfa461],dh
  415b21:	sbb    esp,DWORD PTR [ebx]
  415b23:	mov    bl,BYTE PTR [ebx-0x22]
  415b26:	fisttp QWORD PTR [edi+0x77ef0134]
  415b2c:	sub    al,0x7a
  415b2e:	adc    DWORD PTR [edi],esi
  415b30:	inc    eax
  415b31:	adc    BYTE PTR [eax+0x548a365b],0x48
  415b38:	pop    edi
  415b39:	push   esi
  415b3a:	mov    edx,eax
  415b3c:	inc    edi
  415b3d:	call   0x2e52:0xb3c38189
  415b44:	out    0xac,al
  415b46:	pop    ebx
  415b47:	mov    DWORD PTR [edi+0x3613403f],edx
  415b4d:	mov    ch,BYTE PTR [eax]
  415b4f:	das    
  415b50:	push   edi
  415b51:	add    edx,edi
  415b53:	int    0x17
  415b55:	or     eax,ebp
  415b57:	or     BYTE PTR [edi],cl
  415b59:	cs inc ebp
  415b5b:	sbb    eax,0x8ad64b75
  415b60:	mov    esp,0xe88cff98
  415b65:	xchg   esp,eax
  415b66:	scas   al,BYTE PTR es:[edi]
  415b67:	push   edx
  415b68:	outs   dx,DWORD PTR ds:[esi]
  415b6a:	dec    esi
  415b6b:	fs push 0x5281f3b4
  415b71:	out    dx,al
  415b72:	repz mov ds:0x41c55ede,eax
  415b78:	data16 add al,0xa2
  415b7b:	xchg   edx,eax
  415b7c:	pop    edx
  415b7d:	lock mov ch,BYTE PTR gs:[esi]
  415b81:	push   ss
  415b82:	das    
  415b83:	ins    BYTE PTR es:[edi],dx
  415b84:	sub    eax,0xbfddef47
  415b89:	lahf   
  415b8a:	mov    ebp,0x18e3f63f
  415b8f:	lods   al,BYTE PTR ds:[esi]
  415b90:	xlat   BYTE PTR ds:[ebx]
  415b91:	push   ss
  415b92:	imul   edx,DWORD PTR [edx],0xd90bd49c
  415b98:	inc    ecx
  415b99:	xchg   esi,eax
  415b9a:	jg     0x415b6a
  415b9c:	pop    edi
  415b9d:	inc    ebp
  415b9e:	rcr    BYTE PTR [ebx-0x6f],0x82
  415ba2:	shr    DWORD PTR [ebx],cl
  415ba4:	test   al,0xd2
  415ba6:	and    ebx,edx
  415ba8:	mov    ecx,0x4e4572aa
  415bad:	iret   
  415bae:	data16 jecxz 0x415b36
  415bb1:	inc    esp
  415bb2:	sub    esp,edx
  415bb4:	mov    esi,edx
  415bb6:	pop    ebx
  415bb7:	mov    esi,0x123efe66
  415bbc:	jl     0x415b60
  415bbe:	icebp  
  415bbf:	shl    ch,cl
  415bc1:	mov    eax,ds:0xb2f0269d
  415bc6:	popa   
  415bc7:	xchg   esi,eax
  415bc8:	mov    eax,0x5a6bc4e
  415bcd:	dec    ebx
  415bce:	out    0x8e,eax
  415bd0:	jnp    0x415b65
  415bd2:	push   ds
  415bd3:	and    bl,0xfd
  415bd6:	loopne 0x415c0e
  415bd8:	popa   
  415bd9:	push   ds
  415bda:	xor    esi,DWORD PTR [ebp-0x48]
  415bdd:	lock pop edi
  415bdf:	sbb    bl,BYTE PTR [edi]
  415be1:	sbb    bh,cl
  415be3:	xlat   BYTE PTR ds:[ebx]
  415be4:	adc    DWORD PTR [ecx],ecx
  415be6:	and    ebp,DWORD PTR ds:0xe19637d1
  415bec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bed:	inc    ebp
  415bee:	(bad)  
  415bef:	repz mov WORD PTR [edx+0x660360dc],gs
  415bf6:	lods   al,BYTE PTR ds:[esi]
  415bf7:	jbe    0x415b85
  415bf9:	jne    0x415b96
  415bfb:	popf   
  415bfc:	(bad)
  415c00:	push   ss
  415c01:	scas   al,BYTE PTR es:[edi]
  415c02:	dec    edi
  415c03:	lods   eax,DWORD PTR ds:[esi]
  415c04:	push   edx
  415c05:	mov    ebp,0x8caea98a
  415c0a:	jns    0x415c72
  415c0c:	je     0x415c61
  415c0e:	scas   eax,DWORD PTR es:[edi]
  415c0f:	xchg   esi,eax
  415c10:	cmp    esi,esp
  415c12:	sbb    BYTE PTR [esi],al
  415c14:	jno    0x415c5b
  415c16:	sub    esi,DWORD PTR [ecx-0x51e1da60]
  415c1c:	(bad)  
  415c1d:	popa   
  415c1e:	out    dx,eax
  415c1f:	hlt    
  415c20:	(bad)  
  415c22:	pop    esp
  415c23:	and    dh,BYTE PTR [edx-0x1ac1fb7c]
  415c29:	popa   
  415c2a:	mov    edi,0xb98a0ddb
  415c2f:	ins    DWORD PTR es:[edi],dx
  415c30:	inc    esp
  415c31:	pop    esi
  415c32:	imul   ecx,DWORD PTR [edx-0x7cf9d31d],0xffffffec
  415c39:	pop    ds
  415c3a:	lock cli 
  415c3c:	in     al,0x3f
  415c3e:	jl     0x415c20
  415c40:	push   ebx
  415c41:	cmp    BYTE PTR [bp+si-0x5f],cl
  415c45:	je     0x415c7a
  415c47:	(bad)  
  415c48:	(bad)  
  415c49:	es mov esp,0x603d612
  415c4f:	jl     0x415cc6
  415c51:	dec    edi
  415c52:	aam    0x1f
  415c54:	xchg   esi,eax
  415c55:	or     al,0xf0
  415c57:	stos   BYTE PTR es:[edi],al
  415c58:	popf   
  415c59:	jmp    0x415c6f
  415c5b:	rol    bl,1
  415c5d:	or     BYTE PTR [esi],dl
  415c5f:	mov    ebp,edi
  415c61:	inc    ebp
  415c62:	(bad)  
  415c63:	xlat   BYTE PTR ds:[ebx]
  415c64:	mov    ecx,0xd0e98c74
  415c69:	mov    eax,ds:0x142d6277
  415c6e:	scas   al,BYTE PTR es:[edi]
  415c6f:	push   esp
  415c70:	mov    ebx,0x6458417e
  415c75:	sbb    DWORD PTR [edx-0x50],esi
  415c78:	xchg   ecx,eax
  415c79:	cmp    esp,eax
  415c7b:	test   eax,0xcdfff035
  415c80:	dec    edx
  415c81:	xlat   BYTE PTR ds:[ebx]
  415c82:	cli    
  415c83:	loopne 0x415c81
  415c85:	addr16 (bad) 
  415c87:	jne    0x415c38
  415c89:	aas    
  415c8a:	push   cs
  415c8b:	int3   
  415c8c:	retf   
  415c8d:	inc    esi
  415c8e:	fwait
  415c8f:	cmp    esp,esp
  415c91:	ins    DWORD PTR es:[edi],dx
  415c92:	add    ah,BYTE PTR [edx-0x71]
  415c95:	xchg   esp,eax
  415c96:	lds    esp,FWORD PTR ds:0xcf16efa6
  415c9c:	push   ebp
  415c9d:	in     eax,0x8
  415c9f:	pop    ecx
  415ca0:	xlat   BYTE PTR ds:[ebx]
  415ca1:	rcr    BYTE PTR [ecx-0x63],cl
  415ca4:	retf   
  415ca5:	jecxz  0x415d02
  415ca7:	pop    ds
  415ca8:	xchg   ecx,eax
  415ca9:	inc    ecx
  415caa:	sub    DWORD PTR [edx+edx*4-0x499e196e],edx
  415cb1:	mul    BYTE PTR [edx]
  415cb3:	sbb    dh,BYTE PTR [eax-0x727636f1]
  415cb9:	dec    ebp
  415cba:	push   0xd
  415cbc:	xor    eax,0x75b51941
  415cc1:	and    eax,0x1a49584c
  415cc6:	jp     0x415ccd
  415cc8:	dec    ebx
  415cc9:	mov    cl,0xe2
  415ccb:	jle    0x415c74
  415ccd:	mov    ah,0x76
  415ccf:	mov    dh,BYTE PTR [esi-0x51bc082e]
  415cd5:	xor    edx,ebp
  415cd7:	dec    ebp
  415cd8:	adc    DWORD PTR [esi],edi
  415cda:	or     esi,DWORD PTR [edi+edi*4]
  415cdd:	loop   0x415cd9
  415cdf:	fld    TBYTE PTR [esi-0x3e]
  415ce2:	or     eax,0x2ff03305
  415ce7:	ins    BYTE PTR es:[edi],dx
  415ce8:	cld    
  415ce9:	cli    
  415cea:	inc    si
  415cec:	xchg   edx,eax
  415ced:	mov    ecx,0x4a9d7c04
  415cf2:	leave  
  415cf3:	mov    bl,0xdc
  415cf5:	inc    esi
  415cf6:	xor    edx,ebx
  415cf8:	iret   
  415cf9:	xor    edi,DWORD PTR [ebx-0x54e8b402]
  415cff:	jecxz  0x415d4c
  415d01:	mov    esp,DWORD PTR [edi+edx*4]
  415d04:	push   0x49ffbc4c
  415d09:	xor    BYTE PTR [ebx+0x2c],al
  415d0c:	adc    dh,BYTE PTR [ebx+0x27]
  415d0f:	in     eax,dx
  415d10:	dec    esp
  415d11:	ja     0x415d8b
  415d13:	adc    eax,0x454dac13
  415d18:	call   0x18f5471a
  415d1d:	and    BYTE PTR [edx-0xecb3516],dl
  415d23:	ss mov edi,0x5ea6c7d5
  415d29:	jmp    0x415cf1
  415d2b:	aam    0x82
  415d2d:	add    DWORD PTR [esi+0x3c],ebp
  415d30:	outs   dx,DWORD PTR ds:[esi]
  415d31:	add    al,0x6e
  415d33:	repz imul eax,DWORD PTR [esi-0x6459c078],0xcb8b29d8
  415d3e:	xchg   esp,eax
  415d3f:	ret    
  415d40:	cmc    
  415d41:	fs int3 
  415d43:	and    DWORD PTR [esi],0xafffff30
  415d49:	inc    eax
  415d4a:	xchg   ecx,eax
  415d4b:	les    edi,FWORD PTR [edi+esi*2-0xb183594]
  415d52:	test   BYTE PTR [ebx+0x33e382c2],cl
  415d58:	jmp    0x415d0e
  415d5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d5b:	and    al,0x7a
  415d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d5e:	push   ds
  415d5f:	out    0xf3,al
  415d61:	lods   eax,DWORD PTR ds:[esi]
  415d62:	jb     0x415d8d
  415d64:	out    0x3,al
  415d66:	add    al,0x72
  415d68:	lods   eax,DWORD PTR ds:[esi]
  415d69:	mov    dl,0x23
  415d6b:	and    DWORD PTR [eax-0x4279c0e8],ebp
  415d71:	push   0xffffffb3
  415d73:	in     eax,dx
  415d74:	scas   al,BYTE PTR es:[edi]
  415d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d76:	push   edi
  415d77:	fbld   TBYTE PTR [ebx+0xb0a2cea]
  415d7d:	jo     0x415d20
  415d7f:	aad    0xaf
  415d81:	test   BYTE PTR [eax+0x70],al
  415d84:	ds ja  0x415d32
  415d87:	sub    dl,BYTE PTR [eax-0x2e60ef44]
  415d8d:	inc    eax
  415d8e:	out    dx,eax
  415d8f:	test   BYTE PTR [edi-0x5048c99],cl
  415d95:	adc    BYTE PTR [ebx+0x29da1faa],cl
  415d9b:	cmp    esp,eax
  415d9d:	mov    dh,ah
  415d9f:	push   esp
  415da0:	(bad)  
  415da1:	sbb    eax,0xd7b9c293
  415da6:	sub    eax,0xd9696159
  415dab:	dec    eax
  415dac:	in     eax,dx
  415dad:	jns    0x415d42
  415daf:	fist   WORD PTR [eax-0x6c]
  415db2:	ret    
  415db3:	mov    ds:0xae6f8e43,eax
  415db8:	je     0x415e39
  415dba:	mov    ch,0x44
  415dbc:	mov    BYTE PTR [edx+0x199e703],ch
  415dc2:	and    cl,BYTE PTR [esi]
  415dc4:	(bad)  
  415dc5:	es jle 0x415d7a
  415dc8:	out    dx,al
  415dc9:	sbb    DWORD PTR [ecx-0xe3a2e64],ebp
  415dcf:	cmp    al,0x41
  415dd1:	push   esi
  415dd2:	xlat   BYTE PTR ds:[ebx]
  415dd3:	fistp  QWORD PTR ds:0xe2cbd209
  415dd9:	fwait
  415dda:	adc    edx,DWORD PTR [eax-0x3644b9dd]
  415de0:	mov    esp,0xe470a3f2
  415de5:	jbe    0x415e2b
  415de7:	adc    al,0x51
  415de9:	shl    DWORD PTR [ebx-0x5dfc2c73],0xfc
  415df0:	(bad)  
  415df1:	leave  
  415df2:	xchg   ebp,edx
  415df4:	ffreep st(3)
  415df6:	popf   
  415df7:	pop    edx
  415df8:	cmp    ah,cl
  415dfa:	push   es
  415dfb:	ds cld 
  415dfd:	xchg   BYTE PTR [ebx-0x4f],ah
  415e00:	mov    edx,0x3c8eb8ca
  415e05:	into   
  415e06:	lods   eax,DWORD PTR ds:[esi]
  415e07:	xor    BYTE PTR ds:0xdcb23ec,ch
  415e0d:	imul   edi,DWORD PTR [ecx+0x77],0x46
  415e11:	js     0x415da8
  415e13:	lods   eax,DWORD PTR ds:[esi]
  415e14:	dec    ecx
  415e15:	cdq    
  415e16:	jae    0x415e5d
  415e18:	mov    eax,0x7963f441
  415e1d:	cmp    DWORD PTR [ebx],esi
  415e1f:	(bad)  
  415e20:	xor    edx,DWORD PTR [esi-0x51bfece1]
  415e26:	add    BYTE PTR [ebp+0x50a0de21],0x3c
  415e2d:	push   ebp
  415e2e:	or     al,0xa8
  415e30:	xor    ecx,edi
  415e32:	icebp  
  415e33:	pop    ecx
  415e34:	stos   DWORD PTR es:[edi],eax
  415e35:	ret    0xde48
  415e38:	cwde   
  415e39:	push   ebp
  415e3a:	outs   dx,DWORD PTR ds:[esi]
  415e3b:	popf   
  415e3c:	sub    al,0xd6
  415e3e:	ja     0x415dd7
  415e40:	cmp    eax,0xcff7002e
  415e45:	sbb    DWORD PTR [esi+edx*4],edx
  415e48:	mov    al,0x73
  415e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e4b:	sub    al,0x2f
  415e4d:	jmp    0x41f:0x39223109
  415e54:	mov    edx,0x6d3d2d63
  415e59:	xchg   DWORD PTR [ecx+0x68704ce9],ebp
  415e5f:	jg     0x415e57
  415e61:	pop    ebx
  415e62:	dec    ecx
  415e63:	mov    ecx,DWORD PTR [edi-0x10]
  415e66:	das    
  415e67:	jns    0x415ecb
  415e69:	inc    ecx
  415e6a:	aam    0x2c
  415e6c:	adc    ecx,ebx
  415e6e:	mov    ah,BYTE PTR [edi]
  415e70:	mov    edx,DWORD PTR [ebx+0x55]
  415e73:	mov    WORD PTR [ecx+0x45],ds
  415e76:	mov    al,ds:0xbd08030b
  415e7b:	mov    edx,0x8c814bf9
  415e80:	(bad)  
  415e81:	das    
  415e82:	repz mov esp,0xbc5f207c
  415e88:	jo     0x415e4e
  415e8a:	sbb    eax,DWORD PTR [edx+0x4e]
  415e8d:	mov    ah,0x77
  415e8f:	cdq    
  415e90:	pop    edx
  415e91:	mov    edi,0x7ad72b60
  415e96:	inc    edx
  415e97:	adc    eax,0x356e1ea6
  415e9c:	cdq    
  415e9d:	test   eax,0xc98652ed
  415ea2:	neg    dl
  415ea4:	out    dx,eax
  415ea5:	std    
  415ea6:	dec    esi
  415ea7:	(bad)  
  415ea8:	pop    eax
  415ea9:	mov    eax,0xdfd475a7
  415eae:	mov    BYTE PTR [edi-0x60],ch
  415eb1:	xor    dl,BYTE PTR [eax]
  415eb3:	sbb    eax,0xb8ca5b8f
  415eb8:	xchg   DWORD PTR [ebx+ebx*2],ebx
  415ebb:	aas    
  415ebc:	cmp    edx,DWORD PTR [ebx+0x26]
  415ebf:	adc    dh,ch
  415ec1:	fldenv [ecx-0x6d]
  415ec4:	mov    ecx,0x5a557918
  415ec9:	sub    BYTE PTR [ebx+0x1cf6b27a],0xd7
  415ed0:	leave  
  415ed1:	inc    esi
  415ed2:	loopne 0x415f3e
  415ed4:	outs   dx,DWORD PTR ds:[esi]
  415ed5:	fcmovu st,st(5)
  415ed7:	and    BYTE PTR [ebp-0x30b9de8c],bh
  415edd:	cvtdq2ps xmm1,xmm7
  415ee0:	or     DWORD PTR [eax+0xbbfab56],0x6b
  415ee7:	iret   
  415ee8:	rcr    BYTE PTR [ecx-0x24],cl
  415eeb:	cmp    BYTE PTR [esi],dh
  415eed:	xor    ebx,DWORD PTR [esi+esi*4+0x27436ce1]
  415ef4:	mov    ebx,0x2106b6ad
  415ef9:	outs   dx,BYTE PTR ds:[esi]
  415efa:	loop   0x415eb9
  415efc:	mov    edx,0xf847da72
  415f01:	popw   ss
  415f03:	add    eax,0x51415e46
  415f08:	dec    ecx
  415f09:	xchg   di,ax
  415f0b:	and    esi,DWORD PTR [eax-0x745272de]
  415f11:	xchg   ebp,eax
  415f12:	dec    esp
  415f13:	fild   WORD PTR [esi]
  415f15:	inc    DWORD PTR [ebp+ecx*4+0x1ebd38db]
  415f1c:	push   esi
  415f1d:	mov    edi,0xeb8727c9
  415f22:	scas   eax,DWORD PTR es:[edi]
  415f23:	and    BYTE PTR ds:0x73e7bb50,dl
  415f29:	push   es
  415f2a:	push   esp
  415f2b:	stos   BYTE PTR es:[edi],al
  415f2c:	add    BYTE PTR [edi],bl
  415f2e:	xor    DWORD PTR [ecx+0x7e],edx
  415f31:	jnp    0x415f65
  415f33:	repz push 0xe958e0d8
  415f39:	inc    esp
  415f3a:	(bad)  
  415f3c:	xchg   edi,eax
  415f3d:	stos   BYTE PTR es:[edi],al
  415f3e:	shl    BYTE PTR [eax-0x3d],cl
  415f41:	stos   BYTE PTR es:[edi],al
  415f42:	mov    eax,0x1028f723
  415f47:	inc    ecx
  415f48:	(bad)  
  415f49:	nop
  415f4a:	aam    0x1a
  415f4c:	pop    edx
  415f4d:	and    BYTE PTR [ecx],bh
  415f4f:	test   DWORD PTR [esi+0x750acfaa],edi
  415f55:	pop    esi
  415f56:	and    al,0x99
  415f58:	cmp    BYTE PTR [edi+0x3e150070],cl
  415f5e:	add    BYTE PTR [ecx],ah
  415f60:	cdq    
  415f61:	xor    BYTE PTR [edi-0x37af75a9],ah
  415f67:	jmp    0x5b2663ba
  415f6c:	push   esp
  415f6d:	enter  0xfab1,0x4f
  415f71:	(bad)  
  415f72:	repnz in al,0xf5
  415f75:	jg     0x415fbc
  415f77:	pop    ds
  415f78:	cmp    al,0xd1
  415f7a:	daa    
  415f7b:	das    
  415f7c:	push   ss
  415f7d:	mov    bh,0xa7
  415f7f:	out    dx,eax
  415f80:	mov    bl,0x82
  415f82:	imul   eax,DWORD PTR [esi-0x30],0x69
  415f86:	mov    al,ds:0xc7eb898c
  415f8b:	push   0xffffffdf
  415f8d:	mov    ebp,0xa1166e2c
  415f92:	xchg   edi,eax
  415f93:	pop    esp
  415f94:	and    DWORD PTR [eax],ebp
  415f96:	jne    0x415fca
  415f98:	ins    BYTE PTR es:[edi],dx
  415f99:	pop    ss
  415f9a:	ja     0x415f51
  415f9c:	and    eax,0xd2222adb
  415fa1:	nop
  415fa2:	in     eax,dx
  415fa3:	add    bh,dl
  415fa5:	jge    0x416017
  415fa7:	test   DWORD PTR gs:[edi],edi
  415faa:	sub    esp,DWORD PTR [ebp-0x5]
  415fad:	aas    
  415fae:	lock add DWORD PTR [eax-0x33],esp
  415fb2:	pop    ebx
  415fb3:	loop   0x415f69
  415fb5:	push   0xe68e23a1
  415fba:	add    al,0x6c
  415fbc:	push   esp
  415fbd:	sbb    al,0xf7
  415fbf:	pop    esp
  415fc0:	out    dx,al
  415fc1:	int3   
  415fc2:	fcmovne st,st(4)
  415fc4:	xchg   ecx,eax
  415fc5:	loop   0x415f5c
  415fc7:	add    DWORD PTR [ecx+0x64],0x12bab626
  415fce:	mul    BYTE PTR [eax-0x25]
  415fd1:	push   edx
  415fd2:	sbb    eax,0x75ef81e3
  415fd7:	iret   
  415fd8:	call   DWORD PTR [ecx]
  415fda:	ins    DWORD PTR es:[edi],dx
  415fdb:	inc    ecx
  415fdc:	fnstenv [ebp-0x27]
  415fdf:	pusha  
  415fe0:	xchg   ebx,eax
  415fe1:	xchg   esp,eax
  415fe2:	aam    0xbe
  415fe4:	mov    ds:0x395a50dc,al
  415fe9:	mov    DWORD PTR [edx+ebx*8+0x5],0x2f5f152
  415ff1:	cmc    
  415ff2:	sar    ah,cl
  415ff4:	idiv   BYTE PTR [ebx+0x55]
  415ff7:	pusha  
  415ff8:	push   cs
  415ff9:	sbb    esp,DWORD PTR [eax+esi*1-0x14]
  415ffd:	push   ecx
  415ffe:	jmp    0x386b:0x4ab90af0
  416005:	push   0xffffff87
  416007:	xchg   esp,eax
  416008:	xchg   ebx,eax
  416009:	pop    esp
  41600a:	push   cs
  41600b:	or     DWORD PTR [ecx+0x34],edi
  41600e:	rcl    BYTE PTR [edx-0xb],0x7c
  416012:	xor    DWORD PTR [edi+0x1c8a207b],0x412cd24f
  41601c:	dec    ecx
  41601d:	sbb    edi,ecx
  41601f:	outs   dx,BYTE PTR ds:[esi]
  416020:	rcl    eax,1
  416022:	pop    ds
  416023:	test   eax,0xde410cad
  416028:	lods   al,BYTE PTR ds:[esi]
  416029:	mov    ds:0xe73b71c2,eax
  41602e:	inc    esi
  41602f:	or     al,BYTE PTR [edx]
  416031:	mov    ds:0xb223ee93,eax
  416036:	pop    ebp
  416037:	jb     0x415fc8
  416039:	packuswb mm4,QWORD PTR [eax-0x20]
  41603d:	jmp    0x77dc:0x2dbccb6
  416044:	push   ss
  416045:	sbb    BYTE PTR [edi+0x4a575c11],cl
  41604b:	rcl    BYTE PTR [ecx+0x33],cl
  41604e:	add    dl,BYTE PTR [eax+0x5a]
  416051:	cli    
  416052:	sahf   
  416053:	xor    bl,BYTE PTR [eax-0xb]
  416056:	mov    edi,ebp
  416058:	mov    dh,0xe1
  41605a:	pop    esi
  41605b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41605c:	inc    edi
  41605d:	sub    eax,0x8c33e558
  416062:	in     al,dx
  416063:	shl    DWORD PTR [esi],0xd7
  416066:	fcomp  DWORD PTR [ecx-0x3f000a63]
  41606c:	add    BYTE PTR [ebx-0x40058e22],bl
  416072:	fs cmp eax,0x1365b969
  416078:	push   es
  416079:	cdq    
  41607a:	mov    esi,0x5d2fff3
  41607f:	retf   0x3f8b
  416082:	and    al,0x52
  416084:	sub    DWORD PTR [esi+0x2e0d376a],0xe300d550
  41608e:	push   ebx
  41608f:	push   ss
  416090:	fs push eax
  416092:	pop    ebx
  416093:	adc    al,0x37
  416095:	retf   0x2f5c
  416098:	out    0xee,al
  41609a:	lods   eax,DWORD PTR ds:[esi]
  41609b:	cmp    eax,0x37076011
  4160a0:	inc    edx
  4160a1:	cmp    ecx,ecx
  4160a3:	and    DWORD PTR [ebp-0x2f],esi
  4160a6:	jns    0x416064
  4160a8:	imul   ecx,DWORD PTR [edx+0x18326441],0xffffffc9
  4160af:	int    0x64
  4160b1:	mov    bl,0xa5
  4160b3:	cwde   
  4160b4:	out    dx,eax
  4160b5:	stos   DWORD PTR es:[edi],eax
  4160b6:	mov    DWORD PTR [ebx],ecx
  4160b8:	loope  0x4160b6
  4160ba:	das    
  4160bb:	and    eax,0x1fff55ff
  4160c0:	mov    dl,0xc8
  4160c2:	loope  0x4160bb
  4160c4:	dec    ecx
  4160c5:	jne    0x416090
  4160c7:	fs sbb ebp,esi
  4160ca:	jno    0x41608e
  4160cc:	jge    0x41605b
  4160ce:	int3   
  4160cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160d0:	mov    BYTE PTR [esi+0x78863d5c],bh
  4160d6:	pusha  
  4160d7:	sbb    edi,eax
  4160d9:	shr    BYTE PTR [edi-0x20],1
  4160dc:	push   edx
  4160dd:	jl     0x4160c4
  4160df:	push   edx
  4160e0:	ins    DWORD PTR es:[edi],dx
  4160e1:	(bad)  
  4160e2:	into   
  4160e3:	push   edx
  4160e4:	or     dh,0xc5
  4160e7:	xchg   BYTE PTR [edx-0x2bd05cae],bh
  4160ed:	shr    DWORD PTR [ebp+0x7ab92a6e],0x87
  4160f4:	cld    
  4160f5:	retf   0x8f6c
  4160f8:	adc    DWORD PTR [edi],ecx
  4160fa:	jle    0x416156
  4160fc:	xor    eax,0xfa262bb7
  416101:	mov    ah,0x85
  416103:	cmp    DWORD PTR [ecx-0x22],esp
  416106:	in     al,0x74
  416108:	add    eax,0xd333cdfd
  41610d:	(bad)  
  41610e:	out    0xfa,al
  416110:	jecxz  0x416124
  416112:	pop    ebp
  416113:	pop    eax
  416114:	jne    0x4160c0
  416116:	xchg   ecx,eax
  416117:	inc    ebp
  416118:	cld    
  416119:	jbe    0x4160c7
  41611b:	(bad)  
  41611d:	xchg   ebx,eax
  41611e:	sub    BYTE PTR [edx+0x12],bl
  416121:	(bad)  
  416122:	mov    ds,WORD PTR [ebp+0x4b]
  416125:	scas   al,BYTE PTR es:[edi]
  416126:	cmp    BYTE PTR [esi-0x6b308044],ah
  41612c:	and    al,0x81
  41612e:	push   edx
  41612f:	les    ecx,FWORD PTR [eax]
  416131:	jle    0x4160f6
  416133:	daa    
  416134:	lods   al,BYTE PTR ds:[esi]
  416135:	add    eax,0x8174eacf
  41613a:	aad    0xca
  41613c:	xchg   ebx,eax
  41613d:	ins    BYTE PTR es:[edi],dx
  41613e:	mov    WORD PTR [esi],gs
  416140:	xchg   edx,eax
  416141:	mov    al,BYTE PTR [ebp-0x4ae381d8]
  416147:	inc    ebx
  416148:	xor    al,BYTE PTR [edi]
  41614a:	test   DWORD PTR [eax],ebx
  41614c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41614d:	out    0x5a,al
  41614f:	in     al,dx
  416150:	or     DWORD PTR [esi-0x51],0xffffffea
  416154:	fisub  DWORD PTR [ebx+ebx*4+0x7d]
  416158:	lahf   
  416159:	jg     0x41616e
  41615b:	inc    esi
  41615c:	pop    esp
  41615d:	xchg   ecx,eax
  41615e:	and    edi,DWORD PTR [esi-0x2acb96b0]
  416164:	add    al,0x94
  416166:	xor    al,BYTE PTR [ebx+0x1b47ab2a]
  41616c:	or     eax,0xdd971c41
  416171:	lock mov dl,0x7
  416174:	jmp    0x8e3844de
  416179:	cmp    ebp,DWORD PTR [edi-0x46]
  41617c:	cmp    al,0xe1
  41617e:	test   DWORD PTR [esi+eax*1],0x40786c98
  416185:	out    0xf8,al
  416187:	hlt    
  416188:	test   al,0xb2
  41618a:	mov    ds:0xf37f0871,al
  41618f:	push   eax
  416190:	sbb    al,0xd3
  416192:	sbb    BYTE PTR [edx+0x2a2c9296],ah
  416198:	(bad)  
  416199:	aam    0x36
  41619b:	inc    edi
  41619c:	xchg   edx,eax
  41619d:	sbb    ch,bl
  41619f:	repz add edi,DWORD PTR [ebp-0x26]
  4161a3:	std    
  4161a4:	ins    BYTE PTR es:[edi],dx
  4161a5:	cmp    al,0x68
  4161a7:	out    0xfa,al
  4161a9:	dec    esp
  4161aa:	mov    bh,0x68
  4161ac:	mov    esi,0x97c7bb0c
  4161b1:	inc    esp
  4161b2:	(bad)  
  4161b3:	push   eax
  4161b4:	mov    edx,0xf77354d2
  4161b9:	xchg   ebx,edi
  4161bb:	or     eax,0x15476c5a
  4161c0:	jno    0x4161f5
  4161c2:	outs   dx,DWORD PTR ds:[esi]
  4161c3:	mov    ch,bh
  4161c5:	js     0x4161c7
  4161c7:	arpl   sp,cx
  4161c9:	inc    esp
  4161ca:	pop    ecx
  4161cb:	jne    0x41619c
  4161cd:	push   ds
  4161ce:	cmp    esp,ebx
  4161d0:	inc    esp
  4161d1:	ins    DWORD PTR es:[edi],dx
  4161d2:	out    dx,al
  4161d3:	add    bh,BYTE PTR [ecx]
  4161d5:	cmp    al,BYTE PTR [edi+ebp*2-0x12eb318f]
  4161dc:	imul   ebx,DWORD PTR [edx+eiz*1-0x47e5d769],0xf9c0c143
  4161e7:	daa    
  4161e8:	mov    esp,ecx
  4161ea:	ret    0x14c8
  4161ed:	jge    0x41619a
  4161ef:	dec    ebx
  4161f0:	hlt    
  4161f1:	fisub  DWORD PTR [edi+0x3c]
  4161f4:	inc    ebp
  4161f5:	and    DWORD PTR [ebx],0xffffff84
  4161f8:	adc    dh,BYTE PTR [edi-0x53]
  4161fb:	pop    ebx
  4161fc:	dec    ebp
  4161fd:	dec    ebx
  4161fe:	scas   al,BYTE PTR es:[edi]
  4161ff:	xor    ebp,DWORD PTR [ebx-0x264e74ba]
  416205:	dec    ebx
  416206:	mov    esp,esi
  416208:	xor    esp,DWORD PTR [esi]
  41620a:	and    al,0x2e
  41620c:	outs   dx,DWORD PTR ds:[esi]
  41620d:	in     al,0x96
  41620f:	adc    BYTE PTR [esi+ebx*1+0x517ad3b6],ch
  416216:	(bad)  
  416217:	popf   
  416218:	dec    ecx
  416219:	retf   
  41621a:	pop    ebx
  41621b:	jmp    ebp
  41621d:	cld    
  41621e:	daa    
  41621f:	inc    edi
  416220:	jmp    0x416294
  416222:	retf   0x22e6
  416225:	pop    ebp
  416226:	out    dx,eax
  416227:	rcl    BYTE PTR [edx-0x535f3b07],cl
  41622d:	ins    DWORD PTR es:[edi],dx
  41622e:	int3   
  41622f:	and    al,0xa7
  416231:	ins    DWORD PTR es:[edi],dx
  416232:	jmp    0xa6cf29f9
  416237:	jge    0x4162b2
  416239:	arpl   bp,di
  41623b:	lds    ebx,FWORD PTR [ecx+0x7a]
  41623e:	cld    
  41623f:	in     eax,0xc4
  416241:	jmp    0x41620b
  416243:	cmp    eax,0xfab2223b
  416248:	dec    eax
  416249:	aam    0x8b
  41624b:	push   es
  41624c:	and    al,0x1e
  41624e:	sbb    ch,al
  416250:	sbb    al,0x25
  416252:	test   ebx,edx
  416254:	(bad)
  416257:	mov    ds:0xefd77262,eax
  41625c:	aam    0x21
  41625e:	and    DWORD PTR [ebp+eax*4+0x6026760e],edi
  416265:	xchg   edi,eax
  416266:	add    DWORD PTR [ecx-0xdafd613],ebx
  41626c:	mov    eax,ds:0xb365cc7b
  416271:	arpl   bx,cx
  416273:	jg     0x41629b
  416275:	or     edx,DWORD PTR [ebx-0x196f8153]
  41627b:	pop    ebp
  41627c:	and    DWORD PTR [ebp-0x2e],0xffffffb7
  416280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416281:	inc    esi
  416282:	jo     0x416231
  416284:	cmp    DWORD PTR [edx+0xd2868b9],ebp
  41628a:	ja     0x416211
  41628c:	sti    
  41628d:	mov    ds:0x859b99d1,al
  416292:	lods   al,BYTE PTR ds:[esi]
  416293:	xlat   BYTE PTR ds:[ebx]
  416294:	mov    ebx,0xdcd17189
  416299:	jnp    0x41630b
  41629b:	sub    eax,eax
  41629d:	jns    0x4162ee
  41629f:	push   0x5a452e34
  4162a4:	mov    eax,ds:0x45403b2a
  4162a9:	xchg   ebx,eax
  4162aa:	add    DWORD PTR [edi-0x10],edi
  4162ad:	sub    DWORD PTR [ebp+ebx*4+0x4a],esi
  4162b1:	xor    eax,0x87a83239
  4162b6:	cmp    eax,0x12ef3985
  4162bb:	dec    ebp
  4162bc:	mov    bh,0x78
  4162be:	jg     0x41625b
  4162c0:	sahf   
  4162c1:	das    
  4162c2:	pop    edx
  4162c3:	xchg   DWORD PTR [edi],esp
  4162c5:	stos   BYTE PTR es:[edi],al
  4162c6:	fcomp  st(1)
  4162c8:	cld    
  4162c9:	and    eax,0x50ab1d19
  4162ce:	pushf  
  4162cf:	adc    ch,ah
  4162d1:	imul   BYTE PTR [edx-0x41d887c9]
  4162d7:	int3   
  4162d8:	out    0x7d,eax
  4162da:	out    0x94,eax
  4162dc:	std    
  4162dd:	loope  0x4162d5
  4162df:	cli    
  4162e0:	(bad)  
  4162e1:	mov    ebx,0xc9cb5876
  4162e6:	pop    edx
  4162e7:	xchg   esp,eax
  4162e8:	xchg   edx,eax
  4162e9:	push   es
  4162ea:	add    eax,0x355f46cf
  4162ef:	dec    ebx
  4162f0:	test   DWORD PTR [edi],eax
  4162f2:	cmc    
  4162f3:	mov    al,0xd
  4162f5:	in     eax,0x5b
  4162f7:	inc    ecx
  4162f8:	retf   0x991a
  4162fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162fc:	cli    
  4162fd:	(bad)  
  4162fe:	std    
  4162ff:	mov    ah,bh
  416301:	shl    DWORD PTR [esp+edi*2+0x411aed19],cl
  416308:	adc    al,0xd5
  41630a:	pop    es
  41630b:	mov    ds:0xf9c1201f,eax
  416310:	aad    0x54
  416312:	or     eax,0x42470dd4
  416317:	mov    edi,0x536bb387
  41631c:	hlt    
  41631d:	xchg   ebx,eax
  41631e:	mov    bh,0x5d
  416320:	mov    dl,0xfa
  416322:	aas    
  416323:	fprem  
  416325:	test   BYTE PTR [esi-0x5e],dh
  416328:	pushf  
  416329:	sbb    edx,DWORD PTR [edi+ebx*1-0x6121a53a]
  416330:	fs sbb eax,0x3bfc7db7
  416336:	jae    0x4162d8
  416338:	jns    0x41635e
  41633a:	addr16 data16 (bad) 
  41633d:	fisubr DWORD PTR [edi+eax*1+0x71847e6e]
  416344:	push   edi
  416345:	shl    DWORD PTR [ecx],cl
  416347:	xchg   esp,eax
  416348:	pushf  
  416349:	mov    dh,BYTE PTR [edi-0x3c203bfd]
  41634f:	and    bh,BYTE PTR [ebx+0x27]
  416352:	out    dx,eax
  416353:	xchg   edi,eax
  416354:	leave  
  416355:	jp     0x416385
  416357:	popf   
  416358:	jg     0x41633b
  41635a:	xor    ebx,DWORD PTR [esi]
  41635c:	jmp    0x7c7e:0x11ffdfae
  416363:	(bad)
  416368:	xor    BYTE PTR [esp+eax*4],0xfb
  41636c:	push   ebp
  41636d:	mov    ds:0xda63dd31,al
  416372:	cmp    al,BYTE PTR [edi]
  416374:	xchg   BYTE PTR [edx+0x2d534b35],ch
  41637a:	push   ss
  41637b:	push   ss
  41637c:	in     eax,dx
  41637d:	inc    ebx
  41637e:	out    dx,al
  41637f:	ret    0x2854
  416382:	scas   eax,DWORD PTR es:[edi]
  416383:	inc    esi
  416384:	ins    DWORD PTR es:[edi],dx
  416385:	pop    es
  416386:	inc    ecx
  416387:	in     al,0x8
  416389:	cmp    BYTE PTR [edi],0x10
  41638c:	cmp    DWORD PTR [eax+edx*4],0x7a
  416390:	xor    al,0xa0
  416392:	cmp    dl,BYTE PTR [edx]
  416394:	mov    ecx,0x42245c27
  416399:	xchg   ecx,eax
  41639a:	xchg   edi,eax
  41639b:	cmp    eax,0x5d1c41cd
  4163a0:	or     esp,0xffffffb0
  4163a3:	xchg   ecx,eax
  4163a4:	hlt    
  4163a5:	sbb    eax,0x6912902b
  4163aa:	(bad)  
  4163ab:	std    
  4163ac:	push   0x65b5c01c
  4163b1:	inc    edx
  4163b2:	add    dl,BYTE PTR [edi-0x7c94e9a2]
  4163b8:	sbb    al,bh
  4163ba:	sbb    al,0xb5
  4163bc:	sub    eax,0x5f27e3f
  4163c1:	dec    eax
  4163c2:	inc    edi
  4163c3:	mov    ebp,0xf6f801f4
  4163c8:	xor    DWORD PTR [eax],0xadbd2c2d
  4163ce:	mov    edi,0x1f050436
  4163d3:	ds xchg ebp,eax
  4163d5:	push   cs
  4163d6:	in     al,0xfc
  4163d8:	fld    QWORD PTR [ecx-0x3587146f]
  4163de:	jae    0x416450
  4163e0:	dec    edx
  4163e1:	(bad)  
  4163e2:	scas   al,BYTE PTR es:[edi]
  4163e3:	adc    eax,0xb73abd85
  4163e8:	dec    ebp
  4163e9:	jmp    0x416454
  4163eb:	and    eax,0x776e9fd7
  4163f0:	out    dx,eax
  4163f1:	fld    QWORD PTR [edx]
  4163f3:	xchg   ebp,eax
  4163f4:	iret   
  4163f5:	into   
  4163f6:	dec    ebx
  4163f7:	dec    edi
  4163f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163f9:	xlat   BYTE PTR ds:[ebx]
  4163fa:	mov    dh,0xdc
  4163fc:	das    
  4163fd:	dec    esp
  4163fe:	push   ebx
  4163ff:	adc    dh,BYTE PTR ds:0x63c2e751
  416405:	shl    BYTE PTR [ecx+0x93b6677],1
  41640b:	arpl   WORD PTR [edx-0x40],bp
  41640e:	push   edi
  41640f:	test   BYTE PTR [eax],0x6a
  416412:	jmp    0x4163da
  416414:	jmp    0x1515d40e
  416419:	fs in  eax,dx
  41641b:	(bad)  
  41641c:	jp     0x41646e
  41641e:	stc    
  41641f:	adc    al,0xc3
  416421:	fldenv [edx+0x44fac346]
  416427:	mov    edx,DWORD PTR [esi]
  416429:	outs   dx,BYTE PTR ds:[esi]
  41642a:	mov    dh,0x32
  41642c:	sbb    BYTE PTR [edx],al
  41642e:	test   al,0x8e
  416430:	clc    
  416431:	dec    edi
  416432:	sar    BYTE PTR [ebx-0x77847a79],0x7a
  416439:	ret    
  41643a:	sahf   
  41643b:	xchg   ebp,eax
  41643c:	xlat   BYTE PTR ds:[ebx]
  41643d:	cmp    eax,DWORD PTR ds:0x60e68d52
  416443:	mov    ds:0xc0ec4d52,eax
  416448:	or     ch,cl
  41644a:	cli    
  41644b:	popf   
  41644c:	fimul  DWORD PTR [edx+ecx*1]
  41644f:	mov    BYTE PTR [edx],cl
  416451:	mov    cl,0x7d
  416453:	pop    eax
  416454:	dec    esp
  416455:	(bad)  
  416456:	mov    DWORD PTR [ebx+0x10],eax
  416459:	fldcw  WORD PTR [edi]
  41645b:	cmp    al,0xb4
  41645d:	dec    esp
  41645e:	leave  
  41645f:	enter  0xa3e1,0xd8
  416463:	jnp    0x416413
  416465:	and    esi,DWORD PTR [edi-0xca5629c]
  41646b:	cld    
  41646c:	ss mov edx,0xc1e3c8db
  416472:	and    bl,BYTE PTR [ebp+0x4e]
  416475:	sbb    eax,0x3f7424b3
  41647a:	mov    dh,0xff
  41647c:	sub    cl,BYTE PTR [eax-0x6eab4f8f]
  416482:	mov    edx,0x18e073ff
  416487:	rcr    DWORD PTR [esi],cl
  416489:	add    BYTE PTR [ebx],bl
  41648b:	inc    esp
  41648c:	push   edx
  41648d:	mov    cl,0x80
  41648f:	push   esp
  416490:	jl     0x4164cd
  416492:	(bad)  
  416493:	ds int 0x17
  416496:	aam    0xfa
  416498:	fld    TBYTE PTR cs:[edx-0x6]
  41649c:	jmp    0x3acf4808
  4164a1:	push   ecx
  4164a2:	dec    edx
  4164a3:	popf   
  4164a4:	ret    
  4164a5:	sbb    al,0x44
  4164a7:	(bad)  
  4164a8:	sbb    bl,BYTE PTR [ecx+0x51]
  4164ab:	in     eax,dx
  4164ac:	enter  0x4484,0x6e
  4164b0:	sbb    BYTE PTR [eax-0x4],dl
  4164b3:	rcr    DWORD PTR [esi-0x4cce4e88],0x0
  4164ba:	aam    0x6e
  4164bc:	fstp   TBYTE PTR [esi+0x63e69317]
  4164c2:	jl     0x41645d
  4164c4:	pushf  
  4164c5:	dec    esi
  4164c6:	and    ebx,DWORD PTR [edx-0x5a]
  4164c9:	inc    edi
  4164ca:	push   ds
  4164cb:	jp     0x4164f8
  4164cd:	xchg   ecx,eax
  4164ce:	and    ah,BYTE PTR [edi]
  4164d0:	nop
  4164d1:	sahf   
  4164d2:	enter  0x84c4,0xd1
  4164d6:	inc    ebx
  4164d7:	push   es
  4164d8:	int    0x52
  4164da:	push   esp
  4164db:	adc    dh,al
  4164dd:	sbb    cl,BYTE PTR [ebp+0x40e62f47]
  4164e3:	cmp    ch,BYTE PTR [edx]
  4164e5:	rcr    DWORD PTR [edx+0x5f85e379],1
  4164eb:	adc    bh,BYTE PTR [ecx+0x7d]
  4164ee:	cmp    al,BYTE PTR [edi+edi*8+0x48]
  4164f2:	pop    ebp
  4164f3:	sar    BYTE PTR [esi+0x76],1
  4164f6:	out    0x29,eax
  4164f8:	sbb    al,0x2c
  4164fa:	mov    esp,0xb2ef5876
  4164ff:	stc    
  416500:	inc    eax
  416501:	inc    esi
  416502:	mov    cl,BYTE PTR [ebx+ebx*8-0x208f83]
  416509:	cmp    bh,BYTE PTR [edx+0x51b70da8]
  41650f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416510:	(bad)  
  416511:	test   BYTE PTR [ecx-0x80],ah
  416514:	pop    edx
  416515:	dec    esp
  416516:	fist   DWORD PTR [edx]
  416518:	ror    ecx,1
  41651a:	mov    bl,0xbd
  41651c:	pushf  
  41651d:	(bad)
  416520:	or     DWORD PTR [esi],ebp
  416522:	(bad)  
  416523:	ins    BYTE PTR es:[edi],dx
  416524:	fidiv  DWORD PTR [ebp-0x49]
  416527:	fstp   DWORD PTR ss:[ebp+0x13259714]
  41652e:	in     eax,0x96
  416530:	fwait
  416531:	bnd ss jge 0x4164eb
  416535:	sbb    bh,BYTE PTR [ebx]
  416537:	repz bound edx,QWORD PTR [ebx+eax*8+0x7d1edb8]
  41653f:	scas   eax,DWORD PTR es:[edi]
  416540:	push   ebp
  416541:	and    esi,edx
  416543:	loope  0x416561
  416545:	shr    BYTE PTR [esi+0x22],1
  416548:	push   ds
  416549:	xor    al,0x9e
  41654b:	pop    ebx
  41654c:	ins    DWORD PTR es:[edi],dx
  41654d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41654e:	xor    al,0x82
  416550:	test   eax,0x3791a905
  416555:	sar    edx,0xc1
  416558:	xor    ecx,DWORD PTR [esi-0x6d783a3e]
  41655e:	cli    
  41655f:	xor    edi,0xc473532e
  416565:	xchg   edx,eax
  416566:	push   esp
  416567:	sub    ebp,esp
  416569:	pop    DWORD PTR [ecx]
  41656b:	mov    ebx,0x90115ad3
  416570:	and    ebx,ebx
  416572:	mov    ?,ebx
  416574:	add    DWORD PTR [edx-0x50becc04],edi
  41657a:	in     al,0x42
  41657c:	adc    esi,DWORD PTR [ecx-0x3b149a7e]
  416582:	ret    0x44ab
  416585:	mov    ebp,gs
  416587:	or     eax,0xd516562c
  41658c:	add    cl,cl
  41658e:	call   0x5094f81e
  416593:	pushf  
  416594:	add    ecx,DWORD PTR [ecx+0x22a2d0b5]
  41659a:	(bad)  [edi]
  41659c:	pop    ebx
  41659d:	mov    al,0x8e
  41659f:	fidivr DWORD PTR [edx-0x18]
  4165a2:	data16 (bad) [ebx-0xc]
  4165a6:	jnp    0x416575
  4165a8:	hlt    
  4165a9:	mov    bh,BYTE PTR [esp+edx*8+0xae322b8]
  4165b0:	mov    dl,0xd8
  4165b2:	imul   ebp,DWORD PTR [ecx+0x51],0x7b513b4c
  4165b9:	add    edi,esi
  4165bb:	out    0xee,al
  4165bd:	fs push 0x40119ad4
  4165c3:	fadd   st,st(2)
  4165c5:	xchg   esi,eax
  4165c6:	jl     0x41654a
  4165c8:	mov    al,ds:0x768fc6e7
  4165cd:	fdiv   DWORD PTR [edx-0x6dee3b69]
  4165d3:	es mov ch,dl
  4165d6:	xor    BYTE PTR [esi+esi*4],ch
  4165d9:	sub    eax,0xdfd8b225
  4165de:	pop    esp
  4165df:	add    DWORD PTR [edx],esi
  4165e1:	push   esp
  4165e2:	mov    WORD PTR [ecx-0x53ef1a7a],?
  4165e8:	mov    ebx,DWORD PTR [ecx-0x54]
  4165eb:	jmp    FWORD PTR [ebp+0x763f25f7]
  4165f1:	mov    bh,0xf4
  4165f3:	mov    al,ds:0x2933ead4
  4165f8:	fs pop ebx
  4165fa:	jb     0x41663d
  4165fc:	das    
  4165fd:	loope  0x4165d5
  4165ff:	and    ecx,ebx
  416601:	jae    0x416625
  416603:	mov    al,fs:0x7aeb20a
  416609:	jns    0x4165b6
  41660b:	(bad)  
  41660c:	inc    edx
  41660d:	outs   dx,BYTE PTR ds:[esi]
  41660e:	sub    esi,ebp
  416610:	gs mov bh,0x6d
  416613:	fidiv  WORD PTR [esi+eax*1-0x69315b0b]
  41661a:	idiv   DWORD PTR [ecx]
  41661c:	dec    esi
  41661d:	mov    bh,0x44
  41661f:	mov    ecx,0xc4e52758
  416624:	loop   0x416636
  416626:	xor    eax,0x21d49a81
  41662b:	push   es
  41662c:	sar    ecx,1
  41662e:	jbe    0x4165d0
  416630:	(bad)  
  416631:	ss jl  0x416602
  416634:	dec    ecx
  416635:	inc    esi
  416636:	xor    BYTE PTR [esi-0x28d793e2],ch
  41663c:	sar    DWORD PTR [esi+0x8e56b70],0x82
  416643:	outs   dx,BYTE PTR ds:[esi]
  416644:	retf   0xbe2a
  416647:	add    bh,BYTE PTR [esi+eiz*2]
  41664a:	pop    esi
  41664b:	adc    BYTE PTR [edi],0x7f
  41664e:	push   ebx
  41664f:	inc    edx
  416650:	pop    eax
  416651:	fidiv  WORD PTR [ebx+0x25]
  416654:	cmp    eax,0x8720790b
  416659:	fld    TBYTE PTR [ebx-0x10d01186]
  41665f:	cmp    al,0xf5
  416661:	push   ebp
  416662:	aam    0xfd
  416664:	dec    esp
  416665:	sub    eax,eax
  416667:	leave  
  416668:	dec    edi
  416669:	cmp    eax,0xe8299fc4
  41666e:	loop   0x41664d
  416670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416671:	lds    esp,FWORD PTR [esi]
  416673:	bound  ecx,QWORD PTR [esi-0x38097fcb]
  416679:	adc    edx,ebp
  41667b:	test   eax,0xbfe71621
  416680:	fisubr WORD PTR [edi]
  416682:	fistp  WORD PTR ds:0x12929ef9
  416688:	stc    
  416689:	out    0x6,eax
  41668b:	test   al,0x99
  41668d:	ficom  WORD PTR [edx+eiz*4-0x458bf7d2]
  416694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416695:	je     0x416649
  416697:	lods   al,BYTE PTR ds:[esi]
  416698:	and    eax,0xdc8e1bfd
  41669d:	retf   
  41669e:	and    esi,DWORD PTR [ecx]
  4166a0:	aaa    
  4166a1:	sub    eax,DWORD PTR [ebx]
  4166a3:	xor    dh,BYTE PTR [ebx]
  4166a5:	push   0x4b
  4166a7:	out    dx,eax
  4166a8:	sti    
  4166a9:	or     esp,DWORD PTR [eax-0x7a3fb163]
  4166af:	xchg   DWORD PTR [ebp-0x44c1ea5e],eax
  4166b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166b6:	ja     0x4166db
  4166b8:	lds    esi,FWORD PTR [esi-0x53]
  4166bb:	cmc    
  4166bc:	cld    
  4166bd:	mov    dl,0x83
  4166bf:	aad    0x55
  4166c1:	mov    edi,0x49ae8cdc
  4166c6:	leave  
  4166c7:	pop    ecx
  4166c8:	xor    edi,esp
  4166ca:	bound  eax,QWORD PTR [eax-0x35]
  4166cd:	gs xchg ebx,eax
  4166cf:	sub    BYTE PTR [esi],al
  4166d1:	cwde   
  4166d2:	mov    al,0xed
  4166d4:	sub    dh,cl
  4166d6:	push   0x7b3cd3e7
  4166db:	dec    ecx
  4166dc:	mov    edi,0xdb414809
  4166e1:	call   0x7f5b642c
  4166e6:	outs   dx,BYTE PTR ds:[esi]
  4166e7:	mov    cl,BYTE PTR [ebp+0x6e]
  4166ea:	jmp    0x704c:0x4bf86e97
  4166f1:	push   ecx
  4166f2:	(bad)  
  4166f3:	outs   dx,BYTE PTR ds:[esi]
  4166f4:	daa    
  4166f5:	std    
  4166f6:	pop    eax
  4166f7:	pushf  
  4166f8:	ins    DWORD PTR es:[edi],dx
  4166f9:	push   esi
  4166fa:	jo     0x41671e
  4166fc:	inc    ebp
  4166fd:	mov    bl,0x8d
  4166ff:	test   DWORD PTR [edx-0xd],esp
  416702:	jmp    DWORD PTR [ebp+edx*2-0x76]
  416706:	pop    esp
  416707:	enter  0x9cd1,0x51
  41670b:	int    0x93
  41670d:	cdq    
  41670e:	mov    eax,ds:0xe46af29c
  416713:	mov    al,ds:0x3d35fd20
  416718:	mov    ebx,0x7d9ff404
  41671d:	shr    BYTE PTR [esi+0x47],1
  416720:	cmp    DWORD PTR [esi+0x661580b],edi
  416726:	cs sub esi,edi
  416729:	xor    bl,BYTE PTR [edx+esi*4-0x59c17a2c]
  416730:	fist   DWORD PTR [edi+ebx*8-0x31]
  416734:	(bad)  
  416735:	outs   dx,DWORD PTR ds:[esi]
  416736:	int    0x2a
  416738:	pop    esi
  416739:	(bad)  
  41673a:	xchg   ebp,eax
  41673b:	push   ds
  41673c:	mov    cl,0x42
  41673e:	sbb    BYTE PTR [edx-0x6c195d2d],dh
  416744:	int3   
  416745:	mov    ?,esi
  416747:	mov    cl,0x13
  416749:	add    eax,edx
  41674b:	sahf   
  41674c:	sbb    al,0x5
  41674e:	popa   
  41674f:	push   eax
  416750:	pop    edi
  416751:	repnz inc BYTE PTR [edi+ebp*1-0x224784a0]
  416759:	sbb    al,0xfd
  41675b:	retf   0x9833
  41675e:	call   FWORD PTR [edi]
  416760:	idiv   DWORD PTR [eax-0x63]
  416763:	pop    ecx
  416764:	sub    DWORD PTR [ebx-0x3c],esp
  416767:	shl    BYTE PTR ss:[edi+0x636638bf],1
  41676e:	cmp    cl,BYTE PTR [ebp-0x80]
  416771:	inc    esp
  416772:	daa    
  416773:	iret   
  416774:	mov    bh,0x47
  416776:	ret    
  416777:	mov    ds:0x67daf14e,al
  41677c:	fdivr  QWORD PTR [edx]
  41677e:	and    al,0x34
  416780:	cld    
  416781:	(bad)  
  416782:	sub    ebp,DWORD PTR [ebx]
  416784:	outs   dx,DWORD PTR ds:[esi]
  416785:	and    esi,eax
  416787:	lock shr DWORD PTR [ebx],0xdb
  41678b:	(bad)  ds:[ecx+0x7449fd7b]
  416792:	cmc    
  416793:	pop    ds
  416794:	xor    BYTE PTR [ecx+0x61],0x9d
  416798:	pop    ecx
  416799:	mov    al,ds:0xcaa0e21b
  41679e:	mov    ebp,0x29d7bd91
  4167a3:	(bad)  
  4167a4:	pop    ecx
  4167a5:	push   es
  4167a6:	arpl   WORD PTR [esi+0x56],dx
  4167a9:	mov    ebp,0x3e9213e
  4167ae:	pop    es
  4167af:	mov    edx,0x4b6ea2c1
  4167b4:	(bad)  
  4167b5:	xrelease mov DWORD PTR [esi+eiz*4],ebx
  4167b9:	sar    BYTE PTR gs:[esp+ecx*4-0x7e],1
  4167be:	shl    bl,0x4e
  4167c1:	int    0x73
  4167c3:	les    esi,FWORD PTR [ebp-0x37fed9f3]
  4167c9:	int3   
  4167ca:	push   edi
  4167cb:	(bad)  
  4167cc:	fdiv   DWORD PTR [ebx]
  4167ce:	pop    eax
  4167cf:	ss call 0x1ebc48e1
  4167d5:	sub    dh,BYTE PTR [ebx]
  4167d7:	call   0x81ed193d
  4167dc:	and    esi,eax
  4167de:	jmp    0x416770
  4167e0:	jmp    0xd2cfe318
  4167e5:	mov    al,0x66
  4167e7:	mov    ebx,0xe8261843
  4167ec:	ins    DWORD PTR es:[edi],dx
  4167ed:	push   edi
  4167ee:	lock push esp
  4167f0:	sub    cl,BYTE PTR [esi-0x51]
  4167f3:	(bad)  
  4167f4:	addr16 and al,0xb8
  4167f7:	dec    ecx
  4167f8:	mov    dl,0xc0
  4167fa:	sub    ch,ah
  4167fc:	scas   eax,DWORD PTR es:[edi]
  4167fd:	fcmovne st,st(0)
  4167ff:	fdiv   QWORD PTR [edi-0x2c2112c]
  416805:	popa   
  416806:	fbld   TBYTE PTR [ebx]
  416808:	retf   
  416809:	je     0x416795
  41680b:	add    al,0xbb
  41680d:	adc    BYTE PTR [bx+si+0x563a],cl
  416812:	mov    eax,ds:0x811ec6a4
  416817:	inc    esp
  416818:	je     0x416845
  41681a:	add    eax,0x7efd997c
  41681f:	into   
  416820:	or     esi,esi
  416822:	cdq    
  416823:	aaa    
  416824:	or     eax,eax
  416826:	pop    ecx
  416827:	inc    esp
  416828:	xchg   ecx,eax
  416829:	xchg   DWORD PTR [edi],edx
  41682b:	inc    ebp
  41682c:	jmp    0x607c6f01
  416831:	dec    BYTE PTR [ebx]
  416833:	inc    edx
  416834:	std    
  416835:	rol    DWORD PTR [ebx],1
  416837:	ja     0x4167e8
  416839:	rcr    ch,0x38
  41683c:	jno    0x416839
  41683e:	add    al,0x7b
  416840:	pop    esp
  416841:	paddusb mm3,QWORD PTR [ecx+0x70]
  416845:	test   bh,dl
  416847:	jl     0x416870
  416849:	loope  0x41688b
  41684b:	shr    BYTE PTR [ecx+0x4e],0x68
  41684f:	cmp    al,0xb6
  416851:	iret   
  416852:	aad    0xf9
  416854:	jecxz  0x416820
  416856:	and    DWORD PTR [ecx+0x14],esp
  416859:	push   ebp
  41685a:	pop    ebp
  41685b:	ins    BYTE PTR es:[edi],dx
  41685c:	mov    al,ds:0x958a0bf9
  416861:	(bad)  [esi+edx*1+0x7f6df9a7]
  416868:	fwait
  416869:	enter  0x64e8,0x56
  41686d:	imul   ecx,edx,0x6d
  416870:	test   DWORD PTR [ecx+ebp*2+0x5577a8b6],ebx
  416877:	cli    
  416878:	push   ds
  416879:	sbb    ebp,eax
  41687b:	or     BYTE PTR [edi-0x7a6d9f17],0x58
  416882:	xchg   esp,eax
  416883:	mov    WORD PTR [eax+0x1edc443],fs
  416889:	inc    edx
  41688a:	or     cl,BYTE PTR [ecx-0x34810529]
  416890:	(bad)  
  416891:	out    dx,al
  416892:	outs   dx,DWORD PTR ds:[esi]
  416893:	push   cs
  416894:	dec    ebp
  416895:	jno    0x416860
  416897:	cmp    edx,DWORD PTR [eax-0xf]
  41689a:	and    al,BYTE PTR ds:0x835da73d
  4168a0:	aad    0x94
  4168a2:	cmp    DWORD PTR ds:0xf7c62073,0xffffffbc
  4168a9:	xchg   edx,eax
  4168aa:	mov    ebp,0xd63db89f
  4168af:	or     al,0xb6
  4168b1:	out    dx,al
  4168b2:	add    ch,BYTE PTR [eax]
  4168b4:	retf   
  4168b5:	out    0x57,al
  4168b7:	mov    ecx,0x49f91763
  4168bc:	into   
  4168bd:	in     al,0xe8
  4168bf:	or     BYTE PTR [eax-0x17],dl
  4168c2:	cdq    
  4168c3:	sub    al,0xe1
  4168c5:	xchg   edi,eax
  4168c6:	xor    esi,DWORD PTR ds:0xc3b5cc65
  4168cc:	pusha  
  4168cd:	add    ecx,DWORD PTR [ecx]
  4168cf:	adc    ebx,DWORD PTR [ebx+edi*8+0x41]
  4168d3:	push   ebx
  4168d4:	cld    
  4168d5:	jb     0x4168d9
  4168d7:	fcomp  st(1)
  4168d9:	inc    ebp
  4168da:	js     0x4168cf
  4168dc:	push   edx
  4168dd:	jne    0x4168df
  4168df:	nop
  4168e0:	fnstenv [ebp-0xb]
  4168e3:	fidivr DWORD PTR [edi+0x35]
  4168e6:	aas    
  4168e7:	fiadd  DWORD PTR [ebx-0x2c22d9a]
  4168ed:	sbb    ebp,eax
  4168ef:	inc    esi
  4168f0:	mov    ebx,0x4b0d5626
  4168f5:	inc    ecx
  4168f6:	in     al,0x6f
  4168f8:	retf   0x1eee
  4168fb:	or     DWORD PTR [esi+0x75b57444],edi
  416901:	shl    BYTE PTR [edi-0x7],cl
  416904:	xchg   ebp,eax
  416905:	mov    DWORD PTR [ecx],0xe6fcf422
  41690b:	mov    al,ds:0x30997f55
  416910:	lahf   
  416911:	inc    esp
  416912:	aas    
  416913:	or     DWORD PTR [ebx],edx
  416915:	sar    DWORD PTR [ebx+0xb],0x87
  416919:	imul   eax,DWORD PTR [eax+0x1df1cb44],0xffffffb9
  416920:	jmp    0x41693c
  416922:	jmp    0x2e6d:0xa25233ed
  416929:	les    edx,FWORD PTR [ebp-0x6bf248b5]
  41692f:	scas   al,BYTE PTR es:[edi]
  416930:	pop    ebp
  416931:	sbb    al,0x45
  416933:	jg     0x4169b1
  416935:	mov    ebp,0x5df4dd63
  41693a:	lods   al,BYTE PTR ds:[esi]
  41693b:	sahf   
  41693c:	sbb    al,ah
  41693e:	pop    ebx
  41693f:	inc    edx
  416940:	push   esi
  416941:	pop    eax
  416942:	jecxz  0x416965
  416944:	pop    esi
  416945:	popf   
  416946:	mov    dh,0xda
  416948:	push   esp
  416949:	mov    ebx,fs
  41694b:	xchg   esp,eax
  41694c:	xchg   ebp,eax
  41694d:	cmp    ebp,DWORD PTR [edx-0x2e]
  416950:	mov    bl,0x49
  416952:	mov    esp,0x1e51da33
  416957:	or     ecx,DWORD PTR [esi+0x689937e3]
  41695d:	frstor [edi-0x60b92e7f]
  416963:	scas   al,BYTE PTR es:[edi]
  416964:	cmp    eax,ecx
  416966:	ja     0x416976
  416968:	jmp    0x41699d
  41696a:	test   al,0xd2
  41696c:	lahf   
  41696d:	add    DWORD PTR [ecx],ebx
  41696f:	jecxz  0x416938
  416971:	stos   DWORD PTR es:[edi],eax
  416972:	sub    esi,DWORD PTR [edi]
  416974:	loop   0x416952
  416976:	repz dec esp
  416978:	and    dl,BYTE PTR [ecx+0x3b]
  41697b:	test   DWORD PTR [ebp+0xbf909ca],esp
  416981:	mov    ebp,0x618bb6d4
  416986:	mov    bl,0xf0
  416988:	add    BYTE PTR [ebp-0x4154c0e6],ah
  41698e:	ja     0x41695b
  416990:	jns    0x416936
  416992:	shl    dh,cl
  416994:	jle    0x4169c3
  416996:	cmp    esp,DWORD PTR [ecx]
  416998:	js     0x416a04
  41699a:	mov    eax,ds:0x4223be56
  41699f:	call   0xa6aa:0x6a27dac2
  4169a6:	mov    eax,0x9d42cb3a
  4169ab:	or     DWORD PTR [esi],edi
  4169ad:	cmp    al,0x8
  4169af:	outs   dx,DWORD PTR ds:[esi]
  4169b0:	sub    edx,DWORD PTR [edi+0x282d4819]
  4169b6:	pop    ebp
  4169b7:	hlt    
  4169b8:	mov    dl,0xab
  4169ba:	test   eax,0x4ddff889
  4169bf:	and    DWORD PTR [ebp+0x67],ebp
  4169c2:	sub    DWORD PTR [esi+0x1b49dbb3],ecx
  4169c8:	mov    dl,0x64
  4169ca:	das    
  4169cb:	push   ebp
  4169cc:	js     0x416a30
  4169ce:	cmp    ebp,DWORD PTR gs:[ebx-0x4dbb1094]
  4169d5:	pushf  
  4169d6:	(bad)  
  4169d7:	stc    
  4169d8:	jmp    0x416961
  4169da:	mov    eax,ds:0x734e6b8c
  4169df:	mov    eax,ds:0xcb86440c
  4169e4:	out    0xc1,al
  4169e6:	cwde   
  4169e7:	cmp    DWORD PTR [esi+0x1b],edx
  4169ea:	cmc    
  4169eb:	sub    DWORD PTR [eiz*2+0x77f0f998],esi
  4169f2:	addr16 pop ecx
  4169f4:	xchg   DWORD PTR [ecx-0x74],eax
  4169f7:	sub    eax,0x1daced05
  4169fc:	pop    esp
  4169fd:	imul   ebp,DWORD PTR [esp+edx*2-0x1eb33a5b],0xffffff94
  416a05:	imul   esp,eax,0xa06cb12e
  416a0b:	jnp    0x4169d0
  416a0d:	clc    
  416a0e:	xor    BYTE PTR [eax-0x60f9cfb8],dh
  416a14:	dec    eax
  416a15:	pusha  
  416a16:	(bad)  
  416a17:	mov    al,ds:0xf8742580
  416a1c:	cmc    
  416a1d:	mov    dh,0x6a
  416a1f:	and    eax,0x66662850
  416a24:	inc    eax
  416a25:	loopne 0x416a94
  416a27:	div    BYTE PTR [esi-0x39]
  416a2a:	xor    dh,BYTE PTR [esi+ebx*4+0x9]
  416a2e:	xor    ah,bh
  416a30:	dec    eax
  416a31:	es clc 
  416a33:	mov    esi,0xc6fb9d39
  416a38:	push   ss
  416a39:	cs push ss
  416a3b:	push   ecx
  416a3c:	add    bl,BYTE PTR [eax+0xb]
  416a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a40:	ret    
  416a41:	push   ds
  416a42:	(bad)  
  416a44:	les    edx,FWORD PTR [ebp-0x77]
  416a47:	jmp    0x317ea1e0
  416a4c:	in     al,0x9d
  416a4e:	xlat   BYTE PTR ds:[ebx]
  416a4f:	mov    dl,0x7e
  416a51:	xor    eax,0x99a660af
  416a56:	add    eax,0x955de6c1
  416a5b:	es fwait
  416a5d:	call   0x290f0263
  416a62:	ror    DWORD PTR [edx-0x50011478],0xc8
  416a69:	adc    DWORD PTR [edi-0x7eef26cb],ebx
  416a6f:	lahf   
  416a70:	push   ecx
  416a71:	or     esp,edx
  416a73:	inc    ebp
  416a74:	jmp    0x26a08497
  416a79:	jp     0x416af2
  416a7b:	xor    esi,0xfffffffd
  416a7e:	in     eax,dx
  416a7f:	ret    
  416a80:	loop   0x416a1e
  416a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a83:	cwde   
  416a84:	jo     0x416a36
  416a86:	daa    
  416a87:	and    DWORD PTR [eax-0x1d],eax
  416a8a:	cmp    esi,DWORD PTR [ebp-0x776cea28]
  416a90:	or     DWORD PTR [edi],esp
  416a92:	or     dh,BYTE PTR [ecx]
  416a94:	imul   esi,DWORD PTR [ebx+0x6a13cb83],0xffffffc1
  416a9b:	les    ecx,FWORD PTR [esp+edi*2+0x6b198b51]
  416aa2:	xchg   DWORD PTR ds:[ecx-0x542ac25],edi
  416aa9:	add    eax,esp
  416aab:	xor    al,0xf4
  416aad:	sahf   
  416aae:	mov    ebp,0xa67c0d29
  416ab3:	test   al,0xbd
  416ab5:	test   al,0xbe
  416ab7:	fwait
  416ab8:	mov    edi,DWORD PTR [eax]
  416aba:	mov    esp,0xeabccaf0
  416abf:	imul   esp,DWORD PTR [ebp-0x75],0xffffffaa
  416ac3:	sbb    eax,0xb031136c
  416ac8:	mov    ds:0x47bf2c0b,al
  416acd:	mov    ebp,0xb1f7f78d
  416ad2:	inc    esi
  416ad3:	aaa    
  416ad4:	jl     0x416ad0
  416ad6:	lods   al,BYTE PTR ds:[esi]
  416ad7:	push   DWORD PTR [ebx+0x3c]
  416ada:	rcl    BYTE PTR [edi],cl
  416adc:	inc    ecx
  416add:	icebp  
  416ade:	push   ecx
  416adf:	xlat   BYTE PTR fs:[ebx]
  416ae1:	cs inc edx
  416ae3:	stos   BYTE PTR es:[edi],al
  416ae4:	push   es
  416ae5:	adc    dl,BYTE PTR [ecx+0x6c]
  416ae8:	or     ch,BYTE PTR [eax-0xb]
  416aeb:	sub    eax,0x7b4f0f61
  416af0:	xchg   esp,eax
  416af1:	mov    al,dl
  416af3:	(bad)  
  416af4:	jmp    0x499b:0x4e98da19
  416afb:	ret    
  416afc:	ins    DWORD PTR es:[edi],dx
  416afd:	xchg   esi,eax
  416afe:	and    BYTE PTR [ecx],al
  416b00:	mov    eax,0xc4e90436
  416b05:	sub    bl,BYTE PTR [edi]
  416b07:	stc    
  416b08:	xchg   DWORD PTR [ebx+0x68],eax
  416b0b:	jne    0x416a94
  416b0d:	outs   dx,DWORD PTR ds:[esi]
  416b0e:	mov    ah,0x10
  416b10:	push   ecx
  416b11:	ins    DWORD PTR es:[edi],dx
  416b12:	lds    ecx,FWORD PTR [eax-0x79]
  416b15:	loop   0x416aa2
  416b17:	popa   
  416b18:	add    eax,0xe0ed8aaa
  416b1d:	xchg   edi,eax
  416b1e:	push   esp
  416b1f:	inc    esp
  416b20:	test   eax,0x5dd0a403
  416b25:	ret    0xed40
  416b28:	xor    DWORD PTR [edi-0x74],ebx
  416b2b:	aas    
  416b2c:	addr16 in al,dx
  416b2e:	xor    BYTE PTR [ebp-0x70391b15],al
  416b34:	call   0x19b977a8
  416b39:	and    edi,DWORD PTR [esi+eiz*1]
  416b3c:	stc    
  416b3d:	inc    edi
  416b3e:	and    al,0xb3
  416b40:	hlt    
  416b41:	xchg   ecx,eax
  416b42:	cmp    ebx,ecx
  416b44:	cs push es
  416b46:	sbb    ebx,esp
  416b48:	mov    eax,0x572d7d65
  416b4d:	mov    al,0xb5
  416b4f:	pop    edi
  416b50:	xchg   esi,eax
  416b51:	inc    esi
  416b52:	mov    ebp,edi
  416b54:	dec    ebx
  416b55:	sbb    eax,0x49237fdc
  416b5a:	xchg   esp,eax
  416b5b:	std    
  416b5c:	xchg   esp,eax
  416b5d:	sbb    eax,esp
  416b5f:	rcr    BYTE PTR [edx+edi*1-0x1c],0xfa
  416b64:	inc    edx
  416b65:	imul   edx,DWORD PTR [ecx+0x3e],0x7f
  416b69:	std    
  416b6a:	cli    
  416b6b:	call   0xd36e:0x117e4451
  416b72:	push   eax
  416b73:	or     ebx,0xfffffff3
  416b76:	pop    es
  416b77:	mov    al,ds:0x5995db89
  416b7c:	not    BYTE PTR [edx-0x1f]
  416b7f:	push   0xffffffe4
  416b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b82:	mov    edi,0xf0e78919
  416b87:	ss popa 
  416b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b8a:	icebp  
  416b8b:	xchg   edx,eax
  416b8c:	adc    al,0x3c
  416b8e:	mov    ah,0x63
  416b90:	inc    ecx
  416b91:	or     al,0x1b
  416b93:	sbb    DWORD PTR es:[esi-0x7d272325],ebx
  416b9a:	je     0x416bc0
  416b9c:	aam    0xf5
  416b9e:	(bad)  
  416b9f:	mov    ebp,0xb5512f98
  416ba4:	cmp    ebx,DWORD PTR [edx-0x3]
  416ba7:	inc    esi
  416ba8:	cwde   
  416ba9:	lock push cs
  416bab:	jb     0x416bda
  416bad:	not    BYTE PTR [edx+0x2051f80c]
  416bb3:	not    edx
  416bb5:	in     al,0x65
  416bb7:	pop    edx
  416bb8:	dec    ecx
  416bb9:	mov    al,0xff
  416bbb:	push   0xffffffba
  416bbd:	inc    eax
  416bbe:	jmp    0xcb08:0x147b192
  416bc5:	shr    DWORD PTR [esi],cl
  416bc7:	stos   BYTE PTR es:[edi],al
  416bc8:	jbe    0x416be3
  416bca:	fisttp QWORD PTR gs:[esp+edx*4-0x983eae7]
  416bd2:	loopne 0x416bc3
  416bd4:	(bad)  
  416bd5:	pop    eax
  416bd6:	dec    eax
  416bd7:	rcl    DWORD PTR [edi],cl
  416bd9:	push   es
  416bda:	imul   ebx,ebp,0x96652bce
  416be0:	xor    ecx,edi
  416be2:	pop    ecx
  416be3:	mov    edx,DWORD PTR ds:0xb333113d
  416be9:	inc    eax
  416bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416beb:	scas   al,BYTE PTR es:[edi]
  416bec:	mov    dh,0x76
  416bee:	ret    0xfca3
  416bf1:	and    DWORD PTR [ecx+0x32525942],0x55
  416bf8:	imul   esp,DWORD PTR [edx-0x28],0xa13ad425
  416bff:	pop    ebx
  416c00:	jg     0x416c03
  416c02:	jle    0x416bb6
  416c04:	rcl    dh,1
  416c06:	mov    BYTE PTR [edx-0x5],al
  416c09:	outs   dx,BYTE PTR ds:[esi]
  416c0a:	push   es
  416c0b:	loop   0x416bd5
  416c0d:	sub    al,BYTE PTR [ebx-0x7f]
  416c10:	mov    cl,0xdc
  416c12:	or     DWORD PTR [eax],edx
  416c14:	ror    bh,0xa
  416c17:	out    0xfb,al
  416c19:	mov    al,0xd0
  416c1b:	push   ds
  416c1c:	ror    BYTE PTR [ecx+0x3],0x6
  416c20:	xchg   ecx,eax
  416c21:	stos   BYTE PTR es:[edi],al
  416c22:	xchg   esp,eax
  416c23:	pop    es
  416c24:	fsub   st,st(2)
  416c26:	push   cs
  416c27:	mov    ?,esp
  416c29:	inc    eax
  416c2a:	jmp    0x9255:0xeae3d1a5
  416c31:	xchg   bl,bl
  416c33:	fwait
  416c34:	jle    0x416bc3
  416c36:	and    eax,0xc3b5a665
  416c3b:	sub    edi,eax
  416c3d:	scas   al,BYTE PTR es:[edi]
  416c3e:	mov    dh,0x37
  416c40:	lods   eax,DWORD PTR ds:[esi]
  416c41:	lods   al,BYTE PTR ds:[esi]
  416c42:	sub    esp,edi
  416c44:	jnp    0x416c7d
  416c46:	out    dx,eax
  416c47:	and    ecx,DWORD PTR cs:[ebp+0x3da2608]
  416c4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c4f:	lods   eax,DWORD PTR ds:[esi]
  416c50:	dec    ebp
  416c51:	sbb    ebp,DWORD PTR [ebx]
  416c53:	add    ebp,DWORD PTR [ebx+0x574d35b3]
  416c59:	pop    ecx
  416c5a:	mov    ebx,0xdfae85d1
  416c5f:	or     eax,0xa691a179
  416c64:	jecxz  0x416c81
  416c66:	mov    ch,0x9b
  416c68:	xchg   ebx,eax
  416c69:	xor    eax,0xc8c673b2
  416c6e:	pusha  
  416c6f:	push   ds
  416c70:	inc    ecx
  416c71:	in     eax,dx
  416c72:	mov    ch,0x79
  416c74:	ins    BYTE PTR es:[edi],dx
  416c75:	out    0x6c,al
  416c77:	scas   al,BYTE PTR es:[edi]
  416c78:	xor    eax,0xf0a83853
  416c7d:	mov    BYTE PTR [eax],bh
  416c7f:	iret   
  416c80:	push   0xf31c35c2
  416c85:	iret   
  416c86:	xchg   edx,eax
  416c87:	test   al,0xdc
  416c89:	mov    ds:0x32d201c,eax
  416c8e:	cmp    dl,bl
  416c90:	imul   esp,DWORD PTR [edx],0x21
  416c93:	mov    ebp,0x5783377c
  416c98:	loope  0x416cd6
  416c9a:	mov    ebx,0xdbc959a0
  416c9f:	jmp    0xe6a188b
  416ca4:	mov    bl,0xc9
  416ca6:	xchg   ebp,eax
  416ca7:	arpl   WORD PTR ds:0x58c703f5,si
  416cad:	and    al,0x8a
  416caf:	and    BYTE PTR [eax+0xb],dl
  416cb2:	add    esi,DWORD PTR [ecx]
  416cb4:	xchg   edx,eax
  416cb5:	ins    BYTE PTR es:[edi],dx
  416cb6:	pop    ecx
  416cb7:	cmp    BYTE PTR [ecx-0x7b],dh
  416cba:	dec    edx
  416cbb:	xchg   DWORD PTR [edx-0x56],ebx
  416cbe:	mov    esi,0x7e60010d
  416cc3:	lock aaa 
  416cc5:	inc    edi
  416cc6:	mov    bl,0x2
  416cc8:	lea    ecx,[eax+0x36142e96]
  416cce:	imul   ebx,edx,0x2d
  416cd1:	(bad)  
  416cd2:	xor    DWORD PTR [eax],ecx
  416cd4:	inc    ebx
  416cd5:	or     ecx,ebx
  416cd7:	fstp   DWORD PTR [edx+eiz*4-0x13]
  416cdb:	and    BYTE PTR [bp+si+0x4c],dl
  416cdf:	outs   dx,DWORD PTR ds:[esi]
  416ce0:	outs   dx,DWORD PTR ds:[esi]
  416ce1:	lods   al,BYTE PTR ds:[esi]
  416ce2:	sub    BYTE PTR [ebx-0x77bf188a],cl
  416ce8:	sbb    eax,0x234f62fb
  416ced:	test   DWORD PTR [eax+eiz*1-0x4e67d3bf],eax
  416cf4:	xor    BYTE PTR [eax],bl
  416cf6:	call   0x6819:0x426883d6
  416cfd:	inc    edx
  416cfe:	cwde   
  416cff:	xchg   esi,eax
  416d00:	enter  0xd14b,0x7e
  416d04:	lds    ecx,FWORD PTR [ebp-0x173bd628]
  416d0a:	adc    ah,0x25
  416d0d:	or     al,0x1c
  416d0f:	jns    0x416d38
  416d11:	imul   ecx,eax,0x3d
  416d14:	xrelease xchg WORD PTR [esi+0x67],sp
  416d19:	jecxz  0x416d01
  416d1b:	cmp    BYTE PTR [edi+edx*2+0x6b],bh
  416d1f:	add    eax,0x81f4870b
  416d24:	daa    
  416d25:	adc    cl,BYTE PTR [ecx+0x3f]
  416d28:	enter  0x2696,0xd8
  416d2c:	xchg   ebx,eax
  416d2d:	and    eax,edx
  416d2f:	fdivr  DWORD PTR [edi-0x49]
  416d32:	mov    ebx,0xb41b48b3
  416d37:	jno    0x416d92
  416d39:	sub    al,0x44
  416d3b:	outs   dx,DWORD PTR ds:[esi]
  416d3c:	sub    bh,BYTE PTR [ecx]
  416d3e:	or     eax,ebp
  416d40:	pop    edi
  416d41:	lods   al,BYTE PTR ds:[esi]
  416d42:	cmc    
  416d43:	pop    ecx
  416d44:	mov    cl,0xed
  416d46:	cmp    eax,DWORD PTR [esi]
  416d48:	mov    esp,0x8c095dd
  416d4d:	jmp    0x2da4:0xfad086c9
  416d54:	fs cld 
  416d56:	cdq    
  416d57:	mov    ebp,0x6b7ba4c
  416d5c:	or     cl,0x10
  416d5f:	div    DWORD PTR [ebp-0x430bcaad]
  416d65:	jns    0x416d54
  416d67:	je     0x416d4d
  416d69:	mov    dh,0xf2
  416d6b:	mov    esi,0x469987b2
  416d70:	enter  0xbe7,0xab
  416d74:	fs std 
  416d76:	jp     0x416da8
  416d78:	xchg   edx,eax
  416d79:	gs stos BYTE PTR es:[edi],al
  416d7b:	jbe    0x416d27
  416d7d:	push   esp
  416d7e:	loope  0x416d17
  416d80:	(bad)  
  416d81:	(bad)  
  416d82:	and    ecx,DWORD PTR [ebp-0x5187df]
  416d88:	btr    DWORD PTR [edx-0x25],esi
  416d8c:	dec    ecx
  416d8d:	cmp    esi,DWORD PTR [ebx]
  416d8f:	cwde   
  416d90:	arpl   dx,sp
  416d92:	dec    esp
  416d93:	pop    es
  416d94:	cmp    al,0x9f
  416d96:	jmp    0x416e16
  416d98:	dec    esp
  416d99:	into   
  416d9a:	sub    DWORD PTR [edi],edx
  416d9c:	enter  0x675f,0xb
  416da0:	inc    DWORD PTR [ecx+0x6f]
  416da3:	cdq    
  416da4:	mov    ds:0x733d2137,al
  416da9:	fwait
  416daa:	hlt    
  416dab:	inc    eax
  416dac:	jns    0x416e05
  416dae:	(bad)  
  416daf:	xchg   ebp,eax
  416db0:	(bad)  
  416db1:	out    dx,al
  416db2:	mov    cl,0xe4
  416db4:	mov    ah,0x7d
  416db6:	cdq    
  416db7:	sar    eax,cl
  416db9:	sub    esp,DWORD PTR [eax+0x4a939f8f]
  416dbf:	mov    al,0xd
  416dc1:	sub    al,0xa9
  416dc3:	adc    eax,0xbe5412b1
  416dc8:	dec    al
  416dca:	push   edx
  416dcb:	and    dh,ah
  416dcd:	push   es
  416dce:	cwde   
  416dcf:	adc    cl,dh
  416dd1:	or     DWORD PTR [ecx-0x6b],ecx
  416dd4:	push   ebx
  416dd5:	mov    dl,0xe4
  416dd7:	into   
  416dd8:	pop    es
  416dd9:	xchg   esi,edx
  416ddb:	shl    BYTE PTR [ebp-0x5c],cl
  416dde:	inc    ebp
  416ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de0:	mov    DWORD PTR [edi-0x1315f48f],eax
  416de6:	jns    0x416e24
  416de8:	imul   ebx,DWORD PTR [esi-0x27],0x30096bf7
  416def:	pop    edx
  416df0:	xor    ch,BYTE PTR [esp+edx*8-0x14]
  416df4:	mov    BYTE PTR [ebx],bh
  416df6:	aam    0x98
  416df8:	jne    0x416e0c
  416dfa:	dec    edx
  416dfb:	sbb    ah,BYTE PTR [ebx]
  416dfd:	xchg   ecx,eax
  416dfe:	or     DWORD PTR [ecx-0x597538ac],edi
  416e04:	cmc    
  416e05:	mov    BYTE PTR [esi-0x56],cl
  416e08:	push   eax
  416e09:	loopne 0x416dc9
  416e0b:	mov    ebp,0xe90a6745
  416e10:	jmp    0xc1a730d8
  416e15:	or     eax,0x60fd51fb
  416e1a:	shl    BYTE PTR [ebx],cl
  416e1c:	sub    ebp,DWORD PTR [eax]
  416e1e:	xchg   ebp,eax
  416e1f:	mov    cl,0xf
  416e21:	das    
  416e22:	jp     0x416e7a
  416e24:	xchg   ebp,eax
  416e25:	mov    edi,DWORD PTR [edi]
  416e27:	ror    BYTE PTR [ecx+edi*2+0x74],cl
  416e2b:	cmp    cl,dl
  416e2d:	stos   DWORD PTR es:[edi],eax
  416e2e:	icebp  
  416e2f:	push   ebp
  416e30:	mov    ebx,0x9102b607
  416e35:	mov    ch,0x15
  416e37:	rol    cl,0x28
  416e3a:	fcomp  st(0)
  416e3c:	sub    al,BYTE PTR [ebx+0x56c272b6]
  416e42:	mov    esi,0x61deb8c6
  416e47:	loopne 0x416e5a
  416e49:	jno    0x416e13
  416e4b:	test   DWORD PTR [ebp+ebx*2-0x51],edi
  416e4f:	mov    cl,0x8b
  416e51:	push   ebp
  416e52:	mov    BYTE PTR [edx-0x4e2bfe8],al
  416e58:	inc    ecx
  416e59:	addr16 pusha 
  416e5b:	les    ebx,FWORD PTR ds:0x72e4cc0
  416e61:	pop    es
  416e62:	push   ecx
  416e63:	hlt    
  416e64:	pusha  
  416e65:	cmp    BYTE PTR [ebx-0x50f36615],bh
  416e6b:	dec    esp
  416e6c:	repz jle 0x416dff
  416e6f:	in     al,dx
  416e70:	cmp    eax,0x3e57c961
  416e75:	sti    
  416e76:	mov    ds:0x599be6ba,eax
  416e7b:	xor    al,0x78
  416e7d:	gs xchg ebp,eax
  416e7f:	fwait
  416e80:	das    
  416e81:	int3   
  416e82:	push   esi
  416e83:	cmp    ecx,DWORD PTR ds:0xc96670a2
  416e89:	loopne 0x416eef
  416e8b:	cld    
  416e8c:	xor    DWORD PTR [edi+esi*1],ebx
  416e8f:	sub    BYTE PTR [ebx-0x67d533c0],dh
  416e95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e96:	test   al,0xc9
  416e98:	ins    DWORD PTR es:[edi],dx
  416e99:	push   ecx
  416e9a:	aaa    
  416e9b:	inc    eax
  416e9c:	sbb    ch,BYTE PTR [esi+0x6c4e5215]
  416ea2:	pop    ebp
  416ea3:	and    BYTE PTR [ecx-0x68],0x9e
  416ea7:	xchg   esi,eax
  416ea8:	ds jne 0x416e3f
  416eab:	and    ch,BYTE PTR [eax]
  416ead:	push   es
  416eae:	inc    esi
  416eaf:	dec    ebp
  416eb0:	fdiv   DWORD PTR [ebx]
  416eb2:	es mov al,0x90
  416eb5:	jo     0x416ea9
  416eb7:	or     al,0x24
  416eb9:	mov    al,0x93
  416ebb:	mov    esi,0x819ff38d
  416ec0:	xor    al,BYTE PTR [ebx+0x46]
  416ec3:	push   ss
  416ec4:	and    bl,bl
  416ec6:	psllw  mm3,QWORD PTR [edi]
  416ec9:	dec    edi
  416eca:	scas   eax,DWORD PTR es:[edi]
  416ecb:	cld    
  416ecc:	lock or eax,0x90cbdc38
  416ed2:	shl    esp,1
  416ed4:	enter  0xdc88,0xf8
  416ed8:	push   es
  416ed9:	out    dx,al
  416eda:	cs push ebp
  416edc:	sbb    ecx,eax
  416ede:	mov    ds:0xf3e7e805,eax
  416ee3:	ins    DWORD PTR es:[edi],dx
  416ee4:	inc    ebx
  416ee5:	inc    ecx
  416ee6:	sbb    ebp,DWORD PTR [eax]
  416ee8:	mov    al,0xd3
  416eea:	jns    0x416eb5
  416eec:	enter  0xa4db,0x2d
  416ef0:	push   edi
  416ef1:	mov    ch,0xf9
  416ef3:	mov    ds:0x73a3b0fd,eax
  416ef8:	xor    al,0x8a
  416efa:	add    al,0xf5
  416efc:	mov    al,ds:0xd8ccb66d
  416f01:	ins    DWORD PTR es:[edi],dx
  416f02:	sbb    eax,0xe8c12aac
  416f07:	xor    DWORD PTR ss:[esi-0x222132ec],eax
  416f0e:	iret   
  416f0f:	adc    eax,0x70abea41
  416f14:	fisttp DWORD PTR [esi-0x79]
  416f17:	and    al,0xd3
  416f19:	mov    dl,0xe7
  416f1b:	adc    DWORD PTR [edx-0xa4e6b9],edx
  416f21:	rcl    BYTE PTR [edi+0x2e],cl
  416f24:	mov    eax,ds:0x2ac58849
  416f29:	push   DWORD PTR [edi]
  416f2b:	sub    ah,BYTE PTR [eax+ebp*8-0x679d9186]
  416f32:	rcl    BYTE PTR [eax],1
  416f34:	jno    0x416f05
  416f36:	jne    0x416ef6
  416f38:	enter  0x7c79,0x8
  416f3c:	jg     0x416f0f
  416f3e:	and    cl,BYTE PTR [esi-0x1b3ab6eb]
  416f44:	test   BYTE PTR [eax-0xa],al
  416f47:	dec    ebp
  416f48:	dec    esi
  416f49:	xchg   edi,eax
  416f4a:	imul   ebp,DWORD PTR [ecx-0x4],0x24907243
  416f51:	adc    ebp,DWORD PTR [edx*4+0x2e7130c4]
  416f58:	lods   al,BYTE PTR ds:[esi]
  416f59:	imul   ecx,DWORD PTR [edx-0x5a0eab2d],0xffffffa1
  416f60:	jle    0x416f50
  416f62:	(bad)  
  416f63:	xchg   esp,eax
  416f64:	or     cl,ch
  416f66:	loop   0x416fa7
  416f68:	sub    al,0x0
  416f6a:	dec    eax
  416f6b:	xchg   edi,eax
  416f6c:	or     BYTE PTR [eax+edx*4-0x2b],ch
  416f70:	or     DWORD PTR [edx],ebp
  416f72:	(bad)  
  416f73:	dec    esi
  416f74:	cmp    al,0x9e
  416f76:	add    esi,esi
  416f78:	push   ds
  416f79:	lea    edx,[edx-0x759fd142]
  416f7f:	and    dl,BYTE PTR [eax+0x60]
  416f82:	lods   eax,DWORD PTR ds:[esi]
  416f83:	fcom   QWORD PTR [edi-0x7b]
  416f86:	inc    edi
  416f87:	out    0xf5,eax
  416f89:	sbb    eax,0xa3a7eec3
  416f8e:	shl    BYTE PTR [ebx-0x3f2bd756],cl
  416f94:	bound  ebx,QWORD PTR [edx-0x34]
  416f97:	sti    
  416f98:	pop    ebp
  416f99:	push   ebx
  416f9a:	mov    eax,ds:0x2e72943f
  416f9f:	push   eax
  416fa0:	jl     0x416fb3
  416fa2:	push   0xd87dacba
  416fa7:	jmp    0x41701f
  416fa9:	cdq    
  416faa:	inc    edi
  416fab:	or     al,0xa3
  416fad:	(bad)  
  416fae:	adc    eax,0x8234ffe4
  416fb3:	jb     0x417031
  416fb5:	ins    DWORD PTR es:[edi],dx
  416fb6:	std    
  416fb7:	lea    ebp,[eax-0x648b2fff]
  416fbd:	retf   0xb393
  416fc0:	mov    DWORD PTR [edi-0x30271c9],ebp
  416fc6:	sub    ah,ch
  416fc8:	push   ds
  416fc9:	adc    al,0xc7
  416fcb:	mov    ah,BYTE PTR [edi+0x7b]
  416fce:	xchg   esi,eax
  416fcf:	and    al,0x57
  416fd1:	inc    eax
  416fd2:	lahf   
  416fd3:	das    
  416fd4:	or     DWORD PTR [eax-0x4909f2f1],ebx
  416fda:	ja     0x416fee
  416fdc:	xchg   esi,eax
  416fdd:	les    ebx,FWORD PTR [esi+0x291ccc80]
  416fe3:	mov    cl,0x2b
  416fe6:	imul   esp,ebp,0xffffffd4
  416fe9:	mov    DWORD PTR [esi+0x3a],ebp
  416fec:	adc    ah,BYTE PTR [eax-0xed2bf9e]
  416ff2:	xchg   esp,eax
  416ff3:	jge    0x417064
  416ff5:	addr16 sbb cl,dl
  416ff8:	xlat   BYTE PTR ds:[ebx]
  416ff9:	sbb    al,0xbf
  416ffb:	jl     0x416ff4
  416ffd:	ret    
  416ffe:	pop    edx
  416fff:	sub    DWORD PTR [edx+edx*1-0x2fb9fb5b],0xffffffce
  417007:	aad    0x87
  417009:	sahf   
  41700a:	lahf   
  41700b:	aaa    
  41700c:	mov    esp,fs
  41700e:	pushf  
  41700f:	or     BYTE PTR [edx],bl
  417011:	loopne 0x416fe0
  417013:	ss aaa 
  417015:	mov    ecx,0x1f945fb8
  41701a:	gs call 0xfd08:0x577122ca
  417022:	push   ecx
  417023:	stos   BYTE PTR es:[edi],al
  417024:	inc    edx
  417025:	or     BYTE PTR [edx+esi*2],dh
  417028:	push   ebp
  417029:	cmp    eax,0x72a0b9d
  41702e:	push   eax
  41702f:	mov    esp,0x8e5a74b2
  417034:	scas   eax,DWORD PTR es:[edi]
  417035:	pop    ds
  417036:	imul   esi,DWORD PTR [eax+0x4],0xffffffe2
  41703a:	sti    
  41703b:	jle    0x417028
  41703d:	loope  0x417093
  41703f:	adc    al,0x84
  417041:	stos   BYTE PTR es:[edi],al
  417042:	xor    al,0x70
  417044:	fiadd  DWORD PTR [eax+0x5c]
  417047:	test   BYTE PTR [ecx-0x53],dl
  41704a:	pop    esi
  41704b:	and    dh,BYTE PTR [ecx-0x24]
  41704e:	fist   WORD PTR [ebp+0x6e]
  417051:	cli    
  417052:	sub    ebp,esp
  417054:	pop    ss
  417055:	test   BYTE PTR [ebx-0x5f482a99],0x40
  41705c:	lods   eax,DWORD PTR ds:[esi]
  41705d:	adc    cl,BYTE PTR [edx+edx*8+0xa07aa4b]
  417064:	js     0x416ff8
  417066:	idiv   BYTE PTR [ecx]
  417068:	cmp    DWORD PTR [edi-0x80],edx
  41706b:	pop    ebx
  41706c:	daa    
  41706d:	sbb    DWORD PTR [edi+0x7445bef7],edx
  417073:	push   cs
  417074:	and    ecx,ecx
  417076:	mov    edi,0xb50630bd
  41707b:	and    edx,DWORD PTR [ebx+0x59e4793f]
  417081:	cmp    bl,dl
  417083:	arpl   cx,bx
  417085:	rol    BYTE PTR [ebx+0x5d],1
  417088:	push   es
  417089:	test   DWORD PTR [esi+0x36615ed9],esi
  41708f:	cmp    BYTE PTR [esi-0x55],ah
  417092:	rcl    BYTE PTR [edx+ebp*4],0xfc
  417096:	test   eax,0xad7d7d98
  41709b:	pop    es
  41709c:	iret   
  41709d:	adc    al,0x9
  41709f:	loope  0x4170ea
  4170a1:	sbb    eax,0xc60608c3
  4170a6:	and    ecx,edi
  4170a8:	cwde   
  4170a9:	xchg   ebx,eax
  4170aa:	fist   DWORD PTR [ebx+ecx*4+0x71]
  4170ae:	sub    eax,DWORD PTR [edi]
  4170b0:	cs fwait
  4170b2:	mov    ds:0x7158fb0,eax
  4170b7:	xchg   ecx,eax
  4170b8:	test   DWORD PTR [esi-0x31],ebx
  4170bb:	jmp    0xef3b:0x4efb5dcc
  4170c2:	rcl    DWORD PTR ds:0xc92b3049,1
  4170c8:	test   DWORD PTR [esi-0x49],esp
  4170cb:	cmp    BYTE PTR [esi],0x5a
  4170ce:	sbb    bh,BYTE PTR [ebx+0x6b]
  4170d1:	inc    edi
  4170d2:	enter  0xc573,0x71
  4170d6:	scas   al,BYTE PTR es:[edi]
  4170d7:	fnsave [ebx]
  4170d9:	pop    edi
  4170da:	xchg   DWORD PTR [edx],edx
  4170dc:	fdiv   DWORD PTR [ebx]
  4170de:	mov    al,ds:0x4a60eed8
  4170e3:	dec    esp
  4170e4:	std    
  4170e5:	fistp  WORD PTR cs:0x4a34fc08
  4170ec:	scas   al,BYTE PTR es:[edi]
  4170ed:	pop    edx
  4170ee:	popa   
  4170ef:	xor    dl,BYTE PTR [edi]
  4170f1:	nop
  4170f2:	sub    al,0x90
  4170f4:	ss std 
  4170f6:	das    
  4170f7:	sub    al,0x9f
  4170f9:	jns    0x41714a
  4170fb:	(bad)  
  4170fc:	jle    0x417111
  4170fe:	lock pop eax
  417100:	add    eax,0x63477b2a
  417105:	mul    dh
  417107:	push   edi
  417108:	sub    BYTE PTR [edi+0x56],cl
  41710b:	out    dx,al
  41710c:	daa    
  41710d:	xchg   ebx,eax
  41710e:	xchg   ebp,eax
  41710f:	das    
  417110:	sti    
  417111:	push   0x6d
  417113:	or     dh,BYTE PTR [edi+0x3c]
  417116:	popf   
  417117:	mov    ebx,0x2e625695
  41711c:	mov    ebx,0x75e1487d
  417121:	call   0x6731c764
  417126:	cwde   
  417127:	test   ecx,edx
  417129:	xor    al,BYTE PTR [edx]
  41712b:	ins    DWORD PTR es:[edi],dx
  41712c:	adc    BYTE PTR [edx],bh
  41712e:	int3   
  41712f:	das    
  417130:	sub    cl,BYTE PTR [eax+eax*2]
  417133:	pop    edx
  417134:	mov    ebx,0xe4f99add
  417139:	int    0x31
  41713b:	(bad)  
  41713c:	stc    
  41713d:	mov    edx,0x5bd0550d
  417142:	xchg   edi,eax
  417143:	fs pop esi
  417145:	inc    eax
  417146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417147:	push   0x1a6e8b3a
  41714c:	xchg   ecx,eax
  41714d:	cli    
  41714e:	and    esp,esp
  417150:	sub    DWORD PTR [ebp-0x623514af],0xffffffa4
  417157:	pop    eax
  417158:	cwde   
  417159:	gs (bad) 
  41715b:	mov    ?,esp
  41715d:	icebp  
  41715e:	add    eax,0xe871257b
  417163:	dec    edi
  417164:	retf   
  417165:	or     al,0xed
  417167:	jg     0x417158
  417169:	aaa    
  41716a:	xchg   ecx,eax
  41716b:	cli    
  41716c:	imul   esi,DWORD PTR [ebx+0x3a],0x75
  417170:	test   al,0x36
  417172:	je     0x41715b
  417174:	ins    DWORD PTR es:[edi],dx
  417175:	ficomp DWORD PTR [eax-0x581682cc]
  41717b:	shl    DWORD PTR [esi+eax*1-0x31],0x81
  417180:	pop    ebp
  417181:	push   cs
  417182:	clc    
  417183:	xor    esp,DWORD PTR [ebx+0x30]
  417186:	dec    ebx
  417187:	hlt    
  417188:	test   BYTE PTR [ebx+0x2c],0x8d
  41718c:	adc    al,al
  41718e:	xor    DWORD PTR ds:0xae4481f5,esp
  417194:	add    DWORD PTR [edx-0x5ac2d97e],ebx
  41719a:	call   0x97c9:0xf18aef7e
  4171a1:	fistp  QWORD PTR [ecx+0x77]
  4171a4:	std    
  4171a5:	inc    edx
  4171a6:	repz mov ds:0x9102307e,al
  4171ac:	sub    DWORD PTR [ecx+0x6c],ebp
  4171af:	push   0xffffffaf
  4171b1:	cmp    eax,0x88398d9c
  4171b6:	or     al,0x9a
  4171b8:	fidiv  DWORD PTR [edi+0x37768906]
  4171be:	adc    BYTE PTR [eax+0x7824e7e9],dl
  4171c4:	daa    
  4171c5:	stos   BYTE PTR es:[edi],al
  4171c6:	push   edx
  4171c7:	mov    esi,0xd8e460bd
  4171cc:	cmp    eax,0x5ccf59a8
  4171d1:	xchg   DWORD PTR [esi+0x3f6fe731],ecx
  4171d7:	rol    BYTE PTR [eax-0x11],cl
  4171da:	test   eax,0x8c7822f4
  4171df:	adc    DWORD PTR [ecx],0xf22dffdb
  4171e5:	push   esp
  4171e6:	inc    ebp
  4171e7:	ret    0xee2b
  4171ea:	outs   dx,BYTE PTR ds:[esi]
  4171eb:	xchg   ecx,eax
  4171ec:	or     BYTE PTR [eax+0xe2358f],ah
  4171f2:	sbb    bh,BYTE PTR [edx-0x66]
  4171f5:	aaa    
  4171f6:	xor    esp,DWORD PTR [ecx-0x70]
  4171f9:	push   edx
  4171fa:	inc    esp
  4171fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171fc:	dec    ebx
  4171fd:	cs stos BYTE PTR es:[edi],al
  4171ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417200:	inc    ebx
  417201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417202:	xor    BYTE PTR [ecx-0x4],dh
  417205:	je     0x417265
  417207:	push   esi
  417208:	mov    al,0x3a
  41720b:	push   esi
  41720c:	inc    esp
  41720d:	add    ah,BYTE PTR [eax-0x5]
  417210:	(bad)  
  417211:	int    0x13
  417213:	adc    ch,BYTE PTR [edi-0x33]
  417216:	mul    BYTE PTR [esi]
  417218:	popa   
  417219:	or     DWORD PTR [esi],ecx
  41721b:	(bad)
  41721f:	daa    
  417220:	imul   ecx,DWORD PTR [edi-0x6aba8e7c],0x2f
  417227:	and    al,0x78
  417229:	push   cs
  41722a:	lods   eax,DWORD PTR ds:[esi]
  41722b:	and    BYTE PTR [ebx+0x0],dh
  41722e:	(bad)  
  41722f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417230:	jp     0x417228
  417232:	sti    
  417233:	add    edi,edx
  417235:	es cmp ebx,esi
  417238:	scas   al,BYTE PTR es:[edi]
  417239:	ret    
  41723a:	stos   BYTE PTR es:[edi],al
  41723b:	mov    cs,edi
  41723d:	int3   
  41723e:	cmp    edx,ebp
  417240:	xor    BYTE PTR [ecx],cl
  417242:	cmp    ch,BYTE PTR [eax+esi*4+0x39c9140d]
  417249:	mov    esp,0xfbbe1ef1
  41724e:	push   esi
  41724f:	jns    0x4171e2
  417251:	iret   
  417252:	push   esp
  417253:	xchg   ebx,eax
  417254:	and    ebp,DWORD PTR [eax-0x22]
  417257:	pop    ebp
  417258:	test   BYTE PTR ds:0x8fd5cd2,dh
  41725e:	inc    ecx
  41725f:	loope  0x417298
  417261:	xchg   edx,eax
  417262:	test   al,0x8a
  417264:	push   es
  417265:	mov    ebx,0x6cb24755
  41726a:	aad    0xe4
  41726c:	sub    dl,cl
  41726e:	stos   BYTE PTR es:[edi],al
  41726f:	sub    BYTE PTR [eax-0xd63a931],0x97
  417276:	xchg   esi,esp
  417278:	mov    ebp,0xa742cbf
  41727d:	shr    DWORD PTR [esi+0x17f5f74a],1
  417283:	pusha  
  417284:	aas    
  417285:	mov    bl,BYTE PTR [eax+0x58]
  417288:	sahf   
  417289:	push   ebx
  41728a:	push   ds
  41728b:	dec    bl
  41728d:	mov    dl,0xc
  41728f:	mov    ecx,0xbefabc4b
  417294:	loopne 0x4172fb
  417296:	js     0x417241
  417298:	xlat   BYTE PTR ds:[ebx]
  417299:	cwde   
  41729a:	and    eax,0x90b50378
  41729f:	cs call 0x6f7665e9
  4172a5:	dec    ecx
  4172a6:	sub    bh,ch
  4172a8:	pop    esp
  4172a9:	push   ss
  4172aa:	adc    cl,al
  4172ac:	aas    
  4172ad:	xchg   ebp,eax
  4172ae:	test   eax,0xb9ed6e3c
  4172b3:	xor    esi,edi
  4172b5:	in     eax,dx
  4172b6:	cmp    al,0x9c
  4172b8:	scas   eax,DWORD PTR es:[edi]
  4172b9:	cmp    DWORD PTR [ebx-0x548a77f1],0x9cf434b6
  4172c3:	loope  0x417311
  4172c5:	frstor [eax+0x638c917d]
  4172cb:	cmp    eax,0x64f7e032
  4172d0:	loop   0x417326
  4172d2:	call   0x147c:0xf33d6b93
  4172d9:	cmp    al,0xe2
  4172db:	add    dl,bh
  4172dd:	xchg   edi,eax
  4172de:	mov    eax,0x9478efde
  4172e3:	adc    edx,ecx
  4172e5:	adc    eax,0x47526fd
  4172ea:	or     al,0x8f
  4172ec:	cld    
  4172ed:	mov    ebp,0x564b256f
  4172f2:	gs xchg ebx,eax
  4172f4:	fist   DWORD PTR [ebx+eiz*2+0x5b01473a]
  4172fb:	rcr    DWORD PTR [edx],0x23
  4172fe:	and    eax,0xc40bf4f5
  417303:	leave  
  417304:	sbb    BYTE PTR [ecx-0x58e9667c],cl
  41730a:	inc    esp
  41730b:	test   BYTE PTR [ebx+esi*2+0x794b3be1],ch
  417312:	clc    
  417313:	rcr    BYTE PTR [ecx+0x2a],cl
  417316:	adc    esp,edx
  417318:	adc    BYTE PTR [edi],dh
  41731a:	and    eax,0x98b3425c
  41731f:	(bad)  
  417320:	pushf  
  417321:	push   ebp
  417322:	aaa    
  417323:	sub    ebx,DWORD PTR [ebx+0x822fb8d]
  417329:	leave  
  41732a:	dec    esi
  41732b:	pop    ebx
  41732c:	retf   0xed0c
  41732f:	sub    eax,0xe22ec103
  417334:	adc    DWORD PTR [ecx],edx
  417336:	sbb    al,0x40
  417338:	jns    0x417389
  41733a:	jmp    0x4172ec
  41733c:	inc    eax
  41733d:	adc    ah,BYTE PTR ds:0x1a9c9cdb
  417343:	gs scas al,BYTE PTR es:[edi]
  417345:	mov    edx,0x994f82c0
  41734a:	or     ecx,0x2d
  41734d:	adc    eax,0x642eaef7
  417352:	cwde   
  417353:	mov    ch,0x88
  417355:	loopne 0x4173c4
  417357:	pusha  
  417358:	nop
  417359:	xchg   esi,eax
  41735a:	retf   
  41735b:	push   0x32
  41735d:	icebp  
  41735e:	add    dh,BYTE PTR [esi]
  417360:	int3   
  417361:	push   edx
  417362:	push   ebx
  417363:	pop    ss
  417364:	sahf   
  417365:	cmp    BYTE PTR [edi],cl
  417367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417368:	push   cs
  417369:	fild   QWORD PTR [ecx]
  41736b:	push   0x7ffe548d
  417370:	add    BYTE PTR [edx+0x2e],cl
  417373:	pushf  
  417374:	cmc    
  417375:	outs   dx,DWORD PTR ds:[esi]
  417376:	aam    0xb
  417378:	pushf  
  417379:	in     eax,0x76
  41737b:	imul   esi,DWORD PTR [eax],0x153abe25
  417381:	out    dx,al
  417382:	fist   WORD PTR [eax]
  417384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417385:	fdecstp 
  417387:	ins    BYTE PTR es:[edi],dx
  417388:	adc    eax,edi
  41738a:	jmp    0x8643:0x4d839d46
  417391:	cmp    cl,ch
  417393:	out    dx,al
  417394:	enter  0xea11,0xa0
  417398:	or     eax,0xa2a06e1f
  41739d:	or     BYTE PTR [ebp+0x51],al
  4173a0:	dec    ebp
  4173a1:	pop    es
  4173a2:	mov    bl,0x23
  4173a4:	imul   esi,DWORD PTR [edx+eax*4],0xcfa69ed5
  4173ab:	ins    BYTE PTR es:[edi],dx
  4173ac:	rcl    DWORD PTR [esi-0x42c54614],cl
  4173b2:	cs call 0x92d9:0x3b47954a
  4173ba:	in     al,0xa5
  4173bc:	sub    BYTE PTR [ebx+0x2de3e2ba],dh
  4173c2:	xlat   BYTE PTR ds:[ebx]
  4173c3:	out    dx,eax
  4173c4:	pushw  0xff83
  4173c7:	test   al,0x9e
  4173c9:	shl    BYTE PTR [eax+ebx*1+0x21db959],cl
  4173d0:	mov    dh,0x88
  4173d2:	inc    eax
  4173d3:	(bad)  
  4173d4:	hlt    
  4173d5:	stos   DWORD PTR es:[edi],eax
  4173d6:	push   ebp
  4173d7:	xor    eax,0x6b7eaa8a
  4173dc:	mov    esi,0x911b470c
  4173e1:	dec    esi
  4173e2:	xlat   BYTE PTR ds:[ebx]
  4173e3:	cmp    al,0x10
  4173e5:	inc    eax
  4173e6:	inc    ecx
  4173e7:	(bad)  
  4173e8:	gs inc esi
  4173ea:	jg     0x417462
  4173ec:	mov    BYTE PTR [ebx],al
  4173ee:	jp     0x41744a
  4173f0:	push   ebp
  4173f1:	dec    ecx
  4173f2:	sub    al,0xc3
  4173f4:	sbb    al,0x0
  4173f6:	neg    DWORD PTR [eax-0x526e42e5]
  4173fc:	pop    eax
  4173fd:	jmp    0x4173be
  4173ff:	jno    0x417425
  417401:	neg    dh
  417403:	jmp    0xf576:0x36b54f2a
  41740a:	dec    ebx
  41740b:	jmp    0x4173b1
  41740d:	daa    
  41740e:	call   0x7eee756c
  417413:	push   0xebab616c
  417418:	mov    ebx,0x8e50d9fc
  41741d:	dec    ebx
  41741e:	fwait
  41741f:	cmp    bh,BYTE PTR [ebp+0x4e]
  417422:	and    BYTE PTR [esi-0x5e],0xc7
  417426:	outs   dx,DWORD PTR ds:[esi]
  417427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417428:	pushf  
  417429:	adc    dh,BYTE PTR [ebx+ebp*4]
  41742c:	neg    BYTE PTR [ecx-0x71]
  41742f:	xor    BYTE PTR [ebp+0x5779486a],bh
  417435:	mov    ch,0x14
  417437:	jmp    0x8bdc:0x19f9bdd
  41743e:	jp     0x41744f
  417440:	loope  0x4174a4
  417442:	addr16 into 
  417444:	jg     0x417495
  417446:	scas   al,BYTE PTR es:[edi]
  417447:	pop    eax
  417448:	rcr    bh,cl
  41744a:	fmul   QWORD PTR [edi+edx*2+0x4a]
  41744e:	sbb    BYTE PTR [ebx+eax*8+0x544b346f],bl
  417455:	push   ds
  417456:	and    DWORD PTR [edi],eax
  417458:	daa    
  417459:	push   esi
  41745a:	ret    
  41745b:	inc    eax
  41745c:	mov    eax,0x72a94bf5
  417461:	jp     0x41746f
  417463:	in     al,dx
  417464:	mov    dh,0xbc
  417466:	test   DWORD PTR [eax-0x153f78be],ebp
  41746c:	test   eax,0x86b040b9
  417471:	dec    ebx
  417472:	inc    edi
  417473:	cli    
  417474:	or     ebx,edx
  417476:	jl     0x4174a9
  417478:	sbb    dl,BYTE PTR [eax+0x4d]
  41747b:	push   edi
  41747c:	sbb    edi,DWORD PTR [esi+0x5b4055d1]
  417482:	ins    DWORD PTR es:[edi],dx
  417483:	mov    BYTE PTR [esi+0x27d0bd80],0xbd
  41748a:	mov    dh,0x76
  41748c:	mov    esp,0x7e41b90c
  417491:	test   eax,0xd966c625
  417496:	js     0x41741b
  417498:	fdivr  DWORD PTR [esi+0x415d42d4]
  41749e:	(bad)  
  41749f:	out    dx,al
  4174a0:	mov    dh,0xc7
  4174a2:	mov    ah,BYTE PTR [esi]
  4174a4:	push   es
  4174a5:	retf   
  4174a6:	cmp    bl,BYTE PTR [ebx+0xdea8806]
  4174ac:	inc    DWORD PTR [ebp-0x7a9d3a39]
  4174b2:	test   eax,0x4b477ea1
  4174b7:	outs   dx,DWORD PTR ds:[esi]
  4174b8:	ss cmp al,0xec
  4174bb:	inc    esi
  4174bc:	mov    esp,0x8572899
  4174c1:	xor    DWORD PTR [ebx+0x54186f34],edx
  4174c7:	xchg   edx,eax
  4174c8:	lahf   
  4174c9:	es popa 
  4174cb:	lods   eax,DWORD PTR ds:[esi]
  4174cc:	xchg   edi,eax
  4174cd:	lea    ebp,[ecx+0x22c7d241]
  4174d3:	push   edx
  4174d4:	add    eax,0x27235670
  4174d9:	mov    al,ds:0x461d9d85
  4174de:	or     al,0xbb
  4174e0:	push   ecx
  4174e1:	xor    al,0xb5
  4174e3:	outs   dx,DWORD PTR ds:[esi]
  4174e4:	test   BYTE PTR [ebp+ebx*1-0x62],bl
  4174e8:	shl    BYTE PTR [ebx*2+0x5d7888ed],0xee
  4174f0:	push   edx
  4174f1:	mov    WORD PTR [ecx],fs
  4174f3:	mov    eax,ds:0xf8f6841d
  4174f8:	or     esp,DWORD PTR [ebx-0x45]
  4174fb:	or     ebp,DWORD PTR [eax-0x61b81b33]
  417501:	sar    BYTE PTR [esi-0x6f89aa27],1
  417507:	sbb    DWORD PTR [ebp-0x6f9545a4],0xa
  41750e:	bound  edi,QWORD PTR [edi+0x6c412e60]
  417514:	sub    eax,0x5a818f5e
  417519:	mov    eax,0xfdeecbab
  41751e:	fwait
  41751f:	mov    eax,ds:0x30b9115c
  417524:	xchg   esp,eax
  417525:	xchg   esp,eax
  417526:	stc    
  417527:	js     0x4174e2
  417529:	pop    eax
  41752a:	scas   al,BYTE PTR es:[edi]
  41752b:	dec    esi
  41752c:	pop    ecx
  41752d:	jbe    0x417543
  41752f:	hlt    
  417530:	pop    ebx
  417531:	into   
  417532:	pop    edx
  417533:	jno    0x417539
  417535:	add    eax,0x48d75b09
  41753a:	pop    esp
  41753b:	mov    ds:0xfef0d46,eax
  417540:	cmp    ebp,DWORD PTR [eax-0x61]
  417543:	mov    esp,0x869994bc
  417548:	mov    ecx,DWORD PTR [edi+0x56e4f4e2]
  41754e:	ret    
  41754f:	in     al,0xfa
  417551:	pusha  
  417552:	pusha  
  417553:	mov    ah,0x98
  417555:	mov    ebp,0x4a330f5
  41755a:	cdq    
  41755b:	add    BYTE PTR [esi+edx*8],dh
  41755e:	loope  0x4174e4
  417560:	das    
  417561:	cmp    ebp,DWORD PTR [eax+0x6802eb1]
  417567:	jnp    0x417534
  417569:	stos   DWORD PTR es:[edi],eax
  41756a:	ins    DWORD PTR es:[edi],dx
  41756b:	xor    DWORD PTR [eax+0x2],ecx
  41756e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41756f:	jge    0x41750f
  417571:	or     DWORD PTR [edi+0x3eb34e7],edx
  417577:	outs   dx,DWORD PTR ds:[esi]
  417578:	les    ecx,FWORD PTR [edi+0x41]
  41757b:	jne    0x4174fe
  41757d:	(bad)  
  41757e:	jmp    0xd7b3c6f9
  417583:	test   eax,0x18e9fc4
  417588:	jge    0x41750e
  41758a:	and    DWORD PTR [ebp-0x34],ebx
  41758d:	aad    0x79
  41758f:	jl     0x417581
  417591:	sbb    eax,0x12f289ac
  417596:	ret    0xa91e
  417599:	mov    eax,ds:0xae17a172
  41759e:	xchg   edi,eax
  41759f:	icebp  
  4175a0:	outs   dx,BYTE PTR ss:[esi]
  4175a2:	daa    
  4175a3:	into   
  4175a4:	pop    ecx
  4175a5:	sbb    BYTE PTR [ebx],ah
  4175a7:	pop    eax
  4175a8:	cmp    al,0x39
  4175aa:	ror    DWORD PTR [esi+0x5d],1
  4175ad:	int    0xab
  4175af:	pop    eax
  4175b0:	cmp    DWORD PTR ds:0xc86b0b42,ecx
  4175b6:	call   0x2e1f:0x1e544591
  4175bd:	add    ecx,DWORD PTR [esp+eax*2-0x7a]
  4175c1:	mov    ds:0x234cb7cd,al
  4175c6:	mov    ebp,0xbba1af3b
  4175cb:	add    al,0xca
  4175cd:	xchg   ebx,eax
  4175ce:	push   DWORD PTR [eax+edi*4+0x62]
  4175d2:	sbb    DWORD PTR [ecx],ecx
  4175d4:	cs fcmovb st,st(5)
  4175d7:	(bad)  
  4175d8:	sub    al,0x6d
  4175da:	cmp    BYTE PTR [edi],ch
  4175dc:	jnp    0x4175c2
  4175de:	cwde   
  4175df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175e0:	fist   DWORD PTR [esi+ebx*4+0x1886727c]
  4175e7:	mov    ebx,0x451663e7
  4175ec:	mov    WORD PTR ds:0x246e3e58,ss
  4175f2:	packuswb mm4,mm5
  4175f5:	jae    0x417628
  4175f7:	adc    dh,BYTE PTR [ebx+edx*2+0x64b6f43a]
  4175fe:	push   edx
  4175ff:	push   esi
  417600:	ret    
  417601:	sbb    ebx,DWORD PTR [ebx-0x1203fb33]
  417607:	jb     0x41763c
  417609:	cmp    al,0x71
  41760b:	and    eax,0xd2c26f2d
  417610:	test   al,0x6f
  417612:	push   0x14
  417614:	or     eax,0xbdcfcbd1
  417619:	mov    ebp,0xcb557df8
  41761e:	xchg   ecx,eax
  41761f:	xchg   ecx,eax
  417620:	jo     0x4175b7
  417622:	loope  0x417643
  417624:	loopne 0x41769d
  417626:	pop    ecx
  417627:	dec    esi
  417628:	add    eax,0x103a8fdd
  41762d:	push   ebp
  41762e:	adc    al,0x27
  417630:	(bad)  [ebp+0x12]
  417633:	cwde   
  417634:	icebp  
  417635:	sti    
  417636:	and    eax,0xd03b6b76
  41763b:	or     BYTE PTR ds:0xb60b93aa,al
  417641:	enter  0xa0fa,0xd4
  417645:	pop    es
  417646:	fld    TBYTE PTR [ecx]
  417648:	daa    
  417649:	push   ss
  41764a:	pop    ds
  41764b:	nop
  41764c:	mulps  xmm1,XMMWORD PTR [esi+ebp*1]
  417650:	mov    ds:0xb5965b55,al
  417655:	adc    esi,edi
  417657:	fcomp  QWORD PTR [ecx]
  417659:	inc    edi
  41765a:	jecxz  0x4175ef
  41765c:	sbb    esp,DWORD PTR ds:0x564f4485
  417662:	push   cs
  417663:	cld    
  417664:	mov    DWORD PTR [eax-0x4f67b622],ebx
  41766a:	outs   dx,BYTE PTR ds:[esi]
  41766b:	out    dx,al
  41766c:	xchg   edi,ecx
  41766e:	int3   
  41766f:	cmp    eax,0x3b6eaaea
  417674:	jns    0x41766d
  417676:	pop    ecx
  417677:	mov    WORD PTR [ecx+0x54],gs
  41767a:	mov    DWORD PTR [ebp+0x2b55fcaa],edi
  417680:	push   0x93b4803d
  417685:	into   
  417686:	inc    ebp
  417687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417688:	jecxz  0x417627
  41768a:	mov    WORD PTR [esp+ebp*2+0x4f],fs
  41768e:	jnp    0x4176a0
  417690:	mov    dl,0xeb
  417692:	lods   al,BYTE PTR ds:[esi]
  417693:	mov    al,ds:0x18294e77
  417698:	imul   ecx,esi,0x90bb4e0c
  41769e:	fimul  WORD PTR [esi]
  4176a0:	mov    al,0xe9
  4176a2:	and    eax,0x9a582ad0
  4176a7:	stos   DWORD PTR es:[edi],eax
  4176a8:	ficomp WORD PTR ds:0xcc709307
  4176ae:	call   FWORD PTR [esp+ebp*8-0x60]
  4176b2:	retf   
  4176b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176b4:	cmc    
  4176b5:	mov    esp,0x76cc7374
  4176ba:	mov    ah,0x70
  4176bc:	retf   
  4176bd:	(bad)  
  4176be:	jge    0x4176f0
  4176c0:	aaa    
  4176c1:	jp     0x41766d
  4176c3:	ret    
  4176c4:	dec    ebp
  4176c5:	loope  0x4176ad
  4176c7:	ss fst st(4)
  4176ca:	push   ss
  4176cb:	cs inc esp
  4176cd:	lds    edi,FWORD PTR [esi-0x44]
  4176d0:	jmp    0x417750
  4176d2:	push   edx
  4176d3:	imul   ebp,DWORD PTR [edx],0x63
  4176d6:	(bad)  
  4176d7:	bound  eax,QWORD PTR [esi-0x4d635a62]
  4176dd:	dec    esp
  4176de:	adc    eax,0x367fd5de
  4176e3:	nop
  4176e4:	sar    BYTE PTR [eax-0x480e48b9],cl
  4176ea:	imul   ebx,DWORD PTR [eax-0x11],0xcbc679d9
  4176f1:	mov    edx,0x6750f114
  4176f6:	jo     0x4176fe
  4176f8:	int    0x3a
  4176fa:	mov    ecx,0xcaa7a1b0
  4176ff:	add    al,0xbc
  417701:	repnz lods al,BYTE PTR ds:[esi]
  417703:	and    al,0x9c
  417705:	or     eax,DWORD PTR [edi+0x26b23ae3]
  41770b:	dec    edx
  41770c:	test   al,0xfc
  41770e:	sbb    DWORD PTR [ecx],ebx
  417710:	ins    BYTE PTR es:[edi],dx
  417711:	fucomp st(7)
  417713:	out    0xf3,eax
  417715:	xchg   edi,eax
  417716:	adc    al,0x69
  417718:	jge    0x4176bc
  41771a:	push   edi
  41771b:	jl     0x417799
  41771d:	adc    edx,DWORD PTR [edx]
  41771f:	push   ecx
  417720:	xor    DWORD PTR [ebp+0x63643ae2],ebp
  417726:	jb     0x4176c3
  417728:	loop   0x41772f
  41772a:	jbe    0x41779d
  41772c:	enter  0xeb4b,0x50
  417730:	xor    dh,BYTE PTR [ebx+0x192f83ce]
  417736:	enter  0x6b76,0x78
  41773a:	out    0xbe,al
  41773c:	scas   al,BYTE PTR es:[edi]
  41773d:	pop    ebx
  41773e:	dec    esp
  41773f:	xchg   edx,eax
  417740:	loope  0x4176c4
  417742:	pcmpgtb mm1,QWORD PTR [edx-0x50]
  417746:	sbb    dl,dl
  417748:	iret   
  417749:	xor    ebp,esp
  41774b:	jb     0x41770c
  41774d:	aam    0x2b
  41774f:	xchg   ebp,eax
  417750:	arpl   WORD PTR [edx-0x79d36532],bx
  417756:	pop    ebp
  417757:	sar    BYTE PTR [ecx],0xa2
  41775a:	adc    BYTE PTR ds:0x64476c89,bh
  417760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417761:	push   ebp
  417762:	and    DWORD PTR ds:0xe9d6269d,ebx
  417768:	and    al,0x4d
  41776a:	push   ecx
  41776b:	in     al,0x81
  41776d:	inc    ecx
  41776e:	ins    BYTE PTR es:[edi],dx
  41776f:	xchg   esi,eax
  417770:	test   esp,edi
  417772:	push   es
  417773:	ror    DWORD PTR [ecx-0x57],0x5a
  417777:	jmp    0x417730
  417779:	jmp    0x668a:0x7369edf0
  417780:	sub    bh,dl
  417782:	xor    BYTE PTR [ecx+0x602d3e02],bh
  417788:	cmc    
  417789:	mov    ds:0x6e960bbf,eax
  41778e:	push   esi
  41778f:	std    
  417790:	add    cl,BYTE PTR [ebp-0x582e5cf5]
  417796:	loopne 0x41776a
  417798:	inc    esi
  417799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41779a:	mov    ecx,0xec3abca3
  41779f:	xlat   BYTE PTR ds:[ebx]
  4177a0:	xchg   BYTE PTR [eax-0x4296edd9],cl
  4177a6:	push   ss
  4177a7:	push   edx
  4177a8:	imul   esp,DWORD PTR [esi-0x1a],0x89328741
  4177af:	repnz jecxz 0x4177dc
  4177b2:	fimul  DWORD PTR [eax]
  4177b4:	sub    esp,DWORD PTR [edi]
  4177b6:	out    dx,eax
  4177b7:	int3   
  4177b8:	cmp    cl,dh
  4177ba:	lds    ecx,FWORD PTR ds:0xdd248afb
  4177c0:	aad    0xb6
  4177c2:	pusha  
  4177c3:	sbb    al,0x45
  4177c5:	bound  ebp,QWORD PTR ds:0xb369e916
  4177cb:	mov    al,0x7d
  4177cd:	dec    ebp
  4177ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177cf:	retf   0x9f12
  4177d2:	inc    eax
  4177d3:	nop
  4177d4:	jle    0x417821
  4177d6:	xlat   BYTE PTR ds:[ebx]
  4177d7:	mov    ch,0x2c
  4177d9:	pop    esp
  4177da:	sub    eax,0x2eeb1ae4
  4177df:	call   0xb518a14c
  4177e4:	mov    DWORD PTR [edx-0x547c0b05],edx
  4177ea:	hlt    
  4177eb:	pop    es
  4177ec:	(bad)  
  4177ed:	jnp    0x417793
  4177ef:	call   FWORD PTR [eax-0x57]
  4177f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177f3:	popf   
  4177f4:	push   0x16a8dd31
  4177f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177fa:	loopne 0x4177ce
  4177fc:	cld    
  4177fd:	pop    ecx
  4177fe:	cld    
  4177ff:	inc    BYTE PTR [eax+0x5f]
  417802:	sbb    eax,eax
  417804:	je     0x4177f7
  417806:	mov    bh,0x55
  417808:	lea    ebp,[edx]
  41780a:	mov    ds,edx
  41780c:	sbb    DWORD PTR [ebp-0x55567e78],esp
  417812:	pop    eax
  417813:	fiadd  DWORD PTR ds:0x5f54bbb
  417819:	ins    BYTE PTR es:[edi],dx
  41781a:	dec    edx
  41781b:	repnz mov ch,0x2c
  41781e:	push   eax
  41781f:	test   DWORD PTR [esi],ebp
  417821:	test   DWORD PTR [esi+0x55],edi
  417824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417825:	paddsw mm2,mm2
  417828:	or     al,0xf0
  41782a:	and    bl,bl
  41782c:	xchg   ecx,eax
  41782d:	mov    al,0xac
  41782f:	or     ebp,eax
  417831:	or     ecx,DWORD PTR [edx+0x19]
  417834:	je     0x417829
  417836:	ins    DWORD PTR es:[edi],dx
  417837:	dec    ebx
  417838:	push   edx
  417839:	push   0x6e
  41783b:	push   0x45
  41783d:	loope  0x417866
  41783f:	lds    ebp,FWORD PTR [edi+0xa2715ea]
  417845:	sbb    al,0x39
  417847:	mov    ds:0x149b2a0c,al
  41784c:	pop    esp
  41784d:	jle    0x4178a7
  41784f:	sbb    eax,0x7e45c95c
  417854:	loop   0x41788c
  417856:	das    
  417857:	sar    DWORD PTR [esi+0x48db19b9],1
  41785d:	adc    ecx,edi
  41785f:	jp     0x41782c
  417861:	jg     0x417867
  417863:	push   esp
  417864:	xor    BYTE PTR ds:[ecx],ch
  417867:	xchg   ebp,eax
  417868:	into   
  417869:	sub    bh,BYTE PTR [ebp+0x2ceb2c1f]
  41786f:	inc    esi
  417870:	retf   0x974b
  417873:	mov    dl,0x12
  417875:	xchg   esi,eax
  417876:	loopne 0x4178ad
  417878:	push   ebx
  417879:	cli    
  41787a:	es retf 
  41787c:	mov    dl,0x62
  41787e:	push   0x4b58d2bc
  417883:	pop    esi
  417884:	sbb    BYTE PTR [eax-0x434ea2c8],0x9f
  41788b:	pcmpeqd mm4,mm5
  41788e:	xchg   edx,eax
  41788f:	loop   0x417875
  417891:	cli    
  417892:	mov    ch,0xee
  417894:	ja     0x41789b
  417896:	or     eax,0x9834acaf
  41789b:	xchg   ebx,eax
  41789c:	cwde   
  41789d:	ja     0x417861
  41789f:	sti    
  4178a0:	adc    eax,0x98c84b9c
  4178a5:	fmul   QWORD PTR [ecx]
  4178a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178a8:	push   ebx
  4178a9:	push   0x37d02b76
  4178ae:	(bad)  
  4178af:	out    dx,eax
  4178b0:	push   esi
  4178b1:	out    0xe7,al
  4178b3:	pop    ebx
  4178b4:	sti    
  4178b5:	jae    0x41783e
  4178b7:	jo     0x4178cf
  4178b9:	sub    DWORD PTR [ecx+0x7ae6851],edx
  4178bf:	and    eax,DWORD PTR [esp+eax*4+0x14]
  4178c3:	pop    edi
  4178c4:	mov    al,ds:0x5c59b0cf
  4178c9:	mov    ebp,0x6757b8
  4178ce:	daa    
  4178cf:	jne    0x41794e
  4178d1:	shr    BYTE PTR [edx+esi*8-0x394ac51],cl
  4178d8:	push   eax
  4178d9:	ret    
  4178da:	sbb    DWORD PTR [esp+esi*4],ecx
  4178dd:	fnstcw WORD PTR [eax]
  4178df:	xor    eax,0xe2297dd6
  4178e4:	je     0x417952
  4178e6:	repnz and DWORD PTR [ebp+0xaab58ba],esp
  4178ed:	je     0x417876
  4178ef:	xchg   ecx,eax
  4178f0:	ds call 0x604ab791
  4178f6:	mov    ebp,0xb99806e
  4178fb:	lea    edx,[ebx+0x1edee7fb]
  417901:	enter  0x1005,0x25
  417905:	or     DWORD PTR [edx+0x2c],ecx
  417908:	sub    edx,DWORD PTR [eax]
  41790a:	cmp    ah,al
  41790c:	pop    esp
  41790d:	sti    
  41790e:	dec    esi
  41790f:	push   esi
  417910:	or     cl,BYTE PTR [edi]
  417912:	adc    DWORD PTR ds:[ebx-0x19],esp
  417916:	retf   0xf4ba
  417919:	(bad)
  41791c:	gs or  ebp,ebp
  41791f:	sub    ebx,DWORD PTR [ebx+0x4dd60a90]
  417925:	xchg   BYTE PTR [ecx],cl
  417927:	pop    ds
  417928:	enter  0x36dc,0x86
  41792c:	aad    0xce
  41792e:	inc    ebx
  41792f:	pop    eax
  417930:	test   DWORD PTR [edx-0x65d50a],eax
  417936:	cmp    ch,cl
  417938:	(bad)  
  417939:	mov    esi,edi
  41793b:	cs enter 0x2e36,0x9c
  417940:	mov    ds:0x4e8dc409,eax
  417945:	mov    bh,cl
  417947:	test   ebp,eax
  417949:	jno    0x41791d
  41794b:	retf   0xaf0b
  41794e:	fld    DWORD PTR [eax]
  417950:	mov    dh,BYTE PTR [ecx+eiz*4-0x76]
  417954:	dec    eax
  417955:	xor    DWORD PTR [eax],ebx
  417957:	jmp    0x1299:0x1678f4de
  41795e:	sbb    eax,0x219cab61
  417963:	pop    eax
  417964:	iret   
  417965:	xchg   ecx,eax
  417966:	jg     0x4179c5
  417968:	arpl   WORD PTR [eax],dx
  41796a:	(bad)  
  41796b:	leave  
  41796c:	scas   al,BYTE PTR es:[edi]
  41796d:	sbb    DWORD PTR [esi],0xffffffe2
  417970:	daa    
  417971:	jle    0x417947
  417973:	in     eax,dx
  417974:	das    
  417975:	mov    eax,ds:0xf7eb6cc5
  41797a:	sub    dh,BYTE PTR [ebp+0x66d1b48a]
  417980:	jo     0x417914
  417982:	xchg   ebx,eax
  417983:	xchg   esi,eax
  417984:	jle    0x41799a
  417986:	and    ah,al
  417988:	(bad)  
  417989:	sbb    al,0xd0
  41798b:	(bad)  
  41798c:	scas   eax,DWORD PTR es:[edi]
  41798d:	shr    ah,0x61
  417990:	fwait
  417991:	mov    esp,ebx
  417993:	loope  0x417967
  417995:	mov    esp,0x8683341a
  41799b:	pop    es
  41799c:	mov    edi,0x96587f8c
  4179a1:	xor    al,0x8b
  4179a3:	pop    edi
  4179a4:	(bad)  
  4179a5:	jbe    0x417938
  4179a7:	ret    
  4179a8:	fdivr  st,st(3)
  4179aa:	retf   0x2f5c
  4179ad:	jns    0x417a27
  4179af:	ss add bh,dh
  4179b2:	pop    esi
  4179b3:	jbe    0x4179e6
  4179b5:	pop    ebp
  4179b6:	in     al,0x49
  4179b8:	jge    0x417963
  4179ba:	test   eax,0xbe2949b
  4179bf:	inc    eax
  4179c0:	dec    ebx
  4179c1:	fisub  WORD PTR ds:[ecx+0x46fb069d]
  4179c8:	sbb    eax,0xa0609f7f
  4179cd:	(bad)  
  4179cf:	repz mov edx,0x25d4e16b
  4179d5:	enter  0x63bf,0x5c
  4179d9:	pop    edi
  4179da:	iret   
  4179db:	push   0x179c0618
  4179e0:	sahf   
  4179e1:	std    
  4179e2:	cwde   
  4179e3:	pop    edi
  4179e4:	adc    al,0x45
  4179e6:	out    dx,eax
  4179e7:	cmp    ah,BYTE PTR [ebp+ebx*4+0x545765f0]
  4179ee:	xchg   esp,eax
  4179ef:	sub    edi,0xffffffa3
  4179f2:	cld    
  4179f3:	xchg   al,dl
  4179f5:	dec    edx
  4179f6:	pushf  
  4179f7:	lds    edi,FWORD PTR [esi+0x76]
  4179fa:	dec    eax
  4179fb:	adc    DWORD PTR [edx+0x2e890a5f],esp
  417a01:	data16 jle 0x4179be
  417a04:	ins    DWORD PTR es:[edi],dx
  417a05:	add    ch,BYTE PTR [eax+eiz*4]
  417a08:	arpl   WORD PTR [ebp+0x5e],bx
  417a0b:	sbb    eax,0xe618e6e7
  417a10:	retf   
  417a11:	sub    cl,bh
  417a13:	push   edx
  417a14:	xlat   BYTE PTR ds:[ebx]
  417a15:	pop    ebx
  417a16:	dec    dl
  417a18:	pop    ebx
  417a19:	jge    0x4179f8
  417a1b:	xor    bl,al
  417a1d:	xchg   ecx,eax
  417a1e:	push   esi
  417a1f:	out    dx,al
  417a20:	popa   
  417a21:	sub    DWORD PTR [ebx],0x44
  417a24:	cli    
  417a25:	adc    esp,DWORD PTR [esi]
  417a27:	cmp    cl,BYTE PTR [ebx+0x6d80768e]
  417a2d:	jg     0x4179b5
  417a2f:	retf   
  417a30:	gs dec ebx
  417a32:	ss pop es
  417a34:	or     BYTE PTR [edx+0x4c],dl
  417a37:	push   ecx
  417a38:	ja     0x417a7a
  417a3a:	sbb    ah,BYTE PTR [esi+ebx*2]
  417a3d:	dec    ebx
  417a3e:	add    DWORD PTR [edi],eax
  417a40:	leave  
  417a41:	mov    ah,0x63
  417a43:	jg     0x4179eb
  417a45:	inc    ecx
  417a46:	mov    al,ds:0xbc2fecc3
  417a4b:	cmp    DWORD PTR [edi+eiz*8+0x36eb0544],edi
  417a52:	(bad)  
  417a53:	out    dx,al
  417a54:	retf   0xa1b4
  417a57:	div    cl
  417a59:	jle    0x417a89
  417a5b:	xor    DWORD PTR [edi-0x48c53ac1],edi
  417a61:	je     0x417a0b
  417a63:	je     0x417a0f
  417a65:	imul   ebx,ecx,0xddeb4334
  417a6b:	int    0xee
  417a6d:	ret    
  417a6e:	push   es
  417a6f:	ss cmp edx,esp
  417a72:	test   eax,0x81be2a14
  417a77:	fwait
  417a78:	mov    ds:0x78be0931,eax
  417a7d:	(bad)  
  417a7e:	and    BYTE PTR [esi-0x2c],al
  417a81:	dec    esp
  417a82:	mov    ecx,0xf880d7b6
  417a87:	xchg   edx,eax
  417a88:	addr16 mov edi,0x9d638de8
  417a8e:	outs   dx,BYTE PTR ds:[esi]
  417a8f:	or     esp,esi
  417a91:	out    dx,al
  417a92:	cmp    cl,BYTE PTR [edi]
  417a94:	cs jo  0x417ac5
  417a97:	movzx  esp,ax
  417a9a:	cmc    
  417a9b:	push   ecx
  417a9c:	jmp    0x882e:0xb16efcf3
  417aa3:	adc    eax,0x95655956
  417aa8:	sahf   
  417aa9:	cmp    DWORD PTR [esi+0x6],0xffffff97
  417aad:	inc    edx
  417aae:	sub    al,0x51
  417ab0:	or     DWORD PTR [ecx-0x42dcb7aa],0x6bfcd39d
  417aba:	adc    DWORD PTR [edx-0x7c],eax
  417abd:	das    
  417abe:	pop    es
  417abf:	rcr    esp,0x29
  417ac2:	push   esi
  417ac3:	icebp  
  417ac4:	nop
  417ac5:	cld    
  417ac6:	inc    ebx
  417ac7:	shr    DWORD PTR [edi-0x3e21d57a],1
  417acd:	lea    esi,[eax]
  417acf:	add    BYTE PTR cs:[eax],dh
  417ad2:	push   ds
  417ad3:	les    ebp,FWORD PTR [eax+0x2660851f]
  417ad9:	push   edx
  417ada:	arpl   WORD PTR [ebx+edx*4+0x717343cd],bp
  417ae1:	mov    esi,0x1faf6a0d
  417ae6:	and    dh,dl
  417ae8:	aam    0xae
  417aea:	arpl   ax,sp
  417aec:	cmp    BYTE PTR [eax],dl
  417aee:	shr    BYTE PTR [esi+0x340fdf56],cl
  417af4:	stos   DWORD PTR es:[edi],eax
  417af5:	clc    
  417af6:	sbb    al,ah
  417af8:	shl    bh,1
  417afa:	sbb    al,0x87
  417afc:	dec    eax
  417afd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417afe:	mov    edi,0x2019df62
  417b03:	fwait
  417b04:	ds dec edx
  417b06:	jp     0x417adc
  417b08:	pop    ebx
  417b09:	aas    
  417b0a:	scas   eax,DWORD PTR es:[edi]
  417b0b:	lea    ebx,[ebx+ebx*8-0x64e4de2e]
  417b12:	cs mov edi,0x518a93f8
  417b18:	lods   al,BYTE PTR ds:[esi]
  417b19:	mov    ebx,0xd1261d8a
  417b1e:	sub    BYTE PTR ds:0x42f0e7d5,ch
  417b24:	xchg   esp,eax
  417b25:	dec    esi
  417b26:	adc    edx,esp
  417b28:	sbb    DWORD PTR [esi-0x3349a2e1],ebx
  417b2e:	dec    eax
  417b2f:	outs   dx,BYTE PTR ds:[esi]
  417b30:	scas   al,BYTE PTR es:[edi]
  417b31:	pop    edx
  417b32:	mov    bh,0x9d
  417b34:	scas   eax,DWORD PTR es:[edi]
  417b35:	jmp    esp
  417b37:	xor    BYTE PTR [edx+0x78f54728],0x40
  417b3e:	test   BYTE PTR [eax+0x40c041b4],0x86
  417b45:	mov    WORD PTR [esi+0x42],es
  417b48:	inc    edx
  417b49:	shl    DWORD PTR ds:0x89ed77e1,cl
  417b4f:	inc    esi
  417b50:	stos   BYTE PTR es:[edi],al
  417b51:	sub    DWORD PTR [edi-0x34],eax
  417b54:	std    
  417b55:	sbb    BYTE PTR [esi+0x38c582e],cl
  417b5b:	test   al,bl
  417b5d:	jo     0x417bb3
  417b5f:	cmp    ch,BYTE PTR [ebx]
  417b61:	fs dec edi
  417b63:	mov    ds:0xb6c4ec73,eax
  417b68:	lds    esi,FWORD PTR [eax-0x46]
  417b6b:	stos   BYTE PTR es:[edi],al
  417b6c:	mov    ebx,0x45f67b38
  417b71:	add    eax,0xc62bc2d4
  417b76:	rol    DWORD PTR [edx+0x3701cc17],1
  417b7c:	cwde   
  417b7d:	mov    edx,0x3a326c76
  417b82:	stos   BYTE PTR es:[edi],al
  417b83:	stc    
  417b84:	mov    eax,eax
  417b86:	mov    edx,0xba2b2066
  417b8c:	rcl    DWORD PTR [edx+0xc],1
  417b8f:	pushf  
  417b90:	daa    
  417b91:	mov    bh,0xcb
  417b93:	add    eax,0x5dd60a75
  417b98:	pop    edx
  417b99:	fisub  DWORD PTR [ecx+0x6c]
  417b9c:	cwde   
  417b9d:	xor    DWORD PTR [esi+0x729dbdf1],edx
  417ba3:	add    cl,BYTE PTR [edi-0x78a1bd30]
  417ba9:	cmp    BYTE PTR [ebx-0x44],bh
  417bac:	or     esp,DWORD PTR [ebx+0x784a43ce]
  417bb2:	mov    ebx,cs
  417bb4:	inc    esp
  417bb5:	inc    dl
  417bb7:	mov    cl,0x48
  417bb9:	fstp   TBYTE PTR [esi-0x6]
  417bbc:	xor    al,0x88
  417bbe:	iret   
  417bbf:	loop   0x417c3f
  417bc1:	cld    
  417bc2:	and    al,0x1
  417bc4:	xchg   DWORD PTR [edi],edi
  417bc6:	js     0x417bde
  417bc8:	icebp  
  417bc9:	xor    eax,0xf730c87
  417bce:	aas    
  417bcf:	dec    ebx
  417bd0:	push   ebx
  417bd1:	loope  0x417c46
  417bd3:	pop    ds
  417bd4:	ficom  DWORD PTR [esi-0x26239a99]
  417bda:	aad    0xa6
  417bdc:	out    0x89,al
  417bde:	(bad)  
  417bdf:	cmp    ebx,DWORD PTR [eax+0x75]
  417be2:	daa    
  417be3:	or     dl,dl
  417be5:	dec    eax
  417be6:	int    0xc6
  417be8:	inc    ebx
  417be9:	lods   al,BYTE PTR ds:[esi]
  417bea:	repz test DWORD PTR [ecx+0x25f1396d],ebp
  417bf1:	mov    bl,0x84
  417bf3:	push   eax
  417bf4:	fcmovnu st,st(7)
  417bf6:	fwait
  417bf7:	dec    ebx
  417bf8:	xor    al,BYTE PTR [ecx+0x5e1efa03]
  417bfe:	inc    ecx
  417bff:	bound  ecx,QWORD PTR [eax+0x14]
  417c02:	push   ebp
  417c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c04:	mov    gs,edi
  417c06:	add    DWORD PTR [ecx-0x5d682d9a],edi
  417c0c:	sti    
  417c0d:	mov    BYTE PTR [edi-0x5c],ch
  417c10:	push   ss
  417c11:	jge    0x417bab
  417c13:	cmp    DWORD PTR [edx],0x7d
  417c16:	(bad)  
  417c17:	das    
  417c18:	inc    edx
  417c19:	push   0x64
  417c1b:	dec    edi
  417c1c:	lods   eax,DWORD PTR ds:[esi]
  417c1d:	fdiv   QWORD PTR ds:[edi]
  417c20:	es sub al,0x93
  417c23:	inc    esi
  417c24:	fld    TBYTE PTR [eax+0x10]
  417c27:	(bad)  
  417c29:	fwait
  417c2a:	jns    0x417c5e
  417c2c:	mov    dh,0xb6
  417c2e:	xor    edi,DWORD PTR [edx]
  417c30:	lds    eax,FWORD PTR [edi+0x2c]
  417c33:	pop    es
  417c34:	jmp    0x9706:0xf6fd2311
  417c3b:	and    ch,BYTE PTR [ecx-0x3f00ba]
  417c41:	int    0x8
  417c43:	pop    esi
  417c44:	jmp    0xff51:0x42ecfdab
  417c4b:	lea    ecx,[edi]
  417c4d:	cwde   
  417c4e:	mov    ds:0x6c06e66,al
  417c53:	fdiv   QWORD PTR [ebx]
  417c55:	in     al,dx
  417c56:	mov    cs,WORD PTR [edx-0x2733020b]
  417c5c:	mov    WORD PTR [ebx+0x617ba3c],ds
  417c62:	xchg   ebp,eax
  417c63:	lea    esi,[ebx]
  417c65:	aad    0x5e
  417c67:	lock retf 
  417c69:	jb     0x417c20
  417c6b:	lahf   
  417c6c:	dec    edx
  417c6d:	push   esi
  417c6e:	jecxz  0x417bf0
  417c70:	mov    ebx,0xb4647bc3
  417c75:	je     0x417c4d
  417c77:	add    BYTE PTR [ebp+0x485442a0],0xb
  417c7e:	repz mov ds:0x327ad78e,eax
  417c84:	xor    dl,bh
  417c86:	fwait
  417c87:	out    0xae,eax
  417c89:	icebp  
  417c8a:	pop    ebp
  417c8b:	and    BYTE PTR [edi+0x26],ch
  417c8e:	jb     0x417c73
  417c90:	aaa    
  417c91:	sbb    al,0x6b
  417c93:	jno    0x417c5e
  417c95:	nop
  417c96:	test   DWORD PTR [ebx-0x35],ebp
  417c99:	jg     0x417c3e
  417c9b:	jg     0x417c2e
  417c9d:	cmp    ebp,ecx
  417c9f:	push   esi
  417ca0:	adc    eax,0x850491cc
  417ca5:	sub    ebx,DWORD PTR [esi+0x1c]
  417ca8:	test   al,0x93
  417caa:	fbld   TBYTE PTR [eax+0x5b]
  417cad:	push   0xe7e8507a
  417cb2:	xchg   ebx,eax
  417cb3:	xchg   esp,eax
  417cb4:	sbb    eax,0xb41c560f
  417cb9:	adc    esp,DWORD PTR ds:0x693c953a
  417cbf:	mov    dh,0xb0
  417cc1:	jge    0x417c45
  417cc3:	stos   BYTE PTR es:[edi],al
  417cc4:	mov    ecx,0x8e4e35e6
  417cc9:	mov    bh,0xd1
  417ccb:	pop    ebp
  417ccc:	mov    ecx,0xdde9c287
  417cd1:	xor    eax,0x7d5463c4
  417cd6:	fsubr  QWORD PTR ds:0xf0e28c5e
  417cdc:	mov    edx,0x8e55735c
  417ce1:	ret    0xcbbd
  417ce4:	xor    DWORD PTR [esi+0x1],ebx
  417ce7:	in     eax,0x9d
  417ce9:	(bad)
  417cec:	xchg   edx,eax
  417ced:	mov    ?,WORD PTR [edi-0x39]
  417cf0:	jo     0x417cf1
  417cf2:	cmp    BYTE PTR [ebx+0x5bd5f3cc],bl
  417cf8:	rol    DWORD PTR ds:0xfacfe5b1,cl
  417cfe:	js     0x417cd3
  417d00:	stos   DWORD PTR es:[edi],eax
  417d01:	jl     0x417cf0
  417d03:	in     al,dx
  417d04:	cmp    eax,0x6fd2c683
  417d09:	dec    ebp
  417d0a:	dec    eax
  417d0b:	bound  ebp,QWORD PTR [esi+0x236bab71]
  417d11:	(bad)  
  417d14:	jp     0x417d47
  417d16:	(bad)  
  417d17:	repnz mov edi,0x517a030b
  417d1d:	sbb    DWORD PTR [ebx+0x0],eax
  417d20:	pop    ss
  417d21:	lods   eax,DWORD PTR ds:[esi]
  417d22:	jmp    0x417ccd
  417d24:	jmp    0x417d8e
  417d26:	hlt    
  417d27:	mov    ecx,0x5ef758f7
  417d2c:	call   0xd2c83bc0
  417d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d32:	fistp  WORD PTR [esi-0x34]
  417d35:	push   esi
  417d36:	mov    dh,0x2
  417d38:	pop    ss
  417d39:	repz push edx
  417d3b:	xchg   DWORD PTR [edx+0x97d95e8],ecx
  417d41:	jecxz  0x417d0e
  417d43:	push   edx
  417d44:	ficom  DWORD PTR ds:0x1bd88ab1
  417d4a:	xor    cl,bh
  417d4c:	aad    0x9e
  417d4e:	or     eax,0xc07de402
  417d53:	and    bl,BYTE PTR [ebp-0x49f4f966]
  417d59:	sti    
  417d5a:	mov    bh,0xe5
  417d5c:	gs sub esi,eax
  417d5f:	mov    eax,ds:0x11723662
  417d64:	dec    ebp
  417d65:	test   BYTE PTR [esi+0x6067588e],dl
  417d6b:	inc    edi
  417d6c:	lock mov dl,0xd3
  417d6f:	cmp    DWORD PTR [esi],edx
  417d71:	sbb    bl,cl
  417d73:	or     ch,dh
  417d75:	out    dx,eax
  417d76:	cld    
  417d77:	cmp    al,BYTE PTR [esi+0x653f1bc0]
  417d7d:	mov    ah,0x80
  417d7f:	shr    ch,1
  417d81:	push   ecx
  417d82:	jno    0x417d91
  417d84:	retf   
  417d85:	mov    bl,0x1e
  417d87:	pop    ss
  417d88:	lds    esi,FWORD PTR [ebp-0x76f05997]
  417d8e:	les    eax,FWORD PTR [ecx+0x19]
  417d91:	div    BYTE PTR [eax]
  417d93:	inc    ebp
  417d94:	cmp    BYTE PTR [ebp-0x74202bd8],bl
  417d9a:	jo     0x417e02
  417d9c:	and    BYTE PTR [edi-0x45],cl
  417d9f:	push   edx
  417da0:	adc    eax,0xfb19162
  417da5:	ret    
  417da6:	je     0x417d43
  417da8:	lahf   
  417da9:	rep lods eax,DWORD PTR ds:[esi]
  417dab:	inc    esi
  417dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dad:	iret   
  417dae:	sbb    al,0x2b
  417db0:	dec    esp
  417db1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db2:	mov    ch,0xf5
  417db4:	repnz push edx
  417db6:	xchg   ecx,eax
  417db7:	iret   
  417db8:	xor    eax,0x669d0b12
  417dbd:	dec    ebx
  417dbe:	cli    
  417dbf:	sbb    ah,ch
  417dc1:	(bad)  
  417dc3:	sahf   
  417dc4:	dec    edx
  417dc5:	jnp    0x417dc3
  417dc7:	ja     0x417df1
  417dc9:	inc    edx
  417dca:	sub    ecx,DWORD PTR [esi-0x395c8ecc]
  417dd0:	xor    DWORD PTR [ebp-0xb762b6e],ebx
  417dd6:	or     edi,DWORD PTR [ecx+0x64ed1118]
  417ddc:	shl    DWORD PTR [esi],0x93
  417ddf:	add    al,0x90
  417de1:	mov    al,BYTE PTR [esi+ecx*1-0x43]
  417de5:	add    bh,BYTE PTR [ebx-0x6258a1d6]
  417deb:	xchg   esi,eax
  417dec:	cmp    BYTE PTR [ebp-0x4],0xc1
  417df0:	call   0xe8c32ea9
  417df5:	mov    dh,0xcc
  417df7:	push   ecx
  417df8:	adc    DWORD PTR [ebp+0x3e12a261],esi
  417dfe:	or     ecx,DWORD PTR [eax-0x34]
  417e01:	jecxz  0x417e3e
  417e03:	xor    eax,0x30cb3e45
  417e08:	je     0x417dae
  417e0a:	pop    es
  417e0b:	test   al,0x6
  417e0d:	adc    DWORD PTR [edx-0x3408be9d],eax
  417e13:	pusha  
  417e14:	nop
  417e15:	pop    edi
  417e16:	enter  0xb1aa,0x81
  417e1a:	scas   eax,DWORD PTR es:[edi]
  417e1b:	inc    ebx
  417e1c:	sub    al,0xbc
  417e1e:	int3   
  417e1f:	or     DWORD PTR [ecx],esi
  417e21:	and    eax,0x80d011e6
  417e26:	ins    DWORD PTR es:[edi],dx
  417e27:	jno    0x417e46
  417e29:	or     dh,BYTE PTR [ecx]
  417e2b:	imul   ebp,DWORD PTR [ecx+0x44fda1ed],0xa6f63aa7
  417e35:	dec    esi
  417e36:	shr    DWORD PTR [edi+ecx*4],0x6f
  417e3a:	(bad)  
  417e3b:	out    0xbe,al
  417e3d:	mov    al,0x89
  417e3f:	(bad)  
  417e40:	ficom  WORD PTR [eax]
  417e42:	xlat   BYTE PTR ds:[ebx]
  417e43:	shl    BYTE PTR [ebx],1
  417e45:	pop    es
  417e46:	pushf  
  417e47:	add    al,al
  417e49:	push   ebx
  417e4a:	jmp    0x417e23
  417e4c:	jmp    0xbede:0x31fc0aff
  417e53:	retf   
  417e54:	fdivrp st(6),st
  417e56:	das    
  417e57:	out    0xb4,eax
  417e59:	dec    edx
  417e5a:	mov    dl,BYTE PTR [eax+0x3a]
  417e5d:	jle    0x417eb3
  417e5f:	aas    
  417e60:	cld    
  417e61:	in     al,dx
  417e62:	and    edi,DWORD PTR [edi]
  417e64:	scas   eax,DWORD PTR es:[edi]
  417e65:	arpl   cx,sp
  417e67:	ins    BYTE PTR es:[edi],dx
  417e68:	jle    0x5e44a862
  417e6e:	test   eax,0x95ae900d
  417e73:	rcl    eax,cl
  417e75:	push   es
  417e76:	lods   eax,DWORD PTR ds:[esi]
  417e77:	push   edi
  417e78:	mov    ebx,0x8891fa0b
  417e7d:	(bad)  
  417e7e:	loopne 0x417efb
  417e80:	cmp    DWORD PTR [esi+0x35d60a0a],ebx
  417e86:	xchg   al,ch
  417e88:	and    DWORD PTR [edx-0x46da6c58],ecx
  417e8e:	lea    eax,[edx+eax*8-0x33619446]
  417e95:	call   0xecb5f1d9
  417e9a:	in     al,dx
  417e9b:	loope  0x417ee8
  417e9d:	outs   dx,BYTE PTR ds:[esi]
  417e9e:	dec    ebx
  417e9f:	cdq    
  417ea0:	mov    BYTE PTR [ebx-0x4691d40b],cl
  417ea6:	sub    BYTE PTR [ebx],al
  417ea8:	cmp    DWORD PTR [eax-0x6aa699db],edx
  417eae:	jmp    DWORD PTR [edx]
  417eb0:	xchg   esp,eax
  417eb1:	ficomp DWORD PTR [ecx+0x2b5a08af]
  417eb7:	dec    eax
  417eb8:	ins    DWORD PTR es:[edi],dx
  417eb9:	out    dx,al
  417eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ebb:	jg     0x417ec6
  417ebd:	fsub   st,st(5)
  417ebf:	push   ecx
  417ec0:	xchg   edi,eax
  417ec1:	mov    edi,0xceaea78e
  417ec6:	adc    DWORD PTR [edi-0x46dd5915],0x16e515fd
  417ed0:	cmp    DWORD PTR [ecx+0x20],edi
  417ed3:	jns    0x417f51
  417ed5:	bound  ebx,QWORD PTR [ecx-0x4e7c5817]
  417edb:	mov    edi,0xc87f227b
  417ee0:	icebp  
  417ee1:	(bad)  
  417ee2:	or     eax,0xd3453459
  417ee7:	pop    eax
  417ee8:	adc    BYTE PTR [esp+eax*2+0x5fa488c9],0xd6
  417ef0:	xchg   edi,eax
  417ef1:	outs   dx,BYTE PTR ds:[esi]
  417ef2:	adc    DWORD PTR [ecx-0x78c25a1a],0xc783be6b
  417efc:	inc    eax
  417efd:	jg     0x417f0d
  417eff:	in     eax,dx
  417f00:	xchg   ebp,eax
  417f01:	call   ecx
  417f03:	cmp    dh,BYTE PTR [eax]
  417f05:	test   eax,0x2fccc7a8
  417f0a:	mov    al,0xa0
  417f0c:	in     al,0xe7
  417f0e:	popf   
  417f0f:	out    dx,al
  417f10:	aad    0xe6
  417f12:	shl    DWORD PTR [edi-0x781c2b56],cl
  417f18:	jge    0x417f3c
  417f1a:	retf   0xe378
  417f1d:	fstp   TBYTE PTR [ecx+0x56]
  417f20:	lods   eax,DWORD PTR ds:[esi]
  417f21:	jmp    0x417ee3
  417f23:	retf   
  417f24:	rcl    BYTE PTR [ecx+0x60eef1dc],0xbb
  417f2b:	leave  
  417f2c:	sub    al,0xc2
  417f2e:	adc    ebx,DWORD PTR [edx+0x6f936b90]
  417f34:	xor    edx,DWORD PTR [esi]
  417f36:	stos   DWORD PTR es:[edi],eax
  417f37:	mov    ebp,0x1ada92af
  417f3c:	cwde   
  417f3d:	add    BYTE PTR ds:0xc580c65,al
  417f43:	push   edi
  417f44:	scas   eax,DWORD PTR es:[edi]
  417f45:	les    edi,FWORD PTR [ebp+0x73f4f3b9]
  417f4b:	cdq    
  417f4c:	out    0x2d,eax
  417f4e:	fisttp WORD PTR [ecx+edi*8-0x76]
  417f52:	jne    0x417f90
  417f54:	push   cs
  417f55:	dec    esi
  417f56:	adc    eax,DWORD PTR [ecx+0x53]
  417f59:	bound  ecx,QWORD PTR [esi-0x38]
  417f5c:	fist   WORD PTR [ecx-0x4d]
  417f5f:	dec    esp
  417f60:	sub    eax,0x900ef780
  417f65:	out    0x2b,eax
  417f67:	jmp    0x417f5b
  417f69:	aad    0x9e
  417f6b:	loope  0x417fae
  417f6d:	btc    DWORD PTR [edi+0x72],ebp
  417f71:	aad    0xea
  417f73:	pop    eax
  417f74:	mov    cl,0xac
  417f77:	mov    ?,WORD PTR [ebx+0x57]
  417f7a:	mov    dl,0x5f
  417f7c:	mov    bl,BYTE PTR [edx]
  417f7e:	(bad)  
  417f7f:	push   eax
  417f80:	out    dx,al
  417f81:	adc    eax,0x713b4497
  417f86:	xlat   BYTE PTR ds:[ebx]
  417f87:	sahf   
  417f88:	test   eax,0x549412a0
  417f8d:	jmp    0x417f88
  417f8f:	xor    cl,al
  417f91:	das    
  417f92:	or     BYTE PTR [ebx],bl
  417f94:	adc    ch,BYTE PTR [ecx+0x359d4778]
  417f9a:	jmp    0xaa29:0xfa7f7d59
  417fa1:	retf   0x65a9
  417fa4:	sbb    al,BYTE PTR [ebp+0x2c4a32ae]
  417faa:	adc    eax,0xc5fb4e8e
  417faf:	sbb    eax,0x2dba33db
  417fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fb5:	addr16 xchg ebp,eax
  417fb7:	outs   dx,BYTE PTR ds:[esi]
  417fb8:	pop    eax
  417fb9:	call   0x612850f2
  417fbe:	or     eax,0xac5e3617
  417fc3:	mov    BYTE PTR [edi+0x7c],bh
  417fc6:	repnz (bad) 
  417fc8:	mov    DWORD PTR [eax-0x65],0x5111ed3b
  417fcf:	ficom  WORD PTR [ecx+ecx*8+0x22]
  417fd3:	xchg   edx,eax
  417fd4:	push   edi
  417fd5:	add    eax,DWORD PTR [ebx-0x7e]
  417fd8:	cmp    eax,0xe0728ca8
  417fdd:	hlt    
  417fde:	aas    
  417fdf:	jmp    0x5201:0xefac4e81
  417fe6:	dec    edx
  417fe7:	clc    
  417fe8:	stos   DWORD PTR es:[edi],eax
  417fe9:	push   ss
  417fea:	xchg   DWORD PTR [edi],ecx
  417fec:	sub    esp,eax
  417fee:	xor    ch,bl
  417ff0:	inc    esp
  417ff1:	push   edi
  417ff2:	sub    ch,BYTE PTR [ecx-0xb]
  417ff5:	xor    eax,0xd6aabe1c
  417ffa:	xchg   edi,eax
  417ffb:	jmp    FWORD PTR [edx]
  417ffd:	not    bh
  417fff:	mov    esp,0x11d5899
  418004:	icebp  
  418005:	xchg   al,bh
  418007:	dec    esi
  418008:	sub    ecx,esp
  41800a:	aad    0xe8
  41800c:	inc    esi
  41800d:	inc    BYTE PTR [esi]
  41800f:	popf   
  418010:	push   ebp
  418011:	dec    eax
  418012:	dec    edi
  418013:	call   0x1d50a651
  418018:	dec    edx
  41801a:	mov    ch,0x85
  41801c:	push   es
  41801d:	rcl    DWORD PTR [esi-0x34760171],cl
  418023:	xor    dl,BYTE PTR [esi]
  418025:	mov    bh,0x5
  418027:	neg    DWORD PTR [ecx]
  418029:	not    ah
  41802b:	sbb    ebx,edi
  41802d:	mov    edx,DWORD PTR [esi+0x1d]
  418030:	jmp    0x418003
  418032:	dec    ecx
  418033:	sbb    dh,BYTE PTR [ebx]
  418035:	cmp    eax,0xdda23a78
  41803a:	nop
  41803b:	mov    ebp,0xf2bd738e
  418040:	dec    ebx
  418041:	fist   WORD PTR [esi+0x1d]
  418044:	mov    ch,0x4d
  418046:	fisub  WORD PTR [ebx]
  418048:	mov    bl,0x7
  41804a:	(bad)  
  41804b:	and    esi,DWORD PTR [ecx+0x117eb5b]
  418051:	and    esi,DWORD PTR [esi]
  418053:	sub    al,0x4f
  418055:	scas   eax,DWORD PTR es:[edi]
  418056:	mov    dh,0x59
  418058:	(bad)  
  418059:	push   DWORD PTR [ecx-0x719bcfea]
  41805f:	xor    BYTE PTR es:[ebx+0x58],ah
  418063:	adc    BYTE PTR [ecx],cl
  418065:	mov    ds:0x48005da5,eax
  41806a:	add    ebx,ecx
  41806c:	lods   al,BYTE PTR ds:[esi]
  41806d:	xor    dh,al
  41806f:	mov    edi,0x8b88cf4
  418074:	xor    dl,BYTE PTR [ecx-0x27]
  418077:	outs   dx,DWORD PTR ds:[esi]
  418078:	inc    ebp
  418079:	stos   BYTE PTR es:[edi],al
  41807a:	fs ret 0xc580
  41807e:	shl    esp,0xce
  418081:	(bad)  
  418082:	sub    dl,BYTE PTR [eax-0x27]
  418085:	fcom   DWORD PTR ds:0x7fdbf7be
  41808b:	hlt    
  41808c:	dec    ecx
  41808d:	sbb    ebx,DWORD PTR [eax+0x5e]
  418090:	stos   BYTE PTR es:[edi],al
  418091:	fsincos 
  418093:	ss aas 
  418095:	fisubr DWORD PTR [edx]
  418097:	xchg   ebp,eax
  418098:	shl    DWORD PTR [ebx-0x1a],cl
  41809b:	jg     0x418023
  41809d:	fisub  DWORD PTR [ecx+0x75]
  4180a0:	pushf  
  4180a1:	push   es
  4180a2:	data16 cmp BYTE PTR [ebx+0x2352251],bl
  4180a9:	mov    WORD PTR [esi-0x747840f4],fs
  4180af:	mov    ds:0xf12fdd2b,eax
  4180b4:	sbb    DWORD PTR [edi],esi
  4180b6:	int    0xba
  4180b8:	xchg   edi,eax
  4180b9:	mov    DWORD PTR [esi+0x42d9b212],ecx
  4180bf:	cwde   
  4180c0:	push   esp
  4180c1:	cmc    
  4180c2:	inc    esp
  4180c3:	cmp    eax,0xfbf227e9
  4180c8:	and    eax,0xa00e72c4
  4180cd:	fwait
  4180ce:	pop    eax
  4180cf:	xchg   edx,eax
  4180d0:	in     al,0x7a
  4180d2:	pop    ecx
  4180d3:	test   DWORD PTR [edx+ecx*2],esi
  4180d6:	imul   ebx,DWORD PTR [eax],0xffffffb1
  4180d9:	pushf  
  4180da:	ss cld 
  4180dc:	aaa    
  4180dd:	push   esi
  4180de:	loopne 0x41812f
  4180e0:	pop    edx
  4180e1:	cld    
  4180e2:	xchg   ecx,eax
  4180e3:	pop    ecx
  4180e4:	xchg   esp,eax
  4180e5:	sub    eax,esi
  4180e7:	mov    bh,0x57
  4180e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180ea:	int    0x64
  4180ec:	gs cwde 
  4180ee:	aas    
  4180ef:	push   esi
  4180f0:	dec    ecx
  4180f1:	xor    eax,0x92a11e38
  4180f6:	jbe    0x418089
  4180f8:	out    0xf4,eax
  4180fa:	pop    es
  4180fb:	push   esp
  4180fc:	mov    eax,ds:0x78377153
  418101:	xchg   ebp,eax
  418102:	dec    ebx
  418103:	pop    edi
  418104:	pop    eax
  418105:	pop    esp
  418106:	repz (bad) 
  418108:	xchg   edx,eax
  418109:	stc    
  41810a:	retf   0x65ce
  41810d:	es aad 0xf5
  418110:	ja     0x4180d3
  418112:	cli    
  418113:	and    DWORD PTR [ebp+0x39],0x453d8946
  41811a:	shl    DWORD PTR [edx-0x78],1
  41811d:	or     ebx,DWORD PTR [eax-0x5]
  418120:	into   
  418121:	shr    ebp,0xf2
  418124:	pushf  
  418125:	adc    BYTE PTR [eax-0x4f43bd5],ah
  41812b:	inc    esi
  41812c:	aaa    
  41812d:	jnp    0x4180cb
  41812f:	(bad)  
  418130:	stc    
  418131:	mov    ds:0x41d46180,al
  418136:	and    BYTE PTR [edx-0x43],cl
  418139:	out    dx,al
  41813a:	xchg   DWORD PTR [edx],esp
  41813c:	imul   esi,esp,0x1bd9c38b
  418142:	pushf  
  418143:	cmpxchg BYTE PTR [ecx+0x31721c63],bl
  41814a:	xchg   BYTE PTR [esi-0x1cc29941],bl
  418150:	inc    ebp
  418151:	dec    ebx
  418152:	xlat   BYTE PTR ds:[ebx]
  418153:	sar    esi,cl
  418155:	inc    ebx
  418156:	and    dl,BYTE PTR ds:0x7ad3f791
  41815c:	push   esp
  41815d:	push   ebx
  41815e:	dec    edi
  41815f:	jg     0x41819f
  418161:	test   al,0xab
  418163:	lods   eax,DWORD PTR ds:[esi]
  418164:	add    ebp,DWORD PTR [ebp+0x5f6091b2]
  41816a:	and    al,0x66
  41816c:	inc    BYTE PTR [ecx]
  41816e:	test   eax,0x191e8d4d
  418173:	jmp    0xea4e890b
  418178:	test   al,0x71
  41817a:	mov    ecx,0xcb504ce3
  41817f:	pop    ebx
  418180:	inc    ebx
  418181:	ret    0xb553
  418184:	pop    esp
  418185:	push   ds
  418186:	imul   ebx,DWORD PTR [esi-0x27],0x6a12e353
  41818d:	pop    eax
  41818e:	dec    esi
  41818f:	sar    edx,cl
  418191:	pop    edx
  418192:	and    eax,0x99e02cfc
  418197:	sub    eax,0x4e9b6f0e
  41819c:	sub    edi,ebp
  41819e:	sbb    al,0x28
  4181a0:	ror    BYTE PTR [esi-0x15fa5e41],1
  4181a6:	mov    ds:0xf2462239,eax
  4181ab:	in     eax,0x55
  4181ad:	hlt    
  4181ae:	xor    esp,DWORD PTR [ebx+0x66a015ed]
  4181b4:	pop    esp
  4181b5:	jecxz  0x4181db
  4181b7:	xor    al,0xcd
  4181b9:	je     0x418187
  4181bb:	adc    al,0x18
  4181bd:	sub    cl,BYTE PTR [ebx-0x50634b97]
  4181c3:	inc    esp
  4181c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181c5:	(bad)  
  4181c7:	mov    eax,0x9a291f9
  4181cc:	inc    eax
  4181cd:	dec    ebx
  4181ce:	or     al,0xca
  4181d0:	add    ebx,esp
  4181d2:	jge    0x4181e4
  4181d4:	punpcklbw mm7,DWORD PTR [ebx+0x5d3c5c63]
  4181db:	shl    DWORD PTR [ecx],0x73
  4181de:	sub    ch,cl
  4181e0:	enter  0x7d6b,0x4b
  4181e4:	cld    
  4181e5:	jmp    0x260:0x7fe28ce9
  4181ec:	and    BYTE PTR [ecx-0x40a11f0b],bl
  4181f2:	cdq    
  4181f3:	sub    esi,eax
  4181f5:	mov    ds:0xb7d45dc2,eax
  4181fa:	and    ch,BYTE PTR [esi]
  4181fc:	mov    esi,0xb0e0e82
  418201:	lods   al,BYTE PTR ds:[esi]
  418202:	not    dl
  418204:	leave  
  418205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418206:	add    ah,BYTE PTR [eax+0x6]
  418209:	adc    eax,0x3b554950
  41820e:	add    DWORD PTR [ebx],edx
  418210:	push   esp
  418211:	jge    0x4181a3
  418213:	jmp    0x6ca270e6
  418218:	or     dh,BYTE PTR [ecx+0x9c9bd00]
  41821e:	mov    edx,0x4773c25e
  418223:	addr16 pop es
  418225:	call   0x429a71d5
  41822a:	pop    ebp
  41822b:	sub    dh,ah
  41822d:	xor    BYTE PTR [eax-0x3b],cl
  418230:	rcl    DWORD PTR [edx],cl
  418232:	(bad)  [esi]
  418234:	jle    0x418287
  418236:	or     DWORD PTR [edx-0x76],ebx
  418239:	pop    es
  41823a:	int3   
  41823b:	and    al,0xbd
  41823d:	mov    bl,0x29
  41823f:	cs mov eax,0x1344637d
  418245:	ins    BYTE PTR es:[edi],dx
  418246:	or     esp,ecx
  418248:	ss push ebx
  41824a:	push   esp
  41824b:	(bad)  
  41824c:	scas   eax,DWORD PTR es:[edi]
  41824d:	rcl    bh,cl
  41824f:	mov    esi,0xc0a3ecc6
  418254:	clc    
  418255:	mov    ds:0x621397ed,eax
  41825a:	push   edi
  41825b:	xchg   esp,eax
  41825c:	xor    ch,BYTE PTR [eax-0x3e8e0f8a]
  418262:	dec    eax
  418263:	clc    
  418264:	jo     0x4181f2
  418266:	sar    DWORD PTR [edx-0x47],1
  418269:	inc    DWORD PTR ds:0x5363550
  41826f:	or     DWORD PTR [edx],ebx
  418271:	rol    BYTE PTR [ebx+0x2c],cl
  418274:	shr    ch,cl
  418276:	mov    al,ds:0x81370e5f
  41827b:	and    BYTE PTR [ebp+0x6d78960c],al
  418281:	xor    dh,0x5e
  418284:	imul   ebx,edx,0x5f
  418287:	add    bh,dh
  418289:	inc    esp
  41828a:	stc    
  41828b:	sbb    DWORD PTR [esi-0x16],0x10
  41828f:	test   DWORD PTR [ecx-0x1b],0x4ba53539
  418296:	rcl    DWORD PTR [eax+0x41fec73f],0x4b
  41829d:	std    
  41829e:	and    ch,BYTE PTR [ebp-0x3d5548bd]
  4182a4:	adc    bl,dl
  4182a6:	inc    ebx
  4182a7:	(bad)  
  4182a8:	out    dx,ax
  4182aa:	ffree  st(0)
  4182ac:	sub    DWORD PTR [edi-0x3cef3527],ecx
  4182b2:	push   edx
  4182b3:	rcl    DWORD PTR [edx+0x41be946],1
  4182b9:	int    0x5b
  4182bb:	pop    esp
  4182bc:	mov    eax,0x95d2659b
  4182c1:	fild   QWORD PTR [ebp-0x7b091a8f]
  4182c7:	push   edi
  4182c8:	sub    BYTE PTR [ebp+ecx*4+0x7c],bh
  4182cc:	retf   
  4182cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182ce:	popf   
  4182cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182d0:	push   edi
  4182d1:	adc    eax,eax
  4182d3:	loopne 0x418328
  4182d5:	mov    bh,0x37
  4182d7:	aad    0x17
  4182d9:	(bad)  
  4182da:	mov    dl,BYTE PTR [edx-0x7dfeb42a]
  4182e0:	fdivr  DWORD PTR [ecx]
  4182e2:	ins    BYTE PTR es:[edi],dx
  4182e3:	sub    BYTE PTR [ebx],0x63
  4182e6:	fcomp  QWORD PTR [ebp-0x58]
  4182e9:	(bad)  
  4182ea:	aam    0x71
  4182ec:	add    eax,0x9394a592
  4182f1:	hlt    
  4182f2:	xchg   esp,eax
  4182f3:	push   ebx
  4182f4:	xchg   ebp,eax
  4182f5:	cmp    BYTE PTR [edi+0x61],bl
  4182f8:	mov    dl,0x65
  4182fa:	pop    edi
  4182fb:	add    BYTE PTR cs:[esi+0x6e],ah
  4182ff:	fwait
  418300:	mov    ebp,0xa5ea2519
  418305:	push   eax
  418306:	test   BYTE PTR [edi-0x1d],0x50
  41830a:	dec    esp
  41830b:	pop    ebp
  41830c:	sbb    edi,DWORD PTR [esi-0x28]
  41830f:	or     ecx,DWORD PTR [edx+0x4b]
  418312:	pop    edx
  418313:	in     al,dx
  418314:	test   eax,0xc3d1f00d
  418319:	pop    eax
  41831a:	daa    
  41831b:	xchg   edx,eax
  41831c:	pop    ecx
  41831d:	lods   eax,DWORD PTR ds:[esi]
  41831e:	es fdivrp st(4),st
  418321:	stos   BYTE PTR es:[edi],al
  418322:	ror    DWORD PTR [ecx-0x18],cl
  418325:	outs   dx,BYTE PTR ds:[esi]
  418326:	inc    edi
  418327:	mov    esp,0xbfa9724f
  41832c:	jae    0x41833d
  41832e:	pop    edx
  41832f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418330:	call   0x335dd240
  418335:	leave  
  418336:	pop    eax
  418337:	adc    al,0xe7
  418339:	sub    BYTE PTR [edi],dh
  41833b:	mov    ch,0x34
  41833d:	std    
  41833e:	lods   eax,DWORD PTR ds:[esi]
  41833f:	mov    ebx,0x939aae2
  418344:	out    dx,al
  418345:	cmp    eax,0x9b87c269
  41834a:	fisubr WORD PTR [ebx-0x3d]
  41834d:	cwde   
  41834e:	test   BYTE PTR [ebx+0x33],bl
  418351:	and    edi,esi
  418353:	add    dl,BYTE PTR [ebx-0x4add2de0]
  418359:	ja     0x41836b
  41835b:	dec    ebx
  41835c:	sti    
  41835d:	aas    
  41835e:	int    0x3f
  418360:	and    ebx,DWORD PTR [edi-0x731b5120]
  418366:	test   BYTE PTR [ebp+ecx*2+0x11],0x59
  41836b:	leave  
  41836c:	in     eax,0x86
  41836e:	call   eax
  418370:	(bad)  
  418371:	cmp    bh,BYTE PTR [ebx+0x7]
  418374:	mov    al,ds:0x9ba42c43
  418379:	inc    BYTE PTR [ebx+0x52de2485]
  41837f:	sbb    cl,BYTE PTR ds:0x92edc519
  418385:	and    BYTE PTR [ecx-0x2fc8d6aa],dl
  41838b:	or     WORD PTR [esi-0x30],si
  41838f:	pop    edx
  418390:	pop    edi
  418391:	mov    DWORD PTR [edx+0x77],ecx
  418394:	and    dl,0x10
  418397:	cmp    ch,BYTE PTR [esi-0x423efe73]
  41839d:	and    al,0x5
  41839f:	mov    ds:0x26d53eae,al
  4183a4:	pop    ss
  4183a5:	popa   
  4183a6:	cmp    eax,0x26ea2df4
  4183ab:	cli    
  4183ac:	ja     0x4183e7
  4183ae:	hlt    
  4183af:	hlt    
  4183b0:	push   ss
  4183b1:	loope  0x4183a3
  4183b3:	sbb    bl,BYTE PTR [edi-0x63]
  4183b6:	ret    
  4183b7:	add    DWORD PTR [ecx+edx*8],ebp
  4183ba:	push   esp
  4183bb:	ret    0x3605
  4183be:	cli    
  4183bf:	xchg   BYTE PTR [edx+ebp*4],bl
  4183c2:	mov    ebx,0x221d0b72
  4183c7:	pop    eax
  4183c8:	adc    DWORD PTR [ecx+0x5ecfd2ca],ebx
  4183ce:	jle    0xc839b231
  4183d4:	mov    ah,0x58
  4183d6:	lahf   
  4183d7:	cmp    eax,0xf58e3924
  4183dc:	or     al,bl
  4183de:	xor    al,0xfc
  4183e0:	mov    bh,0xb8
  4183e2:	out    0x47,eax
  4183e4:	push   eax
  4183e5:	sbb    al,0x37
  4183e7:	std    
  4183e8:	(bad)  
  4183ea:	mov    ds:0x14b587ae,eax
  4183ef:	jno    0x418442
  4183f1:	push   ebx
  4183f2:	inc    edi
  4183f3:	inc    esp
  4183f4:	jae    0x418448
  4183f6:	add    ah,dh
  4183f8:	or     eax,0xdf796a7f
  4183fd:	sub    DWORD PTR [edx+0x28],esp
  418400:	push   esp
  418401:	mov    bh,0x89
  418403:	sbb    esi,DWORD PTR [edi+0x44]
  418406:	mov    ds:0xb5a58e47,al
  41840b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41840c:	add    BYTE PTR [eax-0x1a2e5c7c],ah
  418412:	retf   0x93cc
  418415:	(bad)  
  418416:	push   ebp
  418417:	mov    dx,0x88a6
  41841b:	push   edi
  41841c:	imul   ebx,DWORD PTR [ebx-0xb],0x23a980
  418423:	jns    0x41846a
  418425:	cmp    bl,BYTE PTR [esi]
  418427:	adc    eax,0x6499350c
  41842c:	sub    BYTE PTR [edx],cl
  41842e:	or     edi,DWORD PTR [edx+0x79bf0a9f]
  418434:	nop
  418435:	jmp    0x41840f
  418437:	push   es
  418438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418439:	jp     0x418449
  41843b:	lods   al,BYTE PTR ds:[esi]
  41843c:	or     eax,0xcf3000b4
  418441:	sahf   
  418442:	jb     0x4184bc
  418444:	fcomp  DWORD PTR [eax-0x2011a5a]
  41844a:	lds    ebp,FWORD PTR [edx]
  41844c:	es push esp
  41844e:	xor    eax,0xc1673eda
  418453:	cwde   
  418454:	lods   eax,DWORD PTR ds:[esi]
  418455:	xchg   ecx,eax
  418456:	inc    edi
  418457:	cmp    al,0xe8
  418459:	mov    cl,0x7a
  41845b:	push   0xffffff8b
  41845d:	in     eax,dx
  41845e:	sahf   
  41845f:	repnz fadd QWORD PTR [eax]
  418462:	sub    al,0x4d
  418464:	cmp    eax,0x6d56fe4b
  418469:	fsubrp st(4),st
  41846b:	shl    BYTE PTR [ecx+0x48],0x7
  41846f:	sub    eax,0x7d9f7ce0
  418474:	ds sbb edi,edi
  418477:	sub    DWORD PTR ds:0x4da83d6a,esi
  41847d:	imul   DWORD PTR [esi]
  41847f:	pusha  
  418480:	shr    DWORD PTR [eax+edi*4],cl
  418483:	fwait
  418484:	test   BYTE PTR [ebx-0x52],al
  418487:	jmp    0x418501
  418489:	pop    edx
  41848a:	pop    ebx
  41848b:	std    
  41848c:	mov    BYTE PTR [eax+0x54e62c84],0xe3
  418493:	xlat   BYTE PTR ds:[ebx]
  418494:	nop
  418495:	xchg   ebp,edi
  418497:	jne    0x41845f
  418499:	or     al,0xc7
  41849b:	sti    
  41849c:	xchg   esp,eax
  41849d:	and    DWORD PTR [esi+0x554b3ab],esi
  4184a3:	ja     0x41847a
  4184a5:	mov    ds:0xbf9e6831,eax
  4184aa:	add    ah,ch
  4184ac:	adc    al,0x3
  4184ae:	fucom  st(0)
  4184b0:	(bad)  
  4184b1:	cmp    eax,0x60238bcf
  4184b6:	ins    BYTE PTR es:[edi],dx
  4184b7:	cmp    BYTE PTR [ebp-0xaabad7f],dl
  4184bd:	loope  0x4184b9
  4184bf:	add    eax,0x7ac5c3e1
  4184c4:	mov    al,ds:0x52c11511
  4184c9:	xchg   ebp,eax
  4184ca:	mov    bl,0xe0
  4184cc:	pop    ebx
  4184cd:	scas   eax,DWORD PTR es:[edi]
  4184ce:	xchg   BYTE PTR [ecx-0x59bf4c3d],al
  4184d4:	ret    0x3229
  4184d7:	adc    ecx,DWORD PTR ds:[ebx*4-0x330ecda3]
  4184df:	jbe    0x4184dd
  4184e1:	ins    DWORD PTR es:[edi],dx
  4184e2:	jg     0x418518
  4184e4:	nop
  4184e5:	xor    DWORD PTR [eax+0x4e],ecx
  4184e8:	addr16 data16 int3 
  4184eb:	add    DWORD PTR [edi+0x47],eax
  4184ee:	xchg   DWORD PTR [ebp+edi*2+0x7],esi
  4184f2:	inc    ebp
  4184f3:	mov    ebx,0xd5666fc4
  4184f8:	ret    
  4184f9:	adc    DWORD PTR [edx+0x37],0x26
  4184fd:	dec    edx
  4184fe:	mov    eax,ds:0xa89375b6
  418503:	and    eax,0xd5e796a7
  418508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418509:	jle    0x4184eb
  41850b:	mov    dh,0xa4
  41850d:	fsubr  QWORD PTR [ebx+0x61]
  418510:	sti    
  418511:	sbb    DWORD PTR [ebx-0x78],0x367b13af
  418518:	and    al,0x8e
  41851a:	popa   
  41851b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41851c:	jnp    0x418554
  41851e:	mov    cl,0xc4
  418520:	jmp    0x56c4:0x5907630a
  418527:	sbb    al,0xe3
  418529:	add    edx,DWORD PTR [ecx+eiz*2-0x7e]
  41852d:	adc    BYTE PTR [ecx+0xb3ba3ad],dh
  418533:	nop
  418534:	xchg   esi,eax
  418535:	jecxz  0x41858c
  418537:	sub    BYTE PTR [ecx-0x443741e3],ah
  41853d:	mov    eax,ds:0x7471096a
  418542:	cs and al,0x5d
  418545:	ficom  DWORD PTR [eax+0x6e]
  418548:	not    BYTE PTR [ecx]
  41854a:	or     ecx,DWORD PTR [ebx+0x7c]
  41854d:	sub    eax,DWORD PTR [esi-0x1a1acb21]
  418553:	shl    BYTE PTR [eax+0x1f],0xdf
  418557:	daa    
  418558:	ds test eax,0xc4ad7b47
  41855e:	push   ecx
  41855f:	push   edi
  418560:	add    esp,DWORD PTR ds:0x3ff9de37
  418566:	push   0xffffff9d
  418568:	add    DWORD PTR [ecx],eax
  41856a:	cwde   
  41856b:	iret   
  41856c:	int    0x23
  41856e:	sub    eax,0xbdadb662
  418573:	neg    DWORD PTR [esi+0x166c8e66]
  418579:	sbb    bl,cl
  41857b:	in     al,0x77
  41857d:	sub    BYTE PTR [ebp+0x74c5c996],ah
  418583:	mov    es:0xbebee7d4,al
  418589:	stos   BYTE PTR es:[edi],al
  41858a:	sub    eax,0x6e496bc0
  41858f:	jbe    0x4185a3
  418591:	lods   al,BYTE PTR ds:[esi]
  418592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418593:	sub    DWORD PTR [esi+0x60],esi
  418596:	adc    al,0xe9
  418598:	mov    DWORD PTR [eax+0xacf6367],ebx
  41859e:	mov    dh,0x43
  4185a0:	xchg   edi,eax
  4185a1:	xlat   BYTE PTR ds:[ebx]
  4185a2:	sub    eax,0xdb23a349
  4185a7:	xor    ch,BYTE PTR [ebx+ecx*8-0x48]
  4185ab:	adc    ebx,ebp
  4185ad:	(bad)  
  4185ae:	mov    ebx,0x8ed276b8
  4185b3:	mov    esp,0x27618077
  4185b8:	ds dec ebp
  4185ba:	inc    ebx
  4185bb:	mov    dh,0x60
  4185bd:	sub    al,0xe2
  4185bf:	lods   eax,DWORD PTR ds:[esi]
  4185c0:	mov    bh,0x43
  4185c2:	ja     0x418636
  4185c4:	dec    ebp
  4185c5:	enter  0x7f1c,0x51
  4185c9:	mov    ch,BYTE PTR [edx-0x25a18a22]
  4185cf:	or     ch,al
  4185d1:	shr    ecx,cl
  4185d3:	stos   DWORD PTR es:[edi],eax
  4185d4:	fisub  DWORD PTR [eax+0x201056c0]
  4185da:	pop    es
  4185db:	dec    eax
  4185dc:	mov    ah,ah
  4185de:	data16 stc 
  4185e0:	scas   eax,DWORD PTR es:[edi]
  4185e1:	mov    al,0xf3
  4185e3:	jae    0x418582
  4185e5:	sar    BYTE PTR [edi+eiz*4],1
  4185e8:	aad    0x53
  4185ea:	sar    BYTE PTR [ecx+edx*8+0x11f1c90b],1
  4185f1:	retf   0x31c2
  4185f4:	cs and DWORD PTR ss:[ebx+0x33],esp
  4185f9:	loop   0x41863b
  4185fb:	gs push 0xffffff95
  4185fe:	cmp    ebp,ebp
  418600:	test   cl,cl
  418602:	cmp    dh,BYTE PTR [ecx+0x6f]
  418605:	mov    DWORD PTR [edx+0x709480f7],0x2c8a1542
  41860f:	dec    edi
  418610:	gs jg  0x4185ca
  418613:	ret    
  418614:	lea    ebp,[edi-0x19]
  418617:	fucom  st(5)
  418619:	ror    BYTE PTR ss:0x1dc4ba5e,0x37
  418621:	sbb    BYTE PTR [edx+0x46363ef6],bh
  418627:	in     al,dx
  418628:	xor    ecx,DWORD PTR [ebp+0x42d3cb9e]
  41862e:	repnz mov edx,0x1c717127
  418634:	xchg   esi,eax
  418635:	(bad)  
  418637:	popa   
  418638:	adc    eax,0xd267c205
  41863d:	adc    dl,cl
  41863f:	call   0x93fcdb02
  418644:	push   0x137c2e45
  418649:	ror    BYTE PTR [eax],0x87
  41864c:	shl    ecx,1
  41864e:	pop    eax
  41864f:	js     0x418690
  418651:	fidiv  WORD PTR [eax]
  418653:	mov    edi,0x1b75ef9a
  418658:	jmp    0x28eb5fea
  41865d:	outs   dx,DWORD PTR ds:[esi]
  41865e:	inc    ebx
  41865f:	ror    BYTE PTR [ebx+0xe2a74c7],cl
  418665:	clc    
  418666:	xchg   ecx,eax
  418667:	xor    BYTE PTR [esp+eiz*8+0x16],cl
  41866b:	xchg   ebx,eax
  41866c:	aad    0xff
  41866e:	sbb    eax,0xff4c106c
  418673:	sub    al,0x48
  418675:	and    DWORD PTR [eax],ebx
  418677:	ss xchg esp,eax
  418679:	mov    bl,0x82
  41867b:	ja     0x418638
  41867d:	mov    al,ds:0x9b329449
  418682:	mov    ecx,0x465d1405
  418687:	sub    eax,0x92bc49d9
  41868c:	cmp    dl,BYTE PTR [edi-0x46d5751a]
  418692:	arpl   WORD PTR [ecx-0xaf277f2],bx
  418698:	mov    esi,0x914d4974
  41869d:	js     0x418716
  41869f:	es ffreep st(3)
  4186a2:	sbb    DWORD PTR [edi+0x5daba8db],edx
  4186a8:	xchg   DWORD PTR [ebx+edi*2+0x1c],ebx
  4186ac:	mov    eax,0xa6f6f2bc
  4186b2:	ret    0xaf8e
  4186b5:	sub    BYTE PTR [ecx-0x6842fe5],ch
  4186bb:	fst    QWORD PTR [eax+0x68addfd9]
  4186c1:	sub    ch,BYTE PTR [ebp+0x386a44a9]
  4186c7:	or     esp,esp
  4186c9:	and    ebx,eax
  4186cb:	sbb    bl,al
  4186cd:	xor    eax,0x2830c2c2
  4186d2:	add    bh,ch
  4186d4:	pop    ebx
  4186d5:	push   0x6109f49f
  4186da:	mov    dl,0xe9
  4186dc:	jo     0x4186a6
  4186de:	dec    esi
  4186df:	repnz lods eax,DWORD PTR ds:[esi]
  4186e1:	iret   
  4186e2:	test   BYTE PTR [edi+esi*4],0x3f
  4186e6:	xor    dl,BYTE PTR [esi+ebp*2+0x6f]
  4186ea:	xor    cl,BYTE PTR [ecx+edx*2-0x20]
  4186ee:	mov    ds:0xce0629f,al
  4186f3:	ins    DWORD PTR es:[edi],dx
  4186f4:	imul   esi,DWORD PTR [ebx],0x121afdf5
  4186fa:	imul   ebp,ecx,0x4d
  4186fd:	and    bh,ch
  4186ff:	dec    ebp
  418700:	add    eax,0x8da96f43
  418705:	fcom   DWORD PTR [ebp-0x2f807995]
  41870c:	call   0xa7980976
  418711:	or     al,0x83
  418713:	in     al,dx
  418714:	lahf   
  418715:	inc    edi
  418716:	fwait
  418717:	mov    ah,ch
  418719:	loop   0x4186c8
  41871b:	cmp    dh,ah
  41871d:	ja     0x41873c
  41871f:	popf   
  418720:	shl    BYTE PTR [eax],1
  418722:	adc    al,0x6c
  418724:	and    al,0xe0
  418726:	jp     0x4186cb
  418728:	and    DWORD PTR [esi-0x3a],edi
  41872b:	into   
  41872c:	xor    ch,dh
  41872e:	xlat   BYTE PTR ds:[ebx]
  41872f:	aad    0x9f
  418731:	rol    DWORD PTR [edx+0x3e],cl
  418734:	inc    esp
  418735:	jmp    0x599d2708
  41873a:	fwait
  41873b:	bound  ebp,QWORD PTR [ebx+ebp*8-0x31]
  41873f:	xchg   DWORD PTR [ebp-0x1c],esp
  418742:	shl    DWORD PTR [ebx+0x2d11eae0],1
  418748:	je     0x418715
  41874a:	pop    ss
  41874b:	xchg   edi,eax
  41874c:	int3   
  41874d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41874e:	pop    es
  41874f:	dec    ecx
  418750:	push   edx
  418751:	ror    BYTE PTR [ebp-0x61a78bf6],cl
  418757:	sub    BYTE PTR [ecx-0x11a311a0],0x13
  41875e:	jle    0x418705
  418760:	xchg   esp,eax
  418761:	test   BYTE PTR [ecx],cl
  418763:	loop   0x4187a3
  418765:	out    0xe7,al
  418767:	dec    edi
  418768:	into   
  418769:	ror    BYTE PTR [ecx-0x74cb9c24],cl
  41876f:	dec    edi
  418770:	rcr    BYTE PTR [esi+0x57],0x32
  418774:	ss cmp eax,0x8f61327c
  41877a:	pop    ecx
  41877b:	cmc    
  41877c:	arpl   dx,bp
  41877e:	push   ebx
  41877f:	xchg   ebp,eax
  418780:	xor    edi,ebp
  418782:	dec    bh
  418784:	call   0x6258c375
  418789:	lds    ecx,FWORD PTR [ebp-0x2fc7a11]
  41878f:	mov    gs,WORD PTR [ebp+ecx*1+0x8]
  418793:	adc    ebx,DWORD PTR [ebx-0x64]
  418796:	je     0x41877a
  418798:	sbb    BYTE PTR [ecx],bh
  41879a:	and    DWORD PTR [edx],esp
  41879c:	js     0x4187dc
  41879e:	(bad)  
  41879f:	jle    0x418746
  4187a1:	loop   0x4187de
  4187a3:	(bad)  
  4187a4:	clc    
  4187a5:	(bad)  
  4187a6:	dec    BYTE PTR [eax-0x7]
  4187a9:	push   ds
  4187aa:	add    DWORD PTR [edx+0x6a8e95f3],ebp
  4187b0:	icebp  
  4187b1:	cld    
  4187b2:	fild   WORD PTR [edi+0x37]
  4187b5:	mov    esp,0xe7f7dcd5
  4187ba:	mov    WORD PTR [ebx],gs
  4187bc:	scas   al,BYTE PTR es:[edi]
  4187bd:	add    al,0x1
  4187bf:	cmp    ebp,DWORD PTR [esi-0x146856a1]
  4187c5:	or     ah,BYTE PTR [edx]
  4187c7:	jnp    0x4187fc
  4187c9:	mov    cl,0xe0
  4187cb:	inc    ebp
  4187cc:	shl    BYTE PTR [ebx],cl
  4187ce:	stos   BYTE PTR es:[edi],al
  4187cf:	cli    
  4187d0:	jno    0x4187fb
  4187d2:	pop    esp
  4187d3:	in     eax,dx
  4187d4:	pop    es
  4187d5:	xchg   esp,eax
  4187d6:	xor    BYTE PTR [edx],dh
  4187d8:	jg     0x41884c
  4187da:	dec    ebx
  4187db:	inc    ebx
  4187dc:	aad    0xa4
  4187de:	pop    esi
  4187df:	stos   DWORD PTR es:[edi],eax
  4187e0:	sbb    DWORD PTR [ecx-0xd],ebp
  4187e3:	loop   0x418798
  4187e5:	pop    esi
  4187e6:	call   0x6b8d:0x2d83bcf4
  4187ed:	retf   
  4187ee:	popf   
  4187ef:	jb     0x4187a8
  4187f1:	mov    al,ds:0xc83aedbc
  4187f6:	sub    bh,BYTE PTR [edx]
  4187f8:	out    0x47,al
  4187fa:	mov    al,ds:0x31300a3d
  4187ff:	mov    al,0xbb
  418801:	mov    eax,ds:0x4de2f682
  418806:	ret    0x4729
  418809:	aad    0x8a
  41880b:	and    esi,ebp
  41880d:	enter  0x16b0,0xa0
  418811:	popf   
  418812:	dec    eax
  418813:	sub    al,0xde
  418815:	aas    
  418816:	xchg   esp,eax
  418817:	jle    0x418826
  418819:	jne    0x4187db
  41881b:	test   BYTE PTR ds:0x62d3ca4b,al
  418821:	inc    esi
  418822:	and    BYTE PTR [ebp+ecx*4+0x2d7b01c2],dh
  418829:	scas   eax,DWORD PTR es:[edi]
  41882a:	and    al,0x5e
  41882c:	rcl    BYTE PTR [esi-0x67],0x46
  418830:	or     dl,bh
  418832:	repnz scas eax,DWORD PTR es:[edi]
  418834:	push   edi
  418835:	rcl    BYTE PTR [edx+0x29f30d36],0xee
  41883c:	test   eax,esi
  41883e:	inc    edi
  41883f:	clc    
  418840:	daa    
  418841:	inc    edi
  418842:	sbb    ebx,esp
  418844:	out    dx,al
  418845:	in     eax,dx
  418846:	xor    eax,0x415d8760
  41884b:	loopne 0x418864
  41884d:	mov    edi,0x9ca8e750
  418852:	gs lock jne 0x4187fa
  418856:	lods   eax,DWORD PTR ds:[esi]
  418857:	adc    al,BYTE PTR [ebx+0x21]
  41885a:	adc    edx,DWORD PTR [edx]
  41885c:	and    WORD PTR [edi],cx
  41885f:	out    0xa,al
  418861:	retf   0x7ab6
  418864:	push   0x63
  418866:	mov    dl,0x2
  418868:	(bad)  
  418869:	jmp    0x7694:0xfa91037d
  418870:	xor    al,0x90
  418872:	arpl   WORD PTR [edx],bp
  418874:	jns    0x41887e
  418876:	jecxz  0x4188a0
  418878:	sbb    al,0xee
  41887a:	add    al,0x6c
  41887c:	imul   edi,DWORD PTR [ecx+0x1d19c24b],0xc0597277
  418886:	out    dx,al
  418887:	or     DWORD PTR [esi+ebp*1+0x459c86a6],ecx
  41888e:	and    al,0x4a
  418890:	daa    
  418891:	clc    
  418892:	sbb    dl,BYTE PTR [edx]
  418894:	(bad)  
  418895:	ret    0xce8e
  418898:	jno    0x418893
  41889a:	adc    al,0x34
  41889c:	jl     0x418912
  41889e:	or     eax,DWORD PTR [eax]
  4188a0:	mov    DWORD PTR [ebp-0x3b],edi
  4188a3:	cmp    BYTE PTR [eax-0x3ddfbd98],ah
  4188a9:	das    
  4188aa:	lea    ebp,[esi+esi*4-0x3f]
  4188ae:	ss loope 0x41884b
  4188b1:	out    dx,al
  4188b2:	mov    WORD PTR [eax],?
  4188b4:	push   0xffffff84
  4188b6:	out    0x7e,eax
  4188b8:	or     eax,0x7edc6d73
  4188bd:	(bad)  
  4188be:	and    DWORD PTR [ecx+0x2c30396],ebx
  4188c4:	dec    ebx
  4188c5:	mov    al,ds:0x30378329
  4188ca:	std    
  4188cb:	mov    eax,ds:0xdd37ecc5
  4188d0:	adc    ax,0x2d1d
  4188d4:	jge    0x41887c
  4188d6:	aad    0x86
  4188d8:	or     edx,DWORD PTR [ebp+ecx*4+0x3aaf9e42]
  4188df:	mov    ds:0xe27b7fa0,eax
  4188e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188e5:	xor    eax,0xf44496fc
  4188ea:	(bad)  
  4188eb:	pop    ss
  4188ec:	fistp  DWORD PTR [ebx]
  4188ee:	xchg   si,ax
  4188f0:	jb     0x4188a3
  4188f2:	cmp    bl,BYTE PTR [eax-0x192140b6]
  4188f8:	iret   
  4188f9:	sbb    ch,BYTE PTR [edx-0x1]
  4188fc:	dec    BYTE PTR ss:[esi]
  4188ff:	imul   edi,DWORD PTR [ebx+ebp*2+0x52],0xffffffba
  418904:	loop   0x4188dd
  418906:	and    eax,0x2e1f25ad
  41890b:	jecxz  0x4188c4
  41890d:	lock push es
  41890f:	push   edi
  418910:	lock sbb DWORD PTR [edi+eiz*1],edx
  418914:	push   esp
  418915:	cwde   
  418916:	sub    BYTE PTR ds:0x56439393,bh
  41891c:	std    
  41891d:	xor    dl,BYTE PTR [ecx+edi*2+0x525b87ed]
  418924:	push   ebp
  418925:	cmc    
  418926:	jge    0x418934
  418928:	dec    ebx
  418929:	pop    ecx
  41892a:	mov    al,ds:0x5a090d66
  41892f:	sti    
  418930:	sti    
  418931:	call   0x9207:0x585ac29
  418938:	sbb    eax,0x63968ffa
  41893d:	pusha  
  41893e:	daa    
  41893f:	ins    BYTE PTR es:[edi],dx
  418940:	and    cl,BYTE PTR [ebx+0x19f114c1]
  418946:	inc    eax
  418947:	add    DWORD PTR [ecx+0x2ebb0e95],ebx
  41894d:	sar    ch,0x17
  418950:	adc    al,0x1
  418952:	pop    ss
  418953:	add    eax,0xc302ebcd
  418958:	xchg   edx,eax
  418959:	ds jne 0x4189a8
  41895c:	xor    esi,DWORD PTR [edi-0x3624587d]
  418962:	pop    edx
  418963:	out    dx,al
  418964:	cmp    ebx,ecx
  418966:	mov    bl,BYTE PTR [ecx+0x6d]
  418969:	jae    0x41896e
  41896b:	cmp    al,ch
  41896d:	pop    eax
  41896e:	hlt    
  41896f:	cmp    al,0xfc
  418971:	mul    DWORD PTR [eax+0x4949f8b0]
  418977:	or     al,0x45
  418979:	adc    DWORD PTR [edx-0x7abb1127],esp
  41897f:	inc    DWORD PTR [ebp+0x7a]
  418982:	mov    BYTE PTR [edi-0x7ec06d30],ah
  418988:	dec    eax
  418989:	dec    si
  41898b:	fldenv [ebx+0xd75b035]
  418991:	pop    ebx
  418992:	rcl    eax,cl
  418994:	xchg   esi,esp
  418996:	cli    
  418997:	adc    eax,0x4c751727
  41899c:	repnz mov WORD PTR [edi],fs
  41899f:	(bad)  
  4189a0:	push   eax
  4189a1:	(bad)  
  4189a2:	mov    esp,0xa4d4bed0
  4189a7:	dec    edx
  4189a8:	cdq    
  4189a9:	mov    eax,0xbe43c94e
  4189ae:	mov    eax,ds:0xc1502e95
  4189b3:	(bad)  
  4189b4:	pop    esi
  4189b5:	retf   0x99bd
  4189b8:	cmp    eax,0x8bed0aaf
  4189bd:	repnz gs sub ecx,esp
  4189c1:	or     edi,DWORD PTR [eax]
  4189c3:	cmp    al,BYTE PTR [ebp+0xe]
  4189c6:	fistp  DWORD PTR ds:[edx+0x5]
  4189ca:	adc    dh,ah
  4189cc:	aam    0x16
  4189ce:	sbb    esi,ebx
  4189d0:	sub    al,cl
  4189d2:	sbb    eax,0xcbcfda3f
  4189d7:	dec    edi
  4189d8:	dec    edi
  4189d9:	jo     0x418a39
  4189db:	adc    eax,0x24dde4ae
  4189e0:	fistp  DWORD PTR [eax-0x53]
  4189e3:	fbstp  TBYTE PTR [ebp+0x4565e38d]
  4189e9:	mov    bl,0x1b
  4189eb:	stc    
  4189ec:	rcl    DWORD PTR ds:0xa7e76369,cl
  4189f2:	ficomp DWORD PTR [edx+0xa848533]
  4189f8:	inc    esi
  4189f9:	clc    
  4189fa:	fwait
  4189fb:	xor    DWORD PTR fs:[eax+0x7a0b9275],esi
  418a02:	sub    BYTE PTR [ecx+eax*8+0x71],ch
  418a06:	cmp    DWORD PTR [esi],0xffffffa3
  418a09:	in     eax,0xac
  418a0b:	in     al,0x47
  418a0d:	or     BYTE PTR [ecx],0x56
  418a10:	int    0x14
  418a12:	sbb    DWORD PTR [edi-0x6e],eax
  418a15:	push   ecx
  418a16:	mov    al,0xaf
  418a18:	ret    0xa518
  418a1b:	jbe    0x4189c0
  418a1d:	dec    ebp
  418a1e:	xchg   ebx,eax
  418a1f:	xchg   edx,eax
  418a20:	nop
  418a21:	or     al,0x8b
  418a23:	xchg   ebx,eax
  418a24:	into   
  418a25:	and    eax,0xa95a0c0e
  418a2a:	sbb    BYTE PTR [ebx],0x7f
  418a2d:	sub    bl,BYTE PTR [eax]
  418a2f:	popa   
  418a30:	inc    eax
  418a31:	je     0x418a15
  418a33:	gs ins BYTE PTR es:[edi],dx
  418a35:	fstp   TBYTE PTR [eax*4+0x5c14c483]
  418a3c:	jg     0x418a2b
  418a3e:	out    0x11,eax
  418a40:	sbb    bl,BYTE PTR [esi]
  418a42:	out    0x3a,al
  418a44:	(bad)  
  418a46:	test   al,0x5e
  418a48:	or     BYTE PTR [ecx+0x184768c4],al
  418a4e:	repz mov bh,0x6e
  418a51:	mov    ah,0x2
  418a53:	cmp    BYTE PTR [esi],dl
  418a55:	dec    ebp
  418a56:	(bad)  
  418a57:	stc    
  418a58:	inc    ecx
  418a59:	push   edx
  418a5a:	add    eax,0xeac1bd7d
  418a5f:	mov    ebp,0x7833b3e
  418a64:	add    eax,esp
  418a66:	mov    dl,0x2e
  418a68:	jmp    0x8a5:0x29bce2d7
  418a6f:	jp     0x418a79
  418a71:	lds    ecx,FWORD PTR [edi+0x755ce919]
  418a77:	and    eax,0xda6f0bac
  418a7c:	stos   DWORD PTR es:[edi],eax
  418a7d:	imul   ecx,DWORD PTR [esi+0x55],0x42613c1e
  418a84:	retf   0xb201
  418a87:	imul   ebx,DWORD PTR [eax+edi*4+0x1d999085],0x58
  418a8f:	fisubr WORD PTR [edi-0x388d53ea]
  418a95:	mov    ebp,0xf8539ea5
  418a9a:	gs sti 
  418a9c:	ds or  al,0xef
  418a9f:	or     eax,0xe97cb084
  418aa4:	(bad)  
  418aa5:	cmp    al,0xda
  418aa7:	loopne 0x418ad8
  418aa9:	data16 xor BYTE PTR ds:0x5bdb612d,ah
  418ab0:	pop    es
  418ab1:	xor    al,0x2c
  418ab3:	jne    0x418a93
  418ab5:	pop    esi
  418ab6:	retf   0x5b75
  418ab9:	sbb    BYTE PTR [edi],bh
  418abb:	dec    eax
  418abc:	mov    cl,0x78
  418abe:	jge    0x418aa7
  418ac0:	mov    WORD PTR [edi+0x38],fs
  418ac3:	test   al,0x40
  418ac5:	mov    bl,0xc1
  418ac7:	mov    ds,WORD PTR [eax]
  418ac9:	sets   BYTE PTR [edx]
  418acc:	mov    cl,0xf5
  418ace:	mov    ds:0xa0d613d6,al
  418ad3:	jcxz   0x418a67
  418ad6:	cmp    al,0xf7
  418ad8:	imul   ecx,ecx,0x99cbff34
  418ade:	fiadd  WORD PTR [esp+edx*1-0x2541345a]
  418ae5:	fidiv  DWORD PTR [edi]
  418ae7:	test   BYTE PTR [esi],ah
  418ae9:	lods   al,BYTE PTR ds:[esi]
  418aea:	add    al,0xa6
  418aec:	mov    BYTE PTR [ecx-0x49],dl
  418aef:	leave  
  418af0:	(bad)  
  418af1:	add    ah,bl
  418af3:	pusha  
  418af4:	shl    BYTE PTR [eax-0x542a6533],0x62
  418afb:	push   ebp
  418afc:	mov    ebp,0x36b6e3af
  418b01:	cdq    
  418b02:	xor    al,0x3d
  418b04:	ss mov edx,0xc705eed1
  418b0a:	into   
  418b0b:	rol    cl,0x75
  418b0e:	scas   eax,DWORD PTR es:[edi]
  418b0f:	lea    ecx,[ebx-0x66]
  418b12:	test   al,0x34
  418b14:	outs   dx,DWORD PTR ds:[esi]
  418b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b16:	rcr    DWORD PTR [edi+edx*4],1
  418b19:	int    0x61
  418b1b:	jg     0x418adc
  418b1d:	pop    ds
  418b1e:	jecxz  0x418b6a
  418b20:	outs   dx,DWORD PTR ds:[esi]
  418b21:	rol    BYTE PTR [edi-0x13],1
  418b24:	push   0xffffff87
  418b26:	lds    ecx,FWORD PTR [edi+ecx*2]
  418b29:	jg     0x418b18
  418b2b:	mov    DWORD PTR [eax+0x369523f4],esi
  418b31:	xchg   ecx,eax
  418b32:	cmp    eax,0x532fb46e
  418b37:	(bad)  
  418b38:	js     0x418b72
  418b3a:	xchg   edx,eax
  418b3b:	add    ebx,DWORD PTR ds:0xeca9312b
  418b42:	lahf   
  418b43:	ss int3 
  418b45:	xchg   edx,eax
  418b46:	addr16 (bad) 
  418b48:	ficom  WORD PTR [edx-0x15]
  418b4b:	or     DWORD PTR [ebp+0x4389516b],ebp
  418b51:	inc    edi
  418b52:	mov    bl,0xe9
  418b54:	push   ebp
  418b55:	jg     0x418b27
  418b57:	das    
  418b58:	ret    0xd304
  418b5b:	mov    WORD PTR ds:0xd114ec88,es
  418b61:	mov    esp,0x994d170b
  418b66:	adc    al,0x61
  418b68:	mov    dl,0x9
  418b6a:	cli    
  418b6b:	fwait
  418b6c:	loop   0x418ba6
  418b6e:	in     al,dx
  418b6f:	mov    ch,0x59
  418b71:	push   ds
  418b72:	and    BYTE PTR [ebp-0x660d0769],bl
  418b78:	cdq    
  418b79:	cs enter 0x2715,0xca
  418b7e:	nop
  418b7f:	or     BYTE PTR [edx-0x71],ah
  418b82:	in     eax,0x3d
  418b84:	(bad)  
  418b85:	addr16 fs clc 
  418b88:	jmp    0x418bcd
  418b8a:	(bad)  
  418b8b:	pop    ss
  418b8c:	scas   al,BYTE PTR es:[edi]
  418b8d:	scas   al,BYTE PTR es:[edi]
  418b8e:	mov    eax,0x6c64642d
  418b93:	fadd   st,st(1)
  418b95:	stos   BYTE PTR es:[edi],al
  418b96:	fisubr DWORD PTR [ebx+edx*2]
  418b99:	inc    edi
  418b9a:	add    BYTE PTR [edi],0x2c
  418b9d:	adc    al,0xbe
  418b9f:	into   
  418ba0:	arpl   bx,bx
  418ba2:	xchg   BYTE PTR [edi-0x1d],ch
  418ba5:	xchg   edx,eax
  418ba6:	call   0xab09:0xdfb4e8d8
  418bad:	(bad)  
  418bae:	into   
  418baf:	sbb    dh,BYTE PTR [edx]
  418bb1:	sbb    BYTE PTR [ebp+0x25079af7],cl
  418bb7:	fldcw  WORD PTR ds:0xff53365e
  418bbd:	imul   DWORD PTR [ebp+0xf]
  418bc0:	cwde   
  418bc1:	push   es
  418bc2:	adc    edx,ecx
  418bc4:	dec    ebx
  418bc5:	fwait
  418bc6:	xchg   esp,eax
  418bc7:	loop   0x418c31
  418bc9:	test   BYTE PTR [eax],dh
  418bcb:	or     al,0xe6
  418bcd:	les    ebx,FWORD PTR ds:0xd42220f5
  418bd3:	test   al,0x81
  418bd5:	mov    BYTE PTR [ebp+esi*8+0x41],0x23
  418bda:	sar    BYTE PTR [esi+edx*1+0x7055651d],cl
  418be1:	jl     0x418b6c
  418be3:	jnp    0x418c24
  418be5:	ror    cl,0x5d
  418be8:	sub    eax,0x54450cdf
  418bed:	in     eax,dx
  418bee:	(bad)  
  418bef:	pushf  
  418bf0:	cmp    dl,ch
  418bf2:	xchg   ebx,eax
  418bf3:	sbb    al,0x99
  418bf5:	ds ror cl,0x82
  418bf9:	repnz adc edi,DWORD PTR [eax]
  418bfc:	pop    ebx
  418bfd:	repz mov bh,0x5c
  418c00:	push   esp
  418c01:	in     al,0xf3
  418c03:	inc    edx
  418c04:	mov    ebp,DWORD PTR ds:0x23927729
  418c0a:	jo     0x418ba0
  418c0c:	sbb    eax,0x1626be14
  418c11:	and    bl,dl
  418c13:	cmp    BYTE PTR [esi+ecx*2+0xd],dl
  418c17:	jp     0x418be4
  418c19:	mov    ebx,0xc7c2407e
  418c1e:	sbb    DWORD PTR [edi-0x7e3d999d],ebp
  418c24:	nop
  418c25:	push   esi
  418c26:	stc    
  418c27:	cmp    BYTE PTR [ecx+0x57bd9a09],dl
  418c2d:	mov    dh,0x14
  418c2f:	add    DWORD PTR [ebx-0x33b0dbc5],eax
  418c35:	lds    eax,FWORD PTR [esi-0x69]
  418c38:	lds    esi,FWORD PTR [ebx-0x2255d908]
  418c3e:	sbb    bl,0x43
  418c41:	lahf   
  418c42:	mov    ch,0xc6
  418c44:	pushf  
  418c45:	add    BYTE PTR [ebx+0x23],al
  418c48:	sub    dl,BYTE PTR [ecx+0x74]
  418c4b:	mov    edi,0xac342093
  418c50:	sbb    ecx,edi
  418c52:	push   esi
  418c53:	rol    DWORD PTR [ecx-0x3fbfc172],1
  418c59:	push   ebx
  418c5a:	popf   
  418c5b:	pop    edx
  418c5c:	dec    ecx
  418c5d:	sbb    BYTE PTR [ebx+0x45ded9e7],0x88
  418c64:	fisubr WORD PTR [edi+eax*1]
  418c67:	push   edi
  418c68:	add    BYTE PTR [esi-0x28],bl
  418c6b:	add    BYTE PTR [ebx-0xc8fd45d],al
  418c71:	jmp    0x418c87
  418c73:	enter  0x2ae4,0xe
  418c77:	mov    cl,0x4
  418c79:	int    0x18
  418c7b:	out    0xb5,eax
  418c7d:	xchg   ebp,eax
  418c7e:	jns    0x418c65
  418c80:	cli    
  418c81:	(bad)  
  418c82:	sub    al,0xbc
  418c84:	cmp    esp,DWORD PTR [eax-0x23]
  418c87:	cmp    cl,BYTE PTR [esi]
  418c89:	aaa    
  418c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c8b:	mov    esi,0xf3b03539
  418c90:	jae    0x418cc1
  418c92:	loopne 0x418c81
  418c94:	inc    esp
  418c95:	mov    edx,0xe26f26fc
  418c9a:	jb     0x418c4e
  418c9c:	mov    dh,0xa4
  418c9e:	dec    esi
  418c9f:	mov    bl,0x1e
  418ca1:	aad    0xf8
  418ca3:	cmp    al,0x98
  418ca5:	in     al,dx
  418ca6:	push   eax
  418ca7:	xchg   esi,eax
  418ca8:	pop    eax
  418ca9:	ror    DWORD PTR [esi+0x3c],cl
  418cac:	(bad)  [ecx+0x193fce8]
  418cb2:	mov    al,ds:0x182d0080
  418cb7:	xor    eax,0x3ca42713
  418cbc:	lods   al,BYTE PTR ds:[esi]
  418cbd:	sbb    eax,0xe560a19e
  418cc2:	fdivp  st(5),st
  418cc4:	pop    edi
  418cc5:	xor    al,0x57
  418cc7:	outs   dx,BYTE PTR ds:[esi]
  418cc8:	scas   al,BYTE PTR es:[edi]
  418cc9:	loope  0x418c4f
  418ccb:	sbb    al,0xc5
  418ccd:	sub    al,BYTE PTR [eax]
  418ccf:	add    bh,BYTE PTR [ebx]
  418cd1:	pop    ebp
  418cd2:	adc    al,0xc9
  418cd4:	sahf   
  418cd5:	dec    ebx
  418cd6:	cmp    BYTE PTR [eax-0x6e],bl
  418cd9:	xchg   DWORD PTR [ebx],esi
  418cdb:	inc    edi
  418cdc:	std    
  418cdd:	dec    ebp
  418cde:	mov    eax,0xce7dc45d
  418ce3:	loop   0x418ce0
  418ce5:	(bad)  
  418ce6:	or     DWORD PTR ds:0x656df5c3,edi
  418cec:	xor    dh,BYTE PTR [edi]
  418cee:	shl    DWORD PTR [ebx],1
  418cf0:	inc    edx
  418cf1:	pop    esp
  418cf2:	pop    ds
  418cf3:	fistp  WORD PTR [edx]
  418cf5:	xor    ch,BYTE PTR [ebp-0x62]
  418cf8:	xchg   edx,eax
  418cf9:	xchg   ebx,eax
  418cfa:	addr16 dec eax
  418cfc:	popf   
  418cfd:	xchg   DWORD PTR [eax-0x19a0f12c],esi
  418d03:	fsubr  QWORD PTR [edx+0x602d93fa]
  418d09:	fwait
  418d0a:	or     bl,BYTE PTR [edx-0x21]
  418d0d:	and    eax,0x6f4b03a2
  418d12:	jo     0x418d0c
  418d14:	(bad)  
  418d15:	std    
  418d16:	dec    esi
  418d17:	or     BYTE PTR [ecx],bh
  418d19:	mov    ebp,0x48217a2
  418d1e:	push   ebx
  418d1f:	es (bad) 
  418d21:	fdivr  QWORD PTR [esi-0x21a43833]
  418d27:	mov    bh,0x4
  418d29:	rol    DWORD PTR [ecx-0x45],cl
  418d2c:	and    eax,0x9772cd30
  418d31:	in     al,dx
  418d32:	popf   
  418d33:	jp     0x418cc7
  418d35:	ret    
  418d36:	cs push ds
  418d38:	jns    0x418da5
  418d3a:	fcmovnbe st,st(2)
  418d3c:	loope  0x418ccb
  418d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d3f:	adc    DWORD PTR [esi+0x33446a3d],edx
  418d45:	lods   eax,DWORD PTR ds:[esi]
  418d46:	jp     0x418d42
  418d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d49:	scas   al,BYTE PTR es:[edi]
  418d4a:	icebp  
  418d4b:	jp     0x418d80
  418d4d:	pop    ecx
  418d4e:	inc    esp
  418d4f:	rol    BYTE PTR [edx+eax*8+0x77186059],cl
  418d56:	ror    DWORD PTR [ebp+0xd],1
  418d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d5a:	and    DWORD PTR [esi+0x2d9db6c0],edx
  418d60:	retf   
  418d61:	push   ebx
  418d62:	popf   
  418d63:	add    eax,0x9d4f93a7
  418d68:	ret    
  418d69:	nop
  418d6a:	inc    esp
  418d6b:	xchg   ebp,eax
  418d6c:	outs   dx,DWORD PTR gs:[esi]
  418d6e:	add    al,0x99
  418d70:	aas    
  418d71:	repz cmp al,0xc4
  418d74:	and    BYTE PTR [edx-0x29],bl
  418d77:	retf   0xbebb
  418d7a:	sar    bh,cl
  418d7c:	push   ds
  418d7d:	xor    al,0x11
  418d7f:	xor    al,0xd8
  418d81:	fcom   DWORD PTR [esi-0x1b]
  418d84:	adc    eax,0x8b9bd238
  418d89:	xchg   bp,ax
  418d8b:	pop    esp
  418d8c:	xor    ch,dl
  418d8e:	sbb    BYTE PTR [edi+ebx*8],0xb
  418d92:	in     al,0xa1
  418d94:	mov    ebp,DWORD PTR [ecx]
  418d96:	jbe    0x418d53
  418d98:	cs xchg ecx,eax
  418d9a:	ins    DWORD PTR es:[edi],dx
  418d9b:	push   eax
  418d9c:	or     ecx,DWORD PTR [esi]
  418d9e:	jnp    0x418d63
  418da0:	arpl   WORD PTR [ecx-0x4d],bp
  418da3:	cs in  al,0xbd
  418da6:	ds je  0x418d71
  418da9:	pusha  
  418daa:	dec    edi
  418dab:	xor    eax,0xf08b3c0e
  418db0:	dec    eax
  418db1:	cmp    ecx,DWORD PTR [edi+0x30]
  418db4:	cmp    al,0x68
  418db6:	shl    DWORD PTR [edi],0x13
  418db9:	jb     0x418dd0
  418dbb:	sti    
  418dbc:	mov    eax,ds:0x58a6702e
  418dc1:	sbb    al,0x50
  418dc3:	mov    dl,0x66
  418dc5:	jle    0x418dd6
  418dc7:	inc    esp
  418dc8:	cmp    eax,0x2e4736db
  418dcd:	push   cs
  418dce:	pop    edi
  418dcf:	cmp    DWORD PTR [ebx],0x43d88847
  418dd5:	aad    0xc
  418dd7:	imul   esi,DWORD PTR [ecx+0x6756276a],0x78
  418dde:	fiadd  WORD PTR [ecx]
  418de0:	xor    DWORD PTR [ebx-0x51e5048d],0x98063fa7
  418dea:	xchg   BYTE PTR [ebx+ebp*1-0x7d924f3b],dl
  418df1:	icebp  
  418df2:	mov    BYTE PTR [ebx+edi*1+0x46],0x5c
  418df7:	shl    ebx,0xa5
  418dfa:	jle    0x418d90
  418dfc:	mov    edi,0x1607917e
  418e01:	cmp    al,0x18
  418e03:	xchg   ecx,eax
  418e04:	ficomp DWORD PTR [ebx]
  418e06:	ror    DWORD PTR ds:0xeb04904b,1
  418e0c:	outs   dx,BYTE PTR ds:[esi]
  418e0d:	dec    ecx
  418e0e:	sub    DWORD PTR [eax],esp
  418e10:	retf   0xf994
  418e13:	add    esi,DWORD PTR [ecx+0x10]
  418e16:	push   ds
  418e17:	push   eax
  418e18:	sub    edi,DWORD PTR [ebp-0x3e2bb36d]
  418e1e:	or     BYTE PTR [edi-0x64],0xb4
  418e22:	aad    0x13
  418e24:	in     eax,dx
  418e25:	sahf   
  418e26:	aam    0xc2
  418e28:	inc    ebp
  418e29:	inc    esi
  418e2a:	xchg   ebp,eax
  418e2b:	adc    ebp,edx
  418e2d:	popa   
  418e2e:	ins    BYTE PTR es:[edi],dx
  418e2f:	jmp    0xf5a4:0x90a8f32d
  418e36:	in     al,dx
  418e37:	outs   dx,BYTE PTR ds:[esi]
  418e38:	mov    al,ds:0x7e32e8c1
  418e3d:	test   al,0xcd
  418e3f:	retf   0x1287
  418e42:	in     al,dx
  418e43:	in     eax,0x22
  418e45:	jp     0x418e2a
  418e47:	pop    eax
  418e48:	xor    ah,0x5d
  418e4b:	shl    DWORD PTR [edx],cl
  418e4d:	adc    al,0x6b
  418e4f:	rol    ch,1
  418e51:	sub    eax,0xe4e799d7
  418e56:	pop    ebx
  418e57:	out    dx,al
  418e58:	push   0x1ec4ed7a
  418e5d:	mov    eax,ecx
  418e5f:	jle    0x418e7e
  418e61:	push   0xffffff93
  418e63:	push   edi
  418e64:	pushf  
  418e65:	gs (bad) 
  418e67:	aad    0x3f
  418e69:	cmp    al,0x8f
  418e6b:	jne    0x418eb9
  418e6d:	xchg   ebp,eax
  418e6e:	icebp  
  418e6f:	js     0x418eac
  418e71:	jo     0x418e21
  418e73:	dec    esp
  418e74:	iret   
  418e75:	fisub  WORD PTR [ecx+0x4f2a43dc]
  418e7b:	xor    eax,0xe90a93a6
  418e80:	mov    esp,0xb9dc4aab
  418e85:	and    dh,ah
  418e87:	cmp    bl,BYTE PTR ds:0xa3a682df
  418e8d:	mov    cl,0xb1
  418e8f:	gs jb  0x418ebf
  418e92:	adc    al,0x93
  418e94:	mov    DWORD PTR [esi+0x63],esi
  418e97:	scas   eax,DWORD PTR es:[edi]
  418e98:	loop   0x418ef7
  418e9a:	or     eax,0x422b707d
  418e9f:	xor    BYTE PTR [edi+0x55d82027],dh
  418ea5:	push   ss
  418ea6:	dec    ebx
  418ea7:	in     eax,0x6d
  418ea9:	mov    gs,WORD PTR ds:0x3e5ee7d1
  418eaf:	pop    DWORD PTR [edx]
  418eb1:	ss pop ecx
  418eb3:	mov    ebx,0xe1720dee
  418eb8:	imul   al
  418eba:	ret    
  418ebb:	pop    edi
  418ebc:	jmp    0xc75135c
  418ec1:	jecxz  0x418e51
  418ec3:	lea    ecx,[esi]
  418ec5:	xchg   edx,eax
  418ec6:	add    al,0x47
  418ec8:	imul   esi,DWORD PTR [ebp+0x3],0x37
  418ecc:	mov    dl,BYTE PTR [ecx-0x78]
  418ecf:	sbb    eax,DWORD PTR [edi-0x5239e525]
  418ed5:	xor    DWORD PTR [edx+edi*4],eax
  418ed8:	ret    
  418ed9:	pushf  
  418eda:	gs jg  0x418f4f
  418edd:	(bad)  
  418ede:	not    DWORD PTR [ecx-0x17]
  418ee1:	std    
  418ee2:	mov    esi,0xdbee8b04
  418ee7:	shr    BYTE PTR [esi+0x6a],1
  418eea:	add    BYTE PTR [ecx-0x2ace4790],ah
  418ef0:	pop    es
  418ef1:	je     0x418ec6
  418ef3:	mov    ebx,0xeeef215
  418ef8:	dec    esi
  418ef9:	mov    esi,0x61c4c7c1
  418efe:	and    edi,DWORD PTR [esi+0x6c]
  418f01:	sar    BYTE PTR [eax-0x1e],1
  418f04:	int3   
  418f05:	pop    edx
  418f06:	scas   al,BYTE PTR es:[edi]
  418f07:	sbb    eax,DWORD PTR [eax+0xba3e91a]
  418f0d:	stos   BYTE PTR es:[edi],al
  418f0e:	sbb    al,0xa9
  418f10:	xor    BYTE PTR [edx],dh
  418f12:	cmp    esp,DWORD PTR [esi+0x50]
  418f15:	dec    ebp
  418f16:	inc    bl
  418f18:	pop    eax
  418f19:	les    edi,FWORD PTR [ecx+ecx*8]
  418f1c:	aas    
  418f1d:	xor    dl,bh
  418f1f:	scas   eax,DWORD PTR es:[edi]
  418f20:	xchg   edi,eax
  418f21:	xchg   BYTE PTR [edi+0x5e77c8f],dh
  418f27:	push   0xffffffe1
  418f29:	imul   ecx,DWORD PTR [edi],0x99b926ac
  418f2f:	adc    esi,ecx
  418f31:	and    eax,0xc7cb6416
  418f36:	data16 ss (bad) 
  418f39:	dec    ebx
  418f3a:	push   cs
  418f3b:	xor    DWORD PTR [eax-0x2a],ebp
  418f3e:	mov    cl,BYTE PTR [edi+0x1a]
  418f41:	(bad)  
  418f42:	jg     0x418ed6
  418f44:	popa   
  418f45:	ds mov al,0xbc
  418f48:	int    0x34
  418f4a:	sbb    al,0x53
  418f4c:	xor    eax,0x7dddbd63
  418f51:	and    dh,BYTE PTR ds:0x6dabf7c6
  418f57:	fcom   QWORD PTR [ebx-0x500abbd1]
  418f5d:	out    0x83,eax
  418f5f:	pop    edi
  418f60:	call   0x83053768
  418f65:	lea    esp,[ebx+0x52]
  418f68:	fs retf 0xe286
  418f6c:	outs   dx,DWORD PTR ds:[esi]
  418f6d:	pop    ds
  418f6e:	push   esp
  418f6f:	scas   eax,DWORD PTR es:[edi]
  418f70:	repz lds eax,FWORD PTR [ebx+0x20e238ca]
  418f77:	dec    eax
  418f78:	push   edi
  418f79:	ds stos BYTE PTR es:[edi],al
  418f7b:	aad    0x50
  418f7d:	pop    edi
  418f7e:	xor    bl,BYTE PTR [eax+ecx*8+0x3a29df6e]
  418f85:	into   
  418f86:	sbb    dl,bl
  418f88:	cmp    esi,DWORD PTR [esi-0x57]
  418f8b:	inc    esp
  418f8c:	js     0x418f5d
  418f8e:	daa    
  418f8f:	mov    eax,DWORD PTR [edi-0x5f84f5e8]
  418f95:	shl    ah,0x38
  418f98:	dec    ebx
  418f99:	cmc    
  418f9a:	adc    al,0xc7
  418f9c:	mov    al,0x9
  418f9e:	jecxz  0x418fd0
  418fa0:	jle    0x41901c
  418fa2:	xchg   BYTE PTR [esi],dh
  418fa4:	dec    ebp
  418fa5:	scas   eax,DWORD PTR es:[edi]
  418fa6:	pop    esp
  418fa7:	retf   0xf6e8
  418faa:	jl     0x418fac
  418fac:	inc    edi
  418fad:	sub    BYTE PTR [esi+0x14245301],0x75
  418fb4:	dec    esp
  418fb5:	(bad)  
  418fb6:	in     al,0x4e
  418fb8:	push   eax
  418fb9:	(bad)  
  418fba:	iret   
  418fbb:	xchg   esi,eax
  418fbc:	sub    edx,edi
  418fbe:	std    
  418fbf:	jnp    0x419036
  418fc1:	jno    0x418f80
  418fc3:	imul   dh
  418fc5:	add    ax,0xdf9d
  418fc9:	lods   eax,DWORD PTR ds:[esi]
  418fca:	or     al,0x18
  418fcc:	sub    eax,0x1b6084b2
  418fd1:	mov    esp,0x67be5108
  418fd6:	cmc    
  418fd7:	or     BYTE PTR [esi],cl
  418fd9:	imul   ebx,DWORD PTR [ecx+0x48c5f40d],0xe2301cc7
  418fe3:	popf   
  418fe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fe5:	inc    ebx
  418fe6:	xchg   ebx,eax
  418fe7:	inc    eax
  418fe8:	pop    ebx
  418fe9:	icebp  
  418fea:	xor    BYTE PTR [edx],al
  418fec:	mov    dl,0x73
  418fee:	xchg   edx,eax
  418fef:	and    esi,DWORD PTR [edx+0x30]
  418ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ff3:	cmp    DWORD PTR [edi-0x3b],ecx
  418ff6:	(bad)  
  418ff7:	push   eax
  418ff8:	(bad)  
  418ffa:	jecxz  0x419079
  418ffc:	daa    
  418ffd:	shr    BYTE PTR [edx+edi*4+0x3525e534],1
  419004:	mov    bl,0x5
  419006:	jo     0x418fdf
  419008:	pop    ds
  419009:	mov    al,0x11
  41900b:	fisub  DWORD PTR es:[ecx-0x71]
  41900f:	mov    al,0x9e
  419011:	lds    esp,FWORD PTR [eax+0x3]
  419014:	(bad)  
  419015:	ror    dh,1
  419017:	push   ebx
  419018:	or     eax,DWORD PTR [edi+0x44]
  41901b:	xchg   esp,eax
  41901c:	fistp  QWORD PTR [eax-0x1c38033e]
  419022:	and    ebx,ebx
  419024:	mov    ebp,0xf6147f0d
  419029:	cmp    ebx,DWORD PTR [ecx+0x63]
  41902c:	inc    eax
  41902d:	jmp    0x12fb986c
  419032:	inc    edi
  419033:	mov    cl,0x9
  419035:	leave  
  419036:	adc    ecx,eax
  419038:	(bad)  
  419039:	clc    
  41903a:	(bad)  
  41903c:	loopne 0x419003
  41903e:	int3   
  41903f:	inc    eax
  419040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419041:	add    esp,DWORD PTR [edx+0x16]
  419044:	mov    edi,0x89732b09
  419049:	xchg   ebx,eax
  41904a:	xor    bh,BYTE PTR [ebx]
  41904c:	iret   
  41904d:	jp     0x41901c
  41904f:	mov    al,ds:0x96507017
  419054:	aad    0x41
  419056:	das    
  419057:	int    0x4d
  419059:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41905b:	icebp  
  41905c:	hlt    
  41905d:	pop    eax
  41905e:	xor    eax,0x488e2e63
  419063:	jl     0x419015
  419065:	sbb    al,0x5d
  419067:	inc    edi
  419068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419069:	add    DWORD PTR [edx-0x79],eax
  41906c:	cmovne ebp,eax
  41906f:	repz mov dh,0x17
  419072:	xchg   ebp,eax
  419073:	inc    ebp
  419074:	shr    cl,1
  419076:	add    esi,edi
  419078:	mov    al,ds:0x5947e20f
  41907d:	mov    bl,0x74
  41907f:	xchg   al,cl
  419081:	daa    
  419082:	pop    edi
  419083:	mov    cl,0xf2
  419085:	outs   dx,DWORD PTR ds:[esi]
  419086:	push   ecx
  419087:	jl     0x41904c
  419089:	add    dh,bh
  41908b:	mov    ds:0x4e131f8e,al
  419090:	xchg   ebx,eax
  419091:	std    
  419092:	sbb    BYTE PTR ds:0x8858b257,dh
  419098:	or     al,0x89
  41909a:	lds    edx,FWORD PTR ss:[edi+0x64]
  41909e:	pop    eax
  41909f:	lods   al,BYTE PTR ds:[esi]
  4190a0:	pop    es
  4190a1:	imul   ebp,DWORD PTR [ebx+0x1505ebfa],0x3004e011
  4190ab:	or     DWORD PTR [esi-0x45],ecx
  4190ae:	popa   
  4190af:	mov    bl,0x90
  4190b1:	loopne 0x419050
  4190b3:	push   edx
  4190b4:	shl    BYTE PTR [edi+0x1ab73102],1
  4190ba:	dec    ebp
  4190bb:	add    al,0xf1
  4190bd:	test   al,0x87
  4190bf:	(bad)  
  4190c0:	push   ebx
  4190c1:	inc    esi
  4190c2:	cmp    ebp,edx
  4190c4:	jle    0x419103
  4190c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190c7:	xchg   esi,eax
  4190c9:	and    BYTE PTR [ebp+0x6c],dh
  4190cc:	adc    edx,esi
  4190ce:	push   0xffffffff
  4190d0:	push   0x89edbaa5
  4190d5:	daa    
  4190d6:	mov    bh,0x3c
  4190d8:	xor    al,0xd3
  4190da:	dec    ebx
  4190db:	or     eax,0x1ab0e4b7
  4190e0:	xchg   ebp,eax
  4190e1:	push   ds
  4190e2:	ret    0xed31
  4190e5:	or     ebx,esp
  4190e7:	mov    ebx,0x9a57ff26
  4190ec:	fsub   QWORD PTR [eax-0x5d00436f]
  4190f2:	pop    ecx
  4190f3:	and    dl,bl
  4190f5:	pop    es
  4190f6:	out    dx,al
  4190f7:	mov    ecx,0x843846f5
  4190fc:	sbb    dl,BYTE PTR ds:0x3fe7d5fa
  419102:	push   es
  419103:	pop    es
  419104:	(bad)  ds:0x3f6e009
  41910a:	add    eax,DWORD PTR [edx+eiz*4-0x63]
  41910e:	jle    0x419118
  419110:	xchg   ebx,eax
  419111:	sar    BYTE PTR [edi],0x21
  419114:	scas   al,BYTE PTR es:[edi]
  419115:	fidiv  DWORD PTR [edx-0x41]
  419118:	sbb    eax,0x6e63dc1
  41911d:	mov    DWORD PTR [eax-0x54fabf2e],esp
  419123:	push   esi
  419124:	jl     0x419170
  419126:	dec    esp
  419127:	(bad)  
  419128:	cmp    ecx,DWORD PTR ds:0x632684c2
  41912e:	neg    DWORD PTR [ebx-0x6a]
  419131:	and    ecx,ecx
  419133:	stos   DWORD PTR es:[edi],eax
  419134:	out    dx,al
  419135:	jmp    0x8f93:0x8fc7479d
  41913c:	pop    eax
  41913d:	mov    WORD PTR [esi-0x2b],es
  419140:	or     bl,BYTE PTR [eax+esi*8]
  419143:	fcom   QWORD PTR [eax+0x7be4f926]
  419149:	push   eax
  41914a:	xchg   ebx,eax
  41914b:	ret    0x3684
  41914e:	adc    bl,ch
  419150:	xchg   ecx,eax
  419151:	and    ch,BYTE PTR [esi+0x4c]
  419154:	push   ebp
  419155:	dec    ebp
  419156:	dec    eax
  419157:	mov    dh,0xf0
  419159:	xchg   edx,eax
  41915a:	(bad)  
  41915b:	mov    ah,0x2a
  41915d:	mov    edi,0xb42ff589
  419162:	add    ebx,edx
  419164:	xchg   DWORD PTR [ebp+0x41ace2ac],esi
  41916a:	xchg   BYTE PTR [ebp-0x18],dh
  41916d:	pop    es
  41916e:	inc    esi
  41916f:	mov    ebx,0x4c9c2496
  419174:	sbb    esi,DWORD PTR [ecx]
  419176:	arpl   WORD PTR [ebp+0x7f4dd8c8],sp
  41917c:	push   cs
  41917d:	pushf  
  41917e:	xor    cl,BYTE PTR [edi]
  419180:	lock sar BYTE PTR [ebp-0x2b24d51b],1
  419187:	fadd   st(4),st
  419189:	cmp    al,0xc7
  41918b:	push   esp
  41918c:	ss adc eax,0xe99db55e
  419192:	mov    WORD PTR [ecx],ds
  419194:	lds    ebp,FWORD PTR [esp+esi*1+0x4a09cfe5]
  41919b:	xor    ah,BYTE PTR [ebx+0x52]
  41919e:	fild   DWORD PTR [edx]
  4191a0:	into   
  4191a1:	and    BYTE PTR [edi+0x12e0331f],bl
  4191a7:	lds    eax,FWORD PTR [eax-0x7e0d08f8]
  4191ad:	pop    ss
  4191ae:	sbb    ebp,DWORD PTR [edi+ebp*8-0x581423c4]
  4191b5:	sbb    edx,edi
  4191b7:	fdivr  QWORD PTR [edi]
  4191b9:	ret    0xfe51
  4191bc:	jle    0x4191e0
  4191be:	push   0xadb8fb90
  4191c3:	dec    eax
  4191c4:	pop    esp
  4191c5:	lock cld 
  4191c7:	(bad)  
  4191c8:	sti    
  4191c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191ca:	retf   0xf833
  4191cd:	mov    ch,0x1
  4191cf:	pusha  
  4191d0:	mov    edx,0x6985cecd
  4191d5:	repz xchg ebx,eax
  4191d7:	icebp  
  4191d8:	mov    dl,0x66
  4191da:	jne    0x41924d
  4191dc:	lea    edx,[edi+0xe]
  4191df:	dec    edi
  4191e0:	fdivr  QWORD PTR [ecx*2+0x21754449]
  4191e7:	rcr    DWORD PTR [esp+edi*4],1
  4191ea:	hlt    
  4191eb:	pusha  
  4191ec:	or     BYTE PTR ds:0x58b5ec24,dh
  4191f2:	(bad)  
  4191f3:	jo     0x41924f
  4191f5:	add    DWORD PTR [eax+0x67],ecx
  4191f8:	push   ds
  4191f9:	out    dx,al
  4191fa:	sub    eax,0xf0527a73
  4191ff:	pop    ss
  419200:	xchg   BYTE PTR [edx-0x6b],bh
  419203:	sbb    bh,ch
  419205:	push   0x5ddd3203
  41920a:	mov    dl,BYTE PTR [esi+0x24f994de]
  419210:	js     0x41927a
  419212:	mov    ebp,0x1b81f560
  419217:	mov    bl,0x41
  419219:	and    edi,DWORD PTR [ecx+0x1f36cf5f]
  41921f:	mov    edx,0xf620bc99
  419224:	mov    bh,0x95
  419226:	xchg   esi,eax
  419227:	cmp    al,0x26
  419229:	or     ebx,DWORD PTR [ebx-0x576062d2]
  41922f:	in     eax,0xad
  419231:	aas    
  419232:	stos   BYTE PTR es:[edi],al
  419233:	clc    
  419234:	push   eax
  419235:	add    ch,0xc4
  419238:	neg    BYTE PTR [eax]
  41923a:	add    DWORD PTR fs:[ecx],esp
  41923d:	cwde   
  41923e:	xchg   edx,eax
  41923f:	inc    esi
  419240:	mov    ds:0x2ac5d728,al
  419245:	pop    ebp
  419246:	cwde   
  419247:	in     eax,dx
  419248:	imul   edx,DWORD PTR [eax],0xb277298b
  41924e:	inc    ebx
  41924f:	xor    ah,BYTE PTR [eax+eiz*1+0x2795e053]
  419256:	jo     0x4192b4
  419258:	std    
  419259:	fs scas al,BYTE PTR es:[edi]
  41925b:	stos   DWORD PTR es:[edi],eax
  41925c:	mul    DWORD PTR [edi-0x63467c7a]
  419262:	pop    ebp
  419263:	fcmovb st,st(1)
  419265:	push   edx
  419266:	hlt    
  419267:	or     DWORD PTR [ecx],esp
  419269:	gs lahf 
  41926b:	push   esp
  41926c:	aam    0x4f
  41926e:	call   0xc936:0x5d94c28a
  419275:	or     al,BYTE PTR [ebp-0x7efa772f]
  41927b:	int    0xda
  41927d:	or     al,BYTE PTR [ecx]
  41927f:	fdiv   DWORD PTR ds:0x36e48a9
  419285:	test   DWORD PTR [esi+eiz*8-0x63e8e55c],edx
  41928c:	fadd   QWORD PTR ds:0x350be936
  419292:	pop    esp
  419293:	xchg   esi,eax
  419294:	jl     0x4192f5
  419296:	retf   
  419297:	and    BYTE PTR [esi+eiz*4+0x16],0xee
  41929c:	lods   eax,DWORD PTR ds:[esi]
  41929d:	in     al,0xb2
  41929f:	jmp    0x368b:0xfaec5a20
  4192a6:	(bad)  [edx+0xd914fdf]
  4192ac:	sti    
  4192ad:	call   0xff0b8f31
  4192b2:	adc    DWORD PTR [ebp-0x32],edi
  4192b5:	fcmovnu st,st(2)
  4192b7:	mov    edx,0xf82bb04d
  4192bc:	pop    edx
  4192bd:	adc    ebp,DWORD PTR [edi-0x3e]
  4192c0:	push   ss
  4192c1:	int3   
  4192c2:	jle    0x41924f
  4192c4:	jg     0x4192c5
  4192c6:	fldenv [ebx-0x61]
  4192c9:	icebp  
  4192ca:	mov    esp,0x2dd0a748
  4192cf:	mov    ebx,0x7f6f74f2
  4192d4:	inc    edx
  4192d5:	mov    edi,0x59a3b377
  4192da:	imul   ecx,DWORD PTR [edx],0xffffffcb
  4192dd:	sub    eax,0x12decae5
  4192e2:	mov    cl,al
  4192e4:	mov    ds:0x848af4d4,eax
  4192e9:	pop    esp
  4192ea:	jnp    0x419357
  4192ec:	(bad)  
  4192ed:	cmc    
  4192ee:	inc    edi
  4192ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192f0:	ficomp DWORD PTR [ecx-0x1cfded61]
  4192f6:	sbb    ecx,DWORD PTR [eax+ebp*1-0x4e]
  4192fa:	mov    edi,0xf5a7ac66
  4192ff:	pop    edx
  419300:	push   ebx
  419301:	cwde   
  419302:	(bad)  
  419304:	jp     0x419329
  419306:	mov    al,0x89
  419308:	lea    ebx,[ecx-0x1d450e1f]
  41930e:	xchg   edx,eax
  41930f:	in     eax,dx
  419310:	fdivr  QWORD PTR [ebx+ebx*2+0x4d7ff814]
  419317:	pop    ebp
  419318:	sbb    BYTE PTR [ebx+0x72f19e],dl
  41931e:	push   ss
  41931f:	ins    BYTE PTR es:[edi],dx
  419320:	ja     0x41938d
  419322:	push   edi
  419323:	cmp    DWORD PTR [ebp+0x6c],esp
  419326:	adc    DWORD PTR ds:0x2cf68cc3,edx
  41932c:	pop    ds
  41932d:	mov    dh,ch
  41932f:	call   0x1cb02252
  419334:	jbe    0x4192c9
  419336:	jne    0x419390
  419338:	fdiv   DWORD PTR [eax+0x66]
  41933b:	mov    gs:0xee604ccd,al
  419341:	xor    al,0xfd
  419343:	xchg   ecx,eax
  419344:	in     al,dx
  419345:	mov    edx,0xde1a4266
  41934a:	sub    DWORD PTR [eax+esi*1],ecx
  41934d:	mov    ebp,0x1619b4ad
  419352:	fist   WORD PTR [esp+edx*1+0x70]
  419356:	js     0x4192db
  419358:	xchg   esp,eax
  419359:	fadd   DWORD PTR [edi]
  41935b:	push   0x21
  41935d:	loope  0x419360
  41935f:	test   al,0xb5
  419361:	mov    eax,ds:0x7593dc80
  419366:	xchg   ebp,eax
  419367:	lock mov DWORD PTR [eax],esp
  41936a:	add    dl,BYTE PTR [edx-0x19]
  41936d:	addr16 push ecx
  41936f:	cmp    eax,0xe96808a0
  419374:	aas    
  419375:	cmp    edx,0x5b
  419378:	jle    0x419364
  41937a:	pushf  
  41937b:	adc    al,0xa8
  41937d:	mov    edi,0xbdd3b391
  419382:	push   ss
  419383:	or     al,0xa8
  419385:	jne    0x419357
  419387:	imul   dh
  419389:	ret    
  41938a:	xchg   ebp,eax
  41938b:	(bad)  
  41938c:	push   eax
  41938d:	jl     0x4193bd
  41938f:	shl    DWORD PTR [edx],cl
  419391:	icebp  
  419392:	out    dx,al
  419393:	or     BYTE PTR [edi],ah
  419395:	or     DWORD PTR ds:[edi],esp
  419398:	jge    0x4193c3
  41939a:	sti    
  41939b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41939d:	push   0x5e
  41939f:	mov    BYTE PTR [ebp-0x33],dl
  4193a2:	push   0x7c51ba81
  4193a7:	dec    ecx
  4193a8:	(bad)  
  4193a9:	iret   
  4193aa:	lods   eax,DWORD PTR ds:[esi]
  4193ab:	imul   eax,DWORD PTR [edi],0xffffffb2
  4193ae:	push   cs
  4193af:	ds in  eax,0x96
  4193b2:	dec    ebx
  4193b3:	mov    edx,0x1a4fe8d6
  4193b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193b9:	xchg   edi,eax
  4193ba:	inc    ecx
  4193bb:	repnz push ebp
  4193bd:	sub    eax,0xe24aa30a
  4193c2:	xlat   BYTE PTR ds:[ebx]
  4193c3:	mov    esp,0x2cda9470
  4193c8:	arpl   WORD PTR [esi+eiz*8],di
  4193cb:	out    0x87,al
  4193cd:	icebp  
  4193ce:	daa    
  4193cf:	dec    eax
  4193d0:	loopne 0x4193a4
  4193d2:	mul    BYTE PTR [ebp+0x5c5b50f2]
  4193d8:	add    BYTE PTR [edi-0x19],ch
  4193db:	mov    eax,0xb8248824
  4193e0:	jmp    0xe5c9:0xa83e5c2f
  4193e7:	xchg   edi,eax
  4193e8:	(bad)  [eax]
  4193ea:	je     0x4193e5
  4193ec:	push   ebp
  4193ed:	je     0x4193da
  4193ef:	rcr    BYTE PTR [ebx],1
  4193f1:	imul   esi,DWORD PTR [esi],0xd461c7dd
  4193f7:	ins    BYTE PTR es:[edi],dx
  4193f8:	ficomp WORD PTR [ebx]
  4193fa:	inc    edx
  4193fb:	jge    0x419414
  4193fd:	rcl    BYTE PTR ds:0x3b56ec3,1
  419403:	pop    eax
  419404:	scas   eax,DWORD PTR es:[edi]
  419405:	cmc    
  419406:	mov    edx,0x9e1a3581
  41940b:	pop    eax
  41940c:	sbb    ebx,ecx
  41940e:	in     eax,dx
  41940f:	sub    eax,0x57e3bba8
  419414:	jmp    0xb160:0x46976670
  41941b:	pop    esp
  41941c:	imul   edx,DWORD PTR [ecx+0xf],0x1
  419420:	cmp    al,0xbb
  419422:	ins    BYTE PTR es:[edi],dx
  419423:	ja     0x4193cf
  419425:	jno    0x4193e8
  419427:	xchg   edx,eax
  419428:	dec    ecx
  419429:	in     al,0x11
  41942b:	mov    DWORD PTR [esi-0x1f],ecx
  41942e:	push   ecx
  41942f:	mov    bl,0x4f
  419431:	stc    
  419432:	(bad)  [ebp+0xd]
  419435:	not    ebx
  419437:	jle    0x419499
  419439:	inc    edi
  41943a:	repz dec ecx
  41943c:	xchg   esp,eax
  41943d:	fbld   TBYTE PTR [eax+ebx*4]
  419440:	push   cs
  419441:	sahf   
  419442:	jo     0x419475
  419444:	sahf   
  419445:	jle    0x419405
  419447:	jp     0x419459
  419449:	mov    ds:0x6435399b,eax
  41944e:	ror    BYTE PTR [ecx+0x9],cl
  419451:	mov    bl,0xea
  419453:	or     eax,0x8e1b6981
  419458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419459:	shl    BYTE PTR [edx],0x68
  41945c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41945d:	lods   eax,DWORD PTR ds:[esi]
  41945e:	mov    bh,BYTE PTR [esi-0x3b]
  419461:	(bad)  
  419462:	sbb    DWORD PTR [edx+0x6e],ecx
  419465:	or     eax,0x2701bad
  41946a:	add    eax,0xd90e6346
  41946f:	outs   dx,DWORD PTR ds:[esi]
  419470:	lock fbld TBYTE PTR [edi]
  419473:	cwde   
  419474:	push   edx
  419475:	cdq    
  419476:	pop    esi
  419477:	dec    edi
  419478:	inc    ebx
  419479:	hlt    
  41947a:	call   0x9fe44ad0
  41947f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419480:	fcomp  QWORD PTR [edi+0x35]
  419483:	neg    dl
  419485:	sub    cl,cl
  419487:	cwde   
  419488:	cld    
  419489:	xor    al,0x37
  41948b:	sub    BYTE PTR [esi],al
  41948d:	jae    0x41947f
  41948f:	inc    edi
  419490:	sub    al,0x7f
  419492:	pop    es
  419493:	lods   al,BYTE PTR cs:[esi]
  419495:	jnp    0x419506
  419497:	jg     0x419503
  419499:	test   DWORD PTR [edi],0x93504a32
  41949f:	call   0x4de1359c
  4194a4:	pop    esp
  4194a5:	call   0xf1c0:0xcb7c57f5
  4194ac:	mov    BYTE PTR [eax],0xa
  4194af:	out    dx,al
  4194b0:	mov    al,ds:0xf9330f82
  4194b5:	inc    edi
  4194b6:	jmp    0x4194b4
  4194b8:	mov    eax,0x21811103
  4194bd:	in     al,0xaf
  4194bf:	lods   eax,DWORD PTR ds:[esi]
  4194c0:	adc    BYTE PTR [edx+0x7214a6bb],bh
  4194c6:	test   dh,bl
  4194c8:	or     dh,BYTE PTR [esi+0x51]
  4194cb:	or     eax,0x60bf4afb
  4194d0:	mov    ecx,0xb281a532
  4194d5:	xor    DWORD PTR [esi],esp
  4194d7:	jae    0x4194ec
  4194d9:	gs jecxz 0x419479
  4194dc:	sub    DWORD PTR [ebp-0x7fa143e0],eax
  4194e2:	cmp    bl,ah
  4194e4:	mov    ds:0x4d106585,eax
  4194e9:	out    0xca,al
  4194eb:	mov    esi,edx
  4194ed:	sub    BYTE PTR [ebx-0x510e4c1],bl
  4194f3:	bound  esp,QWORD PTR [ebp+0x66]
  4194f6:	out    0x41,al
  4194f8:	cmp    edx,eax
  4194fa:	cs mov eax,0xaf46187c
  419500:	jp     0x4194af
  419502:	pushf  
  419503:	push   0xffffff8b
  419505:	call   0x30c7:0xc80e086c
  41950c:	in     al,dx
  41950d:	and    BYTE PTR [eax+0x76809c7a],0x68
  419514:	xchg   ebp,eax
  419515:	cwde   
  419516:	in     eax,dx
  419517:	jle    0x41951c
  419519:	push   esp
  41951a:	stc    
  41951b:	jae    0x4194f3
  41951d:	adc    al,0x44
  41951f:	retf   0x5e43
  419522:	sub    DWORD PTR ds:0x69d8f1e8,eax
  419528:	adc    al,0x5b
  41952a:	push   cs
  41952b:	inc    ebx
  41952c:	xor    DWORD PTR [eax],ecx
  41952e:	xor    eax,0xdd21157c
  419533:	iret   
  419534:	ss inc edi
  419536:	ins    DWORD PTR es:[edi],dx
  419537:	dec    edx
  419538:	sub    BYTE PTR [edx],0x35
  41953b:	int    0x4a
  41953d:	inc    ecx
  41953e:	adc    ebx,0x45
  419541:	shl    DWORD PTR [ecx+0x48],cl
  419544:	xchg   ebx,eax
  419545:	jb     0x419529
  419547:	psubb  mm2,QWORD PTR [ecx+0x27]
  41954b:	cdq    
  41954c:	popa   
  41954d:	mov    ds:0x96a20d9d,al
  419552:	retf   
  419553:	adc    BYTE PTR [edx+0x46756f96],cl
  419559:	(bad)  
  41955a:	or     esi,edi
  41955c:	ja     0x419589
  41955e:	sti    
  41955f:	div    BYTE PTR ss:[ebp+0x5c349cbb]
  419566:	mov    esi,0xb0313a76
  41956b:	add    DWORD PTR [edi+edx*1+0x39],ecx
  41956f:	push   ds
  419570:	jae    0x41950a
  419572:	(bad)  
  419573:	mov    ch,0xd2
  419575:	inc    edx
  419576:	jnp    0x4195e9
  419578:	push   ecx
  419579:	lds    ebp,FWORD PTR [edi-0x1bdfd858]
  41957f:	xchg   esi,eax
  419580:	dec    DWORD PTR [ebx-0x7d]
  419583:	push   edx
  419584:	jmp    0x4195fc
  419586:	sbb    eax,0x83125ff2
  41958b:	adc    eax,0x833b4a4e
  419590:	out    dx,eax
  419591:	loope  0x419587
  419593:	mov    al,ds:0x2e388ddf
  419598:	dec    edi
  419599:	xchg   DWORD PTR [edx+eiz*1+0x1af72453],ebx
  4195a0:	xchg   ebp,eax
  4195a1:	and    al,0x65
  4195a3:	adc    ecx,DWORD PTR [ecx-0x355597c0]
  4195a9:	rcl    BYTE PTR [ecx+0x1f13e2a1],cl
  4195af:	test   cl,ah
  4195b1:	test   BYTE PTR [edi+0x32d566e5],bl
  4195b7:	outs   dx,BYTE PTR ds:[esi]
  4195b8:	in     al,dx
  4195b9:	jno    0x4195c9
  4195bb:	push   ss
  4195bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195bd:	fisttp DWORD PTR ds:0x49e67d96
  4195c3:	xor    BYTE PTR [edx-0x568e302f],bl
  4195c9:	mov    edi,0xbb342f42
  4195ce:	fstp   TBYTE PTR [edi+edi*1+0x6c09216f]
  4195d5:	or     BYTE PTR [ebp-0x11],0x26
  4195d9:	mov    al,0xf2
  4195db:	xor    cl,BYTE PTR [ecx]
  4195dd:	inc    ebp
  4195de:	jecxz  0x41956b
  4195e0:	xchg   edx,eax
  4195e1:	adc    ecx,ecx
  4195e3:	ror    BYTE PTR [ebx-0x194a491d],cl
  4195e9:	bnd ret 
  4195eb:	pop    edi
  4195ec:	mov    ebp,0x989dcc56
  4195f1:	pop    ds
  4195f2:	cwde   
  4195f3:	pushf  
  4195f4:	mov    ds:0xf68ce50f,eax
  4195f9:	(bad)  [ebx+0x33]
  4195fc:	mov    al,ds:0x4925f003
  419601:	sbb    ebx,DWORD PTR [esi]
  419603:	or     ecx,DWORD PTR [ebp+0x6d]
  419606:	lods   al,BYTE PTR ds:[esi]
  419607:	jmp    0x41962f
  419609:	scas   al,BYTE PTR es:[edi]
  41960a:	add    eax,edx
  41960c:	lahf   
  41960d:	adc    bl,BYTE PTR [ebp+0x39971d01]
  419613:	cmc    
  419614:	retf   0x52bb
  419617:	adc    eax,0xf7048f15
  41961c:	(bad)  
  41961d:	mov    edx,0x82f070d4
  419622:	xor    cl,BYTE PTR [eax+0x5cdfcbe9]
  419628:	out    dx,al
  419629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41962a:	xchg   DWORD PTR [ecx+0x6a2cf89],esi
  419630:	punpcklwd mm7,mm4
  419633:	xchg   esp,eax
  419634:	sbb    DWORD PTR [ebp-0x36],ecx
  419637:	sti    
  419638:	inc    ecx
  419639:	adc    DWORD PTR [esp+ebp*8-0x1],ebp
  41963d:	mov    dl,0x1
  41963f:	test   dl,bl
  419641:	xor    eax,0xf9be39cf
  419646:	idiv   edx
  419648:	push   edi
  419649:	push   ecx
  41964a:	xchg   edx,eax
  41964b:	push   esi
  41964c:	mov    ah,0x18
  41964e:	cdq    
  41964f:	loop   0x41969c
  419651:	dec    eax
  419652:	lock fistp WORD PTR [ecx]
  419655:	xor    ebp,DWORD PTR [eax-0x74]
  419658:	int3   
  419659:	and    ecx,edi
  41965b:	aaa    
  41965c:	sar    BYTE PTR [edi+0x6b925ab6],1
  419662:	inc    esp
  419663:	xchg   edi,eax
  419664:	dec    edi
  419665:	push   edi
  419666:	sub    ebx,DWORD PTR [ebx-0x48746961]
  41966c:	push   es
  41966d:	cmp    bh,0x20
  419670:	jmp    0x4196df
  419672:	cmp    al,0xb5
  419674:	jle    0x419653
  419676:	or     al,0x60
  419678:	fsubr  DWORD PTR [ecx+0x1a]
  41967b:	addr16 into 
  41967d:	(bad)  
  41967e:	mov    ebp,0xe3854eda
  419683:	out    dx,eax
  419684:	iret   
  419685:	sbb    al,0xad
  419687:	mov    esi,0xccddd9b2
  41968c:	dec    esi
  41968d:	rep stos BYTE PTR es:[edi],al
  41968f:	sbb    DWORD PTR [eax+eax*4],esi
  419692:	pushf  
  419693:	cmp    eax,0x2d7fdf9a
  419698:	jbe    0x4196dc
  41969a:	pop    ss
  41969b:	mov    esi,0x8f0cb4df
  4196a0:	mov    DWORD PTR [ebx+0x7f3a970f],0x3c4bbad8
  4196aa:	in     al,dx
  4196ab:	push   ss
  4196ac:	dec    eax
  4196ad:	pop    ecx
  4196ae:	xchg   ebx,eax
  4196af:	fild   DWORD PTR [ebx]
  4196b1:	xor    DWORD PTR [edx],0xffffffbd
  4196b4:	add    BYTE PTR [esi+0x1b27f92e],cl
  4196ba:	repz ret 
  4196bc:	mov    cl,0x53
  4196be:	jne    0x4196b2
  4196c0:	test   DWORD PTR [ecx+0x42923ff9],0x832ccd38
  4196ca:	in     al,dx
  4196cb:	pop    esi
  4196cc:	popf   
  4196cd:	mov    ch,0x69
  4196cf:	and    esi,ecx
  4196d1:	pop    edi
  4196d2:	inc    ebx
  4196d3:	rcr    BYTE PTR [esi*2+0x7dfd6b60],cl
  4196da:	push   edi
  4196db:	outs   dx,DWORD PTR ds:[esi]
  4196dc:	fidivr DWORD PTR [eax+0x40]
  4196df:	dec    edi
  4196e0:	scas   eax,DWORD PTR es:[edi]
  4196e1:	dec    edi
  4196e2:	addr16 jg 0x419695
  4196e5:	out    dx,al
  4196e6:	xor    eax,0x2d84191c
  4196eb:	cmp    al,0xb8
  4196ed:	jns    0x4196fe
  4196ef:	imul   DWORD PTR [edx+0x3a87cb86]
  4196f5:	dec    esi
  4196f6:	or     bl,BYTE PTR ds:0xe6034302
  4196fc:	push   esp
  4196fd:	ss cs push ecx
  419700:	aas    
  419701:	jg     0x41970f
  419703:	les    esi,FWORD PTR [edi+0x2a]
  419706:	cmp    BYTE PTR ds:0x3b1c446a,bh
  41970c:	sub    cl,bl
  41970e:	push   eax
  41970f:	adc    edx,DWORD PTR ds:0xbb9ccdd9
  419715:	outs   dx,BYTE PTR ds:[esi]
  419716:	mov    edi,0xd395df9c
  41971b:	mov    ah,0x30
  41971d:	and    DWORD PTR [edx-0x3b88d5af],esp
  419723:	push   ebx
  419724:	or     bh,BYTE PTR [edx]
  419726:	mov    bh,0xc3
  419728:	dec    ebx
  419729:	mov    ebx,0xad7c65c9
  41972e:	xchg   BYTE PTR ds:[ebx+0xe],ch
  419732:	scas   al,BYTE PTR es:[edi]
  419733:	out    dx,al
  419734:	fdiv   QWORD PTR [ebp+0x777d73e8]
  41973a:	sub    BYTE PTR [ebx-0x72a1595e],ah
  419740:	lods   eax,DWORD PTR ds:[esi]
  419741:	push   ss
  419742:	add    eax,0x17979255
  419747:	test   BYTE PTR [esi+0x290c0e1e],0x49
  41974e:	ins    BYTE PTR es:[edi],dx
  41974f:	in     al,0x7a
  419751:	sbb    ah,BYTE PTR [ebp+0x2805797e]
  419757:	push   es
  419758:	jo     0x4197ca
  41975a:	test   eax,0xc798a98d
  41975f:	test   al,0x94
  419761:	data16 (bad) 
  419763:	fst    DWORD PTR [ebx]
  419765:	mov    BYTE PTR [ebx-0x20],ah
  419768:	push   ecx
  419769:	sbb    ah,bl
  41976b:	cmp    al,dl
  41976d:	pushf  
  41976e:	ret    
  41976f:	cmp    ebp,DWORD PTR [ebx+eiz*2]
  419772:	das    
  419773:	xor    BYTE PTR [edx],cl
  419775:	pop    esp
  419776:	cmp    BYTE PTR [eax+0x2f96dffd],cl
  41977c:	clts   
  41977e:	daa    
  41977f:	and    DWORD PTR [edx],esp
  419781:	fimul  WORD PTR [esi+0x34faadc1]
  419787:	and    esp,edx
  419789:	xor    al,0xbf
  41978b:	push   esi
  41978c:	ins    DWORD PTR es:[edi],dx
  41978d:	inc    BYTE PTR [esp+edx*4]
  419790:	jbe    0x4197d2
  419792:	mov    bl,0x62
  419794:	(bad)  
  419795:	xor    ecx,ebp
  419797:	mov    dh,0x30
  419799:	aad    0xf3
  41979b:	and    eax,0xafcc5c71
  4197a0:	jo     0x4197fc
  4197a2:	fld    TBYTE PTR [eax+0x41]
  4197a5:	cmp    DWORD PTR [edx],edi
  4197a7:	jl     0x419801
  4197a9:	imul   edx,DWORD PTR [ecx-0x2e],0xffffffa8
  4197ad:	std    
  4197ae:	je     0x419774
  4197b0:	in     al,dx
  4197b1:	mov    ecx,0x1b8e9cf6
  4197b6:	sub    al,0xc8
  4197b8:	inc    esi
  4197b9:	call   0xb9cdedae
  4197be:	ins    DWORD PTR es:[edi],dx
  4197bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197c0:	fst    QWORD PTR [ebx-0x4dbb2be3]
  4197c6:	fcmovne st,st(2)
  4197c8:	add    eax,0x3aec89a8
  4197cd:	push   ebp
  4197ce:	ins    DWORD PTR es:[edi],dx
  4197cf:	dec    esp
  4197d0:	shr    eax,0xf0
  4197d3:	int3   
  4197d4:	push   cs
  4197d5:	js     0x4197e6
  4197d7:	fidivr DWORD PTR [ecx]
  4197d9:	jl     0x419775
  4197db:	mov    al,0xef
  4197dd:	fs push 0x6f
  4197e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197e1:	or     BYTE PTR [edx+0x60efa38c],cl
  4197e7:	popa   
  4197e8:	loop   0x4197eb
  4197ea:	adc    BYTE PTR ds:0x7dfc052,0x20
  4197f1:	int    0x85
  4197f3:	mov    edi,DWORD PTR [esi]
  4197f5:	pop    eax
  4197f6:	lahf   
  4197f7:	ret    
  4197f8:	out    dx,eax
  4197f9:	mov    BYTE PTR [ebp-0x1cdb307f],ah
  4197ff:	pop    ds
  419800:	ret    0xf7e9
  419803:	pop    es
  419804:	retf   0x8b2
  419807:	mov    edi,0xf73885ad
  41980c:	imul   eax,DWORD PTR [ebx-0x64087bf5],0x2bd54bbb
  419816:	adc    eax,edx
  419818:	in     eax,dx
  419819:	inc    esp
  41981a:	ret    
  41981b:	mov    al,ds:0x5aa871ad
  419820:	xor    al,0xb5
  419822:	mov    cl,0x7d
  419824:	xchg   ebx,eax
  419825:	adc    dl,BYTE PTR [edi+0x2b819c01]
  41982b:	shl    DWORD PTR [ecx+0x440913ec],0x37
  419832:	jl     0x419894
  419834:	jg     0x419848
  419836:	add    BYTE PTR [eax],dl
  419838:	push   esi
  419839:	sahf   
  41983a:	(bad)  
  41983b:	(bad)  
  41983c:	cli    
  41983d:	mov    esi,0x54ddea52
  419842:	push   es
  419843:	pop    ebx
  419844:	and    DWORD PTR [edi],ebp
  419846:	cmp    BYTE PTR [ecx],cl
  419848:	adc    dh,dl
  41984a:	les    esi,FWORD PTR [esi-0x14]
  41984d:	fcomip st,st(0)
  41984f:	out    0x7b,eax
  419851:	loopne 0x41980e
  419853:	je     0x4198a2
  419855:	loope  0x419839
  419857:	fwait
  419858:	inc    ecx
  419859:	xchg   esp,eax
  41985a:	xchg   cl,bh
  41985c:	iret   
  41985d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41985e:	pusha  
  41985f:	mov    esp,0x9ddc857
  419864:	pop    ss
  419865:	mov    eax,ds:0x2313ce80
  41986a:	out    0xeb,eax
  41986c:	jnp    0x41984d
  41986e:	movlps xmm5,QWORD PTR [edi+0x1cea4665]
  419875:	sbb    ebx,DWORD PTR [esi+0x29]
  419878:	adc    edi,DWORD PTR [esp+esi*2-0x77655d75]
  41987f:	inc    esp
  419880:	mov    bh,0x8a
  419882:	lock xchg ebp,eax
  419884:	jns    0x4198c0
  419886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419887:	push   0x22
  419889:	in     eax,0x7
  41988b:	inc    esp
  41988c:	fld    st(7)
  41988e:	js     0x4198b0
  419890:	test   DWORD PTR cs:0x39fdcc30,0x5e5990fe
  41989b:	cmc    
  41989c:	pop    ss
  41989d:	fst    DWORD PTR [eax+ebx*2+0x11422da1]
  4198a4:	outs   dx,DWORD PTR ds:[esi]
  4198a5:	mov    esp,0xe508ece0
  4198aa:	sar    dl,0x1b
  4198ad:	mov    al,0xe5
  4198af:	push   ecx
  4198b0:	xor    ebx,esi
  4198b2:	mov    ebx,0x2bdcaa55
  4198b7:	fstp   QWORD PTR [ecx+edi*1-0x10]
  4198bb:	inc    esp
  4198bc:	dec    bp
  4198be:	sbb    dl,BYTE PTR [esi]
  4198c0:	cmp    eax,0xb3e8195f
  4198c5:	sbb    bh,BYTE PTR [ebx+0x20]
  4198c8:	xchg   DWORD PTR [edx+0x713ae1f0],ebx
  4198ce:	mov    ecx,0xc41559fa
  4198d3:	mov    ecx,0xcfd0d5f0
  4198d8:	push   es
  4198d9:	cdq    
  4198da:	ins    BYTE PTR es:[edi],dx
  4198db:	pop    edx
  4198dc:	mov    al,0x94
  4198de:	cmp    ebx,edi
  4198e0:	or     eax,0x9d794de9
  4198e5:	mov    ds:0x2e7f5036,al
  4198ea:	pusha  
  4198eb:	or     al,0x3f
  4198ed:	test   DWORD PTR [ecx],esi
  4198ef:	ds je  0x4198bc
  4198f2:	imul   ebp,ebx,0x70
  4198f5:	push   cs
  4198f6:	call   0x4fae:0xe15c154d
  4198fd:	mov    al,0x31
  4198ff:	shl    DWORD PTR [eax-0x2b22452],0x7c
  419906:	xor    eax,esp
  419908:	int3   
  419909:	(bad)  [esi+0xb]
  41990c:	mov    edi,0xb6f7ab6e
  419911:	cmp    eax,0x21e7ce3c
  419916:	mov    cs:0xe33ada6d,eax
  41991c:	push   ebx
  41991d:	or     eax,0x66f96b6c
  419922:	ins    DWORD PTR es:[edi],dx
  419923:	enter  0x32bd,0x90
  419927:	cmp    bl,BYTE PTR [edi]
  419929:	push   ss
  41992a:	fucomp st(4)
  41992c:	ja     0x419941
  41992e:	xchg   ecx,eax
  41992f:	mov    DWORD PTR [edi+0x55b1034],esp
  419935:	sar    BYTE PTR [ebx],cl
  419937:	dec    edi
  419938:	inc    esi
  419939:	(bad)  
  41993b:	gs into 
  41993d:	xor    eax,0x244051b9
  419942:	mov    al,0x6
  419944:	ins    BYTE PTR es:[edi],dx
  419945:	mov    ch,0xf9
  419947:	ja     0x41993d
  419949:	pop    ecx
  41994a:	cwde   
  41994b:	xor    bl,dh
  41994d:	xchg   BYTE PTR [ebx-0x48d244c0],bh
  419953:	or     eax,0x97020130
  419958:	xchg   DWORD PTR [ebx],ecx
  41995a:	push   ecx
  41995b:	jmp    0x41995a
  41995d:	pusha  
  41995e:	aaa    
  41995f:	mov    ecx,0x3f3deb92
  419964:	adc    BYTE PTR [ebx],cl
  419966:	sub    edi,DWORD PTR [ecx+0x45f4471]
  41996c:	fldcw  WORD PTR [edx+0x2c]
  41996f:	fs xchg edi,eax
  419971:	lea    ebp,[esi+0x4]
  419974:	inc    ebp
  419975:	adc    esi,esi
  419977:	mov    ebp,0xa93ef3dd
  41997c:	or     DWORD PTR [edi],edi
  41997e:	push   eax
  41997f:	pop    ebx
  419980:	aaa    
  419981:	lock sbb esi,DWORD PTR [edi-0x34]
  419985:	inc    ebx
  419986:	inc    esp
  419987:	arpl   WORD PTR ds:0xadddfeac,dx
  41998d:	(bad)  
  41998e:	fidiv  WORD PTR [esi+0x2e]
  419991:	retf   
  419992:	fcmovnu st,st(7)
  419994:	dec    esp
  419995:	mov    cl,0x25
  419997:	out    0xd4,eax
  419999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41999a:	inc    eax
  41999b:	test   BYTE PTR [ebp-0x40b13779],dh
  4199a1:	ja     0x419a09
  4199a3:	mov    bl,0x1c
  4199a5:	mov    dh,0x76
  4199a7:	mov    WORD PTR [ecx+0x523e57b8],fs
  4199ad:	out    0x77,eax
  4199af:	sahf   
  4199b0:	bswap  edx
  4199b2:	add    BYTE PTR [ecx],ch
  4199b4:	into   
  4199b5:	(bad)  
  4199b6:	fisub  DWORD PTR [ebx+0x6ba968f6]
  4199bc:	jo     0x4199df
  4199be:	gs push 0xa132638f
  4199c4:	hlt    
  4199c5:	mov    eax,ds:0x956fc133
  4199ca:	jge    0x419a2f
  4199cc:	mov    ah,0x32
  4199ce:	xor    edi,DWORD PTR [ebx-0x2f]
  4199d1:	sti    
  4199d2:	fadd   QWORD PTR [ecx]
  4199d4:	std    
  4199d5:	jne    0x4199a7
  4199d7:	jae    0x419a26
  4199d9:	push   0xe9f675cd
  4199de:	push   ss
  4199df:	call   0x13fb:0x1c63b2ae
  4199e6:	jnp    0x419a1e
  4199e8:	jg     0x4199d4
  4199ea:	jge    0x419a6b
  4199ec:	mov    bh,0x6e
  4199ee:	cmc    
  4199ef:	fs hlt 
  4199f1:	cmp    BYTE PTR [edx+eax*8-0x7a9fb6c4],al
  4199f8:	mov    cl,bl
  4199fa:	sbb    al,0x79
  4199fc:	xchg   ebx,eax
  4199fd:	jle    0x419982
  4199ff:	cmp    ebp,eax
  419a01:	sbb    edi,DWORD PTR [ecx-0x10f84429]
  419a07:	xchg   esi,ecx
  419a09:	push   esi
  419a0a:	addr16 xchg bh,bh
  419a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a0e:	add    al,bh
  419a10:	mov    ah,BYTE PTR [esi]
  419a12:	popf   
  419a13:	mov    bl,0xc3
  419a15:	mov    esi,0x78c7911a
  419a1a:	fs dec ecx
  419a1c:	cmp    BYTE PTR [edi-0x23644a26],al
  419a22:	or     BYTE PTR [eax+0x3e4f835b],cl
  419a28:	adc    eax,DWORD PTR [edx-0x78082d9d]
  419a2e:	mov    ebp,0x5e43d37b
  419a33:	sub    eax,DWORD PTR [ebx-0x51]
  419a36:	adc    al,0x6e
  419a38:	xchg   ecx,eax
  419a39:	xchg   ebp,eax
  419a3a:	mov    ebx,0x5ab3abda
  419a3f:	mov    ds:0xb7da4b10,eax
  419a44:	xchg   ebp,eax
  419a45:	mov    esi,0x3152df74
  419a4a:	nop
  419a4b:	and    ecx,0xffffffdb
  419a4e:	fimul  DWORD PTR [esp+ebp*8+0x5d5b9de5]
  419a55:	sub    al,0x72
  419a57:	add    BYTE PTR [ebp-0x46],bh
  419a5a:	jg     0x419a1d
  419a5c:	stos   DWORD PTR es:[edi],eax
  419a5d:	int3   
  419a5e:	xor    cl,BYTE PTR ds:0x2e0487fc
  419a64:	or     dl,cl
  419a66:	xlat   BYTE PTR ds:[ebx]
  419a67:	mov    WORD PTR [ecx],gs
  419a69:	imul   edx,edx,0xd2601e07
  419a6f:	add    DWORD PTR [edx+ecx*2-0xa],esp
  419a73:	fidiv  DWORD PTR [esi+0x27]
  419a76:	mov    ds:0x34925ca5,eax
  419a7b:	adc    eax,0xfaa41915
  419a80:	adc    eax,0x962df175
  419a85:	mov    ebx,0x46daaa1f
  419a8a:	add    eax,0x70131f7
  419a8f:	adc    al,0x3a
  419a91:	aas    
  419a92:	fistp  DWORD PTR [eax]
  419a94:	das    
  419a95:	cwde   
  419a96:	fstp   st(0)
  419a98:	jle    0x419a87
  419a9a:	or     ah,BYTE PTR [ecx+0x9]
  419a9d:	aas    
  419a9e:	sbb    eax,0x32b061b3
  419aa3:	pop    edi
  419aa4:	(bad)  
  419aa5:	lock dec esp
  419aa7:	push   eax
  419aa8:	stc    
  419aa9:	mov    bh,0xfb
  419aab:	push   edx
  419aac:	cmc    
  419aad:	sbb    bl,BYTE PTR [esi-0x4f]
  419ab0:	std    
  419ab1:	test   DWORD PTR [ebx],ecx
  419ab3:	call   0xb1344c80
  419ab8:	pop    edi
  419ab9:	not    BYTE PTR [bx+si+0x49]
  419abd:	inc    edx
  419abe:	shl    BYTE PTR [esi-0x31b8b4de],0x82
  419ac5:	cmp    al,0xac
  419ac7:	adc    BYTE PTR [esi+0x27276d8b],cl
  419acd:	mov    bh,0x6b
  419acf:	les    ebp,FWORD PTR [edx]
  419ad1:	sti    
  419ad2:	enter  0x3d0d,0xd9
  419ad6:	cmp    DWORD PTR [eax],eax
  419ad8:	icebp  
  419ad9:	scas   al,BYTE PTR es:[edi]
  419ada:	mov    dh,0x45
  419adc:	out    dx,eax
  419add:	aam    0x65
  419adf:	call   FWORD PTR [eax-0x56]
  419ae2:	sub    BYTE PTR [edi+ecx*4-0x69],0x4
  419ae7:	es retf 
  419ae9:	add    eax,0xcf66d289
  419aee:	mov    ecx,0xe42fc667
  419af3:	je     0x419b38
  419af5:	or     eax,0x89ee8c45
  419afa:	fs retf 0xf99a
  419afe:	jecxz  0x419ae9
  419b00:	jmp    DWORD PTR [ecx]
  419b02:	fild   QWORD PTR [ecx-0x5b]
  419b05:	dec    ecx
  419b06:	push   ebp
  419b07:	nop
  419b08:	push   0x4ddd4dd1
  419b0d:	dec    ecx
  419b0e:	sbb    bl,ah
  419b10:	test   BYTE PTR [eax],bl
  419b12:	sbb    eax,0x627bf2d5
  419b17:	push   cs
  419b18:	in     al,0x65
  419b1a:	je     0x419aef
  419b1c:	dec    edx
  419b1d:	leave  
  419b1e:	shr    dh,cl
  419b20:	or     BYTE PTR [eax-0x29363616],bh
  419b26:	ror    dh,0xa8
  419b29:	pop    edi
  419b2a:	cmp    al,0x8f
  419b2c:	jnp    0x419b7b
  419b2e:	and    edx,ebp
  419b30:	aaa    
  419b31:	pop    eax
  419b32:	sbb    bh,dh
  419b34:	mov    edi,DWORD PTR [esi+0x4858f484]
  419b3a:	xor    dh,BYTE PTR [ebx]
  419b3c:	sti    
  419b3d:	sub    al,0x43
  419b3f:	outs   dx,DWORD PTR ds:[esi]
  419b40:	mov    dl,BYTE PTR [eax-0x4f2babdb]
  419b46:	and    DWORD PTR [edi+ecx*1+0x20],ebx
  419b4a:	cld    
  419b4b:	gs jo  0x419b21
  419b4e:	mov    DWORD PTR [edx+0x310f8031],esi
  419b54:	sub    al,0x6a
  419b56:	retf   
  419b57:	mov    dl,0xbc
  419b59:	scas   al,BYTE PTR es:[edi]
  419b5a:	aam    0x94
  419b5c:	and    DWORD PTR [ecx],ebx
  419b5e:	jno    0x419b75
  419b60:	enter  0xa59d,0xc4
  419b64:	test   eax,0x59eb8797
  419b69:	test   al,0x92
  419b6b:	push   eax
  419b6c:	inc    ecx
  419b6d:	mov    ss,esi
  419b6f:	pop    esi
  419b70:	cli    
  419b71:	addr16 sahf 
  419b73:	pop    esi
  419b74:	inc    esi
  419b75:	ss leave 
  419b77:	sub    eax,0x3ea5cd16
  419b7c:	popf   
  419b7d:	sub    DWORD PTR [edx-0x631ae86],edi
  419b83:	popf   
  419b84:	mov    esp,0x501c14ba
  419b89:	push   ebx
  419b8a:	iret   
  419b8b:	add    eax,0x5d3a0be8
  419b90:	dec    edx
  419b91:	pop    ds
  419b92:	mov    ecx,0xe3ef5a5
  419b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b98:	xor    BYTE PTR [edi-0x37],ah
  419b9b:	cmp    DWORD PTR [esi],ebp
  419b9d:	mov    bl,0xfb
  419b9f:	fcmovnb st,st(5)
  419ba1:	test   BYTE PTR [eax+0x289e60af],dh
  419ba7:	fcomip st,st(7)
  419ba9:	mov    bh,0x5f
  419bab:	mov    al,ds:0x4c3817ca
  419bb0:	ja     0x419bda
  419bb2:	dec    esi
  419bb3:	jae    0x419b49
  419bb5:	(bad)
  419bb8:	aaa    
  419bb9:	sti    
  419bba:	(bad)  
  419bbb:	aam    0x25
  419bbd:	jmp    0xbad2:0xed60713e
  419bc4:	dec    ecx
  419bc5:	cmp    al,0xcb
  419bc7:	sbb    DWORD PTR [ebx+esi*2],ecx
  419bca:	cmp    ah,dh
  419bcc:	stos   BYTE PTR es:[edi],al
  419bcd:	popa   
  419bce:	mov    bh,0x5
  419bd0:	fst    DWORD PTR [ebx]
  419bd2:	loopne 0x419c4b
  419bd4:	test   al,0x7
  419bd6:	mov    dh,BYTE PTR [edx+0x53]
  419bd9:	xor    DWORD PTR [edi+0x8652ef4],ebp
  419bdf:	mov    ecx,0x68e84274
  419be4:	pop    edx
  419be5:	scas   al,BYTE PTR es:[edi]
  419be6:	fnsave [eax+0x71]
  419be9:	(bad)  
  419bea:	jmp    0x4c1a:0x88940ef0
  419bf1:	jb     0x419b87
  419bf3:	push   es
  419bf4:	mov    edi,0x7dbfa189
  419bf9:	stos   DWORD PTR es:[edi],eax
  419bfa:	es dec esp
  419bfc:	sbb    BYTE PTR ds:0xb7f4710d,cl
  419c02:	test   DWORD PTR [eax+0x72],0x2b758bad
  419c09:	out    0xfc,al
  419c0b:	mov    ds:0x23ea9f51,eax
  419c10:	dec    eax
  419c11:	push   edx
  419c12:	mov    bl,0x3c
  419c14:	adc    DWORD PTR [esi+0x58],esp
  419c17:	jb     0x419c21
  419c19:	pusha  
  419c1a:	sar    esi,1
  419c1c:	or     DWORD PTR [ebx+0x72],ecx
  419c1f:	cmc    
  419c20:	sti    
  419c21:	nop
  419c22:	xchg   ecx,eax
  419c23:	push   edi
  419c24:	int3   
  419c25:	push   eax
  419c26:	in     eax,0xbc
  419c28:	jg     0x419c02
  419c2a:	arpl   cx,dx
  419c2c:	dec    edi
  419c2d:	mov    eax,ds:0x6c174ca
  419c32:	arpl   WORD PTR [ebx-0x73],bp
  419c35:	lahf   
  419c36:	jbe    0x419bd2
  419c38:	pop    ds
  419c39:	dec    esp
  419c3a:	mov    ah,0x38
  419c3c:	add    al,0x8c
  419c3e:	(bad)  
  419c3f:	fldenv ds:0xfdb7f981
  419c45:	sub    ebp,DWORD PTR [edx+eiz*1]
  419c48:	jnp    0x419c20
  419c4a:	rcr    DWORD PTR [edi-0x53],0x8e
  419c4e:	fmul   st(2),st
  419c50:	out    0x0,eax
  419c52:	push   esi
  419c53:	jge    0x419cc0
  419c55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c56:	dec    edi
  419c57:	fwait
  419c58:	dec    ebp
  419c59:	mov    al,ds:0xdcf064cf
  419c5e:	pop    esi
  419c5f:	pop    ds
  419c60:	fcomp  QWORD PTR [edi]
  419c62:	repz dec eax
  419c64:	lock sbb al,0xad
  419c67:	je     0x419c7e
  419c69:	fmul   QWORD PTR [ebp-0x15871c42]
  419c6f:	sub    DWORD PTR [ebx-0x9cdb5b2],ebp
  419c75:	mov    BYTE PTR [ebx-0x27],al
  419c78:	fadd   QWORD PTR [ebx+0x3b9041c8]
  419c7e:	xor    DWORD PTR [ecx],ebx
  419c80:	or     edx,DWORD PTR [ecx-0x4c]
  419c83:	dec    eax
  419c84:	pop    DWORD PTR [eax+0x6d139105]
  419c8a:	or     esp,ecx
  419c8c:	pop    ebx
  419c8d:	cmp    ebp,ecx
  419c8f:	test   BYTE PTR [edi],al
  419c91:	pop    ecx
  419c92:	(bad)  
  419c93:	cmp    eax,0xb96e6354
  419c98:	and    dl,BYTE PTR [esi]
  419c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c9b:	inc    ebp
  419c9c:	loopne 0x419cea
  419c9e:	inc    esi
  419c9f:	ins    BYTE PTR es:[edi],dx
  419ca0:	ret    0xa222
  419ca3:	pop    esi
  419ca4:	icebp  
  419ca5:	pop    edx
  419ca6:	sbb    BYTE PTR [ecx+0x2],dh
  419ca9:	idiv   DWORD PTR [esi-0x2ed5bfd4]
  419caf:	adc    al,0xbc
  419cb1:	xchg   ebx,eax
  419cb2:	int    0x65
  419cb4:	jmp    0x528c76e8
  419cb9:	loop   0x419cdb
  419cbb:	out    0xd3,eax
  419cbd:	xchg   ebx,eax
  419cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cbf:	lods   al,BYTE PTR ds:[esi]
  419cc0:	pop    esp
  419cc1:	lock mov eax,ds:0xb26b37c2
  419cc7:	jl     0x419c4f
  419cc9:	jecxz  0x419d0a
  419ccb:	xchg   BYTE PTR [ecx+0x406292e3],al
  419cd1:	out    0x88,al
  419cd3:	lea    ebp,[ecx+ebp*2]
  419cd6:	imul   ecx,DWORD PTR [ecx+0x53],0x9aa359a6
  419cdd:	out    dx,al
  419cde:	dec    ebp
  419cdf:	and    eax,0xa2885efa
  419ce4:	mov    ebx,0x89e078c2
  419ce9:	out    dx,eax
  419cea:	jnp    0x419cb9
  419cec:	xchg   edx,eax
  419ced:	xlat   BYTE PTR ds:[ebx]
  419cee:	aaa    
  419cef:	pop    ebx
  419cf0:	into   
  419cf1:	mov    ebx,DWORD PTR ds:0xac1238db
  419cf7:	mov    al,BYTE PTR [ecx-0x7f036652]
  419cfd:	and    eax,esp
  419cff:	jnp    0x419ca7
  419d01:	scas   eax,DWORD PTR es:[edi]
  419d02:	cdq    
  419d03:	xor    eax,0x852ef11a
  419d08:	push   esp
  419d09:	test   BYTE PTR [ebx+esi*1],bl
  419d0c:	fcom   QWORD PTR [edi-0x3e4242f3]
  419d12:	test   ecx,esi
  419d14:	sub    al,0xc6
  419d16:	mov    cl,BYTE PTR [ebx]
  419d18:	(bad)  
  419d19:	push   edx
  419d1a:	scas   eax,DWORD PTR es:[edi]
  419d1b:	sub    BYTE PTR [edi],cl
  419d1d:	popf   
  419d1e:	mov    ecx,0xe916874c
  419d23:	mov    bh,0xc9
  419d25:	xchg   edx,eax
  419d26:	push   ebx
  419d27:	ds jns 0x419d9c
  419d2a:	imul   BYTE PTR [ebx+0x45]
  419d2d:	test   eax,0xccc552a9
  419d32:	ret    0x3f9e
  419d35:	adc    dl,BYTE PTR [ecx+edi*2]
  419d38:	dec    edi
  419d39:	or     edi,DWORD PTR [ebx+edx*1]
  419d3c:	test   BYTE PTR [ecx+0x602ae253],dl
  419d42:	mov    ebx,0x50599413
  419d47:	aad    0xe0
  419d49:	fwait
  419d4a:	jne    0x419ce3
  419d4c:	call   0xda72d511
  419d51:	jecxz  0x419d26
  419d53:	pop    edx
  419d54:	inc    ecx
  419d55:	push   eax
  419d56:	sub    DWORD PTR [edx+0x44],edx
  419d59:	ins    BYTE PTR es:[edi],dx
  419d5a:	test   DWORD PTR [edi+0x2c],edx
  419d5d:	sub    DWORD PTR gs:[edx+edi*4],edi
  419d61:	cli    
  419d62:	push   0x3cb50b3a
  419d67:	in     al,0x49
  419d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d6a:	sahf   
  419d6b:	mov    ecx,0x6cbaab61
  419d70:	inc    ecx
  419d71:	int    0xf1
  419d73:	(bad)  [eax-0x60]
  419d76:	or     DWORD PTR [ebp+esi*2+0x65b75a4e],esi
  419d7d:	xchg   ebx,eax
  419d7e:	jo     0x419d15
  419d80:	scas   eax,DWORD PTR es:[edi]
  419d81:	mov    dl,cl
  419d83:	imul   ebx,DWORD PTR [ebp+0xbf6098d],0xb1574075
  419d8d:	fbld   TBYTE PTR [edx+0x18c949ac]
  419d93:	sub    BYTE PTR [esi-0xea9592f],dh
  419d99:	xor    ebp,ebp
  419d9b:	sbb    al,0x6e
  419d9d:	xor    al,0x58
  419d9f:	mov    eax,0x245e2996
  419da4:	out    0xd8,al
  419da6:	cmp    al,0x63
  419da8:	cmc    
  419da9:	das    
  419daa:	popa   
  419dab:	popf   
  419dac:	pushf  
  419dad:	xchg   BYTE PTR [eax-0x507ec042],dh
  419db3:	mov    ah,0x7f
  419db5:	in     al,dx
  419db6:	fnstcw WORD PTR [ecx+0x17f16b51]
  419dbc:	dec    eax
  419dbd:	mov    ah,BYTE PTR fs:[edi]
  419dc0:	pusha  
  419dc1:	jne    0x419e3c
  419dc3:	mov    edx,0x6a174254
  419dc8:	pop    edi
  419dc9:	add    DWORD PTR [ecx+0x26],esp
  419dcc:	pushf  
  419dcd:	div    DWORD PTR [eax]
  419dcf:	mov    bl,0xb7
  419dd1:	add    BYTE PTR [esp+ecx*4],bh
  419dd4:	mov    esi,0x6a604e3f
  419dd9:	push   ebp
  419dda:	jp     0x419d9a
  419ddc:	inc    ebx
  419ddd:	imul   ebx,ecx,0x54
  419de0:	mov    esi,0xabf371f7
  419de5:	inc    ebx
  419de6:	das    
  419de7:	inc    ecx
  419de8:	arpl   WORD PTR [edi],si
  419dea:	cli    
  419deb:	jge    0x419dc5
  419ded:	shr    BYTE PTR [esi-0x6580a7ef],1
  419df3:	aaa    
  419df4:	out    dx,al
  419df5:	daa    
  419df6:	xchg   BYTE PTR [edx-0x50fe4170],bl
  419dfc:	stc    
  419dfd:	dec    ebx
  419dfe:	push   esi
  419dff:	push   ds
  419e00:	stos   BYTE PTR es:[edi],al
  419e01:	xchg   esp,eax
  419e02:	(bad)  
  419e03:	pop    esp
  419e04:	or     eax,0xe568fb86
  419e09:	add    DWORD PTR [ebp-0x18],0x1b
  419e0d:	mov    esp,DWORD PTR [ebx+0x4f]
  419e10:	dec    edx
  419e11:	pusha  
  419e12:	push   ecx
  419e13:	loope  0x419e6c
  419e15:	retf   0xa58a
  419e18:	jns    0x419d9f
  419e1a:	cwde   
  419e1b:	mov    ch,0x52
  419e1d:	(bad)  [eax+0x7cb96272]
  419e23:	(bad)  
  419e24:	ds popf 
  419e26:	sub    DWORD PTR [esi],ecx
  419e28:	(bad)  
  419e29:	jg     0x419e36
  419e2b:	xor    ebx,DWORD PTR [ecx-0x2b]
  419e2e:	jle    0x419dd0
  419e30:	(bad)  [ebx-0x3a]
  419e33:	sub    BYTE PTR [edi-0x43],cl
  419e36:	xor    BYTE PTR [edx],0xe5
  419e39:	retf   0xea90
  419e3c:	sahf   
  419e3d:	pop    ds
  419e3e:	gs sub al,0x42
  419e41:	mov    eax,0xfff01fa
  419e46:	xlat   BYTE PTR ds:[ebx]
  419e47:	sub    edx,DWORD PTR [ebx-0x3c]
  419e4a:	push   ss
  419e4b:	mov    WORD PTR ds:0xa2d15ed2,es
  419e51:	not    edi
  419e53:	cmp    eax,0x5a3b20df
  419e58:	outs   dx,DWORD PTR ds:[esi]
  419e59:	xchg   ebx,eax
  419e5a:	cmp    esp,DWORD PTR [eax-0x7396ddd1]
  419e60:	mov    WORD PTR [ebx-0x5d313fdd],fs
  419e66:	jns    0x419ea0
  419e68:	(bad)  
  419e6a:	cmp    dl,bh
  419e6c:	dec    eax
  419e6d:	mov    edx,0x6be05d1b
  419e72:	and    BYTE PTR [eax],0x4f
  419e75:	(bad)  
  419e76:	jne    0x419e52
  419e78:	bound  edi,QWORD PTR [esi]
  419e7a:	ficomp DWORD PTR [ecx+0x33b3ac6]
  419e80:	leave  
  419e81:	cli    
  419e82:	mov    ebx,DWORD PTR [esi-0x22472289]
  419e88:	or     eax,0xaa4565a9
  419e8d:	jmp    0x4d312353
  419e92:	sbb    al,0xcf
  419e94:	(bad)  
  419e95:	out    dx,al
  419e96:	imul   edx,ecx,0x33
  419e99:	push   DWORD PTR [edx]
  419e9b:	into   
  419e9c:	pop    eax
  419e9d:	(bad)  
  419e9e:	cmp    bl,BYTE PTR fs:[ebp+0x55]
  419ea2:	jo     0x419e5f
  419ea4:	cmp    esi,ecx
  419ea6:	push   ebp
  419ea7:	inc    esi
  419ea8:	rcr    BYTE PTR [ecx],0x1
  419eab:	cmp    bh,dl
  419ead:	inc    esi
  419eae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eaf:	test   BYTE PTR [esi-0x77e4ab96],dh
  419eb5:	bound  esi,QWORD PTR [ebp-0xb398d08]
  419ebb:	cmp    eax,0x993ec659
  419ec0:	popa   
  419ec1:	cmp    dh,BYTE PTR [eax-0x7a]
  419ec4:	inc    esp
  419ec5:	popf   
  419ec6:	into   
  419ec7:	add    dh,BYTE PTR [eax+0x266ceae7]
  419ecd:	sbb    bl,BYTE PTR [eax-0x34]
  419ed0:	gs jecxz 0x419f0d
  419ed3:	sti    
  419ed4:	inc    ecx
  419ed5:	fwait
  419ed6:	ror    BYTE PTR [eax+0x59bc174],0xfd
  419edd:	out    dx,eax
  419ede:	loopne 0x419ecb
  419ee0:	arpl   WORD PTR [esi+0x3f],ax
  419ee3:	add    ch,BYTE PTR [ecx-0x79]
  419ee6:	arpl   WORD PTR [ebx+0x696bb70b],sp
  419eec:	pop    ebp
  419eed:	jp     0x419f29
  419eef:	pop    ds
  419ef0:	int3   
  419ef1:	push   0xc9b58c9c
  419ef6:	push   edx
  419ef7:	push   esi
  419ef8:	cs aaa 
  419efa:	cld    
  419efb:	mov    eax,ds:0x6ff7fd1d
  419f00:	scas   al,BYTE PTR es:[edi]
  419f01:	add    ah,BYTE PTR [edi]
  419f03:	inc    esi
  419f04:	(bad)  
  419f05:	jmp    0x419ebe
  419f07:	ret    0xb16c
  419f0a:	loopne 0x419e95
  419f0c:	xchg   DWORD PTR [edi+0x6e00777c],eax
  419f12:	test   eax,0x35d8a77c
  419f17:	mov    BYTE PTR [ebx+0x675d1c22],ah
  419f1d:	or     esp,ebx
  419f1f:	mov    al,ds:0x734f4a48
  419f24:	ss xchg esp,eax
  419f26:	or     DWORD PTR [ebx-0x24],edi
  419f29:	jl     0x419ed6
  419f2b:	dec    eax
  419f2c:	mov    esp,0xa8c12877
  419f31:	std    
  419f32:	loop   0x419ec1
  419f34:	popf   
  419f35:	cmp    ebx,eax
  419f37:	std    
  419f38:	push   esp
  419f39:	xchg   edx,eax
  419f3a:	xchg   esi,eax
  419f3b:	stos   BYTE PTR es:[edi],al
  419f3c:	cmp    BYTE PTR [esi+0x61],cl
  419f3f:	ret    0xe004
  419f42:	mov    ds:0x47ef189f,eax
  419f47:	xchg   ecx,eax
  419f48:	loopne 0x419f34
  419f4a:	js     0x419f77
  419f4c:	mov    bl,0x71
  419f4e:	sar    DWORD PTR [ebx+0x226376a8],1
  419f54:	xor    DWORD PTR [ebp+0x63eeed6a],esp
  419f5a:	and    al,0xfd
  419f5c:	mov    dh,0x57
  419f5e:	mov    eax,0x6739c1ba
  419f63:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  419f65:	pushf  
  419f66:	sbb    DWORD PTR [ecx],edi
  419f68:	shr    BYTE PTR [esi+0x3b],1
  419f6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f6c:	mul    DWORD PTR [esi-0x59]
  419f6f:	push   0xbe7cc00a
  419f74:	je     0x419fc4
  419f76:	push   0xb5d31aed
  419f7b:	(bad)  
  419f7c:	mov    ecx,0x2f048b59
  419f81:	inc    edi
  419f82:	push   ds
  419f83:	jp     0x419fef
  419f85:	call   0x13e533fc
  419f8a:	add    BYTE PTR [esi],0xca
  419f8d:	int    0x61
  419f8f:	sbb    eax,0x16e1d622
  419f94:	and    al,0x2
  419f96:	pop    ebx
  419f97:	jp     0x419fe6
  419f99:	xchg   esi,eax
  419f9a:	nop
  419f9b:	inc    eax
  419f9c:	ins    BYTE PTR es:[edi],dx
  419f9d:	out    0x36,al
  419f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fa0:	push   esi
  419fa1:	jno    0x419fef
  419fa3:	ds cmp al,0x86
  419fa6:	imul   ebp,DWORD PTR [eax+0x4],0xffffffd0
  419faa:	pop    edx
  419fab:	lock dec edi
  419fad:	aas    
  419fae:	lds    ecx,FWORD PTR [esi+0x6900ad13]
  419fb4:	cmp    dl,bh
  419fb6:	(bad)  
  419fb7:	jmp    0x3a1d:0xdb9be135
  419fbe:	test   ecx,esi
  419fc0:	push   ds
  419fc1:	and    cl,ch
  419fc3:	mov    edx,0xe6a71020
  419fc8:	inc    eax
  419fc9:	adc    BYTE PTR [ebx-0x38],al
  419fcc:	mov    ebp,0xc6b1be43
  419fd1:	and    edx,DWORD PTR [ebx+0x2ea4dd85]
  419fd7:	sbb    edx,ecx
  419fd9:	or     DWORD PTR [esp+eax*1],0x54cb3deb
  419fe0:	mov    esi,0xfc5c21e2
  419fe5:	icebp  
  419fe6:	pop    edi
  419fe7:	(bad)  
  419fe8:	bound  ecx,QWORD PTR [eax+0x51]
  419feb:	repz jge 0x419f76
  419fee:	xchg   ecx,eax
  419fef:	(bad)  
  419ff1:	cmp    al,0xe4
  419ff3:	push   ss
  419ff4:	cmp    cl,BYTE PTR [edx+0x71]
  419ff7:	mov    ebp,0x841d2e1
  419ffc:	and    DWORD PTR [ebx],ebp
  419ffe:	jne    0x41a047
  41a000:	mov    WORD PTR [ecx-0x45],es
  41a003:	sar    BYTE PTR [ebx-0x37126e39],cl
  41a009:	js     0x419f93
  41a00b:	es pop ss
  41a00d:	and    edi,DWORD PTR [ecx+0x2922d10]
  41a013:	jg     0x41a003
  41a015:	xor    bh,bl
  41a017:	push   esi
  41a018:	xor    eax,DWORD PTR [ebp-0x15]
  41a01b:	jne    0x41a05f
  41a01d:	ins    DWORD PTR es:[edi],dx
  41a01e:	xchg   esi,eax
  41a01f:	imul   ecx,esi,0x5
  41a022:	cmp    al,0xbf
  41a024:	mov    ebp,0x1a1f4ada
  41a029:	cld    
  41a02a:	test   eax,0x920ee87b
  41a02f:	mov    bl,0x6c
  41a031:	or     bh,BYTE PTR [ebp+0x2ac2b4aa]
  41a037:	or     ch,BYTE PTR [ecx-0x60]
  41a03a:	jo     0x41a056
  41a03c:	xchg   esi,eax
  41a03d:	sub    DWORD PTR [edx],0x51137781
  41a043:	xlat   BYTE PTR ds:[ebx]
  41a044:	mov    ebx,0x8921cf07
  41a049:	enter  0xb689,0x35
  41a04d:	call   0x7c53f66d
  41a052:	movzx  edi,cx
  41a055:	jp     0x41a0a1
  41a057:	sub    bl,cl
  41a059:	fsubr  DWORD PTR [edi]
  41a05b:	iret   
  41a05c:	cs push eax
  41a05e:	cmc    
  41a05f:	sub    DWORD PTR [eax+0x6237ec2f],esi
  41a065:	pop    edx
  41a066:	in     al,0x8d
  41a068:	sar    BYTE PTR [edi+edi*2-0x47],0xb4
  41a06d:	sbb    bl,BYTE PTR [ebx]
  41a06f:	out    0xc1,eax
  41a071:	adc    eax,0x7020365
  41a076:	sti    
  41a077:	inc    edx
  41a078:	cmp    al,0xbc
  41a07a:	mov    eax,0x13a78e12
  41a07f:	popf   
  41a080:	sub    BYTE PTR [ebp+0x22],dl
  41a083:	adc    al,0xb2
  41a085:	stos   BYTE PTR es:[edi],al
  41a086:	test   al,0x57
  41a088:	dec    ecx
  41a089:	mov    edi,0x5f0b8208
  41a08e:	fld    QWORD PTR [esi+0x68]
  41a091:	mov    eax,0x5a2757cf
  41a096:	push   ebx
  41a097:	scas   eax,DWORD PTR es:[edi]
  41a098:	sbb    dh,al
  41a09a:	lods   eax,DWORD PTR ds:[esi]
  41a09b:	pop    ds
  41a09c:	shld   esp,edx,cl
  41a09f:	push   esi
  41a0a0:	shl    BYTE PTR [ecx-0x4d450d0a],1
  41a0a6:	out    0xc6,al
  41a0a8:	clc    
  41a0a9:	mov    fs,WORD PTR [ebx+0x5d]
  41a0ac:	fwait
  41a0ad:	and    BYTE PTR [eax],bl
  41a0af:	rcl    DWORD PTR [ebx-0x32],1
  41a0b2:	ds push 0xffffffb3
  41a0b5:	hlt    
  41a0b6:	xchg   ebp,eax
  41a0b7:	add    al,0xd0
  41a0b9:	cmc    
  41a0ba:	and    eax,0x15cb6e41
  41a0bf:	dec    ebx
  41a0c0:	or     al,0xe6
  41a0c2:	scas   eax,DWORD PTR es:[edi]
  41a0c3:	pop    ebp
  41a0c4:	lods   al,BYTE PTR ds:[esi]
  41a0c5:	call   0x1255:0x67e7499c
  41a0cc:	mov    bl,0xe
  41a0ce:	out    dx,al
  41a0cf:	sti    
  41a0d0:	sahf   
  41a0d1:	pop    eax
  41a0d2:	adc    BYTE PTR [ebp-0x41e47d1f],ch
  41a0d8:	call   0x1cec9885
  41a0dd:	sti    
  41a0de:	stos   BYTE PTR es:[edi],al
  41a0df:	scas   eax,DWORD PTR es:[edi]
  41a0e0:	xor    ecx,ecx
  41a0e2:	ja     0x41a0f0
  41a0e4:	(bad)  [esi]
  41a0e6:	in     al,0xd2
  41a0e8:	mov    esi,0x13037f86
  41a0ed:	jbe    0x41a151
  41a0ef:	scas   al,BYTE PTR es:[edi]
  41a0f0:	xchg   BYTE PTR [ebx-0x25e404e3],dh
  41a0f6:	inc    ebx
  41a0f7:	test   eax,0x712810fb
  41a0fc:	mov    edx,0x156a22e4
  41a101:	dec    esi
  41a102:	push   ebp
  41a103:	jo     0x41a128
  41a105:	adc    DWORD PTR [edx+0x3b],0xffffffcd
  41a109:	xchg   esi,eax
  41a10a:	cmp    edi,DWORD PTR [ecx-0x49]
  41a10d:	cmp    edx,esi
  41a10f:	push   ebx
  41a110:	mov    al,ds:0xeea04ea4
  41a115:	fldenv [edx+0x35703807]
  41a11b:	adc    bl,BYTE PTR [edx+ebx*2-0x70e79394]
  41a122:	outs   dx,BYTE PTR ds:[esi]
  41a123:	push   0xffffff80
  41a125:	mov    dh,ch
  41a127:	push   ds
  41a128:	mov    edx,DWORD PTR [ebx]
  41a12a:	pop    esi
  41a12b:	mov    edx,DWORD PTR [eax-0x26]
  41a12e:	or     al,0x2a
  41a130:	retf   0x8b0e
  41a133:	xor    eax,0xc969edc8
  41a138:	jmp    0x33735e11
  41a13d:	out    0x52,al
  41a13f:	sbb    esi,DWORD PTR [edi+0x22]
  41a142:	jno    0x41a1a0
  41a144:	sub    DWORD PTR [eax],edx
  41a146:	arpl   WORD PTR [edi+edi*2+0xeef4535],ax
  41a14d:	daa    
  41a14e:	(bad)
  41a151:	and    al,0x5e
  41a153:	mov    es,edi
  41a155:	xor    esi,DWORD PTR [eax]
  41a157:	cmp    esi,DWORD PTR [edi]
  41a159:	ret    0x2621
  41a15c:	in     al,0x82
  41a15e:	xor    bh,dh
  41a160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a161:	(bad)  
  41a163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a164:	(bad)
  41a167:	shrd   DWORD PTR [edi],esi,cl
  41a16a:	xchg   esp,eax
  41a16b:	push   cs
  41a16c:	xor    BYTE PTR [eax+0x1594dc2c],bl
  41a172:	xchg   esi,eax
  41a173:	lods   eax,DWORD PTR ds:[esi]
  41a174:	std    
  41a175:	xchg   DWORD PTR [ebp-0xb66f4f5],ebx
  41a17b:	jo     0x41a16b
  41a17d:	leave  
  41a17e:	xchg   ecx,eax
  41a17f:	out    0xa8,al
  41a181:	add    dl,BYTE PTR [eax]
  41a183:	push   edi
  41a184:	hlt    
  41a185:	call   0xdeb8:0xbd5bad1d
  41a18c:	cmp    ecx,DWORD PTR [ebx]
  41a18e:	int    0xc0
  41a190:	adc    bl,BYTE PTR [ebx-0x6902f4bf]
  41a196:	push   ds
  41a197:	push   esp
  41a198:	ins    BYTE PTR es:[edi],dx
  41a199:	add    DWORD PTR [edi+0x5b71ef9e],ebx
  41a19f:	push   ebx
  41a1a0:	scas   al,BYTE PTR es:[edi]
  41a1a1:	or     BYTE PTR [esi+0x1ad7ff23],bh
  41a1a7:	dec    ebp
  41a1a8:	std    
  41a1a9:	outs   dx,BYTE PTR ds:[esi]
  41a1aa:	lods   eax,DWORD PTR ds:[esi]
  41a1ab:	stc    
  41a1ac:	dec    BYTE PTR [esi+0x60]
  41a1af:	mov    edi,0x6c2dda5e
  41a1b4:	arpl   WORD PTR [eax+0x55a3bf99],bp
  41a1ba:	jg     0x41a161
  41a1bc:	in     eax,dx
  41a1bd:	fstp   QWORD PTR [ebx-0x18]
  41a1c0:	cmp    eax,0xe8f62525
  41a1c5:	leave  
  41a1c6:	mov    cl,0x9
  41a1c8:	loope  0x41a152
  41a1ca:	scas   al,BYTE PTR es:[edi]
  41a1cb:	aad    0x60
  41a1cd:	in     eax,dx
  41a1ce:	in     eax,0xf6
  41a1d0:	cmc    
  41a1d1:	mov    dl,ah
  41a1d3:	jb     0x41a179
  41a1d5:	ins    DWORD PTR es:[edi],dx
  41a1d6:	sbb    BYTE PTR [eax-0x41],0xab
  41a1da:	jo     0x41a1e4
  41a1dc:	scas   al,BYTE PTR es:[edi]
  41a1dd:	mov    esi,0x2de4a9f0
  41a1e2:	fmul   st,st(1)
  41a1e4:	mov    ecx,0xcda4d1e5
  41a1e9:	aad    0xf4
  41a1eb:	les    ebx,FWORD PTR [esi]
  41a1ed:	retf   
  41a1ee:	cmp    eax,0xdb43d8e0
  41a1f3:	sbb    eax,0x790a6e58
  41a1f8:	xlat   BYTE PTR ds:[ebx]
  41a1f9:	mov    al,0x13
  41a1fb:	cmovb  edi,DWORD PTR [edi+0x4e5b0163]
  41a202:	jmp    0x41a1fa
  41a204:	inc    ebp
  41a205:	dec    esi
  41a206:	fist   WORD PTR [ebx]
  41a208:	setne  ah
  41a20b:	sub    BYTE PTR ss:[esi+0x66a83c22],bl
  41a212:	and    al,0xa9
  41a214:	or     al,bl
  41a216:	mov    ah,ah
  41a218:	int    0x32
  41a21a:	cmp    al,dh
  41a21c:	push   ds
  41a21d:	aas    
  41a21e:	jmp    0x7ed9c0f7
  41a223:	faddp  st(1),st
  41a225:	ret    0xb313
  41a228:	mov    ch,0xe
  41a22a:	(bad)  
  41a22b:	xchg   edi,eax
  41a22c:	out    dx,al
  41a22d:	(bad)  
  41a22e:	sbb    eax,0x814a4e42
  41a233:	add    dh,dh
  41a235:	or     al,0x97
  41a237:	cmp    BYTE PTR [ecx+ebx*1],bl
  41a23a:	jl     0x41a2b6
  41a23c:	xchg   ebx,eax
  41a23d:	mov    al,0xe9
  41a23f:	inc    ebp
  41a240:	pop    ecx
  41a241:	les    esi,FWORD PTR [ebx+edi*4]
  41a244:	daa    
  41a245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a246:	scas   eax,DWORD PTR es:[edi]
  41a247:	push   edx
  41a248:	dec    ecx
  41a249:	mov    WORD PTR [ecx],fs
  41a24b:	jle    0x41a1f8
  41a24d:	sbb    DWORD PTR [ebp-0x17],ebp
  41a250:	fwait
  41a251:	jp     0x41a27d
  41a253:	sbb    eax,DWORD PTR [esi]
  41a255:	jecxz  0x41a1ef
  41a257:	push   es
  41a258:	push   ds
  41a259:	pushf  
  41a25a:	repnz fdivr DWORD PTR [eax+0x52a25d44]
  41a261:	dec    ebp
  41a262:	cdq    
  41a263:	and    al,0x5a
  41a265:	lds    edi,FWORD PTR [edx+0xd221c6f]
  41a26b:	add    al,0xe8
  41a26d:	in     eax,0x12
  41a26f:	xchg   ebx,edx
  41a271:	mov    WORD PTR [ebp-0x14b561a5],cs
  41a277:	sub    BYTE PTR [eax-0x4d],ah
  41a27a:	lods   al,BYTE PTR ds:[esi]
  41a27b:	xor    cl,BYTE PTR [ebx+0x6d]
  41a27e:	dec    edx
  41a27f:	push   ss
  41a280:	leave  
  41a281:	out    0x6b,eax
  41a283:	popf   
  41a284:	push   ds
  41a285:	pop    es
  41a286:	mov    ch,BYTE PTR [ecx]
  41a288:	xchg   esp,eax
  41a289:	jnp    0x41a296
  41a28b:	(bad)  
  41a28c:	cli    
  41a28d:	sbb    eax,DWORD PTR [ebx-0x7c]
  41a290:	retf   
  41a291:	pop    esp
  41a292:	sbb    al,0x62
  41a294:	cs (bad) 
  41a296:	mov    cs,WORD PTR [ebx+0x72305281]
  41a29c:	dec    ecx
  41a29d:	jecxz  0x41a2dc
  41a29f:	mov    ebx,esi
  41a2a1:	nop    edi
  41a2a4:	push   ss
  41a2a5:	push   0x1727b1fa
  41a2aa:	and    BYTE PTR [edx-0x79],dh
  41a2ad:	aas    
  41a2ae:	pop    edi
  41a2af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2b0:	xchg   bl,dl
  41a2b2:	cld    
  41a2b3:	dec    edx
  41a2b4:	pop    ds
  41a2b5:	pop    es
  41a2b6:	fisttp WORD PTR [esi+0x15018b95]
  41a2bc:	dec    ebp
  41a2bd:	jle    0x41a321
  41a2bf:	jle    0x41a2cc
  41a2c1:	cwde   
  41a2c2:	adc    ebx,esi
  41a2c4:	sbb    eax,0x8262fdeb
  41a2c9:	push   esp
  41a2ca:	and    esp,DWORD PTR [esi+0x78]
  41a2cd:	jmp    0x41a29d
  41a2cf:	test   eax,0xb0d016e6
  41a2d4:	clc    
  41a2d5:	push   esi
  41a2d6:	xchg   ebp,eax
  41a2d7:	nop
  41a2d8:	imul   eax
  41a2da:	inc    edx
  41a2db:	mov    ecx,0x4cbf7aad
  41a2e0:	adc    esi,ecx
  41a2e2:	stc    
  41a2e3:	xchg   edx,eax
  41a2e4:	jg     0x41a2bf
  41a2e6:	push   eax
  41a2e7:	daa    
  41a2e8:	push   esi
  41a2e9:	and    al,0xaf
  41a2eb:	inc    esp
  41a2ec:	lds    ebx,FWORD PTR [esi+eiz*4-0x45]
  41a2f0:	pop    ecx
  41a2f1:	mov    ebp,0x520d786d
  41a2f6:	sbb    ecx,ebx
  41a2f8:	sub    BYTE PTR [ebx+edi*4-0x4fd3138],0x45
  41a300:	or     esi,esp
  41a302:	xor    BYTE PTR [edi+edi*4-0x11266268],bl
  41a309:	fsubr  QWORD PTR [edi-0x3d]
  41a30c:	outs   dx,BYTE PTR ds:[esi]
  41a30d:	dec    edi
  41a30e:	aaa    
  41a30f:	(bad)  
  41a310:	icebp  
  41a311:	push   ecx
  41a312:	lock sbb eax,0x250c61d6
  41a318:	mov    edx,DWORD PTR [esi+eiz*2+0x6a174c79]
  41a31f:	sahf   
  41a320:	sar    DWORD PTR [edi-0x14],cl
  41a323:	cmovbe esp,esi
  41a326:	sets   BYTE PTR [edx+0x4c76ead]
  41a32d:	add    eax,0xb30163a9
  41a332:	sbb    eax,0x87f323e2
  41a337:	inc    esi
  41a338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a339:	sub    al,0x71
  41a33b:	mov    DWORD PTR [eax+ecx*8],ebp
  41a33e:	js     0x41a2ee
  41a340:	ins    BYTE PTR es:[edi],dx
  41a341:	ret    0x9e83
  41a344:	nop
  41a345:	xchg   bx,ax
  41a347:	or     ch,ch
  41a349:	push   edx
  41a34a:	add    ah,BYTE PTR [ebx-0x9d7fc65]
  41a350:	xchg   ecx,eax
  41a351:	pop    edx
  41a352:	sub    BYTE PTR [eax+0x54],dl
  41a355:	outs   dx,DWORD PTR cs:[esi]
  41a357:	pop    ecx
  41a358:	pop    ebx
  41a359:	jmp    0x41a373
  41a35b:	out    0xcb,al
  41a35d:	pusha  
  41a35e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a35f:	jbe    0x41a375
  41a361:	adc    BYTE PTR [ecx],al
  41a363:	lock (bad) 
  41a365:	xor    eax,0x3b8ac3d4
  41a36a:	add    al,0x70
  41a36c:	mov    al,0xab
  41a36e:	in     al,dx
  41a36f:	adc    dl,BYTE PTR [ecx+0x172ca0a6]
  41a375:	dec    esp
  41a376:	in     al,dx
  41a377:	or     dh,dl
  41a379:	popa   
  41a37a:	inc    edx
  41a37b:	pop    ebp
  41a37c:	fistp  DWORD PTR [edi]
  41a37e:	pop    ebp
  41a37f:	in     al,0xf2
  41a381:	pop    ebx
  41a382:	(bad)  [eax+ebx*1]
  41a385:	jmp    0x501469e0
  41a38a:	xchg   esp,eax
  41a38b:	mov    cl,BYTE PTR [edi]
  41a38d:	or     BYTE PTR [edx+0x4e3bf23f],al
  41a393:	inc    edx
  41a394:	adc    BYTE PTR [esi-0x2d063b6c],0x3d
  41a39b:	fdiv   QWORD PTR [ecx]
  41a39d:	mov    eax,ds:0xf6f913b
  41a3a2:	iret   
  41a3a3:	test   DWORD PTR [eax],eax
  41a3a5:	repz and DWORD PTR [edx-0x423087b2],0x45
  41a3ad:	test   edx,0x380dea7
  41a3b3:	sub    al,BYTE PTR [ebx+0x34]
  41a3b6:	sub    esi,DWORD PTR [ecx-0x18f94d1f]
  41a3bc:	mov    ebx,DWORD PTR [eax+0x68]
  41a3bf:	pushf  
  41a3c0:	aad    0x70
  41a3c2:	push   ss
  41a3c3:	push   ds
  41a3c4:	mov    dl,0x5b
  41a3c6:	adc    dh,BYTE PTR [edx+0x23]
  41a3c9:	aas    
  41a3ca:	xor    BYTE PTR [eax+ebp*4],dh
  41a3cd:	xor    dh,bh
  41a3cf:	pushf  
  41a3d0:	jl     0x41a3f3
  41a3d2:	add    ebp,DWORD PTR [ebx]
  41a3d4:	in     al,dx
  41a3d5:	sbb    DWORD PTR [ebx],0xffffffaf
  41a3d8:	push   ss
  41a3d9:	push   0xac092836
  41a3de:	xchg   ebp,eax
  41a3df:	pop    ds
  41a3e0:	jmp    0x41a454
  41a3e2:	inc    eax
  41a3e3:	lock mov ds:0x260a6d66,eax
  41a3e9:	dec    esp
  41a3ea:	inc    edi
  41a3eb:	xchg   BYTE PTR [edx-0x32],ch
  41a3ee:	arpl   WORD PTR [edx-0x249b67da],bp
  41a3f4:	sbb    eax,0x5e9e0ee3
  41a3f9:	adc    ch,BYTE PTR [ebx]
  41a3fb:	add    eax,0x9de65b16
  41a400:	fsub   DWORD PTR [ebx+0x3a158098]
  41a406:	retf   0x97f7
  41a409:	cmp    ch,bl
  41a40b:	fsub   DWORD PTR [ecx-0x12]
  41a40e:	repz pop esp
  41a410:	jmp    0x1067:0xd1de50ee
  41a417:	retf   
  41a418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a419:	aam    0x7
  41a41b:	rcr    DWORD PTR [ebp+0xf271908],0x52
  41a422:	sar    BYTE PTR [ebp+0x56b54e52],cl
  41a428:	sbb    BYTE PTR [edx-0x58],bh
  41a42b:	test   BYTE PTR [edi+0x44f677a6],0x3b
  41a432:	dec    edi
  41a433:	push   edx
  41a434:	mov    eax,ds:0x3f8c1e0b
  41a439:	add    DWORD PTR [edx+edx*4],ebx
  41a43c:	mov    cl,0xe
  41a43e:	or     eax,0x2a74a958
  41a443:	sbb    DWORD PTR [eax-0x22],edi
  41a446:	pop    ds
  41a447:	(bad)  
  41a449:	inc    ebp
  41a44a:	shl    BYTE PTR [esi-0x80],cl
  41a44d:	and    BYTE PTR [edi-0x9],dl
  41a450:	jno    0x41a3f2
  41a452:	call   0x6d29f79d
  41a457:	les    eax,FWORD PTR [ebp+0x76]
  41a45a:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41a45c:	adc    al,0x9a
  41a45e:	ins    BYTE PTR es:[edi],dx
  41a45f:	icebp  
  41a460:	push   esp
  41a461:	popa   
  41a462:	into   
  41a463:	and    BYTE PTR [ebx-0x3e5491f0],dh
  41a469:	in     al,0x1b
  41a46b:	leave  
  41a46c:	sbb    BYTE PTR [edi-0x21],al
  41a46f:	or     eax,0x1db723d2
  41a474:	rol    DWORD PTR gs:[edi-0x2b921d75],0xbd
  41a47c:	(bad)  
  41a47d:	adc    DWORD PTR [ebx],ebx
  41a47f:	adc    al,0xe4
  41a481:	mov    ebp,0x64b88ce4
  41a486:	lea    esi,[edi+edx*4-0x43]
  41a48a:	cmp    bh,dh
  41a48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a48d:	jnp    0x41a465
  41a48f:	or     al,BYTE PTR [edi]
  41a491:	mov    BYTE PTR [ebp+0x7a],bl
  41a494:	ficom  WORD PTR [esi+ecx*8-0x34f0d762]
  41a49b:	idiv   al
  41a49d:	mov    edx,0x676e608b
  41a4a2:	addr16 inc ebp
  41a4a4:	std    
  41a4a5:	scas   al,BYTE PTR es:[edi]
  41a4a6:	mov    al,ds:0xedc641b3
  41a4ab:	bound  esi,QWORD PTR [esi+0x37]
  41a4ae:	lods   eax,DWORD PTR ds:[esi]
  41a4af:	pop    esp
  41a4b0:	ror    BYTE PTR [esp+ebp*2],cl
  41a4b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4b4:	cmp    BYTE PTR [ecx-0x1f9fcd0d],bl
  41a4ba:	push   ss
  41a4bb:	lods   eax,DWORD PTR ds:[esi]
  41a4bc:	jns    0x41a506
  41a4be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4bf:	or     BYTE PTR [ebx],cl
  41a4c1:	jnp    0x41a500
  41a4c3:	loope  0x41a48f
  41a4c5:	(bad)  
  41a4c6:	out    dx,eax
  41a4c7:	jle    0x41a4eb
  41a4c9:	aam    0x4e
  41a4cb:	loopne 0x41a4f6
  41a4cd:	mov    ecx,0x52ce2f13
  41a4d2:	pusha  
  41a4d3:	mov    dl,0xc8
  41a4d5:	push   0x27
  41a4d7:	sbb    al,ah
  41a4d9:	ds mov dl,0xcb
  41a4dc:	xchg   esi,eax
  41a4dd:	pop    ebp
  41a4de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4df:	into   
  41a4e0:	aam    0x2a
  41a4e2:	into   
  41a4e3:	cmp    BYTE PTR [esi],cl
  41a4e5:	cwde   
  41a4e6:	sub    al,cl
  41a4e8:	clc    
  41a4e9:	inc    esp
  41a4ea:	adc    al,0x45
  41a4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4ed:	sbb    eax,0x5701ff85
  41a4f2:	fnstsw WORD PTR [eax]
  41a4f4:	addr16 jmp 0x41a4c5
  41a4f7:	xor    al,BYTE PTR [eax-0x4d6b33bf]
  41a4fd:	sbb    BYTE PTR [ebp+0x6665087c],bh
  41a503:	neg    BYTE PTR [ebx-0xd]
  41a506:	fst    QWORD PTR [ebx-0x30]
  41a509:	dec    esi
  41a50a:	mov    ds:0xb7074433,al
  41a50f:	cmp    dl,al
  41a511:	xlat   BYTE PTR ds:[ebx]
  41a512:	rol    DWORD PTR [ebp-0x66],0xb9
  41a516:	stos   BYTE PTR es:[edi],al
  41a517:	cli    
  41a518:	or     BYTE PTR [esi+0x14],cl
  41a51b:	inc    eax
  41a51d:	aaa    
  41a51e:	pop    edi
  41a51f:	jno    0x41a57b
  41a521:	xor    BYTE PTR [ebp+esi*1-0x5d0874dc],ah
  41a528:	mov    bl,0x17
  41a52a:	and    al,0xc2
  41a52c:	or     dh,ch
  41a52e:	sub    BYTE PTR [eax],bh
  41a530:	sub    ebp,DWORD PTR [ebx-0x6e]
  41a533:	rol    BYTE PTR [edi-0x75],cl
  41a536:	test   eax,0x16e9bf4
  41a53b:	cdq    
  41a53c:	jge    0x41a4ff
  41a53e:	arpl   WORD PTR [edx],di
  41a540:	ret    0xb05c
  41a543:	rol    DWORD PTR [esi],cl
  41a545:	fdivr  st(6),st
  41a547:	push   edx
  41a548:	and    al,BYTE PTR [ecx+edi*4]
  41a54b:	int    0xbb
  41a54d:	mov    al,ds:0xfb583469
  41a552:	lahf   
  41a553:	fs fwait
  41a555:	pop    esi
  41a556:	xchg   ecx,eax
  41a557:	dec    cl
  41a559:	sbb    al,0x87
  41a55b:	rol    esi,1
  41a55d:	push   esi
  41a55e:	cmp    edx,ebx
  41a560:	mov    al,0x5d
  41a562:	mov    esi,0x67acfee
  41a567:	mov    al,0x83
  41a569:	in     al,0xde
  41a56b:	inc    esi
  41a56c:	xchg   edi,eax
  41a56d:	mov    eax,ds:0x84e96aee
  41a572:	stc    
  41a573:	mov    ch,0x4d
  41a575:	lods   eax,DWORD PTR ds:[esi]
  41a576:	ins    DWORD PTR es:[edi],dx
  41a577:	add    DWORD PTR [edi],ecx
  41a579:	mov    esi,0xe2c351a5
  41a57e:	imul   esi,DWORD PTR [esp+esi*4+0xd06568e],0x57
  41a586:	fimul  WORD PTR [esi-0x66]
  41a589:	int    0x55
  41a58b:	mov    bl,0x2f
  41a58d:	lock inc ebp
  41a58f:	mov    bh,0xa4
  41a591:	pop    esi
  41a592:	mov    WORD PTR [ebp+0x3c663ffd],ss
  41a598:	repz push ebx
  41a59a:	jge    0x41a55a
  41a59c:	and    edi,ecx
  41a59e:	sbb    edx,DWORD PTR [ebx]
  41a5a0:	pop    ss
  41a5a1:	test   edi,esi
  41a5a3:	pusha  
  41a5a4:	addr16 in al,0x59
  41a5a7:	sbb    al,0xf6
  41a5a9:	mov    edi,0xa8907aea
  41a5ae:	mov    edx,0x7d97294d
  41a5b4:	in     eax,dx
  41a5b5:	orps   xmm1,XMMWORD PTR [esi]
  41a5b8:	xor    cl,BYTE PTR ss:0xa26c839f
  41a5bf:	pop    ebx
  41a5c0:	das    
  41a5c1:	call   0x7ef8:0x5fa67d07
  41a5c8:	lock xor dh,cl
  41a5cb:	leave  
  41a5cc:	jl     0x41a62a
  41a5ce:	xor    eax,0x2731829d
  41a5d3:	adc    al,0x95
  41a5d5:	imul   ebp,DWORD PTR [ebp+0x1a],0x56116b5b
  41a5dc:	ja     0x41a638
  41a5de:	lea    edx,[esi+0x44]
  41a5e1:	dec    ebx
  41a5e2:	imul   ch
  41a5e4:	lods   eax,DWORD PTR ds:[esi]
  41a5e5:	rcl    DWORD PTR [esi+eax*1-0x4ce3267b],1
  41a5ec:	or     edi,DWORD PTR [esi]
  41a5ee:	mov    ds,WORD PTR [ebx-0x19]
  41a5f1:	add    BYTE PTR [esi+0x152f8d9f],bl
  41a5f7:	xchg   edi,eax
  41a5f8:	mov    bh,0x7b
  41a5fa:	jne    0x41a597
  41a5fc:	jnp    0x41a581
  41a5fe:	das    
  41a5ff:	ins    BYTE PTR es:[edi],dx
  41a600:	jnp    0x41a5bd
  41a602:	cmc    
  41a603:	adc    eax,0x524398e1
  41a608:	call   0x39f3:0xd5e8050a
  41a60f:	sbb    dh,dl
  41a611:	inc    ebp
  41a612:	mov    cl,0x3b
  41a614:	dec    esp
  41a615:	xchg   ebp,eax
  41a616:	fwait
  41a617:	std    
  41a618:	es daa 
  41a61a:	xchg   ebx,eax
  41a61b:	sbb    eax,0xf5353c2d
  41a620:	mov    ebx,0x73098510
  41a625:	mov    edi,0xe04877ab
  41a62a:	push   esp
  41a62b:	das    
  41a62c:	pop    esp
  41a62d:	leave  
  41a62e:	xchg   ebx,eax
  41a62f:	mov    esi,0xa2292194
  41a634:	ffree  st(1)
  41a636:	mov    ebx,0xc30ac135
  41a63b:	jle    0x41a67b
  41a63d:	aam    0xbd
  41a63f:	xor    DWORD PTR [ebx-0x3b],edx
  41a642:	inc    ecx
  41a643:	sub    BYTE PTR es:[eax-0x39],dh
  41a647:	lds    ebp,FWORD PTR [ebx-0xb8c520d]
  41a64d:	sar    BYTE PTR [esi+0xa101930],cl
  41a653:	call   0x7c68:0x44ddc8d7
  41a65a:	and    DWORD PTR [esi+0x3edaaf74],edx
  41a660:	xor    bl,bh
  41a662:	repnz retf 
  41a664:	push   eax
  41a665:	ror    DWORD PTR [edi+0x3702276b],1
  41a66b:	ret    
  41a66c:	inc    eax
  41a66d:	xchg   esi,eax
  41a66e:	pop    esp
  41a66f:	aad    0xb8
  41a671:	imul   edi,ebx,0x5eda868f
  41a677:	adc    eax,DWORD PTR [ecx+edx*2+0x4]
  41a67b:	call   0xd60a:0x7eea99a
  41a682:	popf   
  41a683:	push   cs
  41a684:	push   eax
  41a685:	je     0x41a6df
  41a687:	leave  
  41a688:	mov    esp,0x4248c6dd
  41a68d:	xchg   ebx,eax
  41a68e:	mov    ebx,0x4f471d16
  41a693:	retf   
  41a694:	mov    edx,0xf93eeb4f
  41a699:	fiadd  WORD PTR [ecx+ebx*8]
  41a69c:	arpl   WORD PTR [edi],si
  41a69e:	inc    ebx
  41a69f:	inc    esp
  41a6a0:	fisttp DWORD PTR [ecx+0x49]
  41a6a3:	outs   dx,BYTE PTR ds:[esi]
  41a6a4:	and    DWORD PTR [ebx-0x30fcfabd],ebx
  41a6aa:	shl    DWORD PTR [eax+edi*2],0xe7
  41a6ae:	mov    ecx,0xd1f22e4c
  41a6b3:	test   DWORD PTR [ebp+0x64],0xd6e8725a
  41a6ba:	repz clc 
  41a6bc:	xchg   ch,ch
  41a6be:	jge    0x41a64e
  41a6c0:	mov    cl,0x2
  41a6c2:	in     eax,0x8
  41a6c4:	int3   
  41a6c5:	clc    
  41a6c6:	push   0xffffffd4
  41a6c8:	hlt    
  41a6c9:	or     DWORD PTR [ecx+0x1d],edx
  41a6cc:	inc    eax
  41a6cd:	inc    edi
  41a6ce:	test   al,0x3
  41a6d0:	add    dl,al
  41a6d2:	jmp    0x77ed78d9
  41a6d7:	jl     0x41a70d
  41a6d9:	adc    DWORD PTR [bp-0x772d],0x527d5cf6
  41a6e2:	loop   0x41a723
  41a6e4:	xchg   ebp,eax
  41a6e5:	xchg   edi,eax
  41a6e6:	mov    cl,0x85
  41a6e8:	jbe    0x41a73c
  41a6ea:	mov    ebp,0xe1aae5be
  41a6ef:	fsubr  st(4),st
  41a6f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6f2:	ds rdtsc 
  41a6f5:	jno    0x41a6ec
  41a6f7:	xchg   edx,eax
  41a6f8:	pop    ebx
  41a6f9:	sbb    BYTE PTR [ebx+0x20],al
  41a6fc:	inc    eax
  41a6fd:	push   0x6ff6a8cc
  41a702:	inc    eax
  41a703:	ror    BYTE PTR [bp-0x36],cl
  41a707:	sub    DWORD PTR [esi-0xa],0xaee93e18
  41a70e:	adc    eax,DWORD PTR [eax]
  41a710:	out    dx,eax
  41a711:	int    0xcb
  41a713:	call   0x9818f74f
  41a718:	jo     0x41a73f
  41a71a:	jp     0x41a720
  41a71c:	out    0x20,al
  41a71e:	push   ecx
  41a71f:	jnp    0x41a77f
  41a721:	test   al,0x17
  41a723:	pop    ds
  41a724:	sbb    dh,ch
  41a726:	shl    DWORD PTR [edi],1
  41a728:	lods   eax,DWORD PTR ds:[esi]
  41a729:	inc    edx
  41a72a:	inc    esp
  41a72b:	lea    ebx,[eax+eax*2+0x66f5f631]
  41a732:	jbe    0x41a79a
  41a734:	data16 xor BYTE PTR [ebx+0x4e18adb],bl
  41a73b:	xor    eax,ebp
  41a73d:	xor    BYTE PTR [edi+edx*8-0x49],al
  41a741:	das    
  41a742:	adc    BYTE PTR [edi+edx*2-0x60a70729],0xe0
  41a74a:	shr    DWORD PTR [eax],0x42
  41a74d:	fimul  WORD PTR [ecx]
  41a74f:	mov    eax,0xf1f0cee0
  41a754:	(bad)  
  41a755:	dec    esi
  41a756:	dec    esi
  41a757:	push   ebx
  41a758:	inc    esi
  41a759:	(bad)  
  41a75a:	sbb    ebp,ecx
  41a75c:	mov    ds:0x69861c30,eax
  41a761:	outs   dx,DWORD PTR ds:[esi]
  41a762:	call   0x1d9d1643
  41a767:	stc    
  41a768:	jnp    0x41a78d
  41a76a:	data16 or al,0xf5
  41a76d:	push   ds
  41a76e:	arpl   WORD PTR [edi+0x58],bp
  41a771:	sub    al,BYTE PTR [edx]
  41a773:	mov    edx,0x5a9d7d19
  41a778:	push   esi
  41a779:	sub    al,0xb0
  41a77b:	shl    bl,0x64
  41a77e:	jno    0x41a7b6
  41a780:	cwde   
  41a781:	pop    es
  41a782:	jmp    0xc97080d0
  41a787:	hlt    
  41a788:	cmp    BYTE PTR [edi],cl
  41a78a:	and    DWORD PTR [edx+ecx*1+0x7865dd53],edx
  41a791:	xchg   esp,eax
  41a792:	adc    al,0xef
  41a794:	mov    al,ds:0x4666f32c
  41a799:	mov    eax,ds:0x6c76d5c5
  41a79e:	pop    ebx
  41a79f:	pop    esp
  41a7a0:	test   DWORD PTR [eax],edi
  41a7a2:	push   0x882bf434
  41a7a7:	inc    edi
  41a7a8:	fistp  QWORD PTR [ecx-0xa96cbe2]
  41a7ae:	in     al,dx
  41a7af:	(bad)  
  41a7b0:	mov    edx,0xd24af6fc
  41a7b5:	mov    WORD PTR [eax],?
  41a7b7:	fsubp  st(4),st
  41a7b9:	aam    0x9
  41a7bb:	push   ebp
  41a7bc:	mov    dl,0x7f
  41a7be:	push   0xffffffa4
  41a7c0:	pop    eax
  41a7c1:	mov    WORD PTR [ebx-0x45086678],ss
  41a7c7:	mov    ds:0xa3412e0f,eax
  41a7cc:	lods   al,BYTE PTR ds:[esi]
  41a7cd:	xor    BYTE PTR [edx+0x10df64e2],bl
  41a7d3:	outs   dx,DWORD PTR ds:[esi]
  41a7d4:	fs jno 0x41a7b4
  41a7d7:	cmp    ah,BYTE PTR [esi-0x4d]
  41a7da:	in     eax,dx
  41a7db:	fs test eax,0x2995a322
  41a7e1:	ror    BYTE PTR [ebx-0x2c76a371],1
  41a7e7:	js     0x41a79c
  41a7e9:	popa   
  41a7ea:	lods   al,BYTE PTR ds:[esi]
  41a7eb:	ja     0x41a7e8
  41a7ed:	imul   esi,ebp,0x8e29e1bc
  41a7f3:	mov    dl,0xa4
  41a7f5:	pop    esp
  41a7f6:	and    eax,0xe1404d47
  41a7fb:	jmp    ebx
  41a7fd:	push   ss
  41a7fe:	jnp    0x41a873
  41a800:	repnz lods eax,DWORD PTR ds:[esi]
  41a802:	scas   eax,DWORD PTR es:[di]
  41a804:	jnp    0x41a86f
  41a806:	push   esp
  41a807:	leave  
  41a808:	xor    DWORD PTR [esi+0x6],0xbd889e00
  41a80f:	into   
  41a810:	inc    eax
  41a811:	imul   edi,edi,0xd
  41a814:	adc    eax,0x5e04fed1
  41a819:	pop    esi
  41a81a:	ja     0x41a802
  41a81c:	mov    al,ds:0x1f0915d8
  41a821:	mov    edi,0x716ad288
  41a826:	add    esi,DWORD PTR [ebx-0x1a07fc7b]
  41a82c:	sti    
  41a82d:	lds    esi,FWORD PTR [ebx]
  41a82f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a830:	daa    
  41a831:	xor    dh,dh
  41a833:	out    0x3f,al
  41a835:	aas    
  41a836:	mov    ?,WORD PTR ds:0xcde374be
  41a83c:	push   ecx
  41a83d:	xchg   edi,eax
  41a83e:	jl     0x41a865
  41a840:	fcmovb st,st(2)
  41a842:	loopne 0x41a832
  41a844:	add    DWORD PTR [ebx+ecx*1+0x6],edi
  41a848:	adc    eax,DWORD PTR [edx]
  41a84a:	sahf   
  41a84b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a84c:	adc    DWORD PTR [ebx],ebx
  41a84e:	jl     0x41a808
  41a850:	mov    bh,0x13
  41a852:	scas   eax,DWORD PTR es:[edi]
  41a853:	or     ebp,0xd
  41a856:	stc    
  41a857:	pop    esi
  41a858:	fsubr  DWORD PTR [esi-0x3dab865e]
  41a85e:	imul   ebx,ecx,0xf67db1a0
  41a864:	outs   dx,DWORD PTR ds:[esi]
  41a865:	(bad)  
  41a866:	jecxz  0x41a8ae
  41a868:	fstp   QWORD PTR [edx]
  41a86a:	mov    ch,0x5f
  41a86c:	add    ebx,ebx
  41a86e:	mov    DWORD PTR [edx+0x31ab6592],edx
  41a874:	je     0x41a811
  41a876:	cmp    dh,BYTE PTR [edi+0x2]
  41a879:	clc    
  41a87a:	lahf   
  41a87b:	repnz xchg edi,eax
  41a87d:	aam    0xf6
  41a87f:	lods   al,BYTE PTR ds:[esi]
  41a880:	xchg   ebx,eax
  41a881:	pop    edx
  41a882:	add    cl,bh
  41a884:	mov    eax,ds:0x6d2a0d7c
  41a889:	pop    eax
  41a88a:	arpl   WORD PTR [ecx-0x6f],bp
  41a88d:	add    eax,0xe8542df7
  41a892:	cwde   
  41a893:	jns    0x41a8b0
  41a895:	(bad)  
  41a896:	pop    edx
  41a897:	shl    DWORD PTR ds:0x1f412735,1
  41a89d:	cdq    
  41a89e:	or     edi,DWORD PTR [eax-0x38]
  41a8a1:	adc    al,BYTE PTR [edi]
  41a8a3:	jb     0x41a88b
  41a8a5:	mov    bl,0x40
  41a8a7:	push   es
  41a8a8:	xor    dh,BYTE PTR [ebx-0x7d]
  41a8ab:	out    0xf0,al
  41a8ad:	jecxz  0x41a86e
  41a8af:	push   0xffffffbb
  41a8b1:	xor    edx,DWORD PTR [ebp-0x79]
  41a8b4:	xchg   ebx,eax
  41a8b5:	jmp    0xa25:0xf1cda347
  41a8bc:	out    0xae,al
  41a8be:	dec    eax
  41a8bf:	or     ebp,eax
  41a8c1:	mov    ds:0x56d2adc9,eax
  41a8c6:	push   cs
  41a8c7:	mov    al,0x2
  41a8c9:	xor    dh,ch
  41a8cb:	mov    dh,0x68
  41a8cd:	sti    
  41a8ce:	loop   0x41a92e
  41a8d0:	pop    eax
  41a8d1:	or     al,0x3d
  41a8d3:	xor    dh,dl
  41a8d5:	div    DWORD PTR [ecx+0x5e83a8c0]
  41a8db:	std    
  41a8dc:	adc    al,0x6
  41a8de:	fidiv  DWORD PTR [eax]
  41a8e0:	mov    dh,0xc
  41a8e2:	addr16 xchg di,ax
  41a8e5:	jl     0x41a93e
  41a8e7:	shr    DWORD PTR ss:[edx],1
  41a8ea:	mov    DWORD PTR [edi+0x1d],ecx
  41a8ed:	xor    dl,ah
  41a8ef:	outs   dx,DWORD PTR ds:[esi]
  41a8f0:	pop    edi
  41a8f1:	jne    0x41a8ae
  41a8f3:	jne    0x41a884
  41a8f5:	in     eax,0xbf
  41a8f7:	xchg   ecx,eax
  41a8f8:	bound  ecx,QWORD PTR [eax]
  41a8fa:	(bad)  
  41a8fb:	addr16 inc edx
  41a8fd:	ret    
  41a8fe:	clc    
  41a8ff:	mov    al,0x1d
  41a901:	mov    cr1,ebx
  41a904:	pop    es
  41a905:	sbb    eax,0x77a09e20
  41a90a:	lock stos BYTE PTR es:[edi],al
  41a90c:	xor    al,0x76
  41a90e:	adc    BYTE PTR [edi+0x6b],0x6d
  41a912:	dec    ebp
  41a913:	pop    edi
  41a914:	push   ds
  41a915:	mov    ebx,0xee2af99
  41a91a:	gs out 0x35,al
  41a91d:	enter  0xb6f3,0x36
  41a921:	inc    eax
  41a922:	xlat   BYTE PTR ds:[ebx]
  41a923:	push   es
  41a924:	jne    0x41a989
  41a926:	cmp    dh,cl
  41a928:	enter  0x5dd,0xb9
  41a92c:	sbb    ecx,DWORD PTR ds:0x14d90dab
  41a932:	xchg   ch,cl
  41a934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a935:	retf   
  41a936:	push   ss
  41a937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a938:	cs daa 
  41a93a:	mov    al,ds:0x3e576a29
  41a93f:	shl    bh,0xd
  41a942:	int    0x73
  41a944:	push   ebp
  41a945:	push   ebp
  41a946:	ret    
  41a947:	sar    BYTE PTR [ebx],cl
  41a949:	mov    BYTE PTR [ecx-0x542be03d],dl
  41a94f:	out    0x44,al
  41a951:	inc    edi
  41a952:	fdiv   QWORD PTR [edi]
  41a954:	lods   al,BYTE PTR ds:[esi]
  41a955:	dec    esi
  41a956:	xchg   esi,eax
  41a957:	jmp    0x70e0:0xe978fbd7
  41a95e:	retf   
  41a95f:	mov    bh,0x33
  41a961:	iret   
  41a962:	jmp    0x785e:0x9aff80f2
  41a969:	aam    0xcc
  41a96b:	lods   al,BYTE PTR ds:[esi]
  41a96c:	mov    bh,0xe9
  41a96e:	jmp    DWORD PTR [ecx]
  41a970:	pop    esi
  41a971:	xchg   esi,eax
  41a972:	pop    eax
  41a973:	jmp    0x8bbb:0xc07959a8
  41a97a:	xchg   BYTE PTR [edi-0x64],bh
  41a97d:	pop    esi
  41a97e:	push   eax
  41a97f:	or     al,0x80
  41a981:	sub    eax,0xc7462af6
  41a986:	stos   BYTE PTR es:[edi],al
  41a987:	sahf   
  41a988:	fdiv   QWORD PTR [esi]
  41a98a:	mov    ebx,0xb23fe7cd
  41a98f:	sub    al,BYTE PTR [ebx]
  41a991:	add    bh,BYTE PTR [esi+0x57f2d814]
  41a997:	adc    eax,DWORD PTR [esi+0x48]
  41a99a:	xchg   ebp,eax
  41a99b:	test   DWORD PTR [edi-0x3389cf3f],eax
  41a9a1:	cmp    dh,dl
  41a9a3:	int    0xe1
  41a9a5:	ss push edx
  41a9a7:	xchg   ebx,eax
  41a9a8:	or     ah,bl
  41a9aa:	dec    edi
  41a9ab:	push   ebp
  41a9ac:	rcl    DWORD PTR [edx-0x675c3ee7],1
  41a9b2:	test   DWORD PTR [edx+0x20],esi
  41a9b5:	scas   eax,DWORD PTR es:[edi]
  41a9b6:	or     cl,BYTE PTR [ecx]
  41a9b8:	pop    esi
  41a9b9:	jmp    0xdde9b545
  41a9be:	dec    esp
  41a9bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9c0:	xchg   edx,eax
  41a9c1:	fild   WORD PTR [esi+0x16fae13e]
  41a9c7:	jle    0x41aa2d
  41a9c9:	ret    
  41a9ca:	loopne 0x41a97b
  41a9cc:	add    ah,BYTE PTR [eax]
  41a9ce:	(bad)  
  41a9cf:	stc    
  41a9d0:	xchg   ebp,eax
  41a9d1:	sub    eax,0x5fb88dc4
  41a9d6:	aas    
  41a9d7:	jne    0x41a994
  41a9d9:	int3   
  41a9da:	mov    eax,0xf4dd0920
  41a9df:	mov    edi,0x7076f6e4
  41a9e4:	(bad)  
  41a9e5:	jle    0x41aa3a
  41a9e7:	push   cs
  41a9e8:	aas    
  41a9e9:	adc    al,0x54
  41a9eb:	jl     0x41a9f8
  41a9ed:	in     al,dx
  41a9ee:	arpl   di,sp
  41a9f0:	xor    DWORD PTR [ebp+0x6],0x12
  41a9f4:	pop    esp
  41a9f5:	sbb    al,0xd4
  41a9f7:	ja     0x41aa2c
  41a9f9:	sub    eax,0x947abe84
  41a9fe:	lds    ebx,FWORD PTR [esi]
  41aa00:	add    bh,al
  41aa02:	and    eax,0x2647fa60
  41aa07:	inc    esi
  41aa08:	dec    edx
  41aa09:	push   0x6b
  41aa0b:	cmp    BYTE PTR [esp+edx*2-0x3e],bh
  41aa0f:	inc    eax
  41aa10:	dec    ecx
  41aa11:	cdq    
  41aa12:	jge    0x41aa29
  41aa14:	xchg   edi,eax
  41aa15:	sbb    DWORD PTR [ecx-0x22e157c0],edi
  41aa1b:	jmp    0xbf5d8f46
  41aa20:	push   esi
  41aa21:	divps  xmm0,XMMWORD PTR [edi-0x5f]
  41aa25:	cmp    ebx,0x1cffd97a
  41aa2b:	inc    esp
  41aa2c:	and    BYTE PTR [edi-0x10],cl
  41aa2f:	pop    esi
  41aa30:	mov    bh,al
  41aa32:	add    cl,bl
  41aa34:	xor    al,0x4b
  41aa36:	pop    es
  41aa37:	fisttp DWORD PTR [edx+0x6f79b5db]
  41aa3d:	pop    edi
  41aa3e:	mov    esi,0xc9a55e79
  41aa43:	xchg   BYTE PTR [ecx+ecx*1+0x4fa894c3],cl
  41aa4a:	sbb    BYTE PTR [esi+esi*8-0x7e],bl
  41aa4e:	shr    BYTE PTR [edx],0x8e
  41aa51:	scas   al,BYTE PTR es:[edi]
  41aa52:	imul   esp,DWORD PTR [ebx],0xfb13fb66
  41aa58:	sub    al,0x8f
  41aa5a:	xor    esi,DWORD PTR [edx]
  41aa5c:	les    ebx,FWORD PTR [edx-0x1f]
  41aa5f:	imul   esi,DWORD PTR ds:0x827908a7,0x32
  41aa66:	or     al,BYTE PTR [esi]
  41aa68:	std    
  41aa69:	ss cwde 
  41aa6b:	scas   eax,DWORD PTR es:[edi]
  41aa6c:	out    dx,al
  41aa6d:	gs mov eax,0x65906b3
  41aa73:	sub    DWORD PTR [esi],eax
  41aa75:	sbb    DWORD PTR [edx],esp
  41aa77:	ret    0xcb7d
  41aa7a:	dec    ecx
  41aa7b:	or     DWORD PTR [eax],edx
  41aa7d:	cmp    eax,0xeaa21051
  41aa82:	push   edi
  41aa83:	sbb    edi,DWORD PTR [esi+0x4d]
  41aa86:	xor    eax,esi
  41aa88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa89:	push   0xffffffb5
  41aa8b:	test   BYTE PTR [edi-0x14],bh
  41aa8e:	out    dx,eax
  41aa8f:	xchg   ecx,eax
  41aa90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa91:	xchg   esp,eax
  41aa92:	out    0x33,al
  41aa94:	mov    al,ds:0xb2c48eb6
  41aa99:	js     0x41aa7d
  41aa9b:	inc    edi
  41aa9c:	or     eax,0xe799e8a0
  41aaa1:	or     BYTE PTR [esi+esi*8+0x6d],0x44
  41aaa6:	inc    ebp
  41aaa7:	inc    esp
  41aaa8:	and    DWORD PTR [esi+0x6bbb4993],edi
  41aaae:	in     eax,0x32
  41aab0:	out    0x40,eax
  41aab2:	gs retf 
  41aab4:	aas    
  41aab5:	ins    DWORD PTR es:[edi],dx
  41aab6:	test   BYTE PTR [ebp-0x517d39d3],bl
  41aabc:	adc    eax,0xdb0b29de
  41aac1:	imul   edi,DWORD PTR [eax+0x1f],0xfffffffa
  41aac5:	pop    ds
  41aac6:	xor    eax,0x53edd6f4
  41aacb:	xchg   edi,eax
  41aacc:	or     BYTE PTR [edx+0x3b02e51e],dl
  41aad2:	fwait
  41aad3:	dec    esp
  41aad4:	cdq    
  41aad5:	mov    ch,0xe9
  41aad7:	jecxz  0x41aacc
  41aad9:	jns    0x41aa9b
  41aadb:	or     eax,0xa02fe7a5
  41aae0:	(bad)  
  41aae1:	mov    ah,0x19
  41aae3:	mov    ebx,0x90a08686
  41aae8:	test   DWORD PTR [esi],ebp
  41aaea:	mov    esp,DWORD PTR [ebx]
  41aaec:	daa    
  41aaed:	(bad)  [edi+edi*4]
  41aaf0:	ret    0xb15
  41aaf3:	mov    edx,0xb8412200
  41aaf8:	ins    BYTE PTR es:[edi],dx
  41aaf9:	jecxz  0x41ab3e
  41aafb:	sbb    al,ch
  41aafd:	in     eax,0x3d
  41aaff:	add    ah,BYTE PTR gs:[ebx-0x74922d88]
  41ab06:	inc    eax
  41ab07:	jmp    0xe10c:0x65bef515
  41ab0e:	sub    DWORD PTR [edi+0x52850901],ebp
  41ab14:	call   0x907a8683
  41ab19:	pop    edx
  41ab1a:	test   DWORD PTR [eax-0xf],0xf14d5430
  41ab21:	mov    bh,0x5f
  41ab23:	mov    BYTE PTR [eax+ecx*4],bh
  41ab26:	adc    eax,0x73395b88
  41ab2b:	xchg   ebx,eax
  41ab2c:	(bad)  
  41ab2d:	or     dl,BYTE PTR [eax]
  41ab2f:	or     ecx,DWORD PTR [edx]
  41ab31:	lea    esi,[ebp+0x7f]
  41ab34:	and    DWORD PTR [edi-0x26],edx
  41ab37:	mov    esi,0x8334b252
  41ab3c:	int3   
  41ab3d:	xor    bl,ah
  41ab3f:	es dec esp
  41ab41:	push   ss
  41ab42:	adc    BYTE PTR [edx+0xd9b2481],al
  41ab48:	sbb    eax,0x43d8a95d
  41ab4d:	push   edi
  41ab4e:	aam    0xf4
  41ab50:	(bad)  
  41ab51:	stos   BYTE PTR es:[edi],al
  41ab52:	bound  ebx,QWORD PTR [ecx+0x7b]
  41ab55:	jae    0x41abad
  41ab57:	fwait
  41ab58:	jmp    0xc8c5169c
  41ab5d:	in     eax,dx
  41ab5e:	retf   0x5b50
  41ab61:	xchg   ebp,eax
  41ab62:	(bad)  
  41ab63:	jae    0x41abd1
  41ab65:	arpl   cx,bp
  41ab67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab68:	retf   
  41ab69:	fwait
  41ab6a:	int    0xe7
  41ab6c:	xlat   BYTE PTR ds:[ebx]
  41ab6e:	rcr    esi,0x31
  41ab71:	mov    BYTE PTR [ecx],bl
  41ab73:	fcmovnbe st,st(7)
  41ab75:	repz push ebp
  41ab77:	into   
  41ab78:	outs   dx,BYTE PTR ds:[esi]
  41ab79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab7a:	sbb    DWORD PTR [esi-0x295def27],eax
  41ab80:	fcomi  st,st(5)
  41ab82:	jnp    0x41aba6
  41ab84:	(bad)  
  41ab85:	jmp    0x61e0:0x4069677c
  41ab8c:	push   es
  41ab8d:	cli    
  41ab8e:	clc    
  41ab8f:	in     al,0xa4
  41ab91:	jle    0x41ab63
  41ab93:	pop    esi
  41ab94:	push   ebx
  41ab95:	popf   
  41ab96:	mov    edx,ecx
  41ab98:	mov    edx,0x8fce3205
  41ab9d:	mov    dl,0xff
  41ab9f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41aba1:	enter  0xaa19,0xf
  41aba5:	add    al,BYTE PTR [edx+0xb1d9337]
  41abab:	pusha  
  41abac:	outs   dx,DWORD PTR ds:[esi]
  41abad:	icebp  
  41abae:	sub    al,0xc
  41abb0:	push   0x541564bc
  41abb5:	xchg   edi,eax
  41abb6:	or     edx,esp
  41abb8:	(bad)  
  41abb9:	js     0x41ac1d
  41abbb:	inc    ebp
  41abbc:	lock mov eax,ds:0x1fd83b52
  41abc2:	cmp    eax,0xe5a9a9ea
  41abc7:	cmp    eax,0x263547d6
  41abcc:	lods   eax,DWORD PTR ds:[esi]
  41abcd:	mov    DWORD PTR fs:[ebx-0x14],ecx
  41abd1:	xor    dh,dh
  41abd3:	dec    esp
  41abd4:	xor    ecx,edi
  41abd6:	stos   BYTE PTR es:[edi],al
  41abd7:	scas   eax,DWORD PTR es:[edi]
  41abd8:	mov    edx,0x572e1587
  41abdd:	jg     0x41abcf
  41abdf:	loopne 0x41ac28
  41abe1:	cmp    DWORD PTR [ecx],esp
  41abe3:	mov    ss,edx
  41abe5:	out    dx,eax
  41abe6:	inc    esp
  41abe7:	stos   DWORD PTR es:[edi],eax
  41abe8:	in     eax,0xfb
  41abea:	iret   
  41abeb:	ds fwait
  41abed:	(bad)  
  41abee:	fimul  WORD PTR [esi+ecx*4]
  41abf1:	jmp    0x41ac64
  41abf3:	loop   0x41ab80
  41abf5:	les    ecx,FWORD PTR ds:0x1cca11b
  41abfb:	cwde   
  41abfc:	sbb    edx,DWORD PTR [esi-0x1e]
  41abff:	and    ch,BYTE PTR [ebx+0x1dff8736]
  41ac05:	cmp    DWORD PTR [ecx],esp
  41ac07:	mov    DWORD PTR [ebx-0x47b8088f],edx
  41ac0d:	outs   dx,DWORD PTR ds:[esi]
  41ac0e:	rep outs dx,BYTE PTR ds:[esi]
  41ac10:	iret   
  41ac11:	adc    eax,0x288f157f
  41ac16:	in     eax,0x12
  41ac18:	ret    
  41ac19:	cmc    
  41ac1a:	sub    DWORD PTR [edi+0x404f6e85],ebp
  41ac20:	repz ror DWORD PTR [eax+0x427b66f9],1
  41ac27:	cmp    eax,0x644c5ac7
  41ac2c:	jg     0x41abc9
  41ac2e:	add    BYTE PTR [edx],cl
  41ac30:	das    
  41ac31:	call   FWORD PTR [edi+eiz*8]
  41ac34:	xor    DWORD PTR [esi+0x5e],0xffffffa8
  41ac38:	das    
  41ac39:	fisttp DWORD PTR [edx+0x73443c31]
  41ac3f:	pop    ecx
  41ac40:	stos   BYTE PTR es:[edi],al
  41ac41:	fisttp QWORD PTR [eax-0x27cfb376]
  41ac47:	(bad)  
  41ac48:	fbld   TBYTE PTR [esi+0x4c]
  41ac4b:	jge    0x41ac75
  41ac4d:	out    dx,al
  41ac4e:	adc    DWORD PTR [eax-0x3a],0x56
  41ac52:	out    0x2e,eax
  41ac54:	int    0xc
  41ac56:	sbb    ebp,eax
  41ac58:	adc    eax,0xd2f8e579
  41ac5d:	std    
  41ac5e:	nop
  41ac5f:	(bad)  
  41ac61:	jp     0x41ac61
  41ac63:	daa    
  41ac64:	push   cs
  41ac65:	icebp  
  41ac66:	rcr    DWORD PTR [edi+0x43],0x92
  41ac6a:	(bad)  
  41ac6b:	sbb    bh,BYTE PTR ds:[edi-0xad9be8e]
  41ac72:	int3   
  41ac73:	jo     0x41acca
  41ac75:	add    ch,BYTE PTR [eax+edi*4-0x4]
  41ac79:	mov    bh,0x17
  41ac7b:	and    DWORD PTR [edx+ecx*8+0x6f2c19d7],ecx
  41ac82:	test   eax,0x7f88854a
  41ac87:	adc    al,0xd9
  41ac89:	inc    edx
  41ac8a:	data16 js 0x41ac9c
  41ac8d:	data16 arpl di,si
  41ac90:	mov    esi,0x972f5aac
  41ac95:	dec    ecx
  41ac96:	inc    eax
  41ac97:	adc    bh,BYTE PTR [edx-0x2a]
  41ac9a:	popa   
  41ac9b:	sub    cl,cl
  41ac9d:	jge    0x41ac48
  41ac9f:	fwait
  41aca0:	loope  0x41ad0b
  41aca2:	and    esi,DWORD PTR [edi+0x7a]
  41aca5:	aas    
  41aca6:	or     DWORD PTR [eax+0x123cb9d3],0x4bb51c9f
  41acb0:	and    edx,DWORD PTR [ebx]
  41acb2:	mov    eax,ds:0x4f97b5b9
  41acb7:	push   edi
  41acb8:	shl    DWORD PTR [edx],1
  41acba:	xchg   edx,eax
  41acbb:	(bad)  
  41acbd:	cmp    BYTE PTR [ecx],al
  41acbf:	scas   al,BYTE PTR es:[edi]
  41acc0:	pushf  
  41acc1:	mov    ch,BYTE PTR [esi+ebx*4+0x3]
  41acc5:	cdq    
  41acc6:	pop    ds
  41acc7:	daa    
  41acc8:	xchg   BYTE PTR [ecx+edx*4+0x43],ah
  41accc:	int    0xc0
  41acce:	push   cs
  41accf:	jne    0x41ac68
  41acd1:	outs   dx,BYTE PTR ds:[esi]
  41acd2:	pop    ebp
  41acd3:	sbb    eax,0xccc6aac5
  41acd8:	lahf   
  41acd9:	adc    ebp,0x4a
  41acdc:	jne    0x41ad10
  41acde:	aad    0x97
  41ace0:	mov    edx,0x7436a930
  41ace5:	jmp    0x5a222362
  41acea:	ret    
  41aceb:	mov    esp,DWORD PTR [ebp-0x49d95dc9]
  41acf1:	mov    ch,0x28
  41acf3:	imul   BYTE PTR [esi]
  41acf5:	or     BYTE PTR [ebp-0x30],ch
  41acf8:	mov    edx,0xe454d793
  41acfd:	or     ch,BYTE PTR [eax-0x3fbfba64]
  41ad03:	pop    ss
  41ad04:	es (bad) 
  41ad06:	ins    DWORD PTR es:[edi],dx
  41ad07:	repnz stos BYTE PTR es:[edi],al
  41ad09:	aas    
  41ad0a:	cmp    BYTE PTR [eax+0x9ec0736],dh
  41ad10:	pop    eax
  41ad11:	xchg   DWORD PTR [eax],eax
  41ad13:	sbb    dh,BYTE PTR [esi-0x53]
  41ad16:	jge    0x41acf3
  41ad18:	out    0xeb,al
  41ad1a:	sbb    DWORD PTR [ecx+0x0],0xffffffa2
  41ad1e:	bound  edx,QWORD PTR [edi-0x59db837a]
  41ad24:	jo     0x41ad11
  41ad26:	push   edi
  41ad27:	sub    ah,ah
  41ad29:	shl    BYTE PTR [ebp+0x2f],1
  41ad2c:	scas   eax,DWORD PTR es:[edi]
  41ad2d:	push   esp
  41ad2e:	xor    eax,0x2c19e960
  41ad33:	mov    ah,0xe0
  41ad35:	fld    DWORD PTR [esi-0x27881]
  41ad3b:	xor    al,0x7e
  41ad3d:	ret    
  41ad3e:	or     esi,DWORD PTR [edx]
  41ad40:	push   cs
  41ad41:	in     eax,dx
  41ad42:	outs   dx,BYTE PTR ds:[esi]
  41ad43:	push   esi
  41ad44:	xchg   ecx,eax
  41ad45:	ins    BYTE PTR es:[edi],dx
  41ad46:	nop
  41ad47:	loop   0x41ad3a
  41ad49:	je     0x41ad8e
  41ad4b:	fst    DWORD PTR fs:[edi]
  41ad4e:	scas   al,BYTE PTR es:[edi]
  41ad4f:	rcl    DWORD PTR ds:0x9b57,1
  41ad54:	ret    
  41ad55:	cmp    eax,0xb6149b13
  41ad5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad5b:	push   ss
  41ad5c:	pusha  
  41ad5d:	sub    ch,bl
  41ad5f:	lods   al,BYTE PTR ds:[esi]
  41ad60:	aaa    
  41ad61:	xor    eax,0x1f8c245f
  41ad66:	xor    DWORD PTR [edx+0x541d1c04],0x7e
  41ad6d:	push   esp
  41ad6e:	arpl   di,bp
  41ad70:	nop
  41ad71:	mov    al,ds:0x4f11233f
  41ad76:	push   edx
  41ad77:	dec    edi
  41ad78:	add    dh,BYTE PTR [edx+0x4a]
  41ad7b:	sbb    al,0x28
  41ad7d:	jcxz   0x41adaf
  41ad80:	mov    edi,0x788dc7af
  41ad85:	pmullw mm2,mm4
  41ad88:	pop    ecx
  41ad89:	pop    ebp
  41ad8a:	pop    edi
  41ad8b:	nop
  41ad8c:	jno    0x41adcc
  41ad8e:	in     eax,dx
  41ad8f:	push   esi
  41ad90:	xor    al,0xdb
  41ad92:	sbb    DWORD PTR [edx+0x500e5bc9],0x16
  41ad99:	push   edx
  41ad9a:	int    0x81
  41ad9c:	lahf   
  41ad9d:	cs pop ebx
  41ad9f:	icebp  
  41ada0:	scas   al,BYTE PTR es:[edi]
  41ada1:	mov    ebx,0x73e8c707
  41ada6:	push   esp
  41ada7:	jp     0x41ae19
  41ada9:	push   0x372e1024
  41adae:	push   0x63
  41adb0:	inc    esp
  41adb1:	mov    edi,ebx
  41adb3:	add    DWORD PTR [edi+ebx*8],esi
  41adb6:	nop
  41adb7:	test   BYTE PTR [edi],bl
  41adb9:	call   0x5a64a83e
  41adbe:	push   es
  41adbf:	push   ebx
  41adc0:	jl     0x41ae40
  41adc2:	dec    eax
  41adc3:	mov    eax,es
  41adc5:	dec    ebx
  41adc6:	xchg   esi,eax
  41adc7:	popw   ds
  41adc9:	pminsw mm2,QWORD PTR [ecx-0x60]
  41adcd:	retf   0x6140
  41add0:	loop   0x41ad57
  41add2:	out    dx,eax
  41add3:	inc    esp
  41add4:	mov    edi,0x61d2589c
  41add9:	js     0x41adf8
  41addb:	jae    0x38c5d4a9
  41ade1:	dec    esp
  41ade2:	stc    
  41ade3:	ins    DWORD PTR es:[edi],dx
  41ade4:	ds stc 
  41ade6:	aad    0xfc
  41ade8:	out    0xb2,al
  41adea:	jnp    0x41ae28
  41adec:	jns    0x41ae34
  41adee:	or     ebp,DWORD PTR [edx+0x560307ca]
  41adf4:	outs   dx,BYTE PTR ds:[esi]
  41adf5:	out    dx,al
  41adf6:	ret    0xd76e
  41adf9:	add    edi,edx
  41adfb:	cdq    
  41adfc:	in     eax,0x46
  41adfe:	fcomp  DWORD PTR [edx-0x3e]
  41ae01:	int3   
  41ae02:	dec    ebp
  41ae03:	xor    al,0x58
  41ae05:	or     BYTE PTR [ebp-0x53],dh
  41ae08:	cmp    eax,0x3aca2ec
  41ae0d:	rol    BYTE PTR [ebx-0x3adacf68],cl
  41ae13:	dec    esp
  41ae14:	push   edi
  41ae15:	sub    BYTE PTR [ebp-0x1b],ch
  41ae18:	pop    esp
  41ae19:	outs   dx,BYTE PTR ds:[esi]
  41ae1a:	xchg   esi,eax
  41ae1b:	xchg   edx,eax
  41ae1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae1d:	mov    dh,0x56
  41ae1f:	push   es
  41ae20:	loopne 0x41adb9
  41ae22:	jns    0x41ae42
  41ae24:	push   ds
  41ae25:	dec    eax
  41ae26:	dec    esi
  41ae28:	es xchg edi,eax
  41ae2a:	(bad)  
  41ae2b:	jmp    0x6cc8:0x4ed5ad65
  41ae32:	inc    edi
  41ae33:	push   esp
  41ae34:	sbb    al,0xfe
  41ae36:	ret    0xb88a
  41ae39:	and    dl,BYTE PTR [edi+eiz*2+0x64]
  41ae3d:	test   al,0x15
  41ae3f:	or     DWORD PTR [ecx+0x6a],esp
  41ae42:	(bad)  
  41ae43:	push   cs
  41ae44:	idiv   BYTE PTR [eax]
  41ae46:	sar    DWORD PTR [eax],1
  41ae48:	call   0x820197a2
  41ae4d:	add    BYTE PTR [edi+0x2a],ch
  41ae50:	sar    DWORD PTR [edx],1
  41ae52:	ins    DWORD PTR es:[edi],dx
  41ae53:	test   DWORD PTR [ecx+ebp*8-0x5d],esp
  41ae57:	pushf  
  41ae58:	push   ss
  41ae59:	mov    esp,0xa1b589f8
  41ae5e:	shl    DWORD PTR [ebx+0x1b4c0138],cl
  41ae64:	imul   BYTE PTR [edi+0x1c121192]
  41ae6a:	lods   eax,DWORD PTR ds:[esi]
  41ae6b:	imul   ecx,DWORD PTR [ebp-0x6b69cb2a],0xffffffa1
  41ae72:	outs   dx,DWORD PTR ds:[esi]
  41ae73:	push   ecx
  41ae74:	push   ds
  41ae75:	nop
  41ae76:	jecxz  0x41aeda
  41ae78:	cmp    BYTE PTR [esi],dh
  41ae7a:	pop    edi
  41ae7b:	out    0x39,al
  41ae7d:	(bad)  
  41ae7e:	ins    BYTE PTR es:[edi],dx
  41ae7f:	mov    edx,0x3434097
  41ae84:	fmul   st(0),st
  41ae86:	and    ch,cl
  41ae88:	mov    BYTE PTR [edi-0x42],al
  41ae8b:	shl    BYTE PTR [edi-0x72],1
  41ae8e:	push   es
  41ae8f:	sbb    dh,BYTE PTR [edi]
  41ae91:	in     eax,0x29
  41ae93:	push   ebp
  41ae94:	mov    bh,0xe2
  41ae96:	or     bl,BYTE PTR [ebp-0x283e8c56]
  41ae9c:	shr    DWORD PTR [ecx+0x56],1
  41ae9f:	retf   0xbdb1
  41aea2:	or     al,0x1e
  41aea5:	test   al,0x84
  41aea7:	sbb    DWORD PTR [esi+ebp*4+0x67],edi
  41aeab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeac:	dec    esp
  41aead:	mov    al,0xf3
  41aeaf:	mov    dl,0x65
  41aeb1:	or     eax,ecx
  41aeb3:	xchg   BYTE PTR [ebx],bl
  41aeb5:	add    DWORD PTR [esi],edx
  41aeb7:	push   eax
  41aeb8:	mov    edi,esi
  41aeba:	shr    DWORD PTR [ecx],0x98
  41aebd:	jno    0x41aeea
  41aebf:	xor    BYTE PTR [edi+0x7d69aaa1],cl
  41aec5:	arpl   WORD PTR [edx],bx
  41aec7:	dec    esp
  41aec8:	mov    eax,0x6ea5acbe
  41aecd:	ja     0x41ae64
  41aecf:	lods   al,BYTE PTR ds:[esi]
  41aed0:	je     0x41ae90
  41aed2:	mov    esi,fs
  41aed4:	jb     0x41af30
  41aed6:	dec    ebp
  41aed7:	xchg   ebx,eax
  41aed8:	mov    ecx,gs
  41aeda:	pop    ds
  41aedb:	mov    ebp,0x238a7aa0
  41aee0:	mov    WORD PTR [edx],?
  41aee2:	pop    esi
  41aee3:	dec    ebx
  41aee4:	jle    0x41ae9c
  41aee6:	nop
  41aee7:	mov    ds:0x7a1f613,al
  41aeec:	or     al,0x52
  41aeee:	xlat   BYTE PTR ds:[ebx]
  41aeef:	mov    esi,0x4f1dc4f3
  41aef4:	or     BYTE PTR [ebp-0x3f681533],0x77
  41aefb:	mov    al,ds:0xddfd72bf
  41af00:	(bad)  
  41af02:	stc    
  41af03:	mov    edi,0x39bd46d
  41af08:	lea    edx,[ecx+0x1cbe1e47]
  41af0e:	jo     0x41af46
  41af10:	jmp    0xb701:0x4a1b1a84
  41af17:	add    edi,DWORD PTR [ebx+0x17dc481]
  41af1d:	add    eax,0x1f0e318d
  41af22:	mov    bh,0xd5
  41af24:	es sub ebx,eax
  41af27:	imul   esi,DWORD PTR [edx+0x707e3e84],0x4d
  41af2e:	mov    bl,0xd2
  41af30:	mov    edx,0xbfe11615
  41af35:	pop    ecx
  41af36:	sub    bh,ch
  41af38:	aad    0x2c
  41af3a:	bound  ebx,QWORD PTR [edx]
  41af3c:	jmp    0xb27f:0x885b0c11
  41af43:	push   esi
  41af44:	sbb    al,0x44
  41af46:	or     al,0xf9
  41af48:	jmp    0x4579:0x513f7a15
  41af4f:	mov    esp,0x4ab002bb
  41af54:	dec    esi
  41af55:	xchg   edx,ebx
  41af57:	push   ds
  41af58:	ja     0x41afd2
  41af5a:	(bad)  
  41af5b:	sub    BYTE PTR [ecx],0xd4
  41af5e:	mov    dl,0x5f
  41af60:	pop    eax
  41af61:	jne    0x41af3b
  41af63:	cmp    edx,edi
  41af65:	dec    ebx
  41af66:	or     al,0x1a
  41af68:	cmp    al,0x54
  41af6a:	int3   
  41af6b:	pop    edi
  41af6c:	pop    edx
  41af6d:	sub    BYTE PTR [ebx+0x1b8f0968],ah
  41af73:	inc    eax
  41af74:	in     eax,dx
  41af75:	jg     0x41af89
  41af77:	add    BYTE PTR [ecx+esi*1+0x17412f3f],dh
  41af7e:	int    0xe1
  41af80:	stos   BYTE PTR es:[edi],al
  41af81:	push   esp
  41af82:	jp     0x41afd7
  41af84:	data16 fs jne 0x41afe3
  41af88:	dec    ebx
  41af89:	mov    esp,ds
  41af8b:	(bad)  ss:[ebx+0x13]
  41af8f:	inc    edi
  41af90:	cmp    eax,0xb1eb4bab
  41af95:	lods   al,BYTE PTR ds:[esi]
  41af96:	mov    DWORD PTR [edi],edi
  41af98:	repnz arpl sp,ax
  41af9b:	pop    esi
  41af9c:	cld    
  41af9d:	data16 mov ds:0xf305765d,al
  41afa3:	push   esi
  41afa4:	push   eax
  41afa5:	test   al,0xa0
  41afa7:	adc    edi,esp
  41afa9:	inc    esp
  41afaa:	jae    0x41afc6
  41afac:	cmp    BYTE PTR [eax],ch
  41afae:	scas   al,BYTE PTR es:[edi]
  41afaf:	and    ecx,DWORD PTR [edi-0x49a0f2be]
  41afb5:	sbb    bh,BYTE PTR [ebx+0x59]
  41afb8:	ss ror edi,0xc2
  41afbc:	dec    eax
  41afbd:	pop    ds
  41afbe:	cmp    bh,BYTE PTR [ebx]
  41afc0:	mov    dl,bl
  41afc2:	push   edi
  41afc3:	enter  0x364d,0x28
  41afc7:	lds    edi,FWORD PTR [esi+edi*1-0x46c0066c]
  41afce:	sbb    DWORD PTR [ebx],0xfffffffb
  41afd1:	fld    QWORD PTR [ebx]
  41afd3:	xor    DWORD PTR [esi+0x3c],edi
  41afd6:	xlat   BYTE PTR ds:[ebx]
  41afd7:	and    eax,0x431052b3
  41afdc:	jp     0x41b02f
  41afde:	(bad)  [edx+ebp*1-0x1]
  41afe2:	stc    
  41afe3:	and    eax,0x5eae7795
  41afe8:	cli    
  41afe9:	mov    ah,0x4c
  41afeb:	jp     0x41afdd
  41afed:	ret    0xf090
  41aff0:	sub    al,BYTE PTR [ecx-0x48cde455]
  41aff6:	mov    ah,0x1c
  41aff8:	push   ds
  41aff9:	cmp    al,0x37
  41affb:	sbb    eax,edi
  41affd:	jp     0x41afc3
  41afff:	mov    ebp,?
  41b001:	jp     0x41afca
  41b003:	aad    0x7f
  41b005:	push   0x3d
  41b007:	div    DWORD PTR [esp+ebx*8-0x19]
  41b00b:	fistp  QWORD PTR [edi-0x5b]
  41b00e:	mov    ebx,0xaaf68e1a
  41b013:	push   ds
  41b014:	stc    
  41b015:	cmp    dh,BYTE PTR [eax]
  41b017:	xor    eax,0x1cc645c5
  41b01c:	addr16 push cs
  41b01e:	jns    0x41b08f
  41b020:	or     DWORD PTR [ebx-0x57],0x7b
  41b024:	test   eax,0x1d6658f9
  41b029:	adc    al,0x31
  41b02b:	jo     0x41b00b
  41b02d:	retf   
  41b02e:	mov    ebp,0x259b8546
  41b033:	in     eax,dx
  41b034:	stos   DWORD PTR es:[edi],eax
  41b035:	sbb    BYTE PTR [esi+0x43],cl
  41b038:	mov    WORD PTR [ebp-0xf7c93a3],fs
  41b03e:	in     eax,dx
  41b03f:	lods   al,BYTE PTR ds:[esi]
  41b040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b041:	mov    ch,0x98
  41b043:	sub    eax,0x65353c4b
  41b048:	mov    ss,WORD PTR [ebx+0x34]
  41b04b:	ret    0x3398
  41b04e:	inc    eax
  41b04f:	mov    al,0xb3
  41b051:	retf   
  41b052:	inc    edi
  41b053:	xchg   edx,eax
  41b054:	dec    edi
  41b055:	jge    0x41b074
  41b057:	fnstenv [ebx]
  41b059:	mov    ebp,0xd441cf43
  41b05e:	out    0xf5,eax
  41b060:	ins    BYTE PTR es:[edi],dx
  41b061:	imul   esi,DWORD PTR [eax+0x6b60e40a],0x11
  41b068:	cs mov ecx,0x1e092af9
  41b06e:	fistp  QWORD PTR [edx-0x7a]
  41b071:	adc    al,0x47
  41b073:	mov    edx,DWORD PTR ds:0xb1c30856
  41b079:	mov    edi,0x71c1a50d
  41b07e:	(bad)  
  41b07f:	mov    al,0xc1
  41b081:	sub    dl,BYTE PTR [ebx-0x74794994]
  41b087:	jmp    0x214b:0x42c33206
  41b08e:	or     eax,0x5672c9fd
  41b093:	rol    BYTE PTR [eax+0x65],1
  41b096:	sub    ah,BYTE PTR [ebx]
  41b098:	adc    ch,cl
  41b09a:	mov    dh,0xef
  41b09c:	int3   
  41b09d:	mov    ah,0xfc
  41b09f:	xor    DWORD PTR [eax-0x1f],ebx
  41b0a2:	aad    0xc
  41b0a4:	add    edi,DWORD PTR [ebx-0x4fdc21cd]
  41b0aa:	adc    al,0xd7
  41b0ac:	lds    ecx,FWORD PTR [ebp+0x76971add]
  41b0b2:	or     DWORD PTR [ecx+0x5e],esp
  41b0b5:	adc    eax,0x2493b0b7
  41b0ba:	add    esp,ebp
  41b0bc:	call   0x5b906a37
  41b0c1:	dec    ebx
  41b0c2:	sbb    ch,al
  41b0c4:	aas    
  41b0c5:	mov    ah,0x8c
  41b0c7:	lods   eax,DWORD PTR ds:[esi]
  41b0c8:	mov    ebx,DWORD PTR [ecx+0x17]
  41b0cb:	xor    edi,edi
  41b0cd:	and    eax,edi
  41b0cf:	call   0xd671b4cb
  41b0d4:	xchg   DWORD PTR [ecx],esp
  41b0d6:	xor    al,0xa3
  41b0d8:	mov    eax,0x7f793295
  41b0dd:	test   bl,bh
  41b0df:	rcr    DWORD PTR [eax-0x5609f264],0x8a
  41b0e6:	leave  
  41b0e7:	mov    esi,0x499f0066
  41b0ec:	loope  0x41b159
  41b0ee:	cmp    dl,BYTE PTR [ecx-0x1e]
  41b0f1:	popf   
  41b0f2:	cs gs inc ebx
  41b0f5:	dec    edi
  41b0f6:	and    ecx,DWORD PTR [esi]
  41b0f8:	sbb    ch,BYTE PTR [eax-0x5d7d45e2]
  41b0fe:	add    bh,al
  41b100:	ror    DWORD PTR [edx+edx*4],0xbd
  41b104:	nop
  41b105:	rcr    DWORD PTR [edi],0x43
  41b108:	ins    BYTE PTR es:[edi],dx
  41b109:	hlt    
  41b10a:	sbb    dh,BYTE PTR [edx-0x26]
  41b10d:	enter  0x3119,0xca
  41b111:	out    dx,al
  41b112:	adc    al,0x36
  41b114:	mov    ebx,0xaa2e80b3
  41b119:	xchg   ebx,eax
  41b11a:	and    BYTE PTR [edi-0x1e],bl
  41b11d:	xchg   esi,eax
  41b11e:	je     0x41b190
  41b120:	sub    DWORD PTR [ebp-0x6ec6a4d5],0x67
  41b127:	xor    eax,0x444d789b
  41b12c:	(bad)  [ebx+ecx*1-0x50ee705e]
  41b133:	pushf  
  41b134:	mov    eax,ebx
  41b136:	jmp    0xba5e:0x671c4c09
  41b13d:	ins    DWORD PTR es:[edi],dx
  41b13e:	xchg   edx,eax
  41b13f:	add    al,0xce
  41b141:	mov    eax,0x863f9f05
  41b146:	pushf  
  41b147:	and    dh,BYTE PTR [edx-0x5a22d8fc]
  41b14d:	jmp    0x3bdb:0x80b971a
  41b154:	test   al,0x6e
  41b156:	inc    esp
  41b157:	adc    DWORD PTR ds:0x553a726e,ecx
  41b15d:	mov    bl,BYTE PTR [edi-0x72]
  41b160:	mov    eax,ds:0x3bfbbb41
  41b165:	mov    cs,WORD PTR [ebp+0x6dfcabd6]
  41b16b:	retf   
  41b16c:	pop    edx
  41b16d:	mov    ch,0x72
  41b16f:	aam    0xc2
  41b171:	test   BYTE PTR [esi+0x20],ch
  41b174:	push   esp
  41b175:	fwait
  41b176:	mov    al,0xd6
  41b178:	adc    edx,DWORD PTR [edx-0x11b79b1d]
  41b17e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b17f:	aad    0x7c
  41b181:	push   esi
  41b182:	push   ds
  41b183:	and    ebx,DWORD PTR [eax-0x339325ac]
  41b189:	popa   
  41b18a:	adc    ebx,edi
  41b18c:	jb     0x41b173
  41b18e:	call   0x23fc:0xde9a9c28
  41b195:	pop    ebp
  41b196:	(bad)  
  41b197:	in     eax,dx
  41b198:	cmp    BYTE PTR [edi-0x27],dh
  41b19b:	fadd   QWORD PTR [edx]
  41b19d:	mov    eax,ds:0x6c6c3bf6
  41b1a2:	outs   dx,DWORD PTR ds:[esi]
  41b1a3:	push   ecx
  41b1a4:	xor    BYTE PTR [ecx-0x45],dl
  41b1a7:	sti    
  41b1a8:	cld    
  41b1a9:	lahf   
  41b1aa:	in     al,dx
  41b1ab:	fstp   TBYTE PTR [esi]
  41b1ad:	push   cs
  41b1ae:	mov    bh,0xc0
  41b1b0:	inc    ebp
  41b1b1:	mov    ah,0xf4
  41b1b3:	in     al,0x0
  41b1b5:	ins    BYTE PTR es:[edi],dx
  41b1b6:	dec    ebx
  41b1b7:	gs adc al,0x8d
  41b1ba:	cmc    
  41b1bb:	push   esp
  41b1bc:	xchg   ecx,eax
  41b1bd:	cmp    dh,ch
  41b1bf:	data16 xor BYTE PTR [esi-0x2b],bl
  41b1c3:	(bad)  
  41b1c4:	inc    ebx
  41b1c5:	dec    eax
  41b1c6:	and    ebp,DWORD PTR [edi-0x52]
  41b1c9:	and    bl,BYTE PTR [edx-0x54459e47]
  41b1cf:	aas    
  41b1d0:	mov    dl,0x3d
  41b1d2:	xchg   edi,eax
  41b1d3:	push   ebp
  41b1d4:	jmp    0x41b1c8
  41b1d6:	or     eax,0x483dd10b
  41b1db:	pushf  
  41b1dc:	es int3 
  41b1de:	jmp    0x41b16e
  41b1e0:	mov    ds:0xd43bb6fa,al
  41b1e5:	dec    edx
  41b1e6:	cmp    BYTE PTR [ebp-0x1610f9df],bl
  41b1ec:	sbb    DWORD PTR [eax],esi
  41b1ee:	mov    ah,0xa2
  41b1f0:	push   edi
  41b1f1:	pop    edi
  41b1f2:	inc    ebx
  41b1f3:	dec    esi
  41b1f4:	dec    eax
  41b1f5:	xchg   ebp,eax
  41b1f6:	jmp    0x34829a73
  41b1fb:	inc    esp
  41b1fc:	out    0xc0,eax
  41b1fe:	push   edx
  41b1ff:	fwait
  41b200:	in     eax,0xed
  41b202:	je     0x41b1af
  41b204:	add    eax,0xc09cb5cf
  41b209:	mov    edx,ebp
  41b20b:	test   BYTE PTR [ecx-0x624d28b9],bl
  41b211:	jmp    0x22ef:0x97c2f786
  41b218:	popa   
  41b219:	out    0x71,eax
  41b21b:	mov    BYTE PTR [edx],cl
  41b21d:	in     al,dx
  41b21e:	xchg   al,al
  41b220:	push   ss
  41b221:	add    eax,DWORD PTR [eax]
  41b223:	or     BYTE PTR [edi+edi*2-0x62a7bd4a],0x83
  41b22b:	cmp    eax,0x58b889ca
  41b230:	call   0x31ab:0x6ba9075b
  41b237:	add    edx,ebp
  41b239:	add    ch,ah
  41b23b:	mov    ch,ch
  41b23d:	cwde   
  41b23e:	jmp    0x80f5edc7
  41b243:	icebp  
  41b244:	scas   al,BYTE PTR es:[edi]
  41b245:	xchg   edi,eax
  41b246:	xor    DWORD PTR [eax-0x261bcac9],ecx
  41b24c:	lahf   
  41b24d:	(bad)
  41b250:	adc    eax,0x61bb7b50
  41b255:	ins    BYTE PTR es:[edi],dx
  41b256:	out    0x2a,eax
  41b258:	mov    ch,0x1a
  41b25a:	mov    dl,0x5
  41b25c:	pop    esi
  41b25d:	pop    ds
  41b25e:	mov    ch,0x20
  41b260:	test   al,0x44
  41b262:	push   eax
  41b263:	in     eax,dx
  41b264:	jl     0x41b2d8
  41b266:	dec    edx
  41b267:	dec    ecx
  41b268:	xchg   esi,eax
  41b269:	dec    edi
  41b26a:	jbe    0x41b2da
  41b26c:	mov    WORD PTR [ebx-0x46],fs
  41b26f:	adc    al,0x51
  41b271:	cld    
  41b272:	out    0x7d,eax
  41b274:	mov    eax,ds:0x25fa80e9
  41b279:	jmp    FWORD PTR [edi-0x4c12fc93]
  41b27f:	jo     0x41b20d
  41b281:	pop    ds
  41b282:	and    BYTE PTR [ecx],dh
  41b284:	xchg   ecx,eax
  41b285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b286:	jp     0x41b25c
  41b288:	dec    ebp
  41b289:	scas   al,BYTE PTR es:[edi]
  41b28a:	mov    WORD PTR [edx+eax*4+0x4a36ef7d],ss
  41b291:	(bad)  
  41b292:	mov    ebx,0x246c2aee
  41b297:	sti    
  41b298:	in     al,dx
  41b299:	push   cs
  41b29a:	sti    
  41b29b:	es pop ds
  41b29d:	mov    ah,0xd2
  41b29f:	push   eax
  41b2a0:	fnstcw WORD PTR [ecx]
  41b2a2:	faddp  st(2),st
  41b2a4:	or     esp,esi
  41b2a6:	lds    edx,FWORD PTR [ecx+ebx*2+0x3f]
  41b2aa:	dec    ebp
  41b2ab:	jmp    0xd418b420
  41b2b0:	jne    0x41b2dc
  41b2b2:	and    al,0x24
  41b2b4:	adc    DWORD PTR [ebp+0x20],esp
  41b2b7:	(bad)  
  41b2b8:	ficomp WORD PTR [eax+0x69]
  41b2bb:	sbb    eax,0x25cc0eb9
  41b2c0:	cld    
  41b2c1:	pop    ds
  41b2c2:	mov    eax,ds:0xc64f696e
  41b2c7:	retf   0xf644
  41b2ca:	inc    ecx
  41b2cb:	aad    0xbd
  41b2cd:	cmp    edi,ebp
  41b2cf:	dec    esp
  41b2d0:	mov    eax,0x47fc01cb
  41b2d5:	pop    ebx
  41b2d6:	mov    WORD PTR [ebx+0x7],ss
  41b2d9:	sbb    esi,ebp
  41b2db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2dc:	es mov cl,dl
  41b2df:	pop    esi
  41b2e0:	nop
  41b2e1:	(bad)  
  41b2e2:	or     al,0xf6
  41b2e4:	(bad)  
  41b2e6:	xchg   edx,eax
  41b2e7:	jns    0x41b270
  41b2e9:	outs   dx,BYTE PTR ds:[esi]
  41b2ea:	dec    ecx
  41b2eb:	add    al,0xaf
  41b2ed:	mov    eax,ds:0x16e694ad
  41b2f2:	mov    ah,BYTE PTR [esi]
  41b2f4:	fsubr  DWORD PTR [edi]
  41b2f6:	add    BYTE PTR [edx],bh
  41b2f8:	imul   eax,DWORD PTR [ecx+ecx*8-0x4a],0xffffff85
  41b2fd:	mov    bl,0xb5
  41b2ff:	xor    cl,BYTE PTR [ecx]
  41b301:	rol    BYTE PTR [edi-0x41],0xe8
  41b305:	pop    esi
  41b306:	call   0x5248:0x1f9728aa
  41b30d:	repnz imul ebp,DWORD PTR [eax-0x7c6f8707],0xd
  41b315:	pop    ss
  41b316:	sbb    DWORD PTR [eax],edx
  41b318:	in     al,dx
  41b319:	inc    ebx
  41b31a:	stos   BYTE PTR es:[edi],al
  41b31b:	cmovns esi,DWORD PTR [edi-0x5ba6a5d]
  41b322:	inc    esp
  41b323:	push   ds
  41b324:	fs adc al,0xac
  41b327:	sub    eax,0x2c082390
  41b32c:	rcr    edi,cl
  41b32e:	aam    0x53
  41b330:	outs   dx,DWORD PTR ds:[esi]
  41b331:	xchg   ecx,eax
  41b332:	jg     0x41b336
  41b334:	and    DWORD PTR [eax-0x3a82cf5],0xffffffcf
  41b33b:	leave  
  41b33c:	inc    ebx
  41b33d:	mov    ebp,0xb789a11a
  41b342:	xlat   BYTE PTR ds:[ebx]
  41b343:	test   ebx,0x2c74d59f
  41b349:	aas    
  41b34a:	dec    edx
  41b34b:	push   edi
  41b34c:	dec    edi
  41b34d:	fsub   DWORD PTR [esi+0x49969eda]
  41b353:	stos   BYTE PTR es:[edi],al
  41b354:	cdq    
  41b355:	mov    dh,bl
  41b357:	cmp    edi,edi
  41b359:	mov    ebp,0xfe8cf35d
  41b35e:	jbe    0x41b3c5
  41b360:	neg    DWORD PTR [eax]
  41b362:	cmp    al,0x5c
  41b364:	mov    bl,0xa3
  41b366:	mov    ebx,0x387456c5
  41b36b:	push   0xbaa3a106
  41b370:	cmp    eax,0xbfc635e8
  41b375:	call   0x23c94fb8
  41b37a:	(bad)  
  41b37b:	shl    DWORD PTR [edi],cl
  41b37d:	or     ecx,eax
  41b37f:	retf   
  41b380:	ror    eax,0xf9
  41b383:	mov    al,ds:0x5bb982da
  41b388:	mov    eax,ds:0x889746a2
  41b38d:	mov    esi,0x2f5bfdd4
  41b392:	xchg   edx,eax
  41b393:	sub    eax,0xa0ba3627
  41b398:	inc    ebx
  41b399:	lahf   
  41b39a:	dec    edx
  41b39b:	(bad)  
  41b39c:	shl    ecx,cl
  41b39e:	ins    BYTE PTR es:[edi],dx
  41b39f:	test   BYTE PTR [ecx],bh
  41b3a1:	jge    0x41b342
  41b3a3:	cmp    BYTE PTR [ebp-0x27ad45c6],0xcf
  41b3aa:	mov    ah,0xda
  41b3ac:	jecxz  0x41b40c
  41b3ae:	lea    eax,[edi+0x3db3ca3e]
  41b3b4:	jns    0x41b395
  41b3b6:	jmp    0x6a2c5502
  41b3bb:	pop    es
  41b3bc:	(bad)  
  41b3bd:	and    edi,DWORD PTR ds:0x79109b47
  41b3c3:	ja     0x41b418
  41b3c5:	nop
  41b3c6:	xchg   edi,eax
  41b3c7:	in     eax,dx
  41b3c8:	add    cl,ah
  41b3ca:	(bad)  
  41b3cb:	pop    eax
  41b3cc:	jecxz  0x41b3e4
  41b3ce:	push   ebx
  41b3cf:	data16 xchg BYTE PTR [ebp-0x7e],al
  41b3d3:	inc    ecx
  41b3d4:	sub    esp,edx
  41b3d6:	push   ds
  41b3d7:	int3   
  41b3d8:	jg     0x41b3f0
  41b3da:	push   0x71453994
  41b3df:	fnsave ds:0x9f413adf
  41b3e5:	xchg   edx,eax
  41b3e6:	jmp    0xbd9:0xce03694b
  41b3ed:	sbb    BYTE PTR [edx],bl
  41b3ef:	imul   esp,DWORD PTR [ecx+edx*4],0xffffff86
  41b3f3:	lods   al,BYTE PTR ds:[esi]
  41b3f4:	pop    es
  41b3f5:	in     eax,0x7c
  41b3f7:	loopne 0x41b3c7
  41b3f9:	cmc    
  41b3fa:	sbb    dl,ch
  41b3fc:	mul    DWORD PTR [ecx+ebx*4-0x36]
  41b400:	cmp    dh,BYTE PTR [ebp+0x4d97d68]
  41b406:	nop
  41b407:	mov    ds:0x5675ed4e,eax
  41b40c:	jns    0x41b3d0
  41b40e:	stc    
  41b40f:	or     esi,ecx
  41b411:	and    BYTE PTR [edi],bl
  41b413:	gs lahf 
  41b415:	fcomp  QWORD PTR [ebx-0x37ad2869]
  41b41b:	or     eax,0xdf7b2e34
  41b420:	jp     0x41b493
  41b422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b423:	push   cs
  41b424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b425:	test   bl,0x36
  41b428:	sbb    eax,0xffffffbe
  41b42b:	rcr    DWORD PTR [edi-0x1],cl
  41b42e:	call   0x8967cc53
  41b433:	adc    BYTE PTR [edx],dl
  41b435:	idiv   esi
  41b437:	xor    DWORD PTR [esi],ebx
  41b439:	sub    dh,dl
  41b43b:	ret    
  41b43c:	and    edi,DWORD PTR [ecx+ebp*2]
  41b43f:	lods   al,BYTE PTR ds:[esi]
  41b440:	mov    ecx,0x61d7b35c
  41b445:	fsub   st(5),st
  41b447:	out    dx,eax
  41b448:	outs   dx,DWORD PTR ds:[esi]
  41b449:	pop    ebp
  41b44a:	ins    BYTE PTR es:[edi],dx
  41b44b:	mov    ebp,0xd45c5433
  41b450:	xor    eax,0xae1f33c0
  41b455:	cmp    al,0x8
  41b457:	mov    al,0xd0
  41b459:	aas    
  41b45a:	sti    
  41b45b:	enter  0x2518,0xf5
  41b45f:	xor    ebx,DWORD PTR [ebx]
  41b461:	jge    0x41b40f
  41b463:	mov    edx,ss
  41b465:	call   DWORD PTR [edi+0x2ee74269]
  41b46b:	mov    al,0xb1
  41b46d:	data16 jmp 0x41b3fd
  41b470:	mov    eax,ds:0x18b4e539
  41b475:	push   es
  41b476:	les    esi,FWORD PTR [edx-0x59]
  41b479:	aaa    
  41b47a:	sbb    BYTE PTR [esi-0x57],bh
  41b47d:	scas   eax,DWORD PTR es:[edi]
  41b47e:	cmc    
  41b47f:	fdiv   QWORD PTR [ebp+ebp*4+0x3a]
  41b483:	mov    ch,0xcd
  41b485:	xchg   edi,eax
  41b486:	out    dx,eax
  41b487:	pushf  
  41b488:	aam    0x16
  41b48a:	scas   eax,DWORD PTR es:[edi]
  41b48b:	inc    esi
  41b48c:	xor    BYTE PTR [edx],al
  41b48e:	mov    eax,0xfbaeeab0
  41b493:	int    0x71
  41b495:	mov    cl,0xdb
  41b497:	dec    sp
  41b499:	sar    BYTE PTR [ebx],1
  41b49b:	mov    edi,0x973769bf
  41b4a0:	push   ebp
  41b4a1:	mov    ds:0xded1035b,al
  41b4a6:	repnz dec BYTE PTR [ebx+0x5d50c7c1]
  41b4ad:	push   edx
  41b4ae:	jb     0x41b4d6
  41b4b0:	dec    ebp
  41b4b1:	imul   edi,DWORD PTR [edi-0x7],0x83654c3d
  41b4b8:	rcr    DWORD PTR ds:0xbbc18836,cl
  41b4be:	inc    ebx
  41b4bf:	push   esp
  41b4c0:	loope  0x41b451
  41b4c2:	stos   BYTE PTR es:[edi],al
  41b4c3:	or     ecx,edi
  41b4c5:	dec    esp
  41b4c6:	outs   dx,DWORD PTR ds:[esi]
  41b4c7:	xor    eax,0xae05fef0
  41b4cc:	(bad)  
  41b4cd:	push   ds
  41b4ce:	push   esp
  41b4cf:	loopne 0x41b487
  41b4d1:	sub    eax,0x576b6e64
  41b4d6:	mov    eax,0x230d7ac
  41b4db:	jo     0x41b460
  41b4dd:	push   es
  41b4de:	cmp    bl,al
  41b4e0:	dec    ebp
  41b4e1:	push   ebx
  41b4e2:	es inc esi
  41b4e4:	outs   dx,DWORD PTR ds:[esi]
  41b4e5:	or     al,0xc
  41b4e7:	xor    ecx,esi
  41b4e9:	push   edx
  41b4ea:	dec    ebx
  41b4eb:	je     0x41b4c0
  41b4ed:	fldcw  WORD PTR [esi-0x27f48b6]
  41b4f3:	pop    eax
  41b4f4:	inc    edi
  41b4f5:	or     eax,0xb290af64
  41b4fa:	addr16 mov eax,0x123318b
  41b500:	aam    0x27
  41b502:	or     ecx,DWORD PTR [edx-0x7f813e0f]
  41b508:	gs (bad) 
  41b50b:	dec    esp
  41b50c:	repz pop eax
  41b50e:	loope  0x41b576
  41b510:	xor    DWORD PTR [ebx-0x7d],edx
  41b513:	xor    DWORD PTR ss:[edx],0xee069b21
  41b51a:	push   ss
  41b51b:	ror    BYTE PTR [ecx+0x5e9317ec],cl
  41b521:	imul   esp,DWORD PTR [esp+ecx*8+0x50],0xf9f5cf60
  41b529:	add    eax,DWORD PTR ds:0xdca27570
  41b52f:	inc    ebp
  41b530:	aad    0x75
  41b532:	add    DWORD PTR [esi-0x701b346f],esi
  41b538:	xchg   edi,eax
  41b539:	pop    eax
  41b53a:	xor    eax,0xcabe8139
  41b53f:	mov    DWORD PTR [edx+0x1a],edi
  41b542:	jle    0x41b504
  41b544:	dec    edi
  41b545:	adc    DWORD PTR [eax-0x6cb7e6ba],eax
  41b54b:	sub    eax,0x1a79ce
  41b550:	bound  edx,QWORD PTR [eax*2+0x7e7003eb]
  41b557:	adc    BYTE PTR [eax+0x2b44f468],al
  41b55d:	stc    
  41b55e:	xchg   ebx,eax
  41b55f:	out    dx,eax
  41b560:	fisub  WORD PTR [ecx+0x6a]
  41b563:	out    dx,al
  41b564:	inc    ecx
  41b565:	jb     0x41b5b0
  41b567:	icebp  
  41b568:	jecxz  0x41b550
  41b56a:	cmp    ch,BYTE PTR [eax]
  41b56c:	call   0xb7433717
  41b571:	cmp    BYTE PTR [ebp+0x7f],ch
  41b574:	cmp    bl,BYTE PTR [eax+0x3d]
  41b577:	outs   dx,DWORD PTR ds:[esi]
  41b578:	sub    al,0xf3
  41b57a:	mov    ecx,edi
  41b57c:	jp     0x41b512
  41b57e:	add    eax,0xa6e18dc9
  41b583:	sti    
  41b584:	(bad)  
  41b585:	and    DWORD PTR [ecx+0x5],ebx
  41b588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b589:	lahf   
  41b58a:	xchg   ebx,eax
  41b58b:	mov    esi,DWORD PTR [edi-0xb6e3aa0]
  41b591:	mov    ss,WORD PTR [esi-0x6b]
  41b594:	dec    edx
  41b595:	mov    ch,al
  41b597:	out    0xb9,al
  41b599:	in     al,dx
  41b59a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41b59c:	pop    ebp
  41b59d:	inc    esp
  41b59e:	pop    esp
  41b59f:	and    al,0x34
  41b5a1:	sbb    ch,bh
  41b5a3:	sub    al,0x8d
  41b5a5:	sub    eax,0xd24b2f39
  41b5aa:	stos   BYTE PTR es:[edi],al
  41b5ab:	mov    bh,0xaa
  41b5ad:	jl     0x41b539
  41b5af:	(bad)  
  41b5b0:	shl    BYTE PTR [edi+0x10b6845a],cl
  41b5b6:	cmp    DWORD PTR ds:0x5b142621,ecx
  41b5bc:	mov    eax,ds:0xc5d828fe
  41b5c1:	mov    bl,0xc6
  41b5c3:	clc    
  41b5c4:	jecxz  0x41b564
  41b5c6:	add    eax,0x3ee1a073
  41b5cb:	mov    esi,cs
  41b5cd:	mov    ah,0x50
  41b5cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5d0:	cmp    DWORD PTR [ecx-0x3e5e40a8],eax
  41b5d6:	lods   al,BYTE PTR ds:[esi]
  41b5d7:	and    DWORD PTR [edi+esi*8+0x1570fb12],esp
  41b5de:	mov    ah,0xb7
  41b5e0:	test   BYTE PTR [ebx-0x20],cl
  41b5e3:	adc    BYTE PTR [edi+edx*1+0x57],0xf
  41b5e8:	ss jb  0x41b604
  41b5eb:	push   ebx
  41b5ec:	dec    ebp
  41b5ed:	mov    dh,ah
  41b5ef:	cmp    BYTE PTR [eax+0x37b96464],0xbd
  41b5f6:	nop
  41b5f7:	jl     0x41b663
  41b5f9:	stos   BYTE PTR es:[edi],al
  41b5fa:	aaa    
  41b5fb:	(bad)  
  41b5fc:	sbb    BYTE PTR [ecx+0x72f00e45],dl
  41b602:	(bad)  
  41b603:	adc    BYTE PTR [eax-0x645e8d5e],bh
  41b609:	add    al,0x8c
  41b60b:	jne    0x41b618
  41b60d:	or     eax,0x3530dafd
  41b612:	in     eax,0x62
  41b614:	outs   dx,BYTE PTR ds:[esi]
  41b615:	(bad)  
  41b616:	clc    
  41b617:	shl    ah,1
  41b619:	mov    ch,0x5c
  41b61b:	jne    0x41b5d0
  41b61d:	pop    ds
  41b61e:	xchg   edi,eax
  41b61f:	mov    esp,0x2907d685
  41b624:	das    
  41b625:	or     al,0x5d
  41b627:	mov    ebp,0xfae7687b
  41b62c:	mov    ebx,0x6faa5f83
  41b631:	rcl    BYTE PTR [ecx-0x6b],1
  41b634:	push   edx
  41b635:	mov    bl,0x6
  41b637:	inc    eax
  41b638:	mov    ds:0xbb8bb24e,eax
  41b63d:	cmp    ebx,esp
  41b63f:	test   DWORD PTR [edi+0x16],ebp
  41b642:	(bad)  
  41b643:	aas    
  41b644:	ins    BYTE PTR es:[edi],dx
  41b645:	stc    
  41b646:	(bad)  
  41b647:	popa   
  41b648:	pop    ebp
  41b649:	sahf   
  41b64a:	popa   
  41b64b:	mov    bh,0xe6
  41b64d:	add    eax,0x5bfdfabd
  41b652:	push   esp
  41b653:	mov    eax,0x6c5eefc
  41b658:	fsub   QWORD PTR [ecx-0x33]
  41b65b:	(bad)  
  41b65c:	jb     0x41b6ca
  41b65e:	retf   
  41b65f:	jle    0x41b6d9
  41b661:	fistp  WORD PTR [ecx+0x28e6763d]
  41b667:	jns    0x41b650
  41b669:	jne    0x41b6d7
  41b66b:	lods   al,BYTE PTR ds:[esi]
  41b66c:	shr    cl,cl
  41b66e:	stos   DWORD PTR es:[edi],eax
  41b66f:	out    0x85,eax
  41b671:	mov    edx,0xde93f74e
  41b676:	mov    cl,BYTE PTR [ebx-0x7]
  41b679:	add    edi,ecx
  41b67b:	mov    ds:0x777f0103,eax
  41b680:	std    
  41b681:	sti    
  41b682:	sahf   
  41b683:	sub    eax,0x3aff1550
  41b688:	leave  
  41b689:	sub    edx,DWORD PTR [ebp+0x49d1520]
  41b68f:	fild   DWORD PTR [ecx]
  41b691:	ret    0x7807
  41b694:	enter  0x5d4d,0xd0
  41b698:	or     BYTE PTR [eax+0x1f],bl
  41b69b:	xor    eax,0x4d15697a
  41b6a0:	aaa    
  41b6a1:	mov    ebx,0x883bbc94
  41b6a6:	mov    eax,0x7216c48c
  41b6ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6ac:	cmc    
  41b6ad:	and    ebx,DWORD PTR [esi+ecx*8]
  41b6b0:	cld    
  41b6b1:	mov    esp,0xcbe4505e
  41b6b6:	aad    0x48
  41b6b8:	mov    eax,0x6b27a9d7
  41b6bd:	or     DWORD PTR [esi+0x71dedc58],eax
  41b6c3:	inc    edi
  41b6c4:	fs loope 0x41b69d
  41b6c7:	in     eax,dx
  41b6c8:	pop    ecx
  41b6c9:	add    al,BYTE PTR [ebx]
  41b6cb:	and    DWORD PTR ds:[esi+0x5a99fbfe],0xffffffdc
  41b6d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6d4:	inc    esp
  41b6d5:	push   es
  41b6d6:	sbb    esp,DWORD PTR [edx+esi*4]
  41b6d9:	jl     0x41b6b9
  41b6db:	and    eax,DWORD PTR ds:0x9b4fdd9
  41b6e1:	mov    bh,0xe7
  41b6e3:	push   edx
  41b6e4:	stc    
  41b6e5:	call   0x2d74:0x484d24a4
  41b6ec:	pop    ss
  41b6ed:	mov    al,ds:0x1e8f53ad
  41b6f2:	jge    0x41b6b9
  41b6f4:	mov    edx,0xa92dc774
  41b6f9:	pop    edi
  41b6fa:	fisttp DWORD PTR [eax]
  41b6fc:	mov    ebx,fs
  41b6fe:	clc    
  41b6ff:	mov    bh,0x61
  41b701:	(bad)  
  41b702:	xchg   ebp,eax
  41b703:	(bad)  [ebx+0x4151c8a6]
  41b709:	je     0x41b6d4
  41b70b:	mov    al,ds:0x7bb825da
  41b710:	adc    dl,BYTE PTR [ebx+0xa88ea59]
  41b716:	test   ah,dh
  41b718:	xchg   ebp,eax
  41b719:	retf   
  41b71a:	or     dh,ah
  41b71c:	cmp    DWORD PTR [eax],0xfd49f7e2
  41b722:	popf   
  41b723:	adc    dh,0x30
  41b726:	push   0x49
  41b728:	xor    ecx,DWORD PTR [ebx-0x4f]
  41b72b:	ss xchg edx,eax
  41b72d:	inc    esi
  41b72e:	loope  0x41b6d6
  41b730:	jae    0x41b733
  41b732:	jp     0x41b793
  41b734:	inc    ebx
  41b735:	(bad)
  41b738:	add    eax,0xc7640df3
  41b73d:	fdivp  st(2),st
  41b73f:	inc    ebx
  41b740:	adc    eax,0xef42b90f
  41b745:	add    ah,BYTE PTR [ebx]
  41b747:	pushf  
  41b748:	in     eax,0x8e
  41b74a:	mov    al,ds:0x97695d4b
  41b74f:	ds mov ch,0xbb
  41b752:	cli    
  41b753:	das    
  41b754:	xor    ah,bl
  41b756:	and    dl,BYTE PTR ds:0xe50ff735
  41b75c:	call   0x9841:0x6b10679
  41b763:	out    dx,eax
  41b764:	test   eax,0xf49e760d
  41b769:	inc    edi
  41b76a:	(bad)  
  41b76b:	cs dec edx
  41b76d:	imul   edi,DWORD PTR [ebx+esi*1+0x18],0x40abcf45
  41b775:	inc    ebp
  41b776:	push   eax
  41b777:	mov    ah,0x7d
  41b779:	dec    esi
  41b77a:	mov    al,ds:0x85b40dce
  41b77f:	mov    ah,0x66
  41b781:	inc    edi
  41b782:	mov    ds:0xd730367f,al
  41b787:	push   cs
  41b788:	popf   
  41b789:	add    DWORD PTR [ebx+ebx*1+0x56],edx
  41b78d:	sti    
  41b78e:	cwde   
  41b78f:	cmovbe ebx,DWORD PTR [eax]
  41b792:	mov    ds:0x2fdbf4f4,eax
  41b797:	jl     0x41b78e
  41b799:	loope  0x41b7d5
  41b79b:	mov    ah,0xae
  41b79d:	and    eax,0x30a53337
  41b7a2:	stc    
  41b7a3:	push   ecx
  41b7a4:	scas   eax,DWORD PTR es:[edi]
  41b7a5:	clc    
  41b7a6:	out    0x76,eax
  41b7a8:	daa    
  41b7a9:	ins    DWORD PTR es:[edi],dx
  41b7aa:	sbb    ebp,0x7d
  41b7ad:	test   eax,0x7014bf3b
  41b7b2:	test   DWORD PTR [edx],0xfd8e7ff3
  41b7b8:	xchg   BYTE PTR [ebx],bh
  41b7ba:	xchg   ebp,eax
  41b7bb:	test   DWORD PTR [edi+0x70],ebp
  41b7be:	sub    DWORD PTR [edx+0x54],eax
  41b7c1:	lahf   
  41b7c2:	cs jbe 0x41b784
  41b7c5:	adc    eax,0x549ccf76
  41b7ca:	mov    dh,0xe4
  41b7cc:	push   ds
  41b7cd:	(bad)
  41b7d3:	test   eax,0x400e36d5
  41b7d8:	mov    esi,0xa0193b47
  41b7dd:	cmp    DWORD PTR [edi+0x7c118e0f],esp
  41b7e3:	ss scas eax,DWORD PTR es:[edi]
  41b7e5:	jp     0x41b7b4
  41b7e7:	push   esi
  41b7e8:	rcl    BYTE PTR [ecx-0x5fe4b867],0xa4
  41b7ef:	sub    DWORD PTR [edx-0x43],eax
  41b7f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7f3:	push   0x76
  41b7f5:	imul   ebx,ecx,0xffffffa2
  41b7f8:	dec    ebp
  41b7f9:	dec    edx
  41b7fa:	(bad)  
  41b7fb:	xchg   edx,eax
  41b7fc:	push   cs
  41b7fd:	ja     0x41b81b
  41b7ff:	pop    ds
  41b800:	jmp    0x11a25533
  41b805:	js     0x41b7f7
  41b807:	adc    al,0x39
  41b809:	int3   
  41b80a:	xor    DWORD PTR [eax+0x58],0x2e
  41b80e:	pop    edx
  41b80f:	adc    al,0xee
  41b811:	push   ss
  41b812:	retf   
  41b813:	mov    bh,0x6e
  41b815:	push   ds
  41b816:	and    DWORD PTR [edx],0xffffffae
  41b819:	or     dl,dl
  41b81b:	retf   
  41b81c:	xor    edx,ebx
  41b81e:	shl    BYTE PTR [ebp-0x25f0627d],0x62
  41b825:	rcl    BYTE PTR [esi-0x59],1
  41b828:	retf   
  41b829:	cmp    DWORD PTR [eax+0x1f],esp
  41b82c:	icebp  
  41b82d:	lea    ebp,[edx+0x67fdfa53]
  41b833:	adc    BYTE PTR ds:0xbed9e34b,0xa3
  41b83a:	mov    edx,0x80d94278
  41b83f:	or     al,0x8c
  41b841:	or     bl,BYTE PTR [eax+0x2b960e88]
  41b847:	mov    ebp,0xb7517ec0
  41b84c:	dec    ecx
  41b84d:	adc    BYTE PTR [ebx],ch
  41b84f:	or     cl,dl
  41b851:	rol    edi,cl
  41b853:	add    DWORD PTR [edi],ebp
  41b855:	mov    dl,0x0
  41b857:	les    edx,FWORD PTR [edi+edi*4-0x77e43ae7]
  41b85e:	lahf   
  41b85f:	mov    al,0x56
  41b861:	sub    esi,DWORD PTR [edx+edx*2+0x7c69f61c]
  41b868:	push   edx
  41b869:	loopne 0x41b87c
  41b86b:	add    al,0xa8
  41b86d:	pop    es
  41b86e:	xor    ebp,DWORD PTR [ebx]
  41b870:	push   cs
  41b871:	loopne 0x41b816
  41b873:	jbe    0x41b848
  41b875:	call   0x9c6338c7
  41b87a:	je     0x41b8ca
  41b87c:	add    BYTE PTR [esi+0x7bdc28a7],ah
  41b882:	lods   eax,DWORD PTR ds:[esi]
  41b883:	jmp    0x41b834
  41b885:	cmp    edi,DWORD PTR [ebx+0x522abb8e]
  41b88b:	sahf   
  41b88c:	push   es
  41b88d:	stc    
  41b88e:	loop   0x41b888
  41b890:	jno    0x41b8bb
  41b892:	or     dl,BYTE PTR [esi-0x22]
  41b895:	les    ebp,FWORD PTR [ebx+0x76d17e1c]
  41b89b:	adc    eax,0x437c35a0
  41b8a0:	pop    esi
  41b8a1:	jnp    0x41b8d1
  41b8a3:	pop    eax
  41b8a4:	loopne 0x41b83b
  41b8a6:	gs jnp 0x41b832
  41b8a9:	jmp    0xd501077f
  41b8ae:	stos   DWORD PTR es:[edi],eax
  41b8af:	dec    ebp
  41b8b0:	sbb    eax,0xb58168be
  41b8b5:	and    eax,DWORD PTR [ebp-0x327d5bb6]
  41b8bb:	inc    ecx
  41b8bc:	mov    cl,0x47
  41b8be:	add    al,0xfd
  41b8c0:	push   0x93455861
  41b8c5:	stos   BYTE PTR es:[edi],al
  41b8c6:	loop   0x41b8aa
  41b8c8:	lea    ebp,[ebp+0xc]
  41b8cb:	scas   al,BYTE PTR es:[edi]
  41b8cc:	adc    al,0x28
  41b8ce:	mov    ch,0x94
  41b8d0:	mov    dh,0x59
  41b8d2:	adc    edx,DWORD PTR [ecx+0x5261d0b2]
  41b8d8:	test   eax,0xb3e566a0
  41b8dd:	jb     0x41b8cc
  41b8df:	ja     0x41b91e
  41b8e1:	pop    ebp
  41b8e2:	dec    edi
  41b8e3:	inc    eax
  41b8e4:	mov    esp,0x233cb59a
  41b8e9:	cmp    al,BYTE PTR [ebp+esi*8+0x25]
  41b8ed:	stc    
  41b8ee:	cld    
  41b8ef:	pop    ss
  41b8f0:	sub    al,0x6d
  41b8f2:	lock mov ah,0x51
  41b8f5:	xor    eax,0xcaaec7d4
  41b8fa:	xchg   ebx,eax
  41b8fb:	and    al,0xc6
  41b8fd:	cmp    DWORD PTR [edi+0x3e],0x6d
  41b901:	adc    BYTE PTR [ecx-0x327ae68a],cl
  41b907:	inc    eax
  41b908:	or     DWORD PTR [ebp+0x33c2e528],ebx
  41b90e:	ret    
  41b90f:	pop    edi
  41b910:	push   ss
  41b911:	gs popa 
  41b913:	mov    BYTE PTR [eax-0x46],ch
  41b916:	je     0x41b8b8
  41b918:	sub    edx,DWORD PTR [edx]
  41b91a:	push   ebx
  41b91b:	es (bad) 
  41b91d:	pushf  
  41b91e:	pop    ds
  41b91f:	je     0x41b950
  41b921:	xchg   edi,ecx
  41b923:	repz fistp WORD PTR [ecx-0x4816d04a]
  41b92a:	inc    edi
  41b92b:	popf   
  41b92c:	(bad)  
  41b92d:	scas   al,BYTE PTR es:[edi]
  41b92e:	in     al,dx
  41b92f:	sbb    edi,DWORD PTR [ecx]
  41b931:	sbb    al,0xca
  41b933:	dec    ecx
  41b934:	xor    esi,ebp
  41b936:	mov    esp,0xa66b8c99
  41b93b:	aaa    
  41b93c:	mov    dl,0xab
  41b93e:	ja     0x41b94d
  41b940:	and    ah,BYTE PTR [ebx+0x5aa4b9]
  41b946:	fdiv   st(6),st
  41b948:	jb     0x41b92a
  41b94a:	adc    al,0x31
  41b94c:	mov    WORD PTR [esi+ebp*2],gs
  41b94f:	test   al,0x7e
  41b951:	or     BYTE PTR [ebx],cl
  41b953:	sbb    edi,DWORD PTR [eax+ecx*2-0x51]
  41b957:	xchg   DWORD PTR [eax-0xd],edx
  41b95a:	out    0x4e,eax
  41b95c:	hlt    
  41b95d:	sbb    bl,BYTE PTR [ebx-0x49ed7de2]
  41b963:	mov    eax,0x90acb277
  41b968:	pop    ebx
  41b969:	sbb    eax,0x45dc6eae
  41b96e:	fst    QWORD PTR [edi+0x3f]
  41b971:	stos   BYTE PTR es:[edi],al
  41b972:	jl     0x41b955
  41b974:	sub    eax,edx
  41b976:	fistp  QWORD PTR [edx]
  41b978:	mov    esi,0x10c6471c
  41b97d:	dec    edx
  41b97e:	jns    0x41b9ab
  41b980:	loope  0x41b987
  41b982:	mov    al,0xa0
  41b984:	loope  0x41b971
  41b986:	push   0x77
  41b988:	mov    dl,0x94
  41b98a:	ds dec ebp
  41b98c:	outs   dx,DWORD PTR ds:[esi]
  41b98d:	push   edx
  41b98e:	pop    edx
  41b98f:	mov    ebp,0x8a1e5ae0
  41b994:	sbb    BYTE PTR [ebp-0xa5234e9],0x8a
  41b99b:	imul   edx,DWORD PTR [esi+0x74],0xffffff83
  41b99f:	into   
  41b9a0:	xchg   ecx,eax
  41b9a1:	test   eax,0x7460e974
  41b9a6:	or     BYTE PTR [ebp-0x6f16a9b9],bh
  41b9ac:	test   al,0x22
  41b9ae:	inc    esp
  41b9af:	pop    edi
  41b9b0:	or     eax,0x67f29427
  41b9b5:	iret   
  41b9b6:	push   edi
  41b9b7:	int    0xf1
  41b9b9:	repz fmul QWORD PTR [esi]
  41b9bc:	adc    al,cl
  41b9be:	fild   WORD PTR [ecx-0x2b87a922]
  41b9c4:	pusha  
  41b9c5:	pop    edx
  41b9c6:	and    BYTE PTR [esp+eax*4+0x6fc4a27f],dh
  41b9cd:	test   BYTE PTR [esi],0x6f
  41b9d0:	cmp    ecx,0xffffffdd
  41b9d3:	fstp   TBYTE PTR [ebx-0x64]
  41b9d6:	out    dx,al
  41b9d7:	je     0x41ba31
  41b9d9:	aad    0xf5
  41b9db:	and    dh,bl
  41b9dd:	cld    
  41b9de:	sbb    eax,0xb5198094
  41b9e3:	lock imul eax,edi,0x58
  41b9e7:	pushf  
  41b9e8:	mov    dl,0x33
  41b9ea:	test   al,0x5f
  41b9ec:	cmp    dh,dh
  41b9ee:	jge    0x41b9b0
  41b9f0:	add    ch,BYTE PTR [ecx+edi*2]
  41b9f3:	jbe    0x41b9ce
  41b9f5:	lahf   
  41b9f6:	je     0x41ba5d
  41b9f8:	in     al,0x88
  41b9fa:	aad    0xdb
  41b9fc:	jg     0x41ba03
  41b9fe:	xor    DWORD PTR [ebp+0x71525ec0],edi
  41ba04:	jae    0x41b9b5
  41ba06:	rol    DWORD PTR [edx],1
  41ba08:	jecxz  0x41b9d8
  41ba0a:	lea    ecx,[edx]
  41ba0c:	sbb    al,0x7f
  41ba0e:	sti    
  41ba0f:	or     DWORD PTR [esi],ebp
  41ba11:	enter  0xee43,0xbd
  41ba15:	push   es
  41ba16:	mov    bh,0xda
  41ba18:	(bad)  
  41ba19:	and    eax,0x504b7087
  41ba1e:	popf   
  41ba1f:	fucomip st,st(0)
  41ba21:	pop    eax
  41ba22:	push   eax
  41ba23:	mov    edx,0x2582f813
  41ba28:	outs   dx,BYTE PTR ds:[esi]
  41ba29:	in     eax,dx
  41ba2a:	xchg   esp,eax
  41ba2b:	add    al,0x65
  41ba2d:	dec    esp
  41ba2e:	add    BYTE PTR [esp+edx*2+0x14ca9d48],bl
  41ba35:	mov    ecx,0xe37c19d8
  41ba3a:	adc    esp,DWORD PTR [esi]
  41ba3c:	ror    DWORD PTR [esi+0x6ec624a8],1
  41ba42:	jns    0x41ba8b
  41ba44:	(bad)  
  41ba45:	sub    al,0xc6
  41ba47:	and    eax,0x2967b43
  41ba4c:	or     DWORD PTR [edx+edi*4],0xffffffb6
  41ba50:	xor    eax,DWORD PTR [ecx+0x52db3c49]
  41ba56:	shr    DWORD PTR [esi+0x24],0x41
  41ba5a:	inc    ecx
  41ba5b:	xchg   edx,eax
  41ba5c:	dec    edx
  41ba5d:	call   0xc2ac:0x7ff14f90
  41ba64:	sbb    BYTE PTR [ebx-0x6a],cl
  41ba67:	jne    0x41ba51
  41ba69:	ret    0x3744
  41ba6c:	cmp    DWORD PTR [edi+0x52a8234f],esp
  41ba72:	adc    dl,BYTE PTR [esi+0x588e476a]
  41ba78:	mov    edi,0xb8395242
  41ba7d:	loope  0x41ba49
  41ba7f:	cwde   
  41ba80:	nop
  41ba81:	int    0xa3
  41ba83:	dec    eax
  41ba84:	mov    edx,0x32e38150
  41ba89:	bound  edx,QWORD PTR [esi+0xb]
  41ba8c:	mov    bl,0xae
  41ba8e:	mov    ebp,0x9c780d0d
  41ba93:	mov    ch,0x6a
  41ba95:	test   DWORD PTR [eax-0x32328ba6],ebx
  41ba9b:	inc    edx
  41ba9c:	pop    esi
  41ba9d:	jns    0x41ba7a
  41ba9f:	mov    ?,ebp
  41baa1:	cli    
  41baa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baa3:	scas   al,BYTE PTR es:[edi]
  41baa4:	ss push esi
  41baa6:	xor    ah,BYTE PTR [ebp-0x213ee465]
  41baac:	in     al,dx
  41baad:	adc    edx,DWORD PTR [ebp+0x1e]
  41bab0:	iret   
  41bab1:	pop    ebx
  41bab2:	stos   DWORD PTR es:[edi],eax
  41bab3:	fdivr  DWORD PTR [esi+0xa7a9ef7]
  41bab9:	loop   0x41ba66
  41babb:	fstp   QWORD PTR [ebp+0xc5c5580]
  41bac1:	mov    ah,0x29
  41bac3:	repz sub al,0x5c
  41bac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bac7:	pop    ds
  41bac8:	sar    DWORD PTR ds:0x627983da,0x23
  41bacf:	sbb    ah,BYTE PTR [edi]
  41bad1:	lds    eax,FWORD PTR [edi+0xa]
  41bad4:	pop    ebx
  41bad5:	adc    dl,BYTE PTR [ebx+0x5045385e]
  41badb:	and    DWORD PTR [edi],edx
  41badd:	add    DWORD PTR [edi+esi*2],0x7c
  41bae1:	mov    eax,ds:0xdf79de89
  41bae6:	sub    DWORD PTR [eax],eax
  41bae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bae9:	mov    esp,0x363a8f93
  41baee:	and    esp,DWORD PTR [esi+0x1a9bc92]
  41baf4:	retf   
  41baf5:	(bad)  
  41baf6:	lar    esp,WORD PTR [ebx]
  41baf9:	sti    
  41bafa:	cmp    al,0xff
  41bafc:	retfw  0x236
  41bb00:	pop    ss
  41bb01:	gs icebp 
  41bb03:	mov    cl,0xf
  41bb05:	test   eax,0x5303a8f3
  41bb0a:	test   ebx,eax
  41bb0c:	out    0x43,eax
  41bb0e:	sbb    ebp,DWORD PTR [eax-0x33b3f178]
  41bb14:	add    esp,ecx
  41bb16:	fild   WORD PTR [esi]
  41bb18:	sbb    eax,0x898f245
  41bb1d:	pop    ebx
  41bb1e:	and    edi,DWORD PTR [edx]
  41bb20:	adc    esi,DWORD PTR [eax]
  41bb22:	xor    DWORD PTR [esi],0x7
  41bb25:	data16 fisttp QWORD PTR [edi]
  41bb28:	inc    edx
  41bb29:	loopne 0x41bb24
  41bb2b:	mov    ch,0xe7
  41bb2d:	adc    esi,DWORD PTR [eax-0xb14e1df]
  41bb33:	adc    dl,al
  41bb35:	mov    bh,0x1a
  41bb37:	and    dl,BYTE PTR [edx]
  41bb39:	into   
  41bb3a:	mov    al,0x85
  41bb3c:	push   ebp
  41bb3d:	inc    ebx
  41bb3e:	adc    eax,0xdefe283f
  41bb43:	pop    edi
  41bb44:	sub    al,0xe9
  41bb46:	jno    0x41bb40
  41bb48:	adc    eax,0xb9c850d
  41bb4d:	sub    esi,ebp
  41bb4f:	adc    eax,0x7cb21fbf
  41bb54:	ret    0xd22b
  41bb57:	sub    eax,0x6c2c64a2
  41bb5c:	arpl   cx,ax
  41bb5e:	and    DWORD PTR [edi+eiz*4],ecx
  41bb61:	pop    ebp
  41bb62:	std    
  41bb63:	sar    BYTE PTR [ebp-0x2782fb32],0x76
  41bb6a:	xchg   esp,eax
  41bb6b:	repnz xchg ecx,eax
  41bb6d:	or     edx,edx
  41bb6f:	push   ebp
  41bb70:	fild   WORD PTR [eax+0x688a8e26]
  41bb76:	out    dx,eax
  41bb77:	xor    al,0x73
  41bb79:	mov    edi,0xf7aa4279
  41bb7e:	stos   BYTE PTR es:[edi],al
  41bb7f:	ds daa 
  41bb81:	repz (bad) 
  41bb83:	aad    0xbb
  41bb85:	gs cmp eax,0x8e8d2a2b
  41bb8b:	mov    esp,0x41f6af76
  41bb90:	sbb    eax,0x74eb18d1
  41bb95:	mov    WORD PTR [ebx],ds
  41bb97:	sbb    edx,0xc1bb9a4c
  41bb9d:	mov    esp,0xa5b19188
  41bba2:	loope  0x41bb8a
  41bba4:	int3   
  41bba5:	mov    al,ds:0xa89a56b4
  41bbaa:	jne    0x41bbec
  41bbac:	mov    ah,0x5b
  41bbae:	xchg   ebp,eax
  41bbaf:	push   esi
  41bbb0:	je     0x41bc0a
  41bbb2:	inc    edx
  41bbb3:	mov    al,0xb4
  41bbb5:	and    DWORD PTR [edi+0x27],ecx
  41bbb8:	push   ebp
  41bbb9:	jne    0x41bc04
  41bbbb:	xor    eax,0x8b683910
  41bbc0:	fldcw  WORD PTR [ecx+0x628a5049]
  41bbc6:	int3   
  41bbc7:	mov    ebx,0x106ee39f
  41bbcc:	ficom  WORD PTR [ebx+0x71bb051a]
  41bbd2:	jge    0x41bc0e
  41bbd4:	push   ebx
  41bbd5:	das    
  41bbd6:	gs push es
  41bbd8:	jnp    0x41bc22
  41bbda:	add    edx,DWORD PTR [edi+edi*1-0x7e91a112]
  41bbe1:	enter  0xcef8,0x57
  41bbe5:	das    
  41bbe6:	imul   edi,DWORD PTR [ecx-0x49e62209],0xb8e2ce8d
  41bbf0:	jns    0x41bbf2
  41bbf2:	sbb    cl,al
  41bbf4:	xor    eax,0x733af1b1
  41bbf9:	jae    0x41bc3a
  41bbfb:	dec    edx
  41bbfc:	jbe    0x41bb9c
  41bbfe:	data16 sub bl,BYTE PTR [edi]
  41bc01:	rcr    BYTE PTR [esi+ecx*8],cl
  41bc04:	fldcw  WORD PTR [eax-0x38ff6e77]
  41bc0a:	and    DWORD PTR [edx+0x7e],ecx
  41bc0d:	push   esi
  41bc0e:	stc    
  41bc0f:	add    BYTE PTR [edi],0xd3
  41bc12:	push   ebx
  41bc13:	xor    dh,bl
  41bc15:	push   esp
  41bc16:	sub    ch,0xb3
  41bc19:	repz test eax,0x2fe09c15
  41bc1f:	sahf   
  41bc20:	pop    edi
  41bc21:	and    edi,DWORD PTR ds:0xc0fe2158
  41bc27:	push   WORD PTR [edx+0x9c77835]
  41bc2e:	inc    esi
  41bc2f:	dec    esp
  41bc30:	mov    ds:0xbea3bfc8,al
  41bc35:	add    dl,ch
  41bc37:	mov    esp,0x6cc03dac
  41bc3c:	xchg   ebx,eax
  41bc3d:	dec    esp
  41bc3e:	add    BYTE PTR [ebp+0x4d4a1ee0],bl
  41bc44:	dec    ecx
  41bc45:	stos   BYTE PTR es:[edi],al
  41bc46:	call   0x575641b0
  41bc4b:	shl    ebx,cl
  41bc4d:	xchg   edx,eax
  41bc4e:	or     dl,ch
  41bc50:	sbb    dl,BYTE PTR [ebx+0xe]
  41bc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc54:	stos   BYTE PTR es:[edi],al
  41bc55:	test   al,0x88
  41bc57:	push   cs
  41bc58:	nop
  41bc59:	cmp    ah,BYTE PTR [edi]
  41bc5b:	rol    edi,cl
  41bc5d:	sub    eax,0xa405d414
  41bc62:	or     DWORD PTR [edi+0x19],ecx
  41bc65:	push   0x76
  41bc67:	mov    ah,0x7f
  41bc69:	adc    BYTE PTR [eax-0x4e],bl
  41bc6c:	pop    esi
  41bc6d:	pushf  
  41bc6e:	jns    0x41bc3b
  41bc70:	mov    cl,BYTE PTR [edi]
  41bc72:	stos   DWORD PTR es:[edi],eax
  41bc73:	dec    eax
  41bc74:	ror    BYTE PTR [edx-0x2d684cde],0x3d
  41bc7b:	cld    
  41bc7c:	jno    0x41bcf5
  41bc7e:	xor    ah,BYTE PTR [eax-0x75cf2477]
  41bc84:	gs jb  0x41bcca
  41bc87:	pop    ss
  41bc88:	loopne 0x41bc38
  41bc8a:	add    eax,0xa119f500
  41bc8f:	rol    BYTE PTR [ecx-0x5f],cl
  41bc92:	jmp    0x41bcba
  41bc94:	shl    DWORD PTR [edi],cl
  41bc96:	pop    ss
  41bc97:	jge    0x41bcc6
  41bc99:	inc    ebp
  41bc9a:	test   eax,0x18ffdc6e
  41bc9f:	(bad)  [esi+esi*8-0x73]
  41bca3:	jle    0x41bccb
  41bca5:	pop    ecx
  41bca6:	dec    edi
  41bca7:	fs addr16 clc 
  41bcaa:	dec    esi
  41bcab:	out    0x8,eax
  41bcad:	dec    esi
  41bcae:	das    
  41bcaf:	add    bh,BYTE PTR [esi-0x9fe98c3]
  41bcb5:	push   esi
  41bcb6:	xchg   BYTE PTR [ebp+0x5a],dl
  41bcb9:	mov    dh,0x3e
  41bcbb:	add    BYTE PTR [ebx+ebp*8-0x30ba5e82],0xf2
  41bcc3:	and    esi,DWORD PTR [ebp+eax*8+0x6e]
  41bcc7:	loopne 0x41bd47
  41bcc9:	jb     0x41bd12
  41bccb:	mov    dh,0xc0
  41bccd:	bound  edi,QWORD PTR [ebx]
  41bccf:	xchg   esp,eax
  41bcd0:	(bad)  [edx+eiz*2]
  41bcd3:	clc    
  41bcd4:	ret    
  41bcd5:	pushf  
  41bcd6:	mov    eax,ds:0xf0e7ecea
  41bcdb:	push   ecx
  41bcdc:	cdq    
  41bcdd:	and    BYTE PTR [edx+0x218bf2c4],ch
  41bce3:	cmp    eax,0x1015c646
  41bce8:	jae    0x41bc84
  41bcea:	pop    edx
  41bceb:	inc    eax
  41bcec:	xor    DWORD PTR [esi-0x3d],0x36680f56
  41bcf3:	or     ebp,DWORD PTR [ebx-0x6903a2f6]
  41bcf9:	dec    edx
  41bcfa:	push   ds
  41bcfb:	test   BYTE PTR [ebx-0x254fb436],bl
  41bd01:	push   eax
  41bd02:	jo     0x41bd51
  41bd04:	(bad)  
  41bd05:	fdivr  st,st(2)
  41bd07:	adc    DWORD PTR [ebx-0x13],esp
  41bd0a:	fabs   
  41bd0c:	mov    ebp,0x1afe65e2
  41bd11:	push   0x7f9579f4
  41bd16:	les    esi,FWORD PTR [ecx]
  41bd18:	push   es
  41bd19:	or     edx,DWORD PTR [edi+0x7cfb3f1b]
  41bd1f:	inc    eax
  41bd20:	loopne 0x41bd08
  41bd22:	sti    
  41bd23:	and    bl,bl
  41bd25:	push   edi
  41bd26:	mov    ebp,0xf3cdf7e
  41bd2b:	cmp    dh,BYTE PTR [esi+0x6f09fbe6]
  41bd31:	arpl   bx,bx
  41bd33:	adc    bl,BYTE PTR [edx]
  41bd35:	jo     0x41bd0a
  41bd37:	jge    0x41bda1
  41bd39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd3a:	dec    ecx
  41bd3b:	pushf  
  41bd3c:	lods   al,BYTE PTR fs:[esi]
  41bd3e:	cld    
  41bd3f:	lea    esp,[ebp+0x18]
  41bd42:	call   0x3dc54251
  41bd47:	mov    ds:0xb762675b,eax
  41bd4c:	test   cl,0xfd
  41bd4f:	jp     0x41bcff
  41bd51:	aam    0xdd
  41bd53:	cli    
  41bd54:	leave  
  41bd55:	mov    ecx,?
  41bd57:	fsubr  QWORD PTR [edi+edi*8]
  41bd5a:	dec    edx
  41bd5b:	and    edx,DWORD PTR [eax-0x1da0d0b1]
  41bd61:	daa    
  41bd62:	std    
  41bd63:	aam    0x4
  41bd65:	and    cl,bl
  41bd67:	dec    esi
  41bd68:	pop    ebp
  41bd69:	add    BYTE PTR [esp+esi*2-0xc703164],0xc7
  41bd71:	xchg   edi,eax
  41bd72:	int    0xef
  41bd74:	jge    0x41bcf6
  41bd76:	stc    
  41bd77:	int    0xd6
  41bd79:	test   eax,0x5bdb555f
  41bd7e:	pop    edi
  41bd7f:	mov    ch,0x9e
  41bd81:	pop    edi
  41bd82:	(bad)  
  41bd83:	cmovo  edi,ebx
  41bd86:	dec    esi
  41bd87:	mov    ebx,0x8a6e8430
  41bd8c:	psadbw mm5,QWORD PTR [ebx]
  41bd8f:	test   eax,0x883af753
  41bd94:	pop    edi
  41bd95:	jge    0x41bda8
  41bd97:	cmp    al,0x98
  41bd99:	xchg   ebp,eax
  41bd9a:	dec    ecx
  41bd9b:	jb     0x41bd26
  41bd9d:	mov    BYTE PTR [eax+ebp*8],0x55
  41bda1:	les    edx,FWORD PTR [ebx+0x28c3d806]
  41bda7:	sar    ecx,0xc0
  41bdaa:	scas   al,BYTE PTR es:[edi]
  41bdab:	popa   
  41bdac:	jmp    0x6ccc:0x15f21708
  41bdb3:	inc    edx
  41bdb4:	xchg   edx,eax
  41bdb5:	jge    0x41bd7e
  41bdb7:	(bad)  
  41bdb8:	mov    bl,0xeb
  41bdba:	cmc    
  41bdbb:	xlat   BYTE PTR ds:[bx]
  41bdbd:	mov    ah,0x4b
  41bdbf:	dec    esp
  41bdc0:	mov    dl,0xf
  41bdc2:	push   ds
  41bdc3:	mov    ebx,0x566ed2d
  41bdc8:	loopne 0x41bdc6
  41bdca:	ds mov ah,0x87
  41bdcd:	push   es
  41bdce:	and    ch,BYTE PTR [edx+0x69]
  41bdd1:	div    BYTE PTR [ebp+0x4]
  41bdd4:	shr    ah,0x9a
  41bdd7:	pop    esp
  41bdd8:	sbb    al,BYTE PTR ds:0x2524d50a
  41bdde:	sahf   
  41bddf:	cmp    esi,DWORD PTR [eax-0x44ad682c]
  41bde5:	pop    ecx
  41bde6:	or     BYTE PTR [ebp+ecx*4+0x32],al
  41bdea:	cmp    ebp,eax
  41bdec:	lds    ecx,FWORD PTR [ebx-0x6b]
  41bdef:	mov    eax,cs:0x72b54d70
  41bdf5:	xor    al,dh
  41bdf7:	ret    0x4ac8
  41bdfa:	cmp    BYTE PTR [edx+0x2dda247d],0x6e
  41be01:	fidivr WORD PTR [edi+0x6fd26747]
  41be07:	out    dx,eax
  41be08:	aam    0x2d
  41be0a:	loop   0x41bdac
  41be0c:	inc    ecx
  41be0d:	clc    
  41be0e:	call   0xd280:0xf49309e5
  41be15:	push   ds
  41be16:	push   ds
  41be17:	sahf   
  41be18:	jge    0x41bdd1
  41be1a:	xor    eax,0x290987b6
  41be1f:	jmp    0x884:0x26743ef7
  41be26:	jl     0x41bdb8
  41be28:	cmp    al,0x6c
  41be2a:	dec    ebp
  41be2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be2c:	mov    esi,0x4d2c4992
  41be31:	pop    es
  41be32:	dec    esp
  41be33:	add    DWORD PTR [ecx],0x272d29a4
  41be39:	jns    0x41be48
  41be3b:	mov    dh,0x21
  41be3d:	pusha  
  41be3e:	or     dh,ah
  41be40:	fisttp DWORD PTR [ebx+0x3892df80]
  41be46:	ror    ah,0xca
  41be49:	push   ss
  41be4a:	imul   ebx,DWORD PTR [eax-0x2ab926b4],0x5b66e82a
  41be54:	or     eax,0x8ce11db3
  41be59:	sbb    al,0x37
  41be5b:	sti    
  41be5c:	cmp    eax,0xc81e0560
  41be61:	or     BYTE PTR [edi+0x7a080e57],bl
  41be67:	sbb    dl,ch
  41be69:	adc    BYTE PTR [esi-0x28682f9c],ah
  41be6f:	jp     0x41bed6
  41be71:	dec    edi
  41be72:	adc    eax,0xdbb4d706
  41be77:	sbb    bl,dh
  41be79:	dec    edx
  41be7a:	lods   eax,DWORD PTR ds:[esi]
  41be7b:	xchg   esp,eax
  41be7c:	ds inc edx
  41be7e:	jmp    0x41be5a
  41be80:	fdivr  st,st(2)
  41be82:	in     eax,0x4d
  41be84:	int3   
  41be85:	fnstsw WORD PTR [edi]
  41be87:	cdq    
  41be88:	out    dx,eax
  41be89:	sub    eax,0x3b9e6e00
  41be8e:	test   BYTE PTR [ecx-0x418d969b],bh
  41be94:	in     al,0x2d
  41be96:	mov    al,ds:0xd5dc6fc7
  41be9b:	mov    al,0x93
  41be9e:	arpl   WORD PTR [ebx+esi*4+0x5ba4440d],ax
  41bea5:	mov    al,ds:0x825c4a8f
  41beaa:	cmp    BYTE PTR [esi+0x21320549],cl
  41beb0:	xor    DWORD PTR [ecx-0x41865131],eax
  41beb6:	xor    esp,DWORD PTR [edi]
  41beb8:	out    0x99,eax
  41beba:	mov    ds:0x446e5350,eax
  41bebf:	pop    esi
  41bec0:	adc    al,0xe1
  41bec2:	pushf  
  41bec3:	mov    ebx,0xf576cb98
  41bec8:	xor    esi,DWORD PTR [ebp+0x4c]
  41becb:	test   eax,0x20ca1fcb
  41bed0:	scas   eax,DWORD PTR es:[edi]
  41bed1:	fs dec ebx
  41bed3:	jae    0x41beb2
  41bed5:	and    ecx,eax
  41bed7:	sub    DWORD PTR [ebp+ecx*2-0x69e3e379],esp
  41bede:	mov    al,ds:0x425d16d7
  41bee3:	sbb    edx,DWORD PTR [ecx-0x5b6fdabb]
  41bee9:	sbb    BYTE PTR [edx+0x6fd73da1],dh
  41beef:	pop    ss
  41bef0:	add    edx,ecx
  41bef2:	xor    dh,BYTE PTR [edi]
  41bef4:	xchg   esi,eax
  41bef5:	loope  0x41bf53
  41bef7:	push   0x5d
  41bef9:	scas   eax,DWORD PTR es:[edi]
  41befa:	xchg   DWORD PTR [ebx],edi
  41befc:	daa    
  41befd:	ret    
  41befe:	xor    al,BYTE PTR [edx]
  41bf00:	push   es
  41bf01:	fbld   TBYTE PTR [edi]
  41bf03:	push   0xffffff88
  41bf05:	mov    esi,0xf1586165
  41bf0a:	push   ebp
  41bf0b:	je     0x41bf70
  41bf0d:	cmp    bl,BYTE PTR [ecx-0x3f]
  41bf10:	jle    0x41bea9
  41bf12:	push   es
  41bf13:	add    DWORD PTR [esi+0x79],edx
  41bf16:	stos   BYTE PTR es:[edi],al
  41bf17:	pop    ecx
  41bf18:	pop    ss
  41bf19:	xchg   ebx,eax
  41bf1a:	xor    al,0x95
  41bf1c:	(bad)  
  41bf1d:	sbb    edi,DWORD PTR [ecx+0x59]
  41bf20:	cmp    eax,0x193d6185
  41bf25:	fs sub al,0x25
  41bf28:	or     al,0x36
  41bf2a:	pop    eax
  41bf2b:	dec    ecx
  41bf2c:	fst    QWORD PTR [edx+eax*8-0x54f7c23]
  41bf33:	loop   0x41bf95
  41bf35:	mov    eax,0xaae8b16c
  41bf3a:	dec    eax
  41bf3b:	shr    BYTE PTR [esi+edx*4-0x65],1
  41bf3f:	clc    
  41bf40:	inc    edx
  41bf41:	xchg   ebp,eax
  41bf42:	jae    0x41bf30
  41bf44:	mov    eax,ds:0xca343236
  41bf49:	mov    ds:0xb0b480f1,al
  41bf4e:	in     al,dx
  41bf4f:	sbb    eax,ebx
  41bf51:	ss push es
  41bf53:	test   eax,0x5c491c89
  41bf58:	push   ss
  41bf59:	leave  
  41bf5a:	adc    edi,DWORD PTR [edi+eax*8+0x4d]
  41bf5e:	push   ecx
  41bf5f:	das    
  41bf60:	cli    
  41bf61:	jecxz  0x41bf22
  41bf63:	sbb    eax,0x7f30e3ab
  41bf68:	fldcw  WORD PTR [edi-0x45]
  41bf6b:	addr16 dec ecx
  41bf6d:	fld    DWORD PTR [edx+0x79]
  41bf70:	sub    ch,BYTE PTR [ecx]
  41bf72:	mov    dh,0xe5
  41bf74:	add    BYTE PTR [esi+0xc],bl
  41bf77:	or     ebp,esi
  41bf79:	popf   
  41bf7a:	(bad)
  41bf7e:	or     dh,ch
  41bf80:	nop
  41bf81:	call   0xa897:0x22c58725
  41bf88:	jp     0x41bffa
  41bf8a:	jp     0x41bf88
  41bf8c:	mov    ah,0xab
  41bf8e:	push   edi
  41bf8f:	imul   esp,DWORD PTR [ecx+0x18],0xd65219f6
  41bf96:	adc    DWORD PTR [ebx+ebx*8],ebp
  41bf99:	stos   DWORD PTR es:[edi],eax
  41bf9a:	ja     0x41bf45
  41bf9c:	xchg   edx,eax
  41bf9d:	aad    0xd5
  41bf9f:	je     0x41c01e
  41bfa1:	repnz arpl WORD PTR [eax],di
  41bfa4:	pop    ds
  41bfa5:	xchg   ebx,eax
  41bfa6:	inc    edx
  41bfa7:	shl    BYTE PTR [edx+0x5983f5d7],0xf6
  41bfae:	push   ebp
  41bfaf:	lods   al,BYTE PTR ds:[esi]
  41bfb0:	dec    esi
  41bfb1:	das    
  41bfb2:	les    esp,FWORD PTR [edx+0x66e35a8a]
  41bfb8:	fadd   DWORD PTR [ecx+edi*8]
  41bfbb:	lahf   
  41bfbc:	loopne 0x41bfdf
  41bfbe:	test   al,0x7b
  41bfc0:	std    
  41bfc1:	inc    ebx
  41bfc2:	ins    BYTE PTR es:[edi],dx
  41bfc3:	std    
  41bfc4:	mov    edi,0xedc3a9a3
  41bfc9:	add    eax,0x58ec4ae2
  41bfce:	call   0xba3c:0x415a6fb6
  41bfd5:	lock cld 
  41bfd7:	fxch   st(1)
  41bfd9:	jae    0x41bfea
  41bfdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfdc:	jle    0x41bfc7
  41bfde:	push   0x6f
  41bfe0:	sub    al,0xcc
  41bfe2:	jecxz  0x41c05c
  41bfe4:	pop    ecx
  41bfe5:	es daa 
  41bfe7:	mov    bh,0x40
  41bfe9:	mov    esi,0xb8c00e5f
  41bfee:	jno    0x41c063
  41bff0:	push   ecx
  41bff1:	int3   
  41bff2:	repnz out dx,al
  41bff4:	mov    ds:0xf821ed46,eax
  41bff9:	(bad)  
  41bffa:	ficom  DWORD PTR [edi+edi*8+0x75]
  41bffe:	sahf   
  41bfff:	loopne 0x41bfb1
  41c001:	out    dx,eax
  41c002:	cmp    eax,0x524885c4
  41c007:	and    cl,BYTE PTR [eax+0x5]
  41c00a:	dec    edx
  41c00b:	mov    ebx,0x7953f062
  41c010:	mov    eax,0xe96019a0
  41c015:	in     eax,0xf4
  41c017:	mov    DWORD PTR ds:[esi-0x1d],ebx
  41c01b:	pop    eax
  41c01c:	or     BYTE PTR [ebp+eax*4+0xb],cl
  41c020:	cmp    eax,0x8b3bbfe0
  41c025:	mov    edx,0x9f869da7
  41c02a:	fsubr  st,st(5)
  41c02c:	mov    dl,BYTE PTR [ecx]
  41c02e:	xchg   esi,eax
  41c02f:	xor    al,0xde
  41c031:	stc    
  41c032:	int3   
  41c033:	rcr    BYTE PTR [esi],0x1c
  41c036:	psrld  mm5,QWORD PTR [edi-0x605bec35]
  41c03d:	jmp    0x41bfc1
  41c03f:	cld    
  41c040:	fwait
  41c041:	scas   eax,DWORD PTR es:[edi]
  41c042:	dec    ecx
  41c043:	mov    ds:0x735fcf41,al
  41c048:	jge    0x41c056
  41c04a:	jb     0x41c01a
  41c04c:	clc    
  41c04d:	cli    
  41c04e:	scas   al,BYTE PTR es:[edi]
  41c04f:	push   esi
  41c050:	mov    eax,esp
  41c052:	les    edi,FWORD PTR [esi-0x4b]
  41c055:	inc    ebp
  41c056:	sahf   
  41c057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c058:	pushaw 
  41c05a:	dec    ebx
  41c05b:	and    BYTE PTR [ebp+0x2327af38],al
  41c061:	mov    al,0x9b
  41c063:	(bad)
  41c066:	mov    dh,BYTE PTR [edi]
  41c068:	pushf  
  41c069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c06a:	rcr    bl,1
  41c06c:	lock dec eax
  41c06e:	mov    bl,BYTE PTR [esi]
  41c070:	mov    BYTE PTR [ebx+0x1f],dh
  41c073:	push   edx
  41c074:	fidivr DWORD PTR [esi-0x37f04393]
  41c07a:	and    eax,0x5960418a
  41c07f:	adc    dl,BYTE PTR [eax+0x54de1e82]
  41c085:	pop    edx
  41c086:	cmp    al,0x2f
  41c088:	cmp    ebp,DWORD PTR [edx+0x59]
  41c08b:	shl    al,1
  41c08d:	test   eax,0x92e51d92
  41c092:	sub    esp,DWORD PTR cs:[eax+eiz*1+0x79f4692b]
  41c09a:	rcr    BYTE PTR ds:0xbb9e0931,0xef
  41c0a1:	test   al,0x8e
  41c0a3:	push   esi
  41c0a4:	dec    esi
  41c0a5:	nop
  41c0a6:	or     eax,0x8ad35079
  41c0ab:	shl    DWORD PTR ds:0x1aca7a74,0x37
  41c0b2:	js     0x41c111
  41c0b4:	outs   dx,BYTE PTR ds:[esi]
  41c0b5:	(bad)  [ebx+0x29]
  41c0b8:	imul   edx,DWORD PTR [edx+0x451016fb],0xffffffe3
  41c0bf:	daa    
  41c0c0:	es xor al,0xf6
  41c0c3:	mov    ebp,0xa32fdbd
  41c0c8:	add    DWORD PTR [eax],esp
  41c0ca:	mov    eax,0xc3ce306d
  41c0cf:	jnp    0x41c0bf
  41c0d1:	call   0xf472be06
  41c0d6:	ret    
  41c0d7:	push   edx
  41c0d8:	adc    eax,0xf189ffb9
  41c0dd:	inc    esp
  41c0de:	xchg   esi,eax
  41c0df:	in     eax,dx
  41c0e0:	pusha  
  41c0e1:	add    esp,DWORD PTR [ebx-0x68]
  41c0e4:	stc    
  41c0e5:	xchg   DWORD PTR [ebx],eax
  41c0e7:	mov    bl,0xdf
  41c0e9:	adc    al,0xdb
  41c0eb:	sbb    DWORD PTR [ebx],ecx
  41c0ed:	imul   eax,DWORD PTR [ebx],0x2a
  41c0f0:	cld    
  41c0f1:	rcr    DWORD PTR [eax+0x17f89854],cl
  41c0f7:	sub    BYTE PTR [edx],cl
  41c0f9:	call   0xa06561c
  41c0fe:	or     ecx,DWORD PTR [edx]
  41c100:	fsubr  DWORD PTR [ecx+0x52]
  41c103:	sti    
  41c104:	stos   DWORD PTR es:[edi],eax
  41c105:	xor    al,0x3c
  41c107:	jge    0x41c186
  41c109:	mov    ecx,0x81b8a550
  41c10e:	inc    esi
  41c10f:	cwde   
  41c110:	xlat   BYTE PTR ds:[ebx]
  41c111:	in     eax,dx
  41c112:	lock sub al,0xba
  41c115:	adc    BYTE PTR [ecx+0xe332e04],ah
  41c11b:	out    0x75,al
  41c11d:	gs pop ds
  41c11f:	and    ecx,DWORD PTR [edx+0x6cd02262]
  41c125:	cdq    
  41c126:	mov    DWORD PTR [esi+0x508ef41],ebx
  41c12c:	scas   al,BYTE PTR es:[edi]
  41c12d:	fs jecxz 0x41c192
  41c130:	jmp    0x3e73:0x72d5fbc9
  41c137:	pusha  
  41c138:	scas   al,BYTE PTR es:[edi]
  41c139:	xchg   edi,eax
  41c13a:	mov    edi,0x57416f06
  41c13f:	mov    ah,0xbc
  41c141:	dec    ecx
  41c142:	xchg   esp,eax
  41c143:	inc    esp
  41c144:	test   al,0xf6
  41c146:	xor    al,0xc
  41c148:	push   eax
  41c149:	push   edi
  41c14a:	aam    0xa5
  41c14c:	retf   0xda79
  41c14f:	fsqrt  
  41c151:	mov    ds:0xe54b7fdf,al
  41c156:	mov    cs,WORD PTR [eax]
  41c158:	mov    dh,0xaa
  41c15a:	push   cs
  41c15b:	sahf   
  41c15c:	js     0x41c1d4
  41c15e:	stos   DWORD PTR es:[edi],eax
  41c15f:	add    BYTE PTR [ecx+0x31ff260f],al
  41c165:	iret   
  41c166:	call   0xcf69:0x7e07dddb
  41c16d:	cli    
  41c16e:	dec    eax
  41c16f:	in     al,dx
  41c170:	mov    esp,0x8b3fe91
  41c175:	or     esp,edi
  41c177:	sahf   
  41c178:	wbinvd 
  41c17a:	cmp    esi,DWORD PTR [eax+edx*1+0x4b]
  41c17e:	jp     0x41c1fb
  41c180:	into   
  41c181:	fld    TBYTE PTR [ecx+edi*1]
  41c184:	mov    bh,0x73
  41c186:	cs xor ebx,ecx
  41c189:	dec    edi
  41c18a:	aaa    
  41c18b:	loopne 0x41c19a
  41c18d:	rcr    BYTE PTR [ebp+ecx*1+0x15],0xa2
  41c192:	sbb    BYTE PTR [edi],0x57
  41c195:	leave  
  41c196:	clc    
  41c197:	pop    es
  41c198:	ss mov al,0x82
  41c19b:	iret   
  41c19c:	int3   
  41c19d:	call   0x185e3a74
  41c1a2:	cmp    al,0xaf
  41c1a4:	cwde   
  41c1a5:	icebp  
  41c1a6:	mov    ebx,0x3dda92f1
  41c1ab:	sub    al,0x22
  41c1ad:	mov    ah,ch
  41c1af:	mov    ah,BYTE PTR [edi+0x5eaa942b]
  41c1b5:	dec    ebp
  41c1b6:	adc    DWORD PTR [ecx-0x15],edi
  41c1b9:	int3   
  41c1ba:	int3   
  41c1bb:	push   0x46fec10b
  41c1c0:	imul   ecx,esi,0xffffff91
  41c1c3:	pop    esi
  41c1c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1c5:	fldenv ds:0xd37805b3
  41c1cb:	push   eax
  41c1cc:	jbe    0x41c196
  41c1ce:	not    BYTE PTR [ecx+0x36]
  41c1d1:	adc    BYTE PTR [ebp+0x13edf779],cl
  41c1d7:	dec    ecx
  41c1d8:	or     esp,DWORD PTR [eax]
  41c1da:	in     al,dx
  41c1db:	(bad)  
  41c1dc:	and    ecx,DWORD PTR [ebx+0x10]
  41c1df:	xor    dh,BYTE PTR [ecx+esi*2+0x38]
  41c1e3:	(bad)  
  41c1e4:	fdiv   QWORD PTR gs:[ebp-0x6b]
  41c1e8:	jg     0x41c1c3
  41c1ea:	iret   
  41c1eb:	gs inc edi
  41c1ed:	mov    edx,DWORD PTR [ecx-0x73241aa9]
  41c1f3:	adc    bh,dh
  41c1f5:	cdq    
  41c1f6:	mov    esp,0x5ba97823
  41c1fb:	sub    eax,0x78ec2279
  41c200:	sbb    dl,dl
  41c202:	mov    eax,ds:0x3cee81f5
  41c207:	cmp    eax,0x7fa393b4
  41c20c:	leave  
  41c20d:	aad    0x9a
  41c20f:	mov    ebp,ebx
  41c211:	push   0xffffffde
  41c213:	dec    ebp
  41c214:	mov    edi,0xaa41235a
  41c219:	push   esp
  41c21a:	cs pushf 
  41c21c:	ret    0x5a0d
  41c21f:	mov    ah,ah
  41c221:	jle    0x41c23d
  41c223:	fadd   st(1),st
  41c225:	enter  0x2f5f,0x1e
  41c229:	(bad)  
  41c22a:	xchg   esp,eax
  41c22b:	add    eax,DWORD PTR [ecx+0x65943976]
  41c231:	push   esi
  41c232:	iret   
  41c233:	mov    dl,BYTE PTR [ebp-0x7e9c026b]
  41c239:	or     eax,0x1c2de1ba
  41c23e:	sbb    BYTE PTR [esp+esi*1],bh
  41c241:	lea    edx,[eax+0x50a13f93]
  41c247:	pop    ebp
  41c248:	lods   eax,DWORD PTR ds:[esi]
  41c249:	sbb    eax,0xa377bc72
  41c24e:	lods   al,BYTE PTR es:[esi]
  41c250:	(bad)  
  41c252:	mov    bl,0x5
  41c254:	push   edi
  41c255:	jns    0x41c1d7
  41c257:	or     al,0x17
  41c259:	pop    es
  41c25a:	daa    
  41c25b:	push   edi
  41c25c:	push   ebx
  41c25d:	out    dx,eax
  41c25e:	and    eax,0xeb6a1ca9
  41c263:	and    bl,BYTE PTR [edi+0xe5ba04e]
  41c269:	imul   DWORD PTR [esi-0x3d2f82a3]
  41c26f:	dec    esi
  41c270:	push   ebx
  41c271:	mov    ah,bl
  41c273:	mov    edx,0xb8206588
  41c278:	mov    eax,ds:0x389dafbe
  41c27d:	ror    BYTE PTR [ebp+esi*2+0x5],0xe3
  41c282:	mov    edx,?
  41c284:	cmp    DWORD PTR [esi],ebx
  41c286:	add    edi,DWORD PTR [edx+0x1699fa31]
  41c28c:	sbb    eax,0xc1cffabf
  41c291:	sbb    ah,al
  41c293:	and    edx,DWORD PTR [ecx-0x10b75289]
  41c299:	lea    ebx,[ebx+0x44eb8de]
  41c29f:	sbb    bl,BYTE PTR [esi+ecx*2+0x5d]
  41c2a3:	add    al,0x5f
  41c2a5:	sar    DWORD PTR [ecx],1
  41c2a7:	sbb    al,0x1a
  41c2a9:	jle    0x41c2b5
  41c2ab:	pop    ebx
  41c2ac:	and    DWORD PTR [eax-0x39b85848],ecx
  41c2b2:	xchg   ebx,eax
  41c2b3:	rcl    BYTE PTR [edi-0x3c],0xb1
  41c2b7:	jnp    0x41c26d
  41c2b9:	das    
  41c2ba:	call   0x730d3080
  41c2bf:	adc    DWORD PTR ds:0x13151b87,edi
  41c2c5:	fsub   DWORD PTR ds:0x68b897ac
  41c2cb:	add    BYTE PTR [esi],ah
  41c2cd:	pop    eax
  41c2ce:	aas    
  41c2cf:	leave  
  41c2d0:	iret   
  41c2d1:	ss dec ecx
  41c2d3:	inc    edx
  41c2d4:	fsubp  st(5),st
  41c2d6:	repnz pop ss
  41c2d8:	ss jns 0x41c2a9
  41c2db:	call   0xb4ea:0x81cd31fe
  41c2e2:	and    eax,0x13243528
  41c2e7:	daa    
  41c2e8:	inc    ecx
  41c2e9:	ror    DWORD PTR [ebp-0x46],cl
  41c2ec:	mov    bl,0x62
  41c2ee:	or     BYTE PTR [eax],cl
  41c2f0:	inc    edi
  41c2f1:	lods   al,BYTE PTR es:[esi]
  41c2f3:	jmp    0xfb08:0x270cf30
  41c2fa:	xor    ebx,DWORD PTR [eax+0x535a93b2]
  41c300:	addr16 daa 
  41c302:	mov    al,ds:0xb05111da
  41c307:	xor    DWORD PTR [bx],edi
  41c30a:	pop    ebx
  41c30b:	js     0x41c2fc
  41c30d:	les    ecx,FWORD PTR [eax-0x79ea97a9]
  41c313:	push   esp
  41c314:	push   esi
  41c315:	jnp    0x41c2a4
  41c317:	sbb    eax,ebx
  41c319:	mov    cl,0xa2
  41c31b:	sub    al,0xdc
  41c31d:	push   0xffffffdd
  41c31f:	jbe    0x41c319
  41c321:	dec    edi
  41c322:	mov    edx,0x9baca777
  41c327:	lds    eax,FWORD PTR [ecx+0x30cc252e]
  41c32d:	add    al,0x31
  41c32f:	adc    BYTE PTR [eax],al
  41c331:	inc    esp
  41c332:	test   eax,0x2e9c0150
  41c337:	mov    fs,WORD PTR [edx+0x5a]
  41c33a:	in     al,0x7f
  41c33c:	mov    ebp,0x22256b3d
  41c341:	push   edi
  41c342:	(bad)  
  41c343:	jp     0x41c31e
  41c345:	outs   dx,DWORD PTR ds:[esi]
  41c346:	xchg   esp,eax
  41c347:	aad    0x76
  41c349:	xor    DWORD PTR [edx],eax
  41c34b:	nop
  41c34c:	inc    esp
  41c34d:	jecxz  0x41c379
  41c34f:	fldcw  WORD PTR [edx-0x7587cdc5]
  41c355:	clc    
  41c356:	mov    edi,0xb105e7ed
  41c35b:	dec    edx
  41c35c:	popf   
  41c35d:	mov    ah,0x87
  41c35f:	pop    ebp
  41c361:	sbb    eax,0x84e492eb
  41c366:	inc    esi
  41c367:	push   edi
  41c368:	aas    
  41c369:	arpl   WORD PTR [edi],si
  41c36b:	dec    esp
  41c36c:	scas   al,BYTE PTR es:[edi]
  41c36d:	sub    DWORD PTR [ebx],edi
  41c36f:	dec    ecx
  41c370:	div    DWORD PTR [ebp+0x34]
  41c373:	xchg   ebp,eax
  41c374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c375:	mov    al,ds:0xa8c5c3d7
  41c37a:	in     eax,0x87
  41c37c:	jb     0x41c340
  41c37e:	jno    0x41c378
  41c380:	ss (bad) 
  41c382:	out    0xc9,eax
  41c384:	mov    esp,0x7fcb3a0d
  41c389:	xor    BYTE PTR [edx],0xd4
  41c38c:	sbb    DWORD PTR [eax+eax*2],ebx
  41c38f:	dec    edx
  41c390:	pop    es
  41c391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c392:	xchg   DWORD PTR [ebx-0x5dda6d33],esp
  41c398:	sub    al,BYTE PTR [ebp-0x38e82aa2]
  41c39e:	mov    al,0xa2
  41c3a0:	je     0x41c371
  41c3a2:	aam    0x91
  41c3a4:	and    DWORD PTR [esi+0x18],ebp
  41c3a7:	out    0x2b,eax
  41c3a9:	mov    al,ds:0x6c6e1cf7
  41c3ae:	shr    esp,0xe1
  41c3b1:	xlat   BYTE PTR ds:[ebx]
  41c3b2:	outs   dx,DWORD PTR ds:[esi]
  41c3b3:	mov    ds:0xed6c2a8,al
  41c3b8:	add    ebp,ebx
  41c3ba:	das    
  41c3bb:	jmp    0x41c35f
  41c3bd:	jmp    0xf70:0x6dd9f3b0
  41c3c4:	inc    ebx
  41c3c5:	fld    DWORD PTR [ecx-0x7df6ae8e]
  41c3cb:	mov    cl,0xb1
  41c3cd:	xchg   ebx,eax
  41c3ce:	pop    ebx
  41c3cf:	and    al,0xaa
  41c3d1:	fild   QWORD PTR [edi-0x49c4c954]
  41c3d7:	popa   
  41c3d8:	mov    al,ds:0xc5d335b1
  41c3dd:	or     BYTE PTR [edi+0x501e309],bh
  41c3e3:	add    BYTE PTR [esi+edx*4],0xb3
  41c3e7:	pop    esp
  41c3e8:	stc    
  41c3e9:	pop    esp
  41c3ea:	lock cmp ah,bh
  41c3ed:	push   es
  41c3ee:	sub    al,0xcd
  41c3f0:	jnp    0x41c373
  41c3f2:	les    eax,FWORD PTR [ebx+ecx*8+0x6e33d5d2]
  41c3f9:	fadd   QWORD PTR [ecx+0x483c71a8]
  41c3ff:	mov    ds:0x88cac861,eax
  41c404:	mov    ebp,edx
  41c406:	jo     0x41c3a3
  41c408:	popa   
  41c409:	xor    al,0x7a
  41c40b:	outs   dx,BYTE PTR ds:[esi]
  41c40c:	push   esi
  41c40d:	das    
  41c40e:	xchg   BYTE PTR [edx],al
  41c410:	add    bl,BYTE PTR [ecx+0x25]
  41c413:	stos   DWORD PTR es:[edi],eax
  41c414:	push   es
  41c415:	jb     0x41c41b
  41c417:	int3   
  41c418:	sub    al,BYTE PTR [ebx]
  41c41a:	inc    edi
  41c41b:	(bad)  
  41c41d:	and    BYTE PTR [ebx+0x14b6d857],ah
  41c423:	lods   eax,DWORD PTR ds:[esi]
  41c424:	and    dl,ah
  41c426:	xchg   esp,eax
  41c427:	sbb    ecx,0xbcd3f9ec
  41c42d:	mov    dl,BYTE PTR [esi-0x72e13002]
  41c433:	push   ebx
  41c434:	in     al,dx
  41c435:	inc    ecx
  41c436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c437:	jmp    FWORD PTR [edx]
  41c439:	jbe    0x41c43a
  41c43b:	inc    eax
  41c43c:	sub    eax,0x4e2b33f2
  41c441:	dec    edi
  41c442:	sbb    BYTE PTR [ecx],dh
  41c444:	les    edx,FWORD PTR [edx+0x3479aa41]
  41c44a:	(bad)  
  41c44b:	cmp    ebx,esp
  41c44d:	or     eax,0x74792e5e
  41c452:	in     eax,0x2d
  41c454:	mov    al,ds:0x4740bd6a
  41c459:	sbb    eax,0xa9657555
  41c45e:	sbb    eax,0xc97a9d88
  41c463:	lea    esi,[ecx]
  41c465:	mov    ch,0x54
  41c467:	mov    edx,DWORD PTR [edi-0x72facea1]
  41c46d:	inc    esi
  41c46e:	cmp    BYTE PTR [eax],bh
  41c470:	pop    eax
  41c471:	(bad)  
  41c472:	jl     0x41c46a
  41c474:	pop    DWORD PTR [ebx+0x46]
  41c477:	mov    ebx,0x4b8ea7d
  41c47c:	mov    dl,0x6b
  41c47e:	fiadd  WORD PTR [ecx]
  41c480:	push   esi
  41c481:	xchg   ebx,eax
  41c482:	sub    dh,dl
  41c484:	pop    ebp
  41c485:	inc    ebp
  41c486:	outs   dx,BYTE PTR ds:[esi]
  41c487:	adc    al,0x15
  41c489:	jne    0x41c46e
  41c48b:	fwait
  41c48c:	pop    eax
  41c48d:	fbld   TBYTE PTR [ecx]
  41c48f:	rcr    BYTE PTR [edx+0x36],cl
  41c492:	xlat   BYTE PTR ds:[ebx]
  41c493:	(bad)  
  41c494:	imul   esp,DWORD PTR [edi+eiz*2-0x4b3ebae4],0xe96e7c03
  41c49f:	stos   BYTE PTR es:[edi],al
  41c4a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4a1:	cli    
  41c4a2:	sbb    ecx,eax
  41c4a4:	daa    
  41c4a5:	fs add esi,0x5ce5da46
  41c4ac:	jecxz  0x41c468
  41c4ae:	xor    al,BYTE PTR [eax+0x67bf4899]
  41c4b4:	add    al,0x4f
  41c4b6:	retf   0x6d4a
  41c4b9:	mov    al,dh
  41c4bb:	std    
  41c4bc:	imul   ecx,esi,0xffffff83
  41c4bf:	adc    BYTE PTR [ebx],0x40
  41c4c2:	rcl    BYTE PTR [ebx+0x20],cl
  41c4c5:	ins    BYTE PTR es:[edi],dx
  41c4c6:	out    0x35,eax
  41c4c8:	js     0x41c4e2
  41c4ca:	call   0x71a5:0xb4b63cc7
  41c4d1:	(bad)  
  41c4d3:	jae    0x41c504
  41c4d5:	cmp    DWORD PTR [edi],ebp
  41c4d7:	dec    eax
  41c4d8:	rol    BYTE PTR [ecx],cl
  41c4da:	sbb    BYTE PTR [eax+0x58],bl
  41c4dd:	ret    0xb599
  41c4e0:	in     eax,dx
  41c4e1:	fs pop ss
  41c4e3:	les    esp,FWORD PTR [edi-0x4094c5b2]
  41c4e9:	sar    DWORD PTR [edx+ebx*1+0xfd7100b],0x2e
  41c4f1:	jo     0x41c509
  41c4f3:	fsub   st(4),st
  41c4f5:	aam    0x4d
  41c4f7:	jmp    0x2d19:0x3611c3b0
  41c4fe:	mov    ebp,0x665ab4
  41c503:	mov    ebp,0xe22f010d
  41c508:	jnp    0x41c4af
  41c50a:	xor    BYTE PTR [esi-0x19],bh
  41c50d:	fwait
  41c50e:	mov    ah,0x12
  41c510:	cmp    al,0xc3
  41c512:	hlt    
  41c513:	neg    BYTE PTR [edx-0x1db2b931]
  41c519:	imul   eax,DWORD PTR [eax+0x40],0xeb968bd5
  41c520:	jbe    0x41c544
  41c522:	mov    edi,0xab4b52dd
  41c527:	in     eax,dx
  41c528:	iret   
  41c529:	loop   0x41c4f2
  41c52b:	push   edi
  41c52c:	push   ecx
  41c52d:	fs pushf 
  41c52f:	test   esi,0x2c63587
  41c535:	add    eax,0xb7596b22
  41c53a:	jle    0x41c4f8
  41c53c:	jbe    0x41c53a
  41c53e:	es push dx
  41c541:	rcr    BYTE PTR [bx-0x35],1
  41c545:	fistp  WORD PTR [edx]
  41c547:	sbb    dl,dl
  41c549:	and    ah,0xf4
  41c54c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c54d:	dec    esp
  41c54e:	mov    ds:0x8dfb3f61,al
  41c553:	daa    
  41c554:	and    al,0xb0
  41c556:	mov    dl,0x66
  41c558:	ret    
  41c559:	bnd ja 0x41c55b
  41c55c:	adc    al,0x30
  41c55e:	inc    ebx
  41c55f:	inc    esp
  41c560:	push   ecx
  41c561:	add    al,0x25
  41c563:	or     edi,DWORD PTR [edi-0x73202be3]
  41c569:	xor    al,0x5d
  41c56b:	stos   BYTE PTR es:[edi],al
  41c56c:	mov    ebp,0xf384a475
  41c571:	sbb    esi,DWORD PTR [edx-0x4935e44a]
  41c577:	xor    DWORD PTR [edx],ecx
  41c579:	mov    dh,0x24
  41c57b:	mov    ebx,0x82270fdb
  41c580:	(bad)  
  41c581:	mov    esp,0x55f0cc41
  41c586:	mov    al,ds:0x2da41ee2
  41c58b:	push   cs
  41c58c:	data16 add BYTE PTR [eax+0x685c42b3],dh
  41c593:	sti    
  41c594:	cmp    eax,0xf5d873f5
  41c599:	std    
  41c59a:	bound  esi,QWORD PTR [ebx-0x5d]
  41c59d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c59e:	fcomp  st(7)
  41c5a0:	test   DWORD PTR [ecx-0xbf6d98],edx
  41c5a6:	push   edi
  41c5a7:	sub    al,0xd2
  41c5a9:	aad    0xb0
  41c5ab:	xor    DWORD PTR [eax-0x8],eax
  41c5ae:	mov    edx,0x36d0fae8
  41c5b3:	cmp    al,0x95
  41c5b5:	jns    0x41c5df
  41c5b7:	hlt    
  41c5b8:	je     0x41c595
  41c5ba:	inc    edi
  41c5bc:	or     bh,al
  41c5be:	int3   
  41c5bf:	xor    al,0xe3
  41c5c1:	xchg   esi,eax
  41c5c2:	and    bl,BYTE PTR [esi+ebp*1]
  41c5c5:	cmc    
  41c5c6:	jbe    0x41c62b
  41c5c8:	leave  
  41c5c9:	push   cs
  41c5ca:	pushf  
  41c5cb:	cli    
  41c5cc:	test   bl,0xed
  41c5cf:	sbb    al,0xa0
  41c5d1:	xchg   esp,eax
  41c5d2:	clc    
  41c5d3:	adc    esp,DWORD PTR [ecx-0x5a]
  41c5d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5d7:	or     ecx,0x3926ec37
  41c5dd:	xchg   BYTE PTR [edi+ecx*1+0x4a],al
  41c5e1:	fisttp DWORD PTR [ebx+0x37]
  41c5e4:	arpl   WORD PTR [ecx],bx
  41c5e6:	imul   ebx,DWORD PTR [ebx],0x2c
  41c5e9:	or     ecx,DWORD PTR [esi-0x7d]
  41c5ec:	push   ebp
  41c5ed:	inc    DWORD PTR [esi-0x4a87acef]
  41c5f3:	dec    esi
  41c5f4:	push   ss
  41c5f5:	aam    0xd9
  41c5f7:	jbe    0x41c657
  41c5f9:	xchg   esi,eax
  41c5fa:	sub    dl,BYTE PTR [edx-0x6c30f4e1]
  41c600:	pop    ss
  41c601:	in     al,dx
  41c602:	sahf   
  41c603:	dec    edi
  41c604:	test   al,0x5d
  41c606:	mov    edx,0x75292f41
  41c60b:	inc    edi
  41c60c:	adc    al,0x57
  41c60e:	test   al,0xbf
  41c610:	adc    esi,DWORD PTR [esi-0x52ebddd9]
  41c616:	pop    ss
  41c617:	jge    0x41c655
  41c619:	mov    bh,BYTE PTR [esi-0x77]
  41c61c:	fld    TBYTE PTR [eax+ecx*4-0x7f]
  41c620:	test   DWORD PTR [edx],esi
  41c622:	out    dx,eax
  41c623:	popa   
  41c624:	adc    esp,DWORD PTR [ebx+0x58f47a75]
  41c62a:	adc    eax,0x7ede1209
  41c62f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c630:	mul    ah
  41c632:	pop    edi
  41c633:	and    al,0xea
  41c635:	les    ebp,FWORD PTR [eax]
  41c637:	aad    0x5a
  41c639:	popa   
  41c63a:	push   edx
  41c63b:	(bad)  
  41c63c:	cld    
  41c63d:	dec    esi
  41c63e:	cmc    
  41c63f:	and    DWORD PTR [ebp+0x46],esp
  41c642:	int3   
  41c643:	add    eax,0x4b72bc5
  41c648:	xor    esi,esi
  41c64a:	fwait
  41c64b:	aaa    
  41c64c:	data16 sub al,0x2b
  41c64f:	mov    esp,0x1f2249c1
  41c654:	jp     0x41c60b
  41c656:	lea    ebp,[ebp+0x76]
  41c659:	retf   
  41c65a:	and    al,0x8e
  41c65c:	sub    eax,0xb9a0da10
  41c661:	inc    ebx
  41c662:	cmp    BYTE PTR [edi+0x2f],bl
  41c665:	jmp    0x6b0d3b
  41c66a:	cs enter 0x7d56,0x8f
  41c66f:	clc    
  41c670:	sub    eax,0x272fd041
  41c675:	mov    ecx,0x89165ba
  41c67a:	retf   0xc7a4
  41c67d:	jmp    0x3f46:0x178cf497
  41c684:	jge    0x41c65d
  41c686:	pop    ebx
  41c687:	add    ebp,eax
  41c689:	push   es
  41c68a:	add    sp,WORD PTR [edx+0x57]
  41c68e:	lea    edx,[eax]
  41c690:	(bad)  
  41c692:	ins    BYTE PTR es:[edi],dx
  41c693:	mov    edx,0xd33ff94e
  41c698:	mov    edi,0xe5c27e82
  41c69d:	cld    
  41c69e:	mov    bl,0x8c
  41c6a0:	add    BYTE PTR [ebp-0x3f0bed0f],bh
  41c6a6:	fist   DWORD PTR [eax+0xe4dad5d]
  41c6ad:	mov    al,ds:0x7aff1c51
  41c6b2:	arpl   di,bp
  41c6b4:	xchg   BYTE PTR [eax],cl
  41c6b6:	cmp    al,0xe
  41c6b8:	mov    ebp,0x1c7b67c3
  41c6bd:	retf   
  41c6be:	(bad)  
  41c6bf:	mov    cl,0x16
  41c6c1:	ss retf 0xca3f
  41c6c5:	outs   dx,DWORD PTR ds:[esi]
  41c6c6:	mov    edi,0xb4d6b4c9
  41c6cb:	jns    0x41c674
  41c6cd:	pusha  
  41c6ce:	jns    0x41c73e
  41c6d0:	mov    ch,0xbe
  41c6d2:	and    eax,0x794708fa
  41c6d7:	inc    ebp
  41c6d8:	jo     0x41c6b6
  41c6da:	push   0x91842e2a
  41c6df:	mov    cl,0xc4
  41c6e1:	mov    dh,0xc9
  41c6e3:	outs   dx,DWORD PTR ds:[esi]
  41c6e4:	jb     0x41c6be
  41c6e6:	call   0x1be0:0xa3003029
  41c6ed:	cmp    BYTE PTR [edx-0x4e28e928],al
  41c6f3:	fist   DWORD PTR [ecx+0x2e]
  41c6f6:	daa    
  41c6f7:	ss push 0x2b94870a
  41c6fd:	or     DWORD PTR [esi+ebp*1],edx
  41c700:	mov    bh,0x7b
  41c702:	xor    ebx,DWORD PTR [ecx-0x3b]
  41c705:	mov    bl,0xa
  41c707:	inc    ebx
  41c708:	into   
  41c709:	sbb    BYTE PTR [edx],0x3
  41c70c:	pop    ecx
  41c70d:	jnp    0x41c719
  41c70f:	push   esp
  41c710:	cdq    
  41c711:	aaa    
  41c712:	and    BYTE PTR [ecx],dh
  41c714:	sti    
  41c715:	sub    edx,DWORD PTR [ecx-0x9]
  41c718:	scas   al,BYTE PTR es:[edi]
  41c719:	mov    dh,dh
  41c71b:	xchg   ecx,eax
  41c71c:	cmp    al,0x47
  41c71e:	fadd   DWORD PTR [ecx+0x7e]
  41c721:	fadd   DWORD PTR [ebp+ecx*2-0x2a60b7ba]
  41c728:	mov    al,ch
  41c72a:	(bad)  
  41c72c:	mov    edx,0x2c7d3195
  41c731:	sbb    al,0xde
  41c733:	inc    esp
  41c734:	push   cs
  41c735:	enter  0xe36f,0x10
  41c739:	rol    BYTE PTR [ebx-0x4],cl
  41c73c:	push   es
  41c73d:	jge    0x41c76b
  41c73f:	push   0xd10049ba
  41c744:	fld    DWORD PTR [edi+0x59]
  41c747:	inc    edi
  41c748:	call   0x7d66efa8
  41c74d:	lea    ecx,[ebx]
  41c74f:	push   es
  41c750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c751:	(bad)  
  41c752:	add    ebp,DWORD PTR [ebx+eax*4+0x57]
  41c756:	sub    esp,DWORD PTR [edi-0x35]
  41c759:	ret    
  41c75a:	(bad)  
  41c75b:	lea    ebp,[eax]
  41c75d:	pop    ebp
  41c75e:	ds stc 
  41c760:	xor    ch,BYTE PTR [esi+0x4]
  41c763:	pop    esi
  41c764:	xchg   edx,eax
  41c765:	jmp    0xd316acb0
  41c76a:	rcl    DWORD PTR [esi],1
  41c76c:	lods   eax,DWORD PTR ds:[esi]
  41c76d:	dec    edi
  41c76e:	out    dx,eax
  41c76f:	loope  0x41c701
  41c771:	pop    ecx
  41c772:	pop    ecx
  41c773:	(bad)  
  41c774:	jmp    0x41c7f2
  41c776:	pavgb  mm5,mm1
  41c779:	shl    DWORD PTR [eax],cl
  41c77b:	push   eax
  41c77c:	sbb    BYTE PTR [ebp+0x7fc2a712],bl
  41c782:	pop    ss
  41c783:	(bad)  
  41c784:	adc    al,0xd7
  41c786:	xor    eax,ecx
  41c788:	test   al,0x6c
  41c78a:	sub    ch,BYTE PTR [ebx+0xcb4c693]
  41c790:	test   ebp,ebx
  41c792:	inc    esp
  41c793:	int3   
  41c794:	sbb    eax,0x12ed65d2
  41c799:	iret   
  41c79a:	mov    esp,0xd6ba8392
  41c79f:	loope  0x41c725
  41c7a1:	aaa    
  41c7a2:	je     0x41c742
  41c7a4:	aaa    
  41c7a5:	clc    
  41c7a6:	lea    ebp,[ecx+0x60aa41e1]
  41c7ac:	push   edx
  41c7ad:	sar    ah,1
  41c7af:	push   edx
  41c7b0:	shr    DWORD PTR [esi-0x71],0x71
  41c7b4:	test   BYTE PTR [eax+0x4f2519fd],bh
  41c7ba:	stc    
  41c7bb:	in     al,0x73
  41c7bd:	sub    eax,0xd648ab1f
  41c7c2:	pop    ss
  41c7c3:	pop    ds
  41c7c4:	(bad)  
  41c7c5:	outs   dx,BYTE PTR ds:[esi]
  41c7c6:	mov    bh,0x3c
  41c7c8:	scas   eax,DWORD PTR es:[edi]
  41c7c9:	shr    al,0xfd
  41c7cc:	or     BYTE PTR [ebp-0x70],0x80
  41c7d0:	cmp    bh,dl
  41c7d2:	sbb    ebp,DWORD PTR [ebx+0x38]
  41c7d5:	fnstenv [esi+0x69]
  41c7d8:	and    DWORD PTR [esi+0x1a0d57bb],esp
  41c7de:	mov    al,ds:0xa5f72ff3
  41c7e3:	repz jp 0x41c81c
  41c7e6:	jnp    0x41c844
  41c7e8:	nop
  41c7e9:	stc    
  41c7ea:	sbb    bh,ch
  41c7ec:	mov    dl,0x28
  41c7ee:	pop    es
  41c7ef:	push   ecx
  41c7f0:	adc    esp,ebp
  41c7f2:	jmp    0x41c86b
  41c7f4:	mov    eax,ds:0xa7f0bc05
  41c7f9:	ror    DWORD PTR [esi],1
  41c7fb:	repz push 0x46
  41c7fe:	std    
  41c7ff:	lods   eax,DWORD PTR ds:[esi]
  41c800:	test   DWORD PTR [eax-0x7080c27b],ecx
  41c806:	cmp    esi,DWORD PTR [ebx]
  41c808:	jmp    0xc443:0xee12e7d3
  41c80f:	push   0x2408ebb2
  41c814:	add    DWORD PTR [eax-0xd],ecx
  41c817:	jmp    0x813c4d71
  41c81c:	test   al,0xc8
  41c81e:	mov    edi,0xe2546a65
  41c823:	mov    ebp,0xa319063d
  41c828:	cmc    
  41c829:	in     eax,0x8e
  41c82b:	add    dh,BYTE PTR [esi-0x22]
  41c82e:	out    0x9c,eax
  41c830:	scas   eax,DWORD PTR es:[edi]
  41c831:	sar    BYTE PTR [esi],1
  41c833:	dec    eax
  41c834:	jp     0x41c8b1
  41c836:	mul    ch
  41c838:	fchs   
  41c83a:	inc    ebx
  41c83b:	mov    es,WORD PTR [esi-0x4686fb89]
  41c841:	cs jmp 0x565:0xb288dabe
  41c849:	cmp    al,0xdd
  41c84b:	ss xchg edx,eax
  41c84d:	jb     0x41c887
  41c84f:	js     0x41c81d
  41c851:	in     eax,0xc7
  41c853:	scas   eax,DWORD PTR es:[edi]
  41c854:	inc    esi
  41c855:	call   0x95a4:0x11ec15d8
  41c85c:	loop   0x41c828
  41c85e:	jns    0x41c832
  41c860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c861:	pop    ebx
  41c862:	pop    esi
  41c863:	cmp    DWORD PTR [eax],0xc2b23473
  41c869:	xchg   esp,eax
  41c86a:	mov    ebx,ecx
  41c86c:	neg    DWORD PTR [ebx+0x65]
  41c86f:	popf   
  41c870:	push   ecx
  41c871:	imul   ebx,DWORD PTR [esi-0x72d2d7d8],0xffffffbb
  41c878:	je     0x41c806
  41c87a:	cmp    ah,BYTE PTR [edi]
  41c87c:	call   0xb6ab:0x6e075b75
  41c883:	mov    fs,WORD PTR [edx+0x983fbfe]
  41c889:	dec    esi
  41c88a:	adc    eax,DWORD PTR ds:0xeac43315
  41c890:	jmp    0x41c86e
  41c892:	sub    ecx,DWORD PTR [ebx-0x70bfa14c]
  41c898:	in     al,0xef
  41c89a:	pop    ecx
  41c89b:	into   
  41c89c:	stos   BYTE PTR es:[edi],al
  41c89d:	pop    es
  41c89e:	xor    eax,0xfc533905
  41c8a3:	outs   dx,BYTE PTR ds:[esi]
  41c8a4:	cdq    
  41c8a5:	das    
  41c8a6:	push   edx
  41c8a7:	scas   al,BYTE PTR es:[edi]
  41c8a8:	or     al,0x6a
  41c8aa:	inc    edx
  41c8ab:	out    dx,al
  41c8ac:	inc    esi
  41c8ad:	jns    0x41c8c1
  41c8af:	mov    ebp,DWORD PTR [esp+ecx*8-0x1963a880]
  41c8b6:	cwde   
  41c8b7:	pop    es
  41c8b8:	out    dx,eax
  41c8b9:	push   0x66
  41c8bb:	fild   DWORD PTR [edi]
  41c8bd:	xor    DWORD PTR ds:0x508513ca,edi
  41c8c3:	mov    esp,0xfe0cdf84
  41c8c8:	sub    DWORD PTR [edi],eax
  41c8ca:	retf   
  41c8cb:	pop    eax
  41c8cc:	sub    ah,BYTE PTR [edx]
  41c8ce:	sub    eax,0xf051355d
  41c8d3:	add    DWORD PTR [ebp-0x76],ecx
  41c8d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8d7:	mov    cl,BYTE PTR [edx+0x224917ed]
  41c8dd:	dec    esi
  41c8de:	retf   0xcfa2
  41c8e1:	push   0xed0b0565
  41c8e6:	test   eax,0xaf1e42fc
  41c8eb:	int    0x1e
  41c8ed:	mov    ebp,0xd3f90ac4
  41c8f2:	(bad)  
  41c8f3:	test   BYTE PTR [eax],0xc1
  41c8f6:	mov    dh,0xea
  41c8f8:	jns    0x41c89f
  41c8fa:	fadd   st,st(3)
  41c8fc:	mov    ebp,0x22e56014
  41c901:	pop    es
  41c902:	pop    ecx
  41c903:	pop    eax
  41c904:	jmp    FWORD PTR [edi-0x18771d71]
  41c90a:	push   esi
  41c90b:	ja     0x41c931
  41c90d:	mov    bl,0x19
  41c90f:	loopne 0x41c8eb
  41c911:	adc    BYTE PTR [esi],dl
  41c913:	or     al,0xf3
  41c915:	mov    cl,0xa9
  41c917:	sbb    eax,0xd489a1e6
  41c91c:	cmp    eax,0x44f0adaf
  41c921:	test   DWORD PTR [ecx+edx*2],ecx
  41c924:	mov    dl,al
  41c926:	test   al,0xe
  41c928:	mov    esp,0x364d20bf
  41c92d:	mov    WORD PTR [edx-0x52012eda],ss
  41c933:	dec    ebp
  41c934:	xor    esi,0x200c092c
  41c93a:	xor    ah,BYTE PTR [edi]
  41c93c:	test   al,0x57
  41c93e:	mov    bh,0xd9
  41c940:	es jg  0x41c9ba
  41c943:	les    ebp,FWORD PTR [edx]
  41c945:	fidivr DWORD PTR [ebp-0x16]
  41c948:	stos   DWORD PTR es:[edi],eax
  41c949:	and    al,0x0
  41c94b:	xchg   esp,eax
  41c94c:	rcr    dh,0xeb
  41c94f:	pushf  
  41c950:	jno    0x41c9b7
  41c952:	test   BYTE PTR [edx+0x5a],bh
  41c955:	xchg   DWORD PTR [ebx-0x275248c0],esp
  41c95b:	in     eax,dx
  41c95c:	outs   dx,BYTE PTR ds:[esi]
  41c95d:	xor    al,0x3
  41c95f:	fdivr  QWORD PTR [ebp+eiz*1+0x6c]
  41c963:	aaa    
  41c964:	cld    
  41c965:	sar    BYTE PTR [ebx],cl
  41c967:	arpl   WORD PTR [edi-0x320750dc],bp
  41c96d:	into   
  41c96e:	cwde   
  41c96f:	mov    ebx,0xf761e34d
  41c974:	test   edx,edx
  41c976:	enter  0x58a4,0x27
  41c97a:	ja     0x41c944
  41c97c:	outs   dx,DWORD PTR ds:[esi]
  41c97d:	out    0x8c,eax
  41c97f:	ds retf 0x8a42
  41c983:	push   esi
  41c984:	mov    WORD PTR [ecx-0xa],ds
  41c987:	mov    ds:0x764aef90,al
  41c98c:	cwde   
  41c98d:	xor    esi,DWORD PTR [esi-0x69]
  41c990:	push   ecx
  41c991:	cdq    
  41c992:	cmp    al,0xd6
  41c994:	mov    BYTE PTR [edx-0x4bbfbb6],cl
  41c99a:	sti    
  41c99b:	cmp    BYTE PTR [ebp+0x9],al
  41c99e:	or     BYTE PTR [edi],ch
  41c9a0:	std    
  41c9a1:	cli    
  41c9a2:	or     ecx,DWORD PTR [eax-0x53a89eaa]
  41c9a8:	cli    
  41c9a9:	cs fs test eax,0x45583a59
  41c9b0:	out    dx,eax
  41c9b1:	push   esp
  41c9b2:	cwde   
  41c9b3:	fiadd  DWORD PTR ds:0xf80ca7
  41c9b9:	push   esi
  41c9ba:	or     bh,BYTE PTR [edi-0x5c134fcd]
  41c9c0:	cmp    esi,esi
  41c9c2:	stos   DWORD PTR es:[edi],eax
  41c9c3:	jb     0x41c96b
  41c9c5:	imul   DWORD PTR [esp+ebx*4]
  41c9c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9c9:	sbb    bl,BYTE PTR [ebx+edx*2+0xa]
  41c9cd:	fwait
  41c9ce:	mov    bh,0xf
  41c9d0:	jmp    0x6a2da17b
  41c9d5:	cmp    eax,DWORD PTR [esi-0x5b]
  41c9d8:	icebp  
  41c9d9:	test   al,0xa7
  41c9db:	jae    0x41ca57
  41c9dd:	jae    0x41c998
  41c9df:	outs   dx,BYTE PTR ds:[esi]
  41c9e0:	xchg   ebp,eax
  41c9e1:	mov    ds:0x1b469667,eax
  41c9e6:	stc    
  41c9e7:	mov    ebx,0xfb778563
  41c9ec:	rcl    BYTE PTR fs:[edi-0x5dd9bf1e],cl
  41c9f3:	fwait
  41c9f4:	or     BYTE PTR [eax-0x7919e2a0],al
  41c9fa:	xchg   ebp,eax
  41c9fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9fc:	xchg   edi,eax
  41c9fd:	dec    esp
  41c9fe:	mov    eax,0xc511d5cc
  41ca03:	mov    edi,eax
  41ca05:	mov    cl,BYTE PTR [eax]
  41ca07:	daa    
  41ca08:	jnp    0x41c9cb
  41ca0a:	adc    DWORD PTR [ebx],edi
  41ca0c:	dec    ecx
  41ca0d:	sbb    ebp,eax
  41ca0f:	sbb    eax,0x95dd9d25
  41ca14:	int3   
  41ca15:	sbb    al,0xd1
  41ca17:	gs push ebx
  41ca19:	inc    edx
  41ca1a:	sub    al,0xc6
  41ca1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca1d:	push   eax
  41ca1e:	int    0x2c
  41ca20:	in     eax,dx
  41ca21:	ds ret 0x72e2
  41ca25:	xor    edi,DWORD PTR [edx+ebp*1]
  41ca28:	outs   dx,DWORD PTR ds:[esi]
  41ca29:	add    DWORD PTR [eax+0x7],edx
  41ca2c:	stos   DWORD PTR es:[edi],eax
  41ca2d:	inc    edx
  41ca2e:	or     BYTE PTR ds:0xb5a21360,ah
  41ca34:	aam    0xb8
  41ca36:	xor    DWORD PTR [esi-0x3e],edi
  41ca39:	sub    eax,0x79a2a7c0
  41ca3e:	dec    esi
  41ca3f:	mov    dh,0xdc
  41ca41:	test   DWORD PTR [ebx],edi
  41ca43:	jge    0x41ca5c
  41ca45:	ret    
  41ca46:	or     dh,BYTE PTR [edx-0x2a69b2ee]
  41ca4c:	or     al,0x35
  41ca4e:	push   ss
  41ca4f:	ins    DWORD PTR es:[edi],dx
  41ca50:	jmp    0xbe4bc88e
  41ca55:	dec    esp
  41ca56:	ret    0x425d
  41ca59:	push   ecx
  41ca5a:	jmp    0x41c9f9
  41ca5c:	sub    BYTE PTR [edx+0x6],0xcf
  41ca60:	sar    BYTE PTR ds:0xabe0ddfd,1
  41ca66:	mov    ch,0x35
  41ca68:	xchg   esi,eax
  41ca69:	lods   al,BYTE PTR ds:[esi]
  41ca6a:	fxch   st(6)
  41ca6c:	mov    ds:0xa8cfff47,eax
  41ca71:	cli    
  41ca72:	mov    ds,WORD PTR [edi-0x42]
  41ca75:	popa   
  41ca76:	push   eax
  41ca77:	out    0x58,eax
  41ca79:	dec    ebp
  41ca7a:	inc    ebp
  41ca7b:	add    eax,DWORD PTR [esi+0x1d118f4]
  41ca81:	in     eax,0xb6
  41ca83:	loopne 0x41ca95
  41ca85:	fidiv  DWORD PTR ds:0x5beda316
  41ca8b:	mov    dl,0x2
  41ca8d:	xlat   BYTE PTR ds:[ebx]
  41ca8e:	jns    0x41cac3
  41ca90:	icebp  
  41ca91:	mov    bl,0x97
  41ca93:	(bad)  
  41ca94:	mov    ecx,edi
  41ca96:	mov    ch,0x35
  41ca98:	cli    
  41ca99:	jns    0x41caa9
  41ca9b:	ja     0x41cad2
  41ca9d:	push   esp
  41ca9e:	test   DWORD PTR [esi-0x1a],0xba17af50
  41caa5:	pop    edi
  41caa6:	or     esi,ebp
  41caa8:	mov    eax,ds:0xf3e93e14
  41caad:	or     dh,BYTE PTR [ecx]
  41caaf:	stos   DWORD PTR es:[edi],eax
  41cab0:	and    eax,0x8e184233
  41cab5:	jns    0x41cae4
  41cab7:	pop    ss
  41cab8:	stos   BYTE PTR es:[edi],al
  41cab9:	mov    edx,0x57411f28
  41cabe:	inc    esi
  41cabf:	push   ebp
  41cac0:	ret    0x2367
  41cac3:	or     al,0xe6
  41cac5:	ror    BYTE PTR [edx],1
  41cac7:	xchg   ebp,eax
  41cac8:	mov    DWORD PTR [esi+0x1e],0xfbc8d8ff
  41cacf:	or     al,0x49
  41cad1:	cmp    al,0x67
  41cad3:	cld    
  41cad4:	inc    esp
  41cad5:	fisub  WORD PTR gs:[ecx+0x3c65cbd7]
  41cadc:	push   esi
  41cadd:	fwait
  41cade:	js     0x41cafd
  41cae0:	mov    DWORD PTR [esi+0x41],ebx
  41cae3:	dec    esp
  41cae4:	mov    ebp,DWORD PTR [edx]
  41cae6:	ins    BYTE PTR es:[edi],dx
  41cae7:	jp     0x41cb2a
  41cae9:	mov    ch,cl
  41caeb:	out    0x5d,eax
  41caed:	and    ch,BYTE PTR [ebp+0x43192ec4]
  41caf3:	mov    ds:0xd212a6d5,al
  41caf8:	ins    DWORD PTR es:[edi],dx
  41caf9:	fcmovbe st,st(3)
  41cafb:	add    DWORD PTR [edx+0x15f6c44b],esi
  41cb01:	or     eax,0x30d3ab93
  41cb06:	xchg   esp,eax
  41cb07:	lods   eax,DWORD PTR ds:[esi]
  41cb08:	les    esi,FWORD PTR [ebp-0x1408c184]
  41cb0e:	jmp    0xb9ee:0x1ef9d3
  41cb15:	dec    ecx
  41cb16:	mov    esi,0x69847596
  41cb1b:	in     al,0x2b
  41cb1d:	imul   eax,DWORD PTR [edi],0x7c
  41cb20:	retf   
  41cb21:	mov    ah,0xc
  41cb23:	push   edi
  41cb25:	arpl   bp,cx
  41cb27:	(bad)
  41cb2b:	loopne 0x41cab0
  41cb2d:	fidivr WORD PTR [ecx+0x4a]
  41cb30:	ins    DWORD PTR es:[edi],dx
  41cb31:	adc    edx,DWORD PTR [ecx-0x2598a8dc]
  41cb37:	inc    edx
  41cb38:	push   es
  41cb39:	sbb    DWORD PTR [edi-0x33],esp
  41cb3c:	sub    eax,0x17e1755e
  41cb41:	adc    ebx,DWORD PTR [ecx]
  41cb43:	sub    al,0x86
  41cb45:	es jmpw 0x7110
  41cb4a:	enter  0x7348,0x98
  41cb4e:	mov    eax,0xa3d6ab67
  41cb53:	sbb    edx,edi
  41cb55:	test   al,0x1b
  41cb57:	adc    eax,0xea3391d8
  41cb5c:	mov    eax,DWORD PTR [ecx+0xfc5fb38]
  41cb62:	xchg   ebp,eax
  41cb63:	into   
  41cb64:	data16 sti 
  41cb66:	cmp    BYTE PTR [ecx],cl
  41cb68:	push   ebp
  41cb69:	je     0x41cb64
  41cb6b:	mov    ch,0xbb
  41cb6d:	hlt    
  41cb6e:	clc    
  41cb6f:	mov    al,0xf4
  41cb71:	dec    ebx
  41cb72:	gs sahf 
  41cb74:	loop   0x41cb1f
  41cb76:	mov    edi,0x462bfdb3
  41cb7b:	icebp  
  41cb7c:	jns    0x41cb71
  41cb7e:	repz jge 0x41cb2e
  41cb81:	jnp    0x41cbe8
  41cb83:	mov    al,0x21
  41cb85:	pop    ebx
  41cb86:	cdq    
  41cb87:	mov    esi,esi
  41cb89:	lahf   
  41cb8a:	addr16 mov ch,0x34
  41cb8d:	jo     0x41cb4e
  41cb8f:	fwait
  41cb90:	jnp    0x41cb5f
  41cb92:	iret   
  41cb93:	mov    eax,DWORD PTR [ecx+0x36]
  41cb96:	scas   al,BYTE PTR es:[edi]
  41cb97:	sub    ah,BYTE PTR gs:[ecx+0xaf7fdf7]
  41cb9e:	test   eax,0x3d2a454b
  41cba3:	out    0xe3,eax
  41cba5:	out    dx,al
  41cba6:	sbb    DWORD PTR [ecx+0x2dea63b2],ebx
  41cbac:	sbb    BYTE PTR [ecx-0x63],dl
  41cbaf:	lahf   
  41cbb0:	dec    edx
  41cbb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbb2:	std    
  41cbb3:	ja     0x41cba0
  41cbb5:	retf   
  41cbb6:	fxtract 
  41cbb8:	ins    BYTE PTR es:[edi],dx
  41cbb9:	ds data16 mov cl,0xd1
  41cbbd:	dec    esp
  41cbbe:	cs or  al,0x2f
  41cbc1:	jmp    0x41cb5f
  41cbc3:	aaa    
  41cbc4:	xor    eax,0xd9fdcb22
  41cbc9:	dec    DWORD PTR [ebx+0x5f64e4f]
  41cbcf:	in     eax,dx
  41cbd0:	aas    
  41cbd1:	cmp    DWORD PTR [ecx+0x783720df],edx
  41cbd7:	xchg   DWORD PTR [ebp*2+0x67f29ccc],edi
  41cbde:	add    esp,esp
  41cbe0:	jo     0x41cbe6
  41cbe2:	daa    
  41cbe3:	sub    DWORD PTR [ebp-0x5a],ebx
  41cbe6:	cdq    
  41cbe7:	(bad)  
  41cbe8:	fcmovnu st,st(7)
  41cbea:	lods   al,BYTE PTR ds:[esi]
  41cbeb:	dec    edx
  41cbec:	lock mov ah,0xc0
  41cbef:	sub    DWORD PTR [edx-0x162d156a],edx
  41cbf5:	arpl   WORD PTR [ebx+0x49c04dff],ax
  41cbfb:	(bad)  
  41cbfc:	scas   eax,DWORD PTR es:[edi]
  41cbfd:	cmp    BYTE PTR [edi-0x9fabf37],al
  41cc03:	mov    bl,0x4a
  41cc05:	inc    DWORD PTR [edi]
  41cc07:	adc    DWORD PTR [ecx-0x4e],ecx
  41cc0a:	aam    0x79
  41cc0c:	push   edi
  41cc0d:	mov    eax,ds:0x8fae6ab1
  41cc12:	mov    ecx,0x39b2c8bb
  41cc17:	jns    0x41cbb1
  41cc19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc1a:	ret    
  41cc1b:	nop
  41cc1c:	push   ebp
  41cc1d:	mov    ecx,0x3ba8a69e
  41cc22:	lahf   
  41cc23:	pop    ss
  41cc24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc25:	dec    ebx
  41cc26:	push   0xffffffdc
  41cc28:	shr    BYTE PTR [esi+0x3559b33],cl
  41cc2e:	xor    al,0x4c
  41cc30:	jle    0x41cc55
  41cc32:	mov    al,ds:0xea6c2a06
  41cc37:	int3   
  41cc38:	cmp    BYTE PTR [ecx+eiz*1],dl
  41cc3b:	jge    0x41cc35
  41cc3d:	sbb    ebp,ebp
  41cc3f:	scas   eax,DWORD PTR es:[edi]
  41cc40:	ror    ecx,cl
  41cc42:	icebp  
  41cc43:	test   BYTE PTR [ecx-0x73ad1095],0x18
  41cc4a:	fs inc esi
  41cc4c:	ins    BYTE PTR es:[edi],dx
  41cc4d:	test   al,0x93
  41cc4f:	shl    DWORD PTR [ecx],0x6f
  41cc52:	cmp    DWORD PTR [esi-0x44ffd89d],eax
  41cc58:	mov    edi,0xf70e9b6a
  41cc5d:	aaa    
  41cc5e:	mov    DWORD PTR [edi],ebp
  41cc60:	inc    edi
  41cc61:	sub    eax,0x79d3925
  41cc66:	push   ebx
  41cc67:	jo     0x41ccab
  41cc69:	and    eax,0xdf090a6c
  41cc6e:	mov    eax,0xad4449c7
  41cc73:	arpl   si,bx
  41cc75:	test   DWORD PTR [esi-0x520b36b0],0x9eb070de
  41cc7f:	sbb    cl,cl
  41cc81:	rcr    BYTE PTR [ebx+0x6980b64b],1
  41cc87:	call   0x526f:0xbbdb5cab
  41cc8e:	push   0xa87d4d7d
  41cc93:	(bad)  
  41cc94:	ffreep st(7)
  41cc96:	(bad)  
  41cc97:	daa    
  41cc98:	push   ebx
  41cc99:	lods   eax,DWORD PTR ds:[esi]
  41cc9a:	pop    es
  41cc9b:	test   eax,0x63401b5b
  41cca0:	xchg   edx,eax
  41cca1:	mov    al,0x7d
  41cca3:	push   cs
  41cca4:	cs add al,0xe1
  41cca7:	push   esi
  41cca8:	test   eax,0x7310f0f5
  41ccad:	xchg   BYTE PTR [eax-0x49966861],dh
  41ccb3:	mov    BYTE PTR [ecx+0x3f],ch
  41ccb6:	adc    dh,ch
  41ccb8:	xchg   ecx,eax
  41ccb9:	mov    ebx,0x382c5380
  41ccbe:	mov    DWORD PTR [ecx],edi
  41ccc0:	test   ah,dl
  41ccc2:	jle    0x41cc5e
  41ccc4:	mov    ebp,0x5213a92c
  41ccca:	jo     0x41cd29
  41cccc:	out    dx,eax
  41cccd:	shl    DWORD PTR [eax],cl
  41cccf:	xchg   ebx,eax
  41ccd0:	add    cl,BYTE PTR [ebp-0x1b8bebe]
  41ccd6:	shl    al,1
  41ccd8:	sub    al,0x19
  41ccda:	aad    0xa
  41ccdc:	popf   
  41ccdd:	in     eax,dx
  41ccde:	cli    
  41ccdf:	or     bl,BYTE PTR [eax+eiz*2-0x262f0e94]
  41cce6:	in     eax,dx
  41cce7:	xchg   ebp,edi
  41cce9:	out    dx,al
  41ccea:	cdq    
  41cceb:	bound  edx,QWORD PTR [ebx+eiz*2+0x61dead8]
  41ccf2:	cwde   
  41ccf3:	test   BYTE PTR [esi-0x65],0xa2
  41ccf7:	mov    eax,0x11ab9d97
  41ccfc:	das    
  41ccfd:	inc    ecx
  41ccfe:	gs aam 0xe3
  41cd01:	gs je  0x41cd48
  41cd04:	test   DWORD PTR [eax+0x28],0x66d3d5f9
  41cd0b:	inc    edx
  41cd0c:	test   ch,bl
  41cd0e:	(bad)  
  41cd0f:	and    eax,0x2704300e
  41cd14:	popf   
  41cd15:	cmc    
  41cd16:	cwde   
  41cd17:	jl     0x41cd0d
  41cd19:	xchg   DWORD PTR [ebx-0x3e],esp
  41cd1c:	xchg   edx,eax
  41cd1d:	popf   
  41cd1e:	loope  0x41cd36
  41cd20:	lea    edi,[esi+0x4818ae57]
  41cd26:	push   0x3c6ddded
  41cd2b:	pop    eax
  41cd2c:	ins    DWORD PTR es:[edi],dx
  41cd2d:	mov    edi,0x2a43c30c
  41cd32:	adc    edx,DWORD PTR [ecx+eiz*1+0x3e]
  41cd36:	jecxz  0x41cdb4
  41cd38:	jo     0x41cd87
  41cd3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd3b:	outs   dx,DWORD PTR ds:[esi]
  41cd3c:	inc    ebp
  41cd3d:	jb     0x41cd53
  41cd3f:	fnstenv [edi-0x4c]
  41cd42:	add    al,0xdd
  41cd44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd45:	outs   dx,DWORD PTR ds:[esi]
  41cd46:	push   ebp
  41cd47:	pop    ecx
  41cd48:	xchg   esi,eax
  41cd49:	shl    BYTE PTR [edx+0x20982c89],cl
  41cd4f:	and    DWORD PTR [ecx+0x686c72c4],ecx
  41cd55:	mov    ebp,0x3a58a875
  41cd5a:	cdq    
  41cd5b:	cwde   
  41cd5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd5d:	push   eax
  41cd5e:	dec    edi
  41cd5f:	inc    edx
  41cd60:	cmp    eax,0x24c8fa53
  41cd65:	nop
  41cd66:	ins    DWORD PTR es:[edi],dx
  41cd67:	ss mov bh,0x19
  41cd6a:	bound  esp,QWORD PTR [eax]
  41cd6c:	mov    ah,0x27
  41cd6e:	push   edi
  41cd6f:	sub    bl,BYTE PTR [edx]
  41cd71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd72:	(bad)  
  41cd73:	and    DWORD PTR [ecx+0x7100a6bf],ebx
  41cd79:	jmp    0x863c7477
  41cd7e:	jecxz  0x41cd91
  41cd80:	nop
  41cd81:	add    edx,esp
  41cd83:	test   ah,bh
  41cd85:	jmp    0x41cddc
  41cd87:	or     eax,DWORD PTR [edx+0x5014a10c]
  41cd8d:	xor    esp,DWORD PTR [ebx+0x58]
  41cd90:	in     eax,0x13
  41cd92:	mov    edx,0x4d8ded74
  41cd97:	ja     0x41cdc9
  41cd99:	mov    edi,0x6e41a389
  41cd9e:	inc    esi
  41cd9f:	mov    edi,0xbf7b4d8
  41cda4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cda5:	in     al,dx
  41cda6:	sbb    bl,dl
  41cda8:	xor    eax,0xb24e082b
  41cdad:	xchg   ebp,eax
  41cdae:	dec    esp
  41cdaf:	test   eax,0x468c86b3
  41cdb4:	in     eax,0xd4
  41cdb6:	(bad)  
  41cdb7:	add    BYTE PTR [esi+0x52bc8da2],cl
  41cdbd:	(bad)  
  41cdbe:	test   al,0x74
  41cdc0:	stos   DWORD PTR es:[edi],eax
  41cdc1:	outs   dx,WORD PTR ds:[esi]
  41cdc3:	mov    bh,0x77
  41cdc5:	pop    ebx
  41cdc6:	adc    BYTE PTR [edi],dl
  41cdc8:	dec    edi
  41cdc9:	and    ecx,edi
  41cdcb:	leave  
  41cdcc:	rcr    BYTE PTR [edx+0x57],0x8d
  41cdd0:	hlt    
  41cdd1:	push   edi
  41cdd2:	fwait
  41cdd3:	shl    BYTE PTR [ecx],0x89
  41cdd6:	stc    
  41cdd7:	dec    edx
  41cdd8:	lahf   
  41cdd9:	adc    bl,BYTE PTR [eax-0x7]
  41cddc:	nop
  41cddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdde:	or     al,0xcc
  41cde0:	xor    eax,0x1b2e067c
  41cde5:	test   eax,0x6220a03b
  41cdea:	push   0xb1d71011
  41cdef:	mov    al,0xa3
  41cdf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdf2:	(bad)  
  41cdf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdf5:	cmc    
  41cdf6:	mov    esi,0x3543af66
  41cdfb:	mov    cl,BYTE PTR [esi-0x2213ac7c]
  41ce01:	jae    0x41ce07
  41ce03:	xor    al,0x97
  41ce05:	ins    BYTE PTR es:[di],dx
  41ce07:	push   cs
  41ce08:	adc    al,0x7d
  41ce0a:	dec    eax
  41ce0b:	test   eax,0x6872895f
  41ce10:	push   0xffffffab
  41ce12:	push   ss
  41ce13:	cmc    
  41ce14:	sbb    cl,BYTE PTR [edx]
  41ce16:	jno    0x41cda9
  41ce18:	adc    ah,ch
  41ce1a:	fadd   QWORD PTR [ebx+ebp*1-0x27]
  41ce1e:	xlat   BYTE PTR es:[ebx]
  41ce20:	cwde   
  41ce21:	jo     0x41cda8
  41ce23:	jo     0x41cdd4
  41ce25:	jecxz  0x41cdc4
  41ce27:	cmp    al,0x77
  41ce29:	dec    ecx
  41ce2a:	fiadd  DWORD PTR [edx]
  41ce2c:	pushw  cs
  41ce2e:	aad    0x50
  41ce30:	xchg   ebp,eax
  41ce31:	lods   al,BYTE PTR ds:[esi]
  41ce32:	sbb    al,0xd8
  41ce34:	push   esi
  41ce35:	outs   dx,DWORD PTR ds:[esi]
  41ce36:	mov    bl,0x5a
  41ce38:	fidiv  WORD PTR [ecx]
  41ce3a:	xrelease xchg BYTE PTR [edi],bh
  41ce3d:	sub    DWORD PTR [ebx+0x4a],ebp
  41ce40:	pop    edi
  41ce41:	loopne 0x41ce94
  41ce43:	add    BYTE PTR [ebx+esi*4+0x2d8c6452],ah
  41ce4a:	inc    ebx
  41ce4b:	xchg   edx,eax
  41ce4c:	cmp    al,0xb7
  41ce4e:	inc    esp
  41ce4f:	mov    BYTE PTR [ecx-0x4e1c775e],0x29
  41ce56:	in     eax,0x12
  41ce58:	mov    al,ds:0x5c99618f
  41ce5d:	sub    BYTE PTR [eax-0x6b],0xdf
  41ce61:	sbb    eax,0xb557ca57
  41ce66:	mov    ah,0xe5
  41ce68:	pop    edi
  41ce69:	lahf   
  41ce6a:	push   es
  41ce6b:	cmp    DWORD PTR [edi+0x9eb81bf],ebp
  41ce71:	push   edi
  41ce72:	aas    
  41ce73:	shl    DWORD PTR [ecx-0x7c2e28fb],cl
  41ce79:	cmp    eax,0x82c54765
  41ce7e:	push   0xdaadd256
  41ce83:	loope  0x41ce12
  41ce85:	out    0x81,eax
  41ce87:	ins    DWORD PTR es:[edi],dx
  41ce88:	sub    ebp,ebx
  41ce8a:	imul   edx,DWORD PTR [esi+0x37a38c1e],0x291439c0
  41ce94:	mov    bl,0x1e
  41ce96:	ds stos BYTE PTR es:[edi],al
  41ce98:	mov    eax,DWORD PTR [ecx+0x31b97a0a]
  41ce9e:	mov    edi,0xdbcc9950
  41cea3:	jl     0x41ced2
  41cea5:	pop    DWORD PTR [ecx]
  41cea7:	sar    edi,1
  41cea9:	push   ebx
  41ceaa:	inc    ebp
  41ceab:	xchg   edi,ebx
  41cead:	push   ebx
  41ceae:	xor    eax,0x177e908f
  41ceb3:	addr16 std 
  41ceb5:	ret    
  41ceb6:	lahf   
  41ceb7:	cdq    
  41ceb8:	retfw  
  41ceba:	shr    DWORD PTR [eax],cl
  41cebc:	retf   0xf5c1
  41cebf:	xor    eax,0xfee8df8f
  41cec4:	mov    cl,0xbc
  41cec6:	sbb    BYTE PTR [edi],al
  41cec8:	cli    
  41cec9:	xchg   DWORD PTR [ecx-0x1152ec7d],esi
  41cecf:	in     eax,0x8e
  41ced1:	adc    eax,0x5e4fd727
  41ced6:	jp     0x41ce71
  41ced8:	or     al,0xa6
  41ceda:	jg     0x41cecc
  41cedc:	xor    edi,0x468fc88c
  41cee2:	aaa    
  41cee3:	sahf   
  41cee4:	repnz aam 0xef
  41cee7:	addr16 pushf 
  41cee9:	cmp    DWORD PTR [ecx-0x24edb963],edi
  41ceef:	aad    0x67
  41cef1:	repz push ebp
  41cef3:	popa   
  41cef4:	cmc    
  41cef5:	push   esp
  41cef6:	xchg   ebp,eax
  41cef7:	arpl   WORD PTR [ebx-0x672420de],dx
  41cefd:	sar    esi,1
  41ceff:	(bad)  
  41cf00:	aam    0x8d
  41cf02:	jae    0x41cf0d
  41cf04:	xchg   esp,eax
  41cf05:	(bad)  
  41cf06:	cmp    edx,DWORD PTR [edx]
  41cf08:	push   cs
  41cf09:	nop
  41cf0a:	mov    ds:0x68744be,al
  41cf0f:	jmp    0x902e6628
  41cf14:	fs dec edx
  41cf16:	lock push ss
  41cf18:	pop    eax
  41cf19:	mov    al,ds:0x908e4bfa
  41cf1e:	cmp    DWORD PTR [edx+0x536a5fbf],esi
  41cf24:	in     al,0x3e
  41cf26:	lods   al,BYTE PTR ds:[esi]
  41cf27:	push   ds
  41cf28:	jnp    0x41cef6
  41cf2a:	inc    eax
  41cf2b:	mov    DWORD PTR [eax-0x29d4cff8],edx
  41cf31:	xlat   BYTE PTR ds:[ebx]
  41cf32:	frstor [ecx]
  41cf34:	cmp    al,0x9a
  41cf36:	out    0x32,eax
  41cf38:	js     0x41cfa9
  41cf3a:	dec    edi
  41cf3b:	pop    edx
  41cf3c:	mov    eax,ds:0x71a11617
  41cf41:	or     al,0xb3
  41cf43:	imul   edi,edi,0xffffff8b
  41cf46:	(bad)
  41cf49:	popa   
  41cf4a:	popa   
  41cf4b:	sub    esp,DWORD PTR [edx]
  41cf4d:	fcom   QWORD PTR [edi]
  41cf4f:	and    al,0xdc
  41cf51:	call   0x419a84dc
  41cf56:	scas   eax,DWORD PTR es:[edi]
  41cf57:	pop    ebx
  41cf58:	push   ecx
  41cf59:	sahf   
  41cf5a:	mov    ebp,0xb97d5ce7
  41cf5f:	mov    al,0x91
  41cf61:	mov    cl,0x6a
  41cf63:	fstp   DWORD PTR [ebx+0x8]
  41cf66:	add    DWORD PTR [esi],0x3a
  41cf69:	popf   
  41cf6a:	mov    al,BYTE PTR [edx+0x52]
  41cf6d:	xor    eax,0x946a1e7
  41cf72:	pop    ebx
  41cf73:	daa    
  41cf74:	mov    ds:0x9d135375,eax
  41cf79:	and    BYTE PTR [esi+edi*1+0x6c019dee],0xfb
  41cf81:	xchg   DWORD PTR [edi-0x46dfec27],edi
  41cf87:	xchg   ebp,eax
  41cf88:	aas    
  41cf89:	push   cs
  41cf8a:	loop   0x41cf10
  41cf8c:	cmp    eax,0x6aacd8e
  41cf91:	dec    esp
  41cf92:	push   esp
  41cf93:	pop    esi
  41cf94:	pop    edx
  41cf95:	jg     0x41cf76
  41cf97:	mov    esp,0x3496ed17
  41cf9c:	sub    esi,DWORD PTR [edi+0x4d]
  41cf9f:	xchg   ebp,eax
  41cfa0:	popf   
  41cfa1:	test   BYTE PTR [ebx],cl
  41cfa3:	adc    ebx,DWORD PTR [esi]
  41cfa5:	jb     0x41cf4f
  41cfa7:	pop    ds
  41cfa8:	data16 mov cl,0xd1
  41cfab:	fbstp  TBYTE PTR [edi-0x10b5f42f]
  41cfb1:	xchg   ebx,eax
  41cfb2:	pop    ebp
  41cfb3:	mov    bl,0xbb
  41cfb5:	cmp    al,0x9d
  41cfb7:	mov    eax,ds:0x14785f55
  41cfbc:	sub    BYTE PTR [eax-0x2],bh
  41cfbf:	xchg   ecx,eax
  41cfc0:	int3   
  41cfc1:	test   al,0xee
  41cfc3:	jb     0x41cf91
  41cfc5:	jg     0x41cfb4
  41cfc7:	jg     0x41cfce
  41cfc9:	popa   
  41cfca:	fcom   DWORD PTR [edx]
  41cfcc:	sbb    DWORD PTR [edi+0x67ce764d],eax
  41cfd2:	nop
  41cfd3:	in     eax,0xe9
  41cfd5:	jne    0x41cfe0
  41cfd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfd8:	cmc    
  41cfd9:	shl    DWORD PTR [ecx],cl
  41cfdb:	sub    al,0x23
  41cfdd:	xor    eax,0x1b9e60b7
  41cfe2:	mov    dl,0xa0
  41cfe4:	and    edx,ebp
  41cfe6:	in     al,0xa9
  41cfe8:	inc    edi
  41cfe9:	stos   BYTE PTR es:[edi],al
  41cfea:	aam    0x7c
  41cfec:	mov    dl,0x77
  41cfee:	shr    DWORD PTR [eax],1
  41cff0:	es pushf 
  41cff2:	mov    eax,0xca6a0d1e
  41cff7:	aas    
  41cff8:	inc    edx
  41cff9:	shl    BYTE PTR [esi-0x203ea782],cl
  41cfff:	mov    dh,0xc3
  41d001:	lock jo 0x41d058
  41d004:	adc    ch,dl
  41d006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d007:	mov    eax,0x476e711e
  41d00c:	loop   0x41d018
  41d00e:	xor    al,BYTE PTR [ebp-0x302232ed]
  41d014:	adc    ch,bl
  41d016:	popa   
  41d017:	repz jge 0x41d008
  41d01a:	popa   
  41d01b:	cs jae 0x41d08f
  41d01e:	jmp    0x41d00c
  41d020:	and    BYTE PTR [eax-0x13b9c9db],ch
  41d026:	stos   BYTE PTR es:[edi],al
  41d027:	add    al,BYTE PTR [eax+esi*8]
  41d02a:	sbb    DWORD PTR [ecx+eax*8+0x13],eax
  41d02e:	sub    DWORD PTR [edx],0x68808aaa
  41d034:	stos   BYTE PTR es:[edi],al
  41d035:	xchg   ebp,eax
  41d036:	pop    edx
  41d037:	cwde   
  41d038:	nop
  41d039:	push   es
  41d03a:	ror    BYTE PTR [edx-0x3a],0xc5
  41d03e:	sub    al,0x4c
  41d040:	int    0xa7
  41d042:	mov    ecx,0x37bb2fbf
  41d047:	mov    ebx,0x399635f2
  41d04c:	popa   
  41d04d:	cld    
  41d04e:	inc    edx
  41d04f:	rol    esi,0xb3
  41d052:	into   
  41d053:	and    ebx,DWORD PTR [esp+ebp*4-0x53]
  41d057:	xlat   BYTE PTR ds:[ebx]
  41d058:	pandn  mm0,QWORD PTR [edx-0x68]
  41d05c:	pop    edi
  41d05d:	in     al,0x95
  41d05f:	fcmovbe st,st(0)
  41d061:	loope  0x41d063
  41d063:	outs   dx,DWORD PTR ds:[esi]
  41d064:	in     al,dx
  41d065:	in     al,dx
  41d066:	in     al,dx
  41d067:	inc    ebp
  41d068:	cmp    al,0xca
  41d06a:	or     al,0xf4
  41d06c:	jno    0x41d0ce
  41d06e:	pop    ss
  41d06f:	mov    ebx,DWORD PTR [ecx-0x4d]
  41d072:	out    0x28,al
  41d074:	bnd jmp 0x85c97230
  41d07a:	shr    DWORD PTR es:[ebx+0x65d70bd9],1
  41d081:	fnstenv [esi-0x4b]
  41d084:	test   DWORD PTR [eax],ebx
  41d086:	sub    ah,BYTE PTR [edx]
  41d088:	fist   WORD PTR [ebx+0x47]
  41d08b:	int3   
  41d08c:	lea    edx,[edi-0x32eee90f]
  41d092:	or     BYTE PTR [eax],ah
  41d094:	add    esi,DWORD PTR [esp+eiz*8]
  41d097:	adc    BYTE PTR [ebp+0x27],al
  41d09a:	sub    al,0xd0
  41d09c:	push   cs
  41d09d:	das    
  41d09e:	jge    0x41d037
  41d0a0:	int3   
  41d0a1:	push   ss
  41d0a2:	sub    eax,DWORD PTR [ecx+0x544269ce]
  41d0a8:	jp     0x41d114
  41d0aa:	fadd   DWORD PTR [edx]
  41d0ac:	fild   WORD PTR [ebx+ebp*4]
  41d0af:	je     0x41d0c8
  41d0b1:	sti    
  41d0b2:	mov    WORD PTR [edx+0x1e],ds
  41d0b5:	jl     0x41d0a5
  41d0b7:	pusha  
  41d0b8:	xor    ebx,ebx
  41d0ba:	sbb    BYTE PTR [ebx+0x396098ff],ah
  41d0c0:	mov    BYTE PTR [eax-0x4da53eba],bl
  41d0c6:	call   0xcaf6:0x889c4a62
  41d0cd:	ja     0x41d0fc
  41d0cf:	cli    
  41d0d0:	fdivp  st(2),st
  41d0d2:	cmp    esi,0xffffffba
  41d0d5:	xor    eax,0x579922a1
  41d0da:	lods   al,BYTE PTR ds:[esi]
  41d0db:	mov    cl,0xb2
  41d0dd:	dec    ecx
  41d0de:	xlat   BYTE PTR ds:[ebx]
  41d0df:	outs   dx,DWORD PTR ds:[esi]
  41d0e0:	fnstsw WORD PTR [ebx+0x4cc426f1]
  41d0e6:	xchg   edx,eax
  41d0e7:	and    dl,dh
  41d0e9:	push   esp
  41d0ea:	pop    eax
  41d0eb:	dec    ecx
  41d0ec:	pop    edi
  41d0ed:	sub    ebp,ebx
  41d0ef:	cld    
  41d0f0:	rcl    BYTE PTR [ebp+0x2ceea884],1
  41d0f6:	lds    ebp,FWORD PTR [esi-0x1b]
  41d0f9:	fldl2t 
  41d0fb:	xchg   ebx,eax
  41d0fc:	mov    ebx,eax
  41d0fe:	repnz add ebx,eax
  41d101:	sub    esi,DWORD PTR [eax+0x3c3b3c0b]
  41d107:	push   edx
  41d108:	je     0x41d0e1
  41d10a:	mov    ebp,0xa971e3e7
  41d10f:	mov    cl,BYTE PTR [edi-0x7f]
  41d112:	sti    
  41d113:	xor    BYTE PTR [ebx+eax*1],al
  41d116:	aad    0x12
  41d118:	jmp    0x41d151
  41d11a:	jp     0x41d177
  41d11c:	push   ecx
  41d11d:	leave  
  41d11e:	mov    ds:0x5d4e2f55,al
  41d123:	scas   eax,DWORD PTR es:[edi]
  41d124:	xlat   BYTE PTR ds:[ebx]
  41d125:	test   BYTE PTR [eax-0x47505d10],bh
  41d12b:	and    dh,0x44
  41d12e:	sub    al,0x5f
  41d130:	std    
  41d131:	add    eax,0xa55e10a0
  41d136:	inc    ebx
  41d137:	ins    DWORD PTR es:[edi],dx
  41d138:	stos   BYTE PTR es:[edi],al
  41d139:	daa    
  41d13a:	ret    0x34e2
  41d13d:	add    ah,BYTE PTR [eax]
  41d13f:	sbb    DWORD PTR [eax],0xffffffe7
  41d142:	xlat   BYTE PTR ds:[ebx]
  41d143:	sbb    BYTE PTR [esi+0x6e],0xd4
  41d147:	mov    dh,0xc9
  41d149:	(bad)  
  41d14a:	les    ecx,FWORD PTR ds:0xe820d94c
  41d150:	lahf   
  41d151:	xchg   edx,eax
  41d152:	jg     0x41d10f
  41d154:	loopne 0x41d114
  41d156:	adc    DWORD PTR [ecx+0x7be40111],ebp
  41d15c:	xchg   edi,eax
  41d15d:	push   cs
  41d15e:	pop    ebp
  41d15f:	test   al,0x1f
  41d161:	imul   ecx,DWORD PTR [esi-0x71],0x2c
  41d165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d166:	pop    ebx
  41d167:	xchg   ecx,eax
  41d168:	xchg   DWORD PTR [esi+0x7780b61d],eax
  41d16e:	mov    edx,ecx
  41d170:	fidiv  DWORD PTR [edx+0x68bc26bf]
  41d176:	mov    eax,ds:0x33520a83
  41d17b:	fmul   QWORD PTR [edx-0x5c]
  41d17e:	xor    ax,0x9ec7
  41d182:	stos   BYTE PTR es:[edi],al
  41d183:	cmc    
  41d184:	push   ds
  41d185:	xor    al,0x8b
  41d187:	cmp    ecx,DWORD PTR [ebx+0x52ba0682]
  41d18d:	xor    al,0xcb
  41d18f:	das    
  41d190:	aad    0x98
  41d192:	les    ebp,FWORD PTR [edx-0x4a3d3ce2]
  41d198:	pop    ecx
  41d199:	cs ret 0x1cd4
  41d19d:	data16 mov al,0x6e
  41d1a0:	pmullw mm6,QWORD PTR ds:0xe8ee468
  41d1a7:	and    al,0x28
  41d1a9:	(bad)  
  41d1ab:	mov    ch,0x31
  41d1ad:	mov    cl,0xd2
  41d1af:	jb     0x41d1b1
  41d1b1:	or     al,0xc2
  41d1b3:	mov    ebx,?
  41d1b5:	ss inc esi
  41d1b7:	mov    eax,0xdf9dc7f0
  41d1bc:	push   edi
  41d1bd:	pop    ss
  41d1be:	aaa    
  41d1bf:	sbb    eax,0xfda00b2f
  41d1c4:	loop   0x41d22c
  41d1c6:	push   esp
  41d1c7:	add    bh,BYTE PTR [ebp-0x64032dec]
  41d1cd:	push   eax
  41d1ce:	mov    bh,0x5e
  41d1d0:	or     ecx,DWORD PTR [ebx-0x44]
  41d1d3:	mov    dh,0xf5
  41d1d5:	sahf   
  41d1d6:	lock pop ebp
  41d1d8:	push   DWORD PTR [edi-0x7061d305]
  41d1de:	lods   eax,DWORD PTR ds:[esi]
  41d1df:	pop    ds
  41d1e0:	jbe    0x41d1e3
  41d1e2:	jns    0x41d1db
  41d1e4:	aas    
  41d1e5:	or     BYTE PTR [esi],bh
  41d1e7:	push   es
  41d1e8:	outs   dx,DWORD PTR ds:[esi]
  41d1e9:	sahf   
  41d1ea:	xchg   edi,eax
  41d1eb:	aas    
  41d1ec:	and    al,0x1a
  41d1ee:	outs   dx,DWORD PTR ds:[esi]
  41d1ef:	cld    
  41d1f0:	mov    dh,0xa1
  41d1f2:	xchg   esp,eax
  41d1f3:	neg    BYTE PTR [eax]
  41d1f5:	out    0x64,eax
  41d1f7:	xor    BYTE PTR [edx-0x5c],dl
  41d1fa:	mov    dh,0x95
  41d1fc:	imul   DWORD PTR [ecx]
  41d1fe:	pop    ds
  41d1ff:	enter  0xcab1,0xf4
  41d203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d204:	shl    DWORD PTR [eax-0x4abdfd2e],cl
  41d20a:	call   0x3591:0xffa07cb1
  41d211:	or     eax,0xb43686ca
  41d216:	jne    0x41d218
  41d218:	dec    eax
  41d219:	jne    0x41d21f
  41d21b:	in     al,0x2a
  41d21d:	inc    ecx
  41d21e:	adc    dl,ch
  41d220:	pop    esp
  41d221:	loop   0x41d1d9
  41d223:	psadbw mm0,QWORD PTR [ecx]
  41d226:	div    BYTE PTR [edx*1+0x2e37e376]
  41d22d:	aaa    
  41d22e:	inc    ebp
  41d22f:	outs   dx,DWORD PTR ds:[esi]
  41d230:	call   0xdbd4:0x280a6ce5
  41d237:	mov    edx,0x8a102d18
  41d23c:	dec    esp
  41d23d:	scas   eax,DWORD PTR es:[edi]
  41d23e:	jo     0x41d1d3
  41d240:	comiss xmm7,DWORD PTR [eax+edi*4+0x1545ec]
  41d248:	xor    eax,0xf2ab3324
  41d24d:	ja     0x41d221
  41d24f:	arpl   WORD PTR [ecx+0x61e62e74],bp
  41d255:	xchg   edx,eax
  41d256:	clc    
  41d257:	inc    esi
  41d258:	not    DWORD PTR [edi]
  41d25a:	mov    bl,0x19
  41d25c:	fadd   DWORD PTR [ecx]
  41d25e:	xor    dh,bl
  41d260:	cli    
  41d261:	psrld  mm1,QWORD PTR [esi-0x4e41d1ec]
  41d268:	scas   al,BYTE PTR es:[edi]
  41d269:	and    al,0xf5
  41d26b:	(bad)  
  41d26c:	(bad)  
  41d26d:	ds test al,0x4d
  41d270:	mov    dh,0x52
  41d273:	(bad)  
  41d274:	push   edi
  41d275:	sbb    edi,DWORD PTR [ecx-0x23]
  41d278:	or     eax,0x7081d3a4
  41d27d:	mov    al,0x8a
  41d27f:	das    
  41d280:	jmp    0xfa47:0xe29daf0f
  41d287:	cli    
  41d288:	mov    BYTE PTR [ecx+ebp*8+0x628e1c1e],ch
  41d28f:	sbb    DWORD PTR [edx*2+0x4334af74],edi
  41d296:	loope  0x41d29e
  41d298:	sti    
  41d299:	dec    edi
  41d29a:	mov    eax,0xbdfadfa1
  41d29f:	outs   dx,DWORD PTR es:[si]
  41d2a2:	sub    esp,DWORD PTR ds:0xe96705a0
  41d2a8:	std    
  41d2a9:	std    
  41d2aa:	or     ch,BYTE PTR [esi-0x7f]
  41d2ad:	cmp    al,0x92
  41d2af:	(bad)  
  41d2b0:	push   0xf7fecdb2
  41d2b5:	adc    eax,0x7b1084c4
  41d2ba:	sub    al,0x88
  41d2bc:	mov    dl,0x45
  41d2be:	dec    ebx
  41d2bf:	bndstx [eax],bnd0
  41d2c2:	push   eax
  41d2c3:	outs   dx,BYTE PTR ds:[esi]
  41d2c4:	outs   dx,BYTE PTR ds:[esi]
  41d2c5:	in     eax,dx
  41d2c6:	arpl   WORD PTR [edx+0x70],bx
  41d2c9:	sbb    eax,0xd64c23f0
  41d2ce:	enter  0x7649,0x63
  41d2d2:	fdiv   st(3),st
  41d2d4:	dec    edx
  41d2d5:	pop    ss
  41d2d6:	(bad)  ds:0x9a2035
  41d2dc:	mov    edx,DWORD PTR [esi-0x14]
  41d2df:	mov    ds:0xd1474c24,eax
  41d2e4:	ss dec eax
  41d2e6:	push   cs
  41d2e7:	retf   
  41d2e8:	xchg   edi,eax
  41d2e9:	adc    bh,0xf9
  41d2ec:	xchg   esp,eax
  41d2ed:	pop    ss
  41d2ee:	xchg   dl,bl
  41d2f0:	dec    edx
  41d2f1:	and    BYTE PTR [ebx+edx*4-0x7a],bl
  41d2f5:	rcl    eax,0x9b
  41d2f8:	add    BYTE PTR [ebp+0x4e],0x92
  41d2fc:	mov    ch,0x6a
  41d2fe:	xchg   BYTE PTR [ebx],dh
  41d300:	(bad)  
  41d301:	cmp    eax,0xeae1f7e4
  41d306:	adc    edx,ebx
  41d308:	and    BYTE PTR [esi-0x41],ah
  41d30b:	in     eax,0xf5
  41d30d:	retf   0x4ea9
  41d310:	xor    bh,BYTE PTR [ecx]
  41d312:	dec    esi
  41d313:	mov    esi,fs
  41d315:	test   BYTE PTR [ebx-0x5],cl
  41d318:	jmp    0x41d2ca
  41d31a:	jb     0x41d2c3
  41d31c:	or     DWORD PTR [eax],eax
  41d31e:	dec    ebp
  41d31f:	int3   
  41d320:	mov    eax,ds:0xbeeea44d
  41d325:	call   0x551b:0x7ae37280
  41d32c:	adc    BYTE PTR [ebx+0x553e6ee8],bh
  41d332:	xlat   BYTE PTR ds:[ebx]
  41d333:	mov    WORD PTR [eax-0x3d],ds
  41d336:	adc    BYTE PTR [ebx+0x799263fb],0xa8
  41d33d:	test   BYTE PTR [ecx],bl
  41d33f:	adc    DWORD PTR [edx-0x1a],edi
  41d342:	add    al,0x88
  41d344:	js     0x41d36c
  41d346:	mov    eax,0x4c6a2235
  41d34b:	xchg   edi,eax
  41d34c:	cmp    BYTE PTR [eax-0xa67ea43],dh
  41d352:	jle    0x41d3cf
  41d354:	int3   
  41d355:	add    dl,bl
  41d357:	les    ebp,FWORD PTR [edi]
  41d359:	push   ebx
  41d35a:	xchg   ecx,eax
  41d35b:	pop    ebx
  41d35c:	out    0x50,al
  41d35e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d35f:	cli    
  41d360:	mov    ebx,0x847238d
  41d365:	jbe    0x41d3bf
  41d367:	jns    0x41d317
  41d369:	out    dx,eax
  41d36a:	pop    edi
  41d36b:	sub    BYTE PTR [ebp+0x51],dl
  41d36e:	ja     0x41d3d5
  41d370:	retf   
  41d371:	(bad)  
  41d372:	dec    esi
  41d373:	retf   0x3046
  41d376:	pop    ss
  41d377:	imul   ebx,DWORD PTR [esi+0x71a0275a],0xffffffc3
  41d37e:	mov    dh,0xf2
  41d380:	into   
  41d381:	shr    DWORD PTR [ecx+0x668a413],cl
  41d387:	sub    DWORD PTR [edx],eax
  41d389:	dec    esi
  41d38a:	popa   
  41d38b:	jo     0x41d329
  41d38d:	cmp    dl,bl
  41d38f:	div    ah
  41d391:	push   ss
  41d392:	mov    gs,WORD PTR [edi-0x6e]
  41d395:	ds data16 daa 
  41d398:	mov    dl,0x16
  41d39a:	test   DWORD PTR [ebx-0x36f851ac],ecx
  41d3a0:	(bad)  
  41d3a1:	pop    edi
  41d3a2:	adc    BYTE PTR [ebx+edx*4+0x2f5dbf48],0x2c
  41d3aa:	dec    esi
  41d3ab:	rcl    DWORD PTR [eax+0x6f688cf4],cl
  41d3b1:	int    0x29
  41d3b3:	pop    ecx
  41d3b4:	pop    esi
  41d3b5:	retf   
  41d3b6:	fstp   DWORD PTR [edx+0x3a5e4187]
  41d3bc:	cli    
  41d3bd:	and    edx,esp
  41d3bf:	int3   
  41d3c0:	sub    esp,DWORD PTR [ecx+ebp*1]
  41d3c3:	scas   eax,DWORD PTR es:[edi]
  41d3c4:	cmp    eax,0x7e528356
  41d3c9:	fidivr WORD PTR [edx+0x1a]
  41d3cc:	data16 jecxz 0x41d3df
  41d3cf:	add    ecx,DWORD PTR [edx+ecx*1]
  41d3d2:	xchg   ecx,eax
  41d3d3:	adc    dl,ch
  41d3d5:	mov    ebx,0x2bb4266f
  41d3da:	nop
  41d3db:	adc    esi,ebx
  41d3dd:	out    0x61,al
  41d3df:	mov    esi,ebx
  41d3e1:	push   cs
  41d3e2:	pop    es
  41d3e3:	push   ebx
  41d3e4:	adc    edx,esp
  41d3e6:	test   al,cl
  41d3e8:	mov    dl,0x61
  41d3ea:	ficomp DWORD PTR ds:[ecx]
  41d3ed:	xchg   ebx,edx
  41d3ef:	xor    BYTE PTR [ecx+0x483f946d],0x99
  41d3f6:	xor    eax,eax
  41d3f8:	pmuludq mm7,QWORD PTR [edi+0x1c94d203]
  41d3ff:	(bad)  
  41d400:	outs   dx,BYTE PTR ds:[esi]
  41d401:	into   
  41d402:	cmp    ebx,DWORD PTR [edx+0x6cfa0cbc]
  41d408:	fcomp  DWORD PTR [edx+0x3436417]
  41d40e:	hlt    
  41d40f:	adc    ebx,DWORD PTR [edx+0x76]
  41d412:	(bad)  
  41d415:	pop    ds
  41d416:	pop    ebx
  41d417:	sbb    eax,0xa8b7a735
  41d41c:	mov    ah,0xe7
  41d41e:	dec    ebp
  41d41f:	xchg   ecx,eax
  41d420:	pop    edi
  41d421:	mov    ah,0xdf
  41d423:	test   DWORD PTR [esi+0x49],esi
  41d426:	push   esi
  41d427:	stos   DWORD PTR es:[edi],eax
  41d428:	jno    0x41d411
  41d42a:	mov    edx,0x4f9d8431
  41d42f:	rol    DWORD PTR [edi-0x7c3558a6],1
  41d435:	xchg   esi,eax
  41d436:	mov    WORD PTR [eax+0x5ab5d317],ds
  41d43c:	rcl    bl,cl
  41d43e:	inc    ecx
  41d43f:	add    al,BYTE PTR [esi+0x20]
  41d442:	in     al,dx
  41d443:	adc    al,0xc0
  41d445:	cmp    al,0x6
  41d447:	xchg   edi,eax
  41d448:	mov    dh,0x90
  41d44a:	xchg   ebx,eax
  41d44b:	and    eax,edi
  41d44d:	pop    ebx
  41d44e:	dec    esi
  41d44f:	pop    es
  41d450:	shl    DWORD PTR [eax-0x4d],cl
  41d453:	xchg   esi,eax
  41d454:	jp     0x41d439
  41d456:	adc    BYTE PTR [edi+edi*2+0x11],dh
  41d45a:	pop    eax
  41d45b:	shl    BYTE PTR [ebp-0x3fad4707],cl
  41d461:	dec    edx
  41d462:	adc    al,BYTE PTR [esi+0x5f72af64]
  41d468:	or     al,BYTE PTR [edi+0x419f9568]
  41d46e:	in     al,0x1f
  41d470:	cmc    
  41d471:	add    eax,DWORD PTR [ebp-0x7b]
  41d474:	push   0xffffffab
  41d476:	sub    al,0xbf
  41d478:	mov    esp,0x4edcb010
  41d47d:	sub    al,0x9c
  41d47f:	ds addr16 sbb al,0xbc
  41d483:	int    0x9b
  41d485:	int3   
  41d486:	mov    dh,0x2
  41d488:	hlt    
  41d489:	popa   
  41d48a:	sar    DWORD PTR [ebp+0x79dd0d8],0x5d
  41d491:	scas   eax,DWORD PTR es:[edi]
  41d492:	leave  
  41d493:	sbb    bh,BYTE PTR [ebp-0xc]
  41d496:	pop    eax
  41d497:	ret    0x1ec5
  41d49a:	xor    BYTE PTR [ebx-0x6b],0x65
  41d49e:	push   0x6c971445
  41d4a3:	sbb    dl,BYTE PTR [eax+eiz*1+0x246e0b8e]
  41d4aa:	retf   
  41d4ab:	(bad)  
  41d4ac:	sub    eax,0xd9f37693
  41d4b1:	jne    0x41d4fc
  41d4b3:	inc    ebp
  41d4b4:	dec    edx
  41d4b5:	mov    BYTE PTR [ebp-0x5f77aef7],cl
  41d4bb:	test   eax,0x1322d2d7
  41d4c0:	jmp    0x41d48f
  41d4c2:	ds add ecx,ebx
  41d4c5:	jnp    0x41d4c1
  41d4c7:	add    eax,0x722042ad
  41d4cc:	mov    ds:0x26d162d,eax
  41d4d1:	xor    bl,ch
  41d4d3:	ret    0x3f23
  41d4d6:	sbb    eax,0x19408caa
  41d4db:	xor    eax,0x4853628
  41d4e0:	cli    
  41d4e1:	jl     0x41d507
  41d4e3:	push   edi
  41d4e4:	aad    0x5e
  41d4e6:	jp     0x41d556
  41d4e8:	clc    
  41d4e9:	inc    ecx
  41d4ea:	sbb    esi,DWORD PTR [edi]
  41d4ec:	xchg   ebp,eax
  41d4ed:	adc    eax,0xff09ebd8
  41d4f2:	sub    al,0x28
  41d4f4:	ds push esp
  41d4f6:	pop    esp
  41d4f7:	jl     0x41d572
  41d4f9:	fs sbb eax,0xf6549eb4
  41d4ff:	rcl    DWORD PTR [esi],cl
  41d501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d502:	adc    DWORD PTR [edx],ebp
  41d504:	bound  ebp,QWORD PTR [edi+0x43b5ff98]
  41d50a:	sub    edx,DWORD PTR [esp+edi*4-0x4f379ab]
  41d511:	push   es
  41d512:	leave  
  41d513:	jge    0x41d54f
  41d515:	jae    0x41d57f
  41d517:	or     eax,0x9936613d
  41d51c:	lds    edi,FWORD PTR [ebx+ecx*2+0x6]
  41d520:	bound  ebx,QWORD PTR ds:0x6912a3c4
  41d526:	pop    ebp
  41d527:	pop    ss
  41d528:	or     bl,BYTE PTR [edi-0x66]
  41d52b:	int    0x5c
  41d52d:	mov    ch,0xbe
  41d52f:	xor    al,0xed
  41d531:	aas    
  41d532:	ins    BYTE PTR es:[edi],dx
  41d533:	xchg   edx,eax
  41d534:	test   cl,ch
  41d536:	xor    al,0x86
  41d538:	sbb    DWORD PTR [edx-0x2],ebx
  41d53b:	jp     0x41d5a3
  41d53d:	cmp    DWORD PTR [ebp-0xdee5b8],0x44010d1d
  41d547:	sbb    eax,0xaa8cf5a8
  41d54c:	and    DWORD PTR [eax+0x481119cf],edx
  41d552:	pop    esi
  41d553:	icebp  
  41d554:	std    
  41d555:	test   al,0x24
  41d557:	icebp  
  41d558:	ja     0x41d518
  41d55a:	fstp   DWORD PTR [eax+0x138584b3]
  41d560:	cmp    eax,0xceefbb1c
  41d565:	call   0xb38afe92
  41d56a:	lds    ecx,FWORD PTR [ecx+0x2e]
  41d56d:	ins    BYTE PTR es:[edi],dx
  41d56e:	fwait
  41d56f:	(bad)  
  41d570:	je     0x41d59d
  41d572:	jmp    0x82c5429c
  41d577:	pop    edx
  41d578:	jmp    0x82d555c5
  41d57d:	inc    eax
  41d57e:	int3   
  41d57f:	cmp    al,0x11
  41d581:	lea    esi,[edx+0x52]
  41d584:	or     DWORD PTR [edi+0x34],esi
  41d587:	sbb    edx,DWORD PTR [edi+0x28]
  41d58a:	fdivr  QWORD PTR [esi]
  41d58c:	xor    eax,0x513f09b1
  41d591:	sbb    DWORD PTR [ebx-0x6be9ad0c],ecx
  41d597:	out    0xe4,eax
  41d599:	sti    
  41d59a:	lods   al,BYTE PTR ds:[esi]
  41d59b:	or     al,BYTE PTR [ebx]
  41d59d:	mov    eax,0xb760fde9
  41d5a2:	push   esp
  41d5a3:	aam    0x45
  41d5a5:	sub    al,0x21
  41d5a7:	add    bl,ah
  41d5a9:	mov    al,ds:0x43b7d8fd
  41d5ae:	add    BYTE PTR [edi-0x67afc53f],ah
  41d5b4:	push   edx
  41d5b5:	sub    al,0x30
  41d5b7:	js     0x41d583
  41d5b9:	push   ss
  41d5ba:	dec    edi
  41d5bb:	in     al,0x66
  41d5bd:	pop    ss
  41d5be:	pusha  
  41d5bf:	xlat   BYTE PTR ds:[ebx]
  41d5c0:	popf   
  41d5c1:	scas   al,BYTE PTR es:[edi]
  41d5c2:	xchg   esi,ebp
  41d5c4:	mov    ecx,0x69a23ec1
  41d5c9:	mov    dh,0x6a
  41d5cb:	pop    esp
  41d5cc:	jecxz  0x41d5ea
  41d5ce:	cmp    eax,edx
  41d5d0:	das    
  41d5d1:	sub    BYTE PTR [ecx-0x7e24dae6],ah
  41d5d7:	dec    esp
  41d5d8:	or     BYTE PTR [eax+edi*2],0x8a
  41d5dc:	add    eax,ecx
  41d5de:	fstp   QWORD PTR [ecx]
  41d5e0:	shl    BYTE PTR [ebp+0xb],0xd9
  41d5e4:	out    0x45,al
  41d5e6:	in     eax,0x2c
  41d5e8:	xchg   ecx,ebp
  41d5ea:	or     BYTE PTR [esi+eiz*2],dl
  41d5ed:	imul   esi,DWORD PTR [ebx-0x4d],0xfffffff3
  41d5f1:	sbb    BYTE PTR [edi],0xbe
  41d5f4:	sbb    esi,edx
  41d5f6:	sbb    al,0x3a
  41d5f8:	adc    BYTE PTR [ebx+0x64],al
  41d5fb:	cmp    dl,BYTE PTR [eax+ebx*8+0x3c]
  41d5ff:	mov    dl,dh
  41d601:	or     DWORD PTR [ebp+0x2614f777],edi
  41d607:	add    eax,DWORD PTR [edi-0xf1a8b65]
  41d60d:	in     eax,0x3e
  41d60f:	mov    ds:0x7b5985b4,eax
  41d614:	les    ecx,FWORD PTR [ecx-0xc]
  41d617:	xor    BYTE PTR [edx+eiz*8+0x27b51f],0x66
  41d61f:	pop    esi
  41d620:	jge    0x41d674
  41d622:	fsub   st(3),st
  41d624:	mov    ecx,0x20587995
  41d629:	add    dh,BYTE PTR [eax+0xb5c0eca]
  41d62f:	and    BYTE PTR [ebx],ah
  41d631:	cmp    DWORD PTR [ebx],ebp
  41d633:	jecxz  0x41d640
  41d635:	xor    BYTE PTR [ebx+0x9],bh
  41d638:	adc    ecx,ecx
  41d63a:	and    eax,0xd200105a
  41d63f:	aaa    
  41d640:	cmp    BYTE PTR [ecx],0xe9
  41d643:	or     BYTE PTR [ecx+0x27146c0b],al
  41d649:	jmp    0x275a:0x2a7a0615
  41d650:	test   al,0x7a
  41d652:	push   0x9e557de2
  41d657:	adc    BYTE PTR cs:[eax],0xc9
  41d65b:	cdq    
  41d65c:	mov    cl,0xdd
  41d65e:	gs aad 0xf1
  41d661:	sahf   
  41d662:	mov    edi,0xb759d581
  41d667:	mov    eax,ds:0x5ae550d9
  41d66c:	pop    es
  41d66d:	icebp  
  41d66e:	push   esp
  41d66f:	call   ecx
  41d671:	lods   eax,DWORD PTR ds:[esi]
  41d672:	jge    0x41d6ce
  41d674:	inc    ecx
  41d675:	mov    ds:0xa40501d,eax
  41d67a:	das    
  41d67b:	cmp    al,BYTE PTR [edi-0x5b]
  41d67e:	push   0xffffff96
  41d680:	jno    0x41d645
  41d682:	fs ds dec edi
  41d685:	mov    ah,0x19
  41d687:	inc    edx
  41d688:	mov    eax,ds:0x84afcc08
  41d68d:	test   BYTE PTR [eax+0x15957708],cl
  41d693:	(bad)  
  41d694:	cld    
  41d695:	cdq    
  41d696:	pop    ds
  41d697:	test   BYTE PTR [edi-0x6edff219],bh
  41d69d:	icebp  
  41d69e:	sub    ebx,DWORD PTR [ebp+edx*8-0x32e8a423]
  41d6a5:	inc    esi
  41d6a6:	pusha  
  41d6a7:	dec    eax
  41d6a8:	shr    esi,cl
  41d6aa:	cdq    
  41d6ab:	(bad)  
  41d6ac:	fdivr  DWORD PTR [ebx+0x7d2ded53]
  41d6b2:	or     ecx,DWORD PTR [edi-0x32fad689]
  41d6b8:	xor    esp,DWORD PTR [edx+0x42]
  41d6bb:	daa    
  41d6bc:	xor    al,0x7a
  41d6be:	sbb    eax,0x93cb10ad
  41d6c3:	sbb    bl,BYTE PTR ds:0xaa3e9a7d
  41d6c9:	ja     0x41d64b
  41d6cb:	data16 jne 0x41d740
  41d6ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6cf:	call   0x927cd55c
  41d6d4:	call   0xce87:0x45f4487a
  41d6db:	push   esp
  41d6dc:	jns    0x41d6ed
  41d6de:	xchg   DWORD PTR [eax],eax
  41d6e0:	jmp    0x4891:0xf6535954
  41d6e7:	leave  
  41d6e8:	test   DWORD PTR [ebx+0x887a755],edi
  41d6ee:	repnz outs dx,DWORD PTR ds:[esi]
  41d6f0:	retw   0x1822
  41d6f4:	or     ah,BYTE PTR [ecx]
  41d6f6:	or     BYTE PTR [esi+0x14533de8],ch
  41d6fc:	dec    ecx
  41d6fd:	push   eax
  41d6fe:	loope  0x41d766
  41d700:	or     BYTE PTR [edi-0x2d156d36],al
  41d706:	mov    BYTE PTR [edi+edx*4-0x1a],dl
  41d70a:	packssdw mm6,mm7
  41d70d:	popf   
  41d70e:	pop    ss
  41d70f:	addr16 pop ss
  41d711:	or     al,BYTE PTR [esi]
  41d713:	sub    al,0x55
  41d715:	dec    ecx
  41d716:	cmp    ecx,edi
  41d718:	cmp    BYTE PTR [ebx-0x7c124225],bl
  41d71e:	mov    dl,0xa0
  41d720:	(bad)  
  41d722:	jle    0x41d6b6
  41d724:	out    dx,eax
  41d725:	mov    ds:0xc5ad57d0,eax
  41d72a:	repz jle 0x41d714
  41d72d:	ss jmp 0x65d6:0x76efd4d1
  41d735:	mov    ecx,0xd8903b24
  41d73a:	ins    BYTE PTR es:[edi],dx
  41d73b:	pop    ds
  41d73c:	xchg   ebp,eax
  41d73d:	sbb    eax,0xb406ae26
  41d742:	lahf   
  41d743:	js     0x41d6dc
  41d745:	jbe    0x41d791
  41d747:	mov    edx,0xc8ffaf7e
  41d74c:	sbb    eax,0xd32e6b35
  41d751:	and    cl,BYTE PTR [esi]
  41d753:	mul    BYTE PTR [esi-0x47c3ed40]
  41d759:	nop
  41d75a:	mov    al,0xf5
  41d75c:	inc    ebx
  41d75d:	fidiv  DWORD PTR [ebp+0x7e509b82]
  41d763:	mov    cl,0xda
  41d765:	sub    eax,0xcfaae94c
  41d76a:	mov    eax,0x11f92729
  41d76f:	and    eax,0x52ff58c3
  41d774:	retf   0x800e
  41d777:	mov    bh,0xc6
  41d779:	lock std 
  41d77b:	cli    
  41d77c:	inc    ecx
  41d77d:	mov    ecx,0xd12bdffc
  41d782:	dec    ebx
  41d783:	jb     0x41d75b
  41d785:	pushf  
  41d786:	jecxz  0x41d7d8
  41d788:	fimul  WORD PTR [edx-0x4c]
  41d78b:	test   BYTE PTR [ebx],cl
  41d78d:	pop    edi
  41d78e:	lds    edi,FWORD PTR [ebx+eax*1-0x6d1ad5a1]
  41d795:	inc    esp
  41d796:	repz jmp DWORD PTR [edi+ecx*2+0xbff8207]
  41d79e:	lea    eax,[edx+0x7d]
  41d7a1:	jns    0x41d783
  41d7a3:	(bad)  
  41d7a5:	add    al,0x7c
  41d7a7:	pop    ds
  41d7a8:	std    
  41d7a9:	sar    cl,1
  41d7ab:	into   
  41d7ac:	repz jl 0x41d808
  41d7af:	fld    st(1)
  41d7b1:	mov    ebx,0xddcee80e
  41d7b6:	bnd ret 
  41d7b8:	lea    esi,[ebp+0x7c13d62d]
  41d7be:	lea    eax,ds:0x4bc56dd3
  41d7c4:	fbstp  TBYTE PTR [eax+0x2c673b98]
  41d7ca:	adc    DWORD PTR [ecx-0x14],edi
  41d7cd:	jb     0x41d848
  41d7cf:	gs push es
  41d7d1:	and    al,0x12
  41d7d3:	mov    ecx,0x16cc899c
  41d7d8:	test   eax,0xe96c929e
  41d7dd:	fnsave [ecx]
  41d7df:	adc    DWORD PTR [esi-0x77],edi
  41d7e2:	sar    DWORD PTR [edx-0x76a1a79a],1
  41d7e8:	sbb    dh,BYTE PTR [edx+ebx*1]
  41d7eb:	pop    ebx
  41d7ec:	test   al,0x8a
  41d7ee:	into   
  41d7ef:	sbb    eax,0x995864b0
  41d7f4:	mov    ss,edx
  41d7f6:	ret    
  41d7f7:	je     0x41d7de
  41d7f9:	hlt    
  41d7fa:	ja     0x41d803
  41d7fc:	mov    bl,0xf6
  41d7fe:	mov    ebp,0x7367bc67
  41d803:	jge    0x41d7a8
  41d805:	cmp    BYTE PTR [edx-0x42],bl
  41d808:	inc    ecx
  41d809:	out    0xb7,al
  41d80b:	(bad)  
  41d80c:	popa   
  41d80d:	lahf   
  41d80e:	and    al,0x6d
  41d810:	xchg   ebp,eax
  41d811:	pop    esp
  41d812:	dec    ecx
  41d813:	fdiv   st(4),st
  41d815:	(bad)  
  41d816:	not    DWORD PTR [edi+0x61]
  41d819:	add    bh,al
  41d81b:	or     eax,DWORD PTR [eax+0x4c89932e]
  41d821:	sub    BYTE PTR [edx-0x3ef773a9],ah
  41d827:	jp     0x41d83b
  41d829:	inc    ebp
  41d82a:	ss std 
  41d82c:	div    DWORD PTR [ecx-0x16d7537]
  41d832:	jle    0x41d802
  41d834:	add    bh,BYTE PTR [edx+0xc]
  41d837:	or     bl,BYTE PTR ds:0x819c6d1e
  41d83d:	sar    BYTE PTR [edx],0x94
  41d840:	pop    edi
  41d841:	pop    ebx
  41d842:	xchg   esi,eax
  41d843:	retf   
  41d844:	cmp    eax,0x8bdb4a45
  41d849:	aad    0xed
  41d84b:	jnp    0x41d8ad
  41d84d:	ss jo  0x41d89e
  41d850:	(bad)  
  41d851:	imul   edi,ebp,0x3c
  41d854:	xor    DWORD PTR [edi-0x46],ebp
  41d857:	xor    al,0x5e
  41d859:	sbb    ebp,eax
  41d85b:	pop    edi
  41d85c:	jmp    0xfea0cd24
  41d861:	jnp    0x41d8c5
  41d863:	cmp    esp,DWORD PTR [esp+esi*1+0x4b]
  41d867:	ja     0x41d852
  41d869:	dec    ecx
  41d86a:	(bad)  
  41d86b:	nop
  41d86c:	(bad)  
  41d86e:	aam    0x65
  41d870:	jg     0x41d845
  41d872:	pop    edx
  41d873:	adc    eax,0x569d9f3f
  41d878:	sbb    edx,edx
  41d87a:	adc    eax,0xc2a5cc47
  41d87f:	dec    edi
  41d880:	adc    DWORD PTR ds:0x40da3df5,ecx
  41d886:	or     al,BYTE PTR [ebx+0x18de2637]
  41d88c:	je     0x41d8c5
  41d88e:	xor    al,0x16
  41d890:	jo     0x41d8be
  41d892:	adc    eax,0x2eddbb28
  41d897:	jle    0x41d89e
  41d899:	lods   al,BYTE PTR ds:[esi]
  41d89a:	or     DWORD PTR [edx+0x3b],0x17
  41d89e:	imul   edx,DWORD PTR [edi-0x1b822750],0xb44b9ed0
  41d8a8:	call   0xc200:0xb97b913f
  41d8af:	sbb    DWORD PTR [edx-0x59],eax
  41d8b2:	pop    edx
  41d8b3:	or     BYTE PTR [ecx-0x1b296593],dh
  41d8b9:	enter  0xa207,0xb5
  41d8bd:	and    DWORD PTR [ebx-0x2e95291],ebp
  41d8c3:	mov    al,BYTE PTR [ebx+ebx*8]
  41d8c6:	int3   
  41d8c7:	test   eax,0xa46b230f
  41d8cc:	and    ebx,eax
  41d8ce:	gs js  0x41d898
  41d8d1:	mov    dl,BYTE PTR [ecx+0x402ab543]
  41d8d7:	push   ebx
  41d8d8:	mov    ebx,0x7407d74f
  41d8dd:	mov    esp,0xd7126d20
  41d8e2:	and    DWORD PTR [eax-0x971b8a3],edx
  41d8e8:	push   ebp
  41d8e9:	mov    ss,WORD PTR [esi+0x1a230534]
  41d8ef:	arpl   WORD PTR [esi+0x73ab9500],di
  41d8f5:	push   esi
  41d8f6:	jmp    0xb854:0xaa0bfc47
  41d8fd:	push   eax
  41d8fe:	push   0xffffff89
  41d900:	cmp    eax,0x54892501
  41d905:	mov    edx,0xa3e9a477
  41d90a:	mov    esp,0xcdeeb734
  41d90f:	adc    DWORD PTR [esi+ebx*4+0x2b923b5],edi
  41d916:	aas    
  41d917:	push   0x26317a0c
  41d91c:	xchg   ebx,eax
  41d91d:	pop    ss
  41d91e:	and    al,0xa6
  41d920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d921:	mov    edx,0x1ca3e9c3
  41d926:	inc    edi
  41d927:	ins    BYTE PTR es:[edi],dx
  41d928:	xchg   edi,eax
  41d929:	fimul  DWORD PTR [ecx-0x6c]
  41d92c:	push   edx
  41d92d:	nop
  41d92e:	or     eax,0x692a066d
  41d933:	pop    ebp
  41d934:	add    al,0xcf
  41d936:	fsub   DWORD PTR [esi+0x66d78a6c]
  41d93c:	jae    0x41d8c0
  41d93e:	js     0x41d8ca
  41d940:	jg     0x41d92c
  41d942:	in     al,0xa9
  41d944:	fs and eax,0xb0dbcd2a
  41d94a:	bound  ebx,QWORD PTR [eax+0xcb964c]
  41d950:	test   eax,0xf301cc1e
  41d955:	dec    ebp
  41d956:	cs out dx,al
  41d958:	mov    eax,ds:0xf2264ea8
  41d95d:	loopne 0x41d918
  41d95f:	lods   eax,DWORD PTR ds:[esi]
  41d960:	pop    esi
  41d961:	mov    eax,0x717fe418
  41d966:	(bad)  
  41d967:	out    0xfd,al
  41d969:	dec    esp
  41d96a:	rol    BYTE PTR [edi-0x14d06cb3],1
  41d970:	xchg   ebp,eax
  41d971:	clc    
  41d972:	sub    eax,0xfe576833
  41d977:	not    DWORD PTR [ecx+0x5c]
  41d97a:	push   esp
  41d97b:	mov    WORD PTR [ecx-0x4b],ds
  41d97e:	jecxz  0x41d90b
  41d980:	mov    ebx,0xa69d340f
  41d985:	and    eax,0xcd272ee5
  41d98a:	jl     0x41d9c5
  41d98c:	ror    BYTE PTR [esi+edi*8],1
  41d98f:	lock adc ebx,DWORD PTR [ebp+0x6a]
  41d993:	push   ecx
  41d994:	or     al,0x58
  41d996:	idiv   DWORD PTR [eax+0x22eaf340]
  41d99c:	das    
  41d99d:	fistp  QWORD PTR [esi+eax*8]
  41d9a0:	popf   
  41d9a1:	aaa    
  41d9a2:	outs   dx,DWORD PTR ds:[esi]
  41d9a3:	pop    ebx
  41d9a4:	jne    0x41d981
  41d9a6:	jl     0x41d969
  41d9a8:	fwait
  41d9a9:	retf   0xfd13
  41d9ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9ad:	js     0x41d952
  41d9af:	pop    ecx
  41d9b0:	das    
  41d9b1:	ffreep st(2)
  41d9b3:	jmp    0x4c07287a
  41d9b8:	mov    edi,0x11148915
  41d9bd:	test   al,0x8
  41d9bf:	mov    ds,WORD PTR [ecx+edx*2]
  41d9c2:	inc    esi
  41d9c3:	ror    BYTE PTR [esi],1
  41d9c5:	stos   DWORD PTR es:[edi],eax
  41d9c6:	(bad)  
  41d9c7:	scas   eax,DWORD PTR es:[edi]
  41d9c8:	popaw  
  41d9ca:	sbb    eax,0xbc86f4dc
  41d9cf:	mov    DWORD PTR [esi+0x3a],esi
  41d9d2:	jmp    0x1289b3a2
  41d9d7:	inc    esp
  41d9d8:	mov    esp,DWORD PTR [esp+ebx*4+0x6c]
  41d9dc:	mov    esi,?
  41d9de:	jp     0x41d9fc
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	in     al,dx
  41d9e2:	stos   DWORD PTR es:[edi],eax
  41d9e3:	shl    DWORD PTR [ebx],0x57
  41d9e6:	cmp    ch,dl
  41d9e8:	or     al,0x2b
  41d9ea:	pop    ebp
  41d9eb:	mov    bh,0x38
  41d9ed:	or     eax,0x4f375c81
  41d9f2:	adc    al,0xca
  41d9f4:	pop    eax
  41d9f5:	(bad)  
  41d9f6:	loopne 0x41da20
  41d9f8:	ret    0xf95c
  41d9fb:	xor    al,0x8b
  41d9fd:	jge    0x41d9c2
  41d9ff:	add    BYTE PTR [ebp+0x5f],0xd8
  41da03:	mov    dh,0x31
  41da05:	mov    edi,edi
  41da07:	push   esp
  41da08:	cmp    eax,0x46941a7c
  41da0d:	push   ecx
  41da0e:	mov    eax,ds:0x3a18801
  41da13:	dec    esp
  41da14:	ja     0x41da1a
  41da16:	xor    dh,al
  41da18:	ins    DWORD PTR es:[edi],dx
  41da19:	or     eax,0xfae520c7
  41da1e:	mov    WORD PTR [edi-0x13],ds
  41da21:	(bad)  
  41da22:	bound  ebp,QWORD PTR [edx+0x5d9c1b6a]
  41da28:	and    ebx,DWORD PTR [edx+esi*4-0x64]
  41da2c:	push   ebx
  41da2d:	cli    
  41da2e:	mov    BYTE PTR [ecx-0x69],al
  41da31:	dec    eax
  41da32:	scas   al,BYTE PTR es:[edi]
  41da33:	imul   esp,DWORD PTR [edx],0x27
  41da36:	(bad)  
  41da37:	(bad)  
  41da38:	xchg   edx,eax
  41da39:	or     DWORD PTR [edx],eax
  41da3b:	push   0xa9bb66a1
  41da40:	pop    ebp
  41da41:	mov    bl,0x7
  41da43:	adc    eax,ecx
  41da45:	jmp    0x41da98
  41da47:	push   eax
  41da48:	out    0x67,eax
  41da4a:	push   cs
  41da4b:	mov    ebp,0xb9dcb16
  41da50:	clc    
  41da51:	ss into 
  41da53:	sub    BYTE PTR [esi+0x5b],bh
  41da56:	and    DWORD PTR [ebx-0x6d],eax
  41da59:	or     DWORD PTR [ecx+0x4b],edx
  41da5c:	loop   0x41d9ec
  41da5e:	dec    esp
  41da5f:	push   eax
  41da60:	hlt    
  41da61:	sbb    eax,0x36bb4e24
  41da66:	push   edx
  41da67:	mov    al,0x4d
  41da69:	xor    eax,DWORD PTR [edx+edx*4-0x3ff8b498]
  41da70:	mov    esi,0x3482ebd3
  41da75:	or     BYTE PTR ds:0xc70ef41a,ah
  41da7b:	nop
  41da7c:	popf   
  41da7d:	pop    esi
  41da7e:	(bad)  
  41da7f:	ror    BYTE PTR [esp+ecx*2],1
  41da82:	jo     0x41daea
  41da84:	cmp    DWORD PTR [edi+0x74],eax
  41da87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da88:	inc    ebp
  41da89:	retf   0x51d3
  41da8c:	adc    DWORD PTR [ebx-0x55360027],eax
  41da92:	pushf  
  41da93:	(bad)  
  41da94:	mov    dl,0xb1
  41da96:	push   ecx
  41da97:	out    dx,al
  41da98:	cmp    al,0x4f
  41da9a:	addr16 jmp 0xbad7b76c
  41daa0:	div    BYTE PTR [eax]
  41daa2:	and    edx,esp
  41daa4:	cvtps2pd xmm3,QWORD PTR [edi-0x66cb6cde]
  41daab:	mov    edi,0x9152d17d
  41dab0:	mov    ch,0x2d
  41dab2:	scas   eax,DWORD PTR es:[edi]
  41dab3:	loopne 0x41da73
  41dab5:	ins    DWORD PTR es:[edi],dx
  41dab6:	(bad)  
  41dab8:	mov    dl,0x17
  41daba:	inc    edi
  41dabb:	daa    
  41dabc:	test   BYTE PTR [eax+0x2a],ah
  41dabf:	mov    ds:0xfa4bb4ca,al
  41dac4:	push   cs
  41dac5:	retf   
  41dac6:	and    dl,ch
  41dac8:	neg    BYTE PTR [edx-0x19fb9808]
  41dace:	mov    esp,0x8462bd3a
  41dad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dad4:	cmp    al,0xcb
  41dad6:	sub    dh,BYTE PTR [ebx-0x60]
  41dad9:	call   0xa9b5:0x59629643
  41dae0:	xor    al,0x72
  41dae2:	or     ebp,ecx
  41dae4:	loope  0x41db40
  41dae6:	xor    ebp,ecx
  41dae8:	scas   al,BYTE PTR es:[edi]
  41dae9:	push   0xe906e5ed
  41daee:	pop    ss
  41daef:	nop
  41daf0:	mov    ebp,DWORD PTR [esi+0x5675c9a9]
  41daf6:	pushf  
  41daf7:	lds    esi,FWORD PTR [esi+0x63454516]
  41dafd:	pop    ebx
  41dafe:	fisttp DWORD PTR [esi]
  41db00:	jmp    0x41daff
  41db02:	jmp    0x180ee43c
  41db07:	cmp    DWORD PTR [edx-0x2d],edx
  41db0a:	cld    
  41db0b:	mov    ch,0xd6
  41db0d:	jnp    0x41db0a
  41db0f:	aaa    
  41db10:	sbb    dl,BYTE PTR [edx+eax*1-0x52d6d4f3]
  41db17:	rol    BYTE PTR [edi],1
  41db19:	int3   
  41db1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db1b:	sahf   
  41db1c:	fld    QWORD PTR fs:[esi-0x76877506]
  41db23:	sbb    BYTE PTR [ecx+0x3],ch
  41db26:	xchg   ebx,eax
  41db27:	ret    
  41db28:	dec    ebx
  41db29:	xchg   ebp,eax
  41db2a:	enter  0xe086,0x6b
  41db2e:	arpl   WORD PTR [ecx+edi*8-0x282030c0],bp
  41db35:	aaa    
  41db36:	mov    esi,DWORD PTR [eax-0x7a2c6738]
  41db3c:	std    
  41db3d:	mov    esp,0xaefd01
  41db42:	mov    ds:0x1d8015f0,eax
  41db47:	ins    DWORD PTR es:[edi],dx
  41db48:	out    dx,eax
  41db49:	rcr    DWORD PTR [eax+0x697325c1],1
  41db4f:	xchg   edx,eax
  41db50:	bound  edx,QWORD PTR [eax]
  41db52:	cdq    
  41db53:	test   BYTE PTR [esi+0x2b],al
  41db56:	daa    
  41db57:	jnp    0x41db14
  41db59:	arpl   WORD PTR [edx+0x81fe47c],sp
  41db5f:	jmp    edx
  41db61:	lods   al,BYTE PTR ds:[esi]
  41db62:	add    al,0x9e
  41db64:	jo     0x41dbd2
  41db66:	sub    DWORD PTR [edi-0x29],esp
  41db69:	xchg   BYTE PTR [ebx+0x64],ah
  41db6c:	outs   dx,BYTE PTR ds:[esi]
  41db6d:	cdq    
  41db6e:	cdq    
  41db6f:	adc    al,ch
  41db71:	xor    BYTE PTR [edx],al
  41db73:	lods   al,BYTE PTR ds:[esi]
  41db74:	jmp    0x41dbb4
  41db76:	scas   al,BYTE PTR es:[edi]
  41db77:	inc    ebp
  41db78:	das    
  41db79:	and    eax,0x9eabbd8a
  41db7e:	sub    al,0x8
  41db80:	add    DWORD PTR [ecx+0x33fe7a2b],0xd7e8d8c9
  41db8a:	xor    bl,BYTE PTR [edx+esi*8-0x92c2817]
  41db91:	jle    0x41db99
  41db93:	xchg   ecx,eax
  41db94:	out    0x50,al
  41db96:	xchg   ecx,eax
  41db97:	cmc    
  41db98:	lods   eax,DWORD PTR ds:[esi]
  41db99:	imul   ebx,DWORD PTR [ebp-0x330620f2],0xd
  41dba0:	sub    ch,BYTE PTR [ebp+eax*1-0x43]
  41dba4:	adc    DWORD PTR [edi],ecx
  41dba6:	mov    edi,0x53ab9f1d
  41dbab:	imul   ebx,DWORD PTR [edx-0x38],0x84be86f
  41dbb2:	dec    ebx
  41dbb3:	sbb    edx,DWORD PTR [ebp+0x6c23f7ac]
  41dbb9:	dec    edx
  41dbba:	not    BYTE PTR [edi]
  41dbbc:	inc    esp
  41dbbd:	pop    ecx
  41dbbe:	and    DWORD PTR [edx],ecx
  41dbc0:	arpl   WORD PTR [ebx+eax*8+0x53],di
  41dbc4:	jmp    0xea9f:0xb41d47ab
  41dbcb:	pop    ebp
  41dbcc:	fs mov ecx,0x4c2b53df
  41dbd2:	mov    ch,0x40
  41dbd4:	cmp    BYTE PTR [eax+0x64f391a9],ch
  41dbda:	xchg   esi,eax
  41dbdb:	and    eax,0x8556db74
  41dbe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbe1:	(bad)  [ebp-0x6a]
  41dbe4:	aam    0x20
  41dbe6:	or     al,0x92
  41dbe8:	nop
  41dbe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbea:	mov    esi,0xaf2f9d93
  41dbef:	loop   0x41dc3e
  41dbf1:	dec    ecx
  41dbf2:	adc    al,0x1a
  41dbf4:	sti    
  41dbf5:	jo     0x41dbef
  41dbf7:	hlt    
  41dbf8:	bound  ebp,QWORD PTR [ecx]
  41dbfa:	aam    0x41
  41dbfc:	clc    
  41dbfd:	mov    dh,0xc5
  41dbff:	cs cmc 
  41dc01:	and    esi,DWORD PTR [si]
  41dc04:	xor    edi,DWORD PTR [ebx+0x1d18ef51]
  41dc0a:	retf   
  41dc0b:	aaa    
  41dc0c:	shl    bl,0x6a
  41dc0f:	xor    DWORD PTR [ebx+0x5e6d2db1],edx
  41dc15:	rcr    DWORD PTR [ecx-0x16],0xdc
  41dc19:	jmp    0xbb14:0x1be0d217
  41dc20:	mov    ds:0xe37ba38a,al
  41dc25:	mov    dh,0xcf
  41dc27:	cmp    edi,esp
  41dc29:	dec    esp
  41dc2a:	push   cs
  41dc2b:	add    al,BYTE PTR [ebp-0x13]
  41dc2e:	fild   QWORD PTR [ecx-0x78c075dc]
  41dc34:	in     eax,dx
  41dc35:	push   ecx
  41dc36:	dec    esi
  41dc37:	cld    
  41dc38:	xchg   ecx,eax
  41dc39:	es jnp 0x41dc32
  41dc3c:	xchg   esi,eax
  41dc3d:	mov    dh,BYTE PTR [esi+0x424e8a03]
  41dc43:	xchg   ecx,eax
  41dc44:	scas   eax,DWORD PTR es:[edi]
  41dc45:	gs mov bl,cl
  41dc48:	pushf  
  41dc49:	pop    ebx
  41dc4a:	sub    BYTE PTR [ebp+0x42],ah
  41dc4d:	ficomp WORD PTR [edi-0x30]
  41dc50:	fidiv  WORD PTR [esi]
  41dc52:	lea    ebp,[eax+0x631fc1b1]
  41dc58:	inc    ecx
  41dc59:	je     0x41dbdb
  41dc5b:	dec    ebx
  41dc5c:	pop    edx
  41dc5d:	test   ebp,0x80534cbc
  41dc63:	retf   
  41dc64:	pop    edx
  41dc65:	mov    esp,0xdd71ca50
  41dc6a:	dec    ecx
  41dc6b:	outs   dx,BYTE PTR ds:[esi]
  41dc6c:	enter  0x378,0x5
  41dc70:	inc    ebx
  41dc71:	xchg   edi,eax
  41dc72:	mov    edx,0x9db2aa3f
  41dc77:	mov    edx,0x4b5ede6c
  41dc7c:	mov    esp,0xdc918ee8
  41dc81:	sub    eax,0x9882bda2
  41dc86:	push   es
  41dc87:	loope  0x41dc47
  41dc89:	pop    ecx
  41dc8a:	test   al,0x71
  41dc8c:	mov    DWORD PTR ds:0x46fd0b5f,ebp
  41dc92:	cmp    esi,ecx
  41dc94:	lds    edx,FWORD PTR [ecx+0x5540e606]
  41dc9a:	pop    ebp
  41dc9b:	sbb    eax,0x20b999c6
  41dca0:	jmp    0x95f48f1
  41dca5:	retf   
  41dca6:	adc    ch,BYTE PTR [edx+edi*1-0x71]
  41dcaa:	ds add bh,ah
  41dcad:	nop
  41dcae:	lock test DWORD PTR [esi+0x5595b02e],esi
  41dcb5:	das    
  41dcb6:	aas    
  41dcb7:	add    BYTE PTR [eax-0x19feddb5],0xe0
  41dcbe:	(bad)  
  41dcbf:	jmp    0x1d824c74
  41dcc4:	xor    eax,0x36b3a3fe
  41dcc9:	xor    ah,ch
  41dccb:	push   cs
  41dccc:	mov    WORD PTR [edi-0x7a],ss
  41dccf:	gs push edi
  41dcd1:	sub    esp,DWORD PTR [edx-0x4a]
  41dcd4:	daa    
  41dcd5:	test   eax,0x57ccce80
  41dcda:	or     eax,0x7165de9f
  41dcdf:	scas   eax,DWORD PTR es:[edi]
  41dce0:	mov    esi,0x3065dca7
  41dce5:	adc    al,0x29
  41dce7:	sub    eax,0x7233ff4b
  41dcec:	cli    
  41dced:	call   0x89a3:0x3736ad08
  41dcf4:	(bad)  
  41dcf5:	call   0x40664dfa
  41dcfa:	cld    
  41dcfb:	mov    WORD PTR [eax+esi*4-0x53a5c040],gs
  41dd02:	xchg   ecx,eax
  41dd03:	or     eax,0x71f117ca
  41dd08:	ss cld 
  41dd0a:	aam    0xfc
  41dd0c:	mov    ebx,0x2f3ff649
  41dd11:	lock fsubr QWORD PTR [ebx+0x26]
  41dd15:	mov    ds:0x15d88c2,al
  41dd1a:	xchg   esp,eax
  41dd1b:	ret    0xf93a
  41dd1e:	sub    DWORD PTR [edx+edx*4-0x19],esi
  41dd22:	add    esp,ebx
  41dd24:	mov    dh,0x67
  41dd26:	pop    es
  41dd27:	aad    0x9b
  41dd29:	inc    edx
  41dd2a:	in     eax,0xe2
  41dd2c:	dec    eax
  41dd2d:	mov    dl,BYTE PTR [edi]
  41dd2f:	into   
  41dd30:	cmp    eax,0xc8e66316
  41dd35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd36:	mov    ss,WORD PTR [ebp+0x3f51820c]
  41dd3c:	aad    0xaa
  41dd3e:	xchg   esp,eax
  41dd3f:	or     dl,BYTE PTR [edi*8+0x4dbfca2d]
  41dd46:	fldz   
  41dd48:	xlat   BYTE PTR ds:[ebx]
  41dd49:	dec    ecx
  41dd4a:	or     eax,edx
  41dd4c:	not    BYTE PTR ds:0xfdfa4bb9
  41dd52:	pop    ss
  41dd53:	xor    eax,0x2be8322
  41dd58:	dec    edi
  41dd59:	dec    esp
  41dd5a:	or     al,0xb2
  41dd5c:	in     al,dx
  41dd5d:	dec    ebp
  41dd5e:	mov    dh,0xad
  41dd60:	xchg   ebx,eax
  41dd61:	scas   al,BYTE PTR es:[edi]
  41dd62:	movntq QWORD PTR [edx-0x5dd98e46],mm7
  41dd69:	stos   DWORD PTR es:[edi],eax
  41dd6a:	fstp   DWORD PTR ds:0x45be8bf7
  41dd70:	lea    edi,ds:0xa186d8be
  41dd76:	aam    0xb7
  41dd78:	xchg   ebp,eax
  41dd79:	and    DWORD PTR [eax-0x33e485c9],esi
  41dd7f:	push   cs
  41dd80:	jno    0x41dddc
  41dd82:	mov    cl,0xd0
  41dd84:	push   es
  41dd85:	mov    cl,0xd6
  41dd87:	out    0xa9,al
  41dd89:	cdq    
  41dd8a:	fist   DWORD PTR [esi+0x4a4bc174]
  41dd90:	or     eax,0xe9c03120
  41dd95:	sbb    ch,ah
  41dd97:	retf   0xb9b3
  41dd9a:	retf   0xa6ec
  41dd9d:	adc    dh,BYTE PTR [ebp-0x54db5468]
  41dda3:	inc    esi
  41dda4:	ret    
  41dda5:	or     DWORD PTR [eax+0x1],edx
  41dda8:	mov    bl,0xce
  41ddaa:	and    cl,BYTE PTR [esi+0x5f9362e1]
  41ddb0:	rcr    BYTE PTR [ecx+0x41],1
  41ddb3:	mov    bl,BYTE PTR [eax-0x2f]
  41ddb6:	jns    0x41de17
  41ddb8:	dec    edx
  41ddb9:	and    al,BYTE PTR [ecx+0x3b]
  41ddbc:	mov    ecx,0xba10ddea
  41ddc1:	lds    ebp,FWORD PTR [ebx+0x7f144662]
  41ddc7:	rol    DWORD PTR [eax],1
  41ddc9:	(bad)  
  41ddca:	push   esi
  41ddcb:	popf   
  41ddcc:	icebp  
  41ddcd:	dec    esi
  41ddce:	xlat   BYTE PTR ds:[ebx]
  41ddcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddd0:	and    esp,0xee6846a4
  41ddd6:	sahf   
  41ddd7:	mov    ecx,DWORD PTR [ebx]
  41ddd9:	cmp    cl,0x9e
  41dddc:	lods   al,BYTE PTR ds:[esi]
  41dddd:	push   edi
  41ddde:	and    edi,DWORD PTR [ecx-0x327aef87]
  41dde4:	fucom  st(5)
  41dde6:	mov    ds:0x42bdbefe,al
  41ddeb:	dec    eax
  41ddec:	shr    DWORD PTR [ecx],cl
  41ddee:	jmp    0x41ddfc
  41ddf0:	jbe    0x41ddea
  41ddf2:	push   esp
  41ddf3:	sub    BYTE PTR [esi+eiz*1-0x35250745],bh
  41ddfa:	xchg   esi,eax
  41ddfb:	adc    ecx,DWORD PTR [esp+eiz*4+0xc4d12c4]
  41de02:	out    0x80,al
  41de04:	mov    dh,0x27
  41de06:	sbb    BYTE PTR [edi-0x3676629a],bh
  41de0c:	dec    ebp
  41de0d:	pop    cx
  41de0f:	mov    eax,0x28884775
  41de14:	ficom  WORD PTR [eax+0x4de7234c]
  41de1a:	imul   eax,DWORD PTR [esi-0x51],0x3e
  41de1e:	cmp    ecx,DWORD PTR [ecx-0x7b2ca2e4]
  41de24:	sub    esi,DWORD PTR [esi]
  41de26:	leave  
  41de27:	mov    ds,WORD PTR ds:[ebx+0x46a8a4f4]
  41de2e:	not    DWORD PTR [ecx-0x6b3654c4]
  41de34:	sbb    al,0x79
  41de36:	rcr    DWORD PTR [eax+ebx*4-0x40],1
  41de3a:	mov    dh,0x38
  41de3c:	sahf   
  41de3d:	mov    cl,0x1a
  41de3f:	mov    cs:0x3b614607,al
  41de45:	lods   eax,DWORD PTR ds:[esi]
  41de46:	loopne 0x41deaf
  41de48:	or     ch,BYTE PTR [eax]
  41de4a:	fld    QWORD PTR [ecx+0x8]
  41de4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de4f:	jnp    0x41de7e
  41de51:	test   al,0x48
  41de53:	cmp    ebp,DWORD PTR [edx]
  41de55:	mov    edx,0x94665151
  41de5a:	or     dh,dh
  41de5c:	adc    al,0x1d
  41de5e:	repnz cmp bl,BYTE PTR [ebp-0x3ba9281b]
  41de65:	mov    cl,0x90
  41de67:	shl    DWORD PTR [edi+0x1d],1
  41de6a:	mov    esi,0x7b8412b9
  41de6f:	push   edi
  41de70:	add    dh,BYTE PTR [ebx-0x79676958]
  41de76:	add    al,0x68
  41de78:	xchg   ebx,eax
  41de79:	ins    DWORD PTR es:[edi],dx
  41de7a:	shl    BYTE PTR [edi+0x6e],cl
  41de7d:	in     eax,dx
  41de7e:	data16 (bad) 
  41de80:	lods   eax,DWORD PTR ds:[esi]
  41de81:	in     eax,0x2
  41de83:	sahf   
  41de84:	xor    DWORD PTR [ecx+0x4e65d472],ebx
  41de8a:	gs xchg ecx,eax
  41de8c:	cwde   
  41de8d:	shr    BYTE PTR [ecx],1
  41de8f:	je     0x41def1
  41de91:	jo     0x41ded5
  41de93:	dec    ebp
  41de94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de95:	mov    bl,0x8d
  41de97:	cs pop ecx
  41de99:	jae    0x41de1b
  41de9b:	stc    
  41de9c:	mov    eax,ds:0x66b56185
  41dea1:	and    eax,0x8767e98b
  41dea6:	aam    0x52
  41dea8:	pop    edx
  41dea9:	mov    bl,0xeb
  41deab:	and    DWORD PTR [ecx-0x12],edi
  41deae:	push   es
  41deaf:	scas   al,BYTE PTR es:[edi]
  41deb0:	lods   eax,DWORD PTR ds:[esi]
  41deb1:	not    ebx
  41deb3:	push   0xffffffa6
  41deb5:	repz out dx,al
  41deb7:	jl     0x41de40
  41deb9:	mov    ds:0x3a3e0e2,eax
  41debe:	dec    edx
  41debf:	add    al,dh
  41dec1:	or     cl,BYTE PTR [eax-0x2039566]
  41dec7:	(bad)  
  41dec8:	aad    0xa2
  41deca:	inc    ecx
  41decb:	out    dx,eax
  41decc:	cmp    dh,0x1c
  41decf:	jbe    0x41de86
  41ded1:	ficomp DWORD PTR [ebx]
  41ded3:	clc    
  41ded4:	retf   0xd0c5
  41ded7:	imul   ebp,DWORD PTR [edx+0x2e],0xeb859e43
  41dede:	xchg   edx,ecx
  41dee0:	mov    esi,0x2d3c9382
  41dee5:	fwait
  41dee6:	dec    ebp
  41dee7:	test   al,0xd0
  41dee9:	xchg   ecx,eax
  41deea:	je     0x41de88
  41deec:	shl    BYTE PTR [edi+0x7b],1
  41deef:	je     0x41dede
  41def1:	xor    esp,DWORD PTR [ebp+0x68]
  41def4:	retf   
  41def5:	dec    ebp
  41def6:	inc    ecx
  41def7:	cli    
  41def8:	call   FWORD PTR [ebx+0x29be43e1]
  41defe:	xlat   BYTE PTR ds:[ebx]
  41deff:	dec    esi
  41df00:	das    
  41df01:	scas   al,BYTE PTR es:[edi]
  41df02:	into   
  41df03:	leave  
  41df04:	adc    BYTE PTR [eax],bh
  41df06:	in     al,dx
  41df07:	(bad)  
  41df08:	rcr    BYTE PTR [eax+0x451a45dd],0x1e
  41df0f:	add    BYTE PTR [ebp+ecx*4-0x3ed2e0b9],0xd4
  41df17:	ins    BYTE PTR es:[edi],dx
  41df18:	fwait
  41df19:	loope  0x41ded7
  41df1b:	ss jle 0x41df27
  41df1e:	cs push ds
  41df20:	fld    DWORD PTR [edi-0x5d55b248]
  41df26:	add    edi,eax
  41df28:	fisttp WORD PTR [eax+0x76]
  41df2b:	push   eax
  41df2c:	cmp    al,0xae
  41df2e:	in     eax,0x20
  41df30:	into   
  41df31:	ret    0x2052
  41df34:	dec    ebx
  41df35:	push   0x22f77f84
  41df3a:	or     DWORD PTR [ebp-0x6b],0x78
  41df3e:	out    0x1b,eax
  41df40:	stos   BYTE PTR es:[edi],al
  41df41:	adc    eax,0x7fbce5ac
  41df46:	lea    edx,[ecx+edx*2+0x6baec63a]
  41df4d:	sbb    BYTE PTR [ecx],bl
  41df4f:	data16 stos BYTE PTR es:[edi],al
  41df51:	push   0x1c727e98
  41df56:	cmp    BYTE PTR [esi+0x61603bf],0x8b
  41df5d:	sub    BYTE PTR [ebx],bl
  41df5f:	(bad)  
  41df60:	fsub   st(7),st
  41df62:	mov    bh,0xaa
  41df64:	push   esi
  41df65:	push   0xbcd24f3c
  41df6a:	shr    esp,0xad
  41df6d:	ins    BYTE PTR es:[edi],dx
  41df6e:	sub    BYTE PTR [ebp-0x56c72d3b],al
  41df74:	push   ss
  41df75:	pushf  
  41df76:	test   eax,0x3a3b596d
  41df7b:	jg     0x41dfac
  41df7d:	retfw  
  41df7f:	xchg   edx,eax
  41df80:	add    DWORD PTR [edi*1-0x5adf1e69],esp
  41df87:	stos   DWORD PTR es:[edi],eax
  41df88:	xchg   ebp,eax
  41df89:	mov    dl,0x59
  41df8b:	(bad)  
  41df8c:	sbb    dl,BYTE PTR [esi+0x22]
  41df8f:	lds    ebx,FWORD PTR [ebx+0x69]
  41df92:	dec    esi
  41df93:	pop    ss
  41df94:	push   ds
  41df95:	add    eax,esi
  41df97:	lea    ecx,[ebp+0x490f7337]
  41df9d:	lods   al,BYTE PTR ds:[esi]
  41df9e:	pop    ecx
  41df9f:	cmc    
  41dfa0:	pop    edx
  41dfa1:	inc    ebx
  41dfa2:	into   
  41dfa3:	aas    
  41dfa4:	(bad)  
  41dfa5:	out    0xa2,al
  41dfa7:	cld    
  41dfa8:	jne    0x41e014
  41dfaa:	push   ss
  41dfab:	xor    al,BYTE PTR [ebp-0x40]
  41dfae:	ds loope 0x41df56
  41dfb1:	xor    eax,0x781f84ba
  41dfb6:	xchg   esp,eax
  41dfb7:	test   al,0xf8
  41dfb9:	sbb    esp,0x3321f0c
  41dfbf:	ja     0x41e000
  41dfc1:	inc    ecx
  41dfc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfc3:	pop    ebp
  41dfc4:	mov    cl,0x56
  41dfc6:	dec    ebp
  41dfc7:	cmp    eax,0x16f7beae
  41dfcc:	push   edx
  41dfcd:	jb     0x41dfe5
  41dfcf:	and    DWORD PTR [esi-0x5a3d0103],esi
  41dfd5:	pop    ebp
  41dfd6:	sbb    BYTE PTR [esi],bl
  41dfd8:	(bad)  
  41dfd9:	xabort 0x2
  41dfdc:	adc    esi,DWORD PTR [eax-0x3a]
  41dfdf:	fbld   TBYTE PTR [esi-0x4853b4f6]
  41dfe5:	and    eax,0x8e0276cc
  41dfea:	mov    bl,0x26
  41dfec:	pop    ebp
  41dfed:	fnop   
  41dfef:	sbb    al,0x8c
  41dff1:	jg     0x41dfe8
  41dff3:	push   eax
  41dff4:	mov    esi,0x6a2b6828
  41dff9:	jae    0x41dfcd
  41dffb:	outs   dx,DWORD PTR gs:[esi]
  41dffd:	stc    
  41dffe:	xchg   edi,eax
  41dfff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e000:	inc    ebp
  41e001:	dec    esp
  41e002:	arpl   WORD PTR [ecx+eax*2+0x62fdc55b],ax
  41e009:	xor    eax,0x44afb892
  41e00e:	scas   al,BYTE PTR es:[edi]
  41e00f:	aam    0x8d
  41e011:	les    edx,FWORD PTR [ecx]
  41e013:	ss and eax,0x41570494
  41e019:	jne    0x41e03c
  41e01b:	or     DWORD PTR [edi-0x24],ebx
  41e01e:	shr    BYTE PTR [ebp+0xd],cl
  41e021:	mov    cl,0xfa
  41e023:	mov    ch,0x9f
  41e025:	xor    DWORD PTR [esi],esi
  41e027:	ret    0x417c
  41e02a:	xchg   edi,eax
  41e02b:	adc    al,0xa9
  41e02d:	cmp    DWORD PTR [edi-0x7e],ecx
  41e030:	inc    edx
  41e031:	sub    bl,BYTE PTR [edx+0x16e23955]
  41e037:	xchg   esp,eax
  41e038:	adc    cl,BYTE PTR [eax+0x45a13654]
  41e03e:	adc    ah,BYTE PTR [ebx+0x14]
  41e041:	stos   BYTE PTR es:[edi],al
  41e042:	stos   BYTE PTR es:[edi],al
  41e043:	sbb    DWORD PTR [ebp-0x5b56c0cb],ebp
  41e049:	sub    ecx,esi
  41e04b:	cwde   
  41e04c:	mov    cl,0x9a
  41e04e:	fstp   QWORD PTR [ebp-0x1f58a0c2]
  41e054:	xor    BYTE PTR [ebp+0x145300a0],ch
  41e05a:	lahf   
  41e05b:	mov    eax,0x49a40f49
  41e060:	imul   esp,DWORD PTR [ecx+0x2],0x26
  41e064:	cmp    bh,cl
  41e066:	pushf  
  41e067:	or     al,0xc5
  41e069:	cmp    esi,DWORD PTR [eax]
  41e06b:	mov    bh,0xaf
  41e06d:	push   0x48398485
  41e072:	lods   al,BYTE PTR ds:[esi]
  41e073:	fdiv   st,st(7)
  41e075:	idiv   BYTE PTR [ecx+edi*2-0x7d]
  41e079:	repnz lahf 
  41e07b:	rcl    bl,cl
  41e07d:	sub    ah,al
  41e07f:	cwde   
  41e080:	inc    esi
  41e081:	addr16 inc ebx
  41e083:	fnstsw WORD PTR [edi]
  41e085:	push   esp
  41e086:	jns    0x41e053
  41e088:	add    eax,0x495c8de2
  41e08d:	cdq    
  41e08e:	stos   DWORD PTR es:[edi],eax
  41e08f:	test   BYTE PTR [ebp-0x25],dh
  41e092:	js     0x41e0b7
  41e094:	mov    dl,dl
  41e096:	add    ch,BYTE PTR fs:[edx+0x6d87738b]
  41e09d:	jne    0x41e111
  41e09f:	mov    BYTE PTR cs:[esi],dl
  41e0a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0a3:	aad    0x7d
  41e0a5:	xor    al,BYTE PTR [ecx-0x1d]
  41e0a8:	ins    BYTE PTR es:[edi],dx
  41e0a9:	ins    BYTE PTR es:[edi],dx
  41e0aa:	or     cl,dh
  41e0ac:	push   ebp
  41e0ad:	sti    
  41e0ae:	cmc    
  41e0af:	test   BYTE PTR [esi+0x20],bh
  41e0b2:	xor    ch,BYTE PTR [edi]
  41e0b4:	rol    DWORD PTR [esi],0x7d
  41e0b7:	aad    0x71
  41e0b9:	mov    edx,0x3d8f5417
  41e0be:	xchg   BYTE PTR [ebx+ebp*4-0x38],dh
  41e0c2:	ficom  DWORD PTR [edx-0x2ff79d05]
  41e0c8:	pop    ebp
  41e0c9:	fwait
  41e0ca:	push   ebx
  41e0cb:	sbb    DWORD PTR [ebp+0x13a68148],eax
  41e0d1:	sbb    BYTE PTR [eax+eiz*1-0x1058b754],ch
  41e0d8:	fisttp DWORD PTR [esi]
  41e0da:	imul   esi,DWORD PTR [ebp+0x3ccb14b6],0x3e
  41e0e1:	push   0xffffffbe
  41e0e3:	test   DWORD PTR [ebx-0x35b4d5c6],esi
  41e0e9:	ret    
  41e0ea:	dec    edi
  41e0eb:	icebp  
  41e0ec:	inc    edx
  41e0ed:	or     bh,bl
  41e0ef:	mov    ah,0x94
  41e0f1:	or     dh,bh
  41e0f3:	into   
  41e0f4:	stos   DWORD PTR es:[edi],eax
  41e0f5:	sub    DWORD PTR ss:[edx+ebp*4],esp
  41e0f9:	mov    esi,ss
  41e0fb:	lods   eax,DWORD PTR ds:[esi]
  41e0fc:	ja     0x41e0fc
  41e0fe:	mov    ds:0x8396a3b6,al
  41e103:	mov    ecx,0xd2f8e0a8
  41e108:	pop    eax
  41e109:	lahf   
  41e10a:	mov    bh,0xc9
  41e10c:	ins    BYTE PTR es:[edi],dx
  41e10d:	pop    ecx
  41e10e:	pop    esp
  41e10f:	retf   
  41e110:	fist   WORD PTR [ecx+0x34]
  41e113:	arpl   di,di
  41e115:	mov    BYTE PTR [edi+0x16],bh
  41e118:	pop    esi
  41e119:	loop   0x41e119
  41e11b:	imul   ebx,eax,0x812b0094
  41e121:	push   ss
  41e122:	mov    esi,DWORD PTR [esi]
  41e124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e125:	sub    al,0x80
  41e127:	ret    0x546f
  41e12a:	daa    
  41e12b:	(bad)  [edi+0x48e67b4b]
  41e131:	stos   DWORD PTR es:[edi],eax
  41e132:	dec    esi
  41e133:	pop    ss
  41e134:	loopne 0x41e0d5
  41e136:	popa   
  41e137:	pop    ecx
  41e138:	inc    BYTE PTR [ecx+ecx*2+0x6e21e703]
  41e13f:	lahf   
  41e140:	bound  ebp,QWORD PTR [eax+0xbbc4d9a]
  41e146:	adc    eax,0x1b584664
  41e14b:	inc    edx
  41e14c:	rol    BYTE PTR [eax-0x26],1
  41e14f:	in     al,dx
  41e150:	add    BYTE PTR [esp+ebx*8-0x21e3f9cb],al
  41e157:	jns    0x41e155
  41e159:	mov    eax,ds:0x80bb1f39
  41e15e:	xor    DWORD PTR [ebp+0x55861d38],ebp
  41e164:	inc    edx
  41e165:	jb     0x41e17e
  41e167:	ficomp DWORD PTR [ebp+0x7436a0a]
  41e16d:	mov    dh,0xfe
  41e16f:	js     0x41e161
  41e171:	cmc    
  41e172:	add    BYTE PTR [eax],dl
  41e174:	outs   dx,DWORD PTR ds:[esi]
  41e175:	add    BYTE PTR [esi-0xdd2bd89],dh
  41e17b:	mov    esi,0x2cf3cbda
  41e180:	jle    0x41e16e
  41e182:	mov    ds:0x1780d4c3,eax
  41e187:	jmp    0x41e114
  41e189:	dec    ebx
  41e18a:	test   BYTE PTR [edx+0x6a],cl
  41e18d:	add    eax,0xb1903e3b
  41e192:	and    al,0x7e
  41e194:	sub    bl,dh
  41e196:	div    BYTE PTR [ecx-0x24]
  41e199:	pop    edx
  41e19a:	fstp   DWORD PTR [ebx+0x5a30f02b]
  41e1a0:	loop   0x41e15f
  41e1a2:	jb     0x41e1e9
  41e1a4:	stos   BYTE PTR es:[edi],al
  41e1a5:	cmp    dl,BYTE PTR [esi-0x38]
  41e1a8:	mov    al,ds:0x7bd07920
  41e1ad:	push   0x2ea67c5c
  41e1b2:	add    DWORD PTR [ebx-0x4d],0x7c5db3bd
  41e1b9:	addr16 jo 0x41e1e3
  41e1bc:	mov    bl,0x29
  41e1be:	lea    ebx,[esi-0x1fcf78e0]
  41e1c4:	sbb    eax,0x1d18533a
  41e1c9:	cmc    
  41e1ca:	ficomp DWORD PTR [eax-0x27]
  41e1cd:	inc    ebp
  41e1ce:	pop    es
  41e1cf:	xor    eax,0xedef31bb
  41e1d4:	pop    eax
  41e1d5:	cld    
  41e1d6:	inc    ebx
  41e1d7:	(bad)  
  41e1d8:	pop    eax
  41e1d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1da:	repz gs pop ebp
  41e1dd:	cmp    eax,0xaedc64e0
  41e1e2:	popf   
  41e1e3:	inc    edx
  41e1e4:	inc    ecx
  41e1e5:	shl    DWORD PTR [eax],cl
  41e1e7:	mov    bl,al
  41e1e9:	outs   dx,DWORD PTR ds:[esi]
  41e1ea:	xor    esi,0x651c0587
  41e1f0:	push   ebx
  41e1f1:	mov    bl,0xb1
  41e1f3:	in     al,0x2c
  41e1f5:	fnsave [ebx]
  41e1f7:	push   edi
  41e1f8:	dec    BYTE PTR [ecx]
  41e1fa:	jecxz  0x41e207
  41e1fc:	fstp   TBYTE PTR [ecx+eax*2+0x3f12daf3]
  41e203:	and    DWORD PTR [ebx],esp
  41e205:	adc    al,al
  41e207:	repnz (bad) 
  41e209:	pusha  
  41e20a:	add    BYTE PTR [edx-0x622f3c8a],0x6f
  41e211:	xchg   ebp,eax
  41e212:	and    dl,BYTE PTR [ebp-0x1b8e6793]
  41e218:	neg    ebx
  41e21a:	mov    edi,0xf3ff046e
  41e21f:	hlt    
  41e220:	add    dh,bl
  41e222:	addr16 mov bh,0x2d
  41e225:	test   al,0x7a
  41e227:	inc    esi
  41e228:	adc    ebp,DWORD PTR [edx+0x5]
  41e22b:	sbb    DWORD PTR [ecx-0x61],edx
  41e22e:	cmc    
  41e22f:	addr16 sbb esi,esi
  41e232:	push   edi
  41e233:	jne    0x41e1e0
  41e235:	add    DWORD PTR [edi+0x558fe5f9],eax
  41e23b:	in     al,dx
  41e23c:	into   
  41e23d:	and    ebx,ebp
  41e23f:	inc    ecx
  41e240:	sub    ah,al
  41e242:	jns    0x41e245
  41e244:	jo     0x41e26a
  41e246:	data16 fidiv WORD PTR [edx-0x67]
  41e24a:	sbb    cl,dl
  41e24c:	aaa    
  41e24d:	pop    ebx
  41e24e:	jbe    0x41e278
  41e250:	loopne 0x41e1d2
  41e252:	jl     0x41e1da
  41e254:	ret    0xe33b
  41e257:	mov    ss,WORD PTR [edx+0x1d7bb204]
  41e25d:	fist   WORD PTR [edx-0xb]
  41e260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e261:	ss sti 
  41e263:	mov    ebx,0x15697e4b
  41e268:	mov    eax,DWORD PTR [ecx+0x76]
  41e26b:	jae    0x41e22f
  41e26d:	sbb    al,0x25
  41e26f:	imul   esp,DWORD PTR [esi+0x62],0x3c8f8298
  41e276:	pop    esp
  41e277:	mov    ebp,DWORD PTR [esi+0x37]
  41e27a:	xor    DWORD PTR [edx+0x6],edx
  41e27d:	in     al,0x47
  41e27f:	fcmovb st,st(6)
  41e281:	inc    esi
  41e282:	jnp    0x41e2da
  41e284:	mov    dh,0xa7
  41e286:	jne    0x41e2d9
  41e288:	out    0x48,al
  41e28a:	mov    edx,0x970e0601
  41e28f:	push   ebp
  41e290:	push   0x40
  41e292:	outs   dx,DWORD PTR ds:[esi]
  41e293:	lea    edi,[edi-0x8]
  41e296:	adc    eax,0x3b8e6ca4
  41e29b:	push   esi
  41e29c:	int    0xc5
  41e29e:	pop    ebx
  41e29f:	cmc    
  41e2a0:	(bad)  
  41e2a2:	int    0x8a
  41e2a4:	ss mov esi,0x22f59c94
  41e2aa:	mov    esp,0xab42cfe3
  41e2af:	mov    DWORD PTR [ebx+0x443e0639],eax
  41e2b5:	outs   dx,DWORD PTR ds:[esi]
  41e2b6:	xchg   esp,eax
  41e2b7:	jg     0x41e268
  41e2b9:	mov    ch,0x5
  41e2bb:	push   es
  41e2bc:	call   0x3c:0x54f929b7
  41e2c3:	arpl   si,dx
  41e2c5:	icebp  
  41e2c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2c7:	ret    0xddae
  41e2ca:	loop   0x41e31a
  41e2cc:	stc    
  41e2cd:	sahf   
  41e2ce:	in     al,dx
  41e2cf:	dec    esp
  41e2d0:	pusha  
  41e2d1:	push   ds
  41e2d2:	pop    ss
  41e2d3:	pop    ds
  41e2d4:	jg     0x41e345
  41e2d6:	mov    dh,0x8d
  41e2d8:	mov    edi,0x20e4923b
  41e2dd:	stc    
  41e2de:	sub    eax,0x1e334e6e
  41e2e3:	xchg   esp,eax
  41e2e4:	pop    es
  41e2e5:	pushf  
  41e2e6:	neg    DWORD PTR [edi+0x5d]
  41e2e9:	cmp    cl,BYTE PTR [edx-0xa]
  41e2ec:	and    BYTE PTR [eax+0x4d085481],bh
  41e2f2:	mov    edi,0x736e2c3d
  41e2f7:	call   0x975d:0x9193cf66
  41e2fe:	xor    al,0xc3
  41e300:	sti    
  41e301:	data16 loop 0x41e325
  41e304:	cmp    bh,0xe0
  41e307:	cdq    
  41e308:	push   cs
  41e309:	inc    eax
  41e30a:	mov    edi,0xa5ea9997
  41e30f:	call   DWORD PTR [edi]
  41e311:	into   
  41e312:	lahf   
  41e313:	lods   eax,DWORD PTR ds:[esi]
  41e314:	pop    esp
  41e315:	sbb    dh,bh
  41e317:	xchg   edx,eax
  41e318:	and    BYTE PTR [edi+0x78],0x2
  41e31c:	xor    eax,0xc1a28f1d
  41e321:	cli    
  41e322:	and    eax,0xd6b872e6
  41e327:	shl    ebp,cl
  41e329:	pop    ecx
  41e32a:	lock dec ebp
  41e32c:	mov    dh,0x59
  41e32e:	xchg   ebx,eax
  41e32f:	bound  ecx,QWORD PTR [edx]
  41e331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e332:	jp     0x41e30d
  41e334:	ficom  DWORD PTR [eax-0x2eb02a5d]
  41e33a:	imul   ecx,DWORD PTR [ebp+0x74590527],0x93d8289b
  41e344:	xor    ch,BYTE PTR [ebp+0x4]
  41e347:	pop    edi
  41e348:	adc    ecx,DWORD PTR [edx-0x3925e0ac]
  41e34e:	stos   DWORD PTR es:[edi],eax
  41e34f:	mov    edx,esi
  41e351:	inc    esi
  41e352:	pusha  
  41e353:	add    edx,DWORD PTR [ebx-0x35]
  41e356:	push   ss
  41e357:	dec    ebx
  41e358:	or     esp,esp
  41e35a:	jb     0x41e352
  41e35c:	sbb    al,0xd4
  41e35e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e35f:	pop    ecx
  41e360:	int3   
  41e361:	cmp    eax,0x7dd9423e
  41e366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e367:	js     0x41e348
  41e369:	inc    esi
  41e36a:	sub    BYTE PTR [edi+0x2a813f3c],0x37
  41e371:	pop    eax
  41e372:	hlt    
  41e373:	ffree  st(4)
  41e375:	test   BYTE PTR ds:0xa018a809,al
  41e37b:	ror    BYTE PTR [ebp+0xe73e9fd],0x2e
  41e382:	retf   0xaebe
  41e385:	xchg   edi,eax
  41e386:	adc    eax,0x90ae3dd1
  41e38b:	icebp  
  41e38c:	pushf  
  41e38d:	sbb    bh,0x2f
  41e390:	inc    eax
  41e391:	es jae 0x41e3bb
  41e394:	fcomip st,st(1)
  41e396:	scas   eax,DWORD PTR es:[edi]
  41e397:	es jmp 0x5415:0xbf6e78bd
  41e39f:	fisubr DWORD PTR [ecx-0x7b74f835]
  41e3a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3a6:	xor    DWORD PTR [ebx+0x6a],ebx
  41e3a9:	push   0x69ceb1f5
  41e3ae:	hlt    
  41e3af:	enter  0x1034,0x82
  41e3b3:	lods   al,BYTE PTR ds:[esi]
  41e3b4:	dec    esp
  41e3b5:	jb     0x41e3f6
  41e3b7:	push   ss
  41e3b8:	cmp    DWORD PTR [ebx-0x5827adf8],edi
  41e3be:	shr    DWORD PTR [edx-0x5221ef44],cl
  41e3c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3c5:	lods   al,BYTE PTR ds:[esi]
  41e3c6:	jmp    0x41e3df
  41e3c8:	sahf   
  41e3c9:	xchg   esi,eax
  41e3ca:	arpl   bx,di
  41e3cc:	outs   dx,DWORD PTR ds:[esi]
  41e3cd:	sub    dh,0x42
  41e3d0:	sub    al,0x6c
  41e3d2:	(bad)  
  41e3d3:	cmc    
  41e3d4:	addr16 inc edi
  41e3d6:	mov    cl,0xd7
  41e3d8:	cmc    
  41e3d9:	xchg   edx,eax
  41e3da:	retf   
  41e3db:	or     DWORD PTR [eax-0x6fa467e9],eax
  41e3e1:	inc    ebx
  41e3e2:	fs cmp ah,cl
  41e3e5:	xchg   DWORD PTR [ebp-0x7d47860],eax
  41e3eb:	fldcw  WORD PTR ds:0x8c562cd4
  41e3f1:	std    
  41e3f2:	mov    eax,0x1bb08bda
  41e3f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3f8:	inc    edx
  41e3f9:	call   0x36ae:0xf1a0f2ae
  41e400:	(bad)  
  41e401:	std    
  41e402:	xchg   bh,bh
  41e404:	mov    ah,0x3e
  41e406:	push   ebp
  41e407:	push   0xffffffd5
  41e409:	mov    bh,0xc7
  41e40b:	lahf   
  41e40c:	stos   BYTE PTR es:[edi],al
  41e40d:	inc    ecx
  41e40e:	push   0x6abfd8d8
  41e413:	push   ebx
  41e414:	xor    BYTE PTR [esi],cl
  41e416:	inc    esp
  41e417:	mov    al,ds:0x59f0a575
  41e41c:	call   0xc5c861a7
  41e421:	lea    ecx,[ecx+0x45]
  41e424:	outs   dx,DWORD PTR ds:[esi]
  41e425:	out    dx,eax
  41e426:	clc    
  41e427:	aaa    
  41e428:	sbb    eax,0x3b461fb1
  41e42d:	push   esp
  41e42e:	adc    DWORD PTR [ebp+0x5793eef6],0x26
  41e435:	or     al,0xd7
  41e437:	int3   
  41e438:	bound  eax,QWORD PTR [edi]
  41e43a:	shl    BYTE PTR [ecx+ecx*2],cl
  41e43d:	cmp    eax,edx
  41e43f:	jecxz  0x41e4bf
  41e441:	sub    bl,dh
  41e443:	aas    
  41e444:	adc    al,0x7a
  41e446:	daa    
  41e447:	xor    BYTE PTR [ecx],al
  41e449:	mov    dh,0x7f
  41e44b:	lds    ebp,FWORD PTR [edi+eax*4+0x7b409ec8]
  41e452:	scas   eax,DWORD PTR es:[edi]
  41e453:	mov    edi,0x36a932dc
  41e458:	and    bh,BYTE PTR [eax-0x56]
  41e45b:	loopne 0x41e407
  41e45d:	outs   dx,DWORD PTR ds:[esi]
  41e45e:	xor    bh,ah
  41e460:	mov    WORD PTR [eax-0x1e463ee0],?
  41e466:	enter  0xc9c7,0xa4
  41e46a:	sub    BYTE PTR [ebp+0x4fb3a38f],0x66
  41e471:	mov    dh,0x8c
  41e473:	sbb    al,0xb6
  41e475:	mov    cs,WORD PTR [ebp+ebp*2-0x120c223]
  41e47c:	push   0xffffffff
  41e47e:	sub    al,BYTE PTR [eax+ebp*2-0x41545c53]
  41e485:	jno    0x41e45c
  41e487:	mov    edi,0x21727250
  41e48c:	imul   DWORD PTR [edx+0x51ae3442]
  41e492:	lods   al,BYTE PTR ds:[esi]
  41e493:	inc    ebp
  41e494:	enter  0xe1a5,0x1a
  41e498:	mov    ch,0xab
  41e49a:	cmp    DWORD PTR [ebp+edx*2-0x706d3e59],edi
  41e4a1:	mov    al,ds:0x696ee55
  41e4a6:	adc    DWORD PTR [ebp-0x45],edi
  41e4a9:	nop    ebp
  41e4ac:	mov    dh,0xcd
  41e4ae:	inc    ebx
  41e4b0:	into   
  41e4b1:	sar    BYTE PTR [edi],1
  41e4b3:	jecxz  0x41e4c6
  41e4b5:	or     BYTE PTR [ecx-0x60],dl
  41e4b8:	mov    dh,cl
  41e4ba:	int3   
  41e4bb:	xor    ebx,DWORD PTR ds:0xa9996778
  41e4c1:	in     al,dx
  41e4c2:	and    DWORD PTR [esi-0x23],ebx
  41e4c5:	or     eax,0xe786ed2e
  41e4ca:	(bad)  
  41e4cb:	dec    esp
  41e4cc:	(bad)  
  41e4cd:	fld    TBYTE PTR ds:0x15adc3df
  41e4d3:	outs   dx,BYTE PTR ds:[esi]
  41e4d4:	jg     0x41e511
  41e4d6:	inc    ebx
  41e4d7:	and    BYTE PTR [ebx-0x64bfa933],ch
  41e4dd:	ret    0x7f4a
  41e4e0:	repnz sbb DWORD PTR [ebx-0x7f],0x5589aa90
  41e4e8:	push   ecx
  41e4e9:	scas   al,BYTE PTR es:[edi]
  41e4ea:	push   ecx
  41e4eb:	pop    esi
  41e4ec:	mov    edx,0x643e88a4
  41e4f1:	pop    edi
  41e4f2:	add    ebp,0x4e
  41e4f5:	mov    al,ds:0x5962cf3c
  41e4fa:	jle    0x41e4e3
  41e4fc:	mul    DWORD PTR [ecx-0x6f]
  41e4ff:	scas   eax,DWORD PTR es:[edi]
  41e500:	mov    esi,0x1fc889db
  41e505:	lods   eax,DWORD PTR ds:[esi]
  41e506:	ror    DWORD PTR [ecx-0x43],0x4d
  41e50a:	aam    0x2b
  41e50c:	xor    bl,BYTE PTR [edi+0x190d5fa6]
  41e512:	jnp    0x41e509
  41e514:	ja     0x41e4d5
  41e516:	xchg   ebp,eax
  41e517:	push   esp
  41e518:	push   es
  41e519:	cs jmp 0x41e572
  41e51c:	pop    esp
  41e51d:	dec    edx
  41e51e:	loopne 0x41e4ce
  41e520:	mov    ebx,0xc14f0823
  41e525:	push   edi
  41e526:	leave  
  41e527:	je     0x41e4ec
  41e529:	call   0x874a50d2
  41e52e:	jle    0x41e565
  41e530:	xor    bl,bh
  41e532:	int    0xc0
  41e534:	jo     0x41e591
  41e536:	xchg   BYTE PTR [edx-0xf],ah
  41e539:	xor    eax,0xf1dba171
  41e53e:	shl    BYTE PTR [ebp-0xf],cl
  41e541:	sub    eax,0xcfb12c26
  41e546:	out    0x26,eax
  41e548:	or     al,0x5a
  41e54a:	and    BYTE PTR [ebx-0x688a0b9f],bh
  41e550:	into   
  41e551:	lods   eax,DWORD PTR ds:[esi]
  41e552:	test   ebx,edx
  41e554:	and    ecx,DWORD PTR [ecx-0x4d]
  41e557:	jge    0x41e4d9
  41e559:	cmp    cl,0xd0
  41e55c:	mov    ah,bl
  41e55e:	push   es
  41e55f:	scas   al,BYTE PTR es:[edi]
  41e560:	fnstenv [eax-0x5b02626a]
  41e566:	loop   0x41e59e
  41e568:	adc    al,0x7b
  41e56a:	mov    esi,0xb3d6c7c9
  41e56f:	rol    DWORD PTR [eax+ebx*8],1
  41e572:	sub    BYTE PTR [edx-0x60],cl
  41e575:	xchg   ebp,eax
  41e576:	aaa    
  41e577:	add    DWORD PTR [ebp+eiz*1-0xf],0x42974cd0
  41e57f:	jae    0x41e5b2
  41e581:	out    0x26,al
  41e583:	inc    ecx
  41e584:	and    edx,DWORD PTR [eax+0x2e082947]
  41e58a:	daa    
  41e58b:	pop    eax
  41e58c:	outs   dx,DWORD PTR ds:[esi]
  41e58d:	and    eax,0xd93d8dc3
  41e592:	test   al,0x3b
  41e594:	sub    BYTE PTR [ecx],0x89
  41e597:	xlat   BYTE PTR ds:[ebx]
  41e598:	imul   edx,DWORD PTR [ebp+ebx*4-0x697304d4],0xffffffa3
  41e5a0:	rcr    bl,cl
  41e5a2:	setne  BYTE PTR [edi]
  41e5a5:	xlat   BYTE PTR ds:[ebx]
  41e5a6:	sub    BYTE PTR [edx+ebx*4],bl
  41e5a9:	push   esi
  41e5aa:	xor    bh,BYTE PTR [ebx+ebx*8-0x1e207005]
  41e5b1:	pop    ebx
  41e5b2:	aaa    
  41e5b3:	xor    BYTE PTR [ebp+0x2ab9ab06],bl
  41e5b9:	and    DWORD PTR [ecx+ecx*8-0x3cf1f647],0xffffff9d
  41e5c1:	mov    edx,esi
  41e5c3:	jl     0x41e5a0
  41e5c5:	cmp    DWORD PTR [ebx+edx*4],esp
  41e5c8:	jmp    0x12a6c97f
  41e5cd:	sub    eax,0xdcda0a5
  41e5d2:	inc    esi
  41e5d3:	or     eax,eax
  41e5d5:	iret   
  41e5d6:	dec    esp
  41e5d7:	ror    BYTE PTR [esi-0x10],1
  41e5da:	mov    esi,0xf1735f59
  41e5df:	jbe    0x41e5e6
  41e5e1:	mov    DWORD PTR [ecx],edx
  41e5e3:	push   es
  41e5e4:	shl    al,0xcf
  41e5e7:	push   edi
  41e5e8:	fcmovnbe st,st(1)
  41e5ea:	hlt    
  41e5eb:	imul   ebx,DWORD PTR ds:0xb77429d3,0xffffffc8
  41e5f2:	dec    edi
  41e5f3:	pop    ds
  41e5f4:	and    ebx,DWORD PTR [ebx+0x2b0c9e5c]
  41e5fa:	(bad)  
  41e5fb:	mov    edx,0x4570a622
  41e600:	rcr    esi,cl
  41e602:	inc    ecx
  41e603:	xor    bh,ch
  41e605:	rcl    ecx,cl
  41e607:	enter  0x3bf3,0xfc
  41e60b:	xchg   edi,eax
  41e60c:	fld    DWORD PTR [ebx+esi*2-0x4b]
  41e610:	dec    ebx
  41e611:	jmp    0x41e5f3
  41e613:	loope  0x41e60c
  41e615:	jle    0x41e623
  41e617:	fldenv [eax+0x57e2b3c1]
  41e61d:	stos   BYTE PTR es:[edi],al
  41e61e:	outs   dx,BYTE PTR ds:[esi]
  41e61f:	inc    esi
  41e620:	push   edi
  41e621:	(bad)
  41e624:	aam    0x9f
  41e626:	(bad)  
  41e627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e628:	cmp    BYTE PTR [ebx-0x50147f95],dl
  41e62e:	cld    
  41e62f:	je     0x41e693
  41e631:	popf   
  41e632:	or     cl,0x62
  41e635:	xchg   ebp,eax
  41e636:	mov    fs,WORD PTR [ecx]
  41e638:	push   cs
  41e639:	push   eax
  41e63a:	cmp    ebp,DWORD PTR [esi+eiz*4]
  41e63d:	lds    eax,FWORD PTR [edx]
  41e63f:	pop    esp
  41e640:	inc    edx
  41e641:	and    al,0x4c
  41e643:	inc    ebx
  41e644:	jbe    0x41e65a
  41e646:	push   ds
  41e647:	imul   DWORD PTR ds:0xdc578088
  41e64d:	test   DWORD PTR [eax+0x48],edx
  41e650:	sub    cl,BYTE PTR [ebx+edx*1-0x40dcfc33]
  41e657:	mov    ecx,edi
  41e659:	test   ebp,ebx
  41e65b:	scas   al,BYTE PTR es:[edi]
  41e65c:	xor    esp,DWORD PTR ds:[esi-0x459bc10b]
  41e663:	xchg   edi,eax
  41e664:	sbb    BYTE PTR [eax-0x66],al
  41e667:	add    edx,DWORD PTR [ecx-0x5]
  41e66a:	ret    
  41e66b:	add    DWORD PTR [ebp+0x37],ecx
  41e66e:	icebp  
  41e66f:	push   esp
  41e670:	push   cs
  41e671:	ins    DWORD PTR es:[edi],dx
  41e672:	rcl    BYTE PTR [edi-0x67e5bd9d],0x41
  41e679:	dec    esp
  41e67a:	sbb    eax,0xcb922147
  41e67f:	aam    0xfd
  41e681:	lods   eax,DWORD PTR ds:[esi]
  41e682:	add    al,0x7f
  41e684:	loope  0x41e6dd
  41e686:	pop    esi
  41e687:	sub    al,0xd3
  41e689:	call   0xe9adf1d1
  41e68e:	neg    BYTE PTR [esi-0x2c]
  41e691:	dec    esp
  41e692:	mov    ds:0x31fb1754,al
  41e697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e698:	lea    esp,[edx-0x16]
  41e69b:	sbb    DWORD PTR [ebx-0x4dd4f938],0x4b
  41e6a2:	shl    BYTE PTR [eax-0x1e],1
  41e6a5:	ret    
  41e6a6:	sti    
  41e6a7:	jle    0x41e68e
  41e6a9:	inc    edx
  41e6aa:	jge    0x41e706
  41e6ac:	add    al,0x75
  41e6ae:	mov    cl,0x8a
  41e6b0:	lea    eax,[ecx-0x58a1f999]
  41e6b6:	cmp    BYTE PTR [ebp+0x22],ch
  41e6b9:	xor    BYTE PTR [eax+eax*2-0x6a],0x57
  41e6be:	loop   0x41e70f
  41e6c0:	mov    dl,BYTE PTR [esi-0xc]
  41e6c3:	in     al,dx
  41e6c4:	xchg   ecx,eax
  41e6c5:	sbb    edi,DWORD PTR [ecx+0x4f]
  41e6c8:	shl    BYTE PTR [eax],0xdc
  41e6cb:	adc    al,0xed
  41e6cd:	inc    esi
  41e6ce:	ror    eax,cl
  41e6d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6d1:	ss jl  0x41e67b
  41e6d4:	stos   DWORD PTR es:[edi],eax
  41e6d5:	aam    0x86
  41e6d7:	mov    ch,0x12
  41e6d9:	ja     0x41e6f7
  41e6db:	pop    ebp
  41e6dc:	shl    BYTE PTR [esi+eax*8+0x31],0x23
  41e6e1:	rcl    DWORD PTR [esi+0xd7466d3],cl
  41e6e7:	pushf  
  41e6e8:	or     bh,bl
  41e6ea:	push   ds
  41e6eb:	dec    edi
  41e6ec:	push   esi
  41e6ed:	sbb    eax,0x5864f66e
  41e6f2:	xchg   ebx,eax
  41e6f3:	sub    dh,BYTE PTR [ebx-0x6a04818c]
  41e6f9:	add    dl,BYTE PTR [ecx-0x10a47f9a]
  41e6ff:	cmp    eax,0x78e73ac7
  41e704:	mov    es,esp
  41e706:	cmp    BYTE PTR [esi-0x17ef967],bh
  41e70c:	sbb    BYTE PTR [ebx],cl
  41e70e:	arpl   WORD PTR [ebx-0x59],di
  41e711:	or     al,0x67
  41e713:	jg     0x41e71e
  41e715:	fptan  
  41e717:	inc    ebx
  41e718:	xchg   ch,ch
  41e71a:	push   eax
  41e71b:	lock push ebp
  41e71d:	push   ecx
  41e71e:	add    al,0x54
  41e720:	inc    ecx
  41e721:	adc    al,0x60
  41e723:	push   0xaae95c7d
  41e728:	fs clc 
  41e72a:	sub    eax,0x7f39642
  41e72f:	fbld   TBYTE PTR [eax+0x26]
  41e732:	stos   DWORD PTR es:[edi],eax
  41e733:	mov    ds:0x140ccd01,eax
  41e738:	or     al,0x6a
  41e73a:	fisubr WORD PTR [ecx]
  41e73c:	out    0x28,al
  41e73e:	inc    ebx
  41e73f:	mov    dh,0x5f
  41e741:	stc    
  41e742:	xchg   esi,eax
  41e743:	xor    al,0x6f
  41e745:	push   ebp
  41e746:	jnp    0x41e792
  41e748:	dec    ecx
  41e749:	(bad)  
  41e74a:	jp     0x41e78e
  41e74c:	js     0x41e7b5
  41e74e:	dec    esp
  41e74f:	(bad)  
  41e751:	fdiv   DWORD PTR [edi]
  41e753:	imul   ebx,DWORD PTR [esp+ecx*2-0x35],0x1aef1452
  41e75b:	fwait
  41e75c:	push   esp
  41e75d:	into   
  41e75e:	test   DWORD PTR [eax+0xb],edi
  41e761:	sbb    eax,0xdad6bebe
  41e766:	pushf  
  41e767:	sbb    DWORD PTR [esi+0x6b4a306],esi
  41e76d:	or     ecx,DWORD PTR [ebp-0x10]
  41e770:	outs   dx,DWORD PTR ds:[esi]
  41e771:	or     dh,BYTE PTR [edi-0x46486fd9]
  41e777:	nop
  41e778:	jmp    0x6ec5bc26
  41e77d:	in     eax,dx
  41e77e:	add    ebx,DWORD PTR [edi+0x32ea3da2]
  41e784:	sqrtps xmm3,xmm6
  41e787:	mov    ds:0x75ad5ea6,eax
  41e78c:	inc    esi
  41e78d:	ss sub al,0xba
  41e790:	cmp    DWORD PTR [esi+ecx*8-0x5a3c2ef9],edi
  41e797:	or     dh,al
  41e799:	jp     0x41e780
  41e79b:	scas   al,BYTE PTR es:[edi]
  41e79c:	ins    BYTE PTR es:[edi],dx
  41e79d:	fmul   QWORD PTR [edx]
  41e79f:	cdq    
  41e7a0:	addr16 out 0x63,eax
  41e7a3:	in     eax,0x1c
  41e7a5:	mov    al,ds:0xf0853f2b
  41e7aa:	loopne 0x41e767
  41e7ac:	pop    ds
  41e7ad:	mov    ebx,0x6f2f769b
  41e7b2:	fadd   QWORD PTR [esi-0x43]
  41e7b5:	xor    ebx,DWORD PTR [ecx]
  41e7b7:	rol    DWORD PTR [eax-0x20],cl
  41e7ba:	cmc    
  41e7bb:	(bad)  
  41e7bd:	push   ebp
  41e7be:	push   edi
  41e7bf:	outs   dx,DWORD PTR ds:[esi]
  41e7c0:	cs dec edi
  41e7c2:	div    BYTE PTR [ecx+0x3546c4b3]
  41e7c8:	in     eax,dx
  41e7c9:	xchg   ebx,eax
  41e7ca:	sti    
  41e7cb:	cmp    al,0x3f
  41e7cd:	int    0x25
  41e7cf:	jmp    0x149b5a5a
  41e7d4:	jb     0x41e7af
  41e7d6:	push   DWORD PTR [edx+edx*2]
  41e7d9:	adc    al,0xed
  41e7db:	cli    
  41e7dc:	pop    esi
  41e7dd:	pop    edx
  41e7de:	test   cl,0xa1
  41e7e1:	dec    DWORD PTR [ebx-0x26f175ef]
  41e7e7:	xor    DWORD PTR [ebx+0x3d570ef3],eax
  41e7ed:	cli    
  41e7ee:	xlat   BYTE PTR ds:[ebx]
  41e7ef:	push   edi
  41e7f0:	fnstcw WORD PTR [eax+0x4e]
  41e7f3:	outs   dx,BYTE PTR ds:[esi]
  41e7f4:	test   eax,0x9cdff90
  41e7f9:	int    0x6b
  41e7fb:	ret    0x390d
  41e7fe:	(bad)  
  41e7ff:	or     ebp,DWORD PTR [edi-0x2f]
  41e802:	cmp    dl,dh
  41e804:	not    BYTE PTR [ebx-0x26]
  41e807:	(bad)  
  41e808:	pop    edx
  41e809:	jb     0x41e882
  41e80b:	and    eax,0xf87a6f85
  41e810:	rcl    cl,0xa9
  41e813:	cmp    BYTE PTR [eax],dl
  41e815:	cmp    eax,DWORD PTR [edi+0x327eafb]
  41e81b:	mov    edi,0xd43dd89e
  41e820:	dec    esi
  41e821:	(bad)  
  41e822:	out    0x4e,al
  41e824:	xor    DWORD PTR [ebx],ebx
  41e826:	push   esp
  41e827:	pop    es
  41e828:	mov    ah,BYTE PTR [ebx-0x179fc5fb]
  41e82e:	or     DWORD PTR [edx],ebp
  41e830:	push   edi
  41e832:	fwait
  41e833:	ins    DWORD PTR es:[edi],dx
  41e834:	mov    esi,0x98e8fff
  41e839:	addr16 sbb al,ch
  41e83c:	out    dx,eax
  41e83d:	cmp    eax,0x90038b9a
  41e842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e843:	mov    ebx,0xd9499c3e
  41e848:	xchg   BYTE PTR [eax],ch
  41e84a:	pop    ss
  41e84b:	jo     0x41e7f3
  41e84d:	hlt    
  41e84e:	mov    WORD PTR [ebp+ebp*2+0x6f],ds
  41e852:	das    
  41e853:	sar    dl,1
  41e855:	xchg   ecx,eax
  41e856:	xor    bh,0x6b
  41e859:	aam    0x5e
  41e85b:	pop    eax
  41e85c:	inc    ebp
  41e85d:	push   esp
  41e85e:	(bad)  
  41e85f:	es in  al,0x15
  41e862:	out    dx,al
  41e863:	sbb    bl,cl
  41e865:	inc    edx
  41e866:	jecxz  0x41e84c
  41e868:	or     al,0xbe
  41e86a:	daa    
  41e86b:	mov    ebp,0x679cba70
  41e870:	and    al,0x6f
  41e872:	cmp    edi,ebx
  41e874:	push   0xb387f597
  41e879:	jmp    0x4ab5830b
  41e87e:	pop    ecx
  41e87f:	rol    DWORD PTR [esi-0x1b],cl
  41e882:	adc    eax,0x7759b595
  41e887:	or     dl,BYTE PTR [ecx]
  41e889:	inc    edi
  41e88a:	and    al,0x35
  41e88c:	mov    esp,0xce6adc86
  41e891:	or     ch,0xe8
  41e894:	aad    0xa7
  41e896:	pop    esp
  41e897:	jb     0x41e85b
  41e899:	cdq    
  41e89a:	mov    bl,0xee
  41e89c:	and    ebp,DWORD PTR [ecx-0x22]
  41e89f:	add    eax,0x11db6795
  41e8a4:	jmp    0x41e85a
  41e8a6:	sbb    al,0x51
  41e8a8:	dec    ecx
  41e8a9:	pop    esp
  41e8aa:	push   edi
  41e8ab:	jne    0x41e8bd
  41e8ad:	adc    bl,BYTE PTR [eax-0x1c]
  41e8b0:	jle    0x41e8c3
  41e8b2:	ds mov eax,0xcad73e24
  41e8b8:	sub    edi,ebx
  41e8ba:	xchg   esi,eax
  41e8bb:	mov    ah,0x0
  41e8bd:	outs   dx,BYTE PTR ds:[esi]
  41e8be:	sti    
  41e8bf:	mov    ebp,0xe581408f
  41e8c4:	fisub  WORD PTR [ecx+0x3d8821c8]
  41e8ca:	sub    dh,BYTE PTR [eax-0x1828845a]
  41e8d0:	jmp    0x41e8a6
  41e8d2:	sub    eax,0xe70a9dd9
  41e8d7:	cmp    ah,BYTE PTR [edx]
  41e8d9:	lds    eax,FWORD PTR [ecx]
  41e8db:	enter  0xb87d,0x30
  41e8df:	dec    ebp
  41e8e0:	idiv   BYTE PTR [esi+eiz*4+0x55]
  41e8e4:	and    al,0x15
  41e8e6:	xchg   edx,eax
  41e8e7:	push   eax
  41e8e8:	ret    0xd251
  41e8eb:	mov    ebp,0xc8fa8acf
  41e8f0:	lds    eax,FWORD PTR [eax-0x7a16536d]
  41e8f6:	lock push 0x32
  41e8f9:	test   BYTE PTR [ebx-0x28b07ca1],0x5
  41e900:	mov    bh,0x29
  41e902:	mov    bl,BYTE PTR [esi-0x6]
  41e905:	call   0x6299:0xea219752
  41e90c:	stc    
  41e90d:	mov    ecx,0x612975c2
  41e912:	ret    
  41e913:	fldcw  WORD PTR [ebp-0x7aed7fc]
  41e919:	inc    edi
  41e91a:	cmp    BYTE PTR [edi+0x4084e5cc],ah
  41e920:	sbb    al,0x2e
  41e922:	xor    BYTE PTR [ecx+ebx*8],dh
  41e925:	(bad)
  41e928:	mov    dh,al
  41e92a:	pop    ecx
  41e92b:	js     0x41e990
  41e92d:	outs   dx,BYTE PTR ds:[esi]
  41e92e:	loop   0x41e99f
  41e930:	and    eax,edi
  41e932:	sti    
  41e933:	sbb    al,BYTE PTR [edi+0x3e]
  41e936:	mov    bh,0x3e
  41e938:	adc    bh,ah
  41e93a:	push   edi
  41e93b:	adc    eax,0x653d7ea3
  41e940:	(bad)  
  41e941:	cmc    
  41e942:	push   esp
  41e943:	sub    DWORD PTR [ebx+0x7d],0x6962c4c0
  41e94a:	dec    esi
  41e94b:	aad    0xd9
  41e94d:	push   ecx
  41e94e:	jbe    0x41e96d
  41e950:	sbb    ebx,DWORD PTR [eax+0x5fd6fe9d]
  41e956:	loopne 0x41e9b5
  41e958:	aaa    
  41e959:	das    
  41e95a:	aam    0xf2
  41e95c:	mov    ecx,0x3833419b
  41e961:	mov    ecx,0xb0ac1d3e
  41e966:	sbb    edx,DWORD PTR [edx+0x6d]
  41e969:	into   
  41e96a:	pop    ss
  41e96b:	mov    dl,0x98
  41e96d:	inc    BYTE PTR [edx-0x4b728fb7]
  41e973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e974:	xor    eax,0x8b611866
  41e979:	test   al,0x63
  41e97b:	aas    
  41e97c:	inc    esi
  41e97d:	dec    edi
  41e97e:	test   al,0x55
  41e980:	inc    edi
  41e981:	add    al,0x2c
  41e983:	adc    al,0xec
  41e985:	sahf   
  41e986:	xchg   edi,eax
  41e987:	push   0xffffffcf
  41e989:	sub    DWORD PTR [esi],edi
  41e98b:	(bad)  
  41e98c:	pop    eax
  41e98d:	pop    ebx
  41e98e:	sahf   
  41e98f:	lds    esp,FWORD PTR [ebp+ebx*4-0x61]
  41e993:	pop    ebx
  41e994:	scas   eax,DWORD PTR es:[edi]
  41e995:	inc    esi
  41e996:	sub    al,0x7f
  41e998:	sub    al,0xb6
  41e99a:	out    0x4f,eax
  41e99c:	shl    eax,cl
  41e99e:	cdq    
  41e99f:	(bad)  
  41e9a1:	(bad)  
  41e9a2:	push   esp
  41e9a3:	test   BYTE PTR [ebx],bl
  41e9a5:	dec    ebx
  41e9a6:	out    dx,eax
  41e9a7:	jle    0x41e9b4
  41e9a9:	mov    BYTE PTR [edx+0x30815ee],ah
  41e9af:	rcr    DWORD PTR [eax+0x71],1
  41e9b2:	hlt    
  41e9b3:	xor    eax,0x2e2c6f5a
  41e9b8:	repz dec esi
  41e9ba:	jmp    0x41e9e8
  41e9bc:	ja     0x41ea16
  41e9be:	div    DWORD PTR [ecx-0x2448fe75]
  41e9c4:	outs   dx,BYTE PTR ds:[esi]
  41e9c5:	mov    ah,BYTE PTR [ebp-0x23d16c9d]
  41e9cb:	mov    ebx,0xfc317db6
  41e9d0:	sti    
  41e9d1:	jo     0x41ea33
  41e9d3:	cmp    dl,BYTE PTR ss:[edi-0x6b6d9306]
  41e9da:	mov    dl,0xab
  41e9dc:	lds    ebx,FWORD PTR [esi+0x6dc72973]
  41e9e2:	fs push 0xc8911080
  41e9e8:	add    BYTE PTR [ecx+0x5c],ah
  41e9eb:	fwait
  41e9ec:	pop    ss
  41e9ed:	(bad)  
  41e9ee:	mov    ah,0x9b
  41e9f0:	xchg   edx,eax
  41e9f1:	sub    eax,0x4fecd3f3
  41e9f6:	lods   eax,DWORD PTR ds:[esi]
  41e9f7:	pop    edx
  41e9f8:	js     0x41e98b
  41e9fa:	and    eax,0xd103c2b6
  41e9ff:	pop    esp
  41ea00:	sbb    dl,BYTE PTR [ecx-0x7be34878]
  41ea06:	ss mov cl,0x8f
  41ea09:	in     eax,0xe4
  41ea0b:	mov    eax,0xba75bf3f
  41ea10:	out    0x8b,eax
  41ea12:	add    esi,DWORD PTR [edx+eiz*1+0x11be6e82]
  41ea19:	dec    esi
  41ea1a:	mov    edx,0xc339f81e
  41ea1f:	stos   DWORD PTR es:[edi],eax
  41ea20:	dec    ebp
  41ea21:	test   DWORD PTR [esi+0x66],edi
  41ea24:	push   edi
  41ea25:	mov    esp,0x6f098379
  41ea2a:	out    0xca,eax
  41ea2c:	aas    
  41ea2d:	mov    edi,0x38cd8326
  41ea32:	aas    
  41ea33:	not    DWORD PTR [edx+0x68]
  41ea36:	inc    eax
  41ea37:	adc    ebx,DWORD PTR [edi-0x7c]
  41ea3a:	fs dec edx
  41ea3c:	inc    edx
  41ea3d:	call   0x6f1:0xd2703a23
  41ea44:	inc    edi
  41ea45:	mov    bh,0x58
  41ea47:	fisubr WORD PTR [ebx+0x50e0e87d]
  41ea4d:	ret    
  41ea4e:	sub    ebp,esi
  41ea50:	scas   al,BYTE PTR es:[edi]
  41ea51:	call   0x25ae2f85
  41ea56:	dec    DWORD PTR ds:0x38591c5a
  41ea5c:	pop    ss
  41ea5d:	int3   
  41ea5e:	ins    DWORD PTR es:[edi],dx
  41ea5f:	leave  
  41ea60:	(bad)  
  41ea61:	daa    
  41ea62:	inc    esp
  41ea63:	outs   dx,BYTE PTR ds:[esi]
  41ea64:	cs push 0xffffffee
  41ea67:	or     bh,dl
  41ea69:	lock hlt 
  41ea6b:	lods   eax,DWORD PTR ds:[esi]
  41ea6c:	jmp    0xb2c50729
  41ea71:	into   
  41ea72:	xor    DWORD PTR [eax+eax*8-0x6b],ecx
  41ea76:	cmp    dl,ah
  41ea78:	sbb    dh,BYTE PTR [edx+0x41]
  41ea7b:	ret    0x1efb
  41ea7e:	dec    esp
  41ea7f:	addr16 int3 
  41ea81:	aaa    
  41ea82:	xchg   edx,eax
  41ea83:	js     0x41eae1
  41ea85:	cmp    DWORD PTR [edi-0x34182a9c],edx
  41ea8b:	loopne 0x41eacd
  41ea8d:	inc    esi
  41ea8e:	mov    esp,0xe89fc6d6
  41ea93:	push   cs
  41ea94:	inc    esi
  41ea95:	sbb    ch,BYTE PTR [ecx+0x428293b3]
  41ea9b:	das    
  41ea9c:	xchg   ecx,eax
  41ea9d:	sbb    al,BYTE PTR [ebx+0x75c0a1b]
  41eaa3:	(bad)  
  41eaa4:	sbb    al,0x7a
  41eaa6:	jnp    0x41eb13
  41eaa8:	sub    al,0xe7
  41eaaa:	sub    BYTE PTR [ebp+0x3580b224],dl
  41eab0:	in     al,dx
  41eab1:	push   ds
  41eab2:	jl     0x41eac3
  41eab4:	dec    esi
  41eab5:	pop    ebp
  41eab6:	xor    ah,dl
  41eab8:	inc    ecx
  41eab9:	ss push ebx
  41eabb:	or     edi,DWORD PTR [ecx]
  41eabd:	cmp    edi,DWORD PTR [esi]
  41eabf:	xor    DWORD PTR [eax+0x43b9cdca],edi
  41eac5:	loopne 0x41eadc
  41eac7:	mov    edx,0x8a0060ac
  41eacc:	sbb    edx,0xc24d05ca
  41ead2:	jno    0x41ea7a
  41ead4:	lods   al,BYTE PTR ds:[esi]
  41ead5:	(bad)  
  41ead6:	adc    BYTE PTR [ebp-0x80],dh
  41ead9:	test   al,0xd1
  41eadb:	pop    edx
  41eadc:	xchg   ebp,eax
  41eadd:	punpckhdq mm2,QWORD PTR ds:0x359cb89d
  41eae4:	lods   eax,DWORD PTR ds:[esi]
  41eae5:	jno    0x41eb33
  41eae7:	sbb    ecx,0xbac786c7
  41eaed:	daa    
  41eaee:	inc    edi
  41eaef:	fs scas al,BYTE PTR es:[edi]
  41eaf1:	fs out 0xc7,al
  41eaf4:	lods   al,BYTE PTR ds:[esi]
  41eaf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaf6:	(bad)  
  41eaf7:	pop    esi
  41eaf8:	jns    0x41eb55
  41eafa:	sar    DWORD PTR [ebp+0x45],cl
  41eafd:	rol    edx,1
  41eaff:	mov    eax,0x3e47c543
  41eb04:	pop    edx
  41eb05:	push   edi
  41eb06:	out    0xba,al
  41eb08:	iret   
  41eb09:	call   FWORD PTR [edx]
  41eb0b:	(bad)  
  41eb0c:	fwait
  41eb0d:	mov    dh,0x84
  41eb0f:	bound  ebx,QWORD PTR ds:0xc3dec945
  41eb15:	mov    dl,0x95
  41eb17:	xchg   BYTE PTR [edi+0x74d191a9],bh
  41eb1d:	cmp    bl,BYTE PTR [edx+ecx*2]
  41eb20:	or     eax,DWORD PTR [ebx-0x49]
  41eb23:	hlt    
  41eb24:	mov    ebp,0xb79a5e39
  41eb29:	lods   al,BYTE PTR ds:[esi]
  41eb2a:	sar    BYTE PTR [esi+0x4ae0ca8b],0x98
  41eb31:	jecxz  0x41eb1f
  41eb33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb34:	inc    esi
  41eb35:	push   ebx
  41eb36:	stos   BYTE PTR es:[edi],al
  41eb37:	lods   eax,DWORD PTR ds:[esi]
  41eb38:	jnp    0x41eba8
  41eb3a:	jno    0x41eb93
  41eb3c:	imul   esp,DWORD PTR [ecx-0x6e],0xffffffd8
  41eb40:	jl     0x41eba1
  41eb42:	mov    BYTE PTR [ebp-0x80],dl
  41eb45:	test   DWORD PTR [ebp+0x1fb04c6d],edi
  41eb4b:	iret   
  41eb4c:	jmp    0x8a4ec346
  41eb51:	and    edi,DWORD PTR [esi-0x2d0050f2]
  41eb57:	jp     0x41eb75
  41eb59:	call   0x6a7b:0xbefb2566
  41eb60:	mov    al,ds:0x5c3fab94
  41eb65:	jo     0x41eb0c
  41eb67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb68:	in     eax,dx
  41eb69:	inc    eax
  41eb6a:	xor    ch,BYTE PTR [ebp+0x14012b]
  41eb70:	outs   dx,BYTE PTR ds:[esi]
  41eb71:	cmp    DWORD PTR [edi],ebx
  41eb73:	test   eax,0xb851055
  41eb78:	mov    ecx,edx
  41eb7a:	rcr    DWORD PTR [ebx],0x55
  41eb7d:	push   edi
  41eb7e:	sub    eax,0x6611ba7e
  41eb83:	pop    es
  41eb84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb85:	inc    eax
  41eb86:	cld    
  41eb87:	xchg   edi,eax
  41eb88:	gs push cs
  41eb8a:	push   edx
  41eb8b:	sbb    edx,DWORD PTR [edx]
  41eb8d:	pop    ebx
  41eb8e:	stos   BYTE PTR es:[edi],al
  41eb8f:	je     0x41eb88
  41eb91:	adc    eax,0xa4e2687d
  41eb96:	mov    ebp,0x7b5b49e3
  41eb9b:	test   DWORD PTR [edx-0x9706278],ebp
  41eba1:	leave  
  41eba2:	pop    ebp
  41eba3:	pushf  
  41eba4:	imul   edx,DWORD PTR [esi+0x1aaa71d],0xebc937e3
  41ebae:	(bad)  
  41ebaf:	pop    ebp
  41ebb0:	xor    al,BYTE PTR [ebx+0x48de5f60]
  41ebb6:	aam    0xd7
  41ebb8:	adc    BYTE PTR [edx+ecx*8],dh
  41ebbb:	ins    DWORD PTR es:[edi],dx
  41ebbc:	enter  0xf502,0xa1
  41ebc0:	sbb    eax,DWORD PTR [edi]
  41ebc2:	mov    edx,0x96fcf8bf
  41ebc7:	mov    ecx,0xfaf2a138
  41ebcc:	out    0xe8,al
  41ebce:	mov    esi,0x79016925
  41ebd3:	aas    
  41ebd4:	cdq    
  41ebd5:	mov    ch,0x61
  41ebd7:	jl     0x41ec49
  41ebd9:	pop    eax
  41ebda:	pop    ds
  41ebdb:	arpl   WORD PTR [eax-0x5b],sp
  41ebde:	jl     0x41eb86
  41ebe0:	pop    DWORD PTR [ecx+edi*1-0x10dc9d80]
  41ebe7:	inc    eax
  41ebe8:	lods   eax,DWORD PTR ds:[esi]
  41ebe9:	(bad)
  41ebec:	rol    BYTE PTR ds:0xa1ed7b4c,1
  41ebf2:	shr    DWORD PTR [edx-0x15],0x73
  41ebf6:	cmp    BYTE PTR [esi],ah
  41ebf8:	push   ecx
  41ebf9:	aaa    
  41ebfa:	mov    edx,0x6b5e585e
  41ebff:	pop    ds
  41ec00:	pop    esp
  41ec01:	scas   al,BYTE PTR es:[edi]
  41ec02:	outs   dx,DWORD PTR ds:[esi]
  41ec03:	lock sti 
  41ec05:	inc    esi
  41ec06:	cmp    eax,0x38579d43
  41ec0b:	mov    bl,0xf5
  41ec0d:	inc    ecx
  41ec0e:	push   ds
  41ec0f:	out    dx,al
  41ec10:	pushf  
  41ec11:	lea    edi,es:[edx]
  41ec14:	lahf   
  41ec15:	xor    eax,0xda71b205
  41ec1a:	jnp    0x41ebf5
  41ec1c:	mov    dl,0x52
  41ec1e:	icebp  
  41ec1f:	lock pop eax
  41ec21:	lods   eax,DWORD PTR ds:[esi]
  41ec22:	pusha  
  41ec23:	xor    BYTE PTR [edi],dh
  41ec25:	cwde   
  41ec26:	adc    ebp,DWORD PTR ds:0xa2b92749
  41ec2c:	cmp    esp,DWORD PTR [ecx]
  41ec2e:	jp     0x41ebc8
  41ec30:	pop    edx
  41ec31:	loopne 0x41ebfc
  41ec33:	adc    BYTE PTR [ebp+0x2bb2a7bb],ah
  41ec39:	jecxz  0x41ec23
  41ec3b:	imul   ebx,DWORD PTR [ebp+0x16d4c3ec],0x24
  41ec42:	jmp    0x8fcb:0x268307d
  41ec49:	mov    bh,0xbb
  41ec4b:	and    al,dh
  41ec4d:	(bad)  [edx+ebp*1-0xe]
  41ec51:	pop    ebx
  41ec52:	push   cs
  41ec53:	sub    ecx,DWORD PTR [esi]
  41ec55:	mov    bh,0x4e
  41ec57:	sub    al,0xc4
  41ec59:	cmc    
  41ec5a:	shl    DWORD PTR ds:0x65bb06ae,0xdc
  41ec61:	rcl    BYTE PTR [edx-0x5d233e69],1
  41ec67:	mov    BYTE PTR [eax+eax*2+0x6ed7df79],ah
  41ec6e:	imul   eax,DWORD PTR [ebx],0xda6fdaa8
  41ec74:	ffree  st(5)
  41ec76:	cmp    eax,0x737fcb58
  41ec7b:	add    eax,DWORD PTR [ecx+0x16]
  41ec7e:	stc    
  41ec7f:	in     al,0x92
  41ec81:	mov    cl,0xae
  41ec83:	fdivr  DWORD PTR [edx+edi*2]
  41ec86:	xchg   esp,eax
  41ec87:	jb     0x41ec1c
  41ec89:	dec    eax
  41ec8a:	xchg   BYTE PTR [ecx],dl
  41ec8c:	sbb    DWORD PTR ds:0xe5a650bf,0xffffffae
  41ec93:	out    dx,eax
  41ec94:	lds    edi,FWORD PTR [edi+0x5058ff01]
  41ec9a:	push   esi
  41ec9b:	(bad)  
  41ec9d:	rcr    BYTE PTR [eax],1
  41ec9f:	sbb    ecx,0x2cc22021
  41eca5:	inc    eax
  41eca6:	cwde   
  41eca7:	loopne 0x41ecd4
  41eca9:	outs   dx,BYTE PTR ds:[esi]
  41ecaa:	pop    ss
  41ecab:	mov    BYTE PTR [ecx],dh
  41ecad:	not    BYTE PTR [edi]
  41ecaf:	mov    dl,0x75
  41ecb1:	jne    0x41ec6b
  41ecb3:	push   ebp
  41ecb4:	rcl    ah,0x12
  41ecb7:	push   edi
  41ecb8:	pop    ebp
  41ecb9:	cs into 
  41ecbb:	pusha  
  41ecbc:	jne    0x41ec78
  41ecbe:	bound  ebx,QWORD PTR [esi-0x6ed494a]
  41ecc4:	cmp    eax,0x60f56826
  41ecc9:	mov    bl,0x85
  41eccb:	scas   eax,DWORD PTR es:[edi]
  41eccc:	sbb    DWORD PTR [edx],esi
  41ecce:	or     eax,0xdeba37d7
  41ecd3:	jmp    0xe9ec:0x7c36ddec
  41ecda:	das    
  41ecdb:	jl     0x41ec8e
  41ecdd:	into   
  41ecde:	push   es
  41ecdf:	ins    DWORD PTR es:[edi],dx
  41ece0:	das    
  41ece1:	or     DWORD PTR [edx+0x1d],eax
  41ece4:	add    eax,0xd4ba2f17
  41ece9:	mov    ch,dl
  41eceb:	lds    esi,FWORD PTR [ecx]
  41eced:	jg     0x41ec80
  41ecef:	bound  ebp,QWORD PTR [edi+0x49]
  41ecf2:	add    eax,0xa8d3b03a
  41ecf7:	push   ecx
  41ecf8:	pop    ebp
  41ecf9:	test   BYTE PTR [ebx-0x1f],bh
  41ecfc:	xchg   edi,eax
  41ecfd:	xchg   edx,eax
  41ecfe:	sar    bh,cl
  41ed00:	push   edi
  41ed01:	rol    DWORD PTR [edi+0x5a],1
  41ed04:	jne    0x41ecf6
  41ed06:	or     BYTE PTR [edi+ecx*2-0xf5ada5d],ah
  41ed0d:	push   ds
  41ed0e:	mov    BYTE PTR [ebp+0x34],ah
  41ed11:	jg     0x41ed3a
  41ed13:	jno    0x41ed69
  41ed15:	mov    WORD PTR [edi],fs
  41ed17:	stos   DWORD PTR es:[edi],eax
  41ed18:	fldlg2 
  41ed1b:	nop
  41ed1c:	int3   
  41ed1d:	es fwait
  41ed1f:	scas   al,BYTE PTR es:[edi]
  41ed20:	call   0x890ab3b9
  41ed25:	inc    esi
  41ed26:	xchg   DWORD PTR [esi-0x30],eax
  41ed29:	leave  
  41ed2a:	(bad)  
  41ed2b:	test   eax,0x469474ac
  41ed30:	aam    0x74
  41ed32:	mov    esp,0x5f795725
  41ed37:	scas   al,BYTE PTR es:[edi]
  41ed38:	add    eax,0x337ce063
  41ed3d:	in     eax,dx
  41ed3e:	shl    DWORD PTR ss:[edi],cl
  41ed41:	pop    ss
  41ed42:	int3   
  41ed43:	xor    DWORD PTR [ebx-0x771a2097],ebx
  41ed49:	std    
  41ed4a:	repz push eax
  41ed4c:	fisttp DWORD PTR [edx-0x774a23e]
  41ed52:	call   0x5f3e:0x655d9c92
  41ed59:	xor    BYTE PTR [eax-0x4c3ae9b5],bh
  41ed5f:	loopne 0x41ed47
  41ed61:	arpl   sp,ax
  41ed63:	cmp    eax,ecx
  41ed65:	iret   
  41ed66:	xchg   BYTE PTR [edx],ah
  41ed68:	add    esi,DWORD PTR [ecx+0x7db59f6]
  41ed6e:	icebp  
  41ed6f:	in     al,0xc3
  41ed71:	push   edx
  41ed72:	xchg   esi,eax
  41ed73:	and    DWORD PTR [edx],edx
  41ed75:	lds    esi,FWORD PTR [ebx]
  41ed77:	out    dx,al
  41ed78:	std    
  41ed79:	sbb    ch,bl
  41ed7b:	pop    esp
  41ed7c:	iret   
  41ed7d:	xor    BYTE PTR [ebx+0x7e8103f4],0x78
  41ed84:	mov    ds:0xebf49631,eax
  41ed89:	das    
  41ed8a:	push   es
  41ed8b:	repnz push esi
  41ed8d:	es jl  0x41ed23
  41ed90:	sbb    al,0xd1
  41ed92:	sub    BYTE PTR [edi-0x3d],cl
  41ed95:	(bad)  [eax]
  41ed97:	pop    esp
  41ed98:	xor    eax,0xda57f1fc
  41ed9d:	pop    edi
  41ed9e:	jmp    0x41ed72
  41eda0:	test   DWORD PTR [ebp+0xbf0a9f],ecx
  41eda6:	in     eax,dx
  41eda7:	sub    cl,BYTE PTR [ebp+0x4c]
  41edaa:	ins    DWORD PTR es:[edi],dx
  41edab:	mov    eax,ds:0x130384d4
  41edb0:	rcl    BYTE PTR [ecx+ecx*2+0x5e],0x35
  41edb5:	xchg   esi,eax
  41edb6:	lock call 0x406c9020
  41edbc:	xchg   esp,eax
  41edbd:	mov    bh,0xe8
  41edbf:	dec    ebx
  41edc0:	dec    edi
  41edc1:	and    BYTE PTR [ebp+ebx*1+0x19],dh
  41edc5:	and    al,0xaa
  41edc7:	bound  edi,QWORD PTR [eax-0x75]
  41edca:	xor    al,0xd8
  41edcc:	and    eax,0x59977890
  41edd1:	addr16 xor eax,0x6925b901
  41edd7:	jl     0x41ed85
  41edd9:	jl     0x41edb9
  41eddb:	mov    ch,0xaf
  41eddd:	bswap  edx
  41eddf:	push   es
  41ede0:	inc    edi
  41ede1:	bnd jne 0x41ede8
  41ede4:	adc    esp,DWORD PTR [ecx]
  41ede6:	sbb    BYTE PTR [edx],bh
  41ede8:	jns    0x41ee24
  41edea:	add    edx,DWORD PTR [ebx]
  41edec:	push   ebp
  41eded:	outs   dx,DWORD PTR ds:[esi]
  41edee:	pusha  
  41edef:	dec    ebp
  41edf0:	push   ebx
  41edf1:	cmp    eax,DWORD PTR [edi-0x7]
  41edf4:	pop    ds
  41edf5:	mov    ebx,0xfef812f8
  41edfa:	outs   dx,DWORD PTR ds:[esi]
  41edfb:	dec    edi
  41edfc:	loopne 0x41ee0f
  41edfe:	cs push cs
  41ee00:	mov    eax,0x59ed1113
  41ee05:	outs   dx,DWORD PTR ds:[esi]
  41ee06:	mov    ds:0xa52ee185,eax
  41ee0b:	dec    ebx
  41ee0c:	adc    eax,0xb8ac462
  41ee11:	(bad)  
  41ee12:	daa    
  41ee13:	test   ecx,esi
  41ee15:	or     ah,BYTE PTR [ecx+0x7f3cf8fa]
  41ee1b:	sub    dl,BYTE PTR [ebp-0xa17fc9e]
  41ee21:	pushf  
  41ee22:	or     DWORD PTR gs:[edx-0x6a],ecx
  41ee26:	fs push eax
  41ee28:	dec    edi
  41ee29:	aam    0xf3
  41ee2b:	call   0x4ff0b890
  41ee30:	jbe    0x41ee7b
  41ee32:	and    eax,0x5ec23f31
  41ee37:	stos   BYTE PTR es:[edi],al
  41ee38:	bound  edx,QWORD PTR [eax-0x66]
  41ee3b:	push   ebx
  41ee3c:	mov    al,ds:0x3062fd7b
  41ee41:	jp     0x41ede4
  41ee43:	in     al,dx
  41ee44:	pop    esi
  41ee45:	push   ss
  41ee46:	dec    esp
  41ee47:	adc    dh,BYTE PTR [ecx]
  41ee49:	loope  0x41ee2b
  41ee4b:	mov    ds:0x96f49904,eax
  41ee50:	ret    0x5459
  41ee53:	xchg   ebp,eax
  41ee54:	or     ebp,DWORD PTR [edi-0x2a69d2d7]
  41ee5a:	mov    esp,0x40e186b5
  41ee5f:	test   eax,0xe22d7d4e
  41ee64:	mov    eax,ds:0xbcc8d47
  41ee69:	cld    
  41ee6a:	xlat   BYTE PTR ds:[ebx]
  41ee6b:	gs mov bl,0xe0
  41ee6e:	xchg   edx,eax
  41ee6f:	lods   al,BYTE PTR ds:[esi]
  41ee70:	int    0xcc
  41ee72:	imul   ecx,DWORD PTR [ebx],0x6f767d3f
  41ee78:	dec    ebx
  41ee79:	and    DWORD PTR [eax-0x3bb95525],eax
  41ee7f:	add    BYTE PTR [edi],ah
  41ee81:	ret    
  41ee82:	and    DWORD PTR [esi],edx
  41ee84:	shr    al,cl
  41ee86:	jg     0x41ee96
  41ee88:	or     eax,0x6ae55b55
  41ee8d:	jg     0x41ee63
  41ee8f:	loopne 0x41eef0
  41ee91:	adc    dh,BYTE PTR cs:[ecx]
  41ee94:	call   0xa878:0xb190e22b
  41ee9b:	mov    esi,0xb310b5df
  41eea0:	call   0x4d22:0x583528f0
  41eea7:	shr    DWORD PTR [ebp+ebp*2+0x58],0x5c
  41eeac:	jp     0x41ee39
  41eeae:	pop    es
  41eeaf:	in     eax,0x50
  41eeb1:	sbb    ecx,DWORD PTR [ebp+0x66ac9392]
  41eeb7:	push   es
  41eeb8:	ins    BYTE PTR es:[edi],dx
  41eeb9:	add    eax,0x80a4299c
  41eebe:	jne    0x41ee4d
  41eec0:	sub    ecx,DWORD PTR [eax]
  41eec2:	scas   eax,DWORD PTR es:[edi]
  41eec3:	push   ds
  41eec4:	inc    edi
  41eec5:	mov    edx,0x25c83283
  41eeca:	jl     0x41ef03
  41eecc:	mov    dl,0x45
  41eece:	lahf   
  41eecf:	sub    DWORD PTR [esi-0x21],esi
  41eed2:	(bad)  
  41eed3:	push   ss
  41eed4:	and    al,0x6f
  41eed6:	ins    DWORD PTR es:[edi],dx
  41eed7:	das    
  41eed8:	sub    al,0x21
  41eeda:	(bad)  
  41eedb:	int    0x38
  41eedd:	xor    DWORD PTR [edx-0x6d],0x8561093b
  41eee4:	pop    ds
  41eee5:	ret    0xd53d
  41eee8:	test   BYTE PTR [ecx-0x35c8d9c2],bh
  41eeee:	and    edi,ebp
  41eef0:	inc    eax
  41eef1:	dec    ecx
  41eef2:	pop    ss
  41eef3:	pop    ebx
  41eef4:	out    0x1b,eax
  41eef6:	cmp    dl,al
  41eef8:	scas   ax,WORD PTR es:[edi]
  41eefa:	rcl    BYTE PTR [eax-0x10],0x19
  41eefe:	adc    DWORD PTR [edi],edi
  41ef00:	xchg   BYTE PTR [eax],bh
  41ef02:	scas   eax,DWORD PTR es:[edi]
  41ef03:	cmp    BYTE PTR [eax-0x19736352],bh
  41ef09:	repnz add BYTE PTR [eax+ebp*2+0x4b82d8b6],bl
  41ef11:	pop    ecx
  41ef12:	mov    al,0x2c
  41ef14:	ins    BYTE PTR es:[edi],dx
  41ef15:	das    
  41ef16:	jle    0x41ef23
  41ef18:	jmp    0x41ef86
  41ef1a:	dec    edi
  41ef1b:	pushf  
  41ef1c:	xor    al,0xd5
  41ef1e:	(bad)  
  41ef20:	test   BYTE PTR [eax+0x38],al
  41ef23:	in     al,0x2e
  41ef25:	les    edi,FWORD PTR [eax]
  41ef27:	stc    
  41ef28:	imul   eax,DWORD PTR [ebx-0x724acd85],0x17b7c9c4
  41ef32:	push   esp
  41ef33:	imul   esp,DWORD PTR [eax],0x1f94bcbb
  41ef39:	clc    
  41ef3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef3b:	push   0x7118d8c5
  41ef40:	fwait
  41ef41:	mov    al,al
  41ef43:	sbb    ax,0x3e7d
  41ef47:	(bad)  
  41ef48:	loopne 0x41ef3f
  41ef4a:	call   0x68da:0xc8e69c78
  41ef51:	aam    0x6c
  41ef53:	xor    dl,BYTE PTR [ebx-0x618f351e]
  41ef59:	jge    0x41ef27
  41ef5b:	and    DWORD PTR [edx-0x44e715a1],ecx
  41ef61:	pop    edi
  41ef62:	add    DWORD PTR [edi+0x13e22f7d],ecx
  41ef68:	jb     0x41ef79
  41ef6a:	inc    edi
  41ef6b:	sub    DWORD PTR [eax],ebp
  41ef6d:	xlat   BYTE PTR ds:[ebx]
  41ef6e:	arpl   WORD PTR [edi+0x63],dx
  41ef71:	(bad)  
  41ef73:	mov    al,ds:0x6eb48319
  41ef78:	xchg   ecx,eax
  41ef79:	fidiv  DWORD PTR [edi-0x47112315]
  41ef7f:	outs   dx,DWORD PTR ds:[esi]
  41ef80:	ret    0xbcb9
  41ef83:	push   esi
  41ef84:	mov    ds:0xc0710954,al
  41ef89:	sahf   
  41ef8a:	add    al,0x8
  41ef8c:	aad    0x7b
  41ef8e:	pop    eax
  41ef8f:	adc    al,0xe7
  41ef91:	jp     0x41f00c
  41ef93:	pop    esp
  41ef94:	mov    cs,WORD PTR [ebp-0x75]
  41ef97:	arpl   WORD PTR [edi+0x75bb4de],ax
  41ef9d:	cmp    al,0xcc
  41ef9f:	pusha  
  41efa0:	pop    edi
  41efa1:	das    
  41efa2:	mov    ds:0xd91e71f7,al
  41efa7:	mov    al,0x8c
  41efaa:	mov    eax,ds:0x3e0eb651
  41efaf:	xor    bh,BYTE PTR [ebp+0x15ab32d3]
  41efb5:	pusha  
  41efb6:	test   BYTE PTR [esi],ch
  41efb8:	cld    
  41efb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efbb:	add    esi,ecx
  41efbd:	call   0xa90c:0x789101cf
  41efc4:	out    0x5,al
  41efc6:	mov    ah,0x9a
  41efc8:	mov    dh,BYTE PTR ds:0xf89be074
  41efce:	shl    ebx,cl
  41efd0:	sbb    al,0xd3
  41efd2:	push   ss
  41efd3:	lahf   
  41efd4:	add    edx,DWORD PTR [edi+0x38]
  41efd7:	les    esp,FWORD PTR [edx]
  41efd9:	popa   
  41efda:	push   eax
  41efdb:	js     0x41efec
  41efdd:	fild   WORD PTR [edx]
  41efdf:	enter  0x60ac,0xf6
  41efe3:	in     al,dx
  41efe4:	cmp    al,0x89
  41efe6:	add    ah,BYTE PTR [ebx+0x67]
  41efe9:	pushf  
  41efea:	leave  
  41efeb:	div    BYTE PTR [ebx-0x2f277f31]
  41eff1:	cmp    edx,eax
  41eff3:	outs   dx,BYTE PTR ds:[esi]
  41eff4:	push   edi
  41eff5:	imul   edx
  41eff7:	mov    bl,0x20
  41eff9:	sti    
  41effa:	jo     0x41f00f
  41effc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41effd:	push   eax
  41effe:	dec    esp
  41efff:	js     0x41f015
  41f001:	mov    edx,0x2982507
  41f006:	aad    0xa0
  41f008:	xchg   esp,eax
  41f009:	push   ds
  41f00a:	in     al,dx
  41f00b:	mov    ds:0x4a37181e,eax
  41f010:	add    bh,BYTE PTR [edx-0x696c751a]
  41f016:	inc    ebx
  41f017:	leave  
  41f018:	test   eax,0xd82d863
  41f01d:	iret   
  41f01e:	dec    ebx
  41f01f:	loop   0x41f079
  41f021:	push   cs
  41f022:	sub    esi,DWORD PTR [ebx+0x1e]
  41f025:	mov    WORD PTR [edi-0x6fba04ce],?
  41f02b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f02c:	inc    edi
  41f02d:	retf   0x336
  41f030:	or     eax,0x53135dbf
  41f035:	pop    edi
  41f036:	add    eax,0x7f8b435b
  41f03b:	dec    esp
  41f03c:	mov    esi,0x337838ec
  41f041:	or     al,0xef
  41f043:	jns    0x41f00e
  41f045:	inc    ebx
  41f046:	adc    BYTE PTR [ebx],0x85
  41f049:	or     DWORD PTR [eax+esi*4],ecx
  41f04c:	pop    eax
  41f04d:	aas    
  41f04e:	shl    DWORD PTR [ecx],cl
  41f050:	das    
  41f051:	iret   
  41f052:	aas    
  41f053:	int3   
  41f054:	outs   dx,DWORD PTR ds:[esi]
  41f055:	in     eax,dx
  41f056:	int    0xc4
  41f058:	mov    dl,0xce
  41f05a:	(bad)  
  41f05b:	cli    
  41f05c:	ds std 
  41f05e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f05f:	jg     0x41f04b
  41f061:	mov    edi,0x3ee14c7a
  41f066:	xchg   edx,eax
  41f067:	pop    esi
  41f068:	lock in al,0xca
  41f06b:	jmp    0x41f021
  41f06d:	push   ebp
  41f06e:	mov    edi,0x5d09dcb0
  41f073:	pusha  
  41f074:	and    al,0x61
  41f076:	add    ebp,ebp
  41f078:	jb     0x41f0a2
  41f07a:	xor    ebx,DWORD PTR [ebx]
  41f07c:	retf   0x67c9
  41f07f:	pop    esi
  41f080:	test   eax,0xd2b267eb
  41f085:	cmp    al,0x1f
  41f087:	stos   BYTE PTR es:[edi],al
  41f088:	rcr    edx,0xa5
  41f08b:	sub    al,BYTE PTR [ebp+0x33]
  41f08e:	pop    edx
  41f08f:	aaa    
  41f090:	sti    
  41f091:	add    al,0x96
  41f093:	out    0xc3,eax
  41f095:	pop    eax
  41f096:	cs ret 0xe212
  41f09a:	mov    ds,WORD PTR [edx+edi*4-0x21]
  41f09e:	adc    edx,DWORD PTR [ecx-0x4c6f3010]
  41f0a4:	adc    BYTE PTR [eax+0x5dcb1c8d],bl
  41f0aa:	cmp    al,bh
  41f0ac:	stos   BYTE PTR es:[edi],al
  41f0ad:	ins    BYTE PTR es:[edi],dx
  41f0ae:	(bad)  
  41f0af:	enter  0x634c,0x11
  41f0b3:	sub    DWORD PTR [ebp+0x2322f83f],esi
  41f0b9:	sub    cl,BYTE PTR [edi+eax*4]
  41f0bc:	xchg   BYTE PTR [edi+0x31],bl
  41f0bf:	pop    edx
  41f0c0:	std    
  41f0c1:	gs mov dh,0x2b
  41f0c4:	dec    edx
  41f0c5:	pop    edx
  41f0c6:	pop    esp
  41f0c7:	aad    0x81
  41f0c9:	rcr    DWORD PTR [eax+eax*2],1
  41f0cc:	or     ebp,ebp
  41f0ce:	cmp    BYTE PTR [ecx+ecx*4+0x2580a7fd],ah
  41f0d5:	cmp    BYTE PTR [ecx],al
  41f0d7:	fld    TBYTE PTR [eax]
  41f0d9:	imul   edx,DWORD PTR [edx-0x3a720ce0],0x23
  41f0e0:	mov    cl,0xb5
  41f0e2:	ror    BYTE PTR [ecx-0x51b5faff],cl
  41f0e8:	sbb    DWORD PTR [esi],esp
  41f0ea:	jns    0x41f0a1
  41f0ec:	dec    esi
  41f0ed:	int    0x57
  41f0ef:	jmp    0xb648:0x5ebb6dbb
  41f0f6:	dec    eax
  41f0f7:	(bad)  
  41f0f8:	xor    bl,BYTE PTR [edi]
  41f0fa:	mov    dh,0x61
  41f0fc:	sti    
  41f0fd:	mov    dl,0xa5
  41f0ff:	mov    ds:0xbe76963d,al
  41f104:	inc    esp
  41f105:	out    dx,al
  41f106:	mov    ds:0x1535fb7f,al
  41f10b:	mov    dl,0x2f
  41f10d:	push   ss
  41f10e:	mov    edx,0x4422a967
  41f113:	in     eax,dx
  41f114:	jmp    0xedca3003
  41f119:	aam    0x26
  41f11b:	jp     0x41f163
  41f11d:	mov    dh,0xa3
  41f11f:	mov    ch,0xbf
  41f121:	cdq    
  41f122:	in     eax,0x7b
  41f124:	arpl   WORD PTR cs:[ebp+0x6d],ax
  41f128:	push   cs
  41f129:	ins    DWORD PTR es:[edi],dx
  41f12a:	clc    
  41f12b:	and    BYTE PTR [eax-0x4b],0xf0
  41f12f:	test   DWORD PTR [esi],ecx
  41f131:	jo     0x41f0f7
  41f133:	out    0xd9,eax
  41f135:	sar    ecx,0x53
  41f138:	push   edx
  41f139:	ror    BYTE PTR [ebp-0x54],cl
  41f13c:	ins    BYTE PTR es:[edi],dx
  41f13d:	xor    esi,ecx
  41f13f:	cmp    al,0x6
  41f141:	pushf  
  41f142:	repnz and BYTE PTR [ecx-0x17],al
  41f146:	mov    esp,0x45d067b4
  41f14b:	mov    eax,ds:0x65955d79
  41f150:	dec    eax
  41f151:	outs   dx,DWORD PTR ds:[esi]
  41f152:	mov    bh,0xfc
  41f154:	cdq    
  41f155:	and    al,0xef
  41f157:	add    eax,0xa06e426f
  41f15c:	sahf   
  41f15d:	inc    ecx
  41f15e:	icebp  
  41f15f:	rcl    ch,1
  41f161:	hlt    
  41f162:	sub    al,0xee
  41f164:	(bad)  
  41f165:	adc    ebx,ecx
  41f167:	dec    ecx
  41f168:	outs   dx,DWORD PTR ds:[esi]
  41f169:	outs   dx,BYTE PTR ds:[esi]
  41f16a:	stos   DWORD PTR es:[edi],eax
  41f16b:	into   
  41f16c:	dec    edi
  41f16d:	js     0x41f12c
  41f16f:	jp     0x41f19e
  41f171:	ret    
  41f172:	mov    dl,BYTE PTR [edx-0x3e3430f4]
  41f178:	imul   edx,eax,0x913dc5b0
  41f17e:	hlt    
  41f17f:	mov    al,0x47
  41f181:	pop    ecx
  41f182:	xchg   esp,eax
  41f183:	cmp    eax,0x5bec9b3d
  41f188:	cmp    BYTE PTR [edx],dl
  41f18a:	adc    BYTE PTR [edi],al
  41f18c:	push   ecx
  41f18d:	sub    DWORD PTR [esp+ecx*4+0x63213d99],eax
  41f194:	jo     0x41f192
  41f196:	retf   0x2d6f
  41f199:	jmp    0xb771242a
  41f19e:	xchg   edx,eax
  41f19f:	rol    DWORD PTR [eax],cl
  41f1a1:	pop    esi
  41f1a2:	dec    esi
  41f1a3:	cs pop edx
  41f1a5:	cs shl esp,0x3b
  41f1a9:	frstor [eax+0x2ef1adcc]
  41f1af:	adc    BYTE PTR [ebx+edx*2],bl
  41f1b2:	and    edi,DWORD PTR [ecx]
  41f1b4:	and    DWORD PTR [esi-0x50],esi
  41f1b7:	cwde   
  41f1b8:	retf   
  41f1b9:	xor    ah,BYTE PTR [edi-0x4b]
  41f1bc:	pop    edx
  41f1bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1be:	cmc    
  41f1bf:	dec    esp
  41f1c0:	adc    eax,0xca23381c
  41f1c5:	sbb    DWORD PTR [edx+ebx*4+0x3e],ebx
  41f1c9:	jnp    0x41f1f6
  41f1cb:	popf   
  41f1cc:	arpl   si,dx
  41f1ce:	xchg   ecx,esi
  41f1d0:	test   BYTE PTR [edx],ch
  41f1d2:	push   esi
  41f1d3:	sbb    DWORD PTR [eax],ebx
  41f1d5:	fild   QWORD PTR [eax]
  41f1d7:	clc    
  41f1d8:	mov    ch,0xb2
  41f1da:	adc    BYTE PTR [eax],dh
  41f1dc:	and    eax,0x7b898d1c
  41f1e1:	je     0x41f182
  41f1e3:	fadd   st(5),st
  41f1e5:	pop    esp
  41f1e6:	mov    ecx,esp
  41f1e8:	mov    ds:0x668bb301,al
  41f1ed:	cmp    eax,0xc5173939
  41f1f2:	or     BYTE PTR [edx-0x51],dh
  41f1f5:	jae    0x41f1b0
  41f1f7:	dec    ecx
  41f1f8:	imul   ebx,DWORD PTR [esi+0x229d1616],0xffffffca
  41f1ff:	jp     0x41f1f1
  41f201:	int3   
  41f202:	dec    edi
  41f203:	jg     0x41f217
  41f205:	scas   al,BYTE PTR es:[edi]
  41f206:	jb     0x41f20a
  41f208:	mov    esi,0xc32aeff0
  41f20d:	add    edx,edi
  41f20f:	adc    dl,BYTE PTR [edi+0x6f]
  41f212:	stos   BYTE PTR es:[edi],al
  41f213:	dec    ebx
  41f214:	scas   al,BYTE PTR es:[edi]
  41f215:	cmp    edi,edx
  41f217:	sbb    bl,BYTE PTR [edx-0x7a]
  41f21a:	(bad)  
  41f21b:	pop    ecx
  41f21c:	push   0xffffffe2
  41f21e:	inc    esi
  41f21f:	and    eax,0x30f97b6c
  41f224:	cmc    
  41f225:	add    DWORD PTR [ecx+0x6f],ecx
  41f228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f229:	rcl    BYTE PTR [edi],1
  41f22b:	stos   DWORD PTR es:[edi],eax
  41f22c:	test   al,0x18
  41f22e:	(bad)  
  41f22f:	fwait
  41f230:	js     0x41f28b
  41f232:	and    al,0x61
  41f234:	stos   DWORD PTR es:[edi],eax
  41f235:	mov    al,BYTE PTR [esi+0x15]
  41f238:	xchg   DWORD PTR [ebx+0x2fc8be13],edi
  41f23e:	jmp    0xd173:0xe9b6944f
  41f245:	pop    ds
  41f246:	and    BYTE PTR [eax+0x10],dh
  41f249:	add    BYTE PTR [ecx-0x20],bh
  41f24c:	mov    ebp,0x6c44999b
  41f251:	mov    bh,0xfc
  41f253:	mov    al,BYTE PTR [esi+0x596bf853]
  41f259:	mov    ebx,0xfb57a727
  41f25e:	pop    esi
  41f25f:	aas    
  41f260:	jne    0x41f2d7
  41f262:	inc    esi
  41f263:	call   0x8513:0xfb9a3ad9
  41f26a:	jo     0x41f233
  41f26c:	pop    ecx
  41f26d:	push   ecx
  41f26e:	(bad)  
  41f26f:	pop    ecx
  41f270:	add    dh,BYTE PTR ds:0xcc3160c0
  41f276:	leave  
  41f277:	cmp    eax,0xfa9fe5c3
  41f27c:	retf   
  41f27d:	pop    esp
  41f27e:	or     edx,DWORD PTR [ebp-0x4f]
  41f281:	sar    DWORD PTR [edx],0x5c
  41f284:	(bad)  
  41f285:	rol    dh,0x6b
  41f288:	imul   ebx,DWORD PTR [eax+0x10],0xffffffdb
  41f28c:	mov    DWORD PTR [eax-0x72],ebp
  41f28f:	mov    ds:0xb1ca171b,eax
  41f294:	imul   esi
  41f296:	retf   
  41f297:	add    bh,0x44
  41f29a:	xor    al,0xbe
  41f29c:	xchg   BYTE PTR [edi+ebp*4+0x1d],cl
  41f2a0:	dec    esp
  41f2a1:	test   DWORD PTR [ebp-0x52],0xc26bd5b8
  41f2a8:	sbb    ah,BYTE PTR [esi+esi*2+0x1c]
  41f2ac:	xchg   DWORD PTR [ebx],esi
  41f2ae:	das    
  41f2af:	xchg   ebp,esp
  41f2b1:	add    BYTE PTR [edi],dl
  41f2b3:	mov    ecx,0x6b3434aa
  41f2b8:	imul   ebx,DWORD PTR [edi+0x34],0xae71374d
  41f2bf:	mov    bh,0x47
  41f2c1:	dec    edx
  41f2c2:	mov    bl,BYTE PTR [esi]
  41f2c4:	nop
  41f2c5:	or     al,0x3d
  41f2c7:	fcom   st(2)
  41f2c9:	shl    DWORD PTR ds:0xce1c8701,1
  41f2cf:	xor    ecx,DWORD PTR [esi]
  41f2d1:	dec    edx
  41f2d2:	push   esi
  41f2d3:	adc    DWORD PTR ds:0x172b7738,esp
  41f2d9:	clc    
  41f2da:	mov    DWORD PTR [eax],edx
  41f2dc:	jb     0x41f2ff
  41f2de:	sbb    cl,BYTE PTR [eax]
  41f2e0:	stc    
  41f2e1:	dec    esi
  41f2e2:	ds (bad) 
  41f2e5:	inc    edi
  41f2e6:	addr16 int3 
  41f2e8:	sub    ah,dl
  41f2ea:	mov    ds,WORD PTR [ebp+0x5424c6ca]
  41f2f0:	mov    DWORD PTR [esi-0x266453db],ebx
  41f2f6:	repz sbb ecx,DWORD PTR [ebp-0x6532a4d9]
  41f2fd:	imul   eax,ebx,0xffffffb5
  41f300:	int3   
  41f301:	dec    ebx
  41f302:	adc    bl,BYTE PTR [ecx-0x2c]
  41f305:	xchg   ecx,eax
  41f306:	arpl   WORD PTR [edx-0x6bdca07b],bx
  41f30c:	mov    ah,0x3f
  41f30e:	js     0x41f2c6
  41f310:	mov    ss,WORD PTR [edi+0x5b]
  41f313:	dec    esi
  41f314:	arpl   WORD PTR [ebp*4-0x697422ab],sp
  41f31b:	mov    cl,BYTE PTR [ecx-0x6cd6b43a]
  41f321:	into   
  41f322:	mov    edx,0x64c3fde
  41f327:	cli    
  41f328:	scas   eax,DWORD PTR es:[edi]
  41f329:	dec    ebx
  41f32a:	gs cmp al,0xc
  41f32d:	jl     0x41f312
  41f32f:	mov    esp,0x36d967d7
  41f334:	in     eax,0x6b
  41f336:	lds    edx,FWORD PTR [ebp+0x14600722]
  41f33c:	loope  0x41f377
  41f33e:	lock and DWORD PTR [edx+0x22],ebx
  41f342:	jmp    0xf565:0x60a90393
  41f349:	mov    eax,ds:0x8b83d814
  41f34e:	pop    es
  41f34f:	dec    esp
  41f350:	out    0x21,eax
  41f352:	push   esp
  41f353:	pop    edi
  41f354:	std    
  41f355:	mov    esi,0xdc7e06dc
  41f35a:	xchg   edx,eax
  41f35b:	(bad)  
  41f35c:	add    al,0x6b
  41f35e:	mov    cl,0xde
  41f360:	scas   eax,DWORD PTR es:[edi]
  41f361:	push   0x64
  41f363:	push   ebx
  41f364:	int    0xe
  41f366:	ins    BYTE PTR es:[edi],dx
  41f367:	jne    0x41f30f
  41f369:	aam    0x67
  41f36b:	sub    eax,0xb68f1d3f
  41f370:	cld    
  41f371:	fist   DWORD PTR [eax]
  41f373:	in     eax,0x7b
  41f375:	nop
  41f376:	xor    DWORD PTR [ebp+0x5d161f34],edi
  41f37c:	pop    edx
  41f37d:	jns    0x41f361
  41f37f:	in     eax,dx
  41f380:	mov    ebx,0x5d373dac
  41f385:	xor    BYTE PTR [esi],cl
  41f387:	div    BYTE PTR [edi]
  41f389:	sub    eax,0x2df869f4
  41f38e:	imul   eax,DWORD PTR [esi+0x5],0xf145cf8f
  41f395:	mov    al,ds:0xfa19b32b
  41f39a:	xchg   esi,eax
  41f39b:	cmp    eax,0x711fa70a
  41f3a0:	pop    eax
  41f3a1:	jno    0x41f3f4
  41f3a3:	inc    edx
  41f3a4:	int3   
  41f3a5:	sbb    DWORD PTR [ecx-0x4973eede],ebx
  41f3ab:	add    bh,BYTE PTR [edi]
  41f3ad:	pop    esp
  41f3ae:	inc    edx
  41f3af:	or     DWORD PTR [esi+0x16],ebp
  41f3b2:	outs   dx,DWORD PTR ds:[esi]
  41f3b3:	popf   
  41f3b4:	enter  0x9d99,0x4f
  41f3b8:	fidiv  WORD PTR [eax+0x2ae11762]
  41f3be:	mov    bh,0x6b
  41f3c0:	retf   
  41f3c1:	xchg   ebx,ebx
  41f3c3:	sbb    eax,0x9a1030a4
  41f3c8:	sub    ch,BYTE PTR [eax+0x42a8b816]
  41f3ce:	pop    ebx
  41f3cf:	sub    DWORD PTR ds:0x21fd3d19,ebx
  41f3d5:	push   ebx
  41f3d6:	cmp    BYTE PTR [esi],cl
  41f3d8:	loope  0x41f39b
  41f3da:	sub    al,0xee
  41f3dc:	push   cs
  41f3dd:	out    dx,eax
  41f3de:	mov    bh,0x65
  41f3e0:	out    0xdc,al
  41f3e2:	push   ds
  41f3e3:	mov    ebx,0x874a24d9
  41f3e8:	or     ecx,DWORD PTR [eax]
  41f3ea:	xlat   BYTE PTR ds:[ebx]
  41f3eb:	hlt    
  41f3ec:	fcom   DWORD PTR [esi]
  41f3ee:	retf   
  41f3ef:	jbe    0x41f450
  41f3f1:	xchg   edx,ebp
  41f3f3:	call   0x313c:0xe3029a3
  41f3fa:	sub    al,0x66
  41f3fc:	sub    al,ah
  41f3fe:	cli    
  41f3ff:	call   0xb9958c46
  41f404:	mov    esp,0x57360461
  41f409:	xchg   DWORD PTR [ebx-0x64bdd0a1],esp
  41f40f:	popf   
  41f410:	cmp    ebp,DWORD PTR [esi+0x4fa964d1]
  41f416:	mov    ch,0x2a
  41f418:	xor    DWORD PTR [eax],esi
  41f41a:	popa   
  41f41b:	rcr    DWORD PTR [eax+0x7],0x5a
  41f41f:	adc    ebx,edi
  41f421:	pop    esp
  41f422:	mov    ecx,0x54b740f5
  41f427:	jp     0x41f3ca
  41f429:	sub    al,0x7b
  41f42b:	lea    esp,[eax+0x3e]
  41f42e:	pusha  
  41f42f:	push   edx
  41f430:	shr    BYTE PTR [ecx+0x67787172],1
  41f436:	ins    DWORD PTR es:[edi],dx
  41f437:	mov    BYTE PTR [ebp+edi*1-0x37],ah
  41f43b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f43c:	sub    dh,bh
  41f43e:	dec    ebp
  41f43f:	in     eax,0x67
  41f441:	ss push ebp
  41f443:	xchg   edx,eax
  41f444:	adc    dh,BYTE PTR [eax+0x12]
  41f447:	jb     0x41f4b8
  41f449:	call   0xd4444b23
  41f44e:	popf   
  41f44f:	adc    DWORD PTR [ecx],ecx
  41f451:	xchg   ecx,eax
  41f452:	fwait
  41f453:	dec    edi
  41f454:	ss ret 
  41f456:	xor    al,0x1e
  41f458:	mov    DWORD PTR [eax-0x2c],ecx
  41f45b:	bound  edx,QWORD PTR [ebx]
  41f45d:	xlat   BYTE PTR ds:[ebx]
  41f45e:	outs   dx,DWORD PTR ds:[esi]
  41f45f:	clc    
  41f460:	inc    edi
  41f461:	mov    ch,BYTE PTR [edi-0x176885c4]
  41f467:	sbb    eax,0xa82a1227
  41f46c:	pushf  
  41f46d:	fistp  QWORD PTR ds:0x8e6e9513
  41f473:	lods   al,BYTE PTR ds:[esi]
  41f474:	lock aad 0x7a
  41f477:	stos   BYTE PTR es:[edi],al
  41f478:	daa    
  41f479:	cwde   
  41f47a:	sub    DWORD PTR [esi],esp
  41f47c:	imul   DWORD PTR [edx+0x51]
  41f47f:	fadd   st,st(1)
  41f481:	pop    es
  41f482:	jmp    0x3a9b:0x66835d40
  41f489:	xchg   ecx,eax
  41f48a:	xor    al,0x17
  41f48c:	jp     0x41f469
  41f48e:	fistp  WORD PTR [esi-0x6b]
  41f491:	nop
  41f492:	jp     0x41f424
  41f494:	call   0xf55e:0x142edfc9
  41f49b:	dec    edi
  41f49c:	(bad)  
  41f49d:	stc    
  41f49e:	dec    esp
  41f49f:	xchg   ebp,eax
  41f4a0:	aas    
  41f4a1:	div    DWORD PTR [esi-0x52]
  41f4a4:	mov    edi,0x762989e1
  41f4a9:	mov    al,ds:0xf220b3f1
  41f4ae:	mov    edx,0x37f3030b
  41f4b3:	mov    ds:0x5e1bc3c1,eax
  41f4b8:	fs jmp 0xe6e3c529
  41f4be:	xchg   edi,eax
  41f4bf:	out    dx,eax
  41f4c0:	std    
  41f4c1:	dec    esi
  41f4c2:	mov    cl,0x75
  41f4c4:	ds jns 0x41f546
  41f4c7:	not    DWORD PTR [edx-0x1eab790e]
  41f4cd:	lock add edx,DWORD PTR [esi-0x70070456]
  41f4d4:	retf   
  41f4d5:	mov    eax,0x37de1934
  41f4da:	xor    ebx,ebp
  41f4dc:	mov    ebx,0x6924928d
  41f4e1:	push   ds
  41f4e2:	das    
  41f4e3:	jmp    DWORD PTR [eax+0x22bf3235]
  41f4e9:	mov    DWORD PTR [ecx],esi
  41f4eb:	mov    DWORD PTR [ebp-0x79a0da5f],0x1a259373
  41f4f5:	mov    WORD PTR ds:0x632564c3,?
  41f4fb:	push   esp
  41f4fc:	in     eax,0x99
  41f4fe:	sub    al,al
  41f500:	(bad)  
  41f501:	in     al,0x72
  41f503:	fild   QWORD PTR [edx]
  41f505:	ins    BYTE PTR es:[edi],dx
  41f506:	inc    ecx
  41f507:	or     ecx,DWORD PTR [esi-0x19]
  41f50a:	hlt    
  41f50b:	jns    0x41f50e
  41f50d:	push   0x50
  41f50f:	sub    al,0x70
  41f511:	xor    eax,0xd0ceffd3
  41f516:	add    al,0xd9
  41f518:	pop    ss
  41f519:	or     al,0xf5
  41f51b:	lods   eax,DWORD PTR ds:[esi]
  41f51c:	or     BYTE PTR ds:0x49eb29f0,0x7d
  41f523:	idiv   BYTE PTR ds:0xfcd452e
  41f529:	call   0x6271:0xc0d42fb1
  41f530:	push   ebx
  41f531:	aas    
  41f532:	daa    
  41f533:	xchg   edi,eax
  41f534:	pushf  
  41f535:	cmp    dl,BYTE PTR [edx+eax*1+0x41]
  41f539:	pop    esp
  41f53a:	stc    
  41f53b:	stos   BYTE PTR es:[edi],al
  41f53c:	btr    edi,edx
  41f53f:	xchg   ecx,eax
  41f540:	push   cs
  41f541:	xchg   ebx,eax
  41f542:	push   ss
  41f543:	pop    ds
  41f544:	aad    0x96
  41f546:	cmp    DWORD PTR [ebp+0x33690ca9],ebx
  41f54c:	daa    
  41f54d:	adc    al,0x44
  41f54f:	pop    ds
  41f550:	mov    dl,0xa4
  41f552:	mov    ecx,0x9203b036
  41f557:	jmp    0x9dbd:0x80b6ac2c
  41f55e:	loopne 0x41f544
  41f560:	xchg   ecx,eax
  41f561:	imul   ebx,DWORD PTR [ebx-0xe4d773a],0x58216b4d
  41f56b:	fdiv   st(0),st
  41f56d:	aad    0x2d
  41f56f:	add    ebp,ebx
  41f571:	(bad)  
  41f573:	sti    
  41f574:	cmp    esp,DWORD PTR [ecx]
  41f576:	shl    DWORD PTR [eax],cl
  41f578:	dec    esp
  41f579:	or     BYTE PTR [eax],dl
  41f57b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f57c:	cmp    DWORD PTR [ecx+0x42],esp
  41f57f:	lock ins DWORD PTR es:[edi],dx
  41f581:	cdq    
  41f582:	dec    edi
  41f583:	or     DWORD PTR [edx+0x36],0xffffffea
  41f587:	dec    ecx
  41f588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f589:	icebp  
  41f58a:	cmp    edx,DWORD PTR [edx+0x374a8f34]
  41f590:	scas   eax,DWORD PTR es:[edi]
  41f591:	xor    ecx,ebp
  41f593:	enter  0x72e6,0x30
  41f597:	xchg   bl,dh
  41f599:	aad    0x79
  41f59b:	inc    esp
  41f59c:	dec    edi
  41f59d:	scas   al,BYTE PTR es:[edi]
  41f59e:	rcr    eax,1
  41f5a0:	push   ebp
  41f5a1:	fdivp  st(0),st
  41f5a3:	cld    
  41f5a4:	xor    DWORD PTR [ecx+esi*4-0x22f250f8],ecx
  41f5ab:	jo     0x41f5d7
  41f5ad:	sbb    cl,0x3
  41f5b0:	or     BYTE PTR [ecx],bh
  41f5b2:	(bad)  
  41f5b3:	cmp    eax,0x6b3e56b2
  41f5b8:	xchg   ebx,eax
  41f5b9:	mov    edi,0x7a76f22d
  41f5be:	xchg   ebx,eax
  41f5bf:	sub    DWORD PTR [ecx+0x7c2231d2],edx
  41f5c5:	sub    BYTE PTR [ebx],ah
  41f5c7:	js     0x41f5ed
  41f5c9:	push   ds
  41f5ca:	and    eax,DWORD PTR [edi+0x48]
  41f5cd:	sub    BYTE PTR es:[ebx+0x55],0xe0
  41f5d2:	adc    ecx,DWORD PTR ds:0x54b5e0b8
  41f5d8:	pop    esi
  41f5d9:	push   cs
  41f5da:	fadd   DWORD PTR [eax+edx*1-0x4a9c3752]
  41f5e1:	pop    esi
  41f5e2:	mov    ebx,0x692e38d0
  41f5e7:	mov    esp,0x7eb4d227
  41f5ec:	mov    al,ds:0x709c0fb3
  41f5f1:	outs   dx,DWORD PTR ds:[esi]
  41f5f2:	aaa    
  41f5f3:	fstp   st(0)
  41f5f5:	adc    bh,cl
  41f5f7:	mov    eax,0x154bb585
  41f5fc:	push   ss
  41f5fd:	sbb    eax,0x9ccbaabb
  41f602:	jne    0x41f607
  41f604:	imul   edx,ecx,0x1ecb3e54
  41f60a:	es mov dh,0xc4
  41f60d:	dec    ebp
  41f60e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f60f:	mov    eax,ds:0xf1e22657
  41f614:	scas   eax,DWORD PTR es:[edi]
  41f615:	mov    ds:0x2c55981a,eax
  41f61a:	hlt    
  41f61b:	cmp    al,0xd1
  41f61d:	xor    al,0x48
  41f61f:	add    dh,bl
  41f621:	dec    esi
  41f622:	data16 mov dl,0xa
  41f625:	ror    BYTE PTR [edx+0x254da35a],0x11
  41f62c:	je     0x41f63e
  41f62e:	sub    eax,0x3b90d9be
  41f633:	dec    edi
  41f634:	sbb    dh,BYTE PTR [eax+0x5151ce97]
  41f63a:	imul   esi,DWORD PTR ds:0xd124f556,0x76c2fb36
  41f644:	fs (bad) 
  41f646:	test   BYTE PTR [edi+esi*8],0x3f
  41f64a:	or     eax,0x1171453c
  41f64f:	sbb    esp,DWORD PTR [esp+eiz*2]
  41f652:	(bad)  
  41f653:	jmp    0x41f645
  41f655:	jge    0x41f620
  41f657:	(bad)  
  41f658:	leave  
  41f659:	arpl   WORD PTR [eax],ax
  41f65b:	cmc    
  41f65c:	cmp    al,0x45
  41f65e:	add    edi,DWORD PTR [edi+0x2c65a8fe]
  41f664:	cs pop ds
  41f666:	push   esp
  41f667:	or     esi,DWORD PTR [ebx+0x4a]
  41f66a:	stos   BYTE PTR es:[edi],al
  41f66b:	jge    0x41f660
  41f66d:	into   
  41f66e:	std    
  41f66f:	imul   esp,DWORD PTR [ebx],0x5bbc1625
  41f675:	jmp    0x59799d3a
  41f67a:	adc    ebp,ecx
  41f67c:	ror    DWORD PTR [eax-0x33010539],cl
  41f682:	push   es
  41f683:	imul   esi,esp,0x52133887
  41f689:	and    eax,0x60d14518
  41f68e:	add    al,0x7
  41f690:	dec    esp
  41f691:	rol    BYTE PTR [edi-0x57],cl
  41f694:	xchg   edi,eax
  41f695:	sbb    eax,0xc08b7813
  41f69a:	xchg   edi,eax
  41f69b:	aam    0xf4
  41f69d:	jbe    0x41f715
  41f69f:	add    ecx,DWORD PTR [eax+0x3b4fc8da]
  41f6a5:	pop    ds
  41f6a6:	hlt    
  41f6a7:	add    al,0x14
  41f6a9:	(bad)  
  41f6ab:	sub    eax,0x352e66ba
  41f6b0:	push   ss
  41f6b1:	xchg   edx,eax
  41f6b2:	bsr    ecx,esi
  41f6b5:	data16 daa 
  41f6b7:	popf   
  41f6b8:	adc    eax,0x28b4f5b0
  41f6bd:	mov    eax,ds:0x592e274b
  41f6c2:	shl    ecx,0xe3
  41f6c5:	iret   
  41f6c6:	(bad)  
  41f6c7:	es in  al,0x2d
  41f6ca:	fstp   st(3)
  41f6cc:	push   esi
  41f6cd:	fidiv  WORD PTR [esi]
  41f6cf:	(bad)  
  41f6d0:	std    
  41f6d1:	es mov bh,0x53
  41f6d4:	pusha  
  41f6d5:	lods   eax,DWORD PTR ds:[esi]
  41f6d6:	or     bh,BYTE PTR [ecx-0x714b45bb]
  41f6dc:	push   eax
  41f6dd:	mov    cl,0x8f
  41f6df:	jnp    0x41f6a5
  41f6e1:	pop    esp
  41f6e2:	fcom   DWORD PTR [eax-0xb]
  41f6e5:	je     0x41f6e6
  41f6e7:	test   dl,al
  41f6e9:	mov    edi,edx
  41f6eb:	adc    BYTE PTR [esi+0x5ee88c47],bh
  41f6f1:	xchg   ebx,eax
  41f6f2:	fneni(8087 only) 
  41f6f4:	int    0x8a
  41f6f6:	lods   al,BYTE PTR ds:[esi]
  41f6f7:	push   edi
  41f6f8:	rcr    DWORD PTR [eax+0x7f26d8a],0x36
  41f6ff:	outs   dx,BYTE PTR ds:[esi]
  41f700:	and    BYTE PTR [ebx],bh
  41f702:	jmp    0x714bb99d
  41f707:	inc    esp
  41f708:	xchg   esp,eax
  41f709:	(bad)  
  41f70a:	les    eax,FWORD PTR [ebx+edx*8-0x764baab5]
  41f711:	pop    edi
  41f712:	mov    esp,0x550ea42b
  41f717:	add    al,0x7c
  41f719:	out    dx,eax
  41f71a:	mov    bh,0xa4
  41f71c:	sahf   
  41f71d:	lods   al,BYTE PTR ds:[esi]
  41f71e:	(bad)  
  41f71f:	scas   al,BYTE PTR es:[edi]
  41f720:	push   edi
  41f721:	inc    ecx
  41f722:	scas   eax,DWORD PTR es:[edi]
  41f723:	xlat   BYTE PTR ds:[ebx]
  41f724:	inc    ecx
  41f725:	push   ebx
  41f726:	pop    edi
  41f727:	shl    BYTE PTR [eax],0xba
  41f72a:	cmp    edi,DWORD PTR [edi-0xaa5df5c]
  41f730:	test   DWORD PTR [edi],ebx
  41f732:	adc    eax,0xc6681dd8
  41f737:	adc    al,BYTE PTR [edx]
  41f739:	and    eax,0x7f08f9a5
  41f73e:	popa   
  41f73f:	dec    esi
  41f740:	mov    ebp,0x2576ede5
  41f745:	imul   BYTE PTR [edi-0x1e30e78f]
  41f74b:	out    dx,eax
  41f74c:	ficom  WORD PTR [eax-0x63]
  41f74f:	mov    edx,0x104d4a13
  41f754:	mov    edx,esp
  41f756:	push   ss
  41f757:	add    ebp,DWORD PTR [ecx+ecx*2]
  41f75a:	and    al,0x87
  41f75c:	add    ebp,DWORD PTR [ebx]
  41f75e:	sar    al,1
  41f760:	mov    al,ds:0xe1892291
  41f765:	xor    cl,bl
  41f767:	mov    esp,0xa060c37e
  41f76c:	pop    es
  41f76d:	cmovle esp,DWORD PTR [ecx]
  41f770:	inc    ebp
  41f771:	jae    0x41f75e
  41f773:	xchg   ebp,eax
  41f774:	jo     0x41f79f
  41f776:	cmp    al,bl
  41f778:	addr16 jmp 0x41f72c
  41f77b:	pop    ebx
  41f77c:	inc    esi
  41f77d:	and    eax,DWORD PTR [edx+0x15]
  41f780:	push   esp
  41f781:	and    DWORD PTR [eax-0x23124b83],eax
  41f787:	mov    ebp,0x834f809c
  41f78c:	pop    edi
  41f78d:	mov    bl,0x11
  41f78f:	es addr16 arpl ax,si
  41f793:	popf   
  41f794:	inc    eax
  41f795:	mov    cl,0xe3
  41f797:	xchg   ecx,eax
  41f798:	scas   al,BYTE PTR es:[edi]
  41f799:	mov    bl,BYTE PTR [edi]
  41f79b:	jl     0x41f73a
  41f79d:	mov    bh,bh
  41f79f:	push   ebp
  41f7a0:	(bad)  
  41f7a1:	retf   0x3e3e
  41f7a4:	std    
  41f7a5:	fmul   st,st(4)
  41f7a7:	fwait
  41f7a8:	ror    DWORD PTR [eax-0x63],0x7c
  41f7ac:	icebp  
  41f7ad:	std    
  41f7ae:	xor    al,0xac
  41f7b0:	mov    ecx,0x3ad2424a
  41f7b5:	in     eax,0xcb
  41f7b7:	inc    esp
  41f7b8:	sub    eax,0x6618bddd
  41f7bd:	mov    esp,DWORD PTR [edi-0x7e]
  41f7c0:	push   ecx
  41f7c1:	add    DWORD PTR [eax-0x653608de],edi
  41f7c7:	sub    al,0xa5
  41f7c9:	arpl   WORD PTR [ecx+ebx*8-0x736a0d16],bp
  41f7d0:	jb     0x41f82c
  41f7d2:	and    DWORD PTR [ebx+edi*4-0x77c630ba],ebx
  41f7d9:	lea    ebx,[eax-0x56]
  41f7dc:	adc    eax,DWORD PTR [eax+0x21272722]
  41f7e2:	add    BYTE PTR ds:0x7ebd6a5b,dh
  41f7e8:	in     al,0xf0
  41f7ea:	nop    DWORD PTR [eax+0x63]
  41f7ee:	cmp    cl,BYTE PTR [ebx-0x528dbad5]
  41f7f4:	pop    ebx
  41f7f5:	inc    edi
  41f7f6:	add    eax,0xee51d408
  41f7fb:	and    edx,eax
  41f7fd:	stos   BYTE PTR es:[edi],al
  41f7fe:	sub    al,0x17
  41f800:	mov    ?,esp
  41f802:	mov    eax,0x3a7ce232
  41f807:	and    al,0x5e
  41f809:	das    
  41f80a:	jb     0x41f871
  41f80c:	adc    ebx,edx
  41f80e:	scas   al,BYTE PTR es:[edi]
  41f80f:	lods   eax,DWORD PTR ds:[esi]
  41f810:	int3   
  41f811:	std    
  41f812:	pusha  
  41f813:	cmp    edi,DWORD PTR [ebx]
  41f815:	mov    si,0x5186
  41f819:	pop    ebx
  41f81a:	mov    eax,0x4eb21743
  41f81f:	sahf   
  41f820:	add    bl,0xb4
  41f823:	push   esi
  41f824:	and    BYTE PTR ds:[edx+0x65d3c91],0x8b
  41f82c:	jne    0x41f804
  41f82e:	jnp    0x41f7d3
  41f830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f831:	and    cl,BYTE PTR [ebx-0x43bd71ab]
  41f837:	mov    dh,0xb
  41f839:	test   al,0xcc
  41f83b:	pop    ecx
  41f83c:	cwde   
  41f83d:	jo     0x41f89f
  41f83f:	sti    
  41f840:	cmc    
  41f841:	inc    esi
  41f842:	imul   edx,DWORD PTR [eax+0x40],0x33
  41f846:	fstp   TBYTE PTR [ecx+0x26]
  41f849:	pop    es
  41f84a:	mov    ch,0xf0
  41f84c:	inc    ebx
  41f84d:	sbb    bh,BYTE PTR [esi]
  41f84f:	bound  eax,QWORD PTR [ebx-0xf8fe3d]
  41f855:	and    ebx,ebx
  41f857:	test   al,0xd1
  41f859:	jnp    0x41f86a
  41f85b:	fisttp WORD PTR [ebx]
  41f85d:	ss aam 0xc4
  41f860:	rcl    BYTE PTR [ebx-0x4b4607a0],cl
  41f866:	iret   
  41f867:	in     eax,dx
  41f868:	aad    0xa5
  41f86a:	imul   ecx,ecx,0xa755d7ff
  41f870:	fild   WORD PTR [ebp+0x5d]
  41f873:	mov    al,0x88
  41f875:	clc    
  41f876:	cwde   
  41f877:	addr16 push ecx
  41f879:	inc    eax
  41f87a:	push   es
  41f87b:	sub    BYTE PTR [ecx+0x75],cl
  41f87e:	out    dx,eax
  41f87f:	xchg   edx,eax
  41f880:	xlat   BYTE PTR ds:[ebx]
  41f881:	fdiv   DWORD PTR ds:0xe7b01e03
  41f887:	outs   dx,BYTE PTR ds:[esi]
  41f888:	int    0xf2
  41f88a:	pop    ecx
  41f88b:	ror    BYTE PTR [ebp-0x36],0xdb
  41f88f:	dec    edx
  41f890:	mov    esp,0x4adf837e
  41f895:	push   ecx
  41f896:	pop    edx
  41f897:	push   edx
  41f898:	popf   
  41f899:	std    
  41f89a:	fnstcw WORD PTR [edx]
  41f89c:	ficom  DWORD PTR [edx]
  41f89e:	ret    0xf0f7
  41f8a1:	icebp  
  41f8a2:	lock repnz mov dl,0xc1
  41f8a6:	jmp    0x41f8c6
  41f8a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8a9:	(bad)  
  41f8ab:	das    
  41f8ac:	cmp    eax,0x1a211958
  41f8b1:	push   0xffffffd8
  41f8b3:	out    0x6e,al
  41f8b5:	mov    dl,0x4e
  41f8b7:	(bad)  
  41f8b8:	dec    edi
  41f8b9:	data16 adc BYTE PTR [ebp+0x25a04c91],ah
  41f8c0:	cs mov bl,0x32
  41f8c3:	aam    0x51
  41f8c5:	adc    eax,0xe20f0977
  41f8ca:	xchg   edi,eax
  41f8cb:	and    BYTE PTR [edi],dl
  41f8cd:	out    0x3c,al
  41f8cf:	fwait
  41f8d0:	mov    esp,0xbdf085ef
  41f8d5:	fcomp  DWORD PTR [eax-0x33]
  41f8d8:	dec    ecx
  41f8d9:	imul   ebp,ecx,0xf5ba150f
  41f8df:	sbb    bh,ch
  41f8e1:	pop    esp
  41f8e2:	inc    ebx
  41f8e3:	cdq    
  41f8e4:	or     dl,cl
  41f8e6:	mov    ch,0xcf
  41f8e8:	pusha  
  41f8e9:	stc    
  41f8ea:	cmp    eax,0x2aaf9ba2
  41f8ef:	outs   dx,BYTE PTR ds:[esi]
  41f8f0:	cs (bad) 
  41f8f3:	add    ebx,DWORD PTR [edi-0x4c]
  41f8f6:	(bad)  
  41f8f7:	or     eax,0x87d8c82c
  41f8fc:	push   eax
  41f8fd:	pop    ecx
  41f8fe:	sub    BYTE PTR cs:[eax+0x386b3922],dl
  41f905:	mov    al,0x15
  41f907:	les    edi,FWORD PTR [edi]
  41f909:	pop    edx
  41f90a:	(bad)  
  41f90b:	fcomp  QWORD PTR [ebx-0x220fa2d4]
  41f911:	int3   
  41f912:	xor    ch,0x7b
  41f915:	mov    ds:0x7f33feb3,eax
  41f91a:	dec    esp
  41f91b:	test   al,0x8d
  41f91d:	jp     0x41f8e9
  41f91f:	iret   
  41f920:	gs sbb bl,bl
  41f923:	pop    ds
  41f924:	rcl    DWORD PTR [edx-0x5fed3025],cl
  41f92a:	mov    dh,0x29
  41f92c:	ret    0x6591
  41f92f:	push   cs
  41f930:	inc    eax
  41f931:	push   ebx
  41f932:	fsubr  DWORD PTR [edi+0x6236c6d8]
  41f938:	add    BYTE PTR ds:0xc8ae650b,al
  41f93e:	nop
  41f93f:	xor    eax,0x68193e63
  41f944:	push   eax
  41f945:	sahf   
  41f946:	push   ss
  41f947:	ins    BYTE PTR es:[edi],dx
  41f948:	in     al,0xb4
  41f94a:	inc    eax
  41f94b:	pushf  
  41f94c:	lock (bad) 
  41f94e:	or     dl,cl
  41f950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f951:	scas   al,BYTE PTR es:[edi]
  41f952:	out    dx,al
  41f953:	mov    dl,0xc3
  41f955:	stos   BYTE PTR es:[edi],al
  41f956:	jb     0x41f9c6
  41f958:	icebp  
  41f959:	popa   
  41f95a:	dec    ebp
  41f95b:	jnp    0x41f988
  41f95d:	pop    esi
  41f95e:	out    0x21,al
  41f960:	xor    bh,cl
  41f962:	call   0xa3ed:0x9ed3eb44
  41f969:	add    cl,BYTE PTR [ebp-0x73]
  41f96c:	clc    
  41f96d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f96e:	cmp    ebx,DWORD PTR [ebp+0x434b552d]
  41f974:	cmpxchg BYTE PTR [eax],cl
  41f977:	mov    ebp,0x8171b845
  41f97c:	int    0xc7
  41f97e:	sub    DWORD PTR [ebp-0x602c149b],esp
  41f984:	jno    0x41f90f
  41f986:	xlat   BYTE PTR ds:[ebx]
  41f987:	sub    dh,al
  41f989:	lods   al,BYTE PTR ds:[esi]
  41f98a:	xor    dl,bh
  41f98c:	mov    gs,WORD PTR [ecx-0x544e0ecd]
  41f992:	fidiv  WORD PTR [ebp-0x64]
  41f995:	stc    
  41f996:	test   al,0x72
  41f998:	test   eax,0x40b8ef82
  41f99d:	repnz dec edx
  41f99f:	loop   0x41f9d8
  41f9a1:	add    al,BYTE PTR [esi-0x2648fd71]
  41f9a7:	cmp    DWORD PTR ds:0xc12d5dcf,ebp
  41f9ad:	sub    al,0x3e
  41f9af:	pushf  
  41f9b0:	retf   0x3820
  41f9b3:	lahf   
  41f9b4:	dec    eax
  41f9b5:	inc    ebx
  41f9b6:	or     al,BYTE PTR [ebx-0x66]
  41f9b9:	adc    ecx,edx
  41f9bb:	push   edx
  41f9bc:	mov    ss,WORD PTR [ecx+0x2c]
  41f9bf:	sbb    ebp,DWORD PTR [esi]
  41f9c1:	xor    ebx,DWORD PTR [esi+eiz*4]
  41f9c4:	jmp    0xc9a3bc7c
  41f9c9:	mov    ah,0xae
  41f9cb:	pop    ds
  41f9cc:	jmp    0x41fa00
  41f9ce:	inc    ebp
  41f9cf:	push   es
  41f9d0:	mov    ah,0x61
  41f9d2:	mov    ?,WORD PTR [esp+ebp*4+0x52]
  41f9d6:	(bad)  
  41f9d7:	adc    eax,0xb181ae93
  41f9dc:	fistp  WORD PTR [ebx]
  41f9de:	inc    esi
  41f9df:	adc    eax,0x898353ce
  41f9e4:	pop    ebp
  41f9e5:	xchg   esi,eax
  41f9e6:	fs hlt 
  41f9e8:	shr    BYTE PTR [ecx],1
  41f9ea:	in     eax,0x2d
  41f9ec:	iret   
  41f9ed:	out    0xe4,al
  41f9ef:	sub    al,0xb0
  41f9f1:	xchg   edx,eax
  41f9f2:	jns    0x41f9b8
  41f9f4:	sbb    al,0xf
  41f9f6:	pushf  
  41f9f7:	sbb    esi,DWORD PTR [ecx-0x1cc9d255]
  41f9fd:	sbb    DWORD PTR [ebx+0x20],ebx
  41fa00:	loope  0x41f9f5
  41fa02:	adc    esi,DWORD PTR [ecx+0x78]
  41fa05:	mov    esp,0x18c06a87
  41fa0a:	mov    eax,0xc7eee105
  41fa0f:	cmp    esp,edi
  41fa11:	in     eax,dx
  41fa12:	mov    ch,0x8d
  41fa14:	sti    
  41fa15:	cmp    al,0xc6
  41fa17:	inc    edx
  41fa18:	jp     0x41fa44
  41fa1a:	mov    bh,0xda
  41fa1c:	mov    al,0xee
  41fa1e:	repnz xor ebx,DWORD PTR [eax]
  41fa21:	nop
  41fa22:	stos   BYTE PTR es:[edi],al
  41fa23:	cmp    esp,ebx
  41fa25:	(bad)  
  41fa26:	(bad)  
  41fa27:	cmp    BYTE PTR [eiz*2+0x760cdea1],al
  41fa2e:	aas    
  41fa2f:	fstp   TBYTE PTR [eax]
  41fa31:	rol    DWORD PTR ds:0x2868696b,1
  41fa37:	jg     0x41faa9
  41fa39:	outs   dx,DWORD PTR ds:[esi]
  41fa3a:	in     eax,dx
  41fa3b:	cmp    ch,dh
  41fa3d:	hlt    
  41fa3e:	mov    esp,0xd20eac9b
  41fa43:	imul   esp,DWORD PTR [ebx+ebp*1],0x58
  41fa47:	neg    DWORD PTR [ebp-0x664bf3f]
  41fa4d:	and    eax,0x898c1cc6
  41fa52:	sub    DWORD PTR [ebx+0x2],esi
  41fa55:	mov    esp,0xb34d3c6e
  41fa5a:	or     dh,BYTE PTR [edi-0x15]
  41fa5d:	pushf  
  41fa5e:	mov    esp,0x63187a
  41fa63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa64:	fwait
  41fa65:	mov    esi,DWORD PTR [ebx]
  41fa67:	jp     0x41fa88
  41fa69:	repnz sar BYTE PTR [ecx+0x14cf4c96],0x6a
  41fa71:	enter  0xcc64,0x2f
  41fa75:	clc    
  41fa76:	pop    ebp
  41fa77:	bound  ecx,QWORD PTR [ebx+0x7fdcd9c2]
  41fa7d:	or     edx,edx
  41fa7f:	jmp    0x41fab9
  41fa81:	xchg   esp,eax
  41fa82:	inc    ebp
  41fa83:	inc    edi
  41fa84:	jmp    0xd31e7d52
  41fa89:	xor    edx,ebp
  41fa8b:	pop    ecx
  41fa8c:	(bad)  
  41fa8d:	icebp  
  41fa8e:	rcl    BYTE PTR ds:0xd32ec370,0x39
  41fa95:	pop    edi
  41fa96:	sbb    DWORD PTR [ecx-0x4],ebp
  41fa99:	pop    eax
  41fa9a:	mov    esi,0x6d3d502f
  41fa9f:	or     DWORD PTR [ecx],ebp
  41faa1:	pop    edi
  41faa2:	push   es
  41faa3:	aaa    
  41faa4:	scas   eax,DWORD PTR es:[edi]
  41faa5:	test   BYTE PTR [ecx-0x5f],bl
  41faa8:	mov    es,edi
  41faaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faab:	adc    dh,BYTE PTR [eax+0x78]
  41faae:	mov    ds:0x9b9493a2,eax
  41fab3:	ss jecxz 0x41facd
  41fab6:	pop    edx
  41fab7:	inc    edx
  41fab8:	daa    
  41fab9:	shr    DWORD PTR [edi+ebx*2],0x2b
  41fabd:	jae    0x41fac8
  41fabf:	dec    esi
  41fac0:	pop    edi
  41fac1:	mov    edi,0xe91cfdc2
  41fac6:	es dec ebx
  41fac8:	stos   BYTE PTR es:[edi],al
  41fac9:	or     ch,al
  41facb:	neg    DWORD PTR [esi+0xb0f3dbc]
  41fad1:	mov    esp,0x5088eca8
  41fad6:	and    al,0x15
  41fad8:	in     eax,dx
  41fad9:	popa   
  41fada:	les    ebx,FWORD PTR [edi+0x33a90db6]
  41fae0:	imul   edi,ebp,0xe4583404
  41fae6:	pop    esp
  41fae7:	rcl    ecx,cl
  41fae9:	push   eax
  41faea:	test   al,0xce
  41faec:	mov    edx,0x5adf2c86
  41faf1:	test   eax,0xcebcef07
  41faf6:	inc    edi
  41faf7:	(bad)  
  41faf8:	xchg   edx,eax
  41faf9:	pop    esi
  41fafa:	inc    esi
  41fafb:	outs   dx,DWORD PTR ds:[esi]
  41fafc:	(bad)  
  41fafd:	loopne 0x41fb0f
  41faff:	jb     0x41fb22
  41fb01:	clc    
  41fb02:	xor    eax,0x7a8a9671
  41fb07:	sbb    DWORD PTR [esi],edx
  41fb09:	jp     0x41fa93
  41fb0b:	cmp    eax,0xfccea1da
  41fb10:	adc    eax,0x56ac6d59
  41fb15:	cli    
  41fb16:	push   0xbb7b459e
  41fb1b:	inc    ebx
  41fb1c:	loope  0x41fac5
  41fb1e:	mov    esp,esp
  41fb20:	test   eax,ecx
  41fb22:	adc    edi,DWORD PTR [ebx]
  41fb24:	mov    ch,0x1d
  41fb27:	push   0x3d
  41fb29:	outs   dx,BYTE PTR ds:[esi]
  41fb2a:	adc    al,0xab
  41fb2c:	in     eax,0x44
  41fb2e:	(bad)  
  41fb2f:	cmp    al,0x3c
  41fb31:	adc    eax,0x1abca9fd
  41fb36:	sub    dh,BYTE PTR [ecx-0xb]
  41fb39:	sahf   
  41fb3a:	push   edi
  41fb3b:	rol    BYTE PTR [edi+0x36d5273b],0xf5
  41fb42:	fwait
  41fb43:	mov    ebx,0x4288ed4e
  41fb48:	cmp    eax,0xe9ef00e7
  41fb4d:	jecxz  0x41fb15
  41fb4f:	(bad)  
  41fb50:	push   ss
  41fb51:	push   0x33
  41fb53:	rol    ah,cl
  41fb55:	xchg   esi,eax
  41fb56:	inc    ebx
  41fb57:	pop    ds
  41fb58:	sub    al,0x99
  41fb5a:	rcr    BYTE PTR [esi+0x764cd7e6],1
  41fb60:	push   0x4c
  41fb62:	leave  
  41fb63:	rol    BYTE PTR [ebx+edx*2],1
  41fb66:	neg    BYTE PTR ds:0x11184182
  41fb6c:	lods   eax,DWORD PTR ds:[esi]
  41fb6d:	test   eax,0x7c3509d4
  41fb72:	popa   
  41fb73:	dec    esp
  41fb74:	jbe    0x41fb81
  41fb76:	aad    0x71
  41fb78:	pop    eax
  41fb79:	icebp  
  41fb7a:	mov    ch,0x4c
  41fb7c:	or     bl,BYTE PTR [esp+edi*8]
  41fb7f:	dec    eax
  41fb80:	rol    al,1
  41fb82:	arpl   cx,si
  41fb84:	sub    DWORD PTR [esi+0x2df9f26f],edi
  41fb8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb8b:	jg     0x41fb34
  41fb8d:	ins    DWORD PTR es:[edi],dx
  41fb8e:	and    BYTE PTR [edx],bl
  41fb90:	mov    eax,ds:0x9d278504
  41fb95:	nop
  41fb96:	lds    esi,FWORD PTR [edx-0x53442918]
  41fb9c:	rcr    DWORD PTR [edi],1
  41fb9e:	out    dx,eax
  41fb9f:	pusha  
  41fba0:	stos   DWORD PTR es:[edi],eax
  41fba1:	out    dx,al
  41fba2:	push   ebp
  41fba3:	lock out 0xa8,eax
  41fba6:	cwde   
  41fba7:	aaa    
  41fba8:	mov    WORD PTR [edi+0x75],?
  41fbab:	stos   DWORD PTR es:[edi],eax
  41fbac:	cmp    ebx,esi
  41fbae:	xchg   edx,eax
  41fbaf:	sub    eax,DWORD PTR [eax-0x6cf71a4e]
  41fbb5:	push   ebx
  41fbb6:	jl     0x41fbe5
  41fbb8:	xchg   ebx,eax
  41fbb9:	(bad)  
  41fbba:	mov    eax,DWORD PTR [ecx-0x7c]
  41fbbd:	rcr    BYTE PTR [edx],1
  41fbbf:	out    dx,al
  41fbc0:	rcr    DWORD PTR [ebp-0x3a],cl
  41fbc3:	fisttp WORD PTR [edx+ecx*8+0x3b]
  41fbc7:	aad    0xaf
  41fbc9:	sbb    al,0x4a
  41fbcb:	mov    al,ds:0xb42fce55
  41fbd0:	leave  
  41fbd1:	in     eax,dx
  41fbd2:	jmp    0xc88c864
  41fbd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbd8:	jp     0x41fc16
  41fbda:	call   0xde469bf2
  41fbdf:	mov    bl,0xe5
  41fbe1:	shl    BYTE PTR [eax+0x12],cl
  41fbe4:	les    esi,FWORD PTR [eax-0x2a2e424c]
  41fbea:	loopne 0x41fc06
  41fbec:	sti    
  41fbed:	dec    esp
  41fbee:	mov    edi,0x127e3940
  41fbf3:	(bad)  
  41fbf4:	add    edi,edx
  41fbf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbf7:	or     DWORD PTR [ebp+0x56],ecx
  41fbfa:	pop    DWORD PTR [edx]
  41fbfc:	ficom  WORD PTR [eax-0x420dfe0c]
  41fc02:	enter  0x341e,0x5b
  41fc06:	sub    BYTE PTR [ecx+0x5177e731],al
  41fc0c:	xor    cl,BYTE PTR [esi]
  41fc0e:	popa   
  41fc0f:	call   0x10a2eb55
  41fc14:	loop   0x41fc3f
  41fc16:	pop    es
  41fc17:	movups xmm7,XMMWORD PTR [ecx]
  41fc1a:	pop    edi
  41fc1b:	ja     0x41fbfe
  41fc1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc1e:	cmc    
  41fc1f:	shl    ah,0x2d
  41fc22:	jmp    0x9ce7:0xda23fb75
  41fc29:	xchg   edx,eax
  41fc2a:	sti    
  41fc2b:	in     al,dx
  41fc2c:	movsx  esp,sp
  41fc2f:	ja     0x41fc89
  41fc31:	imul   eax,DWORD PTR [esi+0xb],0xd
  41fc35:	fcomp  QWORD PTR [eax+ecx*8-0x6aafbdd]
  41fc3c:	stos   BYTE PTR es:[edi],al
  41fc3d:	jbe    0x41fc4f
  41fc3f:	jo     0x41fcac
  41fc41:	sbb    DWORD PTR [edx],esi
  41fc43:	scas   al,BYTE PTR es:[edi]
  41fc44:	icebp  
  41fc45:	lds    esi,FWORD PTR [esi+0x2c]
  41fc48:	xchg   esi,eax
  41fc49:	mov    ebp,0x7f64a850
  41fc4e:	aaa    
  41fc4f:	out    0x67,al
  41fc51:	push   es
  41fc52:	into   
  41fc53:	bound  esi,QWORD PTR [edi+0x3cf8cde]
  41fc59:	fs sub ebp,ebp
  41fc5c:	out    0x6f,al
  41fc5e:	pop    ebx
  41fc5f:	out    dx,al
  41fc60:	pop    edx
  41fc61:	mov    cl,0xd2
  41fc63:	xchg   ebp,eax
  41fc64:	repz dec edi
  41fc66:	cld    
  41fc67:	xchg   edi,eax
  41fc68:	pop    esi
  41fc69:	mov    esp,0x2ff3440c
  41fc6e:	cli    
  41fc6f:	mul    bl
  41fc71:	fisubr DWORD PTR [edx+eax*1-0x51]
  41fc75:	mov    al,BYTE PTR [esi]
  41fc77:	(bad)  
  41fc78:	mov    edx,0xdec3051a
  41fc7d:	stos   BYTE PTR es:[edi],al
  41fc7e:	mov    bl,0xf1
  41fc80:	mov    ds,WORD PTR [eax+0x60]
  41fc83:	cmp    ebp,DWORD PTR [eax+eax*8]
  41fc86:	jge    0x41fd01
  41fc88:	sub    ch,BYTE PTR [ebx-0x6183b58f]
  41fc8e:	dec    edi
  41fc8f:	in     al,0xab
  41fc91:	fidivr DWORD PTR [esi+0x6f2d541c]
  41fc97:	or     BYTE PTR [eax+0x33],dh
  41fc9a:	lock fdivr st,st(6)
  41fc9d:	loopne 0x41fc7e
  41fc9f:	jmp    0xd9a4b118
  41fca4:	mov    bh,0x37
  41fca6:	outs   dx,BYTE PTR ds:[esi]
  41fca7:	jns    0x41fcf0
  41fca9:	ins    BYTE PTR es:[edi],dx
  41fcaa:	in     eax,0x33
  41fcac:	mov    DWORD PTR [ebx],edi
  41fcae:	ins    DWORD PTR es:[edi],dx
  41fcaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcb0:	and    ebx,ecx
  41fcb2:	mov    dh,0x25
  41fcb4:	and    DWORD PTR [eax+edi*4-0x5d],ebp
  41fcb8:	bound  edx,QWORD PTR [esi]
  41fcba:	mov    ebp,esp
  41fcbc:	dec    edi
  41fcbd:	and    bh,BYTE PTR [edx+0x74]
  41fcc0:	jno    0x41fcb8
  41fcc2:	dec    esi
  41fcc3:	call   0x2bcd9376
  41fcc8:	pop    es
  41fcc9:	in     al,dx
  41fcca:	xchg   edi,eax
  41fccb:	sbb    BYTE PTR [edi-0x68],0x39
  41fccf:	(bad)
  41fcd3:	jmp    0x607a:0xdd36b0de
  41fcda:	adc    BYTE PTR [ebx],0xdb
  41fcdd:	cmc    
  41fcde:	stos   DWORD PTR es:[edi],eax
  41fcdf:	pop    ebx
  41fce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fce1:	leave  
  41fce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fce3:	add    al,0xc6
  41fce5:	(bad)  
  41fce6:	int3   
  41fce7:	xor    BYTE PTR [ecx-0x7a61cd7],ah
  41fced:	sahf   
  41fcee:	je     0x41fd30
  41fcf0:	je     0x41fd4d
  41fcf2:	pop    eax
  41fcf3:	js     0x41fcb4
  41fcf5:	inc    ebp
  41fcf6:	mov    esi,0xd083d27b
  41fcfb:	dec    eax
  41fcfc:	adc    BYTE PTR ds:0x7fe6a234,bl
  41fd02:	lods   eax,DWORD PTR ds:[esi]
  41fd03:	xchg   edi,eax
  41fd04:	xor    dh,cl
  41fd06:	jne    0x41fd54
  41fd08:	outs   dx,DWORD PTR ds:[esi]
  41fd09:	into   
  41fd0a:	jmp    0x41fc94
  41fd0c:	mov    ds:0x8eda6dc9,al
  41fd11:	out    0x3d,al
  41fd13:	cmp    DWORD PTR [edi-0x10ed45b6],eax
  41fd19:	jge    0x41fce8
  41fd1b:	or     ecx,ecx
  41fd1d:	inc    eax
  41fd1e:	lock lea ebx,[ecx+0x31b32d84]
  41fd25:	mul    BYTE PTR [edi+0x50]
  41fd28:	je     0x41fd48
  41fd2a:	or     eax,0x1c858e60
  41fd2f:	jns    0x41fd3e
  41fd31:	inc    ebp
  41fd32:	ins    BYTE PTR es:[edi],dx
  41fd33:	out    0x2c,eax
  41fd35:	in     eax,dx
  41fd36:	jle    0x41fd98
  41fd38:	jo     0x41fd12
  41fd3a:	cmp    eax,0xb47f344e
  41fd3f:	clc    
  41fd40:	in     eax,dx
  41fd41:	pop    eax
  41fd42:	xchg   ecx,eax
  41fd43:	ss sub bl,0x12
  41fd47:	mov    BYTE PTR [edx],dl
  41fd49:	mov    WORD PTR [eax+0x1a],gs
  41fd4c:	jp     0x41fdc5
  41fd4e:	cmc    
  41fd4f:	jae    0x41fd1d
  41fd51:	sub    esp,DWORD PTR [ecx-0x7d4ee734]
  41fd57:	pop    edi
  41fd58:	pushf  
  41fd59:	fmulp  st(0),st
  41fd5b:	dec    ecx
  41fd5c:	cmp    ebx,edi
  41fd5e:	mov    ds:0xe2f68cfb,al
  41fd63:	enter  0xe164,0xb1
  41fd67:	mov    BYTE PTR [ecx-0x6d1eea4f],0xd8
  41fd6e:	mov    esi,0x9f7def99
  41fd73:	mov    ds:0x1209b5ca,eax
  41fd78:	add    al,0x42
  41fd7a:	lock call 0xcf8e297d
  41fd80:	mov    eax,ds:0x7252052a
  41fd85:	icebp  
  41fd86:	jmp    0x495:0xa6761e99
  41fd8d:	rcr    DWORD PTR [esi],cl
  41fd8f:	mov    al,0x9
  41fd91:	adc    edx,DWORD PTR fs:[ebp-0x790fcbdf]
  41fd98:	jecxz  0x41fd57
  41fd9a:	loop   0x41fdc0
  41fd9c:	shl    BYTE PTR [eax-0x60],0xae
  41fda0:	mov    bh,0x4
  41fda2:	fcmovnbe st,st(4)
  41fda4:	stos   DWORD PTR es:[edi],eax
  41fda5:	jae    0x41fd35
  41fda7:	xor    esp,DWORD PTR [edi+0x4e]
  41fdaa:	add    ecx,edx
  41fdac:	cld    
  41fdad:	scas   al,BYTE PTR es:[edi]
  41fdae:	xlat   BYTE PTR ds:[ebx]
  41fdaf:	push   edi
  41fdb0:	je     0x41fd3f
  41fdb2:	(bad)  
  41fdb3:	push   cs
  41fdb4:	enter  0x2fb4,0xa8
  41fdb8:	scas   eax,DWORD PTR es:[edi]
  41fdb9:	addr16 out 0x3d,al
  41fdbc:	mov    WORD PTR [esi-0x4ddab1fb],es
  41fdc2:	add    al,0x3a
  41fdc4:	test   BYTE PTR [esi+0x13],0x7e
  41fdc8:	adc    DWORD PTR [edi-0x1ac0a0f1],edx
  41fdce:	js     0x41fe09
  41fdd0:	hlt    
  41fdd1:	icebp  
  41fdd2:	push   es
  41fdd3:	or     eax,0x3df97aed
  41fdd8:	pop    ebp
  41fdd9:	or     ch,BYTE PTR [ebx-0x20]
  41fddc:	in     eax,0x4a
  41fdde:	icebp  
  41fddf:	test   BYTE PTR [ecx+ebx*2+0x1c76eca0],cl
  41fde6:	inc    ebp
  41fde7:	outs   dx,BYTE PTR ds:[esi]
  41fde8:	call   0x9151:0xc9ea1a6e
  41fdef:	rol    BYTE PTR [ebx],cl
  41fdf1:	or     eax,0x69435d10
  41fdf6:	adc    al,ch
  41fdf8:	bound  esi,QWORD PTR [edi+0x43]
  41fdfb:	int    0xf7
  41fdfd:	adc    bl,bl
  41fdff:	inc    ebp
  41fe00:	and    BYTE PTR [ebp+0x2062bc6e],ch
  41fe06:	inc    esp
  41fe07:	(bad)  
  41fe08:	xchg   esi,eax
  41fe09:	xchg   ebx,eax
  41fe0a:	fst    DWORD PTR [edi+0x75]
  41fe0d:	aaa    
  41fe0e:	push   0x4f
  41fe10:	ret    0x56a5
  41fe13:	into   
  41fe14:	loop   0x41fdca
  41fe16:	jb     0x41fe13
  41fe18:	and    eax,0x5d0a2ca6
  41fe1d:	dec    esp
  41fe1e:	addr16 test eax,edi
  41fe21:	or     eax,0x8d528b09
  41fe26:	ret    
  41fe27:	xor    al,0x14
  41fe29:	imul   esp,DWORD PTR [eax-0x44],0xefc9b46b
  41fe30:	out    0x7c,al
  41fe32:	pop    eax
  41fe33:	mov    ebx,0x9fe9ab44
  41fe38:	cmp    DWORD PTR [esi],0x4d
  41fe3b:	and    DWORD PTR [eax-0x4f8603bb],eax
  41fe41:	mov    ds:0x9788fb4,al
  41fe46:	rcr    BYTE PTR [esi],cl
  41fe48:	nop
  41fe49:	mov    ds:0x87a38c78,al
  41fe4e:	(bad)  
  41fe4f:	aam    0x7
  41fe51:	xchg   esp,eax
  41fe52:	push   ds
  41fe53:	xor    al,0xf6
  41fe55:	int3   
  41fe56:	and    DWORD PTR [eax-0x1852e4ac],esi
  41fe5c:	fwait
  41fe5d:	leave  
  41fe5e:	mov    ds:0x3f78acc6,eax
  41fe63:	test   BYTE PTR [ebp+0x8],dl
  41fe66:	push   esi
  41fe67:	dec    ecx
  41fe68:	aad    0xc
  41fe6a:	sub    esp,DWORD PTR [edx-0x5b]
  41fe6d:	sub    eax,0x21cc282c
  41fe72:	mov    eax,ds:0x3cb82f3d
  41fe77:	sbb    cl,dh
  41fe79:	sub    eax,0xbd3df08f
  41fe7e:	xor    al,0x61
  41fe80:	popf   
  41fe81:	cdq    
  41fe82:	cmp    al,0xc5
  41fe84:	sub    DWORD PTR [ebp+0x75],0xffffffcd
  41fe88:	in     al,dx
  41fe89:	pop    ss
  41fe8a:	push   edx
  41fe8b:	xor    ah,BYTE PTR [ebp+0x34868de]
  41fe91:	lods   eax,DWORD PTR ds:[esi]
  41fe92:	(bad)  
  41fe93:	(bad)  
  41fe94:	push   ss
  41fe95:	jmp    0x3c9880f9
  41fe9a:	mov    fs,WORD PTR [eax+ebp*4-0x4a]
  41fe9e:	jmp    0x41fe43
  41fea0:	xchg   edi,edi
  41fea2:	jmp    0xe5:0xac584866
  41fea9:	xchg   bh,al
  41feab:	and    dl,BYTE PTR [ebp+ecx*1+0x32]
  41feaf:	adc    BYTE PTR [edi+0x5b],ah
  41feb2:	daa    
  41feb3:	mov    ebp,0x4de6f4bd
  41feb8:	sbb    BYTE PTR [ecx-0x7b],bh
  41febb:	mov    esp,0x2adab056
  41fec0:	das    
  41fec1:	pop    ss
  41fec2:	mov    dh,BYTE PTR [ebx]
  41fec4:	mov    edx,0x8a8abc9f
  41fec9:	pop    ss
  41feca:	xchg   esp,eax
  41fecb:	pop    es
  41fecc:	xor    eax,0x1c790319
  41fed1:	dec    esi
  41fed2:	dec    bp
  41fed4:	retf   0x3136
  41fed7:	fwait
  41fed8:	mov    eax,ds:0xb9888ae
  41fedd:	cmp    al,0xc7
  41fedf:	lahf   
  41fee0:	cmp    al,0xa2
  41fee2:	jge    0x41feb5
  41fee4:	hlt    
  41fee5:	je     0x41fea2
  41fee7:	or     ah,ah
  41fee9:	dec    edi
  41feea:	xchg   edi,eax
  41feeb:	jmp    0x41fed0
  41feed:	loopne 0x41ff54
  41feef:	sahf   
  41fef0:	cmp    BYTE PTR [ecx+ecx*4],dh
  41fef3:	fimul  DWORD PTR [ebx+0x6b]
  41fef6:	cmp    eax,0xe637ebe7
  41fefb:	data16 xor BYTE PTR [ebp-0x31],ch
  41feff:	mov    ecx,?
  41ff01:	cwde   
  41ff02:	adc    al,0xb2
  41ff04:	push   ss
  41ff05:	mov    al,0xc5
  41ff07:	mov    al,ds:0x105f8f5c
  41ff0c:	or     DWORD PTR [edi+0x45],0x9ef3baee
  41ff13:	pop    esi
  41ff14:	xor    DWORD PTR [ecx-0x3c2c3310],0xffffffc7
  41ff1b:	nop
  41ff1c:	mov    ecx,0xa5fb67ee
  41ff21:	not    dl
  41ff23:	retf   0x91f0
  41ff26:	cmp    eax,0x176e92cb
  41ff2b:	je     0x41ff87
  41ff2d:	ret    0xcdb2
  41ff30:	test   al,0x17
  41ff32:	mov    eax,0xf8808086
  41ff37:	pop    esi
  41ff38:	out    0x84,eax
  41ff3a:	xchg   esp,eax
  41ff3b:	push   ss
  41ff3c:	adc    al,0x28
  41ff3e:	xor    ebx,ebp
  41ff40:	gs pop esi
  41ff42:	mov    edi,0x67ed9fe1
  41ff47:	popf   
  41ff48:	cmp    ah,BYTE PTR [ebp-0x19]
  41ff4b:	xchg   ecx,eax
  41ff4c:	mov    ecx,0x376bf1cc
  41ff51:	stos   DWORD PTR es:[edi],eax
  41ff52:	mov    ebx,0x3816ee5b
  41ff57:	(bad)  
  41ff58:	and    ch,BYTE PTR [eax]
  41ff5a:	cmp    BYTE PTR [ebp+edi*4+0x2e4cb1f9],cl
  41ff61:	mov    eax,ds:0x5b37c430
  41ff66:	xor    ebp,DWORD PTR [esi-0x44]
  41ff69:	mov    ecx,DWORD PTR [ebx*1+0x15c62252]
  41ff70:	lods   eax,DWORD PTR ds:[esi]
  41ff71:	push   es
  41ff72:	test   eax,0x69becc88
  41ff77:	or     BYTE PTR ds:0x5b64dbc7,bh
  41ff7d:	outs   dx,BYTE PTR ds:[esi]
  41ff7e:	push   ebx
  41ff7f:	int    0xbc
  41ff81:	cmp    BYTE PTR [edi+0x6f43756f],0x4e
  41ff88:	mov    eax,ds:0x765d50be
  41ff8d:	and    ebp,edx
  41ff8f:	mov    DWORD PTR [edi-0x6c],edi
  41ff92:	jmp    0x9708d68e
  41ff97:	mov    al,ds:0x1808e6f2
  41ff9c:	retf   
  41ff9d:	xchg   esi,eax
  41ff9e:	mov    cl,0x8d
  41ffa0:	je     0x41ff3b
  41ffa2:	loope  0x41ff94
  41ffa4:	add    bl,BYTE PTR [eax+0x43]
  41ffa7:	lods   al,BYTE PTR ds:[esi]
  41ffa8:	retf   0xfbbe
  41ffab:	mov    dl,0xec
  41ffad:	xchg   ecx,eax
  41ffae:	or     BYTE PTR [ebx+0x6b],0x97
  41ffb2:	mov    al,ds:0x8cc4aea5
  41ffb7:	add    ebx,DWORD PTR [edi]
  41ffb9:	adc    al,0x4d
  41ffbb:	fsubr  QWORD PTR [ebx-0x6d]
  41ffbe:	lock ins DWORD PTR es:[edi],dx
  41ffc0:	shl    DWORD PTR [ebp-0x21],0xd5
  41ffc4:	adc    al,0xb2
  41ffc6:	xor    bh,BYTE PTR [ecx+0x52408610]
  41ffcc:	sti    
  41ffcd:	jne    0x41ff4f
  41ffcf:	push   ds
  41ffd0:	call   0x8a9b0038
  41ffd5:	push   ebp
  41ffd6:	inc    ecx
  41ffd7:	push   eax
  41ffd8:	mov    eax,ds:0x4148643d
  41ffdd:	sbb    BYTE PTR [eax+eax*4+0x57],0xc5
  41ffe2:	sar    BYTE PTR [eax+eax*8-0x1a],cl
  41ffe6:	push   eax
  41ffe7:	adc    ebx,DWORD PTR [ebx+0x7dc5218a]
  41ffed:	mov    ds:0x2c7fe925,al
  41fff2:	sar    DWORD PTR [esi-0x2],0x6b
  41fff6:	inc    ecx
  41fff7:	mov    ebx,0xb44ffaf8
  41fffc:	lds    edi,FWORD PTR [ebx]
  41fffe:	mov    al,ds:0x21a66c01
  420003:	pop    ss
  420004:	jge    0x41ffbf
  420006:	mov    dl,0x42
  420008:	mov    al,0xea
  42000a:	xor    ebp,DWORD PTR [eax]
  42000c:	xor    al,0x8b
  42000e:	pushf  
  42000f:	mov    ebx,0x5c0b4b27
  420014:	sti    
  420015:	int3   
  420016:	dec    ebx
  420017:	ins    DWORD PTR es:[edi],dx
  420018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420019:	cld    
  42001a:	and    cl,BYTE PTR [eiz*1-0x5c4b3295]
  420021:	or     al,BYTE PTR [ebp-0x67]
  420024:	(bad)  
  420025:	adc    edi,DWORD PTR [ebx+0x2424aab6]
  42002b:	ds ss or esi,esi
  42002f:	mov    ah,0xc3
  420031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420032:	mov    edi,0x1805c2b1
  420037:	ins    DWORD PTR es:[edi],dx
  420038:	push   ebp
  420039:	jl     0x420060
  42003b:	leave  
  42003c:	cs mov bl,0x6b
  42003f:	push   edi
  420040:	cdq    
  420041:	daa    
  420042:	sub    BYTE PTR [esi+eax*2],bl
  420045:	jmp    0x72ceafc9
  42004a:	aad    0x58
  42004c:	mov    bh,0x7a
  42004e:	mov    ds:0x44e83ee0,eax
  420053:	xchg   esi,eax
  420054:	ins    BYTE PTR es:[edi],dx
  420055:	jmp    0x4200a2
  420057:	outs   dx,DWORD PTR ds:[esi]
  420058:	adc    esi,DWORD PTR [ebp-0x27b782d7]
  42005e:	in     eax,dx
  42005f:	in     al,dx
  420060:	daa    
  420061:	test   eax,0x9751eb35
  420066:	enter  0x2ccd,0x2b
  42006a:	xchg   BYTE PTR [ebx+0x36d6b14c],bl
  420070:	in     al,0x7a
  420072:	or     edx,eax
  420074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420075:	in     eax,0x2a
  420077:	retf   0xd82e
  42007a:	cld    
  42007b:	sub    cl,bl
  42007d:	push   ebp
  42007e:	xor    DWORD PTR [ebp+0x70],esi
  420081:	pop    ebp
  420082:	mov    dh,BYTE PTR [eax+eax*4-0x6c]
  420086:	out    dx,al
  420087:	dec    esp
  420088:	vpacksswb ymm1,ymm2,YMMWORD PTR [ebx-0x79]
  42008e:	js     0x420039
  420090:	scas   eax,DWORD PTR es:[edi]
  420091:	stos   BYTE PTR es:[edi],al
  420092:	cmp    DWORD PTR [ebx-0x74d7b532],ecx
  420098:	pop    esp
  420099:	ds in  al,0x48
  42009c:	(bad)  
  42009d:	imul   eax,eax,0x7f
  4200a0:	xor    BYTE PTR [eax],dh
  4200a2:	pusha  
  4200a3:	stc    
  4200a4:	adc    DWORD PTR [ebp+0x4e163165],edi
  4200aa:	jge    0x42004d
  4200ac:	pop    esi
  4200ad:	out    0x2c,al
  4200af:	popf   
  4200b0:	(bad)  
  4200b1:	repz cmc 
  4200b3:	inc    ecx
  4200b4:	out    dx,al
  4200b5:	scas   eax,DWORD PTR es:[edi]
  4200b6:	inc    esi
  4200b7:	scas   eax,DWORD PTR es:[edi]
  4200b8:	fisttp QWORD PTR [ecx-0x3a7615fc]
  4200be:	sub    al,0xde
  4200c0:	inc    esi
  4200c1:	jne    0x420093
  4200c3:	jmp    0x14e1f5d4
  4200c8:	or     BYTE PTR [ebp-0x6e],al
  4200cb:	push   ecx
  4200cc:	mov    bl,BYTE PTR [edx]
  4200ce:	adc    al,0xd3
  4200d0:	sbb    dh,cl
  4200d2:	or     edi,DWORD PTR [esi+0x21]
  4200d5:	add    ch,dh
  4200d7:	rcr    DWORD PTR [eax],cl
  4200d9:	jl     0x4200d2
  4200db:	daa    
  4200dc:	jecxz  0x4200be
  4200de:	das    
  4200df:	cmp    al,0x18
  4200e1:	mov    al,0x49
  4200e3:	lahf   
  4200e4:	popf   
  4200e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200e6:	push   ebx
  4200e7:	call   0x2c87:0x9342b6b5
  4200ee:	jle    0x4200fd
  4200f0:	lea    esi,[edi]
  4200f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200f3:	mov    dl,0x52
  4200f5:	aam    0xf8
  4200f7:	out    dx,eax
  4200f8:	outs   dx,BYTE PTR ds:[esi]
  4200f9:	pop    ebx
  4200fa:	ror    DWORD PTR [ebx],1
  4200fc:	popa   
  4200fd:	es push es
  4200ff:	das    
  420100:	xor    DWORD PTR [edx-0x5fd8e6a3],esp
  420106:	ins    BYTE PTR es:[edi],dx
  420107:	frstor [edi]
  420109:	sbb    BYTE PTR [ebp-0x39],dh
  42010c:	pushf  
  42010d:	dec    edi
  42010e:	sbb    eax,0xe1bf7465
  420113:	push   0x50
  420115:	cmc    
  420116:	sahf   
  420117:	and    BYTE PTR [esi+ecx*2],cl
  42011a:	sub    cl,BYTE PTR [edi-0x18]
  42011d:	clc    
  42011e:	or     eax,0x79a0f85b
  420123:	les    eax,FWORD PTR [ebp-0x62bd9fc4]
  420129:	jp     0x4201a8
  42012b:	test   bh,al
  42012d:	inc    ebp
  42012e:	clc    
  42012f:	out    0xdf,eax
  420131:	fs sbb eax,0x420d376f
  420137:	shr    BYTE PTR [edx-0x4e],cl
  42013a:	div    DWORD PTR [ebx-0x24648365]
  420140:	or     DWORD PTR [eax],esp
  420142:	icebp  
  420143:	mov    ecx,0x577eba8f
  420148:	shr    DWORD PTR [esi],1
  42014a:	xor    DWORD PTR [edi-0x60],0x7ea94e8b
  420151:	int3   
  420152:	std    
  420153:	dec    BYTE PTR [ebp+0x35]
  420156:	out    0x62,al
  420158:	test   al,0xdd
  42015a:	rol    BYTE PTR [eax+0x239873e6],1
  420160:	test   ebx,edi
  420162:	adc    al,0xd9
  420164:	packuswb mm7,QWORD PTR [edx]
  420167:	dec    eax
  420168:	stos   DWORD PTR es:[edi],eax
  420169:	sbb    al,0x58
  42016b:	nop
  42016c:	shr    DWORD PTR [edx+0x4dd03611],0x68
  420173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420174:	enter  0x4697,0x32
  420178:	sub    BYTE PTR [edi-0x71],0xbf
  42017c:	fnstcw WORD PTR [edx]
  42017e:	cs push ecx
  420180:	das    
  420181:	fdivr  DWORD PTR [eax-0x4b]
  420184:	pop    ss
  420185:	mov    al,0x95
  420187:	adc    eax,0xab9d096d
  42018c:	test   DWORD PTR [ebp-0x3e],0x157cb751
  420193:	popf   
  420194:	sbb    al,0x48
  420196:	aam    0xbf
  420198:	popf   
  420199:	add    BYTE PTR [edx-0x77],ch
  42019c:	jmp    0x2cff68a2
  4201a1:	popf   
  4201a2:	hlt    
  4201a3:	or     esp,esp
  4201a5:	mov    cl,0x8b
  4201a7:	sbb    eax,0x35a6c4b6
  4201ac:	lds    ebp,FWORD PTR [ebp-0x6b5c0ff0]
  4201b2:	ret    0x189
  4201b5:	test   al,0xbb
  4201b7:	push   ds
  4201b8:	inc    al
  4201ba:	imul   ebx,edi,0xffffff8b
  4201bd:	mov    ah,0xee
  4201bf:	(bad)  
  4201c0:	into   
  4201c1:	and    ch,ch
  4201c3:	jnp    0x42023a
  4201c5:	push   ecx
  4201c6:	dec    esi
  4201c7:	push   esp
  4201c8:	push   ss
  4201c9:	jnp    0x420163
  4201cb:	lea    ebx,[esi+eiz*2+0x15d9c804]
  4201d2:	outs   dx,BYTE PTR ds:[esi]
  4201d3:	inc    eax
  4201d4:	stos   BYTE PTR es:[edi],al
  4201d5:	cld    
  4201d6:	sbb    eax,DWORD PTR [ebx+eax*2+0x4ad14ec2]
  4201dd:	jl     0x4201a2
  4201df:	adc    DWORD PTR [eax-0x7],edx
  4201e2:	fild   DWORD PTR [edi-0x70dfc850]
  4201e8:	mov    esp,0xff26626b
  4201ed:	push   esp
  4201ee:	icebp  
  4201ef:	rcl    DWORD PTR [edx-0x29],0x97
  4201f3:	repnz (bad) 
  4201f5:	ds retf 
  4201f7:	or     eax,0xa0f46ba
  4201fc:	imul   DWORD PTR [ecx]
  4201fe:	xchg   esi,eax
  4201ff:	mov    al,0x69
  420201:	ss aaa 
  420203:	das    
  420204:	fisubr WORD PTR cs:[ebp-0x744dfd06]
  42020b:	loop   0x420190
  42020d:	xchg   ebp,eax
  42020e:	int3   
  42020f:	inc    edx
  420210:	xchg   esp,eax
  420211:	jg     0x4201a8
  420213:	pop    ecx
  420214:	sbb    esp,ecx
  420216:	sub    al,0x89
  420218:	stc    
  420219:	mov    dl,0xef
  42021b:	jb     0x420289
  42021d:	push   ebx
  42021e:	test   al,0x4e
  420220:	test   BYTE PTR [ebx+0x50],ah
  420223:	adc    BYTE PTR [edx+0x55aa8181],dh
  420229:	ror    DWORD PTR [ebp+0x6f],cl
  42022c:	ins    BYTE PTR es:[edi],dx
  42022d:	pop    DWORD PTR [esi+eiz*1]
  420230:	nop
  420231:	cmp    al,0x9a
  420233:	pop    ebp
  420234:	inc    edi
  420235:	in     eax,0x9e
  420237:	iret   
  420238:	aam    0x2a
  42023a:	xor    al,BYTE PTR [edx-0x6b]
  42023d:	enter  0xe7a9,0xfb
  420241:	xchg   esi,eax
  420242:	xchg   BYTE PTR ds:0x35f623fa,al
  420248:	cmp    al,0x82
  42024a:	xlat   BYTE PTR ds:[ebx]
  42024b:	sub    ch,ch
  42024d:	mov    ch,0x62
  42024f:	test   al,0x78
  420251:	nop
  420252:	shl    BYTE PTR [eax+0x8],0x2e
  420256:	push   edx
  420257:	pop    ebp
  420258:	js     0x42024e
  42025a:	dec    edx
  42025b:	mov    ebx,DWORD PTR [edi+0x4398a717]
  420261:	dec    eax
  420262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420263:	out    dx,eax
  420264:	fsub   st(6),st
  420266:	mov    ebp,0xbc82a8e9
  42026b:	ss jmp 0x420251
  42026e:	push   edx
  42026f:	cmp    al,BYTE PTR [ecx+0x7f5f1b08]
  420275:	std    
  420276:	adc    eax,0x9eecfbcb
  42027b:	sti    
  42027c:	out    0xd1,eax
  42027e:	mov    eax,ds:0xab504de2
  420283:	dec    eax
  420284:	mul    BYTE PTR [edx+0x4d2080f8]
  42028a:	cmp    ebx,DWORD PTR ds:0xe4efe1dc
  420290:	sti    
  420291:	call   0xaffd6aa2
  420296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420297:	clc    
  420298:	or     al,0x34
  42029a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42029b:	call   0xa70a89cb
  4202a0:	sub    al,0xc9
  4202a2:	aam    0x27
  4202a4:	dec    eax
  4202a5:	jp     0x4202e5
  4202a7:	fisubr WORD PTR es:[edx]
  4202aa:	xor    DWORD PTR [edi+0x35fb7f64],0x4addc47b
  4202b4:	loop   0x420332
  4202b6:	jl     0x420297
  4202b8:	out    0x45,eax
  4202ba:	imul   edi,DWORD PTR [ebx-0x69],0x96ef01
  4202c1:	mov    ebx,0x4b0cbe66
  4202c6:	sbb    ah,al
  4202c8:	out    0xa5,al
  4202ca:	adc    DWORD PTR [edi],edx
  4202cc:	mov    ecx,DWORD PTR [esi-0x2a]
  4202cf:	mov    cl,0xb3
  4202d1:	xor    BYTE PTR [ebx-0x38],bh
  4202d4:	dec    edx
  4202d5:	fwait
  4202d6:	addr16 inc ebp
  4202d8:	and    al,0xf0
  4202da:	not    BYTE PTR [ebp+0x29]
  4202dd:	lock jno 0x420314
  4202e0:	fisub  DWORD PTR [ecx]
  4202e2:	shl    DWORD PTR [ebp-0x1a],0xb6
  4202e6:	or     eax,0x429faa74
  4202eb:	mov    cl,0xe2
  4202ed:	ins    BYTE PTR es:[edi],dx
  4202ee:	sbb    eax,0xd9402ec0
  4202f3:	adc    bl,al
  4202f5:	mov    dl,0x3d
  4202f7:	jns    0x4202ec
  4202f9:	sub    bh,BYTE PTR [esi+0x506d6b7a]
  4202ff:	jno    0x4202af
  420301:	into   
  420302:	jne    0x42033c
  420304:	and    BYTE PTR [eax-0x71],ch
  420307:	aaa    
  420308:	sub    al,0x0
  42030a:	pop    ecx
  42030b:	sbb    edx,DWORD PTR [edx-0x15]
  42030e:	adc    DWORD PTR ds:0xa9a77987,0xffffff95
  420315:	fmul   st(6),st
  420317:	lahf   
  420318:	jnp    0x420300
  42031a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42031b:	pop    ds
  42031c:	clc    
  42031d:	jae    0x420368
  42031f:	push   esi
  420320:	in     eax,0xb8
  420322:	cmp    eax,eax
  420324:	iret   
  420325:	fs jb  0x420342
  420328:	icebp  
  420329:	cmp    cl,BYTE PTR [eax-0x36759e11]
  42032f:	cdq    
  420330:	inc    eax
  420331:	push   esi
  420332:	(bad)  
  420333:	mov    ah,0xd3
  420335:	pop    es
  420336:	call   DWORD PTR [ebx]
  420338:	adc    eax,0xca35f5ca
  42033d:	enter  0xfb69,0xb0
  420341:	jns    0x420349
  420343:	(bad)  [edi+0x54]
  420346:	jmp    0x6353:0x538a2afa
  42034d:	mov    ds:0x5e64e840,eax
  420352:	mov    edi,DWORD PTR [ebx-0xa7addde]
  420358:	(bad)  
  420359:	xlat   BYTE PTR ds:[ebx]
  42035a:	xchg   DWORD PTR [edx-0x43],ecx
  42035d:	mov    bl,0x5c
  42035f:	and    BYTE PTR [ebx-0x44],cl
  420362:	repnz fdiv DWORD PTR [eax]
  420365:	ret    
  420366:	dec    esi
  420367:	push   0xffffff9c
  420369:	test   bl,0x85
  42036c:	repnz cli 
  42036e:	test   al,0xc8
  420370:	and    DWORD PTR [esp+ecx*4],ebp
  420373:	sbb    ah,BYTE PTR [esi-0xc]
  420376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420377:	ret    0x6817
  42037a:	rol    edx,0xc3
  42037d:	std    
  42037e:	add    eax,0x8b7c9238
  420383:	aam    0x25
  420385:	pop    ebp
  420386:	fldl2e 
  420388:	ret    
  420389:	adc    DWORD PTR [edi],esi
  42038b:	mov    edx,ebp
  42038d:	sbb    ebx,0x108edb4d
  420393:	or     eax,0xffffff82
  420396:	pop    ecx
  420397:	aas    
  420398:	sahf   
  420399:	jp     0x420409
  42039b:	aas    
  42039c:	popa   
  42039d:	xor    BYTE PTR [edx+0x59db7e77],ah
  4203a3:	aad    0x1d
  4203a5:	push   ebx
  4203a6:	rol    cl,1
  4203a8:	stos   BYTE PTR es:[edi],al
  4203a9:	lds    ebx,FWORD PTR [ebx-0x23]
  4203ac:	and    al,0x56
  4203ae:	dec    esp
  4203af:	test   DWORD PTR [eax],ecx
  4203b1:	dec    ebp
  4203b2:	or     ebp,esp
  4203b4:	movups xmm3,xmm1
  4203b7:	sar    BYTE PTR [esi-0x7d],0x63
  4203bb:	jle    0x4203d6
  4203bd:	cmp    bl,BYTE PTR [ecx+0x60d97c32]
  4203c3:	int    0xe8
  4203c5:	jb     0x420387
  4203c7:	add    BYTE PTR [esi],0xff
  4203ca:	std    
  4203cb:	sar    BYTE PTR [edi],0x90
  4203ce:	sub    al,0x80
  4203d0:	cmc    
  4203d1:	mov    ecx,0xf65d2c1a
  4203d6:	outs   dx,DWORD PTR ds:[esi]
  4203d7:	(bad)
  4203da:	pop    ebx
  4203db:	jp     0x420446
  4203dd:	adc    BYTE PTR [eax],al
  4203df:	stc    
  4203e0:	out    dx,eax
  4203e1:	aam    0x9a
  4203e3:	lock int 0x70
  4203e6:	jmp    0x4203a6
  4203e8:	jnp    0x420380
  4203ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203eb:	adc    DWORD PTR [ebp-0x65],esi
  4203ee:	add    DWORD PTR [eax],edx
  4203f0:	pmulhw mm5,QWORD PTR [ebx-0x43658f1a]
  4203f7:	adc    eax,0xe96191aa
  4203fc:	pop    es
  4203fd:	and    edi,DWORD PTR [esi]
  4203ff:	not    DWORD PTR [edx+0x34]
  420402:	ins    DWORD PTR es:[di],dx
  420404:	loope  0x4203fe
  420406:	adc    BYTE PTR [edx-0x2a1018bd],0x12
  42040d:	pushf  
  42040e:	xchg   dh,ch
  420410:	icebp  
  420411:	push   ebp
  420412:	sbb    DWORD PTR [edx-0x57],ecx
  420415:	jmp    0x9633:0x404b75e6
  42041c:	out    dx,al
  42041d:	lea    eax,[esi]
  42041f:	inc    eax
  420420:	inc    eax
  420421:	in     eax,dx
  420422:	(bad)  
  420423:	cld    
  420424:	and    esp,DWORD PTR [edi-0x1292dbc]
  42042a:	out    0xf8,eax
  42042c:	in     eax,0x4c
  42042e:	popa   
  42042f:	cwde   
  420430:	xor    al,0x70
  420432:	outs   dx,DWORD PTR ds:[esi]
  420433:	outs   dx,DWORD PTR ds:[esi]
  420434:	or     al,0xbf
  420436:	dec    ebx
  420437:	neg    DWORD PTR [edx]
  420439:	sti    
  42043a:	shl    bh,0x73
  42043d:	push   ds
  42043e:	mov    cl,0xf4
  420440:	ins    DWORD PTR es:[edi],dx
  420441:	jo     0x420435
  420443:	push   edx
  420444:	mov    bh,0xbf
  420446:	mov    eax,0xdf1200bc
  42044b:	rcr    edi,cl
  42044d:	xchg   ebx,eax
  42044e:	mov    ebp,0x358a3b1a
  420453:	push   esi
  420454:	sahf   
  420455:	jle    0x4203f0
  420457:	cwde   
  420458:	sub    BYTE PTR [edi+edx*4-0x1d],ch
  42045c:	lock or eax,0xce0ee80f
  420462:	mov    ah,0x74
  420464:	repz js 0x4204c3
  420467:	bound  ebx,QWORD PTR [esi+0x5d]
  42046a:	cmp    bh,bl
  42046c:	dec    ebp
  42046d:	cwde   
  42046e:	mov    ebp,0x901e14d9
  420473:	xchg   ebp,eax
  420474:	sub    eax,0xe7a76c33
  420479:	repz push ds
  42047b:	std    
  42047c:	dec    esp
  42047d:	test   al,0x4f
  42047f:	pop    ds
  420480:	pop    edx
  420481:	sub    al,0xb6
  420483:	jb     0x420418
  420485:	and    eax,0x8e64224c
  42048a:	dec    esp
  42048b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42048c:	cmp    DWORD PTR [eax+0x586de796],edx
  420492:	jmp    0xd26b:0x16bf81ce
  420499:	pop    ebx
  42049a:	dec    ebp
  42049b:	stos   DWORD PTR es:[edi],eax
  42049c:	call   0xf6f6f1ec
  4204a1:	fwait
  4204a2:	sub    BYTE PTR [ebp-0x1f],bh
  4204a5:	mov    al,0x70
  4204a7:	xor    edx,DWORD PTR [edi+eiz*1-0x55e781c8]
  4204ae:	push   edx
  4204af:	test   al,0xca
  4204b1:	mov    dh,0x70
  4204b3:	sbb    BYTE PTR [ecx-0x4d9962c],bh
  4204b9:	rcr    DWORD PTR [ebx+0xe],cl
  4204bc:	arpl   WORD PTR [ecx],bx
  4204be:	aam    0xe8
  4204c0:	jae    0x4204d3
  4204c2:	out    0x54,al
  4204c4:	(bad)  
  4204c5:	ret    
  4204c6:	ret    
  4204c7:	mov    edx,0xd99a3b9
  4204cc:	adc    dh,cl
  4204ce:	mov    edi,0xe6aea40f
  4204d3:	adc    eax,0xff159e14
  4204d8:	sar    ebp,0xe8
  4204db:	mov    edi,0x3ca0beb0
  4204e0:	into   
  4204e1:	(bad)  
  4204e2:	mov    al,0x5a
  4204e4:	dec    ecx
  4204e5:	jge    0x4204f9
  4204e7:	int    0xf6
  4204e9:	xchg   BYTE PTR [ebx],dh
  4204eb:	inc    esi
  4204ec:	cmp    ch,ah
  4204ee:	mov    esi,0x4f0ed083
  4204f3:	and    BYTE PTR [esi],0x20
  4204f6:	mov    ch,0xdc
  4204f8:	xchg   DWORD PTR ds:0x98db8242,ecx
  4204fe:	imul   edx,ecx,0x27193462
  420504:	xchg   edi,eax
  420505:	ficom  WORD PTR [eax]
  420507:	aaa    
  420508:	jne    0x4204fa
  42050a:	std    
  42050b:	(bad)  
  42050c:	cmp    bl,BYTE PTR [edx-0x63d1f6f0]
  420512:	pop    esp
  420513:	rol    eax,0x6a
  420516:	jne    0x420594
  420518:	jo     0x4204db
  42051a:	xor    DWORD PTR [edi+0x76],edx
  42051d:	cmp    BYTE PTR [ebp+0x2b],al
  420520:	cmp    al,0x84
  420522:	pop    esp
  420523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420524:	cmp    DWORD PTR [eax+ecx*4-0x19ed473c],ebx
  42052b:	hlt    
  42052c:	sbb    dl,BYTE PTR [ecx+0x2b791a61]
  420532:	scas   al,BYTE PTR es:[edi]
  420533:	jge    0x4205b3
  420535:	add    ebp,DWORD PTR [ebx+edi*2+0x5143a16e]
  42053c:	xor    ch,BYTE PTR [eax+eax*4-0xb]
  420540:	mov    ds:0x5e69bd65,eax
  420545:	push   es
  420546:	ret    0x2212
  420549:	pop    ebx
  42054a:	test   DWORD PTR [edx],ebp
  42054c:	adc    eax,0x5b0c9b8a
  420551:	jmp    0x4076:0xa434d884
  420558:	fimul  WORD PTR [ebx]
  42055a:	ins    BYTE PTR es:[edi],dx
  42055b:	rcl    DWORD PTR [ebx],1
  42055d:	pop    eax
  42055e:	mov    ebp,0xef8c05fc
  420563:	jne    0x42057d
  420565:	and    BYTE PTR [ebp+esi*8-0x463a9ea2],bh
  42056c:	sub    esp,DWORD PTR [ebx]
  42056e:	mov    ebp,0xd90b17c9
  420573:	loopne 0x420507
  420575:	(bad)  
  420576:	or     eax,0x9dd9b130
  42057b:	popa   
  42057c:	out    dx,al
  42057d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42057e:	xchg   DWORD PTR [ecx],ebx
  420580:	scas   al,BYTE PTR es:[edi]
  420581:	retfw  0x6d0f
  420585:	add    ecx,edx
  420587:	cmp    esp,eax
  420589:	push   0xffffff82
  42058b:	xor    eax,0xeb4159c
  420590:	mov    eax,0x670cba65
  420595:	mov    eax,ds:0x7d1bdafa
  42059a:	gs jne 0x420602
  42059d:	xchg   ebx,eax
  42059e:	popa   
  42059f:	stos   BYTE PTR es:[edi],al
  4205a0:	jp     0x420593
  4205a2:	(bad)  
  4205a3:	sbb    eax,DWORD PTR [eax]
  4205a5:	and    BYTE PTR [ebx-0x50],dl
  4205a8:	xor    DWORD PTR [eax-0x459aae9a],edi
  4205ae:	je     0x420581
  4205b0:	and    dl,BYTE PTR [edx-0x1c9a4241]
  4205b6:	mov    edx,0x2e0d423c
  4205bb:	pop    ebp
  4205bc:	pop    bx
  4205be:	jmp    0xb2b2:0x319a6b8d
  4205c5:	xchg   BYTE PTR [ebx+ecx*2+0x5e],ch
  4205c9:	inc    ecx
  4205ca:	xchg   eax,ecx
  4205cc:	into   
  4205cd:	or     al,0xda
  4205cf:	cwde   
  4205d0:	cmp    BYTE PTR [edi-0x40],bh
  4205d3:	mov    ecx,0xb0aff518
  4205d8:	inc    edx
  4205d9:	sbb    ah,dh
  4205db:	cdq    
  4205dc:	mov    bl,0xba
  4205de:	es cmp bl,bl
  4205e1:	je     0x420605
  4205e3:	dec    eax
  4205e4:	in     al,0xbe
  4205e6:	or     al,0x39
  4205e8:	push   ebx
  4205e9:	outs   dx,DWORD PTR ds:[esi]
  4205ea:	mov    esp,0x32b3afc1
  4205ef:	and    ah,BYTE PTR [esi-0x10e1efc1]
  4205f5:	(bad)  
  4205f6:	(bad)  
  4205f7:	clc    
  4205f8:	ja     0x4205e9
  4205fa:	mov    WORD PTR [eax+0x6c1e578c],?
  420600:	and    eax,0xe81e1514
  420605:	test   BYTE PTR [ebx+edx*1-0x63],al
  420609:	shr    BYTE PTR [edi],1
  42060b:	mov    ecx,esi
  42060d:	jns    0x420680
  42060f:	cmp    eax,0x8ae45c79
  420614:	leave  
  420615:	rol    BYTE PTR [edi],cl
  420617:	mov    DWORD PTR [edi+0x1fd06e7f],eax
  42061d:	pop    eax
  42061e:	test   DWORD PTR [esp-0x3893a459],edi
  420625:	dec    eax
  420627:	push   esi
  420628:	or     al,0x8b
  42062a:	xor    eax,0xb8e02599
  42062f:	dec    edi
  420630:	jg     0x420661
  420632:	std    
  420633:	scas   eax,DWORD PTR es:[edi]
  420634:	enter  0xcbdc,0x9a
  420638:	add    bl,BYTE PTR [ecx]
  42063a:	dec    esi
  42063b:	scas   eax,DWORD PTR es:[edi]
  42063c:	test   DWORD PTR [eax],ebp
  42063e:	outs   dx,BYTE PTR ds:[esi]
  42063f:	push   es
  420640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420641:	cmc    
  420642:	add    bh,BYTE PTR [ebp+0x7e84764]
  420648:	popa   
  420649:	test   al,0xd2
  42064b:	adc    DWORD PTR [edx-0x6ce1d8af],0x3d07c439
  420655:	inc    ecx
  420656:	aad    0xdb
  420658:	mov    bl,0x71
  42065a:	jmp    0x420676
  42065c:	mov    ecx,0xac38edc6
  420661:	xor    eax,0x5e74fdd1
  420666:	(bad)  
  420668:	xor    al,0x49
  42066a:	addr16 popa 
  42066c:	mov    ds:0xab1009fc,eax
  420671:	inc    ecx
  420672:	sbb    eax,0xa9fd9467
  420677:	adc    ah,al
  420679:	xor    BYTE PTR [edx-0x30],ch
  42067c:	adc    DWORD PTR [esi],ebx
  42067e:	adc    eax,0xadc51bc7
  420683:	xor    DWORD PTR [ebp+0x2ee4b5ce],edx
  420689:	cmc    
  42068a:	cwde   
  42068b:	pop    edi
  42068c:	adc    al,0x21
  42068e:	xchg   edx,eax
  42068f:	dec    esi
  420690:	dec    edi
  420691:	or     DWORD PTR [edi],edx
  420693:	cwde   
  420694:	ins    DWORD PTR es:[edi],dx
  420695:	dec    esp
  420696:	in     eax,dx
  420697:	retf   0x7cd
  42069a:	mov    ah,0xf9
  42069c:	xor    ah,BYTE PTR [ebp+0x1a]
  42069f:	test   al,0x56
  4206a1:	stos   BYTE PTR es:[edi],al
  4206a2:	cwde   
  4206a3:	xor    BYTE PTR [eax-0x53],dl
  4206a6:	rcr    BYTE PTR [eax-0x4f],0x4c
  4206aa:	mov    al,0x10
  4206ac:	les    esi,FWORD PTR [ebx]
  4206ae:	jge    0x42068e
  4206b0:	xor    ebx,0x58
  4206b3:	in     eax,dx
  4206b4:	xor    bh,dh
  4206b6:	cli    
  4206b7:	add    al,ah
  4206b9:	daa    
  4206ba:	xchg   esi,eax
  4206bb:	std    
  4206bc:	ins    DWORD PTR es:[edi],dx
  4206bd:	jg     0x4206cd
  4206bf:	fisubr DWORD PTR [edi+ebx*1]
  4206c2:	fidiv  WORD PTR [edx-0x2121fca0]
  4206c8:	std    
  4206c9:	sbb    BYTE PTR [edi+ecx*1+0x7f],ah
  4206cd:	mov    dh,0x6f
  4206cf:	pop    ecx
  4206d0:	test   eax,0x34416c72
  4206d5:	aad    0x1c
  4206d7:	jl     0x42066d
  4206d9:	fs rcl esp,1
  4206dc:	jnp    0x42068a
  4206de:	lahf   
  4206df:	retf   
  4206e0:	retf   
  4206e1:	popa   
  4206e2:	mov    eax,es
  4206e4:	in     al,dx
  4206e5:	inc    edx
  4206e6:	(bad)  
  4206e7:	push   ebx
  4206e8:	das    
  4206e9:	call   0x164c086c
  4206ee:	(bad)  
  4206f0:	fisub  DWORD PTR [edi+0x1eaaf82c]
  4206f6:	into   
  4206f7:	xchg   BYTE PTR [ebx+edx*2-0x3e303f98],cl
  4206fe:	imul   esi,DWORD PTR [eax-0x11],0x52b719f7
  420705:	xor    edi,ebp
  420707:	leave  
  420708:	or     al,BYTE PTR [ebx-0x7f]
  42070b:	jne    0x4206a4
  42070d:	rcr    BYTE PTR [ebp+0x5a],1
  420710:	sbb    al,0xb1
  420712:	dec    ebp
  420713:	add    edx,esi
  420715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420716:	sbb    al,0x1a
  420718:	xor    DWORD PTR [esi+eiz*8-0x43],ebx
  42071c:	stos   DWORD PTR es:[edi],eax
  42071d:	jmp    0x8b9a1c32
  420722:	jmp    0x42076a
  420724:	sub    al,0xbe
  420726:	jp     0x4206d9
  420728:	pop    ds
  420729:	pop    eax
  42072a:	push   ebp
  42072b:	add    BYTE PTR [esp+ebx*2-0x30],bh
  42072f:	pop    esi
  420730:	xchg   edi,eax
  420731:	sbb    edx,ebp
  420733:	sub    eax,0x62374b3d
  420738:	add    eax,0x515e7bb7
  42073d:	stos   BYTE PTR es:[edi],al
  42073e:	add    DWORD PTR [edx-0x15],esp
  420741:	jp     0x420721
  420743:	add    edx,DWORD PTR [ebx+ebp*4]
  420746:	xchg   ecx,eax
  420747:	sub    eax,0x6b5d4d98
  42074c:	mov    al,0xb
  42074e:	ret    0x68f1
  420751:	enter  0xcb3c,0x72
  420755:	les    ebx,FWORD PTR [esi+0x33]
  420758:	pop    ss
  420759:	outs   dx,DWORD PTR ds:[esi]
  42075a:	(bad)  
  42075b:	(bad)  
  42075c:	jl     0x4207cb
  42075e:	icebp  
  42075f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420760:	cwde   
  420761:	mov    ebp,0xf184077a
  420766:	stos   DWORD PTR es:[edi],eax
  420767:	push   ebp
  420768:	adc    DWORD PTR [esi+0x5278cc38],edx
  42076e:	not    BYTE PTR [edx+0x73]
  420771:	push   ss
  420772:	call   0x559e:0xabe91c02
  420779:	sub    eax,ecx
  42077b:	test   al,0xa0
  42077d:	in     al,0x39
  42077f:	out    dx,eax
  420780:	cdq    
  420781:	inc    ebx
  420782:	mov    bh,0x79
  420784:	cs call 0x5ac:0x3ee64aa4
  42078c:	xchg   edi,eax
  42078d:	add    esp,DWORD PTR [ebp-0x40]
  420790:	and    DWORD PTR [eax],esp
  420792:	ficomp DWORD PTR [edx+ecx*1]
  420795:	fiadd  DWORD PTR [eax]
  420797:	sti    
  420798:	leave  
  420799:	dec    edx
  42079a:	jns    0x4207fb
  42079c:	ds out 0x12,al
  42079f:	sub    esp,esi
  4207a1:	(bad)  
  4207a2:	(bad)  
  4207a3:	scas   eax,DWORD PTR es:[edi]
  4207a4:	xchg   ecx,eax
  4207a5:	mov    DWORD PTR [eax+0x3e],esi
  4207a8:	loop   0x42073a
  4207aa:	repnz xor eax,DWORD PTR [esi+0x63]
  4207ae:	push   ss
  4207af:	mov    ds:0x16f87833,eax
  4207b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207b6:	inc    cl
  4207b8:	jb     0x42080d
  4207ba:	cmp    al,bh
  4207bc:	mov    ch,0xac
  4207be:	jne    0x42080a
  4207c0:	fbstp  TBYTE PTR [ebp+0xe3e7739]
  4207c6:	(bad)  
  4207c8:	out    dx,al
  4207c9:	xchg   edi,eax
  4207ca:	sub    eax,0xc268a28c
  4207cf:	or     al,0x4b
  4207d1:	jle    0x4207f2
  4207d3:	cs (bad) 
  4207d5:	hlt    
  4207d6:	aad    0x49
  4207d8:	sar    BYTE PTR [ecx],cl
  4207da:	xor    DWORD PTR [eax-0x7e],eax
  4207dd:	data16 scas al,BYTE PTR es:[edi]
  4207df:	mov    eax,DWORD PTR [edi]
  4207e1:	push   ecx
  4207e2:	jne    0x420833
  4207e4:	outs   dx,DWORD PTR ds:[esi]
  4207e5:	push   esp
  4207e6:	mov    ds:0x454460d7,eax
  4207eb:	sbb    edi,edx
  4207ed:	jo     0x420858
  4207ef:	push   ss
  4207f0:	mov    edx,0xf8fc7809
  4207f5:	sub    al,0x80
  4207f7:	jb     0x42080e
  4207f9:	repnz icebp 
  4207fb:	jp     0x4207fa
  4207fd:	dec    eax
  4207fe:	loop   0x420827
  420800:	int3   
  420801:	xor    ecx,DWORD PTR [ebp+0x3491ea20]
  420807:	ret    
  420808:	nop
  420809:	sbb    al,0x25
  42080b:	loope  0x42088a
  42080d:	retf   
  42080e:	sub    ecx,DWORD PTR [ecx]
  420810:	or     al,0x1c
  420812:	shr    ecx,1
  420814:	(bad)  
  420816:	xor    esi,DWORD PTR [ecx-0x7f0ddb22]
  42081c:	loope  0x42081d
  42081e:	cdq    
  42081f:	mov    dh,0x6c
  420821:	push   ecx
  420822:	xchg   edx,eax
  420823:	pusha  
  420824:	push   esi
  420825:	das    
  420826:	jae    0x420818
  420828:	iret   
  420829:	adc    DWORD PTR ds:0x4c6d3d84,esp
  42082f:	ds and bh,dh
  420832:	jmp    0x42082b
  420834:	push   esi
  420835:	inc    edi
  420836:	mov    dh,0xa4
  420838:	int3   
  420839:	cmp    eax,0x990b63c9
  42083e:	dec    ecx
  42083f:	and    ch,BYTE PTR [ebx+0x54]
  420842:	push   cs
  420843:	fwait
  420844:	sub    ecx,esp
  420846:	jnp    0x42089f
  420848:	jmp    0x4207e8
  42084a:	leave  
  42084b:	fbld   TBYTE PTR [ebx+0x61f85648]
  420851:	pop    eax
  420852:	int    0xd9
  420854:	out    dx,al
  420855:	leave  
  420856:	into   
  420857:	pushf  
  420858:	fistp  DWORD PTR [edx+0x7f]
  42085b:	push   es
  42085c:	dec    esp
  42085d:	xor    dh,ch
  42085f:	and    ah,BYTE PTR [ebx]
  420861:	xchg   ecx,eax
  420862:	mov    ecx,0xd4a33810
  420867:	imul   esi,DWORD PTR [eax-0x47bf0308],0xffffffe3
  42086e:	xor    ch,BYTE PTR [eax-0x6f20f5a9]
  420874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420875:	stos   DWORD PTR es:[edi],eax
  420876:	retf   0x11eb
  420879:	aaa    
  42087a:	and    ah,bl
  42087c:	cmp    DWORD PTR [eax],edx
  42087e:	popa   
  42087f:	xor    dl,BYTE PTR [ebx-0x2aa7ca9f]
  420885:	dec    edi
  420886:	mov    ah,0x5
  420888:	in     ax,0xe4
  42088b:	aad    0xd2
  42088d:	loope  0x420828
  42088f:	cld    
  420890:	adc    BYTE PTR [edx+0xf],bh
  420893:	addr16 pop edi
  420895:	or     edx,DWORD PTR [ecx]
  420897:	pop    ebx
  420898:	mov    dl,0x3
  42089a:	push   ebp
  42089b:	in     eax,0x5c
  42089d:	in     al,dx
  42089e:	cmp    al,0x82
  4208a0:	inc    edx
  4208a1:	and    DWORD PTR [ebp+esi*8-0x6d],0x35c1b40c
  4208a9:	ss xor eax,0xa9af769b
  4208af:	pop    edx
  4208b0:	push   cs
  4208b1:	stos   BYTE PTR es:[edi],al
  4208b2:	push   0xab826eee
  4208b7:	cmp    DWORD PTR [edi-0x535327df],ebx
  4208bd:	and    al,0xf8
  4208bf:	enter  0x2f8e,0xfd
  4208c3:	mov    ecx,DWORD PTR [ecx]
  4208c5:	or     al,BYTE PTR [ebp+0x5c]
  4208c8:	sub    DWORD PTR [esi-0x70],edx
  4208cb:	retf   
  4208cc:	sbb    eax,0xb1d93b4d
  4208d1:	fistp  WORD PTR [ebp+0x7a]
  4208d4:	and    al,0xa5
  4208d6:	jo     0x420935
  4208d8:	loop   0x4208c9
  4208da:	sti    
  4208db:	pop    ebp
  4208dc:	shl    BYTE PTR [ecx],1
  4208de:	and    esp,DWORD PTR [ebx]
  4208e0:	les    edx,FWORD PTR [edx]
  4208e2:	fild   DWORD PTR [ecx+0x7bc58f52]
  4208e8:	mov    eax,ds:0x18b3675
  4208ed:	mov    esi,DWORD PTR [eax+0x28]
  4208f0:	scas   al,BYTE PTR es:[edi]
  4208f1:	pop    esp
  4208f2:	jo     0x420957
  4208f4:	es jnp 0x4208e0
  4208f7:	xchg   DWORD PTR [eax],eax
  4208f9:	mov    WORD PTR [ecx-0x72],cs
  4208fc:	inc    edx
  4208fd:	inc    ebp
  4208fe:	cs or  ah,0xe3
  420902:	push   0xffffffdf
  420904:	sbb    BYTE PTR [edx+0x1099e21a],bl
  42090a:	cmp    al,0x3d
  42090c:	push   0x6a
  42090e:	and    BYTE PTR [ebx-0x6f],ch
  420911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420912:	pop    edi
  420913:	pop    esp
  420914:	int    0x8
  420916:	mov    ebx,0xda4d1149
  42091b:	jmp    0xc20263a2
  420920:	xchg   edi,eax
  420921:	icebp  
  420922:	loope  0x4208f1
  420924:	inc    ebp
  420925:	push   cs
  420926:	popa   
  420927:	add    al,0x31
  420929:	test   eax,0xbefe8a1c
  42092e:	in     al,0x72
  420930:	xchg   ebp,eax
  420931:	nop
  420932:	in     eax,0x74
  420934:	sar    DWORD PTR [esi+0x1b05d620],1
  42093a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42093b:	xchg   edi,eax
  42093c:	pop    esp
  42093d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42093e:	jns    0x420976
  420940:	adc    bh,ch
  420942:	lods   eax,DWORD PTR ds:[esi]
  420943:	xor    esi,DWORD PTR [edx]
  420945:	jp     0x4208f6
  420947:	push   0x62827e8
  42094c:	inc    esp
  42094d:	imul   ebx,DWORD PTR fs:0x2e94a214,0x45
  420955:	jmp    0x4209af
  420957:	mov    dl,0x27
  420959:	arpl   WORD PTR [esp+ebx*2],dx
  42095c:	imul   BYTE PTR [ebp+0x60f863cf]
  420962:	fcomp  QWORD PTR [ebx]
  420964:	clc    
  420965:	fist   WORD PTR [ebp+eax*8+0x4f]
  420969:	shr    DWORD PTR [esi+ebp*2+0x27],cl
  42096d:	cwde   
  42096e:	jge    0x4209af
  420970:	enter  0x5124,0x2b
  420974:	fistp  DWORD PTR [ecx]
  420976:	mov    al,ds:0x7580a222
  42097b:	xchg   esi,eax
  42097c:	(bad)  [edi-0x79]
  42097f:	adc    DWORD PTR [eax-0x9db8fab],ebp
  420985:	(bad)  
  420986:	out    dx,al
  420987:	xlat   BYTE PTR ds:[ebx]
  420988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420989:	pop    ds
  42098a:	in     al,0x2a
  42098c:	pop    esp
  42098d:	stos   BYTE PTR es:[edi],al
  42098e:	xchg   ebp,eax
  42098f:	inc    ebp
  420990:	aam    0x74
  420992:	lahf   
  420993:	jp     0x420998
  420995:	jb     0x420994
  420997:	out    dx,al
  420998:	ins    BYTE PTR es:[edi],dx
  420999:	and    BYTE PTR [ecx],dh
  42099b:	mov    fs,WORD PTR [edx-0x26]
  42099e:	and    edi,edx
  4209a0:	(bad)  
  4209a1:	dec    esp
  4209a2:	and    ah,BYTE PTR [edi-0x2b]
  4209a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209a6:	fst    QWORD PTR [ebp-0x55049e7a]
  4209ac:	dec    esi
  4209ad:	ror    BYTE PTR ds:[edx+esi*2],cl
  4209b1:	dec    edi
  4209b2:	xchg   esp,eax
  4209b3:	aaa    
  4209b4:	ja     0x420a01
  4209b6:	jp     0x420a04
  4209b8:	and    bl,BYTE PTR [ebx+0x7f]
  4209bb:	sbb    dh,ch
  4209bd:	ss out dx,al
  4209bf:	sub    eax,0xd9f9f2c7
  4209c4:	xchg   ecx,eax
  4209c5:	(bad)  
  4209c7:	out    dx,al
  4209c8:	adc    DWORD PTR [ecx+ebp*8+0x28af5476],ebx
  4209cf:	inc    ebx
  4209d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209d1:	mov    dh,BYTE PTR [edi-0x61]
  4209d4:	pop    edx
  4209d5:	bound  edx,QWORD PTR [edx-0x7c133d2f]
  4209db:	xor    BYTE PTR [ecx+eax*2],dl
  4209de:	and    al,BYTE PTR [eax+0x58]
  4209e1:	mov    ch,0xf5
  4209e3:	push   es
  4209e4:	push   esp
  4209e5:	test   DWORD PTR [ebp+0x10],0x85e9c3d4
  4209ec:	sti    
  4209ed:	mov    ds:0xf9f3d8cf,al
  4209f2:	cli    
  4209f3:	xor    DWORD PTR [ecx-0x69],edx
  4209f6:	outs   dx,BYTE PTR ds:[esi]
  4209f7:	fs out dx,al
  4209f9:	in     eax,0xce
  4209fb:	jge    0x4209fb
  4209fd:	fmul   DWORD PTR [edi+0x7c]
  420a00:	mov    bl,0x33
  420a02:	xor    BYTE PTR [ecx+0x13],bh
  420a05:	dec    eax
  420a06:	fst    DWORD PTR [esi+ebx*4]
  420a09:	mov    DWORD PTR [edi+0x5044039d],0xd442736c
  420a13:	test   BYTE PTR [edi*1-0x2523690e],al
  420a1a:	add    eax,0xa66cd5a
  420a1f:	out    dx,al
  420a20:	lds    esp,FWORD PTR [ebp+0x34]
  420a23:	jecxz  0x4209fb
  420a25:	and    al,0xa1
  420a27:	scas   al,BYTE PTR es:[edi]
  420a28:	jno    0x4209f9
  420a2a:	lods   al,BYTE PTR es:[esi]
  420a2c:	adc    BYTE PTR [edi+0x6],al
  420a2f:	int3   
  420a30:	mov    ecx,0xd01aa555
  420a35:	adc    ch,BYTE PTR [eax+0x58]
  420a38:	xchg   ecx,eax
  420a39:	mov    esp,0x95ea04a3
  420a3e:	(bad)  
  420a40:	xchg   BYTE PTR [edx+eiz*4],cl
  420a43:	or     eax,DWORD PTR [edx]
  420a45:	arpl   bx,sp
  420a47:	adc    al,0xff
  420a49:	imul   eax,esi,0x63
  420a4c:	div    BYTE PTR [ebx+0x5a]
  420a4f:	stos   BYTE PTR es:[edi],al
  420a50:	pop    ebp
  420a51:	push   esi
  420a52:	dec    ebp
  420a53:	and    ecx,esp
  420a55:	rol    DWORD PTR [edx],1
  420a57:	inc    ebx
  420a58:	lods   al,BYTE PTR ds:[esi]
  420a59:	aaa    
  420a5a:	in     eax,0x53
  420a5c:	push   esp
  420a5d:	pop    esp
  420a5e:	sbb    al,0xb6
  420a60:	dec    esp
  420a61:	cwde   
  420a62:	dec    ecx
  420a63:	or     dh,BYTE PTR [eax+0x67531ccc]
  420a69:	dec    ecx
  420a6a:	xchg   ecx,eax
  420a6b:	bound  esi,QWORD PTR [eax+edx*8-0x53]
  420a6f:	pop    eax
  420a70:	pop    eax
  420a71:	jno    0x420ac8
  420a73:	xor    al,0xf3
  420a75:	cmc    
  420a76:	sub    bh,0x93
  420a79:	mov    edx,0xfdd5f461
  420a7e:	xor    eax,0x5bcd1fe1
  420a83:	or     dl,BYTE PTR [esi-0x4189acab]
  420a89:	cmp    DWORD PTR [esi],ebx
  420a8b:	inc    ebx
  420a8c:	ficom  WORD PTR [ebp+0x72fd28ec]
  420a92:	in     eax,0x2f
  420a94:	hlt    
  420a95:	fbld   TBYTE PTR [edi]
  420a97:	adc    edx,esp
  420a99:	fmul   st(2),st
  420a9b:	ret    
  420a9c:	int    0x62
  420a9e:	jne    0x420a5a
  420aa0:	push   esi
  420aa1:	scas   eax,DWORD PTR es:[edi]
  420aa2:	jmp    0x15a7:0x9e4f6de7
  420aa9:	and    DWORD PTR [ebp-0x3d14ae42],ecx
  420aaf:	fdivr  QWORD PTR [edi+eax*8]
  420ab2:	pop    ebp
  420ab3:	std    
  420ab4:	loop   0x420af5
  420ab6:	mov    eax,ds
  420ab8:	into   
  420ab9:	in     eax,0xf6
  420abb:	test   al,0x91
  420abd:	in     al,dx
  420abe:	or     eax,0xe330a89d
  420ac3:	inc    edi
  420ac4:	rol    DWORD PTR [ecx-0x51],cl
  420ac7:	xchg   edx,eax
  420ac8:	lea    eax,[ebx-0x6f]
  420acb:	je     0x420aa7
  420acd:	test   dl,dl
  420acf:	pop    edi
  420ad0:	leave  
  420ad1:	sub    al,0xdb
  420ad3:	mov    ebp,0x949c1d6
  420ad8:	not    BYTE PTR [edx+edx*2+0x5bbef8de]
  420adf:	imul   esp,DWORD PTR [esi+0xe405c7f],0x6864d055
  420ae9:	movzx  edx,BYTE PTR [edi-0x22]
  420aed:	lock (bad) 
  420aef:	loop   0x420b34
  420af1:	cmp    si,ax
  420af4:	popf   
  420af5:	pusha  
  420af6:	ds es or al,0x57
  420afa:	in     eax,0x2f
  420afc:	lods   al,BYTE PTR ds:[esi]
  420afd:	test   BYTE PTR ds:0x9a01518c,bl
  420b03:	add    al,0xe3
  420b05:	and    DWORD PTR [ebp-0x52],0xf735a6be
  420b0c:	xchg   edi,eax
  420b0d:	(bad)  
  420b0e:	xor    al,0xca
  420b10:	lock cwde 
  420b12:	pop    ss
  420b13:	call   0x2343:0x75f642c1
  420b1a:	pop    es
  420b1b:	pop    ecx
  420b1c:	pop    eax
  420b1d:	ins    DWORD PTR es:[edi],dx
  420b1e:	jg     0x420abd
  420b20:	outs   dx,DWORD PTR ds:[esi]
  420b21:	dec    ebp
  420b22:	jp     0x420ad1
  420b24:	aas    
  420b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b26:	sbb    eax,0xde515ebf
  420b2b:	mov    ds:0xea00bc65,eax
  420b30:	sbb    ecx,ebp
  420b32:	dec    BYTE PTR [eax]
  420b34:	push   eax
  420b35:	push   0xffffffe2
  420b37:	ins    BYTE PTR es:[edi],dx
  420b38:	pop    es
  420b39:	cmp    DWORD PTR [ecx],esp
  420b3b:	icebp  
  420b3c:	pusha  
  420b3d:	xchg   BYTE PTR [edi+esi*1-0x21d5ca27],cl
  420b44:	in     eax,dx
  420b45:	sub    BYTE PTR [esi],al
  420b47:	sub    dl,BYTE PTR [ecx]
  420b49:	(bad)  
  420b4a:	cmp    eax,0x8841ddcd
  420b4f:	mov    ecx,0x37b0de45
  420b54:	xor    esi,DWORD PTR [eax+0x6522916c]
  420b5a:	(bad)  
  420b5b:	test   DWORD PTR [edi-0x461243ff],esi
  420b61:	shl    BYTE PTR [eax+0x756d6fad],1
  420b67:	push   cs
  420b68:	int    0xf7
  420b6a:	mov    edi,0xb853c3e0
  420b6f:	inc    esp
  420b70:	test   DWORD PTR [edx-0x2e96c9f1],0x39861d83
  420b7a:	test   al,0xd0
  420b7c:	cs popa 
  420b7e:	call   DWORD PTR [ecx-0x78ceaa42]
  420b84:	jne    0x420b7d
  420b86:	dec    DWORD PTR [edi-0xf]
  420b89:	cmp    eax,0x62b0aa65
  420b8e:	mov    ss,WORD PTR [esi]
  420b90:	data16 and bh,dl
  420b93:	mov    dh,0x12
  420b95:	jge    0x420bec
  420b97:	outs   dx,DWORD PTR ds:[esi]
  420b98:	aas    
  420b99:	sbb    eax,0x4772e00f
  420b9e:	and    esp,DWORD PTR [edi-0x1f]
  420ba1:	faddp  st(1),st
  420ba3:	es adc al,0x4b
  420ba6:	ja     0x420bc5
  420ba8:	lods   eax,DWORD PTR ds:[esi]
  420ba9:	mov    edx,0xa75042b
  420bae:	lods   al,BYTE PTR ds:[esi]
  420baf:	xor    eax,0x3b813121
  420bb4:	jmp    0xdb4d:0x22413999
  420bbb:	adc    DWORD PTR [ecx-0x3288860c],edx
  420bc1:	or     esi,DWORD PTR [ecx-0x10]
  420bc4:	push   0x57e6473d
  420bc9:	xchg   BYTE PTR [edx],bh
  420bcb:	pop    eax
  420bcc:	repz hlt 
  420bce:	jl     0x420b5e
  420bd0:	mov    eax,0xa808dc90
  420bd5:	dec    edi
  420bd6:	dec    ebx
  420bd7:	inc    ecx
  420bd8:	je     0x420c32
  420bda:	cdq    
  420bdb:	adc    DWORD PTR [edx+0x2c532bd5],esi
  420be1:	jmp    0x420b81
  420be3:	jge    0x420b90
  420be5:	push   ebp
  420be6:	rcr    DWORD PTR [edi],cl
  420be8:	sbb    bl,BYTE PTR [esi+eiz*2]
  420beb:	ror    DWORD PTR [ebx+ebx*1-0x572dcb5c],0x6c
  420bf3:	cmp    DWORD PTR [ebx-0x6f5f4691],ebp
  420bf9:	and    eax,0xd26bf00b
  420bfe:	dec    eax
  420bff:	hlt    
  420c00:	push   0xc3f94582
  420c05:	rcr    ebx,0x70
  420c08:	aam    0xaa
  420c0a:	xchg   edi,eax
  420c0b:	inc    ebx
  420c0c:	hlt    
  420c0d:	shr    DWORD PTR [edx+0x6dbfc2cd],0x4e
  420c14:	xor    esp,DWORD PTR [edi-0x9]
  420c17:	add    ebx,DWORD PTR [ebx-0x23ef554d]
  420c1d:	fild   WORD PTR [edi-0x414114fa]
  420c23:	icebp  
  420c24:	rcl    BYTE PTR [ebx+ebp*8-0x1f],cl
  420c28:	rcl    edi,0x79
  420c2b:	jecxz  0x420bf0
  420c2d:	imul   edx,DWORD PTR [esi-0x17260313],0xe9d8f96f
  420c37:	sbb    edx,DWORD PTR [eax+0x34ec9438]
  420c3d:	mov    al,0x3b
  420c3f:	fadd   QWORD PTR [ebx+0x33d547e6]
  420c45:	mov    ch,0x5
  420c47:	in     eax,0xc
  420c49:	add    esp,DWORD PTR [eax]
  420c4b:	in     eax,0x1e
  420c4d:	or     al,cl
  420c4f:	xor    BYTE PTR [esi],0xdc
  420c52:	inc    esp
  420c53:	xor    al,BYTE PTR ss:[ebx]
  420c56:	outs   dx,DWORD PTR ds:[esi]
  420c57:	jno    0x420c0b
  420c59:	and    al,0x31
  420c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c5c:	pop    ss
  420c5d:	fwait
  420c5e:	scas   al,BYTE PTR es:[edi]
  420c5f:	sbb    eax,0x37b0f91a
  420c64:	stos   BYTE PTR es:[edi],al
  420c65:	jle    0x420c46
  420c67:	xlat   BYTE PTR ds:[ebx]
  420c68:	ss xchg edx,eax
  420c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c6b:	nop
  420c6c:	mov    al,ds:0xaa33f2a9
  420c71:	pop    ss
  420c72:	jne    0x420c40
  420c74:	push   ebx
  420c75:	xlat   BYTE PTR ds:[ebx]
  420c76:	ret    
  420c77:	pop    esi
  420c78:	std    
  420c79:	push   esi
  420c7a:	mov    esp,0x50110124
  420c7f:	sub    al,0x52
  420c81:	jo     0x420cd3
  420c83:	or     esp,ebx
  420c85:	adc    eax,0xf04f4b70
  420c8a:	add    BYTE PTR [ecx-0x12],0x56
  420c8e:	shl    BYTE PTR [edi-0x5e42dcca],1
  420c94:	cs inc edx
  420c96:	mov    al,ds:0x2c293418
  420c9b:	aam    0x64
  420c9d:	sbb    dl,BYTE PTR [ebx-0x57]
  420ca0:	call   0x3b79:0x8a792a42
  420ca7:	xlat   BYTE PTR ds:[ebx]
  420ca8:	inc    esi
  420ca9:	and    DWORD PTR [ecx+0x20f939fd],edx
  420caf:	outs   dx,DWORD PTR ds:[esi]
  420cb0:	mov    dl,0x74
  420cb2:	rcl    cl,0x46
  420cb5:	mov    eax,ds:0xfd099552
  420cba:	hlt    
  420cbb:	shr    ecx,cl
  420cbd:	dec    ecx
  420cbe:	in     al,dx
  420cbf:	(bad)  
  420cc0:	std    
  420cc1:	sbb    BYTE PTR [ecx-0x106764cf],bl
  420cc7:	dec    ebx
  420cc8:	imul   ebp,DWORD PTR [eax],0xecea6959
  420cce:	iret   
  420ccf:	cmp    al,0x93
  420cd1:	(bad)  
  420cd2:	cli    
  420cd3:	xlat   BYTE PTR ds:[ebx]
  420cd4:	stos   DWORD PTR es:[edi],eax
  420cd5:	(bad)  
  420cd6:	std    
  420cd7:	cmp    eax,0x8ebe7454
  420cdc:	stos   DWORD PTR es:[edi],eax
  420cdd:	out    0x33,al
  420cdf:	add    BYTE PTR ds:0xc71882dd,bl
  420ce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ce6:	imul   BYTE PTR [esi-0x43e3a594]
  420cec:	rcr    esp,1
  420cee:	popa   
  420cef:	hlt    
  420cf0:	icebp  
  420cf1:	pop    edi
  420cf2:	jnp    0x420cfc
  420cf4:	adc    ecx,edi
  420cf6:	xchg   ebx,eax
  420cf7:	jnp    0x420cac
  420cf9:	jae    0x420d43
  420cfb:	lods   al,BYTE PTR ds:[esi]
  420cfc:	in     al,dx
  420cfd:	sar    DWORD PTR [edx],1
  420cff:	sbb    al,0x83
  420d01:	and    DWORD PTR [ecx-0x57408b86],0xd585612b
  420d0b:	adc    DWORD PTR [edi+0x44],ebx
  420d0e:	mov    ds:0x2f7a9608,al
  420d13:	mov    eax,ds:0xfd21eb62
  420d18:	mov    cl,0x55
  420d1a:	sbb    eax,DWORD PTR [edx+0x4ebb7bdc]
  420d20:	aam    0x38
  420d22:	push   edx
  420d23:	push   cs
  420d24:	retf   
  420d25:	xchg   DWORD PTR [ebp+0x36],esp
  420d28:	pusha  
  420d29:	mov    edx,0xabd94cd2
  420d2e:	gs mov bl,0x61
  420d31:	fisttp QWORD PTR [eax]
  420d33:	retf   
  420d34:	(bad)  
  420d35:	ds mov dh,0xdc
  420d38:	fcomp  DWORD PTR [esi-0x78f4f099]
  420d3e:	xchg   esi,eax
  420d3f:	call   0x2adb:0x8f8a8916
  420d46:	add    dl,BYTE PTR [ebx+0x31]
  420d49:	adc    al,0x9b
  420d4b:	push   ebp
  420d4c:	cmp    DWORD PTR [ebx-0x39],ecx
  420d4f:	sub    edi,DWORD PTR [eax]
  420d51:	push   ecx
  420d52:	cmp    BYTE PTR [edx-0x61],al
  420d55:	push   ds
  420d56:	hlt    
  420d57:	push   ds
  420d58:	xchg   ebp,eax
  420d59:	icebp  
  420d5a:	ret    
  420d5b:	outs   dx,DWORD PTR ds:[esi]
  420d5c:	fsubr  st,st(0)
  420d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d5f:	sbb    bh,BYTE PTR [ecx]
  420d61:	enter  0x1ff2,0x79
  420d65:	stc    
  420d66:	sar    BYTE PTR [edi+ebx*4+0x508b5b79],cl
  420d6d:	jnp    0x420ddf
  420d6f:	repz cli 
  420d71:	sub    al,0x83
  420d73:	cli    
  420d74:	ret    
  420d75:	shr    BYTE PTR [ebp-0x2660d50a],0x42
  420d7c:	sub    ebx,DWORD PTR [ebp-0x56]
  420d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d80:	aaa    
  420d81:	or     BYTE PTR [edx+esi*1],0xa2
  420d85:	pusha  
  420d86:	pop    esp
  420d87:	jno    0x420de1
  420d89:	dec    eax
  420d8a:	loope  0x420d84
  420d8c:	out    0x36,al
  420d8e:	pop    eax
  420d8f:	mov    cl,0xb5
  420d91:	outs   dx,DWORD PTR ds:[esi]
  420d92:	stc    
  420d93:	mov    dl,0xb2
  420d95:	mov    ds:0x462bf3dd,eax
  420d9a:	mov    ecx,DWORD PTR [esi-0x174e50d5]
  420da0:	inc    ebp
  420da1:	jo     0x420dd1
  420da3:	aaa    
  420da4:	xchg   DWORD PTR [ebp+0x77],ecx
  420da7:	mov    bl,dl
  420da9:	jp     0x420d75
  420dab:	mov    eax,ds:0x19441572
  420db0:	sub    BYTE PTR [ebx],dl
  420db2:	push   edi
  420db3:	idiv   BYTE PTR [esp+eiz*2+0x26]
  420db7:	mov    BYTE PTR [esi+0x42],ch
  420dba:	pop    esp
  420dbb:	int3   
  420dbc:	mov    al,BYTE PTR [edx]
  420dbe:	xchg   esi,eax
  420dbf:	mov    esp,0x9d8f7055
  420dc4:	and    ebp,esp
  420dc6:	push   eax
  420dc7:	enter  0x4ab1,0xb
  420dcb:	sub    eax,0x7f0892b3
  420dd0:	push   0x26
  420dd2:	xor    esi,edx
  420dd4:	test   al,0xf6
  420dd6:	adc    BYTE PTR [edi+0x3cf626a6],ch
  420ddc:	lahf   
  420ddd:	dec    ebx
  420dde:	enter  0x27b1,0x75
  420de2:	popf   
  420de3:	xchg   edi,eax
  420de4:	sub    bl,ah
  420de6:	mov    ds:0x9f28b841,eax
  420deb:	cmp    BYTE PTR [edx-0x18],dh
  420dee:	push   ebp
  420def:	mov    ecx,0xbd1660b4
  420df4:	jo     0x420d9a
  420df6:	imul   ebx,DWORD PTR [ebx+0x56],0x211ebf2e
  420dfd:	jbe    0x420ded
  420dff:	pop    ebp
  420e00:	lea    ecx,[ecx+edx*4-0xe]
  420e04:	in     al,dx
  420e05:	xor    esi,DWORD PTR [edi+0x245ab5cb]
  420e0b:	ror    BYTE PTR [edx+eax*4-0x3946398b],1
  420e12:	sti    
  420e13:	and    DWORD PTR [ebp+0x588ba754],eax
  420e19:	mov    ebp,0x56a949d
  420e1e:	sbb    BYTE PTR [esi-0x80],cl
  420e21:	jae    0x420e66
  420e23:	out    0x1b,eax
  420e25:	faddp  st(5),st
  420e27:	xor    al,0x75
  420e29:	out    dx,eax
  420e2a:	test   esp,0xdf7b17b2
  420e30:	or     bh,ch
  420e32:	and    eax,0x2a06b8af
  420e37:	adc    al,0x40
  420e39:	jae    0x420dc2
  420e3b:	vmaxpd ymm4,ymm5,YMMWORD PTR [edx+edx*1]
  420e40:	xor    ecx,DWORD PTR [edx-0x38]
  420e43:	out    0x44,eax
  420e45:	cs in  al,0x93
  420e48:	sar    BYTE PTR [edx-0x41],0x3a
  420e4c:	scas   al,BYTE PTR es:[edi]
  420e4d:	mov    ecx,0xd0db197e
  420e52:	or     DWORD PTR ss:[esi-0x45],ebx
  420e56:	fnstsw WORD PTR [ecx-0x7cef5f6f]
  420e5c:	test   BYTE PTR [edi],ah
  420e5e:	test   DWORD PTR [edx],ebp
  420e60:	pop    esi
  420e61:	add    esi,DWORD PTR [ebx-0x347ee75d]
  420e67:	push   0xffffffbc
  420e69:	or     BYTE PTR [esi],0xbf
  420e6c:	mov    bh,0x8e
  420e6e:	sub    esi,edx
  420e70:	sbb    BYTE PTR [edi],0x4f
  420e73:	cs inc esi
  420e75:	push   esi
  420e76:	add    BYTE PTR [ebp+0x53],ah
  420e79:	popa   
  420e7a:	shl    DWORD PTR [ecx],0x3e
  420e7d:	pop    edi
  420e7e:	adc    ecx,DWORD PTR [ebp-0x3c9a90d4]
  420e84:	push   ecx
  420e85:	out    dx,eax
  420e86:	add    eax,0x28177bbc
  420e8b:	xor    bl,BYTE PTR [eax]
  420e8d:	mov    esi,0x196ad2ae
  420e92:	cmp    esp,DWORD PTR [edx+0x27e735fd]
  420e98:	in     al,0xb6
  420e9a:	sub    eax,0xf3ac9583
  420e9f:	(bad)  
  420ea0:	stc    
  420ea1:	call   0xe204:0xf12ed3dc
  420ea8:	call   0x1ef3:0xa059694a
  420eaf:	inc    ecx
  420eb0:	sub    ah,bl
  420eb2:	lods   al,BYTE PTR ds:[esi]
  420eb3:	repnz out dx,al
  420eb5:	ror    BYTE PTR [eax-0x8],cl
  420eb8:	dec    ecx
  420eb9:	imul   ebp,DWORD PTR [ecx],0x4cd05449
  420ebf:	std    
  420ec0:	mov    ebx,0xb78a4b26
  420ec5:	add    eax,0xf51b80e7
  420eca:	outs   dx,DWORD PTR ds:[esi]
  420ecb:	inc    eax
  420ecc:	cmp    al,0x3f
  420ece:	das    
  420ecf:	lds    ecx,FWORD PTR [eax]
  420ed1:	push   ss
  420ed2:	pop    esi
  420ed3:	sbb    DWORD PTR [ebp-0x53],ebp
  420ed6:	inc    DWORD PTR [edi]
  420ed8:	(bad)  
  420ed9:	shr    BYTE PTR [ebx-0x66f1b6c3],1
  420edf:	sahf   
  420ee0:	in     eax,dx
  420ee1:	ret    
  420ee2:	push   ebx
  420ee3:	mov    ch,0x61
  420ee5:	sahf   
  420ee6:	pop    ds
  420ee7:	mov    bl,BYTE PTR [ebx]
  420ee9:	ins    BYTE PTR es:[edi],dx
  420eea:	lods   eax,DWORD PTR ds:[esi]
  420eeb:	inc    edi
  420eec:	xchg   ecx,eax
  420eed:	and    dh,BYTE PTR [ebp-0x29e3b78e]
  420ef3:	scas   eax,DWORD PTR es:[edi]
  420ef4:	test   al,0x76
  420ef6:	dec    ecx
  420ef7:	sub    edi,eax
  420ef9:	sub    esi,DWORD PTR [ebx]
  420efb:	int3   
  420efc:	push   eax
  420efd:	or     al,0x9
  420eff:	mov    dh,0x8f
  420f01:	mov    ah,BYTE PTR [ebx]
  420f03:	dec    esi
  420f04:	div    DWORD PTR [ebp-0x5f]
  420f07:	xchg   edx,eax
  420f08:	or     al,0xea
  420f0a:	pop    es
  420f0b:	push   eax
  420f0c:	mov    eax,ds:0xb1f28f1c
  420f11:	data16 aas 
  420f13:	fidiv  DWORD PTR [edi-0x4634c116]
  420f19:	shl    eax,1
  420f1b:	mov    ds:0xeeeab862,al
  420f20:	cwde   
  420f21:	lahf   
  420f22:	push   es
  420f23:	mov    dl,0xd
  420f25:	pusha  
  420f26:	sbb    dh,dh
  420f28:	xchg   ebx,eax
  420f29:	fwait
  420f2a:	clc    
  420f2b:	fimul  DWORD PTR [edi-0x71]
  420f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f2f:	imul   eax,DWORD PTR [eax],0x6f04ba5c
  420f35:	and    al,0xab
  420f37:	mov    dl,0x46
  420f39:	xchg   BYTE PTR [esi+0x2c5befe5],dl
  420f3f:	inc    ecx
  420f40:	push   cs
  420f41:	test   al,0xf7
  420f43:	fcmovu st,st(6)
  420f45:	repnz (bad)
  420f48:	push   cs
  420f49:	jecxz  0x420f38
  420f4b:	sahf   
  420f4c:	cmc    
  420f4d:	loopne 0x420ed2
  420f4f:	dec    ebx
  420f50:	mov    ebx,0x22c40600
  420f55:	sbb    al,0x49
  420f57:	xchg   esp,eax
  420f58:	push   edi
  420f59:	mov    fs,WORD PTR [ecx+0x6a91c3a7]
  420f5f:	test   eax,0x22a93c75
  420f64:	pop    esp
  420f65:	jns    0x420f7c
  420f67:	xor    al,0xd7
  420f69:	daa    
  420f6a:	adc    dl,BYTE PTR [edx-0x3a]
  420f6d:	add    edi,ebx
  420f6f:	std    
  420f70:	test   eax,0xe088e92
  420f75:	test   BYTE PTR [ebp+0x3a],al
  420f78:	cmp    ecx,0xe4b74176
  420f7e:	and    edx,DWORD PTR [eax-0x71]
  420f81:	xchg   ebp,eax
  420f82:	test   eax,0x9232a6fb
  420f87:	sti    
  420f88:	leave  
  420f89:	dec    edi
  420f8a:	out    dx,al
  420f8b:	add    al,0x1
  420f8d:	shl    BYTE PTR [edx-0x45f269b],0xbc
  420f94:	xchg   esi,eax
  420f95:	and    eax,0xb01cb599
  420f9a:	pop    edi
  420f9b:	push   ss
  420f9c:	into   
  420f9d:	test   eax,0xe24bf48f
  420fa2:	add    ebx,DWORD PTR [eax+0x3a]
  420fa5:	cmp    DWORD PTR [eax-0x50],eax
  420fa8:	cmp    BYTE PTR [ebx+0x7901bd67],ch
  420fae:	fst    QWORD PTR [eax-0x31]
  420fb1:	pusha  
  420fb2:	push   edi
  420fb3:	imul   edi,DWORD PTR [edi-0x6f4f8c11],0xffffffa7
  420fba:	out    dx,eax
  420fbb:	xchg   BYTE PTR [esi],bh
  420fbd:	js     0x420f49
  420fbf:	frstor [edx-0x64862596]
  420fc5:	test   al,0xa3
  420fc7:	jmp    0xf4c9f4ab
  420fcc:	call   0xddff:0xae42bd6e
  420fd3:	mov    eax,ds:0xb648aa81
  420fd8:	or     ch,BYTE PTR ds:0xa907434e
  420fde:	test   BYTE PTR [ecx+0x3f5c5e90],0xa6
  420fe5:	arpl   WORD PTR [eax+ebx*2+0x17a97b2a],di
  420fec:	inc    ebp
  420fed:	shr    DWORD PTR [ebx+0x720f2fda],cl
  420ff3:	sbb    al,0xd2
  420ff5:	xor    BYTE PTR [ecx-0x1f],dl
  420ff8:	mov    fs,edi
  420ffa:	loope  0x420f94
  420ffc:	jb     0x420fc8
  420ffe:	stos   BYTE PTR es:[edi],al
  420fff:	adc    eax,0x5875582b
  421004:	mov    bh,0x9a
  421006:	iret   
  421007:	push   0x5b25b54c
  42100c:	lods   al,BYTE PTR ds:[esi]
  42100d:	outs   dx,BYTE PTR ds:[esi]
  42100e:	sub    al,0x3b
  421010:	dec    ecx
  421011:	sub    eax,0x42367ba4
  421016:	adc    BYTE PTR [edi-0x3e3b34a0],dh
  42101c:	or     eax,0x1ffeb5e
  421021:	sub    esp,DWORD PTR [eax]
  421023:	adc    DWORD PTR [esi-0x178549ee],0x51fbb7c
  42102d:	inc    edi
  42102e:	or     DWORD PTR [ecx+0x6a09a183],ecx
  421034:	push   edx
  421035:	inc    edx
  421036:	or     eax,0xe2c4c091
  42103b:	cmp    BYTE PTR [ecx+0x38],dh
  42103e:	sub    DWORD PTR [ebx-0x78],edx
  421041:	cmp    eax,0xc8b5be30
  421046:	pop    ss
  421047:	cmp    DWORD PTR [edi+0x3418d188],edx
  42104d:	add    ch,BYTE PTR [edx+ecx*1]
  421050:	jmp    0x1c0b:0x5b80fce3
  421057:	xor    BYTE PTR [edx+0x77c97b9b],ah
  42105d:	jg     0x420fe3
  42105f:	out    dx,eax
  421060:	xchg   esi,eax
  421061:	cmc    
  421062:	cld    
  421063:	jle    0x421000
  421065:	mov    ebp,0xee19838d
  42106a:	mov    al,0x4a
  42106c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42106d:	mov    cl,0x84
  42106f:	retf   
  421070:	xor    eax,ecx
  421072:	pop    ebx
  421073:	or     esi,DWORD PTR [eax-0x26]
  421076:	into   
  421077:	imul   esp,DWORD PTR [edi-0x1e],0xffffff87
  42107b:	mov    BYTE PTR ss:[ebx],al
  42107e:	jbe    0x42103a
  421080:	arpl   WORD PTR [edi+0x4d17f63e],bx
  421086:	mov    eax,ds:0xe6082aa7
  42108b:	test   al,0x6d
  42108d:	lods   al,BYTE PTR ds:[esi]
  42108e:	xchg   ecx,eax
  42108f:	dec    ecx
  421090:	mov    eax,ds:0x4f99f92c
  421095:	bt     DWORD PTR [edx],ebp
  421098:	dec    edx
  421099:	pop    eax
  42109a:	xor    al,0xb7
  42109c:	jnp    0x4210cc
  42109e:	sub    DWORD PTR [edx-0x7d93308f],edx
  4210a4:	sar    edi,1
  4210a6:	scas   eax,DWORD PTR es:[edi]
  4210a7:	stos   BYTE PTR es:[edi],al
  4210a8:	mov    ds:0x2f5115f7,al
  4210ad:	gs hlt 
  4210af:	(bad)  
  4210b1:	cld    
  4210b2:	inc    ecx
  4210b3:	pop    edx
  4210b4:	xchg   edx,eax
  4210b5:	pusha  
  4210b6:	in     al,0x38
  4210b8:	stos   DWORD PTR es:[edi],eax
  4210b9:	jecxz  0x42108c
  4210bb:	pusha  
  4210bc:	das    
  4210bd:	mov    fs,WORD PTR [edx+0x2c761b8]
  4210c3:	xchg   edi,eax
  4210c4:	ins    DWORD PTR es:[edi],dx
  4210c5:	or     al,0x47
  4210c7:	stos   BYTE PTR es:[edi],al
  4210c8:	and    al,0x5a
  4210ca:	xchg   DWORD PTR [ecx+0x69],ebx
  4210cd:	sar    DWORD PTR [ecx+0x17],1
  4210d0:	and    eax,0x5fba00b6
  4210d5:	in     eax,0xe1
  4210d7:	push   esp
  4210d8:	repz jno 0x4210a2
  4210db:	ds out 0xc8,eax
  4210de:	jae    0x421085
  4210e0:	pop    eax
  4210e1:	ins    BYTE PTR es:[edi],dx
  4210e2:	mov    ds:0xca3aab29,eax
  4210e7:	cmp    DWORD PTR [esi-0x3c2fa1da],ebx
  4210ed:	push   0xffffffb2
  4210ef:	lods   eax,DWORD PTR ds:[esi]
  4210f0:	test   al,0x7f
  4210f2:	leave  
  4210f3:	xchg   edi,eax
  4210f4:	call   0x72f6:0x98a2a04
  4210fb:	in     al,0xfa
  4210fd:	xor    BYTE PTR [ebx-0x6b],0x37
  421101:	inc    ecx
  421102:	or     ebx,DWORD PTR ds:0xb7bfd5a0
  421108:	mov    dl,BYTE PTR [ebp-0x351f8ba2]
  42110e:	lods   al,BYTE PTR ds:[esi]
  42110f:	scas   al,BYTE PTR es:[edi]
  421110:	add    eax,0xc91e4abd
  421115:	and    eax,0xc5dddb48
  42111a:	inc    ebp
  42111b:	imul   eax,DWORD PTR [esi],0xfffffff7
  42111e:	in     al,dx
  42111f:	icebp  
  421120:	inc    esp
  421121:	jmp    0x3e1a:0xe9f65220
  421128:	repnz faddp st(2),st
  42112b:	lods   eax,DWORD PTR ds:[esi]
  42112c:	(bad)  
  42112d:	sbb    al,BYTE PTR [edi]
  42112f:	mov    esp,0x8f174f0e
  421134:	inc    ecx
  421135:	retf   0x40a3
  421138:	jg     0x421126
  42113a:	adc    BYTE PTR [ebx-0x7c],dl
  42113d:	xor    DWORD PTR [bx+di-0x59],eax
  421141:	std    
  421142:	sub    DWORD PTR [esi+edi*2-0x32dc7214],ebx
  421149:	mov    bl,0xc3
  42114b:	lods   eax,DWORD PTR ds:[esi]
  42114c:	mov    eax,0xbcc4f396
  421151:	popa   
  421152:	xchg   DWORD PTR [eax+0x3f],esp
  421155:	mov    eax,0x106443c7
  42115a:	or     DWORD PTR [esi],ebp
  42115c:	jo     0x42111f
  42115e:	mov    esi,0x45e17a0b
  421163:	xchg   esi,eax
  421164:	mov    ds:0xcf79dc82,al
  421169:	lock les esi,FWORD PTR [edi]
  42116c:	mov    esp,0xd345f4d1
  421171:	jmp    DWORD PTR [eax+edx*2]
  421174:	sbb    al,ch
  421176:	loope  0x421144
  421178:	arpl   WORD PTR [esi],ax
  42117a:	pop    eax
  42117b:	inc    ecx
  42117c:	cmp    ebx,eax
  42117e:	inc    ebp
  42117f:	and    DWORD PTR [edi+ebp*1],esi
  421182:	push   eax
  421183:	xchg   edx,eax
  421184:	(bad)  
  421185:	pop    edi
  421186:	pop    ecx
  421187:	shl    DWORD PTR [eax],0xfe
  42118a:	sar    bh,cl
  42118c:	in     al,0xc0
  42118e:	pand   mm4,QWORD PTR [ecx+0x7544afd6]
  421195:	outs   dx,DWORD PTR ds:[esi]
  421196:	jbe    0x421193
  421198:	out    dx,al
  421199:	call   0x92c4a59e
  42119e:	fild   DWORD PTR [edi-0x56]
  4211a1:	fmul   DWORD PTR [ebx+0x54]
  4211a4:	adc    WORD PTR [ecx+0x24],cx
  4211a8:	jl     0x421155
  4211aa:	rcl    BYTE PTR [ebx-0x34],1
  4211ad:	ror    DWORD PTR fs:[ebx],cl
  4211b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211b1:	push   0xffffffe2
  4211b3:	nop
  4211b4:	rcl    BYTE PTR [ebp-0x73d7281f],0x24
  4211bb:	mov    ebp,0x8d7dbb62
  4211c0:	mov    ebx,0xce0d099b
  4211c5:	scas   eax,DWORD PTR es:[edi]
  4211c6:	push   es
  4211c7:	std    
  4211c8:	sahf   
  4211c9:	retf   
  4211ca:	and    DWORD PTR [ebx+0x17],ebp
  4211cd:	js     0x421163
  4211cf:	retf   
  4211d0:	aaa    
  4211d1:	sub    ebx,DWORD PTR [ebp-0x74]
  4211d4:	out    0x5c,al
  4211d6:	jmp    0x4211c6
  4211d8:	jmp    0xc406:0x7ae2008
  4211df:	sbb    DWORD PTR [ecx-0x4b8a65ed],ecx
  4211e5:	mov    ecx,0xac4ff61a
  4211ea:	mov    cl,0xeb
  4211ec:	ja     0x4211d9
  4211ee:	icebp  
  4211ef:	xchg   ebp,eax
  4211f0:	rcr    BYTE PTR [ebp-0x4445d1a0],1
  4211f6:	xchg   DWORD PTR [ebp-0x3cadcde3],edx
  4211fc:	jmp    0x42120b
  4211fe:	test   eax,0x85b7ce2a
  421203:	jae    0x4211a6
  421205:	call   0xf786f2e0
  42120a:	(bad)  
  42120b:	loop   0x42128c
  42120d:	sbb    esp,DWORD PTR [edx-0xc]
  421210:	push   esp
  421211:	into   
  421212:	leave  
  421213:	mov    ah,0x3
  421215:	jecxz  0x42126a
  421217:	add    cl,cl
  421219:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42121b:	fwait
  42121c:	retf   0xdfcc
  42121f:	pushf  
  421220:	iret   
  421221:	fsubp  st(2),st
  421223:	jnp    0x421299
  421225:	inc    eax
  421226:	inc    ebx
  421227:	jo     0x4211b6
  421229:	dec    edx
  42122a:	jecxz  0x421229
  42122c:	lock mov ch,0x2
  42122f:	inc    esi
  421230:	in     al,dx
  421231:	aaa    
  421232:	mov    eax,0x6921e529
  421237:	add    BYTE PTR [esi-0x1340dc17],ah
  42123d:	xchg   ecx,eax
  42123e:	push   ebx
  42123f:	lds    edi,FWORD PTR [ebx-0xb]
  421242:	fistp  WORD PTR ds:0x4177e53f
  421248:	add    edx,DWORD PTR [eax+ebx*8-0x67f619fc]
  42124f:	rcl    BYTE PTR [eax-0x23],0x70
  421253:	ror    ecx,1
  421255:	cld    
  421256:	stos   DWORD PTR es:[edi],eax
  421257:	daa    
  421258:	push   ecx
  421259:	sbb    BYTE PTR [ebx],0x22
  42125c:	dec    ebp
  42125d:	and    DWORD PTR [esi+0x682f2e4a],ebx
  421263:	loopne 0x42123a
  421265:	or     eax,eax
  421267:	in     al,dx
  421268:	mov    ah,cl
  42126a:	sub    al,0xcc
  42126c:	jmp    0xcac:0xc51fa6c3
  421273:	(bad)  
  421274:	adc    ecx,DWORD PTR [eax+0x43]
  421277:	dec    edi
  421278:	mov    edx,0x622077e4
  42127d:	shr    DWORD PTR [ebx],0xec
  421280:	daa    
  421281:	mov    edi,0x48bf3d6
  421286:	sti    
  421287:	ret    
  421288:	lea    ebp,[ecx+eax*4+0xe27b955]
  42128f:	stos   DWORD PTR es:[edi],eax
  421290:	loop   0x42125e
  421292:	dec    edx
  421293:	mov    BYTE PTR [ebx-0x14a2bb4e],dl
  421299:	gs icebp 
  42129b:	fld    QWORD PTR [ebx+edi*8-0x4a]
  42129f:	fs mov esp,0x301fd095
  4212a5:	jge    0x4212a8
  4212a7:	inc    esp
  4212a8:	loope  0x421295
  4212aa:	xchg   edi,eax
  4212ab:	retf   
  4212ac:	popa   
  4212ad:	add    al,0xcf
  4212af:	test   DWORD PTR [esi],ecx
  4212b1:	xchg   edx,eax
  4212b2:	push   edi
  4212b3:	shr    BYTE PTR [ebx+edi*4],0xb4
  4212b7:	xchg   DWORD PTR [edi+ebp*1],esi
  4212ba:	pop    ebx
  4212bb:	and    DWORD PTR [esp+esi*4-0x10],ecx
  4212bf:	loop   0x4212b8
  4212c1:	bound  ebx,QWORD PTR [ecx-0x1c0eb719]
  4212c7:	push   ebp
  4212c8:	iret   
  4212c9:	fcmovbe st,st(1)
  4212cb:	adc    cl,0x60
  4212ce:	leave  
  4212cf:	xchg   edi,eax
  4212d0:	mov    ds:0x8a51b45a,al
  4212d5:	lahf   
  4212d6:	and    BYTE PTR [eax],0x9e
  4212d9:	cmp    DWORD PTR [eax],esp
  4212db:	cs je  0x4212b4
  4212de:	jmp    0x52cf661d
  4212e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212e4:	cmp    al,0xf
  4212e6:	rcr    ebp,1
  4212e8:	leave  
  4212e9:	xchg   edx,eax
  4212ea:	retf   
  4212eb:	push   esp
  4212ec:	cld    
  4212ed:	je     0x42132c
  4212ef:	add    bl,0xc8
  4212f2:	retf   0xb4b7
  4212f5:	mov    ebx,0xa45ad8b4
  4212fa:	mov    WORD PTR [ecx],gs
  4212fc:	les    esp,FWORD PTR [esi]
  4212fe:	mov    edi,0x33719b00
  421303:	lods   al,BYTE PTR ds:[esi]
  421304:	and    ecx,0xef8d63ba
  42130a:	div    BYTE PTR [edi+0x11]
  42130d:	dec    ecx
  42130e:	inc    esi
  42130f:	in     eax,0x23
  421311:	mov    ?,WORD PTR [eax+esi*1]
  421314:	cs scas al,BYTE PTR es:[edi]
  421316:	mov    ebp,0xf8398681
  42131b:	sar    DWORD PTR gs:[edi+0x16283ac3],0xad
  421323:	shl    ebx,1
  421325:	mov    esp,0xe43a4b62
  42132a:	cld    
  42132b:	or     al,0x20
  42132d:	mov    esp,0x53697664
  421332:	xor    esi,DWORD PTR [ebx+eiz*1+0x348dd2a]
  421339:	addr16 push eax
  42133b:	mov    eax,0xb5cabbcf
  421340:	scas   al,BYTE PTR es:[edi]
  421341:	sub    esi,DWORD PTR [ebp+0x59]
  421344:	adc    esi,DWORD PTR ds:0x1125112
  42134a:	sub    BYTE PTR [edx+0x2cb5f2d],ah
  421350:	adc    esi,ecx
  421352:	icebp  
  421353:	xor    esp,DWORD PTR [edi]
  421355:	cmp    BYTE PTR [edx+0x4d],dl
  421358:	jg     0x4213bd
  42135a:	stos   BYTE PTR es:[edi],al
  42135b:	shr    al,cl
  42135d:	dec    edx
  42135e:	imul   ecx,DWORD PTR [ecx+0x51],0x7c
  421362:	shr    BYTE PTR [ebx+0xefa83f8],0x1
  421369:	das    
  42136a:	mov    WORD PTR [ebx-0x4c],es
  42136d:	repnz mov ebp,esp
  421370:	icebp  
  421371:	sbb    DWORD PTR [ebx-0x7e26d962],eax
  421377:	idiv   BYTE PTR [edx+eax*4+0x24881244]
  42137e:	cmp    BYTE PTR [eax],ah
  421380:	mov    esp,edi
  421382:	jmp    0xe2b6dab0
  421387:	mov    bh,0x27
  421389:	rcr    BYTE PTR [esi-0x5c],0x7e
  42138d:	mov    ?,WORD PTR [edi]
  42138f:	iret   
  421390:	pop    ebp
  421391:	mov    ch,0x86
  421393:	retf   
  421394:	mov    eax,ds:0x2f2cf45d
  421399:	cmp    eax,0x524d314
  42139e:	out    0x33,al
  4213a0:	inc    ebx
  4213a1:	mov    ds:0xdb1763a8,al
  4213a6:	popf   
  4213a7:	inc    eax
  4213a8:	fsub   st,st(6)
  4213aa:	mov    dh,0xd9
  4213ac:	fbstp  TBYTE PTR [eax]
  4213ae:	sbb    eax,0x6eef19fc
  4213b3:	cmp    DWORD PTR [ecx+ebx*1-0x26],0x28d0c68e
  4213bb:	and    BYTE PTR [ebp-0x40b0aa23],0xbc
  4213c2:	ja     0x421394
  4213c4:	arpl   WORD PTR [ebx-0x19104146],bp
  4213ca:	sub    al,0x27
  4213cc:	lds    eax,FWORD PTR [eax+0x472b7878]
  4213d2:	in     eax,dx
  4213d3:	sub    ecx,DWORD PTR [eax]
  4213d5:	add    eax,0x377fa712
  4213da:	nop
  4213db:	pop    esp
  4213dc:	inc    eax
  4213dd:	xor    eax,0x16c4b6d8
  4213e2:	into   
  4213e3:	pushf  
  4213e4:	test   BYTE PTR [ebx],dl
  4213e6:	xchg   ebp,eax
  4213e7:	imul   ebp,DWORD PTR [eax-0x56],0xbfe47f32
  4213ee:	push   esp
  4213ef:	push   edi
  4213f0:	addr16 into 
  4213f2:	stos   DWORD PTR es:[edi],eax
  4213f3:	call   0x585b:0x971fed45
  4213fa:	call   0x828e:0x89b6c5f6
  421401:	inc    ebx
  421402:	test   al,0x97
  421404:	mov    dl,0x57
  421406:	jecxz  0x4213a6
  421408:	(bad)  
  421409:	popa   
  42140a:	adc    al,BYTE PTR [ebx]
  42140c:	lahf   
  42140d:	lock leave 
  42140f:	push   cs
  421410:	retf   0xe14d
  421413:	into   
  421414:	fsubr  QWORD PTR [ebx-0x381157b0]
  42141a:	(bad)  
  42141b:	sub    bh,dl
  42141d:	ret    0x8e05
  421420:	enter  0xea5d,0x2c
  421424:	push   esi
  421425:	ficom  WORD PTR [ebx]
  421427:	jb     0x4213fc
  421429:	xchg   esp,eax
  42142a:	sub    edi,ecx
  42142c:	xchg   edx,esi
  42142e:	or     DWORD PTR [edx-0x2e],esi
  421431:	cld    
  421432:	stos   BYTE PTR es:[edi],al
  421433:	pop    edi
  421434:	push   edx
  421435:	push   ds
  421436:	pop    ebp
  421437:	icebp  
  421438:	rdpru  
  42143b:	mov    BYTE PTR [ebp-0x53ac9b05],ch
  421441:	jbe    0x4213ca
  421443:	data16 ds hlt 
  421446:	adc    eax,0x2a323a2c
  42144b:	push   esi
  42144c:	adc    DWORD PTR [edx],0x54e56b0b
  421452:	daa    
  421453:	jo     0x421482
  421455:	mov    al,0x13
  421457:	xor    edi,DWORD PTR [ecx-0x479edf7d]
  42145d:	and    DWORD PTR [ebp+0x3d14a7fe],edi
  421463:	mov    bl,0x4e
  421465:	and    al,0xf1
  421467:	mov    ecx,0x8763a07a
  42146c:	ret    
  42146d:	xchg   esi,eax
  42146e:	sub    dl,BYTE PTR [ebp+0x50]
  421471:	shl    ecx,1
  421473:	(bad)  
  421474:	xor    DWORD PTR [esi],edx
  421476:	inc    ebx
  421477:	and    dh,BYTE PTR [edx]
  421479:	sahf   
  42147a:	mov    ds:0xafff5406,eax
  42147f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421480:	adc    al,0xc2
  421482:	or     eax,edi
  421484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421485:	push   ecx
  421486:	jae    0x42146e
  421488:	mov    eax,ds:0xd4069006
  42148d:	sub    BYTE PTR [ecx],dl
  42148f:	ins    BYTE PTR es:[edi],dx
  421490:	repnz loope 0x421491
  421493:	nop    DWORD PTR [esi+0x39]
  421497:	lods   eax,DWORD PTR ds:[esi]
  421498:	sbb    edi,ebx
  42149a:	sub    DWORD PTR [edi+0x51],0xa05e3375
  4214a1:	push   esp
  4214a2:	xchg   ebx,eax
  4214a3:	mov    eax,ds:0x1fe31a33
  4214a8:	lods   eax,DWORD PTR ds:[esi]
  4214a9:	lahf   
  4214aa:	mov    eax,0x30f50269
  4214af:	pusha  
  4214b0:	(bad)  
  4214b1:	std    
  4214b2:	cld    
  4214b3:	mov    fs,WORD PTR [ebp+ebp*8+0x18]
  4214b7:	retf   0x7d20
  4214ba:	out    0x96,al
  4214bc:	xor    al,0x7c
  4214be:	xor    al,0xcc
  4214c0:	xor    DWORD PTR [ebx],edi
  4214c2:	stc    
  4214c3:	adc    eax,0x3f6b5340
  4214c8:	adc    eax,0x90c3c033
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x839172ca
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0xcc985faa
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	call   FWORD PTR [edx-0x13]
  4217eb:	and    al,0x1c
  4217ed:	sbb    eax,0xf490f70f
  4217f2:	sub    al,BYTE PTR [ecx-0x48179231]
  4217f8:	mov    ah,0xa4
  4217fa:	push   ds
  4217fb:	maskmovq mm2,(bad)
  4217fc:	not    DWORD PTR [eax-0x707ed510]
  421802:	xchg   edx,eax
  421803:	pop    ss
  421804:	mov    bh,0xb4
  421806:	sbb    al,0x1e
  421808:	maskmovq mm2,(bad)
  421809:	not    DWORD PTR [eax-0x307ed510]
  42180f:	xchg   edx,eax
  421810:	pop    ss
  421811:	mov    bh,0xb4
  421813:	sbb    al,0x1e
  421815:	maskmovq mm2,(bad)
  421816:	not    DWORD PTR [eax-0x307ed510]
  42181c:	xchg   edx,eax
  42181d:	pop    ss
  42181e:	mov    bh,0xb4
  421820:	sbb    al,0x1e
  421822:	maskmovq mm2,(bad)
  421823:	not    DWORD PTR [eax-0x307ed5f8]
  421829:	pushf  
  42182a:	or     BYTE PTR ds:0x6aa1cba,cl
  421830:	cmp    dh,BYTE PTR [ecx+0x2cd2b48]
  421836:	mov    bl,0x43
  421838:	(bad)  
  42183a:	outs   dx,DWORD PTR ds:[esi]
  42183b:	ds jg  0x4217c3
  42183e:	call   DWORD PTR [edi-0x4d5d1fa8]
  421844:	je     0x42181c
  421846:	fidiv  DWORD PTR [edx+0x71]
  421849:	jnp    0x421822
  42184b:	repnz xchg ebp,eax
  42184d:	or     dh,bl
  42184f:	mov    edx,0xdade37fc
  421854:	cmp    al,0x5a
  421856:	inc    eax
  421857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421858:	mov    al,0x9d
  42185a:	inc    ebp
  42185b:	in     eax,0xaa
  42185d:	mov    esp,0x38beba1a
  421862:	push   ds
  421863:	maskmovq mm2,(bad)
  421864:	not    DWORD PTR [eax-0x377ed510]
  42186a:	or     ebp,ebx
  42186c:	out    dx,al
  42186d:	mul    esp
  42186f:	mov    WORD PTR ds:0x206268b4,es
  421875:	ret    0x37
  421878:	sbb    eax,0x1410d1ef
  42187d:	push   eax
  42187e:	lar    edi,dx
  421881:	jb     0x421867
  421883:	neg    DWORD PTR [eax+0x16264fd5]
  421889:	inc    esi
  42188a:	push   0xffffffce
  42188c:	call   0x99be:0xc513d298
  421893:	mov    ?,WORD PTR [esi-0x26219a6]
  421899:	fidiv  DWORD PTR [eax+0x3b]
  42189c:	mov    eax,DWORD PTR [ebp-0x1427a96]
  4218a2:	pushf  
  4218a3:	pop    ds
  4218a4:	add    eax,0x206268af
  4218a9:	ret    0x137
  4218ac:	sbb    eax,0x148e4d9f
  4218b1:	mov    al,0x2f
  4218b3:	adc    dl,bh
  4218b5:	addr16 jns 0x421915
  4218b8:	cwde   
  4218b9:	dec    edi
  4218ba:	ror    BYTE PTR [ecx+0x65f71616],cl
  4218c0:	call   0xefd0:0xc5894fa8
  4218c7:	and    eax,0x7b44be
  4218cc:	std    
  4218cd:	ror    BYTE PTR [eax],cl
  4218cf:	mov    eax,0x74fb9d8b
  4218d4:	fcomip st,st(7)
  4218d6:	in     al,0x8c
  4218d8:	add    eax,0x2af090f7
  4218dd:	or     edi,0xf1e71792
  4218e3:	sbb    al,0x1e
  4218e5:	inc    ebx
  4218e6:	not    BYTE PTR [edx-0x5bae7510]
  4218ec:	fst    QWORD PTR [edi]
  4218ee:	mov    bh,0xb4
  4218f0:	sbb    al,0x1e
  4218f2:	maskmovq mm2,(bad)
  4218f3:	not    DWORD PTR [eax-0x317dd5f0]
  4218f9:	cdq    
  4218fa:	push   ss
  4218fb:	mov    ebp,0xbf01cb4
  421900:	not    DWORD PTR [eax-0x307ed3b4]
  421906:	xchg   edx,eax
  421907:	pop    ss
  421908:	mov    bh,0xa5
  42190a:	mov    eax,ds:0x80f70f1e
  42190f:	lock sub al,BYTE PTR [ecx-0x48e86831]
  421916:	mov    ah,0x5d
  421918:	push   ds
  421919:	movntq QWORD PTR [eax-0x307cd510],mm2
  421920:	xchg   edx,eax
  421921:	adc    dh,BYTE PTR [edi+0xf1e1cb5]
  421927:	not    DWORD PTR [eax-0x307fd50b]
  42192d:	xchg   edx,eax
  42192e:	pop    ss
  42192f:	mov    bh,0xb4
  421931:	sbb    al,0x4e
  421933:	add    esi,edi
  421935:	nop
  421936:	hlt    
  421937:	sub    al,BYTE PTR [ecx-0x48ed8932]
  42193d:	mov    dh,0x1c
  42193f:	push   ds
  421940:	(bad)  
  421941:	not    DWORD PTR [eax-0x207ed520]
  421947:	xchg   edx,eax
  421948:	pop    ss
  421949:	mov    bh,0xb4
  42194b:	or     al,0x1e
  42194d:	movntq QWORD PTR [eax-0x307ed510],mm2
  421954:	xchg   edx,eax
  421955:	pop    es
  421956:	mov    bh,0xb4
  421958:	sbb    al,0x1e
  42195a:	maskmovq mm2,(bad)
  42195b:	not    DWORD PTR [eax-0x307ed510]
  421961:	cs mov bx,0x75b4
  421966:	sbb    eax,0x90f70f
  42196b:	and    DWORD PTR [ecx-0x48e82480],eax
  421971:	mov    ah,0x1c
  421973:	push   ds
  421974:	maskmovq mm2,(bad)
  421975:	not    DWORD PTR [eax-0x307ed510]
  42197b:	xchg   edx,eax
  42197c:	pop    ss
  42197d:	mov    bh,0xb4
  42197f:	sbb    al,0x1e
  421981:	maskmovq mm2,(bad)
  421982:	not    DWORD PTR [eax-0x307ed510]
  421988:	xchg   edx,eax
  421989:	pop    ss
  42198a:	mov    bh,0xb4
  42198c:	sbb    al,0x1e
  42198e:	maskmovq mm2,(bad)
  42198f:	not    DWORD PTR [eax-0x307ed510]
  421995:	xchg   edx,eax
  421996:	pop    ss
  421997:	mov    bh,0xb4
  421999:	sbb    al,0x1e
  42199b:	maskmovq mm2,(bad)
  42199c:	not    DWORD PTR [eax-0x307ed510]
  4219a2:	xchg   edx,eax
  4219a3:	pop    ss
  4219a4:	mov    bh,0xb4
  4219a6:	sbb    al,0x1e
  4219a8:	maskmovq mm2,(bad)
  4219a9:	not    DWORD PTR [eax-0x307ed510]
  4219af:	xchg   edx,eax
  4219b0:	pop    ss
  4219b1:	mov    bh,0xb4
  4219b3:	sbb    al,0x1e
  4219b5:	maskmovq mm2,(bad)
  4219b6:	not    DWORD PTR [eax-0x307ed510]
  4219bc:	xchg   edx,eax
  4219bd:	pop    ss
  4219be:	mov    bh,0xb4
  4219c0:	sbb    al,0x1e
  4219c2:	maskmovq mm2,(bad)
  4219c3:	not    DWORD PTR [eax-0x307ed510]
  4219c9:	xchg   edx,eax
  4219ca:	pop    ss
  4219cb:	mov    bh,0xb4
  4219cd:	sbb    al,0x1e
  4219cf:	maskmovq mm2,(bad)
  4219d0:	not    DWORD PTR [eax-0x307ed510]
  4219d6:	xchg   edx,eax
  4219d7:	pop    ss
  4219d8:	mov    bh,0x9a
  4219da:	push   0x9083777b
  4219df:	lock sub al,BYTE PTR [ecx-0x48e866d1]
  4219e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219e7:	sbb    al,0x1e
  4219e9:	mov    db2,esp
  4219ec:	lock sub al,BYTE PTR [ebp-0xdb86d31]
  4219f3:	imul   DWORD PTR [esi]
  4219f5:	dec    edx
  4219f6:	inc    eax
  4219f7:	not    DWORD PTR [eax-0x307ed510]
  4219fd:	mov    dl,0x17
  4219ff:	mov    bh,0x54
  421a01:	xor    ch,BYTE PTR [esp+edi*2-0x7b]
  421a05:	repz lock sub al,BYTE PTR [ecx-0x48e80d31]
  421a0d:	mov    ah,0xec
  421a0f:	adc    eax,0xf0caf70f
  421a14:	sub    al,BYTE PTR [ecx-0x48e869e9]
  421a1a:	mov    ah,0x1c
  421a1c:	push   ds
  421a1d:	maskmovq mm2,(bad)
  421a1e:	not    DWORD PTR [eax-0x307ed510]
  421a24:	xchg   edx,eax
  421a25:	aaa    
  421a26:	mov    bh,0xb4
  421a28:	cld    
  421a29:	push   ds
  421a2a:	maskmovq mm2,(bad)
  421a2b:	not    DWORD PTR [eax-0x307ed510]
  421a31:	xchg   edx,eax
  421a32:	pop    ss
  421a33:	mov    bh,0xb4
  421a35:	sbb    al,0x1e
  421a37:	maskmovq mm2,(bad)
  421a38:	not    DWORD PTR [eax-0x307ed510]
  421a3e:	xchg   edx,eax
  421a3f:	pop    ss
  421a40:	mov    bh,0xb4
  421a42:	sbb    al,0x1e
  421a44:	maskmovq mm2,(bad)
  421a45:	not    DWORD PTR [eax-0x307ed510]
  421a4b:	xchg   edx,eax
  421a4c:	pop    ss
  421a4d:	mov    bh,0xb4
  421a4f:	sbb    al,0x1e
  421a51:	maskmovq mm2,(bad)
  421a52:	not    DWORD PTR [eax-0x307ed510]
  421a58:	xchg   edx,eax
  421a59:	pop    ss
  421a5a:	mov    bh,0xb4
  421a5c:	sbb    al,0x1e
  421a5e:	maskmovq mm2,(bad)
  421a5f:	not    DWORD PTR [eax-0x307ed510]
  421a65:	xchg   edx,eax
  421a66:	pop    ss
  421a67:	mov    bh,0xb4
  421a69:	sbb    al,0x1e
  421a6b:	maskmovq mm2,(bad)
  421a6c:	not    DWORD PTR [eax-0x307ed510]
  421a72:	xchg   edx,eax
  421a73:	pop    ss
  421a74:	mov    bh,0xb4
  421a76:	sbb    al,0x1e
  421a78:	maskmovq mm2,(bad)
  421a79:	not    DWORD PTR [eax-0x307ed510]
  421a7f:	xchg   edx,eax
  421a80:	pop    ss
  421a81:	mov    bh,0xb4
  421a83:	sbb    al,0x1e
  421a85:	maskmovq mm2,(bad)
  421a86:	not    DWORD PTR [eax-0x307ed510]
  421a8c:	xchg   edx,eax
  421a8d:	pop    ss
  421a8e:	mov    bh,0xb4
  421a90:	sbb    al,0x1e
  421a92:	maskmovq mm2,(bad)
  421a93:	not    DWORD PTR [eax-0x307ed510]
  421a99:	xchg   edx,eax
  421a9a:	pop    ss
  421a9b:	mov    bh,0xb4
  421a9d:	sbb    al,0x1e
  421a9f:	maskmovq mm2,(bad)
  421aa0:	not    DWORD PTR [eax-0x307ed510]
  421aa6:	xchg   edx,eax
  421aa7:	pop    ss
  421aa8:	mov    bh,0xb4
  421aaa:	sbb    al,0x1e
  421aac:	maskmovq mm2,(bad)
  421aad:	not    DWORD PTR [eax-0x307ed510]
  421ab3:	xchg   edx,eax
  421ab4:	pop    ss
  421ab5:	mov    bh,0xb4
  421ab7:	sbb    al,0x1e
  421ab9:	maskmovq mm2,(bad)
  421aba:	not    DWORD PTR [eax-0x307ed510]
  421ac0:	xchg   edx,eax
  421ac1:	pop    ss
  421ac2:	mov    bh,0xb4
  421ac4:	sbb    al,0x1e
  421ac6:	maskmovq mm2,(bad)
  421ac7:	not    DWORD PTR [eax-0x307ed510]
  421acd:	xchg   edx,eax
  421ace:	pop    ss
  421acf:	mov    bh,0xb4
  421ad1:	sbb    al,0x1e
  421ad3:	maskmovq mm2,(bad)
  421ad4:	not    DWORD PTR [eax-0x307ed510]
  421ada:	xchg   edx,eax
  421adb:	pop    ss
  421adc:	mov    bh,0xb4
  421ade:	sbb    al,0x1e
  421ae0:	maskmovq mm2,(bad)
  421ae1:	not    DWORD PTR [eax-0x307ed510]
  421ae7:	xchg   edx,eax
  421ae8:	pop    ss
  421ae9:	mov    bh,0xb4
  421aeb:	sbb    al,0x1e
  421aed:	maskmovq mm2,(bad)
  421aee:	not    DWORD PTR [eax-0x307ed510]
  421af4:	xchg   edx,eax
  421af5:	pop    ss
  421af6:	mov    bh,0xb4
  421af8:	sbb    al,0x1e
  421afa:	maskmovq mm2,(bad)
  421afb:	not    DWORD PTR [eax-0x307ed510]
  421b01:	xchg   edx,eax
  421b02:	pop    ss
  421b03:	mov    bh,0xb4
  421b05:	sbb    al,0x1e
  421b07:	maskmovq mm2,(bad)
  421b08:	not    DWORD PTR [eax-0x307ed510]
  421b0e:	xchg   edx,eax
  421b0f:	pop    ss
  421b10:	mov    bh,0xb4
  421b12:	sbb    al,0x1e
  421b14:	maskmovq mm2,(bad)
  421b15:	not    DWORD PTR [eax-0x307ed510]
  421b1b:	xchg   edx,eax
  421b1c:	pop    ss
  421b1d:	mov    bh,0xb4
  421b1f:	sbb    al,0x1e
  421b21:	maskmovq mm2,(bad)
  421b22:	not    DWORD PTR [eax-0x307ed510]
  421b28:	xchg   edx,eax
  421b29:	pop    ss
  421b2a:	mov    bh,0xb4
  421b2c:	sbb    al,0x1e
  421b2e:	maskmovq mm2,(bad)
  421b2f:	not    DWORD PTR [eax-0x307ed510]
  421b35:	xchg   edx,eax
  421b36:	pop    ss
  421b37:	mov    bh,0xb4
  421b39:	sbb    al,0x1e
  421b3b:	maskmovq mm2,(bad)
  421b3c:	not    DWORD PTR [eax-0x307ed510]
  421b42:	xchg   edx,eax
  421b43:	pop    ss
  421b44:	mov    bh,0xb4
  421b46:	sbb    al,0x1e
  421b48:	maskmovq mm2,(bad)
  421b49:	not    DWORD PTR [eax-0x307ed510]
  421b4f:	xchg   edx,eax
  421b50:	pop    ss
  421b51:	mov    bh,0xb4
  421b53:	sbb    al,0x1e
  421b55:	maskmovq mm2,(bad)
  421b56:	not    DWORD PTR [eax-0x307ed510]
  421b5c:	xchg   edx,eax
  421b5d:	pop    ss
  421b5e:	mov    bh,0xb4
  421b60:	sbb    al,0x1e
  421b62:	maskmovq mm2,(bad)
  421b63:	not    DWORD PTR [eax-0x307ed510]
  421b69:	xchg   edx,eax
  421b6a:	pop    ss
  421b6b:	mov    bh,0xb4
  421b6d:	sbb    al,0x1e
  421b6f:	maskmovq mm2,(bad)
  421b70:	not    DWORD PTR [eax-0x307ed510]
  421b76:	xchg   edx,eax
  421b77:	pop    ss
  421b78:	mov    bh,0xb4
  421b7a:	sbb    al,0x1e
  421b7c:	maskmovq mm2,(bad)
  421b7d:	not    DWORD PTR [eax-0x307ed510]
  421b83:	xchg   edx,eax
  421b84:	pop    ss
  421b85:	mov    bh,0xb4
  421b87:	sbb    al,0x1e
  421b89:	maskmovq mm2,(bad)
  421b8a:	not    DWORD PTR [eax-0x307ed510]
  421b90:	xchg   edx,eax
  421b91:	pop    ss
  421b92:	mov    bh,0xb4
  421b94:	sbb    al,0x1e
  421b96:	maskmovq mm2,(bad)
  421b97:	not    DWORD PTR [eax-0x307ed510]
  421b9d:	xchg   edx,eax
  421b9e:	pop    ss
  421b9f:	mov    bh,0xb4
  421ba1:	sbb    al,0x1e
  421ba3:	maskmovq mm2,(bad)
  421ba4:	not    DWORD PTR [eax-0x307ed510]
  421baa:	xchg   edx,eax
  421bab:	pop    ss
  421bac:	mov    bh,0xb4
  421bae:	sbb    al,0x1e
  421bb0:	maskmovq mm2,(bad)
  421bb1:	not    DWORD PTR [eax-0x307ed510]
  421bb7:	xchg   edx,eax
  421bb8:	pop    ss
  421bb9:	mov    bh,0xb4
  421bbb:	sbb    al,0x1e
  421bbd:	maskmovq mm2,(bad)
  421bbe:	not    DWORD PTR [eax-0x307ed510]
  421bc4:	xchg   edx,eax
  421bc5:	pop    ss
  421bc6:	mov    bh,0xb4
  421bc8:	sbb    al,0x1e
  421bca:	maskmovq mm2,(bad)
  421bcb:	not    DWORD PTR [eax-0x307ed510]
  421bd1:	xchg   edx,eax
  421bd2:	pop    ss
  421bd3:	mov    bh,0xb4
  421bd5:	sbb    al,0x1e
  421bd7:	maskmovq mm2,(bad)
  421bd8:	not    DWORD PTR [eax-0x307ed510]
  421bde:	xchg   edx,eax
  421bdf:	pop    ss
  421be0:	mov    bh,0xb4
  421be2:	sbb    al,0x1e
  421be4:	maskmovq mm2,(bad)
  421be5:	not    DWORD PTR [eax+0x67ee2af0]
  421beb:	cdq    
  421bec:	pop    ss
  421bed:	cwde   
  421bee:	mov    ah,0x1c
  421bf0:	push   cs
  421bf1:	maskmovq mm7,(bad)
  421bf2:	idiv   DWORD PTR [edx-0x560f0fae]
  421bf8:	ins    DWORD PTR es:[edi],dx
  421bf9:	cmp    ch,BYTE PTR [ecx]
  421bfb:	xor    ecx,DWORD PTR [ebx+esi*8+0x39]
  421bff:	pop    ds
  421c00:	add    DWORD PTR [edi+edi*4-0x19],0xffffffbe
  421c05:	push   ss
  421c06:	dec    ebp
  421c07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c08:	add    eax,0x136208ab
  421c0d:	sbb    dh,BYTE PTR [ecx-0x14]
  421c10:	scas   eax,DWORD PTR es:[edi]
  421c11:	lods   eax,DWORD PTR ds:[esi]
  421c12:	add    ch,BYTE PTR [eax]
  421c14:	mov    es,WORD PTR [edi-0x2ae750ad]
  421c1a:	nop
  421c1b:	xlat   BYTE PTR ds:[ebx]
  421c1c:	lea    ecx,[ecx]
  421c1e:	call   0xc321:0x861e7ac3
  421c25:	sbb    eax,DWORD PTR [esi-0x10]
  421c28:	push   esp
  421c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c2b:	je     0x421c0b
  421c2d:	les    esi,FWORD PTR [edx-0x65]
  421c30:	in     al,0x80
  421c32:	add    eax,0x89d0f418
  421c37:	mov    ?,WORD PTR [esi]
  421c39:	cmp    BYTE PTR [edx],bh
  421c3b:	repnz int3 
  421c3d:	pop    edx
  421c3e:	dec    edi
  421c3f:	dec    esp
  421c40:	cmp    DWORD PTR [ecx],esp
  421c42:	mov    dh,0x3
  421c44:	cld    
  421c45:	push   edx
  421c46:	adc    ecx,DWORD PTR [ebp+0x55]
  421c49:	mov    bl,0xa8
  421c4b:	pushf  
  421c4c:	cmp    al,0x9c
  421c4e:	je     0x421c21
  421c50:	(bad)  
  421c52:	inc    esp
  421c53:	repnz mov cl,0xa3
  421c56:	cwde   
  421c57:	sti    
  421c58:	mov    ch,0x27
  421c5a:	mov    esp,0x9a8acf77
  421c5f:	nop
  421c60:	and    BYTE PTR [ebp+0x376708f1],ch
  421c66:	dec    ebp
  421c67:	fldcw  WORD PTR [edi-0x3f]
  421c6a:	sbb    ecx,DWORD PTR [ebp+0x78]
  421c6d:	popf   
  421c6e:	jns    0x421c85
  421c70:	jmp    0x6554:0xb20533a1
  421c77:	arpl   WORD PTR [esi],cx
  421c79:	cld    
  421c7a:	test   BYTE PTR [ebx+eax*8],0x33
  421c7e:	xor    al,0x5c
  421c80:	push   ebx
  421c81:	jno    0x421cb0
  421c83:	fstp   st(0)
  421c85:	mov    eax,DWORD PTR [ebx-0x3d]
  421c88:	(bad)  
  421c8a:	mov    dl,0xb3
  421c8c:	push   esp
  421c8d:	(bad)  
  421c8e:	in     eax,dx
  421c8f:	sbb    DWORD PTR [eax+0x24e39965],esi
  421c95:	std    
  421c96:	bswap  esi
  421c98:	xor    BYTE PTR [eax-0x3f058702],cl
  421c9e:	aas    
  421c9f:	stos   DWORD PTR es:[edi],eax
  421ca0:	enter  0x7ce7,0x45
  421ca4:	add    al,0x22
  421ca6:	mov    esp,cs
  421ca8:	cmp    al,0x6c
  421caa:	stc    
  421cab:	xor    al,0x3
  421cad:	or     eax,0x5b94a34f
  421cb2:	mov    bl,0xc1
  421cb4:	fidivr WORD PTR [eax-0x48]
  421cb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cb8:	in     al,0x5d
  421cba:	pop    ebx
  421cbb:	test   DWORD PTR [ebp-0x76],ebp
  421cbe:	inc    edx
  421cbf:	adc    bl,BYTE PTR [ecx-0x5]
  421cc2:	push   edi
  421cc3:	cmp    DWORD PTR [ebx-0x79],0x3c
  421cc7:	pop    eax
  421cc8:	sbb    dl,BYTE PTR [edx+ebp*8]
  421ccb:	pop    esp
  421ccc:	jmp    0x421d34
  421cce:	sbb    eax,0xd41682bb
  421cd3:	outs   dx,BYTE PTR ds:[esi]
  421cd4:	lahf   
  421cd5:	bound  ebx,QWORD PTR [edi-0x15f2a03a]
  421cdb:	rcl    DWORD PTR [esi],cl
  421cdd:	mov    al,0x92
  421cdf:	neg    BYTE PTR [eax+0x5e5defeb]
  421ce5:	mov    BYTE PTR [edi-0x3c3bcb3a],bl
  421ceb:	jbe    0x421d33
  421ced:	push   esi
  421cee:	cmp    BYTE PTR [esi],dh
  421cf0:	mov    ds:0x55021e31,eax
  421cf5:	(bad)  
  421cf6:	imul   edx,ecx,0x684f0c30
  421cfc:	and    esi,DWORD PTR [ecx+ecx*8-0xc71b9f0]
  421d03:	clc    
  421d04:	mov    WORD PTR [ebx+0x29],es
  421d07:	mov    ebp,0x825aee56
  421d0c:	sub    eax,0x9e0eca1c
  421d11:	retf   
  421d12:	daa    
  421d13:	fist   DWORD PTR [esi]
  421d15:	rcl    BYTE PTR [edi],0x6d
  421d18:	jae    0x421d8f
  421d1a:	sub    eax,0x153185e5
  421d1f:	mov    cl,0x5b
  421d21:	data16 loope 0x421d6c
  421d24:	push   eax
  421d25:	inc    esi
  421d26:	add    eax,0x391ebfe5
  421d2b:	xchg   ebp,eax
  421d2c:	dec    edx
  421d2d:	fdivrp st(4),st
  421d2f:	sbb    DWORD PTR [esi+0x23],0x60cce362
  421d36:	sti    
  421d37:	mov    ebx,0xe8a6c13a
  421d3c:	cmp    eax,0x13ca38aa
  421d41:	xchg   DWORD PTR [eax],edx
  421d43:	and    edi,eax
  421d45:	cmp    BYTE PTR [ebx+0x56db9ef7],bl
  421d4b:	pop    ebx
  421d4c:	xchg   ebx,eax
  421d4d:	push   ecx
  421d4e:	(bad)  
  421d4f:	jbe    0x421d51
  421d51:	test   al,0x2
  421d53:	mov    bh,0x33
  421d55:	jns    0x421cf1
  421d57:	xchg   esp,eax
  421d58:	fwait
  421d59:	je     0x421cf8
  421d5b:	fidiv  DWORD PTR [ebx+0x78]
  421d5e:	inc    esi
  421d5f:	repz dec edi
  421d61:	mov    dh,0x2b
  421d63:	dec    ecx
  421d64:	push   esi
  421d65:	pop    edx
  421d66:	cld    
  421d67:	mov    ch,BYTE PTR [edx-0x41]
  421d6a:	retf   
  421d6b:	mov    ebp,eax
  421d6d:	aam    0x7d
  421d6f:	aad    0xe2
  421d71:	pushf  
  421d72:	sahf   
  421d73:	pop    ss
  421d74:	sub    DWORD PTR [eax-0x4c],eax
  421d77:	fdivp  st(6),st
  421d79:	xchg   esi,eax
  421d7a:	ficomp WORD PTR [ecx+0x3e]
  421d7d:	xor    edx,esp
  421d7f:	pop    edi
  421d80:	enter  0x8d02,0x50
  421d84:	pop    ebx
  421d85:	inc    eax
  421d86:	cwde   
  421d87:	sbb    BYTE PTR [eax+0x46],0x89
  421d8b:	xchg   esi,eax
  421d8c:	xor    eax,0x7d3e1fce
  421d91:	push   ss
  421d92:	(bad)  [ebp+0x76ffcc1f]
  421d98:	sti    
  421d99:	xchg   ebp,eax
  421d9a:	mov    esp,0x896f7af1
  421d9f:	outs   dx,DWORD PTR gs:[esi]
  421da1:	cdq    
  421da2:	mov    edi,ebx
  421da4:	and    eax,DWORD PTR [ebp+esi*1-0x4]
  421da8:	leave  
  421da9:	mov    ?,WORD PTR [edi+0x10]
  421dac:	mov    dl,0x9e
  421dae:	or     al,0x27
  421db0:	sub    DWORD PTR [ecx+0x18],edx
  421db3:	adc    eax,0x1e6424f2
  421db8:	pop    edx
  421db9:	sahf   
  421dba:	pop    ss
  421dbb:	xor    al,0xfc
  421dbd:	mov    al,ds:0xb09a4951
  421dc2:	and    al,dh
  421dc4:	test   eax,0x4f0ba719
  421dc9:	cld    
  421dca:	sbb    al,0xcb
  421dcc:	cld    
  421dcd:	jg     0x421ddc
  421dcf:	fdivrp st(4),st
  421dd1:	inc    esp
  421dd2:	jae    0x421e03
  421dd4:	retf   0xdfb5
  421dd7:	add    BYTE PTR [eax-0x3f],dl
  421dda:	and    al,0x4e
  421ddc:	add    eax,0x228352b7
  421de1:	pop    edi
  421de2:	sub    eax,0xfffffff8
  421de5:	out    0x70,eax
  421de7:	sbb    bl,BYTE PTR [edx+0x29]
  421dea:	nop
  421deb:	rcr    dh,1
  421ded:	mov    edx,fs
  421def:	js     0x421e43
  421df1:	or     DWORD PTR [ebx],eax
  421df3:	imul   ebp,DWORD PTR [esi],0x1df9347e
  421df9:	gs add ebx,esp
  421dfc:	cmp    eax,0xab09b235
  421e01:	push   cs
  421e02:	sbb    eax,0xc598dfa8
  421e07:	js     0x421e35
  421e09:	sti    
  421e0a:	push   es
  421e0b:	xchg   ebx,eax
  421e0c:	fidivr WORD PTR ds:0x322cf259
  421e12:	dec    edx
  421e13:	sar    BYTE PTR [edx+0x603483a4],cl
  421e19:	mov    WORD PTR [esi-0x5557a8b4],ds
  421e1f:	cmp    al,0x28
  421e21:	iret   
  421e22:	mov    ?,WORD PTR [edi+0x6b]
  421e25:	aas    
  421e26:	lods   al,BYTE PTR ds:[esi]
  421e27:	out    0xa,al
  421e29:	ds or  dl,0x89
  421e2d:	shr    BYTE PTR [eax+0x576ce283],1
  421e33:	rol    BYTE PTR [ebx-0x2d],cl
  421e36:	out    0x5d,al
  421e38:	mov    ebp,0x9ff1375b
  421e3d:	mov    eax,DWORD PTR [ecx-0x3119163f]
  421e43:	out    dx,eax
  421e44:	pop    ss
  421e45:	pop    es
  421e46:	pop    esp
  421e47:	push   cs
  421e48:	mov    eax,ds:0x1075fc4c
  421e4d:	(bad)  
  421e4e:	cmp    BYTE PTR [edx-0x56],dh
  421e51:	mov    DWORD PTR [edi-0x1a],ebx
  421e54:	icebp  
  421e55:	cld    
  421e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e57:	jmp    0x421ea2
  421e59:	mov    esi,0x43b46b28
  421e5e:	retf   
  421e5f:	or     DWORD PTR [edi-0xf],esp
  421e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e63:	xchg   edi,eax
  421e64:	push   0x4960c9e5
  421e69:	std    
  421e6a:	fcmovne st,st(0)
  421e6c:	loopne 0x421e10
  421e6e:	dec    edi
  421e6f:	inc    sp
  421e71:	retf   0x3b21
  421e74:	(bad)  [eax]
  421e76:	ins    BYTE PTR es:[edi],dx
  421e77:	jnp    0x421e4b
  421e79:	test   al,0x6a
  421e7b:	in     eax,0x67
  421e7d:	out    dx,eax
  421e7e:	mov    ebx,0x2ab7cbfa
  421e83:	xchg   ebx,eax
  421e84:	inc    esp
  421e85:	pop    eax
  421e86:	jbe    0x421e89
  421e88:	mov    BYTE PTR [ebx+0x6635bf16],bh
  421e8e:	sahf   
  421e8f:	aas    
  421e90:	pop    ds
  421e91:	and    DWORD PTR [ecx+eiz*4+0x1a80a587],esi
  421e98:	jmp    0x9dff:0xd3c683a2
  421e9f:	jl     0x421e89
  421ea1:	pop    ebp
  421ea2:	inc    esi
  421ea3:	dec    esp
  421ea4:	ret    
  421ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ea6:	xchg   BYTE PTR [ecx+0x52678964],dh
  421eac:	mov    ds:0x7ac17b65,eax
  421eb1:	std    
  421eb2:	out    0x67,al
  421eb4:	dec    edi
  421eb5:	dec    eax
  421eb6:	jns    0x421e7c
  421eb8:	out    dx,eax
  421eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421eba:	dec    ebx
  421ebb:	jp     0x421eca
  421ebd:	out    0x28,al
  421ebf:	mov    ebp,DWORD PTR [ebx+0x686b0a]
  421ec5:	xchg   edi,eax
  421ec6:	fnstenv cs:[esi]
  421ec9:	xlat   BYTE PTR ds:[ebx]
  421eca:	jae    0x421eb6
  421ecc:	pop    es
  421ecd:	cmp    eax,0x849160e1
  421ed2:	out    0xd1,eax
  421ed4:	nop    edi
  421ed7:	or     BYTE PTR [edx+ebp*1+0x2d],dh
  421edb:	jmp    FWORD PTR [ebp-0xc]
  421ede:	add    eax,0x40a3c0c2
  421ee3:	jmp    0x421e85
  421ee5:	adc    ch,BYTE PTR [eax-0x40]
  421ee8:	pop    edx
  421ee9:	stc    
  421eea:	xor    edi,edi
  421eec:	pop    edi
  421eed:	stos   BYTE PTR es:[edi],al
  421eee:	je     0x421e8e
  421ef0:	adc    ch,al
  421ef2:	out    0x93,eax
  421ef4:	ret    0xe889
  421ef7:	add    ah,cl
  421ef9:	imul   eax,DWORD PTR ds:0xb48c6294,0x35f1d9b2
  421f03:	shl    DWORD PTR [ebp+ecx*1+0xc09a23d],0xc9
  421f0b:	jb     0x421ec5
  421f0d:	xor    esp,esp
  421f0f:	sbb    DWORD PTR [eax],esp
  421f11:	idiv   BYTE PTR [edx]
  421f13:	mov    cl,0x58
  421f15:	jns    0x421f05
  421f17:	jo     0x421f98
  421f19:	dec    ebp
  421f1a:	mov    ds:0x58f7e681,eax
  421f1f:	jns    0x421ebb
  421f21:	push   0x2bc6103a
  421f26:	xlat   BYTE PTR ds:[ebx]
  421f27:	ins    DWORD PTR es:[edi],dx
  421f28:	lods   eax,DWORD PTR ds:[esi]
  421f29:	ret    
  421f2a:	adc    ecx,DWORD PTR [edi+0x5b]
  421f2d:	icebp  
  421f2e:	jecxz  0x421f2c
  421f30:	mov    cs,ebp
  421f32:	ss addr16 dec ebp
  421f35:	and    al,0x39
  421f37:	mov    ecx,DWORD PTR [ebx-0x58d7971b]
  421f3d:	shl    DWORD PTR [edx],1
  421f3f:	push   eax
  421f40:	loop   0x421ef2
  421f42:	mov    dh,0xa9
  421f44:	sbb    BYTE PTR [esi-0x4eb72c67],bh
  421f4a:	loope  0x421f63
  421f4c:	xor    DWORD PTR [eax+0x51],edi
  421f4f:	and    cl,BYTE PTR [esi-0x32e69f87]
  421f55:	mov    esp,0x4a86a8c7
  421f5a:	jns    0x421fa2
  421f5c:	sub    eax,0x4fd89b31
  421f61:	enter  0x6b5e,0x15
  421f65:	and    BYTE PTR [esi-0x52],al
  421f68:	(bad)  
  421f69:	sti    
  421f6a:	dec    edx
  421f6b:	ret    0x47ce
  421f6e:	xor    eax,0x42a5c359
  421f73:	adc    esi,DWORD PTR [ebx]
  421f75:	pushf  
  421f76:	int    0xa
  421f78:	pop    eax
  421f79:	pop    ds
  421f7a:	add    DWORD PTR [esi+0x64],eax
  421f7d:	pushf  
  421f7e:	or     eax,0xf64dad45
  421f83:	js     0x421f65
  421f85:	xchg   edx,eax
  421f86:	jno    0x421fd0
  421f88:	push   ss
  421f89:	and    dh,dl
  421f8b:	div    DWORD PTR [edx+0x4c]
  421f8e:	fld    QWORD PTR [esi+0x32a20bb9]
  421f94:	sub    al,0xd9
  421f96:	pop    edi
  421f97:	or     al,ch
  421f99:	ins    BYTE PTR es:[edi],dx
  421f9a:	sbb    eax,DWORD PTR [ebx]
  421f9c:	xchg   bh,cl
  421f9e:	pop    ecx
  421f9f:	push   ds
  421fa0:	inc    ecx
  421fa1:	push   es
  421fa2:	les    eax,FWORD PTR [edx-0x1c]
  421fa5:	or     eax,0xa8457ddc
  421faa:	mov    al,ds:0x7028c7d9
  421faf:	dec    edi
  421fb0:	loopne 0x421f98
  421fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fb3:	mov    ch,0x6
  421fb5:	mov    ah,0xae
  421fb7:	mov    ds:0x17a45bf5,eax
  421fbc:	stos   BYTE PTR es:[edi],al
  421fbd:	dec    esp
  421fbe:	outs   dx,BYTE PTR ds:[esi]
  421fbf:	jmp    0x3b884cde
  421fc4:	imul   ebp,DWORD PTR [edi-0x564f8391],0x40
  421fcb:	push   edi
  421fcc:	and    BYTE PTR [eax],ch
  421fce:	int    0xf9
  421fd0:	and    DWORD PTR [edi-0x6e],eax
  421fd3:	jl     0x422020
  421fd5:	scas   al,BYTE PTR es:[edi]
  421fd6:	and    eax,0xe08f941b
  421fdb:	or     eax,0x8b5c26e9
  421fe0:	mov    esi,0x2b9ec971
  421fe5:	add    al,0x81
  421fe7:	enter  0x8ab0,0xe7
  421feb:	xor    esp,DWORD PTR [esi-0x7896a370]
  421ff1:	mov    es,WORD PTR [ebp+0x13]
  421ff4:	sub    DWORD PTR [edi-0x14141639],0x4af844bd
  421ffe:	pop    es
  421fff:	xchg   DWORD PTR [edi],eax
  422001:	in     eax,0xc
  422003:	xlat   BYTE PTR ds:[ebx]
  422004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422005:	or     al,0xe5
  422007:	imul   esp,DWORD PTR [esi+0x11],0xe1dd6a2d
  42200e:	pop    edx
  42200f:	sub    eax,0x1a4ed585
  422014:	mov    eax,ds:0x645e021f
  422019:	les    ecx,FWORD PTR [ebx]
  42201b:	cmp    DWORD PTR [edx],eax
  42201d:	stc    
  42201e:	sbb    eax,0x1f942b49
  422023:	mov    edx,0x2e838f1e
  422028:	pushf  
  422029:	jne    0x422009
  42202b:	stc    
  42202c:	mov    esp,0x102afb1f
  422031:	lods   eax,DWORD PTR ds:[esi]
  422032:	out    dx,eax
  422033:	sbb    BYTE PTR [ecx],al
  422035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422036:	adc    eax,0xeb7d40ca
  42203b:	fucomi st,st(0)
  42203d:	push   ds
  42203e:	mov    eax,ds:0x3fd2f03a
  422043:	js     0x421fef
  422045:	daa    
  422046:	jle    0x421fe3
  422048:	xchg   ebp,eax
  422049:	mov    ebp,0xda35443b
  42204e:	out    0xa6,eax
  422050:	fnstcw WORD PTR [ebx]
  422052:	arpl   si,si
  422054:	push   ss
  422055:	(bad)  
  422058:	fisttp QWORD PTR [edx+0x74]
  42205b:	mov    cl,0x14
  42205d:	hlt    
  42205e:	les    esp,FWORD PTR [edx+0x39]
  422061:	frstor [ebx-0x855044]
  422067:	dec    edi
  422068:	or     cl,BYTE PTR [eax-0x3bb42cfe]
  42206e:	das    
  42206f:	push   ds
  422070:	sbb    DWORD PTR [esi],ebp
  422072:	(bad)  
  422073:	(bad)  
  422074:	cmc    
  422075:	add    edx,eax
  422077:	xchg   DWORD PTR [ebx],edi
  422079:	xor    ebx,DWORD PTR [edi]
  42207b:	pop    ebx
  42207c:	push   0x2ba551e3
  422081:	fidivr WORD PTR [ebx+0x6c]
  422084:	sti    
  422085:	sbb    eax,0x1b658e50
  42208a:	(bad)  
  42208b:	in     al,dx
  42208c:	(bad)  
  42208d:	adc    al,0x62
  42208f:	dec    ebx
  422090:	xchg   esi,eax
  422091:	xlat   BYTE PTR ds:[ebx]
  422092:	add    edi,edi
  422094:	(bad)  
  422095:	jnp    0x422047
  422097:	je     0x422072
  422099:	push   eax
  42209a:	shl    DWORD PTR [eax],0xaf
  42209d:	add    al,0x1b
  42209f:	out    0x1c,al
  4220a1:	push   es
  4220a2:	xchg   ebp,eax
  4220a3:	xor    BYTE PTR [esi],0x28
  4220a6:	sub    BYTE PTR [edx+0x7d],al
  4220a9:	bound  eax,QWORD PTR [esi]
  4220ab:	sbb    BYTE PTR [eax],ch
  4220ad:	iret   
  4220ae:	in     al,0x5
  4220b0:	test   eax,0xb7632e8f
  4220b5:	add    al,0xc3
  4220b7:	lahf   
  4220b8:	leave  
  4220b9:	jns    0x42209e
  4220bb:	mov    esi,DWORD PTR [ebp-0x5eda1bbe]
  4220c1:	pop    ss
  4220c2:	adc    eax,0xb2e2624e
  4220c7:	push   esi
  4220c8:	xchg   BYTE PTR [edx*8+0x3727efac],ch
  4220cf:	out    0xca,al
  4220d1:	repz xchg esp,eax
  4220d3:	and    eax,0xc70d31f5
  4220d8:	and    BYTE PTR [ebx],ah
  4220da:	mov    esi,0x595869c4
  4220df:	add    BYTE PTR [ecx-0x10],ch
  4220e2:	or     ecx,DWORD PTR [ebx]
  4220e4:	pop    esi
  4220e5:	sti    
  4220e6:	(bad)  
  4220e7:	call   0xb2f1:0xbe53b056
  4220ee:	adc    al,0xa7
  4220f0:	inc    esp
  4220f1:	adc    BYTE PTR [edi+eiz*1-0x65b00256],0x6b
  4220f9:	loop   0x422161
  4220fb:	imul   edi,DWORD PTR [edi],0x4812fb24
  422101:	mov    eax,0x2e8a417
  422106:	sbb    eax,0x483e37cf
  42210b:	cdq    
  42210c:	dec    eax
  42210d:	sub    al,0x1a
  42210f:	and    eax,0xda0c5d51
  422114:	popf   
  422115:	xor    DWORD PTR [ebp-0x798ac9d8],ebx
  42211b:	mov    ebx,0x7536ef9
  422120:	(bad)  
  422121:	adc    ah,BYTE PTR [ecx]
  422123:	lahf   
  422124:	movq   QWORD PTR [ebx+0x3c9fd14],mm2
  42212b:	popa   
  42212c:	mov    edx,0xd707cdf8
  422131:	jg     0x4221a3
  422133:	pop    esi
  422134:	aas    
  422135:	jb     0x42210d
  422137:	jbe    0x4220c1
  422139:	fsub   QWORD PTR [edx+0x2e6f6428]
  42213f:	jg     0x422122
  422141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422142:	fiadd  DWORD PTR [ebp+0x4c6aa3ea]
  422148:	dec    edx
  422149:	xchg   ebp,eax
  42214a:	fbstp  TBYTE PTR [esi+0x4a76793e]
  422150:	inc    ebx
  422151:	ins    BYTE PTR es:[edi],dx
  422152:	adc    edi,DWORD PTR [edi+ecx*4-0x5ec9ad5]
  422159:	fst    st(1)
  42215b:	jno    0x4220e1
  42215d:	imul   edi,DWORD PTR [esi],0xf89c0005
  422163:	adc    al,0xfa
  422165:	in     eax,0x53
  422167:	call   DWORD PTR [ecx-0x4d]
  42216a:	mov    esp,0x74d6f831
  42216f:	add    al,0xe3
  422171:	mov    dl,BYTE PTR [ecx-0x7a]
  422174:	xchg   DWORD PTR [edi-0xcef2bb4],ebp
  42217a:	in     al,dx
  42217b:	repnz cmp eax,0x78af068c
  422181:	dec    esp
  422182:	fwait
  422183:	mov    eax,ds:0x8498ca77
  422188:	dec    edx
  422189:	int3   
  42218a:	or     al,0xde
  42218c:	xchg   ebx,eax
  42218d:	cmc    
  42218e:	jb     0x422200
  422190:	(bad)  
  422191:	push   edx
  422192:	or     eax,0x10477502
  422197:	jae    0x42220f
  422199:	pop    ds
  42219a:	mov    dl,0xd9
  42219c:	lds    esi,FWORD PTR [edi+0x402c626b]
  4221a2:	mov    fs,WORD PTR [eax+0x58]
  4221a5:	xchg   BYTE PTR [esi],bl
  4221a7:	fucomi st,st(3)
  4221a9:	in     al,dx
  4221aa:	mov    al,ds:0xcfedd954
  4221af:	test   BYTE PTR [eax-0x3f],ch
  4221b2:	imul   ecx,eax,0xbc6890c9
  4221b8:	xchg   ebp,eax
  4221b9:	ret    0xa978
  4221bc:	adc    esp,ecx
  4221be:	outs   dx,BYTE PTR ds:[esi]
  4221bf:	call   0xe998:0xd8f4fd96
  4221c6:	mov    ecx,DWORD PTR [ebx+0x356b53cc]
  4221cc:	cmp    DWORD PTR [ebx+0x5a],ebp
  4221cf:	mov    gs,esi
  4221d1:	jge    0x422202
  4221d3:	lods   al,BYTE PTR ds:[esi]
  4221d4:	jb     0x42221c
  4221d6:	mov    ds:0x83bc9ce5,al
  4221db:	sbb    al,0xeb
  4221dd:	out    0x1b,eax
  4221df:	int    0x23
  4221e1:	lods   eax,DWORD PTR ds:[esi]
  4221e2:	mov    al,0x4e
  4221e4:	in     al,0x3e
  4221e6:	pop    ss
  4221e7:	and    al,0x3c
  4221e9:	add    esp,DWORD PTR ds:0xd021404f
  4221ef:	xchg   ecx,esp
  4221f1:	(bad)  
  4221f2:	sbb    eax,0x56ab2c74
  4221f7:	data16 jl 0x4221c2
  4221fa:	sbb    ebx,DWORD PTR [ebx+eiz*4]
  4221fd:	fdivr  DWORD PTR [ecx]
  4221ff:	sbb    esp,DWORD PTR [ebp+0x5534c3a3]
  422205:	out    0xb3,al
  422207:	xchg   ecx,eax
  422208:	scas   al,BYTE PTR es:[edi]
  422209:	daa    
  42220a:	or     al,0x14
  42220c:	dec    ebx
  42220d:	mov    ah,0x86
  42220f:	xor    eax,0x3589b74f
  422214:	ror    DWORD PTR [ebx],0x80
  422217:	mov    bh,BYTE PTR [eax+0x0]
  42221a:	push   es
  42221b:	jl     0x422200
  42221d:	iret   
  42221e:	sub    bh,al
  422220:	pop    ebp
  422221:	mov    eax,0xc9139b04
  422226:	rol    bh,0xb7
  422229:	cmp    al,0xd0
  42222b:	inc    eax
  42222c:	adc    esi,ecx
  42222e:	das    
  42222f:	add    edx,DWORD PTR [edi+0x2a]
  422232:	loop   0x42227c
  422234:	jmp    0x42225f
  422236:	scas   eax,DWORD PTR es:[edi]
  422237:	cmp    ebx,DWORD PTR [ebx-0x3b]
  42223a:	(bad)  
  42223b:	mov    esp,0xdbe56e39
  422240:	je     0x4221f5
  422242:	and    eax,0xbc5d0afa
  422247:	xchg   edi,eax
  422248:	pop    esp
  422249:	add    DWORD PTR [ecx-0x20a83bf5],edi
  42224f:	fnstsw WORD PTR [edx]
  422251:	sbb    al,0xf
  422253:	dec    esi
  422254:	pop    ebp
  422255:	scas   al,BYTE PTR es:[edi]
  422256:	pop    ss
  422257:	test   DWORD PTR [edi],ebx
  422259:	inc    esp
  42225a:	pop    esp
  42225b:	fstp   st(2)
  42225d:	or     DWORD PTR [edx],ecx
  42225f:	and    dl,dh
  422261:	test   BYTE PTR [eax],al
  422263:	and    bh,al
  422265:	(bad)  
  422266:	mov    eax,ds:0x22d417d3
  42226b:	ret    
  42226c:	jcxz   0x422205
  42226f:	sar    DWORD PTR [ebp-0xda10cc7],0xce
  422276:	test   DWORD PTR [ebp+eiz*1-0x46930f90],edx
  42227d:	dec    eax
  42227e:	inc    edi
  42227f:	or     DWORD PTR [esi-0x1b],ebp
  422282:	int    0xc
  422284:	sub    BYTE PTR [edx-0x57],dh
  422287:	sub    al,0x98
  422289:	dec    edi
  42228a:	aas    
  42228b:	test   BYTE PTR [edx],ch
  42228d:	sbb    al,0xb4
  42228f:	pop    edx
  422290:	jne    0x4222e7
  422292:	mov    edx,0x7f7fd3e1
  422297:	sahf   
  422298:	fs ds retf 0x242f
  42229d:	nop
  42229e:	add    BYTE PTR [ecx],cl
  4222a0:	in     al,dx
  4222a1:	sbb    DWORD PTR [esi],ecx
  4222a3:	ins    DWORD PTR es:[edi],dx
  4222a4:	inc    eax
  4222a5:	cmc    
  4222a6:	arpl   WORD PTR [edi+0x26],di
  4222a9:	scas   al,BYTE PTR es:[edi]
  4222aa:	pop    es
  4222ab:	mov    ecx,DWORD PTR [esi-0x6bbb4fbf]
  4222b1:	rcl    DWORD PTR [esi-0x7b30620e],0x1e
  4222b8:	cmp    DWORD PTR [edi+ecx*2+0xd31f11f],edx
  4222bf:	xor    DWORD PTR [eax-0x6e],ecx
  4222c2:	out    0xf,al
  4222c4:	inc    DWORD PTR [esi+ecx*2+0x188c3b96]
  4222cb:	sub    dl,BYTE PTR [eax-0x5b3f8c3]
  4222d1:	lahf   
  4222d2:	adc    DWORD PTR [ebp+ebx*1-0x47],0x1b8c368e
  4222da:	fs iret 
  4222dc:	add    DWORD PTR [ebx],edi
  4222de:	mov    edx,0x2b71553b
  4222e3:	in     eax,dx
  4222e4:	dec    edi
  4222e5:	mov    DWORD PTR [edx],esp
  4222e7:	jle    0x4222ea
  4222e9:	aas    
  4222ea:	xor    DWORD PTR [esi],ebx
  4222ec:	jle    0x42231f
  4222ee:	lahf   
  4222ef:	mov    ds:0x4474b503,eax
  4222f4:	xor    edi,0xffffff96
  4222f7:	jo     0x42228f
  4222f9:	xlat   BYTE PTR ds:[ebx]
  4222fa:	js     0x422321
  4222fc:	xchg   esp,eax
  4222fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222fe:	mov    WORD PTR [esi+eax*4],?
  422301:	retf   0x4a69
  422304:	mov    ch,0x4a
  422306:	int3   
  422307:	jp     0x422382
  422309:	dec    eax
  42230a:	mov    cl,0x29
  42230c:	and    BYTE PTR [ecx],cl
  42230e:	iret   
  42230f:	push   cs
  422310:	mov    al,ds:0x505de932
  422315:	fcomip st,st(7)
  422317:	xchg   ecx,eax
  422318:	ins    DWORD PTR es:[edi],dx
  422319:	in     al,0x6b
  42231b:	mov    ds:0xbeee78a9,al
  422320:	rcr    DWORD PTR [edi],0x13
  422323:	or     ebp,ebp
  422325:	bswap  edx
  422327:	ins    BYTE PTR es:[edi],dx
  422328:	push   es
  422329:	jb     0x4222c7
  42232b:	enter  0xa54f,0x7d
  42232f:	pop    esp
  422330:	imul   ecx,DWORD PTR [edi],0x20
  422333:	pushf  
  422334:	push   ebx
  422335:	pop    edx
  422336:	stc    
  422337:	pop    ecx
  422338:	push   esp
  422339:	fdiv   QWORD PTR [ebp-0x15]
  42233c:	ret    0x14b2
  42233f:	fadd   QWORD PTR [esi+0x43a106df]
  422345:	sbb    DWORD PTR [ecx-0x7d352a97],ebp
  42234b:	sbb    ecx,ebp
  42234d:	lock cld 
  42234f:	jg     0x422324
  422351:	pop    ebp
  422352:	mov    BYTE PTR [ecx-0x6e6f0bc4],0x18
  422359:	aad    0x40
  42235b:	stos   DWORD PTR es:[edi],eax
  42235c:	jge    0x4223da
  42235e:	fnsave [ebx]
  422360:	sbb    edx,0x45
  422363:	or     al,0x8
  422365:	lods   al,BYTE PTR ds:[esi]
  422366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422367:	jg     0x422370
  422369:	cwde   
  42236a:	mov    edi,0x239504b7
  42236f:	pop    es
  422370:	fsubr  DWORD PTR [ebp+0x7be212b0]
  422376:	xchg   edx,eax
  422377:	push   cs
  422378:	int3   
  422379:	popa   
  42237a:	aam    0x5
  42237c:	mov    bl,0x1a
  42237e:	pop    es
  42237f:	push   esi
  422380:	fst    st(7)
  422382:	aaa    
  422383:	dec    edx
  422384:	mov    bl,bl
  422386:	and    al,cl
  422388:	sub    eax,0x526386b1
  42238d:	retf   0xdb55
  422390:	inc    edx
  422391:	pop    ss
  422392:	mov    eax,ds:0x68655a0a
  422397:	mov    esi,db4
  42239a:	aad    0xfd
  42239c:	lea    ecx,[edx-0x17]
  42239f:	scas   eax,DWORD PTR es:[edi]
  4223a0:	enter  0xf340,0xe5
  4223a4:	xor    BYTE PTR ds:0xa8720148,0x87
  4223ab:	cs mov dl,ah
  4223ae:	int    0x3f
  4223b0:	mov    bh,0x18
  4223b2:	mov    dl,0x8b
  4223b4:	addr16 out dx,eax
  4223b6:	jno    0x422360
  4223b8:	repz gs jmp 0x4223be
  4223bc:	pop    esi
  4223bd:	stc    
  4223be:	ror    eax,1
  4223c0:	inc    ebx
  4223c1:	out    0x9f,al
  4223c3:	call   0xbfd59479
  4223c8:	test   BYTE PTR [edi],ch
  4223ca:	scas   al,BYTE PTR es:[edi]
  4223cb:	frstor [esi]
  4223cd:	int    0x80
  4223cf:	int    0xbe
  4223d1:	aad    0xfc
  4223d3:	add    edx,edx
  4223d5:	aam    0x69
  4223d7:	cwde   
  4223d8:	pusha  
  4223d9:	cmp    al,BYTE PTR [ebx-0x4b]
  4223dc:	mov    ah,0xcd
  4223de:	mov    ebp,0x1e541718
  4223e3:	inc    edi
  4223e4:	ins    BYTE PTR es:[edi],dx
  4223e5:	popa   
  4223e6:	lock stc 
  4223e8:	adc    DWORD PTR [ecx],ebp
  4223ea:	test   ebp,esi
  4223ec:	push   ss
  4223ed:	retf   0x8c6a
  4223f0:	and    eax,0x1cf376f9
  4223f5:	cli    
  4223f6:	sahf   
  4223f7:	push   0x38
  4223f9:	mov    DWORD PTR [edx],esp
  4223fb:	sbb    al,dh
  4223fd:	push   eax
  4223fe:	or     eax,0xc79cfc24
  422403:	add    cl,BYTE PTR [ebx+0x45ab316f]
  422409:	arpl   WORD PTR [esi],si
  42240b:	outs   dx,BYTE PTR ds:[esi]
  42240c:	cli    
  42240d:	fsubr  QWORD PTR [edx]
  42240f:	and    cl,ah
  422411:	xchg   bl,cl
  422413:	out    0xe,al
  422415:	out    0x40,al
  422417:	lds    eax,FWORD PTR [edi+0x1e]
  42241a:	idiv   DWORD PTR [edi]
  42241c:	xchg   BYTE PTR [esi-0x722037b3],ah
  422422:	dec    ecx
  422423:	push   ds
  422424:	sub    ecx,ecx
  422426:	fcomp  DWORD PTR [edx-0x3ba1cf3a]
  42242c:	inc    ecx
  42242d:	pop    ds
  42242e:	sti    
  42242f:	jl     0x422453
  422431:	jp     0x422408
  422433:	xor    al,BYTE PTR [edx]
  422435:	ins    BYTE PTR es:[edi],dx
  422436:	pop    esp
  422437:	push   eax
  422438:	rcr    BYTE PTR [edx+ebp*2],cl
  42243b:	arpl   WORD PTR [esi],di
  42243d:	fst    DWORD PTR [esi-0x4a]
  422440:	cmp    BYTE PTR [esi],ah
  422442:	inc    ebx
  422443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422444:	jmp    0x1476136f
  422449:	loope  0x422411
  42244b:	cmp    dh,BYTE PTR [eax-0x77dce73d]
  422451:	jae    0x422443
  422453:	and    dl,BYTE PTR [ecx-0x40]
  422456:	pop    edx
  422457:	lea    ebp,[eax+0x71757f15]
  42245d:	(bad)  
  42245e:	fidiv  WORD PTR [edi+0x17]
  422461:	mov    ah,0xee
  422463:	xor    bl,bl
  422465:	(bad)  
  422466:	addr16 ds jmp 0xda6808fe
  42246d:	sub    ecx,DWORD PTR [edi+0x7cfcd379]
  422473:	ds dec eax
  422475:	test   al,0xd1
  422477:	jnp    0x4224dc
  422479:	jmp    0x4224d5
  42247b:	pop    ebp
  42247c:	mov    al,0x20
  42247e:	das    
  42247f:	imul   esi,DWORD PTR [ebx+0x7],0x60
  422483:	push   esi
  422484:	xchg   BYTE PTR [ebp-0x7d4ce9e9],dl
  42248a:	mov    ebp,DWORD PTR [ecx-0x2a]
  42248d:	xor    eax,0x71cf3cbb
  422492:	aam    0xe3
  422494:	mov    ds:0xa62d8b71,eax
  422499:	test   eax,0x8b587646
  42249e:	(bad)  [edx+edx*4+0xdb98905]
  4224a5:	cmp    al,0x18
  4224a7:	pop    esi
  4224a8:	call   DWORD PTR ds:0xa0ff7447
  4224ae:	test   DWORD PTR [ecx-0x14],eax
  4224b1:	push   ecx
  4224b2:	mov    esp,0x81d290de
  4224b7:	jnp    0x42244f
  4224b9:	das    
  4224ba:	mov    WORD PTR [ebp+eax*2-0x22],fs
  4224be:	outs   dx,DWORD PTR ds:[esi]
  4224bf:	xchg   edx,eax
  4224c0:	sub    edx,DWORD PTR [edi+0x6a7bee14]
  4224c6:	and    DWORD PTR [eax+ebx*8-0x71],ecx
  4224ca:	imul   ebx,ebx,0x903b6c80
  4224d0:	ja     0x42245a
  4224d2:	repz imul edi,DWORD PTR [ebx+ebx*2+0x51db6274],0x99436ef6
  4224de:	xchg   DWORD PTR [edi-0x487d8e56],ebp
  4224e4:	push   cs
  4224e5:	daa    
  4224e6:	(bad)  
  4224e7:	pop    ds
  4224e8:	imul   ebp,DWORD PTR [ecx],0x628c5c7b
  4224ee:	(bad)  
  4224ef:	cmc    
  4224f0:	inc    ebx
  4224f1:	pop    ecx
  4224f2:	mov    DWORD PTR ds:0xedafda8e,eax
  4224f8:	jge    0x42255a
  4224fa:	pushf  
  4224fb:	stc    
  4224fc:	leave  
  4224fd:	sti    
  4224fe:	push   0x37
  422500:	fisttp WORD PTR [ecx-0x799febd8]
  422506:	mov    ah,BYTE PTR [ebp-0x64e5d035]
  42250c:	fnsave [edx]
  42250e:	enter  0xf3,0xaa
  422512:	popa   
  422513:	add    esi,DWORD PTR [esi-0xdfa8b2c]
  422519:	popa   
  42251a:	push   esp
  42251b:	xor    al,0x1e
  42251d:	sar    DWORD PTR ds:0x21355b14,0x8f
  422524:	jmp    0x36f3:0xc8ffb135
  42252b:	pop    ebx
  42252c:	cwde   
  42252d:	mov    ecx,0x1bdabd11
  422532:	mov    al,ds:0x5520d246
  422537:	mov    bl,dl
  422539:	add    eax,0x5256e8f6
  42253e:	ins    BYTE PTR es:[edi],dx
  42253f:	xchg   BYTE PTR [eax],ah
  422541:	clc    
  422542:	retf   
  422543:	xchg   edi,eax
  422544:	repnz sbb ebx,edi
  422547:	(bad)  
  422548:	mov    eax,ds:0xcdc7c350
  42254d:	aaa    
  42254e:	add    ecx,ebp
  422550:	jle    0x422586
  422552:	cmp    cl,BYTE PTR [bx+di-0x4b02]
  422557:	sbb    eax,0x6d48eff6
  42255c:	mov    al,ds:0x8bfa4e4e
  422561:	adc    esp,DWORD PTR ds:0xe8e355dc
  422567:	ret    0xfade
  42256a:	(bad)  
  42256b:	(bad)  
  42256c:	mov    ah,0xa
  42256e:	cmp    DWORD PTR [eax+0x42],eax
  422571:	cmp    ah,BYTE PTR ds:0xbff3324c
  422577:	shr    bl,cl
  422579:	fcomp  QWORD PTR [ebx+0x89368cd]
  42257f:	imul   edi,DWORD PTR [esi+eax*2-0x20dfa367],0xffffffd4
  422587:	xor    BYTE PTR [ebx+0x7478bcc5],0x7b
  42258e:	mov    eax,0xa1820576
  422593:	push   ss
  422594:	jne    0x42252f
  422596:	aad    0xd4
  422598:	ins    BYTE PTR es:[edi],dx
  422599:	add    al,0xb
  42259b:	mov    al,0x91
  42259d:	(bad)  
  42259e:	and    ch,bh
  4225a0:	leave  
  4225a1:	mov    ch,0x46
  4225a3:	xlat   BYTE PTR ds:[ebx]
  4225a4:	out    dx,eax
  4225a5:	neg    DWORD PTR [ecx+edx*2]
  4225a8:	pop    es
  4225a9:	out    dx,eax
  4225aa:	mov    edx,0x8455caac
  4225af:	out    dx,eax
  4225b0:	(bad)  
  4225b1:	adc    al,cl
  4225b3:	mov    bl,0x27
  4225b5:	pop    edx
  4225b6:	ss stos DWORD PTR es:[edi],eax
  4225b8:	stos   BYTE PTR es:[edi],al
  4225b9:	neg    BYTE PTR [esi-0x7f]
  4225bc:	dec    edx
  4225bd:	push   ds
  4225be:	popf   
  4225bf:	lods   eax,DWORD PTR ds:[esi]
  4225c0:	xor    eax,0x1728498
  4225c5:	pop    ebp
  4225c6:	es push esi
  4225c8:	pop    edi
  4225c9:	fst    DWORD PTR [ebp+0x39]
  4225cc:	jge    0x422607
  4225ce:	and    eax,0x65987a3c
  4225d3:	mov    al,ds:0x97d70945
  4225d8:	fadd   QWORD PTR [esi]
  4225da:	sbb    eax,0x6b519a54
  4225df:	fst    QWORD PTR [esi+0x1f]
  4225e2:	ins    BYTE PTR es:[edi],dx
  4225e3:	mov    eax,ds:0x2722a9
  4225e8:	jle    0x422628
  4225ea:	lahf   
  4225eb:	push   ebp
  4225ec:	push   ds
  4225ed:	fistp  QWORD PTR [ecx-0x7e]
  4225f0:	mov    al,0xd9
  4225f2:	sti    
  4225f3:	dec    ecx
  4225f4:	test   al,0xa1
  4225f6:	push   edi
  4225f7:	push   esp
  4225f8:	push   ebx
  4225f9:	push   cs
  4225fa:	mov    DWORD PTR [edi+0x4d],ecx
  4225fd:	pop    ebx
  4225fe:	sub    WORD PTR [ebp+0x18],sp
  422602:	outs   dx,BYTE PTR ds:[esi]
  422603:	xchg   ebx,eax
  422604:	jnp    0x422637
  422606:	sti    
  422607:	push   ebp
  422608:	jp     0x422644
  42260a:	ja     0x4225bd
  42260c:	jne    0x4225b6
  42260e:	les    esi,FWORD PTR [edx]
  422610:	das    
  422611:	das    
  422612:	mov    ecx,0x8e96633c
  422617:	cmp    DWORD PTR [eax-0x58],ebx
  42261a:	lods   al,BYTE PTR ds:[esi]
  42261b:	mov    dl,0x78
  42261d:	sbb    al,0xc1
  42261f:	popf   
  422620:	lea    edi,ds:0xd74abee0
  422626:	xor    ch,BYTE PTR [eax]
  422628:	sbb    bh,cl
  42262a:	enter  0x73a,0x9a
  42262e:	mul    ebp
  422630:	or     DWORD PTR [ebp-0x3d],ecx
  422633:	mov    bl,0x28
  422635:	dec    ebp
  422636:	push   es
  422637:	adc    BYTE PTR [ebx],dl
  422639:	jmp    0x5328:0xafb0c861
  422640:	xchg   BYTE PTR [ebx-0x64553f92],dh
  422646:	cdq    
  422647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422648:	clc    
  422649:	and    bh,BYTE PTR [edx+eiz*8+0x5e106d76]
  422650:	dec    ebx
  422651:	rcr    BYTE PTR [ebx-0x64],1
  422654:	test   al,0x1f
  422656:	xchg   ebp,eax
  422657:	xchg   ebp,eax
  422658:	daa    
  422659:	pop    ds
  42265a:	jbe    0x422606
  42265c:	jmp    0x4226ab
  42265e:	addr16 mov ds:0x5df7,eax
  422662:	imul   edi,DWORD PTR [eax-0x50],0x66289fb9
  422669:	or     BYTE PTR [esi+0x9],ah
  42266c:	mov    dl,0xeb
  42266e:	aam    0xd9
  422670:	jecxz  0x4226e5
  422672:	(bad)  
  422673:	xchg   esp,eax
  422674:	and    BYTE PTR [eax],bh
  422676:	mov    ebp,0x77278eac
  42267b:	aaa    
  42267c:	pop    ss
  42267d:	scas   al,BYTE PTR es:[edi]
  42267e:	mov    bl,0x2e
  422680:	or     DWORD PTR [edi+eiz*4+0x0],eax
  422684:	xchg   edx,eax
  422685:	rol    BYTE PTR [eax+0x4f],1
  422688:	loopne 0x422619
  42268a:	jb     0x4226ea
  42268c:	nop
  42268d:	dec    ebx
  42268e:	pop    esp
  42268f:	xchg   esi,eax
  422690:	lods   al,BYTE PTR ds:[esi]
  422691:	enter  0x473,0xc
  422695:	push   ss
  422696:	pop    ebp
  422697:	rol    BYTE PTR [edx-0x13],1
  42269a:	std    
  42269b:	(bad)  
  42269c:	cld    
  42269d:	dec    esi
  42269e:	xor    DWORD PTR [esi+0x42],edx
  4226a1:	imul   ebx,DWORD PTR [edx-0x890e937],0x18
  4226a8:	and    DWORD PTR [ebp+ecx*2+0x3b39ef0b],ebp
  4226af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b0:	(bad)  
  4226b1:	xor    ebx,DWORD PTR [edi-0x12]
  4226b4:	imul   ebp,esp,0xffffffe0
  4226b7:	ins    BYTE PTR es:[edi],dx
  4226b8:	mov    ds:0xf6084e42,al
  4226bd:	mov    ecx,0x1bb19295
  4226c2:	mov    DWORD PTR [edx],ecx
  4226c4:	mov    ch,BYTE PTR [eax+0x43]
  4226c7:	sub    edi,DWORD PTR [esi]
  4226c9:	(bad)
  4226cf:	fwait
  4226d0:	je     0x42273e
  4226d2:	rol    BYTE PTR [ebx],0x9b
  4226d5:	and    edi,DWORD PTR [ebx-0x6797abec]
  4226db:	sbb    dl,cl
  4226dd:	mov    ebx,0xead0c83e
  4226e2:	fld    st(0)
  4226e4:	lods   al,BYTE PTR ds:[esi]
  4226e5:	add    al,0x26
  4226e7:	xor    edx,DWORD PTR [edi]
  4226e9:	fs dec esi
  4226eb:	jno    0x4226ef
  4226ed:	cmp    cl,BYTE PTR [ebx]
  4226ef:	push   0x93c977f2
  4226f4:	xchg   ecx,eax
  4226f5:	mov    ebp,0x182c55ef
  4226fa:	das    
  4226fb:	mov    ch,0x56
  4226fd:	in     eax,dx
  4226fe:	lock in eax,dx
  422700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422701:	xchg   esi,eax
  422702:	sub    BYTE PTR [ecx+0x556a09eb],dl
  422708:	jge    0x422691
  42270a:	aaa    
  42270b:	xchg   esi,eax
  42270c:	popa   
  42270d:	out    0xe5,al
  42270f:	scas   al,BYTE PTR es:[edi]
  422710:	in     al,0x97
  422712:	sti    
  422713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422714:	iret   
  422715:	sbb    DWORD PTR [eax+0x21],edx
  422718:	lods   al,BYTE PTR ds:[esi]
  422719:	sbb    al,0x95
  42271b:	not    DWORD PTR [eax-0x5e0e1af3]
  422721:	xor    DWORD PTR [edx-0x578d4524],ebx
  422727:	and    al,0x18
  422729:	in     eax,dx
  42272a:	(bad)  
  42272b:	or     dl,BYTE PTR [edx+edx*2]
  42272e:	aas    
  42272f:	push   cs
  422730:	fdivr  DWORD PTR [esi-0x6bccc3c5]
  422736:	xor    al,0x29
  422738:	ss jb  0x422746
  42273b:	mul    edi
  42273d:	cmp    bh,BYTE PTR [edx]
  42273f:	cmp    dh,BYTE PTR [edx-0x6f]
  422742:	cmp    eax,0xabf90c56
  422747:	dec    eax
  422748:	adc    DWORD PTR [edi],ebp
  42274a:	mov    bh,BYTE PTR [eax+0x74d6812d]
  422750:	cmp    al,al
  422752:	pop    edi
  422753:	sar    BYTE PTR [ebp+0x679401af],0x53
  42275a:	sbb    al,0xe8
  42275c:	cld    
  42275d:	mov    al,0x9b
  42275f:	mov    cl,0x2f
  422761:	dec    eax
  422762:	outs   dx,BYTE PTR ds:[esi]
  422763:	cld    
  422764:	xchg   DWORD PTR [esi-0x8],ebx
  422767:	mov    esp,0x5fb135d6
  42276c:	loop   0x422716
  42276e:	lahf   
  42276f:	mov    dl,0x65
  422771:	add    cl,BYTE PTR [esi+0x23]
  422774:	cld    
  422775:	push   0x55200075
  42277a:	sub    ebp,DWORD PTR [ebp+0x37487920]
  422780:	mov    dh,0x4a
  422782:	push   0x583b6a38
  422787:	out    0x3d,eax
  422789:	int    0x65
  42278b:	dec    eax
  42278c:	pop    esp
  42278d:	jo     0x422745
  42278f:	rcl    BYTE PTR [ebx],cl
  422791:	jo     0x422730
  422793:	adc    eax,0x5ca764ad
  422798:	mov    ds:0xc7a68431,eax
  42279d:	sub    cl,BYTE PTR [ecx-0x7e946037]
  4227a3:	xchg   ebp,eax
  4227a4:	add    eax,0x23cae6dd
  4227a9:	cld    
  4227aa:	xor    al,BYTE PTR [eax-0x7c]
  4227ad:	ret    
  4227ae:	jge    0x422794
  4227b0:	in     eax,0x8f
  4227b2:	mov    cl,BYTE PTR [edi]
  4227b4:	repz inc ebx
  4227b6:	test   DWORD PTR [ecx],0xf2f18845
  4227bc:	xchg   BYTE PTR [eax],bl
  4227be:	inc    ebx
  4227bf:	jg     0x422789
  4227c1:	xchg   esi,eax
  4227c2:	ins    BYTE PTR es:[edi],dx
  4227c3:	ins    BYTE PTR es:[edi],dx
  4227c4:	push   ecx
  4227c5:	es in  eax,dx
  4227c7:	pop    edx
  4227c8:	pop    ss
  4227c9:	shr    DWORD PTR [ebx+0x7f85a985],0x9d
  4227d0:	shr    BYTE PTR [edx-0x7],cl
  4227d3:	cwde   
  4227d4:	adc    BYTE PTR ds:0x8314a18a,al
  4227da:	mov    eax,ss:0xaabfd885
  4227e0:	out    0x59,al
  4227e2:	push   edi
  4227e3:	pop    esp
  4227e4:	cmp    al,0xb6
  4227e6:	cmp    bh,BYTE PTR [edx]
  4227e8:	(bad)  
  4227e9:	mov    ah,0x20
  4227eb:	in     eax,0xcb
  4227ed:	and    al,0xe2
  4227ef:	adc    BYTE PTR [edi-0x69d6bd2f],bh
  4227f5:	repnz lds esp,FWORD PTR [edx+ebx*1-0x76ca9ca2]
  4227fd:	sub    bh,BYTE PTR [eax+0x5]
  422800:	add    eax,eax
  422802:	repz xor eax,esp
  422805:	arpl   WORD PTR [ebp+0x5e980891],si
  42280b:	cmp    bh,cl
  42280d:	(bad)
  422810:	sbb    ebp,DWORD PTR [eax-0x11]
  422813:	gs js  0x4227f0
  422816:	out    dx,eax
  422817:	mov    esp,0xc7163d69
  42281c:	push   0xedde6134
  422821:	nop
  422822:	pop    edi
  422823:	cmp    ecx,DWORD PTR [edx]
  422825:	bound  eax,QWORD PTR [edx]
  422827:	(bad)  
  422828:	int3   
  422829:	pushw  ds
  42282b:	sbb    ax,0x56a1
  42282f:	enter  0x2d5f,0xca
  422833:	js     0x4227f2
  422835:	addr16 loopne 0x422859
  422838:	push   ds
  422839:	xor    al,0x29
  42283b:	js     0x422877
  42283d:	mov    ds:0x3218888f,eax
  422842:	xchg   edi,eax
  422843:	add    eax,DWORD PTR [ebx]
  422845:	mov    ebp,0x9baa9ed7
  42284a:	lock sbb eax,0x64514468
  422850:	mov    al,0xb5
  422852:	outs   dx,DWORD PTR ds:[esi]
  422853:	jo     0x422867
  422855:	dec    esp
  422856:	stos   BYTE PTR es:[edi],al
  422857:	sbb    bl,BYTE PTR [ebx-0x42]
  42285a:	adc    eax,0x28278b3b
  42285f:	lahf   
  422860:	dec    eax
  422861:	idiv   BYTE PTR [ebx+0x1d]
  422864:	mov    DWORD PTR [esi+0x6132a44],ecx
  42286a:	pop    ecx
  42286b:	inc    esp
  42286c:	nop
  42286d:	sub    al,0xc7
  42286f:	mov    eax,ds:0x52960910
  422874:	jle    0x422898
  422876:	stos   DWORD PTR es:[edi],eax
  422877:	imul   ecx,DWORD PTR [ebx],0x439198b8
  42287d:	mov    ds:0xd655b509,al
  422882:	jmp    0x4228c9
  422884:	push   edx
  422885:	push   ss
  422886:	sbb    DWORD PTR [eax+edx*1],edx
  422889:	fmul   QWORD PTR [eax-0x1a]
  42288c:	dec    ecx
  42288d:	int3   
  42288e:	inc    edx
  42288f:	in     al,0xbb
  422891:	pop    ecx
  422892:	jnp    0x42285b
  422894:	rcl    BYTE PTR [ebp+0x36842a08],1
  42289a:	push   esi
  42289b:	(bad)  
  42289c:	int    0xba
  42289e:	mov    esi,0x5b900704
  4228a3:	(bad)  
  4228a4:	cmc    
  4228a5:	push   esi
  4228a6:	cmp    eax,0xd8184aea
  4228ab:	mov    ds:0x5339e80d,eax
  4228b0:	dec    eax
  4228b1:	in     al,0x3a
  4228b3:	cs mov ch,0x50
  4228b6:	pushf  
  4228b7:	xchg   ebp,eax
  4228b8:	cmp    BYTE PTR [edi+0x1b8f2fce],ch
  4228be:	pop    ss
  4228bf:	imul   edx,DWORD PTR [ebx],0x0
  4228c2:	fcmove st,st(3)
  4228c4:	mov    ah,0x6b
  4228c6:	das    
  4228c7:	or     al,BYTE PTR [eax+0x7b]
  4228ca:	jmp    0x42288c
  4228cc:	mov    dl,0x8c
  4228ce:	ror    BYTE PTR [ecx-0x72],1
  4228d1:	int3   
  4228d2:	jmp    0x422875
  4228d4:	(bad)  
  4228d5:	push   ecx
  4228d6:	cmp    BYTE PTR [ebx+0x9],ah
  4228d9:	into   
  4228da:	mov    al,bl
  4228dc:	or     ch,bh
  4228de:	fwait
  4228df:	jl     0x4228be
  4228e1:	icebp  
  4228e2:	test   eax,edi
  4228e4:	and    BYTE PTR [edx-0x40],0x1a
  4228e8:	rcl    edx,cl
  4228ea:	mov    ecx,0x559e99b5
  4228ef:	fsubp  st(3),st
  4228f1:	sbb    DWORD PTR [edi-0x33],ebp
  4228f4:	cmp    edx,esi
  4228f6:	imul   DWORD PTR [ebp+0x7ebba1e8]
  4228fc:	(bad)  
  4228fd:	cmp    eax,DWORD PTR [ecx-0x6991a991]
  422903:	(bad)  
  422904:	retf   0xae
  422907:	repnz mov edx,0xacd72096
  42290d:	rcl    cl,cl
  42290f:	inc    ecx
  422910:	stos   BYTE PTR es:[di],al
  422912:	and    eax,0xc0332991
  422917:	mov    esp,ebp
  422919:	pop    ebp
  42291a:	ret    0x10
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
