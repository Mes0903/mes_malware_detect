
13c35d1cc60d3212c5db85784671f28d8917c0ae3da344dc5b8004c81081e142.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	push   ebx
  401007:	mov    DWORD PTR [ebp-0x48],0x0
  40100e:	mov    DWORD PTR [ebp-0x18],0x0
  401015:	mov    DWORD PTR [ebp-0x70],0x0
  40101c:	mov    DWORD PTR [ebp-0x60],0x0
  401023:	mov    DWORD PTR [ebp-0x8],0x0
  40102a:	mov    DWORD PTR [ebp-0x6c],0x0
  401031:	mov    DWORD PTR [ebp-0x68],0x0
  401038:	mov    DWORD PTR [ebp-0x14],0x0
  40103f:	mov    DWORD PTR [ebp-0x4c],0x0
  401046:	mov    DWORD PTR [ebp-0x10],0x0
  40104d:	mov    DWORD PTR [ebp-0x58],0x0
  401054:	mov    DWORD PTR [ebp-0x4],0x0
  40105b:	mov    DWORD PTR [ebp-0x5c],0x0
  401062:	mov    DWORD PTR [ebp-0x30],0x0
  401069:	mov    DWORD PTR [ebp-0x54],0x0
  401070:	mov    DWORD PTR [ebp-0x2c],0x0
  401077:	mov    DWORD PTR [ebp-0x50],0x0
  40107e:	mov    DWORD PTR [ebp-0xc],0x0
  401085:	mov    eax,ds:0x449e08
  40108a:	mov    DWORD PTR [ebp-0x28],eax
  40108d:	mov    ecx,DWORD PTR ds:0x449e0c
  401093:	mov    DWORD PTR [ebp-0x24],ecx
  401096:	mov    edx,DWORD PTR ds:0x449e10
  40109c:	mov    DWORD PTR [ebp-0x20],edx
  40109f:	mov    al,ds:0x449e14
  4010a4:	mov    BYTE PTR [ebp-0x1c],al
  4010a7:	mov    ecx,DWORD PTR ds:0x449e18
  4010ad:	mov    DWORD PTR [ebp-0x40],ecx
  4010b0:	mov    edx,DWORD PTR ds:0x449e1c
  4010b6:	mov    DWORD PTR [ebp-0x3c],edx
  4010b9:	mov    eax,ds:0x449e20
  4010be:	mov    DWORD PTR [ebp-0x38],eax
  4010c1:	mov    cx,WORD PTR ds:0x449e24
  4010c8:	mov    WORD PTR [ebp-0x34],cx
  4010cc:	mov    dl,BYTE PTR ds:0x449e26
  4010d2:	mov    BYTE PTR [ebp-0x32],dl
  4010d5:	mov    DWORD PTR [ebp-0x30],0x40
  4010dc:	lea    eax,[ebp-0x40]
  4010df:	push   eax
  4010e0:	lea    ecx,[ebp-0x10]
  4010e3:	push   ecx
  4010e4:	call   DWORD PTR ds:0x418000
  4010ea:	test   eax,eax
  4010ec:	je     0x4167b5
  4010f2:	mov    edx,DWORD PTR [ebp-0x10]
  4010f5:	add    edx,0x1
  4010f8:	mov    DWORD PTR [ebp-0x10],edx
  4010fb:	retf   0xb579
  4010fe:	adc    DWORD PTR [eax],ecx
  401100:	ret    
  401101:	fisubr DWORD PTR [eax+0x33cec266]
  401107:	mov    DWORD PTR [edi-0x23],ebx
  40110a:	pop    eax
  40110b:	cmp    BYTE PTR [esi-0x61],al
  40110e:	stos   BYTE PTR es:[edi],al
  40110f:	div    dh
  401111:	add    bl,BYTE PTR ds:0x8d7c8b07
  401117:	in     al,0x26
  401119:	out    dx,eax
  40111a:	cwde   
  40111b:	xor    edx,DWORD PTR [edi+0x6e]
  40111e:	ja     0x4010d8
  401120:	jle    0x4010ad
  401122:	rcr    DWORD PTR [edi-0x6c],1
  401125:	outs   dx,DWORD PTR ds:[esi]
  401126:	cmp    al,BYTE PTR [edi]
  401128:	sbb    DWORD PTR [edx-0x6bda72b8],0x19684aa2
  401132:	inc    ecx
  401133:	loope  0x401138
  401135:	dec    esp
  401136:	in     eax,0xf7
  401138:	pop    ss
  401139:	(bad)  
  40113a:	xor    al,ch
  40113c:	xlat   BYTE PTR ds:[ebx]
  40113d:	lea    edx,ss:[esi]
  401140:	jp     0x4011a1
  401142:	pop    ds
  401143:	cld    
  401144:	sub    eax,DWORD PTR [edx]
  401146:	popa   
  401147:	pop    edi
  401148:	out    dx,al
  401149:	xchg   edx,eax
  40114a:	push   edi
  40114b:	ins    DWORD PTR es:[edi],dx
  40114c:	pop    es
  40114d:	aaa    
  40114e:	fwait
  40114f:	or     ah,dl
  401151:	sub    al,0x35
  401153:	pop    esp
  401154:	cmp    DWORD PTR [ebx-0x49385467],edi
  40115a:	out    dx,al
  40115b:	mov    ecx,DWORD PTR es:[eax+0x21]
  40115f:	fisttp QWORD PTR [ebp-0x11]
  401162:	mov    BYTE PTR [edx+0x4c027ba7],cl
  401168:	push   edi
  401169:	or     BYTE PTR [edi+0x263af6b2],bl
  40116f:	xlat   BYTE PTR ds:[ebx]
  401170:	push   0x15
  401172:	cmp    BYTE PTR [eax-0x1044d74f],ah
  401178:	ja     0x401199
  40117a:	push   eax
  40117b:	ror    BYTE PTR [eax],cl
  40117d:	fstp   DWORD PTR cs:[ebp+0x7e]
  401181:	shl    bh,1
  401183:	jne    0x4011cb
  401185:	loop   0x40116c
  401187:	inc    edx
  401188:	data16 cmp dl,cl
  40118b:	aas    
  40118c:	outs   dx,DWORD PTR ds:[esi]
  40118d:	outs   dx,BYTE PTR ds:[esi]
  40118e:	enter  0x3e11,0x4b
  401192:	jl     0x40117a
  401194:	or     esi,DWORD PTR [esi]
  401196:	sahf   
  401197:	dec    ebp
  401198:	(bad)  
  401199:	(bad)  
  40119a:	std    
  40119b:	mov    ds,WORD PTR [ebx-0x46452a5b]
  4011a1:	test   eax,0xbf0c4501
  4011a6:	in     eax,dx
  4011a7:	add    eax,0x186cf0f2
  4011ac:	pop    es
  4011ad:	test   BYTE PTR [ebp-0x7f],ah
  4011b0:	dec    edx
  4011b1:	sub    dh,BYTE PTR [ecx-0x32921ad5]
  4011b7:	arpl   WORD PTR [edx-0x5a],bx
  4011ba:	loopne 0x40119d
  4011bc:	les    edi,FWORD PTR [esp+ecx*2+0x4adab4be]
  4011c3:	loope  0x40117d
  4011c5:	ret    0x79c2
  4011c8:	pop    esp
  4011c9:	pop    edx
  4011ca:	pushf  
  4011cb:	adc    eax,0x9092d2e6
  4011d0:	jmp    0x401206
  4011d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011d3:	hlt    
  4011d4:	xchg   BYTE PTR [edx-0x45115217],cl
  4011da:	sub    esp,DWORD PTR [ebp+0x2e54e64a]
  4011e0:	fcom   DWORD PTR [esi-0x74]
  4011e3:	push   esi
  4011e4:	aad    0xbe
  4011e6:	mov    eax,0xc16faa2d
  4011eb:	retf   0x5ac7
  4011ee:	mov    ch,0xb6
  4011f0:	mov    ecx,0x1dd00492
  4011f5:	(bad)  
  4011f6:	cmc    
  4011f7:	push   eax
  4011f8:	stos   DWORD PTR es:[edi],eax
  4011f9:	aam    0x15
  4011fb:	pop    esi
  4011fc:	rcl    BYTE PTR [eax+0x54],1
  4011ff:	mov    eax,ds:0xfee467e3
  401204:	dec    edi
  401205:	cli    
  401206:	mov    ebx,0x108dc1b8
  40120b:	mov    ebx,0xfc97161
  401210:	sub    edi,DWORD PTR [eax-0x3e]
  401213:	jns    0x4011d5
  401215:	pop    edx
  401216:	dec    ebp
  401217:	mov    esi,edi
  401219:	loope  0x40127f
  40121b:	loop   0x401207
  40121d:	add    al,dl
  40121f:	jns    0x4011af
  401221:	jle    0x401262
  401223:	adc    BYTE PTR [ebp+0x20411d91],dh
  401229:	std    
  40122a:	cmp    esi,DWORD PTR [eax]
  40122c:	(bad)  
  40122d:	mov    esi,0x12639fce
  401232:	sub    eax,0x9646f243
  401237:	aad    0xe
  401239:	mov    eax,ds:0x77abbf5
  40123e:	jb     0x40126d
  401240:	push   cs
  401241:	xchg   esi,eax
  401242:	pop    ss
  401243:	sub    DWORD PTR [ecx-0x2c],edi
  401246:	sbb    al,0xee
  401248:	xor    eax,0xe174bb45
  40124d:	inc    eax
  40124e:	inc    ecx
  40124f:	out    dx,eax
  401250:	xlat   BYTE PTR ds:[ebx]
  401251:	jp     0x40125d
  401253:	ss mov al,0xbc
  401256:	xchg   edi,eax
  401257:	fistp  DWORD PTR [edi]
  401259:	cli    
  40125a:	leave  
  40125b:	test   al,0xf1
  40125d:	mov    al,ds:0xcab0eb61
  401262:	sub    al,0xa6
  401264:	cmp    BYTE PTR [ecx],cl
  401266:	or     DWORD PTR [edx],esp
  401268:	push   ss
  401269:	nop
  40126a:	fnstcw WORD PTR [ebx-0x1b]
  40126d:	(bad)  
  40126e:	inc    esp
  40126f:	inc    eax
  401270:	ins    BYTE PTR es:[edi],dx
  401271:	push   eax
  401272:	add    dh,bh
  401274:	xchg   ebx,eax
  401275:	jns    0x401272
  401277:	vdivps ymm1,ymm3,YMMWORD PTR [edi+0x62]
  40127c:	loopne 0x4012d8
  40127e:	pop    eax
  40127f:	daa    
  401280:	icebp  
  401281:	pop    esp
  401282:	or     al,0xce
  401284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401285:	sub    eax,DWORD PTR [esi-0x1e]
  401288:	push   edx
  401289:	mov    ds:0xafe01292,eax
  40128e:	ins    DWORD PTR es:[edi],dx
  40128f:	test   DWORD PTR [ebx],esi
  401291:	sbb    esi,ecx
  401293:	dec    ecx
  401294:	xchg   edx,eax
  401295:	pop    eax
  401296:	and    eax,0x6462a335
  40129b:	xor    eax,DWORD PTR [eax-0x3662f677]
  4012a1:	sbb    BYTE PTR [ebx+edx*4+0x25],dl
  4012a5:	xlat   BYTE PTR ds:[ebx]
  4012a6:	data16 mov ah,0x1d
  4012a9:	popa   
  4012aa:	ja     0x40124d
  4012ac:	xlat   BYTE PTR ds:[ebx]
  4012ad:	clc    
  4012ae:	dec    esi
  4012af:	cmp    DWORD PTR [ebp-0x1c],eax
  4012b2:	loop   0x401315
  4012b4:	stos   BYTE PTR es:[edi],al
  4012b5:	pop    ss
  4012b6:	pusha  
  4012b7:	push   esp
  4012b8:	data16 sbb BYTE PTR [edx-0xd],cl
  4012bc:	push   edi
  4012bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012bf:	stos   DWORD PTR es:[edi],eax
  4012c0:	aam    0x77
  4012c2:	ja     0x4012f5
  4012c4:	dec    esp
  4012c5:	(bad)  
  4012c6:	jnp    0x40131b
  4012c8:	leave  
  4012c9:	xor    al,0x71
  4012cb:	out    0x9e,al
  4012cd:	imul   ebx,DWORD PTR [eax],0x5d52573b
  4012d3:	std    
  4012d4:	jmp    0xe79a:0xf780529e
  4012db:	loopne 0x4012e9
  4012dd:	cdq    
  4012de:	fnsave [ecx-0xe]
  4012e1:	ror    BYTE PTR [ebx-0x5c],cl
  4012e4:	mov    ecx,0xf09bb7ed
  4012e9:	xor    BYTE PTR [edi],dl
  4012eb:	pop    ecx
  4012ec:	sbb    DWORD PTR [esi+0x6d07dd4d],edi
  4012f2:	cmp    DWORD PTR [edx-0x6e0951f1],esp
  4012f8:	push   0x1f
  4012fa:	jge    0x40135b
  4012fc:	dec    ecx
  4012fd:	int3   
  4012fe:	push   0xfb9775b3
  401303:	(bad)  
  401304:	mov    edi,0xe915a42c
  401309:	hlt    
  40130a:	inc    esi
  40130b:	ins    DWORD PTR es:[edi],dx
  40130c:	aas    
  40130d:	or     al,0x66
  40130f:	les    ebp,FWORD PTR [eax]
  401311:	int    0x45
  401313:	dec    ecx
  401314:	lods   al,BYTE PTR ds:[esi]
  401315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401316:	sti    
  401317:	pop    es
  401318:	std    
  401319:	inc    esi
  40131a:	ret    
  40131b:	fs (bad) 
  40131d:	repnz clc 
  40131f:	fs pop es
  401321:	daa    
  401322:	out    0xf3,al
  401324:	mov    bh,BYTE PTR [esp+edx*8]
  401327:	stc    
  401328:	out    0x32,eax
  40132a:	xor    ebx,DWORD PTR [ecx+0x10]
  40132d:	adc    bl,BYTE PTR [edi-0x4a42ae2a]
  401333:	xchg   ecx,eax
  401334:	jmp    0xe014:0xf58ae18b
  40133b:	mov    al,ds:0x95e9ee43
  401340:	push   cs
  401341:	xor    al,0xcb
  401343:	jl     0x401325
  401345:	cmp    ch,BYTE PTR [edx+0x7e]
  401348:	mov    al,cl
  40134a:	shl    DWORD PTR ds:0x6f59c542,1
  401350:	add    BYTE PTR ds:0xe7a279d5,0x2b
  401357:	sbb    DWORD PTR [ecx],ebx
  401359:	jl     0x401378
  40135b:	je     0x401304
  40135d:	bound  esp,QWORD PTR [ebp-0x50]
  401360:	cmc    
  401361:	repz hlt 
  401363:	and    DWORD PTR [ecx],edi
  401365:	jne    0x4013e5
  401367:	fadd   QWORD PTR [eax+0xbbeee58]
  40136d:	inc    ebx
  40136e:	xchg   ebp,eax
  40136f:	sahf   
  401370:	es cwde 
  401372:	sbb    al,0x52
  401374:	lds    ebx,FWORD PTR [edi+0x4b39a60e]
  40137a:	dec    ebp
  40137b:	adc    DWORD PTR [esp+ecx*4+0x77],0x7cc1d6a6
  401383:	cs mov edi,0x47a71408
  401389:	jmp    DWORD PTR [ebx-0x4b]
  40138c:	lds    esi,FWORD PTR ds:0x92402e27
  401392:	std    
  401393:	ins    BYTE PTR es:[edi],dx
  401394:	mov    al,0xf3
  401396:	sahf   
  401397:	mov    dl,0x76
  401399:	jns    0x40141a
  40139b:	out    0xbf,al
  40139d:	ins    DWORD PTR es:[edi],dx
  40139e:	imul   ebx,edx,0x55
  4013a1:	dec    edi
  4013a2:	sbb    ecx,DWORD PTR [edx]
  4013a4:	fidivr WORD PTR [eax+edx*2+0x1e3e4baa]
  4013ab:	xchg   DWORD PTR [ecx-0x20],edi
  4013ae:	outs   dx,BYTE PTR ds:[esi]
  4013af:	jae    0x401340
  4013b1:	lds    eax,FWORD PTR [eax+ebp*1+0x2d083315]
  4013b8:	sbb    bl,BYTE PTR [ebp+0x15]
  4013bb:	mov    ebx,0x86b46f66
  4013c0:	mov    cl,0xdb
  4013c2:	rol    esp,cl
  4013c4:	cmp    eax,0x514c69ea
  4013c9:	mov    ss:0x8b86d99d,al
  4013cf:	inc    edi
  4013d0:	inc    edi
  4013d1:	mov    eax,0x61031dea
  4013d6:	bound  edx,QWORD PTR [bp+di+0x227]
  4013db:	call   0x7c47cd18
  4013e0:	shr    bh,0xd1
  4013e3:	in     al,dx
  4013e4:	add    bl,BYTE PTR [ebx]
  4013e6:	and    DWORD PTR [ebx],edx
  4013e8:	popf   
  4013e9:	out    dx,eax
  4013ea:	push   esi
  4013eb:	test   al,0xeb
  4013ed:	pop    edx
  4013ee:	xchg   ebx,eax
  4013ef:	jnp    0x4013c4
  4013f1:	jnp    0x401457
  4013f3:	cwde   
  4013f4:	nop
  4013f5:	push   esi
  4013f6:	rol    DWORD PTR [edi],cl
  4013f8:	es jle 0x40141b
  4013fb:	push   ebp
  4013fc:	mov    ebp,0xfabe222c
  401401:	dec    ebp
  401402:	mov    dl,ah
  401404:	fs aad 0xbd
  401407:	mov    esp,DWORD PTR [ecx-0x408aad09]
  40140d:	leave  
  40140e:	scas   al,BYTE PTR es:[edi]
  40140f:	xor    esp,DWORD PTR [ecx+0x41]
  401412:	das    
  401413:	mov    eax,ds:0x695b3602
  401418:	fdivr  DWORD PTR [eax-0x7a]
  40141b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40141c:	jle    0x4013c8
  40141e:	mov    cl,0x13
  401420:	aaa    
  401421:	adc    ah,0x64
  401424:	(bad)
  401429:	add    DWORD PTR [eax-0x26],ecx
  40142c:	stc    
  40142d:	fneni(8087 only) 
  40142f:	push   ebp
  401430:	inc    edx
  401431:	cmp    BYTE PTR [ebp+0x38],0x34
  401435:	aad    0xd0
  401437:	push   ds
  401438:	retf   0xce6f
  40143b:	mov    ah,0x68
  40143d:	jmp    0xc521:0x3930d0d5
  401444:	sar    ch,1
  401446:	or     al,0x23
  401448:	inc    ecx
  401449:	sahf   
  40144a:	push   esi
  40144b:	lahf   
  40144c:	jns    0x401437
  40144e:	mov    bl,0x2d
  401450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401451:	and    ebp,edx
  401453:	imul   edx,DWORD PTR [esi],0xffffffa5
  401456:	push   ebp
  401457:	sahf   
  401458:	es stos BYTE PTR es:[edi],al
  40145a:	std    
  40145b:	push   esp
  40145c:	outs   dx,DWORD PTR ds:[esi]
  40145d:	inc    edi
  40145e:	xchg   ebx,eax
  40145f:	test   BYTE PTR [edx+0x7d],al
  401462:	mov    eax,ds:0xb6fb3a3a
  401467:	jmp    ebx
  401469:	ja     0x40143f
  40146b:	add    BYTE PTR [esp+ebp*2+0x45],0x8
  401470:	mov    ah,0x1d
  401472:	inc    ecx
  401473:	inc    esi
  401474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401475:	outs   dx,DWORD PTR ds:[esi]
  401476:	xchg   BYTE PTR ds:0x63fe00ab,al
  40147c:	xchg   esp,eax
  40147d:	and    BYTE PTR [edi-0x635ab404],0x5c
  401484:	adc    DWORD PTR [esi+0x37],esp
  401487:	sub    al,0xd0
  401489:	xchg   edx,eax
  40148a:	into   
  40148b:	in     eax,0xb
  40148d:	push   ss
  40148e:	test   DWORD PTR [ecx-0x3abed5ce],edi
  401494:	cli    
  401495:	mul    bh
  401497:	jle    0x4014e3
  401499:	mov    al,0x13
  40149b:	ins    BYTE PTR es:[edi],dx
  40149c:	mov    bl,0xfb
  40149e:	xor    esp,esp
  4014a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014a2:	xor    BYTE PTR [ecx+0x79],0x72
  4014a6:	mov    BYTE PTR [ebp+ecx*4-0x3c],ch
  4014aa:	fsubr  st(0),st
  4014ac:	mov    edi,0x8ce2823
  4014b1:	loopne 0x4014a7
  4014b3:	mov    ds:0x3eb15557,eax
  4014b8:	scas   al,BYTE PTR es:[edi]
  4014b9:	sbb    eax,0xf3adedc0
  4014be:	mov    dh,0xd0
  4014c0:	outs   dx,BYTE PTR ds:[esi]
  4014c1:	lahf   
  4014c2:	xor    BYTE PTR [eax-0x26],cl
  4014c5:	jne    0x401515
  4014c7:	cmc    
  4014c8:	int    0xb5
  4014ca:	cmp    al,0xc8
  4014cc:	mov    al,ds:0x23fb20e
  4014d1:	(bad)  
  4014d2:	fmul   DWORD PTR [ebx-0xe602a83]
  4014d8:	jp     0x40151f
  4014da:	in     al,dx
  4014db:	out    0x3d,al
  4014dd:	xor    dl,BYTE PTR [esi]
  4014df:	sbb    ah,BYTE PTR [edi+ebx*4-0x21a5c0a7]
  4014e6:	mov    esp,0x245b1671
  4014eb:	jae    0x401470
  4014ed:	push   cs
  4014ee:	fld    DWORD PTR [ebp+0x17]
  4014f1:	call   0x381dcb09
  4014f6:	dec    edi
  4014f7:	xor    DWORD PTR [edi+0x48],edi
  4014fa:	add    BYTE PTR [esi-0x3d],ah
  4014fd:	clc    
  4014fe:	retf   0x2411
  401501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401502:	dec    edx
  401503:	sbb    BYTE PTR [ebx+edx*1+0x27d006ea],0x24
  40150b:	ret    
  40150c:	mov    dh,al
  40150e:	sub    bh,ah
  401510:	add    al,0x49
  401512:	mov    cl,0x9d
  401514:	or     cl,BYTE PTR [esi+0x454cf31f]
  40151a:	add    ebp,edi
  40151c:	sbb    eax,0x2bbaac33
  401521:	shl    DWORD PTR [ebx+ebp*1],cl
  401524:	ret    
  401525:	dec    edi
  401526:	pop    esi
  401527:	jmp    0xfdfeead1
  40152c:	rol    ah,1
  40152e:	pop    ss
  40152f:	pop    ds
  401530:	or     al,0xc3
  401532:	lea    esp,[edi]
  401534:	dec    BYTE PTR [ecx]
  401536:	jl     0x4014bf
  401538:	enter  0x4cca,0xa0
  40153c:	mov    ebx,0xa273a783
  401541:	jne    0x401525
  401543:	jecxz  0x40150a
  401545:	fadd   QWORD PTR [ebp+0xa]
  401548:	push   DWORD PTR [ebp-0xa6e1b2]
  40154e:	add    ebp,DWORD PTR [ebx]
  401550:	sbb    eax,0xf3c8eba
  401555:	cld    
  401556:	pop    edx
  401557:	mov    ch,0x81
  401559:	cmp    ecx,DWORD PTR [ecx]
  40155b:	js     0x40158b
  40155d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40155e:	js     0x4014e6
  401560:	cmp    BYTE PTR [edi-0x26],bl
  401563:	retf   
  401564:	shl    BYTE PTR [eax],0xed
  401567:	cmc    
  401568:	sbb    DWORD PTR [ecx],0xffffffeb
  40156b:	inc    ecx
  40156c:	lods   eax,DWORD PTR ds:[esi]
  40156d:	int    0xe8
  40156f:	(bad)  
  401571:	icebp  
  401572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401573:	retf   
  401574:	hlt    
  401575:	cmc    
  401576:	cmp    ecx,edx
  401578:	call   0x82e53233
  40157d:	neg    DWORD PTR [eax-0x4b]
  401580:	aas    
  401581:	sub    al,0xdd
  401583:	jae    0x4015ad
  401585:	and    BYTE PTR [ebp-0xb],bl
  401588:	jno    0x401579
  40158a:	push   eax
  40158b:	bound  ecx,QWORD PTR [edx-0x47]
  40158e:	aas    
  40158f:	add    BYTE PTR [edi+0x67],ah
  401592:	cmpps  xmm3,xmm5,0xce
  401596:	in     eax,0x70
  401598:	inc    eax
  401599:	and    DWORD PTR [ebx+0x7e4602fb],0xd4a119de
  4015a3:	ret    0xcb7a
  4015a6:	jae    0x401551
  4015a8:	out    dx,al
  4015a9:	fs cdq 
  4015ab:	(bad)  
  4015ac:	bnd jle 0x401598
  4015af:	add    dl,BYTE PTR [edi]
  4015b1:	xchg   DWORD PTR [ecx],ebx
  4015b3:	jno    0x4015f0
  4015b5:	pop    ds
  4015b6:	mov    dl,0x77
  4015b8:	jbe    0x40155b
  4015ba:	push   ds
  4015bb:	leave  
  4015bc:	add    ebp,DWORD PTR [edx]
  4015be:	mov    ecx,0xb01174cd
  4015c3:	mov    ch,0x46
  4015c5:	shr    DWORD PTR ds:0xedb8de1b,1
  4015cb:	stos   DWORD PTR es:[edi],eax
  4015cc:	sub    esp,DWORD PTR [esp+ebp*2+0xd]
  4015d0:	cmp    al,0x6d
  4015d2:	sbb    DWORD PTR [ecx+0x1f],ecx
  4015d5:	and    DWORD PTR [eax-0x2c],esp
  4015d8:	adc    DWORD PTR [eax+0x2b58d71],edx
  4015de:	xor    bl,dl
  4015e0:	rcr    esi,1
  4015e2:	mov    bh,0xcc
  4015e4:	sub    DWORD PTR [ebp-0x80],0x36
  4015e8:	and    eax,0xaea57e79
  4015ed:	fsincos 
  4015ef:	(bad)  
  4015f0:	adc    al,0xed
  4015f2:	jp     0x401604
  4015f4:	cmp    ebp,ecx
  4015f6:	(bad)  
  4015f7:	cmp    DWORD PTR [ebx],ecx
  4015f9:	das    
  4015fa:	lahf   
  4015fb:	idiv   DWORD PTR [eax-0x1d]
  4015fe:	setge  BYTE PTR [esi+esi*4]
  401602:	bound  esi,QWORD PTR [edi-0x48faa0e2]
  401608:	mov    edi,0x9361fa6d
  40160d:	int3   
  40160e:	mov    BYTE PTR [ebp-0x3be9feaf],0x79
  401615:	fadd   DWORD PTR [edi]
  401617:	adc    DWORD PTR [ebx+0x9],0x63
  40161b:	dec    ebp
  40161c:	sti    
  40161d:	pop    ebx
  40161e:	pusha  
  40161f:	xor    BYTE PTR [edi+0x18],bh
  401622:	(bad)
  401626:	push   ecx
  401627:	rol    DWORD PTR [edi],cl
  401629:	pop    esi
  40162a:	in     eax,dx
  40162b:	push   0x19a9bb08
  401630:	xor    eax,0xea34abab
  401635:	aas    
  401636:	push   0xffffffdb
  401638:	mov    DWORD PTR [eax-0x36],esi
  40163b:	pop    ecx
  40163c:	fcomp  DWORD PTR [edi+0x6e]
  40163f:	popf   
  401640:	enter  0x89b3,0xfb
  401644:	push   ecx
  401645:	push   ss
  401646:	out    0xea,al
  401648:	fcomp  DWORD PTR [edi+0x57]
  40164b:	mov    al,ds:0x20e0aecc
  401650:	add    edx,esi
  401652:	nop
  401653:	rol    DWORD PTR [ecx],0x7b
  401656:	scas   al,BYTE PTR es:[edi]
  401657:	xchg   esp,eax
  401658:	mov    ds:0xbbfe94fc,eax
  40165d:	popa   
  40165e:	dec    DWORD PTR [ecx-0x30]
  401661:	cld    
  401662:	pop    esi
  401663:	repnz inc si
  401666:	fmul   DWORD PTR [ebx+edi*4-0xe]
  40166a:	sbb    al,0xc4
  40166c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40166d:	dec    edx
  40166e:	pusha  
  40166f:	cmp    BYTE PTR [edx+0x46190587],0x20
  401676:	mov    al,0x90
  401678:	gs (bad) 
  40167a:	mov    edx,0xa59b254b
  40167f:	or     BYTE PTR [esi+0x6],0x78
  401683:	cs push esi
  401685:	mov    bl,0x25
  401687:	mov    al,0xb8
  401689:	push   edx
  40168a:	pop    ebx
  40168b:	cmp    DWORD PTR [ebp-0xa7fea48],ebp
  401691:	cdq    
  401692:	imul   esi,DWORD PTR [edi],0xdc93d188
  401698:	fldcw  WORD PTR [ecx-0x4e]
  40169b:	rcr    DWORD PTR [eax+edx*4-0x2650f1ec],0xd2
  4016a3:	inc    ebp
  4016a4:	pop    eax
  4016a5:	fsubr  st(5),st
  4016a7:	pop    edx
  4016a8:	fs pop ebx
  4016aa:	test   BYTE PTR [ebx+0x3a],al
  4016ad:	xor    al,0xb0
  4016af:	call   0x7d1a:0x237c0f89
  4016b6:	push   esp
  4016b7:	xor    eax,0xbf6e1e87
  4016bc:	cs cld 
  4016be:	jecxz  0x401722
  4016c0:	mov    eax,ds:0x4ed857ad
  4016c5:	mov    BYTE PTR [eax-0x7ef7b0c2],cl
  4016cb:	jecxz  0x40173a
  4016cd:	daa    
  4016ce:	ins    BYTE PTR es:[edi],dx
  4016cf:	push   ecx
  4016d0:	les    edi,FWORD PTR [esi-0x27e93c06]
  4016d6:	pop    ebp
  4016d7:	into   
  4016d8:	push   edi
  4016d9:	call   0xe9e6:0x59ca3596
  4016e0:	inc    ebx
  4016e1:	fcomi  st,st(7)
  4016e3:	xchg   DWORD PTR [edx-0x7d],ebp
  4016e6:	enter  0x3a78,0x61
  4016ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016eb:	fs sti 
  4016ed:	aad    0xff
  4016ef:	or     BYTE PTR [edi],ch
  4016f1:	mov    cl,0xe5
  4016f3:	cdq    
  4016f4:	cmp    eax,0x1ba983f9
  4016f9:	lds    edi,FWORD PTR [edi+eax*1+0x2497a0d9]
  401700:	push   ecx
  401701:	nop
  401702:	sbb    WORD PTR [eax+0x4bbb2bd3],bx
  401709:	mov    ch,BYTE PTR [edi+ebx*1]
  40170c:	adc    al,0xbc
  40170e:	fmul   DWORD PTR [esi-0x2]
  401711:	pop    ebx
  401712:	and    eax,0x2c8b8084
  401717:	fistp  DWORD PTR [ebx]
  401719:	push   ds
  40171a:	pop    ecx
  40171b:	xchg   ecx,eax
  40171c:	or     ch,BYTE PTR ds:0x97cbb12e
  401722:	inc    esp
  401723:	jle    0x401724
  401725:	not    BYTE PTR [edi+0x40]
  401728:	adc    BYTE PTR [ecx-0x37fd6f1c],0xce
  40172f:	je     0x40172b
  401731:	add    ah,BYTE PTR [edi]
  401733:	dec    ebx
  401734:	dec    ebx
  401735:	(bad)  
  401736:	jnp    0x40171e
  401738:	or     al,0x8b
  40173a:	call   FWORD PTR es:[esi+0x74]
  40173e:	mov    edx,0x4bfc37d1
  401743:	pop    ebx
  401744:	dec    edx
  401745:	fsubr  DWORD PTR [edx]
  401747:	pushf  
  401748:	push   es
  401749:	mov    ah,0xb
  40174b:	(bad)  [esi+0x41]
  40174e:	cs jl  0x401700
  401751:	xchg   ebp,eax
  401752:	adc    BYTE PTR [ecx],ch
  401754:	popa   
  401755:	adc    edx,0x6e3cb9bc
  40175b:	je     0x40173e
  40175d:	mov    esp,DWORD PTR [edx-0x7c47eb1e]
  401763:	jmp    0xb8c31fef
  401768:	ss push 0x6b
  40176b:	fistp  QWORD PTR [ebx+0x518e38ab]
  401771:	rcl    esp,cl
  401773:	int    0x48
  401775:	push   edx
  401776:	fist   WORD PTR [ebp-0x50]
  401779:	retf   0xac41
  40177c:	dec    ecx
  40177d:	je     0x40179b
  40177f:	xchg   ebx,eax
  401780:	leave  
  401781:	les    edi,FWORD PTR [ebx-0x3e69c30d]
  401787:	xchg   ebx,eax
  401788:	ret    
  401789:	popa   
  40178a:	sub    al,0x30
  40178c:	add    BYTE PTR [esi+0x5fc1bcf2],ch
  401792:	xchg   edx,eax
  401793:	sbb    DWORD PTR [ecx+0x59],esp
  401796:	mov    edx,0xcfb54a87
  40179b:	stc    
  40179c:	cld    
  40179d:	push   0xffffff8c
  40179f:	scas   eax,DWORD PTR es:[edi]
  4017a0:	push   ds
  4017a1:	ja     0x401731
  4017a3:	mov    esi,0xb3819a78
  4017a8:	cdq    
  4017a9:	int3   
  4017aa:	sbb    BYTE PTR gs:[edi+0x78],0x46
  4017af:	sbb    bl,BYTE PTR [ebx+esi*2-0xe]
  4017b3:	mov    al,0x3a
  4017b5:	or     esp,esp
  4017b7:	cli    
  4017b8:	aaa    
  4017b9:	xchg   edi,eax
  4017ba:	mov    al,ds:0x5453f219
  4017bf:	rol    edx,1
  4017c1:	dec    DWORD PTR [eax+0x419633aa]
  4017c7:	push   ecx
  4017c8:	push   eax
  4017c9:	out    0x2c,eax
  4017cb:	sub    BYTE PTR [ecx],ch
  4017cd:	loope  0x4017ad
  4017cf:	mov    BYTE PTR [edx+esi*4-0x7564252d],cl
  4017d6:	add    al,BYTE PTR [eax]
  4017d8:	stos   BYTE PTR es:[edi],al
  4017d9:	cs push ds
  4017db:	sbb    BYTE PTR [edi+0x69],ch
  4017de:	retf   0x6e17
  4017e1:	xlat   BYTE PTR ds:[ebx]
  4017e2:	ins    DWORD PTR es:[edi],dx
  4017e3:	mov    bh,0xc1
  4017e5:	into   
  4017e6:	cdq    
  4017e7:	js     0x4017cc
  4017e9:	rol    DWORD PTR [ebp-0x7b9c5f37],0xed
  4017f0:	jle    0x40183b
  4017f2:	pop    ebp
  4017f3:	jmp    0x23f01eb0
  4017f8:	pop    ebp
  4017f9:	les    esi,FWORD PTR [edi]
  4017fb:	or     ebp,DWORD PTR [ebp+0x3bf21902]
  401801:	scas   al,BYTE PTR es:[edi]
  401802:	shl    DWORD PTR [edx],0xc0
  401805:	and    dl,dl
  401807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401808:	stos   BYTE PTR es:[edi],al
  401809:	inc    edi
  40180a:	mov    esp,0x4745ec20
  40180f:	outs   dx,DWORD PTR ds:[esi]
  401810:	pop    ds
  401811:	jmp    0x401822
  401813:	out    0x93,eax
  401815:	xchg   ecx,eax
  401816:	fild   WORD PTR [eax+0x39]
  401819:	inc    ebx
  40181a:	shl    BYTE PTR [eax+0x7a],0xc8
  40181e:	xchg   esp,eax
  40181f:	out    0x14,eax
  401821:	int3   
  401822:	push   es
  401823:	out    0xc5,al
  401825:	mov    dh,0xba
  401827:	push   edx
  401828:	push   ds
  401829:	fild   WORD PTR [edi+0x15]
  40182c:	and    al,BYTE PTR [ebx]
  40182e:	loop   0x40183a
  401830:	dec    ebx
  401831:	add    al,0x90
  401833:	and    al,0xef
  401835:	(bad)  
  401836:	mov    ds:0xc049f177,al
  40183b:	imul   DWORD PTR [edi]
  40183d:	cmc    
  40183e:	jmp    0x171d:0xdc30f8fd
  401845:	(bad)
  40184a:	aam    0x60
  40184c:	cmp    dh,BYTE PTR [ebx+0x24]
  40184f:	push   esp
  401850:	jmp    0x23bf:0x667d9d8
  401857:	dec    ecx
  401858:	xor    dl,BYTE PTR [ebp+0xc]
  40185b:	inc    esp
  40185c:	sub    ecx,DWORD PTR [eax-0x21]
  40185f:	push   0xfffffff0
  401861:	(bad)  
  401863:	lods   eax,DWORD PTR es:[esi]
  401865:	in     al,0x3c
  401867:	repz push eax
  401869:	mov    ds:0xcd55cfd4,eax
  40186e:	sbb    bh,BYTE PTR ds:0x58b69a7b
  401874:	nop
  401875:	rol    BYTE PTR [edx-0x3556e795],1
  40187b:	cmp    BYTE PTR [ebx],bl
  40187d:	lds    esp,FWORD PTR [edx+0x52]
  401880:	imul   esp,DWORD PTR [edi],0xeb29675a
  401886:	retf   0xb5e5
  401889:	out    0xec,eax
  40188b:	shr    DWORD PTR [edx],1
  40188d:	sar    DWORD PTR [ecx+0x5fe4c05c],1
  401893:	test   DWORD PTR [ebp+eiz*4+0x33],esi
  401897:	or     BYTE PTR [edx+eax*4+0x68],ch
  40189b:	xchg   ebx,eax
  40189c:	scas   eax,DWORD PTR es:[edi]
  40189d:	jbe    0x401901
  40189f:	jb     0x401853
  4018a1:	jo     0x40191a
  4018a3:	outs   dx,BYTE PTR es:[esi]
  4018a5:	push   edi
  4018a6:	and    al,0xc8
  4018a8:	and    bh,BYTE PTR [edx+0x13]
  4018ab:	mov    cl,0xc6
  4018ad:	nop
  4018ae:	push   edx
  4018af:	repnz in al,0xbe
  4018b2:	mov    ebp,0x9e470546
  4018b7:	ret    
  4018b8:	mov    cs,WORD PTR [esi-0x580daaeb]
  4018be:	jmp    0x4018f3
  4018c0:	out    dx,eax
  4018c1:	push   ecx
  4018c2:	xchg   ebp,eax
  4018c3:	adc    BYTE PTR [ecx],0x74
  4018c6:	dec    ebx
  4018c7:	cmp    dh,BYTE PTR [ecx-0x1b]
  4018ca:	pop    ss
  4018cb:	jl     0x401949
  4018cd:	sar    BYTE PTR [ebx+0x2e],0xed
  4018d1:	mov    edi,DWORD PTR [eax-0x2a317175]
  4018d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018d8:	fld    DWORD PTR [ecx]
  4018da:	push   ebx
  4018db:	test   BYTE PTR [ebp+0x74065465],cl
  4018e1:	sbb    bh,BYTE PTR [edx+0x70]
  4018e4:	shr    eax,1
  4018e6:	mov    al,0xe5
  4018e8:	cli    
  4018e9:	das    
  4018ea:	inc    ebp
  4018eb:	inc    eax
  4018ec:	cmp    BYTE PTR [edx-0x11],bl
  4018ef:	sub    DWORD PTR [esi+esi*1+0x68],ebx
  4018f3:	mov    esi,0x989b9601
  4018f8:	dec    edi
  4018f9:	and    ecx,edi
  4018fb:	pop    es
  4018fc:	push   es
  4018fd:	mov    ecx,0x3fafc9f3
  401902:	test   DWORD PTR [esi-0x72],ebp
  401905:	addr16 in al,0x72
  401908:	test   DWORD PTR [edx],0xda02f893
  40190e:	call   0x7a231f08
  401913:	or     bp,sp
  401916:	sbb    dh,BYTE PTR [eax-0xb]
  401919:	mov    al,ds:0xa8c3465f
  40191e:	rcr    DWORD PTR [ecx+0x616655b6],cl
  401924:	ds pop ebp
  401926:	and    al,BYTE PTR [ecx-0x5c114740]
  40192c:	test   eax,0x70d3582
  401931:	cli    
  401932:	out    dx,al
  401933:	xlat   BYTE PTR ds:[ebx]
  401934:	(bad)
  401938:	jno    0x401934
  40193a:	mov    eax,ds:0xa3f057dd
  40193f:	xchg   edx,eax
  401940:	add    ebx,ecx
  401942:	adc    eax,0x6d8395f8
  401947:	jo     0x4018ec
  401949:	repnz iret 
  40194b:	cmp    al,0xd3
  40194d:	repz cdq 
  40194f:	sbb    eax,DWORD PTR [ecx+eiz*4+0x2]
  401953:	je     0x4018dc
  401955:	(bad)  
  401956:	adc    DWORD PTR [ebx-0x391cb68e],ebx
  40195c:	jo     0x4018fd
  40195e:	cmp    al,0xe2
  401960:	and    al,0xb3
  401962:	mov    esp,0x3c778706
  401967:	retf   
  401968:	or     eax,0x8e5b1b40
  40196d:	call   DWORD PTR [edi+esi*1+0x6c]
  401971:	pop    esp
  401972:	ret    0x4970
  401975:	ins    DWORD PTR es:[edi],dx
  401976:	jecxz  0x401901
  401978:	imul   eax,DWORD PTR [esi+0x57],0x5f
  40197c:	push   ds
  40197d:	xor    esi,edi
  40197f:	rcl    BYTE PTR [ecx],0x5d
  401982:	div    DWORD PTR [edi+0x61]
  401985:	fistp  WORD PTR ds:0x87a0cf7e
  40198b:	call   0xa6c1d2ee
  401990:	mov    ah,0xa8
  401992:	mov    BYTE PTR [edi],dh
  401994:	pop    ebp
  401995:	out    dx,eax
  401996:	(bad)  
  401998:	fidiv  DWORD PTR ds:0x8541d3f4
  40199e:	dec    esi
  40199f:	clc    
  4019a0:	jmp    0x4019f4
  4019a2:	sahf   
  4019a3:	adc    al,0x6c
  4019a5:	sbb    DWORD PTR [ecx+0x21cf40a9],eax
  4019ab:	in     al,0xd7
  4019ad:	push   0x59a63675
  4019b2:	test   DWORD PTR [ecx+ebp*2+0x34],eax
  4019b6:	in     eax,0xa2
  4019b8:	and    ch,BYTE PTR [edi-0x76876e83]
  4019be:	cdq    
  4019bf:	jns    0x4019a5
  4019c1:	jo     0x401950
  4019c3:	mov    WORD PTR [eax-0xccd563a],ds
  4019c9:	out    dx,eax
  4019ca:	mov    eax,0x8c234aac
  4019cf:	sbb    BYTE PTR [esi+0x3745a42],cl
  4019d5:	cmp    DWORD PTR [ecx+ebx*4+0x29],esi
  4019d9:	mov    dl,0x50
  4019db:	fisubr DWORD PTR [eax]
  4019dd:	sub    eax,DWORD PTR [esi-0x1e]
  4019e0:	call   0x296c:0x5e5d4750
  4019e7:	pusha  
  4019e8:	fcomp  QWORD PTR [ebp+0x6a]
  4019eb:	test   DWORD PTR [ebx+0x5aa46d9f],0x50401707
  4019f5:	mov    ?,WORD PTR [esi]
  4019f7:	repnz mov dl,BYTE PTR [ebx]
  4019fa:	sub    bl,BYTE PTR ds:0x60a8843a
  401a00:	cmc    
  401a01:	loope  0x401a64
  401a03:	lods   al,BYTE PTR ds:[esi]
  401a04:	cmc    
  401a05:	push   0x6649fdc0
  401a0a:	mov    edx,0xbbf83421
  401a0f:	or     bh,BYTE PTR [ecx]
  401a11:	mov    ecx,0xf14bd4c7
  401a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a17:	and    esi,DWORD PTR [ecx-0x28]
  401a1a:	hlt    
  401a1b:	ins    BYTE PTR es:[edi],dx
  401a1c:	stc    
  401a1d:	cwde   
  401a1e:	loope  0x4019ee
  401a20:	call   esi
  401a22:	pop    ebp
  401a23:	test   DWORD PTR cs:[eax],eax
  401a26:	stc    
  401a27:	mov    ebx,0x9e79333f
  401a2c:	jg     0x401a8c
  401a2e:	mov    esp,0xd8f18a2f
  401a33:	repz and DWORD PTR [edx],edi
  401a36:	jge    0x4019b9
  401a38:	and    eax,ecx
  401a3a:	das    
  401a3b:	lods   eax,DWORD PTR ds:[esi]
  401a3c:	pusha  
  401a3d:	aas    
  401a3e:	sbb    dh,dl
  401a40:	int3   
  401a41:	adc    ebx,DWORD PTR [esp+ebx*8]
  401a44:	xor    BYTE PTR [ecx],dh
  401a46:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a48:	sbb    BYTE PTR [ecx],bh
  401a4a:	(bad)  
  401a4b:	cli    
  401a4c:	dec    ebx
  401a4d:	push   cs
  401a4e:	fsub   DWORD PTR [edx-0x1f]
  401a51:	mov    bh,0xe
  401a54:	dec    edi
  401a55:	pop    edx
  401a56:	add    ch,BYTE PTR [edi+0x4f]
  401a59:	fisubr DWORD PTR [ebx-0x66]
  401a5c:	fninit 
  401a5e:	fcmovnu st,st(5)
  401a60:	cdq    
  401a61:	and    DWORD PTR [eax-0x7994bb94],ebp
  401a67:	div    BYTE PTR [ebp+0x23f5fc4]
  401a6d:	jmp    0x287ab235
  401a72:	dec    eax
  401a73:	xor    eax,DWORD PTR [edi+0x3b]
  401a76:	loope  0x401a55
  401a78:	push   0x58e30cb8
  401a7d:	out    0xca,al
  401a7f:	xchg   edi,eax
  401a80:	sub    al,0x38
  401a82:	push   eax
  401a83:	int3   
  401a84:	mov    esi,DWORD PTR [ebp-0x9dff3e9]
  401a8a:	(bad)  
  401a8b:	mov    ebx,0x58b576a3
  401a90:	dec    ecx
  401a91:	ret    
  401a92:	xor    esi,DWORD PTR [ebx+0x69]
  401a95:	div    DWORD PTR [esi-0x706c1208]
  401a9b:	push   edi
  401a9c:	stos   DWORD PTR es:[edi],eax
  401a9d:	das    
  401a9e:	jp     0x401a28
  401aa0:	dec    ebp
  401aa1:	xchg   edx,eax
  401aa2:	push   es
  401aa3:	iret   
  401aa4:	out    0x61,eax
  401aa6:	dec    esp
  401aa7:	ret    
  401aa8:	ins    BYTE PTR es:[edi],dx
  401aa9:	popf   
  401aaa:	inc    ebx
  401aab:	scas   eax,DWORD PTR es:[edi]
  401aac:	pusha  
  401aad:	xor    edx,DWORD PTR gs:[ecx-0x3232b0fc]
  401ab4:	shr    DWORD PTR [ebx-0x1e],1
  401ab7:	and    ah,ah
  401ab9:	dec    ebx
  401aba:	jae    0x401aea
  401abc:	push   ecx
  401abd:	inc    ebp
  401abe:	mov    edx,0x52c5acb6
  401ac3:	ds push 0xecc72001
  401ac9:	mov    BYTE PTR [esi+0x4f],dl
  401acc:	xor    edi,DWORD PTR [esi+ecx*2]
  401acf:	push   esp
  401ad0:	sbb    ebx,DWORD PTR [eax-0x6b]
  401ad3:	cmp    bl,BYTE PTR [esi-0x5b]
  401ad6:	xor    ebx,eax
  401ad8:	cmp    al,BYTE PTR [eax+eax*2+0x2b]
  401adc:	popf   
  401add:	scas   al,BYTE PTR es:[edi]
  401ade:	cwde   
  401adf:	int    0xae
  401ae1:	ins    BYTE PTR es:[edi],dx
  401ae2:	mov    esp,0x231ab2bd
  401ae7:	outs   dx,BYTE PTR ds:[esi]
  401ae8:	push   0xfffffff9
  401aea:	mov    cl,0x96
  401aec:	in     al,dx
  401aed:	mov    dh,0x24
  401aef:	cld    
  401af0:	jecxz  0x401b08
  401af2:	fwait
  401af3:	imul   ebx,edx,0x20
  401af6:	add    eax,ebp
  401af8:	js     0x401a8d
  401afa:	icebp  
  401afb:	push   esp
  401afc:	mov    ds:0x7ceb9cf5,eax
  401b01:	stos   BYTE PTR es:[edi],al
  401b02:	xchg   esp,eax
  401b03:	pop    ebp
  401b04:	(bad)  
  401b05:	inc    esi
  401b06:	sub    BYTE PTR [edx+0x4d3a15d5],0x8c
  401b0d:	jno    0x401b50
  401b0f:	loop   0x401b2b
  401b11:	in     eax,0xf6
  401b13:	scas   al,BYTE PTR es:[edi]
  401b14:	leave  
  401b15:	dec    ecx
  401b16:	mov    ebx,0xffdcaa13
  401b1b:	pop    edx
  401b1c:	hlt    
  401b1d:	int    0x74
  401b1f:	clc    
  401b20:	cmp    DWORD PTR [edx+0x1],ecx
  401b23:	push   esi
  401b24:	jmp    0xf435:0x61391875
  401b2b:	(bad)  
  401b2c:	ins    BYTE PTR es:[edi],dx
  401b2d:	scas   al,BYTE PTR es:[edi]
  401b2e:	push   esp
  401b2f:	dec    esp
  401b30:	mov    esp,0xf417d78c
  401b35:	push   esp
  401b36:	sub    al,0xc6
  401b38:	add    esi,0x3
  401b3b:	(bad)  
  401b3d:	or     eax,0xcb3ba56b
  401b42:	loopne 0x401ace
  401b44:	stc    
  401b45:	call   FWORD PTR [ecx+0x54]
  401b48:	loop   0x401bc4
  401b4a:	fcomp  DWORD PTR ds:0xddbf2cb5
  401b50:	int3   
  401b51:	(bad)  
  401b52:	lea    eax,[ecx]
  401b54:	jns    0x401b30
  401b56:	sub    al,0x88
  401b58:	(bad)  
  401b59:	mov    ecx,0x219ad9e3
  401b5e:	loop   0x401b8d
  401b60:	pop    ebp
  401b61:	ins    DWORD PTR es:[edi],dx
  401b62:	int    0xd3
  401b64:	jmp    0x9944def4
  401b69:	push   ecx
  401b6a:	ins    DWORD PTR es:[edi],dx
  401b6b:	(bad)  
  401b6d:	or     al,0xa5
  401b6f:	ss ja  0x401bcb
  401b72:	cs in  al,dx
  401b74:	xchg   esi,eax
  401b75:	(bad)  
  401b76:	scas   al,BYTE PTR es:[edi]
  401b77:	jmp    0xdcb8b48c
  401b7c:	sub    ebp,DWORD PTR ds:0x2fc03449
  401b82:	js     0x401b2e
  401b84:	loope  0x401b55
  401b86:	fidiv  DWORD PTR [esi-0x53d79f0e]
  401b8c:	jnp    0x401b36
  401b8e:	(bad)  
  401b8f:	adc    DWORD PTR [ecx-0x59],edx
  401b92:	les    edi,FWORD PTR [esi-0x57]
  401b95:	hlt    
  401b96:	mov    ebx,DWORD PTR ds:0x46451382
  401b9c:	xchg   BYTE PTR [ebx-0x52],bh
  401b9f:	add    al,0xe9
  401ba1:	jne    0x401b8a
  401ba3:	je     0x401bd7
  401ba5:	scas   eax,DWORD PTR es:[edi]
  401ba6:	jle    0x401c17
  401ba8:	out    0x3c,al
  401baa:	mov    dh,BYTE PTR [edi]
  401bac:	sub    BYTE PTR [ebp-0x1eb67355],0x15
  401bb3:	rcr    DWORD PTR [edi],0x1c
  401bb6:	(bad)  
  401bb7:	pop    esp
  401bb8:	lea    ebx,[eax-0x4c]
  401bbb:	xchg   edi,eax
  401bbc:	cmp    DWORD PTR [edx+ebp*4+0x6],edi
  401bc0:	and    al,BYTE PTR [ecx+0x7c]
  401bc3:	loop   0x401b67
  401bc5:	shl    DWORD PTR [esi-0x67e9c3e],1
  401bcb:	mov    al,ds:0x3e13e1c4
  401bd0:	cli    
  401bd1:	mov    BYTE PTR [esi+ebx*8-0x15c9e586],0xa8
  401bd9:	mov    dh,0x7e
  401bdb:	mov    ds:0x6f8d8a75,al
  401be0:	shr    ah,0x53
  401be3:	jmp    0x401c46
  401be5:	sbb    BYTE PTR [edx+0x5b9d606e],cl
  401beb:	adc    BYTE PTR [eax],al
  401bed:	pop    ecx
  401bee:	push   ecx
  401bef:	aas    
  401bf0:	out    0x5a,eax
  401bf2:	retf   
  401bf3:	mov    dl,0x3a
  401bf5:	loope  0x401bfd
  401bf7:	fistp  WORD PTR [ebx]
  401bf9:	mov    ch,0x87
  401bfb:	clc    
  401bfc:	push   ebx
  401bfd:	sub    eax,0x433c2f96
  401c02:	pop    esp
  401c03:	test   DWORD PTR [ecx-0x24044f64],ebx
  401c09:	cmp    cl,BYTE PTR [esi+0x3e712a24]
  401c0f:	cld    
  401c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c11:	not    ecx
  401c13:	scas   al,BYTE PTR es:[edi]
  401c14:	mov    al,ds:0xa6f9af03
  401c19:	retf   
  401c1a:	or     bl,bh
  401c1c:	test   BYTE PTR [ebp+0x134e26f1],dl
  401c22:	ins    BYTE PTR es:[edi],dx
  401c23:	arpl   bp,bp
  401c25:	cmp    al,0x1a
  401c27:	rcr    BYTE PTR [eax-0x29],0x8
  401c2b:	call   0x1dcc:0xfef49420
  401c32:	lahf   
  401c33:	adc    eax,0x8c7ee12b
  401c38:	ror    BYTE PTR [ebp+0x26],0x32
  401c3c:	xchg   esp,eax
  401c3d:	retf   
  401c3e:	lds    ecx,FWORD PTR ss:[ebx]
  401c41:	data16 clc 
  401c43:	xor    edx,DWORD PTR [edx]
  401c45:	loopne 0x401c7a
  401c47:	call   0x4f1b:0x5f934ee2
  401c4e:	push   edx
  401c4f:	xor    edx,eax
  401c51:	(bad)  
  401c52:	in     eax,dx
  401c53:	out    dx,al
  401c54:	fadd   st(5),st
  401c56:	xor    ah,bl
  401c58:	(bad)  
  401c59:	aad    0x71
  401c5b:	jns    0x401cd0
  401c5d:	jmp    0x401cba
  401c5f:	leave  
  401c60:	fwait
  401c61:	add    eax,edi
  401c63:	and    ebx,ecx
  401c65:	inc    edi
  401c66:	fcmovnb st,st(4)
  401c68:	xor    BYTE PTR [esi-0x4d],0x63
  401c6c:	mov    edx,0xa49c0588
  401c71:	icebp  
  401c72:	lods   al,BYTE PTR ds:[esi]
  401c73:	xor    bh,bh
  401c75:	sub    al,0x68
  401c77:	lods   al,BYTE PTR ds:[esi]
  401c78:	sar    edx,0x21
  401c7b:	xchg   edx,ebx
  401c7d:	or     dl,BYTE PTR ds:0x901751af
  401c83:	jmp    0xed9a:0xabdf9cd3
  401c8a:	dec    ecx
  401c8b:	sub    al,0x43
  401c8d:	mov    eax,0xc87a8afb
  401c92:	dec    edx
  401c93:	cmc    
  401c94:	push   0x172eab15
  401c99:	mov    esp,0xebfecbd6
  401c9e:	fcmovnb st,st(0)
  401ca0:	bound  eax,QWORD PTR [edx+0x7bfc13f6]
  401ca6:	or     al,0x8a
  401ca8:	clc    
  401ca9:	mov    dl,0x37
  401cab:	cmp    eax,0xa0831072
  401cb0:	outs   dx,DWORD PTR ds:[esi]
  401cb1:	xor    edx,DWORD PTR [ecx]
  401cb3:	sub    al,0xd
  401cb5:	in     eax,dx
  401cb6:	dec    esp
  401cb7:	daa    
  401cb8:	xor    ecx,DWORD PTR [ecx-0x3a886288]
  401cbe:	xor    ah,BYTE PTR [eax+0x28]
  401cc1:	xchg   edi,edi
  401cc3:	xor    al,0x97
  401cc5:	mov    ebp,DWORD PTR [ebx]
  401cc7:	jae    0x401c8e
  401cc9:	(bad)  [ecx]
  401ccb:	xchg   esi,eax
  401ccc:	das    
  401ccd:	rcr    BYTE PTR [ebx+0x77],cl
  401cd0:	dec    ebx
  401cd1:	inc    eax
  401cd2:	cwde   
  401cd3:	rol    DWORD PTR [ecx],1
  401cd5:	pop    ecx
  401cd6:	mov    dl,0x4f
  401cd8:	retf   
  401cd9:	in     al,0x8e
  401cdb:	scas   al,BYTE PTR es:[edi]
  401cdc:	xchg   ebx,eax
  401cdd:	dec    esp
  401cde:	lea    esp,[edx+0x68]
  401ce1:	ss push 0x18d10613
  401ce7:	fs cmp al,0x11
  401cea:	xchg   esi,eax
  401ceb:	xchg   edi,eax
  401cec:	pop    edi
  401ced:	test   BYTE PTR [eax],dh
  401cef:	aaa    
  401cf0:	jbe    0x401cb4
  401cf2:	cmp    dh,BYTE PTR [edx+0x22]
  401cf5:	out    dx,eax
  401cf6:	test   eax,0x247c026d
  401cfb:	inc    esp
  401cfc:	and    dl,bh
  401cfe:	cli    
  401cff:	aad    0xf9
  401d01:	mov    edi,0x82e5c4e
  401d06:	mov    bl,0x3f
  401d08:	xchg   esp,eax
  401d09:	inc    edi
  401d0a:	aad    0xf
  401d0c:	mov    bl,0xcc
  401d0e:	test   DWORD PTR [esi+0x7b],ecx
  401d11:	mov    ecx,0xb76168d8
  401d16:	and    esi,DWORD PTR [ecx]
  401d18:	(bad)  
  401d19:	xchg   ebp,eax
  401d1a:	icebp  
  401d1b:	test   eax,0xc9c9d1f7
  401d20:	push   0xffffffa7
  401d22:	add    dh,BYTE PTR [edx]
  401d24:	sbb    eax,0xa66020c0
  401d29:	and    DWORD PTR [eax],0x6d
  401d2c:	inc    ebx
  401d2d:	sahf   
  401d2e:	call   0x76f6:0x2c9d9ecf
  401d35:	(bad)  [edi+esi*2]
  401d38:	sub    ebx,DWORD PTR [eax]
  401d3a:	out    dx,eax
  401d3b:	adc    al,0x58
  401d3d:	mov    ebp,0x69a59d1
  401d42:	dec    esp
  401d43:	xchg   ecx,eax
  401d44:	aad    0x73
  401d46:	pusha  
  401d47:	mov    WORD PTR [edx+0x13],es
  401d4a:	es (bad) 
  401d4c:	stos   DWORD PTR es:[edi],eax
  401d4d:	ja     0x401ced
  401d4f:	adc    eax,0xd48ba14e
  401d54:	xor    eax,0x2aa58bf3
  401d59:	test   DWORD PTR [ecx+ebx*1+0x1a],esp
  401d5d:	and    DWORD PTR [ebp-0x2f],ebx
  401d60:	sub    BYTE PTR [esp+ecx*2+0x4a],cl
  401d64:	retf   0x5cf9
  401d67:	lods   eax,DWORD PTR ds:[esi]
  401d68:	dec    eax
  401d69:	add    edi,DWORD PTR [ebx]
  401d6b:	aas    
  401d6c:	and    dh,0xa8
  401d6f:	(bad)  
  401d70:	mov    ds:0xbd78ec07,al
  401d75:	out    0xe5,eax
  401d77:	mov    ebx,0xd2e6c01f
  401d7c:	addr16 push ds
  401d7e:	nop
  401d7f:	retf   0x9d84
  401d82:	sub    bh,BYTE PTR [eax+esi*8+0x2d]
  401d86:	ja     0x401df7
  401d88:	xor    DWORD PTR [edx-0x521307df],eax
  401d8e:	xlat   BYTE PTR ds:[ebx]
  401d8f:	std    
  401d90:	daa    
  401d91:	sar    DWORD PTR [edx+0x146a2219],1
  401d97:	sbb    dl,ch
  401d99:	stc    
  401d9a:	addr16 arpl dx,ax
  401d9d:	mov    ebx,0xa6b5c36d
  401da2:	mov    eax,ds:0x625b35c6
  401da7:	xchg   esi,eax
  401da8:	cli    
  401da9:	add    eax,0x9b359979
  401dae:	(bad)  
  401daf:	loope  0x401e1e
  401db1:	aam    0x72
  401db3:	(bad)  
  401db4:	out    dx,al
  401db5:	inc    edx
  401db6:	daa    
  401db7:	lahf   
  401db8:	or     eax,0x32343c1f
  401dbd:	xor    eax,0x1463deb9
  401dc2:	int    0x3c
  401dc4:	sub    al,0x9e
  401dc6:	ret    0xc45
  401dc9:	adc    eax,0x55b07942
  401dce:	loopne 0x401db0
  401dd0:	repnz pop ss
  401dd2:	dec    esp
  401dd3:	fsubr  st(7),st
  401dd5:	or     DWORD PTR ds:[ebx-0x21],ecx
  401dd9:	pop    esi
  401dda:	gs dec edx
  401ddc:	ret    0x1990
  401ddf:	imul   ebx,DWORD PTR [esi],0xffffffcf
  401de2:	idiv   DWORD PTR [eax]
  401de4:	and    BYTE PTR [edi-0x211b87e3],bl
  401dea:	les    esi,FWORD PTR [ebx]
  401dec:	or     esp,ebx
  401dee:	sub    eax,0x2161e773
  401df3:	arpl   WORD PTR [ebx],bx
  401df5:	push   eax
  401df6:	loopne 0x401d8a
  401df8:	fs inc eax
  401dfa:	adc    ah,BYTE PTR [ecx]
  401dfc:	add    al,0x2
  401dfe:	in     eax,dx
  401dff:	fcomip st,st(2)
  401e01:	mov    esi,0x4411af1c
  401e06:	loop   0x401e19
  401e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e09:	sbb    al,bh
  401e0b:	or     dl,bl
  401e0d:	mov    bh,dh
  401e0f:	lea    ecx,[edi]
  401e11:	sub    edx,DWORD PTR [edi]
  401e13:	xchg   ebp,eax
  401e14:	pop    esp
  401e15:	jp     0x401dc2
  401e17:	mov    esp,0x52a682fa
  401e1c:	in     al,0xf4
  401e1e:	and    DWORD PTR [ecx-0x1],esi
  401e21:	and    esp,ebp
  401e23:	inc    ebx
  401e24:	imul   esp,DWORD PTR [bp-0x1a3f],0xffffffac
  401e2a:	bound  ebp,QWORD PTR [edi+0x16]
  401e2d:	or     al,0xeb
  401e2f:	push   edx
  401e30:	mov    BYTE PTR [esi+esi*4],bl
  401e33:	aam    0xe9
  401e35:	cli    
  401e36:	mov    bh,0xd
  401e38:	push   0xffffff88
  401e3a:	js     0x401e7d
  401e3c:	jo     0x401e8e
  401e3e:	or     eax,0x681541f5
  401e43:	enter  0x4415,0x11
  401e47:	inc    eax
  401e48:	int3   
  401e49:	pop    edx
  401e4a:	adc    al,0xfa
  401e4c:	cld    
  401e4d:	jb     0x401e19
  401e4f:	push   esi
  401e50:	mov    cl,BYTE PTR ds:0xea269275
  401e56:	cmp    BYTE PTR [esp+ebp*2-0x36fc9893],cl
  401e5d:	nop
  401e5e:	mov    bl,0xe6
  401e60:	ja     0x401e44
  401e62:	(bad)  
  401e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e64:	aad    0xc0
  401e66:	add    DWORD PTR [ecx+eiz*2+0x7c606357],ecx
  401e6d:	lods   al,BYTE PTR ds:[esi]
  401e6e:	dec    ebp
  401e6f:	lea    ebx,[ecx]
  401e71:	idiv   ecx
  401e73:	adc    esp,DWORD PTR [edi+0x1edfe0e6]
  401e79:	in     eax,dx
  401e7a:	scas   al,BYTE PTR es:[edi]
  401e7b:	int3   
  401e7c:	mov    ebx,0xebc8a576
  401e81:	in     al,0xb3
  401e83:	repz pop eax
  401e85:	out    0x39,al
  401e87:	push   0x9359c819
  401e8c:	mov    ah,0x47
  401e8e:	ror    dl,1
  401e90:	rcl    edi,1
  401e92:	add    eax,0x9cc352ca
  401e97:	aas    
  401e98:	outs   dx,BYTE PTR ds:[esi]
  401e99:	xor    DWORD PTR [ebx+0x58],ebx
  401e9c:	add    al,0x9d
  401e9e:	mov    dl,0x1c
  401ea0:	jge    0x401ea8
  401ea2:	ins    DWORD PTR es:[edi],dx
  401ea3:	sbb    al,0x65
  401ea5:	add    BYTE PTR [esi],al
  401ea7:	add    eax,0x9b3e1651
  401ead:	fild   DWORD PTR [ecx]
  401eaf:	repz mov ch,0xb6
  401eb2:	fiadd  WORD PTR [ebp+0x68]
  401eb5:	jg     0x401e39
  401eb7:	mov    ebx,0x5bc079dd
  401ebc:	lea    edi,[edx+0x27]
  401ebf:	fiadd  DWORD PTR ds:[edx]
  401ec2:	mov    dh,0x8a
  401ec4:	scas   al,BYTE PTR es:[edi]
  401ec5:	popf   
  401ec6:	add    DWORD PTR [ebp-0x6d],0x46
  401eca:	mov    eax,0xae7f19f0
  401ecf:	jo     0x401f1e
  401ed1:	inc    ecx
  401ed2:	mov    al,BYTE PTR [ecx+ebp*8-0x17]
  401ed6:	fs loop 0x401ed5
  401ed9:	mov    ch,0x2b
  401edb:	fbstp  TBYTE PTR [ecx+0x13]
  401ede:	mov    esi,0x995ccf3f
  401ee3:	pop    edi
  401ee4:	inc    edx
  401ee5:	mov    DWORD PTR [esi+0x79],esi
  401ee8:	frstor [ebx+0x2dcb1a00]
  401eee:	jge    0x401f11
  401ef0:	(bad)  
  401ef1:	pushf  
  401ef2:	in     al,0xc1
  401ef4:	lea    esp,[ebx-0x4134d029]
  401efa:	aam    0xb4
  401efc:	arpl   WORD PTR [esi],sp
  401efe:	sbb    ebp,DWORD PTR [edx+0x15]
  401f01:	xchg   ecx,eax
  401f02:	retf   0x7fba
  401f05:	mov    edi,0x40d2120e
  401f0a:	loop   0x401f42
  401f0c:	ins    BYTE PTR es:[edi],dx
  401f0d:	sahf   
  401f0e:	sub    DWORD PTR [edx],0x63
  401f11:	outs   dx,DWORD PTR ds:[esi]
  401f12:	rcr    edi,0x65
  401f15:	xchg   ecx,ecx
  401f17:	std    
  401f18:	xor    edi,DWORD PTR [edi]
  401f1a:	xchg   esi,eax
  401f1b:	xchg   ecx,eax
  401f1c:	push   edx
  401f1d:	xchg   DWORD PTR [edi],eax
  401f1f:	mov    dh,0x51
  401f21:	cli    
  401f22:	cmp    dl,BYTE PTR [ecx+0x62]
  401f25:	xchg   ebx,eax
  401f26:	in     eax,0x45
  401f28:	dec    ebp
  401f29:	cmp    DWORD PTR [edi+0xb],0x42edddaf
  401f30:	scas   al,BYTE PTR es:[edi]
  401f31:	loope  0x401f42
  401f33:	lods   eax,DWORD PTR ds:[esi]
  401f34:	test   eax,0xce872845
  401f39:	adc    dl,BYTE PTR es:[ebp+0xd]
  401f3d:	adc    cl,ah
  401f3f:	jns    0x401f47
  401f41:	aaa    
  401f42:	jb     0x401f37
  401f44:	loopne 0x401f1e
  401f46:	cmp    eax,0x8c9f78e4
  401f4b:	and    al,0x14
  401f4d:	ss cli 
  401f4f:	int3   
  401f50:	call   DWORD PTR [ebx+0x5288020c]
  401f56:	(bad)  
  401f57:	sahf   
  401f58:	mov    esi,DWORD PTR [ecx+0x4e2db78e]
  401f5e:	test   al,0x3
  401f60:	mov    eax,ds:0xb1575287
  401f65:	fcmovnbe st,st(0)
  401f67:	(bad)  
  401f68:	jmp    0x401fae
  401f6a:	mov    ds:0x463983b6,eax
  401f6f:	push   cs
  401f70:	cwde   
  401f71:	dec    cl
  401f73:	retf   
  401f74:	dec    eax
  401f75:	int3   
  401f76:	inc    ecx
  401f77:	pop    ebp
  401f78:	fist   WORD PTR [edi]
  401f7a:	ror    esi,1
  401f7c:	leave  
  401f7d:	xchg   edx,eax
  401f7e:	jl     0x401f32
  401f80:	dec    edi
  401f81:	mov    ecx,0xf700e1ab
  401f86:	adc    eax,0xd89dba9c
  401f8b:	sbb    BYTE PTR gs:0xa04aa2db,dl
  401f92:	mov    ds:0x36ea1f01,al
  401f97:	cs addr16 xchg esi,eax
  401f9a:	inc    esi
  401f9b:	aad    0x9f
  401f9d:	mov    dh,BYTE PTR [edx+eax*1-0x63ad5c3]
  401fa4:	cld    
  401fa5:	add    DWORD PTR [esi+0x17],edi
  401fa8:	inc    esi
  401fa9:	push   esp
  401faa:	out    0x57,eax
  401fac:	scas   al,BYTE PTR es:[edi]
  401fad:	cmc    
  401fae:	test   BYTE PTR [ebp-0xe],0x9c
  401fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fb3:	test   DWORD PTR ds:[ecx-0x4d],edi
  401fb7:	pop    esp
  401fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fb9:	and    ah,ch
  401fbb:	cli    
  401fbc:	jl     0x401f94
  401fbe:	mov    ds:0x21047b16,al
  401fc3:	sti    
  401fc4:	hlt    
  401fc5:	pop    es
  401fc6:	(bad)  
  401fc7:	mov    ch,0x81
  401fc9:	movaps XMMWORD PTR [edi-0x42a374da],xmm0
  401fd0:	scas   al,BYTE PTR es:[edi]
  401fd1:	cli    
  401fd2:	fcomp  QWORD PTR [edx+0x3d4487a0]
  401fd8:	dec    esp
  401fd9:	lea    eax,[ecx]
  401fdb:	cs rcr bl,0x2b
  401fdf:	push   DWORD PTR [esi]
  401fe1:	xor    BYTE PTR [ebp+0x23],ch
  401fe4:	mov    eax,0x32b20322
  401fe9:	add    eax,0xe460b643
  401fee:	pop    ecx
  401fef:	sar    BYTE PTR [ecx-0x14],0x47
  401ff3:	into   
  401ff4:	jae    0x40204e
  401ff6:	sub    edx,esp
  401ff8:	int3   
  401ff9:	or     ebp,eax
  401ffb:	push   ebx
  401ffc:	dec    edi
  401ffd:	add    BYTE PTR [ebp-0x4d357f0],ch
  402003:	push   ebx
  402004:	or     cl,dh
  402006:	test   BYTE PTR [eax],0xab
  402009:	adc    DWORD PTR [edx+0x69],0xffffffea
  40200d:	(bad)  
  40200e:	pop    esp
  40200f:	ins    DWORD PTR es:[edi],dx
  402010:	add    bl,BYTE PTR [ebx+0x21db2c36]
  402016:	cmp    dl,BYTE PTR [ecx-0x6d58b0db]
  40201c:	push   ecx
  40201d:	js     0x402032
  40201f:	out    0x82,al
  402021:	out    0xf6,eax
  402023:	sahf   
  402024:	jns    0x40202e
  402026:	imul   edi,DWORD PTR [ecx],0x2a077be6
  40202c:	sbb    al,0x39
  40202e:	mov    al,ds:0x3abdb2b8
  402033:	sub    al,0xb2
  402035:	push   ebx
  402036:	push   eax
  402037:	call   0xb9bf55f7
  40203c:	dec    ebp
  40203d:	ja     0x4020aa
  40203f:	xor    BYTE PTR [esi-0x14],ah
  402042:	dec    ebp
  402043:	pop    esi
  402044:	jecxz  0x402097
  402046:	mov    ecx,0xde1a5d2f
  40204b:	pop    es
  40204c:	inc    ecx
  40204d:	cdq    
  40204e:	and    ch,BYTE PTR [esi]
  402050:	push   0xffffffac
  402052:	jl     0x40200c
  402054:	jl     0x402035
  402056:	mov    al,ds:0x8928db80
  40205b:	dec    esi
  40205c:	sbb    dl,BYTE PTR [ecx]
  40205e:	sub    BYTE PTR [ecx+0x129bb38e],0x68
  402065:	adc    DWORD PTR [ecx],edi
  402067:	xchg   DWORD PTR [ebx-0x6ba208ec],esi
  40206d:	iret   
  40206e:	loopne 0x402054
  402070:	and    BYTE PTR [edi+ecx*4],0x7
  402074:	ret    
  402075:	aaa    
  402076:	cs add al,0xc5
  402079:	ins    DWORD PTR es:[edi],dx
  40207a:	sbb    edx,DWORD PTR [edx]
  40207c:	add    edx,esp
  40207e:	inc    ebp
  40207f:	and    ch,BYTE PTR [eax+0x30]
  402082:	jne    0x4020bd
  402084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402085:	cld    
  402086:	repnz push ecx
  402088:	fstp   QWORD PTR [ecx+0x70]
  40208b:	pop    ds
  40208c:	and    al,0xba
  40208e:	dec    edx
  40208f:	mov    bl,0x21
  402091:	fistp  WORD PTR [ebp-0x33]
  402094:	jmp    0x402088
  402096:	xor    al,0xb5
  402098:	scas   eax,DWORD PTR es:[edi]
  402099:	sti    
  40209a:	sbb    eax,0x52775935
  40209f:	mov    ds:0x48ee828e,eax
  4020a4:	xchg   esp,eax
  4020a5:	jbe    0x402032
  4020a7:	bound  eax,QWORD PTR [ebx-0x4c2c197c]
  4020ad:	mov    WORD PTR [ebp+ebx*8-0x2eaa41d7],?
  4020b4:	cwde   
  4020b5:	or     al,dh
  4020b7:	sahf   
  4020b8:	cmp    edx,DWORD PTR [edx+0x6e55c3bd]
  4020be:	stc    
  4020bf:	fs aaa 
  4020c1:	in     eax,0x85
  4020c3:	out    dx,eax
  4020c4:	int3   
  4020c5:	pop    es
  4020c6:	dec    esi
  4020c7:	cmc    
  4020c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020c9:	popa   
  4020ca:	jns    0x4020aa
  4020cc:	sub    al,0xaf
  4020ce:	inc    edx
  4020cf:	bound  eax,QWORD PTR [ecx+0xb1ee259]
  4020d5:	fcomip st,st(0)
  4020d7:	fnsave [ecx+0x6855a766]
  4020dd:	pop    ss
  4020de:	iret   
  4020df:	jo     0x402090
  4020e1:	jb     0x4020f5
  4020e3:	push   edx
  4020e4:	hlt    
  4020e5:	out    0x5,al
  4020e7:	(bad)  
  4020e8:	jno    0x4020c5
  4020ea:	fisttp DWORD PTR [edi+0x494b69ee]
  4020f0:	xchg   ebp,eax
  4020f1:	call   0xa0480f64
  4020f6:	ss xlat BYTE PTR es:[ebx]
  4020f9:	xchg   DWORD PTR [ecx],ecx
  4020fb:	sub    DWORD PTR [ecx+0x44],0x74
  4020ff:	test   eax,0xfd139e4c
  402104:	cmp    al,0x5d
  402106:	xchg   ebp,eax
  402107:	mov    ebp,0x3c5684a
  40210c:	or     DWORD PTR fs:[ecx],edx
  40210f:	jmp    esp
  402111:	(bad)  
  402112:	pop    ss
  402113:	psubq  mm0,mm5
  402116:	daa    
  402117:	mov    edx,DWORD PTR [edi+0x32]
  40211a:	fs push esp
  40211d:	aas    
  40211e:	push   0xd58197a0
  402123:	out    0xee,eax
  402125:	pop    esp
  402126:	xchg   BYTE PTR [esi+esi*1+0x2f97815a],dh
  40212d:	adc    DWORD PTR [eax+0x722a0614],0x11
  402134:	pop    ecx
  402135:	jno    0x402116
  402137:	dec    esp
  402138:	dec    DWORD PTR [eax]
  40213a:	outs   dx,BYTE PTR ds:[esi]
  40213b:	push   ebp
  40213c:	cmp    eax,0x5986fe01
  402141:	mov    edx,0x81244ad1
  402146:	(bad)  
  402147:	ret    
  402148:	and    al,0x21
  40214a:	jg     0x402153
  40214c:	in     eax,0x2
  40214e:	lock (bad) 
  402150:	pop    edi
  402151:	cs mov esp,0x1d6b524e
  402157:	xchg   edi,eax
  402158:	xor    eax,ebp
  40215a:	inc    ebp
  40215b:	jo     0x402161
  40215d:	sbb    BYTE PTR [ecx+ebx*1],ch
  402160:	jl     0x40211a
  402162:	pop    ecx
  402163:	lods   al,BYTE PTR ds:[esi]
  402164:	mov    ds:0x2792dc00,al
  402169:	daa    
  40216a:	push   edi
  40216b:	sub    eax,0x723e62c8
  402170:	dec    ebp
  402171:	shl    BYTE PTR [ebp-0x2d38a274],cl
  402177:	xor    DWORD PTR [ebx-0x2c],esi
  40217a:	xchg   edi,eax
  40217b:	pop    ss
  40217c:	int    0x23
  40217e:	jg     0x402102
  402180:	retf   0x740a
  402183:	pop    ebx
  402184:	push   ss
  402185:	adc    eax,0x8522a2a2
  40218a:	xor    bh,dh
  40218c:	mov    eax,0x1c35147a
  402191:	xor    BYTE PTR [ebx-0x3],0x8b
  402195:	sbb    DWORD PTR [ecx+0x71],esp
  402198:	sahf   
  402199:	clc    
  40219a:	mov    ebp,0x9a9d7a55
  40219f:	fs jge 0x402128
  4021a2:	cmc    
  4021a3:	pop    esp
  4021a4:	push   ecx
  4021a5:	mov    ch,0xa7
  4021a7:	imul   edi,esp,0x1c
  4021aa:	jmp    0x1d00:0xff8afb1f
  4021b1:	je     0x402138
  4021b3:	outs   dx,BYTE PTR ds:[esi]
  4021b4:	in     eax,0x7b
  4021b6:	push   cs
  4021b7:	dec    esi
  4021b8:	call   0xda2ee8b
  4021bd:	mov    eax,ds:0xf2d3afe1
  4021c2:	rol    eax,1
  4021c4:	hlt    
  4021c5:	cmp    al,0x73
  4021c7:	jg     0x40214a
  4021c9:	mov    ah,0x12
  4021cb:	jb     0x40221b
  4021cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021ce:	xor    dh,BYTE PTR [ebp+0x7b16f62f]
  4021d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021d5:	xor    al,0xc
  4021d7:	ins    DWORD PTR es:[edi],dx
  4021d8:	jns    0x40224c
  4021da:	dec    esi
  4021db:	cmp    cl,BYTE PTR [ebp+0x7e34cc5c]
  4021e1:	es fs jge 0x402192
  4021e5:	sub    dh,BYTE PTR [ebp-0x23]
  4021e8:	add    DWORD PTR [edi],edx
  4021ea:	jo     0x402172
  4021ec:	pop    ecx
  4021ed:	dec    eax
  4021ee:	and    eax,0x8639b9ce
  4021f3:	xchg   esp,eax
  4021f4:	add    al,BYTE PTR [eax+0x40]
  4021f7:	xchg   ecx,eax
  4021f8:	shl    BYTE PTR [ebp-0x779c0fc4],1
  4021fe:	int3   
  4021ff:	add    BYTE PTR [edi-0x66],bl
  402202:	dec    ebp
  402203:	lods   al,BYTE PTR ds:[esi]
  402204:	dec    edi
  402205:	iret   
  402206:	mov    cl,0xa0
  402208:	push   esp
  402209:	xchg   edi,eax
  40220a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40220c:	inc    esi
  40220d:	xchg   edi,eax
  40220e:	mov    ebx,edx
  402210:	adc    ch,BYTE PTR [ebp-0x299168c1]
  402216:	push   0x50
  402218:	ror    DWORD PTR [ecx],cl
  40221a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40221b:	mov    ?,WORD PTR [ecx]
  40221d:	outs   dx,DWORD PTR ds:[esi]
  40221e:	or     dh,BYTE PTR [edi+0x66]
  402221:	ret    
  402222:	mov    bh,0x8d
  402224:	mov    ebx,0x10488548
  402229:	pop    ss
  40222a:	aaa    
  40222b:	dec    ebp
  40222c:	add    ecx,DWORD PTR [eax-0x7]
  40222f:	or     eax,0x74150d39
  402234:	rcl    DWORD PTR [edx-0x495f6d21],cl
  40223a:	push   0x29
  40223c:	lock fimul DWORD PTR [ebp-0x4f3cb33f]
  402243:	jnp    0x40222b
  402245:	add    al,0xb5
  402247:	std    
  402248:	retf   0x3105
  40224b:	cmp    al,0xa1
  40224d:	scas   eax,DWORD PTR es:[edi]
  40224e:	adc    bh,ch
  402250:	pop    ecx
  402251:	repz wrmsr 
  402254:	mov    bh,BYTE PTR es:[ecx]
  402257:	lods   al,BYTE PTR ds:[esi]
  402258:	mov    eax,ds:0xd5c5952b
  40225d:	xor    eax,0x31a3b8f4
  402262:	adc    DWORD PTR [eax+0x314eb9c8],ebx
  402268:	xor    BYTE PTR [edi+0x7f],bh
  40226b:	add    ah,BYTE PTR [edx+0x52f4a202]
  402271:	add    cl,cl
  402273:	adc    al,0x57
  402275:	fmul   QWORD PTR [eax]
  402277:	sub    al,0x9f
  402279:	repz jp 0x402239
  40227c:	or     al,0x8b
  40227e:	aas    
  40227f:	or     al,0xb7
  402281:	and    eax,0x4b1d121c
  402286:	ret    0xb354
  402289:	push   ecx
  40228a:	adc    DWORD PTR [ecx],edx
  40228c:	mov    edi,0xff6e9c4
  402291:	xchg   al,dh
  402293:	je     0x402256
  402295:	repnz mov ecx,0x20a79d71
  40229b:	xor    ch,BYTE PTR [ebx]
  40229d:	popa   
  40229e:	hlt    
  40229f:	fidivr WORD PTR [ebp+0x18fcb1ec]
  4022a5:	push   cs
  4022a6:	mov    ecx,0xb5e7876e
  4022ab:	adc    al,0x1e
  4022ad:	fisubr WORD PTR [ecx]
  4022af:	lods   al,BYTE PTR ds:[esi]
  4022b0:	out    dx,al
  4022b1:	cmp    ecx,DWORD PTR ds:0x5ffaf8d2
  4022b7:	sub    al,0x20
  4022b9:	in     eax,dx
  4022ba:	xchg   ebx,eax
  4022bb:	cdq    
  4022bc:	and    eax,0x29f32b51
  4022c1:	or     ah,cl
  4022c3:	push   eax
  4022c4:	sub    eax,0x84676e51
  4022c9:	dec    ebx
  4022ca:	inc    ebx
  4022cb:	(bad)  
  4022cd:	out    0xd8,eax
  4022cf:	mov    cl,0x5d
  4022d1:	loope  0x402331
  4022d3:	jno    0x4022ce
  4022d5:	push   ecx
  4022d6:	out    0x9e,eax
  4022d8:	mov    al,0xf4
  4022da:	loopne 0x4022a7
  4022dc:	xchg   ch,cl
  4022de:	mov    al,0x1
  4022e0:	rcr    BYTE PTR [ecx-0x5d],1
  4022e3:	gs jg  0x4022ab
  4022e6:	adc    al,0xdc
  4022e8:	fldcw  WORD PTR [ebp-0x20c4b9ed]
  4022ee:	retf   
  4022ef:	pop    ecx
  4022f0:	inc    ecx
  4022f1:	dec    esi
  4022f2:	xor    al,0xde
  4022f4:	or     esi,DWORD PTR [ebp+0x5d3e1144]
  4022fa:	mov    esi,0xad97a099
  4022ff:	in     al,0xec
  402301:	and    eax,0x5480fda8
  402306:	push   0xffffffb8
  402308:	mov    ecx,0xf99b6aaf
  40230d:	(bad)  
  40230e:	nop
  40230f:	data16 mov ds:0x3d5a3d00,al
  402315:	outs   dx,BYTE PTR ds:[esi]
  402316:	pusha  
  402317:	mov    bl,dh
  402319:	add    DWORD PTR [edi],edx
  40231b:	pop    ebx
  40231c:	xor    eax,0xe6c80a0e
  402321:	inc    edi
  402322:	and    DWORD PTR [ebx+esi*8-0xe],ebx
  402326:	cmp    ch,0x99
  402329:	in     al,dx
  40232a:	fwait
  40232b:	pop    edi
  40232c:	xchg   edx,eax
  40232d:	and    DWORD PTR [esi-0x372ec2c],0x143f0916
  402337:	push   ss
  402338:	mov    gs,WORD PTR [ecx-0x58a9344a]
  40233e:	aas    
  40233f:	fist   DWORD PTR [eax-0x5e]
  402342:	or     bl,BYTE PTR ds:0x6bd978ef
  402348:	call   eax
  40234a:	inc    edx
  40234b:	daa    
  40234c:	ja     0x402329
  40234e:	xor    esi,esp
  402350:	aam    0x50
  402352:	sub    edx,DWORD PTR [edi]
  402354:	inc    ebp
  402355:	add    BYTE PTR [eax+0x5b1ce123],ah
  40235b:	in     al,dx
  40235c:	adc    al,0xc2
  40235e:	pop    ds
  40235f:	sbb    dh,dh
  402361:	jmp    0x36178c4b
  402366:	lock inc edi
  402368:	or     BYTE PTR [ebp-0x2e],ah
  40236b:	sbb    DWORD PTR [ecx+0x54],ebx
  40236e:	add    DWORD PTR [edx],ebx
  402370:	cmp    BYTE PTR [esi+esi*8-0x10],dh
  402374:	mov    dl,0x8d
  402376:	mov    ch,0xb8
  402378:	jge    0x4023c9
  40237a:	fisub  DWORD PTR [esi-0x45]
  40237d:	imul   esi,DWORD PTR [edx+0x7da189dd],0x67
  402384:	daa    
  402385:	pop    eax
  402386:	jmp    0xcea09987
  40238b:	into   
  40238c:	call   0x85c89268
  402391:	sbb    bh,dl
  402393:	sub    ecx,ebp
  402395:	call   0x66ab:0xda17616c
  40239c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40239d:	fadd   st(1),st
  40239f:	mov    ecx,0x342c10f7
  4023a4:	scas   eax,DWORD PTR es:[edi]
  4023a5:	inc    ecx
  4023a6:	inc    edx
  4023a7:	inc    edx
  4023a8:	int3   
  4023a9:	or     BYTE PTR [ecx+0x5664614f],cl
  4023af:	les    esi,FWORD PTR fs:[ebp-0x73]
  4023b3:	jmp    0x64e27225
  4023b8:	push   0xa3a01c88
  4023bd:	mov    ?,WORD PTR [ebx+0x66]
  4023c0:	fcmovnb st,st(5)
  4023c2:	ja     0x40239b
  4023c4:	sbb    ecx,DWORD PTR ds:[ebx+0x37f8e3e1]
  4023cb:	jmp    0x867f0009
  4023d0:	fsubr  QWORD PTR [ebx]
  4023d2:	add    ebp,eax
  4023d4:	fcomp  QWORD PTR [ebp+esi*2-0x59ae2ed8]
  4023db:	lahf   
  4023dc:	(bad)  
  4023dd:	int    0x9f
  4023df:	out    0xac,eax
  4023e1:	and    DWORD PTR [esi],0xeb5a796a
  4023e7:	fcmovnb st,st(1)
  4023e9:	imul   esp,DWORD PTR [edx-0x241d174],0x36
  4023f0:	pop    eax
  4023f1:	arpl   WORD PTR [esi-0x5bb5dbc5],di
  4023f7:	add    DWORD PTR [ecx-0x61e2eae2],edi
  4023fd:	and    edx,edi
  4023ff:	nop
  402400:	rcr    DWORD PTR [eax+eax*8+0x2459e4f9],0xb7
  402408:	cmc    
  402409:	inc    edx
  40240a:	push   ebx
  40240b:	cmp    ah,BYTE PTR [edx-0x509f8c7b]
  402411:	mov    dl,0x98
  402413:	dec    eax
  402414:	pop    ecx
  402415:	fnstenv [edx-0x52]
  402418:	pop    esp
  402419:	adc    dl,BYTE PTR [edi-0x63017fdb]
  40241f:	ins    DWORD PTR es:[edi],dx
  402420:	or     al,0x28
  402422:	pop    esi
  402423:	and    DWORD PTR [ebx],edx
  402425:	sar    dh,1
  402427:	rcl    DWORD PTR [ecx-0x7dffd9f8],0xb9
  40242e:	xor    DWORD PTR [ebp-0x69],ebp
  402431:	aaa    
  402432:	mov    eax,0x2f2837ee
  402437:	outs   dx,BYTE PTR ds:[esi]
  402438:	pusha  
  402439:	les    ebp,FWORD PTR [edi-0xe850a20]
  40243f:	jge    0x402487
  402441:	les    eax,FWORD PTR [esi]
  402443:	sub    ebp,ecx
  402445:	in     eax,0xf1
  402447:	or     ebx,DWORD PTR [eax]
  402449:	dec    eax
  40244a:	out    0x62,eax
  40244c:	sbb    al,0xed
  40244e:	mov    edx,0xef642343
  402453:	jp     0x4023e3
  402455:	call   0xbf8c:0xf6bd895f
  40245c:	sub    BYTE PTR [edi],bl
  40245e:	out    0x5c,al
  402460:	lds    eax,FWORD PTR [ecx]
  402462:	jae    0x4024cb
  402464:	add    al,BYTE PTR [ebp+0x5b]
  402467:	fwait
  402468:	loop   0x40246e
  40246a:	xchg   ebx,eax
  40246b:	iret   
  40246c:	and    DWORD PTR [esi],eax
  40246e:	sub    eax,0xe2bdca66
  402473:	jo     0x4024cb
  402475:	sbb    al,0x32
  402477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402478:	inc    ebx
  402479:	push   ds
  40247a:	mov    cs,ebx
  40247c:	xor    eax,0xc23c6dd1
  402481:	adc    eax,0xe31f6f28
  402486:	pusha  
  402487:	sbb    ecx,esi
  402489:	ficomp DWORD PTR [eax+ebp*2]
  40248c:	stos   DWORD PTR es:[edi],eax
  40248d:	sbb    al,0xae
  40248f:	data16 (bad) 
  402491:	in     al,0xc4
  402493:	lds    ebx,FWORD PTR [edx]
  402495:	jne    0x40245c
  402497:	in     eax,0x46
  402499:	stos   BYTE PTR es:[edi],al
  40249a:	mov    al,0xef
  40249c:	ja     0x402508
  40249e:	push   ds
  40249f:	sar    DWORD PTR [ecx+0x355cdb11],cl
  4024a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024a6:	sub    BYTE PTR [eax-0xe16ca12],bh
  4024ac:	aaa    
  4024ad:	push   eax
  4024ae:	std    
  4024af:	xor    ch,cl
  4024b1:	(bad)  [ebx+0x23ef1705]
  4024b7:	xor    al,0xd6
  4024b9:	test   BYTE PTR [edi],0xac
  4024bc:	das    
  4024bd:	jmp    0xeb1f5624
  4024c2:	popa   
  4024c3:	jne    0x40252d
  4024c5:	std    
  4024c6:	cs std 
  4024c8:	out    dx,eax
  4024c9:	cli    
  4024ca:	mov    cl,0x3
  4024cc:	sbb    DWORD PTR [bp-0x57],0x7f8efa5b
  4024d4:	mov    dl,0x6f
  4024d6:	sbb    al,0xd1
  4024d8:	js     0x4024ab
  4024da:	call   0xd2bc88da
  4024df:	dec    esi
  4024e0:	xor    DWORD PTR [ecx+0x2d],edx
  4024e3:	cmc    
  4024e4:	sub    BYTE PTR [esi+ebx*1+0x1296af33],al
  4024eb:	gs icebp 
  4024ed:	ret    0xed30
  4024f0:	iret   
  4024f1:	jmp    0xda2b:0x6cd11e98
  4024f8:	shr    al,1
  4024fa:	pop    esi
  4024fb:	aaa    
  4024fc:	emms   
  4024fe:	mov    ?,ecx
  402500:	mov    cl,0x60
  402502:	cdq    
  402503:	adc    eax,0xe55bcc9
  402508:	fidivr DWORD PTR [eax+0x7ddd3e3a]
  40250e:	outs   dx,BYTE PTR ds:[esi]
  40250f:	pop    esp
  402510:	aam    0xac
  402512:	(bad)  
  402513:	aas    
  402514:	ins    BYTE PTR es:[edi],dx
  402515:	mov    al,ds:0xc28b6170
  40251a:	adc    al,0x71
  40251c:	outs   dx,DWORD PTR ds:[esi]
  40251d:	xchg   edi,eax
  40251e:	sub    dl,BYTE PTR [esi+0x3b058840]
  402524:	pop    es
  402525:	jmp    0x6c00:0xbf012a77
  40252c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40252d:	inc    esp
  40252e:	adc    BYTE PTR [bx+di+0x7a],0x38
  402533:	dec    edi
  402534:	add    al,0x43
  402536:	cmc    
  402537:	adc    DWORD PTR [esi-0x60d85814],ebp
  40253d:	ins    DWORD PTR es:[edi],dx
  40253e:	jle    0x40259b
  402540:	cmp    esp,DWORD PTR ds:0xffca675d
  402546:	in     al,dx
  402547:	mov    ah,0x50
  402549:	out    dx,eax
  40254a:	mov    DWORD PTR [esi],esp
  40254c:	dec    ebp
  40254d:	or     edx,DWORD PTR [edx-0x2818f553]
  402553:	js     0x402581
  402555:	sub    DWORD PTR [edi-0x2d0bb4e],ecx
  40255b:	jmp    0x402593
  40255d:	xor    edx,ebp
  40255f:	push   esp
  402560:	ins    DWORD PTR es:[edi],dx
  402561:	stc    
  402562:	mov    edx,0x86a45be6
  402567:	jle    0x4025a2
  402569:	test   DWORD PTR es:[ebx],0x3cb97547
  402570:	aaa    
  402571:	imul   eax,DWORD PTR [ebx],0x66
  402574:	xchg   ebx,eax
  402575:	dec    ebp
  402576:	xor    esi,ecx
  402578:	pop    edi
  402579:	fsubr  QWORD PTR [ebx]
  40257b:	xchg   ebx,eax
  40257c:	jle    0x402579
  40257e:	xor    esp,DWORD PTR [ecx]
  402580:	dec    BYTE PTR [edi]
  402582:	inc    edx
  402583:	jmp    0x402566
  402585:	adc    al,0x96
  402587:	jg     0x40255b
  402589:	mov    ds:0x452c2de1,al
  40258e:	lods   eax,DWORD PTR ds:[esi]
  40258f:	cmp    edi,eax
  402591:	ins    DWORD PTR es:[edi],dx
  402592:	hlt    
  402593:	scas   al,BYTE PTR es:[edi]
  402594:	cmp    eax,ebp
  402596:	fld    TBYTE PTR [ebx]
  402598:	inc    ecx
  402599:	mov    al,0xa4
  40259b:	mov    esp,0x3df4cd0
  4025a0:	xor    DWORD PTR [ecx],0x344f38ab
  4025a6:	sbb    BYTE PTR [ecx+0x2dc3e339],dl
  4025ac:	fidiv  WORD PTR [ecx+0xe]
  4025af:	add    dh,BYTE PTR [eax-0x4a]
  4025b2:	(bad)  
  4025b3:	jnp    0x4025c4
  4025b5:	pop    edx
  4025b6:	enter  0xffab,0x1c
  4025ba:	inc    esi
  4025bb:	add    bh,BYTE PTR [eax]
  4025bd:	jle    0x402553
  4025bf:	add    DWORD PTR [esp+ecx*8+0x3c8cb930],eax
  4025c6:	push   es
  4025c7:	inc    edx
  4025c8:	jb     0x40259c
  4025ca:	or     BYTE PTR [edx-0x52270ed9],dl
  4025d0:	in     eax,dx
  4025d1:	arpl   WORD PTR [esi],bx
  4025d3:	dec    ecx
  4025d4:	js     0x4025d1
  4025d6:	jb     0x402564
  4025d8:	sub    bh,ch
  4025da:	out    dx,eax
  4025db:	dec    ebx
  4025dc:	fsubr  DWORD PTR [edi]
  4025de:	xchg   ecx,eax
  4025df:	loope  0x40257f
  4025e1:	stc    
  4025e2:	adc    DWORD PTR [ecx-0x12],ecx
  4025e5:	or     eax,0x7efbf236
  4025ea:	dec    edi
  4025eb:	(bad)  
  4025ec:	xchg   esi,eax
  4025ed:	xchg   ecx,eax
  4025ee:	mov    ch,0x27
  4025f0:	adc    esp,DWORD PTR [esi]
  4025f2:	(bad)  
  4025f3:	fcmovb st,st(2)
  4025f5:	jnp    0x4025e1
  4025f7:	stc    
  4025f8:	xchg   ecx,eax
  4025f9:	mov    ebp,0x21c241c0
  4025fe:	jge    0x402639
  402600:	data16 mov ah,0xb7
  402603:	pop    esi
  402604:	xor    BYTE PTR [ebx+0x31],bl
  402607:	dec    esp
  402608:	outs   dx,BYTE PTR ds:[esi]
  402609:	aaa    
  40260a:	adc    BYTE PTR [ecx+0xe020851],bh
  402610:	call   0xca31:0x60ba13e5
  402617:	jae    0x4025bb
  402619:	push   edx
  40261a:	xor    eax,esp
  40261c:	(bad)  
  40261d:	mov    dh,0x1b
  40261f:	aas    
  402620:	scas   al,BYTE PTR es:[edi]
  402621:	pop    esp
  402622:	mov    bh,0x3
  402624:	lods   al,BYTE PTR ds:[esi]
  402625:	xlat   BYTE PTR ds:[ebx]
  402626:	xor    BYTE PTR [esi],0xf8
  402629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40262a:	test   BYTE PTR [eax-0xd3c1140],dl
  402630:	(bad)  
  402631:	xchg   ebx,eax
  402632:	in     al,dx
  402633:	dec    ebp
  402634:	cmp    dl,bl
  402636:	xchg   esp,eax
  402637:	test   esi,0xd31d9074
  40263d:	push   ebx
  40263e:	add    ebp,ebp
  402640:	loope  0x40267f
  402642:	sbb    al,0xf
  402644:	mov    ds:0x40785e95,al
  402649:	push   cs
  40264a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40264b:	cmp    eax,0x36051420
  402650:	pop    edi
  402651:	sub    BYTE PTR [eax+0x1f],ah
  402654:	xchg   esp,eax
  402655:	inc    ebp
  402656:	push   0x38
  402658:	lds    ecx,FWORD PTR [eax-0xef710bf]
  40265e:	out    dx,eax
  40265f:	jge    0x402652
  402661:	jle    0x4026a7
  402663:	shl    BYTE PTR [ebx-0x73d5ec8],cl
  402669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40266a:	sar    DWORD PTR [ebp+0x600d9261],cl
  402670:	xor    al,0xdc
  402672:	out    dx,al
  402673:	add    esi,ecx
  402675:	mov    eax,0x87fe8ddd
  40267a:	enter  0xfbc2,0x87
  40267e:	adc    DWORD PTR [esi],eax
  402680:	mov    WORD PTR [eax-0x10],es
  402683:	dec    ebp
  402684:	and    BYTE PTR [ecx-0x7effb75a],0x73
  40268b:	or     eax,ebp
  40268d:	(bad)  
  40268f:	sub    eax,0xcdf967e2
  402694:	mov    ah,0xa9
  402696:	add    BYTE PTR [ebx],al
  402698:	fnsave [ebx-0x75]
  40269b:	and    dh,BYTE PTR [ebp+0x7b]
  40269e:	jl     0x4026a8
  4026a0:	sbb    cl,al
  4026a2:	shl    DWORD PTR [ebx-0x6c],1
  4026a5:	and    ah,BYTE PTR [esi-0x7bab531c]
  4026ab:	sub    dl,BYTE PTR [ecx-0x4c882ee7]
  4026b1:	cmp    esi,ebx
  4026b3:	loopne 0x4026cf
  4026b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026b6:	and    eax,DWORD PTR ds:0xd686ea49
  4026bc:	aas    
  4026bd:	jns    0x4026f1
  4026bf:	jl     0x40270f
  4026c1:	loop   0x402734
  4026c3:	push   ds
  4026c4:	push   ebx
  4026c5:	ret    0xff2c
  4026c8:	add    eax,0x56db3296
  4026cd:	xor    al,0xa7
  4026cf:	push   eax
  4026d0:	mov    esp,0x3911a00e
  4026d5:	jb     0x4026c5
  4026d7:	pushf  
  4026d8:	repnz (bad) [ebx]
  4026db:	adc    DWORD PTR [edi+0x32],ebp
  4026de:	or     DWORD PTR [ebx+edi*1+0x2cc17fdf],0x42
  4026e6:	mov    ah,0x30
  4026e8:	sub    eax,0x7cf0d1e5
  4026ed:	sub    BYTE PTR ds:0xa7669853,dl
  4026f3:	pop    esi
  4026f4:	cs pop edx
  4026f6:	push   0x11978d1e
  4026fb:	adc    cl,BYTE PTR [edx*2-0xf993288]
  402702:	mov    ?,WORD PTR [edi+0x1c]
  402705:	ret    0x91e0
  402708:	pop    DWORD PTR [edx]
  40270a:	cmp    DWORD PTR [edx+0x5597db4],ecx
  402710:	sbb    eax,0xd613149d
  402715:	sub    eax,0x2d9011f4
  40271a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40271b:	jnp    0x40278a
  40271d:	sub    esi,DWORD PTR [edi+0x6ce098c9]
  402723:	dec    eax
  402724:	fdivr  DWORD PTR [edx]
  402726:	das    
  402727:	mov    DWORD PTR [edx+0x455d2349],edx
  40272d:	sti    
  40272e:	pop    edi
  40272f:	mov    al,ds:0x6a4a3f3f
  402734:	nop
  402735:	push   eax
  402736:	inc    edx
  402737:	(bad)
  40273b:	(bad)  
  40273c:	bswap  edi
  40273e:	dec    edx
  40273f:	mov    DWORD PTR [esi+ebx*2+0x96b9189],eax
  402746:	xor    bh,BYTE PTR [ebx]
  402748:	es mov ah,0x99
  40274b:	jle    0x4026d2
  40274d:	adc    eax,0x87bea6b
  402752:	inc    esp
  402753:	test   eax,0xf9a6c939
  402758:	push   edi
  402759:	fstp   DWORD PTR [eax+edi*4]
  40275c:	add    DWORD PTR [eax+0x4727ce32],esi
  402762:	pusha  
  402763:	mov    dl,0x48
  402765:	push   es
  402766:	retf   0x45c8
  402769:	sub    al,0x64
  40276b:	inc    edx
  40276c:	into   
  40276d:	sub    eax,0xa1d1ea42
  402772:	push   0xc
  402774:	adc    ch,BYTE PTR [eax-0x2c]
  402777:	lock fcomp DWORD PTR [eax+0x265cc0ec]
  40277e:	pop    ss
  40277f:	push   ss
  402780:	xchg   ebp,eax
  402781:	xor    bl,BYTE PTR [ecx+ecx*8-0xc]
  402785:	jmp    0xe29f772a
  40278a:	aaa    
  40278b:	out    dx,eax
  40278c:	cmp    eax,0x24f1aa74
  402791:	std    
  402792:	jmp    0x4027ae
  402794:	mov    bp,0xcd4f
  402798:	sbb    al,0x9f
  40279a:	sbb    DWORD PTR [edi+0x40f7251c],ebp
  4027a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027a1:	fcomp  DWORD PTR [esi-0x7]
  4027a4:	outs   dx,DWORD PTR ds:[esi]
  4027a5:	mov    WORD PTR [ebp+edx*4+0x21],ss
  4027a9:	sbb    al,0xf0
  4027ab:	mov    edx,0x941df708
  4027b0:	cmovnp esi,esi
  4027b3:	push   edx
  4027b4:	push   ss
  4027b5:	xor    BYTE PTR [ecx-0x72],dh
  4027b8:	add    al,BYTE PTR [ecx+0x3dee5f05]
  4027be:	lods   eax,DWORD PTR ds:[esi]
  4027bf:	mov    al,ds:0xa74483e1
  4027c4:	push   ecx
  4027c5:	or     eax,DWORD PTR [esi]
  4027c7:	push   esp
  4027c8:	sub    eax,0xb2aa4604
  4027cd:	or     esi,ebx
  4027cf:	sbb    cl,ah
  4027d1:	jge    0x4027a3
  4027d3:	push   es
  4027d4:	and    al,bh
  4027d6:	xchg   esp,eax
  4027d7:	xchg   ebx,eax
  4027d8:	shl    DWORD PTR [edx],1
  4027da:	sbb    al,0xd1
  4027dc:	jp     0x402846
  4027de:	cdq    
  4027df:	sub    DWORD PTR [ebx+0x7b],ecx
  4027e2:	test   DWORD PTR [ecx-0x271ec56a],esp
  4027e8:	cmp    ebp,eax
  4027ea:	dec    eax
  4027eb:	mov    ds:0xc6041af8,al
  4027f0:	loopne 0x402800
  4027f2:	cdq    
  4027f3:	bound  edi,QWORD PTR [ebp+0x3dfcbd2d]
  4027f9:	jmp    DWORD PTR [eax+0x71691e26]
  4027ff:	cdq    
  402800:	mov    dh,cl
  402802:	mov    ds:0x581c7f63,eax
  402807:	dec    esp
  402808:	jae    0x4027d5
  40280a:	inc    esi
  40280b:	aad    0x1d
  40280d:	ror    dl,1
  40280f:	in     al,0xc7
  402811:	bswap  ecx
  402813:	out    dx,eax
  402814:	xchg   edi,eax
  402815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402816:	and    bh,bh
  402818:	inc    esi
  402819:	pop    eax
  40281a:	mov    eax,0xfee23758
  40281f:	dec    edx
  402820:	(bad)  
  402822:	ret    
  402823:	cli    
  402824:	mov    al,ds:0x90df618d
  402829:	imul   DWORD PTR [edx]
  40282b:	add    DWORD PTR [eax+0x54],edx
  40282e:	and    al,0x8
  402830:	fs sbb esi,ebx
  402833:	aas    
  402834:	pusha  
  402835:	test   BYTE PTR [edi],dh
  402837:	pusha  
  402838:	adc    al,0xde
  40283a:	push   esi
  40283b:	out    dx,al
  40283c:	ins    BYTE PTR es:[edi],dx
  40283d:	int3   
  40283e:	or     eax,0x72d4b1af
  402843:	add    edi,DWORD PTR [edi-0x2c]
  402846:	fnstenv [edx]
  402848:	retf   
  402849:	rol    DWORD PTR [eax-0x33],0xe0
  40284d:	inc    eax
  40284e:	out    dx,eax
  40284f:	push   ebp
  402850:	push   eax
  402851:	mov    bl,0x91
  402853:	mov    esi,0x9e660f39
  402858:	push   cs
  402859:	pop    ecx
  40285a:	aam    0x4b
  40285c:	push   esi
  40285d:	sbb    al,0x1a
  40285f:	dec    esp
  402860:	into   
  402861:	cmp    al,0x78
  402863:	sub    cl,dl
  402865:	cmp    ah,BYTE PTR [esi+eax*2]
  402868:	mov    ecx,0xc7b90a08
  40286d:	sbb    al,dl
  40286f:	rol    BYTE PTR [edi+0x59],0xc0
  402873:	sub    cl,bl
  402875:	jmp    0x402895
  402877:	jle    0x40287d
  402879:	push   esi
  40287a:	xchg   esp,eax
  40287b:	sub    al,0xcd
  40287d:	xlat   BYTE PTR ds:[ebx]
  40287e:	mov    dl,0x6
  402880:	aad    0x8d
  402882:	xchg   BYTE PTR [eax+0x62],dl
  402885:	cld    
  402886:	icebp  
  402887:	pop    ecx
  402888:	ja     0x4028ec
  40288a:	sahf   
  40288b:	iret   
  40288c:	inc    esi
  40288d:	mov    ebp,0x1ced2b32
  402892:	xor    al,0xb5
  402894:	aas    
  402895:	mov    ecx,?
  402897:	jmp    0xa752bd5d
  40289c:	mov    eax,ds:0xfc697d80
  4028a1:	xchg   ebp,eax
  4028a2:	retf   
  4028a3:	shl    DWORD PTR [eax+ebp*4-0x6],0xae
  4028a8:	stos   BYTE PTR es:[edi],al
  4028a9:	int3   
  4028aa:	mov    ah,BYTE PTR [edi-0x70d951c8]
  4028b0:	retf   0xd0e8
  4028b3:	push   edx
  4028b4:	jg     0x40291b
  4028b6:	lea    esp,[edx]
  4028b8:	in     al,0xa5
  4028ba:	jo     0x402886
  4028bc:	pop    edx
  4028bd:	mov    bh,0x74
  4028bf:	mov    ds:0x9b37064f,eax
  4028c4:	pop    ebp
  4028c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028c6:	rol    BYTE PTR [esi],0xb5
  4028c9:	xchg   esi,eax
  4028ca:	pop    ds
  4028cb:	xchg   al,al
  4028cd:	jp     0x4028b3
  4028cf:	mov    ebp,0xb4524e0f
  4028d4:	or     ecx,DWORD PTR [edi]
  4028d6:	aaa    
  4028d7:	dec    ecx
  4028d8:	mov    ch,0x3f
  4028da:	mov    al,0xff
  4028dc:	mov    ebp,0x870ed056
  4028e1:	jne    0x4028b8
  4028e3:	xor    BYTE PTR [esi],bh
  4028e5:	or     eax,DWORD PTR [ebx+0x45]
  4028e8:	push   ebp
  4028e9:	mov    ch,0x6
  4028eb:	xor    edi,esi
  4028ed:	push   es
  4028ee:	or     al,0xc4
  4028f0:	fdiv   st(3),st
  4028f2:	repz popf 
  4028f4:	fcomp  DWORD PTR [eax]
  4028f6:	cmp    eax,edi
  4028f8:	imul   esp,ebp,0x298689ef
  4028fe:	jp     0x402945
  402900:	sbb    edx,ebx
  402902:	cs xchg ebp,eax
  402904:	pop    ss
  402905:	lea    ebp,[bx+di+0x25]
  402909:	outs   dx,DWORD PTR ds:[esi]
  40290a:	ror    DWORD PTR gs:[edx+0x1d],1
  40290e:	into   
  40290f:	cwde   
  402910:	loop   0x402983
  402912:	jae    0x40294a
  402914:	dec    esi
  402915:	and    eax,DWORD PTR [edi-0x17d2863c]
  40291b:	mov    dl,0x13
  40291d:	sub    bl,BYTE PTR [ebp+0x6816c280]
  402923:	sbb    al,0x62
  402925:	hlt    
  402926:	mov    al,0x0
  402928:	xor    eax,0xb35a3479
  40292d:	fist   DWORD PTR [ebp-0x34]
  402930:	imul   edx,DWORD PTR [ebp-0x32],0x1e
  402934:	sbb    al,0x6d
  402936:	loopne 0x4028b9
  402938:	mov    esp,0xa01d8aa5
  40293d:	mov    ecx,0xa4aa6045
  402942:	sub    BYTE PTR [ecx],dh
  402944:	repz or BYTE PTR [eax-0x5d],cl
  402948:	jp     0x402926
  40294a:	gs out dx,eax
  40294c:	mov    ds:0x3f2ac0e3,al
  402951:	repnz nop
  402953:	out    0xd0,al
  402955:	cwde   
  402956:	cmp    esi,edx
  402958:	dec    ebp
  402959:	pop    ebp
  40295a:	push   edx
  40295b:	jbe    0x40290c
  40295d:	xchg   ebx,eax
  40295e:	push   esp
  40295f:	mov    ah,0x1f
  402961:	shl    al,cl
  402963:	dec    eax
  402964:	cmp    ebx,DWORD PTR [edx+0x2d]
  402967:	mov    esi,0xed6467c2
  40296c:	mov    ebp,DWORD PTR [esi+eiz*2+0x77]
  402970:	add    esp,DWORD PTR [ecx+0x3b]
  402973:	sbb    ch,ah
  402975:	ss dec edx
  402977:	add    ebx,esi
  402979:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40297b:	add    BYTE PTR [esi+0x45],0x1b
  40297f:	mov    fs,WORD PTR [edx]
  402981:	and    edx,eax
  402983:	sbb    ebp,DWORD PTR [esi]
  402985:	loop   0x402910
  402987:	sar    DWORD PTR [esi],0x6f
  40298a:	(bad)  
  40298b:	das    
  40298c:	and    edx,DWORD PTR [ebx+0x2e760334]
  402992:	dec    esi
  402993:	add    ah,0x6b
  402996:	rcl    esp,0x47
  402999:	sub    al,0x7d
  40299b:	mov    esp,0x16b2eef3
  4029a0:	ror    bh,0x1a
  4029a3:	jge    0x4029d0
  4029a5:	cwde   
  4029a6:	xor    edi,DWORD PTR [edx]
  4029a8:	mov    DWORD PTR [ebx],edi
  4029aa:	scas   eax,DWORD PTR es:[edi]
  4029ab:	pop    edi
  4029ac:	ret    
  4029ad:	in     al,0x28
  4029af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029b0:	add    BYTE PTR [edi],0xca
  4029b3:	xchg   esp,eax
  4029b4:	and    al,0x45
  4029b6:	shl    dh,0xc4
  4029b9:	xchg   ebx,eax
  4029ba:	(bad)  
  4029bb:	mul    DWORD PTR [ebx+ecx*1]
  4029be:	test   al,0x5
  4029c0:	lea    ecx,ds:0x6f436505
  4029c6:	ins    BYTE PTR es:[edi],dx
  4029c7:	fisttp DWORD PTR [edx+edi*1+0x72a39554]
  4029ce:	pop    ds
  4029cf:	and    edi,DWORD PTR fs:[edi-0x74]
  4029d3:	or     ecx,DWORD PTR [edx-0x17]
  4029d6:	inc    ah
  4029d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029da:	inc    edx
  4029db:	ja     0x402a53
  4029dd:	add    ebp,esp
  4029df:	mov    dl,0x1f
  4029e1:	in     al,0xd9
  4029e3:	(bad)  
  4029e4:	cmp    DWORD PTR [edi],ecx
  4029e6:	push   0x1ac99b2e
  4029eb:	es push 0xac86a5eb
  4029f1:	mov    eax,0xe2c386e3
  4029f6:	call   0x609e:0x9422a9c9
  4029fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029fe:	repz out 0x8b,eax
  402a01:	mov    WORD PTR [esi-0x3ff6b843],fs
  402a07:	adc    BYTE PTR [edi+0x68],al
  402a0a:	inc    esp
  402a0b:	mov    ch,0x8c
  402a0d:	push   esp
  402a0e:	push   edi
  402a0f:	pop    es
  402a10:	pushf  
  402a11:	test   DWORD PTR [esi-0x228dd88a],edi
  402a17:	and    ecx,eax
  402a19:	popa   
  402a1a:	sub    eax,DWORD PTR [edx-0x39882599]
  402a20:	ss jns 0x4029ac
  402a23:	add    DWORD PTR [ebp+0x105036cb],esp
  402a29:	in     al,0x54
  402a2b:	pop    eax
  402a2c:	les    ecx,FWORD PTR [eax-0x74c9c956]
  402a32:	ret    
  402a33:	aam    0xf1
  402a35:	gs pop esi
  402a37:	in     eax,dx
  402a38:	dec    edx
  402a39:	mov    ebx,0x5207a321
  402a3e:	cs adc ebx,ebp
  402a41:	outs   dx,DWORD PTR ds:[esi]
  402a42:	cld    
  402a43:	add    eax,0x1079ae0c
  402a48:	in     al,dx
  402a49:	pop    esi
  402a4a:	aam    0xbc
  402a4c:	scas   eax,DWORD PTR es:[edi]
  402a4d:	fild   QWORD PTR [ebx+0x3ac331ca]
  402a53:	in     eax,0xf3
  402a55:	push   ds
  402a56:	xor    eax,0xc5c7f77d
  402a5b:	push   eax
  402a5c:	arpl   WORD PTR [edi+ebp*4-0x6a82dc3f],dx
  402a63:	(bad)  
  402a65:	outs   dx,BYTE PTR ds:[esi]
  402a66:	fiadd  WORD PTR [edi]
  402a68:	call   0x9c6b:0xf49edb82
  402a6f:	lods   al,BYTE PTR ds:[esi]
  402a70:	mov    eax,ds:0xb4f779f3
  402a75:	pop    edx
  402a76:	mov    edx,0x9244143c
  402a7b:	pop    edi
  402a7c:	mov    cs,esi
  402a7e:	xor    dl,BYTE PTR [esi-0x670ea7e6]
  402a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a86:	jns    0x402af1
  402a88:	push   es
  402a89:	and    BYTE PTR [edx+0x7f3c610f],dh
  402a8f:	int    0x7c
  402a91:	push   cs
  402a92:	rol    DWORD PTR [ecx-0x36db944b],1
  402a98:	(bad)  
  402a99:	lods   eax,DWORD PTR ds:[esi]
  402a9a:	mov    esi,0x865458bd
  402a9f:	mov    esi,0xb244a5ed
  402aa4:	add    eax,0x9c512bff
  402aa9:	icebp  
  402aaa:	call   0x2a3d:0x115ffe0d
  402ab1:	xchg   edx,eax
  402ab2:	fbstp  TBYTE PTR [eax-0xbf9a483]
  402ab8:	mov    al,0xbf
  402aba:	or     esp,DWORD PTR [esi-0x62a4ef2f]
  402ac0:	sbb    eax,0x2d3af31
  402ac5:	mov    esp,0x4a8f396b
  402aca:	xor    DWORD PTR [edx-0x50],0x1266c3e
  402ad1:	cmc    
  402ad2:	push   ebx
  402ad3:	sbb    eax,0x522d31b1
  402ad8:	fdiv   st,st(2)
  402ada:	loope  0x402b0c
  402adc:	ins    BYTE PTR es:[edi],dx
  402add:	jmp    0xe649:0xf7300a50
  402ae4:	sub    ecx,DWORD PTR ds:0xcf463a0b
  402aea:	int    0xa5
  402aec:	mov    ds:0x1cf6c4d5,al
  402af1:	dec    ebp
  402af2:	cs push ebp
  402af4:	mov    ecx,0x4371a71a
  402af9:	inc    ebx
  402afa:	sbb    ebp,edi
  402afc:	fstp   TBYTE PTR [ebx+0x326d752e]
  402b02:	jbe    0x402b4d
  402b04:	cdq    
  402b05:	jle    0x402ac5
  402b07:	outs   dx,BYTE PTR ds:[esi]
  402b08:	es sbb eax,0xd305398b
  402b0e:	xor    BYTE PTR [ebp+0x67],bl
  402b11:	cld    
  402b12:	loop   0x402b61
  402b14:	mov    ebx,0x9292f791
  402b19:	shl    DWORD PTR [ecx-0x57],0x39
  402b1d:	repnz (bad) 
  402b1f:	jno    0x402b98
  402b21:	ss fxch st(6)
  402b24:	jg     0x402b86
  402b26:	mov    bl,0x98
  402b28:	jmp    0x44db:0xdcf7ae9b
  402b2f:	(bad)  
  402b31:	xadd   BYTE PTR [edi-0x74288d8e],bl
  402b38:	out    dx,eax
  402b39:	dec    edi
  402b3a:	aaa    
  402b3b:	mov    DWORD PTR [ebx-0x35dbaaf9],ebx
  402b41:	mov    ch,0x6e
  402b43:	inc    eax
  402b44:	mov    ?,WORD PTR [esi]
  402b46:	adc    eax,0xc9861ac0
  402b4b:	mov    dh,0x3f
  402b4d:	test   al,0xf4
  402b4f:	aaa    
  402b50:	mov    dl,BYTE PTR [ecx+eax*8]
  402b53:	push   edi
  402b54:	pop    DWORD PTR [edx]
  402b56:	xchg   ecx,eax
  402b57:	jae    0x402b39
  402b59:	stc    
  402b5a:	sbb    ebx,esp
  402b5c:	mov    esp,0xab934f66
  402b61:	(bad)  
  402b62:	mov    ch,0xb9
  402b64:	mov    bl,0xa9
  402b66:	shl    DWORD PTR [ebp-0x33],0x7d
  402b6a:	push   edx
  402b6b:	push   ds
  402b6c:	pop    eax
  402b6d:	pop    edx
  402b6e:	jae    0x402b23
  402b70:	xchg   ecx,eax
  402b71:	loop   0x402b54
  402b73:	aaa    
  402b74:	js     0x402b43
  402b76:	mov    BYTE PTR [eax+0x4f],ah
  402b79:	sti    
  402b7a:	dec    ecx
  402b7b:	sbb    eax,0x19227019
  402b80:	cmp    ah,BYTE PTR [edx-0x56c36d46]
  402b86:	stos   BYTE PTR es:[edi],al
  402b87:	jnp    0x402b15
  402b89:	or     eax,0x92f8bb5
  402b8e:	arpl   WORD PTR [ebx-0x3860d452],dx
  402b94:	rol    ch,0x69
  402b97:	or     ebp,ebx
  402b99:	ss inc edi
  402b9b:	stc    
  402b9c:	dec    eax
  402b9d:	stos   BYTE PTR es:[edi],al
  402b9e:	mov    bl,0x6d
  402ba0:	pop    DWORD PTR [eax+0x6ddcd6ce]
  402ba6:	lods   al,BYTE PTR ds:[esi]
  402ba7:	call   0x3779:0x994d75c2
  402bae:	std    
  402baf:	mov    ch,0xec
  402bb1:	mov    ds:0x2164a3b6,eax
  402bb6:	adc    eax,0xbb9a1177
  402bbb:	outs   dx,BYTE PTR ds:[esi]
  402bbc:	clc    
  402bbd:	adc    ch,0xf3
  402bc0:	icebp  
  402bc1:	push   cs
  402bc2:	and    BYTE PTR [ebx],bl
  402bc4:	sub    bl,ch
  402bc6:	loope  0x402c45
  402bc8:	stc    
  402bc9:	repz add al,0xed
  402bcc:	cli    
  402bcd:	and    DWORD PTR [ecx-0x780b7a81],ebp
  402bd3:	mov    BYTE PTR [ebx],ch
  402bd5:	(bad)  
  402bd6:	retf   0xf266
  402bd9:	cdq    
  402bda:	neg    BYTE PTR [eax-0x3d16eef5]
  402be0:	aad    0xe0
  402be2:	pop    esi
  402be3:	out    0x4,al
  402be5:	push   0xffffffd2
  402be7:	or     al,0x4c
  402be9:	rcr    BYTE PTR [ebp+0x22],1
  402bec:	mov    eax,0x469baa4f
  402bf1:	mov    WORD PTR [edx-0x12e6e57a],fs
  402bf7:	fsub   st(7),st
  402bf9:	lods   al,BYTE PTR ds:[esi]
  402bfa:	ins    DWORD PTR es:[edi],dx
  402bfb:	fsub   st,st(0)
  402bfd:	pushf  
  402bfe:	pushf  
  402bff:	adc    edx,ebp
  402c01:	inc    eax
  402c02:	xchg   edx,eax
  402c03:	nop
  402c04:	cmc    
  402c05:	data16 sub dl,BYTE PTR ds:0x76bc6b1c
  402c0c:	xchg   DWORD PTR [ebx+0x21],edx
  402c0f:	push   edi
  402c10:	iret   
  402c11:	or     esi,ecx
  402c13:	(bad)  
  402c14:	mov    eax,ds:0xe56456be
  402c19:	int    0x49
  402c1b:	ficom  DWORD PTR [eax+0x30]
  402c1e:	(bad)  
  402c20:	mov    eax,ds:0x8eaa8f0b
  402c25:	cmp    al,0xc4
  402c27:	dec    edx
  402c28:	lods   al,BYTE PTR ds:[esi]
  402c29:	(bad)  
  402c2a:	inc    edx
  402c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c2c:	bound  edi,QWORD PTR [eax+0x2cf7de45]
  402c32:	push   ss
  402c33:	xchg   ebp,eax
  402c34:	mov    ds:0xd81c169a,eax
  402c39:	xchg   ebx,eax
  402c3a:	imul   esp,DWORD PTR [ebp+0x23c12ad4],0x5e65ac14
  402c44:	mov    edx,0x853653f7
  402c49:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c4b:	push   0xffffffce
  402c4d:	or     esp,DWORD PTR [esi+0x22]
  402c50:	pop    esi
  402c51:	(bad)  
  402c52:	mov    ebx,0xed86c239
  402c57:	or     ch,bl
  402c59:	cli    
  402c5a:	ss ja  0x402cc7
  402c5d:	or     DWORD PTR [eax-0x70],ebx
  402c60:	sbb    al,0xe6
  402c62:	ror    DWORD PTR [esi],cl
  402c64:	xchg   esp,eax
  402c65:	clc    
  402c66:	adc    al,BYTE PTR [edx]
  402c68:	bound  edx,QWORD PTR [edi-0x46c006fe]
  402c6e:	pop    esp
  402c6f:	test   ah,dh
  402c71:	adc    eax,0x1595721a
  402c76:	call   0x60b9b239
  402c7b:	es sbb dl,ah
  402c7e:	adc    edx,DWORD PTR [ecx+0x4]
  402c81:	and    edx,edi
  402c83:	inc    ebp
  402c84:	pop    edx
  402c85:	lahf   
  402c86:	xchg   ebx,eax
  402c87:	xchg   edi,eax
  402c88:	je     0x402c83
  402c8a:	outs   dx,BYTE PTR ds:[esi]
  402c8b:	xor    esi,DWORD PTR [ecx+0x49]
  402c8e:	(bad)  
  402c8f:	jl     0x402ccc
  402c91:	into   
  402c92:	push   ebx
  402c93:	in     al,dx
  402c94:	or     BYTE PTR [edx-0x45],al
  402c97:	mov    bh,dl
  402c99:	imul   ebp,DWORD PTR [ecx-0x6d],0x74
  402c9d:	dec    edi
  402c9e:	ins    DWORD PTR es:[edi],dx
  402c9f:	dec    ebp
  402ca0:	pop    es
  402ca1:	std    
  402ca2:	mov    WORD PTR [ebp+0x426dcee4],?
  402ca8:	xchg   ecx,eax
  402ca9:	test   DWORD PTR [ebx],edi
  402cab:	push   edi
  402cac:	add    al,BYTE PTR [ebx]
  402cae:	push   es
  402caf:	mov    edi,0xf92f2622
  402cb4:	sub    edx,DWORD PTR [ebx-0x7d45d88f]
  402cba:	data16 jno 0x402c5b
  402cbd:	out    0x1e,al
  402cbf:	jmp    0x3e76:0x7123e593
  402cc6:	and    BYTE PTR [ebx+0x4420252],ah
  402ccc:	or     DWORD PTR fs:[edx],eax
  402ccf:	scas   eax,DWORD PTR es:[edi]
  402cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cd1:	stos   DWORD PTR es:[edi],eax
  402cd2:	fldcw  WORD PTR [edx]
  402cd4:	add    al,0x4b
  402cd6:	fbstp  TBYTE PTR [edi]
  402cd8:	out    0xc4,eax
  402cda:	mov    bh,0x5c
  402cdc:	js     0x402d2d
  402cde:	cmp    DWORD PTR [ebx+0x2d103072],edx
  402ce4:	push   esi
  402ce5:	mov    ebp,DWORD PTR [edi+0x2fcd29e]
  402ceb:	repnz sub bl,0x3c
  402cef:	mov    ds:0x5ae7e5ab,al
  402cf4:	jmp    0x31e3:0xa2edfbda
  402cfb:	(bad)  
  402cfc:	xor    esi,DWORD PTR [edi+0x2883c025]
  402d02:	stc    
  402d03:	sbb    BYTE PTR [edx+0x2a8ed460],bh
  402d09:	sti    
  402d0a:	jl     0x402c97
  402d0c:	push   ebp
  402d0d:	outs   dx,BYTE PTR ds:[esi]
  402d0e:	push   eax
  402d0f:	bound  ebx,QWORD PTR [ebx+ecx*8+0x1]
  402d13:	pop    ecx
  402d14:	and    ecx,edi
  402d16:	mov    ebx,0xfaa10358
  402d1b:	loope  0x402d6c
  402d1d:	adc    eax,edx
  402d1f:	push   ss
  402d20:	enter  0x5d06,0x5
  402d24:	nop
  402d25:	cli    
  402d26:	dec    edi
  402d27:	inc    edx
  402d28:	mov    es,WORD PTR [edi-0x75]
  402d2b:	out    0x99,eax
  402d2d:	mov    bl,0x60
  402d30:	cs fwait
  402d32:	cld    
  402d33:	cdq    
  402d34:	push   cs
  402d35:	jnp    0x402ce1
  402d37:	pop    ebx
  402d38:	jns    0x402d8c
  402d3a:	adc    ecx,DWORD PTR [edi]
  402d3c:	aad    0x9b
  402d3e:	mov    ds:0xe2a63c6,eax
  402d43:	or     DWORD PTR [ecx+0x53],edi
  402d46:	rol    DWORD PTR [ebp*4-0x16d13a0e],0x77
  402d4e:	retf   
  402d4f:	cli    
  402d50:	mov    edx,0xb19becce
  402d55:	cmc    
  402d56:	xchg   BYTE PTR [esi+0x29],al
  402d59:	mov    al,ds:0x1bc7d59f
  402d5e:	stc    
  402d5f:	mov    esi,0xd93a0e36
  402d64:	rol    DWORD PTR [edx+0x2e],cl
  402d67:	stc    
  402d68:	add    al,BYTE PTR [esi-0x529e8a3a]
  402d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d6f:	outs   dx,DWORD PTR ds:[esi]
  402d70:	(bad)  
  402d72:	add    BYTE PTR [ebx+0x14bec24b],cl
  402d78:	jbe    0x402d62
  402d7a:	adc    edx,DWORD PTR [edi-0x7e632628]
  402d80:	or     eax,0xd014253d
  402d85:	adc    edx,DWORD PTR [edi-0x46bc8349]
  402d8b:	cli    
  402d8c:	adc    bl,cl
  402d8e:	mov    bh,0x4d
  402d90:	fnstsw WORD PTR [eax]
  402d92:	cs sub al,0xe1
  402d95:	pop    edx
  402d96:	mov    ds:0x9174fbbd,al
  402d9b:	mov    edi,DWORD PTR [di+0x78d]
  402da0:	imul   ebx,esp,0xc1657c41
  402da6:	add    eax,0x53854101
  402dab:	hlt    
  402dac:	xor    bh,dl
  402dae:	dec    edi
  402daf:	arpl   WORD PTR [esi+0x17d4f0b2],bx
  402db5:	pop    esp
  402db6:	nop
  402db7:	iret   
  402db8:	sbb    bl,dh
  402dba:	xchg   esp,eax
  402dbb:	jle    0x402e1d
  402dbd:	inc    ebp
  402dbe:	pusha  
  402dbf:	out    0x1e,eax
  402dc1:	inc    ebp
  402dc2:	cmc    
  402dc3:	mov    eax,ss
  402dc5:	std    
  402dc6:	popa   
  402dc7:	mov    DWORD PTR [ecx-0x31],0x1eed9305
  402dce:	mov    ebx,0x2d65f43
  402dd3:	sti    
  402dd4:	jp     0x402dd9
  402dd6:	push   eax
  402dd7:	outs   dx,DWORD PTR ds:[esi]
  402dd8:	imul   edi,esi,0x2e3a415
  402dde:	imul   ebx,DWORD PTR [eax*8-0x4578a392],0x4d
  402de6:	pop    esi
  402de7:	mov    esi,DWORD PTR [edx+0x61]
  402dea:	mov    dh,BYTE PTR [edx-0x30f2aaac]
  402df0:	nop
  402df1:	jecxz  0x402e01
  402df3:	popf   
  402df4:	scas   eax,DWORD PTR es:[edi]
  402df5:	mov    ds:0xd8ccdc3d,al
  402dfa:	shl    edi,cl
  402dfc:	test   al,0x85
  402dfe:	pop    es
  402dff:	mov    ah,0x41
  402e01:	fmul   QWORD PTR [ebp+0x54b6de6b]
  402e07:	ret    
  402e08:	mov    bh,0x54
  402e0a:	arpl   WORD PTR [ebx+0x40],cx
  402e0d:	out    0xc,eax
  402e0f:	mov    dh,0x5c
  402e11:	adc    eax,0x40ae2858
  402e16:	cmp    eax,0xf9780795
  402e1b:	and    BYTE PTR [ebx-0x4fd8bcf6],cl
  402e21:	sbb    ah,BYTE PTR [esi+0x1da0ff53]
  402e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e28:	int    0xac
  402e2a:	les    esp,FWORD PTR [ebp-0x2e]
  402e2d:	cmp    dl,BYTE PTR [ebx]
  402e2f:	cmp    al,0x25
  402e31:	mov    al,ds:0xe13126ae
  402e36:	mov    ds:0x9c1ac3f4,al
  402e3b:	test   eax,0xf2f92a03
  402e40:	mov    eax,0xc6ec93b2
  402e45:	xchg   esi,eax
  402e46:	rcl    BYTE PTR [esi],1
  402e48:	call   0x12ba6da8
  402e4d:	inc    ecx
  402e4e:	imul   eax,DWORD PTR [ebp+edx*8+0x15],0xffffff90
  402e53:	rol    dh,0x91
  402e56:	(bad)  
  402e57:	fnstsw WORD PTR [eax-0xf]
  402e5a:	mov    edx,0x93bbde7c
  402e5f:	inc    BYTE PTR [esi]
  402e61:	(bad)  
  402e62:	imul   edx,DWORD PTR [eax+0x528838a0],0xae106668
  402e6c:	dec    esi
  402e6d:	or     edi,DWORD PTR ds:0x9c584418
  402e73:	loop   0x402ef3
  402e75:	outs   dx,BYTE PTR ds:[esi]
  402e76:	sub    DWORD PTR [eax+0x564564a7],edx
  402e7c:	ins    BYTE PTR es:[edi],dx
  402e7d:	jae    0x402ee1
  402e7f:	sub    bh,0x60
  402e82:	jno    0x402ef0
  402e84:	jg     0x402e95
  402e86:	aam    0x4d
  402e88:	test   BYTE PTR [edi+0x6775347a],bl
  402e8e:	test   al,0xde
  402e90:	loopne 0x402e23
  402e92:	lea    ebx,[ebx]
  402e94:	ret    
  402e95:	repnz lods ax,WORD PTR ds:[esi]
  402e98:	or     eax,0x6c9e3a87
  402e9d:	jns    0x402e97
  402e9f:	cmp    eax,0xe59cbb3e
  402ea4:	mov    edx,0x5d123cae
  402ea9:	adc    al,0x7
  402eab:	icebp  
  402eac:	hlt    
  402ead:	dec    edx
  402eae:	pushf  
  402eaf:	push   edi
  402eb0:	neg    DWORD PTR [edx]
  402eb2:	outs   dx,DWORD PTR ds:[esi]
  402eb3:	fcomi  st,st(5)
  402eb5:	jb     0x402f03
  402eb7:	popa   
  402eb8:	call   eax
  402eba:	pusha  
  402ebb:	fst    DWORD PTR ds:0xa5d8765e
  402ec1:	in     eax,0xf5
  402ec3:	leave  
  402ec4:	fisub  DWORD PTR [ebx-0x5e]
  402ec7:	test   ax,0x1b37
  402ecb:	xchg   BYTE PTR [esi+eax*4-0x69],ah
  402ecf:	dec    edi
  402ed0:	outs   dx,DWORD PTR ds:[esi]
  402ed1:	pop    edi
  402ed2:	mov    ch,BYTE PTR ds:0xf581b4ee
  402ed8:	hlt    
  402ed9:	pushw  0xffd8
  402edc:	(bad)  
  402edd:	mov    al,ds:0xa36887fb
  402ee2:	fdivr  DWORD PTR ds:0x11130e44
  402ee8:	aad    0x5
  402eea:	out    0x7c,eax
  402eec:	out    dx,eax
  402eed:	std    
  402eee:	jmp    0x402f47
  402ef0:	and    cl,bl
  402ef2:	xlat   BYTE PTR ds:[ebx]
  402ef3:	leave  
  402ef4:	mov    ecx,0x3ea0a531
  402ef9:	mov    edx,0xfaaa60df
  402efe:	mov    ch,cl
  402f00:	shr    BYTE PTR [ecx],cl
  402f02:	xchg   esi,eax
  402f03:	or     dl,BYTE PTR [ebp-0x19fbbff8]
  402f09:	leave  
  402f0a:	stc    
  402f0b:	in     eax,dx
  402f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f0d:	adc    eax,0xb67d9235
  402f12:	fsubr  DWORD PTR [ebx]
  402f14:	push   cs
  402f15:	sub    al,0x4b
  402f17:	jno    0x402f48
  402f19:	and    al,0x56
  402f1b:	mov    dh,BYTE PTR [esi+edx*2]
  402f1e:	adc    cl,cl
  402f20:	dec    eax
  402f21:	dec    edi
  402f22:	dec    ecx
  402f23:	mov    bh,0x8f
  402f25:	test   dh,bl
  402f27:	mov    ds:0xe5feb0e1,al
  402f2c:	rol    DWORD PTR [edi],cl
  402f2e:	jg     0x402f3f
  402f30:	and    BYTE PTR [ebx+0x55811086],ch
  402f36:	adc    al,0x96
  402f38:	std    
  402f39:	inc    ecx
  402f3a:	inc    edi
  402f3b:	mov    bh,0xfb
  402f3d:	xchg   edx,eax
  402f3e:	jo     0x402f4c
  402f40:	push   0xffffff85
  402f42:	adc    al,0xa9
  402f44:	mov    bl,0x4
  402f46:	(bad)  
  402f47:	mov    ds:0xf73a39cd,al
  402f4c:	adc    eax,0x6f7f8d85
  402f51:	fist   WORD PTR [edx+0xc17cc5d]
  402f57:	dec    edx
  402f58:	mov    eax,0x27438d4b
  402f5d:	outs   dx,BYTE PTR ds:[esi]
  402f5e:	repnz lock fucomp st(1)
  402f62:	repz xor DWORD PTR [ebx],eax
  402f65:	fsave  [ecx]
  402f68:	sub    BYTE PTR [esi-0x71b7c829],0xf8
  402f6f:	fucomip st,st(5)
  402f71:	test   eax,0x31a5bb4d
  402f76:	adc    DWORD PTR [ecx+esi*4],esp
  402f79:	inc    ebx
  402f7a:	sahf   
  402f7b:	mov    edx,0xe170ba89
  402f80:	jns    0x402f65
  402f82:	daa    
  402f83:	retf   0xa1e9
  402f86:	loopne 0x402f08
  402f88:	mov    al,0x76
  402f8a:	out    dx,al
  402f8b:	sbb    DWORD PTR ds:0x55238dae,ebx
  402f91:	jbe    0x402fbf
  402f93:	cmp    al,0xcf
  402f95:	sar    BYTE PTR [ecx-0xe0fbfe4],1
  402f9b:	push   0xf431d379
  402fa0:	cmp    DWORD PTR [eax+0x78],esp
  402fa3:	or     ch,cl
  402fa5:	ins    DWORD PTR es:[edi],dx
  402fa6:	sbb    bh,BYTE PTR [edx+0x66]
  402fa9:	or     ch,BYTE PTR [eax]
  402fab:	xchg   ecx,eax
  402fac:	out    0x7f,al
  402fae:	mov    bl,0x2e
  402fb0:	xchg   ebp,eax
  402fb1:	sub    dl,BYTE PTR [ebp+ecx*4-0x14]
  402fb5:	call   0xff0b:0xe82c8942
  402fbc:	pop    esi
  402fbd:	rol    esp,0x98
  402fc0:	mov    ebx,0x92223e06
  402fc5:	repz sar BYTE PTR [eax-0x33],cl
  402fc9:	(bad)  
  402fca:	push   cs
  402fcb:	ss into 
  402fcd:	hlt    
  402fce:	call   0x9921436e
  402fd3:	ss in  eax,dx
  402fd5:	repnz cli 
  402fd7:	dec    ebp
  402fd8:	inc    ebp
  402fd9:	imul   esp,ecx,0x6d48e3f
  402fdf:	pop    si
  402fe1:	xor    eax,0xa1e9b862
  402fe6:	ss das 
  402fe8:	xchg   dh,al
  402fea:	cld    
  402feb:	cmp    eax,0x4ca2b08b
  402ff0:	call   0x98f6f53d
  402ff5:	in     al,0xeb
  402ff7:	cmp    ebp,DWORD PTR [esi-0x7a]
  402ffa:	mov    cl,0x59
  402ffc:	inc    esp
  402ffd:	call   0x6f1f:0x2742ac30
  403004:	leave  
  403005:	inc    esi
  403006:	test   DWORD PTR [esi-0xf48bdb4],edx
  40300c:	mov    bl,0x0
  40300e:	popa   
  40300f:	adc    BYTE PTR ds:0x3f99fefb,ch
  403015:	rol    BYTE PTR [edi+0x5e],cl
  403018:	sar    DWORD PTR [esi+0x2],1
  40301b:	pop    edi
  40301c:	add    dl,BYTE PTR [eax+0xb]
  40301f:	pop    edi
  403020:	lahf   
  403021:	xchg   DWORD PTR [ecx-0x6c34cc4a],ecx
  403027:	add    dl,BYTE PTR [edx+0x8]
  40302a:	mov    cl,0xc8
  40302c:	ficom  DWORD PTR [ebx]
  40302e:	imul   ebx,edi,0xffffffd9
  403031:	jnp    0x403080
  403033:	jecxz  0x403019
  403035:	sbb    BYTE PTR [ebx+0x34],cl
  403038:	push   ecx
  403039:	push   0x69c975bd
  40303e:	jb     0x402fdc
  403040:	(bad)  
  403043:	es mov al,0xbe
  403046:	imul   esp,DWORD PTR [ebp+0x7bdecc8b],0xcbe789a7
  403050:	or     eax,0x29fbd0f9
  403055:	inc    edx
  403056:	add    dh,dh
  403058:	pop    es
  403059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40305a:	mov    dl,dl
  40305c:	lea    ecx,[esp+edi*2-0x3ace5ef8]
  403063:	cli    
  403064:	ret    
  403065:	jno    0x40305f
  403067:	adc    bl,BYTE PTR ds:0x9e147883
  40306d:	pop    ebp
  40306e:	sub    BYTE PTR [esi],ch
  403070:	fild   WORD PTR ds:0xcf8fb2dc
  403076:	es in  al,dx
  403078:	lea    ebx,[eax]
  40307a:	xor    ch,BYTE PTR [edi+0x27]
  40307d:	jnp    0x403084
  40307f:	sbb    DWORD PTR [ebp-0x12],0x3c
  403083:	xlat   BYTE PTR ds:[ebx]
  403084:	lods   al,BYTE PTR ds:[esi]
  403085:	mov    ecx,0x1bd4a8e0
  40308a:	test   al,0x97
  40308c:	sbb    al,0xe
  40308e:	sbb    eax,0x41920497
  403093:	mov    bh,0x3c
  403095:	es (bad) 
  403097:	icebp  
  403098:	lods   al,BYTE PTR ds:[esi]
  403099:	in     eax,0xf5
  40309b:	jecxz  0x4030ed
  40309d:	outs   dx,DWORD PTR ds:[esi]
  40309e:	mov    ch,0x18
  4030a0:	cs stos DWORD PTR es:[edi],eax
  4030a2:	inc    ebx
  4030a3:	(bad)  
  4030a4:	pop    ss
  4030a5:	into   
  4030a6:	push   0xfffffff2
  4030a8:	fwait
  4030a9:	mov    ecx,0x9fc2c755
  4030ae:	fstp   DWORD PTR [edx-0xe]
  4030b1:	cmp    al,0xa9
  4030b3:	bound  ecx,QWORD PTR [eax]
  4030b5:	sub    DWORD PTR [ebx-0x55846aef],eax
  4030bb:	ins    BYTE PTR es:[edi],dx
  4030bc:	scas   eax,DWORD PTR es:[edi]
  4030bd:	push   ebp
  4030be:	pop    ecx
  4030bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030c0:	rcr    ah,0x7d
  4030c3:	fwait
  4030c4:	jmp    0xe1a4f26a
  4030c9:	mov    ecx,0x5137065
  4030ce:	mov    BYTE PTR [esi+0x3701c30d],ch
  4030d4:	mov    ecx,0x8bae9d76
  4030d9:	push   ss
  4030da:	nop
  4030db:	outs   dx,DWORD PTR ds:[esi]
  4030dc:	adc    al,0x39
  4030de:	sar    ah,1
  4030e0:	or     DWORD PTR [eax+ebp*8],ecx
  4030e3:	leave  
  4030e4:	sbb    BYTE PTR [esi-0x434624cd],dl
  4030ea:	pop    ebp
  4030eb:	retf   0xf8e9
  4030ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030ef:	push   0xe659df06
  4030f4:	fisub  WORD PTR [edx]
  4030f6:	inc    edi
  4030f7:	adc    BYTE PTR [edi-0x4d0c54dc],ch
  4030fd:	push   DWORD PTR [edi+0x5c4a418a]
  403103:	and    dh,BYTE PTR [eax]
  403105:	out    dx,al
  403106:	sub    dl,BYTE PTR [eax+0xc]
  403109:	ds xor edx,ebp
  40310c:	push   ebp
  40310d:	sbb    ebx,esi
  40310f:	dec    edx
  403110:	jmp    0x40314e
  403112:	push   ebp
  403113:	or     bl,BYTE PTR [ebx-0xde05892]
  403119:	enter  0x6d57,0xb2
  40311d:	out    dx,al
  40311e:	mov    ch,0xae
  403120:	adc    bh,bh
  403122:	mov    ebx,DWORD PTR [edx-0x16]
  403125:	sar    DWORD PTR [ecx+0x67],0x44
  403129:	(bad)  
  40312a:	int3   
  40312b:	ja     0x40312c
  40312d:	clc    
  40312e:	enter  0xe0bf,0x2e
  403132:	pop    es
  403133:	dec    esp
  403134:	push   ebx
  403135:	fwait
  403136:	xchg   ecx,eax
  403137:	mov    cl,0x3c
  403139:	adc    DWORD PTR [eax+0x40],edi
  40313c:	adc    eax,DWORD PTR [ebx-0x3d035e2d]
  403142:	push   cs
  403143:	scas   al,BYTE PTR es:[edi]
  403144:	xchg   BYTE PTR ds:0x271fe2e,cl
  40314a:	xchg   ebx,eax
  40314b:	(bad)  
  40314c:	push   edi
  40314d:	jl     0x403104
  40314f:	fcmovnb st,st(4)
  403151:	xchg   DWORD PTR [eax+0x7e6aaf83],ecx
  403157:	jne    0x403183
  403159:	jns    0x40318b
  40315b:	adc    eax,DWORD PTR [edx-0x9c70eef]
  403161:	dec    esp
  403162:	jmp    0x403129
  403164:	mov    eax,0xf545de20
  403169:	mov    al,ds:0x22776e61
  40316e:	xor    ebx,DWORD PTR [edi]
  403170:	cmp    eax,0x46aff380
  403175:	(bad)  
  403176:	mov    ecx,0x7b727803
  40317b:	mov    al,0xa5
  40317d:	cs sub eax,0x31e06e2b
  403183:	js     0x40314d
  403185:	cwde   
  403186:	cmp    dl,al
  403188:	jb     0x4031e3
  40318a:	ins    DWORD PTR es:[edi],dx
  40318b:	mov    ds:0xe6734256,al
  403190:	and    eax,0xc93f5f31
  403195:	jmp    0x6a31:0xadd2bbf3
  40319c:	pushf  
  40319d:	adc    eax,edi
  40319f:	(bad)  
  4031a1:	sub    esi,DWORD PTR [ecx]
  4031a3:	mov    BYTE PTR [ebx+esi*1+0x22a1c59],bl
  4031aa:	cmp    al,0xd9
  4031ac:	xor    al,0xc8
  4031ae:	push   edi
  4031af:	push   eax
  4031b0:	xor    eax,0xe991eca4
  4031b5:	in     eax,0xfd
  4031b7:	inc    ecx
  4031b8:	dec    ecx
  4031b9:	scas   eax,DWORD PTR es:[edi]
  4031ba:	retf   
  4031bb:	lods   eax,DWORD PTR ds:[esi]
  4031bc:	es push ss
  4031be:	adc    al,0x5e
  4031c0:	xchg   esp,eax
  4031c1:	mov    ecx,0xb716175d
  4031c6:	in     al,dx
  4031c7:	sbb    DWORD PTR [edi+0x8],ebx
  4031ca:	jle    0x4031ef
  4031cc:	sbb    BYTE PTR [ebp+0x2bba4497],ah
  4031d2:	inc    eax
  4031d3:	cmp    dh,ch
  4031d5:	mov    bh,BYTE PTR [edi-0x6ee359e6]
  4031db:	ja     0x4031fe
  4031dd:	jge    0x403185
  4031df:	fmul   QWORD PTR [edi-0x6cf6d4c2]
  4031e5:	pop    ss
  4031e6:	push   0x3d5521fc
  4031eb:	jg     0x4031a1
  4031ed:	enter  0xebb0,0x11
  4031f1:	push   eax
  4031f2:	cli    
  4031f3:	sub    eax,0x63623239
  4031f8:	and    al,al
  4031fa:	mov    bh,0x48
  4031fc:	es retf 0x2e9c
  403200:	or     DWORD PTR [ebp+0x45e50d77],esp
  403206:	enter  0xa21,0x7e
  40320a:	inc    edi
  40320b:	adc    eax,0xf936af9c
  403210:	jmp    0xf7b8:0x732e837a
  403217:	xchg   DWORD PTR [edi+esi*8-0x3ba020f7],ecx
  40321e:	bound  ebx,QWORD PTR [edx]
  403220:	out    dx,eax
  403221:	jle    0x403245
  403223:	jns    0x403261
  403225:	(bad)  
  403226:	cld    
  403227:	add    al,BYTE PTR [esi+0x7c]
  40322a:	test   eax,0x76ae647b
  40322f:	mov    eax,ds:0x3e0fd436
  403234:	cdq    
  403235:	aad    0x40
  403237:	push   esi
  403238:	int3   
  403239:	icebp  
  40323a:	mov    eax,ds:0x98d59209
  40323f:	pop    edi
  403240:	in     al,dx
  403241:	push   0xffffffa9
  403243:	js     0x403230
  403245:	loop   0x40326b
  403247:	adc    bl,cl
  403249:	mov    al,ds:0xbc70b153
  40324e:	sub    eax,0x1d9034d2
  403253:	adc    al,0xe7
  403255:	mov    dh,0xb4
  403257:	fnstsw WORD PTR [ecx]
  403259:	fcmovb st,st(7)
  40325b:	je     0x403251
  40325d:	fidiv  DWORD PTR [edi]
  40325f:	addr16 pop edx
  403261:	aad    0xa4
  403263:	(bad)  
  403264:	cld    
  403265:	push   es
  403266:	xor    DWORD PTR [edx+0x21],ecx
  403269:	add    DWORD PTR [esi],0xbd67a5fe
  40326f:	imul   esp,DWORD PTR [edx+0x67f9ee7a],0x3e
  403276:	scas   eax,DWORD PTR es:[edi]
  403277:	mov    dl,0x5c
  403279:	fcomp  QWORD PTR [edx-0x1f]
  40327c:	adc    eax,0xc32cf554
  403281:	retf   0xa431
  403284:	and    bh,dl
  403286:	push   esp
  403287:	add    BYTE PTR [edi+0x54],bh
  40328a:	lods   al,BYTE PTR ds:[esi]
  40328b:	lock jp 0x4032f5
  40328e:	sti    
  40328f:	pop    esp
  403290:	jo     0x403231
  403292:	dec    eax
  403293:	pop    eax
  403294:	dec    ebx
  403295:	inc    esi
  403296:	popa   
  403297:	out    0x2c,eax
  403299:	mov    ecx,0xe8032161
  40329e:	aas    
  40329f:	rcl    BYTE PTR [edi],cl
  4032a1:	loop   0x40326d
  4032a3:	or     al,0x30
  4032a5:	sub    eax,0x97a33751
  4032aa:	sbb    esi,DWORD PTR [ebx-0x5ac51d4f]
  4032b0:	nop
  4032b1:	lods   al,BYTE PTR ds:[esi]
  4032b2:	pop    edi
  4032b3:	push   es
  4032b4:	popf   
  4032b5:	ins    BYTE PTR es:[edi],dx
  4032b6:	aas    
  4032b7:	mov    bl,0x57
  4032b9:	xchg   ecx,eax
  4032ba:	ja     0x4032bf
  4032bc:	fidiv  WORD PTR [ebx]
  4032be:	test   BYTE PTR [esi],cl
  4032c0:	cmp    eax,0x86b50916
  4032c5:	add    eax,0x978694bb
  4032ca:	daa    
  4032cb:	cmp    ch,BYTE PTR [esi]
  4032cd:	inc    ebx
  4032ce:	into   
  4032cf:	stc    
  4032d0:	fild   DWORD PTR [ecx-0x19]
  4032d3:	mov    esp,0x4492e00c
  4032d8:	push   ds
  4032d9:	fidivr WORD PTR [edx-0x76]
  4032dc:	mov    bh,0xbb
  4032de:	mov    esi,DWORD PTR [edi+0x5f]
  4032e1:	scas   al,BYTE PTR es:[edi]
  4032e2:	inc    ecx
  4032e3:	adc    BYTE PTR [ebp+0x19],ch
  4032e6:	inc    esi
  4032e7:	sbb    al,0x30
  4032e9:	or     al,0xb7
  4032eb:	cs jns 0x403337
  4032ee:	sbb    DWORD PTR [edx-0x2ac9cd17],esi
  4032f4:	popw   ss
  4032f6:	setg   BYTE PTR [ebp-0x59]
  4032fa:	lea    ebp,[edx-0x5a9695f7]
  403300:	int    0x23
  403302:	mov    ebp,0xc518d9f1
  403307:	imul   ebp,DWORD PTR [edx-0x73],0x1e
  40330b:	mov    eax,ds:0xcc224481
  403310:	push   es
  403311:	mov    eax,0x181442f2
  403316:	lods   eax,DWORD PTR ds:[esi]
  403317:	pop    ebp
  403318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403319:	add    dh,dl
  40331b:	pop    eax
  40331c:	push   esi
  40331d:	pop    es
  40331e:	arpl   cx,bx
  403320:	pushf  
  403321:	rcr    DWORD PTR [esi+0x3513021c],cl
  403327:	mov    eax,0xf25c55bc
  40332c:	pop    ds
  40332d:	cmp    edx,DWORD PTR [esi-0x66]
  403330:	not    DWORD PTR cs:[ebx+0x67]
  403334:	add    cl,0x8a
  403337:	(bad)  
  403338:	adc    BYTE PTR ds:0x4c4475da,cl
  40333e:	push   0x8cf31094
  403343:	mov    ah,0xd2
  403345:	sbb    DWORD PTR [esi-0x61df616],0xffffffb8
  40334c:	mov    edi,DWORD PTR [esi]
  40334e:	mov    edx,0x67488579
  403353:	das    
  403354:	dec    edx
  403355:	jp     0x40338e
  403357:	mov    ah,0xa6
  403359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40335a:	aas    
  40335b:	cwde   
  40335c:	xor    cl,BYTE PTR [ebp-0x53]
  40335f:	mov    eax,0x55a88d13
  403364:	xchg   ecx,eax
  403365:	adc    dl,BYTE PTR [bp+di+0x28]
  403369:	sbb    bh,BYTE PTR [ebp-0xe89cd46]
  40336f:	lods   al,BYTE PTR ds:[esi]
  403370:	(bad)  
  403371:	outs   dx,BYTE PTR ds:[esi]
  403372:	cmp    dl,al
  403374:	xchg   esi,eax
  403375:	out    0xc2,al
  403377:	mov    ch,0x6e
  403379:	sbb    BYTE PTR [edi],dh
  40337b:	stos   BYTE PTR es:[edi],al
  40337c:	and    esi,esp
  40337e:	xchg   esi,eax
  40337f:	das    
  403380:	arpl   si,bx
  403382:	test   al,0x8
  403384:	push   edx
  403385:	mov    edx,0xee7a76e1
  40338a:	repz mov eax,ds:0xdb537f1d
  403390:	int3   
  403391:	adc    edx,ecx
  403393:	lahf   
  403394:	inc    eax
  403395:	inc    ecx
  403396:	dec    BYTE PTR [ecx]
  403398:	and    BYTE PTR [esi-0x14cb696b],bh
  40339e:	xor    BYTE PTR [edi-0x19],0xa3
  4033a2:	jp     0x403339
  4033a4:	lahf   
  4033a5:	jmp    0x91f0:0x177b5364
  4033ac:	inc    edi
  4033ad:	xor    al,bh
  4033af:	inc    ebp
  4033b0:	call   0x6e3000af
  4033b5:	lods   al,BYTE PTR ds:[esi]
  4033b6:	jns    0x403389
  4033b8:	and    eax,DWORD PTR [ebp+0xc94d2a1]
  4033be:	or     al,0xe9
  4033c0:	cmp    esp,DWORD PTR [edi-0x5e559285]
  4033c6:	retf   
  4033c7:	adc    eax,0xbd630d1e
  4033cc:	xchg   ebx,eax
  4033cd:	push   edi
  4033ce:	cmp    eax,0x3c4656a
  4033d3:	fisttp DWORD PTR [ebx-0x2b4abf89]
  4033d9:	stc    
  4033da:	push   es
  4033db:	xchg   BYTE PTR [edx+0x1c],al
  4033de:	add    DWORD PTR [eax],0xffffffce
  4033e1:	sar    BYTE PTR [edx+0x1a],0xc6
  4033e5:	popa   
  4033e6:	retf   0xd434
  4033e9:	repnz test BYTE PTR [ecx-0x33],dl
  4033ed:	retf   
  4033ee:	ins    BYTE PTR es:[edi],dx
  4033ef:	lds    eax,FWORD PTR [edi-0x3]
  4033f2:	stos   DWORD PTR es:[edi],eax
  4033f3:	sub    ebp,ebp
  4033f5:	inc    esp
  4033f6:	imul   ecx,DWORD PTR [edi],0x6581c09b
  4033fc:	mov    ds:0xd4601219,eax
  403401:	cmp    BYTE PTR [eax],0x78
  403404:	xor    BYTE PTR [eax],0x6e
  403407:	loopne 0x4033d0
  403409:	mov    ebp,0xfe4e93c3
  40340e:	enter  0xa3da,0xbf
  403412:	(bad)  
  403413:	ins    BYTE PTR es:[edi],dx
  403414:	sbb    edx,DWORD PTR [ecx+0x1f]
  403417:	adc    eax,esp
  403419:	lods   al,BYTE PTR ds:[esi]
  40341a:	xchg   esi,ebp
  40341c:	pop    esi
  40341d:	and    DWORD PTR [eax-0xe3a4b51],edx
  403423:	or     DWORD PTR [eax+0x58c8d3ac],ebp
  403429:	dec    eax
  40342a:	xor    edx,DWORD PTR ss:[edi+0x7d7bd16]
  403431:	push   ss
  403432:	jmp    0xb74a:0xb1ee3efa
  403439:	mov    cl,0x2b
  40343b:	xchg   dh,al
  40343d:	xlat   BYTE PTR ds:[ebx]
  40343e:	rol    BYTE PTR [ebx+0x76aedfeb],cl
  403444:	mov    ebx,DWORD PTR [eax+eiz*2-0x2ed863ae]
  40344b:	(bad)  
  40344c:	xor    al,0x98
  40344e:	push   0x3c
  403450:	mov    esi,0x7f12abf5
  403455:	ret    
  403456:	mov    bh,0x85
  403458:	in     al,dx
  403459:	lds    eax,FWORD PTR [edi+0x5c]
  40345c:	sub    bh,BYTE PTR [edi+0x29]
  40345f:	retf   
  403460:	fadd   QWORD PTR [edi]
  403462:	mov    ecx,0x9bdff47d
  403467:	jmp    ebp
  403469:	inc    ebp
  40346a:	cwde   
  40346b:	dec    esi
  40346c:	stc    
  40346d:	pusha  
  40346e:	cld    
  40346f:	(bad)  [edi-0x4a]
  403472:	push   ebx
  403473:	fisttp WORD PTR [ecx-0x1216728d]
  403479:	fisub  WORD PTR [ebx-0x6f]
  40347c:	mov    ch,0x63
  40347e:	inc    ebx
  40347f:	add    ah,BYTE PTR [esi+0x58]
  403482:	jle    0x403456
  403484:	jmp    0xd34949b6
  403489:	mov    al,0x99
  40348b:	mov    al,0x4d
  40348d:	sbb    BYTE PTR [eax-0x6e],al
  403490:	xor    BYTE PTR [ebp+edi*1-0x66],dh
  403494:	xchg   edi,eax
  403495:	ds push es
  403497:	mov    al,0x24
  403499:	or     bh,cl
  40349b:	enter  0xc08d,0x9c
  40349f:	mov    dl,0x62
  4034a1:	ffreep st(3)
  4034a3:	aam    0x61
  4034a5:	popa   
  4034a6:	cmp    DWORD PTR [ebp-0x19],edx
  4034a9:	jb     0x403526
  4034ab:	sbb    bl,BYTE PTR [esi+0x1f]
  4034ae:	mov    edi,0x4d45ae66
  4034b3:	jl     0x4034f7
  4034b5:	out    0x2a,eax
  4034b7:	push   0x3e
  4034b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034ba:	and    al,0x1a
  4034bc:	ret    0xe724
  4034bf:	and    DWORD PTR [edx],ebx
  4034c1:	enter  0xaac2,0x99
  4034c5:	js     0x4034df
  4034c7:	adc    al,0xde
  4034c9:	dec    eax
  4034ca:	xchg   esp,eax
  4034cb:	xchg   esi,eax
  4034cc:	xlat   BYTE PTR ds:[ebx]
  4034cd:	xchg   edx,eax
  4034ce:	sbb    esi,DWORD PTR [edi+ebp*2+0x68]
  4034d2:	push   es
  4034d3:	lahf   
  4034d4:	fs loop 0x4034ec
  4034d7:	cmp    bh,al
  4034d9:	pop    esi
  4034da:	ins    DWORD PTR es:[edi],dx
  4034db:	daa    
  4034dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034dd:	out    0x17,al
  4034df:	adc    edx,edx
  4034e1:	jns    0x403469
  4034e3:	sub    al,0x45
  4034e5:	mov    ch,BYTE PTR [edx+eiz*4-0x39]
  4034e9:	and    esi,ebp
  4034eb:	cmp    al,0x8f
  4034ed:	dec    ebp
  4034ee:	xchg   edi,eax
  4034ef:	jb     0x40356c
  4034f1:	mov    esi,0x6e3726d8
  4034f6:	ins    DWORD PTR es:[edi],dx
  4034f7:	jg     0x4034fc
  4034f9:	cdq    
  4034fa:	cli    
  4034fb:	inc    edx
  4034fc:	push   es
  4034fd:	dec    esi
  4034fe:	adc    esi,DWORD PTR [eax]
  403500:	sbb    DWORD PTR [ecx+edx*1+0x44604950],esi
  403507:	adc    bh,BYTE PTR [ebp+0x73]
  40350a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40350b:	sar    DWORD PTR [edx+ebp*1],cl
  40350e:	in     eax,dx
  40350f:	ja     0x40353e
  403511:	rcl    BYTE PTR [ecx+0x6b],0xbe
  403515:	adc    DWORD PTR [esi],esi
  403517:	push   ds
  403518:	mov    esi,0x3035a81d
  40351d:	push   ss
  40351e:	imul   edx,DWORD PTR [edi],0xc3ce4af7
  403524:	cmp    cl,BYTE PTR [eax+0x33]
  403527:	lahf   
  403528:	pop    edx
  403529:	imul   eax,DWORD PTR [ebp+0x66a5a654],0xffffffef
  403530:	(bad)  
  403531:	jecxz  0x4034b3
  403533:	mov    bl,0xf
  403535:	xchg   DWORD PTR [ebp+0x58],ebx
  403538:	mov    edi,ebx
  40353a:	mov    bh,0x92
  40353c:	call   0x77bc:0xd8f514d6
  403543:	lock ins BYTE PTR es:[edi],dx
  403545:	pushf  
  403546:	push   ds
  403547:	loope  0x403594
  403549:	scas   al,BYTE PTR es:[edi]
  40354a:	jmp    0x403540
  40354c:	cmp    al,ch
  40354e:	aas    
  40354f:	addr16 push ds
  403551:	push   es
  403552:	pop    edi
  403553:	mov    es,WORD PTR [esi-0x1c]
  403556:	std    
  403557:	fstp   QWORD PTR [ebx-0x68a0514c]
  40355d:	sub    BYTE PTR ds:0xbcc119a6,cl
  403563:	add    al,BYTE PTR [edi+0x79]
  403566:	dec    eax
  403567:	dec    ebx
  403568:	cmp    al,0x48
  40356a:	hlt    
  40356b:	and    bh,BYTE PTR [edx]
  40356d:	popf   
  40356e:	outs   dx,BYTE PTR ds:[esi]
  40356f:	mov    ss,edi
  403571:	cmp    eax,0x665a2a1c
  403576:	(bad)  
  403577:	clc    
  403578:	dec    edx
  403579:	sub    DWORD PTR [eax],ebp
  40357b:	jno    0x403555
  40357d:	fxch   st(5)
  40357f:	shl    BYTE PTR [esp+eax*1],cl
  403582:	cs inc ecx
  403585:	das    
  403586:	(bad)  
  403587:	aad    0x52
  403589:	adc    bl,BYTE PTR [eax-0x55309940]
  40358f:	push   es
  403590:	sub    esi,ebp
  403592:	sbb    DWORD PTR [edi],ebx
  403594:	push   edx
  403595:	mov    eax,0x4042b475
  40359a:	mov    cl,0xa5
  40359c:	xchg   esp,eax
  40359d:	mov    edi,eax
  40359f:	in     al,0xc0
  4035a1:	bnd jl 0x40354d
  4035a4:	aam    0x63
  4035a6:	sub    edx,eax
  4035a8:	test   al,0xea
  4035aa:	xor    edx,esp
  4035ac:	daa    
  4035ad:	cmp    DWORD PTR fs:[eax+0xe],0x7
  4035b2:	stos   DWORD PTR es:[edi],eax
  4035b3:	push   cs
  4035b4:	in     al,0xff
  4035b6:	aam    0xe8
  4035b8:	fwait
  4035b9:	and    al,0xc6
  4035bb:	dec    eax
  4035bc:	jp     0x403590
  4035be:	pusha  
  4035bf:	rcl    DWORD PTR [edi+0x5e],1
  4035c2:	adc    al,0x91
  4035c4:	not    BYTE PTR [esi]
  4035c6:	push   es
  4035c7:	and    DWORD PTR ds:0xde7b14a0,0x3ccf9c68
  4035d1:	iret   
  4035d2:	retf   
  4035d3:	cmp    BYTE PTR [edx+0x6],dl
  4035d6:	or     al,0xf6
  4035d8:	int    0x7e
  4035da:	cwde   
  4035db:	mov    esi,0xa6d3a946
  4035e0:	arpl   WORD PTR [edx-0x62],di
  4035e3:	inc    ebp
  4035e4:	sbb    BYTE PTR [edx],dh
  4035e6:	pusha  
  4035e7:	sub    DWORD PTR [edx+0x3],ecx
  4035ea:	cmp    ch,BYTE PTR [esi]
  4035ec:	ret    0x4735
  4035ef:	cdq    
  4035f0:	lods   eax,DWORD PTR ds:[esi]
  4035f1:	mov    eax,0x219dc907
  4035f7:	sub    dl,BYTE PTR [edx-0x3d]
  4035fa:	daa    
  4035fb:	mov    dh,0xd9
  4035fd:	or     bh,BYTE PTR [ecx]
  4035ff:	mov    ds:0x17b52252,eax
  403604:	jmp    DWORD PTR [esi+0x4d]
  403607:	mov    DWORD PTR [edi-0x54],ebx
  40360a:	mov    cs,WORD PTR [edx]
  40360c:	dec    DWORD PTR [esi+0x46]
  40360f:	mov    ecx,0x9389e53b
  403614:	adc    esi,eax
  403616:	fisub  DWORD PTR ds:[esi-0x700edcba]
  40361d:	ret    
  40361e:	iret   
  40361f:	pop    ebx
  403620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403621:	add    al,0xcc
  403623:	and    al,0xf2
  403625:	mov    cs:0xb32f970,al
  40362b:	js     0x4035d9
  40362d:	jecxz  0x403612
  40362f:	or     eax,0x9eaad58b
  403634:	jge    0x40366c
  403636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403637:	sbb    al,0x78
  403639:	pop    ds
  40363a:	hlt    
  40363b:	xor    DWORD PTR [esi-0x134f03a8],edx
  403641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403642:	xor    al,BYTE PTR [edi]
  403644:	push   ebp
  403645:	sti    
  403646:	sti    
  403647:	push   esi
  403648:	mov    al,ds:0x6dade628
  40364d:	loop   0x4035f4
  40364f:	and    edx,DWORD PTR [ecx-0x14]
  403652:	xor    ebp,edx
  403654:	add    ah,BYTE PTR [esi+ebx*4-0x566618ad]
  40365b:	or     eax,0x35d431d5
  403660:	adc    BYTE PTR gs:[ecx-0x45],0x87
  403665:	cmc    
  403666:	cmp    DWORD PTR [eax+ebx*8],esi
  403669:	jnp    0x40363f
  40366b:	test   BYTE PTR ds:0xdfb9b683,dh
  403671:	cmp    eax,DWORD PTR [edi+0x7b]
  403674:	int3   
  403675:	xor    BYTE PTR [ebx],dl
  403677:	shr    edi,0xd5
  40367a:	dec    esp
  40367b:	jbe    0x4036c4
  40367d:	inc    edi
  40367e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40367f:	dec    esp
  403680:	js     0x4036ea
  403682:	imul   DWORD PTR [esi]
  403684:	push   ecx
  403685:	call   0xd5ed:0xc8c69655
  40368c:	xor    dh,BYTE PTR [ecx-0x3636ce83]
  403692:	stos   DWORD PTR es:[edi],eax
  403693:	xor    BYTE PTR [eax-0x7b],ah
  403696:	mov    dh,0xc2
  403698:	jbe    0x4036ae
  40369a:	int3   
  40369b:	mov    ah,0xd9
  40369d:	adc    al,BYTE PTR ds:0x7ef41799
  4036a3:	adc    al,dl
  4036a5:	sahf   
  4036a6:	mov    es,edi
  4036a8:	in     al,dx
  4036a9:	mov    al,BYTE PTR [eax+ebx*1+0x61]
  4036ad:	sub    cl,bl
  4036af:	and    ebp,DWORD PTR [eax-0x7ac88c26]
  4036b5:	fild   WORD PTR ds:0xa0c32b4c
  4036bb:	push   ebx
  4036bc:	sar    DWORD PTR [ebp-0x74],cl
  4036bf:	add    BYTE PTR [ebp+0x28],ch
  4036c2:	call   0x754:0x7b694b3a
  4036c9:	std    
  4036ca:	sub    dh,BYTE PTR [edx]
  4036cc:	mov    bl,0xd8
  4036ce:	push   esi
  4036cf:	shl    DWORD PTR [ebx-0x5c191fff],0x29
  4036d6:	push   ebp
  4036d7:	fist   DWORD PTR [edi]
  4036d9:	stos   BYTE PTR es:[edi],al
  4036da:	daa    
  4036db:	dec    ebx
  4036dc:	neg    DWORD PTR [eax]
  4036de:	mov    WORD PTR [ebp-0x52],es
  4036e1:	sub    ah,BYTE PTR [edi-0x3d]
  4036e4:	repz addr16 push ds
  4036e7:	inc    esi
  4036e8:	push   esi
  4036e9:	scas   al,BYTE PTR es:[edi]
  4036ea:	in     al,dx
  4036eb:	add    BYTE PTR [ebx+0x71],cl
  4036ee:	in     al,0x64
  4036f0:	and    eax,0x92a97e8c
  4036f5:	inc    esi
  4036f6:	mov    al,ds:0x7102f0c2
  4036fb:	daa    
  4036fc:	mov    dl,BYTE PTR [eax-0x52e50e75]
  403702:	retf   0x3d92
  403705:	ret    
  403706:	popf   
  403707:	mov    edx,0xd0416807
  40370c:	jae    0x4036e3
  40370e:	cwde   
  40370f:	pop    ds
  403710:	daa    
  403711:	sub    BYTE PTR [esi-0x5990ab27],ch
  403717:	sub    bl,BYTE PTR [ebx]
  403719:	test   DWORD PTR [ebp-0x6f31af04],0x65527e15
  403723:	sub    bl,0xb
  403726:	mov    esp,0x975fd01f
  40372b:	ret    
  40372c:	ja     0x403766
  40372e:	add    al,0xcc
  403730:	xchg   ebp,eax
  403731:	stos   BYTE PTR es:[edi],al
  403732:	je     0x403722
  403734:	mov    ds:0x9e113520,al
  403739:	adc    cl,BYTE PTR [esi-0x49]
  40373c:	cmp    al,0xf0
  40373e:	xchg   ecx,eax
  40373f:	xchg   BYTE PTR [eax],bl
  403741:	or     al,bh
  403743:	adc    dh,BYTE PTR [ebx-0x71c7ad8f]
  403749:	sub    edx,edi
  40374b:	or     ecx,DWORD PTR [edx+esi*2+0x7e20dd88]
  403752:	or     al,0x57
  403754:	ss enter 0x5e17,0xe5
  403759:	cli    
  40375a:	mov    ds:0x6ac7f020,al
  40375f:	adc    ecx,esp
  403761:	fnsave [ebx+0x2fc51344]
  403767:	xor    BYTE PTR [ecx-0x4a],ch
  40376a:	ds sti 
  40376c:	mov    edi,0x887c94d4
  403771:	imul   edx,DWORD PTR [ebp+ebp*8-0x47b22aa4],0xffffff83
  403779:	ja     0x403782
  40377b:	test   ebx,edi
  40377d:	pop    ss
  40377e:	iret   
  40377f:	imul   esi,DWORD PTR [ecx],0xfffffff5
  403782:	push   esp
  403783:	push   esi
  403784:	sub    al,0x97
  403786:	retf   0xb90
  403789:	mov    ah,0x71
  40378b:	in     al,dx
  40378c:	vmwrite ecx,DWORD PTR ds:0xfe0cb5d9
  403793:	dec    ecx
  403794:	add    DWORD PTR [eax],esi
  403796:	pop    esp
  403797:	dec    esp
  403798:	inc    ecx
  403799:	dec    ebx
  40379a:	push   ecx
  40379b:	fmul   DWORD PTR [ebx+0x69aecb39]
  4037a1:	ret    0xf7b5
  4037a4:	stos   DWORD PTR es:[edi],eax
  4037a5:	xor    eax,0x2cb779cc
  4037aa:	int3   
  4037ab:	pop    edi
  4037ac:	daa    
  4037ad:	jl     0x403739
  4037af:	dec    esi
  4037b0:	inc    edx
  4037b1:	jge    0x4037e2
  4037b3:	xchg   esp,eax
  4037b4:	fwait
  4037b5:	mov    al,0x56
  4037b7:	aad    0xb1
  4037b9:	test   eax,0x11d9a491
  4037be:	jl     0x4037f6
  4037c0:	mov    gs,esi
  4037c2:	add    al,BYTE PTR [esi+0x38af54de]
  4037c8:	in     eax,0x47
  4037ca:	cli    
  4037cb:	mov    ds:0x511d57aa,eax
  4037d0:	push   es
  4037d1:	mov    esp,0x487e606d
  4037d6:	dec    esp
  4037d7:	push   ebx
  4037d8:	jns    0x40377b
  4037da:	cdq    
  4037db:	pop    ss
  4037dc:	jne    0x4037a6
  4037de:	pop    eax
  4037df:	jb     0x403798
  4037e1:	ret    0xbbe3
  4037e4:	pop    ecx
  4037e5:	and    BYTE PTR [edi+0x6],0xc0
  4037e9:	push   edx
  4037ea:	out    dx,al
  4037eb:	cdq    
  4037ec:	clc    
  4037ed:	or     DWORD PTR ds:0x63ae3774,0x4c
  4037f4:	sar    BYTE PTR [ebp+0x355a3207],cl
  4037fa:	mov    edi,ebp
  4037fc:	sub    DWORD PTR [ecx],esi
  4037fe:	pusha  
  4037ff:	loope  0x403806
  403801:	scas   eax,DWORD PTR es:[edi]
  403802:	inc    esp
  403803:	jmp    0x4037ef
  403805:	(bad)  [edi+0x55630a42]
  40380b:	fild   DWORD PTR [esp+eax*8+0x24]
  40380f:	xor    edi,DWORD PTR [ebx+0x6e]
  403812:	jg     0x40388c
  403814:	adc    edi,DWORD PTR [edi-0x20]
  403817:	ud0    esp,DWORD PTR [ebp-0x3d]
  40381b:	mov    bl,dh
  40381d:	and    esp,0x92279c7f
  403823:	xor    ch,ah
  403825:	lods   eax,DWORD PTR ds:[esi]
  403826:	into   
  403827:	pop    ebp
  403828:	fidivr DWORD PTR [ebp-0x6]
  40382b:	jb     0x40386f
  40382d:	ins    BYTE PTR es:[edi],dx
  40382e:	inc    edx
  40382f:	sub    dl,BYTE PTR [ecx-0x251ca3b]
  403835:	jge    0x40382c
  403837:	ret    
  403838:	push   eax
  403839:	xor    al,0x17
  40383b:	jp     0x403854
  40383d:	lea    ebx,[ebx]
  40383f:	lods   eax,DWORD PTR ds:[esi]
  403840:	int3   
  403841:	add    BYTE PTR [ebp-0x49ef6007],dl
  403847:	pop    ebx
  403848:	test   BYTE PTR [eax-0x2],bh
  40384b:	and    DWORD PTR [ecx-0x21],ebx
  40384e:	and    eax,0x6b445085
  403853:	inc    esp
  403854:	out    dx,al
  403855:	data16 adc al,0xd0
  403858:	cmp    eax,0x8df00bc9
  40385d:	lea    ebx,[ecx-0x4d1a8645]
  403863:	pop    ebp
  403864:	test   DWORD PTR [ecx-0x86c656f],ebp
  40386a:	(bad)  
  40386b:	jge    0x40381a
  40386d:	sbb    eax,DWORD PTR [eax]
  40386f:	jne    0x40386a
  403871:	sbb    eax,0xbfd65cd7
  403876:	pop    edi
  403878:	cmp    DWORD PTR [edx],0xa6f665c
  40387e:	leave  
  40387f:	sbb    eax,0xd3268bc9
  403884:	ds jmp 0xdb2c9e37
  40388a:	call   esp
  40388c:	fs scas eax,DWORD PTR es:[edi]
  40388e:	fbld   TBYTE PTR [edx-0x7c]
  403891:	inc    ebp
  403892:	jp     0x4038dc
  403894:	mov    dl,dl
  403896:	push   es
  403897:	xchg   ch,ch
  403899:	dec    ebx
  40389a:	or     edi,DWORD PTR [edx+0x5adc4986]
  4038a0:	cmp    BYTE PTR ds:0xff1a2421,bh
  4038a6:	inc    ebx
  4038a7:	adc    DWORD PTR [edi-0x5f],ebp
  4038aa:	mov    ds:0xd0a1ad36,eax
  4038af:	cmc    
  4038b0:	jg     0x40390d
  4038b2:	or     DWORD PTR [ebx-0x74],ecx
  4038b5:	dec    eax
  4038b6:	add    al,0xcb
  4038b8:	imul   eax,esp,0xffffffeb
  4038bb:	add    ebp,DWORD PTR [esi-0x3d]
  4038be:	outs   dx,BYTE PTR ds:[esi]
  4038bf:	and    BYTE PTR [edi-0x7aa33e2f],0xe7
  4038c6:	and    eax,DWORD PTR [eax]
  4038c8:	loop   0x403933
  4038ca:	push   eax
  4038cb:	pop    es
  4038cc:	imul   esp,DWORD PTR [ebx+0x1c5cab9e],0xffffff9a
  4038d3:	xchg   ebp,eax
  4038d4:	data16 and al,0x3c
  4038d7:	mul    dh
  4038d9:	fwait
  4038da:	jns    0x403896
  4038dc:	fsub   QWORD PTR [edx]
  4038de:	push   ss
  4038df:	js     0x403915
  4038e1:	xchg   DWORD PTR [ebx*4+0x6eb1cd9d],edi
  4038e8:	and    al,0xbc
  4038ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038eb:	inc    ecx
  4038ec:	jnp    0x4038d9
  4038ee:	test   eax,0x9fc200f7
  4038f3:	comiss xmm7,DWORD PTR [ecx]
  4038f6:	loop   0x4038f8
  4038f8:	mov    eax,ds
  4038fa:	mov    ecx,0xb04e635b
  4038ff:	ret    0x46e8
  403902:	push   esi
  403903:	aad    0xe0
  403905:	sub    DWORD PTR cs:[ebp-0x47b7eb14],ebp
  40390c:	mov    dh,0x28
  40390e:	iret   
  40390f:	xchg   esp,eax
  403910:	push   edx
  403911:	lods   eax,DWORD PTR ds:[esi]
  403912:	stc    
  403913:	jmp    0x26cb945d
  403918:	fstp   st(4)
  40391a:	(bad)  
  40391b:	fbld   TBYTE PTR [edi-0x2ce4bc8a]
  403921:	enter  0xbfda,0xd5
  403925:	jmp    0xdca8:0xab1d5b1e
  40392c:	inc    dl
  40392e:	dec    DWORD PTR [ebx]
  403930:	popa   
  403931:	jecxz  0x403955
  403933:	xchg   DWORD PTR [edx],edx
  403935:	jge    0x40396a
  403937:	jns    0x403902
  403939:	hlt    
  40393a:	jmp    0x403929
  40393c:	jbe    0x40393d
  40393e:	dec    ebx
  40393f:	add    dl,BYTE PTR [edx-0x71]
  403942:	lds    ecx,FWORD PTR [ebp+edi*8-0x38]
  403946:	lds    ebx,FWORD PTR [edx-0x43c58bbb]
  40394c:	and    BYTE PTR [eax],cl
  40394e:	pushf  
  40394f:	jle    0x4038e4
  403951:	test   DWORD PTR [eax+0x59],esp
  403954:	(bad)  
  403955:	aad    0xc6
  403957:	dec    esi
  403958:	sbb    DWORD PTR [edx],ecx
  40395a:	xchg   ebp,eax
  40395b:	push   eax
  40395c:	cmp    BYTE PTR [edi+0x53eeaf6],dl
  403962:	shr    eax,1
  403964:	mov    al,ds:0x47117f74
  403969:	jecxz  0x4039c5
  40396b:	fst    QWORD PTR [edx+edi*2]
  40396e:	jne    0x403967
  403970:	cmc    
  403971:	inc    edi
  403972:	sbb    al,dl
  403974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403975:	dec    edi
  403976:	aaa    
  403977:	and    DWORD PTR [ebp+edx*8-0x29],0xffffffb6
  40397c:	or     al,0x6e
  40397e:	pop    es
  40397f:	push   0xffffff94
  403981:	sbb    al,BYTE PTR [esi+0x145ca87b]
  403987:	fs xchg esi,eax
  403989:	fistp  DWORD PTR [di]
  40398c:	addr16 je 0x4039bf
  40398f:	add    BYTE PTR [edi-0xa2ab24b],ah
  403995:	or     DWORD PTR [esi-0x1bca663d],ebx
  40399b:	cli    
  40399c:	repnz shl BYTE PTR [esi+0x9],0x9d
  4039a1:	dec    edx
  4039a2:	fadd   QWORD PTR [ecx+edx*1]
  4039a5:	inc    eax
  4039a6:	mul    BYTE PTR ds:0x8addb046
  4039ac:	test   DWORD PTR [esi-0x4d],eax
  4039af:	sar    ch,1
  4039b1:	imul   esi,ecx,0xae719de3
  4039b7:	adc    al,0xf3
  4039b9:	mov    eax,0x80236a13
  4039be:	jb     0x40398f
  4039c0:	add    al,0x50
  4039c2:	jge    0x4039cc
  4039c4:	mov    WORD PTR [ebx+0x2a],?
  4039c7:	retf   
  4039c8:	adc    DWORD PTR [ebx],ecx
  4039ca:	cdq    
  4039cb:	aaa    
  4039cc:	mov    ebx,ebp
  4039ce:	jns    0x4039bf
  4039d0:	pop    edi
  4039d1:	(bad)  [eax]
  4039d3:	std    
  4039d4:	jb     0x4039e4
  4039d6:	fst    DWORD PTR [edi]
  4039d8:	scas   eax,DWORD PTR es:[edi]
  4039d9:	sbb    DWORD PTR [edx],0xffffffa9
  4039dc:	push   ebp
  4039dd:	push   esi
  4039de:	(bad)  
  4039df:	dec    ebx
  4039e0:	nop
  4039e1:	adc    al,0xd7
  4039e3:	imul   esi,DWORD PTR [edx-0x6380b85f],0x397513e5
  4039ed:	cmp    BYTE PTR [ebx-0x75],al
  4039f0:	sar    BYTE PTR [edi-0x71530261],0x4
  4039f7:	int    0xe2
  4039f9:	inc    ecx
  4039fa:	int3   
  4039fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039fc:	shl    BYTE PTR ds:0x3fba13ae,cl
  403a02:	xchg   esp,eax
  403a03:	icebp  
  403a04:	push   eax
  403a05:	add    eax,0xfc64828c
  403a0a:	or     ecx,eax
  403a0c:	gs push cs
  403a0e:	jno    0x403994
  403a10:	push   esp
  403a11:	sbb    BYTE PTR [ebx+0x5d],bl
  403a14:	sub    esp,DWORD PTR [edx+esi*4+0x6]
  403a18:	enter  0xae89,0x4b
  403a1c:	fidivr WORD PTR [edx-0x6c]
  403a1f:	cmp    cl,BYTE PTR [esi-0x4]
  403a22:	jo     0x403a91
  403a24:	div    BYTE PTR [ecx+eax*1+0x2c73e6d0]
  403a2b:	loope  0x403a36
  403a2d:	jp     0x403a82
  403a2f:	push   eax
  403a30:	in     eax,0xad
  403a32:	jg     0x403a8c
  403a34:	aam    0x6e
  403a36:	fistp  DWORD PTR [eax]
  403a38:	sub    al,0xbf
  403a3a:	cwde   
  403a3b:	fucompp 
  403a3d:	sub    ecx,edi
  403a3f:	mov    bl,0x4f
  403a41:	mov    bl,0x7b
  403a43:	inc    ebx
  403a44:	jl     0x403a88
  403a46:	push   esi
  403a47:	mov    ebp,0xe17e90cc
  403a4c:	int3   
  403a4d:	and    DWORD PTR [ebx-0x65e04c31],esi
  403a53:	stc    
  403a54:	pop    eax
  403a55:	add    DWORD PTR [si-0x39a4],0xffffffe7
  403a5b:	pop    edx
  403a5c:	int3   
  403a5d:	jp     0x403a57
  403a5f:	fisub  WORD PTR [ecx+eiz*8]
  403a62:	mov    BYTE PTR [ebx+0x1459360b],cl
  403a68:	mov    cl,ch
  403a6a:	and    BYTE PTR [edi+0x3b],cl
  403a6d:	retf   
  403a6e:	jnp    0x403a5e
  403a70:	gs jg  0x403a17
  403a73:	xchg   edx,eax
  403a74:	das    
  403a75:	lods   eax,DWORD PTR ds:[esi]
  403a76:	iret   
  403a77:	mov    edi,0x74d8f26a
  403a7c:	fs push es
  403a7e:	mov    esp,0x7edbb1c8
  403a83:	out    dx,eax
  403a84:	out    0xa9,ax
  403a87:	xor    BYTE PTR [edi+0x15],bh
  403a8a:	loop   0x403acd
  403a8c:	mov    esi,0xfddad5c6
  403a91:	mov    dl,0x76
  403a93:	pop    ecx
  403a94:	mov    eax,0xed8433de
  403a99:	retf   
  403a9a:	xor    ebp,DWORD PTR [eax-0x44]
  403a9d:	jge    0x403a62
  403a9f:	enter  0xf36f,0xc9
  403aa3:	fmul   QWORD PTR [ecx-0x10]
  403aa6:	adc    al,0x14
  403aa8:	rol    BYTE PTR [edi],cl
  403aaa:	cmp    BYTE PTR [edx-0x2bd6953e],ah
  403ab0:	aam    0x3
  403ab2:	push   esi
  403ab3:	jecxz  0x403ad2
  403ab5:	mov    fs,WORD PTR [edi*1+0x2bceaa00]
  403abc:	int    0x6f
  403abe:	push   ds
  403abf:	xchg   esi,eax
  403ac0:	inc    ebp
  403ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ac2:	and    BYTE PTR [ebx-0x2ce8b7cc],bl
  403ac8:	cmp    al,0xc6
  403aca:	outs   dx,DWORD PTR ds:[esi]
  403acb:	repnz cmp esi,DWORD PTR [esi-0x42]
  403acf:	mov    esi,0x9e094c48
  403ad4:	fdivr  DWORD PTR [edx-0x2b84405e]
  403ada:	call   0x7730:0x1fd79e02
  403ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ae2:	out    dx,eax
  403ae3:	mov    ah,0x44
  403ae5:	inc    esp
  403ae6:	hlt    
  403ae7:	ret    
  403ae8:	push   ecx
  403ae9:	inc    esp
  403aea:	fisttp DWORD PTR [edi+eax*4+0x4b6cafdf]
  403af1:	xchg   esi,eax
  403af2:	push   0xe7f101ae
  403af7:	or     BYTE PTR [eax+0x6ed6e39a],dl
  403afd:	inc    edi
  403afe:	inc    ebp
  403aff:	adc    al,0x5b
  403b01:	jle    0x403adf
  403b03:	test   al,0xa
  403b05:	xchg   ch,ah
  403b07:	jnp    0x403ad3
  403b09:	sub    ah,BYTE PTR [edi+0x1b94693d]
  403b0f:	sbb    bh,BYTE PTR [ecx+0x6a0b14e]
  403b15:	sbb    esi,DWORD PTR [ebp-0x5351ea2f]
  403b1b:	adc    al,0x66
  403b1d:	cs (bad) 
  403b1f:	jge    0x403af5
  403b21:	out    dx,al
  403b22:	cmp    eax,0x68
  403b25:	(bad)  
  403b26:	retf   
  403b27:	xchg   edi,eax
  403b28:	mov    dh,0x97
  403b2a:	mov    ebp,0x1dbf6e06
  403b2f:	mov    eax,ds:0xb61bff7f
  403b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b35:	out    dx,al
  403b36:	inc    edx
  403b37:	inc    ebx
  403b38:	push   es
  403b39:	pop    esi
  403b3a:	loop   0x403b95
  403b3c:	jb     0x403b51
  403b3e:	push   esp
  403b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b40:	xor    BYTE PTR [ecx+esi*2-0x3b],al
  403b44:	jmp    0x403b51
  403b46:	test   DWORD PTR [ecx+0x47742617],esp
  403b4c:	or     DWORD PTR [ebx-0x6a6190b3],0x82f3a87
  403b56:	inc    ebx
  403b57:	mov    eax,0x73fa7c33
  403b5c:	clc    
  403b5d:	mov    ?,WORD PTR [ecx+0x14]
  403b60:	xchg   edi,eax
  403b61:	cwde   
  403b62:	xor    esp,ebp
  403b64:	or     al,0x7f
  403b66:	mov    al,ds:0xfcdd9bc1
  403b6b:	push   cs
  403b6c:	ficom  DWORD PTR [edi+edi*8-0x36975dc7]
  403b73:	xchg   ecx,eax
  403b74:	imul   ecx,edi,0x4d4ae569
  403b7a:	sub    ebp,DWORD PTR [esi-0x5d]
  403b7d:	loopne 0x403bb8
  403b7f:	addr16 dec esp
  403b81:	inc    ecx
  403b82:	imul   BYTE PTR [eax]
  403b84:	adc    eax,0x87355629
  403b89:	fs mov cl,0x86
  403b8c:	sub    edi,DWORD PTR [eax-0x6a]
  403b8f:	and    al,0x35
  403b91:	inc    ebp
  403b92:	or     eax,0x18ca772f
  403b97:	add    dh,BYTE PTR [esi+edx*2+0x1f]
  403b9b:	xor    ah,BYTE PTR [edx+0x1c]
  403b9e:	lds    edx,FWORD PTR [ebx-0x7b9f28e2]
  403ba4:	jmp    0x6c28:0x186dbcd9
  403bab:	std    
  403bac:	test   DWORD PTR [edx+ecx*1],0x200f42a5
  403bb3:	rol    BYTE PTR [edi+0x6f4307cf],1
  403bb9:	pop    es
  403bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bbb:	aas    
  403bbc:	mov    ecx,0x4d674d1e
  403bc1:	bound  esi,QWORD PTR [ecx]
  403bc3:	mov    esp,0xa85e26ed
  403bc8:	and    dh,BYTE PTR [esi+0x12]
  403bcb:	icebp  
  403bcc:	(bad)  [edi+0x40ddc610]
  403bd2:	jbe    0x403b67
  403bd4:	mov    DWORD PTR [edx+0x31],eax
  403bd7:	inc    esp
  403bd8:	inc    ecx
  403bd9:	stc    
  403bda:	cmp    cl,bl
  403bdc:	popa   
  403bdd:	sub    DWORD PTR [ecx+eax*4],edx
  403be0:	and    bh,0xbc
  403be3:	fsubr  QWORD PTR [esi-0x6f]
  403be6:	jae    0x403bef
  403be8:	sbb    bh,BYTE PTR [eax]
  403bea:	jno    0x403b7e
  403bec:	mov    edi,0x10bc3a21
  403bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bf2:	sahf   
  403bf3:	das    
  403bf4:	ss sti 
  403bf6:	jge    0x403c0a
  403bf8:	sbb    al,0xa7
  403bfa:	stos   BYTE PTR es:[edi],al
  403bfb:	(bad)  
  403bfd:	sub    esp,DWORD PTR [eax-0x41662a66]
  403c03:	or     al,0x45
  403c05:	(bad)
  403c08:	leave  
  403c09:	jns    0x403be0
  403c0b:	pusha  
  403c0c:	mov    ebp,0x15d5d048
  403c11:	mov    bh,0x83
  403c13:	hlt    
  403c14:	push   edx
  403c15:	cmp    BYTE PTR [eax-0x20],dl
  403c18:	add    ecx,esi
  403c1a:	jg     0x403c6c
  403c1c:	in     eax,0x99
  403c1e:	mov    eax,0xd9cc4e82
  403c23:	cmp    al,0xb4
  403c25:	jmp    0x403bd9
  403c27:	sub    bh,dl
  403c29:	cmp    eax,ecx
  403c2b:	arpl   WORD PTR [ebx],sp
  403c2d:	aas    
  403c2e:	push   ss
  403c2f:	je     0x403c03
  403c31:	dec    ebx
  403c32:	in     eax,0x6f
  403c34:	push   eax
  403c35:	sbb    edi,esi
  403c37:	or     eax,0xf9ec4cde
  403c3c:	pop    ebx
  403c3d:	shl    DWORD PTR [edi],1
  403c3f:	lds    esp,FWORD PTR [ecx+eiz*1]
  403c42:	rcr    BYTE PTR [ecx+edx*4-0x7274a498],0x2f
  403c4a:	push   edi
  403c4b:	jl     0x403c7d
  403c4d:	adc    eax,0x2d0180ad
  403c52:	sbb    edi,DWORD PTR [edi-0x5815383e]
  403c58:	xor    esp,DWORD PTR [ebp+0x4d]
  403c5b:	push   0xe3276605
  403c60:	cmp    eax,0xe53eec67
  403c65:	mov    edx,0x8dd17519
  403c6a:	xlat   BYTE PTR ds:[ebx]
  403c6b:	sub    edx,DWORD PTR [edi-0x4cda2dd4]
  403c71:	mov    bl,0xe4
  403c73:	bound  edi,QWORD PTR [ebp+0x5]
  403c76:	fwait
  403c77:	lods   al,BYTE PTR ds:[esi]
  403c78:	repz push eax
  403c7a:	and    eax,DWORD PTR [ecx+0x7a]
  403c7d:	ins    BYTE PTR es:[edi],dx
  403c7e:	mov    eax,0x96d3e4ad
  403c83:	arpl   WORD PTR [edi-0x741efabb],cx
  403c89:	sbb    ecx,DWORD PTR [eax]
  403c8b:	cmc    
  403c8c:	adc    ebp,DWORD PTR [edx-0x78]
  403c8f:	icebp  
  403c90:	and    DWORD PTR [ebp+0x752bee6a],0xd5302241
  403c9a:	push   eax
  403c9b:	in     al,0x9b
  403c9d:	cmp    bl,al
  403c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ca0:	imul   eax,DWORD PTR [esi],0x4c
  403ca3:	outs   dx,DWORD PTR ds:[esi]
  403ca4:	mov    dl,0x87
  403ca6:	xchg   ecx,eax
  403ca7:	imul   ebp,DWORD PTR [edi+ebx*1],0x58
  403cab:	and    eax,0x41dcf2cc
  403cb0:	mov    ebp,ebp
  403cb2:	push   ecx
  403cb3:	into   
  403cb4:	fs pop ss
  403cb6:	mov    esi,es
  403cb8:	retf   0x9877
  403cbb:	in     ax,0xa6
  403cbe:	and    esi,ebp
  403cc0:	sbb    al,0x8a
  403cc2:	or     ebx,ebp
  403cc4:	shl    BYTE PTR [esi-0x53e5b0fd],0x62
  403ccb:	aam    0x59
  403ccd:	inc    esi
  403cce:	mul    DWORD PTR [esi-0x56af9965]
  403cd4:	inc    ecx
  403cd5:	xchg   ebx,eax
  403cd6:	cdq    
  403cd7:	aas    
  403cd8:	mov    eax,ds:0x16bb318
  403cdd:	cld    
  403cde:	in     eax,dx
  403cdf:	stos   BYTE PTR es:[edi],al
  403ce0:	cmp    al,0xd8
  403ce2:	pop    ds
  403ce3:	sbb    BYTE PTR [edi+0x6a],0x65
  403ce7:	call   FWORD PTR [esi]
  403ce9:	js     0x403d46
  403ceb:	scas   al,BYTE PTR es:[edi]
  403cec:	or     dh,BYTE PTR [edx+0x8f6a239]
  403cf2:	and    eax,esi
  403cf4:	cmp    al,0xff
  403cf6:	test   eax,0x1c4926db
  403cfb:	mov    ah,0x8
  403cfd:	rol    BYTE PTR [ebx-0x79ceb5ea],1
  403d03:	pop    ebx
  403d04:	pop    ds
  403d05:	mov    al,0x46
  403d07:	jb     0x403ca3
  403d09:	mov    esp,0xafac6d0f
  403d0e:	sar    DWORD PTR [eax-0x396f122d],cl
  403d14:	loope  0x403d24
  403d16:	sahf   
  403d17:	ret    0xa6cb
  403d1a:	les    esp,FWORD PTR [edx+0x65604c91]
  403d20:	adc    BYTE PTR [esi+0x4b],0xdd
  403d24:	cld    
  403d25:	xchg   esp,eax
  403d26:	and    BYTE PTR [esi-0xe53a788],al
  403d2c:	scas   al,BYTE PTR es:[edi]
  403d2d:	in     al,0x6a
  403d2f:	inc    ebx
  403d30:	aad    0x8c
  403d32:	or     cl,BYTE PTR [edx]
  403d34:	jo     0x403d9c
  403d36:	and    al,0x6
  403d38:	clc    
  403d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d3a:	lahf   
  403d3b:	(bad)  
  403d3c:	dec    esi
  403d3d:	in     al,0xa1
  403d3f:	test   al,0xf3
  403d41:	pop    ebp
  403d42:	mov    esi,0xa1d372d3
  403d47:	icebp  
  403d48:	inc    esi
  403d49:	ins    BYTE PTR es:[edi],dx
  403d4a:	imul   edx,DWORD PTR [ecx+0x2ed37838],0xffffffec
  403d51:	out    dx,eax
  403d52:	jge    0x403d93
  403d54:	enter  0x30ca,0xa
  403d58:	jbe    0x403d0a
  403d5a:	inc    eax
  403d5b:	out    dx,al
  403d5c:	(bad)  
  403d5d:	in     al,0x70
  403d5f:	fld    DWORD PTR gs:[eax]
  403d62:	(bad)  
  403d64:	stos   DWORD PTR es:[edi],eax
  403d65:	lods   eax,DWORD PTR ds:[esi]
  403d66:	lahf   
  403d67:	(bad)  
  403d68:	jnp    0x403dc8
  403d6a:	sub    ebx,DWORD PTR [eax+0x35]
  403d6d:	mov    edx,DWORD PTR [edi+0x454455a6]
  403d73:	xor    DWORD PTR [esi+0x1f895c8e],esp
  403d79:	nop
  403d7a:	mov    ds:0xc98fd47f,al
  403d7f:	xchg   edx,eax
  403d80:	call   0x2f98b38
  403d85:	dec    ebp
  403d86:	(bad)  
  403d87:	xchg   ebp,eax
  403d88:	sub    BYTE PTR [esi+eiz*1-0x6f],dl
  403d8c:	in     eax,dx
  403d8d:	scas   al,BYTE PTR es:[edi]
  403d8e:	pop    ebx
  403d8f:	(bad)  
  403d90:	inc    DWORD PTR [esi+0x175a2929]
  403d96:	jae    0x403db7
  403d98:	jp     0x403dd5
  403d9a:	push   edx
  403d9b:	add    dl,BYTE PTR [ebx-0x75]
  403d9e:	pop    edi
  403d9f:	and    BYTE PTR [esi+ebp*8-0x6de31be],bh
  403da6:	data16 mov BYTE PTR cs:[edi-0x6c],dl
  403dab:	scas   al,BYTE PTR es:[edi]
  403dac:	(bad)  
  403dad:	mov    al,0xd4
  403daf:	and    BYTE PTR [eax],0x4d
  403db2:	sub    dl,0x3
  403db5:	inc    esi
  403db6:	adc    esi,DWORD PTR [edi+0x1f]
  403db9:	fwait
  403dba:	es mov ecx,0x8f4002a6
  403dc0:	sbb    ch,BYTE PTR [eax-0x1c]
  403dc3:	addr16 dec esi
  403dc5:	(bad)  
  403dc6:	hlt    
  403dc7:	and    eax,0xfeca7f45
  403dcc:	outs   dx,BYTE PTR ds:[esi]
  403dcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dce:	les    edx,FWORD PTR [esi+0x1e]
  403dd1:	fisub  WORD PTR [ecx-0x7b]
  403dd4:	pop    edx
  403dd5:	or     al,0xac
  403dd7:	call   FWORD PTR [ecx+0x71]
  403dda:	inc    eax
  403ddb:	outs   dx,BYTE PTR ds:[esi]
  403ddc:	call   0xad9ab380
  403de1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403de2:	mov    ah,0x3e
  403de4:	push   cs
  403de5:	or     DWORD PTR [ecx-0x328f78e4],ecx
  403deb:	(bad)  
  403dec:	sahf   
  403ded:	push   ds
  403dee:	out    dx,eax
  403def:	ds clc 
  403df1:	xor    al,0xf6
  403df3:	inc    esi
  403df4:	scas   eax,DWORD PTR es:[edi]
  403df5:	mov    ecx,0xda7b2059
  403dfa:	inc    DWORD PTR [ebp-0x6855624f]
  403e00:	pop    esi
  403e01:	cmp    bh,BYTE PTR [ebx+0x58]
  403e04:	lds    edi,FWORD PTR [ecx-0x17f64ade]
  403e0a:	rcr    DWORD PTR [edi+0x5d],0xb5
  403e0e:	(bad)  
  403e0f:	pushf  
  403e10:	stos   BYTE PTR es:[edi],al
  403e11:	pop    es
  403e12:	xor    BYTE PTR [esi-0x12],ch
  403e15:	int3   
  403e16:	std    
  403e17:	add    ecx,edi
  403e19:	xor    DWORD PTR [edx+0x3f],eax
  403e1c:	mov    edi,0x32b5873c
  403e21:	mov    al,0xd4
  403e23:	pop    eax
  403e24:	sub    ah,BYTE PTR [esi-0x2c]
  403e27:	fwait
  403e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e29:	jns    0x403e22
  403e2b:	xor    ebx,DWORD PTR [ecx+esi*2]
  403e2e:	mov    al,ds:0xd7763a41
  403e33:	fs mov esp,0x6f94fa2
  403e39:	inc    eax
  403e3a:	cmp    bl,dl
  403e3c:	dec    ecx
  403e3d:	adc    al,0xf9
  403e3f:	clc    
  403e40:	ret    
  403e41:	ja     0x403dde
  403e43:	push   0x9b19ad05
  403e48:	loopne 0x403e36
  403e4a:	sbb    ebp,esi
  403e4c:	jmp    0xf512b6e
  403e51:	add    BYTE PTR [ebx],al
  403e53:	push   esi
  403e54:	xor    DWORD PTR [eax],ebx
  403e56:	retf   
  403e57:	pop    esi
  403e58:	push   es
  403e59:	inc    esp
  403e5a:	xor    DWORD PTR [edi],ebp
  403e5c:	fsubp  st(3),st
  403e5e:	jns    0x403ea9
  403e60:	adc    al,bh
  403e62:	pop    edx
  403e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e64:	pop    ecx
  403e65:	neg    bl
  403e67:	imul   edx,eax,0xd670da49
  403e6d:	mov    ds:0x26c8ac98,al
  403e72:	mov    ds:0x4e5bebd0,eax
  403e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e78:	repz dec esp
  403e7a:	xchg   ebx,eax
  403e7b:	data16 mov bl,0xea
  403e7e:	jno    0x403e68
  403e80:	cwde   
  403e81:	pop    ds
  403e82:	sbb    ch,al
  403e84:	in     eax,dx
  403e85:	jno    0x403e3d
  403e87:	sub    cl,BYTE PTR [eax+0x641c7578]
  403e8d:	jmp    0xdaf1bffa
  403e92:	pushf  
  403e93:	xor    DWORD PTR [esi+ecx*2+0x6efdaaf7],ecx
  403e9a:	in     al,dx
  403e9b:	jge    0x403e69
  403e9d:	pop    ebx
  403e9e:	sub    BYTE PTR [esi+0x58],ah
  403ea1:	mov    ecx,0x6b9475fb
  403ea6:	in     eax,0x1a
  403ea8:	in     eax,dx
  403ea9:	and    al,BYTE PTR [ecx-0x7a]
  403eac:	add    DWORD PTR [ebp-0x238a46d5],eax
  403eb2:	pop    edi
  403eb3:	and    DWORD PTR [edx+0x2],edx
  403eb6:	retf   0x78ec
  403eb9:	and    ch,cl
  403ebb:	cdq    
  403ebc:	sub    eax,0xcac54ac8
  403ec1:	popa   
  403ec2:	mov    ds:0xb350cfb9,eax
  403ec7:	imul   edi,ebp,0x964a79f1
  403ecd:	push   edi
  403ece:	(bad)  
  403ecf:	inc    ecx
  403ed0:	mov    ebp,0x2bbc3911
  403ed5:	xchg   edi,eax
  403ed6:	cli    
  403ed7:	sbb    DWORD PTR [eax],0xf07bb35c
  403edd:	sbb    esp,DWORD PTR [esi-0x7f]
  403ee0:	clc    
  403ee1:	std    
  403ee2:	enter  0xaa52,0x4
  403ee6:	sbb    eax,0x7fb4d600
  403eeb:	jmp    0xa197:0xb3ab85a
  403ef2:	sub    eax,0x96a33079
  403ef7:	or     al,0xdf
  403ef9:	jns    0x403f15
  403efb:	jno    0x403ee0
  403efd:	sbb    DWORD PTR [ecx+ebp*4+0x46],0x76
  403f02:	and    ebx,edx
  403f04:	loopne 0x403ec6
  403f06:	xchg   edx,eax
  403f07:	add    edi,DWORD PTR ds:0xba7b54d9
  403f0d:	pop    ebp
  403f0e:	call   0xc9bf:0xd1ab9b3c
  403f15:	ss push edx
  403f17:	(bad)  [ebx+0x43]
  403f1a:	mov    eax,0x4d833383
  403f1f:	jmp    0x403f0c
  403f21:	sub    DWORD PTR [ecx+0x0],esp
  403f24:	iret   
  403f25:	sbb    BYTE PTR [esi],bh
  403f27:	lahf   
  403f28:	mov    ds:0x389e862d,eax
  403f2d:	mov    edx,0x51493041
  403f32:	stos   BYTE PTR es:[edi],al
  403f33:	pop    ebx
  403f34:	sbb    DWORD PTR [edi-0x1],eax
  403f37:	call   0xdde6:0xf0af451f
  403f3e:	enter  0xeb6c,0xd8
  403f42:	sbb    DWORD PTR [ecx-0x70],ebp
  403f45:	jmp    0x321b604d
  403f4a:	or     al,0xf8
  403f4c:	jp     0x403f10
  403f4e:	pop    esp
  403f4f:	sahf   
  403f50:	pop    ss
  403f51:	pop    esi
  403f52:	not    DWORD PTR [eax]
  403f54:	mov    ds:0xbe62702d,eax
  403f59:	or     dl,BYTE PTR [ebx+0x4473f3f3]
  403f5f:	dec    esp
  403f60:	cwde   
  403f61:	and    BYTE PTR [edx],ah
  403f63:	pop    ds
  403f64:	stc    
  403f65:	sbb    bh,BYTE PTR [ebp+0x6b]
  403f68:	inc    edx
  403f69:	push   ebx
  403f6a:	cbw    
  403f6c:	aad    0xb1
  403f6e:	sbb    al,0xe0
  403f70:	mov    eax,esp
  403f72:	shl    BYTE PTR [edi-0x7057f0fe],1
  403f78:	out    dx,al
  403f79:	(bad)  
  403f7b:	push   ecx
  403f7c:	jo     0x403f74
  403f7e:	pop    edx
  403f7f:	sahf   
  403f80:	(bad)  
  403f81:	icebp  
  403f82:	mov    DWORD PTR [edi-0x55],ebx
  403f85:	shl    BYTE PTR [esi],1
  403f87:	cmp    eax,0xe3d6e56c
  403f8c:	cmp    DWORD PTR [ebx+ebp*2+0x65],edi
  403f90:	(bad)  
  403f91:	mov    eax,0x114dcbc8
  403f96:	popa   
  403f97:	out    dx,al
  403f98:	iret   
  403f99:	int3   
  403f9a:	mov    edi,0x17028c05
  403f9f:	mov    ebp,0xea3102ca
  403fa4:	jl     0x403f55
  403fa6:	scas   al,BYTE PTR es:[edi]
  403fa7:	mov    al,0x8c
  403fa9:	adc    esi,edi
  403fab:	rcl    DWORD PTR [ebx+esi*2+0x15],1
  403faf:	pop    edi
  403fb0:	pop    ebp
  403fb1:	fs adc eax,0x7ca83cc
  403fb7:	inc    edi
  403fb8:	div    DWORD PTR [edi+0x55]
  403fbb:	neg    BYTE PTR [eax+0x6]
  403fbe:	inc    esp
  403fbf:	out    0xbb,eax
  403fc1:	mov    al,ds:0xb68f69ec
  403fc6:	in     eax,dx
  403fc7:	and    edx,edi
  403fc9:	mov    eax,ds:0xa79653ae
  403fce:	popa   
  403fcf:	lahf   
  403fd0:	or     bh,BYTE PTR [eax-0x34]
  403fd3:	daa    
  403fd4:	sub    esp,ebp
  403fd6:	(bad)  
  403fd8:	pop    eax
  403fd9:	push   cs
  403fda:	aaa    
  403fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fdc:	xchg   edx,eax
  403fdd:	bnd ret 0xf4b
  403fe1:	xchg   bh,bl
  403fe3:	add    bh,BYTE PTR [ebp+0x7e]
  403fe6:	in     eax,dx
  403fe7:	mov    BYTE PTR [esi+0x37701fe7],dh
  403fed:	test   DWORD PTR [ecx-0x77],eax
  403ff0:	sar    BYTE PTR [esi+ecx*2+0x3ba9b5d9],0x99
  403ff8:	test   eax,0xf767bf0b
  403ffd:	clc    
  403ffe:	dec    esi
  403fff:	push   eax
  404000:	adc    BYTE PTR [ebx+0x707ec047],dl
  404006:	xor    BYTE PTR [ecx+ebp*1],ch
  404009:	aaa    
  40400a:	inc    esp
  40400b:	sub    cl,BYTE PTR [eax+eax*8]
  40400e:	xchg   edi,eax
  40400f:	jl     0x40400f
  404011:	dec    ebx
  404012:	mov    dl,0x81
  404014:	pushf  
  404015:	sbb    edx,DWORD PTR [edx+0x1b1a992f]
  40401b:	or     esi,ebx
  40401d:	cli    
  40401e:	daa    
  40401f:	sub    eax,DWORD PTR [ebx+esi*2+0xf6b17ae]
  404026:	test   esi,edx
  404028:	aad    0x46
  40402a:	cmp    ch,BYTE PTR [eax-0x78]
  40402d:	mov    ds:0xfbdd6f87,al
  404032:	shl    BYTE PTR [edi-0xa],1
  404035:	idiv   BYTE PTR [edi+0x96b31a]
  40403b:	arpl   sp,cx
  40403d:	xor    eax,0x5cd8bb5f
  404042:	or     BYTE PTR [esi-0x5c],dl
  404045:	das    
  404046:	(bad)  
  404047:	bound  ebp,QWORD PTR [eax]
  404049:	clc    
  40404a:	jae    0x403fd6
  40404c:	outs   dx,BYTE PTR ds:[esi]
  40404d:	fmul   st,st(5)
  40404f:	jmp    FWORD PTR [ecx+0x44b77149]
  404055:	or     DWORD PTR [ecx+0x1555ce59],esp
  40405b:	test   BYTE PTR [eax],bl
  40405d:	fsubr  QWORD PTR [ecx+edi*1]
  404060:	mov    ebx,DWORD PTR [edx]
  404062:	aas    
  404063:	js     0x40402d
  404065:	inc    eax
  404066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404067:	xor    bl,dh
  404069:	mov    esp,0xbf10f68e
  40406e:	xchg   ecx,eax
  40406f:	sbb    dh,ah
  404071:	add    eax,0xfd97e730
  404076:	push   0xffffff80
  404078:	push   eax
  404079:	push   ds
  40407a:	imul   esp,DWORD PTR [esi],0xffffffa3
  40407d:	adc    BYTE PTR [edx+0x5b],al
  404080:	cwde   
  404081:	test   DWORD PTR [eax-0x48],esp
  404084:	sbb    DWORD PTR [eax-0x3b],edx
  404087:	sub    DWORD PTR [edi+ebx*4-0x60],eax
  40408b:	pop    edx
  40408c:	add    ah,cl
  40408e:	dec    eax
  40408f:	test   BYTE PTR [edi-0x76],0x18
  404093:	(bad)  
  404094:	test   al,0x91
  404096:	out    dx,al
  404097:	cld    
  404098:	pop    eax
  404099:	es dec ebx
  40409b:	push   0x6f
  40409d:	call   0x97fcd871
  4040a2:	mov    ds:0x61daf6bb,eax
  4040a7:	ds jle 0x40404e
  4040aa:	mov    esi,0x1459b76b
  4040af:	xor    BYTE PTR [edx],cl
  4040b1:	sbb    edx,esp
  4040b3:	repnz cs mov al,0xd5
  4040b7:	sub    DWORD PTR [ecx-0x56b28bab],edx
  4040bd:	add    al,0x7
  4040bf:	mov    ds:0x29309814,al
  4040c4:	imul   ecx,ebp,0x653b847f
  4040ca:	lods   al,BYTE PTR ds:[esi]
  4040cb:	xchg   DWORD PTR [esi-0x55],ebp
  4040ce:	pop    es
  4040cf:	pop    edx
  4040d0:	fst    QWORD PTR [ebx-0x6b5be54]
  4040d6:	xchg   dl,dl
  4040d8:	fisub  WORD PTR [eax-0x52]
  4040db:	adc    BYTE PTR [eax+0x34afd1da],0x49
  4040e2:	fdiv   st(2),st
  4040e4:	xor    BYTE PTR [esi+ebp*4],dl
  4040e7:	xor    ah,BYTE PTR [edi-0x37]
  4040ea:	xchg   edx,eax
  4040eb:	ret    0x17c
  4040ee:	pop    ebp
  4040ef:	fnstenv [eax+0x35139284]
  4040f5:	cmc    
  4040f6:	jle    0x404174
  4040f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040f9:	or     ah,BYTE PTR [esi-0x6e8dc021]
  4040ff:	jno    0x404128
  404101:	js     0x404155
  404103:	fwait
  404104:	push   ebp
  404105:	push   esi
  404106:	push   ds
  404107:	mov    ch,0x83
  404109:	push   es
  40410a:	push   ebp
  40410b:	mov    ebx,cs
  40410d:	add    al,0xa0
  40410f:	sbb    al,0x3b
  404111:	mov    ecx,0xf19f1dd6
  404116:	sahf   
  404117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404118:	xor    ebp,ecx
  40411a:	outs   dx,DWORD PTR ds:[esi]
  40411b:	loop   0x4040c3
  40411d:	iret   
  40411e:	les    eax,FWORD PTR [edx]
  404120:	sbb    dl,BYTE PTR [edi]
  404122:	push   esi
  404123:	inc    eax
  404124:	loope  0x40412c
  404126:	and    esi,esp
  404128:	inc    ebx
  404129:	arpl   WORD PTR [esi-0x51],si
  40412c:	scas   eax,DWORD PTR es:[edi]
  40412d:	cmp    al,0x9b
  40412f:	or     eax,DWORD PTR [edi+0x5e]
  404132:	and    al,0xfb
  404134:	pusha  
  404135:	addr16 cmp al,0x8d
  404138:	add    esi,esi
  40413a:	cmp    BYTE PTR [esp+ebp*1+0x32],dl
  40413e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40413f:	test   al,0xad
  404141:	jmp    0x40411a
  404143:	or     al,0x6a
  404145:	cmc    
  404146:	mov    WORD PTR [edx-0x13149217],?
  40414c:	int3   
  40414d:	push   0xa5a5aa10
  404152:	popf   
  404153:	fwait
  404154:	iret   
  404155:	inc    ebx
  404156:	daa    
  404157:	mov    dl,0x17
  404159:	lods   al,BYTE PTR ds:[esi]
  40415a:	imul   edi,DWORD PTR [eax],0x2b
  40415d:	nop
  40415e:	fs mov ch,0x37
  404161:	(bad)  
  404162:	enter  0xff9,0x5c
  404166:	hlt    
  404167:	push   0xffffffa7
  404169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40416a:	mov    dh,0x47
  40416c:	mov    bl,al
  40416e:	jmp    DWORD PTR [ecx+0x68e5b34f]
  404174:	in     al,0x1a
  404176:	scas   eax,DWORD PTR es:[edi]
  404177:	jnp    0x40417d
  404179:	mov    dl,BYTE PTR [edx-0x11]
  40417c:	jmp    DWORD PTR [edi+0x35db09e8]
  404182:	(bad)  
  404183:	sbb    cl,BYTE PTR [ecx]
  404185:	pop    edx
  404186:	imul   esp,DWORD PTR ds:0x654877a6,0xe1e153de
  404190:	inc    eax
  404191:	add    ebp,DWORD PTR [edi+ecx*2-0x1db79a05]
  404198:	bound  esi,QWORD PTR [esi+0x6]
  40419b:	setae  BYTE PTR [ebx-0x54138a56]
  4041a2:	or     BYTE PTR [eax+0x52ae9e96],bh
  4041a8:	rcr    BYTE PTR [eax-0xb],cl
  4041ab:	fdivr  DWORD PTR [ebx]
  4041ad:	into   
  4041ae:	pop    ss
  4041af:	mov    bh,0x8f
  4041b1:	fld    QWORD PTR [edi+0x5713d40e]
  4041b7:	jmp    0x4041fc
  4041b9:	mov    ds:0x7f6482f8,al
  4041be:	push   ss
  4041bf:	repz adc dh,dl
  4041c2:	mov    esp,0x8f0e7a2c
  4041c7:	cdq    
  4041c8:	xchg   ebp,eax
  4041c9:	sub    BYTE PTR [ebx],al
  4041cb:	cdq    
  4041cc:	sbb    al,BYTE PTR [eax]
  4041ce:	jo     0x4041dd
  4041d0:	hlt    
  4041d1:	test   al,0xd
  4041d3:	test   ah,dh
  4041d5:	push   eax
  4041d6:	ss std 
  4041d8:	into   
  4041d9:	push   0x1019ac06
  4041de:	xchg   ecx,eax
  4041df:	aam    0x9c
  4041e1:	ss pop ebx
  4041e3:	outs   dx,BYTE PTR ds:[esi]
  4041e4:	jbe    0x40418f
  4041e6:	sbb    BYTE PTR [eax+0x4e],ah
  4041e9:	imul   eax,DWORD PTR [eax-0x18660c36],0x24eb2d30
  4041f3:	add    eax,0x43660a49
  4041f8:	push   edi
  4041f9:	popf   
  4041fa:	jge    0x404245
  4041fc:	pop    ebp
  4041fd:	lock xor DWORD PTR [edi+0x8],esi
  404201:	sub    bl,BYTE PTR [ebp+0x5f]
  404204:	cmp    bh,dl
  404206:	bound  eax,QWORD PTR [ebp+0x6d1324ff]
  40420c:	add    eax,0xfffffffc
  40420f:	cmp    DWORD PTR [edi+0x7d],esi
  404212:	push   es
  404213:	sub    eax,0xab13eed9
  404218:	push   ss
  404219:	dec    esp
  40421a:	int3   
  40421b:	shl    BYTE PTR [ebx+0x701f5dc8],1
  404221:	xchg   edi,eax
  404222:	push   eax
  404223:	rcl    dh,0xd9
  404226:	mov    eax,0xe5e4f30f
  40422b:	imul   ebp,DWORD PTR [ebp+0x6],0x1a
  40422f:	dec    ebx
  404230:	aam    0x5c
  404232:	xlat   BYTE PTR ds:[ebx]
  404233:	push   eax
  404234:	and    eax,DWORD PTR [edi+0x193b3af4]
  40423a:	xor    esp,DWORD PTR [ecx-0x64]
  40423d:	mov    eax,0x234e2655
  404242:	ja     0x4041d6
  404244:	sbb    dl,ah
  404246:	addr16 mov ah,0xcc
  404249:	outs   dx,DWORD PTR ds:[esi]
  40424a:	sbb    eax,0xf43e9e93
  40424f:	mov    eax,ds:0x3623c2ce
  404254:	inc    ebx
  404255:	sbb    bh,dh
  404257:	and    BYTE PTR [ecx-0xf],ch
  40425a:	jmp    0xde64aabb
  40425f:	into   
  404260:	adc    DWORD PTR [esi-0x30],edx
  404263:	ins    DWORD PTR es:[edi],dx
  404264:	das    
  404265:	scas   al,BYTE PTR es:[edi]
  404266:	ins    BYTE PTR es:[edi],dx
  404267:	xchg   edx,eax
  404268:	out    dx,eax
  404269:	sbb    DWORD PTR [ebx+ebp*1+0x4e],edx
  40426d:	push   ds
  40426e:	adc    BYTE PTR [ebp-0x5420bf89],al
  404274:	or     BYTE PTR [ebx-0x53],ch
  404277:	stos   BYTE PTR es:[edi],al
  404278:	imul   al
  40427a:	int3   
  40427b:	and    eax,0x6bbf024f
  404280:	mov    ah,0x8e
  404282:	test   al,0x7d
  404284:	adc    bh,BYTE PTR [ecx+0x47a314ac]
  40428a:	xchg   esi,eax
  40428b:	scas   eax,DWORD PTR es:[edi]
  40428c:	dec    ebx
  40428d:	and    esi,0x3b73e65
  404293:	data16 gs test al,0x95
  404297:	aaa    
  404298:	adc    esp,DWORD PTR [ecx-0x40]
  40429b:	(bad)  
  40429c:	shl    BYTE PTR [edx],1
  40429e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40429f:	aas    
  4042a0:	aam    0xec
  4042a2:	mov    esp,0x16ec34a
  4042a7:	xor    bl,BYTE PTR [edi]
  4042a9:	sbb    DWORD PTR [eax+0x73],eax
  4042ac:	push   ecx
  4042ad:	pusha  
  4042ae:	icebp  
  4042af:	inc    eax
  4042b0:	shl    BYTE PTR [eax],0xac
  4042b3:	sub    bl,BYTE PTR [edi]
  4042b5:	cs popa 
  4042b7:	retf   
  4042b8:	jo     0x40426d
  4042ba:	sahf   
  4042bb:	and    dh,BYTE PTR [eax+0x40]
  4042be:	jnp    0x40425e
  4042c0:	mov    BYTE PTR [si+0x55],0xbd
  4042c5:	popa   
  4042c6:	inc    esp
  4042c7:	std    
  4042c8:	aam    0xca
  4042ca:	mov    ds:0x2f6f1a70,eax
  4042cf:	xor    esi,DWORD PTR [ebx]
  4042d1:	cmp    ebp,DWORD PTR [esi-0x32]
  4042d4:	shl    BYTE PTR [esp+ebx*2+0x58dd2713],1
  4042db:	xchg   esi,eax
  4042dc:	sbb    cl,al
  4042de:	mov    edi,0x3929ba6b
  4042e3:	push   esi
  4042e4:	or     BYTE PTR [eax],cl
  4042e6:	mov    edx,0xbdac8c4e
  4042eb:	xor    eax,0x132649d3
  4042f0:	push   ecx
  4042f1:	stc    
  4042f2:	mov    esi,0x39ba44e
  4042f7:	sbb    DWORD PTR [edx],eax
  4042f9:	push   ebx
  4042fa:	out    dx,al
  4042fb:	retf   
  4042fc:	lock push es
  4042fe:	fwait
  4042ff:	xor    bl,BYTE PTR [esi-0x1f0ad6cb]
  404305:	ss push edx
  404307:	dec    ebx
  404308:	mov    bh,0x70
  40430a:	mov    ebp,0xb221c29e
  40430f:	xchg   DWORD PTR [eax+eax*8+0x75],edi
  404313:	mov    esi,0xedb3fa7c
  404318:	push   es
  404319:	mov    ah,0x11
  40431b:	pop    esp
  40431c:	mov    al,BYTE PTR [ebx+edx*2-0x5d]
  404320:	shl    BYTE PTR ds:0x751d0f51,1
  404326:	retf   
  404327:	not    BYTE PTR [ecx-0x1e8310cf]
  40432d:	es out 0x72,eax
  404330:	mov    ds:0xa684e852,al
  404335:	lock mov dl,0x6f
  404338:	dec    edx
  404339:	jmp    0xa32ca788
  40433e:	jmp    0x404378
  404340:	outs   dx,BYTE PTR ds:[esi]
  404341:	jg     0x4042d2
  404343:	mov    ah,0x9
  404345:	mov    al,ds:0x64219fc5
  40434a:	push   ecx
  40434b:	lahf   
  40434c:	test   dh,bl
  40434e:	sbb    DWORD PTR [eax-0x40],edx
  404351:	mov    bh,0x59
  404353:	ds repz and ebp,ecx
  404357:	imul   ecx,esp,0xffffffa0
  40435a:	push   edi
  40435b:	push   edx
  40435c:	mov    ebp,0x205d2a40
  404361:	push   edx
  404362:	mov    bl,0x73
  404364:	jmp    0x115f:0xfb8c0acd
  40436b:	or     edx,DWORD PTR [ebx+0x48]
  40436e:	xchg   ebp,eax
  40436f:	add    bh,BYTE PTR [edi]
  404371:	cmc    
  404372:	arpl   WORD PTR [edx],bx
  404374:	push   eax
  404375:	cmc    
  404376:	mov    edi,0xce2a05ee
  40437b:	popf   
  40437c:	mov    eax,ds:0x890ccc94
  404381:	jmp    0x71fc0266
  404386:	shl    DWORD PTR [edi+0x2d],1
  404389:	sti    
  40438a:	jne    0x404378
  40438c:	adc    eax,DWORD PTR [edi-0x21292159]
  404392:	cld    
  404393:	sub    eax,0x344c57e6
  404398:	mov    WORD PTR [eax+esi*2],?
  40439b:	mov    al,0xe7
  40439d:	je     0x404376
  40439f:	mov    ebx,0xde1a4d68
  4043a4:	jle    0x404371
  4043a6:	jecxz  0x404353
  4043a8:	jp     0x40436e
  4043aa:	mov    ah,0x1e
  4043ac:	fsub   QWORD PTR [edx+0x7b]
  4043af:	out    0x38,al
  4043b1:	pop    esi
  4043b2:	xor    eax,0xa2b6b601
  4043b7:	sub    ch,BYTE PTR [edx+0x66a15e54]
  4043bd:	int    0x9a
  4043bf:	or     al,0x85
  4043c1:	sahf   
  4043c2:	mov    edi,0x5cdebd18
  4043c7:	out    0x6b,eax
  4043c9:	sti    
  4043ca:	or     ch,ah
  4043cc:	push   0x55dfb90a
  4043d1:	and    bh,BYTE PTR [edx]
  4043d3:	push   0x8812527a
  4043d8:	out    dx,eax
  4043d9:	popa   
  4043da:	cli    
  4043db:	push   ss
  4043dc:	add    ebp,ebx
  4043de:	stos   DWORD PTR es:[edi],eax
  4043df:	or     al,ch
  4043e1:	fwait
  4043e2:	je     0x404441
  4043e4:	jle    0x4043f1
  4043e6:	adc    ecx,0xb31d9f8c
  4043ec:	cmp    ah,0xda
  4043ef:	repz inc ebx
  4043f1:	in     al,0xdb
  4043f3:	xor    bl,BYTE PTR [edi+ebp*4+0x3af03bc6]
  4043fa:	imul   eax,DWORD PTR [ebx+0x5f35bed7],0xffffffba
  404401:	sub    eax,0x49c0dac7
  404406:	ins    BYTE PTR es:[edi],dx
  404407:	or     DWORD PTR [edx],edi
  404409:	stc    
  40440a:	dec    esi
  40440b:	adc    eax,0x5a51ab8f
  404410:	dec    ebx
  404411:	push   0x7634a861
  404416:	xchg   ecx,eax
  404417:	push   ebx
  404418:	(bad)  
  404419:	pop    ebx
  40441a:	hlt    
  40441b:	rcl    dl,1
  40441d:	sti    
  40441e:	xchg   BYTE PTR [eax],dh
  404420:	cmp    al,0x29
  404422:	retf   
  404423:	repz lds ecx,FWORD PTR [ebp-0x3ac56e68]
  40442a:	mov    al,ds:0x8e7e109d
  40442f:	inc    esp
  404430:	fldenv [edx]
  404432:	(bad)  
  404433:	int3   
  404434:	xchg   edx,eax
  404435:	cwde   
  404436:	xor    eax,0x5eec89a4
  40443b:	push   edi
  40443c:	mov    ebx,0x9533fe06
  404441:	in     al,0x1a
  404443:	mov    esp,0xc905737
  404448:	cdq    
  404449:	mov    ds:0xa928f2cf,eax
  40444e:	jmp    FWORD PTR [ebp+0x9]
  404451:	add    al,0x66
  404453:	adc    ebp,DWORD PTR [esi+0x5d]
  404456:	les    edi,FWORD PTR [ecx+0x4a]
  404459:	or     DWORD PTR [edx-0x729a83b3],edx
  40445f:	cwde   
  404460:	sub    ebp,esp
  404462:	jecxz  0x4043f8
  404464:	jp     0x404438
  404466:	adc    al,0x8f
  404468:	push   esp
  404469:	xor    cl,dh
  40446b:	cdq    
  40446c:	ja     0x4044eb
  40446e:	jle    0x40449d
  404470:	sbb    ebp,edi
  404472:	sbb    ah,cl
  404474:	push   0xeab5594e
  404479:	sbb    dh,ch
  40447b:	mov    dl,0xc6
  40447d:	icebp  
  40447e:	fistp  QWORD PTR [edi]
  404480:	mov    cl,0x53
  404482:	dec    edi
  404483:	pop    eax
  404484:	lock add DWORD PTR [ebx],eax
  404487:	out    0x9b,al
  404489:	sahf   
  40448a:	and    eax,0x267c98f6
  40448f:	add    BYTE PTR [ebx-0x24f67454],dh
  404495:	jp     0x40445f
  404497:	das    
  404498:	cmp    DWORD PTR [edi+0xe],0x9bb1ac8b
  40449f:	stos   DWORD PTR es:[edi],eax
  4044a0:	jno    0x40447a
  4044a2:	test   eax,0xf1547e9
  4044a7:	gs or  eax,0xd6e99bf8
  4044ad:	lock cld 
  4044af:	stos   DWORD PTR es:[edi],eax
  4044b0:	push   es
  4044b1:	test   eax,0xc11a6449
  4044b6:	and    ebx,eax
  4044b8:	push   edi
  4044b9:	fisubr WORD PTR [eax+0x9]
  4044bc:	scas   eax,DWORD PTR es:[edi]
  4044bd:	jae    0x40446c
  4044bf:	inc    esi
  4044c0:	(bad)  
  4044c2:	jne    0x40445f
  4044c4:	nop
  4044c5:	sbb    bh,bh
  4044c7:	es dec ebx
  4044c9:	xchg   BYTE PTR [esi],dl
  4044cb:	fcom   DWORD PTR [edi-0x7d]
  4044ce:	cs nop
  4044d0:	xor    eax,0xd1ff148a
  4044d5:	repnz (bad) 
  4044d7:	fld    DWORD PTR [edi]
  4044d9:	test   eax,0x59d43935
  4044de:	inc    ecx
  4044df:	mov    bh,0x34
  4044e1:	pop    ecx
  4044e2:	rcr    BYTE PTR [esi],cl
  4044e4:	mov    ah,0xbc
  4044e6:	sub    eax,DWORD PTR [ecx+0x3c45f585]
  4044ec:	mov    esp,0xbdc6aa44
  4044f1:	sub    eax,0x8ca7fc05
  4044f6:	out    dx,eax
  4044f7:	sahf   
  4044f8:	lock out dx,eax
  4044fa:	mov    eax,ds:0xa14adb64
  4044ff:	jns    0x4044f5
  404501:	push   0x89714abc
  404506:	jge    0x404518
  404508:	mov    ecx,0x63e2be09
  40450d:	je     0x404491
  40450f:	into   
  404510:	mov    eax,0x4d1e9d45
  404515:	popf   
  404516:	ror    DWORD PTR [eax+eiz*4],0x43
  40451a:	push   ebp
  40451b:	jb     0x404521
  40451d:	sbb    eax,0x206df2ac
  404522:	in     al,0x1
  404524:	(bad)  
  404525:	adc    BYTE PTR [ebp*8+0x397dfe00],dl
  40452c:	add    al,0x81
  40452e:	add    ecx,DWORD PTR [ebx-0x6faec464]
  404534:	pop    eax
  404535:	push   edi
  404536:	outs   dx,BYTE PTR ds:[esi]
  404537:	inc    edi
  404538:	mov    edi,0xd88a93bd
  40453d:	mov    eax,0xf3dd5be
  404542:	and    BYTE PTR ss:[ebp+0x5e7b5579],ch
  404549:	dec    esp
  40454a:	dec    edx
  40454b:	test   DWORD PTR [eax],0x553755b8
  404551:	rcr    BYTE PTR [esi],0x9c
  404554:	sub    DWORD PTR [edx-0x76],0xffffffd0
  404558:	dec    ebp
  404559:	push   esp
  40455a:	scas   eax,DWORD PTR es:[edi]
  40455b:	cs stc 
  40455d:	xor    al,0x6d
  40455f:	mov    ds:0x20e1dac0,eax
  404564:	inc    edi
  404565:	into   
  404566:	ss arpl cx,ax
  404569:	js     0x40457d
  40456b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40456c:	test   DWORD PTR [ecx+0x19a9f657],edi
  404572:	cmc    
  404573:	jae    0x40454d
  404575:	pop    ds
  404576:	or     BYTE PTR [edi-0x336c088d],0xc5
  40457d:	adc    DWORD PTR [ecx+esi*4],esp
  404580:	fild   QWORD PTR [ebx]
  404582:	adc    bh,BYTE PTR [ecx]
  404584:	pop    ss
  404585:	(bad)  
  404586:	aam    0x0
  404588:	pop    ds
  404589:	add    ah,BYTE PTR [ebp-0x58]
  40458c:	iret   
  40458d:	pop    ss
  40458e:	dec    eax
  40458f:	sub    esi,DWORD PTR fs:[edi+0x2c]
  404593:	inc    edx
  404594:	(bad)  
  404595:	cmc    
  404596:	lea    edi,[ebp-0x1d]
  404599:	xchg   edx,eax
  40459a:	popf   
  40459b:	es sahf 
  40459d:	dec    eax
  40459e:	mov    ebx,0xda8d8de7
  4045a3:	push   esi
  4045a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045a5:	push   es
  4045a6:	std    
  4045a7:	inc    esp
  4045a8:	popf   
  4045a9:	and    ebp,ebx
  4045ab:	test   DWORD PTR [eax+0x664506c6],edi
  4045b1:	and    DWORD PTR [esi],0x55
  4045b4:	std    
  4045b5:	daa    
  4045b6:	outs   dx,BYTE PTR ds:[esi]
  4045b7:	add    BYTE PTR [ebx-0x30b934ce],ah
  4045bd:	jl     0x40457a
  4045bf:	lock bound ecx,QWORD PTR [ebp+0x57]
  4045c3:	push   ss
  4045c4:	hlt    
  4045c5:	icebp  
  4045c6:	out    dx,al
  4045c7:	pop    ebx
  4045c8:	jg     0x4045be
  4045ca:	xchg   ebp,eax
  4045cb:	outs   dx,BYTE PTR ds:[esi]
  4045cc:	xor    BYTE PTR [ebx],ch
  4045ce:	add    BYTE PTR [esi+eax*2],dl
  4045d1:	out    0xe1,eax
  4045d3:	mov    al,ds:0x1ece8da0
  4045d8:	mov    edi,0xfa82be3b
  4045dd:	adc    BYTE PTR ds:0xa05775bd,al
  4045e3:	jne    0x40460b
  4045e5:	repz out dx,al
  4045e7:	sub    eax,DWORD PTR [esi-0x58]
  4045ea:	pop    esp
  4045eb:	pop    esp
  4045ec:	add    dl,BYTE PTR ds:0x358bd0a
  4045f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045f3:	xlat   BYTE PTR ds:[ebx]
  4045f4:	les    esi,FWORD PTR [esi+0x37]
  4045f7:	addr16 pop esp
  4045f9:	sub    BYTE PTR [edi+0x2cf0b0c9],ch
  4045ff:	jb     0x404672
  404601:	bound  ebp,QWORD PTR [ebx]
  404603:	adc    ebx,DWORD PTR [esi-0x28]
  404606:	mov    dl,BYTE PTR [eax+edx*4+0x64c109e7]
  40460d:	xor    al,0x7e
  40460f:	sbb    dl,BYTE PTR [ebx]
  404611:	dec    ebx
  404612:	sub    eax,0x9e7c9e68
  404617:	pop    ecx
  404618:	out    dx,al
  404619:	dec    eax
  40461a:	repnz sbb dl,ah
  40461d:	loope  0x4045bf
  40461f:	xchg   ebp,eax
  404620:	xchg   ebx,eax
  404621:	das    
  404622:	xchg   al,dh
  404624:	test   al,0x3f
  404626:	ja     0x404608
  404628:	push   es
  404629:	pop    es
  40462a:	xchg   BYTE PTR [ebx-0x36],bh
  40462d:	jl     0x40469b
  40462f:	xor    esi,0x8
  404632:	jg     0x4045cd
  404634:	ds std 
  404636:	stos   BYTE PTR es:[edi],al
  404637:	sub    DWORD PTR [ebp-0x7],esi
  40463a:	xchg   ebx,eax
  40463b:	dec    esp
  40463c:	rol    BYTE PTR [esi-0x36],1
  40463f:	or     eax,0x91ec115c
  404644:	int3   
  404645:	loop   0x404692
  404647:	push   ebp
  404648:	(bad)
  40464d:	and    ebp,0x3109946a
  404653:	inc    eax
  404654:	out    dx,al
  404655:	mov    ds:0xebe7cb82,eax
  40465a:	pop    ebx
  40465b:	xchg   BYTE PTR cs:[esi],bl
  40465e:	xor    al,0x6
  404660:	sbb    cl,BYTE PTR [edx+ebx*8]
  404663:	and    edx,esi
  404665:	imul   ecx,DWORD PTR [esi+0x13],0x79a32604
  40466c:	pop    edx
  40466d:	loopne 0x4046bf
  40466f:	pop    ebx
  404670:	push   edi
  404671:	dec    ebx
  404672:	outs   dx,DWORD PTR ds:[esi]
  404673:	jmp    0x404658
  404675:	leave  
  404676:	mov    ebx,0x5ebcf579
  40467b:	push   esi
  40467c:	xor    esi,DWORD PTR [eax]
  40467e:	rcr    ebx,0x80
  404681:	int    0xc3
  404683:	push   eax
  404684:	adc    BYTE PTR [edi+0x30663635],ch
  40468a:	repz ret 
  40468c:	mov    eax,cs
  40468e:	sbb    BYTE PTR [ebx-0x3838e8b1],dh
  404694:	cmp    ebx,DWORD PTR [esi]
  404696:	push   edx
  404697:	enter  0x3aa7,0xc6
  40469b:	fimul  DWORD PTR es:[ecx+0x1d]
  40469f:	push   cs
  4046a0:	imul   esi,DWORD PTR [edi+0x4c],0x889aa041
  4046a7:	aaa    
  4046a8:	pop    edx
  4046a9:	aas    
  4046aa:	xchg   edx,eax
  4046ab:	loopne 0x4046aa
  4046ad:	cmp    DWORD PTR [ecx-0x77fedbed],esi
  4046b3:	push   cs
  4046b4:	adc    al,0x80
  4046b6:	inc    eax
  4046b7:	leave  
  4046b8:	adc    bh,0xa3
  4046bb:	mov    cl,0xa4
  4046bd:	repz test al,0x66
  4046c0:	xor    DWORD PTR [ebp-0x5339283a],0xffffff89
  4046c7:	mov    eax,ds:0x6d649e6
  4046cc:	out    dx,eax
  4046cd:	xor    bh,BYTE PTR [ebp+0x374032b6]
  4046d3:	dec    eax
  4046d4:	out    0x69,eax
  4046d6:	in     al,0xaf
  4046d8:	(bad)  
  4046d9:	stos   BYTE PTR es:[edi],al
  4046da:	popf   
  4046db:	lock cdq 
  4046dd:	jo     0x4046c1
  4046df:	int    0xb
  4046e1:	retf   0x81ea
  4046e4:	stc    
  4046e5:	mov    esi,0x5dccdb6e
  4046ea:	ins    DWORD PTR es:[edi],dx
  4046eb:	or     BYTE PTR [esi],al
  4046ed:	in     eax,dx
  4046ee:	int3   
  4046ef:	daa    
  4046f0:	clc    
  4046f1:	mov    dh,0x6e
  4046f3:	gs mov dl,0x9d
  4046f6:	mov    edi,0xcea22616
  4046fb:	arpl   WORD PTR [edi+0x543a187c],ax
  404701:	stos   BYTE PTR es:[edi],al
  404702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404703:	(bad)  
  404704:	jmp    0x404749
  404706:	xor    edx,DWORD PTR [ebx+0x3b]
  404709:	mov    al,BYTE PTR [edi+ebx*8]
  40470c:	inc    esi
  40470d:	inc    ebp
  40470e:	sub    ecx,DWORD PTR [edi+0x60]
  404711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404712:	xchg   ebx,esp
  404714:	pusha  
  404715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404716:	xor    eax,0x150575e7
  40471b:	xor    DWORD PTR [edx],0x57601c38
  404721:	cdq    
  404722:	inc    esi
  404723:	retf   
  404724:	pop    ds
  404725:	sahf   
  404726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404727:	add    esi,DWORD PTR [edi+0x76a4db30]
  40472d:	(bad)  [edx-0x670fdec6]
  404733:	retf   0xb24c
  404736:	add    dl,BYTE PTR [eax-0x55]
  404739:	or     eax,0x6bfa6d55
  40473e:	clc    
  40473f:	gs test eax,0xce7ea9b
  404745:	out    0x9a,al
  404747:	pop    ecx
  404748:	test   DWORD PTR [eax],esi
  40474a:	dec    esp
  40474b:	rcr    dl,cl
  40474d:	pop    edx
  40474e:	pop    esp
  40474f:	fdivr  QWORD PTR [ebx-0x3f]
  404752:	or     BYTE PTR [edx-0x6aebfff0],dl
  404758:	stc    
  404759:	ins    DWORD PTR es:[edi],dx
  40475a:	loopne 0x40478b
  40475c:	xchg   ebp,eax
  40475d:	outs   dx,BYTE PTR ds:[esi]
  40475e:	cmc    
  40475f:	mov    esp,0xea86def1
  404764:	add    DWORD PTR [esi-0x36c8d29],esi
  40476a:	push   ebp
  40476b:	repz jp 0x404789
  40476e:	push   edi
  40476f:	fimul  DWORD PTR [ecx]
  404771:	mov    edi,0x6e340436
  404776:	scas   eax,DWORD PTR es:[edi]
  404777:	mov    cl,0xba
  404779:	cdq    
  40477a:	jmp    0x4506:0x8a84d77a
  404781:	in     eax,dx
  404782:	inc    esi
  404783:	(bad)  
  404784:	enter  0xae91,0x4c
  404788:	fld    QWORD PTR [ecx]
  40478a:	ds enter 0x8d41,0xaa
  40478f:	add    ecx,edx
  404791:	mov    ?,edi
  404793:	je     0x40479c
  404795:	sti    
  404796:	cwde   
  404797:	mov    edx,0xe49f8ff5
  40479c:	mov    ah,0x36
  40479e:	outs   dx,DWORD PTR ds:[esi]
  40479f:	mov    ds:0xa7d24e57,al
  4047a4:	mov    esi,0xc4422144
  4047a9:	cwde   
  4047aa:	fwait
  4047ab:	cli    
  4047ac:	and    ecx,0xde2880d4
  4047b2:	rdtsc  
  4047b4:	cmp    edx,edx
  4047b6:	retf   
  4047b7:	jno    0x4047ad
  4047b9:	push   esi
  4047ba:	std    
  4047bb:	xchg   ebp,eax
  4047bc:	fstp   QWORD PTR fs:[eax]
  4047bf:	and    dl,BYTE PTR [ebp+eax*2+0x23]
  4047c3:	jbe    0x4047c4
  4047c5:	sbb    DWORD PTR [edx-0x25],esi
  4047c8:	not    BYTE PTR [esi-0x2441623e]
  4047ce:	push   ecx
  4047cf:	out    0x4e,al
  4047d1:	sbb    dh,ch
  4047d3:	mov    ah,0xfe
  4047d5:	lahf   
  4047d6:	rol    BYTE PTR [eax],0x41
  4047d9:	xchg   ebp,eax
  4047da:	enter  0x9605,0x1f
  4047de:	add    BYTE PTR [ebx+0x17],bl
  4047e1:	mov    cl,0xdf
  4047e3:	jae    0x40485d
  4047e5:	fs out 0x62,eax
  4047e8:	popf   
  4047e9:	jno    0x40481e
  4047eb:	shl    DWORD PTR [edx+0x68a61c64],0xb3
  4047f2:	sbb    BYTE PTR [ebx+0x32d4bb4e],dl
  4047f8:	dec    edx
  4047f9:	or     DWORD PTR [edx-0x346a0242],edx
  4047ff:	pop    esi
  404800:	mov    esp,0xe75b6791
  404805:	clc    
  404806:	mov    edi,0x2d1cc117
  40480b:	dec    esp
  40480c:	cmp    eax,0xca7566f0
  404811:	iret   
  404812:	inc    edi
  404813:	jg     0x404870
  404815:	outs   dx,BYTE PTR ds:[esi]
  404816:	jbe    0x40487f
  404818:	js     0x40482e
  40481a:	inc    ebp
  40481b:	or     eax,0x23aac757
  404820:	dec    eax
  404821:	mov    bh,0x2a
  404823:	xor    edx,DWORD PTR ds:0x857bc608
  404829:	mov    edi,0x764ab61f
  40482e:	test   BYTE PTR [edi+0x41],dl
  404831:	ja     0x4047ca
  404833:	push   esi
  404834:	dec    ebx
  404835:	lea    edx,[ecx]
  404837:	xor    DWORD PTR [ebp+0xd380d4b],ebp
  40483d:	test   eax,0x465913f
  404842:	dec    eax
  404843:	or     al,0xda
  404845:	and    al,0x96
  404847:	int    0x3b
  404849:	jo     0x404860
  40484b:	inc    edx
  40484c:	fsubr  st(6),st
  40484e:	cmp    ah,BYTE PTR [ebx]
  404850:	cmp    edx,0xffffffb0
  404853:	sub    DWORD PTR [ecx+0x53c51085],ebx
  404859:	out    dx,al
  40485a:	cmp    eax,0x138bc152
  40485f:	jge    0x4047e3
  404861:	mov    bl,0xe3
  404863:	and    BYTE PTR [ecx],0xd9
  404866:	mov    es,WORD PTR [edx-0x70]
  404869:	fwait
  40486a:	xchg   ecx,eax
  40486b:	in     al,0x89
  40486d:	in     eax,0xda
  40486f:	arpl   di,cx
  404871:	lods   eax,DWORD PTR ds:[esi]
  404872:	or     eax,0x5f21a816
  404877:	push   ebx
  404878:	fst    st(4)
  40487a:	(bad)  
  40487b:	dec    esp
  40487c:	(bad)  
  40487d:	cwde   
  40487e:	shl    DWORD PTR [ebx+0x45],1
  404881:	test   BYTE PTR [esi-0x7],0xff
  404885:	dec    esi
  404886:	inc    edi
  404887:	push   0x7
  404889:	xchg   ebp,eax
  40488a:	add    eax,0xe1b0acf3
  40488f:	and    edi,DWORD PTR [esi+0x6fc1ebfc]
  404895:	lock pop ecx
  404897:	rcr    DWORD PTR [ecx],0x1e
  40489a:	jg     0x4048d2
  40489c:	add    edi,DWORD PTR [ebp-0x39eba7eb]
  4048a2:	cmp    bh,BYTE PTR [ecx+esi*4+0x2b]
  4048a6:	cs mov ch,0x9c
  4048a9:	push   cs
  4048aa:	or     DWORD PTR [eax],ebx
  4048ac:	add    BYTE PTR [edi],bh
  4048ae:	fst    QWORD PTR [ebx-0x73]
  4048b1:	inc    esi
  4048b2:	bound  esi,QWORD PTR [edi-0x267d8d48]
  4048b8:	aad    0x14
  4048ba:	test   eax,0xeca098c2
  4048bf:	jmp    0x404940
  4048c1:	adc    BYTE PTR [ebx+0x17],al
  4048c4:	imul   edx,DWORD PTR [ebx-0x35376213],0xf2405647
  4048ce:	enter  0xb463,0x61
  4048d2:	fwait
  4048d3:	jmp    edx
  4048d5:	cmp    DWORD PTR [ebx+edi*1+0x21],esp
  4048d9:	push   edx
  4048da:	cmp    BYTE PTR [esi+esi*1+0x1b],0xb4
  4048df:	pop    esi
  4048e0:	add    BYTE PTR [ebp-0x3a527e59],dh
  4048e6:	in     eax,0xf3
  4048e8:	push   ebp
  4048e9:	jg     0x40486e
  4048eb:	pop    ss
  4048ec:	sahf   
  4048ed:	je     0x40494b
  4048ef:	inc    DWORD PTR [edx+0x17]
  4048f2:	rcr    BYTE PTR [ebp-0xde088ce],cl
  4048f8:	jne    0x404892
  4048fa:	mov    ebp,0x1ea24b93
  4048ff:	inc    ebp
  404900:	aam    0x88
  404902:	cwde   
  404903:	data16 jp 0x4048e5
  404906:	push   0xdb1b2296
  40490b:	push   es
  40490c:	inc    edx
  40490d:	push   ds
  40490e:	das    
  40490f:	xor    al,0xea
  404911:	sub    ch,al
  404913:	shl    DWORD PTR [edx+eax*8-0x8],cl
  404917:	(bad)  
  404918:	mov    edi,0x8a3cbf34
  40491d:	cmp    BYTE PTR [eax+edi*2-0x47],ah
  404921:	sbb    al,0xc8
  404923:	test   DWORD PTR [eax],eax
  404925:	scas   eax,DWORD PTR es:[edi]
  404926:	xor    eax,0xdd2fdb04
  40492b:	and    eax,DWORD PTR [esi]
  40492d:	(bad)  
  40492e:	icebp  
  40492f:	outs   dx,DWORD PTR ds:[esi]
  404930:	call   0xf838:0xeb87f62d
  404937:	fsub   DWORD PTR [edi]
  404939:	pop    esi
  40493a:	push   es
  40493b:	cmp    DWORD PTR [edx],edx
  40493d:	sub    eax,0x60dd58c2
  404942:	lea    esp,[esp+edi*2+0x6a]
  404946:	loopne 0x4049a4
  404948:	ins    BYTE PTR es:[edi],dx
  404949:	dec    ecx
  40494a:	cmc    
  40494b:	sbb    al,BYTE PTR [ebx+ecx*4]
  40494e:	jl     0x4048dc
  404950:	loopne 0x404974
  404952:	inc    eax
  404953:	in     eax,dx
  404954:	cmp    BYTE PTR ds:0x79ace5a8,0x6c
  40495b:	add    ebp,DWORD PTR [edi]
  40495d:	adc    bl,bl
  40495f:	mov    dl,0x5f
  404961:	xchg   edx,eax
  404962:	xor    al,BYTE PTR [edi+eiz*8+0x47]
  404966:	push   ss
  404967:	jo     0x4049c5
  404969:	dec    edi
  40496a:	test   eax,0x17113ed9
  40496f:	and    DWORD PTR [edx-0x2a63e5ef],esp
  404975:	sti    
  404976:	mov    eax,ds:0x4b852ecc
  40497b:	cmp    bl,BYTE PTR [eax+0x5b]
  40497e:	xchg   ecx,eax
  40497f:	push   es
  404980:	xor    ch,dl
  404982:	test   BYTE PTR ds:0xec25ead6,dl
  404988:	xor    dh,dl
  40498a:	and    esi,esi
  40498c:	jmp    0x404961
  40498e:	retf   
  40498f:	out    0x53,al
  404991:	sub    BYTE PTR [esi+0x75],al
  404994:	outs   dx,DWORD PTR ds:[esi]
  404995:	jns    0x40494e
  404997:	inc    esi
  404998:	dec    ebp
  404999:	jmp    0x648e:0x5e642a61
  4049a0:	test   BYTE PTR [ecx+0x1b24f980],ah
  4049a6:	fwait
  4049a7:	mov    al,0xfe
  4049a9:	mov    bh,0xeb
  4049ab:	arpl   WORD PTR [esi-0x7f79fb14],dx
  4049b1:	fbstp  TBYTE PTR [eax]
  4049b3:	std    
  4049b4:	ins    DWORD PTR es:[edi],dx
  4049b5:	cli    
  4049b6:	mov    es,WORD PTR [edx+eiz*4-0x2]
  4049ba:	jb     0x404976
  4049bc:	in     eax,0x61
  4049be:	pushf  
  4049bf:	(bad)  
  4049c0:	dec    cx
  4049c2:	mov    edi,ds
  4049c4:	clc    
  4049c5:	push   ebx
  4049c6:	fst    QWORD PTR [ecx-0x4db248ec]
  4049cc:	or     DWORD PTR [edx],0x5e
  4049cf:	cmp    dl,BYTE PTR [eax+0x1b]
  4049d2:	jg     0x4049b8
  4049d4:	push   0xeb91ef7e
  4049d9:	aad    0x4b
  4049db:	sbb    eax,0xa1e081c4
  4049e0:	jmp    0x9c76:0xcb9fb568
  4049e7:	ret    
  4049e8:	mov    ebp,0xd6def953
  4049ed:	pop    ss
  4049ee:	sub    DWORD PTR [ecx-0x24ea5bc4],edi
  4049f4:	xchg   ebx,eax
  4049f5:	das    
  4049f6:	dec    eax
  4049f7:	dec    esp
  4049f8:	push   esi
  4049f9:	jmp    0x5b7b:0x1a3ad511
  404a00:	xchg   BYTE PTR [ebp-0x6150b00f],ah
  404a06:	jnp    0x4049af
  404a08:	jge    0x4049c2
  404a0a:	adc    edx,esp
  404a0c:	cmp    eax,ebp
  404a0e:	push   ebx
  404a0f:	mov    ebx,0x4045d825
  404a14:	sub    BYTE PTR [ebx-0x6e14736b],bh
  404a1a:	gs xchg esp,edi
  404a1d:	and    al,0x9f
  404a1f:	inc    esp
  404a20:	call   0xfd25:0x25e5d45b
  404a27:	inc    esp
  404a28:	sub    BYTE PTR [ebx+0x4c0a486f],al
  404a2e:	xor    al,0x7a
  404a30:	pop    si
  404a32:	into   
  404a33:	outs   dx,BYTE PTR ds:[esi]
  404a34:	out    0xa8,eax
  404a36:	popaw  
  404a38:	mov    ah,0xb1
  404a3a:	(bad)  
  404a3c:	cmp    al,0x43
  404a3e:	repz test ah,0x3e
  404a42:	sub    BYTE PTR [edi-0x6],0x69
  404a46:	mov    edi,0xbff0a923
  404a4b:	add    BYTE PTR [ebp+0x34264699],al
  404a51:	fisub  DWORD PTR [edi+ebx*4-0x6]
  404a55:	cmp    cl,cl
  404a57:	mov    bh,0xf8
  404a59:	xor    eax,0xa36be4ba
  404a5e:	and    eax,0x1c120883
  404a63:	jae    0x404a28
  404a65:	sar    DWORD PTR [ebx],1
  404a67:	lock pop esi
  404a69:	out    dx,eax
  404a6a:	sub    al,0x35
  404a6c:	retf   0xbb2a
  404a6f:	outs   dx,BYTE PTR ds:[esi]
  404a70:	pop    eax
  404a71:	mov    BYTE PTR [edi+ecx*8+0x60],0xb6
  404a76:	add    edx,ebp
  404a78:	mov    eax,0xd0cac717
  404a7d:	int3   
  404a7e:	mov    dl,0xc5
  404a80:	pop    esi
  404a81:	rcl    BYTE PTR [ebx+0x1d],0xe
  404a85:	mov    al,ds:0xe3e8d003
  404a8a:	shl    DWORD PTR [ebp+edi*1-0x2a],1
  404a8e:	adc    ebx,0x10
  404a91:	pop    eax
  404a92:	mov    ebp,DWORD PTR [esi+0x66b73ae1]
  404a98:	inc    ebx
  404a99:	mov    ah,BYTE PTR [eax]
  404a9b:	push   ebx
  404a9c:	xor    eax,0x66e09dcb
  404aa1:	push   0x16
  404aa3:	push   edi
  404aa5:	rcr    BYTE PTR [edx+0x211847a1],1
  404aab:	xor    eax,0xf7d48a7d
  404ab0:	js     0x404b07
  404ab2:	adc    ch,BYTE PTR [ecx+0x4d7f6172]
  404ab8:	adc    DWORD PTR [edx-0x6f],eax
  404abb:	leave  
  404abc:	ret    0x7ccd
  404abf:	int    0xff
  404ac1:	cwde   
  404ac2:	or     BYTE PTR [ebp+0x2e],0xa
  404ac6:	and    al,0x57
  404ac8:	je     0x404ad8
  404aca:	dec    esp
  404acb:	jge    0x404b00
  404acd:	jo     0x404ac8
  404acf:	ds dec esi
  404ad1:	cmc    
  404ad2:	inc    esp
  404ad3:	out    dx,eax
  404ad4:	stos   DWORD PTR es:[edi],eax
  404ad5:	xchg   ebx,eax
  404ad6:	retf   
  404ad7:	outs   dx,BYTE PTR ds:[esi]
  404ad8:	push   cs
  404ad9:	test   DWORD PTR [ecx-0x4e],ebp
  404adc:	fs jl  0x404aaf
  404adf:	stos   DWORD PTR es:[edi],eax
  404ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ae1:	mov    dl,0xda
  404ae3:	dec    ecx
  404ae4:	repz es clc 
  404ae7:	inc    ecx
  404ae8:	xor    DWORD PTR [eax],edi
  404aea:	repnz aas 
  404aec:	arpl   WORD PTR [ebp-0x2889a69b],di
  404af2:	mov    ?,WORD PTR [ecx+0x3f]
  404af5:	jns    0x404a7f
  404af7:	retf   0x45c1
  404afa:	mov    BYTE PTR [eax-0x7aadf1cd],cl
  404b00:	mov    ebp,0xf3bbeb72
  404b05:	sahf   
  404b06:	xlat   BYTE PTR ds:[ebx]
  404b07:	sbb    al,0xdc
  404b09:	rcl    bl,cl
  404b0b:	jb     0x404b58
  404b0d:	aas    
  404b0e:	pushf  
  404b0f:	push   ss
  404b10:	and    cl,BYTE PTR [ebx-0x74]
  404b13:	shl    bl,1
  404b15:	idiv   DWORD PTR [edx-0xe]
  404b18:	sub    eax,0xe16b2f68
  404b1d:	imul   esp,DWORD PTR [edx-0x2d203b0],0xb763e4f3
  404b27:	mov    ebp,0xf2bd7a13
  404b2c:	mov    cl,0x4a
  404b2e:	pop    ss
  404b2f:	pop    esi
  404b30:	cmp    esp,DWORD PTR [ebp+0x30]
  404b33:	leave  
  404b34:	outs   dx,BYTE PTR ds:[esi]
  404b35:	out    0x40,eax
  404b37:	ret    
  404b38:	xchg   ebx,eax
  404b39:	add    edx,DWORD PTR [esi+0x76]
  404b3c:	aas    
  404b3d:	dec    edi
  404b3e:	push   0xffffffc7
  404b40:	jp     0x404b1b
  404b42:	(bad)  
  404b43:	cmp    BYTE PTR [esi],ah
  404b45:	push   edx
  404b46:	adc    BYTE PTR [ebp+0x4e],cl
  404b49:	pop    ds
  404b4a:	push   0x5f586376
  404b4f:	loop   0x404b59
  404b51:	popf   
  404b52:	pop    edx
  404b53:	stos   DWORD PTR es:[edi],eax
  404b54:	(bad)  
  404b55:	out    dx,al
  404b56:	add    esp,DWORD PTR [ebp+0x5435f9c7]
  404b5c:	pop    es
  404b5d:	pop    edx
  404b5e:	daa    
  404b5f:	test   eax,0x613482bd
  404b64:	stos   BYTE PTR es:[edi],al
  404b65:	cmc    
  404b66:	cmc    
  404b67:	jne    0x404bbc
  404b69:	nop
  404b6a:	dec    edi
  404b6b:	in     al,0x9a
  404b6d:	fld    TBYTE PTR [edi-0x2e24010b]
  404b73:	mov    esi,0x4e6950dd
  404b78:	das    
  404b79:	push   edx
  404b7a:	out    0xd8,eax
  404b7c:	(bad)  
  404b7d:	jmp    0x33f85738
  404b82:	jae    0x404be4
  404b84:	xor    DWORD PTR [edi+0x7],edx
  404b87:	push   edx
  404b88:	arpl   WORD PTR [ecx-0x9377181],dx
  404b8e:	in     al,dx
  404b8f:	add    BYTE PTR [ebx],al
  404b91:	pushf  
  404b92:	fs ret 0x73c0
  404b96:	pop    esp
  404b97:	xchg   ebp,eax
  404b98:	aam    0x61
  404b9a:	jmp    0xc81977a8
  404b9f:	add    DWORD PTR [esi+0x7c],esp
  404ba2:	ins    BYTE PTR es:[edi],dx
  404ba3:	xor    BYTE PTR [esi-0x44],cl
  404ba6:	clc    
  404ba7:	cdq    
  404ba8:	add    esi,DWORD PTR ds:0x48005730
  404bae:	out    dx,eax
  404baf:	outs   dx,BYTE PTR ds:[esi]
  404bb0:	int    0x9
  404bb2:	inc    ebp
  404bb3:	sub    BYTE PTR [edi],bh
  404bb5:	jecxz  0x404c32
  404bb7:	jg     0x404b3f
  404bb9:	push   ss
  404bba:	(bad)  
  404bbb:	aad    0x97
  404bbd:	mov    ds:0x45b2923c,eax
  404bc2:	jecxz  0x404b59
  404bc4:	cmp    ebx,DWORD PTR ds:0xaf8fe5a5
  404bca:	cwde   
  404bcb:	pushf  
  404bcc:	fwait
  404bcd:	lea    edx,[eax]
  404bcf:	test   eax,0x9d5a1621
  404bd4:	pop    es
  404bd5:	in     eax,dx
  404bd6:	call   0xd3876831
  404bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bdc:	mov    edx,edi
  404bde:	jo     0x404be4
  404be0:	mov    eax,0x71e0e041
  404be5:	and    al,0x54
  404be7:	out    0x96,al
  404be9:	mov    al,ds:0xb35ab396
  404bee:	xchg   edx,eax
  404bef:	jae    0x404ba3
  404bf1:	lods   al,BYTE PTR ds:[esi]
  404bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bf3:	and    al,0x21
  404bf5:	mov    bl,0xdc
  404bf7:	(bad)  
  404bf8:	js     0x404c0b
  404bfa:	xchg   BYTE PTR [ebx-0x2d75b507],bl
  404c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c01:	dec    edx
  404c02:	or     al,0xc9
  404c04:	sub    eax,edi
  404c06:	addr16 add eax,ebx
  404c09:	sub    eax,0xb09eb0d6
  404c0e:	mov    WORD PTR [edi-0x4d6c5802],es
  404c14:	cld    
  404c15:	(bad)  
  404c17:	xor    esi,DWORD PTR [esi]
  404c19:	nop
  404c1a:	mov    dl,0x68
  404c1c:	xor    esp,DWORD PTR [ebx+0x22ce9ff0]
  404c22:	cmp    al,0x68
  404c24:	in     al,0xe1
  404c26:	mov    eax,0xf2206e17
  404c2b:	repnz push ds
  404c2d:	sar    bh,cl
  404c2f:	(bad)  
  404c30:	push   esp
  404c31:	mov    dh,0xe
  404c33:	and    BYTE PTR [ebp+0x7b],al
  404c36:	mov    bh,0x9f
  404c38:	push   edi
  404c39:	mov    esi,0x6ab626ac
  404c3e:	rcl    dh,1
  404c40:	mov    esp,0x6063fbf6
  404c45:	imul   eax,DWORD PTR ds:0x92475b1b,0x43
  404c4c:	and    esi,DWORD PTR [edi]
  404c4e:	adc    al,0x10
  404c50:	lds    ecx,FWORD PTR [esi]
  404c52:	daa    
  404c53:	stos   DWORD PTR es:[edi],eax
  404c54:	ror    DWORD PTR [ebx-0x1df09a0a],0x89
  404c5b:	cmp    BYTE PTR [edi+eiz*1-0x11ce805b],0x5f
  404c63:	mov    esp,0xa60c92a6
  404c68:	shr    al,cl
  404c6a:	out    0xd2,eax
  404c6c:	into   
  404c6d:	ret    
  404c6e:	aas    
  404c6f:	sti    
  404c70:	and    BYTE PTR [ebx],0x56
  404c73:	ins    DWORD PTR es:[edi],dx
  404c74:	retf   0xb542
  404c77:	dec    ebp
  404c78:	cmp    esi,esi
  404c7a:	xchg   edx,eax
  404c7b:	push   edi
  404c7c:	ins    BYTE PTR es:[edi],dx
  404c7d:	mov    ebp,0x3f9b5d52
  404c82:	push   ecx
  404c83:	pop    ebp
  404c84:	or     DWORD PTR [edx+esi*2+0x709006f0],0xa934608f
  404c8f:	out    dx,eax
  404c90:	add    eax,0xa5c7abfb
  404c95:	pop    esp
  404c96:	data16 jno 0x404c64
  404c99:	mov    BYTE PTR [edi+0x49244105],ch
  404c9f:	xlat   BYTE PTR ds:[ebx]
  404ca0:	fidivr WORD PTR ds:0xfb17ab97
  404ca6:	dec    ebx
  404ca7:	inc    ebp
  404ca8:	ins    DWORD PTR es:[edi],dx
  404ca9:	push   es
  404caa:	jmp    0x770:0x8bd8af28
  404cb1:	mov    esi,0x302f7436
  404cb6:	pop    edx
  404cb7:	call   0xd9a1:0xb146dde2
  404cbe:	xor    eax,0xd5095f1b
  404cc3:	pop    ss
  404cc4:	xchg   ah,ah
  404cc6:	lahf   
  404cc7:	mov    esp,0xd224d7d
  404ccc:	add    DWORD PTR [edi],eax
  404cce:	(bad)  
  404ccf:	lahf   
  404cd0:	push   cs
  404cd1:	xchg   ebx,eax
  404cd2:	call   0x1dc2:0x29ef4283
  404cd9:	shl    bh,0xeb
  404cdc:	dec    ebx
  404cdd:	sub    ebp,edx
  404cdf:	in     al,0x32
  404ce1:	nop
  404ce2:	in     al,dx
  404ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ce4:	stos   DWORD PTR es:[edi],eax
  404ce5:	cwde   
  404ce6:	enter  0x72f2,0xc4
  404cea:	adc    eax,DWORD PTR [eax]
  404cec:	ret    0x31f2
  404cef:	ins    BYTE PTR es:[edi],dx
  404cf0:	mov    ds:0xa49b2317,al
  404cf5:	repz mov ah,0x53
  404cf8:	loope  0x404c82
  404cfa:	call   0x58d9e92e
  404cff:	imul   ecx,DWORD PTR [edi],0x55d0758d
  404d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d06:	in     eax,0xd2
  404d08:	mov    bh,BYTE PTR [ecx-0x42a7895e]
  404d0e:	pop    ebx
  404d0f:	mov    eax,0xb4046de7
  404d14:	mov    ebp,0x1c696549
  404d19:	popa   
  404d1a:	xchg   esi,eax
  404d1b:	push   es
  404d1c:	sahf   
  404d1d:	mov    dx,0x8d96
  404d21:	test   esp,ecx
  404d23:	stc    
  404d24:	mov    eax,0xc28a3601
  404d29:	faddp  st(0),st
  404d2b:	mov    ds:0xb2dbe285,eax
  404d30:	mov    ch,0xf8
  404d32:	cmp    edi,esi
  404d34:	hlt    
  404d35:	sbb    al,0xb4
  404d37:	mov    al,ds:0x7c4ea174
  404d3c:	add    esp,DWORD PTR [ebp+0x4]
  404d3f:	imul   edi,ebx,0x3
  404d42:	xchg   ecx,eax
  404d43:	dec    ebp
  404d44:	aad    0xf3
  404d46:	sbb    bl,al
  404d48:	dec    ebx
  404d49:	inc    ebp
  404d4a:	xchg   BYTE PTR [esi],al
  404d4c:	pop    ds
  404d4d:	shl    DWORD PTR [edi-0x46a5672],1
  404d53:	ins    DWORD PTR es:[edi],dx
  404d54:	mov    al,0x95
  404d56:	pushf  
  404d57:	sahf   
  404d58:	es or  eax,0x46509f97
  404d5e:	mov    esp,DWORD PTR [ecx+0x5d]
  404d61:	or     ecx,esp
  404d63:	cmp    ebx,DWORD PTR [ebp-0xe15f75]
  404d69:	inc    edx
  404d6a:	jmp    0x404d0e
  404d6c:	xchg   edx,eax
  404d6d:	mov    ah,0x8d
  404d6f:	push   cs
  404d70:	and    eax,0xe8c0e248
  404d75:	shr    edx,1
  404d77:	stc    
  404d78:	pop    ss
  404d79:	stc    
  404d7a:	repnz cmp al,0xd5
  404d7d:	push   ecx
  404d7e:	inc    ebx
  404d7f:	div    BYTE PTR [esi+0x77]
  404d82:	and    esp,0x4cf64d4
  404d88:	lods   eax,DWORD PTR ds:[esi]
  404d89:	inc    eax
  404d8a:	int3   
  404d8b:	pop    ecx
  404d8c:	xlat   BYTE PTR ds:[ebx]
  404d8d:	lahf   
  404d8e:	enter  0x24db,0x43
  404d92:	mov    ah,0xbb
  404d94:	rol    BYTE PTR [ebx+esi*8-0x768f9f67],0xce
  404d9c:	imul   ecx,ebp,0x4d45d6d7
  404da2:	dec    edi
  404da3:	mov    bl,0x43
  404da5:	or     DWORD PTR [ecx+0xb],ebp
  404da8:	gs jno 0x404e1a
  404dab:	jle    0x404d6e
  404dad:	mov    es,WORD PTR [ebx]
  404daf:	nop
  404db0:	mov    DWORD PTR [edx],ebx
  404db2:	lods   al,BYTE PTR ds:[esi]
  404db3:	call   0xf861a768
  404db8:	jl     0x404d7f
  404dba:	data16 in al,0xce
  404dbd:	inc    esp
  404dbe:	(bad)  
  404dbf:	fldenv [edx+0x68]
  404dc2:	not    BYTE PTR [ebp-0x5a7885c8]
  404dc8:	outs   dx,DWORD PTR ds:[esi]
  404dc9:	out    0xec,al
  404dcb:	push   esi
  404dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dcd:	xlat   BYTE PTR ds:[ebx]
  404dce:	mov    esp,0x5bfdcf6a
  404dd3:	(bad)
  404dd6:	fwait
  404dd7:	sub    al,BYTE PTR [edi+esi*2+0x25]
  404ddb:	dec    ecx
  404ddc:	fcomp  st(4)
  404dde:	aas    
  404ddf:	xchg   esi,eax
  404de0:	ins    BYTE PTR es:[edi],dx
  404de1:	(bad)  
  404de2:	and    cl,bh
  404de4:	push   0xb0e0af42
  404de9:	jae    0x404e2b
  404deb:	cs pop esi
  404ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dee:	jge    0x404e3d
  404df0:	ficomp DWORD PTR [ebp+eiz*4-0x20]
  404df4:	sub    eax,DWORD PTR [ebx+0x69d6ab5]
  404dfa:	out    dx,al
  404dfb:	pushf  
  404dfc:	adc    eax,0x6eec113
  404e02:	mov    ds:0x193f944f,eax
  404e07:	push   cs
  404e08:	retf   0xf38e
  404e0b:	leave  
  404e0c:	jbe    0x404d95
  404e0e:	jmp    0xa74ca6a6
  404e13:	add    ebx,ebp
  404e15:	jo     0x404dfa
  404e17:	int    0x70
  404e19:	adc    ebp,DWORD PTR [esi*8+0x3c44c5f3]
  404e20:	mov    ebp,0xf3071736
  404e25:	mov    cl,BYTE PTR [ebp+0x54]
  404e28:	push   ecx
  404e29:	loopne 0x404e30
  404e2b:	mov    eax,0xbc40d5b2
  404e30:	mov    bh,0xec
  404e32:	lahf   
  404e33:	test   edi,edi
  404e35:	xchg   DWORD PTR [edi],eax
  404e37:	(bad)  [edi-0x27]
  404e3a:	dec    esi
  404e3b:	hlt    
  404e3c:	das    
  404e3d:	sti    
  404e3e:	ret    0x8a83
  404e41:	or     ah,BYTE PTR [edi+0x1c]
  404e44:	or     BYTE PTR [eax],ah
  404e46:	push   ebp
  404e47:	ret    
  404e48:	shr    DWORD PTR [ebp-0x2c],0xbd
  404e4c:	fsubr  DWORD PTR [ecx]
  404e4e:	mov    esp,0xf781f724
  404e53:	aam    0x5e
  404e55:	pop    ecx
  404e56:	push   ebp
  404e57:	sbb    dl,BYTE PTR [ebp-0x485d21e2]
  404e5d:	jno    0x404eda
  404e5f:	adc    bh,BYTE PTR [ebx+0x14f57409]
  404e65:	mov    esp,0xfe3a28df
  404e6a:	mov    ds:0x9b7c4146,eax
  404e6f:	adc    edx,DWORD PTR [ebp+edi*4-0x549c5007]
  404e76:	pusha  
  404e77:	sub    eax,0xd2503687
  404e7c:	inc    ebx
  404e7d:	cwde   
  404e7e:	add    DWORD PTR [ecx-0x35],eax
  404e81:	sbb    cl,al
  404e83:	pop    edx
  404e84:	or     DWORD PTR [ebp-0x7d],esi
  404e87:	and    al,0x98
  404e89:	pop    ebp
  404e8a:	jge    0x404e6d
  404e8c:	dec    ebx
  404e8d:	add    bl,BYTE PTR ds:0xbdb3c13f
  404e93:	int    0xfd
  404e95:	retf   0x3790
  404e98:	sub    eax,0xb49ac005
  404e9d:	inc    edi
  404e9e:	imul   ebp,esp,0x8b011409
  404ea4:	sbb    bh,BYTE PTR [esi-0x2c379d08]
  404eaa:	xchg   esi,eax
  404eab:	in     eax,dx
  404eac:	pusha  
  404ead:	xor    al,0x44
  404eaf:	mov    al,0x92
  404eb1:	or     DWORD PTR [eax-0x1d3901f2],eax
  404eb7:	aad    0x8a
  404eb9:	mov    DWORD PTR [ebp+ebx*8-0x45eae28f],0x9f646330
  404ec4:	push   ds
  404ec5:	daa    
  404ec6:	scas   eax,DWORD PTR es:[edi]
  404ec7:	mov    esi,DWORD PTR es:[edx+0x1a]
  404ecb:	test   al,0xeb
  404ecd:	retf   
  404ece:	js     0x404f06
  404ed0:	es mov cl,0xc2
  404ed3:	hlt    
  404ed4:	mov    esp,ebp
  404ed6:	and    ch,ah
  404ed8:	pusha  
  404ed9:	inc    eax
  404eda:	pusha  
  404edb:	fnstsw WORD PTR [ecx-0x15]
  404ede:	ret    
  404edf:	mul    DWORD PTR [eax-0x75]
  404ee2:	mov    bl,0xe8
  404ee4:	int3   
  404ee5:	sahf   
  404ee6:	and    BYTE PTR [ebp-0x5d],dl
  404ee9:	mov    dh,al
  404eeb:	and    al,0xc4
  404eed:	mov    eax,0x558203f8
  404ef2:	push   edi
  404ef3:	mov    ah,0xf3
  404ef5:	pop    esi
  404ef6:	inc    ebx
  404ef7:	(bad)  
  404ef9:	mov    ch,0x77
  404efb:	push   ebp
  404efc:	inc    ebp
  404efd:	cld    
  404efe:	sti    
  404eff:	mov    ds:0xa4fe8b4f,al
  404f04:	jmp    0xae04b088
  404f09:	dec    edi
  404f0a:	test   esi,ecx
  404f0c:	in     al,dx
  404f0d:	ja     0x404f8c
  404f0f:	xchg   ebp,eax
  404f10:	lods   eax,DWORD PTR ds:[esi]
  404f11:	mov    bh,0x28
  404f13:	jle    0x404f31
  404f15:	or     DWORD PTR [ecx-0x71],eax
  404f18:	loopne 0x404f34
  404f1a:	gs jmp 0xdc26224b
  404f20:	pop    ebp
  404f21:	add    BYTE PTR [esi+0x44dfc13e],0x30
  404f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f29:	mov    ds:0x68283295,eax
  404f2e:	mov    ebp,0x60c63d6c
  404f33:	idiv   ebx
  404f35:	adc    eax,0xd218bd87
  404f3a:	out    0xca,al
  404f3c:	in     eax,0xfa
  404f3e:	neg    ecx
  404f40:	jne    0x404eca
  404f42:	adc    al,0xd2
  404f44:	ds pushw es
  404f47:	daa    
  404f48:	cmp    DWORD PTR [esp+eiz*4],0x2b
  404f4c:	push   esp
  404f4d:	xlat   BYTE PTR ds:[ebx]
  404f4e:	clc    
  404f4f:	retf   0x9829
  404f52:	mov    ah,0x7c
  404f54:	push   es
  404f55:	data16 sub BYTE PTR [ebp-0x78],dl
  404f59:	add    eax,0x3e69489e
  404f5e:	push   esi
  404f5f:	test   ah,bl
  404f61:	xchg   edx,eax
  404f62:	imul   ebp,DWORD PTR [eax-0x7c174f3b],0xffffffc1
  404f69:	inc    ebp
  404f6a:	jae    0x404fd9
  404f6c:	outs   dx,BYTE PTR ds:[esi]
  404f6d:	xchg   dh,ch
  404f6f:	test   dl,ah
  404f71:	cmp    BYTE PTR [esi],bh
  404f73:	sbb    eax,0x88d4cdd6
  404f78:	jg     0x404fc0
  404f7a:	fs ds add al,0x63
  404f7e:	pop    ecx
  404f7f:	(bad)  
  404f80:	mov    al,0x2b
  404f82:	outs   dx,BYTE PTR ds:[esi]
  404f83:	fucomip st,st(3)
  404f85:	dec    esp
  404f86:	or     BYTE PTR [ecx+ebx*1+0x62f6a231],0xe1
  404f8e:	dec    ebp
  404f8f:	xchg   esp,eax
  404f90:	call   0x2df030d6
  404f95:	pushf  
  404f96:	lods   al,BYTE PTR ds:[esi]
  404f97:	and    eax,0x572406dd
  404f9c:	repz pop edx
  404f9e:	ins    BYTE PTR es:[edi],dx
  404f9f:	sahf   
  404fa0:	mov    ds:0x7bf029cf,al
  404fa5:	xor    eax,0xb4626115
  404faa:	sbb    al,0x5e
  404fac:	hlt    
  404fad:	scas   al,BYTE PTR es:[edi]
  404fae:	loope  0x40500e
  404fb0:	and    ch,BYTE PTR [ecx-0x3f391e9a]
  404fb6:	ds push ebx
  404fb8:	fild   WORD PTR [esi]
  404fba:	or     DWORD PTR [ecx],0x61c1a73f
  404fc0:	push   eax
  404fc1:	push   ebp
  404fc2:	iret   
  404fc3:	inc    esp
  404fc4:	or     esi,ebx
  404fc6:	sbb    edi,DWORD PTR [ecx-0x34dabf48]
  404fcc:	mov    bh,BYTE PTR [esi+0x713acde7]
  404fd2:	test   eax,0x6a420b55
  404fd7:	ret    0x673e
  404fda:	jg     0x40503e
  404fdc:	cdq    
  404fdd:	add    eax,0xa9344260
  404fe2:	hlt    
  404fe3:	mov    bl,0x8f
  404fe5:	icebp  
  404fe6:	es in  eax,0x19
  404fe9:	inc    ecx
  404fea:	adc    cl,BYTE PTR [ebx+0x3a]
  404fed:	test   ebx,esp
  404fef:	test   ah,al
  404ff1:	jp     0x405036
  404ff3:	pop    ebx
  404ff4:	push   ds
  404ff5:	pop    eax
  404ff6:	retf   
  404ff7:	mov    al,ds:0x4e49a443
  404ffd:	jbe    0x404f85
  404fff:	je     0x405080
  405001:	iret   
  405002:	jl     0x404fd1
  405004:	(bad)  
  405005:	push   ss
  405006:	daa    
  405007:	aas    
  405008:	mov    bl,0x81
  40500a:	mov    eax,0x30a88429
  40500f:	outs   dx,DWORD PTR ds:[esi]
  405010:	mov    ebp,0xdb2d914a
  405015:	or     edi,DWORD PTR [ecx+0x2304027c]
  40501b:	mov    DWORD PTR [eax-0x55b5d1fb],esi
  405021:	push   0xffffffe5
  405023:	pop    esp
  405024:	mov    ds:0x60299436,al
  405029:	leave  
  40502a:	sbb    DWORD PTR [esp+ebx*4],edx
  40502d:	dec    edi
  40502e:	mov    ds:0x1e30c344,eax
  405033:	xor    al,0x2a
  405035:	push   ss
  405036:	lds    ebx,FWORD PTR [ebp-0x5d]
  405039:	mov    cl,0x41
  40503b:	adc    DWORD PTR [edi],0xffffff89
  40503e:	dec    esp
  40503f:	mov    bh,0xf6
  405041:	and    DWORD PTR [eax+0x22a2d419],eax
  405047:	add    bl,dl
  405049:	retf   0xaaea
  40504c:	cdq    
  40504d:	mov    ds:0xf8d8b3eb,al
  405052:	xlat   BYTE PTR ds:[ebx]
  405053:	into   
  405054:	dec    esp
  405055:	jmp    FWORD PTR [edi-0x75]
  405058:	dec    ebp
  405059:	mov    DWORD PTR [ebp*2-0x53bb347f],ebp
  405060:	jecxz  0x40507a
  405062:	xchg   ecx,eax
  405063:	ror    DWORD PTR [ebx+0x15036b70],cl
  405069:	xor    bl,cl
  40506b:	mov    ds:0x7209880,eax
  405070:	js     0x404ffe
  405072:	add    bl,BYTE PTR [ecx-0x2c4f7d2c]
  405078:	jg     0x405099
  40507a:	es dec ecx
  40507c:	xchg   edx,eax
  40507d:	add    cl,BYTE PTR [edi]
  40507f:	add    dh,dl
  405081:	xchg   ebp,eax
  405082:	or     edx,DWORD PTR [ebx+0x2ed3a3ee]
  405088:	cmp    eax,0xf44aff25
  40508d:	div    DWORD PTR [edi-0x377b7511]
  405093:	(bad)  
  405094:	xchg   esi,ecx
  405096:	xchg   esi,eax
  405097:	dec    ecx
  405098:	js     0x4050cc
  40509a:	inc    ebx
  40509b:	add    eax,0x10282e51
  4050a0:	pop    esp
  4050a1:	and    ch,BYTE PTR [ebx+eax*1-0x17]
  4050a5:	inc    esp
  4050a6:	jp     0x40508f
  4050a8:	jb     0x405042
  4050aa:	mov    edx,0xabb7b379
  4050af:	aam    0x91
  4050b1:	daa    
  4050b2:	iret   
  4050b3:	jmp    FWORD PTR [edx-0x25]
  4050b6:	test   al,0x45
  4050b8:	pop    esi
  4050b9:	push   ss
  4050ba:	jmp    0x177b:0x958ae7a8
  4050c1:	cmp    eax,0x5e5ffb75
  4050c6:	or     eax,0x3da4b998
  4050cb:	div    BYTE PTR [ebp+0x42]
  4050ce:	sbb    ecx,esi
  4050d0:	in     al,dx
  4050d1:	je     0x4050d5
  4050d3:	imul   edi,ecx,0x46
  4050d6:	lahf   
  4050d7:	xchg   ecx,eax
  4050d8:	jns    0x405142
  4050da:	je     0x4050d7
  4050dc:	fistp  QWORD PTR ds:0xf5b6ea00
  4050e2:	out    0xae,al
  4050e4:	call   0x2869:0x86604c0
  4050eb:	fimul  DWORD PTR [eax-0x370f1464]
  4050f1:	and    edi,esi
  4050f3:	dec    esp
  4050f4:	xor    BYTE PTR [edx+0x407800c1],dl
  4050fa:	or     eax,0xd47788c
  4050ff:	sub    DWORD PTR [ebx*1-0x674600b],edi
  405106:	out    0x3f,al
  405108:	dec    ecx
  405109:	fcom   DWORD PTR [eax-0x336ab943]
  40510f:	ins    BYTE PTR es:[edi],dx
  405110:	pop    edi
  405111:	jmp    0x29fbd7b1
  405116:	fimul  WORD PTR ds:0x200fbcd
  40511c:	xor    al,0x71
  40511e:	mov    ch,0x31
  405120:	stos   DWORD PTR es:[edi],eax
  405121:	cmp    al,0x7
  405123:	mov    al,0xbd
  405125:	mov    al,BYTE PTR [ebx]
  405127:	inc    eax
  405128:	int3   
  405129:	lods   eax,DWORD PTR ds:[esi]
  40512a:	out    0xc2,al
  40512c:	adc    BYTE PTR [esi-0x100ef36f],al
  405132:	fsub   DWORD PTR [ebp+0x6fe7d64d]
  405138:	sbb    al,0x47
  40513a:	xor    cl,BYTE PTR [edi-0x72]
  40513d:	int3   
  40513e:	call   0xf3259857
  405143:	dec    BYTE PTR [ebx+ecx*8-0x3]
  405147:	mov    dh,0x18
  405149:	jp     0x405129
  40514b:	(bad)  
  40514c:	mov    ecx,0x45b9ed0d
  405151:	daa    
  405152:	arpl   WORD PTR [edx+0x48],sp
  405155:	pop    esi
  405156:	xlat   BYTE PTR ds:[ebx]
  405157:	cli    
  405158:	cwde   
  405159:	dec    ebx
  40515a:	sbb    al,0xd1
  40515c:	rol    ebp,1
  40515e:	jmp    0x4050e3
  405160:	inc    ebx
  405161:	(bad)  
  405162:	jmp    0x2be69ca2
  405167:	ret    
  405168:	mov    esi,0x3940cb1b
  40516d:	aam    0x2e
  40516f:	mov    cl,0x96
  405171:	mov    dh,0x71
  405173:	mov    al,0x4f
  405175:	test   al,0x2c
  405177:	dec    edi
  405178:	sar    DWORD PTR [eax+0x6394868c],cl
  40517e:	out    0x16,eax
  405180:	add    esp,DWORD PTR [ebp+0x70dc0d7c]
  405186:	jo     0x4051d4
  405188:	ror    BYTE PTR [eax+eiz*1],0x96
  40518c:	mov    eax,0x60e535bc
  405191:	sbb    esp,DWORD PTR [ebx]
  405193:	cmp    DWORD PTR [esi-0x6aeda69b],esi
  405199:	or     eax,0x94505493
  40519e:	mov    esi,0xc02a21c
  4051a3:	dec    ebp
  4051a4:	mov    bl,ah
  4051a6:	add    DWORD PTR [ebx],esi
  4051a8:	popa   
  4051a9:	adc    al,0x6d
  4051ab:	xor    al,0x51
  4051ad:	fstp   st(1)
  4051af:	mul    DWORD PTR [eax]
  4051b1:	in     eax,dx
  4051b2:	or     BYTE PTR gs:[ebx],bl
  4051b5:	outs   dx,BYTE PTR ds:[esi]
  4051b6:	inc    edi
  4051b7:	out    dx,eax
  4051b8:	sbb    DWORD PTR [eax+0x24c2ea64],eax
  4051be:	pushf  
  4051bf:	dec    ecx
  4051c0:	push   esi
  4051c1:	mov    bh,0x57
  4051c3:	out    dx,eax
  4051c4:	cli    
  4051c5:	out    dx,al
  4051c6:	sbb    al,0x62
  4051c8:	mov    ecx,0xaea28911
  4051cd:	popf   
  4051ce:	stos   BYTE PTR es:[edi],al
  4051cf:	sub    eax,0x7e726a8b
  4051d4:	lods   eax,DWORD PTR ds:[esi]
  4051d5:	int    0xb2
  4051d7:	mov    edi,?
  4051d9:	int    0x7c
  4051db:	pop    esi
  4051dc:	pusha  
  4051dd:	push   edi
  4051de:	adc    bl,dh
  4051e0:	test   al,0x39
  4051e2:	pop    esi
  4051e3:	shr    BYTE PTR [edi-0x5],cl
  4051e6:	cli    
  4051e7:	or     esp,DWORD PTR [edi+ebx*4]
  4051ea:	pop    ecx
  4051eb:	push   esp
  4051ec:	dec    eax
  4051ed:	sub    dh,BYTE PTR [ecx-0x6b]
  4051f0:	jno    0x405182
  4051f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051f3:	mov    ?,WORD PTR ds:0x3e961aab
  4051f9:	rol    DWORD PTR [eax-0x28de2ef7],0x30
  405200:	popa   
  405201:	xchg   edx,eax
  405202:	shl    DWORD PTR [eax+0x5a],1
  405205:	jmp    0x5f28:0x2a4da6c9
  40520c:	test   al,0xb7
  40520e:	xor    cl,BYTE PTR [ecx+esi*8-0x4c4a9f1a]
  405215:	cld    
  405216:	and    DWORD PTR [edx+0x39],esp
  405219:	push   edi
  40521a:	fiadd  WORD PTR [esp+eax*8+0xc]
  40521e:	cmp    cl,BYTE PTR [ebx]
  405220:	addr16 push es
  405222:	dec    esi
  405223:	mov    edi,0x844675c8
  405228:	jg     0x40522e
  40522a:	inc    esp
  40522b:	test   al,0x2c
  40522d:	ins    DWORD PTR es:[edi],dx
  40522e:	push   ebp
  40522f:	and    DWORD PTR [edi+0x2de322eb],edx
  405235:	int    0xd8
  405237:	ror    esp,0xc5
  40523a:	rol    ebp,0xba
  40523d:	inc    esp
  40523e:	cdq    
  40523f:	pop    ebp
  405240:	sbb    edx,edi
  405242:	test   BYTE PTR [edi+0x6e4c56f1],0x43
  405249:	pop    ds
  40524a:	cmp    al,dl
  40524c:	push   0x81d8c3ff
  405251:	in     eax,0x88
  405253:	xlat   BYTE PTR ds:[ebx]
  405254:	jge    0x4051e0
  405256:	sti    
  405257:	push   ebp
  405258:	inc    edi
  405259:	enter  0xdc4d,0xd3
  40525d:	mov    edx,0x2abca7fb
  405262:	stos   DWORD PTR es:[edi],eax
  405263:	fidivr WORD PTR [edx+0x7b]
  405266:	adc    BYTE PTR [esi-0x7005479d],0x2c
  40526d:	adc    BYTE PTR [esi-0x502af8b3],cl
  405273:	xor    eax,DWORD PTR [ebx]
  405275:	mov    ?,WORD PTR [ebp+ecx*1-0x4a]
  405279:	(bad)  
  40527a:	mov    ecx,0xbf48987e
  40527f:	add    eax,0xff0f2e08
  405284:	(bad)  
  405285:	lock add ch,BYTE PTR [edi]
  405288:	mov    dl,0x9d
  40528a:	ret    
  40528b:	call   0x37c730bf
  405290:	das    
  405291:	and    DWORD PTR [eax+ecx*4+0x66caf945],0x89d88c39
  40529c:	(bad)  
  40529d:	out    0xaf,eax
  40529f:	hlt    
  4052a0:	mov    ebx,0x97e89332
  4052a5:	mov    eax,0xfa6b8840
  4052aa:	xchg   edi,eax
  4052ab:	xchg   ebx,eax
  4052ac:	mov    al,0x7e
  4052ae:	xchg   esp,eax
  4052af:	rcr    dh,cl
  4052b1:	mov    ebx,0xdc3167a8
  4052b6:	stos   DWORD PTR es:[edi],eax
  4052b7:	xor    BYTE PTR [eax+edi*8],ah
  4052ba:	cld    
  4052bb:	sbb    BYTE PTR [edi-0x30],0x2f
  4052bf:	jns    0x405304
  4052c1:	jmp    0x3699fae2
  4052c6:	mov    eax,ds:0xd8abfeb4
  4052cb:	push   0x26dc5320
  4052d0:	mov    ecx,0x58bed4cc
  4052d5:	mov    DWORD PTR [ebp-0x50],ebp
  4052d8:	push   esp
  4052d9:	shl    BYTE PTR [ecx],1
  4052db:	or     bh,bl
  4052dd:	xor    al,0x8e
  4052df:	dec    ebx
  4052e0:	aas    
  4052e1:	adc    eax,0x332fcf00
  4052e6:	std    
  4052e7:	sbb    BYTE PTR [eax+0x16a4ed4],0xe4
  4052ee:	add    DWORD PTR [ebx-0x2a],ebx
  4052f1:	and    ecx,ebx
  4052f3:	or     DWORD PTR [esi+0x3e],ebx
  4052f6:	and    si,WORD PTR [esi-0x2b]
  4052fa:	cs push ds
  4052fc:	aam    0x56
  4052fe:	nop
  4052ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405300:	int3   
  405301:	jg     0x4052c2
  405303:	dec    ecx
  405304:	cmc    
  405305:	cld    
  405306:	lahf   
  405307:	inc    esi
  405308:	loopne 0x40534e
  40530a:	ins    DWORD PTR es:[edi],dx
  40530b:	xchg   ebx,eax
  40530c:	mov    bh,dl
  40530e:	mov    bl,0xfa
  405310:	mov    dh,0xee
  405312:	xor    ecx,DWORD PTR [ecx+edi*8]
  405315:	fmul   QWORD PTR [edi-0x34b64a2e]
  40531b:	call   0x8a8c:0x1607fbbc
  405322:	outs   dx,BYTE PTR ds:[esi]
  405323:	mov    ds:0xd0a3f766,al
  405328:	scas   al,BYTE PTR es:[edi]
  405329:	dec    eax
  40532a:	mov    ebx,0xb299eaea
  40532f:	stos   DWORD PTR es:[edi],eax
  405330:	cwde   
  405331:	outs   dx,BYTE PTR ds:[esi]
  405332:	retf   
  405333:	rcr    DWORD PTR [ecx],cl
  405335:	pusha  
  405336:	and    BYTE PTR [edx+esi*2],0x6e
  40533a:	int    0xe2
  40533c:	in     al,0x11
  40533e:	pop    ds
  40533f:	adc    bh,bl
  405341:	std    
  405342:	into   
  405343:	jbe    0x4052fb
  405345:	xor    BYTE PTR [esp-0x63893e45],ch
  40534c:	imul   esi,DWORD PTR [eax-0x6ab88f8],0xc5728078
  405356:	gs out 0xd2,al
  405359:	xor    cl,BYTE PTR [edx+0x2d579688]
  40535f:	lock or eax,0xced6bd9b
  405365:	les    ebp,FWORD PTR [esi]
  405367:	mov    DWORD PTR [ebx-0x5696abc3],esi
  40536d:	jae    0x4053d4
  40536f:	push   edx
  405370:	(bad)  
  405371:	jmp    0xef7:0xc07e2cfb
  405378:	mov    al,0x91
  40537a:	lea    edx,[eax-0x75]
  40537d:	mul    DWORD PTR [eax]
  40537f:	dec    ebp
  405380:	adc    DWORD PTR [ebx+edi*1],ebp
  405383:	add    al,0x46
  405385:	loope  0x405388
  405387:	repnz iret 
  405389:	push   0xc64eec3
  40538e:	ret    0xab13
  405391:	push   ebp
  405392:	jmp    0x9b1:0xb96adf45
  405399:	call   0x9f5e:0x3b62adef
  4053a0:	int    0x4e
  4053a2:	and    ebx,eax
  4053a4:	fs add al,0xb5
  4053a7:	sub    al,al
  4053a9:	ja     0x4053c6
  4053ab:	pop    ebx
  4053ac:	adc    eax,0x46e7731c
  4053b1:	xchg   edi,edx
  4053b3:	fild   QWORD PTR [edx-0x41]
  4053b6:	cdq    
  4053b7:	into   
  4053b8:	test   eax,0xf43e580b
  4053bd:	add    dh,cl
  4053bf:	push   cs
  4053c0:	mov    DWORD PTR [edx-0x7ae23a49],ecx
  4053c6:	mov    ch,0x1a
  4053c8:	or     al,0xb6
  4053ca:	and    DWORD PTR [esi+0x1e],ecx
  4053cd:	test   eax,0x573a17d
  4053d2:	mov    al,ds:0xf512e4b1
  4053d7:	fld    DWORD PTR [ecx+ebp*1]
  4053da:	jmp    DWORD PTR [edi+0x24]
  4053dd:	dec    edx
  4053de:	std    
  4053df:	in     al,dx
  4053e0:	inc    edx
  4053e1:	loopne 0x405432
  4053e3:	loope  0x4053f0
  4053e5:	push   esp
  4053e6:	je     0x405435
  4053e8:	push   0x62
  4053ea:	(bad)  
  4053eb:	inc    esp
  4053ec:	adc    ecx,DWORD PTR [ecx+0x9]
  4053ef:	test   eax,0x154d3210
  4053f4:	adc    DWORD PTR [eax],eax
  4053f6:	bound  ecx,QWORD PTR [ebx-0x58]
  4053f9:	dec    esp
  4053fa:	cmp    eax,0x473eefcf
  4053ff:	fdiv   QWORD PTR ds:0x20eca71f
  405405:	add    esi,DWORD PTR [ecx]
  405407:	and    BYTE PTR [edi],dl
  405409:	scas   eax,DWORD PTR es:[edi]
  40540a:	mov    ebx,0x55f55808
  40540f:	jns    0x405452
  405411:	jbe    0x405436
  405413:	mov    dl,0x3b
  405415:	stos   BYTE PTR es:[edi],al
  405416:	scas   al,BYTE PTR es:[edi]
  405417:	repnz mov eax,DWORD PTR [ecx-0x1dcbcd96]
  40541e:	xchg   BYTE PTR [eax+0x7],cl
  405421:	scas   al,BYTE PTR es:[edi]
  405422:	(bad)  
  405423:	shr    esi,cl
  405425:	ds clc 
  405427:	pop    esp
  405428:	mov    dl,0x55
  40542a:	rol    DWORD PTR [ecx-0x25],0x9c
  40542e:	mov    esp,0x7171ca99
  405433:	mov    esp,DWORD PTR [ecx+0x618fc051]
  405439:	adc    DWORD PTR [ebx+0x3fc9d3f1],edi
  40543f:	cwde   
  405440:	nop
  405441:	xchg   esi,eax
  405442:	sbb    ebp,esp
  405444:	or     esi,ebp
  405446:	pop    esi
  405447:	mov    cl,0xe3
  405449:	inc    ebx
  40544a:	add    edi,DWORD PTR [ecx]
  40544c:	jge    0x4054c7
  40544e:	aam    0xbf
  405450:	cmc    
  405451:	aad    0xa8
  405453:	in     al,dx
  405454:	aam    0x31
  405456:	cmp    DWORD PTR [eax-0x44c51ed],edx
  40545c:	xchg   ebx,ebx
  40545e:	add    esp,esp
  405460:	imul   edx,DWORD PTR [eax-0x3c],0xffffffb9
  405464:	in     al,dx
  405465:	ds pop edi
  405467:	xchg   DWORD PTR [ebp+0x3cc9a93a],esp
  40546d:	add    eax,0x9ad43e79
  405472:	imul   ebx,ebx,0xffffffc4
  405475:	aaa    
  405476:	or     bl,BYTE PTR [edi-0x827e3c5]
  40547c:	loopne 0x405455
  40547e:	mov    edi,edx
  405480:	fadd   QWORD PTR [edi-0x5081517a]
  405486:	leave  
  405487:	xor    bl,cl
  405489:	std    
  40548a:	or     DWORD PTR [eax-0x184d50f6],ebx
  405490:	sbb    BYTE PTR [edi-0x6d],ch
  405493:	lds    esp,FWORD PTR [eax+0x28]
  405496:	cmp    eax,0x92b31950
  40549b:	retf   0x8c30
  40549e:	jl     0x4054f3
  4054a0:	or     al,0xe6
  4054a2:	popf   
  4054a3:	push   ss
  4054a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054a5:	dec    ebx
  4054a6:	in     eax,dx
  4054a7:	push   ecx
  4054a8:	push   eax
  4054a9:	out    dx,al
  4054aa:	and    eax,0xe6d486e4
  4054af:	(bad)  
  4054b0:	in     al,dx
  4054b1:	lods   al,BYTE PTR ds:[esi]
  4054b2:	hlt    
  4054b3:	ss mov ch,0x5d
  4054b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054b7:	shr    DWORD PTR [ebx],0xf
  4054ba:	push   ds
  4054bb:	mov    cl,0x2c
  4054bd:	js     0x40551a
  4054bf:	add    eax,0x98f9f616
  4054c4:	mov    ebx,0x96f4097e
  4054c9:	(bad)  [ecx-0x5a]
  4054cc:	(bad)  
  4054cd:	sub    eax,0xc786474a
  4054d2:	ins    DWORD PTR es:[edi],dx
  4054d3:	std    
  4054d4:	pop    ebx
  4054d5:	inc    esi
  4054d6:	adc    esp,DWORD PTR [eax+0x2a]
  4054d9:	fidivr WORD PTR [edi]
  4054db:	ins    DWORD PTR es:[edi],dx
  4054dc:	pusha  
  4054dd:	(bad)  
  4054de:	mov    ebx,0xe4418829
  4054e3:	lea    ecx,[esi-0x640d4012]
  4054e9:	cmp    edi,DWORD PTR [edx]
  4054eb:	mov    dl,BYTE PTR [eax]
  4054ed:	xchg   esp,eax
  4054ee:	aad    0xd9
  4054f0:	int3   
  4054f1:	stos   DWORD PTR es:[edi],eax
  4054f2:	out    0xd7,eax
  4054f4:	cdq    
  4054f5:	outs   dx,BYTE PTR ds:[esi]
  4054f6:	adc    al,0x2
  4054f8:	dec    eax
  4054f9:	iret   
  4054fa:	imul   edx,DWORD PTR [edx+edi*1],0xd745902b
  405501:	or     al,0x0
  405503:	pop    ss
  405504:	lods   al,BYTE PTR ds:[esi]
  405505:	into   
  405506:	fnsave ds:0x8c30d118
  40550c:	scas   al,BYTE PTR es:[edi]
  40550d:	mov    eax,0xc4b68127
  405512:	ror    BYTE PTR [eax-0x10e2f8b6],1
  405518:	mov    esi,0xc098a225
  40551d:	sahf   
  40551e:	stc    
  40551f:	jmp    0x380c4d5f
  405524:	lea    edi,[esi]
  405526:	call   0xcc36:0xc72feef7
  40552d:	push   es
  40552e:	stc    
  40552f:	fsub   QWORD PTR [edi]
  405531:	fcomip st,st(7)
  405533:	sar    al,1
  405535:	enter  0x1cf3,0xdb
  405539:	xor    DWORD PTR [esi],ecx
  40553b:	jb     0x405572
  40553d:	jnp    0x405560
  40553f:	mov    ds:0xc4421b86,al
  405544:	xchg   edx,eax
  405545:	retf   0xbe65
  405548:	jge    0x4054db
  40554a:	xchg   ecx,eax
  40554b:	repnz cs scas eax,DWORD PTR es:[edi]
  40554e:	push   es
  40554f:	sub    al,0x2c
  405551:	or     al,0x50
  405553:	adc    BYTE PTR [ebp+0x58],al
  405556:	loopne 0x4055c3
  405558:	jns    0x405568
  40555a:	xor    edx,DWORD PTR [edx+0x14]
  40555d:	repnz xchg ebx,eax
  40555f:	iret   
  405560:	add    al,BYTE PTR [ebx-0x33]
  405563:	push   0x57540bbc
  405568:	retf   
  405569:	push   0x5e
  40556b:	out    0x7d,al
  40556d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40556e:	xor    al,BYTE PTR [edi-0x17]
  405571:	verr   WORD PTR [ebx-0x69d1670a]
  405578:	int3   
  405579:	jg     0x40554e
  40557b:	mov    ds:0x46a0b8b1,al
  405580:	pop    eax
  405581:	out    0x79,al
  405583:	or     al,0xfa
  405585:	int3   
  405586:	sub    BYTE PTR [esi+ecx*2+0x54671a30],al
  40558d:	xor    BYTE PTR ds:0xc918b813,cl
  405593:	int3   
  405594:	mov    BYTE PTR [ecx-0x23494568],0x94
  40559b:	adc    eax,0x286952a7
  4055a0:	popf   
  4055a1:	xchg   ebx,eax
  4055a2:	mov    dl,0x4c
  4055a4:	sbb    eax,0xa2e6e44a
  4055a9:	lods   al,BYTE PTR ds:[esi]
  4055aa:	adc    BYTE PTR [edx*4-0x15e2d1fc],al
  4055b1:	mov    DWORD PTR [ebp-0x34],0x2ee15d0
  4055b8:	mov    al,ds:0xafa20bc0
  4055bd:	retf   
  4055be:	sub    DWORD PTR [esp+ecx*2+0x2],ecx
  4055c2:	mov    eax,0xe593fd6c
  4055c7:	(bad)  
  4055c8:	sub    ch,BYTE PTR [ebp-0xb]
  4055cb:	jg     0x405562
  4055cd:	popa   
  4055ce:	sbb    BYTE PTR [esi-0x616446a8],0x73
  4055d5:	pop    ebp
  4055d6:	add    esi,ebx
  4055d8:	push   edx
  4055d9:	cmp    ah,BYTE PTR [eax-0x79]
  4055dc:	loop   0x40560e
  4055de:	jmp    0x69e92f87
  4055e3:	leave  
  4055e4:	icebp  
  4055e5:	pop    ds
  4055e6:	add    BYTE PTR [ebx+0xe9c9b51],ch
  4055ec:	jno    0x405644
  4055ee:	jge    0x4055f0
  4055f0:	aaa    
  4055f1:	sub    DWORD PTR [edx-0x70],eax
  4055f4:	data16 neg BYTE PTR [eax+0x22]
  4055f8:	ror    DWORD PTR [ebp-0x23],0x5f
  4055fc:	ficom  WORD PTR [eax+0x779469dc]
  405602:	xchg   BYTE PTR [bx+si],dl
  405605:	sub    al,0x7e
  405607:	in     eax,0x3b
  405609:	jg     0x405599
  40560b:	outs   dx,DWORD PTR ds:[esi]
  40560c:	imul   ebx,DWORD PTR [eax-0x6615f883],0x20
  405613:	js     0x405642
  405615:	cmp    DWORD PTR [esi+ebp*1],esi
  405618:	into   
  405619:	mov    esi,0xdb359c9
  40561e:	sub    al,0xd
  405620:	xchg   edi,eax
  405621:	fcomp  DWORD PTR [bp+si]
  405624:	aaa    
  405625:	mov    edx,0x6c867d4
  40562a:	xchg   esi,eax
  40562b:	lahf   
  40562c:	sub    BYTE PTR [ebp+0x3c914614],cl
  405632:	outs   dx,DWORD PTR ds:[esi]
  405633:	push   0x73
  405635:	add    al,0x41
  405637:	or     esp,DWORD PTR [ebx+0x19]
  40563a:	pop    ds
  40563b:	pop    ebx
  40563c:	pusha  
  40563d:	push   esp
  40563e:	lahf   
  40563f:	pop    edx
  405640:	fiadd  DWORD PTR [edi+0x41]
  405643:	push   ebx
  405644:	cmp    DWORD PTR [edi],edi
  405646:	int3   
  405647:	cwde   
  405648:	mov    ebp,0x5bd7d243
  40564d:	pop    ds
  40564e:	push   esi
  40564f:	adc    ebp,DWORD PTR [ebx+edi*4]
  405652:	xlat   BYTE PTR ds:[ebx]
  405653:	daa    
  405654:	sbb    edi,DWORD PTR [edx-0x1fbc5555]
  40565a:	js     0xbf7e11e8
  405660:	mov    eax,ds:0x886778f8
  405665:	repnz mov edi,eax
  405668:	(bad)  [edx]
  40566a:	std    
  40566b:	pop    ebp
  40566c:	adc    al,0xa3
  40566e:	cmp    al,ah
  405670:	ret    0x8aa8
  405673:	adc    ecx,DWORD PTR [ecx]
  405675:	push   ebx
  405676:	cmc    
  405677:	mov    esp,0x61b59df6
  40567c:	inc    ecx
  40567d:	dec    esi
  40567e:	mov    bl,0xc0
  405680:	push   0xe33b3d36
  405685:	mov    BYTE PTR [edx-0x1d05c00b],al
  40568b:	sbb    al,0xec
  40568d:	push   esp
  40568e:	fstp   QWORD PTR ds:0x46423bc
  405694:	sbb    esi,DWORD PTR [ecx+0x43184ecd]
  40569a:	out    dx,al
  40569b:	lock jb 0x405625
  40569e:	inc    eax
  40569f:	xor    ch,BYTE PTR [edx+0x49]
  4056a2:	adc    DWORD PTR [eax-0x74cc3c89],ebx
  4056a8:	cmp    edx,eax
  4056aa:	in     eax,0xcb
  4056ac:	adc    eax,0x1e7011cd
  4056b1:	push   ss
  4056b2:	jae    0x405665
  4056b4:	lea    ebx,[ebp-0x69]
  4056b7:	lods   al,BYTE PTR ds:[esi]
  4056b8:	addr16 fwait
  4056ba:	pop    edi
  4056bb:	sti    
  4056bc:	daa    
  4056bd:	adc    eax,0xf5b92a69
  4056c2:	stc    
  4056c3:	call   0x6b43410a
  4056c8:	or     eax,0x82ae5248
  4056cd:	test   DWORD PTR [ecx-0x80],0x4e3da9ee
  4056d4:	jmp    0x8f781102
  4056d9:	mov    ah,0x83
  4056db:	fld    QWORD PTR [edx]
  4056dd:	or     BYTE PTR [edi-0x1c9007e8],dh
  4056e3:	(bad)  
  4056e4:	dec    eax
  4056e5:	jns    0x4056fe
  4056e7:	jno    0x4056b2
  4056e9:	int3   
  4056ea:	hlt    
  4056eb:	rcr    BYTE PTR [eax+0x5d],0x87
  4056ef:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4056f1:	mov    ebx,esi
  4056f3:	stc    
  4056f4:	into   
  4056f5:	addr16 pop ecx
  4056f7:	pop    ebp
  4056f8:	sbb    al,0xb
  4056fa:	adc    ebp,ebp
  4056fc:	pop    esi
  4056fd:	jb     0x40567f
  4056ff:	(bad)  [edi]
  405701:	pop    ebx
  405702:	fisttp QWORD PTR [eax+edi*4-0x262c08ac]
  405709:	pop    ds
  40570a:	xor    al,0x8
  40570c:	int    0xdb
  40570e:	mov    eax,ds:0x8463af6d
  405713:	stos   BYTE PTR es:[edi],al
  405714:	jns    0x40569c
  405716:	inc    edi
  405717:	repnz or bl,BYTE PTR [esi-0x5]
  40571b:	fsubr  DWORD PTR [ecx-0x35]
  40571e:	repz sbb BYTE PTR fs:[ecx-0x7c],dh
  405723:	jns    0x40574d
  405725:	popa   
  405726:	fcmovne st,st(6)
  405728:	xchg   edi,eax
  405729:	scas   eax,DWORD PTR es:[edi]
  40572a:	mov    fs,WORD PTR [bx+di]
  40572d:	int    0x66
  40572f:	cmp    DWORD PTR [ebx],ebp
  405731:	das    
  405732:	mov    DWORD PTR [eax-0x495747e0],eax
  405738:	adc    al,0x10
  40573a:	scas   al,BYTE PTR es:[edi]
  40573b:	mov    edx,0x82f66937
  405740:	pop    esi
  405741:	popa   
  405742:	inc    ecx
  405743:	jb     0x405770
  405745:	pusha  
  405746:	leave  
  405747:	into   
  405748:	bound  edi,QWORD PTR [edx+0x3d]
  40574b:	pop    ebx
  40574c:	jns    0x405740
  40574e:	pop    ecx
  40574f:	mov    al,0xcd
  405751:	inc    edi
  405752:	sbb    esp,DWORD PTR [edi+0x1f98a5a4]
  405758:	xchg   BYTE PTR [ecx-0x2ce73d8c],dh
  40575e:	jmp    0x405716
  405760:	loop   0x40572d
  405762:	mov    ebp,0xd9cdb327
  405767:	ret    
  405768:	call   0xf6bbc76f
  40576d:	(bad)  
  40576e:	push   edx
  40576f:	xchg   edi,eax
  405770:	cmc    
  405771:	scas   eax,DWORD PTR es:[edi]
  405772:	scas   al,BYTE PTR es:[edi]
  405773:	mov    edx,0x14ede6d0
  405778:	mov    edi,0x831c20d1
  40577e:	fidiv  WORD PTR [ecx+0x66]
  405781:	imul   edx,DWORD PTR [ebp+0xc],0xffffffc7
  405785:	xchg   esi,eax
  405786:	sbb    ch,BYTE PTR [edi+0x17]
  405789:	adc    eax,0xc56c89ee
  40578e:	and    al,dh
  405790:	pop    ebp
  405791:	push   0x9ac7f335
  405796:	xchg   edx,eax
  405797:	call   0x90e1:0x7f37115f
  40579e:	xchg   ecx,eax
  40579f:	mov    cl,0xcd
  4057a1:	add    esp,DWORD PTR [ecx-0x630b11ca]
  4057a7:	add    bh,BYTE PTR [esi-0x55b07416]
  4057ad:	repnz lock push esp
  4057b0:	jns    0x4057ad
  4057b2:	jns    0x405755
  4057b4:	inc    eax
  4057b5:	fadd   QWORD PTR [edx-0x7d]
  4057b8:	push   edi
  4057b9:	neg    DWORD PTR [esi+0x7d]
  4057bc:	test   DWORD PTR [ebx],edi
  4057be:	fwait
  4057bf:	cmp    BYTE PTR [eax+edi*8+0x21be3922],cl
  4057c6:	inc    ebp
  4057c7:	out    dx,eax
  4057c8:	and    al,0xe4
  4057ca:	mov    edi,0x1080d3b9
  4057cf:	pop    es
  4057d0:	xor    al,0x5d
  4057d2:	into   
  4057d3:	fcom   QWORD PTR [esi]
  4057d5:	cmp    ebx,DWORD PTR [eax+0x683fcd53]
  4057db:	int    0x94
  4057dd:	inc    ebx
  4057de:	enter  0x31a9,0x43
  4057e2:	ins    BYTE PTR es:[edi],dx
  4057e3:	cwde   
  4057e4:	aas    
  4057e5:	push   es
  4057e6:	add    bh,BYTE PTR [ebp-0x585d2569]
  4057ec:	in     eax,0x99
  4057ee:	xchg   edi,eax
  4057ef:	adc    al,0x6d
  4057f1:	and    BYTE PTR [eax-0x7a],cl
  4057f4:	or     ch,BYTE PTR [edx+esi*2]
  4057f7:	inc    ebx
  4057f8:	mov    bl,BYTE PTR [edi+0x38]
  4057fb:	xchg   esp,eax
  4057fc:	int    0x4e
  4057fe:	les    eax,FWORD PTR [esi]
  405800:	or     eax,0x7546f622
  405805:	fstp   QWORD PTR [esi]
  405807:	xor    al,0xc3
  405809:	inc    ecx
  40580a:	hlt    
  40580b:	pop    edx
  40580c:	pushf  
  40580d:	scas   al,BYTE PTR es:[edi]
  40580e:	sub    DWORD PTR [ebx-0x5bae78e4],eax
  405814:	ror    BYTE PTR [ebx+0x25],1
  405817:	adc    ebp,ebx
  405819:	xlat   BYTE PTR ds:[ebx]
  40581a:	sahf   
  40581b:	test   DWORD PTR [esi+0x10e9084],edx
  405821:	mov    edx,0x1e8221cf
  405826:	in     eax,dx
  405827:	jle    0x40589d
  405829:	ret    
  40582a:	test   al,cl
  40582c:	adc    BYTE PTR [edx-0x23],bh
  40582f:	imul   ebx,DWORD PTR [ebp+0x67],0x8622be20
  405836:	push   ds
  405837:	push   0xdb9db438
  40583c:	test   DWORD PTR [esi+0x517f9851],edi
  405842:	mov    al,ds:0x9a75a16c
  405847:	popa   
  405848:	jmp    0x405813
  40584a:	js     0x4057e2
  40584c:	call   0xad97:0x8fc08e46
  405853:	xchg   BYTE PTR [ebx+0x4d0352b5],dh
  405859:	mov    dl,0x3
  40585b:	mov    edx,0xe4583f35
  405860:	push   esi
  405861:	cld    
  405862:	mov    cl,0xcd
  405864:	(bad)  
  405865:	in     eax,dx
  405866:	pushf  
  405867:	mov    esp,0x60efba80
  40586c:	xor    bl,BYTE PTR [ecx+edx*2+0x42]
  405870:	or     esi,DWORD PTR [eax]
  405872:	inc    esp
  405873:	xchg   ebx,eax
  405874:	in     al,dx
  405875:	imul   ebp,DWORD PTR [eax-0x1c],0xc900949e
  40587c:	loope  0x40581c
  40587e:	aad    0xa5
  405880:	adc    esp,DWORD PTR [eax+eax*1-0x12]
  405884:	cdq    
  405885:	sub    eax,0xba6536c5
  40588a:	imul   edi,DWORD PTR [eax+0x1e],0xf6226956
  405891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405892:	pusha  
  405893:	fiadd  DWORD PTR [ebx+0x2bf3ccad]
  405899:	test   BYTE PTR [ebp+edi*1+0x4766e53b],dl
  4058a0:	pop    ebx
  4058a1:	xor    DWORD PTR [esi+0x392699b5],edi
  4058a7:	repnz pop ss
  4058a9:	adc    ch,BYTE PTR [ebx]
  4058ab:	jo     0x4058d1
  4058ad:	rcr    BYTE PTR [edi+0x1a],0xfe
  4058b1:	pop    ds
  4058b2:	(bad)  
  4058b3:	aas    
  4058b4:	inc    edi
  4058b5:	mov    esi,0xd979a3f0
  4058ba:	cmp    bh,BYTE PTR [eax+0x7a7d4567]
  4058c0:	arpl   WORD PTR [ecx+edi*8-0x19],ax
  4058c4:	jno    0x40591a
  4058c6:	into   
  4058c7:	enter  0x169,0x8d
  4058cb:	sar    DWORD PTR [edx-0x6ab844d7],cl
  4058d1:	adc    eax,0xa70973c
  4058d6:	pop    ss
  4058d7:	pop    ebp
  4058d8:	mov    bh,0x4b
  4058da:	shr    DWORD PTR [ebp+0x11],0x51
  4058de:	push   edi
  4058df:	xchg   edx,eax
  4058e0:	outs   dx,BYTE PTR ds:[esi]
  4058e1:	ror    edx,0x0
  4058e4:	in     eax,dx
  4058e5:	hlt    
  4058e6:	addr16 cmc 
  4058e8:	push   ss
  4058e9:	ficomp DWORD PTR [edx+0x462f6647]
  4058ef:	cmp    al,0x69
  4058f1:	mov    bh,0x7c
  4058f3:	dec    eax
  4058f4:	daa    
  4058f5:	sbb    BYTE PTR [edi],cl
  4058f7:	retf   0xe0
  4058fa:	(bad)  
  4058fc:	fild   WORD PTR [esi-0x15c90d87]
  405902:	push   esi
  405903:	push   0xa19dc941
  405908:	jmp    0xf32d:0xf1f64bbc
  40590f:	stc    
  405910:	sti    
  405911:	loopne 0x4058e4
  405913:	and    cl,BYTE PTR fs:[edi+0x1c6dabf6]
  40591a:	gs push 0xffffff96
  40591d:	jge    0x40599e
  40591f:	std    
  405920:	bound  edi,QWORD PTR [edi]
  405922:	sahf   
  405923:	test   BYTE PTR [ebp-0x7c],dh
  405926:	cs aaa 
  405928:	dec    eax
  405929:	fyl2x  
  40592b:	sub    al,0x64
  40592d:	cli    
  40592e:	jno    0xfa3fa379
  405934:	daa    
  405935:	xchg   esp,eax
  405936:	adc    DWORD PTR [eax+0x401f57b4],ebp
  40593c:	ss test al,0x65
  40593f:	dec    eax
  405940:	in     eax,0x99
  405942:	push   DWORD PTR [eax+0x2]
  405945:	jae    0x4059ac
  405947:	std    
  405948:	or     al,0x73
  40594a:	mov    ecx,0xf716b94f
  40594f:	imul   ebx,DWORD PTR [edx+0x67],0x1a
  405953:	ficomp WORD PTR [edx+0x34]
  405956:	add    eax,0xfe048718
  40595b:	aad    0xef
  40595d:	adc    ch,BYTE PTR [ebx]
  40595f:	inc    esp
  405960:	mov    ch,0x7a
  405962:	sub    dh,BYTE PTR [edi+0x35111e23]
  405968:	mov    ah,0x70
  40596a:	mov    al,ds:0xe546886f
  40596f:	mov    WORD PTR [esi+ebx*8+0x54607eb7],ss
  405976:	xchg   ecx,eax
  405977:	jne    0x405982
  405979:	add    DWORD PTR [ecx],ecx
  40597b:	outs   dx,BYTE PTR ds:[esi]
  40597d:	fsubr  QWORD PTR [edx]
  40597f:	daa    
  405980:	push   ss
  405981:	lods   eax,DWORD PTR ds:[esi]
  405982:	mov    ds:0xe784fb61,al
  405987:	jnp    0x40590c
  405989:	push   edi
  40598a:	(bad)  
  40598b:	js     0x4059d0
  40598d:	inc    ebx
  40598e:	ss daa 
  405990:	ss pop ecx
  405992:	div    BYTE PTR [esi-0x561cde04]
  405998:	fdivr  DWORD PTR [eax-0xd0d36d9]
  40599e:	in     eax,0xc8
  4059a0:	and    bh,BYTE PTR [eax+0x62f5839a]
  4059a6:	call   DWORD PTR [eax]
  4059a8:	add    ebp,ebx
  4059aa:	shl    DWORD PTR [eax],0x47
  4059ad:	xchg   esi,eax
  4059ae:	cli    
  4059af:	(bad)  
  4059b0:	shl    DWORD PTR [edi-0x7917e4da],1
  4059b6:	(bad)  
  4059b8:	xchg   edx,eax
  4059b9:	std    
  4059ba:	scas   eax,DWORD PTR es:[edi]
  4059bb:	pop    esi
  4059bc:	cmc    
  4059bd:	out    dx,eax
  4059be:	adc    al,0x7e
  4059c0:	mov    ebx,0xe4a7d206
  4059c5:	ja     0x405a3f
  4059c7:	xor    eax,0x59f4e8bb
  4059cc:	push   ds
  4059cd:	push   ss
  4059ce:	pusha  
  4059cf:	stos   DWORD PTR es:[edi],eax
  4059d0:	cld    
  4059d1:	outs   dx,BYTE PTR ds:[esi]
  4059d2:	(bad)  
  4059d3:	(bad)  [edi]
  4059d5:	jmp    0x3ce7:0xacd60304
  4059dc:	fldln2 
  4059de:	mov    edx,0x274fe647
  4059e3:	rol    DWORD PTR [ecx-0x15],cl
  4059e6:	in     eax,dx
  4059e7:	sub    DWORD PTR [ebx],ecx
  4059e9:	cmc    
  4059ea:	(bad)  
  4059eb:	scas   al,BYTE PTR es:[edi]
  4059ec:	cmc    
  4059ed:	lods   al,BYTE PTR ds:[esi]
  4059ee:	pop    es
  4059ef:	cdq    
  4059f0:	pop    ss
  4059f1:	not    DWORD PTR [ebx+0x5c01d8]
  4059f7:	sahf   
  4059f8:	sbb    ecx,DWORD PTR [edx+0x3f]
  4059fb:	jmp    0x99febd28
  405a00:	push   esp
  405a01:	mov    ds:0xa841ba8a,eax
  405a06:	sbb    ecx,ebp
  405a08:	and    bh,al
  405a0a:	cmp    DWORD PTR [eax+0x1e5e89ba],0x576ce59f
  405a14:	mov    al,ds:0xabb81627
  405a19:	shl    DWORD PTR [esi-0x1d],1
  405a1c:	stos   BYTE PTR es:[edi],al
  405a1d:	or     ebp,DWORD PTR [edi-0x325c5da3]
  405a23:	repz dec esp
  405a25:	mov    esi,0xb3d5f026
  405a2a:	(bad)  
  405a2b:	jl     0x405a0d
  405a2d:	imul   eax,DWORD PTR [eax-0x5762755d],0x7711f268
  405a37:	gs jle 0x405a1f
  405a3a:	inc    edi
  405a3b:	cmp    al,0x17
  405a3d:	dec    ecx
  405a3e:	jnp    0x405a50
  405a40:	and    DWORD PTR [ecx+0x5d],edx
  405a43:	xchg   ebp,eax
  405a44:	lahf   
  405a45:	fcom   QWORD PTR [ebp-0x67]
  405a48:	loope  0x4059db
  405a4a:	xor    BYTE PTR [eax+ebp*8-0x7724d54d],dl
  405a51:	fisttp QWORD PTR [ebp+0x5e]
  405a54:	jne    0x405a4e
  405a56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a57:	and    al,al
  405a59:	mov    WORD PTR [ebx+ebx*1],fs
  405a5c:	fsubr  st,st(7)
  405a5e:	jo     0x405a30
  405a60:	xor    DWORD PTR ds:0xa0b0504a,0x0
  405a67:	and    al,0x1e
  405a69:	xchg   esp,eax
  405a6a:	jno    0x405a2c
  405a6c:	cs cmp eax,0x5fd88385
  405a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a73:	xor    DWORD PTR [ecx+0x21651632],0x4e
  405a7a:	mov    ch,ch
  405a7c:	les    eax,FWORD PTR [edx+0x5ee2853e]
  405a82:	xor    DWORD PTR [eax],0x71
  405a85:	push   0x2f4af9ac
  405a8a:	call   0xc4f7c996
  405a8f:	xchg   edx,eax
  405a90:	sahf   
  405a91:	adc    al,0x1f
  405a93:	outs   dx,BYTE PTR ds:[esi]
  405a94:	fst    DWORD PTR ds:0xa8a7d36e
  405a9a:	out    0xef,al
  405a9c:	ss cmc 
  405a9e:	(bad)  
  405a9f:	fadd   QWORD PTR [ecx]
  405aa1:	push   cs
  405aa2:	loopne 0x405a97
  405aa4:	ss addr16 and al,0x8d
  405aa8:	xor    eax,DWORD PTR [eax+ebp*8]
  405aab:	jne    0x405aff
  405aad:	jo     0x405acf
  405aaf:	iret   
  405ab0:	dec    ecx
  405ab1:	pop    es
  405ab2:	and    al,BYTE PTR [edx+0x3a]
  405ab5:	ss pop ecx
  405ab7:	(bad)  
  405ab8:	fnstsw WORD PTR [eax-0x32e7d622]
  405abe:	add    eax,0xe49d2948
  405ac3:	fimul  WORD PTR [esp+ebp*8]
  405ac6:	xlat   BYTE PTR ds:[ebx]
  405ac7:	push   0x82863774
  405acc:	push   edx
  405acd:	cmp    BYTE PTR [ebx-0x47],dl
  405ad0:	xor    DWORD PTR [eax],ecx
  405ad2:	jle    0x405a67
  405ad4:	test   eax,0x700b1796
  405ad9:	pop    ds
  405ada:	(bad)  
  405adb:	cld    
  405adc:	cld    
  405add:	test   DWORD PTR [ebx-0x3a],0x8f3fb6e0
  405ae4:	repz or dl,bh
  405ae7:	pop    edx
  405ae8:	sbb    DWORD PTR [esi],ebx
  405aea:	mov    dl,0xdf
  405aec:	fs cmp al,0x6c
  405aef:	pop    ds
  405af0:	mov    al,0x96
  405af2:	push   ss
  405af3:	mov    ebx,0xeee41e7f
  405af8:	dec    ebp
  405af9:	pop    ecx
  405afa:	scas   eax,DWORD PTR es:[edi]
  405afb:	jno    0x405adf
  405afd:	leave  
  405afe:	imul   eax,DWORD PTR [esi-0x334f386a],0x8f9f6ac4
  405b08:	hlt    
  405b09:	mov    dl,dl
  405b0b:	adc    edi,DWORD PTR [edx]
  405b0d:	js     0x405af6
  405b0f:	rcr    DWORD PTR [edi+0xb],cl
  405b12:	sub    esi,DWORD PTR [edx+0x1c]
  405b15:	outs   dx,DWORD PTR ds:[esi]
  405b16:	pop    esp
  405b17:	idiv   DWORD PTR [ebx+0x1501e9c8]
  405b1d:	push   es
  405b1e:	push   esi
  405b1f:	sti    
  405b20:	xor    DWORD PTR ds:0x9bf79e74,esp
  405b26:	rcr    BYTE PTR [eax-0x2c8d9564],0xb9
  405b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b2e:	ror    DWORD PTR ds:0x6670f25e,cl
  405b34:	addr16 test esp,esi
  405b37:	mov    al,0x48
  405b39:	xor    eax,0x39e9d72f
  405b3e:	and    ch,0x59
  405b41:	or     esp,DWORD PTR [ebx]
  405b43:	xchg   ebx,eax
  405b44:	inc    ebx
  405b45:	ins    BYTE PTR es:[edi],dx
  405b46:	fisttp DWORD PTR [eax+0x6c]
  405b49:	frstor [eax+0x26]
  405b4c:	inc    edi
  405b4d:	ins    DWORD PTR es:[edi],dx
  405b4e:	pusha  
  405b4f:	mov    bl,0xdf
  405b51:	sbb    ecx,DWORD PTR [esi-0x719a7e7f]
  405b57:	popa   
  405b58:	dec    edx
  405b59:	outs   dx,BYTE PTR ds:[esi]
  405b5a:	fbstp  TBYTE PTR [ecx*8+0x5eca5b98]
  405b61:	mov    BYTE PTR [edx],ch
  405b63:	mov    edx,0x6aa6a1fd
  405b68:	scas   al,BYTE PTR es:[edi]
  405b69:	and    DWORD PTR [esi-0x2029d621],ebx
  405b6f:	mov    eax,0xdd61de7e
  405b74:	jns    0x405b19
  405b76:	stc    
  405b77:	test   BYTE PTR es:[eax+0x1f623167],al
  405b7e:	xchg   ebp,eax
  405b7f:	mov    edi,0xd45908f
  405b84:	jle    0x405b59
  405b86:	sahf   
  405b87:	xchg   edi,eax
  405b88:	cld    
  405b89:	test   eax,0x74e86c14
  405b8e:	out    dx,al
  405b8f:	fwait
  405b90:	lock or ebx,esp
  405b93:	(bad)  
  405b94:	sahf   
  405b95:	out    dx,al
  405b96:	mov    ebx,0xdd0923c7
  405b9b:	shl    DWORD PTR [ecx-0x3a07984e],0xb2
  405ba2:	sbb    edx,DWORD PTR [edx-0x2e0bda81]
  405ba8:	stos   BYTE PTR es:[edi],al
  405ba9:	rcl    DWORD PTR [edx],cl
  405bab:	jbe    0x405bb1
  405bad:	jno    0x405bbd
  405baf:	fsubr  st,st(0)
  405bb1:	and    al,0x2
  405bb3:	push   0xc377286d
  405bb8:	aaa    
  405bb9:	gs lock mov cl,0xd6
  405bbd:	mov    ds:0x5a83dbf8,al
  405bc2:	ficom  DWORD PTR [ebp+eiz*4+0x3e1826e7]
  405bc9:	inc    ebx
  405bca:	mov    ds:0x3cf1dbfa,al
  405bcf:	and    bl,ch
  405bd1:	mov    ecx,0x7d08fc6f
  405bd6:	(bad)  
  405bd7:	or     eax,0x6837dce0
  405bdc:	lods   eax,DWORD PTR ds:[esi]
  405bdd:	dec    ecx
  405bde:	pop    esi
  405bdf:	cmp    bh,BYTE PTR [edx]
  405be1:	xchg   ebp,eax
  405be2:	ret    0xebc3
  405be5:	dec    ebp
  405be6:	inc    esi
  405be7:	inc    ebp
  405be8:	into   
  405be9:	xor    al,0xe8
  405beb:	push   ebp
  405bec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bed:	(bad)  ds:0x75f4ae0
  405bf3:	mov    eax,0xef534ae6
  405bf8:	push   ds
  405bf9:	loop   0x405c47
  405bfb:	pop    ebp
  405bfc:	xlat   BYTE PTR ds:[ebx]
  405bfd:	icebp  
  405bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bff:	jecxz  0x405c7d
  405c01:	jae    0x405b8b
  405c03:	lds    edx,FWORD PTR [ecx]
  405c05:	fidiv  WORD PTR [esi]
  405c07:	jmp    0x78c8:0x9bfc50f8
  405c0e:	or     ch,0x45
  405c11:	dec    edi
  405c12:	das    
  405c13:	inc    edi
  405c14:	retf   0xdd0e
  405c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c18:	iret   
  405c19:	push   edx
  405c1a:	xchg   ecx,eax
  405c1b:	call   0x89466036
  405c20:	out    dx,eax
  405c21:	or     dl,BYTE PTR [ebx]
  405c23:	pop    eax
  405c24:	jg     0x405c00
  405c26:	cmp    DWORD PTR [ecx],ebx
  405c28:	pop    es
  405c29:	adc    BYTE PTR [ebp-0x6d],bh
  405c2c:	xchg   esp,eax
  405c2d:	mov    fs,WORD PTR [edx+0x37]
  405c30:	sbb    DWORD PTR [edx],esi
  405c32:	push   es
  405c33:	sub    esi,DWORD PTR [edx+0x65]
  405c36:	(bad)  
  405c38:	or     DWORD PTR [ebp+0x32],edi
  405c3b:	sub    bl,cl
  405c3d:	scas   eax,DWORD PTR es:[edi]
  405c3e:	mov    cl,0xd2
  405c40:	lea    edx,[edx]
  405c42:	bound  ecx,QWORD PTR [ebx-0x4dd50bd7]
  405c48:	das    
  405c49:	shl    DWORD PTR [ebp-0x283b931a],cl
  405c4f:	lods   al,BYTE PTR ds:[esi]
  405c50:	inc    esi
  405c51:	inc    esp
  405c52:	fimul  WORD PTR [edi]
  405c54:	nop
  405c55:	pop    esi
  405c56:	add    DWORD PTR [eax-0x70],esp
  405c59:	sub    dh,BYTE PTR [eax]
  405c5b:	stos   DWORD PTR es:[edi],eax
  405c5c:	aad    0x33
  405c5e:	leave  
  405c5f:	push   edx
  405c60:	mov    cl,0xee
  405c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c63:	inc    ebx
  405c64:	fild   QWORD PTR [ebp+0x5e]
  405c67:	pop    ebx
  405c68:	retf   0xe3ca
  405c6b:	lods   eax,DWORD PTR ds:[esi]
  405c6c:	repnz (bad) 
  405c6e:	sub    DWORD PTR [esi+ebx*8-0x9d8e999],esi
  405c75:	jb     0x405caf
  405c77:	pop    ecx
  405c78:	fdivr  DWORD PTR [ebx+eiz*2-0x13]
  405c7c:	push   0x4236bf3b
  405c81:	cs int3 
  405c83:	push   edi
  405c84:	cmp    eax,0x9eb75b1f
  405c89:	arpl   WORD PTR [ebp+0x4f],cx
  405c8c:	das    
  405c8d:	sub    DWORD PTR [edi+0x7c],0x0
  405c91:	(bad)  
  405c92:	push   edi
  405c93:	xor    cl,cl
  405c95:	pop    ecx
  405c96:	jnp    0x405ce6
  405c98:	jae    0x405d13
  405c9a:	sbb    DWORD PTR [edi+ebp*4],0x7
  405c9e:	push   es
  405c9f:	aas    
  405ca0:	sub    DWORD PTR [ebp+eax*4+0x721ad12b],esp
  405ca7:	shrd   DWORD PTR [ebx+0x1f],esi,0x9e
  405cac:	jbe    0x405ce7
  405cae:	mov    WORD PTR ds:0xd4afabc9,?
  405cb4:	out    0xba,al
  405cb6:	aaa    
  405cb7:	xchg   ebp,eax
  405cb8:	mov    DWORD PTR [ebx-0x3b],esp
  405cbb:	test   DWORD PTR ds:0xeb4e732b,edi
  405cc1:	xor    eax,0xa60d8d3e
  405cc6:	ja     0x405c8b
  405cc8:	or     eax,0x2d71c474
  405ccd:	adc    edi,DWORD PTR [edi+0x34]
  405cd0:	pop    es
  405cd1:	rol    DWORD PTR [eax+0xd698292],cl
  405cd7:	shl    BYTE PTR [ecx],0x26
  405cda:	xchg   BYTE PTR [ebx+0x216671b5],dh
  405ce0:	jae    0x405d55
  405ce2:	pop    ss
  405ce3:	lods   eax,DWORD PTR ds:[esi]
  405ce4:	cmc    
  405ce5:	scas   eax,DWORD PTR es:[edi]
  405ce6:	in     al,dx
  405ce7:	and    esi,DWORD PTR [eax-0x21]
  405cea:	push   es
  405ceb:	ins    BYTE PTR es:[edi],dx
  405cec:	and    bh,BYTE PTR [edx]
  405cee:	imul   eax,ecx,0x3
  405cf1:	in     eax,dx
  405cf2:	sbb    edi,ebx
  405cf4:	push   0x12
  405cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cf7:	aad    0x6
  405cf9:	lock shr al,0xc7
  405cfd:	sbb    BYTE PTR [ecx-0x1e91f908],ah
  405d03:	add    DWORD PTR [ebx+0x19],ebp
  405d06:	pop    ss
  405d07:	mov    ch,0xa9
  405d09:	adc    eax,0xd9591978
  405d0e:	in     al,dx
  405d0f:	inc    ecx
  405d10:	sub    DWORD PTR [edi+eiz*1],ebx
  405d13:	(bad)  
  405d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d15:	pop    ss
  405d16:	add    eax,0xd96490ea
  405d1b:	mov    cl,0x54
  405d1d:	shr    DWORD PTR [edi+0x9],cl
  405d20:	(bad)  
  405d21:	dec    DWORD PTR [edx+ecx*4-0x614d8369]
  405d28:	loope  0x405d3f
  405d2a:	xor    al,BYTE PTR [ebx+0x4d579d9c]
  405d30:	imul   ebp,DWORD PTR [edi+0x365ae419],0xffffffc8
  405d37:	(bad)  
  405d38:	je     0x405d0b
  405d3a:	fidivr WORD PTR [ebx]
  405d3c:	int3   
  405d3d:	out    dx,al
  405d3e:	mov    ss,WORD PTR [ebp-0x32cc3503]
  405d44:	mov    ecx,0x6d3bcda6
  405d49:	xor    eax,0xd09ded28
  405d4e:	stos   BYTE PTR es:[edi],al
  405d4f:	fstp   DWORD PTR [ebp+0x27]
  405d52:	mov    edx,0xbee52acc
  405d57:	enter  0x6dda,0xaf
  405d5b:	push   edx
  405d5c:	stc    
  405d5d:	jmp    0x44af:0x56eece1c
  405d64:	mov    al,0xf4
  405d66:	pop    edx
  405d67:	pop    edi
  405d68:	lock pusha 
  405d6a:	in     al,0xd9
  405d6c:	xchg   DWORD PTR [edx+0x15],ebp
  405d6f:	mov    ch,0xb1
  405d71:	adc    ecx,DWORD PTR [edi]
  405d73:	lea    edx,[ebx+0x73daa6fe]
  405d79:	outs   dx,BYTE PTR ds:[esi]
  405d7a:	dec    eax
  405d7b:	sbb    al,0xf0
  405d7d:	subps  xmm4,XMMWORD PTR [ebx-0x54]
  405d81:	inc    ecx
  405d82:	and    DWORD PTR [edi-0x139b3c5d],0x2cfad3a1
  405d8c:	jbe    0x405df4
  405d8e:	or     ecx,DWORD PTR [ebp-0x59]
  405d91:	mov    ebp,DWORD PTR [eax+0x315eb570]
  405d97:	jmp    0x405d60
  405d99:	xor    bl,al
  405d9b:	ret    
  405d9c:	loop   0x405d5a
  405d9e:	jae    0x405d6b
  405da0:	mul    BYTE PTR [edx+esi*1+0x1c]
  405da4:	pop    esi
  405da5:	cwde   
  405da6:	xchg   edi,eax
  405da7:	scas   eax,DWORD PTR es:[edi]
  405da8:	stos   DWORD PTR es:[edi],eax
  405da9:	scas   eax,DWORD PTR es:[edi]
  405daa:	loopne 0x405e11
  405dac:	or     eax,0xd99888c7
  405db1:	sbb    esi,ecx
  405db3:	cli    
  405db4:	dec    ebp
  405db5:	outs   dx,BYTE PTR ds:[esi]
  405db6:	inc    ebx
  405db7:	fisttp WORD PTR [ebx-0x4f8d6200]
  405dbd:	dec    edx
  405dbe:	pop    edi
  405dbf:	jbe    0x405da8
  405dc1:	enter  0x4682,0xd7
  405dc5:	pop    edi
  405dc6:	pop    edi
  405dc7:	aas    
  405dc8:	mov    eax,ds:0x551ec969
  405dcd:	push   esp
  405dce:	jb     0x405d9f
  405dd0:	into   
  405dd1:	sbb    edi,DWORD PTR [esi-0x30260d79]
  405dd7:	rol    DWORD PTR [edx-0x3e],1
  405dda:	fwait
  405ddb:	pop    ds
  405ddc:	adc    eax,0xd1019038
  405de1:	mov    BYTE PTR [ecx-0x17],dl
  405de4:	xchg   edi,eax
  405de5:	rcl    DWORD PTR [ebx+0x34],cl
  405de8:	int3   
  405de9:	lds    esp,FWORD PTR [edx]
  405deb:	inc    ecx
  405dec:	nop
  405ded:	adc    ch,cl
  405def:	xlat   BYTE PTR ds:[ebx]
  405df0:	jle    0x405dcf
  405df2:	cmp    ch,cl
  405df4:	aad    0x95
  405df6:	iret   
  405df7:	sub    DWORD PTR [edx-0x26],ecx
  405dfa:	push   0x17
  405dfc:	xchg   ebp,eax
  405dfd:	mov    al,0xc
  405dff:	mov    cl,BYTE PTR [ebx]
  405e01:	inc    esp
  405e02:	mov    al,BYTE PTR [ecx-0x6c]
  405e05:	cmp    al,0xd9
  405e07:	cmp    ebp,DWORD PTR [eax+ebp*4-0x5c]
  405e0b:	fsub   DWORD PTR [esi]
  405e0d:	stc    
  405e0e:	lods   eax,DWORD PTR gs:[esi]
  405e10:	sti    
  405e11:	jle    0x405df9
  405e13:	ds or  eax,0x1e55e360
  405e19:	loopne 0x405e7f
  405e1b:	test   al,0xa3
  405e1d:	dec    eax
  405e1e:	out    dx,al
  405e1f:	in     eax,dx
  405e20:	fsubr  DWORD PTR [ecx]
  405e22:	aad    0x95
  405e24:	and    ecx,DWORD PTR ds:0x919faf7f
  405e2a:	in     al,0x64
  405e2c:	clc    
  405e2d:	sbb    DWORD PTR [ecx+eiz*8],edi
  405e30:	loope  0x405dc8
  405e32:	stos   BYTE PTR es:[edi],al
  405e33:	or     DWORD PTR [eax+eax*4],esi
  405e36:	outs   dx,BYTE PTR ds:[esi]
  405e37:	mov    BYTE PTR [eax-0x2c60f3f3],ah
  405e3d:	sbb    DWORD PTR [ecx],esp
  405e3f:	fidivr WORD PTR [ebp+edi*2+0x12]
  405e43:	or     BYTE PTR [ecx-0x4dd0e5c7],cl
  405e49:	xchg   ebp,eax
  405e4a:	rcl    BYTE PTR [ecx-0x3918c68a],cl
  405e50:	mov    dl,bl
  405e52:	imul   DWORD PTR [edx+0x2d229b74]
  405e58:	push   esp
  405e59:	xor    DWORD PTR [ebp-0x6de88bce],ebx
  405e5f:	pop    es
  405e60:	jle    0x405e30
  405e62:	(bad)  
  405e63:	outs   dx,DWORD PTR ds:[esi]
  405e64:	adc    ecx,DWORD PTR [ebx]
  405e66:	xor    ecx,DWORD PTR [edi-0x2121ce75]
  405e6c:	es inc edi
  405e6e:	push   ebp
  405e6f:	iret   
  405e70:	and    BYTE PTR [eax],0xe2
  405e73:	jmp    0x405dfb
  405e75:	adc    BYTE PTR [ecx+0x6c],dh
  405e78:	xchg   ebp,eax
  405e79:	sahf   
  405e7a:	js     0x405e6e
  405e7c:	jmp    0x3bb91d7
  405e81:	rcl    DWORD PTR [ecx-0x9503088],cl
  405e87:	mov    WORD PTR ds:0x9e02d629,es
  405e8d:	loop   0x405eab
  405e8f:	dec    ebx
  405e90:	mov    ds:0x1a8b7811,al
  405e95:	(bad)  
  405e96:	repz shl DWORD PTR [edx],1
  405e99:	mov    al,0x76
  405e9b:	test   BYTE PTR [eax-0x7479fbe3],bl
  405ea1:	pop    eax
  405ea2:	xor    edx,DWORD PTR [edi+0x14]
  405ea5:	adc    ecx,esi
  405ea7:	jl     0x405ecf
  405ea9:	outs   dx,BYTE PTR ds:[esi]
  405eaa:	fistp  DWORD PTR [ebx+0x57]
  405ead:	cmp    eax,0x94dcacb9
  405eb2:	add    eax,0xaefd9959
  405eb7:	jecxz  0x405eca
  405eb9:	inc    ecx
  405eba:	mov    esp,DWORD PTR [esi-0x3a693179]
  405ec0:	jb     0x405e55
  405ec2:	and    ecx,DWORD PTR [ebx]
  405ec4:	push   edi
  405ec5:	not    BYTE PTR ds:0xc98d0a06
  405ecb:	fiadd  DWORD PTR [ebp+0x6b13f295]
  405ed1:	daa    
  405ed2:	push   edx
  405ed3:	sub    al,0xc6
  405ed5:	daa    
  405ed6:	neg    BYTE PTR [ecx+0xbf5a94b]
  405edc:	adc    ah,BYTE PTR [eax+0x76b28fa9]
  405ee2:	sbb    bl,BYTE PTR [eax]
  405ee4:	inc    eax
  405ee5:	test   DWORD PTR [edx-0x734cfcc1],eax
  405eeb:	(bad)  
  405eec:	hlt    
  405eed:	aam    0xdd
  405eef:	mov    bh,0xf2
  405ef1:	out    dx,al
  405ef2:	cdq    
  405ef3:	xchg   ebp,eax
  405ef4:	sub    edi,ebx
  405ef6:	push   cs
  405ef7:	mov    ebp,DWORD PTR [eax]
  405ef9:	push   ds
  405efa:	cs call 0x597659dc
  405f00:	popf   
  405f01:	popa   
  405f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f03:	add    edx,DWORD PTR [ebx-0x2c]
  405f06:	pushf  
  405f07:	fcmovnb st,st(2)
  405f09:	neg    DWORD PTR [edx]
  405f0b:	add    al,0xb9
  405f0d:	sti    
  405f0e:	fcom   st(5)
  405f10:	dec    esp
  405f11:	mov    DWORD PTR [edi+0x1ee09cf7],0xb73703e3
  405f1b:	repz push edx
  405f1d:	ss mov esi,0x3c57d274
  405f23:	dec    ebx
  405f24:	add    edx,DWORD PTR [ebx]
  405f26:	mov    bh,0x63
  405f28:	jg     0x405f08
  405f2a:	mov    ds:0xc23e4df7,eax
  405f2f:	test   DWORD PTR [edx],0x80032e20
  405f35:	loope  0x405f08
  405f37:	or     bl,BYTE PTR [ebx+0x6c]
  405f3a:	dec    ebp
  405f3b:	shl    DWORD PTR fs:[edi-0x47],1
  405f3f:	adc    BYTE PTR [ebp-0x13ea943b],0xe2
  405f46:	sub    al,0x92
  405f48:	inc    edi
  405f49:	mov    cl,0xa1
  405f4b:	mov    dl,0xd0
  405f4d:	jno    0x405ed7
  405f4f:	inc    esi
  405f50:	add    DWORD PTR [edx+0x58b822c4],esp
  405f56:	jnp    0x405fd2
  405f58:	pop    ss
  405f59:	push   0xbda0accb
  405f5e:	or     al,BYTE PTR [eax]
  405f60:	inc    ebx
  405f61:	cdq    
  405f62:	iret   
  405f63:	jae    0x405fb2
  405f65:	mov    esp,0x24da7cbc
  405f6a:	sub    esp,DWORD PTR [eax-0x6d]
  405f6d:	icebp  
  405f6e:	push   es
  405f6f:	push   0x1bb07bce
  405f74:	(bad)  
  405f75:	das    
  405f76:	sbb    al,0x42
  405f78:	lahf   
  405f79:	call   DWORD PTR [ebp+0x5917f9b4]
  405f7f:	or     DWORD PTR [edi-0x4f],edi
  405f82:	ror    DWORD PTR [ebx],0x64
  405f85:	(bad)  [ebp-0x74ef4a70]
  405f8b:	iret   
  405f8c:	inc    edx
  405f8d:	pusha  
  405f8e:	jns    0x405f9e
  405f90:	popa   
  405f91:	inc    esi
  405f92:	lds    edi,FWORD PTR [esi+0x7588429d]
  405f98:	and    edx,ebx
  405f9a:	mov    dh,0xd
  405f9c:	jbe    0x405ff9
  405f9e:	ins    DWORD PTR es:[edi],dx
  405f9f:	push   0x96154cef
  405fa4:	loop   0x405fca
  405fa6:	pop    ebx
  405fa7:	dec    ebp
  405fa8:	sahf   
  405fa9:	into   
  405faa:	pusha  
  405fab:	dec    edx
  405fac:	lods   al,BYTE PTR ds:[esi]
  405fad:	je     0x405ff4
  405faf:	lahf   
  405fb0:	jb     0x405fbb
  405fb2:	cwde   
  405fb3:	rcl    BYTE PTR [ecx],0x52
  405fb6:	imul   esp,DWORD PTR [ebp+0x2bcff1df],0xffffffed
  405fbd:	imul   ecx,DWORD PTR [edi+eiz*4],0x6a
  405fc1:	push   eax
  405fc2:	cwde   
  405fc3:	sbb    al,cl
  405fc5:	fwait
  405fc6:	cmp    eax,0xa77155a1
  405fcb:	lea    ebx,[esi+0x491ea2da]
  405fd1:	scas   al,BYTE PTR es:[edi]
  405fd2:	repz xor al,0x76
  405fd5:	pushf  
  405fd6:	cmp    eax,0xbff63dcf
  405fdb:	xchg   ebx,eax
  405fdc:	jmp    0xa55c:0xcc0f5af8
  405fe3:	push   0xd8c4388b
  405fe8:	arpl   cx,ax
  405fea:	lea    ebx,[ebx-0x2974244f]
  405ff0:	fadd   QWORD PTR [ebp+0x14]
  405ff3:	inc    ebp
  405ff4:	jge    0x405fb3
  405ff6:	ror    DWORD PTR [esi-0x13e86c01],cl
  405ffc:	mov    BYTE PTR [ecx+0x22ef225e],0xa
  406003:	(bad)  
  406004:	cmp    eax,0xb69e7048
  406009:	adc    eax,0xd7af2871
  40600e:	xchg   DWORD PTR [esi+0x44],esp
  406011:	test   al,0x98
  406013:	mov    edi,0x1c64f9f1
  406018:	or     ebp,ebx
  40601a:	jne    0x405fe8
  40601c:	mov    esp,0x52c7685a
  406021:	jmp    0x73d7:0xb08451a2
  406028:	mov    dl,0x8c
  40602a:	adc    eax,0x2013a487
  40602f:	sti    
  406030:	(bad)  
  406031:	iret   
  406032:	lods   eax,DWORD PTR ds:[esi]
  406033:	mov    esi,0x4e70c7b5
  406038:	xchg   edi,eax
  406039:	push   eax
  40603a:	mov    esp,0xcbcc549c
  40603f:	sbb    al,0x8e
  406041:	pop    edi
  406042:	dec    ebp
  406043:	test   eax,0x461622e0
  406048:	loope  0x40605b
  40604a:	call   ebp
  40604c:	dec    edi
  40604d:	jbe    0x405fdf
  40604f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406050:	ror    BYTE PTR [eax],cl
  406052:	inc    eax
  406053:	dec    esp
  406054:	iret   
  406055:	pop    esp
  406056:	fiadd  DWORD PTR [di-0x41f7]
  40605b:	stos   DWORD PTR es:[edi],eax
  40605c:	push   0xffffffcc
  40605e:	mov    al,ds:0xdd13ba3a
  406063:	es push ebp
  406065:	leave  
  406066:	arpl   WORD PTR [ebx-0x2af3a18a],ax
  40606c:	gs ja  0x40606e
  40606f:	lds    esi,FWORD PTR [edi]
  406071:	call   0x4e11:0xbde48c1
  406078:	push   ecx
  406079:	ss jne 0x4060e0
  40607c:	sti    
  40607d:	mov    esp,0xfb5e972d
  406082:	aad    0x8a
  406084:	lods   eax,DWORD PTR ds:[esi]
  406085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406086:	(bad)
  40608b:	js     0x406022
  40608d:	cmp    BYTE PTR [edx],cl
  40608f:	xchg   ecx,eax
  406090:	mov    dl,0xc
  406092:	fwait
  406093:	aam    0x95
  406095:	lea    esp,[eax]
  406097:	pop    esi
  406098:	ins    BYTE PTR es:[edi],dx
  406099:	cld    
  40609a:	adc    eax,0xea0ae987
  40609f:	xchg   esi,eax
  4060a0:	jne    0x406030
  4060a2:	add    al,0x9d
  4060a4:	ror    BYTE PTR [ebx],0xea
  4060a7:	rcr    DWORD PTR [eax+ebp*8-0x5a],1
  4060ab:	push   ds
  4060ac:	aam    0x51
  4060ae:	mov    BYTE PTR [ebp-0xc3858cc],al
  4060b4:	mov    ebp,0x8c12dfb2
  4060b9:	fcomp  DWORD PTR [ebx-0x5c]
  4060bc:	ret    0xfcb0
  4060bf:	ret    0x40ec
  4060c2:	je     0x4060fe
  4060c4:	inc    BYTE PTR [edx-0x4525d9d1]
  4060ca:	inc    ecx
  4060cb:	push   cs
  4060cc:	mov    ebp,ebx
  4060ce:	push   ecx
  4060cf:	icebp  
  4060d0:	(bad)  
  4060d1:	cs pop esi
  4060d3:	cmp    eax,0x1ec7b43c
  4060d8:	inc    eax
  4060d9:	lds    edx,FWORD PTR [ebx-0x69e6d66]
  4060df:	lods   eax,DWORD PTR ds:[esi]
  4060e0:	fmul   DWORD PTR ds:0x7a825279
  4060e6:	jno    0x406130
  4060e8:	inc    ebp
  4060e9:	scas   al,BYTE PTR es:[edi]
  4060ea:	sahf   
  4060eb:	leave  
  4060ec:	imul   esi,DWORD PTR [edi],0xffb564c0
  4060f2:	pushf  
  4060f3:	test   eax,0xed529a9
  4060f8:	cmp    esp,ecx
  4060fa:	dec    ecx
  4060fb:	sbb    DWORD PTR [ecx],eax
  4060fd:	dec    edx
  4060fe:	mov    cl,0xbd
  406100:	(bad)  
  406102:	mov    dl,0x89
  406104:	xchg   ebx,eax
  406105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406106:	mov    DWORD PTR [edx-0x3962896a],esi
  40610c:	sbb    BYTE PTR [ecx*2-0x236896c9],bh
  406113:	sub    bh,BYTE PTR [ecx-0x7ff6e18b]
  406119:	or     BYTE PTR ds:0x14d09c4b,al
  40611f:	pop    edi
  406120:	out    dx,al
  406121:	adc    al,0xe4
  406123:	pop    ecx
  406124:	bound  edi,QWORD PTR [eax]
  406126:	jmp    0xd3852b49
  40612b:	mov    ah,BYTE PTR [esi]
  40612d:	xor    al,0x9e
  40612f:	dec    ebp
  406130:	out    dx,eax
  406131:	cmp    eax,edi
  406133:	rol    BYTE PTR [edi+0x36fece32],0x32
  40613a:	dec    ecx
  40613b:	and    dh,BYTE PTR [eax]
  40613d:	pop    ecx
  40613e:	xchg   BYTE PTR [ebx-0x7a],ah
  406141:	xchg   edx,eax
  406142:	repz jno 0x4061a9
  406145:	daa    
  406146:	jb     0x4060fb
  406148:	adc    ecx,edx
  40614a:	jp     0x4060e2
  40614c:	mov    al,ds:0x48289bbc
  406151:	bound  ecx,QWORD PTR ds:0x7f6a8fe3
  406157:	std    
  406158:	or     esp,eax
  40615a:	(bad)  [esi+0x5f32cf5e]
  406160:	pushf  
  406161:	cmp    esp,DWORD PTR [edx]
  406163:	dec    edi
  406164:	xchg   DWORD PTR [edx-0x63],eax
  406167:	into   
  406168:	ja     0x4061aa
  40616a:	repnz scas al,BYTE PTR es:[edi]
  40616c:	mov    dl,0xff
  40616e:	inc    eax
  40616f:	lds    edi,FWORD PTR [ebx+0x2c]
  406172:	inc    eax
  406173:	fidivr WORD PTR [ebx]
  406175:	ja     0x406169
  406177:	repz pop ebp
  406179:	sub    ch,dh
  40617b:	mov    ebp,0x3f089ebc
  406180:	in     eax,dx
  406181:	jo     0x4061d9
  406183:	mov    eax,0x4f5e46c0
  406188:	push   edi
  406189:	rol    BYTE PTR [eax-0x54],cl
  40618c:	mov    edi,DWORD PTR [eax-0x3c]
  40618f:	mov    al,ds:0x26a267c1
  406194:	not    al
  406196:	sub    DWORD PTR ds:[ecx+eax*8+0x2c028bb7],esi
  40619e:	(bad)  
  40619f:	in     al,dx
  4061a0:	inc    BYTE PTR [edi+edx*4+0x70]
  4061a4:	pop    esp
  4061a5:	popf   
  4061a6:	pop    es
  4061a7:	adc    edx,DWORD PTR [eax+0x67]
  4061aa:	lods   al,BYTE PTR ds:[esi]
  4061ab:	sbb    eax,0x413454fb
  4061b0:	ins    DWORD PTR es:[edi],dx
  4061b1:	dec    esp
  4061b2:	in     al,0x3c
  4061b4:	das    
  4061b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061b6:	push   ds
  4061b7:	mov    al,ds:0x1e17f368
  4061bc:	dec    ebp
  4061bd:	ins    DWORD PTR es:[edi],dx
  4061be:	(bad)  
  4061bf:	pop    edi
  4061c0:	aad    0xcc
  4061c2:	xchg   DWORD PTR [ebx-0x671e6a2],esi
  4061c8:	cmc    
  4061c9:	dec    esp
  4061ca:	push   esp
  4061cb:	js     0x4061c3
  4061cd:	std    
  4061ce:	punpckhwd mm7,mm5
  4061d1:	sbb    al,0xc0
  4061d3:	fistp  DWORD PTR [edi-0x12]
  4061d6:	xchg   esi,edx
  4061d8:	(bad)  
  4061d9:	adc    ebx,DWORD PTR [edx]
  4061db:	ret    
  4061dc:	mov    edx,0x41ae6773
  4061e1:	iret   
  4061e2:	mov    bh,0x37
  4061e4:	(bad)  
  4061e5:	cmp    eax,0xec30ab0b
  4061ea:	(bad)  
  4061eb:	pop    ecx
  4061ec:	mov    edi,0x7b5be74
  4061f1:	xchg   ecx,eax
  4061f2:	jmp    0xf687:0x81d5dd8f
  4061f9:	dec    eax
  4061fa:	out    0x18,eax
  4061fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061fd:	in     eax,dx
  4061fe:	test   al,0xe5
  406200:	call   DWORD PTR [esi]
  406202:	fwait
  406203:	or     dh,al
  406205:	scas   eax,DWORD PTR es:[edi]
  406206:	cmp    ebx,ebp
  406208:	(bad)  
  406209:	xchg   ebx,eax
  40620a:	cmp    esp,DWORD PTR [edi+0x4dd5ce23]
  406210:	inc    esi
  406211:	xor    al,0x3e
  406213:	neg    bl
  406215:	stos   BYTE PTR es:[edi],al
  406216:	in     eax,0x5b
  406218:	into   
  406219:	cmp    DWORD PTR [ebp+0x4b7d7042],esp
  40621f:	(bad)  
  406220:	fcom   QWORD PTR [eax]
  406222:	mov    DWORD PTR [ebx+eax*8+0x3f8cae23],ebx
  406229:	out    0x3,eax
  40622b:	test   DWORD PTR [eax-0x5a],ecx
  40622e:	push   ss
  40622f:	imul   DWORD PTR [eax-0x3e2b5548]
  406235:	mov    esp,eax
  406237:	xlat   BYTE PTR ds:[ebx]
  406238:	stc    
  406239:	(bad)  
  40623a:	fnstenv [ebx]
  40623c:	adc    BYTE PTR [edi+0x1e3a6df5],ch
  406242:	lock hlt 
  406244:	add    eax,0x1f1a5389
  406249:	cmp    ebx,ebx
  40624b:	inc    esp
  40624c:	pop    esp
  40624d:	jb     0x4062ac
  40624f:	adc    edi,DWORD PTR [ebp+eax*8+0x33]
  406253:	push   es
  406254:	inc    ecx
  406255:	mov    bh,0x79
  406257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406258:	inc    ecx
  406259:	add    eax,eax
  40625b:	xor    BYTE PTR [eax-0x79ca2742],dl
  406261:	icebp  
  406262:	jae    0x406249
  406264:	or     eax,0x910443fd
  406269:	xchg   esp,eax
  40626a:	es (bad) 
  40626c:	and    al,0x32
  40626e:	xchg   edi,eax
  40626f:	or     esp,DWORD PTR [esi+edx*2]
  406272:	jae    0x4062e5
  406274:	sbb    bh,ch
  406276:	push   es
  406277:	ret    0xcf1
  40627a:	test   BYTE PTR [eax+0x66],dh
  40627d:	aam    0x8e
  40627f:	sar    BYTE PTR [esp],1
  406282:	sub    al,BYTE PTR [ebp+0x182d94fc]
  406288:	clc    
  406289:	popa   
  40628a:	dec    edx
  40628b:	sub    ebp,DWORD PTR [edi-0x1e3e1db1]
  406291:	and    ch,BYTE PTR [esi+eiz*8]
  406294:	inc    edx
  406295:	add    DWORD PTR [ebp+0x51],0xd5305335
  40629c:	or     al,0x35
  40629e:	jp     0x406246
  4062a0:	in     eax,dx
  4062a1:	ins    BYTE PTR es:[edi],dx
  4062a2:	adc    eax,0xd5fc6118
  4062a7:	dec    esi
  4062a8:	jno    0x40623c
  4062aa:	(bad)  
  4062ab:	aaa    
  4062ac:	mul    BYTE PTR [esp+ebx*8]
  4062af:	push   cs
  4062b0:	cwde   
  4062b1:	mov    DWORD PTR [eax],0xcc200e78
  4062b7:	xchg   edx,eax
  4062b8:	data16 and BYTE PTR [edx],0x65
  4062bc:	cwde   
  4062bd:	xchg   esp,eax
  4062be:	repnz cmp al,ah
  4062c1:	jge    0x406286
  4062c3:	push   es
  4062c4:	in     al,dx
  4062c5:	mov    dh,0x77
  4062c7:	mov    ds:0x59df41ab,eax
  4062cc:	and    eax,0xee55072d
  4062d1:	nop
  4062d2:	(bad)  
  4062d3:	pop    ecx
  4062d4:	mov    ah,0xc8
  4062d6:	pop    ebp
  4062d7:	adc    ch,BYTE PTR [ebx-0x5b457c03]
  4062dd:	in     eax,0x88
  4062df:	mov    ?,WORD PTR [edx+ebx*2-0x53]
  4062e3:	adc    eax,0x5f57f3a8
  4062e8:	xor    edx,DWORD PTR [ebx-0x2013414f]
  4062ee:	jne    0x40629f
  4062f0:	(bad)  
  4062f1:	shr    BYTE PTR [edi],cl
  4062f3:	out    dx,eax
  4062f4:	fnsave [ecx]
  4062f6:	adc    DWORD PTR [ebp-0x1c],0xcfac3797
  4062fd:	sub    eax,0xb7c1b9b5
  406303:	and    al,0x8
  406305:	sub    al,0x10
  406307:	adc    BYTE PTR [ebx-0x9],bl
  40630a:	loope  0x40637d
  40630c:	pop    esi
  40630d:	fcom   DWORD PTR ds:0x7035a3ba
  406313:	pop    ebp
  406314:	xlat   BYTE PTR ds:[ebx]
  406315:	mov    DWORD PTR [esi-0x27691fa],eax
  40631b:	test   al,0x1f
  40631d:	adc    eax,0xec103604
  406322:	test   al,0xa5
  406324:	cs stc 
  406326:	or     dl,dl
  406328:	aam    0x42
  40632a:	into   
  40632b:	fwait
  40632c:	es sub bl,BYTE PTR es:[edi+0x49a5850a]
  406334:	mov    ch,0x7e
  406336:	dec    esi
  406337:	xor    cl,BYTE PTR [ebx]
  406339:	jecxz  0x4062fc
  40633b:	push   0x43be2528
  406340:	nop
  406341:	xchg   esi,eax
  406342:	add    ch,al
  406344:	xor    al,bh
  406346:	mov    al,ds:0x56efbe2c
  40634b:	pop    edx
  40634c:	mov    ebx,0xf8e952aa
  406351:	sar    DWORD PTR [ebx+0x4dfc0f49],0x51
  406358:	jp     0x4062e9
  40635a:	cmp    BYTE PTR [ebp-0x6f18894c],dl
  406360:	test   eax,0xc513d1b7
  406365:	test   BYTE PTR [ebx-0x564464f9],al
  40636b:	lock xor DWORD PTR [ecx],0xffffffb9
  40636f:	ins    DWORD PTR es:[edi],dx
  406370:	imul   esp,edi,0xffffffef
  406373:	inc    eax
  406374:	dec    esi
  406375:	jmp    0x40636b
  406377:	lods   al,BYTE PTR ds:[esi]
  406378:	dec    DWORD PTR [eax+eax*4-0x70ce7c2f]
  40637f:	cmp    DWORD PTR [ecx],esp
  406381:	pop    edx
  406382:	push   esi
  406383:	out    0x25,al
  406385:	repnz (bad) 
  406387:	(bad)  
  406388:	dec    ebp
  406389:	dec    ebp
  40638a:	addr16 pop ss
  40638c:	les    ebx,FWORD PTR [edx-0x72f53b10]
  406392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406393:	shr    DWORD PTR [esi-0x32],0xd7
  406397:	ret    0xec89
  40639a:	and    eax,0x7ba60c73
  40639f:	push   0x5e
  4063a1:	scas   al,BYTE PTR es:[edi]
  4063a2:	fbstp  TBYTE PTR [esi+0x25]
  4063a5:	lods   eax,DWORD PTR ds:[esi]
  4063a6:	mov    edx,ds
  4063a8:	stos   DWORD PTR es:[edi],eax
  4063a9:	sti    
  4063aa:	loope  0x40634c
  4063ac:	push   ss
  4063ad:	jge    0x4063d4
  4063af:	inc    edi
  4063b0:	push   ebp
  4063b1:	dec    ebp
  4063b2:	xchg   DWORD PTR [esi+0xc],edi
  4063b5:	stos   DWORD PTR es:[edi],eax
  4063b6:	xchg   ecx,eax
  4063b7:	out    dx,eax
  4063b8:	fnstsw WORD PTR [ebx]
  4063ba:	mov    ?,WORD PTR [edx]
  4063bc:	xor    esi,DWORD PTR [eax]
  4063be:	je     0x406371
  4063c0:	icebp  
  4063c1:	shl    DWORD PTR [esi-0x273170b8],1
  4063c7:	shr    DWORD PTR [edi],0x17
  4063ca:	jb     0x406434
  4063cc:	in     eax,0x46
  4063ce:	inc    eax
  4063cf:	ds mov eax,0x53a02d42
  4063d5:	adc    DWORD PTR [ebx+0x6405aa7],ebx
  4063db:	outs   dx,DWORD PTR ds:[esi]
  4063dc:	(bad)  
  4063dd:	push   esp
  4063de:	mov    ebx,0x889cc4f9
  4063e3:	inc    esp
  4063e4:	xchg   BYTE PTR [ecx+eax*8],bl
  4063e7:	adc    al,0x2
  4063e9:	cmp    al,BYTE PTR [esi]
  4063eb:	mov    eax,ds:0xf1908ac0
  4063f0:	and    DWORD PTR [edx-0xe],0x72
  4063f4:	cmp    DWORD PTR [ebp-0x33],ecx
  4063f7:	inc    eax
  4063f8:	mov    bl,0xd
  4063fa:	stos   BYTE PTR es:[edi],al
  4063fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063fc:	pop    esi
  4063fd:	mov    esi,0xc22ccda6
  406402:	mov    WORD PTR [ebx+0x5],fs
  406405:	push   esp
  406406:	ror    DWORD PTR [esi+0x43],0xb2
  40640a:	push   edx
  40640b:	ins    DWORD PTR es:[edi],dx
  40640c:	jo     0x406406
  40640e:	ret    0xeee0
  406411:	xchg   ebp,eax
  406412:	xchg   esp,eax
  406413:	mov    cl,0xa3
  406415:	ret    
  406416:	cwde   
  406417:	pop    ecx
  406418:	cld    
  406419:	sbb    eax,esp
  40641b:	cld    
  40641c:	xchg   DWORD PTR [edi],ebp
  40641e:	and    eax,0x77f384e8
  406423:	outs   dx,BYTE PTR ds:[esi]
  406424:	fsubr  DWORD PTR [ebx-0x59]
  406427:	mov    esi,0x55e06846
  40642c:	push   esp
  40642d:	jmp    0x3599:0x59886840
  406434:	imul   ecx,DWORD PTR [ecx+0x4a],0x1b41387c
  40643b:	(bad)  
  40643c:	retf   
  40643d:	mov    esp,0xf5444880
  406442:	dec    eax
  406443:	gs mov al,0x96
  406446:	push   edx
  406447:	fchs   
  406449:	and    BYTE PTR [eax+0x36],bh
  40644c:	pusha  
  40644d:	pop    eax
  40644e:	cmp    eax,0x94b6d9ec
  406453:	jb     0x4064b1
  406455:	pop    es
  406456:	mov    ah,0xc3
  406458:	jne    0x4064a1
  40645a:	hlt    
  40645b:	adc    bh,BYTE PTR [esi]
  40645d:	fdiv   DWORD PTR [eax]
  40645f:	mov    eax,esp
  406461:	add    al,0x6c
  406463:	adc    eax,0xe3b1cd
  406468:	mov    bh,0xf8
  40646a:	adc    eax,0xb28b0bac
  40646f:	xchg   esi,eax
  406470:	icebp  
  406471:	xor    al,0x99
  406473:	rcl    BYTE PTR [ecx+0x6917a629],0x13
  40647a:	add    eax,0xae37087b
  40647f:	xchg   edi,eax
  406480:	mov    dl,0x3d
  406482:	scas   al,BYTE PTR es:[edi]
  406483:	mov    ds:0x80a7562b,eax
  406488:	push   eax
  406489:	hlt    
  40648a:	nop
  40648b:	jle    0x40650a
  40648d:	hlt    
  40648e:	pop    esi
  40648f:	sub    al,0x80
  406491:	dec    esp
  406492:	mov    ebx,0xac4a54fd
  406497:	add    BYTE PTR [eax-0xcd44f97],ch
  40649d:	mov    esi,0x2b65b235
  4064a2:	jbe    0x40651d
  4064a4:	mov    ebx,0x711094a7
  4064a9:	je     0x4064ac
  4064ab:	scas   al,BYTE PTR es:[edi]
  4064ac:	dec    edi
  4064ad:	push   esi
  4064ae:	ficom  DWORD PTR [eax-0x8]
  4064b1:	push   eax
  4064b2:	es icebp 
  4064b4:	ret    
  4064b5:	and    esi,DWORD PTR [esi+ecx*4-0x3e]
  4064b9:	out    0xfc,al
  4064bb:	shl    bh,1
  4064bd:	adc    esi,ebp
  4064bf:	cmovbe esp,ebp
  4064c2:	mov    edi,0x6ccde1dd
  4064c7:	fwait
  4064c8:	lahf   
  4064c9:	xchg   esi,eax
  4064ca:	cld    
  4064cb:	sbb    cl,bh
  4064cd:	outs   dx,DWORD PTR ds:[esi]
  4064ce:	xchg   esp,eax
  4064cf:	dec    edi
  4064d0:	push   0x6eece6f9
  4064d5:	xchg   al,bh
  4064d7:	xchg   ebp,eax
  4064d8:	cs push ecx
  4064da:	jns    0x40646e
  4064dc:	gs dec edx
  4064de:	mov    WORD PTR [esi+0x5e],cs
  4064e1:	pop    esp
  4064e2:	loope  0x40651f
  4064e4:	ds jne 0x40651e
  4064e7:	mov    ebx,0x3c7034de
  4064ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064ed:	mov    ds:0x9e5f1cd9,al
  4064f2:	or     BYTE PTR [edx],dl
  4064f4:	mov    edi,0xe6b13fdf
  4064f9:	mov    edx,0x6c963fac
  4064fe:	xchg   ebx,eax
  4064ff:	or     ebp,ebp
  406501:	outs   dx,DWORD PTR ds:[esi]
  406502:	mov    bh,0x54
  406504:	or     ebp,DWORD PTR [esi+0x7f]
  406507:	mov    eax,ds
  406509:	xchg   esp,eax
  40650a:	ins    DWORD PTR es:[edi],dx
  40650b:	out    0xe6,al
  40650d:	adc    eax,0xc4865e05
  406512:	test   al,0x35
  406514:	fcomp  DWORD PTR [ecx+0x2154f108]
  40651a:	in     eax,dx
  40651b:	push   esi
  40651c:	jecxz  0x406577
  40651e:	jge    0x406553
  406520:	sar    ch,1
  406522:	dec    edi
  406523:	imul   ecx,DWORD PTR [ecx],0x558d35dd
  406529:	ss (bad) 
  40652b:	push   edx
  40652c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40652d:	jp     0x4064f7
  40652f:	sub    edi,DWORD PTR [edx-0x6812131a]
  406535:	cmp    BYTE PTR [ebx*4+0x709a0efa],bh
  40653c:	mov    BYTE PTR [esi],dl
  40653e:	ret    0x701e
  406541:	sbb    bh,BYTE PTR [eax-0x66]
  406544:	jns    0x406589
  406546:	xchg   ebp,edi
  406548:	repz add esi,0x33fab6ab
  40654f:	jns    0x4064fa
  406551:	adc    eax,0x600d446d
  406556:	xor    eax,0x5c731f24
  40655b:	(bad)
  406560:	jo     0x4065c8
  406562:	arpl   WORD PTR [eax+0x2d550d6c],dx
  406568:	xor    eax,0x36d04f82
  40656d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40656e:	mov    ebp,0xb4372783
  406573:	stos   BYTE PTR es:[edi],al
  406574:	jno    0x4065b3
  406576:	lds    ecx,FWORD PTR [esi+0xcef4503]
  40657c:	cli    
  40657d:	out    dx,eax
  40657e:	fimul  WORD PTR [edi+0x1998a597]
  406584:	xchg   esp,eax
  406585:	retf   0x9b62
  406588:	mov    eax,0xfccd934a
  40658d:	(bad)  
  40658e:	mov    ah,0x63
  406590:	int    0x65
  406592:	std    
  406593:	or     eax,ecx
  406595:	mov    ch,0x67
  406597:	and    DWORD PTR [ebp+0x4e87d370],edx
  40659d:	or     dl,dh
  40659f:	out    0xc4,al
  4065a1:	sub    cl,ah
  4065a3:	stc    
  4065a4:	rcl    BYTE PTR [ecx],1
  4065a6:	push   eax
  4065a7:	sbb    eax,0xcf3fa766
  4065ac:	pop    edi
  4065ad:	mov    eax,ds:0xbc8d1100
  4065b2:	jg     0x4065de
  4065b4:	call   0x94e1c98a
  4065b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065ba:	add    DWORD PTR [edi],eax
  4065bc:	lock sbb al,BYTE PTR [esi+0x15]
  4065c0:	ins    BYTE PTR es:[edi],dx
  4065c1:	or     ah,BYTE PTR [edi]
  4065c3:	imul   ebx,DWORD PTR [ecx-0x55e84595],0x12f1bdd4
  4065cd:	jl     0x4065f8
  4065cf:	into   
  4065d0:	pop    esi
  4065d1:	retf   0x9957
  4065d4:	std    
  4065d5:	adc    esi,esi
  4065d7:	or     DWORD PTR [ecx+0x4b667849],0xffffff8b
  4065de:	cmp    DWORD PTR [ebx+0x7cc4aaa7],ecx
  4065e4:	mov    bl,0x99
  4065e6:	and    BYTE PTR [ecx],ah
  4065e8:	test   DWORD PTR [ebx+0x26],eax
  4065eb:	sbb    al,0x3e
  4065ed:	xor    eax,0xe3e2f60
  4065f2:	pop    edx
  4065f3:	int3   
  4065f4:	in     eax,dx
  4065f5:	inc    edi
  4065f6:	mov    esp,0x9d8f1f10
  4065fb:	cmp    DWORD PTR [ecx],eax
  4065fd:	mov    bh,0x68
  4065ff:	addr16 aad 0xcb
  406602:	xchg   esi,eax
  406603:	or     eax,0xc46daad4
  406608:	mov    ecx,DWORD PTR [edx-0x7da985c4]
  40660e:	mov    bh,0x34
  406610:	js     0x406661
  406612:	imul   ebp,eax,0x1b6ce414
  406618:	call   0xf6fb:0x9c2dae0f
  40661f:	ds jbe 0x406684
  406622:	pop    esi
  406623:	jns    0x406657
  406625:	aam    0x96
  406627:	int    0x97
  406629:	in     eax,dx
  40662a:	add    eax,edi
  40662c:	inc    edx
  40662d:	cli    
  40662e:	pop    edx
  40662f:	loop   0x4066a0
  406631:	imul   esi,DWORD PTR [eax+0x10c3f83b],0x489a4d40
  40663b:	dec    eax
  40663c:	imul   ecx,DWORD PTR [ebx-0x350bc3],0xffffffb2
  406643:	and    al,dl
  406645:	mov    bh,0xa7
  406647:	(bad)  
  406649:	dec    edi
  40664a:	dec    esi
  40664b:	or     al,0x48
  40664d:	xchg   BYTE PTR [ecx-0x46607890],bl
  406653:	pop    edx
  406654:	add    BYTE PTR [edx+0x5a],dl
  406657:	xor    BYTE PTR [ebx+0x13],al
  40665a:	stos   DWORD PTR es:[edi],eax
  40665b:	mov    WORD PTR [ebx-0x4039017a],gs
  406661:	mov    dl,dl
  406663:	cli    
  406664:	mov    WORD PTR [eax],?
  406666:	cdq    
  406667:	test   DWORD PTR [ebx],eax
  406669:	xor    al,0xf6
  40666b:	push   ds
  40666c:	push   cs
  40666d:	rcl    BYTE PTR [ebx+eiz*1+0x7c9ba137],0x18
  406675:	pop    ebp
  406676:	mov    edx,0x8ea2af8c
  40667b:	cli    
  40667c:	mov    bl,0x24
  40667e:	xor    edx,edi
  406680:	mov    al,0x4d
  406682:	or     ebx,DWORD PTR es:[eax]
  406685:	sub    DWORD PTR [ecx],ebp
  406687:	adc    bl,BYTE PTR [edx]
  406689:	imul   edi,DWORD PTR [ebp-0x7c4203cd],0x699cbfa
  406693:	sbb    DWORD PTR [ebp-0x48beef64],edi
  406699:	dec    edx
  40669a:	dec    eax
  40669b:	js     0x406714
  40669d:	cmp    eax,0x4fd896b0
  4066a2:	mov    ah,0xc
  4066a4:	jnp    0x406675
  4066a6:	sub    eax,0xea41c17c
  4066ab:	std    
  4066ac:	aaa    
  4066ad:	(bad)
  4066b0:	mov    ah,0x69
  4066b2:	sub    BYTE PTR cs:[ebx+0x74],bl
  4066b6:	ror    BYTE PTR [edx-0x1dfed577],0xba
  4066bd:	cmp    BYTE PTR [eax-0x3204e17],cl
  4066c3:	add    ebp,esi
  4066c5:	dec    ebp
  4066c6:	pop    eax
  4066c7:	add    esp,DWORD PTR [edi]
  4066c9:	xor    eax,0x7fc58ac3
  4066ce:	or     ebp,DWORD PTR [ecx]
  4066d0:	(bad)  
  4066d1:	push   esp
  4066d2:	and    BYTE PTR [esi],cl
  4066d4:	dec    ebp
  4066d5:	sub    eax,0xc5fa7b6d
  4066da:	cmc    
  4066db:	pop    esi
  4066dc:	ficomp WORD PTR [edi+0x69db77eb]
  4066e2:	jno    0x4066fd
  4066e4:	xchg   edi,eax
  4066e5:	ss aam 0x4d
  4066e8:	jp     0x40675b
  4066ea:	jmp    0xfc14f200
  4066ef:	fcomp  DWORD PTR [esp+edx*8+0x300098c7]
  4066f6:	cmc    
  4066f7:	sbb    al,0x43
  4066f9:	pop    esp
  4066fa:	retf   
  4066fb:	fdivr  QWORD PTR [ecx+0x6070724b]
  406701:	in     eax,dx
  406702:	enter  0x3158,0x26
  406706:	fist   WORD PTR [eax+0x18]
  406709:	sbb    dh,BYTE PTR [edx]
  40670b:	xchg   ecx,eax
  40670c:	pop    edx
  40670d:	cmc    
  40670e:	lock lock sti 
  406711:	fisub  WORD PTR [edx]
  406713:	and    edx,DWORD PTR [eax+eiz*2]
  406716:	sar    BYTE PTR [eax],cl
  406718:	dec    esi
  406719:	push   esp
  40671a:	sbb    bl,BYTE PTR [ecx+0x572dad7b]
  406720:	push   ebp
  406721:	mov    al,0xbf
  406723:	or     al,0x6f
  406725:	fidiv  DWORD PTR [eax+0x37]
  406728:	dec    esi
  406729:	mov    ah,0x58
  40672b:	(bad)  
  40672c:	adc    al,0xed
  40672e:	mov    dl,al
  406730:	and    eax,0xc85e69bb
  406735:	fild   DWORD PTR [ebp-0x54]
  406738:	sub    DWORD PTR [ecx-0x6d75a895],0x727da58c
  406742:	push   ecx
  406743:	scas   eax,DWORD PTR es:[edi]
  406744:	test   dl,ah
  406746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406747:	clc    
  406748:	loopne 0x406785
  40674a:	xor    edx,DWORD PTR [ecx+0x2d]
  40674d:	pop    edx
  40674e:	cmp    eax,0xcbe7cab
  406753:	enter  0x5a27,0xdd
  406757:	out    0xf9,eax
  406759:	lea    eax,[ebx-0x29bb01f0]
  40675f:	lahf   
  406760:	fidivr DWORD PTR [ecx]
  406762:	stc    
  406763:	(bad)  
  406764:	cdq    
  406765:	mov    ds:0xa95b8af3,eax
  40676a:	mov    bh,dl
  40676c:	sub    eax,0x41888b00
  406771:	inc    edx
  406772:	out    dx,al
  406773:	xchg   DWORD PTR [ebp+0x39],esi
  406776:	jae    0x40677a
  406778:	(bad)  
  406779:	jecxz  0x4067b1
  40677b:	ins    BYTE PTR es:[edi],dx
  40677c:	add    BYTE PTR [eax-0x8],bh
  40677f:	stc    
  406780:	dec    ebx
  406781:	push   esp
  406782:	xchg   esi,eax
  406783:	outs   dx,BYTE PTR ds:[esi]
  406784:	or     DWORD PTR [ecx+0x54],0x607fc100
  40678b:	cmc    
  40678c:	adc    al,0xc2
  40678e:	sbb    edx,DWORD PTR [ebx+eiz*2]
  406791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406792:	jmp    0x9d6f3adc
  406797:	or     BYTE PTR [ebp+0x26688bb7],dl
  40679d:	mov    ds:0x223a7e09,eax
  4067a2:	mov    DWORD PTR [edx-0x4],ebx
  4067a5:	push   0x65
  4067a7:	mov    ds:0x6d1347d7,eax
  4067ac:	mov    edi,0xe725c1e9
  4067b1:	popf   
  4067b2:	add    BYTE PTR gs:[esi-0x2b],al
  4067b6:	and    BYTE PTR [ecx],ch
  4067b8:	aaa    
  4067b9:	mov    edx,0xbfaccda6
  4067be:	shr    DWORD PTR [ebp+0x3],0xcf
  4067c2:	jge    0x4067a3
  4067c4:	fmul   QWORD PTR [edi+0x32]
  4067c7:	mov    dl,0x85
  4067c9:	std    
  4067ca:	addr16 ret 0xbed5
  4067ce:	repz push cs
  4067d0:	mov    ch,0x21
  4067d2:	in     eax,0x98
  4067d4:	sbb    eax,0xf46c9c5b
  4067d9:	pushf  
  4067da:	rcr    DWORD PTR [edx],0xb0
  4067dd:	mov    al,BYTE PTR ds:0x1f5eab1e
  4067e3:	push   esp
  4067e4:	je     0x406856
  4067e6:	sti    
  4067e7:	sbb    al,0xf9
  4067e9:	push   0xafe5bc6e
  4067ee:	mov    cl,0x4b
  4067f0:	jbe    0x40677a
  4067f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067f3:	mov    ?,WORD PTR [eax+0x6f]
  4067f6:	aaa    
  4067f7:	inc    ecx
  4067f8:	jg     0x406853
  4067fa:	push   ebx
  4067fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067fc:	or     dh,BYTE PTR ds:0x17da12ff
  406802:	xchg   esi,eax
  406803:	sbb    DWORD PTR [ebp-0x5ae1de15],ecx
  406809:	push   0x2cf99126
  40680e:	add    al,0x20
  406810:	imul   ecx,DWORD PTR [edi-0x6],0x6e52d12e
  406817:	jno    0x406813
  406819:	mov    al,0xa
  40681b:	icebp  
  40681c:	xlat   BYTE PTR ds:[ebx]
  40681d:	fmul   st,st(5)
  40681f:	sub    al,0x86
  406821:	push   cs
  406822:	sbb    BYTE PTR [ebx],dl
  406824:	xchg   esi,eax
  406825:	and    DWORD PTR [ebx],ebx
  406827:	pop    es
  406828:	cmp    eax,0x31b153e5
  40682d:	xchg   edx,eax
  40682e:	mov    cl,0x88
  406830:	jl     0x4067c2
  406832:	outs   dx,BYTE PTR ds:[esi]
  406833:	xchg   esp,eax
  406834:	xchg   edi,eax
  406835:	cmp    BYTE PTR [esi+0x37bbb7c8],ch
  40683b:	mov    ds:0xe32dbaf8,al
  406840:	push   edi
  406841:	imul   BYTE PTR [edi]
  406843:	je     0x406841
  406845:	out    0xd,al
  406847:	popf   
  406848:	mov    BYTE PTR [edi+0x61],ch
  40684b:	ret    
  40684c:	push   es
  40684d:	push   0x561756e9
  406852:	sub    DWORD PTR ds:0xd085acdc,edi
  406858:	mov    edx,0x8348570e
  40685d:	cmp    ebp,esp
  40685f:	(bad)  
  406860:	sahf   
  406861:	mov    esp,0xb8e6ffff
  406866:	push   es
  406867:	add    eax,0x80dc6e32
  40686c:	rcr    BYTE PTR [eax+0x56484bde],1
  406872:	test   eax,0xae53e798
  406877:	jl     0x4068ec
  406879:	jl     0x406802
  40687b:	add    eax,0x76bd7f03
  406880:	cs jno 0x406902
  406883:	icebp  
  406884:	aad    0xee
  406886:	or     DWORD PTR ds:0x5703e139,0xc78bc1d6
  406890:	cmp    BYTE PTR [ebx],dl
  406892:	pop    ebx
  406893:	push   0x83f092d3
  406898:	and    bl,cl
  40689a:	nop
  40689b:	sub    eax,DWORD PTR [esi+0x4f]
  40689e:	ss (bad) 
  4068a0:	xchg   esi,eax
  4068a1:	lea    eax,ds:[edx-0xdfb26e3]
  4068a8:	dec    ebx
  4068a9:	cmp    BYTE PTR [ebx+0x71bb60ed],dh
  4068af:	pop    ebp
  4068b0:	mov    ebx,0xec31815c
  4068b5:	sar    bh,1
  4068b7:	inc    eax
  4068b8:	outs   dx,DWORD PTR ds:[esi]
  4068b9:	mov    ah,0x25
  4068bb:	mov    WORD PTR ds:0xfbd7e075,?
  4068c1:	pop    ss
  4068c2:	mov    edx,DWORD PTR [edi]
  4068c4:	jae    0x406854
  4068c6:	jg     0x406858
  4068c8:	retf   0x8077
  4068cb:	mov    BYTE PTR [eax],ah
  4068cd:	xor    al,0x3
  4068cf:	add    BYTE PTR [ebp+0x2e6f92bf],dl
  4068d5:	jmp    0x406897
  4068d7:	rcl    DWORD PTR [edx+edx*2],1
  4068da:	add    DWORD PTR [edx-0x51],ebx
  4068dd:	push   0x652354fe
  4068e2:	pusha  
  4068e3:	pusha  
  4068e4:	mov    edx,0xa3a13939
  4068e9:	xor    dl,BYTE PTR [ebx-0x63]
  4068ec:	or     ecx,DWORD PTR [edi+0x6b715ecd]
  4068f2:	xor    bh,al
  4068f4:	int3   
  4068f5:	sub    ah,0xb2
  4068f8:	out    dx,eax
  4068f9:	mov    bl,BYTE PTR [edx+edx*2+0x5c4c6b6b]
  406900:	mov    ds:0xf87bcba7,eax
  406905:	mov    ah,0xf0
  406907:	ins    DWORD PTR es:[edi],dx
  406908:	pop    edx
  406909:	or     cl,BYTE PTR [edi]
  40690b:	retf   
  40690c:	imul   edi,DWORD PTR [edi],0x49
  40690f:	popf   
  406910:	(bad)  
  406911:	adc    al,0xec
  406913:	push   eax
  406914:	push   gs
  406916:	push   ebx
  406917:	sti    
  406918:	shld   DWORD PTR [ebx],ebp,0x3
  40691c:	mov    al,0x61
  40691e:	adc    bl,dl
  406920:	ins    BYTE PTR es:[edi],dx
  406921:	pop    ebx
  406922:	clc    
  406923:	push   esi
  406924:	adc    ebx,DWORD PTR [eax+ecx*1+0x3a]
  406928:	ret    0x7315
  40692b:	adc    eax,0xddae3b1d
  406930:	mov    dl,0x80
  406932:	sbb    eax,0x2c5c1770
  406937:	jle    0x40698e
  406939:	push   ebp
  40693a:	sbb    DWORD PTR [esi+ecx*2+0x6c],0xf80cc431
  406942:	push   cs
  406943:	mov    al,0xfc
  406945:	pop    ebx
  406946:	inc    eax
  406947:	xor    eax,DWORD PTR [eax]
  406949:	je     0x406916
  40694b:	adc    ch,BYTE PTR [ecx+0x25]
  40694e:	dec    esp
  40694f:	xchg   esi,eax
  406950:	jmp    0x58770b1d
  406955:	inc    ecx
  406956:	ss cmc 
  406958:	sbb    al,0x53
  40695a:	xchg   si,ax
  40695c:	pop    ebx
  40695d:	gs int 0x9f
  406960:	fcmovu st,st(4)
  406962:	inc    esi
  406963:	setnp  BYTE PTR [edx-0x43d973bd]
  40696a:	lock pushf 
  40696c:	test   bh,0xf6
  40696f:	stos   DWORD PTR es:[edi],eax
  406970:	lea    esi,[ecx+0x3552218e]
  406976:	(bad)  
  406977:	fcomi  st,st(1)
  406979:	push   eax
  40697a:	mov    al,ds:0xfb81fb1
  40697f:	sub    eax,0x28310c7c
  406984:	mov    ch,0x2
  406986:	call   0xb68b:0x342fc57e
  40698d:	cmp    ah,bh
  40698f:	sbb    al,0xe4
  406991:	sar    DWORD PTR [ecx+edx*4+0x25dd898e],cl
  406998:	stos   DWORD PTR es:[edi],eax
  406999:	cdq    
  40699a:	inc    edx
  40699b:	inc    esi
  40699c:	mov    bl,0xc7
  40699e:	repnz pop ecx
  4069a0:	cmp    al,BYTE PTR [edi]
  4069a2:	nop
  4069a3:	push   ss
  4069a4:	xor    DWORD PTR [ebx+0x3fc86a50],eax
  4069aa:	lods   eax,DWORD PTR ds:[esi]
  4069ab:	cmp    BYTE PTR [edi-0x277503a0],dl
  4069b1:	fisubr DWORD PTR [ebx+ebp*1+0x6b]
  4069b5:	std    
  4069b6:	xor    ebp,DWORD PTR [esp+ecx*8-0x1c390a7e]
  4069bd:	outs   dx,BYTE PTR ds:[esi]
  4069be:	data16 out 0x71,al
  4069c1:	pop    edx
  4069c2:	sub    al,0x53
  4069c4:	add    BYTE PTR [edx],bl
  4069c6:	pavgw  mm0,mm7
  4069c9:	dec    esi
  4069ca:	daa    
  4069cb:	push   ebx
  4069cc:	icebp  
  4069cd:	cwde   
  4069ce:	jmp    0x4069d3
  4069d0:	inc    edi
  4069d1:	or     ch,cl
  4069d3:	or     DWORD PTR [edi+0x4f],ebx
  4069d6:	pop    esp
  4069d7:	or     al,0xf2
  4069d9:	inc    ecx
  4069da:	mov    edi,0xe880122c
  4069df:	xchg   esp,eax
  4069e0:	jl     0x406a1d
  4069e2:	scas   al,BYTE PTR es:[edi]
  4069e3:	inc    esi
  4069e4:	or     eax,DWORD PTR [esi-0x4f]
  4069e7:	mov    dh,0x8f
  4069e9:	out    0xeb,al
  4069eb:	fist   WORD PTR [esi]
  4069ed:	jge    0x406a17
  4069ef:	in     al,dx
  4069f0:	jp     0x4069c2
  4069f2:	jns    0x4069e0
  4069f4:	xchg   edi,eax
  4069f5:	test   ebp,eax
  4069f7:	jne    0x4069df
  4069f9:	cmc    
  4069fa:	mov    esp,0x86a9c866
  4069ff:	push   DWORD PTR [edx-0x3b53c013]
  406a05:	sbb    DWORD PTR [edi+0x5b62978],edx
  406a0b:	nop
  406a0c:	inc    ecx
  406a0d:	sbb    ecx,DWORD PTR [edx+0x6832f14a]
  406a13:	out    dx,eax
  406a14:	dec    ebx
  406a15:	loop   0x406a02
  406a17:	mov    esi,0x78ba475c
  406a1c:	sub    al,0x3f
  406a1e:	push   esi
  406a1f:	sbb    dl,BYTE PTR [edx+ebp*1-0x65]
  406a23:	mov    cl,0x28
  406a25:	rol    edi,cl
  406a27:	out    dx,eax
  406a28:	(bad)  
  406a29:	out    0xf1,al
  406a2b:	psubq  mm3,QWORD PTR [ebx-0x1763eede]
  406a32:	inc    esi
  406a33:	loop   0x4069b7
  406a35:	daa    
  406a36:	pop    es
  406a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a38:	stos   DWORD PTR es:[edi],eax
  406a39:	fild   DWORD PTR [esi-0x57]
  406a3c:	add    eax,0x47bc88d5
  406a41:	popa   
  406a42:	push   es
  406a43:	pop    ss
  406a44:	call   0xfe54:0x50b57142
  406a4b:	shl    DWORD PTR [edi],0xef
  406a4e:	cs callw 0x5d2e
  406a53:	mov    edi,0x783d97aa
  406a58:	lock enter 0xe2dd,0xd9
  406a5d:	pop    edi
  406a5e:	sub    eax,0x50a5a11e
  406a63:	xchg   ebp,eax
  406a64:	dec    eax
  406a65:	pop    ebx
  406a66:	push   esi
  406a67:	jns    0x406abc
  406a69:	push   ebx
  406a6a:	push   ds
  406a6b:	xor    dh,ch
  406a6d:	or     eax,0x37bad1d7
  406a72:	sub    ebx,DWORD PTR [ebx+0x62]
  406a75:	sbb    DWORD PTR [edx+ecx*2-0x38],eax
  406a79:	mov    ebx,0xa3a391a7
  406a7e:	xor    cl,bl
  406a80:	mov    ch,0x32
  406a82:	pop    esp
  406a83:	or     BYTE PTR [ebx],bh
  406a85:	mov    ds:0x57793137,al
  406a8a:	sub    bl,bl
  406a8c:	sub    al,0xc4
  406a8e:	jmp    0x93a8:0x7994682d
  406a95:	xor    BYTE PTR [bp+si+0x73f1],dh
  406a9a:	(bad)  [ecx]
  406a9c:	stc    
  406a9d:	mov    DWORD PTR [esi+0x2510e79a],ebx
  406aa3:	in     eax,dx
  406aa4:	hlt    
  406aa5:	out    dx,al
  406aa6:	sub    al,0x5e
  406aa8:	inc    edx
  406aa9:	push   eax
  406aaa:	out    dx,eax
  406aab:	out    0x71,al
  406aad:	das    
  406aae:	fld    DWORD PTR [ecx-0x2e61f085]
  406ab4:	rol    BYTE PTR [ebx],cl
  406ab6:	loope  0x406a7f
  406ab8:	jae    0x406b19
  406aba:	pop    ecx
  406abb:	mov    al,ds:0x2a5275bd
  406ac0:	scas   al,BYTE PTR es:[edi]
  406ac1:	adc    esp,0x71583185
  406ac7:	adc    al,0x1d
  406ac9:	xchg   esp,eax
  406aca:	mov    edx,0x17c4b4a8
  406acf:	mov    ebp,0x1d28ee4e
  406ad4:	in     al,0xc4
  406ad6:	(bad)  
  406ad7:	or     al,0x9
  406ad9:	pop    esi
  406ada:	rcl    DWORD PTR [edx],1
  406adc:	inc    edx
  406add:	sub    eax,0x23547e04
  406ae2:	cmp    DWORD PTR [esi-0x35],edi
  406ae5:	cmp    al,0x5c
  406ae7:	pop    edi
  406ae8:	and    DWORD PTR [ebx],0x7c
  406aeb:	inc    ecx
  406aec:	dec    eax
  406aed:	jo     0x406a91
  406aef:	inc    esi
  406af0:	dec    ebx
  406af1:	add    edi,edi
  406af3:	push   cs
  406af4:	(bad)  
  406af6:	or     DWORD PTR [esi],0x33ddafe7
  406afc:	sbb    DWORD PTR [ebx-0x442003e1],edx
  406b02:	hlt    
  406b03:	(bad)  
  406b04:	mov    al,0x74
  406b06:	aas    
  406b07:	cld    
  406b08:	adc    al,0xb1
  406b0a:	pusha  
  406b0b:	pop    ecx
  406b0c:	push   ds
  406b0d:	rol    edi,1
  406b0f:	hlt    
  406b10:	mov    esp,0xbdfdde6b
  406b15:	test   DWORD PTR [ebp+0x782ad9ff],0x8fab313c
  406b1f:	hlt    
  406b20:	fisubr WORD PTR [eax-0x46]
  406b23:	push   esp
  406b24:	shr    DWORD PTR [ecx],0x53
  406b27:	test   DWORD PTR [edx],esi
  406b29:	xor    dh,dl
  406b2b:	inc    ebx
  406b2c:	ins    DWORD PTR es:[edi],dx
  406b2d:	ss xor al,0x9b
  406b30:	dec    esp
  406b31:	mov    bl,0x8d
  406b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b34:	mov    ebx,esi
  406b36:	out    dx,al
  406b37:	mov    edx,DWORD PTR [edi+0x328e0fa]
  406b3d:	jmp    DWORD PTR [ecx]
  406b3f:	loopne 0x406acf
  406b41:	in     eax,dx
  406b42:	retf   0xc0c8
  406b45:	jg     0x406b45
  406b47:	cmp    cl,BYTE PTR [ebp+0x1f2eb039]
  406b4d:	push   0x3facbd2f
  406b52:	adc    eax,0x24b3f809
  406b57:	ss aaa 
  406b59:	xor    al,0x5a
  406b5b:	mov    ebx,0x17f4c2a4
  406b60:	mov    al,0xb8
  406b62:	mov    al,0xca
  406b64:	loop   0x406b87
  406b66:	lods   eax,DWORD PTR ds:[esi]
  406b67:	or     ah,0xc3
  406b6a:	adc    BYTE PTR [eax+0xe],dl
  406b6d:	jno    0x406af9
  406b6f:	pop    edx
  406b70:	nop
  406b71:	jg     0x406bea
  406b73:	sub    eax,0xdab5d1be
  406b78:	cmp    DWORD PTR [edx-0x1692200],edi
  406b7e:	jnp    0x406bb3
  406b80:	(bad)  
  406b81:	and    DWORD PTR [edi+ebx*2-0x7ac1e1e9],ecx
  406b88:	outs   dx,BYTE PTR ds:[esi]
  406b89:	sti    
  406b8a:	mov    ah,0x9b
  406b8c:	jmp    0x406be1
  406b8e:	adc    eax,0xef9978d0
  406b93:	pop    esp
  406b94:	mov    ah,0x6
  406b96:	add    esi,DWORD PTR [ecx]
  406b98:	test   eax,0x28cef791
  406b9d:	jge    0x406bc4
  406b9f:	cmp    DWORD PTR [ebx],ecx
  406ba1:	fidiv  WORD PTR [ebx]
  406ba3:	sub    eax,0x3f8e184
  406ba8:	ins    BYTE PTR es:[edi],dx
  406ba9:	(bad)  
  406baa:	out    0xda,eax
  406bac:	out    0x66,eax
  406bae:	iret   
  406baf:	adc    al,0x12
  406bb1:	jnp    0x406b35
  406bb3:	rcl    BYTE PTR [eax],1
  406bb5:	cwde   
  406bb6:	xor    bl,BYTE PTR [ebp-0x5cfef756]
  406bbc:	shr    esi,cl
  406bbe:	sbb    edx,DWORD PTR [esi+0x7b]
  406bc1:	iret   
  406bc2:	jl     0x406b5a
  406bc4:	add    DWORD PTR [edi+ebx*2+0x30],ebp
  406bc8:	push   0x17
  406bca:	jmp    FWORD PTR [ebp+ebp*4+0x76]
  406bce:	jecxz  0x406bb9
  406bd0:	in     eax,0x12
  406bd2:	mov    bl,0xdc
  406bd4:	rcl    DWORD PTR [ebp+0x21],cl
  406bd7:	inc    edi
  406bd8:	xor    DWORD PTR ds:0x75d82f68,eax
  406bde:	or     DWORD PTR [ecx-0x3872ede3],edi
  406be4:	jo     0x406c22
  406be6:	repnz mov eax,fs:0x71a6d593
  406bed:	call   0x4430:0x618f7ecd
  406bf4:	fcom   DWORD PTR [eax]
  406bf6:	push   es
  406bf7:	push   ss
  406bf8:	inc    esp
  406bf9:	push   edx
  406bfa:	add    bh,bh
  406bfc:	scas   eax,DWORD PTR es:[edi]
  406bfd:	ficomp WORD PTR [ebx+0x90f198c]
  406c03:	pop    eax
  406c04:	mov    dh,0xb3
  406c06:	and    DWORD PTR [ebx+0x63143dd7],edx
  406c0c:	outs   dx,DWORD PTR ds:[esi]
  406c0d:	outs   dx,BYTE PTR ds:[esi]
  406c0e:	stos   BYTE PTR es:[edi],al
  406c0f:	ret    0xeb4e
  406c12:	into   
  406c13:	call   0x8ff8935e
  406c18:	fcmovb st,st(1)
  406c1a:	sahf   
  406c1b:	dec    esp
  406c1c:	or     al,0x9c
  406c1e:	sbb    eax,0xaf0763e8
  406c23:	sbb    BYTE PTR [edi-0x71008509],bl
  406c29:	sbb    bh,BYTE PTR gs:0x53b13325
  406c30:	or     al,0x6e
  406c32:	mov    al,ds:0xfa4c81a8
  406c37:	hlt    
  406c38:	dec    esp
  406c39:	mov    ecx,0xa9bedf48
  406c3e:	sbb    al,0xd0
  406c40:	fs push cs
  406c42:	into   
  406c43:	std    
  406c44:	lods   eax,DWORD PTR ds:[esi]
  406c45:	mov    ch,0xc9
  406c47:	or     BYTE PTR [edx+0x17593d0f],ah
  406c4d:	test   DWORD PTR [edi],esp
  406c4f:	pop    ss
  406c50:	add    esi,DWORD PTR [eax+0x43b58670]
  406c56:	inc    esi
  406c57:	(bad)  
  406c58:	xor    al,0xe0
  406c5a:	xchg   esi,eax
  406c5b:	shrd   edi,esp,0xd0
  406c5f:	clc    
  406c60:	loope  0x406c1c
  406c62:	and    BYTE PTR [ecx+esi*2+0x1bd11778],0x12
  406c6a:	or     al,0x84
  406c6c:	jl     0x406c9b
  406c6e:	inc    DWORD PTR [edx+0x11d5ecd5]
  406c74:	jns    0x406c97
  406c76:	aas    
  406c77:	push   edi
  406c78:	cmp    al,0x5f
  406c7a:	ja     0x406cc4
  406c7c:	push   0x58
  406c7e:	mov    ebp,0xf3290366
  406c83:	test   eax,0x65164548
  406c88:	and    BYTE PTR [ebx+eax*2-0x9298b0c],0x45
  406c90:	push   esi
  406c91:	dec    eax
  406c92:	add    ebp,esp
  406c94:	jns    0x406d00
  406c96:	ins    BYTE PTR es:[edi],dx
  406c97:	pop    eax
  406c98:	xlat   BYTE PTR ds:[ebx]
  406c99:	jg     0x406c4d
  406c9b:	stc    
  406c9c:	(bad)  
  406c9e:	in     al,0xe5
  406ca0:	cmc    
  406ca1:	mov    dl,0xca
  406ca3:	mov    cl,0x8e
  406ca5:	jge    0x406cdb
  406ca7:	aam    0x9c
  406ca9:	rcr    DWORD PTR [eax+ebp*1-0x54830859],cl
  406cb0:	cmp    eax,0xd89b17b0
  406cb5:	jno    0x406cf7
  406cb7:	add    ch,cl
  406cb9:	adc    DWORD PTR [ecx+0x70a55a2f],eax
  406cbf:	inc    esi
  406cc0:	fnstcw WORD PTR [eax-0x4e]
  406cc3:	sbb    al,0x9a
  406cc5:	jg     0x406c92
  406cc7:	or     ah,BYTE PTR [ecx]
  406cc9:	fisub  WORD PTR [edi+0x31]
  406ccc:	int    0x5f
  406cce:	inc    ecx
  406ccf:	ret    
  406cd0:	loopne 0x406cbb
  406cd2:	add    DWORD PTR [eax],edx
  406cd4:	ret    0xc540
  406cd7:	lahf   
  406cd8:	xor    bh,BYTE PTR [ebx]
  406cda:	mov    edx,0xa2ac6a64
  406cdf:	ret    
  406ce0:	push   edi
  406ce1:	mov    esi,0x95d135e9
  406ce6:	daa    
  406ce7:	ja     0x406d05
  406ce9:	aaa    
  406cea:	dec    ebp
  406ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cec:	or     BYTE PTR [ebx],al
  406cee:	sub    edx,DWORD PTR [edi-0x34a6fa62]
  406cf4:	cmp    BYTE PTR [ecx],dl
  406cf6:	inc    esp
  406cf7:	int    0xa9
  406cf9:	clc    
  406cfa:	push   esp
  406cfb:	adc    eax,ecx
  406cfd:	inc    esp
  406cfe:	cmp    bh,dh
  406d00:	sar    DWORD PTR [eax-0x57],0xb3
  406d04:	lahf   
  406d05:	sub    al,0xdc
  406d07:	or     BYTE PTR [esi-0x4d240218],bl
  406d0d:	xor    eax,0xd69b433e
  406d12:	nop
  406d13:	or     ah,cl
  406d15:	xchg   ebp,eax
  406d16:	(bad)  
  406d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d18:	(bad)  [ebx]
  406d1a:	ja     0x406d20
  406d1c:	mov    edi,0xb4e9257e
  406d21:	xor    eax,0x308829a2
  406d26:	jno    0x406cc8
  406d28:	inc    ebx
  406d29:	dec    edx
  406d2a:	sbb    DWORD PTR [ebp+0xf6a1c60],ebx
  406d30:	pop    ebp
  406d31:	mov    esi,0x34f2fdfe
  406d36:	aaa    
  406d37:	dec    eax
  406d38:	pop    esp
  406d39:	rol    DWORD PTR [esi-0x23e3feb4],cl
  406d3f:	mov    ebx,0x4a34cdfa
  406d44:	pop    ds
  406d45:	xchg   edx,eax
  406d46:	and    BYTE PTR [ecx],cl
  406d48:	in     eax,0xab
  406d4a:	xor    bh,BYTE PTR [ecx-0x43d6305b]
  406d50:	inc    esp
  406d51:	loop   0x406d67
  406d53:	adc    cl,BYTE PTR [esi+eiz*2+0x4fcb5c29]
  406d5a:	scas   al,BYTE PTR es:[edi]
  406d5b:	loopne 0x406d9f
  406d5d:	iret   
  406d5e:	jae    0x406dde
  406d60:	imul   esp,DWORD PTR ds:0xa430f55e,0xf521c4b4
  406d6a:	push   ebx
  406d6b:	cwde   
  406d6c:	aad    0xd3
  406d6e:	les    esi,FWORD PTR [ebx+0x28]
  406d71:	clc    
  406d72:	sub    eax,0x63cc4b29
  406d77:	add    ecx,DWORD PTR [ecx]
  406d79:	cmp    esp,DWORD PTR [ebx+0x18]
  406d7c:	outs   dx,DWORD PTR ds:[esi]
  406d7d:	pop    DWORD PTR gs:[edi+ebx*8+0xdac47b6]
  406d85:	imul   ebp,DWORD PTR cs:[esi+0x6c406cd1],0x804f2bc7
  406d90:	mov    bh,0x2d
  406d92:	mov    ch,0x92
  406d94:	call   0xad99a896
  406d99:	call   0xa6c9f23b
  406d9e:	out    dx,al
  406d9f:	sqrtps xmm0,xmm3
  406da2:	pop    edi
  406da3:	jbe    0x406da1
  406da5:	sbb    dh,al
  406da7:	sahf   
  406da8:	pop    ecx
  406da9:	xor    al,0x5a
  406dab:	push   0x26650ac3
  406db0:	or     eax,0x6a9cbeff
  406db5:	mov    WORD PTR [ecx-0x1b],ds
  406db8:	imul   edi,DWORD PTR [eax],0x445ece50
  406dbe:	adc    edi,DWORD PTR [edx*1-0x491cc0c1]
  406dc5:	inc    edi
  406dc6:	test   al,0x6c
  406dc8:	add    BYTE PTR fs:[ebp-0x5223dd69],dh
  406dcf:	loope  0x406daa
  406dd1:	pushf  
  406dd2:	adc    BYTE PTR [edx-0x2f],bl
  406dd5:	adc    dh,BYTE PTR [eax]
  406dd7:	out    dx,eax
  406dd8:	pusha  
  406dd9:	leave  
  406dda:	cmp    eax,0x5408955c
  406ddf:	mov    al,0x64
  406de1:	add    eax,0x74230110
  406de6:	aas    
  406de7:	cmp    cl,BYTE PTR [ecx-0x62]
  406dea:	popf   
  406deb:	bound  di,DWORD PTR [ebp-0x59]
  406def:	lods   eax,DWORD PTR ds:[esi]
  406df0:	or     ebx,DWORD PTR [ebp-0x20f359e4]
  406df6:	(bad)  
  406df7:	xor    DWORD PTR [edi+0x7c63ca8],esp
  406dfd:	into   
  406dfe:	inc    edx
  406dff:	addr16 xor ecx,edi
  406e02:	ret    
  406e03:	sbb    al,0x41
  406e05:	out    0x26,al
  406e07:	lods   eax,DWORD PTR ds:[esi]
  406e08:	rcr    DWORD PTR [ebp-0x59],1
  406e0b:	mov    edi,DWORD PTR [ecx+edx*8+0x57]
  406e0f:	mov    ebx,0x228d56e8
  406e14:	fldcw  WORD PTR [edx-0x764becca]
  406e1a:	pop    esi
  406e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e1c:	pop    ebp
  406e1d:	push   0x2b
  406e1f:	jl     0x406e5e
  406e21:	mov    dl,0xa7
  406e23:	cdq    
  406e24:	mov    eax,ds:0x75edfb7
  406e29:	cmc    
  406e2a:	push   ss
  406e2b:	cmp    dl,bl
  406e2d:	leave  
  406e2e:	fistp  QWORD PTR ds:0xb87f3898
  406e34:	sbb    edx,DWORD PTR [ebp-0x44255fa5]
  406e3a:	cwde   
  406e3b:	(bad)  
  406e3d:	or     eax,0xcf42f3f6
  406e42:	sub    eax,0x87b6b462
  406e47:	inc    esi
  406e48:	dec    esp
  406e49:	ror    BYTE PTR [edi+0x31],0x59
  406e4d:	cmc    
  406e4e:	js     0x406e6a
  406e50:	pop    ss
  406e51:	pushfw 
  406e53:	setl   ah
  406e56:	xchg   ebx,eax
  406e57:	pop    edx
  406e58:	or     al,0xda
  406e5a:	push   ebp
  406e5b:	sub    dh,BYTE PTR [eax-0x7b]
  406e5e:	repz cmp BYTE PTR [edi+ebx*4],al
  406e62:	mov    cl,0xc7
  406e64:	mov    dx,0x5fee
  406e68:	stos   DWORD PTR es:[edi],eax
  406e69:	pop    esp
  406e6a:	aam    0xe5
  406e6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e6d:	xor    eax,0xdc2374df
  406e72:	pop    ss
  406e73:	mov    WORD PTR ds:0xc7534956,?
  406e79:	push   esi
  406e7a:	jecxz  0x406ea7
  406e7c:	jmp    0x116f92b8
  406e81:	add    BYTE PTR [eax+0x4862fefb],al
  406e87:	xchg   ebp,eax
  406e88:	xchg   DWORD PTR [eax],ebx
  406e8a:	idiv   BYTE PTR [edi-0x1a295b05]
  406e90:	cwde   
  406e91:	stos   BYTE PTR es:[edi],al
  406e92:	icebp  
  406e93:	push   esi
  406e94:	mov    ah,0x54
  406e96:	(bad)  
  406e97:	arpl   WORD PTR [eax+0x229a9db2],dx
  406e9d:	inc    eax
  406e9e:	fidiv  DWORD PTR [ebx]
  406ea0:	inc    eax
  406ea1:	mov    ds:0xc20f5232,eax
  406ea6:	and    dl,dh
  406ea8:	pop    ebx
  406ea9:	inc    esp
  406eaa:	jle    0x406e74
  406eac:	mov    BYTE PTR [ebp+ebx*4+0x16],0x15
  406eb1:	aad    0x67
  406eb3:	shl    dl,0x18
  406eb6:	ins    DWORD PTR es:[edi],dx
  406eb7:	test   al,0xf8
  406eb9:	adc    BYTE PTR [edx-0x52],bh
  406ebc:	std    
  406ebd:	sbb    ebx,DWORD PTR [edx]
  406ebf:	push   ebx
  406ec0:	arpl   dx,si
  406ec2:	dec    ebx
  406ec3:	loope  0x406ed8
  406ec5:	adc    al,0x9e
  406ec7:	and    cl,0x39
  406eca:	pop    ds
  406ecb:	xor    dh,BYTE PTR [eax+0x215bb56f]
  406ed1:	fcom   st(7)
  406ed3:	call   0xfd49:0x7fe4de11
  406eda:	dec    esi
  406edb:	hlt    
  406edc:	lods   al,BYTE PTR ds:[esi]
  406edd:	mov    esp,0xde1dbf9e
  406ee2:	(bad)  
  406ee3:	cmp    ch,dl
  406ee5:	fwait
  406ee6:	xchg   esp,eax
  406ee7:	pop    eax
  406ee8:	adc    BYTE PTR [esi-0x7e],0xb0
  406eec:	pusha  
  406eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eee:	pop    eax
  406eef:	cmp    BYTE PTR [edi+ebp*1+0x6d55e4f8],al
  406ef6:	adc    ch,BYTE PTR [edi-0x2f44a8a3]
  406efc:	pop    ss
  406efd:	pop    ebp
  406efe:	or     eax,0xac3a0fd9
  406f03:	add    cl,BYTE PTR [ebx+0x6d63d071]
  406f09:	retf   
  406f0a:	imul   esi,edx,0x99192040
  406f10:	pop    ecx
  406f11:	jb     0x406f23
  406f13:	push   0x1d
  406f15:	push   esp
  406f16:	enter  0x4d3e,0x45
  406f1a:	aam    0x4a
  406f1c:	jns    0x406e9f
  406f1e:	aas    
  406f1f:	sbb    BYTE PTR [eax-0x7686347d],dh
  406f25:	ficomp WORD PTR [ebx-0x12749982]
  406f2b:	sbb    dh,cl
  406f2d:	pop    ebp
  406f2e:	mov    ebx,0x5b18249a
  406f33:	xchg   ebp,eax
  406f34:	(bad)  
  406f35:	loop   0x406f07
  406f37:	daa    
  406f38:	push   esi
  406f39:	mov    WORD PTR ds:0x6237ec15,ss
  406f3f:	add    ecx,DWORD PTR [ecx+0x75bed23b]
  406f45:	push   0x65
  406f47:	and    ebp,DWORD PTR [ecx+0x39]
  406f4a:	pop    eax
  406f4b:	dec    ecx
  406f4c:	cmc    
  406f4d:	scas   al,BYTE PTR es:[edi]
  406f4e:	sub    al,0xc4
  406f50:	xchg   esi,eax
  406f51:	jae    0x406fba
  406f53:	adc    ebp,eax
  406f55:	ret    0x8728
  406f58:	inc    esp
  406f59:	leave  
  406f5a:	sub    ah,BYTE PTR [eax-0x47]
  406f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f5e:	mov    bh,0x58
  406f60:	sbb    dh,ah
  406f62:	dec    esi
  406f63:	xchg   ebp,eax
  406f64:	cwde   
  406f65:	out    dx,al
  406f66:	jecxz  0x406f6a
  406f68:	sub    BYTE PTR [edx+0x5f],ah
  406f6b:	inc    esp
  406f6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f6d:	pop    esi
  406f6e:	xchg   ebx,eax
  406f6f:	int    0x5b
  406f71:	ja     0x406f2a
  406f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f74:	inc    edx
  406f75:	in     eax,dx
  406f76:	jbe    0x406fce
  406f78:	sub    DWORD PTR [edi-0x138c767b],0xb
  406f7f:	pop    esi
  406f80:	mov    cl,0x8c
  406f82:	(bad)  
  406f83:	xor    al,0xf9
  406f85:	daa    
  406f86:	call   0xd94a0aec
  406f8b:	mov    DWORD PTR ds:0xab22867f,ecx
  406f91:	inc    ebp
  406f92:	dec    ebp
  406f93:	sbb    cl,BYTE PTR [ebp-0x29]
  406f96:	mov    esi,0x2b1a8ccf
  406f9b:	call   0xf3f1:0xbb9b1834
  406fa2:	shl    BYTE PTR [esi-0x39e4460f],cl
  406fa8:	int3   
  406fa9:	and    al,0x98
  406fab:	push   ebx
  406fac:	out    dx,al
  406fad:	fidiv  DWORD PTR [ebp-0x31a31cde]
  406fb3:	adc    esi,eax
  406fb5:	ins    DWORD PTR es:[edi],dx
  406fb6:	test   DWORD PTR [esi],ecx
  406fb8:	mov    DWORD PTR [ecx+0x34e04af1],eax
  406fbe:	cli    
  406fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fc0:	adc    cl,dh
  406fc2:	mov    esi,0x7a1ba3a
  406fc7:	dec    ecx
  406fc8:	dec    ecx
  406fc9:	pusha  
  406fca:	adc    DWORD PTR [ebx-0xe],0x6d4514dc
  406fd1:	jnp    0x406f5e
  406fd3:	jmp    0xdf50ba53
  406fd8:	retf   
  406fd9:	stc    
  406fda:	cmc    
  406fdb:	outs   dx,BYTE PTR ds:[esi]
  406fdc:	xchg   ecx,edi
  406fde:	mov    WORD PTR [esi-0x6bb33bec],ds
  406fe4:	in     al,dx
  406fe5:	jmp    0xc641:0x2df5f244
  406fec:	pop    ebx
  406fed:	xchg   edx,eax
  406fee:	mov    ds:0x2101c9c9,al
  406ff3:	xor    eax,0xba269186
  406ff8:	retf   0x6deb
  406ffb:	mov    ds:0xbe324b2c,al
  407000:	jnp    0x406f95
  407002:	mov    ebx,0x77e8a494
  407007:	mov    bh,0x69
  407009:	cmp    edi,ebx
  40700b:	fimul  WORD PTR [ecx-0x1815a306]
  407011:	bound  eax,QWORD PTR [ebx+ecx*4]
  407014:	int    0x34
  407016:	and    al,0x60
  407018:	mov    ds:0x84dc7eaf,al
  40701d:	inc    edx
  40701e:	das    
  40701f:	add    DWORD PTR ds:0xda05bc78,ecx
  407025:	(bad)  
  407027:	cmp    cl,BYTE PTR [edx-0x46]
  40702a:	sub    eax,0x2fe0056b
  40702f:	mov    edx,DWORD PTR [esi]
  407031:	sar    ebp,cl
  407033:	ret    0xcce5
  407036:	and    ecx,ebx
  407038:	stos   DWORD PTR es:[edi],eax
  407039:	add    ah,BYTE PTR [eax]
  40703b:	ins    BYTE PTR es:[edi],dx
  40703c:	mov    edi,esi
  40703e:	enter  0x5e77,0x92
  407042:	pop    es
  407043:	sub    DWORD PTR [ebx],ecx
  407045:	mov    eax,0xed3a0e8
  40704a:	inc    ebx
  40704b:	loopne 0x4070b3
  40704d:	inc    esi
  40704e:	hlt    
  40704f:	daa    
  407050:	ds inc edx
  407052:	xor    dl,dh
  407054:	imul   edi,DWORD PTR [ecx+0x4d],0x7372e811
  40705b:	push   es
  40705c:	cdq    
  40705d:	fadd   DWORD PTR [edi]
  40705f:	dec    edx
  407060:	ja     0x407053
  407062:	ins    BYTE PTR es:[edi],dx
  407063:	gs test ax,0x5e12
  407068:	test   ecx,ecx
  40706a:	and    ebx,DWORD PTR [ebx+0x4edee6e1]
  407070:	jbe    0x407067
  407072:	mov    ecx,0x952f3835
  407077:	push   0xffffffc7
  407079:	cdq    
  40707a:	cmp    DWORD PTR [esi],0xd10d2ba4
  407080:	aas    
  407081:	mov    esi,DWORD PTR [ebp+ebp*1+0x1d]
  407085:	mov    esp,0xbc89ed5c
  40708a:	add    dl,BYTE PTR [edx+0x12]
  40708d:	out    dx,al
  40708e:	pop    ebp
  40708f:	push   cs
  407090:	cdq    
  407091:	stos   DWORD PTR es:[edi],eax
  407092:	fwait
  407093:	(bad)  
  407094:	adc    eax,eax
  407096:	or     DWORD PTR [ebx+eiz*8+0x3319022b],esi
  40709d:	and    eax,edi
  40709f:	in     al,dx
  4070a0:	push   0x21529271
  4070a5:	pushw  0xeb93
  4070a9:	fs cdq 
  4070ab:	cmovbe sp,WORD PTR [ebx-0x363a4e1c]
  4070b3:	test   eax,0x3074f83e
  4070b8:	les    ebx,FWORD PTR [ebp+0x1e64f037]
  4070be:	push   0xffffff8f
  4070c0:	push   ebp
  4070c1:	push   ss
  4070c2:	jbe    0x4070a7
  4070c4:	sbb    BYTE PTR cs:[edx],al
  4070c7:	shl    esi,cl
  4070c9:	das    
  4070ca:	push   ebx
  4070cb:	xchg   edi,eax
  4070cc:	sub    esp,DWORD PTR [eax]
  4070ce:	sbb    cl,BYTE PTR [ecx+0x1e6f7d5d]
  4070d4:	lahf   
  4070d5:	inc    BYTE PTR [ecx+0x29]
  4070d8:	fsubr  QWORD PTR [esi-0x3b]
  4070db:	sub    esi,ecx
  4070dd:	in     al,0xd5
  4070df:	mov    ebp,0x89534fc2
  4070e4:	stc    
  4070e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070e6:	cmp    al,0xbe
  4070e8:	add    eax,0x82967a8
  4070ed:	push   ebx
  4070ee:	popf   
  4070ef:	ins    BYTE PTR es:[edi],dx
  4070f0:	inc    ecx
  4070f1:	ret    0xb471
  4070f4:	jge    0x4070ac
  4070f6:	pop    edi
  4070f7:	and    DWORD PTR [ebp-0x7dfbb1e8],ecx
  4070fd:	icebp  
  4070fe:	push   es
  4070ff:	xor    al,0x45
  407101:	sbb    al,0xd6
  407103:	faddp  st(1),st
  407105:	and    ah,BYTE PTR [eax+0x3fa4946e]
  40710b:	mov    ebp,0x62ce5022
  407110:	aas    
  407111:	adc    bh,BYTE PTR [ebx+ebx*8+0x2536b02]
  407118:	test   DWORD PTR [ecx+esi*2+0x37],esi
  40711c:	dec    ebp
  40711d:	data16 fs ds jne 0x4070c6
  407122:	retf   
  407123:	adc    esp,edi
  407125:	cmc    
  407126:	xor    DWORD PTR [eax],ecx
  407128:	cwde   
  407129:	(bad)  
  40712b:	fdiv   st(3),st
  40712d:	fisub  DWORD PTR [ebx+eiz*2-0x1db7742e]
  407134:	neg    DWORD PTR [eax-0x38]
  407137:	mov    bl,0x39
  407139:	xchg   BYTE PTR [ebx-0x2386ff31],ch
  40713f:	mov    ds:0x9f6615ca,al
  407144:	xchg   edx,eax
  407145:	xor    DWORD PTR [edx-0x66],ecx
  407148:	scas   al,BYTE PTR es:[edi]
  407149:	int3   
  40714a:	out    dx,eax
  40714b:	test   BYTE PTR [edx],dl
  40714d:	ins    BYTE PTR es:[edi],dx
  40714e:	xlat   BYTE PTR ds:[ebx]
  407150:	xchg   edi,eax
  407151:	jb     0x40710b
  407153:	sti    
  407154:	mov    eax,0x215a9396
  407159:	enter  0xb3e1,0xe8
  40715d:	test   al,0x1a
  40715f:	mov    al,ds:0xe7ef64d6
  407164:	mov    edi,0xd13dd91a
  407169:	stos   BYTE PTR es:[edi],al
  40716a:	add    bh,BYTE PTR [edi*1+0x6e57e5bc]
  407171:	pop    edi
  407172:	es cmp dl,0xf5
  407176:	mov    ?,esi
  407178:	inc    esp
  407179:	lds    edx,FWORD PTR [esp+ebx*4-0x11a259b9]
  407180:	xor    BYTE PTR [edx],0x93
  407183:	aas    
  407184:	mov    cl,0xc7
  407186:	cmp    cl,BYTE PTR [eax]
  407188:	add    BYTE PTR [ecx-0x46],dl
  40718b:	sbb    edx,0x27b6a9f0
  407191:	add    BYTE PTR [ebp+0x64eeeff8],al
  407197:	xchg   esp,eax
  407198:	sbb    esi,ebx
  40719a:	cld    
  40719b:	retf   
  40719c:	scas   al,BYTE PTR es:[edi]
  40719d:	xchg   edx,eax
  40719e:	repz jns 0x407172
  4071a1:	into   
  4071a2:	lods   al,BYTE PTR ds:[esi]
  4071a3:	mov    cl,0xd5
  4071a5:	mov    ?,eax
  4071a7:	fist   WORD PTR [ecx-0x2e]
  4071aa:	pop    esi
  4071ab:	mov    ds:0x1bf1967c,al
  4071b0:	shr    BYTE PTR [edi],0x13
  4071b3:	pop    esi
  4071b4:	outs   dx,BYTE PTR ds:[esi]
  4071b5:	jne    0x4071f4
  4071b7:	mov    eax,ds:0x527b0c59
  4071bc:	mov    ds:0x4e7c2c6a,eax
  4071c1:	idiv   ch
  4071c3:	ins    BYTE PTR es:[edi],dx
  4071c4:	lods   eax,DWORD PTR ds:[esi]
  4071c5:	push   ss
  4071c6:	inc    edx
  4071c7:	jle    0x40721d
  4071c9:	jge    0x407206
  4071cb:	stos   BYTE PTR es:[edi],al
  4071cc:	inc    esi
  4071cd:	cli    
  4071ce:	ins    DWORD PTR es:[edi],dx
  4071cf:	mov    esi,0x7c6e49eb
  4071d4:	and    cl,cl
  4071d6:	pop    edi
  4071d7:	(bad)  
  4071d8:	shl    BYTE PTR [edi+ebx*4+0x6c5ff7a2],0x8d
  4071e0:	arpl   WORD PTR [esi-0x22053d05],di
  4071e6:	push   cs
  4071e7:	adc    DWORD PTR [esi],0xffffffd8
  4071ea:	push   ds
  4071eb:	clc    
  4071ec:	or     al,0xed
  4071ee:	xlat   BYTE PTR ds:[ebx]
  4071ef:	mov    ds:0x8a419d8d,al
  4071f4:	mov    esp,0xa672730f
  4071f9:	or     al,0x39
  4071fb:	xchg   ebp,eax
  4071fc:	mov    cl,0xa1
  4071fe:	jns    0x407248
  407200:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407202:	mov    al,0xf1
  407204:	std    
  407205:	dec    esp
  407206:	add    ah,BYTE PTR [edi-0x2791b966]
  40720c:	mov    eax,0xccd66fa0
  407211:	enter  0x2803,0x5e
  407215:	fwait
  407216:	jle    0x4071f3
  407218:	nop
  407219:	ds xchg ecx,eax
  40721b:	fdiv   QWORD PTR [ebp+ebx*2+0x66]
  40721f:	scas   al,BYTE PTR es:[edi]
  407220:	push   edx
  407221:	pop    ecx
  407222:	xchg   BYTE PTR [ecx+0x5b],dh
  407225:	call   0x52da:0x64102650
  40722c:	ror    cl,cl
  40722e:	lds    edx,FWORD PTR [edx-0x2f]
  407231:	jb     0x407251
  407233:	mov    esi,eax
  407235:	outs   dx,DWORD PTR ds:[esi]
  407236:	jno    0x407279
  407238:	jecxz  0x4071c9
  40723a:	scas   al,BYTE PTR es:[edi]
  40723b:	sbb    DWORD PTR [edx+0x25],ebx
  40723e:	push   cs
  40723f:	jge    0x4071cd
  407241:	jbe    0x4071fb
  407243:	and    BYTE PTR [ebx-0x25],bh
  407246:	mov    eax,0xbff0982d
  40724b:	jb     0x407268
  40724d:	and    al,0x5b
  40724f:	sbb    BYTE PTR [eax+0x10],dh
  407252:	xchg   ecx,eax
  407253:	cdq    
  407254:	push   0xf5960815
  407259:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40725b:	(bad)  
  40725d:	loop   0x407200
  40725f:	xor    DWORD PTR [ebx+0x3a],ebx
  407262:	and    ebx,ecx
  407264:	loope  0x4072bc
  407266:	sbb    ch,BYTE PTR [eax]
  407268:	inc    ecx
  407269:	call   0xc3bdd3a0
  40726e:	adc    al,0xb8
  407270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407271:	ja     0x407212
  407273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407274:	jns    0x40727d
  407276:	pop    es
  407277:	adc    ebx,DWORD PTR [edx-0x22ce61d8]
  40727d:	push   eax
  40727e:	sar    DWORD PTR ds:0xc50efcbe,cl
  407284:	inc    ebx
  407285:	xchg   edi,eax
  407286:	bound  ecx,QWORD PTR [ecx+0x45e1f2af]
  40728c:	jg     0x40727c
  40728e:	mov    eax,ds:0x42f36481
  407293:	pushf  
  407294:	jo     0x407242
  407296:	push   es
  407297:	push   es
  407298:	cli    
  407299:	mov    dh,BYTE PTR [ecx*4-0x2d5d006c]
  4072a0:	int    0xf7
  4072a2:	aaa    
  4072a3:	pop    ecx
  4072a4:	or     bl,al
  4072a6:	sti    
  4072a7:	clc    
  4072a8:	ins    DWORD PTR es:[edi],dx
  4072a9:	inc    edi
  4072aa:	dec    eax
  4072ab:	(bad)  
  4072ac:	cmp    eax,0xa7f3677a
  4072b1:	out    0x37,al
  4072b3:	jp     0x407238
  4072b5:	jmp    0x7360be8f
  4072ba:	lock cmp BYTE PTR [eax],cl
  4072bd:	push   es
  4072be:	xchg   ebx,eax
  4072bf:	cmp    DWORD PTR [edi],eax
  4072c1:	mov    eax,ds:0xc4b965c7
  4072c6:	and    bh,BYTE PTR [ebx+0x469b38f6]
  4072cc:	fld    QWORD PTR [ecx+ebx*2-0x2abf5656]
  4072d3:	imul   ebp,DWORD PTR [ecx+0x11e8b58],0x61ffc01e
  4072dd:	test   DWORD PTR [eax],0x7d8f489f
  4072e3:	mov    dh,0xb9
  4072e5:	push   es
  4072e6:	push   esp
  4072e7:	add    eax,0x92610631
  4072ec:	xchg   BYTE PTR [edi+ecx*8+0x4f],ch
  4072f0:	mov    eax,ds:0x53a1abee
  4072f5:	inc    edi
  4072f6:	nop
  4072f7:	inc    esi
  4072f8:	cmp    esi,ebp
  4072fa:	mov    ch,0x86
  4072fc:	(bad)  
  4072fd:	enter  0x40c0,0xb6
  407301:	adc    ebp,ebp
  407303:	not    esi
  407305:	scas   eax,DWORD PTR es:[edi]
  407306:	scas   al,BYTE PTR es:[edi]
  407307:	and    eax,0x8faecd04
  40730c:	rcl    eax,cl
  40730e:	lds    edx,FWORD PTR ss:[esi-0x5c05c291]
  407315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407316:	loopne 0x4072df
  407318:	mov    ah,0x3d
  40731a:	dec    esi
  40731b:	and    al,0xdf
  40731d:	dec    eax
  40731e:	adc    al,0x1d
  407320:	pop    esp
  407321:	scas   al,BYTE PTR es:[edi]
  407322:	inc    ebx
  407323:	push   ss
  407324:	mov    ch,0x74
  407326:	xor    BYTE PTR [eax-0x66044dac],0x7f
  40732d:	test   eax,0xca2e84df
  407332:	cmp    esi,DWORD PTR [edx]
  407334:	add    BYTE PTR [esp+ebx*8-0x6d7ed0fe],bh
  40733b:	push   ds
  40733c:	jae    0x407345
  40733e:	call   0xd446:0x99b9db49
  407345:	xor    esi,DWORD PTR [edi-0x28]
  407348:	mov    BYTE PTR [ecx-0x3a],0xf3
  40734c:	call   DWORD PTR [ecx+esi*4-0x31]
  407350:	popf   
  407351:	mov    dh,0xf7
  407353:	(bad)  
  407354:	jns    0x407339
  407356:	cmp    BYTE PTR [esp+edi*8-0x2c479b7c],al
  40735d:	inc    ebx
  40735e:	jmp    0x9b80:0x7fbbcff5
  407365:	(bad)  
  407366:	pop    edx
  407367:	cdq    
  407368:	hlt    
  407369:	nop
  40736a:	bound  ecx,QWORD PTR [ebx-0x23cee84d]
  407370:	std    
  407371:	fcomp  QWORD PTR [ebp+0xd]
  407374:	sub    DWORD PTR [edx],esp
  407376:	push   ds
  407377:	mov    dl,0x5d
  407379:	(bad)  
  40737a:	jecxz  0x407319
  40737c:	stc    
  40737d:	mov    dl,0x1f
  40737f:	xor    ch,BYTE PTR [eax]
  407381:	jmp    0x40734c
  407383:	sbb    eax,DWORD PTR [ecx-0x22]
  407386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407387:	test   BYTE PTR ds:0xa54b0924,dh
  40738d:	pop    ecx
  40738e:	mov    esi,0xc53cac25
  407393:	or     DWORD PTR [eax],ecx
  407395:	mov    eax,ds:0x80466fad
  40739a:	jne    0x4073cc
  40739c:	and    cl,dl
  40739e:	jb     0x407349
  4073a0:	and    ah,BYTE PTR ds:0x77533c32
  4073a6:	bound  ecx,QWORD PTR [edi+ebp*8]
  4073a9:	shr    DWORD PTR [ebx+0x606a5a68],0xea
  4073b0:	xlat   BYTE PTR ds:[ebx]
  4073b1:	dec    ecx
  4073b2:	fstp   DWORD PTR [eax-0x54]
  4073b5:	retf   0xad71
  4073b8:	push   ebx
  4073b9:	in     eax,0x77
  4073bb:	bound  eax,QWORD PTR [eax-0x33574eb7]
  4073c1:	std    
  4073c2:	call   0x5fcf:0x4afb75df
  4073c9:	push   es
  4073ca:	mov    edx,0x143d58eb
  4073cf:	xchg   esi,eax
  4073d0:	dec    ebx
  4073d1:	mov    bh,BYTE PTR [ebx]
  4073d3:	cmc    
  4073d4:	inc    ecx
  4073d5:	fiadd  WORD PTR [eax-0x1931508d]
  4073db:	ret    
  4073dc:	icebp  
  4073dd:	pop    ecx
  4073de:	into   
  4073df:	retf   0xb54e
  4073e2:	jae    0x407435
  4073e4:	stos   DWORD PTR es:[edi],eax
  4073e5:	inc    edx
  4073e6:	and    eax,DWORD PTR [ebx]
  4073e8:	mov    eax,0xf189e65
  4073ed:	or     DWORD PTR [ecx-0x7e6430ef],esi
  4073f3:	jne    0x407465
  4073f5:	not    BYTE PTR ds:0x5042c585
  4073fb:	and    esi,DWORD PTR [edx]
  4073fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073fe:	sbb    DWORD PTR cs:[edx+0x37],edx
  407402:	jl     0x4073f0
  407404:	pop    ebp
  407405:	mov    ?,ecx
  407407:	mov    DWORD PTR [ebx+0x15505e4c],0xe9703484
  407411:	test   BYTE PTR [ebp+eiz*8-0x6ee05342],bl
  407418:	call   0x4d20:0x131e2b21
  40741f:	pop    edi
  407420:	call   0xd370:0xead5cd65
  407427:	or     eax,0x7143eaaa
  40742c:	(bad)  
  40742d:	pusha  
  40742e:	enter  0x625a,0xf1
  407432:	out    0x32,eax
  407434:	mov    edx,0x400f1e08
  407439:	shr    DWORD PTR [eax],cl
  40743b:	test   al,0xea
  40743d:	push   eax
  40743e:	dec    esi
  40743f:	sbb    DWORD PTR [edi-0x1776353],0x76
  407446:	push   0x3e0c2dd9
  40744b:	je     0x40746a
  40744d:	and    al,dl
  40744f:	inc    ecx
  407450:	scas   al,BYTE PTR es:[edi]
  407451:	jp     0x40744f
  407453:	dec    ecx
  407454:	lods   eax,DWORD PTR ds:[esi]
  407455:	fdiv   QWORD PTR [eax+ecx*2-0x4dca85c7]
  40745c:	mov    ds:0x4edfab43,al
  407461:	idiv   DWORD PTR [ebp-0x4abb2f45]
  407467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407468:	adc    al,BYTE PTR [ebx+0x44]
  40746b:	iret   
  40746c:	sub    BYTE PTR [ebx-0x59099165],0xc0
  407473:	enter  0x410c,0x34
  407477:	repz adc al,0x2
  40747a:	xchg   edi,eax
  40747b:	nop
  40747c:	add    DWORD PTR [esi],eax
  40747e:	mov    esp,0x6b714c05
  407483:	xor    ecx,DWORD PTR [ebx+eiz*4+0x6c939dc1]
  40748a:	jmp    0x40740d
  40748c:	cdq    
  40748d:	push   ebp
  40748e:	popa   
  40748f:	mov    edx,0x39f3b69f
  407494:	(bad)  
  407495:	(bad)  
  407497:	(bad)  
  407498:	cmp    DWORD PTR [ebx-0x3c],esi
  40749b:	sub    dl,dl
  40749d:	xor    esp,DWORD PTR [ebx+0x1e]
  4074a0:	jmp    0x407516
  4074a2:	mov    dh,0xc0
  4074a4:	xchg   edx,eax
  4074a5:	sbb    DWORD PTR [ecx+0x61],eax
  4074a8:	xchg   ebp,eax
  4074a9:	aam    0x9b
  4074ab:	pop    ecx
  4074ac:	xchg   ebx,eax
  4074ad:	mov    eax,ds:0x6ce9b779
  4074b2:	jl     0x4074ad
  4074b4:	xor    DWORD PTR [edx],esi
  4074b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074b7:	int3   
  4074b8:	push   0xffffffd9
  4074ba:	cmp    eax,0xce800b50
  4074bf:	sub    eax,0x9356d17e
  4074c4:	xor    eax,0x2b3f02b8
  4074c9:	and    esp,DWORD PTR [edx+0x7d]
  4074cc:	icebp  
  4074cd:	sbb    eax,0xc3de4284
  4074d2:	int    0x56
  4074d4:	mov    cl,0xb2
  4074d6:	and    al,0x94
  4074d8:	push   esp
  4074d9:	scas   al,BYTE PTR es:[edi]
  4074da:	and    ah,BYTE PTR [ebx-0x7d5c022c]
  4074e0:	test   eax,0x1b20a820
  4074e5:	mov    ?,WORD PTR [edi+eiz*1-0x21672293]
  4074ec:	in     eax,dx
  4074ed:	shl    DWORD PTR ds:0x97e34d57,cl
  4074f3:	pop    ds
  4074f4:	pop    edx
  4074f5:	push   edx
  4074f6:	call   0x7a60:0x4d679847
  4074fd:	gs ret 
  4074ff:	adc    al,0x67
  407502:	test   eax,0xce152bb7
  407507:	xor    BYTE PTR [edi],0x3
  40750a:	mov    ebx,0xd71a2ccd
  40750f:	ret    0x22a7
  407512:	mov    DWORD PTR [ebx],ecx
  407514:	mov    edi,0xd6797af4
  407519:	repnz stos DWORD PTR es:[edi],eax
  40751b:	pop    esp
  40751c:	push   ss
  40751d:	call   0x24655a67
  407522:	out    dx,al
  407523:	dec    ebx
  407524:	add    bh,BYTE PTR [edx+eiz*4+0x1b]
  407528:	push   esp
  407529:	add    ah,0x68
  40752c:	dec    eax
  40752d:	out    0x61,al
  40752f:	js     0x407534
  407531:	cld    
  407532:	jp     0x40751f
  407534:	mov    esp,0x1220b978
  407539:	lahf   
  40753a:	cmp    BYTE PTR [esi],ah
  40753c:	push   edi
  40753d:	add    ecx,0x118f6da7
  407543:	mov    ecx,0x6da28c53
  407548:	ror    DWORD PTR [ecx-0x50],0x83
  40754c:	adc    al,0x86
  40754e:	sub    al,BYTE PTR ds:0x3bc138b2
  407554:	in     al,0x40
  407556:	cmc    
  407557:	push   esi
  407558:	in     eax,dx
  407559:	in     eax,dx
  40755a:	sub    esi,DWORD PTR [ebx+0x32]
  40755d:	push   es
  40755e:	xor    eax,0xdeb4c3f
  407563:	in     al,0x99
  407565:	push   ebp
  407566:	retf   0x3d4
  407569:	inc    esp
  40756a:	dec    ecx
  40756b:	call   0x87ead029
  407570:	pop    edi
  407571:	pop    ds
  407572:	les    esp,FWORD PTR ds:0xce346957
  407578:	mov    bl,0x59
  40757a:	fsub   DWORD PTR [eax+ebx*2+0x48fec209]
  407581:	xor    DWORD PTR [ebx+edi*4],0xffffffe0
  407585:	fcmovnbe st,st(6)
  407587:	push   edi
  407588:	repz or BYTE PTR [ecx-0x37865b89],ah
  40758f:	imul   esp,DWORD PTR [edi-0x16df54aa],0xffffffd9
  407596:	int    0x24
  407598:	addr16 sub eax,0xe59fc52e
  40759e:	push   es
  40759f:	or     cl,ah
  4075a1:	xor    DWORD PTR [ebp-0x43303cfe],ecx
  4075a7:	out    0xbd,al
  4075a9:	cmp    edx,DWORD PTR [esp+eax*2]
  4075ac:	pusha  
  4075ad:	or     eax,0x2510faf6
  4075b2:	in     al,0xba
  4075b4:	test   DWORD PTR [ecx-0x5e88b03c],ecx
  4075ba:	jbe    0x407573
  4075bc:	lods   eax,DWORD PTR ds:[esi]
  4075bd:	lds    eax,FWORD PTR [edx-0x4a]
  4075c0:	or     al,0x1a
  4075c2:	mov    edi,0xc3c195c2
  4075c7:	dec    eax
  4075c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075c9:	mov    dl,0xd6
  4075cb:	test   DWORD PTR [ebx+ebp*8+0x6e],ebx
  4075cf:	adc    esi,DWORD PTR [edx]
  4075d1:	in     al,dx
  4075d2:	add    ch,dh
  4075d4:	out    dx,al
  4075d5:	push   ecx
  4075d6:	xchg   ebp,eax
  4075d7:	aad    0xc8
  4075d9:	push   edi
  4075da:	out    dx,al
  4075db:	xchg   edi,eax
  4075dc:	mov    ds:0x66b79528,al
  4075e1:	ret    0x7846
  4075e4:	adc    eax,0xa4f3cd67
  4075e9:	xor    bl,BYTE PTR [edx]
  4075eb:	inc    edi
  4075ec:	ds iret 
  4075ee:	mov    edx,0xd3f04f30
  4075f3:	push   0x4ba26780
  4075f8:	das    
  4075f9:	ret    
  4075fa:	sti    
  4075fb:	in     al,0x79
  4075fd:	mov    eax,ds:0x1b757ed0
  407602:	jp     0x407655
  407604:	mov    cs,WORD PTR [esi-0xb]
  407607:	mov    ds,WORD PTR [ecx+0x6b465405]
  40760d:	test   al,0x8b
  40760f:	imul   ebx,DWORD PTR [eax+0x30],0x4a
  407613:	sub    BYTE PTR [ebx],ah
  407615:	mov    BYTE PTR [ecx],ch
  407617:	xor    bh,BYTE PTR [edx-0x3d]
  40761a:	pushw  ds
  40761c:	dec    ebp
  40761d:	pop    esp
  40761e:	push   ebx
  40761f:	xor    DWORD PTR [edi],0x2f
  407622:	mov    ch,0x80
  407624:	xlat   BYTE PTR ds:[ebx]
  407625:	sbb    DWORD PTR [edi],edx
  407627:	sti    
  407628:	lea    esi,[ebx+0x1e]
  40762b:	mov    esi,0xf394c4f3
  407630:	and    edx,DWORD PTR [edx]
  407632:	dec    ebp
  407633:	cld    
  407634:	clc    
  407635:	int    0xc8
  407637:	scas   al,BYTE PTR es:[edi]
  407638:	mov    cl,0x3a
  40763a:	sbb    edx,DWORD PTR [esi+0x11]
  40763d:	rcr    BYTE PTR [esi+0x35b7e83e],cl
  407643:	jno    0x407610
  407645:	(bad)  
  407646:	and    DWORD PTR [ecx-0x6da8f3a6],eax
  40764c:	or     dl,cl
  40764e:	in     eax,0xac
  407650:	mov    eax,esi
  407652:	jle    0x407676
  407654:	out    dx,al
  407655:	cmp    edx,edx
  407657:	cld    
  407658:	mov    bl,0xc3
  40765a:	and    ebp,edi
  40765c:	(bad)  
  40765d:	loopne 0x4076b7
  40765f:	test   al,0x5f
  407661:	leave  
  407662:	(bad)  
  407663:	mov    eax,ds:0x4aea8ea
  407668:	cmp    al,0x9e
  40766a:	push   cs
  40766b:	sbb    esp,DWORD PTR [ecx-0x2]
  40766e:	add    al,0x66
  407670:	adc    eax,0xa4b9f6df
  407675:	cld    
  407676:	leave  
  407677:	call   0x93661c7e
  40767c:	jmp    0x4c6:0x9c6efddc
  407683:	pop    eax
  407684:	or     DWORD PTR [ebp+0x2c523fa],0xd29a5898
  40768e:	(bad)  
  40768f:	jae    0x407692
  407691:	aam    0x7d
  407693:	sub    BYTE PTR [esi-0x4d71d85d],cl
  407699:	lock fnstsw WORD PTR [ebx-0x1a3845e5]
  4076a0:	mov    dh,0x2f
  4076a2:	lea    esi,[eax+eax*4]
  4076a5:	jge    0x407651
  4076a7:	mov    ?,WORD PTR [ebp+edx*4+0x2cac2fd7]
  4076ae:	xchg   edi,eax
  4076af:	stos   BYTE PTR es:[edi],al
  4076b0:	sar    DWORD PTR [ebx],1
  4076b2:	pop    eax
  4076b3:	pop    ds
  4076b4:	fist   WORD PTR [edi-0x73c92e61]
  4076ba:	out    dx,al
  4076bb:	in     eax,0xd6
  4076bd:	das    
  4076be:	inc    edi
  4076bf:	jne    0x4076b8
  4076c1:	xchg   BYTE PTR ds:0xf7218e5d,ah
  4076c7:	xchg   ebx,eax
  4076c8:	xor    DWORD PTR [ecx-0x3],0x2da06bf
  4076cf:	pop    ebx
  4076d0:	gs retf 0x23de
  4076d4:	lahf   
  4076d5:	mov    ah,0xa
  4076d7:	xchg   edx,eax
  4076d8:	dec    ebx
  4076d9:	add    dh,BYTE PTR [edx]
  4076db:	(bad)  
  4076dc:	mov    es,eax
  4076de:	or     dl,ah
  4076e0:	jecxz  0x407677
  4076e2:	dec    esp
  4076e3:	sbb    DWORD PTR [ebp+0x69],ecx
  4076e6:	shl    BYTE PTR [ebx],0xef
  4076e9:	gs cwde 
  4076eb:	aaa    
  4076ec:	mov    ah,0x72
  4076ee:	repz retf 
  4076f0:	leave  
  4076f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076f2:	fild   DWORD PTR ds:0xcaea5934
  4076f8:	std    
  4076f9:	loope  0x407709
  4076fb:	push   ecx
  4076fc:	pop    esi
  4076fd:	xor    BYTE PTR [edi],bl
  4076ff:	jmp    0x4076cf
  407701:	stc    
  407702:	lods   eax,DWORD PTR ds:[esi]
  407703:	jae    0x4076a2
  407705:	push   ds
  407706:	xor    ebx,DWORD PTR ds:0x2d98e52f
  40770c:	jne    0x407700
  40770e:	xchg   edx,eax
  40770f:	jo     0x4076d8
  407711:	dec    esi
  407712:	out    0xe9,eax
  407714:	out    0x82,al
  407716:	pushf  
  407717:	dec    esp
  407718:	daa    
  407719:	sbb    eax,0xef16acdb
  40771e:	pop    ebx
  40771f:	popf   
  407720:	jle    0x40772a
  407722:	dec    ebp
  407723:	mov    ds:0xcaa8c597,eax
  407728:	sub    BYTE PTR [ecx+0x5a],0x84
  40772c:	call   0x79ec:0xfccef726
  407733:	mov    esi,0xd7de67fc
  407738:	sbb    DWORD PTR [edx-0x59],ebx
  40773b:	stos   BYTE PTR es:[edi],al
  40773c:	mov    ch,BYTE PTR [esi]
  40773e:	xchg   ebp,eax
  40773f:	or     eax,DWORD PTR [eax+0x7b]
  407742:	enter  0xaade,0x3f
  407746:	cld    
  407747:	mov    ds:0xcd3e9a09,eax
  40774c:	sahf   
  40774d:	(bad)  
  40774e:	mov    WORD PTR ds:0x74f0b08,?
  407754:	xchg   ecx,eax
  407755:	xchg   esp,eax
  407756:	inc    ecx
  407757:	or     al,0xb1
  407759:	adc    DWORD PTR [esi+0x69f8924],esp
  40775f:	test   eax,0xaf755c83
  407764:	pop    ebp
  407765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407766:	mov    ss,WORD PTR [ebx-0x74e502e8]
  40776c:	ret    0xd9a7
  40776f:	adc    eax,0xc7412088
  407774:	cs jle 0x407785
  407777:	xor    al,0x44
  407779:	pop    edi
  40777a:	jp     0x4076ff
  40777c:	pop    ds
  40777d:	jns    0x4077e6
  40777f:	ret    0x88f1
  407782:	cmp    cl,BYTE PTR [ebp-0x2b]
  407785:	ins    DWORD PTR es:[edi],dx
  407786:	jg     0x407791
  407788:	fcomp  QWORD PTR [edi+0x2b]
  40778b:	in     al,0x5e
  40778d:	cli    
  40778e:	call   0xe9bf:0x792b042b
  407795:	and    DWORD PTR [ecx-0x2c],0x39a4370c
  40779c:	bnd jb 0x40781e
  40779f:	add    eax,0xa2586d85
  4077a4:	mov    eax,edx
  4077a6:	popa   
  4077a7:	mov    es,WORD PTR [edx+0x3ab35242]
  4077ad:	call   0x6181:0x8291c96f
  4077b4:	iret   
  4077b5:	fcmovnb st,st(3)
  4077b7:	dec    esp
  4077b8:	mov    eax,ds:0xc9c68ef6
  4077bd:	scas   al,BYTE PTR es:[edi]
  4077be:	lds    ebp,FWORD PTR [edx-0x43932c5a]
  4077c4:	pop    ds
  4077c5:	js     0x4077f0
  4077c7:	out    0xd6,al
  4077c9:	jl     0x407797
  4077cb:	mov    esp,0x389ae9b
  4077d0:	sbb    DWORD PTR [ecx],esi
  4077d2:	nop
  4077d3:	and    bh,ch
  4077d5:	ja     0x4077e4
  4077d7:	mov    al,ds:0x79adfde3
  4077dc:	popa   
  4077dd:	xchg   ebx,eax
  4077de:	add    al,0x85
  4077e0:	rcr    DWORD PTR [esi-0x6],cl
  4077e3:	(bad)  
  4077e4:	push   0xffffffc4
  4077e6:	push   edx
  4077e7:	push   es
  4077e8:	add    eax,0x93fbd76
  4077ed:	(bad)  
  4077ee:	or     edi,DWORD PTR [eax+0x6a256333]
  4077f4:	adc    eax,DWORD PTR [edx+0x1a]
  4077f7:	lds    esp,FWORD PTR [ecx]
  4077f9:	ja     0x407817
  4077fb:	lds    esp,FWORD PTR [ebx]
  4077fd:	cmp    edi,DWORD PTR [esi-0x4e]
  407800:	sti    
  407801:	push   ecx
  407802:	lods   eax,DWORD PTR ds:[esi]
  407803:	out    0x46,al
  407805:	shl    BYTE PTR [edx+0x52],cl
  407808:	add    dh,cl
  40780a:	into   
  40780b:	push   cs
  40780c:	leave  
  40780d:	out    0x81,al
  40780f:	push   0x7e5d3a29
  407814:	jmp    0x5f27:0xeb6f7ae6
  40781b:	inc    edx
  40781c:	int    0xff
  40781e:	je     0x4077ff
  407820:	imul   ebp,DWORD PTR [ecx],0x11
  407823:	or     DWORD PTR [edx+ebp*4],esi
  407826:	sahf   
  407827:	(bad)  
  407828:	and    edi,DWORD PTR [edx]
  40782a:	xor    BYTE PTR [eax],cl
  40782c:	cmc    
  40782d:	jle    0x4077ec
  40782f:	call   0x59876afe
  407834:	xor    BYTE PTR [edi-0x40ac28b0],bl
  40783a:	out    dx,eax
  40783b:	test   DWORD PTR [edi+ebp*2+0x37786599],esp
  407842:	dec    ebx
  407843:	sbb    DWORD PTR [ebx-0x9],eax
  407846:	cmc    
  407847:	mov    ebx,0xd3ca248d
  40784c:	(bad)  [esp+ebp*2+0x712f5e10]
  407853:	addr16 cmp al,al
  407856:	mov    dl,0x3c
  407858:	aaa    
  407859:	cmp    DWORD PTR gs:[edx+0x5a54fdd1],edx
  407860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407861:	fisttp QWORD PTR [edi+esi*1]
  407864:	fbstp  TBYTE PTR [esi]
  407866:	mov    eax,0x34fe5e2a
  40786b:	inc    edi
  40786c:	adc    ah,BYTE PTR [ebx+0x4e]
  40786f:	push   cx
  407871:	and    edi,DWORD PTR [eax-0x32]
  407874:	xor    eax,0x7f37c8cb
  407879:	out    0x4a,al
  40787b:	inc    ebx
  40787c:	jmp    0xaff7:0xb391c06d
  407883:	inc    eax
  407884:	pop    ds
  407885:	dec    esp
  407886:	fwait
  407887:	stos   BYTE PTR es:[edi],al
  407888:	inc    eax
  407889:	ins    DWORD PTR es:[edi],dx
  40788a:	pop    edi
  40788b:	ret    
  40788c:	mov    edi,0x8fdaba29
  407891:	push   0xffffffcc
  407893:	inc    eax
  407894:	(bad)  
  407895:	adc    al,0x5b
  407897:	aas    
  407898:	ins    DWORD PTR es:[edi],dx
  407899:	inc    edx
  40789a:	jb     0x40785f
  40789c:	cmp    DWORD PTR [esi+0x8ca6bb0],ebx
  4078a2:	cmp    ebp,DWORD PTR [edx+0x64]
  4078a5:	xchg   ebx,eax
  4078a6:	xor    edi,DWORD PTR [edx-0x61f00543]
  4078ac:	test   BYTE PTR [esi],dl
  4078ae:	sub    eax,0x6266c51e
  4078b3:	adc    cl,BYTE PTR [edx+0x182add3e]
  4078b9:	jmp    0x40783d
  4078bb:	je     0x4078e8
  4078bd:	pop    esi
  4078be:	mov    esp,0x88cfb819
  4078c3:	sbb    al,0x2d
  4078c5:	jnp    0x407883
  4078c7:	jae    0x407909
  4078c9:	sbb    DWORD PTR [edx-0x47],ebx
  4078cc:	popa   
  4078cd:	mov    bh,0xea
  4078cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078d0:	sbb    esi,DWORD PTR [edx-0x4b]
  4078d3:	popa   
  4078d4:	jo     0x40788c
  4078d6:	cld    
  4078d7:	retf   0x964e
  4078da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078db:	mov    ebx,0xfe3f47d2
  4078e0:	add    cl,bh
  4078e2:	scas   eax,DWORD PTR es:[edi]
  4078e3:	xchg   esp,eax
  4078e4:	pushf  
  4078e5:	pop    esp
  4078e6:	push   esi
  4078e7:	adc    DWORD PTR [eax],ebp
  4078e9:	lds    ecx,FWORD PTR [esi+eiz*8]
  4078ec:	or     al,0x62
  4078ee:	mov    cl,0xaf
  4078f0:	jmp    0x6d49e13a
  4078f5:	shl    esp,1
  4078f7:	pop    eax
  4078f8:	xor    eax,0x3c33f5b
  4078fd:	ror    BYTE PTR [ebp+0x33],0x86
  407901:	push   edx
  407902:	lods   al,BYTE PTR ds:[esi]
  407903:	test   eax,0xa8aad28
  407908:	ins    BYTE PTR es:[edi],dx
  407909:	xor    al,0x4d
  40790b:	repnz fs popw es
  40790f:	in     al,0x3e
  407911:	jns    0x407902
  407913:	push   edx
  407914:	jb     0x4078f3
  407916:	xchg   edi,eax
  407917:	lods   eax,DWORD PTR ds:[esi]
  407918:	test   DWORD PTR [edi+0x66],ebx
  40791b:	jle    0x40795c
  40791d:	mov    edx,ebx
  40791f:	sbb    esi,DWORD PTR [ebp-0x2]
  407922:	aad    0xeb
  407924:	cmp    edx,edi
  407926:	sbb    esp,DWORD PTR [edx]
  407928:	dec    BYTE PTR [eax+0x212a6832]
  40792e:	add    DWORD PTR [eax+0x18],edx
  407931:	or     DWORD PTR [ebp-0x4c8a8e37],edi
  407937:	retf   
  407938:	pop    ss
  407939:	mov    ds:0xbd005032,al
  40793e:	out    dx,al
  40793f:	(bad)  
  407940:	jmp    0x781d1557
  407945:	xchg   ecx,eax
  407946:	lea    eax,[esi-0x7d6e02dc]
  40794c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40794d:	mov    ecx,0x853e229d
  407952:	jmp    DWORD PTR [ebx]
  407954:	sub    eax,0x6e10fb0
  407959:	cmc    
  40795a:	adc    al,0x34
  40795c:	ret    0x1661
  40795f:	pop    ecx
  407960:	and    DWORD PTR [eax],ebx
  407962:	sub    bl,cl
  407964:	fadd   DWORD PTR [eax+0x1b54ec91]
  40796a:	xor    eax,0x1f2d5632
  40796f:	out    0x33,al
  407971:	mov    ds:0x2048418d,eax
  407976:	lods   al,BYTE PTR ds:[esi]
  407977:	xchg   ecx,eax
  407978:	dec    ecx
  407979:	xor    dh,BYTE PTR [esp+ecx*1-0x52af52a3]
  407980:	push   edx
  407981:	and    dh,BYTE PTR [eax]
  407983:	mov    edx,0x1c4243b1
  407988:	pop    esp
  407989:	mov    dh,0x7d
  40798b:	outs   dx,DWORD PTR ds:[esi]
  40798c:	pop    esp
  40798d:	and    ebx,DWORD PTR [eax+esi*8+0x76]
  407991:	adc    DWORD PTR [edi],edx
  407993:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  407995:	add    ch,dh
  407997:	push   ss
  407998:	pushf  
  407999:	inc    esp
  40799a:	(bad)  
  40799b:	mov    ds:0xe6ebc926,al
  4079a0:	pop    ebx
  4079a1:	out    dx,al
  4079a2:	adc    eax,0x6429a4b9
  4079a7:	pushf  
  4079a8:	mov    edx,DWORD PTR [ebp*2-0x4d457f8b]
  4079af:	xor    cl,BYTE PTR [ebp-0x37]
  4079b2:	dec    eax
  4079b3:	sbb    esi,ecx
  4079b5:	cmp    DWORD PTR [eax-0x74],esi
  4079b8:	xor    bl,0xca
  4079bb:	adc    BYTE PTR [ebx-0x220019f0],cl
  4079c1:	adc    eax,0x6433d3c3
  4079c6:	xchg   eax,esp
  4079c8:	mov    edx,0x35fbf343
  4079cd:	fs push esi
  4079cf:	icebp  
  4079d0:	in     al,0x5f
  4079d2:	loop   0x407a05
  4079d4:	js     0x4079bb
  4079d6:	sub    BYTE PTR [ebx+esi*2],bl
  4079d9:	push   ebx
  4079da:	sub    ah,0x7d
  4079dd:	in     eax,dx
  4079de:	cs mov esi,0x27298dc
  4079e4:	test   eax,0xecd456ea
  4079e9:	and    bh,BYTE PTR [eax-0x28c5cfa9]
  4079ef:	test   esi,ecx
  4079f1:	sbb    al,0x59
  4079f3:	js     0x407a11
  4079f5:	jno    0x407a42
  4079f7:	and    eax,0x3efe39c0
  4079fc:	nop
  4079fd:	out    0x10,eax
  4079ff:	in     eax,dx
  407a00:	dec    esp
  407a01:	imul   ebp,DWORD PTR [ecx-0x24],0xffffff9d
  407a05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a06:	adc    BYTE PTR [edx-0x5117ab32],bl
  407a0c:	inc    eax
  407a0d:	lahf   
  407a0e:	cmp    edi,ebx
  407a10:	jp     0x4079e7
  407a12:	test   BYTE PTR cs:[eax],bl
  407a15:	test   DWORD PTR [eax],edx
  407a17:	fst    st(4)
  407a19:	adc    al,0x68
  407a1b:	(bad)  
  407a1c:	hlt    
  407a1d:	and    DWORD PTR [ebp-0xa],ecx
  407a20:	xchg   esi,eax
  407a21:	dec    ebp
  407a22:	scas   eax,DWORD PTR es:[edi]
  407a23:	into   
  407a24:	fst    QWORD PTR [esi]
  407a26:	js     0x407a76
  407a28:	cs push ecx
  407a2a:	adc    al,0x3e
  407a2c:	xchg   edi,eax
  407a2d:	sbb    BYTE PTR [esi*1+0x693dcdea],dl
  407a34:	les    eax,FWORD PTR [ebx-0x31]
  407a37:	add    eax,0x6cf6cdf5
  407a3c:	repz cmc 
  407a3e:	inc    eax
  407a3f:	jo     0x4079dd
  407a41:	xor    ah,dl
  407a43:	push   0x973cddb0
  407a48:	mov    ch,0xc3
  407a4a:	cs cmp eax,0xa49ed039
  407a50:	mov    ecx,0x70cb4a9d
  407a55:	jg     0x407aae
  407a57:	test   BYTE PTR [ecx-0x21bd9e65],ah
  407a5d:	push   0xd2d9c16b
  407a62:	(bad)  
  407a63:	lahf   
  407a64:	loop   0x407a0e
  407a66:	pop    esi
  407a67:	sub    eax,0x885326c9
  407a6c:	popf   
  407a6d:	mov    ebx,0xc382a2b4
  407a72:	inc    ecx
  407a73:	repz loop 0x407ac1
  407a76:	mov    gs,WORD PTR ds:0xeec47136
  407a7c:	(bad)  
  407a7d:	and    DWORD PTR [edi],esi
  407a7f:	cmp    DWORD PTR ds:0xcf1e356,ecx
  407a85:	xchg   edi,eax
  407a86:	in     al,dx
  407a87:	fnstcw WORD PTR [esi-0x3d15f913]
  407a8d:	xlat   BYTE PTR ds:[ebx]
  407a8e:	sti    
  407a8f:	mov    ebx,0x1406ad23
  407a94:	pop    es
  407a95:	mov    eax,ds:0x61165a2
  407a9a:	inc    esp
  407a9b:	test   BYTE PTR [eax],0xf2
  407a9e:	rcl    DWORD PTR [edi],1
  407aa0:	dec    ebp
  407aa1:	xor    DWORD PTR [esi+0x31],ebp
  407aa4:	cmp    BYTE PTR [edx-0x4a],0xfc
  407aa8:	or     DWORD PTR [edi+0x6c],edx
  407aab:	fist   WORD PTR [ebx+0x3d38bf1e]
  407ab1:	ins    DWORD PTR es:[edi],dx
  407ab2:	lock xchg cl,dl
  407ab5:	in     al,0xbb
  407ab7:	fst    QWORD PTR [ebp-0x31]
  407aba:	aad    0xce
  407abc:	sub    DWORD PTR [edi+0x7020ee5e],edx
  407ac2:	add    edx,edi
  407ac4:	arpl   WORD PTR [esi],bx
  407ac6:	nop
  407ac7:	jge    0x407a6f
  407ac9:	jl     0x407a76
  407acb:	fnsave [ebx]
  407acd:	pop    ebx
  407ace:	jnp    0x407ab4
  407ad0:	imul   ebp,DWORD PTR [esp+esi*4-0x20],0x33
  407ad5:	pop    eax
  407ad6:	(bad)  
  407ad7:	dec    DWORD PTR [esi]
  407ad9:	fadd   DWORD PTR [ebp-0x62]
  407adc:	jl     0x407abe
  407ade:	sbb    ch,BYTE PTR [esp+edx*8+0x5f1fdd15]
  407ae5:	sti    
  407ae6:	pop    ebx
  407ae7:	sti    
  407ae8:	xchg   ebx,eax
  407ae9:	scas   eax,DWORD PTR es:[edi]
  407aea:	fbstp  TBYTE PTR [edi-0x36]
  407aed:	inc    ecx
  407aee:	out    0xf9,eax
  407af0:	inc    esi
  407af1:	add    eax,0xe4954371
  407af6:	ffree  st(7)
  407af8:	fimul  WORD PTR [esi+edi*1+0x4a]
  407afc:	mov    WORD PTR [eax+ecx*4],?
  407aff:	add    eax,0x26512a46
  407b04:	pop    ebp
  407b05:	cwde   
  407b06:	mov    ds,edx
  407b08:	shr    DWORD PTR [eax],cl
  407b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b0b:	shl    BYTE PTR [ebx],0x10
  407b0e:	pop    edi
  407b0f:	dec    ebp
  407b10:	je     0x407b09
  407b12:	jl     0x407b42
  407b14:	or     eax,0x78c88baa
  407b19:	add    esi,DWORD PTR [esi-0x65]
  407b1c:	das    
  407b1d:	adc    esp,DWORD PTR [ecx-0x2e]
  407b20:	pop    ebp
  407b21:	xchg   edi,eax
  407b22:	xor    ebx,DWORD PTR [edx+0xc5a9930]
  407b28:	xor    DWORD PTR [eax-0x42],edi
  407b2b:	sbb    ebx,DWORD PTR [edi+eiz*4-0x56c4bdde]
  407b32:	and    al,0xae
  407b34:	or     al,0x16
  407b36:	xor    edx,DWORD PTR [eax]
  407b38:	(bad)  
  407b3a:	dec    esp
  407b3b:	mov    DWORD PTR [edx-0x7bd3477c],0xba21520c
  407b45:	pop    edx
  407b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b47:	pop    ecx
  407b48:	xchg   ebp,eax
  407b49:	xor    ebx,DWORD PTR [edx]
  407b4b:	xchg   DWORD PTR [ebx],ebx
  407b4d:	xchg   ebx,eax
  407b4e:	out    0xf5,eax
  407b50:	xor    eax,0x573f214c
  407b55:	xchg   ebx,eax
  407b56:	or     eax,0xa0a848a6
  407b5b:	push   es
  407b5c:	iret   
  407b5d:	shl    DWORD PTR [ebx],cl
  407b5f:	imul   ecx,eax,0x29
  407b62:	imul   ebx,DWORD PTR [ecx-0x80],0xfffffff3
  407b66:	(bad)  
  407b67:	mov    ds:0xe6736d4c,eax
  407b6c:	pop    es
  407b6d:	xchg   esp,eax
  407b6e:	and    al,0xcf
  407b70:	cmp    bh,0x23
  407b73:	pushf  
  407b74:	add    BYTE PTR [edx-0x794a1f70],cl
  407b7a:	cmp    BYTE PTR [ebx-0x12],0x30
  407b7e:	cmc    
  407b7f:	mov    DWORD PTR [edi+0x79b9c5ba],ecx
  407b85:	push   eax
  407b86:	int    0x72
  407b88:	call   0xd55e68d
  407b8d:	sar    DWORD PTR [edx+0x6a2fafb7],1
  407b93:	fsubr  st(6),st
  407b95:	stos   BYTE PTR es:[edi],al
  407b96:	and    eax,0x5e657b06
  407b9b:	fwait
  407b9c:	inc    edi
  407b9d:	pop    ebp
  407b9e:	mov    cl,0xa4
  407ba0:	popa   
  407ba1:	mov    dh,bh
  407ba3:	es pop edi
  407ba5:	cmp    ebx,ecx
  407ba7:	adc    edi,DWORD PTR [edx+0x49]
  407baa:	add    eax,0xc847e565
  407baf:	adc    eax,0x482e2238
  407bb4:	dec    BYTE PTR [ebp+0xb]
  407bb7:	pop    esp
  407bb8:	mov    ebp,0xd1cbe7bf
  407bbd:	sub    al,al
  407bbf:	test   al,0x4a
  407bc1:	stc    
  407bc2:	loop   0x407c21
  407bc4:	popf   
  407bc5:	sub    edi,DWORD PTR ds:0xa65ebb5d
  407bcb:	push   cs
  407bcc:	(bad)  
  407bce:	mul    ch
  407bd0:	sub    BYTE PTR ds:0x372a40a9,bh
  407bd6:	xor    eax,0x3c5b49ef
  407bdb:	aaa    
  407bdc:	scas   eax,DWORD PTR es:[edi]
  407bdd:	leave  
  407bde:	dec    DWORD PTR [ebp+0x6a]
  407be1:	xchg   ebx,eax
  407be2:	js     0x407c04
  407be4:	xor    ebp,DWORD PTR [edi]
  407be6:	bound  ebp,QWORD PTR ds:0x9eddd0cc
  407bec:	pop    eax
  407bed:	jnp    0x407c54
  407bef:	in     al,dx
  407bf0:	loop   0x407b92
  407bf2:	dec    ebp
  407bf3:	and    al,0x37
  407bf5:	stos   DWORD PTR es:[edi],eax
  407bf6:	jne    0x407bc4
  407bf8:	imul   ebx,DWORD PTR [ebx+edi*4+0x5a],0x43
  407bfd:	pop    esp
  407bfe:	push   ds
  407bff:	pop    eax
  407c00:	hlt    
  407c01:	and    esi,DWORD PTR [eax+0x4bcc7e27]
  407c07:	xor    al,0xe4
  407c09:	int    0xfb
  407c0b:	imul   ebx,DWORD PTR [esi],0xf8cb6253
  407c11:	pop    ds
  407c12:	inc    edx
  407c13:	or     BYTE PTR [edi],al
  407c15:	iret   
  407c16:	ins    DWORD PTR es:[edi],dx
  407c17:	cmc    
  407c18:	add    eax,0x9ca32974
  407c1d:	pop    ds
  407c1e:	jmp    0x407ba3
  407c20:	xchg   BYTE PTR [ecx],al
  407c22:	scas   al,BYTE PTR es:[edi]
  407c23:	mov    esi,DWORD PTR [esi+0x38c76a7f]
  407c29:	add    bl,dl
  407c2b:	outs   dx,BYTE PTR ds:[esi]
  407c2c:	sbb    al,0x25
  407c2e:	(bad)  
  407c2f:	arpl   WORD PTR ds:0xbcc3873a,si
  407c35:	call   0xa808327c
  407c3a:	out    dx,al
  407c3b:	push   0x14630805
  407c40:	dec    esi
  407c41:	mov    ds:0xd9c0c46f,eax
  407c46:	dec    esp
  407c47:	mov    esi,0xd73f83dd
  407c4c:	les    edi,FWORD PTR [edi+ecx*2+0x759352c7]
  407c53:	add    al,0x4f
  407c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c56:	jno    0x407cc1
  407c58:	push   edx
  407c59:	jb     0x407c49
  407c5b:	mov    eax,0x995e3b80
  407c60:	(bad)  
  407c61:	xor    al,0x10
  407c63:	call   0x77291e61
  407c68:	jns    0x407c68
  407c6a:	clc    
  407c6b:	xchg   edx,eax
  407c6c:	or     DWORD PTR [edi],0x2f
  407c6f:	lahf   
  407c70:	push   eax
  407c71:	and    DWORD PTR [eax+0x69],0x1149dd7e
  407c78:	mov    bh,0xf2
  407c7a:	test   BYTE PTR [ebx-0x606c6300],dl
  407c80:	rcr    edx,cl
  407c82:	iret   
  407c83:	test   BYTE PTR [edx+0x39ad8826],0x1b
  407c8a:	dec    esi
  407c8b:	imul   esi,DWORD PTR [ecx-0x75e2de7c],0xffffffc7
  407c92:	jg     0x407c88
  407c94:	nop
  407c95:	dec    ebp
  407c96:	cmc    
  407c97:	sbb    DWORD PTR [esi],ecx
  407c99:	push   eax
  407c9a:	std    
  407c9b:	xchg   esp,eax
  407c9c:	lea    ebp,[edx+0x5e]
  407c9f:	cs ss popf 
  407ca2:	adc    ch,bh
  407ca4:	push   edx
  407ca5:	repnz pop eax
  407ca7:	mov    bl,0x11
  407ca9:	aaa    
  407caa:	fcom   st(1)
  407cac:	sub    bl,bl
  407cae:	lahf   
  407caf:	test   al,0x30
  407cb1:	mov    edx,0xf2155bf3
  407cb6:	add    ecx,esp
  407cb8:	add    al,0x3e
  407cba:	pushf  
  407cbb:	into   
  407cbc:	add    DWORD PTR [ebx+edx*8-0x2a],esp
  407cc0:	fcmovnu st,st(7)
  407cc2:	out    dx,al
  407cc3:	int3   
  407cc4:	sub    edx,esi
  407cc6:	jge    0x407c89
  407cc8:	ds cmc 
  407cca:	out    dx,al
  407ccb:	out    dx,al
  407ccc:	cs outs dx,DWORD PTR ds:[esi]
  407ccf:	mov    ch,0x3a
  407cd1:	pushf  
  407cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cd3:	ins    DWORD PTR es:[edi],dx
  407cd4:	and    al,0x3f
  407cd6:	mov    cl,0xd9
  407cd8:	mov    edx,0x963c51a6
  407cdd:	aam    0x3e
  407cdf:	mov    DWORD PTR [edx],0xca10703c
  407ce5:	pusha  
  407ce6:	je     0x407c8d
  407ce8:	push   ss
  407ce9:	test   al,0xfd
  407ceb:	cmp    al,BYTE PTR [ebp+0x25e982d5]
  407cf1:	out    dx,eax
  407cf2:	jmp    0xdae2da1a
  407cf7:	rol    BYTE PTR [esi-0x3b],0x5
  407cfb:	lds    esp,FWORD PTR [edi+eax*4+0x8d690a1]
  407d02:	je     0x407c90
  407d04:	jmp    FWORD PTR [ebp+esi*8+0x1f]
  407d08:	mov    al,0x15
  407d0a:	mov    bl,0x44
  407d0c:	dec    esp
  407d0d:	add    DWORD PTR [edx],esi
  407d0f:	in     al,dx
  407d10:	xor    BYTE PTR [edx],dh
  407d12:	inc    esi
  407d13:	inc    edx
  407d14:	(bad)  
  407d15:	fst    DWORD PTR [esi-0x3d]
  407d18:	push   ebx
  407d19:	or     BYTE PTR [ebx],dh
  407d1b:	fsubr  DWORD PTR ds:0xa17924b5
  407d21:	in     eax,dx
  407d22:	loop   0x407d92
  407d24:	jne    0x407cc4
  407d26:	outs   dx,BYTE PTR ds:[esi]
  407d27:	sub    ebp,ebx
  407d29:	push   esi
  407d2a:	add    ebx,DWORD PTR [edx-0x1eeb0d7d]
  407d30:	mov    ah,0xfb
  407d32:	pop    ds
  407d33:	lods   al,BYTE PTR ds:[esi]
  407d34:	cmp    DWORD PTR [ebx],edx
  407d36:	push   ss
  407d37:	pop    esi
  407d38:	jecxz  0x407d39
  407d3a:	pop    edx
  407d3b:	xor    esp,DWORD PTR [esi-0x56]
  407d3e:	mov    al,cl
  407d40:	pop    es
  407d41:	mov    bl,0xe2
  407d43:	mov    eax,0x96081f70
  407d48:	xlat   BYTE PTR ds:[ebx]
  407d49:	mov    al,ch
  407d4b:	inc    ecx
  407d4c:	jnp    0x407d44
  407d4e:	mov    DWORD PTR [esi+0x2c],0xf654b9cd
  407d55:	enter  0xcaf6,0xe0
  407d59:	add    BYTE PTR [esi-0x74],dh
  407d5c:	inc    eax
  407d5d:	push   0x4212bad8
  407d62:	jo     0x407d6e
  407d64:	repnz (bad) 
  407d67:	popa   
  407d68:	mov    cl,dh
  407d6a:	mov    ds:0x70d0adf9,al
  407d6f:	sub    ecx,ecx
  407d71:	or     edi,esi
  407d73:	pop    ebp
  407d74:	loopne 0x407d5d
  407d76:	cli    
  407d77:	pop    ss
  407d78:	adc    eax,0x4a0c130a
  407d7d:	bound  edi,QWORD PTR [ebx]
  407d7f:	pop    ebx
  407d80:	iret   
  407d81:	dec    ecx
  407d82:	clc    
  407d83:	repz daa 
  407d85:	jg     0x407dec
  407d87:	xor    al,0x52
  407d89:	inc    ecx
  407d8a:	in     eax,dx
  407d8b:	pop    esi
  407d8c:	push   ebx
  407d8d:	inc    edx
  407d8e:	adc    ebx,DWORD PTR [edi-0x1b6317f6]
  407d94:	sub    eax,0xaac3a954
  407d99:	push   edi
  407d9a:	js     0x407d79
  407d9c:	xchg   esi,eax
  407d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d9e:	jp     0x407d35
  407da0:	xchg   ecx,eax
  407da1:	dec    esi
  407da2:	inc    esp
  407da3:	icebp  
  407da4:	and    eax,0x6e28b64e
  407da9:	cld    
  407daa:	inc    ebp
  407dab:	add    BYTE PTR [edi+0x1a],bl
  407dae:	rol    DWORD PTR [edi+ecx*4],1
  407db1:	es (bad) 
  407db3:	pop    ds
  407db4:	xchg   DWORD PTR [esi],edx
  407db6:	ins    BYTE PTR es:[edi],dx
  407db7:	cmp    dl,BYTE PTR [eax]
  407db9:	bound  edi,QWORD PTR [esi-0x42d24ade]
  407dbf:	push   ecx
  407dc0:	push   edi
  407dc1:	push   cs
  407dc2:	cmp    eax,0x30c5161d
  407dc7:	in     eax,dx
  407dc8:	or     dl,BYTE PTR [eax]
  407dca:	jecxz  0x407da6
  407dcc:	sub    dl,BYTE PTR [ecx]
  407dce:	pushf  
  407dcf:	sub    al,al
  407dd1:	dec    ebp
  407dd2:	std    
  407dd3:	push   ebx
  407dd4:	jp     0x407e2b
  407dd6:	nop
  407dd7:	test   al,0xcd
  407dd9:	mov    ch,0x79
  407ddb:	retf   0xaa70
  407dde:	aad    0xa4
  407de0:	adc    al,0x82
  407de2:	fisttp DWORD PTR [ecx-0x4be7240a]
  407de8:	sbb    esp,DWORD PTR ds:0x7fd722ca
  407dee:	or     esp,DWORD PTR [edx]
  407df0:	jno    0x407dbf
  407df2:	pop    ss
  407df3:	scas   eax,DWORD PTR es:[edi]
  407df4:	xchg   DWORD PTR [edi],edx
  407df6:	sar    ch,1
  407df8:	and    BYTE PTR [bx-0x43],bl
  407dfc:	lods   eax,DWORD PTR ds:[esi]
  407dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dfe:	push   0x7d
  407e00:	xchg   ebx,eax
  407e01:	lock and al,0x73
  407e04:	mov    ecx,DWORD PTR [ebp-0xb4b5094]
  407e0a:	jle    0x407e67
  407e0c:	lock mov WORD PTR [edx],?
  407e0f:	(bad)  
  407e10:	call   0xfbee4cc1
  407e15:	scas   al,BYTE PTR es:[edi]
  407e16:	xor    ch,BYTE PTR [edx+0x2dcec0dd]
  407e1c:	ret    
  407e1d:	popa   
  407e1e:	inc    edi
  407e1f:	xor    eax,esp
  407e21:	sbb    al,0xbd
  407e23:	jo     0x407e44
  407e25:	aaa    
  407e26:	push   edx
  407e27:	add    BYTE PTR [edi],cl
  407e29:	adc    BYTE PTR [ebp-0x17],cl
  407e2c:	test   BYTE PTR [ebx+ebp*4-0x12],0xe3
  407e31:	xor    BYTE PTR [ecx],0x8c
  407e34:	inc    esi
  407e35:	dec    ebp
  407e36:	inc    eax
  407e37:	call   0xf17a:0xdb65bf04
  407e3e:	jmp    0xf5480702
  407e43:	and    eax,0xf45ccc32
  407e48:	xor    eax,0x5d798f19
  407e4d:	scas   eax,DWORD PTR es:[edi]
  407e4e:	adc    ecx,DWORD PTR [ebx+0x69775a22]
  407e54:	mov    edi,?
  407e56:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e58:	mov    ecx,0xa9ee6458
  407e5d:	mov    al,ds:0x672c8c2c
  407e62:	jnp    0x407eda
  407e64:	js     0x407e13
  407e66:	in     eax,0x21
  407e68:	push   cs
  407e69:	pushf  
  407e6a:	xchg   ebp,eax
  407e6b:	idiv   dl
  407e6d:	shl    DWORD PTR [edi+0x58],cl
  407e70:	mov    edx,0xf4d8d8ab
  407e75:	loop   0x407ea3
  407e77:	dec    edx
  407e78:	jge    0x407ef9
  407e7a:	sbb    DWORD PTR [eax+0x32],esi
  407e7d:	cmp    eax,0x77f2bc66
  407e82:	adc    eax,0x42cf7a99
  407e88:	pop    esp
  407e89:	in     eax,0x23
  407e8b:	scas   eax,DWORD PTR es:[edi]
  407e8c:	and    al,0x4
  407e8e:	push   ecx
  407e8f:	mov    esi,0x977dcf10
  407e94:	pop    ecx
  407e95:	cdq    
  407e96:	imul   ecx,DWORD PTR ds:0x1acf67f,0xfc9771de
  407ea0:	adc    BYTE PTR [ebp+0x37af2e57],dl
  407ea6:	dec    ecx
  407ea7:	(bad)  
  407ea8:	jo     0x407e6a
  407eaa:	mov    eax,0xddbf5df6
  407eaf:	fst    QWORD PTR [ebx+0x28]
  407eb2:	mov    dl,0x11
  407eb4:	shl    DWORD PTR [esi+0x4b03b321],cl
  407eba:	repz jbe 0x407ef6
  407ebd:	pop    esi
  407ebe:	into   
  407ebf:	dec    eax
  407ec0:	mov    ds:0xcceb02f6,al
  407ec5:	(bad)  
  407ec6:	xchg   ecx,eax
  407ec7:	mov    edi,0x28ab9c95
  407ecc:	bound  eax,QWORD PTR [eax+0x6338f86e]
  407ed2:	nop
  407ed3:	mul    BYTE PTR [ebp-0x4f]
  407ed6:	lods   al,BYTE PTR ds:[esi]
  407ed7:	xor    al,0xb4
  407ed9:	aad    0xc8
  407edb:	dec    edi
  407edc:	or     eax,0xcd756f6f
  407ee1:	call   0x4fb1393d
  407ee6:	jp     0x407e9c
  407ee8:	cmp    ah,dh
  407eea:	in     al,dx
  407eeb:	dec    bp
  407eed:	mov    bl,BYTE PTR [eax+0x6f]
  407ef0:	and    DWORD PTR [esi],esp
  407ef2:	sub    eax,0xb1caed6c
  407ef7:	xor    BYTE PTR [edx+0x2cbe786b],0x11
  407efe:	inc    ebx
  407eff:	xor    ebx,DWORD PTR [ecx]
  407f01:	ss pusha 
  407f03:	cmp    eax,0xb458014a
  407f08:	or     ah,BYTE PTR [ecx]
  407f0a:	retf   
  407f0b:	jecxz  0x407f7a
  407f0d:	pop    eax
  407f0e:	xchg   DWORD PTR ds:0x7423f0a9,ebp
  407f14:	test   bh,0x68
  407f17:	adc    BYTE PTR [ebp-0x48b2007f],0xf6
  407f1e:	xlat   BYTE PTR ds:[ebx]
  407f1f:	inc    esi
  407f20:	mov    WORD PTR [ebp+0x232326c0],cs
  407f26:	jle    0x407eaa
  407f28:	sbb    BYTE PTR [edx-0x5cc5a2],cl
  407f2e:	jbe    0x407f77
  407f30:	pop    ebp
  407f31:	fwait
  407f32:	lahf   
  407f33:	jl     0x407f8a
  407f35:	retf   
  407f36:	mov    dh,0x3a
  407f38:	sbb    cl,bl
  407f3a:	lahf   
  407f3b:	outs   dx,DWORD PTR ds:[esi]
  407f3c:	xchg   esp,eax
  407f3d:	pop    eax
  407f3e:	sub    al,0x7c
  407f40:	hlt    
  407f41:	out    0xbe,al
  407f43:	inc    esp
  407f44:	mov    eax,ds:0xfb844989
  407f49:	mov    BYTE PTR [esi-0x7],dl
  407f4c:	xchg   edx,eax
  407f4d:	(bad)  
  407f4e:	shl    DWORD PTR [edi+0x50],0x8e
  407f52:	test   edi,ebp
  407f54:	lds    ebp,FWORD PTR [esi]
  407f56:	cs inc ecx
  407f58:	rcr    BYTE PTR [ebx+0x6d4878c8],0x83
  407f5f:	xor    ch,ch
  407f61:	out    dx,eax
  407f62:	push   eax
  407f63:	in     al,0xe1
  407f65:	jno    0x407f59
  407f67:	add    DWORD PTR [eax],ebp
  407f69:	sahf   
  407f6a:	inc    esi
  407f6b:	xchg   ebx,eax
  407f6c:	xchg   esi,eax
  407f6d:	ins    BYTE PTR es:[edi],dx
  407f6e:	pop    eax
  407f6f:	sub    ebp,esp
  407f71:	pushf  
  407f72:	mov    esp,0xcda77def
  407f77:	push   esi
  407f78:	aas    
  407f79:	in     al,0xc2
  407f7b:	jge    0x407fac
  407f7d:	gs xor eax,0xe5a828c1
  407f83:	js     0x407f5c
  407f85:	out    dx,al
  407f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f87:	cdq    
  407f88:	ret    
  407f89:	and    BYTE PTR [ebx+0x0],cl
  407f8c:	rol    BYTE PTR [ebp+eiz*8-0x1a],0x82
  407f91:	or     ah,BYTE PTR [ebp-0x7a4111b0]
  407f97:	mov    dl,0x45
  407f99:	inc    ebp
  407f9a:	mov    ds:0x24b59974,eax
  407f9f:	ret    
  407fa0:	arpl   WORD PTR [edi],dx
  407fa2:	add    bl,BYTE PTR cs:[esi-0x38709836]
  407fa9:	mov    ecx,ebx
  407fab:	jno    0x407f91
  407fad:	pop    es
  407fae:	pop    edx
  407faf:	mov    esp,0x214dda4a
  407fb4:	repz adc esp,DWORD PTR [eax-0x2b5de891]
  407fbb:	jmp    0x407ff5
  407fbd:	inc    ecx
  407fbe:	and    ch,bl
  407fc0:	mov    DWORD PTR [edx+0x11],ecx
  407fc3:	dec    ecx
  407fc4:	and    ebx,DWORD PTR [ecx-0x12dd80a9]
  407fca:	std    
  407fcb:	jg     0x407f84
  407fcd:	imul   edx,edi,0x44
  407fd0:	inc    edi
  407fd1:	xor    eax,0xb0da7bd6
  407fd6:	xor    eax,0xb2575b4c
  407fdb:	push   edi
  407fdc:	xor    DWORD PTR [esi+0x318d103f],0x5a43519c
  407fe6:	inc    edx
  407fe7:	fmulp  st(5),st
  407fe9:	sub    esi,esp
  407feb:	(bad)  
  407fec:	xor    al,0xa1
  407fee:	and    BYTE PTR [eax],ah
  407ff0:	iret   
  407ff1:	punpckhbw mm0,QWORD PTR [edi+0x607daee3]
  407ff8:	jmp    0xef955b4a
  407ffd:	fcmovb st,st(2)
  407fff:	sub    ch,BYTE PTR ds:0x17e4b6b4
  408005:	aaa    
  408006:	add    DWORD PTR [edx],ebp
  408008:	xor    eax,DWORD PTR ds:0x5fa51b55
  40800e:	loope  0x40800d
  408010:	jae    0x407ffa
  408012:	ret    0xb61f
  408015:	sbb    BYTE PTR [edx-0x6026d84c],dh
  40801b:	xchg   esp,eax
  40801c:	cwde   
  40801d:	xchg   esi,eax
  40801e:	ins    BYTE PTR es:[edi],dx
  40801f:	mov    BYTE PTR [ecx+ebp*8-0x505cf52c],bh
  408026:	dec    eax
  408027:	cmp    al,0x9c
  408029:	bnd je 0x408073
  40802c:	push   edi
  40802d:	popf   
  40802e:	xchg   esp,eax
  40802f:	out    0x3d,al
  408031:	hlt    
  408032:	adc    BYTE PTR [esi+0x2a],ch
  408035:	in     al,0x8f
  408037:	(bad)  
  408038:	cmp    cl,BYTE PTR [ebx+0x740a779a]
  40803e:	xlat   BYTE PTR ds:[ebx]
  40803f:	out    dx,al
  408040:	push   ebx
  408041:	gs sbb eax,eax
  408044:	cli    
  408045:	fs je  0x40805d
  408048:	scas   eax,DWORD PTR es:[edi]
  408049:	gs push ebx
  40804b:	es dec ecx
  40804d:	add    eax,0xdff20fd8
  408052:	or     al,0xef
  408054:	jge    0x4080a9
  408056:	and    ecx,DWORD PTR [esi-0x4612e69f]
  40805c:	mov    al,ds:0x4b3e4cdc
  408061:	or     bh,dh
  408063:	lock outs dx,DWORD PTR ds:[esi]
  408065:	mov    ecx,0x1006bce2
  40806a:	sbb    al,0x7f
  40806c:	jnp    0x408040
  40806e:	or     DWORD PTR [esi+0x7a],ecx
  408071:	inc    esp
  408072:	inc    ebp
  408073:	int    0x74
  408075:	pushf  
  408076:	iret   
  408077:	push   es
  408078:	pop    eax
  408079:	inc    ebx
  40807a:	test   eax,0xdbe85f74
  40807f:	arpl   WORD PTR [edx],ax
  408081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408082:	in     eax,dx
  408083:	push   cs
  408084:	add    edi,esp
  408086:	push   ecx
  408087:	pop    ebx
  408088:	cmp    al,0xc9
  40808a:	jecxz  0x40804a
  40808c:	and    BYTE PTR [ebx+0x17a45425],dh
  408092:	jge    0x4080d7
  408094:	jg     0x408026
  408096:	sub    BYTE PTR [esi],dh
  408098:	in     eax,dx
  408099:	dec    edi
  40809a:	mov    edx,0x96003a0
  40809f:	cmp    BYTE PTR [esp+ebp*4+0x34],ah
  4080a3:	je     0x408026
  4080a5:	mov    bl,0x14
  4080a7:	mov    ds:0x5a3b7472,eax
  4080ac:	daa    
  4080ad:	xlat   BYTE PTR ds:[ebx]
  4080ae:	sbb    edi,DWORD PTR [edx-0x69e097a]
  4080b4:	mov    ebx,edx
  4080b6:	push   cs
  4080b7:	jmp    0x4080e2
  4080b9:	xchg   esi,eax
  4080ba:	sub    BYTE PTR [edi-0x57d78727],cl
  4080c0:	or     al,0x68
  4080c2:	shr    BYTE PTR [esi+eax*8+0x4ebcb08b],0x88
  4080ca:	je     0x408137
  4080cc:	scas   eax,DWORD PTR es:[edi]
  4080cd:	int    0x1b
  4080cf:	xchg   BYTE PTR [eax+0x517f02dd],dh
  4080d5:	xor    BYTE PTR [edi],dh
  4080d7:	bound  edx,QWORD PTR [ecx-0x1f]
  4080da:	jbe    0x40806f
  4080dc:	pop    edx
  4080dd:	mov    WORD PTR [eax+eiz*4],ds
  4080e0:	cld    
  4080e1:	out    0xd9,al
  4080e3:	inc    eax
  4080e4:	(bad)  
  4080e5:	int    0xf4
  4080e7:	or     ebp,eax
  4080e9:	xchg   ebp,eax
  4080ea:	cwde   
  4080eb:	sbb    DWORD PTR [edi],edi
  4080ed:	icebp  
  4080ee:	mov    ebp,0x583a1c99
  4080f3:	jg     0x408161
  4080f5:	add    BYTE PTR cs:[edi+0x692a4389],ch
  4080fc:	lea    eax,[ebx-0x49834e72]
  408102:	and    eax,0xf5265981
  408107:	cmc    
  408108:	push   0xbc8061ed
  40810d:	pop    eax
  40810e:	add    DWORD PTR [edx+0x76],edi
  408111:	fcom   QWORD PTR [edi]
  408113:	mov    eax,ds:0xbb22b76
  408118:	dec    eax
  408119:	(bad)  
  40811a:	jecxz  0x408116
  40811c:	xor    bl,BYTE PTR [edi+ecx*2]
  40811f:	add    bh,BYTE PTR [ebx+0x70085433]
  408125:	test   eax,0x914cfb9a
  40812a:	nop
  40812b:	mov    dh,0x82
  40812d:	xchg   edi,eax
  40812e:	push   esp
  40812f:	jle    0x4081aa
  408131:	out    dx,al
  408132:	pop    ss
  408133:	or     ch,BYTE PTR [ebp+0x17]
  408136:	scas   eax,DWORD PTR es:[edi]
  408137:	jno    0x408119
  408139:	add    al,0xd5
  40813b:	call   0xe2ae:0x497819da
  408142:	adc    al,0xe
  408144:	(bad)  
  408145:	fistp  DWORD PTR [eax-0x70]
  408148:	or     BYTE PTR ds:0xa7c43dd9,0x48
  40814f:	mov    esp,0x2370e358
  408154:	add    BYTE PTR [ebx+0x4988d324],ah
  40815a:	xor    eax,0xd812217c
  40815f:	pop    ss
  408160:	into   
  408161:	pop    edx
  408162:	fdiv   QWORD PTR [edi]
  408164:	push   es
  408165:	cmc    
  408166:	aad    0x8a
  408168:	jmp    0x40819a
  40816a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40816b:	push   es
  40816c:	mov    dl,0xf9
  40816e:	cwde   
  40816f:	lods   al,BYTE PTR ds:[esi]
  408170:	out    0x6d,al
  408172:	push   ebp
  408173:	mov    ch,0x99
  408175:	jge    0x40810c
  408177:	mov    ch,0x75
  408179:	xor    ch,cl
  40817b:	sub    eax,0xde166603
  408180:	and    eax,0xf5ffb230
  408185:	iret   
  408186:	xor    eax,0xf4368739
  40818b:	jle    0x408183
  40818d:	push   ecx
  40818e:	push   0xffffffba
  408190:	dec    ebx
  408191:	cmp    eax,0x1a0423da
  408196:	fld    QWORD PTR [ebx]
  408198:	jmp    0xfe66f9fe
  40819d:	ror    BYTE PTR [ebp-0x7a373e44],1
  4081a3:	mov    ah,0xfc
  4081a5:	gs pop ebp
  4081a7:	repnz mov edi,0xdeb07cfa
  4081ad:	rcl    BYTE PTR [ebp+0x5],cl
  4081b0:	mov    ch,0x1d
  4081b2:	jp     0x4081ff
  4081b4:	sub    eax,ebx
  4081b6:	mov    ah,BYTE PTR [ecx-0x773806ed]
  4081bc:	cmp    ch,BYTE PTR [ecx-0x46]
  4081bf:	clc    
  4081c0:	cli    
  4081c1:	inc    ebx
  4081c2:	dec    edx
  4081c3:	cwde   
  4081c4:	(bad)  
  4081c5:	jns    0x408239
  4081c7:	dec    ebx
  4081c8:	int    0x10
  4081ca:	jnp    0x408217
  4081cc:	xor    eax,0xa8534f1
  4081d1:	fstp   TBYTE PTR [eax-0x16]
  4081d4:	dec    esp
  4081d5:	sbb    eax,DWORD PTR [ecx]
  4081d7:	inc    ecx
  4081d8:	retf   
  4081d9:	pop    ss
  4081da:	fmul   DWORD PTR [ebp-0x23]
  4081dd:	cdq    
  4081de:	cwde   
  4081df:	mov    edi,0xead4dc2a
  4081e4:	jmp    0x7a99:0x31c91db5
  4081eb:	fwait
  4081ec:	ret    0xcd65
  4081ef:	or     eax,0x15858cec
  4081f4:	or     eax,0x4b0779e6
  4081f9:	ja     0x40826a
  4081fb:	inc    ecx
  4081fd:	jb     0x408251
  4081ff:	dec    ebx
  408200:	inc    edi
  408201:	mov    BYTE PTR [esp+ebx*8-0x38],dl
  408205:	sbb    bh,dl
  408207:	adc    edi,DWORD PTR [edx]
  408209:	outs   dx,DWORD PTR ds:[esi]
  40820a:	xchg   esi,eax
  40820b:	or     eax,0x1e1ce1f1
  408210:	jo     0x40827f
  408212:	js     0x40824b
  408214:	jae    0x40827b
  408216:	std    
  408217:	cmc    
  408218:	adc    esp,DWORD PTR [eax]
  40821a:	hlt    
  40821b:	leave  
  40821c:	and    eax,0xc537c84a
  408221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408222:	jne    0x4081c0
  408224:	sub    edi,ebp
  408226:	lea    esp,[esi+0x6ed8e6ea]
  40822c:	call   0x72c3a8b1
  408231:	push   ecx
  408232:	cmp    ecx,DWORD PTR [edi+edx*8]
  408235:	jmp    0xa2a6e6a0
  40823a:	jnp    0x408256
  40823c:	xchg   ebp,eax
  40823d:	pop    ds
  40823e:	jo     0x4081fb
  408240:	push   esi
  408241:	leave  
  408242:	neg    DWORD PTR [edi-0x461b312f]
  408248:	addr16 or ah,cl
  40824b:	neg    DWORD PTR [ebx]
  40824d:	pusha  
  40824e:	jp     0x4082b1
  408250:	xor    DWORD PTR [ebp-0x6d],esi
  408253:	mov    dh,0x86
  408255:	stc    
  408256:	test   eax,0x81c6a1fc
  40825b:	add    cl,BYTE PTR [eax-0x7b3163ef]
  408261:	out    dx,al
  408262:	dec    esi
  408263:	imul   ecx,DWORD PTR [ebp-0x257c43a1],0xe1049214
  40826d:	xchg   ecx,edi
  40826f:	(bad)  
  408270:	sbb    eax,ebp
  408272:	cs pop eax
  408274:	xchg   ecx,eax
  408275:	rol    DWORD PTR [ecx],0xdc
  408278:	mov    ah,0xa9
  40827a:	nop
  40827b:	rcr    dh,1
  40827d:	cmp    BYTE PTR [edi-0x5769d78c],bh
  408283:	lds    ecx,FWORD PTR [esi-0x6f]
  408286:	mov    cl,0x79
  408288:	inc    ecx
  408289:	mov    eax,0x2292f7f3
  40828e:	and    bh,BYTE PTR [esi+0x50a24a95]
  408294:	push   esp
  408295:	loope  0x408295
  408297:	mov    dh,0xee
  408299:	push   esi
  40829a:	leave  
  40829b:	repz xchg edi,eax
  40829d:	leave  
  40829e:	jecxz  0x4082df
  4082a0:	or     ebx,DWORD PTR [esi-0x7b54231a]
  4082a6:	cli    
  4082a7:	shl    DWORD PTR [ebx-0x427f8059],cl
  4082ad:	push   esp
  4082ae:	dec    esi
  4082af:	push   esi
  4082b0:	xchg   ecx,eax
  4082b1:	sar    BYTE PTR [ecx-0x1cc1f73b],0x1e
  4082b8:	xor    al,0x7b
  4082ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082bb:	test   ebx,edx
  4082bd:	std    
  4082be:	jnp    0x4082e2
  4082c0:	jge    0x408249
  4082c2:	mov    ecx,0x4001e306
  4082c7:	xchg   edx,eax
  4082c8:	cmp    eax,0x4a5002d5
  4082cd:	pop    es
  4082ce:	mov    eax,0x334116e8
  4082d3:	jge    0x408270
  4082d5:	test   BYTE PTR [edi-0x1760171e],0x72
  4082dc:	sbb    al,0x90
  4082de:	mov    DWORD PTR es:[esi-0x57e2b660],edi
  4082e5:	ret    0x38c8
  4082e8:	pop    es
  4082e9:	sar    BYTE PTR [eax-0x62d8b838],cl
  4082ef:	cmp    al,0x64
  4082f1:	sub    DWORD PTR [esi-0x1b],edx
  4082f4:	ss cli 
  4082f6:	retf   
  4082f7:	cmp    bl,BYTE PTR [esi]
  4082f9:	call   0x1e7d:0xcd9bfffb
  408300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408301:	sub    DWORD PTR [edx-0x35],esi
  408304:	pop    ecx
  408305:	sub    eax,0xdf040348
  40830a:	push   ecx
  40830b:	push   ecx
  40830c:	fst    QWORD PTR [eax-0x94f3798]
  408312:	out    dx,eax
  408313:	and    eax,0xcb9bad48
  408318:	xchg   edi,eax
  408319:	add    eax,ebx
  40831b:	pop    edi
  40831c:	loop   0x4082d7
  40831e:	adc    al,0x2
  408320:	sbb    al,0x69
  408322:	repnz xchg edx,eax
  408324:	out    dx,eax
  408325:	dec    ebp
  408326:	imul   edx,ebp,0xffffffc4
  408329:	(bad)
  40832d:	and    ebx,esp
  40832f:	cmp    eax,0x1f3f7e1c
  408334:	cs jge 0x408361
  408337:	add    eax,0x213817ca
  40833c:	(bad)  
  40833d:	and    BYTE PTR [eax+0x16],dl
  408340:	inc    esp
  408341:	dec    esi
  408342:	sub    eax,0xd026c93a
  408347:	mov    edi,?
  408349:	pop    edi
  40834a:	aam    0xe6
  40834c:	or     bh,BYTE PTR [edi+0x4d]
  40834f:	sbb    ebx,DWORD PTR [edx+0x20de5f6a]
  408355:	gs fsubr st,st(4)
  408358:	sti    
  408359:	mov    bl,0x8e
  40835b:	pop    ecx
  40835c:	xchg   edx,eax
  40835d:	test   BYTE PTR [ebx+0x73],0x4e
  408361:	dec    ebp
  408362:	mov    al,ds:0x6f91ed02
  408367:	loop   0x408320
  408369:	neg    BYTE PTR [esi]
  40836b:	xor    DWORD PTR [ebp+0x53],ebp
  40836e:	or     BYTE PTR [ebp+0x34],dl
  408371:	icebp  
  408372:	cdq    
  408373:	fistp  QWORD PTR [edx]
  408375:	sub    edx,DWORD PTR [edi-0x13]
  408378:	cmp    esi,esp
  40837a:	sbb    eax,0xc845a47d
  40837f:	add    eax,0xc5280a2f
  408384:	xchg   esi,eax
  408385:	arpl   WORD PTR [edx+0x30b4b941],sp
  40838b:	or     eax,0x4b864fca
  408390:	scas   eax,DWORD PTR es:[edi]
  408391:	and    BYTE PTR [edi],dh
  408393:	jp     0x408350
  408395:	xchg   ebp,eax
  408396:	cld    
  408397:	and    DWORD PTR [ebp+0x32df4fe],ecx
  40839d:	in     eax,dx
  40839e:	ret    0x29c7
  4083a1:	mov    DWORD PTR [esi+0x174e4eeb],ecx
  4083a7:	sti    
  4083a8:	sub    al,0xc4
  4083aa:	cmp    eax,0x3840a732
  4083af:	and    eax,DWORD PTR [edx-0x4df508dd]
  4083b5:	cmp    edi,DWORD PTR [eax]
  4083b7:	jmp    0x1cbf:0xd803c112
  4083be:	shl    ebx,cl
  4083c0:	push   edx
  4083c1:	pop    es
  4083c2:	ret    
  4083c3:	xor    al,0xaf
  4083c5:	cdq    
  4083c6:	add    eax,0xc1a42123
  4083cb:	jbe    0x408374
  4083cd:	xor    eax,0xd11f3db8
  4083d2:	pusha  
  4083d3:	les    edx,FWORD PTR [eax+0x3e16508a]
  4083d9:	enter  0xc56a,0x56
  4083dd:	and    esi,DWORD PTR [edi+0x4733c8dc]
  4083e3:	mov    dh,0xe6
  4083e5:	repnz imul ecx,DWORD PTR [ebp+edi*1+0x77],0x0
  4083eb:	pop    DWORD PTR [ecx+0x7d3715ba]
  4083f1:	call   0xafad:0x39793038
  4083f8:	or     DWORD PTR [edi+0x57b5f3a4],esi
  4083fe:	sbb    dh,cl
  408400:	mov    bl,0x92
  408402:	stc    
  408403:	pop    ecx
  408404:	jecxz  0x408445
  408406:	(bad)  
  408407:	fneni(8087 only) 
  408409:	xchg   esp,eax
  40840a:	or     ah,BYTE PTR [eax]
  40840c:	cmp    eax,0xbafd3128
  408411:	ss dec ebp
  408413:	retf   
  408414:	jmp    FWORD PTR [edx]
  408416:	int    0x94
  408418:	mov    esi,0xc1fbdbc1
  40841d:	inc    edx
  40841e:	jne    0x4083ab
  408420:	mov    ch,0xa6
  408422:	scas   eax,DWORD PTR es:[edi]
  408423:	fmul   st,st(3)
  408425:	xchg   ebp,eax
  408426:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408428:	cmp    esi,DWORD PTR [esi+ebp*8+0x24]
  40842c:	adc    BYTE PTR [edx],dl
  40842e:	sbb    eax,0xc9f7d25b
  408433:	dec    esi
  408434:	test   eax,0x6e0d270f
  408439:	mov    ds:0x550fc6fb,al
  40843e:	mov    al,0xb2
  408440:	sub    cl,bh
  408442:	cmp    eax,0xae52720b
  408447:	stc    
  408448:	sahf   
  408449:	xchg   esp,eax
  40844a:	(bad)  
  40844b:	adc    ecx,DWORD PTR [edi-0x5b]
  40844e:	mov    WORD PTR [ebx-0x31],fs
  408451:	in     al,dx
  408452:	add    BYTE PTR [edi-0x20],al
  408455:	mov    dl,BYTE PTR [ecx]
  408457:	retf   0xe82
  40845a:	(bad)  
  40845b:	pop    esp
  40845c:	fwait
  40845d:	imul   esi,DWORD PTR [ebx+0x4976d5c7],0x52659e5e
  408467:	mov    esi,0x5ddf4f94
  40846c:	add    eax,0x591592d9
  408471:	jge    0x408407
  408473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408474:	cs push ebx
  408476:	fidivr DWORD PTR [ecx-0x2aae7c0b]
  40847c:	scas   al,BYTE PTR es:[edi]
  40847d:	retf   0x1908
  408480:	xchg   ebp,eax
  408481:	das    
  408482:	dec    ebp
  408483:	jns    0x4084e0
  408485:	jmp    0x40846f
  408487:	dec    eax
  408488:	xchg   DWORD PTR [eax-0x33],esi
  40848b:	pop    ecx
  40848c:	jecxz  0x40848d
  40848e:	cmp    BYTE PTR [ecx-0x33],dl
  408491:	adc    dh,BYTE PTR ds:0xebfeb39b
  408497:	mov    bh,0x93
  408499:	adc    eax,0xb1f546e2
  40849e:	lds    ebx,FWORD PTR [eax+0x1a59cd97]
  4084a4:	push   0xffffffb2
  4084a6:	addr16 dec esp
  4084a8:	jne    0x4084d1
  4084aa:	xchg   edi,eax
  4084ab:	jmp    0x7f767fd8
  4084b0:	in     eax,dx
  4084b1:	xchg   ebx,eax
  4084b2:	mov    dl,0x46
  4084b4:	scas   al,BYTE PTR es:[edi]
  4084b5:	cs ret 
  4084b7:	in     al,0x98
  4084b9:	inc    esp
  4084ba:	and    eax,0x753e4b62
  4084bf:	call   0x91d953dc
  4084c4:	cmp    eax,0xa17c7d1
  4084c9:	and    edi,ebp
  4084cb:	mov    edx,ss
  4084cd:	leave  
  4084ce:	pop    esp
  4084cf:	push   edi
  4084d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084d1:	cdq    
  4084d2:	ja     0x40846f
  4084d4:	xchg   ebx,eax
  4084d5:	call   0xcc84d94d
  4084da:	pusha  
  4084db:	adc    dl,BYTE PTR [eax]
  4084dd:	inc    edi
  4084de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084df:	mov    ch,0xc0
  4084e1:	loopne 0x4084ba
  4084e3:	inc    ecx
  4084e4:	dec    edx
  4084e5:	pusha  
  4084e6:	and    edx,esp
  4084e8:	or     al,0xce
  4084ea:	popa   
  4084eb:	div    ch
  4084ed:	lods   eax,DWORD PTR ds:[esi]
  4084ee:	dec    ebx
  4084ef:	jmp    0xb642:0x3b737f88
  4084f6:	out    0x30,eax
  4084f8:	mov    al,bh
  4084fa:	fidivr WORD PTR [eax-0x40]
  4084fd:	or     DWORD PTR [edx-0x78],esi
  408500:	fs sbb esp,esi
  408503:	sar    DWORD PTR [eax],0x19
  408506:	add    ah,0xde
  408509:	push   ecx
  40850a:	ja     0x408502
  40850c:	fmul   DWORD PTR [ecx+0x6f]
  40850f:	pop    ebx
  408510:	push   ss
  408511:	(bad)  
  408512:	cmc    
  408513:	(bad)  
  408514:	retf   
  408515:	pop    es
  408516:	not    BYTE PTR [edx-0x78]
  408519:	xchg   esp,eax
  40851a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40851b:	imul   ebp,DWORD PTR [edi-0x24],0x46
  40851f:	ss pop ss
  408521:	repz dec ebp
  408523:	stos   DWORD PTR es:[edi],eax
  408524:	adc    BYTE PTR [ecx-0x49822350],dh
  40852a:	inc    esp
  40852b:	aaa    
  40852c:	mov    al,ds:0xa6855954
  408531:	cwde   
  408532:	mov    al,ds:0xdab5b92d
  408537:	jmp    0x4085a0
  408539:	sbb    eax,0x7a1a93ae
  40853e:	and    eax,0xfc454fca
  408543:	std    
  408544:	inc    esp
  408545:	lods   al,BYTE PTR ds:[esi]
  408546:	mov    bh,0xf0
  408548:	inc    edi
  408549:	sbb    esp,edi
  40854b:	gs jmp 0x4085b1
  40854e:	fsub   st(0),st
  408550:	sub    DWORD PTR es:[ebp+0x61],0x74
  408555:	mov    eax,ds:0xb31ddfc7
  40855a:	(bad)  
  40855b:	call   0xe431:0xf73d405d
  408562:	add    esp,DWORD PTR [ebx-0x15]
  408565:	sbb    al,0x0
  408567:	loopne 0x408578
  408569:	mov    DWORD PTR [esi+0x3d04d2fd],edi
  40856f:	shr    DWORD PTR ds:[eax-0x713b232f],1
  408576:	cmp    ch,0x9b
  408579:	mov    al,ds:0x2c282bea
  40857e:	pop    esp
  40857f:	push   esp
  408580:	clc    
  408581:	ins    DWORD PTR es:[edi],dx
  408582:	out    0x92,al
  408584:	fbld   TBYTE PTR [ecx+0x75]
  408587:	xor    dh,BYTE PTR [ebx-0x5e5c00b5]
  40858d:	and    edi,DWORD PTR es:[edx+0x6e]
  408591:	or     edx,DWORD PTR [esi]
  408593:	and    BYTE PTR [esi],dl
  408595:	js     0x4085f2
  408597:	imul   esi,DWORD PTR [ebp+0x4423be],0x42e93b0b
  4085a1:	jg     0x40854f
  4085a3:	push   edi
  4085a4:	mov    cs,WORD PTR [ecx+0x39]
  4085a7:	loope  0x408609
  4085a9:	push   esi
  4085aa:	push   0xffffff96
  4085ac:	mov    dh,0xf1
  4085ae:	bound  ecx,QWORD PTR [eax]
  4085b0:	cli    
  4085b1:	shl    DWORD PTR [ecx-0x72f21959],cl
  4085b7:	sbb    eax,0x51133edf
  4085bc:	or     esp,edi
  4085be:	jne    0x40859f
  4085c0:	push   eax
  4085c1:	pop    es
  4085c2:	fimul  WORD PTR [edi-0x303a2893]
  4085c8:	mov    ds:0x5c3a490c,al
  4085cd:	pop    eax
  4085ce:	repz sbb al,0x4b
  4085d1:	stos   DWORD PTR es:[edi],eax
  4085d2:	mov    ebp,0x79db0ca5
  4085d7:	ss adc eax,0xb7b9e865
  4085de:	mov    edi,0xf4592155
  4085e3:	mov    bh,0xa8
  4085e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085e6:	mov    ah,0xd4
  4085e8:	jp     0x4085d0
  4085ea:	and    eax,0xdb10b90f
  4085ef:	jecxz  0x40861c
  4085f1:	(bad)  
  4085f2:	popf   
  4085f3:	(bad)  [ebp+ebp*8+0x38]
  4085f7:	test   eax,0x7e3005c4
  4085fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085fd:	shl    ch,1
  4085ff:	sub    al,0xbd
  408601:	std    
  408602:	inc    edx
  408603:	mov    al,BYTE PTR [edx+ebx*8+0x7]
  408607:	mov    dh,0xb6
  408609:	mov    ch,BYTE PTR [ebx+0x7f163f36]
  40860f:	ins    DWORD PTR es:[edi],dx
  408610:	(bad)  
  408611:	div    DWORD PTR [edi+0x28]
  408614:	dec    ebx
  408615:	sahf   
  408616:	adc    eax,0x2f752b16
  40861b:	mov    esp,0x72887b7c
  408620:	jl     0x4085d0
  408622:	rol    BYTE PTR [di],1
  408625:	dec    eax
  408626:	loopne 0x4085ae
  408628:	jmp    0xfd4b1b26
  40862d:	sbb    ebx,DWORD PTR [edi-0x7a]
  408630:	jecxz  0x408665
  408632:	repz jp 0x40860d
  408635:	jmp    0x4d46848c
  40863a:	out    dx,eax
  40863b:	xor    WORD PTR [esi+0x7cf0d4d],bx
  408642:	xor    ebp,ebx
  408644:	cdq    
  408645:	xor    al,0x4a
  408647:	ins    DWORD PTR es:[edi],dx
  408648:	or     ebp,DWORD PTR [eax+0x18c0297b]
  40864e:	fisubr DWORD PTR [eax]
  408650:	rcl    ecx,1
  408652:	and    ch,ch
  408654:	call   0x7a18:0x94d47eff
  40865b:	call   0x1f76:0x361efe0b
  408662:	adc    DWORD PTR ds:0x95a35b50,edx
  408668:	lea    esp,[edi]
  40866a:	fnstcw WORD PTR [eax-0x1764e9ac]
  408670:	bound  ebp,QWORD PTR [edi]
  408672:	mov    ebp,0x3b476042
  408677:	retf   
  408678:	shl    esi,0x51
  40867b:	fsubr  st,st(7)
  40867d:	push   0xffffff99
  40867f:	ret    
  408680:	mov    esi,0x9365a33f
  408685:	or     BYTE PTR cs:[eax+esi*4-0x6e6ecdc8],dl
  40868d:	xchg   ebp,eax
  40868e:	scas   al,BYTE PTR es:[edi]
  40868f:	pop    ds
  408690:	shr    DWORD PTR [ebx-0x16ae5c0e],1
  408696:	xchg   esp,eax
  408697:	xchg   ebx,eax
  408698:	and    al,0x29
  40869a:	dec    ebp
  40869b:	mov    edx,0x7c26e535
  4086a0:	lds    ebx,FWORD PTR [ebx]
  4086a2:	jbe    0x408720
  4086a4:	sub    DWORD PTR [ecx+0x573fa402],eax
  4086aa:	lods   al,BYTE PTR ds:[esi]
  4086ab:	in     eax,dx
  4086ac:	jl     0x40868b
  4086ae:	push   esi
  4086af:	mov    BYTE PTR ds:0x77bf9124,bh
  4086b5:	or     eax,0xa8f38345
  4086ba:	add    ebx,DWORD PTR [eax+0x43]
  4086bd:	imul   eax,DWORD PTR [edx+0x2],0xffffffff
  4086c1:	add    bl,al
  4086c3:	pop    edx
  4086c4:	out    0x20,eax
  4086c6:	or     eax,0x1a67fa3d
  4086cb:	sub    al,0x6a
  4086cd:	test   DWORD PTR [eax],esp
  4086cf:	call   DWORD PTR [esp+edx*8+0x2d]
  4086d3:	or     eax,0xf8ececfb
  4086d8:	scas   al,BYTE PTR es:[edi]
  4086d9:	lds    ebx,FWORD PTR [ebp+esi*2+0x61a07c0d]
  4086e0:	inc    ebp
  4086e1:	rcr    eax,0xb8
  4086e4:	das    
  4086e5:	sub    ebx,esi
  4086e7:	pop    ebx
  4086e8:	jp     0x40866e
  4086ea:	loop   0x4086f7
  4086ec:	mov    cs,WORD PTR [ebx+0x7fe4e9ae]
  4086f2:	iret   
  4086f3:	stos   DWORD PTR es:[edi],eax
  4086f4:	xchg   ebp,eax
  4086f5:	mov    WORD PTR [ebp+0x34a2cce1],cs
  4086fb:	and    eax,0xdc246139
  408700:	adc    ah,BYTE PTR [esi]
  408702:	or     al,0x3a
  408704:	add    ebp,DWORD PTR [ebp+0x3b142f53]
  40870a:	in     al,0x2a
  40870c:	push   ss
  40870d:	clc    
  40870e:	mov    al,ds:0xd21aa6e5
  408713:	xchg   edi,eax
  408714:	sub    bl,0x1
  408717:	pusha  
  408718:	cli    
  408719:	js     0x408704
  40871b:	add    al,0xc8
  40871d:	adc    ecx,0xc99f7e83
  408723:	lock push cs
  408725:	add    BYTE PTR [ebp+0x50],dh
  408728:	push   ebx
  408729:	icebp  
  40872a:	inc    eax
  40872b:	sub    ah,BYTE PTR [edi]
  40872d:	lahf   
  40872e:	pop    ds
  40872f:	push   es
  408730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408731:	hlt    
  408732:	ins    DWORD PTR es:[edi],dx
  408733:	mov    bl,0xdf
  408735:	cdq    
  408736:	stos   DWORD PTR es:[edi],eax
  408737:	push   edx
  408738:	inc    esi
  408739:	int3   
  40873a:	inc    esp
  40873b:	sub    ebp,0xffffff96
  40873e:	mov    al,ds:0x3761e851
  408743:	mov    ecx,DWORD PTR [ecx]
  408745:	mov    al,0x96
  408747:	in     al,0x88
  408749:	xor    al,0xca
  40874b:	movaps xmm0,xmm5
  40874e:	and    BYTE PTR [ebx+0x7f],bl
  408751:	cmp    dh,BYTE PTR [ebx+0x30]
  408754:	pusha  
  408755:	ret    0xa180
  408758:	int    0xbc
  40875a:	mov    WORD PTR [esi+0x26],ds
  40875d:	hlt    
  40875e:	ins    DWORD PTR es:[edi],dx
  40875f:	push   ecx
  408760:	(bad)  
  408761:	ficomp WORD PTR [ebp+0xe7a162c]
  408767:	xchg   cl,ah
  408769:	or     al,dh
  40876b:	(bad)  
  40876c:	test   BYTE PTR [edi-0x55],ch
  40876f:	mov    ch,0x77
  408771:	jg     0x40874c
  408773:	inc    eax
  408774:	jl     0x408772
  408776:	rcr    dh,cl
  408778:	mov    ds,esp
  40877a:	fcom   DWORD PTR [esi+0x29]
  40877d:	mov    cs,esp
  40877f:	jl     0x408797
  408781:	cmp    esi,ebx
  408783:	repnz pop eax
  408785:	in     eax,0xf2
  408787:	or     DWORD PTR ds:0xc40bf845,edx
  40878d:	outs   dx,BYTE PTR ds:[esi]
  40878e:	ins    DWORD PTR es:[edi],dx
  40878f:	add    cl,BYTE PTR [eax+ebx*1+0x5f]
  408793:	into   
  408794:	shl    DWORD PTR [edi+0x52],cl
  408797:	inc    esi
  408798:	cmp    BYTE PTR [ebp-0x1950b07b],bh
  40879e:	repz xchg ebx,eax
  4087a0:	mov    ecx,ss
  4087a2:	inc    esp
  4087a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087a4:	fcomp  DWORD PTR [eax-0x5b0b9ffc]
  4087aa:	outs   dx,BYTE PTR ds:[esi]
  4087ab:	mov    edx,esi
  4087ad:	jmp    0x2126:0xe1f3a688
  4087b4:	mov    DWORD PTR [ebp-0xa],esp
  4087b7:	pop    DWORD PTR [eax+0x3dedd62a]
  4087bd:	fs mov ebx,0x589a90e5
  4087c3:	inc    ebp
  4087c4:	jne    0x40877e
  4087c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087c7:	cmc    
  4087c8:	fdivp  st(2),st
  4087ca:	pop    esi
  4087cb:	mov    edi,0x928c3b6e
  4087d0:	cmp    dl,BYTE PTR [ebx+edx*1-0x5e36e784]
  4087d7:	jae    0x4087a5
  4087d9:	nop
  4087da:	pop    ss
  4087db:	aaa    
  4087dc:	push   ebx
  4087dd:	jmp    0x4087ea
  4087df:	enter  0x69c9,0x63
  4087e3:	push   edi
  4087e4:	add    DWORD PTR [eax+eax*1-0x6243e683],ebx
  4087eb:	into   
  4087ec:	pop    ds
  4087ed:	mov    ch,0xfb
  4087ef:	scas   al,BYTE PTR es:[edi]
  4087f0:	jnp    0x408774
  4087f2:	setbe  BYTE PTR [ebp-0x60c1e261]
  4087f9:	stc    
  4087fa:	or     al,0xad
  4087fc:	sbb    eax,0x412b1adf
  408801:	imul   ecx,esp,0x550303b5
  408807:	pop    ecx
  408808:	pop    esi
  408809:	sar    BYTE PTR [eax+0x4d],cl
  40880c:	xchg   esi,eax
  40880d:	jmp    0x33b3:0xa9a62993
  408814:	jae    0x4087a9
  408816:	repz push 0xfffffffb
  408819:	mov    eax,0x155fef5a
  40881e:	xchg   esi,eax
  40881f:	adc    dh,cl
  408821:	push   0xcff0176a
  408826:	sub    eax,0x9aa9092f
  40882b:	in     al,dx
  40882c:	push   esi
  40882d:	in     eax,0xb5
  40882f:	mul    dh
  408831:	arpl   WORD PTR [eax-0x6bd2c6f5],di
  408837:	mov    bh,0x6a
  408839:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40883b:	sub    dl,BYTE PTR ds:0x228f922d
  408841:	inc    BYTE PTR [ebx]
  408843:	mov    eax,0x1c567610
  408848:	clc    
  408849:	not    DWORD PTR [eax+0x529c54b2]
  40884f:	jp     0x40884b
  408851:	xor    DWORD PTR [eax+0x73dd622a],ecx
  408857:	push   esi
  408858:	sbb    BYTE PTR [esi+edx*2],cl
  40885b:	shl    ebx,cl
  40885d:	lahf   
  40885e:	jmp    0x6a76bc32
  408863:	jno    0x408823
  408865:	pop    ss
  408866:	mov    esp,0x78ea6aa3
  40886b:	rsqrtps xmm3,XMMWORD PTR [esi-0x18]
  40886f:	retf   0x8da9
  408872:	(bad)  
  408873:	push   eax
  408874:	shl    DWORD PTR [eax+0x2a08b12b],cl
  40887a:	xchg   esi,eax
  40887b:	inc    esp
  40887c:	pop    ds
  40887d:	jl     0x408816
  40887f:	xor    bl,BYTE PTR [esi+0x4f]
  408882:	jns    0x408814
  408884:	adc    al,0x4c
  408886:	test   DWORD PTR [ebx+0x7e26831],esp
  40888c:	fild   QWORD PTR [ecx]
  40888e:	pop    ss
  40888f:	mov    dl,0x9c
  408891:	add    bh,BYTE PTR [ecx+0x25f14fa8]
  408897:	cmp    edx,edi
  408899:	call   esp
  40889b:	jbe    0x4088fc
  40889d:	pop    ebp
  40889e:	ja     0x408829
  4088a0:	mov    edi,0x8697c5d4
  4088a5:	sub    BYTE PTR [ebx-0x175d6e1a],dh
  4088ab:	dec    edx
  4088ac:	les    esp,FWORD PTR [ecx]
  4088ae:	into   
  4088af:	jo     0x40888d
  4088b1:	jge    0x4088d6
  4088b3:	loope  0x408890
  4088b5:	pop    eax
  4088b6:	cdq    
  4088b7:	lods   al,BYTE PTR ds:[esi]
  4088b8:	jnp    0x408916
  4088ba:	dec    esp
  4088bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088bc:	outs   dx,DWORD PTR ds:[esi]
  4088bd:	and    BYTE PTR [edi-0x74],bh
  4088c0:	inc    edi
  4088c1:	pop    es
  4088c2:	jbe    0x40892d
  4088c4:	mov    edi,0x92e18275
  4088c9:	fldenv [ebp+0x3a133dbc]
  4088cf:	shl    esi,0x9b
  4088d2:	arpl   WORD PTR [edi-0x4ab074b],bx
  4088d8:	xchg   esi,eax
  4088d9:	sti    
  4088da:	aas    
  4088db:	sar    ecx,0x92
  4088de:	xor    edi,DWORD PTR [esi]
  4088e0:	mov    bh,BYTE PTR [ebp+edi*2+0x64]
  4088e4:	xor    BYTE PTR [ebx+0x78937135],al
  4088ea:	cs je  0x4088b4
  4088ed:	xor    bl,bh
  4088ef:	and    edx,DWORD PTR [eax+ecx*2+0x1]
  4088f3:	call   0x89f1e043
  4088f8:	xor    BYTE PTR [ecx],bh
  4088fa:	leave  
  4088fb:	and    DWORD PTR [edx],eax
  4088fd:	dec    ebx
  4088fe:	ins    BYTE PTR es:[edi],dx
  4088ff:	xchg   ebx,ebx
  408901:	sbb    eax,0xb6d98d12
  408906:	lock mov ecx,0x9609581
  40890c:	into   
  40890d:	fadd   QWORD PTR [edi+0x47]
  408910:	jl     0x40891b
  408912:	jno    0x40898d
  408914:	mov    ds:0xbb1ec7a0,eax
  408919:	adc    bl,ah
  40891b:	push   ebp
  40891c:	mov    ch,BYTE PTR [ebp-0x44]
  40891f:	xchg   edx,eax
  408920:	cwde   
  408921:	sub    ch,BYTE PTR ds:0xe633113e
  408927:	les    esi,FWORD PTR [esi]
  408929:	xor    esi,esi
  40892b:	mov    WORD PTR [ebp+ebp*2-0x299802a2],?
  408932:	and    BYTE PTR [esi],0xa5
  408935:	bound  edx,QWORD PTR [ecx+0x3d]
  408938:	or     esi,DWORD PTR [eax+0x65]
  40893b:	add    edi,DWORD PTR [esi+0x5c]
  40893e:	es stos DWORD PTR es:[edi],eax
  408940:	enter  0x2ff5,0x2c
  408944:	cld    
  408945:	adc    DWORD PTR [ecx-0x6],edi
  408948:	mov    eax,0xf4061e9d
  40894d:	xchg   edi,eax
  40894e:	adc    DWORD PTR [esi-0x7ef639ba],edi
  408954:	cmp    DWORD PTR [edx-0x70686c76],edi
  40895a:	shl    ah,cl
  40895c:	pop    edi
  40895d:	xor    eax,0x399cc330
  408962:	xchg   esi,eax
  408963:	inc    ebp
  408964:	loopne 0x40894b
  408966:	dec    edx
  408967:	hlt    
  408968:	dec    ebp
  408969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40896a:	xor    ebx,ebx
  40896c:	xchg   esp,eax
  40896d:	fs jp  0x4089a5
  408970:	push   0x60
  408972:	adc    ecx,DWORD PTR ds:0xf38a34a6
  408978:	adc    DWORD PTR gs:0x67a41272,edx
  40897f:	xchg   esi,eax
  408980:	pop    edi
  408981:	lods   eax,DWORD PTR ds:[esi]
  408982:	sub    DWORD PTR [ecx-0x35f83e7b],esi
  408988:	jle    0x40890a
  40898a:	addr16 dec ebx
  40898c:	(bad)  
  40898d:	jmp    0x9793:0x9ec42837
  408994:	fcomp  QWORD PTR [edi]
  408996:	push   es
  408997:	and    eax,0x1ecf3510
  40899c:	adc    al,0xe4
  40899e:	enter  0xde22,0xb1
  4089a2:	sbb    DWORD PTR [ebx+0x43c6c7f2],eax
  4089a8:	xor    DWORD PTR [edi-0x242cd086],ebp
  4089ae:	dec    ebp
  4089af:	popa   
  4089b0:	cmp    eax,0xc1d557b7
  4089b5:	ins    BYTE PTR es:[edi],dx
  4089b6:	pop    esp
  4089b7:	ja     0x408a1f
  4089b9:	jbe    0x408962
  4089bb:	inc    esp
  4089bc:	mov    eax,0x5d875eea
  4089c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089c2:	outs   dx,DWORD PTR ds:[esi]
  4089c3:	lods   al,BYTE PTR ds:[esi]
  4089c4:	cwde   
  4089c5:	aaa    
  4089c6:	push   ds
  4089c7:	and    BYTE PTR [esp+edi*2+0x3849a3e0],dh
  4089ce:	ja     0x4089dd
  4089d0:	or     BYTE PTR cs:[ecx+0x590a6cdb],bh
  4089d7:	xchg   edx,eax
  4089d8:	add    BYTE PTR [eax],ah
  4089da:	xor    al,0x11
  4089dc:	iret   
  4089dd:	push   0x83401e43
  4089e2:	xchg   edx,eax
  4089e3:	push   0xfffffff3
  4089e5:	pop    esi
  4089e6:	push   ds
  4089e7:	test   BYTE PTR cs:[edi],bl
  4089ea:	push   ss
  4089eb:	aas    
  4089ec:	sub    bl,BYTE PTR [ecx+0x12]
  4089ef:	call   0xe9dcce9d
  4089f4:	retf   0x50fc
  4089f7:	push   ds
  4089f8:	stos   DWORD PTR es:[edi],eax
  4089f9:	pop    edi
  4089fa:	or     eax,0x8134954f
  4089ff:	jb     0x408a48
  408a01:	xchg   esp,eax
  408a02:	jne    0x408a2b
  408a04:	pop    edi
  408a05:	xchg   esp,eax
  408a06:	outs   dx,DWORD PTR ds:[esi]
  408a07:	rcr    dh,cl
  408a09:	mov    al,ds:0xdcc5d8f8
  408a0e:	es push ecx
  408a10:	(bad)  
  408a11:	cld    
  408a12:	mov    edx,0x12607065
  408a17:	enter  0x1058,0x76
  408a1b:	adc    DWORD PTR [ebx+0x3f],eax
  408a1e:	int3   
  408a1f:	sub    eax,0x2422b611
  408a24:	mov    ebp,ds
  408a26:	xchg   ebx,eax
  408a27:	inc    edi
  408a28:	pop    esp
  408a29:	loopne 0x4089eb
  408a2b:	xchg   esp,eax
  408a2c:	push   ebp
  408a2d:	in     al,0x82
  408a2f:	xchg   esi,eax
  408a30:	cmc    
  408a31:	scas   eax,DWORD PTR es:[edi]
  408a32:	sti    
  408a33:	jmp    0xc87a:0xef12907d
  408a3a:	test   DWORD PTR ds:0xdf52fba9,0xbfbd0a36
  408a44:	or     BYTE PTR [edi+0x14ad7f0a],ah
  408a4a:	sti    
  408a4b:	sub    eax,0xc6f15204
  408a50:	xchg   ecx,eax
  408a51:	fs jl  0x408a14
  408a54:	outs   dx,DWORD PTR ds:[esi]
  408a55:	mov    esi,0xc1218baa
  408a5a:	mov    ds:0xd89721fd,al
  408a5f:	and    cl,BYTE PTR [eax+eax*8+0x7abbd76]
  408a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a67:	scas   al,BYTE PTR es:[edi]
  408a68:	loop   0x4089ea
  408a6a:	(bad)  
  408a6b:	push   edx
  408a6c:	test   al,0xd1
  408a6e:	jmp    0x3cb0c242
  408a73:	push   edx
  408a74:	mov    ah,0x9e
  408a76:	xor    eax,0x5d928510
  408a7b:	dec    eax
  408a7c:	mov    al,gs:0x147cfb37
  408a82:	repnz imul eax,ecx,0x472a15cf
  408a89:	add    eax,0xf066b72a
  408a8e:	dec    eax
  408a8f:	xchg   edi,eax
  408a90:	add    BYTE PTR [ebp-0x791ba7a2],dh
  408a96:	xchg   esp,ebx
  408a98:	fiadd  DWORD PTR [esi]
  408a9a:	sbb    eax,0x9900d4b6
  408a9f:	sub    DWORD PTR [edi],0xffffffbb
  408aa2:	mov    esi,0xaa5a22a3
  408aa7:	xchg   ebx,eax
  408aa8:	xor    eax,0x517d2d33
  408aad:	fldcw  WORD PTR [ecx]
  408aaf:	push   cs
  408ab0:	stos   BYTE PTR es:[edi],al
  408ab1:	scas   al,BYTE PTR es:[edi]
  408ab2:	enter  0x6be5,0x2
  408ab6:	xor    ch,BYTE PTR [esp+edi*2-0x47e721bb]
  408abd:	loope  0x408b27
  408abf:	push   esp
  408ac0:	xchg   DWORD PTR [esi+ebp*4-0x21],edi
  408ac4:	pop    edi
  408ac5:	inc    edi
  408ac6:	mov    ecx,0x7b4a9c39
  408acb:	fmulp  st(4),st
  408acd:	xor    BYTE PTR [eax+0x9f6c649],0xc5
  408ad4:	test   BYTE PTR [ebp-0x64bda634],ah
  408ada:	add    bh,al
  408adc:	jl     0x408b1c
  408ade:	sti    
  408adf:	pop    es
  408ae0:	pushf  
  408ae1:	test   DWORD PTR [ebx+0x288fa96f],edx
  408ae7:	push   edx
  408ae8:	adc    BYTE PTR [eax],0xeb
  408aeb:	ret    0x3800
  408aee:	mov    DWORD PTR [ebp-0x34a764a6],esi
  408af4:	sub    DWORD PTR [esi],esi
  408af6:	dec    edx
  408af7:	repz dec edi
  408af9:	push   esp
  408afa:	lock inc edx
  408afc:	cdq    
  408afd:	inc    ebp
  408afe:	addr16 mov cl,0x81
  408b01:	mov    esi,0xc0613d1f
  408b06:	les    ebx,FWORD PTR [eax+0x45]
  408b09:	call   0xc458a2c0
  408b0e:	fwait
  408b0f:	jmp    0x86cfb458
  408b14:	mov    ebx,0x27b03a44
  408b19:	jmp    FWORD PTR [esi]
  408b1b:	idiv   bh
  408b1d:	mov    ?,WORD PTR [ebp-0x4523a1e]
  408b23:	(bad)  
  408b24:	cmc    
  408b25:	mov    ecx,0xeb9205e9
  408b2a:	inc    edx
  408b2b:	xchg   DWORD PTR [edx-0x512fc3cf],edi
  408b31:	mov    esi,0xd3b4c41d
  408b36:	addr16 test eax,0x508e2eec
  408b3c:	dec    esp
  408b3d:	xchg   ebx,eax
  408b3e:	lea    edi,[esp+ebp*1-0x40]
  408b42:	sbb    al,0x39
  408b44:	pop    ecx
  408b45:	sbb    DWORD PTR [ebx+0x647fdda7],ebx
  408b4b:	fdiv   QWORD PTR [edx+eiz*8]
  408b4e:	dec    eax
  408b4f:	push   cs
  408b50:	or     DWORD PTR [esi],esi
  408b52:	fst    QWORD PTR ds:0x3b4ab601
  408b58:	add    dl,BYTE PTR [ebx+0x33]
  408b5b:	sti    
  408b5c:	lds    ebx,FWORD PTR [eax]
  408b5e:	adc    ecx,DWORD PTR [ebp+0xc]
  408b61:	frstor [eax]
  408b63:	push   edi
  408b64:	xor    BYTE PTR [esi-0x72a4cd40],0xb1
  408b6b:	jne    0x408bcd
  408b6d:	fistp  DWORD PTR [eax+0x6c]
  408b70:	mov    ebp,DWORD PTR [edx]
  408b72:	adc    DWORD PTR [eax],eax
  408b74:	push   ebx
  408b75:	xor    bh,dl
  408b77:	add    edi,DWORD PTR [edx]
  408b79:	or     edx,DWORD PTR [eax+0x2167e13]
  408b7f:	cmp    DWORD PTR [esi],0xffffffbb
  408b82:	add    eax,0x12940b79
  408b87:	mov    DWORD PTR [edi-0x6b602dcb],edi
  408b8d:	gs sti 
  408b8f:	and    DWORD PTR [ebx+eiz*2+0x67],ebx
  408b93:	clc    
  408b94:	hlt    
  408b95:	push   esp
  408b96:	adc    al,0xec
  408b98:	ds and al,0x7e
  408b9b:	cmp    ecx,DWORD PTR [ebx]
  408b9d:	dec    edi
  408b9e:	xor    BYTE PTR [ebx-0x3f],cl
  408ba1:	shr    BYTE PTR [edx-0x7e],cl
  408ba4:	pop    edx
  408ba5:	add    eax,0xc1841a63
  408baa:	loopne 0x408bf6
  408bac:	cli    
  408bad:	jp     0x408c06
  408baf:	xor    al,dl
  408bb1:	test   eax,0xdd326850
  408bb6:	mov    dh,0x5a
  408bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bb9:	call   0x390292e6
  408bbe:	mov    eax,0x820d4d6
  408bc3:	mov    dl,0x99
  408bc5:	sbb    ecx,DWORD PTR [ebp-0x3d]
  408bc8:	inc    eax
  408bc9:	jae    0x408b56
  408bcb:	mov    DWORD PTR [edx],0x4f58bc12
  408bd1:	xor    esp,DWORD PTR [edi+0x4c]
  408bd4:	arpl   WORD PTR [edx],bp
  408bd6:	mov    bl,0x1c
  408bd8:	mov    dl,0xac
  408bda:	add    al,0xfe
  408bdc:	mov    bh,0x5b
  408bde:	popa   
  408bdf:	sahf   
  408be0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408be1:	push   edi
  408be2:	jbe    0x408b83
  408be4:	jge    0x408c42
  408be6:	adc    eax,0xaf86ce64
  408beb:	psubusw mm3,mm3
  408bee:	das    
  408bef:	dec    eax
  408bf0:	push   ebp
  408bf1:	sub    BYTE PTR [edx+eax*8],bl
  408bf4:	enter  0x319d,0x3a
  408bf8:	jns    0x408be1
  408bfa:	cmp    al,0xab
  408bfc:	dec    esp
  408bfd:	add    al,0x6d
  408bff:	scas   eax,DWORD PTR es:[edi]
  408c00:	aam    0xc4
  408c02:	das    
  408c03:	(bad)  
  408c06:	mov    ?,WORD PTR [ebx]
  408c08:	popf   
  408c09:	ja     0x408c85
  408c0b:	sub    DWORD PTR [ecx+0x39],esi
  408c0e:	in     eax,dx
  408c0f:	xchg   ebx,eax
  408c10:	mov    bl,bh
  408c12:	dec    ecx
  408c13:	jmp    0x295d7bc7
  408c18:	lods   al,BYTE PTR ds:[esi]
  408c19:	call   0x8dba7dd7
  408c1e:	adc    eax,0x3bf7a239
  408c23:	mov    bh,0x9b
  408c25:	jecxz  0x408bec
  408c27:	dec    esp
  408c28:	push   edx
  408c29:	and    DWORD PTR [eax+0x4b],0xffffff97
  408c2d:	lahf   
  408c2e:	or     dl,BYTE PTR [ecx+0x4a02bccb]
  408c34:	add    ah,dh
  408c36:	(bad)  
  408c37:	adc    BYTE PTR [edi+0x3a],ah
  408c3a:	(bad)  
  408c3b:	pop    ss
  408c3c:	push   0x18100882
  408c41:	xchg   ebp,eax
  408c42:	adc    DWORD PTR [edi+0x1b045e8b],eax
  408c48:	ret    
  408c49:	xchg   ebp,eax
  408c4a:	add    al,0x30
  408c4c:	mov    al,0x3d
  408c4e:	mov    WORD PTR [edx+esi*4+0x7],es
  408c52:	jo     0x408c96
  408c54:	pop    ebp
  408c55:	cli    
  408c56:	inc    ecx
  408c57:	jmp    0x6a3b:0x5e8ac2f5
  408c5e:	dec    esp
  408c5f:	cmp    ebx,DWORD PTR [eax-0x55d4fb63]
  408c65:	sub    BYTE PTR [eax+0x36],bh
  408c68:	adc    eax,DWORD PTR [ebx]
  408c6a:	mov    al,ds:0x2fcbbb4b
  408c6f:	mov    eax,0x6f8a8373
  408c74:	xchg   ebx,eax
  408c75:	in     eax,0x9
  408c77:	push   ss
  408c78:	pop    eax
  408c79:	push   0x56
  408c7b:	pop    edi
  408c7c:	xchg   edx,eax
  408c7d:	jmp    0x408cfd
  408c7f:	stos   DWORD PTR es:[edi],eax
  408c80:	jbe    0x408c57
  408c82:	in     eax,dx
  408c83:	inc    edx
  408c84:	xchg   BYTE PTR [edx],bl
  408c86:	inc    ebp
  408c87:	dec    esp
  408c88:	push   ebx
  408c89:	adc    cl,BYTE PTR [edi-0x6d]
  408c8c:	inc    ecx
  408c8d:	scas   al,BYTE PTR es:[edi]
  408c8e:	dec    esp
  408c8f:	ficom  DWORD PTR [edx-0x5]
  408c92:	in     al,dx
  408c93:	sub    DWORD PTR [esi],esp
  408c95:	addr16 ja 0x408cca
  408c98:	call   0x8e4a60d2
  408c9d:	sub    BYTE PTR [eiz*1-0x1c65d9e1],dl
  408ca4:	rol    esp,0x4c
  408ca7:	dec    edi
  408ca8:	sub    eax,0xae0dee0b
  408cad:	fdiv   st(1),st
  408caf:	xor    BYTE PTR [eax],bh
  408cb1:	rcl    al,0x54
  408cb4:	mov    gs,WORD PTR [ecx+0x10]
  408cb7:	cld    
  408cb8:	enter  0x9a51,0xed
  408cbc:	adc    eax,0xcc51994a
  408cc1:	pop    edx
  408cc2:	fstp   DWORD PTR [ebp+0x16b519ec]
  408cc8:	jmp    0xf7c:0x23b924ba
  408ccf:	cmp    BYTE PTR [ebp-0x3b],dh
  408cd2:	mov    ecx,eax
  408cd4:	push   edi
  408cd5:	adc    BYTE PTR [edi-0x340789d1],al
  408cdb:	lods   eax,DWORD PTR ds:[esi]
  408cdc:	int3   
  408cdd:	mov    DWORD PTR [esi+eax*2+0x385840e2],0xe1170c4b
  408ce8:	cmp    BYTE PTR [ebp-0x5b82da81],bh
  408cee:	adc    eax,0xb67210fc
  408cf3:	sbb    bl,bh
  408cf5:	xor    eax,0xbff57625
  408cfa:	mov    cl,al
  408cfc:	inc    esi
  408cfd:	jmp    0xe3538cb2
  408d02:	arpl   WORD PTR [ebp-0x2dcfedb2],cx
  408d08:	aas    
  408d09:	inc    esi
  408d0a:	stos   DWORD PTR es:[edi],eax
  408d0b:	clc    
  408d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d0d:	xor    cl,BYTE PTR [ebx]
  408d0f:	inc    edx
  408d10:	pop    ds
  408d11:	mov    WORD PTR [esi+eax*2-0x335d8ee7],fs
  408d18:	loope  0x408cb7
  408d1a:	lods   eax,DWORD PTR ds:[esi]
  408d1b:	popa   
  408d1c:	xchg   edi,eax
  408d1d:	fwait
  408d1e:	jo     0x408cde
  408d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d21:	mov    esp,0xc8eae237
  408d26:	mov    ebp,0x3ece1efe
  408d2b:	or     BYTE PTR [ecx],dl
  408d2d:	add    eax,0xaeb72b4
  408d32:	shl    DWORD PTR [esi+0x329175e],cl
  408d38:	cmp    DWORD PTR [ecx+0x44],0x8a24e17c
  408d3f:	js     0x408ccd
  408d41:	mov    dh,0x26
  408d43:	mov    cl,BYTE PTR [edi-0x54]
  408d46:	mov    dh,BYTE PTR [esp+ebx*1-0x12]
  408d4a:	mov    ch,0x36
  408d4c:	mov    bl,0xb9
  408d4e:	test   eax,0xafdc4237
  408d53:	lahf   
  408d54:	loop   0x408d0e
  408d56:	stc    
  408d57:	adc    bl,0x3e
  408d5a:	ret    
  408d5b:	fiadd  DWORD PTR ds:0xe3531e17
  408d61:	push   ebx
  408d62:	std    
  408d63:	lock iret 
  408d65:	pop    edi
  408d66:	inc    ebx
  408d67:	or     DWORD PTR [esi+0x1c],0x669e277e
  408d6e:	ds jg  0x408dea
  408d71:	cmp    cl,BYTE PTR [edx-0x2c311b85]
  408d77:	into   
  408d78:	jae    0x408dcf
  408d7a:	call   0xda8f6308
  408d7f:	shl    BYTE PTR [ebx+0x70],0x4a
  408d83:	jno    0x408dd7
  408d85:	daa    
  408d86:	mov    eax,ds:0x12f84718
  408d8b:	add    eax,DWORD PTR [edi]
  408d8d:	xlat   BYTE PTR ds:[ebx]
  408d8e:	call   0x179db
  408d93:	sahf   
  408d94:	or     eax,DWORD PTR [ebx-0x51]
  408d97:	pop    eax
  408d98:	scas   al,BYTE PTR es:[edi]
  408d99:	cmp    DWORD PTR [ecx+edx*8],eax
  408d9c:	xchg   DWORD PTR [ebp+0x1d8af9ca],ebx
  408da2:	fsubrp st(6),st
  408da4:	xchg   esp,eax
  408da5:	push   eax
  408da6:	lds    eax,FWORD PTR [edi]
  408da8:	mov    bl,0x1c
  408daa:	sub    BYTE PTR [esi-0xf276e56],dh
  408db0:	xor    al,0xe3
  408db2:	cld    
  408db3:	addr16 add al,0xba
  408db6:	add    DWORD PTR [esi+0x41da5ac5],ebx
  408dbc:	cmp    cl,BYTE PTR [ecx+edx*1-0x2ff389cb]
  408dc3:	es jge 0x408db1
  408dc6:	rol    BYTE PTR [edi-0x49],cl
  408dc9:	mov    cl,0x4a
  408dcb:	jae    0x408d52
  408dcd:	mov    cl,0xa3
  408dcf:	mov    ch,0x5c
  408dd1:	xor    edi,DWORD PTR [eax-0x7]
  408dd4:	lock jo 0x408e39
  408dd7:	mov    bh,0x9f
  408dd9:	sbb    eax,0x36aa3325
  408dde:	arpl   WORD PTR ds:0x273d6fe2,sp
  408de4:	fwait
  408de5:	addr16 loop 0x408e41
  408de8:	add    bh,BYTE PTR [esi]
  408dea:	sbb    DWORD PTR [edi+0x76],edx
  408ded:	xor    DWORD PTR [ebx],ecx
  408def:	inc    esi
  408df0:	in     al,dx
  408df1:	xchg   esi,eax
  408df2:	ja     0x408e09
  408df4:	xchg   ebx,eax
  408df5:	ret    0x4885
  408df8:	jmp    0x36e7:0x7edf8e42
  408dff:	sahf   
  408e00:	push   gs
  408e02:	push   0xaa77aca3
  408e07:	or     ebx,DWORD PTR [edi+0x7a]
  408e0a:	or     al,0x37
  408e0c:	rcl    BYTE PTR [ebx-0x8],1
  408e0f:	mov    ch,0x4c
  408e11:	inc    ebp
  408e12:	ret    0xa8ce
  408e15:	and    al,0x81
  408e17:	mov    BYTE PTR [edx],ah
  408e19:	out    0x20,al
  408e1b:	or     DWORD PTR fs:[esp+ebp*8-0x1f],0x631a7eec
  408e24:	dec    edx
  408e25:	enter  0x4d66,0x8c
  408e29:	adc    eax,0xa1f2b5db
  408e2e:	mov    dl,0xfb
  408e30:	pop    edi
  408e31:	div    BYTE PTR [ecx]
  408e33:	sbb    bh,dl
  408e35:	das    
  408e36:	lods   al,BYTE PTR ds:[esi]
  408e37:	bound  ecx,QWORD PTR [ebp+0x26ef1e1d]
  408e3d:	pop    ebp
  408e3e:	and    esi,DWORD PTR [edi-0x33]
  408e41:	sub    ebx,DWORD PTR [ebp+0x5b9451f6]
  408e47:	add    DWORD PTR [edx-0x31],ebp
  408e4a:	enter  0xe3c6,0xb2
  408e4e:	fimul  WORD PTR [ebx]
  408e50:	inc    ebx
  408e51:	shr    bh,0x4
  408e54:	sbb    al,0x46
  408e56:	cwde   
  408e57:	push   ds
  408e58:	mov    bh,0x9c
  408e5a:	xchg   edx,eax
  408e5b:	lods   al,BYTE PTR ds:[esi]
  408e5c:	shl    BYTE PTR [eax+eax*1+0x47],cl
  408e60:	(bad)  
  408e61:	jmp    0xa1728c93
  408e66:	mov    ah,0x2c
  408e68:	out    0xa7,al
  408e6a:	lods   al,BYTE PTR ds:[esi]
  408e6b:	call   0x12e6:0xbadd9d57
  408e72:	fdivr  QWORD PTR [ebp-0x56cceadb]
  408e78:	mov    bl,0x89
  408e7a:	out    dx,al
  408e7b:	push   ebx
  408e7c:	cmovno edi,DWORD PTR [edi-0x71eb2c05]
  408e83:	xchg   esi,eax
  408e84:	into   
  408e85:	xchg   ebp,eax
  408e86:	(bad)  
  408e87:	sbb    esi,DWORD PTR [ebx+0x29]
  408e8a:	fnstcw WORD PTR [ebx-0x18170e45]
  408e90:	jecxz  0x408e62
  408e92:	int3   
  408e93:	and    ebp,DWORD PTR [edi-0x5eb34cd0]
  408e99:	xor    DWORD PTR [ebp-0x25],ecx
  408e9c:	fsubr  QWORD PTR [ebp+edi*1-0x6f]
  408ea0:	xchg   ebp,eax
  408ea1:	lea    esi,[eax]
  408ea3:	in     al,0xf7
  408ea5:	loope  0x408e65
  408ea7:	in     eax,0x29
  408ea9:	lds    edx,FWORD PTR [edi-0x210433d8]
  408eaf:	std    
  408eb0:	jle    0x408f28
  408eb2:	pop    ss
  408eb3:	fsub   DWORD PTR [ebx-0x29]
  408eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eb7:	clc    
  408eb8:	sbb    eax,0x91bc6598
  408ebd:	pop    es
  408ebe:	lods   eax,DWORD PTR ds:[esi]
  408ebf:	push   ebx
  408ec0:	aaa    
  408ec1:	inc    edi
  408ec2:	test   al,0x1c
  408ec4:	jecxz  0x408ecf
  408ec6:	sbb    DWORD PTR [eax-0x2c4727ef],esp
  408ecc:	jne    0x408e66
  408ece:	sub    esp,DWORD PTR [ebp+eax*2+0x2499999c]
  408ed5:	lock sub eax,0xf3923496
  408edb:	popf   
  408edc:	sub    ch,BYTE PTR [edx-0x32]
  408edf:	das    
  408ee0:	add    eax,0x11abf99c
  408ee5:	push   es
  408ee6:	inc    ebx
  408ee7:	push   ss
  408ee8:	clc    
  408ee9:	cli    
  408eea:	ja     0x2f48d900
  408ef0:	loope  0x408f69
  408ef2:	in     al,dx
  408ef3:	clc    
  408ef4:	call   0xcf5b460c
  408ef9:	mov    al,0x5b
  408efb:	add    ebp,edi
  408efd:	sbb    eax,0x335ebd6b
  408f02:	pusha  
  408f03:	xchg   ecx,eax
  408f04:	fs clc 
  408f06:	xchg   DWORD PTR [ebx],ebx
  408f08:	mov    BYTE PTR [esp+eax*2-0x69299b80],dh
  408f0f:	mov    edi,0xa4555c62
  408f14:	jmp    0x408ef6
  408f16:	push   0xa6cb05b
  408f1b:	int    0xd5
  408f1d:	mov    esp,0x24afdd2e
  408f22:	mov    es,WORD PTR [ebx-0x3037d4ab]
  408f28:	arpl   WORD PTR [ebp-0x2b],bx
  408f2b:	in     eax,0xe7
  408f2d:	mov    edx,0x4caf1b98
  408f32:	or     eax,0x651fd3a2
  408f37:	in     al,0x6d
  408f39:	retf   0x57c2
  408f3c:	sub    al,0x1a
  408f3e:	leave  
  408f3f:	xor    ch,BYTE PTR [esp+esi*2-0x18]
  408f43:	sbb    al,0xc1
  408f45:	pop    edi
  408f46:	ds loopne 0x408f92
  408f49:	pushf  
  408f4a:	lds    esi,FWORD PTR ds:0xf010c49b
  408f50:	inc    edx
  408f51:	xor    DWORD PTR [edx+0x2a],eax
  408f54:	ror    DWORD PTR [ebx+0xe80b20e],1
  408f5a:	sbb    al,0x4a
  408f5c:	bswap  eax
  408f5e:	and    al,BYTE PTR [eax-0x620440c7]
  408f64:	jg     0x408fc8
  408f66:	fnstsw WORD PTR [eax]
  408f68:	add    eax,0xae235c69
  408f6d:	xor    ecx,DWORD PTR [esi+0x14db13b0]
  408f73:	jbe    0x408ff3
  408f75:	and    bx,si
  408f78:	jns    0x408f27
  408f7a:	dec    edx
  408f7b:	(bad)  
  408f7c:	jmp    DWORD PTR [edi]
  408f7e:	in     eax,0x81
  408f80:	fs out dx,eax
  408f82:	jns    0x408fdd
  408f84:	mov    bh,0x11
  408f86:	cmp    al,0x0
  408f88:	nop
  408f89:	rcr    BYTE PTR [eax],cl
  408f8b:	inc    eax
  408f8c:	or     DWORD PTR [eax],esp
  408f8e:	mov    bh,0x8c
  408f90:	pop    esi
  408f91:	mov    dh,0x22
  408f93:	adc    eax,0x76bbd47
  408f98:	push   ebx
  408f99:	and    eax,0x1c0beb3d
  408f9e:	sti    
  408f9f:	pushf  
  408fa0:	fwait
  408fa1:	pop    ss
  408fa2:	xor    BYTE PTR es:[edx],al
  408fa5:	loop   0x408f2c
  408fa7:	adc    eax,0x6cfbddb6
  408fac:	cmp    DWORD PTR [ebx-0x38],ebx
  408faf:	aaa    
  408fb0:	inc    edi
  408fb1:	scas   eax,DWORD PTR es:[edi]
  408fb2:	fist   WORD PTR [esi+0xba9d37d]
  408fb8:	cmp    BYTE PTR [ecx-0x3457a256],cl
  408fbe:	mov    bh,0x17
  408fc0:	pop    esp
  408fc1:	push   ebx
  408fc2:	add    al,0x39
  408fc4:	daa    
  408fc5:	fist   DWORD PTR ds:0x30b8621c
  408fcb:	mov    ecx,0x9cce1e01
  408fd0:	pop    ss
  408fd1:	not    dh
  408fd3:	dec    ebp
  408fd4:	call   0x9a538c13
  408fd9:	cmc    
  408fda:	adc    bl,BYTE PTR [edx+0x5ec4a4b4]
  408fe0:	ja     0x409018
  408fe2:	daa    
  408fe3:	popa   
  408fe4:	xor    BYTE PTR [eax],al
  408fe6:	test   DWORD PTR [eax+ebp*1+0xe60eefc],esp
  408fed:	dec    ebx
  408fee:	add    cl,dl
  408ff0:	out    dx,eax
  408ff1:	mov    esp,0xf43f9239
  408ff6:	and    ecx,DWORD PTR [esi-0x299b35e0]
  408ffc:	dec    esp
  408ffd:	popaw  
  408fff:	test   al,0xe6
  409001:	loopne 0x40900d
  409003:	mov    ecx,DWORD PTR [ebx]
  409005:	not    BYTE PTR [edi]
  409007:	sbb    ebx,DWORD PTR [ebx-0x55aebfa5]
  40900d:	inc    edx
  40900e:	gs out 0x97,al
  409011:	es dec ecx
  409013:	dec    eax
  409014:	std    
  409015:	test   BYTE PTR [esi],bl
  409017:	mov    ds:0xd2feca47,eax
  40901c:	outs   dx,BYTE PTR ds:[esi]
  40901d:	pop    ecx
  40901e:	xchg   esi,eax
  40901f:	aam    0x7a
  409021:	pop    ds
  409022:	nop
  409023:	xor    eax,0x948b6cb3
  409028:	fiadd  WORD PTR [edi+0x19959949]
  40902e:	addr16 or al,0xf9
  409031:	add    eax,ecx
  409033:	adc    ebx,DWORD PTR [ebp+0x264cd2ca]
  409039:	jp     0x4090b4
  40903b:	(bad)  
  40903c:	cmp    eax,0xd2f100be
  409041:	cmp    bl,BYTE PTR [esi-0x7c65e528]
  409047:	pop    es
  409048:	leave  
  409049:	jle    0x4090bb
  40904b:	dec    edi
  40904c:	fist   WORD PTR [esi+0x55]
  40904f:	pop    edx
  409050:	test   al,0x63
  409052:	icebp  
  409053:	adc    DWORD PTR [eax],eax
  409055:	sub    ebx,DWORD PTR [edx+0x57]
  409058:	rcr    DWORD PTR [ebp+0xd7bebb5],cl
  40905e:	and    al,0x25
  409060:	aam    0xc3
  409062:	mov    ebp,0x5942375a
  409067:	xchg   cl,ah
  409069:	lea    eax,[ebx]
  40906b:	out    dx,al
  40906c:	jno    0x409066
  40906e:	loop   0x40906a
  409070:	jecxz  0x40900f
  409072:	mov    ds:0x79bb28c2,al
  409077:	push   ecx
  409078:	sbb    eax,0x38c012fa
  40907d:	je     0x409083
  40907f:	scas   eax,DWORD PTR es:[edi]
  409080:	jl     0x409017
  409082:	sub    bl,BYTE PTR [edx]
  409084:	cmc    
  409085:	repz push ds
  409087:	add    bl,bh
  409089:	ja     0x409062
  40908b:	xchg   edi,eax
  40908c:	mov    edi,0x1e5ffd20
  409091:	shl    ch,cl
  409093:	pop    ecx
  409094:	lock imul esp,DWORD PTR [ebp+0x36],0xb1ec49e5
  40909c:	mov    ebp,0xca354827
  4090a1:	push   edi
  4090a2:	call   edx
  4090a4:	mov    ebp,0x8ce16d86
  4090a9:	mov    ebp,0x99c01f5c
  4090ae:	mov    edi,0x5fb881e0
  4090b3:	stos   DWORD PTR es:[edi],eax
  4090b4:	lods   eax,DWORD PTR ds:[esi]
  4090b5:	aad    0x6f
  4090b7:	jo     0x40908e
  4090b9:	mov    esp,0x6a998b54
  4090be:	ds add al,0x7
  4090c1:	pop    ecx
  4090c2:	inc    edi
  4090c3:	mov    ds,WORD PTR [edi+0x3a37ff64]
  4090c9:	shr    BYTE PTR [eax],0x77
  4090cc:	adc    al,0xe4
  4090ce:	and    esi,DWORD PTR [ecx]
  4090d0:	and    eax,0xc516c1d7
  4090d5:	jae    0x4090e3
  4090d7:	xchg   ecx,eax
  4090d8:	sbb    BYTE PTR ds:0x47564a67,dh
  4090de:	push   esi
  4090df:	mov    eax,0x3db77cc1
  4090e4:	pop    es
  4090e5:	inc    ecx
  4090e6:	es aam 0xdc
  4090e9:	push   es
  4090ea:	cmp    ebp,DWORD PTR fs:[esi-0x49ccd3ab]
  4090f1:	pop    ecx
  4090f2:	mov    cl,cl
  4090f4:	fsub   QWORD PTR [esi-0x2b]
  4090f7:	test   al,0x47
  4090f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090fa:	fild   QWORD PTR [eax]
  4090fc:	loop   0x40909e
  4090fe:	push   ecx
  4090ff:	loopne 0x4090b1
  409101:	sub    DWORD PTR [edi+0x6997c227],esi
  409107:	jo     0x4090a5
  409109:	in     eax,0x7f
  40910b:	dec    ebp
  40910c:	jnp    0x4090b3
  40910e:	xchg   esp,eax
  40910f:	fisubr WORD PTR [ecx+0x6f552abb]
  409115:	mov    al,ds:0xb5236b9a
  40911a:	push   esi
  40911b:	dec    eax
  40911c:	push   es
  40911d:	fmulp  st(7),st
  40911f:	add    BYTE PTR [ecx-0x1],0xfc
  409123:	xor    edi,esi
  409125:	and    cl,BYTE PTR [edx-0x598f046f]
  40912b:	aam    0xfd
  40912d:	imul   ebx,DWORD PTR [ebx-0x54],0x1a8f9a8b
  409134:	sub    eax,0x768af401
  409139:	pop    esp
  40913a:	and    al,0x52
  40913c:	or     ecx,0xffffffa6
  40913f:	jmp    0xc3c0:0x520a4219
  409146:	popa   
  409147:	test   edx,edx
  409149:	sbb    al,0x84
  40914b:	cli    
  40914c:	sub    BYTE PTR [eax+0x6a],0x54
  409150:	pusha  
  409151:	popf   
  409152:	repz (bad) 
  409155:	xchg   edi,eax
  409156:	out    0xdf,al
  409158:	call   0x68ed:0xaf04d024
  40915f:	pop    edi
  409160:	pushf  
  409161:	lahf   
  409162:	test   dl,ah
  409164:	mov    ds:0xcb7493b7,eax
  409169:	jp     0x409112
  40916b:	push   edx
  40916c:	call   0x3b948ff
  409171:	dec    eax
  409172:	stos   DWORD PTR es:[edi],eax
  409173:	cli    
  409174:	mov    ecx,0x94de3108
  409179:	fld    QWORD PTR ds:0xb22b2623
  40917f:	push   ebx
  409180:	sbb    al,0x2a
  409182:	in     al,0x74
  409184:	push   ecx
  409185:	fdivr  st,st(2)
  409187:	sbb    al,0xc1
  409189:	test   BYTE PTR [ecx+edx*4-0xc],al
  40918d:	imul   edx,esi,0x4440fe50
  409193:	ret    
  409194:	fmul   DWORD PTR [ecx-0x4a]
  409197:	dec    esi
  409198:	ret    0x4fac
  40919b:	dec    eax
  40919c:	inc    edx
  40919e:	sub    ah,BYTE PTR [ecx+0x659ef3c8]
  4091a4:	dec    ebp
  4091a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091a6:	xor    al,0x5
  4091a8:	les    esp,FWORD PTR [edi+0x0]
  4091ab:	fldcw  WORD PTR [edx-0x64]
  4091ae:	sti    
  4091af:	pop    edx
  4091b0:	jb     0x40921b
  4091b2:	sbb    BYTE PTR [esi],al
  4091b4:	fild   DWORD PTR [edi]
  4091b6:	cmp    eax,0xc08c4db4
  4091bb:	scas   al,BYTE PTR es:[edi]
  4091bc:	je     0x40918e
  4091be:	add    eax,0x5655a386
  4091c3:	xor    esp,DWORD PTR [eax+0x1857228c]
  4091c9:	push   ds
  4091ca:	pop    ebx
  4091cb:	jbe    0x40923c
  4091cd:	shl    DWORD PTR [esp+edi*1+0x1dd8d84c],0x6e
  4091d5:	dec    eax
  4091d6:	loope  0x409234
  4091d8:	push   0xffffffaa
  4091da:	sub    ebx,DWORD PTR [edi-0x36]
  4091dd:	sar    DWORD PTR [ebp+0x1c],cl
  4091e0:	inc    ecx
  4091e1:	sub    ebx,DWORD PTR [edi]
  4091e3:	enter  0x98e8,0x56
  4091e7:	std    
  4091e8:	jmp    0x882c5445
  4091ed:	adc    esi,DWORD PTR [edx+0x19f85729]
  4091f3:	daa    
  4091f4:	inc    ebx
  4091f5:	ja     0x409239
  4091f7:	lods   al,BYTE PTR ds:[esi]
  4091f8:	pop    esi
  4091f9:	cdq    
  4091fa:	(bad)  
  4091fb:	fcom   DWORD PTR [edi-0x7d]
  4091fe:	bound  edx,QWORD PTR [edi+eax*8]
  409201:	or     eax,0x5c74bcca
  409206:	pop    DWORD PTR [edi-0x161a1fa5]
  40920c:	in     al,dx
  40920d:	test   BYTE PTR [ebx],ch
  40920f:	lods   al,BYTE PTR ds:[esi]
  409210:	js     0x40927e
  409212:	ins    DWORD PTR es:[edi],dx
  409213:	cdq    
  409214:	xchg   BYTE PTR [esi],ch
  409216:	cmp    dl,ch
  409218:	pop    es
  409219:	test   BYTE PTR [ecx+0x14e6831f],dh
  40921f:	aaa    
  409220:	push   0xffffff88
  409222:	cmp    BYTE PTR [edx],dh
  409224:	xor    DWORD PTR [eax],ebx
  409226:	jmp    0x6731894b
  40922b:	jecxz  0x409244
  40922d:	dec    esi
  40922e:	cwde   
  40922f:	stos   DWORD PTR es:[edi],eax
  409230:	mov    ds:0x99d3d0d2,eax
  409235:	ins    BYTE PTR es:[edi],dx
  409236:	cld    
  409237:	sbb    eax,0x42ebf44f
  40923c:	jns    0x409272
  40923e:	in     eax,0x61
  409240:	cdq    
  409241:	outs   dx,BYTE PTR ds:[esi]
  409242:	sub    eax,0x6e4d6ffc
  409247:	adc    BYTE PTR [ecx],al
  409249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40924a:	jg     0x4091ec
  40924c:	ror    al,0xcc
  40924f:	push   ds
  409250:	imul   esi,DWORD PTR ds:0xfe6fb139,0xd4d3eb96
  40925a:	popf   
  40925b:	repnz popa 
  40925d:	dec    edx
  40925e:	push   ebp
  40925f:	add    DWORD PTR [edi+eax*4-0x5a],ebx
  409263:	xor    ebp,DWORD PTR [edi+eax*1-0x35]
  409267:	cwde   
  409268:	cmp    DWORD PTR [edx-0x3a],esp
  40926b:	in     eax,0xdb
  40926d:	imul   edx,DWORD PTR [ebx+0x4d],0x9ee347b7
  409274:	addr16 jmp 0x3954:0xe60da964
  40927c:	mov    esp,0xff909a0f
  409281:	push   0xff66385a
  409286:	(bad)  
  409287:	(bad)  
  409288:	test   eax,0x4cbdd929
  40928d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40928e:	dec    edx
  40928f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409290:	inc    esi
  409291:	mov    DWORD PTR [edi+0x1ddde6af],eax
  409297:	pop    edx
  409298:	inc    edi
  409299:	adc    eax,0xea642098
  40929e:	cmp    bl,bl
  4092a0:	pop    esp
  4092a1:	ins    BYTE PTR es:[edi],dx
  4092a2:	xor    al,0x3b
  4092a4:	test   al,0x58
  4092a6:	retf   0xae8e
  4092a9:	ret    0xd6f3
  4092ac:	mov    edx,DWORD PTR [ecx-0x22caba04]
  4092b2:	les    edi,FWORD PTR [ecx+0x6d]
  4092b5:	push   esi
  4092b6:	test   BYTE PTR [ebp*1-0x3c18bb01],dl
  4092bd:	outs   dx,DWORD PTR ds:[esi]
  4092be:	cmp    al,0x60
  4092c0:	xor    al,0xda
  4092c2:	(bad)  
  4092c3:	aaa    
  4092c4:	aam    0xaa
  4092c6:	call   0x1c7b3afb
  4092cb:	push   eax
  4092cc:	sub    eax,0x20ed1a97
  4092d1:	sbb    DWORD PTR [ebp-0x54574ad3],eax
  4092d7:	cmp    eax,0xa56f517c
  4092dc:	out    0xd6,eax
  4092de:	or     al,0x66
  4092e0:	mov    ds:0xca63a11a,eax
  4092e5:	sub    DWORD PTR [esi-0x4f],eax
  4092e8:	test   eax,0xf67f8bf
  4092ed:	xchg   esi,eax
  4092ee:	call   0x75195858
  4092f3:	mov    edi,DWORD PTR [esi]
  4092f5:	jmp    0x158f:0xa680e5a8
  4092fc:	fbstp  TBYTE PTR [ebx-0x5e9edef7]
  409302:	mov    ch,0x0
  409304:	mov    eax,?
  409306:	mov    cl,BYTE PTR [edi]
  409308:	add    dh,BYTE PTR [ecx-0x40]
  40930b:	dec    ecx
  40930c:	lds    ecx,FWORD PTR [edi+0x6bf1f5c0]
  409312:	inc    BYTE PTR [edx+0x4a23a7d1]
  409318:	fisub  DWORD PTR [esi+0x2f]
  40931b:	and    al,0x56
  40931d:	xor    DWORD PTR [ecx-0x7a183af1],esp
  409323:	jno    0x40937a
  409325:	cdq    
  409326:	stc    
  409327:	jg     0x40936e
  409329:	repz out 0xac,al
  40932c:	mov    edi,0x3dfdd155
  409331:	sub    al,BYTE PTR [edi+0x3e59e5f2]
  409337:	jmp    0x4da2:0x74703c4b
  40933e:	pop    es
  40933f:	repnz mov ecx,0x19955b80
  409345:	add    DWORD PTR ds:[edi],esp
  409348:	pop    ebp
  409349:	xchg   esp,eax
  40934a:	fst    QWORD PTR [esi]
  40934c:	mov    dl,0xa6
  40934e:	shl    dh,cl
  409350:	push   cs
  409351:	adc    eax,0x2cef52a8
  409356:	mov    esi,DWORD PTR [ebp-0xa6b4b4]
  40935c:	xor    bl,BYTE PTR ds:[esi+0x71815199]
  409363:	data16 rdpmc 
  409366:	add    esi,eax
  409368:	xchg   bl,bl
  40936a:	fnstcw WORD PTR [esi+0x21]
  40936d:	repz jmp 0x4f00852f
  409373:	mov    al,ds:0xfbc23ece
  409378:	addr16 repz leave 
  40937b:	or     dl,BYTE PTR [edi+0xf5f9703]
  409381:	loop   0x4093d8
  409383:	dec    ecx
  409384:	das    
  409385:	or     al,0x8c
  409387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409388:	xchg   BYTE PTR [esi+0x3f161787],dl
  40938e:	(bad)  
  409390:	(bad)  
  409392:	push   ebx
  409393:	inc    esi
  409394:	(bad)
  409397:	repnz call 0x9bf3:0x470c373b
  40939f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093a0:	sub    ebx,DWORD PTR ss:[edi]
  4093a3:	sub    eax,0xad9b4542
  4093a8:	shl    DWORD PTR [edi],cl
  4093aa:	lea    esp,[edi+0x27388235]
  4093b0:	leave  
  4093b1:	mov    edi,0x3529605a
  4093b6:	ror    edx,0x72
  4093b9:	add    eax,0x1f1ab768
  4093be:	push   cs
  4093bf:	rcr    DWORD PTR [ecx+edx*2+0x28c2535f],1
  4093c6:	cmp    al,0x6
  4093c8:	shl    BYTE PTR ds:0x108b6e47,0xa6
  4093cf:	xchg   ecx,eax
  4093d0:	mov    ah,0x29
  4093d2:	in     eax,dx
  4093d3:	es xchg ebp,eax
  4093d5:	loope  0x409417
  4093d7:	add    DWORD PTR [eax+0x54],0x17aee1b2
  4093de:	rol    BYTE PTR [esi+edx*4-0x56],0xc6
  4093e3:	and    esp,DWORD PTR [ecx]
  4093e5:	xchg   esp,eax
  4093e6:	adc    al,0x21
  4093e8:	jg     0x409420
  4093ea:	pusha  
  4093eb:	jns    0x4093b7
  4093ed:	es inc edx
  4093ef:	fldcw  WORD PTR [ecx]
  4093f1:	sbb    al,0x66
  4093f3:	frstor [eax+esi*8-0x18452a2d]
  4093fa:	outs   dx,DWORD PTR ds:[esi]
  4093fb:	ficomp WORD PTR [ebx-0x1c552b76]
  409401:	xor    edx,DWORD PTR [eax+0x3e]
  409404:	xor    BYTE PTR [eax],0x9f
  409407:	jmp    0x409457
  409409:	ss add al,0x7b
  40940c:	neg    bl
  40940e:	xor    bh,BYTE PTR [esi]
  409410:	mov    al,ds:0xf05ad686
  409415:	push   ds
  409416:	push   ebx
  409417:	xchg   ebx,eax
  409418:	fpatan 
  40941a:	add    al,0xdc
  40941c:	jne    0x40948a
  40941e:	dec    edi
  40941f:	(bad)  
  409421:	mov    bh,0x46
  409423:	xor    al,ch
  409425:	mov    ebx,0xae353851
  40942a:	rcl    BYTE PTR [ecx],0xa4
  40942d:	jp     0x409483
  40942f:	dec    BYTE PTR [ecx+0xb]
  409432:	fisubr DWORD PTR [edi-0x33de3d56]
  409438:	xchg   esp,eax
  409439:	xchg   ebp,eax
  40943a:	push   esp
  40943b:	pop    ebp
  40943c:	sti    
  40943d:	and    BYTE PTR [esp+edi*1+0x3ffcb8cf],ch
  409444:	ss call 0x5e6c9b66
  40944a:	lods   eax,DWORD PTR ds:[esi]
  40944b:	inc    ebx
  40944c:	push   0xffffffa5
  40944e:	je     0x409423
  409450:	push   edi
  409451:	fsub   DWORD PTR [ebp-0x11]
  409454:	xchg   edi,eax
  409455:	xchg   ebx,eax
  409456:	ret    0x3859
  409459:	stc    
  40945a:	dec    ebp
  40945b:	sub    cl,BYTE PTR [ebp+0x35]
  40945e:	retf   0xc741
  409461:	ror    BYTE PTR [edx+0x2e283539],cl
  409467:	popf   
  409468:	daa    
  409469:	out    dx,al
  40946a:	jmp    0x477d:0x27152e76
  409471:	adc    eax,0x76b2038a
  409476:	cmc    
  409477:	cmp    ecx,esp
  409479:	mov    eax,ds:0x81d49068
  40947e:	outs   dx,BYTE PTR ds:[esi]
  40947f:	mov    ebp,0x251e0ba9
  409484:	dec    edx
  409485:	in     eax,0x68
  409487:	test   al,0xf6
  409489:	pop    ss
  40948a:	out    dx,eax
  40948b:	or     bl,BYTE PTR [ebp-0x739ff3bf]
  409491:	dec    ecx
  409492:	xchg   esi,eax
  409493:	sahf   
  409494:	inc    edi
  409495:	fadd   QWORD PTR [esi]
  409497:	push   esp
  409498:	inc    eax
  409499:	push   es
  40949a:	and    cl,BYTE PTR [ecx+0x42]
  40949d:	int3   
  40949e:	shl    BYTE PTR [eax],0xff
  4094a1:	sub    dl,0x74
  4094a4:	jb     0x40947d
  4094a6:	out    dx,al
  4094a7:	dec    esp
  4094a8:	outs   dx,BYTE PTR ds:[esi]
  4094a9:	push   ebp
  4094aa:	in     al,dx
  4094ab:	or     eax,0x2174a27f
  4094b0:	xchg   ebp,eax
  4094b1:	add    DWORD PTR [edi+0x3f],eax
  4094b4:	pop    edx
  4094b5:	xchg   edx,eax
  4094b6:	js     0x4094ae
  4094b8:	ret    0x4327
  4094bb:	and    cl,BYTE PTR [esi+0x6a810b6c]
  4094c1:	scas   al,BYTE PTR es:[edi]
  4094c2:	dec    esi
  4094c3:	xchg   ebp,eax
  4094c4:	dec    ebx
  4094c5:	xchg   esi,eax
  4094c6:	push   ebp
  4094c7:	sbb    bl,BYTE PTR [edi+esi*8-0x49a0479d]
  4094ce:	inc    edi
  4094cf:	lods   al,BYTE PTR ds:[esi]
  4094d0:	cmp    al,0x66
  4094d2:	adc    esp,DWORD PTR [ebx+0x4a]
  4094d5:	or     BYTE PTR [esi-0x4b494202],ah
  4094db:	mov    dh,0xb3
  4094dd:	loope  0x409510
  4094df:	jbe    0x409478
  4094e1:	cld    
  4094e2:	rcr    BYTE PTR [esi+0x9efae2c],cl
  4094e8:	gs out 0x85,eax
  4094eb:	dec    ebp
  4094ec:	inc    esi
  4094ed:	std    
  4094ee:	push   es
  4094ef:	cs test eax,0xe2867bda
  4094f5:	sub    al,0x90
  4094f7:	add    DWORD PTR [edx+eax*4],edx
  4094fa:	(bad)  
  4094fb:	jmp    0x6c06:0x47d7aec8
  409502:	imul   ebp,edx,0x6eb4c7d7
  409508:	clc    
  409509:	mov    ds:0x6ca3c7ed,eax
  40950e:	jae    0x409545
  409510:	or     edi,DWORD PTR [esi+edi*1]
  409513:	leave  
  409514:	pop    ebp
  409515:	lds    edx,FWORD PTR [ecx+0x5e]
  409518:	mov    bl,0x84
  40951a:	out    0x18,al
  40951c:	dec    edi
  40951d:	or     esp,esi
  40951f:	inc    esi
  409520:	push   edi
  409521:	push   ss
  409522:	mov    ebp,0x40d3043b
  409527:	iret   
  409528:	jp     0x4094b3
  40952a:	ds xchg edx,eax
  40952c:	pop    ebp
  40952d:	ror    BYTE PTR [ebp+0x61ac18a0],cl
  409533:	cs popa 
  409535:	test   ebx,ecx
  409537:	mov    edi,0x2090f431
  40953c:	mov    edi,0xbe0d635a
  409541:	mov    al,BYTE PTR [ecx]
  409543:	adc    esi,edi
  409545:	mov    bl,0x3d
  409547:	dec    eax
  409548:	or     DWORD PTR [esi+0x65],ebx
  40954b:	in     al,0xb9
  40954d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40954e:	in     al,dx
  40954f:	push   edx
  409550:	iret   
  409551:	adc    DWORD PTR [edi-0xddaf411],ebx
  409557:	nop    DWORD PTR [edi+0x8a299cd]
  40955e:	xchg   edi,eax
  40955f:	xor    eax,0x75dc5c6d
  409564:	xor    BYTE PTR [eax+eax*4-0x6],dl
  409568:	or     eax,0xeb04b5bd
  40956d:	add    al,ah
  40956f:	aam    0xb
  409571:	jmp    0xf612:0x51f966c5
  409578:	jae    0x4095dc
  40957a:	push   edi
  40957b:	jecxz  0x409530
  40957d:	mov    ebx,DWORD PTR [ecx-0x7cea6a5f]
  409583:	mov    esi,0xb9c2be1
  409588:	mov    ebx,0xcf5cf58e
  40958d:	dec    ecx
  40958e:	repz repz rcl DWORD PTR [ecx+0x15],0xfe
  409594:	push   edx
  409595:	xor    eax,0x6818315
  40959a:	xor    al,0x69
  40959c:	sbb    al,0xab
  40959e:	xor    edi,DWORD PTR [esi]
  4095a0:	mov    ds:0x53e448bb,al
  4095a5:	stos   DWORD PTR es:[edi],eax
  4095a6:	mov    ds:0x2f893af8,eax
  4095ab:	scas   eax,DWORD PTR es:[edi]
  4095ac:	clc    
  4095ad:	adc    al,BYTE PTR [edx*2+0x4efa8686]
  4095b4:	dec    ebx
  4095b5:	xor    edx,DWORD PTR [eax]
  4095b7:	mov    bh,BYTE PTR [eax-0x3f]
  4095ba:	ficomp WORD PTR [esi+ecx*4]
  4095bd:	mov    eax,0x103f73dc
  4095c2:	icebp  
  4095c3:	fimul  DWORD PTR [esi+ebx*2]
  4095c6:	mov    ?,ecx
  4095c8:	sub    ebp,DWORD PTR [edi]
  4095ca:	sbb    ebp,DWORD PTR [ebp+0x4224c89e]
  4095d0:	scas   eax,DWORD PTR es:[edi]
  4095d1:	inc    eax
  4095d2:	mov    esi,0xe50a5bb8
  4095d7:	stos   DWORD PTR es:[di],eax
  4095d9:	add    BYTE PTR ds:0xb0606ea2,bl
  4095df:	outs   dx,DWORD PTR ds:[esi]
  4095e0:	or     BYTE PTR [ebx+0x1d],dh
  4095e3:	add    ebx,DWORD PTR [bp-0x33]
  4095e7:	ror    dl,cl
  4095e9:	fwait
  4095ea:	add    edi,edi
  4095ec:	outs   dx,BYTE PTR ds:[esi]
  4095ed:	jecxz  0x409626
  4095ef:	sub    eax,ebp
  4095f1:	ja     0x409649
  4095f3:	push   edi
  4095f4:	pop    eax
  4095f5:	mov    ebp,0x20e9e959
  4095fa:	loop   0x4095ad
  4095fc:	dec    edi
  4095fd:	out    0x99,eax
  4095ff:	std    
  409600:	adc    BYTE PTR [edi+eiz*1],0x53
  409604:	dec    edx
  409605:	jbe    0x409638
  409607:	fisttp WORD PTR [edx*8+0x5d3b86c9]
  40960e:	ret    
  40960f:	mov    edi,0x60ef7fe0
  409614:	push   ds
  409615:	or     BYTE PTR [edi+0x3adfef39],ch
  40961b:	xchg   esi,eax
  40961c:	int3   
  40961d:	call   0xeb346e70
  409622:	stc    
  409623:	xchg   ebx,eax
  409624:	xchg   edi,eax
  409625:	sahf   
  409626:	mov    ch,0xb9
  409628:	jbe    0x40960c
  40962a:	inc    esi
  40962b:	test   DWORD PTR [ecx],edx
  40962d:	mov    ebp,0x1a8b130f
  409632:	imul   ebp,DWORD PTR [edx-0x1e84c8cc],0xd988999f
  40963c:	scas   al,BYTE PTR es:[edi]
  40963d:	xor    DWORD PTR [ebp+0x29],ebp
  409640:	push   ebx
  409641:	inc    esi
  409642:	xor    ebp,0xffffffda
  409645:	xor    ch,BYTE PTR [eax+edx*1-0x7ec9e27a]
  40964c:	jge    0x40966c
  40964e:	ds mov ecx,0xbd19f35f
  409654:	xlat   BYTE PTR ds:[ebx]
  409655:	pop    es
  409656:	fs sub eax,0x7c78b1c4
  40965c:	out    0x75,al
  40965e:	hlt    
  40965f:	leave  
  409660:	fisub  WORD PTR ds:0xdf93f50e
  409666:	ja     0x4096c7
  409668:	jae    0x409605
  40966a:	dec    esp
  40966b:	fcomi  st,st(3)
  40966d:	mul    edi
  40966f:	and    al,0x60
  409671:	int    0xd5
  409673:	sub    al,0x4c
  409675:	mov    eax,ds:0x4c2b4aca
  40967a:	xchg   esi,eax
  40967b:	sbb    BYTE PTR [eax+edx*8],al
  40967e:	shl    edi,1
  409680:	jno    0x40963b
  409682:	jp     0x4096c7
  409684:	clc    
  409685:	or     DWORD PTR [ebx+0x6c],esi
  409688:	pop    ds
  409689:	dec    edx
  40968a:	std    
  40968b:	jl     0x4096c1
  40968d:	adc    ch,BYTE PTR [edx]
  40968f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409690:	and    bh,BYTE PTR [ecx+edx*4-0x7bd2dc43]
  409697:	ins    DWORD PTR es:[edi],dx
  409698:	sub    eax,DWORD PTR [eax-0x5111408e]
  40969e:	out    0x21,eax
  4096a0:	or     ebp,DWORD PTR [edi+eiz*4-0x10351e27]
  4096a7:	pushf  
  4096a8:	inc    ebx
  4096a9:	mov    dl,0x44
  4096ab:	(bad)  
  4096ad:	xchg   ebp,eax
  4096ae:	outs   dx,BYTE PTR ds:[esi]
  4096af:	pop    esp
  4096b0:	add    ebp,DWORD PTR [eax+0x24]
  4096b3:	xchg   ebp,eax
  4096b4:	std    
  4096b5:	xor    BYTE PTR [ebp+0x69c008e9],cl
  4096bb:	pop    edi
  4096bc:	add    eax,0xfe69194
  4096c1:	cli    
  4096c2:	jp     0x4096d6
  4096c4:	mov    eax,0x3f709ec0
  4096c9:	mov    gs,WORD PTR [ecx-0x62]
  4096cc:	pop    eax
  4096cd:	test   eax,0x350703e3
  4096d2:	pusha  
  4096d3:	popf   
  4096d4:	mov    edx,0x588ccd74
  4096d9:	xor    BYTE PTR [esi],ch
  4096db:	cmp    BYTE PTR [ecx+eax*4-0x58],0xdd
  4096e0:	repnz rcr BYTE PTR [eax+0x5b09099a],1
  4096e7:	add    bh,0xa5
  4096ea:	lods   eax,DWORD PTR ds:[esi]
  4096eb:	push   edx
  4096ec:	mov    bh,0xf8
  4096ee:	or     al,al
  4096f0:	lea    edx,[eax]
  4096f2:	dec    esi
  4096f3:	repz test al,0x7d
  4096f6:	xor    BYTE PTR [esi-0x1f],ah
  4096f9:	xor    eax,edx
  4096fb:	push   0x4a9ec2e2
  409700:	hlt    
  409701:	add    DWORD PTR [ecx+edi*1],eax
  409704:	sub    eax,0x230b471e
  409709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40970a:	push   DWORD PTR [edx-0x38]
  40970d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40970e:	into   
  40970f:	add    ecx,edi
  409711:	pop    eax
  409712:	int    0x42
  409714:	jg     0x409734
  409716:	jno    0x4096c1
  409718:	dec    esp
  409719:	add    DWORD PTR [edx+0x3e],eax
  40971c:	push   cs
  40971d:	dec    ebx
  40971e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40971f:	push   ebx
  409720:	xchg   BYTE PTR [ecx-0x12597ff1],al
  409726:	stc    
  409727:	mov    al,ds:0x77f6cca1
  40972c:	jmp    0x6207:0x7662f1af
  409733:	push   edi
  409734:	pop    esi
  409735:	fsubr  st(4),st
  409737:	dec    ebx
  409738:	outs   dx,DWORD PTR ds:[esi]
  409739:	stc    
  40973a:	rcl    BYTE PTR [eax],0x29
  40973d:	jp     0x409776
  40973f:	scas   al,BYTE PTR es:[edi]
  409740:	sbb    ebp,DWORD PTR [ebx-0x3]
  409743:	add    esp,ebx
  409745:	gs nop
  409747:	xchg   edx,eax
  409748:	fwait
  409749:	inc    ecx
  40974a:	push   esi
  40974b:	test   eax,0xaa612125
  409750:	jle    0x4097bf
  409752:	sub    eax,DWORD PTR [eax]
  409754:	gs jp  0x4097b7
  409757:	call   0x93f9a4e9
  40975c:	and    bh,BYTE PTR [esi+0x60]
  40975f:	fisub  WORD PTR ds:0xc2464f3e
  409765:	jmp    0x8707ca67
  40976a:	dec    esp
  40976b:	les    ebp,FWORD PTR [ecx]
  40976d:	clc    
  40976e:	into   
  40976f:	jbe    0x40978b
  409771:	(bad)  
  409774:	in     eax,dx
  409775:	pop    ecx
  409776:	mov    DWORD PTR [esi+0x3ae663a3],edi
  40977c:	daa    
  40977d:	adc    ebp,esp
  40977f:	cmp    BYTE PTR [esi+edi*1+0x64094850],dh
  409786:	pop    ebp
  409787:	mov    dl,0x7f
  409789:	std    
  40978a:	mov    cl,0xf0
  40978c:	lods   al,BYTE PTR ds:[esi]
  40978d:	mov    BYTE PTR [esi],ah
  40978f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409790:	adc    eax,0x7f4cd632
  409795:	clc    
  409796:	(bad)  [ebx-0x2b20f9a8]
  40979c:	sbb    ebp,esi
  40979e:	(bad)  
  40979f:	and    eax,0xd3e57e06
  4097a4:	in     eax,0x26
  4097a6:	push   cs
  4097a7:	leave  
  4097a8:	add    al,BYTE PTR [esi]
  4097aa:	or     ebp,DWORD PTR [edx-0x50]
  4097ad:	pop    es
  4097ae:	xchg   ecx,eax
  4097af:	test   DWORD PTR [esi+edi*1+0x6e59fd86],eax
  4097b6:	add    eax,0x96e37f14
  4097bb:	std    
  4097bc:	aas    
  4097bd:	fucomp st(4)
  4097bf:	add    ah,BYTE PTR [edx]
  4097c1:	add    al,0x3d
  4097c3:	out    0x8d,eax
  4097c5:	jno    0x40983d
  4097c7:	mov    ch,0xf9
  4097c9:	jo     0x409754
  4097cb:	add    BYTE PTR [eax-0x54fc0758],cl
  4097d1:	jbe    0x4097a1
  4097d3:	lods   al,BYTE PTR ds:[esi]
  4097d4:	dec    esi
  4097d5:	jo     0x409773
  4097d7:	adc    ah,dh
  4097d9:	jl     0x4097b6
  4097db:	inc    eax
  4097dc:	pusha  
  4097dd:	adc    DWORD PTR [ebp+ecx*4-0x473fea],esi
  4097e4:	or     DWORD PTR [eax+0x670cfb39],eax
  4097ea:	(bad)  
  4097eb:	rcl    BYTE PTR [ecx-0x6c],1
  4097ee:	push   ds
  4097ef:	pop    es
  4097f0:	and    BYTE PTR [ecx-0x5d9e0d12],ch
  4097f6:	hlt    
  4097f7:	inc    esi
  4097f8:	sub    DWORD PTR [eax+eax*1+0x1c1ad9a7],0x875ed5bc
  409803:	pop    eax
  409804:	retf   
  409805:	sbb    DWORD PTR [esi],edx
  409807:	jnp    0x40981d
  409809:	xchg   BYTE PTR [esi+0x66],ah
  40980c:	cmp    eax,0x7034b395
  409811:	jge    0x409820
  409813:	xor    al,0x6
  409815:	in     al,0x10
  409817:	pop    esp
  409818:	push   ebp
  409819:	or     al,0x17
  40981b:	rcl    cl,cl
  40981d:	fild   DWORD PTR [edx]
  40981f:	mov    gs,WORD PTR [edi+0x14]
  409822:	sbb    BYTE PTR [edi-0x1fc76120],ah
  409828:	sbb    DWORD PTR [eax-0x7f],eax
  40982b:	mov    esp,0xe8bd033a
  409830:	mov    bh,0xde
  409832:	cmc    
  409833:	cs pusha 
  409835:	out    0xcc,eax
  409837:	pop    edi
  409838:	sub    DWORD PTR [eax+edi*2-0x156d2d98],ecx
  40983f:	daa    
  409840:	and    BYTE PTR [esi+0x70a17d9],dh
  409846:	pop    eax
  409847:	(bad)  
  409848:	dec    edi
  409849:	jns    0x40983e
  40984b:	lea    edi,[ebp-0x4f]
  40984e:	cmc    
  40984f:	pop    ds
  409850:	ds pop ebx
  409852:	retf   0x701f
  409855:	add    eax,0x1ba04082
  40985a:	lds    ebp,FWORD PTR [ecx+0x24]
  40985d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40985e:	push   esp
  40985f:	dec    ebx
  409860:	loop   0x409825
  409862:	jnp    0x409858
  409864:	cmp    BYTE PTR [ecx+ebx*4-0x77],al
  409868:	add    BYTE PTR [ecx-0x58],dh
  40986b:	push   ebx
  40986c:	inc    ebp
  40986d:	or     BYTE PTR [edi+0x0],dh
  409870:	jg     0x409852
  409872:	rcl    BYTE PTR [edx+0x5a],cl
  409875:	push   eax
  409876:	in     al,0x53
  409878:	add    BYTE PTR [ebx+0x53],al
  40987b:	in     eax,0x3a
  40987d:	add    al,0x6c
  40987f:	pop    ebp
  409880:	pop    ss
  409881:	jp     0x4098e4
  409883:	imul   ebx,eax,0x45e05b76
  409889:	lods   eax,DWORD PTR ds:[esi]
  40988a:	xor    dl,BYTE PTR [edi]
  40988c:	mov    ?,WORD PTR [eax]
  40988e:	adc    ch,cl
  409890:	outs   dx,DWORD PTR ds:[esi]
  409891:	mov    bh,0xb6
  409893:	mov    edx,0x1f43a16b
  409898:	cmp    eax,0x6983ae3e
  40989d:	or     BYTE PTR [edi-0x1277fd97],ch
  4098a3:	scas   eax,DWORD PTR es:[edi]
  4098a4:	lock adc ecx,DWORD PTR [eax+0x3e9d1f79]
  4098ab:	aam    0xb1
  4098ad:	dec    ebp
  4098ae:	xchg   DWORD PTR [esi+0x62],eax
  4098b1:	xchg   ecx,eax
  4098b2:	dec    ebp
  4098b3:	ins    BYTE PTR es:[edi],dx
  4098b4:	inc    edi
  4098b5:	cmp    dh,dh
  4098b7:	and    ecx,DWORD PTR [ebx]
  4098b9:	inc    ebp
  4098ba:	or     eax,0x27643963
  4098bf:	adc    ah,al
  4098c1:	mov    ecx,0x44fa2c1d
  4098c6:	imul   DWORD PTR [eax-0x6dc9e594]
  4098cc:	dec    esp
  4098cd:	daa    
  4098ce:	stc    
  4098cf:	pop    ds
  4098d0:	push   cs
  4098d1:	shl    ebp,1
  4098d3:	adc    DWORD PTR [ebx+0x26],ebp
  4098d6:	loop   0x4098fc
  4098d8:	inc    edi
  4098d9:	dec    esi
  4098da:	gs xor eax,eax
  4098dd:	fwait
  4098de:	or     BYTE PTR [ecx],ch
  4098e0:	mov    eax,ds:0xe4c8839d
  4098e5:	fsubr  DWORD PTR [edx-0x6e]
  4098e8:	mov    eax,ds:0x2a1c7832
  4098ed:	cmovne edx,DWORD PTR [esi+eiz*8+0x75]
  4098f2:	(bad)  
  4098f3:	addr16 jp 0x409905
  4098f6:	push   di
  4098f8:	inc    edi
  4098f9:	(bad)  
  4098fa:	and    eax,0x3c83d130
  4098ff:	retf   0x68ca
  409902:	rol    DWORD PTR [ecx+esi*1],cl
  409905:	mov    bh,0xdf
  409907:	mov    eax,0xc6037df2
  40990c:	cmp    eax,0xc114709d
  409911:	sub    al,al
  409913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409914:	push   ss
  409915:	outs   dx,DWORD PTR ds:[esi]
  409916:	adc    al,0x2
  409918:	push   ss
  409919:	popf   
  40991a:	xor    al,BYTE PTR [edi]
  40991c:	jno    0x4098bd
  40991e:	repnz mov ebx,0x46243c1e
  409924:	ja     0x4098e0
  409926:	inc    eax
  409927:	inc    esp
  409928:	xor    cl,BYTE PTR [esi-0x44]
  40992b:	pop    ebp
  40992c:	addr16 push ebx
  40992e:	les    edi,FWORD PTR [ecx+0x7ff428ac]
  409934:	sti    
  409935:	fpatan 
  409937:	xchg   ebp,eax
  409938:	or     ch,BYTE PTR [esp+ebp*8-0x22]
  40993c:	mov    ds:0x1a7972a5,ax
  409942:	mov    eax,ds:0xeeba4fb8
  409947:	fs ins BYTE PTR es:[edi],dx
  409949:	jns    0x409922
  40994b:	xor    sp,cx
  40994e:	or     ebp,ecx
  409950:	in     eax,0xa1
  409952:	xor    ah,BYTE PTR [eax]
  409954:	dec    ebp
  409955:	sbb    al,0xe7
  409957:	(bad)  
  409959:	fisubr WORD PTR [edi-0x20]
  40995c:	xor    al,0xaa
  40995e:	sub    al,0x72
  409960:	dec    ebp
  409961:	icebp  
  409962:	pop    ss
  409963:	stc    
  409964:	push   esi
  409965:	sub    DWORD PTR [ebp+0x17f51606],ebp
  40996b:	in     al,dx
  40996c:	xchg   ecx,eax
  40996d:	inc    eax
  40996e:	pop    ebp
  40996f:	not    ecx
  409971:	aas    
  409972:	push   0x51b1199c
  409977:	cmp    edi,DWORD PTR [ebx]
  409979:	mov    cs,WORD PTR [edx+0x17]
  40997c:	sbb    DWORD PTR [ebp+0x6158c424],ebp
  409982:	sub    cl,BYTE PTR [esp+ebx*1+0x6a]
  409986:	sti    
  409987:	mov    bp,0x7274
  40998b:	imul   ebp,DWORD PTR [ebx+eiz*4],0x9c1b16d9
  409992:	push   es
  409993:	sti    
  409994:	(bad)  
  409995:	mov    edx,0xa200db63
  40999a:	and    eax,edx
  40999c:	mov    eax,DWORD PTR [eax+0x887f424]
  4099a2:	mov    bh,0x35
  4099a4:	fimul  WORD PTR [edi+ebp*4]
  4099a7:	and    cl,ch
  4099a9:	and    BYTE PTR [edx+0x42258718],ch
  4099af:	push   ds
  4099b0:	icebp  
  4099b1:	or     dl,BYTE PTR [edi+0x533ae99]
  4099b7:	adc    eax,0x32250b6d
  4099bc:	js     0x4099e3
  4099be:	int3   
  4099bf:	add    eax,0xdff9af5d
  4099c4:	mov    eax,0x8305b07d
  4099c9:	outs   dx,BYTE PTR ds:[esi]
  4099ca:	dec    ebp
  4099cb:	or     DWORD PTR [ecx+0x2b81d2ac],edx
  4099d1:	mov    ebx,0xabfe6470
  4099d6:	sub    BYTE PTR [ecx+eiz*1],bl
  4099d9:	ss jl  0x409961
  4099dc:	mov    WORD PTR [esi],ss
  4099de:	ds push es
  4099e0:	fist   WORD PTR [esi+edx*1]
  4099e3:	jp     0x4099a4
  4099e5:	mov    al,BYTE PTR [ebx-0x1d]
  4099e8:	and    DWORD PTR ds:0x747675f,ebp
  4099ee:	bound  esp,QWORD PTR [esi-0x4b321ead]
  4099f4:	push   edx
  4099f5:	push   ss
  4099f6:	xchg   ebx,eax
  4099f7:	stc    
  4099f8:	xchg   al,bh
  4099fa:	or     ebx,DWORD PTR [ebx]
  4099fc:	in     al,dx
  4099fd:	js     0x409a5f
  4099ff:	enter  0x3c07,0xf5
  409a03:	jmp    DWORD PTR ds:0xb2ad970a
  409a09:	or     dh,BYTE PTR [ebp-0x6e]
  409a0c:	(bad)  [esi+esi*8-0x13]
  409a10:	pop    esi
  409a11:	sbb    eax,0x5aa6b997
  409a16:	sbb    eax,0x4a44e7eb
  409a1b:	retf   0xf83c
  409a1e:	dec    ebp
  409a1f:	cs clc 
  409a21:	adc    ebp,DWORD PTR [esi]
  409a23:	pop    ebp
  409a24:	sub    BYTE PTR [eax-0x5b],bl
  409a27:	push   esi
  409a28:	dec    esi
  409a29:	dec    edx
  409a2a:	pop    esi
  409a2b:	inc    eax
  409a2c:	js     0x409aa7
  409a2e:	push   edx
  409a2f:	and    BYTE PTR [eax],0xc9
  409a32:	or     edx,edx
  409a34:	adc    dl,BYTE PTR [edx+0x78]
  409a37:	sbb    cl,al
  409a39:	push   ss
  409a3a:	pop    ecx
  409a3b:	repz push eax
  409a3d:	icebp  
  409a3e:	pusha  
  409a3f:	rcl    BYTE PTR [eax+0x20],1
  409a42:	mov    bl,BYTE PTR [ecx+0x46]
  409a45:	cmp    al,0x4f
  409a47:	push   edx
  409a48:	add    ah,bh
  409a4a:	rol    BYTE PTR [eax-0x10],1
  409a4d:	xchg   edx,eax
  409a4e:	and    eax,0x7d4f9a7e
  409a53:	pandn  mm0,QWORD PTR [eax+0x581ece1]
  409a5a:	cmp    eax,0x5b77d356
  409a5f:	imul   edi,ecx,0x9
  409a62:	mov    ecx,0x16bb18b
  409a67:	mov    ds:0x121ea2d8,al
  409a6c:	fistp  DWORD PTR [edi+0x3fb87353]
  409a72:	std    
  409a73:	mov    dl,0x10
  409a75:	je     0x409ad3
  409a77:	or     bh,al
  409a79:	dec    ebp
  409a7a:	mov    ebp,0x557927d4
  409a7f:	mov    ebp,0x7233ab26
  409a84:	mov    esi,ecx
  409a86:	inc    edx
  409a87:	sbb    DWORD PTR ds:0xaa7e1fe3,ecx
  409a8d:	loope  0x409aa4
  409a8f:	sbb    ebp,edx
  409a91:	pop    edx
  409a92:	mov    ds:0xaa049127,eax
  409a97:	jmp    0x409afe
  409a99:	mov    eax,ds:0xfc4e8cf6
  409a9e:	mov    ch,0xac
  409aa0:	shr    BYTE PTR [ebp+0x64d4ed58],1
  409aa6:	mov    edx,0xb0a1c2f
  409aab:	repnz pushf 
  409aad:	gs pop es
  409aaf:	xor    al,0x47
  409ab1:	bound  edi,QWORD PTR [edi+0x7f]
  409ab4:	mov    ebp,0x774fc48f
  409ab9:	pushf  
  409aba:	das    
  409abb:	xchg   ebx,eax
  409abc:	pop    es
  409abd:	clc    
  409abe:	mov    dh,0x6d
  409ac0:	ret    
  409ac1:	push   ebx
  409ac2:	jmp    0xdd74:0x3974bb7a
  409ac9:	lds    edx,FWORD PTR [eax]
  409acb:	mov    ebp,0x8f82ea77
  409ad0:	sbb    DWORD PTR [edi-0x3a],edi
  409ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ad4:	push   ecx
  409ad5:	shl    bl,cl
  409ad7:	xchg   edi,eax
  409ad8:	inc    esp
  409ad9:	and    al,0x66
  409adb:	mov    DWORD PTR [ebx+0xd663751],eax
  409ae1:	cmc    
  409ae2:	dec    esp
  409ae3:	sub    cl,BYTE PTR [edx+0x1e]
  409ae6:	test   eax,0x7bd9eeb6
  409aeb:	sub    DWORD PTR [ebp-0x38],edi
  409aee:	mov    ds:0x614e07c3,al
  409af3:	mov    dl,0x46
  409af5:	out    dx,al
  409af6:	mov    bl,0x63
  409af8:	pusha  
  409af9:	jmp    0x409a89
  409afb:	fcomp  DWORD PTR [eax]
  409afd:	bound  ebp,QWORD PTR [edx]
  409aff:	sub    DWORD PTR fs:[ebp-0x2c],ebx
  409b03:	dec    ecx
  409b04:	loope  0x409ab9
  409b06:	in     al,0x96
  409b08:	xchg   esp,eax
  409b09:	xor    al,0xa9
  409b0b:	sub    al,0xdc
  409b0d:	inc    esi
  409b0e:	in     eax,dx
  409b0f:	cmp    al,0x5
  409b11:	sbb    ebp,ebp
  409b13:	lds    edi,FWORD PTR [esi+eax*2+0x27ede255]
  409b1a:	add    DWORD PTR [edx+0x32],esp
  409b1d:	inc    ebx
  409b1e:	std    
  409b1f:	mov    esi,0x9c576c71
  409b24:	aaa    
  409b25:	add    esp,0x8614b164
  409b2b:	jge    0x409ac8
  409b2d:	fsubr  DWORD PTR [edx]
  409b2f:	scas   eax,DWORD PTR es:[edi]
  409b30:	jb     0x409ba7
  409b32:	hlt    
  409b33:	sti    
  409b34:	sbb    al,0x23
  409b36:	rep stos BYTE PTR es:[edi],al
  409b38:	mov    edi,0x4cd31ec7
  409b3d:	inc    ecx
  409b3e:	out    dx,al
  409b3f:	xor    al,0x2e
  409b41:	jg     0x409b7e
  409b43:	or     al,0x16
  409b45:	push   esi
  409b46:	jo     0x409ad8
  409b48:	inc    esi
  409b49:	stc    
  409b4a:	fnstenv [ebx]
  409b4c:	cmp    eax,0xca9fec81
  409b51:	inc    ebx
  409b52:	lock sar BYTE PTR [edx-0x55f9eda5],1
  409b59:	inc    esp
  409b5a:	repnz xor al,0x15
  409b5d:	out    0x12,al
  409b5f:	xor    DWORD PTR [eax+0x39],ebp
  409b62:	dec    edi
  409b63:	xor    cl,dh
  409b65:	push   ebx
  409b66:	xlat   BYTE PTR ds:[ebx]
  409b67:	jg     0x409b80
  409b69:	test   al,0xcf
  409b6b:	imul   ebx,DWORD PTR [ebx+ebp*1+0x56633fbb],0x5480abf1
  409b76:	js     0x409b26
  409b78:	hlt    
  409b79:	dec    esi
  409b7a:	mov    dl,0x5c
  409b7c:	out    0xa,al
  409b7e:	push   ss
  409b7f:	pop    es
  409b80:	fcomi  st,st(5)
  409b82:	mov    DWORD PTR [ebx],eax
  409b84:	enter  0xc0af,0xe5
  409b88:	and    al,0xf8
  409b8a:	repz es pop eax
  409b8d:	stc    
  409b8e:	retf   0xca36
  409b91:	gs cli 
  409b93:	fist   WORD PTR [ebx]
  409b95:	(bad)  
  409b96:	xchg   edi,eax
  409b97:	loopne 0x409bcd
  409b99:	shr    BYTE PTR [ebx-0x3e7d234c],cl
  409b9f:	in     eax,dx
  409ba0:	test   eax,0xb98c7e8f
  409ba5:	in     eax,0xff
  409ba7:	sbb    ah,BYTE PTR [edi+0x36fc095f]
  409bad:	retf   
  409bae:	outs   dx,BYTE PTR ds:[esi]
  409baf:	xchg   ebx,eax
  409bb0:	es push ebp
  409bb2:	rcl    DWORD PTR [eax],cl
  409bb4:	imul   edx,DWORD PTR [esi],0xe4594e61
  409bba:	cmp    ecx,ecx
  409bbc:	sub    BYTE PTR [esi-0x3c],al
  409bbf:	pushf  
  409bc0:	daa    
  409bc1:	(bad)  
  409bc2:	jecxz  0x409c21
  409bc4:	aas    
  409bc5:	or     DWORD PTR [edx],ecx
  409bc7:	fwait
  409bc8:	leave  
  409bc9:	in     al,0xa9
  409bcb:	push   ebp
  409bcc:	sub    BYTE PTR [ebx],bh
  409bce:	rol    DWORD PTR [edi-0x3d32ac1],cl
  409bd4:	(bad)  
  409bd5:	mov    dl,0x1b
  409bd7:	mov    bl,0xad
  409bd9:	add    al,0x35
  409bdb:	jbe    0x409c03
  409bdd:	xor    BYTE PTR [edx-0x71],bh
  409be0:	mul    edi
  409be2:	mov    ss,edx
  409be4:	xor    eax,0x5474e5fb
  409be9:	push   esp
  409bea:	push   edx
  409beb:	std    
  409bec:	inc    ebx
  409bed:	out    dx,al
  409bee:	adc    al,0x12
  409bf0:	or     esp,ebp
  409bf2:	and    eax,esi
  409bf4:	dec    BYTE PTR [ebx+eax*2-0x59]
  409bf8:	inc    ecx
  409bf9:	dec    esi
  409bfa:	lock and ch,dl
  409bfd:	rcr    BYTE PTR [esi],cl
  409bff:	add    al,0x12
  409c01:	loop   0x409bc4
  409c03:	out    dx,al
  409c04:	arpl   WORD PTR [eax+0xd30b5c],dx
  409c0a:	add    eax,0x3109b558
  409c0f:	aad    0xa4
  409c11:	sub    al,0xd
  409c13:	popa   
  409c14:	xchg   ecx,eax
  409c15:	jmp    0x9112:0x1990f3d9
  409c1c:	cmp    eax,DWORD PTR [eax+esi*8-0x4aa1a474]
  409c23:	dec    edx
  409c24:	mov    ebx,0xf701dd4f
  409c29:	fdivr  DWORD PTR [edi]
  409c2b:	stos   DWORD PTR es:[edi],eax
  409c2c:	popa   
  409c2d:	jmp    0x827c:0x119a9096
  409c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c35:	fsubr  DWORD PTR [ebp-0x3f968b83]
  409c3b:	and    DWORD PTR [ebp+0x36],0xf522b70f
  409c42:	xor    edx,DWORD PTR [esp+ebp*2]
  409c45:	pop    ds
  409c46:	adc    DWORD PTR [eax-0x3b1ef796],edi
  409c4c:	jae    0x409c39
  409c4e:	pop    edx
  409c4f:	test   DWORD PTR [esp+esi*2+0x90a0f17],esp
  409c56:	adc    BYTE PTR [edi+edi*1-0x562e71ad],bl
  409c5d:	in     eax,dx
  409c5e:	pop    ecx
  409c5f:	cld    
  409c60:	fwait
  409c61:	push   ebx
  409c62:	in     eax,0x6b
  409c64:	adc    al,ah
  409c66:	(bad)  
  409c67:	xor    al,0xec
  409c6a:	jg     0x409c60
  409c6c:	pusha  
  409c6d:	out    dx,eax
  409c6e:	cdq    
  409c6f:	ins    BYTE PTR es:[edi],dx
  409c70:	inc    ebx
  409c71:	jnp    0x409c6b
  409c73:	cli    
  409c74:	pop    ds
  409c75:	int    0x83
  409c77:	or     eax,0x94bfb192
  409c7c:	fimul  WORD PTR [edi-0x16]
  409c7f:	stc    
  409c80:	ds mov esi,0x4fc5e9ae
  409c86:	lods   al,BYTE PTR ds:[esi]
  409c87:	pusha  
  409c88:	dec    ebp
  409c89:	aaa    
  409c8a:	mov    eax,ds:0xaa73795d
  409c8f:	dec    ebx
  409c90:	call   0xb13ea701
  409c95:	je     0x409ceb
  409c97:	push   ss
  409c98:	dec    edx
  409c99:	int    0xb1
  409c9b:	aam    0x29
  409c9d:	add    edi,DWORD PTR [eax]
  409c9f:	test   DWORD PTR [ebx+edx*8-0x2f],ebp
  409ca3:	data16 xchg BYTE PTR [esi-0x5b],cl
  409ca7:	jp     0x409cc7
  409ca9:	adc    DWORD PTR [ebp+esi*1-0x7fc9e33f],esp
  409cb0:	loopne 0x409cfb
  409cb2:	icebp  
  409cb3:	aad    0x7e
  409cb5:	cwde   
  409cb6:	xchg   esp,eax
  409cb7:	loopne 0x409c81
  409cb9:	add    eax,0x9c0765d5
  409cbe:	enter  0x91c,0xcb
  409cc2:	int    0x8a
  409cc4:	imul   esp,DWORD PTR [edi+0x54],0x18c4e89f
  409ccb:	loopne 0x409cbe
  409ccd:	test   BYTE PTR [eax+edx*4-0x6949678c],dh
  409cd4:	inc    ecx
  409cd5:	adc    eax,0x4365fc51
  409cda:	dec    edi
  409cdb:	mov    eax,ds:0x2442afde
  409ce0:	add    edi,esi
  409ce2:	enter  0xf7f2,0xb5
  409ce6:	loope  0x409c92
  409ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ce9:	ds pop esi
  409ceb:	enter  0x799b,0xcd
  409cef:	es icebp 
  409cf1:	mov    bl,0xce
  409cf3:	pop    ebp
  409cf4:	das    
  409cf5:	inc    ebx
  409cf6:	jmp    0x409d44
  409cf8:	dec    ebp
  409cf9:	ss icebp 
  409cfb:	ss mov edi,0x9ec3bed0
  409d01:	push   0xffffffbf
  409d03:	inc    ebp
  409d04:	jle    0x409d34
  409d06:	xchg   BYTE PTR [edx+0x1],al
  409d09:	in     al,dx
  409d0a:	out    0xf4,eax
  409d0c:	rol    BYTE PTR [ebx-0x5d],1
  409d0f:	out    dx,al
  409d10:	add    al,0x81
  409d12:	xor    eax,0xd720098c
  409d17:	push   edx
  409d18:	pop    ebp
  409d19:	push   edx
  409d1a:	mov    al,ds:0x49a1f727
  409d1f:	push   0x17
  409d21:	mov    ah,0x61
  409d23:	or     al,0x8a
  409d25:	bound  edi,QWORD PTR [edi]
  409d27:	push   eax
  409d28:	jae    0x409da3
  409d2a:	mov    gs,WORD PTR [ebx-0x23]
  409d2d:	jmp    0xdf8f3bdf
  409d32:	mov    eax,ds:0xf1e2c8ff
  409d37:	and    al,0xfa
  409d39:	or     cl,BYTE PTR [eax]
  409d3b:	call   0x1221:0x1fb2776a
  409d42:	daa    
  409d43:	cli    
  409d44:	int    0x48
  409d46:	mov    ch,BYTE PTR [esi]
  409d48:	lods   eax,DWORD PTR ds:[esi]
  409d49:	pushf  
  409d4a:	xor    dh,BYTE PTR [ebp+edx*8+0x36]
  409d4e:	pop    es
  409d4f:	xor    al,BYTE PTR [ebx+0x6d]
  409d52:	(bad)  
  409d53:	mov    ds:0x45e1f7e9,eax
  409d58:	pop    ds
  409d59:	add    BYTE PTR [ecx-0x59],dl
  409d5c:	ret    
  409d5d:	dec    ebx
  409d5e:	xor    eax,0xfa4fa66c
  409d63:	dec    edi
  409d64:	sub    edx,eax
  409d66:	mov    dl,0x34
  409d68:	xor    al,0xfc
  409d6a:	scas   eax,DWORD PTR es:[edi]
  409d6b:	retf   0x3eb8
  409d6e:	xor    edi,ebx
  409d70:	fsub   DWORD PTR [eax]
  409d72:	jl     0x409d3b
  409d74:	push   es
  409d75:	push   ss
  409d76:	pop    edx
  409d77:	pop    esi
  409d78:	xchg   ebx,eax
  409d79:	sahf   
  409d7a:	pop    ebp
  409d7b:	jne    0x409d49
  409d7d:	xchg   esp,eax
  409d7e:	lods   eax,DWORD PTR ds:[esi]
  409d7f:	das    
  409d80:	cmc    
  409d81:	jbe    0x409de1
  409d83:	mov    eax,ds:0xcbd2143a
  409d88:	loop   0x409df9
  409d8a:	scas   eax,DWORD PTR es:[edi]
  409d8b:	shr    edx,1
  409d8d:	and    BYTE PTR [esi],bh
  409d8f:	xor    bh,al
  409d91:	xchg   ecx,eax
  409d92:	jae    0x409dc3
  409d94:	xchg   BYTE PTR [ecx],ah
  409d96:	retf   
  409d97:	fidiv  WORD PTR [ecx]
  409d99:	(bad)  
  409d9a:	jl     0x409de7
  409d9c:	inc    esp
  409d9d:	or     DWORD PTR [esp+ebx*2+0x84446df],ebp
  409da4:	sbb    DWORD PTR [edx-0x29245573],0xffffff9e
  409dab:	dec    ecx
  409dac:	pop    esp
  409dad:	cmp    eax,DWORD PTR [ebx+0x2f]
  409db0:	and    eax,0x621222c
  409db5:	sub    ecx,eax
  409db7:	mov    ecx,0x1fb3b69d
  409dbc:	dec    esi
  409dbd:	lods   al,BYTE PTR ds:[esi]
  409dbe:	pop    ecx
  409dbf:	add    dl,BYTE PTR [ebx-0x27]
  409dc2:	pusha  
  409dc3:	jg     0x409d53
  409dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dc6:	(bad)  
  409dc7:	in     al,dx
  409dc8:	adc    al,0xe5
  409dca:	mov    ebx,0xed15c04c
  409dcf:	jae    0x409df1
  409dd1:	leave  
  409dd2:	adc    bh,BYTE PTR [ebx]
  409dd4:	fwait
  409dd5:	xor    ah,cl
  409dd7:	sahf   
  409dd8:	rcl    BYTE PTR [eax-0x73fba9a6],0x3f
  409ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409de0:	pop    ebp
  409de1:	(bad)  
  409de2:	data16 out dx,al
  409de4:	push   ebp
  409de5:	push   0xffffff94
  409de7:	neg    BYTE PTR [edx-0x4c]
  409dea:	push   0x1f
  409dec:	pop    edi
  409ded:	mov    ecx,0xad119d1e
  409df2:	xlat   BYTE PTR ds:[ebx]
  409df3:	push   ds
  409df4:	sti    
  409df5:	lahf   
  409df6:	pop    edx
  409df7:	test   DWORD PTR [esi+0x72b360c3],ecx
  409dfd:	xor    al,0x16
  409dff:	sbb    al,0xf6
  409e01:	sbb    DWORD PTR [esi+0x3fcb9105],eax
  409e07:	retf   
  409e08:	mul    ah
  409e0a:	and    dh,BYTE PTR [ebx+esi*2]
  409e0d:	xor    eax,0xf185e392
  409e12:	and    ah,ch
  409e14:	add    BYTE PTR [edi+0x41ae2bd9],0x51
  409e1b:	in     eax,dx
  409e1c:	mov    ds:0x207c6dc1,al
  409e21:	scas   al,BYTE PTR es:[edi]
  409e22:	inc    edx
  409e23:	fcomp  DWORD PTR [edx+ebx*4]
  409e26:	sahf   
  409e27:	lods   al,BYTE PTR ds:[esi]
  409e28:	pop    ebx
  409e29:	xlat   BYTE PTR ds:[ebx]
  409e2a:	and    al,0xba
  409e2c:	out    0x73,al
  409e2e:	scas   al,BYTE PTR es:[edi]
  409e2f:	mov    ecx,0xd0bf7eb6
  409e34:	iret   
  409e35:	and    al,0xf6
  409e37:	mov    cs,esp
  409e39:	sysexit 
  409e3b:	sub    ah,BYTE PTR [ebp-0x40]
  409e3e:	repnz add al,0xb2
  409e41:	pushf  
  409e42:	aam    0xb1
  409e44:	mov    dh,0x95
  409e46:	mov    BYTE PTR [eax-0x7e],dl
  409e49:	inc    esi
  409e4a:	mov    bl,0xbe
  409e4c:	outs   dx,BYTE PTR ds:[esi]
  409e4d:	test   BYTE PTR [ebp-0x1060594d],bl
  409e53:	mov    ds:0x14049d23,al
  409e58:	ins    DWORD PTR es:[edi],dx
  409e59:	rcl    DWORD PTR [edi+0x4b],cl
  409e5c:	out    dx,al
  409e5d:	or     ch,cl
  409e5f:	inc    eax
  409e60:	cmp    DWORD PTR [ebp-0x2c],edi
  409e63:	ret    
  409e64:	cwde   
  409e65:	(bad)  
  409e66:	(bad)  
  409e67:	jmp    0x409ea4
  409e69:	pop    esi
  409e6a:	mov    ebx,DWORD PTR [edi-0xb07f68c]
  409e70:	dec    esi
  409e71:	sbb    dl,BYTE PTR [esi+0x1b1ed4e2]
  409e77:	mov    DWORD PTR [eax],edx
  409e79:	shr    BYTE PTR [esi-0x25],cl
  409e7c:	adc    al,0x87
  409e7e:	out    dx,eax
  409e7f:	mov    edi,0x186c515
  409e84:	rcr    DWORD PTR [ecx+0x27feeca7],cl
  409e8a:	jecxz  0x409e28
  409e8c:	adc    al,0x96
  409e8e:	mov    ds:0xebff8626,eax
  409e93:	test   edx,0xb3e12c22
  409e99:	ret    0xed7d
  409e9c:	pop    eax
  409e9d:	rcl    BYTE PTR [esi-0x7f],cl
  409ea0:	or     bl,BYTE PTR [edi-0x3f488280]
  409ea6:	xchg   BYTE PTR [ebp+0x47],al
  409ea9:	adc    eax,0x8843bf9b
  409eae:	xlat   BYTE PTR ds:[ebx]
  409eaf:	je     0x409f10
  409eb1:	jo     0x409f22
  409eb3:	xchg   edi,eax
  409eb4:	sub    eax,0x4f804763
  409eb9:	sbb    DWORD PTR [edi+ebx*1+0x5f1c6492],esp
  409ec0:	and    edx,DWORD PTR [eax+edx*1+0xf]
  409ec4:	cmp    esp,DWORD PTR [ecx+ebp*8-0x14]
  409ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ec9:	out    dx,eax
  409eca:	out    0xf5,al
  409ecc:	cmc    
  409ecd:	add    ebp,eax
  409ecf:	inc    ebp
  409ed0:	push   0x16dc9794
  409ed5:	ret    
  409ed6:	pop    ecx
  409ed7:	popf   
  409ed8:	sub    dh,al
  409eda:	jnp    0x409eac
  409edc:	(bad)  
  409edd:	sahf   
  409ede:	sbb    cl,dl
  409ee0:	ins    BYTE PTR es:[edi],dx
  409ee1:	cwde   
  409ee2:	mov    edx,0x7ff82787
  409ee7:	sbb    BYTE PTR [ebp-0x6261c056],ah
  409eed:	and    ah,BYTE PTR [ecx-0x6084e633]
  409ef3:	nop    DWORD PTR [eax-0x6e]
  409ef7:	popw   es
  409ef9:	xor    esp,0x4e32e85d
  409eff:	iret   
  409f00:	push   esi
  409f01:	vrcpss xmm0,xmm0,DWORD PTR [ebx]
  409f05:	add    cl,BYTE PTR [ecx]
  409f07:	out    dx,al
  409f08:	in     eax,dx
  409f09:	and    BYTE PTR [esi+0x164203b3],ah
  409f0f:	pop    esp
  409f10:	mov    bl,0x99
  409f12:	outs   dx,DWORD PTR ds:[esi]
  409f13:	pop    edx
  409f14:	dec    eax
  409f15:	int3   
  409f16:	loope  0x409f2e
  409f18:	imul   ebx,DWORD PTR [ebx-0x27857e91],0xe87e618
  409f22:	jp     0x409f2a
  409f24:	jno    0x409f9a
  409f26:	and    al,0x39
  409f28:	jmp    0x5769cbfc
  409f2d:	push   edx
  409f2e:	movntq (bad),mm4
  409f2f:	out    0xe4,eax
  409f31:	test   al,0xcb
  409f33:	lods   eax,DWORD PTR ds:[esi]
  409f34:	rol    DWORD PTR [edx+eax*1+0x36],cl
  409f38:	mov    cl,0x55
  409f3a:	(bad)  
  409f3b:	jmp    0x81ca:0xc34c3f08
  409f42:	inc    edx
  409f43:	inc    edi
  409f44:	push   ebp
  409f45:	(bad)  
  409f46:	mov    ebx,0x533e5bdb
  409f4b:	call   0xfdb16051
  409f50:	add    al,0xa3
  409f52:	jg     0x409f47
  409f54:	push   ebx
  409f55:	hlt    
  409f56:	add    bl,BYTE PTR [ebx]
  409f58:	ret    0x8e97
  409f5b:	loope  0x409fc2
  409f5d:	cli    
  409f5e:	adc    eax,0x28436060
  409f63:	std    
  409f64:	mov    WORD PTR [esi+0x7a5627a3],?
  409f6a:	mov    ebp,0x4db86717
  409f6f:	cmp    al,0x1f
  409f71:	fbld   TBYTE PTR [ecx]
  409f73:	fistp  WORD PTR [ebp+0x477f691d]
  409f79:	(bad)  
  409f7a:	mov    ah,0x30
  409f7c:	add    edi,ecx
  409f7e:	pop    edi
  409f7f:	pop    edi
  409f80:	shl    BYTE PTR fs:[esi-0x37450ca0],1
  409f87:	inc    ebx
  409f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f89:	push   eax
  409f8a:	pusha  
  409f8b:	lea    ecx,[edx]
  409f8d:	jg     0x409f61
  409f8f:	pop    es
  409f90:	push   ebp
  409f91:	sub    DWORD PTR [eax],edi
  409f93:	ins    DWORD PTR es:[edi],dx
  409f94:	push   ebx
  409f95:	cmp    DWORD PTR [ebx+edi*4],edx
  409f98:	mov    ebx,0xe3ee22af
  409f9d:	(bad)  
  409f9e:	and    dh,BYTE PTR ds:0x399d64
  409fa4:	shr    DWORD PTR [ecx+0x3b],cl
  409fa7:	out    dx,al
  409fa8:	xchg   esi,eax
  409fa9:	adc    eax,0x4bf501d6
  409fae:	fisubr WORD PTR [ebx-0x40]
  409fb1:	xchg   ebx,eax
  409fb2:	je     0x409f79
  409fb4:	in     eax,0xc
  409fb6:	or     DWORD PTR [ecx-0x7b],eax
  409fb9:	ror    BYTE PTR [edi+0x792f0084],1
  409fbf:	add    eax,0xb7acd58c
  409fc4:	shl    BYTE PTR [ebp-0x1ea65c12],0xb5
  409fcb:	jle    0x409f50
  409fcd:	inc    ebp
  409fce:	ins    BYTE PTR es:[edi],dx
  409fcf:	or     esi,ebp
  409fd1:	jns    0x409fcc
  409fd3:	std    
  409fd4:	xor    cl,BYTE PTR [edx-0x66195e19]
  409fda:	adc    esi,DWORD PTR [edi]
  409fdc:	ror    DWORD PTR [ecx],cl
  409fde:	fistp  QWORD PTR [edx+0x14d3557f]
  409fe4:	call   DWORD PTR [ebx-0x50f35658]
  409fea:	aam    0x42
  409fec:	dec    edi
  409fed:	ret    0x1e72
  409ff0:	test   eax,0x201fb7c9
  409ff5:	imul   eax,DWORD PTR [eax+0x9c68bd],0xa8488a59
  409fff:	cmp    al,0xd1
  40a001:	dec    edi
  40a002:	jne    0x40a05e
  40a004:	fucomp st(7)
  40a006:	lock fs inc eax
  40a009:	adc    cl,bl
  40a00b:	es scas al,BYTE PTR es:[edi]
  40a00d:	inc    ebx
  40a00e:	sbb    BYTE PTR [eax],ah
  40a010:	sbb    edi,DWORD PTR [eax]
  40a012:	jecxz  0x409fdb
  40a014:	adc    esi,DWORD PTR [ecx]
  40a016:	loope  0x409fac
  40a018:	test   eax,0x1825085c
  40a01d:	pop    ebp
  40a01e:	aad    0xb1
  40a020:	cs (bad) 
  40a022:	cmp    ah,BYTE PTR [edi+eax*8]
  40a025:	aad    0x37
  40a027:	(bad)  
  40a028:	xchg   esp,eax
  40a029:	push   0xe0652cc5
  40a02e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a02f:	aaa    
  40a030:	(bad)  
  40a031:	shufps xmm6,XMMWORD PTR [eax-0x158d5e14],0x61
  40a039:	aad    0x27
  40a03b:	inc    ecx
  40a03c:	icebp  
  40a03d:	sub    BYTE PTR [ecx-0x4bb3ac6d],dl
  40a043:	push   ebx
  40a044:	xor    ebp,edx
  40a046:	clc    
  40a047:	cwde   
  40a048:	mov    ?,WORD PTR [ebp-0x1a]
  40a04b:	outs   dx,BYTE PTR ds:[esi]
  40a04c:	or     dh,BYTE PTR [eax+0x183b8376]
  40a052:	dec    esp
  40a053:	pop    ecx
  40a054:	dec    edi
  40a055:	ss xchg ebx,eax
  40a057:	cld    
  40a058:	gs das 
  40a05a:	add    BYTE PTR [edi+ecx*4],0x80
  40a05e:	stos   DWORD PTR es:[edi],eax
  40a05f:	or     eax,0xdc508ab
  40a064:	pushf  
  40a065:	jmp    0x470d:0x71b36dfb
  40a06c:	push   ebx
  40a06d:	out    0x93,al
  40a06f:	dec    ebx
  40a070:	hlt    
  40a071:	push   ds
  40a072:	xor    ah,cl
  40a074:	dec    esi
  40a075:	jb     0x40a0e7
  40a077:	adc    DWORD PTR [esi],esp
  40a079:	retf   
  40a07a:	jns    0x40a0bc
  40a07c:	cmp    DWORD PTR [ebx-0x39],ecx
  40a07f:	gs xchg ebp,eax
  40a081:	ret    0xebfd
  40a084:	pop    es
  40a085:	jp     0x40a018
  40a087:	inc    ebx
  40a088:	sbb    dl,BYTE PTR [ebp+0x728f48d2]
  40a08e:	xor    ecx,DWORD PTR [edx+0x32]
  40a091:	jae    0x40a036
  40a093:	or     eax,0x160edd3e
  40a098:	adc    eax,0xc246be6e
  40a09d:	je     0x40a076
  40a09f:	sub    al,0xe4
  40a0a1:	mov    ebp,0x48a96e71
  40a0a6:	hlt    
  40a0a7:	xor    eax,0xe0e685e9
  40a0ac:	push   eax
  40a0ad:	clc    
  40a0ae:	jo     0x40a04a
  40a0b0:	xchg   dh,dh
  40a0b2:	xchg   esp,eax
  40a0b3:	jmp    0x40a118
  40a0b5:	outs   dx,BYTE PTR ds:[esi]
  40a0b6:	jge    0x40a0fb
  40a0b8:	push   ebp
  40a0b9:	or     esp,DWORD PTR [esi]
  40a0bb:	adc    bh,BYTE PTR [edi]
  40a0bd:	jbe    0x40a0a6
  40a0bf:	std    
  40a0c0:	or     eax,0x24f54ff7
  40a0c5:	test   al,0xe
  40a0c7:	nop
  40a0c8:	fist   WORD PTR [edx+0x460608da]
  40a0ce:	xor    BYTE PTR [eax-0x3d],ch
  40a0d1:	out    dx,al
  40a0d2:	(bad)  
  40a0d3:	jge    0x40a082
  40a0d5:	shl    BYTE PTR [edx-0x54cdc84d],1
  40a0db:	inc    edi
  40a0dc:	gs scas eax,DWORD PTR es:[edi]
  40a0de:	test   al,0xba
  40a0e0:	rcr    BYTE PTR [ecx],1
  40a0e2:	xor    BYTE PTR [esi],dh
  40a0e4:	xchg   esi,eax
  40a0e5:	inc    esi
  40a0e6:	enter  0x4f5,0x3d
  40a0ea:	mov    ebx,0xdb06945f
  40a0ef:	std    
  40a0f0:	stos   DWORD PTR es:[edi],eax
  40a0f1:	dec    edi
  40a0f2:	cmc    
  40a0f3:	mov    eax,ds:0x690a4bf8
  40a0f8:	gs cmp eax,0xf98903b9
  40a0fe:	cmp    dh,cl
  40a100:	mov    esi,ebp
  40a102:	sbb    edx,DWORD PTR [edi+0x53]
  40a105:	or     DWORD PTR [edi],edx
  40a107:	js     0x40a128
  40a109:	retf   0x428b
  40a10c:	mov    al,ds:0xc2ccc9d6
  40a111:	mov    edi,ecx
  40a113:	push   ebx
  40a114:	push   ss
  40a115:	ins    DWORD PTR es:[edi],dx
  40a116:	retf   
  40a117:	repnz xchg edx,eax
  40a119:	ret    0x8b82
  40a11c:	cmc    
  40a11d:	mov    cl,0x24
  40a11f:	out    dx,al
  40a120:	inc    edx
  40a121:	leave  
  40a122:	std    
  40a123:	and    eax,0xdfaf50
  40a128:	sbb    eax,0x86719853
  40a12d:	scas   eax,DWORD PTR es:[edi]
  40a12e:	rcr    BYTE PTR [esi+0x50],1
  40a131:	movups XMMWORD PTR [edi],xmm0
  40a134:	test   eax,0x9f9f2fc4
  40a139:	rcl    DWORD PTR [edi+0x68],1
  40a13c:	dec    ebp
  40a13d:	inc    ebx
  40a13e:	stos   DWORD PTR es:[edi],eax
  40a13f:	sbb    eax,0x84eecaf5
  40a144:	bound  edx,QWORD PTR [edx-0x35]
  40a147:	sub    edi,DWORD PTR [ecx]
  40a149:	mov    ebx,0x31125715
  40a14e:	cdq    
  40a14f:	jae    0x40a12d
  40a151:	loopne 0x40a183
  40a153:	js     0x40a117
  40a155:	stos   DWORD PTR es:[edi],eax
  40a156:	shr    DWORD PTR [eax+0x29],0xa6
  40a15a:	add    DWORD PTR [eax+eax*2-0x2c],edi
  40a15e:	pop    ecx
  40a15f:	inc    DWORD PTR [esp+eax*1-0x62c37381]
  40a166:	xchg   ebx,eax
  40a167:	and    esi,DWORD PTR [ebp+0x5a28a8ac]
  40a16d:	xchg   esp,eax
  40a16e:	sbb    al,0x48
  40a170:	sar    bh,cl
  40a172:	or     BYTE PTR ds:0xb7b08cce,ch
  40a178:	imul   edx,DWORD PTR [esi-0x61b06fee],0x449af9ee
  40a182:	fucomi st,st(6)
  40a184:	fnstsw WORD PTR [ebx]
  40a186:	jmp    0x247f064a
  40a18b:	push   esi
  40a18c:	push   cs
  40a18d:	jle    0x40a1f9
  40a18f:	mov    ebx,0xa877c064
  40a194:	(bad)  
  40a195:	aad    0x35
  40a197:	xchg   ecx,eax
  40a198:	hlt    
  40a199:	mov    al,ds:0x681756f8
  40a19e:	mov    WORD PTR [esi+0x63c6336a],?
  40a1a4:	pop    esp
  40a1a5:	je     0x40a1cf
  40a1a7:	xchg   edx,eax
  40a1a8:	inc    ebx
  40a1a9:	mov    ebx,0xcfb78756
  40a1ae:	cdq    
  40a1af:	push   esi
  40a1b0:	outs   dx,BYTE PTR ds:[esi]
  40a1b1:	sub    DWORD PTR [esp+eiz*4+0xf],edi
  40a1b5:	add    bl,BYTE PTR [ebx]
  40a1b7:	in     eax,0xb3
  40a1b9:	call   0x109f:0xb3233fab
  40a1c0:	pop    ecx
  40a1c1:	adc    esp,DWORD PTR [esi+0xdeec1f1]
  40a1c7:	pop    ebx
  40a1c8:	int3   
  40a1c9:	xchg   cl,cl
  40a1cb:	pop    edx
  40a1cc:	stos   BYTE PTR es:[edi],al
  40a1cd:	into   
  40a1ce:	xor    dl,BYTE PTR [esi+0x5]
  40a1d1:	jmp    0x2025c24c
  40a1d6:	sahf   
  40a1d7:	daa    
  40a1d8:	pop    ds
  40a1d9:	int3   
  40a1da:	jb     0x40a246
  40a1dc:	maskmovq mm0,(bad)
  40a1dd:	test   DWORD PTR [ebp+0x222c0087],0xdcb07352
  40a1e7:	ja     0x40a236
  40a1e9:	test   BYTE PTR [ecx-0x2b],bl
  40a1ec:	inc    edx
  40a1ed:	cwde   
  40a1ee:	mov    eax,DWORD PTR [eax]
  40a1f0:	lods   eax,DWORD PTR ds:[esi]
  40a1f1:	loope  0x40a184
  40a1f3:	jns    0x40a226
  40a1f5:	jno    0x40a226
  40a1f7:	clc    
  40a1f8:	xchg   ah,dl
  40a1fa:	mov    ds:0x12b5912a,al
  40a1ff:	imul   esi,ebp,0x23
  40a202:	xor    al,0xb0
  40a204:	inc    eax
  40a205:	pop    ecx
  40a206:	or     cl,BYTE PTR ds:0xcdbcedda
  40a20c:	or     esp,edx
  40a20e:	imul   ebx,DWORD PTR [esi-0x75f3da1d],0xffffffb8
  40a215:	push   ecx
  40a216:	sti    
  40a217:	mov    cs,WORD PTR [ebx-0x19fc7dc5]
  40a21d:	mov    dl,0x6f
  40a21f:	mov    ds:0x69877e6b,eax
  40a224:	fdivr  st(3),st
  40a226:	or     eax,0xcf28b3f7
  40a22b:	shl    BYTE PTR [ebx-0x685f739e],1
  40a231:	in     al,0xb5
  40a233:	enter  0x114d,0x1e
  40a237:	ja     0x40a229
  40a239:	inc    esi
  40a23a:	mov    esp,0x29e34cab
  40a23f:	dec    ebx
  40a240:	cmp    DWORD PTR [edi+eax*2-0x53220ebb],esi
  40a247:	into   
  40a248:	jno    0x40a259
  40a24a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a24b:	mov    cs,WORD PTR [eax]
  40a24d:	in     al,dx
  40a24e:	xchg   esi,eax
  40a24f:	jmp    0xbd9:0x4d4fe135
  40a256:	inc    ebp
  40a257:	sbb    esp,ebp
  40a259:	mov    ecx,0xf97860a6
  40a25e:	xchg   BYTE PTR [edi+0x45],cl
  40a261:	pop    ebp
  40a262:	mov    ss,WORD PTR [edx-0xd]
  40a265:	into   
  40a266:	mov    ecx,0x73d26688
  40a26b:	arpl   WORD PTR [ecx-0x3d],sp
  40a26e:	adc    al,0x2c
  40a270:	popf   
  40a271:	and    al,0xb0
  40a273:	dec    ebp
  40a274:	mov    ds:0x1db55f17,eax
  40a279:	inc    eax
  40a27a:	leave  
  40a27b:	xor    ah,BYTE PTR [eax+0x37]
  40a27e:	int3   
  40a27f:	iret   
  40a280:	es or  eax,0x1304a8f7
  40a286:	add    ebp,0xffffffc5
  40a289:	ins    DWORD PTR es:[edi],dx
  40a28a:	sbb    al,0xc4
  40a28c:	inc    esi
  40a28d:	out    dx,eax
  40a28e:	in     eax,dx
  40a28f:	call   FWORD PTR [ebp+0xdf9d5cb]
  40a295:	and    BYTE PTR [eax-0x76c3efd8],bh
  40a29b:	push   cs
  40a29c:	jnp    0x41d0cc40
  40a2a2:	out    0xf3,al
  40a2a4:	dec    esi
  40a2a5:	dec    ecx
  40a2a6:	fs (bad) 
  40a2a8:	fdiv   st,st(1)
  40a2aa:	and    al,0x0
  40a2ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2ad:	jge    0x40a233
  40a2af:	sbb    DWORD PTR [eax+0x25898076],esp
  40a2b5:	add    al,0xf
  40a2b7:	inc    ecx
  40a2b8:	lods   al,BYTE PTR ds:[esi]
  40a2b9:	(bad)  
  40a2ba:	hlt    
  40a2bb:	xchg   esi,eax
  40a2bc:	les    ebp,FWORD PTR [edx-0x12]
  40a2bf:	call   DWORD PTR [edi]
  40a2c1:	fucomip st,st(6)
  40a2c3:	rol    DWORD PTR [edi+0x5d7cb84c],0x98
  40a2ca:	popa   
  40a2cb:	test   eax,0x208523b4
  40a2d0:	addr16 je 0x40a288
  40a2d3:	xor    ecx,DWORD PTR [edx+ebx*2-0x3d]
  40a2d7:	pop    ebp
  40a2d8:	ret    
  40a2d9:	adc    eax,0x4da17ada
  40a2de:	pop    esp
  40a2df:	ret    
  40a2e0:	jp     0x40a357
  40a2e2:	sub    al,BYTE PTR [edi-0x5c]
  40a2e5:	js     0x40a2b4
  40a2e7:	xchg   ebx,eax
  40a2e8:	hlt    
  40a2e9:	sahf   
  40a2ea:	rol    DWORD PTR [ebp+0x7ccff491],1
  40a2f0:	hlt    
  40a2f1:	aas    
  40a2f2:	jmp    0xad80:0xe0fa068f
  40a2f9:	and    eax,0xe3601ab
  40a2fe:	scas   eax,DWORD PTR es:[edi]
  40a2ff:	xor    eax,0x378eaa55
  40a304:	pop    edi
  40a305:	test   BYTE PTR [ecx+eax*1-0x5f],ah
  40a309:	out    0xcd,al
  40a30b:	fcom   DWORD PTR [ebx-0xa]
  40a30e:	push   esp
  40a30f:	pop    eax
  40a310:	pop    edx
  40a311:	inc    edi
  40a312:	mov    cl,0x1e
  40a314:	xchg   edx,eax
  40a315:	out    dx,al
  40a316:	ds leave 
  40a318:	dec    esp
  40a319:	dec    edi
  40a31a:	xchg   DWORD PTR [edi-0x74],edx
  40a31d:	mov    ebx,0x878c86b3
  40a322:	mov    al,0xb
  40a324:	(bad)  
  40a325:	sbb    ch,ah
  40a327:	or     DWORD PTR [eax+eiz*4+0x5],ecx
  40a32b:	jns    0x40a341
  40a32d:	sub    BYTE PTR [ebx+0x3663a545],al
  40a333:	jb     0x40a32b
  40a335:	jecxz  0x40a2f8
  40a337:	loop   0x40a2dc
  40a339:	jl     0x40a363
  40a33b:	test   DWORD PTR [esi-0x36],0xacb91c85
  40a342:	mov    ah,0xdd
  40a344:	or     dl,al
  40a346:	ficomp DWORD PTR [ebp+0x36]
  40a349:	pop    edi
  40a34a:	gs ds out 0xb3,al
  40a34e:	sbb    ch,ah
  40a350:	mov    WORD PTR [edx+eiz*2],?
  40a353:	je     0x40a396
  40a355:	mov    cl,0x25
  40a357:	dec    eax
  40a358:	fist   DWORD PTR [ebx]
  40a35a:	xchg   esi,eax
  40a35b:	sbb    cl,BYTE PTR [esi]
  40a35d:	ret    
  40a35e:	inc    esp
  40a35f:	mov    ebp,0xb0ec2066
  40a364:	dec    edx
  40a365:	stc    
  40a366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a367:	mov    ah,0x42
  40a369:	dec    esp
  40a36a:	pop    esi
  40a36b:	adc    esi,DWORD PTR [eax-0x1e]
  40a36e:	fs hlt 
  40a370:	dec    edi
  40a371:	fsub   DWORD PTR [ecx+esi*8]
  40a374:	aam    0xce
  40a376:	aad    0x5e
  40a378:	ror    DWORD PTR [edx],0xcd
  40a37b:	pop    esp
  40a37c:	mov    ch,0xd0
  40a37e:	add    ebp,DWORD PTR ds:0xe77d2110
  40a384:	lahf   
  40a385:	repz in eax,0x3a
  40a388:	xchg   BYTE PTR [edx+0x4d],dh
  40a38b:	js     0x40a3ab
  40a38d:	sahf   
  40a38e:	in     eax,dx
  40a38f:	mov    es,WORD PTR [eax]
  40a391:	addr16 out 0x99,al
  40a394:	adc    BYTE PTR [esi-0x17db4803],bh
  40a39a:	in     al,dx
  40a39b:	shl    BYTE PTR [eiz*8-0x3fff0386],0xcc
  40a3a3:	ret    0x9e0b
  40a3a6:	(bad)
  40a3aa:	data16 mov ch,0x33
  40a3ad:	lds    edi,FWORD PTR [ebx]
  40a3af:	mov    edi,0x665f7d68
  40a3b4:	sbb    ah,ch
  40a3b6:	shl    DWORD PTR [esp+ebx*8+0x2eb5be95],0x44
  40a3be:	or     eax,0xfd92abc7
  40a3c3:	push   ebp
  40a3c4:	cs jno 0x40a395
  40a3c7:	and    esp,DWORD PTR [ebp+0x5b]
  40a3ca:	pop    esp
  40a3cb:	adc    al,0x9c
  40a3cd:	push   eax
  40a3ce:	ror    DWORD PTR [ecx],1
  40a3d0:	mov    WORD PTR [ebp-0x3f],es
  40a3d3:	mov    ebp,0x78192575
  40a3d8:	dec    eax
  40a3d9:	push   eax
  40a3da:	or     eax,0x4ca9b9da
  40a3df:	ds sahf 
  40a3e1:	xchg   ecx,eax
  40a3e2:	or     eax,0xd0b4f4a2
  40a3e7:	ror    BYTE PTR [esi+0x1c61e4e4],1
  40a3ed:	lods   eax,DWORD PTR ds:[esi]
  40a3ee:	retf   0x1389
  40a3f1:	pop    edi
  40a3f2:	or     dh,BYTE PTR [edi-0xd09e81a]
  40a3f8:	jl     0x40a398
  40a3fa:	outs   dx,BYTE PTR ds:[esi]
  40a3fb:	sbb    DWORD PTR [ebx+0x9d59d4b],esp
  40a401:	stos   BYTE PTR es:[edi],al
  40a402:	push   0x68
  40a404:	add    ecx,eax
  40a406:	mov    bh,0x6f
  40a408:	nop
  40a409:	lds    esp,FWORD PTR [esi+0x27ff0da1]
  40a40f:	mov    WORD PTR [edi+0x52],cs
  40a412:	fdivr  QWORD PTR [edi]
  40a414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a415:	and    al,BYTE PTR [ebp+0x7a1d9cc0]
  40a41b:	jge    0x40a458
  40a41d:	add    DWORD PTR [ebx-0x41],esp
  40a420:	push   ss
  40a421:	fist   WORD PTR [edi+0xc0d2ada]
  40a427:	mov    dh,0x93
  40a429:	dec    ebx
  40a42a:	mov    ds:0xc585c91e,al
  40a42f:	mov    edx,0xe1666b2d
  40a434:	add    dh,BYTE PTR [esi]
  40a436:	or     edi,DWORD PTR [eax-0x2]
  40a439:	ds je  0x40a3d4
  40a43c:	xchg   ebx,eax
  40a43d:	aaa    
  40a43e:	or     eax,0xce3198ae
  40a444:	out    dx,eax
  40a445:	cmp    DWORD PTR [ebx+0x60],0xeb3c9059
  40a44c:	(bad)  
  40a44d:	add    BYTE PTR [ebp+edi*1-0x3a7e5ceb],bl
  40a454:	mov    bh,0xb0
  40a456:	adc    eax,0x3108e0e9
  40a45b:	clc    
  40a45c:	jmp    0x40a438
  40a45e:	popa   
  40a45f:	sbb    BYTE PTR [ebx+0x2fa03b42],al
  40a465:	mov    bh,0x24
  40a467:	iret   
  40a468:	mov    cs,WORD PTR [ecx+edx*1]
  40a46b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a46c:	xchg   ebp,eax
  40a46d:	loop   0x40a4dc
  40a46f:	mov    ah,BYTE PTR [edi+0x68]
  40a472:	stos   BYTE PTR es:[edi],al
  40a473:	xor    dh,al
  40a475:	jmp    0x40a487
  40a477:	stos   DWORD PTR es:[edi],eax
  40a478:	or     cl,al
  40a47a:	xor    esi,0xffffffb8
  40a47d:	mov    al,0x9a
  40a47f:	pop    eax
  40a480:	xchg   ebx,eax
  40a481:	dec    ebx
  40a482:	xchg   esp,eax
  40a483:	xchg   edx,edx
  40a485:	jnp    0x40a40a
  40a487:	mov    eax,ds:0x1957d5e1
  40a48c:	mov    dl,BYTE PTR [eax]
  40a48e:	je     0x40a4d4
  40a490:	inc    edx
  40a491:	pop    ebx
  40a492:	repnz in eax,0x85
  40a495:	ret    
  40a496:	or     esi,DWORD PTR [ebp-0x44]
  40a499:	shr    ebx,0x6f
  40a49c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a49d:	adc    eax,0x207a7a9d
  40a4a2:	out    dx,eax
  40a4a3:	xor    al,0xb3
  40a4a5:	mov    dx,0xe594
  40a4a9:	cdq    
  40a4aa:	pop    esi
  40a4ab:	and    al,0xa0
  40a4ad:	mov    edx,0xf37fb1d3
  40a4b2:	aaa    
  40a4b3:	or     ebx,ebp
  40a4b5:	mov    ebx,0x8d8e1a3c
  40a4ba:	xchg   esi,eax
  40a4bb:	retf   0xda17
  40a4be:	sar    BYTE PTR [esi-0x16],cl
  40a4c1:	loop   0x40a507
  40a4c3:	adc    BYTE PTR [edi-0x39],dh
  40a4c6:	mov    al,ds:0x9dc22c9e
  40a4cb:	mov    al,0x6e
  40a4cd:	ins    BYTE PTR es:[edi],dx
  40a4ce:	mov    bh,0x20
  40a4d0:	mov    ds:0xd4440b20,al
  40a4d5:	dec    ebp
  40a4d6:	jl     0x40a4f4
  40a4d8:	and    al,0x37
  40a4da:	out    0x20,eax
  40a4dc:	ret    
  40a4dd:	fisub  WORD PTR [ebx-0x1e]
  40a4e0:	jbe    0x40a48f
  40a4e2:	test   DWORD PTR [esi],edx
  40a4e4:	adc    dh,bh
  40a4e6:	stos   DWORD PTR es:[edi],eax
  40a4e7:	inc    edi
  40a4e8:	imul   esi,DWORD PTR [edx],0xffffff96
  40a4eb:	lock bound ebx,QWORD PTR [eax]
  40a4ee:	sub    al,0xc
  40a4f0:	or     al,0x23
  40a4f2:	ds mov bl,0x73
  40a4f5:	xor    edx,esi
  40a4f7:	sub    eax,DWORD PTR [ebx+0x4c]
  40a4fa:	imul   edi,DWORD PTR [eax+0x29],0x35963c97
  40a501:	add    eax,0x7282063a
  40a506:	je     0x40a547
  40a508:	int3   
  40a509:	xchg   esi,eax
  40a50a:	or     al,BYTE PTR [ebx]
  40a50c:	xchg   DWORD PTR [esi-0x512a6aae],esp
  40a512:	outs   dx,DWORD PTR ds:[esi]
  40a513:	aad    0x64
  40a515:	into   
  40a516:	das    
  40a517:	shr    DWORD PTR [edi+0x7a],0xd2
  40a51b:	(bad)  
  40a51c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a51d:	sbb    edx,DWORD PTR [ebp+0x69f2ad47]
  40a523:	daa    
  40a524:	push   edx
  40a525:	or     edx,edx
  40a527:	stos   DWORD PTR es:[edi],eax
  40a528:	stos   BYTE PTR es:[edi],al
  40a529:	icebp  
  40a52a:	add    BYTE PTR [eax-0x79ecc451],0x76
  40a531:	sbb    DWORD PTR [ecx-0x3],ecx
  40a534:	dec    ecx
  40a535:	cmp    BYTE PTR [ebx+0x29],ah
  40a538:	cdq    
  40a539:	jl     0x40a4ed
  40a53b:	outs   dx,BYTE PTR ds:[esi]
  40a53c:	sub    eax,0x4a54a439
  40a541:	shr    DWORD PTR [esi-0x7c],1
  40a544:	inc    ebp
  40a545:	in     eax,0x76
  40a547:	inc    ebx
  40a548:	out    dx,eax
  40a549:	dec    esp
  40a54a:	or     BYTE PTR ds:0x1875c0d4,dh
  40a550:	or     DWORD PTR [ebx+0x4429acc9],ecx
  40a556:	add    cl,BYTE PTR [edx-0x3e19b43a]
  40a55c:	loope  0x40a5c7
  40a55e:	pusha  
  40a55f:	call   0xde3837bb
  40a564:	sub    DWORD PTR [esi+0x70ce1143],ebp
  40a56a:	data16 sub al,0xb3
  40a56d:	and    BYTE PTR [edx],dl
  40a56f:	xchg   ecx,eax
  40a570:	xor    ch,bh
  40a572:	pushf  
  40a573:	mov    bh,0xcb
  40a575:	mov    cl,0xd5
  40a577:	jno    0x40a595
  40a579:	dec    esp
  40a57a:	pop    edi
  40a57b:	(bad)  
  40a57c:	test   BYTE PTR [ebx-0x3fb2df2f],bl
  40a582:	push   es
  40a583:	cmp    eax,0xe439a7f7
  40a588:	push   edx
  40a589:	mov    eax,0x2c58cf4b
  40a58e:	jmp    0x40a5a1
  40a590:	mov    ecx,0x4595256c
  40a595:	enter  0x3728,0xea
  40a599:	fsub   st(3),st
  40a59b:	nop
  40a59c:	fsub   QWORD PTR [esi-0x13]
  40a59f:	cmp    dl,BYTE PTR [esi+0x3dfdcbcd]
  40a5a5:	sub    al,0x35
  40a5a7:	lock fisubr WORD PTR [ebx-0x36276b75]
  40a5ae:	ficom  WORD PTR [esi-0x31]
  40a5b1:	xor    eax,0x12ad2191
  40a5b6:	pop    esi
  40a5b7:	xor    ah,dl
  40a5b9:	mov    esi,0x2fc47b0e
  40a5be:	scas   eax,DWORD PTR es:[edi]
  40a5bf:	ret    
  40a5c0:	push   edi
  40a5c1:	add    ebp,DWORD PTR [ebp+0xe]
  40a5c4:	mov    ebx,DWORD PTR [ebp-0x63eb5bd8]
  40a5ca:	cmp    BYTE PTR [ebx],ah
  40a5cc:	jge    0x40a644
  40a5ce:	add    BYTE PTR [edi-0x2c],al
  40a5d1:	jno    0x40a58a
  40a5d3:	jmp    0x684d:0x75dc313e
  40a5da:	add    DWORD PTR [edi],edi
  40a5dc:	into   
  40a5dd:	add    BYTE PTR [eax-0x5dce008a],0x22
  40a5e4:	(bad)  
  40a5e5:	test   BYTE PTR [eax-0x57ba81a7],0x99
  40a5ec:	pop    esp
  40a5ed:	(bad)  
  40a5ee:	xlat   BYTE PTR ds:[ebx]
  40a5ef:	arpl   WORD PTR [ecx],sp
  40a5f1:	in     al,0x9b
  40a5f3:	repz inc esi
  40a5f5:	or     al,0x45
  40a5f7:	fucomip st,st(4)
  40a5f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5fa:	lahf   
  40a5fb:	pop    esi
  40a5fc:	pop    eax
  40a5fd:	xchg   DWORD PTR fs:[edx],esi
  40a600:	pop    ebx
  40a601:	jge    0x40a65b
  40a603:	and    ah,BYTE PTR [edx]
  40a605:	adc    al,0x81
  40a607:	push   esi
  40a608:	mov    ch,0x83
  40a60a:	imul   DWORD PTR [ebx-0x50f8bf06]
  40a610:	test   BYTE PTR [ebp+esi*2+0x6],bl
  40a614:	push   ebx
  40a615:	leave  
  40a616:	int    0xe4
  40a618:	or     BYTE PTR [edi+0x5bbad9e2],cl
  40a61e:	outs   dx,DWORD PTR ds:[esi]
  40a61f:	mov    dh,0x7c
  40a621:	jns    0x40a656
  40a623:	mov    cl,0x91
  40a625:	xchg   ebx,eax
  40a626:	lods   al,BYTE PTR ds:[esi]
  40a627:	stos   DWORD PTR es:[edi],eax
  40a628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a629:	dec    ebx
  40a62a:	jg     0x40a66f
  40a62c:	dec    esp
  40a62d:	xchg   DWORD PTR [esi+0x50],ecx
  40a630:	fsqrt  
  40a632:	mov    al,0xab
  40a634:	sete   ah
  40a637:	pop    ebp
  40a638:	les    edi,FWORD PTR [esi-0x58]
  40a63b:	push   0x11
  40a63d:	cmp    DWORD PTR [ebx+0x12],esi
  40a640:	(bad)  
  40a641:	adc    DWORD PTR [edx+eiz*4],ecx
  40a644:	sbb    edi,DWORD PTR [esi]
  40a646:	push   0x30732e0d
  40a64b:	call   0xb27a:0x5117854e
  40a652:	jne    0x40a63c
  40a654:	mov    ds:0x100ac52b,al
  40a659:	jo     0x40a61d
  40a65b:	and    eax,0x71990b66
  40a660:	into   
  40a661:	fimul  DWORD PTR [esi+0x3a]
  40a664:	or     eax,0xdb8ac192
  40a669:	cli    
  40a66a:	dec    eax
  40a66b:	je     0x40a676
  40a66d:	aas    
  40a66e:	jno    0x40a685
  40a670:	xor    bh,BYTE PTR [ecx-0x7e]
  40a673:	jle    0x40a6b1
  40a675:	les    ecx,FWORD PTR [edi+0x66fd0871]
  40a67b:	retf   
  40a67c:	lock fld TBYTE PTR [edx-0x2fe3e0ed]
  40a683:	jle    0x40a60d
  40a685:	aam    0xa3
  40a687:	xor    dh,BYTE PTR [eax+0x35]
  40a68a:	sbb    DWORD PTR [ebp-0x2f863632],0x6c
  40a691:	(bad)  
  40a692:	lea    ebx,[eax]
  40a694:	dec    ebx
  40a695:	fsqrt  
  40a697:	adc    dh,al
  40a699:	or     al,0xfa
  40a69b:	(bad)  [eax-0x76b36f0c]
  40a6a1:	dec    esi
  40a6a2:	popf   
  40a6a3:	outs   dx,BYTE PTR ds:[esi]
  40a6a4:	in     eax,0x40
  40a6a6:	pop    ss
  40a6a7:	sub    eax,DWORD PTR [esi+0x19]
  40a6aa:	ds xchg ebx,eax
  40a6ac:	(bad)  
  40a6ad:	jnp    0x40a6f9
  40a6af:	push   esp
  40a6b0:	lods   al,BYTE PTR ds:[esi]
  40a6b1:	(bad)  
  40a6b2:	mov    DWORD PTR [ecx+0x77e2dfe0],esp
  40a6b8:	lock outs dx,BYTE PTR ds:[esi]
  40a6ba:	inc    edi
  40a6bb:	sbb    ecx,ebx
  40a6bd:	sbb    DWORD PTR [eax],0xa7a9f42a
  40a6c3:	div    DWORD PTR [esi]
  40a6c5:	add    bl,BYTE PTR [eax]
  40a6c7:	sbb    DWORD PTR [esi],ecx
  40a6c9:	push   ss
  40a6ca:	pop    edx
  40a6cb:	lock xor ebx,DWORD PTR [eax+0x5a28bad6]
  40a6d2:	test   BYTE PTR [ebp-0x498df250],cl
  40a6d8:	cmc    
  40a6d9:	ficom  DWORD PTR [ebp-0x53c2ce6]
  40a6df:	jp     0x40a734
  40a6e1:	stos   BYTE PTR es:[edi],al
  40a6e2:	fdivr  QWORD PTR [ebp-0x31d542f5]
  40a6e8:	mov    BYTE PTR [edx+ebp*4],bl
  40a6eb:	cwde   
  40a6ec:	jle    0x40a699
  40a6ee:	jecxz  0x40a6bd
  40a6f0:	pop    eax
  40a6f1:	clc    
  40a6f2:	mov    edi,0x7687beb3
  40a6f7:	not    esi
  40a6f9:	ret    
  40a6fa:	xor    cl,BYTE PTR [ecx+0x3d]
  40a6fd:	les    ebp,FWORD PTR [esi-0x345be91e]
  40a703:	adc    bh,BYTE PTR [ecx+0x75c972fe]
  40a709:	rol    dh,1
  40a70b:	and    al,0x6a
  40a70d:	sbb    ah,dl
  40a70f:	jns    0x40a6b9
  40a711:	ret    0x6a36
  40a714:	popf   
  40a715:	mov    ecx,0xdd8fc767
  40a71a:	mov    eax,0x648ffaa4
  40a71f:	repnz or al,0x69
  40a722:	repnz dec ebx
  40a724:	sub    eax,DWORD PTR [esp+esi*4+0x71]
  40a728:	pop    esi
  40a729:	stc    
  40a72a:	and    BYTE PTR [edx-0x50821653],bl
  40a730:	fidiv  WORD PTR [ebp-0x3e]
  40a733:	out    dx,eax
  40a734:	lods   eax,DWORD PTR ds:[esi]
  40a735:	add    edi,DWORD PTR [ecx-0x4d87bfb1]
  40a73b:	add    ebp,DWORD PTR [esi+0x6f]
  40a73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a73f:	add    DWORD PTR [ecx-0x60f1840a],0x33
  40a746:	int3   
  40a747:	retf   0xc89e
  40a74a:	xchg   DWORD PTR [esi+0x60f99703],ecx
  40a750:	js     0x40a754
  40a752:	jge    0x40a6de
  40a754:	sub    eax,0xedd26966
  40a759:	push   0xdde837e8
  40a75e:	xor    al,0x32
  40a760:	xchg   edi,eax
  40a761:	jle    0x40a726
  40a763:	je     0x40a774
  40a765:	inc    esi
  40a766:	in     al,dx
  40a767:	sub    dl,dl
  40a769:	add    bh,dl
  40a76b:	jnp    0x40a79c
  40a76d:	cwde   
  40a76e:	lds    esp,FWORD PTR [ecx+esi*1-0x71]
  40a772:	xchg   ebx,eax
  40a773:	push   esi
  40a774:	sub    dl,bl
  40a776:	sbb    bh,ah
  40a778:	dec    esp
  40a779:	sbb    DWORD PTR [edi-0x34035862],ecx
  40a77f:	into   
  40a780:	xchg   ebx,eax
  40a781:	sbb    DWORD PTR [edx-0x2b],ebp
  40a784:	xor    al,BYTE PTR [ecx+0xa948e5f]
  40a78a:	dec    eax
  40a78b:	push   0xffffffdf
  40a78d:	fidiv  DWORD PTR [edi]
  40a78f:	out    dx,eax
  40a790:	in     eax,dx
  40a791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a792:	fstp   TBYTE PTR [edx-0x2039943]
  40a799:	inc    ebx
  40a79a:	mov    BYTE PTR [eax-0x4a42f29a],al
  40a7a0:	dec    eax
  40a7a1:	mov    ebp,0x3947188
  40a7a6:	rcr    BYTE PTR [edi-0x45],cl
  40a7a9:	fdivr  DWORD PTR [edx+0x5a1ddfa7]
  40a7af:	push   edi
  40a7b0:	mov    bl,0x53
  40a7b2:	mov    dl,bl
  40a7b4:	xor    eax,0xbfd0b11c
  40a7b9:	xor    al,0xdd
  40a7bb:	mov    ds:0x2256a861,eax
  40a7c0:	jmp    0xcc4c:0x565cfdfc
  40a7c7:	ret    0xbc34
  40a7ca:	das    
  40a7cb:	and    eax,0xdb064e4b
  40a7d0:	xchg   ebx,eax
  40a7d1:	shl    BYTE PTR [edx+0x4a],1
  40a7d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7d5:	je     0x40a781
  40a7d7:	popa   
  40a7d8:	jo     0x40a765
  40a7da:	mov    ds:0xcdb077ce,eax
  40a7df:	jp     0x40a778
  40a7e1:	dec    esp
  40a7e2:	mov    ebp,0xa20ec2cb
  40a7e7:	xchg   esp,eax
  40a7e8:	les    eax,FWORD PTR [edx]
  40a7ea:	mov    WORD PTR [edx-0x72208768],?
  40a7f0:	jo     0x40a7b1
  40a7f2:	push   eax
  40a7f3:	mov    ebx,0xd429abce
  40a7f8:	dec    ebp
  40a7f9:	es sti 
  40a7fb:	cmp    bl,BYTE PTR [eax-0x9485fa5]
  40a801:	addr16 aaa 
  40a803:	jbe    0x40a78e
  40a805:	mov    WORD PTR [edx+0x48b22022],ss
  40a80b:	pop    edi
  40a80c:	jmp    0xfd30a2b4
  40a811:	inc    ecx
  40a812:	call   0x5f:0xd771f5e9
  40a819:	dec    ecx
  40a81a:	mov    fs,WORD PTR [edi-0x6]
  40a81d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a81e:	dec    ecx
  40a81f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a820:	test   dh,bh
  40a822:	xor    esi,DWORD PTR [ebx-0x79]
  40a825:	imul   esp,ecx,0x6c
  40a828:	cs sbb edx,ebp
  40a82b:	cmc    
  40a82c:	cmp    al,0x1f
  40a82e:	pop    edx
  40a82f:	pushf  
  40a830:	cmp    esi,esi
  40a832:	cmp    eax,DWORD PTR [eax-0x26]
  40a835:	dec    ecx
  40a836:	(bad)  
  40a837:	cmp    BYTE PTR [ecx+0x3a],bl
  40a83a:	xor    al,0xb0
  40a83c:	mov    ecx,0xdaf8d932
  40a841:	cmp    edi,esp
  40a843:	push   edi
  40a844:	lods   al,BYTE PTR ds:[esi]
  40a845:	test   BYTE PTR [edi+0x610374b4],dl
  40a84b:	ret    
  40a84c:	dec    edi
  40a84d:	push   ds
  40a84e:	jle    0x40a876
  40a850:	aad    0x1c
  40a852:	jns    0x40a8b6
  40a854:	inc    eax
  40a855:	jle    0x40a88b
  40a857:	in     al,0x7c
  40a859:	out    dx,al
  40a85a:	sbb    ebp,edi
  40a85c:	stos   BYTE PTR es:[edi],al
  40a85d:	or     al,0x87
  40a85f:	adc    al,0x80
  40a861:	in     al,0xfa
  40a863:	test   ebx,edx
  40a865:	or     ebp,esi
  40a867:	xchg   esi,eax
  40a868:	mov    dh,0xd9
  40a86a:	xor    eax,0x9806f55b
  40a86f:	cmp    eax,0xd2af02e
  40a874:	test   eax,0x4880dd72
  40a879:	fs mov esp,0xbb425273
  40a87f:	cmp    eax,0x19a6842e
  40a884:	clc    
  40a885:	fcomp  QWORD PTR [ebx]
  40a887:	jg     0x40a832
  40a889:	scas   eax,DWORD PTR es:[edi]
  40a88a:	mov    ds:0x81bd6f57,al
  40a88f:	test   al,0xae
  40a891:	shl    DWORD PTR [edx+0x58],0xd9
  40a895:	dec    ecx
  40a896:	test   eax,0x3918d03
  40a89b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a89c:	inc    esp
  40a89d:	fs push edi
  40a89f:	mov    cl,0x6e
  40a8a1:	mov    esp,0x7d551be8
  40a8a6:	sbb    edi,DWORD PTR ds:0x239d7fe9
  40a8ac:	retf   
  40a8ad:	add    dh,BYTE PTR [eax+esi*2]
  40a8b0:	sub    DWORD PTR [ebx+0x49],ebp
  40a8b3:	leave  
  40a8b4:	add    eax,0x592f0db0
  40a8b9:	inc    edx
  40a8ba:	pop    es
  40a8bb:	or     al,0xa1
  40a8bd:	inc    ebx
  40a8be:	mov    al,0x79
  40a8c0:	jne    0x40a8dd
  40a8c2:	push   es
  40a8c3:	shl    DWORD PTR [edi],1
  40a8c5:	test   cl,bh
  40a8c7:	inc    esi
  40a8c8:	call   0x212dc31f
  40a8cd:	mov    al,0x82
  40a8cf:	out    dx,eax
  40a8d0:	sahf   
  40a8d1:	mov    dh,0x2f
  40a8d3:	push   esp
  40a8d4:	sub    bh,BYTE PTR [ebx+esi*1+0x3f]
  40a8d8:	fldenv [ebp+0x16a2166]
  40a8de:	adc    edi,eax
  40a8e0:	icebp  
  40a8e1:	pop    es
  40a8e2:	rcr    BYTE PTR [eax-0x2b],0x40
  40a8e6:	fisttp QWORD PTR [edx-0x20b0035f]
  40a8ec:	sub    dh,dh
  40a8ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8ef:	mov    esp,0x3f2645f
  40a8f4:	jge    0x40a8aa
  40a8f6:	shl    ah,cl
  40a8f8:	and    DWORD PTR [esi],ecx
  40a8fa:	shl    dh,1
  40a8fc:	cli    
  40a8fd:	test   BYTE PTR [ecx-0xc4cec8b],dl
  40a903:	sbb    BYTE PTR ds:0xb82f6752,dl
  40a909:	push   0xffffff9e
  40a90b:	xchg   edi,eax
  40a90c:	cmp    edi,edi
  40a90e:	push   ss
  40a90f:	cs cmp al,0x43
  40a912:	call   0xce5c:0xb48bebb7
  40a919:	addr16 jno 0x40a968
  40a91c:	xchg   ebp,eax
  40a91d:	mov    dh,0xe6
  40a91f:	call   0x466d:0xaaf01d1a
  40a926:	xchg   BYTE PTR [eax+0x748b208c],ah
  40a92c:	clc    
  40a92d:	pop    eax
  40a92e:	mov    edi,0x9e9633a
  40a933:	jae    0x40a927
  40a935:	repz bound esi,QWORD PTR [esi-0x2d]
  40a939:	cmp    eax,DWORD PTR [ebx+0xff7d975]
  40a93f:	sbb    BYTE PTR [esi+0x4a],cl
  40a942:	fistp  QWORD PTR ds:0x27ba29c6
  40a948:	xchg   esp,eax
  40a949:	pop    eax
  40a94a:	jbe    0x40a90c
  40a94c:	stc    
  40a94d:	sbb    eax,0x1d1ff6c2
  40a952:	shl    DWORD PTR [ebp+0x127bf52b],1
  40a958:	shr    BYTE PTR [esi],cl
  40a95a:	(bad)  
  40a95b:	jmp    0xf89654a0
  40a960:	cld    
  40a961:	out    0x10,al
  40a963:	pop    fs
  40a965:	xlat   BYTE PTR ds:[ebx]
  40a966:	es inc ecx
  40a968:	jbe    0x40a99e
  40a96a:	lock push 0x25abbed5
  40a970:	inc    esp
  40a971:	mov    eax,0x6890ffd1
  40a976:	xor    ebx,DWORD PTR [esi+0x7c]
  40a979:	leave  
  40a97a:	inc    edx
  40a97b:	inc    BYTE PTR [ebx-0x5d7edf4e]
  40a981:	call   0x1ef:0xe0e77cd5
  40a988:	push   cs
  40a989:	lea    ebx,[ebx]
  40a98b:	hlt    
  40a98c:	fcmovnb st,st(7)
  40a98e:	fsubr  DWORD PTR ds:0x1266
  40a993:	in     al,0xbd
  40a995:	pop    ss
  40a996:	adc    al,0xf6
  40a998:	out    0x20,eax
  40a99a:	cdq    
  40a99b:	or     BYTE PTR [edi],0x2c
  40a99e:	sub    bh,ch
  40a9a0:	cld    
  40a9a1:	icebp  
  40a9a2:	cmp    BYTE PTR [esi-0x77aafce8],cl
  40a9a8:	ret    0xdbda
  40a9ab:	sahf   
  40a9ac:	add    al,0x2a
  40a9ae:	adc    DWORD PTR [esi+0x7a08e7e2],esp
  40a9b4:	xchg   esi,eax
  40a9b5:	call   0x79c1751a
  40a9ba:	jge    0x40aa1b
  40a9bc:	das    
  40a9bd:	imul   esp,DWORD PTR [ecx+0x2e],0xacc4b249
  40a9c4:	mov    esi,0x83e9e620
  40a9c9:	mov    al,ds:0x711cc61e
  40a9ce:	mov    ebx,0x3e320864
  40a9d3:	in     al,dx
  40a9d4:	add    esp,ebx
  40a9d6:	leave  
  40a9d7:	push   esp
  40a9d8:	mov    ebp,ecx
  40a9da:	fwait
  40a9db:	jbe    0x40a99c
  40a9dd:	inc    ebp
  40a9de:	cmp    BYTE PTR [esi+ecx*2],dh
  40a9e1:	add    eax,0x8ece34cc
  40a9e6:	mov    ds:0xa5249159,ax
  40a9ec:	into   
  40a9ed:	push   0x4a
  40a9ef:	aad    0xbc
  40a9f1:	push   esp
  40a9f2:	inc    edi
  40a9f3:	mov    bh,0x13
  40a9f5:	addr16 in eax,0xdf
  40a9f8:	xor    edx,DWORD PTR [edi-0x2e]
  40a9fb:	outs   dx,BYTE PTR ds:[esi]
  40a9fc:	addr16 pop ss
  40a9fe:	in     al,dx
  40a9ff:	xchg   esi,eax
  40aa00:	or     bl,al
  40aa02:	or     eax,0x5802f6ae
  40aa07:	adc    ebp,esp
  40aa09:	push   cs
  40aa0a:	fsubr  QWORD PTR [esi]
  40aa0c:	xor    BYTE PTR [ecx+ecx*8],ch
  40aa0f:	lds    edx,FWORD PTR [eax+0xdd84b5c]
  40aa15:	(bad)  
  40aa16:	jmp    0x656c:0xf0af9cc0
  40aa1d:	stos   BYTE PTR es:[edi],al
  40aa1e:	pop    esi
  40aa1f:	push   es
  40aa20:	dec    ebp
  40aa21:	ret    0x8755
  40aa24:	and    DWORD PTR [ecx],0xffffff92
  40aa27:	(bad)  
  40aa28:	sbb    DWORD PTR [ebp-0x46],eax
  40aa2b:	xchg   DWORD PTR [ecx+0x8708a9a],ebx
  40aa31:	jmp    0x2c101920
  40aa36:	add    eax,0xf16372b0
  40aa3b:	add    bh,BYTE PTR ds:0x122c48a8
  40aa41:	rcl    BYTE PTR [esi-0x64],cl
  40aa44:	pushf  
  40aa45:	mov    cl,BYTE PTR [edi-0x762948f0]
  40aa4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa4c:	pop    eax
  40aa4d:	and    al,0x4e
  40aa4f:	clc    
  40aa50:	mov    DWORD PTR [esi-0x3c],esi
  40aa53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa54:	pop    edx
  40aa55:	xor    al,0xc6
  40aa57:	dec    edi
  40aa58:	mov    cl,al
  40aa5a:	mov    DWORD PTR [eax+0x25],esp
  40aa5d:	inc    esp
  40aa5e:	and    esp,esi
  40aa60:	push   0xd3cce6ad
  40aa65:	cdq    
  40aa66:	sar    BYTE PTR [edx+0x64],1
  40aa69:	mov    edx,DWORD PTR [ebx+0x31]
  40aa6c:	sub    al,0x5a
  40aa6e:	jne    0x40aa8e
  40aa70:	aas    
  40aa71:	out    dx,eax
  40aa72:	inc    ecx
  40aa73:	push   ds
  40aa74:	fld    DWORD PTR [edi+0x19]
  40aa77:	push   esp
  40aa78:	popf   
  40aa79:	lods   al,BYTE PTR ds:[esi]
  40aa7a:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa7d:	sbb    DWORD PTR [eax+0x5d55913],esp
  40aa83:	fst    DWORD PTR [esp+ecx*2]
  40aa86:	ss jge 0x40aa72
  40aa89:	xor    eax,0x96bdfde5
  40aa8e:	fs xchg esi,eax
  40aa90:	add    al,cl
  40aa92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa93:	jmp    0x40aa28
  40aa95:	xchg   ecx,eax
  40aa96:	mov    eax,ecx
  40aa98:	mov    esi,0xbffb3cd2
  40aa9d:	sub    eax,0x4848ecc1
  40aaa2:	xor    ecx,DWORD PTR [edx+0x2b]
  40aaa5:	lock mov BYTE PTR [ebx+0x7494ab66],dh
  40aaac:	pop    esp
  40aaad:	cmp    ecx,DWORD PTR [esi-0x7916ec66]
  40aab3:	mov    al,0x7b
  40aab5:	inc    edx
  40aab6:	push   esp
  40aab7:	lea    edx,[eax]
  40aab9:	aaa    
  40aaba:	cdq    
  40aabb:	mov    cl,0x88
  40aabd:	pop    ecx
  40aabe:	lds    eax,FWORD PTR [esi+0x4c]
  40aac1:	xor    eax,0x4bcfeb21
  40aac6:	xor    eax,eax
  40aac8:	ins    DWORD PTR es:[edi],dx
  40aac9:	push   ecx
  40aaca:	iret   
  40aacb:	mov    edx,0x9eafaf6
  40aad0:	arpl   si,dx
  40aad2:	in     al,0x37
  40aad4:	xor    ebx,DWORD PTR [edi]
  40aad6:	in     al,dx
  40aad7:	xor    al,0xb2
  40aad9:	jmp    0x97395a9b
  40aade:	sbb    al,0xe3
  40aae0:	outs   dx,BYTE PTR ds:[esi]
  40aae1:	stc    
  40aae2:	cmp    al,0x4d
  40aae4:	and    al,0xc9
  40aae6:	pop    ds
  40aae7:	shl    ah,0x7d
  40aaea:	enter  0x7291,0x4
  40aaee:	xchg   edi,eax
  40aaef:	aam    0x1c
  40aaf1:	mov    DWORD PTR [ebp-0x40],ebx
  40aaf4:	and    al,0x3b
  40aaf6:	adc    BYTE PTR [eax+0x4e264b66],ch
  40aafc:	shl    DWORD PTR [ecx+0x56],1
  40aaff:	sbb    al,0x5d
  40ab01:	push   edi
  40ab02:	or     edi,DWORD PTR [eax+0x2f]
  40ab05:	pop    DWORD PTR [ebx+0x7edb8900]
  40ab0b:	mov    bh,0x65
  40ab0d:	cmp    eax,0x8c92a60d
  40ab12:	or     al,0x29
  40ab15:	shr    BYTE PTR [edi],cl
  40ab17:	xor    esp,edi
  40ab19:	icebp  
  40ab1a:	xchg   ecx,eax
  40ab1b:	pop    ebx
  40ab1c:	cmp    al,0x6f
  40ab1e:	add    eax,0x68267967
  40ab23:	pop    esp
  40ab24:	icebp  
  40ab25:	cwde   
  40ab26:	adc    al,0x96
  40ab28:	fstp   DWORD PTR [edi-0x7adc5b02]
  40ab2e:	jnp    0x40ab89
  40ab30:	mov    al,ds:0xc7d9847d
  40ab35:	mul    esi
  40ab37:	scas   al,BYTE PTR es:[edi]
  40ab38:	xor    BYTE PTR [eax-0x105749c],ah
  40ab3e:	dec    esp
  40ab3f:	in     al,0x5f
  40ab41:	jmp    0xd2247cd9
  40ab46:	inc    edi
  40ab47:	jge    0x40ab02
  40ab49:	jns    0x40aba5
  40ab4b:	xor    al,0x79
  40ab4d:	add    al,0x23
  40ab4f:	pop    ebp
  40ab50:	(bad)  
  40ab51:	fiadd  WORD PTR [ecx]
  40ab53:	dec    edi
  40ab54:	ja     0x40ab9f
  40ab56:	pusha  
  40ab57:	imul   ebx,DWORD PTR [eax],0x76
  40ab5a:	test   BYTE PTR ds:0x79945388,dl
  40ab60:	add    DWORD PTR [ecx],0xb53a8908
  40ab66:	sahf   
  40ab67:	fs jbe 0x40ab12
  40ab6a:	fld    DWORD PTR [ebx]
  40ab6c:	inc    esi
  40ab6d:	int    0xb5
  40ab6f:	inc    eax
  40ab70:	mov    esp,0xf3b9c2f4
  40ab75:	mov    es,WORD PTR [ebp+0x8bd6720]
  40ab7b:	mov    esp,0xee869310
  40ab80:	inc    ecx
  40ab81:	and    eax,0x409090e2
  40ab86:	adc    ecx,esp
  40ab88:	mov    esi,0x3b08df41
  40ab8d:	pop    es
  40ab8e:	scas   al,BYTE PTR es:[edi]
  40ab8f:	sub    eax,0xcc7bce61
  40ab94:	leave  
  40ab95:	lds    ecx,FWORD PTR [ebp+0x1]
  40ab98:	push   esp
  40ab99:	shl    DWORD PTR [esi],0x86
  40ab9c:	dec    ebx
  40ab9d:	or     al,0x53
  40ab9f:	arpl   sp,cx
  40aba1:	clc    
  40aba2:	je     0x40abb0
  40aba4:	test   BYTE PTR [ebp+0x5749e8a1],cl
  40abaa:	(bad)  
  40abab:	cmp    eax,0xb22fcd0d
  40abb0:	mov    ah,0x67
  40abb2:	adc    cl,dh
  40abb4:	inc    edx
  40abb5:	xor    esi,DWORD PTR [edi]
  40abb7:	inc    ecx
  40abb8:	dec    eax
  40abb9:	test   DWORD PTR [edx],ebx
  40abbb:	push   ebx
  40abbc:	and    al,BYTE PTR [edi]
  40abbe:	inc    esp
  40abbf:	xchg   ebx,eax
  40abc0:	and    eax,ebp
  40abc2:	push   esi
  40abc3:	or     dl,ch
  40abc5:	sub    al,0xf0
  40abc7:	lahf   
  40abc8:	jo     0x40ab7b
  40abca:	in     eax,dx
  40abcb:	pop    esi
  40abcc:	fmul   DWORD PTR [esi+ebx*4]
  40abcf:	cmp    BYTE PTR cs:[ecx+edi*4+0x52],0x2
  40abd5:	jb     0x40ab6f
  40abd7:	cld    
  40abd8:	cmp    esi,DWORD PTR [ebp+0x5993c61a]
  40abde:	xchg   edi,eax
  40abdf:	sbb    eax,0xe765acf4
  40abe4:	add    eax,edi
  40abe6:	repz inc ebp
  40abe8:	(bad)  
  40abe9:	dec    ebx
  40abea:	inc    ecx
  40abeb:	dec    esi
  40abec:	lahf   
  40abed:	pushf  
  40abee:	fscale 
  40abf0:	cs push esp
  40abf2:	(bad)  
  40abf3:	fisttp DWORD PTR [edx-0x23]
  40abf6:	sahf   
  40abf7:	gs aaa 
  40abf9:	fdivr  DWORD PTR [edi+0x286a02a9]
  40abff:	icebp  
  40ac00:	dec    eax
  40ac01:	mov    ah,0x18
  40ac03:	in     eax,dx
  40ac04:	dec    eax
  40ac05:	push   eax
  40ac07:	rcl    ebp,0xa2
  40ac0a:	cmc    
  40ac0b:	xchg   ebp,eax
  40ac0c:	popa   
  40ac0d:	pop    ebx
  40ac0e:	jb     0x40ac28
  40ac10:	pop    ecx
  40ac11:	iret   
  40ac12:	fbld   TBYTE PTR [ebp+0x15]
  40ac15:	loopne 0x40abd2
  40ac17:	enter  0x3ee9,0xf1
  40ac1b:	push   edi
  40ac1c:	mov    edi,0xf9f412d4
  40ac21:	pop    ss
  40ac22:	lea    ebx,[esi+ecx*1+0x3fd37b1a]
  40ac29:	in     al,dx
  40ac2a:	aad    0xa5
  40ac2c:	std    
  40ac2d:	mov    WORD PTR [edx-0x6e8c6f40],gs
  40ac33:	out    0xfc,eax
  40ac35:	mov    WORD PTR [eax-0x61],?
  40ac38:	mov    cl,0x9b
  40ac3a:	das    
  40ac3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac3c:	shl    DWORD PTR [ebp-0xd],1
  40ac3f:	inc    eax
  40ac40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac41:	xchg   edx,eax
  40ac42:	call   0xf9d2bd73
  40ac47:	cmp    eax,0x4b562eca
  40ac4c:	sub    DWORD PTR [ebx],edi
  40ac4e:	fist   DWORD PTR es:[esp+edi*2-0x625900fd]
  40ac56:	(bad)  
  40ac57:	pop    ss
  40ac58:	add    bl,BYTE PTR [eax-0x50d55694]
  40ac5e:	mov    al,ds:0xaa082581
  40ac63:	out    dx,eax
  40ac64:	fwait
  40ac65:	pop    edi
  40ac66:	shl    edx,1
  40ac68:	or     eax,DWORD PTR [ecx+ecx*4+0x33]
  40ac6c:	mov    bl,ah
  40ac6e:	mov    ebx,DWORD PTR [edx]
  40ac70:	inc    ecx
  40ac71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac72:	inc    ecx
  40ac73:	jmp    0x40ac29
  40ac75:	xor    esi,edi
  40ac77:	iret   
  40ac78:	call   0x5933:0x6b09153
  40ac7f:	int    0xea
  40ac81:	mov    bh,0xd
  40ac83:	mov    ah,0x7b
  40ac85:	sub    dl,BYTE PTR [ebx+0x62b9450d]
  40ac8b:	fcom   DWORD PTR [esi-0x9e07926]
  40ac91:	xchg   edi,eax
  40ac92:	push   ebx
  40ac93:	ror    DWORD PTR [edi],0x5f
  40ac96:	repnz int3 
  40ac98:	ins    DWORD PTR es:[edi],dx
  40ac99:	daa    
  40ac9a:	mov    bl,0x17
  40ac9c:	jmp    0x40ac77
  40ac9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac9f:	lock lea dx,[ebp-0x56e5b25e]
  40aca7:	jle    0x40ac81
  40aca9:	(bad)  
  40acaa:	mov    ds:0xa03a5a42,al
  40acaf:	ret    0xc3b7
  40acb2:	jmp    0x8eeb7103
  40acb7:	xchg   DWORD PTR [esi-0x1cf8727a],esi
  40acbd:	loopne 0x40ad20
  40acbf:	les    edx,FWORD PTR [eax+0x24]
  40acc2:	sbb    eax,0x8bf36753
  40acc7:	jle    0x40ad16
  40acc9:	or     al,0x6d
  40accb:	mov    fs,WORD PTR [ebx+0x23004f20]
  40acd1:	gs pop edx
  40acd3:	gs cli 
  40acd5:	iret   
  40acd6:	jmp    0x5c115f82
  40acdb:	mov    eax,ds:0x633dcd9d
  40ace0:	(bad)  
  40ace1:	jne    0xeb0f23f2
  40ace7:	or     esi,DWORD PTR ds:0x62084f1e
  40aced:	repnz popf 
  40acef:	stos   BYTE PTR es:[edi],al
  40acf0:	scas   al,BYTE PTR es:[edi]
  40acf1:	adc    esi,DWORD PTR [edx+0x19]
  40acf4:	push   edx
  40acf5:	cmc    
  40acf6:	imul   BYTE PTR [ebp-0x3370f1c9]
  40acfc:	and    bl,BYTE PTR [ecx-0x1eadf9b1]
  40ad02:	loop   0x40aceb
  40ad04:	lahf   
  40ad05:	jno    0x40ad59
  40ad07:	daa    
  40ad08:	repz std 
  40ad0a:	sub    ch,BYTE PTR [edi+0x12]
  40ad0d:	jp     0x40ad7a
  40ad0f:	push   ebx
  40ad10:	inc    edx
  40ad11:	arpl   bx,cx
  40ad13:	nop
  40ad14:	push   eax
  40ad15:	call   0xc3600e0e
  40ad1a:	int    0x1e
  40ad1c:	mov    edi,0xcbe5f4d2
  40ad21:	jmp    0x40ad98
  40ad23:	sbb    al,0x9f
  40ad25:	xor    DWORD PTR [eax-0x57fd36],edx
  40ad2b:	mov    ds:0xbb84a99f,eax
  40ad30:	sbb    ebx,edi
  40ad32:	(bad)  
  40ad33:	fsub   QWORD PTR [eax]
  40ad35:	fwait
  40ad36:	mov    dh,0xea
  40ad38:	loopne 0x40acf9
  40ad3a:	out    0x78,eax
  40ad3c:	rep outs dx,BYTE PTR ds:[esi]
  40ad3e:	(bad)  
  40ad3f:	loope  0x40ad8e
  40ad41:	cmp    ebx,ecx
  40ad43:	inc    edx
  40ad44:	push   esi
  40ad45:	or     esi,DWORD PTR [edx]
  40ad47:	pop    ecx
  40ad48:	xchg   ebx,eax
  40ad49:	add    al,0x4b
  40ad4b:	inc    edx
  40ad4c:	scas   al,BYTE PTR es:[edi]
  40ad4d:	xlat   BYTE PTR ds:[ebx]
  40ad4e:	push   0x469b8a06
  40ad53:	(bad)  
  40ad54:	pop    ds
  40ad55:	mov    ecx,0xb5870c05
  40ad5a:	dec    ecx
  40ad5b:	repnz fst QWORD PTR [edi]
  40ad5e:	fadd   QWORD PTR [ebx]
  40ad60:	mov    gs,WORD PTR [ebx-0x3843888c]
  40ad66:	sbb    esi,DWORD PTR [esi]
  40ad68:	cmp    dl,0x77
  40ad6b:	dec    esp
  40ad6c:	mov    edi,0xca13ab5a
  40ad71:	std    
  40ad72:	push   esp
  40ad73:	jb     0x40ad56
  40ad75:	aaa    
  40ad76:	scas   eax,DWORD PTR es:[edi]
  40ad77:	jp     0x40ad35
  40ad79:	adc    eax,DWORD PTR [edx]
  40ad7b:	xlat   BYTE PTR ds:[ebx]
  40ad7c:	data16 jle 0x40adb3
  40ad7f:	pop    ebp
  40ad80:	aam    0x7c
  40ad82:	xor    al,al
  40ad84:	(bad)  
  40ad85:	and    dh,BYTE PTR [eax-0x22a45409]
  40ad8b:	stos   BYTE PTR es:[edi],al
  40ad8c:	(bad)  
  40ad8d:	push   edx
  40ad8e:	or     ch,BYTE PTR [ebp-0x58398404]
  40ad94:	(bad)  
  40ad95:	jno    0x40ade8
  40ad97:	add    al,0x86
  40ad99:	or     cl,BYTE PTR [ebp+0x44e9f4f9]
  40ad9f:	dec    esi
  40ada0:	xchg   ecx,eax
  40ada1:	dec    esp
  40ada2:	test   eax,0x5e9aa0d3
  40ada7:	mov    dh,BYTE PTR [eax]
  40ada9:	lods   al,BYTE PTR ds:[esi]
  40adaa:	in     al,dx
  40adab:	jnp    0x40ae0f
  40adad:	outs   dx,DWORD PTR ds:[esi]
  40adae:	stc    
  40adaf:	pop    es
  40adb0:	out    0xc3,al
  40adb2:	(bad)  
  40adb3:	mov    ?,esi
  40adb5:	ds out 0xfa,al
  40adb8:	add    BYTE PTR [edx+eiz*1],ah
  40adbb:	and    BYTE PTR [ebp+0x1f],ch
  40adbe:	mov    cl,0x49
  40adc0:	ror    BYTE PTR [eax+ebp*8+0x429e72fd],1
  40adc7:	mov    ds:0x6deff748,al
  40adcc:	pushf  
  40adcd:	aas    
  40adce:	or     ecx,DWORD PTR [edi-0x3d]
  40add1:	mov    WORD PTR [ebx+0xa],?
  40add4:	inc    esi
  40add5:	ror    BYTE PTR [esi+0x7f],cl
  40add8:	mov    edi,DWORD PTR [edx-0x361245b1]
  40adde:	enter  0x274d,0x36
  40ade2:	or     BYTE PTR [edi+ebp*2+0x1f],ch
  40ade6:	and    ebx,ebx
  40ade8:	mov    ebx,0x687e998b
  40aded:	jmp    0x48e652ee
  40adf2:	or     bh,ah
  40adf4:	xor    ecx,esi
  40adf6:	rol    DWORD PTR [edi+edi*2+0xbe9d909],cl
  40adfd:	arpl   bp,dx
  40adff:	pop    es
  40ae00:	or     al,0x0
  40ae02:	shl    BYTE PTR [eax+0xd192cc7],cl
  40ae08:	or     al,0x2b
  40ae0a:	push   edi
  40ae0b:	jae    0x40ae51
  40ae0d:	pop    edi
  40ae0e:	es (bad) 
  40ae10:	call   0xd1936170
  40ae15:	and    DWORD PTR [ecx],eax
  40ae17:	sbb    esi,DWORD PTR [ebx+0x14]
  40ae1a:	cmp    ebp,edx
  40ae1c:	xor    DWORD PTR [ecx+0x53],esp
  40ae1f:	jecxz  0x40ae38
  40ae21:	test   bh,0x49
  40ae24:	imul   edx,DWORD PTR [edx],0x77
  40ae27:	dec    edi
  40ae28:	jmp    0x40ae1b
  40ae2a:	adc    al,0x2c
  40ae2c:	xchg   ecx,eax
  40ae2d:	add    eax,0xa6520fe0
  40ae32:	(bad)  
  40ae33:	es jecxz 0x40ae0f
  40ae36:	fnsave [eax]
  40ae38:	(bad)  
  40ae39:	iret   
  40ae3a:	rcl    DWORD PTR [si],1
  40ae3d:	out    dx,eax
  40ae3e:	mov    ecx,0xe2cae1e6
  40ae43:	in     eax,dx
  40ae44:	or     esi,DWORD PTR [ecx]
  40ae46:	test   al,0xfd
  40ae48:	inc    edi
  40ae49:	icebp  
  40ae4a:	fsubr  QWORD PTR [edx]
  40ae4c:	aad    0xad
  40ae4e:	(bad)  [edx+0x4cd1e901]
  40ae54:	outs   dx,DWORD PTR ds:[esi]
  40ae55:	std    
  40ae56:	inc    ebp
  40ae57:	add    dh,ah
  40ae59:	sub    bl,BYTE PTR [ebx+edx*2]
  40ae5c:	aaa    
  40ae5d:	pop    ebp
  40ae5e:	cmp    DWORD PTR [esi],0x51
  40ae61:	ins    BYTE PTR es:[edi],dx
  40ae62:	ret    
  40ae63:	jbe    0x40ae38
  40ae65:	imul   eax,eax,0x8a7aaa80
  40ae6b:	test   BYTE PTR [eax],0x41
  40ae6e:	imul   ecx,DWORD PTR [ecx],0xffffff80
  40ae71:	fwait
  40ae72:	ret    0x1669
  40ae75:	aam    0xa4
  40ae77:	mov    dh,0x8f
  40ae79:	cmp    DWORD PTR [ecx+0x38],eax
  40ae7c:	push   eax
  40ae7d:	in     eax,dx
  40ae7e:	stc    
  40ae7f:	into   
  40ae80:	ins    DWORD PTR es:[edi],dx
  40ae81:	fs std 
  40ae83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae84:	js     0x40aee1
  40ae86:	jbe    0x40ae71
  40ae88:	push   esi
  40ae89:	mov    eax,0x18c2f2bf
  40ae8e:	aad    0x58
  40ae90:	bound  ebx,QWORD PTR [edi-0x29]
  40ae93:	pop    ecx
  40ae94:	mov    ds:0xd1984da0,al
  40ae99:	popa   
  40ae9a:	mov    dl,0xd6
  40ae9c:	sbb    bh,0x7
  40ae9f:	inc    ecx
  40aea0:	test   eax,0xa9620904
  40aea5:	sbb    DWORD PTR [ebp+0x1c],esp
  40aea8:	std    
  40aea9:	call   0xf263:0x95ca1801
  40aeb0:	into   
  40aeb1:	or     edx,DWORD PTR [esi+0x39]
  40aeb4:	and    al,0xa1
  40aeb6:	call   edi
  40aeb8:	dec    edx
  40aeb9:	adc    BYTE PTR [esi],0xc9
  40aebc:	mov    ds:0x61548f54,al
  40aec1:	jo     0x40af1f
  40aec3:	fcomp  st(6)
  40aec5:	inc    eax
  40aec6:	push   esp
  40aec7:	test   BYTE PTR [ebp-0x5f],dh
  40aeca:	inc    esp
  40aecb:	fnstcw WORD PTR [ebp-0x55]
  40aece:	sbb    al,0x6
  40aed0:	push   0x3b
  40aed2:	loopne 0x40ae81
  40aed4:	enter  0xbc29,0xa4
  40aed8:	push   edi
  40aed9:	mov    ds:0x22842f3b,eax
  40aede:	mov    eax,ds:0x8905d02b
  40aee3:	push   cs
  40aee4:	scas   eax,DWORD PTR es:[edi]
  40aee5:	pop    es
  40aee6:	cmp    eax,0x82f8f812
  40aeeb:	aad    0x9f
  40aeed:	or     al,0xb8
  40aeef:	push   edx
  40aef0:	pop    ds
  40aef1:	mov    cl,0x5e
  40aef3:	jno    0x40af41
  40aef5:	test   BYTE PTR [esi-0x7b7d58d7],dl
  40aefb:	and    al,0x45
  40aefd:	iret   
  40aefe:	fsubr  DWORD PTR [esi-0x55]
  40af01:	loopne 0x40af68
  40af03:	call   0x4e37:0x478dca9d
  40af0a:	inc    esi
  40af0b:	or     DWORD PTR [ebp-0x7a],0xffffffb6
  40af0f:	jne    0x40af08
  40af11:	bound  ecx,QWORD PTR [esi]
  40af13:	add    DWORD PTR [esi-0x10e08d6c],0xb571320d
  40af1d:	mov    cl,BYTE PTR [esi-0x942b724]
  40af23:	add    BYTE PTR [edx+edx*2+0x2],dl
  40af27:	sub    edx,ebp
  40af29:	xor    DWORD PTR [ebx+0x39d32e73],ebx
  40af2f:	mov    esp,0x26b91908
  40af34:	fsubr  QWORD PTR [ecx-0x3f]
  40af37:	in     al,0x5
  40af39:	hlt    
  40af3a:	(bad)  
  40af3b:	pop    es
  40af3c:	mov    ds:0x35009f6,al
  40af41:	ret    0x8c1b
  40af44:	ds (bad) 
  40af46:	xlat   BYTE PTR ds:[ebx]
  40af47:	push   cs
  40af48:	stos   DWORD PTR es:[edi],eax
  40af49:	cmp    ebx,DWORD PTR [esp+eiz*2]
  40af4c:	xchg   edx,eax
  40af4d:	lea    ebx,[esi+0x798ffcc0]
  40af53:	xchg   ebp,eax
  40af54:	or     al,0xd4
  40af56:	cmp    DWORD PTR [ebp-0x272acc38],esp
  40af5c:	fwait
  40af5d:	inc    ebp
  40af5e:	hlt    
  40af5f:	test   BYTE PTR [ebx+edx*2+0x4e414587],ch
  40af66:	das    
  40af67:	push   ecx
  40af68:	ins    DWORD PTR es:[edi],dx
  40af69:	and    cl,BYTE PTR [eax-0x110ad9a0]
  40af6f:	mov    WORD PTR [eax],ds
  40af71:	jb     0x40af9c
  40af73:	nop
  40af74:	cmp    ebp,edx
  40af76:	or     esi,esp
  40af78:	cmp    eax,0xe6dc41c5
  40af7d:	dec    esi
  40af7e:	popf   
  40af7f:	adc    eax,0xa1f769b8
  40af84:	std    
  40af85:	sub    DWORD PTR [edi+edx*1+0x2a],ebp
  40af89:	jo     0x40af54
  40af8b:	and    eax,0x32ba9418
  40af90:	xchg   ebx,eax
  40af91:	push   edx
  40af92:	jge    0x40af3f
  40af94:	test   BYTE PTR [eax-0x3d],bl
  40af97:	lahf   
  40af98:	test   eax,0xeb58c785
  40af9d:	dec    ebx
  40af9e:	add    eax,ecx
  40afa0:	popa   
  40afa1:	pusha  
  40afa2:	add    bh,BYTE PTR [edx]
  40afa4:	std    
  40afa5:	mov    eax,ds:0xeb907f9f
  40afaa:	call   0x99bf5222
  40afaf:	xchg   ebx,eax
  40afb0:	mov    al,ds:0xe02c2a69
  40afb5:	out    dx,eax
  40afb6:	mov    ds,WORD PTR [esi-0x6324d0b2]
  40afbc:	retf   
  40afbd:	fiadd  DWORD PTR [esi-0x37f6b424]
  40afc3:	mov    bl,0x69
  40afc5:	jo     0x40af99
  40afc7:	push   edx
  40afc8:	mov    ch,0x1d
  40afca:	add    eax,0x59e8190
  40afcf:	xchg   ecx,eax
  40afd0:	sub    BYTE PTR [ebp+0x64730d38],bl
  40afd6:	xchg   ebx,eax
  40afd7:	test   BYTE PTR [ecx],bl
  40afd9:	mov    eax,0xde4b2244
  40afde:	or     eax,0x94fe6a00
  40afe3:	hlt    
  40afe4:	jp     0x40afac
  40afe6:	aas    
  40afe7:	repz xchg edi,eax
  40afe9:	cld    
  40afea:	or     al,0xb1
  40afec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afed:	dec    eax
  40afee:	add    eax,DWORD PTR [edi-0x40]
  40aff1:	mov    bl,0x21
  40aff3:	adc    al,0xf4
  40aff5:	add    BYTE PTR ds:0xac9591ca,al
  40affb:	addr16 jmp 0x2dbc:0x9f923288
  40b003:	(bad)  
  40b004:	dec    esp
  40b005:	mov    ecx,0x7c86620e
  40b00a:	push   ecx
  40b00b:	adc    ecx,eax
  40b00d:	inc    edi
  40b00e:	or     BYTE PTR [ecx+0x41cf88ae],0x3
  40b015:	inc    edx
  40b016:	inc    edi
  40b017:	ret    0xce27
  40b01a:	adc    ecx,DWORD PTR [edx+0x42554696]
  40b020:	xlat   BYTE PTR ds:[ebx]
  40b021:	jl     0x40b00d
  40b023:	cmp    ch,BYTE PTR [eax-0xb]
  40b026:	test   eax,0x56a8b8b
  40b02b:	adc    ebx,DWORD PTR [ebx-0x514f4732]
  40b031:	jno    0x40b005
  40b033:	sub    BYTE PTR [eax],0x6b
  40b036:	hlt    
  40b037:	dec    edx
  40b038:	add    ah,BYTE PTR [eax]
  40b03a:	cwde   
  40b03b:	mov    ch,0x54
  40b03d:	int3   
  40b03e:	call   0x77b:0x22317eb0
  40b045:	dec    ecx
  40b046:	pop    ecx
  40b047:	jne    0x40afd8
  40b049:	mov    ds:0x5efc59a3,eax
  40b04e:	test   DWORD PTR ds:0x2c389731,ecx
  40b054:	pop    esp
  40b055:	adc    BYTE PTR [edx],bl
  40b057:	or     edi,DWORD PTR [eax+0x6bde966e]
  40b05d:	push   0x487708f8
  40b062:	(bad)  
  40b063:	pop    ss
  40b064:	push   ss
  40b065:	pushf  
  40b066:	(bad)  
  40b067:	jl     0x40b026
  40b069:	in     al,0x86
  40b06b:	push   ss
  40b06c:	jmp    FWORD PTR [ebx+esi*4-0x36f165c3]
  40b073:	mov    dh,0x7a
  40b075:	test   DWORD PTR [ebx-0x6e98e516],0x67b457c1
  40b07f:	cmp    DWORD PTR [ecx+ecx*8-0x4a],ecx
  40b083:	xchg   esi,eax
  40b084:	mov    dh,0x7c
  40b086:	pop    ecx
  40b087:	xor    al,0x7d
  40b089:	sahf   
  40b08a:	push   0x3c7da84b
  40b08f:	shr    DWORD PTR [ebx+0x4a],cl
  40b092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b093:	cmp    al,0xc4
  40b095:	or     DWORD PTR [ebx-0x40],0x74
  40b099:	jns    0x40b09c
  40b09b:	stc    
  40b09c:	mov    edi,0x9a11554b
  40b0a1:	loope  0x40b0f2
  40b0a3:	mov    ds:0xc66b208d,al
  40b0a8:	jbe    0x40b034
  40b0aa:	ss sub al,0x2f
  40b0ad:	xchg   edx,eax
  40b0ae:	gs pop esp
  40b0b0:	sbb    DWORD PTR [edi],eax
  40b0b2:	call   0xff20:0x1ccec521
  40b0b9:	jmp    0x3d3e:0x6b51eed3
  40b0c0:	scas   al,BYTE PTR es:[edi]
  40b0c1:	push   edx
  40b0c2:	rcl    DWORD PTR [ebx],0x1e
  40b0c5:	jl     0x40b0f2
  40b0c7:	add    DWORD PTR [eax],0xffffff8e
  40b0ca:	dec    esi
  40b0cb:	inc    eax
  40b0cc:	push   eax
  40b0cd:	jae    0x40b07b
  40b0cf:	jnp    0x40b13e
  40b0d1:	mov    cl,0xf5
  40b0d3:	stos   BYTE PTR es:[edi],al
  40b0d4:	push   ss
  40b0d5:	sar    DWORD PTR gs:[esp+edi*2],0x7f
  40b0da:	push   ds
  40b0db:	std    
  40b0dc:	popa   
  40b0dd:	(bad)
  40b0e0:	daa    
  40b0e1:	ins    BYTE PTR es:[edi],dx
  40b0e2:	xor    BYTE PTR [edx],dl
  40b0e4:	lahf   
  40b0e5:	cmp    al,0xf7
  40b0e7:	jp     0x40b11a
  40b0e9:	hlt    
  40b0ea:	test   edx,0x8589abe0
  40b0f0:	sbb    eax,0x2d35b2b2
  40b0f5:	add    ah,BYTE PTR [edx-0x45055336]
  40b0fb:	bound  ecx,QWORD PTR [ebx]
  40b0fd:	enter  0x5f45,0xeb
  40b101:	(bad)  
  40b102:	cmp    edi,DWORD PTR [esi+0x32f22823]
  40b108:	ror    BYTE PTR [ecx-0x33],cl
  40b10b:	add    dh,BYTE PTR ds:0xa764ba28
  40b111:	push   ss
  40b112:	test   BYTE PTR [eax+0x32f7ebb0],dl
  40b118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b119:	cmp    al,0x42
  40b11b:	shr    BYTE PTR [edx-0x65],0xd0
  40b11f:	test   al,0x94
  40b121:	or     dh,ch
  40b123:	push   ds
  40b124:	mov    WORD PTR [eax-0x5a],fs
  40b127:	pop    ss
  40b128:	push   esi
  40b129:	in     al,0xf2
  40b12b:	and    ebx,DWORD PTR [edx-0x4d67dab6]
  40b131:	mov    bh,0x79
  40b133:	mov    DWORD PTR [edx+0x2d467d16],eax
  40b139:	jbe    0x40b12a
  40b13b:	outs   dx,BYTE PTR ds:[esi]
  40b13c:	rol    BYTE PTR [eax],cl
  40b13e:	push   ss
  40b13f:	aas    
  40b140:	lods   eax,DWORD PTR ds:[esi]
  40b141:	(bad)  
  40b142:	jmp    0x40b13d
  40b144:	add    BYTE PTR [ebx+ebx*4],cl
  40b147:	add    DWORD PTR [edi],esi
  40b149:	mov    edx,cs
  40b14b:	dec    edi
  40b14c:	mov    ds:0x9cd1183,eax
  40b151:	sbb    BYTE PTR [ecx+0xdd0650e],dh
  40b157:	mov    edi,0xc28b1dd4
  40b15c:	mov    ah,0x4d
  40b15e:	mov    cs:0xa36ecee1,eax
  40b164:	scas   eax,DWORD PTR es:[edi]
  40b165:	ds lock dec ebp
  40b168:	push   ecx
  40b169:	das    
  40b16a:	sub    BYTE PTR [esi-0x50d407ad],al
  40b170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b171:	lds    esi,FWORD PTR [edx-0x33840892]
  40b177:	ins    DWORD PTR es:[edi],dx
  40b178:	mov    ah,0xc3
  40b17a:	lds    ebp,FWORD PTR [ecx]
  40b17c:	cmp    dl,BYTE PTR [esi]
  40b17e:	sbb    eax,0x4e5d8fe9
  40b183:	pop    eax
  40b184:	imul   eax,DWORD PTR [ebp+0x34],0x1aa6d2e8
  40b18b:	mov    bh,BYTE PTR [edx-0x6fb8edb]
  40b191:	xchg   BYTE PTR [esi+0x47],ch
  40b194:	push   ss
  40b195:	xor    al,0x34
  40b197:	cmp    BYTE PTR [ecx+0x5408585c],ch
  40b19d:	xchg   esp,eax
  40b19e:	inc    esp
  40b19f:	mov    DWORD PTR [ebx+0x60],esp
  40b1a2:	push   0xffffffdf
  40b1a4:	xchg   DWORD PTR [ecx+0x4cc1753e],ebp
  40b1aa:	les    esp,FWORD PTR [eax-0x3b726c53]
  40b1b0:	shr    DWORD PTR [ebx],cl
  40b1b2:	dec    edx
  40b1b3:	xor    DWORD PTR [edi+0x7a],0xe7bbbd30
  40b1ba:	cmp    DWORD PTR [edi+0x22],edi
  40b1bd:	mov    ebx,DWORD PTR [edi]
  40b1bf:	icebp  
  40b1c0:	add    ebp,DWORD PTR [edx-0x5f]
  40b1c3:	push   ss
  40b1c4:	sub    al,0x10
  40b1c6:	sahf   
  40b1c7:	stos   DWORD PTR es:[edi],eax
  40b1c8:	jne    0x40b14e
  40b1ca:	(bad)
  40b1cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1ce:	cmc    
  40b1cf:	popf   
  40b1d0:	(bad)  
  40b1d3:	mov    dh,0x40
  40b1d5:	sub    esi,DWORD PTR [esi-0x13]
  40b1d8:	adc    esp,DWORD PTR [esp+esi*1+0x1763bf4]
  40b1df:	jb     0x40b182
  40b1e1:	(bad)  
  40b1e2:	ret    
  40b1e3:	xchg   edx,eax
  40b1e4:	push   0xec35f14
  40b1e9:	push   cs
  40b1ea:	mov    al,ds:0x7ffb5157
  40b1ef:	push   0x31
  40b1f1:	inc    edi
  40b1f2:	mov    eax,ds:0xdc16d744
  40b1f7:	push   0x6b39b25e
  40b1fc:	inc    esp
  40b1fd:	jge    0x40b272
  40b1ff:	pop    eax
  40b200:	jnp    0x40b213
  40b202:	jb     0x40b239
  40b204:	(bad)  
  40b205:	lock xor eax,edx
  40b208:	stos   DWORD PTR es:[edi],eax
  40b209:	ss pop ebp
  40b20b:	out    dx,al
  40b20c:	fucomip st,st(6)
  40b20e:	mov    WORD PTR [edi-0x3d8e4ba3],es
  40b214:	sub    BYTE PTR [edx-0x23],dl
  40b217:	fisub  DWORD PTR [ebp+edi*2-0x12e76a22]
  40b21e:	push   eax
  40b21f:	inc    esp
  40b220:	out    0x49,al
  40b222:	sbb    DWORD PTR [edi+esi*2],edi
  40b225:	xchg   esp,eax
  40b226:	mul    BYTE PTR [ebx]
  40b228:	inc    ebp
  40b229:	mov    BYTE PTR [ebx-0x3735c8e9],bh
  40b22f:	xor    eax,0xbdd1065
  40b234:	pop    esi
  40b235:	es mov ebp,0x9c70a09
  40b23b:	add    dl,BYTE PTR [ecx-0x5]
  40b23e:	rcl    DWORD PTR [edi*1+0x7fb9bee6],cl
  40b245:	jge    0x40b267
  40b247:	jge    0x40b2bf
  40b249:	(bad)  
  40b24a:	in     eax,0x1
  40b24c:	pop    esi
  40b24d:	rcl    DWORD PTR [esp+edx*1],0xf
  40b251:	pop    ecx
  40b252:	retf   
  40b253:	ds push edi
  40b255:	loopne 0x40b21e
  40b257:	inc    edx
  40b258:	test   DWORD PTR [esi],edi
  40b25a:	outs   dx,DWORD PTR ds:[esi]
  40b25b:	pop    ds
  40b25c:	pop    esp
  40b25d:	sub    eax,0x2796ca56
  40b262:	or     BYTE PTR [ebp+0x108d60b],0xe5
  40b269:	mov    al,ds:0x8308266c
  40b26e:	xor    ebx,0xffffff81
  40b271:	jecxz  0x40b2de
  40b273:	test   BYTE PTR [ebx+0x8],al
  40b276:	and    eax,0xef995dff
  40b27b:	push   0xffffffd8
  40b27d:	and    ah,BYTE PTR [ebp+edx*2+0x3da3af91]
  40b284:	lods   al,BYTE PTR ds:[esi]
  40b285:	js     0x40b2a6
  40b287:	xchg   ecx,eax
  40b288:	or     DWORD PTR [eax+0x15],ebx
  40b28b:	jno    0x40b2be
  40b28d:	adc    dh,BYTE PTR [ebp-0x59650190]
  40b293:	fidivr DWORD PTR [edi+0x30663fb0]
  40b299:	push   cs
  40b29a:	pop    ds
  40b29b:	jle    0x40b319
  40b29d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b29e:	mov    bh,0xbd
  40b2a0:	clc    
  40b2a1:	pop    ecx
  40b2a2:	cs loop 0x40b305
  40b2a5:	mov    ah,0xb4
  40b2a7:	ins    BYTE PTR es:[edi],dx
  40b2a8:	mov    ds:0xacb1defa,eax
  40b2ad:	or     ebp,DWORD PTR [ecx-0x37]
  40b2b0:	push   eax
  40b2b1:	push   ds
  40b2b2:	js     0x40b296
  40b2b4:	jp     0x40b2f1
  40b2b6:	push   ds
  40b2b7:	rcl    DWORD PTR [edx+esi*1],1
  40b2ba:	mov    bl,0x4f
  40b2bc:	or     ebx,ecx
  40b2be:	add    ch,0x95
  40b2c1:	cmp    al,BYTE PTR [eax+0x5ae9ea1c]
  40b2c7:	and    eax,0xeea701ec
  40b2cc:	pop    esi
  40b2cd:	or     al,0x26
  40b2cf:	fisubr WORD PTR [ebx+0x77]
  40b2d2:	ret    
  40b2d3:	and    BYTE PTR [eax],al
  40b2d5:	mov    bl,ah
  40b2d7:	out    dx,eax
  40b2d8:	sub    edi,DWORD PTR [ebx]
  40b2da:	cli    
  40b2db:	sbb    bl,BYTE PTR es:[ebp+0x44622210]
  40b2e2:	jae    0x40b286
  40b2e4:	adc    ebx,DWORD PTR [eax-0x23]
  40b2e7:	rol    ebp,1
  40b2e9:	loopne 0x40b367
  40b2eb:	xchg   BYTE PTR [edx-0x7],cl
  40b2ee:	mov    ch,bl
  40b2f0:	mov    WORD PTR ss:[edi],fs
  40b2f3:	test   al,0x13
  40b2f5:	in     eax,0xfa
  40b2f7:	jo     0x40b2fa
  40b2f9:	sti    
  40b2fa:	cmp    eax,esi
  40b2fc:	adc    al,0xe2
  40b2fe:	mov    dl,BYTE PTR [edx+0x27db3ec1]
  40b304:	cld    
  40b305:	mov    ds:0x13f7730b,al
  40b30a:	clc    
  40b30b:	adc    ebp,DWORD PTR [ecx]
  40b30d:	jge    0x40b291
  40b30f:	mov    esi,0xecc45654
  40b314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b315:	pop    ds
  40b316:	(bad)  
  40b317:	xor    esi,esi
  40b319:	pusha  
  40b31a:	adc    eax,0xdfe855d3
  40b31f:	jbe    0x40b2d9
  40b321:	mov    esp,0x5b7743df
  40b326:	xchg   dh,dh
  40b328:	add    BYTE PTR [esp+edx*2-0x6ef7675f],ch
  40b32f:	cmp    ch,ch
  40b331:	dec    edx
  40b332:	stc    
  40b333:	adc    al,0x24
  40b335:	inc    edx
  40b336:	cmp    DWORD PTR [eax+0x3761dbd1],ebp
  40b33c:	jmp    0x40b377
  40b33e:	add    edx,DWORD PTR [edx-0x71]
  40b341:	jp     0x40b32d
  40b343:	cmp    al,0xb8
  40b345:	mov    al,0xcb
  40b347:	pop    ecx
  40b348:	aam    0x1f
  40b34a:	add    bl,bh
  40b34c:	(bad)  
  40b34e:	neg    DWORD PTR [esi+0x30baa024]
  40b354:	xchg   ebx,eax
  40b355:	fisub  WORD PTR [esi]
  40b357:	jnp    0x40b3c5
  40b359:	ds jecxz 0x40b39b
  40b35c:	pop    edx
  40b35d:	xlat   BYTE PTR ds:[ebx]
  40b35e:	fs jmp 0x13cd:0xad177977
  40b366:	xor    eax,0xcd760724
  40b36b:	and    eax,0x6d18b0bb
  40b370:	xchg   esp,eax
  40b371:	pop    ebx
  40b372:	loop   0x40b309
  40b374:	mov    ah,BYTE PTR [edx]
  40b376:	or     dh,bh
  40b378:	jnp    0x40b3bc
  40b37a:	inc    esp
  40b37b:	ret    0x3e89
  40b37e:	cdq    
  40b37f:	dec    edx
  40b380:	xchg   edi,eax
  40b381:	dec    esp
  40b382:	pop    edx
  40b383:	test   al,0x72
  40b385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b386:	pop    edx
  40b387:	cmp    BYTE PTR [ecx-0x14fde4a2],dl
  40b38d:	addr16 sbb al,0x9f
  40b390:	call   0x3798:0x337b129a
  40b397:	jnp    0x40b3bf
  40b399:	aas    
  40b39a:	rcr    bl,1
  40b39c:	aam    0xa8
  40b39e:	jg     0x40b41b
  40b3a0:	aad    0x48
  40b3a2:	arpl   WORD PTR [ebp+0x57],cx
  40b3a5:	adc    DWORD PTR [esi],ebx
  40b3a7:	xchg   BYTE PTR [eax],al
  40b3a9:	sbb    bl,BYTE PTR [ecx+0x57dbdfc0]
  40b3af:	jb     0x40b3e8
  40b3b1:	mov    dl,0xe7
  40b3b3:	ret    0xd355
  40b3b6:	call   0x8416:0x56e7353e
  40b3bd:	mov    ebp,0x2e8256e1
  40b3c2:	inc    ecx
  40b3c3:	js     0x40b3a9
  40b3c5:	call   0xf714:0x7a8b734b
  40b3cc:	sub    eax,DWORD PTR [edi]
  40b3ce:	mov    al,ds:0x4d7cfacc
  40b3d3:	cwde   
  40b3d4:	test   eax,0x8fbbd4ce
  40b3d9:	hlt    
  40b3da:	jg     0x40b420
  40b3dc:	jmp    0xc157:0xf439fa54
  40b3e3:	fld    QWORD PTR [esi*8-0x56082525]
  40b3ea:	jp     0x40b440
  40b3ec:	shl    DWORD PTR [ecx+ebx*4-0x4f],1
  40b3f0:	xor    dl,BYTE PTR [ebx]
  40b3f2:	aad    0xbf
  40b3f4:	rol    esi,cl
  40b3f6:	cmp    esp,DWORD PTR [eax+0x1d09523]
  40b3fc:	mov    ah,0x2c
  40b3fe:	es (bad) 
  40b400:	rol    ch,1
  40b402:	fcomp  DWORD PTR [edi-0x45691e32]
  40b408:	and    BYTE PTR [ebp+0x66],bh
  40b40b:	add    cl,BYTE PTR [ecx]
  40b40d:	pop    es
  40b40e:	adc    edi,DWORD PTR [edi]
  40b410:	call   0xd8d16304
  40b415:	xor    al,bl
  40b417:	mov    esi,0x4da6536
  40b41c:	ins    WORD PTR es:[edi],dx
  40b41e:	test   al,0x44
  40b420:	fcomp  QWORD PTR ds:0xad9148f5
  40b426:	xchg   ebx,eax
  40b427:	mov    fs,WORD PTR [esi]
  40b429:	xor    dh,bl
  40b42b:	pop    eax
  40b42c:	stos   BYTE PTR es:[edi],al
  40b42d:	pop    esi
  40b42e:	and    ah,cl
  40b430:	adc    DWORD PTR [ecx-0x725e1fbf],ebx
  40b436:	inc    esp
  40b437:	adc    DWORD PTR [eax+0x9d6122b],ebp
  40b43d:	retf   
  40b43e:	outs   dx,DWORD PTR ds:[esi]
  40b43f:	jno    0x40b426
  40b441:	sti    
  40b442:	mov    BYTE PTR [eax-0x3b],al
  40b445:	lds    eax,FWORD PTR [esi-0x3a]
  40b448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b449:	shl    esi,cl
  40b44b:	imul   ecx,DWORD PTR [esi+eiz*1],0xc74e3ecc
  40b452:	mov    cl,0x7
  40b454:	dec    esi
  40b455:	mov    gs,ecx
  40b457:	dec    ebx
  40b458:	rcr    BYTE PTR [edx+ecx*2-0x3f],1
  40b45c:	into   
  40b45d:	inc    esp
  40b45e:	xchg   ebx,eax
  40b45f:	pop    eax
  40b460:	pop    edx
  40b461:	fs jecxz 0x40b434
  40b464:	adc    ch,BYTE PTR [esi+edi*2+0x7d1c270b]
  40b46b:	loop   0x40b437
  40b46d:	fnstsw WORD PTR [edi-0x5f9eb2f]
  40b473:	xor    esp,DWORD PTR [ecx-0x407191ce]
  40b479:	rol    edx,0x87
  40b47c:	loopne 0x40b41f
  40b47e:	add    DWORD PTR ds:0x4c57d0b4,esp
  40b484:	xor    al,0xa6
  40b486:	xor    BYTE PTR [edx+0xcc69c1a],bl
  40b48c:	inc    edx
  40b48d:	xlat   BYTE PTR ds:[ebx]
  40b48e:	js     0x40b422
  40b490:	test   BYTE PTR [ebp+0x7a],cl
  40b493:	inc    edi
  40b494:	xchg   ebp,eax
  40b495:	inc    esi
  40b496:	aad    0xde
  40b498:	and    eax,0x7bf3b4c8
  40b49d:	ror    DWORD PTR [edx],0xe8
  40b4a0:	lahf   
  40b4a1:	icebp  
  40b4a2:	retf   
  40b4a3:	pop    ds
  40b4a4:	mov    bl,dh
  40b4a6:	add    al,0x1f
  40b4a8:	mov    al,0x88
  40b4aa:	xchg   cl,bh
  40b4ac:	push   esp
  40b4ad:	or     edx,DWORD PTR [ebx-0x50abdf5a]
  40b4b3:	fldenv [edi]
  40b4b5:	jae    0x40b49f
  40b4b7:	jg     0x40b4ac
  40b4b9:	stos   DWORD PTR es:[edi],eax
  40b4ba:	enter  0xb65f,0xcf
  40b4be:	fcmovb st,st(6)
  40b4c0:	xchg   ecx,eax
  40b4c1:	retf   
  40b4c2:	adc    BYTE PTR [eax-0x2fe13c43],ch
  40b4c8:	push   cs
  40b4c9:	lods   al,BYTE PTR ds:[esi]
  40b4ca:	lods   eax,DWORD PTR ds:[esi]
  40b4cb:	cmp    bl,BYTE PTR [eax]
  40b4cd:	xor    ebx,ebp
  40b4cf:	cmp    edi,ebx
  40b4d1:	mov    eax,0x30e51cf2
  40b4d6:	stos   BYTE PTR es:[edi],al
  40b4d7:	and    bh,BYTE PTR [eax+0x55]
  40b4da:	imul   ebx,DWORD PTR [eax],0x27
  40b4dd:	push   0x16
  40b4df:	xor    BYTE PTR [ecx],0x28
  40b4e2:	inc    edx
  40b4e3:	mov    bx,0xc872
  40b4e7:	inc    ebp
  40b4e8:	mov    dl,cl
  40b4ea:	jl     0x40b544
  40b4ec:	inc    ebp
  40b4ed:	out    0xf8,eax
  40b4ef:	test   eax,0x33508001
  40b4f4:	push   eax
  40b4f5:	sub    eax,0xbfb2dffd
  40b4fa:	mov    al,0x67
  40b4fc:	pop    edx
  40b4fd:	je     0x40b48c
  40b4ff:	aaa    
  40b500:	lahf   
  40b501:	mov    BYTE PTR [ebx-0x1d],ch
  40b504:	lods   al,BYTE PTR ds:[esi]
  40b505:	jmp    0x40b54f
  40b507:	repnz clc 
  40b509:	xor    ah,0x83
  40b50c:	push   DWORD PTR [edi+0x2dd40e99]
  40b512:	(bad)  
  40b514:	push   ss
  40b515:	pop    ds
  40b516:	in     al,0x45
  40b518:	inc    edx
  40b519:	push   0xa0844e82
  40b51e:	xchg   esi,eax
  40b51f:	(bad)  
  40b520:	fsub   DWORD PTR [ebx+0x2e]
  40b523:	inc    esp
  40b524:	das    
  40b525:	(bad)  
  40b526:	repz jl 0x40b56b
  40b529:	lods   eax,DWORD PTR ds:[esi]
  40b52a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b52b:	jne    0x40b518
  40b52d:	imul   edx,DWORD PTR [eax+0x73c78c0e],0x6858e1f
  40b537:	push   esp
  40b538:	jnp    0x40b532
  40b53a:	sahf   
  40b53b:	jbe    0x40b534
  40b53d:	icebp  
  40b53e:	out    dx,al
  40b53f:	xchg   BYTE PTR [edx],bh
  40b541:	mov    edx,ecx
  40b543:	inc    ecx
  40b544:	sbb    bh,cl
  40b546:	push   0x18
  40b548:	cmp    ebp,ebx
  40b54a:	cdq    
  40b54b:	push   ecx
  40b54c:	push   esi
  40b54d:	mov    ecx,DWORD PTR [edi]
  40b54f:	jmp    0x8f32f164
  40b554:	lock sub edx,DWORD PTR [eax-0x243fe1d0]
  40b55b:	xchg   esp,eax
  40b55c:	add    eax,0xbae56496
  40b561:	dec    ebx
  40b562:	(bad)  
  40b563:	out    dx,al
  40b564:	ret    0xce7
  40b567:	shl    ah,1
  40b569:	clc    
  40b56a:	xchg   esp,eax
  40b56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b56c:	fcomp  DWORD PTR [edx+eiz*2]
  40b56f:	adc    BYTE PTR [esi+0x20be382b],al
  40b575:	add    cl,dl
  40b577:	jno    0x40b594
  40b579:	mov    bl,0x2a
  40b57b:	pushf  
  40b57c:	jle    0x40b5c3
  40b57e:	push   ebp
  40b57f:	add    BYTE PTR fs:[edx],ah
  40b582:	and    eax,DWORD PTR [edi-0x5eee5693]
  40b588:	daa    
  40b589:	outs   dx,DWORD PTR ds:[esi]
  40b58a:	shl    eax,0x91
  40b58d:	retf   
  40b58e:	jne    0x40b5bd
  40b590:	stos   DWORD PTR es:[edi],eax
  40b591:	add    BYTE PTR [edi],0xf6
  40b594:	jg     0x40b5d3
  40b596:	sub    BYTE PTR [esi],al
  40b598:	js     0x40b603
  40b59a:	dec    edx
  40b59b:	mov    esp,eax
  40b59d:	mov    dl,0x43
  40b59f:	iret   
  40b5a0:	loope  0x40b5af
  40b5a2:	sahf   
  40b5a3:	enter  0xb3fd,0x83
  40b5a7:	scas   eax,DWORD PTR es:[edi]
  40b5a8:	gs (bad) 
  40b5aa:	lods   al,BYTE PTR ds:[esi]
  40b5ab:	(bad)  
  40b5ac:	fld    QWORD PTR [ecx+0xc]
  40b5af:	int3   
  40b5b0:	cmp    bh,BYTE PTR [eax+0x50]
  40b5b3:	xor    BYTE PTR [eax+0x24b2349e],dh
  40b5b9:	jle    0x40b5eb
  40b5bb:	ret    
  40b5bc:	fild   QWORD PTR [eax+0x61450ea0]
  40b5c2:	mov    ecx,0x3d01839c
  40b5c7:	sti    
  40b5c8:	push   ebp
  40b5c9:	xchg   ebx,eax
  40b5ca:	adc    eax,0xc3240745
  40b5cf:	in     eax,0xb4
  40b5d1:	(bad)
  40b5d4:	aad    0xaa
  40b5d6:	mov    ecx,0x535711ff
  40b5db:	pop    esi
  40b5dc:	shl    BYTE PTR [eax-0x1e9045ea],cl
  40b5e2:	(bad)  
  40b5e3:	mov    ebx,0xabd11793
  40b5e8:	ins    DWORD PTR es:[edi],dx
  40b5e9:	in     al,0x6
  40b5eb:	add    DWORD PTR [edi+0x3a6c8a39],edx
  40b5f1:	(bad)  
  40b5f2:	mov    dl,0x9a
  40b5f4:	int    0x97
  40b5f6:	ins    BYTE PTR es:[edi],dx
  40b5f7:	push   ebp
  40b5f8:	addr16 test eax,0x581ca65f
  40b5fe:	mov    DWORD PTR [edi],0x412740db
  40b604:	js     0x40b60a
  40b606:	sbb    DWORD PTR [ebx],esp
  40b608:	sbb    bh,bh
  40b60a:	fst    DWORD PTR [edi]
  40b60c:	xor    DWORD PTR ds:0x4a8c48c9,edi
  40b612:	cmp    eax,0x9df922b5
  40b617:	add    edx,ebx
  40b619:	mov    ebp,0x18567677
  40b61e:	fdivr  QWORD PTR [eax]
  40b620:	daa    
  40b621:	iret   
  40b622:	cmp    BYTE PTR [edi-0x4875f3a2],ch
  40b628:	mov    edi,0xac6faa14
  40b62d:	popa   
  40b62e:	xchg   ch,ch
  40b630:	fld    TBYTE PTR [eax+edi*1+0x5acea622]
  40b637:	and    eax,0x8bf0566f
  40b63c:	lock add ebp,DWORD PTR [edi-0x75]
  40b640:	ja     0x40b5ec
  40b642:	pop    ebx
  40b643:	ins    DWORD PTR es:[edi],dx
  40b644:	idiv   BYTE PTR [edi+0x1251f035]
  40b64a:	push   eax
  40b64b:	dec    ebp
  40b64c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b64d:	inc    edi
  40b64e:	sub    BYTE PTR [esp+esi*1],bh
  40b651:	sub    ebx,eax
  40b653:	sub    eax,0x5b47b342
  40b659:	xchg   esi,eax
  40b65a:	and    cl,BYTE PTR [edx]
  40b65c:	fcmovbe st,st(4)
  40b65e:	pop    eax
  40b65f:	xchg   edx,eax
  40b660:	jmp    0x40b678
  40b662:	push   esi
  40b663:	in     eax,dx
  40b664:	sub    eax,DWORD PTR [edx+0x67]
  40b667:	pop    es
  40b668:	add    al,0xf1
  40b66a:	dec    ebp
  40b66b:	fucomip st,st(4)
  40b66d:	fadd   DWORD PTR [edi]
  40b66f:	or     al,0x49
  40b671:	(bad)  
  40b672:	cmp    cl,BYTE PTR [esi]
  40b674:	push   ss
  40b675:	mov    al,gs:0x98443bb0
  40b67b:	mov    bh,0x5d
  40b67d:	cli    
  40b67e:	aas    
  40b67f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b680:	ins    BYTE PTR es:[edi],dx
  40b681:	fnstenv [edi+0x7085b6df]
  40b687:	sti    
  40b688:	mov    ebx,0x1514fc38
  40b68d:	cli    
  40b68e:	cs aaa 
  40b690:	and    dl,BYTE PTR [esi+0x386dc71f]
  40b696:	xchg   ebp,eax
  40b697:	in     al,dx
  40b698:	dec    esi
  40b699:	les    esp,FWORD PTR [eax-0x4]
  40b69c:	push   es
  40b69d:	mov    al,ds:0xc2397d0a
  40b6a2:	mov    DWORD PTR [ebx],ebx
  40b6a4:	cmp    BYTE PTR [edx-0x3a08c927],0xc1
  40b6ab:	fcomp  QWORD PTR [esi+ebp*1-0x3162536f]
  40b6b2:	jb     0x40b70d
  40b6b4:	add    al,0x1b
  40b6b6:	mul    DWORD PTR ds:0xce6583ae
  40b6bc:	in     al,0x69
  40b6be:	mov    eax,DWORD PTR [ecx+0x8]
  40b6c1:	psubw  mm3,QWORD PTR [esi]
  40b6c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6c5:	mov    BYTE PTR [esi+0x3],dh
  40b6c8:	cmp    DWORD PTR [edx-0x16],edi
  40b6cb:	add    eax,0xb0180d52
  40b6d0:	cmp    eax,0x859c075
  40b6d5:	popa   
  40b6d6:	ss js  0x40b6b6
  40b6d9:	sub    bl,BYTE PTR [ecx]
  40b6db:	stc    
  40b6dc:	fcomp  DWORD PTR [eax+0x8]
  40b6df:	inc    edi
  40b6e0:	and    BYTE PTR [edi+0x6fa8e6fa],cl
  40b6e6:	(bad)  
  40b6e7:	ins    BYTE PTR es:[edi],dx
  40b6e8:	out    0x82,al
  40b6ea:	cdq    
  40b6eb:	cli    
  40b6ec:	xchg   BYTE PTR [ebx+0x57],ch
  40b6ef:	mov    dh,0x13
  40b6f1:	fcom   DWORD PTR [edi-0x4b]
  40b6f4:	repz mov cl,0x12
  40b6f7:	cs std 
  40b6f9:	dec    esp
  40b6fa:	test   BYTE PTR [ecx],0x98
  40b6fd:	(bad)
  40b700:	not    DWORD PTR [ecx+eax*1-0x1a847bff]
  40b707:	dec    edx
  40b708:	add    bh,ah
  40b70a:	in     al,dx
  40b70b:	pop    esp
  40b70c:	adc    bl,BYTE PTR [ebx]
  40b70e:	add    DWORD PTR [edx+ebx*8],0x958428b4
  40b715:	cmp    dh,BYTE PTR [ebx+0x5d]
  40b718:	jecxz  0x40b69e
  40b71a:	and    eax,0xf962f30b
  40b71f:	adc    eax,0x5af4ff73
  40b724:	sub    BYTE PTR [eax-0x6829e4e6],bl
  40b72a:	pop    edx
  40b72b:	pop    esp
  40b72c:	inc    esi
  40b72d:	popa   
  40b72e:	stc    
  40b72f:	push   cs
  40b730:	cmp    DWORD PTR [edi-0x71],edi
  40b733:	and    DWORD PTR ds:0x1024010b,ecx
  40b739:	mov    bh,0x65
  40b73b:	pop    edi
  40b73c:	dec    ecx
  40b73d:	adc    DWORD PTR [ebx],0x2c
  40b740:	and    ecx,DWORD PTR [ebx]
  40b742:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b744:	add    al,0xe7
  40b746:	fsub   DWORD PTR [ebp+ebx*8-0x390eea1d]
  40b74d:	xor    cl,ah
  40b74f:	xchg   edi,eax
  40b750:	(bad)  
  40b751:	outs   dx,BYTE PTR ds:[esi]
  40b752:	int    0x28
  40b754:	ss dec esp
  40b756:	imul   ecx,DWORD PTR [edi+0x18],0xfffffff6
  40b75a:	mov    ds:0x81c776f6,al
  40b75f:	mov    al,0x79
  40b761:	jl     0x40b769
  40b763:	xor    bl,dh
  40b765:	(bad)  
  40b766:	fwait
  40b767:	out    0xf0,al
  40b769:	(bad)  
  40b76a:	(bad)
  40b76e:	sub    cl,BYTE PTR [ebp+edi*8+0x19e5cee1]
  40b775:	jecxz  0x40b75d
  40b777:	(bad)  
  40b779:	mov    al,BYTE PTR [esi+0x2bb43c0]
  40b77f:	stos   BYTE PTR es:[edi],al
  40b780:	nop
  40b781:	mov    ecx,DWORD PTR [esi+0x64]
  40b784:	and    eax,DWORD PTR [esi+0x4b]
  40b787:	ja     0x40b782
  40b789:	test   DWORD PTR [ebx],esi
  40b78b:	cmp    bl,BYTE PTR [eax+ebx*8-0x1881e0cb]
  40b792:	test   BYTE PTR [edx+edx*2],al
  40b795:	adc    ch,BYTE PTR [ecx-0x18]
  40b798:	repnz fist DWORD PTR [ebx-0xc]
  40b79c:	mov    ecx,0x4ca7eb24
  40b7a1:	dec    ebp
  40b7a2:	push   esi
  40b7a3:	pop    ecx
  40b7a4:	push   cs
  40b7a5:	out    dx,eax
  40b7a6:	mov    ch,0x3d
  40b7a8:	ret    0x4516
  40b7ab:	addr16 inc ebp
  40b7ad:	or     eax,0x63dae7d1
  40b7b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7b3:	dec    ecx
  40b7b4:	sbb    BYTE PTR [edx+edi*4],ah
  40b7b7:	into   
  40b7b8:	sub    edi,DWORD PTR [ebx]
  40b7ba:	adc    esi,DWORD PTR [ecx-0x49]
  40b7bd:	iret   
  40b7be:	xor    edx,DWORD PTR [ebp+0x7d7b61f9]
  40b7c4:	mov    ah,BYTE PTR [edi-0x253a39ea]
  40b7ca:	push   ebx
  40b7cb:	jge    0x40b803
  40b7cd:	add    ah,ah
  40b7cf:	mov    esi,0x10e65083
  40b7d4:	cmc    
  40b7d5:	pop    eax
  40b7d6:	push   esi
  40b7d7:	div    BYTE PTR [eax]
  40b7d9:	lock sub ah,cl
  40b7dc:	jnp    0x40b778
  40b7de:	or     edi,0xb7ba896e
  40b7e4:	sub    cl,dh
  40b7e6:	popa   
  40b7e7:	inc    eax
  40b7e8:	pop    eax
  40b7e9:	ds xor eax,0xb35cae67
  40b7ef:	popf   
  40b7f0:	shl    BYTE PTR [esi-0x6d],0x19
  40b7f4:	push   ebx
  40b7f5:	call   0x10c7115d
  40b7fa:	add    ah,BYTE PTR [ebx]
  40b7fc:	jmp    0xe2bf:0x6911c31b
  40b803:	call   0x6d024dc5
  40b808:	and    cl,bl
  40b80a:	cmp    eax,0x3e9d9b2c
  40b80f:	cwde   
  40b810:	mov    ebx,0x9d025128
  40b815:	xor    DWORD PTR [eax],ebx
  40b817:	cmp    bl,BYTE PTR [ecx*4-0x464fcfdf]
  40b81e:	dec    edx
  40b81f:	cmp    DWORD PTR [ebp+0x63],esi
  40b822:	jne    0x40b83b
  40b824:	retf   
  40b825:	push   edx
  40b826:	stos   DWORD PTR es:[edi],eax
  40b827:	mov    ebx,0x23859008
  40b82c:	mov    ds:0x1c8db1df,eax
  40b831:	sbb    BYTE PTR [ecx],ah
  40b833:	mov    ds:0xd093da7f,al
  40b838:	fistp  QWORD PTR [esi-0x6024d12e]
  40b83e:	or     bl,BYTE PTR [eax+eiz*4+0x5bf780d7]
  40b845:	pop    esi
  40b846:	and    dl,0xbc
  40b849:	inc    ecx
  40b84a:	or     esp,DWORD PTR [edi-0x5d]
  40b84d:	ds inc esp
  40b84f:	mov    edx,edi
  40b851:	jl     0x40b83e
  40b853:	jnp    0x40b7df
  40b855:	add    al,0x59
  40b857:	inc    esp
  40b858:	mov    al,ds:0x7711b880
  40b85d:	mov    al,0xcc
  40b85f:	push   ds
  40b860:	(bad)  
  40b861:	out    dx,al
  40b862:	retf   
  40b863:	iret   
  40b864:	cdq    
  40b865:	dec    edx
  40b866:	cs pop esp
  40b868:	or     ecx,DWORD PTR [ebp+0x0]
  40b86b:	xor    eax,0xbe0afdaa
  40b870:	push   0x50fca3db
  40b875:	lahf   
  40b876:	cdq    
  40b877:	aad    0xd7
  40b879:	sub    BYTE PTR [edi-0x5],dh
  40b87c:	mov    ebp,0x8c9e1f58
  40b881:	adc    DWORD PTR [edi+0xf2a8d5a],0xffffffdd
  40b888:	or     DWORD PTR [esi-0x4a],eax
  40b88b:	stc    
  40b88c:	add    DWORD PTR [edi-0x6cc3ff58],ebx
  40b892:	pop    ecx
  40b893:	sub    dh,0xc6
  40b896:	dec    esp
  40b897:	je     0x40b8f6
  40b899:	mov    dl,0x49
  40b89b:	cmc    
  40b89c:	sbb    al,0xc1
  40b89e:	rcl    DWORD PTR [esi+0x4c2a7706],1
  40b8a4:	mov    ds:0x43480b39,al
  40b8a9:	les    ebx,FWORD PTR [esi+edx*8]
  40b8ac:	jmp    0x40b914
  40b8ae:	xor    ebx,esp
  40b8b0:	lods   al,BYTE PTR ds:[esi]
  40b8b1:	lds    ebp,FWORD PTR [esi]
  40b8b3:	push   esp
  40b8b4:	inc    eax
  40b8b5:	xchg   DWORD PTR [ecx+ebx*2-0x6f32d18],ecx
  40b8bc:	jmp    0x40b909
  40b8be:	ins    DWORD PTR es:[edi],dx
  40b8bf:	sub    DWORD PTR [edx+eiz*8+0x2b],ebx
  40b8c3:	pop    ebx
  40b8c4:	or     dl,0x93
  40b8c7:	call   0x4538c0a8
  40b8cc:	jecxz  0x40b8bc
  40b8ce:	jbe    0x40b859
  40b8d0:	int3   
  40b8d1:	mov    dh,0x5b
  40b8d3:	(bad)  
  40b8d4:	in     eax,0xf5
  40b8d6:	pop    esi
  40b8d7:	jmp    FWORD PTR [ebx-0x8]
  40b8da:	into   
  40b8db:	jbe    0x40b930
  40b8dd:	pop    ecx
  40b8de:	mov    bl,0x18
  40b8e0:	das    
  40b8e1:	cdq    
  40b8e2:	inc    ecx
  40b8e3:	sub    eax,0xee150249
  40b8e8:	loop   0x40b8bd
  40b8ea:	shl    BYTE PTR [ecx],cl
  40b8ec:	pop    ebp
  40b8ed:	pop    eax
  40b8ee:	into   
  40b8ef:	ret    
  40b8f0:	gs cdq 
  40b8f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8f3:	rcr    DWORD PTR [ecx],1
  40b8f5:	mov    bl,0x16
  40b8f7:	leave  
  40b8f8:	or     DWORD PTR cs:[ecx],edx
  40b8fb:	outs   dx,DWORD PTR ds:[esi]
  40b8fc:	dec    ebp
  40b8fd:	xor    esi,DWORD PTR [edi-0x48]
  40b900:	aaa    
  40b901:	jno    0x40b91c
  40b903:	mov    eax,ds:0x94c5ad42
  40b908:	inc    esp
  40b909:	pop    ss
  40b90a:	inc    ecx
  40b90b:	dec    eax
  40b90c:	cmp    al,BYTE PTR ss:[ecx+0xcbd58f7]
  40b913:	dec    dx
  40b915:	std    
  40b916:	xabort 0xfa
  40b919:	cs popa 
  40b91b:	test   esp,0x56dec3a0
  40b921:	hlt    
  40b922:	mov    dh,0x9b
  40b924:	test   al,0x35
  40b926:	lds    ecx,FWORD PTR [ebx+0x600148bf]
  40b92c:	shl    DWORD PTR [eax+0x40],0x74
  40b930:	adc    al,0x83
  40b932:	outs   dx,DWORD PTR ds:[si]
  40b934:	test   DWORD PTR [eax],esi
  40b936:	adc    al,BYTE PTR [ebx+ebx*2]
  40b939:	out    dx,eax
  40b93a:	dec    ebx
  40b93b:	lea    ecx,[ebx+0x67]
  40b93e:	jns    0x40b92d
  40b940:	and    eax,DWORD PTR [esi+edx*4-0x15]
  40b944:	imul   edi
  40b946:	xor    al,0xf8
  40b948:	std    
  40b949:	mov    ah,0x16
  40b94b:	into   
  40b94c:	mov    ah,0x53
  40b94e:	jb     0x40b937
  40b950:	clc    
  40b951:	cs cs in al,0x83
  40b955:	aaa    
  40b956:	or     DWORD PTR [ebx-0x50aa9cb],edi
  40b95c:	jle    0x40b988
  40b95e:	pop    edi
  40b95f:	and    ecx,DWORD PTR [ebp+0x57ea335b]
  40b965:	nop
  40b966:	xchg   esi,eax
  40b967:	mul    BYTE PTR [edx-0x703d4cbf]
  40b96d:	add    al,0xbe
  40b96f:	imul   esi,DWORD PTR ds:[ecx+0x7b7e92e8],0x8ab2d3c3
  40b97a:	xor    BYTE PTR [ebp-0x3423e922],cl
  40b980:	inc    edx
  40b981:	dec    ecx
  40b982:	mov    bl,0x2a
  40b984:	jp     0x40b927
  40b986:	jp     0x40b965
  40b988:	cmp    DWORD PTR [ebx],eax
  40b98a:	pop    ebp
  40b98b:	daa    
  40b98c:	dec    ebp
  40b98d:	mov    esp,0xa4d1b76f
  40b992:	sbb    al,bl
  40b994:	push   cs
  40b995:	mov    cl,0xab
  40b997:	add    dl,BYTE PTR [edx-0x333e4140]
  40b99d:	stos   DWORD PTR es:[edi],eax
  40b99e:	mov    esi,0x5d0d0fff
  40b9a3:	in     eax,dx
  40b9a4:	mov    eax,ds:0xd820ce67
  40b9a9:	sbb    bl,dl
  40b9ab:	cmc    
  40b9ac:	jmp    0x40ba23
  40b9ae:	sbb    eax,0x31673df8
  40b9b3:	adc    al,0xb0
  40b9b5:	dec    ebx
  40b9b6:	xchg   esi,eax
  40b9b7:	mov    ah,ch
  40b9b9:	pop    ds
  40b9ba:	rcr    BYTE PTR [ebp-0x65],cl
  40b9bd:	adc    edi,DWORD PTR [edx+ebx*1+0x66]
  40b9c1:	shl    DWORD PTR [ebp+0x5bb7fc1e],1
  40b9c7:	sbb    DWORD PTR [ebp+0x53],0x30
  40b9cb:	or     ebx,edx
  40b9cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9ce:	or     bh,BYTE PTR ds:0xa3eb1a86
  40b9d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9d5:	js     0x40ba30
  40b9d7:	nop
  40b9d8:	mov    dl,dh
  40b9da:	out    0xc6,eax
  40b9dc:	and    eax,0xe8e42bf3
  40b9e1:	xchg   edx,eax
  40b9e2:	mov    dl,0xd6
  40b9e4:	adc    DWORD PTR [edx+edi*4-0x44],esi
  40b9e8:	ror    DWORD PTR [esi-0x25e580e3],1
  40b9ee:	gs push 0xf2cd6438
  40b9f4:	into   
  40b9f5:	imul   edx,ecx,0xffffffd1
  40b9f8:	stos   DWORD PTR es:[edi],eax
  40b9f9:	jge    0x40b9c2
  40b9fb:	mov    ebx,0xe5f2d539
  40ba00:	pop    edx
  40ba01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba02:	int3   
  40ba03:	ins    BYTE PTR es:[edi],dx
  40ba04:	stos   DWORD PTR es:[edi],eax
  40ba05:	fdiv   DWORD PTR [ebx+0x27dd0959]
  40ba0b:	mov    BYTE PTR ds:0x31a225a9,dh
  40ba11:	test   al,0x8d
  40ba13:	je     0x40ba1d
  40ba15:	das    
  40ba16:	mov    esp,0x529cdeda
  40ba1b:	jae    0x40ba7e
  40ba1d:	sar    DWORD PTR [edx],0x7f
  40ba20:	leave  
  40ba21:	xchg   esi,eax
  40ba22:	scas   eax,DWORD PTR es:[edi]
  40ba23:	adc    DWORD PTR [edx],esp
  40ba25:	cmp    eax,0x33d3abc5
  40ba2a:	test   eax,0x545ef17f
  40ba2f:	xor    edi,edx
  40ba31:	jns    0x40b9fa
  40ba33:	inc    ecx
  40ba34:	cmp    BYTE PTR [edi],0xec
  40ba37:	aas    
  40ba38:	fnsave [ebp+0x34]
  40ba3b:	fcomp  DWORD PTR ss:[esi]
  40ba3e:	mov    DWORD PTR [edx-0xc],0x6bd8991b
  40ba45:	ret    
  40ba46:	mov    ebx,0x206f96f3
  40ba4b:	xchg   BYTE PTR [ecx+0x69e815bb],al
  40ba51:	jmp    0x40ba35
  40ba53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba54:	or     eax,0x5162218d
  40ba59:	shr    BYTE PTR [edx-0x1],cl
  40ba5c:	(bad)  
  40ba5d:	ins    BYTE PTR es:[edi],dx
  40ba5e:	mov    ecx,0xf89fc35a
  40ba63:	dec    ebp
  40ba64:	les    edi,FWORD PTR [ebp-0x1b]
  40ba67:	inc    ebp
  40ba68:	and    ah,bh
  40ba6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba6b:	jb     0x40baea
  40ba6d:	cmp    eax,0x649e6993
  40ba72:	pusha  
  40ba73:	adc    eax,DWORD PTR [edx+0x5b452d8]
  40ba79:	push   eax
  40ba7a:	sti    
  40ba7b:	jnp    0x40ba95
  40ba7d:	daa    
  40ba7e:	or     BYTE PTR [ebx+0x57],dh
  40ba81:	mov    dh,0x11
  40ba83:	jb     0x40bae9
  40ba85:	imul   esi,DWORD PTR [ebx],0x804dfe46
  40ba8b:	int    0xaa
  40ba8d:	dec    ebp
  40ba8e:	aaa    
  40ba8f:	xor    BYTE PTR ds:[edx],ch
  40ba92:	cld    
  40ba93:	lahf   
  40ba94:	inc    ecx
  40ba95:	xlat   BYTE PTR ds:[ebx]
  40ba96:	push   0xfffffff8
  40ba98:	stos   DWORD PTR es:[edi],eax
  40ba99:	pop    es
  40ba9a:	arpl   WORD PTR [ebx+0x50287d12],dx
  40baa0:	sub    bl,BYTE PTR [edx]
  40baa2:	cmp    dh,0x99
  40baa5:	jmp    0x40ba2b
  40baa7:	call   0xc803996b
  40baac:	rcl    DWORD PTR [eax+0x46fbd9ae],1
  40bab2:	mov    eax,ds:0x1c9a58ff
  40bab7:	pop    edi
  40bab8:	pop    ss
  40bab9:	pop    ds
  40baba:	rol    DWORD PTR ds:0xd2b4b627,0xc7
  40bac1:	in     eax,0xf7
  40bac3:	lds    edx,FWORD PTR ds:0xcf67abeb
  40bac9:	cmp    ah,dh
  40bacb:	sbb    DWORD PTR [ebp-0x2f],eax
  40bace:	cli    
  40bacf:	mov    al,0x6
  40bad1:	imul   eax,esi,0x41
  40bad4:	fbld   TBYTE PTR [ebx+0x75cbeb]
  40bada:	push   ecx
  40badb:	test   DWORD PTR [esi+0x5f],ebp
  40bade:	push   ds
  40badf:	stos   DWORD PTR es:[edi],eax
  40bae0:	xor    al,bl
  40bae2:	adc    DWORD PTR [eax*8-0x307ffbfd],esi
  40bae9:	or     dl,ch
  40baeb:	dec    ebp
  40baec:	and    DWORD PTR [edx-0x39357ede],0xffffffc2
  40baf3:	add    eax,0x3c129d07
  40baf8:	(bad)  [ecx+0x6f]
  40bafb:	adc    al,0xbc
  40bafd:	ficomp WORD PTR [ebp+0x7c3ac8e0]
  40bb03:	push   ecx
  40bb04:	cmp    cl,al
  40bb06:	and    eax,0xfbd4bb69
  40bb0b:	adc    BYTE PTR [eax-0x1b],ah
  40bb0e:	(bad)  
  40bb0f:	pop    esp
  40bb10:	push   0x46d9d06d
  40bb15:	(bad)  
  40bb16:	cld    
  40bb17:	push   0xffffffa7
  40bb19:	sub    BYTE PTR [edi+0x14fbfdae],dh
  40bb1f:	add    edx,DWORD PTR [ebx+ebp*8+0x2f]
  40bb23:	jmp    0x40baee
  40bb25:	(bad)  
  40bb28:	adc    BYTE PTR [eax-0x3747b4a3],dh
  40bb2e:	cmc    
  40bb2f:	cmp    BYTE PTR [edx-0x2d],dh
  40bb32:	stos   BYTE PTR es:[edi],al
  40bb33:	cmp    DWORD PTR [edx],0xffffff92
  40bb36:	push   esi
  40bb37:	pushf  
  40bb38:	add    dh,BYTE PTR [edi+0x22]
  40bb3b:	mov    al,0x94
  40bb3d:	clc    
  40bb3e:	xor    eax,DWORD PTR [edi]
  40bb40:	jmp    0xebdd:0xc560b122
  40bb47:	inc    esp
  40bb48:	loop   0x40bae6
  40bb4a:	je     0x40bb0f
  40bb4c:	jb     0x40bb74
  40bb4e:	imul   eax,DWORD PTR [esi-0x9],0x4
  40bb52:	inc    eax
  40bb53:	and    al,bh
  40bb55:	xchg   edx,eax
  40bb56:	mov    eax,ds:0x70ed095c
  40bb5b:	sub    al,0x12
  40bb5d:	shl    DWORD PTR [ecx-0x36],0x82
  40bb61:	cwde   
  40bb62:	jmp    0x40bb95
  40bb64:	(bad)  
  40bb65:	push   0xffffff8b
  40bb67:	adc    ch,BYTE PTR [edi]
  40bb69:	test   al,0x20
  40bb6b:	loopne 0x40bb42
  40bb6d:	mov    cl,0x97
  40bb6f:	imul   eax,DWORD PTR [esi-0x66],0x2a
  40bb73:	and    ecx,DWORD PTR [edx+0x156748b0]
  40bb79:	xor    al,BYTE PTR [edx]
  40bb7b:	push   ebx
  40bb7c:	scas   eax,DWORD PTR es:[edi]
  40bb7d:	add    DWORD PTR [esi-0x48f1f775],esp
  40bb83:	inc    eax
  40bb84:	add    BYTE PTR [eax],cl
  40bb86:	inc    ebp
  40bb87:	ss add eax,0x4e5091d2
  40bb8d:	test   al,0x46
  40bb8f:	cmp    eax,DWORD PTR [ebp+0x40]
  40bb92:	call   DWORD PTR [ecx+0x2713db6d]
  40bb98:	xchg   esp,eax
  40bb99:	retf   0xed48
  40bb9c:	inc    esi
  40bb9d:	sub    edx,edi
  40bb9f:	cdq    
  40bba0:	pop    eax
  40bba1:	bound  edx,QWORD PTR ds:0x5216c178
  40bba7:	inc    edi
  40bba8:	or     ah,BYTE PTR [esi+0x1ac49506]
  40bbae:	mov    al,0x3f
  40bbb0:	jns    0x40bc19
  40bbb2:	adc    ch,BYTE PTR [ebp+0x46607451]
  40bbb8:	sbb    dl,BYTE PTR [eax-0x6]
  40bbbb:	push   eax
  40bbbc:	hlt    
  40bbbd:	in     eax,dx
  40bbbe:	inc    eax
  40bbbf:	mov    esi,0xd603124
  40bbc4:	lods   eax,DWORD PTR ds:[esi]
  40bbc5:	lahf   
  40bbc6:	repnz sbb ebp,ebp
  40bbc9:	cdq    
  40bbca:	aas    
  40bbcb:	mov    ds:0x8736d94e,al
  40bbd0:	(bad)  
  40bbd1:	pop    ecx
  40bbd2:	rol    DWORD PTR [esi],1
  40bbd4:	fsubr  st(2),st
  40bbd6:	repnz adc BYTE PTR [esi-0x2affa4e],dl
  40bbdd:	or     BYTE PTR ds:0x3bd181b0,bl
  40bbe3:	jns    0x40bc07
  40bbe5:	cmp    esp,DWORD PTR ds:[ecx-0x48]
  40bbe9:	cli    
  40bbea:	stc    
  40bbeb:	dec    ebx
  40bbec:	ja     0x40bc13
  40bbee:	adc    eax,0xe4c66c8f
  40bbf3:	leave  
  40bbf4:	xor    edi,ecx
  40bbf6:	jecxz  0x40bb8d
  40bbf8:	xchg   ecx,eax
  40bbf9:	or     esi,DWORD PTR [esi]
  40bbfb:	clc    
  40bbfc:	inc    edi
  40bbfd:	stos   DWORD PTR es:[edi],eax
  40bbfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbff:	lea    edx,ss:[eax+0x36]
  40bc03:	lods   eax,DWORD PTR ds:[esi]
  40bc04:	mov    al,0xc9
  40bc06:	cmp    DWORD PTR fs:[ebx+0x19],edx
  40bc0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc0b:	xor    bh,bh
  40bc0d:	add    al,0xc8
  40bc0f:	sub    eax,0x8cb410f9
  40bc14:	ja     0x40bc2f
  40bc16:	and    al,0x7e
  40bc18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc19:	mov    ah,0xc3
  40bc1b:	and    bl,0xd
  40bc1e:	or     dl,BYTE PTR [edi+0x6f]
  40bc21:	push   0x47
  40bc23:	std    
  40bc24:	xor    esp,DWORD PTR [eax+0x76]
  40bc27:	gs sti 
  40bc29:	aaa    
  40bc2a:	pop    eax
  40bc2b:	jp     0x40bc7d
  40bc2d:	or     eax,0xebbe7561
  40bc32:	adc    DWORD PTR [eax],eax
  40bc34:	jbe    0x40bc8b
  40bc36:	cmp    edi,esp
  40bc38:	lahf   
  40bc39:	aam    0x9f
  40bc3b:	lods   eax,DWORD PTR ds:[esi]
  40bc3c:	mov    ah,dh
  40bc3e:	xor    ebp,DWORD PTR [ebp+eiz*1+0x50e9866d]
  40bc45:	das    
  40bc46:	fist   DWORD PTR [edi-0x4e]
  40bc49:	ins    DWORD PTR es:[edi],dx
  40bc4a:	pushf  
  40bc4b:	dec    ebx
  40bc4c:	cmp    BYTE PTR [ebx],al
  40bc4e:	fimul  DWORD PTR [ebx]
  40bc51:	pop    eax
  40bc52:	lea    esi,[esi+0x1f]
  40bc55:	push   ecx
  40bc56:	sbb    edx,0x3cf89ec4
  40bc5c:	iret   
  40bc5d:	sahf   
  40bc5e:	sti    
  40bc5f:	sub    eax,0x6753dd2c
  40bc64:	retf   0xa477
  40bc67:	mov    eax,0xca6565dc
  40bc6c:	pop    edi
  40bc6d:	add    eax,0x8cab7fc1
  40bc72:	cld    
  40bc73:	inc    ebx
  40bc74:	lds    eax,FWORD PTR [ecx+0x63]
  40bc77:	or     bh,bl
  40bc79:	pop    ebp
  40bc7a:	push   ecx
  40bc7b:	(bad)  
  40bc7c:	fdivr  DWORD PTR [edx+0x46]
  40bc7f:	in     eax,dx
  40bc80:	ucomiss xmm5,DWORD PTR [ebx-0x68]
  40bc84:	je     0x40bc3f
  40bc86:	mov    ch,0xe7
  40bc88:	jno    0x40bcac
  40bc8a:	jo     0x40bcfc
  40bc8c:	loopne 0x40bc7a
  40bc8e:	daa    
  40bc8f:	pop    ds
  40bc90:	push   ebx
  40bc91:	mov    edx,0x61f4cb42
  40bc96:	js     0x40bc31
  40bc98:	xchg   esp,eax
  40bc99:	dec    eax
  40bc9a:	ret    
  40bc9b:	adc    al,BYTE PTR ds:0xd49d4475
  40bca1:	popa   
  40bca2:	dec    edx
  40bca3:	push   esp
  40bca4:	ret    
  40bca5:	lds    eax,FWORD PTR [ebp-0x5d162847]
  40bcab:	lods   al,BYTE PTR ds:[esi]
  40bcac:	mov    edx,0x508aa349
  40bcb1:	mov    edx,0x8758c0da
  40bcb6:	mov    edi,edi
  40bcb8:	jno    0x40bd11
  40bcba:	sub    al,0x76
  40bcbc:	sbb    esi,esp
  40bcbe:	mov    ebp,0xa0303c13
  40bcc3:	mov    ebx,0x833ef5fe
  40bcc8:	mov    ch,0x20
  40bcca:	add    dl,al
  40bccc:	pop    edx
  40bccd:	xchg   esp,eax
  40bcce:	aaa    
  40bccf:	fcomp  QWORD PTR [ebp-0x19f5e3cf]
  40bcd5:	repz mov ebp,0xd9e920a5
  40bcdb:	stos   BYTE PTR es:[edi],al
  40bcdc:	mov    ds:0xf6a34131,al
  40bce1:	inc    ecx
  40bce2:	pop    ebp
  40bce3:	mov    esi,0x244c9482
  40bce8:	jmp    0xb48e8651
  40bced:	leave  
  40bcee:	jge    0x40bc70
  40bcf0:	pop    edi
  40bcf1:	shr    ebp,cl
  40bcf3:	dec    ebp
  40bcf4:	ds mov edi,0x326825e4
  40bcfa:	or     bh,cl
  40bcfc:	push   ds
  40bcfd:	outs   dx,BYTE PTR ds:[esi]
  40bcfe:	mov    ebp,0x300a9b93
  40bd03:	add    al,0x31
  40bd05:	ret    
  40bd06:	lea    ebx,cs:[esi+0x34]
  40bd0a:	dec    ecx
  40bd0b:	sbb    dl,bl
  40bd0d:	push   edi
  40bd0e:	fincstp 
  40bd10:	add    al,cl
  40bd12:	(bad)  
  40bd13:	(bad)  
  40bd14:	rol    DWORD PTR [ecx+0x7568f9f4],1
  40bd1a:	cs mov edi,0xf4784c48
  40bd20:	mov    BYTE PTR [ebp-0x42],bh
  40bd23:	test   al,0x8e
  40bd25:	sub    eax,0x96dbc009
  40bd2a:	cli    
  40bd2b:	adc    BYTE PTR [esi],ch
  40bd2d:	push   0x3bec5361
  40bd32:	inc    ebx
  40bd33:	neg    BYTE PTR ds:0xe0d49b11
  40bd39:	loop   0x40bd96
  40bd3b:	adc    BYTE PTR [ebp-0x49],dh
  40bd3e:	call   0x9750a9d0
  40bd43:	(bad)  
  40bd44:	scas   al,BYTE PTR es:[edi]
  40bd45:	daa    
  40bd46:	jns    0x40bd52
  40bd48:	pop    esi
  40bd49:	sbb    dl,dh
  40bd4b:	and    edi,DWORD PTR ds:0x7e22a669
  40bd51:	dec    esi
  40bd52:	(bad)  
  40bd54:	dec    edx
  40bd55:	imul   edi,DWORD PTR [ecx+0x16],0x37
  40bd59:	jmp    0x40bd49
  40bd5b:	sub    ch,BYTE PTR [eax+0x60abe815]
  40bd61:	mov    bl,BYTE PTR [esi+0x10bb99a6]
  40bd67:	dec    ebx
  40bd68:	jp     0x40bd7b
  40bd6a:	pop    ebp
  40bd6b:	fdiv   QWORD PTR [edi+0x60]
  40bd6e:	jecxz  0x40bd11
  40bd70:	arpl   WORD PTR [ecx],sp
  40bd72:	inc    esp
  40bd73:	retf   
  40bd74:	dec    edi
  40bd75:	pop    edx
  40bd76:	add    edx,eax
  40bd78:	imul   ebx,DWORD PTR [ebx+0x13],0xffffffba
  40bd7c:	jl     0x40bd60
  40bd7e:	add    al,0x18
  40bd80:	xchg   edx,eax
  40bd81:	in     al,dx
  40bd82:	xor    dl,dh
  40bd84:	cmp    al,0x7a
  40bd86:	dec    DWORD PTR [esi-0x19]
  40bd89:	jo     0x40bd6f
  40bd8b:	add    al,0x32
  40bd8d:	pop    ebp
  40bd8e:	mov    ecx,cs
  40bd90:	pushf  
  40bd91:	test   BYTE PTR [edx+0x6e],bl
  40bd94:	dec    ecx
  40bd95:	std    
  40bd96:	and    eax,0x5118bc43
  40bd9b:	(bad)  
  40bd9c:	jecxz  0x40bd36
  40bd9e:	adc    DWORD PTR [edi+ebp*1],ebx
  40bda1:	rcl    BYTE PTR [eax-0x4f],cl
  40bda4:	dec    edx
  40bda5:	sbb    BYTE PTR [ecx+eiz*4],bl
  40bda8:	sub    BYTE PTR [eax-0x80],0xa
  40bdac:	mov    bl,0x70
  40bdae:	jbe    0x40bdf9
  40bdb0:	(bad)  
  40bdb2:	add    dh,BYTE PTR [eax-0x70]
  40bdb5:	mov    ah,0xd1
  40bdb7:	xchg   DWORD PTR [esi+0x5e13aabb],esp
  40bdbd:	ret    0x8f5d
  40bdc0:	xor    DWORD PTR [ecx-0x31774b9a],0x2d8c08cc
  40bdca:	dec    edx
  40bdcb:	cli    
  40bdcc:	(bad)  
  40bdcd:	popf   
  40bdce:	and    edx,esi
  40bdd0:	sub    BYTE PTR [ebx-0x24],0xc9
  40bdd4:	mov    bl,0x57
  40bdd6:	xchg   BYTE PTR [edi+edi*1],bl
  40bdd9:	out    0xaf,al
  40bddb:	adc    dh,bh
  40bddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdde:	sbb    bh,BYTE PTR [eax-0x27]
  40bde1:	mov    ds:0x2677c25,eax
  40bde6:	mov    ebp,es
  40bde8:	mov    edx,0xd82dc0b5
  40bded:	xor    BYTE PTR [ebx-0x5b6dac0],dh
  40bdf3:	cs push ss
  40bdf5:	jle    0x40be2d
  40bdf7:	rcl    DWORD PTR [ebp+0x69a4f54b],cl
  40bdfd:	popf   
  40bdfe:	stc    
  40bdff:	mov    ds:0x1a0445e6,al
  40be04:	rol    DWORD PTR [edx-0x489dea3c],cl
  40be0a:	adc    eax,0x7aebc7c4
  40be0f:	or     DWORD PTR [edx-0x2d],ebx
  40be12:	loop   0x40bda4
  40be14:	test   bl,cl
  40be16:	jnp    0x40be45
  40be18:	dec    esi
  40be19:	mov    DWORD PTR [edx+0x8],edi
  40be1c:	jne    0x40be1c
  40be1e:	imul   ebx,DWORD PTR [ecx],0xf787a42a
  40be24:	data16 cmp al,0x84
  40be27:	adc    edi,DWORD PTR [ebx]
  40be29:	call   0xa56f:0xb7005ac5
  40be30:	mov    ch,0x53
  40be32:	mov    ebp,0x8aeef56d
  40be37:	(bad)  
  40be38:	xchg   esi,eax
  40be39:	cld    
  40be3a:	je     0x40be16
  40be3c:	fisub  WORD PTR [ecx-0x7b]
  40be3f:	xchg   DWORD PTR [eax-0x429f127c],esi
  40be45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be46:	and    esi,DWORD PTR ds:0x8eeca57f
  40be4c:	stos   BYTE PTR es:[edi],al
  40be4d:	out    0x2c,eax
  40be4f:	int    0xa3
  40be51:	mov    dh,0xee
  40be53:	xchg   edi,eax
  40be54:	cmp    ebp,edi
  40be56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be57:	retf   
  40be58:	js     0x40bdfd
  40be5a:	nop
  40be5b:	shl    BYTE PTR [edx],1
  40be5d:	cli    
  40be5e:	fdivr  QWORD PTR [ecx+0x73]
  40be61:	into   
  40be62:	jno    0x40be0e
  40be64:	lahf   
  40be65:	xchg   edx,eax
  40be66:	jno    0x40bed7
  40be68:	shl    eax,cl
  40be6a:	rol    esp,0xf0
  40be6d:	sbb    BYTE PTR [edx],cl
  40be6f:	or     BYTE PTR [ebp+esi*8+0x77],bh
  40be73:	js     0x40be98
  40be75:	fwait
  40be76:	bound  ebp,QWORD PTR [esi]
  40be78:	xchg   BYTE PTR [ecx+0x7],ch
  40be7b:	lds    esp,FWORD PTR [edx-0x2d]
  40be7e:	or     esp,0x15c00e86
  40be84:	mov    cl,0x2d
  40be86:	push   ebp
  40be87:	pop    esp
  40be88:	std    
  40be89:	jne    0x40bee7
  40be8b:	xor    al,0x35
  40be8d:	dec    ebp
  40be8e:	aas    
  40be8f:	mov    ds:0x885d0aae,al
  40be94:	mov    bh,0x9f
  40be96:	scas   al,BYTE PTR es:[edi]
  40be97:	mov    eax,0xc7a9a0b3
  40be9c:	repz and al,0x44
  40be9f:	mov    WORD PTR [esi-0x7f],gs
  40bea2:	iret   
  40bea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bea4:	pusha  
  40bea5:	ja     0x40bf14
  40bea7:	mov    ebp,0x68a0b5af
  40beac:	jmp    0x40bf1f
  40beae:	push   ds
  40beaf:	sbb    eax,0xe51084b7
  40beb4:	bound  esi,QWORD PTR [eax]
  40beb6:	add    al,0x29
  40beb8:	xlat   BYTE PTR ds:[ebx]
  40beb9:	les    ebx,FWORD PTR [ebx+0x8fad8b0]
  40bebf:	neg    DWORD PTR [edx+0x250551f6]
  40bec5:	push   edi
  40bec6:	or     DWORD PTR ds:[edx],edx
  40bec9:	xchg   ebx,eax
  40beca:	loopne 0x40bef1
  40becc:	sbb    esp,DWORD PTR [ecx-0x31ef0004]
  40bed2:	inc    edi
  40bed3:	pusha  
  40bed4:	pop    esp
  40bed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bed6:	jmp    0x40bf3f
  40bed8:	pop    ecx
  40bed9:	sahf   
  40beda:	or     dh,0x3
  40bedd:	push   ebp
  40bede:	sub    dl,ah
  40bee0:	adc    al,0x51
  40bee2:	aam    0x0
  40bee4:	repnz or BYTE PTR [eax-0x11],bh
  40bee8:	stos   BYTE PTR es:[edi],al
  40bee9:	sbb    al,0x6a
  40beeb:	push   ss
  40beec:	mov    edx,0x45c3c7b0
  40bef1:	popa   
  40bef2:	cmc    
  40bef3:	push   ds
  40bef4:	dec    edi
  40bef5:	ficom  DWORD PTR [ebp-0x28]
  40bef8:	shl    DWORD PTR [esi],1
  40befa:	and    ax,0x9862
  40befe:	test   eax,0xa6fee9fe
  40bf03:	jmp    0x40bf0c
  40bf05:	pop    edi
  40bf06:	(bad)  
  40bf08:	inc    esp
  40bf09:	xchg   DWORD PTR [ecx+0x18627015],edx
  40bf0f:	xor    esp,ebx
  40bf11:	iret   
  40bf12:	mov    edx,0xfc26d017
  40bf17:	jae    0x40bee3
  40bf19:	push   es
  40bf1a:	pop    ecx
  40bf1b:	jo     0x40bebe
  40bf1d:	test   DWORD PTR [eax],0xb80ddb02
  40bf23:	cs dec edi
  40bf25:	(bad)  
  40bf26:	pop    ecx
  40bf27:	rol    BYTE PTR ds:0xd501b970,cl
  40bf2d:	or     al,0xd1
  40bf2f:	adc    DWORD PTR [eax],edi
  40bf31:	ret    0x2e37
  40bf34:	or     dh,BYTE PTR [ecx-0x77]
  40bf37:	test   DWORD PTR [edi-0x738c6158],0xe86d1e1f
  40bf41:	(bad)  
  40bf43:	sub    ebx,esi
  40bf45:	or     ch,BYTE PTR [edx]
  40bf47:	(bad)  
  40bf48:	or     eax,0xfcfc204c
  40bf4d:	pop    ecx
  40bf4e:	push   esp
  40bf4f:	fadd   QWORD PTR [esp+ebx*1]
  40bf52:	mov    esp,0x57b0bc41
  40bf57:	inc    ebx
  40bf58:	push   edi
  40bf59:	imul   edi,DWORD PTR [edi-0x3b5196f3],0x23067a17
  40bf63:	icebp  
  40bf64:	data16 sub BYTE PTR [esi+0x34a0bb75],ch
  40bf6b:	call   0xe960:0x3c325c16
  40bf72:	inc    eax
  40bf73:	das    
  40bf74:	das    
  40bf75:	test   BYTE PTR [edi],ch
  40bf77:	lds    eax,FWORD PTR fs:[edx+eiz*1-0x6b]
  40bf7c:	retf   
  40bf7d:	(bad)  [esp+edx*2+0x4d]
  40bf81:	(bad)  
  40bf82:	mov    ds:0x662c6e72,eax
  40bf87:	jmp    0x297ac2e
  40bf8c:	loop   0x40bfe0
  40bf8e:	scas   eax,DWORD PTR es:[edi]
  40bf8f:	call   0x78a6:0x1dd14947
  40bf96:	lods   al,BYTE PTR ds:[esi]
  40bf97:	and    DWORD PTR [edx-0x5948c07d],ebx
  40bf9d:	push   esp
  40bf9e:	fdivr  st,st(6)
  40bfa0:	aad    0x62
  40bfa2:	cmp    al,0xfe
  40bfa4:	scas   al,BYTE PTR es:[edi]
  40bfa5:	sub    edi,eax
  40bfa7:	je     0x40bfd4
  40bfa9:	inc    ecx
  40bfaa:	xor    al,0xa3
  40bfac:	enter  0x560c,0x39
  40bfb0:	xor    eax,0x60f5c78f
  40bfb5:	imul   edx,eax,0x18
  40bfb8:	and    eax,0xc47f853b
  40bfbd:	pop    edi
  40bfbe:	xlat   BYTE PTR ds:[ebx]
  40bfbf:	xor    ah,0x4b
  40bfc2:	cdq    
  40bfc3:	and    cl,BYTE PTR [esi+edx*1]
  40bfc6:	hlt    
  40bfc7:	push   edx
  40bfc8:	pop    ebp
  40bfc9:	lods   eax,DWORD PTR ds:[esi]
  40bfca:	inc    ecx
  40bfcb:	test   eax,0xd8d9195b
  40bfd0:	jecxz  0x40bf9a
  40bfd2:	pop    esp
  40bfd3:	cmp    DWORD PTR [edx+0x3e],ecx
  40bfd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfd7:	xchg   ecx,eax
  40bfd8:	xor    al,0x1
  40bfda:	mov    dl,0xf9
  40bfdc:	stos   BYTE PTR es:[edi],al
  40bfdd:	enter  0xf388,0xd3
  40bfe1:	or     eax,DWORD PTR ds:0x293d7ea1
  40bfe7:	xor    BYTE PTR [edi+0x1616e161],dl
  40bfed:	loope  0x40c03a
  40bfef:	xor    DWORD PTR [edi],edx
  40bff1:	lahf   
  40bff2:	inc    esi
  40bff3:	xor    DWORD PTR [ecx+0x2],0x9f761ee4
  40bffa:	lods   al,BYTE PTR ds:[esi]
  40bffb:	inc    ebp
  40bffc:	jge    0x40bffd
  40bffe:	jae    0x40bfdc
  40c000:	adc    eax,0xa537ac1e
  40c005:	pop    ebx
  40c006:	test   al,0x58
  40c008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c009:	push   ds
  40c00a:	pop    esi
  40c00b:	and    DWORD PTR [ebx+0x2538ec05],edx
  40c011:	pop    ecx
  40c012:	inc    esi
  40c013:	mov    eax,0xf22f5a83
  40c018:	outs   dx,DWORD PTR ds:[esi]
  40c019:	cs ins DWORD PTR es:[edi],dx
  40c01b:	push   ebx
  40c01c:	and    eax,0x50ae1b99
  40c021:	bound  edx,QWORD PTR gs:[eax-0x17]
  40c025:	jns    0x40c008
  40c027:	cmp    eax,0x2e41dfc4
  40c02c:	in     al,0xfd
  40c02e:	add    DWORD PTR [ecx-0x3b],ecx
  40c031:	(bad)  
  40c032:	int3   
  40c033:	sub    DWORD PTR [esi],0x1da3319
  40c039:	(bad)  
  40c03a:	retf   0x7cf2
  40c03d:	lea    ebp,[ebx+0x105d4961]
  40c043:	push   ss
  40c044:	push   ebp
  40c045:	sub    BYTE PTR [ebx-0x4ba5e0c9],ah
  40c04b:	jne    0x40c0bf
  40c04d:	inc    eax
  40c04e:	aaa    
  40c04f:	lods   al,BYTE PTR ds:[esi]
  40c050:	and    BYTE PTR [edx+0x6c],bh
  40c053:	mov    al,ds:0x615489ca
  40c058:	int    0x36
  40c05a:	mov    bl,0x63
  40c05c:	mul    ah
  40c05e:	icebp  
  40c05f:	jae    0x40c008
  40c061:	test   ah,ch
  40c063:	dec    edi
  40c064:	xchg   ecx,eax
  40c065:	xchg   esi,eax
  40c066:	adc    ebx,ebp
  40c068:	cdq    
  40c069:	in     al,dx
  40c06a:	aad    0x18
  40c06c:	mov    eax,0x483fc9a5
  40c071:	aam    0xd4
  40c073:	fidiv  DWORD PTR [edx+0x57]
  40c076:	xor    eax,DWORD PTR cs:[ecx-0x17]
  40c07a:	gs pop esp
  40c07c:	loopne 0x40c050
  40c07e:	inc    eax
  40c07f:	push   ds
  40c080:	mov    BYTE PTR [edi+eax*1],bl
  40c083:	sub    edi,DWORD PTR [edi-0x19]
  40c086:	xchg   ebp,eax
  40c087:	or     bl,BYTE PTR [edi-0x7cb9866d]
  40c08d:	mov    edi,0x46cbe8f7
  40c092:	in     eax,0x59
  40c094:	sti    
  40c095:	es and ah,bh
  40c098:	mov    cl,0x20
  40c09a:	gs or  al,0x25
  40c09d:	loopne 0x40c0cf
  40c09f:	xor    cl,BYTE PTR [ebp-0x74b71fa9]
  40c0a5:	pop    ecx
  40c0a6:	test   al,0x2b
  40c0a8:	pusha  
  40c0a9:	out    dx,al
  40c0aa:	xchg   ecx,eax
  40c0ab:	ins    DWORD PTR es:[edi],dx
  40c0ac:	mov    esi,0x1882c0b1
  40c0b1:	xchg   ecx,eax
  40c0b2:	inc    esi
  40c0b3:	inc    ebx
  40c0b4:	inc    ebx
  40c0b5:	sahf   
  40c0b6:	adc    ecx,DWORD PTR [edx]
  40c0b8:	jmp    0x3d7e:0xce973545
  40c0bf:	bound  edi,QWORD PTR [ecx]
  40c0c1:	out    dx,eax
  40c0c2:	jno    0x40c095
  40c0c4:	scas   al,BYTE PTR es:[edi]
  40c0c5:	or     ebp,DWORD PTR [ebp+0x58]
  40c0c8:	jmp    0xd4742efd
  40c0cd:	push   edi
  40c0ce:	dec    edi
  40c0cf:	aad    0xd3
  40c0d1:	dec    ecx
  40c0d2:	sub    ebx,DWORD PTR [eiz*1+0x2f091e4b]
  40c0d9:	xchg   edi,eax
  40c0da:	cmp    esp,DWORD PTR [ecx]
  40c0dc:	cmp    BYTE PTR [ecx-0x141bdff],dh
  40c0e2:	loope  0x40c10c
  40c0e4:	sbb    al,0x7e
  40c0e6:	mov    ah,0x3a
  40c0e8:	fmulp  st(7),st
  40c0ea:	out    0xa0,eax
  40c0ec:	sti    
  40c0ed:	xor    DWORD PTR [ecx-0x6b5732f0],0x6b37acea
  40c0f7:	dec    edi
  40c0f8:	mov    edi,DWORD PTR [esi+0x921c838]
  40c0fe:	scas   al,BYTE PTR es:[edi]
  40c0ff:	xchg   ebx,eax
  40c100:	xlat   BYTE PTR ds:[ebx]
  40c101:	pop    eax
  40c102:	scas   al,BYTE PTR es:[edi]
  40c103:	xor    dh,BYTE PTR [ebx]
  40c105:	test   edi,ebx
  40c107:	sub    BYTE PTR [ecx+edi*2+0x7],ah
  40c10b:	dec    edx
  40c10c:	ret    
  40c10d:	repz push esp
  40c10f:	outs   dx,DWORD PTR ds:[esi]
  40c110:	adc    ebp,edi
  40c112:	sahf   
  40c113:	sbb    DWORD PTR [ecx+0x28],eax
  40c116:	stc    
  40c117:	mov    edx,0xd0c6a859
  40c11c:	repnz arpl WORD PTR [ecx+0x6b],ax
  40c120:	sub    BYTE PTR [eax+0x41],ch
  40c123:	lds    eax,FWORD PTR [edx]
  40c125:	jno    0x40c150
  40c127:	inc    edi
  40c128:	nop
  40c129:	fsub   DWORD PTR [edx+esi*4+0x5183b8d0]
  40c130:	push   edi
  40c131:	popa   
  40c132:	jno    0x40c15b
  40c134:	fadd   st(4),st
  40c136:	sar    DWORD PTR [edx],0x4
  40c139:	mov    ecx,0x91e09f6a
  40c13e:	pop    ds
  40c13f:	fist   WORD PTR [ebx-0x4511f4f8]
  40c145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c146:	dec    esi
  40c147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c148:	mov    esi,ebx
  40c14a:	fdivr  st,st(1)
  40c14c:	dec    esp
  40c14d:	xor    edx,DWORD PTR [ecx+eax*8-0x2]
  40c151:	xor    DWORD PTR [edx],esi
  40c153:	adc    DWORD PTR [ebp+0x647665df],esp
  40c159:	pop    eax
  40c15a:	mov    edx,0xe096e005
  40c15f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c160:	mov    dl,0x5b
  40c162:	ja     0x40c186
  40c164:	pop    esp
  40c165:	inc    ebx
  40c166:	mov    dl,0xdf
  40c168:	pop    edx
  40c169:	nop
  40c16a:	xchg   BYTE PTR [edx],ah
  40c16c:	lds    esi,FWORD PTR ds:0x426601cb
  40c172:	xchg   esp,eax
  40c173:	push   esi
  40c174:	fwait
  40c175:	sub    ah,BYTE PTR [edx]
  40c177:	and    DWORD PTR [edi-0x58f810fb],0xffffffae
  40c17e:	sub    ecx,ecx
  40c180:	cmp    al,BYTE PTR [esi+0x65]
  40c183:	in     eax,dx
  40c184:	addr16 push ds
  40c186:	nop
  40c187:	daa    
  40c188:	cmp    bl,ch
  40c18a:	mov    ah,0xfc
  40c18c:	fwait
  40c18d:	mul    ebp
  40c18f:	enter  0xbd1c,0x2d
  40c193:	fild   DWORD PTR [edx-0x5]
  40c196:	add    DWORD PTR [edx+0x7bdf29a8],0xffffffad
  40c19d:	cmp    ecx,DWORD PTR [esi]
  40c19f:	xchg   edi,eax
  40c1a0:	je     0x40c200
  40c1a2:	adc    ebx,DWORD PTR [edi+0x41]
  40c1a5:	daa    
  40c1a6:	lds    esp,FWORD PTR [edi]
  40c1a8:	cdq    
  40c1a9:	mov    bl,0x9d
  40c1ab:	ja     0x40c14b
  40c1ad:	xchg   DWORD PTR [ebx],ecx
  40c1af:	mov    eax,ebp
  40c1b1:	iret   
  40c1b2:	mov    cl,0x8
  40c1b4:	inc    esp
  40c1b5:	mov    bl,0x8a
  40c1b7:	pop    es
  40c1b8:	cmp    BYTE PTR [edi-0x61],bh
  40c1bb:	lods   eax,DWORD PTR ds:[esi]
  40c1bc:	mov    ah,0x47
  40c1be:	mov    WORD PTR [ebx+0x240c63a3],cs
  40c1c4:	jne    0x40c166
  40c1c6:	jmp    esi
  40c1c8:	dec    edi
  40c1c9:	add    ah,dl
  40c1cb:	jl     0x40c22e
  40c1cd:	not    BYTE PTR [ebx-0x63]
  40c1d0:	push   esi
  40c1d1:	fadd   st(6),st
  40c1d3:	mov    ds:0x10f5a489,eax
  40c1d8:	out    dx,al
  40c1d9:	shl    BYTE PTR [esi+0x39],0xee
  40c1dd:	mov    ch,0x45
  40c1df:	mov    ebx,0x83faff4
  40c1e4:	popa   
  40c1e5:	imul   DWORD PTR [edi]
  40c1e7:	push   ds
  40c1e8:	jp     0x40c240
  40c1ea:	sub    al,0x18
  40c1ec:	jnp    0x40c199
  40c1ee:	aam    0x87
  40c1f0:	push   cs
  40c1f1:	(bad)  
  40c1f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1f3:	out    dx,eax
  40c1f4:	jo     0x40c25f
  40c1f6:	out    0x9,eax
  40c1f8:	gs xchg esp,eax
  40c1fa:	sbb    edi,DWORD PTR ds:0xd4efd614
  40c200:	push   eax
  40c201:	es pop ecx
  40c203:	mov    DWORD PTR [edx+ebp*4+0x6d],eax
  40c207:	xlat   BYTE PTR ds:[ebx]
  40c208:	daa    
  40c209:	lods   eax,DWORD PTR ds:[esi]
  40c20a:	sub    eax,DWORD PTR [edi-0x421a6361]
  40c210:	pop    ds
  40c211:	mov    cl,0x39
  40c213:	and    al,0x82
  40c215:	jmp    0xf088:0xe3ae9246
  40c21c:	pop    es
  40c21d:	xor    esi,DWORD PTR [esi+ecx*1+0x5f9521ab]
  40c224:	rcl    DWORD PTR [ecx],1
  40c226:	leave  
  40c227:	sbb    ebp,DWORD PTR [edx-0x11]
  40c22a:	stos   BYTE PTR es:[edi],al
  40c22b:	bound  ebp,QWORD PTR [edx]
  40c22d:	aaa    
  40c22e:	cdq    
  40c22f:	cmp    eax,0x142d7f50
  40c234:	ins    DWORD PTR es:[edi],dx
  40c235:	faddp  st(0),st
  40c237:	xchg   edi,eax
  40c238:	imul   esp,DWORD PTR [ebp+edx*4+0x1b3cac2b],0x954f0ce5
  40c243:	mov    dh,0x7a
  40c245:	loop   0x40c1ea
  40c247:	enter  0x6901,0xda
  40c24b:	jne    0x40c2be
  40c24d:	pop    edi
  40c24e:	mov    DWORD PTR [eax],ebp
  40c250:	js     0x40c2a1
  40c252:	mov    ss,WORD PTR [ebp-0x39d00d6]
  40c258:	hlt    
  40c259:	pop    ss
  40c25a:	push   es
  40c25b:	mov    al,ds:0x10bda9c4
  40c260:	jnp    0x40c201
  40c262:	stos   DWORD PTR es:[edi],eax
  40c263:	jne    0x40c22f
  40c265:	jns    0x40c266
  40c267:	bnd ja 0x40c2b2
  40c26a:	inc    ebx
  40c26b:	xchg   WORD PTR [edx],bp
  40c26e:	and    ebp,DWORD PTR [ebx-0x75]
  40c271:	sbb    al,bl
  40c273:	arpl   dx,cx
  40c275:	call   0xef18b2b2
  40c27a:	xchg   edi,eax
  40c27b:	mov    dl,ch
  40c27d:	mov    ch,BYTE PTR [esi-0x69d7cc33]
  40c283:	push   cs
  40c284:	inc    ecx
  40c285:	shl    DWORD PTR [ebp+edx*8-0x54],cl
  40c289:	fwait
  40c28a:	sbb    dh,al
  40c28c:	int    0xcd
  40c28e:	(bad)  
  40c28f:	or     DWORD PTR ss:[edx+0xa],0x98fa7656
  40c297:	jns    0x40c27c
  40c299:	(bad)  
  40c29a:	sub    eax,0xff5b9eed
  40c29f:	mov    al,0xf0
  40c2a1:	adc    ebx,ebx
  40c2a3:	push   ecx
  40c2a4:	push   ebx
  40c2a5:	mov    ds:0xbb781c4e,eax
  40c2aa:	aaa    
  40c2ab:	and    al,0x12
  40c2ad:	bound  esi,QWORD PTR [ecx-0x24]
  40c2b0:	adc    esi,DWORD PTR [ebx-0x3b]
  40c2b3:	fmul   DWORD PTR [esi-0x1c]
  40c2b6:	(bad)  
  40c2b7:	ds (bad) 
  40c2b9:	cmp    BYTE PTR [ecx],bh
  40c2bb:	adc    bl,0x16
  40c2be:	push   eax
  40c2bf:	test   DWORD PTR [ebx+0x7b],esp
  40c2c2:	aaa    
  40c2c3:	and    al,0x5
  40c2c5:	xchg   edx,eax
  40c2c6:	mov    dl,0x2e
  40c2c8:	(bad)  
  40c2c9:	stos   BYTE PTR es:[edi],al
  40c2ca:	jecxz  0x40c271
  40c2cc:	(bad)  
  40c2cd:	leave  
  40c2ce:	or     BYTE PTR [edi],ch
  40c2d0:	pop    edi
  40c2d1:	shl    BYTE PTR [ebp+0x4c],0xd1
  40c2d5:	mov    dl,BYTE PTR [ebx+0x10]
  40c2d8:	(bad)  
  40c2da:	inc    edi
  40c2db:	jns    0x40c316
  40c2dd:	xchg   edx,eax
  40c2de:	outs   dx,BYTE PTR ds:[esi]
  40c2df:	mov    edi,0xa97b5a72
  40c2e4:	xchg   edi,eax
  40c2e5:	push   edx
  40c2e6:	(bad)  [esp+ecx*4]
  40c2e9:	scas   al,BYTE PTR es:[edi]
  40c2ea:	pop    ebp
  40c2eb:	pop    edi
  40c2ec:	or     dl,BYTE PTR [edx+0x76]
  40c2ef:	xchg   ebx,eax
  40c2f0:	and    ah,BYTE PTR [esi]
  40c2f2:	xchg   esp,eax
  40c2f3:	scas   al,BYTE PTR es:[edi]
  40c2f4:	sbb    eax,0x319bc1b6
  40c2f9:	jg     0x40c2ec
  40c2fb:	add    DWORD PTR [edi],ebx
  40c2fd:	pop    ecx
  40c2fe:	in     al,dx
  40c2ff:	xor    DWORD PTR ds:0x712d9ae6,edi
  40c305:	mov    bl,0x77
  40c307:	(bad)  
  40c308:	jns    0x40c381
  40c30a:	jno    0x40c2cb
  40c30c:	xor    cl,BYTE PTR [ebx]
  40c30e:	xor    al,0x29
  40c310:	outs   dx,BYTE PTR ds:[esi]
  40c311:	dec    eax
  40c312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c313:	adc    bl,BYTE PTR [eax]
  40c315:	push   es
  40c316:	or     al,0xc1
  40c318:	sahf   
  40c319:	sbb    ax,0x7602
  40c31d:	xchg   edi,eax
  40c31e:	xor    eax,0x9cca46ca
  40c323:	or     BYTE PTR [eax],cl
  40c325:	cs push eax
  40c327:	les    esi,FWORD PTR [edi-0x52312919]
  40c32d:	jge    0x40c383
  40c32f:	dec    eax
  40c330:	(bad)  
  40c331:	cmp    DWORD PTR [esi+0x12],esp
  40c334:	std    
  40c335:	cmc    
  40c336:	shl    BYTE PTR ds:0x12588ff9,cl
  40c33c:	sub    ah,bh
  40c33e:	dec    ecx
  40c33f:	jmp    0x291e1f64
  40c344:	das    
  40c345:	or     ah,0x94
  40c348:	mov    cl,0x99
  40c34a:	test   BYTE PTR [esi+0x1f075fc0],dl
  40c350:	jo     0x40c377
  40c352:	hlt    
  40c353:	test   BYTE PTR es:[esi],dl
  40c356:	aaa    
  40c357:	add    BYTE PTR [ebx],bh
  40c359:	mov    eax,0x49e823d5
  40c35e:	(bad)  
  40c35f:	out    0x31,eax
  40c361:	js     0x40c2f6
  40c363:	dec    edx
  40c364:	test   al,0xf4
  40c366:	jno    0x40c3da
  40c368:	hlt    
  40c369:	(bad)  
  40c36a:	addr16 repz or eax,0x5bb8a191
  40c371:	jmp    0x728a:0xbe56e496
  40c378:	inc    esi
  40c379:	cdq    
  40c37a:	test   al,0xbb
  40c37c:	ins    BYTE PTR es:[edi],dx
  40c37d:	popa   
  40c37e:	lods   al,BYTE PTR ds:[esi]
  40c37f:	mov    ebx,0x4a527445
  40c384:	cmp    dl,BYTE PTR [ebx]
  40c386:	push   esi
  40c387:	xchg   esp,eax
  40c388:	lds    ecx,FWORD PTR [ecx]
  40c38a:	fmul   st(6),st
  40c38c:	test   eax,0xa043d493
  40c391:	clc    
  40c392:	in     al,0xd5
  40c394:	imul   esp,DWORD PTR [ecx-0x19],0xffffff98
  40c398:	sub    edx,DWORD PTR [ecx-0x7124d434]
  40c39e:	fnstenv [ebx]
  40c3a0:	(bad)  
  40c3a1:	xchg   ebp,eax
  40c3a2:	or     DWORD PTR [esi],eax
  40c3a4:	jp     0x40c41b
  40c3a6:	adc    ecx,DWORD PTR [ebx+0x56]
  40c3a9:	rcl    DWORD PTR [ecx],0xe5
  40c3ac:	add    BYTE PTR [edx],0x1a
  40c3af:	aad    0x64
  40c3b1:	sahf   
  40c3b2:	push   ecx
  40c3b3:	retf   0x2611
  40c3b6:	mov    edx,0xfb4c946e
  40c3bb:	pushf  
  40c3bc:	xchg   ecx,eax
  40c3bd:	in     eax,0x5b
  40c3bf:	cld    
  40c3c0:	lds    ecx,FWORD PTR [eax-0x65a4bbb6]
  40c3c6:	jno    0x40c3be
  40c3c8:	mov    ah,0xc1
  40c3ca:	les    ebp,FWORD PTR [eax]
  40c3cc:	jmp    edx
  40c3ce:	cwde   
  40c3cf:	out    dx,eax
  40c3d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3d1:	cvtps2pd xmm3,xmm7
  40c3d4:	fcomp  QWORD PTR [ebx+0x48]
  40c3d7:	jbe    0x40c398
  40c3d9:	shl    DWORD PTR [ebx+0x25],cl
  40c3dc:	sbb    al,0xfc
  40c3de:	fucom  st(4)
  40c3e0:	popa   
  40c3e1:	xor    edx,eax
  40c3e3:	enter  0xb4a4,0xd0
  40c3e7:	xchg   esi,eax
  40c3e8:	sub    BYTE PTR [edx],cl
  40c3ea:	sub    DWORD PTR [edx],ecx
  40c3ec:	cwde   
  40c3ed:	ja     0x40c3d3
  40c3ef:	mov    ebp,0x47bc070a
  40c3f5:	mov    esp,0xf8c01e62
  40c3fa:	cwde   
  40c3fb:	xlat   BYTE PTR ds:[ebx]
  40c3fc:	jle    0x40c3b6
  40c3fe:	jb     0x40c3ea
  40c400:	xchg   ecx,eax
  40c401:	shl    ecx,cl
  40c403:	iret   
  40c404:	xor    dl,al
  40c406:	xor    eax,0xc0613a9a
  40c40b:	push   ds
  40c40c:	dec    esp
  40c40d:	mov    DWORD PTR [esi+0x5],edx
  40c410:	pop    esp
  40c411:	aaa    
  40c412:	sbb    edi,DWORD PTR [edi]
  40c414:	sub    esi,ecx
  40c416:	sar    DWORD PTR [ecx+0x48],cl
  40c419:	push   ds
  40c41a:	push   esp
  40c41b:	jb     0x40c3e6
  40c41d:	imul   edi,eax,0xffffff98
  40c420:	loope  0x40c494
  40c422:	adc    BYTE PTR [ebx+0x2b],ch
  40c425:	push   ss
  40c426:	es es push esp
  40c429:	out    0x54,al
  40c42b:	sbb    eax,0xfa15fbe7
  40c430:	add    al,0xca
  40c432:	aaa    
  40c433:	in     al,0x4
  40c435:	xlat   BYTE PTR ds:[ebx]
  40c436:	cwde   
  40c437:	adc    edi,DWORD PTR [edi]
  40c439:	jg     0x40c3f6
  40c43b:	clc    
  40c43c:	cmp    eax,0x1b76dfd8
  40c441:	xor    al,0x2d
  40c443:	cmp    bh,BYTE PTR fs:[edi-0x19]
  40c447:	jb     0x40c484
  40c449:	test   eax,0x5be6249b
  40c44e:	stos   DWORD PTR es:[edi],eax
  40c44f:	or     dh,0x42
  40c452:	inc    ebx
  40c454:	xchg   esp,eax
  40c455:	neg    ebx
  40c457:	adc    BYTE PTR [eax-0x2f],0xff
  40c45b:	inc    ebx
  40c45c:	mov    esi,DWORD PTR [ecx]
  40c45e:	stos   DWORD PTR es:[edi],eax
  40c45f:	mov    ds:0x97549ef2,al
  40c464:	and    al,0x9d
  40c466:	leave  
  40c467:	mov    esi,0xf2aca083
  40c46c:	or     BYTE PTR [ecx-0x4e736c64],dl
  40c472:	and    al,BYTE PTR [edi+0x66]
  40c475:	daa    
  40c476:	push   eax
  40c477:	push   ebp
  40c478:	sbb    dh,BYTE PTR [eax+0x6c463f65]
  40c47e:	ds sbb dl,al
  40c481:	ja     0x40c4b6
  40c483:	in     al,0xd7
  40c485:	dec    ebx
  40c486:	or     esp,0x7c95c6a9
  40c48c:	out    0x9c,al
  40c48e:	pop    esi
  40c48f:	loop   0x40c49b
  40c491:	dec    ebp
  40c492:	adc    ebp,DWORD PTR [edi+0x11]
  40c495:	cmp    esi,DWORD PTR [ebx]
  40c497:	jmp    0xea9bc89d
  40c49c:	retf   
  40c49d:	mov    ds:0x60728074,eax
  40c4a2:	lea    eax,[esi-0x1db8015f]
  40c4a8:	inc    edi
  40c4a9:	call   0x4e29:0x68699a9b
  40c4b0:	repz xchg esp,eax
  40c4b2:	popa   
  40c4b3:	mov    cl,0xc9
  40c4b5:	pop    es
  40c4b6:	xchg   DWORD PTR [edx],esi
  40c4b8:	clc    
  40c4b9:	xor    al,0x83
  40c4bb:	jno    0x40c450
  40c4bd:	lds    eax,FWORD PTR [ebp-0x2a]
  40c4c0:	dec    edi
  40c4c1:	jle    0x40c44f
  40c4c3:	pop    ebp
  40c4c4:	cwde   
  40c4c5:	add    eax,0x5223acd5
  40c4ca:	fwait
  40c4cb:	push   cs
  40c4cc:	push   cs
  40c4cd:	out    0x89,al
  40c4cf:	push   es
  40c4d0:	scas   eax,DWORD PTR es:[edi]
  40c4d1:	leave  
  40c4d2:	pop    ecx
  40c4d3:	xor    bl,BYTE PTR ds:[esi+edi*1-0x620dcbaa]
  40c4db:	xor    ecx,DWORD PTR [eax]
  40c4dd:	pop    esi
  40c4de:	loopne 0x40c4f9
  40c4e0:	or     eax,0x53e4e6f9
  40c4e5:	jl     0x40c531
  40c4e7:	(bad)  
  40c4e8:	cmp    eax,DWORD PTR [edx+eiz*4+0x31e90296]
  40c4ef:	pop    edi
  40c4f0:	pop    ebx
  40c4f1:	push   ds
  40c4f2:	adc    BYTE PTR [eax],bl
  40c4f4:	mov    ah,dl
  40c4f6:	fcom   QWORD PTR [edi+ebp*4+0x32]
  40c4fa:	retf   0xcf52
  40c4fd:	cli    
  40c4fe:	sti    
  40c4ff:	ret    0x5c69
  40c502:	in     al,0x3c
  40c504:	retf   
  40c505:	stos   DWORD PTR es:[edi],eax
  40c506:	fistp  QWORD PTR ds:0xb021925f
  40c50c:	mov    dl,0x4d
  40c50e:	bnd jg 0x40c548
  40c511:	pop    es
  40c512:	pushf  
  40c513:	mov    dh,0x4e
  40c515:	sbb    eax,0xb4c0f9f2
  40c51a:	int    0xf0
  40c51c:	jbe    0x40c55e
  40c51e:	mov    ds:0x3bbfa594,al
  40c523:	pop    ebp
  40c524:	xor    eax,0x3fc7d37e
  40c529:	jmp    0xb8f9a7e4
  40c52e:	jbe    0x40c588
  40c530:	les    esi,FWORD PTR [esi]
  40c532:	into   
  40c533:	out    0x47,al
  40c535:	iret   
  40c536:	(bad)  
  40c537:	push   ecx
  40c538:	pop    es
  40c539:	cmp    edi,ecx
  40c53b:	nop
  40c53c:	dec    eax
  40c53d:	pusha  
  40c53e:	pop    edx
  40c53f:	ds scas eax,DWORD PTR es:[edi]
  40c541:	add    eax,DWORD PTR [edi-0x2809a0ae]
  40c547:	add    edx,ebp
  40c549:	(bad)  
  40c54a:	sahf   
  40c54b:	mov    al,ds:0xbff540ab
  40c550:	sbb    eax,0xb70e7782
  40c555:	inc    ebx
  40c556:	cmp    ch,BYTE PTR [esi+0x51]
  40c559:	sub    cl,BYTE PTR [edi-0x4760a10d]
  40c55f:	push   ebx
  40c560:	mov    eax,ds:0x314908bb
  40c565:	adc    esi,DWORD PTR [esi+0x8]
  40c568:	or     dl,BYTE PTR [esi]
  40c56a:	sub    ch,BYTE PTR [esi+0x16]
  40c56d:	mov    esi,0x5dbbcaef
  40c572:	shr    BYTE PTR [edx+ebx*2-0x36],1
  40c576:	stc    
  40c577:	mov    ah,cl
  40c579:	jmp    0x40c55a
  40c57b:	into   
  40c57c:	(bad)  
  40c57d:	xchg   edx,eax
  40c57e:	inc    esi
  40c57f:	leave  
  40c580:	jb     0x40c54c
  40c582:	jecxz  0x40c532
  40c584:	js     0x40c506
  40c586:	jbe    0x40c5ce
  40c588:	adc    DWORD PTR [eax+0x59],ebx
  40c58b:	stc    
  40c58c:	fcmovnu st,st(2)
  40c58e:	outs   dx,BYTE PTR ds:[esi]
  40c58f:	inc    ebx
  40c590:	loopne 0x40c609
  40c592:	inc    edx
  40c593:	jne    0x40c5fb
  40c595:	leave  
  40c596:	in     eax,dx
  40c597:	sbb    ebp,DWORD PTR [edi-0x11]
  40c59a:	sbb    ch,bl
  40c59c:	pop    eax
  40c59d:	push   esp
  40c59e:	test   al,0xab
  40c5a0:	out    0xf4,al
  40c5a2:	(bad)  
  40c5a3:	je     0x40c5da
  40c5a5:	sub    eax,0x175c7c66
  40c5aa:	and    eax,0x68b85c76
  40c5af:	rol    BYTE PTR [edi-0x3200788e],cl
  40c5b5:	outs   dx,BYTE PTR ds:[esi]
  40c5b6:	and    BYTE PTR [edx],al
  40c5b8:	push   cs
  40c5b9:	pop    esp
  40c5ba:	sub    ch,ch
  40c5bc:	dec    edi
  40c5bd:	out    dx,eax
  40c5be:	xlat   BYTE PTR es:[ebx]
  40c5c0:	sub    ch,cl
  40c5c2:	dec    ecx
  40c5c3:	pusha  
  40c5c4:	pop    esp
  40c5c5:	xor    al,BYTE PTR [edi-0x62]
  40c5c8:	push   es
  40c5c9:	les    edi,FWORD PTR [ecx+0x79]
  40c5cc:	and    bl,BYTE PTR [edi-0x4b]
  40c5cf:	cmc    
  40c5d0:	xor    BYTE PTR [edi],dl
  40c5d2:	lods   al,BYTE PTR ds:[esi]
  40c5d3:	sub    al,0x68
  40c5d5:	adc    al,0x13
  40c5d7:	ss out dx,al
  40c5d9:	std    
  40c5da:	mov    DWORD PTR [edx+ebx*2],esp
  40c5dd:	push   ebp
  40c5de:	sub    BYTE PTR [ebp*1+0x6a1ce89],bh
  40c5e5:	jg     0x40c650
  40c5e7:	in     eax,dx
  40c5e8:	sti    
  40c5e9:	repz fbstp TBYTE PTR [eax]
  40c5ec:	mov    edx,0xac4f2478
  40c5f1:	outs   dx,BYTE PTR ds:[esi]
  40c5f2:	xchg   ebp,eax
  40c5f3:	test   eax,0xcda6246c
  40c5f9:	mov    al,0x7f
  40c5fb:	aad    0x5a
  40c5fd:	mov    cl,0x4a
  40c5ff:	enter  0xf5c9,0x5b
  40c603:	sub    cl,cl
  40c605:	or     eax,0x21762da0
  40c60a:	pop    esp
  40c60b:	bound  ebx,QWORD PTR [edx-0x18a36156]
  40c611:	out    dx,eax
  40c612:	pop    ss
  40c613:	fistp  QWORD PTR [esi]
  40c615:	pop    esi
  40c616:	rol    esi,cl
  40c618:	int3   
  40c619:	xor    al,0x2c
  40c61b:	fistp  QWORD PTR ds:0xa90e2254
  40c621:	push   esi
  40c622:	loopne 0x40c60c
  40c624:	add    BYTE PTR [eax-0x514a5127],dl
  40c62a:	stos   BYTE PTR es:[edi],al
  40c62b:	xchg   edx,eax
  40c62c:	jecxz  0x40c69a
  40c62e:	jge    0x40c5d5
  40c630:	leave  
  40c631:	out    dx,eax
  40c632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c633:	jl     0x40c5cb
  40c635:	icebp  
  40c636:	mov    eax,0x19b40237
  40c63b:	push   edx
  40c63c:	jno    0x40c640
  40c63e:	jmp    0x40c5e5
  40c640:	jmp    0x40c5dc
  40c642:	mov    gs,WORD PTR [ebx-0xb]
  40c645:	mov    ah,0x35
  40c647:	or     cl,BYTE PTR [edx+0x4d68ed86]
  40c64d:	aas    
  40c64e:	push   0xffffffa4
  40c650:	lahf   
  40c651:	(bad)  
  40c652:	mov    esp,0xfb675542
  40c657:	loopne 0x40c5da
  40c659:	pushf  
  40c65a:	push   es
  40c65b:	inc    esp
  40c65c:	mov    ?,WORD PTR [ecx]
  40c65e:	cmp    DWORD PTR [eax+0x7db13f29],0xffffffd7
  40c665:	call   0x85ddab7
  40c66a:	adc    dh,BYTE PTR [ebx]
  40c66c:	cmp    eax,0xd84efcaa
  40c671:	inc    ecx
  40c672:	mov    al,BYTE PTR [eax-0x219b333a]
  40c678:	push   cs
  40c679:	int3   
  40c67a:	(bad)  
  40c67b:	gs jae 0x40c6d0
  40c67e:	jno    0x40c6c4
  40c680:	(bad)  
  40c681:	adc    BYTE PTR [ebx+0x564ab33c],bh
  40c687:	out    0x2c,eax
  40c689:	push   cs
  40c68a:	xchg   ebp,eax
  40c68b:	push   ebp
  40c68c:	mov    al,0x5a
  40c68e:	dec    ebp
  40c68f:	and    dh,BYTE PTR [ebp-0x45]
  40c692:	cmp    dh,BYTE PTR [ecx-0x46]
  40c695:	call   0x5446:0x7c8f4f95
  40c69c:	not    BYTE PTR [ecx]
  40c69e:	lods   al,BYTE PTR ds:[esi]
  40c69f:	repnz jmp 0xc934:0xf4b88fce
  40c6a7:	mov    esi,0xaef76282
  40c6ac:	fs retf 
  40c6ae:	ficom  WORD PTR [ebx+0x60]
  40c6b1:	lock popa 
  40c6b3:	jno    0x40c6c3
  40c6b5:	inc    ebp
  40c6b6:	test   ah,al
  40c6b8:	push   cs
  40c6b9:	or     al,0x5e
  40c6bb:	xlat   BYTE PTR ds:[ebx]
  40c6bc:	sbb    BYTE PTR ds:0x54e3d621,dl
  40c6c2:	je     0x40c6eb
  40c6c4:	jne    0x40c6a3
  40c6c6:	sbb    DWORD PTR [esi-0x26],0x32
  40c6ca:	pop    ss
  40c6cb:	mov    edi,0xdf937f66
  40c6d0:	xor    eax,0x2d85897e
  40c6d5:	mov    fs,WORD PTR [ebp+0x7]
  40c6d8:	fst    DWORD PTR [ebx+0x7e]
  40c6db:	mov    ds:0x5fdbeda5,al
  40c6e0:	dec    esp
  40c6e1:	(bad)  
  40c6e2:	sub    al,0x5d
  40c6e4:	fwait
  40c6e5:	sahf   
  40c6e6:	rcr    DWORD PTR [eax+0x6dac7158],1
  40c6ec:	in     eax,dx
  40c6ed:	adc    edx,esi
  40c6ef:	dec    esi
  40c6f0:	sbb    eax,0x715e81be
  40c6f5:	(bad)  
  40c6f6:	mov    ch,0x2c
  40c6f8:	not    bh
  40c6fa:	ret    
  40c6fb:	pop    ss
  40c6fc:	lea    esp,[eax+eax*4]
  40c6ff:	ja     0x40c70d
  40c701:	out    dx,eax
  40c702:	pop    ss
  40c703:	mov    DWORD PTR [ebx],ecx
  40c705:	icebp  
  40c706:	sub    BYTE PTR [eax],dh
  40c708:	push   es
  40c709:	mov    eax,0x4ccd671c
  40c70e:	not    cl
  40c710:	mov    ebx,0x85d521d2
  40c715:	adc    ch,BYTE PTR [edi+0x10]
  40c718:	ins    BYTE PTR es:[edi],dx
  40c719:	jb     0x40c783
  40c71b:	cmp    bl,BYTE PTR [edx-0x71]
  40c71e:	popw   ss
  40c720:	aam    0x95
  40c722:	sar    BYTE PTR [ecx+0x7571ca26],0x30
  40c729:	or     ah,BYTE PTR ds:0xc2a9b277
  40c72f:	inc    ebx
  40c730:	inc    eax
  40c731:	or     ebp,eax
  40c733:	lea    ecx,[ebx+0x24]
  40c736:	test   al,0x5b
  40c738:	push   esi
  40c739:	nop
  40c73a:	push   ss
  40c73b:	jns    0x40c73a
  40c73d:	cmp    DWORD PTR [esi],ebp
  40c73f:	pop    es
  40c740:	mov    esp,DWORD PTR [eax]
  40c742:	pop    ebx
  40c743:	mov    ds:0xeee84e23,al
  40c748:	stos   BYTE PTR es:[edi],al
  40c749:	adc    eax,0xfaa4273b
  40c74e:	outs   dx,BYTE PTR ds:[esi]
  40c74f:	enter  0xcf49,0xbf
  40c753:	arpl   WORD PTR [eax-0x5f],di
  40c756:	dec    edi
  40c757:	jno    0x40c786
  40c759:	push   ebp
  40c75a:	mov    ds:0xd2501b10,eax
  40c75f:	cmp    bh,BYTE PTR [bp+di-0x2c1f]
  40c764:	mov    ch,0x0
  40c766:	shl    DWORD PTR [ebx+0x38],cl
  40c769:	jne    0x40c74c
  40c76b:	mov    edx,0xabfff6d1
  40c770:	inc    esp
  40c771:	jmp    0x2503:0xfbe1deb9
  40c778:	dec    edx
  40c779:	sub    al,0x8a
  40c77b:	test   DWORD PTR [edi],edi
  40c77d:	push   esi
  40c77e:	mov    dl,0x16
  40c780:	dec    ebx
  40c781:	and    ecx,esi
  40c783:	adc    DWORD PTR [edx],edi
  40c785:	aam    0x45
  40c787:	jge    0x40c740
  40c789:	(bad)  
  40c78a:	xlat   BYTE PTR ds:[ebx]
  40c78b:	aas    
  40c78c:	sub    BYTE PTR [ebp+edx*4-0x47],0x76
  40c791:	dec    esi
  40c792:	lock call 0xf487c3d
  40c798:	xchg   edx,eax
  40c799:	adc    ebx,DWORD PTR [esi-0xe]
  40c79c:	mov    bh,0xb5
  40c79e:	(bad)  
  40c79f:	mov    dl,0x79
  40c7a1:	in     eax,0xe5
  40c7a3:	mov    bh,0xb8
  40c7a5:	pop    edx
  40c7a6:	xor    al,0x1d
  40c7a8:	sub    al,0x80
  40c7aa:	or     BYTE PTR [esi],dl
  40c7ac:	jnp    0x40c7fc
  40c7ae:	test   al,0x66
  40c7b0:	push   ebx
  40c7b1:	mov    dh,0x2e
  40c7b3:	xrelease mov DWORD PTR [edx],esi
  40c7b6:	ds jl  0x40c763
  40c7b9:	adc    eax,0x844152f4
  40c7be:	(bad)  
  40c7bf:	mov    ah,0xc5
  40c7c1:	inc    ebp
  40c7c2:	dec    esp
  40c7c3:	mov    ebx,0xbe92018e
  40c7c8:	aad    0xfb
  40c7ca:	and    bh,dl
  40c7cc:	(bad)  
  40c7cd:	dec    esp
  40c7ce:	xchg   ebp,ecx
  40c7d0:	jmp    0xfbdb57c0
  40c7d5:	and    eax,0x2dc7126f
  40c7da:	jecxz  0x40c786
  40c7dc:	xor    ch,BYTE PTR [ecx]
  40c7de:	xchg   edx,eax
  40c7df:	stos   DWORD PTR es:[edi],eax
  40c7e0:	and    esp,DWORD PTR [ecx+0x28]
  40c7e3:	inc    edx
  40c7e4:	f2xm1  
  40c7e6:	fcomi  st,st(3)
  40c7e8:	mov    bl,BYTE PTR [edi-0xd3c2312]
  40c7ee:	mov    esi,0xbcc70574
  40c7f3:	es jae 0x40c7a1
  40c7f6:	sbb    ecx,DWORD PTR [eax]
  40c7f8:	xchg   esi,eax
  40c7f9:	jne    0x40c845
  40c7fb:	mov    edi,0x3571576b
  40c801:	jle    0x40c878
  40c803:	icebp  
  40c804:	adc    esi,eax
  40c806:	push   ds
  40c807:	repnz or DWORD PTR [ebx-0x60],ebp
  40c80b:	(bad)  
  40c80c:	cmp    eax,0x2406a2bc
  40c811:	push   esp
  40c812:	sbb    DWORD PTR ds:0xc301b4bb,edx
  40c818:	dec    ecx
  40c819:	fdiv   DWORD PTR [eax]
  40c81b:	jno    0x40c7e9
  40c81d:	fisttp DWORD PTR [ecx+0x5d22b51b]
  40c823:	inc    ebx
  40c824:	out    dx,eax
  40c825:	push   esi
  40c826:	imul   ecx,DWORD PTR [esi],0xcc0009fa
  40c82c:	xor    DWORD PTR [ebp+0x5ebb7919],0xfffffff0
  40c833:	pushf  
  40c834:	mov    BYTE PTR [eax],0xd3
  40c837:	retf   0xdb5a
  40c83a:	js     0x40c852
  40c83c:	and    ecx,DWORD PTR [eax+0x685eed46]
  40c842:	jmp    0xa9c0da74
  40c847:	mov    ch,0x1f
  40c849:	into   
  40c84a:	out    dx,eax
  40c84b:	das    
  40c84c:	jle    0x40c7d2
  40c84e:	and    al,dh
  40c850:	gs cmp al,0x5a
  40c853:	pop    edx
  40c854:	test   al,0xcc
  40c856:	jle    0x40c8c7
  40c858:	inc    eax
  40c859:	int3   
  40c85a:	nop    DWORD PTR [eax+eax*2-0x6ba74f9c]
  40c862:	jb     0x40c881
  40c864:	dec    eax
  40c865:	dec    esp
  40c866:	dec    eax
  40c867:	repz mov edi,0x3a06dc80
  40c86d:	sub    eax,0xc71f3ca
  40c872:	and    eax,0x8e9490be
  40c877:	popa   
  40c878:	add    eax,0xff8d5ffc
  40c87d:	cs cld 
  40c87f:	xchg   ebx,eax
  40c880:	aam    0x74
  40c882:	adc    BYTE PTR [eax],cl
  40c884:	(bad)  
  40c885:	mov    eax,0x8c0c277d
  40c88a:	stos   DWORD PTR es:[edi],eax
  40c88b:	mov    ah,0x70
  40c88d:	pop    edi
  40c88e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c88f:	push   ebx
  40c890:	push   ebp
  40c891:	sub    ecx,DWORD PTR [ebx-0x53dabaea]
  40c897:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40c899:	push   ds
  40c89a:	call   0xa2927158
  40c89f:	sub    ebp,ecx
  40c8a1:	bound  esi,QWORD PTR [eax+0x6a492764]
  40c8a7:	(bad)  
  40c8a8:	mov    al,0x67
  40c8aa:	iret   
  40c8ab:	pop    ds
  40c8ac:	std    
  40c8ad:	xchg   ebx,eax
  40c8ae:	fimul  WORD PTR [ecx]
  40c8b0:	lods   al,BYTE PTR ds:[esi]
  40c8b1:	fidiv  WORD PTR ds:[ebx-0x7f288c81]
  40c8b8:	inc    DWORD PTR [ecx-0x2d3415b9]
  40c8be:	pop    ebx
  40c8bf:	das    
  40c8c0:	or     al,0xac
  40c8c2:	inc    edx
  40c8c3:	pop    edi
  40c8c4:	jp     0x40c860
  40c8c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8c7:	and    eax,0xe37e151f
  40c8cc:	test   BYTE PTR [eax],bl
  40c8ce:	adc    eax,0xba553f5f
  40c8d3:	pop    esi
  40c8d4:	adc    DWORD PTR [ebp+0x6e6aeedb],ecx
  40c8da:	pop    eax
  40c8db:	sbb    ebx,0x4c
  40c8de:	cmp    edx,DWORD PTR [ecx-0x3e73ae7d]
  40c8e4:	int3   
  40c8e5:	jne    0x40c950
  40c8e7:	loopne 0x40c8f7
  40c8e9:	jbe    0x40c934
  40c8eb:	xchg   ebx,eax
  40c8ec:	jo     0x40c8d3
  40c8ee:	ror    BYTE PTR [edi],cl
  40c8f0:	lods   al,BYTE PTR ds:[esi]
  40c8f1:	(bad)  
  40c8f2:	fisttp QWORD PTR [edx+esi*2+0x71dd49a8]
  40c8f9:	mov    ebp,0xda22c95e
  40c8fe:	imul   dh
  40c900:	das    
  40c901:	mov    cl,bh
  40c903:	inc    ecx
  40c904:	pop    edx
  40c905:	std    
  40c906:	ja     0x40c8d5
  40c908:	fimul  WORD PTR [edx+0x541bccd8]
  40c90e:	ror    BYTE PTR [ecx+0x3a07a6f5],1
  40c914:	pop    esp
  40c915:	push   cs
  40c916:	test   eax,0xea98c9b
  40c91b:	out    0x1f,al
  40c91d:	jl     0x40c8c2
  40c91f:	jb     0x40c8d8
  40c921:	js     0x40c96a
  40c923:	xchg   ebx,eax
  40c924:	inc    esp
  40c925:	cmp    DWORD PTR [edx],ebx
  40c927:	je     0x40c8be
  40c929:	and    BYTE PTR [edx],0x51
  40c92c:	inc    edi
  40c92d:	loopne 0x40c97c
  40c92f:	dec    edx
  40c930:	jg     0x40c94c
  40c932:	cmp    edx,DWORD PTR [edx]
  40c934:	xor    al,0x45
  40c936:	in     eax,0xf0
  40c938:	shl    BYTE PTR [esi-0x72fa24b5],1
  40c93e:	fist   DWORD PTR [edi-0x6492cbca]
  40c944:	or     bl,ah
  40c946:	cmp    ch,dl
  40c948:	xlat   BYTE PTR ds:[ebx]
  40c949:	pusha  
  40c94a:	clc    
  40c94b:	and    al,0xe8
  40c94d:	lods   al,BYTE PTR ds:[esi]
  40c94e:	stos   BYTE PTR es:[edi],al
  40c94f:	in     eax,dx
  40c950:	xchg   DWORD PTR [ecx],esp
  40c952:	push   es
  40c953:	inc    ecx
  40c954:	pop    es
  40c955:	inc    ecx
  40c956:	es movs DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40c959:	in     al,dx
  40c95a:	dec    ebp
  40c95b:	mov    edi,0x1ba0eaf1
  40c960:	cli    
  40c961:	fst    DWORD PTR [ecx-0x48c05b2]
  40c967:	dec    ecx
  40c968:	mov    edi,0x870f0b8c
  40c96d:	xchg   ecx,edi
  40c96f:	sahf   
  40c970:	ret    0xcb6e
  40c973:	and    eax,0x7653c235
  40c978:	popf   
  40c979:	adc    BYTE PTR [esi],dh
  40c97b:	push   edi
  40c97c:	fisttp QWORD PTR [ebx-0x3]
  40c97f:	sbb    al,0x79
  40c981:	jne    0x40c9da
  40c983:	clc    
  40c984:	fwait
  40c985:	rcr    DWORD PTR [ecx-0x557b03b5],1
  40c98b:	arpl   sp,dx
  40c98d:	sbb    esp,edx
  40c98f:	pop    edi
  40c990:	and    BYTE PTR [ecx-0x13168325],0xac
  40c997:	sub    DWORD PTR [esi],ebx
  40c999:	call   0xde872dec
  40c99e:	and    al,0xa0
  40c9a0:	mov    edi,0xa7a9d894
  40c9a5:	cmp    ecx,DWORD PTR [eax-0x57]
  40c9a8:	out    0x59,al
  40c9aa:	in     eax,dx
  40c9ab:	iret   
  40c9ac:	mov    edx,0xb17bca0e
  40c9b1:	push   eax
  40c9b2:	scas   eax,DWORD PTR es:[edi]
  40c9b3:	add    ecx,edx
  40c9b5:	imul   esp,DWORD PTR [ebx+esi*2],0xffffffd7
  40c9b9:	stos   BYTE PTR es:[edi],al
  40c9ba:	mov    esp,0x6ad52eb5
  40c9bf:	dec    ebx
  40c9c0:	call   0x996d2fc1
  40c9c5:	ret    
  40c9c6:	fmul   QWORD PTR [eax+0x21]
  40c9c9:	and    eax,0x817b1927
  40c9ce:	push   0xffffffa3
  40c9d0:	addr16 cmp dl,ch
  40c9d3:	test   al,0xe7
  40c9d5:	xlat   BYTE PTR ds:[ebx]
  40c9d6:	imul   ebx,edx,0x428785ae
  40c9dc:	(bad)
  40c9e0:	out    dx,eax
  40c9e1:	xor    al,0xc5
  40c9e3:	jp     0x40ca62
  40c9e5:	aaa    
  40c9e6:	push   es
  40c9e7:	adc    al,0x9
  40c9e9:	mov    ah,0x35
  40c9eb:	es xchg esi,eax
  40c9ed:	inc    ebx
  40c9ee:	addr16 das 
  40c9f0:	push   esp
  40c9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9f2:	shl    edi,0x3d
  40c9f5:	repnz and ch,BYTE PTR [ecx]
  40c9f8:	mov    al,0xe3
  40c9fa:	xor    bl,bl
  40c9fc:	push   ecx
  40c9fd:	dec    esi
  40c9fe:	jo     0x40c9fa
  40ca00:	in     eax,0x6d
  40ca02:	xchg   edx,eax
  40ca03:	push   edx
  40ca04:	inc    eax
  40ca05:	ins    DWORD PTR es:[edi],dx
  40ca06:	cld    
  40ca07:	ds push edx
  40ca09:	mov    gs,WORD PTR [ecx-0x1cb12116]
  40ca0f:	outs   dx,BYTE PTR ds:[esi]
  40ca10:	mov    dl,0x8f
  40ca12:	dec    ecx
  40ca13:	mov    ebx,0x4c4d76a1
  40ca18:	test   DWORD PTR [eax+0x6e9ba9d7],esp
  40ca1e:	push   0xffffffea
  40ca20:	xor    edi,0xfa7fc3b6
  40ca26:	scas   al,BYTE PTR es:[edi]
  40ca27:	repnz and al,0xba
  40ca2a:	enter  0x46a2,0x67
  40ca2e:	hlt    
  40ca2f:	or     al,0x54
  40ca31:	lods   eax,DWORD PTR ds:[esi]
  40ca32:	jno    0x40ca49
  40ca34:	adc    al,0xb0
  40ca36:	fdivr  st,st(0)
  40ca38:	fstp   DWORD PTR [edx+ebp*1-0x1eeefbcd]
  40ca3f:	and    DWORD PTR [eax+0x24],esi
  40ca42:	clc    
  40ca43:	out    0x2f,eax
  40ca45:	pop    ebx
  40ca46:	pop    ebx
  40ca47:	cdq    
  40ca48:	jae    0x40caab
  40ca4a:	cmp    eax,0x35246413
  40ca4f:	xchg   esi,eax
  40ca50:	jmp    0xcd2b9a12
  40ca55:	inc    edi
  40ca56:	sub    eax,0xd5cfa354
  40ca5b:	xor    BYTE PTR [ecx+0x1ff17030],ah
  40ca61:	ss das 
  40ca63:	js     0x40ca47
  40ca65:	dec    edi
  40ca66:	mov    eax,0x448bbab5
  40ca6b:	out    0xdd,al
  40ca6d:	and    BYTE PTR [edi+0x59038ee9],dl
  40ca73:	dec    edx
  40ca74:	(bad)  
  40ca76:	ret    
  40ca77:	dec    ecx
  40ca78:	pushf  
  40ca79:	out    0xb2,al
  40ca7b:	inc    ebx
  40ca7c:	add    eax,0xe224e664
  40ca81:	cmc    
  40ca82:	mov    eax,ds:0xa5a8a25d
  40ca87:	mov    cl,0x2b
  40ca89:	(bad)  
  40ca8a:	mov    dl,0xd2
  40ca8c:	outs   dx,BYTE PTR ds:[esi]
  40ca8d:	inc    edx
  40ca8e:	test   al,0xc8
  40ca90:	and    bh,BYTE PTR [edi-0x53]
  40ca93:	jg     0x40ca3e
  40ca95:	jmp    0xdf0c0de1
  40ca9a:	mov    esp,0xcc0c8f90
  40ca9f:	xchg   ebp,ecx
  40caa1:	push   0x4971db20
  40caa6:	les    ebp,FWORD PTR ds:0x5d792d2
  40caac:	and    DWORD PTR [esi+ebx*4],esi
  40caaf:	mov    al,0x4d
  40cab1:	or     al,0x26
  40cab3:	push   ebx
  40cab4:	mov    dl,0x8a
  40cab6:	loop   0x40cb0d
  40cab8:	js     0x40cafe
  40caba:	jns    0x40cb33
  40cabc:	sbb    eax,0xf9a82178
  40cac1:	sahf   
  40cac2:	int    0x6f
  40cac4:	fnsave [edi-0x5b]
  40cac7:	push   ds
  40cac8:	dec    ebx
  40cac9:	neg    BYTE PTR [eax]
  40cacb:	add    cl,BYTE PTR [edx]
  40cacd:	push   edx
  40cace:	xchg   BYTE PTR [ebx+ecx*2+0x9d8aad1],bh
  40cad5:	lahf   
  40cad6:	(bad)  
  40cad7:	pop    ecx
  40cad8:	sbb    DWORD PTR [eax],ecx
  40cada:	pop    eax
  40cadb:	mov    WORD PTR [edi-0x34317d7f],es
  40cae1:	xchg   esi,eax
  40cae2:	cmp    DWORD PTR [edi],ecx
  40cae4:	jmp    0x466c:0x8959832c
  40caeb:	icebp  
  40caec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caed:	imul   esp,DWORD PTR [edi-0x2c],0xffffffab
  40caf1:	out    dx,eax
  40caf2:	dec    eax
  40caf3:	int    0x8d
  40caf5:	jl     0x40cac5
  40caf7:	(bad)  
  40caf8:	js     0x40cb38
  40cafa:	xor    eax,0xce9e6009
  40caff:	cmp    DWORD PTR [ecx],0xffffffbe
  40cb02:	fadd   QWORD PTR [eax+ebx*2-0x9]
  40cb06:	das    
  40cb07:	xchg   ecx,eax
  40cb08:	cwde   
  40cb09:	xor    al,0x3c
  40cb0b:	retf   0xb400
  40cb0e:	mov    bh,0xa2
  40cb10:	hlt    
  40cb11:	inc    edx
  40cb12:	fidivr DWORD PTR [esi+0x7b908fd7]
  40cb18:	retf   
  40cb19:	or     eax,0x14277732
  40cb1e:	xchg   edi,eax
  40cb1f:	and    ch,BYTE PTR [ecx]
  40cb21:	inc    esi
  40cb22:	and    ebx,DWORD PTR [edx+ebx*8-0x5]
  40cb26:	sbb    ah,BYTE PTR [ebp+ebp*2+0x37552129]
  40cb2d:	repz jecxz 0x40cad0
  40cb30:	outs   dx,DWORD PTR ds:[esi]
  40cb31:	nop
  40cb32:	cld    
  40cb33:	bound  eax,QWORD PTR [esi-0x19585f84]
  40cb39:	loop   0x40cac3
  40cb3b:	pop    edx
  40cb3c:	add    ch,al
  40cb3e:	jle    0x40cb49
  40cb40:	fdiv   DWORD PTR [eax+edi*8-0x62]
  40cb44:	sub    edx,edi
  40cb46:	or     eax,0xe978ce1f
  40cb4b:	fnstsw WORD PTR [edx]
  40cb4d:	jmp    0xdd151bc3
  40cb52:	and    al,0x34
  40cb54:	retf   
  40cb55:	mov    DWORD PTR [ebp-0x43f69eba],ebp
  40cb5b:	pop    ds
  40cb5c:	pop    eax
  40cb5d:	or     BYTE PTR [esi+0x3f],ah
  40cb60:	xchg   ebx,eax
  40cb61:	mov    cl,0x72
  40cb63:	in     eax,dx
  40cb64:	in     eax,0xd
  40cb66:	js     0x6326d14b
  40cb6c:	sbb    esp,DWORD PTR [edx+0x52]
  40cb6f:	leave  
  40cb70:	icebp  
  40cb71:	lea    esi,[edi-0x22]
  40cb74:	inc    ebx
  40cb75:	sti    
  40cb76:	xchg   edi,eax
  40cb77:	add    eax,0x893a9ce1
  40cb7c:	mov    al,ds:0xb7c58550
  40cb81:	dec    eax
  40cb82:	mov    ebx,0xfa27c1f5
  40cb87:	and    BYTE PTR [ecx],0xbf
  40cb8a:	inc    ebx
  40cb8b:	cli    
  40cb8c:	xor    dh,bl
  40cb8e:	loope  0x40cbaf
  40cb90:	aam    0x6f
  40cb92:	mov    DWORD PTR [esi-0x1c5a7598],ebx
  40cb98:	into   
  40cb99:	js     0x40cb9e
  40cb9b:	test   bh,0xcc
  40cb9e:	into   
  40cb9f:	ret    0x13fb
  40cba2:	push   edi
  40cba3:	push   0x46a43058
  40cba8:	neg    al
  40cbaa:	fiadd  DWORD PTR [edx-0x4c234c50]
  40cbb0:	dec    eax
  40cbb1:	push   eax
  40cbb2:	das    
  40cbb3:	inc    esp
  40cbb4:	jmp    0xb2b3:0x29a43268
  40cbbb:	add    DWORD PTR [esi-0x6f],ebx
  40cbbe:	lock sbb ecx,esi
  40cbc1:	(bad)  
  40cbc2:	je     0x40cc34
  40cbc4:	pop    edi
  40cbc5:	cs mov al,0x6c
  40cbc8:	lods   eax,DWORD PTR ds:[esi]
  40cbc9:	ret    0xf691
  40cbcc:	adc    edx,esi
  40cbce:	xlat   BYTE PTR ds:[ebx]
  40cbcf:	and    DWORD PTR [ebx],edi
  40cbd1:	jbe    0x40cc37
  40cbd3:	enter  0xfedf,0x46
  40cbd7:	push   ebp
  40cbd8:	sub    eax,DWORD PTR [ebx-0x27b36cf9]
  40cbde:	adc    DWORD PTR [ebx+eiz*1+0xa],0xffffffc9
  40cbe3:	adc    DWORD PTR [ecx-0x702f83a0],edi
  40cbe9:	push   0xfd0f3852
  40cbee:	in     eax,0x34
  40cbf0:	lock mov edx,0xa77fe290
  40cbf6:	xor    al,0x6b
  40cbf8:	push   esi
  40cbf9:	add    eax,0x4af5ea6c
  40cbfe:	adc    dl,BYTE PTR [ecx]
  40cc00:	xchg   ebp,eax
  40cc01:	or     eax,0x7e7be173
  40cc06:	inc    ecx
  40cc07:	mov    ch,BYTE PTR [ecx-0x69]
  40cc0a:	push   0x9
  40cc0c:	sub    al,0xa2
  40cc0e:	(bad)  
  40cc0f:	add    BYTE PTR [edi+ebp*1],al
  40cc12:	dec    eax
  40cc13:	adc    edi,esi
  40cc15:	sub    eax,0x9f232896
  40cc1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc1b:	mov    eax,ds:0x44c62ef6
  40cc20:	xor    eax,0xe7ae9bb2
  40cc25:	out    dx,al
  40cc26:	jae    0x40cbec
  40cc28:	retf   0xec13
  40cc2b:	jmp    0x2e11:0x359b9787
  40cc32:	push   0xffffffb5
  40cc34:	test   eax,0x2c8310d8
  40cc39:	adc    bh,BYTE PTR [eax+esi*1-0x30af3fac]
  40cc40:	inc    esi
  40cc41:	jmp    0x40cc4f
  40cc43:	lock out 0xc4,eax
  40cc46:	sub    bl,BYTE PTR [esi]
  40cc48:	div    BYTE PTR [edx-0x24]
  40cc4b:	outs   dx,BYTE PTR ds:[esi]
  40cc4c:	inc    ebp
  40cc4d:	repnz sub al,0x9e
  40cc50:	xchg   esp,eax
  40cc51:	inc    edx
  40cc52:	in     eax,0x46
  40cc54:	jle    0x40cc3c
  40cc56:	int3   
  40cc57:	arpl   WORD PTR [ecx],di
  40cc59:	int    0x4d
  40cc5b:	out    dx,al
  40cc5c:	into   
  40cc5d:	mov    dh,0xaa
  40cc5f:	int3   
  40cc60:	aad    0x12
  40cc62:	mov    cl,BYTE PTR [edi-0x573a5f5]
  40cc68:	repnz inc eax
  40cc6a:	and    ch,BYTE PTR [eax+ebp*8]
  40cc6d:	fisubr WORD PTR [esp+ebx*4-0x2e]
  40cc71:	stc    
  40cc72:	out    dx,al
  40cc73:	mov    ecx,0xbc76157b
  40cc78:	rcr    BYTE PTR ds:0x1ef8056c,cl
  40cc7e:	mov    cl,0x9a
  40cc80:	sbb    DWORD PTR [edi+0x3a],edi
  40cc83:	and    al,0xf0
  40cc85:	mov    al,ds:0x4fcab2ac
  40cc8a:	sub    BYTE PTR [eax],ah
  40cc8c:	xchg   esi,eax
  40cc8d:	fwait
  40cc8e:	data16 stos BYTE PTR es:[edi],al
  40cc90:	lahf   
  40cc91:	sbb    al,0x7a
  40cc93:	mov    WORD PTR [ecx],cs
  40cc95:	loope  0x40cc44
  40cc97:	fst    QWORD PTR [edx]
  40cc99:	and    BYTE PTR [edx+0x7d1d3ec8],dh
  40cc9f:	or     DWORD PTR [eax+0x4e],esp
  40cca2:	adc    ah,ah
  40cca4:	ds leave 
  40cca6:	dec    ecx
  40cca7:	sub    al,0xeb
  40cca9:	push   edx
  40ccaa:	jmp    0x40cd12
  40ccac:	xchg   ecx,eax
  40ccad:	or     eax,0x74280dd1
  40ccb2:	cmp    esi,DWORD PTR [ebp-0x4]
  40ccb5:	xchg   esp,eax
  40ccb6:	jmp    0x40cd18
  40ccb8:	jp     0x40ccb6
  40ccba:	test   al,0x18
  40ccbc:	sub    BYTE PTR [ebp+0x61],ah
  40ccbf:	sub    esp,eax
  40ccc1:	push   edi
  40ccc2:	add    al,0x24
  40ccc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccc5:	dec    sp
  40ccc7:	mov    edx,0x2661f1cf
  40cccc:	pop    es
  40cccd:	xor    BYTE PTR [esi+ecx*1+0x6c4dfd13],ch
  40ccd4:	sbb    ebp,DWORD PTR [ebx+0x74]
  40ccd7:	stos   DWORD PTR es:[edi],eax
  40ccd8:	push   esi
  40ccd9:	dec    edi
  40ccda:	je     0x40cc6e
  40ccdc:	pop    edi
  40ccdd:	add    al,0x9f
  40ccdf:	aaa    
  40cce0:	sbb    bh,ch
  40cce2:	inc    ecx
  40cce3:	pusha  
  40cce4:	out    0xb7,al
  40cce6:	jl     0x40cd16
  40cce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cce9:	outs   dx,DWORD PTR ds:[esi]
  40ccea:	cmp    eax,0x5c81613c
  40ccef:	popf   
  40ccf0:	xor    bh,dh
  40ccf2:	jb     0x40ccf9
  40ccf4:	stc    
  40ccf5:	jmp    0x71d7:0xc4d5d1a1
  40ccfc:	jmp    0x811c7da6
  40cd01:	loopne 0x40ccb4
  40cd03:	popf   
  40cd04:	xchg   ebx,eax
  40cd05:	and    BYTE PTR [esi],al
  40cd07:	out    dx,al
  40cd08:	add    DWORD PTR [edi-0x4bb8a381],ecx
  40cd0e:	call   0x7aed:0x9527831b
  40cd15:	or     DWORD PTR [esi-0x2ac8b787],ebp
  40cd1b:	mov    ds:0x50b861ff,al
  40cd20:	adc    esi,DWORD PTR [esi-0x4699029c]
  40cd26:	and    al,0x2a
  40cd28:	jae    0x40cd86
  40cd2a:	loopne 0x40cd47
  40cd2c:	mov    ecx,0xb8144566
  40cd31:	or     eax,0x242b74d6
  40cd36:	push   ecx
  40cd37:	mul    DWORD PTR [ebp+0x57cc2ed0]
  40cd3d:	idiv   esi
  40cd3f:	jp     0x40cd46
  40cd41:	xchg   edx,eax
  40cd42:	dec    esi
  40cd43:	and    al,0x78
  40cd45:	aas    
  40cd46:	mov    edx,0x9de6465c
  40cd4b:	fcomp  DWORD PTR [ebx-0xdaed8ee]
  40cd51:	adc    eax,0x8752c581
  40cd56:	std    
  40cd57:	fsubr  DWORD PTR [eax-0x5c]
  40cd5a:	je     0x40cd69
  40cd5c:	cs mov dh,dh
  40cd5f:	sbb    dh,ah
  40cd61:	inc    esi
  40cd62:	jle    0x40ccff
  40cd64:	in     al,0xe2
  40cd66:	or     DWORD PTR [edi+0x4c1a0f47],edi
  40cd6c:	lea    ebx,[ebx]
  40cd6e:	(bad)  
  40cd6f:	(bad)  
  40cd70:	adc    BYTE PTR [eax+0x1e],0xda
  40cd74:	push   eax
  40cd75:	aam    0x90
  40cd77:	mov    bh,0xcb
  40cd79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd7a:	and    BYTE PTR [esi+0x1a68ab95],0xcf
  40cd81:	ds or  al,0x78
  40cd84:	lock push ss
  40cd86:	sbb    BYTE PTR [ecx],ah
  40cd88:	mov    bh,0x67
  40cd8a:	pop    ecx
  40cd8b:	es or  al,0x9b
  40cd8e:	adc    DWORD PTR [esi-0x4e3011dc],esi
  40cd94:	jecxz  0x40ce11
  40cd96:	cs push eax
  40cd98:	push   0xffffff85
  40cd9a:	and    eax,0xe7bed1a5
  40cd9f:	ins    BYTE PTR es:[edi],dx
  40cda0:	jno    0x40cdfc
  40cda2:	add    eax,0xb9a7a2af
  40cda7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cda8:	mov    esi,0xa0161b5c
  40cdad:	sbb    cl,0xf9
  40cdb0:	jle    0x40cdd3
  40cdb2:	cli    
  40cdb3:	push   0x6677c0b5
  40cdb8:	call   0xf709:0xbd07f0e3
  40cdbf:	int    0xbe
  40cdc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdc2:	ret    
  40cdc3:	inc    eax
  40cdc4:	pop    ebx
  40cdc5:	stos   BYTE PTR es:[edi],al
  40cdc6:	or     eax,0xe22ed2f8
  40cdcb:	stos   BYTE PTR es:[edi],al
  40cdcc:	addr16 and al,0x27
  40cdcf:	adc    edx,DWORD PTR [ebx-0x2d2a1c3d]
  40cdd5:	ss push cs
  40cdd7:	jne    0x40cdd6
  40cdd9:	mov    bh,0xe8
  40cddb:	iret   
  40cddc:	mov    ds:0xeaa8020e,al
  40cde1:	xchg   ebp,eax
  40cde2:	cli    
  40cde3:	pop    es
  40cde4:	mov    WORD PTR [eax+0x4f],?
  40cde7:	outs   dx,BYTE PTR ds:[esi]
  40cde8:	sti    
  40cde9:	pop    es
  40cdea:	cmp    eax,edi
  40cdec:	or     bh,BYTE PTR [edx+0xf3b5e31]
  40cdf2:	ret    0x15e9
  40cdf5:	mov    dl,0xb9
  40cdf7:	mov    DWORD PTR [edi],ebx
  40cdf9:	jge    0x40ce77
  40cdfb:	add    dh,BYTE PTR [edx]
  40cdfd:	jl     0x40cdb7
  40cdff:	aad    0x30
  40ce01:	test   al,0x8c
  40ce03:	sub    edi,DWORD PTR [ecx]
  40ce05:	push   edx
  40ce06:	outs   dx,DWORD PTR ds:[esi]
  40ce07:	push   cs
  40ce08:	pop    ebp
  40ce09:	or     DWORD PTR ds:0x74746c3a,ebx
  40ce0f:	inc    esp
  40ce10:	dec    ecx
  40ce11:	loope  0x40ce16
  40ce13:	out    dx,al
  40ce14:	lahf   
  40ce15:	imul   eax,eax,0xd
  40ce18:	addr16 mov dh,0xdb
  40ce1b:	retf   
  40ce1c:	jle    0x40ce20
  40ce1e:	sub    ah,0x3a
  40ce21:	loope  0x40cda4
  40ce23:	push   edi
  40ce24:	dec    ecx
  40ce25:	sbb    edx,DWORD PTR [ebx-0x758c1f0a]
  40ce2b:	imul   edi,DWORD PTR [edi+0x349775c7],0x45
  40ce32:	cwde   
  40ce33:	call   0x245e:0x9ecf1029
  40ce3a:	xor    DWORD PTR [ebp+0x69],edx
  40ce3d:	sahf   
  40ce3e:	clc    
  40ce3f:	adc    esi,DWORD PTR [ecx+0x60302e7a]
  40ce45:	add    esp,DWORD PTR [edi+0x4dcd86fc]
  40ce4b:	fiadd  DWORD PTR [edi-0x55]
  40ce4e:	call   0xa953:0xca6a6951
  40ce55:	or     BYTE PTR [ebx+esi*1],cl
  40ce58:	es dec esp
  40ce5a:	push   0xc7c46c33
  40ce5f:	mov    ecx,0x62cefba3
  40ce64:	push   ss
  40ce65:	inc    esp
  40ce66:	pop    eax
  40ce67:	and    DWORD PTR es:[eax-0xb],eax
  40ce6b:	xchg   edi,eax
  40ce6c:	popa   
  40ce6d:	sbb    eax,DWORD PTR [ebx+0x673cab51]
  40ce73:	inc    BYTE PTR [ebx-0x12]
  40ce76:	or     dh,ch
  40ce78:	push   cs
  40ce79:	xchg   ebx,eax
  40ce7a:	sbb    ebp,eax
  40ce7c:	cmp    eax,DWORD PTR [esi]
  40ce7e:	dec    ebx
  40ce7f:	dec    esi
  40ce80:	mov    dh,0x60
  40ce83:	sub    edi,esi
  40ce85:	fild   DWORD PTR [edx-0x18]
  40ce88:	ss jno 0x40cec8
  40ce8b:	repnz call 0x6c0:0x311aa922
  40ce93:	outs   dx,DWORD PTR ds:[esi]
  40ce94:	and    ah,BYTE PTR [esi+0x303f6cc0]
  40ce9a:	retf   
  40ce9b:	inc    edx
  40ce9c:	jb     0x40cf0c
  40ce9e:	ror    edx,cl
  40cea0:	mov    ecx,0xe56b248e
  40cea5:	mov    ah,0xd7
  40cea7:	frstpm(287 only) 
  40cea9:	leave  
  40ceaa:	ds xchg ebp,eax
  40ceac:	ss in  eax,0x9
  40ceaf:	xchg   ebx,eax
  40ceb0:	sbb    DWORD PTR [edx-0x332e682b],0x760036cc
  40ceba:	push   eax
  40cebb:	shr    DWORD PTR [ebx+0x27],1
  40cebe:	jbe    0x40cea7
  40cec0:	mov    ds:0xcd058134,eax
  40cec5:	jae    0x40ce49
  40cec7:	loope  0x40ce53
  40cec9:	pop    esp
  40ceca:	mov    ebx,0xae208924
  40cecf:	inc    esp
  40ced0:	xchg   edx,eax
  40ced1:	cmc    
  40ced2:	mov    cl,0x36
  40ced4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ced5:	pop    ebp
  40ced6:	or     DWORD PTR [ebp+0x1533b348],eax
  40cedc:	cmp    cl,BYTE PTR [esp+edx*1]
  40cedf:	fild   DWORD PTR [ebx-0x27]
  40cee2:	bound  esi,QWORD PTR [ebx-0x12]
  40cee5:	xchg   edx,eax
  40cee6:	popa   
  40cee7:	jnp    0x40ceeb
  40cee9:	dec    edi
  40ceea:	sub    ch,BYTE PTR [ebp-0x2e01bede]
  40cef0:	lods   al,BYTE PTR ds:[esi]
  40cef1:	push   ecx
  40cef2:	and    eax,0xfc123ba6
  40cef7:	pop    esi
  40cef8:	call   0xe63e:0xb27c9d58
  40ceff:	js     0x40cf70
  40cf01:	outs   dx,DWORD PTR ds:[esi]
  40cf02:	mov    esi,ecx
  40cf04:	mov    fs,WORD PTR [esi]
  40cf06:	mov    esp,0x422e1637
  40cf0b:	inc    ebx
  40cf0c:	xor    edx,DWORD PTR [edx-0x1d918b3e]
  40cf12:	pop    esp
  40cf13:	(bad)  [ebx-0x50a466a5]
  40cf19:	test   al,0x7a
  40cf1b:	jle    0x40cf01
  40cf1d:	in     al,0xd0
  40cf1f:	repz fimul DWORD PTR [eax-0x7c6922f9]
  40cf26:	(bad)  
  40cf27:	jl     0x40cedd
  40cf29:	popf   
  40cf2a:	sub    cl,BYTE PTR [edi+0x71]
  40cf2d:	sub    BYTE PTR [esi],al
  40cf2f:	mov    al,ds:0xf7df4b9
  40cf34:	aas    
  40cf35:	sub    DWORD PTR [edi-0x30603262],0x56
  40cf3c:	int3   
  40cf3d:	inc    ecx
  40cf3e:	and    edi,DWORD PTR [ebp+0x7a5c3daa]
  40cf44:	test   DWORD PTR [ebp-0x1d],ebx
  40cf47:	fst    QWORD PTR [edi-0x2b43a6ad]
  40cf4d:	jge    0x40cede
  40cf4f:	sbb    esi,DWORD PTR [ebx+0x3c]
  40cf52:	retf   0xf4a0
  40cf55:	mov    ecx,eax
  40cf57:	xchg   edx,eax
  40cf58:	inc    ebp
  40cf59:	sub    DWORD PTR [ebp-0x4d2cf5b3],esp
  40cf5f:	int3   
  40cf60:	into   
  40cf61:	ins    DWORD PTR es:[edi],dx
  40cf62:	mov    esi,eax
  40cf64:	pop    eax
  40cf65:	push   ebp
  40cf66:	mov    ebp,0x26278801
  40cf6b:	fs push ebp
  40cf6d:	(bad)  
  40cf6e:	out    dx,eax
  40cf6f:	aad    0x12
  40cf71:	call   FWORD PTR [eax-0x27]
  40cf74:	out    dx,al
  40cf75:	scas   eax,DWORD PTR es:[edi]
  40cf76:	sbb    eax,0xa970830b
  40cf7b:	xlat   BYTE PTR ds:[ebx]
  40cf7c:	in     eax,0x28
  40cf7e:	addr16 push edx
  40cf80:	mov    es,WORD PTR [eax+0x128802ee]
  40cf86:	out    0xf8,eax
  40cf88:	(bad)  
  40cf89:	jp     0x40cf95
  40cf8b:	add    ecx,ecx
  40cf8d:	test   DWORD PTR [esi+0x781835ff],esi
  40cf93:	in     al,dx
  40cf94:	outs   dx,BYTE PTR ds:[esi]
  40cf95:	fdivr  QWORD PTR [esi]
  40cf97:	loopne 0x40cfba
  40cf99:	mov    bh,0x22
  40cf9b:	mov    dl,0xa3
  40cf9d:	sti    
  40cf9e:	test   eax,0x9fabc176
  40cfa3:	cwde   
  40cfa4:	lahf   
  40cfa5:	adc    ecx,DWORD PTR [edx+0x26e5dbda]
  40cfab:	cld    
  40cfac:	call   FWORD PTR [ecx]
  40cfae:	xor    eax,0xdb48ee18
  40cfb3:	call   0x65645594
  40cfb8:	out    dx,eax
  40cfb9:	push   edi
  40cfba:	inc    esi
  40cfbb:	push   edx
  40cfbc:	jae    0x40cfbc
  40cfbe:	or     DWORD PTR [esi+0x325e3cff],ebp
  40cfc4:	cmp    bl,BYTE PTR [edi+edx*8+0x1]
  40cfc8:	out    0x63,al
  40cfca:	pop    esi
  40cfcb:	test   cl,bh
  40cfcd:	cs out dx,eax
  40cfcf:	jge    0x40cfbb
  40cfd1:	xchg   edi,eax
  40cfd2:	loopne 0x40cf96
  40cfd4:	push   edx
  40cfd5:	jo     0x40cfea
  40cfd7:	xor    DWORD PTR [esi+eiz*4-0x4869b556],edx
  40cfde:	cmp    BYTE PTR [edi+0x7f737e27],cl
  40cfe4:	xor    BYTE PTR [ebx],ch
  40cfe6:	cmp    esp,DWORD PTR [edx]
  40cfe8:	mul    DWORD PTR [esi+0x6e]
  40cfeb:	icebp  
  40cfec:	mov    ebp,0xbcc5ed2b
  40cff1:	aas    
  40cff2:	inc    DWORD PTR [esi-0x7b8b3aaf]
  40cff8:	sub    bh,BYTE PTR [edi]
  40cffa:	cmp    edx,DWORD PTR [esi+0x6c0cc275]
  40d000:	inc    BYTE PTR [esi]
  40d002:	dec    edx
  40d003:	push   ss
  40d004:	in     al,0xb7
  40d006:	ret    
  40d007:	adc    eax,0x57c92ded
  40d00c:	aam    0x16
  40d00e:	out    dx,al
  40d00f:	dec    ebp
  40d010:	leave  
  40d011:	lods   al,BYTE PTR ds:[esi]
  40d012:	mov    ah,0xa3
  40d014:	(bad)  
  40d015:	fdivr  DWORD PTR [esi-0x22]
  40d018:	or     bl,cl
  40d01a:	jns    0x40d045
  40d01c:	cdq    
  40d01d:	jne    0x40cfef
  40d01f:	(bad)  
  40d020:	sti    
  40d021:	sbb    ah,bl
  40d023:	mov    al,ds:0xd8d455e0
  40d028:	mov    es:0x3c1319d0,eax
  40d02e:	mov    eax,ds:0xb929d978
  40d033:	and    DWORD PTR ds:0x4dd57be,esi
  40d039:	scas   al,BYTE PTR es:[edi]
  40d03a:	(bad)  
  40d03b:	pushf  
  40d03c:	fidivr DWORD PTR [edx-0xf]
  40d03f:	hlt    
  40d040:	inc    ebx
  40d041:	adc    eax,DWORD PTR [ebp+0x66]
  40d044:	mov    edi,0x995c73e4
  40d049:	inc    ebp
  40d04a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d04b:	dec    ebx
  40d04c:	lds    ecx,FWORD PTR [eax+eiz*8]
  40d04f:	xchg   edi,eax
  40d050:	add    BYTE PTR [edx],0x1
  40d053:	push   ecx
  40d054:	hlt    
  40d055:	call   0xec29:0xf1d21e16
  40d05c:	mov    ebp,DWORD PTR [edi]
  40d05e:	adc    al,ah
  40d060:	cmp    eax,DWORD PTR [edi+esi*4-0x78]
  40d064:	pop    edi
  40d065:	scas   al,BYTE PTR es:[edi]
  40d066:	push   es
  40d067:	imul   esp,DWORD PTR [ecx-0x1f],0xffffffe0
  40d06b:	arpl   WORD PTR [esp+eax*4],dx
  40d06e:	test   DWORD PTR [ebp-0x7b],edi
  40d071:	cmp    BYTE PTR [edx+ecx*4+0x38],ch
  40d075:	cmc    
  40d076:	xchg   ebx,eax
  40d077:	mov    ecx,0x9ccb376
  40d07c:	xchg   edx,eax
  40d07d:	int    0xcb
  40d07f:	and    eax,0xd2cd0964
  40d084:	inc    edx
  40d085:	pop    edi
  40d086:	jp     0x40d04a
  40d088:	test   BYTE PTR cs:[edi],0x3d
  40d08c:	rcr    ecx,1
  40d08e:	pop    edx
  40d08f:	and    eax,esp
  40d091:	mov    ds:0x5f2bacb,al
  40d096:	lock lods al,BYTE PTR ds:[esi]
  40d098:	loopne 0x40d049
  40d09a:	loopne 0x40d076
  40d09c:	mov    ebx,0x6a0089ab
  40d0a1:	pop    es
  40d0a2:	sbb    al,BYTE PTR [ebp+0x4eb6fb6e]
  40d0a8:	xor    al,0x26
  40d0aa:	rol    DWORD PTR [ecx+0x1b],1
  40d0ad:	jmp    0x789a:0x8eecc8ce
  40d0b4:	sub    eax,0x14f27b76
  40d0b9:	es retf 
  40d0bb:	lahf   
  40d0bc:	(bad)  
  40d0be:	arpl   WORD PTR [ebx+0x67],ax
  40d0c1:	push   edi
  40d0c2:	sbb    DWORD PTR [esi],ebx
  40d0c4:	call   0xa80b:0xf7a1ab10
  40d0cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0cc:	adc    BYTE PTR [ebp-0x7a9b1a19],ah
  40d0d2:	(bad)  [edx-0x5e]
  40d0d5:	and    eax,0x40f30231
  40d0da:	adc    ebp,DWORD PTR [eax+eiz*4-0x41cbb7e5]
  40d0e1:	jmp    0xc23a:0xa9569c22
  40d0e8:	ins    BYTE PTR es:[edi],dx
  40d0e9:	enter  0x6964,0x72
  40d0ed:	xchg   DWORD PTR [edx],edx
  40d0ef:	inc    eax
  40d0f0:	sti    
  40d0f1:	cmp    bl,0xe9
  40d0f4:	fdivr  QWORD PTR [ebx]
  40d0f6:	mov    ebx,0x12ae7585
  40d0fb:	enter  0x29b0,0x17
  40d0ff:	test   cl,dl
  40d101:	and    BYTE PTR [ebx+0x235d165c],cl
  40d107:	jmp    0x40d15d
  40d109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d10a:	jecxz  0x40d11f
  40d10c:	cwde   
  40d10d:	cmp    eax,DWORD PTR [ebx-0xfbb8ac2]
  40d113:	fisubr WORD PTR [ebx-0x4000b644]
  40d119:	sti    
  40d11a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40d11c:	inc    ebp
  40d11d:	cmc    
  40d11e:	push   cs
  40d11f:	hlt    
  40d120:	aam    0xe
  40d122:	fwait
  40d123:	add    ecx,DWORD PTR [ebx]
  40d125:	mov    fs,WORD PTR [edi-0x66]
  40d128:	loop   0x40d18d
  40d12a:	sub    BYTE PTR [edx+0x34],cl
  40d12d:	pop    ss
  40d12e:	sti    
  40d12f:	and    eax,0xb12b63ec
  40d134:	inc    edx
  40d135:	adc    eax,0x926f5350
  40d13a:	cmp    al,0x3d
  40d13c:	push   edi
  40d13d:	pminub mm7,QWORD PTR [si+0x4d1f]
  40d143:	xor    edx,DWORD PTR [esi-0x41]
  40d146:	and    BYTE PTR [edi-0x7fcb5a7b],dh
  40d14c:	pusha  
  40d14d:	(bad)  ds:0x4506c91
  40d153:	jp     0x40d184
  40d155:	scas   eax,DWORD PTR es:[edi]
  40d156:	pop    edi
  40d157:	ja     0x40d126
  40d159:	and    BYTE PTR [ebx+0x552b4e97],0x5
  40d160:	or     ah,BYTE PTR ds:0x545f8b26
  40d166:	mov    ebx,0xf9974b4
  40d16b:	lods   eax,DWORD PTR ds:[esi]
  40d16c:	mov    ebp,0x69824bc0
  40d171:	icebp  
  40d172:	clc    
  40d173:	mov    eax,ds:0x10d6aa47
  40d178:	dec    eax
  40d179:	sbb    eax,0x4336d58d
  40d17e:	jae    0x40d1ef
  40d180:	retf   0x2ad6
  40d183:	(bad)  
  40d184:	loope  0x40d1cf
  40d186:	pushf  
  40d187:	(bad)
  40d18a:	mov    es,ebx
  40d18c:	stos   DWORD PTR es:[edi],eax
  40d18d:	xlat   BYTE PTR ds:[ebx]
  40d18e:	scas   al,BYTE PTR es:[edi]
  40d18f:	inc    ebx
  40d190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d191:	jae    0x40d1fa
  40d193:	jbe    0x40d1b5
  40d195:	xchg   ebp,eax
  40d196:	cdq    
  40d197:	jb     0x40d1f9
  40d199:	es add eax,0x569bcba0
  40d19f:	shl    BYTE PTR [esi+ebp*1-0x7dd8732e],0x34
  40d1a7:	fidiv  DWORD PTR ds:0xd3585beb
  40d1ad:	out    0x6c,eax
  40d1af:	stos   BYTE PTR es:[edi],al
  40d1b0:	add    eax,0x2c7a9dd7
  40d1b5:	out    dx,eax
  40d1b6:	inc    esp
  40d1b7:	xchg   esi,eax
  40d1b8:	sub    al,0x11
  40d1ba:	cdq    
  40d1bb:	cmp    bh,bh
  40d1bd:	push   0x54aa2e4a
  40d1c2:	(bad)  
  40d1c3:	pop    edx
  40d1c4:	test   BYTE PTR [esi],ch
  40d1c6:	sbb    al,BYTE PTR [ebx+eiz*1-0x61566207]
  40d1cd:	inc    eax
  40d1ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1cf:	je     0x40d167
  40d1d1:	fmul   DWORD PTR [esi-0xa]
  40d1d4:	sbb    al,0x6
  40d1d6:	lods   al,BYTE PTR ds:[esi]
  40d1d7:	sub    ecx,DWORD PTR [eax-0x125d20cd]
  40d1dd:	nop
  40d1de:	ds pop ss
  40d1e0:	push   ebx
  40d1e1:	lahf   
  40d1e2:	scas   al,BYTE PTR es:[edi]
  40d1e3:	and    al,0x5f
  40d1e5:	inc    ebx
  40d1e6:	mov    cl,0x5c
  40d1e8:	cmp    BYTE PTR [ebp-0x3b],ch
  40d1eb:	(bad)  
  40d1ec:	xchg   ecx,eax
  40d1ed:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1ef:	and    DWORD PTR [edi-0x7a245d18],ecx
  40d1f5:	aas    
  40d1f6:	lock lds ebp,FWORD PTR [eax]
  40d1f9:	pop    ds
  40d1fa:	mov    al,0x80
  40d1fc:	and    DWORD PTR ds:0xa362af7b,esi
  40d202:	out    0x23,eax
  40d204:	xchg   ebp,eax
  40d205:	repz fwait
  40d207:	xchg   DWORD PTR [esi+0x11aad513],ecx
  40d20d:	pop    ebx
  40d20e:	mov    ebx,DWORD PTR [ecx+ebx*2-0x2c]
  40d212:	ror    DWORD PTR ds:[ecx],1
  40d215:	ss aaa 
  40d217:	jecxz  0x40d287
  40d219:	adc    bl,BYTE PTR [edi-0x2d]
  40d21c:	lods   al,BYTE PTR ds:[esi]
  40d21d:	jns    0x40d235
  40d21f:	outs   dx,BYTE PTR ds:[esi]
  40d220:	sbb    DWORD PTR [edx+0x153dfdc8],ebx
  40d226:	stos   DWORD PTR es:[edi],eax
  40d227:	cwde   
  40d228:	out    0xd2,eax
  40d22a:	push   ss
  40d22b:	inc    eax
  40d22c:	pop    ds
  40d22d:	dec    esp
  40d22e:	sub    esi,DWORD PTR [esi-0x6e968f18]
  40d234:	out    0x27,eax
  40d236:	pop    ebx
  40d237:	outs   dx,BYTE PTR ds:[esi]
  40d238:	mov    al,0x82
  40d23a:	aad    0x49
  40d23c:	addr16 sub al,dl
  40d23f:	leave  
  40d240:	shl    dh,cl
  40d242:	inc    ebp
  40d243:	rep lods al,BYTE PTR ds:[esi]
  40d245:	popa   
  40d246:	int    0xf1
  40d248:	sbb    ecx,DWORD PTR gs:[esi-0x270d068]
  40d24f:	jp     0x40d23d
  40d251:	ins    BYTE PTR es:[edi],dx
  40d252:	pop    ss
  40d253:	lds    ebp,FWORD PTR [esi-0x2d]
  40d256:	xchg   edi,eax
  40d257:	sbb    dl,BYTE PTR [ebx]
  40d259:	mov    dl,0xfe
  40d25b:	jg     0x40d2a8
  40d25d:	ss jne 0x40d2d0
  40d260:	sub    esi,DWORD PTR [ebx]
  40d262:	and    ecx,DWORD PTR [ecx-0xb]
  40d265:	inc    ecx
  40d266:	inc    ecx
  40d267:	mov    esi,0x2804606e
  40d26c:	pop    ecx
  40d26d:	and    ebx,DWORD PTR [esi-0x12]
  40d270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d271:	jbe    0x40d21b
  40d273:	mov    DWORD PTR [edx*2-0x5c03fda6],eax
  40d27a:	xlat   BYTE PTR ds:[ebx]
  40d27b:	mov    WORD PTR [ebx+ebx*1-0xbfcb900],gs
  40d282:	test   DWORD PTR [esi],0x5e311f2b
  40d288:	inc    edx
  40d289:	adc    eax,0xc360c619
  40d28e:	or     dh,bh
  40d290:	mov    ecx,0x3f868d61
  40d295:	xchg   edi,eax
  40d296:	adc    bh,BYTE PTR [eax]
  40d298:	mov    eax,0x60c5a8b7
  40d29d:	xchg   edx,eax
  40d29e:	rcr    eax,0xa1
  40d2a1:	push   edx
  40d2a2:	add    al,0xae
  40d2a4:	xor    edi,ebx
  40d2a6:	push   esi
  40d2a7:	add    eax,0xd087cf0d
  40d2ac:	adc    al,0x17
  40d2ae:	xor    ecx,DWORD PTR [ebx-0x13]
  40d2b1:	std    
  40d2b2:	adc    eax,0xf60d9d04
  40d2b7:	push   ss
  40d2b8:	pop    edx
  40d2b9:	ja     0x40d264
  40d2bb:	aam    0x92
  40d2bd:	call   0x7e8b:0x983af45b
  40d2c4:	fcomp  st(7)
  40d2c6:	pop    es
  40d2c7:	imul   BYTE PTR [eax]
  40d2c9:	xor    eax,0xc12f1e2f
  40d2ce:	mov    ecx,0xb0a913cd
  40d2d3:	pusha  
  40d2d4:	ss mov dh,0xf8
  40d2d7:	cmp    DWORD PTR [ecx+0x60a0ba31],esp
  40d2dd:	ds retf 0xf23c
  40d2e1:	retf   0xd6ac
  40d2e4:	add    eax,DWORD PTR [edi+0x78]
  40d2e7:	int    0x5b
  40d2e9:	gs in  eax,0x15
  40d2ec:	test   al,0x4f
  40d2ee:	out    dx,eax
  40d2ef:	int    0xaa
  40d2f1:	fnstenv [esi]
  40d2f3:	pop    edx
  40d2f4:	in     eax,dx
  40d2f5:	sbb    esi,eax
  40d2f7:	bound  esi,QWORD PTR [ebx+0x56]
  40d2fa:	in     al,0x1d
  40d2fc:	aad    0xd
  40d2fe:	and    esp,DWORD PTR [esi+0x6899cd55]
  40d304:	mov    gs,WORD PTR [ebx+eiz*8+0x35]
  40d308:	fmul   QWORD PTR [ecx]
  40d30a:	outs   dx,BYTE PTR ds:[esi]
  40d30b:	mov    ebp,0xc61dc4f
  40d310:	repz popf 
  40d312:	hlt    
  40d313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d314:	adc    ecx,DWORD PTR [edx+0x40]
  40d317:	jmp    0x6625:0x683c014f
  40d31e:	aas    
  40d31f:	and    BYTE PTR [ebp+0x6d],al
  40d322:	or     ch,cl
  40d324:	mov    edi,0xb1900466
  40d329:	std    
  40d32a:	pop    edi
  40d32b:	daa    
  40d32c:	jp     0x40d3a0
  40d32e:	les    ebp,FWORD PTR es:[esi]
  40d331:	stos   DWORD PTR es:[edi],eax
  40d332:	fadd   st,st(7)
  40d334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d335:	les    ecx,FWORD PTR [ebp+eiz*4-0x6f3af72c]
  40d33c:	or     eax,0x601d434a
  40d341:	lock fisttp QWORD PTR [ecx+0x35]
  40d345:	cmp    DWORD PTR [ecx+0x31],0xaf568116
  40d34c:	mov    bh,0x90
  40d34e:	in     al,dx
  40d34f:	mov    dl,0x18
  40d351:	retf   
  40d352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d353:	cmp    edi,0x4c
  40d356:	mov    bh,0xe3
  40d358:	(bad)  [ebx+ecx*2]
  40d35b:	test   DWORD PTR [ebx+edi*1-0x7a],edi
  40d35f:	addr16 popa 
  40d361:	frstor [eax-0x36]
  40d364:	mov    ah,bl
  40d366:	sub    BYTE PTR [edx],cl
  40d368:	jmp    0xa79daffa
  40d36d:	or     dl,BYTE PTR [ecx+0x1814b0f4]
  40d373:	ins    BYTE PTR es:[edi],dx
  40d374:	mov    dl,0xff
  40d376:	(bad)  
  40d377:	mov    bl,0xa3
  40d379:	or     DWORD PTR [edx+0x7c],ebx
  40d37c:	mov    edx,0xdc9d7301
  40d381:	cmpps  xmm0,XMMWORD PTR [esi-0x42],0x18
  40d386:	das    
  40d387:	das    
  40d388:	pop    eax
  40d389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d38a:	iret   
  40d38b:	out    0x9,eax
  40d38d:	daa    
  40d38e:	xchg   ah,al
  40d390:	enter  0x4282,0x1e
  40d394:	inc    esp
  40d395:	sbb    eax,0x7d19c82a
  40d39a:	pop    ebp
  40d39b:	and    cl,bh
  40d39d:	adc    eax,0x476794fb
  40d3a2:	stos   DWORD PTR es:[edi],eax
  40d3a3:	sub    eax,0x4d7e54f4
  40d3a8:	fistp  DWORD PTR [edi-0x5d0a3a2]
  40d3ae:	inc    ecx
  40d3af:	les    esi,FWORD PTR [esi+0x3cac6408]
  40d3b5:	dec    edx
  40d3b6:	pop    ebx
  40d3b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3b8:	test   al,0x98
  40d3ba:	cli    
  40d3bb:	push   esp
  40d3bc:	loope  0x40d3a4
  40d3be:	fimul  WORD PTR [ebx-0x3e]
  40d3c1:	mov    ds:0xa032417e,eax
  40d3c6:	mov    ah,0xe4
  40d3c8:	test   eax,0x78534d29
  40d3cd:	push   esp
  40d3ce:	scas   al,BYTE PTR es:[edi]
  40d3cf:	mov    al,ds:0xe8bc5353
  40d3d4:	lods   al,BYTE PTR ds:[esi]
  40d3d5:	mov    ebp,0xad4ce03a
  40d3da:	out    dx,eax
  40d3db:	jne    0x40d424
  40d3dd:	push   esi
  40d3de:	mov    esi,0xc2d2a551
  40d3e3:	push   edx
  40d3e4:	jg     0x40d3a1
  40d3e6:	mov    dh,0xd1
  40d3e8:	push   0xffffffee
  40d3ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3eb:	(bad)  
  40d3ec:	js     0x40d430
  40d3ee:	mov    ds:0xbadd319a,eax
  40d3f3:	jmp    DWORD PTR [edi]
  40d3f5:	and    edx,DWORD PTR [edx+esi*1+0x5f]
  40d3f9:	xchg   esi,eax
  40d3fa:	pop    ebx
  40d3fb:	pushf  
  40d3fc:	push   eax
  40d3fd:	mov    ah,0x75
  40d3ff:	sub    DWORD PTR [eax],esi
  40d401:	popf   
  40d402:	jmp    0xd2ac:0x94b2a099
  40d409:	jae    0x40d417
  40d40b:	test   eax,0x935ba227
  40d410:	fwait
  40d411:	enter  0xec5d,0x8a
  40d415:	sub    ah,BYTE PTR [edx-0x5646bb10]
  40d41b:	xlat   BYTE PTR ds:[ebx]
  40d41c:	int    0x98
  40d41e:	push   ebp
  40d41f:	cmp    esp,DWORD PTR [ebp-0x2a]
  40d422:	sub    BYTE PTR [esi+edx*4],cl
  40d425:	push   0x133ce7cc
  40d42a:	xchg   ebx,eax
  40d42b:	jne    0x40d417
  40d42d:	ror    DWORD PTR [edi],cl
  40d42f:	adc    BYTE PTR [eax+0x3d],0x73
  40d433:	addr16 and al,0x38
  40d436:	int    0x77
  40d438:	adc    al,0xfb
  40d43a:	adc    eax,0xfece9026
  40d43f:	imul   edx,ecx,0x745f8ab
  40d445:	push   cs
  40d446:	and    DWORD PTR [ecx],edx
  40d448:	ret    
  40d449:	fs loop 0x40d3ea
  40d44c:	out    dx,al
  40d44d:	pusha  
  40d44e:	mov    BYTE PTR [edx+0x20],dh
  40d451:	pop    edi
  40d452:	nop
  40d453:	jmp    0x40d473
  40d455:	jecxz  0x40d439
  40d457:	ja     0x40d472
  40d459:	sbb    al,0x23
  40d45b:	adc    BYTE PTR [ebp+0x4f7d8e57],ch
  40d461:	inc    edx
  40d462:	or     BYTE PTR [edx+0xa],bh
  40d465:	mov    ?,WORD PTR [edi-0x45]
  40d468:	dec    esi
  40d469:	and    ch,BYTE PTR [ecx-0xb2a93b5]
  40d46f:	mov    edx,0xe8d192c8
  40d474:	sbb    eax,0x1c306bb1
  40d479:	daa    
  40d47a:	call   0x2dba13db
  40d47f:	push   0x2
  40d481:	ficomp DWORD PTR ds:[ebp+0x5b87c9de]
  40d488:	int    0x29
  40d48a:	imul   edx,DWORD PTR [ebp-0x6f],0xffffff88
  40d48e:	mov    ah,0x7d
  40d490:	mov    eax,0x6a7c304d
  40d495:	xlat   BYTE PTR ds:[ebx]
  40d496:	cwde   
  40d497:	pusha  
  40d498:	out    dx,eax
  40d499:	adc    ebp,DWORD PTR ds:0x783280d1
  40d49f:	daa    
  40d4a0:	gs mov ah,0xb3
  40d4a3:	mov    al,ds:0xe2c336b0
  40d4a8:	scas   al,BYTE PTR es:[edi]
  40d4a9:	sti    
  40d4aa:	xchg   edi,eax
  40d4ab:	xlat   BYTE PTR ds:[ebx]
  40d4ac:	dec    ebp
  40d4ad:	mov    bl,0xc5
  40d4af:	push   cs
  40d4b0:	les    eax,FWORD PTR [ecx+0x384e4090]
  40d4b6:	aas    
  40d4b7:	xlat   BYTE PTR ds:[ebx]
  40d4b8:	jnp    0x40d45d
  40d4ba:	pop    ds
  40d4bb:	sbb    BYTE PTR [ecx+ebp*4-0x27a096d0],cl
  40d4c2:	mov    edx,0xdbcbe7c0
  40d4c7:	mov    ds:0x1b25e546,al
  40d4cc:	pop    ds
  40d4cd:	das    
  40d4ce:	retf   0x6dc6
  40d4d1:	je     0x40d45c
  40d4d3:	mov    dl,0xdb
  40d4d5:	stos   DWORD PTR es:[edi],eax
  40d4d6:	(bad)  
  40d4d8:	mov    edi,0xe92370cd
  40d4dd:	adc    BYTE PTR [ecx+0x490162cb],bh
  40d4e3:	fidiv  DWORD PTR [ecx-0x42761e05]
  40d4e9:	aad    0xcd
  40d4eb:	sahf   
  40d4ec:	xchg   edi,eax
  40d4ed:	mov    al,0x95
  40d4ef:	dec    edi
  40d4f0:	cmp    eax,0xd87d13e0
  40d4f5:	out    dx,al
  40d4f6:	push   esp
  40d4f7:	sahf   
  40d4f8:	ror    BYTE PTR [eax],1
  40d4fa:	xchg   edx,eax
  40d4fb:	jle    0x40d4d3
  40d4fd:	cmp    bl,BYTE PTR [edi+0x2c]
  40d500:	lahf   
  40d501:	nop
  40d502:	mov    eax,DWORD PTR [edx+eiz*4+0x7f68aaaf]
  40d509:	test   al,0xc5
  40d50b:	retf   
  40d50c:	shl    BYTE PTR [eax+0x8],1
  40d50f:	jbe    0x40d492
  40d511:	mov    edi,0xe1cdff8d
  40d516:	inc    BYTE PTR [ebx]
  40d518:	xchg   ebp,eax
  40d519:	push   ds
  40d51a:	les    ecx,FWORD PTR [edx]
  40d51c:	and    ah,BYTE PTR [edx+edi*8+0x4d42baba]
  40d523:	add    esp,ebx
  40d525:	adc    DWORD PTR [eax-0x7c80092f],esi
  40d52b:	and    edi,DWORD PTR [edi]
  40d52d:	pushf  
  40d52e:	pop    ds
  40d52f:	adc    eax,0xc9fdf686
  40d534:	(bad)  
  40d535:	fistp  DWORD PTR [ecx]
  40d537:	into   
  40d538:	(bad)  
  40d53a:	leave  
  40d53b:	push   ebx
  40d53c:	std    
  40d53d:	ds dec edi
  40d53f:	push   esp
  40d540:	and    DWORD PTR [ebp-0xcde2626],esi
  40d546:	pop    ecx
  40d547:	mov    al,ds:0xbbdbee70
  40d54c:	lahf   
  40d54d:	aas    
  40d54e:	or     al,0x18
  40d550:	push   esi
  40d551:	adc    BYTE PTR [edi+esi*4+0xe2b52e7],dh
  40d558:	xor    ebx,esp
  40d55a:	add    ch,BYTE PTR [edx-0x691b2611]
  40d560:	sbb    al,0x4
  40d562:	rcl    BYTE PTR [eax],cl
  40d564:	arpl   si,cx
  40d566:	(bad)  
  40d567:	push   edi
  40d568:	or     dh,ah
  40d56a:	das    
  40d56b:	jns    0x40d500
  40d56d:	or     DWORD PTR [ebp-0x2def3745],ebp
  40d573:	fild   DWORD PTR [edx]
  40d575:	js     0x40d5c1
  40d577:	js     0x40d562
  40d579:	arpl   WORD PTR [edi+ebx*4-0x23],bp
  40d57d:	dec    ebx
  40d57e:	mov    ebp,DWORD PTR [ebx+eiz*4]
  40d581:	test   BYTE PTR [ebx-0x2d],0xc6
  40d585:	pop    es
  40d586:	shl    dh,1
  40d588:	(bad)  
  40d58a:	imul   edx,DWORD PTR [eax],0x912108a2
  40d590:	loopne 0x40d5e2
  40d592:	aas    
  40d593:	xchg   esp,eax
  40d594:	and    al,0x33
  40d596:	or     al,0x2c
  40d598:	push   cs
  40d599:	adc    al,0xc7
  40d59b:	jbe    0x40d5e0
  40d59d:	rcl    DWORD PTR [ecx+0x47a0200c],0x85
  40d5a4:	aas    
  40d5a5:	pusha  
  40d5a6:	ins    DWORD PTR es:[edi],dx
  40d5a7:	fistp  WORD PTR [ecx+0x71a2d747]
  40d5ad:	inc    BYTE PTR [ecx]
  40d5af:	xor    edi,DWORD PTR [esi-0x23d1f52f]
  40d5b5:	sar    DWORD PTR [eax],0x8f
  40d5b8:	and    bl,dl
  40d5ba:	mov    al,ds:0xf278103e
  40d5bf:	outs   dx,DWORD PTR ds:[esi]
  40d5c0:	adc    bh,bh
  40d5c2:	and    al,0x59
  40d5c4:	mov    edi,0xb56b4d78
  40d5c9:	test   al,0x4c
  40d5cb:	mov    edi,0xcb11033d
  40d5d0:	and    BYTE PTR [edx-0x1f537cc8],al
  40d5d6:	mov    cl,0xc3
  40d5d8:	sbb    al,0x7d
  40d5da:	adc    eax,0xac5e8b24
  40d5df:	jbe    0x5b4a70bc
  40d5e5:	test   eax,0xd72b4fd9
  40d5ea:	push   esi
  40d5eb:	popf   
  40d5ec:	call   0x1629707b
  40d5f1:	and    bh,ch
  40d5f3:	mov    eax,ds:0xe12735f
  40d5f8:	inc    esi
  40d5f9:	in     eax,0x7a
  40d5fb:	les    edi,FWORD PTR [esi+0x2c027dbc]
  40d601:	push   esp
  40d602:	call   0x53391ffa
  40d607:	addr16 dec esp
  40d609:	std    
  40d60a:	jmp    0x40d5a0
  40d60c:	ja     0x40d675
  40d60e:	xchg   esp,eax
  40d60f:	add    DWORD PTR [ebx+0x6626c4d7],esp
  40d615:	jecxz  0x40d65a
  40d617:	mov    bh,0x29
  40d619:	add    DWORD PTR [edx+0x39],eax
  40d61c:	adc    edi,DWORD PTR [edx]
  40d61e:	bound  eax,QWORD PTR [eax+0x133e2c52]
  40d624:	aas    
  40d625:	or     ebx,DWORD PTR [edx]
  40d627:	sahf   
  40d628:	aad    0xcf
  40d62a:	call   0x191b:0x97dd41ec
  40d631:	jge    0x40d5f8
  40d633:	and    ah,BYTE PTR [edx+edi*8]
  40d636:	outs   dx,DWORD PTR ds:[esi]
  40d637:	mov    ebp,0x82aa7822
  40d63c:	mov    ss,WORD PTR [edx]
  40d63e:	imul   eax,DWORD PTR [esi],0x10
  40d641:	sar    ah,1
  40d643:	fnstenv [ebx-0x73]
  40d646:	rcl    eax,0x18
  40d649:	stc    
  40d64a:	(bad)  
  40d64b:	jns    0x40d615
  40d64d:	dec    BYTE PTR [eax+0x3c]
  40d650:	in     al,0xe7
  40d652:	jne    0x40d6b5
  40d654:	ss mov ebx,0x68146af3
  40d65a:	xor    eax,0xd6dad6dc
  40d65f:	mov    eax,0xc48bceeb
  40d664:	pop    esi
  40d665:	jmp    FWORD PTR [ebp+eax*2+0x12]
  40d669:	lea    eax,[ebx+0x48]
  40d66c:	jbe    0x40d6c3
  40d66e:	das    
  40d66f:	xor    dl,BYTE PTR [ecx-0x33]
  40d672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d673:	test   DWORD PTR [ebx],0x5c75473b
  40d679:	mov    al,0xda
  40d67b:	xlat   BYTE PTR ds:[ebx]
  40d67c:	push   eax
  40d67d:	jmp    FWORD PTR [ebx+ecx*1-0x1c]
  40d681:	std    
  40d682:	push   ecx
  40d683:	push   ebp
  40d684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d685:	jg     0x40d65b
  40d687:	test   eax,0xc39812b3
  40d68c:	in     al,0x15
  40d68e:	cmp    esp,DWORD PTR [edi+ecx*2+0x67e38950]
  40d695:	inc    esp
  40d696:	lock inc edx
  40d698:	dec    esi
  40d699:	inc    ebx
  40d69a:	loop   0x40d65d
  40d69c:	test   cl,dl
  40d69e:	pop    edx
  40d69f:	fwait
  40d6a0:	loope  0x40d688
  40d6a2:	jge    0x40d6e1
  40d6a4:	or     ebx,DWORD PTR [esi]
  40d6a6:	es ins DWORD PTR es:[edi],dx
  40d6a8:	out    0x20,eax
  40d6aa:	xchg   ebx,eax
  40d6ab:	xor    edx,esi
  40d6ad:	popa   
  40d6ae:	jne    0x40d6cb
  40d6b0:	mov    ebp,0x5121c3a5
  40d6b5:	mov    ah,BYTE PTR [edx-0x69f77d81]
  40d6bb:	pop    esi
  40d6bc:	sti    
  40d6bd:	enter  0xc64,0xcb
  40d6c1:	out    0x5f,al
  40d6c3:	push   eax
  40d6c4:	cwde   
  40d6c5:	hlt    
  40d6c6:	fcomp  QWORD PTR [esi+0x2a8b2330]
  40d6cc:	cmp    ecx,DWORD PTR [edx+eax*8]
  40d6cf:	mov    ch,BYTE PTR [ebx-0x5c]
  40d6d2:	adc    bl,ah
  40d6d4:	ret    0xf07b
  40d6d7:	jg     0x40d665
  40d6d9:	pop    edx
  40d6da:	repnz imul ecx,DWORD PTR [ebp+0x64],0x6
  40d6df:	sbb    eax,0xb4f67ec9
  40d6e4:	and    eax,0x7dbceba9
  40d6e9:	ret    0xef02
  40d6ec:	sahf   
  40d6ed:	adc    ch,al
  40d6ef:	cld    
  40d6f0:	scas   eax,DWORD PTR es:[edi]
  40d6f1:	ret    0x5f3b
  40d6f4:	sub    BYTE PTR [eax-0x19c35871],cl
  40d6fa:	xor    edx,0x2e
  40d6fd:	jns    0x40d6b0
  40d6ff:	pop    ebp
  40d700:	pop    ebp
  40d701:	adc    eax,0x1dbf28be
  40d706:	adc    ah,al
  40d708:	sub    al,0xc0
  40d70a:	inc    edx
  40d70b:	mov    esp,0xaf8c1a24
  40d710:	fdiv   st,st(5)
  40d712:	mul    DWORD PTR [ebx+0x43]
  40d715:	or     al,0x84
  40d717:	lea    ebx,[ebx+0x3f]
  40d71a:	fsub   QWORD PTR ds:0xaa6f9a5e
  40d720:	into   
  40d721:	pop    es
  40d722:	aam    0x93
  40d724:	adc    dl,dl
  40d726:	(bad)  
  40d727:	arpl   WORD PTR [ecx+ebx*2+0x36],sp
  40d72b:	fstp   QWORD PTR [ebp+0x7c]
  40d72e:	stc    
  40d72f:	aas    
  40d730:	stos   BYTE PTR es:[edi],al
  40d731:	inc    ebp
  40d732:	xor    edx,esp
  40d734:	mov    edi,DWORD PTR [eax+0x62cdb927]
  40d73a:	inc    ebx
  40d73b:	call   0xb8356267
  40d740:	and    ebx,DWORD PTR [esi-0x641e8ffd]
  40d746:	(bad)  [edi-0x7751bc93]
  40d74c:	stos   BYTE PTR es:[edi],al
  40d74d:	jp     0x40d736
  40d74f:	push   edi
  40d750:	adc    BYTE PTR [ebp+esi*4+0x1da1e3cb],0xb1
  40d758:	xor    al,0x79
  40d75a:	pop    edi
  40d75b:	xor    eax,0x88fffdf4
  40d761:	cli    
  40d762:	pop    ebx
  40d763:	sbb    al,BYTE PTR [eax+0x7b23532b]
  40d769:	out    0xbb,al
  40d76b:	dec    edi
  40d76c:	fisttp DWORD PTR [esi]
  40d76e:	scas   al,BYTE PTR es:[edi]
  40d76f:	imul   esp,DWORD PTR [edi-0x7f],0xffffff99
  40d773:	iret   
  40d774:	dec    BYTE PTR [edx-0x3b6432]
  40d77a:	or     eax,esp
  40d77c:	inc    eax
  40d77d:	loop   0x40d7f8
  40d77f:	and    dl,BYTE PTR [edx-0x983f080]
  40d785:	enter  0xe89f,0xb1
  40d789:	popa   
  40d78a:	and    BYTE PTR [esi],dl
  40d78c:	sub    BYTE PTR [ebp+0xb],0x75
  40d790:	mov    esp,edi
  40d792:	add    BYTE PTR [esi],ch
  40d794:	loope  0x40d76e
  40d796:	ins    BYTE PTR es:[edi],dx
  40d797:	add    DWORD PTR [edx-0x37592616],esi
  40d79d:	mov    ds:0xc132aff,al
  40d7a3:	leave  
  40d7a4:	xchg   edx,eax
  40d7a5:	push   ss
  40d7a6:	rcl    al,cl
  40d7a8:	fadd   st,st(2)
  40d7aa:	mov    esp,0xd5dd457c
  40d7af:	add    edx,DWORD PTR [ebx-0x70]
  40d7b2:	push   ecx
  40d7b3:	xor    esp,DWORD PTR [ecx+0xc]
  40d7b6:	or     ebp,edi
  40d7b8:	shl    ah,1
  40d7ba:	mov    bl,0x4b
  40d7bc:	sbb    ecx,esi
  40d7be:	je     0x40d75d
  40d7c0:	(bad)  
  40d7c1:	fimul  WORD PTR [ecx+0x2557a3f6]
  40d7c7:	sar    DWORD PTR [edi],cl
  40d7c9:	xor    dl,bh
  40d7cb:	inc    eax
  40d7cc:	je     0x40d838
  40d7ce:	jo     0x40d82f
  40d7d0:	pop    ecx
  40d7d1:	shl    DWORD PTR ds:0x73857c64,0xed
  40d7d8:	ins    DWORD PTR es:[edi],dx
  40d7d9:	cdq    
  40d7da:	aas    
  40d7db:	pop    ebx
  40d7dc:	adc    eax,0x69bfee4e
  40d7e1:	popa   
  40d7e2:	sub    BYTE PTR [edx+0x43],bh
  40d7e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7e6:	cmc    
  40d7e7:	jns    0x40d7b1
  40d7e9:	in     al,0x7e
  40d7eb:	lock lock pop esp
  40d7ee:	dec    eax
  40d7ef:	call   0x918e9ec5
  40d7f4:	sbb    bl,dl
  40d7f6:	add    al,BYTE PTR [ebx]
  40d7f8:	ret    0x2ba3
  40d7fb:	jle    0x40d7c9
  40d7fd:	loope  0x40d81c
  40d7ff:	or     dl,BYTE PTR [ecx+ebx*1-0x36338d49]
  40d806:	xor    eax,DWORD PTR [ebp-0x1ebf0dde]
  40d80c:	add    eax,0x5c9a6c05
  40d811:	enter  0xcdc7,0x87
  40d815:	adc    eax,0x6526e565
  40d81a:	mov    al,0x2e
  40d81c:	mov    bh,0xdd
  40d81e:	repnz push ds
  40d820:	sbb    esi,DWORD PTR [edi+0xc]
  40d823:	js     0x40d7aa
  40d825:	adc    dh,0x45
  40d828:	xor    al,0x57
  40d82a:	das    
  40d82b:	and    al,0x22
  40d82d:	lods   eax,DWORD PTR ds:[esi]
  40d82e:	mov    DWORD PTR [ecx-0x34205f54],0x55888be3
  40d838:	arpl   WORD PTR [esi+0x67adbab],sp
  40d83e:	sar    BYTE PTR [esi],1
  40d840:	jb     0x40d843
  40d842:	add    al,0x42
  40d844:	jo     0x40d7fb
  40d846:	xchg   ecx,eax
  40d847:	in     eax,0xe6
  40d849:	fs push cs
  40d84b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d84c:	imul   edi,edi,0xfa7c867b
  40d852:	add    BYTE PTR [ecx+ebx*8-0x21],ah
  40d856:	jae    0x40d8d3
  40d858:	add    cl,BYTE PTR [ebp-0x7a93429e]
  40d85e:	inc    edx
  40d85f:	xchg   edi,eax
  40d860:	and    al,BYTE PTR [ecx+0x4a77699c]
  40d866:	pop    edi
  40d867:	push   esi
  40d868:	xchg   ecx,eax
  40d869:	push   edx
  40d86a:	scas   eax,DWORD PTR es:[edi]
  40d86b:	adc    ebx,edx
  40d86d:	int    0x96
  40d86f:	dec    esp
  40d870:	mov    dh,dl
  40d872:	test   DWORD PTR [eax+0x5c88f877],edi
  40d878:	mov    dh,0xd0
  40d87a:	enter  0xb667,0xc2
  40d87e:	das    
  40d87f:	aad    0x33
  40d881:	mov    ebp,0xdc237a37
  40d886:	hlt    
  40d887:	sahf   
  40d888:	lods   al,BYTE PTR ds:[esi]
  40d889:	or     BYTE PTR [ebx-0x37],al
  40d88c:	mov    edi,0xbdaa4d6e
  40d891:	jb     0x40d827
  40d893:	jb     0x40d86f
  40d895:	mov    ds:0x2dbe67c9,eax
  40d89a:	adc    BYTE PTR [edi-0x46],cl
  40d89d:	push   esp
  40d89e:	sub    edi,ebp
  40d8a0:	cmp    DWORD PTR [eax],edx
  40d8a2:	imul   edx,DWORD PTR [edi],0xbfd32024
  40d8a8:	loopne 0x40d87d
  40d8aa:	div    BYTE PTR [ebp-0xc]
  40d8ad:	gs jp  0x40d89c
  40d8b0:	push   edx
  40d8b1:	es push eax
  40d8b3:	rcl    BYTE PTR [eax],1
  40d8b5:	nop
  40d8b6:	leave  
  40d8b7:	loop   0x40d937
  40d8b9:	js     0x40d8be
  40d8bb:	out    0xc2,al
  40d8bd:	pop    ds
  40d8be:	dec    ecx
  40d8bf:	retf   
  40d8c0:	xchg   dl,dh
  40d8c2:	push   edi
  40d8c3:	mov    ch,0x22
  40d8c5:	cmp    DWORD PTR [edx+eiz*4-0x4],esp
  40d8c9:	mov    dl,0x8d
  40d8cb:	add    ah,BYTE PTR [edi]
  40d8cd:	push   ss
  40d8ce:	or     DWORD PTR [edi],esp
  40d8d0:	cs inc ebp
  40d8d2:	dec    esi
  40d8d3:	repz leave 
  40d8d5:	or     eax,0x7474055f
  40d8da:	or     al,0xa5
  40d8dc:	les    eax,FWORD PTR ds:0xb6729294
  40d8e2:	jns    0x40d929
  40d8e4:	jmp    FWORD PTR [eax]
  40d8e6:	daa    
  40d8e7:	cmp    eax,0xd241ec71
  40d8ec:	div    BYTE PTR [ebp-0x16]
  40d8ef:	sbb    BYTE PTR [ecx+0x1be0e0e2],bh
  40d8f5:	adc    dh,dl
  40d8f7:	mov    bl,bl
  40d8f9:	push   esp
  40d8fa:	push   ds
  40d8fb:	and    bl,dh
  40d8fd:	mov    dh,0x31
  40d8ff:	dec    edx
  40d900:	push   esp
  40d901:	stc    
  40d902:	mov    ds:0x798b5de7,al
  40d907:	sub    al,0xfb
  40d909:	test   bh,cl
  40d90b:	js     0x40d973
  40d90d:	fs call 0x635b:0x7df4ea53
  40d915:	jp     0x40d98a
  40d917:	in     eax,dx
  40d918:	cdq    
  40d919:	test   DWORD PTR [edx+0x76ecff65],ecx
  40d91f:	ret    
  40d920:	lea    edi,[edi-0x20]
  40d923:	sub    al,0xc3
  40d925:	adc    esi,DWORD PTR [eax-0x4b36d02c]
  40d92b:	sub    ecx,eax
  40d92d:	add    DWORD PTR [eax+0x306529d0],0xd2455b86
  40d937:	pop    es
  40d938:	xchg   DWORD PTR [eax],ebp
  40d93a:	mov    ch,0xba
  40d93c:	shl    BYTE PTR ds:0x9764973,1
  40d942:	mov    ecx,DWORD PTR [esi-0x19]
  40d945:	leave  
  40d946:	test   al,0xe2
  40d948:	or     eax,0x982bf1b9
  40d94d:	jno    0x40d9b8
  40d94f:	shl    DWORD PTR [ebp-0x10000332],0xce
  40d956:	and    eax,DWORD PTR [esi+0x58]
  40d959:	fs repz int 0x2f
  40d95d:	sub    dh,BYTE PTR [edi+0x2f]
  40d960:	jmp    0xeaa50a9
  40d965:	cld    
  40d966:	jp     0x40d91f
  40d968:	mov    ebx,0x7682aea5
  40d96d:	cmc    
  40d96e:	ss add eax,0x17f00be9
  40d974:	cmc    
  40d975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d976:	dec    ebp
  40d977:	jo     0x40d9d7
  40d979:	imul   edx,DWORD PTR [ecx+0x79],0xfffffff3
  40d97d:	or     ah,bl
  40d97f:	xlat   BYTE PTR ds:[ebx]
  40d980:	push   eax
  40d981:	imul   ebx,esi,0xa4c8c957
  40d987:	pop    esi
  40d988:	cmp    al,0x1b
  40d98a:	int3   
  40d98b:	jno    0x40da01
  40d98d:	mov    ds:0xb968463c,al
  40d992:	mov    eax,0x6cf12d16
  40d997:	rol    BYTE PTR [ecx+0x78dc8498],cl
  40d99d:	fadd   st,st(6)
  40d99f:	lock out dx,al
  40d9a1:	cmp    DWORD PTR [eax],eax
  40d9a3:	test   BYTE PTR [edx],bh
  40d9a5:	inc    esp
  40d9a6:	or     cl,BYTE PTR [ebx+0x5729c0cf]
  40d9ac:	inc    ebx
  40d9ad:	sbb    eax,edx
  40d9af:	dec    ecx
  40d9b0:	hlt    
  40d9b1:	mov    WORD PTR [ebx],fs
  40d9b3:	mov    bl,0xe8
  40d9b5:	and    al,0x89
  40d9b7:	jne    0x40d9c6
  40d9b9:	(bad)  
  40d9ba:	in     eax,0xb3
  40d9bc:	sbb    al,0x72
  40d9be:	(bad)  [eax]
  40d9c0:	pop    ebp
  40d9c1:	out    dx,al
  40d9c2:	xchg   edi,eax
  40d9c3:	fnstenv [ebp+0x4ab1131c]
  40d9c9:	or     cl,BYTE PTR [edi-0x16166ba7]
  40d9cf:	and    dh,BYTE PTR [esi]
  40d9d1:	xor    edi,DWORD PTR [eax]
  40d9d3:	mov    bh,0x24
  40d9d5:	sar    BYTE PTR [esi-0x24d6d15b],0x90
  40d9dc:	pop    ss
  40d9dd:	xlat   BYTE PTR ds:[ebx]
  40d9de:	mov    WORD PTR [ebx],es
  40d9e0:	int3   
  40d9e1:	fiadd  DWORD PTR [esp+esi*1+0x62]
  40d9e5:	popa   
  40d9e6:	inc    ebx
  40d9e7:	mov    esi,0xb785ca2a
  40d9ec:	pushf  
  40d9ed:	push   ecx
  40d9ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ef:	push   ss
  40d9f0:	mov    bl,BYTE PTR [ebx]
  40d9f2:	pop    edx
  40d9f3:	cmp    ebp,DWORD PTR [edx-0x69]
  40d9f6:	repz mov al,0x44
  40d9f9:	and    BYTE PTR [edx],0xa
  40d9fc:	mov    esp,0x8cb7b39c
  40da01:	add    BYTE PTR [ebx+edi*2],ah
  40da04:	sahf   
  40da05:	or     eax,0x1354c753
  40da0a:	add    DWORD PTR [ecx+0x729ff167],0xdb78f9ec
  40da14:	jg     0x40da36
  40da16:	mov    ?,WORD PTR [edi-0x546ee31e]
  40da1c:	push   ebp
  40da1d:	xchg   ebx,eax
  40da1e:	(bad)  
  40da1f:	pushf  
  40da20:	int    0xa9
  40da22:	jmp    0x750f458d
  40da27:	(bad)  [ecx-0x2c05a0cb]
  40da2d:	dec    ecx
  40da2e:	xor    dh,BYTE PTR [edi]
  40da30:	mov    dh,0x10
  40da32:	push   eax
  40da33:	dec    edi
  40da34:	cld    
  40da35:	mov    al,0xf0
  40da37:	jg     0x40da0f
  40da39:	icebp  
  40da3a:	ret    0xec84
  40da3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da3e:	ror    BYTE PTR [esi],0x20
  40da41:	fwait
  40da42:	xor    DWORD PTR [edx+0x62170f28],edx
  40da48:	stos   DWORD PTR es:[edi],eax
  40da49:	(bad)  
  40da4a:	pop    ebx
  40da4b:	stos   BYTE PTR es:[edi],al
  40da4c:	into   
  40da4d:	aad    0x6b
  40da4f:	xor    al,0x38
  40da51:	fwait
  40da52:	xchg   DWORD PTR [edi-0x41e47791],ecx
  40da58:	xchg   edx,eax
  40da59:	jo     0x40da6f
  40da5b:	ftst   
  40da5d:	xchg   DWORD PTR [edi],ebp
  40da5f:	jnp    0x40daa6
  40da61:	mov    ch,0x2f
  40da63:	pusha  
  40da64:	or     bl,BYTE PTR [edx-0x36]
  40da67:	(bad)  
  40da68:	in     al,0x3e
  40da6a:	pop    edx
  40da6b:	mov    ebp,0x50326c9b
  40da70:	(bad)  
  40da71:	in     al,dx
  40da72:	sub    edi,DWORD PTR [esi-0x7d1cdb51]
  40da78:	cld    
  40da79:	cdq    
  40da7a:	add    al,0x32
  40da7c:	cdq    
  40da7d:	popa   
  40da7e:	outs   dx,BYTE PTR ds:[esi]
  40da7f:	and    al,0x74
  40da81:	cmp    DWORD PTR [edx-0x1ab1f38f],0x78
  40da88:	or     ah,ch
  40da8a:	mov    ecx,0x89dcca03
  40da8f:	pop    es
  40da90:	sbb    BYTE PTR [ebx],0xe0
  40da93:	add    BYTE PTR ds:0xb107c104,dh
  40da99:	dec    ecx
  40da9a:	dec    eax
  40da9b:	cdq    
  40da9c:	add    ecx,DWORD PTR [edx-0x4fddff5c]
  40daa2:	popa   
  40daa3:	add    DWORD PTR [edi+ebx*4-0x6fdc554],esi
  40daaa:	add    dh,bh
  40daac:	scas   eax,DWORD PTR es:[edi]
  40daad:	dec    edx
  40daae:	adc    DWORD PTR [esi+0x39968ada],ebx
  40dab4:	adc    dl,BYTE PTR [edx-0x7742a518]
  40daba:	jbe    0x40dad0
  40dabc:	or     al,0x5e
  40dabe:	bound  ecx,QWORD PTR [ebx]
  40dac0:	shl    BYTE PTR [eax-0x80],0x63
  40dac4:	mov    ds:0xf87572b7,al
  40dac9:	cmp    ah,bh
  40dacb:	dec    edx
  40dacc:	stos   BYTE PTR es:[edi],al
  40dacd:	ins    DWORD PTR es:[edi],dx
  40dace:	outs   dx,DWORD PTR ds:[esi]
  40dacf:	and    al,0x1b
  40dad1:	ror    ebx,0x2a
  40dad4:	sahf   
  40dad5:	xor    DWORD PTR [edi-0x1478286],ecx
  40dadb:	add    eax,0x277ed06d
  40dae0:	mov    ebx,0x77f22695
  40dae5:	retf   0x1f69
  40dae8:	jmp    0xb1ba3d5f
  40daed:	iret   
  40daee:	jnp    0x40daf5
  40daf0:	push   0xffffffa0
  40daf2:	dec    ecx
  40daf3:	inc    ebx
  40daf4:	adc    BYTE PTR [edx-0x33],al
  40daf7:	not    DWORD PTR [edx]
  40daf9:	inc    edi
  40dafa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dafb:	cmc    
  40dafc:	sbb    eax,DWORD PTR [ebp+0x70]
  40daff:	sbb    eax,0xbc2056a4
  40db04:	inc    ebx
  40db05:	out    0xbf,eax
  40db07:	xchg   ebx,eax
  40db08:	mov    esi,0xfcdac51c
  40db0d:	pop    ss
  40db0e:	popf   
  40db0f:	and    DWORD PTR [edi+0x39ca635f],eax
  40db15:	aaa    
  40db16:	and    BYTE PTR [ebp-0xb81507e],0xc9
  40db1d:	adc    DWORD PTR ds:0x3e9efc0b,ebp
  40db23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db24:	dec    ecx
  40db25:	es loop 0x40db9c
  40db28:	cli    
  40db29:	fimul  DWORD PTR [edi-0x7d]
  40db2c:	jbe    0x40db60
  40db2e:	sbb    eax,0xd4b0db7a
  40db33:	cmp    BYTE PTR [ebx+0x15],bh
  40db36:	mov    ds:0x346f14ab,eax
  40db3b:	test   DWORD PTR [eax],ecx
  40db3d:	movzx  eax,WORD PTR [esi]
  40db40:	xor    ecx,ebp
  40db42:	test   eax,0xbabdb475
  40db47:	mov    DWORD PTR [eax-0x920da15],ecx
  40db4d:	mov    bl,0x7f
  40db4f:	retf   
  40db50:	mov    DWORD PTR [eax],ebp
  40db52:	cli    
  40db53:	adc    edi,DWORD PTR [edi+eax*1+0x11]
  40db57:	mov    ebp,0x5e07181a
  40db5c:	icebp  
  40db5d:	pop    edx
  40db5e:	icebp  
  40db5f:	xchg   esp,eax
  40db60:	xchg   DWORD PTR [ebx+esi*2],esp
  40db63:	cwde   
  40db64:	push   0x4425d988
  40db69:	adc    eax,0x4b15c2ef
  40db6e:	and    BYTE PTR [eax],dh
  40db70:	push   0xb37834c4
  40db75:	fst    st(6)
  40db77:	mov    bh,0xb0
  40db79:	add    DWORD PTR [esi],esp
  40db7b:	and    al,0xc3
  40db7d:	pop    edi
  40db7e:	push   ss
  40db7f:	mov    eax,ds:0x629c8888
  40db84:	clc    
  40db85:	cmc    
  40db86:	sub    dl,bl
  40db88:	jmp    0x40dbb1
  40db8a:	mov    cl,0x85
  40db8c:	call   0xcbe5737d
  40db91:	sti    
  40db92:	cwde   
  40db93:	test   eax,0x3d5e01d7
  40db98:	dec    esi
  40db99:	sub    eax,DWORD PTR [edx+0x23]
  40db9c:	lahf   
  40db9d:	jecxz  0x40db8d
  40db9f:	popa   
  40dba0:	lock sbb ch,BYTE PTR ss:0x27df5681
  40dba8:	adc    BYTE PTR [ebp+0x22],bh
  40dbab:	dec    ecx
  40dbac:	dec    edx
  40dbad:	js     0x40db98
  40dbaf:	jle    0x40dc22
  40dbb1:	fstp   QWORD PTR [edx+edx*1-0x31]
  40dbb5:	mov    edx,0x4d701fa3
  40dbba:	xor    DWORD PTR [ebx+eax*2+0xb84a592],0xdc7c9d00
  40dbc5:	lods   eax,DWORD PTR ds:[esi]
  40dbc6:	push   ds
  40dbc7:	mov    DWORD PTR [eax+edi*1-0x39],ebx
  40dbcb:	xchg   DWORD PTR [edi-0x169a97e],edx
  40dbd1:	adc    DWORD PTR [ebp+0x63],0x23
  40dbd5:	fwait
  40dbd6:	jg     0x40dbf4
  40dbd8:	mov    ah,al
  40dbda:	ficom  WORD PTR [esi+0x2d]
  40dbdd:	ffreep st(3)
  40dbdf:	ds mov ?,esp
  40dbe2:	inc    esp
  40dbe3:	call   0x7df1:0xf1adabff
  40dbea:	or     BYTE PTR [ecx],ch
  40dbec:	xor    ebx,eax
  40dbee:	push   cs
  40dbef:	push   gs
  40dbf1:	xchg   edx,eax
  40dbf2:	setge  BYTE PTR [ebx-0x74acf883]
  40dbf9:	pop    ds
  40dbfa:	test   al,0xc4
  40dbfc:	mov    cl,bh
  40dbfe:	mov    edi,DWORD PTR [edx+eax*1]
  40dc01:	fs xchg esp,eax
  40dc03:	sbb    al,0x54
  40dc05:	push   esp
  40dc06:	mov    al,0x14
  40dc08:	dec    esi
  40dc09:	loopne 0x40db90
  40dc0b:	jg     0x40dc1a
  40dc0d:	arpl   ax,si
  40dc0f:	xor    bl,0x38
  40dc12:	jb     0x40dba5
  40dc14:	test   ch,bh
  40dc16:	lahf   
  40dc17:	fiadd  DWORD PTR [bp+di-0x33]
  40dc1b:	cmp    BYTE PTR [edx-0x5f],ah
  40dc1e:	sub    eax,0x5db2ef8d
  40dc23:	ds push ebp
  40dc25:	ret    
  40dc26:	inc    ebx
  40dc27:	sbb    BYTE PTR [esi],al
  40dc29:	sar    BYTE PTR [ecx-0x53af3bf],1
  40dc2f:	xchg   ecx,eax
  40dc30:	mov    esp,0x57e790b2
  40dc35:	aad    0xe1
  40dc37:	sahf   
  40dc38:	out    dx,eax
  40dc39:	or     DWORD PTR [edx],eax
  40dc3b:	fdivr  DWORD PTR [edx+0x2ac35097]
  40dc41:	dec    BYTE PTR [edx+edx*2-0x41bdf078]
  40dc48:	inc    ebp
  40dc49:	(bad)  
  40dc4a:	lods   al,BYTE PTR ds:[esi]
  40dc4b:	push   ecx
  40dc4c:	push   ss
  40dc4d:	popf   
  40dc4e:	jmp    0x40dc6c
  40dc50:	ret    
  40dc51:	mul    BYTE PTR [edx-0x4891a01c]
  40dc57:	jmp    0xe2e3f986
  40dc5c:	xchg   ebp,eax
  40dc5d:	pusha  
  40dc5e:	push   eax
  40dc5f:	jg     0x40dca9
  40dc61:	pop    esp
  40dc62:	or     cl,BYTE PTR [edi+0x7a]
  40dc65:	(bad)  
  40dc66:	scas   eax,DWORD PTR es:[edi]
  40dc67:	xchg   ecx,eax
  40dc68:	enter  0xe67,0x2b
  40dc6c:	iret   
  40dc6d:	mov    al,ds:0x6e8cb03c
  40dc72:	lock inc esi
  40dc74:	int3   
  40dc75:	push   0xffffffe9
  40dc77:	not    BYTE PTR [esi+0x50538121]
  40dc7d:	sub    BYTE PTR [ebp+0x4e5174ff],cl
  40dc83:	cwde   
  40dc84:	xor    eax,0xea155e95
  40dc89:	jecxz  0x40dc1e
  40dc8b:	xchg   bl,cl
  40dc8d:	rcl    BYTE PTR [eax],0x4a
  40dc90:	mov    dl,BYTE PTR [eax+0x2d]
  40dc93:	add    al,0x42
  40dc95:	pop    es
  40dc96:	lods   eax,DWORD PTR ds:[esi]
  40dc97:	jo     0x40dc74
  40dc99:	test   al,0x18
  40dc9b:	mov    dh,0x47
  40dc9d:	push   ss
  40dc9e:	and    al,0x6f
  40dca0:	retf   0x7c8
  40dca3:	jns    0x40dcad
  40dca5:	shr    DWORD PTR [edi+0x53],cl
  40dca8:	lock jl 0x40dc5d
  40dcab:	lods   eax,DWORD PTR ds:[esi]
  40dcac:	or     al,0x37
  40dcae:	adc    dh,BYTE PTR [eax-0x2d]
  40dcb1:	fcom   st(1)
  40dcb3:	(bad)  
  40dcb4:	repz jae 0x40dd0a
  40dcb7:	push   esi
  40dcb8:	jno    0x40dd30
  40dcba:	retf   
  40dcbb:	push   edx
  40dcbc:	sbb    DWORD PTR [ecx],edx
  40dcbe:	loopne 0x40dc8e
  40dcc0:	push   ss
  40dcc1:	mov    al,ds:0x9f4b8767
  40dcc6:	and    ch,ch
  40dcc8:	push   esp
  40dcc9:	aas    
  40dcca:	mov    al,0xc5
  40dccc:	test   eax,0xfc14b0b5
  40dcd1:	push   ecx
  40dcd2:	push   esp
  40dcd3:	xchg   edi,eax
  40dcd4:	push   esi
  40dcd5:	mov    dl,0xe8
  40dcd7:	mov    bh,0xfa
  40dcd9:	lods   al,BYTE PTR ds:[esi]
  40dcda:	xor    edi,edx
  40dcdc:	mov    ?,WORD PTR [ebp+0x6f]
  40dcdf:	lahf   
  40dce0:	inc    edx
  40dce1:	mov    edx,0x2a081364
  40dce6:	ret    0xdc39
  40dce9:	aam    0x1
  40dceb:	jne    0x40dc9c
  40dced:	(bad)  
  40dcee:	pop    edi
  40dcef:	aas    
  40dcf0:	cmp    BYTE PTR [eax+0x5dc15075],ah
  40dcf6:	push   esp
  40dcf7:	add    DWORD PTR ds:0xb47871,edx
  40dcfd:	pusha  
  40dcfe:	adc    al,BYTE PTR [esi+0x114da2fa]
  40dd04:	jb     0x40dcad
  40dd06:	mov    ebp,0xef974c49
  40dd0b:	xor    BYTE PTR [ebp+0x380f53d7],al
  40dd11:	mov    ecx,0x2ff229f1
  40dd16:	add    ebp,ebp
  40dd18:	(bad)  
  40dd1b:	xchg   esi,eax
  40dd1c:	arpl   sp,cx
  40dd1e:	and    al,0x65
  40dd20:	pusha  
  40dd21:	call   0xc0a2:0x6c25231
  40dd28:	jo     0x40dd4c
  40dd2a:	pop    edx
  40dd2b:	sub    eax,0x386f4b5c
  40dd30:	int3   
  40dd31:	in     eax,dx
  40dd32:	add    bh,BYTE PTR [ebx+0x62dbcccd]
  40dd38:	iret   
  40dd39:	fidiv  DWORD PTR [edx+0x5f]
  40dd3c:	out    0x20,al
  40dd3e:	sbb    BYTE PTR ds:0x3bf2e520,cl
  40dd44:	sbb    al,dl
  40dd46:	mov    bh,0xdb
  40dd48:	xchg   DWORD PTR [edx+edi*1+0x49c26f02],esp
  40dd4f:	sub    ecx,ecx
  40dd51:	fwait
  40dd52:	mov    dl,0x65
  40dd54:	mov    WORD PTR [edx],?
  40dd56:	fst    QWORD PTR [eax]
  40dd58:	add    bl,BYTE PTR cs:[edi]
  40dd5b:	xor    ebp,DWORD PTR [ebx]
  40dd5d:	push   cs
  40dd5e:	xchg   edx,eax
  40dd5f:	sub    edx,DWORD PTR [edi+0x5a]
  40dd62:	dec    eax
  40dd63:	xor    al,0xf5
  40dd65:	adc    al,0xf
  40dd67:	mov    esi,0x95c04d62
  40dd6d:	adc    DWORD PTR [ebx-0x7bfb3fbe],0x95d12da6
  40dd77:	je     0x40dd1d
  40dd79:	or     al,0xc1
  40dd7b:	sub    ecx,ecx
  40dd7d:	cdq    
  40dd7e:	call   0x5f0ee985
  40dd83:	in     al,dx
  40dd84:	aas    
  40dd85:	outs   dx,DWORD PTR ds:[esi]
  40dd86:	test   BYTE PTR [ebp-0x68],dl
  40dd89:	(bad)  
  40dd8a:	jno    0x40dd95
  40dd8c:	nop
  40dd8d:	pop    edi
  40dd8e:	nop
  40dd8f:	and    al,0x44
  40dd91:	dec    ebx
  40dd92:	cmp    al,0x48
  40dd94:	call   0x2f33:0x7dead427
  40dd9b:	scas   al,BYTE PTR es:[edi]
  40dd9c:	cmp    al,0xd4
  40dd9e:	add    eax,0x6432c986
  40dda3:	into   
  40dda4:	iret   
  40dda5:	inc    edi
  40dda6:	jmp    0x40de18
  40dda8:	stos   DWORD PTR es:[edi],eax
  40dda9:	out    dx,al
  40ddaa:	das    
  40ddab:	ins    DWORD PTR es:[edi],dx
  40ddac:	push   esp
  40ddad:	ins    BYTE PTR es:[edi],dx
  40ddae:	into   
  40ddaf:	int    0x47
  40ddb1:	not    BYTE PTR [edx+0x7f4eccd5]
  40ddb7:	jecxz  0x40dd4d
  40ddb9:	sub    ch,BYTE PTR [eax+edi*2-0x5f]
  40ddbd:	mov    ebx,0x3c5b4f09
  40ddc2:	cmp    ch,BYTE PTR [edx+edx*8-0x3aaa8d47]
  40ddc9:	jecxz  0x40ddf3
  40ddcb:	lahf   
  40ddcc:	or     al,0x42
  40ddce:	outs   dx,BYTE PTR ds:[esi]
  40ddcf:	arpl   bx,di
  40ddd1:	test   ebx,eax
  40ddd3:	pop    esp
  40ddd4:	(bad)  
  40ddd5:	mov    edi,0xbdc297a1
  40ddda:	inc    edx
  40dddb:	add    bh,BYTE PTR [edx]
  40dddd:	or     DWORD PTR [ecx],esi
  40dddf:	mov    edx,0x797796c7
  40dde4:	call   0x6850:0xe7f34b01
  40ddeb:	fbld   TBYTE PTR cs:[ebp-0x3b]
  40ddef:	(bad)  
  40ddf0:	cmp    DWORD PTR [ebx+esi*8+0x45],ecx
  40ddf4:	loopne 0x40ddae
  40ddf6:	adc    cl,bl
  40ddf8:	out    dx,al
  40ddf9:	aaa    
  40ddfa:	rol    DWORD PTR [ecx+0x391f1439],0x11
  40de01:	fst    DWORD PTR [ecx]
  40de03:	sub    al,0x38
  40de05:	sub    ebx,DWORD PTR ds:0x5be24a7e
  40de0b:	fldenv [ebx+0x4]
  40de0e:	aad    0xbb
  40de10:	dec    ecx
  40de11:	mov    esi,0xb9923647
  40de16:	pop    ebx
  40de17:	jmp    0x6720:0xefaf3ca6
  40de1e:	retf   
  40de1f:	gs mov bl,0x7b
  40de22:	and    DWORD PTR [ebp+esi*2-0x23],edi
  40de26:	loope  0x40de0f
  40de28:	mov    bl,0x32
  40de2a:	or     bh,ah
  40de2c:	mov    ds:0xfcb8619c,eax
  40de31:	sub    eax,0xcdaf7c0b
  40de36:	iret   
  40de37:	adc    esi,DWORD PTR [edx+0x596e1e26]
  40de3d:	mov    edx,0x7139b58c
  40de42:	cmp    BYTE PTR [ebp-0x56],dh
  40de45:	in     eax,dx
  40de46:	test   al,0x6d
  40de48:	mov    ah,0x5b
  40de4a:	mov    esi,0xeb780f5d
  40de4f:	xor    ah,al
  40de51:	je     0x40de12
  40de53:	jmp    0x9b66:0xb9199412
  40de5a:	xor    ebp,DWORD PTR [edx]
  40de5c:	in     eax,0x31
  40de5e:	add    edi,esi
  40de60:	sti    
  40de61:	sub    BYTE PTR [ebx+edx*8+0x781ead55],cl
  40de68:	popa   
  40de69:	leave  
  40de6a:	mov    ds:0x2afd361c,eax
  40de6f:	sti    
  40de70:	idiv   DWORD PTR [edx-0x64]
  40de73:	fisubr WORD PTR [esi]
  40de75:	call   0xa5607707
  40de7a:	mul    DWORD PTR [edi+0x46]
  40de7d:	inc    esp
  40de7e:	lahf   
  40de7f:	lahf   
  40de80:	ins    DWORD PTR es:[edi],dx
  40de81:	mov    esi,0x1c86e09c
  40de86:	fild   DWORD PTR [ebp+0x17]
  40de89:	sti    
  40de8a:	(bad)  
  40de8b:	in     eax,0xbc
  40de8d:	xchg   BYTE PTR ds:0x6caf78ab,cl
  40de93:	cwde   
  40de94:	in     eax,0xe1
  40de96:	add    BYTE PTR [ebx],ch
  40de98:	mov    cl,0xa2
  40de9a:	lods   al,BYTE PTR ds:[esi]
  40de9b:	rep stos BYTE PTR es:[edi],al
  40de9d:	int3   
  40de9e:	push   esi
  40de9f:	sbb    eax,DWORD PTR [ecx]
  40dea1:	inc    esp
  40dea2:	outs   dx,BYTE PTR ds:[esi]
  40dea3:	(bad)
  40dea7:	cwde   
  40dea8:	stos   DWORD PTR es:[edi],eax
  40dea9:	aas    
  40deaa:	das    
  40deab:	mov    eax,0xc2188b3
  40deb0:	pop    ebx
  40deb1:	ds enter 0x8d3d,0x53
  40deb6:	and    eax,0x470262e1
  40debb:	loop   0x40df18
  40debd:	icebp  
  40debe:	in     eax,0x2d
  40dec0:	mov    eax,ds:0x4dd515de
  40dec5:	push   DWORD PTR [ebp+0x44]
  40dec8:	push   es
  40dec9:	mov    al,0xf0
  40decb:	add    BYTE PTR [ebp-0x53a6b12c],ch
  40ded1:	or     ah,al
  40ded3:	pop    edi
  40ded4:	xchg   edx,esp
  40ded6:	stc    
  40ded7:	imul   eax,DWORD PTR [edi-0x1b],0x14
  40dedb:	add    eax,0x4272e041
  40dee0:	test   BYTE PTR [ebp+0x67a6625d],dh
  40dee6:	jle    0x40deb5
  40dee8:	push   edx
  40dee9:	push   esp
  40deea:	mov    ecx,0x308af57d
  40deef:	inc    ebx
  40def0:	ficomp WORD PTR [esi+0xc]
  40def3:	leave  
  40def4:	or     ebx,DWORD PTR [ecx+0x6949bef9]
  40defa:	adc    BYTE PTR [ebp+edi*8-0x51cf9a55],0x29
  40df02:	and    al,0x1d
  40df04:	arpl   ax,ax
  40df06:	push   esp
  40df07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df08:	sti    
  40df09:	stos   BYTE PTR es:[edi],al
  40df0a:	das    
  40df0b:	mov    ds:0x1a0f0e7d,al
  40df10:	or     al,0x4b
  40df12:	mov    edx,0x6d211ec1
  40df17:	shl    BYTE PTR [esi-0x2fe0aa40],0xb2
  40df1e:	jle    0x40deec
  40df20:	sub    ah,BYTE PTR [eax+0x79]
  40df23:	mov    dh,BYTE PTR [edx-0x3]
  40df26:	rol    bl,0x68
  40df29:	lods   al,BYTE PTR ds:[esi]
  40df2a:	bound  ebp,QWORD PTR [edx+0x192a1822]
  40df30:	sub    esp,eax
  40df32:	dec    esi
  40df33:	pop    ebx
  40df34:	xor    eax,0x92cdbf37
  40df39:	in     al,0xcf
  40df3b:	inc    ebx
  40df3c:	xor    eax,0x6eb8629e
  40df41:	pop    DWORD PTR [ecx+0x57]
  40df44:	cmp    dl,al
  40df46:	xchg   edi,eax
  40df47:	mov    dx,0x73e0
  40df4b:	iret   
  40df4c:	aaa    
  40df4d:	into   
  40df4e:	or     DWORD PTR ds:0x2a4116ef,ebp
  40df54:	add    eax,edi
  40df56:	stos   BYTE PTR es:[edi],al
  40df57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df58:	clc    
  40df59:	and    DWORD PTR [esi+edx*2+0x70147cf6],eax
  40df60:	xchg   edx,eax
  40df61:	sub    DWORD PTR [edi+0x3220556a],edx
  40df67:	in     al,0x48
  40df69:	push   esp
  40df6a:	sub    DWORD PTR [edx+0x138d3c1d],0xffffffec
  40df71:	ins    DWORD PTR es:[edi],dx
  40df72:	jae    0x40dfa9
  40df74:	jns    0x40df98
  40df76:	xor    BYTE PTR [ebp+0xa416d58],bh
  40df7c:	es inc ecx
  40df7e:	mov    eax,0x9a0e58d9
  40df83:	cmc    
  40df84:	and    eax,0xaeef28b0
  40df89:	daa    
  40df8a:	je     0x40df42
  40df8c:	test   al,0xee
  40df8e:	repnz cmp edi,edi
  40df91:	sbb    dh,BYTE PTR gs:[ecx]
  40df94:	(bad)  
  40df95:	sub    al,0x34
  40df97:	mov    dh,0x4c
  40df99:	jnp    0x40dfd7
  40df9b:	retf   0x6e83
  40df9e:	bound  edi,QWORD PTR [esp+eax*1+0x77]
  40dfa2:	add    eax,0x23bb9197
  40dfa7:	icebp  
  40dfa8:	sbb    eax,0x992ba68b
  40dfad:	adc    esp,DWORD PTR [ebx-0x7007533c]
  40dfb3:	pop    ds
  40dfb4:	sbb    al,0xe2
  40dfb6:	push   ecx
  40dfb7:	imul   eax
  40dfb9:	xor    ch,BYTE PTR [eax]
  40dfbb:	cmp    bl,BYTE PTR [edx]
  40dfbd:	mov    esp,0xa6536d40
  40dfc2:	dec    esi
  40dfc3:	mov    gs,WORD PTR [edi+eax*2]
  40dfc6:	fldenv [esp+ebp*8]
  40dfc9:	jg     0x40e02c
  40dfcb:	in     eax,0x1e
  40dfcd:	pop    eax
  40dfce:	push   edx
  40dfcf:	in     eax,dx
  40dfd0:	and    BYTE PTR [ecx],0x76
  40dfd3:	and    bl,ah
  40dfd5:	test   eax,0x8cdaac39
  40dfda:	data16 xchg bl,ah
  40dfdd:	mov    edx,edi
  40dfdf:	int3   
  40dfe0:	inc    ebx
  40dfe1:	(bad)  
  40dfe2:	hlt    
  40dfe3:	shl    DWORD PTR [ebx],cl
  40dfe5:	add    BYTE PTR [ecx+0x486395f0],ch
  40dfeb:	fmul   st(2),st
  40dfed:	pusha  
  40dfee:	test   eax,0x65820dc7
  40dff3:	add    DWORD PTR [edx+0x58fe0910],edi
  40dff9:	sub    al,0x96
  40dffb:	jne    0x40e008
  40dffd:	lea    ebp,[esp+ebp*1+0x423d7722]
  40e004:	in     al,0xd
  40e006:	retf   0x7718
  40e009:	dec    edi
  40e00a:	adc    cl,BYTE PTR [edx+edx*1-0x6c]
  40e00e:	push   ecx
  40e00f:	dec    ebp
  40e010:	mov    ebx,DWORD PTR [edi-0x39]
  40e013:	(bad)  
  40e014:	es test edi,ebp
  40e017:	mov    al,0xeb
  40e019:	je     0x40e050
  40e01b:	mov    ds:0x6d71afdb,eax
  40e020:	and    al,0xfb
  40e022:	cmp    BYTE PTR [edx+0x31],ch
  40e025:	inc    ebp
  40e026:	shl    DWORD PTR [esi],0x52
  40e029:	xlat   BYTE PTR ds:[ebx]
  40e02a:	push   eax
  40e02b:	xchg   ecx,eax
  40e02c:	xchg   BYTE PTR [ecx+0x18687237],ch
  40e032:	jns    0x40dffa
  40e034:	dec    ecx
  40e035:	and    DWORD PTR [ebp+0x5a],ecx
  40e038:	fild   DWORD PTR [eax+0x9]
  40e03b:	cmp    eax,DWORD PTR [edx]
  40e03d:	hlt    
  40e03e:	sbb    BYTE PTR ds:0x792ae2c9,ah
  40e044:	mov    ebx,0xb19cecfc
  40e049:	sti    
  40e04a:	adc    BYTE PTR [esi+eiz*2-0x38],dh
  40e04e:	ror    DWORD PTR [ecx+0x26f83fb7],1
  40e054:	inc    esi
  40e055:	mov    dh,0x65
  40e057:	pop    edx
  40e058:	xor    eax,0x18fb509b
  40e05d:	adc    cl,cl
  40e05f:	cmp    bh,al
  40e061:	sahf   
  40e062:	mov    ah,0xe0
  40e064:	or     ebx,ecx
  40e066:	add    DWORD PTR [ecx],edx
  40e068:	pop    es
  40e069:	imul   ebp,DWORD PTR [edx-0x1b],0xffffffdb
  40e06d:	cmp    BYTE PTR [edx-0x6619a356],cl
  40e073:	es das 
  40e075:	sub    DWORD PTR [edi],edi
  40e077:	jmp    0x40e038
  40e079:	xchg   ebx,eax
  40e07a:	add    al,0xe
  40e07c:	pop    ebx
  40e07d:	inc    esi
  40e07e:	push   edx
  40e07f:	mov    ebp,0xdea2c2b0
  40e084:	add    BYTE PTR [ecx-0x551edb7b],0x52
  40e08b:	mov    ebx,0x2e54bfc7
  40e090:	lea    edi,[ebp-0x5eaadbbf]
  40e096:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40e098:	or     ebx,DWORD PTR [esp+ebx*1+0x1]
  40e09c:	cmp    ebp,DWORD PTR [edx-0x282bfa01]
  40e0a2:	in     eax,dx
  40e0a3:	xor    edx,DWORD PTR [esi]
  40e0a5:	xor    al,BYTE PTR [ebx+ecx*1-0x6a]
  40e0a9:	sbb    eax,0xceb69cf0
  40e0ae:	cmp    eax,0x408d3217
  40e0b3:	jns    0x40e08e
  40e0b5:	jle    0x40e0c0
  40e0b7:	xor    BYTE PTR [ebp+esi*2+0x28],0x66
  40e0bc:	jg     0x40e136
  40e0be:	repz addr16 out 0xab,al
  40e0c2:	out    dx,al
  40e0c3:	push   0x3636046f
  40e0c8:	frstor [ebx+0x35]
  40e0cb:	leave  
  40e0cc:	push   ss
  40e0cd:	sub    al,bl
  40e0cf:	fwait
  40e0d0:	jae    0x40e14f
  40e0d2:	mov    eax,ds:0x7b0643f9
  40e0d7:	mov    bh,0x15
  40e0d9:	repnz out 0xd1,al
  40e0dc:	retf   0x928
  40e0df:	xor    esp,DWORD PTR [ecx+0xbcc4d4f]
  40e0e5:	mov    edi,DWORD PTR [ecx+eax*4+0x6be8daa7]
  40e0ec:	mov    al,0xbc
  40e0ee:	add    BYTE PTR [edi-0x80],bl
  40e0f1:	sbb    BYTE PTR [ebx-0x7971d17d],0xa5
  40e0f8:	fs jmp 0x40e095
  40e0fb:	arpl   WORD PTR [eax],bx
  40e0fd:	mov    bh,0xa0
  40e0ff:	aam    0xeb
  40e101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e102:	ror    BYTE PTR [eax+0x68],1
  40e105:	cdq    
  40e106:	push   esp
  40e107:	rcr    BYTE PTR [esi+ecx*1+0x60],0xf6
  40e10c:	adc    ch,BYTE PTR [eax+edx*8]
  40e10f:	mov    BYTE PTR [edi+esi*2+0xb],bh
  40e113:	or     esp,DWORD PTR [edi+esi*2]
  40e116:	push   es
  40e117:	inc    edx
  40e118:	add    eax,eax
  40e11a:	cdq    
  40e11b:	loopne 0x40e198
  40e11d:	cmp    BYTE PTR [edx+esi*4-0x3d70a07f],dl
  40e124:	daa    
  40e125:	pop    es
  40e126:	aaa    
  40e127:	mov    eax,ds:0x4df841d
  40e12c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e12d:	dec    edi
  40e12e:	mov    cl,BYTE PTR [edi+0x2c]
  40e131:	jns    0x40e13d
  40e133:	ret    
  40e134:	ret    
  40e135:	clc    
  40e136:	pop    esi
  40e137:	out    0xcd,al
  40e139:	pusha  
  40e13a:	(bad)  
  40e13b:	test   DWORD PTR ds:[ecx-0x634473c6],edx
  40e142:	popf   
  40e143:	cmp    BYTE PTR [edx-0x52],ah
  40e146:	pop    eax
  40e147:	setle  dl
  40e14a:	sti    
  40e14b:	inc    ebx
  40e14c:	bound  ebp,QWORD PTR [edx]
  40e14e:	das    
  40e14f:	rcl    DWORD PTR [ecx-0x53b1ecf1],0x75
  40e156:	mov    ds:0xd2cda764,eax
  40e15b:	xchg   cl,ah
  40e15d:	and    DWORD PTR [ebp+0x60b7e8f6],esp
  40e163:	ins    BYTE PTR es:[edi],dx
  40e164:	mov    edi,esi
  40e166:	mov    dh,BYTE PTR [ebx-0x45f337c3]
  40e16c:	shr    BYTE PTR [edx-0x52f1e898],1
  40e172:	retf   
  40e173:	cmp    BYTE PTR [ebx+0x6cd1c3ca],ah
  40e179:	inc    ebp
  40e17a:	push   edi
  40e17b:	jae    0x40e177
  40e17d:	inc    edi
  40e17e:	js     0x40e120
  40e180:	and    ebp,esi
  40e182:	inc    ebx
  40e183:	nop
  40e184:	cmp    eax,0x6854e136
  40e189:	movntq QWORD PTR [ecx+0xc],mm3
  40e18d:	aas    
  40e18e:	xchg   edi,eax
  40e18f:	or     eax,0x5b1e73cb
  40e194:	mov    eax,0x6a6f4ead
  40e199:	adc    ch,dl
  40e19b:	retf   0xefd9
  40e19e:	in     eax,0xc
  40e1a0:	jnp    0x40e1b5
  40e1a2:	stc    
  40e1a3:	into   
  40e1a4:	xor    al,0x80
  40e1a6:	mov    al,ds:0x1c051c75
  40e1ab:	pop    ds
  40e1ac:	dec    ebx
  40e1ad:	pop    ebx
  40e1ae:	adc    DWORD PTR [ecx-0x443e5770],ebp
  40e1b4:	xchg   esi,eax
  40e1b5:	jl     0x40e15d
  40e1b7:	mov    edi,DWORD PTR [esi]
  40e1b9:	dec    ebp
  40e1ba:	dec    ecx
  40e1bb:	stos   BYTE PTR es:[edi],al
  40e1bc:	cmc    
  40e1bd:	fisttp DWORD PTR [edi+0xa]
  40e1c0:	jno    0x40e1f3
  40e1c2:	outs   dx,BYTE PTR ds:[esi]
  40e1c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1c4:	mov    bl,0x5e
  40e1c6:	mov    esp,0xe6a5945b
  40e1cb:	(bad)  
  40e1cd:	push   esi
  40e1ce:	outs   dx,BYTE PTR ds:[esi]
  40e1cf:	js     0x40e19e
  40e1d1:	push   ebp
  40e1d2:	fbstp  TBYTE PTR [edi+0x44]
  40e1d5:	fidiv  WORD PTR [bp+si]
  40e1d8:	pop    edi
  40e1d9:	sub    DWORD PTR [ecx-0x72],esi
  40e1dc:	adc    ah,BYTE PTR [edx+0x3ab8cf30]
  40e1e2:	inc    edi
  40e1e3:	pusha  
  40e1e4:	adc    BYTE PTR [edi+0x5a30ec76],dh
  40e1ea:	dec    ecx
  40e1eb:	xchg   esi,eax
  40e1ec:	sahf   
  40e1ed:	push   edx
  40e1ee:	mov    edi,0x36532355
  40e1f3:	pand   mm5,QWORD PTR [ebp+0x79]
  40e1f7:	push   edi
  40e1f8:	cmp    al,0xf2
  40e1fa:	retf   
  40e1fb:	mov    edi,0x60eef450
  40e200:	inc    edx
  40e201:	in     eax,0x8d
  40e203:	outs   dx,BYTE PTR ds:[esi]
  40e204:	add    ch,BYTE PTR ds:0xfaad7175
  40e20a:	xchg   esp,eax
  40e20b:	or     edi,DWORD PTR [ebx-0x29f07ced]
  40e211:	xchg   esi,eax
  40e212:	dec    esi
  40e213:	pop    ecx
  40e214:	or     cl,ah
  40e216:	xor    eax,0x66bb9c8e
  40e21b:	les    ebx,FWORD PTR [ecx-0xc]
  40e21e:	lock jle 0x40e1be
  40e221:	mov    cl,0xe3
  40e223:	sub    dl,bl
  40e225:	jecxz  0x40e2a6
  40e227:	sbb    eax,0x9858ae67
  40e22c:	add    BYTE PTR [edx],bh
  40e22e:	jl     0x40e229
  40e230:	(bad)  
  40e231:	out    0x94,eax
  40e233:	cld    
  40e234:	es and dx,sp
  40e238:	popf   
  40e239:	js     0x40e222
  40e23b:	jmp    0x593536d3
  40e240:	fist   WORD PTR ds:0xfb0b3336
  40e246:	dec    ebp
  40e247:	rcl    DWORD PTR [ecx+0x71],cl
  40e24a:	outs   dx,BYTE PTR ds:[esi]
  40e24b:	lea    ecx,[ecx+0x375dbe77]
  40e251:	and    esp,DWORD PTR [edx+0x2cdf0fa4]
  40e257:	mov    edi,0xb9b6442f
  40e25c:	add    ebp,DWORD PTR [ebp+0x54]
  40e25f:	dec    ebx
  40e260:	sbb    al,0x9b
  40e262:	cli    
  40e263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e264:	lahf   
  40e265:	pop    eax
  40e266:	xor    dh,dl
  40e268:	xchg   ecx,eax
  40e269:	push   edi
  40e26a:	push   esi
  40e26b:	xchg   ebx,eax
  40e26c:	in     eax,0x4d
  40e26e:	xor    esi,DWORD PTR [ecx]
  40e270:	stc    
  40e271:	xchg   esp,eax
  40e272:	mov    edi,0x176700e
  40e277:	ins    DWORD PTR es:[edi],dx
  40e278:	in     eax,dx
  40e279:	cmp    ah,dh
  40e27b:	sbb    DWORD PTR [ebx],edx
  40e27d:	(bad)  
  40e27e:	in     eax,0x8f
  40e280:	add    edx,DWORD PTR [ebx]
  40e282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e283:	ja     0x40e247
  40e285:	(bad)  
  40e286:	inc    edx
  40e287:	lock retf 0xdc92
  40e28b:	adc    bh,BYTE PTR ds:0x2b9c145f
  40e291:	sub    BYTE PTR [edx+0x47f87098],dh
  40e297:	or     cl,bh
  40e299:	mov    esi,0x644316eb
  40e29e:	push   edi
  40e29f:	mov    al,ds:0xf952a787
  40e2a4:	xchg   dl,bh
  40e2a6:	jmp    0x40e2b3
  40e2a8:	pop    esi
  40e2a9:	fwait
  40e2aa:	push   0x8e0ec8f8
  40e2af:	or     al,0x95
  40e2b1:	ja     0x40e302
  40e2b3:	pop    ss
  40e2b4:	xor    bl,bl
  40e2b6:	xor    ebx,DWORD PTR [edx]
  40e2b8:	nop
  40e2b9:	dec    eax
  40e2ba:	aad    0x4f
  40e2bc:	add    DWORD PTR [ebp+0x4a],eax
  40e2bf:	xor    eax,DWORD PTR [esi]
  40e2c1:	jne    0x40e2bb
  40e2c3:	out    dx,al
  40e2c4:	shl    cl,cl
  40e2c6:	gs push esp
  40e2c8:	xchg   BYTE PTR ds:0x65e4baea,dl
  40e2ce:	icebp  
  40e2cf:	pop    ecx
  40e2d0:	cmp    al,0x11
  40e2d2:	jmp    0x2437:0xbc0fa998
  40e2d9:	ss ret 
  40e2db:	dec    ebp
  40e2dc:	xor    eax,0x3bff1838
  40e2e1:	mul    BYTE PTR [esi-0x17]
  40e2e4:	push   cs
  40e2e5:	sub    esi,DWORD PTR [ebx+0x615efb0]
  40e2eb:	rcr    BYTE PTR [ebp-0xb],0x5b
  40e2ef:	mov    cl,0x32
  40e2f1:	ins    BYTE PTR es:[edi],dx
  40e2f2:	cmp    BYTE PTR [ecx+0x5062aab2],al
  40e2f8:	sahf   
  40e2f9:	cs call 0x98a1296e
  40e2ff:	mov    DWORD PTR [edx-0x1d],0x703874c0
  40e306:	fcomp  QWORD PTR [edx-0x179286e3]
  40e30c:	pop    ebx
  40e30d:	ret    0x21d3
  40e310:	mov    bh,0x7c
  40e312:	sbb    BYTE PTR [edx-0x4b],ah
  40e315:	xor    ebx,DWORD PTR [esi-0x7d55383c]
  40e31b:	ins    BYTE PTR es:[edi],dx
  40e31c:	mov    ebp,0x4d1bc881
  40e321:	push   ecx
  40e322:	jle    0x40e2f7
  40e324:	(bad)  
  40e325:	iret   
  40e326:	pusha  
  40e327:	xchg   esp,eax
  40e328:	fsubp  st(5),st
  40e32a:	mov    ds:0xace5079b,eax
  40e32f:	push   es
  40e330:	dec    edi
  40e331:	xor    DWORD PTR [esi],edx
  40e333:	mov    eax,0xb114cfa2
  40e338:	or     eax,0x5e988c3d
  40e33d:	in     eax,0x80
  40e33f:	ins    DWORD PTR es:[edi],dx
  40e340:	inc    edi
  40e341:	dec    ebx
  40e342:	sub    dl,BYTE PTR [eax+0x55]
  40e345:	pop    ecx
  40e346:	sbb    DWORD PTR [ebx+ebx*4],eax
  40e349:	sbb    ecx,DWORD PTR [edx]
  40e34b:	adc    DWORD PTR [esi-0x74c07d02],edx
  40e351:	mov    fs,WORD PTR [eax]
  40e353:	sub    DWORD PTR [edi],ebx
  40e355:	mov    ds:0xd6e767b5,eax
  40e35a:	test   eax,0x55afde83
  40e35f:	retf   0x7013
  40e362:	(bad)  
  40e363:	mov    ecx,0xe37dc6e4
  40e368:	xchg   ecx,eax
  40e369:	xor    cl,BYTE PTR [ecx-0x3e73f230]
  40e36f:	cli    
  40e370:	ret    
  40e371:	jmp    FWORD PTR [ebx+eax*4]
  40e374:	mov    ds:0x2caec2b6,al
  40e379:	jmp    0x40e32e
  40e37b:	ret    0xa1f
  40e37e:	xchg   edi,eax
  40e37f:	stc    
  40e380:	outs   dx,DWORD PTR ds:[esi]
  40e381:	mov    edi,0x55340801
  40e386:	pop    ebp
  40e387:	mov    dl,0xe8
  40e389:	es sbb eax,0x1662db34
  40e38f:	adc    DWORD PTR [edx],edx
  40e391:	mov    dh,0xba
  40e393:	and    al,0x7a
  40e395:	adc    BYTE PTR [eax+0x50],bh
  40e398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e399:	sub    BYTE PTR [ebx],cl
  40e39b:	mov    DWORD PTR [esi-0x3038667f],ebp
  40e3a1:	(bad)  
  40e3a2:	add    cl,dl
  40e3a4:	sub    eax,0xb213af7d
  40e3a9:	mov    edi,ss
  40e3ab:	inc    esp
  40e3ac:	scas   al,BYTE PTR es:[edi]
  40e3ad:	sub    BYTE PTR [edi],dh
  40e3af:	(bad)  
  40e3b0:	cld    
  40e3b1:	neg    BYTE PTR [esi]
  40e3b3:	lods   al,BYTE PTR ds:[esi]
  40e3b4:	(bad)  
  40e3b5:	repnz pop ebp
  40e3b7:	aaa    
  40e3b8:	test   DWORD PTR [eax],edi
  40e3ba:	ds push ss
  40e3bc:	sahf   
  40e3bd:	fucomip st,st(4)
  40e3bf:	push   ds
  40e3c0:	mov    edx,0x42621bcc
  40e3c5:	ins    DWORD PTR es:[edi],dx
  40e3c6:	xor    ebp,ebx
  40e3c8:	outs   dx,DWORD PTR ds:[esi]
  40e3c9:	or     BYTE PTR [ecx+0x46],0xd0
  40e3cd:	ss (bad) 
  40e3cf:	fs ret 0x83a6
  40e3d3:	sub    ebp,ecx
  40e3d5:	xor    cl,0x25
  40e3d8:	loop   0x40e437
  40e3da:	and    ah,BYTE PTR [ecx-0x270b4c82]
  40e3e0:	aad    0xfe
  40e3e2:	dec    edi
  40e3e3:	mov    ebp,0x5a10a3f7
  40e3e8:	mov    edx,0x75b57621
  40e3ed:	jae    0x40e3f9
  40e3ef:	or     esp,ebp
  40e3f1:	add    BYTE PTR [ebp-0x516ae4a8],ch
  40e3f7:	out    dx,al
  40e3f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3f9:	inc    edi
  40e3fa:	push   esi
  40e3fb:	call   0x8d96:0xb6282980
  40e402:	mov    esi,DWORD PTR [esi-0xf44021b]
  40e408:	rcl    BYTE PTR [edx-0x7e],cl
  40e40b:	inc    esp
  40e40c:	cld    
  40e40d:	xor    ch,ah
  40e40f:	cld    
  40e410:	cmp    eax,DWORD PTR [edi]
  40e412:	inc    esp
  40e413:	fldcw  WORD PTR [ecx]
  40e415:	aam    0x56
  40e417:	fs mov ebx,?
  40e41a:	(bad)  
  40e41b:	in     eax,dx
  40e41c:	ret    
  40e41d:	cmp    al,0xe7
  40e41f:	out    dx,eax
  40e420:	pop    esi
  40e421:	retf   0x1499
  40e424:	or     cl,BYTE PTR [eax+eax*1]
  40e427:	popa   
  40e428:	nop
  40e429:	jl     0x40e410
  40e42b:	inc    esp
  40e42c:	sbb    bh,BYTE PTR [edi-0x40e239a8]
  40e432:	add    eax,0xfa517277
  40e437:	mov    WORD PTR [eax],es
  40e439:	cs cs (bad) 
  40e43c:	xchg   esp,eax
  40e43d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e43e:	mov    ah,0xb8
  40e440:	(bad)  
  40e441:	xchg   ebp,eax
  40e442:	popa   
  40e443:	fadd   QWORD PTR [edi+0x1128b3e1]
  40e449:	icebp  
  40e44a:	push   ss
  40e44b:	mov    eax,ds:0xcaab61b6
  40e450:	int3   
  40e451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e452:	xchg   ecx,eax
  40e453:	xor    DWORD PTR [edi-0x745d06],edi
  40e459:	pop    eax
  40e45a:	dec    esp
  40e45b:	add    esp,DWORD PTR [eax]
  40e45d:	push   ebp
  40e45e:	pop    ebp
  40e45f:	cmp    DWORD PTR [ebp-0x23],ebx
  40e462:	pop    esi
  40e463:	pushf  
  40e464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e465:	scas   al,BYTE PTR es:[edi]
  40e466:	sub    dh,ch
  40e468:	jne    0x40e442
  40e46a:	es fld st(0)
  40e46d:	inc    ebp
  40e46e:	sahf   
  40e46f:	fbstp  TBYTE PTR [esi+0x63cfeb01]
  40e475:	fmul   DWORD PTR [ebx-0x5c]
  40e479:	cmp    BYTE PTR [eax+0x2842de65],ch
  40e47f:	daa    
  40e480:	dec    esi
  40e481:	pop    es
  40e482:	mov    ebp,0x79428ae0
  40e487:	out    0x0,eax
  40e489:	das    
  40e48a:	retf   0x1ee2
  40e48d:	lock fwait
  40e48f:	push   edi
  40e490:	jmp    0x9b4d:0xd2be6a50
  40e497:	push   es
  40e498:	dec    eax
  40e499:	cmp    DWORD PTR [edx+0x34],0xffffff81
  40e49d:	or     eax,0x1ec46d59
  40e4a2:	stos   BYTE PTR es:[edi],al
  40e4a3:	inc    edi
  40e4a4:	scas   eax,DWORD PTR es:[edi]
  40e4a5:	cmp    ebx,DWORD PTR [ebp+ebx*2-0x79ad849c]
  40e4ac:	sbb    ah,BYTE PTR [edi]
  40e4ae:	lods   al,BYTE PTR ds:[esi]
  40e4af:	sbb    al,0x58
  40e4b1:	push   0xffffffe8
  40e4b3:	ja     0x40e512
  40e4b5:	and    ebp,esp
  40e4b7:	cdq    
  40e4b8:	lods   al,BYTE PTR ds:[esi]
  40e4b9:	pushf  
  40e4ba:	pop    edx
  40e4bb:	jns    0x103fe50c
  40e4c1:	test   al,0x4
  40e4c3:	and    al,0xbf
  40e4c5:	aas    
  40e4c6:	ret    
  40e4c7:	or     BYTE PTR [edx-0xc],dl
  40e4ca:	jne    0x40e54b
  40e4cc:	stos   BYTE PTR es:[edi],al
  40e4cd:	les    ebp,FWORD PTR [edx+0x25788c4a]
  40e4d3:	sub    DWORD PTR [ebp-0x3],0xffffff98
  40e4d7:	mov    edi,0x9bb71357
  40e4dc:	pop    esi
  40e4dd:	push   es
  40e4de:	pusha  
  40e4df:	and    DWORD PTR [edx+0x297a4bc8],edx
  40e4e5:	bound  esp,QWORD PTR [ebx]
  40e4e7:	cmp    ch,al
  40e4e9:	shl    DWORD PTR [esi-0xb],0x78
  40e4ed:	xchg   ebp,eax
  40e4ee:	push   es
  40e4ef:	fwait
  40e4f0:	jl     0x40e553
  40e4f2:	repnz loop 0x40e541
  40e4f5:	es dec ebp
  40e4f7:	punpcklbw mm3,DWORD PTR [edi-0x38]
  40e4fb:	cld    
  40e4fc:	mov    ebp,ss
  40e4fe:	and    al,0x5e
  40e500:	push   ds
  40e501:	sbb    eax,0xc8dbb548
  40e506:	out    0xf3,al
  40e508:	cwde   
  40e509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e50a:	cmp    ebx,DWORD PTR [esi]
  40e50c:	call   0x4d464758
  40e511:	gs cmp esi,ecx
  40e514:	push   ds
  40e515:	xchg   edi,eax
  40e516:	or     al,0x2a
  40e518:	dec    esp
  40e519:	fisubr WORD PTR [edx+edi*4-0x16]
  40e51d:	bt     DWORD PTR [ecx+0x830a4cf],ebx
  40e524:	mov    esp,0xe92402d5
  40e529:	mov    al,ds:0x327a189b
  40e52e:	inc    esp
  40e52f:	call   0x222b871f
  40e534:	and    cl,al
  40e536:	jmp    0x4a1d:0xb9a946cb
  40e53d:	xor    al,0xdf
  40e53f:	or     BYTE PTR [ecx+0x15ed658d],al
  40e545:	in     eax,dx
  40e546:	push   0x27793d8b
  40e54b:	dec    ecx
  40e54c:	cmp    BYTE PTR [edi+0x78],ch
  40e54f:	mov    bh,0x6f
  40e551:	push   DWORD PTR [esi-0x70]
  40e554:	or     DWORD PTR [edx-0x4b],eax
  40e557:	jp     0x40e52c
  40e559:	push   0x12
  40e55b:	out    0x0,eax
  40e55d:	inc    ecx
  40e55e:	(bad)  
  40e55f:	iret   
  40e560:	inc    eax
  40e561:	adc    ebx,DWORD PTR [edi-0x9]
  40e564:	jl     0x40e50c
  40e566:	dec    esp
  40e567:	retf   
  40e568:	mov    cl,0x4a
  40e56a:	cs in  al,0xda
  40e56d:	pop    edi
  40e56e:	add    eax,0xaf30d5cd
  40e573:	data16 ins BYTE PTR es:[edi],dx
  40e575:	test   BYTE PTR [ebx+0x6be7f2f5],bh
  40e57b:	fidivr DWORD PTR [eax+0x51]
  40e57e:	fstp   TBYTE PTR ds:0xd6d115a0
  40e584:	mov    esi,0xb16f6ee5
  40e589:	retf   0xf7ed
  40e58c:	push   ds
  40e58d:	sub    ch,ch
  40e58f:	test   DWORD PTR [ecx-0x60],esi
  40e592:	(bad)  
  40e593:	fstp   QWORD PTR [edi-0x1]
  40e596:	inc    ebx
  40e597:	out    0xe1,eax
  40e599:	adc    eax,0x98caaf38
  40e59e:	add    BYTE PTR [edi],0xcb
  40e5a1:	xor    eax,0xda75c737
  40e5a6:	(bad)  [edi+0x3]
  40e5a9:	jmp    0x40e59c
  40e5ab:	in     eax,dx
  40e5ac:	push   edi
  40e5ad:	call   0x10bd4930
  40e5b2:	pushf  
  40e5b3:	jge    0x40e5c3
  40e5b5:	lods   eax,DWORD PTR ds:[esi]
  40e5b6:	div    BYTE PTR [ecx-0x26f816a7]
  40e5bc:	jb     0x40e5ca
  40e5be:	dec    ebx
  40e5bf:	mov    ch,0xdd
  40e5c1:	outs   dx,BYTE PTR ds:[esi]
  40e5c2:	packssdw mm3,QWORD PTR [ecx+esi*4+0x5fd319de]
  40e5ca:	aaa    
  40e5cb:	cmp    bh,al
  40e5cd:	sub    BYTE PTR [eax],dh
  40e5cf:	outs   dx,BYTE PTR ds:[esi]
  40e5d0:	daa    
  40e5d1:	(bad)  
  40e5d2:	(bad)  [esi-0x10]
  40e5d5:	xchg   edx,eax
  40e5d6:	lds    esp,FWORD PTR [edi+edi*8-0x271058cd]
  40e5dd:	inc    ebp
  40e5de:	mov    al,ds:0x6b068605
  40e5e3:	in     eax,dx
  40e5e4:	push   esi
  40e5e5:	adc    BYTE PTR ds:0x34b78dd8,bl
  40e5eb:	ret    
  40e5ec:	pushf  
  40e5ed:	adc    BYTE PTR [edx+0x2199fbed],0xa9
  40e5f4:	add    esi,eax
  40e5f6:	sbb    al,0x53
  40e5f8:	mov    ah,0x8d
  40e5fa:	mov    WORD PTR [ebx-0x5c],gs
  40e5fd:	mov    dl,0x68
  40e5ff:	je     0x40e599
  40e601:	(bad)  
  40e602:	retf   
  40e603:	sbb    DWORD PTR [edi-0x1e3dc1f5],eax
  40e609:	fmul   st(5),st
  40e60b:	mov    WORD PTR [eax-0x68],ds
  40e60e:	mov    bh,0xf8
  40e610:	add    BYTE PTR [esi],al
  40e612:	sub    bh,BYTE PTR [edi+edx*1-0x21f85178]
  40e619:	aam    0x6
  40e61b:	fcom   QWORD PTR [edx+0x51c1d291]
  40e621:	push   ds
  40e622:	lock fmul st(4),st
  40e625:	xlat   BYTE PTR ds:[ebx]
  40e626:	sbb    BYTE PTR ds:0x7ba8766c,cl
  40e62c:	inc    ebp
  40e62d:	cwde   
  40e62e:	ret    
  40e62f:	mov    ecx,DWORD PTR [esp+ecx*2]
  40e632:	scas   al,BYTE PTR es:[edi]
  40e633:	in     eax,0xd8
  40e635:	lods   eax,DWORD PTR ds:[esi]
  40e636:	jmp    0x71adfc99
  40e63b:	push   ss
  40e63c:	jne    0x40e610
  40e63e:	fmul   DWORD PTR [ebx+0x61f773e6]
  40e644:	pop    edx
  40e645:	aad    0xe2
  40e647:	mov    esp,0x99d95e82
  40e64c:	(bad)  
  40e64d:	dec    ebx
  40e64e:	mov    ah,0x20
  40e650:	loope  0x40e6bf
  40e652:	cmp    BYTE PTR [esi+0x2d],bl
  40e655:	jo     0x40e60f
  40e657:	cmp    eax,0x2efa221e
  40e65c:	mov    ?,WORD PTR [edi-0x1f]
  40e65f:	mov    esp,DWORD PTR [esi+0x57]
  40e662:	push   ds
  40e663:	fidiv  DWORD PTR [eax+ecx*1-0x22]
  40e667:	xor    eax,0x226ebe7d
  40e66c:	mov    ds:0xe46e8d0b,eax
  40e671:	xchg   edx,eax
  40e672:	lock aaa 
  40e674:	mov    esi,0xf55f788a
  40e679:	test   BYTE PTR [ebx-0x4ee0f0c1],al
  40e67f:	(bad)  
  40e680:	jle    0x40e6e0
  40e682:	cld    
  40e683:	lahf   
  40e684:	xor    dl,bh
  40e686:	hlt    
  40e687:	into   
  40e688:	xor    al,0x52
  40e68a:	dec    edx
  40e68b:	mov    esp,0xf54ac946
  40e690:	jbe    0x40e682
  40e692:	adc    ecx,eax
  40e694:	mov    dl,0x74
  40e696:	adc    DWORD PTR [ebp-0x37],ebx
  40e699:	add    ebx,DWORD PTR [edx]
  40e69b:	or     ch,0x49
  40e69e:	shr    DWORD PTR [edi],cl
  40e6a0:	push   ebp
  40e6a1:	into   
  40e6a2:	or     eax,0x9e6cc8b7
  40e6a7:	add    dh,BYTE PTR [eax+ecx*2+0x65]
  40e6ab:	jmp    0x31f8:0x6e9d8dfb
  40e6b2:	pop    es
  40e6b3:	jbe    0x40e674
  40e6b5:	xchg   ebp,eax
  40e6b6:	out    dx,al
  40e6b7:	mov    ch,0x57
  40e6b9:	(bad)  
  40e6ba:	stos   DWORD PTR es:[edi],eax
  40e6bb:	call   esp
  40e6bd:	sbb    ch,BYTE PTR [ebx]
  40e6bf:	dec    esp
  40e6c0:	jne    0x40e6e6
  40e6c2:	arpl   bp,dx
  40e6c4:	push   ss
  40e6c5:	fs xor eax,0xb441c3d5
  40e6cb:	add    al,0xb8
  40e6cd:	and    al,0x30
  40e6cf:	adc    al,0x31
  40e6d1:	jbe    0x40e747
  40e6d3:	push   es
  40e6d4:	mov    al,ch
  40e6d6:	pop    ebx
  40e6d7:	mov    BYTE PTR ds:0x6eea4654,cl
  40e6dd:	and    DWORD PTR [esi],edi
  40e6df:	mov    ah,0x49
  40e6e1:	mov    eax,ds:0x854ead1b
  40e6e6:	sub    eax,edi
  40e6e8:	sbb    ecx,edi
  40e6ea:	lahf   
  40e6eb:	inc    ebx
  40e6ec:	sub    bh,BYTE PTR [edx]
  40e6ee:	mov    WORD PTR [ebx+ebx*1+0x705f03cd],ds
  40e6f5:	arpl   WORD PTR [edx-0x3726fe5e],si
  40e6fb:	stc    
  40e6fc:	pop    ebp
  40e6fd:	retf   
  40e6fe:	cmp    DWORD PTR [edi],ebp
  40e700:	rcr    BYTE PTR ds:0x7ac44053,cl
  40e706:	xlat   BYTE PTR ds:[ebx]
  40e707:	jno    0x40e6fa
  40e709:	pushf  
  40e70a:	mov    DWORD PTR [eax+edi*2-0x6e0d64b9],ebx
  40e711:	sbb    al,BYTE PTR [edx-0x3f252832]
  40e717:	xchg   esi,eax
  40e718:	in     eax,dx
  40e719:	add    ecx,DWORD PTR [ebx+ebp*4+0x2a77a2f]
  40e720:	inc    ebp
  40e721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e722:	loopne 0x40e777
  40e724:	int3   
  40e725:	xchg   DWORD PTR [edx+0x66],ebp
  40e728:	ds sti 
  40e72a:	fwait
  40e72b:	scas   eax,DWORD PTR es:[edi]
  40e72c:	push   0xffffffa2
  40e72e:	mov    bl,0x88
  40e730:	pop    ebp
  40e731:	add    edx,edi
  40e733:	dec    eax
  40e734:	mov    ebp,ebp
  40e736:	mov    al,ds:0x2b7da984
  40e73b:	loop   0x40e770
  40e73d:	loop   0x40e757
  40e73f:	pop    ecx
  40e740:	sub    DWORD PTR [esi+0x30],0xffffffe0
  40e744:	cs mov ah,0x25
  40e747:	imul   esp,ecx,0xdbb8e74c
  40e74d:	adc    eax,0x3fe50747
  40e752:	dec    ebp
  40e753:	pop    ds
  40e754:	ss jb  0x40e7b3
  40e757:	popa   
  40e758:	cld    
  40e759:	mov    edx,0x6a0a8292
  40e75e:	arpl   WORD PTR [edx],bp
  40e760:	loope  0x40e7c9
  40e762:	(bad)  
  40e763:	addr16 push eax
  40e765:	(bad)  
  40e766:	jne    0x40e748
  40e768:	daa    
  40e769:	and    DWORD PTR [edi-0x1d],eax
  40e76c:	(bad)  
  40e76d:	out    0xaa,al
  40e76f:	dec    edx
  40e770:	call   0x8b41:0xa2311a97
  40e777:	mov    bl,0xbc
  40e779:	shl    BYTE PTR [ebp+0x7f18ddd],cl
  40e77f:	add    DWORD PTR ds:0xb47782b9,ecx
  40e785:	xlat   BYTE PTR ds:[ebx]
  40e786:	or     eax,0x145343bb
  40e78b:	or     dl,0x2c
  40e78e:	mov    bl,0x66
  40e790:	(bad)  
  40e791:	shl    eax,1
  40e793:	mov    esi,0xae2ada65
  40e798:	ins    DWORD PTR es:[edi],dx
  40e799:	imul   esp,esp,0x322dd49e
  40e79f:	pop    esp
  40e7a0:	aam    0x14
  40e7a2:	out    0x3b,al
  40e7a4:	mov    ?,WORD PTR [edx+0x36dc8663]
  40e7aa:	pushf  
  40e7ab:	addr16 loop 0x40e761
  40e7ae:	adc    edx,esi
  40e7b0:	daa    
  40e7b1:	dec    edi
  40e7b2:	dec    ebp
  40e7b3:	pop    edx
  40e7b4:	retf   0x1de5
  40e7b7:	imul   ecx,DWORD PTR [edi+esi*1-0x24],0xffffffc3
  40e7bc:	xor    BYTE PTR [edi-0x70be634],dh
  40e7c2:	sbb    dl,BYTE PTR [ebx]
  40e7c4:	repz inc ecx
  40e7c6:	pushf  
  40e7c7:	inc    edi
  40e7c8:	sahf   
  40e7c9:	int3   
  40e7ca:	pop    ebx
  40e7cb:	xor    ebp,eax
  40e7cd:	lods   eax,DWORD PTR ds:[esi]
  40e7ce:	ja     0x40e78c
  40e7d0:	xor    bl,BYTE PTR [edx]
  40e7d2:	dec    esp
  40e7d3:	push   ebx
  40e7d4:	stos   BYTE PTR es:[edi],al
  40e7d5:	fwait
  40e7d6:	mov    WORD PTR [ebx+eax*4],gs
  40e7d9:	and    edx,0xe48a487e
  40e7df:	ret    0x905e
  40e7e2:	loope  0x40e836
  40e7e4:	rcr    DWORD PTR [edi-0x2e],1
  40e7e7:	jmp    0x40e833
  40e7e9:	cmp    DWORD PTR [ecx-0x5b],edi
  40e7ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7ed:	ins    BYTE PTR es:[edi],dx
  40e7ee:	sbb    eax,0xf219b6b8
  40e7f3:	leave  
  40e7f4:	dec    eax
  40e7f5:	loope  0x40e85f
  40e7f7:	js     0x40e7d6
  40e7f9:	xchg   ecx,eax
  40e7fa:	or     al,0x57
  40e7fc:	fwait
  40e7fd:	xchg   edi,eax
  40e7fe:	adc    eax,DWORD PTR [edx]
  40e800:	adc    DWORD PTR [edi-0x14],0x53343e04
  40e807:	aas    
  40e808:	int3   
  40e809:	stc    
  40e80a:	mov    WORD PTR [edi],?
  40e80c:	dec    edi
  40e80d:	aad    0x76
  40e80f:	xchg   DWORD PTR [esi],esi
  40e811:	mov    cs,WORD PTR [ecx+eax*8-0x19297c92]
  40e818:	imul   eax,DWORD PTR [ebp+0x2f],0xffffffc0
  40e81c:	xor    DWORD PTR [esp+esi*4],eax
  40e81f:	and    al,0xeb
  40e821:	hlt    
  40e822:	adc    DWORD PTR [edi+0x69],0x4a
  40e826:	add    al,0x4b
  40e828:	mov    dl,0x68
  40e82a:	(bad)  
  40e82b:	lods   al,BYTE PTR ds:[esi]
  40e82c:	pop    ss
  40e82d:	adc    eax,DWORD PTR [ebx+0x2a11d7a0]
  40e833:	jo     0x40e7c2
  40e835:	jb     0x40e7d5
  40e837:	pcmpeqd mm2,QWORD PTR [ebx]
  40e83a:	sbb    al,0x57
  40e83d:	dec    ecx
  40e83e:	fbld   TBYTE PTR [edi]
  40e840:	int    0x11
  40e842:	enter  0xc8c8,0x10
  40e846:	fsub   QWORD PTR [eax]
  40e848:	arpl   si,cx
  40e84a:	pop    esi
  40e84b:	ficom  DWORD PTR [esi]
  40e84d:	imul   eax,eax,0x6f
  40e850:	rcl    DWORD PTR [edi+0x628b29ed],1
  40e856:	stos   BYTE PTR es:[edi],al
  40e857:	sub    eax,0x12aff456
  40e85c:	dec    esp
  40e85d:	pop    esi
  40e85e:	int    0xfb
  40e860:	sbb    esi,DWORD PTR [ebp+ebp*8-0x2a0e5ae6]
  40e867:	sbb    DWORD PTR [ebx],esi
  40e869:	retf   0xec93
  40e86c:	lock push ecx
  40e86e:	inc    edi
  40e86f:	mov    ah,0xaf
  40e871:	int3   
  40e872:	cdq    
  40e873:	popf   
  40e874:	push   edi
  40e875:	fdivp  st(6),st
  40e877:	je     0x40e8d4
  40e879:	adc    BYTE PTR [ebx-0x5d],dl
  40e87c:	mov    bh,0x6a
  40e87e:	push   ds
  40e87f:	pop    ebp
  40e880:	js     0x40e8f3
  40e882:	aaa    
  40e883:	mov    ch,BYTE PTR [eax+0x42]
  40e886:	fcmove st,st(7)
  40e888:	test   eax,0xc2e31f1f
  40e88d:	pushf  
  40e88e:	push   edx
  40e88f:	cli    
  40e890:	cmp    BYTE PTR [esi+0x46de0080],dh
  40e896:	and    eax,DWORD PTR [ebx-0x61f2449d]
  40e89c:	xchg   BYTE PTR [ebx],ah
  40e89e:	mov    dh,0xc7
  40e8a0:	jmp    0x285946fa
  40e8a5:	dec    ebx
  40e8a6:	aaa    
  40e8a7:	retf   0xbde
  40e8aa:	xor    eax,0xddd4a8b4
  40e8af:	xchg   ebp,eax
  40e8b0:	sub    esp,DWORD PTR [eax+0x2ad02669]
  40e8b6:	inc    ebp
  40e8b7:	or     al,0xa4
  40e8b9:	fwait
  40e8ba:	cmp    BYTE PTR [edi+esi*4+0x5e793458],dh
  40e8c1:	cdq    
  40e8c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8c3:	sub    DWORD PTR [edi+0x42],ebx
  40e8c6:	test   eax,0xccdd2df
  40e8cb:	nop
  40e8cc:	jno    0x40e8ef
  40e8ce:	mov    ecx,0x552b6ccf
  40e8d3:	jp     0x40e8e7
  40e8d5:	mov    cl,0x96
  40e8d7:	ret    0xc4d6
  40e8da:	jmp    0x40e918
  40e8dc:	ins    BYTE PTR es:[edi],dx
  40e8dd:	adc    dh,BYTE PTR [esi+0x6b]
  40e8e0:	mov    ds:0xa6f9fe93,eax
  40e8e5:	sbb    ah,BYTE PTR [ecx-0x38]
  40e8e8:	sbb    eax,0x7031b8f0
  40e8ed:	mov    bh,0x41
  40e8ef:	add    BYTE PTR [edi+0x738df0e7],dh
  40e8f5:	scas   eax,DWORD PTR es:[edi]
  40e8f6:	push   esp
  40e8f7:	jmp    0x40e963
  40e8f9:	ret    0xcf41
  40e8fc:	dec    ecx
  40e8fd:	dec    esp
  40e8fe:	aad    0x35
  40e900:	add    bl,dh
  40e902:	jne    0x40e91e
  40e904:	rcl    BYTE PTR [ebp-0x75811eb9],1
  40e90a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e90b:	adc    DWORD PTR [edx+0x7a8c0946],esi
  40e911:	mov    dl,BYTE PTR [esi-0x33]
  40e914:	mov    edx,0x10aed05a
  40e919:	ds push eax
  40e91b:	(bad)
  40e91e:	pusha  
  40e91f:	push   es
  40e920:	dec    eax
  40e921:	sbb    BYTE PTR [ecx+0x2a],cl
  40e924:	push   0x20ff573f
  40e929:	fsubp  st(2),st
  40e92b:	popf   
  40e92c:	cdq    
  40e92d:	xchg   esp,eax
  40e92e:	test   al,0xcd
  40e930:	aam    0xfb
  40e932:	fmul   QWORD PTR [ebx]
  40e934:	in     al,0x4c
  40e936:	dec    esp
  40e937:	xor    DWORD PTR [esi+eiz*4+0x30],0xfffffff0
  40e93c:	xchg   BYTE PTR ds:0xe5a650d3,al
  40e942:	dec    eax
  40e943:	sbb    DWORD PTR [edx],esi
  40e945:	cld    
  40e946:	xlat   BYTE PTR ds:[bx]
  40e948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e949:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40e94b:	clc    
  40e94c:	jmp    0x9c68527d
  40e951:	test   al,0xee
  40e953:	pop    ds
  40e954:	dec    ecx
  40e955:	mov    ah,ch
  40e957:	jp     0x40e971
  40e959:	jp     0x40e96d
  40e95b:	scas   eax,DWORD PTR es:[edi]
  40e95c:	pop    esp
  40e95d:	in     al,dx
  40e95e:	ss aad 0x61
  40e961:	inc    edx
  40e962:	sub    eax,0x75c19bb9
  40e967:	int    0x90
  40e969:	icebp  
  40e96a:	iret   
  40e96b:	inc    edx
  40e96c:	xchg   ecx,eax
  40e96d:	std    
  40e96e:	cmp    eax,0xa8c320c5
  40e973:	pop    edx
  40e974:	shl    ecx,cl
  40e976:	ret    
  40e977:	lds    eax,FWORD PTR [eax+0x6baa81e1]
  40e97d:	dec    esp
  40e97e:	dec    eax
  40e97f:	dec    esi
  40e980:	sbb    ecx,edx
  40e982:	jmp    0xa4a8:0xe995977e
  40e989:	enter  0x1b16,0x86
  40e98d:	sbb    bl,BYTE PTR [eax+0x62e823cb]
  40e993:	in     al,dx
  40e994:	adc    BYTE PTR [esi-0x5686ee69],0x90
  40e99b:	stc    
  40e99c:	and    DWORD PTR [edx+edi*2+0x621112f5],edi
  40e9a3:	mov    ch,al
  40e9a5:	push   0x98aa604c
  40e9aa:	push   ds
  40e9ab:	popa   
  40e9ac:	add    BYTE PTR [edi+0x39],bh
  40e9af:	std    
  40e9b0:	cmp    eax,0x115d0c7
  40e9b5:	push   ecx
  40e9b6:	loop   0x40e9c7
  40e9b8:	loope  0x40e973
  40e9ba:	sbb    ch,BYTE PTR [ebx]
  40e9bc:	stos   DWORD PTR es:[edi],eax
  40e9bd:	mov    ah,0xbb
  40e9bf:	imul   ebp,ebx,0xeb88addc
  40e9c5:	jns    0x40e980
  40e9c7:	(bad)  
  40e9c8:	jb     0x40ea08
  40e9ca:	xchg   esi,eax
  40e9cb:	xchg   esp,eax
  40e9cc:	out    dx,eax
  40e9cd:	sbb    ebx,DWORD PTR [ebx]
  40e9cf:	fimul  WORD PTR [eax-0x36b41775]
  40e9d5:	xchg   edx,eax
  40e9d6:	adc    cl,BYTE PTR [ecx+0x66adcbbb]
  40e9dc:	ret    0x8b6d
  40e9df:	and    eax,0x81a416db
  40e9e4:	jbe    0x40ea3b
  40e9e6:	das    
  40e9e7:	mov    BYTE PTR [esi+edx*1+0x3a8957d9],dl
  40e9ee:	lahf   
  40e9ef:	pop    esi
  40e9f0:	cmp    ebx,edx
  40e9f2:	xor    dh,BYTE PTR [ebx+0x26]
  40e9f5:	jge    0x40ea1a
  40e9f7:	(bad)  
  40e9f8:	adc    DWORD PTR [eax-0x72],esi
  40e9fb:	repz cmp ebx,ebp
  40e9fe:	stos   BYTE PTR es:[edi],al
  40e9ff:	or     DWORD PTR [ecx],ebx
  40ea01:	sti    
  40ea02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea03:	out    dx,al
  40ea04:	ror    DWORD PTR [ebx-0x52aa5f6e],1
  40ea0a:	das    
  40ea0b:	xor    eax,0x17df1b40
  40ea10:	inc    eax
  40ea11:	push   es
  40ea12:	and    al,BYTE PTR [eax+0x3b]
  40ea15:	dec    eax
  40ea16:	pushf  
  40ea17:	aad    0xc
  40ea19:	in     al,dx
  40ea1a:	xor    ebx,DWORD PTR [esi-0x56]
  40ea1d:	lods   eax,DWORD PTR ds:[esi]
  40ea1e:	mov    al,ds:0x6819e584
  40ea23:	aam    0xff
  40ea25:	cld    
  40ea26:	mov    edi,0x59cec1b8
  40ea2b:	mov    ah,0x23
  40ea2d:	les    ebp,FWORD PTR [esi+0x69c45fca]
  40ea33:	inc    esi
  40ea34:	mov    ds:0xd356d58,eax
  40ea39:	and    dl,BYTE PTR [ebp+0x62]
  40ea3c:	ds or  eax,0x97138c5b
  40ea42:	xchg   ecx,eax
  40ea43:	fsubrp st(7),st
  40ea45:	loopne 0x40e9dd
  40ea47:	repnz mov ds:0xe3609f00,eax
  40ea4d:	addr16 je 0x40e9d7
  40ea50:	xor    al,0x9b
  40ea52:	enter  0xcbfa,0x9d
  40ea56:	stos   DWORD PTR es:[edi],eax
  40ea57:	iret   
  40ea58:	or     edi,ebx
  40ea5a:	adc    ecx,DWORD PTR [ebp+0x77]
  40ea5d:	mov    dh,0x29
  40ea5f:	jp     0x40ea20
  40ea61:	dec    eax
  40ea62:	arpl   WORD PTR [esp+ebp*1+0x7c],dx
  40ea66:	hlt    
  40ea67:	les    ebx,FWORD PTR [eax-0x887fbd2]
  40ea6d:	cs fucomp st(1)
  40ea70:	ins    BYTE PTR es:[edi],dx
  40ea71:	popa   
  40ea72:	ret    0x2d11
  40ea75:	repz pop ss
  40ea77:	fdiv   QWORD PTR [esi]
  40ea79:	fs add eax,0xa72a79f
  40ea7f:	xor    al,0xfe
  40ea81:	mov    edx,0xf6d15a83
  40ea86:	inc    ecx
  40ea87:	mov    ch,0x41
  40ea89:	daa    
  40ea8a:	mov    ebp,0xdf08956e
  40ea8f:	jp     0x40eaba
  40ea91:	aas    
  40ea92:	sar    DWORD PTR ds:0xf3f3405a,cl
  40ea98:	sbb    eax,0x21859975
  40ea9d:	and    eax,0x9a92b3d9
  40eaa2:	jbe    0x40eadc
  40eaa4:	cli    
  40eaa5:	test   eax,0x4a16bef5
  40eaaa:	addr16 call 0xbe7:0x59045b90
  40eab2:	push   eax
  40eab3:	xlat   BYTE PTR ds:[ebx]
  40eab4:	sbb    BYTE PTR [esi+edx*2-0xd7a4cdb],cl
  40eabb:	xchg   ecx,eax
  40eabc:	retf   
  40eabd:	xor    eax,0x9d3223ef
  40eac2:	adc    BYTE PTR [edx-0x72fb1a50],dh
  40eac8:	outs   dx,BYTE PTR ds:[esi]
  40eac9:	push   0x9e2a9e7e
  40eace:	gs push esi
  40ead0:	fadd   QWORD PTR [edi]
  40ead2:	add    ch,BYTE PTR [ebp+0x8]
  40ead5:	or     BYTE PTR [edx+0x31],ah
  40ead8:	mov    ds:0xbfb86e6f,al
  40eadd:	xchg   ebx,eax
  40eade:	cmp    ebx,DWORD PTR [eax]
  40eae0:	mov    BYTE PTR [esi+0xe],ch
  40eae3:	rol    DWORD PTR [ebx],cl
  40eae5:	ins    DWORD PTR es:[edi],dx
  40eae6:	imul   ebp,DWORD PTR cs:0xdb0baf09,0x40f74ad4
  40eaf1:	fiadd  DWORD PTR [edi-0x41]
  40eaf4:	mov    ebx,0xe50a4ba5
  40eaf9:	int    0xb8
  40eafb:	rol    dl,1
  40eafd:	cld    
  40eafe:	jnp    0x40eaea
  40eb00:	or     DWORD PTR [ebp+esi*8+0xe0751e],ebp
  40eb07:	retf   
  40eb08:	xor    al,0xe9
  40eb0a:	addr16 pusha 
  40eb0c:	(bad)  
  40eb0d:	push   edi
  40eb0e:	or     eax,DWORD PTR [eax]
  40eb10:	stos   DWORD PTR es:[edi],eax
  40eb11:	mov    cl,0x3b
  40eb13:	mov    ebp,0xf658344c
  40eb18:	mov    esi,0xd70a1521
  40eb1d:	fnstcw WORD PTR [ebx]
  40eb1f:	mov    ch,0x5a
  40eb21:	pop    eax
  40eb22:	int    0x1f
  40eb24:	sub    esp,eax
  40eb26:	dec    edi
  40eb27:	mov    bh,0x3b
  40eb29:	adc    al,bh
  40eb2b:	gs ret 
  40eb2d:	(bad)  
  40eb2e:	dec    edx
  40eb2f:	shl    BYTE PTR [ebp-0x1224b0f5],0x6f
  40eb36:	add    eax,DWORD PTR [ebx-0x42db79bd]
  40eb3c:	neg    BYTE PTR [edx+0x2621f108]
  40eb42:	pop    ebp
  40eb43:	mov    al,0x27
  40eb45:	ins    BYTE PTR es:[edi],dx
  40eb46:	enter  0xed3b,0xa3
  40eb4a:	push   ss
  40eb4b:	mov    ecx,0xa6c80d55
  40eb50:	jg     0x40eb37
  40eb52:	js     0x40eb77
  40eb54:	call   0x8ef9:0xa737aca6
  40eb5b:	ins    DWORD PTR es:[edi],dx
  40eb5c:	sbb    cl,BYTE PTR [edx-0x12ff666d]
  40eb62:	and    esp,DWORD PTR [esi]
  40eb64:	ret    
  40eb65:	lods   al,BYTE PTR ds:[esi]
  40eb66:	jns    0x40ebad
  40eb68:	xchg   edi,esp
  40eb6a:	pop    edx
  40eb6b:	retf   0x3f9
  40eb6e:	mov    WORD PTR [edx],ss
  40eb70:	cmp    BYTE PTR [edi],dl
  40eb72:	sbb    al,0xfe
  40eb74:	or     ax,0x737
  40eb78:	jl     0x40eaff
  40eb7a:	push   esp
  40eb7b:	jae    0x40ebe3
  40eb7d:	arpl   WORD PTR [ebp+ecx*8-0x2],dx
  40eb81:	push   esi
  40eb82:	rol    DWORD PTR fs:[edx+0x6dc14bb0],0xfc
  40eb8a:	or     ah,dl
  40eb8c:	or     eax,0x51f2d0c3
  40eb91:	out    dx,eax
  40eb92:	stos   BYTE PTR es:[edi],al
  40eb93:	push   0xffffffb1
  40eb95:	lods   al,BYTE PTR ds:[esi]
  40eb96:	pop    es
  40eb97:	xchg   ecx,eax
  40eb98:	sub    esp,DWORD PTR [edi-0x72a401e3]
  40eb9e:	dec    ebp
  40eb9f:	inc    edx
  40eba0:	xchg   edx,eax
  40eba1:	cmp    eax,0xecbbdc37
  40eba6:	cmp    ecx,DWORD PTR [ecx+0x71]
  40eba9:	add    al,0x7d
  40ebab:	test   edi,ebp
  40ebad:	fcmovnb st,st(2)
  40ebaf:	xchg   BYTE PTR [edi+ecx*4+0x7500da48],bl
  40ebb6:	cdq    
  40ebb7:	arpl   WORD PTR [esp+ebp*2+0x15599c7d],si
  40ebbe:	adc    DWORD PTR [ebx+0x25],ebx
  40ebc1:	adc    al,0x9e
  40ebc3:	xor    BYTE PTR [eax],bl
  40ebc5:	mov    ebx,0xd98644dd
  40ebca:	in     al,0xe0
  40ebcc:	mov    ah,0x1b
  40ebce:	xchg   ecx,eax
  40ebcf:	js     0x40ebdc
  40ebd1:	or     ecx,ebx
  40ebd3:	pop    es
  40ebd4:	mov    al,0xc9
  40ebd6:	fild   QWORD PTR [ebp+0x117faf5c]
  40ebdc:	jmp    0x24f8:0x5a73d93a
  40ebe3:	pop    ss
  40ebe4:	mov    ah,dl
  40ebe6:	ret    
  40ebe7:	mov    eax,ds:0x404e630f
  40ebec:	lds    esi,FWORD PTR [eax]
  40ebee:	mov    eax,ds:0xe3aca414
  40ebf3:	sbb    BYTE PTR [ebx],dl
  40ebf5:	dec    esi
  40ebf6:	jp     0x40ec5f
  40ebf8:	es push eax
  40ebfa:	xchg   esi,eax
  40ebfb:	xor    ecx,eax
  40ebfd:	ret    0x3a64
  40ec00:	sbb    BYTE PTR [ebp+0x5efbb4f9],ch
  40ec06:	test   eax,0xba2f0c37
  40ec0b:	sahf   
  40ec0c:	lods   eax,DWORD PTR ds:[esi]
  40ec0d:	pop    esp
  40ec0e:	jno    0x40ec62
  40ec10:	icebp  
  40ec11:	or     eax,DWORD PTR [ecx+eiz*1-0x6a]
  40ec15:	xor    BYTE PTR [ecx-0x6ca4c0d7],dh
  40ec1b:	jnp    0x40ec2a
  40ec1d:	jle    0x40ebab
  40ec1f:	mov    esi,0x77a965a4
  40ec24:	in     eax,0x8f
  40ec26:	push   0xb7e75505
  40ec2b:	mov    bl,0xad
  40ec2d:	push   edi
  40ec2e:	inc    edx
  40ec2f:	mov    esi,0xade3ed72
  40ec34:	(bad)  
  40ec36:	mov    dl,BYTE PTR [edx+ecx*4-0x4c1f16dd]
  40ec3d:	mov    bh,BYTE PTR [esi+ebp*2-0x55bb9033]
  40ec44:	mov    esp,0xb5180ab9
  40ec49:	or     bh,0x84
  40ec4c:	ss addr16 xchg ecx,eax
  40ec4f:	xchg   edx,eax
  40ec50:	ins    DWORD PTR es:[edi],dx
  40ec51:	xor    al,0xb8
  40ec53:	into   
  40ec54:	scas   al,BYTE PTR es:[edi]
  40ec55:	jnp    0x40ec68
  40ec57:	push   ds
  40ec58:	dec    edx
  40ec59:	mov    eax,0x94df2de
  40ec5e:	and    BYTE PTR [eax+edx*2+0x7db0b01a],dl
  40ec65:	or     BYTE PTR [edi-0x1e],0xc1
  40ec69:	daa    
  40ec6a:	dec    edi
  40ec6b:	ror    BYTE PTR ss:[ecx],1
  40ec6e:	call   0xb026d3c2
  40ec73:	pop    eax
  40ec74:	cmp    ch,BYTE PTR [eax]
  40ec76:	add    BYTE PTR [ecx+0x1e],cl
  40ec79:	push   edi
  40ec7a:	out    dx,al
  40ec7b:	enter  0xfbd5,0x43
  40ec7f:	pop    ebp
  40ec80:	iret   
  40ec81:	mov    dl,0x6a
  40ec83:	lock adc dh,0xa1
  40ec87:	lea    ebp,[ebx]
  40ec89:	or     DWORD PTR [edi],edx
  40ec8b:	sbb    eax,DWORD PTR [edx]
  40ec8d:	cmp    BYTE PTR [ebx+ebp*8],0xdd
  40ec91:	push   esp
  40ec92:	test   dl,0x75
  40ec95:	mov    edi,ebx
  40ec97:	out    0x8c,eax
  40ec99:	adc    al,BYTE PTR [ebx-0x42]
  40ec9c:	je     0x40ecfb
  40ec9e:	sti    
  40ec9f:	rcl    BYTE PTR [edi],cl
  40eca1:	sar    ebx,0xd9
  40eca4:	enter  0xc5d0,0x5c
  40eca8:	dec    edx
  40eca9:	(bad)  
  40ecaa:	mov    eax,ds:0x7c569d17
  40ecaf:	loope  0x40ec74
  40ecb1:	iret   
  40ecb2:	pop    edx
  40ecb3:	sahf   
  40ecb4:	jmp    0x40ed06
  40ecb6:	call   0x8cd1ad27
  40ecbb:	mov    ah,0xc
  40ecbd:	cmp    eax,0x91744cab
  40ecc2:	lea    ebp,es:[ecx+0x756d8f37]
  40ecc9:	cwde   
  40ecca:	mov    ebp,0x10c0925d
  40eccf:	mov    al,ds:0xefbb860
  40ecd4:	sbb    eax,esi
  40ecd6:	imul   esi,DWORD PTR [esi+0x38ac044f],0x102282d4
  40ece0:	push   es
  40ece1:	out    dx,eax
  40ece2:	arpl   WORD PTR [ecx-0x4f],di
  40ece5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ece6:	ret    
  40ece7:	and    al,BYTE PTR [esi-0x1161eaa0]
  40eced:	xor    ch,bl
  40ecef:	sti    
  40ecf0:	and    al,0x13
  40ecf2:	jmp    DWORD PTR [ebx-0x7]
  40ecf5:	dec    ebx
  40ecf6:	popf   
  40ecf7:	push   cs
  40ecf8:	jp     0x40ed69
  40ecfa:	add    eax,0x3931b676
  40ecff:	xchg   edx,eax
  40ed00:	rcl    BYTE PTR [ecx-0x43bd366e],cl
  40ed06:	xchg   ebp,eax
  40ed07:	lods   al,BYTE PTR cs:[esi]
  40ed09:	ret    
  40ed0a:	mov    DWORD PTR [ecx],edi
  40ed0c:	and    bl,BYTE PTR [esi-0x66033d1d]
  40ed12:	test   eax,0xbf317057
  40ed17:	jmp    0xb712:0xc3fda341
  40ed1e:	cli    
  40ed1f:	xchg   edx,eax
  40ed20:	add    DWORD PTR [esi],0x68bf809d
  40ed26:	add    eax,0xb3459851
  40ed2b:	pop    esi
  40ed2c:	neg    BYTE PTR [esi-0x3b]
  40ed2f:	shl    BYTE PTR [ecx+0x2d],1
  40ed32:	ret    0x8c2f
  40ed35:	xor    BYTE PTR [esi-0x2a],cl
  40ed38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed39:	shr    DWORD PTR [eax+0x6d],cl
  40ed3c:	xchg   edx,eax
  40ed3d:	bound  eax,QWORD PTR [edi]
  40ed3f:	sub    eax,0x818f4768
  40ed44:	shr    DWORD PTR [eax-0x5e5d2c95],1
  40ed4a:	les    esp,FWORD PTR [ebx-0x3c1fc333]
  40ed50:	cmp    ah,al
  40ed52:	ins    DWORD PTR es:[edi],dx
  40ed53:	add    cl,ch
  40ed55:	repz jbe 0x40eda1
  40ed58:	sar    BYTE PTR fs:[edi+esi*4],cl
  40ed5c:	aas    
  40ed5d:	sub    eax,0x459c2bc2
  40ed62:	jl     0x40edcb
  40ed64:	stos   BYTE PTR es:[edi],al
  40ed65:	lds    ebx,FWORD PTR [esi]
  40ed67:	call   0xc6ba:0x3ff90757
  40ed6e:	inc    esi
  40ed6f:	adc    bl,BYTE PTR [ebp+0x3b7b9f5e]
  40ed75:	dec    esp
  40ed76:	test   DWORD PTR [edx+0x47442614],eax
  40ed7c:	loop   0x40ede8
  40ed7e:	pop    edx
  40ed7f:	out    dx,al
  40ed80:	cwde   
  40ed81:	test   BYTE PTR [ebx+0x47],al
  40ed84:	neg    eax
  40ed86:	shl    DWORD PTR [eax],cl
  40ed88:	shr    DWORD PTR [esi],1
  40ed8a:	sub    BYTE PTR [edx-0x460ab2b6],cl
  40ed90:	or     edi,DWORD PTR [edi-0x3a]
  40ed93:	xor    eax,0x47cc3165
  40ed98:	jmp    0x40ed46
  40ed9a:	xchg   edx,eax
  40ed9b:	pop    edx
  40ed9c:	xor    dl,BYTE PTR [edx+ecx*2]
  40ed9f:	xor    BYTE PTR [ebx],0x84
  40eda2:	sub    al,0x3a
  40eda4:	mov    dh,0xd7
  40eda6:	mov    bh,0x93
  40eda8:	fstp   QWORD PTR [esi+0x2c]
  40edab:	sub    cl,BYTE PTR [ebp+0x191d8eb6]
  40edb1:	xor    cl,bh
  40edb3:	test   eax,0xb2722b87
  40edb8:	sub    bh,BYTE PTR ds:0xac708dc6
  40edbe:	div    BYTE PTR [eax+eax*4]
  40edc1:	pop    es
  40edc2:	gs into 
  40edc4:	lods   al,BYTE PTR ds:[esi]
  40edc5:	ret    0xa557
  40edc8:	daa    
  40edc9:	pop    ebx
  40edca:	sar    DWORD PTR [edx],1
  40edcc:	stos   BYTE PTR es:[edi],al
  40edcd:	std    
  40edce:	push   eax
  40edcf:	(bad)  
  40edd0:	cdq    
  40edd1:	(bad)  
  40edd2:	dec    esi
  40edd3:	adc    DWORD PTR [esi-0xc],eax
  40edd6:	mov    dh,0x90
  40edd8:	add    BYTE PTR [esi+0x1f],bh
  40eddb:	test   eax,0x68d9f396
  40ede0:	jno    0x40edd8
  40ede2:	or     BYTE PTR [ebp+0xc2b670e],ah
  40ede8:	icebp  
  40ede9:	add    eax,DWORD PTR [esi+0x3719529f]
  40edef:	inc    ebp
  40edf0:	lahf   
  40edf1:	inc    ebp
  40edf2:	sahf   
  40edf3:	jns    0x40edb4
  40edf5:	imul   ebp,DWORD PTR [ecx-0x6012e19],0x65
  40edfc:	cmc    
  40edfd:	cmp    cl,ah
  40edff:	pop    ebx
  40ee00:	xchg   ebx,eax
  40ee01:	pop    ebp
  40ee02:	adc    BYTE PTR [edi],0x80
  40ee05:	xor    edx,edx
  40ee07:	in     al,dx
  40ee08:	cmc    
  40ee09:	je     0x40ee54
  40ee0b:	imul   edx,DWORD PTR [edi+0x48],0xaf28331b
  40ee12:	xchg   esi,eax
  40ee13:	inc    ecx
  40ee14:	inc    eax
  40ee15:	(bad)  
  40ee16:	out    0x50,al
  40ee18:	pop    ecx
  40ee19:	push   ebp
  40ee1a:	cdq    
  40ee1b:	jmp    0x40ee00
  40ee1d:	scas   eax,DWORD PTR es:[edi]
  40ee1e:	jbe    0x40eddb
  40ee20:	sbb    DWORD PTR [esp+edx*8],0xffffff81
  40ee24:	mov    al,ds:0x8ac00cca
  40ee29:	xlat   BYTE PTR ds:[ebx]
  40ee2a:	dec    ecx
  40ee2b:	jge    0x40eea9
  40ee2d:	js     0x40edba
  40ee2f:	(bad)  
  40ee31:	xor    ecx,DWORD PTR [ebp+eiz*2-0x73]
  40ee35:	push   esp
  40ee36:	int3   
  40ee37:	pop    esi
  40ee38:	pop    ecx
  40ee39:	loope  0x40ee83
  40ee3b:	das    
  40ee3c:	aaa    
  40ee3d:	xchg   edi,eax
  40ee3e:	cmp    al,0x8a
  40ee40:	push   edi
  40ee41:	loope  0x40ee85
  40ee43:	sbb    BYTE PTR [esi],0x7c
  40ee46:	mov    DWORD PTR [ebx],0x225414ce
  40ee4c:	push   es
  40ee4d:	dec    edx
  40ee4e:	arpl   dx,di
  40ee50:	push   edi
  40ee51:	pop    ss
  40ee52:	sub    DWORD PTR [ebx],esi
  40ee54:	sub    BYTE PTR [ebp-0x11],dh
  40ee57:	cmc    
  40ee58:	cmp    eax,eax
  40ee5a:	pop    ss
  40ee5b:	in     al,dx
  40ee5c:	mov    bh,0x18
  40ee5e:	dec    ecx
  40ee5f:	sbb    ebp,DWORD PTR [eax-0x5d]
  40ee62:	dec    edi
  40ee63:	shl    DWORD PTR [edx-0x12],cl
  40ee66:	xchg   ecx,eax
  40ee67:	scas   al,BYTE PTR es:[edi]
  40ee68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee69:	in     eax,dx
  40ee6a:	xchg   ecx,eax
  40ee6b:	jecxz  0x40eee3
  40ee6d:	mov    ah,0xa8
  40ee6f:	mov    cl,0x36
  40ee71:	push   es
  40ee72:	mov    edi,0xd5bd15bd
  40ee77:	jp     0x40ee97
  40ee79:	ds push 0xa2d47bad
  40ee7f:	into   
  40ee80:	xor    eax,0x6f078551
  40ee85:	inc    edx
  40ee86:	cwde   
  40ee87:	dec    esp
  40ee88:	pop    eax
  40ee89:	pop    ds
  40ee8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee8b:	lea    ebp,[ecx+0x75]
  40ee8e:	jb     0x40eeba
  40ee90:	sbb    dl,BYTE PTR [eax-0x78]
  40ee93:	mov    dh,0x84
  40ee95:	xor    DWORD PTR [edx+0x590a3596],edx
  40ee9b:	mov    ch,0x68
  40ee9d:	sbb    bl,BYTE PTR [esi-0x19]
  40eea0:	stos   BYTE PTR es:[edi],al
  40eea1:	push   eax
  40eea2:	pop    esi
  40eea3:	fisub  DWORD PTR [ebp-0x47e7f28c]
  40eea9:	ss pop ecx
  40eeab:	mov    ah,0xaa
  40eead:	adc    al,0xe6
  40eeaf:	popa   
  40eeb0:	xchg   esi,eax
  40eeb1:	xchg   esi,eax
  40eeb2:	mov    eax,0xcff5761c
  40eeb7:	mov    esp,0xf757ed46
  40eebc:	les    esp,FWORD PTR [edi]
  40eebe:	add    DWORD PTR [ecx],ebp
  40eec0:	adc    edx,ecx
  40eec2:	mov    ecx,0x6ec76294
  40eec7:	xchg   DWORD PTR [edi-0xa],edx
  40eeca:	les    edx,FWORD PTR [ecx+0x235d2714]
  40eed0:	pop    ecx
  40eed1:	sar    BYTE PTR [eax-0x57],0xe2
  40eed5:	imul   ebp,DWORD PTR [esi-0x46b7f76f],0x95c36eb6
  40eedf:	and    bl,ch
  40eee1:	retf   0xe25f
  40eee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eee5:	and    dl,BYTE PTR [edi+0x17]
  40eee8:	inc    eax
  40eee9:	and    BYTE PTR [edx-0x29ddbcda],0x9f
  40eef0:	mov    ebx,0xd28abe72
  40eef5:	mov    al,ds:0xa88dca7e
  40eefa:	(bad)  
  40eefb:	fs push ebp
  40eefd:	xchg   ebx,eax
  40eefe:	mov    al,BYTE PTR [edx]
  40ef00:	fidiv  WORD PTR [edx+ebx*2]
  40ef03:	cmp    bh,BYTE PTR [eax+0x51]
  40ef06:	lods   eax,DWORD PTR ds:[esi]
  40ef07:	sbb    eax,0xc985222
  40ef0c:	jg     0x40ee9b
  40ef0e:	call   0xbf2bc99d
  40ef13:	adc    BYTE PTR [esi],0x5d
  40ef16:	in     eax,dx
  40ef17:	sub    eax,0x4429e157
  40ef1c:	xor    al,0x9b
  40ef1e:	sub    eax,0xb9317cac
  40ef24:	xchg   DWORD PTR [edi-0x7b],edx
  40ef27:	ins    BYTE PTR es:[edi],dx
  40ef28:	scas   eax,DWORD PTR es:[edi]
  40ef29:	pop    edx
  40ef2a:	mov    esi,0x1d2f8488
  40ef2f:	mov    bl,0x72
  40ef31:	cmp    dh,ah
  40ef33:	jl     0x40ef44
  40ef35:	(bad)  
  40ef38:	ja     0x40eeed
  40ef3a:	pop    edi
  40ef3b:	(bad)  [ebp+0x7dc8c8e7]
  40ef41:	cmp    DWORD PTR [eax],edx
  40ef43:	pop    eax
  40ef44:	inc    eax
  40ef45:	inc    edx
  40ef46:	mov    ch,0x20
  40ef48:	js     0x40eefc
  40ef4a:	pop    ebp
  40ef4b:	adc    eax,0xa504762d
  40ef50:	js     0x40efa2
  40ef52:	pop    esp
  40ef53:	shr    DWORD PTR [ecx-0x45],cl
  40ef56:	les    esi,FWORD PTR [eax]
  40ef58:	call   0x4c8b:0x2b2e9c2c
  40ef5f:	xchg   ebp,eax
  40ef60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef61:	hlt    
  40ef62:	mov    DWORD PTR ds:[esi],esp
  40ef65:	or     al,0x30
  40ef67:	push   eax
  40ef68:	push   esp
  40ef69:	ret    
  40ef6a:	lods   eax,DWORD PTR ds:[esi]
  40ef6b:	outs   dx,BYTE PTR ds:[esi]
  40ef6c:	or     esi,DWORD PTR [eax]
  40ef6e:	cmp    eax,DWORD PTR [edx+esi*8]
  40ef71:	jmp    0x40ef67
  40ef73:	add    BYTE PTR [edx+0x464b4d70],bl
  40ef79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef7a:	pop    es
  40ef7b:	jbe    0x40efc0
  40ef7d:	adc    BYTE PTR fs:0xeb3de1eb,al
  40ef84:	ja     0x40ef27
  40ef86:	inc    ebx
  40ef87:	and    edi,DWORD PTR [ebx-0x1]
  40ef8a:	fdivr  QWORD PTR [ebx-0x3d]
  40ef8d:	sbb    BYTE PTR [eax+0x53],cl
  40ef90:	dec    edi
  40ef91:	adc    eax,0xed1632f4
  40ef96:	retf   0x45da
  40ef99:	out    0xfe,eax
  40ef9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef9d:	sbb    BYTE PTR [edx+edi*8-0x57],0xc6
  40efa2:	les    edi,FWORD PTR [esi-0x65982727]
  40efa8:	mov    ds:0xc10d7ce4,al
  40efad:	out    0xa9,eax
  40efaf:	les    ecx,FWORD PTR [edx-0x6f]
  40efb2:	pop    ebp
  40efb3:	or     al,0x24
  40efb6:	pusha  
  40efb7:	int    0x3f
  40efb9:	ret    
  40efba:	inc    eax
  40efbb:	jae    0x40ef77
  40efbd:	cmp    eax,0xe243fd0
  40efc2:	into   
  40efc3:	push   ebp
  40efc4:	mov    edi,gs
  40efc6:	(bad)  
  40efc7:	(bad)  [edi-0x743ddd2c]
  40efcd:	inc    ebx
  40efce:	loopne 0x40efab
  40efd0:	movq   mm7,QWORD PTR [edi-0x2d]
  40efd4:	mov    esi,DWORD PTR [edi-0x32cb7cdc]
  40efda:	sbb    DWORD PTR [ecx+eiz*4+0xe9f3ba4],ecx
  40efe1:	js     0x40efed
  40efe3:	div    BYTE PTR [edi]
  40efe5:	cmp    al,0x3
  40efe7:	imul   edi,DWORD PTR [ebp+ecx*4-0x6],0xffffffc1
  40efec:	and    al,0x89
  40efee:	mov    al,0xfa
  40eff0:	push   ss
  40eff1:	or     BYTE PTR [esi-0x11],0x7d
  40eff5:	fs push ds
  40eff7:	fisub  DWORD PTR [esi-0x38]
  40effa:	push   DWORD PTR [esi]
  40effc:	mov    ecx,0x9152e0a4
  40f001:	adc    eax,0x323ba868
  40f006:	leave  
  40f007:	imul   edi,DWORD PTR [eax*8-0x40d3b94c],0x3d1d066f
  40f012:	inc    ecx
  40f013:	fcom   QWORD PTR [ecx]
  40f015:	lea    ebx,[edi]
  40f017:	xchg   esp,eax
  40f018:	push   edx
  40f019:	mov    DWORD PTR [eax-0x7fbe447f],esi
  40f01f:	and    DWORD PTR [ebp+0x64],ebp
  40f022:	inc    esi
  40f023:	push   edx
  40f024:	mov    al,ds:0xc2cff8bd
  40f029:	pop    esi
  40f02a:	and    bh,BYTE PTR [edx]
  40f02c:	ins    DWORD PTR es:[edi],dx
  40f02d:	fcmovnb st,st(7)
  40f02f:	loopne 0x40efc6
  40f031:	push   edx
  40f032:	ins    DWORD PTR es:[edi],dx
  40f033:	adc    al,0xa0
  40f035:	test   DWORD PTR [eax+0x53a99d54],edi
  40f03b:	rcr    BYTE PTR [edi+0x14fd472e],1
  40f041:	out    dx,al
  40f042:	dec    eax
  40f043:	stos   BYTE PTR es:[edi],al
  40f044:	adc    DWORD PTR ds:[esi+edi*1-0x32d69938],ebp
  40f04c:	jns    0x40f03f
  40f04e:	in     al,0x1b
  40f050:	pop    esp
  40f051:	and    eax,0xe7616ecb
  40f056:	fstp   QWORD PTR [ebp+0x7c11f259]
  40f05c:	loope  0x40f0c6
  40f05e:	sub    esp,DWORD PTR [ecx-0x6e541f40]
  40f064:	(bad)  [esi+0x7fcb8b47]
  40f06a:	add    ebp,DWORD PTR [ebx-0x3a]
  40f06d:	mov    cs,WORD PTR [ebp-0x69]
  40f070:	pop    eax
  40f071:	fcmove st,st(1)
  40f073:	dec    edx
  40f074:	std    
  40f075:	sbb    eax,0xe30e7062
  40f07a:	cmc    
  40f07b:	inc    edx
  40f07c:	adc    ebx,ebx
  40f07e:	jae    0x40f04a
  40f080:	jnp    0x40f073
  40f082:	daa    
  40f083:	and    edx,DWORD PTR [eax-0x73eab99d]
  40f089:	mov    dl,0xb0
  40f08b:	mov    ds:0x9724502,eax
  40f090:	jno    0x40f090
  40f092:	ror    BYTE PTR [esi+eax*4],0x38
  40f096:	mov    ecx,0xdc63cd48
  40f09b:	cmp    al,0x9e
  40f09d:	cmp    al,0x7a
  40f09f:	jbe    0x40f0a2
  40f0a1:	clc    
  40f0a2:	ret    
  40f0a3:	scas   al,BYTE PTR es:[edi]
  40f0a4:	cdq    
  40f0a5:	nop
  40f0a6:	out    dx,al
  40f0a7:	ss pop edx
  40f0a9:	aad    0xef
  40f0ab:	repz add DWORD PTR [edi+0x8],esp
  40f0af:	in     eax,dx
  40f0b0:	mov    dl,0xbe
  40f0b2:	jns    0x40f11c
  40f0b4:	add    al,0xd0
  40f0b6:	das    
  40f0b7:	scas   eax,DWORD PTR es:[edi]
  40f0b8:	pop    es
  40f0b9:	push   ecx
  40f0ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0bb:	into   
  40f0bc:	inc    esp
  40f0bd:	rcr    DWORD PTR ds:0xe1b39718,0x30
  40f0c4:	sbb    cl,dl
  40f0c6:	mov    edx,DWORD PTR [eax-0x7]
  40f0c9:	adc    ebp,DWORD PTR [esi+0x12]
  40f0cc:	leave  
  40f0cd:	push   es
  40f0ce:	pop    fs
  40f0d0:	xor    ebx,eax
  40f0d2:	mov    edi,0x7debcc8a
  40f0d7:	or     DWORD PTR [edi-0x7ac35893],ebx
  40f0dd:	pop    eax
  40f0de:	stos   DWORD PTR es:[edi],eax
  40f0df:	std    
  40f0e0:	jns    0x40f067
  40f0e2:	sub    DWORD PTR ds:0xd2bf31fa,ebx
  40f0e8:	sar    dl,0xb7
  40f0eb:	jmp    0x40f160
  40f0ed:	mov    ch,0xc1
  40f0ef:	(bad)  
  40f0f0:	fwait
  40f0f1:	add    eax,0xf10ddb47
  40f0f6:	pop    DWORD PTR [ebx-0x486976e7]
  40f0fc:	nop
  40f0fd:	pop    es
  40f0fe:	shr    DWORD PTR [esp+edx*8],cl
  40f101:	dec    eax
  40f102:	xor    BYTE PTR [edi+0x40],0xe4
  40f106:	sub    al,0x15
  40f108:	dec    ecx
  40f109:	mov    eax,0x9d914215
  40f10e:	mov    ebp,0xa4c657b0
  40f113:	into   
  40f114:	scas   eax,DWORD PTR es:[edi]
  40f115:	js     0x40f0fd
  40f117:	push   cs
  40f118:	mov    dl,0x1
  40f11a:	pop    edx
  40f11b:	ins    DWORD PTR es:[edi],dx
  40f11c:	pop    ebx
  40f11d:	mov    ebp,0x95e161ea
  40f122:	push   ebx
  40f123:	cmp    BYTE PTR [edi+0x4c],dh
  40f126:	fimul  WORD PTR [ebx+0x611fc07f]
  40f12c:	mov    eax,0xb41bcb60
  40f131:	pop    ebx
  40f132:	loopne 0x40f147
  40f134:	inc    ebx
  40f135:	or     eax,0xb6b3d5d5
  40f13a:	stos   DWORD PTR es:[edi],eax
  40f13b:	cld    
  40f13c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f13d:	pusha  
  40f13e:	fimul  WORD PTR [esi+0x111d12a2]
  40f144:	sub    al,0xdc
  40f146:	test   BYTE PTR gs:[esp+edi*2-0x65],0x80
  40f14c:	and    eax,0xde8a8177
  40f151:	mov    bl,0x73
  40f153:	repnz pop edx
  40f155:	ss pop es
  40f157:	adc    eax,0x58d8975d
  40f15c:	mov    dl,BYTE PTR [edi-0x4c]
  40f15f:	nop
  40f160:	adc    eax,0xfb53af16
  40f165:	aam    0x44
  40f167:	adc    DWORD PTR [edi],esp
  40f169:	jbe    0x40f10c
  40f16b:	out    dx,al
  40f16c:	pusha  
  40f16d:	mov    ebx,edx
  40f16f:	and    ah,cl
  40f171:	fnstenv [esi+edi*8]
  40f174:	loope  0x40f195
  40f176:	inc    ecx
  40f177:	and    edx,DWORD PTR [ecx+0x1396c18e]
  40f17d:	call   0xf2fe85d2
  40f182:	inc    ebx
  40f183:	fucomp st(3)
  40f185:	pop    ecx
  40f186:	aaa    
  40f187:	pop    es
  40f188:	addr16 cmove ebx,ebp
  40f18c:	das    
  40f18d:	in     al,0x37
  40f18f:	popa   
  40f190:	scas   eax,DWORD PTR es:[edi]
  40f191:	ja     0x40f1e4
  40f193:	sahf   
  40f194:	push   edi
  40f195:	mov    BYTE PTR [edx],0x3
  40f198:	sub    eax,0xa2c32fbd
  40f19d:	pop    edx
  40f19e:	push   ds
  40f19f:	xchg   DWORD PTR [ebp-0x34],ecx
  40f1a2:	leave  
  40f1a3:	(bad)  fs:[ebx+0x5b99cbb3]
  40f1aa:	popa   
  40f1ab:	outs   dx,DWORD PTR ds:[esi]
  40f1ac:	arpl   ax,bx
  40f1ae:	iret   
  40f1af:	dec    edx
  40f1b0:	mov    edi,0x96a4b975
  40f1b5:	imul   edx,DWORD PTR [esi+0x3e],0x19dca1ae
  40f1bc:	leave  
  40f1bd:	pop    edx
  40f1be:	daa    
  40f1bf:	push   ecx
  40f1c0:	dec    esi
  40f1c1:	cdq    
  40f1c2:	in     eax,0x42
  40f1c4:	in     eax,dx
  40f1c5:	and    BYTE PTR [eax-0x8],ah
  40f1c8:	xchg   esi,eax
  40f1c9:	pop    es
  40f1ca:	cmp    al,0xe7
  40f1cc:	push   edi
  40f1cd:	jnp    0x40f1dc
  40f1cf:	xor    al,0xcd
  40f1d1:	pop    es
  40f1d2:	jle    0x40f23d
  40f1d4:	jl     0x40f213
  40f1d6:	sahf   
  40f1d7:	pop    edi
  40f1d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1d9:	or     eax,0x1c50c63
  40f1de:	jecxz  0x40f219
  40f1e0:	movaps xmm5,xmm2
  40f1e3:	ret    
  40f1e4:	ins    DWORD PTR es:[edi],dx
  40f1e5:	(bad)  
  40f1e6:	ss (bad) 
  40f1e8:	cdq    
  40f1e9:	lods   eax,DWORD PTR ds:[esi]
  40f1ea:	xchg   ebp,eax
  40f1eb:	xchg   esp,eax
  40f1ec:	xchg   ecx,eax
  40f1ed:	jle    0x40f174
  40f1ef:	repnz add BYTE PTR [edi+edi*8],cl
  40f1f3:	push   esi
  40f1f4:	shl    BYTE PTR [edi],0x69
  40f1f7:	mov    bl,0xab
  40f1f9:	stos   DWORD PTR es:[edi],eax
  40f1fa:	xor    dh,bh
  40f1fc:	dec    edi
  40f1fd:	fcomip st,st(2)
  40f1ff:	mov    eax,ebp
  40f201:	data16 (bad) 
  40f203:	jmp    0x40f238
  40f205:	lds    esp,FWORD PTR [ebp+eax*4-0x26]
  40f209:	call   0xcbe79579
  40f20e:	rcr    BYTE PTR [esi+0x63],0x0
  40f212:	sahf   
  40f213:	pop    es
  40f214:	in     al,dx
  40f215:	or     ah,BYTE PTR [ebx+0x248940e2]
  40f21b:	jle    0x40f258
  40f21d:	retf   
  40f21e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f21f:	xor    al,0xe3
  40f221:	fs jo  0x40f26b
  40f224:	sti    
  40f225:	sti    
  40f226:	jecxz  0x40f225
  40f228:	(bad)  
  40f229:	fcomp  DWORD PTR [esi+ebx*2-0x1f7e41f7]
  40f230:	sbb    al,0x44
  40f232:	daa    
  40f233:	ja     0x40f228
  40f235:	jmp    0x7f0d22bb
  40f23a:	sub    ah,BYTE PTR [edx+ebp*4]
  40f23d:	xor    esi,ebx
  40f23f:	mov    bh,0x89
  40f241:	iret   
  40f242:	outs   dx,DWORD PTR ds:[esi]
  40f243:	inc    esi
  40f244:	daa    
  40f245:	or     DWORD PTR [esi],edi
  40f247:	adc    dh,al
  40f249:	iret   
  40f24a:	mov    WORD PTR [ebx-0x4be7607a],es
  40f250:	jb     0x40f222
  40f252:	nop
  40f253:	sbb    ch,ch
  40f255:	call   0x985f4390
  40f25a:	mov    ebp,0xf2fc5020
  40f25f:	inc    ecx
  40f260:	frstor [esi+edi*8-0x5b04ab30]
  40f267:	or     BYTE PTR [eax+0x6d1d2fa2],ch
  40f26d:	clc    
  40f26e:	jp     0x40f27d
  40f270:	jmp    0x79f6:0x2de4f43d
  40f277:	jae    0x40f208
  40f279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f27a:	scas   eax,DWORD PTR es:[edi]
  40f27b:	mov    ah,cl
  40f27d:	leave  
  40f27e:	shr    al,1
  40f280:	push   esi
  40f281:	xor    bl,BYTE PTR [edx+0x6388af8e]
  40f287:	cmp    DWORD PTR [eax],edi
  40f289:	dec    esi
  40f28a:	mov    ah,BYTE PTR [edx]
  40f28c:	or     al,0xcd
  40f28e:	inc    edi
  40f28f:	outs   dx,BYTE PTR es:[esi]
  40f291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f292:	fidiv  DWORD PTR [ebp+eax*1+0x26]
  40f296:	push   ebx
  40f297:	adc    DWORD PTR [edx-0x599ab1ef],ebx
  40f29d:	out    dx,eax
  40f29e:	xchg   edx,eax
  40f29f:	add    DWORD PTR [eax],esp
  40f2a1:	aas    
  40f2a2:	xchg   edi,eax
  40f2a3:	and    cl,dh
  40f2a5:	(bad)  
  40f2a6:	imul   esp,DWORD PTR [ecx],0x86051071
  40f2ac:	cmp    BYTE PTR [edx+0x11],al
  40f2af:	ror    DWORD PTR [ebx-0x1221771a],0x15
  40f2b6:	or     eax,0x131821e3
  40f2bb:	or     eax,0x89439e7f
  40f2c0:	cmc    
  40f2c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2c2:	out    dx,eax
  40f2c3:	xchg   ecx,eax
  40f2c4:	pop    esi
  40f2c5:	inc    eax
  40f2c6:	fdivrp st(3),st
  40f2c8:	mov    cl,bh
  40f2ca:	pop    edi
  40f2cb:	inc    edi
  40f2cc:	rcl    BYTE PTR [esi+eax*1],0x59
  40f2d0:	jecxz  0x40f2d0
  40f2d2:	sub    DWORD PTR [ebx-0x52],ebx
  40f2d5:	clc    
  40f2d6:	arpl   WORD PTR ds:0x7ce6f5ec,dx
  40f2dc:	add    BYTE PTR [ebx-0x54],bh
  40f2df:	mov    DWORD PTR [ebx+eax*2+0x1b],esi
  40f2e3:	jecxz  0x40f301
  40f2e5:	xchg   ebp,eax
  40f2e6:	mov    ch,0x8b
  40f2e8:	jmp    FWORD PTR [ebx-0x41958c3d]
  40f2ee:	xor    dl,al
  40f2f0:	pop    es
  40f2f1:	jge    0x40f352
  40f2f3:	repz scas al,BYTE PTR es:[edi]
  40f2f5:	lahf   
  40f2f6:	push   es
  40f2f7:	mov    eax,ds:0x45dfafbe
  40f2fc:	loopne 0x40f2f9
  40f2fe:	pop    edx
  40f2ff:	or     DWORD PTR [esi],edi
  40f301:	cdq    
  40f302:	cli    
  40f303:	ja     0x40f361
  40f305:	pop    es
  40f306:	pop    ecx
  40f307:	icebp  
  40f308:	push   cs
  40f309:	(bad)
  40f30c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f30d:	int    0x4a
  40f30f:	mov    dl,BYTE PTR [ebp+0x7]
  40f312:	ror    BYTE PTR ds:0xf473f66f,cl
  40f318:	xlat   BYTE PTR ds:[ebx]
  40f319:	test   al,0x2b
  40f31b:	cmp    DWORD PTR [edi-0x2bc131b9],esi
  40f321:	test   DWORD PTR [eax*1-0x1dfb2130],0x9b751672
  40f32c:	mov    bl,0xeb
  40f32e:	scas   al,BYTE PTR es:[edi]
  40f32f:	js     0x40f331
  40f331:	out    0x7f,eax
  40f333:	iret   
  40f334:	adc    BYTE PTR [ecx-0x23],cl
  40f337:	icebp  
  40f338:	bound  ebp,QWORD PTR [ebp-0x33082bf7]
  40f33e:	pushf  
  40f33f:	iret   
  40f340:	cmp    eax,DWORD PTR [esp+ebx*8-0x38194281]
  40f347:	add    al,0x8a
  40f349:	aaa    
  40f34a:	cs leave 
  40f34c:	cli    
  40f34d:	inc    ebp
  40f34e:	lahf   
  40f34f:	xchg   BYTE PTR [ebx-0x201e7988],ah
  40f355:	pop    ecx
  40f356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f357:	pop    ecx
  40f358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f359:	fwait
  40f35a:	aas    
  40f35b:	or     BYTE PTR [edi-0x59],bh
  40f35e:	sub    ecx,DWORD PTR [ebx-0x706e273b]
  40f364:	xlat   BYTE PTR ds:[ebx]
  40f365:	mov    dl,0xb5
  40f367:	les    esi,FWORD PTR [edi+0x67]
  40f36a:	cmp    ebp,DWORD PTR [edi+eiz*2+0x6c00c00d]
  40f371:	ss pop eax
  40f373:	iret   
  40f374:	shr    DWORD PTR [edi+0x3e1c44c2],1
  40f37a:	icebp  
  40f37b:	push   cs
  40f37c:	add    eax,0x46a1161b
  40f381:	stos   DWORD PTR es:[edi],eax
  40f382:	outs   dx,BYTE PTR ds:[esi]
  40f383:	ins    BYTE PTR es:[edi],dx
  40f384:	xchg   esi,eax
  40f385:	(bad)  
  40f386:	adc    esp,DWORD PTR [ecx]
  40f388:	sbb    cl,BYTE PTR [esi]
  40f38a:	mov    ah,0xb8
  40f38c:	jmp    0x1a5e:0x71e7f929
  40f393:	pop    ds
  40f394:	inc    eax
  40f395:	xchg   edi,eax
  40f396:	xor    edx,ebx
  40f398:	jae    0x40f407
  40f39a:	xchg   esp,eax
  40f39b:	ins    BYTE PTR es:[edi],dx
  40f39c:	jno    0x40f356
  40f39e:	mov    bh,0x10
  40f3a0:	pop    eax
  40f3a1:	add    ch,BYTE PTR [ecx]
  40f3a3:	es jge 0x40f3c4
  40f3a6:	push   ebp
  40f3a7:	dec    edi
  40f3a8:	clc    
  40f3a9:	mov    BYTE PTR [eax],bl
  40f3ab:	fwait
  40f3ac:	adc    eax,0x3291a69f
  40f3b1:	mov    WORD PTR [esi-0x75531ccd],?
  40f3b7:	scas   al,BYTE PTR es:[edi]
  40f3b8:	shl    DWORD PTR [edi-0x1eb9284],1
  40f3be:	push   cs
  40f3bf:	rcr    BYTE PTR [edi],0xcd
  40f3c2:	hlt    
  40f3c3:	jns    0x40f404
  40f3c5:	add    ebp,esp
  40f3c7:	jecxz  0x40f3b1
  40f3c9:	shl    DWORD PTR [ecx],0xd2
  40f3cc:	adc    ah,al
  40f3ce:	(bad)  
  40f3cf:	fdivr  QWORD PTR [ebx]
  40f3d1:	loopne 0x40f3ab
  40f3d3:	in     eax,dx
  40f3d4:	test   DWORD PTR [eax+0xe69722d],esp
  40f3da:	neg    ebp
  40f3dc:	rcr    BYTE PTR [esi+edx*8+0x2d950433],0xd
  40f3e4:	and    ch,cl
  40f3e6:	push   esi
  40f3e7:	push   ebx
  40f3e8:	neg    ch
  40f3ea:	mov    edx,0x4f09a01b
  40f3ef:	mov    WORD PTR [edx+0x32652de8],cs
  40f3f5:	jp     0x40f3e7
  40f3f7:	in     al,0xd
  40f3f9:	repnz cwde 
  40f3fb:	xchg   ebx,eax
  40f3fc:	test   al,0x9
  40f3fe:	mov    ds,WORD PTR [ecx+0x34]
  40f401:	(bad)  
  40f402:	retf   
  40f403:	dec    ebx
  40f404:	cli    
  40f405:	lahf   
  40f406:	mul    bl
  40f408:	mov    DWORD PTR [ebp+0x23fb0eb7],edx
  40f40e:	and    dh,0x34
  40f411:	or     ah,ah
  40f413:	sar    BYTE PTR [edi+0x6],cl
  40f416:	pop    ds
  40f417:	sub    ah,bh
  40f419:	xor    DWORD PTR [edx-0x3391e3db],edi
  40f41f:	test   BYTE PTR [ecx-0x5613332b],cl
  40f425:	dec    ebx
  40f426:	fwait
  40f427:	xchg   ebp,eax
  40f428:	sbb    BYTE PTR [edx-0x7a253f02],cl
  40f42e:	and    BYTE PTR [edx+0x22],0xc
  40f432:	aad    0x4d
  40f434:	pop    edx
  40f435:	add    al,0x17
  40f437:	retf   
  40f438:	(bad)  
  40f439:	mov    esi,0xd50c9e30
  40f43e:	adc    al,0xf7
  40f440:	ret    
  40f441:	adc    ebp,ebx
  40f443:	repnz push esi
  40f445:	xchg   ecx,eax
  40f446:	and    DWORD PTR [ebx-0x42],eax
  40f449:	push   0xef24ad9c
  40f44e:	push   edx
  40f44f:	pop    eax
  40f450:	jge    0x40f491
  40f452:	mov    ds:0x52e0f7ef,eax
  40f457:	enter  0x6aac,0xd1
  40f45b:	stos   DWORD PTR es:[edi],eax
  40f45c:	in     al,dx
  40f45d:	pop    esi
  40f45e:	adc    eax,0x50e88e7a
  40f463:	inc    ebx
  40f464:	popa   
  40f465:	bswap  edi
  40f467:	stos   DWORD PTR es:[edi],eax
  40f468:	enter  0xfbb7,0x58
  40f46c:	fisttp QWORD PTR [edx+edx*8+0x36]
  40f470:	(bad)  
  40f471:	in     al,0x0
  40f473:	loope  0x40f407
  40f475:	imul   eax,DWORD PTR [edi-0x76b0842b],0xd57d1442
  40f47f:	xchg   esi,eax
  40f480:	sub    eax,0xa8546150
  40f485:	in     al,0x48
  40f487:	xchg   edx,eax
  40f488:	pop    ebp
  40f489:	xor    eax,0x46565c1
  40f48e:	xlat   BYTE PTR ds:[ebx]
  40f48f:	mov    ah,BYTE PTR [eax-0x21]
  40f492:	mul    ah
  40f494:	or     dl,BYTE PTR [ecx+0x41]
  40f497:	xchg   BYTE PTR [ebx],bl
  40f499:	pop    ss
  40f49a:	popf   
  40f49b:	mov    ch,0x2d
  40f49d:	jmp    0x99dc82
  40f4a2:	imul   ecx,DWORD PTR [edi+0x3e],0xd911d9e6
  40f4a9:	enter  0xf7ad,0xeb
  40f4ad:	sub    eax,0x330a51a
  40f4b2:	(bad)  
  40f4b3:	test   al,0x45
  40f4b5:	cld    
  40f4b6:	or     DWORD PTR [ecx+ebp*8-0x34],0x9f0b5a8a
  40f4be:	mov    cl,dl
  40f4c0:	loopne 0x40f4cd
  40f4c2:	sub    ebx,DWORD PTR [ecx-0x2a]
  40f4c5:	jae    0x40f52d
  40f4c7:	and    ebp,DWORD PTR [ebx+0x6a]
  40f4ca:	clc    
  40f4cb:	mov    ebx,0x1c45a21d
  40f4d0:	test   dh,bh
  40f4d2:	aad    0xf8
  40f4d4:	mov    ecx,0xcb731866
  40f4d9:	pop    ebp
  40f4da:	test   al,0x95
  40f4dc:	xchg   esp,eax
  40f4dd:	mov    WORD PTR ds:0x9d9673a7,?
  40f4e3:	or     eax,0x34f2fc8
  40f4e8:	cmp    BYTE PTR [edi+0x5292b438],bl
  40f4ee:	push   es
  40f4ef:	inc    ebx
  40f4f0:	adc    BYTE PTR [ecx-0x6a],dl
  40f4f3:	xor    BYTE PTR [eax+eax*4+0x2c0a41b0],0xf7
  40f4fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4fc:	jmp    0x6b65ba46
  40f501:	imul   ecx,DWORD PTR [esi],0x4d56104b
  40f507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f508:	aam    0xd5
  40f50a:	push   esp
  40f50b:	adc    BYTE PTR [edi-0xd61803e],ch
  40f511:	ss int 0x8
  40f514:	aaa    
  40f515:	loope  0x40f50c
  40f517:	int3   
  40f518:	retf   
  40f519:	ins    BYTE PTR es:[edi],dx
  40f51a:	into   
  40f51b:	mov    edi,0x338588ea
  40f520:	jmp    0x6c04:0xc2c39199
  40f527:	inc    edx
  40f528:	test   DWORD PTR [ecx],ebx
  40f52a:	mov    dl,0xc8
  40f52c:	mov    dh,0x46
  40f52e:	jnp    0x40f56a
  40f530:	lock pop esi
  40f532:	pop    eax
  40f533:	dec    edx
  40f534:	loope  0x40f543
  40f536:	cmp    eax,0x207b5d90
  40f53b:	or     esi,eax
  40f53d:	cmp    al,0x2e
  40f53f:	and    ebx,DWORD PTR [esi+0x7b3bb9c3]
  40f545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f546:	sbb    al,0xb6
  40f548:	lods   eax,DWORD PTR ds:[esi]
  40f549:	js     0x40f528
  40f54b:	jmp    0xc8dcadec
  40f550:	add    al,0x16
  40f552:	aam    0x2e
  40f554:	mov    ecx,es
  40f556:	xchg   BYTE PTR [ebx-0x60020f1e],bl
  40f55c:	inc    ecx
  40f55d:	std    
  40f55e:	es repz push 0x3de2b5e
  40f565:	cmp    ah,BYTE PTR [ebp-0x338ce42a]
  40f56b:	inc    ebx
  40f56c:	mov    ecx,0x14db01cf
  40f571:	pusha  
  40f572:	pop    ecx
  40f573:	inc    eax
  40f574:	ret    0x2ea8
  40f577:	shl    ecx,0x85
  40f57a:	sub    esi,ebx
  40f57c:	mov    esi,0x86857816
  40f581:	pop    esi
  40f582:	mov    ah,0xf7
  40f584:	adc    dh,BYTE PTR [esi-0x32]
  40f587:	into   
  40f588:	adc    eax,0xccce6f38
  40f58d:	xor    BYTE PTR [edi-0x21ab02f9],0x30
  40f594:	fadd   DWORD PTR [esi+0x68]
  40f597:	fsub   QWORD PTR [eax+0x47d38a22]
  40f59d:	sub    dh,al
  40f59f:	xchg   edx,eax
  40f5a0:	jne    0x40f605
  40f5a2:	mov    edx,edi
  40f5a4:	in     al,0xf
  40f5a6:	adc    DWORD PTR [edi+0x4813650e],0x48881084
  40f5b0:	enter  0x4337,0x50
  40f5b4:	inc    ecx
  40f5b5:	and    eax,0x5ea5b477
  40f5ba:	daa    
  40f5bb:	pop    ebx
  40f5bd:	retf   0x958b
  40f5c0:	jl     0x40f620
  40f5c2:	cwde   
  40f5c3:	dec    BYTE PTR ds:0xef66cab8
  40f5c9:	or     dh,BYTE PTR [edx]
  40f5cb:	push   cs
  40f5cc:	fidiv  DWORD PTR [edi+ecx*1+0xa12c543]
  40f5d3:	jecxz  0x40f57d
  40f5d5:	xchg   edi,eax
  40f5d6:	dec    esp
  40f5d7:	mov    DWORD PTR [edx],ecx
  40f5d9:	pop    gs
  40f5db:	les    esp,FWORD PTR [esi-0x24]
  40f5de:	or     BYTE PTR [eax+0x3e],bl
  40f5e1:	xchg   ebx,eax
  40f5e2:	clc    
  40f5e3:	imul   ebx
  40f5e5:	jae    0x40f5cd
  40f5e7:	mov    al,0xa3
  40f5e9:	test   al,0x45
  40f5eb:	inc    eax
  40f5ec:	sub    edi,DWORD PTR [edi+0x24]
  40f5ef:	mov    eax,0xe6a3be2b
  40f5f4:	mov    ch,0x78
  40f5f6:	pushf  
  40f5f7:	mov    al,ds:0xe4e8c884
  40f5fc:	cmp    eax,0xb7a21b4a
  40f601:	lods   eax,DWORD PTR ds:[esi]
  40f602:	enter  0xfdc,0xf4
  40f606:	mov    dl,ch
  40f608:	mov    ecx,0x8ba0ec5b
  40f60d:	jno    0x40f646
  40f60f:	mov    bl,0x2d
  40f611:	ins    BYTE PTR es:[edi],dx
  40f612:	xchg   ecx,eax
  40f613:	xchg   DWORD PTR [edx-0x2ecd0057],edx
  40f619:	bound  esi,QWORD PTR [edx+ecx*8+0xd]
  40f61d:	xor    BYTE PTR [ebx],al
  40f61f:	iret   
  40f620:	aaa    
  40f621:	push   edi
  40f622:	dec    esi
  40f623:	int3   
  40f624:	dec    eax
  40f625:	adc    edx,edx
  40f627:	xor    ch,cl
  40f629:	mov    dl,0xe6
  40f62b:	mov    dh,bh
  40f62d:	inc    eax
  40f62e:	clc    
  40f62f:	lahf   
  40f630:	outs   dx,BYTE PTR ds:[esi]
  40f632:	out    0x1a,al
  40f634:	cmp    edx,ebp
  40f636:	out    0x11,eax
  40f638:	hlt    
  40f639:	mul    DWORD PTR [ebx+eax*2+0xc]
  40f63d:	pcmpeqd mm7,mm0
  40f640:	pop    ds
  40f641:	sar    esi,1
  40f643:	jae    0x40f60d
  40f645:	jb     0x40f638
  40f647:	cwde   
  40f648:	add    dh,al
  40f64a:	outs   dx,DWORD PTR ds:[esi]
  40f64b:	add    DWORD PTR [ebp-0x77e05de5],0xfd661040
  40f655:	pushf  
  40f656:	imul   ebp,DWORD PTR [eax+0xff30e71],0x49040b20
  40f660:	ja     0x40f5ff
  40f662:	lods   al,BYTE PTR ds:[esi]
  40f663:	xchg   esi,ebx
  40f665:	inc    ecx
  40f666:	mov    ah,0x9c
  40f668:	jb     0x40f605
  40f66a:	add    al,0x4f
  40f66c:	cmp    eax,0x59ac7a0b
  40f671:	push   ecx
  40f672:	bndstx [edi-0x28],bnd1
  40f676:	(bad)  
  40f677:	(bad)  
  40f678:	mov    ebx,0x4606f8d5
  40f67d:	add    al,0xe4
  40f67f:	xchg   ebx,eax
  40f680:	or     eax,0xd60d9823
  40f685:	data16 fnstcw WORD PTR [ecx+0x552f6f83]
  40f68c:	pop    esp
  40f68d:	dec    eax
  40f68e:	call   0x506594e3
  40f693:	mov    dl,0x6f
  40f695:	(bad)  
  40f696:	test   BYTE PTR ds:0xe4af4c8a,0x9
  40f69d:	call   0xbca0c8b6
  40f6a2:	mov    esi,0xb6c48005
  40f6a7:	out    0xd,eax
  40f6a9:	sub    BYTE PTR [eax-0x68],dl
  40f6ac:	add    DWORD PTR [edi],esp
  40f6ae:	adc    eax,0x8c629821
  40f6b3:	and    al,0x26
  40f6b5:	mov    ds:0x61293fcf,al
  40f6ba:	std    
  40f6bb:	mov    edi,0x2284968a
  40f6c0:	fadd   st,st(5)
  40f6c2:	ins    DWORD PTR es:[edi],dx
  40f6c3:	in     al,dx
  40f6c4:	mov    bl,0x8f
  40f6c6:	adc    bh,BYTE PTR [esi]
  40f6c8:	xor    al,BYTE PTR ds:0xf8cc9249
  40f6ce:	xchg   edx,eax
  40f6cf:	jno    0xf83577
  40f6d5:	push   edx
  40f6d6:	mov    WORD PTR [eax],cs
  40f6d8:	out    0xb7,al
  40f6da:	inc    BYTE PTR [edi]
  40f6dc:	jno    0x40f715
  40f6de:	push   esp
  40f6df:	sahf   
  40f6e0:	(bad)  
  40f6e1:	jp     0x40f6f0
  40f6e3:	pop    ds
  40f6e4:	sahf   
  40f6e5:	call   0x79798807
  40f6ea:	or     DWORD PTR ds:0xbba49fc2,edx
  40f6f0:	mov    WORD PTR ds:0x5de5f36c,ss
  40f6f6:	pusha  
  40f6f7:	mov    ds:0x65fdbc51,eax
  40f6fc:	ror    DWORD PTR [ecx+0x622c766b],cl
  40f702:	push   edi
  40f703:	pop    ebx
  40f704:	(bad)  
  40f705:	imul   edx,DWORD PTR [edx+esi*1],0x7
  40f709:	add    ecx,DWORD PTR [edx-0x3c4ab8c]
  40f70f:	pop    edi
  40f710:	xor    al,0xa8
  40f712:	and    al,BYTE PTR [ecx+ebp*1+0x71]
  40f716:	jns    0x40f6ab
  40f718:	inc    ebx
  40f719:	lods   al,BYTE PTR ds:[esi]
  40f71a:	dec    ebp
  40f71b:	inc    esi
  40f71c:	pop    esp
  40f71d:	sub    ecx,DWORD PTR ds:0xc782acd1
  40f723:	mov    bh,0x88
  40f725:	mov    ch,0xc6
  40f727:	sub    edi,DWORD PTR [edx]
  40f729:	lea    esp,[eax-0x7505960e]
  40f72f:	ret    0xd459
  40f732:	leave  
  40f733:	jmp    0x40f79a
  40f735:	xchg   DWORD PTR [edx+0x63100964],ebx
  40f73b:	sbb    DWORD PTR [ebp+eiz*1-0x59],esp
  40f73f:	aam    0x47
  40f741:	sbb    dh,BYTE PTR [ebp-0x4e]
  40f744:	pushf  
  40f745:	sahf   
  40f746:	mov    ebx,0x51404683
  40f74b:	sbb    eax,esi
  40f74d:	push   edx
  40f74e:	add    bh,ch
  40f750:	or     eax,0xc1dba4e8
  40f755:	cmp    eax,0x1621d92b
  40f75a:	fld    DWORD PTR [esi+eax*4+0x26b287e2]
  40f761:	inc    edx
  40f762:	dec    edx
  40f763:	cmp    BYTE PTR [edx],ah
  40f765:	bound  esi,QWORD PTR [edx+0x52]
  40f768:	shl    DWORD PTR [edx-0x266c9f1e],cl
  40f76e:	or     eax,0x4cc93104
  40f773:	popa   
  40f774:	jb     0x40f7c6
  40f776:	scas   eax,DWORD PTR es:[edi]
  40f777:	pushf  
  40f778:	add    al,0xe3
  40f77a:	cs jmp 0x3de0:0x43a89ac4
  40f782:	xor    ecx,0xc24668e2
  40f788:	pop    es
  40f789:	shl    cl,0x1e
  40f78c:	outs   dx,DWORD PTR ds:[esi]
  40f78d:	jmp    0x41c1:0x99375395
  40f794:	stos   DWORD PTR es:[edi],eax
  40f795:	movq   mm1,QWORD PTR [edi]
  40f798:	test   al,0xa7
  40f79a:	pavgb  mm2,QWORD PTR [ecx-0x31]
  40f79e:	data16 ror BYTE PTR [ecx],1
  40f7a1:	fst    QWORD PTR [edx+0x55fefd53]
  40f7a7:	mov    ?,WORD PTR [ebx+0x5a008794]
  40f7ad:	mov    esi,0x3cc75316
  40f7b2:	fdivp  st(6),st
  40f7b4:	xchg   DWORD PTR [ebp+0x4f2bfb8b],edi
  40f7ba:	retf   0x75df
  40f7bd:	fdivrp st(4),st
  40f7bf:	inc    esi
  40f7c0:	mov    ds:0x7d745d3,eax
  40f7c5:	add    DWORD PTR [ecx-0x54dfe133],edx
  40f7cb:	enter  0x8fef,0xb1
  40f7cf:	std    
  40f7d0:	loope  0x40f787
  40f7d2:	adc    eax,0x1bcf4f7a
  40f7d7:	les    esi,FWORD PTR [ecx+0x239cd8d4]
  40f7dd:	or     al,0x68
  40f7df:	(bad)  
  40f7e0:	xchg   ebx,eax
  40f7e1:	leave  
  40f7e2:	xor    DWORD PTR cs:[ecx+ebp*8],esi
  40f7e6:	outs   dx,BYTE PTR ds:[esi]
  40f7e7:	clc    
  40f7e8:	push   es
  40f7e9:	jle    0x40f80f
  40f7eb:	jnp    0x40f7cb
  40f7ed:	adc    al,0xd1
  40f7ef:	ror    DWORD PTR [ebx-0x16],0xa0
  40f7f3:	mov    edi,0x5f46670b
  40f7f8:	dec    ecx
  40f7f9:	aad    0xd5
  40f7fb:	xchg   edx,edx
  40f7fd:	cmc    
  40f7fe:	dec    ebp
  40f7ff:	outs   dx,DWORD PTR ds:[esi]
  40f800:	push   cs
  40f801:	and    BYTE PTR [esi+0x3f33c191],dh
  40f807:	jns    0x40f80b
  40f809:	xchg   ebp,eax
  40f80a:	mov    al,0x18
  40f80c:	jg     0x40f7a0
  40f80e:	popa   
  40f80f:	cmp    DWORD PTR [eax+0x67689391],edi
  40f815:	or     BYTE PTR [eiz*8-0x79dcb9bb],0x30
  40f81d:	stc    
  40f81e:	xor    eax,0x4859cca3
  40f823:	push   cs
  40f824:	mov    ecx,0xafb7f70d
  40f829:	add    DWORD PTR [edx+0x1fceebd],eax
  40f82f:	test   BYTE PTR [edx-0x16],dl
  40f832:	mov    bh,0x17
  40f834:	pop    esi
  40f835:	cvttps2dq xmm4,xmm4
  40f839:	cmp    dh,BYTE PTR [ebx-0x40]
  40f83c:	sar    DWORD PTR [edi+0x69009406],0xb2
  40f843:	mov    ebx,ss
  40f845:	jns    0x40f8b8
  40f847:	fwait
  40f848:	push   ecx
  40f849:	shl    DWORD PTR [esi],cl
  40f84b:	leave  
  40f84c:	dec    eax
  40f84d:	cmp    bl,BYTE PTR [esi+0x369b7e40]
  40f853:	stos   DWORD PTR es:[edi],eax
  40f854:	cmp    eax,0xf3771d9f
  40f859:	add    al,0x4f
  40f85b:	adc    cl,bh
  40f85d:	popa   
  40f85e:	js     0x40f8aa
  40f860:	xor    DWORD PTR [ebp-0x3f],ecx
  40f863:	popf   
  40f864:	push   0xffffffda
  40f866:	test   eax,0xa0e90cba
  40f86b:	retf   0xf385
  40f86e:	fwait
  40f86f:	mov    bh,0x6e
  40f871:	ins    BYTE PTR es:[edi],dx
  40f872:	jne    0x40f827
  40f874:	sub    BYTE PTR [ebx],bl
  40f876:	cmp    eax,0xc8df85d8
  40f87b:	jne    0x40f80f
  40f87d:	loop   0x40f830
  40f87f:	stos   BYTE PTR es:[edi],al
  40f880:	mov    ch,0x43
  40f882:	sub    eax,0x8970cc65
  40f887:	jge    0x40f883
  40f889:	mov    bl,0x70
  40f88b:	scas   eax,DWORD PTR es:[edi]
  40f88c:	xor    DWORD PTR [edi+0x66],ebp
  40f88f:	sti    
  40f890:	sub    DWORD PTR [edi],esi
  40f892:	xor    bl,dl
  40f894:	jne    0x40f8b8
  40f896:	pushf  
  40f897:	ja     0x40f83d
  40f899:	dec    eax
  40f89a:	cmp    ah,BYTE PTR [ebx]
  40f89c:	rcl    BYTE PTR [ecx-0x47ff0017],0x4
  40f8a3:	mov    ebx,0x2f51f5d2
  40f8a8:	sahf   
  40f8a9:	(bad)  
  40f8ab:	sub    dl,BYTE PTR [esi]
  40f8ad:	call   FWORD PTR [edi+edi*4]
  40f8b0:	or     BYTE PTR [ecx],bh
  40f8b2:	ds mov edi,0x27842df3
  40f8b8:	inc    esi
  40f8ba:	nop
  40f8bb:	cdq    
  40f8bc:	ss xchg edx,eax
  40f8be:	push   0x8
  40f8c0:	leave  
  40f8c1:	and    eax,0x2d3224dc
  40f8c6:	mov    eax,0x97d7d05
  40f8cb:	rol    DWORD PTR [edi],cl
  40f8cd:	inc    BYTE PTR [esi-0x10]
  40f8d0:	retf   0x37f5
  40f8d3:	dec    edi
  40f8d4:	jno    0x40f90f
  40f8d6:	or     edx,DWORD PTR [ecx]
  40f8d8:	or     eax,0x5c8125b
  40f8dd:	(bad)  
  40f8de:	sbb    DWORD PTR [esi+0x3ce5b15d],ebp
  40f8e4:	add    eax,0x627f8028
  40f8e9:	sbb    eax,0xf2f3d0bc
  40f8ee:	jl     0x40f91e
  40f8f0:	call   0xbee5:0xc9b30087
  40f8f7:	lea    ecx,[eax]
  40f8f9:	adc    DWORD PTR [eax-0x1ff62f97],ecx
  40f8ff:	xchg   esp,eax
  40f900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f901:	iret   
  40f902:	stos   DWORD PTR es:[edi],eax
  40f903:	dec    eax
  40f904:	inc    esi
  40f905:	cmp    eax,0x847844ee
  40f90a:	and    BYTE PTR [ebx-0x63],cl
  40f90d:	rcr    DWORD PTR [esi+ebp*2+0xe],0xf7
  40f912:	inc    ebp
  40f913:	and    eax,0x6c754177
  40f918:	ins    DWORD PTR es:[edi],dx
  40f919:	inc    eax
  40f91a:	sbb    BYTE PTR [edx+0x17],dl
  40f91d:	lock out 0xd8,al
  40f920:	mov    esi,0x9d3b4b1c
  40f925:	fbld   TBYTE PTR [eax+esi*4]
  40f928:	jne    0x40f954
  40f92a:	aad    0x61
  40f92c:	xchg   edx,eax
  40f92d:	push   0xffffff8e
  40f92f:	stc    
  40f930:	lea    esp,[eax+ebx*8]
  40f933:	and    eax,0xfdac1b62
  40f938:	test   al,0x61
  40f93a:	adc    ebx,DWORD PTR [esi-0x66]
  40f93d:	lods   al,BYTE PTR ds:[esi]
  40f93e:	popf   
  40f93f:	sbb    al,0xc9
  40f941:	push   ebx
  40f942:	daa    
  40f943:	stc    
  40f944:	add    bh,BYTE PTR [edx]
  40f946:	sub    esp,DWORD PTR [ecx*1-0x2056f2f7]
  40f94d:	(bad)  
  40f94e:	neg    BYTE PTR [esi]
  40f950:	push   0x41
  40f952:	imul   ecx,DWORD PTR [eax+0x411e774f],0xffffff80
  40f959:	push   ebp
  40f95a:	xchg   edx,eax
  40f95b:	adc    sp,WORD PTR [ebx-0xb5d56ee]
  40f962:	fmul   QWORD PTR [ebp-0x41aaa013]
  40f968:	dec    edx
  40f969:	adc    ch,BYTE PTR [ebp-0x40e5ef]
  40f96f:	pushf  
  40f970:	cmp    eax,0x54760d3c
  40f975:	adc    al,0x3e
  40f977:	inc    ecx
  40f978:	pop    eax
  40f979:	popa   
  40f97a:	xor    bh,bl
  40f97c:	into   
  40f97d:	jns    0x40f9a7
  40f97f:	push   eax
  40f980:	outs   dx,BYTE PTR ds:[esi]
  40f981:	dec    edi
  40f982:	add    DWORD PTR fs:[edx+0x5489cc3f],ecx
  40f989:	fdiv   DWORD PTR ds:0x7eb245c5
  40f98f:	and    ecx,edi
  40f991:	xchg   ecx,eax
  40f992:	cmp    ecx,DWORD PTR [esi-0x56]
  40f995:	adc    DWORD PTR [ebp-0x2c],eax
  40f998:	xchg   ebx,eax
  40f999:	sub    bl,BYTE PTR [ebx+0x210da64c]
  40f99f:	out    0x97,al
  40f9a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9a2:	daa    
  40f9a3:	enter  0xfadc,0xb0
  40f9a7:	or     DWORD PTR [ebp+ebp*4-0x31],esi
  40f9ab:	fsubr  QWORD PTR [ebp+0x6e8372f8]
  40f9b1:	jo     0x40f990
  40f9b3:	xor    eax,0x594d29dd
  40f9b8:	mov    BYTE PTR [ebx-0x56],cl
  40f9bb:	(bad)  
  40f9bc:	pop    edx
  40f9bd:	push   ebx
  40f9be:	test   al,0x25
  40f9c0:	pop    esi
  40f9c1:	jge    0x40f94f
  40f9c3:	mov    ch,0x3b
  40f9c5:	cld    
  40f9c6:	mov    eax,ds:0x1c101d3a
  40f9cb:	in     eax,0x2b
  40f9cd:	pushf  
  40f9ce:	mov    bl,0xdf
  40f9d0:	ret    
  40f9d1:	clc    
  40f9d2:	xlat   BYTE PTR ds:[ebx]
  40f9d3:	sub    eax,0x36db379
  40f9d8:	cmc    
  40f9d9:	ja     0x40fa2d
  40f9db:	test   al,0x56
  40f9dd:	dec    ebx
  40f9de:	(bad)  
  40f9df:	out    0xb0,eax
  40f9e1:	lock cmp bh,BYTE PTR [edi-0x203df0f3]
  40f9e8:	pop    edi
  40f9e9:	shr    DWORD PTR [esi],cl
  40f9eb:	and    edx,DWORD PTR [edx]
  40f9ed:	stos   DWORD PTR es:[edi],eax
  40f9ee:	push   cs
  40f9ef:	jnp    0x40fa3c
  40f9f1:	push   esi
  40f9f2:	aaa    
  40f9f3:	das    
  40f9f4:	(bad)  
  40f9f5:	mov    cl,0x81
  40f9f7:	add    eax,0x7791e1f4
  40f9fc:	lods   eax,DWORD PTR ds:[esi]
  40f9fd:	sub    cl,BYTE PTR [eax+0x53]
  40fa00:	mov    DWORD PTR [edi+ecx*2-0x43],ecx
  40fa04:	dec    esp
  40fa05:	out    dx,eax
  40fa06:	std    
  40fa07:	cld    
  40fa08:	outs   dx,BYTE PTR ds:[esi]
  40fa09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa0a:	mov    ebx,0xe7c9b35a
  40fa0f:	sbb    BYTE PTR [esp+edx*8-0x29dd1b0a],dl
  40fa16:	jle    0x40f999
  40fa18:	and    DWORD PTR [edi-0x21290f06],esi
  40fa1e:	push   eax
  40fa1f:	mov    ecx,0x593204f8
  40fa24:	repz fld TBYTE PTR [edi]
  40fa27:	data16 add BYTE PTR [esi-0x33],al
  40fa2b:	scas   al,BYTE PTR es:[edi]
  40fa2c:	jae    0x40fa32
  40fa2e:	mov    ah,0x17
  40fa30:	pushf  
  40fa31:	jl     0x40faa7
  40fa33:	inc    ecx
  40fa34:	jns    0x40fa10
  40fa36:	lock rcr DWORD PTR [edi],0x14
  40fa3a:	and    BYTE PTR [edx],dl
  40fa3c:	xor    eax,0xd52c115
  40fa41:	test   BYTE PTR fs:[edi-0x3e],0x97
  40fa46:	mov    al,0x5f
  40fa48:	jg     0x40f9f0
  40fa4a:	sahf   
  40fa4b:	fimul  DWORD PTR [ecx-0x63976b4c]
  40fa51:	jge    0x40fa23
  40fa53:	jae    0x40fa98
  40fa55:	test   esi,ebp
  40fa57:	call   0xc50d38e2
  40fa5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa5d:	mov    ch,0x85
  40fa5f:	adc    BYTE PTR [ebx+edx*4+0x77],bh
  40fa63:	dec    ebx
  40fa64:	je     0x40fa05
  40fa66:	idiv   BYTE PTR [edi-0xbc7955e]
  40fa6c:	and    ebx,ebp
  40fa6e:	push   ds
  40fa6f:	fild   QWORD PTR [ebx-0x3d]
  40fa72:	jg     0x40fad8
  40fa74:	call   0x8f67:0x1e55d6f9
  40fa7b:	lock jnp 0x40fa96
  40fa7e:	es je  0x40fa6a
  40fa81:	fwait
  40fa82:	mov    ch,0x4f
  40fa84:	jmp    0x40fa2d
  40fa86:	leave  
  40fa87:	inc    ecx
  40fa88:	shl    ch,1
  40fa8a:	retf   
  40fa8b:	test   DWORD PTR ds:[esi*4-0x5a817a14],ebp
  40fa93:	jnp    0x40fa51
  40fa95:	sbb    ecx,ebp
  40fa97:	retf   
  40fa98:	jno    0x40fa5d
  40fa9a:	sub    al,0x95
  40fa9c:	inc    eax
  40fa9d:	cmp    al,0xa8
  40fa9f:	mov    ebx,0x2aa0ce8a
  40faa4:	push   esi
  40faa5:	ins    BYTE PTR es:[edi],dx
  40faa6:	jb     0x40fa46
  40faa8:	ds jns 0x40fb0e
  40faab:	add    eax,0x7d053fbb
  40fab0:	gs int3 
  40fab2:	in     eax,0xfe
  40fab4:	bound  edx,QWORD PTR [esi-0xc87845f]
  40faba:	test   DWORD PTR [ebp+ebx*1-0x51845ccf],esp
  40fac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fac2:	push   edx
  40fac3:	and    ch,0x8e
  40fac6:	ds cwde 
  40fac8:	mov    cl,0xb9
  40faca:	xor    DWORD PTR [ebx],ecx
  40facc:	int3   
  40facd:	dec    ebp
  40face:	pop    es
  40facf:	imul   edx,DWORD PTR [edx],0xffffffea
  40fad2:	ins    BYTE PTR es:[edi],dx
  40fad3:	int3   
  40fad4:	out    0xea,eax
  40fad6:	cmp    eax,0xd969583e
  40fadb:	pop    ecx
  40fadc:	mul    bh
  40fade:	push   eax
  40fadf:	or     cl,BYTE PTR [ecx]
  40fae1:	fwait
  40fae2:	sbb    eax,eax
  40fae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fae5:	popf   
  40fae6:	outs   dx,DWORD PTR ds:[esi]
  40fae7:	xchg   esi,eax
  40fae8:	fistp  WORD PTR [ecx]
  40faea:	xchg   ebx,ecx
  40faec:	aam    0x5d
  40faee:	mov    ecx,0x56a93db
  40faf3:	adc    dh,BYTE PTR [ebp-0x55553e58]
  40faf9:	mov    ecx,0x62b4074b
  40fafe:	inc    esi
  40faff:	enter  0x7a92,0x4f
  40fb03:	jb     0x40fb58
  40fb05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb06:	popa   
  40fb07:	loope  0x40fabf
  40fb09:	cmp    al,0xf
  40fb0b:	jecxz  0x40fb81
  40fb0d:	adc    eax,0x6f5eb5ca
  40fb12:	imul   ebp,DWORD PTR [eax+0x4a8dd042],0xffffffba
  40fb19:	fninit 
  40fb1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb1c:	div    DWORD PTR [ebx]
  40fb1e:	mov    ?,WORD PTR [ecx-0x150d8baa]
  40fb24:	in     eax,0x33
  40fb26:	xor    eax,0xa6a59af1
  40fb2b:	ret    
  40fb2c:	fs adc eax,0x84e8189e
  40fb32:	and    ch,dl
  40fb34:	out    0x58,eax
  40fb36:	xchg   edx,eax
  40fb37:	sbb    eax,0x8845bbb9
  40fb3c:	jno    0x40fb02
  40fb3e:	jle    0x40fb19
  40fb40:	fnsave [edx-0x20]
  40fb43:	adc    BYTE PTR [ecx],ah
  40fb45:	jb     0x40faf1
  40fb47:	sub    edx,DWORD PTR [eax-0x1]
  40fb4a:	(bad)  
  40fb4b:	retf   
  40fb4c:	imul   eax,DWORD PTR [esi+edi*8-0x7d],0xffffffaf
  40fb51:	jns    0x40fb3d
  40fb53:	js     0x40fbb6
  40fb55:	fcmovnbe st,st(3)
  40fb57:	cmp    eax,0xc4ec00d3
  40fb5c:	js     0x40fb26
  40fb5e:	inc    eax
  40fb5f:	lea    esi,[edx-0xc]
  40fb62:	add    edi,DWORD PTR [edi+0x4b2f2e82]
  40fb68:	es call 0x535f:0xe2ce82d3
  40fb70:	pop    esi
  40fb71:	jge    0x40fb8c
  40fb73:	popa   
  40fb74:	mov    bl,0xcb
  40fb76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb77:	hlt    
  40fb78:	mov    eax,ds:0x55e01c4e
  40fb7d:	push   0x11
  40fb7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb80:	push   ss
  40fb81:	xchg   edi,eax
  40fb82:	inc    edi
  40fb83:	push   edx
  40fb84:	push   esi
  40fb85:	cmp    eax,0xe1d28404
  40fb8a:	jne    0x40fb7f
  40fb8c:	mov    ds:0x60d1e421,eax
  40fb91:	push   ebx
  40fb92:	push   ecx
  40fb93:	pop    ds
  40fb94:	enter  0xc7d3,0x8b
  40fb98:	aaa    
  40fb99:	cmp    DWORD PTR [esi+0x57160419],edx
  40fb9f:	push   ecx
  40fba0:	(bad)  
  40fba1:	mov    ebp,0x97591188
  40fba6:	cmp    eax,0xb9c28d42
  40fbab:	mov    bl,0xcd
  40fbad:	ret    
  40fbae:	call   0xc177:0xd0d2a9bd
  40fbb5:	dec    esp
  40fbb6:	enter  0x2439,0xa4
  40fbba:	xchg   BYTE PTR [eax+edx*4+0x2437ddf3],bl
  40fbc1:	mul    BYTE PTR [edi]
  40fbc3:	sub    ch,BYTE PTR [ebx-0x39babc3e]
  40fbc9:	pop    ebx
  40fbca:	gs inc esp
  40fbcc:	sbb    BYTE PTR [ecx],dl
  40fbce:	and    ebp,DWORD PTR [edx+0x308157f2]
  40fbd4:	xchg   ebp,eax
  40fbd5:	inc    DWORD PTR [ecx+ebx*1+0x6776fbb]
  40fbdc:	add    cl,BYTE PTR [edx-0xc]
  40fbdf:	in     al,0x64
  40fbe1:	dec    edi
  40fbe2:	(bad)
  40fbe5:	mov    bl,0x22
  40fbe7:	pop    ds
  40fbe8:	xlat   BYTE PTR ds:[ebx]
  40fbe9:	ret    
  40fbea:	into   
  40fbeb:	cwde   
  40fbec:	jae    0x40fb71
  40fbee:	sub    BYTE PTR [ebp-0x33],dh
  40fbf1:	ror    DWORD PTR [ebp-0x232cc10e],0x43
  40fbf8:	cmove  esi,DWORD PTR [ecx+ecx*1+0x593fd430]
  40fc00:	add    ebx,edx
  40fc02:	mov    ebx,0x4aa64947
  40fc07:	sub    DWORD PTR [ebx],edi
  40fc09:	in     al,0x9d
  40fc0b:	push   edx
  40fc0c:	mov    eax,DWORD PTR [ebx+eiz*1]
  40fc0f:	xor    bl,BYTE PTR [ecx]
  40fc11:	mov    ch,0xed
  40fc13:	mov    esi,0xc29706d2
  40fc18:	jp     0x40fbe6
  40fc1a:	sub    al,0x0
  40fc1c:	pop    edx
  40fc1d:	xor    ebx,DWORD PTR [ebp+0x703bbae2]
  40fc23:	sbb    bh,cl
  40fc25:	add    DWORD PTR [ebx-0x6b],edx
  40fc28:	mov    dl,0x63
  40fc2a:	sbb    ebp,DWORD PTR [ebx+eiz*1-0x5809862c]
  40fc31:	or     DWORD PTR [ebx+ebp*8-0x30],esp
  40fc35:	jb     0x40fc18
  40fc37:	inc    esp
  40fc38:	add    al,0xd
  40fc3a:	xchg   edx,eax
  40fc3b:	call   0x76bf45bc
  40fc40:	enter  0xf289,0x5b
  40fc44:	xor    BYTE PTR ds:0xc27a77d5,ch
  40fc4a:	retf   
  40fc4b:	mov    al,ds:0xe63c45c5
  40fc50:	sub    ecx,DWORD PTR [ecx-0x1bbc723e]
  40fc56:	xchg   ebx,eax
  40fc57:	push   0x55
  40fc59:	retf   0x15e
  40fc5c:	cli    
  40fc5d:	pop    esi
  40fc5e:	mov    ecx,0xa527062c
  40fc63:	retf   
  40fc64:	inc    esi
  40fc65:	das    
  40fc66:	fs sti 
  40fc68:	(bad)  
  40fc69:	jbe    0x40fc92
  40fc6b:	sub    BYTE PTR [esi],dl
  40fc6d:	pusha  
  40fc6e:	in     al,0xe0
  40fc70:	xchg   BYTE PTR [ebp-0x725be846],bl
  40fc76:	xchg   ecx,eax
  40fc77:	push   edx
  40fc78:	mov    bl,0x5a
  40fc7a:	ror    DWORD PTR [ebx+0x20],0xee
  40fc7e:	in     eax,0xae
  40fc80:	push   esi
  40fc81:	xchg   edx,eax
  40fc82:	sub    al,0x77
  40fc84:	cmp    ah,0x0
  40fc87:	shr    ebx,0x1a
  40fc8a:	lods   al,BYTE PTR ds:[esi]
  40fc8b:	adc    BYTE PTR [ecx-0x3945ba90],bh
  40fc91:	mov    edx,ecx
  40fc93:	sub    BYTE PTR [esi],bl
  40fc95:	loope  0x40fc9b
  40fc97:	mov    DWORD PTR ds:0xfe4a75f7,esp
  40fc9d:	outs   dx,BYTE PTR ds:[esi]
  40fc9e:	ficomp WORD PTR [esi+0x64]
  40fca1:	inc    ebp
  40fca2:	sahf   
  40fca3:	sbb    eax,0xaac59c86
  40fca8:	shl    DWORD PTR [eax-0x43b8152a],0x68
  40fcaf:	mov    esp,DWORD PTR [esi-0x76cfa543]
  40fcb5:	icebp  
  40fcb6:	fs push ebx
  40fcb8:	mov    dh,0x3d
  40fcba:	adc    ch,BYTE PTR [ebp-0x1d]
  40fcbd:	lea    esi,[edi-0x44194e31]
  40fcc3:	test   BYTE PTR [eax+edi*8+0x2906e35b],dl
  40fcca:	or     BYTE PTR [edi+edi*8],cl
  40fccd:	shr    BYTE PTR [ebp+0x3f1e9126],cl
  40fcd3:	and    DWORD PTR [eax],ecx
  40fcd5:	scas   eax,DWORD PTR es:[edi]
  40fcd6:	call   0xd502eb82
  40fcdb:	push   edx
  40fcdc:	ret    0xd70d
  40fcdf:	mov    dh,0xa1
  40fce1:	mov    ch,0xd6
  40fce3:	clc    
  40fce4:	sub    DWORD PTR [eax+0x46482c52],edx
  40fcea:	mov    esi,0xcc9d829c
  40fcef:	gs ret 0x551f
  40fcf3:	sbb    DWORD PTR [eax+0x28ef6671],0xac068608
  40fcfd:	pop    edx
  40fcfe:	stos   DWORD PTR es:[edi],eax
  40fcff:	mov    al,0x50
  40fd01:	and    edx,esp
  40fd03:	inc    eax
  40fd04:	int    0x8e
  40fd06:	sbb    edi,DWORD PTR [edi]
  40fd08:	int3   
  40fd09:	push   ebx
  40fd0a:	std    
  40fd0b:	outs   dx,BYTE PTR ds:[esi]
  40fd0c:	cmp    eax,0xdfc8717b
  40fd11:	shr    DWORD PTR [ebx],0x69
  40fd14:	cmp    DWORD PTR [eax+0xe],ebx
  40fd17:	push   edi
  40fd18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd19:	imul   edx,DWORD PTR ss:[ebp-0x20],0x695b4605
  40fd21:	out    0x7f,eax
  40fd23:	test   DWORD PTR [ecx],edx
  40fd25:	ds adc eax,0x4a3589f2
  40fd2b:	sub    esi,esp
  40fd2d:	repz push 0x88fe7f09
  40fd33:	or     cl,al
  40fd35:	xor    DWORD PTR [edx-0x31],0xec61f8fd
  40fd3c:	mov    cl,0x6d
  40fd3e:	add    dl,BYTE PTR [esi]
  40fd40:	add    al,0x93
  40fd42:	mov    al,ds:0xacd36400
  40fd47:	fld    TBYTE PTR [ebx-0x11ddaac]
  40fd4d:	call   0x85924282
  40fd52:	rcr    DWORD PTR [edi+0x57],cl
  40fd55:	aaa    
  40fd56:	sub    ah,ch
  40fd58:	and    al,0x44
  40fd5a:	(bad)  
  40fd5b:	jb     0x40fda9
  40fd5d:	push   edx
  40fd5e:	les    ebp,FWORD PTR [edx-0x1]
  40fd61:	cdq    
  40fd62:	fst    QWORD PTR [ebp-0x5aeb3329]
  40fd68:	mov    al,ds:0x8d0e434f
  40fd6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd6e:	xchg   esi,eax
  40fd6f:	mov    ebp,0x53a103c1
  40fd74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd75:	xor    BYTE PTR [ebx-0x213be9b6],dl
  40fd7b:	lea    ebp,[eax+ecx*1]
  40fd7e:	sub    ecx,DWORD PTR [ecx-0x15]
  40fd81:	ror    DWORD PTR [ebx-0x16],1
  40fd84:	jno    0x40fd0c
  40fd86:	call   0x9beb:0x67dd90d
  40fd8d:	test   BYTE PTR [eax],ch
  40fd8f:	mov    ch,0xb6
  40fd91:	fist   WORD PTR [esp+eax*1+0x54]
  40fd95:	jno    0x40fd45
  40fd97:	fnstcw WORD PTR [ebp-0x4c]
  40fd9a:	pusha  
  40fd9b:	pop    es
  40fd9c:	inc    eax
  40fd9d:	rol    BYTE PTR [ecx+0x71],1
  40fda0:	cs jnp 0x40fde8
  40fda3:	push   ebp
  40fda4:	(bad)  
  40fda7:	outs   dx,DWORD PTR ds:[esi]
  40fda8:	mov    cl,0xd
  40fdaa:	jge    0x40fdd8
  40fdac:	aad    0x7a
  40fdae:	(bad)  
  40fdaf:	xor    BYTE PTR [esi],dh
  40fdb1:	xchg   edx,eax
  40fdb2:	in     eax,0xd5
  40fdb4:	pop    eax
  40fdb5:	nop
  40fdb6:	inc    edx
  40fdb7:	ss in  eax,0xe9
  40fdba:	popf   
  40fdbb:	cmp    BYTE PTR [eax+edx*2+0x40],bl
  40fdbf:	mov    esp,esp
  40fdc1:	pop    ebp
  40fdc2:	and    ecx,ecx
  40fdc4:	xor    DWORD PTR [ecx],edx
  40fdc6:	repnz inc ecx
  40fdc8:	xor    eax,0xebcae1a9
  40fdcd:	(bad)  
  40fdce:	ds mov dl,0x5
  40fdd1:	aad    0x95
  40fdd3:	call   0xdae8:0x5588b3c1
  40fdda:	xchg   edi,eax
  40fddb:	(bad)  
  40fddc:	in     eax,0x1b
  40fdde:	inc    edx
  40fddf:	ror    DWORD PTR [esi-0x755908d5],cl
  40fde5:	loopne 0x40fe48
  40fde7:	mov    ch,0xfc
  40fde9:	fild   QWORD PTR [ebx+edx*4-0x63]
  40fded:	stos   DWORD PTR es:[edi],eax
  40fdee:	test   BYTE PTR [ebx+0x48545678],dh
  40fdf4:	data16 fldcw WORD PTR [eax+0x9fe106f]
  40fdfb:	cs leave 
  40fdfd:	ret    0x9554
  40fe00:	nop    edi
  40fe03:	ss in  al,0xea
  40fe06:	jae    0x40fdf5
  40fe08:	mov    DWORD PTR [eax],0xb2b35cd1
  40fe0e:	int    0x65
  40fe10:	sub    al,0xd0
  40fe12:	out    dx,al
  40fe13:	shl    DWORD PTR [edx+0x47],0xf9
  40fe17:	retf   0x7a42
  40fe1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe1b:	je     0x40fdc7
  40fe1d:	xlat   BYTE PTR ds:[ebx]
  40fe1e:	adc    eax,ebp
  40fe20:	cwde   
  40fe21:	dec    eax
  40fe22:	daa    
  40fe23:	adc    esi,DWORD PTR [ecx-0x4629e9e5]
  40fe29:	enter  0xb810,0x62
  40fe2d:	inc    ecx
  40fe2e:	or     eax,0x656fe854
  40fe33:	cmp    bl,BYTE PTR [esi-0xb]
  40fe36:	inc    eax
  40fe37:	jno    0x40fdba
  40fe39:	test   BYTE PTR [ebp-0x15b1f132],ah
  40fe3f:	ss mov ah,0xe4
  40fe42:	sbb    DWORD PTR [ebx+0x27],0x2
  40fe46:	adc    BYTE PTR ds:[edx-0x4a24e785],cl
  40fe4d:	cs push ebp
  40fe4f:	xchg   BYTE PTR [ecx],ah
  40fe51:	popf   
  40fe52:	stc    
  40fe53:	comiss xmm0,xmm7
  40fe56:	lock inc ecx
  40fe58:	out    0x5d,eax
  40fe5a:	mov    edx,0x94e47225
  40fe5f:	dec    ebp
  40fe60:	jb     0x40fdfc
  40fe62:	pop    ebx
  40fe63:	or     eax,0x223ac348
  40fe68:	sbb    DWORD PTR [esi-0x32],ebx
  40fe6b:	cmp    dl,ah
  40fe6d:	sub    DWORD PTR [eax+0x76],ebp
  40fe70:	(bad)  
  40fe71:	sbb    ebx,edi
  40fe73:	in     al,0xdb
  40fe75:	mov    ecx,0xa1c5a9e
  40fe7a:	test   eax,0xe07b316a
  40fe7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe80:	test   DWORD PTR [esp+esi*1],0x30783004
  40fe87:	xor    al,0x2c
  40fe89:	mov    BYTE PTR [edi+0x79ccc984],ch
  40fe8f:	jmp    0x3002f3ee
  40fe94:	cmp    DWORD PTR [ebp+0x7ed8e5fb],ebx
  40fe9a:	push   ds
  40fe9b:	xchg   ecx,eax
  40fe9c:	adc    edx,DWORD PTR [eax-0x4a]
  40fe9f:	mov    WORD PTR [eax],?
  40fea1:	dec    eax
  40fea2:	(bad)  
  40fea3:	(bad)  
  40fea4:	das    
  40fea5:	adc    al,0x3
  40fea7:	inc    esp
  40fea8:	nop
  40fea9:	out    0x92,al
  40feab:	mov    esi,0xb88c896f
  40feb0:	xchg   ecx,eax
  40feb1:	mov    eax,ds:0x6cd58b63
  40feb6:	retf   
  40feb7:	(bad)  
  40feb8:	dec    BYTE PTR ds:0x3d277822
  40febe:	in     eax,dx
  40febf:	enter  0xce9a,0xd0
  40fec3:	jmp    0x40ff08
  40fec5:	aam    0x7b
  40fec7:	pop    ebp
  40fec8:	int3   
  40fec9:	push   0xffffffca
  40fecb:	adc    eax,0xb3fa8b3c
  40fed0:	sub    eax,0x1ac52c1
  40fed5:	push   es
  40fed6:	xor    esp,DWORD PTR [edi]
  40fed8:	mov    ds:0xf0334d6f,eax
  40fedd:	scas   al,BYTE PTR es:[edi]
  40fede:	mov    bl,0xb2
  40fee0:	and    edi,DWORD PTR [edx+eax*2]
  40fee3:	shl    ecx,0x7a
  40fee6:	jne    0x40fe9a
  40fee8:	dec    eax
  40fee9:	nop
  40feea:	push   edi
  40feeb:	cmp    bh,ah
  40feed:	sub    DWORD PTR ds:0x732fc8e5,0xffffffb8
  40fef4:	mov    BYTE PTR [edx+0x2a5d13b7],0xca
  40fefb:	mov    fs,WORD PTR [edx-0x7acb196]
  40ff01:	mov    DWORD PTR [edx],esi
  40ff03:	fisttp WORD PTR [ebp-0x2a]
  40ff06:	push   ss
  40ff07:	add    esp,DWORD PTR [ecx+0x48]
  40ff0a:	(bad)  
  40ff0c:	sub    DWORD PTR [ebp-0x4e0492da],ebp
  40ff12:	stc    
  40ff13:	bound  esi,QWORD PTR [edx-0x1f]
  40ff16:	xchg   ebx,eax
  40ff17:	in     al,dx
  40ff18:	sbb    BYTE PTR [esi],0xd4
  40ff1b:	jne    0x40fed1
  40ff1d:	lods   eax,DWORD PTR ds:[esi]
  40ff1e:	pushf  
  40ff1f:	std    
  40ff20:	aas    
  40ff21:	(bad)  
  40ff22:	test   eax,0x22408fd0
  40ff27:	in     eax,0x7e
  40ff29:	in     eax,0x70
  40ff2b:	scas   al,BYTE PTR es:[edi]
  40ff2c:	cmp    DWORD PTR [eax-0x7ee509fb],esi
  40ff32:	jecxz  0x40fef0
  40ff34:	add    ecx,0x371e9565
  40ff3a:	mov    esi,0x88c44f4
  40ff3f:	repz add eax,0xe9222679
  40ff45:	test   eax,0x40796052
  40ff4a:	dec    eax
  40ff4b:	int    0xdd
  40ff4d:	rcl    BYTE PTR [ebx-0x2f627f15],cl
  40ff53:	(bad)  
  40ff54:	into   
  40ff55:	sub    edi,esi
  40ff57:	retf   0x5410
  40ff5a:	mov    edi,0x88837af5
  40ff5f:	pushf  
  40ff60:	in     al,dx
  40ff61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff62:	scas   eax,DWORD PTR es:[edi]
  40ff63:	cmp    edi,DWORD PTR [edi+eax*1]
  40ff66:	imul   DWORD PTR [ecx]
  40ff68:	jle    0x40ff2d
  40ff6a:	lahf   
  40ff6b:	and    cl,ch
  40ff6d:	in     eax,dx
  40ff6e:	std    
  40ff6f:	adc    ebp,0xffffffca
  40ff72:	cmp    DWORD PTR [ecx+0x655fd226],ecx
  40ff78:	mov    dl,0x68
  40ff7a:	or     ecx,DWORD PTR [ebx-0x5917810]
  40ff80:	cmp    edx,edx
  40ff82:	adc    DWORD PTR [ebx+0x76],ebx
  40ff85:	jns    0x40ff44
  40ff87:	adc    al,0xa2
  40ff89:	pop    esp
  40ff8a:	adc    esp,DWORD PTR [ebx+eax*8]
  40ff8d:	mov    dl,0xca
  40ff8f:	in     eax,0xc9
  40ff91:	(bad)  
  40ff93:	mov    esi,0xab8dc6df
  40ff98:	adc    eax,DWORD PTR [ebx+0x1e47dcf1]
  40ff9e:	hlt    
  40ff9f:	aam    0xf4
  40ffa1:	xor    al,0x71
  40ffa3:	and    al,BYTE PTR [ecx+0x494f014]
  40ffa9:	scas   al,BYTE PTR es:[edi]
  40ffaa:	cmp    BYTE PTR [ecx],bl
  40ffac:	sti    
  40ffad:	cwde   
  40ffae:	adc    al,0x59
  40ffb0:	mov    DWORD PTR [esi-0xa4faf6e],esi
  40ffb6:	icebp  
  40ffb7:	xor    edx,DWORD PTR ds:0x85055e6e
  40ffbd:	sub    eax,0xc4adb37a
  40ffc2:	leave  
  40ffc3:	js     0x410033
  40ffc5:	shl    ah,0xc2
  40ffc8:	dec    esi
  40ffc9:	push   0x19
  40ffcb:	mov    WORD PTR [edx],ss
  40ffcd:	(bad)  
  40ffce:	mov    edx,0x5e12ed37
  40ffd3:	(bad)  
  40ffd4:	xchg   esi,eax
  40ffd5:	fnsave [ebx+edi*1+0x671bfd8b]
  40ffdc:	ret    
  40ffdd:	cdq    
  40ffde:	mov    al,ch
  40ffe0:	int3   
  40ffe1:	inc    ecx
  40ffe2:	mov    esp,0xd7e29be5
  40ffe7:	mov    dh,0xe2
  40ffe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffea:	add    al,0x1c
  40ffec:	push   ecx
  40ffed:	dec    ecx
  40ffee:	fwait
  40ffef:	les    edx,FWORD PTR [edx-0x789e9656]
  40fff5:	jno    0x41005e
  40fff7:	test   BYTE PTR [ecx],ah
  40fff9:	jne    0x41007a
  40fffb:	mov    dl,0x36
  40fffd:	cmp    DWORD PTR [ecx],0xac402128
  410003:	mov    edi,0x457c4786
  410008:	xchg   edx,eax
  410009:	setnp  ah
  41000c:	push   ecx
  41000d:	mov    al,ds:0x524a164a
  410012:	lds    edx,FWORD PTR [ebp-0x37]
  410015:	jmp    0x77679488
  41001a:	(bad)  
  41001b:	ja     0x410070
  41001d:	ins    DWORD PTR es:[edi],dx
  41001e:	xor    al,0xf5
  410020:	inc    ecx
  410021:	pop    ss
  410022:	aam    0xe7
  410024:	and    al,0x98
  410026:	mov    ebp,DWORD PTR [ebx-0x2a]
  410029:	lds    edx,FWORD PTR [ebx+0x6c84185]
  41002f:	sub    al,0xaf
  410031:	xor    eax,0x914bd858
  410036:	rcr    BYTE PTR [eax+0x1d],cl
  410039:	mov    dl,0xe6
  41003b:	popa   
  41003c:	jecxz  0x410084
  41003e:	push   esp
  41003f:	add    al,0xfc
  410041:	mov    WORD PTR [ebx-0x5b175945],?
  410047:	lds    edx,FWORD PTR [edx-0x1d1dd1b0]
  41004d:	pop    edx
  41004e:	out    dx,eax
  41004f:	dec    eax
  410050:	popf   
  410051:	outs   dx,BYTE PTR ds:[esi]
  410052:	lods   eax,DWORD PTR ds:[esi]
  410053:	xchg   esp,eax
  410054:	(bad)  
  410056:	rcr    BYTE PTR [esi-0x286aa282],cl
  41005c:	cdq    
  41005d:	frstor [ebx-0x527e0a3b]
  410063:	pop    ds
  410064:	das    
  410065:	ror    DWORD PTR [edx+0x23],cl
  410068:	es pop eax
  41006a:	or     BYTE PTR [ecx+0x62],0xd2
  41006e:	test   eax,0xfdfbb8fc
  410073:	das    
  410074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410075:	pop    eax
  410076:	mov    ebx,DWORD PTR [ecx+0x20]
  410079:	call   0xf9876a2
  41007e:	sbb    eax,0x80a2f840
  410083:	stc    
  410084:	push   ds
  410085:	add    ch,BYTE PTR [edx+0x30441f3d]
  41008b:	xchg   ecx,eax
  41008c:	mov    DWORD PTR [esi+ebp*4-0x45b9f0c1],ebp
  410093:	in     al,0xa5
  410095:	or     ebx,DWORD PTR [ebp+0x491e56b2]
  41009b:	jne    0x4100d4
  41009d:	call   0x75bd:0x78ae5bff
  4100a4:	pop    ecx
  4100a5:	popa   
  4100a6:	mov    ds:0xe8a90854,al
  4100ab:	and    al,0x76
  4100ad:	push   ebx
  4100ae:	loopne 0x4100d6
  4100b0:	mov    esp,DWORD PTR [esp+ebp*2-0x20]
  4100b4:	inc    esp
  4100b5:	test   DWORD PTR [edx-0x4f],0x9708cd4b
  4100bc:	ror    bh,0x18
  4100bf:	jmp    0xf6bf:0xf1d9fb42
  4100c6:	mov    ch,0x43
  4100c8:	sbb    al,0x54
  4100ca:	fmul   DWORD PTR [esi+0x4c]
  4100cd:	stos   BYTE PTR es:[edi],al
  4100ce:	in     eax,0xff
  4100d0:	loop   0x4100f2
  4100d2:	(bad)  [eax+0x8b14604]
  4100d8:	test   DWORD PTR [eax-0x66281ba],ebp
  4100de:	cmp    eax,0x88b6d1c
  4100e3:	ret    0x8d6d
  4100e6:	mov    ds:0x1b49f9d9,eax
  4100eb:	addr16 mov eax,0xf6d457f2
  4100f1:	and    ah,BYTE PTR [edi-0x3e]
  4100f4:	or     eax,0xbe72f0e6
  4100f9:	inc    edi
  4100fa:	lods   al,BYTE PTR ds:[esi]
  4100fb:	inc    esp
  4100fc:	aam    0x53
  4100fe:	leave  
  4100ff:	jno    0x4100d2
  410101:	push   0xffffff9b
  410103:	enter  0xe433,0x1d
  410107:	jmp    0x685054e9
  41010c:	cld    
  41010d:	inc    BYTE PTR [esi]
  41010f:	dec    edx
  410110:	push   ds
  410111:	cli    
  410112:	out    dx,eax
  410113:	mov    ds:0x5690180d,al
  410118:	mov    bl,0xcd
  41011a:	pop    esi
  41011b:	xchg   ecx,eax
  41011c:	adc    BYTE PTR [edx],al
  41011e:	mov    dl,0x92
  410120:	push   es
  410121:	xor    BYTE PTR [edx+eax*8+0x53],ah
  410125:	mov    esp,0x7c9b511d
  41012a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41012b:	lock call 0x5ce8:0xd5268c76
  410133:	xor    al,0xd0
  410135:	add    bl,BYTE PTR ds:0xa61ed394
  41013b:	lgs    ecx,FWORD PTR [edi+edx*2-0x8]
  410140:	xchg   ebp,eax
  410141:	imul   ebx,DWORD PTR [esi],0xf7af2813
  410147:	ins    BYTE PTR es:[edi],dx
  410148:	mov    dl,0xf2
  41014a:	sbb    bh,BYTE PTR [esi+0x6961271f]
  410150:	pop    edi
  410151:	sub    ebp,DWORD PTR [esi]
  410153:	jle    0x410180
  410155:	ret    0xdc2b
  410158:	push   ecx
  410159:	je     0x410130
  41015b:	rol    DWORD PTR ds:0x1cc11cb9,1
  410161:	dec    esp
  410162:	sub    bh,BYTE PTR [ecx]
  410164:	add    ch,cl
  410166:	(bad)  
  410167:	pop    ds
  410168:	add    dh,ch
  41016a:	aam    0xa6
  41016c:	fdiv   DWORD PTR [eax+eax*4-0x47]
  410170:	outs   dx,BYTE PTR ds:[esi]
  410171:	mov    ch,0x3e
  410173:	xor    dh,dh
  410175:	add    bh,BYTE PTR [eax-0xd]
  410178:	sbb    al,0xa6
  41017a:	je     0x410113
  41017c:	out    0x28,al
  41017e:	repz std 
  410180:	sbb    al,0x26
  410182:	cwde   
  410183:	xor    al,0xdf
  410185:	and    BYTE PTR [ecx+0x1c],dh
  410188:	lock aas 
  41018a:	ret    0x6153
  41018d:	(bad)  
  41018e:	test   BYTE PTR [edx],0xfe
  410191:	xor    DWORD PTR [ebx],eax
  410193:	jle    0x410126
  410195:	push   ecx
  410196:	outs   dx,BYTE PTR ds:[esi]
  410197:	icebp  
  410198:	push   ss
  410199:	(bad)  
  41019a:	in     eax,0xe4
  41019c:	cdq    
  41019d:	iret   
  41019e:	loopne 0x4101f9
  4101a0:	js     0x4101ea
  4101a2:	or     eax,0x1e04b828
  4101a7:	ja     0x41019e
  4101a9:	mov    ah,0x55
  4101ab:	(bad)  
  4101ac:	jp     0x41018b
  4101ae:	addr16 jl 0x41015d
  4101b1:	scas   al,BYTE PTR es:[edi]
  4101b2:	push   ecx
  4101b3:	pop    edi
  4101b4:	mov    es,WORD PTR [edi+0x34]
  4101b7:	xor    al,0x3e
  4101b9:	retf   
  4101ba:	inc    ecx
  4101bb:	popa   
  4101bc:	test   al,0xb9
  4101be:	mov    eax,0xe85d5a6a
  4101c3:	call   0x8b5f91fc
  4101c8:	and    BYTE PTR [edx],bl
  4101ca:	mov    edi,0xbc10a0b3
  4101cf:	pushf  
  4101d0:	fiadd  WORD PTR fs:[ebx]
  4101d3:	jno    0x4101b7
  4101d5:	xchg   esi,eax
  4101d6:	dec    esi
  4101d7:	mov    ebp,0x27a922a3
  4101dc:	cmp    DWORD PTR [edi-0x545cf19f],ebp
  4101e2:	in     al,0x9a
  4101e4:	push   ebp
  4101e5:	mov    ah,0x97
  4101e7:	clc    
  4101e8:	push   esp
  4101e9:	ficomp DWORD PTR [eax+0x65]
  4101ec:	xchg   ebx,eax
  4101ed:	mov    eax,0xa77cde3f
  4101f2:	cmp    eax,0xa5566513
  4101f7:	aas    
  4101f8:	out    0xc0,al
  4101fa:	add    al,0xfc
  4101fc:	stos   BYTE PTR es:[edi],al
  4101fd:	imul   eax,eax,0x1a
  410200:	xor    BYTE PTR [ebp+0xb],bh
  410203:	stos   DWORD PTR es:[edi],eax
  410204:	js     0x4101df
  410206:	mov    dl,dl
  410208:	nop    DWORD PTR [ebx+0x73]
  41020c:	int3   
  41020d:	sbb    DWORD PTR [ebp-0x2c77fa4f],0x8044e207
  410217:	jb     0x4101a5
  410219:	xchg   edx,eax
  41021a:	sub    eax,DWORD PTR [eax-0x59]
  41021d:	sub    bh,BYTE PTR [ebp+0x31]
  410220:	lds    ebx,FWORD PTR [eax]
  410222:	push   edx
  410223:	inc    ecx
  410224:	shr    DWORD PTR [edx-0x33d5ebed],0xfa
  41022b:	pop    ebp
  41022c:	cmp    edx,DWORD PTR [ecx+0x64]
  41022f:	and    DWORD PTR [ecx-0xa86e287],edx
  410235:	ja     0x4101e6
  410237:	xor    edx,ebp
  410239:	xchg   esi,eax
  41023a:	or     BYTE PTR [edi],ah
  41023c:	jo     0x410248
  41023e:	mov    ebp,0xe21e7a15
  410243:	xchg   edx,eax
  410244:	stc    
  410245:	add    al,0x2
  410247:	les    ecx,FWORD PTR [esp+edx*4]
  41024a:	xchg   ecx,eax
  41024b:	adc    BYTE PTR [ebx+0x59e2b1ca],ah
  410251:	ds jae 0x4101fd
  410254:	in     eax,0xd3
  410256:	jnp    0x4102c8
  410258:	inc    ecx
  410259:	stos   BYTE PTR es:[edi],al
  41025a:	push   es
  41025b:	jmp    0x6a350db9
  410260:	inc    eax
  410261:	dec    ecx
  410262:	adc    BYTE PTR [esi-0x3872b0f0],dl
  410268:	cmp    eax,0x7e653d0
  41026d:	xlat   BYTE PTR ds:[ebx]
  41026e:	imul   ebp,DWORD PTR [ebp+0x7e6ad34b],0x5f5aa498
  410278:	xor    eax,0xb2ab501c
  41027d:	call   0x99013ca1
  410282:	dec    edi
  410283:	(bad)  
  410284:	jae    0x410303
  410286:	add    eax,0xe6b0ec3c
  41028b:	mov    esi,0x41ae9e61
  410290:	jns    0x41029b
  410292:	sbb    esi,DWORD PTR [edi+0x7d]
  410295:	test   al,0xe6
  410298:	mov    cl,ah
  41029a:	adc    DWORD PTR [esi],edi
  41029c:	popa   
  41029d:	ror    al,cl
  41029f:	shl    BYTE PTR [edx-0x3d],cl
  4102a2:	or     eax,0x31701aeb
  4102a7:	aad    0x15
  4102a9:	pop    es
  4102aa:	inc    ecx
  4102ab:	inc    ebx
  4102ac:	inc    edx
  4102ad:	inc    ecx
  4102ae:	inc    esi
  4102af:	test   eax,0x98e52ce
  4102b4:	fistp  QWORD PTR ds:0xf4b328a
  4102ba:	push   dx
  4102bc:	mov    dh,0xaf
  4102be:	mov    bh,BYTE PTR [edi]
  4102c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102c1:	sbb    BYTE PTR [esi-0x7a81fb5d],bl
  4102c7:	add    al,0xf1
  4102c9:	in     al,dx
  4102ca:	cmp    eax,0x4884f177
  4102cf:	out    dx,eax
  4102d0:	cmp    eax,0x71677627
  4102d5:	shr    DWORD PTR [ebx-0x6c],0xf9
  4102d9:	cli    
  4102da:	jne    0x410284
  4102dc:	addr16 leave 
  4102de:	out    dx,eax
  4102df:	or     al,0xa
  4102e1:	xchg   ebp,eax
  4102e2:	and    ebx,DWORD PTR [si-0x31b8]
  4102e7:	test   DWORD PTR [eax+0x41],ebp
  4102ea:	push   0x916e99eb
  4102ef:	push   esi
  4102f0:	inc    eax
  4102f1:	xchg   ebx,eax
  4102f2:	outs   dx,DWORD PTR ds:[esi]
  4102f3:	outs   dx,BYTE PTR ds:[esi]
  4102f4:	jmp    0xa43a:0x54da93da
  4102fb:	pop    eax
  4102fc:	and    al,bl
  4102fe:	ja     0x4102ab
  410300:	(bad)  
  410301:	fidivr WORD PTR [ebx+0x78]
  410304:	ror    DWORD PTR [ecx+0x11],cl
  410307:	sti    
  410308:	ds setb bh
  41030c:	dec    esi
  41030d:	ror    DWORD PTR [esi+0x46],cl
  410310:	std    
  410311:	cld    
  410312:	mov    ebx,0x1e5a2235
  410317:	xor    DWORD PTR [ebx],ebx
  410319:	inc    eax
  41031a:	sbb    eax,0xad86c99f
  41031f:	enter  0xb468,0x91
  410323:	add    ebx,ebx
  410325:	shr    BYTE PTR [ebp-0x53],0x87
  410329:	fnstsw WORD PTR [edi]
  41032b:	pushf  
  41032c:	rcr    BYTE PTR [ebx-0x6b],0x33
  410330:	fucom  st(3)
  410332:	mov    eax,gs:0xa61e4058
  410338:	jns    0x41032b
  41033a:	add    eax,DWORD PTR [ecx-0x35]
  41033d:	(bad)  
  41033e:	js     0x410339
  410340:	mov    bh,0x4b
  410342:	imul   esi,edi,0xffffffd5
  410345:	sbb    cl,BYTE PTR [ebp-0x69ff2322]
  41034b:	mov    ch,0x7f
  41034d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41034e:	jae    0x410367
  410350:	push   ecx
  410351:	jb     0x410397
  410353:	or     eax,0xaea2663b
  410358:	bound  edx,QWORD PTR [esi]
  41035a:	ret    0x8c53
  41035d:	fild   WORD PTR ds:0x5e2009c4
  410363:	jle    0x41039c
  410365:	fs hlt 
  410367:	cmp    BYTE PTR [ebx-0x35],dh
  41036a:	shr    BYTE PTR [edi+0x4afa08ae],1
  410370:	bnd jne 0x410339
  410373:	test   BYTE PTR [edx],dl
  410375:	jg     0x41034f
  410377:	sub    eax,0xa645d58
  41037c:	out    0x51,al
  41037e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41037f:	sar    ch,0xef
  410382:	push   0x8504012d
  410387:	sub    DWORD PTR ds:0x7c8901a0,esp
  41038d:	lods   al,BYTE PTR ds:[esi]
  41038e:	nop
  41038f:	out    0x14,eax
  410391:	push   0xac2d78c2
  410396:	or     DWORD PTR [edx],ebp
  410398:	leave  
  410399:	test   DWORD PTR [ecx-0x12],edi
  41039c:	xchg   edx,eax
  41039d:	push   0x991249f6
  4103a2:	xchg   ebx,eax
  4103a3:	jnp    0x4103db
  4103a5:	aaa    
  4103a6:	xor    dh,BYTE PTR [ebx]
  4103a8:	ret    0x96c3
  4103ab:	push   edx
  4103ac:	rol    DWORD PTR [esi],0x27
  4103af:	pop    ss
  4103b0:	jbe    0x410366
  4103b2:	gs jne 0x4103f2
  4103b5:	test   BYTE PTR [eax+ebx*2],dh
  4103b8:	add    al,0xdc
  4103ba:	sbb    eax,0x162dbb7
  4103bf:	mov    dl,0x47
  4103c1:	les    edx,FWORD PTR [eax-0x43]
  4103c4:	out    0x47,al
  4103c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103c7:	jne    0x410434
  4103c9:	out    0x1b,eax
  4103cb:	call   0x80ff908f
  4103d0:	cmp    DWORD PTR [ebx],ebx
  4103d2:	arpl   sp,bp
  4103d4:	fstp   DWORD PTR [edx+ecx*8+0x4f]
  4103d8:	adc    eax,0x1a6f3252
  4103dd:	dec    ebx
  4103de:	mov    ds:0x673f9de2,al
  4103e3:	and    BYTE PTR [esi-0x5],ch
  4103e6:	jno    0x41041e
  4103e8:	sbb    eax,0x3393b791
  4103ed:	inc    edx
  4103ee:	pop    edi
  4103ef:	cmp    cl,0xdd
  4103f2:	pop    edi
  4103f3:	repnz sub eax,DWORD PTR [ebx-0x326b3398]
  4103fa:	jae    0x410384
  4103fc:	ds cwde 
  4103fe:	or     DWORD PTR [edi+0x6c48ef96],edi
  410404:	lahf   
  410405:	aas    
  410406:	xor    al,0x30
  410408:	jns    0x410422
  41040a:	(bad)  
  41040b:	fistp  QWORD PTR [ebp+0x7e]
  41040e:	mov    edi,0xd35e546c
  410413:	mov    ecx,0xb5b1ff2
  410418:	adc    BYTE PTR [ebp+0x4f],dh
  41041b:	out    0x7a,eax
  41041d:	fdiv   QWORD PTR [ecx+ecx*1-0x55]
  410421:	shl    BYTE PTR [edx],cl
  410423:	dec    edx
  410424:	clc    
  410425:	jmp    0xa906:0x9ee91445
  41042c:	sbb    esi,edi
  41042e:	(bad)  
  41042f:	dec    ebx
  410430:	test   al,0xa7
  410432:	mov    al,0x93
  410434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410435:	out    0xfd,al
  410437:	vmovss DWORD PTR [edi],xmm5
  41043b:	add    BYTE PTR [ecx+0x17a9049c],bl
  410441:	loop   0x410468
  410443:	jnp    0x410432
  410445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410446:	xor    BYTE PTR ds:0x97ac0599,ah
  41044c:	mov    eax,0xe9ae2e7d
  410451:	xor    eax,0x21751fa2
  410456:	fnsetpm(287 only) 
  410458:	mov    bl,BYTE PTR [ecx+0x69]
  41045b:	jge    0x41044b
  41045d:	mov    DWORD PTR [ebp+0xb0e39b2],edx
  410463:	shl    BYTE PTR [edi],0x2d
  410466:	mov    ah,0xeb
  410468:	data16 xor dl,BYTE PTR [ebp+ebp*4+0x7a5be505]
  410470:	pop    esi
  410471:	fimul  WORD PTR [ebp-0x31]
  410474:	fisub  WORD PTR [ebp+0x2ded7545]
  41047a:	jns    0x4104e1
  41047c:	(bad)  
  41047d:	retf   
  41047e:	scas   eax,DWORD PTR es:[edi]
  41047f:	xadd   DWORD PTR [eax+eiz*8+0x5dc74342],esp
  410487:	mov    bh,BYTE PTR [esi+0x1f]
  41048a:	adc    DWORD PTR ds:0xd3cf2044,esi
  410490:	sbb    al,0xc4
  410492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410493:	sti    
  410494:	(bad)  
  410495:	loopne 0x410450
  410497:	mov    DWORD PTR [esi-0x57],edx
  41049a:	popa   
  41049b:	iret   
  41049c:	pop    eax
  41049d:	ja     0x410503
  41049f:	adc    esp,DWORD PTR [eax+ecx*2-0x59]
  4104a3:	leave  
  4104a4:	arpl   WORD PTR [eax+0x1d],bp
  4104a7:	mov    bl,0x54
  4104a9:	mov    gs,WORD PTR [eax+esi*1-0x73]
  4104ad:	adc    cl,BYTE PTR cs:[esi+0x6d385578]
  4104b4:	imul   ebp,edi,0xfffffffe
  4104b7:	push   edi
  4104b8:	mov    ch,0xaf
  4104ba:	cdq    
  4104bb:	imul   edx,DWORD PTR [esp+ecx*8-0x67],0x252e0f64
  4104c3:	not    BYTE PTR [edx-0x15cedccb]
  4104c9:	xchg   ebp,eax
  4104ca:	lods   al,BYTE PTR ds:[esi]
  4104cb:	cmp    ebp,esi
  4104cd:	add    eax,0xbb07a9cf
  4104d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104d3:	sbb    BYTE PTR [eax-0x5c699923],al
  4104d9:	rcr    eax,cl
  4104db:	or     edi,edi
  4104dd:	xor    edx,ebp
  4104df:	ja     0x41049b
  4104e1:	or     cl,BYTE PTR [edx]
  4104e3:	ds and al,0x5c
  4104e6:	das    
  4104e7:	jns    0x41053d
  4104e9:	push   es
  4104ea:	mov    ch,0xe4
  4104ec:	test   eax,0x45701689
  4104f1:	fwait
  4104f2:	and    al,0xd4
  4104f4:	popa   
  4104f5:	jg     0x410510
  4104f7:	jp     0x4104c2
  4104f9:	push   edx
  4104fa:	stos   DWORD PTR es:[edi],eax
  4104fb:	inc    esp
  4104fc:	xchg   edx,eax
  4104fd:	std    
  4104fe:	retf   
  4104ff:	out    dx,al
  410500:	and    dh,al
  410502:	jle    0x4104db
  410504:	aam    0x72
  410506:	(bad)  
  410507:	adc    dl,BYTE PTR [eax]
  410509:	or     BYTE PTR [edi+ecx*4-0x14e9eb6e],bl
  410510:	stos   DWORD PTR es:[edi],eax
  410511:	scas   eax,DWORD PTR es:[edi]
  410512:	ss jle 0x41053e
  410515:	and    bh,BYTE PTR [ebp+0x48e92756]
  41051b:	and    BYTE PTR [ebp-0x80],ah
  41051e:	push   ebx
  41051f:	cwde   
  410520:	mov    dl,0xf8
  410522:	mov    ah,0x8f
  410524:	mov    esp,0xc5e117a3
  410529:	div    esi
  41052b:	xor    eax,0x45185c2d
  410530:	cmp    eax,0xd951d0d8
  410535:	cmp    BYTE PTR [esi+ecx*8],bl
  410538:	cli    
  410539:	jno    0x410537
  41053b:	daa    
  41053c:	push   esp
  41053d:	jne    0x4105b3
  41053f:	push   edx
  410540:	and    eax,0xce0c2ba8
  410545:	mov    edx,0x53ccf517
  41054a:	addr16 cdq 
  41054c:	cmp    bh,BYTE PTR [eax+0x6c7440dc]
  410552:	cmp    eax,0xaffa32e9
  410557:	and    eax,ecx
  410559:	(bad)  
  41055a:	hlt    
  41055b:	mov    esp,DWORD PTR [esi]
  41055d:	shl    BYTE PTR [ebx+0x16],cl
  410560:	inc    esi
  410561:	sub    ebx,esi
  410563:	fnstsw WORD PTR ds:0xac92691a
  410569:	aas    
  41056a:	pop    ss
  41056b:	xchg   DWORD PTR [ecx+0x5c],esi
  41056e:	loop   0x410503
  410570:	out    dx,eax
  410571:	mov    ds:0xfdd4b281,eax
  410576:	inc    ebx
  410577:	cmp    al,0x2e
  410579:	loopne 0x4105f2
  41057b:	call   0xeb90:0x3b70a3aa
  410582:	dec    eax
  410583:	cmc    
  410584:	leave  
  410585:	loopne 0x41053b
  410587:	inc    ebx
  410588:	mov    WORD PTR [esi],ds
  41058a:	add    al,0xbb
  41058c:	xchg   ebp,eax
  41058d:	cmp    BYTE PTR es:[edi+ecx*2+0xe],dh
  410592:	push   es
  410593:	sbb    eax,0x2841bb7a
  410598:	add    edi,edi
  41059a:	jb     0x4105b5
  41059c:	test   ch,0xa8
  41059f:	(bad)  
  4105a0:	mov    ecx,0xeeb50420
  4105a5:	adc    eax,0x1f8fdb1d
  4105aa:	mov    edi,0xb671e9f
  4105af:	push   edx
  4105b0:	cli    
  4105b1:	pop    es
  4105b2:	test   eax,0xcdf28b3d
  4105b7:	add    eax,0x2e5aad27
  4105bc:	pop    eax
  4105bd:	fimul  DWORD PTR [eax-0x56]
  4105c0:	xchg   esp,eax
  4105c1:	inc    edi
  4105c2:	sti    
  4105c3:	jb     0x41059a
  4105c5:	cs inc edi
  4105c7:	inc    ecx
  4105c8:	xchg   edx,eax
  4105c9:	mov    DWORD PTR [edi],edx
  4105cb:	(bad)  
  4105cd:	add    eax,0xe0d60f05
  4105d2:	(bad)  
  4105d3:	pop    es
  4105d4:	sub    esp,ecx
  4105d6:	test   al,0x5
  4105d8:	clc    
  4105d9:	dec    ebp
  4105da:	cmp    BYTE PTR [edx],ah
  4105dc:	mov    dl,0x43
  4105de:	cmp    esp,edi
  4105e0:	sbb    esi,DWORD PTR [edx]
  4105e2:	jp     0x410625
  4105e4:	and    ebp,esi
  4105e6:	outs   dx,BYTE PTR ds:[esi]
  4105e7:	add    BYTE PTR [edi+ecx*1],bl
  4105ea:	out    dx,al
  4105eb:	jns    0x410580
  4105ed:	int    0x3b
  4105ef:	cmp    DWORD PTR [esi-0x504db725],ebx
  4105f5:	jmp    0x63201d2
  4105fa:	or     DWORD PTR [edx],ecx
  4105fc:	xor    eax,0x7d7e53d5
  410601:	scas   eax,DWORD PTR es:[edi]
  410602:	loopne 0x410645
  410604:	fidivr DWORD PTR [edx]
  410607:	mov    ds:0xc56d1d85,al
  41060d:	pop    eax
  41060f:	jmp    0x85bb8341
  410614:	sbb    ebx,DWORD PTR [edx+eax*1]
  410617:	mov    bh,bh
  410619:	scas   eax,DWORD PTR es:[edi]
  41061a:	(bad)  
  41061b:	idiv   BYTE PTR [edx]
  41061d:	sar    BYTE PTR [ebx],0xb5
  410620:	pop    edi
  410621:	arpl   WORD PTR [ebx],cx
  410623:	cld    
  410624:	mul    BYTE PTR [edi-0x6a356884]
  41062a:	push   edi
  41062b:	push   edi
  41062c:	or     BYTE PTR [edx-0x46c19538],0xb2
  410633:	and    BYTE PTR [esi],ah
  410635:	psrld  mm2,mm5
  410638:	scas   eax,DWORD PTR es:[edi]
  410639:	mov    al,0x8a
  41063b:	cmc    
  41063c:	das    
  41063d:	cmp    DWORD PTR [eax],edx
  41063f:	cmp    bl,BYTE PTR [ebx+0x10]
  410642:	(bad)  
  410644:	bound  ebp,QWORD PTR [ecx-0xeaff237]
  41064a:	mov    BYTE PTR [ebp-0x34],ah
  41064d:	dec    edi
  41064e:	add    eax,0x3990b1a3
  410653:	pop    esp
  410654:	or     DWORD PTR [ebx],0xffffffca
  410657:	cmp    al,BYTE PTR [ebp-0x42e4b4e4]
  41065d:	gs pop ebx
  41065f:	jle    0x4106af
  410661:	pop    eax
  410662:	sbb    DWORD PTR [ebp+0x8],edx
  410665:	xchg   bl,dh
  410667:	retf   0x239f
  41066a:	lods   eax,DWORD PTR ds:[esi]
  41066b:	and    eax,0x43489e89
  410670:	fist   DWORD PTR ds:0xe497c0d
  410676:	jle    0x410603
  410678:	ins    DWORD PTR es:[edi],dx
  410679:	jnp    0x4106b6
  41067b:	js     0x410612
  41067d:	or     edx,DWORD PTR [ebx-0x2952ed35]
  410683:	and    BYTE PTR [ecx-0x14],al
  410686:	and    eax,0x809b78e8
  41068b:	(bad)  
  41068d:	xor    al,0x3c
  41068f:	call   0xa59:0x2eaa834b
  410696:	into   
  410697:	icebp  
  410698:	js     0x410624
  41069a:	add    ah,al
  41069c:	jl     0x41064b
  41069e:	(bad)  
  41069f:	nop
  4106a0:	pop    ebp
  4106a1:	ds shl ecx,cl
  4106a4:	inc    ecx
  4106a5:	sbb    al,0xbb
  4106a7:	cmp    DWORD PTR [esi+0xe],esp
  4106aa:	lds    ebp,FWORD PTR [esi+0x703dc5af]
  4106b0:	xor    eax,0x2a0cc548
  4106b5:	sbb    BYTE PTR [edx-0x79e7d748],0x92
  4106bc:	cmp    ah,dh
  4106be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106bf:	retf   
  4106c0:	cwde   
  4106c1:	cmp    DWORD PTR [ebx-0x21],edi
  4106c4:	lahf   
  4106c5:	adc    al,0xf2
  4106c7:	popf   
  4106c8:	fst    DWORD PTR [ecx-0x8]
  4106cb:	mov    dh,BYTE PTR [ecx-0x12]
  4106ce:	cmp    al,0x9f
  4106d0:	daa    
  4106d1:	jae    0x41067f
  4106d3:	mov    ebp,0x127e0c3f
  4106d8:	or     BYTE PTR [ebx+eax*2-0x5f],0x77
  4106dd:	cld    
  4106de:	mov    fs,WORD PTR [edi-0x67ebc2fc]
  4106e4:	jge    0x410690
  4106e6:	mov    DWORD PTR gs:[eax-0x12],esi
  4106ea:	(bad)  
  4106eb:	in     al,dx
  4106ec:	js     0x4106b5
  4106ee:	fisubr DWORD PTR [ecx+0x190a7242]
  4106f4:	lds    eax,FWORD PTR [esi+eiz*1-0x5e]
  4106f8:	rcl    DWORD PTR [edi+0x47],0xd4
  4106fc:	lahf   
  4106fd:	mov    al,0x26
  4106ff:	shr    BYTE PTR [edi+0x2802ce76],0xd6
  410706:	or     eax,0x178f18ec
  41070b:	mov    dh,0x91
  41070d:	fild   WORD PTR ds:0xb04885d1
  410713:	inc    ebp
  410714:	xchg   esi,eax
  410715:	and    eax,DWORD PTR [ebx-0x28]
  410718:	call   0xc190847a
  41071d:	(bad)
  410720:	stos   DWORD PTR es:[edi],eax
  410721:	inc    edx
  410722:	icebp  
  410723:	jns    0x41077e
  410725:	or     ecx,DWORD PTR [ebp-0x7c]
  410728:	outs   dx,BYTE PTR ds:[esi]
  410729:	pop    esi
  41072a:	jge    0x410738
  41072c:	or     bh,ch
  41072e:	push   0x43da399e
  410733:	pop    ecx
  410734:	mov    ebp,0x9b75b18f
  410739:	call   0xdabf:0xbf3e2bb2
  410740:	int3   
  410741:	ret    0x1c5e
  410744:	cld    
  410745:	or     BYTE PTR [ecx],cl
  410747:	mov    ch,0x39
  410749:	cmp    DWORD PTR [ebp+0xc],0xffffffb7
  41074d:	mov    cs,WORD PTR [ebp+ecx*8-0x626d73fc]
  410754:	mov    esi,0x724db44e
  410759:	ins    DWORD PTR es:[edi],dx
  41075a:	iret   
  41075b:	scas   al,BYTE PTR es:[edi]
  41075c:	xchg   edi,eax
  41075d:	popa   
  41075e:	cs pop ebp
  410760:	cdq    
  410761:	call   0xe193:0xfec9eb63
  410768:	pop    esp
  410769:	clc    
  41076a:	fisubr WORD PTR [edi+0x6d0a1573]
  410770:	pusha  
  410771:	cmp    BYTE PTR [ecx+0x1f],dh
  410774:	pushf  
  410775:	retf   0xda37
  410778:	test   eax,0xd012365b
  41077d:	sub    cl,dl
  41077f:	push   ss
  410780:	into   
  410781:	stc    
  410782:	ret    0xf67c
  410785:	cmp    al,0x65
  410787:	neg    BYTE PTR [ebx]
  410789:	jmp    0xc67b:0x927a5dcf
  410790:	out    0x59,eax
  410792:	sbb    ah,bl
  410794:	add    DWORD PTR [edi],edi
  410796:	nop
  410797:	dec    ebx
  410798:	xor    DWORD PTR [ecx],0xa2829a5f
  41079e:	call   0x9bfc44a5
  4107a3:	lahf   
  4107a4:	adc    al,0x1b
  4107a6:	mov    esi,0x502cad0b
  4107ab:	ret    
  4107ac:	mov    edi,0x3185aff2
  4107b1:	mov    cl,0x59
  4107b3:	adc    al,0xb3
  4107b5:	adc    DWORD PTR [edx+0x70],esp
  4107b8:	mov    edx,0xf654b13a
  4107bd:	and    eax,0xde594e56
  4107c2:	rol    cl,1
  4107c4:	xchg   DWORD PTR [esi],ebx
  4107c6:	(bad)  
  4107c7:	int3   
  4107c8:	mov    ch,dh
  4107ca:	mov    ecx,0x73de666b
  4107cf:	ss cmc 
  4107d1:	loope  0x410831
  4107d3:	fidiv  WORD PTR [edi+0x6a]
  4107d6:	sub    eax,0xc044e980
  4107db:	repnz or BYTE PTR ds:0xc90996fe,ch
  4107e2:	dec    edi
  4107e3:	dec    edi
  4107e4:	push   esp
  4107e5:	fwait
  4107e6:	mov    ah,BYTE PTR [esi-0x3edbd3bd]
  4107ec:	or     BYTE PTR [ebp+0x29],0x29
  4107f0:	mov    dh,0xdd
  4107f2:	pop    ds
  4107f3:	cmp    BYTE PTR [esp+ebp*2-0x7b],al
  4107f7:	pop    esi
  4107f8:	loop   0x410782
  4107fa:	cld    
  4107fb:	xchg   ebx,eax
  4107fc:	xchg   eax,ecx
  4107fe:	inc    esp
  4107ff:	sbb    dl,0x94
  410802:	out    dx,eax
  410803:	test   DWORD PTR [ecx],ebx
  410805:	sub    edi,edi
  410807:	int    0xf7
  410809:	cwde   
  41080a:	push   ebp
  41080b:	fisttp DWORD PTR es:[edx]
  41080e:	nop
  41080f:	pop    ds
  410810:	sub    dl,BYTE PTR [edi]
  410812:	xor    al,0x9e
  410814:	dec    eax
  410815:	cmp    eax,0x1590049b
  41081a:	inc    esi
  41081b:	push   esp
  41081c:	and    ecx,DWORD PTR ds:0xd02bd3b3
  410822:	mov    ch,0xb8
  410824:	out    0x30,al
  410826:	ss daa 
  410828:	cmp    al,0xe4
  41082a:	mov    eax,0x81f2294a
  41082f:	loope  0x41088c
  410831:	popa   
  410832:	add    ecx,DWORD PTR [ecx]
  410834:	jne    0x410868
  410836:	inc    ecx
  410837:	inc    esp
  410838:	mov    eax,0x130d12eb
  41083d:	in     eax,0xfe
  41083f:	xor    eax,0x695b13b0
  410844:	xor    ebx,DWORD PTR [eax-0x5f]
  410847:	pop    edi
  410848:	in     eax,0xae
  41084a:	out    dx,al
  41084b:	(bad)  
  41084c:	jmp    0x4971ce55
  410851:	add    DWORD PTR [ecx+0x1e],edx
  410854:	cmp    edi,DWORD PTR [ebx+0x40e1319c]
  41085a:	test   al,0x14
  41085c:	je     0x410804
  41085e:	retf   
  41085f:	push   0x23
  410861:	push   es
  410862:	mov    bh,0x81
  410864:	imul   edx,DWORD PTR ss:[ecx+0x5e],0x60f4a103
  41086c:	pop    ss
  41086d:	mov    eax,0xfe5937dc
  410872:	mov    cs,WORD PTR [ecx-0x43]
  410875:	or     eax,0xa7ae2499
  41087a:	ds mov cl,0x86
  41087d:	dec    esi
  41087e:	scas   al,BYTE PTR es:[edi]
  41087f:	ja     0x4108a6
  410881:	inc    ecx
  410882:	leave  
  410883:	daa    
  410884:	inc    esp
  410885:	pusha  
  410886:	xchg   ebx,eax
  410887:	loop   0x4108c4
  410889:	jmp    0x9404:0xd15c8784
  410890:	ins    BYTE PTR es:[edi],dx
  410891:	ror    BYTE PTR [edx],0xdd
  410894:	xor    ch,al
  410896:	jp     0x410889
  410898:	repz cmc 
  41089a:	adc    eax,0xd979d12
  41089f:	(bad)  
  4108a0:	and    esi,ebp
  4108a2:	in     al,dx
  4108a3:	(bad)  
  4108a4:	js     0x410864
  4108a6:	sbb    edx,DWORD PTR [edi-0x2d]
  4108a9:	cmp    BYTE PTR [eax+0x30],cl
  4108ac:	push   eax
  4108ad:	xchg   ecx,eax
  4108ae:	inc    esp
  4108af:	aaa    
  4108b0:	icebp  
  4108b1:	jno    0x4108a9
  4108b3:	and    ah,0xd7
  4108b6:	adc    bl,ch
  4108b8:	into   
  4108b9:	jge    0x4108f2
  4108bb:	sub    esp,DWORD PTR [ebx+0x38]
  4108be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108bf:	clc    
  4108c0:	add    BYTE PTR [edi-0x49b6a17e],al
  4108c6:	(bad)  
  4108c7:	call   0xb9f4:0xcbf8005f
  4108ce:	push   es
  4108cf:	int    0x4b
  4108d1:	adc    bl,BYTE PTR [ecx+0xe]
  4108d4:	loopne 0x4108a4
  4108d6:	cwde   
  4108d7:	sbb    DWORD PTR [ecx+ebp*2-0x29],esp
  4108db:	push   cs
  4108dc:	pop    ds
  4108dd:	inc    ecx
  4108de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108df:	mov    BYTE PTR [edx],dh
  4108e1:	xchg   ebp,eax
  4108e2:	jecxz  0x410882
  4108e4:	dec    ebx
  4108e5:	jmp    0x4108ac
  4108e7:	mov    ds:0xc1d5ed32,eax
  4108ec:	xchg   BYTE PTR [esi+0x50ab97e3],bl
  4108f2:	call   DWORD PTR [ecx-0x76]
  4108f5:	and    bh,BYTE PTR [ebx]
  4108f7:	inc    eax
  4108f8:	cmp    eax,0x3d461f22
  4108fd:	mov    esi,0xd2789444
  410902:	mov    ds:0x33fa6e37,eax
  410907:	push   0x34f0fb31
  41090c:	jg     0x4108a8
  41090e:	and    edx,0xffffffb2
  410911:	out    0x66,al
  410913:	addr16 dec edi
  410915:	retf   
  410916:	enter  0xac,0x97
  41091a:	or     eax,0x5200e5d
  41091f:	add    BYTE PTR [edx+0x6aaf89e6],dh
  410925:	addr16 mov ss,ecx
  410928:	pop    DWORD PTR [ebx]
  41092a:	or     al,0x40
  41092c:	lods   al,BYTE PTR ds:[esi]
  41092d:	xchg   esi,eax
  41092e:	out    dx,al
  41092f:	pop    es
  410930:	push   ebp
  410931:	(bad)  
  410932:	out    0x38,eax
  410934:	int3   
  410935:	xchg   ebp,eax
  410936:	or     edi,ebx
  410938:	cmp    ecx,DWORD PTR [eax-0x21b5b490]
  41093e:	add    eax,esi
  410940:	in     eax,dx
  410941:	sbb    eax,0xd1307ab1
  410946:	mov    esp,0x6ea17643
  41094b:	jo     0x4108e8
  41094d:	clc    
  41094e:	in     al,0xf4
  410950:	cmc    
  410951:	jnp    0x41091e
  410953:	add    al,0x34
  410955:	sar    DWORD PTR [eax-0x2fef7c84],cl
  41095b:	cdq    
  41095c:	iret   
  41095d:	jp     0x410973
  41095f:	add    al,0x92
  410961:	arpl   WORD PTR [edx+ecx*4],cx
  410964:	dec    esp
  410965:	sub    BYTE PTR [ecx],dh
  410967:	mov    esi,0x655274cd
  41096c:	push   edx
  41096d:	adc    DWORD PTR [esi],0xd2b256b
  410973:	xchg   ebp,eax
  410974:	sbb    BYTE PTR [ebp+0x324dc568],dh
  41097a:	push   cs
  41097b:	jg     0x4109de
  41097d:	nop
  41097e:	sub    eax,0x80d421d8
  410983:	pop    ebx
  410984:	jmp    0xa4972066
  410989:	push   esi
  41098a:	and    bh,BYTE PTR [eax-0x55bf2fa8]
  410990:	add    dl,BYTE PTR [ecx+edi*4+0x35b7954b]
  410997:	jg     0x4109f1
  410999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41099a:	adc    BYTE PTR [edx+ecx*2-0x75],cl
  41099e:	into   
  41099f:	pop    es
  4109a0:	in     eax,dx
  4109a1:	mov    ds:0xc803a89c,al
  4109a6:	rcr    BYTE PTR [ebp-0x5c],0x7a
  4109aa:	lock lock cmp BYTE PTR ds:[ebx+0x62],0xbf
  4109b1:	enter  0x6b77,0x2e
  4109b5:	test   BYTE PTR ds:0x24757a21,dh
  4109bb:	jbe    0x410a1b
  4109bd:	or     edi,DWORD PTR [ebp-0x4e90408a]
  4109c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109c4:	add    edi,DWORD PTR [edx+0x27]
  4109c7:	jecxz  0x410a3c
  4109c9:	sub    DWORD PTR [ecx],0x90b7b205
  4109cf:	leave  
  4109d0:	shr    BYTE PTR [esi+eax*1-0x43],cl
  4109d4:	das    
  4109d5:	in     eax,dx
  4109d6:	call   0xf6a7:0xf2cb6754
  4109dd:	out    0x80,eax
  4109df:	lock adc eax,0x9703a066
  4109e5:	sbb    cl,ch
  4109e7:	fmul   st(1),st
  4109e9:	add    ebx,DWORD PTR [esi+esi*8]
  4109ec:	nop
  4109ed:	ss aas 
  4109ef:	test   DWORD PTR [ebp-0x5631a099],ebp
  4109f5:	push   eax
  4109f6:	imul   ebx,DWORD PTR [ecx-0x25f0b56b],0x4a
  4109fd:	shr    BYTE PTR [edx],0x5
  410a00:	sub    eax,ebx
  410a02:	fidivr WORD PTR [edi-0x7f75fb01]
  410a08:	dec    ebx
  410a09:	fst    st(0)
  410a0b:	ror    BYTE PTR [ebp-0x789d1f4e],cl
  410a11:	daa    
  410a12:	in     al,dx
  410a13:	popf   
  410a14:	and    bl,0x7f
  410a17:	pop    edi
  410a18:	jmp    0xcf31:0x98c0e24b
  410a1f:	lock push 0xbd8c72e1
  410a25:	(bad)  
  410a26:	xchg   esp,eax
  410a27:	adc    eax,esi
  410a29:	xchg   DWORD PTR [ecx+ecx*2-0x3f],esi
  410a2d:	mov    BYTE PTR [eax+0x2cd12329],dl
  410a33:	ss sub bl,bh
  410a36:	pop    ds
  410a37:	aam    0x5
  410a39:	(bad)  
  410a3a:	cmp    al,0x18
  410a3c:	or     BYTE PTR [ecx],dl
  410a3e:	in     al,0xba
  410a40:	pop    edi
  410a41:	xor    eax,ebx
  410a43:	xchg   BYTE PTR ds:0x5b65db5a,dl
  410a49:	jo     0x410a8e
  410a4b:	jbe    0x4109d8
  410a4d:	xlat   BYTE PTR ds:[ebx]
  410a4e:	xor    al,0xa
  410a50:	leave  
  410a51:	shr    DWORD PTR ss:[edi],cl
  410a54:	out    dx,al
  410a55:	(bad)  
  410a57:	shl    DWORD PTR [ecx-0x411c1801],cl
  410a5d:	xchg   ebp,eax
  410a5e:	xlat   BYTE PTR ds:[ebx]
  410a5f:	xchg   BYTE PTR [ebx],bl
  410a61:	jge    0x4109e4
  410a63:	enter  0xc317,0xd7
  410a67:	pop    ecx
  410a68:	loope  0x4109ec
  410a6a:	leave  
  410a6b:	xchg   ebx,eax
  410a6c:	aaa    
  410a6d:	jae    0x410a7c
  410a6f:	push   esi
  410a70:	jns    0x410a45
  410a72:	dec    esi
  410a73:	mov    al,ds:0xa48cc586
  410a78:	inc    ebp
  410a79:	xor    edx,DWORD PTR [ecx]
  410a7b:	sub    eax,0x79e3777e
  410a80:	loopne 0x410a1d
  410a82:	sub    al,0x4b
  410a84:	pop    edx
  410a85:	sti    
  410a86:	fnstenv [eax+edi*2]
  410a89:	pop    ds
  410a8a:	int    0xa9
  410a8c:	lahf   
  410a8d:	pop    esi
  410a8e:	sub    ebx,esi
  410a90:	ror    BYTE PTR [esp+edi*1+0x6c413703],1
  410a97:	je     0x410a43
  410a99:	xchg   edi,eax
  410a9a:	adc    cl,ah
  410a9c:	mov    al,BYTE PTR [edi-0x66]
  410a9f:	sub    cl,cl
  410aa1:	push   edi
  410aa2:	jno    0x410afd
  410aa4:	xor    eax,0xbed6dd48
  410aa9:	in     al,dx
  410aaa:	fdiv   QWORD PTR [eax-0x13]
  410aad:	stos   DWORD PTR es:[edi],eax
  410aae:	jg     0x410b13
  410ab0:	and    DWORD PTR [bp+si],esi
  410ab3:	adc    BYTE PTR [si],dh
  410ab6:	addr16 popf 
  410ab8:	mov    dl,0x8d
  410aba:	into   
  410abb:	rol    DWORD PTR [eax],1
  410abd:	mov    ch,0xf4
  410abf:	fistp  QWORD PTR [esi+0x1]
  410ac2:	stos   BYTE PTR es:[edi],al
  410ac3:	push   esi
  410ac4:	xor    esp,esp
  410ac6:	sti    
  410ac7:	xchg   ebp,eax
  410ac8:	xchg   edx,eax
  410ac9:	xchg   esp,eax
  410aca:	nop
  410acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410acc:	pushw  ss
  410ace:	pusha  
  410acf:	sti    
  410ad0:	cmp    esi,DWORD PTR [ebp+0x70]
  410ad3:	dec    edx
  410ad4:	pop    eax
  410ad5:	pop    es
  410ad6:	jo     0x410ad3
  410ad8:	clc    
  410ad9:	scas   eax,DWORD PTR es:[edi]
  410ada:	mov    ebp,0xb02a421a
  410adf:	xchg   esp,eax
  410ae0:	inc    esp
  410ae1:	mov    dh,BYTE PTR [ebx-0x447833d8]
  410ae7:	nop
  410ae8:	and    DWORD PTR [eax-0x66],0x77
  410aec:	test   ch,bh
  410aee:	retf   
  410aef:	bound  edi,QWORD PTR [edi+0x1b5cb6f8]
  410af5:	inc    esp
  410af6:	in     al,0x18
  410af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af9:	cmc    
  410afa:	fld    QWORD PTR [edi-0x4fada730]
  410b00:	shl    BYTE PTR [edi-0x62a8122d],1
  410b06:	aam    0xc8
  410b08:	cmp    DWORD PTR [edi+0x5],ecx
  410b0b:	and    BYTE PTR [edx],dh
  410b0d:	mov    al,0x25
  410b0f:	push   ebp
  410b10:	xor    esp,DWORD PTR [edi]
  410b12:	dec    ebp
  410b13:	xchg   ebp,eax
  410b14:	sub    eax,0xe79169b3
  410b19:	not    ch
  410b1b:	or     esi,DWORD PTR [edx-0xe]
  410b1e:	leave  
  410b1f:	jl     0x410ab4
  410b21:	pop    ss
  410b22:	cld    
  410b23:	test   al,0xa7
  410b25:	adc    eax,0x695061c6
  410b2a:	fisttp DWORD PTR [esi-0x697ac6a0]
  410b30:	out    0x3a,al
  410b32:	mov    esi,0x197f2692
  410b37:	rcr    DWORD PTR [esi],0xfb
  410b3a:	xchg   esp,eax
  410b3b:	cmp    DWORD PTR [esi-0x35],ecx
  410b3e:	imul   esp,DWORD PTR [edx+eax*8-0x47],0x2bc70ea9
  410b46:	addr16 push ebx
  410b48:	push   ebp
  410b49:	neg    DWORD PTR [eax]
  410b4b:	pop    esp
  410b4c:	out    0x38,al
  410b4e:	cs inc ecx
  410b50:	add    dl,0x19
  410b53:	adc    BYTE PTR [edi+0x1c541f56],dh
  410b59:	scas   al,BYTE PTR es:[edi]
  410b5a:	(bad)  
  410b5b:	nop
  410b5c:	js     0x410b6b
  410b5e:	fstp   TBYTE PTR [edi]
  410b60:	push   0xfffffff7
  410b62:	push   0x9f76ec4d
  410b67:	xor    al,0x74
  410b69:	mov    ch,BYTE PTR [ebp+0x21]
  410b6c:	jmp    0x410bde
  410b6e:	into   
  410b6f:	ins    BYTE PTR es:[edi],dx
  410b70:	mov    ah,0x9f
  410b72:	dec    ebx
  410b73:	dec    ebp
  410b74:	adc    ch,dl
  410b76:	in     al,0x9
  410b78:	mov    eax,ebp
  410b7a:	adc    DWORD PTR [eax-0xe],ecx
  410b7d:	fidiv  DWORD PTR [eax-0x12fcddd8]
  410b83:	sbb    esi,edx
  410b85:	rol    BYTE PTR [edx+esi*4],1
  410b88:	fstp   st(1)
  410b8a:	fnstcw WORD PTR [ebp-0x3c20c409]
  410b90:	dec    edx
  410b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b92:	nop
  410b93:	scas   al,BYTE PTR es:[edi]
  410b94:	push   es
  410b95:	mov    dh,0x43
  410b97:	fwait
  410b98:	retf   0xafe0
  410b9b:	jp     0x410c06
  410b9d:	cmp    al,0x41
  410b9f:	fstp   TBYTE PTR [eax+edx*4]
  410ba2:	ja     0x410b7f
  410ba4:	or     DWORD PTR [ecx],edi
  410ba6:	sub    ebp,edx
  410ba8:	test   BYTE PTR [esi+0xfd423c9],al
  410bae:	fsubrp st(1),st
  410bb0:	jge    0x410bf7
  410bb2:	xor    eax,0xb65388c8
  410bb7:	xchg   esi,eax
  410bb8:	pushf  
  410bb9:	ins    BYTE PTR es:[edi],dx
  410bba:	int3   
  410bbb:	push   0x7e619746
  410bc0:	jp     0x410bc7
  410bc2:	call   0x8a41:0x186ff860
  410bc9:	xor    eax,0x83bcb26b
  410bce:	(bad)  
  410bcf:	loope  0x410c03
  410bd1:	les    edi,FWORD PTR [ebp+0x23]
  410bd4:	das    
  410bd5:	(bad)  
  410bd6:	mov    ?,esi
  410bd8:	leave  
  410bd9:	adc    BYTE PTR [eax+esi*8+0x76],dl
  410bdd:	je     0x410c0e
  410bdf:	hlt    
  410be0:	pop    ss
  410be1:	push   eax
  410be2:	clc    
  410be3:	test   DWORD PTR [edx+0x6f],eax
  410be6:	aas    
  410be7:	iret   
  410be8:	mov    eax,0xc640a251
  410bed:	jecxz  0x410b7b
  410bef:	or     esp,DWORD PTR [edx-0x6420ddff]
  410bf5:	sub    bh,ah
  410bf7:	and    BYTE PTR [ecx],bl
  410bf9:	mov    dl,0x6f
  410bfb:	cmp    al,0xcc
  410bfd:	cmp    eax,0x21c83594
  410c02:	(bad)  
  410c03:	mov    ebx,0x3b51fa97
  410c08:	sbb    DWORD PTR [eax+edx*8-0x5d46e6aa],esi
  410c0f:	mov    WORD PTR [ecx+eiz*1],?
  410c12:	imul   ebx,DWORD PTR [esi],0xeb607a91
  410c18:	inc    edx
  410c19:	cmp    BYTE PTR [ebp-0x288abf3e],ch
  410c1f:	push   es
  410c20:	mov    ebp,0x17a83bd9
  410c25:	nop
  410c26:	dec    esp
  410c27:	cmp    eax,0x28f50a53
  410c2c:	sub    eax,0x2e5e8de
  410c31:	jle    0x410c9d
  410c33:	inc    ebx
  410c34:	scas   eax,DWORD PTR es:[edi]
  410c35:	dec    ebx
  410c36:	out    0x24,al
  410c38:	stos   BYTE PTR es:[edi],al
  410c39:	inc    esp
  410c3a:	pop    ebx
  410c3b:	je     0x410c53
  410c3d:	fsubp  st(5),st
  410c3f:	xor    esi,eax
  410c41:	push   ecx
  410c42:	mov    ah,0x86
  410c44:	out    0xa4,al
  410c46:	shr    DWORD PTR [ecx-0x5ab98714],1
  410c4c:	retf   
  410c4d:	inc    ebp
  410c4e:	xchg   esi,eax
  410c4f:	mov    dl,0x64
  410c51:	pop    ds
  410c52:	repnz and ecx,ebp
  410c55:	adc    dl,al
  410c57:	(bad)  
  410c58:	push   ebx
  410c59:	nop
  410c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c5b:	adc    BYTE PTR [ebx],0x4
  410c5e:	xor    eax,0x2bea5aeb
  410c63:	lock hlt 
  410c65:	jno    0x410cdc
  410c67:	aam    0x8b
  410c69:	jne    0x410c7c
  410c6b:	(bad)  
  410c6c:	push   0xc33d58d4
  410c71:	mov    esp,0x500e6328
  410c76:	outs   dx,DWORD PTR ds:[esi]
  410c77:	arpl   WORD PTR [eax],cx
  410c79:	mov    eax,ds:0xd92f37d7
  410c7e:	(bad)  
  410c80:	sahf   
  410c81:	mov    edx,0x60aaaae9
  410c86:	js     0x410c9e
  410c88:	adc    BYTE PTR [esi],bl
  410c8a:	lock mov ds:0x22e50201,al
  410c90:	pop    ds
  410c91:	push   eax
  410c92:	fisubr DWORD PTR [edi]
  410c94:	dec    ebx
  410c95:	mov    cl,0xe5
  410c97:	jo     0x410d0e
  410c99:	dec    esp
  410c9a:	mov    WORD PTR [edx],es
  410c9c:	mov    cl,0xd5
  410c9e:	cmc    
  410c9f:	enter  0x3ba7,0x44
  410ca3:	add    al,0x86
  410ca5:	fs inc ebp
  410ca7:	and    BYTE PTR ds:0xcd5e79f3,0xf1
  410cae:	lea    edx,[edx]
  410cb0:	and    DWORD PTR [esi],edi
  410cb2:	jne    0x410c6e
  410cb4:	jnp    0x410cfe
  410cb6:	sti    
  410cb7:	xchg   ebx,eax
  410cb8:	clc    
  410cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cba:	sbb    bl,ah
  410cbc:	into   
  410cbd:	repz push cs
  410cbf:	cmp    eax,0x47829702
  410cc4:	ret    0x3acc
  410cc7:	xchg   DWORD PTR [eax],edi
  410cc9:	xor    BYTE PTR [ecx+0x72],ah
  410ccc:	or     BYTE PTR [eax],bl
  410cce:	leave  
  410ccf:	mov    esi,DWORD PTR fs:[edx-0x8]
  410cd3:	ins    DWORD PTR es:[edi],dx
  410cd4:	es xchg edx,eax
  410cd6:	jae    0x410cff
  410cd8:	dec    ebx
  410cd9:	leave  
  410cda:	and    al,0x14
  410cdc:	(bad)  
  410cdd:	and    eax,0x13adc0ca
  410ce2:	loopne 0x410d01
  410ce4:	(bad)  
  410ce5:	mov    edi,0x760d4be4
  410cea:	pop    ds
  410ceb:	jnp    0x410cc9
  410ced:	int    0x46
  410cef:	je     0x410cd5
  410cf1:	push   0x8a2c9cec
  410cf6:	xlat   BYTE PTR ds:[ebx]
  410cf7:	div    BYTE PTR [ecx-0x50d34598]
  410cfd:	or     eax,0xccee828a
  410d02:	popf   
  410d03:	ja     0x410cbc
  410d05:	das    
  410d06:	cmc    
  410d07:	xor    ebp,ecx
  410d09:	mov    dl,0xb1
  410d0b:	cli    
  410d0c:	push   edx
  410d0d:	out    dx,al
  410d0e:	retf   0x93b3
  410d11:	ror    DWORD PTR [ebx-0x7ef6272c],0x61
  410d18:	and    ch,al
  410d1a:	fs jle 0x410d77
  410d1d:	out    0xb0,al
  410d1f:	mov    ds,ebx
  410d21:	mov    ds:0xf56acb37,al
  410d26:	and    al,0xe6
  410d28:	pop    ebx
  410d29:	jmp    0x410d4f
  410d2b:	xor    al,0xc5
  410d2d:	jge    0x410d9a
  410d2f:	jne    0x410cdb
  410d31:	jb     0x410d7a
  410d33:	xchg   DWORD PTR [edi-0x79],esi
  410d36:	arpl   WORD PTR [edi-0x53],sp
  410d39:	jae    0x410da8
  410d3b:	mov    bh,0x98
  410d3d:	inc    ebp
  410d3e:	adc    cl,0xdd
  410d41:	cmp    al,BYTE PTR [ecx]
  410d43:	xchg   esi,eax
  410d44:	test   BYTE PTR [ebx-0x50],al
  410d47:	(bad)  
  410d48:	retf   0x541b
  410d4b:	addr16 call 0xef08:0xedfdeb8f
  410d53:	shl    DWORD PTR [ebx+0x14],1
  410d56:	add    DWORD PTR [ebx],0xffffffaa
  410d59:	mov    bl,0x39
  410d5b:	in     eax,dx
  410d5c:	dec    ecx
  410d5d:	ja     0x410dc2
  410d5f:	push   eax
  410d60:	cwde   
  410d61:	cld    
  410d62:	fbstp  TBYTE PTR [edx-0x5267254c]
  410d68:	loop   0x410d7c
  410d6a:	sub    esp,DWORD PTR [ebx+0x17ed989a]
  410d70:	enter  0x3972,0x61
  410d74:	xor    al,0xb0
  410d76:	dec    esp
  410d77:	xchg   ebx,eax
  410d78:	hlt    
  410d79:	lahf   
  410d7a:	ds leave 
  410d7c:	jae    0x410dab
  410d7e:	stos   BYTE PTR es:[edi],al
  410d7f:	xor    esp,DWORD PTR [ecx-0x31e16a6c]
  410d85:	push   edx
  410d86:	push   0xffffff98
  410d88:	(bad)  
  410d89:	jae    0x410dad
  410d8b:	xor    DWORD PTR [ecx+0x7],ecx
  410d8e:	xchg   ecx,eax
  410d8f:	jge    0x410d6e
  410d91:	test   al,0x30
  410d93:	sub    BYTE PTR [esi],dl
  410d95:	mov    ebx,gs
  410d97:	add    BYTE PTR [edx-0x46250dab],dl
  410d9d:	pop    esp
  410d9e:	or     edi,edx
  410da0:	mov    edi,0xb232930a
  410da5:	gs push es
  410da7:	ja     0x410d39
  410da9:	jmp    0x1ed758ba
  410dae:	ins    BYTE PTR es:[edi],dx
  410daf:	mov    dl,0xaf
  410db1:	into   
  410db2:	in     al,0x33
  410db4:	scas   al,BYTE PTR es:[edi]
  410db5:	inc    ebx
  410db6:	mov    al,ds:0x1c43871d
  410dbb:	dec    ecx
  410dbc:	stos   BYTE PTR es:[edi],al
  410dbd:	cmp    eax,DWORD PTR [edx]
  410dbf:	sbb    eax,0x7fd9967e
  410dc4:	jl     0x410d6a
  410dc6:	xchg   ebx,eax
  410dc7:	pop    ds
  410dc8:	mov    ebp,0xdf351a32
  410dcd:	cwde   
  410dce:	mov    bl,0x69
  410dd0:	jnp    0x410df6
  410dd2:	(bad)  
  410dd3:	jbe    0x410d82
  410dd5:	pop    esi
  410dd6:	jb     0x410e44
  410dd8:	jo     0x410e00
  410dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ddb:	call   0x956e61f4
  410de0:	lahf   
  410de1:	mov    ch,0xdc
  410de3:	sbb    eax,0x1facfb0e
  410de8:	fisubr WORD PTR [ecx-0x43]
  410deb:	jg     0x410e62
  410ded:	push   ss
  410dee:	ins    DWORD PTR es:[edi],dx
  410def:	xchg   esi,eax
  410df0:	xor    DWORD PTR [esi],0x51f4455c
  410df6:	pop    esp
  410df7:	jb     0x410d85
  410df9:	dec    esp
  410dfa:	lods   al,BYTE PTR ds:[esi]
  410dfb:	in     al,0xff
  410dfd:	cmovns edi,DWORD PTR [edx+0x5d]
  410e01:	mov    bh,0x6c
  410e03:	lea    ebp,[ecx]
  410e05:	adc    BYTE PTR ds:0x4c69b962,cl
  410e0b:	sbb    ecx,edx
  410e0d:	popa   
  410e0e:	push   ecx
  410e0f:	cmp    ch,BYTE PTR [ebx-0x20]
  410e12:	xchg   ecx,eax
  410e13:	sbb    al,0x77
  410e15:	retf   0x3388
  410e18:	push   cs
  410e19:	cld    
  410e1a:	dec    ebx
  410e1b:	and    DWORD PTR ds:0x79ea4ba4,eax
  410e21:	cmp    eax,0x142c68b4
  410e26:	pop    ds
  410e27:	popa   
  410e28:	mov    ds:0x5bdce85b,al
  410e2d:	dec    esp
  410e2e:	mov    esi,0xf6b84729
  410e33:	pop    edi
  410e34:	xchg   DWORD PTR [ebp+0x44],ebp
  410e37:	pop    ss
  410e38:	fisub  DWORD PTR [esi+ebp*8]
  410e3b:	mov    eax,ds:0x8cd79c5c
  410e40:	fs jmp 0xfe7b:0x53341707
  410e48:	pushf  
  410e49:	jbe    0x410e9e
  410e4b:	std    
  410e4c:	mov    dh,0xe5
  410e4e:	jns    0x410e1d
  410e50:	test   DWORD PTR [edx+edx*4-0x60],edi
  410e54:	enter  0x5407,0xa3
  410e58:	fist   WORD PTR [ebp+0x213581d3]
  410e5e:	test   DWORD PTR [ebp+0x1f],0xdd8e597b
  410e65:	add    al,0x7a
  410e67:	adc    ebx,DWORD PTR [ebx-0x9]
  410e6a:	cmp    cl,cl
  410e6c:	enter  0x5e7b,0xb1
  410e70:	fwait
  410e71:	pop    ss
  410e72:	cwde   
  410e73:	sub    eax,0xebe65273
  410e78:	mov    ds:0xdb413e0a,al
  410e7d:	pop    edi
  410e7e:	arpl   WORD PTR [ecx],di
  410e80:	je     0x410ec9
  410e82:	(bad)
  410e86:	sub    BYTE PTR [eax],dl
  410e88:	fadd   st(0),st
  410e8a:	loope  0x410e62
  410e8c:	pop    esp
  410e8d:	or     bl,ch
  410e8f:	cli    
  410e90:	mov    al,ds:0x61922be9
  410e95:	cmp    al,0xaa
  410e97:	fisttp WORD PTR [edi]
  410e99:	test   DWORD PTR [eax-0x19a8c444],ebx
  410e9f:	scas   eax,DWORD PTR es:[edi]
  410ea0:	js     0x410ebb
  410ea2:	sahf   
  410ea3:	cmp    ch,BYTE PTR [ecx-0xe042364]
  410ea9:	dec    eax
  410eaa:	in     al,0xf2
  410eac:	sti    
  410ead:	push   es
  410eae:	fsubr  st,st(2)
  410eb0:	cmp    edi,DWORD PTR ds:0x1342ae59
  410eb6:	call   0x46f5:0xf82a17ad
  410ebd:	adc    bl,BYTE PTR [eax-0x6f1e5491]
  410ec3:	cmp    DWORD PTR [ebp+0x520c7241],ebx
  410ec9:	push   ebx
  410eca:	dec    ebp
  410ecb:	in     al,dx
  410ecc:	leave  
  410ecd:	push   esi
  410ece:	(bad)  ds:0x53677da
  410ed4:	xchg   edi,eax
  410ed5:	xor    BYTE PTR [edx+0x6d],0x65
  410ed9:	adc    bl,cl
  410edb:	mov    BYTE PTR [ebx-0xce83a13],ah
  410ee1:	mov    ebx,0x2efb2c84
  410ee6:	(bad)  
  410ee7:	xchg   esp,eax
  410ee8:	sbb    al,0x8a
  410eea:	adc    eax,DWORD PTR [ebp+0x6451b748]
  410ef0:	xchg   ecx,eax
  410ef1:	shl    DWORD PTR [eax-0x3ac54a1b],1
  410ef7:	push   ss
  410ef8:	jle    0x410ee8
  410efa:	add    ebx,DWORD PTR [ecx+0x57]
  410efd:	xor    DWORD PTR [ebx],esp
  410eff:	(bad)
  410f03:	pop    esp
  410f04:	frstor [edi+0x2]
  410f07:	loope  0x410ec8
  410f09:	push   edi
  410f0a:	xchg   DWORD PTR [ebx-0x74],ebx
  410f0d:	out    dx,eax
  410f0e:	aas    
  410f0f:	push   0xffffff9e
  410f11:	jmp    0x410f31
  410f13:	jmp    0x410ec3
  410f15:	scas   eax,DWORD PTR es:[edi]
  410f16:	add    al,al
  410f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f19:	in     eax,dx
  410f1a:	pop    edx
  410f1b:	sbb    al,BYTE PTR [ebx-0xc9f1726]
  410f21:	retf   
  410f22:	in     al,0xfe
  410f24:	mov    edx,0x64f6d4b4
  410f29:	xchg   BYTE PTR [edi-0x44],bh
  410f2c:	xor    DWORD PTR [ebp+0x3e],ebp
  410f2f:	cmp    ch,bl
  410f31:	jg     0x410f58
  410f33:	add    DWORD PTR [eax-0x50],ecx
  410f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f37:	jle    0x410f3f
  410f39:	or     ebp,DWORD PTR [ebx-0x19]
  410f3c:	inc    ebx
  410f3d:	test   BYTE PTR [ebp-0x23],dl
  410f40:	push   ebp
  410f41:	cmc    
  410f42:	aam    0x44
  410f44:	jno    0x410ec7
  410f46:	mov    ah,BYTE PTR [ebp+0x1ec0a05]
  410f4c:	call   0xdee2918f
  410f51:	divps  xmm6,xmm6
  410f54:	repnz fdiv QWORD PTR [ebp+0x77]
  410f58:	pop    edx
  410f59:	or     al,0xc7
  410f5b:	mov    dl,0xcc
  410f5d:	xor    BYTE PTR [edi-0x3d43d1dc],ah
  410f63:	and    cl,BYTE PTR [eax-0x348cbced]
  410f69:	jb     0x410f38
  410f6b:	ds nop
  410f6d:	je     0x410fea
  410f6f:	(bad)  
  410f71:	retf   
  410f72:	and    BYTE PTR [eax-0x6d45489],0x65
  410f79:	sbb    BYTE PTR [ebp-0x58],dl
  410f7c:	inc    eax
  410f7d:	and    ebp,esp
  410f7f:	inc    eax
  410f80:	mov    cl,0x60
  410f82:	push   esi
  410f83:	fisttp QWORD PTR [esi]
  410f85:	out    dx,al
  410f86:	dec    edx
  410f87:	jl     0x410fe0
  410f89:	cs leave 
  410f8b:	add    DWORD PTR [eax-0x43],eax
  410f8e:	rcr    esp,1
  410f90:	inc    edi
  410f91:	push   0x7cbe04a3
  410f96:	sbb    BYTE PTR [edi+0x21740b2a],0xf1
  410f9d:	sub    al,0x8b
  410f9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fa0:	adc    BYTE PTR [eax],bh
  410fa2:	xchg   ebp,eax
  410fa3:	jae    0x410f9c
  410fa5:	sub    al,0x87
  410fa7:	sub    al,0x8b
  410fa9:	faddp  st(7),st
  410fab:	sbb    bh,BYTE PTR [edi]
  410fad:	mov    eax,ds:0xda0f9fbb
  410fb2:	outs   dx,DWORD PTR ds:[esi]
  410fb3:	test   dh,ch
  410fb5:	inc    ebp
  410fb6:	sbb    BYTE PTR [esi+eax*2-0x56c4e496],cl
  410fbd:	(bad)  
  410fbe:	mov    bl,0x34
  410fc0:	in     eax,dx
  410fc1:	sbb    esp,0xfffffff4
  410fc4:	(bad)  
  410fc6:	and    esp,DWORD PTR [edx+eax*2-0x69]
  410fca:	push   es
  410fcb:	shl    DWORD PTR [eax+0x23],0x50
  410fcf:	sub    dh,BYTE PTR [edi+ecx*2-0x3c3f9399]
  410fd6:	inc    ebx
  410fd7:	and    BYTE PTR [ebp-0x27],cl
  410fda:	mov    dl,0x7d
  410fdc:	and    eax,0xf468b499
  410fe1:	dec    edx
  410fe2:	pushf  
  410fe3:	adc    ebp,ebx
  410fe5:	imul   edi,DWORD PTR [edx+0x0],0xbfec38e2
  410fec:	fmul   QWORD PTR [edi]
  410fee:	xchg   ebx,eax
  410fef:	lds    eax,FWORD PTR ds:0xc22b503b
  410ff5:	addps  xmm2,XMMWORD PTR [ebp+0x2786c099]
  410ffc:	pop    esi
  410ffd:	dec    ebp
  410ffe:	mov    dh,0x51
  411000:	bound  ecx,QWORD PTR [edi-0x10]
  411003:	adc    BYTE PTR [edi-0x69f937],ah
  411009:	mov    ecx,0xee6b86b3
  41100e:	xor    al,0xa0
  411010:	sub    al,0xd4
  411012:	mov    dl,0x46
  411014:	mov    ch,0x26
  411016:	sub    esp,ebp
  411018:	push   ds
  411019:	mov    ecx,0xa4cb99dc
  41101e:	bound  ecx,QWORD PTR ds:0xf41048c3
  411024:	mov    edi,0xc8492657
  411029:	xor    esp,DWORD PTR [edx-0x17]
  41102c:	loop   0x410fbd
  41102e:	sbb    ch,BYTE PTR [edi]
  411030:	push   es
  411031:	dec    ebx
  411032:	cs aam 0x13
  411035:	repnz push edi
  411037:	push   edx
  411038:	xchg   edx,eax
  411039:	add    eax,0x51919580
  41103e:	fldcw  WORD PTR [edi]
  411040:	retf   0x94c5
  411043:	nop
  411044:	mov    BYTE PTR [edi+ebp*8],dh
  411047:	les    ecx,FWORD PTR [edi+0x47]
  41104a:	sbb    DWORD PTR [ecx+0x50],ecx
  41104d:	pusha  
  41104e:	jb     0x411044
  411050:	mov    dl,0x6e
  411052:	imul   eax,eax,0xffffff90
  411055:	fwait
  411056:	xor    al,0x5e
  411058:	cwde   
  411059:	xchg   esp,eax
  41105a:	dec    esp
  41105b:	or     al,0x95
  41105d:	or     eax,0x42f8dbb9
  411062:	jmp    0x1b35f916
  411067:	inc    edx
  411068:	dec    ebp
  411069:	jmp    FWORD PTR [edi-0x35a23b3c]
  41106f:	cmp    eax,0x81385c82
  411074:	or     cl,ah
  411076:	mov    bh,BYTE PTR ds:0xf35bb357
  41107c:	adc    al,0x4e
  41107e:	xchg   ebp,eax
  41107f:	xchg   edx,eax
  411080:	shl    DWORD PTR [ebx],1
  411082:	sub    eax,0xe3a12a2c
  411087:	mov    eax,0xd66ceb80
  41108c:	xchg   ebx,eax
  41108d:	mov    ds:0xab3ed79b,eax
  411092:	push   0x46
  411094:	sub    ecx,DWORD PTR es:[ebp+0x127a520b]
  41109b:	jp     0x4110fc
  41109d:	arpl   dx,cx
  41109f:	jmp    0x19989dd9
  4110a4:	jbe    0x411063
  4110a6:	int3   
  4110a7:	sub    cl,BYTE PTR ds:0x2a4b9d55
  4110ad:	dec    edi
  4110ae:	or     bl,BYTE PTR [eax]
  4110b0:	dec    ecx
  4110b1:	push   ss
  4110b2:	aam    0x8b
  4110b4:	pop    edx
  4110b5:	sbb    BYTE PTR [eax+0x47928e90],ch
  4110bb:	xchg   BYTE PTR [edx+ecx*2-0x17],ah
  4110bf:	stos   BYTE PTR es:[edi],al
  4110c0:	inc    ebp
  4110c1:	popf   
  4110c2:	sbb    dh,BYTE PTR [edi+0x15]
  4110c5:	mov    esp,DWORD PTR [edi-0x22]
  4110c8:	nop
  4110c9:	stc    
  4110ca:	(bad)  
  4110cb:	in     eax,0xc1
  4110cd:	add    ebp,esi
  4110cf:	mov    ds:0xd33c2ce4,al
  4110d4:	je     0x411115
  4110d6:	pop    ebp
  4110d7:	cmc    
  4110d8:	lock push es
  4110da:	add    ch,al
  4110dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110dd:	add    DWORD PTR [eax+0x61],ecx
  4110e0:	xchg   ebp,eax
  4110e1:	shr    bl,1
  4110e3:	and    al,0x62
  4110e5:	(bad)  
  4110e6:	test   eax,0xd37eac36
  4110eb:	fnstsw WORD PTR ds:0x5944f29
  4110f1:	cld    
  4110f2:	(bad)
  4110f6:	mov    ecx,0x9e25ead6
  4110fb:	and    dh,bl
  4110fd:	ins    BYTE PTR es:[edi],dx
  4110fe:	int3   
  4110ff:	imul   edx,DWORD PTR [eax-0x6c],0x58
  411103:	dec    esi
  411104:	aas    
  411105:	lods   eax,DWORD PTR ds:[esi]
  411106:	push   ss
  411107:	and    eax,0xf7632c82
  41110c:	inc    edx
  41110d:	cmp    BYTE PTR [ecx+0x3f],0x81
  411111:	in     eax,0xbb
  411113:	cwde   
  411114:	setge  BYTE PTR [edi+edx*8]
  411118:	sub    eax,0x2e134cd1
  41111d:	(bad)  
  41111e:	push   eax
  41111f:	xchg   ebp,eax
  411120:	jg     0x41114a
  411122:	popa   
  411123:	mov    bl,0x40
  411125:	stos   DWORD PTR es:[edi],eax
  411126:	xchg   esp,eax
  411127:	xchg   ebp,eax
  411128:	outs   dx,BYTE PTR ds:[esi]
  411129:	add    DWORD PTR [edx+0x40],ebx
  41112c:	scas   al,BYTE PTR es:[edi]
  41112d:	adc    DWORD PTR [ebx],0xffffff9a
  411130:	lea    ecx,[esi-0x7]
  411133:	in     eax,0x3b
  411135:	rcl    DWORD PTR [edx],cl
  411137:	adc    al,0xf5
  411139:	ret    0x3702
  41113c:	js     0x411186
  41113e:	pop    ecx
  41113f:	test   edi,0xccfe5c15
  411145:	or     dh,bl
  411147:	in     eax,0x4b
  411149:	xchg   ecx,eax
  41114a:	frstor [esi+0x1bd43640]
  411150:	xchg   edx,eax
  411151:	ins    BYTE PTR es:[edi],dx
  411152:	popf   
  411153:	sahf   
  411154:	dec    ecx
  411155:	mov    edx,0xe86d55ec
  41115a:	or     al,0x99
  41115c:	and    BYTE PTR [edx-0x25],0x39
  411160:	jge    0x411179
  411162:	pop    esp
  411163:	cdq    
  411164:	sbb    ecx,DWORD PTR [ebx-0x592ae23]
  41116a:	mov    ebp,0xf53affbd
  41116f:	sbb    esp,0xffffff97
  411172:	push   esp
  411173:	shld   DWORD PTR [edx],ecx,cl
  411176:	sub    al,ch
  411178:	lods   al,BYTE PTR ds:[esi]
  411179:	mov    DWORD PTR [ebp-0x44],esi
  41117c:	adc    ebx,DWORD PTR [edi-0x65468b93]
  411182:	lods   eax,DWORD PTR ds:[esi]
  411183:	(bad)  
  411185:	push   ds
  411186:	ins    DWORD PTR es:[edi],dx
  411187:	(bad)  
  411188:	and    BYTE PTR [edi],al
  41118a:	push   eax
  41118b:	addr16 pop ebp
  41118d:	out    dx,eax
  41118e:	inc    eax
  41118f:	inc    eax
  411190:	fnstenv [eax-0x3963630c]
  411196:	sbb    BYTE PTR [edi-0x26412598],ch
  41119c:	scas   eax,DWORD PTR es:[edi]
  41119d:	add    BYTE PTR [edi],bl
  41119f:	test   BYTE PTR [edx-0xf10be52],cl
  4111a5:	jg     0x4111cf
  4111a7:	add    ebx,DWORD PTR [ecx-0x40]
  4111aa:	and    al,0xcc
  4111ac:	inc    esp
  4111ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111af:	jmp    0xc4359389
  4111b4:	pop    ds
  4111b5:	add    DWORD PTR [esi+ebp*8],esi
  4111b8:	sahf   
  4111b9:	jle    0x4111ee
  4111bb:	mov    al,0xe6
  4111bd:	test   eax,0x71829737
  4111c2:	xchg   esi,eax
  4111c3:	xor    DWORD PTR [esi],eax
  4111c5:	push   0x3f
  4111c7:	in     al,0xe0
  4111c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111ca:	stos   DWORD PTR es:[edi],eax
  4111cb:	jnp    0x4111e1
  4111cd:	sar    DWORD PTR [esi+0x6466a54e],1
  4111d3:	mov    al,ds:0x348304bd
  4111d8:	adc    ecx,DWORD PTR [ecx]
  4111da:	(bad)  
  4111db:	gs jae 0x4111fe
  4111de:	dec    edi
  4111df:	(bad)  
  4111e0:	js     0x41119a
  4111e2:	jns    0x41117d
  4111e4:	cmp    edx,edi
  4111e6:	pop    ds
  4111e7:	lds    ebp,FWORD PTR [esi+0x6cc36b67]
  4111ed:	lahf   
  4111ee:	and    BYTE PTR [eax+ebp*4+0x14],0x20
  4111f3:	je     0x41118a
  4111f5:	mov    bh,0x59
  4111f7:	mov    ebx,0x602f32dd
  4111fc:	dec    esi
  4111fd:	push   ss
  4111fe:	rcl    DWORD PTR [edx],1
  411200:	stos   BYTE PTR es:[edi],al
  411201:	mov    ecx,0x86a2a462
  411206:	add    ecx,DWORD PTR [edi-0x7d5dfb35]
  41120c:	xchg   edx,eax
  41120d:	(bad)  
  41120e:	loop   0x411252
  411210:	or     dh,BYTE PTR [edx+0x4e9e4949]
  411216:	sbb    DWORD PTR [edx-0x190f2f7d],ecx
  41121c:	leave  
  41121d:	ss pop ss
  41121f:	jmp    0x411297
  411221:	mov    edi,0xeeb84828
  411226:	aaa    
  411227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411228:	dec    ecx
  411229:	es (bad) 
  41122b:	aas    
  41122c:	mov    esi,eax
  41122e:	xor    eax,0x6df63f31
  411233:	push   ds
  411234:	(bad)  
  411236:	inc    eax
  411237:	in     eax,dx
  411238:	mov    ebp,0x14ee3859
  41123d:	sub    eax,0xf2dcd9f4
  411242:	xor    dh,BYTE PTR [edi+0x36fd0917]
  411248:	(bad)  
  411249:	and    eax,0xb36e21e5
  41124e:	shl    ch,1
  411250:	call   0x736eec7f
  411255:	push   edx
  411256:	fiadd  DWORD PTR [eax+0xf]
  411259:	icebp  
  41125a:	xchg   DWORD PTR [eax+eiz*1],ebp
  41125d:	test   al,0x40
  41125f:	xchg   DWORD PTR [ecx+0x6d],edi
  411262:	icebp  
  411263:	mov    ds,ecx
  411265:	dec    ecx
  411266:	xchg   BYTE PTR [ebp+eax*4-0x3],ah
  41126a:	test   BYTE PTR [edx-0x22],ah
  41126d:	cmp    ebp,DWORD PTR [edi+0x6]
  411270:	int    0x10
  411272:	lods   al,BYTE PTR ds:[esi]
  411273:	add    ah,ch
  411275:	mov    di,0xce45
  411279:	(bad)  
  41127a:	dec    DWORD PTR [esi-0x43fd3244]
  411280:	inc    ecx
  411281:	stos   BYTE PTR es:[edi],al
  411282:	jb     0x411251
  411284:	pop    esp
  411285:	jp     0x4112e4
  411287:	gs jp  0x411303
  41128a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41128b:	stc    
  41128c:	les    eax,FWORD PTR [ebx+0x7c]
  41128f:	jecxz  0x41123e
  411291:	retf   0x1213
  411294:	fwait
  411295:	jmp    0xf2df99e2
  41129a:	sbb    BYTE PTR ds:0xc3577ea8,dh
  4112a0:	sbb    BYTE PTR [eax-0xc],0x3b
  4112a4:	into   
  4112a5:	mov    DWORD PTR [ecx+eiz*4+0x4a],ecx
  4112a9:	in     al,0x1b
  4112ab:	dec    ecx
  4112ac:	jl     0x4112ef
  4112ae:	push   ss
  4112af:	hlt    
  4112b0:	mov    esp,0x76ed5fcb
  4112b5:	jecxz  0x4112fc
  4112b7:	stc    
  4112b8:	mov    dl,0xc4
  4112ba:	sub    BYTE PTR [ebx],0x4c
  4112bd:	push   ss
  4112be:	cmp    DWORD PTR [ebx+0x101048a7],0xffffffe0
  4112c5:	int3   
  4112c6:	pop    eax
  4112c7:	(bad)  
  4112c8:	icebp  
  4112c9:	(bad)  
  4112ca:	pop    esi
  4112cb:	inc    ecx
  4112cc:	imul   ebx,DWORD PTR [edi+0x7d],0xed2042bd
  4112d3:	test   bl,ch
  4112d5:	jbe    0x4112f1
  4112d7:	(bad)  
  4112d8:	push   ebp
  4112d9:	xor    al,0xf0
  4112db:	fisttp WORD PTR [ebx-0x4e]
  4112de:	push   edx
  4112df:	jmp    0x4112bf
  4112e1:	shl    DWORD PTR [esi+0x20],0x48
  4112e5:	sar    BYTE PTR [ecx],1
  4112e7:	scas   eax,DWORD PTR es:[edi]
  4112e8:	add    eax,0xbfbd83d6
  4112ed:	pop    ecx
  4112ee:	xchg   ebx,eax
  4112ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112f0:	and    bh,BYTE PTR [esi]
  4112f2:	repz aas 
  4112f4:	push   edx
  4112f5:	and    al,0x76
  4112f7:	jns    0x4112c8
  4112f9:	sub    eax,0xe2298268
  4112fe:	fild   WORD PTR [eax+0x12c2a34c]
  411304:	pushf  
  411305:	xor    BYTE PTR [eax],ch
  411307:	add    eax,0x8e838308
  41130c:	daa    
  41130d:	fcom   st(5)
  41130f:	jmp    0x411345
  411311:	fwait
  411312:	sub    BYTE PTR [esi-0x5cf01979],0xa9
  411319:	arpl   ax,bx
  41131b:	add    ch,BYTE PTR [edi+0x1b]
  41131e:	bound  eax,QWORD PTR [edx+0x27]
  411321:	je     0x4112a5
  411323:	out    dx,eax
  411324:	in     eax,dx
  411325:	add    esi,ebx
  411327:	test   al,0xda
  411329:	enter  0xa817,0xf
  41132d:	cli    
  41132e:	(bad)  
  41132f:	in     eax,dx
  411330:	(bad)  
  411331:	iret   
  411332:	jne    0x4112e1
  411334:	adc    DWORD PTR [ebx],0xffffffcd
  411337:	in     al,0x90
  411339:	jmp    0x6e474657
  41133e:	jo     0x4112ed
  411340:	xor    eax,DWORD PTR [edx+0x30]
  411343:	shl    edx,0x76
  411346:	push   esi
  411347:	inc    esp
  411348:	cmp    cl,BYTE PTR [eax+ebp*8+0x5fe2103]
  41134f:	arpl   WORD PTR [ecx-0x75971832],di
  411355:	addr16 in al,0x60
  411358:	popa   
  411359:	xchg   ebx,eax
  41135a:	ins    BYTE PTR es:[edi],dx
  41135b:	cmp    dl,BYTE PTR [edx+0x26766f0d]
  411361:	mov    cl,0x9c
  411363:	inc    ecx
  411364:	push   cs
  411365:	push   ds
  411366:	and    al,0x66
  411368:	pop    eax
  411369:	sub    BYTE PTR [ecx],bl
  41136b:	dec    esi
  41136c:	pop    ebx
  41136d:	jle    0x411399
  41136f:	popf   
  411370:	ret    0xaae1
  411373:	scas   al,BYTE PTR es:[edi]
  411374:	je     0x411337
  411376:	mov    dh,0x99
  411378:	inc    esp
  411379:	mov    dh,BYTE PTR [esi+0x3e]
  41137c:	push   ebp
  41137d:	sub    dh,dl
  41137f:	adc    BYTE PTR [esi],bh
  411381:	std    
  411382:	and    BYTE PTR [esi+edx*1-0x481645c9],0xc4
  41138a:	mov    esi,0xa023f59f
  41138f:	mov    cl,0x6
  411391:	and    ch,BYTE PTR [esi]
  411393:	(bad)  
  411394:	mov    WORD PTR [eax-0x5a],es
  411397:	sti    
  411398:	dec    ebx
  411399:	jo     0x4113da
  41139b:	xchg   edx,eax
  41139c:	add    ebx,eax
  41139e:	out    0xd3,eax
  4113a0:	stos   DWORD PTR es:[edi],eax
  4113a1:	out    0xaa,eax
  4113a3:	xor    eax,0xa4c915e7
  4113a8:	aam    0x78
  4113aa:	imul   DWORD PTR [edx-0x271b51a9]
  4113b0:	outs   dx,DWORD PTR ds:[esi]
  4113b1:	fiadd  DWORD PTR [edi+0x11]
  4113b4:	dec    edx
  4113b5:	xchg   ebp,eax
  4113b6:	and    BYTE PTR [edx+0x12],0xe3
  4113ba:	retf   
  4113bb:	js     0x411415
  4113bd:	push   edi
  4113be:	pop    edx
  4113bf:	ror    DWORD PTR [ecx],0x7d
  4113c2:	xchg   edi,eax
  4113c3:	outs   dx,BYTE PTR ds:[esi]
  4113c4:	pop    ds
  4113c5:	mov    DWORD PTR [eax+ecx*1-0x6b9ff0f4],edi
  4113cc:	inc    esp
  4113cd:	mov    ds:0x1f7ec157,eax
  4113d2:	imul   esi,DWORD PTR [edi+0x22],0xfffffff1
  4113d6:	popa   
  4113d7:	add    BYTE PTR [eax-0x23d028d1],bl
  4113dd:	mov    dl,bh
  4113df:	cmc    
  4113e0:	add    al,0xfe
  4113e2:	push   0x29c4c1b8
  4113e7:	pop    eax
  4113e8:	dec    edi
  4113e9:	fstp   DWORD PTR [ecx+0x6e]
  4113ec:	bound  ebp,QWORD PTR [eax-0x7f4376a7]
  4113f2:	push   eax
  4113f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113f4:	imul   BYTE PTR [ecx+eiz*8-0x2e]
  4113f8:	adc    al,0xe3
  4113fa:	call   0xe209:0xea003642
  411401:	jnp    0x4113e5
  411403:	push   ss
  411404:	adc    DWORD PTR [edx],eax
  411406:	imul   esi,edi,0x155a8f0f
  41140c:	pop    ss
  41140d:	xor    edx,DWORD PTR [ebp-0x7128375]
  411413:	imul   edx,DWORD PTR [ebx+0x79074721],0xb10ec7c2
  41141d:	loope  0x411407
  41141f:	jae    0x4113fc
  411421:	fistp  WORD PTR [ebp+0x6f9a06f6]
  411427:	push   es
  411428:	mov    edi,0x272ae402
  41142d:	inc    ebx
  41142e:	sbb    eax,ebx
  411430:	movlps xmm6,QWORD PTR [ebx]
  411433:	xor    bl,ah
  411435:	add    al,0x29
  411437:	fidiv  WORD PTR [ecx+0x1c]
  41143a:	lods   eax,DWORD PTR ds:[esi]
  41143b:	and    eax,0x892ec874
  411440:	das    
  411441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411442:	cmp    ch,bl
  411444:	mov    edi,0x154a163d
  411449:	clc    
  41144a:	push   cs
  41144b:	aaa    
  41144c:	jne    0x411472
  41144e:	pusha  
  41144f:	adc    eax,0x599d6461
  411454:	xor    al,0xea
  411456:	add    bl,BYTE PTR ds:0xcfa34281
  41145c:	pop    ss
  41145d:	sahf   
  41145e:	icebp  
  41145f:	das    
  411460:	push   ds
  411461:	arpl   di,di
  411463:	mov    dh,0x3a
  411465:	cld    
  411466:	cmp    al,0x9a
  411468:	mov    al,0xb7
  41146a:	pop    edx
  41146b:	(bad)  
  41146c:	gs stos BYTE PTR es:[edi],al
  41146e:	arpl   WORD PTR [ebp+0x29],di
  411471:	push   es
  411472:	or     DWORD PTR [ebx],ebp
  411474:	shr    eax,cl
  411476:	jb     0x41146d
  411478:	in     eax,0xd7
  41147a:	pop    ecx
  41147b:	or     esi,DWORD PTR [eax+ecx*8+0x5f850b9]
  411482:	and    dh,BYTE PTR [edx]
  411484:	retf   0x225e
  411487:	outs   dx,DWORD PTR ds:[esi]
  411488:	mov    ah,0x5d
  41148a:	or     DWORD PTR [edx+0x6c],ebp
  41148d:	call   0xfad46025
  411492:	jl     0x41148c
  411494:	xchg   edx,eax
  411495:	call   DWORD PTR [edx-0x30f04d2]
  41149c:	mov    ds:0xbf63c6c0,al
  4114a1:	inc    ebx
  4114a2:	sbb    BYTE PTR [ebx-0x779af372],al
  4114a8:	lods   al,BYTE PTR ds:[esi]
  4114a9:	sbb    BYTE PTR [edx+0x10],al
  4114ac:	add    edx,esi
  4114ae:	test   BYTE PTR [ecx],ch
  4114b0:	fnsave [ebx+0x4906353f]
  4114b6:	xchg   ebx,eax
  4114b7:	ja     0x4114d2
  4114b9:	jae    0x4114db
  4114bb:	test   BYTE PTR [ecx-0x50],dh
  4114be:	inc    edx
  4114bf:	push   esp
  4114c0:	mov    dl,0x95
  4114c2:	dec    edi
  4114c3:	xor    edx,DWORD PTR [ebx+0x40]
  4114c6:	sub    DWORD PTR ss:[ecx],ebx
  4114c9:	adc    al,0x27
  4114cb:	xor    al,0x11
  4114cd:	test   al,0x32
  4114cf:	int    0x84
  4114d1:	in     al,dx
  4114d2:	dec    ebp
  4114d3:	hlt    
  4114d4:	pop    edi
  4114d5:	mov    ds:0x3dec7f49,al
  4114da:	dec    ebx
  4114db:	imul   eax,DWORD PTR [ebx],0x70ccf9f8
  4114e1:	sbb    eax,DWORD PTR [esi+0x67]
  4114e4:	les    esi,FWORD PTR [esi]
  4114e6:	add    al,dl
  4114e8:	mov    ch,0xd8
  4114ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114eb:	stos   DWORD PTR es:[edi],eax
  4114ec:	comiss xmm1,DWORD PTR [ebx+0x20]
  4114f0:	mov    ecx,db0
  4114f3:	mov    eax,ds:0x9489e518
  4114f8:	xor    eax,0xf70140c0
  4114fd:	mov    ecx,ecx
  4114ff:	pop    edx
  411500:	inc    edx
  411501:	repz iret 
  411503:	fistp  DWORD PTR [ecx+0x65a94f01]
  411509:	js     0x411568
  41150b:	mov    esi,0xa7d4b20c
  411510:	sbb    BYTE PTR [ecx+0x589e5ad0],bl
  411516:	or     al,0x11
  411518:	mov    edi,0x1d7bf061
  41151d:	jp     0x411549
  41151f:	pop    es
  411520:	gs jle 0x41156f
  411523:	xor    eax,DWORD PTR [edi]
  411525:	mov    esp,0x27088707
  41152a:	jno    0x4114e3
  41152c:	adc    al,0x2e
  41152e:	ja     0x4114e7
  411530:	or     edi,DWORD PTR [ebp+0x24]
  411533:	mov    ecx,0x6213e6a4
  411538:	aad    0x6
  41153a:	lea    esi,[edi+ebp*1]
  41153d:	popf   
  41153e:	mov    dl,0x32
  411540:	add    DWORD PTR [ecx+0x7a],eax
  411543:	inc    esp
  411544:	and    al,0x60
  411546:	xchg   esp,eax
  411547:	mov    BYTE PTR [edi+0x7f629911],dh
  41154d:	(bad)  
  41154e:	fist   DWORD PTR [esi]
  411550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411551:	fistp  DWORD PTR [ecx+0x6f]
  411554:	pushf  
  411555:	sbb    al,0xba
  411557:	out    dx,eax
  411558:	and    ecx,DWORD PTR [ebx-0x32]
  41155b:	push   ebx
  41155c:	jb     0x4114df
  41155e:	shr    BYTE PTR [ecx-0x34],cl
  411561:	rcr    BYTE PTR [edi-0x2a98a9ab],1
  411567:	jl     0x4115bb
  411569:	and    al,0x79
  41156b:	xchg   ecx,eax
  41156c:	fnsave [eax]
  41156e:	jmp    0x373:0xc6b5eb8d
  411575:	popf   
  411576:	cmc    
  411577:	aaa    
  411578:	xor    ch,BYTE PTR [eax+0x6f10a575]
  41157e:	mov    edi,DWORD PTR ds:0x9ad63147
  411584:	jb     0x41155e
  411586:	lock jno 0x411531
  411589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41158a:	sbb    esp,DWORD PTR [esi-0x6a]
  41158d:	fcmovb st,st(3)
  41158f:	repnz in eax,dx
  411591:	push   0xf7a16a98
  411596:	push   0xf5890e4
  41159b:	add    esp,DWORD PTR [ebp-0x6db07f7]
  4115a1:	hlt    
  4115a2:	ja     0x411535
  4115a4:	loop   0x41154e
  4115a6:	sbb    al,0x38
  4115a8:	jle    0x4115c6
  4115aa:	xor    BYTE PTR [edx-0xa],0xc9
  4115ae:	mov    dh,0xf3
  4115b0:	stos   BYTE PTR es:[edi],al
  4115b1:	cs jle 0x4115a3
  4115b4:	jne    0x41159a
  4115b6:	retf   0xbe6c
  4115b9:	retfw  0x3279
  4115bd:	test   DWORD PTR [ebp+edx*2-0x5f],edi
  4115c1:	xor    DWORD PTR [ebx-0x57f42776],ebx
  4115c7:	adc    eax,0xfa1a05e6
  4115cc:	pop    ebx
  4115cd:	pop    ecx
  4115ce:	sub    bl,dl
  4115d0:	pop    es
  4115d1:	push   0xd17f61c9
  4115d6:	jne    0x4115b3
  4115d8:	(bad)  
  4115d9:	nop
  4115da:	retf   
  4115db:	cmp    al,0xc6
  4115dd:	inc    edx
  4115de:	or     ax,0x47cd
  4115e2:	sbb    dl,al
  4115e4:	mov    ds:0x9321ab5b,eax
  4115e9:	dec    ecx
  4115ea:	xor    DWORD PTR [ebx+0xee0ea6],eax
  4115f0:	jb     0x4115f1
  4115f2:	dec    ecx
  4115f3:	repnz inc ecx
  4115f5:	dec    ebx
  4115f6:	pop    ss
  4115f7:	and    ebx,DWORD PTR [edi]
  4115f9:	cmp    DWORD PTR [ecx+0x3d6cbf12],0x40
  411600:	repz xchg ebx,eax
  411602:	xor    DWORD PTR [edx+0x6a],0x939d1e42
  411609:	imul   ebx,DWORD PTR [ebx+0x554f8c93],0xffffff92
  411610:	mov    ch,0x49
  411612:	jo     0x41167c
  411614:	pop    ebp
  411615:	mov    ah,0x97
  411617:	mov    cs,WORD PTR [esi-0x22]
  41161a:	out    0x54,al
  41161c:	mov    eax,ds:0x7e21175d
  411621:	pop    edx
  411622:	cdq    
  411623:	add    eax,0x299c8b2d
  411628:	(bad)  
  411629:	fld    DWORD PTR [edi]
  41162b:	push   ds
  41162c:	xor    DWORD PTR [edi+edi*8-0x5c1f4d80],edx
  411633:	pop    ebx
  411634:	mov    al,ds:0x93502670
  411639:	add    bh,al
  41163b:	mov    cl,0xa0
  41163d:	push   ecx
  41163e:	add    eax,0xed2ae72
  411643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411644:	cmp    al,0x97
  411646:	push   esi
  411647:	ja     0x4115e2
  411649:	shr    DWORD PTR [edi+0x526618fe],cl
  41164f:	lods   al,BYTE PTR ds:[esi]
  411650:	mov    eax,ds:0xcc48cfa2
  411655:	(bad)  
  411656:	jmp    0x41165a
  411658:	mov    esp,0xa50cd3a1
  41165d:	add    bl,BYTE PTR [ecx]
  41165f:	es sbb eax,0xb211b0a5
  411665:	sub    al,0xe5
  411667:	adc    DWORD PTR [edx-0x36],ecx
  41166a:	or     eax,edx
  41166c:	retf   
  41166d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41166e:	rol    BYTE PTR [ecx-0x2],cl
  411671:	aad    0x58
  411673:	arpl   dx,bp
  411675:	push   0xffffffc5
  411677:	je     0x4116e6
  411679:	dec    ebx
  41167a:	mov    bh,0xca
  41167c:	test   ebp,ebp
  41167e:	das    
  41167f:	stos   BYTE PTR es:[edi],al
  411680:	int    0x7d
  411682:	mov    esi,0xe071bb6b
  411687:	fbstp  TBYTE PTR [ebp+0x31]
  41168a:	or     eax,0x116081a0
  41168f:	pop    ecx
  411690:	jl     0x411682
  411692:	out    0x9c,eax
  411694:	lods   eax,DWORD PTR ds:[esi]
  411695:	out    0x2d,al
  411697:	jnp    0x411631
  411699:	inc    edi
  41169a:	mov    bl,0x7
  41169c:	inc    ebx
  41169d:	(bad)  
  41169e:	repnz mov ebx,0xd1538370
  4116a4:	adc    DWORD PTR [esi+eiz*4-0x2de4f7a9],edx
  4116ab:	call   0x9d0b:0x41781dec
  4116b2:	loopne 0x411690
  4116b4:	pop    edi
  4116b5:	xchg   ebp,eax
  4116b6:	mov    eax,DWORD PTR [edi-0x6a]
  4116b9:	mov    edi,0x95bfa9d0
  4116be:	pushf  
  4116bf:	lods   al,BYTE PTR ds:[esi]
  4116c0:	pop    ecx
  4116c1:	(bad)  [eax+0x7f]
  4116c4:	fist   DWORD PTR [edi]
  4116c6:	in     al,dx
  4116c7:	inc    ecx
  4116c8:	test   eax,0x42ecf206
  4116cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116ce:	sbb    BYTE PTR [ecx-0x7a],dh
  4116d1:	xchg   edi,eax
  4116d2:	push   0x8bb06408
  4116d7:	sti    
  4116d8:	(bad)  
  4116d9:	out    0xb4,eax
  4116db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116dc:	mov    esp,cs
  4116de:	xchg   BYTE PTR [ebx],cl
  4116e0:	pushf  
  4116e1:	inc    edx
  4116e2:	cmp    al,0x62
  4116e4:	mov    DWORD PTR [ecx-0x72],edx
  4116e7:	and    eax,0xe7969ee4
  4116ec:	loope  0x41174f
  4116ee:	test   al,0x3e
  4116f0:	data16 sti 
  4116f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f3:	jb     0x411732
  4116f5:	cld    
  4116f6:	outs   dx,BYTE PTR ds:[esi]
  4116f7:	cdq    
  4116f8:	adc    DWORD PTR [esi+0x4e],esp
  4116fb:	adc    ebp,DWORD PTR [ebx+0x1f]
  4116fe:	cmc    
  4116ff:	push   ss
  411700:	push   edx
  411702:	inc    ecx
  411703:	cmp    ebx,DWORD PTR [ebx]
  411705:	(bad)  
  411706:	mov    eax,0x4175964d
  41170b:	and    eax,0x6e0ebaef
  411710:	jecxz  0x411712
  411712:	cmp    ecx,DWORD PTR [esp+ebx*2]
  411715:	call   0x732acbef
  41171a:	dec    BYTE PTR [edx-0x34]
  41171d:	cmp    DWORD PTR ds:0x6f8a503b,ecx
  411723:	jmp    0x411741
  411725:	adc    BYTE PTR [eax+0x413cfca7],cl
  41172b:	push   ecx
  41172c:	xor    al,0x3e
  41172e:	outs   dx,BYTE PTR ds:[si]
  411730:	adc    bl,BYTE PTR [eax-0x4c90d174]
  411736:	(bad)  
  411737:	cmp    eax,0xe5efa4a8
  41173c:	or     al,0xf4
  41173e:	push   ss
  41173f:	mov    esi,0x5b2fbf2b
  411744:	mov    DWORD PTR [eax+0x10],ebx
  411747:	lods   eax,DWORD PTR ds:[esi]
  411748:	sbb    al,bl
  41174a:	arpl   WORD PTR [esi-0x3f881d2e],ax
  411750:	mov    edi,0xa54f1a32
  411755:	pop    ecx
  411756:	daa    
  411757:	leave  
  411758:	xchg   DWORD PTR [esi],eax
  41175a:	push   ecx
  41175b:	ret    0x3a7d
  41175e:	ret    
  41175f:	bound  eax,QWORD PTR [ecx-0x2e]
  411762:	and    eax,0xd37516c5
  411767:	adc    eax,0x47fe481b
  41176c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41176d:	and    cl,BYTE PTR [esi]
  41176f:	or     ah,BYTE PTR [ebx-0x62]
  411772:	fsubr  QWORD PTR [edi-0x7b]
  411775:	std    
  411776:	repnz dec esi
  411778:	pop    esi
  411779:	sbb    eax,0x1cd8aff4
  41177e:	push   ss
  41177f:	jle    0x41178b
  411781:	stos   BYTE PTR es:[edi],al
  411782:	sub    eax,0x8c4e6267
  411787:	inc    esp
  411788:	cdq    
  411789:	out    dx,eax
  41178a:	xchg   DWORD PTR [edi],ebp
  41178c:	push   0x50c6a7b
  411791:	pop    ebp
  411792:	bound  esi,QWORD PTR [edi-0x3a61cb91]
  411798:	mov    cl,0xf7
  41179a:	mov    edx,0x1cee2a11
  41179f:	lods   al,BYTE PTR ds:[esi]
  4117a0:	adc    eax,esp
  4117a2:	retf   
  4117a3:	test   BYTE PTR [esi+0x20],0x89
  4117a7:	test   DWORD PTR [edi],ebx
  4117a9:	dec    edx
  4117aa:	adc    eax,eax
  4117ac:	dec    edx
  4117ad:	aad    0x35
  4117af:	add    DWORD PTR [ebx],eax
  4117b1:	sbb    BYTE PTR [edx+0x8435eef],0x6e
  4117b8:	push   eax
  4117b9:	dec    ebx
  4117ba:	dec    esi
  4117bb:	lea    ebx,ds:0xa5f1de32
  4117c1:	sub    ebp,DWORD PTR [ebp-0xc485b9c]
  4117c7:	cmp    edx,DWORD PTR [ecx+0x49]
  4117ca:	(bad)  
  4117cb:	adc    ch,bh
  4117cd:	test   eax,0xd2d57005
  4117d2:	or     al,0xe
  4117d4:	jb     0x4117fa
  4117d6:	mov    bl,0x81
  4117d8:	cwde   
  4117d9:	sbb    ecx,esp
  4117db:	test   BYTE PTR [ebp+0x516e3110],ah
  4117e1:	mov    ah,0xc4
  4117e3:	xor    BYTE PTR [edi+ebx*2-0x6e],ch
  4117e7:	or     al,0x7d
  4117e9:	and    al,0x20
  4117eb:	inc    edx
  4117ec:	mov    bl,0x6c
  4117ee:	test   eax,0xa10dee16
  4117f3:	mov    dh,0x50
  4117f5:	nop
  4117f6:	jae    0x411826
  4117f8:	std    
  4117f9:	dec    esp
  4117fa:	int3   
  4117fb:	enter  0xc873,0x9e
  4117ff:	cli    
  411800:	ret    
  411801:	test   DWORD PTR [esi],edx
  411803:	jo     0x4117df
  411805:	push   0xffffff96
  411807:	scas   eax,DWORD PTR es:[edi]
  411808:	dec    edx
  411809:	sub    BYTE PTR [ebx-0x55f7ad51],bh
  41180f:	sub    eax,0xc7f85bfc
  411814:	out    0xe4,eax
  411816:	ror    BYTE PTR [ebx],cl
  411818:	or     al,0x74
  41181a:	(bad)  
  41181b:	loop   0x4117cb
  41181d:	pop    ebp
  41181e:	pop    es
  41181f:	jg     0x41186e
  411821:	lea    ebx,[ebx+edi*2-0x3e]
  411825:	into   
  411826:	lock add DWORD PTR [ebx+0x15d85a83],esi
  41182d:	push   ebx
  41182e:	(bad)  
  41182f:	jmp    0x27b9:0x173efab1
  411836:	fsqrt  
  411838:	cmp    eax,0x68dba7ef
  41183d:	mov    cl,0xf6
  41183f:	add    eax,0x9e2ac424
  411844:	xor    eax,0xe1aca21b
  411849:	inc    ecx
  41184a:	add    al,0x74
  41184c:	aam    0x56
  41184e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41184f:	xchg   edx,eax
  411850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411851:	pop    es
  411852:	fiadd  WORD PTR [esi+0x30]
  411855:	jae    0x4117f2
  411857:	sbb    DWORD PTR [edx-0x18],ebx
  41185a:	cdq    
  41185b:	jae    0x411895
  41185d:	inc    ebp
  41185e:	test   al,0x63
  411860:	sahf   
  411861:	jb     0x41188d
  411863:	lods   eax,DWORD PTR ds:[esi]
  411864:	or     BYTE PTR [edi-0x46e03830],ah
  41186a:	test   BYTE PTR [ecx-0x1d],dl
  41186d:	mov    al,ds:0x1084ccbc
  411872:	add    eax,0xe4586f5
  411877:	ins    DWORD PTR es:[edi],dx
  411878:	xor    esp,DWORD PTR [ecx-0x2c]
  41187b:	mov    bl,0x92
  41187d:	test   BYTE PTR [ebp-0x25d6954c],dl
  411883:	sahf   
  411884:	dec    edi
  411885:	retf   
  411886:	stos   BYTE PTR es:[edi],al
  411887:	inc    ebp
  411888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411889:	aad    0x95
  41188b:	pop    ebp
  41188c:	(bad)  
  41188d:	push   esi
  41188e:	sbb    bh,BYTE PTR [eax-0x70aefd6c]
  411894:	(bad)
  411897:	out    dx,eax
  411898:	xchg   esi,eax
  411899:	iret   
  41189a:	rcl    BYTE PTR [ecx-0xd82741b],0xd2
  4118a1:	mov    bl,BYTE PTR [ebp-0x2a25ede0]
  4118a7:	sub    al,0x96
  4118a9:	lods   eax,DWORD PTR ds:[esi]
  4118aa:	push   esi
  4118ab:	dec    ebx
  4118ac:	cmp    eax,0x16df110a
  4118b1:	mov    al,ds:0x94cb4bc7
  4118b6:	pop    esp
  4118b7:	mov    dh,0xb3
  4118b9:	mov    ebx,0xc72678de
  4118be:	dec    ebp
  4118bf:	int3   
  4118c0:	adc    bl,BYTE PTR [edi]
  4118c2:	pop    edi
  4118c3:	add    BYTE PTR [ecx],dl
  4118c5:	ins    DWORD PTR es:[edi],dx
  4118c6:	dec    esp
  4118c7:	inc    eax
  4118c8:	or     eax,DWORD PTR [esi+0x75]
  4118cb:	mov    bh,0x79
  4118cd:	xchg   esi,eax
  4118ce:	iret   
  4118cf:	(bad)  
  4118d0:	dec    ecx
  4118d1:	mov    bh,0x84
  4118d3:	sbb    BYTE PTR ds:0x1eade5f2,bl
  4118d9:	retf   
  4118da:	pop    esp
  4118db:	icebp  
  4118dc:	neg    eax
  4118de:	sub    DWORD PTR [ebx],ebx
  4118e0:	or     al,0x60
  4118e2:	jl     0x411901
  4118e4:	push   cs
  4118e5:	inc    esi
  4118e6:	sbb    BYTE PTR [eax+0x631552c6],al
  4118ec:	inc    ebp
  4118ed:	outs   dx,DWORD PTR ds:[esi]
  4118ee:	dec    edi
  4118ef:	adc    DWORD PTR [esi-0x72],esi
  4118f2:	adc    eax,0x8028a50b
  4118f7:	fld    DWORD PTR [eax-0x2e]
  4118fa:	arpl   WORD PTR [esp+ebp*4+0x6800cde],dx
  411901:	add    eax,0x8f1396b7
  411906:	int    0x61
  411908:	push   edi
  411909:	jns    0x41198a
  41190b:	inc    ebx
  41190c:	mov    bl,0xc1
  41190e:	jo     0x4118a4
  411910:	aam    0x62
  411912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411913:	push   edx
  411914:	inc    ebx
  411915:	(bad)  
  411916:	mov    edx,ebx
  411918:	test   DWORD PTR [ebp+0x2de1a323],0x7c5e6913
  411922:	pop    edi
  411923:	jecxz  0x411961
  411925:	mov    esi,0x7803d676
  41192a:	mov    DWORD PTR fs:0xa66b82fe,ebp
  411931:	mov    esp,0x1dcd01c
  411936:	sub    eax,0xb864818f
  41193b:	dec    eax
  41193c:	inc    ecx
  41193d:	xchg   DWORD PTR [edx-0x35290ec2],edx
  411943:	out    dx,al
  411944:	pop    edi
  411945:	ds out dx,al
  411947:	(bad)  [ecx-0x56]
  41194a:	test   al,0xf
  41194c:	mov    ebp,0x67fe023d
  411951:	test   eax,0x6e63ec83
  411956:	pushf  
  411957:	jecxz  0x411935
  411959:	push   esi
  41195a:	fmul   st,st(5)
  41195c:	sbb    eax,0x55c6d59f
  411961:	lods   eax,DWORD PTR ds:[esi]
  411962:	out    0x33,al
  411964:	cmp    ecx,DWORD PTR [ebx]
  411966:	out    dx,eax
  411967:	adc    al,0x8b
  411969:	imul   ecx,DWORD PTR [ecx],0xffffffd8
  41196c:	and    al,BYTE PTR [ecx+0x1]
  41196f:	clc    
  411970:	dec    edi
  411971:	inc    edx
  411972:	push   eax
  411973:	cmp    ah,BYTE PTR [ebp-0x45d24dde]
  411979:	mov    ecx,eax
  41197b:	fs adc eax,0x53d227a1
  411981:	into   
  411982:	pop    esi
  411983:	xchg   esp,eax
  411984:	pop    ss
  411985:	add    ebp,DWORD PTR [edx]
  411987:	adc    al,0xfa
  411989:	mov    eax,ds:0x188b8d52
  41198e:	retf   0xcc1d
  411991:	mov    ds:0x6f0f95d4,eax
  411996:	arpl   di,bx
  411998:	retf   
  411999:	dec    BYTE PTR ds:0xc8ba7832
  41199f:	je     0x411963
  4119a1:	xchg   edx,eax
  4119a2:	pop    es
  4119a3:	(bad)  
  4119a4:	xchg   edx,eax
  4119a5:	hlt    
  4119a6:	in     eax,dx
  4119a7:	stc    
  4119a8:	mov    BYTE PTR [eax+0x6d54b5d4],ah
  4119ae:	mov    ebx,0x688e1e32
  4119b3:	push   ds
  4119b4:	aam    0xd3
  4119b6:	pushf  
  4119b7:	push   es
  4119b8:	mov    eax,eax
  4119ba:	pusha  
  4119bb:	cli    
  4119bc:	test   al,0x98
  4119be:	pusha  
  4119bf:	fimul  DWORD PTR [edx+0x41bd7d49]
  4119c5:	into   
  4119c6:	stos   BYTE PTR es:[edi],al
  4119c7:	addr16 adc al,0x7a
  4119ca:	repnz (bad) [ecx+0x53]
  4119ce:	in     al,0xad
  4119d0:	cmc    
  4119d1:	ror    BYTE PTR [edx+0x199f6461],1
  4119d7:	mov    eax,ds:0x8915b7af
  4119dc:	rcl    BYTE PTR ds:0x9b93f328,cl
  4119e2:	shr    BYTE PTR [eax+0x7766d435],1
  4119e8:	add    ebp,DWORD PTR [edx-0xe]
  4119eb:	sub    DWORD PTR [eax+edi*2-0x2544a9cf],edx
  4119f2:	jno    0x4119b4
  4119f4:	sbb    BYTE PTR ds:0xddc66a31,ah
  4119fa:	test   eax,0xbbbf01b9
  4119ff:	popf   
  411a00:	xor    DWORD PTR [ebp+0x71dc636e],edi
  411a06:	mov    bh,0x49
  411a08:	or     bh,BYTE PTR [esi+ecx*1-0x65]
  411a0c:	mov    ebp,0x56ed5f60
  411a11:	(bad)  
  411a12:	fdiv   QWORD PTR [ebx+0x73b17e33]
  411a18:	in     eax,0x1f
  411a1a:	sub    DWORD PTR [edi],ebx
  411a1c:	pop    esi
  411a1d:	push   edx
  411a1e:	jmp    0x4c34:0xb2c3a446
  411a25:	sbb    DWORD PTR [ecx+esi*2],esi
  411a28:	and    DWORD PTR [ebp+esi*2+0x79],edx
  411a2c:	mul    DWORD PTR [edx]
  411a2e:	or     esp,esi
  411a30:	int3   
  411a31:	je     0x411a53
  411a33:	in     eax,0xf6
  411a35:	pop    ss
  411a36:	xchg   ebp,eax
  411a37:	scas   al,BYTE PTR es:[edi]
  411a38:	ss mov ch,0x87
  411a3b:	ss pop ebx
  411a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a3e:	ret    0xd485
  411a41:	dec    ebp
  411a42:	add    eax,0x7e93f399
  411a47:	ins    BYTE PTR es:[edi],dx
  411a48:	(bad)  
  411a49:	jmp    0xcb62a47c
  411a4e:	test   eax,0xde83535d
  411a53:	inc    esp
  411a54:	es add ebx,ebx
  411a57:	jmp    eax
  411a59:	xchg   edi,eax
  411a5a:	scas   al,BYTE PTR es:[edi]
  411a5b:	(bad)  
  411a5c:	xlat   BYTE PTR ds:[ebx]
  411a5d:	pop    esp
  411a5e:	mov    ebx,DWORD PTR [ebx+0x26]
  411a61:	mov    cl,0xfb
  411a63:	(bad)  
  411a65:	pop    edx
  411a66:	std    
  411a67:	pop    edi
  411a68:	fist   WORD PTR [esi]
  411a6a:	pop    esp
  411a6b:	xchg   esi,eax
  411a6c:	push   cs
  411a6d:	or     bl,ah
  411a6f:	fist   WORD PTR cs:[edx]
  411a72:	pop    es
  411a73:	int    0x97
  411a75:	outs   dx,BYTE PTR ds:[esi]
  411a76:	test   DWORD PTR [ecx+eiz*2],esp
  411a79:	xchg   esi,eax
  411a7a:	mov    dh,0xf7
  411a7c:	pop    ebp
  411a7d:	push   edi
  411a7e:	rcr    BYTE PTR [ecx-0x5f78d666],cl
  411a84:	jmp    0x527614d9
  411a89:	mov    eax,ds:0x8ff0bce
  411a8e:	je     0x411b0f
  411a90:	cs call 0xbb5a:0xad89d0a8
  411a98:	scas   eax,DWORD PTR es:[edi]
  411a99:	cmp    BYTE PTR [ecx+0x6b45e390],dl
  411a9f:	retf   
  411aa0:	sti    
  411aa1:	mov    eax,0xba57ab92
  411aa6:	jp     0x411b0b
  411aa8:	adc    BYTE PTR [ebx-0x53],bl
  411aab:	mov    ds:0x28b9bdfa,eax
  411ab0:	push   es
  411ab1:	dec    di
  411ab3:	cld    
  411ab4:	(bad)  
  411ab5:	fiadd  WORD PTR [ecx]
  411ab7:	xor    eax,0xbd67821f
  411abc:	sub    dh,BYTE PTR [ebx+0x21]
  411abf:	sbb    BYTE PTR [edx-0x5750661e],ch
  411ac5:	mov    al,0xc
  411ac7:	lea    esp,[edx+0x8557b66]
  411acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ace:	mov    ?,WORD PTR [eax]
  411ad0:	or     al,0x4d
  411ad2:	pop    edi
  411ad3:	(bad)  
  411ad4:	adc    cl,BYTE PTR [edi]
  411ad6:	sbb    eax,0x852145b6
  411adb:	pop    esi
  411adc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411add:	les    esi,FWORD PTR [eax+0x23]
  411ae0:	ret    
  411ae1:	jmp    0x411abe
  411ae3:	mov    ah,0x26
  411ae5:	inc    esp
  411ae6:	int3   
  411ae7:	and    dh,bh
  411ae9:	popa   
  411aea:	or     eax,0x68d24f38
  411aef:	test   DWORD PTR [ebx+0x33ae533d],0x9ae42067
  411af9:	scas   eax,DWORD PTR es:[edi]
  411afa:	sbb    ah,BYTE PTR [ecx-0x35]
  411afd:	sub    al,0x1b
  411aff:	iret   
  411b00:	mov    edx,0xc5a97f90
  411b05:	sti    
  411b06:	inc    edx
  411b07:	adc    al,0x8
  411b09:	in     eax,dx
  411b0a:	retf   
  411b0b:	daa    
  411b0c:	test   DWORD PTR [ecx+0x71],eax
  411b0f:	ror    bh,0x34
  411b12:	xor    dh,bh
  411b14:	cmp    edx,DWORD PTR [eax+0x3630f920]
  411b1a:	mov    cl,0xb1
  411b1c:	(bad)  
  411b1d:	retf   0xeba4
  411b20:	lea    ecx,[edi]
  411b22:	rcr    BYTE PTR ds:0x5225e416,1
  411b28:	shl    DWORD PTR [esi+0x42679eab],1
  411b2e:	test   ah,0x41
  411b31:	xor    ebp,DWORD PTR [edi+0x68234e47]
  411b37:	ret    
  411b38:	loopne 0x411b58
  411b3a:	lods   eax,DWORD PTR ds:[esi]
  411b3b:	pop    ss
  411b3c:	jb     0x411ae7
  411b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b3f:	dec    ecx
  411b40:	xor    DWORD PTR [esi-0x43],ebp
  411b43:	inc    esi
  411b44:	shl    DWORD PTR [esi-0x71],cl
  411b47:	push   esi
  411b48:	mov    ecx,0x85bea0ad
  411b4d:	(bad)  
  411b4f:	push   ds
  411b50:	mov    eax,ds:0xc7d84c98
  411b55:	jmp    0x72da9991
  411b5a:	inc    edi
  411b5b:	mov    ebp,0xb67b61a8
  411b60:	jae    0x411b17
  411b62:	xchg   edi,eax
  411b63:	and    al,0x5b
  411b65:	xor    DWORD PTR [edi-0x14],0xe7446aea
  411b6c:	add    dh,BYTE PTR [ebx+0x3b]
  411b6f:	lock call 0x12c1:0x4f9915ac
  411b77:	jmp    0x411b24
  411b79:	leave  
  411b7a:	push   ss
  411b7b:	sbb    BYTE PTR [ebp+0x7e8556d6],0x4d
  411b82:	cwde   
  411b83:	fwait
  411b84:	jbe    0x411b89
  411b86:	pop    esp
  411b87:	clc    
  411b88:	clc    
  411b89:	int3   
  411b8a:	inc    esi
  411b8b:	mov    cl,0xaa
  411b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b8f:	aam    0xcd
  411b91:	xchg   esp,eax
  411b92:	(bad)  
  411b93:	mov    ebx,0x9cb70ebc
  411b98:	jge    0x411b41
  411b9a:	and    BYTE PTR [ecx+0x20],al
  411b9d:	retf   
  411b9e:	dec    edx
  411b9f:	mov    DWORD PTR [eax-0x1c],edx
  411ba2:	adc    ah,BYTE PTR [ebp+0x25]
  411ba5:	jg     0x411c0a
  411ba7:	sbb    BYTE PTR [eax-0x2256824f],dh
  411bad:	ret    0xf817
  411bb0:	lock imul edi,esp,0x96805202
  411bb7:	aas    
  411bb8:	and    DWORD PTR [edx+eax*8+0x134ccf41],edx
  411bbf:	fist   WORD PTR [ebp+0x4794544d]
  411bc5:	mov    BYTE PTR [ebx-0x217bde6b],bh
  411bcb:	ret    
  411bcc:	aaa    
  411bcd:	outs   dx,BYTE PTR ds:[esi]
  411bce:	jmp    0x56a0:0x5eec681d
  411bd5:	shr    BYTE PTR [edi],1
  411bd7:	ret    0xb2e8
  411bda:	add    DWORD PTR [edx-0x7c],eax
  411bdd:	rcl    DWORD PTR [eax],cl
  411bdf:	addr16 add al,0x62
  411be2:	int3   
  411be3:	leave  
  411be4:	scas   eax,DWORD PTR es:[edi]
  411be5:	mov    al,ds:0x95a4effd
  411bea:	lahf   
  411beb:	fdivr  st,st(5)
  411bed:	rcl    DWORD PTR [edx+eax*1],cl
  411bf0:	retf   0xaee2
  411bf3:	int    0x61
  411bf5:	mov    cl,0x1f
  411bf7:	dec    esp
  411bf8:	in     eax,0x53
  411bfa:	push   ds
  411bfb:	mov    edx,?
  411bfd:	push   ebx
  411bfe:	addr16 xchg ecx,eax
  411c00:	xor    ah,dh
  411c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c03:	int3   
  411c04:	in     al,0xf8
  411c06:	xchg   ecx,eax
  411c07:	in     al,dx
  411c08:	and    DWORD PTR [ecx],eax
  411c0a:	sbb    cl,BYTE PTR [ebp+eax*4-0x7bdea148]
  411c11:	jmp    0xfac0:0x3fa5f2c1
  411c18:	jmp    0xedeee015
  411c1d:	and    dh,BYTE PTR [edx]
  411c1f:	out    0x35,eax
  411c21:	push   ebx
  411c22:	cmp    ah,cl
  411c24:	scas   al,BYTE PTR es:[edi]
  411c25:	inc    DWORD PTR [edi+0x6b0ae32b]
  411c2b:	xchg   esp,eax
  411c2c:	test   al,0x6a
  411c2e:	imul   eax,DWORD PTR [ebx],0x4fe88b34
  411c34:	jno    0x411c9b
  411c36:	mov    ecx,?
  411c38:	mov    esp,0xee60d38b
  411c3d:	call   0x4a82:0xf45c6c2e
  411c44:	sbb    eax,0xb924762
  411c49:	(bad)  
  411c4a:	mov    dl,0xa
  411c4c:	pop    eax
  411c4d:	div    BYTE PTR [ebp+0x77e8eee5]
  411c53:	ror    ecx,0x8f
  411c56:	push   cs
  411c57:	rol    DWORD PTR [edi+0x10e3b6ac],0xbb
  411c5e:	(bad)  
  411c5f:	data16 data16 stos BYTE PTR es:[edi],al
  411c62:	mov    eax,0x1b15159f
  411c67:	das    
  411c68:	outs   dx,BYTE PTR ds:[esi]
  411c69:	cmp    DWORD PTR [esi+0x7245d737],0xffffff8b
  411c70:	das    
  411c71:	ins    DWORD PTR es:[edi],dx
  411c72:	xchg   edx,eax
  411c73:	sahf   
  411c74:	inc    edi
  411c75:	repz mov ah,0x31
  411c78:	sub    BYTE PTR [edi*8+0x6ee35bb3],bh
  411c7f:	sbb    al,0x9e
  411c81:	loopne 0x411c69
  411c83:	arpl   WORD PTR [ebx+0x5b],si
  411c86:	pop    eax
  411c87:	pop    ebp
  411c88:	pop    esp
  411c89:	nop
  411c8a:	mov    ds:0xa890d3e1,al
  411c8f:	out    dx,eax
  411c90:	add    eax,ebp
  411c92:	pop    ebx
  411c93:	iret   
  411c94:	jl     0x411c5c
  411c96:	jle    0x411d0a
  411c98:	mov    edi,0x2becd893
  411c9d:	cmp    al,0x8a
  411c9f:	mov    bl,0x55
  411ca1:	fsubr  QWORD PTR [edx]
  411ca3:	arpl   WORD PTR ds:0x49e2c214,di
  411ca9:	pop    ecx
  411caa:	push   ds
  411cab:	xor    BYTE PTR [esi],al
  411cad:	fld    TBYTE PTR [edi-0x6f]
  411cb0:	pusha  
  411cb1:	sub    BYTE PTR [edi],ch
  411cb3:	loop   0x411cec
  411cb5:	test   eax,0x2eb5959b
  411cba:	bound  ebx,QWORD PTR [ecx-0xd916ed1]
  411cc0:	or     edi,DWORD PTR [edx]
  411cc2:	lds    edi,FWORD PTR [ebx]
  411cc4:	or     ah,BYTE PTR [ecx-0x3a]
  411cc7:	and    BYTE PTR [esi-0x4c],bh
  411cca:	fucomp st(7)
  411ccc:	add    cl,BYTE PTR [edi+0x75]
  411ccf:	stos   DWORD PTR es:[edi],eax
  411cd0:	lods   eax,DWORD PTR ds:[esi]
  411cd1:	(bad)  
  411cd2:	out    0x8c,eax
  411cd4:	sub    BYTE PTR [edx+0x21b6cd8f],cl
  411cda:	fstp   QWORD PTR [ecx]
  411cdc:	rcl    cl,cl
  411cde:	add    ebp,DWORD PTR [ebx]
  411ce0:	fucomi st,st(5)
  411ce2:	mov    es,WORD PTR [edi]
  411ce4:	and    ecx,0xb18c4da5
  411cea:	(bad)  
  411ceb:	pop    ecx
  411cec:	or     dl,cl
  411cee:	push   edi
  411cef:	xor    DWORD PTR [ebp+esi*2-0x26c81b44],edi
  411cf6:	mov    ecx,0xba88b490
  411cfb:	xor    ebp,DWORD PTR [eax-0xfa5ad49]
  411d01:	out    0xee,al
  411d03:	arpl   WORD PTR [ebx+0x2cd56b94],dx
  411d09:	loope  0x411d10
  411d0b:	lds    ecx,FWORD PTR [edi-0x622360b3]
  411d11:	not    esp
  411d13:	mov    ds:0xe6e41cb7,eax
  411d18:	fbld   TBYTE PTR [eax+0x4b226968]
  411d1e:	adc    al,0x3f
  411d20:	addr16 gs in eax,0x87
  411d24:	and    BYTE PTR [edi+0x4a],dl
  411d27:	mov    ecx,0x86a55bb2
  411d2c:	dec    ecx
  411d2d:	into   
  411d2e:	test   al,0x5
  411d30:	addr16 push ebp
  411d32:	mov    al,ds:0x903259f6
  411d37:	ins    BYTE PTR es:[edi],dx
  411d38:	pop    ebx
  411d39:	xchg   esp,eax
  411d3a:	mov    ah,0x98
  411d3c:	ss push cs
  411d3e:	scas   eax,DWORD PTR es:[edi]
  411d3f:	xor    DWORD PTR [esi+ebp*8],ebx
  411d42:	push   edi
  411d43:	lods   eax,DWORD PTR ds:[esi]
  411d44:	test   BYTE PTR [edx],cl
  411d46:	cmp    ebp,edx
  411d48:	and    edx,DWORD PTR [ebx]
  411d4a:	and    dl,ch
  411d4c:	jne    0x411d34
  411d4e:	(bad)  
  411d4f:	mov    BYTE PTR [edi],bh
  411d51:	outs   dx,DWORD PTR ds:[esi]
  411d52:	fld    QWORD PTR [edi+0x13]
  411d55:	aam    0xb7
  411d57:	aam    0x8
  411d59:	adc    ah,ah
  411d5b:	das    
  411d5c:	fadd   QWORD PTR [ecx+edx*4+0x60]
  411d60:	sbb    al,0x12
  411d62:	inc    ecx
  411d63:	dec    ecx
  411d64:	xor    bl,BYTE PTR [edx-0x7bf557bd]
  411d6a:	pop    ebx
  411d6b:	cs xchg ecx,eax
  411d6d:	mov    al,ds:0xe7ea492e
  411d72:	mov    ss:0x334d5ef3,al
  411d78:	mov    bh,0x32
  411d7a:	lods   eax,DWORD PTR ds:[esi]
  411d7b:	xor    edi,0x51
  411d7e:	test   eax,0xc5b6c796
  411d83:	jg     0x411d66
  411d85:	sbb    al,0x3d
  411d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d88:	sub    eax,0xe208e1d6
  411d8d:	jns    0x411dd6
  411d8f:	std    
  411d90:	jge    0x411d8f
  411d92:	in     al,0x77
  411d94:	mov    BYTE PTR [ebx-0x2a],0x10
  411d98:	mov    ds:0x8a183ac8,eax
  411d9d:	mov    eax,0x9563bab9
  411da2:	stos   BYTE PTR es:[edi],al
  411da3:	cmp    bl,BYTE PTR [edx+ebx*8+0x432f628b]
  411daa:	fwait
  411dab:	test   al,0x8e
  411dad:	lds    esp,FWORD PTR [ecx]
  411daf:	es ror ch,cl
  411db2:	sub    al,0xf
  411db4:	mov    DWORD PTR [ebx],eax
  411db6:	jmp    0x81112fcc
  411dbb:	pop    ebx
  411dbc:	icebp  
  411dbd:	mov    dl,0xc6
  411dbf:	adc    ebx,esi
  411dc1:	mov    ebx,0x142aff92
  411dc6:	ja     0x411e36
  411dc8:	mov    al,0xdc
  411dca:	aam    0x6
  411dcc:	fild   WORD PTR [ebx+0x68]
  411dcf:	outs   dx,DWORD PTR ds:[esi]
  411dd0:	sbb    BYTE PTR [eax+0x74],ah
  411dd3:	sub    ecx,DWORD PTR [edx]
  411dd5:	lahf   
  411dd6:	jmp    0x411db8
  411dd8:	sti    
  411dd9:	sub    DWORD PTR [esi],ebp
  411ddb:	add    al,BYTE PTR [ecx+0x31]
  411dde:	mov    ch,0x44
  411de0:	lods   al,BYTE PTR ds:[esi]
  411de1:	mov    al,0x4e
  411de3:	jecxz  0x411dee
  411de5:	pop    edi
  411de6:	jnp    0x411db9
  411de8:	inc    edi
  411de9:	jbe    0x411e13
  411deb:	cwde   
  411dec:	xchg   esi,eax
  411ded:	sbb    cl,bl
  411def:	into   
  411df0:	lods   eax,DWORD PTR ds:[esi]
  411df1:	and    edx,DWORD PTR [edx]
  411df3:	or     al,0xe7
  411df5:	sub    ah,bl
  411df7:	(bad)  
  411df9:	pusha  
  411dfa:	xlat   BYTE PTR ds:[ebx]
  411dfb:	xor    ecx,DWORD PTR [edi+0x2a]
  411dfe:	in     al,0x30
  411e00:	push   esp
  411e01:	jo     0x411e0d
  411e03:	add    esp,0xb7d6956e
  411e09:	and    eax,edi
  411e0b:	sbb    al,dh
  411e0d:	fidiv  WORD PTR [esi+ebx*2]
  411e10:	stc    
  411e11:	sub    al,0x81
  411e13:	std    
  411e14:	jae    0x411da3
  411e16:	push   esp
  411e17:	rcr    BYTE PTR [edx-0x54627c3],cl
  411e1d:	je     0x411e9c
  411e1f:	scas   eax,DWORD PTR es:[edi]
  411e20:	arpl   WORD PTR [eax+0x6e34669f],dx
  411e26:	js     0x411dfc
  411e28:	push   edx
  411e29:	sti    
  411e2a:	shl    eax,1
  411e2c:	dec    ecx
  411e2d:	fadd   QWORD PTR [edi-0x78570515]
  411e33:	mov    ds:0x786e2715,eax
  411e38:	sub    BYTE PTR ds:0x5d90ecaa,dh
  411e3e:	sub    eax,0xc0b5ff68
  411e43:	mov    ds:0x53851991,al
  411e48:	iret   
  411e49:	adc    cl,ch
  411e4b:	sub    edx,DWORD PTR [edx-0x65]
  411e4e:	xor    DWORD PTR [ebx-0x61],ebx
  411e51:	sahf   
  411e52:	shr    BYTE PTR [edx+ebx*4-0x14d4e9af],1
  411e59:	call   0x21b2:0x3ad125cd
  411e60:	xchg   ecx,eax
  411e61:	popf   
  411e62:	ret    
  411e63:	mov    cl,0xee
  411e65:	ds popa 
  411e67:	cmp    bl,0x18
  411e6a:	push   ss
  411e6b:	jae    0x411e00
  411e6d:	dec    ecx
  411e6e:	in     al,dx
  411e6f:	fst    st(5)
  411e71:	fdivr  DWORD PTR [ecx+0x6cbcf80a]
  411e77:	arpl   WORD PTR [esi],ax
  411e79:	mov    ah,0xef
  411e7b:	push   esp
  411e7c:	push   eax
  411e7d:	xchg   ebp,eax
  411e7e:	in     eax,dx
  411e7f:	xor    al,0x46
  411e81:	pop    ebx
  411e82:	mov    cl,0xd3
  411e84:	and    bl,bh
  411e86:	lahf   
  411e87:	pushf  
  411e88:	js     0x411ef1
  411e8a:	mov    eax,0x36dba54f
  411e8f:	push   ebp
  411e90:	shl    DWORD PTR [eax],cl
  411e92:	fisttp WORD PTR [ebp+0x47]
  411e95:	jbe    0x411e77
  411e97:	cmp    bl,BYTE PTR [eax-0x6b9db2ee]
  411e9d:	sahf   
  411e9e:	in     eax,dx
  411e9f:	outs   dx,DWORD PTR ds:[esi]
  411ea0:	repz adc BYTE PTR [eax+0x48febb9a],bh
  411ea7:	out    0xa9,al
  411ea9:	add    dh,al
  411eab:	sub    DWORD PTR [ebx-0x303f4723],0x16
  411eb2:	push   ebp
  411eb3:	xor    ecx,edx
  411eb5:	pop    eax
  411eb6:	add    cl,cl
  411eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eb9:	sbb    eax,ebx
  411ebb:	popa   
  411ebc:	loope  0x411e4b
  411ebe:	cli    
  411ebf:	push   edx
  411ec0:	into   
  411ec1:	jns    0x411f22
  411ec3:	loopne 0x411f16
  411ec5:	fs jns 0x411eeb
  411ec8:	pushf  
  411ec9:	jl     0x411e88
  411ecb:	fs mov esi,0xf539c7b1
  411ed1:	dec    eax
  411ed2:	outs   dx,DWORD PTR ds:[esi]
  411ed3:	cld    
  411ed4:	jbe    0x411f3d
  411ed6:	lock dec eax
  411ed8:	ja     0x411f10
  411eda:	mov    ah,0xd
  411edc:	out    0x89,eax
  411ede:	pop    ds
  411edf:	or     edi,DWORD PTR [ecx]
  411ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ee2:	cmp    BYTE PTR [ecx+0x2f],ah
  411ee5:	jl     0x411ec0
  411ee7:	mov    ah,0x70
  411ee9:	lods   eax,DWORD PTR ds:[esi]
  411eea:	(bad)
  411eed:	jb     0x411f46
  411eef:	cwde   
  411ef0:	fldenv [esi]
  411ef2:	fsubp  st(7),st
  411ef4:	pusha  
  411ef5:	test   eax,0x526dc536
  411efa:	xchg   BYTE PTR [eax+0x22],dh
  411efd:	aad    0x70
  411eff:	cli    
  411f00:	outs   dx,BYTE PTR ds:[esi]
  411f01:	jno    0x411e8d
  411f03:	dec    ebx
  411f04:	dec    ebx
  411f05:	push   0xc482d77e
  411f0a:	and    al,0x6e
  411f0c:	xlat   BYTE PTR ds:[ebx]
  411f0d:	fs xchg ebp,eax
  411f0f:	xchg   DWORD PTR [eax],edx
  411f11:	xchg   edi,eax
  411f12:	and    BYTE PTR [ecx],0xa3
  411f15:	int    0x94
  411f17:	xor    DWORD PTR [eax+0x1032c6e],ebp
  411f1d:	(bad)  
  411f1e:	push   edx
  411f1f:	xchg   edi,eax
  411f20:	in     al,dx
  411f21:	call   0xaf118c67
  411f26:	sbb    cl,BYTE PTR [ebx-0x71]
  411f29:	movups xmm4,XMMWORD PTR [ebx+0x2e89f50a]
  411f30:	and    DWORD PTR [ebx],edi
  411f32:	lea    esp,[edi]
  411f34:	aad    0x37
  411f36:	dec    eax
  411f37:	popa   
  411f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f39:	jae    0x411f91
  411f3b:	mov    ah,0x45
  411f3d:	sar    DWORD PTR [eax],1
  411f3f:	scas   al,BYTE PTR es:[edi]
  411f40:	and    al,ah
  411f42:	inc    eax
  411f43:	cs test al,0xf1
  411f46:	add    al,0x99
  411f48:	and    al,0x3
  411f4a:	shr    BYTE PTR [ebx],0x34
  411f4d:	pop    edi
  411f4e:	das    
  411f4f:	sbb    esp,eax
  411f51:	and    eax,0xa3fe9107
  411f56:	les    ebp,FWORD PTR [eax]
  411f58:	jo     0x411f93
  411f5a:	inc    eax
  411f5b:	or     BYTE PTR [eax+eiz*2],ah
  411f5e:	sbb    BYTE PTR [eax+ecx*1-0x2b350ee5],dl
  411f65:	sub    ch,bl
  411f67:	mov    DWORD PTR [esi-0x61],ebp
  411f6a:	add    DWORD PTR [edx],ecx
  411f6c:	nop
  411f6d:	into   
  411f6e:	repz and bh,BYTE PTR [ebp+eiz*4-0x68900f13]
  411f76:	jecxz  0x411f26
  411f78:	pop    esp
  411f79:	sysenter 
  411f7b:	jb     0x411f4a
  411f7d:	jl     0x411f1c
  411f7f:	push   edx
  411f80:	adc    edx,DWORD PTR [esi]
  411f82:	sub    dh,BYTE PTR [ebp+0x262d0887]
  411f88:	push   ebp
  411f89:	outs   dx,BYTE PTR ds:[esi]
  411f8a:	repnz sar ah,1
  411f8d:	or     eax,DWORD PTR [eax]
  411f8f:	mov    ds:0xc0dc2c05,eax
  411f94:	jb     0x412007
  411f96:	test   eax,0xae74ae78
  411f9b:	mov    al,0x7d
  411f9d:	add    al,0x1b
  411f9f:	or     DWORD PTR [ebx+0x4452eab3],edi
  411fa5:	sub    ebp,DWORD PTR [eax+0xab35f9c]
  411fab:	shl    BYTE PTR [ebx+0x3c19a318],cl
  411fb1:	por    mm7,QWORD PTR [ebx-0x194c6165]
  411fb8:	jg     0x411fe1
  411fba:	and    esp,DWORD PTR [eax+0x9]
  411fbd:	jecxz  0x412005
  411fbf:	and    BYTE PTR [edx+edi*2+0x5a],bh
  411fc3:	mov    ecx,0x57b62ca9
  411fc8:	sbb    DWORD PTR [ebx+ebx*2+0xdf19e99],edx
  411fcf:	(bad)  
  411fd0:	and    bh,bl
  411fd2:	push   ecx
  411fd3:	or     BYTE PTR [esi],bl
  411fd5:	fisub  WORD PTR [eax+eiz*8-0xb]
  411fd9:	or     DWORD PTR [esi],0xadf0eecd
  411fdf:	lea    ebx,[esi+0x2ba77591]
  411fe5:	stc    
  411fe6:	mov    ah,0x9
  411fe8:	push   eax
  411fe9:	pop    ebx
  411fea:	daa    
  411feb:	or     dl,BYTE PTR [eax-0x7176999a]
  411ff1:	mov    dh,0x9a
  411ff3:	inc    eax
  411ff4:	add    ah,BYTE PTR [edi+0x6f]
  411ff7:	and    BYTE PTR [ebp+0x10],dl
  411ffa:	xchg   ebp,eax
  411ffb:	jo     0x41200d
  411ffd:	(bad)  
  411fff:	imul   esp,DWORD PTR [edi+0x414df9d8],0xadd20a22
  412009:	cdq    
  41200a:	inc    eax
  41200b:	leave  
  41200c:	pop    esi
  41200d:	xchg   edi,eax
  41200e:	mov    ebx,0xfdeefd02
  412013:	mov    DWORD PTR [ebx-0x5d],esp
  412016:	fadd   st(2),st
  412018:	(bad)  
  412019:	xchg   esp,eax
  41201a:	sub    BYTE PTR [edi],0xe4
  41201d:	lods   al,BYTE PTR ds:[esi]
  41201e:	out    0x31,eax
  412020:	rcr    DWORD PTR [ecx+ebp*1-0x7],0x95
  412025:	shl    DWORD PTR [eax-0x2c],1
  412028:	xor    ah,BYTE PTR [eax]
  41202a:	lods   eax,DWORD PTR ds:[esi]
  41202b:	jno    0x411ff0
  41202d:	jbe    0x412030
  41202f:	sub    al,0x87
  412031:	sbb    bh,BYTE PTR [edi]
  412033:	jb     0x412013
  412035:	leave  
  412036:	pop    ebp
  412037:	push   0xb7895cbc
  41203c:	inc    edi
  41203d:	outs   dx,DWORD PTR ds:[esi]
  41203e:	ret    
  41203f:	daa    
  412040:	sar    BYTE PTR [ebp+0x7c4213a],cl
  412046:	mov    ah,0x99
  412048:	ss adc al,0xcb
  41204b:	mov    dl,0x88
  41204d:	jnp    0x411ffa
  41204f:	push   cs
  412050:	(bad)  
  412051:	rep lods eax,DWORD PTR ds:[esi]
  412053:	popf   
  412054:	dec    edi
  412055:	cmp    esi,esp
  412057:	sbb    dl,ch
  412059:	push   cs
  41205a:	mov    ecx,0x31547bee
  41205f:	stos   BYTE PTR es:[edi],al
  412060:	jne    0x411fec
  412062:	sub    eax,0x5da84090
  412067:	jns    0x4120d0
  412069:	sti    
  41206a:	es inc esi
  41206c:	hlt    
  41206d:	and    eax,DWORD PTR [ebp+0x5541c20]
  412073:	int    0x9b
  412075:	cmp    BYTE PTR [ebx+eax*8-0x44],cl
  412079:	inc    esp
  41207a:	xor    eax,0x85f84794
  41207f:	popa   
  412080:	jmp    0x1dc0280a
  412085:	stos   DWORD PTR es:[edi],eax
  412086:	add    DWORD PTR ds:0x2124e7a1,esi
  41208c:	push   0x222c2cb1
  412091:	mov    ds:0xf76cf245,eax
  412096:	or     eax,0xe370b8d3
  41209b:	fsubr  st,st(0)
  41209d:	and    edx,ecx
  41209f:	mov    edi,edi
  4120a1:	das    
  4120a2:	fdivr  QWORD PTR [edx+0x51]
  4120a5:	out    dx,al
  4120a6:	sar    BYTE PTR [esi],cl
  4120a8:	ins    BYTE PTR es:[edi],dx
  4120a9:	pop    ss
  4120aa:	test   BYTE PTR [edi+0x54a8701],cl
  4120b0:	cmp    bh,BYTE PTR [ebx]
  4120b2:	and    bl,0xda
  4120b5:	ss fcomip st,st(0)
  4120b8:	shr    BYTE PTR [ecx],1
  4120ba:	and    DWORD PTR [edi],edx
  4120bc:	cdq    
  4120bd:	outs   dx,DWORD PTR ds:[esi]
  4120be:	(bad)  
  4120bf:	mov    WORD PTR [esi],gs
  4120c1:	(bad)  
  4120c2:	fwait
  4120c3:	push   ecx
  4120c4:	call   0xa798:0x2bfcee13
  4120cb:	fidivr WORD PTR [esi+0xa365b0c]
  4120d1:	xchg   esp,eax
  4120d2:	adc    eax,0x58924d1c
  4120d7:	and    esi,0xffffff83
  4120da:	std    
  4120db:	pop    ebp
  4120dc:	xchg   ebp,eax
  4120dd:	and    ebx,ebp
  4120df:	jmp    0x99f008e6
  4120e4:	adc    esp,DWORD PTR [edi+0x435697f1]
  4120ea:	jge    0x4120fe
  4120ec:	cmp    ecx,DWORD PTR [esi-0x70]
  4120ef:	lds    edx,FWORD PTR [ebp-0x9]
  4120f2:	dec    esp
  4120f3:	mov    ah,0xd2
  4120f5:	pop    es
  4120f6:	jecxz  0x412131
  4120f8:	dec    eax
  4120f9:	xchg   esp,eax
  4120fa:	push   eax
  4120fb:	cmc    
  4120fc:	sahf   
  4120fd:	out    dx,al
  4120fe:	inc    edi
  4120ff:	dec    ecx
  412100:	inc    ecx
  412101:	adc    bh,BYTE PTR [ebx+0x64]
  412104:	fs dec edx
  412106:	call   0x319273a6
  41210b:	les    ebx,FWORD PTR [ebx-0x190c2afb]
  412111:	dec    ebx
  412112:	mov    dh,0xc2
  412114:	xchg   ecx,eax
  412115:	xor    BYTE PTR [ecx-0x45b91abb],cl
  41211b:	les    esp,FWORD PTR [edi]
  41211d:	enter  0x3280,0xf7
  412121:	sub    dh,ch
  412123:	das    
  412124:	push   ecx
  412125:	jmp    0xb861:0x96dca767
  41212c:	adc    ebp,DWORD PTR es:[eax+0x78]
  412130:	sahf   
  412131:	out    0x9b,eax
  412133:	pop    ss
  412134:	ja     0x412174
  412136:	mov    ecx,0xf5f323e9
  41213b:	lods   al,BYTE PTR ds:[esi]
  41213c:	enter  0xdbb7,0x2c
  412140:	cmp    al,0x12
  412142:	inc    ecx
  412143:	loopne 0x412109
  412145:	lea    ebx,[ebx]
  412147:	dec    esp
  412148:	xchg   ecx,eax
  412149:	shl    BYTE PTR [ebp+0x4e5a8518],0xce
  412150:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  412152:	je     0x412195
  412154:	pop    edi
  412155:	add    dh,al
  412157:	push   ss
  412158:	clc    
  412159:	fdiv   DWORD PTR ss:[ebx-0x2f605995]
  412160:	add    BYTE PTR [edi],bh
  412162:	cmp    al,BYTE PTR [ebx+0x66b01de5]
  412168:	dec    edx
  412169:	mov    bh,0x62
  41216b:	inc    edx
  41216c:	outs   dx,DWORD PTR ds:[esi]
  41216d:	or     al,dh
  41216f:	stos   BYTE PTR es:[edi],al
  412170:	ficomp WORD PTR [ebx-0x1f]
  412173:	retf   0x6de3
  412176:	cli    
  412177:	add    al,0x87
  412179:	mul    BYTE PTR [ecx-0x70f0d157]
  41217f:	adc    dl,BYTE PTR [ebx+ebp*2]
  412182:	xchg   esp,eax
  412183:	mov    edi,0x4175db16
  412188:	jge    0x41217d
  41218a:	das    
  41218b:	out    0x95,eax
  41218d:	sbb    DWORD PTR [edi+0x72111add],edx
  412193:	add    ah,BYTE PTR [eax]
  412195:	adc    BYTE PTR [ebx+0x1a],dh
  412198:	inc    DWORD PTR [ecx]
  41219a:	xchg   esi,eax
  41219b:	fst    QWORD PTR [edi+0x26]
  41219e:	push   esi
  41219f:	xchg   esp,eax
  4121a0:	push   ebp
  4121a1:	jne    0x4121c4
  4121a3:	(bad)  
  4121a5:	adc    ch,cl
  4121a7:	push   0xe72059f1
  4121ac:	outs   dx,DWORD PTR ds:[esi]
  4121ad:	mov    eax,ds:0xad910bd7
  4121b2:	mov    cs,WORD PTR [esi+0x69ca92bc]
  4121b8:	jle    0x412184
  4121ba:	add    eax,0x6de15fd7
  4121bf:	dec    ebx
  4121c0:	add    al,bl
  4121c2:	outs   dx,BYTE PTR ds:[esi]
  4121c3:	sub    al,BYTE PTR [esp+eiz*2-0x3b]
  4121c7:	sbb    eax,0x3cd81b7c
  4121cc:	push   es
  4121cd:	push   ss
  4121ce:	dec    edi
  4121cf:	imul   edx,DWORD PTR [eax+0x3f797ac5],0x4
  4121d6:	xchg   BYTE PTR [eax],al
  4121d8:	icebp  
  4121d9:	mov    eax,ds:0x20532822
  4121de:	xchg   ecx,eax
  4121df:	sub    al,0xae
  4121e1:	cmp    ebp,DWORD PTR [ebp-0x2a]
  4121e4:	sti    
  4121e5:	cld    
  4121e6:	adc    al,0xe
  4121e8:	cmp    BYTE PTR [eax+ecx*1+0x10],ch
  4121ec:	and    DWORD PTR [ecx+0xc],0x32b9b310
  4121f3:	jne    0x4121c2
  4121f5:	jp     0x4121bd
  4121f7:	les    ebp,FWORD PTR [edx+0x3e325434]
  4121fd:	sub    DWORD PTR [edi+0x27964bcf],edi
  412203:	mov    al,0x84
  412205:	call   0x2f67:0x3c5dcc58
  41220c:	inc    edx
  41220d:	ins    BYTE PTR es:[edi],dx
  41220e:	inc    ecx
  41220f:	cmp    BYTE PTR ds:0x97b4eec9,bh
  412215:	adc    cl,bh
  412217:	mov    bh,0x52
  412219:	stos   BYTE PTR es:[edi],al
  41221a:	das    
  41221b:	inc    edx
  41221c:	es pop ds
  41221e:	outs   dx,BYTE PTR ds:[esi]
  41221f:	arpl   bp,cx
  412221:	push   0xfffffff2
  412223:	scas   al,BYTE PTR es:[edi]
  412224:	push   0x41
  412226:	pushf  
  412227:	xor    DWORD PTR [esi],edi
  412229:	(bad)  [edi+0x16c2c949]
  41222f:	adc    DWORD PTR [esi-0x4c7667bd],ebx
  412235:	cli    
  412236:	mov    esi,0x92fa4984
  41223b:	push   ebx
  41223d:	lahf   
  41223e:	(bad)  
  41223f:	(bad)  
  412241:	js     0x4121d5
  412243:	sub    bl,dl
  412245:	mov    bl,0x59
  412247:	popa   
  412248:	xchg   esp,eax
  412249:	sub    ecx,DWORD PTR [eax-0x11bda86a]
  41224f:	in     al,dx
  412250:	loope  0x4121ff
  412252:	mov    ch,0xa4
  412254:	mov    ah,0xeb
  412256:	test   edx,0xdf78c04f
  41225c:	sub    ecx,DWORD PTR [esi]
  41225e:	add    ah,bh
  412260:	dec    esi
  412261:	iret   
  412262:	pop    edi
  412263:	aam    0x9e
  412265:	xor    DWORD PTR [ebx-0x3dafb07a],edi
  41226b:	cmp    ecx,DWORD PTR [ecx+0x51]
  41226e:	xchg   ebx,eax
  41226f:	nop
  412270:	push   0xb328b9f2
  412275:	aad    0xd4
  412277:	xor    al,0x46
  412279:	enter  0x63be,0x40
  41227d:	dec    edx
  41227e:	aas    
  41227f:	dec    esi
  412280:	scas   al,BYTE PTR es:[edi]
  412281:	aam    0xe6
  412283:	icebp  
  412284:	jle    0x412206
  412286:	mov    ecx,0x23795e43
  41228b:	dec    eax
  41228c:	fnsave [ebp-0x3c]
  41228f:	jmp    DWORD PTR [edx-0x67]
  412292:	xor    ebx,ebp
  412294:	es or  eax,0x712b6a28
  41229a:	mov    ds:0x8c7ac25f,eax
  41229f:	sahf   
  4122a0:	xchg   ecx,eax
  4122a1:	jp     0x4122bb
  4122a3:	push   es
  4122a4:	and    edx,esi
  4122a6:	adc    bl,bl
  4122a8:	loope  0x4122dc
  4122aa:	ret    0xf345
  4122ad:	adc    eax,0x5de324b0
  4122b3:	shr    BYTE PTR [esi-0x3d],cl
  4122b6:	mov    ds:0x47156a09,al
  4122bb:	mov    dh,0x5f
  4122bd:	inc    ebp
  4122be:	aam    0x15
  4122c0:	mov    al,0xb
  4122c2:	adc    al,0xa0
  4122c4:	xor    eax,0x1a29c33d
  4122c9:	and    eax,0xb7c5b7c
  4122ce:	les    esi,FWORD PTR [esi]
  4122d0:	xor    edx,DWORD PTR [edx-0x5f]
  4122d3:	add    al,0x4f
  4122d5:	push   ss
  4122d6:	test   ah,bl
  4122d8:	adc    cl,dl
  4122da:	iret   
  4122db:	push   ds
  4122dc:	call   0x5f98:0x90794029
  4122e3:	mov    esp,0xd9283dc7
  4122e8:	mov    ds:0x995328a9,al
  4122ed:	jno    0x4122b7
  4122ef:	test   BYTE PTR [ebx],ch
  4122f1:	shr    BYTE PTR [ebp+0x6b],cl
  4122f4:	retf   0x81b4
  4122f7:	add    al,0xaf
  4122f9:	sub    bl,BYTE PTR [esi]
  4122fb:	sub    eax,0x7f64275d
  412300:	adc    BYTE PTR [eax],0xac
  412303:	xor    dl,BYTE PTR [esi+0x2f3d1c88]
  412309:	test   ebp,ebp
  41230b:	loop   0x4122f1
  41230d:	xor    al,0x15
  41230f:	adc    eax,0x40c65630
  412314:	cli    
  412315:	dec    edi
  412316:	dec    edx
  412317:	sti    
  412318:	or     eax,0xe9402d0c
  41231d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41231e:	je     0x412372
  412320:	and    dh,BYTE PTR [ebx+0x2b]
  412323:	dec    eax
  412324:	sbb    BYTE PTR [ecx+ebx*4],0x55
  412328:	dec    ebx
  412329:	push   ebp
  41232a:	(bad)  
  41232b:	shl    BYTE PTR [ebx-0x2b],cl
  41232e:	outs   dx,DWORD PTR ds:[esi]
  41232f:	jl     0x412312
  412331:	outs   dx,DWORD PTR ds:[esi]
  412332:	sbb    al,0xaa
  412334:	cmp    eax,0xf8eab455
  412339:	(bad)  
  41233b:	(bad)  
  41233c:	push   edi
  41233d:	enter  0x272d,0xfa
  412341:	inc    ebx
  412342:	popa   
  412343:	xor    al,0x1
  412345:	int    0x2c
  412347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412348:	out    dx,al
  412349:	xchg   edi,eax
  41234a:	xor    BYTE PTR [ebx+0x48debb8d],dh
  412350:	push   ecx
  412351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412352:	cld    
  412353:	adc    bh,BYTE PTR [ecx+0x590ac54e]
  412359:	daa    
  41235a:	jae    0x412302
  41235c:	(bad)  
  41235d:	push   DWORD PTR ds:0xd61ea340
  412363:	add    ah,dl
  412365:	mov    eax,esi
  412367:	xchg   edi,eax
  412368:	in     eax,dx
  412369:	xchg   DWORD PTR [edi+0x33a58dd2],edx
  41236f:	aaa    
  412370:	std    
  412371:	lock or al,0x81
  412374:	call   0x2944:0xdea26a7d
  41237b:	xchg   ebx,eax
  41237c:	call   0x4bf3:0x6295954f
  412383:	test   eax,0x4631974e
  412388:	call   0xbc5a:0x744754ae
  41238f:	xchg   edx,eax
  412390:	and    al,0x50
  412392:	mov    esi,0x22926d78
  412397:	icebp  
  412398:	sbb    al,0x41
  41239a:	es (bad) 
  41239c:	retf   
  41239d:	out    dx,al
  41239e:	jno    0x412396
  4123a0:	adc    BYTE PTR [edi+0x27],ch
  4123a3:	fst    QWORD PTR ds:0x1b46cb35
  4123a9:	hlt    
  4123aa:	pop    ds
  4123ab:	xchg   edx,eax
  4123ac:	mov    dl,0x91
  4123ae:	adc    eax,0xa8b98b4c
  4123b3:	inc    ebp
  4123b4:	inc    edx
  4123b5:	mov    esp,0x2c535b33
  4123ba:	push   ecx
  4123bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123bc:	pusha  
  4123bd:	pop    edi
  4123be:	push   esi
  4123bf:	dec    ebp
  4123c0:	add    eax,0xc393e4b2
  4123c5:	das    
  4123c6:	pop    esp
  4123c7:	dec    eax
  4123c8:	stc    
  4123c9:	mov    BYTE PTR [esi+0x14],0xf2
  4123cd:	adc    DWORD PTR [edx],esp
  4123cf:	sbb    bh,BYTE PTR [ecx]
  4123d1:	adc    BYTE PTR [esi-0x11],dl
  4123d4:	sbb    ecx,DWORD PTR [edi]
  4123d6:	pop    esp
  4123d7:	inc    ecx
  4123d8:	outs   dx,BYTE PTR ds:[esi]
  4123d9:	aad    0xa
  4123db:	mov    ah,BYTE PTR [esi]
  4123dd:	adc    edi,DWORD PTR [esi+esi*8]
  4123e0:	pop    ds
  4123e1:	daa    
  4123e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123e3:	and    BYTE PTR [ecx+0x50],0x28
  4123e7:	xchg   BYTE PTR [eax],ah
  4123e9:	cwde   
  4123ea:	aaa    
  4123eb:	push   ebp
  4123ec:	loop   0x41241e
  4123ee:	sub    eax,0x29957c5a
  4123f3:	add    BYTE PTR [ecx-0x3a],dl
  4123f6:	cmp    BYTE PTR [edi+0x30],bl
  4123f9:	push   0x75c0d279
  4123fe:	jne    0x412409
  412400:	xchg   edx,eax
  412401:	retf   
  412402:	sub    eax,0x524ad803
  412407:	sar    BYTE PTR [edi+0x2],0x3a
  41240b:	repz icebp 
  41240d:	call   0x3c5b:0xf9494b48
  412414:	cmp    BYTE PTR [ebp+0x14d69b54],al
  41241a:	mov    esi,0x82374eb8
  41241f:	shr    BYTE PTR [edi+esi*8-0x17],cl
  412423:	inc    ecx
  412424:	adc    al,0x96
  412426:	cs out dx,al
  412428:	adc    bl,BYTE PTR [edx+0x34]
  41242b:	and    BYTE PTR [edx],bl
  41242d:	cmp    ecx,ecx
  41242f:	mov    ebp,0xbcb9e8ac
  412434:	or     bl,BYTE PTR [ecx]
  412436:	dec    eax
  412437:	lock xchg DWORD PTR [edi-0x58],esi
  41243b:	pop    edi
  41243c:	or     ch,BYTE PTR [esi]
  41243e:	cld    
  41243f:	cmp    BYTE PTR [esi],0x4c
  412442:	sub    al,0x60
  412444:	inc    esi
  412445:	sbb    ebx,edx
  412447:	data16 xor al,0xc9
  41244a:	mov    ds:0xc7e13a4e,eax
  41244f:	dec    ecx
  412450:	retf   
  412451:	mov    al,ds:0xe875e825
  412456:	mov    ah,0xda
  412458:	and    eax,0x9246a4a
  41245d:	sahf   
  41245e:	dec    eax
  41245f:	setne  BYTE PTR [eax-0x2e6e66cd]
  412466:	mov    dl,0x12
  412468:	bound  edx,QWORD PTR [ebp+0x61]
  41246b:	add    eax,esp
  41246d:	xor    BYTE PTR [edi-0xc4446e4],dh
  412473:	xor    BYTE PTR [eax+0x7223cc64],ch
  412479:	stc    
  41247a:	dec    edx
  41247b:	(bad)  
  41247d:	adc    esi,0xc93223c5
  412483:	ja     0x412456
  412485:	ficom  WORD PTR ds:0xb8519a31
  41248b:	jmp    0x41248f
  41248d:	dec    edx
  41248e:	dec    esi
  41248f:	repnz cmp cl,BYTE PTR [esi]
  412492:	dec    esp
  412493:	mov    WORD PTR [edi+0x7726e67f],cs
  412499:	stos   DWORD PTR es:[edi],eax
  41249a:	stos   BYTE PTR es:[edi],al
  41249b:	rcl    DWORD PTR [edi-0x65],0xd
  41249f:	fdiv   QWORD PTR ds:0xa66cd78e
  4124a5:	clc    
  4124a6:	jmp    0xc34adb66
  4124ab:	xchg   esi,eax
  4124ac:	mov    bh,0x64
  4124ae:	xchg   ebp,eax
  4124af:	and    eax,0x2924e9f2
  4124b4:	sub    bh,BYTE PTR [edx]
  4124b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124b7:	sar    DWORD PTR [ebx+0x16187236],0x6c
  4124be:	mov    cl,0xaf
  4124c0:	out    dx,al
  4124c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124c2:	test   DWORD PTR [esi],eax
  4124c4:	cmp    eax,0xcb9d3ae6
  4124c9:	pushf  
  4124ca:	int3   
  4124cb:	out    0x23,al
  4124cd:	inc    edx
  4124ce:	sbb    al,0x4d
  4124d0:	push   ecx
  4124d1:	push   ds
  4124d2:	lds    esi,FWORD PTR cs:[edx+0x4c]
  4124d6:	sbb    dh,BYTE PTR [edx+0x67298ad3]
  4124dc:	adc    eax,0x21b9a55
  4124e1:	aas    
  4124e2:	pop    ecx
  4124e3:	sub    al,0x76
  4124e5:	in     al,dx
  4124e6:	bound  ecx,QWORD PTR [eax]
  4124e8:	outs   dx,BYTE PTR ds:[esi]
  4124e9:	mov    bh,0xfd
  4124eb:	add    al,0x1c
  4124ed:	mov    eax,0xa7ac4560
  4124f2:	xor    al,0x8d
  4124f4:	dec    ecx
  4124f5:	loopne 0x412501
  4124f7:	cmp    ecx,DWORD PTR [eax+0x4e]
  4124fa:	adc    dh,BYTE PTR [eax]
  4124fc:	cmp    BYTE PTR [ebp+ecx*2+0xeb47ba1],dl
  412503:	shl    DWORD PTR [edx+0x7c44a441],1
  412509:	out    0xbe,eax
  41250b:	jle    0x41252b
  41250d:	into   
  41250e:	out    dx,al
  41250f:	call   0x4f8f2f96
  412514:	test   BYTE PTR [edi],bh
  412516:	mov    esi,0xce67ddb2
  41251b:	test   BYTE PTR [eax+edi*1],bl
  41251e:	test   bh,0x39
  412521:	test   DWORD PTR [eax+ecx*2-0x5f190dd],eax
  412528:	mov    dl,0x45
  41252a:	nop
  41252b:	xchg   esp,eax
  41252c:	push   ds
  41252d:	ret    
  41252e:	sbb    esi,ebx
  412530:	or     cl,BYTE PTR [esi-0x42]
  412533:	push   ds
  412534:	dec    esi
  412535:	das    
  412536:	(bad)  [eax-0x71]
  412539:	ss push edi
  41253b:	adc    al,0x23
  41253d:	mov    bh,0x32
  41253f:	or     eax,0x950f7a2f
  412544:	dec    edx
  412545:	mov    dh,0x54
  412547:	xor    bh,BYTE PTR [ebp-0x2f]
  41254a:	xchg   edx,eax
  41254b:	sahf   
  41254c:	iret   
  41254d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41254e:	lds    ebx,FWORD PTR [esp+eiz*8+0x4e]
  412552:	xchg   edx,eax
  412553:	popa   
  412554:	mov    eax,ds:0x90f515fe
  412559:	jg     0x412587
  41255b:	pop    edx
  41255c:	dec    eax
  41255d:	fiadd  WORD PTR [edx+0x70]
  412560:	dec    ecx
  412561:	push   ecx
  412562:	push   es
  412563:	clc    
  412564:	pop    ebx
  412565:	jmp    0xbaf2:0x7c684a6d
  41256c:	xchg   esp,eax
  41256d:	jg     0x412521
  41256f:	aad    0x89
  412571:	cs dec edi
  412573:	push   esi
  412574:	repnz and al,BYTE PTR [edx]
  412577:	in     al,0xb4
  412579:	xchg   BYTE PTR [edi+0x44368a38],bh
  41257f:	and    BYTE PTR [ecx],ch
  412581:	push   esi
  412582:	mov    eax,ds:0xd9234f9
  412587:	in     eax,dx
  412588:	stos   DWORD PTR es:[edi],eax
  412589:	jae    0x412583
  41258b:	outs   dx,DWORD PTR ds:[esi]
  41258c:	xor    ch,BYTE PTR [edi-0x2f803685]
  412592:	jmpw   0xa90c
  412596:	test   BYTE PTR [edx+0x3500fce3],dh
  41259c:	shr    BYTE PTR es:[eax-0x8],1
  4125a0:	js     0x412540
  4125a2:	add    al,0x61
  4125a4:	add    DWORD PTR [ecx+0xb46e859],ebp
  4125aa:	adc    eax,0x289c2890
  4125af:	mov    al,0x36
  4125b1:	pusha  
  4125b2:	xor    BYTE PTR ds:0xaa9bd8b1,ch
  4125b8:	xchg   edx,eax
  4125b9:	ds pop ds
  4125bb:	imul   esp,DWORD PTR [ebx-0x5],0x162880ed
  4125c2:	xchg   BYTE PTR [edx+0x70],dh
  4125c5:	mov    eax,ds:0xa6408fbd
  4125ca:	or     ecx,ecx
  4125cc:	cdq    
  4125cd:	and    eax,0x5c555bec
  4125d2:	retf   
  4125d3:	mov    ecx,0x1ffbb38c
  4125d8:	cmp    al,0x2
  4125da:	pop    sp
  4125dc:	inc    esp
  4125dd:	jmp    DWORD PTR [ebp-0x4c5f673e]
  4125e3:	dec    ebp
  4125e4:	mov    BYTE PTR [ecx],ah
  4125e6:	int    0x37
  4125e8:	add    ebp,esp
  4125ea:	mov    ds:0xdd95a841,al
  4125ef:	push   0x67
  4125f1:	mov    ds:0xbcd1c453,eax
  4125f6:	sub    DWORD PTR [esi+0x5f1d1b6f],edi
  4125fc:	je     0x4125a6
  4125fe:	in     eax,0x44
  412600:	adc    DWORD PTR [edi],ebx
  412602:	repz push ebp
  412604:	rcr    BYTE PTR [esi+0x5145dc9b],1
  41260a:	mov    esi,es
  41260c:	mov    cl,0x63
  41260e:	test   al,0x10
  412610:	cdq    
  412611:	xor    ebx,edx
  412613:	and    DWORD PTR [ebp+0x2a718ef5],edx
  412619:	mov    ecx,0xb665b410
  41261e:	ret    0x60a9
  412621:	lock push edx
  412623:	adc    edx,DWORD PTR [ecx]
  412625:	imul   esi,eax,0xffffffe4
  412628:	ret    
  412629:	cmp    eax,0xc8bc9a8c
  41262e:	loop   0x4125cb
  412630:	fiadd  WORD PTR ds:0x5adac6f7
  412636:	dec    ebp
  412637:	mov    cl,0xd1
  412639:	pop    edi
  41263a:	cmp    eax,0x8996a4e2
  41263f:	and    dh,BYTE PTR [ecx]
  412641:	sub    ebp,eax
  412643:	push   0x48
  412645:	and    eax,0xc9464cd1
  41264a:	sahf   
  41264b:	popa   
  41264c:	and    eax,0x2f2695c
  412651:	aas    
  412652:	add    edx,DWORD PTR [ebx]
  412654:	dec    ebx
  412655:	loopne 0x41262c
  412657:	sub    al,BYTE PTR [ecx-0x66778a5a]
  41265d:	add    esp,DWORD PTR [edx]
  41265f:	or     DWORD PTR [edi+0x3afef134],0x1a903e28
  412669:	cwde   
  41266a:	push   ecx
  41266b:	jne    0x4126d1
  41266d:	dec    edi
  41266e:	jecxz  0x41261a
  412670:	ror    BYTE PTR [esi],cl
  412672:	rol    DWORD PTR [ecx-0xaf240b0],1
  412678:	jg     0x4125fb
  41267a:	imul   eax,DWORD PTR [edi+0x53731cad],0x39
  412681:	xor    ebx,DWORD PTR [ecx+0x51]
  412684:	xor    BYTE PTR [edi+0x7b],0x2b
  412688:	(bad)  
  412689:	loop   0x412666
  41268b:	ss pusha 
  41268d:	(bad)  
  41268e:	push   ds
  41268f:	xor    bh,BYTE PTR [ecx-0x77caeb97]
  412695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412696:	enter  0xeb5f,0xce
  41269a:	adc    DWORD PTR [ebx+eax*1+0x7450f23b],0x4d
  4126a2:	(bad)  
  4126a3:	jp     0x412672
  4126a5:	sub    eax,0x8ef9d813
  4126aa:	mov    ds:0x39c028e1,al
  4126af:	cli    
  4126b0:	pop    ebp
  4126b1:	xchg   dl,ch
  4126b3:	sbb    eax,0x2d236576
  4126b8:	out    0x74,al
  4126ba:	(bad)  
  4126bb:	jnp    0x4126d1
  4126bd:	scas   eax,DWORD PTR es:[edi]
  4126be:	rcl    DWORD PTR [esi-0x11d99462],1
  4126c4:	popa   
  4126c5:	or     al,0xff
  4126c7:	in     al,dx
  4126c8:	push   0x29
  4126ca:	fsub   DWORD PTR [edi]
  4126cc:	mov    ebp,0x9725a656
  4126d1:	jp     0x412668
  4126d3:	cs stos DWORD PTR es:[edi],eax
  4126d5:	add    al,0x1c
  4126d7:	pop    eax
  4126d8:	fcmovnbe st,st(1)
  4126da:	mov    ebp,0xa8d118c3
  4126df:	add    dh,BYTE PTR [ebx+0x6817b3ea]
  4126e5:	and    al,0x5c
  4126e7:	popf   
  4126e8:	outs   dx,BYTE PTR ds:[esi]
  4126e9:	popa   
  4126ea:	dec    eax
  4126eb:	cmp    BYTE PTR [ebx],ah
  4126ed:	test   al,0x8
  4126ef:	mov    BYTE PTR [ecx-0x14],al
  4126f2:	stc    
  4126f3:	sub    eax,0x779e2598
  4126f8:	jl     0x4126c3
  4126fa:	mov    esp,0xfb45efeb
  4126ff:	(bad)  
  412701:	addr16 ja 0x412780
  412704:	imul   ebp,DWORD PTR [ebx],0xc4150371
  41270a:	inc    eax
  41270b:	push   ebp
  41270c:	mov    ch,0x7
  41270e:	add    ebp,DWORD PTR [edi]
  412710:	and    esi,DWORD PTR [edx]
  412712:	push   0xb745b19d
  412717:	fnstcw WORD PTR [edx]
  412719:	xchg   edi,eax
  41271a:	adc    al,0x9d
  41271c:	inc    ecx
  41271d:	push   esp
  41271e:	int    0x85
  412720:	adc    ebp,DWORD PTR [ebp+eiz*4-0x5]
  412724:	leave  
  412725:	mov    eax,ds:0xf283ab4f
  41272a:	push   eax
  41272b:	out    0x11,al
  41272d:	xlat   BYTE PTR ds:[ebx]
  41272e:	test   DWORD PTR [esi],eax
  412730:	pop    ebx
  412731:	and    al,0x97
  412733:	rcl    BYTE PTR [ebx-0x2a],0x85
  412737:	dec    DWORD PTR [ebx+0x7a]
  41273a:	sbb    cl,BYTE PTR [esi]
  41273c:	add    DWORD PTR [ebx-0x60003e2c],ecx
  412742:	push   ecx
  412743:	xor    eax,0x3e413d99
  412748:	ds cmc 
  41274a:	or     eax,ecx
  41274c:	in     al,dx
  41274d:	out    dx,al
  41274e:	push   ss
  41274f:	inc    ecx
  412750:	add    cl,BYTE PTR [eax-0x3e8ea144]
  412756:	sbb    ch,dl
  412758:	jae    0x41278f
  41275a:	sbb    BYTE PTR [ebx+eax*2+0x76245997],bl
  412761:	jno    0x4127cd
  412763:	clc    
  412764:	hlt    
  412765:	fs jns 0x412761
  412768:	mov    al,0x54
  41276a:	xchg   DWORD PTR [ebx-0x7edf0f63],ecx
  412770:	inc    edx
  412771:	mov    eax,ds:0xce57d1d6
  412776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412777:	mov    eax,ds:0x6fa7eed7
  41277c:	pop    esi
  41277d:	jnp    0x4127fb
  41277f:	dec    ebx
  412780:	mov    eax,ds:0x80bdf2a
  412785:	inc    ebx
  412786:	(bad)  
  412788:	fs push es
  41278a:	xchg   ebp,eax
  41278b:	bound  ecx,QWORD PTR [eax-0x77]
  41278e:	into   
  41278f:	or     ebp,DWORD PTR [ecx-0x5056aa21]
  412795:	inc    eax
  412796:	add    BYTE PTR ds:0xdfc8d630,ah
  41279c:	push   cs
  41279d:	or     al,0x9b
  41279f:	push   cs
  4127a0:	xchg   ecx,eax
  4127a1:	mov    edi,0xae1d5372
  4127a6:	sbb    al,0xfd
  4127a8:	xchg   ecx,eax
  4127a9:	loop   0x412783
  4127ab:	xor    eax,0xd3e97dea
  4127b0:	inc    esp
  4127b1:	fld    QWORD PTR [edi+0x423224de]
  4127b7:	inc    esi
  4127b8:	pop    ss
  4127b9:	xor    al,BYTE PTR [eax+0x4b3532a6]
  4127bf:	xchg   esp,eax
  4127c0:	ds out 0xe5,eax
  4127c3:	pushf  
  4127c4:	adc    eax,0x94e36143
  4127c9:	cmp    dl,BYTE PTR [edx+0x3a8a53f9]
  4127cf:	test   eax,0x739cc075
  4127d4:	inc    edx
  4127d5:	test   al,0xa9
  4127d7:	jl     0x4127a7
  4127d9:	sub    bh,dl
  4127db:	cld    
  4127dc:	sub    BYTE PTR [ecx+ebp*1-0x2a6b0fbd],0x95
  4127e4:	cmp    bh,BYTE PTR [ebp+eiz*4+0x66]
  4127e8:	xchg   esp,eax
  4127e9:	(bad)  
  4127ea:	jae    0x41281f
  4127ec:	xchg   BYTE PTR [ecx+0x4e884fa1],dl
  4127f2:	xchg   ecx,eax
  4127f3:	int3   
  4127f4:	pop    ss
  4127f5:	clc    
  4127f6:	pop    es
  4127f7:	aas    
  4127f8:	dec    eax
  4127f9:	test   DWORD PTR [esi+0x4e],0x7289b7fc
  412800:	(bad)  
  412801:	stc    
  412802:	mov    al,ds:0x16ae18d0
  412807:	lods   al,BYTE PTR ds:[esi]
  412808:	xor    esp,DWORD PTR [edi]
  41280a:	xor    al,0xe2
  41280c:	ss aas 
  41280e:	rcr    BYTE PTR [edx-0x41a0f145],0xd
  412815:	mov    bl,0x67
  412817:	jnp    0x41284b
  412819:	imul   eax,eax,0xfffffff3
  41281c:	add    DWORD PTR [ebx-0x67],esp
  41281f:	jbe    0x4127e4
  412821:	leave  
  412822:	mov    bh,0xb8
  412824:	cmp    BYTE PTR ds:0x34e3ee43,al
  41282a:	jmp    0xa576:0x1906abb7
  412831:	jne    0x4127bf
  412833:	mov    edx,0xcd5a99df
  412838:	cmp    edx,DWORD PTR [edi-0x27]
  41283b:	(bad)  
  41283c:	fcmove st,st(4)
  41283e:	jmp    0x1ec65962
  412843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412844:	(bad)  
  412845:	arpl   WORD PTR [ecx],dx
  412847:	inc    esp
  412848:	lods   eax,DWORD PTR ds:[esi]
  412849:	mov    al,0xa9
  41284b:	(bad)  
  41284d:	cld    
  41284e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41284f:	xor    BYTE PTR [edi+ebx*8+0x5a7f9818],0x59
  412857:	fs sub eax,0x1b400ff
  41285d:	jae    0x4128b1
  41285f:	xor    BYTE PTR [ebx-0x3bb9ffc1],ah
  412865:	sub    DWORD PTR [ebx],ebp
  412867:	ficom  DWORD PTR [ebx+0x14011f15]
  41286d:	pop    eax
  41286e:	ficomp WORD PTR [eax]
  412870:	mov    ebx,0x3fcc44f2
  412875:	jbe    0x4128a3
  412877:	leave  
  412878:	addr16 (bad) 
  41287b:	jnp    0x4128d6
  41287d:	or     al,0xe7
  41287f:	fisttp QWORD PTR [edi+0x10]
  412882:	dec    edx
  412883:	popa   
  412884:	bound  eax,QWORD PTR [edx+0x27]
  412887:	mov    ds:0x72ac3b28,eax
  41288c:	sahf   
  41288d:	mov    bl,0xda
  41288f:	push   cs
  412890:	idiv   BYTE PTR [esi-0x49]
  412893:	pusha  
  412894:	retf   0x3779
  412897:	addr16 jo 0x412872
  41289a:	jb     0x412869
  41289c:	inc    ebx
  41289d:	scas   eax,DWORD PTR es:[edi]
  41289e:	jbe    0x412825
  4128a0:	xor    DWORD PTR ds:0xbab3c7e2,ecx
  4128a6:	push   0xa20dad73
  4128ab:	call   0xd2a5e0df
  4128b0:	and    BYTE PTR [eax-0x218cb444],dl
  4128b6:	in     al,0x5e
  4128b8:	push   ss
  4128b9:	scas   eax,DWORD PTR es:[edi]
  4128ba:	loopne 0x4128e8
  4128bc:	in     al,dx
  4128bd:	xor    edi,DWORD PTR [ebp+0x27]
  4128c0:	mov    ebx,0xcceb5c6
  4128c5:	push   0x17
  4128c7:	in     eax,dx
  4128c8:	adc    DWORD PTR ds:0x9afe3390,ecx
  4128ce:	std    
  4128cf:	bnd jnp 0x412871
  4128d2:	push   eax
  4128d3:	pop    edi
  4128d4:	int3   
  4128d5:	shl    edi,cl
  4128d7:	xchg   ebp,eax
  4128d8:	and    eax,0x52ddb5e4
  4128dd:	js     0x4128ff
  4128df:	jae    0x4128dc
  4128e1:	jge    0x4128f1
  4128e3:	sub    DWORD PTR [edi],0xc95f1607
  4128e9:	or     DWORD PTR [edi+edi*2],ebp
  4128ec:	pop    eax
  4128ed:	push   0x1e05d415
  4128f2:	cli    
  4128f3:	fstp   QWORD PTR [eax+0x39]
  4128f6:	xchg   DWORD PTR [edx+esi*1],ebx
  4128f9:	sub    dh,BYTE PTR [edi+0x7c]
  4128fc:	add    bl,0x36
  4128ff:	popa   
  412900:	add    BYTE PTR [edx+0x3f0769c9],cl
  412906:	test   BYTE PTR [ebp-0x1c],ah
  412909:	shr    DWORD PTR [ebp+0x40],1
  41290c:	pop    ebp
  41290d:	xor    ebp,DWORD PTR [ebp-0x6a]
  412910:	inc    esi
  412911:	jmp    0x3ccb:0x87f7574b
  412918:	loopne 0x4128c0
  41291a:	push   cs
  41291b:	(bad)  
  41291c:	or     BYTE PTR [edi+eiz*8],bl
  41291f:	dec    edi
  412920:	clc    
  412921:	rcl    BYTE PTR [edi-0x15b1871],cl
  412927:	aaa    
  412928:	mov    ah,0x9f
  41292a:	dec    edi
  41292b:	pop    ebp
  41292c:	aaa    
  41292d:	inc    eax
  41292e:	or     BYTE PTR [esi-0x13ccbc5e],bh
  412934:	inc    edx
  412935:	fsubr  QWORD PTR [esi+0x44b4ea68]
  41293b:	cdq    
  41293c:	stc    
  41293d:	fmul   st,st(5)
  41293f:	inc    ecx
  412940:	(bad)  
  412941:	adc    eax,0xe098e133
  412946:	jae    0x4129ba
  412948:	pop    edx
  412949:	dec    edi
  41294a:	dec    BYTE PTR [ebx+0x53]
  41294d:	push   ebx
  41294e:	mov    fs,WORD PTR [ebx+0x16]
  412951:	rol    ch,0xeb
  412954:	addr16 mov al,ds:0x367
  412958:	push   ebp
  412959:	add    eax,0x313876f5
  41295e:	jb     0x412971
  412960:	(bad)  
  412961:	idiv   DWORD PTR [ecx]
  412963:	ins    BYTE PTR es:[edi],dx
  412964:	fwait
  412965:	pop    es
  412966:	stos   BYTE PTR es:[edi],al
  412967:	pop    ecx
  412968:	repz and ebp,DWORD PTR [esi-0x73]
  41296c:	imul   eax,DWORD PTR [ebp+0x39],0x6c
  412970:	cmp    eax,ebp
  412972:	out    0xf9,al
  412974:	ins    DWORD PTR es:[edi],dx
  412975:	and    BYTE PTR [ebx-0x38],ah
  412978:	adc    al,BYTE PTR [edx-0x55]
  41297b:	stos   BYTE PTR es:[edi],al
  41297c:	dec    esi
  41297d:	stc    
  41297e:	push   edi
  41297f:	mov    esi,0xaed95f72
  412984:	cmp    al,0x59
  412986:	cld    
  412987:	xchg   edx,eax
  412988:	jl     0x41297c
  41298a:	ja     0x412994
  41298c:	retf   0xb25
  41298f:	xchg   ecx,eax
  412990:	push   esi
  412991:	jbe    0x4129e1
  412993:	into   
  412994:	and    DWORD PTR [ebx+0x47],0x1d580b5d
  41299b:	in     al,dx
  41299c:	movzx  ebp,WORD PTR [edx]
  41299f:	je     0x4129d9
  4129a1:	enter  0xcfbf,0x4e
  4129a5:	inc    edi
  4129a6:	cli    
  4129a7:	and    al,0x19
  4129a9:	pusha  
  4129aa:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4129ac:	lods   eax,DWORD PTR cs:[esi]
  4129ae:	call   0x5f27:0x7af6259a
  4129b5:	xor    DWORD PTR ds:0xc03ce834,edi
  4129bb:	jmp    0x4129a3
  4129bd:	int3   
  4129be:	mul    edx
  4129c0:	int3   
  4129c1:	(bad)  
  4129c2:	jmp    0x11ac:0xdc185b5b
  4129c9:	dec    eax
  4129ca:	push   es
  4129cb:	sar    bh,cl
  4129cd:	or     al,BYTE PTR [ebx-0xf4e3e61]
  4129d3:	in     al,0x96
  4129d5:	test   BYTE PTR [esi+0x7f],al
  4129d8:	dec    esi
  4129d9:	and    eax,0x5a9ea98d
  4129de:	cli    
  4129df:	out    dx,eax
  4129e0:	cmp    edi,DWORD PTR ds:0x7bbb1925
  4129e6:	ror    BYTE PTR [ebp+0x10],1
  4129e9:	mov    cl,0x7f
  4129eb:	or     ch,BYTE PTR [ebp+0x576d9945]
  4129f1:	in     eax,0x99
  4129f3:	int    0x2d
  4129f5:	push   edx
  4129f6:	ror    DWORD PTR ds:0x734740d9,1
  4129fc:	mov    dh,0xcb
  4129fe:	es (bad) 
  412a00:	repnz add al,0xa0
  412a03:	jnp    0x4129b4
  412a05:	and    bh,BYTE PTR [edi+0x17]
  412a08:	fadd   DWORD PTR [edx-0x70]
  412a0b:	add    bl,BYTE PTR ds:0x4f7f884
  412a11:	je     0x4129fe
  412a13:	dec    esi
  412a14:	test   al,0xf5
  412a16:	call   0x10c7:0x733202de
  412a1d:	jge    0x4129d2
  412a1f:	push   esp
  412a20:	bound  ebp,QWORD PTR [edi-0x7]
  412a23:	xchg   edx,eax
  412a24:	rcl    DWORD PTR ds:0x9a07738d,0x7d
  412a2b:	iret   
  412a2c:	sub    al,0x16
  412a2e:	pushf  
  412a2f:	xor    BYTE PTR [eax+edx*8+0x235eb2c3],0xfa
  412a37:	mov    ds:0xd57c560b,eax
  412a3c:	arpl   WORD PTR [esi-0x77],di
  412a3f:	pop    esp
  412a40:	or     eax,0xbd931538
  412a45:	add    esi,esp
  412a47:	xchg   BYTE PTR ds:0xdd784321,ch
  412a4d:	mov    esp,0x626b256c
  412a52:	mov    dh,0xdd
  412a54:	aad    0x95
  412a56:	ss icebp 
  412a58:	add    edx,DWORD PTR [ebp-0x70880eed]
  412a5e:	sub    al,0x82
  412a60:	or     dl,al
  412a62:	xlat   BYTE PTR ds:[ebx]
  412a63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a64:	outs   dx,DWORD PTR ds:[esi]
  412a65:	fstp   DWORD PTR [edi+0x18]
  412a68:	inc    eax
  412a69:	adc    eax,0xa51d7c45
  412a6e:	shl    BYTE PTR [ecx-0x2f89cfcb],1
  412a74:	xchg   esp,eax
  412a75:	in     eax,0xb2
  412a77:	cmp    al,0xb3
  412a79:	or     DWORD PTR [edx],edi
  412a7b:	push   ss
  412a7c:	push   esi
  412a7d:	xchg   ecx,eax
  412a7e:	mov    dh,0x15
  412a80:	adc    DWORD PTR [ecx+0xce35116],ecx
  412a86:	mov    bh,0x83
  412a88:	pop    ecx
  412a89:	mov    DWORD PTR [eax+ecx*4-0x2880379d],ecx
  412a90:	cld    
  412a91:	test   BYTE PTR [ebx],dl
  412a93:	lods   al,BYTE PTR ds:[esi]
  412a94:	push   esp
  412a95:	(bad)  [eax]
  412a97:	cmp    esi,edi
  412a99:	bound  eax,QWORD PTR [ebx]
  412a9b:	cs int3 
  412a9d:	cmc    
  412a9e:	sub    DWORD PTR [ecx+0x2b],ebp
  412aa1:	test   ebx,0x4c893b82
  412aa7:	ficomp WORD PTR [eax+0x73]
  412aaa:	mov    bl,0x18
  412aac:	xchg   edx,eax
  412aad:	pop    esp
  412aae:	jmp    0x412a9b
  412ab0:	stos   BYTE PTR es:[edi],al
  412ab1:	adc    esi,DWORD PTR [ebp+0x4d]
  412ab4:	cmp    al,0xd3
  412ab6:	lods   al,BYTE PTR ds:[esi]
  412ab7:	arpl   WORD PTR [edi+0x3a003326],bp
  412abd:	push   ds
  412abe:	or     al,0x39
  412ac0:	pop    edx
  412ac1:	mov    esi,0xccb7434c
  412ac6:	pop    edi
  412ac7:	or     cl,BYTE PTR [eax+0x73154afa]
  412acd:	pop    ecx
  412ace:	sub    ecx,DWORD PTR [eax]
  412ad0:	mov    dl,dh
  412ad2:	mov    edx,0xf8cf7cfc
  412ad7:	push   edi
  412ad8:	cwde   
  412ad9:	scas   eax,DWORD PTR es:[edi]
  412ada:	xchg   ebx,eax
  412adb:	je     0x412b2c
  412add:	cmp    DWORD PTR [edi],edx
  412adf:	push   ebp
  412ae0:	xor    ecx,DWORD PTR [edi-0x12d2a188]
  412ae6:	sar    DWORD PTR [eax-0x13],1
  412ae9:	fisttp DWORD PTR [edi]
  412aeb:	push   edi
  412aec:	enter  0x8c7b,0x47
  412af0:	and    bh,ch
  412af2:	and    al,0x55
  412af4:	fwait
  412af5:	cdq    
  412af6:	adc    DWORD PTR [eax],ecx
  412af8:	fimul  WORD PTR [esp+ebx*8]
  412afb:	pop    es
  412afc:	mov    ebx,0x4eca55ce
  412b01:	std    
  412b02:	gs inc esp
  412b04:	and    edi,esp
  412b06:	xchg   DWORD PTR [eax],ebp
  412b08:	iret   
  412b09:	jb     0x412b57
  412b0b:	dec    edi
  412b0c:	in     eax,dx
  412b0d:	dec    ebx
  412b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b0f:	ja     0x412a92
  412b11:	sbb    ebx,DWORD PTR [esi]
  412b13:	xor    ch,0x77
  412b16:	fnstenv [eax+ecx*4]
  412b19:	iret   
  412b1a:	clc    
  412b1b:	push   ecx
  412b1c:	dec    eax
  412b1d:	push   ebx
  412b1e:	in     al,dx
  412b1f:	pop    eax
  412b20:	and    DWORD PTR [ebx],0x43992bce
  412b26:	inc    ebx
  412b27:	mov    WORD PTR [ebx+0x79765881],fs
  412b2d:	sbb    esp,eax
  412b2f:	ja     0x412b3c
  412b31:	pop    esp
  412b32:	mov    al,0x8c
  412b34:	mov    ah,0xc0
  412b36:	sbb    ecx,DWORD PTR [ebx-0x79]
  412b39:	int3   
  412b3a:	dec    BYTE PTR [edx+0x79]
  412b3d:	cdq    
  412b3e:	mov    edi,0x5b6fb2b5
  412b43:	mov    ch,0x7c
  412b45:	pop    ebp
  412b46:	mov    eax,ds:0x619454e3
  412b4b:	bnd ret 0x1ad1
  412b4f:	mov    ch,cl
  412b51:	adc    al,0x3b
  412b53:	add    al,0xe0
  412b55:	sub    ebp,ecx
  412b57:	(bad)  [esi]
  412b59:	jne    0x412bd2
  412b5b:	xchg   ebp,eax
  412b5c:	jg     0x412b1d
  412b5e:	(bad)  
  412b5f:	mov    al,ds:0xb6e5dbd8
  412b64:	inc    ecx
  412b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b66:	retf   0x8ea9
  412b69:	lock mov ebx,0x17ba1d49
  412b6f:	test   al,0x36
  412b71:	jmp    0x412b1a
  412b73:	out    dx,eax
  412b74:	adc    ecx,DWORD PTR [esi+edx*2+0x36]
  412b78:	imul   eax,eax,0xaad1f834
  412b7e:	xor    dh,BYTE PTR [edx]
  412b80:	out    0xe8,al
  412b82:	stos   DWORD PTR es:[edi],eax
  412b83:	scas   al,BYTE PTR es:[edi]
  412b84:	dec    esp
  412b85:	pop    ss
  412b86:	jbe    0x412bbd
  412b88:	out    0x96,eax
  412b8a:	stos   DWORD PTR es:[edi],eax
  412b8b:	(bad)  
  412b8c:	cmp    eax,DWORD PTR [ecx+esi*1]
  412b8f:	xor    eax,0x15442ee6
  412b94:	clc    
  412b95:	push   esi
  412b96:	mov    al,ds:0xe1cacc8
  412b9b:	sub    ecx,DWORD PTR [eax]
  412b9d:	cmp    DWORD PTR [eax-0x5a],ebp
  412ba0:	or     ebx,DWORD PTR [ebp+0xf]
  412ba3:	dec    edx
  412ba4:	fidivr DWORD PTR [edx+0x73ba815c]
  412baa:	add    eax,edi
  412bac:	xor    esp,DWORD PTR [ecx+0x40]
  412baf:	enter  0x32cb,0xd6
  412bb3:	push   ebp
  412bb4:	cmp    BYTE PTR [ecx+ebp*1+0x55d7f73b],ah
  412bbb:	xchg   ebx,eax
  412bbc:	jmp    0x89076c5e
  412bc1:	(bad)  
  412bc2:	pop    eax
  412bc3:	inc    ecx
  412bc4:	push   0xffffffb4
  412bc6:	mov    eax,ds:0x56067772
  412bcb:	push   edi
  412bcc:	push   ds
  412bcd:	jb     0x412c48
  412bcf:	jle    0x412b5c
  412bd1:	sbb    eax,0xbc9d07a3
  412bd6:	and    DWORD PTR [edx-0x47],ebp
  412bd9:	lods   al,BYTE PTR ds:[esi]
  412bda:	lds    edi,FWORD PTR [eax+0x56309166]
  412be0:	das    
  412be1:	daa    
  412be2:	xor    al,0xdf
  412be4:	lods   eax,DWORD PTR ds:[esi]
  412be5:	jo     0x412b8f
  412be7:	es addr16 dec ebp
  412bea:	sub    BYTE PTR [edx+0x78],0x1
  412bee:	dec    eax
  412bef:	xchg   ebp,eax
  412bf0:	sbb    BYTE PTR [ecx+eax*4+0x3800693c],ch
  412bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bf8:	jp     0x412bd3
  412bfa:	ins    BYTE PTR es:[edi],dx
  412bfb:	inc    edx
  412bfc:	fsub   st(1),st
  412bfe:	xlat   BYTE PTR ds:[ebx]
  412bff:	sub    dh,BYTE PTR [edx]
  412c01:	loope  0x412bea
  412c03:	dec    esi
  412c04:	ret    0x508a
  412c07:	mov    esp,0xf8e8bca0
  412c0c:	es mov dh,0x8a
  412c0f:	fwait
  412c10:	scas   al,BYTE PTR es:[edi]
  412c11:	out    dx,eax
  412c12:	rcr    BYTE PTR [eax-0x35],1
  412c15:	xor    al,0x2e
  412c17:	and    al,0x72
  412c19:	loopne 0x412c8f
  412c1b:	ret    
  412c1c:	jnp    0x412c35
  412c1e:	add    BYTE PTR [ebp+0x21],al
  412c21:	pop    edi
  412c22:	jbe    0x412bbc
  412c24:	nop
  412c25:	pop    edi
  412c26:	or     ebx,DWORD PTR [esi+0x309dd27]
  412c2c:	jns    0x412c83
  412c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c2f:	pushf  
  412c30:	retf   
  412c31:	xor    bh,BYTE PTR [edi-0x4073a7fd]
  412c37:	das    
  412c38:	adc    al,0xe8
  412c3a:	xchg   esp,eax
  412c3b:	hlt    
  412c3c:	jns    0x412c11
  412c3e:	sub    BYTE PTR [edi],al
  412c40:	jo     0x412c66
  412c42:	xor    esp,DWORD PTR [edx+0x78]
  412c45:	(bad)  
  412c46:	out    dx,eax
  412c47:	sub    eax,0xf05b74aa
  412c4c:	loope  0x412cb2
  412c4e:	push   esp
  412c4f:	push   ds
  412c50:	popf   
  412c51:	xchg   ebp,eax
  412c52:	jb     0x412c55
  412c54:	(bad)  
  412c55:	out    dx,al
  412c56:	sub    eax,0xc0b66550
  412c5b:	pop    ds
  412c5c:	cdq    
  412c5d:	sti    
  412c5e:	mov    ecx,0xedc0833c
  412c63:	push   edi
  412c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c65:	test   al,0x3e
  412c67:	sbb    eax,0x9eae31b5
  412c6c:	and    al,0x8f
  412c6e:	shl    BYTE PTR [ecx+0x42a0b3d5],cl
  412c74:	dec    esp
  412c75:	fild   WORD PTR [ecx-0x6b61fac5]
  412c7b:	fcmovnu st,st(3)
  412c7d:	or     BYTE PTR [esi-0x33],ch
  412c80:	loop   0x412cf8
  412c82:	or     edi,DWORD PTR [ebx-0x416a757e]
  412c88:	xor    al,0x5f
  412c8a:	loop   0x412c6f
  412c8c:	sub    ebp,DWORD PTR [ebp+0x25]
  412c8f:	ret    0xcdf6
  412c92:	stos   BYTE PTR es:[edi],al
  412c93:	ficomp WORD PTR [ebx]
  412c95:	outs   dx,DWORD PTR ds:[esi]
  412c96:	xchg   ecx,eax
  412c97:	in     al,dx
  412c98:	dec    ebp
  412c99:	add    ah,BYTE PTR [eax-0x386e6e6b]
  412c9f:	cmp    DWORD PTR [edx+0x5f],ebx
  412ca2:	loopne 0x412cc6
  412ca4:	push   edx
  412ca5:	fidiv  WORD PTR [ecx]
  412ca7:	push   edi
  412ca8:	mov    ds:0xc003ca83,eax
  412cad:	gs cmp eax,0x1105459f
  412cb3:	xlat   BYTE PTR ds:[ebx]
  412cb4:	test   edi,esi
  412cb6:	jmp    0xdd9c:0xc49f46bf
  412cbd:	js     0x412cb7
  412cbf:	sub    DWORD PTR [eax],ecx
  412cc1:	pusha  
  412cc2:	loopne 0x412c46
  412cc4:	xor    DWORD PTR [edi+0x54],edi
  412cc7:	loope  0x412d3a
  412cc9:	dec    ebx
  412cca:	rcr    BYTE PTR [edi],1
  412ccc:	sbb    ah,BYTE PTR [edi-0xf]
  412ccf:	pop    ebp
  412cd0:	push   edx
  412cd1:	ss int 0xd9
  412cd4:	loop   0x412c79
  412cd6:	repnz inc eax
  412cd8:	dec    eax
  412cd9:	mov    cl,0xfb
  412cdb:	mov    esp,edi
  412cdd:	cli    
  412cde:	push   esp
  412cdf:	jl     0x412d2a
  412ce1:	push   ecx
  412ce2:	add    al,0x22
  412ce4:	and    esp,DWORD PTR [esi-0x6f]
  412ce7:	ins    DWORD PTR es:[edi],dx
  412ce8:	in     al,dx
  412ce9:	cdq    
  412cea:	fcom   QWORD PTR [ebp-0x4]
  412ced:	add    al,0xa4
  412cef:	out    dx,al
  412cf0:	test   eax,0x46078973
  412cf5:	sbb    edi,DWORD PTR [esi-0x6e13000e]
  412cfb:	xchg   esp,eax
  412cfc:	pushf  
  412cfd:	and    al,0x81
  412cff:	push   es
  412d00:	loop   0x412cd6
  412d02:	outs   dx,DWORD PTR ds:[esi]
  412d03:	jp     0x412cfe
  412d05:	mov    ds:0xec941e62,eax
  412d0a:	stc    
  412d0b:	xchg   ebx,eax
  412d0c:	xchg   ebx,eax
  412d0d:	loope  0x412ccb
  412d0f:	pop    ecx
  412d10:	jp     0x412cfd
  412d12:	lock dec esp
  412d14:	sbb    DWORD PTR [ebp+ebp*8+0x26b742a2],edx
  412d1b:	jge    0x412cf9
  412d1d:	pop    es
  412d1e:	imul   esp,DWORD PTR [ecx-0x4ffb49ce],0x30
  412d25:	fld    TBYTE PTR [edi+0x73]
  412d28:	pop    ebx
  412d29:	inc    edx
  412d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d2b:	(bad)  
  412d2c:	jnp    0x412da6
  412d2e:	push   0xcd909943
  412d33:	pop    es
  412d34:	and    BYTE PTR [esi],0xfa
  412d37:	icebp  
  412d38:	mov    cl,0x55
  412d3a:	jbe    0x412d58
  412d3c:	test   BYTE PTR [edx+0x4d],bh
  412d3f:	sbb    DWORD PTR [eax+0x1713efdb],ecx
  412d45:	(bad)  
  412d46:	mov    ds:0x1b36a0d2,eax
  412d4b:	fsub   QWORD PTR [ebx+0x37]
  412d4e:	xor    ecx,DWORD PTR [ebp+0x2]
  412d51:	in     eax,0x67
  412d53:	xor    DWORD PTR [edi+0x2c],0xb0c62df2
  412d5a:	or     ecx,DWORD PTR [ecx-0x796885a7]
  412d60:	mov    bh,0x7f
  412d62:	cli    
  412d63:	and    BYTE PTR [eax-0x616da200],al
  412d69:	outs   dx,DWORD PTR ds:[esi]
  412d6a:	loope  0x412ddd
  412d6c:	push   ds
  412d6d:	iret   
  412d6e:	ins    BYTE PTR es:[edi],dx
  412d6f:	add    eax,0x4c4fd3c0
  412d74:	daa    
  412d75:	(bad)  
  412d76:	aad    0x2f
  412d78:	sub    eax,0x4f707368
  412d7d:	xor    BYTE PTR [ebp+ebx*1-0x2f],0xd2
  412d82:	stos   DWORD PTR es:[edi],eax
  412d83:	push   ss
  412d84:	cmp    BYTE PTR [esp+edi*8-0x4f],ah
  412d88:	sbb    eax,0x72b0b9d4
  412d8d:	mov    ?,WORD PTR [ebp-0x5a]
  412d90:	leave  
  412d91:	or     al,0x34
  412d93:	and    bl,BYTE PTR [esi+0x1335da68]
  412d99:	xchg   ebx,eax
  412d9a:	out    0x17,eax
  412d9c:	lock pop esp
  412d9e:	call   0x4eb4:0x5ca3ea5d
  412da5:	and    al,0x58
  412da7:	leave  
  412da8:	leave  
  412da9:	and    BYTE PTR [edi+0x49],0xd4
  412dad:	add    dh,BYTE PTR [esi-0x73]
  412db0:	mov    bl,0x34
  412db2:	mov    DWORD PTR [ecx-0x1ac0b58a],ebx
  412db8:	dec    esi
  412db9:	jne    0x412dd1
  412dbb:	(bad)  
  412dbc:	mov    BYTE PTR [ebx],cl
  412dbe:	lods   al,BYTE PTR ds:[esi]
  412dbf:	add    eax,0xbc0b1c2a
  412dc4:	in     eax,dx
  412dc5:	dec    edx
  412dc6:	(bad)  
  412dc7:	push   es
  412dc8:	les    esi,FWORD PTR [ebx+ecx*8]
  412dcb:	js     0x412dd3
  412dcd:	sti    
  412dce:	mul    BYTE PTR [esi]
  412dd0:	mov    esi,0xb4e06606
  412dd5:	bound  eax,QWORD PTR [eax]
  412dd7:	shl    BYTE PTR [edx+0x41],1
  412dda:	pushf  
  412ddb:	xchg   edx,eax
  412ddc:	push   ss
  412ddd:	adc    BYTE PTR [edi],ch
  412ddf:	push   edi
  412de1:	xchg   BYTE PTR [ebp+0x6a],bh
  412de4:	pop    ss
  412de5:	sahf   
  412de6:	aad    0x5d
  412de8:	cwde   
  412de9:	gs shl esi,cl
  412dec:	lock and edi,DWORD PTR [ecx+0x1a81bc58]
  412df3:	test   DWORD PTR [edi+0xa],ebp
  412df6:	xor    al,0x49
  412df8:	push   ds
  412df9:	push   ds
  412dfa:	push   es
  412dfb:	push   es
  412dfc:	in     al,0x10
  412dfe:	mov    edi,0xe740a16f
  412e03:	jns    0x412e65
  412e05:	pop    es
  412e06:	fidivr DWORD PTR [edi+ebp*8-0x32275dd0]
  412e0d:	call   0x8eb00272
  412e12:	sbb    ah,dl
  412e14:	add    eax,DWORD PTR [ebx]
  412e16:	popf   
  412e17:	jle    0x412da8
  412e19:	popf   
  412e1a:	add    bh,cl
  412e1c:	fcomp  QWORD PTR [edi+0x35]
  412e1f:	cdq    
  412e20:	mov    al,0x46
  412e22:	je     0x412e72
  412e24:	adc    eax,0xcbafc02e
  412e29:	pusha  
  412e2a:	add    eax,0xf43ae291
  412e2f:	adc    DWORD PTR [edx],eax
  412e31:	ja     0x412e8b
  412e33:	add    eax,0x3b422ead
  412e38:	mov    ah,0xba
  412e3a:	push   ss
  412e3b:	call   0x6bff:0xd198ae1c
  412e42:	aam    0x7f
  412e44:	push   0xffffff91
  412e46:	scas   al,BYTE PTR es:[edi]
  412e47:	xchg   ebp,eax
  412e48:	inc    eax
  412e49:	into   
  412e4a:	adc    ebp,DWORD PTR [ebp-0x79]
  412e4d:	mov    bl,0x41
  412e4f:	mov    eax,ds:0xaff17244
  412e54:	test   al,0xbd
  412e56:	stos   DWORD PTR es:[edi],eax
  412e57:	int3   
  412e58:	enter  0x18cc,0x31
  412e5c:	xor    cl,BYTE PTR [esp+edx*4+0x381fa5ef]
  412e63:	add    edi,DWORD PTR [edi-0x48c824f9]
  412e69:	mov    esp,0x55da81ab
  412e6e:	pop    ebp
  412e6f:	(bad)  
  412e71:	push   ecx
  412e72:	(bad)  [ebp+0x8]
  412e75:	scas   eax,DWORD PTR es:[edi]
  412e76:	xor    BYTE PTR [ebx+0x7c],dh
  412e79:	sub    DWORD PTR [edx-0x597beb6a],edi
  412e7f:	aad    0xf4
  412e81:	scas   eax,DWORD PTR es:[edi]
  412e82:	dec    ebp
  412e83:	addr16 push ss
  412e85:	test   eax,0xeae35974
  412e8a:	sbb    ch,BYTE PTR [ecx]
  412e8c:	and    ecx,ebp
  412e8e:	and    DWORD PTR [ecx+0x4848d5c5],0x1a993243
  412e98:	loope  0x412e76
  412e9a:	jae    0x412e3b
  412e9c:	jg     0x412ece
  412e9e:	sub    DWORD PTR [ecx+edi*8-0x68],0xbddf16a4
  412ea6:	push   esp
  412ea7:	nop
  412ea8:	inc    ebp
  412ea9:	push   esi
  412eaa:	ja     0x412eb4
  412eac:	popf   
  412ead:	das    
  412eae:	out    0xfa,eax
  412eb0:	out    0x6a,al
  412eb2:	daa    
  412eb3:	ror    BYTE PTR [ebp+0x6987d4fb],0x23
  412eba:	push   edx
  412ebb:	jo     0x412eb9
  412ebd:	mul    DWORD PTR [eax]
  412ebf:	arpl   WORD PTR [esp+ecx*2+0x4a37eba],dx
  412ec6:	fsubrp st(6),st
  412ec8:	lahf   
  412ec9:	lock shl DWORD PTR [ecx],0xbd
  412ecd:	ds jb  0x412f21
  412ed0:	jmp    0x412e7b
  412ed2:	mov    eax,ds:0x565ee96
  412ed7:	popf   
  412ed8:	shl    BYTE PTR [ecx+0x22],cl
  412edb:	jmp    0x412ef0
  412edd:	ins    BYTE PTR es:[edi],dx
  412ede:	push   esi
  412edf:	mov    ch,0x56
  412ee1:	cdq    
  412ee2:	(bad)  
  412ee3:	popf   
  412ee4:	or     edx,ebx
  412ee6:	xchg   edx,eax
  412ee7:	daa    
  412ee8:	jmp    0x412eda
  412eea:	ret    0xf56c
  412eed:	int3   
  412eee:	pop    edi
  412eef:	sbb    DWORD PTR [ecx-0x5f7af0af],0x91aaa41b
  412ef9:	push   0x1d
  412efb:	mov    bh,0x52
  412efd:	dec    bl
  412eff:	add    ecx,ebx
  412f01:	stos   BYTE PTR es:[edi],al
  412f02:	lahf   
  412f03:	pop    eax
  412f04:	out    0xb5,eax
  412f06:	mov    al,ds:0x59f0d271
  412f0b:	bound  edi,QWORD PTR ds:0x1fd045c2
  412f11:	pop    eax
  412f12:	push   ds
  412f13:	cmp    BYTE PTR [eax-0x64dbea69],ah
  412f19:	xor    eax,0x6c201c7c
  412f1e:	fsubrp st(4),st
  412f20:	mov    bl,0xe8
  412f22:	outs   dx,DWORD PTR ds:[esi]
  412f23:	test   BYTE PTR [ebx-0x4cc3b206],0xeb
  412f2a:	inc    ebx
  412f2b:	repz idiv BYTE PTR [edi+0xb5b861a]
  412f32:	repz xchg ecx,eax
  412f34:	sub    DWORD PTR [esp+ebx*2],ebx
  412f37:	jo     0x412f11
  412f39:	leave  
  412f3a:	jbe    0x412f37
  412f3c:	add    al,0xa
  412f3e:	repnz push esp
  412f40:	pop    esp
  412f41:	test   BYTE PTR [ebx+0x5d6486b9],ch
  412f47:	out    0xfe,eax
  412f49:	and    bl,ah
  412f4b:	jle    0x412f65
  412f4d:	cld    
  412f4e:	sub    edx,DWORD PTR [ecx-0x6b1def1c]
  412f54:	dec    ebx
  412f55:	dec    esp
  412f56:	cdq    
  412f57:	fwait
  412f58:	shr    DWORD PTR [ebx-0x76],1
  412f5b:	or     al,0x73
  412f5d:	pop    ds
  412f5e:	int3   
  412f5f:	retf   0x47fe
  412f62:	pop    ecx
  412f63:	(bad)  
  412f64:	retf   0x2e55
  412f67:	mov    al,ds:0xf7968d76
  412f6c:	retf   0x10bc
  412f6f:	inc    esp
  412f70:	int3   
  412f71:	cli    
  412f72:	sahf   
  412f73:	push   0xffffffef
  412f75:	jmp    0x5807fe0f
  412f7a:	or     al,0xf4
  412f7c:	aaa    
  412f7d:	fmul   QWORD PTR [eax+edi*4+0x6e]
  412f81:	sbb    bh,0x5c
  412f84:	ja     0x412f97
  412f86:	std    
  412f87:	jnp    0x412fe0
  412f89:	cmp    dl,al
  412f8b:	fisttp QWORD PTR [ebp-0x3c]
  412f8e:	aas    
  412f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f90:	in     al,0xb
  412f92:	ret    
  412f93:	inc    esp
  412f94:	cwde   
  412f95:	test   al,0x53
  412f97:	fild   QWORD PTR ss:[ebp-0x17c73199]
  412f9e:	cmp    DWORD PTR [ecx-0x4b2c65ff],esi
  412fa4:	adc    dh,cl
  412fa6:	fwait
  412fa7:	ins    BYTE PTR es:[edi],dx
  412fa8:	ss dec ecx
  412faa:	mov    bl,0x1c
  412fac:	addr16 nop
  412fae:	pop    ecx
  412faf:	and    BYTE PTR [ecx],0x9a
  412fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fb3:	pop    edi
  412fb4:	mov    eax,0xb1f3c9e4
  412fb9:	std    
  412fba:	and    BYTE PTR [edx-0x271c4b70],al
  412fc0:	sbb    DWORD PTR [edi],edi
  412fc2:	retf   0x9cdd
  412fc5:	pop    edi
  412fc6:	mov    ebx,0xc9acda88
  412fcb:	out    dx,eax
  412fcc:	jo     0x413023
  412fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fcf:	adc    DWORD PTR [ecx+0x6f2bdebf],edi
  412fd5:	pop    edi
  412fd6:	mov    WORD PTR cs:[eax-0x576239b3],ds
  412fdd:	mov    eax,ds:0x4cf1d96a
  412fe2:	inc    esi
  412fe3:	jns    0x412fc5
  412fe5:	je     0x412f83
  412fe7:	mov    ds:0x90593435,eax
  412fec:	leave  
  412fed:	daa    
  412fee:	inc    edi
  412fef:	fdivr  DWORD PTR [ecx+edx*8]
  412ff2:	not    BYTE PTR [ecx-0x11295cab]
  412ff8:	(bad)  
  412ff9:	sub    bl,BYTE PTR [ebp+edx*4+0x1f98498e]
  413000:	daa    
  413001:	cmp    DWORD PTR [ebx+0x7],0x2b
  413005:	jbe    0x41302d
  413007:	adc    esi,0xe3e177fd
  41300d:	add    BYTE PTR [ecx+0x36],dl
  413010:	sbb    BYTE PTR [ebx-0x13c28cc4],0x18
  413017:	mov    WORD PTR [ecx],ds
  413019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41301a:	dec    edi
  41301b:	cs in  eax,dx
  41301d:	das    
  41301e:	push   edi
  41301f:	retf   0x875d
  413022:	fidiv  DWORD PTR [edi+ebp*2+0x6c]
  413026:	xlat   BYTE PTR ds:[ebx]
  413027:	fsubr  st(5),st
  413029:	xchg   ecx,eax
  41302a:	or     ax,0xcd3b
  41302e:	popw   ss
  413030:	clc    
  413031:	in     al,dx
  413032:	mov    dl,0xcd
  413034:	mov    dl,0x82
  413036:	dec    esi
  413037:	sub    DWORD PTR [eax+0x36],eax
  41303a:	push   edi
  41303b:	icebp  
  41303c:	mov    eax,0xc0e17c66
  413041:	inc    eax
  413042:	dec    ecx
  413043:	jns    0x41300e
  413045:	repz mov WORD PTR fs:[esi-0x3b8fa78b],?
  41304d:	stc    
  41304e:	stos   BYTE PTR es:[edi],al
  41304f:	sti    
  413050:	mov    edx,ebx
  413052:	pop    eax
  413053:	pop    eax
  413054:	jmp    0x4130a3
  413056:	pusha  
  413057:	cmp    al,0x70
  413059:	xchg   esp,eax
  41305a:	push   esi
  41305b:	popf   
  41305c:	mov    esp,edx
  41305e:	fst    DWORD PTR ds:0xbbc01d63
  413064:	and    BYTE PTR [ebp+0x2f],bl
  413067:	cmc    
  413068:	das    
  413069:	add    ecx,edi
  41306b:	test   eax,0x48d17a1c
  413070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413071:	repnz cmp bl,BYTE PTR [eax+0x16]
  413075:	cmp    BYTE PTR [edi-0x3a],ch
  413078:	and    al,0x70
  41307a:	push   eax
  41307b:	xor    esi,esi
  41307d:	lock repz mov ebp,edx
  413081:	lea    eax,[ecx-0x4eb9e347]
  413087:	jge    0x4130a2
  413089:	shl    dl,0x5c
  41308c:	push   ebp
  41308d:	add    DWORD PTR [edi],esi
  41308f:	cmp    BYTE PTR [edi+edx*2-0x50fab86f],bl
  413096:	(bad)  
  413097:	fcom   QWORD PTR [esi-0x3b]
  41309a:	(bad)  
  41309b:	jmp    0x4130f4
  41309d:	mov    ah,0xe5
  41309f:	hlt    
  4130a0:	pop    esi
  4130a1:	dec    edi
  4130a2:	nop
  4130a3:	dec    esi
  4130a4:	mov    esp,ds
  4130a6:	mov    dl,0x50
  4130a8:	sub    BYTE PTR [edx],dl
  4130aa:	push   esp
  4130ab:	xchg   DWORD PTR [edx+0x5c],esi
  4130ae:	mov    eax,0xfbace8a2
  4130b3:	ret    
  4130b4:	test   eax,0xe4d2b28f
  4130b9:	dec    edi
  4130ba:	mov    ebp,0xbf226a81
  4130bf:	sub    DWORD PTR [ebx],eax
  4130c1:	adc    edi,DWORD PTR [esi-0x31b83a51]
  4130c7:	xchg   esi,eax
  4130c8:	cmp    esi,DWORD PTR [ebx]
  4130ca:	inc    eax
  4130cb:	das    
  4130cc:	cld    
  4130cd:	call   0x1c9d756
  4130d2:	ror    DWORD PTR [edx+eiz*8-0x52c87d32],cl
  4130d9:	scas   eax,DWORD PTR es:[edi]
  4130da:	(bad)  
  4130db:	clc    
  4130dc:	push   0xb27a83ac
  4130e1:	in     al,dx
  4130e2:	mov    ebp,0x29f52ad6
  4130e7:	pop    ss
  4130e8:	xchg   ecx,eax
  4130e9:	lea    ebp,[ecx-0x8]
  4130ec:	imul   ebx,eax,0xffffffa0
  4130ef:	cmp    BYTE PTR [ebx-0x7807f7b0],bh
  4130f5:	nop
  4130f6:	popa   
  4130f7:	or     eax,0x982772d4
  4130fc:	jo     0x413113
  4130fe:	retf   0x279a
  413101:	adc    DWORD PTR [eax+0x30],edi
  413104:	idiv   dl
  413106:	dec    ecx
  413107:	nop
  413108:	lea    edx,[esi+0xf5733cd]
  41310e:	cld    
  41310f:	xor    dh,0x29
  413112:	gs aas 
  413114:	pop    es
  413115:	(bad)  
  413116:	loopne 0x41310b
  413118:	mov    eax,ds:0x42003190
  41311d:	sub    edi,edx
  41311f:	hlt    
  413120:	lahf   
  413121:	push   esp
  413122:	or     BYTE PTR [ecx+0x3ae98955],al
  413128:	mov    esp,DWORD PTR [edx-0x5f651a3a]
  41312e:	push   esp
  41312f:	enter  0x7c9d,0x56
  413133:	mov    al,0xcd
  413135:	ficom  DWORD PTR [ecx+0x3328823a]
  41313b:	out    0x9d,al
  41313d:	push   esp
  41313e:	inc    DWORD PTR [ebx-0xff1fa68]
  413144:	or     eax,0x85f4a625
  413149:	arpl   WORD PTR [ecx-0x293ece5c],bp
  41314f:	push   ds
  413150:	cmp    ch,BYTE PTR [esi+0x23a37099]
  413156:	hlt    
  413157:	xchg   bx,ax
  413159:	repnz push 0xce4e865f
  41315f:	pop    eax
  413160:	xchg   ecx,eax
  413161:	(bad)  
  413162:	push   ds
  413163:	adc    al,0xa7
  413165:	jno    0x413166
  413167:	cmp    dl,BYTE PTR [eax+0x56]
  41316a:	inc    ecx
  41316b:	cwde   
  41316c:	fiadd  DWORD PTR [edx+ebp*2]
  41316f:	sbb    edi,esi
  413171:	cmp    esi,DWORD PTR [ecx-0x4af254d5]
  413177:	into   
  413178:	or     al,0xd6
  41317a:	pushf  
  41317b:	and    eax,0x9098d28
  413180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413181:	jmp    0x160e:0x43be1ac1
  413188:	or     DWORD PTR [eax],esi
  41318a:	fcmovb st,st(2)
  41318c:	xor    BYTE PTR [ecx-0x19],cl
  41318f:	mov    al,ds:0xab991e73
  413194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413195:	pop    ebx
  413196:	stc    
  413197:	and    eax,0xb7a67492
  41319c:	add    bl,BYTE PTR [eax-0x47]
  41319f:	out    0x74,eax
  4131a1:	imul   esp,esi,0x1f
  4131a4:	adc    dh,cl
  4131a6:	shl    BYTE PTR [edx-0x19],cl
  4131a9:	xchg   esp,eax
  4131aa:	icebp  
  4131ab:	xlat   BYTE PTR ds:[ebx]
  4131ac:	sahf   
  4131ad:	(bad)  
  4131ae:	mov    bh,0x2e
  4131b0:	push   eax
  4131b1:	enter  0x1eea,0xc2
  4131b5:	or     ebp,ecx
  4131b7:	jbe    0x41314d
  4131b9:	icebp  
  4131ba:	les    ebp,FWORD PTR [ebx+ecx*2+0x58]
  4131be:	jno    0x41318f
  4131c0:	dec    edx
  4131c1:	es pushf 
  4131c3:	shl    bl,cl
  4131c5:	xchg   ebx,eax
  4131c6:	sub    DWORD PTR [ebp-0x48adc34],edi
  4131cc:	or     eax,0xbb829e60
  4131d1:	inc    edi
  4131d2:	mul    DWORD PTR [ebp-0x259fab80]
  4131d8:	sub    DWORD PTR [eax],0xffffff9d
  4131db:	iret   
  4131dc:	xor    eax,esi
  4131de:	sbb    eax,0xb67a4de2
  4131e3:	mov    edx,0x7bb4230
  4131e8:	mov    ecx,0x1261e48f
  4131ed:	xchg   ebp,eax
  4131ee:	loopne 0x413180
  4131f0:	clc    
  4131f1:	sbb    eax,0x8cc1522d
  4131f6:	in     al,dx
  4131f7:	fcom   QWORD PTR [edi+0x5d]
  4131fa:	cmp    DWORD PTR [ebp-0x537409b4],esp
  413200:	aam    0xe
  413202:	in     al,0x98
  413204:	ret    0x9a49
  413207:	leave  
  413208:	xlat   BYTE PTR ds:[ebx]
  413209:	xor    al,0x59
  41320b:	xchg   esp,eax
  41320c:	push   ds
  41320d:	leave  
  41320e:	retf   0x3293
  413211:	cwde   
  413212:	mov    edi,0x159d5a8c
  413217:	push   DWORD PTR [ebx]
  413219:	ret    
  41321a:	inc    ecx
  41321b:	cld    
  41321c:	xchg   esi,eax
  41321d:	mov    ebp,0x923c4659
  413222:	in     al,0xff
  413224:	mov    edx,0xe5828e86
  413229:	or     esp,esi
  41322b:	push   ecx
  41322c:	push   edx
  41322d:	imul   edx,DWORD PTR [ebp+0x2a2725fc],0x15
  413234:	icebp  
  413235:	lea    edx,[edx+0x45]
  413238:	jmp    DWORD PTR [esi]
  41323a:	and    dl,ch
  41323c:	(bad)  
  41323d:	jg     0x413250
  41323f:	xchg   ebx,eax
  413240:	dec    ebp
  413241:	xor    BYTE PTR [edx+0x7c],0x22
  413245:	int3   
  413246:	data16 adc al,0x30
  413249:	push   edx
  41324a:	push   edi
  41324b:	adc    cl,BYTE PTR [ecx-0x59ef969]
  413251:	adc    DWORD PTR [eax+0xe85c7ff],0xffffffac
  413258:	cwde   
  413259:	or     DWORD PTR [ecx-0x30],ebp
  41325c:	xchg   esi,eax
  41325d:	daa    
  41325e:	adc    al,bh
  413260:	loop   0x4131f8
  413262:	js     0x4132c9
  413264:	mov    edi,0xbd09e7cd
  413269:	push   0xffffffc6
  41326b:	stos   BYTE PTR es:[edi],al
  41326c:	popa   
  41326d:	sub    BYTE PTR [eax+ecx*4-0x5b54332f],dh
  413274:	iret   
  413275:	std    
  413276:	or     BYTE PTR [edx-0x3e],bh
  413279:	jne    0x413240
  41327b:	fild   WORD PTR [edx-0x43]
  41327e:	call   FWORD PTR [ebp-0x2ca03f52]
  413284:	cdq    
  413285:	pop    ecx
  413286:	cmp    bl,BYTE PTR ds:0x4ee7093d
  41328c:	(bad)  
  41328d:	push   ss
  41328e:	cmp    ah,dl
  413290:	mov    cl,ah
  413292:	out    0x27,al
  413294:	rcl    BYTE PTR [esi],0xdf
  413297:	pop    edx
  413298:	xchg   ebx,eax
  413299:	push   esi
  41329a:	jle    0x41327f
  41329c:	test   BYTE PTR [eax-0x58],ch
  41329f:	cli    
  4132a0:	cmp    BYTE PTR [ebx],0xd9
  4132a3:	inc    edi
  4132a4:	mov    BYTE PTR [ebx],ah
  4132a6:	and    eax,DWORD PTR [ecx-0x2f]
  4132a9:	mov    eax,0xd3b287a2
  4132ae:	out    dx,al
  4132af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132b0:	or     bh,BYTE PTR [ebx]
  4132b2:	mov    ds:0x7c1060b7,al
  4132b7:	icebp  
  4132b8:	je     0x41326b
  4132ba:	out    dx,al
  4132bb:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132bd:	addr16 mov esp,0x270fa9c0
  4132c3:	lds    ebx,FWORD PTR [edi]
  4132c5:	cli    
  4132c6:	gs jmp 0xea3e91bb
  4132cc:	in     al,0x6a
  4132ce:	cmp    BYTE PTR [esi+0x7f53e927],0xd3
  4132d5:	pop    ebx
  4132d6:	fidivr DWORD PTR [eax]
  4132d8:	push   edi
  4132d9:	lock jb 0x4132ca
  4132dc:	cmp    al,0x50
  4132de:	fcom   DWORD PTR [ecx+ebx*8]
  4132e1:	sub    al,BYTE PTR [edx]
  4132e3:	nop
  4132e4:	xchg   edx,eax
  4132e5:	in     al,0x27
  4132e7:	aaa    
  4132e8:	ret    0xdddf
  4132eb:	rcr    DWORD PTR [ebx+0x73],1
  4132ee:	cdq    
  4132ef:	pop    ebp
  4132f0:	out    dx,eax
  4132f1:	out    0xe2,al
  4132f3:	add    eax,0xcba168ac
  4132f8:	data16 mov ds,WORD PTR [eax-0x73]
  4132fc:	call   0xe759:0x75c8
  413302:	add    dh,BYTE PTR [ebp-0x76f21104]
  413308:	xor    edi,edi
  41330a:	(bad)  
  41330b:	arpl   WORD PTR [ebx+0x5d7afbf0],bx
  413311:	lds    edx,FWORD PTR [ebp+0xe251108]
  413317:	leave  
  413318:	int3   
  413319:	ss cmp eax,0x24b76150
  41331f:	dec    BYTE PTR [ebx+0x6a6ce304]
  413325:	push   esp
  413326:	xor    al,0x3c
  413328:	outs   dx,BYTE PTR ds:[esi]
  413329:	dec    ebx
  41332a:	cwde   
  41332b:	inc    ecx
  41332c:	imul   edi,edx,0x5c
  41332f:	lock call 0xbf3ebf60
  413335:	push   esi
  413336:	dec    ebx
  413337:	fwait
  413338:	stos   DWORD PTR es:[edi],eax
  413339:	shr    BYTE PTR [esi+ecx*2],0x44
  41333d:	pop    esi
  41333e:	jnp    0x413355
  413340:	pop    eax
  413341:	sahf   
  413342:	rol    DWORD PTR [esi-0x619f8e2d],cl
  413348:	xchg   edi,eax
  413349:	mov    edi,esp
  41334b:	push   ebx
  41334c:	nop
  41334d:	fwait
  41334e:	push   ds
  41334f:	cdq    
  413350:	mov    dh,bl
  413352:	mov    ecx,0x3e36b378
  413357:	es popf 
  413359:	push   ds
  41335a:	sub    bl,al
  41335c:	jo     0x4133a0
  41335e:	mov    edi,0xfe478f02
  413363:	and    BYTE PTR [edi-0x46968603],al
  413369:	xchg   DWORD PTR [edi+eax*8-0x15e6b7dc],ebp
  413370:	cmp    DWORD PTR [ebx],eax
  413372:	stc    
  413373:	ins    DWORD PTR es:[edi],dx
  413374:	repnz and DWORD PTR [ecx-0x13f36c7b],edi
  41337b:	js     0x41333d
  41337d:	sbb    ah,BYTE PTR [ebp+0x15]
  413380:	inc    esi
  413381:	jmp    0x2806:0x3508c7ff
  413388:	sbb    al,0x12
  41338a:	xor    eax,0x1a32e9c1
  41338f:	mov    ch,0x53
  413391:	push   esi
  413392:	fadd   QWORD PTR [ebp+0x26]
  413395:	mov    edi,0x7d5ea126
  41339a:	scas   eax,DWORD PTR es:[edi]
  41339b:	jbe    0x413396
  41339d:	push   0xb65e581f
  4133a2:	stos   DWORD PTR es:[edi],eax
  4133a3:	jle    0x4133bc
  4133a5:	cwde   
  4133a6:	adc    ecx,ebx
  4133a8:	loopne 0x41340d
  4133aa:	aaa    
  4133ab:	loop   0x41335b
  4133ad:	sub    bh,BYTE PTR [esi+0x11]
  4133b0:	mov    eax,ds:0x1a164c14
  4133b5:	clc    
  4133b6:	push   cs
  4133b7:	in     al,0x1f
  4133b9:	out    dx,al
  4133ba:	int3   
  4133bb:	mov    al,ds:0x26d8a438
  4133c0:	adc    eax,0xb5e346fe
  4133c5:	into   
  4133c6:	xor    eax,0xe2f6f858
  4133cb:	mul    BYTE PTR [edi+ebx*8+0x3544a436]
  4133d2:	sub    edx,ebp
  4133d4:	mov    al,ds:0xbc3dc7fb
  4133d9:	dec    ebx
  4133da:	push   ds
  4133db:	and    cl,cl
  4133dd:	jg     0x41344d
  4133df:	mov    ss,ebx
  4133e1:	lods   eax,DWORD PTR cs:[esi]
  4133e3:	imul   edx,esp,0x1244bcb1
  4133e9:	adc    bh,BYTE PTR [ecx-0x1f16c90f]
  4133ef:	sbb    DWORD PTR [ecx+0x5f148d2b],ebp
  4133f5:	jo     0x413395
  4133f7:	test   esi,ecx
  4133f9:	mov    ds:0xab11d334,al
  4133fe:	ins    BYTE PTR es:[edi],dx
  4133ff:	mov    al,0xbe
  413401:	js     0x4133f2
  413403:	sbb    DWORD PTR [edi],0x39
  413406:	leave  
  413407:	pop    ds
  413408:	xchg   edi,eax
  413409:	clc    
  41340a:	fadd   st(7),st
  41340c:	repnz mov ebp,0xa2e12cf4
  413412:	jae    0x4133c6
  413414:	sub    BYTE PTR [edx+0x4e3a85ca],bl
  41341a:	sbb    eax,0x896fa4cb
  41341f:	adc    dl,BYTE PTR [esi-0x58fe8f99]
  413425:	hlt    
  413426:	fsub   DWORD PTR [ecx]
  413428:	cdq    
  413429:	sahf   
  41342a:	mov    ah,0xaf
  41342c:	iret   
  41342d:	dec    ebp
  41342e:	jo     0x413476
  413430:	mov    bl,0x23
  413432:	shl    esp,cl
  413434:	ret    
  413435:	push   ecx
  413436:	fild   WORD PTR [ebp+0x63]
  413439:	jbe    0x4133c8
  41343b:	jno    0x41346c
  41343d:	xchg   ah,bl
  41343f:	sbb    al,0xfc
  413441:	loope  0x4134b8
  413443:	adc    ecx,DWORD PTR [edi+0x479879c2]
  413449:	je     0x41344c
  41344b:	fist   WORD PTR [edi-0x4a775abc]
  413451:	addr16 fstp st(0)
  413454:	jmp    0x5af7cb68
  413459:	int    0x89
  41345b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41345c:	cs sar cl,1
  41345f:	lods   eax,DWORD PTR ds:[esi]
  413460:	popf   
  413461:	xlat   BYTE PTR ds:[ebx]
  413462:	and    al,0xcb
  413464:	outs   dx,DWORD PTR ds:[esi]
  413465:	push   esi
  413466:	dec    edx
  413467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413468:	jmp    0x41340d
  41346a:	xor    al,0x96
  41346c:	rcr    BYTE PTR [eax+ebx*8],cl
  41346f:	daa    
  413470:	out    dx,eax
  413471:	scas   eax,DWORD PTR es:[edi]
  413472:	sub    ebp,edi
  413474:	ss pop ebx
  413476:	inc    ebp
  413477:	pop    es
  413478:	sub    al,0x38
  41347a:	inc    edi
  41347b:	js     0x413434
  41347d:	popa   
  41347e:	clc    
  41347f:	push   0xffffffc9
  413481:	dec    eax
  413482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413483:	loopne 0x4134c8
  413485:	add    BYTE PTR ss:[ecx],0xa4
  413489:	ins    BYTE PTR es:[edi],dx
  41348a:	adc    DWORD PTR [ebp-0x58],ebp
  41348d:	shl    BYTE PTR [ecx+ecx*4-0x52bddf89],cl
  413494:	pop    eax
  413495:	(bad)  
  413496:	or     edi,ebp
  413498:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41349a:	outs   dx,BYTE PTR ds:[esi]
  41349b:	shr    BYTE PTR [ebp-0x42],0xa
  41349f:	lods   al,BYTE PTR ds:[esi]
  4134a0:	sub    al,0x84
  4134a2:	pop    edx
  4134a3:	push   ecx
  4134a4:	cwde   
  4134a5:	or     bh,al
  4134a7:	adc    ebp,DWORD PTR [edi-0x774ca2f3]
  4134ad:	inc    esp
  4134ae:	or     BYTE PTR [esi+0x519eb34e],0xfb
  4134b5:	popa   
  4134b6:	cmp    dl,dl
  4134b8:	ins    DWORD PTR es:[edi],dx
  4134b9:	scas   al,BYTE PTR es:[edi]
  4134ba:	pop    edi
  4134bb:	test   al,0x27
  4134bd:	shr    DWORD PTR [ecx+0x7179b423],cl
  4134c3:	push   0x30b54c1f
  4134c8:	ss pusha 
  4134ca:	not    ebx
  4134cc:	sub    BYTE PTR [eax-0x11048e1d],bh
  4134d2:	sbb    dl,al
  4134d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134d5:	mov    BYTE PTR [esi],dl
  4134d7:	stc    
  4134d8:	loope  0x4134ae
  4134da:	jmp    0x41351b
  4134dc:	and    bh,ah
  4134de:	ret    0x5a59
  4134e1:	inc    eax
  4134e2:	shl    DWORD PTR [ecx],cl
  4134e4:	fs pop ss
  4134e6:	mov    al,0xd8
  4134e8:	jmp    0xadf2:0xee59ce68
  4134ef:	rcr    BYTE PTR [edi+0xf],1
  4134f2:	xchg   edi,eax
  4134f3:	dec    edx
  4134f4:	adc    eax,0x38a7b201
  4134f9:	out    0x85,al
  4134fb:	ds out 0xdb,al
  4134fe:	push   cs
  4134ff:	add    BYTE PTR [esi],bh
  413501:	jecxz  0x413496
  413503:	es sbb eax,0x69f229e2
  413509:	repz sbb eax,0x9b5a4730
  41350f:	mov    ah,0x40
  413511:	mov    ds:0x8df792c5,al
  413516:	call   0x7d79ea85
  41351b:	loop   0x4134ab
  41351d:	sub    BYTE PTR [esi+0x12c6c607],dh
  413523:	dec    edx
  413524:	aad    0x14
  413526:	sub    edx,DWORD PTR [ecx]
  413528:	pop    esi
  413529:	add    al,BYTE PTR [eax+ebp*8-0x562baf5a]
  413530:	cwde   
  413531:	pop    eax
  413532:	jbe    0x4134ca
  413534:	jmp    0x8ea5:0x9d248aa0
  41353b:	bound  esi,QWORD PTR [edx+0x1fe9d5ed]
  413541:	out    dx,eax
  413542:	in     eax,0x32
  413544:	pop    esi
  413545:	sbb    BYTE PTR [esi-0x49658989],dl
  41354b:	(bad)  
  41354c:	loope  0x4134ed
  41354e:	xor    al,0x85
  413550:	cdq    
  413551:	xlat   BYTE PTR ds:[ebx]
  413552:	pusha  
  413553:	scas   eax,DWORD PTR es:[edi]
  413554:	mov    ds:0x71f64c0f,al
  413559:	push   ecx
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	dec    ebx
  41355c:	inc    ebx
  41355d:	dec    edx
  41355e:	arpl   sp,bx
  413560:	in     al,dx
  413561:	xchg   edx,eax
  413562:	cmp    dl,0x5f
  413565:	push   ebp
  413566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413567:	daa    
  413568:	jp     0x4134ec
  41356a:	mov    DWORD PTR [ebx+0xbf35fdb],esi
  413570:	ss dec ebx
  413572:	ins    BYTE PTR es:[edi],dx
  413573:	int3   
  413574:	xor    eax,0xcd2e04db
  413579:	pusha  
  41357a:	cmp    al,0x23
  41357c:	adc    bh,ah
  41357e:	(bad)  [edi+0x6e]
  413581:	test   BYTE PTR [ecx-0x6b68a0a6],dh
  413587:	in     eax,dx
  413588:	dec    ecx
  413589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41358a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41358b:	xor    dl,ch
  41358d:	pop    ebp
  41358e:	loop   0x41351b
  413590:	or     dh,BYTE PTR [ecx]
  413592:	shr    DWORD PTR [esi+0x56c852f2],1
  413598:	jmp    0x3326:0x839660fc
  41359f:	aaa    
  4135a0:	aas    
  4135a1:	inc    edi
  4135a2:	lock xchg DWORD PTR [ebp+0x47],esi
  4135a6:	pop    edx
  4135a7:	imul   ebx,DWORD PTR ds:0xc8c36ad4,0xf404b1b1
  4135b1:	daa    
  4135b2:	(bad)  
  4135b3:	dec    esp
  4135b4:	into   
  4135b5:	jb     0x413591
  4135b7:	fs xchg esp,eax
  4135b9:	add    BYTE PTR [edx+0x2a],0x3d
  4135bd:	push   cs
  4135be:	fisttp QWORD PTR [ebx-0x69617fb9]
  4135c4:	xlat   BYTE PTR ds:[ebx]
  4135c5:	shl    DWORD PTR [eax+0x4a],1
  4135c8:	mov    cl,0x3e
  4135ca:	cli    
  4135cb:	stos   DWORD PTR es:[edi],eax
  4135cc:	jns    0x413570
  4135ce:	mov    ebx,0x913d4f78
  4135d3:	sbb    esp,edx
  4135d5:	mov    esp,0xb98487f6
  4135da:	cmp    esp,DWORD PTR [ebx+0x18]
  4135dd:	scas   al,BYTE PTR es:[edi]
  4135de:	dec    eax
  4135df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135e0:	add    al,0x4c
  4135e2:	adc    si,sp
  4135e5:	jg     0x41357f
  4135e7:	jnp    0x41361a
  4135e9:	jo     0x413615
  4135eb:	dec    edx
  4135ec:	stos   DWORD PTR es:[edi],eax
  4135ed:	mov    ecx,0x31f0fd4b
  4135f2:	je     0x413663
  4135f4:	jp     0x4135f4
  4135f6:	pop    es
  4135f7:	test   eax,0x9ee1a5aa
  4135fc:	push   esi
  4135fd:	sbb    BYTE PTR [ebx+0x65],dl
  413600:	sub    al,0x4d
  413602:	jb     0x41360f
  413604:	ret    0xd3a2
  413607:	ror    DWORD PTR [eax+eax*4],0x2a
  41360b:	jnp    0x413643
  41360d:	jmp    edx
  41360f:	js     0x4135a2
  413611:	inc    edx
  413612:	dec    edx
  413613:	cs scas eax,DWORD PTR es:[edi]
  413615:	std    
  413616:	popf   
  413617:	ds push esp
  413619:	loope  0x41361f
  41361b:	jbe    0x4135cb
  41361d:	nop
  41361e:	sbb    ah,BYTE PTR [edx+ebx*8-0x30]
  413622:	inc    ebx
  413623:	fistp  QWORD PTR [ebx-0x2df5cadc]
  413629:	xor    al,0x40
  41362b:	cld    
  41362c:	shl    BYTE PTR [edi+0x7142a5a0],0xdb
  413633:	and    ebp,DWORD PTR [ebx+0x5cdb0dc5]
  413639:	sbb    al,0xf7
  41363b:	bound  esi,QWORD PTR [esi-0x2c385b81]
  413641:	sub    al,0x1
  413643:	xor    eax,0x2b7127df
  413648:	push   cs
  413649:	cmp    eax,edi
  41364b:	sti    
  41364c:	mov    DWORD PTR [esp+edx*2],esp
  41364f:	sbb    ecx,ebx
  413651:	jl     0x413693
  413653:	outs   dx,BYTE PTR ds:[esi]
  413654:	inc    ebx
  413655:	lahf   
  413656:	sub    eax,0x8ca009f8
  41365b:	cmc    
  41365c:	xchg   ebp,eax
  41365d:	or     DWORD PTR [eax+0x7e3e2314],ebx
  413663:	and    BYTE PTR [eax],0xaf
  413666:	ins    DWORD PTR es:[edi],dx
  413667:	sahf   
  413668:	dec    esp
  413669:	pop    ds
  41366a:	and    al,0xec
  41366c:	fisub  WORD PTR ds:0xf974d6cd
  413672:	mov    ch,0x99
  413674:	cdq    
  413675:	push   0xffffff9b
  413677:	xchg   edi,eax
  413678:	dec    eax
  413679:	in     al,dx
  41367a:	and    dh,BYTE PTR [edx-0x1]
  41367d:	stos   DWORD PTR es:[edi],eax
  41367e:	pop    esi
  41367f:	outs   dx,BYTE PTR ds:[esi]
  413680:	sub    esi,DWORD PTR [ebp-0x4f]
  413683:	xchg   DWORD PTR [esi],ebp
  413685:	les    ecx,FWORD PTR [ebp+0x12]
  413688:	jp     0x41369c
  41368a:	int    0x1f
  41368c:	mov    edx,0xa5507df3
  413691:	push   edi
  413692:	dec    ecx
  413693:	mov    ds:0xfc4e1cf9,eax
  413698:	xor    cl,dl
  41369a:	imul   eax,DWORD PTR [eax+0x76],0x29
  41369e:	fidiv  DWORD PTR [ebp+0x24]
  4136a1:	and    dh,BYTE PTR [ebx+eax*4+0x674e61d4]
  4136a8:	sbb    ebx,eax
  4136aa:	xor    BYTE PTR [ecx-0x4f8533f7],bh
  4136b0:	mov    WORD PTR [edi-0x706cb8d3],ss
  4136b6:	shl    DWORD PTR [esi-0x4e64dc94],1
  4136bc:	(bad)  [edi-0x6138c6d]
  4136c2:	gs jno 0x413674
  4136c5:	std    
  4136c6:	adc    dh,dl
  4136c8:	sub    BYTE PTR [edi-0x6a],ah
  4136cb:	fidivr WORD PTR [ecx-0xa]
  4136ce:	and    DWORD PTR [ebx+0x40],eax
  4136d1:	xchg   DWORD PTR [edx+eiz*8+0x3d4f6ad4],edx
  4136d8:	pop    ebx
  4136d9:	mov    ds:0xfe0161f3,eax
  4136de:	pop    esi
  4136df:	and    DWORD PTR [ebp+0x44],edi
  4136e2:	dec    edi
  4136e3:	adc    BYTE PTR [ebp-0x744f82bf],al
  4136e9:	retf   0x497a
  4136ec:	cmp    al,0x47
  4136ee:	cli    
  4136ef:	ins    DWORD PTR es:[edi],dx
  4136f0:	icebp  
  4136f1:	push   eax
  4136f2:	xchg   BYTE PTR [edx+0x76],al
  4136f5:	lock push ds
  4136f7:	pop    esi
  4136f8:	cdq    
  4136f9:	test   BYTE PTR [ebx+edi*1-0x4c],0x4f
  4136fe:	test   BYTE PTR [edi+ebx*8-0x56a49d1e],dl
  413705:	icebp  
  413706:	mov    ds:0x719e7f4f,eax
  41370b:	sti    
  41370c:	and    ch,BYTE PTR [esi+0x4e2aa89e]
  413712:	cmp    DWORD PTR [ecx-0x7d],ebp
  413715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413716:	push   es
  413717:	outs   dx,BYTE PTR ds:[esi]
  413718:	and    ecx,eax
  41371a:	cmc    
  41371b:	pop    eax
  41371c:	hlt    
  41371d:	xchg   ebx,eax
  41371e:	rol    BYTE PTR [edi+0x19561b1f],1
  413724:	into   
  413725:	jb     0x4136e7
  413727:	xor    DWORD PTR [esi-0x6c],edx
  41372a:	mov    dh,BYTE PTR [eax-0x2f]
  41372d:	or     ah,BYTE PTR [esi+0x5ed28532]
  413733:	or     dl,bl
  413735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413736:	scas   eax,DWORD PTR es:[edi]
  413737:	xlat   BYTE PTR ds:[ebx]
  413738:	js     0x413720
  41373a:	push   edi
  41373b:	sub    al,bh
  41373d:	(bad)  
  41373e:	mov    ecx,0x72004127
  413743:	loopne 0x4136f5
  413745:	outs   dx,BYTE PTR ds:[esi]
  413746:	out    0x28,eax
  413748:	not    DWORD PTR [ebx-0x2cf3531d]
  41374e:	sahf   
  41374f:	cld    
  413750:	jb     0x41370c
  413752:	dec    edi
  413753:	jmp    0x3c19:0xdaa2a5d8
  41375a:	fs jb  0x4137b1
  41375d:	(bad)  
  41375e:	and    edx,ebx
  413760:	inc    ebx
  413761:	repnz xchg esp,eax
  413763:	and    BYTE PTR [ebp+0x7c],ah
  413766:	(bad)  
  413767:	jmp    0x41377c
  413769:	mov    cs,WORD PTR [ebp+0x2bac0e49]
  41376f:	and    edi,DWORD PTR [ebx]
  413771:	test   al,0x9e
  413773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413774:	sbb    al,0x3d
  413776:	adc    al,0xcc
  413778:	fwait
  413779:	arpl   si,cx
  41377b:	imul   ebp,DWORD PTR [edi],0x27fcb134
  413781:	adc    BYTE PTR [edi],bh
  413783:	lahf   
  413784:	mov    ecx,0xfdbbc427
  413789:	fst    DWORD PTR [ebp-0x3811015c]
  41378f:	test   DWORD PTR [ebx],edx
  413791:	jle    0x4137c3
  413793:	call   0x7b591828
  413798:	ins    DWORD PTR es:[edi],dx
  413799:	or     bh,BYTE PTR ds:0x7bf959e6
  41379f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137a0:	dec    ebp
  4137a1:	jecxz  0x413799
  4137a3:	dec    esi
  4137a4:	push   ss
  4137a5:	inc    ebx
  4137a6:	sbb    dl,BYTE PTR [edi-0x5b97b81d]
  4137ac:	cs fdivr st(1),st
  4137af:	cwde   
  4137b0:	or     dh,BYTE PTR [esi+0x623b2d89]
  4137b6:	into   
  4137b7:	sti    
  4137b8:	dec    ebp
  4137b9:	pop    ss
  4137ba:	retf   
  4137bb:	lea    edi,[ebp+edx*4-0x50]
  4137bf:	gs stos DWORD PTR es:[edi],eax
  4137c1:	and    DWORD PTR [edi+esi*1-0x66612213],edx
  4137c8:	add    ah,bh
  4137ca:	sbb    esp,DWORD PTR [esi]
  4137cc:	jg     0x4137c2
  4137ce:	push   ss
  4137cf:	dec    esp
  4137d0:	sbb    BYTE PTR [ebx+edx*8-0x44],0x3c
  4137d5:	pop    eax
  4137d6:	repz dec eax
  4137d8:	test   BYTE PTR [ecx],0xd4
  4137db:	(bad)  
  4137dc:	mov    al,0x3c
  4137de:	mov    dh,0x8
  4137e0:	mov    esp,DWORD PTR [ebx-0x3c]
  4137e3:	cmp    dl,dl
  4137e5:	pop    ebp
  4137e6:	add    al,0xce
  4137e8:	jae    0x413868
  4137ea:	sub    dl,BYTE PTR [esp+esi*2-0x9]
  4137ee:	mov    edi,0x37a89ae0
  4137f3:	sti    
  4137f4:	sbb    bh,BYTE PTR [ebx-0x44c7fb6]
  4137fa:	ss (bad) 
  4137fc:	and    BYTE PTR [ebp-0x23],ch
  4137ff:	mov    ch,0x40
  413801:	std    
  413802:	dec    ecx
  413803:	jp     0x4137fa
  413805:	aas    
  413806:	ins    DWORD PTR es:[edi],dx
  413807:	enter  0xca34,0xc7
  41380b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41380c:	cmp    ebx,DWORD PTR [ebp+0x2b]
  41380f:	push   esp
  413810:	leave  
  413811:	mov    cs,WORD PTR [eax+eiz*2]
  413814:	adc    DWORD PTR [ecx],0xffffffae
  413817:	scas   al,BYTE PTR es:[edi]
  413818:	mov    esp,0xb07880d5
  41381d:	(bad)  
  41381e:	push   0x3c
  413820:	jge    0x4137e9
  413822:	cmp    BYTE PTR [ecx],cl
  413824:	je     0x4137c7
  413826:	cmp    BYTE PTR [ebp-0x48],al
  413829:	fst    st(1)
  41382b:	inc    DWORD PTR [edi-0x3e243692]
  413831:	test   DWORD PTR [esi+ebx*2-0x4cfb5cbc],edx
  413838:	xchg   esp,eax
  413839:	shr    BYTE PTR [ebp-0x35],0x36
  41383d:	xor    ch,BYTE PTR [esi]
  41383f:	xor    BYTE PTR ds:0xa7758952,al
  413845:	jns    0x4138a1
  413847:	pop    esp
  413848:	sahf   
  413849:	mov    ebx,0xb1e6b6e2
  41384e:	push   edi
  41384f:	in     al,dx
  413850:	arpl   sp,bx
  413852:	adc    al,0x91
  413854:	push   0xffffffb1
  413856:	pop    eax
  413857:	or     ebp,ebp
  413859:	sub    eax,0x2dc8bce7
  41385e:	or     BYTE PTR [edx-0x22],dh
  413861:	jecxz  0x413806
  413863:	mov    cl,BYTE PTR ds:0xc5437299
  413869:	mov    edx,0x356079f8
  41386e:	or     eax,0x767d633d
  413873:	ret    0x9579
  413876:	out    0x44,al
  413878:	xor    bh,BYTE PTR [esi]
  41387a:	push   esi
  41387b:	push   ss
  41387c:	xor    BYTE PTR [ebx],0xe0
  41387f:	addr16 pushf 
  413881:	xchg   BYTE PTR [edx],ch
  413883:	sar    BYTE PTR [esi-0xd7bbfc],0x9
  41388a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41388b:	retf   
  41388c:	cmp    bl,BYTE PTR [edi+0x45868f90]
  413892:	pop    eax
  413893:	push   ds
  413894:	and    eax,0xe4a2361e
  413899:	add    ecx,DWORD PTR [eax-0x25]
  41389c:	call   0x2f66c97
  4138a1:	popf   
  4138a2:	jbe    0x4138fb
  4138a4:	mov    dl,0xbf
  4138a6:	into   
  4138a7:	(bad)  
  4138a8:	ins    BYTE PTR es:[edi],dx
  4138a9:	xchg   edx,esi
  4138ab:	ds jnp 0x4138bd
  4138ae:	cmp    eax,0x869ac095
  4138b3:	xor    al,0x53
  4138b6:	or     DWORD PTR [ecx],eax
  4138b8:	add    BYTE PTR [eax-0x2f36872b],dl
  4138be:	add    BYTE PTR [edi-0x5c44f57d],dl
  4138c4:	(bad)  
  4138c6:	jmp    0x87c0:0x592b0a09
  4138cd:	jl     0x4138cb
  4138cf:	cs or  al,0x3b
  4138d2:	jno    0x41392a
  4138d4:	xchg   DWORD PTR [eax+ebp*8],eax
  4138d7:	pop    edx
  4138d8:	icebp  
  4138d9:	(bad)  
  4138db:	ja     0x4138de
  4138dd:	fldcw  WORD PTR [esi]
  4138df:	xchg   esi,eax
  4138e0:	mov    al,ds:0x587d82bc
  4138e5:	dec    ecx
  4138e6:	iret   
  4138e7:	and    cl,BYTE PTR [eax-0x3bfb6cb6]
  4138ed:	in     eax,dx
  4138ee:	test   BYTE PTR [esi+0x13],ch
  4138f1:	clc    
  4138f2:	(bad)  
  4138f3:	frstor [edi+0x1ffd80d9]
  4138f9:	call   0x2301:0x6d725bb
  413900:	(bad)  
  413901:	leave  
  413902:	sbb    esi,DWORD PTR [edx-0x4d]
  413905:	lods   eax,DWORD PTR ds:[esi]
  413906:	jb     0x41389b
  413908:	adc    BYTE PTR [esi-0x13d08d2],0xc7
  41390f:	add    dl,BYTE PTR [eax-0xe856b0c]
  413915:	cmovns edx,DWORD PTR [ecx+edi*1]
  413919:	in     eax,dx
  41391a:	hlt    
  41391b:	repnz add bl,BYTE PTR [edx+ebx*8+0x30e9491a]
  413923:	retf   
  413924:	jo     0x4138cc
  413926:	pushf  
  413927:	imul   esi,DWORD PTR [ebx],0xe174e9d9
  41392d:	or     esi,esp
  41392f:	mov    esi,0x98a186d6
  413934:	push   ds
  413935:	push   edi
  413936:	sub    BYTE PTR [edx-0x2b],ah
  413939:	mov    esi,DWORD PTR [esi+0x49]
  41393c:	sub    edi,DWORD PTR [edi-0x4a8cbf32]
  413942:	pop    esp
  413943:	jne    0x413928
  413945:	popa   
  413946:	mov    ds:0xf570c8c2,al
  41394b:	push   edi
  41394c:	js     0x413916
  41394e:	jbe    0x4138f6
  413950:	and    DWORD PTR [ecx-0x28],esp
  413953:	xor    DWORD PTR [eax-0xd16bc0c],esp
  413959:	rcr    dl,1
  41395b:	mov    edx,0x895620c5
  413960:	add    esi,edi
  413962:	mov    dh,0x4f
  413964:	jb     0x4139d0
  413966:	mov    ebp,0x37c2e4a
  41396b:	sub    DWORD PTR [ebp-0x606726cc],0xd49ac36b
  413975:	mov    ch,0x5c
  413977:	std    
  413978:	fisttp QWORD PTR [ebx]
  41397a:	add    edi,DWORD PTR [edx+0x4c]
  41397d:	test   eax,0xdce98932
  413982:	push   edx
  413983:	stos   DWORD PTR es:[edi],eax
  413984:	imul   esp,DWORD PTR [edi+0x32],0x1f22f5ed
  41398b:	retf   0x4afe
  41398e:	aas    
  41398f:	push   esi
  413990:	pop    ecx
  413991:	jbe    0x4139e9
  413993:	push   cs
  413994:	in     eax,dx
  413995:	out    0x5c,eax
  413997:	mov    fs,WORD PTR [eax-0x74]
  41399a:	adc    cl,ch
  41399c:	outs   dx,DWORD PTR ds:[esi]
  41399d:	in     eax,0x5b
  41399f:	popa   
  4139a0:	mov    DWORD PTR [ebp-0x533430d3],edi
  4139a6:	adc    bl,BYTE PTR [ebx+0x727ab358]
  4139ac:	call   esp
  4139ae:	out    dx,al
  4139af:	das    
  4139b0:	(bad)  
  4139b1:	mov    esi,0xd937d894
  4139b6:	(bad)  
  4139b7:	adc    eax,0x998c6f13
  4139bc:	jecxz  0x4139d0
  4139be:	or     al,0x59
  4139c0:	inc    esp
  4139c1:	add    dh,BYTE PTR [esp+eax*2-0x6e38d255]
  4139c8:	sti    
  4139c9:	mov    eax,ds:0xa943f6cb
  4139ce:	arpl   WORD PTR [edx+0x266af22c],si
  4139d4:	jno    0x4139e5
  4139d6:	loope  0x413981
  4139d8:	mov    bl,0x6f
  4139da:	dec    esp
  4139db:	les    ebp,FWORD PTR [ebx-0x2a]
  4139de:	in     al,0xd4
  4139e0:	dec    ebx
  4139e1:	cmp    eax,0x79ca8887
  4139e6:	mov    ah,0x62
  4139e8:	pop    ds
  4139e9:	dec    esp
  4139ea:	xchg   BYTE PTR [ecx],cl
  4139ec:	lds    edx,FWORD PTR [ecx+edi*4+0x6c]
  4139f0:	sahf   
  4139f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139f2:	cmp    DWORD PTR [ebx],ebx
  4139f4:	adc    al,0xf0
  4139f6:	imul   ecx,DWORD PTR [esi-0x73],0x60
  4139fa:	adc    eax,0x3c735baf
  4139ff:	adc    BYTE PTR [esp+edx*4+0x1c33e5a1],ch
  413a06:	xor    DWORD PTR [ebp-0x74],esp
  413a09:	test   eax,0x39710d7c
  413a0e:	or     edi,esp
  413a10:	mov    edi,0x7be1eb48
  413a15:	xchg   edi,eax
  413a16:	pop    es
  413a17:	scas   eax,DWORD PTR es:[edi]
  413a18:	cmc    
  413a19:	dec    eax
  413a1a:	pop    edi
  413a1b:	sbb    DWORD PTR [esi],esp
  413a1d:	pop    es
  413a1e:	into   
  413a1f:	std    
  413a20:	and    eax,0x4998d07a
  413a25:	das    
  413a26:	test   BYTE PTR [edi+0x3b9675c2],0xdb
  413a2d:	xchg   edx,eax
  413a2e:	scas   al,BYTE PTR es:[edi]
  413a2f:	test   DWORD PTR fs:[edi+0x3f],edi
  413a33:	sbb    BYTE PTR [eax],ch
  413a35:	fcom   st(0)
  413a37:	inc    esi
  413a38:	pop    eax
  413a39:	xchg   edx,eax
  413a3a:	add    DWORD PTR [eax-0x21],edx
  413a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a3e:	inc    eax
  413a3f:	outs   dx,DWORD PTR ds:[esi]
  413a40:	sti    
  413a41:	cdq    
  413a42:	xrelease mov BYTE PTR [ebx-0x35],ah
  413a46:	mov    al,ds:0x6e0706d6
  413a4b:	nop
  413a4c:	xor    cl,BYTE PTR [edi+0x35]
  413a4f:	sbb    ebp,0x3e
  413a52:	scas   eax,DWORD PTR es:[edi]
  413a53:	adc    esp,DWORD PTR [ecx]
  413a55:	ins    DWORD PTR es:[edi],dx
  413a56:	mov    ah,0x76
  413a58:	and    al,0x8
  413a5a:	adc    BYTE PTR [esi+0x3d],dl
  413a5d:	mov    edi,0xe1b9b2f3
  413a62:	cmp    BYTE PTR [ebx],dl
  413a64:	fs ja  0x413a65
  413a67:	sub    BYTE PTR [eax],cl
  413a69:	js     0x4139fd
  413a6b:	outs   dx,DWORD PTR ds:[esi]
  413a6c:	mov    WORD PTR [edi],ss
  413a6e:	xor    al,0xc5
  413a70:	outs   dx,BYTE PTR ds:[esi]
  413a71:	(bad)  
  413a72:	xchg   edx,eax
  413a73:	dec    ecx
  413a74:	lea    edi,[eax+0x3a]
  413a77:	test   DWORD PTR [edi],0xd600ed7a
  413a7d:	(bad)  
  413a7f:	inc    ebx
  413a80:	in     al,dx
  413a81:	sub    BYTE PTR [ebx],dl
  413a83:	sub    BYTE PTR ds:0x9f0c21ed,al
  413a89:	add    ah,BYTE PTR [ebx+edx*4]
  413a8c:	lods   al,BYTE PTR ds:[esi]
  413a8d:	popf   
  413a8e:	leave  
  413a8f:	icebp  
  413a90:	adc    BYTE PTR [esi+0x1b104fbb],bh
  413a96:	test   eax,0xecb57454
  413a9b:	adc    ah,dh
  413a9d:	xlat   BYTE PTR ds:[ebx]
  413a9e:	mov    bh,ch
  413aa0:	test   bl,bl
  413aa2:	sbb    ch,0x69
  413aa5:	pop    ebx
  413aa6:	inc    ecx
  413aa7:	sbb    al,0x77
  413aa9:	or     eax,0x81f9a6de
  413aae:	xor    DWORD PTR [esi],ebp
  413ab0:	cmp    DWORD PTR [ebx+0x12],ebp
  413ab3:	pop    esi
  413ab4:	mov    esi,0xf32dcd6d
  413ab9:	out    0xee,al
  413abb:	stos   DWORD PTR es:[edi],eax
  413abc:	inc    eax
  413abd:	sub    DWORD PTR [ebp+0x5a],esp
  413ac0:	xor    DWORD PTR [esi],edx
  413ac2:	repz test ebp,ebp
  413ac5:	jbe    0x413ac9
  413ac7:	mov    ds:0x75df287c,al
  413acc:	mov    ds:0x3a5ccb10,eax
  413ad1:	jecxz  0x413a61
  413ad3:	mov    al,ds:0x5d248e3e
  413ad8:	mov    ebp,0x1a6a94cb
  413add:	push   edi
  413ade:	jns    0x413aac
  413ae0:	imul   ecx
  413ae2:	mov    ds:0xdf855fcd,eax
  413ae7:	cmc    
  413ae8:	and    cl,BYTE PTR [ebx]
  413aea:	xchg   BYTE PTR [ebx+0x55203c29],ah
  413af0:	jno    0x413abc
  413af2:	mov    esp,0x8cd999e1
  413af7:	add    ebp,DWORD PTR [edi+0x4f]
  413afa:	adc    DWORD PTR [edi],ebx
  413afc:	push   ds
  413afd:	push   esi
  413afe:	or     dl,0x59
  413b01:	ret    
  413b02:	xchg   DWORD PTR [edx],eax
  413b04:	fld    QWORD PTR [ebx-0x79e54d9a]
  413b0a:	scas   al,BYTE PTR es:[edi]
  413b0b:	imul   ebx,ecx,0xffffffa2
  413b0e:	mov    bh,0x83
  413b10:	in     eax,dx
  413b11:	clc    
  413b12:	iret   
  413b13:	call   0xfe7a64de
  413b18:	das    
  413b19:	mov    dh,0x61
  413b1b:	out    0x51,eax
  413b1d:	daa    
  413b1e:	mov    esp,0xf672ce1e
  413b23:	xor    eax,0x1dccc52e
  413b28:	mov    cl,0xdc
  413b2a:	and    DWORD PTR [edx-0x26],0x4eb5bf3f
  413b31:	and    bl,BYTE PTR [ebp+0x6c]
  413b34:	in     al,0x22
  413b36:	fs addr16 shl ch,cl
  413b3a:	pop    es
  413b3b:	and    al,0x2a
  413b3d:	adc    DWORD PTR [eax+0x70],edi
  413b40:	test   esp,edi
  413b42:	cli    
  413b43:	lock adc edx,DWORD PTR [esi]
  413b46:	xor    dh,0x2e
  413b49:	out    dx,eax
  413b4a:	retf   0x9920
  413b4d:	loop   0x413bb6
  413b4f:	jae    0x413b2f
  413b51:	and    DWORD PTR [edi+0x5577c28c],ecx
  413b57:	mov    esi,DWORD PTR [eax-0x43f92e09]
  413b5d:	cmp    al,0x28
  413b5f:	shl    DWORD PTR [eax-0x80],1
  413b62:	dec    edx
  413b63:	mov    al,ds:0xdb0a79a
  413b68:	or     esp,esp
  413b6a:	repnz and esi,ebp
  413b6d:	adc    al,0x72
  413b6f:	adc    BYTE PTR [ebp+0x18213b65],dl
  413b75:	out    dx,eax
  413b76:	outs   dx,BYTE PTR ds:[esi]
  413b77:	or     eax,eax
  413b79:	push   edx
  413b7a:	or     DWORD PTR [edi-0x2833713b],esp
  413b80:	push   esp
  413b81:	lock cwde 
  413b83:	mov    al,ds:0xf6539138
  413b88:	pop    ds
  413b89:	shr    DWORD PTR [ecx-0x18],1
  413b8c:	xor    eax,0x115c5b46
  413b91:	rol    BYTE PTR [ebx+0x6fbff5d1],cl
  413b97:	or     BYTE PTR [ebx],cl
  413b99:	sub    ah,BYTE PTR [ebx+0x650498fc]
  413b9f:	imul   ebx,ecx,0xce57d9c9
  413ba5:	xor    eax,0x32db419f
  413baa:	pop    edi
  413bab:	mov    bh,0xee
  413bad:	imul   esi,DWORD PTR ds:[eax+0x38],0x86e4ae69
  413bb5:	jmp    0x413ba1
  413bb7:	bound  eax,QWORD PTR [edi]
  413bb9:	and    al,0xeb
  413bbc:	test   al,0x27
  413bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bbf:	mov    WORD PTR [edi+0x47],cs
  413bc2:	fcmovbe st,st(2)
  413bc4:	add    ecx,DWORD PTR [ecx-0x346b0845]
  413bca:	mov    bl,0x2
  413bcc:	mov    BYTE PTR [esi-0xc],bl
  413bcf:	aas    
  413bd0:	push   edi
  413bd1:	mov    BYTE PTR [eax],0x76
  413bd4:	xor    edi,DWORD PTR [edi+edx*8+0x6a29a7be]
  413bdb:	clc    
  413bdc:	in     eax,0xd5
  413bde:	pop    ebx
  413bdf:	xor    eax,edx
  413be1:	dec    ecx
  413be2:	and    DWORD PTR [edi+esi*8-0x2429ce6c],esi
  413be9:	cmp    ebp,esi
  413beb:	xlat   BYTE PTR ds:[ebx]
  413bec:	sbb    eax,0x185c3c7f
  413bf1:	pop    edx
  413bf2:	inc    esp
  413bf3:	and    al,0x5e
  413bf5:	sub    al,0x26
  413bf7:	shr    BYTE PTR [ebp+edx*2-0x60c12a89],0xed
  413bff:	pop    edi
  413c00:	cmp    DWORD PTR [ebx+0x6409c324],ebx
  413c06:	dec    esp
  413c07:	dec    esp
  413c08:	sti    
  413c09:	cwde   
  413c0a:	inc    edx
  413c0b:	imul   DWORD PTR [esi-0x53]
  413c0e:	dec    ebp
  413c0f:	es mov esp,0xc8ba5f7c
  413c15:	jle    0x413be6
  413c17:	jge    0x413c2d
  413c19:	in     al,dx
  413c1a:	shl    BYTE PTR ds:0x4fefee51,cl
  413c20:	xchg   esp,eax
  413c21:	ins    DWORD PTR es:[edi],dx
  413c22:	jmp    0x3ea94fda
  413c27:	stos   DWORD PTR es:[edi],eax
  413c28:	sbb    esi,0x13f82aab
  413c2e:	scas   eax,DWORD PTR es:[edi]
  413c2f:	and    edx,DWORD PTR ds:0xeec1e797
  413c35:	shl    BYTE PTR [ebx-0x249db74e],1
  413c3b:	sbb    eax,0x5a52467
  413c40:	pushf  
  413c41:	mov    esp,?
  413c43:	out    dx,eax
  413c44:	add    eax,0x3020e5f3
  413c49:	(bad)  
  413c4a:	ja     0x413c50
  413c4c:	(bad)
  413c50:	(bad)  
  413c51:	ficom  DWORD PTR [ecx-0xc77166a]
  413c57:	mov    ds:0xb52b18b5,eax
  413c5c:	xchg   edx,eax
  413c5d:	xor    eax,0xd9e7f5da
  413c62:	push   es
  413c63:	outs   dx,DWORD PTR ds:[esi]
  413c64:	adc    eax,DWORD PTR [eax-0x69]
  413c67:	ins    BYTE PTR es:[edi],dx
  413c68:	vmread DWORD PTR [ebp+0x4dc034ed],ecx
  413c6f:	daa    
  413c70:	lea    edi,[ecx+0x584d53ef]
  413c76:	mov    ds:0x49370551,eax
  413c7b:	stos   BYTE PTR es:[edi],al
  413c7c:	aad    0x1d
  413c7e:	fisttp QWORD PTR [edx+0x6a49a899]
  413c84:	sub    BYTE PTR [esi-0xb31870],al
  413c8a:	mov    DWORD PTR [edx+0x3b8b4da0],ecx
  413c90:	call   0x1def:0x6f8d50a0
  413c97:	or     DWORD PTR [edi-0x16],esi
  413c9a:	std    
  413c9b:	cmp    eax,0x4fddd535
  413ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ca1:	fadd   DWORD PTR [edi+0x13]
  413ca4:	imul   cl
  413ca6:	jg     0x413c73
  413ca8:	xchg   ecx,eax
  413ca9:	js     0x413c56
  413cab:	jnp    0x413c3f
  413cad:	adc    esi,esp
  413caf:	arpl   WORD PTR [ebx-0x514f9122],bx
  413cb5:	mov    ds:0x86b96e6e,eax
  413cba:	inc    edx
  413cbb:	mov    dh,0xd7
  413cbd:	and    ebp,ebx
  413cbf:	scas   eax,DWORD PTR es:[edi]
  413cc0:	addr16 inc esi
  413cc2:	add    al,0x89
  413cc4:	inc    ebp
  413cc5:	test   dl,cl
  413cc7:	mov    bh,0x3b
  413cc9:	mov    ss,WORD PTR [esp+ebp*2]
  413ccc:	out    0xf3,eax
  413cce:	pusha  
  413ccf:	xchg   ebp,eax
  413cd0:	(bad)  
  413cd1:	out    0x45,eax
  413cd3:	in     eax,0xdd
  413cd5:	xor    BYTE PTR [esi+ecx*2+0x3c],bl
  413cd9:	sub    edx,DWORD PTR [eax-0x7a]
  413cdc:	outs   dx,BYTE PTR ds:[esi]
  413cdd:	inc    eax
  413cde:	ror    DWORD PTR [eax],1
  413ce0:	fld    QWORD PTR [ebx+0x20b0ed9d]
  413ce6:	mov    ebp,esi
  413ce8:	sahf   
  413ce9:	clc    
  413cea:	aam    0x6b
  413cec:	xchg   edx,eax
  413ced:	pop    ecx
  413cee:	sbb    BYTE PTR [eax-0x733fe129],dh
  413cf4:	sub    BYTE PTR [ebx],bl
  413cf6:	add    DWORD PTR [eax+esi*4-0x18e86e27],eax
  413cfd:	mov    dh,BYTE PTR [eax-0x52869ec5]
  413d03:	sahf   
  413d04:	scas   eax,DWORD PTR es:[edi]
  413d05:	push   eax
  413d06:	das    
  413d07:	out    dx,eax
  413d08:	jecxz  0x413cdd
  413d0a:	test   al,0xb7
  413d0c:	push   0xffffffa7
  413d0e:	lock (bad) 
  413d10:	stos   DWORD PTR es:[edi],eax
  413d11:	or     edi,edi
  413d13:	out    dx,eax
  413d14:	xchg   ecx,eax
  413d15:	jp     0x413c9a
  413d17:	in     eax,dx
  413d18:	out    0xb2,eax
  413d1a:	add    edx,DWORD PTR [ecx]
  413d1c:	and    BYTE PTR [edx],cl
  413d1e:	(bad)  
  413d1f:	jmp    0x87baf621
  413d24:	popf   
  413d25:	push   0xdd09a80
  413d2a:	in     al,0xe8
  413d2c:	shl    esi,1
  413d2e:	in     al,dx
  413d2f:	push   ecx
  413d30:	les    edx,FWORD PTR [ebp+0x2f]
  413d33:	jmp    0x4965:0x4f92dc6a
  413d3a:	pop    ebx
  413d3b:	test   DWORD PTR [esi+0x74c3c87e],esi
  413d41:	cli    
  413d42:	pop    ecx
  413d43:	sbb    eax,0x97c6ba1
  413d48:	shl    DWORD PTR [eax+0x58],1
  413d4b:	mov    bl,0x6a
  413d4d:	fnstenv [eax+ebx*4+0x7ea57502]
  413d54:	in     al,dx
  413d55:	test   al,0xef
  413d57:	or     al,0xbe
  413d59:	outs   dx,DWORD PTR ds:[esi]
  413d5a:	frstor ds:0x9471905f
  413d60:	das    
  413d61:	cmp    bl,BYTE PTR [eax+0x1e]
  413d64:	popf   
  413d65:	icebp  
  413d66:	mov    esi,0x67be741
  413d6b:	add    al,0x11
  413d6d:	xchg   ebx,eax
  413d6e:	dec    edi
  413d6f:	fwait
  413d70:	dec    DWORD PTR ds:0xc60aeb55
  413d76:	add    BYTE PTR [esi-0x11],ch
  413d79:	sub    DWORD PTR [ecx],ebp
  413d7b:	xchg   ecx,eax
  413d7c:	jl     0x413de6
  413d7e:	xchg   DWORD PTR [edx-0x6ecd795a],ebp
  413d84:	and    ebx,DWORD PTR [esi+0x32]
  413d87:	mov    edx,0x232bcb74
  413d8c:	inc    ebp
  413d8d:	cmp    al,0xfa
  413d8f:	mov    cl,0x4f
  413d91:	bound  ebp,QWORD PTR [ecx]
  413d93:	stc    
  413d94:	mov    eax,0xd24cfcb8
  413d99:	and    BYTE PTR [edi],dl
  413d9b:	in     al,0x1a
  413d9d:	cmp    dh,BYTE PTR [edx+0x3b]
  413da0:	lods   eax,DWORD PTR ds:[esi]
  413da1:	add    edx,edi
  413da3:	xchg   ecx,eax
  413da4:	xlat   BYTE PTR ds:[ebx]
  413da5:	fidivr DWORD PTR [ebp-0x5bb69947]
  413dab:	rol    DWORD PTR [eax],0x29
  413dae:	push   esi
  413daf:	daa    
  413db0:	dec    edx
  413db1:	(bad)  
  413db2:	jge    0x413de5
  413db4:	push   ss
  413db5:	sub    DWORD PTR [esi+ecx*2-0x5c],ecx
  413db9:	inc    eax
  413dba:	faddp  st(1),st
  413dbc:	mov    dh,BYTE PTR [edx+edx*1-0x78c92ecb]
  413dc3:	xchg   ebp,eax
  413dc4:	push   esp
  413dc5:	lds    esp,FWORD PTR [edx+esi*2+0x5180aabe]
  413dcc:	jl     0x413d8b
  413dce:	fwait
  413dcf:	adc    al,0x6c
  413dd1:	clc    
  413dd2:	adc    ah,BYTE PTR [esi+0x76]
  413dd5:	mov    fs,WORD PTR [esi+0x6b0e52ef]
  413ddb:	je     0x413d97
  413ddd:	push   edx
  413dde:	adc    esp,esi
  413de0:	jnp    0x413e3a
  413de2:	sub    ch,BYTE PTR [ebp+0x40]
  413de5:	push   ebx
  413de6:	rcl    BYTE PTR [esi+0x3de6f0b4],cl
  413dec:	and    BYTE PTR [eax+0x4b3d5188],0x5e
  413df3:	jo     0x413db4
  413df5:	xor    al,0xde
  413df7:	mov    ch,BYTE PTR [edi-0x5d8e5ecc]
  413dfd:	inc    ebx
  413dfe:	xor    al,0x24
  413e00:	(bad)  
  413e01:	stc    
  413e02:	xor    BYTE PTR [edi+0x620cedc8],dl
  413e08:	cmp    eax,0x68d4e06e
  413e0d:	mov    ebx,0x2e042648
  413e12:	test   DWORD PTR [ebx],edx
  413e14:	jbe    0x413e51
  413e16:	xchg   ecx,eax
  413e17:	xchg   edi,eax
  413e18:	imul   ecx,DWORD PTR ds:0xa1dd,0x8283bee
  413e21:	out    dx,al
  413e22:	push   edx
  413e23:	nop
  413e24:	dec    edx
  413e25:	addr16 or eax,0x764897be
  413e2b:	xchg   BYTE PTR [eax+0x41],dh
  413e2e:	pop    eax
  413e2f:	addr16 adc al,0x4e
  413e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e33:	aam    0xea
  413e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e36:	ins    DWORD PTR es:[edi],dx
  413e37:	or     eax,0xcd8e6cab
  413e3c:	or     DWORD PTR [ebp-0x1d],esp
  413e3f:	int3   
  413e40:	push   eax
  413e41:	aaa    
  413e42:	push   edx
  413e43:	jno    0x413ea4
  413e45:	retf   0x1275
  413e48:	xchg   BYTE PTR [edx-0x73],al
  413e4b:	hlt    
  413e4c:	(bad)  
  413e4d:	stc    
  413e4e:	pop    edi
  413e4f:	xchg   esi,eax
  413e50:	jle    0x413e59
  413e52:	sbb    ecx,0xffffff87
  413e55:	xor    dh,BYTE PTR [esp+edx*4+0x7230992b]
  413e5c:	push   edi
  413e5d:	outs   dx,BYTE PTR ds:[esi]
  413e5e:	popf   
  413e5f:	shl    DWORD PTR [esi-0x4ea01bf7],0x5c
  413e66:	std    
  413e67:	xor    al,0xa3
  413e69:	(bad)
  413e6c:	dec    edx
  413e6d:	xor    al,0x4
  413e6f:	out    dx,al
  413e70:	sbb    al,0x51
  413e72:	(bad)  
  413e73:	fadd   st(3),st
  413e75:	addr16 xchg edi,eax
  413e77:	fimul  DWORD PTR [edi]
  413e79:	enter  0x4ba5,0x95
  413e7d:	mov    esi,0xa6ac9ae2
  413e82:	cli    
  413e83:	push   cs
  413e84:	das    
  413e85:	fwait
  413e86:	adc    DWORD PTR [esi-0x8],ecx
  413e89:	mov    ebx,0xd429b87a
  413e8e:	push   ss
  413e8f:	das    
  413e90:	popa   
  413e91:	test   eax,0xc02eb5e2
  413e96:	jo     0x413ecf
  413e98:	loopne 0x413e7b
  413e9a:	out    0x6e,al
  413e9c:	push   0x3b
  413e9e:	inc    ebx
  413e9f:	inc    esi
  413ea0:	push   ebx
  413ea1:	clc    
  413ea2:	ficom  WORD PTR [esi+0x77f2b5ec]
  413ea8:	sub    ch,0x3a
  413eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eac:	push   ecx
  413ead:	mov    ebx,0x48d5ac0d
  413eb2:	cld    
  413eb3:	hlt    
  413eb4:	xchg   esp,eax
  413eb5:	mov    bl,0x74
  413eb7:	cmp    ch,BYTE PTR [eax]
  413eb9:	fistp  QWORD PTR [ebp+0x202aeb]
  413ebf:	(bad)  [esi+0x50]
  413ec2:	mov    ch,0x3b
  413ec4:	pop    ds
  413ec5:	dec    edx
  413ec6:	mov    dh,BYTE PTR [ebp-0x4531c08b]
  413ecc:	in     eax,0x45
  413ece:	push   es
  413ecf:	xor    BYTE PTR [ebp+0x57],ah
  413ed2:	pusha  
  413ed3:	sub    edx,DWORD PTR [edx+ecx*4-0x6e]
  413ed7:	out    0x12,al
  413ed9:	push   ds
  413eda:	sub    al,0x82
  413edc:	fadd   DWORD PTR [edi-0x62a70a20]
  413ee2:	and    ah,dl
  413ee4:	jecxz  0x413f39
  413ee6:	sahf   
  413ee7:	or     DWORD PTR [edx+eiz*1-0x611e4eb8],ebp
  413eee:	cmp    BYTE PTR [edx-0x10ef6694],cl
  413ef4:	test   DWORD PTR [eax+0x17],esi
  413ef7:	fidivr DWORD PTR [ebx]
  413ef9:	in     al,dx
  413efa:	fwait
  413efb:	cmp    eax,0xc7c59af8
  413f00:	daa    
  413f01:	add    esp,DWORD PTR [ebx-0x17b0c93d]
  413f07:	mov    ds:0x2606cee5,al
  413f0c:	jle    0x413f2e
  413f0e:	cmp    BYTE PTR [edi],0x6d
  413f11:	bound  ebp,QWORD PTR [eax+0x6e]
  413f14:	xchg   DWORD PTR [esi+0x53c90ab5],ebx
  413f1a:	idiv   BYTE PTR [ebx+0x34]
  413f1d:	dec    ebx
  413f1e:	mov    edi,0x4efff46b
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f25:	popa   
  413f26:	mov    bh,0xeb
  413f28:	push   es
  413f29:	loop   0x413f5c
  413f2b:	neg    BYTE PTR [ebp-0x5d]
  413f2e:	call   0x6b56:0x8d8013d4
  413f35:	sbb    al,BYTE PTR [ecx+0x48]
  413f38:	das    
  413f39:	mov    ds:0x162051ef,eax
  413f3e:	pusha  
  413f3f:	mov    edi,0xef92495a
  413f44:	stos   DWORD PTR es:[edi],eax
  413f45:	and    esp,0x3c736afe
  413f4b:	xchg   edi,eax
  413f4c:	iret   
  413f4d:	adc    al,0x96
  413f4f:	sbb    edx,0x9217e245
  413f55:	lods   al,BYTE PTR ds:[esi]
  413f56:	xchg   ebx,edi
  413f58:	ds (bad) 
  413f5a:	or     al,0x67
  413f5c:	adc    BYTE PTR [ecx+0x73],bl
  413f5f:	pop    ds
  413f60:	pop    eax
  413f61:	retf   0x1fbc
  413f64:	gs or  edx,edi
  413f67:	xchg   edi,eax
  413f68:	in     eax,0x5
  413f6a:	jnp    0x413f8e
  413f6c:	dec    ebx
  413f6d:	mov    eax,ds:0xd5a7a61f
  413f72:	test   bl,ah
  413f74:	ret    
  413f75:	out    0x43,eax
  413f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f78:	xlat   BYTE PTR ds:[ebx]
  413f79:	mov    dh,ah
  413f7b:	or     al,BYTE PTR [eax-0x5]
  413f7e:	xchg   esp,eax
  413f7f:	cwde   
  413f80:	inc    ebx
  413f81:	sbb    bl,BYTE PTR [eax-0x4697633a]
  413f87:	repz fst QWORD PTR [edx]
  413f8a:	les    eax,FWORD PTR [esi+0xfeb964c]
  413f90:	in     eax,0x4a
  413f92:	xchg   edx,eax
  413f93:	push   ebp
  413f94:	(bad)  
  413f95:	mov    ds:0x4ab3ead1,eax
  413f9a:	adc    BYTE PTR [ecx],dl
  413f9c:	sbb    BYTE PTR [ecx],cl
  413f9e:	stos   BYTE PTR es:[edi],al
  413f9f:	jle    0x413f36
  413fa1:	fld    QWORD PTR [edi+0x57]
  413fa4:	sbb    dh,ah
  413fa6:	pushf  
  413fa7:	or     al,0xe5
  413fa9:	sub    ebx,0x4d
  413fac:	push   ebp
  413fad:	mov    edi,0x86157400
  413fb2:	data16 or al,0xfe
  413fb5:	pop    ds
  413fb6:	or     BYTE PTR [eax],0x40
  413fb9:	cmp    ebx,DWORD PTR [eax-0x3816fca]
  413fbf:	jbe    0x413f5c
  413fc1:	sub    al,0xdd
  413fc3:	loopne 0x413ff7
  413fc5:	and    ecx,DWORD PTR ds:0x5b220040
  413fcb:	jl     0x414028
  413fcd:	jle    0x413f79
  413fcf:	mov    edx,?
  413fd1:	inc    edi
  413fd2:	test   al,0xd
  413fd4:	or     al,0x1c
  413fd6:	mov    al,0x39
  413fd8:	add    al,0x49
  413fda:	add    bh,BYTE PTR ds:0x13031848
  413fe1:	or     esi,edi
  413fe3:	jns    0x413f86
  413fe5:	frstor [edx+eax*1+0x45]
  413fe9:	push   edi
  413fea:	xchg   edi,eax
  413feb:	or     bh,dh
  413fed:	sbb    eax,0x459550ce
  413ff2:	loop   0x414063
  413ff4:	jbe    0x413fa7
  413ff6:	mov    ds:0xefeda81b,eax
  413ffb:	cld    
  413ffc:	jbe    0x414037
  413ffe:	rcr    ebp,cl
  414000:	pop    eax
  414001:	lods   eax,DWORD PTR ds:[esi]
  414002:	mov    ch,0x7e
  414004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414005:	outs   dx,DWORD PTR fs:[esi]
  414007:	gs fs loope 0x414005
  41400b:	fidiv  WORD PTR [edi]
  41400d:	popa   
  41400e:	sub    al,0x35
  414010:	push   esp
  414011:	pop    eax
  414012:	pop    esp
  414013:	xor    al,0x7
  414015:	scas   eax,DWORD PTR es:[edi]
  414016:	xchg   edi,eax
  414017:	mov    esi,0x64fc5e23
  41401c:	adc    esp,DWORD PTR [ebx-0x2ff007be]
  414022:	inc    esi
  414023:	mov    bh,bl
  414025:	push   edx
  414026:	js     0x413ff5
  414028:	imul   esi,DWORD PTR [eax+0x53b46543],0xffffffa4
  41402f:	outs   dx,BYTE PTR ds:[esi]
  414030:	leave  
  414031:	ret    
  414032:	ins    BYTE PTR es:[edi],dx
  414033:	popa   
  414034:	scas   eax,DWORD PTR es:[edi]
  414035:	push   0x2
  414037:	loope  0x413ff2
  414039:	jnp    0x414089
  41403b:	popf   
  41403c:	call   0x23bf0ed3
  414041:	xchg   ecx,eax
  414042:	mov    edi,0x7de18fe3
  414047:	xor    BYTE PTR [ebx+0x705607a2],cl
  41404d:	lahf   
  41404e:	leave  
  41404f:	popa   
  414050:	(bad)  
  414051:	xchg   ecx,eax
  414052:	rcl    DWORD PTR [eax-0x2c],0xe1
  414056:	jmp    0xe29a:0xc88a51b6
  41405d:	adc    BYTE PTR [esi+0x34],al
  414060:	popf   
  414061:	jb     0x4140ae
  414063:	sbb    edx,DWORD PTR [edx+0xaf05033]
  414069:	xor    ch,BYTE PTR [ebx+0xdff01db]
  41406f:	push   ss
  414070:	in     al,dx
  414071:	jbe    0x4140c1
  414073:	sahf   
  414074:	cs push ebx
  414076:	aas    
  414077:	mov    eax,0xd5b4a62d
  41407c:	fldenv [edx+0x4d4261b7]
  414082:	pop    edx
  414083:	sbb    BYTE PTR [ecx-0x642d3ae3],cl
  414089:	test   bh,bh
  41408b:	imul   ecx,DWORD PTR [eax],0xfffffff7
  41408e:	or     ebp,DWORD PTR [esi+0x76]
  414091:	aad    0x1
  414093:	imul   ebp,DWORD PTR [eax],0xa8c6d03f
  414099:	lods   eax,DWORD PTR ds:[esi]
  41409a:	fsubr  QWORD PTR [eax-0x8]
  41409d:	test   BYTE PTR ds:0x67d1c0e1,ah
  4140a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140a4:	jmp    FWORD PTR [eax]
  4140a6:	xor    eax,0xca92e3cf
  4140ab:	cmp    dl,BYTE PTR [ebx-0x6]
  4140ae:	test   al,0x1a
  4140b0:	aad    0xcc
  4140b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140b3:	aam    0xf9
  4140b5:	mov    eax,ds:0x6de848cf
  4140ba:	nop
  4140bb:	shl    BYTE PTR [eax+0x147e41ff],1
  4140c1:	jg     0x4140f5
  4140c3:	test   DWORD PTR [esi+ebx*1-0x13],esp
  4140c7:	cld    
  4140c8:	jns    0x4140df
  4140ca:	jo     0x4140d1
  4140cc:	loopne 0x4140cb
  4140ce:	fs aas 
  4140d0:	cdq    
  4140d1:	and    al,0x53
  4140d3:	rcl    bh,cl
  4140d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140d6:	xchg   esi,eax
  4140d7:	daa    
  4140d8:	mov    ecx,0x5c5fa1f4
  4140dd:	or     BYTE PTR [edx-0x6d11068b],0x12
  4140e4:	in     eax,0xda
  4140e6:	sti    
  4140e7:	out    0x8e,al
  4140e9:	ins    DWORD PTR es:[edi],dx
  4140ea:	push   0xffffff8a
  4140ec:	ss xor edx,ebx
  4140ef:	push   0x27
  4140f1:	mov    eax,0x3a16ced4
  4140f6:	in     al,dx
  4140f7:	lods   eax,DWORD PTR ds:[esi]
  4140f8:	in     eax,0x52
  4140fa:	jo     0x4140f1
  4140fc:	xor    al,0xd6
  4140fe:	rol    bh,0xb2
  414101:	mov    bh,0x45
  414103:	sub    eax,DWORD PTR [edx+edx*8-0x7e66be35]
  41410a:	sbb    eax,0x579c32fb
  41410f:	jb     0x4140d4
  414111:	sub    edi,DWORD PTR [ebx]
  414113:	out    dx,al
  414114:	out    0x44,al
  414116:	cmp    ebp,0x69
  414119:	mov    ds:0x7721367d,eax
  41411e:	jmp    0x414139
  414120:	sub    DWORD PTR [edi],0x5b9de7c0
  414126:	iret   
  414127:	push   0xd0682e65
  41412c:	push   esp
  41412d:	rcl    DWORD PTR [edx-0x2e],1
  414130:	jge    0x41411a
  414132:	test   al,0x81
  414134:	(bad)  
  414135:	adc    edx,DWORD PTR [ecx-0x46cbbada]
  41413b:	ss and eax,0xa1225c87
  414141:	push   ebp
  414142:	push   ebp
  414143:	pop    edx
  414144:	mov    dh,0x3d
  414146:	retf   0xa687
  414149:	sub    edi,ebx
  41414b:	add    bh,bl
  41414d:	lds    edi,FWORD PTR [ebp+edx*8+0x68]
  414151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414152:	enter  0x405,0xd1
  414156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414157:	pushf  
  414158:	or     DWORD PTR [esi],esp
  41415a:	push   eax
  41415b:	jne    0x41415b
  41415d:	adc    bl,BYTE PTR [esi-0x32]
  414160:	xor    DWORD PTR [ecx-0x2e],esp
  414163:	stos   BYTE PTR es:[edi],al
  414164:	stos   BYTE PTR es:[edi],al
  414165:	out    dx,eax
  414166:	loop   0x4141d4
  414168:	mov    eax,ds:0xec9ae431
  41416d:	cmp    BYTE PTR [ebx+edi*1-0x62],bl
  414171:	stc    
  414172:	bound  edi,QWORD PTR [ebx-0x3c]
  414175:	and    DWORD PTR [edi-0x2af0dffa],ecx
  41417b:	mov    al,ds:0xb501aee3
  414180:	mov    DWORD PTR [edi],ebp
  414182:	(bad)  
  414183:	jecxz  0x4141ba
  414185:	mov    esp,0x6a55fdf
  41418a:	stos   BYTE PTR es:[edi],al
  41418b:	test   DWORD PTR [esi+ebp*1-0x6e],esp
  41418f:	pop    ebx
  414190:	iret   
  414191:	add    ebx,0x4b162d9c
  414197:	test   eax,0xf7068faa
  41419c:	pop    ecx
  41419d:	sub    eax,0xfeff5dce
  4141a2:	test   dl,dl
  4141a4:	adc    edi,eax
  4141a6:	imul   esp,DWORD PTR [ebx*8-0x5ea5e80d],0xed3b7724
  4141b1:	mov    ds:0x6488228,eax
  4141b6:	xor    DWORD PTR ds:0x893affde,ecx
  4141bc:	and    cl,BYTE PTR [ebx-0x6c]
  4141bf:	rcl    BYTE PTR [ecx-0x4134de0e],cl
  4141c5:	jbe    0x4141a0
  4141c7:	xor    DWORD PTR [ebx-0x7c0ad4f5],ebp
  4141cd:	dec    esp
  4141ce:	fisubr DWORD PTR [ecx]
  4141d0:	inc    eax
  4141d1:	ret    0xf97e
  4141d4:	lea    edx,[edx-0x5d904a26]
  4141da:	jns    0x4141f8
  4141dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141dd:	cmp    BYTE PTR [eax+0x26],ah
  4141e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141e1:	retf   
  4141e2:	xor    al,0xab
  4141e4:	lahf   
  4141e5:	sbb    al,0xd1
  4141e7:	test   DWORD PTR [edx+0x64],eax
  4141ea:	push   eax
  4141eb:	xchg   ebp,eax
  4141ec:	js     0x41425c
  4141ee:	bound  ebx,QWORD PTR [edi+0x3e]
  4141f1:	or     DWORD PTR [eax+ebx*1+0x0],ecx
  4141f5:	cmp    ch,BYTE PTR [eax+0x56513adb]
  4141fb:	inc    esp
  4141fc:	pushf  
  4141fd:	sbb    cl,BYTE PTR gs:[edi+0xd]
  414201:	xchg   ecx,eax
  414202:	fstp   TBYTE PTR [ebx]
  414204:	scas   al,BYTE PTR es:[edi]
  414205:	retf   
  414206:	dec    edi
  414207:	pop    eax
  414208:	jecxz  0x414264
  41420a:	shr    BYTE PTR [edi-0x65a4f20b],1
  414210:	fbld   TBYTE PTR [eax]
  414212:	dec    ebp
  414213:	int    0x8b
  414215:	xchg   esp,eax
  414216:	arpl   di,si
  414218:	dec    eax
  414219:	mov    ds:0x6b1b79d1,eax
  41421e:	and    DWORD PTR [eax],ecx
  414220:	pop    ecx
  414221:	cld    
  414222:	xchg   esp,eax
  414223:	vmulss xmm5,xmm2,DWORD PTR [eax+edx*1-0x22]
  414229:	cmp    eax,0xc370aa23
  41422e:	scas   eax,DWORD PTR es:[edi]
  41422f:	loopne 0x41428f
  414231:	and    ebp,esp
  414233:	mov    DWORD PTR [ebx+0x39],ecx
  414236:	or     BYTE PTR [ecx+0x7782883d],0x27
  41423d:	cmp    BYTE PTR [ecx],0x77
  414240:	or     BYTE PTR [ebx],dl
  414242:	xchg   ebx,eax
  414243:	outs   dx,DWORD PTR ds:[esi]
  414244:	(bad)  
  414245:	in     eax,0x86
  414247:	mov    ecx,0x6222f3b5
  41424c:	mov    esi,0x9f0f4d2e
  414251:	jmp    0x113:0xe9c00a41
  414258:	pop    eax
  414259:	add    BYTE PTR [esi+0x33],al
  41425c:	sahf   
  41425d:	and    eax,0xfc781e33
  414262:	dec    ebx
  414263:	inc    ecx
  414264:	push   esi
  414265:	mov    ebx,0x3ac014b4
  41426a:	mov    dh,0x7d
  41426c:	xchg   edx,eax
  41426d:	out    dx,eax
  41426e:	xor    DWORD PTR [edx],ecx
  414270:	sub    eax,0xef975fc
  414275:	sbb    DWORD PTR [edx+0x57],0x65bcf447
  41427c:	xor    cl,BYTE PTR [edi+0x77979660]
  414282:	das    
  414283:	daa    
  414284:	push   ds
  414285:	leave  
  414286:	scas   al,BYTE PTR es:[edi]
  414287:	adc    cl,BYTE PTR [esi-0x4d0d7d11]
  41428d:	std    
  41428e:	or     BYTE PTR ds:0xb347635a,bl
  414294:	adc    al,0x5e
  414296:	icebp  
  414297:	inc    esp
  414298:	pop    eax
  414299:	shl    dh,0x24
  41429c:	sub    ch,0x5e
  41429f:	popa   
  4142a0:	jb     0x4142a0
  4142a2:	xchg   BYTE PTR [eax+esi*1+0x60cebc06],cl
  4142a9:	cli    
  4142aa:	test   BYTE PTR [eax+0x77510d0c],cl
  4142b0:	ins    DWORD PTR es:[edi],dx
  4142b1:	push   ecx
  4142b2:	push   0x1c
  4142b4:	mov    eax,ds:0x5bac66a9
  4142b9:	push   edi
  4142ba:	(bad)  
  4142bc:	imul   eax,DWORD PTR [esi+0x65],0xffffff81
  4142c0:	push   ebx
  4142c1:	shl    ch,1
  4142c3:	repz xor ecx,DWORD PTR [ecx]
  4142c6:	mov    eax,gs:0x9b106d09
  4142cc:	sub    al,0xe
  4142ce:	cmp    al,0x3f
  4142d0:	popa   
  4142d1:	sahf   
  4142d2:	imul   edi,edx,0x5c
  4142d5:	mov    dh,0xbb
  4142d7:	pusha  
  4142d8:	xchg   bl,dl
  4142da:	out    0xc0,al
  4142dc:	hlt    
  4142dd:	inc    esp
  4142de:	jne    0x414266
  4142e0:	js     0x414269
  4142e2:	mov    ch,0x7f
  4142e4:	imul   esp,DWORD PTR [bx],0x3efb5182
  4142eb:	(bad)
  4142ee:	dec    ecx
  4142ef:	pop    eax
  4142f0:	outs   dx,DWORD PTR ds:[esi]
  4142f1:	inc    esi
  4142f2:	cdq    
  4142f3:	pop    esp
  4142f4:	in     eax,dx
  4142f5:	and    BYTE PTR [ebx+eax*4],al
  4142f8:	sbb    dl,BYTE PTR [edi-0x72b24aed]
  4142fe:	repnz inc esp
  414300:	(bad)  
  414301:	jns    0x414305
  414303:	test   al,0xea
  414305:	ret    0x1b0d
  414308:	nop
  414309:	test   eax,0xff1970fc
  41430e:	mov    eax,ds:0xa0080584
  414313:	fistp  DWORD PTR [ebx+eiz*4+0x51]
  414317:	cmp    BYTE PTR [ebp+0x321c81e4],bh
  41431d:	mov    dl,0x63
  41431f:	dec    eax
  414320:	sbb    bl,cl
  414322:	rcr    DWORD PTR [ecx],1
  414324:	call   0x5996:0x3f8bf541
  41432b:	inc    edx
  41432c:	not    DWORD PTR [ebp+0xc2f5273]
  414332:	mov    ah,0xf4
  414334:	int    0x6b
  414336:	fld    DWORD PTR [ebx]
  414338:	fcomp  st(2)
  41433a:	imul   edi,DWORD PTR [eax-0x68ba675d],0xffffffba
  414341:	pop    ds
  414342:	dec    esp
  414343:	sub    DWORD PTR [edi+0x35dff14c],esp
  414349:	test   eax,0x18cd5e74
  41434e:	leave  
  41434f:	push   es
  414350:	xor    BYTE PTR [ecx+0x22584194],bh
  414356:	push   ds
  414357:	cs jg  0x4143b0
  41435a:	(bad)  
  41435b:	add    eax,0x4b63d3c9
  414360:	add    al,0xf2
  414362:	in     al,0xb2
  414364:	jge    0x41432d
  414366:	ret    
  414367:	sbb    DWORD PTR [ecx-0x1a71b99],ebx
  41436d:	add    al,0xbd
  41436f:	sbb    eax,ebp
  414371:	mov    ds,WORD PTR [edx+esi*4]
  414374:	sbb    BYTE PTR [esi+0x4695b504],bh
  41437a:	xor    eax,0x3e197803
  41437f:	mov    ebp,0xbc12335b
  414384:	mov    ch,0xc1
  414386:	inc    edi
  414387:	push   ecx
  414388:	div    DWORD PTR [ecx]
  41438a:	xchg   ebx,eax
  41438b:	xchg   edi,eax
  41438c:	fldenv [esi+0x76aff252]
  414392:	jo     0x414406
  414394:	mov    DWORD PTR [esi-0x280afc1c],edx
  41439a:	dec    esp
  41439b:	(bad)  
  41439c:	cmp    al,0x89
  41439e:	cmp    ebx,DWORD PTR [ebp-0x10a872e1]
  4143a4:	mov    edx,ebx
  4143a6:	les    eax,FWORD PTR ds:0x2f1c288a
  4143ac:	js     0x4143d6
  4143ae:	cmp    ch,cl
  4143b0:	sbb    al,0xff
  4143b2:	dec    ebp
  4143b3:	sbb    BYTE PTR [ebp+0x7b],al
  4143b6:	cmp    DWORD PTR [eax-0x4d2d08be],esi
  4143bc:	daa    
  4143bd:	or     eax,0x2e616f9a
  4143c2:	cmp    esi,eax
  4143c4:	pop    ss
  4143c5:	xor    al,0xa7
  4143c7:	add    ebp,DWORD PTR [edx+0x164dfb07]
  4143cd:	js     0x414401
  4143cf:	pop    ds
  4143d0:	sbb    al,0x54
  4143d2:	xchg   ecx,eax
  4143d3:	push   esi
  4143d4:	scas   eax,DWORD PTR es:[edi]
  4143d5:	pushf  
  4143d6:	nop    esi
  4143d9:	sub    eax,ebx
  4143db:	in     eax,0x60
  4143dd:	mov    dl,0x9d
  4143df:	mov    ds:0x22d16fbe,eax
  4143e4:	xchg   ecx,eax
  4143e5:	and    eax,0x8d57b7f
  4143ea:	jle    0x4143df
  4143ec:	fimul  DWORD PTR [eax+esi*2]
  4143ef:	push   edi
  4143f0:	mov    ah,0x1c
  4143f2:	es fdiv st,st(4)
  4143f5:	pop    es
  4143f6:	arpl   WORD PTR [ecx],dx
  4143f8:	leave  
  4143f9:	int3   
  4143fa:	inc    ebx
  4143fb:	cmp    cl,BYTE PTR ds:0x2a885496
  414401:	adc    ebp,esp
  414403:	and    al,0x3b
  414405:	hlt    
  414406:	jg     0x4143cb
  414408:	in     eax,dx
  414409:	xchg   BYTE PTR [ebx+0x16c27f8b],dl
  41440f:	mov    edi,0xe85a96a6
  414414:	xchg   esp,eax
  414415:	xchg   ebx,eax
  414416:	pop    eax
  414417:	bound  edx,QWORD PTR [esi-0x38]
  41441a:	push   edi
  41441b:	add    BYTE PTR [eax],cl
  41441d:	lea    edi,[edi+ebx*1+0x7319aa21]
  414424:	in     al,dx
  414425:	add    dh,BYTE PTR [eax+eax*8+0x17]
  414429:	int    0x9b
  41442b:	ret    0x5ad0
  41442e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41442f:	lods   eax,DWORD PTR ds:[esi]
  414430:	cmp    DWORD PTR [ecx+0x112ff26a],esi
  414436:	and    eax,0x52817123
  41443b:	mov    ebp,0x151d2249
  414440:	inc    edx
  414441:	int    0x6a
  414443:	push   ebp
  414444:	dec    esp
  414445:	icebp  
  414446:	dec    esi
  414447:	out    0x1f,al
  414449:	xor    ch,BYTE PTR [edx]
  41444b:	pusha  
  41444c:	(bad)  
  41444d:	int    0xb1
  41444f:	inc    eax
  414450:	dec    ebp
  414451:	or     BYTE PTR [edi+0x5b],cl
  414454:	jp     0x41446a
  414456:	jmp    0x41444c
  414458:	lea    ebx,[edx-0x3c]
  41445b:	clc    
  41445c:	xchg   ecx,eax
  41445d:	out    dx,eax
  41445e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41445f:	sub    BYTE PTR [ebx-0x3],0xf
  414463:	pop    esi
  414464:	repz pusha 
  414466:	pop    ebx
  414467:	test   ah,bh
  414469:	pop    ebp
  41446a:	cmc    
  41446b:	in     al,0xf9
  41446d:	retf   
  41446e:	scas   eax,DWORD PTR es:[edi]
  41446f:	(bad)  
  414470:	jp     0x414496
  414472:	and    al,dh
  414474:	push   edx
  414475:	into   
  414476:	mov    cl,0x5c
  414478:	in     al,dx
  414479:	test   cl,dl
  41447b:	aaa    
  41447c:	icebp  
  41447d:	xchg   edx,eax
  41447e:	loop   0x4144ed
  414480:	fwait
  414481:	pusha  
  414482:	ret    
  414483:	fsubr  DWORD PTR [edx+0x4c3ecaf6]
  414489:	aaa    
  41448a:	sbb    ebx,ebx
  41448c:	fsubr  DWORD PTR [edi+0x16]
  41448f:	xor    DWORD PTR [ebx-0x4d],0x461fa1ee
  414496:	icebp  
  414497:	sub    edi,DWORD PTR [edx-0x2e]
  41449a:	cmc    
  41449b:	sbb    ebx,DWORD PTR [edi-0x22]
  41449e:	ja     0x414491
  4144a0:	jb     0x41442a
  4144a2:	dec    edx
  4144a3:	cld    
  4144a4:	call   0x697009a3
  4144a9:	loop   0x414456
  4144ab:	jg     0x414498
  4144ad:	(bad)  
  4144ae:	idiv   ebp
  4144b0:	clc    
  4144b1:	imul   eax,DWORD PTR [ecx],0xffffffa2
  4144b4:	out    dx,eax
  4144b5:	jo     0x4144d8
  4144b7:	sbb    eax,0xf88642d7
  4144bc:	jno    0x41449c
  4144be:	pop    eax
  4144bf:	loop   0x4144e7
  4144c1:	ror    edi,0xef
  4144c4:	jo     0x4144b6
  4144c6:	dec    edx
  4144c7:	dec    edi
  4144c8:	mov    dh,0x9b
  4144ca:	not    esp
  4144cc:	(bad)  
  4144cd:	jp     0x4144ed
  4144cf:	mov    esp,DWORD PTR [edi-0x1795bfa5]
  4144d5:	sub    al,0x81
  4144d7:	xchg   esp,eax
  4144d8:	inc    esi
  4144d9:	add    dh,BYTE PTR [esi]
  4144db:	pop    ebx
  4144dc:	cmp    ebp,DWORD PTR [eax]
  4144de:	jnp    0x4144a2
  4144e0:	in     al,0xa5
  4144e2:	sbb    eax,0xe79a43ee
  4144e7:	stos   BYTE PTR es:[edi],al
  4144e8:	nop
  4144e9:	sub    ebp,eax
  4144eb:	or     eax,0x5c5c1545
  4144f0:	daa    
  4144f1:	pop    ebx
  4144f2:	dec    ebx
  4144f3:	inc    ecx
  4144f4:	ret    
  4144f5:	fbstp  TBYTE PTR [ecx-0x39]
  4144f8:	data16 adc BYTE PTR [ebp+ebp*4+0x47],dh
  4144fd:	cmp    BYTE PTR [edi-0x45],dl
  414500:	dec    esp
  414501:	jae    0x41456d
  414503:	sbb    eax,0x6f715d14
  414508:	xchg   DWORD PTR [ebx],eax
  41450a:	retf   0xa010
  41450d:	test   BYTE PTR [edx-0x79931005],0x1e
  414514:	aam    0xdc
  414516:	in     al,0xc6
  414518:	ror    BYTE PTR [ecx],0x76
  41451b:	arpl   WORD PTR [ebp+0x62],di
  41451e:	mov    ds:0xce4f3308,eax
  414523:	iret   
  414524:	and    al,0x28
  414526:	xor    ecx,DWORD PTR [edx+0x3cdac635]
  41452c:	sbb    DWORD PTR [edi],edx
  41452e:	mov    BYTE PTR [edx-0x27],dl
  414531:	stos   BYTE PTR es:[edi],al
  414532:	mov    bh,0xb2
  414534:	icebp  
  414535:	xchg   ecx,eax
  414536:	test   eax,0x59d6fe71
  41453b:	loope  0x414561
  41453d:	(bad)  
  41453e:	jge    0x41454b
  414540:	fidivr WORD PTR [esi-0x46]
  414543:	stc    
  414544:	(bad)  
  414545:	loopne 0x4144e4
  414547:	jge    0x4145ba
  414549:	icebp  
  41454a:	lods   al,BYTE PTR ds:[esi]
  41454b:	or     DWORD PTR [eax+0x643c9c6f],0x1a
  414552:	mov    bl,0xe
  414554:	xor    eax,0xddb17255
  414559:	push   cs
  41455a:	cmp    ecx,DWORD PTR [ecx+0x29]
  41455d:	stos   DWORD PTR es:[edi],eax
  41455e:	jl     0x4145ac
  414560:	shr    BYTE PTR [ebx],cl
  414562:	call   0xc006:0x7221bc15
  414569:	(bad)  
  41456a:	jmp    0x414509
  41456c:	mov    cl,0x8b
  41456e:	jp     0x4145e4
  414570:	lahf   
  414571:	icebp  
  414572:	enter  0x7900,0x25
  414576:	sbb    esp,DWORD PTR [eax+0x3de217f5]
  41457c:	in     al,0x2d
  41457e:	cmp    bl,BYTE PTR [edi-0x54cd7a1]
  414584:	xchg   BYTE PTR [ebp+0x1],ch
  414587:	add    edx,DWORD PTR [edi+0x3d05fd6c]
  41458d:	cmp    eax,0xa6daefd4
  414592:	xor    al,0xa5
  414594:	lds    esp,FWORD PTR [ebp+0x15]
  414597:	add    DWORD PTR [ebx],esp
  414599:	and    eax,0xc0aa710
  41459e:	stos   DWORD PTR es:[edi],eax
  41459f:	dec    edx
  4145a0:	mov    ch,0x26
  4145a2:	test   DWORD PTR [ebp+ebp*2-0x4c],0xff0a938c
  4145aa:	pop    esp
  4145ab:	(bad)  
  4145ac:	jmp    0xe8e2:0xef50b98
  4145b3:	xchg   ecx,eax
  4145b4:	jge    0x414624
  4145b6:	mov    cl,0x53
  4145b8:	cs dec ecx
  4145ba:	fs sar dl,cl
  4145bd:	pushf  
  4145be:	mov    cl,0x33
  4145c0:	mov    dh,0x69
  4145c2:	xchg   ecx,eax
  4145c3:	inc    edi
  4145c4:	ror    BYTE PTR [ecx+0x6d5bba0],1
  4145ca:	cmp    esi,DWORD PTR [esi-0x26aa9185]
  4145d0:	pop    es
  4145d1:	push   ss
  4145d2:	lea    edi,[eax+0x37244319]
  4145d8:	les    esi,FWORD PTR ds:0x7dbfde00
  4145de:	xchg   ebp,eax
  4145df:	(bad)  
  4145e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145e1:	das    
  4145e2:	push   ss
  4145e3:	lock (bad) 
  4145e5:	xchg   ecx,eax
  4145e6:	jbe    0x414593
  4145e8:	mov    WORD PTR [esi],ss
  4145ea:	out    dx,eax
  4145eb:	(bad)  
  4145ec:	shl    ebx,0xad
  4145ef:	xor    cl,BYTE PTR [ebx-0x6833096f]
  4145f5:	mov    eax,DWORD PTR [ecx]
  4145f7:	dec    eax
  4145f8:	(bad)  
  4145f9:	sbb    DWORD PTR [edx+0x10],ebp
  4145fc:	pusha  
  4145fd:	call   0x3f9d:0xfa4de8d4
  414604:	mov    al,ds:0x36a503af
  414609:	mov    ebx,0xb80fd958
  41460e:	rcl    DWORD PTR [ebx-0x38b0d53d],0xfe
  414615:	arpl   WORD PTR [ecx],bp
  414617:	push   ds
  414618:	or     BYTE PTR [edi],0xdc
  41461b:	in     eax,dx
  41461c:	push   ds
  41461d:	push   eax
  41461e:	(bad)  
  41461f:	xchg   esp,eax
  414620:	repnz jmp 0xf70d:0x1018e22f
  414628:	xor    al,0x19
  41462a:	mov    ds:0x68c91727,al
  41462f:	inc    ebx
  414630:	lods   al,BYTE PTR ds:[esi]
  414631:	push   esp
  414632:	lea    ebp,[ebx+0x64]
  414635:	lods   eax,DWORD PTR ds:[esi]
  414636:	hlt    
  414637:	xchg   edi,eax
  414638:	xchg   edi,eax
  414639:	inc    ecx
  41463a:	ins    DWORD PTR es:[edi],dx
  41463b:	mov    BYTE PTR [ebx+0x42],cl
  41463e:	xor    eax,0xe54a9293
  414643:	mov    ch,0x9
  414645:	repz dec eax
  414647:	ret    
  414648:	stos   BYTE PTR es:[edi],al
  414649:	mov    ch,0x9d
  41464b:	xor    dh,bh
  41464d:	jae    0x414674
  41464f:	inc    edx
  414650:	or     eax,0xe6faf4e8
  414655:	fnstsw WORD PTR gs:[edx-0x17]
  414659:	rol    DWORD PTR [edi-0x65030620],1
  41465f:	cmp    al,0xc0
  414661:	add    eax,0x6a144b4c
  414666:	push   cs
  414667:	mov    al,ds:0x78e7d965
  41466c:	arpl   WORD PTR [esp+edi*4+0x22501c62],ax
  414673:	ret    
  414674:	test   DWORD PTR [esp+eax*4+0x69],ecx
  414678:	mov    al,0xea
  41467a:	push   ecx
  41467b:	(bad)  
  41467c:	jp     0x4146ab
  41467e:	pop    esp
  41467f:	xor    edi,edx
  414681:	xchg   edx,eax
  414682:	dec    ecx
  414683:	ret    
  414684:	popf   
  414685:	shl    BYTE PTR [esp+eiz*8],1
  414688:	jmp    0x9d012d4f
  41468d:	jg     0x4146c3
  41468f:	xor    al,0xe4
  414691:	xchg   DWORD PTR [eax],edi
  414693:	jns    0x414661
  414695:	fs cs dec edx
  414698:	lahf   
  414699:	call   0x518c:0xc2c4e60
  4146a0:	(bad)  
  4146a1:	in     eax,dx
  4146a2:	gs push es
  4146a4:	neg    edx
  4146a6:	int3   
  4146a7:	retf   
  4146a8:	push   esp
  4146a9:	scas   eax,DWORD PTR es:[edi]
  4146aa:	inc    esp
  4146ab:	sbb    DWORD PTR [edx],eax
  4146ad:	dec    esi
  4146ae:	aaa    
  4146af:	xchg   edi,eax
  4146b0:	outs   dx,BYTE PTR ds:[esi]
  4146b1:	les    eax,FWORD PTR ss:[esi+0x76]
  4146b5:	ret    
  4146b6:	addr16 push esi
  4146b8:	loope  0x4146fb
  4146ba:	fwait
  4146bb:	push   edi
  4146bc:	(bad)
  4146c0:	int3   
  4146c1:	or     edx,DWORD PTR [ebx+0x538e2aa0]
  4146c7:	dec    esi
  4146c8:	mov    bh,0x2d
  4146ca:	xchg   ecx,eax
  4146cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146cc:	mov    eax,ds:0x29c74cc2
  4146d1:	ins    BYTE PTR es:[edi],dx
  4146d2:	xor    ch,ah
  4146d4:	push   esp
  4146d5:	outs   dx,BYTE PTR ds:[esi]
  4146d6:	out    0xe8,al
  4146d8:	add    BYTE PTR [di+0x6aa],0x4f
  4146de:	ret    
  4146df:	pushf  
  4146e0:	enter  0xa4d6,0xe
  4146e4:	ss aas 
  4146e6:	mov    ch,0xd0
  4146e8:	mov    eax,0xdfb2c650
  4146ed:	into   
  4146ee:	(bad)  
  4146ef:	lea    edi,[ecx]
  4146f1:	xchg   ebx,eax
  4146f2:	adc    al,0xc3
  4146f4:	sub    al,0x6f
  4146f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146f7:	shl    edi,0x11
  4146fa:	push   esi
  4146fb:	xlat   BYTE PTR ds:[ebx]
  4146fc:	mov    ebp,0x7c371b49
  414701:	push   edi
  414702:	rcr    DWORD PTR [edi+eiz*4],cl
  414705:	and    al,bh
  414707:	mov    ds:0xa7a2a2b6,eax
  41470c:	pop    esi
  41470d:	adc    eax,0x3d5d0525
  414712:	pop    eax
  414713:	stos   BYTE PTR es:[edi],al
  414714:	dec    ecx
  414715:	mov    cl,0x62
  414717:	pop    ecx
  414718:	test   eax,0x2bd208b6
  41471d:	inc    esi
  41471e:	es push ss
  414720:	gs xchg ebp,eax
  414722:	jno    0x41472b
  414724:	int    0xbe
  414726:	lods   al,BYTE PTR ds:[esi]
  414727:	xor    eax,0xa3ff3f92
  41472c:	and    eax,0xf46a58bb
  414731:	jae    0x414760
  414733:	test   al,0x2c
  414735:	push   cs
  414736:	in     al,0xee
  414738:	mov    edx,DWORD PTR [esp+ebx*4+0x70]
  41473c:	(bad)  
  41473d:	(bad)  
  41473e:	cld    
  41473f:	adc    ebp,esi
  414741:	fstp   TBYTE PTR [esi]
  414743:	lods   eax,DWORD PTR ds:[esi]
  414744:	jnp    0x4146f5
  414746:	ret    
  414747:	mov    ch,0xc0
  414749:	mov    ds:0x24211ac5,al
  41474e:	ror    DWORD PTR [edi+0x57],cl
  414751:	xor    BYTE PTR [ecx-0x398041dc],0x7e
  414758:	std    
  414759:	aad    0xbc
  41475b:	jnp    0x4147bc
  41475d:	push   eax
  41475e:	nop
  41475f:	or     eax,0xaa97279f
  414764:	mov    dl,0x7b
  414766:	or     ch,BYTE PTR [ebx-0x76]
  414769:	mov    bl,0xf6
  41476b:	xchg   esi,eax
  41476c:	call   DWORD PTR [ecx+0x75]
  41476f:	sete   BYTE PTR [eax-0x57]
  414773:	sbb    DWORD PTR [ebp-0x2c98112c],ecx
  414779:	push   eax
  41477a:	(bad)  
  41477b:	mov    bl,0x75
  41477d:	sub    eax,0x72d493de
  414782:	or     eax,0xf190f5bf
  414787:	iret   
  414788:	pop    ebx
  414789:	xchg   edi,eax
  41478a:	faddp  st(2),st
  41478c:	pop    esp
  41478d:	jge    0x41480c
  41478f:	das    
  414790:	les    sp,DWORD PTR [eax-0x5d63e2c5]
  414797:	inc    esp
  414798:	adc    eax,0xbc94eb28
  41479d:	adc    al,0x7c
  41479f:	and    al,0xed
  4147a1:	je     0x4147d7
  4147a3:	jno    0x4147df
  4147a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147a6:	arpl   WORD PTR [edx-0x6b],dx
  4147a9:	or     ebp,DWORD PTR [ebx+esi*2+0x44d22718]
  4147b0:	fcom   DWORD PTR [eax+0xd9090b8]
  4147b6:	pop    ss
  4147b7:	fild   QWORD PTR [ebx+0x55]
  4147ba:	lds    esp,FWORD PTR [ebp-0x56]
  4147bd:	mov    ecx,edx
  4147bf:	dec    esp
  4147c0:	push   edi
  4147c1:	das    
  4147c2:	add    dh,BYTE PTR [esi+0x2e5a3d4f]
  4147c8:	cli    
  4147c9:	inc    ecx
  4147ca:	ds push ds
  4147cc:	mov    bl,BYTE PTR [ebp-0x5c]
  4147cf:	mov    ds:0x369d47ad,al
  4147d4:	mov    edx,0x2e79d4bc
  4147d9:	or     al,0xf4
  4147db:	jmp    0x414839
  4147dd:	adc    DWORD PTR [edx],0x65
  4147e0:	dec    eax
  4147e1:	out    0x29,al
  4147e3:	in     eax,0x9e
  4147e5:	pop    ebp
  4147e6:	and    al,0x65
  4147e8:	jne    0x41478e
  4147ea:	ds leave 
  4147ec:	cdq    
  4147ed:	push   edx
  4147ee:	jp     0x4147fb
  4147f0:	mov    dl,0x27
  4147f2:	cwde   
  4147f3:	jmp    DWORD PTR [esi-0x74bb740b]
  4147f9:	jae    0x4147b2
  4147fb:	dec    ebp
  4147fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147fd:	lahf   
  4147fe:	mov    DWORD PTR [edx],ebx
  414800:	out    dx,al
  414801:	call   0x8ed7bff1
  414806:	fstp   QWORD PTR [ebx+0x66a8ba7d]
  41480c:	xor    DWORD PTR ds:0x9d689abf,esi
  414812:	pop    ebp
  414813:	jg     0x414832
  414815:	push   es
  414816:	scas   al,BYTE PTR es:[edi]
  414817:	add    DWORD PTR [esi-0x40],esi
  41481a:	mov    bh,0x57
  41481c:	mov    ecx,0x285701df
  414821:	out    0xa4,eax
  414823:	pop    ds
  414824:	mov    ebx,DWORD PTR [edi+0x79]
  414827:	pop    ss
  414828:	xor    eax,0x760b60c2
  41482d:	aam    0x90
  41482f:	rcl    ecx,1
  414831:	mov    dh,0x4f
  414833:	or     eax,0xb5f60578
  414838:	push   ds
  414839:	push   edi
  41483a:	cmp    BYTE PTR [edi-0x3d],dl
  41483d:	xor    BYTE PTR [ecx+0x6ad614e2],ah
  414843:	repz pop ds
  414845:	sbb    BYTE PTR [edx-0x6f],ch
  414848:	inc    edx
  414849:	inc    ebp
  41484a:	imul   eax,DWORD PTR [ecx-0x42],0x46
  41484e:	and    al,0x40
  414850:	jo     0x4148c7
  414852:	aaa    
  414853:	inc    esp
  414854:	pop    ds
  414855:	gs call 0x46ba:0x540d2ea6
  41485d:	shr    BYTE PTR ds:0x13254e2,1
  414863:	(bad)  
  414864:	int3   
  414865:	aam    0x2
  414867:	fldcw  WORD PTR [edi+0x4790229c]
  41486d:	enter  0x2a9d,0xf9
  414871:	xchg   ebp,eax
  414872:	aas    
  414873:	call   0xe7505ad2
  414878:	mov    ebp,0x7c3fa94b
  41487d:	fist   WORD PTR [edi-0x6c]
  414880:	dec    esp
  414881:	stos   DWORD PTR es:[edi],eax
  414882:	mov    al,ds:0xac3cab4e
  414887:	(bad)  
  414889:	pop    edx
  41488a:	int3   
  41488b:	pop    edi
  41488c:	idiv   DWORD PTR [ecx-0x5ff5d1c1]
  414892:	mov    esi,es
  414894:	push   ecx
  414895:	in     al,0xd9
  414897:	cmp    eax,0xa05dc5ea
  41489c:	jae    0x414836
  41489e:	inc    esp
  41489f:	out    0x9f,al
  4148a1:	fisttp QWORD PTR [eax]
  4148a3:	mov    edi,0x2dd48ff0
  4148a8:	mov    edi,0xacc198cf
  4148ad:	inc    ebp
  4148ae:	inc    ebx
  4148af:	cmc    
  4148b0:	(bad)  
  4148b1:	repnz or BYTE PTR [edi-0x26],bh
  4148b5:	mov    ecx,0x882040ef
  4148ba:	mov    eax,ds:0xc0a7c4b2
  4148bf:	mov    ah,0x43
  4148c1:	repnz xor al,ch
  4148c4:	out    0x44,al
  4148c6:	pop    es
  4148c7:	(bad)  
  4148c8:	adc    al,0x60
  4148ca:	cdq    
  4148cb:	in     al,dx
  4148cc:	shl    cl,0x67
  4148cf:	(bad)  [ebp+0x28]
  4148d2:	push   esi
  4148d3:	and    al,0xbc
  4148d5:	pusha  
  4148d6:	lahf   
  4148d7:	cmp    BYTE PTR [ecx],0x22
  4148da:	sub    eax,0x94cca098
  4148df:	cs hlt 
  4148e1:	xchg   ecx,eax
  4148e2:	scas   eax,DWORD PTR es:[edi]
  4148e3:	lds    edx,FWORD PTR [edx]
  4148e5:	cmp    ch,BYTE PTR ds:0xc056af64
  4148eb:	sbb    BYTE PTR [edi+0x10861588],bl
  4148f1:	mov    ch,0xe4
  4148f3:	pop    ecx
  4148f4:	ins    BYTE PTR es:[edi],dx
  4148f5:	pop    edx
  4148f6:	dec    ebx
  4148f7:	jmp    DWORD PTR [ecx+ecx*1]
  4148fa:	out    0xb2,al
  4148fc:	adc    eax,0x28671199
  414901:	aam    0xc7
  414903:	adc    al,0x2c
  414905:	scas   eax,DWORD PTR es:[edi]
  414906:	ins    DWORD PTR es:[edi],dx
  414907:	imul   ebp,ecx,0x6b5dfbfa
  41490d:	(bad)  
  41490e:	clc    
  41490f:	push   0xffffff90
  414911:	and    DWORD PTR [eax-0x24],0x17
  414915:	xlat   BYTE PTR ds:[ebx]
  414916:	cld    
  414917:	test   al,0x19
  414919:	push   ebp
  41491a:	fistp  QWORD PTR [esp+ecx*2]
  41491e:	in     eax,0xb5
  414920:	sub    al,0x8a
  414922:	aaa    
  414923:	fstp   TBYTE PTR [edi+0x31]
  414926:	push   ebp
  414928:	add    DWORD PTR [esi+0x41959a41],ecx
  41492e:	test   eax,0xe538af1f
  414933:	xchg   BYTE PTR [edx+0x25d8f8b8],dh
  414939:	pop    edx
  41493a:	mov    esp,0x60ebedd6
  41493f:	dec    BYTE PTR [esi-0x56]
  414942:	cmp    esp,DWORD PTR ds:[ebx-0x2701b9e8]
  414949:	mov    edi,0xd05b1b3a
  41494e:	loop   0x414913
  414950:	ffreep st(6)
  414952:	test   cl,0xee
  414955:	pop    ebp
  414956:	push   0xfd646e2f
  41495b:	add    al,0x81
  41495d:	jle    0x4149b8
  41495f:	bound  eax,QWORD PTR [ebx+0x3]
  414962:	das    
  414963:	and    al,0x6d
  414965:	icebp  
  414966:	mov    ah,0xf1
  414968:	fwait
  414969:	or     al,0x7
  41496b:	jno    0x41490b
  41496d:	xor    DWORD PTR ds:0x95e02dc0,ebp
  414973:	out    0x55,eax
  414975:	ds jo  0x4149d9
  414978:	push   ecx
  414979:	jle    0x41498c
  41497b:	retf   
  41497c:	xchg   ah,bh
  41497e:	daa    
  41497f:	push   eax
  414980:	xor    edi,DWORD PTR [ebx+edx*8]
  414983:	enter  0xab94,0x49
  414987:	push   edi
  414988:	fsub   st,st(2)
  41498a:	inc    edx
  41498b:	sahf   
  41498c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41498d:	scas   eax,DWORD PTR es:[edi]
  41498e:	and    BYTE PTR [eax-0x20],ch
  414991:	idiv   esp
  414993:	mov    DWORD PTR [ebp+0x1a],ebx
  414996:	shl    BYTE PTR [esi+eax*4+0x49ea6dfd],1
  41499d:	mov    dl,0xa
  41499f:	es mov fs,WORD PTR cs:[ebp+esi*8+0x4f]
  4149a5:	jmp    0xfa07:0x5349dc37
  4149ac:	mov    bl,0x82
  4149ae:	cmp    BYTE PTR [ebx+ecx*4],dh
  4149b1:	cmp    BYTE PTR [ecx-0x7bab06fb],bl
  4149b7:	sub    bh,dl
  4149b9:	rcl    BYTE PTR [edx-0xc7418f7],0x4f
  4149c0:	cmp    DWORD PTR [ebp+0x67],ebp
  4149c3:	sbb    eax,DWORD PTR [edi-0x3]
  4149c6:	jle    0x4149fd
  4149c8:	and    al,0xa
  4149ca:	jp     0x414a2a
  4149cc:	stos   BYTE PTR es:[edi],al
  4149cd:	lock fist WORD PTR [edi+0x6a]
  4149d1:	into   
  4149d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149d3:	(bad)  
  4149d4:	dec    ebx
  4149d5:	jb     0x414a51
  4149d7:	mov    DWORD PTR [ebp+0x6e165fc6],esi
  4149dd:	pop    ds
  4149de:	in     al,0x5d
  4149e0:	dec    ecx
  4149e1:	xchg   ebx,eax
  4149e2:	cmp    al,0xb7
  4149e4:	jae    0x4149dc
  4149e6:	lods   eax,DWORD PTR ds:[esi]
  4149e7:	pop    edx
  4149e8:	call   0x2cf1a944
  4149ed:	clc    
  4149ee:	fistp  QWORD PTR [esi-0x10374a9e]
  4149f4:	push   0x226e8106
  4149f9:	mov    cl,0x61
  4149fb:	fistp  QWORD PTR [ecx]
  4149fd:	xor    eax,0xca4d69d8
  414a02:	inc    edx
  414a03:	dec    ebx
  414a04:	dec    edx
  414a05:	dec    esp
  414a06:	call   0x70dc:0xaa5e27fc
  414a0d:	adc    eax,0xdf86de11
  414a12:	sbb    ebx,0x73ec30c5
  414a18:	push   ebp
  414a19:	cmp    eax,0xc921a461
  414a1e:	ror    DWORD PTR [ebp+0x4f],cl
  414a21:	push   ebp
  414a22:	inc    esi
  414a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a24:	and    al,0x67
  414a26:	jns    0x4149c7
  414a28:	xlat   BYTE PTR ds:[ebx]
  414a29:	xor    DWORD PTR [eax-0x2d],ecx
  414a2c:	cs call 0x4c6f:0x5cf32c49
  414a34:	mov    cl,0x99
  414a36:	xor    eax,DWORD PTR [edi-0x53c69a69]
  414a3c:	pop    eax
  414a3d:	aad    0xa
  414a3f:	mov    cl,0x23
  414a41:	dec    ebx
  414a42:	sub    eax,0xb163495e
  414a47:	mov    BYTE PTR [ecx-0x754f83d7],al
  414a4d:	push   0x1
  414a4f:	test   BYTE PTR ds:0xdd8799ff,al
  414a55:	aam    0xbf
  414a57:	js     0x414a0d
  414a59:	jo     0x414a53
  414a5b:	pop    ds
  414a5c:	(bad)  
  414a5d:	xlat   BYTE PTR ds:[ebx]
  414a5e:	mov    WORD PTR [ebp-0x3e],cs
  414a61:	xlat   BYTE PTR ds:[ebx]
  414a62:	mov    al,0x70
  414a64:	fisttp WORD PTR [ecx+0x494902ec]
  414a6a:	lock cld 
  414a6c:	dec    eax
  414a6d:	mov    bh,0xb0
  414a6f:	retf   0xaa6
  414a72:	and    eax,0x4b5be5ff
  414a77:	sub    ebx,ebx
  414a79:	mov    ch,dh
  414a7b:	lahf   
  414a7c:	mov    ?,WORD PTR [edx-0x38]
  414a7f:	mov    esp,0x7f1ae23b
  414a84:	xlat   BYTE PTR ds:[ebx]
  414a85:	or     bh,cl
  414a87:	addr16 pop edi
  414a89:	push   es
  414a8a:	and    edx,DWORD PTR [ecx+0x2c]
  414a8d:	or     al,0x84
  414a8f:	inc    ebx
  414a90:	fst    DWORD PTR [edx+0x543f7991]
  414a96:	clc    
  414a97:	scas   eax,DWORD PTR es:[edi]
  414a98:	or     BYTE PTR [eax],ch
  414a9a:	(bad)  
  414a9b:	loop   0x414aa2
  414a9d:	push   ss
  414a9e:	scas   al,BYTE PTR es:[edi]
  414a9f:	or     eax,0x5874667e
  414aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aa6:	pop    ss
  414aa7:	dec    ecx
  414aa8:	imul   edx,DWORD PTR [edi+0x3c9d91],0x5e
  414aaf:	and    edx,ecx
  414ab1:	dec    edi
  414ab2:	mov    ds,WORD PTR [esi+eiz*8]
  414ab5:	ret    0x8b36
  414ab8:	mov    edx,0x70b921f0
  414abd:	imul   edx,DWORD PTR [edx+ecx*4+0x6089bb61],0xffffffdd
  414ac5:	mov    bh,0x73
  414ac7:	inc    eax
  414ac8:	mov    edx,0xa05a2be2
  414acd:	sar    BYTE PTR [esi+0x2e],1
  414ad0:	push   eax
  414ad1:	ret    
  414ad2:	sub    bh,ah
  414ad4:	imul   ebp,DWORD PTR [ebp+0x5f813541],0x6b93a6a9
  414ade:	test   BYTE PTR [esi+0x77],al
  414ae1:	jne    0x414ac7
  414ae3:	or     dh,BYTE PTR [esi-0x3ddf101e]
  414ae9:	sub    DWORD PTR [ebx+0x3e],esi
  414aec:	rol    DWORD PTR [ebp+ebx*2-0x3e],0x15
  414af1:	fimul  DWORD PTR [edi+0x43]
  414af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414af5:	outs   dx,BYTE PTR ds:[esi]
  414af6:	shl    BYTE PTR [edx],cl
  414af8:	sahf   
  414af9:	fnsave [ebp-0x692d8813]
  414aff:	rol    DWORD PTR ds:0xd8f06529,1
  414b05:	outs   dx,DWORD PTR ds:[esi]
  414b06:	bound  esi,QWORD PTR [edi-0x1f]
  414b09:	pusha  
  414b0a:	mov    cl,0x68
  414b0c:	jle    0x414abf
  414b0e:	fidiv  DWORD PTR [eax]
  414b10:	pop    ebp
  414b11:	adc    BYTE PTR [ebx],ah
  414b13:	sbb    edx,DWORD PTR [edx]
  414b15:	pop    esp
  414b16:	jne    0x414b88
  414b18:	cmc    
  414b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b1b:	xor    dl,dl
  414b1d:	ds inc eax
  414b1f:	dec    edi
  414b20:	(bad)  
  414b21:	aas    
  414b22:	xor    BYTE PTR [eax+0x284f12ae],0x62
  414b29:	adc    eax,esp
  414b2b:	stos   BYTE PTR es:[edi],al
  414b2c:	mov    ?,edi
  414b2e:	and    eax,0xc0040326
  414b33:	sbb    eax,DWORD PTR [edi-0x45]
  414b36:	and    edx,DWORD PTR [ebp+0x2e824ed6]
  414b3c:	xchg   ebx,eax
  414b3d:	xchg   ecx,eax
  414b3e:	outs   dx,BYTE PTR ds:[esi]
  414b3f:	jp     0x414ae2
  414b41:	aam    0x10
  414b43:	fnsave [ebp+0x46]
  414b46:	call   DWORD PTR [edx+eiz*4-0x56bfe5d]
  414b4d:	call   edx
  414b4f:	gs cmp edx,eax
  414b52:	addr16 int 0xce
  414b55:	jecxz  0x414b0a
  414b57:	test   BYTE PTR [ebx],ch
  414b59:	mov    eax,DWORD PTR [esi-0x359c7236]
  414b5f:	mov    bh,0xe5
  414b61:	call   0x1d25bc35
  414b66:	sar    DWORD PTR [ebx+ebp*4-0x19],1
  414b6a:	mov    DWORD PTR [ecx],edx
  414b6c:	xchg   edx,eax
  414b6d:	or     BYTE PTR [ecx-0x1e],bh
  414b70:	sbb    eax,0x768659b4
  414b75:	pop    esp
  414b76:	adc    eax,DWORD PTR [ebx-0x609cc816]
  414b7c:	mov    ecx,0x536b9ab
  414b81:	ja     0x414b27
  414b83:	iret   
  414b84:	jae    0x414b21
  414b86:	jl     0x414b29
  414b88:	pop    esp
  414b89:	cli    
  414b8a:	clc    
  414b8b:	push   ds
  414b8c:	pop    ds
  414b8d:	jmp    0x414be0
  414b8f:	fs sub ecx,ecx
  414b92:	and    esi,ebx
  414b94:	rcr    BYTE PTR es:[ecx],1
  414b97:	fcomp  DWORD PTR [ebx]
  414b99:	cmp    BYTE PTR [edx],ch
  414b9b:	add    BYTE PTR ds:0xae9ce1fc,dh
  414ba1:	xor    BYTE PTR [edx+0x26],ch
  414ba4:	sahf   
  414ba5:	ja     0x414be1
  414ba7:	pop    ebp
  414ba8:	push   es
  414ba9:	jmp    0x414ba5
  414bab:	imul   esi,DWORD PTR [ecx-0x5f81b534],0x72056df
  414bb5:	mov    WORD PTR [ebp-0x1],es
  414bb8:	loopne 0x414bbc
  414bba:	loope  0x414bb3
  414bbc:	and    bl,BYTE PTR [eax]
  414bbe:	pop    ebp
  414bbf:	cmp    ch,BYTE PTR [esi-0x65]
  414bc2:	fwait
  414bc3:	ins    BYTE PTR es:[edi],dx
  414bc4:	js     0x414b84
  414bc6:	pop    ecx
  414bc7:	mov    al,ds:0xd1bd0504
  414bcc:	call   0x439a:0x2cb9face
  414bd3:	adc    BYTE PTR [ecx+0x2ae8585d],ch
  414bd9:	push   esp
  414bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bdb:	sub    BYTE PTR [edx+0x571406c7],al
  414be1:	push   ds
  414be2:	aas    
  414be3:	cmp    al,0xa7
  414be5:	outs   dx,BYTE PTR ds:[esi]
  414be6:	sbb    DWORD PTR [ecx],ebx
  414be8:	cdq    
  414be9:	inc    edi
  414bea:	ins    BYTE PTR es:[edi],dx
  414beb:	shr    DWORD PTR [ebx+0x41],0x6a
  414bef:	sub    DWORD PTR [ebp+0x53],0x4bbaa407
  414bf6:	ins    BYTE PTR es:[edi],dx
  414bf7:	xchg   DWORD PTR [ebp+0x51],esp
  414bfa:	hlt    
  414bfb:	push   edx
  414bfc:	mov    ecx,0xd7509847
  414c01:	lea    ecx,[esi+0x5a]
  414c04:	(bad)  
  414c05:	jnp    0x414c07
  414c07:	scas   eax,DWORD PTR es:[edi]
  414c08:	jge    0x414bbc
  414c0a:	mov    edx,DWORD PTR [ebp+0x12]
  414c0d:	xor    dh,BYTE PTR [ecx]
  414c0f:	xor    al,0x7f
  414c11:	imul   ebp,DWORD PTR [ebx-0x75be50d0],0xb65255d7
  414c1b:	and    dh,BYTE PTR [edx+0x1f1de347]
  414c21:	adc    BYTE PTR [esi+0x52],bh
  414c24:	jae    0x414c1b
  414c26:	push   edx
  414c27:	xrelease xchg DWORD PTR [ecx+esi*8],edi
  414c2b:	sbb    BYTE PTR [edx],al
  414c2d:	jmp    0x857f:0xe5c602d8
  414c34:	pop    edx
  414c35:	out    0xff,al
  414c37:	push   esi
  414c38:	rol    edi,0xda
  414c3b:	push   edi
  414c3c:	fidiv  DWORD PTR [esi]
  414c3e:	push   eax
  414c3f:	fstp   TBYTE PTR ds:0x8545b651
  414c45:	daa    
  414c46:	xor    DWORD PTR [esp+eax*2+0x615dbcc7],ebx
  414c4d:	mov    ebp,0xef8ab387
  414c52:	fimul  WORD PTR [ebx]
  414c54:	fsub   QWORD PTR [ecx+esi*4-0x254e6]
  414c5b:	mov    esp,0xa94a1d8
  414c60:	push   ss
  414c61:	sbb    DWORD PTR [ebp+ecx*1-0x4118ba6],0x1a4c959e
  414c6c:	inc    esp
  414c6d:	or     DWORD PTR [ecx-0x5394559],edi
  414c73:	rep lods eax,DWORD PTR ds:[esi]
  414c75:	fisttp DWORD PTR [edx+edx*2+0x2cfb1abe]
  414c7c:	cmp    BYTE PTR [ebx+eax*8-0x7b0ac787],al
  414c83:	fisubr WORD PTR [ebx+0x21]
  414c86:	sbb    DWORD PTR [ebx-0x28],edi
  414c89:	mov    bh,0x15
  414c8b:	xor    cl,BYTE PTR [esp+edx*2-0x51]
  414c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c90:	jge    0x414cd6
  414c92:	inc    edi
  414c93:	push   0xffffffd3
  414c95:	xchg   ebx,eax
  414c96:	lods   al,BYTE PTR ds:[esi]
  414c97:	mov    esi,ecx
  414c99:	xor    al,0xbc
  414c9b:	mov    eax,gs
  414c9d:	call   0xdb5033ff
  414ca2:	mov    edx,0x443d7594
  414ca7:	les    ebp,FWORD PTR [edx-0x2b]
  414caa:	aam    0x3a
  414cac:	adc    cl,BYTE PTR [ebp-0x32]
  414caf:	pop    esi
  414cb0:	dec    ecx
  414cb1:	fwait
  414cb2:	push   ss
  414cb3:	adc    BYTE PTR [ecx],al
  414cb5:	add    BYTE PTR [ebp-0x14],ch
  414cb8:	cmp    DWORD PTR [edi+0x70],edi
  414cbb:	xchg   dl,ah
  414cbd:	push   es
  414cbe:	push   ecx
  414cbf:	iret   
  414cc0:	cld    
  414cc1:	mov    BYTE PTR [edx+esi*1-0x7fdf0428],cl
  414cc8:	or     BYTE PTR [ecx-0x1c],dh
  414ccb:	push   eax
  414ccc:	clc    
  414ccd:	out    dx,eax
  414cce:	out    0x33,al
  414cd0:	nop
  414cd1:	mov    ds:0x99f40448,al
  414cd6:	push   ds
  414cd7:	lea    esp,[edi-0x74]
  414cda:	ficomp WORD PTR [eax-0x53c66354]
  414ce0:	fmul   st,st(3)
  414ce2:	and    bh,BYTE PTR es:[ecx+esi*2]
  414ce6:	cmp    DWORD PTR [ebp+0x52],eax
  414ce9:	out    0xe9,al
  414ceb:	lds    eax,FWORD PTR [ebx-0xf799041]
  414cf1:	or     DWORD PTR [eax+0x3af0648c],eax
  414cf7:	arpl   WORD PTR [ebp-0x5dbd1020],si
  414cfd:	addr16 mov dh,0x5a
  414d00:	(bad)  
  414d02:	inc    ecx
  414d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d04:	in     eax,0x25
  414d06:	inc    eax
  414d07:	push   ebx
  414d08:	fst    QWORD PTR [ebx-0x5ad0ce5e]
  414d0e:	aaa    
  414d0f:	sahf   
  414d10:	shl    BYTE PTR [ecx+eiz*8],cl
  414d13:	dec    esp
  414d14:	(bad)  
  414d15:	sti    
  414d16:	je     0x414d1a
  414d18:	mov    dl,0x44
  414d1a:	xchg   DWORD PTR [edi+0x18b21087],ebp
  414d20:	mov    esi,0x51ae0ce7
  414d25:	pop    ebp
  414d26:	in     eax,dx
  414d27:	xor    bl,0x7e
  414d2a:	fdiv   QWORD PTR [ecx+edi*1]
  414d2d:	pushf  
  414d2e:	loopne 0x414d98
  414d30:	jmp    0x93df8dd3
  414d35:	or     eax,0xf95f1f5c
  414d3a:	sbb    DWORD PTR [ecx],0xffffffc0
  414d3d:	and    ch,ch
  414d3f:	leave  
  414d40:	fcomp  QWORD PTR [eax]
  414d42:	bound  eax,QWORD PTR [ecx+0x11df9704]
  414d48:	pushw  es
  414d4a:	sbb    eax,0x5cf7055a
  414d4f:	mov    ebx,0xd695e28b
  414d54:	pop    edx
  414d55:	xor    eax,0x4e1c4f79
  414d5a:	push   eax
  414d5b:	loopne 0x414d08
  414d5d:	jns    0x414d1c
  414d5f:	sbb    al,BYTE PTR [ebp-0x11]
  414d62:	icebp  
  414d63:	lods   eax,DWORD PTR ds:[esi]
  414d64:	call   0x987a:0xa5f6282e
  414d6b:	push   ss
  414d6c:	icebp  
  414d6d:	xchg   esi,eax
  414d6e:	xchg   ebp,eax
  414d6f:	aam    0x78
  414d71:	and    DWORD PTR [eax],ebp
  414d73:	and    ebx,DWORD PTR [eax]
  414d75:	pop    ss
  414d76:	mov    bl,0xf8
  414d78:	lea    esp,[edi-0x3f]
  414d7b:	stc    
  414d7c:	lahf   
  414d7d:	dec    esp
  414d7e:	sub    al,0xd9
  414d80:	mov    WORD PTR ds:0x5385cd12,fs
  414d86:	xchg   esp,eax
  414d87:	jno    0x414d6e
  414d89:	inc    edi
  414d8a:	xchg   DWORD PTR [ebp+0x704f3349],ebx
  414d90:	mov    al,0xa7
  414d92:	push   esi
  414d93:	data16 fdiv QWORD PTR [esp+ecx*4]
  414d97:	xchg   ebx,eax
  414d98:	jmp    0xc32fa540
  414d9d:	sahf   
  414d9e:	pusha  
  414d9f:	mov    ecx,0xb85b045
  414da4:	mov    dl,0x53
  414da6:	mov    ah,0x5f
  414da8:	mov    bh,0xf5
  414daa:	stos   DWORD PTR es:[edi],eax
  414dab:	js     0x414dd0
  414dad:	and    al,0x82
  414daf:	mov    ds:0x51a9d602,al
  414db4:	aas    
  414db5:	ss lahf 
  414db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414db8:	mov    cs:0xcf7d96fc,eax
  414dbe:	icebp  
  414dbf:	rcr    DWORD PTR [edi+0x4ef7e3e2],0x8c
  414dc6:	lea    esp,[ecx]
  414dc8:	cmp    al,0xae
  414dca:	jae    0x414d86
  414dcc:	pop    esi
  414dcd:	repnz pop es
  414dcf:	aam    0xa8
  414dd1:	or     DWORD PTR [esi],0x7505a3b3
  414dd7:	mov    esp,0x45ed2b2d
  414ddc:	cmp    al,BYTE PTR [ebx+ebp*4]
  414ddf:	xor    cl,BYTE PTR [ecx]
  414de1:	stc    
  414de2:	jmp    0x54de83c1
  414de7:	push   cs
  414de8:	xchg   ebp,eax
  414de9:	sub    al,0x2d
  414deb:	pusha  
  414dec:	jo     0x414dd2
  414dee:	mov    eax,edx
  414df0:	cmp    cl,BYTE PTR [ebx-0x130b8904]
  414df6:	ins    DWORD PTR es:[edi],dx
  414df7:	les    ebx,FWORD PTR [edx+ecx*2-0x44adc38d]
  414dfe:	icebp  
  414dff:	imul   esi,DWORD PTR [esi-0x6bd7c7ba],0xffffffc2
  414e06:	sbb    BYTE PTR [ecx+0xc],dh
  414e09:	ficomp DWORD PTR [edx]
  414e0b:	fnstcw WORD PTR [ecx+0x7ddba4a3]
  414e11:	lock or eax,0x325a0473
  414e17:	pop    ebx
  414e18:	dec    ecx
  414e19:	into   
  414e1a:	sti    
  414e1b:	(bad)  
  414e1c:	aaa    
  414e1d:	mov    ecx,0x3ad1f533
  414e22:	lahf   
  414e23:	inc    ebp
  414e24:	call   0x6701b322
  414e29:	push   esp
  414e2a:	stos   BYTE PTR es:[edi],al
  414e2b:	sub    eax,0x9b2d15cc
  414e30:	loopne 0x414e9e
  414e32:	jbe    0x414e63
  414e34:	mov    ds:0xa6fa495b,eax
  414e39:	add    eax,0xa0eee81e
  414e3e:	and    BYTE PTR [edx*4-0x7f04f8af],dl
  414e45:	jecxz  0x414de1
  414e47:	fimul  WORD PTR [ecx+0x68]
  414e4a:	out    dx,al
  414e4b:	xor    eax,0x3649e6d0
  414e50:	xor    eax,0x245cd8a0
  414e55:	data16 (bad) 
  414e57:	aam    0x7d
  414e59:	adc    eax,0x64b9d5a2
  414e5e:	xor    BYTE PTR [eax-0x7c72e6bc],0x5
  414e65:	in     eax,dx
  414e66:	bound  eax,QWORD PTR [eax+ebp*2]
  414e69:	jae    0x414df4
  414e6b:	cli    
  414e6c:	xchg   DWORD PTR [ebp+0x64aebaa3],edi
  414e72:	cdq    
  414e73:	mov    bl,BYTE PTR [ebx+0x60]
  414e76:	sub    al,0xe6
  414e78:	rol    DWORD PTR [eax],0x96
  414e7b:	or     eax,0xf59067a0
  414e80:	dec    DWORD PTR [edi-0x5b]
  414e83:	dec    ecx
  414e84:	push   ss
  414e85:	and    esi,DWORD PTR [ebx]
  414e87:	mov    cl,bh
  414e89:	out    dx,eax
  414e8a:	int3   
  414e8b:	pop    eax
  414e8c:	dec    ecx
  414e8d:	aaa    
  414e8e:	inc    edi
  414e8f:	lahf   
  414e90:	(bad)  
  414e91:	rcr    DWORD PTR [edx+0x26],cl
  414e94:	inc    eax
  414e95:	(bad)  
  414e97:	sub    bh,ch
  414e99:	out    0xc2,al
  414e9b:	cld    
  414e9c:	cmp    al,0xea
  414e9e:	cld    
  414e9f:	mov    al,ds:0x15a852ce
  414ea4:	or     edx,DWORD PTR [ebx]
  414ea6:	cmc    
  414ea7:	push   esi
  414ea8:	mov    WORD PTR [edx],fs
  414eaa:	outs   dx,BYTE PTR ds:[esi]
  414eab:	test   dh,cl
  414ead:	push   edx
  414eae:	cld    
  414eaf:	(bad)  
  414eb0:	mov    eax,0x8dc53709
  414eb5:	adc    BYTE PTR [edi],0x5
  414eb8:	call   0x243190c9
  414ebd:	push   ds
  414ebe:	ins    DWORD PTR es:[edi],dx
  414ebf:	or     ecx,DWORD PTR [ebp+0x65e982bc]
  414ec5:	sbb    dh,bl
  414ec7:	ja     0x414e97
  414ec9:	pop    edi
  414eca:	imul   BYTE PTR [ecx+0x7e]
  414ecd:	call   0x76765df4
  414ed2:	daa    
  414ed3:	loopne 0x414e71
  414ed5:	sbb    DWORD PTR [eax+0x146d7157],edx
  414edb:	rcl    BYTE PTR [eax-0xb9fa74a],1
  414ee1:	fist   DWORD PTR [esi-0x1d0f5261]
  414ee7:	call   0xf8f7:0xc2189261
  414eee:	cmp    bl,BYTE PTR [eax+ecx*1+0x85d9b6f]
  414ef5:	inc    edx
  414ef6:	push   esp
  414ef7:	jmp    0xb36a:0xd32992d
  414efe:	rol    DWORD PTR ds:0x794f652d,cl
  414f04:	or     al,0x2f
  414f06:	inc    edx
  414f07:	aam    0x62
  414f09:	xchg   esi,eax
  414f0a:	or     esp,esi
  414f0c:	lock push ebp
  414f0e:	xor    esp,0x4cb58200
  414f14:	add    bl,BYTE PTR [edx+0x52be6bf4]
  414f1a:	mov    cl,0x58
  414f1c:	xor    al,0x43
  414f1e:	test   DWORD PTR [esp+edx*4-0x58],edx
  414f22:	lock cli 
  414f24:	lds    edi,FWORD PTR [edi+0x6075b815]
  414f2a:	addr16 add eax,0x473ed7d7
  414f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f31:	dec    ebx
  414f32:	and    al,0xc9
  414f34:	rol    DWORD PTR [eax-0x4a],cl
  414f37:	fmul   DWORD PTR [edi-0x789af1dd]
  414f3d:	or     DWORD PTR [esi],esi
  414f3f:	cmp    al,0xa8
  414f41:	pop    ss
  414f42:	int3   
  414f43:	cmp    al,0x2c
  414f45:	test   al,0x83
  414f47:	push   ecx
  414f48:	sbb    DWORD PTR [eax+edx*1+0xe90bbba],0x2e
  414f50:	cmp    ch,BYTE PTR [edx+esi*4-0x5ce8e78e]
  414f57:	pop    ecx
  414f58:	inc    esi
  414f59:	sbb    BYTE PTR ds:0x72649aa9,0xca
  414f60:	fisubr WORD PTR [ecx+esi*2+0x75]
  414f64:	int    0x7c
  414f66:	cdq    
  414f67:	jp     0x414f10
  414f69:	fldenv [edi-0x63]
  414f6c:	jp     0x414f2c
  414f6e:	jmp    0x414f99
  414f70:	bnd je 0x414f6a
  414f73:	loopne 0x414f91
  414f75:	cs cmc 
  414f77:	jno    0x414f5c
  414f79:	pushf  
  414f7a:	dec    ebp
  414f7b:	inc    ebx
  414f7c:	std    
  414f7d:	fimul  WORD PTR [ecx-0x58c53610]
  414f83:	add    BYTE PTR [edi-0x6b],al
  414f86:	push   edi
  414f87:	and    al,0xb8
  414f89:	cmp    eax,DWORD PTR [ecx]
  414f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f8c:	xor    DWORD PTR [ebp+0x1d],0x64
  414f90:	or     al,0xa
  414f92:	ret    0x5883
  414f95:	stos   DWORD PTR es:[edi],eax
  414f96:	jb     0x414fa0
  414f98:	popf   
  414f99:	jecxz  0x414fd0
  414f9b:	(bad)  
  414f9c:	sti    
  414f9d:	adc    dh,cl
  414f9f:	cli    
  414fa0:	jmp    DWORD PTR [eax]
  414fa2:	add    al,0x82
  414fa4:	pop    esi
  414fa5:	dec    ebx
  414fa6:	inc    esi
  414fa7:	mov    edx,0x26b40252
  414fac:	out    0xc,al
  414fae:	ret    
  414faf:	mov    ebp,0x7169f5e0
  414fb4:	into   
  414fb5:	test   DWORD PTR [edi],esp
  414fb7:	retf   0xc27d
  414fba:	fcmovnu st,st(6)
  414fbc:	push   ds
  414fbd:	std    
  414fbe:	sbb    al,0x59
  414fc0:	je     0x414fe2
  414fc2:	mov    ecx,0x6521d820
  414fc7:	fisttp DWORD PTR [esi-0x234f565a]
  414fcd:	cmp    bh,ch
  414fcf:	sbb    eax,0x80ad6efd
  414fd4:	inc    ebp
  414fd5:	jo     0x414feb
  414fd7:	mov    DWORD PTR [ecx-0x11],ebx
  414fda:	icebp  
  414fdb:	mov    dh,0x5b
  414fdd:	arpl   WORD PTR [esi-0x2e],si
  414fe0:	das    
  414fe1:	clc    
  414fe2:	hlt    
  414fe3:	mov    BYTE PTR [edx-0x36],bl
  414fe6:	push   0x446f0ca2
  414feb:	fisttp QWORD PTR [eax+0x3]
  414fee:	or     bh,dh
  414ff0:	cs mov DWORD PTR ss:[esi+0x7ee6815d],edx
  414ff8:	sahf   
  414ff9:	xchg   esi,eax
  414ffa:	and    dl,BYTE PTR [ebp-0x55]
  414ffd:	xor    DWORD PTR [edx],ebx
  414fff:	mov    dl,BYTE PTR [esi+0x35]
  415002:	xchg   ecx,eax
  415003:	lods   al,BYTE PTR ds:[esi]
  415004:	or     eax,DWORD PTR [edi+0xb]
  415007:	cmp    BYTE PTR [ebx+0x1cf23c22],dl
  41500d:	or     al,al
  41500f:	mov    ch,0x1f
  415011:	and    ebp,esp
  415013:	test   al,dh
  415015:	and    BYTE PTR [ebp-0x62f3d656],ch
  41501b:	dec    BYTE PTR [eax]
  41501d:	(bad)  
  415020:	dec    esi
  415021:	mov    dl,0x38
  415023:	(bad)  
  415024:	dec    ebp
  415025:	rol    BYTE PTR [ebx],1
  415027:	test   BYTE PTR [edx],bl
  415029:	bound  esp,QWORD PTR [ebp+0x526029f0]
  41502f:	movups XMMWORD PTR ds:0xfbdbfd8f,xmm7
  415036:	and    bl,BYTE PTR [ebp+edx*2-0x30]
  41503a:	jl     0x414fbd
  41503c:	(bad)  [esi]
  41503e:	pop    esp
  41503f:	xchg   edi,eax
  415040:	xchg   ebx,eax
  415041:	retf   
  415042:	repnz cmp eax,0xf93c5641
  415048:	call   0x7de73bd9
  41504d:	mov    ecx,0x80a09b4d
  415052:	out    dx,al
  415053:	or     al,0xbe
  415055:	jne    0x414ff6
  415057:	mov    ch,0x76
  415059:	mov    BYTE PTR [ebx+0x9d3b680],dh
  41505f:	(bad)
  415063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415064:	mov    DWORD PTR [edi],ecx
  415066:	add    al,0x38
  415068:	popa   
  415069:	cmp    al,0xe9
  41506b:	in     al,0xbf
  41506d:	jge    0x4150e7
  41506f:	adc    DWORD PTR [edx+0x307056ef],ebx
  415075:	sbb    ah,dl
  415077:	aaa    
  415078:	lahf   
  415079:	mov    cs,ebp
  41507b:	fwait
  41507c:	dec    ebp
  41507d:	cwde   
  41507e:	ret    0xb691
  415081:	jns    0x415009
  415083:	addr16 in al,dx
  415085:	jg     0x4150d6
  415087:	sub    esp,DWORD PTR [ecx]
  415089:	jg     0x415109
  41508b:	jecxz  0x415068
  41508d:	inc    ebp
  41508e:	dec    eax
  41508f:	sbb    BYTE PTR [edx-0x2],dh
  415092:	aaa    
  415093:	add    BYTE PTR [ebp+0x57],dl
  415096:	mov    esi,0x59204d78
  41509b:	jno    0x415032
  41509d:	xchg   edi,eax
  41509e:	xchg   ecx,eax
  41509f:	push   es
  4150a0:	sub    dl,ah
  4150a2:	ja     0x41510c
  4150a4:	popf   
  4150a5:	cld    
  4150a6:	or     cl,ah
  4150a8:	push   esi
  4150a9:	jle    0x41508b
  4150ab:	into   
  4150ac:	pop    eax
  4150ad:	mov    al,0x49
  4150af:	mov    ecx,0xd88d54e2
  4150b4:	ins    DWORD PTR es:[edi],dx
  4150b5:	popa   
  4150b6:	push   esp
  4150b7:	aas    
  4150b8:	xchg   ebx,eax
  4150b9:	scas   eax,DWORD PTR es:[edi]
  4150ba:	fdiv   DWORD PTR [esi+eiz*4-0x59]
  4150be:	xor    eax,0x94759643
  4150c3:	stos   DWORD PTR es:[edi],eax
  4150c4:	popa   
  4150c5:	cmp    al,0xe
  4150c7:	(bad)  
  4150c8:	sbb    eax,0x1730a24c
  4150cd:	sti    
  4150ce:	test   eax,0x97176d90
  4150d3:	and    eax,0x2125bba1
  4150d8:	dec    eax
  4150d9:	xor    edi,esp
  4150db:	and    DWORD PTR [ebx-0xede34],0x12
  4150e2:	and    BYTE PTR [ebx],bl
  4150e4:	add    BYTE PTR [edi],bh
  4150e6:	lds    ebp,FWORD PTR [ebx-0x7b]
  4150e9:	inc    esp
  4150ea:	xor    eax,0xba6652c1
  4150ef:	shl    BYTE PTR [eax+ecx*2],cl
  4150f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150f3:	pop    es
  4150f4:	xchg   DWORD PTR [edi-0x1b],ecx
  4150f7:	adc    DWORD PTR [edi-0x1f],edx
  4150fa:	dec    ebp
  4150fb:	in     eax,dx
  4150fc:	sub    BYTE PTR [eax-0x22b06d7],bl
  415102:	mov    edx,0x9ac4c383
  415107:	mov    eax,0x2186b72
  41510c:	mov    ds:0xa018b31d,eax
  415111:	mov    ah,0xc1
  415113:	mov    edx,0x5d4b654f
  415118:	das    
  415119:	cmp    edx,DWORD PTR ds:0x4396c432
  41511f:	push   ebp
  415120:	cmp    bh,BYTE PTR [ebp+0x6f8f9705]
  415126:	xor    al,0xff
  415128:	and    ch,BYTE PTR [ecx-0x1f]
  41512b:	pop    ss
  41512c:	popf   
  41512d:	and    BYTE PTR [edi-0xb34e63b],ch
  415133:	test   BYTE PTR [eax-0x46],ah
  415136:	push   ds
  415137:	call   0x118fed09
  41513c:	sbb    DWORD PTR [edx],esi
  41513e:	dec    esi
  41513f:	adc    BYTE PTR [ecx+ebx*2+0x4d9a52e3],ah
  415146:	mov    al,0x17
  415148:	and    BYTE PTR [ebx+edx*2+0x21],0x5e
  41514d:	sub    al,0x37
  41514f:	test   DWORD PTR [ebp+0x45dd0e11],ebp
  415155:	out    dx,eax
  415156:	pop    ss
  415157:	gs ss icebp 
  41515a:	pop    eax
  41515b:	dec    ebx
  41515c:	je     0x41511b
  41515e:	ss and eax,0xbc877030
  415164:	sub    DWORD PTR [esi+ebx*1+0x688c33b7],esp
  41516b:	fdiv   QWORD PTR [edi-0x4e]
  41516e:	adc    eax,0xca13eb59
  415173:	stos   BYTE PTR es:[edi],al
  415174:	mov    ebx,0x42ed08da
  415179:	mov    ch,0xed
  41517b:	fs out 0xac,al
  41517e:	mov    fs,WORD PTR [edx+esi*1]
  415181:	out    0x54,al
  415183:	jmp    0x9808:0x89a3c586
  41518a:	fiadd  WORD PTR [ebx+ebp*8+0x70]
  41518e:	inc    ebx
  41518f:	neg    BYTE PTR [esi+0x14]
  415192:	and    eax,0x9e90df8d
  415197:	iret   
  415198:	outs   dx,BYTE PTR ds:[esi]
  415199:	fist   DWORD PTR [ecx+0x17]
  41519c:	mov    ds:0xd926e475,eax
  4151a1:	fimul  DWORD PTR [edi]
  4151a3:	pushf  
  4151a4:	lahf   
  4151a5:	call   0x6006:0xfd716916
  4151ac:	cmp    ecx,DWORD PTR [ebp-0x77f58138]
  4151b2:	and    eax,ebp
  4151b4:	das    
  4151b5:	pop    edi
  4151b6:	ficomp WORD PTR [edi+0x79]
  4151b9:	in     eax,0xf8
  4151bb:	mov    cl,0xb6
  4151bd:	sbb    al,0xdb
  4151bf:	fwait
  4151c0:	or     BYTE PTR [esi+0x34],ah
  4151c3:	arpl   bx,sp
  4151c5:	mov    ah,BYTE PTR [esi+0x1ed1feb6]
  4151cb:	mov    cs,WORD PTR [eax-0x18]
  4151ce:	mov    cl,0xd1
  4151d0:	fdiv   DWORD PTR [eax+ebx*4]
  4151d3:	addr16 mov esi,0x2f0c1984
  4151d9:	leave  
  4151da:	popa   
  4151db:	sub    BYTE PTR [ebx],dl
  4151dd:	pushf  
  4151de:	or     esp,ebx
  4151e0:	sbb    ch,BYTE PTR [ebp-0x699d0ecb]
  4151e6:	inc    esi
  4151e7:	in     eax,dx
  4151e8:	dec    ecx
  4151e9:	cmc    
  4151ea:	not    esi
  4151ec:	push   cs
  4151ed:	dec    edx
  4151ee:	out    0x93,eax
  4151f0:	lods   eax,DWORD PTR ds:[esi]
  4151f1:	mov    edx,0x427b8f10
  4151f6:	repz in al,dx
  4151f8:	popa   
  4151f9:	cmp    bl,BYTE PTR [ecx]
  4151fb:	jecxz  0x41520c
  4151fd:	pop    ss
  4151fe:	mov    al,0x59
  415200:	and    BYTE PTR [ebp+0x2f],dl
  415203:	sub    DWORD PTR [edx],esp
  415205:	cli    
  415206:	inc    ebx
  415207:	outs   dx,DWORD PTR ds:[esi]
  415208:	jns    0x4151a1
  41520a:	iret   
  41520b:	sti    
  41520c:	mov    al,ds:0x7bb02e80
  415211:	push   eax
  415212:	scas   eax,DWORD PTR es:[edi]
  415213:	std    
  415214:	xor    eax,DWORD PTR [ebp+0x27a7a27a]
  41521a:	or     BYTE PTR [esi*4+0x62c107eb],ch
  415221:	popa   
  415222:	test   DWORD PTR [eax-0x6957dc10],0x98bd1c82
  41522c:	into   
  41522d:	aam    0x30
  41522f:	jmp    0xa850:0x8b76e4d
  415236:	and    DWORD PTR [edx],edi
  415238:	push   esp
  415239:	and    BYTE PTR [edx+0x59f82ddf],dh
  41523f:	push   0xffffff9e
  415241:	dec    ebp
  415242:	jle    0x4151ce
  415244:	(bad)  
  415246:	mov    ?,ebp
  415248:	xchg   edx,eax
  415249:	pop    ebp
  41524a:	das    
  41524b:	mov    al,ds:0xd833320a
  415250:	test   DWORD PTR [esi+0x66],0x9ce5de9f
  415257:	inc    ebp
  415258:	iret   
  415259:	mov    BYTE PTR [ecx+0x6d],cl
  41525c:	jae    0x4152d7
  41525e:	call   0x5d20:0xf79d4805
  415265:	add    al,0x17
  415267:	in     al,0x68
  415269:	adc    cl,BYTE PTR [edi]
  41526b:	out    dx,eax
  41526c:	lea    edx,[edx+0x26bdd654]
  415272:	shr    ebx,0xcb
  415275:	inc    ebx
  415276:	or     bl,ah
  415278:	ret    0xc72b
  41527b:	xchg   edx,eax
  41527c:	or     al,BYTE PTR [ebp-0x78]
  41527f:	push   es
  415280:	dec    edx
  415281:	mov    eax,DWORD PTR [esi+0x2f]
  415284:	sbb    edi,edx
  415286:	jge    0x415231
  415288:	jecxz  0x41525a
  41528a:	dec    edx
  41528b:	in     eax,dx
  41528c:	test   al,0xec
  41528e:	loop   0x4152b6
  415290:	mov    bh,0x89
  415292:	jecxz  0x41527a
  415294:	or     eax,0x2d6035b6
  415299:	das    
  41529a:	fcmove st,st(3)
  41529c:	adc    eax,0xece8d54b
  4152a1:	rol    DWORD PTR [ebx+0x7447ad95],cl
  4152a7:	jae    0x41529b
  4152a9:	in     eax,0x85
  4152ab:	shl    DWORD PTR [edx+0x5afc3c8b],0xb5
  4152b2:	in     eax,0xd5
  4152b4:	pop    esi
  4152b5:	dec    ebp
  4152b6:	jnp    0x415271
  4152b8:	xchg   ebx,eax
  4152b9:	lods   al,BYTE PTR ds:[esi]
  4152ba:	jo     0x415312
  4152bc:	cmp    bl,bh
  4152be:	jp     0x4152b4
  4152c0:	hlt    
  4152c1:	mov    dl,0xed
  4152c3:	pop    esi
  4152c4:	sbb    eax,0xf8f07f35
  4152c9:	mov    ebx,0x9c8d132f
  4152ce:	pop    ecx
  4152cf:	ffree  st(1)
  4152d1:	push   cs
  4152d2:	push   0x26
  4152d4:	movaps xmm2,XMMWORD PTR [edi]
  4152d7:	pop    ecx
  4152d8:	ins    BYTE PTR es:[edi],dx
  4152d9:	imul   esi,DWORD PTR [edx-0x5e6663ad],0x7f96231d
  4152e3:	rcr    DWORD PTR [esp+eax*1-0x9],0x12
  4152e8:	test   BYTE PTR [edi+0x8a69c1c],bh
  4152ee:	mov    cl,0xeb
  4152f0:	xor    eax,0x8b2e8433
  4152f5:	xor    al,0x3d
  4152f7:	jnp    0x415315
  4152f9:	aam    0x5e
  4152fb:	pusha  
  4152fc:	xchg   ebx,eax
  4152fd:	sti    
  4152fe:	inc    esp
  4152ff:	inc    edx
  415300:	jne    0x415332
  415302:	pop    edx
  415303:	inc    ebp
  415304:	out    0x37,al
  415306:	stos   BYTE PTR es:[edi],al
  415307:	out    0x9f,al
  415309:	adc    ebp,edi
  41530b:	cld    
  41530c:	jmp    0x4152d9
  41530e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41530f:	fucomp st(3)
  415311:	aaa    
  415312:	jle    0x41531e
  415314:	popf   
  415315:	hlt    
  415316:	div    BYTE PTR [ebx+0x22c81d07]
  41531c:	push   es
  41531d:	cld    
  41531e:	or     edx,DWORD PTR [eax]
  415320:	push   0x77992adc
  415325:	inc    ebp
  415326:	and    ebp,DWORD PTR [edx]
  415328:	pop    es
  415329:	je     0x415327
  41532b:	sbb    eax,0x280246df
  415330:	jae    0x4153ae
  415332:	inc    eax
  415333:	div    BYTE PTR [esi]
  415335:	xor    al,0x39
  415337:	or     DWORD PTR [eax+0x47],edi
  41533a:	cli    
  41533b:	jmp    0xcbc2f8c9
  415340:	call   0x288932cd
  415345:	jmp    0x6646:0x2a3dd641
  41534c:	cmp    al,dh
  41534e:	fwait
  41534f:	xchg   edx,eax
  415350:	and    BYTE PTR [ecx-0x7c6a3d38],0x1b
  415357:	add    eax,0xff91a516
  41535c:	inc    edx
  41535d:	iret   
  41535e:	ror    DWORD PTR [esi-0xb],0x79
  415362:	test   eax,0x1995e3
  415367:	bound  ebp,QWORD PTR [eax]
  415369:	repnz push ebx
  41536b:	add    DWORD PTR [esi],edx
  41536d:	(bad)  
  41536e:	mov    ebx,0xe75c306
  415373:	fidivr WORD PTR [ebp-0x6d]
  415376:	sbb    al,0x38
  415378:	retf   0xafc9
  41537b:	cmc    
  41537c:	mov    ebx,0x6c82a0a6
  415381:	lea    ecx,[ebx+0x265ef214]
  415387:	sbb    edi,ebp
  415389:	bound  edx,QWORD PTR [ecx+0x2b]
  41538c:	mov    ch,0xed
  41538e:	jp     0x41540f
  415390:	mov    cl,0xde
  415392:	push   eax
  415393:	popa   
  415394:	cmp    BYTE PTR [esi],ch
  415396:	jbe    0x4153ee
  415398:	pop    ecx
  415399:	sar    esp,0xf9
  41539c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41539d:	fadd   QWORD PTR [esi-0x1f760918]
  4153a3:	adc    edi,ebx
  4153a5:	and    BYTE PTR [eax-0xf],0x78
  4153a9:	dec    edx
  4153aa:	jge    0x415420
  4153ac:	jge    0x415396
  4153ae:	sub    BYTE PTR [edx+ebp*8-0x125ecbb4],0xb7
  4153b6:	and    ebp,DWORD PTR [ecx+esi*8+0x9c3a6e3]
  4153bd:	inc    edx
  4153be:	mov    al,0xcd
  4153c0:	mov    esi,0x811cc113
  4153c5:	hlt    
  4153c6:	xchg   ebp,eax
  4153c7:	pop    eax
  4153c8:	jns    0x4153be
  4153ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153cb:	retf   0xcc8d
  4153ce:	pop    esp
  4153cf:	pop    esi
  4153d0:	jnp    0x415394
  4153d2:	pop    esp
  4153d3:	(bad)  
  4153d4:	ins    BYTE PTR es:[edi],dx
  4153d5:	xor    eax,0x3a015f46
  4153da:	scas   eax,DWORD PTR es:[edi]
  4153db:	mov    cl,0x58
  4153dd:	push   esi
  4153de:	ret    
  4153df:	adc    ax,0x75ad
  4153e3:	lea    eax,[edi]
  4153e5:	xchg   edx,eax
  4153e6:	int    0xda
  4153e8:	sub    DWORD PTR [esi+0x2c039dad],esi
  4153ee:	lahf   
  4153ef:	lock cmp dh,dl
  4153f2:	mov    al,0x38
  4153f4:	cmc    
  4153f5:	adc    dl,BYTE PTR [eax+0x7c]
  4153f8:	fisttp QWORD PTR [ebx-0x48]
  4153fb:	adc    eax,0x10deb17a
  415400:	mov    al,ds:0xe8d02ac9
  415405:	test   al,0x17
  415407:	push   cs
  415408:	pop    ebp
  415409:	mov    esp,0x3eb48e3b
  41540e:	sahf   
  41540f:	repz in eax,0xbc
  415412:	push   cs
  415413:	cmp    eax,edx
  415415:	adc    ebp,DWORD PTR [ebp+0x6c95a537]
  41541b:	mov    ch,0xda
  41541d:	or     eax,0x30931419
  415422:	nop
  415423:	inc    ecx
  415424:	cmp    edx,ecx
  415426:	push   0xfffffffc
  415428:	ret    
  415429:	dec    ecx
  41542a:	inc    edi
  41542b:	sar    BYTE PTR [ecx+eiz*1+0x5c],1
  41542f:	es call 0xa2b7:0x8a13bf6e
  415437:	sti    
  415438:	and    al,0x18
  41543a:	xor    bh,dh
  41543c:	xchg   ebx,eax
  41543d:	pop    edx
  41543e:	jge    0x4154a6
  415440:	or     ch,0x82
  415443:	arpl   dx,cx
  415445:	int3   
  415446:	jl     0x415411
  415448:	adc    al,0x35
  41544a:	ins    DWORD PTR es:[edi],dx
  41544b:	push   ecx
  41544c:	fidivr DWORD PTR [ebp+0x2d]
  41544f:	iret   
  415450:	aas    
  415451:	adc    al,0xc5
  415453:	mov    ch,0x7e
  415455:	mov    ch,BYTE PTR ds:0xc74b5c71
  41545b:	mov    ch,BYTE PTR [eax+edx*1+0x9d308bd]
  415462:	cmc    
  415463:	test   al,0xdc
  415465:	icebp  
  415466:	xchg   BYTE PTR [ebx+0x267b7085],ah
  41546c:	(bad)  
  41546d:	lahf   
  41546e:	push   0xffffffc0
  415470:	cs dec ebx
  415472:	pushf  
  415473:	aad    0xf7
  415475:	push   ds
  415476:	rcl    BYTE PTR [edi+0x3342f147],cl
  41547c:	xchg   edx,eax
  41547d:	pop    edi
  41547e:	sbb    dh,BYTE PTR [eax]
  415480:	mov    ah,0xd
  415482:	call   0x578f:0x14ae1c89
  415489:	dec    ecx
  41548a:	add    al,0xc5
  41548c:	aas    
  41548d:	outs   dx,DWORD PTR ds:[esi]
  41548e:	sub    cl,BYTE PTR [edx-0x75]
  415491:	dec    ebp
  415492:	jbe    0x4154a9
  415494:	aam    0x5
  415496:	xchg   edx,eax
  415497:	jno    0x41541b
  415499:	popa   
  41549a:	(bad)  
  41549b:	and    DWORD PTR [ebx-0x2ce43813],esi
  4154a1:	mov    DWORD PTR [ebp-0x53],0x7d5ef70b
  4154a8:	pop    es
  4154a9:	dec    edx
  4154aa:	fist   DWORD PTR [edi+0x7]
  4154ad:	fcomp  QWORD PTR [ebx-0x35]
  4154b0:	(bad)  
  4154b1:	cmc    
  4154b2:	out    0x52,al
  4154b4:	pop    esi
  4154b5:	retf   0x32a5
  4154b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154b9:	push   cs
  4154ba:	mov    ebx,0xf7e5a557
  4154bf:	imul   edx,DWORD PTR [ebx+0x3b],0x558e1a85
  4154c6:	ins    DWORD PTR es:[edi],dx
  4154c7:	pop    esp
  4154c8:	sub    bl,BYTE PTR [eax-0x603c28ee]
  4154ce:	mov    gs,WORD PTR [edi+0x7dc05175]
  4154d4:	(bad)  
  4154d5:	call   0xe33d4b63
  4154da:	mov    dh,BYTE PTR gs:[esi-0x3bc1bd7f]
  4154e1:	sbb    ebp,DWORD PTR [edx+0x0]
  4154e4:	jmp    0x415506
  4154e6:	or     DWORD PTR [ebp+0x242dddaf],0x81382575
  4154f0:	jmp    0xa2542196
  4154f5:	sub    edx,ebx
  4154f7:	pop    ebp
  4154f8:	sub    DWORD PTR [eax],esp
  4154fa:	jno    0x415554
  4154fc:	dec    esp
  4154fd:	scas   eax,DWORD PTR es:[edi]
  4154fe:	lea    ecx,[edi]
  415500:	iret   
  415501:	jnp    0x41556c
  415503:	loopne 0x415501
  415505:	inc    edx
  415506:	mov    esp,0xdb34af87
  41550b:	in     al,dx
  41550c:	sub    DWORD PTR [ebx-0x6f],edi
  41550f:	jno    0x4154df
  415511:	jae    0x415505
  415513:	pushf  
  415514:	fbstp  TBYTE PTR cs:[eax]
  415517:	lahf   
  415518:	icebp  
  415519:	test   eax,0x9a9f1f19
  41551e:	not    edi
  415520:	push   ecx
  415521:	into   
  415522:	add    al,0xc4
  415524:	ins    DWORD PTR es:[edi],dx
  415525:	dec    ecx
  415526:	jl     0x4154fb
  415528:	clc    
  415529:	out    0x96,al
  41552b:	pop    ds
  41552c:	push   esp
  41552d:	push   edx
  41552e:	dec    ebx
  41552f:	ficomp WORD PTR [esi-0x6b]
  415532:	ins    BYTE PTR es:[edi],dx
  415533:	add    eax,0xb04bfebd
  415538:	mov    BYTE PTR [ebp+0x5277c14b],ch
  41553e:	add    DWORD PTR [ecx+0x79],esi
  415541:	stc    
  415542:	out    0x2,al
  415544:	inc    esp
  415545:	outs   dx,DWORD PTR ds:[esi]
  415546:	lds    ebp,FWORD PTR [esp+ebx*4+0x46]
  41554a:	lods   eax,DWORD PTR ds:[esi]
  41554b:	cli    
  41554c:	adc    eax,0xfb71bfa9
  415551:	jb     0x4155c2
  415553:	and    DWORD PTR [edi-0x53885f7e],0x7767c1ff
  41555d:	xor    BYTE PTR [ecx+0x34],bh
  415560:	data16 add ch,dl
  415563:	arpl   sp,cx
  415565:	jne    0x41555a
  415567:	pop    ebx
  415568:	out    dx,al
  415569:	adc    ch,BYTE PTR [ecx-0x65e56865]
  41556f:	jge    0x415578
  415571:	add    al,0x5b
  415573:	(bad)  
  415574:	out    0x7,al
  415576:	loopne 0x41559c
  415578:	enter  0x447f,0x7a
  41557c:	repz adc esp,DWORD PTR [esi-0x66539819]
  415583:	sbb    BYTE PTR [ebx],al
  415585:	jb     0x4155fc
  415587:	dec    esp
  415588:	test   BYTE PTR [edx-0x7a64f64c],bh
  41558e:	mov    edx,0xdbe706e
  415593:	(bad)  
  415594:	pop    ds
  415595:	in     al,dx
  415596:	push   ss
  415597:	mov    ah,0x90
  415599:	mov    eax,ds:0x913a971c
  41559e:	jle    0x415541
  4155a0:	dec    eax
  4155a1:	mov    bl,0x8b
  4155a3:	mov    ch,0xd
  4155a5:	(bad)  
  4155a6:	inc    esp
  4155a7:	push   ecx
  4155a8:	inc    ecx
  4155a9:	je     0x4155a3
  4155ab:	mov    al,ds:0x2779c83f
  4155b0:	daa    
  4155b1:	arpl   WORD PTR [eax+0x7cfedd92],ax
  4155b7:	js     0x415589
  4155b9:	mov    DWORD PTR [esi+edx*4+0xcb31cd5],0xd2fa70b7
  4155c4:	push   esi
  4155c5:	mov    al,0x6a
  4155c7:	lea    ebp,[eax]
  4155c9:	or     esp,DWORD PTR [eax*8-0x6c5bf568]
  4155d0:	loop   0x415589
  4155d2:	mov    cl,0xdb
  4155d4:	stos   DWORD PTR es:[edi],eax
  4155d5:	xor    ecx,0xffffffb3
  4155d8:	hlt    
  4155d9:	and    edi,DWORD PTR [eax-0x72cfbea2]
  4155df:	call   DWORD PTR [eax+0x76159280]
  4155e5:	pushf  
  4155e6:	das    
  4155e7:	inc    eax
  4155e8:	fdiv   DWORD PTR [edi-0x26c4d1e2]
  4155ee:	dec    ebp
  4155ef:	mov    bh,0xb4
  4155f1:	xchg   ebx,eax
  4155f2:	test   BYTE PTR [edx-0x145a5d8],bl
  4155f8:	xor    cl,BYTE PTR [ebp+0x5553b127]
  4155fe:	inc    edi
  4155ff:	push   DWORD PTR [ecx+0x12d578ee]
  415605:	ficomp DWORD PTR [eax+eax*1-0x4a1b53ff]
  41560c:	pop    esp
  41560d:	cli    
  41560e:	rcr    BYTE PTR [ecx+ebx*4-0x44bbb4ef],cl
  415615:	int    0x67
  415617:	lock sahf 
  415619:	jmp    0x94623911
  41561e:	stc    
  41561f:	loopne 0x4155b3
  415621:	aad    0x29
  415623:	jp     0x4155ac
  415625:	sti    
  415626:	mov    eax,ds:0xe5f53245
  41562b:	clc    
  41562c:	pop    ds
  41562d:	jns    0x4155bb
  41562f:	dec    eax
  415630:	jmp    0x4155e7
  415632:	cmp    ebp,DWORD PTR [eax]
  415634:	dec    eax
  415635:	ret    
  415636:	xchg   ebp,eax
  415637:	and    ch,BYTE PTR [ebx-0x23]
  41563a:	xor    esi,esi
  41563c:	pop    ecx
  41563d:	mov    esp,0x8f3dbbad
  415642:	add    al,al
  415644:	add    eax,0xf79a1a9a
  415649:	rcl    DWORD PTR [esi],0x62
  41564c:	xchg   dl,cl
  41564e:	sub    ah,BYTE PTR [ebx+0x5997cca4]
  415654:	aas    
  415655:	(bad)  
  415656:	in     eax,dx
  415657:	test   al,0x74
  415659:	mov    bl,ah
  41565b:	int    0xa
  41565d:	mov    esi,0xe4a50702
  415662:	daa    
  415663:	sbb    BYTE PTR [esp+ebx*2-0x2d],0x98
  415668:	sahf   
  415669:	pop    es
  41566a:	or     DWORD PTR [edi-0x4af910f],edi
  415670:	clc    
  415671:	sbb    al,0xcb
  415673:	xor    DWORD PTR [edx],eax
  415675:	das    
  415676:	adc    cl,BYTE PTR [eax]
  415678:	nop
  415679:	mov    eax,0x9b6d3ea5
  41567e:	dec    esi
  41567f:	aad    0x5d
  415681:	push   ecx
  415682:	jmp    0xbd2a5652
  415687:	icebp  
  415688:	jb     0x41567c
  41568a:	push   ebx
  41568b:	xor    DWORD PTR [esi+0x50d4c909],edx
  415691:	int    0x93
  415693:	imul   bl
  415695:	jl     0x4156b4
  415697:	mov    ds,WORD PTR [ebx-0x2a]
  41569a:	push   ebp
  41569b:	dec    esp
  41569c:	xlat   BYTE PTR ds:[ebx]
  41569d:	fsub   QWORD PTR [edi+0x31]
  4156a0:	adc    eax,DWORD PTR es:[eax-0x56]
  4156a4:	out    0x47,eax
  4156a6:	push   0x1299fd40
  4156ab:	mov    ah,ch
  4156ad:	call   0xdd40a056
  4156b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156b3:	xchg   esp,eax
  4156b4:	jae    0x415666
  4156b6:	or     DWORD PTR [ebx],0x8772e1c2
  4156bc:	and    BYTE PTR [edx-0x3d],bh
  4156bf:	popa   
  4156c0:	addr16 ss cld 
  4156c3:	out    0x82,eax
  4156c5:	adc    ecx,DWORD PTR [esi-0x8]
  4156c8:	retf   0x177f
  4156cb:	and    DWORD PTR [edx],eax
  4156cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ce:	fisub  WORD PTR [ebp-0x1d8a2e67]
  4156d4:	sbb    BYTE PTR [edx],cl
  4156d6:	sar    DWORD PTR [edx-0x4c],1
  4156d9:	pop    ss
  4156da:	shr    dl,cl
  4156dc:	mov    dh,0x76
  4156de:	xchg   edi,eax
  4156df:	adc    eax,DWORD PTR [esi+edx*8]
  4156e2:	jne    0x41571a
  4156e4:	mov    esp,0xee3d5ff2
  4156e9:	jmp    0x2c80:0xe59ef515
  4156f0:	jne    0x4156c9
  4156f2:	push   eax
  4156f3:	into   
  4156f4:	dec    edx
  4156f5:	test   BYTE PTR [edx],bh
  4156f7:	adc    eax,0x9365d5cc
  4156fc:	jno    0x415713
  4156fe:	cmp    eax,0x6546ff7c
  415703:	mov    esp,0x37bbfe64
  415708:	mov    al,cl
  41570a:	jnp    0x4156aa
  41570c:	jbe    0x415708
  41570e:	mov    dl,0xf4
  415710:	push   ebp
  415711:	cmp    bl,BYTE PTR [ebx+0x44]
  415714:	loopne 0x41577b
  415716:	shr    BYTE PTR [eax-0x55f65395],1
  41571c:	mov    ecx,0x9e189196
  415721:	repz push edi
  415723:	leave  
  415724:	mov    WORD PTR ds:0x1ccd3353,?
  41572a:	ja     0x4156f5
  41572c:	push   0xffffff8b
  41572e:	fistp  WORD PTR [ebx+esi*4-0x3d]
  415732:	jmp    0x4156e6
  415734:	mov    cs,WORD PTR [ebx-0xde5cf8c]
  41573a:	xchg   edx,eax
  41573b:	out    dx,eax
  41573c:	pop    ebx
  41573d:	xor    DWORD PTR [ecx-0x13],eax
  415740:	mov    ebp,0x4992cde2
  415745:	(bad)  
  415746:	cmp    ch,bh
  415748:	add    al,0xf9
  41574a:	mov    BYTE PTR [ecx],dh
  41574c:	stc    
  41574d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41574e:	pop    ss
  41574f:	mov    ebx,0x7982484f
  415754:	xchg   ebp,eax
  415755:	aam    0xdb
  415757:	popf   
  415758:	cmp    al,0xf2
  41575a:	mov    edi,0x9d1f3597
  41575f:	or     DWORD PTR [ecx+0x76],esi
  415762:	xchg   DWORD PTR [edi+0x1844359d],ecx
  415768:	aas    
  415769:	or     eax,0xbca97211
  41576e:	fs leave 
  415770:	scas   al,BYTE PTR es:[edi]
  415771:	cli    
  415772:	test   BYTE PTR [edx-0x64],cl
  415775:	inc    edx
  415776:	ror    cl,1
  415778:	pop    es
  415779:	sar    bl,1
  41577b:	js     0x41574a
  41577d:	and    eax,0xc0270823
  415782:	jb     0x41578a
  415784:	loopne 0x415741
  415786:	cld    
  415787:	jle    0x415783
  415789:	pop    es
  41578a:	xchg   edx,eax
  41578b:	pop    ss
  41578c:	xchg   ecx,eax
  41578d:	mov    ebp,0xc067c8c7
  415792:	cs push ebp
  415794:	xchg   edx,eax
  415795:	and    BYTE PTR [eax+0x67],0xb0
  415799:	rcr    BYTE PTR [ebp+0x40],0x50
  41579d:	inc    edi
  41579e:	mov    es,esp
  4157a0:	sub    eax,0x66ad4e9
  4157a5:	fwait
  4157a6:	in     al,dx
  4157a7:	xchg   edi,eax
  4157a8:	dec    esp
  4157a9:	leave  
  4157aa:	pop    ds
  4157ab:	mov    al,0x94
  4157ad:	jnp    0x415748
  4157af:	xor    dh,BYTE PTR [ebx+eiz*4]
  4157b2:	xor    DWORD PTR [esi],ecx
  4157b4:	or     ebx,DWORD PTR [esi]
  4157b6:	daa    
  4157b7:	outs   dx,DWORD PTR ds:[esi]
  4157b8:	lock nop
  4157ba:	sti    
  4157bb:	jl     0x415837
  4157bd:	cwde   
  4157be:	into   
  4157bf:	pop    ebp
  4157c0:	nop
  4157c1:	enter  0x392e,0x8c
  4157c5:	xlat   BYTE PTR ds:[ebx]
  4157c6:	outs   dx,BYTE PTR ds:[esi]
  4157c7:	clc    
  4157c8:	inc    esi
  4157c9:	dec    edx
  4157ca:	mov    ds:0x4dc7db6a,eax
  4157cf:	inc    esp
  4157d0:	mov    ah,0x5b
  4157d2:	fwait
  4157d3:	rcl    ebp,cl
  4157d5:	dec    ebp
  4157d6:	shl    BYTE PTR [ebp+edx*8-0x29c6ad32],cl
  4157dd:	sub    al,0xa
  4157df:	in     al,dx
  4157e0:	adc    DWORD PTR [eax+0x69e3024a],ecx
  4157e6:	cli    
  4157e7:	xor    DWORD PTR [ebx],0xc7150f1d
  4157ed:	fnstcw WORD PTR [ebx+esi*1+0x40286467]
  4157f4:	push   ebx
  4157f5:	sub    ebp,DWORD PTR [edx+eiz*4+0x30ebd844]
  4157fc:	xchg   edi,eax
  4157fd:	cmp    al,0x6b
  4157ff:	mov    ch,0x33
  415801:	mov    ebx,0x9364e578
  415806:	in     al,0xb1
  415808:	push   edx
  415809:	push   esi
  41580a:	int3   
  41580b:	mov    ebx,0x6d784cf7
  415810:	dec    ebx
  415811:	pop    ebp
  415812:	pop    esp
  415813:	ds out 0x59,al
  415816:	push   esp
  415817:	ins    DWORD PTR es:[edi],dx
  415818:	pop    esp
  415819:	test   al,0x41
  41581b:	std    
  41581c:	out    dx,eax
  41581d:	call   0xc9a4dbd3
  415822:	pop    ds
  415823:	cmp    eax,0xabb7b187
  415828:	in     al,0xcb
  41582a:	stc    
  41582b:	and    eax,0xdd57f446
  415830:	adc    BYTE PTR [esi+0x1d],0x3d
  415834:	repnz call 0x88e5:0x2ffe4601
  41583c:	mov    eax,0xdd225644
  415841:	jecxz  0x415844
  415843:	or     DWORD PTR [ebp-0x33],edi
  415846:	cmp    BYTE PTR [esi+ebx*8-0x32],al
  41584a:	cld    
  41584b:	fwait
  41584c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41584d:	push   ds
  41584e:	imul   edi,DWORD PTR [esi],0xffffffe7
  415851:	scas   eax,DWORD PTR es:[edi]
  415852:	jb     0x415814
  415854:	neg    BYTE PTR [eax+0x436290f5]
  41585a:	lock xchg BYTE PTR [edi],bh
  41585d:	cmp    edx,DWORD PTR [ecx]
  41585f:	lods   al,BYTE PTR ds:[esi]
  415860:	fcomp  DWORD PTR [si]
  415863:	xchg   edi,eax
  415864:	icebp  
  415865:	jg     0x415895
  415867:	addr16 mov dh,bl
  41586a:	scas   eax,DWORD PTR es:[edi]
  41586b:	inc    eax
  41586c:	mov    eax,0xa92d41e5
  415871:	jmp    FWORD PTR [esi+0x4a]
  415874:	dec    ecx
  415875:	fmul   DWORD PTR [esp+edi*8-0x59ffefec]
  41587c:	dec    edx
  41587d:	pop    edx
  41587e:	xor    eax,0x7f06865a
  415883:	loopne 0x415902
  415885:	dec    esp
  415886:	ja     0x415861
  415888:	xlat   BYTE PTR ds:[ebx]
  415889:	xchg   edx,eax
  41588a:	xor    al,al
  41588c:	and    al,0x16
  41588e:	adc    al,BYTE PTR [ebp+0x5a3aaa00]
  415894:	adc    dl,BYTE PTR [edx+0x37cdf54]
  41589a:	ss pop esi
  41589c:	dec    eax
  41589d:	(bad)  
  41589f:	sub    BYTE PTR [ebp+0x67a178a3],dl
  4158a5:	add    edi,DWORD PTR [ebx]
  4158a7:	pop    edi
  4158a8:	jbe    0x415900
  4158aa:	xor    bh,BYTE PTR [ecx]
  4158ac:	ficom  WORD PTR [ecx+0x38]
  4158af:	jne    0x4158e4
  4158b1:	inc    edx
  4158b2:	std    
  4158b3:	push   ds
  4158b4:	sub    eax,0x5fe206
  4158b9:	mov    ds:0x6ae3582b,al
  4158be:	adc    BYTE PTR [edx],al
  4158c0:	int    0x41
  4158c2:	add    BYTE PTR [ebp+0x5],dl
  4158c5:	aad    0x96
  4158c7:	add    DWORD PTR [esi+ecx*1-0x16],ebx
  4158cb:	rcr    DWORD PTR [edx-0x68b629fb],0xca
  4158d2:	sub    DWORD PTR [eax-0x6d],ebx
  4158d5:	ret    0x9dc7
  4158d8:	mov    ebx,0xa5e33614
  4158dd:	dec    esi
  4158de:	aas    
  4158df:	mov    al,ds:0xa753990a
  4158e4:	sahf   
  4158e5:	add    ecx,DWORD PTR [esi+eax*2-0x762b896c]
  4158ec:	repz lahf 
  4158ee:	ins    DWORD PTR es:[edi],dx
  4158ef:	sti    
  4158f0:	out    dx,eax
  4158f1:	dec    sp
  4158f3:	aad    0x77
  4158f5:	mov    edx,0xfcf9f20e
  4158fa:	je     0x415979
  4158fc:	or     ebx,DWORD PTR [ecx+0x58]
  4158ff:	push   es
  415900:	mov    ecx,edx
  415902:	clc    
  415903:	retf   
  415904:	fsubr  DWORD PTR [edx+esi*1+0x7b8ab441]
  41590b:	scas   al,BYTE PTR es:[edi]
  41590c:	imul   ebp,edx,0xffffff81
  41590f:	adc    eax,0xfa305fa8
  415914:	cld    
  415915:	(bad)  
  415916:	imul   ecx,esp,0xffffff92
  415919:	sbb    BYTE PTR [esp+ecx*8+0x601158a6],cl
  415920:	jg     0x415959
  415922:	retf   0x937b
  415925:	(bad)  
  415926:	cmp    bl,BYTE PTR [esi]
  415928:	xor    ebx,DWORD PTR [ecx]
  41592a:	sbb    ah,BYTE PTR [ecx]
  41592c:	ret    
  41592d:	adc    bl,BYTE PTR ss:[eax-0x6cfa5b27]
  415934:	pop    es
  415935:	lea    edi,[esi+edx*2]
  415938:	push   ebp
  415939:	xor    esi,esi
  41593b:	int    0x39
  41593d:	in     eax,0xee
  41593f:	sub    bh,bh
  415941:	rcr    BYTE PTR [edi+0x34a3715d],1
  415947:	xchg   edi,eax
  415948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415949:	and    DWORD PTR [edi-0xf390624],0x93b76ceb
  415953:	loope  0x41597c
  415955:	sbb    esi,DWORD PTR [edi+0x31acde3]
  41595b:	mov    ebx,0x29cc1a32
  415960:	mov    ecx,0xfa23b698
  415965:	fwait
  415966:	push   ss
  415967:	mov    esi,0xc3e64149
  41596c:	pop    ecx
  41596d:	dec    ebp
  41596e:	jle    0x41597f
  415970:	stos   DWORD PTR es:[edi],eax
  415971:	push   cs
  415972:	xchg   ecx,eax
  415973:	call   0xff7141fa
  415978:	sub    DWORD PTR [edx+0x25],edi
  41597b:	int3   
  41597c:	lahf   
  41597d:	fdiv   DWORD PTR [esi+0x24395b4c]
  415983:	xor    ah,BYTE PTR [ebp+ebx*2+0x5e]
  415987:	mul    DWORD PTR [edx-0x205e1ca7]
  41598d:	sbb    ebp,ebx
  41598f:	fwait
  415990:	pop    ebp
  415991:	push   esi
  415992:	rol    DWORD PTR [edx-0x3],1
  415995:	xor    al,0x51
  415997:	and    dh,BYTE PTR [esi+0x41]
  41599a:	pop    ds
  41599b:	int3   
  41599c:	or     bl,BYTE PTR [edx+0x1d]
  41599f:	retf   
  4159a0:	test   edi,ecx
  4159a2:	xlat   BYTE PTR ds:[ebx]
  4159a3:	cdq    
  4159a4:	call   DWORD PTR [edx]
  4159a6:	xchg   bh,dl
  4159a8:	es out 0xb6,al
  4159ab:	and    esp,DWORD PTR [edx]
  4159ad:	test   BYTE PTR [eax+0x17645ee7],0x6
  4159b4:	jmp    0x4159b6
  4159b6:	cld    
  4159b7:	push   0x8aaec88
  4159bc:	sub    dh,BYTE PTR [eax+0x63ea73c4]
  4159c2:	jp     0x41598b
  4159c4:	xor    al,0xf0
  4159c6:	sbb    DWORD PTR [edx-0x5c80d3bb],ebx
  4159cc:	sub    DWORD PTR [esi+0x6b],edi
  4159cf:	pushf  
  4159d0:	sub    al,0x24
  4159d2:	(bad)  
  4159d3:	pop    eax
  4159d4:	add    esi,esi
  4159d6:	and    al,0x5e
  4159d8:	aas    
  4159d9:	pop    esi
  4159da:	jo     0x4159d2
  4159dc:	pop    ebp
  4159dd:	sbb    BYTE PTR [eax],bl
  4159df:	sub    DWORD PTR [eax+0x74cb627e],ebp
  4159e5:	push   eax
  4159e6:	(bad)  
  4159e7:	push   esp
  4159e8:	dec    edx
  4159e9:	adc    al,0xc5
  4159eb:	shl    ebx,1
  4159ed:	test   al,0xbd
  4159ef:	pop    ebp
  4159f0:	imul   esp,DWORD PTR [edi-0x4b58d449],0xffffffd2
  4159f7:	or     dl,dl
  4159f9:	dec    esi
  4159fa:	sub    ebx,DWORD PTR ds:0x17778a2e
  415a00:	cmp    BYTE PTR [edx-0x4e],0xe0
  415a04:	daa    
  415a05:	or     eax,0xdcaed16b
  415a0a:	fwait
  415a0b:	push   ss
  415a0c:	xchg   esi,esp
  415a0e:	sub    DWORD PTR [ebp+0x45],eax
  415a11:	cs mov ecx,0x24f804b6
  415a17:	jb     0x4159c2
  415a19:	fadd   st(4),st
  415a1b:	ss or  ecx,ecx
  415a1e:	and    ah,al
  415a20:	jmp    0x4c6163be
  415a25:	jg     0x4159ad
  415a27:	pop    es
  415a28:	shl    DWORD PTR [edi],1
  415a2a:	mov    ah,0x1a
  415a2c:	js     0x415a85
  415a2e:	ss iret 
  415a30:	sbb    eax,DWORD PTR [ebx+ebx*2+0x56]
  415a34:	fdiv   DWORD PTR [eax+0x23]
  415a37:	int3   
  415a38:	inc    ebp
  415a39:	retf   0xb9e0
  415a3c:	pop    esi
  415a3d:	sahf   
  415a3e:	daa    
  415a3f:	sub    BYTE PTR [esi-0x1c],0x27
  415a43:	cmp    DWORD PTR [ecx],edi
  415a45:	mov    ?,WORD PTR [esp+edi*1]
  415a48:	cwde   
  415a49:	mov    WORD PTR ds:0xb8b42b71,es
  415a4f:	sbb    al,0x38
  415a51:	in     eax,dx
  415a52:	adc    dh,dl
  415a54:	outs   dx,BYTE PTR ds:[esi]
  415a55:	push   0xffffffce
  415a57:	add    ebp,ebp
  415a59:	ds jns 0x415a11
  415a5c:	jle    0x415a27
  415a5e:	(bad)  [ebp-0x44]
  415a61:	sbb    bh,bl
  415a63:	pop    edx
  415a64:	ficom  WORD PTR [edx-0x21]
  415a67:	dec    eax
  415a68:	xor    ch,bl
  415a6a:	es mov ebp,0x7bd53e74
  415a70:	pop    ds
  415a71:	push   esi
  415a72:	hlt    
  415a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a74:	fdiv   st(1),st
  415a76:	xlat   BYTE PTR ds:[ebx]
  415a77:	inc    esi
  415a78:	jge    0x415a2e
  415a7a:	sbb    BYTE PTR [edi+edx*2],ch
  415a7d:	imul   dh
  415a7f:	out    dx,eax
  415a80:	pop    es
  415a81:	xchg   edi,eax
  415a82:	and    al,0x5e
  415a84:	jo     0x415a86
  415a86:	xchg   edi,eax
  415a87:	cmc    
  415a88:	icebp  
  415a89:	fs and ebx,ebp
  415a8c:	or     eax,0xe44c31a1
  415a91:	in     al,dx
  415a92:	pop    ss
  415a93:	arpl   WORD PTR [eax],cx
  415a95:	mov    eax,ebx
  415a97:	mov    dl,0xcd
  415a99:	or     dl,dh
  415a9b:	cwde   
  415a9c:	sbb    BYTE PTR [edi],bh
  415a9e:	push   eax
  415a9f:	mov    eax,0x2a675cb9
  415aa4:	pop    esp
  415aa5:	ffreep st(7)
  415aa7:	fadd   QWORD PTR ds:0x746e92a
  415aad:	addr16 ret 
  415aaf:	outs   dx,DWORD PTR gs:[esi]
  415ab1:	aas    
  415ab2:	out    0xfc,al
  415ab4:	mov    edi,0x5174f90a
  415ab9:	pop    esp
  415aba:	inc    esi
  415abb:	jecxz  0x415b04
  415abd:	ret    0xcd10
  415ac0:	in     al,dx
  415ac1:	mov    al,BYTE PTR [esi-0x1c]
  415ac4:	test   al,0x4
  415ac6:	and    ecx,DWORD PTR [edx+0x7058ed20]
  415acc:	clc    
  415acd:	push   0x71e5ce0a
  415ad2:	ror    DWORD PTR [eax-0x7c],1
  415ad5:	cdq    
  415ad6:	les    esp,FWORD PTR [edi-0x5b]
  415ad9:	sub    al,0xf8
  415adb:	inc    ebp
  415adc:	inc    esi
  415add:	(bad)  
  415ade:	imul   ecx,eax,0x97d917b4
  415ae4:	ins    BYTE PTR es:[edi],dx
  415ae5:	pop    ebx
  415ae6:	ror    cl,0x67
  415ae9:	push   esi
  415aea:	adc    BYTE PTR [ebp+0x39],ah
  415aed:	xor    al,cl
  415aef:	daa    
  415af0:	loop   0x415a9a
  415af2:	push   esi
  415af3:	xchg   ecx,eax
  415af4:	lea    ebp,[ecx+0x32]
  415af7:	ror    BYTE PTR [ebx+0x5a7a8430],1
  415afd:	mov    bl,0xbc
  415aff:	push   ss
  415b00:	mov    ebp,ebp
  415b02:	in     eax,dx
  415b03:	sbb    ebx,DWORD PTR [eax+ebp*4-0x427312ba]
  415b0a:	mov    esp,0xa199a3e9
  415b0f:	je     0x415b4c
  415b11:	sub    al,0x68
  415b13:	js     0x415adf
  415b15:	les    ecx,FWORD PTR [ecx+eax*2-0x60]
  415b19:	js     0x415b06
  415b1b:	mov    esp,fs
  415b1d:	cmp    eax,edi
  415b1f:	cld    
  415b20:	jle    0x415ab2
  415b22:	push   ss
  415b23:	dec    edi
  415b24:	in     eax,dx
  415b25:	add    ah,BYTE PTR [esi+0x26]
  415b28:	outs   dx,BYTE PTR ds:[esi]
  415b29:	or     al,0x2a
  415b2b:	and    DWORD PTR [ebp+0x31],edx
  415b2e:	pop    ss
  415b2f:	and    BYTE PTR [edi+0x1d],dh
  415b32:	xor    eax,0xecc94cb6
  415b37:	push   ss
  415b38:	jo     0x415b5a
  415b3a:	outs   dx,DWORD PTR ds:[esi]
  415b3b:	pop    ds
  415b3c:	ins    DWORD PTR es:[edi],dx
  415b3d:	inc    esp
  415b3e:	sahf   
  415b3f:	and    ah,0x62
  415b42:	jne    0x415b4d
  415b44:	hlt    
  415b45:	inc    ebx
  415b46:	dec    BYTE PTR [esi+0x117186e1]
  415b4c:	xchg   ecx,eax
  415b4d:	(bad)  
  415b4f:	leave  
  415b50:	push   ds
  415b51:	scas   al,BYTE PTR es:[edi]
  415b52:	cmp    al,0xe
  415b54:	repz add ecx,DWORD PTR [esi+0x14]
  415b58:	pusha  
  415b59:	dec    ebp
  415b5a:	sbb    ebx,eax
  415b5c:	les    ecx,FWORD PTR [ecx]
  415b5e:	(bad)  
  415b5f:	inc    edx
  415b60:	jmp    DWORD PTR [esi-0x7]
  415b63:	aam    0xcc
  415b65:	mov    dl,0x29
  415b67:	or     BYTE PTR [esi-0x3f25af75],dh
  415b6d:	xchg   ecx,eax
  415b6e:	leave  
  415b6f:	adc    cl,BYTE PTR [eax-0x5f]
  415b72:	leave  
  415b73:	in     al,0x13
  415b75:	aaa    
  415b76:	adc    dl,BYTE PTR [esi]
  415b78:	retf   
  415b79:	jle    0x415bd2
  415b7b:	imul   eax,DWORD PTR [eax+0x23],0x5faa56c9
  415b82:	outs   dx,BYTE PTR ds:[esi]
  415b83:	push   edx
  415b84:	sbb    dh,ch
  415b86:	loopne 0x415bd0
  415b88:	lods   al,BYTE PTR ds:[esi]
  415b89:	dec    ebx
  415b8a:	mov    edx,DWORD PTR [edx-0x45]
  415b8d:	sub    eax,0x10bdef9e
  415b92:	mov    WORD PTR [ecx+0x1d],gs
  415b95:	push   es
  415b96:	inc    edx
  415b97:	and    DWORD PTR [ecx+0x603910e4],eax
  415b9d:	outs   dx,DWORD PTR ds:[esi]
  415b9e:	or     ah,BYTE PTR [edx+0x76a55a96]
  415ba4:	ficomp WORD PTR ds:0xb8c727ae
  415baa:	call   0xc60c:0x41348fe
  415bb1:	or     BYTE PTR [ebp-0x18],0x43
  415bb5:	mov    BYTE PTR [ecx+0x72b6552b],bl
  415bbb:	ins    BYTE PTR es:[edi],dx
  415bbc:	test   ch,al
  415bbe:	jnp    0x415b6c
  415bc0:	inc    esi
  415bc1:	mov    al,0x24
  415bc3:	inc    eax
  415bc4:	rcr    DWORD PTR [esi-0x471aa0a8],1
  415bca:	stc    
  415bcb:	js     0x415b8b
  415bcd:	in     al,0xc4
  415bcf:	xchg   edx,eax
  415bd0:	outs   dx,BYTE PTR ds:[esi]
  415bd1:	mov    eax,ds:0x7e64b171
  415bd6:	test   BYTE PTR [esi-0xf],dl
  415bd9:	adc    edx,DWORD PTR [edx+0x49]
  415bdc:	pop    esi
  415bdd:	mov    eax,0xea69c429
  415be2:	(bad)  
  415be3:	imul   DWORD PTR [ecx-0x435c22f8]
  415be9:	and    eax,edx
  415beb:	bound  eax,QWORD PTR [esi-0x9]
  415bee:	fs sub eax,0xb165c610
  415bf4:	jns    0x415bba
  415bf6:	push   eax
  415bf7:	clc    
  415bf8:	jae    0x415bf7
  415bfa:	(bad)  
  415bfb:	mov    ah,0x64
  415bfd:	sub    DWORD PTR [edi],esp
  415bff:	out    dx,al
  415c00:	pop    es
  415c01:	jns    0x415bce
  415c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c04:	mov    dl,0x2d
  415c06:	mov    ecx,0xcabd2940
  415c0b:	jmp    0x4fff:0xe8a06254
  415c12:	mov    ah,0x13
  415c14:	aaa    
  415c15:	push   esp
  415c16:	or     esi,DWORD PTR [esi]
  415c18:	mov    ss,WORD PTR [edi+0x6f]
  415c1b:	push   es
  415c1c:	jns    0x415c7b
  415c1e:	push   edx
  415c1f:	or     al,0xa1
  415c21:	xor    BYTE PTR [edi],0xaf
  415c24:	adc    al,0x1e
  415c26:	divps  xmm2,XMMWORD PTR [ebx+ecx*8+0x54]
  415c2b:	sbb    bh,al
  415c2d:	test   DWORD PTR [eax],edx
  415c2f:	jmp    0x6f0e1150
  415c34:	push   0xffffffe6
  415c36:	into   
  415c37:	mov    esi,0x16aa4e0d
  415c3c:	les    edi,FWORD PTR [ebx-0x2c3df68e]
  415c42:	in     eax,dx
  415c43:	cld    
  415c44:	daa    
  415c45:	arpl   WORD PTR [edi-0x2007ec20],ax
  415c4b:	adc    dh,al
  415c4d:	lahf   
  415c4e:	or     eax,0xa43d6d1b
  415c53:	dec    esp
  415c54:	gs das 
  415c56:	xchg   DWORD PTR [ebx-0x1768bff5],esp
  415c5c:	add    edi,DWORD PTR [esi-0xf5cb5c9]
  415c62:	lds    ebp,FWORD PTR ds:0x2e7cd0e0
  415c68:	mov    DWORD PTR [edx],ebx
  415c6a:	mov    al,BYTE PTR [ebx-0x112bfc01]
  415c70:	out    dx,eax
  415c71:	into   
  415c72:	push   ds
  415c73:	mov    ds:0xb34da3b,eax
  415c78:	push   ds
  415c79:	inc    ecx
  415c7a:	cmc    
  415c7b:	jae    0x415c34
  415c7d:	stc    
  415c7e:	gs rcpps xmm1,xmm7
  415c82:	xor    eax,0x17d30416
  415c87:	aad    0x2b
  415c89:	mov    ebp,DWORD PTR [edx+edx*8]
  415c8c:	xor    ebp,edi
  415c8e:	imul   ebp,DWORD PTR [eax+0x43abe35f]
  415c95:	or     eax,0xf8617a92
  415c9a:	dec    ebp
  415c9b:	fisttp QWORD PTR [edi-0x7e]
  415c9e:	aaa    
  415c9f:	sub    BYTE PTR [esp+ecx*1],0x26
  415ca3:	adc    dl,BYTE PTR [ecx]
  415ca5:	jne    0x415cd8
  415ca7:	sub    bh,BYTE PTR [ecx+edi*2+0x1295484d]
  415cae:	(bad)
  415cb1:	nop
  415cb2:	inc    edx
  415cb3:	bound  esi,QWORD PTR [edi+ebp*1-0x34]
  415cb7:	and    esp,ebp
  415cb9:	repz sahf 
  415cbb:	push   ecx
  415cbc:	xor    eax,0xbd303266
  415cc1:	mov    esp,0xfab0b8e5
  415cc6:	outs   dx,DWORD PTR ds:[esi]
  415cc7:	popa   
  415cc8:	mov    ch,0x91
  415cca:	sbb    BYTE PTR [ecx],dh
  415ccc:	shr    DWORD PTR [esi-0x36f73134],cl
  415cd2:	dec    ebp
  415cd3:	shr    DWORD PTR [ecx+0x5a9b4844],1
  415cd9:	xor    esp,DWORD PTR [ecx+0x705efde1]
  415cdf:	and    dl,al
  415ce1:	pop    ss
  415ce2:	inc    edx
  415ce3:	jnp    0x415cab
  415ce5:	sbb    ch,BYTE PTR [ecx]
  415ce7:	aad    0x81
  415ce9:	sub    eax,0x24fee5bf
  415cee:	push   es
  415cef:	js     0x415cf2
  415cf1:	ins    BYTE PTR es:[edi],dx
  415cf2:	mov    edi,0x3f88b770
  415cf7:	pop    ebx
  415cf8:	and    al,0xda
  415cfa:	jnp    0x415d55
  415cfc:	adc    eax,0xb4afb38d
  415d01:	shl    eax,1
  415d03:	sbb    al,0x24
  415d05:	or     al,0x8b
  415d07:	into   
  415d08:	push   ecx
  415d09:	jmp    0x415caf
  415d0b:	shl    BYTE PTR [ebx+0x3ea31c46],1
  415d11:	push   eax
  415d12:	adc    dl,bh
  415d14:	ficom  WORD PTR [edx+0x55d86de1]
  415d1a:	sub    DWORD PTR [esi-0x61c47194],ebx
  415d20:	xchg   BYTE PTR [ebp+edi*4+0x7d67ef14],ch
  415d27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d28:	cmp    bl,BYTE PTR [ebp+0x612a5f1a]
  415d2e:	and    DWORD PTR [eax+esi*8-0x20],ebp
  415d32:	shr    BYTE PTR ds:0xd37ef8ef,1
  415d38:	inc    ecx
  415d39:	mov    WORD PTR [ebx+esi*2-0x38cf3f84],cs
  415d40:	adc    al,0xb0
  415d42:	add    eax,0x93a1152c
  415d47:	lods   eax,DWORD PTR ds:[esi]
  415d48:	nop
  415d49:	lock repz out dx,al
  415d4c:	push   edx
  415d4d:	out    0xed,al
  415d4f:	xchg   esp,eax
  415d50:	push   edx
  415d51:	sti    
  415d52:	outs   dx,BYTE PTR ds:[esi]
  415d53:	mov    ebx,0x4ab75f6b
  415d58:	inc    ecx
  415d59:	add    bh,ah
  415d5b:	push   ds
  415d5c:	xor    eax,0xe4db39b6
  415d61:	fisubr WORD PTR [edi+0x60]
  415d64:	sbb    bl,bh
  415d66:	int    0xed
  415d68:	cmc    
  415d69:	mov    edx,0xcdb0e902
  415d6e:	cmp    ah,BYTE PTR [esi-0x57]
  415d71:	mov    edi,0xaf35c51b
  415d76:	call   0x7435:0x4c3e0526
  415d7d:	nop
  415d7e:	fs daa 
  415d80:	sub    eax,0xe601120e
  415d85:	push   cs
  415d86:	test   eax,0x55fe5c74
  415d8b:	std    
  415d8c:	xor    bh,ah
  415d8e:	jl     0x415d99
  415d90:	jp     0x415dad
  415d92:	add    eax,DWORD PTR [ebx-0x48]
  415d95:	out    0x35,eax
  415d97:	or     edx,ebp
  415d99:	add    al,dl
  415d9b:	out    dx,eax
  415d9c:	int    0x14
  415d9e:	mov    fs,WORD PTR [esi+0x1a1cd654]
  415da4:	imul   ebx,DWORD PTR [edx-0x45],0xffffff82
  415da8:	mov    DWORD PTR [edx-0x4db1dc06],ecx
  415dae:	lds    eax,FWORD PTR [eax+0x31]
  415db1:	inc    ecx
  415db2:	fcmovnb st,st(5)
  415db4:	xchg   WORD PTR [esi],bp
  415db7:	imul   edi,DWORD PTR [edx+0x67b2fbdb],0x6e
  415dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dbf:	push   ebp
  415dc0:	call   0xa0e9:0xcfcb8783
  415dc7:	and    eax,0x5199b8e
  415dcc:	in     eax,0xbc
  415dce:	sbb    DWORD PTR [edi+0x307f23b0],edx
  415dd4:	mov    ch,0xa
  415dd6:	stc    
  415dd7:	add    BYTE PTR [ecx+0x30],bh
  415dda:	cwde   
  415ddb:	dec    ebp
  415ddc:	pop    ecx
  415ddd:	loopne 0x415e00
  415ddf:	push   edx
  415de0:	adc    al,0xc
  415de2:	dec    esp
  415de3:	out    dx,eax
  415de4:	jle    0x415e62
  415de6:	not    BYTE PTR [edx-0x79]
  415de9:	inc    ebp
  415dea:	imul   esp,ebp,0x22
  415ded:	push   ebp
  415dee:	add    edi,DWORD PTR [esi+0x4fa7eec]
  415df4:	mov    cl,0x68
  415df6:	fiadd  WORD PTR [edi+0x41]
  415df9:	inc    ecx
  415dfa:	daa    
  415dfb:	mov    ah,0xaf
  415dfd:	scas   al,BYTE PTR es:[edi]
  415dfe:	adc    ah,cl
  415e00:	retf   0x41bc
  415e03:	pop    ss
  415e04:	aam    0x3d
  415e06:	sbb    bh,BYTE PTR [ebp+0x73]
  415e09:	cmp    BYTE PTR [esi+0x3609fae3],0x30
  415e10:	jb     0x415e70
  415e12:	adc    BYTE PTR [ebp-0xc],dh
  415e15:	pop    ebx
  415e16:	scas   ax,WORD PTR es:[edi]
  415e18:	pop    ebx
  415e19:	dec    ebp
  415e1a:	bound  esi,QWORD PTR [ebx-0x34dbd88c]
  415e20:	mov    ds:0x45ee2c6a,eax
  415e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e26:	leave  
  415e27:	adc    DWORD PTR [ebx+0x14],esi
  415e2a:	loopne 0x415df1
  415e2c:	add    bl,BYTE PTR [edi+ebx*4]
  415e2f:	pop    esp
  415e30:	pop    es
  415e31:	cmp    BYTE PTR [ecx+0x65],0x88
  415e35:	and    DWORD PTR [edi+0x12],0x376fa8ed
  415e3c:	mov    esp,0xdf682cca
  415e41:	sbb    BYTE PTR [ebx-0x2f],cl
  415e44:	jle    0x415e8c
  415e46:	div    BYTE PTR [ebx]
  415e48:	je     0x415e04
  415e4a:	and    BYTE PTR [edi+0xb],ah
  415e4d:	push   eax
  415e4e:	xchg   dh,bl
  415e50:	sub    DWORD PTR [esi],ecx
  415e52:	inc    edx
  415e53:	sbb    DWORD PTR [edx-0x72c13e84],ebx
  415e59:	mov    cs,WORD PTR [edx]
  415e5b:	inc    eax
  415e5c:	pop    esp
  415e5d:	leave  
  415e5e:	jnp    0x415ebf
  415e60:	retf   
  415e61:	jl     0x415e67
  415e63:	jp     0x415ec6
  415e65:	cs and eax,0x4cdccd86
  415e6b:	add    al,0x8d
  415e6d:	ficom  WORD PTR [eax+0x60]
  415e70:	pop    edx
  415e71:	inc    eax
  415e72:	loope  0x415e4e
  415e74:	ins    BYTE PTR es:[edi],dx
  415e75:	icebp  
  415e76:	fnstcw WORD PTR [esi]
  415e78:	dec    eax
  415e79:	loop   0x415ecc
  415e7b:	adc    BYTE PTR [ebp+0x2c],0x1b
  415e7f:	push   cs
  415e80:	jae    0x415e65
  415e82:	sub    BYTE PTR [esi+0x17d9b1cd],cl
  415e88:	js     0x415e61
  415e8a:	dec    edi
  415e8b:	xor    eax,0x3c28a55b
  415e90:	ins    DWORD PTR es:[edi],dx
  415e91:	add    esp,ecx
  415e93:	mov    ecx,DWORD PTR [eax-0x1b]
  415e96:	adc    ah,BYTE PTR cs:[edx]
  415e99:	jno    0x415eae
  415e9b:	xchg   ebp,eax
  415e9c:	push   cs
  415e9d:	xor    BYTE PTR [edx],bh
  415e9f:	fldcw  WORD PTR [edx+eiz*2-0x3]
  415ea3:	fwait
  415ea4:	xor    esi,ebx
  415ea6:	cwde   
  415ea7:	xchg   edx,eax
  415ea8:	(bad)  [ebx]
  415eaa:	and    edx,DWORD PTR [esi]
  415eac:	push   eax
  415ead:	les    edx,FWORD PTR [eax+0x401ac63f]
  415eb3:	adc    al,0xf
  415eb5:	jne    0x415f28
  415eb7:	in     eax,0xbd
  415eb9:	mov    esp,0xda9c9e4
  415ebe:	push   edx
  415ebf:	xor    ah,BYTE PTR [edi+0x31]
  415ec2:	pop    ds
  415ec3:	push   ebx
  415ec4:	mul    DWORD PTR [ecx-0x77]
  415ec7:	repnz lea edx,[esi-0x19]
  415ecb:	sub    edi,DWORD PTR [ebx+0x824bec1]
  415ed1:	(bad)  
  415ed2:	sub    DWORD PTR [ecx-0x53c2a902],esp
  415ed8:	add    bh,BYTE PTR [eax]
  415eda:	outs   dx,DWORD PTR ds:[esi]
  415edb:	or     al,0x4d
  415edd:	xchg   edi,eax
  415ede:	stos   BYTE PTR es:[edi],al
  415edf:	xchg   bh,bh
  415ee1:	inc    edi
  415ee2:	cmp    esi,DWORD PTR [ebx-0x170b2995]
  415ee8:	xchg   ecx,eax
  415ee9:	addr16 clc 
  415eeb:	retf   0x61ce
  415eee:	mov    ebx,0x4669c8f8
  415ef3:	sbb    ecx,DWORD PTR [ecx]
  415ef5:	retf   0xf101
  415ef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ef9:	sbb    eax,0xe09b60b4
  415efe:	ror    dh,cl
  415f00:	pop    esi
  415f01:	scas   al,BYTE PTR es:[edi]
  415f02:	icebp  
  415f03:	in     eax,0x49
  415f05:	(bad)  
  415f06:	xor    bl,dl
  415f08:	icebp  
  415f09:	retf   
  415f0a:	ror    BYTE PTR [ebx-0x6b],cl
  415f0d:	pop    ss
  415f0e:	or     eax,0xc7279484
  415f13:	loopne 0x415f06
  415f15:	jecxz  0x415f21
  415f17:	xor    BYTE PTR [esi],dh
  415f19:	fist   DWORD PTR [ebx+0x41]
  415f1c:	leave  
  415f1d:	xchg   edi,eax
  415f1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f1f:	rcl    BYTE PTR [ecx+0x12],cl
  415f22:	and    esi,DWORD PTR [eax-0xb]
  415f25:	out    dx,eax
  415f26:	push   es
  415f27:	adc    DWORD PTR [ecx-0xdc6f64c],0x50acca1f
  415f31:	add    BYTE PTR [edx-0x415ed991],bl
  415f37:	call   0xae3e8c48
  415f3c:	jecxz  0x415fae
  415f3e:	(bad)  
  415f3f:	mov    ecx,0x9575f088
  415f44:	push   esi
  415f45:	cmc    
  415f46:	nop
  415f47:	stos   BYTE PTR es:[edi],al
  415f48:	daa    
  415f49:	xor    edi,DWORD PTR [ecx]
  415f4b:	ja     0x415efd
  415f4d:	inc    ecx
  415f4e:	mov    ds:0x40ebd2e8,al
  415f53:	stc    
  415f54:	enter  0x2a58,0xd
  415f58:	in     eax,dx
  415f59:	inc    edx
  415f5a:	dec    esi
  415f5b:	and    DWORD PTR [ecx-0x7e],ecx
  415f5e:	or     al,0xd7
  415f60:	jmp    0x7027963f
  415f65:	jo     0x415f60
  415f67:	imul   ebp,ebp,0x7e39c7d0
  415f6d:	xor    al,0x73
  415f6f:	pop    edi
  415f70:	pop    edi
  415f71:	xchg   ecx,eax
  415f72:	dec    edi
  415f73:	test   eax,0xcbe64c40
  415f78:	mov    cl,0x8b
  415f7a:	mov    esi,0xb3f3c62e
  415f7f:	stos   DWORD PTR es:[edi],eax
  415f80:	fs retf 0xb411
  415f84:	cs dec edi
  415f86:	cs out 0x4a,eax
  415f89:	pop    ecx
  415f8a:	popf   
  415f8b:	xor    al,0xf4
  415f8d:	out    0x9f,eax
  415f8f:	shr    bh,0xdf
  415f92:	push   edx
  415f93:	adc    al,0x7f
  415f95:	jbe    0x415f62
  415f97:	dec    ebx
  415f98:	mov    dh,0x40
  415f9a:	cli    
  415f9b:	and    eax,0x75da2d6d
  415fa0:	les    edx,FWORD PTR [eax]
  415fa2:	sub    edi,DWORD PTR [edx-0xb]
  415fa5:	(bad)  
  415fa6:	cli    
  415fa7:	cwde   
  415fa8:	push   edx
  415fa9:	(bad)  
  415faa:	(bad)  
  415fab:	(bad)  
  415fad:	loope  0x415fe2
  415faf:	jo     0x415ffb
  415fb1:	cmp    eax,0x1d92ee70
  415fb6:	cmp    ebp,esi
  415fb8:	pop    ecx
  415fb9:	inc    ebx
  415fba:	push   edi
  415fbb:	add    BYTE PTR [esi-0x279766f6],bh
  415fc1:	cwde   
  415fc2:	xchg   esi,eax
  415fc3:	mov    cl,BYTE PTR [edx]
  415fc5:	jge    0x415fc7
  415fc7:	bound  esp,QWORD PTR [esi-0x42]
  415fca:	and    eax,0x9af5c4d7
  415fcf:	inc    ebp
  415fd0:	push   edi
  415fd1:	inc    esi
  415fd2:	call   0xe5912dac
  415fd7:	mov    bl,0x8d
  415fd9:	lds    ebp,FWORD PTR [ebx+0xec4a6fb]
  415fdf:	out    dx,al
  415fe0:	jns    0x416017
  415fe2:	lahf   
  415fe3:	mov    ebp,0xe3313eb0
  415fe8:	cmp    al,0x75
  415fea:	(bad)  
  415feb:	cli    
  415fec:	push   0xffffffeb
  415fee:	mov    bl,0xe0
  415ff0:	data16 xlat BYTE PTR ds:[ebx]
  415ff2:	mov    cl,BYTE PTR cs:[ebx+esi*1+0x20c8aedd]
  415ffa:	std    
  415ffb:	sbb    ebp,ebx
  415ffd:	dec    ecx
  415ffe:	mov    ebp,0x9ab37c3
  416003:	(bad)  
  416004:	cdq    
  416005:	ror    BYTE PTR [esi+0x4b7999c0],0x13
  41600c:	loop   0x415fd8
  41600e:	and    al,0xfd
  416010:	int3   
  416011:	push   esp
  416012:	pop    edi
  416013:	mov    ss,ebx
  416015:	jmp    0x415ff6
  416017:	lea    ecx,[ebx]
  416019:	imul   eax,DWORD PTR ds:0x2ce4abe,0xffffffc5
  416020:	(bad)  
  416021:	adc    eax,0x6fcd74d5
  416026:	repz jo 0x41607c
  416029:	leave  
  41602a:	sbb    DWORD PTR [esi+ebx*4-0x131201f4],ebp
  416031:	arpl   WORD PTR [ebx-0x498644a3],cx
  416037:	sbb    cl,BYTE PTR [edx]
  416039:	push   ebp
  41603a:	(bad)  
  41603b:	cmp    al,0x77
  41603d:	ret    
  41603e:	inc    esi
  41603f:	inc    eax
  416040:	stos   DWORD PTR es:[edi],eax
  416041:	inc    ecx
  416042:	cmp    DWORD PTR [esi*8-0x4fa0c7ed],eax
  416049:	scas   al,BYTE PTR es:[edi]
  41604a:	ss ins BYTE PTR es:[edi],dx
  41604c:	jg     0x415fea
  41604e:	pavgw  mm2,QWORD PTR [eax]
  416051:	js     0x416007
  416053:	xchg   ebp,ebp
  416055:	fstp   TBYTE PTR [ebp+edx*2+0x6e]
  416059:	push   ecx
  41605a:	scas   al,BYTE PTR es:[edi]
  41605b:	lea    edi,[edi]
  41605d:	jo     0x416064
  41605f:	inc    eax
  416060:	mov    ah,0xe2
  416062:	out    0xf1,al
  416064:	lds    ecx,FWORD PTR [esi+0x32ed3fa]
  41606a:	mov    dh,0xdb
  41606c:	arpl   si,bp
  41606e:	imul   esp,DWORD PTR [eax+0x55e60c3],0xffffff9b
  416075:	ss mov ch,0x95
  416078:	cmp    cl,BYTE PTR [ecx+edi*2+0x6cb0c3c1]
  41607f:	ins    DWORD PTR es:[edi],dx
  416080:	aam    0xd3
  416082:	stos   DWORD PTR es:[edi],eax
  416083:	imul   edx,DWORD PTR [edi-0x71],0xfffffffa
  416087:	lods   eax,DWORD PTR ds:[esi]
  416088:	mov    bl,0x52
  41608a:	pop    ebp
  41608b:	(bad)  
  41608c:	cmc    
  41608d:	adc    BYTE PTR [ebx],dl
  41608f:	add    eax,0x3415620e
  416094:	js     0x416099
  416096:	cmp    DWORD PTR [ebx+0x18],edx
  416099:	cdq    
  41609a:	fdiv   DWORD PTR [edx+ebx*2]
  41609d:	push   ds
  41609e:	inc    edx
  41609f:	cwde   
  4160a0:	mov    edx,0x57d9fe2
  4160a5:	cmp    al,0x5c
  4160a7:	cld    
  4160a8:	dec    eax
  4160a9:	stos   DWORD PTR es:[edi],eax
  4160aa:	add    BYTE PTR [edi],dh
  4160ac:	es jg  0x416070
  4160af:	cmp    BYTE PTR [ebx-0x58],ah
  4160b2:	mov    al,0x53
  4160b4:	push   0x2a
  4160b6:	mov    edx,0x652a211
  4160bb:	push   es
  4160bc:	aas    
  4160bd:	and    eax,0x228ec3c2
  4160c2:	push   edi
  4160c3:	repz mov eax,ds:0xd8f3939e
  4160c9:	or     eax,DWORD PTR [ebx-0xa672d71]
  4160cf:	xchg   esp,eax
  4160d0:	lods   al,BYTE PTR ds:[esi]
  4160d1:	lock mov bh,BYTE PTR ds:0x20038430
  4160d8:	mov    WORD PTR [esi*1+0x7e6f5eb4],ss
  4160df:	xchg   ebx,eax
  4160e0:	dec    eax
  4160e1:	xchg   ebx,eax
  4160e2:	loop   0x4160c9
  4160e4:	fistp  QWORD PTR [ecx+0x16]
  4160e7:	aad    0xba
  4160e9:	jle    0x4160c4
  4160eb:	and    ah,cl
  4160ed:	pop    ds
  4160ee:	jle    0x4160ca
  4160f0:	in     al,dx
  4160f1:	cmp    al,0x7f
  4160f3:	leave  
  4160f4:	loope  0x416111
  4160f6:	ds dec ebp
  4160f8:	cs addr16 jmp 0xae8f47bf
  4160ff:	sbb    ebp,eax
  416101:	(bad)  
  416102:	sti    
  416103:	xchg   ebx,eax
  416104:	inc    ebx
  416105:	push   ss
  416106:	inc    esp
  416107:	push   edx
  416108:	ret    0xc3f1
  41610b:	add    eax,DWORD PTR [ecx+0x26]
  41610e:	aad    0xb1
  416110:	pop    esi
  416111:	fnstcw WORD PTR [edx+0x39778b4f]
  416117:	sti    
  416118:	fiadd  WORD PTR [ebx]
  41611a:	sub    edi,esi
  41611c:	ret    
  41611d:	ret    
  41611e:	mov    esp,0xa1b6b8ad
  416123:	jb     0x4160ed
  416125:	dec    ebp
  416126:	ror    DWORD PTR ds:0x16691e80,0xa9
  41612d:	push   edi
  41612e:	add    al,0xcb
  416130:	dec    ebp
  416131:	aad    0x49
  416133:	enter  0x64f8,0x3a
  416137:	sub    DWORD PTR [eax],0xffffffc1
  41613a:	cmp    BYTE PTR [ebp+0x11],ah
  41613d:	sbb    al,0x5f
  41613f:	or     BYTE PTR [esi-0x4f],ch
  416142:	imul   edi,DWORD PTR ds:0x17e289b6,0x5cb4f582
  41614c:	out    dx,al
  41614d:	pop    esp
  41614e:	jp     0x416171
  416150:	inc    ebx
  416151:	inc    ecx
  416152:	pop    ebp
  416153:	xor    bh,BYTE PTR [ebx+0xc1e70f6]
  416159:	jge    0x416143
  41615b:	test   eax,0x458f478c
  416160:	mov    esp,0x4af9979d
  416165:	cdq    
  416166:	sti    
  416167:	jl     0x4160f3
  416169:	pop    ebx
  41616a:	imul   DWORD PTR [ebx-0x32]
  41616d:	fstp   TBYTE PTR [esi+0x6b]
  416170:	pop    ss
  416171:	sub    dh,BYTE PTR [esi+0x46]
  416174:	sub    DWORD PTR [edx-0x4291a1cd],ebp
  41617a:	mov    eax,0x4c741d76
  41617f:	or     eax,0x354e4248
  416184:	repnz adc DWORD PTR [esi+edi*8+0x1a],ebp
  416189:	outs   dx,BYTE PTR ds:[esi]
  41618a:	fwait
  41618b:	ss scas eax,DWORD PTR es:[edi]
  41618d:	inc    ecx
  41618e:	push   0x65
  416190:	and    eax,0x895eb671
  416195:	jl     0x4161d3
  416197:	ss (bad) 
  416199:	imul   ebp,DWORD PTR [ecx+ebp*4+0x3fd263b4],0xdfc9ede6
  4161a4:	add    esi,ebp
  4161a6:	sbb    ebx,esi
  4161a8:	mov    eax,ds:0xf5a5c088
  4161ad:	jne    0x4161ae
  4161af:	jmp    0x5381:0x9e614b23
  4161b6:	mov    bh,0x30
  4161b8:	clc    
  4161b9:	xchg   ecx,eax
  4161ba:	mov    ch,0xc0
  4161bc:	fdivr  st,st(6)
  4161be:	mov    al,0xd7
  4161c0:	jne    0x41623f
  4161c2:	imul   edx,DWORD PTR [ebp-0x13ec3233],0xc33c493b
  4161cc:	pop    ecx
  4161cd:	in     al,dx
  4161ce:	in     eax,dx
  4161cf:	sub    al,0x52
  4161d1:	add    BYTE PTR [esi],al
  4161d3:	cdq    
  4161d4:	or     al,0xd7
  4161d6:	mov    ch,0xb
  4161d8:	(bad)  
  4161d9:	dec    ebp
  4161da:	imul   eax,DWORD PTR [ebp-0x195c1e7],0x12fad57f
  4161e4:	sbb    DWORD PTR [ebp+0xf673100],esp
  4161ea:	retf   
  4161eb:	xchg   edx,eax
  4161ec:	jmp    0x4161d5
  4161ee:	fs stos BYTE PTR es:[edi],al
  4161f0:	pop    ebx
  4161f1:	or     BYTE PTR [esi+0x48cc8f8b],dl
  4161f7:	xlat   BYTE PTR ds:[ebx]
  4161f8:	sub    ebp,esi
  4161fa:	jno    0x4161ad
  4161fc:	pop    ebx
  4161fd:	jle    0x4161c4
  4161ff:	sbb    al,0xc5
  416201:	ins    DWORD PTR es:[edi],dx
  416202:	xor    al,0x16
  416204:	sti    
  416205:	push   0x12842092
  41620a:	retf   0x640d
  41620d:	sbb    eax,0xea9d0db6
  416212:	daa    
  416213:	fnstsw WORD PTR [esi]
  416215:	ja     0x4161fd
  416217:	fiadd  WORD PTR [ebp-0x7a6bdb82]
  41621d:	ficomp DWORD PTR [ecx+0x3465ac5e]
  416223:	dec    edx
  416224:	add    al,BYTE PTR [ebx]
  416226:	adc    dl,BYTE PTR [ecx+0x9a0c444]
  41622c:	pop    ebx
  41622d:	outs   dx,BYTE PTR ds:[esi]
  41622e:	adc    al,0x8a
  416230:	bound  ecx,QWORD PTR [ebx]
  416232:	pop    ebp
  416233:	and    al,0x39
  416235:	adc    bh,dl
  416237:	imul   ebp,edi,0xfffffff8
  41623a:	inc    esp
  41623b:	in     eax,dx
  41623c:	stos   BYTE PTR es:[edi],al
  41623d:	repz mov al,ds:0x67b3cf75
  416243:	dec    ebx
  416244:	adc    edi,DWORD PTR [edi-0x38]
  416247:	sahf   
  416248:	popa   
  416249:	call   0xcdd:0x574ed019
  416250:	call   0xf58f:0xe74a53b
  416257:	cld    
  416258:	stos   DWORD PTR es:[edi],eax
  416259:	and    ecx,ebx
  41625b:	or     di,WORD PTR [edx]
  41625e:	test   BYTE PTR ss:[edx+0x3ddac15e],ah
  416265:	push   0xfffffff3
  416267:	push   0x7c
  416269:	call   0xd9f3:0x6cef7bd7
  416270:	jl     0x416256
  416272:	xchg   esp,eax
  416273:	cmp    DWORD PTR [ecx-0x14e1fd62],0xffffffdc
  41627a:	lea    eax,[ecx+eiz*4+0x1f]
  41627e:	jl     0x416219
  416280:	(bad)  
  416281:	sti    
  416282:	add    DWORD PTR [ebx+ecx*8],esi
  416285:	mov    edi,ebx
  416287:	push   eax
  416288:	bound  esi,QWORD PTR [ecx+ebp*2]
  41628b:	push   edi
  41628c:	repz lahf 
  41628e:	lds    eax,FWORD PTR [ebp-0x2a9c6eb0]
  416294:	fdivr  QWORD PTR [ebp+0x0]
  416297:	adc    eax,0xc1dbbe6e
  41629c:	sub    DWORD PTR [ecx-0x7e3d50d1],0x8d57f923
  4162a6:	cmp    BYTE PTR [edi+ebp*8-0x4942db6e],ch
  4162ad:	fild   DWORD PTR [eax+0x76]
  4162b0:	adc    cl,BYTE PTR [eax+0x4708884d]
  4162b6:	dec    esi
  4162b7:	mov    al,ds:0xa2d50d8c
  4162bc:	mov    ds,WORD PTR [ecx-0x3e]
  4162bf:	loope  0x416263
  4162c1:	test   DWORD PTR [ecx],ebp
  4162c3:	inc    edi
  4162c4:	inc    esi
  4162c5:	mov    al,ds:0x399c2b4b
  4162ca:	and    bl,BYTE PTR [ecx]
  4162cc:	in     al,dx
  4162cd:	add    al,BYTE PTR [ebp+0x53]
  4162d0:	shr    cl,cl
  4162d2:	sub    al,0x7
  4162d4:	aad    0x40
  4162d6:	(bad)  
  4162d8:	add    al,0xd7
  4162da:	or     eax,0xa7dabeb
  4162df:	pop    eax
  4162e0:	pop    ecx
  4162e1:	ins    DWORD PTR es:[edi],dx
  4162e2:	xlat   BYTE PTR ds:[ebx]
  4162e3:	xlat   BYTE PTR ds:[ebx]
  4162e4:	jmp    0x24ab3eb0
  4162e9:	mov    bl,0xe7
  4162eb:	xchg   ecx,eax
  4162ec:	scas   eax,DWORD PTR es:[edi]
  4162ed:	sub    DWORD PTR [ebp+0x75b6a259],0x36
  4162f4:	loope  0x41633a
  4162f6:	and    edx,DWORD PTR [edi+0x339da7be]
  4162fc:	mov    dh,0xd3
  4162fe:	gs inc eax
  416300:	retf   
  416301:	les    ecx,FWORD PTR [edi+0x2e]
  416304:	dec    edi
  416305:	mov    eax,ds:0xb1fb8389
  41630a:	into   
  41630b:	push   esi
  41630c:	clc    
  41630d:	enter  0x2fbd,0x8
  416311:	xchg   DWORD PTR ds:[edx+0x69],ebp
  416315:	add    BYTE PTR [ecx-0x37],bh
  416318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416319:	push   esp
  41631a:	xchg   edi,eax
  41631b:	push   ebp
  41631c:	and    ebp,esp
  41631e:	xchg   BYTE PTR [ebx],ah
  416320:	pop    ebp
  416321:	sbb    esi,DWORD PTR [esi-0x26]
  416324:	retf   0xa7a4
  416327:	mov    cl,0x52
  416329:	sbb    eax,0x44ea6bbd
  41632e:	pop    ebx
  41632f:	cmp    BYTE PTR ds:0x54ddf2e5,cl
  416335:	push   ds
  416336:	inc    ebp
  416337:	aad    0x8
  416339:	xor    edi,0x29
  41633c:	sbb    edx,DWORD PTR [esi-0x69d0a379]
  416342:	pop    edx
  416343:	imul   esp,ebx,0x72
  416346:	push   0x4491dd86
  41634b:	retf   
  41634c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41634d:	(bad)  
  41634e:	xchg   ebx,eax
  41634f:	leave  
  416350:	test   DWORD PTR [ecx+0x7d],0xad8e14b
  416357:	sbb    al,0xea
  416359:	(bad)  
  41635a:	repz mov al,ds:0x5fea58f6
  416360:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  416362:	sbb    DWORD PTR [edx],edi
  416364:	jecxz  0x4163b6
  416366:	xor    eax,0x41b9e8b3
  41636b:	fst    QWORD PTR [ecx]
  41636d:	js     0x416348
  41636f:	aas    
  416370:	or     ah,dl
  416372:	into   
  416373:	xchg   ecx,eax
  416374:	jle    0x416373
  416376:	bound  eax,QWORD PTR [ecx+0x6e]
  416379:	adc    DWORD PTR [ebp-0x7593794b],ecx
  41637f:	(bad)  
  416380:	cmc    
  416381:	push   es
  416382:	jno    0x4163a3
  416384:	es push 0xffffffc4
  416387:	aam    0x5b
  416389:	push   cs
  41638a:	mov    cl,0x35
  41638c:	retf   0x4aa3
  41638f:	and    esi,DWORD PTR [edi-0x72]
  416392:	add    dl,BYTE PTR [edi+0x36124da5]
  416398:	adc    eax,0xf0d70190
  41639d:	or     eax,0xffffffc4
  4163a0:	enter  0x296f,0x66
  4163a4:	and    al,0x50
  4163a6:	or     al,BYTE PTR [ebp+0x2a]
  4163a9:	xchg   DWORD PTR ss:0x496aed2f,ebx
  4163b0:	inc    eax
  4163b1:	push   ecx
  4163b2:	mov    esp,0x1578a793
  4163b7:	adc    BYTE PTR ds:0x7acc33ab,0x25
  4163be:	ficomp WORD PTR [esi-0x46]
  4163c1:	mov    bl,0x2d
  4163c3:	or     BYTE PTR [eax],bh
  4163c5:	adc    ebp,0xffffffa1
  4163c8:	push   0xefa920f6
  4163cd:	imul   ebp,DWORD PTR [edx+0x173e3740],0xffffffc5
  4163d4:	(bad)  
  4163d5:	jecxz  0x416456
  4163d7:	cmp    eax,0x62823ffa
  4163dc:	out    dx,al
  4163dd:	mov    ah,0x85
  4163df:	out    dx,al
  4163e0:	scas   al,BYTE PTR es:[edi]
  4163e1:	(bad)  
  4163e2:	mov    edi,0x6d764675
  4163e7:	fstp   DWORD PTR [edx+0x49d9ba5b]
  4163ed:	inc    ecx
  4163ee:	aaa    
  4163ef:	sbb    eax,0x10b3a45f
  4163f4:	sti    
  4163f5:	sahf   
  4163f6:	aas    
  4163f7:	jmp    0x41641b
  4163f9:	pop    es
  4163fa:	test   eax,0x448d91b
  4163ff:	jnp    0x4163a6
  416401:	cmp    ah,dl
  416403:	aad    0xf1
  416405:	add    ebx,DWORD PTR [edi-0x2d]
  416408:	mov    esi,0xf95d6a60
  41640d:	mov    eax,es:0x89476b23
  416413:	push   ecx
  416414:	sbb    eax,0x433e6142
  416419:	js     0x4163a5
  41641b:	test   al,0x2b
  41641d:	in     eax,dx
  41641e:	in     eax,dx
  41641f:	enter  0x56b1,0xd
  416423:	retf   
  416424:	popa   
  416425:	jb     0x416435
  416427:	add    dl,dl
  416429:	mov    ebx,0x60160fd4
  41642e:	push   ecx
  41642f:	jp     0x4164a2
  416431:	leave  
  416432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416433:	lahf   
  416434:	mov    WORD PTR [eax-0x49],?
  416437:	mov    ds:0x5586bae2,eax
  41643c:	jle    0x4164b0
  41643e:	mov    ebp,0x78a35576
  416443:	xchg   DWORD PTR [edx],edi
  416445:	xchg   ebx,eax
  416446:	sub    DWORD PTR [eax+0x4d174071],ecx
  41644c:	pop    esi
  41644d:	cmp    al,0x93
  41644f:	dec    edi
  416450:	out    dx,eax
  416451:	aaa    
  416452:	jnp    0x4163da
  416454:	je     0x416435
  416456:	pop    ebp
  416457:	ss pusha 
  416459:	je     0x416484
  41645b:	enter  0x2aa4,0x9d
  41645f:	push   ebp
  416460:	fistp  DWORD PTR [edi+0x4f]
  416463:	aaa    
  416464:	out    0x37,al
  416466:	jecxz  0x4163e9
  416468:	cmp    al,0xb3
  41646a:	aad    0x20
  41646c:	mov    ecx,0x1ffaec3
  416471:	add    dh,BYTE PTR [ecx-0x45d7c4b]
  416477:	pop    edx
  416478:	stc    
  416479:	call   0x850c:0x491f64af
  416480:	les    ebx,FWORD PTR [ecx+0x33]
  416483:	in     al,dx
  416484:	in     eax,dx
  416485:	out    0x4,eax
  416487:	jno    0x4164a8
  416489:	mov    eax,0x43666c7e
  41648e:	adc    edx,DWORD PTR [eax+0x7c06f42c]
  416494:	or     bh,ah
  416496:	mov    esi,0x810a6c4
  41649b:	sbb    al,0xed
  41649d:	jg     0x4164bf
  41649f:	mov    ebp,DWORD PTR [edx*2-0x528dc760]
  4164a6:	mov    al,ds:0x48ffeefc
  4164ab:	gs push esi
  4164ad:	and    ebp,DWORD PTR [edx+0x4eebb4c9]
  4164b3:	add    BYTE PTR [ecx],dh
  4164b5:	push   esi
  4164b6:	fs daa 
  4164b8:	mov    ch,0xa1
  4164ba:	outs   dx,DWORD PTR ds:[esi]
  4164bb:	jne    0x4164ae
  4164bd:	push   ds
  4164be:	imul   edi,DWORD PTR [eax-0x6],0xffffff89
  4164c2:	add    ax,0x29e0
  4164c6:	lods   eax,DWORD PTR ds:[esi]
  4164c7:	lock data16 mov al,ds:0xe717b054
  4164ce:	push   ecx
  4164cf:	inc    ecx
  4164d0:	stos   BYTE PTR es:[edi],al
  4164d1:	hlt    
  4164d2:	push   esi
  4164d3:	sahf   
  4164d4:	test   DWORD PTR [ecx-0x3222e92],0x87fd41f
  4164de:	lods   eax,DWORD PTR ds:[esi]
  4164df:	mov    ebp,0x33c3df4a
  4164e4:	(bad)  
  4164e5:	aas    
  4164e6:	jae    0x41650b
  4164e8:	xchg   edx,eax
  4164e9:	fs jl  0x4164f4
  4164ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164ed:	add    eax,0xcc3956d
  4164f2:	out    0x27,eax
  4164f4:	pop    esi
  4164f5:	jmp    0x4164be
  4164f7:	adc    al,0xee
  4164f9:	fist   DWORD PTR [edx-0x3b3917f3]
  4164ff:	sbb    eax,0xbb9fe425
  416504:	scas   eax,DWORD PTR es:[edi]
  416505:	adc    bh,BYTE PTR [eax-0x148e3640]
  41650b:	out    0x98,al
  41650d:	jae    0x416585
  41650f:	je     0x4164ca
  416511:	test   BYTE PTR [edi],0xfd
  416514:	inc    ebp
  416515:	push   0x93536f0b
  41651a:	shl    BYTE PTR [ebx+esi*1+0x68350cc8],1
  416521:	sbb    eax,0x88aed44c
  416526:	jecxz  0x4164fd
  416528:	push   ss
  416529:	jge    0x416549
  41652b:	push   esp
  41652c:	cwde   
  41652d:	push   0x11
  41652f:	add    al,0xd0
  416531:	add    dh,BYTE PTR [ebp-0x66813e44]
  416537:	pop    esi
  416538:	jmp    DWORD PTR [eax-0x8]
  41653b:	jp     0x41650d
  41653d:	lds    ebx,FWORD PTR [esi+0x6b6a7e1d]
  416543:	call   0x50a7:0x7974bde1
  41654a:	je     0x416500
  41654c:	fimul  DWORD PTR [ecx+0x32]
  41654f:	pop    ebp
  416550:	pop    esi
  416551:	add    al,0xef
  416553:	daa    
  416554:	ror    BYTE PTR [eax-0x2c0a919e],1
  41655a:	push   0x6bfba93a
  41655f:	sub    al,0xa1
  416561:	arpl   WORD PTR ds:[edx+0x7f],sp
  416565:	popa   
  416566:	call   0x8af0:0xc7ccdd97
  41656d:	xchg   edi,eax
  41656e:	pop    ds
  41656f:	mov    esp,0xe2c10324
  416574:	xchg   DWORD PTR [ebx+0x2c60ad95],eax
  41657a:	jns    0x416540
  41657c:	es lahf 
  41657e:	jno    0x41650f
  416580:	dec    esp
  416581:	and    bl,0x86
  416584:	ret    0xc4e0
  416587:	mov    al,ds:0x71c0b26b
  41658c:	test   al,0xaf
  41658e:	ins    BYTE PTR es:[edi],dx
  41658f:	adc    ah,al
  416591:	in     eax,dx
  416592:	inc    edx
  416593:	push   es
  416594:	jb     0x4165f9
  416596:	xchg   esp,edi
  416598:	dec    ebx
  416599:	xchg   esp,eax
  41659a:	scas   eax,DWORD PTR es:[edi]
  41659b:	cs cmp esi,ebx
  41659e:	push   ss
  41659f:	mov    WORD PTR ds:0xfa081373,es
  4165a5:	push   esi
  4165a6:	(bad)  
  4165a7:	jcxz   0x416577
  4165aa:	(bad)  
  4165ab:	iret   
  4165ac:	cmp    eax,0x5097ea6f
  4165b1:	aas    
  4165b2:	(bad)  
  4165b3:	gs mov ecx,0x625b80bd
  4165b9:	pop    ebx
  4165ba:	je     0x41657f
  4165bc:	inc    esp
  4165bd:	sub    DWORD PTR [ecx],ecx
  4165bf:	jo     0x41660c
  4165c1:	dec    esp
  4165c2:	daa    
  4165c3:	push   ebx
  4165c4:	mov    ebx,0x43b5c7c2
  4165c9:	enter  0x510e,0x52
  4165cd:	dec    ax
  4165cf:	adc    eax,0x6aca6c3e
  4165d4:	int3   
  4165d5:	add    bh,BYTE PTR [esi+0x5079675c]
  4165db:	xchg   BYTE PTR [edi-0x4],ah
  4165de:	test   bl,ah
  4165e0:	mov    bh,0x4b
  4165e2:	inc    esi
  4165e3:	mov    edi,DWORD PTR [edx+eiz*8]
  4165e6:	sbb    dh,bh
  4165e8:	mov    ch,0xe4
  4165ea:	push   0x5387d70d
  4165ef:	inc    ebp
  4165f0:	dec    eax
  4165f1:	call   0xbca:0xfd18556
  4165f8:	inc    ebx
  4165f9:	cld    
  4165fa:	jl     0x416621
  4165fc:	cwde   
  4165fd:	dec    eax
  4165fe:	rol    BYTE PTR [eax-0x3fb605c],1
  416604:	daa    
  416605:	and    DWORD PTR [ecx-0x54],eax
  416608:	xlat   BYTE PTR ds:[ebx]
  416609:	test   ch,cl
  41660b:	cmc    
  41660c:	bound  edi,QWORD PTR [eax-0x46]
  41660f:	mov    bl,0xb3
  416611:	sar    ebp,1
  416613:	(bad)  
  416614:	mov    ds,WORD PTR [ebx]
  416616:	(bad)  
  416617:	push   esi
  416618:	jmp    0x4165f4
  41661a:	push   esp
  41661b:	inc    ebp
  41661c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41661d:	out    0xa3,al
  41661f:	sub    eax,0x1aa880b
  416624:	cmp    ah,BYTE PTR [esi]
  416626:	adc    al,cl
  416628:	stos   DWORD PTR es:[edi],eax
  416629:	fidivr WORD PTR [esp+ecx*2+0x39840f25]
  416630:	sbb    BYTE PTR [ebp+0x469ce08c],al
  416636:	popa   
  416637:	mov    ebx,0x6db89f0f
  41663c:	jns    0x4165d8
  41663e:	jp     0x4166ba
  416640:	pop    ecx
  416641:	adc    dl,ch
  416643:	add    ebx,DWORD PTR es:[ebx]
  416646:	dec    eax
  416647:	push   edx
  416648:	sub    eax,0x8d578895
  41664d:	cmp    BYTE PTR [ecx+eiz*4],al
  416650:	mov    ebp,0x23dc64c1
  416655:	test   BYTE PTR [ecx-0x12],dh
  416658:	shr    bl,cl
  41665a:	outs   dx,BYTE PTR ds:[esi]
  41665b:	fldcw  WORD PTR [ebx+edx*4+0x73]
  41665f:	popa   
  416660:	push   ss
  416661:	push   edi
  416662:	push   esi
  416663:	adc    BYTE PTR [eax+0x63],bh
  416666:	in     al,0xd5
  416668:	push   0xffffff8f
  41666a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41666b:	in     al,0x8
  41666d:	rol    DWORD PTR ss:[eax+0x23],cl
  416671:	dec    ecx
  416672:	cs mov dl,0x4a
  416675:	add    al,0x4a
  416677:	xor    eax,0x74bc0456
  41667c:	xchg   ebx,eax
  41667d:	and    ecx,DWORD PTR ds:0x7c245a83
  416683:	xchg   ebx,eax
  416684:	call   0x4d7:0x7d25b6c5
  41668b:	or     eax,0xe9788f3b
  416690:	dec    edi
  416691:	adc    edi,DWORD PTR [edx-0x5b]
  416694:	retf   0x3121
  416697:	cmp    BYTE PTR [esi+0x8],dl
  41669a:	sysenter 
  41669c:	sub    al,0x95
  41669e:	std    
  41669f:	fsub   QWORD PTR [ecx]
  4166a1:	add    eax,0xb22bf1a5
  4166a6:	add    edi,eax
  4166a8:	inc    eax
  4166a9:	jmp    0xd86c17ce
  4166ae:	outs   dx,BYTE PTR ds:[esi]
  4166af:	pusha  
  4166b0:	and    bl,dh
  4166b2:	lea    ebp,[edx+0x45]
  4166b5:	jae    0x4166b5
  4166b7:	call   0x6f561708
  4166bc:	sub    al,0xb3
  4166be:	mov    ecx,0xf30977e
  4166c3:	mov    al,ds:0xa10804e3
  4166c8:	test   eax,0x10d0550e
  4166cd:	cmp    eax,0xcb601413
  4166d2:	jb     0x4166b2
  4166d4:	cmp    al,0x6c
  4166d6:	pop    ebp
  4166d7:	outs   dx,BYTE PTR ds:[esi]
  4166d8:	add    DWORD PTR [eax+0x72],esi
  4166db:	push   eax
  4166dc:	add    BYTE PTR [edi-0x3],dh
  4166df:	xchg   ecx,eax
  4166e0:	lahf   
  4166e1:	dec    ecx
  4166e2:	and    al,0xd
  4166e4:	daa    
  4166e5:	pop    ecx
  4166e6:	dec    ebp
  4166e7:	jbe    0x416715
  4166e9:	jl     0x4166a9
  4166eb:	lods   al,BYTE PTR ds:[esi]
  4166ec:	push   edi
  4166ed:	loope  0x4166a3
  4166ef:	push   cs
  4166f0:	sub    eax,0x2f2a6953
  4166f5:	imul   esi,ecx,0xffffffd0
  4166f8:	push   0xffa34da1
  4166fd:	xchg   DWORD PTR [esi-0x33],esi
  416700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416701:	adc    eax,DWORD PTR [ebx+ecx*4+0x21]
  416705:	cld    
  416706:	shl    BYTE PTR [ebx-0x5c],cl
  416709:	or     al,BYTE PTR [edi-0x13]
  41670c:	pop    esp
  41670d:	pop    ebx
  41670e:	das    
  41670f:	cwde   
  416710:	pop    es
  416711:	rol    BYTE PTR [ecx+0x0],cl
  416714:	pop    ebp
  416715:	xlat   BYTE PTR ds:[ebx]
  416716:	test   ch,bh
  416718:	xor    DWORD PTR [ebx-0x25],edx
  41671b:	mov    edx,0xee880fe4
  416720:	and    bh,0xb4
  416723:	repz jae 0x416781
  416726:	push   esp
  416727:	out    dx,eax
  416728:	xor    al,0xdc
  41672a:	mov    cl,0x2a
  41672c:	div    DWORD PTR [eax]
  41672e:	dec    ecx
  41672f:	pop    eax
  416730:	xchg   edx,eax
  416731:	data16 jno 0x416793
  416734:	repz rcl BYTE PTR ds:0x43a0d3e4,cl
  41673b:	pop    ebx
  41673c:	aad    0xd2
  41673e:	sub    al,0xc4
  416740:	mov    dl,0x1c
  416742:	daa    
  416743:	imul   edi,esp,0x816802e6
  416749:	sub    eax,0xab176aa2
  41674e:	or     BYTE PTR [ecx+0x78],dl
  416751:	in     al,dx
  416752:	jp     0x4167cc
  416754:	popa   
  416755:	inc    edx
  416756:	test   eax,0x3a8c13ef
  41675b:	and    esi,DWORD PTR [esi+0x8]
  41675e:	push   ds
  41675f:	and    ah,ah
  416761:	jecxz  0x4167c9
  416763:	inc    esi
  416764:	pop    edi
  416765:	push   ss
  416766:	inc    edi
  416767:	mov    ds,WORD PTR [ebx]
  416769:	or     dh,BYTE PTR [esi+esi*2+0x116cd181]
  416770:	sar    dl,1
  416772:	inc    ebx
  416773:	cmp    eax,0xe03f81d4
  416778:	push   ss
  416779:	jg     0x41673b
  41677b:	xor    DWORD PTR [edx+eiz*4],ebx
  41677e:	ret    
  41677f:	int    0x70
  416781:	lock dec esi
  416783:	test   al,0xb4
  416785:	cwde   
  416786:	mov    ebp,ebx
  416788:	cwde   
  416789:	leave  
  41678a:	dec    edx
  41678b:	lds    ebp,FWORD PTR [edx]
  41678d:	jmp    0xc9d6:0x31a59b43
  416794:	std    
  416795:	xor    edx,esi
  416797:	or     ebp,eax
  416799:	inc    edx
  41679a:	adc    dl,BYTE PTR [edx-0x8]
  41679d:	push   ebp
  41679e:	adc    bl,0x6b
  4167a1:	dec    ebx
  4167a2:	fs push edi
  4167a4:	mov    ah,0xa5
  4167a6:	mov    al,0x11
  4167a8:	repnz inc eax
  4167aa:	cwde   
  4167ab:	(bad)  
  4167ac:	mov    ch,0x25
  4167ae:	cli    
  4167af:	xchg   ecx,eax
  4167b0:	pop    ds
  4167b1:	push   cs
  4167b2:	pushf  
  4167b3:	pop    ecx
  4167b4:	push   0x801415ff
  4167b9:	inc    ecx
  4167ba:	add    BYTE PTR [ecx-0x48f02bbb],cl
  4167c0:	inc    ebp
  4167c1:	aam    0x3d
  4167c3:	cmp    DWORD PTR ds:0x2f750000,eax
  4167c9:	mov    DWORD PTR [ebp-0x14],0xe0d
  4167d0:	lea    ecx,[ebp-0x28]
  4167d3:	push   ecx
  4167d4:	call   DWORD PTR ds:0x418018
  4167da:	mov    DWORD PTR [ebp-0x60],eax
  4167dd:	mov    DWORD PTR [ebp-0x54],0x3a
  4167e4:	mov    BYTE PTR [ebp-0x34],0x0
  4167e8:	mov    DWORD PTR [ebp-0x8],0x965efc5d
  4167ef:	mov    DWORD PTR [ebp-0x68],0x10b527
  4167f6:	jmp    0x416806
  4167f8:	mov    BYTE PTR ds:0x430700,0x0
  4167ff:	mov    BYTE PTR ds:0x41a770,0x0
  416806:	push   0x0
  416808:	call   DWORD PTR ds:0x418018
  41680e:	mov    DWORD PTR [ebp-0x2c],eax
  416811:	push   DWORD PTR ds:0x418018
  416817:	pop    edx
  416818:	mov    DWORD PTR [ebp-0x6c],edx
  41681b:	lea    edx,[ebp-0x40]
  41681e:	push   edx
  41681f:	mov    eax,DWORD PTR [ebp-0x60]
  416822:	push   eax
  416823:	call   DWORD PTR ds:0x418024
  416829:	mov    DWORD PTR [ebp-0x44],eax
  41682c:	push   DWORD PTR [ebp-0x30]
  41682f:	push   0x1000
  416834:	mov    eax,DWORD PTR [ebp-0x14]
  416837:	add    eax,0x46
  41683a:	push   eax
  41683b:	push   0x0
  41683d:	mov    ebx,DWORD PTR [ebp-0x44]
  416840:	call   ebx
  416842:	push   eax
  416843:	pop    ebx
  416844:	mov    DWORD PTR [ebp-0x4],ebx
  416847:	mov    ecx,DWORD PTR [ebp-0x68]
  41684a:	sub    ecx,0xdae0b
  416850:	mov    DWORD PTR [ebp-0x68],ecx
  416853:	cmp    DWORD PTR [ebp-0x4],0x0
  416857:	jne    0x416862
  416859:	push   0x0
  41685b:	push   0x0
  41685d:	call   0x417f22
  416862:	mov    edx,DWORD PTR [ebp-0x4]
  416865:	add    edx,DWORD PTR [ebp-0x14]
  416868:	mov    eax,DWORD PTR [ebp-0x8]
  41686b:	mov    DWORD PTR [edx],eax
  41686d:	mov    ecx,DWORD PTR [ebp-0x4]
  416870:	add    ecx,DWORD PTR [ebp-0x54]
  416873:	mov    DWORD PTR [ebp-0x5c],ecx
  416876:	mov    edx,DWORD PTR ds:0x418024
  41687c:	mov    DWORD PTR [ebp-0x4c],edx
  41687f:	mov    eax,DWORD PTR [ebp-0x4]
  416882:	add    eax,DWORD PTR [ebp-0x14]
  416885:	mov    ecx,DWORD PTR [ebp+0x8]
  416888:	mov    DWORD PTR [eax+0x4],ecx
  41688b:	mov    edx,DWORD PTR [ebp-0x4]
  41688e:	add    edx,DWORD PTR [ebp-0x14]
  416891:	mov    DWORD PTR [ebp-0xc],edx
  416894:	cmp    DWORD PTR [ebp-0x68],0x0
  416898:	jbe    0x4168b5
  41689a:	mov    eax,DWORD PTR [ebp-0xc]
  41689d:	push   eax
  41689e:	mov    ecx,DWORD PTR [ebp-0x14]
  4168a1:	push   ecx
  4168a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4168a5:	add    edx,DWORD PTR [ebp-0x68]
  4168a8:	push   edx
  4168a9:	mov    eax,DWORD PTR [ebp-0x4]
  4168ac:	push   eax
  4168ad:	call   0x417e34
  4168b2:	add    esp,0x10
  4168b5:	cmp    DWORD PTR [ebp-0x5c],0x0
  4168b9:	je     0x4168c9
  4168bb:	push   DWORD PTR [ebp-0x4c]
  4168be:	push   DWORD PTR [ebp-0x6c]
  4168c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4168c4:	push   ecx
  4168c5:	jmp    ecx
  4168c7:	jmp    0x4168cf
  4168c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4168cc:	mov    DWORD PTR [ebp-0x18],ecx
  4168cf:	mov    eax,0x1
  4168d4:	pop    ebx
  4168d5:	mov    esp,ebp
  4168d7:	pop    ebp
  4168d8:	ret    
  4168d9:	push   ebp
  4168da:	mov    ebp,esp
  4168dc:	pop    ebp
  4168dd:	ret    
  4168de:	push   ebp
  4168df:	mov    ebp,esp
  4168e1:	sub    esp,0x54
  4168e4:	mov    DWORD PTR [ebp-0x34],0x0
  4168eb:	mov    DWORD PTR [ebp-0x4],0x0
  4168f2:	mov    DWORD PTR [ebp-0x50],0x0
  4168f9:	mov    DWORD PTR [ebp-0x4c],0x0
  416900:	mov    DWORD PTR [ebp-0x30],0x0
  416907:	lea    eax,[ebp-0x38]
  41690a:	push   eax
  41690b:	push   0x8
  41690d:	call   DWORD PTR ds:0x418020
  416913:	call   DWORD PTR ds:0x418014
  416919:	mov    DWORD PTR [ebp-0x30],eax
  41691c:	lea    ecx,[ebp-0x48]
  41691f:	push   ecx
  416920:	call   DWORD PTR ds:0x418010
  416926:	mov    edx,DWORD PTR [ebp-0x34]
  416929:	push   edx
  41692a:	call   0x416959
  41692f:	add    esp,0x4
  416932:	call   0x417e25
  416937:	mov    DWORD PTR [ebp-0x54],0x0
  41693e:	jmp    0x416949
  416940:	mov    eax,DWORD PTR [ebp-0x54]
  416943:	add    eax,0x1
  416946:	mov    DWORD PTR [ebp-0x54],eax
  416949:	cmp    DWORD PTR [ebp-0x54],0x64
  41694d:	jae    0x416951
  41694f:	jmp    0x416940
  416951:	xor    eax,eax
  416953:	mov    esp,ebp
  416955:	pop    ebp
  416956:	ret    0x10
  416959:	push   ebp
  41695a:	mov    ebp,esp
  41695c:	sub    esp,0x40
  41695f:	push   esi
  416960:	mov    DWORD PTR [ebp-0x40],0x0
  416967:	mov    DWORD PTR [ebp-0x3c],0x0
  41696e:	mov    DWORD PTR [ebp-0x34],0x0
  416975:	mov    DWORD PTR [ebp-0x28],0x0
  41697c:	mov    DWORD PTR [ebp-0x20],0x0
  416983:	mov    DWORD PTR [ebp-0x2c],0x0
  41698a:	mov    DWORD PTR [ebp-0x30],0x449e28
  416991:	mov    DWORD PTR [ebp-0x28],0xa00ec502
  416998:	mov    DWORD PTR [ebp-0x38],0x0
  41699f:	mov    eax,DWORD PTR [ebp-0x28]
  4169a2:	mov    DWORD PTR [ebp-0x24],eax
  4169a5:	mov    DWORD PTR [ebp-0x4],0x0
  4169ac:	mov    ecx,DWORD PTR ds:0x418014
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	push   0x0
  4169b7:	push   0x4e
  4169b9:	push   0x1e
  4169bb:	push   0x0
  4169bd:	push   0xffffffff
  4169bf:	call   DWORD PTR ds:0x41801c
  4169c5:	test   eax,eax
  4169c7:	je     0x417e04
  4169cd:	ds dec esi
  4169cf:	stos   DWORD PTR es:[edi],eax
  4169d0:	fptan  
  4169d2:	call   0xb5981d32
  4169d7:	test   al,0x24
  4169d9:	in     al,0x8c
  4169db:	adc    al,0x3b
  4169dd:	popa   
  4169de:	icebp  
  4169df:	call   0xb5941d3f
  4169e4:	test   al,0x64
  4169e6:	sbb    esi,DWORD PTR [ebx+0x14]
  4169e9:	cmp    ebx,ecx
  4169eb:	icebp  
  4169ec:	call   0xb5941d4c
  4169f1:	test   al,0x24
  4169f3:	sbb    esi,DWORD PTR [ebx+0x14]
  4169f6:	cmp    ebx,ecx
  4169f8:	icebp  
  4169f9:	call   0xb5941d59
  4169fe:	test   al,0x24
  416a00:	sbb    esi,DWORD PTR [ebx+0x14]
  416a03:	cmp    ebx,ecx
  416a05:	icebp  
  416a06:	call   0xb49c1d66
  416a0b:	test   al,0x24
  416a0d:	adc    eax,0xd935ae6c
  416a12:	inc    ebp
  416a13:	loope  0x4169ab
  416a15:	xchg   edx,eax
  416a16:	jmp    0x7c27:0x3ae9e4b4
  416a1d:	push   edx
  416a1e:	stos   BYTE PTR es:[edi],al
  416a1f:	rcr    DWORD PTR [eax-0x38ca23d7],1
  416a25:	leave  
  416a26:	dec    ecx
  416a27:	cmp    edx,DWORD PTR [eax]
  416a29:	jne    0x416a80
  416a2b:	mov    bh,0x9e
  416a2d:	pushf  
  416a2e:	jnp    0x416a01
  416a30:	aaa    
  416a31:	xchg   ebp,eax
  416a32:	ficom  DWORD PTR [ecx+0x75]
  416a35:	push   ebx
  416a36:	jge    0x416a8d
  416a38:	stc    
  416a39:	mov    ch,0xa7
  416a3b:	or     BYTE PTR [ebx+0x41ccda3f],dl
  416a41:	xor    eax,0xfd31197e
  416a46:	icebp  
  416a47:	call   0xb5941da7
  416a4c:	test   al,0x5e
  416a4e:	aam    0x65
  416a50:	call   0x1d65:0x35897705
  416a57:	sub    ch,BYTE PTR [eax-0x6a]
  416a5a:	mov    ah,BYTE PTR [ebx-0x52]
  416a5d:	xor    DWORD PTR [eax],ecx
  416a5f:	aas    
  416a60:	sub    al,0xca
  416a62:	cmc    
  416a63:	retf   
  416a64:	(bad)  
  416a65:	nop
  416a66:	fwait
  416a67:	test   dh,0xcc
  416a6a:	mov    edx,0xdbd40443
  416a6f:	mov    BYTE PTR [esi+0x47],ch
  416a72:	sbb    edx,eax
  416a74:	stc    
  416a75:	dec    edx
  416a76:	stos   DWORD PTR es:[edi],eax
  416a77:	(bad)  
  416a78:	out    0xe2,al
  416a7a:	pop    edi
  416a7b:	nop
  416a7c:	xchg   BYTE PTR [esp+eax*4-0x4aec8ab2],al
  416a83:	or     ecx,ecx
  416a85:	or     al,0xf
  416a87:	sbb    dh,BYTE PTR ds:0x682a1d7e
  416a8d:	xchg   esi,eax
  416a8e:	mov    ah,BYTE PTR [edx-0x52]
  416a91:	pop    ebp
  416a92:	xchg   esp,eax
  416a93:	mov    eax,ds:0xd9d52a2c
  416a98:	pop    DWORD PTR [ebp+0x56c65c06]
  416a9e:	daa    
  416a9f:	in     al,dx
  416aa0:	add    al,0x88
  416aa2:	inc    esi
  416aa3:	and    ebp,DWORD PTR [esi+0x77]
  416aa6:	xchg   BYTE PTR [edx-0x7],cl
  416aa9:	and    al,0xdd
  416aab:	ins    BYTE PTR es:[edi],dx
  416aac:	out    0xfc,al
  416aae:	ret    0x860d
  416ab1:	mov    esp,?
  416ab3:	int    0x75
  416ab5:	jbe    0x416b29
  416ab7:	adc    BYTE PTR [ebp+eax*1+0x77],bh
  416abb:	mov    DWORD PTR ds:0xb552b35b,esi
  416ac1:	test   al,0x24
  416ac3:	sbb    esi,DWORD PTR [ebx+0x14]
  416ac6:	cmp    ebx,ecx
  416ac8:	icebp  
  416ac9:	call   0xb5941e29
  416ace:	test   al,0x24
  416ad0:	sbb    esi,DWORD PTR [ebx+0x14]
  416ad3:	cmp    ebx,ecx
  416ad5:	mov    eax,ds:0x1eb35bad
  416ada:	mov    ah,0xab
  416adc:	and    al,0x7d
  416ade:	cmp    eax,0xf1d97459
  416ae3:	call   0xb5941e43
  416ae8:	test   al,0xc4
  416aea:	sbb    esi,DWORD PTR [ecx+0x15]
  416aed:	xor    al,bl
  416aef:	sti    
  416af0:	call   0xb597bc50
  416af5:	test   al,0xa0
  416af7:	sbb    eax,0xd93b1473
  416afc:	icebp  
  416afd:	stos   DWORD PTR es:[edi],eax
  416afe:	out    0xb3,al
  416b00:	push   edx
  416b01:	mov    ch,0xb8
  416b03:	and    al,0x1b
  416b05:	jae    0x416b1b
  416b07:	ds fyl2x 
  416b0a:	call   0xa5941e2a
  416b0f:	test   al,0x24
  416b11:	sbb    esi,DWORD PTR [ecx+0x14]
  416b14:	cmp    ebx,esp
  416b16:	icebp  
  416b17:	jmp    0xb5941e77
  416b1c:	test   al,0x21
  416b1e:	sbb    esi,DWORD PTR [edx+0x14]
  416b21:	cmp    ebx,ecx
  416b23:	icebp  
  416b24:	call   0xb59fee84
  416b29:	test   al,0x20
  416b2b:	sbb    esi,DWORD PTR [ebx+0x1e]
  416b2e:	vpsllw ymm5,ymm4,xmm2
  416b32:	pop    ebx
  416b33:	repz shl DWORD PTR [ebp+0x731b34a8],cl
  416b3a:	add    al,0x3b
  416b3c:	fyl2x  
  416b3e:	call   0xa5941e8e
  416b43:	test   al,0x24
  416b45:	sbb    esi,DWORD PTR [ebx+0x14]
  416b48:	cmp    ecx,ecx
  416b4a:	icebp  
  416b4b:	call   0xb5941eab
  416b50:	test   al,0x24
  416b52:	sbb    esi,DWORD PTR [ebx+0x14]
  416b55:	aas    
  416b56:	fscale 
  416b58:	call   0xb5941b5f
  416b5d:	test   al,0xe4
  416b5f:	adc    BYTE PTR [ebx+0x41],dh
  416b62:	add    al,0xd9
  416b64:	icebp  
  416b65:	call   0xb5941ec5
  416b6a:	test   al,0x24
  416b6c:	sbb    esi,DWORD PTR [ebx+0x14]
  416b6f:	cmp    ebx,ecx
  416b71:	icebp  
  416b72:	call   0x95941ed2
  416b77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b78:	and    al,0x3
  416b7a:	jae    0x416b90
  416b7c:	cmp    ebx,ecx
  416b7e:	icebp  
  416b7f:	call   0xb5941edf
  416b84:	test   al,0x24
  416b86:	sbb    esi,DWORD PTR [ebx+0x14]
  416b89:	cmp    ebx,ecx
  416b8b:	icebp  
  416b8c:	call   0xb5941eec
  416b91:	test   al,0x24
  416b93:	sbb    esi,DWORD PTR [ebx+0x14]
  416b96:	cmp    ebx,ecx
  416b98:	icebp  
  416b99:	call   0xb5941ef9
  416b9e:	test   al,0x24
  416ba0:	sbb    esi,DWORD PTR [ebx+0x14]
  416ba3:	cmp    ebx,ecx
  416ba5:	icebp  
  416ba6:	call   0xb5941f06
  416bab:	test   al,0x24
  416bad:	sbb    esi,DWORD PTR [ebx+0x14]
  416bb0:	cmp    ebx,ecx
  416bb2:	icebp  
  416bb3:	call   0xb5941f13
  416bb8:	test   al,0x24
  416bba:	sbb    esi,DWORD PTR [ebx+0x14]
  416bbd:	cmp    ebx,ecx
  416bbf:	icebp  
  416bc0:	call   0xb5941f20
  416bc5:	test   al,0x24
  416bc7:	sbb    esi,DWORD PTR [ebx+0x14]
  416bca:	cmp    ebx,ecx
  416bcc:	icebp  
  416bcd:	(bad)  
  416bce:	das    
  416bcf:	(bad)  
  416bd0:	sub    al,cl
  416bd2:	test   al,0x24
  416bd4:	sbb    esi,DWORD PTR [ebx-0x5c]
  416bd7:	xor    cl,bl
  416bd9:	icebp  
  416bda:	clc    
  416bdb:	pop    ebx
  416bdc:	mov    bl,0x52
  416bde:	shr    DWORD PTR [esp+0x3b14771b],cl
  416be5:	mov    DWORD PTR [ebx+ebp*4-0x4ae21897],esi
  416bec:	test   al,0x24
  416bee:	sbb    esi,DWORD PTR [ebx+0x14]
  416bf1:	sbb    ebx,ecx
  416bf3:	icebp  
  416bf4:	or     BYTE PTR [ebp-0x3f],dh
  416bf7:	and    edi,eax
  416bf9:	retf   
  416bfa:	and    al,0x1b
  416bfc:	jae    0x416c12
  416bfe:	pop    ebx
  416bff:	fyl2x  
  416c01:	call   0xb59424a1
  416c06:	cli    
  416c07:	and    al,0x1b
  416c09:	jae    0x416c89
  416c0b:	aas    
  416c0c:	fyl2x  
  416c0e:	call   0xb5941f6e
  416c13:	test   al,0x24
  416c15:	sbb    esi,DWORD PTR [ebx+0x14]
  416c18:	cmp    edi,ecx
  416c1a:	icebp  
  416c1b:	call   0xd06209db
  416c20:	les    ecx,FWORD PTR [ebx+0x78]
  416c23:	jae    0x416c39
  416c25:	cmp    ebx,ebx
  416c27:	icebp  
  416c28:	call   0xb59fff88
  416c2d:	test   al,0x26
  416c2f:	sbb    esi,DWORD PTR [ebx+0x14]
  416c32:	xchg   ebp,ebx
  416c34:	icebp  
  416c35:	call   0xb5941f95
  416c3a:	test   al,0x24
  416c3c:	sbb    esi,DWORD PTR [ebx+0x14]
  416c3f:	cmp    ebx,ecx
  416c41:	mov    cl,0xe8
  416c43:	pop    ebx
  416c44:	jae    0x416c98
  416c46:	mov    ch,0xa8
  416c48:	and    al,0x1b
  416c4a:	jae    0x416c60
  416c4c:	cmp    ebx,ecx
  416c4e:	icebp  
  416c4f:	call   0xb5941faf
  416c54:	test   al,0x24
  416c56:	sbb    esi,DWORD PTR [ebx+0x14]
  416c59:	cmp    ebx,ecx
  416c5b:	icebp  
  416c5c:	call   0xb5941fbc
  416c61:	test   al,0x24
  416c63:	sbb    esi,DWORD PTR [ebx+0x14]
  416c66:	cmp    ebx,ecx
  416c68:	icebp  
  416c69:	call   0xb5941fc9
  416c6e:	test   al,0x24
  416c70:	sbb    esi,DWORD PTR [ebx+0x14]
  416c73:	cmp    ebx,ecx
  416c75:	icebp  
  416c76:	call   0xb5941fd6
  416c7b:	test   al,0x24
  416c7d:	sbb    esi,DWORD PTR [ebx+0x14]
  416c80:	cmp    ebx,ecx
  416c82:	icebp  
  416c83:	call   0xb5941fe3
  416c88:	test   al,0x24
  416c8a:	sbb    esi,DWORD PTR [ebx+0x14]
  416c8d:	cmp    ebx,ecx
  416c8f:	icebp  
  416c90:	call   0xb5941ff0
  416c95:	test   al,0x24
  416c97:	sbb    esi,DWORD PTR [ebx+0x14]
  416c9a:	cmp    ebx,ecx
  416c9c:	icebp  
  416c9d:	call   0xb5941ffd
  416ca2:	test   al,0x24
  416ca4:	sbb    esi,DWORD PTR [ebx+0x14]
  416ca7:	cmp    ebx,ecx
  416ca9:	icebp  
  416caa:	call   0xb594200a
  416caf:	test   al,0x24
  416cb1:	sbb    esi,DWORD PTR [ebx+0x14]
  416cb4:	cmp    ebx,ecx
  416cb6:	icebp  
  416cb7:	call   0xb5942017
  416cbc:	test   al,0x24
  416cbe:	sbb    esi,DWORD PTR [ebx+0x14]
  416cc1:	cmp    ebx,ecx
  416cc3:	icebp  
  416cc4:	call   0xb5942024
  416cc9:	test   al,0x24
  416ccb:	sbb    esi,DWORD PTR [ebx+0x14]
  416cce:	cmp    ebx,ecx
  416cd0:	icebp  
  416cd1:	call   0xb5942031
  416cd6:	test   al,0x24
  416cd8:	sbb    esi,DWORD PTR [ebx+0x14]
  416cdb:	cmp    ebx,ecx
  416cdd:	icebp  
  416cde:	call   0xb594203e
  416ce3:	test   al,0x24
  416ce5:	sbb    esi,DWORD PTR [ebx+0x14]
  416ce8:	cmp    ebx,ecx
  416cea:	icebp  
  416ceb:	call   0xb594204b
  416cf0:	test   al,0x24
  416cf2:	sbb    esi,DWORD PTR [ebx+0x14]
  416cf5:	cmp    ebx,ecx
  416cf7:	icebp  
  416cf8:	call   0xb5942058
  416cfd:	test   al,0x24
  416cff:	sbb    esi,DWORD PTR [ebx+0x14]
  416d02:	cmp    ebx,ecx
  416d04:	icebp  
  416d05:	call   0xb5942065
  416d0a:	test   al,0x24
  416d0c:	sbb    esi,DWORD PTR [ebx+0x14]
  416d0f:	cmp    ebx,ecx
  416d11:	icebp  
  416d12:	call   0xb5942072
  416d17:	test   al,0x24
  416d19:	sbb    esi,DWORD PTR [ebx+0x14]
  416d1c:	cmp    ebx,ecx
  416d1e:	icebp  
  416d1f:	call   0xb594207f
  416d24:	test   al,0x24
  416d26:	sbb    esi,DWORD PTR [ebx+0x14]
  416d29:	cmp    ebx,ecx
  416d2b:	icebp  
  416d2c:	call   0xb594208c
  416d31:	test   al,0x24
  416d33:	sbb    esi,DWORD PTR [ebx+0x14]
  416d36:	cmp    ebx,ecx
  416d38:	icebp  
  416d39:	call   0xb5942099
  416d3e:	test   al,0x24
  416d40:	sbb    esi,DWORD PTR [ebx+0x14]
  416d43:	cmp    ebx,ecx
  416d45:	icebp  
  416d46:	call   0xb59420a6
  416d4b:	test   al,0x24
  416d4d:	sbb    esi,DWORD PTR [ebx+0x14]
  416d50:	cmp    ebx,ecx
  416d52:	icebp  
  416d53:	call   0xb59420b3
  416d58:	test   al,0x24
  416d5a:	sbb    esi,DWORD PTR [ebx+0x14]
  416d5d:	cmp    ebx,ecx
  416d5f:	icebp  
  416d60:	call   0xb59420c0
  416d65:	test   al,0x24
  416d67:	sbb    esi,DWORD PTR [ebx+0x14]
  416d6a:	cmp    ebx,ecx
  416d6c:	icebp  
  416d6d:	call   0xb59420cd
  416d72:	test   al,0x24
  416d74:	sbb    esi,DWORD PTR [ebx+0x14]
  416d77:	cmp    ebx,ecx
  416d79:	icebp  
  416d7a:	call   0xb59420da
  416d7f:	test   al,0x24
  416d81:	sbb    esi,DWORD PTR [ebx+0x14]
  416d84:	cmp    ebx,ecx
  416d86:	icebp  
  416d87:	call   0xb59420e7
  416d8c:	test   al,0x24
  416d8e:	sbb    esi,DWORD PTR [ebx+0x14]
  416d91:	cmp    ebx,ecx
  416d93:	icebp  
  416d94:	call   0xb59420f4
  416d99:	test   al,0x24
  416d9b:	sbb    esi,DWORD PTR [ebx+0x14]
  416d9e:	cmp    ebx,ecx
  416da0:	icebp  
  416da1:	call   0xb5942101
  416da6:	test   al,0x24
  416da8:	sbb    esi,DWORD PTR [ebx+0x14]
  416dab:	cmp    ebx,ecx
  416dad:	icebp  
  416dae:	call   0xb594210e
  416db3:	test   al,0x24
  416db5:	sbb    esi,DWORD PTR [ebx+0x14]
  416db8:	cmp    ebx,ecx
  416dba:	icebp  
  416dbb:	call   0xb594211b
  416dc0:	test   al,0x24
  416dc2:	sbb    esi,DWORD PTR [ebx+0x14]
  416dc5:	cmp    ebx,ecx
  416dc7:	icebp  
  416dc8:	call   0xb5942128
  416dcd:	add    ebp,DWORD PTR [edx+0x10]
  416dd0:	jae    0x416e0d
  416dd2:	cmp    ebx,ecx
  416dd4:	loope  0x416dbe
  416dd6:	pop    ebx
  416dd7:	cdq    
  416dd8:	lock outs dx,DWORD PTR ds:[esi]
  416dda:	fcomp  QWORD PTR [ecx+0x10064054]
  416de0:	loop   0x416dae
  416de2:	pop    es
  416de3:	out    dx,al
  416de4:	and    DWORD PTR [esp+edi*8-0xf],edx
  416de8:	aad    0xc7
  416dea:	rol    BYTE PTR [edi],0x7c
  416ded:	loop   0x416e07
  416def:	xor    al,dl
  416df1:	icebp  
  416df2:	and    esi,DWORD PTR [edi+0x52]
  416df5:	imul   ecx,DWORD PTR [ebp+ebp*1-0x6d661035],0xffffff85
  416dfd:	mov    eax,0xeb908308
  416e02:	sub    eax,0xc603f393
  416e07:	stc    
  416e08:	enter  0x18d0,0xb1
  416e0c:	push   ds
  416e0d:	bnd jo 0x416dc8
  416e10:	int3   
  416e11:	cmp    al,0x2a
  416e13:	mov    BYTE PTR [edi],ch
  416e15:	add    eax,0xa3fd4cf1
  416e1a:	out    0xc7,eax
  416e1c:	mov    eax,0xcb8b63fc
  416e21:	jae    0x416dee
  416e23:	inc    ebp
  416e24:	fdivp  st(0),st
  416e26:	scas   al,BYTE PTR es:[edi]
  416e27:	pop    ds
  416e28:	inc    edi
  416e29:	ret    0xe43a
  416e2c:	enter  0x42da,0xd6
  416e30:	mov    edx,0x4012b76e
  416e35:	mov    es,WORD PTR [eax-0x5a]
  416e38:	pushf  
  416e39:	imul   eax,DWORD PTR [ebx],0x271c468c
  416e3f:	loop   0x416e8b
  416e41:	lods   eax,DWORD PTR ds:[esi]
  416e42:	mov    ebp,0x30f9b941
  416e47:	sbb    BYTE PTR [ebx+0x15],cl
  416e4a:	jae    0x416e85
  416e4c:	enter  0x564b,0x3f
  416e50:	add    BYTE PTR [esi-0x1d],cl
  416e53:	mov    edi,0x8e8344c9
  416e58:	jge    0x416e3f
  416e5a:	int3   
  416e5b:	xor    DWORD PTR ds:0x208a9263,edi
  416e61:	add    al,0xf9
  416e63:	imul   ebx,DWORD PTR [esi+0x62a1a077],0xffffff9d
  416e6a:	or     al,BYTE PTR [ecx]
  416e6c:	xor    eax,0x3b81c036
  416e71:	and    DWORD PTR [eax+eax*2-0xebb8408],edx
  416e78:	das    
  416e79:	das    
  416e7a:	pusha  
  416e7b:	cli    
  416e7c:	(bad)  
  416e7d:	int3   
  416e7e:	sub    al,0x70
  416e80:	sbb    bh,BYTE PTR [edx]
  416e82:	add    DWORD PTR [eax-0x57],eax
  416e85:	xchg   ebx,eax
  416e86:	mov    dh,0xc3
  416e88:	sbb    BYTE PTR [ebp-0x150cb03f],dh
  416e8e:	icebp  
  416e8f:	push   edx
  416e90:	cmp    ecx,ecx
  416e92:	stos   DWORD PTR es:[edi],eax
  416e93:	sub    al,0x7
  416e95:	mov    al,0xf2
  416e97:	sub    al,0x40
  416e99:	add    ah,0x9b
  416e9c:	in     eax,0x12
  416e9e:	mov    ch,0x1a
  416ea0:	mov    ebx,0xfc5d9b77
  416ea5:	sub    DWORD PTR [ecx+0x5cda70b6],0xffffffbe
  416eac:	lock inc esp
  416eae:	ja     0x416e92
  416eb0:	cwde   
  416eb1:	sbb    BYTE PTR [eax-0x4d],ah
  416eb4:	jg     0x416eb4
  416eb6:	stos   BYTE PTR es:[edi],al
  416eb7:	sub    BYTE PTR [edx-0x42c36a7d],ch
  416ebd:	add    eax,0x7d2aaecc
  416ec2:	call   0xd1ca31d9
  416ec7:	xchg   ebp,eax
  416ec8:	cmp    esp,esp
  416eca:	jmp    0x1fe13bf4
  416ecf:	mov    esp,0x2ecb562f
  416ed4:	fadd   QWORD PTR [edi]
  416ed6:	cmp    dh,BYTE PTR [ebx]
  416ed8:	repz sub dh,bh
  416edb:	or     eax,0x24085090
  416ee0:	rcr    DWORD PTR [ecx-0x28],1
  416ee3:	sub    bh,ah
  416ee5:	xchg   BYTE PTR [ecx-0x7de0e77f],ah
  416eeb:	lds    ebx,FWORD PTR [ebx-0x51355f5b]
  416ef1:	or     al,0x91
  416ef3:	jmp    0x75d4a99a
  416ef8:	sbb    BYTE PTR [ebp-0x42],cl
  416efb:	aas    
  416efc:	jo     0x416edf
  416efe:	sahf   
  416eff:	sub    al,0xe0
  416f01:	or     eax,0xdbb33045
  416f06:	clc    
  416f07:	mov    esi,DWORD PTR [edi]
  416f09:	test   ecx,0x2dbc1d28
  416f0f:	jle    0x416eff
  416f11:	add    al,0x78
  416f13:	push   ebx
  416f14:	or     esp,DWORD PTR [ebp-0x67]
  416f17:	call   0xc71d807d
  416f1c:	clc    
  416f1d:	push   ss
  416f1e:	ja     0x416f63
  416f20:	mov    ch,BYTE PTR [esi+eax*1-0xa]
  416f24:	fadd   DWORD PTR [ecx-0x63fcc9c9]
  416f2a:	fistp  QWORD PTR [ebx]
  416f2c:	xchg   esi,eax
  416f2d:	push   ecx
  416f2e:	mov    dh,0xab
  416f30:	mov    WORD PTR [ecx-0x48f14a73],fs
  416f36:	(bad)  
  416f37:	fnstsw WORD PTR [ebx]
  416f39:	(bad)  
  416f3a:	dec    esp
  416f3b:	push   edx
  416f3c:	call   0x9d82005
  416f41:	pop    esi
  416f42:	and    ecx,DWORD PTR [esi-0x7b871093]
  416f48:	jl     0x416ee5
  416f4a:	cli    
  416f4b:	imul   esp,DWORD PTR [edi+esi*8-0x4f38f5fa],0xff93365
  416f56:	out    dx,al
  416f57:	stc    
  416f58:	leave  
  416f59:	ja     0x416f19
  416f5b:	adc    eax,0xe5a17e2d
  416f60:	cwde   
  416f61:	std    
  416f62:	(bad)  
  416f63:	mov    eax,0xe40d73b
  416f68:	push   cs
  416f69:	and    BYTE PTR [edi-0x16],ah
  416f6c:	mov    dh,0xea
  416f6e:	out    dx,al
  416f6f:	mov    gs:0x365df85d,al
  416f75:	jp     0x416f0d
  416f77:	xor    al,0xd6
  416f79:	lods   al,BYTE PTR ds:[esi]
  416f7a:	hlt    
  416f7b:	inc    eax
  416f7c:	mov    cl,0x17
  416f7e:	in     eax,0x93
  416f80:	imul   esi,DWORD PTR [edx],0xffffff96
  416f83:	fmul   DWORD PTR [ebp-0x48]
  416f86:	aaa    
  416f87:	cmc    
  416f88:	fidivr DWORD PTR [ebp-0x539c4f8f]
  416f8e:	shr    eax,1
  416f90:	mov    ds,WORD PTR [ecx+0x5]
  416f93:	shl    BYTE PTR [ebx+0x4bc76d3a],cl
  416f99:	inc    ecx
  416f9a:	test   BYTE PTR [ebp+0x36],bl
  416f9d:	jb     0x416fae
  416f9f:	test   DWORD PTR [ecx+edx*4+0xf33f5f2],esi
  416fa6:	push   esp
  416fa7:	int    0x25
  416fa9:	push   ss
  416faa:	ja     0x416f91
  416fac:	lods   al,BYTE PTR ds:[esi]
  416fad:	and    BYTE PTR [esi+0x6ce9852c],0x1f
  416fb4:	pop    ecx
  416fb5:	repz not BYTE PTR [ebp+0x7da0d665]
  416fbc:	jg     0x416f6f
  416fbe:	inc    esp
  416fbf:	push   es
  416fc0:	hlt    
  416fc1:	fimul  WORD PTR [ebx+0x7e765b02]
  416fc7:	call   0x207da9d7
  416fcc:	add    DWORD PTR [edi+0x9],0xffffffcb
  416fd0:	xchg   edi,eax
  416fd1:	sahf   
  416fd2:	inc    ecx
  416fd3:	mov    cl,0x6
  416fd5:	cmp    eax,0xe4203ae1
  416fda:	loope  0x41702e
  416fdc:	sbb    al,0x9
  416fde:	cmp    ecx,DWORD PTR [esp+eax*4+0x6a]
  416fe2:	lods   eax,DWORD PTR ds:[esi]
  416fe3:	cwde   
  416fe4:	dec    eax
  416fe5:	retf   
  416fe6:	imul   esi,DWORD PTR [eax+0x52dccbbb],0x7b00c709
  416ff0:	scas   al,BYTE PTR es:[edi]
  416ff1:	push   ds
  416ff2:	stos   BYTE PTR es:[edi],al
  416ff3:	ret    
  416ff4:	push   esi
  416ff5:	ret    0x2aa
  416ff8:	push   esp
  416ff9:	push   edi
  416ffa:	adc    DWORD PTR [edx],ecx
  416ffc:	(bad)  
  416ffd:	clc    
  416ffe:	sti    
  416fff:	loop   0x416fd8
  417001:	repz cdq 
  417003:	mov    al,0x3b
  417005:	fwait
  417006:	ror    BYTE PTR [esi],0x6
  417009:	mov    ebx,0xe8d9a18d
  41700e:	sar    al,0x67
  417011:	ss pop ebx
  417013:	(bad)  
  417014:	rcl    DWORD PTR [ecx+0x585ecda1],1
  41701a:	mov    dl,0x88
  41701c:	inc    ecx
  41701d:	dec    edx
  41701e:	jne    0x41709c
  417020:	and    al,0x9f
  417022:	ficom  DWORD PTR [eax]
  417024:	xlat   BYTE PTR ds:[ebx]
  417025:	push   0xa97dfd96
  41702a:	mov    ds:0x266a3f1e,eax
  41702f:	xchg   DWORD PTR [ebx+0x9],ebp
  417032:	jnp    0x417071
  417034:	cmp    DWORD PTR [eax-0x18aef2dc],ebp
  41703a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41703b:	out    0x76,al
  41703d:	ss std 
  41703f:	ins    DWORD PTR es:[edi],dx
  417040:	(bad)  
  417041:	pop    esi
  417042:	push   ecx
  417043:	jmp    0x25514cb
  417048:	out    0x30,eax
  41704a:	retf   
  41704b:	in     eax,0x37
  41704d:	mov    cl,0x85
  41704f:	push   eax
  417050:	(bad)  
  417051:	xchg   esp,eax
  417052:	dec    ecx
  417053:	test   DWORD PTR ds:[esi],0x7853e899
  41705a:	dec    eax
  41705b:	xchg   ebx,eax
  41705c:	sbb    eax,DWORD PTR [edi]
  41705e:	dec    ecx
  41705f:	sub    dh,ch
  417061:	stos   DWORD PTR es:[edi],eax
  417062:	repnz fnstcw WORD PTR [edx+ecx*8+0x60]
  417067:	mov    cl,0x3b
  417069:	dec    esi
  41706a:	or     eax,0x4601e007
  41706f:	pop    ecx
  417070:	xchg   BYTE PTR [eax-0x36],bl
  417073:	or     BYTE PTR [ecx-0x6e27cf47],bh
  417079:	inc    edx
  41707a:	arpl   WORD PTR [ecx+0x35ac5275],di
  417080:	nop
  417081:	ror    BYTE PTR [esi+0x6d],1
  417084:	data16 mov bh,0x78
  417087:	jge    0x41708f
  417089:	fwait
  41708a:	sub    eax,0xee76cc50
  41708f:	dec    eax
  417090:	sbb    eax,0x313a8e9a
  417095:	popa   
  417096:	inc    ebp
  417097:	sbb    BYTE PTR [edx+0x5d],ch
  41709a:	jmp    0x41703f
  41709c:	mov    edi,0x1c80d314
  4170a1:	xor    al,0x35
  4170a3:	bound  ebp,QWORD PTR [esi+0x1ef26cdf]
  4170a9:	sub    al,0xcb
  4170ab:	and    DWORD PTR [edi],eax
  4170ad:	add    DWORD PTR [edi],ecx
  4170af:	pop    edi
  4170b0:	cmp    cl,BYTE PTR [edx-0x38]
  4170b3:	lds    esi,FWORD PTR [edx+0x1184f55b]
  4170b9:	dec    ebp
  4170ba:	cmp    DWORD PTR [esi],esp
  4170bc:	inc    esp
  4170bd:	xor    eax,0x895bcfeb
  4170c2:	sbb    BYTE PTR [ebx],0xbe
  4170c5:	xchg   esp,eax
  4170c6:	dec    esp
  4170c7:	jnp    0x4170b5
  4170c9:	sahf   
  4170ca:	fwait
  4170cb:	dec    esp
  4170cc:	adc    DWORD PTR [ecx-0x736aa434],edx
  4170d2:	(bad)  
  4170d3:	(bad)  
  4170d4:	push   ss
  4170d5:	pop    ss
  4170d6:	cmp    dh,BYTE PTR [ecx+0x6325e99a]
  4170dc:	call   0x19c1:0x65dbfc59
  4170e3:	outs   dx,BYTE PTR ds:[esi]
  4170e4:	jle    0x417124
  4170e6:	or     DWORD PTR [esp+edx*8-0x1d],0x2d
  4170eb:	xchg   esi,eax
  4170ec:	aaa    
  4170ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170ee:	xor    DWORD PTR [edx],0xffffff85
  4170f1:	mov    ds:0x696ef0ac,al
  4170f6:	sbb    al,0xb1
  4170f8:	xor    al,0xa2
  4170fa:	das    
  4170fb:	adc    DWORD PTR [edx+0x2cbe5c41],esi
  417101:	pop    ds
  417102:	es clc 
  417104:	popa   
  417105:	jmp    0x4170b8
  417107:	xlat   BYTE PTR ds:[ebx]
  417108:	mov    edi,0x8d02642b
  41710d:	test   BYTE PTR [ebx-0x1a20c256],dl
  417113:	inc    ebx
  417114:	inc    ecx
  417115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417116:	mov    eax,ds:0xadaac7d5
  41711b:	inc    ecx
  41711c:	adc    al,0xec
  41711e:	aad    0xa0
  417120:	and    edx,DWORD PTR [esi]
  417122:	das    
  417123:	push   ecx
  417124:	sub    edx,DWORD PTR [edi]
  417126:	push   es
  417127:	ss iret 
  417129:	ja     0x4170c9
  41712b:	nop
  41712c:	int    0x8e
  41712e:	into   
  41712f:	pushf  
  417130:	and    BYTE PTR [edx],bh
  417132:	test   DWORD PTR [ebx],ecx
  417134:	sbb    eax,0x7753ceee
  417139:	fisttp DWORD PTR [ebp+0x67]
  41713c:	in     al,dx
  41713d:	cmp    esi,eax
  41713f:	cwde   
  417140:	clc    
  417141:	dec    eax
  417142:	xchg   BYTE PTR [eax+0x6fa52cb5],al
  417148:	(bad)  
  417149:	hlt    
  41714a:	adc    al,0x44
  41714c:	sbb    al,0xf0
  41714e:	cld    
  41714f:	jns    0x4171a9
  417151:	and    ebp,ecx
  417153:	call   0x4204c684
  417158:	add    eax,edi
  41715a:	and    DWORD PTR [edx],0xb28839cc
  417160:	xor    eax,0x4ba0270e
  417165:	push   es
  417166:	mov    esi,0xb170dc72
  41716b:	out    0xe9,al
  41716d:	out    0x3a,eax
  41716f:	pop    eax
  417170:	div    DWORD PTR [ebx-0x40]
  417173:	inc    ebx
  417174:	dec    ebx
  417175:	mov    edx,0x517f63b7
  41717a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41717b:	jg     0x417190
  41717d:	dec    esp
  41717e:	or     BYTE PTR [esi+0x75fa5b91],ch
  417184:	dec    ecx
  417185:	pop    es
  417186:	leave  
  417187:	mov    eax,0x606d85fe
  41718c:	test   al,0xd6
  41718e:	outs   dx,DWORD PTR ds:[esi]
  41718f:	(bad)  
  417190:	int    0xe8
  417192:	push   es
  417193:	mov    eax,ds:0x551c24c6
  417198:	dec    eax
  417199:	and    DWORD PTR [ecx],esp
  41719b:	jge    0x4171a8
  41719d:	lock xchg ebp,eax
  41719f:	pop    es
  4171a0:	adc    al,0xfb
  4171a3:	out    dx,eax
  4171a4:	and    cl,0xe8
  4171a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171a8:	jl     0x4171a5
  4171aa:	jmp    0x5666:0x95551cb4
  4171b1:	jecxz  0x417157
  4171b3:	sbb    al,0x81
  4171b5:	xchg   ecx,eax
  4171b6:	and    BYTE PTR [edi-0x60c26068],bl
  4171bc:	adc    DWORD PTR [edx+eax*8+0x4c135ab8],ebp
  4171c3:	jge    0x4171a2
  4171c5:	popa   
  4171c6:	mov    ebp,0xbc351c13
  4171cb:	sbb    BYTE PTR [edx-0x5d67fda9],bl
  4171d1:	int3   
  4171d2:	adc    DWORD PTR [ecx-0x4f636135],ebx
  4171d8:	popa   
  4171d9:	push   esp
  4171da:	mov    eax,ds:0x307f15af
  4171df:	add    BYTE PTR [edx-0x70dfdedc],bh
  4171e5:	xor    DWORD PTR [edi],eax
  4171e7:	add    al,0x9f
  4171e9:	shl    DWORD PTR [esi+0x532d2bfa],0xf8
  4171f0:	icebp  
  4171f1:	mov    esp,0x9fd8c521
  4171f6:	fwait
  4171f7:	xor    eax,0x1b308973
  4171fc:	xchg   BYTE PTR [ebp-0x701fb8e],cl
  417202:	aad    0x17
  417204:	pop    ebp
  417205:	aaa    
  417206:	jmpw   0xeded
  41720a:	in     al,0xd6
  41720c:	push   ds
  41720d:	jns    0x4171f3
  41720f:	inc    ebp
  417210:	and    edx,ebp
  417212:	pop    es
  417213:	cmp    BYTE PTR [edi-0x35],cl
  417216:	mov    ecx,0x9d25869a
  41721b:	in     al,0xf7
  41721d:	cdq    
  41721e:	test   DWORD PTR [edx],0x631c9df9
  417224:	pusha  
  417225:	inc    ebp
  417226:	or     esp,edx
  417228:	mov    esi,DWORD PTR [ebx+0x2231c641]
  41722e:	mov    esi,0x141abdad
  417233:	or     bl,BYTE PTR [edx+0x2a213168]
  417239:	jl     0x417293
  41723b:	dec    esp
  41723c:	pop    edi
  41723d:	cmp    BYTE PTR [ebx+0x6],bl
  417240:	repz push es
  417242:	stos   DWORD PTR es:[edi],eax
  417243:	push   edx
  417244:	inc    edi
  417245:	mov    esp,0x6948dce4
  41724a:	(bad)  
  41724b:	ror    bl,1
  41724d:	and    esi,DWORD PTR [ebx+0x401d3ae3]
  417253:	mov    DWORD PTR [ebx+esi*4-0x74691e6c],0x483a7968
  41725e:	out    dx,eax
  41725f:	dec    ebx
  417260:	(bad)  
  417262:	ret    
  417263:	add    BYTE PTR [edi-0x3d],bl
  417266:	leave  
  417267:	arpl   bx,si
  417269:	and    eax,0x7b3c1857
  41726e:	ror    BYTE PTR [ebx],0x8d
  417271:	sbb    DWORD PTR [esi],eax
  417273:	das    
  417274:	js     0x417207
  417276:	sub    BYTE PTR [esi+0x6c],bl
  417279:	sbb    al,dh
  41727b:	sti    
  41727c:	add    DWORD PTR [ebp-0x27],esp
  41727f:	push   ds
  417280:	arpl   WORD PTR [ebp+0x23be38a9],bx
  417286:	push   edi
  417287:	test   al,0x18
  417289:	xchg   edi,eax
  41728a:	(bad)  
  41728b:	mov    cl,0x55
  41728d:	daa    
  41728e:	rol    cl,0x5f
  417291:	ss jmp 0x5bad:0x64806e76
  417299:	inc    ebp
  41729a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41729b:	sub    BYTE PTR [edx-0x4f4407fc],0xf9
  4172a2:	and    DWORD PTR [eax],esp
  4172a4:	(bad)  
  4172a5:	repz inc edi
  4172a7:	mov    al,0x6
  4172a9:	xchg   edx,eax
  4172aa:	lods   al,BYTE PTR ds:[esi]
  4172ab:	enter  0x5307,0xa4
  4172af:	inc    esi
  4172b0:	xor    eax,0x55c8e88f
  4172b5:	sbb    ebx,DWORD PTR [ebp-0xfc1e7af]
  4172bb:	inc    esp
  4172bc:	out    0x9c,eax
  4172be:	dec    esp
  4172bf:	sub    BYTE PTR es:[edx],0xc2
  4172c3:	(bad)  
  4172c4:	stos   DWORD PTR es:[edi],eax
  4172c5:	dec    edi
  4172c6:	(bad)  
  4172c7:	(bad)  
  4172c8:	pop    ecx
  4172c9:	(bad)  
  4172ca:	jae    0x417281
  4172cc:	mov    esi,0x3e4813a1
  4172d1:	mov    bh,0x10
  4172d3:	pop    edi
  4172d4:	daa    
  4172d5:	pop    ss
  4172d6:	sahf   
  4172d7:	add    dl,bh
  4172d9:	(bad)  
  4172db:	push   eax
  4172dc:	mov    ah,0x51
  4172de:	add    DWORD PTR [edi],ecx
  4172e0:	stos   DWORD PTR es:[edi],eax
  4172e1:	and    edx,DWORD PTR ss:[ecx+0x1221be63]
  4172e8:	hlt    
  4172e9:	jecxz  0x417341
  4172eb:	sar    BYTE PTR [ebp-0x3b6fc958],1
  4172f1:	inc    ebx
  4172f2:	inc    esi
  4172f3:	lahf   
  4172f4:	cmp    BYTE PTR [edx-0x8],dl
  4172f7:	pop    esi
  4172f8:	je     0x4172c4
  4172fa:	cld    
  4172fb:	mov    bl,0x6e
  4172fd:	xchg   ebx,eax
  4172fe:	push   es
  4172ff:	loope  0x41733c
  417301:	nop
  417302:	mov    ds:0xa002d533,eax
  417307:	jge    0x4172ec
  417309:	outs   dx,BYTE PTR ds:[esi]
  41730a:	jge    0x417329
  41730c:	in     eax,0xda
  41730e:	jbe    0x417304
  417310:	pop    esp
  417311:	pop    eax
  417312:	pop    ds
  417313:	xchg   esi,eax
  417314:	(bad)  
  417315:	stc    
  417316:	daa    
  417317:	es out dx,eax
  417319:	fsubr  QWORD PTR ds:0xba2e0994
  41731f:	iret   
  417320:	(bad)  
  417321:	in     eax,0xd7
  417323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417324:	xor    cl,BYTE PTR [ecx]
  417326:	outs   dx,BYTE PTR ds:[esi]
  417327:	test   BYTE PTR [ecx-0x58],0x46
  41732b:	jmp    0xb675d5f3
  417330:	(bad)  
  417331:	pop    ebx
  417332:	ins    BYTE PTR es:[edi],dx
  417333:	sbb    al,0x41
  417335:	repz dec esi
  417337:	mov    gs,WORD PTR [ebp*1-0x78ada431]
  41733e:	mov    dl,0xf0
  417340:	clc    
  417341:	sbb    esp,DWORD PTR [edi-0x501747f]
  417347:	xor    DWORD PTR [eax+0x27],edx
  41734a:	jg     0x417354
  41734c:	sub    esi,DWORD PTR [ebx+eax*4-0x33]
  417350:	dec    esp
  417351:	clc    
  417352:	inc    esi
  417353:	mov    ch,0x1f
  417355:	mov    al,ds:0xdf975266
  41735a:	sub    dl,bh
  41735c:	fadd   QWORD PTR [ecx+edi*4-0x38e24e68]
  417363:	pop    es
  417364:	jno    0x41734b
  417366:	mov    esi,0x8f0c44a6
  41736b:	icebp  
  41736c:	xchg   ebp,eax
  41736d:	loope  0x4173d1
  41736f:	xchg   ecx,eax
  417370:	ins    BYTE PTR es:[edi],dx
  417371:	sahf   
  417372:	xchg   edi,eax
  417373:	(bad)  
  417375:	add    BYTE PTR es:[edi+0x2e],ah
  417379:	xor    BYTE PTR [eax+0x7dfce016],bl
  41737f:	and    bl,BYTE PTR [eax]
  417381:	(bad)  
  417382:	sahf   
  417383:	jecxz  0x41739a
  417385:	(bad)  
  417386:	xor    ch,bh
  417388:	scas   eax,DWORD PTR es:[edi]
  417389:	out    dx,eax
  41738a:	push   0x1144ca65
  41738f:	jl     0x417345
  417391:	pop    ds
  417392:	jns    0x41738d
  417394:	mov    dh,0xb2
  417396:	repz sar BYTE PTR [edi],0xc1
  41739a:	mov    es:0x6509ce39,eax
  4173a0:	ins    BYTE PTR es:[edi],dx
  4173a1:	daa    
  4173a2:	rcl    edi,cl
  4173a4:	cli    
  4173a5:	out    0x70,eax
  4173a7:	mov    esp,0xe19cff3
  4173ac:	mov    ebp,0x403a558f
  4173b1:	fld    DWORD PTR [ecx+edi*4]
  4173b4:	pop    ecx
  4173b5:	shl    DWORD PTR [ecx+0x69],1
  4173b8:	xchg   ecx,eax
  4173b9:	rcr    BYTE PTR [edx],1
  4173bb:	icebp  
  4173bc:	test   BYTE PTR [eax+esi*4],dh
  4173bf:	mov    dl,0x55
  4173c1:	push   es
  4173c2:	xor    ecx,0xffffff9b
  4173c5:	cmp    edi,ecx
  4173c7:	fcomp  DWORD PTR [esp+esi*4+0x6d4ced27]
  4173ce:	mov    esi,0x41a6f495
  4173d3:	or     BYTE PTR [ebp+0x3376a994],al
  4173d9:	fnstsw WORD PTR [eax+0x3f939741]
  4173df:	adc    esp,ecx
  4173e1:	retf   
  4173e2:	mov    dh,0x60
  4173e4:	pop    edi
  4173e5:	xchg   ebp,eax
  4173e6:	add    DWORD PTR [ebx],ebp
  4173e8:	daa    
  4173e9:	imul   esp,DWORD PTR fs:[edi],0x4cf10680
  4173f0:	(bad)  
  4173f2:	inc    edi
  4173f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173f4:	push   ds
  4173f5:	fsubr  QWORD PTR [esi-0x40]
  4173f8:	jo     0x4173ca
  4173fa:	jb     0x41741b
  4173fc:	frstor gs:[edi]
  4173ff:	fdiv   QWORD PTR [esi+0x18]
  417402:	pop    ds
  417403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417404:	xor    eax,ecx
  417406:	push   ebp
  417407:	pop    ebx
  417408:	adc    al,BYTE PTR [edi+0x5b]
  41740b:	add    al,0xfa
  41740d:	push   0xa6ce3421
  417412:	sbb    edx,ebx
  417414:	pop    esp
  417415:	stc    
  417416:	mov    eax,0x8dd88331
  41741b:	(bad)  
  41741c:	imul   DWORD PTR [ecx+0x65]
  41741f:	xor    al,BYTE PTR [edx-0x3b]
  417422:	test   edi,esi
  417424:	(bad)  
  417425:	mov    es,WORD PTR [edx]
  417427:	imul   eax,DWORD PTR [edi-0x32243c7a],0x5a063a61
  417431:	inc    ebx
  417432:	addr16 inc ecx
  417434:	addr16 or al,0xea
  417437:	push   cs
  417438:	mov    ds:0xb194171,eax
  41743d:	stc    
  41743e:	or     ch,al
  417440:	mov    ebx,ebx
  417442:	popf   
  417443:	jg     0x4173c6
  417445:	(bad)  
  417446:	jnp    0x4173ec
  417448:	das    
  417449:	std    
  41744a:	cld    
  41744b:	and    ecx,DWORD PTR ss:[ebp+0x50f1a04b]
  417452:	pop    es
  417453:	fild   DWORD PTR [esi+edx*1+0x2393d092]
  41745a:	xor    ebx,DWORD PTR [eax-0x64]
  41745d:	sbb    al,ch
  41745f:	cs scas eax,DWORD PTR es:[edi]
  417461:	and    esi,DWORD PTR [ebx]
  417463:	cmp    ch,bl
  417465:	adc    esp,DWORD PTR [edx+0x1d]
  417468:	jno    0x417489
  41746a:	daa    
  41746b:	ss pushf 
  41746d:	cld    
  41746e:	sti    
  41746f:	mov    al,BYTE PTR [eax+0x324b52ab]
  417475:	mov    edi,0xb98723dd
  41747a:	scas   al,BYTE PTR es:[edi]
  41747b:	es je  0x41746d
  41747e:	mov    ds:0x8fa6e198,eax
  417483:	push   edx
  417484:	sub    dl,dl
  417486:	add    BYTE PTR [eax+0x397580ac],cl
  41748c:	lds    edx,FWORD PTR [eax+0x4ee43b01]
  417492:	adc    eax,0xbac92096
  417497:	ror    DWORD PTR [ebp+ecx*8+0x3c],1
  41749b:	or     cl,BYTE PTR [ebx+0x4d413728]
  4174a1:	out    dx,eax
  4174a2:	shl    BYTE PTR [edi],cl
  4174a4:	xor    ch,BYTE PTR [eax+0x2722e96a]
  4174aa:	pop    esp
  4174ab:	call   0xd88c:0x11bc39f3
  4174b2:	jo     0x41751d
  4174b4:	mov    eax,0x6ae46d4e
  4174b9:	(bad)  
  4174ba:	lock inc ebp
  4174bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174bd:	call   0x35d6:0xeb85a18
  4174c4:	int    0x9f
  4174c6:	test   DWORD PTR [eax-0x80],0xffa96c3e
  4174cd:	sub    eax,0xcf782a93
  4174d2:	xchg   dl,bh
  4174d4:	dec    ebx
  4174d5:	mov    edi,0xf48b82cb
  4174da:	dec    ebp
  4174db:	dec    esp
  4174dc:	jo     0x4174dc
  4174de:	jno    0x4174ab
  4174e0:	jge    0x4174ab
  4174e2:	xchg   ebx,eax
  4174e3:	xchg   DWORD PTR [eax-0x4d7cbac0],ebp
  4174e9:	ret    0x9ef4
  4174ec:	daa    
  4174ed:	sub    bh,BYTE PTR [ecx+0x55]
  4174f0:	mov    ebx,0xbd855ed3
  4174f5:	in     eax,0x2b
  4174f7:	aas    
  4174f8:	(bad)  
  4174f9:	les    ebp,FWORD PTR [edx-0x10967811]
  4174ff:	sbb    ecx,DWORD PTR [edx+ebx*1+0x6b6cf1a]
  417506:	push   0xbad8ef0
  41750b:	dec    esp
  41750c:	push   edi
  41750d:	xor    eax,0xbd755ac5
  417512:	push   edx
  417513:	in     al,dx
  417514:	enter  0xd819,0x23
  417518:	mov    ebp,0x79c04c1e
  41751d:	mov    cs,WORD PTR [edx+edx*1]
  417520:	push   ss
  417521:	sti    
  417522:	outs   dx,BYTE PTR ds:[esi]
  417523:	mov    eax,ds:0x727a9cbf
  417528:	rol    BYTE PTR [eax],1
  41752a:	sbb    esi,edi
  41752c:	fmul   QWORD PTR [esi-0x1e0e95d6]
  417532:	lea    edx,[eax+0x6b4637a6]
  417538:	jge    0x417546
  41753a:	add    eax,0xfabf86ed
  41753f:	stos   DWORD PTR es:[edi],eax
  417540:	mov    ds:0x5aff427a,al
  417545:	in     al,0x8a
  417547:	mov    eax,ds:0xdafb7018
  41754c:	xor    BYTE PTR [edx-0x6b],dh
  41754f:	and    ebp,ebp
  417551:	xlat   BYTE PTR ds:[ebx]
  417552:	ins    BYTE PTR es:[edi],dx
  417553:	jo     0x417522
  417555:	pusha  
  417556:	pop    es
  417557:	push   ss
  417558:	outs   dx,DWORD PTR ds:[esi]
  417559:	mov    edi,0xe39a907
  41755e:	(bad)  
  41755f:	enter  0x66bc,0xb5
  417563:	repnz mov cl,0xea
  417566:	and    al,0x44
  417568:	add    DWORD PTR [ecx],esi
  41756a:	or     edi,edx
  41756c:	add    al,0x69
  41756e:	inc    ebp
  41756f:	retf   
  417570:	cmc    
  417571:	(bad)  
  417572:	lods   al,BYTE PTR ds:[esi]
  417573:	xor    eax,0x4faa3284
  417578:	mov    esi,0x2c7a892d
  41757d:	adc    DWORD PTR [ebx-0x77348563],ebx
  417583:	jns    0x417532
  417585:	ss in  eax,0xfa
  417588:	ja     0x417589
  41758a:	xlat   BYTE PTR ds:[ebx]
  41758b:	fidiv  DWORD PTR ds:0x540fec96
  417591:	shr    ebp,cl
  417593:	stos   BYTE PTR es:[edi],al
  417594:	adc    ah,cl
  417596:	cmp    BYTE PTR [edx],bh
  417598:	pop    ds
  417599:	xor    DWORD PTR [edx],esp
  41759b:	outs   dx,DWORD PTR ds:[esi]
  41759c:	jl     0x4175c8
  41759e:	jecxz  0x41758b
  4175a0:	data16 (bad) 
  4175a2:	aaa    
  4175a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175a4:	imul   BYTE PTR [ecx+eax*1-0x44]
  4175a8:	scas   al,BYTE PTR es:[edi]
  4175a9:	push   ecx
  4175aa:	dec    eax
  4175ab:	add    al,0x3b
  4175ad:	ss icebp 
  4175af:	sbb    al,0xd6
  4175b1:	and    edx,ebx
  4175b3:	imul   ebp,DWORD PTR [edx],0x23f6035
  4175b9:	mov    bh,0x82
  4175bb:	dec    edi
  4175bc:	sbb    DWORD PTR [ecx+0x4e],esp
  4175bf:	test   eax,0x917eb632
  4175c4:	dec    ebx
  4175c5:	(bad)  
  4175c6:	mov    edi,0x459a9f62
  4175cb:	pop    edi
  4175cc:	jle    0x4175dc
  4175ce:	push   edi
  4175cf:	or     ebp,edi
  4175d1:	and    DWORD PTR [eax],esi
  4175d3:	jbe    0x4175ba
  4175d5:	push   esp
  4175d6:	or     dh,dh
  4175d8:	sbb    edi,ebx
  4175da:	pushf  
  4175db:	int3   
  4175dc:	cwde   
  4175dd:	or     BYTE PTR [ecx],dh
  4175df:	f2xm1  
  4175e1:	jns    0x417582
  4175e3:	mov    edi,0x923e3bba
  4175e8:	add    al,0x8e
  4175ea:	adc    dh,cl
  4175ec:	shl    DWORD PTR [edx+0x550d1082],1
  4175f2:	int3   
  4175f3:	popf   
  4175f4:	pop    ebp
  4175f5:	aaa    
  4175f6:	mov    bl,dh
  4175f8:	xchg   ebp,eax
  4175f9:	jo     0x4175e3
  4175fb:	mov    dl,BYTE PTR [eax-0x6dec2f95]
  417601:	push   0xe5139e0c
  417606:	ss (bad) 
  417608:	ss inc esi
  41760a:	not    DWORD PTR [esi+0x11]
  41760d:	sbb    al,0x55
  41760f:	xlat   BYTE PTR ds:[ebx]
  417610:	mov    eax,gs:0x9b7ad21b
  417616:	xchg   ebx,eax
  417617:	or     DWORD PTR [esp+edx*4],edx
  41761a:	adc    eax,0x71a06012
  41761f:	inc    ebx
  417620:	push   eax
  417621:	fnstcw WORD PTR [ecx+eiz*4-0x9]
  417625:	outs   dx,BYTE PTR ds:[esi]
  417626:	cmp    eax,0xace3221e
  41762b:	cmp    DWORD PTR [edi-0x45],esi
  41762e:	shl    BYTE PTR [esi+0x5fa9a910],cl
  417634:	pop    ecx
  417635:	out    dx,eax
  417636:	pop    edx
  417637:	and    ebp,ebp
  417639:	ins    BYTE PTR es:[edi],dx
  41763a:	dec    esi
  41763b:	pop    ebp
  41763c:	inc    ecx
  41763d:	imul   ecx,DWORD PTR [edx-0x48],0x2ecab4bb
  417644:	jns    0x417624
  417646:	mov    ebx,ss
  417648:	clc    
  417649:	call   0x9afb:0x3f49
  41764f:	jae    0x4176bd
  417651:	fnstenv [ebx+0xb7269ce]
  417657:	sbb    DWORD PTR [edx+0x68],ebp
  41765a:	call   0xc316f1bf
  41765f:	cmp    ch,BYTE PTR [ecx]
  417661:	push   es
  417662:	push   edx
  417663:	push   eax
  417664:	push   ss
  417665:	not    DWORD PTR [ebx]
  417667:	repz mov dh,0xb3
  41766a:	inc    edi
  41766b:	sub    edi,DWORD PTR [ecx]
  41766d:	xlat   BYTE PTR ds:[ebx]
  41766e:	sbb    dh,dl
  417670:	stos   DWORD PTR es:[edi],eax
  417671:	lahf   
  417672:	inc    esp
  417673:	int3   
  417674:	cmp    ebx,DWORD PTR [edx-0x763b0e32]
  41767a:	xchg   ebx,ebx
  41767c:	mov    ecx,0x3bc8547
  417681:	dec    edi
  417682:	stos   DWORD PTR es:[edi],eax
  417683:	mov    ds:0x971457c5,eax
  417688:	jl     0x41764a
  41768a:	les    ebx,FWORD PTR [ebp+0x15]
  41768d:	ins    BYTE PTR es:[edi],dx
  41768e:	push   edi
  41768f:	add    dl,BYTE PTR [ecx+edx*1]
  417692:	div    al
  417694:	mov    bl,0xe6
  417696:	lds    ebx,FWORD PTR [edx-0x73]
  417699:	rol    edx,1
  41769b:	sub    eax,0x1391a918
  4176a0:	lahf   
  4176a1:	inc    ebp
  4176a2:	sub    edi,DWORD PTR [esi]
  4176a4:	daa    
  4176a5:	sub    al,0x84
  4176a7:	daa    
  4176a8:	adc    DWORD PTR [esi-0x52],edi
  4176ab:	xchg   ebp,eax
  4176ac:	ins    DWORD PTR es:[edi],dx
  4176ad:	adc    eax,0x867c833d
  4176b2:	adc    dh,ah
  4176b4:	xchg   ebp,eax
  4176b5:	inc    eax
  4176b6:	push   es
  4176b7:	dec    eax
  4176b8:	cmp    dl,al
  4176ba:	mov    esi,edx
  4176bc:	xchg   ebx,eax
  4176bd:	out    0x23,eax
  4176bf:	xchg   ebp,eax
  4176c0:	adc    BYTE PTR [ebp-0x7331f0e6],dl
  4176c6:	clc    
  4176c7:	xor    ah,BYTE PTR [ebx+0x783fc956]
  4176cd:	popa   
  4176ce:	es dec eax
  4176d0:	aad    0x99
  4176d2:	cld    
  4176d3:	adc    edi,ecx
  4176d5:	je     0x4176c7
  4176d7:	imul   BYTE PTR [esp+edi*1]
  4176da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176db:	imul   ecx,DWORD PTR [eax+0x2b285e13],0x22
  4176e2:	out    0xe,eax
  4176e4:	aad    0x29
  4176e6:	fadd   st,st(7)
  4176e8:	adc    DWORD PTR ds:0x300379ab,edx
  4176ee:	adc    DWORD PTR [edx-0x11],0x634bc936
  4176f5:	aaa    
  4176f6:	jge    0x417681
  4176f8:	lods   eax,DWORD PTR ds:[esi]
  4176f9:	into   
  4176fa:	sahf   
  4176fb:	push   cs
  4176fc:	mov    dh,0x62
  4176fe:	outs   dx,DWORD PTR ds:[esi]
  4176ff:	pop    ss
  417700:	mov    ds:0xdad08ee7,al
  417705:	mov    ds,WORD PTR [ebx+0x5862c776]
  41770b:	xchg   esi,eax
  41770c:	or     dl,cl
  41770e:	clc    
  41770f:	pop    edx
  417710:	and    eax,0x1d8c0677
  417715:	push   0xb745a10c
  41771a:	imul   esp,DWORD PTR [ebx],0xb1863f80
  417720:	(bad)  
  417721:	ret    
  417722:	add    eax,0x39325f5c
  417727:	stc    
  417728:	sub    ebx,DWORD PTR [ecx]
  41772a:	fisttp DWORD PTR [ebx-0x717e6f19]
  417730:	out    dx,eax
  417731:	ret    0xee66
  417734:	sbb    DWORD PTR [esi],esi
  417736:	jb     0x4176f1
  417738:	loop   0x41779b
  41773a:	leave  
  41773b:	jl     0x4176f6
  41773d:	dec    esp
  41773e:	scas   eax,DWORD PTR es:[edi]
  41773f:	sbb    ah,ch
  417741:	dec    edi
  417742:	mov    ch,0xb8
  417744:	and    al,0x2b
  417746:	fidivr DWORD PTR [ecx]
  417748:	stos   DWORD PTR es:[edi],eax
  417749:	add    DWORD PTR [eax+edx*8],ebp
  41774c:	or     al,0xbb
  41774e:	fstp   DWORD PTR [esp+eiz*8-0x72b255d9]
  417755:	xchg   edi,eax
  417756:	pop    ds
  417757:	pop    edi
  417758:	fnsave [ebx-0x3c]
  41775b:	addr16 pop esi
  41775d:	xor    ebp,edi
  41775f:	push   es
  417760:	xor    BYTE PTR [eax],bh
  417762:	push   ebp
  417763:	xor    edi,DWORD PTR [ebx-0x45]
  417766:	pushf  
  417767:	mov    ch,0xcb
  417769:	es inc esp
  41776b:	aas    
  41776c:	adc    ch,0x11
  41776f:	pop    esp
  417770:	sbb    esi,DWORD PTR [esi]
  417772:	add    eax,0xc145a820
  417777:	dec    edi
  417778:	xor    al,BYTE PTR [ecx-0x383b7eab]
  41777e:	or     BYTE PTR [edx],dh
  417780:	scas   al,BYTE PTR es:[edi]
  417781:	or     al,0x20
  417783:	or     DWORD PTR [edx-0x1b4dc2fd],ecx
  417789:	xchg   ebx,eax
  41778a:	test   al,0x2
  41778c:	dec    edi
  41778d:	loop   0x41780e
  41778f:	xchg   ebx,eax
  417790:	in     al,dx
  417791:	in     al,dx
  417792:	jg     0x417752
  417794:	dec    ebp
  417795:	sub    ebx,DWORD PTR gs:[eax+0x74]
  417799:	arpl   WORD PTR [ebx-0x17d90858],si
  41779f:	mov    al,ds:0x67a2daef
  4177a4:	in     al,dx
  4177a5:	mov    dh,0xf1
  4177a7:	dec    edx
  4177a8:	xchg   esp,eax
  4177a9:	ins    DWORD PTR es:[edi],dx
  4177aa:	adc    edi,DWORD PTR [ebp-0x45]
  4177ad:	mov    bl,0x56
  4177af:	stc    
  4177b0:	mov    edi,0x94ca5062
  4177b5:	test   BYTE PTR [esi+0x43],bh
  4177b8:	aad    0x5
  4177ba:	scas   eax,DWORD PTR es:[edi]
  4177bb:	cs dec edi
  4177bd:	mov    al,dl
  4177bf:	mov    ds:0x4bef6ff1,al
  4177c4:	mov    al,ds:0x6a1489fe
  4177c9:	mov    eax,0x5c3d3196
  4177ce:	scas   al,BYTE PTR es:[edi]
  4177cf:	jmp    0x417848
  4177d1:	fst    DWORD PTR [ebx]
  4177d3:	leave  
  4177d4:	jae    0x4177a6
  4177d6:	test   BYTE PTR [ecx],dh
  4177d8:	into   
  4177d9:	adc    DWORD PTR [edi],ecx
  4177db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177dc:	push   edi
  4177dd:	scas   eax,DWORD PTR es:[edi]
  4177de:	xor    DWORD PTR [edx-0x23fabe21],esi
  4177e4:	stos   DWORD PTR es:[edi],eax
  4177e5:	ja     0x41783f
  4177e7:	(bad)  
  4177e8:	dec    edx
  4177e9:	push   ebx
  4177ea:	aam    0x1f
  4177ec:	repz jmp 0x4791:0x945c782d
  4177f4:	cli    
  4177f5:	or     ebx,ebx
  4177f7:	sbb    cl,BYTE PTR [edx+0x5185006d]
  4177fd:	fnsave ds:0x1319114
  417803:	arpl   WORD PTR [edi-0x6e],sp
  417806:	sar    DWORD PTR [esi+0x4cba0f10],1
  41780c:	ret    0xd7ba
  41780f:	popf   
  417810:	inc    ebx
  417811:	dec    esp
  417812:	ror    DWORD PTR [ebp+ecx*8-0x10950a6d],0xcb
  41781a:	cs aaa 
  41781c:	or     BYTE PTR [eax],0x14
  41781f:	in     al,0x29
  417821:	cmp    BYTE PTR [esi+0x55943e80],dl
  417827:	and    al,0xb8
  417829:	rcl    BYTE PTR [esi-0x27779868],0x62
  417830:	sbb    al,0xf3
  417832:	xlat   BYTE PTR ds:[ebx]
  417833:	xchg   ebp,eax
  417834:	xchg   edx,eax
  417835:	stos   DWORD PTR es:[edi],eax
  417836:	mov    DWORD PTR [edx+ecx*1-0x7ca2b012],esi
  41783d:	(bad)  
  41783e:	add    eax,0x56498095
  417843:	repnz sbb edi,DWORD PTR [eax+0x3364923e]
  41784a:	jne    0x417861
  41784c:	push   edi
  41784d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41784e:	lds    eax,FWORD PTR [ebx]
  417850:	mov    esi,0xfd7d5cb
  417855:	jae    0x4178c4
  417857:	mov    DWORD PTR [edx-0x51],eax
  41785a:	xchg   esi,eax
  41785b:	or     dl,BYTE PTR [edi-0x6e467205]
  417861:	shl    ebp,cl
  417863:	mov    al,0x95
  417865:	js     0x41780b
  417867:	imul   eax,esi,0x4303bf2a
  41786d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41786e:	jns    0x41788a
  417870:	imul   DWORD PTR [esi+0x7f8fbc2f]
  417876:	push   0x6a
  417878:	outs   dx,DWORD PTR ds:[esi]
  417879:	(bad)  
  41787a:	imul   esi,DWORD PTR [ebx-0x18b98b66],0xffffffe1
  417881:	or     BYTE PTR [ebx+0x721632f2],ch
  417887:	sub    BYTE PTR [ecx-0x5a6c9c5b],dl
  41788d:	ins    BYTE PTR es:[edi],dx
  41788e:	imul   esi
  417890:	popa   
  417891:	ins    BYTE PTR es:[edi],dx
  417892:	mov    DWORD PTR [ebp*1-0x3745ba8a],edi
  417899:	fistp  QWORD PTR [esi-0x1f]
  41789c:	sub    eax,DWORD PTR [edx+ebp*4-0x3aa5f3e1]
  4178a3:	repz sti 
  4178a5:	push   ecx
  4178a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178a7:	mov    ecx,0x621f38c1
  4178ac:	inc    ebp
  4178ad:	std    
  4178ae:	mov    bh,0xa7
  4178b0:	inc    ebx
  4178b1:	mov    ebx,0xdf4089c1
  4178b6:	inc    edx
  4178b7:	jle    0x41790a
  4178b9:	dec    ebp
  4178ba:	int3   
  4178bb:	mov    edx,0x69a9179a
  4178c0:	xchg   ebx,eax
  4178c1:	icebp  
  4178c2:	push   ss
  4178c3:	lds    eax,FWORD PTR [esi]
  4178c5:	cmp    ebp,eax
  4178c7:	addr16 jno 0x417896
  4178ca:	and    BYTE PTR [ebx-0x1d6832c9],ah
  4178d0:	test   BYTE PTR [edi-0x6d4f2cd1],cl
  4178d6:	or     al,0xd9
  4178d8:	mov    WORD PTR [ecx+0x7379739b],gs
  4178de:	scas   eax,DWORD PTR es:[edi]
  4178df:	(bad)  
  4178e1:	xchg   DWORD PTR [ebp+0x5e],eax
  4178e4:	add    DWORD PTR [ebx+0x6a],esi
  4178e7:	pop    esp
  4178e8:	js     0x41789f
  4178ea:	jae    0x4178e9
  4178ec:	jmp    0x568a:0x4e3d61fa
  4178f3:	hlt    
  4178f4:	mov    eax,ds:0x8d084e4b
  4178f9:	pop    ecx
  4178fa:	mov    esi,0x88a548e
  4178ff:	cmp    BYTE PTR [eax-0x20],ch
  417902:	fidiv  DWORD PTR [edi]
  417904:	icebp  
  417905:	ins    DWORD PTR es:[edi],dx
  417906:	inc    ebx
  417907:	jmp    0x417966
  417909:	stos   BYTE PTR es:[edi],al
  41790a:	int    0x8d
  41790c:	fimul  DWORD PTR [edi+0x3e]
  41790f:	leave  
  417910:	imul   ecx,DWORD PTR [ecx+0x2c],0xffffffd0
  417914:	or     ebp,DWORD PTR [ebx+0xa]
  417917:	fs push ss
  417919:	push   cs
  41791a:	scas   al,BYTE PTR es:[edi]
  41791b:	imul   ebx,esi,0x1f2eb944
  417921:	pop    eax
  417922:	pop    edx
  417923:	cmp    bl,BYTE PTR [eax]
  417925:	or     ch,BYTE PTR [ebp-0x4d755489]
  41792b:	mov    ch,0x24
  41792d:	retf   
  41792e:	sti    
  41792f:	xor    edx,DWORD PTR ds:0x31bb7d38
  417935:	jnp    0x4178e6
  417937:	inc    eax
  417938:	sbb    bh,BYTE PTR [ecx+0xe]
  41793b:	es repz ret 0x7d3f
  417940:	in     eax,dx
  417941:	jbe    0x4179a7
  417943:	push   ebx
  417944:	mov    al,ds:0x25a770e6
  417949:	push   ebx
  41794a:	mov    eax,0xf70e4acd
  41794f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417950:	add    BYTE PTR [eax-0x745c15ea],0xfa
  417957:	push   edi
  417958:	in     eax,0x80
  41795a:	pop    edi
  41795b:	int3   
  41795c:	cmp    al,0xdd
  41795e:	mov    ebx,0x3ad92642
  417963:	xor    al,0x9b
  417966:	pushf  
  417967:	add    DWORD PTR [eax+eiz*1-0x3d597c6a],esi
  41796e:	push   ds
  41796f:	cdq    
  417970:	es jno 0x417965
  417973:	dec    esp
  417974:	out    0xe9,al
  417976:	retf   0x158c
  417979:	jp     0x4179e2
  41797b:	or     dh,BYTE PTR [ebp-0x79]
  41797e:	and    cl,0xdf
  417981:	push   edi
  417982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417983:	pop    ebx
  417984:	ficom  DWORD PTR [eax+0xb90d2b6]
  41798a:	xlat   BYTE PTR ds:[ebx]
  41798b:	mov    ch,0xc0
  41798d:	xchg   ebx,eax
  41798e:	push   esp
  41798f:	and    eax,0xab6078d
  417994:	push   edi
  417995:	xor    esi,DWORD PTR [esi-0x612c91f]
  41799b:	mov    al,0xb3
  41799d:	test   DWORD PTR [ebp+0x5925df38],edx
  4179a3:	sbb    ebp,edx
  4179a5:	jbe    0x4179c9
  4179a7:	jns    0x417982
  4179a9:	int    0xda
  4179ab:	clc    
  4179ac:	xchg   BYTE PTR [eax+eiz*1],bl
  4179af:	sti    
  4179b0:	imul   edi,DWORD PTR [edx],0x7a
  4179b3:	call   0xd32:0x84e12b5e
  4179ba:	mov    bl,0x7a
  4179bc:	fcomp  QWORD PTR [edx-0x37]
  4179bf:	mov    eax,0x38f9be9c
  4179c4:	cmp    al,0x31
  4179c6:	xchg   esi,eax
  4179c7:	repz fidiv WORD PTR [ebx-0x8]
  4179cb:	rol    BYTE PTR [ebx+0x55e8cdca],cl
  4179d1:	sbb    dh,BYTE PTR [edx]
  4179d3:	int    0x8a
  4179d5:	and    ebp,DWORD PTR [edx-0x4a487ef9]
  4179db:	sbb    bl,BYTE PTR [ebp+0xb]
  4179de:	arpl   WORD PTR [edx+0x11b7c2fb],ax
  4179e4:	mov    ds:0x3445672c,al
  4179e9:	push   ebp
  4179ea:	jae    0x41799a
  4179ec:	(bad)
  4179ef:	repz xchg edi,eax
  4179f1:	aad    0x52
  4179f3:	aaa    
  4179f4:	push   edi
  4179f5:	in     eax,dx
  4179f6:	push   0x8d2c0205
  4179fb:	out    0x4c,al
  4179fd:	add    eax,0x9bb72c64
  417a02:	std    
  417a03:	pop    ebx
  417a04:	scas   al,BYTE PTR es:[edi]
  417a05:	repz ja 0x417a54
  417a08:	mov    BYTE PTR [ebx+edx*2+0x203afc3b],ah
  417a0f:	ins    BYTE PTR es:[edi],dx
  417a10:	sbb    ecx,DWORD PTR [ecx+0x42484d24]
  417a16:	jbe    0x417a02
  417a18:	ret    
  417a19:	ret    
  417a1a:	cmp    BYTE PTR [eax-0x87a7620],bh
  417a20:	and    eax,0xab678ca6
  417a25:	jle    0x4179f9
  417a27:	stos   BYTE PTR es:[edi],al
  417a28:	mov    eax,0xd1eccae9
  417a2d:	test   BYTE PTR [esi-0x79],dl
  417a30:	out    0xb3,eax
  417a32:	ret    
  417a33:	add    esp,DWORD PTR [esp+ecx*8]
  417a36:	xchg   edi,eax
  417a37:	sub    esp,DWORD PTR [ebx]
  417a39:	mov    WORD PTR [edx-0x24be6205],?
  417a3f:	cs stos DWORD PTR es:[edi],eax
  417a41:	sub    eax,0x9f32314f
  417a46:	inc    ecx
  417a47:	xchg   edi,eax
  417a48:	add    al,0x8c
  417a4a:	stos   BYTE PTR es:[edi],al
  417a4b:	ins    BYTE PTR es:[edi],dx
  417a4c:	lahf   
  417a4d:	rol    BYTE PTR [ebp-0x74],cl
  417a50:	lahf   
  417a51:	out    dx,eax
  417a52:	ret    
  417a53:	(bad)  
  417a54:	addr16 cs dec esi
  417a57:	mov    ch,0x39
  417a59:	lods   al,BYTE PTR ds:[esi]
  417a5a:	clc    
  417a5b:	jb     0x417abc
  417a5d:	jecxz  0x417a52
  417a5f:	cld    
  417a60:	leave  
  417a61:	fimul  WORD PTR [ebp+0x6ec5618]
  417a67:	test   eax,0x427db35b
  417a6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a6d:	nop
  417a6e:	pop    es
  417a6f:	leave  
  417a70:	adc    BYTE PTR [eax+ebx*4+0x54],0xd2
  417a75:	jge    0x417a1a
  417a77:	call   0x8c9856a3
  417a7c:	sub    al,BYTE PTR [edi+0x10]
  417a7f:	imul   ebp,DWORD PTR [ebx-0x6edd48b7],0x33
  417a86:	idiv   WORD PTR [ebp+0x4b]
  417a8a:	(bad)  
  417a8b:	in     eax,dx
  417a8c:	repnz adc al,0x80
  417a8f:	jbe    0x417a9b
  417a91:	pop    edx
  417a92:	(bad)  
  417a93:	push   0xff0df396
  417a98:	stc    
  417a99:	pusha  
  417a9a:	mov    esp,0xe4205b56
  417a9f:	add    bl,BYTE PTR [ecx]
  417aa1:	popa   
  417aa2:	mov    ah,BYTE PTR [eax]
  417aa4:	jne    0x417a71
  417aa6:	shr    BYTE PTR [ebx],cl
  417aa8:	jae    0x417aec
  417aaa:	jg     0x417a79
  417aac:	dec    ecx
  417aad:	dec    esp
  417aae:	fstp   DWORD PTR [esp+eiz*2]
  417ab1:	and    esp,ebx
  417ab3:	mov    WORD PTR [edx],cs
  417ab5:	adc    BYTE PTR [ebp-0x62],dh
  417ab8:	int    0x5f
  417aba:	jmp    0xfe99af4e
  417abf:	jns    0x417ac4
  417ac1:	(bad)  
  417ac2:	sar    eax,cl
  417ac4:	xchg   esp,eax
  417ac5:	mov    eax,ds:0x7d758687
  417aca:	fwait
  417acb:	xor    BYTE PTR [edi+0x49],cl
  417ace:	test   edi,edi
  417ad0:	push   esi
  417ad1:	fs push 0x5b
  417ad4:	adc    al,0x30
  417ad6:	push   cs
  417ad7:	pushf  
  417ad8:	add    bh,0xf2
  417adb:	xor    cl,ah
  417add:	xlat   BYTE PTR ds:[ebx]
  417ade:	cmp    dh,bl
  417ae0:	fcomp  DWORD PTR [esp+esi*4+0x491e0707]
  417ae7:	sub    BYTE PTR [ecx-0x36],ah
  417aea:	out    0x9d,al
  417aec:	ja     0x417b1b
  417aee:	(bad)  
  417aef:	test   al,0xcf
  417af1:	hlt    
  417af2:	jecxz  0x417b56
  417af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417af5:	pop    ebp
  417af6:	test   al,0xcd
  417af8:	mov    bl,0xc4
  417afa:	fdivr  st,st(5)
  417afc:	inc    DWORD PTR [edi+0x7a287f1]
  417b02:	cmp    bh,al
  417b04:	jns    0x417b35
  417b06:	jge    0x417b1d
  417b08:	rcl    DWORD PTR [edx+0x56a7b4a3],cl
  417b0e:	sub    ah,BYTE PTR [edi+0x1023698e]
  417b14:	pop    ds
  417b15:	xchg   BYTE PTR [edi+0x4d],cl
  417b18:	dec    edx
  417b19:	xor    cl,ah
  417b1b:	adc    BYTE PTR [edx+0x67],al
  417b1e:	dec    edx
  417b1f:	xor    ah,dl
  417b21:	arpl   WORD PTR ds:0x8d32a413,si
  417b27:	ja     0x417abf
  417b29:	mov    esp,0x64880771
  417b2e:	mov    bh,BYTE PTR [edi]
  417b30:	fcom   QWORD PTR [edi-0x6a]
  417b33:	lfs    eax,FWORD PTR [esi]
  417b36:	dec    edi
  417b37:	push   edi
  417b38:	cmc    
  417b39:	repz jecxz 0x417b3e
  417b3c:	lea    edx,[esi+ebp*4-0x8]
  417b40:	mov    cl,0x73
  417b42:	or     bl,dl
  417b44:	outs   dx,BYTE PTR ds:[esi]
  417b45:	push   ebp
  417b46:	nop
  417b47:	add    ecx,DWORD PTR [ebx+0x1364f542]
  417b4d:	aaa    
  417b4e:	mov    edx,DWORD PTR ds:0x34c06460
  417b54:	(bad)
  417b57:	jg     0x417b1b
  417b59:	outs   dx,BYTE PTR ds:[esi]
  417b5a:	add    BYTE PTR ds:0xe68c2aa3,al
  417b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b61:	ds dec esp
  417b63:	xor    DWORD PTR [edx+ebx*8-0x7f],eax
  417b67:	shl    DWORD PTR [ebx+ebp*1],1
  417b6a:	xchg   esi,eax
  417b6b:	and    al,0x37
  417b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b6e:	add    DWORD PTR [ebx],edx
  417b70:	mov    esp,DWORD PTR [ebp+0x4a]
  417b73:	mov    ecx,0xd7d996ef
  417b78:	pop    esp
  417b79:	push   ebp
  417b7a:	stos   DWORD PTR es:[edi],eax
  417b7b:	enter  0x1dec,0xa7
  417b7f:	push   0xffffff80
  417b81:	stos   DWORD PTR es:[edi],eax
  417b82:	cmp    al,0x81
  417b84:	fmul   st,st(6)
  417b86:	add    BYTE PTR [esp+ebx*8-0x7e],ch
  417b8a:	neg    BYTE PTR [ebp-0x18fd56a7]
  417b90:	mov    eax,ds:0xa1b3b8c1
  417b95:	cmp    DWORD PTR [ebx+0x76],0x56
  417b99:	adc    al,0x48
  417b9b:	xor    dh,al
  417b9d:	sahf   
  417b9e:	cs in  eax,0x1a
  417ba1:	ja     0x417bfa
  417ba3:	and    DWORD PTR [ecx+eax*4+0x7d],ebp
  417ba7:	test   al,0xc6
  417ba9:	retf   0x6333
  417bac:	addr16 loop 0x417bf6
  417baf:	popf   
  417bb0:	sar    eax,cl
  417bb2:	xchg   ebp,eax
  417bb3:	scas   eax,DWORD PTR es:[edi]
  417bb4:	push   esp
  417bb5:	fs hlt 
  417bb7:	pop    DWORD PTR [edi+0xc]
  417bba:	test   al,0x25
  417bbc:	add    BYTE PTR [edx],bl
  417bbe:	pop    ecx
  417bbf:	daa    
  417bc0:	pop    edi
  417bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bc2:	pop    ebp
  417bc3:	or     edx,edi
  417bc5:	mov    bl,0x86
  417bc7:	push   cs
  417bc8:	cs dec eax
  417bca:	sub    DWORD PTR [esi-0x24],edx
  417bcd:	or     DWORD PTR [esp+eax*8],ebp
  417bd0:	inc    eax
  417bd1:	ins    BYTE PTR es:[edi],dx
  417bd2:	push   esp
  417bd3:	(bad)
  417bd7:	pop    ebx
  417bd8:	sub    BYTE PTR [esi],bl
  417bda:	push   edx
  417bdb:	sbb    BYTE PTR [eax+0x71e9e0fb],al
  417be1:	jg     0x417b9f
  417be3:	xchg   esi,eax
  417be4:	(bad)  
  417be5:	and    al,0x7b
  417be7:	pushf  
  417be8:	mov    ebx,0x28974305
  417bed:	(bad)  
  417bee:	pop    ds
  417bef:	inc    edi
  417bf0:	mov    cl,ah
  417bf2:	(bad)  
  417bf3:	sub    al,bh
  417bf5:	mov    BYTE PTR [edx],bh
  417bf7:	add    BYTE PTR [ebx+0x5192d7b4],bh
  417bfd:	loopne 0x417be1
  417bff:	ins    BYTE PTR es:[edi],dx
  417c00:	mov    esi,0xba010e06
  417c05:	inc    ebx
  417c06:	pop    ebp
  417c07:	into   
  417c08:	jns    0x417bca
  417c0a:	aas    
  417c0b:	pop    esp
  417c0c:	dec    esi
  417c0d:	pop    ds
  417c0e:	pop    es
  417c0f:	stos   BYTE PTR es:[edi],al
  417c10:	jb     0x417c05
  417c12:	jp     0x417bc3
  417c14:	dec    esi
  417c15:	xchg   ecx,edi
  417c17:	popf   
  417c18:	pop    ebp
  417c19:	push   ebx
  417c1a:	adc    bl,BYTE PTR [ecx+0x4a4b6295]
  417c20:	sti    
  417c21:	(bad)  
  417c22:	xchg   esp,eax
  417c23:	push   ebx
  417c24:	rcr    DWORD PTR [ebp+0x2b05e2f7],0xb7
  417c2b:	leave  
  417c2c:	or     eax,0x3ecd099a
  417c31:	push   ss
  417c32:	imul   ebx,DWORD PTR [ebx],0xffffffab
  417c35:	or     al,0x53
  417c37:	std    
  417c38:	test   BYTE PTR [ecx],dl
  417c3a:	aas    
  417c3b:	mov    eax,0xc50adbac
  417c40:	fs adc eax,0x4c67c4c
  417c46:	in     al,0x2d
  417c48:	aad    0xd1
  417c4a:	shl    BYTE PTR ss:[ebp-0x42],cl
  417c4e:	test   al,0xff
  417c50:	popa   
  417c51:	cmp    BYTE PTR [edx+eax*1+0x6fd34b1b],ch
  417c58:	mov    cs,eax
  417c5a:	and    DWORD PTR [ecx-0x67],ecx
  417c5d:	sbb    BYTE PTR [ebx],bl
  417c5f:	fcom   DWORD PTR [esp+ebp*4-0x559805b0]
  417c66:	sub    eax,0xa5be7229
  417c6b:	adc    dl,dl
  417c6d:	outs   dx,BYTE PTR ds:[esi]
  417c6e:	out    dx,al
  417c6f:	retf   
  417c70:	aam    0x93
  417c72:	sub    eax,0x9c728f97
  417c77:	lods   al,BYTE PTR ds:[esi]
  417c78:	cmp    ah,dh
  417c7a:	and    ebx,DWORD PTR [ecx+eiz*2-0x5218931f]
  417c81:	das    
  417c82:	outs   dx,BYTE PTR ds:[esi]
  417c83:	sti    
  417c84:	(bad)
  417c87:	call   0x8c17a851
  417c8c:	repnz adc eax,0xa24aab6a
  417c92:	outs   dx,DWORD PTR ds:[esi]
  417c93:	test   eax,0x89b6cc47
  417c98:	jns    0x417ced
  417c9a:	mov    edi,0x6cf961fb
  417c9f:	and    dl,BYTE PTR [edx+ebp*4+0x0]
  417ca3:	lock push ebp
  417ca5:	out    dx,al
  417ca6:	push   ecx
  417ca7:	out    0xf5,eax
  417ca9:	pusha  
  417caa:	call   FWORD PTR [esi+0x2f6545b6]
  417cb0:	nop
  417cb1:	push   esp
  417cb2:	and    al,0x41
  417cb4:	out    dx,al
  417cb5:	lods   al,BYTE PTR ds:[esi]
  417cb6:	or     DWORD PTR [esi+0x67a4bf81],0x3bbd3d6f
  417cc0:	aad    0x7e
  417cc2:	mov    dl,0x74
  417cc4:	int    0xd1
  417cc6:	mov    ebx,DWORD PTR [esi]
  417cc8:	popa   
  417cc9:	cmp    BYTE PTR [edx],bh
  417ccb:	xchg   edx,eax
  417ccc:	cmp    BYTE PTR [esi-0x6add2fe0],bl
  417cd2:	out    dx,al
  417cd3:	jecxz  0x417d41
  417cd5:	test   BYTE PTR [ebx-0x5266a2a3],bl
  417cdb:	enter  0x796b,0xdf
  417cdf:	pop    es
  417ce0:	ret    
  417ce1:	in     al,0xc2
  417ce3:	mov    esp,0x9224fe87
  417ce8:	dec    edi
  417ce9:	xor    eax,0xf99c9ffd
  417cee:	fistp  WORD PTR [eax]
  417cf0:	iret   
  417cf1:	leave  
  417cf2:	idiv   bl
  417cf4:	retf   0x39de
  417cf7:	popa   
  417cf8:	and    edx,DWORD PTR [ebx]
  417cfa:	test   edi,ecx
  417cfc:	gs inc edx
  417cfe:	iret   
  417cff:	xor    bh,BYTE PTR [edi]
  417d01:	fiadd  DWORD PTR [edi-0x7f]
  417d04:	cmp    al,0xd6
  417d06:	idiv   DWORD PTR [edi+0x6f456ca2]
  417d0c:	push   eax
  417d0d:	adc    BYTE PTR [edx],bl
  417d0f:	and    al,BYTE PTR [ebx-0x4a]
  417d12:	mov    ah,0x65
  417d14:	xchg   edx,eax
  417d15:	push   0xa9dce69f
  417d1a:	mov    BYTE PTR [ecx],0x7e
  417d1d:	imul   eax,DWORD PTR [ebx-0x3d9583cf],0x69
  417d24:	(bad)  
  417d25:	in     eax,dx
  417d26:	mov    esp,0x95a5df2c
  417d2b:	push   ebp
  417d2c:	sub    al,0x52
  417d2e:	jg     0x417d80
  417d30:	xlat   BYTE PTR ds:[ebx]
  417d31:	adc    DWORD PTR [ecx],ebp
  417d33:	or     BYTE PTR [eax],dh
  417d35:	inc    edi
  417d36:	imul   eax,DWORD PTR [ebp-0x91fd7fa],0x12
  417d3d:	sub    BYTE PTR [edx],dl
  417d3f:	imul   edx,eax,0x3
  417d42:	rcl    DWORD PTR [edx-0x4d5420c4],0xed
  417d49:	das    
  417d4a:	ror    DWORD PTR [eax*1-0x4cbd0659],cl
  417d51:	jecxz  0x417cf1
  417d53:	inc    edx
  417d54:	jmp    0xc7404008
  417d59:	mov    dl,0x4a
  417d5b:	mul    BYTE PTR [eax+0x61]
  417d5e:	cmp    eax,edx
  417d60:	addr16 leave 
  417d62:	push   ebx
  417d63:	sub    al,0x22
  417d65:	jmp    0xe55ad2a4
  417d6a:	sti    
  417d6b:	pop    ebx
  417d6c:	not    DWORD PTR [edx+edi*8-0x6a899a6c]
  417d73:	jmp    0x417da0
  417d75:	push   edi
  417d76:	aam    0xfa
  417d78:	mov    ecx,0x53012cec
  417d7d:	mov    eax,0x1c2a31c0
  417d82:	xlat   BYTE PTR ds:[ebx]
  417d83:	cmp    eax,0xcdcff792
  417d88:	push   esp
  417d89:	fwait
  417d8a:	shl    al,1
  417d8c:	ins    BYTE PTR es:[edi],dx
  417d8d:	dec    edx
  417d8e:	jg     0x417d62
  417d90:	ror    ah,cl
  417d92:	aad    0x49
  417d94:	nop
  417d95:	rol    DWORD PTR [edi+ecx*4],cl
  417d98:	inc    ebp
  417d99:	xchg   DWORD PTR [esi],edi
  417d9b:	cmp    edi,DWORD PTR [ebp+0x1b]
  417d9e:	inc    edi
  417d9f:	jnp    0x417dc5
  417da1:	fild   DWORD PTR [edx-0x19f71f20]
  417da7:	push   ebx
  417da8:	loop   0x417e23
  417daa:	jae    0x417e05
  417dac:	inc    esi
  417dad:	popa   
  417dae:	mov    ds:0x1c6b3b12,al
  417db3:	retf   0x8ef9
  417db6:	addr16 int 0x6
  417db9:	xor    eax,0x5c33cf07
  417dbe:	mov    ds:0x3b554356,eax
  417dc3:	adc    DWORD PTR [ebx-0x69],0xfffffff2
  417dc7:	sub    BYTE PTR [eax+0xe2c2206],cl
  417dcd:	cmp    al,0xf7
  417dcf:	xor    al,0x3b
  417dd1:	cmp    DWORD PTR [ecx+0x625c2881],0xb2f0642d
  417ddb:	cs push cs
  417ddd:	shl    BYTE PTR [eax+0x3bde85a7],cl
  417de3:	jmp    0x417da2
  417de5:	fsub   st,st(4)
  417de7:	in     eax,dx
  417de8:	sbb    DWORD PTR [ebx],ecx
  417dea:	mov    edi,0x8c13be39
  417def:	sti    
  417df0:	lods   al,BYTE PTR ds:[esi]
  417df1:	nop
  417df2:	sbb    bh,dh
  417df4:	xchg   edx,eax
  417df5:	int3   
  417df6:	jbe    0x417e51
  417df8:	lods   al,BYTE PTR ds:[esi]
  417df9:	idiv   BYTE PTR [esi+eax*1]
  417dfc:	and    eax,0x72137749
  417e01:	xchg   ecx,eax
  417e02:	jmp    0xfcb709b4
  417e07:	call   esi
  417e09:	mov    DWORD PTR [ebp-0x3c],eax
  417e0c:	cmp    DWORD PTR [ebp-0x3c],0x57
  417e10:	jne    0x417e1e
  417e12:	mov    edx,DWORD PTR [ebp-0x24]
  417e15:	push   edx
  417e16:	call   0x401000
  417e1b:	add    esp,0x4
  417e1e:	xor    eax,eax
  417e20:	pop    esi
  417e21:	mov    esp,ebp
  417e23:	pop    ebp
  417e24:	ret    
  417e25:	push   ebp
  417e26:	mov    ebp,esp
  417e28:	sub    esp,0x124
  417e2e:	xor    eax,eax
  417e30:	mov    esp,ebp
  417e32:	pop    ebp
  417e33:	ret    
  417e34:	push   ebp
  417e35:	mov    ebp,esp
  417e37:	sub    esp,0x2c
  417e3a:	push   ebx
  417e3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  417e42:	mov    DWORD PTR [ebp-0xc],0x0
  417e49:	mov    DWORD PTR [ebp-0x20],0x1
  417e50:	mov    DWORD PTR [ebp-0x10],0x0
  417e57:	mov    eax,DWORD PTR [ebp+0xc]
  417e5a:	mov    DWORD PTR [ebp-0x1c],eax
  417e5d:	mov    DWORD PTR [ebp-0x18],0x0
  417e64:	mov    DWORD PTR [ebp-0x8],0x0
  417e6b:	mov    DWORD PTR [ebp-0x24],0x0
  417e72:	mov    ecx,DWORD PTR [ebp-0x4]
  417e75:	sub    ecx,0x1
  417e78:	mov    DWORD PTR [ebp-0x4],ecx
  417e7b:	mov    edx,DWORD PTR [ebp+0x8]
  417e7e:	mov    DWORD PTR [ebp-0x10],edx
  417e81:	mov    DWORD PTR [ebp-0x28],0x1
  417e88:	mov    eax,DWORD PTR [ebp-0x4]
  417e8b:	add    eax,0x2
  417e8e:	mov    DWORD PTR [ebp-0x4],eax
  417e91:	mov    ecx,DWORD PTR [ebp-0x1c]
  417e94:	add    ecx,DWORD PTR [ebp-0x4]
  417e97:	mov    dl,BYTE PTR [ecx+0x1]
  417e9a:	mov    BYTE PTR [ebp-0x11],dl
  417e9d:	mov    eax,DWORD PTR [ebp-0x4]
  417ea0:	add    eax,0x1
  417ea3:	mov    DWORD PTR [ebp-0x4],eax
  417ea6:	mov    cl,BYTE PTR [ebp-0x11]
  417ea9:	mov    BYTE PTR [ebp-0x29],cl
  417eac:	push   edx
  417ead:	pop    ebx
  417eae:	mov    ecx,ebx
  417eb0:	mov    edx,DWORD PTR [ebp-0x10]
  417eb3:	add    edx,DWORD PTR [ebp-0x4]
  417eb6:	mov    al,BYTE PTR [ebp-0x29]
  417eb9:	mov    BYTE PTR [edx],al
  417ebb:	mov    ebx,esi
  417ebd:	mov    ecx,DWORD PTR [ebp+0x14]
  417ec0:	add    ecx,DWORD PTR [ebp-0x8]
  417ec3:	movzx  edx,BYTE PTR [ecx]
  417ec6:	mov    DWORD PTR [ebp-0xc],edx
  417ec9:	mov    eax,DWORD PTR [ebp-0x8]
  417ecc:	mov    ecx,DWORD PTR [ebp-0x28]
  417ecf:	add    eax,ecx
  417ed1:	mov    DWORD PTR [ebp-0x8],eax
  417ed4:	mov    eax,DWORD PTR [ebp-0x8]
  417ed7:	shr    eax,0x3
  417eda:	mov    ecx,0x1
  417edf:	sub    ecx,eax
  417ee1:	mov    DWORD PTR [ebp-0x20],ecx
  417ee4:	shr    eax,cl
  417ee6:	mov    edx,DWORD PTR [ebp-0x8]
  417ee9:	imul   edx,DWORD PTR [ebp-0x20]
  417eed:	mov    DWORD PTR [ebp-0x8],edx
  417ef0:	shl    ebx,0x3
  417ef3:	mov    eax,DWORD PTR [ebp-0x10]
  417ef6:	add    eax,DWORD PTR [ebp-0x4]
  417ef9:	movzx  ecx,BYTE PTR [eax]
  417efc:	add    ecx,DWORD PTR [ebp-0xc]
  417eff:	mov    edx,DWORD PTR [ebp-0x10]
  417f02:	add    edx,DWORD PTR [ebp-0x4]
  417f05:	mov    BYTE PTR [edx],cl
  417f07:	mov    eax,DWORD PTR [ebp-0x4]
  417f0a:	sub    eax,0x2
  417f0d:	mov    DWORD PTR [ebp-0x4],eax
  417f10:	mov    ecx,DWORD PTR [ebp-0x4]
  417f13:	cmp    ecx,DWORD PTR [ebp+0x10]
  417f16:	jl     0x417e88
  417f1c:	pop    ebx
  417f1d:	mov    esp,ebp
  417f1f:	pop    ebp
  417f20:	ret    
  417f21:	int3   
  417f22:	jmp    DWORD PTR ds:0x418008
